identify compliant nodes on a path between a source S and a destination D, we
ﬁrst need to discover all the nodes along the path. To this end, we collect an
ICMP traceroute from S toward D. Let us suppose that the destination D pro-
(cid:2)
(cid:2)DDDD. For each discovered address
vides two timestamps when probed with D
(cid:2)
(cid:2)YDDY collects four
Y, we send two packet probes D
timestamps, then Y is a compliant node. Indeed, four timestamps imply that
Y inserted the ﬁrst timestamp along the forward path (otherwise, D would not
have been able to insert its own timestamp), and Y inserted its second times-
tamp along the reverse path (because the destination D inserted its timestamp
(cid:2)
before).4 Non-compliant nodes (i) simply ignore the TS option (D
(cid:2)YDDY and
(cid:2)
(cid:2)DYYY collect none and one timestamp, respectively) or (ii) provide a times-
D
(cid:2)
(cid:2)DYYY collect between two
tamp only on the forward path (D
and three timestamps and one timestamp respectively) or (iii) provide a times-
(cid:2)
(cid:2)DYYY collect one and more
tamp only on the reverse path (D
than one timestamp, respectively). We refer to the latter two cases as forward
and backward stampers. Forward stampers are nodes that do not appear on the
reverse path while backward stampers are more challenging to explain: these
nodes are discovered along the forward path but insert a timestamp only when
traversed on the reverse path. Load balancing and oﬀ-path addresses [13, 17, 18]
may explain this behavior.5 When the destination provides only one timestamp,
(cid:2)
(cid:2)YDDY and D
(cid:2)
(cid:2)YDDY and D
4 Previous work exploited a similar approach to assess symmetric link traversal [15,16].
5 Standard-compliant routers set as source address of Time Exceeded replies the
address associated to the outgoing interface causing Traceroute to report addresses
associated to interfaces not actually traversed by the traﬃc sent to the Traceroute
destination [13, 17, 18].
Dissecting Round Trip Time on the Slow Path with a Single Packet
93
1
F
D
C
0.5
2
0
0
1
F
D
C
0.5
0
0
0.2
)
Ψ
(
s
e
d
o
N
t
n
a
i
l
p
m
o
C
d
e
d
n
u
o
B
l
a
b
o
G
l
1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
2
4
6
8
10
Window (ν)
12
14
16
4
6
8
10
12
Nodes per path (absolute)
Compliant Nodes
Forward Stampers
Backward Stampers
0.4
0.6
0.8
Nodes per path (fraction)
Fig. 4. Compliant nodes per path
Fig. 5. Compliant nodes relative position
we make use of D
compliant when D
(cid:2)
(cid:2)YDYY probes instead of D
(cid:2)
(cid:2)YDYY collects at least three timestamps.
(cid:2)
(cid:2)YDDY. In this case, a node is
To generate a hitlist of suitable destinations, we extracted the addresses that
(cid:2)
(cid:2)DDDD in a large-scale ex-
provided at least one timestamp when probed with D
perimental campaign from our previous work [5]. Of 1.7M IP addresses probed,
36% replied providing timestamps. From these addresses, we randomly selected
one representative IP for each AS [4]. The ﬁnal hitlist comprises 3, 133 distinct
ASes, including all Tier-1 ISP networks6 and 35 out of 50 top-10 ASes for each
region, according to the APNIC weekly routing table report. We then performed
another experimental campaign using 116 PlanetLab nodes [3] as vantage points
(VPs). Each VP made the following steps for each destination of the hitlist:
(cid:2)
(cid:2)DXXX, to check if the destination is
ﬁrst, it sent two probes, D
still responsive and is not an extra-stampers (see Sec. 2). Second, it performed
a traceroute toward the destination. Third, for each address Y discovered along
(cid:2)
(cid:2)YDYY depending on the number of times-
the path, it sent a D
(cid:2)
(cid:2)DYYY. After removing about 90 K
tamps provided by the destination) and D
paths toward extra-stamping destinations and 50 K paths toward addresses un-
responsive for a subset of vantage points due to in-transit ﬁltering, our ﬁnal
dataset comprises 223, 548 distinct paths.
(cid:2)
(cid:2)DDDD and D
(cid:2)
(cid:2)YDDY (or D
Fig. 4 reports the compliant nodes observed per path. Ideally, we would like
all intermediate routers to be compliant, in order to split the RTT into all the
available chunks. On the other hand, just a single compliant node (W ) allows
us to split the RTT into RTTS,D(S, W) and RTTS,D(W, D), thus providing
much more information on the network status than a classic RTT estimation.
We found that about 77.4% of the paths contain at least one compliant node
and 27.3% contain more than four compliant nodes. On average, we observed 2.5
compliant nodes, 2.1 forward stampers, and 2.7 backward stampers per path.
This result means that, on average, about 17% of the nodes in each scanned
path are compliant.
6
http://en.wikipedia.org/wiki/Tier_1_network#List_of_tier_1_networks. Au-
gust 1, 2013.
94
P. Marchetta et al.
Since compliant nodes represent meeting points between the forward and re-
verse path and most paths in the Internet are asymmetric at the router level [12,
23], we expect most compliant nodes to appear close to the source or the desti-
nation. Our experimental results partially conﬁrm this hypothesis. Let Ω be the
set of traceroute traces and p a particular trace comprising n nodes (a1, .. , ai,
.. , an). Also, let C be the overall number of compliant nodes contained in the
dataset. To investigate the position of the compliant nodes, we used a window
ν to compute the bounded compliant nodes Φ(p, ν) representing the number of
compliant nodes on the path p appearing within ν hops from the source or the
destination, i.e the compliant nodes contained in (a1, .. aν) and (an−ν, .. an).
The global bounded compliant nodes Ψ (ν) =
represent the global
fraction of compliant nodes contained within ν hops from the source or the des-
tination when considering all the paths. Fig. 5 depicts how the global bounded
compliant nodes varies with ν. If the hypothesis is true, then the global bounded
compliant nodes should quickly tend to one. The ﬁgure shows evident though
not sharp growth: about 72% of all the compliant nodes occur within 5 hops
from the source or the destination, with about 15% appearing just one hop after
the source or before the destination. These results conﬁrm that the majority of
the compliant nodes are located near the two end points of the paths, while there
is also a signiﬁcant percentage of compliant nodes in the middle of the paths.
p∈Ω Φ(p,ν)
(cid:2)
C
Applications. We now report preliminary potential use cases of the proposed
approach.
Per-Autonomous System RTT contribution. Our approach can isolate the RTT
contribution of entire ASes. Consider again the trace in Fig. 1(a). Our goal is to
isolate the RTT contribution of the provider network, AS2907. To this end, we
monitored the path by using both the ping command and our approach (the last
hop within AS2907, 150.99.2.54, is a compliant node). As anticipated in Sec. 1,
when using ping to estimate the RTT up to the last hop within AS2907 and up to
the destination with packet probes sent closely in time, we observed inconsistent
results, as reported in Fig. 1(b). Often, the average RTT up to the intermediate
hop is higher than the RTT up to the destination (see the negative diﬀerence
values in Fig. 1(b)). Our approach, instead, always provides coherent results. As
shown in Fig. 6(a), the estimated contribution of the AS2907 is always a fraction
of the whole RTT. Results obtained with ping do not provide any meaningful
information about the impact of the AS2907 on the end-to-end performance. As
shown in Fig. 6(b), according to ping, the AS2907 RTT contribution represents
on average 106% of the whole RTT, an unreasonable result. On the other hand,
thanks to our approach, we can conclude that the AS2907 RTT contribution on
the slow path is on average 76.8% of the whole RTT. The packet probes spent
more than two-third of the time within the provider network.
Our approach also isolates the RTT contribution of a target AS network
when the ﬁrst hop within this AS is a compliant node. In the dataset collected
to evaluate the applicability, the last hop within the provider AS (the ﬁrst hop
within the targeted AS) is a compliant node in 44, 846 (22, 236) paths, about
20% (9.95%) of the paths.
Dissecting Round Trip Time on the Slow Path with a Single Packet
95
T
T
R
p
o
H
e
t
i
a
d
e
m
r
e
t
I
n
−
T
T
R
n
o
i
t
a
n
i
t
s