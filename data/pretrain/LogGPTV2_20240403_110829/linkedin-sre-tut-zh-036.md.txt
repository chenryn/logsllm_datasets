# 操作概念
> 原文：
*   解释解释+分析
    解释分析来自优化器的查询计划，包括如何连接表，扫描哪些表/行等。
    Explain analyze 显示上述信息和附加信息，如执行成本、返回的行数、花费的时间等。
    这些知识对于调整查询和添加索引非常有用。
    看这个性能调音[教程视频](https://www.youtube.com/watch?v=pjRTLPeUOug)。
    查看[实验室部分](https://linkedin.github.io/school-of-sre/level101/databases_sql/lab/)，获得关于索引的实际操作。
*   [慢速查询日志](https://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)
    用于识别慢速查询(可配置阈值)，在配置中启用或随查询动态启用
    查看关于识别慢速查询的[实验部分](https://linkedin.github.io/school-of-sre/level101/databases_sql/lab/)。
*   用户管理
    这包括创建和更改用户，如管理权限、更改密码等。
*   备份和恢复策略，优点和缺点
    使用 mysqldump 的逻辑备份-较慢，但可以在线完成
    物理备份(复制数据目录或使用 xtrabackup) -快速备份/恢复。复制数据目录需要锁定或关闭。xtrabackup 是一个改进，因为它支持不关机的备份(热备份)。
    其他- PITR，快照等。
*   使用重做日志的故障恢复过程
    崩溃后，当您重新启动服务器时，它会读取重做日志并重放修改以进行恢复
*   监控 MySQL
    关键 MySQL 指标:读取、写入、查询运行时间、错误、慢速查询、连接、运行线程、InnoDB 指标
    关键操作系统指标:CPU、负载、内存、磁盘 I/O、网络
*   分身术
    将数据从一个实例复制到一个或多个实例。有助于横向扩展、数据保护、分析和性能。Binlog 主服务器上的转储线程，辅助服务器上的复制 I/O 和 SQL 线程。策略包括标准异步、半异步或组复制。
*   高可用性
    处理软件、硬件和网络故障的能力。对于需要 99.9%以上正常运行时间的任何人来说都是必不可少的。可以通过 MySQL、Percona、Oracle 等的复制或集群解决方案实施。需要专业知识来设置和维护。故障转移可以是手动的、脚本化的或使用 Orchestrator 等工具。
*   [数据目录](https://dev.mysql.com/doc/refman/8.0/en/data-directory.html)
    数据存储在特定的目录中，每个数据库中包含嵌套的数据目录。还有 MySQL 日志文件、InnoDB 日志文件、服务器进程 ID 文件和其他一些配置。数据目录是可配置的。
*   [MySQL 配置](https://dev.mysql.com/doc/refman/5.7/en/server-configuration.html)
    这可以通过在启动时传递[参数来完成，或者在](https://dev.mysql.com/doc/refman/5.7/en/server-options.html)[文件](https://dev.mysql.com/doc/refman/8.0/en/option-files.html)中完成。MySQL 查找配置文件有几个[标准路径](https://dev.mysql.com/doc/refman/8.0/en/option-files.html#option-file-order)，`/etc/my.cnf`是常用路径之一。这些选项被组织在标题下(mysqld 用于服务器，mysql 用于客户端)，您可以在接下来的实验中更深入地了解它们。
*   [日志](https://dev.mysql.com/doc/refman/5.7/en/server-logs.html)
    MySQL 有各种用途的日志——一般查询日志、错误、二进制日志(用于复制)、慢速查询日志。默认情况下只启用错误日志(以减少 I/O 和存储需求)，其他日志可以在需要时启用——通过在启动时指定配置参数或在运行时运行命令。[日志目的地](https://dev.mysql.com/doc/refman/5.7/en/log-destinations.html)也可以通过配置参数进行调整。