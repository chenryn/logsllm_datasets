(S&P).
[41] B. Liu, C. Zhang, G. Gong, Y. Zeng, H. Ruan, and J. Zhuge,
“FANS: Fuzzing Android native system services via automated
interface analysis,” in 29th USENIX Security Symposium, 2020.
[42] “Android phone manufacturer market share,” https://www.
appbrain.com/stats/top-manufacturers.
https://www.htc.com/us/support/
Alcatel https://alcatelﬁrmware.com
ASUS
Google https://developers.google.com/android/images/
Samsung https://www.sammobile.com
HTC
Huawei https://huaweistockrom.com/
OnePlus https://www.oneplus.com/support/
Oppo
Vivo
Xiaomi https://c.mi.com/global/miuidownload/index
ZTE
Other
https://oppo-au.custhelp.com
https://vivoﬁrmware.com
https://www.asus.com/support/
https://www.ztedevices.com/en/support/
https://androidmtk.com
https://www.stockrom.net
https://ﬁrmwarecare.com
https://ﬁrmwareﬁle.com
https://easy-ﬁrmware.com
A Appendix
A.1 Analyzed Firmware
Table A.1 provides the details of the ﬁrmware images ana-
lyzed by DEFINIT. At the time of writing, Android v11.0
was recently released and only a few vendors provided public
Android v11.0 images.
A.3 Market Share of Impacted Vendors
Table A.2 shows the global market shares of the impacted
vendors (anonymized) and their shares of veriﬁed vulnerabili-
ties in our ﬁndings. Note that these are market shares of the
vendors rather than the speciﬁc impacted devices and Android
versions, which we were unable to obtain. We used Android
vendor market share data from AppBrain [42].
Table A.2: Anonymized vendor data showing global market share
and their ratio of introduced vulnerabilities.
Table A.1: Summary of the tested Android ﬁrmware.
Vendor
Alcatel
ASUS
BLU
Coolpad
Google
Hisense
HTC
Huawei
Inﬁnix
Itel
Lava
Lenovo
Nokia
OnePlus
Oppo
Realme
Samsung
Tecno
Vivo
Xiaomi
ZTE
total
#Firmware #Apps
1,088
4,093
2,034
609
3,885
1,489
1,148
574
2,896
1,529
2,579
774
2,578
6,450
5,792
4,652
9,700
3,142
2,167
5,293
2,160
64,632
6
15
13
4
20
10
5
6
13
9
15
5
11
19
19
14
22
15
9
19
10
259
v8
4
5
5
4
5
10
5
6
2
4
10
0
3
5
5
0
4
4
4
5
3
93
v9
2
5
6
0
6
0
0
0
5
5
5
4
3
5
5
3
4
5
1
6
5
75
v10
0
5
2
0
5
0
0
0
6
0
0
1
5
5
6
11
10
5
4
8
2
75
v11
0
0
0
0
4
0
0
0
0
0
0
0
0
4
3
0
4
1
0
0
0
16
A.2 Firmware Acquisition
Vendor %Vulnerability %Market Share
8.9%
2.8%
7.6%
0.5%
0.5%
0.6%
10.8%
0.6%
 /sys/fs/selinux/enforce
We downloaded ﬁrmware images from the following sources:
6Additional rules are available at https://kryptowire.com/deﬁnit.
3700    30th USENIX Security Symposium
USENIX Association
Sniff Modem Trafﬁc The following rule detects calls to
the diag_mdlog utility to capture and dump modem trafﬁc
to a path on external storage, which is readable by any app
that has been granted permission to read external storage.
conditions :
(diag_mdlog|diag_mdlog_system|oppo_diag_mdlog) * (- f|-o
) $sdcard/*
Here, $sdcard is a common internal rule that matches a
path preﬁx on external storage:
sdcard: /sdcard | /mnt/sdcard | /storage/self/primary
| /storage/emulated/0 | /data/media/0
Read System Logs The following rule captures the leakage
of Logcat logs to external storage.
conditions :
logcat * (- f|>) $sdcard/*
| logcat * (- f|>) *
(mv|cp) * $sdcard/*
Record Screen The following rule detects the usage of the
screen record command where the resulting video ﬁle is stored
on external storage.
conditions :
screenrecord * $sdcard
| screenrecord *
(mv|cp) * $sdcard
Factory Reset The following rule detects the sending of a
broadcast Intent message that initiates a factory reset of the
device, wiping all user data.
conditions :
am broadcast * -a android. intent . action .MASTER_CLEAR *
Read Kernel Logs The following rule detects access to the
the kernel logs when leaked to a path on external storage.
conditions :
(dmesg|klogd|/proc/kmsg|/dev/kmsg) * (-o|>|-f ) $sdcard
| (dmesg|klogd|/proc/kmsg|/dev/kmsg) *
(mv|cp) * $sdcard
Sniff Network Trafﬁc The following rule detects calls to
the tcpdump utility to capture and dump network trafﬁc to a
path on external storage.
conditions :
tcpdump * (-w|>) $sdcard/*
| tcpdump (-w|>) *
(mv|cp) * $sdcard
Read Wi-Fi Passwords The following rule detects access
to the contents of the /data/misc/wiﬁ/wpa_supplicant
.conf ﬁle containing the Wi-Fi passwords which are subse-
quently written to external storage.
conditions :
cp /data/misc/wifi/wpa_supplicant.conf $sdcard
| cat /data/misc/wifi/wpa_supplicant.conf > $sdcard
A.5 Routines Exposed via the GUI
We provide measurements of exposed Init routines and manu-
ally veriﬁed vulnerabilities that were only reachable via GUI
entry points in Tables A.3 to A.5. Attackers may be able to
exploit some exposed routines by tricking the user into inter-
acting with the GUI of an exported component in a privileged
app. While this requires user interaction, it is still a valid
attack vector with a relatively low complexity [12].
Table A.3: Exposed routines only reachable via the GUI.
Version
8
9
10
11
Total
Exposed
221 (0;12;2.4)
109 (0;5;1.5)
78 (0;4;1.0)
27 (0;4;1.7)
435 (0;12;1.7)
Exposed Sensitive
42 (0;5;0.5)
44 (0;5;0.6)
35 (0;3;0.5)
9 (0;4;0.6)
130 (9;5;0.5)
Counts are ‘total (min;max;avg per ﬁrmware per version)’
Table A.4: Exposed functionalities only reachable via the GUI.
Category
Device settings
Sensitive data
Networking
Package management
Permission control
Power management
Process management
UI interaction
Total (unique)
Total Apps Firmware Vendors
8
2
9
3
1
7
12
0
14
37
8
32
29
6
23
54
0
103
21
5
32
17
5
14
51
0
71
31
8
32
29
6
17
54
0
89
Table A.5: Veriﬁed vulnerabilities requiring user interaction and the
functionalities they allow an unprivileged attack app to perform.
Impact
Read system logs
Sniff modem trafﬁc
Sniff Wi-Fi trafﬁc
Sniff Bluetooth trafﬁc
Read dumpstate
Read dumpsys
Read kernel logs
Read bugreport
Read radio logs
Disable SELinux
Reboot into recovery
Reboot device
Disable Wi-Fi
Disable NFC
Total (unique)
Total Apps Firmware Vendors Versions
3
9,10
3 9,10,11
10
2
10,11
2
2
10,11
10,11
2
10
2
10
2
10,11
2
1
8,9
8,9
1
8,9,10
7
9,10
2
11
1
9
8–11
11
13
7
10
10
10
8
8
10
6
7
17
15
2
134
11
13
7
10
10
10
8
8
10
5
4
14
8
2
35
11