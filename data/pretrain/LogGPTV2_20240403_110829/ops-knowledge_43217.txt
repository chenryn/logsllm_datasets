User: In Ubuntu, I used to have (two hours ago) three versions of python :

2.7 and 3.4.0 installed by default in 'usr/bin'
3.4.3 that I built manually from the official source-code, which I found was in 'usr/local/bin'

(that means, at a certain point i was able to run the tree versions of python at the same time)
But now, the 3.4.0 version has become a 3.4.3, now i have a 2.7 and two 3.4.3 (one in '/usr/bin' and the other in '/usr/local/bin')
This happened while i was experimenting with PIP. So I'm not able to retrace what I actually did.
My questions are :

Why building the 3.4.3 didn't upgrade the existing 3.4.0, but
instead it made a new installation in '/usr/local/bin' ?
What do you think actually happened that upgraded the 3.4.0 to a 3.4.3 ?
Is it 'okay' to have two installations of the same version (3.4.3) of python in my system ?
Assistant: The version 2.7 and 3.4 are your distribution official pythons. To upgrade their versions, Ubuntu should release new packages for them. 
When you install a new python by yourself it goes to /usr/local/bin.
I don't recommend having two similar pythons on your system, it will probably be difficult to know whether a package is installed into either or the site-packages. You would have to be careful with pip too.
I suggest you remove the pythons installed with apt-get and keep yours in /usr/local/bin.