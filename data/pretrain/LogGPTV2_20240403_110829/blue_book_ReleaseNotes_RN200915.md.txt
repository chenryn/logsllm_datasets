## 200915 (AzSK v.4.13.0)
### Feature updates
*   CA SPN old credentials cleanup:
    *	When the below command is run to renew CA certificate, a new workflow will offer to delete existing old credentials:
    ```Powershell
    Update-AzSKContinuousAssurance –sid $sub -RenewCertificate
    ```
    *   The ```-SkipCertificateCleanup``` switch may be used to skip deletion of older certificates.
*	Security scanner for Azure DevOps (ADO)/ADO Security Scanner extension:
    *	The key highlights for the Azure DevOps (ADO) security scanner release are (a) durable check-pointing for Azure hosted continuous assurance scans, (b) interfacing bug logging feature with service tree data and (c) renaming the module/extension/cmdlets/controls/features etc. from ‘AzureDevOps’ to ‘ADO’. With this release, ADO scanner is ready for CSEO-wide deployment.
    *   [Click here](https://idwebelements/GroupManagement.aspx?Group=azskadop&Operation=join) to subscribe to get detailed feature updates of ADO security scanner.
* Security Verification Tests (SVTs):
    *	N/A.
* Log Analytics:
    * N/A.
* ARM Template Checker:
    * N/A.
* Org policy/external user updates (for non-CSEO users):
    * N/A.
Note: The next few items mention features from recent releases retained for visibility in case you missed those release announcements:
*	Management of DevOps Kit-based AAD applications:
    *	You can list all the DevOps Kit-based service principals (used in continuous assurance) that are owned by you via the Get-AzSKInfo cmd marking those that are actively used for CA scans.
    ```Powershell
        Get-AzSKInfo –InfoType SPNInfo
    ```
*	Security Scanner for Azure DevOps (ADO) 
    *	You can try the scan cmdlet using:
    ```Powershell
    #ADO scan cmdlet is in a separate module called AzSK.AzureDevOps!
    Install-Module AzSK.AzureDevOps -Scope CurrentUser -AllowClobber    
    Get-AzSKAzureDevOpsSecurityStatus -OrganizationName "MicrosoftIT"`
                                        -ProjectNames "OneITVSO"`
                                        -BuildNames "build_name_here"`
                                        -ReleaseNames "release_name_here"  
    ```
*	Credential Hygiene helper cmdlets  
    * ```New-AzSKTrackedCredential``` to onboard a credential for tracking via DevOps Kit. You can set the reminder period (in days) for the credential.
    * ```Get-AzSKTrackedCredential``` to list the onboarded credential(s).
    * ```Update-AzSKTrackedCredential``` to update the credential settings and reset the last updated timestamp.
    * ```Remove-AzSKTrackedCredential``` to deboard a credential from AzSK tracking.
*	Privileged Identity Management (PIM) helper cmdlets (from last sprint)  
    * ```Set-AzSKPIMConfiguration``` (alias ```setpim```) for configuring/changing PIM settings
    * ```Get-AzSKPIMConfiguration``` (alias ```getpim```) for querying various PIM settings/status
    * Activating your PIM role is now as simple as this:
      ``` setpim -ActivateMyRole -SubscriptionId $sub -RoleName Owner -DurationInHours 8 -Justification 'ad hoc test'  ```
    * See docs [here](https://github.com/azsk/DevOpsKit-docs/blob/master/01-Subscription-Security/Readme.md#azsk-privileged-identity-management-pim-helper-cmdlets-1) for more.
*	(Preview) Security Scan for Azure Active Directory (AAD)
    *	You can scan security controls for your AAD tenant (as either an admin or even as a regular user) using the DevOps Kit AAD Security Scan module.
    *	Use following steps:
        ```Powershell
        # AAD scan cmdlets are packaged as a separate module (AzSK.AAD)
        Install-Module AzSK.AAD -Scope CurrentUser -AllowClobber
        Import-Module AzSK.AAD
        Get-AzSKAADSecurityStatusTenant    # check the tenant (admin)
        Get-AzSKAADSecurityStatusUser      # check objects you own (user)
        ``` 
    *	Caveats: 
        * Do not run these in the same PS session as AzSK. Start a new PS console.
        * Az- modules require .Net Framework v4.7.2.
        * By default, the current cmdlets will scan just 3 objects of each type (Apps/SPNs/Groups, etc.). This is until we work out how best to group/batch scans when scanning the entire tenant. If you want to scan more objects you can use the '-MaxObj' switch in the cmdlets.
### Other improvements/bug fixes
* Subscription Security:
    *   Added support for configuring standard pricing tiers for all the resource types supported in Azure Security Center (ASC) via the ```-SetASCTier``` switch in the Set-AzSKAzureSecurityCenterPolicies cmd.
    ```Powershell
    Set-AzSKAzureSecurityCenterPolicies -SubscriptionId $sub -SetASCTier
    ```
*	Added four controls to strengthen the subscription RBAC hygiene:
    *	```Azure_Subscription_Cleanup_Deleted_Object_Access``` control checks for deleted identities having access on subscription.
    *	```Azure_Subscription_Remove_Access_For_Orphaned_Applications``` control checks for orphaned applications (without any owner) having access on subscription.
    *	```Azure_Subscription_Check_Indirect_Access_Via_Applications``` control checks for applications with privileged roles but their owners do not have any access in subscription.
    *	```Azure_Subscription_Review_Inactive_Identities``` control checks for identities that have been inactive in the subscription over the past 90 days.
    Note: These controls require owner access to subscription and will not be evaluated via continuous assurance.
* SVTs: 
    *	In keeping with the change in frequency of SDL cycle, attestation expiry period of the below controls has been updated to 180 days. 
        *	Azure_APIManagement_AuthN_Verify_Delegated_Authentication
        *	Azure_AppService_AuthN_Use_AAD_for_Client_AuthN
        *	Azure_Automation_DP_Use_Encrypted_Variables
        *	Azure_APIManagement_DP_Dont_Checkin_Secrets_In_Source
        *	Azure_CloudService_AuthN_Use_AAD_for_Client_AuthN
        *	Azure_ContainerInstances_AuthZ_Container_Segregation
        *   Azure_KeyVault_AuthN_Dont_Share_KeyVault_Unless_Trust
        *   Azure_LoadBalancer_NetSec_Justify_PublicIPs
        *	Azure_NotificationHub_AuthZ_Dont_Use_Manage_Access_Permission
        *	Azure_VirtualMachine_NetSec_Justify_PublicIPs  
    *	Fixed an issue in attestation feature where, for some controls, attestation drift was occurring if the current state of the control was a subset of the attested state.
* Controls:
    *	Fixed an issue in the AAD authentication control for APIM which was resulting in error state due to a recent change in the underlying PG API.
    *	Control to check for resource locks on ExpressRoute-connected virtual network RG will now pass if either ‘read-only’ or ‘do-not-delete’ lock is configured. Earlier, the control used to check for only the read-only lock.
    *   AAD authentication control for AKS will also support the new AKS-managed authentication.
    *	Management port control for AKS will now check for open ports in both VM and VMSS-based backend pools.
    *	The Azure_CDN_DP_Enable_Http control has been updated to check for both temporary and permanent redirect rules.
    *	Antimalware and vulnerability solution controls for VM will now pass if the equivalent ASC assessment is ‘NotApplicable’.
    *	AAD authentication control for Linux-based function apps will pass if no HTTP trigger-based functions are defined in the app.
* Privileged Identity Management (PIM):
   *	N/A.
*	CICD: 
    *	N/A.
* ARM Template Checker:
    * N/A.
* CA:
    *	Fixed an issue in the Get-AzSKContinuousAssurance which was previously throwing an exception when scanned with reader permissions on the subscription. 
* In-cluster CA:
    * N/A. 
* Log Analytics:
    * N/A.
* Others:
    *   Fixed bugs in: 
        (a) Get-AzSKInfo -InfoType ControlInfo and
        (b) Get-AzSKControlStatus -FilterTags which was previously resulting into error due to internal caching of policy files.