  0   1  99   0   0   0| 492M    0 |1206k  994M|   0     0 |  40k 1576 
  0   1  99   0   0   0| 508M    0 |1245k 1015M|   0     0 |  41k 1601 
  0   1  99   0   0   0| 516M    0 |1257k 1021M|   0     0 |  42k 1576 
  0   2  98   0   0   0| 520M    0 |1300k 1044M|   0     0 |  44k 1891 
[root@pg11 ~]# top -c -u postgres
top - 15:09:33 up 2 days,  4:48,  2 users,  load average: 0.41, 3.98, 22.70
Tasks: 516 total,   2 running, 514 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.1 us,  0.8 sy,  0.0 ni, 99.1 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem : 52819500+total, 29681988 free,  3079916 used, 49543308+buff/cache
KiB Swap:        0 total,        0 free,        0 used. 52057548+avail Mem 
  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                                                                                                                  
50168 postgres  20   0 66.436g  14264  12248 R  35.1  0.0   0:37.57 postgres: walsender postgres 172.17.20.28(48412) sending backup "pg_basebackup base backup"                                                                              
50176 postgres  20   0 66.436g  20416  18400 S  24.2  0.0   0:18.35 postgres: walsender postgres 172.17.20.29(65032) sending backup "pg_basebackup base backup"                                                                              
50154 postgres  20   0 66.433g 1.979g 1.978g S   0.0  0.4   0:01.41 /usr/pgsql-11/bin/postgres                                                                                                                                               
50155 postgres  20   0  245148   2036    596 S   0.0  0.0   0:00.00 postgres: logger                                                                                                                                                         
50157 postgres  20   0 66.434g 531212 529720 S   0.0  0.1   0:00.43 postgres: checkpointer                                                                                                                                                   
50158 postgres  20   0 66.434g 530592 529120 S   0.0  0.1   0:00.54 postgres: background writer                                                                                                                                              
50159 postgres  20   0 66.433g 526884 525420 S   0.0  0.1   0:00.28 postgres: walwriter                                                                                                                                                      
50160 postgres  20   0 66.436g   3224   1392 S   0.0  0.0   0:00.00 postgres: autovacuum launcher                                                                                                                                            
50161 postgres  20   0  247404   2252    692 S   0.0  0.0   0:00.00 postgres: stats collector                                                                                                                                                
50162 postgres  20   0 66.436g   2844   1096 S   0.0  0.0   0:00.00 postgres: logical replication launcher                                                                                                                                   
50169 postgres  20   0 66.436g   4124   1944 S   0.0  0.0   0:00.01 postgres: walsender postgres 172.17.20.28(48414) streaming 101/44000140                                                                                                  
50177 postgres  20   0 66.436g   3796   1872 S   0.0  0.0   0:00.00 postgres: walsender postgres 172.17.20.29(65034) streaming 101/44000140                                                                                                  
```
### 配置步骤
1、配置pg_hba.conf   
```
host replication all xxx.xxx.xxx.xxx/32 md5
```
2、创建replication角色用户  
```
create role repxxx login replication encrypted password 'xxx';
```
3、pg_basebackup拉取数据,注意开启SLOT，否则对于很大的数据库，可能数据备份结束后,WAL已经在主库被清除了。（有WAL归档的情况下，可以不开启SLOT。开启SLOT后，未被备库拉取的WAL不会被清除。）  
```
export PGPASSWORD=xxx
nohup pg_basebackup -F p -D $PGDATA -h 172.17.20.30 -p 1921 -U repxxx -X stream -C -S standby1 >/dev/null 2>&1 &
nohup pg_basebackup -F p -D $PGDATA -h 172.17.20.30 -p 1921 -U repxxx -X stream -C -S standby2 >/dev/null 2>&1 &
```
4、配置recovery.conf   
```
recovery_target_timeline = 'latest'
standby_mode = on
primary_conninfo = 'host=172.17.20.30 port=1921 user=repxxx password=xxx'          # e.g. 'host=localhost port=5432'
primary_slot_name = 'standby1'
recovery_target_timeline = 'latest'
standby_mode = on
primary_conninfo = 'host=172.17.20.30 port=1921 user=repxxx password=xxx'          # e.g. 'host=localhost port=5432'
primary_slot_name = 'standby2'
```
5、启动备库  
6、主库配置多副本参数  
```
synchronous_standby_names = 'ANY 1 (*)'
synchronous_commit = remote_write 
postgres=# show synchronous_commit ;
 synchronous_commit 
--------------------
 remote_write
(1 row)
postgres=# show synchronous_standby_names ;
 synchronous_standby_names 
---------------------------
 ANY 1 (*)
(1 row)
```
7、tpcb 1000亿（活跃10亿） rw 测试, QPS 5.34万。  
```
transaction type: ./rw.sql
scaling factor: 1
query mode: prepared
number of clients: 64
number of threads: 64
duration: 360 s
number of transactions actually processed: 19239053
latency average = 1.198 ms
latency stddev = 1.208 ms
tps = 53432.922774 (including connections establishing)
tps = 53435.051257 (excluding connections establishing)
statement latencies in milliseconds:
         0.003  \set aid random_gaussian(1, :range, 10.0)
         0.001  \set bid random(1, 1 * :scale)
         0.001  \set tid random(1, 10 * :scale)
         0.001  \set delta random(-5000, 5000)
         0.043  BEGIN;
         0.122  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;
         0.068  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;
         0.089  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;
         0.080  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;
         0.064  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);
         0.726  END;
```
8、tpcc 1000W , tps : 11000 , tpmC : 66W.  
```
SQL statistics:
    queries performed:
        read:                            513698640
        write:                           533163795
        other:                           79242254
        total:                           1126104689
    transactions:                        39605095 (11000.27 per sec.)
    queries:                             1126104689 (312774.25 per sec.)
    ignored errors:                      172646 (47.95 per sec.)
    reconnects:                          0      (0.00 per sec.)
General statistics:
    total time:                          3600.3729s
    total number of events:              39605095
Latency (ms):
         min:                                    0.29
         avg:                                    5.81
         max:                                 1388.75
         95th percentile:                       11.87
         sum:                            230276426.25
Threads fairness:
    events (avg/stddev):           618829.6094/1712.80
    execution time (avg/stddev):   3598.0692/0.06
```
## flashback 闪回  
[《PostgreSQL 最佳实践 - 块级增量备份(ZFS篇)验证 - recovery test script for zfs snapshot clone + postgresql stream replication + archive》](../201608/20160823_09.md)  
## 主备切换  
[《PostgreSQL 一主多从(多副本,强同步)简明手册 - 配置、压测、监控、切换、防脑裂、修复、0丢失 - 珍藏级》](../201803/20180326_01.md)  
## 修复主库, pg_rewind  
[《PostgreSQL primary-standby failback tools : pg_rewind》](../201503/20150325_03.md)  
[《PostgreSQL 9.5 new feature - pg_rewind fast sync Split Brain Primary & Standby》](../201503/20150325_02.md)  
[《PostgreSQL 9.5 add pg_rewind for Fast align for PostgreSQL unaligned primary & standby》](../201503/20150325_01.md)  
## 小结    
### 1、8K fsync IO RT    
#### 1 ecs本地ssd     
```    
22 us    
```    
#### 2 essd     
```    
119 us    
```    
### 2、8K directIO     
#### 1 ecs本地ssd    
离散读    
```    
IOPS=146k, BW=1140MiB/s (1196MB/s)(200GiB/180004msec)    
```    
离散写    
```    
IOPS=78.6k, BW=614MiB/s (644MB/s)(108GiB/180004msec)    
```    
顺序读    
```    
IOPS=147k, BW=1150MiB/s (1206MB/s)(202GiB/180004msec)    
```    
顺序写    
```    
IOPS=79.3k, BW=620MiB/s (650MB/s)(109GiB/180004m    