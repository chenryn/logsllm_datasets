title:\emphBeat-PIN: A User Authentication Mechanism for Wearable Devices
Through Secret Beats
author:Ben Hutchins and
Anudeep Reddy and
Wenqiang Jin and
Michael Zhou and
Ming Li and
Lei Yang
Beat-PIN: A User Authentication Mechanism for Wearable
Devices Through Secret Beats
Ben Hutchins
CSE Department,
University of Nevada, Reno
PI:EMAIL
Michael Zhou
CSE Department,
University of Nevada, Reno
PI:EMAIL
Anudeep Reddy
CSE Department,
University of Nevada, Reno
PI:EMAIL
Wenqiang Jin
CSE Department,
University of Nevada, Reno
PI:EMAIL
Ming Li
CSE Department,
University of Nevada, Reno
PI:EMAIL
Lei Yang
CSE Department,
University of Nevada, Reno
PI:EMAIL
ABSTRACT
Wearable devices that capture users’ rich information regarding
their daily activities have unmet authentication needs. Today’s solu-
tions, which primarily rely on indirect authentication mechanisms
via users’ smartphones, thus cumbersome and susceptible to adver-
sary intrusions. Even though there have been some eorts trying to
ll this gap, they either rely on some superior sensors, such as cam-
eras and electrocardiogram (ECG) pads, or are awkward to use, e.g.,
users are asked to perform some pre-dened movement/gesture for
authentication. Therefore, an authentication mechanism for wear-
able devices that is accurate, robust, light-weight and convenient is
in dire need.
In this paper, we present the design, implementation and evalu-
ation of a user authentication mechanism, Beat-PIN, for wearable
devices that are equipped with touch sensors. A user’s password is
a set of recorded beats when he/she taps the device. We call this
rhythm-based password as a beat-PIN, which is represented by the
timing of its beats. To achieve high authentication accuracy with
short training overhead, we propose a novel classication method.
Through extensive experimental evaluation with 124 participants,
we show that our mechanism can achieve the average EER of 7.2%
with only 7 training samples. Besides, its login time is as low as 1.7s.
We also show that its average power consumption for training and
login is 337.2mW and 181.4mW, separately, which is lower than that
for most common operations on smartwatches. More importantly,
we provide a theoretical analysis over the beat-PIN’s raw space
size and show that it is much larger than that of digit-PINs and
traditional passwords.
CCS CONCEPTS
• Security and privacy → Authentication;
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prot or commercial advantage and that copies bear this notice and the full citation
on the rst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specic permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
© 2018 Copyright held by the owner/author(s). Publication rights licensed to the
Association for Computing Machinery.
ACM ISBN 978-1-4503-5576-6/18/06...$15.00
https://doi.org/10.1145/3196494.3196543
KEYWORDS
User authentication; wearable devices; rhythm-based passwords
ACM Reference Format:
Ben Hutchins, Anudeep Reddy, Wenqiang Jin, Michael Zhou, Ming Li,
and Lei Yang. 2018. Beat-PIN: A User Authentication Mechanism for Wear-
able Devices Through Secret Beats. In ASIA CCS ’18: 2018 ACM Asia Con-
ference on Computer and Communications Security, June 4–8, 2018, Incheon,
Republic of Korea. ACM, New York, NY, USA, 15 pages. https://doi.org/10.
1145/3196494.3196543
1 INTRODUCTION
Recently, we are witnessing a new trend in the mobile device mar-
ket. Users are showing an increasing interest in wearing mobile
devices to enhance the quality of life in a way that smartphones
alone cannot deliver. These devices, which include smartwatches,
wrist bands, smartglasses, and so on, can sense, collect, and upload
physiological data in a 24⇥7 manner. Besides, they can also help
users perform many tasks, such as checking incoming text messages
and viewing urgent information, in a much more convenient way.
According to recent market reports [2, 5], it is forecasted that the
yearly shipment of wearable devices will reach 200 million in the
year 2019. Moreover, the wearable technology market is expected
to reach a value of $57,653 million by 2022, which is almost 3 times
of that in 2016 ($19,633 million) [10].
With the high penetration to people’s daily life, wearable de-
vices read and store rich information regarding their owners. For
example, in the domain of smart health, the current key application
of wearable devices focuses on tracking activities or vital signals
from the wearers, whose sensitive data, such as heartbeats, weight,
blood pressure, are collected by wearable devices. Similarly, another
wearable application in the area of tracking is child monitoring.
A simple device, e.g., smartwatch, is worn by a kid, broadcasting
his/her location to a parent or guardian. While the objective is
clearly to increase the safety of the child, the data itself represents
highly sensitive information that attackers could seek to compro-
mise. In either case above, wearers are unwilling to disclose the
information stored in their wearables to others without permission.
Therefore, user authentication are of critical needs for wearable
devices.
Before we explore existing authentication methods for wearable
devices, we’d like to rst briey cover existing solutions for gen-
eral mobile devices, especially smartphones and tablets. Generally,
Session 3: AuthenticationASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea101the most commonly used authentication methods on mobile de-
vices are password/PIN/pattern-based methods and biometric-based
methods. However, none of them is really suitable for wearables.
Typing passwords or drawing patterns on wearable devices can be
rather cumbersome due to their small input/output units. Collect-
ing and recognizing physiological biometrics, such asngerprint,
facial characteristics, hand/nger geometry, iris and retina, requires
specialized sensing hardware and dedicated processing resources
which are always missing in wearables. Due to the fact that many of
these sensors are even larger than the size of wearables themselves,
it is also impractical to equip them in wearables.
Due to the above reasons, authentication on current wearable
devices relies on a so-called “indirect mechanism”, where users can
log in to their wearables through smartphones. For this purpose, the
wearable device has to be registered and paired to the mobile device.
Besides, both devices should be carried by the user, which can
be highly inconvenient in practice. The security of this approach
is also in question. Password is only required for the rst time
during the paring process and the device will automatically be
paired for later use without checking the user’s identity. Such one-
time authentication is over optimistic by assuming that there is
no misbonding between the device and the user. Some devices
including Google Glass [4] and FitBit’s health tracker [1] allow
linking the device to online accounts instead of a mobile device,
which, however, bears security vulnerabilities as well; once the
account is compromised, so is the authentication. Nonetheless,
indirect authentication remains a dominant paradigm for wearables
despite these fundamental shortcomings because such devices are
extremely resource-constrained.
In this work, we develop a user authentication scheme, called
Beat-PIN, for wearable devices that are equipped with touch sen-
sors, e.g., a touch screen, a sensed surface, or a single button whose
output signals can be stamped. It is a new passcode-style authenti-
cation. However, rather than numbers, letters, or characters, users
choose dierent beats/rhythms when tapping on the touch sensor,
e.g., screen for a smartwatch. Thus, the rhythm of tapping serves as
the secret only known by the legitimate user. We call this rhythm-
based password as the beat-PIN1. Basically, a beat-PIN can be easily
created by the user, for example, extracting some beats from his/her
favorite songs or jingles. A beat-PIN is characterized by the timing
of its beats, which can be recorded by the device system clock.
Beat-PIN can serve as an ideal authentication method for wear-
able devices. First, unlike regular passwords or digit-PINs, which
have to be entered either on a physical or virtual keyboard, or
ngerprint and facial recognition based authentication methods,
which require superior sensors, Beat-PIN can work on any wearable
device with a simple touch sensor. Second, unlike the pattern-based
passwords, which require a large-size screen to draw on, beat-PINs
can be performed on a much smaller spot. Besides, it is resilient
to infrared attacks and smudge attacks, as a user does not leave
such kind of information on the screen when entering a beat-PIN.
Note that traditional passwords/digit-PINs and pattern based au-
thentications are reported vulnerable to these two types of attacks
1In this paper, we utilize the Italian font Beat-PIN to represent the authentication
scheme, while the regular font beat-PIN as the password itself.
[11, 12], respectively. Moreover, it is also worth mentioning that
our mechanism is friendly to sight impaired users.
Figure 1: The prototype of Beat-PIN that we develop for the
smartwatch. A beat-PIN is characterized by the timing of its
beats.
Our mechanism is composed of two stages. In the enrollment
stage, each user is asked to create his/her own beat-PIN and en-
ter them multiple times for training purposes. During the login
stage, the user simply enters the previously chosen beat-PIN to
access the device. If it matches with the training samples, the user
is authorized; otherwise, it is blocked. In order to achieve high
authentication accuracy with low training overhead, we also pro-
pose a novel classication method, called vector comparison. To
investigate the performance of Beat-PIN, we run two user studies.
In phase-I, we recruit 124 volunteers and collect their beat-PINs via
our data collection app on smartwatches. With the dataset, we de-
rive their statistics, which are then used for the security analysis of
our mechanism. Besides, its authentication accuracy is studied with
respect to dierent parameter settings. In phase-II, we implement
the prototype, setting the parameters as the ones that produce the
best performance in the phase-I study. Another 49 volunteers are
recruited. Multiple in-eld experiments are conducted, evaluating
performances in terms of time consumption, energy consumption,
impact of user motions, and memorability. Notably, this work gives
a formal security analysis over a proposed Beat-PIN authentica-
tion, which is missing from the existing works on wearable device
authentication [14, 17, 24, 25, 32, 34, 36] and rhythm-based authen-
tication [20, 26, 33].
2 RELATED WORK
2.1 User Authentication on Wearable Devices
There have been a few existing user authentication schemes for
wearable devices. Recent development in glass-based devices has
spurred work on iris recognition [24]. The basic idea is that users
glance into a head mounted camera in order to authenticate. In order
to address imitation attacks, Wang et al. [32] presented an algorithm
that checks pupil size consistency in varying light conditions. Touch
and movement based inputs have also been explored. Chauhan et al.
[14], for instance, classied among a set of users based on gestures
performed on the built-in touchpad on the side of Google Glass.
Along this line, Li et al.’s Headbanger [25] authenticates users
Session 3: AuthenticationASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea102by monitoring their head movement patterns in response to an
external audio stimulus. Note that all the above schemes [14, 24, 25,
32] are designed specically for glass-based devices. Besides, the
authentication of [24, 32] can only be performed with the assistance
of cameras. Thus, they cannot be easily adopted by other wearables.
Yang et al.’s MotionAuth [34] collects movement data from a wrist-
worn device during gesture performance and uses this to verify user
identity. Their scheme, however, requires users to make awkward
movements, such as drawing a circle in the air, which is impractical
especially in public scenarios. Zeng et al. [36] proposed to use
ambulatory activities (e.g. walking, running) as unique markers of
the user to design an implicit authentication method. However, the
accuracy performance under some activity modes is unsatisfactory.
For instance, the accuracy rate is as low as 32% under user’s jumping
mode. Besides, as it is a continuous authentication scheme, it needs
to run at the background, which can deplete a wearable device’s
battery quickly. Chun et al. [17] developed an electrocardiogram
(ECG) biometric based user authentication. However, it is designed
just for wearable ECG sensors that are capable of acquiring accurate
ECG signals, and thus inapplicable to other general wearables.
2.2 Rhythm-Based Authentication
Only a handful existing rhythm-based authentication schemes have
been proposed so far. Wobbrock’s TapSongs [33] enables user au-
thentication on a single binary sensor by matching the rhythm
of tap down/up events to a jingle timing model created by the
user. However, its authentication accuracy is not perfect, with the
false rejection rate as high as 16.8%. Lin et al. [26] developed a
rhythm-based pairing scheme, called RhythmLink. It allows users
to securely pair a peripheral with a host device via rhythmic taps.
Notice that RhythmLink is not for user authentication. Recently,
Das et al. [20] developed a group authentication scheme, called
Thumprint, with a shared secret knock. All group members share
one secret, but individual expressions of the secret are discernible.
First of all, as none of above schemes is particularly designed for
wearable devices, they are not readily applicable to our problem. For
example, the input device for taps of TapSong [33] is the button on
the earbuds’ cord, which is unavailable in most wearables. Besides,
a comprehensive study over the system utility to examine its prac-
ticality has been missing so far. More importantly, none of them
provides a formal security analysis of rhythm-based authentication.
2.3 Keystroke Dynamics based Authentication
Keystroke authentication schemes leverage keystroke biometrics to
characterize users. Extensive eorts have been devoted to this line
of research. The preliminary work [18] conducts a feasible study of
applying keystroke dynamics on mobile devices. It is extended in
[19] where dierent neural networks, like the feed-forward multi-
layered perceptron network, the radial basis function network
and the generalized regression neural network, have been used.
It achieves the EER at 13.3% and 12.8% for 4-digit PINs and 11-digit
telephone numbers, respectively. New features are then explored
to enhance the performance of keystroke authentication. For exam-
ple, KenSens [21] passively authenticates users via examining the
specic location touched on each key, the drift from nger down to
nger up, the force of touch, the area of press. Zheng et al. [37] then
proposed to rely on more sensors (e.g., accelerometers) other than
purely touchscreen. Their approach reduces an average EER down
to 3.65%. Frank et al. [22] later introduced the notion of continuous
authentication by analyzing users’ keystroke dynamics.
Note that keystroke authentication explores the biometric in-
formation inherent in people’s typing behaviors, which relies on
“something you are”; while in our case, a beat-PIN is a rhythm-based
password, which can be viewed as “something you know”. Besides,
the adoption of keystroke authentication to wearable devices is
largely hindered by their hardware constraints, as keystroke authen-
tication must be performed on regular keyboards, either physical
or soft ones, which are usually unavailable for wearables.
3 BEAT-PIN CHARACTERIZATION AND
FEATURES
3.1 Denition of Beat-PINs
A beat-PIN is simply a set of time instances recored by the system
clock when a user taps the device. Take a smartwatch as an example.
A beat-PIN is generated when the user taps the screen. Figure 2
gives the example of two beat-PINs. Tapping onset (or action-down)
and tapping oset (or action-up) mean that the screen is pressed
and released, respectively. The time duration between two adjacent
tapping onset and oset stands for one “beat”. Similarly, the time
duration between two adjacent tapping oset and onset stands for
one “space”. The length of a beat-PIN is considered as how many
beats it contains. For example, the length of both beat-PINs shown in
Figure 2 is 8. Essentially, beat-PINs could be interpreted as “rhythm
passcode”. A well-known existing rhythm passcode is the Morse
code. It encodes letters and numbers as standardized sequences
of short and long signals called “dots” and “dashes”. The dash and
dot are represented by some xed time durations. However, Morse
code falls short in user authentication due to its memorability issue,
as there is a complicated mapping rule between a letter/number
and its corresponding Morse code.
Figure 2: Two beat-PIN examples.
3.2 Features in Beat-PINs
Apparently, if two beat-PINs have dierent lengths, they are not
the same. To distinguish between beat-PINs of the same length,
we further explore their following features, tapping time instance,
tapping interval, and relative interval.
Tapping time instance. Each beat-PIN can be uniquely identi-
ed by a set of tapping onsets and tapping osets, indexed by their
time instances, i.e.,   = { 1, 2,··· , n} and   = { 1,  2,··· ,  n},
where n is the beta-PIN length. Besides, we index the time instance
when the screen is rst tapped as 0, indicating its start point. Thus,
Time (ms)0Tapping onsetTapping offsetTapping interval0Beat-PIN 1BeatSpaceBeat-PIN 2Session 3: AuthenticationASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea103 i +1
 i