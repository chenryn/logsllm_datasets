---
title:  parse_xml()
description: Learn how to use the parse_xml() function to return a dynamic object that is determined by the value of XML.
ms.reviewer: alexans
ms.topic: reference
ms.date: 01/08/2023
---
# parse_xml()
Interprets a `string` as an XML value, converts the value to a JSON, and returns the value as `dynamic`.
## Syntax
`parse_xml(`*xml*`)`
[!INCLUDE [syntax-conventions-note](../../includes/syntax-conventions-note.md)]
## Parameters
| Name | Type | Required | Description |
|--|--|--|--|
| *xml*| `string` |  :heavy_check_mark: | The XML-formatted string value to parse.|
## Returns
An object of type [dynamic](./scalar-data-types/dynamic.md) that is determined by the value of *xml*, or null, if the XML format is invalid.
The conversion is done as follows:
XML                                |JSON                                            |Access
-----------------------------------|------------------------------------------------|--------------
``                             | { "e": null }                                  | o.e
`text`	                   | { "e": "text" }	                            | o.e
``               | { "e":{"@name": "value"} }	                    | o.e["@name"]
`text`         | { "e": { "@name": "value", "#text": "text" } } | o.e["@name"] o.e["#text"]
` text text ` | { "e": { "a": "text", "b": "text" } }	        | o.e.a o.e.b
` text text ` | { "e": { "a": ["text", "text"] } }	            | o.e.a[0] o.e.a[1]
` text text `        | { "e": { "#text": "text", "a": "text" } }	    | 1`o.e["#text"] o.e.a
> [!NOTE]
>
> * Maximal input `string` length for `parse_xml` is 1 MB (1,048,576 bytes). Longer strings interpretation will result in a null object.
> * Only element nodes, attributes and text nodes will be translated. Everything else will be skipped.
## Example
In the following example, when `context_custom_metrics` is a `string` that looks like this:
```xml
    118.0
    5.0
    100.0
    150.0
    0.0
    118.0
    118.0
```
then the following CSL Fragment translates the XML to the following JSON:
```json
{
    "duration": {
        "value": 118.0,
        "count": 5.0,
        "min": 100.0,
        "max": 150.0,
        "stdDev": 0.0,
        "sampledValue": 118.0,
        "sum": 118.0
    }
}
```
and retrieves the value of the `duration` slot
in the object, and from that it retrieves two slots, `duration.value` and
 `duration.min` (`118.0` and `100.0`, respectively).
```kusto
T
| extend d=parse_xml(context_custom_metrics) 
| extend duration_value=d.duration.value, duration_min=d["duration"]["min"]
```