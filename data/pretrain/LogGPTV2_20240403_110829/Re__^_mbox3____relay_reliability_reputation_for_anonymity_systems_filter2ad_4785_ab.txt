for the same drop rate. For example, oscillating at 50% drop rate
results in a lower reputation score compared to 50% random drop
rate. Hence, for a relay to achieve good reputation, it will have to
provide good service consistently (more results available in Sec-
tion 6.1.3). In Appendix B we describe how different parametric
choices affect our reputation metric. We also analyze the stability
of our reputation model in Appendix A.
3.1 Reputation Score
To evaluate the reputation of a given Tor relay, a user keeps
track of its own local experience with the relay through a mod-
iﬁed form of exponentially-weighted moving average (EWMA).
EWMA combines both recent and historical evaluations of a cho-
sen feature which enables it to compute a representative evaluation
of the feature under question. However, a conventional EWMA as-
signs ﬁxed weights to recent and historical evaluations, and as a
result it fails to capture any oscillating behavior. In our system we
consider strategic relays, capable of altering their behavior in a way
that may beneﬁt them. Aringhieri et al. [13] proposed dynamically
modifying the weighting co-efﬁcient of EWMA to obtain a bet-
ter evaluation, but they do not consider strategic oscillations where
malicious users oscillate between building and milking their repu-
tation. Srivatsa et al. [38] proposed a PID controller-based reputa-
tion framework which can handle strategic behavior by malicious
users. We adopt a similar approach where we dynamically change
the weighting coefﬁcient of our adaptive EWMA in such a way
that it penalizes any relay exhibiting frequent behavioral oscilla-
tion. Figure 1 shows an overview of how we compute a relay’s
reputation score.
Figure 1: Block diagram of our reputation model. A feedback loop is used to model
the dynamic behavior of a Tor relay. We dynamically adjust the weighting coefﬁcient
of our EWMA based on a relay’s behavior.
Let Rn(x) represent the local reputation of relay x after n in-
teractions (where Rn ∈ [−1, 1]). The local reputation update
function is deﬁned as follows:
Rn(x) = αn(x) · Rc + [1 − αn(x)] · Rn−1(x)
(1)
with R0(x) = 1; i.e., all relays are initially assumed to be good
because we want all relays to be initially usable. Here, Rc repre-
sents the rating of the most recent experience. For simplicity we
have used a binary rating system where a user rates a relay based
on whether the circuit built through that relay was usable or not.
(cid:26) −1,
1,
Rc =
if circuit failed
otherwise
(2)
The weighting coefﬁcient αn(x) determines the degree to which
we want to discount older observations. To penalize relays oscillat-
ing between good and bad behavior, we keep track of accumulated
deviation ξn(x) from recent error δn(x), and lower reputation
proportionally (with proportional constant, Kp). The update func-
tion of αn(x) is given as follows:
αn(x) = Kp ·
δn(x)
(3)
(cid:40) Rc(x)−Rn−1(x)
1 + ξn(x)
δn(x) =
Rn−1(x)−Rc(x)
µ
ν
if Rc(x) ≥ Rn−1(x)
if Rc(x)  n2) interactions with
relays B and C respectively, then the reputation score reported for
relay B is more close to its stable score than that reported for C.
We, therefore, formulate the conﬁdence factor as a monotonically
increasing function of the number of interactions with a given relay.
We use the following conﬁdence metric:
Cn(x) = β
1
n
(6)
where n represents the number of times a user has communicated
through relay x. Here, β (0  kσ as outlier.
Here, k represents to what degree of deviation we are willing
to tolerate from the expected ranking score. We ﬁlter outliers in
both directions because when a large fraction of the guards are
compromised, compromised exits tend to obtain a higher rank-
ing score (as majority of the circuits have a compromised guard
in such scenario) compared to the other honest relays.4
From a security perspective, we are interested in cases when
In such cases, we can
clients have some compromised guards.
adopt the following two strategies with respect to selecting guards:
• Strategy 1: Consider all guards that are not outliers.
• Strategy 2: Consider only the highest ranked guard.
The reason behind using strategy 2 is that if 1 or 2 of the guards are
compromised then their reputation score should be lower than that
of the honest ones, so strategy 2 helps to ﬁlter out potentially com-
promised guard relays. We evaluate both strategies later in Section
6. We want to point out that clients consider the ﬁltered list of Tor
relays (after proﬁling a large set of Tor relays) for future circuit
construction following Tor’s conventional bandwidth-proportional
path construction protocol.
5. PROBABILISTIC ANALYSIS
In this section we probabilistically analyze the effectiveness of
Re3 in ﬁltering out compromised relays under four adversarial
strategies. Filtering is done based on the ranking score of relays,
which in turn is computed based on the fraction of time a relay re-
ceives positive (+ve) and negative (-ve) feedback from a user (see
equation (2)). Hence, we conduct our analysis by computing the
4Under our assumption a high ranking score does not always imply a trustworthy
relay, rather a ranking score in the vicinity of the expected ranking score implies a
trustworthy relay.
probability of receiving positive and negative feedback for differ-
ent types of relays. First, we analyze the selective DoS attack sce-
nario. Next, we analyze the impact of targeted attack against Re3;
followed by an analysis of creeping-death attack. Finally, we an-
alyze random drop strategy where the adversary randomly drops
non-compromised circuits to masquerade its true nature. To carry
out our probabilistic analysis we consider the following parame-
ters:• g: fraction of guard relays per user that are compromised (by
default each user has 3 guard relays).
• g(cid:48): fraction of guard relays per user that are targeted (used for
• c: fraction of other relays in the network that are compromised.
Our probabilistic computation assumes that different types of re-
lays can appear only in the middle and exit position of a Tor cir-
cuit, as guard relays are preselected by users and they are changed
only after a period of 30 to 60 days (uniformly chosen). For the
following analyses we give more emphasis to scenarios where g =
1/3, 2/3, as g = 0, 1 are trivial scenarios.
5.1 Analysis of Selective DoS Attack
targeted attack analysis only).
We start by computing the fraction of positive and negative feed-
back that a given Tor relay will obtain when compromised relays
are carrying out selective DoS attack. For example, a compromised
exit relay will only allow a given circuit to continue if the guard
relay is also compromised. So, the probability of receiving posi-
tive feedback is at most g for a compromised exit relay. We can
similarly calculate the other probabilities. Table 1 summarizes the
different probabilities.
Now our ﬁltering protocol can successfully ﬁlter compromised
relays only if they are outliers in the reputation spectrum. We can
approximate reputation scores as the difference between the frac-
tion of positive and negative feedback. For g = 1/3, we see that
the reputation of compromised relays is less than that of honest re-
lays for any value of c  t, otherwise
both the compromised and targeted set of relays will have similar
low reputation scores causing them to be ﬁltered out. Table 2 sum-
marizes the probabilities of receiving positive and negative feed-
66back for the different types of relays (e.g., if a compromised relay
is in the middle position of a Tor circuit then it will let the circuit
continue only if the adjacent relays are not in the targeted set, this
2 (1 − g(cid:48))(1 − t), one of the terms in the table).5
corresponds to 1
Now we want to check if our ﬁltering protocol can identify re-
lays mounting targeted attacks. To do so we need to ensure that
the reputation score of compromised relays is outside the accept-
able region, i.e., outside (µ − kσ, µ + kσ). First, we approx-
imate the reputation score of the different types of relays. Next,
we compute the average (µ) and standard deviation (σ) of the top
(1 − γ) fraction of the relays. Finally, we determine the value of
k for which the reputation score of compromised relays is outside
(µ − kσ, µ + kσ).