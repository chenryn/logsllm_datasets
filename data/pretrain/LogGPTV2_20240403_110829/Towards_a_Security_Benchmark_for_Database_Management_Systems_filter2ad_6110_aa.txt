title:Towards a Security Benchmark for Database Management Systems
author:Marco Vieira and
Henrique Madeira
Towards a Security Benchmark for Database Management Systems 
Marco Vieira 
Henrique Madeira 
CISUC – University of Coimbra 
CISUC – University of Coimbra 
3030 Coimbra – Portugal 
PI:EMAIL  
3030 Coimbra – Portugal 
PI:EMAIL
Abstract 
One of the main problems faced by organizations is 
the  protection  of  their  data  against  unauthorized  ac-
cess or corruption due to malicious actions. Database 
management  systems  (DBMS)  constitute  the  kernel  of 
the information systems used today to support the daily 
operations  of  most  organizations  and  represent  the 
ultimate  layer  in  preventing  unauthorized  access  to 
data  stored  in  information  systems.  Nevertheless,  in 
spite of the key role played by the DBMS in the overall 
data  security,  no  practical  way  has  been  proposed  so 
far  to  characterize  the  security  in  such  systems  or  to 
compare alternative solutions concerning security fea-
tures.  This  paper  proposes  an  approach  to  character-
ize  the  security  mechanisms  in  database  systems  and 
database  applications,  according  to  a  set  of  security 
classes. The proposed approach is generic and can be 
applied to both DBMS (relevant for system integrators) 
and  real  database  installations  (relevant  for  database 
administrators and end-users). 
1. Introduction 
Information is nowadays one of the main resources 
of  any  organization.  In  many  cases,  the  success  of  an 
organization depends on the available information and, 
therefore, on the systems used to store and manage that 
information.  
One of the main problems faced by system manag-
ers  is  the  protection  of  the  data  against  unauthorized 
access  or  corruption  due  to  malicious  actions.  In  fact, 
due  to  the  impressive  growth  of  the  internet,  security 
attacks have become a vital concern in any information 
infrastructure. 
Databases play a central role  in the information in-
frastructure of most organizations and it is well known 
that  security  is  an  everyday  concern  of  a  database  ad-
ministrator (DBA). A DBA is responsible for develop-
ing and maintaining a database installation and is typi-
cally  someone  with  many  years  of  practice  and  a  vast 
experience  with  one  or  more  of  the  major  database 
management  systems  (DBMS)  products,  such  as  Ora-
cle  Database  Server,  Sybase  Adaptive  Server,  and  In-
formix  Dynamic  Server.  The  major  DBMS  available 
today are extremely complex and require a regular and 
demanding administration. The DBA is responsible for 
managing  all  the  aspects  concerning  the  DBMS  envi-
ronment,  including  database  performance,  recovery 
and security. 
Database  security  arises  from  the  need  to  protect 
from:  1)  intentional  unauthorized  attempts  to  access 
private  data,  and  2)  loss  or  corruption  of  critical  data 
due  to  malicious  actions.  Other  concerns  include  pro-
tecting against undue delays in accessing or using data, 
or even against malicious interferences that may cause 
denial of service. 
The main goal of security in DBMS is to protect the 
system  and  the  data  from  intrusion.  The  risk  of  intru-
sion is related to the DBMS vulnerabilities and poten-
tial  security  attacks.  The  system  vulnerabilities  are  an 
internal factor related to the set of security mechanisms 
available,  the  correct  configuration  of  those  mecha-
nisms, and the hidden flaws on the system implementa-
tion. On one hand, security attacks are an external fac-
tor  and  mainly  depend  on  the  intentionality  and 
capability of humans to maliciously break into the sys-
tem. In fact, the success of a security attack depends on 
the  vulnerabilities  of  the  system  (attacks  are  harmless 
in a system without vulnerabilities). On the other hand, 
vulnerabilities are harmless if the system is not subject 
to security attacks. 
Security  is  an  integrative  concept  that  includes  the 
following  properties  [1]:  confidentiality  (absence  of 
unauthorized  disclosure  of  a  service  or  piece  of  infor-
mation),  authenticity  (guarantees  that  a  service  or 
piece of information is authentic), integrity (protection 
of  a  service  or  piece  of  information  against  illicit 
and/or undetected modification), and availability (pro-
tection of a service or piece of information against pos-
sible denials of service caused maliciously). 
To achieve the properties mentioned above, several 
security  mechanisms  have  been  developed  in  the  past 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
years  for  many  types  of  systems  (e.g.,  operating  sys-
tems,  DBMS,  web-servers,  etc.).  These  mechanisms 
can be classified as follows [1]: 
– Secure  channels  and  envelops:  mechanisms  that 
provide  communication  in  a  secure  way.  The  in-
formation is transmitted over the network using se-
cure channels or encapsulated in envelops. 
– Authentication:  mechanisms  that  assure  that  the 
data accessed by the users is authentic. 
– Protection  and  authorization:  mechanisms  that 
protect  resources  and  data  from  unauthorized  ac-
cess and guarantee that users only do what they are 
authorized to do. 
– Auditing  and  intrusion  detection:  these  mecha-
nisms allow a posteriori analysis of the accesses to 
resources and data, allowing the detection of unau-
thorized accesses or anomalous usage. 
DBMS  have  a  long  tradition  in  high  security.  Sev-
eral mechanisms needed to protect data (e.g., user privi-
leges,  data  encryption,  authentication,  auditing,  etc.) 
have been proposed/consolidated in the database arena 
[2, 3, 4, 5]. However, in most of the DBMS, the effec-
tiveness of the security mechanisms is very dependent 
on the actual configuration chosen by the database ad-
ministrator. Nevertheless, in spite of the very important 
role played by these mechanisms in DBMS, there is no 
practical  way  to  characterize  their  effectiveness  or  at 
least to verify their correct configuration and use. This 
is just the purpose of the work presented in this paper. 
Database industry holds a reputed infrastructure for 
performance  evaluation,  where  the  set  of  benchmarks 
managed  by  the  Transaction  Processing  Performance 
Council  (TPC)  [6]  are  recognized  as  one  of  the  most 
successful  benchmark  initiatives  of  the  overall  com-
puter industry. Furthermore, dependability benchmark-
ing  has  gained  ground  in  the  last  few  years,  having 
already  led  to  the  proposal  of  a  dependability  bench-
mark for databases and transactional systems in general 
[7,  8].  Nevertheless,  security  has  been  largely absent 
from previous benchmarking effort. Thus, and in spite 
of  the  pertinence  of  having  security  benchmarks  for 
database systems, the reality is that no security bench-
mark has been proposed so far, in a clear contrast with 
the benchmarking of performance and dependability. 
Although  several  security  evaluation  methods  have 
been proposed in the past [9, 10, 11], this  work repre-
sents  the  first  contribution  towards  the  proposal  of 
standard  security  benchmarks  for  DBMS.  Previous 
proposals  are  quite  complex  and  are  not  specific  for 
database systems. To the best of our knowledge,  none 
of  the  existing  methods  is  oriented  towards  DBMS 
comparison,  and  in  particular  none  addresses  specifi-
cally data protection. In addition, existing methods can 
not be easily used by database administrators to select 
alternative DBMS or to tune real database installations. 
This paper proposes a practical way to characterize 
the  security  mechanisms  in  database  systems.  In  this 
approach  DBMS  are  classified  according  to  a  set  of 
security classes ranging from Class 0 to Class 5 (from 
the  worst  to  the  best).  For  each  class  a  set  of  security 
requirements  is  identified.  In  order  to  evaluate  a 
DBMS  several  tests  must  be  performed  to  verify  each 
requirement.  Systems  are  classified  in  a  given  class 
according  to  the  security  requirements  satisfied.  The 
proposed  approach  is  presented  through  a  concrete 
example  of  assessing  the  security  of  two  different 
DBMS (Oracle 9i and PostgreSQL 7.3). This approach 
is  generic  in  the  sense  that  it  can  be  applied  to  any 
DBMS or to an actual database application. 
The  structure  of  the  paper  is  as  follows.  Section  2 
presents some background on DBMS security and pro-
poses a set of security classes for database systems. An 
approach  to  compare  the  security  mechanisms  in 
DBMS is presented in section 3. Section 4 extends this 
approach to the assessment of security in real database 
installations. Section 5 presents a comparative analysis 
of the security features of two different DBMS and sec-
tion 6 concludes the paper and introduces future work. 
2. Assessing security in DBMS 
A typical database application is a client-server sys-
tem or a multi-tier system where a number of users are 
connected to a DBMS. In practice, the database server 
manages  tables  from  multiple  database  applications 
stored  in  different  database  schemas  (a  database 
schema  is  a  collection  of  related  objects).  Users  con-
nect to a DBMS via a client application or through the 
internet using a browser. To access the server the client 
application  must  gain  access  by  passing  through  an 
authentication  process.  DBMS  can  provide  internal 
user  authentication  (using  usernames  and  passwords) 
or  use  external  user  authentication  (using  authentica-
tion servers, such as: Kerberos, NTS, etc.).  
To  guarantee  that  users  only  do  what  they  are  au-
thorized to do, the DBMS normally implement a secu-
rity  mechanism  based  on  user  privileges.  These  privi-
leges  allow  the  system  to  control  the  actions  that  the 
users are allowed to perform. Two types of user privi-
leges  are  normally  provided:  system  privileges  and 
object  privileges.  System  privileges  are  related  to  the 
actions that user can perform (e.g., create users, create 
procedures,  create  tables,  create  indexes,  etc.).  Object 
privileges  are  related  to  the  access  to  the  database  ta-
bles (e.g., selecting, deleting, updating, inserting, etc.).  
To  provide  communication  in  a  secure  way  and 
avoid  the  access  to  data  transferred  over  the  network, 
sophisticate DBMS provide encryption mechanisms for 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
data  communication.  In  some  cases,  mechanisms  that 
allow the encryption of the data stored in the database 
tables  are  also  provided  (these  mechanisms  are  quite 
useful  as  they  allow  protection  of  data  even  when 
someone  maliciously  access  the  system).  To  allow  a 
posteriori analysis of the accesses to data, allowing the 
detection  of  unauthorized  accesses  or  anomalous  us-
age,  sophisticated  DBMS  provided  auditing  mecha-
nisms that record all the actions performed by the users. 
In a typical database application we can find data of 
diverse  levels  of  criticality,  ranging  from  non-critical 
data to data that  has to be  highly protected. The secu-
rity  mechanisms  in  a  DBMS  can  be  characterized  by 
their  capability  to  protect  data  of  different  criticality 
levels.  Note  that  data  must  be  efficiently  protected 
against  intrusion  according  to  its  level  of  criticality 
(i.e., non-critical data does not need to be protected in 
the same way as critical data). The main goal of secu-
rity  in  DBMS  is  to  protect  the  system  and  the  data 
from  intrusion,  even  when  the  potential  intruder  gets 
access to the machine where the DBMS is running. To 
protect the database from intrusion the DBA must pre-
vent and remove potential attacks and vulnerabilities.  
The vulnerabilities of a system are related to the set 
of  security  mechanisms  available  (or  not  available  at 
all),  the  correct  configuration  of  those  mechanisms 
(which is a responsibility of the DBA), and the  hidden 
flaws  on  the  system  implementation.  Vulnerability 
prevention  consists  of  guarantying  that  the  software
used has the minimum vulnerabilities possible. This can 
be achieved by using adequate DBMS software. On the 
other hand, as the effectiveness of the security mecha-
nisms  depend  on  their  correct  configuration  and  use, 
the DBA must correctly configure the security mecha-
nisms by  following  administration  best  practices.  Vul-
nerability removal consists of reducing the vulnerabili-
ties found in the system. The DBA must pay attention 
to  the  new  security  patches  released  by  software  ven-
dors and install those patches as soon as possible. Fur-
thermore,  any  configuration  problems  detected  in  the
security mechanisms must be immediately corrected.
Security  attacks  are  an  external  factor  that  depend 
on the intentionality and capability of humans to mali-
ciously break into the system taking advantage of poten-
tial vulnerabilities.  The prevention against security  at-
tacks includes all the measures needed to minimize (or 
eliminate) the potential attacks against  the system.  On 
the other hand, attack removal is related to the adoption 
of measures to stop attacks that have occurred before. 
The  main  problem  in  assessing  the  security  of  a 
given  database  system  is  that  this  measure  is  very  de-
pendent  on  the  hidden  flaws  on  the  software  imple-
mentation and on external factors, such as the ability of 
external humans (hackers) to discover and explore po-
tential vulnerabilities of the system. These factors can-
not  be  modeled  or  evaluated  directly.  This  way,  our 
proposal to security evaluation is mainly focused on the 
characterization  of  the  security  mechanisms  available 
in a given  DBMS and on the verification of their cor-
rect configuration and use (which is in fact quite prob-
lematic for the DBA). In other words, the characteriza-
tion of the potential security attacks or hidden flaws on 
the software implementation are not taken into account. 
In  this  paper  we  propose  an  approach  to  assess  the 
effectiveness of security mechanisms in DBMS. In this 
approach systems are classified using two metrics: 
– Security class (SCL): DBMS are categorized using 
a  set  of  security  classes  varying  from  Class  0  to 
Class  5.  For  each  class  a  set  of  security  require-
ments is identified. A system is classified in a given 
class if it fulfills the requirements for that class. 
– Security requirements fulfillment (SRF): to com-
plement the security class we propose the use of an 
additional  metric  that  characterizes  how  well  a 
given  system  fulfills  the  set  of  security  require-
ments (in a scale of 0 to 100). This metric is useful 
to differentiate systems in the same security class. 
It is important to note that the security classes pro-
posed have been  identified through a detailed analysis 
of  the  data  from  different  database  applications.  The 
goal was to identify a set of data criticality levels and, 
from those criticality levels, put forward a set of secu-
rity classes and define the requirements for each class.  
The  proposal  of  a  practical  way  to  benchmark  the 
effectiveness of security  mechanisms in  DBMS seems 
to be quite useful in two different scenarios: 
– Compare  different  DBMS  products  concerning 
security features in a realistic way. This ability to 
compare  would  help  end-users  to  pick  the  system 
that better fits their requirements by comparing dif-
ferent  systems, assist system  vendors in promoting 
their products (in addition, it would be an important 
tool to help system vendors to detect possible secu-
rity problems on their computer systems), help sys-
tem integrators to choose the best components for a 
given  solution, and provide researchers  with a  tool 
to validate new prototypes.
– Help database administrators  assessing security in 
real  database  installations  (systems  in  the  field) 
and, at the same time, finding the best configuration 
according to the criticality of the data stored. 
2.1. Data criticality levels 
A  typical  database  application  manages  data  with 
different  requirements  in  terms  of  security,  ranging 
from  non-critical data to data that  has to be extremely 
protected against intrusion. In order to identify the dif-
ferent  levels  of  criticality  for  data  and  to  understand 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
how  that  data  has  to  be  protected  against  malicious 
actions, we have analyzed a collection of typical data-
base  applications.  This  way,  based  on  interviews  with 
the  database  administrators  and  on  the  analysis  of  the 
data  models  from  several  database  applications,  we 
propose the following set of data criticality levels: 
– Level  1:  non-critical  data,  i.e.,  data  that  does  not 
represent  any  confidential  information  and  can  be 
easily recovered in case of destruction or modifica-
tion  due  to  malicious  actions.  Some  examples  in-
clude:  zip  codes,  list  of  countries/cities,  and  list  of 
car manufacturers, etc. 
– Level 2: data in this level must be protected against 
unauthorized  modification  (for  this  class  of  data 
unauthorized read is less critical than  unauthorized 
modification).  One  typical  example  is  the  list  of 
products  in  an  online  retail  store. This  information 
has to be protected against modification (because it 
is  used  by  the  customers  to  perform  orders),  how-
ever, the malicious access to this information isn’t, 
normally, a problem.  
– Level 3: data in this level must be protected against 
unauthorized  read  and  modification.  Most  of  the 
data in typical database applications is in this criti-
cality level. Some examples are: clients’ orders, cos-
tumers’ information, and employees’ information. 
– Level 4: critical data that has to be extremely pro-
tected  against  unauthorized  read  and  modification. 