proﬁle of the sipscan observed by the UCSD Network Telescope, strongly
suggesting that the sipscan targeted also other /8 networks.
Paciﬁc line that are made available by the MAWI WIDE project
[29] (link “samplepoint-F”). The trace set is made of daily traces
in pcap format, of 15 minutes each, where the IP addresses are
anonymized and the transport-layer payload is removed [28]. This
anonymization scheme prevented us for searching the trace specif-
ically for the sipscan packets, since we can see neither the UDP
payload signature nor the source IP addresses of the packets. In-
stead, from the analysis of the sipscan SIP headers (Figure 1), we
built a ﬂow-level signature with the following conditions for each
UDP ﬂow: (i) destination port 5060; (ii) made of a single packet;
(iii) ﬂow-size (in this case matching the packet size) between 382
and 451 bytes. We obtained the packet size range by examining all
SIP header ﬁelds that were not ﬁxed size, and how they varied (e.g.
IP addresses in ascii format take between 7 and 15 bytes). We fur-
ther sanitized the remaining ﬂows considering some isolated cases
of spikes in the MAWI traces which were using source ports outside
of the most common ranges observed on the telescope (see Figure
7). The ﬁnal result, depicted in Figure 6, is that there are almost no
packets matching the ﬂow-level signature in the days outside of the
sipscan, whereas their proﬁle during that period roughly follows the
proﬁle of the sipscan (The lack of tight precision between the two
data sets in Figure 6 is due to the MAWI samples being coarser-
 0 500 1000 1500 2000 2500 300001/0101/0801/1501/2201/2902/0502/1202/1902/26DShield Observed Sources to UDP Port 5060Date (UTC) 0 10 20 30 40 50 60 70 8001/3102/0202/0402/0602/0802/1002/1202/1402/16 0 100 200 300 400 500 600Packets Per Second (UCSD)Packets Per Daily Sample (MAWI)Date (UTC)UCSD Network Telescope Packet RateMAWI Sample-Point F Daily Packet Count5Figure 7: Distribution of the source port numbers (bin size = 100) The most
common range is 1025-5000, used by several versions of OSs from the Mi-
crosoft Windows family.
grained, 15 minutes each once per day, and from a relatively small
link).
This ﬁnding is important because the anonymization technique
used for MAWI traces preserves matching preﬁxes and IP classes
between IP addresses [28]. The analysis of this data therefore re-
vealed that, on average, 8 different /8 classes were targeted every
day by the packets traveling on this link.
3.4.4 Exploiting source-port continuity
The positive correlations of our data source with the DShield
and MAWI data sources convinced us that the sipscan hit other /8
networks as well as our own. We also found the following evidence
that the sipscan most likely targeted all the /8 networks in the IPv4
address space.
We identiﬁed a few bots scanning at a roughly constant pace
over several days. Analyzing the sequence of source ports in their
scanning packets revealed that some of these bots used incremental
source ports within a speciﬁc range assigned by the operating sys-
tem. For example, Windows XP and other Microsoft operating sys-
tems assign a new ephemeral source port in the range 1025-5000
by incrementing a global counter for each opened TCP or UDP
socket [44]. We inferred how many other connections/sessions a
bot opened between each probe sent to the darknet by following
the sequence of source ports the bot used and “unwrapping” them,
taking into account their range. In [39], Li et al. used the same
methodology to estimate the global scope of botnet scans. We could
only apply this technique to the few persistent bots (see Section 4.2)
running on an operating system conﬁgured to assign source ports
in this manner.
Figure 8 depicts the behavior of three of these bots (the bot num-
ber indicates its rank based on the number of probes they sent).
The continuous lines represent the count of probes (a UDP packet
plus at least one TCP SYN packet) observed by the UCSD Net-
work Telescope (y axis), whereas the dashed lines represent the
number of connections/sessions opened by each bot as inferred by
unwrapping its source port numbers (second y axis). For each bot
the two curves follow approximately the same trend, suggesting
that the view from the telescope is representative of the global be-
havior of the bot. The UCSD Network Telescope covers 1/256th of
the entire IPv4 address space, so a uniformly random scanning bot
will probe this /8 darknet approximately every 256 probes, or ev-
ery 512 new connections opened (every probe includes a UDP and
TCP connection attempt). We ﬁnd these subclass of bots actually
hitting our darknet every 570 packets (on average), which would
be consistent with their hosting computer opening other connec-
tions/sessions unrelated to the scan, such as legitimate user activity
or communication with the botmaster. In the next section we will
show how the bots select their target IP addresses by ﬁrst incre-
menting the most signiﬁcant byte. Therefore we can assume that
Figure 8: Estimating the global scan scope by exploiting source port con-
tinuity in scanning bots: continuous lines represent the count of probes (a
UDP packet plus at a least one TCP SYN packet) observed by the UCSD
Network Telescope (y axis), whereas the dashed lines represent the number
of connections/sessions opened by each bot as inferred by unwrapping its
source port numbers (second y axis). Each bot probes the darknet on av-
erage (approximately) every 285 global probes, suggesting that during its
absence reaches the remaining 255 /8 networks in the IPv4 address space.
the external 255 probes from the bot reach all the other /8 networks
in the IPv4 address space. In Section 4 we will also explore another
feature of the data in Figure 8: the bots proceed at different rates
and are active over different time intervals. We will refer to this
ﬁnding later in the paper.
4. ANALYSIS PART II: PROPERTIES OF THE
SIPSCAN AND OF THE BOTNET
4.1 Reverse IP Sequential order
A ﬁrst manual observation of the sipscan destination addresses
revealed that the bots were coordinated, presumably by a botmas-
ter, to choose targets in a pre-deﬁned sequence while scanning the
entire IPv4 address space. Such coordination has not yet been doc-
umented in botnet-related research literature (see Section 2). Even
more interesting, the target IP addresses incremented in reverse-
byte order – likely to make the scan covert. Reverse-byte order
scanning was considered in the context of supporting network-
friendly Internet-wide service discovery [37], but was discarded for
being difﬁcult to extrapolate metrics from partial scans. A pseudo-
random approach in selecting target addresses was also used as a
technique for non-aggressive Internet-wide measurement surveys
[32]. But to the best of our knowledge, this reverse-byte order scan-
ning has been neither empirically observed in malicious scans nor
discovered in botnet source code.
Manual examination of a sequence of 20 million addresses is
practically infeasible; even its visual representation is a challenge.
We used a visual map based on the space-ﬁlling Hilbert Curve
[43,50] to verify that the target IP addresses incremented in reverse-
byte order for the three bytes that we could observe (the most sig-
niﬁcant byte is ﬁxed in our data to the /8 of the darknet observation
point).
The Hilbert curve is a continuous fractal curve that can be used
to map one-dimensional data into two dimensions ﬁlling a square,
such as shown in Figure 9. Other researchers have effectively used
the Hilbert space layout to visualize results of Internet-wide scan-
ning or other Internet-wide data [21, 32]. The original order of
the data is preserved along the Hilbert curve in two dimensions,
 0 50000 100000 150000 200000 250000 300000 350000 0 10000 20000 30000 40000 50000 60000 70000FrequencySource Port 0 1000 2000 3000 4000 5000 6000 7000 800002/0102/0202/0302/0402/0502/0602/0702/08 0 500000 1e+06 1.5e+06 2e+06 2.5e+06 3e+06 3.5e+06 4e+06 4.5e+06# UDP Packets seen by the UCSD Network Telescope’Unrolled’ Source Port NumberDate (UTC)Bot 3 - # PacketsBot 3 - Unrolled Source PortBot 7 - # PacketsBot 7 - Unrolled Source PortBot 14 - # PacketsBot 14 - Unrolled Source Port6the entire address space. Figure 10 shows the frame for 5 Febru-
ary 2011 11:47 GMT from the full reverse-byte order animation
available at [13]. This animation proves the strong coordination of
bot activity: the progression is strictly observed by all the bots for
the entire execution of the scan, independent of (i) variations in
global scanning speed, (ii) the rates at which different bots pro-
ceed (see Section 3.4), (iii) the large number of hosts involved at
the same time and thus the possible distributed architecture of the
botnet (e.g., multiple C&C channels).
We also created a composite animation which combines both the
natural and reverse byte order heatmaps with the world map ani-
mation into a single synchronized view of both the sources and the
targets of the sipscan. This composite animation is available at [13].
The reverse IP sequential order used in this scan has signiﬁ-
cant implications. Observing this scan from a generic /24 network,
would result in a very low number of packets per day: the aver-
age speed, during the largest phase of the scan – from the 2nd to
the 6th of February – increments the least signiﬁcant byte 34 times
per day, unlikely to be detected by automated systems. This stealth
technique is even more effective when combined with the constant
turnover of bots that we illustrate in the next section.
4.2 Bot Turnover
The scanning statistics in Table 1, in particular the number of
unique source IPs (about 3 million), total number of probes (about
20 million), and the average number of destinations a source tar-
gets (6.85), suggest that there is a large turnover in the use of the
bots. Figure 11 shows the constant use of new bots throughout the
entire scan, except for the interval from approximately 7 Febru-
ary 00:00 GMT to 11 February 12:00 GMT, which exhibits sig-
niﬁcantly reduced botnet activity. The continuous line with square
Figure 9: Examples of Hilbert’s space-ﬁlling curves: orders 1, 2 and 3.
and conveniently displays data that is structured in powers of two.
Hilbert curves of order 4, 8, and 12 have 28, 216, 224 points, re-
spectively, which in turn correspond to the masks for Class C (/24),
Class B (/16), and Class A (/8) address blocks in the IPv4 number-
ing space. When mapping IP addresses to these two-dimensional
Hilbert curves, adjacent address blocks appear as adjacent squares,
even CIDR blocks (in between Class A, B, and C block sizes) are
always represented as squares or rectangles.
We visualized the progression of the IP addresses targeted by
the sipscan through an animation. Each frame represents the IPv4
address space of our darknet using a Hilbert curve of order 12, in
which each cell corresponds to one IP address of the darknet, thus
varying the 3 least signiﬁcant bytes through all the possible combi-
nations. The curve is displayed as a bitmap of size 4096x4096, with
each pixel being assigned an IP address. For each frame, the pixels
corresponding to the IP addresses that have been probed prior to
that point in time are highlighted. We also added a brightness de-
cay effect to better highlight the addresses probed in the last few
frames while displaying the animation.
Figure 10: Snapshot of our animation representing the progression over time
of the IP addresses targeted by the sipscan [13]. The darknet address space
is represented as a Hilbert curve of order 12 in which the order of the three
least signiﬁcant bytes of each address is reversed before mapping it into
the curve. Highlighted pixels correspond to IP addresses that have been
probed up to that time (5 Feb 2011 11:47 GMT, in this frame). The anima-
tion proves the reverse-byte order progression is rigorously followed by the
bots during the entire 12 days, independent of the varying rate of the sip-
scan. [The above snapshot is a modiﬁed version of the original frame from
the reverse byte order animation at [13]; we over-emphasized the fading ef-
fect to better illustrate, in a single picture, the path the scan took through
the address space.]
Drawing the Hilbert curve using IP addresses sequenced in their
natural byte order does not reveal a particular pattern in the tar-
get progression, showing the square uniformly ﬁlling across the 12
days of the scan. This animation of target progression is available
at [13]. In contrast, reversing the order of the three varying (i.e.,
least signiﬁcant) bytes yields a representation that clearly illustrates
the reverse sequential IP order rigorously followed by the sipscan:
throughout the 12 days all the bots “march” together toward ﬁlling
Figure 11: Arrival of new bots. The continuous line with squares shows the
cumulative percentage of bots that probed our darknet throughout the 12-
day scan. The continuous line with circles is the cumulative percentage of
source /24 networks. The slope of these curves indicates a constant arrival
(during the botnet’s active periods) of new bots participating in the scan.
The dashed line represents the number of unique source IPs scanning per
5-minute interval, representing the evolution of the scan over time.
symbols shows the cumulative percentage of bots that probed our
darknet over the 12-day scan. Its linear slope indicates a constant
arrival of new bots participating in the scan. To partially take into
account the effect of dynamic IP address assignment, we also plot
the cumulative sum of unique /24 networks containing the source
IP addresses (continuous line with circles). The slope of this curve
proves that new bots take part in the scan for its entire duration.
Figure 12 shows the distribution of the number of packets sent by
each bot. The diagram on the left uses a log-log scale to show all the
data, whereas the diagram on the right uses a linear scale to zoom
in to the left side of the distribution up to 10 packets. More than
1 million bots (more than 1/3 of the total) sent a single probe and
64636162605958575655545352515049484746454443424140393837363534333231302928272625242322212019181716151413121110987654321 0 10 20 30 40 50 60 70 80 90 10001/3102/0202/0402/0602/0802/1002/12 0 5000 10000 15000 20000 25000Cumulative Sources (%)Unique Source IPs (5 min bins)Date (UTC)Cum. Source IPsCum. Source /24sSource IP Rate7never participated further in the scan. The number of bots that sent
more than 100 packets during the scan is two orders of magnitude
smaller. This difference suggests rapid turnover of bots during the
scan. We hypothesize that this behavior is related to how the C&C
channels managed and assigned tasks to bots. For example, a C&C
channel may assign a list of target IP ranges to a queue of bots, in
which case it is unlikely that a single bot could reach the head of
the queue twice. In such a situation, bots that reappear in the scan
would have likely been assigned to a C&C channel with a smaller
pool of bots.
(a) Coverage
(b) Overlap
Figure 12: (left) Full histogram of packets sent per bot (log-log scale);
(right) zoomed histogram of packets sent per bot for bots that sent up to
10 packets (linear axis) Most bots sent few packets, e.g., over a third of the
bots sent a single packet during the entire scan.
In combination with the reverse-byte order property of the scan,
the high bot turnover rate makes the scan impressively covert. Not
only would an automated intrusion detection system on a /24 net-
work see only 34 packets to the same port, but they would most
likely arrive from 34 distinct IP addresses, making detection highly
unlikely.
4.3 Coordination and Adaptation
4.3.1 Coverage and Overlap
The scan fails to cover the entire darknet’s /8 address space,
probing only 86.6% of it (Table 1). On the other hand, there is
a non-negligible overlap in terms of bots hitting the same target:
about 5.7 million IP addresses were probed by more than one bot,
and on average a targeted IP is probed by 1.39 distinct bots. Whether
probed zero, one, or multiple times, the probed IP addresses are
scattered all over the address space without clusters or holes, in
both the standard and reverse representation of the address bytes.
These properties – coverage and overlap of target addresses – are
independent of the number of bots active at any given time, the
overall rate of the scan, or speciﬁc subnets being scanned. But we
did discover a correlation between coverage and overlap in targets,
which we believe is likely a function of a parameter of the scan
conﬁgured by the botmaster to support trading off completeness
and redundancy of scanning.
The representation with the Hilbert curve of the probed IP ad-
dresses in reverse byte order reveals three regions with different
densities. These regions are labeled A, B, C, in a detail of the
Hilbert-curve map in Figure 13(a) and correspond to three differ-
ent phases of the scan as indicated in Figure 13(c). Brighter areas
indicate a greater coverage of the corresponding address space: the
scan starts with a very high percentage of targets probed (“A”), af-
ter few hours a parameter is changed and the coverage signiﬁcantly
drops (“B”), ﬁnally the parameter is adjusted again and an inter-
mediate level of target coverage remains for the rest of the scan
(c) Phases over time