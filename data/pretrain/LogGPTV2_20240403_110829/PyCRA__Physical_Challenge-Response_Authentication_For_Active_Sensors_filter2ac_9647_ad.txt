### Attack Detection and PyCRA Evaluation

#### Simple Spoofing Attack Detection
We evaluated the PyCRA detection scheme for a simple spoofing attack with a sampling rate \( F_s = 10 \) kHz and a range of attack delays \( \tau_{\text{attack}} \). The results, depicted in Figure 8a, show the attack detection accuracy as a function of \( \tau_{\text{attack}} \) for various sampling rates. To simulate an attacker with zero physical delay (which is physically impossible), we provided the attacker with access to the random signal generated by PyCRA, allowing the attacker to start shutting down their actuators before PyCRA generates the physical challenge.

#### Experimental Validation
We conducted over 30 experiments on our experimental testbed to validate the robustness of the proposed security scheme. The resulting accuracy with \( F_s = 10 \) kHz is illustrated by the Receiver Operating Characteristic (ROC) curves in Figure 8a for a range of \( \chi^2 \) detection thresholds (\( \alpha \)). From this figure, it is clear that for \( \tau_{\text{attack}} \) between 500 and 700 µs, PyCRA can accurately distinguish attacked signals from normal signals if \( \alpha \) is chosen appropriately. With \( \alpha \) set to a predetermined value, we can vary \( F_s \) as shown in Figure 8b. These results indicate that increasing \( F_s \) from 10 kHz to 30 kHz reduces the required detection time to between \( \tau_{\text{attack}} = 100 \) and 200 µs.

#### Advanced Spoofing Attack
Repeating these experiments for an advanced spoofing attack yields similar results. There is no fundamental difference between the two types of attacks in terms of detection; this is governed by the dynamics of the attacker's actuator rather than the nature of the attack itself.

#### Physical Delay Property
It is crucial to evaluate the detection accuracy in terms of the physical delay property \( \tau_{\text{attack}} \) of the attacker model. In practice, state-of-the-art, low-dimension, high Q-factor hardware that provides enough power to carry out a spoofing attack will have \( \tau \approx 200 \) µs. From Figure 8b, it is apparent that PyCRA performs well within this range of practical physical delays.

#### Sampling Frequency
The results shown thus far use a relatively low sampling frequency (high-end microcontrollers can operate at up to 200 kHz). As illustrated by Figure 8b, higher sampling rates result in reduced attack detection times. However, using low sampling frequencies in our case study serves to illustrate the efficiency of the proposed detection mechanism.

### Case Study: Detection of Passive Eavesdropping on RFID

#### Introduction
In this section, we discuss the detection of passive eavesdropping attacks on active sensors. In this scenario, an adversary listens or records the same physical signals captured by the sensor. This type of attack satisfies assumptions A1–A3 described in Section 3, making it useful to extend PyCRA to such cases.

#### Passive Eavesdropping on RFID
RFID systems are commonly used for access control and object tracking. An RFID system consists of a reader and a tag. The reader continuously sends a magnetic signal to probe for nearby tags. When a tag enters the proximity, it modulates the magnetic signal to send its unique identifier to the reader.

RFID tags can be classified as either passive or active based on their energy source. Passive tags rely on the energy transmitted by the reader, while active tags have their own power supplies. Active tags can run cryptographic and security protocols to mitigate cloning attacks, whereas passive tags are more vulnerable due to their lack of computational capabilities.

Cloning of passive RFID tags can occur in two forms: 
1. The attacker uses a mobile RFID reader to place near the tag, causing the tag to respond with its unique identifier.
2. The attacker eavesdrops on the communication between the tag and a legitimate reader.

RFID protective shields and blockers are commonly used as countermeasures against the first form of cloning attacks. However, these shields are ineffective against the second type of attack, as the user must remove the shield to use the tag with the legitimate reader, allowing an adversary to eavesdrop.

#### Using PyCRA to Detect Eavesdroppers
To carry out an eavesdropping attack, a sniffer device must be placed in close proximity to the RFID reader to measure the electromagnetic waves. We show how PyCRA can detect the presence of such an attack, allowing the reader to disable communication with the tag before revealing private information.

#### Hardware Setup and Real-time Results
Figure 9 shows the hardware setup used in this case study. Two identical low-frequency RFID antennas are used: one as the legitimate reader and the other for eavesdropping. We built a PyCRA-enabled RFID reader on top of the open-source Proxmark3 board, adding random modulation to the probing signal and constructing appropriate models.

Figure 10a (top) shows the received electromagnetic wave of an RFID reader operating in the classical mode, generating a standard 125 kHz sinusoidal wave. Figure 10a (middle) shows the resulting wave when an eavesdropper uses an identical antenna to listen, making it hard to detect the eavesdropper. This is better illustrated by the residual between the two waves in Figure 10a (bottom).

Figures 10b and 10c show the results of the same case study when PyCRA is used with and without an eavesdropper present, respectively. In this mode, PyCRA occasionally halts the normal operation of the RFID reader and switches to detection mode, issuing physical challenges by switching the RFID antenna on and off.

To select an appropriate alarm threshold, we first study the effect of magnetic coupling between the reader and the tag in the absence of an eavesdropper. Figure 10b shows the alarm threshold chosen such that no alarm is triggered when the residual between the "no tag" response and the response with a tag is within the acceptable range. Any increase above this threshold is attributed to the existence of an eavesdropper.

Figure 10c (middle) shows the response to the same set of physical challenges when the attacker places an eavesdropping antenna in the proximity of the RFID reader while the tag is also present. Thanks to the physical challenge produced by PyCRA, the magnetic coupling produced by the eavesdropper antenna is easily detected, as shown in Figure 10c (bottom).

We recorded over 1 hour of RFID measurements with varying distances of the malicious eavesdropping antenna. In experiments where the attacker was close enough to observe the RFID communication, PyCRA successfully detected the existence of an attacker with 100% accuracy. If the attacker successfully measures the RFID signal, they have removed enough energy from the channel to trigger an alarm.

### Extending PyCRA for Attack Resilience

#### Introduction
In some scenarios, PyCRA can be extended to provide attack resilience. The goal is to design a sensor whose estimate of a physical phenomenon remains robust in the face of various physical attacks. One way to mitigate the effects of an attack is by characterizing the attack signal during the confusion phase, when the attacking signal remains detectable for \( \tau_{\text{attack}} \).

#### Magnetic Encoder Example
The signal reflected by a magnetic encoder's tone ring is a sinusoidal wave dominated by a single frequency component. In the frequency domain, we expect to see the energy concentrated at one frequency corresponding to that of the tone ring. In the presence of an attacker, Fourier analysis reveals energy concentrated at multiple frequencies. The sensor must distinguish between the correct frequency and those of the attacker.

If the attack signal is sparse in some domain, such as the Fourier domain, we can obtain an accurate model of that signal over a short time period, aided by the confusion period and delay \( \tau_{\text{attack}} \). For example, we can use our earlier \( \chi^2 \) estimator as an attack indicator for any given frequency component using the recursive Discrete Fourier Transform (DFT) with the following form:
\[ Y_k(t + 1) = e^{j2\pi k/N}Y_k(t) + e^{-j2\pi k(N-1)/N}y(t) - e^{j2\pi k/N}y(t - N) \]
where \( Y_k(t) \in \mathbb{C}^N \) is the kth component of the N-point DFT of the sensor output \( y(t) \) at time \( t \in \mathbb{N}_0 \). The \( \chi^2 \) detector uses the sensor (in the case of no attack) denoted \( \hat{Y}_k(t) \). We define the \( \chi^2 \) residual model along with (5) to predict the natural response of the tone gear in the frequency domain as \( Z_k(t) = |Y_k(t)| - |\hat{Y}_k(t)| \), allowing us to define thresholds to indicate when an attack is detected and the nature of that attack in terms of its frequency components.

We implemented the scheme and tested it against a number of spoofing attacks in more than 90 experiments. Figure 11a illustrates the result of these experiments for a swept frequency attack, where the malicious (red) signal is accurately detected and subtracted from the measured signal, providing a more robust estimate of the signal of interest. Figure 11b shows the accuracy of this prediction in terms of true and false positive rates as a function of \( \tau_{\text{attack}} \). We demonstrate accurate attack characterization and mitigation even for \( \tau_{\text{attack}} \) delays as low as 5 ms. Additionally, the PyCRA-secured magnetic encoder remains robust even in the face of an active cancellation spoofing attack, where the attacker attempts to use destructive interference to destroy the signal of interest. During the confusion period, we can actively characterize the attack signal and subtract its effects.

### Discussion

#### Comparison with Literature
We classify previous work on secure sensing based on the redundancy needed to provide security. Some works, such as [7, 30, 35], provide security through network and sensor redundancy. Other research has explored fusing redundant measurements for secure localization [32, 21] and secure time synchronization [24]. Our work falls into a second category where no redundancy is needed to provide security. Providing security using single measurements complements the security guarantees provided by redundancy-based techniques. Within this category, we further classify based on the dependency on cryptographic constructs. Cryptographic constructs fail to counteract active attacks in the analog domain, a gap that PyCRA addresses. While PyCRA is novel in providing security against active attacks on sensory data in the analog domain, similar ideas exist in the literature for other types of active attacks.