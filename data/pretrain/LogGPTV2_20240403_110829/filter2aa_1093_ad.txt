为某时间段内高频率、大批量进行数据访问，具有爬取效率高、获
取数据量大等特点。通过开放 API 对 HTML 进行抓取是网络爬虫最简
单直接的实现方式之一，不法分子通常采用假 UA 头和假 IP 隐藏身
份，一但获取企业内部账户，可能利用网络爬虫获取该账号权限内
的所有数据。如果存在水平越权和垂直越权等漏洞，在缺少有效的
应用程序接口（API）数据安全蓝皮报告（2020 年）
15
权限管理机制情况，不法分子可以通过掌握的参数特征构造请求参
数进行遍历，导致数据被全量泄露。此外，移动应用软件客户端数
据多以 JSON 形式传输，解析更加简单，反爬虫能力更弱，更易受到
网络爬虫威胁。
4.合作第三方非法留存接口数据
企业通过 API 实现与合作第三方之间数据交互的过程中，可能
存在合作方恶意留存接口数据的风险。以个人身份验证类合作为例，
在需要进行实名验证的时候，合作方可通过 API 请求调用相关个人
身份信息。正常情况下，服务器获取请求后在后端进行验证并返回
结果，此过程中恶意合作方可能留存验证结果，经过长时间积累，
非法变相获取大量的个人身份信息资源，对企业数据库形成事实上
的拖库。
5.API 请求参数易被非法篡改
不法分子可通过篡改 API 请求参数，结合其它信息匹配映射关
系，达到窃取数据的目的。以实名身份验证过程为例，用户端上传
身份证照片后，身份识别 API 提取信息并输出姓名和身份证号码，
再传输至公安机关相应 API 进行核验，并输出认证结果。此过程中，
不法分子可通过修改身份识别 API 请求参数中的姓名、身份证号码
组合，通过遍历的方式获取姓名与身份证号码的正确组合。可被篡
改的 API 参数通常有姓名、身份证号码、账号、员工 ID 等。此外，
企业中员工 ID 与职级划分通常有一定关联性，可与员工其它信息形
应用程序接口（API）数据安全蓝皮报告（2020 年）
16
成映射关系，为 API 参数篡改留有可乘之机。
（二）内部脆弱性因素
应对外部威胁的同时，API 也面临许多来自内部的风险挑战。一
方面，传统安全通常是通过部署防火墙、WAF、IPS 等安全产品，将
组织内部与外部相隔离，达到纵深防御的目的，但是这种安全防护
模式建立在威胁均来自于组织外部的假设前提上，无法解决内部隐
患。另一方面，API 类型和数量随着业务发展而扩张，通常在设计初
期未进行整体规划，缺乏统一规范，尚未形成体系化的安全管理机
制。因此，从内部脆弱性来看，影响 API 安全的因素主要包括以下
几方面。
1.身份认证机制
身份认证是保障 API 数据安全第一道防线。一方面，若企业将
未设置身份认证的内网 API 接口或端口开放到公网，可能导致数据
被未授权访问、调用、篡改、下载。不同于门户网站等可以公开披
露的数据，部分未设置身份认证机制的接口背后涉及企业核心数据，
暴露与公开易引发严重安全事件。另一方面，身份认证机制可能存
在单因素认证、无口令强度要求、密码明文传输等安全隐患。在单
因素身份验证的前提下，如果口令强度不足，身份认证机制将面临
暴力破解、撞库、钓鱼、社会工程学攻击等威胁。如果未对口令进
行加密，不法分子则可能通过中间人攻击获取接口认证信息。
应用程序接口（API）数据安全蓝皮报告（2020 年）
17
2.访问授权机制
访问授权机制是保障 API 数据安全的第二道防线。用户通过身
份认证即可进入访问授权环节，此环节决定用户是否有权调用该接
口进行数据访问。系统在识别用户之后，会根据权限控制表或权限
控制矩阵判断该用户的数据操作权限。常见的访问权限控制策略有
三种，基于角色的授权（Role-Based Access Control)、基于属性
的授权（Attribute-Based Access Control）以及基于访问控制表
授权（Access Control List）。访问授权机制风险通常表现为用户
权限大于其实际所需权限，从而该用户可以接触到本无权访问的数
据。导致这一风险的常见因素包括授权策略选择不恰当、授权有效
期过长、未及时收回权限等。
3.数据脱敏策略
除了为不同的业务需求方提供数据传输以外，为前端界面展示
提供数据支持也是 API 的重要功能之一。API 数据脱敏策略通常可分
为前端脱敏和后端脱敏。前者指数据被 API 传输至前端后再进行脱
敏处理；后者则相反，API 在后端完成脱敏处理，再将已脱敏数据传
输至前端。如果未在后端对个人敏感信息等数据进行脱敏处理，且
未加密传输，一旦流量被截获、破解，将对企业、公民个人权益造
成严重影响。此外，未脱敏数据在传输至前端时，如被接收方终端
缓存，也可能导致敏感数据暴露。而脱敏策略不统一可能导致相同
数据脱敏部分不同，不法分子可通过拼接方式获取原始数据，造成
应用程序接口（API）数据安全蓝皮报告（2020 年）
18
脱敏失效。
4.返回数据筛选机制
如果 API 缺乏有效的返回数据筛选机制，可能由于返回数据类
型过多、数据量过大等因素形成安全隐患。首先，部分 API 设计初
期未根据业务进行合理细分，未建立单一、定制化接口，使得接口
臃肿、数据暴露面过大。其次，在安全规范欠缺和安全需求不明确
的情况下，API 开发人员可能以提升速度为目的，在设计过程中忽视
后端服务器返回数据的筛选策略，导致查询接口会返回符合条件的
多个数据类型，大量数据通过接口传输至前端并进行缓存。如果仅
依赖于前端进行数据筛选，不法分子可能通过调取前端缓存获取大
量未经筛选的数据。
5.异常行为监测
异常访问行为通常指非工作时间访问、访问频次超出需要、大
量敏感信息数据下载等非正常访问行为。即使建立了身份认证、访
问授权、敏感数据保护等机制，有时仍无法避免拥有权限的用户进
行数据非法查询、修改、下载等操作，此类访问行为往往未超出账
号权限，易被管理者忽视。异常访问行为通常与可接触敏感数据岗
位或者高权限岗位密切相关。如负责管理客户信息的员工可能通过
接口获取用户隐私信息出售谋利；即将离职的高层管理人员可能将
大量公司机密和敏感信息带到下一家公司，以在商业竞争中占据优
势等。美国执法机构和网络安全监管机构调查结果显示超过 85%的安
应用程序接口（API）数据安全蓝皮报告（2020 年）
19
全威胁来自企业内部，企业必须高度重视可能由内部人员引发的数
据安全威胁。
6.特权账号管理
从数据使用的角度来说，特权账号指系统内具有敏感数据读写
权限等高级权限的账号，涉及操作系统、应用软件、企业自研系统、
网络设备、安全系统、日常运维等诸多方面，常见的特权账号有 admin、
root、export 账号等。除企业内部运维管理人员外，外包的第三方
管理人员、临时获得权限的设备原厂工程人员等也可能使用特权账
号。多数特权账号可通过 API 进行访问，有心者可能以特权账号非
法查看、篡改、下载企业数据。此外，部分企业出于提升开发运维
速度的考虑会在团队内共享账号，并允许不同的开发运维人员从各
自终端登陆并操作，一旦发生数据安全事件，难以快速定位责任主
体。
7.第三方管理
当前，需要共享业务数据的应用场景日益扩展，第三方调用 API
访问企业数据完成业务工作的同时，也成为了企业的安全短板。尤
其对于涉及个人敏感信息或重要数据的 API，如果企业忽视对第三方
进行风险评估和有效管理、缺少对其数据安全防护能力的审核，一
旦第三方存在安全隐患或不法企图，可能发生数据被篡改、泄露、
甚至非法贩卖等安全事件，对企业数据安全、社会形象乃至经济利
益造成影响。
应用程序接口（API）数据安全蓝皮报告（2020 年）
20
四、安全建议
API 安全是当今时代数据安全保护的重要一环。企业应在把握自
身现状的基础上梳理 API 相关安全风险，建立健全 API 安全管理制
度，针对事前、事中和事后各阶段管理和技术需求差异，部署相应
安全措施，加强数据安全风险防范。
（一）事前
1.统一 API 设计开发规范，减少安全隐患
缺乏统一规范、开发维护不当导致的安全漏洞等脆弱性因素可
能为 API 带来严重安全隐患。建议企业建立健全 API 设计、开发、
测试等环节标准规范和管理制度，引导 API 开发运维流程标准化，
提高对 API 安全的重视程度，将相关要求以制度规程等形式进行沉
淀、落实，避免遗留严重安全漏洞、恶性 bug 等脆弱性因素，威胁
接口安全。
2.强化 API 上线、变更、下线环节实时监控，确保全生
命周期安全
API 全生命周期包括 API 上线、变更和下线三个环节。企业应对
自身 API 部署情况进行全面排查，梳理统计 API 类型、活跃接口数
量、失活接口数量等资产现状，针对 API 上线、运行中变更、失活
后下线等环节进行实时监控。企业应在新 API 上线前进行风险评估，
发现问题暂停上线并及时调整，确保上线 API 安全性；上线后应对
应用程序接口（API）数据安全蓝皮报告（2020 年）
21
其运行情况进行实时监控，发现接口运行异常、恶意调用等情况及
时采取防护措施，修复相应问题；若 API 不再使用，企业应遵循下
线流程及时进行处理，防止失活 API 持续在线，成为安全隐患。
3.完善 API 身份认证和授权管理机制，强化接口接入安
全审核
企业应针对除信息公开披露场景以外的 API 建立有效的身份认
证机制，对现有身份认证机制密码强度、双因素认证、密码更新等
安全要素进行评估，健全身份认证机制；在建立有效的身份认证基
础上，建立健全访问授权机制，严格遵循最小必要权限原则，尤其
针对提供数据增、删、改等高危操作的 API，严格规范用户权限管理；
对涉及敏感信息、重要数据的 API 加强接入方资质和数据安全防护
能力审核，规范合作要求，避免因接入方原因导致数据安全事件。
4.健全 API 安全防护体系，提升抵御外部威胁能力
企业应加强 API 安全防护能力建设，针对重要接口部署专门的
防护设备保障其安全，建立健全安全防护体系。具体措施包括但不
限于部署 API 网关统一接口管理；利用 VPN 等加密通道传输数据；
部署应用防护系统保护 Web 应用；建立 API 访问白名单机制；部署
抗 DDoS 工具等。从而提升企业 API 抵御外部威胁的能力，降低数据
安全事件发生几率。
应用程序接口（API）数据安全蓝皮报告（2020 年）
22
5.加大 API 安全保护宣传力度，提高员工安全意识
企业应加大对 API 安全保护的宣传力度，缩小各部门之间对 API
安全重视程度差异，提高员工特别是 API 开发运维人员的安全意识，
进一步提高企业整体数据安全认识。推动 API 保护相关机制、技术
手段落地，避免因 API 安全管理疏漏等内部因素导致数据泄露、丢
失、损毁等安全事件，对企业业务发展、社会形象造成负面影响。