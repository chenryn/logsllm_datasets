node vantage sets that achieve the best median relative error
on the iPlane data set from December 1, 2009. The labels
t = 2 and t = 3 represent the optimal result, that is, picking
the very best 2 and 3 vantage points respectively. The me-
dian relative error is similar for both algorithms for various
k. The primary difference in accuracy can be seen at the
90th percentiles. The 90th percentile relative error for the
optimal set for k = 2 is 1.7 compared to 2.3 for the greedy
approach – a difference of 35.2%. The 90th percentile rel-
ative error for k = 3 for the optimal set is 1.45, compared
to 2.15 for the greedy algorithm – a difference of 48.3%.
From Figure 4, it is clear that the greedy algorithm is
nearly as accurate as the optimal algorithm. In the remain-
der of this section, we use results from the greedy sampling
algorithm.
4.3. Baselines: Vivaldi, Star Topology, and Median
To establish a comparative baseline for the accuracy of
Treeple, we evaluated three “basic” schemes on the same
dataset used to evaluate the performance of Treeple.
Vivaldi [7] is a popular but insecure network coordi-
nate system that is implemented in the Vuze ﬁle-sharing
network [32] and used as the basis for computing coor-
dinates in the various “secure” network coordinate sys-
tems [31, 35, 14]. We evaluate Vivaldi’s performance on our
dataset via simulation. Figure 5 shows the median relative
error of all the nodes in our Vivaldi simulation over time.
To obtain a non-sparse matrix of RTTs, we only used the
250 trusted nodes as source and destination, thus obtained a
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
1-node
5-node
15-node
20-node
 0
 0.5
 1
 1.5
 2
Relative Error
Figure 6. Trivial secure schemes: CDF of relative error
for the “star topology” scheme
F
D
C
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 0.5
 1
 1.5
 2
Relative Error
Figure 7. Trivial secure schemes: CDF of relative error
for the “always predict median RTT” scheme.
r
o
r
r
E
e
v
i
t
l
a
e
R
n
a
d
e
M
i
 0.5
 0.4
 0.3
 0.2
 0.1
 0
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
G-5
G-10
G-15
G-20
 0  2  4  6  8  10  12  14  16  18  20
 0
 0.2
 0.4
 0.6
 0.8
 1
# of Trees
(a)
Relative Error
(b)
Figure 8. (a) The median relative error when varying k for the greedy approach, (b) The CDF for the relative error of the
estimations for k = 5, 10, 15, 20 when using the greedy approach
matrix of 250 × 250 entries. The median relative error for
Vivaldi was 25% at the end of the experiment. The ﬁgure
shows the error bars representing the standard deviation and
the mean over 100 runs.
As further point of comparison, we evaluated two sim-
pler, provably secure schemes. In the ﬁrst scheme, which
we refer to as the “star topology,” we assume a set of trusted
vantage points (as in Treeple) but assign coordinates to
peer A based solely on the (signed) distance rtt between
the vantage point and A. When peer A wants to estimate
its distance to peer B using vantage point C, it calculates
rtt(C, A) + rtt(C, B). The scheme extends to multiple
vantage points in the same way as Treeple. The results
are shown in Figure 6: for our data set, regardless of the
number of vantage points used, the star topology yields a
median relative error of 0.68. The second trivial scheme we
evaluate is the “median” scheme, in which the predicted dis-
tance for every pair of distinct nodes is simply the median
observed RTT for the data set. The scheme is trivially se-
cure, but as shown in Figure 7, also provides poor accuracy,
acheiving a median relative error of 0.5.
4.4. Accuracy
Figure 8(a) shows the median relative error for vantage
sets of varying size k, computed as in the previous section.
As k is increased, the median relative error decreases from
0.29 to 0.26, which is comparable to the median relative
error obtained when using the Vivaldi network coordinate
system. Figure 8(b) shows the CDF for the relative error of
the estimations for varying number of vantage points. The
different lines indicate the number of vantage points used.
Using fewer than 5 vantage points produces the same accu-
racy. A gain in accuracy is obtained when k > 6. There is a
signiﬁcant difference in the 90th percentile between k = 5
and k = 10.
Increasing k > 10 provides minimal gain
in accuracy (either median relative error or 90th percentile
relative error). Figure 8 shows that increasing the number
of vantage points used for estimations also increases the ac-
curacy of the system. From our experiments, having only
20 trusted nodes perform network measurements is enough
to accurately estimate the network distance between two
nodes.
Median
90th Percentile
r
o
r
r
E
e
v
i
t
l
a
e
R
 1.6
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 5
 10
Day
 15
 20
Figure 9. Median and 90th percentile relative error using
12/01/09 coordinates for estimation measurements through
12/21/09, by day.
4.5. Stability
If Treeple’s accuracy depends on frequent updates to
a node’s position, then the vantage points may become a
central point of failure, since they would need to be con-
stantly available. Thus it is important to know how the ac-
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 50
 100
 150
 200
 250
 300
 0  50  100 150 200 250 300 350 400 450 500
# of comparisons
(a)
Size of coordinate
(b)
Figure 10. (a) The CDF for the number of comparisons required to estimate the network latency between two nodes. (b) The
CDF for the total number of nodes in each assigned coordinate.
curacy of Treeple positions changes over time. We used the
best 20 vantage points identiﬁed by the greedy method on
12/01/2009 to estimate the network distances for end hosts
from 12/01/2009 to 12/21/2009 (three weeks). Figure 9
shows the median and 90th percentile relative errors when
using the 12/01/2009 positions to estimate the network dis-
tances for other days. That ﬁgure shows that Treeple’s ac-
curacy remains nearly constant over time. Thus, a side ef-
fect of using Treeple is that frequent network measurements
are not needed – the same positions can be used for long
time periods τ . The spike in relative error on the 20th day
is attributed to some possible faulty network measurements
from the iPlane dataset.
4.6. Overhead
In order to show that Treeple imposes acceptable com-
munication and computational costs, we measure these
quantities across all nodes in our data set using the “greedy
20” set of vantage points. Figure 11 shows the Treeple po-
sitions of nodes X and Y . In this example, A is the vantage
point, and B, C ′, and C ′′ are the routers on the Internet. The
“size” of each position is the total number of routers along
the 20 paths from each Ti to X or Y . Computing the dis-
tance under a given trusted node Ti is straightforward: we
start at the ﬁrst node of each Treeple position. They should
be the same since it would be the trusted node. From that
ﬁrst node, we repeatedly advance to the next nodes until the
two corresponding nodes in X and Y ’s positions are differ-
ent. In the example shown, node C ′ is different from node
C ′′. The estimated distance between nodes X and Y can
Figure 11. An example showing the positions of two end
hosts X and Y
then be calculated as (rttA,X −rttA,B)+(rttA,Y −rttA,B).
To compute the distance in this case, we had to compare
three pairs of nodes.
Figure 10(a) shows the CDF for the number of com-
parisons required to compute a network latency estimate
among all eligible pairs. The median number of com-
parisons is 73, with 20 coordinates, this means that each
computation requires 3.65 comparisons on average. Fig-
ure 10(b) shows the CDF for the total number of nodes for
the 20 coordinates of each end-host. The median total coor-
dinate size for each end-host is 260. Each coordinate then
contains 260/20 = 13 hops. Each hop consists of an IP
address (32 bits) and a RTT in ms (12 bits). Each hop size
is then 44 bits. Each node’s total coordinate size is then
44 × 260 = 11, 440 bits or roughly 1.4 KB.
We note that there is a substantial opportunity for reduc-
tion of coordinate size using compression. In particular, it is