# State of DNS Rebinding: Attack & Prevention Techniques and the Singularity of Origin
**Presented by Gérald Doussot & Roger Meyer at DEF CON 27**

## New Tool: Singularity
- **Comprehensive DNS Rebinding Toolkit**: Everything you need for DNS rebinding.
- **Reliable**: Default settings work seamlessly.
- **High Performance**: Up to 20x faster (3s vs 60s).
- **Built-in Payloads**: Supports Jenkins, Rails, AWS Instance Metadata, and more.
- **Autopwn Feature**: Automatically scans networks and services, detects vulnerabilities, and exploits them.

## Contributions and Technical Details
- **Speed Enhancements**: Utilizes multiple DNS answers and cache flooding.
- **Protection Bypasses**: Includes three different methods to bypass common DNS rebinding protections.
  - **DNS Trickery**: Advanced techniques to circumvent security measures.
- **Hook/Control**: Allows interactive browsing of the victim’s internal network.
  - **Websocket Proxying**: No HTTP proxy required, simplifying the process.

## Agenda
1. A Refresher on DNS Rebinding
2. DNS Rebinding Attack: Building on Reliable Foundations
3. The Need for Speed: DNS Rebinding in 3 Seconds
4. Protection Bypasses: Three Different Methods for Common Protections
5. Hook and Control: Interactively Browsing the Victim’s Internal Network
6. Scanning for Vulnerable Host Services
7. Automation: Service Detection, Exploitation, and Orchestration

## Introduction
- **Who We Are**:
  - Gérald Doussot and Roger Meyer
  - Security consultants based in San Francisco, CA
  - Authors of Singularity of Origin, a DNS Rebinding Attack Framework
  - [GitHub Repository](https://github.com/nccgroup/singularity)

## Why Should You Care About DNS Rebinding?
- **Prevalence of Vulnerable Applications**: Many apps expose HTTP servers on localhost (e.g., Electron).
- **IoT Devices**: Often expose sensitive interfaces on internal networks.
- **Common Misconceptions**:
  - DNS rebinding is slow.
  - DNS rebinding can be mitigated by out-of-the-box DNS filtering products or services.

## A Refresher on DNS Rebinding
- **Origin of Web Documents**:
  - The "Origin" of a resource is a tuple consisting of scheme, host, and port.
  - Two documents share the same origin if they have identical scheme, host, and port components.
    - Example: `https://mysite.com/hello.html` and `https://mysite.com/world.html` (Same Origin)
    - Example: `https://mysite.com/hello.html` and `https://attacker.com/hello.html` (Different Origins)
- **Same-Origin Policy**:
  - Dictates how different origins may interact, typically allowing form submissions, links, redirects, and content embedding (JavaScript, CSS).
  - Cross-origin reads are generally not allowed, e.g., reading content from `gmail.com` on `attacker.com`.
- **DNS Rebinding Bypass**:
  - DNS Rebinding allows attackers to bypass the restrictions imposed by the same-origin policy.

## DNS Rebinding Attack Walkthrough
### Initial Setup
- **Attacker DNS & Web Server**: 35.185.206.165
- **Target Service**: 127.0.0.1
- **Victim (Browser)**: Intranet and Internet access

### Step-by-Step Process
1. **DNS Query**: `rebind.it`
2. **First DNS Response**: `35.185.206.165`
3. **Cache Expiration**: DNS cache expires, triggering a new query.
4. **Second DNS Response**: `127.0.0.1`
5. **GET/POST Request**: Browser sends a request to `127.0.0.1`, accessing the target service.

## Learning More About DNS Rebinding
- **DEF CON 25 (2017)**: Luke Young - Achieving reliable DNS rebinding.
- **Black Hat USA & DEF CON 18 (2010)**: Craig Heffner - Hacking millions of routers.
- **24C3 (2007)**: Dan Kaminsky - DNS Rebinding and packet tricks.
- **NorthSec (2018)**: Danny Cooper & Allan Wirth - Scanning private IP space with DNS rebinding.
- **WOOT '13 (2013)**: Yunxing Dai, Ryan Resig - Interactive DNS rebinding.
- **Stanford University (2007)**: Protecting browsers from DNS rebinding attacks.

## iOS Demo: DNS Rebinding in 5 Seconds (Cache Flooding)
- **DNS Rebinding Attack: Building on Reliable Foundations**
  - **Innocuous Website Visit**: User visits a seemingly harmless website.
  - **Malicious JavaScript Download**: Malicious code is downloaded.
  - **First DNS Query**: Sent to the attacker's DNS server.
  - **Query Format**: `s-35.185.206.165-127.0.0.1-3504134790-fs-e.d.rebind.it`
    - `(s)tart`
    - `35.185.206.165`: Attacker's IP address
    - `127.0.0.1`: Target service IP address
    - `3504134790`: Session ID
    - `fs`: First then second IP address strategy
    - `(e)nd`
    - `d.rebind.it`: Attack domain

## Removing HTTP Performance Enhancing Techniques
- **HTTP Caching**: Ensure the browser fetches fresh copies of resources.
- **Keep-Alive**: Prevent the browser from sticking to the attacker's server.
- **TTL Values**:
  - First query: `S-35.185.206.165-127.0.0.1-123-fs-e.d.rebind.it. 0 IN A 35.185.206.165`
  - Second query: `S-35.185.206.165-127.0.0.1-123-fs-e.d.rebind.it. 0 IN A 127.0.0.1`

## Successful Rebinding Indicators
- **Custom HTTP Header**: `X-Singularity-Of-Origin: t`
- **Index Token**: Used to differentiate the attacker's server from the target service.

## Randomness and Catering for Potential Interference
- **IPS/IDS Interference**: Spurious DNS queries can interfere with the attack.
- **Solution**: Use the random DNS rebinding strategy, which is generally slower but can be effective.

## The Need for Speed: DNS Rebinding in 3 Seconds
- **Implementation Details**:
  - **OS Implementation**: Windows, Linux, macOS
  - **Browser Vendor**: IE/Edge, Firefox, Chrome/Chromium Edge, Safari
  - **Target Specification**: Local, remote
  - **External Factors**: Presence of IPS/IDS
- **Optimization**: Fingerprinting to optimize speed under certain conditions.

## Multiple Answers Rebinding Strategy
- **Time-Varying Technique**: Takes ~60 seconds on most browsers except IE/Edge.
- **Multiple Answers**: Near-instantaneous, works well with `127.0.0.1` on Windows and `0.0.0.0` on Unix-like systems.
- **DNS Cache Flooding**: On Google Chrome or Safari/iOS, flooding the DNS cache with 1K+ queries reduces rebinding time to 5-40 seconds.

## Speed Measurements
- **Windows 10**:
  - **Strategy**: Multiple Answers (MA)
  - **Time to Exploit**: 3 seconds
  - **Fetch Interval**: 1 second
  - **Target Spec**: `127.0.0.1`
- **Ubuntu**:
  - **Strategy**: MA
  - **Time to Exploit**: 3 seconds
  - **Fetch Interval**: 1 second
  - **Target Spec**: `0.0.0.0`
- **macOS**:
  - **Strategy**: MA
  - **Time to Exploit**: 3 seconds
  - **Fetch Interval**: 1 second
  - **Target Spec**: `0.0.0.0`

This presentation aims to provide a comprehensive overview of DNS rebinding, its attack vectors, and the latest techniques for both conducting and defending against such attacks.