而且背面也很难找到，因为能够支持奔腾4 CPU的主板，其印刷电路板
大多是多层的（通常为4层）。另一方面，随着芯片速度和信号频率的
不断提高，PCB的布线要求也越来越严格，线路的长短和走向都必须遵
循严格的规定。因此，观察主板电路时，我们会发现密如蛛网的线路穿
上穿下。对于这样密集的电路，直接测量线路信号不仅非常困难，还容
易损坏板上的芯片或元器件。
如果不解决以上问题，就会影响和制约集成电路的进一步发展，人
们很快就意识到了问题的严重性。于是在1985年，一些大的电子和半导
体厂商联合成立了一个工作小组，目的是寻找一种统一的方案来解决电
路板级（board level）的测试问题，然后使其成为一个工业标准。这个
小组的名称叫Joint Test Action Group，简称JTAG。JTAG小组提出的方
案在1990年得到了IEEE（电气和电子工程师协会）的批准，并被定名为
Test Access Port and Boundary Scan Architecture（测试访问端口和边界扫
描架构），简称IEEE 1149.1—1990。由于该标准是由JTAG组织制定
的，因此更多时候人们还是称其为JTAG标准，并将基于该标准的调试
方法称为JTAG调试。
1993年和1995年，IEEE对JTAG标准做了两次补充，分别称为IEEE
1149.1a—1993和IEEE 1149.1b—1995。
JTAG标准推出后，得到了广泛的认可和支持，有着非常广泛的应
用，本章后面的章节将集中介绍它的原理和应用。
7.2 JTAG原理
JTAG的核心思想就是将测试点和测试设施集成在芯片内部（build
test facilities/test points into chip），并通过一组标准的信号（接口）向
外输出测试结果，这些标准信号称为TAP（Test Access Port）信号。有
了标准的TAP信号，基于JTAG技术的调试工具就可以与这个芯片进行
通信，而不必关心它内部的实现细节。这样，一个JTAG调试工具就可
以比较容易地调试很多种芯片。这与软件设计中的对象抽象思想非常类
似。
为了支持JTAG，芯片内部通常需要实现一个边界扫描链路和一个
TAP控制器。下面我们将分别讨论。
7.2.1 边界扫描链路
在支持JTAG技术的芯片内会为每个需要测试的输入输出管脚配备
一个移位寄存器单元（移位寄存器的一个位），称为边界扫描单元
（Boundary-Scan Cell，BSC）。简单理解，BSC就是一个可控制的信号
采集器，可以让信号直接通过，也可以将信号（电平值）记录下来。
一个芯片内的多个边界扫描单元通常被串联起来，形成一个链路，
这称为边界扫描链（Boundary-Scan Chain），如图7-1所示。
图7-1 边界扫描示意图
图7-1所示的是包含边界扫描单元的一个简单芯片的示意图，图中
画出了针对两个正常信号（NDI和NDO）的JTAG链路，每个信号配备
一个边界扫描单元（BSC），两个BSC串联起来形成一个简单的链路。
中央的矩形表示芯片的内部逻辑，NDI（Normal Data Input）代表正常
的数据输入信号，NDO代表正常的数据输出信号，TDI代表测试数据输
入信号，TDO代表测试数据输出信号。当芯片正常工作时，NDI和NDO
信号自由穿过BSC，对芯片的本身逻辑不产生任何影响。在边界测试模
式（boundary-test mode）下，根据需要，BSC可以有如下两种工作模
式。
（1）对于外部测试（external testing），也就是当测试该芯片与外
围电路或者与其他芯片互连时，输出管脚处的BSC可以将由TDI输入的
测试触发（test stimulus）输出给外部器件；输入管脚处的BSC可以捕捉
到来自外部的输入并将结果通过TDO输出给外界的调试器观察。在这种
模式下，芯片本身的内部逻辑好像被替换掉，它的输入被发送到外部的
调试器，它的输出也是外部调试器所指定的。因此通过这种方法，可以
实现我们前面介绍的仿真调试（ICE）。
（2）对于内部测试（internal testing），也就是当测试芯片内部的
应用逻辑时，输入管脚处的BSC会将通过TDI输入的测试触发发给芯
片，输出管脚处的BSC会将芯片的输出捕捉下来并通过TDO发给外部的
调试器。这样可以很容易地监视到芯片的输出信号，解决了前面说的管
脚信号难以测量的问题。
在对BSC有了基本的了解后，理解JTAG工作原理的另一个重要问
题就是如何控制和访问BSC。要回答这个问题，我们需要了解JTAG的
控制机制，即测试访问端口（Test Access Port，TAP）。
图7-2所示的是一个支持JTAG调试/测试的芯片的更多细节。
图7-2 Test Access Port工作原理示意图
下面我们从3个角度来理解这幅图：TAP信号、TAP寄存器和TAP控
制器（TAP controller）。
7.2.2 TAP信号
JTAG标准定义了以下5个标准信号供外部调试器和被调试芯片通
信。
（1）TCK（Test Clock）：测试时钟输入信号，TAP的所有操作都
是通过这个信号来驱动的。TCK与芯片本身的时钟信号是分开的。这样
做的好处是，只要它们符合JTAG标准，就可以通过一个TCK信号来驱
动同一电路板上多个不同频率的芯片。
（2）TMS（Test Mode Selection）：测试模式选择输入信号，TMS
信号用来控制TAP状态机（将在下文详述）的转换。通过TMS信号，可
以控制TAP在不同的状态间相互转换。TMS信号在TCK的上升沿有效。
（3）TDI（Test Data Input）：测试数据输入信号，TDI是数据输入
的通道。所有要输入到特定寄存器的数据都是通过TDI一位一位串行输
入的（由TCK驱动）。TDI信号在TCK的上升沿有效。
（4）TDO（Test Data Output）：测试数据输出信号，TDO是输出
数据的通道。所有要从JTAG寄存器中输出的数据都是通过TDO一位一
位串行输出的（由TCK驱动）。TDO信号在TCK的下降沿有效。
（5）TRST（Test Reset）：测试复位信号，TRST可以用来对TAP
控制器进行复位（初始化）。TRST在IEEE 1149.1标准里是可选的。因
为通过TMS也可以对TAP控制器进行复位（初始化）。
IEEE 1149.1标准规定前4个信号是必须实现的，而且不论芯片的种
类和其他管脚有多大差异，这几个信号的工作方式是不变的，这为调试
工具的标准化提供了很好的基础。换句话说，芯片可以通过这4个或5个
标准化的信号来隐藏其内部结构和外部形状（封装工艺）的差异，只要
芯片按照标准实现这几个信号，那么它就可以与JTAG调试器通信，让
用户可以使用JTAG所支持的强大调试功能。这是 JTAG标准被广泛支持
的重要原因。
7.2.3 TAP寄存器
JTAG标准定义了如下几种寄存器，其中有些是必须实现的，有些
根据芯片的设计需要，是可选实现的。
（1）指令寄存器：用来选择需访问的数据寄存器，或者选择需要
执行的测试。每个支持JTAG调试的芯片必须包含一个指令寄存器。
（2）旁路（Bypass）寄存器：一位的移位寄存器，用以当不需要
进行任何测试的时候，在TDI和TDO之间提供一条长度最短的串行路
径。这样允许测试数据可以快速地通过当前芯片到板上的其他芯片上
去。
（3）设备ID寄存器：用以标示芯片生产厂商及版本信息，使调试
器可以自动识别当前调试的是什么芯片。
（4）边界扫描（Boundary-Scan）寄存器：边界扫描寄存器的每一
位就是我们前面介绍的一个边界扫描单元（BSC），因此，一个边界扫
描链就是一个边界扫描寄存器，访问边界扫描寄存器就相当于访问边界
扫描链中的边界扫描单元。换言之，可以通过操控边界扫描寄存器，来
实现对测试器件的输入输出信号进行观测和控制，以达到测试或调试的
目的。
所有TAP寄存器可以分为指令寄存器和数据寄存器两类。旁路寄存
器、设备ID寄存器和边界扫描寄存器都属于数据寄存器。除了设备ID寄
存器外，其他几个都是必须实现的。JTAG标准允许芯片设计厂商实现
更多的数据寄存器和指令寄存器（称为私有指令寄存器）。
7.2.4 TAP控制器
TAP控制器（TAP controller）既是驱动TAP各部件工作的发动机，
又是指挥指令和数据寄存器协同工作的控制中枢。从实现来看，TAP控
制器是一个包含 16 个状态的有限状态机。在TMS信号的驱动下，TAP
在各个状态间切换，实现各种操作。这个状态机的所有状态和转换关系
如图7-3所示，其中的箭头表示所有可能的状态转换流程。箭头旁边的
数字表示选择该转换流程的条件，也就是TMS的值（电平）。举例来
说，如果当前状态为Capture-DR（捕捉数据寄存器），而且在TCK的下
一个上升沿时TMS=0，那么TAP控制器就进入Shift-DR状态（对当前数
据寄存器移位）；如果在TCK的下一个上升沿时TMS= 1，那么TAP控
制器进入Exit1-DR状态（退出移位状态）。
图7-3 TAP控制器的有限状态机模型
在16个状态中，有6个稳定状态：Test-Logic-Reset、Run-Test/Idle、
Shift-DR、Pause-DR、Shift-IR和Pause-IR，即状态机可以停留在这些状
态上。例如在Shift-DR状态，如果下一个TMS值是0，那么状态机仍然
处于该状态上，这样便实现了循环移位操作。
从图7-3中，我们还可以看到该状态机有两个主要的状态序列：针
对数据寄存器的××-DR序列和针对指令寄存器的××-IR序列。从Run-
Test/Idle状态开始，如果下一个TMS值是0，那么状态机就停留在这个状
态上，即处于空闲状态（Idle）；如果是1，那么状态机就进入Select-
DR-Scan状态；如果再下一个TMS是0，那么便进入Capture-DR状态，接
下来可以选择对数据寄存器进行各种操作。如果当前状态是Idle，下一
个TMS是1，那么便进入Select-IR-Scan状态，用以选择进入对指令寄存
器进行各种操作的状态，以此类推，不再赘述。
7.2.5 TAP指令
TAP指令用来通知TAP控制器应该执行何种操作。JTAG标准定义
了9条指令，其中有3条是必须要实现的，其余6条是可选的。芯片设计
者也可以定义其他指令。JTAG标准没有指定指令的长度，芯片设计者
可以根据具体情况制定。
（1）BYPASS指令（必须实现）：选中旁路寄存器，使其将TDI和
TDO连接起来形成通路，从而可以让测试数据没有影响地流过该芯片。
JTAG标准规定该指令代码的所有位必须为1。
（2）SAMPLE/PRELOAD指令（必须实现）：选中边界扫描寄存
器，使其与TDI和TDO形成通路，然后利用数据扫描操作访问边界扫描
寄存器：将各个边界扫描单元中的内容送出去，实现对芯片的输入输出
信号进行采样的目的，或者向边界扫描单元预先装载（preload）数据，
供EXTEST指令使用。
（3）EXTEST指令（必须实现）：使芯片进入外部测试模式
（external boundary-test mode），同时选中边界扫描寄存器，使其与TDI
和TDO形成通路。在该模式下，输入信号处的边界扫描单元会记录下输
入信号的值，输出信号处的边界扫描单元会将测试数据向外输出给外部
的其他器件（可以是不支持JTAG的）。JTAG标准规定该指令的代码所
有位必须为0。
（4）INTEST指令（可选）：使芯片进入内部测试模式（internal
boundary-test mode），同时选中边界扫描寄存器，使其与TDI和TDO形
成通路。在该模式下，输入信号处的边界扫描单元会将自己的值送给芯
片，输出信号处的边界扫描单元会记录下芯片的输出信号。
（5）RUNBIST指令（可选）：使芯片进入自检模式（built-in self-
test mode），同时选中用于自检的用户定义的（user-specified）数据寄
存器，使其与TDI和TDO形成通路。在该模式下，边界扫描单元使芯片
处于孤立的状态——不受输入的影响，其输出也不影响其他部件。
（6）CLAMP指令（可选）：将输出信号处的边界扫描单元的值输
出给外部电路。在加载这个指令之前，可以使用SAMPLE/PRELOAD事
先将边界扫描单元的值准备好。该指令会选中旁路寄存器，使其与TDI
和TDO形成通路。
（7）HIGHZ指令（可选）：使芯片的所有输出信号（包括two-
state和three-state信号）进入禁止（高危，high-impedance）状态。该指
令会选中旁路寄存器，使其与TDI和TDO形成通路。
（8）IDCODE指令（可选）：使芯片保持正常工作的同时，选中
设备ID寄存器，使其与TDI和TDO连接形成通路，以便通过数据扫描操
作将设备ID寄存器的内容输出给调试器。
（9）USERCODE指令（可选）：与IDCODE类似用来读取附加的
设备信息。
本节简要介绍了JTAG技术的基本原理，其细节超出了本书的范
围，感兴趣的读者可以阅读参考文献中列出的资料。
7.3 JTAG应用
JTAG标准一经推出，便得到了广泛的认可和支持，并被应用到众
多领域中。以下列出的只是一小部分的典型应用。
（1）设计验证和调试。例如对芯片进行在线仿真（ICE）调试；访
问芯片的自检功能（使芯片开始自检，然后读取自检结果）；通过边界
扫描采集信号，进行芯片、电路板和系统测试；下载和上传程序或数据
（比如刷新EEPROM或FLASH，读写内存）等。关于调试方面的应
用，本节后文会详细论述。
（2）生产测试。利用JTAG的串行化能力，进行大规模的自动化测
试。比如可以把要测试的部件通过一个简单的总线串联起来，在系统控
制台发布测试指令，测试结果通过JTAG信号传回控制台以供分析。
（3）系统配置和维护。对于数据中心、电站等单位，可以利用
JTAG标准采集或发送数据，以配置各种不同的设备。
7.3.1 JTAG调试
典型的JTAG调试环境由3大部分组成：被调试系统、调试机和将二
者联系起来的JTAG工具（见图7-4）。被调试系统又称为下位机，通常
是正处于开发过程中的一套组件，包括主板、CPU等部件。调试机又称
为主机（host）或上位机，可以是普通的台式机、笔记本电脑等。
图7-4 JTAG调试示意图
JTAG工具通常由以下几部分组成。
（1）下位机接口：即与被调试系统上的调试端口（debug port）进