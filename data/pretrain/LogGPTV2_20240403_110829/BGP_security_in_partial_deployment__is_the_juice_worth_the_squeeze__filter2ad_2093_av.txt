must (1) belong to the same type—customer routes, peer
routes, or provider routes, (2) be of the same length, and
(3) either all be (entirely) secure or insecure.
B.2 Algorithm for security 3rd.
We now present our algorithm for computing the S*BGP
routing outcome in the security 3rd model in the presence
of a set of secure ASes S and an attacker m. We note that
this algorithm also serves to compute the routing outcome
when no ASes are secure, i.e., S = ∅. As in [36] (which
studies a somewhat diﬀerent BGP routing model and does
not consider S*BGP) we exhibit an iterative algorithm Fix-
Routes (FR) that, informally, at each iteration ﬁxes a single
AS’s route and adds that AS to a set I ⊆ V . This goes on
until all ASes are in I (that is, all ASes’ routes are ﬁxed).
We will later prove that FR indeed outputs the BGP routing
outcome.
FR consists of three subroutines: Fix Customer Routes
(FCR), Fix Peer Routes (FPeeR), and Fix Provider
Routes (FPrvR), that FR executes in that order. Note that
at the very beginning of this algorithm, I contains only the
legitimate destination d and the attacker m (if there is an
attacker). We now describe FR and its subroutines.
Step I: The FCR subroutine.
FR starts with FCR;
at this point I contains only the legitimate destination d
and the attacker m. Intuitively, FCR constructs a partial
B.3 Algorithm for security 2nd.
Our algorithm for the security 2nd model is a reﬁnement
of the iterative algorithm Fix Routes (FR) presented above
for the security 3rd model. This new algorithm is also a 3-
stage BFS in which customer routes are ﬁxed before peer
routes, which are ﬁxed before provider routes. In each stage
we are careful to prioritize ASes with secure routes over ASes
with insecure routes.
We present the following two new subroutines. (1) Fix
Secure Customer Routes (FSCR): FSCR is identical to
FCR, with the sole exception that for the AS chosen at
each iteration r has a BPRr−1 that contains a secure cus-
tomer route; (2) Fix Secure Provider Routes (FSPrvR):
FSPrvR is identical to FPrvR, with the sole exception that
for the AS chosen at each iteration r has a BPRr−1 that
contains a secure provider route. The variant of FR for the
security 3rd model executes the subroutines the following
order:
1. FSCR
2. FCR
3. FPeeR
4. FSPrvR
5. FPrvR
B.4 Algorithm for security 1st.
Once again, we present a variant of the Fix Routes (FR)
algorithm. This multi-stage BFS computation ﬁrst discovers
all ASes that can reach the destination d via secure routes
and only then discovers all other ASes (as in our algorithm
for the security 3rd model).
We present the following new subroutine. Fix Secure
Peer Routes (FSPeeR): FSPeeR is identical to FSPeeR,
except that the AS chosen at each iteration r has a secure
peer route in its BPRr−1 set. This variant of FR executes
the subroutines in the following order:
1. FSCR
2. FSPeeR
3. FSPrV
4. FCR
5. FPeeR
6. FPrvR
B.5 Correctness of Algorithms
We now prove that that our algorithms for computing
the S*BGP routing outcomes indeed output the desired out-
come.
B.5.1 Correctness of algorithm for security 3rd.
The proof that our algorithm for the security 3rd model
outputs the S*BGP routing outcome in this model follows
from the combination of the lemmas below. Recall that each
of our algorithms computes, for every AS vi, a next-hop AS
Nxt(vi). Let Rvi be the route from vi induced by these
computed next-hops.
Lemma B.2. Under S*BGP routing, the route of every
AS added to I in FCR is guaranteed to stabilize to the route
Rvi .
Proof. We prove the lemma by induction on the FCR
iteration. Consider the ﬁrst iteration. Observe that the AS
chosen at this iteration of FCR must be a direct provider
of d (that is, have a customer route of length 1). Hence, in
the security 3rd model, once this AS learns of d’s existence