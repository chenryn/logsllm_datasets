2) There is a time t ≥ tf after which the last message
from the set of crashed processes is delivered to a
correct process
Proof: The proof of part 1 is as follows. At
tf all
the failures have occurred,
then it
time
is true that
268
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:15 UTC from IEEE Xplore.  Restrictions apply. 
(p1, 5)
p9
(p1, 8)
(p1, 7)
(p1, 6)
p2
p4
p6
p8
(p1, 6)
(p1, 8)
p2
(p1, 4)
p6
(p1, 5)
p9
p8
(p1, 6)
p1
p5
p7
p1
p5
p7
(p1, 8)
(p1, 7)
(p1, 8)
(p1, 7)
p3
(p1, 8)
p3
(p1, 8)
Figure 1. Graph G(t) with t  t
after which correct processes connected by correct paths,
satisfy the eventual strong accuracy property, i.e. eventually
a correct process does not suspect a correct process in its
same partition.
Lemma 4. Let p and q be two correct processes in V (G(t))
such that d(p, q) =m with m  Dp,q and stops changing.
Let us consider the time before timeoutq[p] = Xp,q. If
q is suspecting p, when q receives a message from p, the
condition in line 25 is true, so q increases the timeoutq[p]
variable and sets the suspectq[p] variable to false. Since the
timeoutq[p] variable reached its upper bound and q receives
a message from p in at most every Dp,q units of time, then
condition in line 41 is never true, so the suspectq[p] variable
does not change. Then, q stops suspecting p permanently.
Inductive hypothesis: For all processes r such that
d(p, r) = m − 1 the following properties are true:
269
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:15 UTC from IEEE Xplore.  Restrictions apply. 
1) There is a time tr ≥ t after which T T Lr[p] is n −
r ≥ t after which r does not suspect
(cid:2)
2) There is a time t
(m − 1) permanently
p permanently
Inductive step: Let q be a correct process such that
d(p, q) =m in G(t) and let π = p, ..., r, q be a minimum
length path of correct processes connecting p to q.
there is a time tr after which T T Lr[p]
The proof of property 1 is as follows. By property 2 of
(cid:2)
r at which r stops
the inductive hypothesis, there is a time t
suspecting p permanently, and by property 1 of the inductive
is
hypothesis,
n−(m−1) permanently. Then, for all t > max(tr, t
(cid:2)
r), when
process r sends a HB message, it includes the pair (p, n−m)
in its bag since n − m >0
and suspectr[p] =f alse
(condition in line 13 is true). By Lemma 1, that bag is
(cid:2)
r) + Dr,q. Since π is
delivered to q at time at most max(tr, t
a minimum length path connecting p to q, the greatest T T Lp
that q can receive is n − m. In case of T T Lq[p]  tf
q does not suspect p permanently.
The following lemma, shows that
the neighbors of a
crashed process p satisfy strong completeness, i.e. neighbors
of p eventually suspect p permanently.
Lemma 6. Let p and q be two neighboring processes such
that q is correct and p is faulty. There exists a time t after
which q suspects p.
Proof: Before p fails, it sent a ﬁnite number of messages
to q and q only changes timeoutq[p] when a HB message
from p arrives, so eventually timeoutq[p] stops changing.
Let t(cid:4) the time when q receives the last message from p. By
time t = t(cid:4) + timeoutq[p] the timeout for a message from
p expires and q sets suspectq[p] to true (line 41). This is
permanent, since q only changes suspectq[p] if it receives a
message from p, but it will not receive any other messages
from p.
Now we have to prove that after tf , all correct processes
suspect all crashed processes. In order to prove that, ﬁrst we
show that once a process p fails, the pairs labeled with p
eventually stop being sent by any correct process. Then, we
show that there is a time t > tf after which all processes in
V (G(t)) suspect all crashed processes. First, let us observe
the following.
Observation 7. By Lemma 4, we can conclude that the
largest T T Lp that a process at distance k of p in G can
receive is n − k.
A process q suspects p if q does not receive a pair labeled
with p before the timer expires. When p fails, processes
know this information because as the time goes by, the TTLs
from p fade away in the network until the point where no
process receives pairs labeled with p. Lemma 9 states this
idea formally. We give an example of how this happens.
Let us consider graph G in Figure 3, with the TTL value
from p1 that every process has stored.
When p1 fails, as soon as the timer expires in p3 and p2,
they suspect p1. We draw in red processes that suspects p1
in Figure 4.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:55:15 UTC from IEEE Xplore.  Restrictions apply. 
(p1, 6)
(p1, 5)
pairs labeled with p1.
p3
p2
(p1, 6)
p6
(p1, 5)
p5
(p1, 4)
p7
p4
(p1, 5)
Figure 4. Graph G at time t1
(p1, 6)
(p1, 4)
p3
p2
(p1, 6)
p6
(p1, 5)
p5
(p1, 4)
p7
p4
(p1, 4)
Figure 5. Graph G at time t2
(p1, 6)
(p1, 2)
p3
p2
(p1, 6)
p6
(p1, 3)
p5
(p1, 4)
p7