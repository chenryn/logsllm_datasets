## 分解的宏观意义分解就**好像火箭发射一样，一级一级地解体**。最开始是指标，然后围绕指标、通过洞察得到一级假设（一级方向）；再用同样的指标、洞察、假设的思路分解一级假设得到二级假设（二级机会）；然后再用指标、洞察、假设、分解、实验的思路，分解二级假设落地三级增长；接下来沉淀实验的成果，不断复用、延展，带来四级批量增长。![](Images/c0f399fef084cea9dfda56e7be774e01.png){savepage-src="https://static001.geekbang.org/resource/image/96/a9/9677beafad7c7e6a4672caa9cff0aca9.png"}可以说**整个增长过程的核心，就是分解**。确定目标，也就是未来想要达成的方向，然后从一级分解到二级、再到三级、再到四级......直至增长落地并不断持续下去。这就是宏观的分解。
## 分解的微观意义关于一级和二级的分解，我们前面已经阐述过很多了，这里就不再赘述了。现在我们重点讲讲三级的分解。``{=html}很多人问我，精益闭环里的分解具体应该怎么分，如何决定分解的颗粒度。其实这是一个很大的话题。就前面几个案例，你可以发现分解的程度都不一样，有的分的比较粗，有的分的非常细，那么这是由什么决定的呢？
### 产品生命周期想要知道这个答案，我们就不得不从产品生命周期说起了。假设，我们把产品的成长过程分为四个阶段：探索期、成长期、成熟期、二次探索期。-   探索期：从 0 到 1 摸索方向的阶段；-   成长期：方向稳定后的快速扩张阶段；-   成熟期：用户体量十分庞大、增长放缓阶段；-   二次探索期：成熟期之后的新的方向探索，好继续带来指数级的增长。这和增长黑客倡导的企业发展要经历的四个阶段：PSF、PMF、CPF、EMF本质上是一样的。在这里我简单地解释一下。PSF（Problem-Solution Fit）阶段：问题和解决方案阶段。这是一个从 0 到 1的提出价值假设的阶段。在这个阶段，更多的是发现市场上的问题，然后做方案去解决问题，看与市场需求是否匹配。这相当于刚才说的探索期。PMF（Product-Market Fit）阶段：产品和市场匹配阶段。这是一个从 1 到 N的提出增长假设的阶段。在这个阶段，需要吸引更多的用户进来，来验证 PSF阶段的想法是否具有更大的市场空间。这相当于成长期。CPF（Channel-ProductFit）阶段：渠道与产品匹配阶段。通过精细化运营、数据分析、数据驱动调整各种营销渠道、营销方式和产品之间的适配性，大幅提升增长效率。这相当于成熟期。EMF（Enterprise-MarketFit）阶段：企业与市场匹配阶段。思考在下一个阶段整个公司如何和市场进行下一次匹配。也就是如何通过创新寻找下一个增长点，这可能需要CEO 进行各种各种的战略布局。这相当于二次探索期。还记得我之前提过的 Karmaloop的案例吗？创始人格雷格解决的就是探索期和成长期的问题，之后的 CMO德鲁解决的则是成熟期的问题。**一般来说，增长黑客要到 PMF阶段以后才会参与进来，他们认为好的产品才是增长的根本。**所以，千万不要把增长黑客和增长混淆起来，很多人其实是分不清楚这两者的，以为增长= 增长黑客 =营销裂变，或者以为增长就是各种"术"的操作，这是非常狭隘的理解。企业发展要经历的这四个阶段都属于增长的范畴，因为**增长不仅仅是数字的提升**，增长代表了价值。另外我们也可以发现，这四个阶段和产品生命周期的四个阶段本质上并无区别，是完全可以一一对应上的。那为什么行业内还会出现各种各样的概念呢？这是因为产品生命周期的概念是**从产品的角度**提出的，而企业发展要经历的那套字母阶段是增长黑客**从营销的角度**提出的。**角度不同，概念自然也就不同了。**我在写《破茧成蝶2》的时候就发现，**产品和设计上的各种概念其实完全可以统合起来**，"以用户为中心"和"以产品为中心"其实没有任何区别。因为你可以理解为"做产品即做用户"，做设计本质上也是服务用户。而现在，**产品和运营的概念也一样可以统合起来。**因为无论是做产品，还是做营销，本质都是在做增长，即提升产品价值。所以无论是产品、运营、设计、技术，还是其它职位，大家都是在为同样的目标努力，不一定非要从自己职能的专业角度出发创造"专属"概念。很多人问我做增长具体需要学什么课程，其实你不管学习什么课程，都少不了各种概念和名词，因为目前大家还会**本能的受限于各种职能角度**。如果维度不够高，难免陷入到眼花缭乱的概念里。但是如果你理解了本质的东西，再看各种概念，就很容易融会贯通了。藏在各种概念外壳中的真理，往往无比简单而纯粹。**增长本身就是要打通职能角度，综合地看问题。**它既不是产品、也不是运营，我们在学习时一定要注意打破"本能"的思维限制。
### 确定分解的颗粒度既然产品的发展阶段可以统合起来，那这里我们就统一用探索期、成长期、成熟期、二次探索期来解释吧。为什么要分成四个阶段呢？因为**不同阶段的目的不同、关注点不同，对应的策略、工作方式、相关指标等都是不一样的。**比如探索期需要颠覆性创新，成长期需要大胆创新，成熟期需要规范、科学严谨。这就解释了为什么Karmaloop的创始人格雷格能创办一家有趣的公司，却无法带领它走向辉煌。创新不能墨守成规，但运营可是需要精细化操作的。![](Images/c16c967fee924e26b2530bc619ebedcc.png){savepage-src="https://static001.geekbang.org/resource/image/04/30/043c4979e729bfda3c74bbd07cec6b30.png"}至于分解，也是类似的：探索期的分解是要保留最核心的功能及特质，看它是否能跑通，是否有人愿意使用，如果不对就立刻换方向再继续尝试；成长期的分解是在此基础上不断增加新的功能模块，让它日臻完善；而成熟期的分解是要精雕细作。就像前面说的H5 营销落地页一样，小到颜色、字号、图标样式等，我们都在不断测试。举个简单的例子，你就明白了。假设你有一片森林，里面有数万棵树木，你需要选择其中一棵把它雕琢成理想的形象。可是这么多树木应该选哪一棵呢？一开始你需要一把大锯子，快速砍开看，如果发现不是自己想要的，就立刻换下一棵树。等你找到了理想的树木后，你需要一把斧子，快速把它劈成你想要的大体形状。接下来你需要一把小锉刀精雕细琢，直至把它雕琢成一件艺术品。![](Images/317a06103913eeec3e7f556bb8637854.png){savepage-src="https://static001.geekbang.org/resource/image/d6/a7/d6b7267da99c6491382b214f2b77cda7.png"}如果用错了分解的工具会怎样呢？想象一下，当最开始挑选木材时，如果你使用的是小锉刀，那么当别人已经试验过无数方向，积累了无数宝贵经验时，你还在原地踏步。但如果在该用小锉刀的时候，你使用了一把大斧子，那就会立刻前功尽弃。这就不难解释为什么我们一开始优化营销落地页总是不能成功了，因为我们用错了工具，一上来就大刀阔斧的修改，但其实现在需要的是一把小锉刀精雕细琢。如果你不能确定当前的阶段以及应该如何分解，那就**"从大到小"去探索，**这样是效率最高的。也就是先用锯子，效果不好换成斧子，效果还不好就换成小锉刀。这样就能让我们快速找到合适的分解颗粒度，从而落地增长。![](Images/08b1158c2670361902319aed20db677b.png){savepage-src="https://static001.geekbang.org/resource/image/92/59/92abdcc38ced1818e502e060962c1959.png"}
## 思考题对于你现在正在负责的产品，你认为它处于什么阶段，应该如何分解？欢迎把你的思考和疑问通过留言分享出来，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。![unpreview](Images/e82c133ad5213178467d562d5db4f017.png){savepage-src="https://static001.geekbang.org/resource/image/85/5c/85e5bb1f89d888058dedd51530626a5c.jpg"}
# 33 \| 四个要点颠覆传统需求文档你好，我是刘津。前面我们学习了精益闭环的思路，也讲解了不少案例。其实精益闭环的思路可以应用在各种事项上，今天我们就来讲解一个有意思的延伸应用的场景------需求文档。"写需求文档"这件事，如果用精益闭环的思路来做，会有怎样的效果呢？现在你可能还想不明白，不过没关系，我想先从一个问题引入。在工作中，你可能经常要接触"需求文档"，可你喜欢写、喜欢看需求文档吗？我想你的答案是否定的。为什么会这样呢？这是因为常规的需求文档就像一本厚厚的遥控器使用手册，看起来很专业，但是你宁可自己去试着摆弄、探索各种功能按钮，也不会愿意一页一页地读下去。除非实在是遇到了搞不定的问题，你才会从使用手册里有针对性地寻找相关内容。同样的，在实际工作中，很多研发人员也会更愿意看图文并茂的原型说明（原型图是需求文档的部分表现形式，不能代表需求文档），而不是一堆干巴巴的文字。
## 我们为什么需要需求文档？但是，需求文档又十分的重要。如果需求文档写不清楚，产品经理就无法向设计师和研发人员传达具体的要求，也就是说这会让设计师和研发人员不知道该做些什么。需求文档其实可以看作是产品经理与设计师、开发人员之间的一种"协议"，或者说是"契约"，可以约束双方。而且，后面在进行上线前的测试时，需求文档也会被用做产品质量验收的衡量标准之一。``{=html}不过由于传统型需求文档写得"没人愿意看"，时间长了，需求文档就如同鸡肋，食之无味，弃之可惜。
## 四个要点写好需求文档既然需求文档这么重要，传统型需求文档又啰嗦繁杂，那么我们怎样写需求文档才能清楚、有逻辑地传达信息呢？先来看看传统的需求文档一般包含哪些内容。我试图从网上下载现成的需求文档模版，发现内容太多了，这里只展示一个大概的逻辑框架：包含需求背景、需求目标；功能特性列表、主要逻辑、特性功能点；性能需求、数据情况等。![](Images/582d465709d07c29d756bec680343626.png){savepage-src="https://static001.geekbang.org/resource/image/66/fc/662ba5501968c5b65c18ae903837d2fc.png"}你有没有发现，**常规的需求文档和传统的设计思路出的是同一个问题：面面俱到，却没有重点、缺乏针对性**。怎么证明要做的这若干事项都是必要的，都是能达成目标的，而且是最高效的？感觉完全是需求方一个人的独角戏。而位居下游的设计师和开发人员只能照单全收，加班加点的完成，却不知道这很可能是白费时间。现在其实已经有不少公司把"普通"产品经理和设计师划进平行的部门，平等对待。即产品经理不再是设计师的上游，而是[把有能力出策略的产品经理单独提出来，放到更上游的位置，为"普通"产品经理和设计师提需求]{.orange}。这是因为有越来越多的人认识到，不会定策略的产品经理一样属于执行角色，应该处于下游位置。传统的需求文档模版在多年前帮助很多小白快速上路，但却明显不再适应目前时代的发展，禁锢住了更多人前行。不过好在现在有了精益闭环的思路，我们看看如何用它解决问题。具体的解决方法和前面做设计的思路一样，我们可以去繁求简，只保留最核心的内容，用这四点一一拆分，这样入手是不是就简单多了？而且逻辑也变得更清晰了。我们做每一件事都应该有对应的目的，而不是再像以前那样，**好像是为了做功能而做功能，却不明白意义和如何验证结果。**下面我来具体讲解一下，这四点中每一点对应的内容可以怎样分解成我们最终拿到手的需求文档。
### 1. 指标在第一点"指标"这一模块里，需求文档需要体现出的至少有四点：需求背景、用户群体、需求所在业务模块、量化指标/ 非量化目标。写需求背景，就是要说明这个需求产生的来源，阐述明白我们为什么要做这个需求。比如它对达成北极星指标有什么样的意义，是否围绕一级方向等等。这是一个产品的立足之本。在需求背景说明后，我们还需要在指标模块里考虑用户群体。考虑用户群体，就是在考虑"谁在使用这个产品"，包含我们早先讨论过的用户范围、分类、优先级、差异性洞察等等。这些内容不仅帮助项目组其他人更好地理解需求，也影响着需求的优先级和开发方向。接下来是需求所在的业务模块。我们如果要量化指标，必须要有个进行切分的入手之处。比如围绕公司当前阶段的北极星指标，分解到目前所在的业务模块和当前的用户需求，指标应该怎么定，分解的依据是什么。而且，用需求所在的业务模块做划分的话，你会发现自己写需求文档会越来越轻松。因为当你在写新的需求文档时，你会发现，同种类的业务模块中的需求总有类似的。时间一久，你自然会了解这一类型的业务模块中，总会出现什么样的需求，对问题和需求的描述也会越来越清晰、完备。之后要完成指标的量化切分。我们可以把所有的需求点按照业务模块或者针对的用户群体做好划分，这样才能一点一点整合信息，避免需求点太过零散琐碎。比如，我们如果是用业务模块做的划分，再细分下去的话，可以再分为具体功能模块，具体功能模块下才是真正的需求点。而这些需求点对应用户旅程的哪个部分，可以解决用户的什么问题，对应什么样的拆分指标以达成北极星指标呢？根据上述这些内容综合排列优先级，这样阅读需求文档的人就可以清楚、轻松地看懂哪些需求可以放在哪些版本中。