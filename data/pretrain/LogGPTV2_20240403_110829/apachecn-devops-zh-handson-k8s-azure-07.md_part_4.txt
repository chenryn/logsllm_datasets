它显示了节点的 CPU 和内存使用情况:
![Output displaying CPU and memory utilization of the nodes](img/B17338_07_26.jpg)
图 7.26:节点的 CPU 和内存利用率
请注意，这是该时间点的实际消耗，而不是某个节点的请求数量。要获取请求，您可以执行以下操作:
kubectl 描述节点
这将显示每个 pod 的请求和限制，以及整个节点的累计数量:
![Output displaying requests and limits per pod, as well as the total of allocated resources](img/B17338_07_27.jpg)
图 7.27:描述节点显示了请求和限制的细节
正如您在*图 7.27* 中看到的那样，**描述节点**命令跨名称空间输出每个 pod 的请求和限制。这是群集操作者验证所有名称空间上的群集负载量的好方法。
现在您知道在哪里可以找到关于节点利用率的信息了。在下一节中，您将了解如何为单个 PODS 获取相同的指标。
### 荚果消耗
Pods 消耗 AKS 集群的 CPU 和内存资源。请求和限制用于配置 pod 可以消耗多少 CPU 和内存。请求用于保留最小数量的 CPU 和内存，而限制用于设置每个 pod 的最大 CPU 和内存数量。
在本节中，您将学习如何使用 **kubectl** 来获取关于 pods 的 CPU 和内存利用率的信息。
让我们从探索如何查看您当前运行的 pod 的请求和限制开始:
1.  For this example, you will use the pods running in the **kube-system** namespace. Get all the pods in this namespace:
    kubectl get pods -n cube system
    这应该会显示类似于*图 7.28* 的内容:
    ![Output displaying pods running in the kube-system namespace](img/B17338_07_28.jpg)
    图 7.28:运行在 kube 系统命名空间中的 pods
2.  Let's get the requests and limits for one of the **coredns** pods. This can be done using the **describe** command:
    `kubectl`特尔在核下 -N 库贝系统
    在**描述**命令中，应该有类似*图 7.29* 的部分:
![Displaying the limits and requests for the CoreDNS pod](img/B17338_07_29.jpg)
图 7.29:核心域名系统的限制和请求
这说明这个 Pod 的内存限制是 **170Mi** ，没有 CPU 限制，请求 100 m CPU(也就是 0.1 个 CPU)和 **70Mi** 的内存。这意味着，如果这个 Pod 消耗了超过 170 MiB 的内存，Kubernetes 将重新启动那个 Pod 。Kubernetes 也为这个 pod 预留了 0.1 个 CPU 内核和 70 MiB 的内存。
请求和限制用于在集群中执行容量管理。您还可以获得 pod 的实际 CPU 和内存消耗。运行以下命令，您将获得所有名称空间中的实际 pod 使用情况:
kubectl 顶级 pods -所有名称空间
这将显示类似于图 7.30 的输出:
![Running a command to get the actual pod consumption in all namespaces](img/B17338_07_30.jpg)
图 7.30:查看 pods 的 CPU 和内存消耗
使用 **kubectl top** 命令显示了该命令运行时的 CPU 和内存消耗。在这种情况下，您可以看到 **coredns** pods 使用的是 **3m** CPU 和 **10Mi** 内存。
在本节中，您已经使用了 **kubectl** 命令来深入了解集群中节点和单元的资源利用率。这是有用的信息，但仅限于特定的时间点。在下一节中，您将使用 Azure 门户获得有关集群和集群顶部应用的更多详细信息。您将从探索 **AKS 诊断**窗格开始。
## 使用 AKS 诊断
当您在 AKS 中遇到问题时，开始探索的好地方是 **AKS 诊断**面板。它为您提供了工具，帮助您调查与底层基础架构或系统集群组件相关的任何问题。
#### 注意:
在写这本书的时候，AKS 诊断正在预览中。这意味着可以添加或删除功能。
要访问 AKS 诊断，点击 AKS 菜单中的**诊断和解决问题**选项。这将打开诊断，如*图 7.31* 所示:
![An overview of the AKS Diagnostics pane in the Azure portal](img/B17338_07_31.jpg)
图 7.31:访问 AKS 诊断
AKS 诊断为您提供了两种诊断和探索问题的工具。一个是**集群洞察**，另一个是**联网**。Cluster Insights 使用集群上的集群日志和配置来执行运行状况检查，并将集群与最佳实践进行比较。它包含有用的信息和相关的健康指标，以防集群中出现任何错误配置。集群洞察的示例输出显示在*图 7.32* 中:
![Example output of Cluster Insights as seen in the Azure portal](img/B17338_07_32.jpg)
图 7.32:集群洞察的输出示例
AKS 诊断的网络部分允许您交互式地解决集群中的网络问题。当您打开“网络”视图时，会出现几个问题，这些问题会触发网络运行状况检查和配置审查。一旦您选择了其中一个选项，交互工具将给出这些检查的输出，如图 7.33*所示:*
![Diagnosing networking issues using AKS Diagnostics](img/B17338_07_33.jpg)
图 7.33:使用 AKS 诊断工具诊断网络问题
当您在群集上面临基础架构问题时，使用 AKS 诊断非常有用。该工具会对您的环境进行扫描，并验证是否一切运行正常且配置良好。但是，它不会扫描您的应用。这就是 Azure Monitor 的用武之地；它允许您监控应用并访问应用日志。
## Azure 监控指标和日志
在本章的前面，您使用 **kubectl** 命令行工具探索了集群中节点和荚的状态和度量。在 Azure 中，您可以从节点和 pods 中获取更多指标，并从集群中的 pods 中浏览日志。让我们从探索 Azure 门户中的 AKS Insights 开始。
### AKS 洞察
AKS 窗格的**洞察**部分提供了您需要了解的关于集群的大部分指标。它还能够深入到容器级别。您还可以看到容器的日志。
#### 注意:
AKS 窗格的洞察部分依赖于 Azure 容器监视器。如果您使用门户默认设置创建了群集，则默认情况下会启用该设置。
Kubernetes 提供度量标准，但不存储它们。Azure Monitor 可用于存储这些指标，并使它们可以随时查询。为了将相关的度量和日志收集到 Insights 中，Azure 连接到 Kubernetes API 来收集度量和日志，然后将它们存储在 Azure Monitor 中。
#### 注意:
容器的日志可能包含敏感信息。因此，应该控制和审核查看日志的权限。
让我们从集群指标开始，探索 AKS 窗格的**洞察**选项卡。
### 集群度量
**洞察**显示集群指标。*图 7.34* 显示了集群中所有节点的 CPU 利用率和内存利用率。您可以选择添加附加筛选器来筛选特定的命名空间、节点或节点池。还有一个实时选项，可为您提供有关集群状态的更多实时信息:
![Viewing CPU and memory utilization for the cluster in the Cluster tab](img/B17338_07_34.jpg)
图 7.34:集群选项卡显示了集群的 CPU 和内存利用率
群集指标还显示节点数和活动盒数。节点计数很重要，因为您可以跟踪是否有任何节点处于**未就绪**状态:
![Checking the node count and the number of active pods in the Cluster tab](img/B17338_07_35.jpg)
图 7.35:集群选项卡显示了节点数量和活动盒的数量
**集群**选项卡可用于监控集群中节点的状态。接下来，您将浏览**报告**选项卡。
### 报告
AKS Insights 中的**报告**选项卡允许您访问许多预配置的监控工作簿。这些工作簿将文本、日志查询、指标和参数结合在一起，并为您提供丰富的交互式报告。您可以深入查看每个单独的报告，以获取更多信息和预构建的日志查询。可用报告见*图 7.36* :
#### 注意
撰写本书时，报告功能处于预览状态。
![An overview of the Reports tab that allows access to preconfigured monitoring workbooks](img/B17338_07_36.jpg)
图 7.36:报告选项卡允许您访问预配置的监控工作簿
例如，您可以浏览**部署**工作簿。这在*图 7.37* 中显示:
![An overview of the Deployments workbook, which shows the status of all the deployments](img/B17338_07_37.jpg)
图 7.37:部署工作簿显示了您的部署状态
这将向您显示默认情况下的所有部署、它们的运行状况以及最新状态。正如您所看到的，它向您显示了当您在本章前面用活动和就绪探测进行探索时**服务器 1** 暂时不可用。
您可以深入了解各个部署的状态。如果您点击在*图 7.37* 中突出显示的**日志**按钮，您将被重定向到带有预建查询的日志分析。然后，您可以修改该查询并更深入地了解您的工作负载，如图 7.38*所示。*
 *![Drilling down in Log Analytics to get more details on the deployments](img/B17338_07_38.jpg)
图 7.38:深入查看日志分析，了解部署的更多详细信息
#### 注意:
日志分析中使用的查询使用**库斯托查询语言** ( **KQL** )。要了解更多关于 KQL 的信息，请参考文档:[https://docs . Microsoft . com/azure/data-explorer/kusto/concepts/](https://docs.microsoft.com/azure/data-explorer/kusto/concepts/)
AKS Insights 中的**报告**选项卡为您提供了许多预构建的监控工作簿。下一个标签是**节点**标签。
### 节点
**节点**视图显示了节点的详细指标。它还向您展示了每个节点上运行的 Pod ，如您在*图 7.39* 中所见:
![Detailed metrics of the nodes as seen in the Nodes pane](img/B17338_07_39.jpg)
图 7.39:节点窗格中节点的详细度量
请注意，可以从搜索栏旁边的下拉菜单中查看不同的指标。如果您需要更多的详细信息，您也可以点击并从您的节点获取 Kubernetes 事件日志:
![Clicking on the View Kubernetes event logs option to get the logs from a cluster](img/B17338_07_40.jpg)
图 7.40:单击查看 Kubernetes 事件日志，从集群中获取日志
这将打开 Azure 日志分析，并将为您预先创建一个查询，显示您的节点的日志。在*图 7.41* 中的示例中，您可以看到节点重新启动了几次，并且还发出了**invaliddiscapacity**警告:
![An overview of Log Analytics displaying a pre-created query to show the logs for your node](img/B17338_07_41.jpg)
图 7.41:显示节点日志的日志分析
这为您提供了有关节点状态的信息。接下来，您将探索**控制器**选项卡。
### 控制器
**控制器**选项卡向您显示集群上所有控制器(即复制集、DaemonSets 等)的详细信息以及在其中运行的单元。这向您展示了以控制器为中心的运行 Pod 视图。比如你可以找到**服务器 1** 副本集，看到里面运行的所有 PODS 和容器，如图*图 7.42* :
![An overview of the Controllers tab displaying all the pods running in a ReplicaSet](img/B17338_07_42.jpg)
图 7.42:控制器选项卡显示了在复制集中运行的所有 Pod 
下一个选项卡是**容器**选项卡，它将向您显示容器的度量、日志和环境变量。
### 容器度量、日志和环境变量
点击**容器**选项卡，列出容器度量、环境变量和对其日志的访问，如图*图 7.43* 所示:
![An overview of the Containers tab displaying all the individual containers](img/B17338_07_43.jpg)
图 7.43:容器选项卡向我们显示了所有单独的容器
#### 注意:
您可能会注意到几个状态为**未知**的容器。如果**洞察**窗格中的容器具有**未知**状态，这是因为 Azure Monitor 具有关于该容器的日志和信息，但是该容器不再在集群上运行。
您也可以从该视图访问容器的日志:
![Clicking the View container logs option to access the logs from the containers tab itself](img/B17338_07_44.jpg)
图 7.44:访问容器的日志
这将向您显示 Kubernetes 从您的应用中记录的所有日志。在本章的前面，您使用了 **kubectl** 来访问容器日志。使用这种方法可以提高工作效率，因为您可以在一个视图中编辑日志查询并关联来自不同 pod 和应用的日志:
![Displaying logs that Kubernetes logged from the application in a single view](img/B17338_07_45.jpg)
图 7.45:日志被收集并且可以被查询
除了日志，该视图还显示了为容器设置的环境变量。要查看环境变量，向下滚动**容器**视图的右单元格:
![Viewing the environment variables set for the container](img/B17338_07_46.jpg)
图 7.46:为容器设置的环境变量
AKS Insights 中的最后一个选项卡是**部署**选项卡，接下来您将探索该选项卡。
### 部署
最后一个标签是**部署**标签。此选项卡为您提供集群中所有部署的概述，并允许您通过选择它来获得部署的定义。如您在*图 7.47* 中所见，您可以在**description**(文本格式)或 **RAW** (YAML 格式)中获得此视图:
![An overview of the Deployments tab in the AKS Insights pane](img/B17338_07_47.jpg)
图 7.47:AKS 洞察中的部署选项卡
通过使用 AKS 中的**洞察**面板，您可以获得关于集群的详细信息。您研究了本节中的不同选项卡，并了解了如何深入查看和访问可自定义的日志查询，以获得更多信息。
这一部分到此结束。让我们确保使用以下命令清理本章中创建的所有资源:
kubectl delete -f
在本节中，您探讨了在 Kubernetes 之上运行的监控应用。您使用 Azure 门户中的 AKS **Insights** 选项卡来获得集群和集群上运行的容器的详细视图。
## 总结
本章首先学习如何使用不同的 **kubectl** 命令来监控应用。然后，您探索了如何使用在 Kubernetes 中创建的日志来调试该应用。日志包含写入**标准输出**和**标准输出**的所有信息。
之后，您切换到 Azure 门户，并开始使用 AKS 诊断来探索基础架构问题。最后，您探索了使用 Azure Monitor 和 AKS Insights 来显示 AKS 指标和环境变量，以及带有日志过滤的日志。
在下一章中，您将学习如何将 AKS 集群连接到 Azure PaaS 服务。您将特别关注如何将 AKS 集群连接到由 Azure 管理的 MySQL 数据库。*