ous routing using Abovenet topology. Since its trafﬁc demands are
 2.5
 2
 1.5
 1
 0.5
 0
 120
 2.5
 2
 1.5
 1
 0.5
 0
 120
 2.2
 2
 1.8
 1.6
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 100
multi
peak
dynamic
oblivious
COPE
optimal
 130
 140
 150
 160
 170
 180
 190
 200
(a) Tuesday, March 23, 2004.
Interval
multi
peak
dynamic
oblivious
COPE
optimal
 130
 140
 150
 160
 170
 180
(b) Thursday, March 25, 2004.
Interval
multi
peak
dynamic
oblivious
COPE
optimal
 120
 140
 160
 180
 200
(c) Saturday, March 27, 2004.
Interval
Figure 11: Time series plots of MLU: Abilene traces.
multi
peak
dynamic
oblivious
COPE
optimal
 0.18
 0.16
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
U
L
M
U
L
M
U
L
M
U
L
M
 0.02
 100
 120
 140
 160
 180
 200
Interval
 220
 240
 260
 280
Figure 12: Time series plots of MLU: Abilene traces on Mon-
day, March 22, 2004.
not available, we use the gravity model [53] described in [33] to
generate sample synthetic trafﬁc demands.
s
u
o
i
v
i
l
b
o
/
E
P
O
C
f
o
U
L
M
 1.6
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
oblivious (ratio=2.01)
COPE (PE=2.05)
y = x
y = 1.9 x
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
Optimal MLU
Figure 13: Scatter plot of MLU: Abovenet with gravity model
trafﬁc.
Figure 13 summarizes the results. The ﬁgure is a scatter plot,
where each point represents one sample. The x-axis is the opti-
mal MLU for the sample trafﬁc matrix, and the y-axis is the MLU
achieved by COPE or oblivious routing. In this evaluation, COPE
uses a penalty envelope of 2.05, while the oblivious ratio of Abovenet
is 2.014. In other words, the penalty envelope of COPE is only 2%
more than the worst-case bound of oblivious routing. Interestingly,
relaxing the worst-case bound slightly is sufﬁcient to allow COPE
to consistently achieve close-to-optimal performance. In compari-
son, the MLU of oblivious routing is much higher, up to 1.9 times
of the optimal MLU.
Effects of penalty envelope:
There is a trade-off in choosing different values of penalty enve-
lope. When the value of the penalty envelope is high, the penalty
guarantee is weak; however, a higher value of envelope leaves more
room for optimizing common-case performance. When the enve-
lope is set to be a very large value, the algorithm becomes prediction-
based routing. On the other hand, when the value of the envelope is
low, the penalty guarantee is strong; but not much room is left for
optimizing common-case performance. When the penalty envelope
is equal to the oblivious ratio of the whole possible trafﬁc set, the
scheme becomes oblivious routing.
To evaluate the effects of the penalty envelope, we study the per-
formance of the US-ISP and Abilene traces as we vary the penalty
envelope. Figure 14 shows the results. Note that the time interval
of the US-ISP traces is an hour, while that of the Abilene traces is 5
minutes. Note also that we choose a 10-day period for the US-ISP
traces, and choose a one-week period from March 22 and March
28 for the Abilene traces, as they best demonstrate the effects of
penalty envelope.
We observe that as we increase the value of penalty envelope,
the performance of most intervals improves. For example, for the
US-ISP traces, the medium performance ratio (i.e., the performance
ratio at the middle of the sorted intervals) decreases by 23% as we
increase the penalty envelope from 2.05 (the oblivious ratio) to 2.2;
for the Abilene traces, the medium performance ratio decreases by
18% as we increase the penalty envelope from 1.85 (the oblivious
ratio) to 2.0. When we increase the envelope beyond 2.2 for US-
ISP and 2.0 for Abilene, however, the performance improvement
is small. Since a larger value of penalty envelope implies larger
potential worst-case performance ratio, 2.2 appears to be a good
penalty envelope for US-ISP, and 2.0 for Abilene. In addition, Fig-
ure 14 shows that by choosing a penalty envelope slightly higher
than the oblivious ratio, we achieve about 20% performance im-
provement for both US-ISP and Abilene. Note that US-ISP and
o
i
t
a
r
e
c
n
a
m
r
o
f
r
e
P
o
i
t
a
r
e
c
n
a
m
r
o
f
r
e
P
 2.2
 2
 1.8
 1.6
 1.4
 1.2
 1
 0
 1.9
 1.8
 1.7
 1.6
 1.5
 1.4
 1.3
 1.2
 1.1
 1
 0
oblivious
PE = 2.2
PE = 2.4
PE = 2.6
PE = 2.8
 100
 50
 200
Intervals sorted by performance ratio
 150
(a) US-ISP traces.
oblivious
PE = 1.9
PE = 2.0
PE = 2.1
PE = 2.2
 1000
 500
Intervals sorted by performance ratio
(b) Abilene traces: March 22-28, 2004.
 1500
 2000
 250
 2500
Figure 14: Effects of penalty envelope.
Abilene have typical topologies that are representative for a wide
range of networks. These results suggest that by increasing the
penalty envelope to be just 10% above the lowest possible, we can
already have enough room to optimize common-case performance.
Summary: Prediction-based algorithms can pay serious perfor-
mance penalty when large trafﬁc changes happen. They can drive
trafﬁc intensity to be over link capacity when the optimal network
utilization is well below 100%. Oblivious routing pays perfor-
mance penalty under normal trafﬁc, driving utilization to be 30% to
90% higher than optimal in our evaluations. COPE avoids the per-
formance penalties of both, and combines the best of both. Com-
pared with the prediction-based algorithms, COPE retains their close-
to-optimal performance under expected trafﬁc demands, but avoids
surge in network utilization and performance ratio under large traf-
ﬁc changes. Compared with oblivious routing, COPE also guaran-
tees worst-case performance, but avoids the performance penalty
of oblivious routing under predictable demands.
5. TRAFFIC ENGINEERING WITH
INTERDOMAIN ROUTING
In this section, we develop a light-weight mechanism to handle
interdomain routing. As we point out in Section 1, interdomain
routing introduces two challenges. The ﬁrst is point-to-multipoint
demand; that is, there can be multiple equally-good egress points
to a given external (i.e., interdomain) destination preﬁx in the BGP
decision process [17]. Thus, COPE needs to break the tie and as-
sign the egress point of each external destination. Since egress links
may become the bottlenecks of the network [16], this tie-breaking
can affect the congestion of the network. Second, there are a large
number of external destination preﬁxes each with their own set of
egress points. ISPs have less control over interdomain routes, but
some changes in the availability of interdomain routes can cause
signiﬁcant shifts of trafﬁc. Thus, COPE should compute a routing
that is robust to the trafﬁc changes caused by changes of interdo-
main routes.
5.1 COPE with Interdomain Routing
Our high-level approach is a two-step process. In the ﬁrst step,
we convert the point-to-multipoint interdomain problem to a point-
to-point intradomain problem in a topology extending the intrado-
main topology. By solving the latter problem, we obtain an as-
signment of external destinations to their egress points. This gives
us point-to-point ingress-egress (IE) trafﬁc matrices involving only
intradomain nodes. In the second step, we apply COPE to the IE
matrices to compute an intradomain routing. Since COPE tolerates
trafﬁc variations, the computed routing is robust against trafﬁc vari-
ations due to shifts of egress points caused by dynamic interdomain
routes.
peer
intradomain topology
peer
e
c
a
b
d
virtual
1. Group trafﬁc demands that share the same set of egress
points into an equivalence class, EQ.
2. For each EQ, derive its pseudo OD demand that
consists of all the OD demands belonging to EQ
(cid:10)
3. Initialize G
to include intradomain topology,
peers, peering links, and virtual nodes representing EQ’s
4. Connect a virtual node to its corresponding peers
using a virtual link with inﬁnite capacity
(cid:10)
5. Apply COPE to compute routing on G
for the
pseudo demands
6. Derive the splitting ratios based on the routes
7. Assign interdomain preﬁxes to egress points
Figure 16: Step 1 of COPE with interdomain routing: convert
point-to-multipoint to point-to-point demands by determining
splitting ratios.
1. Initialize G to be the intradomain topology
2. Compute IE demands based on the splitting ratios
derived in Figure 16.
3. Apply COPE to compute intradomain routes
in G for ingress-egress demands
virtual
Figure 17: Step 2 of COPE with interdomain routing: compute
robust intradomain routing.
are available for routing the OD demand. This change does not
affect intradomain routing, since intradomain routing is robust to
trafﬁc changes through the use of penalty envelope.
5.2 Evaluation Results
Next we present our preliminary evaluation of COPE in dealing
with interdomain routing dynamics.
We ﬁrst extend the Abilene topology. From those ASes that peer
with Abilene, we choose two (ESNET and DREN) and add them
as virtual destinations. Each one represents a collection of inter-
domain destination preﬁxes. ESNET has 3 peering links with Abi-
lene, and DREN has 4. For each peering link, we insert an AS in
between. Therefore, in the ﬁnal topology, Abilene has 3 neighbor-
ing ASes connecting to ESNET, and 4 connecting to DREN. The