### Configurable Parameter for Construction Correctness
By the property of \(\psi\), \(P_1\) receives the required comparison bit \(comp\). The protocol is formally described in Figure 8.

#### Parameters
- There are \(n\) parties \(P_1, \ldots, P_n\) with \((n, t)\)-shares \([a]\) of \(a \in \mathbb{F}_p\).
- \(n > k\), \(n > 2t\), and \(\tau\) is a configurable parameter for construction correctness.
- \(J = \lceil \log | \mathbb{F}_p | \rceil\).
- All additions and multiplications are over the field \(\mathbb{F}_p\).

#### Polynomial Definition
The polynomial \(\psi\) (publicly known to all parties) is defined as:
\[
\psi(x) = 
\begin{cases} 
(x - k) \cdot (x - (k + 1)) \cdots (x - n) & \text{if } k \geq \frac{n}{2} \\
x \cdot (x - 1) \cdot (x - 2) \cdots (x - (k - 1)) & \text{if } k < \frac{n}{2}
\end{cases}
\]

#### Input
For each \(i \in [n]\), \(P_i\) inputs its \((n, t)\)-share \([a]_i\).

#### Protocol
1. **Pre-processing:**
   - \(P_1, \ldots, P_n\) run:
     \[
     [s_1], \ldots, [s_J] \leftarrow \text{RandomF}_{n,t}(J)
     \]

2. **Evaluating the Polynomial:**
   - On input \([a]\), invoke \(\text{MultF}_{n,t}\) to compute all the required \([a_i]\), followed by scalar multiplications and additions to compute \([\psi(a)]\).
   - For each \(j \in [J]\):
     \[
     [v_j] \leftarrow \text{MultF}_{n,t}([\psi(a)], [s_j])
     \]
     \[
     v_j \leftarrow \text{Reveal}_{n,t}([v_j])
     \]

#### Output
- If \(k \geq \frac{n}{2}\):
  - If \(v_j = 0\) for all \(j \in [J]\), \(P_1\) sets \(comp = 1\); otherwise, \(comp = 0\).
- If \(k < \frac{n}{2}\):
  - If \(v_j = 0\) for all \(j \in [J]\), \(P_1\) sets \(comp = 0\); otherwise, \(comp = 1\).
- Other parties get no output.

**Figure 8: WEAK COMPARISON PROTOCOL I**

### Theorem 5.2
The protocol in Figure 8 securely realizes \(F_{p,k,n,t}^{\text{w-CMP}}\) in the \(F\)-hybrid model, where \(F = (\text{RandomF}_{n,t}, \text{MultF}_{n,t}, \text{Reveal}_{n,t})\), against a semi-honest adversary corrupting \(t < \frac{n}{2}\) parties. The total amortized communication cost of the protocol is at most \(14k'(n - 1)(\lceil \log n \rceil + 1) + 17\tau(n - 1)\), and the round complexity is \(6 + 2k'\), where \(k' = \min\{k - 1, n - k\}\).

A complete proof of Theorem 5.2 is provided in Appendix E.1, and the complexities are discussed in Appendix F.2.1.

### 5.2.2 Weak Comparison Protocol w-CMP2
This protocol is a slight modification of the comparison protocol from [12]. The main idea is as follows: For \(0 \leq a, k < n\),
\[
a \geq k \iff \left\lfloor \frac{a - k}{2^\gamma} \right\rfloor = 0 \quad \text{(where } \gamma = \lceil \log n \rceil + 1 \text{)}
\]
Thus, the protocol takes the \((n, t)\)-shares of \(a\) and evaluates the \((n, t)\)-shares of \(\left\lfloor \frac{a - k}{2^\gamma} \right\rfloor\). This protocol invokes the multiparty functionalities \(\text{MultF}_{n,t}\), \(\text{RandomF}_{n,t}\), and \(\text{Reveal}_{n,t}\). Corresponding to the instantiations of these functionalities used in [12], their protocol has an \(n^2\) factor in the communication complexity. Instead, we use the instantiations from [21] for these functionalities, which reduces the communication complexity. For completeness, we provide the full protocol, appropriately modified and simplified to instantiate \(F_{p,k,n,t}^{\text{w-CMP}}\), in Appendix E.2.

### 6. Implementation and Evaluation
In this section, we discuss the performance of our mPSI (multiparty PSI) protocols. Let Protocol A, Protocol B, and Protocol C denote our mPSI protocols when instantiated with polynomial-based batch OPPRF [65], table-based OPPRF [51], and relaxed batch OPPRF [13], respectively. We compare the performance of our mPSI protocols with the state-of-the-art mPSI protocol in literature [51].

#### Protocol Parameters
- Statistical security parameter \(\kappa = 40\)
- Computational security parameter \(\lambda = 128\)
- Correctness of Theorem 3.1 requires Cuckoo hashing failure in Step 2 (Figure 4) to be at most \(2^{-41}\).
- Similar to [13, 51, 65, 67], we use empirical analysis to instantiate the parameters of the Cuckoo hashing scheme in the stash-less setting as \(\beta = 1.28m\) for \(K = 3\) (see Section 2.2).
- Based on Theorem 3.1, we set the size of elements \(\sigma = \kappa + \lceil \log m \rceil + 3\) to achieve statistical security of \(\kappa\) bits.
- The minimum element size \(\sigma\) required in the mPSI protocol to ensure that the failure probability is at most \(2^{-40}\) is 55, 59, and 63 for input set sizes \(2^{12}\), \(2^{16}\), and \(2^{20}\), respectively.
- In the implementation of Step 4 (see Figure 4) of the mPSI protocol for input set sizes \(2^{12}\) and \(2^{16}\), we perform arithmetic over the prime field where the prime is the Mersenne prime \(2^{61} - 1\).
- For input set size \(2^{20}\), we choose the prime field with Mersenne prime \(2^{127} - 1\) for the LAN setting; for the WAN setting, we choose the Galois Field over an irreducible polynomial where each element is represented in 64 bits. This is due to the compute vs. communication trade-offs between the two fields.
- Based on correctness analysis, we set \(\sigma = \kappa + \lceil \log m \rceil + \lceil \log n \rceil + 2\) for our Circuit PSI and qPSI protocols, i.e., the larger of the element sizes required by these two protocols.

#### Implementation Details
- We use the implementation of polynomial-based batch OPPRF [65] and table-based OPPRF [51] available at [25] and [60], respectively.
- For the implementation of relaxed batch OPPRF [13] and equality test functionality \(F_\ell^{\text{EQ}}\) [13, 23, 32, 68], we use the code available at [58].
- For Boolean to Arithmetic share conversion functionality \(F_F^{\text{B2A}}\) [68], we use the implementation of correlated OTs available at [57].
- Finally, we use the code available at [20] for multiparty functionalities [21, 52] (see Section 2.5).

#### Experimental Setup
- Similar to [51], we ran our experiments on a single machine with a 64-core Intel Xeon 2.6GHz CPU and 256GB RAM, and simulated the network environment using the Linux `tc` command.
- We configured a LAN connection with a bandwidth of 10 Gbps.

**Table 2: Total Communication in MB of mPSI Protocols: KMPRT [51] and Protocol A**

| \(n, t\) | \(m\) | KMPRT | Protocol A |
|----------|-------|--------|------------|
| 4, 1     | \(2^{16}\) | 114.1 | 49.4 |
| 4, 1     | \(2^{12}\) | 7.2   | 3.2   |
| 4, 1     | \(2^{20}\) | 2057.7 | 790.2 |
| 5, 2     | \(2^{12}\) | 13.4  | 4.6   |
| 5, 2     | \(2^{16}\) | 211.2 | 72.7  |
| 5, 2     | \(2^{20}\) | 3805.4 | 1162.8 |
| 10, 4    | \(2^{12}\) | 103.4 | 22.5  |
| 10, 4    | \(2^{16}\) | 706.2 | 192.4 |
| 10, 4    | \(2^{20}\) | 12730.4 | 3077.2 |
| 15, 7    | \(2^{16}\) | 1635.4 | 353.4 |
| 15, 7    | \(2^{20}\) | 29487.9 | 5652.9 |

**Table 3: Client Communication in MB of mPSI Protocols: KMPRT [51] and Protocol A**

| \(n, t\) | \(m\) | KMPRT | Protocol A |
|----------|-------|--------|------------|
| 4, 1     | \(2^{16}\) | 51.9  | 19.9  |
| 4, 1     | \(2^{12}\) | 3.3   | 1.3   |
| 4, 1     | \(2^{20}\) | 935.2 | 318.0 |
| 5, 2     | \(2^{12}\) | 4.9   | 1.5   |
| 5, 2     | \(2^{16}\) | 77.8  | 23.3  |
| 5, 2     | \(2^{20}\) | 1402.0 | 372.6 |
| 10, 4    | \(2^{12}\) | 13.1  | 2.4   |
| 10, 4    | \(2^{16}\) | 131.7 | 30.8  |
| 10, 4    | \(2^{20}\) | 2373.5 | 492.1 |
| 15, 7    | \(2^{16}\) | 207.5 | 38.8  |
| 15, 7    | \(2^{20}\) | 3741.0 | 620.1 |