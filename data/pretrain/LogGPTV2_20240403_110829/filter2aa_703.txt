Scott Wolchok
“Spying the World from Your Laptop” @ LEET
Crawl Pirate Bay, scrape trackers
Tracked downloads for millions of IPs
TPB added magnet links last year
No more .torrent files; get data from DHT
“no central tracker that can be down”
“don’t need to rely on a single server”
http://thepiratebay.org/blog/175
DHT crawling presents challenges and 
opportunities for torrent downloaders
Uses for crawling:
*AA can track users & torrents
Pirates can build search engines overnight!
What’s a BitTorrent DHT?
List of trackers (servers) in the .torrent file
Torrent client sends “announce” to tracker
Tracker notes you’re there & sends back peers
Example: tracker.openbittorrent.com
Trackers tend to go down (read: get sued)
Want something more reliable
Solution: distributed hash tables (DHTs)
P2P network that stores key-value pairs
DHT
DHT[“One”] = 1
GET DHT[“Two”]
2
Peers & data have 160-bit IDs
Peer ID: “random”
Data ID: SHA-1 hash
Peers store data with similar IDs
PING
STORE(key, value)
FIND_NODE(id) – returns k closest peers (apply 
repeatedly)
FIND_VALUE(key) – like FIND_NODE, but 
returns value if known
Replace the tracker with a DHT
DHT
GET DHT[0x12AB…]
[127.0.0.1:31337, 10.0.0.1:80]
DHT[0x12AB…].add(1.2.3.4:6881)
magnet:?xt=urn:btih:cfa86e0e8f3831c24120b7f
ee7413b4da31ee748&dn=Linux+Mint+9.0+x8
Link straight to files, no .torrent (btih=infohash)
Find peers from DHT, fetch .torrent from them
Why? Legal shenanigans…
Two DHTs; 1 for Vuze, 1 for everyone else
Only cover Vuze in this talk to keep it simple
Should be possible to crawl Mainline as well
Reimplemented the Vuze protocol in C
Sybil attack: simulate 1000+ clients at once
Just sit and wait for values to come in
Cheaply captures 90%-99% of the DHT
“Defeating Vanish with Low-Cost Sybil Attacks 
Against Large DHTs”
Crawl: download torrent data from DHT 
(filenames, sizes, peers)
Index and search: import into PostgreSQL, use 
its keyword search against filenames
Rank results by popularity – we’ve got lists of 
downloaders, so count them!
Problem: DHT has (SHA-1(infohash), peers) but we 
want the infohash!
Solution: torrent descriptions
Leaked into the DHT by Vuze client
d1:d35:Fast & Furious[2009]DvDrip[Eng]-
FXG1:h20:\xaf\x19x.a\xf2\xab\xc9;(Ib\xac\x0c\
x1a\xa8\xc8\x0b\x1dO1:ri646e1:si733484531ee
One pass over logs
Import into PostgreSQL
CREATE INDEX idx_name_gin_newON 
torrent_descs_new USING
gin(to_tsvector(\'english\', name))
Just a big SQL query & simple Web page
SELECT * FROM (
SELECT DISTINCT ON (hash) name, hash, size, seeders, leechers,
ts_rank_cd(to_tsvector('english', name), query, 0) AS rank,
COALESCE(seeders, 0) +
COALESCE(leechers, 0) as myrank
FROM torrent_descs,
plainto_tsquery('english', %s) AS query
WHERE to_tsvector('english', name) @@ query AND
hash is not NULL AND
COALESCE(seeders, 1) <> 0) AS results
ORDER BY results.myrank DESC NULLS LAST LIMIT 100
Same crawl, just repeat it over time
Import makes 2 tables: peers and torrents
To map IPs  content, join on infohash!
SELECT … FROM peer_lists P, 
torrent_descriptions D WHERE
SHA-1(D.infohash) == P.dhtkey …
16 days of crawling, 3 crawls per day
Crawl: 8000 nodes over 2 hours
Should see ~20% of DHT
Average crawl indexed 1 million torrents
The Pirate Bay: 2.8 million torrents
Crawl: 81 minutes
Import crawl results: 13 minutes
Indexing: 6 minutes
Total: 100 minutes
Can go faster with more bandwidth
Trade off time vs. coverage
Torrent popularity rank
15.1 million peer lists
3.6 million torrent descriptions
1.5 million torrents w/both peers and 
descriptions, mapped to 7.9 million IPs
Content
Downloads
The Pacific, Part 9 (TV)
47,612
Iron Man (movie)
46,549
Alice in Wonderland 
(movie)
44,922
Lost, Ep. 16 (TV)
42,571
Dear John (movie)
42,562
The Back-Up Plan (movie) 39,568
Lost, Ep. 13 (TV)
34,979
Inspected manually, none obviously not 
copyright-infringing
…except a subscription to a search for “XXX” on 
BtJunkie.
If everyone really is “just downloading Linux 
ISOs,” they’re not using Vuze to do it.
Air date:
May 18
Friday!
User #1: all porn
User #2: also Iron Man, The Back-up Plan, 
Michael Jackson’s Greatest Hits, Iron Man 2…
Even caught myself unintentionally seeding a 
free movie trailer
DHT crawling can create search engines & 
monitor 8 million users
Suing torrent sites is a distraction; we can 
rebuild them fast
DHTs won’t help users hide
The future: DHT poisoning, more user lawsuits?
http://wiki.vuze.com/w/DHT
http://www.cse.umich.edu/~jhalderm/pub/pape
rs/unvanish-ndss10-web.pdf
http://scott.wolchok.org/dc18/dht/