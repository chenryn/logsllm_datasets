because the sum of the UDP data and UDP checksum is
constant, so we cannot control the ﬂow-id of the response.
In such cases, we resorted to ICMP probes.
2.3 Measurement Methodology
We used tokyo-ping, experimenting with both ICMP and
UDP probes, to measure diﬀerent ﬂows between source-
destination pairs. Probes were sent with a TTL value large
enough not to expire before reaching the target host.
During each run, we sent probes with 100ms spacing in
order to reduce the likelihood of ICMP rate limiting at the
destination. For each run, we sent 100 sequential classic
pings followed by 100 probes for each diﬀerent ﬂow-id to be
tested. We repeated this procedure 100 times. The inter-
leaving of probes reduced the risk of having speciﬁc ﬂow-ids
biased by temporary network events during the experiment
(e.g., routing changes). In such cases multiple or all ﬂow-ids
were likely to be aﬀected by the event. Additionally, running
the experiment 100 times improved statistical signiﬁcance.
Finally, we compared the distribution of RTTs returned by
normal ping with the distribution of RTTs obtained for each
Note that the RTT range between diﬀerent ﬂow-ids is small
(4ms). The same does not always hold in the experiments
we performed.
We stress that the RTT variability measured within each
individual ﬂow-id is quite low, especially compared to the
variability measured by ping.
In particular, ping reports
jitter approximately ﬁve times greater than the largest per
ﬂow-id jitter. The apparent discrepancy of ping measuring
lower RTTs than the minimum observed by setting the ﬂow-
ids is due to the fact that the six ﬂow-id values did not cover
the full range of treatment that the ﬂows might experience.
Repeating the experiment with 32 ﬂow-ids resulted in the
ping RTTs being in the same range as the RTTs measured
setting the ﬂow-ids.
Seeing this diﬀerence in performance among diﬀerent ﬂow-
ids, we decided to use paris-traceroute to enumerate the IP-
level paths between the two hosts. We found a surprisingly
high number of IP paths, mainly due to Equal Cost Multi-
Path (ECMP) conﬁgured over transoceanic links by an in-
termediate Tier-1 ISP.
3.2 Crossing the US using a single ISP
The above experiment showed that, in the presence of
diﬀerent IP paths, there may be diﬀerences in the RTT ob-
served by packets of diﬀerent ﬂows. To ensure we completely
understood what was happening, we decided to perform an
even more controlled experiment. We sent ICMP probes
from a server in Dallas to a server in Ashburn. The probes
crossed a single IP path in a single ISP.
Fig. 5 shows the results of this experiment. In this case,
the CDF for ping is not quantized because the source is a
FreeBSD host running a version of ping that does not round
RTT to three digits. In addition to the black staircase show-
ing the CDF of RTT as measured by ping, we plot another
staircase (shown in red) which is obtained by merging all of
the RTT measures with diﬀerent ﬂow-ids and applying the
same rounding. The red CDF is a very good approxima-
tion of the black one. This shows that the RTT distribu-
tion of ping is actually a sample from the collection of all
distributions for diﬀerent RTTs. The slight diﬀerences be-
tween the red and the black staircases are likely because our
merged distribution assumes that each ﬂow-id contributes
equally to the sample, which might not be the case with
ping. Moreover, 32 ﬂow-ids may not be enough to capture
the full variability observed by ping.
Looking at the per ﬂow-id curves, we see that the diﬀer-
ence between the RTTs of the ﬂows with highest and lowest
RTTs is even larger than in the ﬁrst experiment, while we
again observe low variability within each ﬂow-id. Traditional
ping can reliably estimate the upper and lower bounds of the
distribution, but substantially overestimates jitter.
This result puzzled us. Thanks to the operator, we looked
at the router conﬁgurations. Our probes crossed three lagged
hops, one within the ingress Point-of-Presence (PoP), one
across the long-haul core, and the last in the egress PoP.
Each bundle was composed of slightly less than ten links.
Could LAG cause ﬂows to experience such diﬀerent RTTs?
Experiments between Dallas and Seattle with both ECMP
and LAG showed similar behavior. We then ran two ex-
periments with sources and destinations within the same
PoP. In the ﬁrst, the source and destination hosts were both
connected to the same router. For the second, one LAG
was used between routers in the PoP. Neither of these tests
Figure 4: Per-ﬂow and ping measured RTT from a
source in Italy to a destination in the US.
distinct value of ﬂow-id. Each experiment was repeated sev-
eral times, on diﬀerent days, and at diﬀerent times of day,
to avoid bias due to timing and traﬃc patterns.
Our study diﬀers from [1] in the following aspects. First,
we focused on RTT rather than on IP-level topology discov-
ery. We made no attempt to discover paths to intermediate
routers. Second, we targeted destination hosts instead of
tuning the TTL to expire at the last router. This allowed
us to be much more conﬁdent of the distribution of RTTs,
as we were immune to the very common ICMP throttling
by routers. Further, as ICMP TTL expired message gener-
ation is done in software, the load of the destination router
strongly inﬂuences the RTT, adding to the variability of the
distribution. This was not the case with our method. Third,
we did not assume a one-to-one mapping of ﬂow-id to IP
path, in fact, the opposite. We probed diﬀerent ﬂow-ids
even when the IP-level path was exactly the same. Our ex-
periments showed that, in some cases, a single IP-level path
could exhibit signiﬁcantly diﬀerent per-ﬂow RTT distribu-
tions. Finally, we avoided the use of virtual machines as
sources and destinations, to avoid virtualization overhead’s
eﬀect on ﬁne grained timing.
3. PING, RTTS, AND JITTER
In this section we report results of our methods when ap-
plied to measure diﬀerent source-destination pairs. First, we
performed measurement in controlled environments, where
we had ground truth knowledge of the traversed paths. Then,
we conducted larger-scale experiments. We found that dif-
ferences in performance between diﬀerent ﬂow-ids can be
signiﬁcant. As a consequence, ping is in general a mediocre
estimator for RTTs and heavily overestimates jitter.
3.1 From Italy to the US
Our ﬁrst experiment ran tokyo-ping from a server in Italy
to a destination in the US, using 6 diﬀerent ﬂow-id values.
Results are depicted in Fig. 4 where each curve represents a
Cumulative Distribution Function (CDF). The black stair-
case is the CDF of RTTs as measured by ping. Each data
point (x, y) indicates that a y-fraction of ping probes ob-
served an RTT of at most x milliseconds. The ping CDF is
quantized because the Linux version of ping imposes a three
digit precision on the reported RTTs. Each colored curve
represents the CDF of RTTs measured for diﬀerent ﬂow-ids.
1041051061071081091100.00.20.40.60.81.0RTT (ms)CDFflow−id=1flow−id=2flow−id=3flow−id=4flow−id=5flow−id=6pingFigure 5: Experiment 2 - Performance of probes
with and without ﬁxed ﬂow-id on an single IP path
from Dallas to Ashburn.
Figure 6: Contribution of return paths. Each color
represents a diﬀerent return ﬂow-id. Data are nor-
malized based on the minimum RTT experienced for
a single forward ﬂow-id.
showed any RTT diﬀerence for diﬀerent ﬂow IDs. This made
us suspect that something special happened on the long-haul
inter-PoP LAG.
3.3 Pruning out some potential causes
We could see a few potential culprits for the per-ﬂow per-
formance behavior, namely (1) the use of ICMP probes, (2)
the traﬃc load carried by the network, (3) synchronization
eﬀects due to the interleaving of probes, (4) MPLS settings,
(5) the conﬁguration of hashing functions and hash keys, (6)
the diversity of links being bundled, or (7) the LAG vendor
implementation. To test whether ICMP probes were the
culprit, we sent UDP probes from Ashburn to Dallas. We
set the header ﬁelds in such a way as to control both the
forward and the return path ﬂow-ids. We used 6 diﬀerent
values for the forward ﬂow-id and 6 diﬀerent values for the
return ﬂow-id, resulting in 36 diﬀerent RTT distributions. In
order to quantify the contribution of the forward and return
ﬂow-id separately, we normalized the data across forward
ﬂow-ids by taking the diﬀerence with respect to the mini-
mum RTT value measured with that forward ﬂow-id (and
across return ﬂow-id). Fig. 6 shows the CDFs of the RTT
diﬀerences, where each color represents a diﬀerent value of
the return ﬂow-id. Observe that the distribution of the RTT
diﬀerence is consistent across diﬀerent forward ﬂow-ids, in-
dicated by the fact that the distributions for the same return
ﬂow-id (i.e., same color) are not scattered around the plot.
We perform a similar analysis to isolate the contribution of
the forward ﬂow-id, shown in Fig. 7. The ability to clearly
isolate the contributions of forward and return ﬂow-ids also
indicates that the RTT diﬀerences are not measurement ar-
tifacts.
Cross-traﬃc cannot be the culprit for the RTT diﬀerences
either. Running the Dallas - Ashburn experiment at dif-
ferent times of the day, diﬀerent days of the week, and for
diﬀerent durations led to the same graphs, with the speciﬁc
ﬂow-ids always mapping to the corresponding RTT distri-
bution. Discussion with the operator also conﬁrmed that
the cross-traﬃc was very low, as the traﬃc load never ex-
ceeded 50% of link capacity during our experiments. With
respect to synchronization eﬀects, we repeated the experi-
ment using a diﬀerent inter-probe spacing of 157 ms, i.e., a
prime number reasonably far from multiples of 100 ms (used
in all our experiments), and obtained identical results. We
Figure 7: Contribution of forward paths. Each color
represents a diﬀerent forward ﬂow-id. Data are nor-
malized based on the minimum RTT experienced for
a single return ﬂow-id.
excluded MPLS settings and hashing speciﬁcs by checking
router conﬁgurations in collaboration with network opera-
tors. This left us with LAG bundle physical link path diver-
sity, LAG vendor implementation, or more obscure reasons
as potential causes.
Despite our precautions to avoid VMs and routers as end-
points, and to cross networks for which we could get ground
truth, we have not been able to pinpoint the exact causes
of per-ﬂow behavior. We know two major causes, LAG and
ECMP. The ECMP issue is obvious, diﬀerent path lengths,
equipment, . . . LAG is more subtle, and can be any combina-
tion of varied hashing algorithms on line cards (for resilience,
operators usually use multiple line cards on a single LAG),
varied circuit paths, etc. And serious diagnosis of LAG vari-
ance is severely hampered by lack of vendor instrumentation,
e.g. one can not look into the indvidual circuits’ queues.
3.4 Collecting More Evidence
To ensure that our experiments did not just discover a few
corner cases, we ran ping and tokyo-ping on a larger num-
ber of Internet-wide source-destination pairs. Our sources
were FreeBSD servers in Dallas, Ashburn and Seattle, plus
a Linux server in Rome. As destinations, we used a subset
30354045500.00.20.40.60.81.0RTT (ms)CDF010203040500.00.20.40.60.81.0(rtt[x,y] − min_z(rtt[x,z])) / min_z(rtt[x,z]) * 100 (%)CDFreturn flow−id=1return flow−id=2return flow−id=3return flow−id=4return flow−id=5return flow−id=6010203040500.00.20.40.60.81.0(rtt[x,y] − min_z(rtt[z,y])) / min_z(rtt[z,y]) * 100 (%)CDFfwd flow−id=1fwd flow−id=2fwd flow−id=3fwd flow−id=4fwd flow−id=5fwd flow−id=6RTT across 100 measurements per destination and iterating
over multiple ﬂow identiﬁers, the authors conclude that, for
most paths, there is no signiﬁcant RTT diﬀerence among
ﬂow identiﬁers. This paper is close in spirit and comple-
mentary to [1], as we show that ping results are also bi-
ased by per-ﬂow load-balancing techniques. We extend [1]