.rodata:00000000000012EF                 db  42h ; B
.rodata:00000000000012F0                 db  9Eh
.rodata:00000000000012F1                 db  4Ah ; J
.rodata:00000000000012F2                 db    3
.rodata:00000000000012F3                 db  56h ; V
.rodata:00000000000012F4                 db 0BEh
.rodata:00000000000012F5                 db  54h ; T
.rodata:00000000000012F6                 db  49h ; I
.rodata:00000000000012F7                 db 0FBh
.rodata:00000000000012F8                 db  7Dh ; }
.rodata:00000000000012F9                 db 0EFh
.rodata:00000000000012FA                 db 0A5h
.rodata:00000000000012FB                 db 0C1h
.rodata:00000000000012FC                 db 0D4h
.rodata:00000000000012FD                 db  81h
.rodata:00000000000012FE                 db  58h ; X
.rodata:00000000000012FF                 db 0E5h
.rodata:0000000000001300                 db    0
.rodata:0000000000001301                 db  80h
.rodata:0000000000001302                 db  79h ; y
.rodata:0000000000001303                 db  42h ; B
.rodata:0000000000001304                 db  2Eh ; .
.rodata:0000000000001305                 db 0C9h
.rodata:0000000000001306                 db 0ECh
.rodata:0000000000001307                 db  58h ; X
.rodata:0000000000001308                 db  7Bh ; {
.rodata:0000000000001309                 db  60h ; `
.rodata:000000000000130A                 db  41h ; A
.rodata:000000000000130B                 db  5Bh ; [
.rodata:000000000000130C                 db 0C3h
.rodata:000000000000130D                 db 0E4h
.rodata:000000000000130E                 db  8Ah
.rodata:000000000000130F                 db 0CCh
.rodata:0000000000001310                 db 0AAh
.rodata:0000000000001311                 db  73h ; s
.rodata:0000000000001312                 db  67h ; g
.rodata:0000000000001313                 db 0B8h
.rodata:0000000000001314                 db  2Ah ; *
.rodata:0000000000001315                 db  47h ; G
.rodata:0000000000001316                 db 0E4h
.rodata:0000000000001317                 db 0E2h
.rodata:0000000000001318                 db 0B8h
.rodata:0000000000001319                 db 0E6h
.rodata:000000000000131A                 db  23h ; #
.rodata:000000000000131B                 db  0Bh
.rodata:000000000000131C                 db  6Ch ; l
.rodata:000000000000131D                 db    9
.rodata:000000000000131E                 db    2
.rodata:000000000000131F                 db  40h ; @
.rodata:0000000000001320                 db  3Eh ; >
.rodata:0000000000001321                 db  76h ; v
.rodata:0000000000001322                 db  64h ; d
.rodata:0000000000001323                 db  63h ; c
.rodata:0000000000001324                 db 0D4h
.rodata:0000000000001325                 db  83h
.rodata:0000000000001326                 db 0B0h
.rodata:0000000000001327                 db  0Eh
.rodata:0000000000001328                 db  62h ; b
.rodata:0000000000001329                 db  46h ; F
.rodata:000000000000132A                 db 0B8h
.rodata:000000000000132B                 db  1Fh
.rodata:000000000000132C                 db  0Dh
.rodata:000000000000132D                 db 0E3h
.rodata:000000000000132E                 db  30h ; 0
.rodata:000000000000132F                 db  3Eh ; >
.rodata:0000000000001330                 db 0E9h
.rodata:0000000000001331                 db  16h
.rodata:0000000000001332                 db  40h ; @
.rodata:0000000000001333                 db  79h ; y
.rodata:0000000000001334                 db  8Fh
.rodata:0000000000001335                 db  8Ah
.rodata:0000000000001336                 db  77h ; w
.rodata:0000000000001337                 db  30h ; 0
.rodata:0000000000001338                 db  66h ; f
.rodata:0000000000001339                 db 0AEh
.rodata:000000000000133A                 db  25h ; %
.rodata:000000000000133B                 db 0E6h
.rodata:000000000000133C                 db 0C3h
.rodata:000000000000133D                 db  3Bh ; ;
.rodata:000000000000133E                 db  75h ; u
.rodata:000000000000133F                 db  7Eh ; ~
.rodata:0000000000001340                 db 0ABh
.rodata:0000000000001341                 db  7Eh ; ~
.rodata:0000000000001342                 db 0FFh
.rodata:0000000000001343                 db  4Ah ; J
.rodata:0000000000001344                 db    9
.rodata:0000000000001345                 db 0E0h
.rodata:0000000000001346                 db  38h ; 8
.rodata:0000000000001347                 db 0ECh
.rodata:0000000000001348                 db 0B6h
.rodata:0000000000001349                 db  5Dh ; ]
.rodata:000000000000134A                 db 0EBh
.rodata:000000000000134B                 db 0B3h
.rodata:000000000000134C                 db  85h
.rodata:000000000000134D                 db  59h ; Y
.rodata:000000000000134E                 db 0C0h
.rodata:000000000000134F                 db  6Dh ; m
.rodata:0000000000001350                 db  55h ; U
.rodata:0000000000001351                 db  4Eh ; N
.rodata:0000000000001352                 db 0A8h
.rodata:0000000000001353                 db    5
.rodata:0000000000001354                 db 0C3h
.rodata:0000000000001355                 db  71h ; q
.rodata:0000000000001356                 db 0EFh    
.rodata:0000000000001357                 db  60h ; `
.rodata:0000000000001358                 db  18h
.rodata:0000000000001359                 db 0DBh
.rodata:000000000000135A                 db  2Bh ; +
.rodata:000000000000135B                 db  6Dh ; m
.rodata:000000000000135C                 db 0CCh
.rodata:000000000000135D                 db  1Eh
.rodata:000000000000135E                 db  92h
.rodata:000000000000135F                 db 0FCh
"""
data = map(lambda x: int(x.split()[2].replace('h',''),16), list(data.split('\n'))[:-1])
key = RSA.importKey(bytearray(bytes(data)))
msg = """  msg[0] = 111;
  msg[1] = -122;
  msg[2] = -28;
  msg[3] = -106;
  msg[4] = 41;
  msg[5] = -66;
  msg[6] = -118;
  msg[7] = 94;
  msg[8] = 33;
  msg[9] = -30;
  msg[10] = -64;
  msg[11] = -38;
  msg[12] = 37;
  msg[13] = -73;
  msg[14] = -107;
  msg[15] = -32;
  msg[16] = 95;
  msg[17] = 10;
  msg[18] = 108;
  msg[19] = -23;
  msg[20] = 68;
  msg[21] = -37;
  msg[22] = 18;
  msg[23] = 76;
  msg[24] = 58;
  msg[25] = 108;
  msg[26] = 20;
  msg[27] = -121;
  msg[28] = -58;
  msg[29] = 54;
  msg[30] = 107;
  msg[31] = 109;
  msg[32] = -107;
  msg[33] = 6;
  msg[34] = 28;
  msg[35] = 45;
  msg[36] = 17;
  msg[37] = -98;
  msg[38] = -8;
  msg[39] = 114;
  msg[40] = -52;
  msg[41] = -101;
  msg[42] = 116;
  msg[43] = -121;
  msg[44] = 115;
  msg[45] = -89;
  msg[46] = 82;
  msg[47] = 114;
  msg[48] = 12;
  msg[49] = 91;
  msg[50] = 146;
  msg[51] = 141;
  msg[52] = 124;
  msg[53] = -87;
  msg[54] = 53;
  msg[55] = -21;
  msg[56] = -59;
  msg[57] = -42;
  msg[58] = 30;
  msg[59] = 28;
  msg[60] = -98;
  msg[61] = 126;
  msg[62] = -45;
  msg[63] = 110;
  msg[64] = 67;
  msg[65] = 53;
  msg[66] = -109;
  msg[67] = -48;
  msg[68] = 108;
  msg[69] = 38;
  msg[70] = -76;
  msg[71] = -107;
  msg[72] = -27;
  msg[73] = -103;
  msg[74] = 40;
  msg[75] = 99;
  msg[76] = 94;
  msg[77] = -21;
  msg[78] = -83;
  msg[79] = 64;
  msg[80] = -50;
  msg[81] = 38;
  msg[82] = 103;
  msg[83] = -9;
  msg[84] = 50;
  msg[85] = -78;
  msg[86] = 3;
  msg[87] = 13;
  msg[88] = 48;
  msg[89] = 36;
  msg[90] = -109;
  msg[91] = -124;
  msg[92] = 58;
  msg[93] = 25;
  msg[94] = -84;
  msg[95] = 111;
  msg[96] = 17;
  msg[97] = -69;
  msg[98] = 11;
  msg[99] = 91;
  msg[100] = 65;
  msg[101] = -115;
  msg[102] = -99;
  msg[103] = 73;
  msg[104] = 26;
  msg[105] = -79;
  msg[106] = 33;
  msg[107] = -39;
  msg[108] = 121;
  msg[109] = 67;
  msg[110] = -68;
  msg[111] = -125;
  msg[112] = 28;
  msg[113] = 54;
  msg[114] = -104;
  msg[115] = -71;
  msg[116] = 90;
  msg[117] = 83;
  msg[118] = -39;
  msg[119] = -12;
  msg[120] = -93;
  msg[121] = -103;
  msg[122] = 52;
  msg[123] = 103;
  msg[124] = -94;
  msg[125] = -117;
  msg[126] = -50;
  msg[127] = 6;""".split('\n')
msg = list(map(lambda x: int(x.split()[2][:-1]) & 0xff, msg))
msg = int.from_bytes(bytes(bytearray(msg)),'big')
print(long_to_bytes(pow(msg, key.e, key.n)))