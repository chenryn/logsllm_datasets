### 3. 热门排行榜**接口：**/Relative**输入：**\* UserID -- 个性化推荐的前提\ \* PageID -- 推荐的页面 ID，关系到一些业务策略\ \* FromPage -- 从什么页面来\ \* PositionID -- 页面中的推荐位 ID\ \* Size -- 请求的推荐数量\ \* Offset -- 偏移量，这是用于翻页的**输出：**\* Items -- 推荐列表，通常是数组形式，每一个物品除了有ID，还有展示所需的各类元素\ \* Recommend_id -- 唯一 ID 标识每一次调用，也叫做曝光ID，标识每一次曝光，用于推荐后追踪推荐效果的，很重要\ \* Size -- 本次推荐的数量\ \* Page ------ 用于翻页的相信你看到了吧，实际上这些接口都很类似。
## 总结今天我主要讲解了推荐系统上线的两大问题，一个是线上数据存储，另一个是推荐系统的API 有哪些。虽然实际情况肯定不是只有这点问题，但是这些也足以构建出一个简单的推荐系统线上版了。你还记得在前几篇专栏中，我提到统一考虑搜索和推荐的问题吗？那么说，如果要把推荐和搜索统一考虑的话，API该如何设计呢？欢迎留言一起讨论。感谢你的收听，我们下期再见。![](Images/c7afdd1a149b093e73f3cb15f7e2b218.png){savepage-src="https://static001.geekbang.org/resource/image/c6/48/c6a1ac35b5621e7332f298e9d099cf48.jpg"}
# 【关键模块】巧妇难为无米之炊：数据采集关键要素推荐系统离不开数据，数据就是推荐系统的粮食，要有数据就得收集数据。在自己产品中收集数据，主要还是来自日志。
## 日志和数据数据驱动这个概念也是最近几年才开始流行起来的，在古典互联网时代，设计和开发产品完全侧重于功能易用和设计精巧上，并且整体驱动力受限于产品负责人的个人眼光，这属于是一种感性的把握，也因此对积累数据这件事就不是很重视。在我经手的产品中，就有产品上线很久，需要搭建推荐系统时，却发现并没有收集相应的数据，或者收集得非常杂乱无章。关于数据采集，按照用途分类又有三种：1.  报表统计；2.  数据分析；3.  机器学习。当然，这三种的用途并不冲突，而且反而有层层递进的关系。最基本的数据收集，是为了统计一些核心的产品指标，例如次日留存，七日留存等，一方面是为了监控产品的健康状况，另一方面是为了对外秀肌肉，这一类数据使用非常浅层，对数据的采集要求也不高。第二种就是比较常见的数据采集需求所在了。在前面第一种用途基础上，不但需要知道产品是否健康，还需要知道为什么健康、为什么不健康，做对了什么事、做错了什么事，要从数据中去找到根本的原因。这种数据采集的用途，驱动了很多多维分析软件应运而生，也驱动了多家大数据创业公司应运而生。数据分析工作，最后要产出的是比较简明清晰直观的结论，这是数据分析师综合自己的智慧加工出来的，是有人产出的。它主要用于指导产品设计、指导商业推广、指导开发方式。走到这一步的数据采集，已经是实打实的数据驱动产品了。第三种，就是收集数据为了机器学习应用，或者更广泛地说人工智能应用。那么机器学习应用，主要在消化数据的角色是算法、是计算机，而不是人。这个观点是我在专栏写作之初，讲解用户画像相关内容时就提到的，再强调一遍就是，所有的数据，不论原始数据还是加工后的数据都是给机器"看"的，而不是给人"看"的。所以在数据采集上，可以说多多益善，样本是多多益善，数据采集的维度，也就是字段数多多益善，但另一方面，数据是否适合分析，数据是否易于可视化地操作并不是核心的内容。当然，实际上在任何一款需要有推荐系统的产品中，数据采集的需求很可能要同时满足上述三种要求。本文为了讨论方便，不会重点讨论多维数据分析的用途，而是专门看看为了满足推荐系统，你需要怎么收集日志、采集数据。因为推荐系统就是一个典型的人工智能应用，数据是要喂给机器"吃"的。下面我就开始给你详细剖析一下为推荐系统收集日志这件事。
## 数据采集给推荐系统收集日志这件事，依次要讨论的是：日志的数据模型，收集哪些日志，用什么工具收集，收集的日志怎么存储。