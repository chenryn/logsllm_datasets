## MacOS PolarDB-X 数据库快速部署指南  
### 作者                        
digoal                        
### 日期                        
2022-08-10                       
### 标签                        
PostgreSQL , PolarDB-X , MacOS    
----                        
## 背景        
参考文档:   
https://www.polardbx.com/document  
通过PXD快速部署PolarDB-X本地实例  
pxd是部署polardb-x的工具. 目前仅支持 x86 架构的机器. 依赖Python3 和 Docker.   
### 1.安装 Python3  
如果你的机器上已经安装了 python3，可以跳过  
检查命令：`which python3`，如果有返回则代表 `python3` 已安装  
推荐使用 Homebrew 安装 python3，如果没有 Homebrew，可参考 Homebrew 官方安装方法：  
```  
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"  
```  
使用Homebrew 安装 python3  
```  
brew install python  
```  
### 2. 安装 Docker Desktop for Mac  
参考文档：https://docs.docker.com/desktop/mac/install/  
Download Docker Desktop for Mac  
例如下载到了`~/Downloads`    
```  
cd ~/Downloads  
sudo hdiutil attach Docker.dmg  
sudo /Volumes/Docker/Docker.app/Contents/MacOS/install  
sudo hdiutil detach /Volumes/Docker  
```  
由于 Docker Desktop for Mac 的默认内存是 2G，无法满足 PolarDB-X 开发测试环境的最低要求， 需要在 Docker Preferences 中将内存调整到8G，如下图所示：  
注意: MacOS安装完Docker后一定要在application中打开并运行一下docker(运行后可以关掉), 才会在`/usr/local/bin`里面出现docker cli, 每次都要这么操作, 否则pxd获取image时会报错.   
### 3. 安装 PXD  
注意： 推荐使用 virtual environment 安装 PXD 工具. 后面的操作也需要都在虚拟环境中操作, 包括安装polardb-x, 启动, 连接docker等.    
```  
python3 -m venv venv  
source venv/bin/activate  
```  
安装前建议先执行如下命令升级 pip  
```  
pip install --upgrade pip  
```  
执行如下命令安装 pxd:  
```  
pip install pxd  
```  
注： 部分国内用户从 pypi 下载包的速度较慢, 可以使用如下命令从阿里云的镜像安装：  
```  
pip install -i https://mirrors.aliyun.com/pypi/simple/ pxd  
```  
### 4. 部署 PolarDB-X  
直接运行 pxd tryout 命令会创建一个最新版本的 PolarDB-X 数据库，其中 GMS, CN, DN, CDC 节点各 1 个：  
```  
pxd tryout  
```  
您也可以指定 CN，DN, CDC 节点的个数以及版本，命令如下：  
```  
pxd tryout -cn_replica 1 -cn_version latest -dn_replica 1 -dn_version latest -cdc_replica 1 -cdc_version latest  
```  
tryout 模式创建的 GMS 和 DN 默认采用单副本模式，如果您想创建基于 Paxos 的三副本的集群，使用如下命令：  
```  
pxd tryout -leader_only false  
```  
注意：三副本模式需要PXD版本为0.3.0及以上。  
下面是整个过程的记录:  
```  
pxd tryout  
...  
Processing  [#########---------------------------]   25%    create gms node  
Processing  [############------------------------]   33%    create gms db and tables  
Processing  [###############---------------------]   41%    create PolarDB-X root account  
Processing  [##################------------------]   50%    create dn  
Processing  [#####################---------------]   58%    register dn to gms  
Processing  [########################------------]   66%    create cn  
Processing  [###########################---------]   75%    wait cn ready  
Processing  [##############################------]   83%    create cdc containers  
Processing  [#################################---]   91%    wait PolarDB-X ready  
Processing  [####################################]  100%  
PolarDB-X cluster create successfully, you can try it out now.  
Connect PolarDB-X using the following command:  
    mysql -h127.0.0.1 -P3992 -upolardbx_root -pdbkudfhk  
```  
注意：PolarDB-X 管理员账号的密码随机生成，仅出现这一次，请注意保存。  
PolarDB-X 端口占用说明:    
目前本地测试模式，CN，DN，GMS 节点各会占用一个端口，该端口随机生成，如果因为端口冲突导致 PolarDB-X 创建失败，请执行 `pxd cleanup` 或者 `pxd delete {集群名}` 清理后重新创建即可。  
```  
(venv) IT-C02YW2EFLVDL:~ digoal$ pxd list  
/Users/digoal/venv/lib/python3.9/site-packages/deployer  
NAME                          CN        DN        CDC       STATUS           
pxc-tryout                    1         1         1         running   
```  
连接到polardb-x集群, mysql客户端在CN节点中有. 所以我们可以使用docker命令行来连接PolarDB-X.    
```  
(venv) IT-C02YW2EFLVDL:~ digoal$ docker ps -a  
CONTAINER ID   IMAGE                          COMMAND                  CREATED         STATUS         PORTS                      NAMES  
0ca5aa5c9f79   polardbx/galaxycdc:latest      "/bin/sh -c /home/ad…"   4 minutes ago   Up 4 minutes                              pxc-tryout-cdc-xxOD  
68f05f5a3a4e   polardbx/galaxysql:latest      "/home/admin/entrypo…"   4 minutes ago   Up 4 minutes   0.0.0.0:3992->3992/tcp     pxc-tryout-cn-BRjf  
e5eed057b92c   polardbx/galaxyengine:latest   "bash -c '/tools/xst…"   5 minutes ago   Up 5 minutes   0.0.0.0:15151->15151/tcp   pxc-tryout-dn-0-Cand-15151  
c4dabe87a6de   polardbx/galaxyengine:latest   "bash -c '/tools/xst…"   6 minutes ago   Up 6 minutes   0.0.0.0:17479->17479/tcp   pxc-tryout-gms-Cand-17479  
(venv) IT-C02YW2EFLVDL:~ digoal$ docker exec -it 68f05f5a3a4e mysql -h127.0.0.1 -P3992 -upolardbx_root -pdbkudfhk  
```  
```  
Welcome to the MariaDB monitor.  Commands end with ; or \g.  
Your MySQL connection id is 10  
Server version: 5.6.29 Tddl Server (ALIBABA)  
Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.  
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.  
MySQL [(none)]> select * from information_schema.schemata;  
+--------------+--------------------+----------------------------+------------------------+----------+--------------------+  
| CATALOG_NAME | SCHEMA_NAME        | DEFAULT_CHARACTER_SET_NAME | DEFAULT_COLLATION_NAME | SQL_PATH | DEFAULT_ENCRYPTION |  
+--------------+--------------------+----------------------------+------------------------+----------+--------------------+  
| def          | information_schema | utf8                       | UTF8_GENERAL_CI        | NULL     | NO                 |  
| def          | __cdc__            | utf8                       | UTF8_GENERAL_CI        | NULL     | NO                 |  
+--------------+--------------------+----------------------------+------------------------+----------+--------------------+  
2 rows in set (0.25 sec)  
MySQL [(none)]> create database polarx_example partition_mode='partitioning';  
Query OK, 1 row affected (0.38 sec)  
MySQL [(none)]> use polarx_example;  
Database changed  
MySQL [polarx_example]> create table example (  
    ->   `id` bigint(11) auto_increment NOT NULL,  
    ->   `name` varchar(255) DEFAULT NULL,  
    ->   `score` bigint(11) DEFAULT NULL,  
    ->   primary key (`id`)  
    -> ) engine=InnoDB default charset=utf8   
    -> partition by hash(id)   
    -> partitions 8;  
Query OK, 0 rows affected (1.13 sec)  
MySQL [polarx_example]> insert into example values(null,'lily',375),(null,'lisa',400),(null,'ljh',500);  
Query OK, 3 rows affected (0.06 sec)  
MySQL [polarx_example]> select * from example;  
+--------+------+-------+  
| id     | name | score |  
+--------+------+-------+  
| 100001 | lily |   375 |  
| 100002 | lisa |   400 |  
| 100003 | ljh  |   500 |  
+--------+------+-------+  
3 rows in set (0.10 sec)  
MySQL [polarx_example]> show topology from example;  
+----+-----------------------------+--------------------+----------------+  
| ID | GROUP_NAME                  | TABLE_NAME         | PARTITION_NAME |  
+----+-----------------------------+--------------------+----------------+  
|  0 | POLARX_EXAMPLE_P00000_GROUP | example_AIex_00000 | p1             |  