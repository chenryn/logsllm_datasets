title:Modeling and performance analysis of BitTorrent-like peer-to-peer
networks
author:Dongyu Qiu and
Rayadurgam Srikant
Modeling and Performance Analysis of BitTorrent-Like
Peer-to-Peer Networks
Dongyu Qiu and R. Srikant∗
Coordinated Science Laboratory
University of Illinois at Urbana-Champaign
Urbana, IL 61801
{dqiu, rsrikant}@uiuc.edu
ABSTRACT
In this paper, we develop simple models to study the per-
formance of BitTorrent, a second generation peer-to-peer
(P2P) application. We ﬁrst present a simple ﬂuid model
and study the scalability, performance and eﬃciency of such
a ﬁle-sharing mechanism. We then consider the built-in in-
centive mechanism of BitTorrent and study its eﬀect on net-
work performance. We also provide numerical results based
on both simulations and real traces obtained from the In-
ternet.
Categories and Subject Descriptors
H.1.0 [Information Systems]: Models and Principles
General Terms
Performance
Keywords
Peer-to-Peer Networks, Fluid Model, Game Theory
1.
INTRODUCTION
Peer-to-Peer (P2P) applications have become immensely
popular in the Internet. Traﬃc measurements shows that
P2P traﬃc is starting to dominate the bandwidth in cer-
tain segments of the Internet [2]. Among P2P applications,
ﬁle sharing is perhaps the most popular application. Com-
pared to traditional client/sever ﬁle sharing (such as FTP,
WWW), P2P ﬁle sharing has one big advantage, namely,
scalability. The performance of traditional ﬁle sharing ap-
plications deteriorates rapidly as the number of clients in-
creases, while in a well-designed P2P ﬁle sharing system,
more peers generally means better performance. There are
many P2P ﬁle sharing programs, such as Kazza, Gnuttella,
∗
This work was supported by DARPA Grant F30602-00-2-
0542 and AFOSR URI F49620-01-1-0365.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’04, Aug. 30–Sept. 3, 2004, Portland, Oregon, USA.
Copyright 2004 ACM 1-58113-862-8/04/0008 ...$5.00.
eDonkey/overnet, BitTorrent, to name a few. In this paper,
we develop simple models to understand and study the be-
havior of BitTorrent [8] which is proving to be one of the
more popular P2P applications today.
For a BitTorrent network (or a general P2P ﬁle sharing
network), several issues have to be addressed in order to
understand the behavior of the system.
• Peer Evolution:
In P2P ﬁle sharing, the number of
peers in the system is an important factor in deter-
mining network performance. Therefore, it is useful to
study how the number of peers evolves as a function
of the request arrival rate, the peer departure rate, the
uploading/downloading bandwidth of each peer, etc.
• Scalability: To realize the advantages of P2P ﬁle shar-
ing, it is important for the network performance to not
deteriorate, and preferably to actually improve, as the
size of the network increases. Network performance
can be measured by the average ﬁle downloading time
and the size of the network can be characterized by
the number of peers, the arrival rate of peers, etc.
• File Sharing Eﬃciency: It is common for peers in a
P2P network to have diﬀerent uploading/downloading
bandwidths. Further, in BitTorrent-like systems, a ﬁle
may be broken into smaller pieces and the pieces may
be distributed at random among the peers in the net-
work. To eﬃciently download the ﬁle, it is important
to design the ﬁle-sharing protocol such that each peer
is matched with others who have the pieces of the ﬁle
that it needs and further, to ensure that the download-
ing bandwidth of each peer is fully utilized.
• Incentives to prevent free-riding: Free-riding is a ma-
jor cause for concern in P2P networks. Free-riders are
peers who try to download from others while not con-
tributing to the network, i.e., by not uploading to oth-
ers. Thus, most P2P networks try to build in some
incentives to deter peers from free-riding. Once the in-
centive mechanism is introduced into the network, each
peer may try to maximize its own net beneﬁt within
the constraints of the incentive mechanism. Thus, it is
important to study the eﬀect of such behavior on the
network performance.
1.1 Relationship to prior work
The basic idea of P2P network is to have peers participate
in an application level overlay network and operate as both
367servers and clients. Since the service burden is distributed to
all participating peers, the system is expected to scale well
even when the network is very large. Besides ﬁle sharing,
P2P overlays have also been deployed in distributed direc-
tory service [18, 21], web cache [15], storage [9], and grid
computation [1] etc.
While early work on P2P systems has mainly focused on
system design and traﬃc measurement [19, 20, 17], some re-
cent research has emphasized performance analysis. In [13],
a closed queueing system is used to model a general P2P
ﬁle sharing system and basic insights on the stationary per-
formance are provided. In [6, 7], a stochastic ﬂuid model is
used to study the performance of P2P web cache (SQUIR-
REL) and cache clusters. A part of our work is motivated by
the models in [11, 24], where a branching process is used to
study the service capacity of BitTorrent-like P2P ﬁle shar-
ing in the transient regime and a simple Markovian model
is presented to study the steady-state properties. Our work
diﬀers from [11, 24] in the following respects:
• Instead of studying the Markov chain numerically, we
develop a simple deterministic model which allows us
to obtain simple expressions for the average ﬁle-transfer
time, thus providing insight into the performance of
the P2P network. We also incorporate realistic sce-
narios in our ﬂuid model such as the abandonment of
ﬁle transfers by peers and download bandwidth con-
straints.
• Then, we develop a simple stochastic ﬂuid model which
characterizes the variability of the number of peer around
the equilibrium values predicted by the deterministic
ﬂuid model.
• We also develop a simple model to study the eﬃciency
of downloading from other peers and argue that the
ﬁle-sharing protocol in BiTorrent is very eﬃcient.
• Finally, we consider the mechanisms built into BitTor-
rent to avoid free-riding and study the impact of these
mechanisms on the users’ behaviors and network per-
formance.
2. A BRIEF DESCRIPTION
OF BITTORRENT
BitTorrent is a P2P application whose goal is to facili-
tate fast downloads of popular ﬁles. Here we provide a brief
description of how BitTorrent operates when a single ﬁle is
downloaded by many users. Typically the number of simul-
taneous downloaders for popular ﬁles could be of the order
of a few hundreds while the total number of downloaders
during the lifetime of a ﬁle could be of the order of several
tens or sometimes even hundreds of thousands. The basic
idea in BitTorrent is to divide a single large ﬁle (typically a
few 100 MBytes long) into pieces of size 256 KB each. The
set of peers attempting to download the ﬁle do so by con-
necting to several other peers simultaneously and download
diﬀerent pieces of the ﬁle from diﬀerent peers.
To facilitate this process, BitTorrent uses a centralized
software called the tracker. In a BitTorrent network, a peer
that wants to download a ﬁle ﬁrst connects to the tracker of
the ﬁle. The tracker then returns a random list of peers that
have the ﬁle. The downloader then establishes a connection
to these other peers and ﬁnds out what pieces reside in each
of the other peers. A downloader then requests pieces which
it does not have from all the peers to which it is connected.
But each peer is allowed to upload only to a ﬁxed num-
ber (default is four) at a given time. Uploading is called
unchoking in BitTorrent. Which peers to unchoke is deter-
mined by the current downloading rate from these peers,
i.e., each peer uploads to the four peers that provide it with
the best downloading rate even though it may have received
requests from more than four downloaders. This mechanism
is intended to deter free-riding. Since a peer is only upload-
ing four other peers at any time, it is possible that a peer,
say Peer A, may not be uploading to a peer, say Peer B,
which could provide a higher downloading rate than any of
the peers to which Peer A is currently uploading. There-
fore, to allow each peer to explore the downloading rates of
other peers, BitTorrent uses a process called optimistic un-
choking. Under optimistic unchoking, each peer randomly
selects a ﬁfth peer from which it has received a downloading
request and uploads to this peer. Thus, including optimist
unchoking, a peer may be uploading to ﬁve other peers at
any time. Optimistic unchoking is attempted once every 30
seconds and to allow optimistic unchoking while keeping the
maximum number of uploads equal to ﬁve, an upload to the
peer with the least downloading rate is dropped.
BitTorrent distinguishes between two types of peers, namely
downloaders and seeds. Downloaders are peers who only
have a part (or none) of the ﬁle while seeds are peers who
have all the pieces of the ﬁle but stay in the system to al-
low other peers to download from them. Thus, seeds only
perform uploading while downloaders download pieces that
they do not have and upload pieces that they have. Ideally,
one would like an incentive mechanism to encourage seeds
to stay in the system. However, BitTorrent currently does
not have such a feature. We simply analyze the performance
of BitTorrent as is.
In practice, a BitTorrent network is a very complicated
system. There may be hundreds of peers in the system.
Each peer may have diﬀerent parts of the ﬁle. Each peer
may also have diﬀerent uploading/downloading bandwidth.
Further, each peer only has partial information of the whole
network and can only make decisions based on local infor-
mation. In addition, BitTorrent has a protocol (called the
rarest-ﬁrst policy) to ensure a uniform distribution of pieces
among the peers and protocols (call the endgame mode) to
prevent users who have all but a few of the pieces from
waiting too long to ﬁnish their download. As with any good
modelling exercise, we tradeoﬀ between the simplicity of the
model and its ability to capture all facets of the protocol.
Thus, we will ﬁrst use a simple ﬂuid model to study the scal-
ability and the stability of the system. We will then assume
that each peer has the global information and study the
incentive mechanism of BitTorrent. We will ﬁnally brieﬂy
study the eﬀect of the optimistic unchoking on free-riding.
3. A SIMPLE FLUID MODEL
Our model for ﬁle-sharing is inﬂuenced by the model in
[11]. However, while [11] only uses the model to develop a
Markov chain which is then studied numerically, we use the
key modelling idea in [11] to develop a simple determinis-
tic ﬂuid model which is amenable to analysis and provides
insights into the system performance.
In our model, we use the following quantities to capture a
BitTorrent peer-to-peer network [8] that serves a given ﬁle
(without loss of generality, we assume that the ﬁle size is 1):
x(t) number of downloaders (also known as leechers) in the
system at time t.
y(t) number of seeds in the system at time t.
λ the arrival rate of new requests. We assume that peers
arrive according to a Poisson process.
µ the uploading bandwidth of a given peer. We assume that
all peers have the same uploading bandwidth.
c the downloading bandwidth of a given peer. We assume
that all peers have the same downloading bandwidth
and c ≥ µ.
θ the rate at which downloaders abort the download.
γ the rate at which seeds leave the system.
η indicates the eﬀectiveness of the ﬁle sharing, which we will
describe shortly. η takes values in [0, 1].
In a BitTorrent-like P2P network, a downloader can up-
load data to other peers even though it may only have parts
of a ﬁle. The parameter η is used to indicate the eﬀectiveness
of this ﬁle sharing. If there is no constraint on downloading
bandwidth, the total uploading rate of the system can be ex-
pressed as µ(ηx(t)+y(t)). If η = 0, then the downloaders do
not upload data to each other and only download from seeds.
When the downloading bandwidth constraint is considered,
the total uploading rate will be min{cx(t), µ(ηx(t) + y(t))}.
To obtain a Markovian description of the system, we as-
sume that the probability that some downloader becomes a
seed in a small interval δ is given by min(cx, µ(ηx + y))δ.
These assumptions can be easily relaxed to allow more gen-
eral distributions for all the random variables involved by
using phase-type distributions as in [14, 22, 10].
Next, we comment on the parameters θ and γ. A down-
loader may not stay in the system till it completely down-
loads the ﬁle. Occasionally, a downloader may leave the
network before the downloading is complete if he/she feels
that the download is taking too long. We assume that each
downloader independently aborts its download after a cer-
tain amount of time which is exponentially distributed with
mean 1/θ. Equivalently, θ is the rate at which downloaders
abort their download and leave the system. In a ﬂuid model,
the rate of departures of downloaders will be given be
min{cx(t), µ(ηx(t) + y(t))} + θx(t).
While the departures that occur due to the fact that the ﬁle
download has been completed will become seeds instanta-
neously, the remaining downloaders will permanently leave
the system. The parameter γ is the rate at which seeds de-
part from the network. We assume that each seed stays in
the system for a random time which is exponentially dis-
tributed with mean 1/γ. Clearly, γ will have an eﬀect on
system performance: the lower the γ, the lower the down-
load times since this means that there will more seeds in
the system. This parameter γ can be inﬂuenced by pro-
viding incentives for users to stay in the system after they
have downloaded the ﬁle, i.e., after they have become seeds.
However, BitTorrent currently does not have such incentives
and therefore, we simply consider γ to be a ﬁxed constant.
Now, we are ready to describe the evolution of x and
y based on the above model. A deterministic ﬂuid model
for the evolution of the number of peers (downloaders and
seeds) is given by
= λ − θx(t) − min{cx(t), µ(ηx(t) + y(t))},
= min{cx(t), µ(ηx(t) + y(t))} − γy(t),
(1)
dx
dt
dy
dt
along with the obvious constraint that x(t) and y(t) should
be non-negative. A key contribution of [11] was to describe
the eﬃciency of data transfer from other downloaders using
the parameter η. Our ﬂuid model provides a simple descrip-
tion of the system that was described by a Markov chain in
[11]. In addition, we have incorporated other realistic sce-
narios such as departures of downloaders due to impatience
with the downloading process (described by θ) and down-
loading bandwidth constraint c. In a later subsection, we
will also present a simple stochastic ﬂuid model that char-
acterizes the variability around the ﬂuid model. We now
study the steady-state performance of the P2P system us-
ing the above ﬂuid model.
3.1 Steady-State Performance
To study the system in steady-state, we let
dx(t)
dt
=
dy(t)
dt
= 0
in (1) and obtain
0 = λ − θ¯x − min{c¯x, µ(η¯x + ¯y)},
0 = min{c¯x, µ(η¯x + ¯y)} − γy(t),
(2)
where ¯x and ¯y are the equilibrium values of x(t) and y(t)
respectively.
We ﬁrst assume η > 0. Further, suppose that the down-
loading speed is the constraint, i.e., c¯x ≤ µ(η¯x + ¯y). Equa-
tion (2) then becomes a simple linear equation. Solving the
equation, we have
¯x =
λ
c(1 + θ
c )
(3)
Now, the assumption that c¯x ≤ µ(η¯x + ¯y) is equivalent to
γ(1 + θ
c )
¯y =
.
λ
1
c
≥ 1
η
(
1
µ
− 1
γ
).
Instead, if we assume that the uploading bandwidth is the
constraint, i.e., c¯x ≥ µ(η¯x + ¯y), we get
¯x =
¯y =
λ
ν(1 + θ
ν )
λ
γ(1 + θ
ν )
,
− 1
γ ). From c¯x ≥ µ(η¯x + ¯y), we have
(4)
where 1
ν = 1
η ( 1
µ
1
c
c , 1
≤ 1
ν
η ( 1
µ
Deﬁne 1
β = max{ 1
1
µ
− 1
γ
).
1
=
(
η
− 1
γ )}, then (3) and (4) can be
combined to yield
¯x =
¯y =
λ
β(1 + θ
β )
λ
γ(1 + θ
β )
.
Even if the ﬁle sharing is not very eﬃcient (a small η), it can
play an important role in keeping the system alive. From
(6), we also see that η is important to the network perfor-
mance. In the next subsection, we will derive an expression
for η and argue that η is very close to 1 in BitTorrent.
3.2 Effectiveness of File Sharing
(5)
To calculate the average downloading time for a peer in
steady state, we use Little’s law [4] as follows:
λ − θ¯x
λ
¯x = (λ − θ¯x)T,
where T is the average downloading time, λ − θ¯x is the
average rate at which downloads are completed, and λ−θ¯x
is the fraction of downloaders that will become seeds. Using
(5), it is now easy to see that
λ
T =
.
(6)
Recall that 1
several insights into the behavior of BitTorrent:
η ( 1
c , 1
µ
β = max{ 1
γ )}. Equation (6) provides
1
θ + β
− 1
• The average downloading time T is not related to λ,
the request arrival rate. Hence, the BitTorrent P2P
system scales very well.
• When η increases, T decreases. This is because the
peers share the ﬁle more eﬃciently.
• When γ increases, T increases because a larger γ means
that there are fewer seeds in the system.
≤ 1
• Initially, when c increases, T decreases. However, once
c is large enough ( 1