### Connecting the LED to the Breadboard

1. **Connecting the LED:**
   - The longer leg of the LED (positive terminal) should be inserted into the same breadboard row as the 3.3V jumper.
   - The shorter leg (negative terminal) should be inserted into the same row as the resistor.

2. **Powering On:**
   - Power on the Raspberry Pi. If everything is connected correctly, the LED should light up immediately.

### Extending the Experiment with GPIO Control

To gain control over the LED's illumination state, you will need to use the WiringPi libraries. Here’s how:

1. **Relocate the Jumper Pin:**
   - Move the female jumper pin currently connected to GPIO #1 to GPIO pin #11.

2. **Set Up WiringPi:**
   - Download and compile the WiringPi executable code:
     ```bash
     cd
     git clone git://git.drogon.net/wiringPi
     cd wiringPi
     git pull origin
     ./build
     ```

3. **Issue GPIO Commands:**
   - Stay in the current directory and issue the following GPIO commands:
     ```bash
     gpio mode 0 out
     gpio write 0 1
     gpio write 0 0
     ```
   - The `gpio write 0 1` command turns the LED on, and `gpio write 0 0` turns it off. This is analogous to turning on a faucet: when you send 3.3V from the programmable GPIO #11 pin to the LED, the electrical energy is consumed and emitted as light.

### Accessing GPIO Pins via the Pi Cobbler

The Adafruit Pi Cobbler (http://is.gd/B1U0bq) provides a more elegant way to access the Raspberry Pi GPIO pins. Instead of using individual jumpers, you can directly connect the GPIO header to the breadboard.

1. **Purchase and Assembly:**
   - Adafruit sells the Pi Cobbler either unassembled or assembled. You also get a ribbon cable with the Cobbler.

2. **Mounting the Pi Cobbler:**
   - Connect the ribbon cable to the Cobbler board. The notch in the 26-pin ribbon cable ensures correct insertion.
   - Insert the other end of the ribbon cable into the Raspberry Pi GPIO header. The colored edge wire (pin #1) should be inserted on the side closest to the SD card slot, where P1 is marked.
   - Press the Pi Cobbler firmly into the breadboard, ensuring it straddles the center line.

3. **Using the Pi Cobbler:**
   - The perimeter of the Cobbler has markings corresponding to each of the 26 GPIO pins.
   - Repeat your initial LED experiment by inserting male-to-male jumpers in the same breadboard row as the corresponding GPIO header.
   - Use a GPIO ground pin on the same side of the breadboard as the power pin, as shown in Figure 20.11.

### Programming the Atmel Microcontroller

The Gertboard includes an Atmel AVR ATmega328p microcontroller, which allows you to perform Arduino experiments. Note that due to parts availability, the Gertboard may have either the ATmega328 or ATmega168.

1. **Adjust for Voltage and Clock Speed:**
   - The Arduino operates at 5V, while the Raspberry Pi operates at 3.3V. The Gertboard’s ATmega runs at a slower clock speed (12MHz instead of 16MHz).
   - Adjust any references to +5V in your sketches to avoid damaging the ATmega chip. Also, adjust the timing in your sketch code to account for the slower clock speed.

2. **Prepare Your Arduino Environment:**
   - Install the Arduino IDE and AVRDUDE:
     ```bash
     sudo apt-get install -y arduino
     cd /tmp
     wget http://project-downloads.drogon.net/gertboard/avrdude_5.10-4_armhf.deb
     sudo dpkg -i avrdude_5.10-4_armhf.deb
     sudo chmod 4755 /usr/bin/avrdude
     ```
   - Use Gordon Henderson’s script to automate the setup:
     ```bash
     cd /tmp
     wget http://project-downloads.drogon.net/gertboard/setup.sh
     chmod +x setup.sh
     sudo ./setup.sh
     ```
   - Reboot your Raspberry Pi after the script completes.

3. **Initialize the ATmega Chip:**
   - Ensure the Gertboard is installed and attach the jumper wires as shown in Figure 20.12.
   - Issue the initialization command:
     ```bash
     avrsetup
     ```
   - Follow the prompts to initialize the ATmega chip.

4. **Configure the Arduino IDE:**
   - Open the Arduino IDE and select the Gertboard with ATmega328(GPIO) under Tools > Board.
   - Select the Raspberry Pi GPIO option under Tools > Programmer.
   - Test functionality using the built-in Blink sketch. Attach a jumper strap from PB5 on the Gertboard to one of the buffered LED outputs (e.g., BUF6).

### Final Thoughts and Community Engagement

Congratulations on completing this book! To stay current with Raspberry Pi-related developments, consider participating in the community through the following resources:
- Official Raspberry Pi Community Forum: http://is.gd/6nBR5Z
- Google+ Raspberry Pi Forum: http://is.gd/jGajWj
- Stack Exchange: Raspberry Pi: http://is.gd/hWh8EK
- RPi Community Links at eLinux.org: http://is.gd/sN9O4g

If you have any questions or want to share your experiences, feel free to reach out to me at tim@timwarnertech.com. Thank you for purchasing this book and for your interest in the Raspberry Pi. Happy hacking!

### Index

#### A
- **Accessories Command (LXDE Main Menu):** 93
- **Acorn BBC Micro Personal Computer:** 7-8
- **Acorn RISC Machines (ARM) Processors:** 8
- **Add-ons, Media Centers, Installing:** 197-198
- **Addresses, Static IP, Setting:** 106
- **Advanced Options, Raspo-Config Utility:** 84
- **AlaMode (Arduino):** 324-325, 332-335
- **Atmel Microcontroller, Programming With:** 354-357
- **Analog Versus Digital Signals:** 317
- **AnalogWrite() Function:** 331
- **Android Device:** 2
- **Apache:** 235
- **APIs (Application Programming Interfaces):** 10, 221-226
- **Apple OS X:** 49
- **Application Launch Bar (LXDE):** 92
- **Application Layer (OS):** 48
- **Applications:**
  - Creating: 129-132
  - Dogeball Challenge: 137-149
  - Pi Store, Downloading: 97
  - Python, Writing: 158-160
  - Remixing: 151
  - Uploading: 149-151
  - Writing Simple: 168-170
  - XBMC: 181
- **Apt-get Parameters:** 313
- **Arch Linux ARM:** 54
- **Arduino:** 315, 317-319
  - AlaMode: 324-325, 332-335
  - Connecting: 321-323
  - Development Workflow: 323-332
  - Esplora: 316
  - IDE: 323-332, 355-357
  - LEDs, Fading: 330-331
  - LilyPad: 315-316
  - Mega 2560: 316
  - Microcontrollers: 10-11, 14
  - PAPERduino: 315
  - Playground: 321
  - Shields: 317
  - Starter Kits: 319
  - Uno: 315-321
- **ARM11 Processors:** 8, 20
- **ARM (Acorn RISC Machines) Processors:** 8
- **Atari 2600 Video Computer System (VCS):** 199
- **Atmel ATmega 328P AVR Microcontroller (Gertboard):** 339
- **Atmel RISC Chip:** 10
- **Audio:**
  - HDMI Cables: 26
  - Model B Boards: 27-29
- **Audio Book Player:** 2
- **Autoclean Parameter:** 313
- **Automated Chicken Coop Door:** 2
- **Autoremove Parameter:** 313

#### B
- **Bald Wisdom Blog:** 324
- **Banzi, Massimo:** 315
- **BASIC Programming:** 7
- **Batteries, Webcams, Adding To:** 273-274
- **BBC Micro Personal Computers:** 7-8, 12
- **BeagleBone:** 40-41
- **Benchmarking:** 305-307
- **Bilaterally Symmetric Breadboards:** 35
- **Binary Large Object (BLOB) Driver:** 15
- **Bin Directory:** 70
- **Black Boxes:** 9, 17
- **Blendtec:** 181
- **BLOB (Binary Large Object) Driver:** 15
- **Blocks:**
  - Scratch: 127-129
  - Unlinking: 131
- **Blocks Palette (Scratch):** 125, 127
- **Blum, Richard:** 154
- **Boards:**
  - Audio: 27-29
  - Breadboards: 34-35
  - Breakout: 36
  - Daughterboards: 38-39
  - Gertboards: 38-39
  - Networking: 27
  - Single-Board Microcontrollers: 37-38
  - Video: 27-29
- **Boolean Blocks:** 129
- **Boolean Data Type (Python):** 172
- **Boot Behavior, Adjusting, Raspi-Config:** 88
- **Boot Directory:** 70
- **Boot Partition Contents:** 310
- **Breadboarding:** 350-354
- **Breadboards:** 34-35
- **Breakout Boards:** 36
- **Bresnahan, Christine:** 154
- **Bridges:** 35
- **Broadcom BCM2835 System-on-a-Chip:** 10
- **Broadcom VideoCore IV GPU:** 179
- **Browsers:** 289
- **Browsing Internet, Proxy Servers:** 278-280
- **Bs Command:** 60-63
- **Building Minecraft Servers:** 226-231
- **Bus Strips:** 35
- **BYTEmark (nbench) Benchmark:** 307
- **Bytes Data Type (Python):** 172

#### C
- **Cables:**
  - Ethernet: 24-25
  - Ribbon: 35
- **Camera:**
  - Enabling: 82
  - Model B Board: 30
- **Camera Board:**
  - Capturing Still Pictures: 259-263
  - Installing: 256-258
  - Interface: 254
  - Recording Video: 263-266
  - Specifications: 255
- **Camera Serial Interface (CSI) Connectors:** 30
- **CanaKit Raspberry Pi Complete Starter Kit:** 44
- **Capacitors, PCBs (Printed Circuit Boards):** 17
- **Cap Blocks:** 129
- **Cartesian Coordinate System:** 130
- **Cases:** 32
- **C Blocks:** 129
- **Cd Command:** 63, 72-73
- **Cheese-Powered Radio-Controlled Car:** 1
- **Chipsets:** 31
- **Chrome Web Browser:** 289
- **Chromium Web Browser:** 120
- **Chun, Wesley:** 178
- **Circuit Prototyping Equipment:** 34-37
- **Classes:**
  - 221
  - SD Cards: 23
- **Class Libraries:** 221
- **Clients, Hamachi, Installing:** 284-285
- **Codecs, XBMC:** 181
- **Command Prompt, Raspbian:** 67-69
- **Commands:**
  - Bs: 60-63
  - Cd: 63, 72-73
  - Cp: 77
  - Dd: 60-62
  - If: 60-63
  - Ifconfig: 104-105