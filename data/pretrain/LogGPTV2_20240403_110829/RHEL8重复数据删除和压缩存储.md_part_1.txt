[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [8]{.productnumber}
:::
# []{#index.html#idm139671986990576}重复数据删除和压缩存储 {.title}
## 使用 VDO 优化 RHEL 8 中的存储容量 {.subtitle}
::: abstract
**摘要**
本文档集合提供了如何使用 Virtual Data Optimizer(VDO)来管理 Red Hat
Enterprise Linux 8 中重复数据删除和压缩的存储池的说明。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}使开源包含更多 {.title}
:::
红帽承诺替换我们的代码、文档和网页属性中存在问题的语言。我们从这四个术语开始：
master、slave、blacklist 和
whitelist。这些更改将在即将发行的几个发行本中逐渐实施。如需了解更多详细信息，请参阅
[CTO Chris Wright
信息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
:::
[]{#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-storage.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-storage.html#proc_providing-feedback-on-red-hat-documentation_deduplicating-and-compressing-storage}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。要做到这一点：
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
-   要提交更复杂的反馈，请创建一个 Bugzilla ticket：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%208){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#deploying-vdo_deduplicating-and-compressing-storage.html}
::: chapter
::: titlepage
# []{#deploying-vdo_deduplicating-and-compressing-storage.html#deploying-vdo_deduplicating-and-compressing-storage}第 1 章 部署 VDO {.title}
:::
作为系统管理员,您可以使用 VDO 创建重复数据删除的和压缩的存储池。
::: section
::: titlepage
# []{#deploying-vdo_deduplicating-and-compressing-storage.html#con_introduction-to-vdo-deploying-vdo}VDO 简介 {.title}
:::
Virtual Data
Optimizer(VDO)以重复数据删除（deduplication）、压缩和精简置备的形式为
Linux 提供内联数据降低。当您设置 VDO 卷时，您可以指定一个块设备来构建
VDO 卷以及您要存在的逻辑存储量。
::: itemizedlist
-   在托管活跃虚拟机或容器时，红帽建议以 10:1
    逻辑和物理比例置备存储：也就是说，如果您使用 1TB
    物理存储，您会将其显示为 10TB 逻辑存储。
-   对于对象存储，如 Ceph 提供的类型，红帽建议您使用 3:1
    逻辑与物理比例：1TB 物理存储将显示为 3TB 逻辑存储。
:::
在这两种情况下，您只需将文件系统放在 VDO
提供的逻辑设备之上，然后直接将其用作分布式云存储架构的一部分。
由于 VDO
是迅速置备的，所以文件系统和应用程序只会看到使用中的逻辑空间，且不知道可用的实际物理空间。使用脚本来监控实际的可用空间并在使用超过阈值时生成警报：
例如，当 VDO 卷已满 80% 时。
::: itemizedlist
**其它资源**
-   有关监控物理空间的详情请参考 ["管理 VDO
    卷的空闲空间"一节](#maintaining-vdo_deduplicating-and-compressing-storage.html#managing-free-space-on-vdo-volumes_maintaining-vdo "管理 VDO 卷的空闲空间"){.xref}。
:::
:::
::: section
::: titlepage
# []{#deploying-vdo_deduplicating-and-compressing-storage.html#vdo-deployment-scenarios_deploying-vdo}VDO 部署场景 {.title}
:::
您可以使用各种方法部署 VDO，以提供冗余存储：
::: itemizedlist
-   块和文件的访问
-   本地和远程存储
:::
因为 VDO 会将其删除重复数据的存储公开为标准 Linux
块设备，所以您可以在标准文件系统、iSCSI 和 FC
目标驱动程序或者统一存储中使用它。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
目前还不支持使用 Ceph Storage 进行 VDO 部署。
:::
### []{#deploying-vdo_deduplicating-and-compressing-storage.html#_kvm}KVM
您可以在配置了直接附加存储的 KVM 服务器上部署 VDO。
::: informalfigure
::: mediaobject
![使用 KVM 部署 VDO](images/vdo-kvm1.png)
:::
:::
### []{#deploying-vdo_deduplicating-and-compressing-storage.html#_file_systems}文件系统
您可以在 VDO 上创建文件系统，并将其公开给使用 NFS 服务器或 Samba 的 NFS
或 CIFS 用户。
::: informalfigure
::: mediaobject
![Deduplicated NAS](images/vdo-integration-deploy_file.png)
:::
:::
### []{#deploying-vdo_deduplicating-and-compressing-storage.html#_placement_of_vdo_on_iscsi}VDO 在 iSCSI 中放置
您可以将整个 VDO 存储目标导出为 iSCSI 目标到远程 iSCSI 启动器。
::: informalfigure
::: mediaobject
![重复数据删除的块存储目标](images/vdo-integration-deploy_block.png)
:::
:::
在 iSCSI 中创建 VDO 卷时，您可以将 VDO 卷放在 iSCI
层上方或下方。尽管需要考虑许多注意事项，但此处提供了一些准则，以帮助您选择最适合您的环境的方法。
当将 VDO 卷放在 iSCSI 服务器（目标）中时，请将 VDO 卷放在 iSCSI 层下方：
::: itemizedlist
-   VDO 卷对启动器透明，与其他 iSCSI LUN
    类似。从客户端隐藏精简配置和节省空间后，LUN 的外观更易于监控和维护。
-   网络流量会减少，因为没有 VDO 元数据读取或写入，并且网络上不会针对
    dedupe 建议进行读取验证。
-   iSCSI 目标上使用的内存和 CPU
    资源可提高性能。例如，托管更多虚拟机监控程序的能力，因为 iSCSI
    目标中正在进行卷减少。
-   如果客户端在启动器中实现加密，且目标下方有一个 VDO
    卷，则不会实现任何空间节省。
:::
当将 VDO 卷放在 iSCSI 客户端（启动器）中时，请将 VDO 卷放在 iSCSI 层上：
::: itemizedlist
-   如果达到较高的空间节省率，则有可能在 ASYNC
    模式下降低网络上的网络流量。
-   您可以直接查看和控制空间节省并监控使用情况。
-   如果要加密数据，例如使用 `dm-crypt`{.literal}，您可以在加密之上实施
    VDO，并充分利用空间效率。
:::
### []{#deploying-vdo_deduplicating-and-compressing-storage.html#_lvm}LVM
在功能丰富的系统上，您可以使用 LVM
提供由同一重复数据删除池支持的多个逻辑单元号(LUN)。
在下图中，VDO 目标注册为一个物理卷，以便它可以由 LVM
管理。从删除复制数据的存储池中创建多个逻辑卷（[*LV1*]{.emphasis}到
[*LV4*]{.emphasis}）。这样 VDO
便可支持多协议统一块或者对底层的删除重复数据的存储池的文件进行访问。
::: informalfigure
::: mediaobject
![重复数据删除的统一存储](images/vdo-integration-deploy_unified.png)
:::
:::
删除重复数据的统一存储设计（Deduplicated unified
storage）可让多个文件系统通过 LVM 工具集中使用相同的 deduplication
域。另外，文件系统可以充分利用 LVM
快照、写时复制、缩小或增长的功能，所有这些都位于 VDO 之上。
### []{#deploying-vdo_deduplicating-and-compressing-storage.html#_encryption}加密
DM Crypt 等设备映射器（DM）机制与 VDO 兼容。加密 VDO
卷有助于确保数据安全，且任何 VDO 以上的文件系统仍会是删除重复数据的。
::: informalfigure
::: mediaobject
![使用 VDO 加密](images/vdo-integration-vdo_encryption_layering.png)
:::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
应用上述 VDO 加密层会导致较少的（甚至不会导致）数据重复。在 VDO
可以对它们进行重复数据删除前，加密会使重复数据块不同。
始终将加密层放在 VDO 下。
:::
在 iSCSI 中创建 VDO 卷时，您可以将 VDO 卷放在 iSCI
层上方或下方。尽管需要考虑许多注意事项，但此处提供了一些准则，以帮助您选择最适合您的环境的方法。
:::
::: section
::: titlepage
# []{#deploying-vdo_deduplicating-and-compressing-storage.html#components-of-a-vdo-volume_deploying-vdo}VDO 卷的组件 {.title}
:::
VDO
使用块设备作为后备存储，它包括由一个或多个磁盘、分区甚至平面文件组成的物理存储聚合。当存储管理工具创建
VDO 卷时，VDO 为 UDS 索引和 VDO 卷保留卷空间。UDS 索引和 VDO
卷会一起交互，以提供重复的块存储。
::: figure
[]{#deploying-vdo_deduplicating-and-compressing-storage.html#idm139671988391152}
**图 1.1. VDO 磁盘机构**
::: figure-contents
::: mediaobject
![VDO 磁盘机构](images/vdo-disk-organization.png)
:::
:::
:::
VDO 解决方案包括以下组件：
::: variablelist
[`kvdo`{.literal}]{.term}
:   载入 Linux
    设备映射器层的内核模块提供删除重复数据的、压缩和精简置备的块存储卷。
    `kvdo`{.literal} 模块公开块设备。您可以直接访问块存储或通过 Linux
    文件系统（如 XFS 或 ext4）访问此块设备。
    当 `kvdo`{.literal} 收到从 VDO
    卷中读取数据的逻辑块的请求时，它会将请求的逻辑块映射到底层物理块，然后读取并返回请求的数据。
    当 `kvdo`{.literal} 收到向 VDO 卷写入数据的请求时，它首先检查请求是
    DISCARD 还是 TRIM 请求，或者数据是否统一为零。如果其中任何一个条件为
    true，`kvdo`{.literal} 会更新其块映射并确认请求。否则，VDO
    会处理并优化数据。
[`uds`{.literal}]{.term}
:   与卷上的通用重复数据服务(UDS)索引通信的内核模块，并分析重复数据。对于每个新的数据，UDS
    可以快速地判断该数据是否与之前存储的数据相同。如果索引发现匹配项，则存储系统可在内部引用现有项，以避免多次保存相同的信息。
    UDS 索引作为 the `uds 内核模块在`{.literal} 内核中运行。
[命令行工具]{.term}
:   用于配置和管理优化的存储。
:::
:::
::: section
::: titlepage
# []{#deploying-vdo_deduplicating-and-compressing-storage.html#the-physical-and-logical-size-of-a-vdo-volume_deploying-vdo}VDO 卷的物理和逻辑大小 {.title}
:::
这部分论述了 VDO 可以使用的物理大小、可用物理大小和逻辑大小。
::: variablelist
[物理大小]{.term}
:   这与底层块设备的大小相同。VDO 使用这个存储用于：
    ::: itemizedlist
    -   用户数据，这些数据可能会进行重复数据删除和压缩
    -   VDO 元数据，如 UDS 索引
    :::
[可用物理大小]{.term}
:   这是 VDO 可用于用户数据的物理大小的一部分
    它等同于物理大小减去元数据的大小，再减去将卷根据指定的 slab
    的大小分为 slab 后剩余的值。
[逻辑大小]{.term}
:   这是 VDO
    卷在应用程序中的置备大小。它通常大于可用的物理大小。如果没有指定
    `--vdoLogicalSize`{.literal} 选项，则逻辑卷的调配现在被置备为
    `1:1`{.literal} 比率。例如，如果将 VDO 卷放在 20GB 块设备之上，则为
    UDS 索引保留 2.5 GB（如果使用默认索引大小）。剩余的 17.5 GB 为 VDO
    元数据和用户数据提供。因此，要消耗的可用存储不超过 17.5
    GB，且可能会因为组成实际 VDO 卷的元数据而减少。
    VDO 目前支持任意逻辑卷大小最多为物理卷的 254 倍，但不能超过 4PB。
:::
::: figure