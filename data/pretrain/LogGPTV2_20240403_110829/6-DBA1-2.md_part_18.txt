### MySQL 密码设置与用户授权

#### 方法1：使用 `SET PASSWORD` 指令
以 root 用户登录 MySQL 后，可以使用 `SET PASSWORD` 指令来设置密码。这个方法与新安装 MySQL 服务器后首次修改密码的方式相同。

```sql
mysql> SET PASSWORD FOR root@localhost = PASSWORD('1234567');
Query OK, 0 rows affected, 1 warning (0.00 sec)
```

#### 方法2：使用 `GRANT` 授权工具
以 root 用户登录 MySQL 后，可以使用 `GRANT` 授权工具来设置密码。这是最常见的用户授权方式。

```sql
mysql> GRANT ALL ON *.* TO root@localhost IDENTIFIED BY '1234567';
Query OK, 0 rows affected, 1 warning (0.00 sec)
```

#### 方法3：使用 `UPDATE` 更新相应的表记录
以 root 用户登录 MySQL 后，可以使用 `UPDATE` 语句更新相应的表记录来重设密码。这种方法在恢复密码时常用。

```sql
mysql> UPDATE mysql.user 
       SET authentication_string = PASSWORD('1234567')
       WHERE user = 'root' AND host = 'localhost';
Query OK, 0 rows affected, 1 warning (0.00 sec)

Rows matched: 1  Changed: 0  Warnings: 1

mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.00 sec)
```

**注意**：当 MySQL 服务程序以 `skip-grant-tables` 选项启动时，如果没有执行 `FLUSH PRIVILEGES;` 操作，则无法通过 `SET PASSWORD` 或 `GRANT` 方式设置密码。例如：

```sql
mysql> SET PASSWORD FOR root@localhost = PASSWORD('1234567');
ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement

mysql> GRANT ALL ON *.* TO root@localhost IDENTIFIED BY '1234567';
ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement
```

## 用户授权及撤销

### 问题
- 允许 root 用户从 192.168.4.0/24 网段访问，对所有库/表有完全权限，密码为 `tarena`。
- 添加一个管理账号 `dba007`，具有完全控制及授权权限。
- 撤销 root 用户从本机访问的权限，然后恢复。
- 允许 `webuser` 从任意客户机登录，只对 `webdb` 库有完全权限，密码为 `888888`。
- 撤销 `webuser` 的完全权限，改为查询权限。

### 方案
使用两台 RHEL 7 虚拟机，如图-1 所示。其中 192.168.4.10 是 MySQL 服务器，授权及撤销操作均在此服务器上执行；而 192.168.4.120 作为测试客户机，需要安装好 MySQL-client 软件包，以便提供 `mysql` 命令。同时，MySQL 服务器本身（192.168.4.10）也可以作为测试客户机。

### 步骤

1. **允许 root 从 192.168.4.0/24 访问，对所有库/表有完全权限，密码为 tarena**

   授权之前，从 192.168.4.0/24 网段的客户机访问时，将会被拒绝：

   ```sh
   [root@host120 ~]# mysql -u root -p -h 192.168.4.10
   Enter password: //输入正确的密码
   ERROR 2003 (HY000): Host '192.168.4.120' is not allowed to connect to this MySQL server
   ```

   授权操作：

   ```sql
   mysql> GRANT ALL ON *.* TO root@'192.168.4.%' IDENTIFIED BY 'tarena';
   Query OK, 0 rows affected (0.00 sec)
   ```

   再次从 192.168.4.0/24 网段的客户机访问时，输入正确的密码后可登入：

   ```sh
   [root@host120 ~]# mysql -u root -p -h 192.168.4.10
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 20
   Server version: 5.7.17 MySQL Community Server (GPL)
   Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   mysql>
   ```

   测试新建一个库并查看所有库：

   ```sql
   mysql> CREATE DATABASE rootdb;
   Query OK, 1 row affected (0.06 sec)

   mysql> SHOW DATABASES;
   +--------------------+
   | Database           |
   +--------------------+
   | information_schema |
   | home               |
   | mysql              |
   | performance_schema |
   | rootdb             |
   | sys                |
   | userdb             |
   +--------------------+
   7 rows in set (0.01 sec)
   ```

2. **在 MySQL 服务器上建立一个管理账号 `dba007`，对所有库完全控制，并赋予其授权权限**

   新建账号并授权：

   ```sql
   mysql> GRANT ALL ON *.* TO dba007@localhost IDENTIFIED BY '1234567' WITH GRANT OPTION;
   Query OK, 0 rows affected (0.00 sec)
   ```

   查看 `dba007` 的权限：

   ```sql
   mysql> SHOW GRANTS FOR dba007@localhost;
   +---------------------------------------------------------------------------------------------------------------------+
   | Grants for dba007@localhost                                                                                         |
   +---------------------------------------------------------------------------------------------------------------------+
   | GRANT ALL PRIVILEGES ON *.* TO 'dba007'@'localhost' WITH GRANT OPTION                                               |
   +---------------------------------------------------------------------------------------------------------------------+
   1 row in set (0.00 sec)
   ```

3. **撤销 root 从本机访问的权限，然后恢复**

   撤销 root 对数据库的操作权限：

   ```sql
   mysql> REVOKE ALL ON *.* FROM root@localhost;
   Query OK, 0 rows affected (0.00 sec)

   mysql> SHOW GRANTS FOR root@localhost;
   +----------------------------------------------+
   | Grants for root@localhost                    |
   +----------------------------------------------+
   | GRANT USAGE ON *.* TO 'root'@'localhost'     |
   | GRANT PROXY ON ''@'' TO 'root'@'localhost'   |
   +----------------------------------------------+
   2 rows in set (0.00 sec)
   ```

   验证撤销后的权限效果：

   ```sql
   mysql> exit
   Bye
   [root@dbsvr1 ~]# mysql -u root -p
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 6
   Server version: 5.6.15 MySQL Community Server (GPL)
   Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   mysql> CREATE DATABASE newdb2014;
   ERROR 1044 (42000): Access denied for user 'root'@'localhost' to database 'newdb2014'
   mysql> DROP DATABASE rootdb;
   ERROR 1044 (42000): Access denied for user 'root'@'localhost' to database 'rootdb'
   ```

   尝试以当前的 root 用户恢复权限会失败（无权更新授权表）：

   ```sql
   mysql> GRANT ALL ON *.* TO root@localhost IDENTIFIED BY '1234567';
   ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)
   ```

   退出当前 MySQL 连接，以上一步添加的管理账号 `dba007` 登录：

   ```sh
   mysql> exit
   Bye
   [root@dbsvr1 ~]# mysql -u dba007 -p
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 24
   Server version: 5.7.17 MySQL Community Server (GPL)
   Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   ```

   由管理账号 `dba007` 重新为 root 添加本地访问权限：

   ```sql
   mysql> GRANT ALL ON *.* TO root@localhost IDENTIFIED BY '1234567';
   Query OK, 0 rows affected (0.00 sec)

   mysql> SHOW GRANTS FOR root@localhost;
   +---------------------------------------------------------------------------------------------------------------------+
   | Grants for root@localhost                                                                                           |
   +---------------------------------------------------------------------------------------------------------------------+
   | GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION                                                 |
   | GRANT PROXY ON ''@'' TO 'root'@'localhost'                                                                          |
   +---------------------------------------------------------------------------------------------------------------------+
   2 rows in set (0.00 sec)
   ```

   退出，再重新以 root 登录，测试一下看看，权限又恢复了：

   ```sh
   mysql> exit
   Bye
   [root@dbsvr1 ~]# mysql -u root -p
   Enter password:
   Welcome to the MySQL monitor. Commands end with ; or \g.
   Your MySQL connection id is 25
   Server version: 5.7.17 MySQL Community Server (GPL)
   Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.
   Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners.
   Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
   mysql> CREATE DATABASE newdb2014;
   Query OK, 1 row affected (0.00 sec)
   ```

4. **允许 `webuser` 从任意客户机登录，只对 `webdb` 库有完全权限，密码为 `888888`**

   添加授权：

   ```sql
   mysql> GRANT ALL ON webdb.* TO webuser@'%' IDENTIFIED BY '888888';
   Query OK, 0 rows affected (0.00 sec)
   ```

   查看授权结果：

   ```sql
   mysql> SHOW GRANTS FOR webuser@'%';
   +-------------------------------------------------------------------------------------------------------------+
   | Grants for webuser@%                                                                                        |
   +-------------------------------------------------------------------------------------------------------------+
   | GRANT USAGE ON *.* TO 'webuser'@'%'                                                                        |
   | GRANT ALL PRIVILEGES ON `webdb`.* TO 'webuser'@'%'                                                         |
   +-------------------------------------------------------------------------------------------------------------+
   2 rows in set (0.00 sec)
   ```

5. **撤销 `webuser` 的完全权限，改为查询权限**

   撤销所有权限：

   ```sql
   mysql> REVOKE ALL ON webdb.* FROM webuser@'%';
   Query OK, 0 rows affected (0.00 sec)
   ```

   只赋予查询权限：

   ```sql
   mysql> GRANT SELECT ON webdb.* TO webuser@'%';
   Query OK, 0 rows affected (0.00 sec)
   ```

   确认授权更改结果：

   ```sql
   mysql> SHOW GRANTS FOR webuser@'%';
   +-------------------------------------------------------------------------------------------------------------+
   | Grants for webuser@%                                                                                        |
   +-------------------------------------------------------------------------------------------------------------+
   | GRANT USAGE ON *.* TO 'webuser'@'%'                                                                        |
   | GRANT SELECT ON `webdb`.* TO 'webuser'@'%'                                                                 |
   +-------------------------------------------------------------------------------------------------------------+
   2 rows in set (0.00 sec)
   ```

## 数据备份方式

### 物理备份
- **物理备份**：直接拷贝数据库里面的数据文件。
- **冷备**：使用 `cp` 和 `tar` 命令进行备份和恢复。

#### 物理备份缺点
- 占用物理存储空间
- 备份时间长
- 备份简单
- 跨平台性差

#### cp 方式备份与恢复
```sh
[root@sql51 ~]# mkdir /mysqlbak
[root@sql51 ~]# cp -r /var/lib/mysql /mysqlbak/mysql201902180919  # 备份
[root@sql51 ~]# cd /mysqlbak/mysql201902180919
[root@sql51 ~]# cp -r /mysqlbak/mysql201902180919 /var/lib/mysql  # 恢复
```

#### tar 方式备份与恢复
```sh
[root@sql51 ~]# tar -zcvf /mysqlbak/mysql.tar.gz /var/lib/mysql  # 备份
[root@sql51 ~]# cd /mysqlbak/
[root@sql51 mysqlbak]# ls
mysql201902180919  mysql.tar.gz
[root@sql51 ~]# tar -zxvf /mysqlbak/mysql.tar.gz -C /var/lib/mysql  # 恢复
```

### 逻辑备份
- **逻辑备份**：使用命令对数据做备份，根据执行备份时已有的数据生成对应的备份文件。

#### mysqldump 备份
```sh
[root@sql51 ~]# mysqldump --uroot --p密码 库名 > /数据库目录/xxx.sql  # 备份
```

#### 数据恢复
```sh
[root@sql51 ~]# mysql --uroot --p密码 库名 < /数据库目录/xxx.sql  # 恢复
```

实际环境中通常使用的备份策略包括 MySQL 主从同步等。