## PostgreSQL Oracle 兼容性 - 行列变换(pivot unpivot) (tablefunc, crosstab)    
### 作者                                                             
digoal                                                             
### 日期                                                             
2018-07-14                                                           
### 标签                                                             
PostgreSQL , Oracle , 行列变换 , pivot , unpivot , tablefunc , crosstab , json , jsonb        
----                                                             
## 背景       
行列转换是OLAP应用场景中，对数据透视常用的SQL之一。   
## Oracle pivot 行转列    
语法如下：    
```    
SELECT ...    
FROM   ...    
PIVOT [XML]    
   (pivot_clause    
    pivot_for_clause    
    pivot_in_clause )    
WHERE ...    
```    
In addition tothe new PIVOT keyword, we can see three new pivot clauses, described below.    
（1）pivot_clause: definesthe columns to be aggregated (pivot is an aggregate operation);    
（2）pivot_for_clause: definesthe columns to be grouped and pivoted;    
（3）pivot_in_clause: definesthe filter for the column(s) in the pivot_for_clause (i.e. the range of valuesto limit the results to). The aggregations for each value in thepivot_in_clause will be transposed into a separate column (where appropriate).    
对pivot_for_clause 指定的列进行过滤，只将指定的行转成列。    
如：    
```    
SQL> WITH pivot_data AS (  -- 使用CTE语法，行转列的记录集    
 2          SELECT deptno, job, sal    -- 原始表，注意出现过的列，看PIVOT里面是如何处理的    
 3          FROM   emp    
 4          )    
 5  SELECT *    
 6  FROM   pivot_data    
 7  PIVOT (    
 8         SUM(sal)            -- SELECT *    
  2  FROM  pivoted_data    
  3  UNPIVOT (    
  4       deptsal                    -->'seller' as seller,       
  js->>'se_year' as se_year,      
  jan  ,    
  feb  ,    
  mar  ,    
  apr  ,    
  may  ,    
  jun  ,    
  jul  ,    
  aug  ,    
  sep  ,    
  oct  ,    
  nov  ,    
  dec     
from crosstab(    
  -- 这个是需要进行行列变换的源SQL ， 数据源。    
  -- 排序字段为group by字段  ，最后一个字段为转换后的内容字段，导数第二个字段为行列变换的字段（内容为枚举，比如月份）    
  -- （必须在下一个参数中提取出对应的所有枚举值）    
  $$select jsonb_build_object('seller', seller, 'se_year', se_year) as js, se_month, sum(se_amount) from tbl_sellers_info group by 1,2 order by 1$$,        
  -- 行列转换的行，有哪些值被提取出来作为列。 这个在这里代表的是月份，也就是se_month的值     
  -- 或(select * from (values('jan'),...('dec')) t(se_month))    
  'select distinct se_month from tbl_sellers_info order by 1'          
)     
as   -- crosstab 输出格式    
(  js jsonb,  -- 第一个参数SQL内对应的order by对应的字段（1个或多个）    
   Jan numeric,  -- 第一个参数SQL内对应导数第二个字段的枚举值，（行转列）    
   feb numeric,  -- ...同上    
   mar numeric,    
   apr numeric,    
   may numeric,    