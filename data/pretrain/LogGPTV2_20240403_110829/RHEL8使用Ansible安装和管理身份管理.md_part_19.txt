3.  打开 `permission-present-with-attribute.yml`{.literal} Ansible
    playbook 文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `object_type`{.literal} 变量设置为 `host`{.literal}。
    -   将 `正确的`{.literal} 变量设置为 `all`{.literal}。
    -   将 `attrs`{.literal} 变量设置为 `description`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "MyPermission" permission is present with an attribute
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          object_type: host
          right: all
          attrs: description
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-present-with-attribute.yml
    ```
:::
::: itemizedlist
**其它资源**
-   如需有关 IdM 模式的更多信息，请参阅 RHEL 7 中的 [*Linux
    域身份、身份验证和策略中的
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#user-schema](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#user-schema){.link}
    用户和组模式*]{.emphasis}。
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-rbac-permission-is-absent_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 确保缺少 RBAC 权限 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制(RBAC)。
以下流程描述了如何使用 Ansible playbook 确保 IdM
中缺少权限，因此无法将其添加到特权中。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html "第 5 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录中的 permission-`{.literal}
    absent.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-absent.yml permission-absent-copy.yml
    ```
3.  打开 `permission-absent-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "MyPermission" permission is absent
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          state: absent
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-attribute-is-a-member-of-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 确保属性是 IdM RBAC 权限的成员 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制(RBAC)。
以下流程描述了如何使用 Ansible playbook 确保属性是 IdM 中 RBAC
权限的成员。因此，拥有 权限的用户可以创建具有 属性的条目。
示例描述了如何确保特权包含 [**MyPermission**]{.strong}
权限的用户创建的主机条目可以具有 `gecos`{.literal} 和
`description`{.literal} 值。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
创建或修改权限时可以指定的属性类型不受 IdM LDAP 模式的限制。但是，指定
`attrs: car_licence（如果`{.literal} `object_type`{.literal} 是
`host`{.literal} ）会导致
`ipa: ERROR: 属性"car-license"在尝试执行该权限时不允许出现`{.literal}
错误消息，并为主机添加特定的车辆许可证值。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html "第 5 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
-   [**MyPermission**]{.strong} 权限存在。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录中的 permission-`{.literal}
    member-present.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-member-present.yml permission-member-present-copy.yml
    ```
3.  打开 `permission-member-present-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `attrs`{.literal} 列表设置为 `description`{.literal} 和
        `gecos`{.literal} 变量。
    -   确保 `action`{.literal} 变量设置为 `member`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission member present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "gecos" and "description" attributes are present in "MyPermission"
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          attrs:
          - description
          - gecos
          action: member
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-member-present-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-attribute-is-not-a-member-of-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 确保属性不是 IdM RBAC 权限的成员 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制(RBAC)。
以下流程描述了如何使用 Ansible playbook 确保属性不是 IdM 中 RBAC
权限的成员。因此，当拥有权限的用户在 IdM LDAP
中创建条目时，该条目不能具有与 属性关联的值。
这个示例描述了如何确保以下目标状态：
::: itemizedlist
-   [**MyPermission**]{.strong} 权限存在。
-   具有特权的用户创建的主机条目包含 [**MyPermission**]{.strong}
    权限，不能具有 `description`{.literal} 属性。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html "第 5 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
-   [**MyPermission**]{.strong} 权限存在。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/permission/ 目录的 permission-`{.literal}
    member-absent.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-member-absent.yml permission-member-absent-copy.yml
    ```
3.  打开 `permission-member-absent-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `attrs`{.literal} 变量设置为 `description`{.literal}。
    -   将 `action`{.literal} 变量设置为 `member`{.literal}。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Permission absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that an attribute is not a member of "MyPermission"
        ipapermission:
          ipaadmin_password: Secret123
          name: MyPermission
          attrs: description
          action: member
          state: absent
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory permission-member-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-rename-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 重命名 IdM RBAC 权限 {.title}
:::
作为身份管理系统管理员(IdM)，您可以自定义 IdM 基于角色的访问控制。
以下流程描述了如何使用 Ansible playbook
重新命名权限。这个示例描述了如何将 [**MyPermission 重命名为**]{.strong}
[**MyNewPermission**]{.strong}。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html "第 5 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例