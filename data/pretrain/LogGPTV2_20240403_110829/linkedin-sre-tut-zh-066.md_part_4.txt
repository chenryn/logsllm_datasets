### IP 欺骗
*   在这种类型的攻击中，攻击者用不同的地址替换发件人的 IP 地址，或者在极少数情况下替换目的地的 IP 地址。
*   IP 欺骗通常用于攻击目标主机。在其他情况下，它被用来发起拒绝服务(DoS)攻击。
*   在 DoS 攻击中，攻击者修改 IP 数据包，误导目标主机接受原始数据包，将其视为来自可信主机的数据包。攻击者必须知道可信主机的 IP 地址，才能修改数据包报头(源 IP 地址),使数据包看起来好像来自该主机。
IP 欺骗检测技术
*   直接 TTL 探针
*   在这种技术中，我们向可疑欺骗 IP 主机发送一个数据包，该主机触发回复并将 TTL 与可疑数据包进行比较；如果回复中的 TTL 与被检查的数据包不同；这是一个欺骗数据包。
*   当攻击者与受害者位于不同的子网时，这种技术就成功了。![image19](img/77a10708cd126275c1c1bcb681fc2d76.png)
*   IP 标识号。
*   向可疑欺骗流量的主机发送一个探测，触发回复并将 IP ID 与可疑流量进行比较。
*   如果 IP IDs 不在被检查的数据包的邻近值中，则可疑流量是欺骗的
*   TCP 流量控制方法
*   发送欺骗 TCP 数据包的攻击者不会收到目标的 SYN-ACK 数据包。
*   因此，攻击者无法对拥塞窗口大小的变化做出响应
*   当接收器在窗口大小用尽后仍接收到流量时，最有可能的情况是数据包被欺骗。
### 隐蔽通道
*   隐蔽或秘密通道可以被最好地描述为两个实体之间的管道或通信通道，它可以被以违反系统安全规范的方式传输信息的进程或应用所利用。
*   更具体地说，对于 TCP/IP，在某些情况下，建立隐蔽通道，并且数据可以在两个终端系统之间秘密地传递。
*   例如:ICMP 位于 TCP/IP 协议组的互联网层，在所有 TCP/IP 主机中实现。根据 ICMP 协议的规范，ICMP 回应请求消息应该有一个 8 字节的报头和一个 56 字节的有效载荷。ICMP 回应请求数据包不应在有效负载中携带任何数据。然而，这些数据包经常被用来携带秘密信息。ICMP 数据包稍作改动，以便在有效载荷中携带机密数据。这使得数据包变得更大，但是在协议栈中没有控制来消除这种行为。ICMP 数据包的改变使得入侵者能够对专门的客户机-服务器对进行编程。这些小段代码在不通知网络管理员的情况下导出机密信息。
*   ICMP 不仅可以用于数据过滤。例如，一些 C&C 工具，如 Loki，早在 1996 年就使用 ICMP 信道建立加密的交互式会话。
*   深度数据包检测已经走过了漫长的道路。许多 IDS/IPS 检测 ICMP 隧道。
    *   检查不包含与请求相同的有效负载的回应响应
    *   检查 ICMP 流量，尤其是超出可接受阈值的流量
### IP 碎片攻击
*   TCP/IP 协议族，或者更具体地说是 IP，允许分组的分段。(这是一个特性，而不是一个错误)
*   IP 分段偏移量用于跟踪数据报的不同部分。
*   该字段中的信息或内容在目的端用于重组数据报
*   所有这样的片段具有相同的标识字段值，并且分段偏移指示当前片段在原始分组的上下文中的位置。
*   许多接入路由器和防火墙不执行分组重组。在正常操作中，IP 片段不会重叠，但是攻击者可以创建人为分割的数据包来误导路由器或防火墙。通常，由于数据和计算开销，这些数据包很小，对于终端系统几乎不切实际。
*   IP 碎片攻击的一个很好的例子是 Ping of Death 攻击。死亡 Ping 攻击会发送一些片段，当这些片段在终端站重新组合时，会产生一个比最大允许长度更大的数据包。
TCP 标志
*   在三次握手完成之前，不会使用 TCP 进行数据交换。这种握手使用不同的标志来影响 TCP 数据段的处理方式。
*   TCP 报头中有 6 位通常称为标志。即:
*   6 个不同的标志是 TCP 报头的一部分:紧急指针字段(URG)、确认字段(ACK)、推送功能(PSH)、重置连接(RST)、同步序列号(SYN)以及发送方完成该连接(FIN)。![image20](img/c4f65c3423017e412f40fdc887e447de.png)
*   攻击者可以滥用这些标志的正常操作或设置来发起 DoS 攻击。这会导致网络服务器或 web 服务器崩溃或挂起。
```sh
| SYN  | FIN  | PSH   | RST  | Validity|  
|------|------|-------|------|---------|
| 1    |1     |0      |0     |Illegal Combination
| 1    |1     |1      |0     |Illegal Combination
| 1    |1     |0      |1     |Illegal Combination
| 1    |1     |1      |1     |Illegal Combination 
```
*   攻击者的最终目标是编写特殊的程序或代码片段，这些程序或代码片段可以构造这些非法组合，从而导致有效的 DoS 攻击。
合成洪水
*   攻击者经常使用 3 次握手中的计时器(或缺少某些计时器)来禁用服务，甚至进入系统。
*   在三次握手的步骤 2 之后，在接收到 SYN 之后的等待时间没有限制。攻击者向 XYZ 公司的 web 服务器发起许多连接请求(几乎可以肯定是用一个假冒的 IP 地址)。
*   web 服务器发送回原始源 IP 地址的 SYN+ACK 数据包(步骤 2)不会得到回复。这使得 TCP 会话在 web 服务器上处于半开状态。多个数据包导致多个 TCP 会话保持打开。
*   基于服务器的硬件限制，有限数量的 TCP 会话可以保持打开，因此，一旦达到某个限制，web 服务器就拒绝来自任何主机的进一步连接建立尝试。在可以建立新的连接之前，这些半开连接需要被完成或超时。
鳍攻击
*   在正常操作中，发送方设置 TCP FIN 标志，表示不再传输数据，连接可以关闭。
*   这是一种四向握手机制，发送方和接收方都需要在收到 FIN 数据包时发送确认。
*   在试图破坏连接的攻击中，会构造一个伪造的 FIN 数据包。该数据包还具有正确的序列号，因此目标主机会认为该数据包是有效的。这些序列号很容易预测。这一过程被称为 TCP 序列号预测，攻击者要么嗅探连接的当前序列号和确认(SEQ/ACK)号，要么通过算法预测这些号码。
### 连接劫持
![image22](img/e3082e7d284dda918de110588044850a.png)
*   一个授权用户(员工 X)通过与 web 服务器的 TCP 会话发送 HTTP 请求。
*   只有当数据包具有正确的 SEQ/ACK 号时，web 服务器才会接受来自员工 X 的数据包。如前所述，这些数字对于 web 服务器区分不同的会话并确保它仍在与员工 X 通话非常重要。想象一下，黑客开始使用正确的 seen 确认组合向 web 服务器发送数据包，假冒员工 X 的 IP 地址。web 服务器接受数据包并增加 ACK 号。
*   与此同时，员工 X 继续发送数据包，但发送的 SEQ/ACK 号不正确。由于发送了不同步的数据包，来自员工 X 的所有数据在被 web 服务器接收时都会被丢弃。攻击者使用正确的数字伪装成员工 X。这最终导致黑客劫持了连接，由此员工 X 完全被弄糊涂了，并且 web 服务器假定黑客正在发送正确的同步数据来回复。
步骤:
1.  攻击者使用网络监视器检查流量，并注意到从员工 X 到 web 服务器的流量。
2.  web 服务器将数据返回或回显给始发站(员工 X)。
3.  员工 X 确认了该数据包。
4.  黑客向服务器发送一个欺骗数据包。
5.  网络服务器响应黑客。破解者开始验证 SEQ/ACK 号，以再次检查是否成功。此时，破解程序从员工 X 处接管会话，这导致员工 X 的会话挂起。
6.  黑客可以开始向网络服务器发送流量。
7.  web 服务器返回所请求的数据，用正确的 ACK 号确认交付。
8.  破解者可以继续发送数据(跟踪正确的 SEQ/ACK 号),直到最终设置 FIN 标志来终止会话。
### 缓冲区溢出
*   缓冲区是用于存储程序代码和数据的临时数据存储区域。
*   当一个程序或进程试图在一个缓冲区中存储比原来预期的更多的数据时，就会发生缓冲区溢出。
*   缓冲区是内存中的临时存储位置(内存或缓冲区大小通常以字节为单位)，可以存储固定数量的字节数据。当检索的数据超过缓冲区位置可以存储的数据时，附加信息必须进入相邻的缓冲区，导致覆盖其中保存的有效数据。
机制:
*   缓冲区溢出漏洞有不同的类型。但所有缓冲区溢出攻击的总体目标都是控制特权程序，如果可能的话，还包括主机。攻击者有两个任务来实现这个目标。首先，脏代码需要在程序的代码地址空间中可用。第二，特权程序应该跳转到代码的特定部分，这确保了正确的参数被加载到内存中。
*   第一项任务可以通过两种方式实现:将代码注入正确的地址空间，或者使用现有的代码并稍微修改某些参数。第二个任务稍微复杂一点，因为需要修改程序的控制流，使程序跳转到脏代码。
对策:
*   最重要的方法是集中精力编写正确的代码。
*   第二种方法是使程序代码的数据缓冲区(内存位置)地址空间不可执行。这种类型的地址空间使代码无法执行，代码可能会在攻击过程中渗透到程序的缓冲区中。
### 更多欺骗
地址解析协议欺骗
*   地址解析协议(ARP)提供了一种将已知 IP 地址解析或映射到 MAC 子层地址的机制。
*   利用 ARP 欺骗，黑客可以通过欺骗主机 b 的硬件地址来利用这种硬件地址认证机制。基本上，攻击者可以使本地网络上的任何主机或网络设备相信黑客的工作站是可信的主机。这是交换环境中常用的方法。
*   通过在网络中的所有主机和路由器上实施静态 ARP 表，可以防止 ARP 欺骗。或者，您可以实现一个 ARP 服务器，代表目标主机响应 ARP 请求。
DNS 欺骗
*   DNS 欺骗是黑客使目标机器相信它想要连接的系统就是黑客的机器的方法。
*   黑客修改了一些记录，使主机的名称条目与攻击者的 IP 地址相对应。存在整个 DNS 服务器被攻击破坏的实例。
*   为了对抗 DNS 欺骗，反向查找会检测这些攻击。反向查找是一种根据名称验证 IP 地址的机制。IP 地址和名称文件通常保存在不同的服务器上，这使得泄密更加困难