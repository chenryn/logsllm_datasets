our future work. Finally, it is worth noting that we assume
that a wallet is illicit when it seen together with a malware.
However, not all the mining might be illicit. For example, the
criminal could start mining from his own PC before/while she
is mining illicitly. This is unlikely, but we would not have
technical means to make this distinction should it were to
happen. While some of the mining could be done licitly, we
however argue that the revenues obtained from this activity
revert on a criminal anyway. Thus, it can be used to fuel other
illicit activities and the ﬁgures associated to this wallets are
therefore relevant to our study.
Quality of the aggregation. Our methodology is used to
group samples and wallets into campaigns. We leverage the
data collected mostly for this purpose, but we also collect
additional data to measure the magnitude of the problem.
We use manual veriﬁcation to evaluate that our heuristics
are coherent. When campaigns relate to know mining botnets
(e.g., Photominer, or Adylkuzz), we verify that the structure
of the campaign matches with what has been reported about
that botnet. When looking at novel campaigns, we verify that
the resulting aggregation matches with the one provided by
our heuristics. This can be seen from the case studies shown
in §V. However, we acknowledge that our heuristics are not
complete and can be subject to errors in the aggregation. This
can lead to both campaigns that are under- or over-aggregated.
In general, we have design our heuristics to be conservative
to avoid over-aggregation. For example, we aggregate based
on the full in-the-wild URL (rather than by domain name)
to avoid aggregating campaigns that use common third-party
infrastructure like Amazon WS or GitHub.
Anti-analysis techniques. A limiting factor of the quality of
the ground-truth is the ability of malware to hinder detection.
On the one hand, malware uses obfuscation to thwart static
analysis. We have seen that this generally comes in the form
of packers and crypters, although advanced adversaries might
be using polymorphic or metamorphic malware.
Like in many of the current countermeasures, we have
partially addressed this in two ways. First, we looked at
the usage of known packers and saw that a small number
of campaigns used them. As not all packing algorithms are
known, and thus not all samples can be unpacked, we have
also looked at the entropy of the binaries.
On the other hand, malware uses evasion techniques to
thwart dynamic analysis. While there are many forms of
evasion we are vulnerable to (e.g., sandbox detection [41]), we
put special efforts to address those targeting the crypto-mining
malware realm in particular. Speciﬁcally, we have attempted
to de-anonymize domain aliases that masked connections to
mining pools (c.f., §III-E). However, despite our efforts, our
study inherits the limitations of both static dynamic analysis
and thus can unavoidably miss samples from advanced adver-
saries. A way to cope with other advanced adversaries that
use other forms of evasion, such as anti-emulation techniques,
would be to use bare metal solutions [7].
Mining-tailored solutions. One common strategy when as-
suming adversaries leveraging advanced obfuscation and eva-
sion techniques, is to devise solutions that are tailored to the
type of threat. Since miners have a distinctive CPU usage,
one can rely on this to build an anomaly detection system
for crypto-malware. Related works rely on modeling of the
CPU usage [8] or on instrumenting web browsers to detect
suspicious activity [42], [11]. While these approaches are
effective for web-based cryptojacking, these types of defenses
are not effective with crypto-mining malware for one reason:
the malware controls the infected computer and thus it can
evade any local defenses (e.g., by acting as a rootkit and
tampering with the CPU monitoring module). Other works
propose to monitor the CPU usage of a computer from a
hypervisor to protect Infrastructure-as-a-Service clouds [6].
However, this approach focuses on protecting cloud providers,
and it is not applicable to end-users. An alternative is to
ofﬂoad the usage monitor to an external system and look
at the energy consumption ﬁngerprint. While power-aware
anomaly detection systems have been proposed to detect
smartphone malware in general [43], [44], we are not aware
of a solution tailored to crypto-mining malware for general-
purpose computers. We position that these solutions could
be deployed by electric-companies to end-users with smart-
meters.
VII. RELATED WORK
Illicit mining has been a threat since the emergence of
Bitcoin in 2009. However, it has not been properly addressed
in academia until recently. The ﬁrst analysis of crypto-mining
malware was published in 2014 by Huang et al. [15]. Au-
thors analyzed botnets and campaigns mining bitcoins. They
found that malicious malware mined at least 4.5K bitcoins
(which was worth around $3.2M in 2014). Since mining
bitcoins using end-user computers is no longer proﬁtable, both
cryptocurrency malware and web-based cryptojacking rely on
cryptocurrencies resistant to ASIC mining, such as Monero or
Bytecoin. Thus, most of the illicit mining focuses on Monero
nowadays [16], [9], [8]. Recent works analyzed web-based
mining, both as an alternative to advertisements to monetize
web content [13], [12] and as cryptojacking, where mining
is done without the consent of users [8], [9], [10]. Konoth
et al. analyzed the Top 1M Alexa sites looking for web-
browser cryptojacking
[8]. They used a mixture of code
analysis and network monitoring to identify whether a web is
trying to connect to a mining pool using the Stratum Protocol.
Hong et al. proposed a dynamic analysis method to detect
cryptojacking in web content [9].
To distinguish cryptojacking from benign mining, it is im-
portant to properly identify user consent. One approach is
to search for keywords indicating mining activity [9]. This
approach misses informed consent acquired by other means,
16
such as images or additional documents. Thus, some works
also look for AuthedMine scripts, which require explicit action
from users to start mining [8], [11]. In our work, we rely on AV
reports and other heuristics to classify binaries into malware
or goodware.
Previous works are characterized by the simplicity in which
they aggregate campaigns. In particular, related works mostly
look at mining pool identiﬁers (e.g., wallets) alone [9], [11].
However, criminals use concurrent miners with different iden-
tiﬁers to retake operations when wallets are banned [17].
Konoth et al. includes information about the servers when per-
forming the aggregation [8]. Unfortunately, this does not scale
as it requires manual efforts vetting the code of the scripts
(i.e., to get the veriﬁcation code). In their analysis of Bitcoin,
Huang et al. use information gathered from the Blockchain to
aggregate campaigns [15]. However, this approach is not valid
for cryptocurrencies that obfuscate transactions (e.g., Monero
or Zcash).
The overall earnings obtained from malicious mining have
increased in the last years. For example, Konoth et al. discov-
ered 1,735 domains, estimating overall revenues of $188,878
per month. In parallel work, Hong et al. detected 2,770
domains, estimating overall revenues of $1.7M. However,
estimations obtained from web-browser cryptojacking are not
reliable. This is because analyzing proﬁts from web activity
relies on estimates of i) the number of monthly visitors, ii)
the time spent by each visitor on average, and iii) the type of
device they use. Instead, we are able to get wallets used by
the malware and the payments given by the pools as a reward.
This allows us to analyze not only the earnings of each wallet,
but also the pools used for mining and the exact dates of
the payments. Our ﬁndings increase the understanding of this
threat. In particular, we estimate that earnings are — at least
— 58 million USD obtained in 4.5 years of operation (more
than 1M/month). Table XII summarizes the related works and
compares each of the measurements.
VIII. CONCLUSION
In this paper, we have presented a longitudinal large-scale
measurement study of crypto-mining malware, analyzing sam-
ples spanning over more than a decade. We show that Monero
is currently the preferred currency used by criminals, who have
obtained massive earnings. This criminal activity is rooted
within the underground ecosystem, which allow criminals
to externalize operations, e.g. to avoid AV detection using
packers or to spread their malware through PPI. Through static
and dynamic analysis, we extract information from the samples
which is used to group them into campaigns. While some
campaigns rely on third-party infrastructure, others use simple
and effective evasion mechanisms such as domain aliases.
Our proﬁt analysis on Monero shows that a small number
of actors hold sway the mining illicit business. Using crypto-
mining malware, criminals have mined (at least) 4.4% of the
moneros in circulation, earning up to 56 million USD. One of
the main reasons of the success of this criminal business is its
relatively low cost and high return of investment. Also, since
17
it is considered a lower threat to their clients, the AV industry
has not paid due attention. Our ﬁndings complement related
studies focused on Bitcoin and web-based cryptojacking,
corroborating that malicious crypto-mining is a growing and
complex threat that requires effective countermeasures and
intervention approaches. Due to the need of updating mining
software, our ﬁndings suggest that regular changes in the PoW
algorithm might discourage criminals, since this will increase
the cost of acquisition (e.g., customers of PPI will need to
buy new installs) and maintenance of their botnets. Finally,
we present technical details about the way this ecosystem
operates and discuss open challenges and countermeasures. In
particular, we analyze two novel campaigns and fully release
the data of all campaigns to foster research in the area.
ACKNOWLEDGMENTS
A shorter version of this paper appears in the 2019 ACM
InternetMeasurement Conference (IMC). This is the full ver-
sion, but we would like to thank our IMC shepherd, professor
Ben Y. Zhao, for the assistance in the process of improving the
quality of this paper, and the anonymous reviewers for their
positive and helpful comments. Special thanks to VirusTotal
for granting access to its private API and the Cambridge
Cybercrime Centre for sharing the CrimeBB dataset. We also
thank PaloAlto for sharing data feeds related to cryptomining
malware. Warmest thanks to Alexander Vetterl and Daniel
Thomas for their assistance and valuable feedback.
This work is partially supported by MINECO (grant
TIN2016-79095-C2-2-R), and by the Comunidad de Madrid
(P2018/TCS-4566, co-ﬁnanced by European Structural Funds
ESF and FEDER). The opinions, ﬁndings, and conclusions or
recommendations expressed are those of the authors and do
not necessarily reﬂect those of any of the funders.
REFERENCES
[1] C. Beek, T. Dunton, S. Grobman, M. Karlton, N. Minihane, C. Palm,
E. Peterson, R. Samani, C. Schmugar, R. Sims, D. Sommer, and B. Sun,
“Mcafee Threat Report,” June 2018.
[2] Webroot, “Webroot threat report: Mid-year update,” September 2018.
[Online]. Available: https://perma.cc/3M2Z-Q76Y
[3] A. Norton, “Crypto-malware - a look at the latest malware threat,”
September 2018. [Online]. Available: https://perma.cc/6K3K-E632
[4] D. Liebenberg, C. McFarland, M. Martinez, C. Jerome, F. Gutierrez,
A. Giandomenico, T. DeJesus, J. Grunzweig, M. Martinez, A. Brandt,
N. Jenkins, and S. Scher, “The illicit cryptocurrentcy mining threat,”
September 2018. [Online]. Available: https://perma.cc/Z5ZH-H5TG
[5] K. Thomas, D. Yuxing, H. David, W. Elie, B. C. Grier, T. J. Holt,
C. Kruegel, D. Mccoy, S. Savage, and G. Vigna, “Framing dependencies
introduced by underground commoditization,” in In Proceedings of
the Workshop on Economics of Information Security (WEIS), Delft,
Netherlands, 2015.
[6] R. Tahir, M. Huzaifa, A. Das, M. Ahmad, C. Gunter, F. Zaffar,
M. Caesar, and N. Borisov, “Mining on someone else’s dime: Mitigating
covert mining operations in clouds and enterprises,” in Proceedings of
the International Symposium on Research in Attacks, Intrusions, and
Defenses (RAID). Cham: Springer International Publishing, 2017, pp.
287–310.
[7] D. Kirat, G. Vigna, and C. Kruegel, “Barecloud: Bare-metal analysis-
based evasive malware detection.” in 23th USENIX Security Symposium.
San Diego, CA, USA: USENIX Association, 2014, pp. 287–301.
Focus (currency)
Huang et al. [15] (2014)
Ruth et al. [12] (2018)
Hong et al. [9] (2018)
Konoth et al. [8] (2018)
Papadopoulus et al. [13] (2018) Web-based mining (XMR)
Musch et al. [14] (2018)
Our work
Binary-based mining (BTC)
Web-based mining (XMR)
Web-based cryptojacking (XMR)
Web-based cryptojacking (XMR)
Web-based cryptojacking (XMR)
Binary-based mining (various)
Analyzed
Unknown
10M websites
548,624 websites
991,513 websites
3M websites
1M websites
4.4M malware samples
Size
Detected
2K crypto-mining malware
2,287 websites
2,270 websites
1,735 websites
107.5K websites
2.5k websites
1.2M crypto-mining malware
Proﬁts
14,979 BTC
1,271 XMR/month
7,692.30 XMR
746.55 XMR/month
N/A
N/A
741K XMR (13.7K XMR/month)
TABLE XII: Summary of related work. *Last row shows our measurement.
[8] R. K. Konoth, E. Vineti, V. Moonsamy, M. Lindorfer, C. Kruegel,
H. Bos, and G. Vigna, “Minesweeper: An in-depth look into drive-by
cryptocurrency mining and its defense,” in Proceedings of the 25th ACM
SIGSAC Conference on Computer and Communications Security (CCS).
Toronto, Canada: ACM, 2018, pp. 1714–1730.
[9] G. Hong, Z. Yang, S. Yang, L. Zhang, Y. Nan, Z. Zhang, M. Yang,
Y. Zhang, Z. Qian, and H. Duan, “How you get shot in the back: A
systematical study about cryptojacking in the real world,” in Proceedings
of the 25th ACM SIGSAC Conference on Computer and Communications
Security (CCS). Toronto, Canada: ACM, 2018, pp. 1701–1713.
[10] M. Saad, A. Khormali, and A. Mohaisen, “End-to-end analysis of in-
browser cryptojacking,” arXiv preprint arXiv:1809.02152, 2018.
[11] A. Kharraz, Z. Ma, P. Murley, C. Lever, J. Mason, A. Miller, N. Borisov,
M. Antonakakis, and M. Bailey, “Outguard: Detecting in-browser covert
cryptocurrency mining in the wild,” in Proceedings of The Web Confer-
ence (WWW). San Francisco, USA: ACM, 2019, pp. 840–852.
[12] J. R¨uth, T. Zimmermann, K. Wolsing, and O. Hohlfeld, “Digging into
browser-based crypto mining,” in Proceedings of
the 2018 Internet
Measurement Conference (IMC’18). Boston, MA, USA: ACM, 2018,
pp. 70–76.
[13] P. Papadopoulos, P. Ilia, and E. P. Markatos, “Truth in web mining: Mea-
suring the proﬁtability and cost of cryptominers as a web monetization
model,” arXiv preprint arXiv:1806.01994, 2018.
[14] M. Musch, C. Wressnegger, M. Johns, and K. Rieck, “Web-based
cryptojacking in the wild,” arXiv preprint arXiv:1808.09474, 2018.
[15] D. Y. Huang, H. Dharmdasani, S. Meiklejohn, V. Dave, C. Grier,
D. McCoy, S. Savage, N. Weaver, A. C. Snoeren, and K. Levchenko,
“Botcoin: Monetizing stolen cycles.” in Proceedings of the Network and
Distributed System Security Symposium (NDSS), Citeseer. San Diego,
CA,USA: Internet Society, 2014, pp. 1–16.
[16] J. Grunzweig, “Palo Alto Networks: The Rise of the Cryptocurrency
Miners,” June 2018. [Online]. Available: https://perma.cc/4VZL-J45Q
[17] Kafeine, “Proofpoint: Smominru Monero mining botnet making
[Online]. Available: https:
millions for operators,” January 2018.
//perma.cc/V5UR-TDLU
[18] ——, “Proofpoint: Adylkuzz cryptocurrency mining malware spreading
[Online].
for weeks via EternalBlue/DoublePulsar,”
Available: https://perma.cc/3V7G-CDEN
June 2017.
[19] K. Kurokawa, “Forking for ASIC resistance: A Monero case study,”
June 2018. [Online]. Available: https://perma.cc/5JL6-RPPS
[20] R. Recabarren and B. Carbunar, “Hardening Stratum, the Bitcoin pool
mining protocol,” Proceedings on Privacy Enhancing Technologies, vol.
2017, no. 3, pp. 57–74, 2017.
[21] S. Pastrana, D. R. Thomas, A. Hutchings, and R. Clayton, “CrimeBB:
Enabling cybercrime research on underground forums at scale,” in
Proceedings of The Web Conference (WWW).
Lyon, France: ACM,
2018, pp. 1845–1854.
[22] C. Kolbitsch, E. Kirda, and C. Kruegel, “The power of procrastina-
tion: detection and mitigation of execution-stalling malicious code,” in
Proceedings of the 18th ACM SIGSAC Conference on Computer and
Communications Security (CCS). Chicago, Illinois, USA: ACM, 2011,
pp. 285–296.
[23] C. Lever, P. Kotzias, D. Balzarotti, J. Caballero, and M. Antonakakis, “A
lustrum of malware network communication: Evolution and insights,” in
IEEE Symposium on Security and Privacy (SP). San Jose, CA, USA:
IEEE, 2017, pp. 788–804.
[24] V. G. Li, M. Dunn, P. Pearce, D. McCoy, G. M. Voelker, and
S. Savage, “Reading the tea leaves: A comparative analysis of threat
intelligence,” in 28th USENIX Security Symposium. Santa Clara, CA:
USENIX Association, aug 2019, pp. 851–867. [Online]. Available:
https://www.usenix.org/conference/usenixsecurity19/presentation/li
18
[25] M. Lindorfer, M. Neugschwandtner, L. Weichselbaum, Y. Fratantonio,
V. Van Der Veen, and C. Platzer, “Andrubis–1,000,000 apps later: A
view on current android malware behaviors,” in Proceedings of the 3th
International Workshop on Building Analysis Datasets and Gathering
Experience Returns for Security (BADGERS). Wroclaw, Poland: IEEE,
2014, pp. 3–17.
[26] M. Lindorfer, M. Neugschwandtner, and C. Platzer, “Marvin: Efﬁcient
and comprehensive mobile app classiﬁcation through static and dynamic
analysis,” in Proceedings of the IEEE 39th Annual Computer Software
and Applications Conference (COMPSAC), vol. 2. Taichung,Taiwan:
IEEE, 2015, pp. 422–433.
[27] A. Kantchelian, M. C. Tschantz, S. Afroz, B. Miller, V. Shankar,
R. Bachwani, A. D. Joseph, and J. D. Tygar, “Better malware ground
truth: Techniques for weighting anti-virus vendor labels,” in Proceedings
of
the 8th ACM Workshop on Artiﬁcial Intelligence and Security.
Denver, Colorado, USA: ACM, 2015, pp. 45–56.
[28] S. Eskandari, A. Leoutsarakos, T. Mursch, and J. Clark, “A ﬁrst look
at browser-based cryptojacking,” in IEEE Security & Privacy on the
Blockchain. London,UK: IEEE, 2018, pp. 58–66.
[29] D. Goldberg, “Guardicore: The Photominer campaign,” June 2016.
[Online]. Available: https://perma.cc/JE3Y-F42L
[30] A. Vamshi, “Netskope: Technical analysis of Xbooster parasitic Monero
miner,” May 2018. [Online]. Available: https://perma.cc/8RZG-5QBS
[31] Checkpoint, “Jenkins miner: one of the biggest mining operations
ever discovered,” February 2018. [Online]. Available: https://perma.cc/
SVN4-C5B4
[32] D. Liebenberg, “Cisco Talos: Rocke, the champion of Monero miners,”
August 2018. [Online]. Available: https://perma.cc/ZH4B-DBG3
[33] J. Caballero, C. Grier, C. Kreibich, and V. Paxson, “Measuring pay-per-
install: the commoditization of malware distribution.” in 20th USENIX
Security Symposium. San Francisco, CA, USA: USENIX Association,
2011, pp. 13–13.
[34] R. Van Wegberg, S. Tajalizadehkhoob, K. Soska, U. Akyazi, C. H.
Ganan, B. Klievink, N. Christin, and M. Van Eeten, “Plug and prey?
Measuring the commoditization of cybercrime via online anonymous
markets,” in 27th USENIX Security Symposium. Baltimore, MD, USA:
USENIX Association, 2018, pp. 1009–1026.
[35] Y. Li, S. C. Sundaramurthy, A. G. Bardas, X. Ou, D. Caragea, X. Hu,
and J. Jang, “Experimental study of fuzzy hashing in malware clustering
analysis,” in 8th Workshop on Cyber Security Experimentation and Test
(CSET 15), vol. 5. Washington, D.C, USA: USENIX Association, 2015,