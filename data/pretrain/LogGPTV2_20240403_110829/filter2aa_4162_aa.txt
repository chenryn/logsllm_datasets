.\" auto-generated by docbook2man-spec $Revision: 1.2 $
.TH "PSQL" "1" "2003-11-02" "Application" "PostgreSQL Client Applications"
.SH NAME
psql \- PostgreSQL 交互终端
.SH SYNOPSIS
.sp
\fBpsql\fR\fR [\fR\fB\fIoption\fB\fR...\fB\fR\fR]\fR\fR [\fR\fB\fIdbname\fB\fR [\fB\fIusername\fB\fR]\fB\fR\fR]\fR
.SH "DESCRIPTION 描述"
.PP
\fBpsql\fR 是一个以终端为基础的 PostgreSQL  前端。它允许你交互地键入查询，把它们发出给 PostgreSQL， 然后看看查询的结果。另外，输入可以来自一个文件。还有， 它提供了一些元命令和多种类 shell 地特性来实现书写脚本以及对大量任务的自动化。
.SH "OPTIONS 选项"
.TP
\fB-a\fR
.TP
\fB--echo-all\fR
 在读取行时向屏幕打印所有内容。 这个选项在脚本处理时比交互模式时更有用。这个选项等效于设置变量 ECHO 为 all。
.TP
\fB-A\fR
.TP
\fB--no-align\fR
 切换为非对齐输出模式。（缺省输出模式是对齐的。）
.TP
\fB-c\fIcommand\fB\fR
.TP
\fB--command\fIcommand\fB\fR
声明 psql 将执行一条查询字串， command，然后退出。这一点在 shell 脚本里很有用。
\fIcommand\fR 必须是一条完全可以被服务器分析的查询字串（也就是说，它不包含
psql特有的特性）， 或者是一个反斜杠命令。这样你就不会混合 SQL 和 psql 
元命令。要想混合使用，你可以把字串定向到\fBpsql\fR 里，象这样：
echo "\\x\\ select * from foo;" | psql。
 如果命令字串包含多个 SQL 命令，那么他们在一个事务里处理， 除非在字串里包含了明确的 BEGIN/COMMIT 命令把他们分成多个事务。 这个和从 psql 的标准输入里给它填充相同字串不同。
.TP
\fB-d\fIdbname\fB\fR
.TP
\fB--dbname\fIdbname\fB\fR
 声明想要联接的数据库名称。等效于在命令行行上把 dbname  声明为第一个非选项参数。
.TP
\fB-e\fR
.TP
\fB--echo-queries\fR
 显示所由发送给服务器的查询。 等效于把变量 ECHO 设置为 queries。
.TP
\fB-E\fR
.TP
\fB--echo-hidden\fR
 回显由\fB\\d\fR 和其他反斜杠命令生成的实际查询。 如果你希望在你自己的程序里包含类似的功能， 你就可以使用这个选项。这等效于在psql里设置变量ECHO_HIDDEN。
.TP
\fB-f\fIfilename\fB\fR
.TP
\fB--file\fIfilename\fB\fR
 使用 filename作为命令的语句源而不是交互式读入查询。 在处理完文件后，psql 结束。这个选项在很多方面等效于内部命令\fB\\i\fR。
如果\fIfilename\fR 是\-
（连字符），则从标准输入读取。
 使用这个选项与用 psql 的提示符。例如，
.sp