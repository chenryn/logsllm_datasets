这个工具也可以在你使用延时功能后显示一个倒计时。这个功能可以通过 `-c` 选项打开。
```
scrot –delay [NUM] -c
scrot -d 5 -c
```
下面是示例截图：
 [![延时截屏示例](/data/attachment/album/201712/05/112347o2sizrmzhz1q6sic.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/countdown.png) 
### 图片质量
你可以使用这个工具来调整截图的图片质量，范围是 1-100 之间。较大的值意味着更大的文件大小以及更低的压缩率。默认值是 75，不过最终效果根据选择的文件类型也会有一些差异。
这个功能可以通过 `--quality` 或 `-q` 选项打开，但是你必须提供一个 1 - 100 之间的数值作为参数。
```
scrot –quality [NUM]
scrot –quality 10
```
下面是示例截图：
 [![截屏质量](/data/attachment/album/201712/05/112347nlhxbjb5xobp2b8j.jpg)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/img-quality.jpg) 
你可以看到，`-q` 选项的参数更靠近 1 让图片质量下降了很多。
### 生成缩略图
scort 工具还可以生成截屏的缩略图。这个功能可以通过 `--thumb` 选项打开。这个选项也需要一个 NUM 数值作为参数，基本上是指定原图大小的百分比。
```
scrot --thumb NUM
scrot --thumb 50
```
**注意**：加上 `--thumb` 选项也会同时保存原始截图文件。
例如，下面是我测试的原始截图：
 [![原始截图](/data/attachment/album/201712/05/112347txddqcc3cduoeqoc.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/orig.png) 
下面是保存的缩略图：
 [![截图缩略图](/data/attachment/album/201712/05/112347hxbwexedqeomoxiw.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/thmb.png) 
### 拼接多显示器截屏
如果你的电脑接了多个显示设备，你可以用 scort 抓取并拼接这些显示设备的截图。这个功能可以通过 `-m` 选项打开。
```
scrot -m
```
下面是示例截图：
 [![拼接截屏](/data/attachment/album/201712/05/112347bv4rvrchrtvftv1c.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/multiple.png) 
### 在保存截图后执行操作
使用这个工具，你可以在保存截图后执行各种操作 —— 例如，用像 gThumb 这样的图片编辑器打开截图。这个功能可以通过 `-e` 选项打开。下面是例子：
```
scrot abc.png -e 'gthumb abc.png'
```
这个命令里的 gthumb 是一个图片编辑器，上面的命令在执行后会自动打开。
下面是命令的截图：
 [![截屏后执行命令](/data/attachment/album/201712/05/112348u2cedjma4c3kpubq.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/exec1.png) 
这个是上面命令执行后的效果：
 [![示例截图](/data/attachment/album/201712/05/112348gr1ku52a165emuk1.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/exec2.png) 
你可以看到 scrot 抓取了屏幕截图，然后再启动了 gThumb 图片编辑器打开刚才保存的截图图片。
如果你截图时没有指定文件名，截图将会用带有时间戳的文件名保存到当前目录 —— 这是 scrot 的默认设定，我们前面已经说过。
下面是一个使用默认名字并且加上 `-e` 选项来截图的例子：
```
scrot -e 'gthumb $n'
```
 [![scrot 截屏后运行 gthumb](/data/attachment/album/201712/05/112348do7hr66zc6zkvcv6.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/exec3.png) 
有个地方要注意的是 `$n` 是一个特殊字符串，用来获取当前截图的文件名。关于特殊字符串的更多细节，请继续看下个小节。
### 特殊字符串
scrot 的 `-e`（或 `--exec`）选项和文件名参数可以使用格式说明符。有两种类型格式。第一种是以 `%` 加字母组成，用来表示日期和时间，第二种以 `$` 开头，scrot 内部使用。
下面介绍几个 `--exec` 和文件名参数接受的说明符。
`$f` – 让你可以使用截图的全路径（包括文件名）。
例如：
```
scrot ashu.jpg -e ‘mv $f ~/Pictures/Scrot/ashish/’
```
下面是示例截图：
 [![示例](/data/attachment/album/201712/05/112348hj0fxqxc56f7m3jo.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/f.png) 
如果你没有指定文件名，scrot 默认会用日期格式的文件名保存截图。这个是 scrot 的默认文件名格式：`%yy-%mm-%dd-%hhmmss_$wx$h_scrot.png`。
`$n` – 提供截图文件名。下面是示例截图：
 [![scrot $n variable](/data/attachment/album/201712/05/112348d00jeahxhllrc9p9.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/n.png) 
`$s` – 获取截图的文件大小。这个功能可以像下面这样使用。
```
scrot abc.jpg -e ‘echo $s’
```
下面是示例截图：
 [![scrot $s 变量](/data/attachment/album/201712/05/112349ju3yzv96bbk2uvpb.png)](https://www.howtoforge.com/images/how-to-take-screenshots-in-linux-with-scrot/big/s.png) 
类似的，你也可以使用其他格式字符串 `$p`、`$w`、 `$h`、`$t`、`$$` 以及 `\n` 来分别获取图片像素大小、图像宽度、图像高度、图像格式、输入 `$` 字符、以及换行。你可以像上面介绍的 `$s` 格式那样使用这些字符串。
### 结论
这个应用能轻松地安装在 Ubuntu 系统上，对初学者比较友好。scrot 也提供了一些高级功能，比如支持格式化字符串，方便专业用户用脚本处理。当然，如果你想用起来的话有一点轻微的学习曲线。
---
via: 
作者：[Himanshu Arora](https://www.howtoforge.com/tutorial/how-to-take-screenshots-in-linux-with-scrot/) 译者：[zpl1025](https://github.com/zpl1025) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出