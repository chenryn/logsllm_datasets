title:An Editor for Adaptive XML-Based Policy Management of IPsec
author:Raj Mohan and
Timothy E. Levin and
Cynthia E. Irvine
An Editor for Adaptive XML-Based Policy Management of IPsec
Raj Mohan
Indian Army
Timothy E. Levin
Cynthia E. Irvine
Naval Postgraduate School
Naval Postgraduate School
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract
The IPsec protocol provides a mechanism to enforce a
range of security services for both confidentiality and
integrity, enabling secure transmission of information
across networks. Dynamic parameterization of IPsec, via
the KeyNote trust management system, further enables
security mechanisms to adjust the level of security service
“on-the-fly” to respond to changing network and
operational conditions. However KeyNote requires that
an IPsec policy be defined in the KeyNote specification
syntax. Defining such a dynamic security policy in the
KeyNote Policy Specification language is complicated
and can lead to incorrect specification of
the desired
policy, thus degrading the security of the network. We
present an alternative XML representation of
this
language and a graphical user interface to create and
manage a consistent and correct security policy. The
interface has the simplicity of a simple menu-driven
editor that not only provides KeyNote with a policy in
the specified syntax but also integrates techniques to
support administrative policy verification.
1.
Introduction
1.1. Objective
IPsec
such as
Network Protocols
and trust
management systems like KeyNote provide mechanisms
to secure computer-to-computer communications. These
tools enable the user to use various encryption and
authentication mechanisms to ensure confidentiality,
integrity and non-repudiation of
communications.
Dynamic parameterization [1] of IPsec further enables
security mechanisms to adjust the level of security service
“on-the-fly” to respond to changing network and
operational conditions. The trust management system,
KeyNote, specifies a language for describing actions,
which are operations with security consequences that are
to be controlled by the system [3][4][5]. The language
also provides the syntax for specifying the application
policies, which govern the actions that the principals are
authorized to perform.
To translate a dynamic
organizational
security policy into the KeyNote
specification language is, however, a daunting task due to
the complexities of the language and the policy. An
incorrect specification of the security policy might result
in a compromise of network security. It is in this context
that
the need for an alternative policy specification
mechanism is identified. This mechanism should enable
the user to clearly and correctly specify the policy and
also support user verification that the specified policy is
free of inconsistencies  and contradictions. The purpose of
this work is to analyze, design and implement a policy
editor interface that guides a user to specify various
attributes of the IPsec security policy. The policy is
stored in an intermediate XML format. The program will
automatically generate the equivalent policy in the
KeyNote
specification language. A presentation
mechanism will be described for providing the user with
an intuitive view of the policy that can be helpful in
preventing
inconsistencies and contradictions in the
specified policy.
1.2. Background
The increased dependence on computers
for
communication has enhanced the importance of network
security. The use of an inherently insecure Internet as the
medium for communicating sensitive material requires
that the end users have capabilities to ensure that the data
transmitted
network
administrators should have means to translate the desired
organizational security policy into an automated security
policy and have mechanisms to implement this policy
over their network.
Furthermore,
secure.
is
IPsec [10] extends the IP Protocol to enable security
for TCP/IP communications. IPsec provides both secrecy
and integrity services. A wide variety of choices are
available when establishing protected communications
across the network.
The appropriate choice and
combination of secrecy and integrity mechanisms will
depend upon the many-faceted “trust
relationships”
between the communicating entities and the security
environment. Those relationships are constrained by the
policy of each entity. Negotiation of policy and
mechanisms takes place in the context of the Internet Key
Exchange (IKE) framework and the Internet Security
Association and Key Management Protocol (ISAKMP)
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:42:15 UTC from IEEE Xplore.  Restrictions apply. 
[11]. However, IKE and ISAKMPD do not provide a
general mechanism for managing and incorporating
security policy. In order to ensure that IPsec consistently
meets the local security policy needs of the user, a trust
management system may be used to encode policy and
support communications
security negotiation and
management [15].
A trust management system unifies the elements of
security policy, credentials, access control,
and
authorization. The IPsec implementation in OpenBSD
utilizes a trust management system to manage security
according to policy [2]. Applications can use the
KeyNote trust management system to verify, through the
compliance checker, whether a requested policy addition
or change is authorized [6].
The Quality of Security Service (QoSS) model
provides a means to manage security services based on the
requirements set by the user’s requests, the system’s
security policy, the availability of system resources and
the network environment [8]
Dynamic parameterization of
[1] via
enhancements to KeyNote provides more granularity in
IPsec and provides flexibility to adjust security controls
according to changes in threat conditions, critical time
transmissions, and network congestion/traffic. This makes
IPsec a QoSS mechanism.
IPsec
The effectiveness of this mechanism depends on
having in place a correct security policy specified in the
KeyNote specification language. For practical real-life
network operations, specifying such a dynamic and
granular policy is an almost insurmountable task due to
the syntactic complexity of the KeyNote language and the
inherent complexity of the policy logic involved. An
XML-based specification of the policy should provide the
desired flexibility, be easy to use, and support an interface
for administration of the security policy. Such a multi-
function toolkit should provide an abstraction of the
KeyNote language and enable users to better utilize the
power of IPsec and KeyNote in managing network
security [12].
1.3. Expected Benefits
A policy management
toolkit will enable critical
commercial, government and military computer and
communications systems to automate security service
adjustments according to dynamic
environmental
parameter settings, such as current network  security status
(INFOCON and THREATCON, in military parlance).
The use of XML in such an effort enables common use of
available XML tools for ensuring security policy
consistency and also utilizes
flexibility and
compatibility that XML provides. An easy-to-use
interface ensures its use and the resulting policy
correctness will provide  confidence in the overall security
implementation of the network.
the
1.4. Organization of this Paper
and its
for QoSS,
specification for
The paper will be organized as follows: Section 2
provides an overview of the QoSS model. Section 3,
reviews the KeyNote
KeyNote Support
language
the QoSS
implementation in OpenBSD 2.8. Section 4, XML and
Policy Representation, describes XML technologies and
application to the problem domain. Section 5,
their
Design and Implementation, presents
design
philosophy of the toolkit; the considerations and overall
architecture will be discussed in
and
implementation issues of
the components will be
highlighted. Section 6 describes future work, and Section
7 summarizes our results.
the
detail,
2. Quality of Security Service (QOSS)
IPsec provides a high degree of granularity in
is afforded IPsec
discriminating between traffic that
protection and traffic that is allowed to bypass IPsec.
Further use of a trust management system such as
KeyNote enables an application to simply ask the
compliance checker whether a requested action should be
allowed. We can use KeyNote to specify a granular
security policy to be enforced by IPsec and also use
KeyNote to verify communications requests based on the
policy. Then, we would be able to modulate the KeyNote
security policy settings dynamically in accordance with
the security and performance requirements of
the
applications in particular, and networks as a whole. This
is the essence of ‘Quality of Security Service’ (QoSS).
2.1. Dynamic Parameters and Network
Modes
Many organizations utilize a variety of dynamic
parameters to define a predefined response of specific
actions according to policy. For the Government and
DoD, examples include INFOCON and THREATCON
levels.
In order for a security mechanism to be fully
functional within such a dynamic infrastructure, it has to
be able to reflect those  dynamic parameters in its security
posture. A change in an INFOCON or THREATCON
level should have an immediate effect on attributes and
settings in the low-level security mechanisms. Security
level and network mode, defined in the following
sections, have been chosen as two abstract dynamic
parameters that govern changes to security attributes as
defined in the organization’s security policy [13].
In the examples described here, we use the following
network modes: normal, impacted, and crisis. Normal
mode is defined as ordinary operating conditions with
normal traffic load and no heightened threat conditions.
Impacted mode may be defined when the network/system
is experiencing high levels of traffic and therefore certain
security selection may not be available due to efficiency
constraints. Emergency mode may be defined as a
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:42:15 UTC from IEEE Xplore.  Restrictions apply. 
situation that requires the highest level of security or the
lowest level dependent on the situation and policy [14].
Impacted
Low
Encryption: 3DES
Authentication: MD5
Encryption: 3DES
Authentication: SHA
Encryption: AES
Authentication: SHA
Medium
High
2.2. User Choices for Security Levels.
Network security policies may utilize a range of
maximum and minimum-security levels for each variant
security service. Minimum-security levels set the lowest
acceptable security attributes and maximum-security  levels
establish a ceiling on the use of available security
resources.
Intersections of policies require further
granularity in security settings to satisfy all governing
users and systems. A user may also desire to select a
higher level of security than the predefined minimum.
A user or application, however, may quickly become
overwhelmed with the security setting details, such as the
specific key and algorithm settings of a cryptographic
protocol, potentially resulting in degraded security or
performance. By developing security definitions that
encompass detailed security settings required by users or
applications, the complexity of the selection process for
the security settings can be simplified to a reasonable
level. Our examples involve the use of the following
abstract security levels: high, medium and low. ‘High’
security level would utilize strong levels of security
attributes, medium level, moderate level of security
attributes, and low level, low to no security attributes. In
this approach, the system security resource manager or
security engineer is responsible for presetting (mapping)
the detailed security variables in accordance with the
abstract security levels offered to users or applications.
2.3. Mapping Abstract Parameters to
Security Mechanism.
A mapping of abstract dynamic parameters to resident
security mechanisms is required to properly enforce policy
decisions. For example, network modes may be mapped
to security level ranges and ultimately to security
attributes and settings, as shown in Table 1.
Table 1. Mapping security policies to
security attributes
Network Mode
Security Level
Low
Normal
Medium
High
Low