# An Editor for Adaptive XML-Based Policy Management of IPsec

## Authors
- Raj Mohan, Indian Army
- Timothy E. Levin, Naval Postgraduate School
- Cynthia E. Irvine, Naval Postgraduate School

## Abstract
The IPsec protocol ensures secure transmission of information across networks by providing confidentiality and integrity services. Dynamic parameterization of IPsec, facilitated by the KeyNote trust management system, allows security mechanisms to adapt "on-the-fly" to changing network and operational conditions. However, defining a dynamic security policy in the KeyNote specification language can be complex and error-prone, potentially compromising network security. This paper introduces an alternative XML representation of the KeyNote language and a graphical user interface (GUI) to create and manage consistent and correct security policies. The GUI simplifies the process and integrates techniques for administrative policy verification.

## 1. Introduction

### 1.1. Objective
IPsec and trust management systems like KeyNote provide mechanisms for securing computer-to-computer communications, ensuring confidentiality, integrity, and non-repudiation. Dynamic parameterization of IPsec, as enabled by KeyNote, allows security mechanisms to adjust the level of security service in response to changing network and operational conditions. However, specifying a dynamic organizational security policy in the KeyNote language is challenging due to its complexity. Incorrect specifications can compromise network security. This work aims to develop a policy editor interface that guides users in specifying IPsec security policies. The policy is stored in an intermediate XML format, and the program automatically generates the equivalent policy in the KeyNote language. The interface also provides a presentation mechanism to help prevent inconsistencies and contradictions in the specified policy.

### 1.2. Background
The increasing reliance on computers for communication has heightened the importance of network security. The use of the inherently insecure Internet for sensitive data transmission necessitates robust security measures. IPsec extends the IP Protocol to provide secrecy and integrity services, with a wide range of choices for establishing protected communications. The appropriate choice of security mechanisms depends on the trust relationships and security environment, which are constrained by the policy of each entity. The Internet Key Exchange (IKE) and the Internet Security Association and Key Management Protocol (ISAKMP) frameworks do not provide a general mechanism for managing and incorporating security policies. Trust management systems, such as KeyNote, can encode and support the enforcement of these policies.

The Quality of Security Service (QoSS) model manages security services based on user requests, system policies, resource availability, and the network environment. Dynamic parameterization via KeyNote enhancements provides more granularity and flexibility in adjusting security controls according to changes in threat conditions, critical time transmissions, and network congestion. A correct security policy specified in the KeyNote language is essential for the effectiveness of this mechanism. However, the syntactic complexity of KeyNote and the inherent complexity of policy logic make it difficult to specify a dynamic and granular policy. An XML-based specification can provide the desired flexibility, ease of use, and support for policy administration.

### 1.3. Expected Benefits
A policy management toolkit will enable commercial, government, and military systems to automate security service adjustments based on dynamic environmental parameters, such as current network security status (INFOCON and THREATCON). The use of XML in this toolkit leverages available XML tools for ensuring policy consistency and provides flexibility and compatibility. An easy-to-use interface ensures correct policy specification, instilling confidence in the overall security implementation.

### 1.4. Organization of this Paper
- **Section 2:** Overview of the QoSS model.
- **Section 3:** Review of the KeyNote language and its QoSS implementation in OpenBSD 2.8.
- **Section 4:** XML technologies and their application to the problem domain.
- **Section 5:** Design and implementation of the toolkit, including design philosophy, considerations, and architecture.
- **Section 6:** Future work.
- **Section 7:** Summary of results.

## 2. Quality of Security Service (QoSS)
IPsec provides a high degree of granularity in discriminating between traffic that requires protection and traffic that can bypass IPsec. Using a trust management system like KeyNote, applications can verify whether requested actions should be allowed. KeyNote can specify a granular security policy for IPsec and verify communications requests based on this policy. Dynamic adjustment of KeyNote security policy settings according to security and performance requirements is the essence of QoSS.

### 2.1. Dynamic Parameters and Network Modes
Many organizations use dynamic parameters to define predefined responses to specific actions according to policy. For example, the Government and DoD use INFOCON and THREATCON levels. A security mechanism must reflect these dynamic parameters in its security posture. Changes in INFOCON or THREATCON levels should immediately affect attributes and settings in low-level security mechanisms. Security level and network mode are two abstract dynamic parameters that govern changes to security attributes as defined in the organization's security policy.

In our examples, we use the following network modes:
- **Normal Mode:** Ordinary operating conditions with normal traffic load and no heightened threat conditions.
- **Impacted Mode:** High traffic levels, leading to certain security selections being unavailable due to efficiency constraints.
- **Crisis Mode:** Requires the highest or lowest level of security, depending on the situation and policy.

### 2.2. User Choices for Security Levels
Network security policies may utilize a range of maximum and minimum security levels for each variant security service. Minimum security levels set the lowest acceptable security attributes, while maximum security levels establish a ceiling on the use of available security resources. Intersections of policies require further granularity in security settings to satisfy all governing users and systems. Users may also desire to select higher security levels than the predefined minimum.

However, users and applications can be overwhelmed by the details of security settings, such as specific key and algorithm settings. By developing security definitions that encompass detailed settings, the selection process can be simplified. Our examples involve the following abstract security levels:
- **High:** Strong security attributes.
- **Medium:** Moderate security attributes.
- **Low:** Low to no security attributes.

The system security resource manager or security engineer is responsible for mapping detailed security variables to these abstract security levels.

### 2.3. Mapping Abstract Parameters to Security Mechanisms
A mapping of abstract dynamic parameters to resident security mechanisms is required to enforce policy decisions. For example, network modes can be mapped to security level ranges and ultimately to security attributes and settings, as shown in Table 1.

| Network Mode | Security Level | Encryption | Authentication |
|--------------|----------------|------------|----------------|
| Normal       | Low            | 3DES       | MD5            |
|              | Medium         | 3DES       | SHA            |
|              | High           | AES        | SHA            |
| Impacted     | Low            | 3DES       | MD5            |
|              | Medium         | 3DES       | SHA            |
|              | High           | AES        | SHA            |

This table illustrates how different network modes can be mapped to specific security levels and corresponding encryption and authentication methods.