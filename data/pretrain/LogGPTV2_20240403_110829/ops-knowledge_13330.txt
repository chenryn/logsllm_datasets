User: 请回答以下运维开发问题如何在软件开发商店中找到约束？让我们将约束定义为阻止系统实现其目标的任何东西，然后看看组织中DevOps的目标。
一个很好的定义是“DevOps使功能能够从开发到IT运营再到客户的快速流动。”改进DevOps可以通过消除流动的障碍来实现。
首先，我们必须在流程中找到这些约束条件。也许有多个障碍，我们如何决定首先消除哪一个？
Eliyahu M.Goldratt博士的一句名言是
在约束条件下没有做出的任何改进都是一种幻觉
这种约束一旦被发现，就是系统管理的一个重要的聚焦机制。那么，您如何确定IT组织中的约束条件呢？为了获得更好的流量，应该改变什么？

Assistant: 识别任何过程中的约束是一项相对简单的任务。工作在整个组织中从一个人转移到另一个人，它只会堆积在一个约束之下。例如，您可以查找阻塞未解决问题数量最多的人员或团队。这取决于您如何跟踪工作流程，但如果您确实跟踪了它，那么识别约束通常不会太困难。了解组织的价值链并简单地遵循它们会有所帮助。
约束可以有三种类型：
人：个人特有的技能或知识。
策略：一种书面或非书面的策略或过程，通过增加延迟或降低吞吐量来限制工作。
设备：特定的计算机系统可以限制你通过它进行工作的速度或同时使用它的人数。
就软件而言，软件交付过程通常是一种约束，因此持续集成/持续交付是提升这种约束的一种强大方式，通常需要将组织置于这种约束之下，以提高工作的吞吐量。通过软件交付的自动化，您可以消除行动迟缓的人员以及通常代价高昂的政策障碍和审批。与其他两种相比，计算机系统升级形式的设备成本相对较小。
QA是过程中可能存在的约束的另一个例子。手动质量控制是工作密集型的，即使是自动化测试也可能受到设备的限制，以防软件在昂贵的硬件上运行。但QA中最常见的约束是策略，它往往会随着问题的出现而滚雪球。QA过程的延迟和较小的吞吐量可能会导致完成更大的工作单元，从而降低代码集成的成本。