diﬃcult for an adversary to replay acquired biometric
samples and thereby successfully authenticate.
4. SYSTEM ARCHITECTURE
We propose an authentication system which works as fol-
lows. The workstation shows an interactive visual stimulus
on the screen (we refer to it as gaze-challenge). Simultane-
ously, the gaze tracking device captures eye movements of
the user as he watches the screen (gaze-response), which the
workstation uses to adapt the stimulus in real time. Finally,
the workstation makes a decision about the user’s identity
and veriﬁes if the received gaze-response corresponds to the
shown gaze-challenge, asserting that the captured eye move-
ments are indeed fresh.
4.1 Stimulus for Reﬂexive Saccade Elicitation
To achieve stated design goals, a visual stimulus should
satisfy several requirements. It should elicit responses that
are suﬃciently distinctive to allow discrimination between
diﬀerent users. The response should not require high cog-
nitive eﬀort and should not depend on a user’s momentary
cognitive state. The stimulus should be unpredictable to
prevent habituation: seeing an image for the ﬁrst time will
likely result in a diﬀerent response than seeing it for the
second and the consecutive times [40]. Finally, in order to
allow fast authentication, the stimulus duration should be
as short as possible.
Design. Considering that reﬂexive behavior is more stable
and less dependent on a user’s transient internal cognitive
states than voluntary behavior, our goal is to design a stim-
ulus which allows eliciting and measuring individual traits
of user’s reﬂexive saccadic responses. Reﬂexive saccades are
triggered by salient objects that appear in one’s ﬁeld of view;
thus our stimulus consists of presenting a single red dot on a
dark screen that changes position multiple times. As shown
in Figure 3, a user’s eyes respond to the change by eliciting
a reﬂexive saccade which reorients the gaze towards the dot.
Every time the position of the dot changes, the visual sys-
tem responds by initiating a new reﬂexive saccade. Due to
saccade latency, this happens after a period of 100-200 ms
during which the visual system processes new information.
Figure 2: System model. The workstation uses data acquired
by the gaze tracker and user’s biometric template to make the
authentication decision. The adversary has read-write access
to the gaze channel. The visual channel is authenticated and
therefore read-only.
tication system. The enrollment happens in a secure sce-
nario, where the legitimate user authenticates to the work-
station using some other authentication method. During
enrollment, the user is shown several visual stimuli and the
workstation uses the corresponding recordings of the user’s
gaze to create a biometric template used for identity veriﬁ-
cation.
The interaction takes place through three diﬀerent chan-
nels. The visual channel is an authenticated channel from
the workstation to the user that consists of a screen that dis-
plays information, and the gaze tracking channel from the
user to the gaze tracker allows the workstation to determine
characteristics about the user’s eyes, including where he is
looking on the screen, as well as capture the reﬂexive eye
movements described in Section 2.
The workstation itself cannot be modiﬁed or forced to run
unintended code.
Adversary Model. The adversary’s goal is to impersonate
a legitimate user and successfully authenticate to the work-
station. The adversary can freely choose his victim from the
set of enrolled users. Since he can observe both the visual
and gaze channels, the adversary has access to the biometric
data from previous authentication attempts by the victim.
We focus on two diﬀerent types of attacks that the adver-
sary can perform:
• Impersonation attack. The adversary tries to gain ac-
cess to the workstation by positioning himself in front
of the gaze tracking device. This is the most common
way of evaluating biometric authentication systems,
and is usually reported in terms of false reject (FRR)
and false accept rates (FAR) as well as equal error
rates (EER).
• Replay attack. The adversary targets a speciﬁc user
and replays his previously recorded authentication at-
tempt to the authentication system. This can be done
either at the sensor level (e.g. by using a mechanical
eye replica), or by bypassing the gaze tracking sensor
completely and injecting the recorded samples between
the workstation and the sensor.
Biometrics are non-revocable, and we are surrounded by
sensors that can be used to steal and replay biometric data.
Therefore, we believe that modeling an attacker as having
access to legitimate user’s previous biometric measurements
is a realistic and necessary assumption. Most static biomet-
rics, such as ﬁngerprints or face recognition [5], cannot pro-
vide security under such assumptions; the ability to prevent
UserGaze-trackingdeviceGaze-trackingchannelVisual channelWorkstationStimulusFigure 3: A visualization of the stimulus for reﬂexive saccade elicitation. At any given time, only a single red dot is shown;
previous positions are shown on this ﬁgure to help the reader. Shortly after a red dot appears on the screen (a), a user’s visual
system starts a reﬂexive saccade to shift the gaze (dotted path) towards its position. Several milliseconds later, as the user’s gaze
enters the invisible perimeter around the stimulus (dashed circles), the dot is considered successfully gazed and momentarily
changes its position. Before a new saccade starts, there is usually a ﬁxation lasting 100-250 ms, during which the visual system
processes new input information (saccade latency). In (d), the presented dot is again successfully gazed, and once more changes
its position.
provides additional beneﬁts: taking into account that reﬂex-
ive behavior is signiﬁcantly harder to consciously control,
an adversary is less likely to be able to successfully imitate
another user’s characteristics. Most importantly, because
of the natural and eﬀortless tendency of the human visual
system to keep “catching” the red dot, the response to such
visual stimulus is fully reﬂexive: users neither need to follow
speciﬁc instructions nor invest high cognitive eﬀort —their
eyes do the work themselves.
Eﬀectiveness of the stimulus. In order to evaluate how
eﬀectively our designed stimulus elicits reﬂexive behavior,
we compute saccade latencies for a total of 991 gaze mea-
surements that constitute the dataset used throughout this
paper. Since each of the measurements represents a gaze-
response to a stimulus with 25 diﬀerent positions for the dot,
in total, this sums up to analyzing close to 25,000 captured
saccades.
Figure 4 shows the distribution and categorization of the
measured saccade latencies, dividing them into reﬂexive sac-
cades, voluntary saccades and saccadic movement caused by
blinks. Latencies under 80 ms are physically impossible and
likely to be the result of blinks or noise. Remaining latencies
predominantly fall below 250 ms, the threshold that char-
acterizes reﬂexive saccades [41]. This lets us conclude that
the stimulus does indeed elicit primarily reﬂexive behavior.
4.2 Authentication Protocol
We now use the proposed stimulus as a building block in
a challenge-response protocol for biometric user authentica-
tion that is secure against replay attacks. At the end of the
protocol execution, the workstation knows if the user whose
identity is claimed is at the moment present in front of the
gaze tracking device. To that goal, the workstation must
ensure that two properties hold:
Freshness. Freshness of the received biometric data can be
ensured by always showing a diﬀerent randomly generated
visual stimulus (gaze-challenge) to which every response will
diﬀer in a veriﬁable way.
Correct Identity. The user has the ability to generate bio-
metric data that corresponds to the claimed user’s template
which was created during enrollment.
The protocol for local biometric authentication is shown in
Figure 5. After the user claims his identity, the workstation
Figure 4: Relative frequency of saccade latencies for gaze-
responses used in this paper. Latencies are computed as the
duration between the stimulus change and the start of sub-
sequent saccadic movement. Vertical lines discriminate be-
tween reﬂexive and other types of saccades based on [41];
latencies of reﬂexive saccades are usually lower than 250 ms,
in contrast to latencies of voluntary saccades that are over
250 ms. Values under 80 ms are likely the result of noise or
blinks, or voluntary saccades initiated well before the stimu-
lus change.
Ideally, our stimulus should elicit the maximal number of
reﬂexive saccades in a given period of time, and this highly
depends on the frequency with which the position of the
dot changes. If this frequency is too high, user’s eyes will
not be given suﬃcient time to perform a full saccade. If it
is too low, the user might get tired of looking at a static
screen and start voluntary saccadic movements. Further-
more, each user is slightly diﬀerent, so there might not exist
a unique frequency at all. Our stimulus ensures an optimum
between these trade-oﬀs by interactively changing the loca-
tion of the dot as soon as the user successfully gazes the dot,
i.e., when a user’s gaze enters a perimeter of radius r around
the dot’s center. This results in eliciting the maximal num-
ber of full saccades in any given time interval, and ensures
that the user’s visual system receives an outside stimulus
change as often as possible, thus reducing the elicitation of
voluntary saccades which depend on his current cognitive
state. To ensure that the stimulus terminates even if the
user is not looking at the screen, the dot is considered to be
unsuccessfully gazed and moves to the next position after
a speciﬁc period of tmax milliseconds has passed. This pro-
cess continues for all N stimulus positions that constitute a
gaze-challenge.
Basing an authentication system on reﬂexive movements
visible stimuluscurrent gazemeasurementgaze perimetergaze withinperimeterstimuluschangespositionﬁxation beforea new saccadeabcdperimeter radius rNoise / BlinksReflexive saccadesVoluntary saccades0.0000.0050.0100100200300400Saccade Latency [ms]Relative frequencyone of the N positions, it is considered successfully gazed
only if one of the subsequent measurements of the user’s
gaze position falls within a radius of r pixels from the center
of the stimulus dot. Otherwise, if no gaze measurement
falls within its radius after tmax milliseconds, a position is
considered to be unsuccessfully gazed and the dot moves to
the next position:
gi := [(xj, yj) : ti ≤ tj < ti + tmax]
gazed ( ˆxi, ˆyi) ⇐⇒ ∃(x, y) ∈ gi : (cid:107)(x, y) − ( ˆxi, ˆyi)(cid:107)2 ≤ r
In order to decide on the freshness of the received gaze-
response, the system checks if the ratio of successfully gazed
stimulus positions is greater or equal to a chosen percentage
threshold T .
As the threshold T increases, the possibility that an ad-
versary successfully replays an old recording of a legitimate
user’s gaze decreases. On the other hand, this also results in
more legitimate attempts failing freshness veriﬁcation, e.g.,
because of imprecise gaze measurements. We explore this
trade-oﬀ and the security guarantees provided by our sys-
tem against replay attacks in Section 7.3.
4.4 VerifyIdentity
If the received gaze-response passes the freshness veriﬁca-
tion, the system ﬁnally veriﬁes that it truly originated from
the user whose identity was claimed at the beginning of the
authentication. The received gaze-response is ﬁrst used as
input to compute a set of speciﬁc feature values that are id-
iosyncratic and support stable classiﬁcation between users.
Next, the computed features are used as an input to a two-
class classiﬁer which is created during user enrolment. The
classiﬁer determines whether the calculated features more
likely belong to the user whose identity was claimed, or to
some internal or external attacker. As a last step, the au-
thentication system makes a ﬁnal decision and notiﬁes the
user of acceptance or rejection.
Next section describes the details about the features that
we use and how we train the user classiﬁers.
5. GAZE CLASSIFICATION
This section describes the process of extracting individual
characteristics from a user’s gaze-response and training a
classiﬁer that can uniquely discriminate between future re-
sponses of the same user and any other user’s gaze patterns.
5.1 Saccade and Fixation Detection
The ﬁrst step to computing feature values is to split the
input gaze measurement into intervals of saccades and ﬁxa-
tions.
We implement an algorithm [33] that estimates the level
of noise in the data and adaptively determines the thresh-
olds which are used to classify the pattern into periods of
ﬁxations and saccades based on angular speeds and accel-
erations. As seen in Figure 6a, the algorithm also detects
eye movement recordings that could not have been gener-
ated by a human eye under known physiological constraints,
and are usually the result of blinking. Given that the mean
duration of a single blink is close to 200 ms [18], and that