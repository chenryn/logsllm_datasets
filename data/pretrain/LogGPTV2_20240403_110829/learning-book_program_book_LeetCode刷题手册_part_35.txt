---
## Page 299
$+/
* Definition for singly-linked list.
type ListNode struct {
Valint
Next *ListNode
*/
funC getIntersectionNode (headA, headB *ListNode) *ListNode {
//boundary check
if headA == nil 11headB == ni1{
return nil
a := headA
b:= headB
//if a & b have different len, then we will stop the loop after second
iteration
for a != b {
//for the end of first iteration, we just reset the pointer to the head of
another linkedlist
if a == nil {
a = headB
}else{
a = a.Next
if b == nil {
b = headA
}else{
b = b.Next
fmt.Printf("a = %v b = %v\n", a, b)
return a
162.FindPeakElement
题目
A peak element is an element that is greater than its neighbors.
Given an input array nums , where nums [i] = nums [i+1] , find a peak element and return its
indlex.
---
## Page 300
The array may contain multiple peaks, in that case return the index to any one of the peaks is
fine.
=[u] swnu = [-]swnu eq augew >1
if(mid ==1en(nums)-1 && nums[mid-1]  0 &&
nums [mid-1] 0 && nums [mid-1]0 && nums [mid-1]>nums [mid]{
high = mid - 1
if mid == 1ow {
1ow++
if mid == high {
high--
return -1
//解法二二分
func findPeakElementl(nums []int) int{
low, high := 0, 1en(nums) -1
for low >1
//如果mid较大，则左侧存在峰值，high=m，如果mid+1较大，则右侧存在峰值，1ow
mid+1
if nums[mid]  > nums[mid+1] {
high = mid
}else{
1ow = mid + 1
return 1ow
164.Maximum Gap
题目
Given an unsorted array, find the maximum dlifference between the successive elements in its
sorted form.
---
## Page 302
Return 0 if the array contains less than 2 elements.
Example 1:
Input: [3,6,9,1]
output: 3
Explanation: The sorted form of the array is [1,3,6,9], either
(3,6) or (6,9) has the maximum difference 3.
Example 2:
Input: [10]
output:0
Explanation: The array contains less than 2 elements, therefore return 0.
Note:
● You may assume all elements in the array are non-negative integers and fit in the 32-bit
signed integer range.
● Try to solve it in linear time/space.
题目大意
在数组中找到2个数字之间最大的间隔。要求尽量用0（1)的时间复杂度和空间复杂度。
解题思路
虽然使用排序算法可以AC这道题。先排序，然后依次计算数组中两两数字之间的间隔，找到最大的一
个间隔输出即可。
这道题满足要求的做法是基数排序。
代码
package leetcode
//解法-
func maximumGap(nums []int) int {
if len(nums) res {
res = nums[i+1] - nums[i]
return res
func partition164(a []int, 1o, hi int) int {
pivot := a[hi]
i:= 1o - 1
for j := lo; j = hi {
return
p:= partition164(a, 1o, hi)
quicksort164(a, 1o, p-1)
quicksortl64(a, p+l, hi)
//解法二
func maximumGapl(nums []int) int {
if nums == ni1 11 1en(nums)  0 { // Go through al1 digits from LSB to MSB
count := make([]int, R)
---
## Page 304
for i := 0; i = 0; i--
tmp := count[(nums [i]/exp)%10]
tmp--
aux[tmp] = nums[i]
for i:=0;iC
26 -> Z
27 -> AA
28 -> AB
+ + 
Example 1:
Input: 1
Output:"A"
Example 2:
Input: 28
Output:“AB"
Example 3:
Input: 701
,人z.,:4ndno
题目大意
给定一个正整数，返回它在Excel表中相对应的列名称。
例如，
---
## Page 307
1 ->A
2 -> B
 Z
27 -> AA
28 -> AB
解题思路
·给定一个正整数，返回它在Excel表中的对应的列名称
·简单题。这一题就类似短除法的计算过程。以26进制的字母编码。按照短除法先除，然后余数逆
序输出即可。
代码
package leetcode
func convertToTitle(n int) string {
result := []byte{}
for n > 0{
result = append(result,'A'+byte((n-1)%26))
n = (n - 1) / 26
for i, j := 0,len(result)-1; i 1en(nums)/2 {
return v
return 0
---
## Page 309
171.ExcelSheet ColumnNumber
题目
Given a column title as appear in an Excel sheet, return its correspondling column number.
For example:
A -> 1
B -> 2
 26
AA -> 27
AB -> 28
+ + +
Example 1:
Input: "A"
output: 1
Example 2:
Input: "AB"
output: 28
Example 3:
Input:"zy"
Output:701
题目大意
给定一个Excel表格中的列名称，返回其相应的列序号。
解题思路
·给出Excel中列的名称，输出其对应的列序号。
·简单题。这一题是第168题的逆序题。按照26进制还原成十进制即可。
代码
---
## Page 310
package leetcode
func titleToNumber(s string) int {
val, res := 0, 0
for i := 0; i < len(s); i++ {
val = int(s[i] - *A' + 1)
res = res*26 + va1
return res
172.FactorialTrailingZeroes