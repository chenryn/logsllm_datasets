# 0x01 S7COMM协议

S7COMM，全称S7 Communication，是西门子专有协议，主要用于S7-300和S7-400系列的PLC之间进行编程、数据交换等操作。该协议被封装在TPKT和ISO-COTP协议中，本文将重点介绍S7Comm协议的部分内容。

## S7Comm协议结构
S7Comm协议由三部分组成：
1. **Header**
2. **Parameter**
3. **Data**

### Header
Header部分包含8个字段，具体如下：

| 字节范围 | 字段名称                     | 描述                                                                 |
|----------|------------------------------|----------------------------------------------------------------------|
| 0 - 1    | Protocol ID                  | 协议ID，通常为0x32                                                   |
| 1 - 2    | ROSCTR (PDU type)            | PDU类型，常见的值包括：                                             |
|          |                              | 0x01: JOB (作业请求，如读/写存储器、启动/停止设备等)                |
|          |                              | 0x02: ACK (确认响应，无数据)                                        |
|          |                              | 0x03: ACK_DATA (确认数据响应，响应JOB请求)                          |
|          |                              | 0x07: USERDATA (扩展协议，用于编程/调试、读取SZL等)                 |
| 2 - 4    | Redundancy Identification    | 冗余标识，通常为0x0000                                               |
| 4 - 6    | Protocol Data Unit Reference | 协议数据单元参考，随请求事件递增                                     |
| 6 - 8    | Parameter Length             | 参数总长度                                                           |
| 8 - 10   | Data Length                  | 数据长度，对于读取PLC内部数据的操作，此处为0x0000；其他功能则为Data部分的数据长度 |
| 10 - 12  | Error Class                  | 错误类型                                                             |
| 12 - 14  | Error Code                   | 错误码，具体含义参见附录一                                           |

### Parameter 和 Data
Parameter 和 Data 部分的具体内容取决于Header中的PDU类型和协议扩展（Userdata）的内容。以下是几种常见PDU类型的功能码及其简要说明：

| 功能码 (Hex) | 含义               |
|--------------|--------------------|
| 0x00         | CPU服务            |
| 0xf0         | 建立通信           |
| 0x04         | 读取变量           |
| 0x05         | 写入变量           |
| 0x1a         | 请求下载           |
| 0x1b         | 下载块             |
| 0x1c         | 下载结束           |
| 0x1d         | 开始上传           |
| 0x1e         | 上传               |
| 0x1f         | 上传结束           |
| 0x28         | 程序调用服务       |
| 0x29         | 关闭PLC            |

#### 建立通信 (0xf0)
建立通信消息在每个会话开始时发送，用于协商ACK队列的大小和最大PDU长度。双方声明支持的最大值，类似于计算机网络中的最大传输单元声明。ACK队列的长度决定了可以同时启动而不需要确认的并行作业数量。

**Parameter 结构：**
- 0 - 1 字节: Function (0xf0)
- 1 - 2 字节: Reserved (0x00)
- 2 - 4 字节: Max AmQ (calling)
- 4 - 6 字节: Max AmQ (called)
- 6 - 8 字节: PDU Length

#### 读取变量 (0x04)
读取变量操作通过指定变量的存储区域、地址（偏移量）及其大小或类型来执行。

**Parameter 结构：**
- 0 - 1 字节: Function (0x04)
- 1 - 2 字节: Item Count
- 2 - 14 字节: Item [1]
- 14 + 12 * n - 14 + 12 * (n+1) 字节: Item [n]

**Item 结构：**
- 0 - 1 字节: Variable Specification (0x12)
- 1 - 2 字节: Address Specification Length
- 2 - 3 字节: Syntax ID
- 3 - 4 字节: Transport Size
- 4 - 6 字节: Length
- 6 - 8 字节: DB Number
- 8 - 9 字节: Area
- 9 - 12 字节: Address

**示例：**
- 一个PDU类型为Job，功能码为Read Var的数据包，其主要内容为Item[1]读取DB1类型为BYTE的0x00000000地址的值。

**Ack_Data (Read Var) 结构：**
- 0 - 1 字节: Function (0x04)
- 1 - 2 字节: Item Count
- 2 - n 字节: Data (返回码和数据传输大小)

**Data 结构：**
- 0 - 1 字节: Return Code
- 1 - 2 字节: Transport Size

**返回码：**
| 返回码 (Hex) | 描述                           |
|--------------|--------------------------------|
| 0x00         | 未定义，预留                    |
| 0x01         | 硬件错误                       |
| 0x03         | 对象不允许访问                 |
| 0x05         | 无效地址                       |
| 0x06         | 数据类型不支持                 |
| 0x07         | 数据类型不一致                 |
| 0x0a         | 对象不存在                     |
| 0xff         | 成功                           |

以上是对S7Comm协议的基本介绍，更详细的协议扩展内容将在后续章节中讨论。