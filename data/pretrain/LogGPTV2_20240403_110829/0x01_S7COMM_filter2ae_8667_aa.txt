# 0x01 S7COMM协议
S7COMM 全称S7 Communication，是西门子专有协议，在西门子S7-300 /
400系列的PLC之间运行，用于PLC编程，PLC之间的数据交换。S7协议被封装在TPKT和ISO-COTP协议中，这里就不对 TPKT 和 ISO-COTP 进行介绍了，仅仅说一些关于 S7Comm 协议部分。  
S7Comm协议包含三部分：
  * Header
  * Parameter
  * Data  
Header 的内容包含8 个字段，如下图所示：
0 – 1 字节：
Protocol Id；即协议ID，通常为0x32；
1 – 2 字节：
ROSCTR：PDU type；即PDU的类型，一般有以下值：
  * 0x01：JOB  
即作业请求，如，读/写存储器，读/写块，启动/停止设备，设置通信
  * 0x02：ACK  
即确认相应，这是一个没有数据的简单确认
  * 0x03：ACK_DATA  
即确认数据相应，一般是响应JOB的请求
  * 0x07：USERDATA  
即扩展协议，其参数字段包含请求/响应ID，一般用于编程/调试、读取SZL等
2 – 4 字节：
Redundancy Identification (Reserved)，即冗余数据，通常为0x0000；
4 - 6 字节：
Protocol Data Unit Reference，即协议数据单元参考，它通过请求事件增加；
6 – 8 字节：
Parameter length，即参数的总长度
8 – 10 字节：
Data length，即数据长度，如果读取PLC内部数据，此处为0x0000；而对于其他功能，则为Data部分的数据长度；
10 – 12 字节：
Error class，即错误类型，其错误代码对应意思如下表：
Hex | Value | 描述  
---|---|---  
0x00 | No error | 没有错误  
0x81 | Application relationship | 应用关系  
0x82 | Object definition | 对象定义  
0x83 | No resources available | 没有可用资源  
0x84 | Error on service processing | 服务处理中错误  
0x85 | Error on supplies | 请求错误  
0x87 | Access error | 访问错误  
12 - 14 字节：
Error code，即错误码，其具体意思参考 **附录一：错误码具体含义**
以上为 header 的全部内容，而 S7comm 协议的Parameter 部分与Data 部分，则是根据header 中PDU
type的功能码的不同、协议扩展（Userdata）的内容不同而变得不同。这里仅对 PDU type
的不同功能码进行简单介绍，更为复杂的协议扩展内容，暂不做解释。
当PDU类型是JOB和ACK_DATA时，常见的功能码，如下表：
Hex | Value | 含义  
---|---|---  
0x00 | CPU services | CPU服务  
0xf0 | Setup communication | 建立通信  
0x04 | Read Var | 读取值  
0x05 | Write Var | 写入值  
0x1a | Request download | 请求下载  
0x1b | Download block | 下载块  
0x1c | Download ended | 下载结束  
0x1d | Start upload | 开始上传  
0x1e | Upload | 上传  
0x1f | End upload | 上传结束  
0x28 | PI-Service | 程序调用服务  
0x29 | PLC Stop | 关闭PLC  
以下内容会对这些功能码的结构进行简单介绍。
### Setup communication（0xf0）
Setup
communication会在每个会话开始时被发送，然后才可以交换任何其他消息，主要用于协商ACK队列的大小和最大PDU长度，双方声明它们的支持值（和计算机网络中的最大传送长度声明类似），ACK队列的长度决定了可以同时启动而不需要确认的并行作业的数量。PDU和队列长度字段都是大端。
Setup communication Parameter的结构如下：
0 – 1 字节：
    Function: Setup communication (0xf0)，即Parameter/data 的函数声明
1 – 2 字节：
    Reserved: 0x00，保留字节，一般为 0x00
2 – 4 字节：
    Max AmQ (parallel jobs with ack) calling
4 – 6 字节：
    Max AmQ (parallel jobs with ack) called
6 – 8 字节：
    PDU length，即协商PDU长度
如下图所示的是PDU 类型为 Job 和 Ack_Data的实例
上图中的协商结果为：ACK队列的大小为1；最大PDU长度为240。
### Read Var（0x04）
读数据操作，通过指定变量的存储区域，地址（偏移量）及其大小或类型来执行。  
Read Var 的Parameter的结构以及item的结构如下：
0 – 1 字节：
Function: Read Var (0x04)，即Parameter/data 的函数声明
1 - 2 字节：
    Item count，即 Item 的个数
2 – 14 字节：
    Item [1]，即第一个 Item
14+12 _n – 14+12_ (n+1)字节：
    Item[n]，即第 N 个 Item
一个item的结构如下：
0 – 1字节：
    Variable specification，即结构标识，通常为 0x12 ，代表变量规范
1 – 2 字节：
    Length of following address specification，即地址规范长度，主要是以此往后的地址长度
2 – 3 字节：
    Syntax Id，全称Syntax Ids of variable specification，即IDS 的地址规范的格式类型，用于确定寻址模式和其余项目结构的格式。常见的变量的结构标识如下表所示：
Hex | 值 | 描述  
---|---|---  
0x10 | S7ANY | Address data S7-Any pointer-like DB1.DBX10.2  
0x13 | PBC-R_ID | R_ID for PBC  
0x15 | ALARM_LOCKFREE | Alarm lock/free dataset  
0x16 | ALARM_IND | Alarm indication dataset  
0x19 | ALARM_ACK | Alarm acknowledge message dataset  
0x1a | ALARM_QUERYREQ | Alarm query request dataset  
0x1c | NOTIFY_IND | Notify indication dataset  
0xa2 | DRIVEESANY | seen on Drive ES Starter with routing over S7  
0xb2 | 1200SYM | Symbolic address mode of S7-1200  
0xb0 | DBREAD | Kind of DB block read, seen only at an S7-400  
0x82 | NCK | Sinumerik NCK HMI access  
3 – 4 字节：
    Transport size，即数据传输大小，常见值如下表：
Hex|值|描述  
| :----- | :----- | :----- |  
| 0| NULL |  
| 3 | BIT | bit access, len is in bits  
| 4 | BYTE/WORD/DWORD | byte/word/dword access, len is in bits  
| 5 | INTEGER | integer access, len is in bits  
| 6 | DINTEGER | integer access, len is in bytes  
| 7 | REAL | real access, len is in bytes  
| 9 | OCTET STRING | octet string, len is in bytes
4 – 6 字节：
    Length，即数据的长度
6 – 8 字节：
    DB number，即 DB 编号，如果访问的不是DB区域，此处为0x0000，如下图所示：
8 – 9 字节：
    Area，即区域，常见的区域如下表所示：
Hex | Value | 描述  
---|---|---  
0x03 | System info of 200 family | 200系列系统信息  
0x05 | System flags of 200 family | 200系列系统标志  
0x06 | Analog inputs of 200 family | 200系列模拟量输入  
0x07 | Analog outputs of 200 family | 200系列模拟量输出  
0x80 | Direct peripheral access (P) | 直接访问外设  
0x81 | Inputs (I) | 输入（I）  
0x82 | Outputs (Q) | 输出（Q）  
0x83 | Flags (M) | 内部标志（M）  
0x84 | Data blocks (DB) | 数据块（DB）  
0x85 | Instance data blocks (DI) | 背景数据块（DI）  
0x86 | Local data (L) | 局部变量（L）  
0x87 | Unknown yet (V) | 全局变量（V）  
0x1c | S7 counters (C) | S7计数器（C）  
0x1d | S7 timers (T) | S7定时器（T）  
0x1e | IEC counters (200 family) | IEC计数器（200系列）  
0x1f | IEC timers (200 family) | IEC定时器（200系列）  
9 – 12 字节：
    Address，即地址。
举个简单的例子可以说明下 Item 数据包的核心内容：
如上图所示，这是一个 PDU 类型为 Job，功能码为 Read Var的数据包，其主要内容为 Item[1]读取DB1类型为 BYTE
的0x00000000地址的值。
需要注意的是，PDU 类型为 Ack_Data，功能码为 Read Var的数据包，其Parameter结构和PDU 类型为 Job，功能码为 Read
Var的Parameter结构是不一样的。如下图所示：
可以看到，其Parameter只有function和item count两个字段，但其多了一部分内容，即 data，在 PDU 为 Job
的数据包中，是没有这个内容的。Data 的结构如下图所示：
0 – 1 字节：
    Return code，即返回码，响应报文中Data部分的常见返回码如下表：
Hex | 值 | 描述  
---|---|---  
0x00 | Reserved | 未定义，预留  
0x01 | Hardware error | 硬件错误  
0x03 | Accessing the object not allowed | 对象不允许访问  
0x05 | Invalid address | 无效地址，所需的地址超出此PLC的极限  
0x06 | Data type not supported | 数据类型不支持  
0x07 | Data type inconsistent | 日期类型不一致  
0x0a | Object does not exist | 对象不存在  
0xff | Success | 成功  
1 - 2 字节：
    Transport size，即数据传输大小，常见的 data 中数据传输大小的值如下表：
Hex | 值 | 描述  