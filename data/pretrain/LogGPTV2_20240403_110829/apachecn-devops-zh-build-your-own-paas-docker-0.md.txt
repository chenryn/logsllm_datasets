# 零、前言
Docker 是一个开源项目，具有高级 API，提供软件容器来独立运行进程。将应用打包到一个可以在任何 Linux 服务器(以及 OS X 和 Windows)上运行的容器中，有助于开发人员专注于开发应用，而不是服务器设置和其他 DevOps 操作。
# 这本书涵盖了什么
[第 1 章](1.html#page "Chapter 1. Installing Docker")、*安装 Docker*，带你通过 Docker 安装流程开始一个容器。
[第二章](2.html#page "Chapter 2. Exploring Docker")、*探索 Docker* ，让你深入了解 Docker 的工作原理和使用的术语，并介绍公共形象。
[第 3 章](3.html#page "Chapter 3. Creating Our First PaaS Image")*创建我们的第一个 PaaS 映像*，向您展示如何创建您自己的自定义 Docker 映像，该映像将成为您的 PaaS 的一部分。
[第 4 章](4.html#page "Chapter 4. Giving Containers Data and Parameters")、*给容器数据和参数*，教你数据存储的替代方案，以及如何传递参数到你的 PaaS 容器。
[第五章](5.html#page "Chapter 5. Connecting Containers")、*连接容器*，向大家展示了如何手动连接容器，以便形成一个完整的平台，并介绍了两个工具，让你对多容器平台有更多的控制。
[第 6 章](6.html#page "Chapter 6. Reverse Proxy Requests")、*反向代理请求*解释了这个问题，并提供了一个解决方案，即在同一台主机上有多个容器，在同一端口上应该可以到达多个主机。
[第 7 章](7.html#page "Chapter 7. Deployment on Our PaaS")*在我们的 PaaS* 上的部署，带您完成将代码部署到您的 PaaS 的过程。在这里，您将学习如何使用 Dokku 创建自己的迷你 Heroku。
[第八章](8.html#page "Chapter 8. What's Next?")*下一步是什么？*，介绍了一些处于早期阶段的项目，这些项目看起来对基于 Docker 的 PaaS 的未来充满希望。
# 这本书你需要什么
*   运行 OS X、Linux 或 Windows 的电脑/笔记本电脑
*   互联网连接
# 这本书是给谁的
这本书是为那些想学习如何充分利用将服务分离成模块容器并将其连接起来形成一个完整平台的人准备的。你可能听说过 Docker，但从未安装或使用过它；或者，您可能已经安装了它并运行了一个完整的栈容器，而不是在连接的模块容器中分离服务。无论是哪种情况，这本书都将为您提供运行您自己的 PaaS 所需的所有见解和知识。
# 惯例
在这本书里，你会发现许多区分不同种类信息的文本样式。以下是这些风格的一些例子和对它们的意义的解释。
文本中的码字、数据库表名、文件夹名、文件名、文件扩展名、路径名、伪 URL、用户输入和 Twitter 句柄如下所示:“下载了一些相关的映像后，当我们执行`docker.ps`时，应该可以看到我们正在运行的容器。”
代码块设置如下:
```
Hello
First edit!
```
任何命令行输入或输出都编写如下:
```
curl -sSL https://get.docker.com/ubuntu/ | sudo sh
```
**新名词**和**重要词汇**以粗体显示。你在屏幕上看到的单词，例如在菜单或对话框中看到的单词，会出现在这样的文本中:“打开 **Finder** 窗口，导航到你的`Applications`文件夹；找到**boot 2 locker**并双击它。”
### 注
警告或重要提示会出现在这样的框中。
### 类型
提示和技巧是这样出现的。
# 读者反馈
我们随时欢迎读者的反馈。让我们知道你对这本书的看法——你喜欢或不喜欢什么。读者反馈对我们来说很重要，因为它有助于我们开发出你真正能从中获益的标题。
要给我们发送一般反馈，只需发送电子邮件``，并在您的邮件主题中提及书名。
如果你对某个主题有专业知识，并且对写作或投稿感兴趣，请参见我们位于[www.packtpub.com/authors](http://www.packtpub.com/authors)的作者指南。
# 客户支持
现在，您已经自豪地拥有了一本书，我们有许多东西可以帮助您从购买中获得最大收益。
## 下载示例代码
您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的账户下载您购买的所有 Packt Publishing 书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
## 勘误表
尽管我们尽了最大努力来确保我们内容的准确性，但错误还是会发生。如果你在我们的某本书里发现了错误——可能是文本或代码中的错误——如果你能向我们报告，我们将不胜感激。通过这样做，你可以让其他读者免受挫折，并帮助我们改进这本书的后续版本。如果您发现任何勘误表，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误表提交表**链接，并输入您的勘误表的详细信息。一旦您的勘误表得到验证，您的提交将被接受，勘误表将上传到我们的网站或添加到该标题勘误表部分下的任何现有勘误表列表中。
要查看之前提交的勘误表，请前往[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)并在搜索栏中输入图书名称。所需信息将出现在**勘误表**部分。
## 盗版
互联网上版权材料的盗版是所有媒体的一个持续问题。在 Packt，我们非常重视版权和许可证的保护。如果您在互联网上遇到任何形式的我们作品的非法拷贝，请立即向我们提供位置地址或网站名称，以便我们寻求补救。
请通过``联系我们，获取疑似盗版资料的链接。
我们感谢您在保护我们的作者方面的帮助，以及我们为您带来有价值内容的能力。
## 问题
如果您对本书的任何方面有问题，可以在``联系我们，我们将尽最大努力解决问题。