global data model, based on the semantic data models, are formally specified using
the business process execution language for Web services (BPEL4WS) (BPEL4WS,
2003) and semantic data models are interfaced with Web services (Chinnici, Gudgin,
Moreau, & Weerawarana, 2003). BPEL4WS provides a language for the formal
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission
of Idea Group Inc. is prohibited.
0 Cardoso
Figure 7. Integration with business processes
Acc ao tm ionmod Ontology Activity Shopping
5 Hotel Be kd f& aB strea D Pay cn ka am gi ec Sport Fishing
... Re ts ioe nrva Flight Shared Global Data Model
Data consolidation - Get Get Normalize
> Shopping Golf Dinner
4 FisG he int g Model WC eh ae thck e r Get Model Model
Model Model Movie Data Consolidation
Model
Semantic Semantic Semantic Semantic Layer
Data Model Data Model Data Model
3 Data Model Mapping
Extractor/Transformation/Wrapper Syntactic Layer
specification of (business) processes by defining an integration model that facili-
tates the development of automated process integration in both intra-organization
and B2B settings.
At runtime, as the processes are executed, their Web services are invoked. Web
services present an efficient solution to reduce integration efforts and to quicken the
creation of interfaces that allow for communication with semantic data models. In
dynamic packaging applications, Web service-based solutions have the following
advantages:
• loosely coupled integration of tourism information systems leading to reduced
development costs and more flexibility, and
• reduced dynamic packaging applications’ complexity due to the use of stan-
dardized interfaces.
Web services are easier to design, implement, and deploy than any other tradi-
tional distributed technology, such as RPC and CORBA. At the foundation of Web
services architecture are software standards and communication protocols such
as XML; Simple Object Access Protocol (SOAP) (World Wide Web Consortium,
2002); Hyper Text Transfer Protocol (HTTP); Universal Description, Discovery,
and Integration (UDDI) (UDDI, 2002); and Web Services Description Language
(WSDL) (Christensen, Curbera, Meredith, & Weerawarana, 2001), which allow
information to be accessed and exchanged easily among different programs. These
technologies allow applications to communicate with each other regardless of the
programming languages they were written in or the platform they were developed
for. Web services are not used to build monolithic systems; they are a set of tech-
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission of
Idea Group Inc. is prohibited.
Developing Dynamic Packaging Applications 
nologies with the objective of putting together existing applications to create newly
distributed systems.
Shared Global Data Model
In order to develop efficient dynamic packaging applications, we believe that it is
not required to adopt a common hardware platform or common database vendor.
What is needed is a “shared global data model across participating tourism infor-
mation systems.” Requiring the organizations of the tourism industry to have a
common hardware platform or database is not realistic. Figure 9 shows the various
approaches to data integration.
The use of a shared global data model is a cornerstone of the design of many ap-
plications that require data integration. It brings integration costs and efforts down
to a minimum. With a shared global data model a dynamic packaging application
can merge all the information made available by CRS, GDS, HDS, DMS, and travel
agents’ Web sites, thus allowing cross-departmental and cross-organizational inte-
gration. Our shared global data model is represented with an ontology providing a
common understanding of tourism data and information (Figure 9).
Figure 8. Tight and loose coupling approaches to data integration (Robbins,
1996)
Loose Coupling 1. single organizational entity overseeing information
resources
2. adoption of common DBMSsat participating sites
3. shared data model across participating sites
4. common semantics for data publishing
Tightly Coupled 5. common syntax for data publishing
Figure 9. Shared global data model defined using the e-tourism ontology
Acc ao tm ionmod Ontology Activity Shopping
5 Hotel Be kd f& aB strea D Pay cn ka am gi ec Sport Fishing
... Re ts ioe nrva Flight Shared Global Data Model
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission
of Idea Group Inc. is prohibited.
 Cardoso
In the following sections we discuss the semantic model and semantic language
selected to represent our shared global data model, the problems that semantic data
sources face when integrated, and the steps involved in the development of our e-
tourism ontology.
Shared Common Vocabulary
A shared global data model is not useful for data integration unless the sources
being integrated share common vocabulary elements representing some shared
conceptual model. Depending on the approach, different data models can be used
to add semantics to terms—such as controlled vocabularies, taxonomies, thesaurus,
and ontologies—and different degrees of semantics can be achieved.
Controlled vocabularies are at the weaker end of the semantic spectrum. A con-
trolled vocabulary is a list of terms that have been enumerated explicitly with
an unambiguous and non-redundant definition. A taxonomy is a subject-based
classification that arranges the terms of a controlled vocabulary into a hierarchy
without doing anything further. A thesaurus is a networked collection of controlled
vocabulary terms with conceptual relationships between terms. It is an extension of
a taxonomy by allowing terms to be arranged in a hierarchy and also allowing other
statements and relationships to be established between terms, such as equivalence,
homographic, hierarchical, and associative (National Information and Standards
Organization, 2005).
Ontologies are similar to taxonomies but use richer semantic relationships among
terms and attributes, as well as strict rules about how to specify terms and relation-
ships. Compared to the other approaches, ontologies provide a higher degree of
expressiveness. Furthermore, expressive standards have already been developed (for
example, OWL [World Wide Web Consortium, 2004]) to construct ontologies and
are being used in practical applications. For these reasons, we have selected ontolo-
gies for our dynamic packaging architecture to explicitly connect data from tourism
information systems and to allow machine-processable interpretation of data.
Semantic Integration
To provide a dynamic packaging application for integrating disparate heterogeneous
data sources, a common modeling language is needed to describe data, informa-
tion, and knowledge. Since computers have no built-in mechanism for associating
semantics to words and symbols, an ontology is required to allow dynamic pack-
aging applications to determine semantically equivalent expressions and concepts
residing in HAD tourism data sources. Agreeing on the terminology and sharing
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission of
Idea Group Inc. is prohibited.
Developing Dynamic Packaging Applications 
the same ontology for each tourism domain is a pre-condition for data sharing and
integration (Wiederhold, 1994).
After studying several online travel, leisure, and transportation sites, we concluded
that there is a lack of agreement on conventions in the tourism industry. The follow-
ing are some of the differences found among several data sources:
• Web sites written in English use syntactically different words than Web sites
written in Portuguese, but with the same semantics. For example, tennis/tenis,
walking/caminhadas, and time/hora.
• The price of tourism products and services are expressed in many different
currencies (euros, dollars, British pounds, etc.)
• The time specifications do not follow a standard format. Some Web sites state
time in hours, others in minutes, others in hours and minutes, and so forth.
• The way of expressing time also varies. For example, 1 hour and 30 minutes,
1h and 30 min, 1:30 h, 90 min, one hour and thirty minutes, ninety minutes,
1:30 pm, and so forth.
• The keywords used to specify a date are not expressed in a normalized way.
Some Web sites express a day of the week using the words Monday, Tues-
day,…, Sunday, while other use the abbreviations M, T, …, Su.
• The temperature unit scale is not standard. It can be expressed either in degrees
centigrade or in degrees Celsius.
• Numerical values are not expressed in a normalized way. They can be expressed
with numbers: 1, 2, and 3 or with words such as one, two, and three.
One big challenge for dynamic packaging applications is to find a solution to cope
with the nonstandardized way of describing tourism products and services. There
are no conventions or common criteria to express transportation vehicles, leisure
activities, and weather conditions when planning for a vacation; several ways were
found among all the tourism data sources consulted. Our objective is to find a solu-
tion to surpass this lack of standardization by automatically understanding the dif-
ferent ways of expressing tourism products and services. We argue that semantics
and ontologies are good candidates for dynamic packaging information systems
since they allow us to associate metadata to data sources making the data machine
understandable and processable.
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission
of Idea Group Inc. is prohibited.
 Cardoso
E-Tourism Ontologies
Ontologies are the key elements enabling the shift from a purely syntactic to a se-
mantic integration and interoperability. An ontology can be defined as the explicit
and formal descriptions of concepts and their relationships that exist in a certain
universe of discourse. When a particular user group commits to an ontology, it
has been proven to be a solution for data integration because it offers a shared,
organized, and common understanding of data which allows for a better integra-
tion, communication, and interoperability of inter- and intra-organizational tourism
information systems.
Ontologies describe the things that exist in a domain. This includes properties, concepts
and rules, and how they relate to each other. For dynamic packaging applications,
an ontology with the appropriate tourism concepts needs to be built for identifying
destinations, activities, weather forecasts, places, dates, and relationships. We iden-
tify the need for two distinct types of ontologies: local ontologies and shared global
ontologies. Local ontologies define the semantics of specific tourism data source
domains, such as hotels, car rentals, and airlines. In addition, we also consider the
notion of shared global ontologies, which are common semantics shared between
all the tourism domains and tourism information systems, that is, these ontologies
model the information that resides in many separate domains.
Our initial tasks were to select a semantic language to model our ontologies (local
and shared global ontologies), select an ontology editor to construct, browse, and
manage the ontologies under development, and adopt a methodology to develop
the ontologies. These tasks are described in the following sections.
Ontology Language Selection
Several languages have been developed to support the Semantic Web. These structured
languages can carry meaning besides giving structure to data. Some languages are
more directed to providing meaning to data, while others go further and can make
assertions and infer knowledge.
In this area, the major developments are being made by an international Semantic
Web research activity, spearheaded by the World Wide Web Consortium (W3C)
(www.w3.org) and the Defense Advanced Projects Research Agency (DARPA)
Agent Markup Language (DAML, 2005) program. The newest languages are de-
veloped based on the progress from previous ones, evolving and improving their
characteristics. The most relevant semantic languages that need to be considered
for developing ontologies for e-tourism are the following:
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission of
Idea Group Inc. is prohibited.
Developing Dynamic Packaging Applications 
• RDF. RDF (W3C, 2005) and RDF schema (RDFS) became a W3C recom-
mendation in 1999. It is a general framework to describe the contents of Inter-
net resources. RDFs can be used directly to describe an ontology by making
objects, classes, and properties available to programmers.
• DAML+OIL. The DARPA agent markup language + ontology inference layer
(DAML+OIL) (DAML, 2005) is an extension of XML and RDF. DAML+OIL
aims at complete support for defining ontologies. It provides rich constructors
for forming complex class expressions and axioms for enabling reasoning and
inference on ontology data.
• OWL. OWL (W3C, 2004) is a semantic markup language for publishing and
sharing ontologies on the Web. It is the newest Semantic Web standard and
became a W3C recommendation in February 2004.
From the different Semantic Web languages available (e.g., RDF, RDFS, DAML+OIL,
and OWL) we have selected OWL to develop our e-tourism ontologies. This decision
was based on two reasons. Firstly, OWL is a standard developed as a vocabulary
extension of RDF, RDFS, and is derived from DAML+OIL. The standardization of
OWL by the W3C allows semantics to move out of the research and development
community and into broad-based, commercial-grade platforms for building highly
distributed and cross-enterprise applications. Secondly, OWL provides a sound
theory of meaning from which to build highly expressive data models. It expresses
and includes a large set of primitives that are indispensable to building expres-
sive ontologies. Primitives include cardinality constraints, class expressions, data
types, enumerations, equivalence, and inheritance. OWL language is particularly
well suited to formalize ontologies for the tourism industry by defining classes and
properties of those classes and defining individuals and asserting properties about
them. Furthermore, it is possible to conduct advanced knowledge inference, com-
pared to other approaches.
Editor Selection
Ontology editors are tools that enable viewing, browsing, codifying, and modifying
ontologies. Choosing the right editor for our project can become a daunting task
since many choices exist and an appropriate tool selection depends on the level of
user experience, the languages supported, the architecture, and the scalability.
Examples of popular editors include OilEd, OntoEdit (n.d.), WebODE, and Protégé
(n.d.). OntoEdit is an ontology engineering environment supporting the develop-
ment and maintenance of ontologies using graphical means. The editor supports
representations of F-Logic, RDF Schema, and OIL. OilEd (Bechhofer, Horrocks,
Goble, & Stevens, 2001) is an ontology editor allowing the user to build ontologies
Copyright © 2007, Idea Group Inc. Copying or distributing in print or electronic forms without written permission
of Idea Group Inc. is prohibited.
 Cardoso
using DAML+OIL. Unfortunately, the current version of OilEd does not provide
a full ontology development environment. It does not support the development of
large-scale ontologies, versioning, argumentation, and many other activities that are
involved in ontology construction. WebODE (Arpírez, Corcho, Fernández-López, &
Gómez-Pérez, 2003) is a scalable workbench for ontological engineering that pro-
vides services for editing, browsing, importing, and exporting ontologies to classical
and Semantic Web languages. Protégé (n.d.) is an extensible, platform-independent
environment for creating and editing ontologies and knowledge bases. It is a tool
which allows users to construct domain ontologies, having various storage formats
such as OWL, RDF, and XML.
After conducting an analysis of ontology editors, we have selected Protégé (n.d.)
to construct our ontologies for the tourism industry for four main reasons: (1) it
includes implementations for the major computing platforms (such as Mac OS X,