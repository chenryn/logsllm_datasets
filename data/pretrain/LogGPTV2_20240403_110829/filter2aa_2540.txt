GSM: WE CAN HEAR EVERYONE NOW!
DEFCON 2019
Campbell Murray, Eoin Buckley
James Kulikowski, Bartek Piekarski
BlackBerry
© 2018 BlackBerry. All Rights Reserved.
2
AGENDA
• Slides detail a key vulnerability in GSM.
• Highlights derivation of indicator to exploit this vulnerability.
• Section 1: Concept Overview
• Section 2: Attack Mechanics
• Section 3: Demonstration
• Section 4: Cellular Security Discussion
• Section 5: Q & A
Concept Overview
© 2018 BlackBerry. All Rights Reserved.
4
Concept Overview
• GSM background
• Concept for GSM (digital) started in the late 1980s
• Major improvement over AMPS (analogue)
• GSM Security has several design issues
• Support for key sizes <= 64 bits
• Encrypted data contains redundancy
• Error control coding before ciphering
© 2018 BlackBerry. All Rights Reserved.
5
Concept Overview
Message
Error Control
Codeword
Cipherstream
Cipher
A5/1
Ciphertext
• Typical GSM Channel Structure
•
Encryption with A5/1
•
Key maximum 64 bits length
•
Convolutional error control code
•
Intended to combat noise from wireless channel
•
Attack uses code to identify cipherstream “noise”
Convolutional 
code
© 2018 BlackBerry. All Rights Reserved.
6
Concept Overview
Message
Error Control
Codeword
Cipherstream
Cipher
A5/1
Ciphertext
• High level view of attack
•
Capture GSM frame
•
Compute a cipherstream/key indicator 
•
Use convolutional code parameters
•
Use indicator with a Rainbow table to identify ciphering key
•
Use indicator as a fingerprint for ciphering key
Convolutional 
code
Attack Mechanics
© 2018 BlackBerry. All Rights Reserved.
8
Attack Mechanics
Message
(184 bits)
Conv. Codeword
(456 bits)
Cipherstream (456 bits)
Cipher
A5/1
Ciphertext (456 bits)
• Demonstration uses SACCH control channel
•
Compromise of SACCH also compromises voice (same key)
•
Works for any SACCH message
•
Indicator/fingerprint is independent of the message
•
Knowledge of plaintext is not needed
Convolutional 
code
SACCH
FIRE
code
(224 bits)
© 2018 BlackBerry. All Rights Reserved.
9
Attack Mechanics
•
Indicator computation:                 Deconvolution   xor
Input m
(224 bits)
Conv.
Code
Encrypted
Conv. stream c1
(228 bits)
Cipher
A5/x
g1
g2
Encrypted
Conv. stream c2
(228 bits)
Deconvolve 
stream c1 & g1
Deconvolve 
stream c2 & g2
xor streams 
q1 & q2
Stream q1
(224 bits) 
Stream q2
(224 bits) 
Stream q1 xor q2
(224 bits) 
1 0 0 1 1 0 0 0 1 ….
1 0 1 0 1 1 0 1 1 ….
Conv. Code Parameters
•
g1: 1 0 0 1 1
•
g2: 1 1 0 1 1
Indicator
© 2018 BlackBerry. All Rights Reserved.
10
10
Attack Mechanics
• The indicator “q1 xor q2”is
•
Computed using the full convolutional codeword
•
Independent of SACCH message
•
Fully determined by 1)The cipher stream and 2) Convolutional code
•
224 bits long
•
More than sufficient to identify a 64 bit key
•
Rainbow table for A5/1
•
Expected storage requirement: 1.5 Tera bytes
•
Based on Rainbow table created by Karsten Nohl in DEFCON 2010
Demonstration
Cellular Security Discussion
© 2018 BlackBerry. All Rights Reserved.
13
13
Cellular Security
• Indicator attack made possible in GSM:
•
Small key size (e.g. At most 64 bits for A5/1)
•
Ciphering after error control code
• Additional attacks on GSM include:
•
Karsten Nohl (DEFCON 2010) “Attacking phone privacy”
•
Barkan et al. 2006 “Instant Ciphertext-only Cryptanalysis of GSM encrypted 
communication”
•
False Basestation attacks
© 2018 BlackBerry. All Rights Reserved.
14
14
Cellular Security
• Beyond GSM into 3G-to-5G:
•
Reduced security risk
•
Minimum encrypting key size of 128 bits
•
Error control coding applied after encryption not before
• Cellular industry actively studying solutions for GSM security
•
3GPP TR 33.809 v0.5.0 “Study on 5G Security Enhancements against False 
Basestations”
Q&A
Thank You
Appendix
© 2018 BlackBerry. All Rights Reserved.
17
17
Appendix
Consider the addition of the A5/x cipherstream to the codeword
 Separate cipherstream into portion xor’d for conv code output 1 & 2
 Let output 1 cipherstream be: s1
 Let output 2 cipherstream be: s2
Denote the resulting ciphertext portions as:
 c1 = s1 + p1 = s1 + m*g1
 c2 = s1 + p2 = s2 + m*g2
Message
m
p1
Conv.
Code
(1st half of A5/x output)
s1
c1
s2
(2nd half of A5/x output)
p2
c2
© 2018 BlackBerry. All Rights Reserved.
18
18
Appendix
The key to the attack is that the ciphertext portions can also be divided by g1 & g2 respectively for 
quotient q1 & q2
 C1 = s1 + p1 = s1 + m*g1 = (q1*g1 + r1) + m*g1
 C2 = s2 + p2 = s2 + m*g2 = (q2*g2 + r2) + m*g2
Rearranging c1&c2 we can now write
 C1 = (q1*g1 + r1) + m*g1 = (q1 + m)*g1 + r1
 C2 = (q2*g2 + r2) + m*g2 = (q2 + m)*g2 + r2
By deconvolving the ciphertext c1&c2 by g1&g2 respectively we can product the quotients
 (q1+m)
 (q2+m)
Adding these quotients generates (q1+q2) which is independent of the “m” :
 (q1+m) + (q2+m) = (q1+q2)