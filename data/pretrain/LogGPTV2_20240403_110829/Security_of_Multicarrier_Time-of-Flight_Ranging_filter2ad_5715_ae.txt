Ck(bk ⊕ bk +ns/2)e
c2 + 2
This allows, in turn, to recover the sequence Ck(bk ⊕ bk +ns/4)
This procedure can be invoked recursively until the sequence
consists of four samples only. The remaining uncertainty is only
given by the center pulse (i.e., 1,-1,1,-1 vs. -1,1,-1,1) (single equiva-
lence is leaked by DC sample), which we exclude from the proof.
Hence, under the last recursion step we have ns/2l = 2 ⇔ l = ns/4.
This means, we need in total ns/4 + 1 samples for ideal detection.
B DETERMINISTIC BPSK LATE COMMIT
Proof.Consider a split of the frequency-domain symbol C into its
even and odd contributions, i.e.,
The corresponding time-domain contributions are given by the
inverse Fourier transform:
(E)
C
k
(O)
k
C
(cid:66) C2k , k = 0, ..., ns/2 − 1,
(cid:66) C2k +1, k = 0, ..., ns/2 − 1.
c(E) = F −1(cid:110)
c(O) = F −1(cid:110)
C(E)(cid:111)
C(O)(cid:111)
From the definition of the DFT, we know that
(E)
n + e
− 2π i
ns n · c
(O)
n , n = 0, ..., ns/2 − 1.
cn = c
Hence, the late-commit condition, i.e.,
cn = 0, for n = 0, ..., ns/2 − 1,
imposes a clear relationship between even and odd frequency-
domain samples (as given by the trigonometric interpolation of
c1 = 2
2π ik/ns , ak ∈ {0, 1}
ak e
=
In order to understand whether c1 uniquely represents the se-
quence a, we consider the difference between two of these polyno-
mials for different sequences a(1) and a(2):
ns−1
k =0
(1)
k e
a
2π ik/ns − ns−1
ns−1
=
k =0
(2)
k e
a
2π ik/ns , a
(1)
k , a
(2)
k ∈ {0, 1}
k =0
2π ik/ns , εk ∈ {0, 1, 2}
εk e
We assume the sequences a(1) and a(2) not to be identical, there-
fore there exists a k ∈ {0, ..., ns − 1}, for which εk > 0. Therefore,
this is a sum over up to ns/2 of the ns-th roots of unity, with
εk εk +ns/2 = 0. For the sake of contradiction, we consider the above
expression to be zero, i.e.,
ns−1
k =0
2π ilk/ns = 0, εk ∈ {0, 1, 2}.
εk e
q−1
q
p−1
p
and 1 + ζq + ... + ζ
A result from algebraic number theory reveals interesting properties
of such vanishing sums of roots of unity [16]. Corollary 3.4 in [16]
states that if m = paqb, where p, q are primes, then, up to a rotation,
the only minimal vanishing sums of m-th roots of unity are 1 +
(where ζp denotes a p-th
ζp + ... + ζ
primitive root of unity), and rotations thereof. A minimal vanishing
sum is defined as a sum of roots of unity that amounts to zero, yet
contains no sub-sum that is zero. In our case, due to the FFT size
being a power of two, we have p = q = 2, meaning the only minimal
vanishing sum is given by one plus the 2nd primitive root of unity
(and rotations thereof). This means, 1− 1, and rotations thereof, i.e.,
eρi + e(ρ+π)i for ρ ∈ [0, π). However, since we have εk εk +ns/2 = 0,
the expression above does a) not contain any minimal vanishing
sum nor b) constitute a minimal vanishing sum, which proves the
contradiction.
In consequence, every left-right antivalence in the bit sequence
results in a unique contribution to every odd time-domain sample.
Left-right equialence, on the other hand, cancels out the contribu-
tions. This means, the odd sample does not convey any information
898Security of Multicarrier Time-of-Flight Ranging
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
(1)
(2)
(3)
For α > 0, this is equivalent to
(O)
0
(E)
0 − c
c
!
>
c
(E)
0 − 1
α
,
which holds iff c is not a pulse (since 1 is maximum DC), and the
condition is not satisfied iff both even and odd frequency samples
have full DC, which corresponds to the spectral profile of a pulse.
C 4-QAM OPTIMIZED LATE COMMIT
We define our error function as
(cid:17)
(cid:16)
(cid:16)
(cid:17)
Cn, Clc
n
+
Cn, Clc
n
,
λ
C, Clc(cid:17)
(cid:17)
(cid:17)
=
=
=
λR
n=0
ns −1
0,
(cid:16)R (Cn) − R(cid:16)
0,
(cid:16)I (Cn) − I(cid:16)
Cn, Clc
n
Cn, Clc
n
(cid:17)(cid:17)2
(cid:17)(cid:17)2
,
,
Clc
n
Clc
n
where
and
λR
λI
(cid:16)
(cid:16)
λI
n=0
(cid:16)
ns −1
|R (Cn) − R(cid:16)
|I (Cn) − I(cid:16)
otherwise
otherwise
(cid:17) | ≤ 1
(cid:17) | ≤ 1
Clc
n
Clc
n
every second sample), respectively, its individual time-domain con-
tributions, i.e.,
(E)
n = −e
c
− 2π i
ns n · c
(O)
n = −дn · c
(O)
n ,
where we define the half-period complex exponential g as
− 2π i
ns n
, n = 0, ..., ns/2 − 1.
дn = e
Taking the Fourier transform of Equation 1 yields
C(E) = − 1
G ∗ C(O)
,
ns
ns/2−1
n=0
where G is defined as
ns/2−1
n=0
Gk =
− i2π
ns n
e
e
− i2π
ns /2 nk =
− i2π
ns n(1−2k)
e
and can be considered a frequency-domain ’filter’ that corre-
sponds to said time-domain relationship, representing the resulting
dispersion profile through inter-carrier interference. Importantly,
the real part of Equation 3 constantly evaluates to 1, due to circular
symmetry.
In the following, we treat the late-commit signal as a sum of
the perfect odd and even contributions separately. Without loss of
generality, we assume the odd contributions as ideal.
Only the real part of Equation 2 matters for BPSK symbols, for
which the circular convolution evaluates to
(cid:110) ˜C(E)(cid:111)
R
= R {G} ∗ C(O) = − 1
ns
ns/2−1
k =0
(O)
k
.
C
This follows from odd contributions being ideal, i.e. real values
+1,-1 only, which means that only the real part of G matters.
Inter-carrier interference terms are given by respective first time-
domain samples, for contribution with odd samples ideal:
(E)(cid:111)
(O)(cid:111)
(cid:110) ˜Ck
(cid:110) ˜Ck
R
R
= −c
(O)
0
,
= −c
(E)
0
and for the contribution with even samples ideal:
If we now assume the two contributions are added, we can imag-
ine the value of every bit to contain an ideal contribution and an
interference term. Correct detection is achieved if no bit is flipped
due to the interference term. We, therefore, need to limit the inter-
carrier-interference to be less than the legitimate signal value. Con-
(E)
sider the superposition, where c
,
0
for α ∈ (0, 1). This corresponds to a dampening of the first signal
sample sent by the attacker by real-valued constant α. The resulting
interference term will amount to α · c
. The amplitude will be
less affected, i.e., 1 ± (1 − α) · c
. Without loss of generality (due
to symmetry), we assume the bit to be 1. For correct detection of
each bit, we need to have
= α · c
= α · c
and c
(O)
0
(O)
0
(O)
0
(E)
0
(E)
0
′
′
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
1 − (1 − α) · c
(E)
0
0(cid:124)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:125)
(O)
− α · c
Amplitude
ICI
!
> 0
899