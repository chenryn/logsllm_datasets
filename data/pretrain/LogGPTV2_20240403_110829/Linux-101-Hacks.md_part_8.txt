# httpd –M
Loaded Modules:
core_module (static)
mpm_prefork_module (static)
http_module (static)
so_module (static)
auth_basic_module (shared)
auth_digest_module (shared)
authn_file_module (shared)
authn_alias_module (shared)
Syntax OK
100
Linux 101 Hacks www.thegeekstuff.com
Hack 80. Show all accepted directives inside
httpd.conf
This is like an extended help for httpd, which will display all the httpd.conf
directives and the places where they are valid. For a specific directive, it
tells all the possible values and where it can be used inside the httpd.conf.
This can be very helpful, when you want to quickly know about a particular
Apache directive.
# httpd –L
HostnameLookups (core.c)
“on” to enable, “off” to disable reverse DNS lookups,
or “double” to enable double-reverse DNS lookups
Allowed in *.conf anywhere
ServerLimit (prefork.c)
Maximum value of MaxClients for this run of Apache
Allowed in *.conf only outside ,  or
KeepAlive (http_core.c)
Whether persistent connections should be On or Off
Allowed in *.conf only outside ,  or
LoadModule (mod_so.c)
a module name and the name of a shared object file to
load it from
Allowed in *.conf only outside ,  or
Hack 81. Validate the httpd.conf after making
changes
Use option -t to validate whether there are any issues with a specific Apache
configuration file. In the example shown below, it displays that there is a
101
Linux 101 Hacks www.thegeekstuff.com
problem at line 148 in the httpd.conf.debug. mod_auth_basicso is missing a .
(period) before the so.
# httpd -t -f conf/httpd.conf.debug
httpd: Syntax error on line 148 of
/etc/httpd/conf/httpd.conf.debug:
Cannot load /etc/httpd/modules/mod_auth_basicso into
server:
/etc/httpd/modules/mod_auth_basicso: cannot open shared
object file: No such file or directory
Once you fix the issue, it will display Syntax OK.
# httpd -t -f conf/httpd.conf.debug
Syntax OK
Hack 82. Display the httpd build parameters
Use option -V (upper-case V), to display Apache version number and all the
parameters that are used while building the Apache.
# httpd –V
Server version: Apache/2.2.9 (Unix)
Server built: Jul 14 2008 15:36:56
Server’s Module Magic Number: 20051115:15
Server loaded: APR 1.2.12, APR-Util 1.2.12
Compiled using: APR 1.2.12, APR-Util 1.2.12
Architecture: 32-bit
Server MPM: Prefork
threaded: no
forked: yes (variable process count)
Server compiled with….
-D APACHE_MPM_DIR=”server/mpm/prefork”
-D APR_HAS_SENDFILE
-D APR_HAS_MMAP
102
Linux 101 Hacks www.thegeekstuff.com
-D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)
-D APR_USE_SYSVSEM_SERIALIZE
-D APR_USE_PTHREAD_SERIALIZE
-D SINGLE_LISTEN_UNSERIALIZED_ACCEPT
-D APR_HAS_OTHER_CHILD
-D AP_HAVE_RELIABLE_PIPED_LOGS
-D DYNAMIC_MODULE_LIMIT=128
-D HTTPD_ROOT=”/etc/httpd”
-D SUEXEC_BIN=”/usr/sbin/suexec”
-D DEFAULT_PIDLOG=”logs/httpd.pid”
-D DEFAULT_SCOREBOARD=”logs/apache_runtime_status”
-D DEFAULT_LOCKFILE=”logs/accept.lock”
-D DEFAULT_ERRORLOG=”logs/error_log”
-D AP_TYPES_CONFIG_FILE=”conf/mime.types”
-D SERVER_CONFIG_FILE=”conf/httpd.conf”
If you want display only the Apache version number, use the option -v (lower-
case v) as shown below.
# httpd -v
Server version: Apache/2.2.9 (Unix)
Server built: Jul 14 2008 15:36:56
Hack 83. Load a specific module only on demand
Sometimes you may not want to load all the modules in the Apache. For e.g.
You may want to load ldap related modules to Apache, only when you are
testing LDAP. This can be achieved as shown below.
Modify the httpd.conf and add IfDefine directive called load-ldap (you can
name this anything you want).
LoadModule ldap_module modules/mod_ldap.so
LoadModule authnz_ldap_module
103
Linux 101 Hacks www.thegeekstuff.com
modules/mod_authnz_ldap.so
When you are testing ldap and would like to Load the ldap related modules,
pass the load-ldap to Option -D, as shown below:
# httpd -k start -e debug -Dload-ldap -f
/etc/httpd/conf/httpd.conf.debug
[Sun Aug 17 14:14:58 2008] [debug] mod_so.c(246):
loaded module ldap_module
[Sun Aug 17 14:14:58 2008] [debug] mod_so.c(246):
loaded module authnz_ldap_module
[Note: Pass -Dload-ldap, to load the ldap modules into
Apache]
# apachectl start
[Note: Start the Apache normally, if you don't want to
load the ldap modules.
104
Linux 101 Hacks www.thegeekstuff.com
Chapter 11: Bash Scripting
Hack 84. Execution Sequence of .bash_* files
What is the sequence in which the following files are executed?
o /etc/profile
o ~/.bash_profile
o ~/.bashrc
o ~/.bash_login
o ~/.profile
o ~/.bash_logout
Execution sequence for interactive login shell
Following pseudo code explains the sequence of execution of these files.
execute /etc/profile
IF ~/.bash_profile exists THEN
execute ~/.bash_profile
ELSE
IF ~/.bash_login exist THEN
execute ~/.bash_login
ELSE
IF ~/.profile exist THEN
execute ~/.profile
END IF
END IF
END IF
105
Linux 101 Hacks www.thegeekstuff.com
When you logout of the interactive shell, following is the sequence of
execution:
IF ~/.bash_logout exists THEN
execute ~/.bash_logout
END IF
Please note that /etc/bashrc is executed by ~/.bashrc as shown below:
# cat ~/.bashrc
if [ -f /etc/bashrc ]; then
. /etc/bashrc
Fi
Execution sequence for interactive non-login shell
While launching a non-login interactive shell, following is the sequence of
execution:
IF ~/.bashrc exists THEN
execute ~/.bashrc
END IF
Note: When a non-interactive shell starts up, it looks for ENV environment
variable, and executes the file-name value mentioned in the ENV variable.
Hack 85. How to generate random number in bash
shell
Use the $RANDOM bash built-in function to generate random number between
0 – 32767 as shown below.
$ echo $RANDOM
106
Linux 101 Hacks www.thegeekstuff.com
22543
$ echo $RANDOM
25387
$ echo $RANDOM
647
Hack 86. Debug a shell script
To debug a shell script use set –xv inside the shell script at the top.
Shell script with no debug command:
$ cat filesize.sh
#!/bin/bash
for filesize in $(ls -l . | grep "^-" | awk '{print
$5}')
do
let totalsize=$totalsize+$filesize
done
echo "Total file size in current directory: $totalsize"
Output of Shell script with no debug command:
$ ./filesize.sh
Total file size in current directory: 652
Shell script with Debug command inside:
Add set –xv inside the shell script now to debug the output as shown below.
$ cat filesize.sh
#!/bin/bash
set -xv
for filesize in $(ls -l . | grep "^-" | awk '{print
107
Linux 101 Hacks www.thegeekstuff.com
$5}')
do
let totalsize=$totalsize+$filesize
done
echo "Total file size in current directory: $totalsize"
Output of Shell script with Debug command inside:
$ ./fs.sh
++ ls -l .
++ grep '^-'
++ awk '{print $5}'
+ for filesize in '$(ls -l . | grep "^-" | awk
'\''{print $5}'\'')'
+ let totalsize=+178
+ for filesize in '$(ls -l . | grep "^-" | awk
'\''{print $5}'\'')'
+ let totalsize=178+285
+ for filesize in '$(ls -l . | grep "^-" | awk
'\''{print $5}'\'')'
+ let totalsize=463+189
+ echo 'Total file size in current directory: 652'
Total file size in current directory: 652
Execute Shell script with debug option:
Instead of giving the set –xv inside the shell script, you can also provide that
while executing the shell script as shown below.
$ bash -xv filesize.sh
Hack 87. Quoting
echo statement without any special character.
$ echo The Geek Stuff
108
Linux 101 Hacks www.thegeekstuff.com
The Geek Stuff
Echo statement with a special character ; . semi-colon is a command
terminator in bash. In the following example, “The Geek” works for the echo
and “Stuff” is treated as a separate Linux command and gives command not
found.
$ echo The Geek; Stuff
The Geek
-bash: Stuff: command not found
To avoid this you can add a \ in front of semi-colon, which will remove the
special meaning of semi-colon and just print it as shown below.
$ echo The Geek\; Stuff
The Geek; Stuff
Single Quote
Use single quote when you want to literally print everything inside the single
quote. Even the special variables such as $HOSTNAME will be print as
$HOSTNAME instead of printing the name of the Linux host.
$ echo 'Hostname=$HOSTNAME ; Current User=`whoami` ;
Message=\$ is USD'
Hostname=$HOSTNAME ; Current User=`whoami` ;
Message=\$ is USD
Double Quote
Use double quotes when you want to display the real meaning of special
variables.
$ echo "Hostname=$HOSTNAME ; Current User=`whoami` ;
Message=\$ is USD"
109
Linux 101 Hacks www.thegeekstuff.com
Hostname=dev-db ; Current User=ramesh ; Message=$ is
USD
Double quotes will remove the special meaning of all characters except the
following:
o $ Parameter Substitution.
o ` Backquotes
o \$ Literal Dollar Sign.
o \´ Literal Backquote.
o \" Embedded Doublequote.
o \\ Embedded Backslashes.
Hack 88. Read data file fields inside a shell script
This example shows how to read a particular field from a data-file and
manipulate it inside a shell-script. For example, let us assume the
employees.txt file is in the format of {employee-name}:{employee-
id}:{department-name}, with colon delimited file as shown below.
$ cat employees.txt
Emma Thomas:100:Marketing
Alex Jason:200:Sales
Madison Randy:300:Product Development
Sanjay Gupta:400:Support
Nisha Singh:500:Sales
The following shell script explains how to read specific fields from this
employee.txt file.
$ vi read-employees.sh
#!/bin/bash
IFS=:
echo "Employee Names:"
echo "---------------"
while read name empid dept
110
Linux 101 Hacks www.thegeekstuff.com
do
echo "$name is part of $dept department"
done < ~/employees.txt
Assign execute privilege to the shell script and execute it.
$ chmod u+x read-employees.sh
$ ./read-employees.sh
Employee Names:
---------------
Emma Thomas is part of Marketing department
Alex Jason is part of Sales department
Madison Randy is part of Product Development department
Sanjay Gupta is part of Support department
Nisha Singh is part of Sales department
111
Linux 101 Hacks www.thegeekstuff.com
Chapter 12: System Monitoring and
Performance
Hack 89. Free command
free command displays all the necessary information about system physical
(RAM) and swap memory.
Syntax: free [options]
What is the total RAM on my system?
In the example below, the total physical memory on this system is 1GB. The
values displayed below are in KB.
# free
total used free shared buffers cached
Mem: 1034624 1006696 27928 0 174136 615892
-/+ buffers/cache: 216668 817956
Swap: 2031608 0 2031608
What is the total memory on my system including RAM and Swap?
In the following command:
o option m displays the values in MB
o option t displays the “Total” line, which is sum of physical and swap
memory values
o option o is to hide the buffers/cache line from the above example.
# free –mto
112
Linux 101 Hacks www.thegeekstuff.com
total used free shared buffers cached
Mem: 1010 983 27 0 170 601
Swap: 1983 0 1983
Total: 2994 983 2011
Hack 90. Top Command
top command displays real time information about various performance
metrics of the system such as CPU Load, Memory Usage, Processes list etc.
Syntax: top [options]
How to view my current system status including CPU usage?
Execute top without any option from the command line, which will display
the output shown below. The top command output will keep displaying the
real-time values, until you press “Control + c” or q to exit from the command
output.
# top
top - 13:10:13 up 171 days, 20:21, 3 users, load average: 0.01, 0.05, 0.00
Tasks: 194 total, 1 running, 193 sleeping, 0 stopped, 0 zombie
Cpu(s): 0.6% us, 0.7% sy, 0.0% ni, 98.7% id, 0.0% wa, 0.0% hi, 0.0% si
Mem: 1034624k total, 1007420k used, 27204k free, 174540k buffers
Swap: 2031608k total, 0k used, 2031608k free, 615904k cached
PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
11912 apache 15 0 31828 13m 3916 S 1 0.2 0:46.35 httpd
19299 oracle 19 0 279m 18m 17m S 1 0.2 0:00.03 oracle
11398 jsmith 16 0 107m 28m 6404 S 0 0.4 0:03.07 perl
113
Linux 101 Hacks www.thegeekstuff.com
How to read the output of the top command shown above?
o Line 1 “top”, indicates that the system has been up and running
for 171 days.
o Line 2 “Tasks”, displays the total number of processes along with
a breakdown of running, sleeping, stopped and zombie processes
count.
o Line 3 “Cpu(s)” displays the current CPU utilization of the