title:MLS-PCA: A High Assurance Security Architecture for Future Avionics
author:Clark Weissman
MLS-PCA: A High Assurance Security Architecture for Future Avionics 
Clark Weissman 
Northrop Grumman Corporation
PI:EMAIL
Abstract1
DOD  Joint  Vision  2020  (JV2020)  is  the  integrated 
multi-service  planning  document  for  conduct  among 
coalition  forces  of  future  warfare.  It  requires  the 
confluence  of  a  number  of  key  avionics  technical 
developments: integrating the network-centric battlefield, 
management  of  hundred 
thousands  of  distributed 
processors, high assurance Multi Level Security (MLS) in 
the battlefield, and low cost high assurance engineering. 
This paper describes the results of a study and modeling 
of  a  new  security  architecture, (MLS-PCA), that yields a 
practical  solution  for  JV2020  based  upon  DARPA 
Polymorphic  Computing  Architecture  (PCA)  advances, 
and  a  new  distributed  process-level  encryption  scheme. 
The  paper  defines  a  functional  model  and  a  verified 
formal  specification  of  MLS-PCA,  for  high  assurance, 
with 
the  constraints  PCA  software  and  hardware 
morphware must support. Also, the paper shows a viable 
mapping  of  the  MLS-PCA  model  to  the  PCA  hardware. 
MLS-PCA  is  designed  to  support  upwards  of  500,000 
CPUs  predicted  by  Moore’s  law  to  be  available  circa 
2020. To test such speculation, the paper concludes with 
a  description  of  an 
in-progress  proof-of-concept 
implementation  of  MLS-PCA  using  a  100-node  Grid 
Computing  system  and  an  MLS  distributed  targeting 
application. 
1.  Introductions and Motivation 
DOD  Joint  Vision  2020  describes  the  future  battle 
space  consisting  of  space,  air,  land,  sea,  and  undersea 
forces  integrated  via  a  global  network  of  sensors, 
1  MLS-PCA is the acronym for “Multi Level Secure - Polymorphic 
Computer Architecture”  the result of a study partially supported by 
DARPA through the Air Force Research Laboratories, USAF under 
agreement number F33615-01-C-1891, “Security/Trust as a 
Polymorphic Computing Constraint” 
JV2020  possible.  MLS 
command  and  control,  communications,  and  integrated 
strike  warfare  elements  [1].  The  Achilles  heel  of  this 
network-centric  vision  is  the  high  assurance  Multi  Level 
Security  (MLS)  that  permits  the  myriad  communications 
that  make 
research  and 
development  over  the  past  two  decades  has  defined  the 
requirements  that  must  be  satisfied  for  DOD  systems  [2, 
3,  4,  5]. However,  the  high  cost  of  developing  and 
certifying  high  assurance  systems  to  these  requirements 
has  been  prohibitive  and  development  time  has  been 
excessively 
long.  Innovative  use  of  Polymorphous 
Computing  Architecture  (PCA)  to  satisfy  these  MLS 
requirements in a scheme at process-level granularity is a 
novel  R&D  approach  that  simplifies  system  design,  yet 
provides  flexible  configurable  MLS  systems.  Such 
systems  can  meet  security  requirements  to  support 
different secure data streams in battlefield network-centric 
computing,  as  advocated  in  Joint  Vision  2020.  Many 
additional 
satisfied 
concurrently, including message integrity, authentication, 
confidentiality,  code  mobility,  and  dynamic  coalitions. 
This  paper  describes  a  new  security  architecture  to 
employ  the  richness  of  processing  logic  expected  by 
2020,  such  as  the  DARPA  Polymorphic  Computing 
Architecture (PCA) program [6].  
security 
requirements  can  be 
The  PCA  program  goals  are  to  span  a  broad  dynamic 
application  space  by  implementing  a  transparent  reactive 
layer between an embedded avionics application program 
and the malleable micro-architecture elements on which it 
will operate. This polymorphic layer will enable software 
and hardware to be developed in a cooperative constraint 
sensitive  environment  instead  of  in  a  failure  prone 
hardware  first  and  software  last  paradigm.  The  PCA 
program  will  implement  a  family  of  novel  malleable 
micro-architecture  processing  elements,  i.e.,  PCA  chips, 
to include compute cores, caches, memory structures, data 
paths,  network 
fabrics  with 
incremental  instructions,  OS,  and  network  protocols. 
These  elements  will  have  the  ability  to  reconfigure  to 
match  changing  mission  and  scenario  demands.  To 
support the use of polymorphous computing systems, the 
interfaces,  network 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:42:36 UTC from IEEE Xplore.  Restrictions apply. 
this  paper,  which  covers 
program  will  create  a  model  based  software  framework 
for reactive monitoring, optimization, modeling, resource 
negotiation and allocation, regeneration, and verification. 
Our new security architecture, MLS-PCA, is the focus 
of 
the  novel  functional 
architecture,  a  formal  specification  model,  and  an 
examination  of  the  security  constraints  that  must  be 
imposed on the PCA software-morphing layer and on the 
underlying  chip  hardware.  The  paper  concludes  with  a 
description  of  a  proof-of-concept  demonstration  using 
Grid Computing. 
1.1  Character of Avionics 
avionics 
integrated 
architecture  was 
Legacy  military  avionics  systems  were  developed 
using a “federated architecture” in which each subsystem 
was  logically  and  physically  separate.    Each  had  its  own 
set  of  component  parts,  which  could  not  be  used  to 
support  other  subsystems  in  times  of  equipment  failure. 
This was the approach taken with the F-15, F-16 and F/A-
18,  in  the  1970s.  In  the  early  1980s,  the  Department  of 
Defense  put  together  the  “Pave  Pillar”  architecture  that 
led  to  the  Joint  Integrated  Avionics  Working  Group 
(JIAWG) Advanced Avionics Architecture.  The result of 
this 
that 
computational resources could be interconnected by high 
speed networks to allow for more flexible usage of these 
resources,  e.g.,  re-assigning  a  processor  to  take  over  the 
function of a failed processor.  This also led to the ability 
to  share  information,  e.g.,  to  utilize  fusion  methods  to 
merge  radar  and  electro-optical  information  to  create  an 
improved  way  to  convey  information  to  the  pilot.    The 
pilot  no  longer  had  to  mentally  perform  the  integration 
function  from  a  variety  of  gauges  and  instruments. 
Unfortunately,  the  sharing  of  information  resources  in  a 
classified  avionics  environment 
to  another 
challenge;  either  1)  operate  at  “System  High”,  with  a 
labor  intensive  burden  of  separating  out  the  different 
classification levels at the end of a mission, or 2) solve the 
MLS problem.  The combination of highly classified data 
along  with  un-cleared  (or  lowly  cleared)  maintainers  led 
to  a  major  Information  Assurance  nightmare.    Methods 
currently do not exist to provide high assurance separation 
of the different security levels.   
leads 
Future avionics systems will consist of a large number 
of  processors  interconnected  by  LANs,  fiber  channels, 
and 
local  buses.  Avionics  application  software  – 
navigation,  flight  controls,  communication,  displays, 
targeting,  and  weapons  control  –  will  operate  in  a 
distributed  manner,  with  processes  spread  across 
thousands  of  processors.  Humans  will  play  a  variety  of 
roles  in  this  environment  including  pilot,  navigator, 
ground  controller,  ground  support,  and  mission  planner. 
There is also a trend toward autonomous vehicles, where 
there  is  no  authority  to  supervise  security  decisions.  The 
growing  need  to  use  multilevel  systems  in  coalition 
environments makes this a “show-stopper” issue! 
1.2  System High Won’t Work 
are 
such 
some 
avionics 
examples  of 
Economics of general purpose computing has forced a 
tradition  of  developing  software  to  share  the  processor 
resources.  Operating  systems,  memory  management, 
stack  management,  context  switching,  and  interrupt 
vectoring 
sharing 
mechanisms.  When 
applications  process 
different  security  levels  of  information,  these  sharing 
mechanisms  must  be  trusted  not  to  leak  classified 
information  between  the  processes.  Trusted  software  is 
costly  to  develop,  complex  to  design,  poor  performing, 
and  difficult  to  certify  its  trustworthiness.  As  a  result, 
most  avionics  systems  avoid  trusted  development  by 
operating  at  “System  High,”  the  highest  classification  of 
any  data  entering  the  system.  In  the  future  world  of  the 
integrated  battlefield,  System  High  is  not  an  acceptable 
solution. Weapon systems, sensors, and people will create 
multiple  secure  data  streams  at  different  security 
sensitivities, which must be managed in a MLS manner to 
permit battlefield flexibility of application of those assets, 
and  not  over-classify  information  to  System  High.    We 
simply  cannot  clear  all  battlefield  personnel  to  System 
High.  High  assurance  MLS  is  a  necessary  requirement 
because of the hostile battle space environment consisting 
of data as high as Top Secret with multiple compartments 
serving  friendly  forces  and  includes  uncleared,  foreign 
coalition  partners,  Red  Cross,  and  humanitarian 
personnel; the worst case by current standards [7, 8]. 
2.  MLS Problem 
Simply  stated,  there  are  few  Commercial  Off  The 
Shelf (COTS) solutions to satisfy the high assurance MLS 
requirements.  The  traditional  alternative  is  to  scratch 
build  a  high  assurance  trusted  MLS  system.  That 
alternative  is  not  attractive  because  1)  the  avionics 
requirements  are  quite  broad  to  meet  all  needs  of  the 
JV2020  battle  space,  2)  Certification  and  Accreditation 
(C&A) in DOD is in some disarray, with many competing 
approaches [9, 10, 11, 12, 13, 14], 3) obtaining C&A is a 
lengthy process that may not complete by time of need, 4) 
systems  may  not  satisfy  real-time  avionics  needs,  and  5) 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:42:36 UTC from IEEE Xplore.  Restrictions apply. 
processor/memory  –  richness.  This  paper  proposes one
way  to  securely  organize  and  employ this computational
richness.
4.  MLS-PCA Characteristics
Key to  avionics  security  is  creating  dynamic  trusted
connections between processes,  not  between  processors, 
as was achieved in the Defense Data Net (DDN) [19], and 
is  typical  with  today’s  network Virtual Private Network
(VPN)  architecture.    Cryptography is  placed  at  the 
junction of processors – host, router, server, firewall, and 
gateway  –  or  within  the  processor with  unknown  quality 
encryption 
software  mediated
cryptographic  chips.  Alas  the  rub,  all  these  approaches
place 
software 
intermediaries.
security  base  on  untrusted 
software, 
the 
as 
or 
Future computing  will  have  processor-  and  memory-
rich avionics designed as distributed processes in a plexus
of  processors  interconnected  by  networks.  Our  approach
is to move encryption to the process level to create trusted
application connections with unique trusted cryptographic
elements. The operative  components  of  the  architecture
are  an  Encryption  Process  Element  (EPE)  interposed
between an Avionics Application Process (AAP) and the
communication  channel.  A  Network  Security  Element
(NSE)  will  control  the  Inter  Process Communication
(IPC)  via  distribution  of  encryption  and  authentication
keys to the EPEs.
traditional MLS  approaches  are  too  expensive.  A  new 
approach is needed. 
In 
July 
the 
1990, 
National 
Security
Telecommunications and  Information  Systems  Security
Committee (NSTISSC) was established for the purpose of 
developing and promulgating national policies applicable
to  the  security  of  national  security telecommunications
and information  systems.  In  January  2000,  NSTISSC
issued Policy No. 11, which addresses the national policy
governing the  acquisition  of  information  assurance  and 
information assurance-enabled  information  technology
products.  Policy  No.11  states  that information assurance
shall be considered as a requirement for all systems used 
to enter,  process,  store,  display,  or  transmit  national
security information. DOD  has  issued  DOD  Directive 
8500.1,  Information  Assurance,  and  DOD  Instruction
8500.2, 
to
implement Policy No. 11 [15, 9, 10].
Information  Assurance 
Implementation,
NSA  and  the  Air  Force  have  touted  a  trusted
Protection Kernel (PK) as a candidate approach. They are 
supporting the  development  of  a  Common  Criteria
Protection  Profile;  a  first  step  toward  C&A  [16].    PK 
divides a processor into isolated domains with controlled
inter-domain  communication.  A  different security-level
process can  run  in  each  partition.  There  is  prior  research 
encouraging  this  approach  [17].  COTS  PKs  available
have weak security trust, and have never been applied to
secure avionics application. 
3. Moore’s Law Predicts A Wealth of CPUs
A  modern  aircraft  today  has  over 1000 computers on
board,  and  many  more  on  the  ground  in  support of the
vehicle  mission.    These  are  packaged  into  discrete 
systems  with  shared  power  systems,  interconnect  busses, 
and  external  communications.  The  computers perform
navigation,
flight 
stores
targeting,  weapons 