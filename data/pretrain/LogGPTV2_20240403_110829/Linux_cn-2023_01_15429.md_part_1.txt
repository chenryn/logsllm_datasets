---
author: 硬核老王
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 2509
date: '2023-01-10 11:39:00'
editorchoice: false
excerpt: 在2022年末的openEuler Summit上，吴峰光博士正式向开发者介绍了openEuler统一构建服务EulerMaker。
fromurl: ''
id: 15429
islctt: false
largepic: /data/attachment/album/202301/10/113845z924lascl8a9e339.jpg
permalink: /article-15429-1.html
pic: /data/attachment/album/202301/10/113845z924lascl8a9e339.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 在2022年末的openEuler Summit上，吴峰光博士正式向开发者介绍了openEuler统一构建服务EulerMaker。
tags:
- openEuler
- EulerMaker
thumb: false
title: EulerMaker：构建 openEuler 全场景生态
titlepic: true
translator: ''
updated: '2023-01-10 11:39:00'
---

![](/data/attachment/album/202301/10/113845z924lascl8a9e339.jpg)

### 引言

在2022年末举行的openEuler Summit 2022上，著名Linux内核贡献者、华为计算操作系统首席专家吴峰光博士发表了题为《面向全场景操作系统的构建服务发布》的主题演讲，正式向开发者介绍了openEuler的统一构建服务——EulerMaker。借此机会，Linux中国开源社区对吴峰光博士进行了采访，以揭示EulerMaker背后的一些有趣细节。

> 吴峰光博士是知名的Linux内核贡献者、华为计算操作系统首席专家及openEuler社区技术委员会委员，在I/O和内存管理以及内核测试服务方面做出了重要贡献。欲了解更多关于他的故事，请参阅《新程序员》杂志的专访文章《吴峰光杀进 Linux 内核》。

### openEuler 的全场景支持

2021年9月，openEuler宣布将扩展其应用场景，不仅限于服务器和云计算领域，还将涵盖编译计算和嵌入式系统，此举吸引了广泛关注，同时也引发了一些质疑。由于服务器和嵌入式系统之间的巨大差异，实现跨领域的兼容性被视为一项挑战。“三十年前，服务器操作系统与嵌入式操作系统之间界限分明，但随着信息技术的发展，云计算、边缘计算以及物联网等新兴领域逐渐兴起，使得不同场景开始相互交融。”吴峰光解释道，“这为我们提供了一个历史性的机遇来打造一款能够覆盖所有这些场景的操作系统。”

> 对于多场景融合的支持，请参考我们之前对欧拉技术委员会成员熊伟的访谈：[操作系统专家解读 openEuler 22.09 最新技术特性](/article-15326-1.html)。

![](/data/attachment/album/202301/10/112113ebs4bsm550d7zamh.jpg)

“要实现全场景操作系统的目标，就需要解决一个问题：如何将现有的构建系统转变为一个适用于所有场景的统一构建平台？”

### 什么是操作系统构建系统？

操作系统构建系统负责接收源代码作为输入，并输出用户可以直接安装使用的软件仓库或操作系统镜像文件。

> 在服务器领域，OBS（Open Build Service）是一个历史悠久且功能强大的代表性构建工具；而在嵌入式开发中，则广泛使用Bitbake。

### 为何需要新的构建系统？

“起初，openEuler 社区采用 OBS 进行构建工作。”吴峰光介绍道，“尽管 OBS 功能强大，但在应对日益复杂的新型需求时显得力不从心，这限制了 openEuler 的进一步发展。”

对于普通操作系统而言，OBS 或许已经足够好用；然而，当目标变为支持多种场景时，构建过程变得极其复杂，对构建系统提出了更高要求。通过对 OBS 和 Bitbake 的深入研究，吴峰光指出，这两种传统构建工具无法满足 openEuler 的需求。

“OBS 的设计初衷是为了兼容各种主流 Linux 发行版，如 RedHat 和 Debian。虽然这种包容性促进了早期 Linux 生态的发展，但从长远来看，碎片化问题亟待解决。”

“另一方面，Bitbake 使用了一种面向任务和过程的领域特定语言（DSL），赋予了它极大的灵活性，但也带来了较高的学习成本。相比之下，现代趋势倾向于采用通用声明式配置语言（如 YAML 和 JSON）及函数式编程方法，以简化构建流程并提高可维护性。”

基于上述考虑，openEuler 团队认为有必要开发一种符合新时代要求的新一代构建系统。2022 年 3 月，他们启动了 EulerMaker 项目的设计工作。

### EulerMaker 构建系统

OS 构建系统的核心在于根据用户指定的一组软件包及其依赖关系发起并行构建任务。“那么，是否可以通过搭建 Kubernetes 集群并在其上添加一个包构建调度模块来实现这一目标呢？”

实际上，处理包依赖关系是一项极为复杂的工作，涉及源码依赖、二进制依赖、环境依赖等多个层面。此外，还需要考虑并发构建过程中可能出现的各种异常情况，确保系统的高可用性和容错能力。“因此，我们需要精心设计一套架构来应对这些问题。”

面对如此艰巨的任务，吴峰光建议先退一步思考：“**用户真正需要的是什么？**”在进行架构设计时，必须首先明确用户的具体需求，然后才能确定相应的功能和技术方案。“只有充分理解用户的需求，才能确保未来数据和流程的稳定性。”

随着 Linux 社区对质量控制重视程度的提升，如今开发者普遍期望拥有完整的 CI/CD 流程来保证软件的质量。为此，新的构建系统还应集成全面的测试机制，不仅包括功能性测试，还需涵盖性能评估等方面。

综上所述，EulerMaker 不仅是一个简单的构建工具，而是一套集成了构建与测试功能的全栈解决方案，旨在为用户提供经过严格验证的高质量软件包。