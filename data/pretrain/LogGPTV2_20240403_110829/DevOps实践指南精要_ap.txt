缺陷浪费
错误、缺失、不不清晰的信息或材料料
缺陷产⽣生和发现的间隔越⻓长越难解决
⾮非标准或⼿手⼯工⼯工作
使⽤用别⼈人提供的，不不可重建
的服务器器，测试环境和配置
理理想情况下对运维的依赖应该
⾃自动化，⾃自服务和按需获取
英雄主义⾏行行为
如凌晨两点处理理⽣生产问题，每次发
布⽣生成上百个⼯工单
3. The Principles of Feedback
在复杂系统上安全的⼯工作
由⾼高度关联、紧耦合的组件构成，系统
⾏行行为不不能仅仅通过系统组件的⾏行行为解释
⼀一个组件发⽣生问题，很难与其他
组件隔离
同样的事情做两次，不不是同⼀一结果，
静态检查清单和最佳实践可能不不⾜足以
避免问题发⽣生
让复杂系统上的⼯工作更更安全的条件
复杂⼯工作被管理理，所以设计和执
⾏行行的问题被暴暴露露出来
问题被解决，结果是快速构造新知识
新的局部知识被开拓拓为整个组织的
持续提⾼高这种能⼒力力的⼈人提拔为领导
在问题出现时发现问题
需要持续测试我们的设计和运营假设
⽬目标是提升信息流，更更早、更更快、更更便便宜，
让原因和影响更更清晰
验证更更多假设，才能更更快发现和修复问题，
增加恢复能⼒力力，敏敏捷性，学习和创新能⼒力力
建⽴立快速的向前反馈循环
⽐比如采⽤用瀑布模式的项⽬目，⼀一整年年开发过程没有质量量反
馈，直到测试阶段，但解决问题已经为时过晚
我们的⽬目标是在⼯工作执⾏行行时快速反馈，包括⾃自动化构
建、集成、测试，⽴立即发现问题
建⽴立普遍的遥测，可以看到系统组件在⽣生产环境运⾏行行情
况，以及我们的⾏行行为如何影响系统其他部分
密集解决问题，构建新知识
典范：丰⽥田安灯拉绳
某个部件发现缺陷，或需要的部件不不
可⽤用，每个⼯工⼈人或领导都可以拉拉绳
安灯拉升被拉动后，团队负责⼈人收到
警报并⽴立即解决问题
如果问题在规定时间(如15s）未被解
决，那么⽣生产线停下来，以便便整个组
织辅助解决问题直到有对策提出
密集⽴立即解决问题，⽽而不不是绕开问题
避免问题流转到下游，避免修复成本
⼏几何上升，技术债累积
避免开展新⼯工作，那样可能引⼊入新错
误到系统中
如果问题未解决，⼯工作中⼼心在下次操
作中可能会碰到同样的问题，需要更更
多修复⼯工作
密集解决问题促进学习
防⽌止丢失关键信息
尤其在复杂系统中，特殊的流
程和场景很难事后精确重现
保持将质量量向源头推进
复杂系统中，增加更更多的检查和审批
流程，实际上增加未来失败的可能性
审批流程的有效性，随着将决策远离
⼯工作执⾏行行处⽽而降低
这样做不不仅降低决策质量量，更更增加了了
周期时间，降低了了反馈的⼒力力量量
降低了了从成功和失败中学习的能⼒力力
⽆无效质量量控制的例例⼦子
需要另外⼀一个团队完成单调、易易出错的⼿手⼯工
任务，其实可以简单的⾃自动化并由⾃自⼰己执⾏行行
需要⼀一个远离⼯工作执⾏行行、繁忙的⼈人审批，强迫
他们在缺少⾜足够⼯工作信息的情况下做出决策
编写⼤大量量⽂文档，其中很多存在问题的
细节在写完后会很快会过期
把⼤大批量量⼯工作推给团队或特定的管理理
层处理理和审批，然后等待回复
我们需要价值流中的每个⼈人，
在他们的控制领域找到并解决
问题，作为⽇日常⼯工作的⼀一部分
把质量量、安全责任和决定权推
到⼯工作执⾏行行处
⽽而不不是依赖远处管理理层的审批
推荐的做法
通过Peer Review确认变更更符合设计
⾃自动化尽可能多的质量量检查（传统是
QA和信息安全部⻔门执⾏行行的）
开发⼈人员可以快速测试⾃自⼰己的代码，
甚⾄至⾃自⼰己部署到⽣生产环境
质量量是每个⼈人的责任，⽽而不不是某个独
⽴立部⻔门的
让开发⼈人员共享质量量责任，不不仅改善
结果还能促进学习
为下游⼯工作进⾏行行优化
精益定义了了两类客户
外部客户：为服务付费
内部客户：接收和处理理我们⼯工作的⼈人
我们最重要的客户就是下游⼯工作
为下游优化我们的⼯工作
为运营的⾮非功能性需求进⾏行行设计
包括架构，性能，稳定性，可测
性，可配置性和安全性，跟⽤用户
的功能需求具有相同优先级
将⾮非功能需求主动集成到我们构
建的服务中
4. The Principles of Continual 
Learning and Experimentation
持续创造个体知识，并转化
为团队和整个组织的知识
⽬目标是创建⾼高度信任⽂文化，强调我们是
终身学习者，需要在⽇日常⼯工作承担⻛风险
将局部学习到的知识快速转换为全局改进
在⽇日常⼯工作中预留留时间以加速和保证学习，
持续将压⼒力力注⼊入到系统中以促进持续改进
甚⾄至在⽣生产环境的可控范围内，模拟和注⼊入
失败，⽤用于增强系统的恢复能⼒力力
激活组织学习和安全的⽂文化
出现影响客户的事故，常⻅见的管理理反应
是“name, blame, and shame”，然后创建更更
多的流程和审批⽤用来预防问题再次发⽣生
在技术价值流中，我们⼯工作在复杂系统（⽆无法
完美预测采取活动的预期结果），如果管理理对
于失败和事故的反应导致恐惧的⽂文化，问题可
能被隐藏直到灾难发⽣生
Westrum定义了了三种⽂文化类型
病态组织：以⼤大量量恐惧和威胁为特点，隐藏失败
官僚僚组织：以规则和流程为特点，各扫⻔门前雪
⽣生机型组织：以积极寻找和共享信息为特点，
责任共享，失败导致反思和调查
在技术价值流中，通过创建安全系统
构建⽣生机型⽂文化的基础
⽐比如引导⼀一个免责的事故后分析机制，学
习问题如何发⽣生以及改进的最佳的对策，
防⽌止问题再次发⽣生或快速发现并恢复
An engineer at Etsy：“By removing 
blame, you remove fear; by removing 
fear, you enable honesty; and honesty 
enables prevention.”
让⽇日常⼯工作的改进制度化
如果避免修复问题，⽽而是依靠变通措施，问题和技
术债将会累积，直到所有⼯工作都是在做变通措施
⽐比⽇日常⼯工作更更重要的是改进⽇日常⼯工作
明确的安排时间解决技术债和修复缺
陷，进⾏行行重构并改进代码和环境问题
Alcoa，⼀一个铝的制造商，在1987年年
2%的⼯工⼈人受伤，平均每天7⼈人受伤
CEO决定24⼩小时接收有任何⼈人受伤
的消息，并不不是惩罚，⽽而是确保升级
成学习，构造更更安全的⽣生产环境
经历了了⼗十年年时间，⼯工⼈人受伤率降低了了
95%，在业界是最令⼈人瞩⽬目的安全
记录
在技术价值流中，从最薄弱的失败信
号中找到和修复问题
⾸首先从影响客户的事故开始进⾏行行免责
的事后分析
然后从影响团队的次要事故进⾏行行分析
将局部发现转化为全局改进
美国海海军核动⼒力力推进项⽬目
有超过5700堆年年的运营时间，但⽆无
⼀一起反应堆相关⼈人员伤亡或辐射泄漏漏
严格定义操作规程和标准⼯工作，任何
偏离规程和标准的操作要积累成学习
内容，持续更更新规程和系统设计
新的成员出海海时，他们讲受益于
5700堆年年⽆无事故的知识，并且他们
的经验也会被加⼊入到集体知识给别⼈人
在技术价值流中，必须建
⽴立同样的机制
让事故分析报告能够被其他试图解决
相似问题的团队搜索到
建⽴立共享代码库横跨整个组织，共享
代码、库、配置，让集体知识能够被
整个组织利利⽤用
在⽇日常⼯工作中注⼊入恢复模式
Aisin Seiki，丰⽥田顶级供货商
假如拥有两条⽣生产线，在慢速⽇日，会
把所有制造放在⼀一条⽣生产线上，实验
是否扩充容量量会导致失败
这种增加压⼒力力提升恢复能⼒力力的流程被称为反脆弱
在技术价值流中
实施Game Day演习，演练⼤大范围失败
（如关闭整个数据中⼼心）
在⽣生产环境注⼊入⼤大范围失效，如Netﬂix
的Chaos Monkey，随机在⽣生产环境杀
进程，确保我们有期望的恢复能⼒力力
领导者增强学习⽂文化
卓越不不是领导者做出所有正确决定就能取得的，⽽而
是领导者创造条件，由团队在⽇日常⼯工作中发现的
科学实验
明确描述需要解决的问题
解决问题对策的假设
验证假设的⽅方法
对结果的解释
学习到的信息⽤用于下⼀一迭代