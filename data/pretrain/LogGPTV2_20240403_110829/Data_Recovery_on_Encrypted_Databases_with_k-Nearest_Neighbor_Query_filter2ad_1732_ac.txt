E. Exact Reconstruction Impossibility for Unordered Responses
We sketch here the proof of the impossibility of exact
reconstruction for the case of unordered responses (Theorem 2).
We show that for any ﬁxed k ≥ 2, there exist arbitrarily
many distinct databases with same unordered-responses query
leakage, and thus the leakage is not enough to distinguish
among them. From the leakage, we can derive the Voronoi
diagram and thus the location of all the bisectors. In our
proof (see the Appendix) we demonstrate how to “displace”
a carefully chosen subset of values so as to create arbitrarily
many distinct databases, one for every possible displacement
value, while maintaining the location of the bisectors.
IV. APPROXIMATE RECONSTRUCTION
We now turn our attention to attacks that approximate the
plaintext values when there is no guarantee that all possible
responses are observed by the adversary and the exact Voronoi
segment lengths are not available, i.e. no auxiliary information.
Again, we consider ordered and unordered responses. In both
cases, our approximate reconstruction fails if the adversary
has not observed the set of all possible responses, R. The
probability of this happening (over m uniformly distributed
queries) is summarized in the following lemma.
Lemma 4. The probability that the set of responses to m
uniform k-NN queries from [α, β] does not contain the set of
all possible ordered (unordered) responses, R, is at most
|R|e− m
β−α
minr∈R Len(r) ,
(cid:18)(cid:17)(cid:20)(cid:25)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
where Len(r) is the length of the Voronoi segment of r.
With reference to Lemma 4, recall that the size of the set R
of all possible responses to k-NN queries on a database with
n records is |R| = k(n− (k + 1)/2) + 1 for ordered responses
and |R| = n − k + 1 for for unordered responses. The attacker
can verify whether all responses are observed since we know
n from the setup leakage and k from the query leakage. Note
that for a ﬁxed number of queries, the smaller the length of the
minimum Voronoi segment, the larger a probability of failure
of the attacks. Namely, our approximate reconstruction attack
fails with the probability given in Lemma 4 due to not having
observed all the responses. However, for unordered responses,
the attack can fail for another reason as well. In particular, as
discussed in Section IV-D, the attacker picks its output based
on an estimated k-dimensional polytope. Thus, if the estimated
polytope is empty, the attack fails.
A. Ordered Responses: Estimating Voronoi Segment Lengths
Given all possible responses R have been observed with
m uniformly generated queries in [α, β], our approximate
reconstruction attack is a simple modiﬁcation of attack At-
tackOrdered presented in the Section III-D. In particular,
instead of assuming oracle access to function Len(r) at Line
20 of AttackOrdered, we estimate Len(r) as
(β − α) · mr
m
,
(1)
where mr is the number of queries (out of m total queries) that
returned r as a response. The resulting reconstruction attack
achieves approximate reconstruction (up to reﬂection) with
rigorous guarantees:
Theorem 4. Let DB be an encrypted database with n records
whose values are in the range [α, β]. Suppose the attacker
observes the responses to m k-NN queries that are uniformly
generated from [α, β] (Assumption A1) and which contain all
possible ordered responses, R. For any 0  2 is addressed in Section IV-D.
Analyzing Case k = 2. Our goal is to characterize the space
of n-tuples of a reconstruction class given its 2nd order Voronoi
diagram. We will demonstrate that we need to deﬁne unknowns
for the location of only two values and the rest of the n − 2
values can be expressed as function of these two. The unknown
variables are ξ = (ξ0, ξ1) and their geometric description
follows. Let the ﬁrst value v0 be ξ0 to the left of the bisector
b0,2. Since the location of b0,2 is ﬁxed, it follows that the
value v2 must be ξ0 to the right of the bisector b0,2. Using the
formulated equation v2 = b0,2 + ξ0 we can express v4 so as v4
and v2 are equidistant from the ﬁxed location of b2,4. Using the
same reasoning let v1 be ξ1 to the left of the bisector b1,3. The
location of values v3, v5, v7, . . . can be expressed as a function
3Other attack techniques might be possible if the attacker is willing to
output an n-tuple from any (and possibly incorrect) reconstruction class.
(cid:18)(cid:17)(cid:20)(cid:26)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
negative and positive, respectively. If we extend this reasoning
to the rest of the constraints we see that we can partition the
ordering constraints in four categories of half-planes, i.e. 1)
slope = 1 and positive y-intercept, 2) slope = 1 and negative
y-intercept 3) slope = −1 and positive y-intercept, and 4)
slope = −1 and negative y-intercept. From each of the four
categories all but one constraint are redundant. By omitting
redundant constraints we do not change the region that satisﬁes
the constraints. To ﬁnd the non-redundant one can go through
the y-intercepts of each category and remove the overlapping
constraints, can be accomplished in time O(n).
Fig. 4. Values v0 and v2 must be equidistant, speciﬁcally ξ0 afar, from b0,2.
Using the derived equations we can express the locations of v2, v4, v6, v8
because the locations of bisectors b0,2, b2,4, b4,6, b6,8 stay ﬁxed. Similarly,
by using offset ξ1 we can express the locations of v3, v5, v7, v9.
of the offset ξ1 and the location of the relevant bisectors. As one
can easily see, by picking a value for the unknown ξ0 we ﬁx
the location of v0 (resp. v1) which in turn has a domino effect
on the location of v2, v4, v6, . . . (resp. v3, v5, v7, . . .). Figure 4
highlights which values can be expressed as a function of the
unknown offsets ξ0, ξ1. Speciﬁcally for n = 10 we have:
v0 = b0,2 − ξ0
v2 = b0,2 + ξ0
v4 = 2b2,4 − v2 = 2b2,4 − b0,2 − ξ0
v6 = 2b4,6 − v4 = 2b4,6 − 2b2,4 + b0,2 + ξ0
v8 = 2b6,8 − v6 = 2b6,8 − 2b4,6 + 2b2,4 − b0,2 − ξ0
v1 = b1,3 − ξ1
v3 = b1,3 + ξ1
v5 = 2b3,5 − v3 = 2b3,5 − b1,3 − ξ1
v7 = 2b5,7 − v5 = 2b5,7 − 2b3,5 + b1,3 + ξ1
v9 = 2b7,9 − v7 = 2b7,9 − 2b5,7 + 2b3,5 − b1,3 − ξ1
The next lemma describes the closed-form of each value as
function of the appropriate bisectors and offset for any k ≥ 2.
Lemma 5. Let Vk(v) be the Voronoi diagram of the reconstruc-
tion class [v] with Voronoi endpoints b0,k, . . . , bn−k−1,n−1. If
an n-tuple v(cid:2)
belongs to [v], there exists a k-tuple denoted as
ξ where ξ0, . . . , ξk−1 ≥ 0 such that for all 0 ≤ i ≤ n − 1:
⎧⎪⎪⎪⎨
bi,i+k − ξi
, for 0 ≤ i  c9,β where c9,β = 2b7,9 − 2b5,7 + 2b3,5 − b1,3 − β.
The Reconstruction Class: A Convex Polygon. The pairs of
feasible offset values (ξ0, ξ1) is the set of values that satisfy:
1) the four non-redundant ordering constraints as well as 2) the
two boundary constraints. Figure 5 gives a detailed geometric
illustration of the feasible region for the running example. De-
pending on the values of the database the boundary constraints
can be redundant. Generally, we denote the feasible region
of reconstruction class [v] as F[v] = {ξ(cid:2) ∈ Rk : A · ξ(cid:2) ≤ c},
where each row of A · ξ(cid:2) ≤ c represents a constraint on ξ.
Overall, we have (1) Ordering constraints: n − 1 in number,
(2) Boundary constraints: two in number, (3) Positive-offset
(cid:18)(cid:17)(cid:21)(cid:17)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
constraints: k constraints to guarantee that the offsets are
positive. Therefore, A is a (n+k +1)×k matrix of coefﬁcients
for the inequalities, ξ is a column vector with k offsets,
and c is the column vector with the n + k + 1 constants
(i.e. ca,0, cn−1,b, c0,1, c1,2, . . . , cn−2,n−1). Since we only have
linear inequalities in F[v], the region is a convex polytope.
Diameter of the Feasible Region. Given the feasible region
F[v] of the reconstruction class [v], the L∞ distance between
a pair of n-tuples v(cid:2), v(cid:2)(cid:2) ∈ [v] of the class is:
− v(cid:2)(cid:2)
|}) = max
0≤i≤k−1
) ≤ diam(F[v]) ,
({|v(cid:2)
0≤i≤n−1
) ≤ dL2 (ξ(cid:2), ξ(cid:2)(cid:2)
dL∞ (v(cid:2), v(cid:2)(cid:2)
= dL∞ (ξ(cid:2), ξ(cid:2)(cid:2)
− ξ(cid:2)(cid:2)
|}
) = max
i
i
({|ξ(cid:2)
i
i
where the second equality is derived by substituting the values
with the offset formulas of Lemma 5. The polytope diameter
diam(·), or simply diameter, is the largest Euclidean distance
between any pair of vertices of the polytope. Therefore if the
attacker is able to compute F[v] he can compute an upper-bound
of the distance of any pair of n-tuples in the reconstruction class.
We note here that the ﬁnal output of the reconstruction attack is
a representative v∗
of the reconstruction class [v], and that the
original database can be any n-tuple of the reconstruction class.
The last key observation of the attack is that if the attacker
outputs v∗
for which the offset vector is the mean of the offsets
ξ(cid:2), ξ(cid:2)(cid:2)
of the diameter, then all the potential original database
n-tuples are at most diam(F[v])/2 distance afar.
C. Overview of the Unordered Response Attack
We give an overview of the approximate reconstruction for
k = 2. See Section IV-D for a generalization.
Step 1. The attacker reconstructs the order of the records
with respect to their (unknown) values by using the algorithm
ReconstructOrder. After relabeling the record ids using S =
(s0, . . . , sn−1) the attacker computes the left-to-right order of
the Voronoi segments. For the case of unordered responses this
step is straightforward and can be done by just “shifting” a