   我们在指标评审期间得出的一些最佳见解来自事件后审核流程。有很多伟大的材料已经在那里，所以我不打算深入研究如何做一个良好的故障报告（见#further_readings几个例子）。我将跳到对我们的指标评审最重要的内容：每次我们发现 Bug 或改进机会时，我们都会将其记录并跟踪为修复。修复项目是技术或流程修复，可防止故障再次发生或缩短其持续时间。通常，这些项目分为短期项目和长期项目。短期项目应快速推出（在一周内），并且可能是一个过程、脚本或修补程序。长期项目是更持久的修复，例如更彻底的代码修复（即修复问题类别与问题实例，或跨多个产品线修复一类问题），创建更广泛的流程更改（即构建和交付跨多个组织的事件管理培训），或构建聊天机器人或自动升级/缓解工具。维修项目通常与你用于跟踪产品工作项的同一工作管理系统中进行跟踪，但重要的是，它们被记录和报告，并且与标准产品工作清单区分开来。跟踪维修项目，我们只需将运营债务纳入标准工程流程，就像处理功能一样对待它。#example_repair_debt_graph中的图表是当我们第一次开始跟踪维修时发生的情况的一个很好的例子。当我们开始暴露以前未知的或未聚焦的修复操作时，通常会出现债务的初始峰值。然后，团队调整其做法，将修复债务纳入正常业务节奏，修复债务下降。跟踪修复债务很重要，因为这些问题始终存在，但在跟踪、测量和共享这些问题之前，工程团队无法采取措施改进服务。这有助于为团队提供信号，以及错误预算，说明如何根据功能工作确定服务可靠性工作的优先级。
修复债务图示例
虚拟修复债务：在机器中驱除幽灵修复债务图示例
虚拟修复债务：在机器中驱除幽灵
  并非每部电影都有好莱坞式样的结局，我们发现并不是每个服务都看到了维修项目严谨的成果。在某些情况下，即使修复债务稳定，每月的可靠性也不一定会好转。对于这些服务，有稳定的维修债务，但没有看到可靠性的改善，我们感到困惑。如果修复债务稳定，而且看起来得到很好的参与，为什么它们没有改善呢？我们深入挖掘了一些我们还没有策划的数据，做了我们最深入的探查，并发现了一个令人惊讶的洞察力。有些服务没有进行彻底的 RCA，因此，它们要么具有较低的 RCA 完成率，要么没有进行足够的维修。这意味着修复项目从未进入工作清单，并且服务没有机会改进。
这带来了新的挑战：我们如何衡量故障报告的质量？我们不仅需要测量维修项目是否得到修复，还需要首先衡量它们是否被创建。大多数故障报告包括大量的文本，描述问题，以及采取什么措施来缓解。我们当然可以将一些机器学习应用于文本并尝试分析意图，但这需要大量的投资，并且不会是确定性的。最简单的解决方案其实唾手可得，以“某某时间为期限”的形式，我们要求每个事件和每个故障报告都有这样的字样。任何错过检测、参与或缓解目标的时间的事件都应具有相应的修复项目。这意味着我们必须在维修过程中进行分类，以附加参与、诊断和检测标志，以便以可编程方式发现“尚未修复的问题”。然后，我们使用所有错过的维修项目来衡量我们所谓的“虚拟修复债务”。
可视化虚拟修复债务成为推动改进的有力工具。如#repair_virtual_debt_graph所示，表示修复债务的灰色线使团队看起来正在跟上修复债务，但当你添加表示未命中维修的虚线红线时，形成虚拟的“暗物质”修复项目债务变得明显。虚拟债务尤其重要，因为它代表从未记录过的维修项目，最终将损害服务。当存在虚拟债务时，特定的 TTD 和 TTM 未命中将反复重复，直到记录和修复它们。
修复虚拟债务图
实时仪表板：SRE 的面包和黄油修复虚拟债务图
实时仪表板：SRE 的面包和黄油
   指标评审中最重要的部分可能是将指标和见解引入实时仪表板。每月甚至每周查看数据并不能足够快地推动变化。每个服务、每个组件都需要能够实时查看他们要做的工作、哪些方面做得好，以及哪些方面可以改进。这意味着创建仪表板，这些仪表板可以按服务、按管理人透视，甚至下钻到拥有工作项的单个工程师。
学习：终身学习
如果你想将本章的所有内容简化为一句话，这里就是：衡量一切，坚持不懈地好奇，不要害怕在数据中弄脏和沉溺于寻找正确的行动。在许多情况下，获取这些见解需要手工整理相当多的数据，但在了解哪些指标很重要后，我们可以对其进行检测并自动化，并帮助提高指标的可见性，以帮助服务变得更好。    
延伸阅读
无可指责的故障报告：
"Blameless PostMortems and a Just Culture": John Allspaw, Etsy"Postmortem Action Items: Plan the Work and Work the Plan": Sue Lueder and Betsy Beyer, Google
Beyond Blame—Learning from Failure and Success: Dave Zwieback
使用数据获取操作见解：
"Improving Operations Using Data Analytics": Parviz Deyhim and Arti Garg, Datapipe
"Incident Analysis": Sue Lueder, Google
"Measuring the Success of Incident Management at Atlassian": Gerry Millar, Atlassian"PDA: A Tool for Automated Problem Determination": Hai Huang, Raymond Jennings III, Yaoping Ruan, Ramendra Sahoo, Sambit Sahu, and Anees Shaikh, IBM T.J. Watson Research Center
编者介绍
Martin Check 是 Microsoft Azure 团队中的站点可靠性工程经理。他在 Microsoft 从事大型服务工作 14 年，担任过各种角色，包括服务设计和实施、危机响应、问题管理，甚至领导团队通过 DevOps/SRE 过渡。Martin 目前担任全球 SRE 团队的 SRE 经理，他将继续利用数据洞察推动 SRE 改进。