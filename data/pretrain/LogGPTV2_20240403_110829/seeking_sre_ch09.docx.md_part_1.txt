# 从系统管理员到 SRE
Vladimir Legeza， 亚马逊日本
>  *如果无法测量它，则无法改进它。*
>
> William Thomson, Lord Kelvin
  在过去的10 年中，*站点可靠性工程*已成为许多技术公司和 SysAdmins
社区中公认的术语。在许多情况下，它是一种新的、先进的计算机系统管理方式的同义词，与*分布式系统和容器化*等关键字紧密耦合，代表一组允许各种公司运行的实践高效且经济的支持系统。
 区分站点可靠性工程师（SRE）和传统系统管理员的基本属性是观点。常规方法是确保系统不会产生错误或过载。而
SRE 则根据业务需求定义所需的系统状态。
这两种方法都使用无数指标从各个角度监控服务，从单个 CPU
核心温度到高级应用程序的堆栈跟踪。但是，相同的指标将引导两种方法得出非常不同的结论。从
SysAdmin
的角度来看，与大量错误相比，几毫秒的延迟增长可能看起来并不显著。另一方面，SRE
可能会得出一个完全相反的结论：可能会发生错误，但如果最终用户未受到影响，则服务正常。当然，倘若微不足道的延迟增加会给客户带来困难，那么我们现在正在处理一个严重的问题。
让我们通过下面的简短示例，仔细看看这种差异在根本上的所在。
假设一位经理要求我们创建一个小型的新服务："一种简化的 Web
爬网程序。它必须接收基本
URL、下载其内容，以及查找和返回从该页面检索的所有 URL
的列表，该列表的状态是它是否有效且可访问。"此任务或多或少是直接的。一般软件开发人员可以使用少量高级代码立即开始实现。获得相同任务的经验丰富的
SysAdmin
很有可能会尝试了解项目的技术方面。例如，他们可能会问这样的问题："项目是否具有
SLA【服务级别协议】？"和"我们应该期望什么负载，我们需要预备怎样的故障？"此时，先决条件可能很简单，例如，"负载不会超过每秒
10 个请求，并且我们预计单个 URL 请求的响应时间不会超过 10 秒。"
现在，让我们邀请一个 SRE
到对话中。他们的第一个问题是，"谁是我们的客户？为什么在 10
秒内获得响应对他们很重要？"尽管这些问题主要来自商业角度，但诸如这些信息问题揭示的信息可以极大地改变游戏规则。如果此服务适用于"信息检索"开发团队，其目的是解决搜索引擎结果页上内容验证的必要性，以确保新索引仅提供实时链接，该怎么办？如果我们下载一个包含一百万个链接的页面呢？
现在，我们可以看到 SLA 中的优先级与服务目的之间的冲突。SLA
指出响应时间至关重要，但该服务旨在验证数据，准确性是服务对最终用户最重要的方面。因此，我们需要调整项目要求，以满足商业需要。有很多方法来解决这个困难：等待，直到所有百万链接被检查，或者只检查前百个链接，或架构我们的服务，以便它可以在合理的时间内处理大量的
URL。最后一个解决方案是不太可能的，因此应修改 SLA 以反映实际需求。
我们刚刚做的是将讨论提升到一个新的水平，即业务层面。我们从服务客户的目标开始，延申出我们的工作内容。我们了解该服务的用例，确定其关键方面，并建立和调整了
SLA。现在我们才能开始设计解决方案。这就是首要[亚马逊领导原则](https://www.amazon.jobs/principles)的确切含义："客户迷恋------领导者从客户开始，延申出工作。"在[谷歌的十件事哲学](https://www.google.com/intl/en/about/philosophy.html)中，同样的想法也出现在首位："关注用户，其他一切将会自发产生"。
# 澄清术语
 在这一点上，我想提出一个简短的，三个字符的术语澄清，以避免混淆或不确定。我们将以与
Google*网站可靠性工程*一书[第四章](http://bit.ly/2vsjlzP)中介绍的相同方式使用这些术语。
## 服务级别指示器
  服务级别指示器（SLI）是一个与服务行为相关的单一可衡量指标，经过仔细选择，并深入了解其价值的含义。每个指标都涵盖服务的一个特定方面。我们可以根据自己的条款和条件衡量每一个方面；然而，经验法则是，每个指标都必须有意义。
SLS 示例列表：
-   可用性（每个日历年的请求百分比）所有本章示例中使用的百分位值（99.9%）评价周期（"每个日历年"）是有条件的，仅供演示之用。实际服务可能有更严格的要求，例如
    99.999% 或较短的期限，例如"每季度"。
-   响应时间（毫秒）
## SLA
  SLA 是一组组合的
SLI，用于定义用户应期望从服务获得的内容的总体行为。每个指标都获得自己的特定值或一系列值。每个可能的值都应明确定义为"好"或"坏"。此外，应精确指定所有将"好"变为"坏"的阀值，反之亦然。良好的
SLA
不仅表示一系列保证，而且还包含在特定情况下可能发生的所有可能的限制和操作；例如，在主数据中心中断的情况下，或者当某个限额用尽时会发生什么情况。
示例 SLA："每个日历年 99% 的请求应在 200 ms 中送达；每个请求应最多包含
10 个块，每个块的有效负载不超过 2
MB；所有超过限额的请求都将尽力而为或完全被拒绝。"
本协议包含四个 SLI，即：
-   可用性（每个日历年的请求百分比）
-   响应时间（毫秒）
-   数据块大小限制（兆字节）
-   块数的限制（每个请求的块数）
## 服务级别目标
  服务级别目标（SLO）绝对是与 SLA 相同的 SLI
集，但严格程度要低得多，通常提高现有 SLA
的等级。SLO不是我们需要的，而是我们想要的。
示例：对于前面提到的 SLA，可用性指示器设置为 99%。对于
SLO，我们可能会将此值提高到 99.9%，定义类似于"每个日历年 99.9%
的请求应在 200 ms 中送达。"
SLA 和 SLO 之间的区别仅在于限制的强度。在这里，为简单起见我们将只使用
SLA 术语。但是，我们进一步讨论的所有事实对于 SLO
术语来说也是可用的。我们可以互换使用它们，仅个别情况下明确提及差异。
用户观点是根本的原则非常强大，引导我们了解重要的服务方面。了解对客户有价值的内容提供了一套精确的期望，最终必须反映在
SLA 中。通过精心设计，SLA
可以揭示项目的许多黑暗角落，用于预测和预防困难和障碍。
 但 SLA
首先被指定为参考点，以了解服务的性能。让我们区分我们应该使用哪些指标来形成一个服务于这一目的的协议。可能有数百个指标反映服务的状态，但并非所有指标都适用于
SLA。尽管 SLI 的数量往往尽可能少，但 SLI
的最终列表应涵盖所有主要用户必需资源。
只有两个相对简单的问题应该正面回答，以表明一个考察项目是一个很好的 SLI
候选者，否则就肯定不是。
-   此指标对用户是否可见？
-   此指标对用户（以及从他们作为服务客户的角度来看）是否足够重要，需要处于特定级别或特定范围内？
当我们向 SLA
添加指标时，我们还需要确保该指标（正如我们表达的那样）对双方都（即服务所有者和客户）具有相同的含义。
如果由于频繁的项目更改而无法稳定初始 SLA
值，我们可能会考虑重新访问包含的 SLI
列表，以验证所有指标是否含义明确并可以由用户衡量。
例如，SLA 定义为以下内容：
> 每个日历年 99.9% 的请求应在 200 毫秒内送达，只要每秒的请求不超过 1000
> 个。
乍一看，这一切都是正确的：我们有保证和限制。实际上，这种限制（或吞吐量
SLI）有一个基本困难：它有多个解释，可能导致协议误解、内部指标的泄露和频繁的价值更改。
对于最终用户，此吞吐量语句唯一有意义的情况是此客户独占此服务的情况。因此，他们可能会理解此限制，即指定吞吐量是为其个人预配的吞吐量。但是
SLA 没有明确说明这一点，用户只能猜测他们的理解是否正确。