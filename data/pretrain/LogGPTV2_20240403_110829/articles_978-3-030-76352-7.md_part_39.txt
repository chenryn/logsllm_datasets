### Usage Patterns with and without Sharing

| Usage Pattern | Without Sharing | With Sharing |
|---------------|-----------------|--------------|
| **EMP-A** | 69% (Random) <br> 63% (Sinusoidal) | 95% (Random) <br> 95% (Sinusoidal) |
| **EMP-F** | - | 87% (Random) <br> 85% (Sinusoidal) |
| **SEMP** | - | 87% (Random) <br> 88% (Sinusoidal) |
| **NBSS** | - | 87% (Random) <br> 84% (Sinusoidal) |

In the context of different algorithms, needy users require varying sharing steps to obtain sufficient resources before reaching satisfaction. The average percentage of satisfaction time for all users is shown in Table 1. EMP-A demonstrates the highest percentage of satisfaction time at 95% during sharing. In contrast, without sharing, the satisfaction time drops to 69% in a random usage pattern and 63% in a sinusoidal usage pattern. The other three algorithms (EMP-F, SEMP, and NBSS) exhibit similar performance, ranging from 85% to 88% during sharing, which is higher than the no-sharing scenario but not as high as EMP-A.

### Conclusion

With the growing trend of AIOps research in public cloud extending to resource optimization, this paper integrates the concepts of Artificial Swarm Intelligence and Personality Traits to design a multi-agent system for cloud resource sharing. We have designed and implemented our main algorithm, EMP-A, along with three other algorithms, EMP-F, SEMP, and NBSS, for comparative analysis. All algorithms can reallocate spare resources to needy agents through a sharing procedure among the agents without adding external resources.

To evaluate the performance of the four algorithms, we simulated a 100-agent system and executed 100 usage measuring rounds under two different use-case scenarios. The results showed that EMP-A outperformed the other three algorithms (SEMP, EMP-F, and NBSS) in terms of fewer sharing steps and a higher user satisfaction rate.

### References

1. Beni, G., Wang, J.: Swarm intelligence in cellular robotic systems. In: Proceedings of NATO Advanced Workshop on Robots and Biological Systems (1989).
2. Ding, Y., He, Y., Jiang, J.P.: Self-organizing multi-robot system based on personality evolution. In: IEEE International Conference on Systems, Man, and Cybernetics (2002).
3. Dorigo, M., et al.: Evolving self-organizing behaviors for a swarm-Bot. Auton. Robot. 17(2–3), 223–245 (2004).
4. Givigi Jr., S.N., Schwartz, H.M.: Swarm robot systems based on the evolution of personality traits. Turk. J. Electr. Eng. Comput. Sci. 15(2), 257–282 (2007).
5. Kaelbling, L., Littman, M., Moore, A.: Reinforcement learning: a survey. J. Artif. Intell. Res. 4, 237–285 (1996).
6. Li, C., Yang, C.: A novice group sharing method for public cloud. In: 2018 IEEE 11th International Conference on Cloud Computing (CLOUD), pp. 966–969 (2018).
7. Ma, X.P., Dong, H.H., Li, P., Jia, L.M., Liu, X.: A multi-service train-to-ground bandwidth allocation strategy based on game theory and particle swarm optimization. IEEE Intell. Transp. Syst. Mag. 10(3), 68–79 (2018).
8. Rosenberg, L., Lungren, M., Halabi, S., Willcox, G., Baltaxe, D., Lyons, M.: Artificial swarm intelligence employed to amplify diagnostic accuracy in radiology. In: 2018 IEEE 9th Annual Information Technology, Electronics and Mobile Communication Conference (IEMCON), pp. 1186–1191 (2018).
9. Rosenberg, L.: Artificial Swarm Intelligence, a human-in-the-loop approach to A.I. In: AAAI 2016: Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence (2016).
10. Givigi Jr., S.N., Schwartz, H.M.: A game theoretic approach to swarm robotics. Appl. Bionics Biomech. 3(3), 131–142 (2006).
11. Schumann, H., Willcox, G., Rosenberg, L., Pescetelli, N.: “Human swarming” amplifies accuracy and ROI when forecasting financial markets. In: 2019 IEEE International Conference on Humanized Computing and Communication (HCC), pp. 77–82 (2019).
12. Schwartz, H.M.: Multi-agent Machine Learning: A Reinforcement Approach. Wiley, Hoboken (2014).
13. Van Le, D., Tham, C.: A deep reinforcement learning-based offloading scheme in ad-hoc mobile clouds. In: IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), pp. 760–765, April 2018. https://doi.org/10.1109/INFCOMW.2018.8406881
14. Willcox, G., Askay, D., Rosenberg, L., Metcalf, L., Kwong, B., Liu, R.: Measuring group personality with swarm AI. In: 2019 First International Conference on Transdisciplinary AI (TransAI), pp. 10–17 (2019).
15. Xu, J., Palanisamy, B.: Cost-aware resource management for federated clouds using resource sharing contracts. In: 2017 IEEE 10th International Conference on Cloud Computing (CLOUD), pp. 238–245 (2017).
16. Yaiche, H., Mazumdar, R., Rosenberg, C.: A game theoretic framework for bandwidth allocation and pricing in broadband networks. IEEE/ACM Trans. Netw. 8(5), 667–678 (2000).
17. Yin, T., Hong-hui, D., Li-min, J., Si-yu, L.: A bandwidth allocation strategy for train-to-ground communication networks. 2014 IEEE 25th Annual International Symposium on Personal, Indoor and Mobile Radio Communication (PIMRC), p. 1432 (2014).

### SLMAD: Statistical Learning-Based Metric Anomaly Detection

**Authors:**
Arsalan Shahid¹², Gary White², Jaroslaw Diuwe², Alexandros Agapitos², Owen O’Brien²

**Affiliations:**
¹ School of Computer Science, University College Dublin, Belfield, Dublin 4, Ireland
² Huawei Ireland Research Centre, Townsend Street, Dublin 2 D02 R156, Ireland

**Contact:**
{gary.white, jaroslaw.diuwe, alexandros.agapitos, owen.obrien}@huawei.com

**Abstract:**
Technology companies have become increasingly data-driven, collecting and monitoring a growing list of metrics such as response time, throughput, page views, and user engagement. With hundreds of metrics in a production environment, an automated approach is needed to detect anomalies and alert potential incidents in real-time. This paper develops a time series anomaly detection framework called Statistical Learning-Based Metric Anomaly Detection (SLMAD) that allows for the detection of anomalies from key performance indicators (KPIs) in streaming time series data. We demonstrate the integrated workflow and algorithms of our anomaly detection framework, which is designed to be accurate, efficient, unsupervised, online, robust, and generalizable. Our approach consists of a three-stage pipeline including time series analysis, dynamic grouping, and model training and evaluation. Experimental results show that SLMAD can accurately detect anomalies on a number of benchmark datasets and Huawei production data while maintaining efficient use of resources.

**Keywords:**
Anomaly detection, Unsupervised learning, Online machine learning, Streaming time series, Cloud computing

### 1. Introduction

Artificial Intelligence for IT Operations (AIOps) is an emerging field at the intersection of machine learning, big data, and IT operations management [4]. The primary goal is to analyze various types of system information (metrics, logs, customer input, etc.) to support administrators by optimizing objectives such as preventing Service Level Agreement (SLA) violations, early anomaly detection, auto-remediation, energy-efficient system operation, providing optimal Quality of Experience (QoS) for customers, predictive maintenance, and more [13, 22]. Over the years, there has been a growing interest in this field, leading to the development of practical tools by both academia and industry.

With the large amount of data being collected, there is a need to identify rare events and potential failures. Anomalies in time series data can result in business losses in terms of revenue and market reputation. Accurate anomaly detection can trigger prompt troubleshooting and help avoid downtime or SLA violations. Once anomalies are detected, alerts are either sent to operators for timely decisions or automatically handled by self-healing mechanisms [7]. We summarize the challenges in constructing an industrial-grade time series anomaly detection framework:

- **Lack of labels:** In production-level business scenarios, systems often process millions of metrics. Manually labeling data on this scale is impractical. Additionally, if the time series is in a dynamic environment where the data distribution is constantly changing, the model will need frequent retraining on new data. Labeling this data can introduce significant delays and costs, making supervised models insufficient for industrial use.
- **Generalization:** Time series data in a typical production environment can exhibit a range of patterns and variability. Industrial anomaly detection must work well on all kinds of time series patterns. However, some existing approaches assume specific data shapes and do not generalize well to different patterns.
- **Efficiency and accuracy:** In production scenarios, a monitoring system must process millions of time series in near real-time. For sub-minute-level time series, the anomaly detection procedure must be completed within a limited time, i.e., before the next data point. Furthermore, if the monitoring and anomaly detection system is running on a production node, it must not consume excessive computing resources.
- **Online training and update:** Once trained, the model should be able to update online as new data is collected. Many existing approaches are designed for batch processing rather than real-time streams, leading to the use of outdated models in dynamic environments.
- **Parameter tuning:** Existing anomaly detection algorithms require extensive parameter tuning. For example, neural network or deep learning-based methods require tuning of hyperparameters and window sizes for each metric. This can be complex and time-consuming in production environments with many metrics.

In this paper, we focus on the framework for our anomaly detection service for time series data. We propose a Statistical Learning-Based Metric Anomaly Detection Framework (SLMAD) to spot anomalies in real-time for streaming data while maintaining high efficiency and accuracy. SLMAD is based on an unsupervised approach that does not assume the shape of time series data, requires minimal parameter tuning, detects anomalies, and updates online. SLMAD uses statistical learning and employs a robust box-plot algorithm and Matrix Profile (MP) [23] to detect anomalies.

The framework is based on a three-stage pipeline. In the first stage, the framework analyzes the time series in terms of its characteristics such as stationarity, continuity, seasonality, trend, or flatness. In the second stage, based on the presence of seasonal components in the continuous time series data, we calculate the period using a statistical methodology and perform dynamic grouping for model training. If there is a lack of seasonal components and/or the time series is discrete, we use matrix profiling to find discords and identify them using a robust box-plot in streaming data. In the third stage, we evaluate the models and analyze statistically and visually the spotted anomalies. We evaluate the efficiency and accuracy of SLMAD using publicly available datasets and production data from Huawei products.

### 2. Related Work

Existing approaches in anomaly detection can be categorized into statistical, supervised, semi-supervised, and unsupervised methods.

- **Statistical Anomaly Detection Methods:** Several models have been proposed in the statistical literature, including hypothesis testing [15], wavelet analysis [11], SVD [12], and ARIMA [24]. These methods are popular due to their low resource consumption, making them suitable for production deployment. However, they may have limitations in terms of anomaly detection accuracy.
- **Supervised Anomaly Detection Methods:** Supervised models have shown impressive accuracy in various cases. Opprentice, for example, outperforms traditional detectors by using statistical feature extractors and a random forest classifier [10]. EGADS, developed by Yahoo, utilizes a collection of anomaly detection and forecasting methods with an anomaly filtering layer for scalable anomaly detection on time series data. Google has leveraged deep learning models to detect anomalies in their datasets, achieving promising results [17]. However, continuous labels cannot be generated to retrain these models in an industrial environment, making them insufficient for online applications.
- **Semi-supervised Anomaly Detection Methods:** Semi-supervised techniques do not require the entire dataset to be labeled. The model is trained only on normal data. Recent approaches have used neural network techniques, such as GANs [1]. In this method, an encoder-decoder network is used to create a generator, which maps the data to a lower-dimensional vector, then reconstructs the original data. A distance metric from the learned data indicates whether a new data point is an outlier. Semi-supervised approaches share some of the problems of supervised approaches, as they require knowing that there are no anomalies in the training data.
- **Unsupervised Anomaly Detection Methods:** Due to the limitations of supervised and semi-supervised approaches in real industrial applications, unsupervised approaches have been proposed. DONUT is an unsupervised anomaly detection method based on Variational Auto Encoder (VAE) [5]. LinkedIn developed a method based on time series bitmaps, allowing for assumption-free detection [21]. Other approaches have used forecasting, such as Alibaba RobustTAD [6], Facebook Prophet [18], Amazon DeepAR+ [16], Uber RNN [9], and Microsoft SR-CNN [14]. Deep-learning techniques have also become popular, but they can be expensive to deploy in production. Twitter SH-ESD [8] employs a lightweight approach to detect anomalies using robust measures of scale.

Table 1 summarizes the state-of-the-art unsupervised anomaly detection methods developed by industry, along with their features such as the approach used (supervised, semi-supervised, or unsupervised), forecasting or statistical learning-based, evaluation data, online implementation, and computational complexity.

### 3. Statistical Learning-Based Metric Anomaly Detection (SLMAD)

#### 3.1 Terminology, Problem Formulation, and Employed Statistical Methods

[Continued from here with the rest of the content, following the same structure and style.]