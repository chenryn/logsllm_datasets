## PostgreSQL 10 postgresql.conf 参数模板 - 珍藏级  
### 作者                                                           
digoal                                                           
### 日期                                                           
2018-05-22                                                         
### 标签                                                           
PostgreSQL , 参数 , 模板 , postgresql.conf , pg_hba.conf    
----                                                           
## 背景   
## 系统参数模板  
[《PostgreSQL on Linux 最佳部署手册 - 珍藏级》](../201611/20161121_01.md)    
## PostgreSQL 10参数模板  
```  
# -----------------------------  
# PostgreSQL configuration file  
# -----------------------------  
#  
# This file consists of lines of the form:  
#  
#   name = value  
#  
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with  
# "#" anywhere on a line.  The complete list of parameter names and allowed  
# values can be found in the PostgreSQL documentation.  
#  
# The commented-out settings shown in this file represent the default values.  
# Re-commenting a setting is NOT sufficient to revert it to the default value;  
# you need to reload the server.  
#  
# This file is read on server startup and when the server receives a SIGHUP  
# signal.  If you edit the file on a running system, you have to SIGHUP the  
# server for the changes to take effect, run "pg_ctl reload", or execute  
# "SELECT pg_reload_conf()".  Some parameters, which are marked below,  
# require a server shutdown and restart to take effect.  
#  
# Any parameter can also be given as a command-line option to the server, e.g.,  
# "postgres -c log_connections=on".  Some parameters can be changed at run time  
# with the "SET" SQL command.  
#  
# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds  
#                MB = megabytes                     s   = seconds  
#                GB = gigabytes                     min = minutes  
#                TB = terabytes                     h   = hours  
#                                                   d   = days  
#------------------------------------------------------------------------------  
# FILE LOCATIONS  
#------------------------------------------------------------------------------  
# The default values of these variables are driven from the -D command-line  
# option or PGDATA environment variable, represented here as ConfigDir.  
#data_directory = 'ConfigDir'           # use data in another directory  
                                        # (change requires restart)  
#hba_file = 'ConfigDir/pg_hba.conf'     # host-based authentication file  
                                        # (change requires restart)  
#ident_file = 'ConfigDir/pg_ident.conf' # ident configuration file  
                                        # (change requires restart)  
# If external_pid_file is not explicitly set, no extra PID file is written.  
#external_pid_file = ''                 # write an extra PID file  
                                        # (change requires restart)  
#------------------------------------------------------------------------------  
# CONNECTIONS AND AUTHENTICATION  
#------------------------------------------------------------------------------  
# - Connection Settings -  
listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;  
                                        # comma-separated list of addresses;  
                                        # defaults to 'localhost'; use '*' for all  
                                        # (change requires restart)  
# 根据业务需求设定监听  
port = 1921                             # (change requires restart)    
# 建议不要大于 200 * 四分之一物理内存(GB)， 例如四分之一物理内存为16G，则建议不要超过3200.      
# (假设一个连接耗费5MB，实际上syscache很大时，可能更多)   
# [《PostgreSQL relcache在长连接应用中的内存霸占"坑"》](201607/20160709_01.md)   
max_connections = 2000                  # (change requires restart)     
superuser_reserved_connections = 13     # (change requires restart)  
# $PGDATA, /tmp中 创建unix socket监听  
unix_socket_directories = '/tmp,.'      # comma-separated list of directories     
                                        # (change requires restart)  
#unix_socket_group = ''                 # (change requires restart)  
# 除了OWNER和超级用户，其他用户无法从/tmp unix socket连接该实例  
unix_socket_permissions = 0700          # begin with 0 to use octal notation     
                                        # (change requires restart)  
#bonjour = off                          # advertise server via Bonjour  
                                        # (change requires restart)  
#bonjour_name = ''                      # defaults to the computer name  
                                        # (change requires restart)  
# - Security and Authentication -  
#authentication_timeout = 1min          # 1s-600s  
#ssl = off  
#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers  
#ssl_prefer_server_ciphers = on  
#ssl_ecdh_curve = 'prime256v1'  
#ssl_dh_params_file = ''  
#ssl_cert_file = 'server.crt'  
#ssl_key_file = 'server.key'  
#ssl_ca_file = ''  
#ssl_crl_file = ''  
# md5 or scram-sha-256   # 如果MD5会泄露，建议使用scram-sha-256，但是相互不兼容，请注意。   
# [《PostgreSQL 10.0 preview 安全增强 - SASL认证方法 之 scram-sha-256 安全认证机制》](201703/20170309_01.md)    
password_encryption = md5                
#db_user_namespace = off  
#row_security = on  
# GSSAPI using Kerberos  
#krb_server_keyfile = ''  
#krb_caseins_users = off  
# - TCP Keepalives -  
# see "man 7 tcp" for details  
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;  
                                        # 0 selects the system default  
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;  
                                        # 0 selects the system default  
tcp_keepalives_count = 10               # TCP_KEEPCNT;  
                                        # 0 selects the system default  
#------------------------------------------------------------------------------  
# RESOURCE USAGE (except WAL)  
#------------------------------------------------------------------------------  
# - Memory -  
# 1/4 主机内存   
shared_buffers = 24GB                   # min 128kB    
                                        # (change requires restart)  
# 当不使用huge page，并且连接数大于3000时，建议shared buffer不要超过48G  
# 建议shared buffer设置超过32GB时 使用大页，页大小 /proc/meminfo Hugepagesize    
huge_pages = try                        # on, off, or try                
                                        # (change requires restart)  
#temp_buffers = 8MB                     # min 800kB  
# 如果用户需要使用两阶段提交，需要设置为大于0，建议与max_connections一样大  
#max_prepared_transactions = 0          # zero disables the feature  
                                        # (change requires restart)  
# Caution: it is not advisable to set max_prepared_transactions nonzero unless  
# you actively intend to use prepared transactions.  
# 可以在会话中设置，如果有大量JOIN，聚合操作，并且期望使用hash agg或hash join。   
# 可以设大一些，但是不建议大于    四分之一内存除以最大连接数  .   
# (一条QUERY中可以使用多倍WORK_MEM，与执行计划中的NODE有关)    
# 建议给一个输入，AP模式TP模式OR混合模式。三种模式使用三种不同的计算公式  
work_mem = 8MB                          # min 64kB  
# min( 2G, (1/4 主机内存)/autovacuum_max_workers )    
maintenance_work_mem = 2GB              # min 1MB      
#replacement_sort_tuples = 150000       # limits use of replacement selection sort  
#autovacuum_work_mem = -1               # min 1MB, or -1 to use maintenance_work_mem    
#max_stack_depth = 2MB                  # min 100kB  
dynamic_shared_memory_type = posix      # the default is the first option  
                                        # supported by the operating system:  
                                        #   posix  
                                        #   sysv  
                                        #   windows  
                                        #   mmap  
                                        # use none to disable dynamic shared memory  
                                        # (change requires restart)   
# - Disk -  
# 如果需要限制临时文件使用量，可以设置。  
# 例如防止有异常的递归调用，无限使用临时文件。  
#temp_file_limit = -1                   # limits per-process temp file space  
                                        # in kB, or -1 for no limit  
# - Kernel Resource Usage -  
## 如果你的数据库有非常多小文件（比如有几十万以上的表，还有索引等，并且每张表都会被访问到时），  
# 建议FD可以设多一些，避免进程需要打开关闭文件。  
## 但是不要大于前面章节系统设置的ulimit -n(open files)  
# max_files_per_process=655360  
#max_files_per_process = 1000           # min 25  
                                        # (change requires restart)  
# 需要加载什么LIB，预先加载，对于经常访问的库也建议预加载，例如postgis  
shared_preload_libraries = 'pg_stat_statements,auto_explain'          # (change requires restart)    
# - Cost-Based Vacuum Delay -  
vacuum_cost_delay = 0                   # 0-100 milliseconds  
#vacuum_cost_page_hit = 1               # 0-10000 credits  
vacuum_cost_page_miss = 5               # 0-10000 credits  
vacuum_cost_page_dirty = 10             # 0-10000 credits  
# io很好，CPU核数很多的机器，设大一些  
vacuum_cost_limit = 10000               # 1-10000 credits    
# - Background Writer -  
bgwriter_delay = 10ms                   # 10-10000ms between rounds  
bgwriter_lru_maxpages = 500             # 0-1000 max buffers written/round  
bgwriter_lru_multiplier = 5.0           # 0-10.0 multiplier on buffers scanned/round  
# IO非常强悍的机器，可以考虑设置为0    
#bgwriter_flush_after = 512kB           # measured in pages, 0 disables    
# - Asynchronous Behavior -  
effective_io_concurrency = 0            # 1-1000; 0 disables prefetching   
# wal sender, user 动态fork的process, parallel worker等都算作 worker process, 所以你需要设置足够大.   
max_worker_processes = 128              # (change requires restart)      
#  如果需要使用并行查询，设置为大于1 ，不建议超过 主机cores-2  
max_parallel_workers_per_gather = 0     # taken from max_parallel_workers      
#  如果需要使用并行查询，设置为大于1 ，不建议超过 主机cores-2  
#  必须小于 max_worker_processes   
max_parallel_workers = 8                # maximum number of max_worker_processes that    
                                        # can be used in parallel queries  
# 开启后有性能影响，但是如果你的系统中有不可预知的长事务，并且希望数据库不因长事务导致垃圾膨胀，则可以设置。  
#old_snapshot_threshold = -1            # 1min-60d; -1 disables; 0 is immediate    
                                        # (change requires restart)  
#backend_flush_after = 0                # measured in pages, 0 disables  
#------------------------------------------------------------------------------  
# WRITE AHEAD LOG  
#------------------------------------------------------------------------------  
# - Settings -  
# 需要物理备库设置为replica，需要逻辑订阅或逻辑备库则设置为logical  
wal_level = replica                     # minimal, replica, or logical    
                                        # (change requires restart)  
#fsync = on                             # flush data to disk for crash safety  
                                        # (turning this off can cause  
                                        # unrecoverable data corruption)  
# 如果双节点，设置为ON，如果是多副本，同步模式，建议设置为remote_write。   
# 如果磁盘性能很差，并且是OLTP业务。可以考虑设置为off降低COMMIT的RT，提高吞吐(设置为OFF时，可能丢失部分XLOG RECORD)  
synchronous_commit = on                 # synchronization level;      
                                        # off, local, remote_write, remote_apply, or on  
# 建议使用pg_test_fsync测试后，决定用哪个最快。通常LINUX下open_datasync比较快。  
#wal_sync_method = fsync                # the default is the first option   
                                        # supported by the operating system:  
                                        #   open_datasync  
                                        #   fdatasync (default on Linux)  
                                        #   fsync  
                                        #   fsync_writethrough  
                                        #   open_sync  
# 如果文件系统支持COW例如ZFS，则建议设置为OFF。 如果文件系统可以保证datafile block size的原子写，在对齐后也可以设置为OFF。  
#full_page_writes = on                  # recover from partial page writes    
#wal_compression = off                  # enable compression of full-page writes  
#wal_log_hints = off                    # also do full page writes of non-critical updates  
                                        # (change requires restart)  
# 建议 min( 512MB, shared_buffers/32 )   
wal_buffers = -1                        # min 32kB, -1 sets based on shared_buffers      
                                        # (change requires restart)  
# 如果设置了synchronous_commit = off，可以设置wal_writer_delay  
wal_writer_delay = 10ms                # 1-10000 milliseconds  
wal_writer_flush_after = 1MB           # measured in pages, 0 disables  
# 如果synchronous_commit=on, 并且已知业务系统为高并发，对数据库有写操作的小事务，则可以设置commit_delay来实现分组提交，合并WAL FSYNCIO 。  
#commit_delay = 0                       # range 0-100000, in microseconds     
# 同时处于提交状态的事务数超过commit_siblings时，使用分组提交  
#commit_siblings = 5                    # range 1-1000    
# - Checkpoints -  
#  不建议频繁做检查点，否则XLOG会产生很多的FULL PAGE WRITE(when full_page_writes=on)。  
checkpoint_timeout = 30min              # range 30s-1d     
# 建议等于SHARED BUFFER，或2倍。  
# 同时需要考虑崩溃恢复时间, 越大，检查点可能拉越长导致崩溃恢复耗时越长。但是越小，开启FPW时，WAL日志写入量又越大。 建议采用COW文件系统，关闭FPW。  
max_wal_size = 256GB       
# 建议是SHARED BUFFER的2分之一  
min_wal_size = 64GB         
# 硬盘好的情况下，可以让检查点快速结束，恢复时也可以快速达到一致状态。否则建议0.5~0.9  
checkpoint_completion_target = 0.1      # checkpoint target duration, 0.0 - 1.0    
# IO很好的机器，不需要考虑平滑调度, 否则建议128~256kB  
#checkpoint_flush_after = 256kB         # measured in pages, 0 disables      
#checkpoint_warning = 30s               # 0 disables   
# - Archiving -  
# 建议默认打开，因为修改它需要重启实例  
archive_mode = on             # enables archiving; off, on, or always  
                                # (change requires restart)  
#  后期再修改，如  'test ! -f /disk1/digoal/arch/%f && cp %p /disk1/digoal/arch/%f'  
archive_command = '/bin/date'           # command to use to archive a logfile segment    
                                # placeholders: %p = path of file to archive  
                                #               %f = file name only  