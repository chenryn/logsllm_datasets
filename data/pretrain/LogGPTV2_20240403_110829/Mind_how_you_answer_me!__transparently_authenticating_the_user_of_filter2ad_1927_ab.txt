predeﬁned phrases, or sounds, before being authenticated [17].
Recently, researchers proposed other interesting authentication
methods, that are non biometric but use accelerometer devices—
commonly present in smartphones. These mechanisms aim at iden-
tifying the user based on a secret movement pattern [15] (e.g. mov-
ing the phone as if to draw an “8” in the air, where “8” is the se-
cret). The movement pattern is measured using data from the ac-
celerometer sensor. The security obtained is high. However, similar
to classical PIN or password methods, an adversary might spy the
movement, replay it, and get access to the phone and its data.
In this paper, we present a method that solve the problems of the
cited methods. The proposed solution is to measure the movement
pattern performed by a user while answering (or placing) a phone
call. In particular, the considered pattern initiates from the moment
the user presses “start”—to answer an incoming call or to initiate a
new one—up to the moment she brings the phone to the ear. Hence,
as soon as the phone reaches the ear, the measuring ends and the
recognition process starts. We observe that, differently from the
solution in [15], in our proposal the secret is not the movement
itself (e.g. the “8” drawn in the air) but is the biometric measures of
a speciﬁc user’s movement—i.e. even if an adversary spies how the
user answers the phone, she is not able to replay the movement in
a way such that it can replicate the biometric features of the correct
user.
with the ones of (external or internal) ear recognition. In fact, sim-
ilar to our method, also these methods could be used for authen-
ticating the user answering a phone call, without requiring a spe-
ciﬁc interaction for the authentication. However, these methods
have the drawbacks discussed before: they suffer from inﬂuence of
external factors (e.g. hair, hats, and veils); they are not so trans-
parent (the camera must be at an appropriate distance to get the
focus); they require devices not commonly present in smartphones
(e.g. a camera close to the ear position for external ear recognition,
or a microphone close to the ear position for the internal acoustic
ear recognition). In addition, even if we assume these problems
can be solved (e.g. equipping the new smartphones with new—and
costly—devices, and requiring the user not to wear hats or veils),
we observe the following. In the ear recognition the registration of
the measure of interest starts when the phone is at the ear—that is
the moment at which the measure of our pattern ends. Hence, this
would further prolong the recognition process, so further delaying
the beginning of the actual phone communication.
We propose to measure movement patterns using both the ac-
celerometer sensor and the orientation sensor. To the best of our
knowledge the second one has never been used before for authen-
tication purposes. Also, leveraging the idea of combining different
authentication methods [21], we propose a speciﬁc way of combin-
ing our different proposed authentication methods (based on differ-
ent sensors and different recognition algorithms). In this way, we
manage to further improve the performances of the basic methods
involved in the combination: reducing at the same time both FAR
(False Alarm Rate) and IPR (Impostor Pass Rate).
3. PRELIMINARIES AND NOTATION
In this section, we introduce some building block concepts for
our proposal.
In particular, our proposal leverages technologies
widely available on smartphones: accelerometer sensor and ori-
entation sensor. Hence, in Section 3.1 we introduce the working
of this sensors. Furthermore, we introduce the building block al-
gorithms that we use to measure similarity between patterns: the
251
Dynamic Time Wrapping (DTW) algorithm (Section 3.2). In par-
ticular, we implement two different versions of this algorithm: Dy-
namic Time Warping Distance (DTW-D, Section 3.2.1), and Dy-
namic Time Warping Similarity (DTW-S, Section 3.2.2). Finally,
in Section 3.3 we introduce deﬁnitions and notation used in the rest
of the paper.
3.1 Considered Sensors
Current smartphones come equipped with a wide range of sen-
sors, e.g. to measure acceleration, light, magnetic ﬁeld, orientation,
and temperature. Some of these sensors have already been used for
authentication purposes. In particular, the accelerometer sensor has
been used both for capturing secret movements [15], and for mea-
suring biometric features like the walking pattern [11]. On the con-
trary, orientation sensor has never been used before our proposal.
Our proposal leverages both accelerometer sensor and orienta-
tion sensor. In particular, we implemented a proof of concept of our
proposal for the Android system. Android implements the OpenGL
ES coordinate system [3]. The coordinate system on the Android
platform is deﬁned with relation to the screen of the phone, when
the phone is in its default position (the default position—either por-
trait or landscape—depends on the speciﬁc smartphone model, e.g.
it is portrait for the Dev 1 phone used in our testing). The origin of
the coordinates is given by the lower left corner of the screen. The
x-axis are horizontal and point right, the y-axis are vertical and
point up, and the z-axis point outside the front face of the screen.
This coordinate system applies both to the accelerometer and the
orientation sensor. Also, these coordinates do not change when the
orientation of the phone is changed.
3.1.1 Accelerometer Sensor (Sa)
The accelerometer sensor measures the forces applied to the phone
(minus the force of gravity) on the three axis: x, y and z. This
means that when the phone is pushed toward the sky with an ac-
s2 ), the ac-
celeration a (expressed in meter per second squared m
celeration measured by the sensor will be a + 9.81 m
s2 . This value
represents the acceleration of the device: a minus the force of grav-
ity (9.81 m
Let us denote the values of the acceleration of the device on the
axis x, y and z, as ax, ay, and az, respectively. Similarly, let us de-
note the values of the force of gravity on the axis x, y and z, as gx,
gy, and gz, respectively. The values provided by the accelerometer
sensor are the following:
s2 ).
• force applied by the device on the x-axis (ax - gx);
• force applied by the device on the y-axis (ay - gy);
• force applied by the device on the z-axis (az - gz).
3.1.2 Orientation Sensor (So)
The orientation sensor measures values of the angles in degrees
of arc, representing the orientation of the phone on the three axis.
For example, let us assume a user is standing in a point holding
the phone in one hand. If the user rotate her body, this will mainly
imply a modiﬁcation of the value referring to the rotation around z-
axis. Similarly, a rotation on z is also observed rotating the device
from portrait to landscape. The values provided by the accelerom-
eter sensor are the following:
• rotation around z-axis, yaw (0
(cid:14)
= South, 270
= East, 180
(cid:14)
90
(cid:14)≤ yaw ≤ 360
= West);
(cid:14)
(cid:14)
(cid:14)
, 0
= North,
• rotation around x-axis, pitch (-180
(cid:14)≤ pitch ≤ 180
(cid:14)
, with
positive values when z-axis moves toward y-axis);
• rotation around y-axis, roll (-90
(cid:14)≤ roll ≤ 90
values when z-axis moves toward x-axis).
(cid:14)
, with positive
3.2 Considered Similarity algorithms
As for the similarity algorithm used, we focused on the Dynamic
Time Warping (DTW), being it widely used in the literature for au-
thentication purposes [22, 23]. The DTW is an algorithm for mea-
suring similarity between two sequences which may vary in time
or speed. It was ﬁrst used in speech recognition in the 70s but it
is currently used in many areas: handwriting recognition, signature
recognition, sign language recognition, and gesture recognition.
This algorithm gained its popularity in this ﬁeld due to its capa-
bility of minimizing the effects of shifting and distortion in time, for
time series data [22, 23]. The continuity of the input patterns is less
important in the DTW than in other pattern matching algorithms
(e.g. Support Vector Machines, Bayesian Networks, and Decision
Tree Learning) as it is particularly suited for matching sequences
with missing information.
In the following, we describe the two speciﬁc algorithms that
we use in our proposal, both derived from DTW: DTW-D (Section
3.2.1), and DTW-S (Section 3.2.2). Using these two algorithms,
and two different sensors Sa and So, we propose four different
methods, that are: 1) DTW-D with data from Sa; 2) DTW-S with
data from Sa; 3) DTW-D with data from So; 4) DTW-S with data
from So.
3.2.1 Dynamic Time Warping Distance (DTW-D)
The Dynamic Time Warping Distance (DTW-D) uses as com-
parison algorithm the classical DTW algorithm. The data is rep-
resented in the form of time series. By a time series we mean a
sequence of pairs: each pair represents a 3D point (values x, y, and
z) and the corresponding time. In our scenario, the time is normal-
ized such that each sequence starts at zero and all the other values
represent the time interval that passed from the starting point.
The result obtained when comparing two time series is a real
value (∈ ℜ+), and it represents a distance measure. The minimum
distance that can be obtained is zero. Smaller the result, smaller the
distance between the two pattern, higher the similarity. When two
identical time series are compared the outputted result is zero.
During the training phase, T patterns (i.e.
their corresponding
measures) are added to the database. Let us denote these pat-
terns as t1, : : : , tT . Once the patterns are added, each two series
are compared using the DTW algorithm. The maximum distance
(maxDist) value obtained in this comparison is stored, and used
during the recognition phase. That is:
maxDist = maxT
i;j=0{DT W (ti; tj)};
(1)
where DTW(ti,tj) is the similarity measure compute by DTW-D
between the patterns ti and tj. The maxDist value has the pur-
pose to make the authentication mechanism being dependent on the
speciﬁc user’s behaviour: instead of choosing a general maximum
distance allowed between two patterns, we will consider maxDist,
which is dependent on the training set.
During the recognition phase, a new test pattern, given to the sys-
tem for recognition, is compared to each pattern in the training set,
this resulting in T similarity measure di, i = 1 : : : T . If for more
than half of these similarity measures are smaller than the maxi-
mum distance plus a given threshold ((cid:28)D) the user is considered to
be the correct one, and the access is allowed. Formally, a user is
accepted if the following holds:
|{di|di 
T
2
(2)
252
If Equation 2 does not hold, the user is considered an impostor—
hence, the access is not granted.
3.2.2 Dynamic Time Warping Similarity (DTW-S)
The Dynamic Time Warping Similarity (DTW-S) [5] uses for
comparison an adaptation of the classical DTW algorithm. That
is, instead of giving as a result a distance measure, this method
gives as output a percentage of similarity between the two series.
in DTW-S the three axis are considered independently. In partic-
ular, three instances are created, one for each axis (x, y and z).
When two patterns are compared, the instances corresponding to
the same axis are compared. These three results are averaged and
the outcome is returned as the ﬁnal result—that is a percentage
value. Two instances that are identical will give as result 100%.
Hence, differently from DTW-D, for DTW-S the higher the result,
the higher the similarity between two patterns.
During the training phase a number of T patterns is added to
the database. Since the results that can be obtained by this method
are bounded both on the lower side (0%) and on the upper side
(100%), no processing is performed for the training set. That is,
instead of using a maximum allowed distance that is dependent on
the training set (as done for DTW-D), for DTW-S we only use a
maximum accepted threshold (cid:28)S.
During the recognition phase, each new pattern is compared with
each training pattern and the results are averaged. If the average
obtained is bigger than a given threshold, the user is considered to
be the correct one—and the access is guaranteed. On the contrary,
if the average is smaller, the user is consider an impostor—and the
access is denied.
3.3 Deﬁnitions and Notation
We remind that we investigate on the feasibility of using the call
answering movement (that the user performs when answering or
placing a phone call) as a biometric authentication measure. We
also assume that only one user is authorized to answer or place
calls. Coherently with previous work on biometric authentication
[8, 10, 13, 14], we use the following two deﬁnitions to evaluate the
performances of our proposal.
Deﬁnition 1. False Alarm Rate (FAR). The FAR is the percent-
age of accesses attempted by the authorized user of the system, er-
roneously rejected.
Deﬁnition 2. Impostor Pass Rate (IPR). The IPR is the per-