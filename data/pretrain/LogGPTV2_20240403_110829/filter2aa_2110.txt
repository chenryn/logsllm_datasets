Le’go My Stego
Le’go My Stego
Steganography 
Steganography 
in the post Web 2.0 World
in the post Web 2.0 World
James Shewmaker © 2008
James Shewmaker © 2008
Defcon 0x10
Defcon 0x10
Today’s Agenda
Today’s Agenda
 Today’s Agenda
Today’s Agenda
 Background: Classical Stego
Background: Classical Stego
 Digital Stego Techniques
Digital Stego Techniques
 Extending Stego concepts
Extending Stego concepts
 Surviving Conversion
Surviving Conversion
 Post-Mortem Conversion Detection
Post-Mortem Conversion Detection
Classic Stego
Classic Stego
 Old School Spy vs. Spy
Old School Spy vs. Spy
 Classified Ads
Classified Ads
 Microdot
Microdot
 Digital Stego - Any media file that samples 
Digital Stego - Any media file that samples 
reality can have its Least Significant Bit 
reality can have its Least Significant Bit 
(LSB) tweaked with minor disruptions
(LSB) tweaked with minor disruptions
Classic Digital Stego
Classic Digital Stego
 Classic Digital Stego
Classic Digital Stego
 Manipulating that Least Significant Bit
Manipulating that Least Significant Bit
 Using unused space in a host file
Using unused space in a host file
 Examples
Examples
 Digital audio – fairly subtle
Digital audio – fairly subtle
 Even magnitude == zero
Even magnitude == zero
 Odd magnitude == one
Odd magnitude == one
 Digital image – also fairly subtle
Digital image – also fairly subtle
 Even LSB of a pixel == zero
Even LSB of a pixel == zero
 Odd LSB of a pixel == one
Odd LSB of a pixel == one
Distributed Stego
Distributed Stego
 Many public video sites converted to flash video 
Many public video sites converted to flash video 
(FLV)
(FLV)
 Take your favorite viral marketing video
Take your favorite viral marketing video
 Encode to FLV before you upload
Encode to FLV before you upload
 Store data with LSB stego using each frame/tag/box
Store data with LSB stego using each frame/tag/box
 (GIF/PNG/JPEG, etc.)
(GIF/PNG/JPEG, etc.)
 Store parity bit with each audio sample
Store parity bit with each audio sample
 Classic/Simple Stego is not quite robust enough 
Classic/Simple Stego is not quite robust enough 
to survive video conversions
to survive video conversions
 High redundancy might survive conversion
High redundancy might survive conversion
 If we pick our codec well, it might survive unmolested
If we pick our codec well, it might survive unmolested
Phfft—who needs binary anyway?
Phfft—who needs binary anyway?
 Whitespace in public blog comments
Whitespace in public blog comments
 Seed arbitrary blog with keywords, then ask Google to 
Seed arbitrary blog with keywords, then ask Google to 
find the blog
find the blog
 \x20 between words == zero
\x20 between words == zero
 \x20\x20 between words == one
\x20\x20 between words == one
 Mispelt blog comments
Mispelt blog comments
 the == zero
the == zero
 teh == one
teh == one
 These techniques are compressible and subtle 
These techniques are compressible and subtle 
enough to likely be overlooked when classic 
enough to likely be overlooked when classic 
stego detection tools are used
stego detection tools are used
Creating a Stego Filesystem
Creating a Stego Filesystem
 Previous slides could be used for data or 
Previous slides could be used for data or 
metadata
metadata
 Pick a method to encode a structure, ie:
Pick a method to encode a structure, ie:
 Use blog comments as metadata for a dually-linked 
Use blog comments as metadata for a dually-linked 
list
list
 URL to previous metadata comment
URL to previous metadata comment
 URL to datablock
URL to datablock
 URL to next metadata comment
URL to next metadata comment
 Store datablock in video frame/tag/box (up to one bit 
Store datablock in video frame/tag/box (up to one bit 
per pixel)
per pixel)
 Store an extra parity bit for the datablock in the audio 
Store an extra parity bit for the datablock in the audio 
sample
sample
How the data survives conversion
How the data survives conversion
 Small bit errors from conversion could be 
Small bit errors from conversion could be 
detected and corrected with Hamming 
detected and corrected with Hamming 
code-like techniques to survive conversion
code-like techniques to survive conversion
 RAID 10 the metadata dually-linked list
RAID 10 the metadata dually-linked list
 That is to say mirrored sets of RAID 5
That is to say mirrored sets of RAID 5
 If LSB bits are lost in a single 
If LSB bits are lost in a single 
frame/tag/box-we can recover
frame/tag/box-we can recover
 If the conversion taints a portion of the 
If the conversion taints a portion of the 
frame/tag/box-we can recover 
frame/tag/box-we can recover 
Even Hamming code example
Even Hamming code example
 Every power of 2 is a parity bit (4 extra bits)
Every power of 2 is a parity bit (4 extra bits)
 For example, store \xFF, blanks are parity
For example, store \xFF, blanks are parity
 __1_ 111_ 1111
__1_ 111_ 1111
 11st
st bit checks 1, skips 1, then 
 bit checks 1, skips 1, then 
repeats,5 ones is odd so we get
repeats,5 ones is odd so we get
 1_1_ 111_ 1111
1_1_ 111_ 1111
 22nd
nd bit checks 2 bits, skip 2… 
 bit checks 2 bits, skip 2… 
(2,3,6,7,10,11),5 ones so we get
(2,3,6,7,10,11),5 ones so we get
 111_ 111_ 1111
111_ 111_ 1111
 (4,5,6,7,12), 4 ones so we get
(4,5,6,7,12), 4 ones so we get
 1110 111_ 1111
1110 111_ 1111
 1110 1110 1111 
1110 1110 1111 –Final encoded 
–Final encoded 
Fixing a bad bit
Fixing a bad bit
 1110 1110 1111 
1110 1110 1111 –Final Encoded
–Final Encoded
 1110 1110 1011 
1110 1110 1011 –Damaged
–Damaged
   ^      ^      
^      ^      -Lies!
-Lies!
   2  +   8 =10  
2  +   8 =10  -bit 10 is bad!
-bit 10 is bad!
 1110 1110 1111 
1110 1110 1111 -Corrected!
-Corrected!
 This will detect 2 bit errors, but correcting 
This will detect 2 bit errors, but correcting 
more than 1 error requires wrapping all of 
more than 1 error requires wrapping all of 
this parity with more checks
this parity with more checks
Hold on for a second
Hold on for a second
 What do we have so far?
What do we have so far?
 We can hide data inside of other data
We can hide data inside of other data
 We can store 8 bits of data and use 4 bits to 
We can store 8 bits of data and use 4 bits to 
detect and correct
detect and correct
 If we do this for every sample (pixel), it is 
If we do this for every sample (pixel), it is 
easier to detect
easier to detect
 Many near duplicate colors
Many near duplicate colors
 Compressibility changes
Compressibility changes
 So let’s use sparse encoding inside
So let’s use sparse encoding inside
Not Just for Stego
Not Just for Stego
 What use is sparsely encoded data?
What use is sparsely encoded data?
 Covert storage
Covert storage
 Classic-Just stash you bits inside of other data
Classic-Just stash you bits inside of other data
 Covert metadata
Covert metadata
 Stash data about your covertly stashed data
Stash data about your covertly stashed data
 Covert communications channel
Covert communications channel
 Use the stashed data as a signal 
Use the stashed data as a signal 
 For example, is a decoding algorithm or key
For example, is a decoding algorithm or key
 Watermarking
Watermarking
 Stash a unique serial number to track the host data
Stash a unique serial number to track the host data
Ok, so now what?
Ok, so now what?
 Making a frame survive conversion isn’t 
Making a frame survive conversion isn’t 
everything
everything
 What happens when video is resampled?
What happens when video is resampled?
 This entire frame might be skipped or 
This entire frame might be skipped or 
merged with the next frame
merged with the next frame
 But we can use another parity code across 
But we can use another parity code across 
frames
frames
 By adding this extra dimension, we can 
By adding this extra dimension, we can 
survive dropped frames
survive dropped frames
Adding redundant datablocks
Adding redundant datablocks
 Easy to mirror the datablock for three 
Easy to mirror the datablock for three 
continuous frames
continuous frames
 If one frame is dropped, no problem
If one frame is dropped, no problem
 If two frames are merged, no problem
If two frames are merged, no problem
 Just need to be able to identify a datablock
Just need to be able to identify a datablock
 Might be merged with copies of itself (same five 
Might be merged with copies of itself (same five 
frames)
frames)
 Might be merged with next datablock
Might be merged with next datablock
 Likely downsampled and threw out frames
Likely downsampled and threw out frames
Patterns affect compressibility
Patterns affect compressibility
 Encoding datablocks with Hamming code 
Encoding datablocks with Hamming code 
not too obvious
not too obvious
 Mirroring three frames is more obvious
Mirroring three frames is more obvious
 So what we have so far has obvious patterns
So what we have so far has obvious patterns
 XOR or RAID 5 the frames?
XOR or RAID 5 the frames?
 Still survives frame drops
Still survives frame drops
 Arguably less obvious
Arguably less obvious
 If we mirror the first two frames, we can 
If we mirror the first two frames, we can 
add an XOR’d version of the byte in the 
add an XOR’d version of the byte in the 
third frame
third frame
 For second byte we could do the same or 
For second byte we could do the same or 
add the XOR’d version from the previous
add the XOR’d version from the previous
Using three frames to encode xFF
Using three frames to encode xFF
So what do we have now?
So what do we have now?
 An FLV video-each frame is an image
An FLV video-each frame is an image
 Each frame is encoding one bit per pixel 
Each frame is encoding one bit per pixel 
by choosing either even or odd 
by choosing either even or odd 
 Increases near-duplicate colors if we apply 
Increases near-duplicate colors if we apply 
blindly-becomes easy to detect
blindly-becomes easy to detect
 Chances are we will loose near duplicate 
Chances are we will loose near duplicate 
colors during FLV to FLV conversion
colors during FLV to FLV conversion
 Largely prevented by choosing colors well 
Largely prevented by choosing colors well 
(say only encode green pixels)
(say only encode green pixels)
So what do we have now? (2)
So what do we have now? (2)
 Each frame contains a number of 
Each frame contains a number of 
Hamming encoding bytes
Hamming encoding bytes
 The next frame encodes the same bytes in 
The next frame encodes the same bytes in 
the same way
the same way
 The third frame XORs the two previous 
The third frame XORs the two previous 
frames with the XOR result from the 
frames with the XOR result from the 
previous XOR’d frame
previous XOR’d frame
 So we have stego byte correction and 
So we have stego byte correction and 
frame correction.
frame correction.
Automating this in reality
Automating this in reality
 These structures could hold anything
These structures could hold anything
 Put the structures in arbitrary places
Put the structures in arbitrary places
 Some sites mirror
Some sites mirror
 Some thieves plagiarize (almost as good as a 
Some thieves plagiarize (almost as good as a 
mirror)  
mirror)  
 Ask Google to find them when needed
Ask Google to find them when needed
 ““Drive Maintenance” – periodically look up 
Drive Maintenance” – periodically look up 
with Google, upload any necessary pieces 
with Google, upload any necessary pieces 
(to keep redundancy from getting weak)
(to keep redundancy from getting weak)
Alpha Implementation
Alpha Implementation
 StegoFS
StegoFS
 You’ve seen gmailfs—same idea
You’ve seen gmailfs—same idea
 Originally written in Perl with older FLV 
Originally written in Perl with older FLV 
 Rewritten using Python (py-fusefs, py-game, 
Rewritten using Python (py-fusefs, py-game, 
pymedia) 
pymedia) 
 POC only, no intention of maintaining
POC only, no intention of maintaining
 Planning to release by August 2008 at 
Planning to release by August 2008 at 
http://bluenotch.com/resources/
http://bluenotch.com/resources/
Bonus Round
Bonus Round
 We have only talked about LSB stego, what 
We have only talked about LSB stego, what 
about using a relationship to encode bits?
about using a relationship to encode bits?
 Can we build a pattern out of key frames? (key 
Can we build a pattern out of key frames? (key 
frames used to seek)
frames used to seek)
 Two close keyframes = zero, two sparse = one
Two close keyframes = zero, two sparse = one
 FLV’s metadata info frames
FLV’s metadata info frames
 Store more stego
Store more stego
 Store a hash/signature to identify datablock and/or 
Store a hash/signature to identify datablock and/or 
datablock tampering 
datablock tampering 
 I’m not Dan Kaminsky, but if I was I’d stash an 
I’m not Dan Kaminsky, but if I was I’d stash an 
index in somebody else’s DNS …
index in somebody else’s DNS …
Ready for the Paranoia?
Ready for the Paranoia?
 In testing, it became obvious that the fault 
In testing, it became obvious that the fault 
tolerance built into StegoFS revealed patterns
tolerance built into StegoFS revealed patterns
 That is, I could tell _how_ the file was mangled, 
That is, I could tell _how_ the file was mangled, 
and could often rebuild it
and could often rebuild it
 How do you know that your videos are not 
How do you know that your videos are not 
already watermarked?
already watermarked?
 *They* might be able to see where you got if 
*They* might be able to see where you got if 
from, but more importantly _how_ you got it
from, but more importantly _how_ you got it
 Relationships are no longer safe
Relationships are no longer safe
References / For More Info
References / For More Info
 FLV- http://www.adobe.com/devnet/flv/ 
FLV- http://www.adobe.com/devnet/flv/ 
 Hamming code- 
Hamming code- 
http://en.wikipedia.org/wiki/Hamming_code
http://en.wikipedia.org/wiki/Hamming_code
#General_algorithm 
#General_algorithm