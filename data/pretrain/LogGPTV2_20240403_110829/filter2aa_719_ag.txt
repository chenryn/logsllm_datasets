  but	
  speciﬁc	
addiNons	
  to	
  deal	
  with	
  addiNonal	
  I/O	
  needs	
  (like	
  an	
  ARM	
  chip	
  on	
a	
  hard	
  disk	
  controller).	
•  Recognizing	
  these	
  will	
  greatly	
  assist	
  you	
  in	
  analyzing	
  the	
security	
  of	
  the	
  device	
  in	
  cases	
  where	
  you	
  do	
  not	
  know	
  the	
type	
  of	
  component	
  you	
  are	
  dealing	
  with	
  that	
  runs	
  the	
soYware.	
SoUware	
  AOack	
•  Taking	
  Apart	
  the	
  SoUware	
–  Weapon	
  of	
  choice	
•  IDA	
  Pro	
  is	
  most	
  reverse	
  engineer’s	
  weapon	
  of	
  choice.	
•  It	
  will	
  not	
  always	
  unless	
  you	
  know	
  something	
  about	
  what	
  you’re	
  dealing	
  with.	
•  Knowing	
  the	
  chip’s	
  layout	
  and	
  I/O	
  peripheral	
  regions	
  is	
  important.	
•  IDA	
  Pro	
  will	
  ask	
  you	
  about	
  these	
  if	
  it	
  knows	
  the	
  processor	
  in	
  quesDon.	
•  Demo	
–  You	
  may	
  need	
  to	
  write	
  soUware	
  to	
  extract	
  porDons	
  of	
  the	
  ﬁrmware	
before	
  you	
  run	
  it	
  through	
  IDA	
  Pro.	
•  We’re	
  dealing	
  with	
  bare	
  metal	
  here	
  folks!	
•  Some	
  hardware	
  developers	
  are	
  quite	
  invenDve.	
–  They	
  will	
  write	
  their	
  own	
  loader/linker	
  format	
  and	
  no-­‐one	
  else	
  in	
  the	
  world	
  (or	
  their	
  right	
mind)	
  uses	
  it.	
•  This	
  is	
  where	
  your	
  own	
  reverse	
  engineering	
  skill	
  level	
  comes	
  in	
  to	
  play.	
SoUware	
  AOack	
•  Methodical	
  analysis	
  of	
  the	
  hardware	
  by	
  debug	
  interface	
–  Use	
  a	
  JTAG	
  (or	
  other	
  interface)	
  to	
  enumerate	
  interconnecDons	
on	
  devices	
  that	
  are	
  otherwise	
  impossible	
  (BGA/SMT	
  with	
through	
  holes	
  under	
  the	
  components).	
–  JTAG	
  will	
  allow	
  the	
  switching	
  of	
  individual	
  IO	
  lines	
  on	
  and	
  oﬀ	
–  Build	
  a	
  document	
  about	
  the	
  relevant	
  interconnecDons	
•  What’s	
  relevant?	
•  ConnecDons	
  from	
  a	
  main	
  processor	
  unit	
  (MPU)	
  to	
  a	
  ﬂash	
  chip.	
•  ConnecDons	
  form	
  the	
  MPU	
  to	
  a	
  solid	
  state	
  or	
  switching	
  relay	
•  ConnecDons	
  from	
  the	
  MPU	
  to	
  any	
  sub-­‐processors.	
•  ConnecDons	
  from	
  the	
  sub-­‐processors	
  to	
  their	
  controlled	
  devices.	
•  Bus	
  interconnecDons	
  for	
  SPI/I2C/CAN/Single-­‐Wire	
  devices.	
SoUware	
  AOack	
•  IdenDfying	
  major	
  modes	
  of	
  operaDon	
•  Usually	
  are	
  the	
  most	
  basic	
–  Powered	
  On	
–  Standby	
–  Powered	
  Oﬀ	
SoUware	
  AOack	
•  IdenDfy	
  major	
  funcDonal	
  soUware	
  groups	
– Hardware	
  I/O	
  rouDnes	
– Main	
  program	
  logic	
– User	
  interacDon	
  rouDnes.	
– ConﬁguraDon	
  rouDnes.	
– EncrypDon	
  rouDnes.	
SoUware	
  AOack	
•  Enumerate	
  the	
  device’s	
  major	
  funcDonal	
  states	
–  Each	
  type	
  of	
  device	
  will	
  be	
  a	
  bit	
  diﬀerent	
–  An	
  encrypDon	
  device	
  might	
  have:	
•  Not	
  Imprinted	
  /	
  Blank	
•  Provisioned	
  by	
  corporate	
  owner,	
  ready	
  for	
  personalizaDon.	
•  Personal	
  Key	
  generated,	
  device	
  in	
  “secure	
  mode”,	
  device	
  Locked,	
not	
  operaDng.	
•  Personal	
  Key	
  generated,	
  device	
  in	
  “secure	
  mode”,	
  device	
  Unlocked	
and	
  operaDng.	
•  Device	
  Tampered	
•  Device	
  needs	
  provisioning	
  due	
  to	
  CerDﬁcate	
  expiraDon.	
•  Device	
  in	
  Debug	
  Mode	
–  A	
  simple	
  device	
  like	
  a	
  “fan	
  on,	
  fan	
  oﬀ”	
  device	
  might	
  have:	
•  Get	
  packet,	
  turn	
  fan	
  on	
  or	
  oﬀ	
Theory	
•  Theory	
  of	
  OperaDon	
–  Now	
  that	
  we	
  have	
  a	
  great	
  deal	
  of	
  informaDon	
  we	
  can	
analyze	
  it.	
•  We	
  know	
  how	
  the	
  device	
  operates.	
•  We	
  know	
  how	
  it	
  gets	
  input	
  and	
  output.	
•  We	
  have	
  a	
  rough	
  idea	
  of	
  how	
  it	
  will	
  respond	
  to	
  various	
  sDmuli.	
–  Put	
  this	
  into	
  a	
  usable	
  form.	
•  State	
  transiDon	
  and	
  ﬂow	
  diagrams	
  are	
  helpful	
  to	
  visualize	
  possible	
points	
  of	
  weakness.	
–  A	
  summary	
  lisDng	
  of	
  soUware	
  and	
  hardware	
  funcDons.	
•  List	
  of	
  soUware	
  methods	
  and	
  descripDon	
  beside	
  each.	
•  OpenSSL	
•  List	
  of	
  hardware	
  “transacDon”	
  on	
  a	
  SPI	
  Flash	
  ROM.	
•  Microchip	
  Diagram	
Theory	
•  Test	
  the	
  Theory	
  of	
  OperaDon	
– Setup	
  tests	
  to	
  validate	
  your	
  theory	
•  Test	
  for	
  conﬁrmaDon	
  of	
  funcDon.	
•  If	
  you	
  see	
  something	
  unusual,	
  that’s	
  a	
  good	
  place	
  to	
start	
  looking	
  for	
  a	
  weakness.	
– THIS	
  IS	
  WHERE	
  YOU	
  GET	
  TO	
  BREAK	
  STUFF!	
•  So	
  go	
  to	
  it!	
Theory	
•  These	
  tests	
  can	
  be	
  direct	
  tests	
  of	
  tampering	
  with	
informaDon	
  as	
  it	
  ﬂows	
  in	
  an	
  out	
  of	
  the	
  device	
–  Altering	
  I/O	
  states	
  on	
  devices	
–  Changing	
  the	
  contents	
  of	
  ﬂash	
  device	
  or	
  EEPROM.	
–  Causing	
  power	
  state	
  changes	
  (brown	
  out)	
  to	
  reset	
  fuses	
  or	
  cause	
some	
  porDon	
  of	
  the	
  device	
  to	
  reset,	
  while	
  leaving	
  the	
  other	
running	
  (i.e.	
  a	
  MPU	
  reset	
  and	
  a	
  encrypDon	
  sub-­‐processor	
  that’s	
already	
  authenDcated).	
–  Feeding	
  bad	
  network	
  informaDon	
  into	
  the	
  device	
–  Using	
  the	
  TTL	
  serial	
  port	
  to	
  halt	
  the	
  processor	
  and	
  cause	
  Dmeout	
states	
  on	
  I/O	
  peripheral	
  devices.	
–  Changing	
  device	
  programming	
  to	
  do	
  abnormal	
  behaviors	
  under	
some	
  set	
  of	
  condiDons.	
–  AOempt	
  to	
  extract	
  keying	
  material	
  from	
  the	
  device.	
–  So	
  many	
  variants	
Theory	
•  Record	
  the	
  Results	
–  Taking	
  apart	
  hardware	
  and	
  soUware	
  is	
  complex	
  on	
  a	
  good	
  day.	
–  Detailed	
  recording	
  of	
  details	
  as	
  they	
  are	
  noDced	
  will	
  make	
  ﬁnal	
analysis	
  much	
  easier.	
•  Record:	
–  The	
  parts	
  on	
  the	
  device	
–  The	
  interconnecDon	
  of	
  major	
  components	
–  The	
  methods	
  that	
  the	
  soUware	
  uses	
  to	
  use	
  these	
  components	
–  A	
  general	
  theory	
  of	
  operaDon	
  about	
  the	
  device	
•  Issue	
  the	
  Final	
  Report	
–  If	
  this	
  was	
  done	
  to	
  evaluate	
  a	
  device	
  professionally.	
»  Put	
  in	
  an	
  execuDve	
  summary	
»  A	
  list	
  of	
  tests	
  preformed	
»  A	
  list	
  of	
  vulnerabiliDes	
  located	
»  Appendices	
  with	
  all	
  the	
  other	
  relevant	
  detail.	
–  If	
  not,	
  go	
  have	
  a	
  beer!	
  You’ve	
  earned	
  it!	
Methodology	
  Overview	
•  Gather	
  open	
  source	
  informaDon	
  about	
  the	
  device	
  from	
a	
  meta-­‐level.	
•  Open	
  the	
  device	
  up	
  and	
  catalog	
  it.	
•  Gather	
  informaDon	
  about	
  the	
  components.	
•  Examine	
  component	
  circuit	
  net	
  interconnecDons	
•  Extract	
  the	
  soUware	
  and	
  reverse	
  engineer,	
  if	
  possible.	
•  Form	
  theory	
  of	
  operaDon.	
•  Test	
  theory	
  of	
  operaDon	
  by	
  asserDng	
  condiDons	
  and	
observing	
  results.	
•  Document	
  and	
  Report	
  ﬁndings!	
•  Beer.	
QuesDons?