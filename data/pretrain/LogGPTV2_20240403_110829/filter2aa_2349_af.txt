### 63. 使用gf查找开放的重定向漏洞

```bash
apt-get -y install adb jadx apktool
```

**实验室制作翻译出品**

**作者**: @ofjaaah  
**来源**: [链接](link)

这里有一个很酷的单行脚本，可以帮助你找到开放的重定向漏洞。你只需要提供目标域名即可。

#### 该命令的详细作用：
1. 从Wayback Machine中收集目标域名的所有URL。
2. 尝试在100个并行线程中快速下载所有URL，以确定存活的URL。
3. 对于所有存活的URL，匹配任何潜在的易受攻击的参数来打开重定向。
4. 只打印出唯一的、潜在的易受攻击的URL。

为了使这个组合发挥作用，我们必须安装以下工具，这些工具不仅对赏金计划非常有用：

- [waybackurls](https://github.com/tomnomnom/waybackurls)
- [httpx](https://github.com/projectdiscovery/httpx)
- [gf](https://github.com/tomnomnom/gf)
- [Gf-Patterns (redirect gf patterns)](https://github.com/1ndianl33t/Gf-Patterns)
- [anew](https://github.com/tomnomnom/anew)

### 64. 了解网站使用的技术

**作者**: @akita_zen  
**来源**: [链接](link)

这是一个非常酷的单行脚本，可以帮助识别某个网站（或网站列表）使用了什么技术。

它使用Wappalyzer的API，你需要提供的只是一个像这样的URL列表。

```bash
echo "http://tesla.com" | waybackurls | httpx -silent -timeout 2 -threads 100 | gf redirect | anew
```

该命令将产生50个并行实例，以快速处理所有提供的URL，并以最快的速度给我们提供结果。

需要注意的是，为了使这个工作，我们必须安装`parallel`实用程序和`wappylyzer`。

### 65. 使用Axiom进行批量扫描

**作者**: @stokfredrik  
**来源**: [链接](link)

你知道@pry0cc制作的工具Axiom吗？Axiom是一个用shell编写的动态基础设施工具包，适用于红队和bug赏金猎人。

这里有一个bug赏金的小技巧，演示一下你能用它做什么。

```bash
cat urls-alive.txt | parallel -j 50 "echo {}; python3 main.py analyze --url {}"
```

为了使Axiom工作，你必须有一个DigitalOcean API Key（推荐链接）。

**什么是DigitalOcean？**

DigitalOcean是一个云平台，允许你快速部署虚拟机、Kubernetes集群、数据库、存储空间等。它被Axiom用来快速部署基础设施，根据你的需求。

有了Axiom，你可以用最小的成本快速扩展你的几乎所有pentesting活动。

在这里获取Axiom: [Axiom GitHub](https://github.com/pry0cc/axiom)

### 66. 添加%20进入管理面板的技巧

**作者**: @SalahHasoneh1  
**来源**: [链接](link)

这里有一个快速的提示，可以通过篡改URI和添加额外的空格（%20）来帮助访问受限制的区域。

```plaintext
target.com/admin –> HTTP 302 (重定向到登录页面)
target.com/admin%20/ -> HTTP 200 OK
target.com/%20admin%20/ -> HTTP 200 OK
target.com/admin%20/page -> HTTP 200 OK
```

笔者通过这一招，找到了Broken Authentication和Session Management的问题，并在目标Web应用程序中访问了一个管理面板。后端Web服务器是Apache HTTP服务器，但这也可以在其他地方工作。

提示：还请查阅以前发表的与此非常相似的技巧(BBT4-5, BBT4-6)。

### 67. 非标准端口的网络服务器 (Shodan)

**作者**: @s0md3v  
**来源**: [链接](link)

在Shodan中使用下面的查询方式来查找公司运行在“非标准”端口的HTTP服务器。

在这个查询中，我们要找的是运行在80、443或8080以外端口的网络服务器。

```bash
#!/bin/bash
# 启动15个droplets，使用提供的IP，分割并上传到fleet，运行massscan，排序，然后nmap有效目标。完成后，scp下载文件从droplets，生成报告并删除fleet。
axiom-fleet -i=15 -t=2
axiom-scan "uber*" --rate=10000 -p443 --banners -iL=uberips.txt -o=massscanuber.txt
cat massscanuber.txt | awk '{print $2}' | sort -u >>uberalive.txt
axiom-scan "uber*" -iL=uberalive.txt -p443 -sV -sC -T4 -m=nmapx -o=output
axiom-rm "uber*" -f
HTTP ASN: -port:80,443,8080
```

**什么是ASN部分？**

ASN是Autonomous System Number的缩写，它是一个全球唯一的编号，用于识别由单一实体（如网络运营商、CDN、大型互联网公司等）控制的大型可公开路由网络集群。

Facebook、Google等大公司都为其大型网络分配了ASN，甚至是多个ASN。

更多关于ASN的信息可以在维基百科等网站上找到。

如果要查询某个公司的ASN，我们可以使用Amass这样的方式。

Amass通常会找到所有相关的ASN，但我们可以随时挖掘更多，例如这里。

- [ultratools AS Info](https://www.ultratools.com/tools/asnInfo)
- [hackertarget AS IP Lookup](https://hackertarget.com/as-ip-lookup/)
- [ARIN ASN List](ftp://ftp.arin.net/info/asn.txt)

要验证你的ASN是否正确，只需使用whois工具来确保它们真的属于你的目标。

### 68. 使用Shodan和Nuclei引擎进行指纹识别

**作者**: @ofjaaah  
**来源**: [链接](link)

这里有一些使用Shodan和Nuclei扫描引擎的强大指纹技巧。

#### 该命令的详细作用：
1. 从Shodan获取我们目标域名的DNS数据。
2. 从DNS数据中提取IP地址和FQDNs（主机名）列表。
3. HTTP下载全部
4. 在所有找到的网络服务器上运行Nuclei扫描仪。

Nuclei扫描仪提供了非常强大的指纹功能，甚至可以通过检测错误配置、暴露的管理面板、敏感文件、API密钥和令牌，甚至检测未打补丁的CVE，让你轻松赚钱。

```bash
amass intel -org "Netflix"
whois AS2906
whois AS40027
...
shodan domain DOMAIN_TO_BOUNTY | awk '{print $3}' | httpx -silent | nuclei -t /home/ofjaaah/PENTESTER/nuclei-templates/
```

这里是获取这个提示所需的所有材料的地方：

- [shodan-python](https://github.com/achillean/shodan-python)
- [nuclei](https://github.com/projectdiscovery/nuclei)
- [nuclei-templates](https://github.com/projectdiscovery/nuclei-templates)
- [httpx](https://github.com/projectdiscovery/httpx)

### 69. 从任何域名生成自定义词表

**作者**: @hakluke  
**来源**: [链接](link)

你需要为你的目标生成一个词表吗？这里有一个很酷的单行命令，只需要提供目标域名就可以做到。

#### 该命令的详细操作：
**Mac OS**
```bash
echo "bugcrowd.com" | subfinder -silent | hakrawler -plain -usewayback -scope yolo | sed $'s/[:./?=&#:]/\\n/g' | anew
```

**Linux**
```bash
echo "bugcrowd.com" | subfinder -silent | hakrawler -plain -usewayback -scope yolo | sed $'s/[./?=:&#]/\\n/g' | anew
```

#### 详细步骤：
1. 查找目标域名的所有子域。
2. 从公共来源收集所有已确定的子域的URL（+其他相关链接/URL）。
3. 将每一个URL/链接分解成单独的关键词。
4. 只打印出唯一的关键词。

提示：有时你可能想在sed命令中加入额外的字符（如破折号、下划线等），以进一步分解URL，产生更好的关键词。

这就是你需要的所有内容：

- [subfinder](https://github.com/projectdiscovery/subfinder)
- [hakrawler](https://github.com/hakluke/hakrawler)
- [anew](https://github.com/tomnomnom/anew)

### 70. 通过reset token信息泄露接管账户（Burp）

**作者**: @hakluke  
**来源**: [链接](link)

现在，这是一个非常酷的技巧，在测试Web应用时可以尝试一下。

1. 在浏览器中设置Burp代理。
2. 在浏览器1中进行密码重置请求。
3. 在浏览器2中打开密码重置邮件（不含Burp），并复制令牌。
4. 搜索你的Burp历史记录（浏览器1）寻找令牌。如果有的话，你就可以轻松接管账户了！

详细解释：如果你在浏览器1的会话历史记录中找到了令牌，这意味着有时在密码重置行动中，令牌被发送到了浏览器1。

所以，这意味着你真的不需要阅读邮件来重置密码！这意味着你可以请求重置任何账户，并且由于令牌是公开的，你可以在不进入受害者邮箱的情况下重置密码！

### 71. Top 20+ 用于自动化的Burp扩展

**作者**: @harshbothra_  
**来源**: [链接](link)

以下是@harshbothra_收集到的24个Burp扩展名，对找赏金有用。

1. **Autorize** - 用于测试BACs（Broken Access Control）
2. **Burp Bounty** - 基于配置文件的扫描器
3. **Active Scan++** - 为Burp的主动扫描器增加更多功能
4. **AuthMatrix** - 授权/权限提升检查
5. **Broken Link Hijacking** - 用于BLH（Broken Link Hijacking）
6. **Collaborator Everywhere** - Pingback/SSRF（Server-Side Request Forgery）
7. **Command Injection Attacker**
8. **Content-Type Converter** - 通过更改Content-Type绕过某些限制
9. **Decoder Improved** - 更多解码功能
10. **Freddy** - 反序列化
11. **Flow** - 更好的HTTP历史
12. **Hackvertor** - 方便的类型转换
13. **HTTP Request Smuggler**
14. **Hunt** - 潜在漏洞标识器
15. **InQL** - GraphQL Introspection测试
16. **J2EE Scan** - 扫描J2EE应用程序
17. **JSON/JS Beautifier**
18. **JSON Web Token Attacker**
19. **ParamMiner** - 发现隐藏参数
20. **Reflected File Download Checker**
21. **Reflected Parameter** - 潜在反射
22. **SAML Raider** - SAML测试
23. **Upload Scanner** - 文件上传测试
24. **Web Cache Deception Scanner**

所有这些扩展都可以在BApp Store的Extender标签下找到。其中一些是专业扩展，需要授权Burp Suite。其中一些还需要安装Jython。

下面是如何在Burp中安装Jython：

1. 自己从[这里](java -jar jython-installer-2.7.2.jar)下载最新的Jython安装程序并安装。
2. 提供Burp的路径。
   - 进入Extender选项卡 -> Options子选项卡。
   - 在Java环境部分
     - 加载库JAR文件的文件夹（可选）： `/home/user/burp/addons`。
   - 在Python环境部分
     - Jython独立JAR文件的位置： `/home/user/jython2.7.2/jython.jar`。
     - 加载模块的文件夹（可选）： `/home/user/burp/addons`。

现在我们应该可以安装所有这24个Burp扩展。

### 72. 包含敏感信息的Phpinfo()

**作者**: @sw33tLie  
**来源**: [链接](link)

如果你发现了phpinfo()，别忘了看看它！有时你会发现一些有意思的东西，比如包含秘钥的环境变量。有时你也可以找到数据库密码和其他敏感信息。

### 73. 使用Amass追踪攻击面

**作者**: @Jhaddix  
**来源**: [链接](link)

这里有一个有用的提示，告诉你如何管理你的目标攻击面并跟踪新的资产发现。

1. 运行所有的子域工具。
2. Uniq去重他们。
3. 将它们插入到amass数据库中。
4. 然后，你可以通过跟踪每天的新发现。
5. 你也可以设置一个webhook，通过Slack获得通知，让事情自动化。

在这里获取Amass: [Amass GitHub](https://github.com/OWASP/Amass)

```bash
amass enum -d domain.com -nf domains.txt
amass track -d domain.com | grep "Found"
```

### 74. 在密码重置中使用二级邮箱接管账户

**作者**: @infosecsanyam  
**来源**: [链接](link)

希望这些优化后的文本能更好地帮助你理解和使用这些安全工具和技术。