SWRL is not easily understood by humans and the final user of the
grading plug-in would not be able to understand the rules in order to
create new ones and change existing ones. Another problem
associated with SWRL is its limited support. There are not many
inference engines that could interpret SWRL. Other languages, such
as Buchingae (used in Bossom), exist and have full implementation
and are even more easily understood by humans. However, they do
not guarantee continued support.
To solve the main problem of the complexity of SWRL language,
graphical editors for SWRL could be used such as the one used in
Protégé. An editor is helpful in integrating SWRL with existing
ontologies. Additionally, it makes use of a logical form for
representing SWRL which is then mapped into SWRL itself. This is
obviously a generic editor and the user would still need to know how
SWRL works. Another alternative would be to use a simple
18 The Semantic Web and its Applications
mathematical language, such as the one used in Microsoft Excel. This
approach would make sense for heavy mathematical data, which is our
case. However, it would be very difficult to make an interpreter to
convert between SWRL and a mathematical language.
The Grading Ontology has been developed to represent the domain
of an evaluation. It has been made simple so that it could be easily
plugged into existing ontology (in our case it has been adapted for our
RUD). The first class of the ontology is the evaluation. It represents
the domain of the course evaluation. This means that there is one and
only one for each course. An evaluation does not need to be connected
specifically to a course; it can be adapted so it can use other domain
which can be evaluated. The evaluation consists of evaluation items.
These represent specific forms of evaluation within an evaluation
domain, such as exams and projects for instance. The evaluation items
are sub-classed into specify items, there is only one with the grading
ontology – SimpleEvaluation. Other items can be used from the
existing university ontology. In this case we are using Project as an
evaluation item. For each combination of item and student there is one
grade which represents the grade that student had in that evaluation
item for that course. The structure of the Grading Ontology is
illustrated in Figure 2.
Grading Ontology
> >
Course Student
from_Course from_Student
Evaluation grade_Evaluation
-EvaluationName : string
>
Project Grade
-GradeValue : decimal
evaluation_Items
SubClassof
EvaluationItem
SubClassof -EvaluationPercentage : decimal
-ItemName : string
SimpleEvaluation from_Item
Figure 10-6. The grading Ontology
A simple way to look of the problem of the complexity of editing
rules is to look at the problems domains. That is to say to look at
specific cases that could be useful to teacher and developing a simple
editor to achieve an editor for it. One way to do it is to take part of the
Developing Course Management Systems Using Semantic Web 19
Technologies
idea of a graphical editor for rules and a mathematical language and
joining them. The matching strategy is based in developing a simple
editor that generates rules based on a well defined mapping between a
set of simple logical conditions and a rule. These logical conditions
are based on a triple: (Evaluation Item, Boolean Expressing, Value).
For example, the triple (Assignment1, >, 0). Matches contain many of
these conditions that if validated the final grade will be calculated
based on the weights defined for each item on that match. The can be
many matches, one for each evaluation possibility. Figure 4 shows one
specific rule that states that …
Rulebase CalculateGrade
{
rule Case1 is
Grading:from_Course(?Evaluation,RUD:SemWeb)
and Grading:grade_Evaluation(?Grade,?Evaluation)
and Grading:from_Student(?Grade,?Student)
and
Grading:grade_Value(Grading:Assignment1,?Value)
and [?Value>0]
then
FinalGrade(?Student,RUD:SemWeb,
Grading:grade_Value(Grading:Project)*0,1+
Grading:grade_Value(Grading:Exam)*0,9)
rule Case2 is ….
}
Retrieve the Evaluation structure from RUD:SemWeb. Retrieve
the Grade from the Evaluation structure corresponding to a Student.
Retrieve the value (grade) of Assignment1. Check if the value is
greater than one, then the final grade is 10% project and 90% exam.
3. EVALUATION
To validate S-CMS we have carried out a benchmark in order to
assess the scalability and performance of our architecture under
system load. The application was installed at the Department of
Mathematics and Engineering, University of Madeira. Our empirical
experimentation has involved two machines: a server managing SQL
20 The Semantic Web and its Applications
Server 2000 and a client running S-CMS. Both machines had the same
configuration. They were each equipped with Intel P4 3.0 GHz
processors, 512 MB main memory, 40GB 7,800 RPM IDE disks, and
Microsoft Windows XP home. The computers were connected by a
100Mbit/s Ethernet LAN.
The server was managing the University database that had a size of
123 Mbytes with 200 tables and 600 views. The database included the
description of approximately 13 000 students.
The client was running our S-CMS application. Loading the
ontologies from the databases toke approximately 7 minutes and 32
seconds. The number of instances created was equal to the number of
students in the database, i.e., approximately 13 000 instances. The
ontology had a small footprint since we only need to import a subset
of the data present in the database. (+-6 mega)
The results obtained are encouraging since loading an ontology
from a database is inherently a heavy task. The system performance
benchmarking exercise revealed that the proposed solution was able to
scale to meet desired throughput and latency requirements.
4. RELATED WORK
There are many tools dealing with course management which have
been introduced into universities to redesign teaching in many aspects.
These tools include support for teachers (e.g. course delivery and
administration) and students (e.g. submissions and involvement). One
limitation of the tools available is that they were not developed around
the concepts and technologies associated with the semantic Web. As a
result, they tend to be static repositories of information for which
semantic querying and inferencing on students’ data is not possible.
Furthermore, they do not tackle the problem of integrating disparate
university data sources. For example, MIT OpenCourseWare (OCW)
(OCW 2006), WebCT (one of the most widespread commercial course
management systems) (WebCT 2006), AIMS (AIMS 2006), Moodle
(MOODLE 2006), and BSCW (Basic Support for Collaborative
Work) (Klöckner 2000) are educational resource addressing faculty
and students. They offer courseware such as syllabi, readings, and
quizzes. The information available is mainly static and does not
provide features to support querying, inferecing, and data source
integration.
Developing Course Management Systems Using Semantic Web 21
Technologies
Semantics and ontologies have been employed as a common basis
for information integration. Ontologies allow for the modeling of the
semantic structure of individual information sources, as well
describing models of a domain that are independent of any particular
information source. Several systems have been developed using this
approach. Projects include Carnot (Woelk, Cannata et al. 1993),
InfoSleuth (Bayardo, Bohrer et al. 1997), OBSERVER (Mena,
Kashyap et al. 1996; Kashyap and Sheth 1998), and COIN (Bressan,
Fynn et al. 1997). These projects differ from our work since they do
not target a specific domain (i.e. University modeling) and they do not
provide solutions to carry out inference on the ontologies created.
5. CONCLUSION
The development of the semantic Web has the potential to
revolutionize the World Wide Web and its use. One fundamental
aspect that will have a significant impact on the success of the
semantic Web will be the ability of the research community to
demonstrate the added value of using semantic Web technologies to
develop better systems and applications. For the time being, the
industry has adopted a “wait-and-see” approach to see how real-world
applications can benefit from the semantic Web.
As a contribution to increasing the widespread use of these new
technologies, we have developed a real-world application, a Semantic
Course Management System (S-CMS), based entirely on semantic
Web technologies. S-CMS can semantically integrate and extract
heterogeneous data describing university resources, courses, degrees,
and students, answer to complex semantic queries, and it is able to
carry out reasoning using explicit semantic rules. The system supplies
an integrated environment where teachers and students can easily
manage class projects. The application presented has been employed
successfully to manage student enrolment to class projects at the
University of Madeira. Since S-CMS deals with heavily on semantics,
the system was used to manage projects from the “Semantic Web”
course taught at the Department of Mathematics and Engineering. We
believe that S-CMS is also appropriate to support course projects from
other departments and that it represents a good step towards the
development of real-world semantic applications.
22 The Semantic Web and its Applications
6. QUESTIONS FOR DISCUSSION
Beginner:
1. What typical data sources need to be integrated when developing a
CMS?
2. .What is a RUD?
3. .What is a SUD?
Intermediate:
1. What types of information heterogeneity may arise when
integrating data sources?
2. What difficulties have been found when in creating and populating
the ontology described in this chapter?
Advanced:
1. Make an ontology for representing people of your business or
organizations.
2. Build a Buchingae rule that states that only staff members that
work on internal and external projects are eligible for travel
funding.
3. Write an RDQL that selects the staff members that work in the
research department.
7. SUGGESTED ADDITIONAL READING
• Antoniou, G. and van Harmelen, F. A semantic Web primer.
Cambridge, MA: MIT Press, 2004. 238 pp.: This book is a good
introduction to Semantic Web languages.
• Davies, J., Studer, R., and Warren, P. Semantic Web Technologies:
Trends and Research in Ontology-based Systems. John Wiley &
Sons, 2006, 326 pp.: This book provides a comprehensive
overview of key semantic technologies. It includes the description
of concepts such as knowledge management, ontology generation,
and metadata extraction.
• Berners-Lee. T., Fensel, D., Hendler, J., Lieberman, H., Wahlster,
W. Spinning the Semantic Web: Bringing the World Wide Web to
Its Full Potential. The MIT Press, 2005. 503 pp.: This book covers
topics such as software agents, markup languages, and knowledge
systems that enable machines to read Web pages and determine
their reliability.
Developing Course Management Systems Using Semantic Web 23
Technologies
8. REFERENCES
AIMS (2006). AIMS: Adaptive Information System for Management of Learning
Content. http://www.win.tue.nl/~laroyo/AIMS/.
Bayardo, R. J., W. Bohrer, et al. (1997). InfoSleuth: Agent-Based Semantic
Integration of Information in Open and Dynamic Environments.
Proceedings of the ACM SIGMOD International Conference on
Management of Data, ACM Press, New York.
Berners-Lee, T., J. Hendler, et al. (2001). The Semantic Web. Scientific American.
May 2001.
Bossom (2005). Bossom engine for the semantic Web,
http://projects.semwebcentral.org/projects/bossam/.
Bressan, S., K. Fynn, et al. (1997). The COntext INterchange Mediator Prototype.
ACM SIGMOD International Conference on Management of Data, Tucson,
Arizona.
Cardoso, J. (2004). Issues of Dynamic Travel Packaging using Web Process
Technology. International Conference e-Commerce 2004, Lisbon, Portugal.
Cardoso, J., J. Miller, et al. (2005). Academic and Industrial Research: Do their
Approaches Differ in Adding Semantics to Web Services. Semantic Web
Process: powering next generation of processes with Semantics and Web
services. J. Cardoso and S. Amit. Heidelberg, Germany, Springer-Verlag.
3387: 14-21.
Eclipse (2005). Eclipse open source community, http://www.eclipse.org/.
FOP (2005). FOP (Formatting Objects Processor), http://xmlgraphics.apache.org/fop/.
2005.
Ian Horrocks, Peter F. Patel-Schneider, et al. (2003). SWRL: A Semantic Web Rule
Language Combining OWL and RuleML,
http://www.daml.org/2003/11/swrl/.
Jasper, R. and M. Uschold (1999). A framework for understanding and classifying
ontology applications. IJCAI99 Workshop on Ontologies and Problem-
Solving Methods.
Jena (2005). Jena - A Semantic Web Framework for Java,
http://jena.sourceforge.net/,.
Karvounarakis, G., S. Alexaki, et al. (2002). RQL: a declarative query language for
RDF. Eleventh International World Wide Web Conference, Honolulu,
Hawaii, USA.
Kashyap, V. and A. Sheth (1998). Semantic Heterogeneity in Global Information
Systems: The Role of Metadata, Context and Ontologies, Academic Press.
Klöckner, K. (2000). BSCW - Educational Servers and Services on the WWW,
Adelaide.
Knublauch, H., R. W. Fergerson, et al. (2004). The Protégé OWL Plugin: An Open
Development Environment for Semantic Web Applications. Third
International Semantic Web Conference (ISWC 2004), Hiroshima, Japan.
Kumar, A. and B. Smith (2004). On Controlled Vocabularies in Bioinformatics: A
Case Study in Gene Ontology. Drug Discovery Today: BIOSILICO. 2: 246-
252.
Lassila, O. and D. McGuinness (2001). "The Role of Frame-Based Representation on
the Semantic Web." Linköping Electronic Articles in Computer and
Information Science 6(5).
24 The Semantic Web and its Applications
Lawrence, R. and K. Barker (2001). Integrating Data Sources Using a Standardized
Global Dictionary. Knowledge Discovery for Business Information
Systems. J. M. Zurada, Kluwer Academic Publishers: 153-172.
Mandal, C., V. L. Sinha, et al. (2004). "Web-based Course management and Web
Services." Electronic Journal of e-Learning 2(1): 135-144.
Meinel, C., H. Sack, et al. (2002). Course management in the twinkle of an eye -
LCMS: a professional course management system. Proceedings of the 30th
annual ACM SIGUCCS conference on User services, Providence, Rhode
Island, USA, ACM Press.
Mena, E., V. Kashyap, et al. (1996). OBSERVER: An Approach for Query Processing
in Global Information Systems based on Interoperation across Pre-existing
Ontologies. Conference on Cooperative Information Systems, Brussels,
Belgium, IEEE Computer Society Press.
MOODLE (2006). Modular Object-Oriented Dynamic Learning Environment
(moodle), http://moodle.org/.
OCW (2006). OpenCourseWare. http://ocw.mit.edu/index.html, MIT.
Ouskel, A. M. and A. Sheth (1999). "Semantic Interoperability in Global Information
Systems. A brief Introduction to the Research Area and the Special
Section." SIGMOD Record 28(1): 5-12.
OWL (2004). OWL Web Ontology Language Reference, W3C Recommendation,
World Wide Web Consortium, http://www.w3.org/TR/owl-ref/. 2004.
OWL-S (2004). OWL-based Web Service Ontology. 2004.
RDQL (2005). Jena RDQL, http://jena.sourceforge.net/RDQL/.
Roure, D., N. Jennings, et al. (2001). Research Agenda for the Future Semantic Grid:
A Future e-Science Infrastructure
http://www.semanticgrid.org/v1.9/semgrid.pdf.
RSS (2005). RSS 2.0 Specification, http://blogs.law.harvard.edu/tech/rss.
Sheth, A. (1998). Changing Focus on Interoperability in Information Systems: From
System, Syntax, Structure to Semantics. Interoperating Geographic
Information Systems. M. F. Goodchild, M. J. Egenhofer, R. Fegeas and C.
A. Kottman, Kluwer, Academic Publishers: 5-30.
Sheth, A. P. (1999). Changing Focus on Interoperability in Information Systems:
From System, Syntax, Structure to Semantics. Interoperating Geographic
Information Systems. C. A. Kottman, Kluwer Academic Publisher: 5-29.
Shum, S. B., E. Motta, et al. (2000). "ScholOnto: an ontology-based digital library
server for research documents and discourse." International Journal on
Digital Libraries 3(3): 237-248.
Swoogle (2005). Search and Metadata for the Semantic Web -
http://swoogle.umbc.edu/.
WebCT (2006). http://www.webct.com/.
Woelk, D., P. Cannata, et al. (1993). Using Carnot for enterprise information
integration. Second International Conference on Parallel and Distributed
Information Systems.