### Title: Monitoring Surveillance Vendors: A Deep Dive into In-the-Wild Android Full Chains in 2021

Over the past 12 months, Google's Threat Analysis Group (TAG) and Android Security teams have identified and analyzed several in-the-wild 1-day and 0-day exploits developed by surveillance vendors. This presentation will cover browser and kernel Local Privilege Escalation (LPE) exploits discovered in 2021, including CVE-2021-28663 (Mali GPU), CVE-2020-16040/CVE-2021-38000 (Browser), CVE-2021-1048 (Linux kernel), and CVE-2021-0920 (Linux kernel).

**CVE-2021-0920**: This is an in-the-wild 0-day Linux kernel garbage collection vulnerability. Unlike the other mentioned exploits, this vulnerability is more sophisticated and less well-known. We will provide a detailed analysis of the CVE-2021-0920 exploit, including its attribution. Additionally, we will introduce a novel and previously unseen in-the-wild kernel exploitation technique that fully bypasses a hardware-level mitigation.

Among the commercial exploit vendors responsible for these in-the-wild exploits, one vendor, specifically the developer of CVE-2021-0920, has drawn particular attention. We have attributed multiple Android 0-day and 1-day exploit samples to this vendor, including attempts to submit malicious apps to the Google Play store and early use of the Bad Binder exploit. Our analysis of the vendor's exploits revealed a full chain in-the-wild targeting Android devices. The exploit chain leverages 1-day/nday browser exploits (CVE-2020-16040/CVE-2021-38000) and the 0-day CVE-2021-0920 to achieve remote root access on Android devices.

After our report to the Linux kernel community, the 0-day was fixed in September 2021 as CVE-2021-0920. Further research indicates that this vulnerability was previously discovered in 2016 and reported on the Linux Kernel Mailing List, but the patch was rejected by the Linux kernel community.

For devices with the hardware-level CONFIG_ARM64_UAO mitigation enabled, the vendor developed a novel method (distinct from ret2bpf) to carefully circumvent the mitigation after tampering with the addr_limit. The rich functionality of the post-pwn Rootkits further enhances the evasiveness of the exploit.