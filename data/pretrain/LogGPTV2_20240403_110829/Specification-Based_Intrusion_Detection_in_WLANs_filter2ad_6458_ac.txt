### Security Constraints and Monitoring

- **Port-Based Access Control**: If the policy mandates port-based access control, this requirement must be enforced.
- **AES Link Layer Encryption**: As with the RSN (Robust Secure Network) requirement, the monitor evaluates the RSN Information Element (IE) to ensure that AES is the only supported pairwise cipher suite. The list of permitted and prohibited encryption algorithms is provided to the sensor via runtime configuration directives.
- **EAP-TLS for Authentication**: For stations in state 6, the monitor checks that any EAP Request frames destined for the monitored STA (Station) contain an EAP-Type of EAP-TLS. A more sophisticated monitoring capability could be implemented by adding EAP method-specific states to the state transition model, ensuring the EAP method executes as expected. This approach has limited utility when tunnelled EAP methods are employed, as these methods are executed over encrypted links and are not passively observable.

For each STA, the sensor checks the security constraints whenever it transitions between states. Any violation of these security constraints is raised as an alarm, indicating a breach of the site security policy.

### Experimentation

A series of experiments were conducted with the following objectives:
1. To establish the feasibility and reliability of the proposed specification-based intrusion detection technique.
2. To perform a comparative analysis to demonstrate the effectiveness of the proposed technique against other wireless intrusion detection techniques.
3. To determine the impact of sensor location on the reliability and effectiveness of the proposed technique.
4. To demonstrate the policy compliance monitoring capabilities of the technique.

#### 5.1. Methodology and Setup

The experimental setup included six nodes: an STA, an AP (Access Point), an attacker, and three sensors. A Robust Secure Network (RSN) was established using `hostapd` software running on a Linux laptop as the AP. A Windows XP PC served as the STA. Three Linux laptops functioned as passive sensors, and another Linux laptop acted as the attacking station. For comparative analysis, Snort-Wireless, an open-source wireless IDS, was used with its default settings. A custom Snort-Wireless preprocessor (State-Transition-Processor) was developed to process all WLAN events observed by the sensors and detect violations of the site security policy. Additionally, a custom tool named `zaildar` was developed to inject arbitrary frames into the WLAN for the experiments.

To achieve the experimental goals, the tests were divided into three sets: Set1, Set2, and Set3.

- **Set1 Experiments**: Various DoS (Denial of Service) attacks were launched against established associations by spoofing the MAC addresses of the legitimate AP or STA. A data exchange was established between the legitimate STA and AP after setting up a secure association (SA) to make the effects of the DoS attacks evident.
- **Set2 Experiments**: MAC spoofing-based attacks were launched against the WLAN infrastructure by random STAs, where no SA existed between the random STAs and the AP. All attacks involving masquerading the STA source MAC from Set1 were also executed in Set2.
- **Set3 Experiments**: These experiments aimed to determine the false positive rate of the proposed technique in the absence of attack traffic and to demonstrate the ability to provide policy compliance monitoring. After establishing an SA, a data exchange was initiated between the STA and the AP, and the sensors monitored this normal WLAN activity. For policy compliance testing, the AP was reconfigured to implement an Open Network instead of an RSN, and the sensors monitored another data exchange between the STA and the AP. The Open Network does not require authentication and only requires the STA to be in state 4 to perform data exchange with the AP.

To assess the proposed technique's ability to handle varying levels of frame loss, three sensors were placed at increasing distances from the AP and STA. It was hypothesized that as the distance increased, the false positive rate would rise due to frame loss. The AP, STA, attacker, and Sensor1 were placed in one lab room, close to each other. Sensor2 was placed in another lab room about 20 meters away, and Sensor3 was placed further away, approximately 50 meters from the AP in another room. Traffic captures were obtained from each sensor during the attacks, saved in separate files, and processed offline by the State-Transition-Processor. The experiments were conducted in a busy RF environment with numerous active WLANs, resulting in the capture of both noise and relevant attack traffic.

For comparative analysis, Snort-Wireless was used with its default settings, including the `macspoof`, `authflood`, and `deauthflood` preprocessors. This setup is referred to as Snort-Wireless-Default. A comparative study was performed on the detection capabilities of Snort-Wireless-Default and the custom State-Transition-Processor.

#### 5.2. Choosing Thresholds

To effectively manage the rate of false negatives and false positives, thresholds were implemented for the State-Transition-Processor. These thresholds, referred to as indices of suspicion, were determined through empirical analysis of WLAN traffic and reasonable considerations. A threshold value of 5 was used for negative state shift, zero state shift, and unexpected frame tolerance. The positive state shift tolerance threshold was set to 2. Post-hoc analysis confirmed the effectiveness of these thresholds in minimizing false negatives and false positives.

#### 5.3. Results and Observations

This section presents the results and observations from executing the State-Transition-Processor and Snort-Wireless-Default on captures obtained from Set1, Set2, and Set3 experiments.

- **Set1 Experiments**: The macspoof preprocessor of Snort-Wireless-Default generated numerous false alerts, making it unsuitable for our experiments. Tables 2 and 3 show the results of executing the State-Transition-Processor and Snort-Wireless-Default over captures from the three sensors for each attack in Set1. The State-Transition-Processor correctly classified all attacks, while Snort-Wireless-Default only detected and classified deauthentication flooding and authentication flood attacks.

- **Set2 Experiments**: For all attacks in Set2, the State-Transition-Processor raised type Zero alarms. Exceptions were the Authentication Flood attack, which generated unexpected frame and unexpected frame flood alarms, and the Association Flood and EAP-Failure Flood attacks, which resulted in unexpected frame and unexpected frame flood alarms.

- **Set3 Experiments**: These experiments demonstrated the false positive rate and policy compliance monitoring capabilities. The State-Transition-Processor successfully detected policy violations when the AP was reconfigured to an Open Network.

In summary, the State-Transition-Processor outperformed Snort-Wireless-Default in detecting and classifying a wide range of attacks, demonstrating its effectiveness in wireless intrusion detection and policy compliance monitoring.