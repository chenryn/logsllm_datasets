### Optimized Text

The maximum padding area tested (M=20px, Group 4c) resulted in a further reduction of the first-mouseover attack success rate to 12 out of 73 (16%). The reduction in first-mouseover attack success rates between Groups 4a and 4b was statistically significant (p=0.0155), as was the reduction from Groups 4b to 4c (p=0.0151). Additionally, adding a 10px padding area reduced the unfiltered attack success rate from 76 out of 77 (98%) in Group 4a to 67 out of 78 (85%) in Group 4b. A 20px padding area further reduced the unfiltered attack success rate to 51 out of 73 (69%) in Group 4c. The reduction in unfiltered attack success rates between Groups 4a and 4b was also statistically significant (p=0.0046), as was the reduction from Groups 4b to 4c (p=0.0191). Therefore, larger padding areas provide noticeably better clickjacking protection.

Participants in Group 5 received the defense of Group 4c enhanced with a lightbox, which further decreased the first-mouseover attack effectiveness to 10 out of 73 (13%). However, the difference in first-mouseover success rates between Group 4c and Group 5 was not statistically significant (p=0.8176).

It is important to note that there is a significant discrepancy between the first-mouseover attack success and the survey-filtered attack success. Upon manual analysis of event logs, we found that many users answered the survey questions inaccurately. For example, some participants claimed they did not click on the Like button and would not approve such an action, but the logs showed that while their initial click was blocked by our defense, they continued moving the mouse around for several seconds before finally clicking the Like button. This suggests that while these users' answers indicated that clickjacking protection should have stopped them, our defenses were ineffective in these scenarios.

Participants in Groups 6a-d were protected by the pointer-entry delay defense described in Section 5.2: if the user clicks within a duration of TE ms after the pointer enters the target region, the click is invalid. In Groups 6a and 6b, we tested pointer entry delays of TE=250ms and TE=500ms, respectively, with an appearance delay of TA=500ms and a padding area of M=20px, as in Group 4c. Both cases showed that the addition of pointer entry delay was highly effective. Only 3 out of 73 (4%) participants in Group 6b still clicked on the target button. We found a significant difference in attack success rates between Groups 4c and 6b (p=0.0264), indicating that the pointer entry delay helps prevent clickjacking attacks compared to no pointer entry delays.

We then tested a more extreme pointer entry delay of TE=1000ms, where the appearance delay TA must also be at least 1000ms. This was the most successful in preventing clickjacking, with only 1 out of 71 (1%) participants falling for the attack. We also tested a pointer entry delay of TE=500ms without a padding area (M=0px), which allowed 16 out of 77 (20%) participants in Group 6d to fall for the attack. The difference in first-mouseover success rates between Groups 6b and 6d was significant (p=0.0026), suggesting that attacks are much more effective when there is no padding area around the target.

Finally, in Group 7, we tested the lightbox effect in addition to the settings of Group 6b. The attack succeeded on 6 out of 73 (8%) participants in Group 7, and the difference between Groups 6b and 7 was not statistically significant (p=0.4938).

Overall, our results indicate that pointer entry delay is crucial in reducing the first-mouseover success rate, which is a key part of the attack's efficacy that can be addressed by clickjacking defenses. Thus, it is an important technique that should be included in a browser’s clickjacking protection suite, alongside freezing with a sufficiently large padding area and pointer re-entry protection. The pointer entry delay can replace the appearance delay, except for devices that lack pointer feedback, where an appearance delay may still be useful against touch-based attacks like whack-a-mole.

### Ethics
The ethical aspects of our study were reviewed according to our research institution’s requirements. No participants were actually attacked during the experiments; the images they were tricked into clicking appeared identical to sensitive third-party embedded content elements but were harmless replicas. However, participants may have realized they had been tricked, which could potentially cause anxiety. Therefore, after the simulated attack, we disclosed the nature of the simulation and explained that it was harmless.

### Conclusion
We have developed new clickjacking attack variants that bypass existing defenses and cause more severe harm, such as compromising webcams, user data, and web surfing anonymity. To fundamentally defend against clickjacking, we proposed InContext, a web browser or OS mechanism to ensure that a user’s action on a sensitive UI element is in context, maintaining visual and temporal integrity.

Our user studies on Amazon Mechanical Turk show that our attacks are highly effective, with success rates ranging from 43% to 98%. Our InContext defense is very effective against clickjacking attacks, especially those that improve attack effectiveness through the use of clickjacking.

This paper made the following contributions:
- We provided a survey of existing clickjacking attacks.
- We conducted the first user study on the effectiveness of clickjacking attacks and defenses.
- We introduced the concept of context integrity and used it to define and characterize clickjacking attacks and their root causes.
- We designed, implemented, and evaluated InContext, a set of techniques to maintain context integrity and defeat clickjacking.

Based on these results, we advocate for browser vendors and client OS vendors to consider adopting InContext.

### Acknowledgments
We are grateful to Adam Barth, Dan Boneh, Elie Bursztein, Mary Czerwinski, Carl Edlund, Rob Ennals, Jeremiah Grossman, Robert Hansen, Brad Hill, Eric Lawrence, Giorgio Maone, Jesse Ruderman, Sid Stamm, Zhenbin Xu, Michal Zalewski, and the Security and Privacy Research Group at Microsoft Research for reviewing and providing feedback on this work.

### References
[References remain unchanged]

---

This optimized text maintains the original content while improving clarity, coherence, and professionalism.