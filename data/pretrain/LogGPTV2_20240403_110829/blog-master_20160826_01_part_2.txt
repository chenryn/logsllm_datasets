INFO: start deleting old backup (keep after = 2016-08-16 00:00:00)  
INFO: does not include the backup just taken  
WARNING: backup "2016-08-26 19:39:32" is not taken int account  
DETAIL: This is not valid backup.  
```
## 校验备份集  
备份时pg_rman会记录每个备份文件的crc，以便validate进行校验。    
例如某个备份集  
```
$ less /data05/digoal/pgbbk/20160826/195809/file_database.txt  
.s.PGSQL.1921 ? 0 0 0777 2016-08-26 19:27:05  
.s.PGSQL.1921.lock f 55 590164837 0600 2016-08-26 19:27:05  
PG_VERSION f 12 3872055064 0600 2016-07-28 10:03:42  
backup_label f 167 2985542389 0600 2016-08-26 19:58:42  
backup_label.old f 155 4273989468 0600 2016-08-23 19:43:32  
base d 0 0 0700 2016-08-23 10:28:32  
base/1 d 0 0 0700 2016-08-24 16:17:02  
base/1/112 f 57 1147028285 0600 2016-07-28 10:03:42  
base/1/113 f 57 1147028285 0600 2016-07-28 10:03:42  
base/1/1247 F 8178 1875285513 0600 2016-07-29 13:51:29  
base/1/1247_fsm f 139 3668812536 0600 2016-07-28 10:03:43  
```
解释  
路径，文件类型，大小，CRC校验值，权限，时间  
第四列即crc校验值  
每次备份完，必须要做一次校验，否则备份集不可用用来恢复，增量备份时也不会用它来做增量比较。    
```
$ /home/digoal/pgsql9.5/bin/pg_rman validate -B /data05/digoal/pgbbk  
INFO: validate: "2016-08-26 19:39:50" backup, archive log files and server log files by CRC  
INFO: backup "2016-08-26 19:39:50" is valid  
```
每个备份集都包含了一个备份状态文件，如下    
```
cat /data05/digoal/pgbbk/20160826/201955/backup.ini
# configuration
BACKUP_MODE=INCREMENTAL
FULL_BACKUP_ON_ERROR=false
WITH_SERVERLOG=true
COMPRESS_DATA=true
# result
TIMELINEID=1
START_LSN=46/df000108
STOP_LSN=46/df000210
START_TIME='2016-08-26 20:19:55'
END_TIME='2016-08-26 20:20:48'
RECOVERY_XID=3896508593
RECOVERY_TIME='2016-08-26 20:20:47'
TOTAL_DATA_BYTES=6196524307
READ_DATA_BYTES=3199287520
READ_ARCLOG_BYTES=33554754
READ_SRVLOG_BYTES=0
WRITE_BYTES=125955
BLOCK_SIZE=8192
XLOG_BLOCK_SIZE=8192
STATUS=OK
```
这个文件中包含了很重要的信息，比如LSN，后面LSN将用于比对增量备份时对比数据块的LSN是否发生了变化，是否需要备份。  
## 增量备份  
```
$ export PGPASSWORD=postgres  
$ /home/digoal/pgsql9.5/bin/pg_rman backup \  
-B /data05/digoal/pgbbk \  
-D /data04/digoal/pg_root \  
-b incremental \  
-s \  
-Z \  
-C \  
--keep-data-days=10 \  
--keep-arclog-files=15 \  
--keep-arclog-days=10 \  
--keep-srvlog-files=10 \  
--keep-srvlog-days=15 \  
-h 127.0.0.1 -p 1921 -U postgres -d postgres  
```
增量备份输出  
```
INFO: copying database files  
NOTICE:  pg_stop_backup complete, all required WAL segments have been archived  
INFO: copying archived WAL files  
INFO: copying server log files  
INFO: backup complete  
HINT: Please execute 'pg_rman validate' to verify the files are correctly copied.  
INFO: start deleting old archived WAL files from ARCLOG_PATH (keep files = 15, keep days = 10)  
INFO: the threshold timestamp calculated by keep days is "2016-08-16 00:00:00"  
INFO: start deleting old server files from SRVLOG_PATH (keep files = 10, keep days = 15)  
INFO: the threshold timestamp calculated by keep days is "2016-08-11 00:00:00"  
INFO: start deleting old backup (keep after = 2016-08-16 00:00:00)  
INFO: does not include the backup just taken  
INFO: backup "2016-08-26 19:39:50" should be kept  
DETAIL: This is taken after "2016-08-16 00:00:00".  
WARNING: backup "2016-08-26 19:39:32" is not taken int account  
DETAIL: This is not valid backup.  
```
## 校验备份集  
```
$ /home/digoal/pgsql9.5/bin/pg_rman validate -B /data05/digoal/pgbbk  
INFO: validate: "2016-08-26 19:43:20" backup, archive log files and server log files by CRC  
INFO: backup "2016-08-26 19:43:20" is valid  
```
## 列出备份集  
```
$ /home/digoal/pgsql9.5/bin/pg_rman show -B /data05/digoal/pgbbk  
==========================================================  
 StartTime           Mode  Duration    Size   TLI  Status   
==========================================================  
2016-08-26 19:43:20  INCR        0m    54kB     1  OK  
2016-08-26 19:39:50  FULL        1m   245MB     1  OK  
```
可以看到增量非常小，因为很少变化的块。  
接下来更新一张大表的某一条记录，再看看。    
```
postgres=# \dt+  
                      List of relations  
 Schema |   Name   | Type  |  Owner   |  Size   | Description   
--------+----------+-------+----------+---------+-------------  
 public | hll_test | table | postgres | 208 kB  |   
 public | t        | table | postgres | 3050 MB |   
 public | tbl1     | table | postgres | 226 MB  |   
 public | tbl2     | table | postgres | 63 MB   |   
 public | test     | table | postgres | 120 MB  |   
(5 rows)  
postgres=# with t1 as (select id from t where id between 1 and 1000 limit 10) update t set info='new' where id in (select * from t1);  
UPDATE 10  
```
更新后做一个增量备份  
```
$ /home/digoal/pgsql9.5/bin/pg_rman backup -B /data05/digoal/pgbbk -D /data04/digoal/pg_root -b incremental -s -Z -C --keep-data-days=10 --keep-arclog-files=15 --keep-arclog-days=10 --keep-srvlog-files=10 --keep-srvlog-days=15 -h 127.0.0.1 -p 1921 -U postgres -d postgres  
INFO: copying database files  
NOTICE:  pg_stop_backup complete, all required WAL segments have been archived  
INFO: copying archived WAL files  
INFO: copying server log files  
INFO: backup complete  
HINT: Please execute 'pg_rman validate' to verify the files are correctly copied.  
INFO: start deleting old archived WAL files from ARCLOG_PATH (keep files = 15, keep days = 10)  
INFO: the threshold timestamp calculated by keep days is "2016-08-16 00:00:00"  
INFO: start deleting old server files from SRVLOG_PATH (keep files = 10, keep days = 15)  
INFO: the threshold timestamp calculated by keep days is "2016-08-11 00:00:00"  
INFO: start deleting old backup (keep after = 2016-08-16 00:00:00)  
INFO: does not include the backup just taken  
INFO: backup "2016-08-26 19:58:09" should be kept  
DETAIL: This is taken after "2016-08-16 00:00:00".  
WARNING: backup "2016-08-26 19:56:54" is not taken int account  
DETAIL: This is not valid backup.  
INFO: backup "2016-08-26 19:43:20" should be kept  
DETAIL: This is taken after "2016-08-16 00:00:00".  
INFO: backup "2016-08-26 19:39:50" should be kept  
DETAIL: This is taken after "2016-08-16 00:00:00".  
WARNING: backup "2016-08-26 19:39:32" is not taken int account  
DETAIL: This is not valid backup.  
```
校验备份集  
```
[digoal@iZ28tqoemgtZ pg_rman]$ /home/digoal/pgsql9.5/bin/pg_rman validate -B /data05/digoal/pgbbk  
INFO: validate: "2016-08-26 20:19:55" backup, archive log files and server log files by CRC  
INFO: backup "2016-08-26 20:19:55" is valid  
```
输出当前备份  
```
[digoal@iZ28tqoemgtZ pg_rman]$ /home/digoal/pgsql9.5/bin/pg_rman show -B /data05/digoal/pgbbk  
==========================================================  
 StartTime           Mode  Duration    Size   TLI  Status   
==========================================================  
2016-08-26 20:19:55  INCR        0m   125kB     1  OK  
2016-08-26 19:58:09  FULL       11m  3094MB     1  OK  
2016-08-26 19:56:54  FULL        1m      0B     0  ERROR  
2016-08-26 19:43:20  INCR        0m    54kB     1  OK  
2016-08-26 19:39:50  FULL        1m   245MB     1  OK  
2016-08-26 19:39:32  FULL        0m      0B     0  ERROR  
```
增量备份的文件非常小，因为变化的数据块很少。  
## 按指定时间从catalog删除备份集  
例如我只需要我的备份集能恢复到2016-08-26 19:59:00，在这个时间点以前，不需要用来恢复到这个时间点的备份全删掉。    
```
$ /home/digoal/pgsql9.5/bin/pg_rman delete "2016-08-26 19:59:00" -B /data05/digoal/pgbbk  
WARNING: cannot delete backup with start time "2016-08-26 19:58:09"  
DETAIL: This is the latest full backup necessary for successful recovery.  
INFO: delete the backup with start time: "2016-08-26 19:56:54"  
INFO: delete the backup with start time: "2016-08-26 19:43:20"  
INFO: delete the backup with start time: "2016-08-26 19:39:50"  
INFO: delete the backup with start time: "2016-08-26 19:39:32"  
```
保留的备份集合可以将数据库恢复到2016-08-26 19:59:00  
```
$ /home/digoal/pgsql9.5/bin/pg_rman show -B /data05/digoal/pgbbk  
==========================================================  
 StartTime           Mode  Duration    Size   TLI  Status   
==========================================================  
2016-08-26 20:19:55  INCR        0m   125kB     1  OK  
2016-08-26 19:58:09  FULL       11m  3094MB     1  OK  
```
## 物理删除已从catalog删除的备份集  
```
$ /home/digoal/pgsql9.5/bin/pg_rman purge -B /data05/digoal/pgbbk  
INFO: DELETED backup "2016-08-26 19:56:54" is purged  
INFO: DELETED backup "2016-08-26 19:43:20" is purged  
INFO: DELETED backup "2016-08-26 19:39:50" is purged  
INFO: DELETED backup "2016-08-26 19:39:32" is purged  
```
## 恢复  
后续在写   
## pg_rman 源码浅析  
1\. 增量备份代码  
上次备份以来，数据块的LSN是否发生了变化，如果自从上次备份的start_lsn以来没有发生变化，则不备份。  
代码举例  
```
                else  
                {  
                        pgBackupGetPath(prev_backup, prev_file_txt, lengthof(prev_file_txt),  
                                DATABASE_FILE_LIST);  
                        prev_files = dir_read_file_list(pgdata, prev_file_txt);  
                        /*  
                         * Do backup only pages having larger LSN than previous backup.  
                         */  
                        lsn = &prev_backup->start_lsn;  
                        xlogid = (uint32) (*lsn >> 32);  
                        xrecoff = (uint32) *lsn;  
                        elog(DEBUG, _("backup only the page updated after LSN(%X/%08X)"),  
                                                        xlogid, xrecoff);  
                }  
...
                /* backup files from non-snapshot */
                pgBackupGetPath(&current, path, lengthof(path), DATABASE_DIR);
                backup_files(pgdata, path, files, prev_files, lsn, current.compress_data, NULL);
```
2\. 备份结果backup.ini相关代码
```
# configuration  
BACKUP_MODE=FULL  
FULL_BACKUP_ON_ERROR=false  
WITH_SERVERLOG=true  
COMPRESS_DATA=true  
# result  
TIMELINEID=1  
START_LSN=43/d5000028  
STOP_LSN=43/d5000168  
START_TIME='2016-08-26 15:43:39'  
END_TIME='2016-08-26 15:44:27'  
RECOVERY_XID=3896508572  
RECOVERY_TIME='2016-08-26 15:44:18'  
TOTAL_DATA_BYTES=823571731  
READ_DATA_BYTES=823571731  
READ_ARCLOG_BYTES=234881668  
READ_SRVLOG_BYTES=218248  
WRITE_BYTES=206009921  
BLOCK_SIZE=8192  
XLOG_BLOCK_SIZE=8192  
STATUS=OK  
```
对应的数据结构    
```
/*  
 * pg_rman takes backup into the directory $BACKUP_PATH//.  
 *  
 * status == -1 indicates the pgBackup is invalid.  
 */  
typedef struct pgBackup  
{  
        /* Backup Level */  
        BackupMode      backup_mode;  
        bool            with_serverlog;  