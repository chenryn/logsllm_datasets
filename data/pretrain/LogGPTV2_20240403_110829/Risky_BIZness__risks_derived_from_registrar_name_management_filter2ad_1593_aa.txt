title:Risky BIZness: risks derived from registrar name management
author:Gautam Akiwate and
Stefan Savage and
Geoffrey M. Voelker and
Kimberly C. Claffy
Risky BIZness: Risks Derived from
Registrar Name Management
Geoffrey M. Voelker
Gautam Akiwate
UC San Diego
PI:EMAIL
Stefan Savage
UC San Diego
PI:EMAIL
UC San Diego
PI:EMAIL
KC Claffy
CAIDA/UC San Diego
PI:EMAIL
ABSTRACT
In this paper, we explore a domain hijacking risk that is an acci-
dental byproduct of undocumented operational practices between
domain registrars and registries. We show how over the last nine
years over 512K domains have been implicitly exposed to the risk
of hijacking, affecting names in most popular TLDs (including .com
and .net) as well as legacy TLDs with tight registration control
(such as .edu and .gov). Moreover, we show that this weakness
has been actively exploited by multiple parties who, over the years,
have assumed control over 163K domains without having any own-
ership interest in those names. In addition to characterizing the
nature and size of this problem, we also report on the efficacy of
the remediation in response to our outreach with registrars.
CCS CONCEPTS
• Networks → Naming and addressing; Public Internet.
ACM Reference Format:
Gautam Akiwate, Stefan Savage, Geoffrey M. Voelker, and KC Claffy. 2021.
Risky BIZness: Risks Derived from Registrar Name Management. In ACM
Internet Measurement Conference (IMC ’21), November 2–4, 2021, Virtual
Event, USA. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/
3487552.3487816
1 INTRODUCTION
The security of the domain name system (DNS) is predicated on the
integrity of name resolutions. When a user enters www.amazon.com
into their browser, they assume that the Web page ultimately reached
is the correct one (as intended by Amazon). Even strong security
measures such as TLS implicitly assume the integrity of name
resolution, since key certificate authorities, such as Let’s Encrypt,
predicate their due diligence on controlling a domain [10]. However,
if an attacker is able to substitute their own answers in response
to queries for a domain (i.e., domain hijacking), then these security
assumptions, both implicit and explicit, are violated.
To date, most domain hijacking has been the result of active
attacks: either via the compromise of accounts with the authority
to manipulate a domain’s zone records [7] or, in the case of cache
poisoning, an attack on the resolution protocol itself [20]. In this
paper we explore an alternate avenue for domain hijacking that
is not due to any act of attacker compromise or domain owner
misconfiguration, but is instead an unintended byproduct of long-
standing undocumented registrar practices.
In particular, we explore risks that emerge from the use of third-
party nameservers wherein the nameserver domain is slated for
removal by its own registrar. For such actions, registrars rely on the
Extensible Provisioning Protocol (EPP), which provides a standard
interface for registrars to provision and manage domain names and
nameservers within each domain registry. However, in particular
situations wherein the domain has subordinate host objects (typi-
cally representing nameservers) referenced by other domains, the
constraints dictated by EPP do not allow the domain to be removed
— even by the registrar of the domain. Over the years, registrars have
developed an operational workaround for this limitation, in which
the registrars rename host objects subordinate to the domain within
the EPP system to enable removal of the domain. The host objects
thus renamed are given an entirely new domain name that typically
falls under the authority of a different top-level domain (TLD) op-
erated by a different registry.1 We call these resulting nameserver
names sacrificial nameservers.
For example, the nameserver ns2.example.com, on expiry of
the domain example.com, might be renamed within the registry to
{randomstring}.biz. As a result, any domain name in the .com
TLD that had delegated its nameservice to ns2.example.com would
find that nameserver silently replaced with {randomstring}.biz.2
While, as we will show, different registrars use different renam-
ing idioms, the end result is similar. Moreover, in most cases this
renaming is entirely mechanical and no attempt is made to regis-
ter the new domain name (or, for that matter, to validate that the
new name is not already registered). As a result, any party assum-
ing control of {randomstring}.biz is subsequently able to control
name resolution for all of the domains that had previously used
ns2.example.com for name service. Perhaps more importantly, as
a result of the renaming, a simple re-registration of example.com
will not fix the issue.
This process that we have described is byzantine and unintuitive,
which perhaps explains why it has not been identified as an issue
in spite of almost two decades of practice. However, it is not an
uncommon occurrence. Our analyses of zone data collected over
the last nine years shows that this operational pattern has put at
least a half million domains at risk of hijacking. Further, we will
show that this is not merely a potential risk, but that it has been
actively exploited by multiple parties. Together, such actors have
registered the domains for at least 9, 173 sacrificial nameservers
This work is licensed under a Creative Commons Attribution International 4.0 License.
 IMC ’21, November 2–4, 2021, Virtual Event, 
USA © 2021 Copyright held by the owner/
author(s). ACM ISBN 978-1-4503-9129-0/21/11.
https://doi.org/10.1145/3487552.3487816
1The .biz TLD appears to have been most widely used for this purpose, inspiring
our title.
2Indeed, for reasons we will explain, this change is not limited to the original name-
server’s TLD but, depending on which TLD is used, can impact domains in a wide
range of distinct TLDs, including some, such as .edu and .gov, whose registration
is restricted.
673
IMC ’21, November 2–4, 2021, Virtual Event, USA
Akiwate, Savage, Voelker, and Claffy
and, in so doing, have obtained implicit control over more than
163, 000 domains for which they have no clear ownership interest.
Moreover, of the domains that are currently exposed in this man-
ner, our analysis shows that more than 6% maintain alternative
nameservers (i.e., indicating that these domains may continue to
operate as going concerns without any knowledge that they are
at risk). While most such domains are associated with small sites
that may not be widely visited, they also include domains operated
by groups in positions of authority, including law enforcement,
courthouses, lawyers, health care organizations, government public
health officials and religious groups.
In exploring this issue, we make four key contributions:
• Identifying sacrificial nameserver renaming practices and the hi-
jacking risk they create. We develop a systematic methodology
for identifying sacrificial nameserver renaming and character-
izing the idioms used by registrars.
• Quantifying its scope and scale. Using almost a decade of archival
zone file data we identify the number of domains exposed to
hijacking and the dynamics of this exposure over time.
• Characterizing abuse. We empirically establish the feasibility of
domain name hijacking via registering sacrificial nameserver
domains, both by doing so ourselves (in controlled experiments)
and by documenting a range of parties who have used this
approach to acquire the traffic of many tens of thousands of
domains they do not own.
• Remediation. We have been working with registrars and reg-
istries to address this issue. As a result, some registrars have
changed operational practices to prevent new hijackable do-
mains, while helping remediate existing ones.
In addition to our measurement results, we discuss the challenges
in fixing this problem going forward.
2 BACKGROUND
The domain name system (DNS) is a deceptively complex artifact
that relies on a broad range of technical components, organizations
and procedures. In this section we provide a brief review of DNS
concepts, the role of registrars and registries and existing mech-
anisms that have been implicated in domain name hijacking. We
also provide background on the role of the Extensible Provision-
ing Protocol (EPP) and explain how some of its constraints impact
registrars and how a popular workaround creates a hijacking risk.
2.1 DNS Namespace and Protocol
DNS is built around a namespace hierarchy (documented in RFC
1034 [17]) in which there is explicit delegation of administrative au-
thority to individual non-overlapping zones following a tree-based
structure. Thus, the root of the DNS name tree explicitly delegates
authority for individual top-level domains (e.g., .com or .gov) to
nameservers who are responsible for that portion of the namespace
(i.e., zone). These nameservers in turn can further delegate their
portion of the namespace to yet other servers (e.g., .com provides
nameserver records for example.com which thereby delegates con-
trol over all domains under example.com to those servers) and each
zone is free to sub-delegate more specific portions of the namespace
below it in the same manner.
The DNS query protocol, standardized in RFC 1035 [18], de-
scribes how DNS network queries should be issued, interpreted and
appropriately routed, to ultimately find the nameservers able to pro-
vide authoritative answers for the portion of the namespace being
queried. Moreover, it is designed to do so in a way that maximally
exploits locality and thus reduces latency and load.
2.2 Name Registration and Provisioning
The DNS standard does not go into detail about how domain names
are procured or how namespace delegation is populated and man-
aged across nameservers. That said, those details are critical to the
correct functioning of the DNS.
With a few exceptions, all top-level domains are associated with
administrative entities called registries that primarily operate ei-
ther under contract with the Internet Corporation for Assigned
Names and Numbers (ICANN) (e.g., for gTLDs and most legacy
TLDs) or represent sovereign naming interests (ccTLDs, such as
.us or .ru). Registries are responsible for the database of regis-
tered names directly underneath the TLD in the namespace hierar-
chy (e.g., Verisign is the registry for .com and thus would contain
example.com in its database) and for the nameservers that delegate
authority under that namespace. Note that registries may have
responsibility for multiple TLDs and some registries will outsource
the technical operation of their databases to third parties who spe-
cialize in registry operations (e.g., Afilias is one such specialist).
Thus, for example, Verisign is the registry for the .com and .net
TLDs (among others) and also implements the registry backend for
.edu and .gov (on behalf of EDUCAUSE and the US Cybersecurity
and Infrastructure Security Agency (CISA), respectively).
Via their nameservers, registries provide delegation for all the
registered domain names used in the DNS. However, provisioning
new domain names or changing the details of their delegation is a
responsibility typically shared with third parties called registrars.
Registrars act as an interface between customers who wish to ob-
tain or manage a domain name and the registries that maintain
authoritative delegation information for those domains. Thus, a
customer seeking to obtain riskybiziness.com (available as of this
writing) would contract with a registrar (e.g., GoDaddy) who would,
in turn, engage with the registry (Verisign) to claim the name and
install the customer’s choice of nameserver (NS) records in the .com
zone.3 Importantly, registrars can contract with many registries
and there can be many registrars who contract with each individual
registry.
Finally, although not formally part of either the DNS or the name
registration and provisioning systems, nameserver hosting plays an
important role in practical DNS operations. While some name reg-
istrants host their own nameservers, others outsource this function
to a third party. Thus, consider the situation in which example.com
is registered via GoDaddy. The owner of this domain could choose
to manage their own nameservers, in which case they might re-
quest that example.com’s NS records point to ns1.example.com and
3Note that some TLDs are restricted to particular classes of registrants and do not
use registrars. For example, .edu domains are only made available to educational
institutions (via EDUCAUSE), and .gov domains are only available to US Government
entities (via CISA).
674
Risky BIZness
IMC ’21, November 2–4, 2021, Virtual Event, USA
ns2.example.com.4 However, they might instead choose to just use
GoDaddy to provide nameservice. Alternatively, they might choose
a third-party nameservice provider that offers DDoS protection and,
in many cases, they might do some combination of all of these, pos-
sibly for reasons of diversity and redundancy. Thus, example.com
might have NS records that point to multiple different domains that
are owned and operated by third parties.
2.3 Domain Hijacking
Any time the name resolution for a domain name is controlled by
an outside party, without the consent of the domain owner, it is
commonly referred to as domain hijacking. If an outside party can
control the resolution, then their lack of ownership interest in the
domain is irrelevant because their control over resolution is the
capability that matters. Hijacking can be employed for a range of
purposes including site defacement, phishing, man-in-the-middle
attacks and/or further compromise. Those visiting the hijacked
domain will have no way of knowing that they are not visiting the
site that they expect.5
There are a number of ways domain hijacking can occur. Perhaps
the best known are direct attacks on the DNS protocol itself, par-
ticularly a family of attacks called DNS cache poisoning that inject
carefully forged and timed DNS responses to convince recursive
resolvers to accept and cache false authoritative information [6, 20].
Such attacks involve repeated and active network-layer attacks
and, typically, are only able to directly impact one DNS cache (i.e.,
resolver) at a time. Another class of attacks results from the theft
of credentials: either the domain owner’s credentials (i.e., their ac-
count with their registrar and/or their nameserver hosting provider)
or the credentials of a registrar or registry administrator with au-
thority to update records on behalf of the domain owner [7, 15]. In
these cases, the adversary simply replaces the nameserver records
(either at the registry level or, if dealing with subdomains, for the
domain’s zone).
The other opportunity for hijacking occurs as a byproduct of
errors or inconsistency in how nameserver delegation is specified.
If a nameserver to whom responsibility for a domain is delegated
is unable to provide authoritative information, it is referred to as
a lame delegation. Dangling delegations are a special case of this
phenomenon in which some resource (e.g., the domain name or the
IP address) is unclaimed and thus might be acquired by an attacker
for domain hijacking. Liu et al. first documented the presence of
domains whose nameserver domains have expired and thus an
adversary could simply purchase them [16]. Expired nameserver
domains are conceptually similar to the situation we study, but
for the fact that in our study the vulnerable nameserver domains
are completely new, created by registrars. Bryant documented a
large-scale version of this problem in which stale NS records at
the .io registry provided a mechanism to hijack all subordinate
domains [4]. Vissers et al. extended these ideas to cover nameserver
domains whose own nameservice is dependent on dangling names,
as well as dangling that occurs via accident (typos) and bit errors
(so-called bit squatting) [21]. Recently, Alowaisheq et al. [3] showed
that stale records in the domain’s zone (as opposed to the zone of
the parent TLD) provided sufficient purchase for hijacking (and,
in demonstrating this risk, provided an improved mechanism for
exploiting dangling delegation hijacking in general).
Finally, Akiwate et al. provided a recent measurement survey of
lame delegations across the Internet (not motivated by hijacking in
particular) and in the course of that measurement first identified
the issue of registrar-based renaming [2]. Our work specifically
builds on this paper and seeks to fully explore how widespread this
practice is among registrars, characterize the scale and scope of the
risk, identify the extent to which it is being actively used to hijack