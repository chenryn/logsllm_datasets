"HEAD"
&&
表示返回给客户端的HTTP状态信息
表示返回给客户端的HTTP头部信息
表示返回给客户端的HTTP协议版本
表示返回给客户端的HTTP状态代码
义
PDG
---
## Page 63
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
sub vcl_fetch {
sub vcl_miss {
sub vcl_hit {
sub vc1_hash
ub
sub vcl_pipe
return (fetch);
return (deliver);
if (!obj.cacheable）{
return
vcl_pass
return （pipe）
if req.url
return
else
set req.hash += req.url;
return (pass);
set req.hash += server.ip;
}else{
Ph
www.Linuxidc.
set
(hash);
(pass);
return (pass);
set req.backend=webserver;
(req.http.host
return (pass);
req.hash += req.http.host;
#对以，jsp和，do结尾以及带有？的URL，直接从后端服务器读取内客
#是将所有以ixdba.net或者ixdba.cn结尾的城名都进行缓存
#对ixdba.net或者ixdba.cn两个域名进行缓存加速。这是个泛域名的概念，也就
#如果请求的类型不是GBT或HEAD，则进入paSS模式
.(jap|do）($|\?)）{
.*).ixdba.net"
第2章
1|req.http.host~
高性能Hnip加速器varnish43
.com
君
PDG
---
## Page 64
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
有负载分担和健康检测机制。配置完成的vcl.conf文件如下：
2.3.3
44第1篇web应用篇
#下面定义了4台后端Web服务器
VCL语法非常灵活，功能强大。下面是一个Varnish对应多台Web主机的应用实例，具
oackend webserver2
backend webserverl
.host=*192.168.12.12";
sub
Varnish对应多台Web服务器的配置实例
return (deliver);
else
vcl_deliver
return
f
if
if (req.url -
set resp.http.X-Cache = "MIsS from www.ixdba.net";
www.Linuxidc.com
set resp.http.X-Cache ="HIT from www.ixdba.net";
set beresp.ttl = 600s;
return (pass);
(req.ur]
#当url中包含services时，不进行缓存
return （pass);
#当url中包含Bervlet时，不进行缓存
return (pass);
(beresp.http.Set-Cookie)(
return （pass);
#下面添加一个Header标识，以判断缓存是否命中
(deliver);
#缓存时间为600秒
#当请求类型是GET，并且请求的URLvpng、xsl、xml、gif、cBS、js等结尾时，进行缓存，
#如果请求类型是GET，并且请求的URL中包含upload，那么就进行缓存，缓存的时间是
>0){
"/servlet/"){
&& reg.url
---
## Page 65
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
#这里设定，当发送PURGE请求的客户端不是在ac1中设定的地址时，将道回405状态代码，提示
subvcl_recv
PURGB方法清除缓存
#
#这里设定清理缓存的规则，Varnish无许localhost、127.0.0.1和192.168.12.***三个来源IP通过
director webserver random {
#请求。“weight”用来指定两台后端服务器的权值，权值高的处理请求的几率就高些
请求交给webserver4来处理
#定义一个名为webserver的director，也就是由webserverl和webserver2两台后端服务器随机分担
backend webserver4{
下面设定域名访问策略，其实也是设定对后端主机健康状态检测的一个机制。如果访问www.ixdba.net
backend webserver3 {
（（0=xx）（x（sq）））
或者bbs.ixdba.net，
"192.168.12.0*/26;
"127.0.0.1";
"localhost";
.backend=webserver2;
-port
host
.host
host=
set req.backend =webserver3
set
return
else
return (pass);
elseif (req.url "\. (php|cgi)(s|\?)"){
error 405 "Not allowed.";
="192.168.12.15";
"80":
：*192.168.12.13*;
www.Linuxidc.com
(lookup);
.weight =
.weight =
8;
nish
45
PDG
---
## Page 66
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
46第1篇web应用篇
#定义hash的值，并且处理压缩内容
sub vcl_miss
sub vcl_hit
从而达到刷新Varnish缓存的目的
扣果请求的类型是PURGE方法，Varnishd会将此请求的缓存周期设置为0，也就是使这个URL的缓存失效，
#读取内容。其他请求都进入lookup模式，也就是进入cache中通过hash表寻找被请求的数据
if（req.request =="PURGB")
if (1obj.cacheable)
if (req.request
return （lookup）
elseif (req.http.Authenticate Ilreq.http.Authorization)(
elseif (reg.url
if (req.request !="GET" && req.request 1="HEAD")
下面定义缓存的策略。当请求以，cgi和，Dhp结尾及带有？的URL时，不进行缓存，直接从后端服务器
if (obj.http.Vary)
if (req.http.host~#(img.|images.)?ixdba.net"){
error 404 "Not in cache.";
unset obj.http.Vary:
return (pass);
error 200 "Purged.";
set obj.ttl=0s;
return (pass);
return (pass);
return (pipe)
req.hash += req.url;
www.Linuxidc.com
==*PURGB")
\.(cgi|php）($|\？）)
PDG
---
## Page 67
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
eturn
#定义不同内客的缓存时间
#下面定义不缓存含有哪些HTTP头的请求
#定义在什么状态下进入restart模式
sub vcl_fetch
if
return (hash);
if (beresp.http.Set-Cookie){
if （iberesp.cacheable）{
else
if（req.url
set req.hash += server.ip;
set req.hash += req.http.host;
(deliver);
set beresp.ttl=10d;
}（=$(AWm
Bet
(req.request
return
beresp.status ==503 1I
set req.hash += req.http.Accept-Encoding
return (pass）;
cache
www.Linuxidc.com
beresp.ttl
return (pass):
return (pass);
set beresp.ttl=300s;
1|beresp.http.Cache-Control-
(restart);
"\.(jpg|jpeg|png|gif|rar|zip|gz|tgz|bz2|tbz|mp3|ogg|swf|exe|fiv
=36008
"GET"&&reg.url。"\.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|im
500
1|beresp.status ==501 |l beresp.status == 502 11
"no-cache"
1Iberesp.http.Cache-Control~"no-
"private"）{
Hish47
---
## Page 68
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
2.4.2
出了varnishd常用参数的使用方法和含义。
在命令行执行“/usr/local/varnish/sbin/varnishd-h”即可得到varnishd的详细用法。表2-6列
2.4.1
2.4
48
Varnish启动的命令是/usr/local/varnish/sbin/varnishd。此命令参数较多，用法比较复杂，
sub vcl_deliver {
配置Varnish运行脚本
-w int[,jint[,int]
-T address:port
s kind[,storageoptions]
p param=value
-ffile
d
-b address:port
od:sssppe e-
varnishd指令
运行Varnish
file
return (deliver);
else
if （obj.hits >0）{
set resp.http.X-Cache = "MIsS from www.ixdba.net
www.Linuxidc.com
参
set resp.http.X-Cache ="HIT from www.ixdba.net";
表2-6varnishd常用参数的使用方法和含义
显示Vamish版本号和版权信息
指定默认的TTL值
存文件的大小
如-w5，51200，30
设定varnish的telnet管理地址及端口
其中用于指定缓存文件的存放路径，“”用于指定缓
Varnish进程pid文件存放路径
指定服务器参数，用来优化Vamish性能
指定Varnish服务器的配置文件
表示使用debug调试模式
表示后端服务器地址及端口
表示Varnish对httpd的监听地址及端口
min.max
定Varmish的工作线程数，常用的方式有：
的工作目录
含
K
---
## Page 69
2.4.3管理Varnish运行日志
重启等操作。最后，启动Varnish。过程如下：
文件即可；config用于指定Varnish守护进程配置文件路径。
data，如果需要更大的缓存文件，则需要安装64位的Linux操作系统。
可。首先修改/etc/sysconfig/varnish文件，根据这里的要求，配置好的文件如下：
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
0
D
[root@varnish-server -]#/usr/1ocal/varnish/bin/varnishlog -n /data/varnish/cache
例如：
口通过自带的varnishlog指令获得Varnish详细的系统运行日志。
Varnish是通过内存共享的方式提供日志的，它提供了两种日志输出形式，分别是：
Starting varnish HTTP accelerator:
[root@varnish-server -]#/etc/init.d/varnishstart
从后两行的输出可知，此脚本功能强大，可以对Varmish进行启动、关闭、查看状态、
[start|stop|status|restart|condrestart|try-restart|reload|force-reload}
Usage:/etc/init.d/varnish
[root@varnish-server ~]#/etc/init.d/varnish
[root@varnish-server -]#chmod 755 /etc/init.d/varnish
两个文件修改完毕，就可以授权、运行/etc/init.d/varnish脚本了。执行过程如下：
其中，exec用于指定varnishd的路径，
lockfile="/var/lock/subsys/varnish"
exec="/usr/local/varnish/sbin/varnishd"
接下来要修改的文件是/etc/init.d/varnish，找到如下几行，修改相应的路径即可。
这里需要说明的是，在32位操作系统下，最大只能支持2GB的缓存文件varnish_cache.
config="/etc/sysconfig/varnish"
DAEMON_OPTS="-a 192.168.12.246:80\
MEMLOCK=82000
NFILES=131072
CLI
www.Linuxidc.com
-f
T
file, /data/varnish/cache/varnish_cache.data,4G"
/data/varnish/cache
2,51200,10
Wr 200 PONG 1279032175 1.0
Rd ping
/usr/local/varnish/etc/vcl.conf \
127.0.0.1:3500\
200 PONG 1279032178 1.0
ping
：只需修改为Varnish安装路径下对应的varnishd
PDG
---
## Page 70
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
日志记录时间和服务器时间相差8小时。
区参数，中国是第八时区，相对于UTC相差480分钟。如果不设置480这个参数，将导致
成的性能问题。
具，它可以根据指定时间或者大小等方式来分割日志文件，这样就避免了日志文件过大而造
varnishncsa脚本的完整内容如下所示：
第二种日志输出形式的配置方式。
50
其中，“3600”表示一个小时，也就是每个小时生成一个日志文件，“480”表示一个时
最后可以通过如下方式，对日志进行启动和关闭等操作。
通过对Varnish日志的监控，
在这个脚本中，通过管道方式把日志导入rotatelogs中，而rotatelogs是一个文件分割工
#:/bin/sh
下面编写一个名为varmishncsa的shell脚本，并把此文件放到/etc/init.d目录下。
[root@varnish-server ~]#chmod 755 /etc/init.d/varnishncsa
接着对此脚本进行授权。
else
elif ["s1"
/usr/local/varnish/bin/varnishncsa -n /data/varnish/cache