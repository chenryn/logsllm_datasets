### References

1. In Proceedings of the 11th ACM Conference on Computer and Communications Security (CCS). 168–177.
2. E. Brickell, J. Camenisch, and L. Chen. 2004. Direct anonymous attestation. In Proceedings of the 11th ACM Conference on Computer and Communications Security (CCS). 132–145.
3. E. Brickell and J. Li. 2010. Enhanced privacy ID from bilinear pairing for hardware authentication and attestation. In IEEE Second International Conference on Social Computing (SocialCom). 768–775.
4. E. Brickell and J. Li. 2012. Enhanced privacy ID: A direct anonymous attestation scheme with enhanced revocation capabilities. IEEE Transactions on Dependable and Secure Computing 9, 3 (2012), 345–360.
5. J. Camenisch, L. Chen, M. Drijvers, A. Lehmann, D. Novick, and R. Urian. 2017. One TPM to bind them all: Fixing TPM 2.0 for provably secure anonymous attestation. In IEEE Symposium on Security and Privacy (S&P). 901–920.
6. J. Camenisch, M. Drijvers, and A. Lehmann. 2016. Anonymous attestation using the strong Diffie-Hellman assumption revisited. In Proceedings of the 9th International Conference on Trust and Trustworthy Computing (TRUST). 1–20.
7. L. Chen and J. Li. 2010. Revocation of direct anonymous attestation. In International Conference on Trusted Systems. 128–147.
8. L. Chen and J. Li. 2013. Flexible and scalable digital signatures in TPM 2.0. In Proceedings of the ACM SIGSAC Conference on Computer and Communications Security (CCS). 37–48.
9. L. Chen, D. Page, and N. P. Smart. 2010. On the design and implementation of an efficient DAA scheme. In International Conference on Smart Card Research and Advanced Application. 223–237.
10. L. Chen and R. Urian. 2015. DAA-A: Direct anonymous attestation with attributes. In International Conference on Trust and Trustworthy Computing. 228–245.
11. V. Kumar et al. 2018. Direct anonymous attestation with efficient verifier-local revocation for subscription system. Cryptology ePrint Archive, 2018/290. (2018).
12. V. Kumar et al. 2018. Prototype of LASER. (2018). Retrieved November 1, 2017, from https://github.com/luthern/laser/
13. S. D. Galbraith, K. G. Paterson, and N. P. Smart. 2008. Pairings for cryptographers. Discrete Applied Mathematics 156, 16 (2008), 3113–3121.
14. K. Goldman. 2017. IBM TPM 2.0 TSS. (2017). Retrieved November 1, 2017, from https://sourceforge.net/projects/ibmtpm20tss/
15. T. Gupta, N. Crooks, W. Mulhern, S. Setty, L. Alvisi, and M. Walfish. 2016. Scalable and private media consumption with Popcorn. In Proceedings of the 13th Usenix Conference on Networked Systems Design and Implementation (NSDI). 91–107.
16. ISO/IEC. 2015. ISO/IEC 11889:2015, Parts 1-4. (2015). Retrieved November 1, 2017, from http://www.iso.org/iso/home/store/catalogue_tc/catalogue_detail.htm?csnumber=66510
17. N. Komninos and A. K. Junejo. 2015. Privacy-preserving attribute-based encryption for multiple cloud collaborative environments. In IEEE/ACM 8th International Conference on Utility and Cloud Computing (UCC). 595–600.
18. M. Z. Lee, A. M. Dunn, B. Waters, E. Witchel, and J. Katz. 2013. Anon-Pass: Practical anonymous subscriptions. In Proceedings of the IEEE Symposium on Security and Privacy (S&P). 319–333.
19. Y. Liu, W. Tome, L. Zhang, D. Choffnes, D. Levin, B. Maggs, A. Mislove, A. Schulman, and C. Wilson. 2015. An end-to-end measurement of certificate revocation in the web’s PKI. In Proceedings of the Internet Measurement Conference (IMC). 183–196.
20. W. Lueks, G. Alpar, J-H. Hoepman, and P. Vullers. 2017. Fast revocation of attribute-based credentials for both users and verifiers. Computers & Security 67 (2017), 308–323.
21. B. Lynn. 2017. PBC: Pairing-based cryptography. (2017). Retrieved November 1, 2017, from https://crypto.stanford.edu/pbc/
22. Ponemon Institute. 2010. The billion dollar lost laptop problem: Benchmark study of U.S. organizations. (2010).
23. Trusted Computing Group. 2014. TPM library specification. (2014). Retrieved November 1, 2017, from http://www.trustedcomputinggroup.org/tpm-library-specification/
24. L. Xi, D. Feng, Y. Qin, F. Wei, J. Shao, and B. Yang. 2014. Direct anonymous attestation in practice: Implementation and efficient revocation. In Twelfth Annual International Conference on Privacy, Security and Trust (PST). 67–74.

### Security Definitions

In the following sections, we present the security properties of LASER. We provide the corresponding theorems and comprehensive proofs in the full-length version of the paper, available at [16].

#### A.1 Correctness

The correctness property ensures that a signature generated by an unrevoked platform using the login signature generation protocol is correctly verified and traced back to the platform.

**Definition A.1.** For all \(\lambda\), \(ms\), \(ctl\), \(cul\), \(csr\), \(M\), and \(tRL\), LASER satisfies the correctness property if:
- \((gpk, isk) \leftarrow Setup(1^\lambda)\),
- \((tsk, hdl, tpk, mcl) \leftarrow MemCreGen(gpk, isk, ms)\),
- \((ctl', logCrej) \leftarrow LogCreGen(gpk, isk, ctl, tsk, hdl, tpk, memCrej)\) for all \(j \in [1, ms]\),
- \((logCrej, cul') \leftarrow SelectLogCre(lcl, cul, csr)\),
- \(\sigma_s \leftarrow Sign(gpk, tsk, hdl, tpk, logCrej, M)\),
- \(\text{valid} \leftarrow Verify(gpk, \sigma_s, M, tRL)\), and
- \(\text{true} \leftarrow Identify(gpk, \sigma_s, M, tsk)\).

#### A.2 Adaptable Anonymity

Adaptable anonymity consists of two properties: anonymity and adaptable unlinkability.

**Anonymity:** No entity, including the issuer, can identify the platform that generated a given signature.

**Adaptable Unlinkability:** The platform can control whether or not any two signatures can be linked by a particular entity. There are two types of unlinkability:
- **Absolute Unlinkability:** Two signatures cannot be linked by either the issuer or the verifier.
- **Conditional Unlinkability:** Two signatures cannot be linked by the verifier but may or may not be linkable by the issuer.

**Definition A.2.** For an adversary \(A\) and a challenger \(C\), the absolute unlinkability game is defined as follows:
1. **Setup:** \(C\) simulates the Setup algorithm, providing \(A\) with \(isk\) and \(gpk\). \(C\) creates \(mt\) platforms with identities \(P_i\) for all \(i \in [1, mt]\). \(C\) initializes lists \(cpl = \emptyset\) and \(ccl = \emptyset\).
2. **MemCreGen:** \(C\) acts as the platform and simulates the MemCreGen protocol with \(A\) (acting as the issuer). For all \(i \in [1, mt]\), \(C\) generates \(tsk_i\) and acquires \(memCre_{ij}\) for all \(j \in [1, ms]\).
3. **LogCreGen:** \(C\) acts as the platform and simulates the LogCreGen protocol with \(A\). For all \(i \in [1, mt]\) and \(j \in [1, ms]\), \(C\) acquires \(logCre_{ij}\).
4. **Queries-Phase I:** \(A\) queries \(C\) about:
   - **Sign:** \(A\) requests a signature on a message \(M\) for \(P_i\). \(C\) runs SelectLogCre with the credential-selection rule `absUnlink` and appends \(logCre_{ij}\) to \(ccl\). \(C\) then simulates the Sign protocol and responds with \(\sigma_s\).
   - **TskCorrupt:** \(A\) requests the TPM's secret key of \(P_i\). \(C\) responds with \(tsk_i\) and appends \(P_i\) to \(cpl\).
   - **MemCreCorrupt:** \(A\) requests the \(j\)-th membership credential of \(P_i\). \(C\) responds with \(memCre_{ij}\) and appends \(logCre_{ij}\) to \(ccl\).
   - **LogCreCorrupt:** \(A\) requests the \(j\)-th login credential of \(P_i\). \(C\) responds with \(logCre_{ij}\) and appends \(logCre_{ij}\) to \(ccl\).
5. **Challenge:** \(A\) submits a message \(M\) and two platforms \(P_{i0}\) and \(P_{i1}\) with the restriction that \(P_{i0}, P_{i1} \notin cpl\). \(C\) selects \(\phi \xleftarrow{\$} \{0, 1\}\). \(C\) selects \(logCre_{i\phi j\phi}\) using the `absUnlink` rule in SelectLogCre such that \(logCre_{i\phi j\phi} \notin ccl\). \(C\) runs the Sign protocol and responds with \(\sigma_s\) on \(M\).
6. **Queries-Phase II (Restricted Queries):** After the challenge, \(A\) continues to probe \(C\) with the same queries, except for TskCorrupt, MemCreCorrupt, and LogCreCorrupt queries for \(P_{i0}\) and \(P_{i1}\).
7. **Output:** \(A\) outputs a bit \(\phi'\) indicating its guess of \(\phi\). \(A\) wins the game if \(\phi' = \phi\), and the advantage of \(A\) is defined as \(Adv_{abs}^A = |Pr(\phi' = \phi) - 1/2|\). LASER with the `absUnlink` rule satisfies the absolute unlinkability property if the advantage of any probabilistic polynomial-time (PPT) adversary is negligibly small.

**Definition A.3.** For an adversary \(A\) and a challenger \(C\), the conditional unlinkability game is defined as follows:
1. **Setup:** \(C\) simulates the Setup algorithm, providing \(A\) with \(gpk\) but not \(isk\). \(C\) creates \(mt\) platforms with identities \(P_i\) for all \(i \in [1, mt]\). \(C\) initializes lists \(cpl\) and \(ccl\).
2. **MemCreGen:** \(C\) acts as both the platform and the issuer, simulating the MemCreGen protocol to generate \(tsk_i\) for all \(i \in [1, mt]\) and \(memCre_{ij}\) for all \(i \in [1, mt]\) and \(j \in [1, ms]\).
3. **LogCreGen:** \(C\) acts as both the platform and the issuer, simulating the LogCreGen protocol to generate \(logCre_{ij}\) for all \(i \in [1, mt]\) and \(j \in [1, ms]\).
4. **Queries-Phase I:** \(A\) probes \(C\) with the same queries as in the absolute unlinkability game, plus:
   - **Revoke:** \(A\) requests \(C\) to revoke the login credential used to generate a signature \(\sigma'_s\) on a message \(M'\). \(C\) simulates the Revoke algorithm and responds with the updated \(tRL'\).
5. **Challenge:** \(A\) submits a message \(M\) and two platforms \(P_{i0}\) and \(P_{i1}\) with the restriction that \(P_{i0}, P_{i1} \notin cpl\). \(C\) selects \(\phi \xleftarrow{\$} \{0, 1\}\). \(C\) selects \(logCre_{i\phi j\phi}\) using the `conUnlink` rule in SelectLogCre such that \(logCre_{i\phi j\phi} \notin ccl\). \(C\) runs the Sign protocol and responds with \(\sigma_s\) on \(M\).
6. **Queries-Phase II (Restricted Queries):** \(A\) continues to probe \(C\) with the same restricted queries as in the absolute unlinkability game.
7. **Output:** \(A\) outputs a bit \(\phi'\) indicating its guess of \(\phi\). \(A\) wins the game if \(\phi' = \phi\), and the advantage of \(A\) is defined as \(Adv_{con}^A = |Pr(\phi' = \phi) - 1/2|\). LASER with the `conUnlink` rule satisfies the conditional unlinkability property if the advantage of any PPT adversary is negligibly small.

**Definition A.4.** LASER satisfies the adaptable anonymity property if it satisfies the absolute unlinkability property for signatures generated using the `absUnlink` rule and the conditional unlinkability property for signatures generated using the `conUnlink` rule.

#### A.3 Traceability

The traceability property ensures that no colluding set of platforms can create a valid signature that cannot be traced back to any platform.

**Definition A.5.** For an adversary \(A\) and a challenger \(C\), the traceability game is defined as follows:
1. **Setup, MemCreGen, LogCreGen, and Queries Phases:** These phases are defined in the same manner as in the conditional unlinkability game.
2. **Output:** \(A\) outputs a message \(M^*\) and a signature \(\sigma^*\) for a given \(tRL^*\). \(A\) wins the traceability game if:
   - \(\text{valid} \leftarrow Verify(gpk, \sigma^*, M^*, tRL^*)\),
   - \(A\) did not obtain \(\sigma^*\) by making a Sign query, and
   - \(\forall i \in [1, mt], \text{false} \leftarrow Identify(gpk, \sigma^*, M^*, tsk_i)\).

LASER satisfies the traceability property if the probability of any PPT adversary winning the traceability game is negligibly small.

#### A.4 Non-frameability

The non-frameability property ensures that no colluding set of entities, including the issuer, can forge a valid signature that can be traced back to a non-colluding platform.

**Definition A.6.** For an adversary \(A\) and a challenger \(C\), the non-frameability game is defined as follows:
1. **Setup, MemCreGen, LogCreGen, and Queries Phases:** These phases are defined in the same manner as in the absolute unlinkability game.
2. **Output:** \(A\) outputs a message \(M^*\) and a signature \(\sigma^*\) corresponding to a platform \(P_{i^*}\). \(A\) wins the non-frameability game if:
   - \(\text{valid} \leftarrow Verify(gpk, \sigma^*, M^*, tRL^*)\),
   - \(A\) did not obtain \(\sigma^*\) by making a Sign query, and
   - \(\text{true} \leftarrow Identify(gpk, \sigma^*, M^*, tsk_{i^*})\).

LASER satisfies the non-frameability property if the probability of any PPT adversary winning the non-frameability game is negligibly small.

### Acknowledgments

This work was supported in part by the National Science Foundation through grants 1314598, 1265886, and 1642928, and by the industry affiliates of the Broadband Wireless Access and Applications Center.