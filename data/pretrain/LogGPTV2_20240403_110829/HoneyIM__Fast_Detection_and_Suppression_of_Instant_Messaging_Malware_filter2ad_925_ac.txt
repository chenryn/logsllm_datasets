The maximum node degrees of the generated networks are
all below 600, the maximum size of a contact list for MSN.
Similar to [35], we assume that IM users have inde-
pendent behaviors. Due to the large number of users |V |
and independent behaviors, the mean values of user read-
ing delay Ti and clicking probability Ci, denoted by E[Ti]
and E[Ci] (i = 1, 2,··· ,|V |), can be assumed to follow
Gaussian distribution. That is, E[Ti] ∼ N(µT , σ2
T ) and
E[Ci] ∼ N(µC , σ2
C). We also assume that Ti follows ex-
ponential distribution and Ci is a constant for user i, and
the generation of Ti and Ci is constrained by Ti ≥ 0
and Ci ∈ [0, 1].
In simulation, we use N(20, 102) and
N(0.5, 0.32) to generate E[Ti] and E[Ci], respectively.
5.1.2 Simulation Results
Given the network topology, we randomly deploy decoys
in the network with different coverage R and run simula-
tion experiments. Each simulation run stops once IM mal-
ware hits a decoy user (blocking is in effect immediately) or
timeout occurs. The number of infected users and detection
time are the simulation output. For each coverage R, we
vary the decoy deployment 10 times and run simulation 100
times for each deployment, and have the mean and median
values derived from these 1, 000 simulation experiments.
With the increase of HoneyIM coverage, the correspond-
ing percentages of infected IM users on three different IM
networks are shown in Figure 3, in which the solid curves
are for mean values and the dashed curves are for median
values. The mean curves are above the median curves for
very small coverage values, and both types of curves drop
sharply and converge to zero with the increase of cover-
age. This clearly demonstrates the effectiveness of Hon-
eyIM. Figure 4 further zooms in on y-axis and compares the
7070
|V| = 1000, E[D] = 8
|V| = 6000, E[D] = 8
|V| = 6000, E[D] = 16
Mean
Median
8
10
)
%
(
s
r
e
s
u
d
e
t
c
e
n
f
I
15
10
5
0
0
2
4
6
Coverage of HoneyIM (%)
4
6
Coverage of HoneyIM (%)
Mean
Median
8
10
)
%
(
s
r
e
s
u
d
e
t
c
e
n
f
I
14
12
10
8
6
4
2
0
0
2
4
6
Coverage of HoneyIM (%)
Mean
Median
8
10
Figure 3. Relations between HoneyIM coverages and infected user percentages
|V|=1000, E[D]=8
|V|=6000, E[D]=8
|V|=6000, E[D]=16
)
%
(
s
r
e
s
u
d
e
t
c
e
n
f
I
2
50
45
40
35
30
25
20
15
10
5
0
0
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
)
%
(
s
r
e
s
u
d
e
t
c
e
f
n
i
n
a
e
M
Figure 5 shows the performance comparisons between
HoneyIM (coverage R = 3%) and throttling on the three
IM networks. The solid curves represent HoneyIM and the
dotted curves represent throttling. The dashed curves show
the spreading of IM malware with no mitigation. Note that
the y-axis is logarithmic, and all the results for throttling
and no mitigation are the mean values for 100 runs. Com-
pared with throttling, HoneyIM can achieve similar perfor-
mance in terms of the number of infected users on a small
network (|V | = 1, 000), and perform much better when the
network becomes bigger (|V | = 6, 000) and has more edges
(E[D] = 16). More importantly, HoneyIM can accurately
detect the malware and block its spread right after detection,
while throttling cannot differentiate malicious trafﬁc from
normal trafﬁc, let alone block them in an effective manner.
5.2. Real Experiment
We set up a small testbed comprising three machines.
We use one machine as the IM client and the other two
as HoneyIM and the network gateway. The suppression
module of HoneyIM is deployed on the network gateway.
Both the IM client and HoneyIM run inside virtual ma-
chines for security and ease of experimentation. We ﬁrst
use real IM malware binaries we have collected to test Hon-
eyIM by running malware on the IM client machine. We
test Jitux-A [26], Kelvir-F [27], Kelvir-M [25], and Kelvir-
Q [28], respectively, all of which spread through malicious
URL messages on MSN platforms. The URLs for Jitux-A
and Kelvir-F lead to .exe and .scr ﬁle downloading, while
the URLs for Kelvir-M and Kelvir-Q point to .php scripts
which also harvest victim’s email addresses. Unfortunately,
due to the legal reaction taken by the IM providers and se-
curity community, the webpages pointed by these known
malicious URLs are either invalid or have been removed by
the hosting websites5. The URL message sent by Kelvir-F
is not even received by HoneyIM, because of the ﬁltering in
MSN servers. No detailed information about IM malware is
5This situation also applies to other known IM malware.
0
0
2
4
Coverage of HoneyIM (%)
6
8
10
Figure 4. Comparisons among mean curves
mean curves of the three IM networks. Even with the 5%
coverage, HoneyIM can detect the spread of IM malware
only after 2% (or 0.4%) of all IM users are infected for the
network with |V | = 1, 000 (or |V | = 6, 000). Compared
to the number of nodes |V |, the average node degree E[D]
has much less effect on the performance of HoneyIM. Two
mean curves, the dashed one for |V | = 6, 000, E[D] = 8
and the dotted one for |V | = 6, 000, E[D] = 16, are almost
identical.
We also compare the performance of HoneyIM with that
of IM throttling [33]. The throttling of IM malware is usu-
ally conducted on an IM server. We use the “no-delay”
mode of IM throttling and conﬁgure the working set size
and threshold to 5 and 2, respectively, as suggested. Since
it is difﬁcult to simulate the working set for each user at run
time, we simplify the propagation model by (1) randomly
determining a node’s working set between 0 and 5 right be-
fore the node is propagating and (2) blocking the node af-
ter its propagation (no matter whether the delay queue is
overﬂowed or not). Therefore, the maximum number of the
nodes that a compromised node could infect is its working
set size plus 2 (the threshold). Note that this model is con-
servative compared to the original scheme, as we block an
infected node permanently once it starts spreading.
7171
103
102
101
100
0
50
70
60
50
40
30
20
10
0
0
2
s
r
e
s
u
d
e
t
c
e
n
f
I
)
%
(
s
r
e
s
u
d
e
t
c
e
n
f
i
n
a
e
M
|V| = 1000, E[D] = 8
|V| = 6000, E[D] = 8
104
103
102
101
s
r
e
s
u
d
e
t
c
e
n
f
I
|V| = 6000, E[D] = 16
104
103
102
101
s
r
e
s
u
d
e
t
c
e
n
f