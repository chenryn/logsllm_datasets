难。当然，一旦习惯了也就感觉没什么了。
合性问题，令表达式毫无歧义可言；其次，它让语言处理器更加简单高效，避免了语法分析的困
开始都不适应前缀表达式，但我认为前缀表达式是有很多优点的：首先，它彻底消除了运算符结
言都使用前缀表达式和用小括号表示的列表，例如1+1在Lisp 中将写成（+11)。很多初学者一
中的新兴Lisp方言；其次，所有Lisp 家族的语言都有很多共性，除了上面描述中带有Lisp 而非
Lisp、AutoLISP、Scheme、Racket（前身是PLT Scheme）和 Clojure，其中最后一个是高速发月
先，存在Common Lisp 之外的Lisp 语言，更准确地说是Lisp 方言（dialect），至少包括了Emacs
圾收集（GC）机制的编程语言，Lisp 环境中的任何对象，一旦失去了来自其他对象的引I用，就
的Lisp 代码。这导致了Lisp语言的另一个重要应用：通过加载补丁，Lisp 系统可以在运行中被
任何程序组成部分以及就地修改它们的能力，并在语义和功能上确保了这些操作不会破坏运行中
义某个程序组成部分（指的是变量、函数和类这些东西）的能力，还定义了从Lisp环境中清除
和其他语言很不同的一点是，Lisp 语言规范（至少CommonLisp 是这样的）不但包括了如何定
地重建导出前的Lisp 环境，从而达到增量开发或者哪怕是快速加载已有Lisp 程序的目的。最后，
为一个磁盘文件。通过直接加载这个文件而不是默认的那个只含有Lisp 本身的文件，可以迅速
除了简单的优化开关之外几乎无法调整其行为。各种Lisp 语言则采用完全不同的方式来运行Lisp
个代码编译成一个可执行程序或者被其他可执行程序使用的库。接下来语言本身是什么就不重要
人往往把一门语言的语法及其标准函数库视为语言的全部，因为一旦程序写好，编译器就会将整
不过 Lisp 语言最吸引人的地方还在于其与众不同的程序运行方式。从 C 语言一路学过来的
VIII
读者可能已经注意到了我在不停地混用 Lisp 和 Common Lisp 两个概念。
学习本书对更好地使用其他Lisp 方言无疑是大有帮助的。在翻阅书店里关于 AutoLISP
译
者
序
www.TopSage.com
，这有两层含义：首
---
## Page 8
CommonLisp程序员，我相信自己翻译这本书是合适的。
从事商业 Lisp 软件相关的开发工作。可能我还不是一个很好的译者，但作为一个经验丰富的
块的板主之一，专门负责Lisp 方向的讨论和技术分享。2011年7月，我离开网易以后开始全职
其中对于LispWorks 的 UDP支持代码是完全从头写的，因为官方并不支持。2009 年，我向国际
植网络库之一：usocket,并由于 SNMP 库的需要将其从原本只支持 TCP 扩展到了同时支持UDP,
Lisp 的网络监控系统的基础。我还在过去3年里参与维护了Common Lisp社区两个最重要的可移
务器端CommonLisp程序添加通过 SNMP协议进行远程监控的能力，也可以作为基于Common
CommonLisp 从头实现了一万行源代码规模的 SNMP 简单网络管理协议工具包，它可以为任何服
LispWorks，拥用三种主流操作系统上的 License。在网易从事 Linux 系统管理工作期间，我用
在内的十几种不同的CommonLisp 平台或实现，并自费购买了价值数千美元的商业开发环境
已经能够在当时最常见的 CMUCL平台（CMU Common Lisp）上编写一些简单的程序。后来在
学完了Common Lisp语言语法的主要部分，读完了包括本书在内的几本最经典的Lisp 书籍，并
就是我翻译本书的目的所在。
Lisp 语言还保持着旺盛的生命力，唯一的问题是如何让更多的国内计算机领域爱好者了解它。这
程度。免费平台越来越好，商业平台依然昂贵，开源工具蓬勃发展，所有这些都暗示着Common
Quicklisp 包管理平台，更是将Common Lisp 第三方软件包的安装过程提升到了前所未有的便捷
CPAN 的水平，但常用的工具包一应俱全，其中不乏高质量的大型项目。近年来最新的成果
和 Scieneer CL都以 SMP 支持作为主要卖点。第三方软件包长足发展，虽然尚未达到 Perl 社区
相对保守的Common Lisp 商业平台也开始或即将开始支持对称多处理器（SMP），其中LispWorks
MCL）也得到了良好的维护并始终跟进操作系统的自然发展。随着计算机硬件的高速发展，即便
平台从无到有（ECL、ABCL）或者发展壮大（SBCL、ClozureCL）的过程。经典平台（CMUCL
近几年的发展尤为迅速。在我学习Common Lisp 的这些年里，我亲眼目睹了儿个 Common Lisp
上升到一个新的高度，不过更加符合实用原则的思路还是先把本书读完。
握了本书中关于宏的章节以后就可以阅读 OnLisp 中的进阶内容，从而将自身对编程语言的认识
编程，这是Common Lisp 区别于其他语言甚至其他Lisp方言的最重要特性。我相信一旦读者掌
共同翻译成中文版，细心的读者可以从网上轻易地找到它。On Lisp 主要介绍 Common Lisp 的宏
Lisp（作者Paul Graham，也就是《黑客与画家》一书的作者）多年前已经被我和我的几位朋友
多后续的教材，在此就不一一重复了。需要特别指出的是，另一本著名的 Common Lisp 教材 On
荐《计算机程序的构造和解释》、Lisp in Small Pieces 和 TheLittle Schemer 等书籍比较好。
什么本质区别的)，我恐怕初学者从本书中学得 Scheme 编程思想的机会不大，这种情况下还是推
言区别相对大一些，如果连基本的变量和函数定义都在形式上完全不同的话（当然，思想上是没
易工作的5年里，我在工作之余从头研究了一遍Lisp 语言的发展史，亲身体会了包括Lisp机
过去8年里，我一直活跃在国内和国际 Common Lisp 社区的前沿。我在大学本科的最后两年
Common Lisp绝不是一门过时的编程语言,整个Common Lisp社区一直都在高速的发展之中
本书可以作为其他Common Lisp 语言教材的学习基础。在本书的最后一章里，作者给出了很
www.TopSage.com
译
序
IX
---
## Page 9
迅速理解几乎所有其他的编程语言将不再是问题。
是编程语言的两个极端，大多数人已经熟悉了C的那一端，但如果他们还熟悉另一端的话，那么
的读者可能没有机会在短期内将Lisp 用于他们的日常工作。之所以这样说是有原因的：C和Lisp
想说，和其他任何语言相比，花在理解Lisp上的时间和精力将绝对是物超所值的，即便相当多
历史来说，如果一门语言可以存活50年，那么它的内在生命力很可能保证其继续长期存活下去，
以及甄别各种计算机知识的重要程度和相互关系的能力就显得非常重要了。从计算机语言的发展
学习而无暇具体应用也是本末倒置。在这种情况下，有选择地学习最有用、最不易变质的知识,
一个人用这门语言写下的代码也将比其他语言的代码更有可能长久地造福后人。
对于一个计算机领域的从业人员或爱好者来说，学习通常是为了更好地应用，把所有时间都用来
总之，希望这本书能将读者顺利带入Lisp 领域。学习一门新的语言总是要花些成本的，但我
X
计算机领域每天都在高速发展，新语言和新技术的产生速度早已超过了一般人的学习速度。
译
者
序
www.TopSage.com
---
## Page 10
整在线MP3数据库和Web接口的通过网络流式传输MP3的服务器。
具有一定复杂度的软件—基于统计的垃圾过滤器、用来解析二进制文件的库，以及一个带有完
用它们。我讨论了你在编写实际程序中用到的所有语言特性，并用了多于三分之一的篇幅来开发
后，Lisp仍然有其独到之处。
训练或简单编辑器定制的实际的软件。并且我将说明即便在其许多特性已被其他语言所采纳以
准化的工业级别的Lisp方言，通过使用它，我将向你展示如何编写那些远远超越了愚蠢的学术
什么。或者可能你已经学了一些Lisp，但还没有足够的能力去用它编写感兴趣的软件。
一名能够胜任所有语言的高级程序员。或者可能你只是想要知道那些Lisp狂热者们总是在喊些
未想过会在同一本书的书名里看到Practical和Lisp。
只是因为有人正不休地谈论Lisp，而其认为这是一门历史上最伟大的语言。但是，你可能从
要么是来自大学里的计算机科学课程，要么是学习了足够多的Elisp以定制Emacs。或者可能你
亲爱的读者：
如果确实出现上述情形中的任何一种，那么本书就很适合你。CommonLisp是一种ANSI标
但你确实已经在读这样一本书了，你一定还想知道更多。也许你相信学习Lisp将使你成为
PracticalCommonLisp，这难道不矛盾吗？你可能和大多数程序员一样，知道一点儿Lisp：
现在就翻开它，看看这门人类发明的最伟大的语言是多么的实用吧。
与许多Lisp书籍所不同的是，本书不会只触及一些Lisp的伟大特性而让你自己思考如何使
此致
致读
www.TopSage.com
大家网
Peter Seibel
---
## Page 11
以完成本书的我的妻子Lily。
感谢 Apress 出版社其他参与本书出版工作的人们。
允许我使用图 26-1中的那张照片。
Steve Harris、Sam Pullara、Sriram Srinivasan 和 William Grosso 提供反馈。另外要感谢 Scott Whitten
Gabbour。我的几个非Lisp 相关的朋友也参与审阅了某些章节，感谢Marc Hedlund、Jolly Chen,
McCaughan、 Chris Riesbeck、 Bulent Murtezaoglu、 Emre Sevinc、 Chris Perkins L及 Tayssir John
指出：J.P.Massar（Bay Area Lispnik 成员，他在几次比萨午餐上极大地激发了我的灵感）、Gareth
出建议的人们。尽管无法提及所有人的名字，但对于一些提供了有价值的反馈的人要在这里特别
工作所用的 PDF文件，并将 CL-PDF作为我用来生成本书中线条图的 Common Lisp 程序的基础。
Battyani 编写的 CL-PDF和CL-TYPESETTING。我使用 CL-TYPESETTING 生成用于我个人编辑
在 comp.lang.lisp上撰写了成千上万字的帖子以阐述语言的多种方面及其来源。
而Pitman除了作为一位语言标准的首席技术编辑和CommonLispHyperSpec的开发者以外，还
Pitman。Margolin在我阅读该组资料时一直在提供各种琐碎的关于Lisp 历史和他个人经验的资料
来提供各种内容。特别地，我要感谢两位长期的comp.lang.lisp贡献者——BarryMargolin和Kent
术资料的宝库。因此，感谢Google提供了这一服务，也感谢所有comp.lang.lisp参与者们一直以
厌其烦地回答了有关Lisp及其历史的各种问题。我也经常翻阅该新闻组的Google存档，它是技
社在整个过程中给予了我鼓励和帮助。也要感谢Franz的 Sheng-Chuang Wu，提供了诸多帮助。
Lisp 书。当然，也非常感谢Fritz 说服 Apress 出版社出版一本由我来写的新Lisp 书。Apress 出版
名销售人员，他随后将我引荐给 Franz 的总裁 Fritz Kunze。Fritz 曾经提到他正想请人来写一本
售人员共进午餐，席间我们都认为需要有本Lisp 新书。其次我必须感谢 Steve Sears，午餐中的一
Franz的 Steven Haflich。我们在 Bay Area Lispniks 见面会上相遇时，他邀请我和 Franz的一些销
最后，也是最重要的，我要感谢我的家庭。感谢父母所做的一切，以及总是坚定地相信我可
我的技术审稿人 Steven Haflich,Mikel Evins、Barry Margolin 以及我的文字编辑Kim Wimpsett,
在撰写本书时，其他不可或缺的资源包括用于 PDF 生成和排版的 Common Lisp 库以及由 Marc
我在撰写本书时最不可或缺的资源是comp.lang.lisp 新闻组。comp.lang.lisp 的忠实成员们不
我还想感谢许多在网上阅读了本书部分草稿，并通过电子邮件指出笔误、提出问题或简单给
如果不是因为一些愉快的巧合，本书不会写出来，至少作者不是我。因此，我必须首先感谢
www.TopSage.com
致
谢
---
## Page 12
的结果和生成的其他输出都会显示在接下来的几行里。有时，我也会在表达式后使用→来表示求
其中的 CL-USER>是 Lisp 提示符，其后总是跟着需要求值的表达式，在本例中是(+1 2）。求值
REPL）中，所以将经常如下显示在 REPL中对Lisp 形式求值的结果：
字和括号）都是一些将会出现在Lisp 形式中的字面文本。
的元素。偶尔也会出现以竖线（）分隔的替代内容。模版中的所有其他内容（通常只是一些名
形式"的语法。例如，下面描述了 DEFUN 的语法，它是标准的函数定义宏：
值的结果，就像下面这样：
的示例代码的样式将会如下所示：
是我已经引人的，要么是我将要引人的。由语言标准所定义的名字会写成这样：DEFUN。更大块
①Lisp 形式（Lisp form）是Lisp 特有的一种语法构造，本书在不致引起歧义的上下文里，也会将其简称为“形式”。
最后，由于跟 Common Lisp 之间的许多交互都发生在交互性的“读-求值-打印”循环（即
这些模板中以斜体书写的名字需要填人我将在正文中描述的具体名字或 Lisp 形式。斜体名
(defun name (parameter*)
由于 Common Lisp的语法以其规范性和简洁性著称,因此我采用简单的模版来描述各种Lisp
偶尔还会使用等价符号（三）来说明两个表达式是等价的，就像这样：
(+12)·3
CL-USER>(+ 1 2)
(defun foo (x y z)
诸如 xxx这样的内嵌文本是代码，它们通常是函数、变量和类等元素的名字，这些名字要么
(+123)=(+(+12) 3)
body-form*)
[documentation-string
（+xyz))
排版约定
www.TopSage.com
一译者注
---
## Page 13
第3章·实~简单的数据库.7
第2章周而复始：REPL简介.
第1章绪言：为什.isp..
#
4.2
4.1括号里都可以有什….34.
3.9
3.8
9
2.6
1.3
本书面向的读者·
作为Lisp形式的.S-表达式..38
消除重.复．获益良….9
更新已有的记录一
保存·.载数据库….3
查看数据库的内容·
Lisp 风格的“Hello, World”
体验·..
放开思想交互式编程..0
安装运行Lisp in aBox...1.0
WHERE再战
www.TopSage.com
第7.章·.标控制··
L
3
2
6.7
9
3
9
3
6.1
5.9
9
6
录
DOLIST.DOTIMES.........
AND.OR.NO.........
其他修改位置的方….