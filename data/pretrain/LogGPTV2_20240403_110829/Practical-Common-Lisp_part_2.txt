### 译者序

#### 译者背景与动机
作为一名经验丰富的 Common Lisp 程序员，我曾在网易从事 Linux 系统管理工作，并使用包括 LispWorks 在内的十几种不同的 Common Lisp 平台。自2009年起，我参与维护了 Common Lisp 社区两个最重要的可移植网络库之一：usocket，并将其扩展至支持 UDP。我还从头实现了一个基于 Common Lisp 的 SNMP 工具包，为服务器端程序添加远程监控能力。在过去的8年里，我一直活跃于国内外的 Common Lisp 社区。

我相信，Lisp 语言不仅具有强大的生命力，而且对编程思想有着深远的影响。然而，国内对 Lisp 语言的认知相对较少。通过翻译本书，我希望能让更多人了解并掌握这门独特的编程语言。

#### Lisp 语言的独特性
Lisp 语言最吸引人的地方在于其与众不同的程序运行方式。与其他语言不同，Lisp 规范不仅定义了如何定义某个程序组成部分（如变量、函数和类），还定义了从 Lisp 环境中清除这些对象的方法。这种灵活性使得 Lisp 系统可以在运行中被修改而不破坏其稳定性。

此外，Lisp 采用前缀表达式和用小括号表示的列表，例如 1+1 在 Lisp 中写成 (+ 1 1)。虽然初学者可能难以适应，但前缀表达式具有消除歧义和简化语法分析的优点。

#### 学习 Lisp 的价值
学习 Lisp 不仅可以提升编程技能，还能帮助理解其他编程语言。C 和 Lisp 是编程语言的两个极端，熟悉这两者的程序员将具备更广泛的知识体系。通过掌握 Lisp 的宏系统，读者可以编写出更加灵活和高效的代码。

#### 本书内容概述
本书涵盖了 Common Lisp 的各个方面，从基础语法到高级特性。最后一章提供了许多后续学习资源，帮助读者进一步深入研究。无论你是初学者还是有经验的程序员，本书都将为你提供宝贵的指导。

### 致谢

首先，我要感谢我的家人，特别是我的妻子 Lily，她在整个写作过程中给予了我巨大的支持。同时，我也要感谢 Apress 出版社的工作人员以及所有参与审稿和技术支持的人们。特别感谢 comp.lang.lisp 新闻组的成员们，他们提供了宝贵的技术资料和反馈。

### 排版约定

- **斜体**：用于表示需要替换的具体名字或 Lisp 形式。
- **等价符号** (≡)：表示两个表达式是等价的。
- **示例代码**：以 `CL-USER>` 开头，表示在交互式的“读-求值-打印”循环（REPL）中的输入和输出。

### 目录

1. 绪言：为什么选择 Lisp
   - 本书面向的读者
   - 安装和运行 Lisp in a Box
   - 体验交互式编程
2. 周而复始：REPL 简介
   - Lisp 风格的“Hello, World”
   - 打开思维进行交互式编程
3. 实现简单的数据库
   - 查看数据库的内容
   - 更新已有的记录
   - 保存和加载数据库
4. 控制结构
   - AND, OR, NOT
   - DOLIST, DOTIMES
   - 其他修改位置的方法

希望这本书能帮助你顺利进入 Lisp 编程的世界！