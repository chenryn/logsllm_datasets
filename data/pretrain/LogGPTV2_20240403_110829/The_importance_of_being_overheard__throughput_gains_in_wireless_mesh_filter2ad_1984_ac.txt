As the graphs will show, overhearing plays a relatively minor role.
In order to attribute performance gains to various aspects of the
ExOR protocol, we have implemented three simpliﬁed versions
of ExOR, each with a subset of ExOR’s features disabled. Fig-
ure 9(a) compares the throughput of each of these versions to tra-
ditional routing, and Figure 9(b) once again shows the per-route
performance relative to ExOR. Note that these graphs use the same
dataset as Figure 7, so the ’trad-TCP’ and ’ExOR’ lines are un-
changed. We describe these three versions and their relative perfor-
mance in increasing levels of sophistication (and performance).
6.1 Bulk transport
Perhaps the most fundamental aspect of ExOR (and MORE) is
its batch structure. Rather than transmitting packets as a stream
(or window as in TCP), ExOR uses an explicit batch construct,
where each node transmits an entire batch at a time before paus-
ing to allow downstream nodes to forward them. We implement
this functionality on top of traditional routing with link-level ac-
knowledgments. In this mode, the batch map is not used (but for
better comparison, it is still included as an overhead). Instead, each
station transmits all packets it has once. Packets are sent in 802.11
unicast mode (as opposed to ExOR’s usual broadcast), so link-level
retransmissions may occur on lossy links, up to 10 times in our con-
ﬁguration. We note that this—not our ’trad-TCP’ line—is what the
ExOR paper calls ’Srcr’.
(a)
t
n
e
s
n
o
i
t
c
a
r
F
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
3
x
i
l
a
8
x
i
l
a
4
x
i
l
a
6
x
i
l
a
hop-by-hop
ExOR
(b)
modrate
Figure 6: An example route using different algorithms.
The same effect is presented in another format in Figure 6(b),
which depicts the same transfer from alix1 to alix3. The y axis
indicates the number of packets a station transmits normalized to
the total number of packets transmitted along the route (although
we do not plot link-layer transmissions used by the ‘hop-by-hop’
protocol). Node alix3 is the source, and therefore has to transmit
all packets at least once. The four transmitting nodes are laid out
along the x axis, ordered in increasing proximity to the destination.
Bars and error bars correspond to the average and standard devi-
ation among all 10 batches, while dots indicate the performance
predicted by the measurements.
391%
,
s
e
t
u
o
r
f
o
F
D
C
 100
 80
 60
 40
 20
 0
trad-TCP
ExOR
modrate
MORE
 0
 500  1000  1500  2000  2500  3000  3500  4000
 100
 80
 60
 40
 20
%
,
s
e
t
u
o
r
f
o
F
D
C
 0
-100
trad-TCP
modrate
MORE
-50
 0
 50
 100
 150
Kbytes/sec
(a) CDF of path throughputs.
Speed differences, %
(b) Per-path throughput relative to ExOR.
Figure 7: The performance of modrate compared to ExOR, MORE, and traditional routing. ALIX network, power 30.
c
e
s
/
s
e
t
y
b
K
 4000
 3500
 3000
 2500
 2000
 1500
 1000
 500
 0
trad-TCP
ExOR
modrate
MORE
)
3
(
0
1
n
-
9
n
)
3
(
0
1
n
-
1
n
)
3
(
0
1
n
-
5
n
)
2
(
0
1
n
-
4
n
)
2
(
7
n
-
4
n
)
2
(
9
n
-
5
n
)
2
(
0
1
n
-
8
n
)
2
(
0
1
n
-
2
n
)
2
(
1
n
-
3
n
)
1
(
6
n
-
8
n
)
1
(
5
n
-
7
n
)
1
(
8
n
-
9
n
)
1
(
6
n
-
5
n
)
1
(
6
n
-
3
n
)
1
(
1
n
-
8
n
Figure 8: Path throughput for 15 representative routes. ALIX network, power 30.
It is frequently observed that TCP’s back-off behavior is not
ideal in wireless mesh networks. Hence, one might expect that
bulk transfer, even operating on exactly the same routes at the same
speeds, would perform better. Indeed, the simple bulk-transfer vari-
ant, labeled ‘hop-by-hop’ in the graphs, signiﬁcantly out-performs
’trad-TCP’, on average constituting more than 50% of ExOR’s im-
provement. Interestingly, in almost 20% of cases, it out-performs
ExOR.
6.2 Group acknowledgments
For a protocol transmitting batches at a time, it is natural to con-
sider getting rid of individual packet acknowledgments in favor of
bulk or group acknowledgments. In particular, instead of waiting
for a link-level ACK after every frame, a node can send a single,
combined transport-layer ACK at the end of transfer. Indeed, this
is precisely what ExOR does with its batch maps. Group acknowl-
edgments increase the latency of retransmissions, but latency is not
a ﬁgure of merit for ExOR or the other protocols we study.
We have implemented a group acknowledgment scheme by sim-
ply disabling overhearing in ExOR. In particular, a node will only
accept packets transmitted by the previous hop according to the un-
derlying Srcr route. This algorithm is labeled ’group-ACK’ in the
graphs. We observe that ’group-ACK’ is likely to perform well on
low-loss links—because no time is wasted on superﬂuous link-level
ACKs—and asymmetric links with lossy ACK channels. Given
the signiﬁcant improvement over the ’hop-by-hop’ line in this con-
ﬁguration, we conjecture one or both of these instances occur fre-
quently. We ascribe the small number of routes where ’hop-by-hop’
outperforms ’group-ACK’ to experimental variation.
6.3 On-path overhearing
Overhearing can be classiﬁed into two types: overhearing by
nodes on the traditional route from source to destination, and in-
cidental overhearing by nodes that would not be involved in tradi-
tional forwarding. While ExOR and MORE both take advantage
of the latter, the former is easier to build into existing protocols, as
the RTS-ID system showed [1]. We evaluate the effectiveness of
strictly on-path overhearing by restricting ExOR’s forwarder list to
include nodes only on the Srcr path—as opposed to any node that
is predicted to overhear at least 10% of the transmissions.
Forwarding with this restricted form of overhearing is labeled
’on-path’ in the graphs. In our implementation, there can be no
overhead with respect to group acknowledgments (any deviations
are once again attributable to experimental noise). In this conﬁgu-
ration, however, there is also no signiﬁcant beneﬁt. Theoretically,
however, on-path overhearing can add value when there is no single
392%
,
s
e
t
u
o
r
f
o
F
D
C
 100
 80
 60
 40
 20
 0
trad-TCP
hop-by-hop
group-ACK
on-path
ExOR
 0
 500  1000  1500  2000  2500  3000  3500  4000
 100
 80
 60
 40
 20
%
,
s
e
t
u
o
r
f
o
F
D
C
 0
-100
trad-TCP
hop-by-hop
group-ACK
on-path
-50
 0
 50
 100
 150
Kbytes/sec
(a) CDF of path throughputs.
Speed differences, %
(b) Per-path throughput relative to ExOR.
Figure 9: The performance of various ﬂavors of the ExOR algorithm. ALIX network, power 30.
high-quality link for a particular hop in a route, but the combina-
tion of reception rates at the the next hop and down-line forwarders
combine to provide efﬁcient performance.
6.4 Off-path overhearing
The ﬁnal addition to arrive at ExOR is to enable off-path over-
hearing; namely, to include the full set of potential forwarders in
the forwarder list. In this case, there are multiple possible paths,
and packets choose the best path dynamically. We observe, how-
ever, that ExOR is not always the most efﬁcient. In particular, these
extra nodes can actually add overhead due to scheduling: it takes
time to communicate the longer forwarder list and start and stop a
round. Also, if the additional nodes have poor reception, they may
not receive batch maps, and keep transmitting the same data over
and over again. We ﬁnd that ExOR works best when routes are
generally poor, but there are many of them. Off-path overhearing
also helps when routing information is unreliable or out of date, as
extra nodes may become valuable.
6.5 Modrate
Given the small contribution that overhearing—either on-path or
off-path—makes to ExOR’s performance in the testbed conﬁgura-
tion studied so far, in retrospect it is not at all surprising that mod-
rate would have relatively modest gains. In particular, intuitively,
modrate provides larger gains when ExOR runs all links at high
speed (so there is room for modrate to decrease them), but recep-
tion rates are similar across a range of intermediate hops (so the
best path is just one of a number of alternatives).
In order to evaluate the potential for modrate to improve perfor-
mance when these conditions arise, we attempt to boost the average
link rate selected by ExOR by increasing the connectivity of the
network. Rather than modify the topology—which would make it
hard to compare results across runs—we adjust the network-wide
power level. As observed in Figure 2, different power levels have
dramatically different reception ranges in the ALIX testbed. We re-
run the previous experiments at three additional power levels—40,
50, and 60 (full power)—in addition to the level 30 results previ-
ously reported. As previously noted, modrate frequently chooses
the same rate as ExOR. Hence, we restrict our attention to routes
where modrate selects different speeds—approximately 7–10% of
all possible routes in the ALIX testbed, depending on the power
level employed. Figures 10(a)–10(d) present the results for all four
speeds. (Note that the level-30 graph is simply a restatement of
Figures 7(b) and 9(b).) To give an understanding of the magnitude
of experimental noise, we run the modrate algorithm twice and plot
both results (’modrate’ and ’modrate2’).
Not only does the contribution of modrate change with power
level (peaking at power level 50 when connectivity is high, but still
more variable than at full power), but the various components of
ExOR do as well. Notably, the contribution of group acknowledg-
ments decreases at power level 40, presumably because ExOR has
selected unreliable links. Bulk acknowledgments are similarly of
limited utility in the presence of lossy links. Several overall obser-
vations can be made as well: none of the techniques provide much
improvement at low or full power, as poorly connected network
generally has only one path made of of low quality links, while,
conversely, a well-connected network with short paths does just
ﬁne with traditional routing. Networks with a range of connectivity
provide the most fertile ground for all of the enhancements, but the
relative importance of each can vary.
7. BUILDING-WIDE PERFORMANCE
Now that we understand the reasons for potential performance
improvements, we return to consider whether such conditions exist
in the Jigsaw testbed. Figure 11 shows the performance of vari-
ous schemes on the top three (2nd through 4th) ﬂoors of the Jigsaw
testbed. These experiments use 802.11g so they were conducted