### Analysis of ExOR Protocol Performance

#### Role of Overhearing
As the graphs will demonstrate, overhearing plays a relatively minor role in performance. To attribute performance gains to various aspects of the ExOR protocol, we have implemented three simplified versions, each with a subset of ExOR’s features disabled. Figure 9(a) compares the throughput of these versions to traditional routing, and Figure 9(b) shows the per-route performance relative to ExOR. These graphs use the same dataset as Figure 7, so the 'trad-TCP' and 'ExOR' lines remain unchanged. We will describe these three versions and their relative performance in increasing levels of sophistication.

#### 6.1 Bulk Transport
Perhaps the most fundamental aspect of ExOR (and MORE) is its batch structure. Unlike traditional protocols that transmit packets as a stream or window (as in TCP), ExOR uses an explicit batch construct, where each node transmits an entire batch at a time before pausing to allow downstream nodes to forward them. We implement this functionality on top of traditional routing with link-level acknowledgments. In this mode, the batch map is not used (but included as overhead for better comparison). Each station transmits all packets it has once, using 802.11 unicast mode (as opposed to ExOR’s usual broadcast). Link-level retransmissions may occur on lossy links, up to 10 times in our configuration. This implementation, not our 'trad-TCP' line, is what the ExOR paper calls 'Srcr'.

**Figure 6: An Example Route Using Different Algorithms**
- **Figure 6(a)**: An example route using different algorithms.
- **Figure 6(b)**: The same transfer from alix1 to alix3, presented in another format. The y-axis indicates the number of packets a station transmits, normalized to the total number of packets transmitted along the route. Node alix3 is the source and must transmit all packets at least once. The four transmitting nodes are laid out along the x-axis, ordered by increasing proximity to the destination. Bars and error bars correspond to the average and standard deviation among all 10 batches, while dots indicate the performance predicted by the measurements.

**Figure 7: Performance Comparison**
- **Figure 7(a)**: CDF of path throughputs.
- **Figure 7(b)**: Per-path throughput relative to ExOR.

**Figure 8: Path Throughput for 15 Representative Routes**
- **Figure 8**: Path throughput for 15 representative routes in the ALIX network with power 30.

It is frequently observed that TCP’s back-off behavior is not ideal in wireless mesh networks. Therefore, one might expect that bulk transfer, even operating on the same routes at the same speeds, would perform better. Indeed, the simple bulk-transfer variant, labeled 'hop-by-hop' in the graphs, significantly outperforms 'trad-TCP', on average constituting more than 50% of ExOR’s improvement. Interestingly, in almost 20% of cases, it outperforms ExOR.

#### 6.2 Group Acknowledgments
For a protocol transmitting batches at a time, it is natural to consider group acknowledgments instead of individual packet acknowledgments. Specifically, instead of waiting for a link-level ACK after every frame, a node can send a single, combined transport-layer ACK at the end of the transfer. This is precisely what ExOR does with its batch maps. Group acknowledgments increase the latency of retransmissions, but latency is not a critical figure of merit for ExOR or the other protocols we study.

We have implemented a group acknowledgment scheme by disabling overhearing in ExOR. A node will only accept packets transmitted by the previous hop according to the underlying Srcr route. This algorithm is labeled 'group-ACK' in the graphs. We observe that 'group-ACK' performs well on low-loss links because no time is wasted on superfluous link-level ACKs, and on asymmetric links with lossy ACK channels. Given the significant improvement over the 'hop-by-hop' line in this configuration, we conjecture that one or both of these instances occur frequently. The small number of routes where 'hop-by-hop' outperforms 'group-ACK' is attributed to experimental variation.

#### 6.3 On-Path Overhearing
Overhearing can be classified into two types: overhearing by nodes on the traditional route from source to destination, and incidental overhearing by nodes not involved in traditional forwarding. While ExOR and MORE both take advantage of the latter, the former is easier to build into existing protocols, as shown by the RTS-ID system [1]. We evaluate the effectiveness of strictly on-path overhearing by restricting ExOR’s forwarder list to include nodes only on the Srcr path, as opposed to any node predicted to overhear at least 10% of the transmissions.

Forwarding with this restricted form of overhearing is labeled 'on-path' in the graphs. In our implementation, there is no overhead with respect to group acknowledgments (any deviations are attributable to experimental noise). However, there is also no significant benefit. Theoretically, on-path overhearing can add value when there is no single high-quality link for a particular hop, but the combination of reception rates at the next hop and down-line forwarders can provide efficient performance.

#### 6.4 Off-Path Overhearing
The final addition to arrive at ExOR is to enable off-path overhearing, including the full set of potential forwarders in the forwarder list. In this case, there are multiple possible paths, and packets choose the best path dynamically. We observe, however, that ExOR is not always the most efficient. Extra nodes can add overhead due to scheduling and communication of the longer forwarder list. If additional nodes have poor reception, they may not receive batch maps and keep retransmitting the same data. ExOR works best when routes are generally poor but numerous, and off-path overhearing helps when routing information is unreliable or outdated.

#### 6.5 Modrate
Given the small contribution that overhearing—either on-path or off-path—makes to ExOR’s performance in the testbed configuration studied so far, it is not surprising that modrate would have relatively modest gains. Intuitively, modrate provides larger gains when ExOR runs all links at high speed, but reception rates are similar across a range of intermediate hops.

To evaluate the potential for modrate to improve performance under these conditions, we boost the average link rate selected by ExOR by increasing the connectivity of the network. Rather than modify the topology, we adjust the network-wide power level. As observed in Figure 2, different power levels have dramatically different reception ranges in the ALIX testbed. We re-run the previous experiments at three additional power levels—40, 50, and 60 (full power)—in addition to the level 30 results previously reported. Modrate frequently chooses the same rate as ExOR, so we restrict our attention to routes where modrate selects different speeds—approximately 7–10% of all possible routes in the ALIX testbed, depending on the power level.

**Figures 10(a)–10(d)**: Results for all four speeds. (Note that the level-30 graph is a restatement of Figures 7(b) and 9(b).) To understand the magnitude of experimental noise, we run the modrate algorithm twice and plot both results ('modrate' and 'modrate2').

Not only does the contribution of modrate change with power level (peaking at power level 50 when connectivity is high, but still more variable than at full power), but the various components of ExOR do as well. Notably, the contribution of group acknowledgments decreases at power level 40, presumably because ExOR has selected unreliable links. Bulk acknowledgments are similarly of limited utility in the presence of lossy links. Overall, none of the techniques provide much improvement at low or full power, as poorly connected networks generally have only one path made of low-quality links, while well-connected networks with short paths do fine with traditional routing. Networks with a range of connectivity provide the most fertile ground for enhancements, but the relative importance of each can vary.

### 7. Building-Wide Performance
Now that we understand the reasons for potential performance improvements, we return to consider whether such conditions exist in the Jigsaw testbed. Figure 11 shows the performance of various schemes on the top three floors (2nd through 4th) of the Jigsaw testbed. These experiments use 802.11g and were conducted to evaluate the real-world applicability of the ExOR protocol.