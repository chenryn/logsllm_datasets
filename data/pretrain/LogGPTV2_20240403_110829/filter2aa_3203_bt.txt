2. To defend against network attacks  
Both of these goals are met through the use of cryptography-based protection services, security 
protocols, and dynamic key management. This foundation provides the strength and flexibility required 
to help protect communications between private network computers, domains, sites, remote sites, 
extranets, and dial-up clients. You can further use IPsec to block receipt or transmission of specific 
traffic types. 
IPsec is based on an end-to-end security model. The only computers that must be aware of IPsec are 
the sending and receiving computers. Each handles security at its respective end and assumes that the 
medium over which the communication takes place is not protected. Computers that only route data 
from source to destination are not required to support IPsec, but they are required to forward IPsec 
traffic.  
Security Properties of IPsec-protected Communications 
IPsec provides the following security properties to help protect communications:  
Data integrity  Helps protect data from unauthorized modification in transit. Data integrity helps ensure 
that the data received is exactly the same as the data sent. Hash functions authenticate each packet 
with a cryptographic checksum using a shared, secret key. Only the sender and receiver have the key 
that is used to calculate the checksum. If the packet contents have changed, the cryptographic 
checksum verification fails and the receiver discards the packet.  
Data origin authentication  Helps verify that the data could have been sent only from a computer that 
has the shared, secret key. The sender includes a message authentication code with a calculation that 
includes the shared, secret key. The receiver performs the same calculation and discards the message 
if the receiver’s calculation does not match the message authentication code that is included in the 
message. The message authentication code is the same as the cryptographic checksum that is used 
for data integrity.  
Confidentiality (encryption)  Helps ensure that the data is disclosed only to intended recipients. 
Confidentiality is achieved by encrypting the data before transmission. Encryption ensures that the data 
cannot be interpreted during its transit across the network, even if a malicious user intercepts and 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 367 
captures the packet. Only the communicating computers with the shared, secret key can easily decrypt 
the packet contents and determine the original data.  
Anti-replay  Helps ensure the uniqueness of each IP packet by placing a sequence number on each 
packet. Anti-replay is also called replay prevention. Anti-replay helps ensure that a malicious user 
cannot capture data and reuse or replay it, possibly months later, to establish a session or to gain 
access to information or other resources.   
IPsec Protocols  
IPsec provides its security services by wrapping the payload of an IP packet with an additional header 
or trailer that contains the information to provide data origin authentication, data integrity, data 
confidentiality, and replay protection. IPsec headers consist of the following: 
Authentication header (AH) 
Provides data authentication, data integrity, and replay protection for an IP packet. 
Encapsulating Security Payload (ESP) header and trailer 
Provides data authentication, data integrity, replay protection, and data confidentiality for an IP 
packet payload. 
The result of applying the AH or the ESP header and trailer to an IP packet transforms the packet into a 
protected packet. 
To negotiate the set of security parameters to help protect the traffic, such as whether to use AH or 
ESP and what types of encryption and authentication algorithms to use, IPsec peers use the Internet 
Key Exchange (IKE) protocol. 
IPsec Modes 
IPsec supports two modes—transport mode and tunnel mode—that describe how the original IP packet 
is transformed into a protected packet.  
Transport Mode 
Transport mode protects an IP payload through an AH or an ESP header. Typical IP payloads are TCP 
segments (which contain a TCP header and TCP segment data), UDP messages (which contain a UDP 
header and UDP message data), and Internet Control Message Protocol (ICMP) messages (which 
contain an ICMP header and ICMP message data). 
AH in transport mode provides data origin authentication, data integrity, and anti-replay for the entire 
packet (both the IP header and the data payload carried in the packet, except for fields in the IP header 
that must change in transit). This type of protection does not provide confidentiality, which means that it 
does not encrypt the data. The data can be read but not easily modified or impersonated. AH uses 
keyed hash algorithms for packet integrity.  
For example, Computer A sends data to Computer B. The IP header, the AH header, and the IP 
payload are protected with data integrity and data origin authentication. Computer B can determine that 
Computer A really sent the packet and that the packet was not modified in transit.  
AH is identified in the IP header with an IP protocol ID of 51. You can use AH alone or combine it with 
ESP. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 368 
The AH header contains a Security Parameters Index (SPI) field that IPsec uses in combination with 
the destination address and the security protocol (AH or ESP) to identify the correct security association 
(SA) for the communication. IPsec at the receiver uses the SPI value to determine with which SA the 
packet is identified. To prevent replay attacks, the AH header also contains a Sequence Number field. 
An Authentication Data field in the AH header contains the integrity check value (ICV), also known as 
the message authentication code, which is used to verify both data integrity and data origin 
authentication. The receiver calculates the ICV value and checks it against this value (which is 
calculated by the sender) to verify integrity. The ICV is calculated over the IP header, the AH header, 
and the IP payload.  
AH authenticates the entire packet for data integrity and data origin authentication, with the exception of 
some fields in the IP header that might change in transit (for example, the Time to Live and Checksum 
fields). Figure 13-1 shows the original IP packet and how it is protected with AH in transport mode. 
Figure 13-1  A packet protected with AH in transport mode 
ESP in transport mode provides confidentiality (in addition to data origin authentication, data integrity, 
and anti-replay) for an IP packet payload. ESP in transport mode does not authenticate the entire 
packet. Only the IP payload (not the IP header) is protected. You can use ESP alone or combine it with 
AH. For example, Computer A sends data to Computer B. The IP payload is encrypted and 
authenticated. Upon receipt, IPsec verifies data integrity and data origin authentication and then 
decrypts the payload.  
ESP is identified in the IP header with the IP protocol ID of 50 and consists of an ESP header that is 
placed before the IP payload, and an ESP and authentication data trailer that is placed after the IP 
payload. 
Like the AH header, the ESP header contains SPI and Sequence Number fields. The Authentication 
Data field in the ESP trailer is used for message authentication and integrity for the ESP header, the 
payload data, and the ESP trailer.  
Figure 13-2 shows the original IP packet and how it is protected with ESP. The authenticated portion of 
the packet indicates where the packet has been protected for data integrity and data origin 
authentication. The encrypted portion of the packet indicates what information is confidential. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 369 
Figure 13-2  A packet protected with ESP in transport mode 
The IP header is not authenticated and is not protected from modification. To provide data integrity and 
data origin authentication for the IP header, use ESP and AH.  
Tunnel Mode 
Tunnel mode helps protect an entire IP packet by treating it as an AH or ESP payload. With tunnel 
mode, an IP packet is encapsulated with an AH or an ESP header and an additional IP header. The IP 
addresses of the outer IP header are the tunnel endpoints, and the IP addresses of the encapsulated IP 
header are the original source and final destination addresses. 
As Figure 13-3 shows, AH tunnel mode encapsulates an IP packet with an AH and an IP header and 
authenticates the entire packet for data integrity and data origin authentication. 
Figure 13-3  A packet protected with AH in tunnel mode 
As Figure 13-4 shows, ESP tunnel mode encapsulates an IP packet with both an ESP and IP header 
and an ESP authentication trailer. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 370 
Figure 13-4  A packet protected with ESP in tunnel mode 
Because a new header for tunneling is added to the packet, everything that comes after the ESP 
header is authenticated (except for the ESP Authentication Data field) because it is now encapsulated 
in the tunneled packet. The original header is placed after the ESP header. The entire packet is 
appended with an ESP trailer before encryption occurs. Everything that follows the ESP header is 
encrypted, including the original header that is now part of the data portion of the packet but not 
including the ESP authentication data field.  
The entire ESP payload is then encapsulated within a new IP header, which is not encrypted. The 
information in the new IP header is used only to route the packet to the tunnel endpoint.  
If the packet is being sent across a public network, the packet is routed to the IP address of the tunnel 
server for the receiving intranet. In most cases, the packet is destined for an intranet computer. The 
tunnel server decrypts the packet, discards the ESP header, and uses the original IP header to route 
the packet to the destination intranet computer. 
In tunnel mode, you can combine ESP with AH, providing both confidentiality for the tunneled IP packet 
and data integrity and data origin authentication for the entire packet. 
Negotiation Phases 
Before two computers can exchange protected data, they must establish a contract. In this contract, 
called a security association (SA), both computers agree on how to protect information. An SA is the 
combination of a negotiated encryption key, security protocol, and SPI, which together define the 
security used to protect the communication from sender to receiver. The SPI is a unique, identifying 
value in the SA that is used to distinguish among multiple SAs that exist at the receiving computer.  
For example, multiple SAs might exist if a computer using IPsec protection is communicating with 
multiple computers at the same time. This situation occurs frequently when the computer is a file server 
or a remote access server that serves multiple clients. In these situations, the receiving computer uses 
the SPI to determine which SA the computer should use to process the incoming packets. 
To build this contract between the two computers, the IETF has defined IKE as the standard method of 
SA and key determination. IKE does the following: 
Centralizes SA management, reducing connection time.  
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 371 
Generates and manages shared, secret keys that help protect the information.  
This process not only helps protect communication between computers, it also helps protect remote 
computers that request protected access to a corporate network. In addition, this process works 
whenever a security gateway performs the negotiation for the final destination computer. 
Phase I or Main Mode Negotiation 
To help ensure successful and protected communication, IKE performs a two-phase operation. IKE 
helps ensure confidentiality and authentication during each phase by using encryption and 
authentication algorithms that the two computers agree on during security negotiations. With the duties 
split between two phases, keys can be created rapidly.  
During the first phase, the two computers establish a protected, authenticated channel. This phase is 
called the phase I SA or main mode SA. IKE automatically protects the identities of the two computers 
during this exchange. 
A main mode negotiation consists of the following steps: 
1. Policy negotiation  
The following four mandatory parameters are negotiated as part of the main mode SA: 
The encryption algorithm  
The hash algorithm  
The authentication method  
The Diffie-Hellman (DH) group to be used for the base keying material  
Different versions of Windows support different sets of encryption algorithms, hash algorithms, 
authentication methods, and DH groups. For more information, see Windows Help and Support.  
2. DH exchange  
At no time do the two computers exchange actual keys. The computers exchange only the base 
information that the DH key determination algorithm requires to generate the shared, secret key. 
After this exchange, the IKE service on each computer generates the master key that the computers 
use for subsequent communications.  
3. Authentication  
The computers attempt to authenticate the DH key exchange. A DH key exchange without 
authentication is vulnerable to a man-in-the-middle attack. A man-in-the-middle attack occurs when a 
computer masquerades as the endpoint between two communicating peers. Without successful 
authentication, communication cannot proceed. The communicating peers use the master key, in 
conjunction with the negotiation algorithms and methods, to authenticate identities. The 
communicating peers hash and encrypt the entire identity payload (including the identity type, port, 
and protocol) using the keys generated from the DH exchange in the second step. The identity 
payload, regardless of which authentication method is used, is protected from both modification and 
interpretation.  
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 372 
The initiator offers a potential SA to the receiver. The responder cannot modify the offer. Should the 
offer be modified, the initiator rejects the responder's message. The responder sends either a reply 
accepting the offer or a reply with alternatives.  
Phase II or Quick Mode Negotiation 
In this phase, the IPsec peers negotiate the SAs to protect the actual data sent between them. A quick 
mode negotiation consists of the following steps: 
1. Policy negotiation occurs.  
The IPsec peers exchange the following requirements to protect the data transfer: 
The IPsec protocol (AH or ESP)  
The hash algorithm  
The algorithm for encryption, if requested 
The computers reach a common agreement and establish two SAs. One SA is for inbound 
communication, and the other is for outbound communication. 
2. Session key material is refreshed or exchanged.  
IKE refreshes the keying material, and new shared keys are generated for data integrity, data origin 
authentication, and encryption (if negotiated). If rekeying is required, either a second DH exchange 
(as described in main mode negotiation) occurs, or a refresh of the original DH key is used.  
The main mode SA helps protect the quick mode negotiation of security settings and keying material 
(for the purpose of securing data). The first phase helped protect the computers’ identities, and the 
second phase helps protect the keying material by refreshing it before sending data. IKE can 
accommodate a key exchange payload for an additional DH exchange if a rekey is necessary. 
Otherwise, IKE refreshes the keying material from the DH exchange completed in main mode.  
Windows Vista and Windows Server 2008 also support extended mode negotiation with Authenticated 
IP (AuthIP), during which IPsec peers can perform a second round of authentication. For more 
information, see The Authenticated Internet Protocol. 
There are two ways to configure IPsec settings through the Windows graphical user interface: 
Connection security rules through the Windows Firewall with Advanced Security snap-in (for Windows 
Vista and Windows Server 2008) 
IPsec policy settings through the IPsec Policy Management snap-in 
Connection Security Rules 
Connection security rules in the Windows Firewall with Advanced Security snap-in specify what traffic to 
protect and how to protect it, and provide a highly simplified way to configure IPsec settings. 
To configure a connection security rule, do the following: 
1. From the console tree of the Windows Firewall with Advanced Security snap-in, right-click 
Connection Security Rules, and then click New Rule. 
2. Follow the pages of the New Connection Security Rule wizard to configure a rule for a common traffic 
protection scenario or a custom rule. 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 373 
IPsec Policy Settings 
An IPsec policy configured through the IPsec Policy Management snap-in consists of the following: 
General IPsec policy settings  
Settings that apply regardless of which rules are configured. These settings determine the name of 
the policy, its description for administrative purposes, main mode key exchange settings, and main 
mode key exchange methods. 
Rules  
One or more IPsec rules that determine which types of traffic IPsec must examine, how traffic is 
treated (permitted, blocked, or protected), how to authenticate an IPsec peer, and other settings. 
IPsec policies can be applied to local computers, domains, sites, or organizational units on any Group 
Policy object in Active Directory. Your IPsec policies should be based on your organization's written 
guidelines for protected traffic. Policies can store multiple rules, so one policy can govern multiple types 
of traffic. 
IPsec policies can be stored in two locations: 
Active Directory  
IPsec policies that are stored in Active Directory are part of Computer Configuration Group Policy 
settings and are downloaded to an Active Directory domain member when it joins the domain and 
on an ongoing basis. The Active Directory-based policy settings are locally cached. If the computer 
has downloaded such policy settings but is not connected to a network that contains a trusted 
Windows Server 2008 or Windows Server 2003 domain controller, IPsec uses the locally cached 
Active Directory IPsec policy settings. 
Local  
Local IPsec policies are defined in the local computer's Computer Configuration Group Policy for 
stand-alone computers and computers that are not always members of a trusted Windows 
Server 2008 or Windows Server 2003 domain. 
Windows Vista, Windows XP, Windows Server 2008, and Windows Server 2003 include default policies 
that you can use as examples for your own custom policies. 
General IPsec Policy Settings 
You configure the general settings for an IPsec policy in the Group Policy snap-in (under Computer 
Configuration-Windows Settings-Security Settings-IP Security Policies) by right-clicking an IPsec policy, 
clicking Properties, clicking the General tab, and configuring the following: 
Name  The name for the policy.  
Description  Optional text that describes the purpose of the IPsec policy. You should type a description 
to summarize the settings and rules for the policy.  
Policy change poll interval  The number of minutes between consecutive polls for changes in IPsec 
policies that are based on Active Directory. This polling does not detect changes in domain or 
organizational unit membership or the assigning or unassigning of a new policy. These events are 
Chapter 13 – Internet Protocol Security and Packet Filtering 
TCP/IP Fundamentals for Microsoft Windows  
Page: 374 