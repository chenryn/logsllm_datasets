country for IP addresses from IP whois database [25].
They span across 127 different countries. Due to a lack
of space, only countries with more than 100 IP addresses
are shown in Table II. As expected we observe that most
IPs are from the U.S. and China matching the locations of
the hosting Web sites. At the preﬁx level, we analyze the
percentage of blocking preﬁxes as veriﬁed using probing
and show the diverse policy across countries. Since our
instrumented Web sites are most likely visited by universi-
ties and home users, we expect that many preﬁxes should
perform outbound SMTP trafﬁc ﬁltering at least at some
sub-ranges. The results show that the top two countries
for enforcing such port blocking policy are Turkey and
Canada. Compared to the top two countries, the U.S. has
a lower ﬁltering enforcement rate. But it
is still better
compared to the remaining countries. China and Korea have
the worst blocking percentages, implying that ISPs in those
countries visible in our data do not pay much attention to
spam prevention through network-based ﬁltering. This is
consistent with previous ﬁndings that China and Korea are
two big sources of spam emails.
SUMMARY OF IPS GATHERED FROM THE WEB FLASH EXPERIMENT
Table I
# of IP addresses # of preﬁxes
# of IP in web log (Baseline):
# of IP in port 25 log:
# of IP in web log but not port 25 log:
# of IP in port 25 log but no web log:
21131
13576
7555
622
7016
4280
3563
397
DISTRIBUTION OF IPS AND PREFIXES BASED ON COUNTRY
Table II
Country # of IPs # of preﬁxes # of blocking % of blocking
preﬁxes
preﬁxes
AU
GB
KR
DE
CN
IR
IN
US
CA
TR
638
198
341
118
6259
270
1274
10499
274
150
162
120
145
81
1006
89
547
2714
151
87
13
8
2
6
4
3
9
252
53
36
8%
6%
1.3%
7%
0.3%
3%
1.6%
9.3%
35%
41%
C. ISPs blocks OUT but not IN trafﬁc
Based on the previous results, we obtain an estimate of
how prevalent the outbound SMTP trafﬁc blocking policy
is on today’s Internet. We delve deeper in the results to
infer whether ISPs that block OUT trafﬁc neglect to block
IN trafﬁc, where the latter is a necessary requirement for
serving as a relay in triangular spamming.
1) Probing design: As shown in Figure 2 and discussed
previously, it is easy to infer that the ISP is preventing
outbound SMTP trafﬁc, but non-trivial to discern at which
direction blocking takes place. To summarize, we can ﬁrst
send a TCP SYN-ACK probe packet to some hosts in the
IP range of interest with source port 80 and destination port
80 (or any other well-known ports). Depending on the OS
and whether the port is open, the host may respond with
a TCP reset (RST) packet. If we receive the corresponding
RST packet, this shows that hosts will respond to probes
to unused ports. We then immediately send another TCP
probe packet but with source port set to 25. If we do not
observe any response this time, assuming it is not the host
ﬁrewall that blocks the trafﬁc, it would be the ISP that
blocks either IN trafﬁc (which is our probe trafﬁc) or OUT
trafﬁc (which is the RST response sent from the probed
host). Note that it is also possible that the ISP spoofed the
RST packets uniformly as their policy, and in this case, we
will conservatively think that the ISP is not blocking port 25
while in reality spooﬁng RST can be a form of blocking. As
a result, we may underestimate the port blocking preﬁxes.
Figure 4. Outbound SMTP trafﬁc blocking policy inference
However, since the latest large-scale study [43] did not
report the exact same RST behavior (they discover the most
popular RST injection is after SYN and SYN-ACK packet
and in the same direction), we believe such behavior (RST
after SYN-ACK in the opposite direction) is rare if deployed
at all.
Making use of the properties of IPID values (ID ﬁeld
in IP header) generated by the end-host as many previous
studies have done, we devise a simple approach to distin-
guish the IN or OUT trafﬁc blocking. Figure 4 shows this
probing methodology.
At step 1, suppose we already know that the ISP is
blocking outbound SMTP trafﬁc but have no idea whether
it is IN or OUT blocking. We send several probing packet
(e.g., 5 packets) with source port 80 to some well-known
ports. If we receive responses, we record the IPID values
of the responses and detect the presence of a monotoni-
cally increasing pattern using a simple algorithm similar
to nmap [20]. Let X be the last IPID value received. At
step 2, we send a burst of packets (e.g., 1000) with source
port 25 to the same destination port and expect no response
for these packets. At step 3, we send more probe packets
again with source port 80 and examine the resulting IPID
values in the response packets. If these values are roughly
starting from X + 1000 + E where E is the expected IPID
value increase due to other packets sent by the host between
Steps 2 and 3, then we can infer that the ISP performs OUT
trafﬁc blocking instead of IN trafﬁc blocking. This is based
on the conjecture that the increase in IPID values indicate
that the host did receive our probe packets and responded
to them, resulting in increase in IPID values. We did not
receive the response packets due to ISP’s ﬁrewall blocking
such OUT packets. On the other hand, if the IPID value
has not increased by what is expected, we conclude that the
ISP imposes IN trafﬁc blocking and possibly also combined
with OUT trafﬁc ﬁltering. Note that such a conclusion
is unlikely to be incorrect due to the previously veriﬁed
monotonically increasing IPID values.
Note that here we assume that
the host probed has
system-wide monotonically increasing IPID values which
may not hold. For example, the IPID values can be random
or always set to 0 for response packets that do not belong
to the same TCP ﬂow in recent Linux kernels. However,
for Windows XP SP2 and SP3 that we tested (arguably still
the most prevalent OS at the time we conducted probing),
they all have such system-wide monotonically increasing
IPID behavior. In fact, Windows 7 also has such property.
Our probing results discussed next also verify this behavior
for a large fraction of probed IP addresses. Hosts that do
not have this property are not probed further. As long as
we have sufﬁcient number of samples from a preﬁx we can
still infer the ISP-level policy.
Our probing test technique is summarized in Algorithm 1.
Algorithm 1 IN or OUT trafﬁc blocking probing test
algorithm
Input: Preﬁx p that has blocking behavior,
repeat {For each IP ip from the preﬁx p where except ip ended
with last octet 1 or 254 or 255}
response1 = Probe(ip, 80, 80);
response2 = Probe(ip, 25, 80);
if(response2 == succ) notBlocking;
else if(response1 == fail) unknown;
else if(response1 == succ) {
blocking;
IPIDs = probeIPIDs(ip, 80, 80);
if(increasing(IPIDs) == false) {
IPIDNotIncreasing;
continue;
}
burstProbe(ip, 25, 80);
IPID = probeIPIDs(ip, 25, 80);
if(IPID ≈ IPIDs[last] + E + 300)
{ OUT-trafﬁc-blocking;
else IN-trafﬁc-blocking;
}
}
until [All ip in preﬁx p has been probed]
2) Results: We take candidate preﬁxes generated from
our Web Flash experiment for the probing test algorithm
to infer the ISP’s policy. Some preﬁxes can be very large
(e.g.,/11 or /12), requiring signiﬁcant time to probe every
single IP inside them. Instead, we probed only a subset of
IPs in such preﬁxes due to time constraints and overhead.
To prevent triggering any ﬁrewall alarms, for each preﬁx,
we conservatively spawn only a single-threaded process to
perform probing. As a result, on average, it takes 2 – 4 days
to probe an /16 preﬁx. But since we are parallelizing the
probing for different preﬁxes, we can still gather results in
reasonable amount of time. We were able to probe most
IPs for smaller preﬁxes, e.g., preﬁxes smaller than /15.
For larger preﬁxes, we covered about 25% (for some /11
preﬁxes) to 80% of their IPs.
Table III is an example of our probing result for preﬁx
24.247.80.0/20 which belongs to the Charter ISP [3]. We
sub-divide the preﬁx into /24 preﬁxes based on the common
assumption that ﬁnest policy granularity is at
the /24
level. Each row represents the result for a particular /24.
Each column shows the number of IP addresses within
the /24 for a particular category. We can see that clearly
most /24s are entirely OUT-trafﬁc-blocking with only few
exceptions. For instance, the ﬁfth row has 7 IP addresses
detected as OUT-trafﬁc-blocking but only 1 IP was found
to be not blocking outbound SMTP trafﬁc, generating a
potentially inconsistent conﬁguration policy within the /24.
However, we do know that it is common that ISPs allow
customers to unblock port 25 for “power users” [16].
In this case, we believe that the few unblocked port 25
IPs are such exception cases. An anomaly is shown in
the ninth row indicating that 24.247.88.0/24 has no IPs
blocked for outgoing port 25. In fact, all 19 IPs are not
blocked for either IN or OUT. Upon further investigation,
we found that this /24 are static IP addresses (with DNS
name such as 24-247-88-64.static.bycy.mi.charter.com) as
opposed to dynamic IP addresses (with DNS names such as
24-247-80-0.dhcp.bycy.mi.charter.com). Usually static IPs
are business-level customers who pay more for access to
open ports [24]. Further, as expected we found that none of
the IPs are identiﬁed to be IN-trafﬁc-blocking.
Interestingly, we found that only 22 preﬁxes out of 688
blocking preﬁxes (3%) appear to deploy IN-trafﬁc-blocking
policy. We identify preﬁxes as IN-trafﬁc-blocking if at least
some /24 IP range contain the number of IN blocking IPs
to be at least twice the number of both non-blocking ones
and OUT blocking ones. In fact, when the number of IN
blocking IPs is at least twice the number of non-blocking
ones, it is almost always true that the OUT blocking IPs
will be 0. However, it is still possible that some IPs are
not blocked due to reasons such as customer’s requests of
sending outbound SMTP trafﬁc. A quick analysis reveals
that these IN blocking preﬁxes belong to US, Japan, and
European countries like German, Sweden, UK, Belgium
and Italy, mostly concentrated within European countries.
There is only one educational instititution: umass.edu. Some
ISPs in the U.S. also block IN trafﬁc such as verizon.com.
However, there are only 2 out of the 131 verizon preﬁxes
that we probed perform IN blocking.
Note that some ISPs block outbound SMTP trafﬁc (either
IN or OUT blocking) on demand based on the SMTP
trafﬁc volume to prevent abuse. This can also reﬂect in our
probing results that sometimes /24 preﬁxes have more non-
blocked IPs than blocked ones. Typically, this is because
the majority of the hosts are not sending spam, so outbound
SMTP trafﬁc from them is not blocked. Blocked hosts are
likely the ones detected to be sending spam. In this case,
s
e
x
i
f
e
r
p
i
g
n
k
c
o
b
l
f
o
n
o
i
t
c
a
r
F
1
0.8
0.6
0.4
0.2
0
0
0.2
0.4
Fraction of prefix blocking measured by /24
0.6
0.8
1
Figure 5. Distribution of blocking /24 subnet pctg (OUT SMTP trafﬁc)
triangular spamming stealthily eliminates outgoing SMTP
trafﬁc from compromised bots, increasing the difﬁculties of
detecting outgoing spam for ISPs.
Next, we analyze the results for OUT blocking preﬁxes.
Besides the 22 IN blocking preﬁxes, the remaining 666
blocking preﬁxes are OUT blocking. Similarly, we consider
a /24 as OUT blocking if the number of blocking IPs within
the preﬁx is at least twice the number of non-blocking ones.
Figure 5 plots the distribution of the percentage of blocked
/24s within a preﬁx for all preﬁxes with at least some
blocked /24s. We can observe that 20% of the preﬁxes are
blocking all of their /24 sub-ranges and about 40% of the
preﬁxes have about 50% /24 sub-ranges blocking outbound
SMTP trafﬁc. This shows the surprisingly non-uniform
policy conﬁguration at the ISP level and demonstrates room
for improvement, as discussed later in §V. In subsequent
discussions, we assume it is OUT blocking instead of IN
blocking whenever we refer to blocking if not speciﬁed.
AN EXAMPLE OF IN/OUT TRAFFIC BLOCKING PROBING RESULTS FOR
24.247.80.0/20 (CHARTER.COM)
Table III
IP preﬁx
24.247.81.0/24
24.247.82.0/24
24.247.83.0/24
24.247.84.0/24
24.247.85.0/24
24.247.86.0/24
24.247.87.0/24
24.247.88.0/24
...
# of OUT # of non-
blocking
# of IN
blocking (e.g., host down) blocking
# of unknown
14
13
7
7
6
10
9
0
...
0
0
0
1
0
0
1
19
...
238
239
235
244
246
242
242
233
...
0
0
0
0
0
0
0
0
...
We analyze the inconsistent policy conﬁguration behav-
ior for preﬁxes with nonuniform outbound SMTP trafﬁc
ﬁltering setting for its subnets. We found that the following
three types are most common:
1. Dynamic IP vs. static ranges (or unblocked dynamic
ranges), examples shown in Table III.
2. Sub-ranges delegated for other purposes. An example
is shown in Table IV. Within the Stanford university’s
/14 preﬁx, some preﬁxes ranging from 171.66.120.0/24 to
171.66.127.0/24 have been assigned for other purposes.
Many of corresponding reverse DNS names of IPs for
such preﬁxes are changed to names like ’lcgsl.highwire.org’
IN/OUT TRAFFIC BLOCKING PROBING RESULTS OF 171.64.0.0/14
(STANFORD.EDU)
Table IV
IP preﬁx
...
171.66.120.0/24
171.66.121.0/24
171.66.122.0/24
...