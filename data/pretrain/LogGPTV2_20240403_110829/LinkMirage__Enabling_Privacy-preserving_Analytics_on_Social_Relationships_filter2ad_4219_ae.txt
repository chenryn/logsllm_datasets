be defeated by de-anonymization techniques [20], [30], [32],
[37]. LinkMirage can serve as a formal ﬁrst step for vertex
anonymity, and even improve its defending capability against
de-anonymization attacks. We apply LinkMirage to anonymize
vertices, i.e. to publish a perturbed topology without labeling
any vertex. In [20], Ji et al. modeled the anonymization as
a sampling process where the sampling probability p denotes
the probability of an edge in the original graph Go to exist in
the anonymized graph G(cid:48). LinkMirage can also be applied for
10
0123456780.50.60.70.80.91Timestamp tAttack probability  k=5,Mittal et al.k=5,LinkMiragek=20,Mittal et al.k=20,LinkMirageFig. 9. (a) shows the false positive rate for Sybil defenses. We can see that the perturbed graphs have lower false positive rate than the original graph. Random
walk length is proportional to the number of Sybil identities that can be inserted in the system. (b) shows that the ﬁnal attack edges are roughly the same for
the perturbed graphs and the original graphs.
such model, where the perturbed graph G(cid:48) is sampled from
the k-hop graph Gk (corresponding to Go).
0,··· , Gk
t)|/|E(Gk
They also derived a theoretical bound of the sampling prob-
ability p for perfect de-anonymization, and found that a weaker
bound is needed with a larger value of the sampling probability
p. Larger p implies that G(cid:48) is topologically more similar to G,
making it easier to enable a perfect de-anonymization. When
considering social network evolution, the sampling probability
t )|,
p can be estimated as |E(G(cid:48)
0,··· , G(cid:48)
0,··· , G(cid:48)
where E(G(cid:48)
t) are the edges of the perturbed graph
0,··· , Gk
t ) are the edges of the k-hop
sequence, and E(Gk
graph sequence. Compared with the static baseline approach,
LinkMirage selectively reuses information from previously
perturbed graphs, thus leading to smaller overall sampling
probability p, which makes it harder to perfectly de-anonymize
the graph sequence. For example, the average sampling prob-
ability p for the Google+ dataset (with k = 2) is 0.431 and
0.973 for LinkMirage and the static method respectively. For
the Facebook temporal dataset (with k = 3), the average
sampling probability p is 0.00012 and 0.00181 for LinkMirage
and the static method respectively. Therefore, LinkMirage is
more resilient against de-anonymization attacks even when
applied to vertex anonymity, with up to 10x improvement.
C. Sybil Defenses [43]
Next, we consider Sybil defenses systems which leverage
the published social topologies to detect fake accounts in the
social networks. Here, we analyze how the use of a perturbed
graph changes the Sybil detection performance of SybilLimit
[43], which is a representative Sybil defense system. Each user
can query LinkMirage for his/her perturbed friends to set up
the implementation of SybilLimit. Fig. 9(a) depicts the false
positives (honest users misclassiﬁed as Sybils) with respect to
the random walk length in the Sybillimit protocol. Fig. 9(b)
shows the ﬁnal attack edges with respect to the attack edges
in the original topology. We can see that the false positive rate
is much lower for the perturbed graphs than for the original
graph, while the number of the attack edges stay roughly
the same for the original graph and the perturbed graphs.
The number of Sybil identities that an adversary can insert
is given by S = g(cid:48) · w(cid:48) (g(cid:48) is the number of attack edges
and w(cid:48) is the random walk parameter in the protocol). Since
g(cid:48) stays almost invariant and the random walk parameter w(cid:48)
(for any desired false positive rate) is reduced, LinkMirage
improves Sybil resilience and provides the privacy of the social
relationships such that Sybil defense protocols continue to be
applicable (similar to static approaches whose Sybil-resilience
11
TABLE III. Modularity of Perturbed Graph Topologies
Google+ Original
Graph
Modularity 0.605
Facebook Original
Graph
Modularity 0.488
k = 20
0.487
Mittal et al.
LinkMirage
LinkMirage
k = 5
0.476
k = 5
0.603
k = 2
0.601
k = 5
0.479
k = 2
0.591
LinkMirage
LinkMirage
Mittal et al.
Mittal et al.
Mittal et al.
k = 5
0.586
k = 20
0.415
performance have been demonstrated in previous work).
D. Privacy-preserving Graph Analytics [31], [33]
Next, we demonstrate that LinkMirage can also beneﬁt
the OSN providers for privacy-preserving graph analytics.
Previous work in [12], [13] have demonstrated that the im-
plementation of graph analytic algorithms would also result in
information leakage. To mitigate such privacy degradation, the
OSN providers could add perturbations (noises) to the outputs
of these graph analytics. However, if the OSN providers aim
to implement multiple graph analytics, the process for adding
perturbations to each output would be rather complicated.
Instead, the OSN providers can ﬁrst obtain the perturbed graph
by leveraging LinkMirage and then set up these graph analytics
in a privacy-preserving manner.
Here, we ﬁrst consider the pagerank [33] as an effective
graph metric. For the Facebook dataset, we have the average
differences between the perturbed pagerank score and the
original pagerank score as 0.0016 and 0.0018 for k = 5
and k = 20 respectively in LinkMirage. In comparison,
the average differences are 0.0019 and 0.0087 for k = 5
and k = 20 in the approach of Mittal et al. LinkMirage
preserves the pagerank score of the original graph with up
to 4x improvement over previous methods. Next, we show
the modularity [31] (computed by the timestamp t = 3 in
the Google+ dataset and the Facebook dataset, respectively)
in Table III. We can see that LinkMirage preserves both the
pagerank score and the modularity of the original graph, while
the method of Mittal et al. degrades such graph analytics
especially for larger perturbation parameter k (recall the visual
intuition of LinkMirage in Fig. 3).
E. Summary for Applications of LinkMirage
• LinkMirage preserves the privacy of users’ social contacts
while enabling the design of social relationships based
applications. Compared to previous methods, LinkMirage
results in signiﬁcantly lower attack probabilities (with a
051015202030405060708090100(a) Random walk length% False positive rate  Originalk=5k=2002004006008001000120002004006008001000(b) Attack edgesFinal attack edges  Originalk=5k=20TABLE IV. Graph Metrics of the Original and the Perturbed
Graphs for the Google+ Dataset.
Original Graph
LinkMirage k = 2
LinkMirage k = 5
LinkMirage k = 10
LinkMirage k = 20
Clustering Coefﬁcient
0.2612
0.2263
0.1829
0.0864
0.0136
Assortativity Coefﬁcient
-0.0152
-0.0185
-0.0176
-0.0092
-0.0063
factor up to 2) when applied to anonymous communications
and higher resilience to de-anonymization attacks (with a
factor up to 10) when applied to vertex anonymity systems.
• LinkMirage even surprisingly improves the Sybil detection
performance when applied to the distributed SybilLimit
systems.
• LinkMirage preserves the utility performance for multiple
graph analytics applications, such as pagerank score and
modularity with up to 4x improvement.
VII. UTILITY ANALYSIS
Following the application analysis in Section VI, we aim
to develop a general metric to characterize the utility of
the perturbed graph topologies. Furthermore, we theoretically
analyze the lower bound on utility for LinkMirage, uncover
connections between our utility metric and structural properties
of the graph sequence, and experimentally analyze our metric
using the real-world Google+ and Facebook datasets.
A. Metrics
We aim to formally quantify the utility provided by LinkMi-
rage to encompass a broader range of applications. One
intuitive global utility metric is the degree of vertices. It is
interesting to ﬁnd that the expected degree of each node in
the perturbed graph is the same as the original degree and we
defer the proof to Appendix to improve readability.
anonymity systems [28] directly perform random walks in
their protocols. The parameter l is application speciﬁc; for
applications that require access to ﬁne grained local struc-
tures, such as recommendation systems [2], the value of l
should be small. For other applications that utilize coarse and
macro structure of the social graphs, such as Sybil defense
mechanisms, l can be set to a larger value (typically around
10 in [43]). Therefore, this utility metric can quantify the
utility performance of LinkMirage for various applications in
a general manner.
Note that LinkMirage is not limited to only preserving the
community structure of the original graphs. We evaluate two
representative graph theoretic metrics clustering coefﬁcient and
assortativity coefﬁcient [14] as listed in Table IV. We can
see that LinkMirage well preserves such ﬁne-grained structural
properties for smaller perturbation parameter k. Therefore, the
extent to which the utility properties are preserved depends on
the perturbation parameter k.
B. Relationships with Other Graph Structural Properties
The mixing time τ(Gt) measures the time required for
the Markov chain to converge to its stationary distribution, and
t (v) − πt|TV < ).
Based on the Perron-Frobenius theory, we denote the eigen-
values of Pt as 1 = µ1(Gt) ≥ µ2(Gt) ≥ ··· µ|Vt|(Gt) ≥ −1.
The convergence rate of the Markov chain to πt is deter-
mined by the second largest eigenvalue modulus (SLEM) as
is deﬁned as τ(Gt) = minr maxv(r(cid:12)(cid:12)|P r
µ(Gt) = max(cid:0)µ2(Gt),−µ|Vt|(Gt)(cid:1).
Since our utility distance is deﬁned by using the transition
probability matrix Pt, this metric can be proved to be closely
related to structural properties of the graphs, as shown in
Theorem 5 and Theorem 6.
Theorem 5: Let us denote the utility distance between
t and the original graph Gt by
t, τGt()) − ) ≥
t, l), then we have τG(cid:48)
the perturbed graph G(cid:48)
UD(Gt, G(cid:48)
τGt().
(UD (Gt, G(cid:48)
t
Theorem 4: The expected degree of each node after pertur-
bation by LinkMirage is the same as in the original graph:
∀v ∈ Vt, E(deg
(v) denotes the
degree of vertex v in G(cid:48)
t.
(v)) = deg(v), where deg
(cid:48)
(cid:48)
To understand the utility in a ﬁne-grained level, we further
deﬁne our utility metric as
Theorem 6: Let us denote the second largest eigenvalue
modulus (SLEM) of
transition probability matrix Pt of
graph Gt as µGt. We can bound the SLEM of a perturbed
graph G(cid:48)
t using the mixing time of the original graph, and
≥ 1 −
the utility distance between the graphs as µG(cid:48)
log n+log
t
UD(Gt,G(cid:48)
τGt ()
1
t,τGt
())−
.
Deﬁnition 4: The Utility Distance (UD) of a perturbed
graph sequence G(cid:48)
T with respect to the original graph
sequence G0,··· , GT , and an application parameter l is de-
ﬁned as
0,··· G(cid:48)
|Vt|(cid:107)P l
1
T , l)
t (v) − (P (cid:48)
t )l(v)(cid:107)T V
(5)
0,··· , G(cid:48)
(cid:88)
T(cid:88)
UD(G0,··· GT , G(cid:48)
1
=
T + 1
t=0
v∈Vt
Our deﬁnition for utility distance in Eq. 5 is intuitively
reasonable for a broad class of real-world applications, and
captures the behavioral differences of l-hop random walks
between the original graphs and the perturbed graphs. We
note that random walks are closely linked to the structural
properties of social networks. In fact, a lot of social network
based security applications such as Sybil defenses [43] and
C. Upper Bound of Utility Distance
LinkMirage aims to limit the degradation of link privacy
over time. Usually, mechanisms that preserve privacy trade-
off application utility. In the following, we will theoretically
derive an upper bound on the utility distance for our algorithm.
This corresponds to a lower bound on utility that LinkMirage
is guaranteed to provide.
Theorem 7: The utility distance of LinkMirage is upper
bounded by 2l times the sum of the utility distance of each
community  and the ratio cut δt for each Gt, i.e.
UD(G0,··· GT , G(cid:48)
0,··· G(cid:48)
T , l) ≤ 1
T + 1
2l( + δt)
(6)
T(cid:88)
t=0
where δt denotes the number of inter-community links over
the number of vertices, and each community Ck(t) within Gt
satisﬁes (cid:107)Ck(t) − C(cid:48)
k(t)(cid:107)T V ≤ . We defer the proofs to the
12
Fig. 10. (a), (b) show the utility distances using the Google+ dataset and the Facebook dataset, respectively. Larger perturbation parameter k results in larger
utility distance. Larger application parameter l decreases the distance, which shows the effectiveness of LinkMirage in preserving global community structures.
Appendix to improve readability.
Note that an upper bound on utility distance corresponds
to a lower bound on utility of our algorithm. While better
privacy usually requires adding more noise to the original
sequence to obtain the perturbed sequence, thus we can see
that LinkMirage is guaranteed to provide a minimum level of
utility performance.
In the derivation process, we do not take speciﬁc evolu-
tionary pattern such as the overlapped ratio into consideration,
therefore our theoretical upper bound is rather loose. Next,
we will show that in practice, LinkMirage achieves smaller
utility distance (higher utility) than the baseline approach of
independent static perturbations.
D. Utility Experiments Analysis
Fig. 10(a)(b) depict the utility distance for the Google+ and
the Facebook graph sequences, for varying perturbation degree
k and the application level parameter l. We can also see that
as k increases, the distance metric increases. This is natural