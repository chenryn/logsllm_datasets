                    break
                print('*',end='')
                target/=i
                break
#### **实例 015：分数归档**
题目 利用条件运算符的嵌套来完成此题：学习成绩 \>=90 分的同学用 A
表示，6089 分之间的用 B 表示，60 分以下的用 C 表示。
程序分析 用条件判断即可。
    points=int(input('输入分数：'))
    if points>=90:
        grade='A'
    elif points1 else 1
    print(factorial(5))
#### **实例 027：递归输出**
题目 利用递归函数调用方式，将所输入的 5 个字符，以相反顺序打印出来。
程序分析 递归真是蠢方法。
    def rec(string):
        if len(string)!=1:
            rec(string[1:])
        print(string[0],end='')
    rec(input('string here:'))
#### **实例 028：递归求等差数列**
题目 有 5 个人坐在一起，问第五个人多少岁？他说比第 4 个人大 2 岁。问第 4
个人岁数，他说比第 3 个人大 2 岁。问第三个人，又说比第 2 人大两岁。问第
2 个人，说比第一个人大两岁。最后问第一个人，他说是 10
岁。请问第五个人多大？
程序分析 就一等差数列。
    def age(n):
        if n==1:
            return 10
        return 2+age(n-1)
    print(age(5))
#### **实例 029：反向输出**
题目 给一个不多于 5
位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。
程序分析 学会分解出每一位数, 用字符串的方法总是比较省事。
    n=int(input('输入一个正整数：'))
    n=str(n)
    print('%d位数'%len(n))
    print(n[::-1])
#### **实例 030：回文数**
题目 一个 5 位数，判断它是不是回文数。即 12321
是回文数，个位与万位相同，十位与千位相同。
程序分析 用字符串比较方便, 就算输入的不是数字都 ok。
    n=input("随便你输入啥啦：")
    a=0
    b=len(n)-1
    flag=True
    while a 1:
            for j in range(2,i):
                if (i % j) == 0:
                    break
            else:
                print(i)
#### **实例 037：排序**
题目 对 10 个数进行排序。
程序分析 同实例 005。
    raw=[]
    for i in range(10):
        x=int(input('int%d: '%(i)))
        raw.append(x)
    for i in range(len(raw)):
        for j in range(i,len(raw)):
            if raw[i]>raw[j]:
                raw[i],raw[j]=raw[j],raw[i]
    print(raw)
#### **实例 038：矩阵对角线之和**
题目 求一个 3\*3 矩阵主对角线元素之和。
程序分析 无。
    mat=[[1,2,3],
         [3,4,5],
         [4,5,6]
        ]
    res=0
    for i in range(len(mat)):
        res+=mat[i][i]
    print(res)
#### **实例 039：有序列表插入元素**
题目
有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。
程序分析
首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数，依次后移一个位置。
    lis=[1,10,100,1000,10000,100000]
    n=int(input('insert a number: '))
    lis.append(n)
    for i in range(len(lis)-1):
        if lis[i]>=n:
            for j in range(i,len(lis)):
                lis[j],lis[-1]=lis[-1],lis[j]
            break