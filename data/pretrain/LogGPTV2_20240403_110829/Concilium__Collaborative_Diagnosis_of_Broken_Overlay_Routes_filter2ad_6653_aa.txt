title:Concilium: Collaborative Diagnosis of Broken Overlay Routes
author:James W. Mickens and
Brian D. Noble
Concilium: Collaborative Diagnosis of Broken Overlay Routes
James W. Mickens and Brian D. Noble
EECS Department, University of Michigan
Ann Arbor, MI, 48109
jmickens,PI:EMAIL
Abstract
In a peer-to-peer overlay network, hosts cooperate to for-
ward messages. When a message does not reach its ﬁnal
destination, there are two possible explanations. An inter-
mediate overlay host may have dropped the message due to
misconﬁguration or malice. Alternatively, a bad link in the
underlying IP network may have prevented an earnest, prop-
erly conﬁgured host from forwarding the data. In this paper,
we describe how overlay peers can distinguish between the
two situations and ascribe blame appropriately. We gener-
ate probabilistic notions of blame using distributed network
tomography, fuzzy logic, and secure routing primitives. By
comparing application-level drop rates with network char-
acteristics inferred from tomography, we can estimate the
likelihood that message loss is due to a misbehaving overlay
host or a poor link in the underlying IP network. Since faulty
nodes can submit inaccurate tomographic data to the collec-
tive, we also discuss mechanisms for detecting such misbe-
havior.
1 Introduction
Peer-to-peer systems scale because they distribute respon-
sibility across many nodes. For example, in cooperative over-
lay networks, hosts can route messages to each other in a
small number of hops using local forwarding state whose size
is logarithmic in the total number of peers [17, 19]. When all
peers behave properly, such designs lead to elegant, scalable
systems. But what happens when some hosts misbehave?
Real-life experience with large distributed services suggests
that faulty local conﬁgurations inevitably arise [16]. Some
nodes may also try to actively subvert the system. Thus,
dependable peer-to-peer frameworks must expect that ma-
chines will occasionally drop messages, delete data, or oth-
erwise misbehave.
Consider an overlay-level route that starts at host A, goes
through B, and terminates at C.
If C does not receive a
message from A, did B shirk its forwarding responsibilities,
or were there faulty IP-level links that prevented B from
receiving the message or sending it to C? In this paper,
we show how to ascribe blame in such situations, providing
mechanisms for identifying fault points in end-to-end over-
lay routes. Once the system has detected a misbehaving over-
lay forwarder or a bad link in the core IP network, it can route
around the problem. It can also notify the owner of the mal-
functioning component, who may not be aware of the local
fault. Both actions can improve the overall reliability of the
distributed service.
Our new diagnostic system, named Concilium, generates
probabilistic notions of blame using distributed network to-
mography [1, 10], fuzzy logic [5], and secure overlay rout-
ing [7]. By comparing application-level drop rates with net-
work characteristics inferred from tomography, Concilium
generates the likelihood that message loss is due to a misbe-
having overlay host or a poor path in the underlying IP net-
work. Unlike Fatih [15] or packet obituary systems [2], Con-
cilium does not require modiﬁcation to core Internet routers.
In contrast to RON [1], Concilium detects hosts which con-
tribute faulty tomographic data to their peers.
2 Secure Overlays
Structured peer-to-peer overlays provide a decentralized,
self-managing routing infrastructure atop preexisting IP net-
works. Each host is associated with an overlay identiﬁer.
When a host must forward a message, it consults locally
maintained routing state to determine the next hop. In over-
lays like Pastry [17] and Chord [19], the local routing state
consists of two logical components. The leaf table points to
the peers with the numerically closest identiﬁers to the local
host’s identiﬁer. The jump table points to peers whose iden-
tiﬁers differ from the local one by increasing, exponentially
spaced distances. Messages are typically forwarded using
jump tables until the last hop.
Castro et al introduced secure overlay routing [7] to pre-
vent malicious nodes from subverting the forwarding pro-
cess. In a secure routing framework, messages are delivered
with very high probability if the fraction of non-faulty hosts
is at least 75%. Concilium uses several features of secure
routing to protect its distributed tomographic protocol. We
brieﬂy describe these features before discussing Concilium
in more depth.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:21:03 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007Before a host can join a secure overlay, it must acquire
a certiﬁcate from a central authority. The certiﬁcate binds
the host’s IP address to a public key and an overlay iden-
tiﬁer. Since identiﬁers are static and randomly assigned,
adversaries cannot deliberately move their hosts to advan-
tageous regions of the identiﬁer space. Hosts also enforce
strict constraints on the peers which can occupy each jump
table slot. For example, in standard Pastry [17], a peer in row
i and column j of a routing table must share an i-character
identiﬁer preﬁx with the local host and have j as its i + 1
character; there are no constraints on the remaining charac-
ters. In secure Pastry, the peer must be the online host whose
identiﬁer is closest to point p, where p is the local host identi-
ﬁer with the i-th character substituted with j. These stronger
peering constraints, in concert with random identiﬁer distri-
bution, limit the fraction of malicious peers in local routing
state to the fraction of malicious nodes in the total overlay.
Using a density test, a host can probabilistically detect
when peers misreport their leaf sets. By comparing the av-
erage inter-identiﬁer spacing in its own leaf set to that of a
peer’s leaf set, a host can identify advertised leaf sets that are
too sparse. In the absence of such checks, an adversary could
suppress knowledge of peers that it does not control, forcing
routing trafﬁc or data fetches to go through corrupt peers.
For performance reasons, peers maintain both secure rout-
ing tables and “standard” routing tables. Standard tables can
use techniques like proximity afﬁnity [8] to minimize rout-
ing latency or maintenance bandwidth; secure routing is only
used when standard routing fails. Messages requiring Con-
cilium’s fault attribution must always be forwarded using se-
cure routing. Other messages can be forwarded using either
mechanism.
3 The Concilium Diagnostic Protocol
Concilium diagnoses faulty overlay routes using a multi-
step process. First, hosts exchange their routing tables so that
they can determine the ﬁrst few hops that a locally forwarded
message will take. Second, hosts test IP-level network condi-
tions using locally-initiated network probes. By exchanging
the results of these tests, individual peers synthesize a global
picture of link quality throughout the Internet. By combin-
ing routing data with the collaborative map of network con-
ditions, nodes can identify broken IP links and misbehaving
overlay forwarders; the latter are deﬁned as end-hosts which
drop messages when the IP-level paths to their routing peers
are good.
When a host is deemed faulty, Concilium issues a fault
accusation against that host. Each accusation is provisional,
since the accused host may be able to prove its innocence by
showing that messages were actually being dropped further
down the route. If the accused host can generate a veriﬁable
fault rebuttal, Concilium will revise its original accusation.
Otherwise, hosts may refuse to peer with the accused node
or treat its behavior with extra suspicion.
In this section, we describe the Concilium protocol in the
context of a particular implementation strategy. We then dis-
cuss alternative implementations.
3.1 Validating Routing State
To troubleshoot end-to-end overlay routes, Concilium
must validate the routing state that peers self-report. Con-
cilium validates leaf sets using Castro’s test and introduces a
new test to verify jump tables. Like Castro’s leaf test, Concil-
ium’s jump table test is a density check. However, instead of
examining the average inter-identiﬁer spacing in a jump ta-
ble, it checks how many slots are occupied. Jump tables with
low occupancy are considered suspicious. For the sake of
concreteness, we describe the test in the context of a secure
Pastry overlay, but the test can be extended to other overlays
in a straightforward manner.
In secure Pastry, overlay identiﬁers are ‘ characters long
and each character can assume one of v different values. ‘ is
typically 32 or 40, and v is usually 16. Each node maintains a
jump table with ‘ rows and v columns. The identiﬁer in row i
and column j shares an i character preﬁx with the local host’s
identiﬁer and has an i + 1-th character of j. Assuming that
identiﬁers are randomly distributed throughout the identiﬁer
space, the probability that a node does not have a particular
preﬁx of length ‘pref ix is 1 − (1/v)‘pref ix. The probability
that an entry in row i of a routing table is ﬁlled is equal to
one minus the probability that no identiﬁer exists with the
appropriate preﬁx. Thus,
P r(entry f illed in row i) = 1−
1 −
(1)
(cid:34)
(cid:182)i+1
(cid:35)N−1
(cid:181)
1
v
where N is the total number of nodes in the overlay. Nodes
can estimate N by inspecting the inter-identiﬁer spacing in
their leaf sets [13].
Let pi,j denote the probability that an entry in row i and
column j is ﬁlled, as given by Equation 1. Each pi,j is an in-
dependent Bernoulli random variable, so the occupancy dis-
tribution for the entire table is governed by a Poisson bino-
mial distribution. The mean and variance are
µ =
1
‘v
pi,j
σ2 =
1
‘v
(pi,j − µ)2.
‘(cid:88)
v(cid:88)
i=1
j=1
‘(cid:88)
v(cid:88)
i=1
j=1
Computing exact values for the Poisson binomial distribution
is intractable for non-trivial numbers of Bernoulli variables.
Thus, it is difﬁcult to directly calculate the likelihood that a
table contains a particular number of occupied slots. Fortu-
nately, since σ2 is high, we can use a normal approximation
with little loss in accuracy [12]. In this approximation, the
mean µφ and the variance σ2
φ are
φ = ‘vµ(1 − µ) − ‘vσ2.
σ2
µφ = ‘vµ
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:21:03 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007The cumulative distribution function for table occupancy is
φ(µφ, σφ) where φ() is the cdf for the normal distribution.
To test whether an advertised jump table is too sparse, a
host compares its local jump table density dlocal to the ad-
vertised dpeer. If γdpeer  1,
the peer’s jump table is deemed invalid. In Section 4.1, we
use φ(µφ, σφ) to select γ based on the resulting likelihood of
false positives and false negatives.
The occupancy test prevents malicious hosts from adver-
tising jump tables that are too sparse. We also wish to pre-
vent hosts from advertising tables that are too dense. Since
identiﬁers are centrally issued, a misbehaving host cannot
fabricate an identiﬁer for an arbitrary jump table slot. How-
ever, a host can collect identiﬁers from peers that have gone
ofﬂine and use these identiﬁers to inﬂate its advertised ta-
ble density [7]. To protect against inﬂation attacks, Concil-
ium requires a jump table entry referencing peer H to con-
tain a signed timestamp from H. Whenever host G probes
H for availability, H piggybacks a signed timestamp upon
the probe response. Later, when G advertises its jump table,
it includes the signed timestamps for each non-empty entry.
Peers will reject the table if it has stale timestamps.
3.2 Collecting Tomographic Data
Each host H is connected to its routing peers by a set
of links in the underlying IP network. These links induce a
communication tree TH whose root is H and whose leaves
are H’s routing peers. We deﬁne the forest FH as the union
of the tree rooted at H and the trees rooted at each of H’s
routing peers. Concilium’s goal is to estimate link quality
in FH. To do so, each tree root periodically probes the link
quality in its tree. Peers then exchange their tomographic
results to create a collaborative estimate of link quality in
FH.
Before a host can initiate the tomography process, it must
determine the physical IP links which comprise its tree.