# ZEBRA: Zero-Effort Bilateral Recurring Authentication

**Authors:**
- Shrirang Mare
- Andres Molina-Markham
- Cory Cornelius
- Ronald A. Peterson
- David Kotz

**Affiliations:**
- *Institute for Security, Technology, and Society, Dartmouth College*
- *Intel Labs*

**2014 IEEE Symposium on Security and Privacy**

## Abstract

Traditional authentication methods, such as passwords, tokens, or fingerprints, perform one-time authentication and rely on users to log out from the computer terminal when they leave. However, users often fail to log out, posing a significant security risk. The most common solution, inactivity timeouts, often fails to balance security (too long a timeout) and usability (too short a timeout). Continuous authentication, which verifies the user's presence while they are using the terminal and logs them out when they leave, is a promising approach. Solutions based on user proximity alone are insufficient, as they only confirm whether the user is nearby, not whether they are actively using the terminal. Behavioral biometric solutions, such as keystroke dynamics, may also be unreliable.

To address this issue, we propose Zero-Effort Bilateral Recurring Authentication (ZEBRA). In ZEBRA, the user wears a bracelet with built-in accelerometer, gyroscope, and radio on their dominant wrist. When the user interacts with the terminal, the bracelet records wrist movements, processes the data, and sends it to the terminal. The terminal compares the wrist movement data with the input events (keyboard and mouse) and confirms the user's presence if they correlate. Our experiments show that ZEBRA achieves 85% accuracy in verifying the correct user and identifies all adversaries within 11 seconds. For a different threshold that trades security for usability, ZEBRA correctly verifies 90% of users and identifies all adversaries within 50 seconds.

## 1. Introduction

Desktop computers, or terminals, are widely used in workplaces and homes, often by multiple users. To prevent unauthorized access, users authenticate themselves before using the terminal and deauthenticate (log out) after use. However, many authentication schemes overlook the important deauthentication step. Common schemes like password-based or fingerprint-based authentication provide one-time authentication and rely on users to log out. Unfortunately, users often do not log out, either because they forget or to avoid re-authenticating.

The consequences of not logging out can be severe. An adversary with access to an unattended terminal can snoop through private information, modify or delete data, or steal credentials. Even in non-adversarial settings, other authorized users might accidentally misuse the account. For example, Koppel et al. [1] report that physicians frequently enter data into the wrong patient's record because they thought the open record belonged to the patient they were treating, while another physician had left the terminal logged in.

This deauthentication problem is particularly concerning in busy, multi-user environments where frequent and short-term use of terminals is common, such as in clinical inpatient settings or busy retail shops. Even in workspaces with personal terminals, users often forget to log out or intentionally remain logged in to avoid re-authentication, leaving their terminals vulnerable to snooping and attacks.

The most common solution to the deauthentication problem is inactivity timeouts, but these often fail to balance security and usability. Proximity sensors, which detect a user's departure and log them out, are unreliable in crowded environments.

One way to automate the deauthentication process is to continuously authenticate the current user and deauthenticate them when they leave. This method should be passive and unobtrusive, and quickly identify when the user has departed without relying on the user to log out. Frequent, irregular, and short-lived computer use, as seen in hospitals, makes continuous authentication challenging.

Our approach, ZEBRA, continuously authenticates a user based on their interactions with the terminal by monitoring hand movements and comparing them with inputs from the keyboard and mouse. Unlike behavioral biometrics, which rely on how the user performs specific interactions and require user-specific training, ZEBRA relies on what interactions the user performs and does not require extensive observation. We call this bilateral authentication, which complements any initial authentication method, such as a password, token, or fingerprint.

ZEBRA uses a bracelet worn on the user's wrist to monitor hand movements. After logging in, the bracelet records hand movements using built-in sensors and transmits the data to the terminal via a short-range radio. The terminal then compares the hand movements with the input events and confirms the user's presence if they correlate. If the movements no longer correlate, the terminal infers that a different person is using the terminal and can take appropriate action, such as locking the screen or requiring re-authentication.

Our main contributions are:
1. Introducing a new type of authentication, bilateral authentication, which focuses on "what the user does when interacting" with a terminal.
2. Proposing ZEBRA, a novel mechanism for continuous, passive, and unobtrusive authentication and automatic deauthentication.
3. Evaluating ZEBRA's performance through a user study, demonstrating strong results.

## 2. Background and Related Work

### Passwords

Passwords are one of the oldest and most common authentication methods. They are convenient because users do not need to carry anything, and they are intuitive and efficient to use. However, passwords have well-documented issues. Users find it hard to remember strong passwords and often use weak ones, share them, reuse them, write them down, or leave terminals unlocked. One major problem with password-based authentication is the lack of a reliable and convenient deauthentication method. Organizations have tried inactivity timeouts, but these are not always reliable [2].

### Proximity Sensors

Some approaches use proximity sensors to detect a user's departure and log them out. However, these sensors are blind to context and may not work for all users. Sinclair et al. [4] found that these sensors were unreliable in a hospital setting, often logging out users who were still using the terminal. Users developed workarounds, such as covering the sensor with an empty cup.

### Wearable Tokens

Wearable tokens, like ZIA [13], provide passive continuous authentication but are not reliable in dense workspaces where multiple authorized users may be near the terminal. These schemes are suitable for single-user scenarios but have an attack window until the user walks out of the proximity range, which can be several minutes.

### Biometrics

Biometrics, such as fingerprints or iris scans, are convenient because users do not need to remember credentials. However, biometrics can be stolen and are difficult to recover if lost. Some biometrics, like fingerprints, require user input, making them unsuitable for continuous authentication. Voice or face biometrics can be used for continuous authentication but may not always be practical. Behavioral biometrics, such as keystroke dynamics, provide unobtrusive continuous authentication but require user enrollment and re-enrollment as behavior changes.

Rasmussen et al. [15] proposed a pulse-based biometric for continuous authentication, but this approach requires modifying input devices and restricts how users can use the keyboard.

### Comparative Evaluation

Table I provides a comparative evaluation of ZEBRA with other continuous authentication schemes using the Usability-Deployability-Security (UDS) framework [16]. The UDS framework is typically used for web authentication, but some of its properties are applicable to device authentication. We use these properties and three additional ones to compare continuous authentication schemes: Verifying-Actual-User, No-Constraint-on-Using-the-Device, and Automatic-Deauthentication.

| Scheme | Usability | Deployability | Security | Verifying-Actual-User | No-Constraint-on-Using-the-Device | Automatic-Deauthentication |
|--------|-----------|---------------|----------|-----------------------|-----------------------------------|----------------------------|
| ZEBRA  | High      | Moderate      | High     | Yes                   | Yes                               | Yes                        |
| Passwords | High      | High          | Low      | No                    | Yes                               | No                         |
| Proximity Sensors | Moderate | High          | Low      | No                    | No                                | Yes                        |
| Wearable Tokens | Moderate | High          | Moderate | No                    | No                                | Yes                        |
| Biometrics | Moderate | Low           | High     | Yes                   | No                                | No                         |

For a detailed comparative evaluation, see our technical report [17].

---

This optimized version of the text aims to improve clarity, coherence, and professionalism. It restructures the content for better flow and readability, and it enhances the presentation of the research and its contributions.