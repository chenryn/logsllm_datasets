## 五、如何编写"数据库小程序"  
编写"数据库小程序"，和你用对应的编程语言写程序是一样的，只是数据库有固定的格式  
例如  
```  
create or replace function 函数名(参数类型 参数名, .... ) returns [setof] void|返回类型  
as $$  
        // 这是代码部分，对应的代码如java,python，尽情发挥吧  
$$  
language 函数语言;  
```  
这里指的参数类型，返回类型，都是数据库的数据类型。  
create function的语法详细参考  
https://www.postgresql.org/docs/devel/static/sql-createfunction.html  
例子  
```  
CREATE or REPLACE FUNCTION tcl_max(integer, integer) RETURNS integer   
AS $$    
    if {$1 > $2} {return $1}    
    return $2    
$$ LANGUAGE pltcl STRICT;   
```  
是不是觉得我举例太少了，因为编写"数据库小程序"确实就是这么简单，嘿嘿，代码的内容完全取决于你的需求。  
## 六、扩展语言与数据库的类型转换  
因为数据库有自己的类型定义和表达方法，而扩展语言有自己的类型支持。    
比如PostgreSQL支持hstore数据类型，而python没有这个类型，那么默认情况下python就只能使用text来表达数据库的hstore.    
PostgreSQL允许用户自定义数据类型转换方法，将数据库支持的类型与扩展语言支持的类型桥梁建立起来。    
详见  
[《PostgreSQL 数据库扩展语言编程 之 plpgsql - 1》](./20170110_01.md)   
## 七、论"数据库小程序"健壮性  
不用我说，你一定在担心一个问题，如果"数据库小程序"写得烂或者写的"小程序"有BUG，会不会把数据库搞死？  
如果不加控制，是很危险的。不过还好PostgreSQL是进程模式的，要死也只死调用"小程序"的进程。  
同时由于进程模式，我们可以使用cgroup，对每个会话隔离资源，不会因为一个小程序写得有问题，把资源全部耗光。   
cgroup参考  
[《Linux cgroup - cpu与cpuset子系统讲解》](../201606/20160613_01.md)   
[《Linux cgroup - memory子系统讲解》](./20170111_02.md)  
同时数据库还对语言进行了比较明确的区分，可信和不可信语言。  
所谓可信指不会带来破坏性的语言，比如不会越权访问包括数据，数据文件，操作系统文件等，也没有import外部库的功能。  
不可信语言，需要超级用户才能创建，因为它不受任何限制，可以访问文件，IMPORT外部库，执行系统调用等。  
### trust & untrust 语言  
The optional key word TRUSTED specifies that the language does not grant access to data that the user would not otherwise have.     
Trusted languages are designed for ordinary database users (those without superuser privilege) and allows them to safely create functions and trigger procedures.     
Since PL functions are executed inside the database server, the TRUSTED flag should only be given for languages that do not allow access to database server internals or the file system.     
The languages PL/pgSQL, PL/Tcl, and PL/Perl are considered trusted;     
the languages PL/TclU, PL/PerlU, and PL/PythonU are designed to provide unlimited functionality and should not be marked trusted.    
trusted 指 这个语言不能访问越权的数据（如数据库服务器的文件、数据库内部（包括直接访问共享内存））    
untrusted 指 这个语言没有任何限制，允许访问任何数据（包括文件，网络，共享LIB库等，危害性较大），但是功能更加强大。    
## 八、一个例子(虽然没有用到宇宙第一流行语言php or java?不要打我,我真的不知道)  
这个例子使用PostgreSQL的异步消息通知机制（notify/listen），以及数据库的触发器，PostGIS地理库插件，结合nodejs, socket.io实现了一个实时的客户端GPS坐标更新的小业务。  
1\. 在数据库中新增GPS坐标，数据库端编写的"小程序"会自动发送异步消息给客户端，客户端马上就展示了当前新增的坐标  
![pic](20170113_02_pic_004.png)    
2\. 修改GPS坐标，数据库端编写的"小程序"会自动发送异步消息给客户端，客户端刷新了当前坐标  
![pic](20170113_02_pic_006.png)    
3\. 删除GPS坐标，数据库端编写的"小程序"会自动发送异步消息给客户端，客户端刷新了当前坐标  
![pic](20170113_02_pic_008.png)   
详见   
[《[转载] postgres + socket.io + nodejs 实时地图应用实践》](./20170113_02.md)   
## 小结  
1\. PostgreSQL通过开放的语言接口，支持了目前地球上大部分的编程语言，你可以使用这些语言在数据库内部直接编写业务代码，是不是很神奇，是不是不再需要担心数据来回搬运了呢，是不是一下把交互扁平化了呢？  
2\. PostgreSQL以其开放的 数据类型、操作符、索引接口 支持了目前为止我见到的最为丰富的数据类型（数组、序列, UUID , jsonb, GIS, text, 异构类型，Key-Value类型(hstore), 全文检索 , 化学 , 图像 , 基因 ,）。  
也就是说，你在PostgreSQL里面操作这些数据，有如神助。  
比如  
[《从天津滨海新区大爆炸、危化品监管聊聊 数据库如何支持化学分子类型》](../201612/20161228_01.md)       
[《恭迎万亿级营销(圈人)潇洒的迈入毫秒时代 - 万亿user_tags级实时推荐系统数据库设计》](../201612/20161225_01.md)  
[《流计算风云再起 - PostgreSQL携PipelineDB力挺IoT》](../201612/20161220_01.md)        
[《金融风控、公安刑侦、社会关系、人脉分析等需求分析与数据库实现 - PostgreSQL图数据库场景应用》](../201612/20161213_01.md)  
[《基于 阿里云 RDS PostgreSQL 打造实时用户画像推荐系统》](../201610/20161021_01.md)              
还有很多可以从这里阅读  
[《想挑战AlphaGO吗？先和PostgreSQL玩一玩?? PostgreSQL与人工智能(AI)》](./20170106_01.md)    
3\. PostgreSQL还支持外部访问泵，可以扩展，可以访问目前几乎所有的外部数据源，你甚至可以用它来做冷热数据分层，数据的异构融合等。  
是不是对PostgreSQL心动了呢？快点来创建属于你的"数据库小程序吧"。  
## 参考  
[《PostgreSQL 数据库扩展语言编程 之 plpgsql - 1》](./20170110_01.md)   
[《iperf 测试网络性能指标》](../201604/20160426_01.md)   
[《PostgreSQL 网络延迟 瓶颈定量分析》](../201604/20160428_01.md)   
[《论云数据库编程能力的重要性》](../201605/20160505_01.md)   
[《[转载]postgres+socket.io+nodejs实时地图应用实践》](./20170113_02.md)  
[《Linux cgroup - cpu与cpuset子系统讲解》](../201606/20160613_01.md)   
[《Linux cgroup - memory子系统讲解》](./20170111_02.md)  
[《PostgreSQL 前世今生》](../201609/20160929_02.md)  
[《[转载]postgres + socket.io + nodejs实时地图应用实践》](./20170113_02.md)  
https://www.postgresql.org/docs/devel/static/xplang.html    
https://wiki.postgresql.org/wiki/Fdw  
https://wiki.postgresql.org/wiki/Foreign_data_wrapper  
https://www.postgresql.org/docs/devel/static/sql-createfunction.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")