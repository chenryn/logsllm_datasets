https://python-louvain.readthedocs.io/en/latest/.
//infura.io/.
[3] Retrieved May, 2021. Community detection for NetworkX’s documentation.
[4] Retrieved May, 2021. Ethereum & IPFS APIs. Develop now on Web 3.0. https:
[5] Retrieved May, 2021. Ethereum Bounty Program. https://bounty.ethereum.org/.
[6] Retrieved May,
https:
Ethereum Mainnet
Statistics.
[7] Retrieved May, 2021. Etherscan: Ethereum (ETH) Blockchain Explorer. https:
2021.
//www.ethernodes.org/.
//etherscan.io/.
www.ethereum.org/cli#geth.
[8] Retrieved May, 2021.
Geth:
the Go Client
for Ethereum.
https://
[9] Retrieved May, 2021. The Goerli testnet of Ethereum. https://goerli.etherscan.io.
[10] Retrieved May, 2021. Hyperledger Besu. https://www.hyperledger.org/use/besu.
[11] Retrieved May, 2021.
https://swarm-
Introduction to Swarm.
guide.readthedocs.io/en/latest/introduction.html.
[12] Retrieved May, 2021. Nethermind Ethereum client. https://nethermind.io/client.
[13] Retrieved May, 2021. Parity Ethereum is now OpenEthereum: Fast and feature-
The Rinkeby testnet of Ethereum.
[14] Retrieved May, 2021. Quiknode: Blockchain Infrastructure Cloud. https:
rich multi-network Ethereum client. https://www.parity.io/ethereum/.
//www.quiknode.io/.
[15] Retrieved May, 2021.
rinkeby.etherscan.io.
[16] Retrieved May, 2021.
ropsten.etherscan.io.
www.sparkpool.com/en/.
ethereum/.
[18] Retrieved Sep., 2021. ETH live marketcap. https://coinmarketcap.com/currencies/
[19] Réka Albert and Albert-László Barabási. 2002. Statistical mechanics of complex
[17] Retrieved May, 2021. Sparkpool: Crypto Mining and Staking Pool. https://
The Ropsten testnet of Ethereum.
https://
https://
networks. Reviews of modern physics 74, 1 (2002), 47.
[20] Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov. 2014. Deanonymisa-
tion of Clients in Bitcoin P2P Network. In Proceedings of the 2014 ACM SIGSAC
Conference on Computer and Communications Security, Scottsdale, AZ, USA,
November 3-7, 2014, Gail-Joon Ahn, Moti Yung, and Ninghui Li (Eds.). ACM,
15–29. https://doi.org/10.1145/2660267.2660379
[21] Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefeb-
vre. 2008. Fast unfolding of communities in large networks. Journal of statistical
mechanics: theory and experiment 2008, 10 (2008), P10008.
[22] Tong Cao, Jiangshan Yu, Jérémie Decouchant, Xiapu Luo, and Paulo Verís-
Exploring the Monero Peer-to-Peer Network. In Financial
simo. 2020.
Cryptography and Data Security - 24th International Conference, FC 2020,
Kota Kinabalu, Malaysia, February 10-14, 2020 Revised Selected Papers
(Lecture Notes in Computer Science, Vol. 12059), Joseph Bonneau and Nadia
Heninger (Eds.). Springer, 578–594. https://doi.org/10.1007/978-3-030-51280-
431
[23] Erik Daniel, Elias Rohrer, and Florian Tschorsch. 2019. Map-Z: Exposing the
Zcash Network in Times of Transition. In 44th IEEE Conference on Local
Computer Networks, LCN 2019, Osnabrueck, Germany, October 14-17, 2019,
Karl Andersson, Hwee-Pink Tan, and Sharief Oteafy (Eds.). IEEE, 84–92. https:
//doi.org/10.1109/LCN44214.2019.8990796
[24] Sergi Delgado-Segura, Surya Bakshi, Cristina Pérez-Solà, James Litton, Andrew
Pachulski, Andrew Miller, and Bobby Bhattacharjee. 2019. TxProbe: Discov-
ering Bitcoin’s Network Topology Using Orphan Transactions. In Financial
Cryptography and Data Security - 23rd International Conference, FC 2019,
Frigate Bay, St. Kitts and Nevis, February 18-22, 2019, Revised Selected Papers.
550–566. https://doi.org/10.1007/978-3-030-32101-732
[25] P. Erdos and A Renyi. 1960. On the Evolution of Random Graphs. In
PUBLICATION OF THE MATHEMATICAL INSTITUTE OF THE HUNGARIAN
ACADEMY OF SCIENCES. 17–61.
[26] Yue Gao, Jinqiao Shi, Xuebin Wang, Qingfeng Tan, Can Zhao, and Zelin
Yin. 2019. Topology Measurement and Analysis on Ethereum P2P Network.
In 2019 IEEE Symposium on Computers and Communications, ISCC 2019,
Barcelona, Spain, June 29 - July 3, 2019. IEEE, 1–7. https://doi.org/10.1109/
ISCC47284.2019.8969695
[27] Adem Efe Gencer, Soumya Basu, Ittay Eyal, Robbert van Renesse, and Emin Gün
Sirer. 2018. Decentralization in Bitcoin and Ethereum Networks. In Financial
Cryptography and Data Security - 22nd International Conference, FC 2018,
Nieuwpoort, Curaçao, February 26 - March 2, 2018, Revised Selected Papers
(Lecture Notes in Computer Science, Vol. 10957), Sarah Meiklejohn and Kazue
Sako (Eds.). Springer, 439–457. https://doi.org/10.1007/978-3-662-58387-624
[28] Matthias Grundmann, Till Neudecker, and Hannes Hartenstein. 2018. Exploiting
Transaction Accumulation and Double Spends for Topology Inference in Bitcoin.
IMC ’21, November 2–4, 2021, Virtual Event, USA
Kai Li et al., Kai Li, Yuzhe Tang, Jiaqi Chen, Yibo Wang, and Xianghong Liu
REFERENCES
[1] Retrieved May, 2021. Aleth – Ethereum C++ client, tools and libraries. https:
In Financial Cryptography and Data Security - FC 2018 International Workshops,
BITCOIN, VOTING, and WTSC, Nieuwpoort, Curaçao, March 2, 2018, Revised
Selected Papers (Lecture Notes in Computer Science, Vol. 10958), Aviv Zohar, It-
tay Eyal, Vanessa Teague, Jeremy Clark, Andrea Bracciali, Federico Pintore, and
Massimiliano Sala (Eds.). Springer, 113–126. https://doi.org/10.1007/978-3-662-
58820-89
[29] Ethan Heilman, Alison Kendler, Aviv Zohar, and Sharon Goldberg. 2015.
Eclipse Attacks on Bitcoin’s Peer-to-Peer Network. In USENIX Security 2015,
Washington, D.C., USA, Jaeyeon Jung and Thorsten Holz (Eds.). USENIX Associ-
ation, 129–144. https://www.usenix.org/conference/usenixsecurity15
[30] Sebastian A. Henningsen, Martin Florian, Sebastian Rust, and Björn Scheuer-
mann. 2020. Mapping the Interplanetary Filesystem. In 2020 IFIP Networking
Conference, Networking 2020, Paris, France, June 22-26, 2020. IEEE, 289–297.
https://ieeexplore.ieee.org/document/9142766
[n.d.]. Under the Hood of the Ethereum Gossip Protocol. ([n. d.]).
[31] Lucianna Kiffer, Asad Salman, Dave Levin, Alan Mislove, and Cristina Nita-Rotaru.
[32] Seoung Kyun Kim, Zane Ma, Siddharth Murali, Joshua Mason, Andrew Miller,
and Michael Bailey. 2018. Measuring Ethereum Network Peers. In Proceedings
of IMC 2018. 91–104. https://dl.acm.org/citation.cfm?id=3278542
[33] Philip Koshy, Diana Koshy, and Patrick D. McDaniel. 2014. An Analysis of
Anonymity in Bitcoin Using P2P Network Traffic. In Financial Cryptography and
Data Security - 18th International Conference, FC 2014, Christ Church, Barbados,
March 3-7, 2014, Revised Selected Papers (Lecture Notes in Computer Science,
Vol. 8437), Nicolas Christin and Reihaneh Safavi-Naini (Eds.). Springer, 469–485.
https://doi.org/10.1007/978-3-662-45472-530
[34] Kai Li, Jiaqi Chen, Xianghong Liu, Yuzhe Richard Tang, XiaoFeng Wang, and
Xiapu Luo. 2021. As Strong As Its Weakest Link: How to Break Blockchain
DApps at RPC Service. In 28th Annual Network and Distributed System Security
Symposium, NDSS 2021, virtually, February 21-25, 2021. The Internet Soci-
ety. https://www.ndss-symposium.org/ndss-paper/as-strong-as-its-weakest-
link-how-to-break-blockchain-dapps-at-rpc-service/
[35] Kai Li, Yibo Wang, and Yuzhe Tang. 2021. DETER: Denial of Ethereum Txpool
sERvices. In Proceedings of the 2021 ACM SIGSAC Conference on Computer
and Communications Security (CCS ’21), November 15 - 19, 2021, Virtual Event,
Republic of Korea.
[36] Petar Maymounkov and David Mazières. 2002. Kademlia: A Peer-to-Peer In-
formation System Based on the XOR Metric. In Peer-to-Peer Systems, First
International Workshop, IPTPS 2002, Cambridge, MA, USA, March 7-8, 2002,
Revised Papers (Lecture Notes in Computer Science, Vol. 2429), Peter Druschel,
M. Frans Kaashoek, and Antony I. T. Rowstron (Eds.). Springer, 53–65. https:
//doi.org/10.1007/3-540-45748-85
[37] Andrew Miller, James Litton, Andrew Pachulski, Neal Gupta, Dave Levin, Neil
Spring, and Bobby Bhattacharjee. 2015. Discovering bitcoin’s network topology
and influential nodes. University of Maryland, Tech. Rep (2015).
[38] Till Neudecker. 2019. Characterization of the Bitcoin Peer-to-Peer Network
(2015-2018). Technical Report 1. Karlsruher Institut für Technologie (KIT).
https://doi.org/10.5445/IR/1000091933
[39] Till Neudecker, Philipp Andelfinger, and Hannes Hartenstein. 2016. Tim-
ing Analysis for Inferring the Topology of the Bitcoin Peer-to-Peer Net-
work. In 2016 Intl IEEE Conferences on Ubiquitous Intelligence & Computing,
Advanced and Trusted Computing, Scalable Computing and Communications,
Cloud and Big Data Computing, Internet of People, and Smart World Congress
(UIC/ATC/ScalCom/CBDCom/IoP/SmartWorld), Toulouse, France, July 18-21,
2016. IEEE Computer Society, 358–367.
https://doi.org/10.1109/UIC-ATC-
ScalCom-CBDCom-IoP-SmartWorld.2016.0070
[40] Mark EJ Newman. 2003. The structure and function of complex networks. SIAM
review 45, 2 (2003), 167–256.
[41] Aristodemos Paphitis, Nicolas Kourtellis, and Michael Sirivianos. 2021. A First
Look into the Structural Properties and Resilience of Blockchain Overlays. CoRR
abs/2104.03044 (2021). arXiv:2104.03044 https://arxiv.org/abs/2104.03044
315
TopoShot: Uncovering Ethereum’s Network Topology Leveraging Replacement Transactions
IMC ’21, November 2–4, 2021, Virtual Event, USA
Appendices
A TXPROBE’S APPLICABILITY TO
nodes M, A and B in the TopoShot protocol. In this local environ-
ment, we aim at evaluating TopoShot’s correctness with respect
to varying mempool sizes on node A.
On node A, we vary node A’s mempool sizes from 3120 to 9120.
In the experiments, we also populate the three-node network with
a varying number of pending transactions txO ’s, such as 1, 1000,
2000, and 3000 such transactions.
We use the measurement results from TopoShot and compare
it against the ground-truth to report the recall in Figure 7. The
result shows that given mempool size X and the number of pending
transactions X ′, TopoShot achieves 100% recall when X − X ′ <=
5120. Otherwise, the recall drops to 0%.
Figure 7: Recall with increasing mempool size
This validation study implies that matching the number of pend-
ing transactions to the actual mempool size is crucial to achieving
100% measurement recall.
Local Validation of Parallel Measurement. We conduct a vali-
B.1.1
dation of the parallel measurement method in a local environment
without connection to a remote Ethereum network. Here, the mea-
surement node M, two nodes A1 and A2, as well as node B, are run
on local machines under our control.
In terms of the connections among A1, A2 and B, there are two
permutations of three possibilities, that is, P(3, 2) = 8. Given the
symmetry (e.g., ⟨A2, B⟩ is equivalent to ⟨A1, B⟩), we consider six
possibilities as listed below. For each possibility, we use TopoShot
to conduct measurements for 100 times. The final result is positive
if any of the 100 measurements returns a positive result (i.e., there is
a connection). Then by comparing the measurement results and the
ground-truth, we obtain the precision and recall of the measurement
results.
As can be seen from table 8, all results are with 100% recall and
precision, even when there is a connection between A1 and A2. The
theoretic measurement inaccuracy when A1 connects to A2 seems
unlikely to occur in practice.
316
ETHEREUM: ADDITIONAL DETAILS
TxProbe is inapplicable to measuring the topology of Ethereum
network, due to two distinct features in Ethereum: 1) Ethereum’s
propagation model where transactions can be directly propagated
without announcement, and 2) Ethereum’s account-based model
where the balance state can be arbitrarily recharged while a Bitcoin
balance can only transit one way, from unspent to spent (as in
its UTXO model). In the main text, we explain why TxProbe’s
inapplicable in Ethereum due to 2). Here, we explain TxProbe’s
inapplicable in Ethereum due to 1).
Briefly, before sending txA, TxProbe sends two double-spending
transactions respectively to node A and B such that txA on node B
will become an orphan transaction that is not propagated further.
However, with Ethereum’s account model, txA on node B would
not necessarily be an orphan transaction (or equivalently a future
transaction in Ethereum’s jargon). It can be an overdraft transaction
that is propagated. More detailed description is below:
A
and tx′
B
TxProbe [24] actively measures Bitcoin network topology, by
exploiting its handling of orphan/double-spending transactions in
transaction propagation. Other works [28] measure the Bitcoin
topology using a similar approach. In the following, we describe
the working of TxProbe [24] in detail, with the purpose to dis-
cuss its applicability to measuring Ethereum topology. Suppose
using TxProbe to measure the connection between nodes A and B.
The measurement node first sends to nodes A and B two double-
spending transactions, say tx′
. It then sends the third
transaction txA spending tx′
A
to node A. It observes the presence of
the transaction txA on node B. If it is present, there is a connection
between nodes A and B.
Applying TxProbe to measuring Ethereum topology is unfeasi-
ble due to Ethereum’s account model: Ethereum adopts a different
model to store ledger states than Bitcoin, and the definition of
orphan transactions in Ethereum is different than that in Bitcoin.
Specifically, Ethereum stores ledger state (how much cryptocur-
rency an address/account has) in per-account balances, namely
the account model, while Bitcoin stores the balance state in per-
transaction UTXO, namely the UTXO model. Under UTXO, an
orphan transaction is a transaction that spends an input whose
state is yet to be determined. This makes the third transaction in
the TxProbe protocol an orphan on Node B, which does not propa-
gate. However, under the account model, an orphan transaction (or
so-called future transaction) is one with a noncontinuous nonce to
any previous transaction, where a nonce is per a sender account.
Thus, the third transaction that spends a double-spending trans-
action is not necessarily an orphan, as it may be an over-drafting
transaction with a valid nonce (in which case, the transaction will
be propagated by node B).
B LOCAL VALIDATIONS
B.1 Local Validation of Serial Measurement
Local evaluation: In this experiment, we set up three local
Ethereum nodes, mutually connected and without the communi-
cation to any external Ethereum nodes. The three nodes represent
3120412051206120712081209120Txpool size020406080100Recall (%)0 pending txs 1000 pending txs2000 pending txs3000 pending txsIMC ’21, November 2–4, 2021, Virtual Event, USA
Kai Li et al., Kai Li, Yuzhe Tang, Jiaqi Chen, Yibo Wang, and Xianghong Liu
(a) Community in Rinkeby
(b) Geo distribution of Rinkeby
(c) Community in Goerli
(d) Geo distribution of Goerli
Figure 8: Visualization of measured Rinkeby and Goerli networks
Table 8: Recall and precision of using TopoShot on local
nodes
⟨A1, A2⟩, ⟨A1, B⟩, ⟨A2, B⟩
⟨A1, A2⟩, ⟨A1, B⟩
⟨A1, A2⟩, ⟨A2, B⟩
⟨A1, A2⟩
⟨A1, B⟩, ⟨A2, B⟩
⟨A1, B⟩ (also ⟨A2, B⟩)
Null
Recall
100%
100%
100%
100%
100%
100%
Precision
100%
100%
100%
100%
100%
100%
C MEASUREMENT EXTENSION FOR
NON-INTERFERENCE
C.1 Extending TopoShot with
Non-interference Verification
Goals: When running our TopoShot against an operational
Ethereum network, notably the mainnet, it is required that the mea-
surement does not interfere with the normal operations of the net-
work; for instance, the TopoShot should not evict any transactions
that are otherwise included in the blockchain. This non-interference
property is formally described in our analysis framework in § C.2.
Design rationale: To design TopoShot extension for assurance
of non-interference, one possible approach is to set a low Gas price
(i.e., TopoShot’s parameter Y) and prove the non-interference,
a priori, by considering the theoretically worst case that could
occur after the measurement starts. Our initial design follows this
approach, but just to find it is unfeasible with the current Ethereum-
node settings.5
Instead of proving non-interference a priori, we aim at verify-
ing the non-interference a posteriori. That is, the measurement
node M initially sets a conservatively low Gas price (e.g., based on
heuristics) and conducts the measurement. Meanwhile the node
monitors several conditions on the tested network during and after
the measurement, in order to establish non-interference posterior.
Measurement extension for verification: Consider a mea-
surement node M runs TopoShot against a subject node S in the
Ethereum network C (S can be either Node A or B as in our serial-
measurement model in Figure 2b). The measurement starts at time
t1 and ends at t2. Node M sets a low Gas price at Y = Y0 and
monitors the blockchain on the following conditions:
5To be specific, Geth’s default mempool length 5120 is too small to feed all the blocks
produced in the three-hour span (expiration time), by considering the worst case that
no new transactions are submitted to the Ethereum network after the measurement.