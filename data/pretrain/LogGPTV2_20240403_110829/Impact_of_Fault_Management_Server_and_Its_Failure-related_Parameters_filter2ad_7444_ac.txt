management  software  proprietarily.  Hence,  Am 
is 
determined  by  the  third  party,  and  pc  and  pf  are 
determined  by  the  communication  system  developer. 
C1(pc)  and  C2(pf)  correspond  to  development  cost,  and 
C3(Am) corresponds to platform purchase price. Then the 
cost/availability 
following 
problem:  
Suppose  we  have  designed  a  system  with  (p*c,  p*f,  A*m, 
A*s),  what  is  the  most  cost-effective solution to improve 
the  system  availability  to  A** s? 
  Should  the  fault 
management  software  be  designed  with  higher  pc  and  pf 
on  a  plain  platform  (i.e.,  improving  pc  and  pf), or should 
the 
fault  management  server  be  built  on  a  high-
availability platform (i.e., improving Am)?  
tradeoff 
reduces 
to 
the 
  pf  =F
(pc) 
A**s 
A*s 
p*f 
p*c 
       Figure 4 -a 
  C2(F
(pc)) 
 1 
       Figure 4 -c 
pc 
 1 
     Figure 4-d 
pc 
Figure 4. Typical Plots of F(pc), C1(pc), C2(F(pc)) and C1(pc)+C2(F(pc)
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:17:10 UTC from IEEE Xplore.  Restrictions apply. 
(cid:213)
-
(cid:213)
-
5.2 Cost of Improving Am 
Increasing A*m to A**m ,  
results in a cost increase of 
A**m = (A**s -A*s)/ ¶ As/ ¶ Am + A*m        (15) 
C 3(A**m)- C 3(A*m )     
           (16) 
5.3 Cost-effective Design  
Comparing  the  cost  increase  in  Equations  13  and  16,  we 
can obtain the cost-effective solution. 
It  should  be  noted  that  improving  system  availability  by 
improving  the  coverage  ratio  and  fail-safe ratio does not 
mean that the fault management server can be built on a 
very  vulnerable  platform.  According  to  Properties  1  and 
fail-safe 
ratio  and 
ratio.  However, 
2, system availability is an increasing function of the fault 
coverage 
the 
improvement  of  system  availability  achieved  by  only 
increasing  the  fault  coverage  ratio  and  fail-safe  ratio  is 
limited. The best case is pf =pc=1. 
A
s
+
iA
/2)(
/(
e
iA
)2)(
e
 (17) 
+
iA
)(
e
))(
iA
e
1(
N
A
)
m
i
=
1
N
A
m
i
2(
=
1
which means the fault management server should be built 
on  a  platform  with  a  minimum  availability  as  shown  in 
Equation 18. 
N
iA
)(
e
A
s
=
i
1
))(
iA
/(
e
+
iA
/2)(
e
iA
e
)2)(
(18) 
A
m
N
=
1
i
)(
iA
e
N
=
1
i
2(
Table 2. As versus Am, pf and pc (Ts(1) = Ts(2) = 30 minutes) 
Am 
As (pf=0.9, pc=0.9) 
As (pf=0.99, pc=0.9) 
A (pf=0.9, pc=0.99) 
A (pf=0.999, pc=0.999) 
A (pf=1, pc=1) 
2nd case - 1st case 
3rd case - 1st case 
3rd case - 2nd case 
0.99 
0.998977152
0.999876125
0.998987317
0.999977204
0.999987306
0.000898973
1.01647E-05
-0.000888809
0.999 
0.99988628
0.99997617
0.99989653
0.99999645
0.99999756
8.9897E-05
1.0257E-05
-7.964E-05
0.9999 
0.99997719
0.99998618
0.99998746
0.99999837
0.99999848
8.9897E-06
1.0266E-05
1.2767E-06
0.99999 
0.99998628
0.99998718
0.99999655
0.99999856
0.99999869
8.9897E-07
1.0267E-05
9.3683E-06
f  (1)=  1/m
f  (2)=  1  year,  1/m
6. Numerical Results and Discussion 
In  this  paper,  we  give  an  example  for  a  system  with  two 
functional  units.    Af  (1)=  Af  (2)=0.999429549  (1/ l
f  (1)= 
1/l
f  (2)=5  hours)  and  Ts(1) = 
Ts(2) = 30 minutes. Table 2 gives As versus Am , pf and pc. 
We study five cases: (p f =0.9, pc=0.9),  (pf =0.99, pc=0.9), 
(pf =0.9, pc=0.99), (p f =0.999, pc=0.999), and (p f=1, p c=1). 
The  numerical  computations  were  obtained  by  using 
SHARPE software package [10]. 
Calculating  the  availability  difference  between  the  first 
two cases, we can easily confirm Property 1, i.e.,  As is an 
increasing  function  of  pf,  and  ¶ As/  ¶ pf  is  a  decreasing 
function of A m. We can also see that when we improve the 
server  availability  from  0.99  to  0.999  (or  from  0.999  to 
0.9999),  ¶ As/  ¶ pf shrinks by 90 percent. This is because 
that ¶ As/ ¶ pf is proportional to 1-Am.  
Calculating  the  availability  difference  between  the  first 
and third case, we can easily confirm Property 2, i.e.,  As 
is  an  increasing  function  of  pc,  and  ¶ As/  ¶ pc  is  an 
increasing  function  of  Am.  However, the change of  ¶ As/ 
¶ pc with A m is insignificant.  
Property 3 can be partially confirmed by calculating the 
availability difference between the second and third case, 
which  shows  that  the  second  case  provides  higher 
availability when the availability of the fault management 
server  is  lower  than  0.999,  and  the  third  case  provides 
higher  availability  when  the  availability  of  the  fault 
management server is not less than 0.9999.  We can then 
conjecture 
the  fault 
management  server  is  lower,  the  fail-safe  ratio  has  a 
higher  impact  on  system  availability  than  the  coverage 
ratio  does.  Conversely,  when  the  availability  of  the  fault 
management  server  is  higher,  the coverage ratio plays a 
more critical role on system availability than the fail-safe 
ratio  does.    The  crossover  point  A’m  in  this  case  is 
between  0.999  and  0.9999.  In  order  to  further  illustrate 
the  availability  of 
that  when 
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:17:10 UTC from IEEE Xplore.  Restrictions apply. 
(cid:213)
-
-
(cid:213)
-
£
(cid:213)
(cid:213)
-
-
-
(cid:213)
-
‡
Property 3, we compare the downtimes for the first three 
cases  (i.e.,  525600(1-As)  minutes)  in  Figure  5.  The 
difference between the systems with (pf =0.9, pc=0.9) and  
(pf  =0.99,  pc=0.9)  is  more  significant  than  the difference 
between the systems with (pf =0.9, pc=0.9) and   (pf =0.9, 
pc=0.99) when Am=0.99 and 0.999. When Am=0.9999 and 
0.99999, the difference between the systems with (pf =0.9, 
pc=0.9) and  (p f =0.9, pc=0.99) is more significant than the 
difference between the systems with (pf =0.9, pc=0.9) and  
(pf =0.99, pc=0.9).  
Downtime Per Year (minutes)
Pf=0.9,Pc=0.9
Pf=0.99,Pc=0.9
Pf=0.9,Pc=0.99
1000
100
10
1
Am=0.99
Am=0.999
Am=0.9999 Am=0.99999
Figure 5. Comparison of Downtime for the First Three Cases  (Ts(1) = Ts(2) = 30 minutes) 
From  Table  2,  one  can  see  that  5-nine  (0.99999645) 
system availability is achieved when pf =0.999, pc=0.999 
and  Am  =0.999,  which  means  that  the  fault management 
server  does  not  necessarily  have  to  be  5-nine  (3-nine  is 
sufficient  in  this  example)  in  order  to  achieve  5-nine 
system availability, if the fail-safe ratio and coverage ratio 
are  high  enough.  Therefore,  availability,  coverage  ratio 
and  fail-safe  ratio  are  three  important  parameters  of  the 
fault  management  server,  which  can  be  traded  off  to 
achieve higher system availability.  
In  the  example  given  in  Table  2,  assume  that  we  have 
designed a system with  pc =0.99,  pf=0.9,  Am  =0.999, and 
As  =0.99989653.  In  order  to  achieve  5-nine  system 
availability,  we  can  increase  pc  and  pf  to  0.999,  or 
increase  Am  to  0.99999.  Both  cases  are  highlighted  in 
Table  2  with  bold  numbers.  The  system  architect  can 
make  decision  based  on  cost  estimation.  Table  3  also 
shows that with 2-nine fault management server platform, 
the  maximal  system  availability  is  0.999987306,  which 
means that if the platform for the fault management server 
is 2-nine, there is no way to get 5-nine system availability 
unless purchasing a platform with higher availability (e.g., 
3-nine). 
Table  3  lists  the  system  availability  with  lower  manual 
switchover  time,  i.e.,  Ts(1)  =  Ts(2) = 10 minutes. All the 
other parameters are the same as the cases in Table 2. One 
can  see  that  the  system  availability  is  a  decreasing 
function  of  switchover  time.  One  interesting  observation 
is  that  the  second  case  provides  higher  availability  than 
the third case when  Am varies from 0.99 to 0.9999.  The 
crossover point  A’m  in  this  case  is  between  0.9999  and 
0.99999.  Therefore,  decreasing  the  manual  switchover 
time  may  push  the  crossover  point  A’m  higher,  which 
implies  that  decreasing  the  manual  switchover  time  may 
weaken the impact of the coverage ratio. This conclusion 
can  also  be  confirmed  by  comparing  the  values  in  row 
“3rd case  -  1st case” in Tables 2 and 3, which are around 
1.02E-05 and 3.4E-06 respectively.  
Table 3. As versus Am, pf and pc (Ts(1) = Ts(2) = 10 minutes) 
Am 
As (pf=0.9, pc=0.9) 
As (pf=0.99, pc=0.9) 
As (pf=0.9, pc=0.99) 
As (pf=0.999, pc=0.999) 
2nd case - 1st case 
3rd case - 1st case 
3rd case - 2nd case 
0.99 
0.998984681
0.999883655
0.99898807
0.999977279
0.000898973
3.3884E-06
-0.000895585
0.999 
0.99989387
0.99998377
0.99989729
0.99999652
8.9897E-05
3.4192E-06
-8.6478E-05
0.9999 
0.99998479
0.99999378
0.99998822
0.99999845
8.9897E-06
3.4223E-06
-5.5675E-06
0.99999 
0.99999389
0.99999478
0.99999731
0.99999864
8.9897E-07
3.4226E-06
2.5236E-06
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:17:10 UTC from IEEE Xplore.  Restrictions apply. 
7. Conclusion 
The  paper  presented  a  research  on  the  impact  of  fault 
management  server  and  its  failure-related  parameters  to 
high-availability  communication  systems.  According  to 
our  study,  we  found  that  the  availability  of  the  fault 
management server does not need to be 99.999% in order 
to guarantee a 99.999% system availability as long as the 
fail-safe ratio and the fault coverage ratio are sufficiently 
high.  Availability,  coverage  ratio  and  fail-safe  ratio  are 
three  important  parameters  of  the  management  server, 
which  can  be  traded  off  to  achieve  higher  operational 
system  availability.  Because  fault-tolerant computers are 
very  expensive,  our  observations  lead  to  a  more  cost-
effective  design  of  the  fault  management  server.    This 
result  is  intuitively  explainable.  The  basic  system’s 
availability  is  ultimately  determined  by  the  functional 
units.  The  presence  of  a  fault  management  server  can 
potentially have both a “positive” impact and a “negative” 
impact  on  the  availability  of  the  functional  units.  The 
server can help in that it increases the chances of a failed 
unit  to  recover  automatically  (modeled  as  the  coverage 
ratio),  instead  of  having  to  go  through  a  longer  manual 
repair. The server may also have a negative impact, if its 
own  failure  affects  the  rest  of  the  system  (this  effect  is 
captured  by  fail-safe  ratio).  This  explains  why  coverage 
and fail-safe ratios are so vital to system availability. We 
must  keep  in  mind  that  the  probability  that  both  a 
functional unit and the fault management server fail at the 
same  time  is  small,  i.e.,  (1-A m)(1-Ai),  where  Am  and  Ai 
are of three or four “nines”.  This implies that a failure of 
the  server  is  not  likely  to  result  in  an  outage  for  any 
functional  units.  This  in  turn  explains  why  the  fault 
management server’s own availability does not appear to 
be a dominant “negative” factor.  
Stratus 
Computer 
Inc., 
References 
[1] R. Gopal, “Layered Model for Supporting Fault Isolation and 
Recovery”,  IEEE/IFIP  Network  Operations  and  Management 
Symposium, 2000, pp729-742 
[2]  Rick  Sturm,  “Availability  Requirement  for  Management 
System”, 
1998, 
http://www.stratus.com/whitep/openvie.htm   
[3]  M.R.Lyu,  V.B.Mendiratta,  “Software  Fault  Tolerance  in  a 
Clustered Architecture: Techniques and Reliability Modelling”, 
Aerospace Conference, 1999, pp141-149 
[4]  V.B.Mendiratta,  “Reliability  Analysis  of  Clustered 
Computing  Systems”,  The  Ninth  International  Symposium  on 
Software Reliability Engineering, 1998, pp268-272 
[5]  N.  Kamiura,  Y.  Hata,  K.  Yamato,  “On  Design  of  Fail-safe 
Cellular Arrays”, Proc. of IEEE ATS’96, 1996, pp107-112 
[6] M. Nicolaidis, S.Noraz, B.Courtois, “A Generalized Theory 
of Fail-safe Systems”, Proc. of FTCS’25, 1995, pp273-281 
[7]  M.  Lubaszewski,  B.  Courtois,  “A  Reliable  Fail-safe 
System”,  IEEE  Trans.  Computer,  Vol.  47,  No.  2,  Feb.  1998, 
pp236-241 
[8] D.Essame, J.Arlat, D.Powell, “Available Fail-safe Systems”, 
Proceedings of the Sixth IEEE Computer Society Workshop on 
Future Trends of Distributed Computing Systems, 1997, pp176-
182 
[19] 
Lexington Books, Lexington, Mass, 1976. 
[10]  R.A.Sahner,  K.S.Trivedi,  A.Puliafito,  “Performance  and 
Reliability  Analysis  of  Computer  Systems:  An  Example-based 
Approach  Using  the  SHARPE  Software  Package”,  Kluwer 
Academic Publishers, Boston, MA, 1996. 
J.P.Ignizio,  “Goal  Programming  and  Extensions”, 
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:17:10 UTC from IEEE Xplore.  Restrictions apply.