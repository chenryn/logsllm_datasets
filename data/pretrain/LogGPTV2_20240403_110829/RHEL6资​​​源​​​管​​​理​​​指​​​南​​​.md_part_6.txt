    例​​​如​​​：目​​​录​​​ `/cgroup/cpu_and_mem/lab1/`{.filename} 中​​​的​​​ cgroup 称​​​为​​​
    `lab1`{.filename} \--
    其​​​路​​​径​​​已​​​唯​​​一​​​确​​​定​​​，因​​​为​​​对​​​于​​​给​​​定​​​的​​​子​​​系​​​统​​​最​​​多​​​有​​​一​​​个​​​层​​​级​​​。​​​还​​​请​​​注​​​意​​​该​​​组​​​群​​​可​​​由​​​创​​​建​​​该​​​
    cgroup 的​​​现​​​有​​​层​​​级​​​中​​​的​​​所​​​有​​​子​​​系​​​统​​​控​​​制​​​，即​​​使​​​没​​​有​​​在​​​ `cgcreate`{.command}
    命​​​令​​​中​​​指​​​定​​​这​​​些​​​子​​​系​​​统​​​ \-- 请​​​参​​​考​​​ [例 2.5 "cgcreate
    用​​​法​​​"](#ch-Using_Control_Groups.html#cgcreate_usage){.xref}。​​​
    :::
:::
::: para
因​​​为​​​同​​​一​​​层​​​级​​​中​​​的​​​所​​​有​​​ cgroup 有​​​相​​​同​​​的​​​控​​​制​​​器​​​，该​​​子​​​组​​​群​​​与​​​其​​​父​​​ cgroup
有​​​相​​​同​​​的​​​控​​​制​​​器​​​。​​​
:::
::: example
[⁠]{#ch-Using_Control_Groups.html#cgcreate_usage}
**例 2.5. cgcreate 用​​​法​​​**
::: example-contents
::: para
请​​​考​​​虑​​​在​​​ `cpu_and_mem`{.systemitem} 层​​​级​​​中​​​一​​​同​​​挂​​​载​​​ `cpu`{.systemitem} 和​​​
`memory`{.systemitem} 子​​​系​​​统​​​的​​​系​​​统​​​，并​​​将​​​ `net_cls`{.systemitem}
控​​​制​​​器​​​挂​​​载​​​到​​​名​​​为​​​ `net`{.systemitem} 的​​​另​​​一​​​个​​​层​​​级​​​中​​​。​​​我​​​们​​​现​​​在​​​运​​​行​​​：
:::
``` screen
~]# cgcreate -g cpu,net_cls:/test-subgroup
```
::: para
`cgcreate`{.command} 命​​​令​​​创​​​建​​​两​​​个​​​组​​​群​​​，名​​​为​​​
`test-subgroup`{.systemitem}，一​​​个​​​位​​​于​​​ `cpu_and_mem`{.systemitem}
层​​​级​​​，一​​​个​​​位​​​于​​​ `net`{.systemitem} 层​​​级​​​。​​​`cpu_and_mem`{.systemitem}
层​​​级​​​中​​​的​​​ `test-subgroup`{.systemitem} 组​​​群​​​由​​​ `memory`{.systemitem}
子​​​系​​​统​​​控​​​制​​​，即​​​使​​​在​​​ `cgcreate`{.command} 命​​​令​​​中​​​没​​​有​​​指​​​定​​​它​​​也​​​是​​​如​​​此​​​。​​​
:::
:::
:::
### [⁠]{#ch-Using_Control_Groups.html#idm140538557158272}备​​​用​​​方​​​法​​​
::: para
请​​​使​​​用​​​ `mkdir`{.command} 命​​​令​​​直​​​接​​​创​​​建​​​ cgroup 的​​​子​​​组​​​群​​​：
:::
``` screen
~]# mkdir /cgroup/hierarchy/name/child_name
```
::: para
例​​​如​​​：
:::
``` screen
~]# mkdir /cgroup/cpuset/lab1/group1
```
:::
::: section
::: titlepage
# [⁠]{#ch-Using_Control_Groups.html#sec-Removing_Cgroups}2.6. 删​​​除​​​控​​​制​​​组​​​群​​​ {.title}
:::
::: para
使​​​用​​​ `cgdelete`{.command} 删​​​除​​​ cgroup，其​​​语​​​法​​​与​​​ `cgcreate`{.command}
类​​​似​​​。​​​运​​​行​​​ `cgdelete subsystems:path`{.command}，其​​​中​​​：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    *subsystems* 是​​​用​​​逗​​​号​​​分​​​开​​​的​​​子​​​系​​​统​​​列​​​表​​​。​​​
    :::
-   ::: para
    *path* 是​​​到​​​与​​​该​​​层​​​级​​​相​​​对​​​ root 的​​​ cgroup 的​​​路​​​径​​​。​​​
    :::
:::
::: para
例​​​如​​​：
:::
``` screen
~]# cgdelete cpu,net_cls:/test-subgroup
```
::: para
`cgdelete`{.command} 还​​​可​​​使​​​用​​​ `-r`{.option} 选​​​项​​​递​​​归​​​删​​​除​​​所​​​有​​​子​​​组​​​群​​​。​​​
:::
::: para
删​​​除​​​ cgroup 时​​​，将​​​其​​​所​​​有​​​任​​​务​​​都​​​移​​​动​​​到​​​它​​​的​​​父​​​组​​​群​​​中​​​。​​​
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Using_Control_Groups.html#Setting_Parameters}2.7. 设​​​置​​​参​​​数​​​ {.title}
:::
::: para
在​​​可​​​修​​​改​​​相​​​关​​​的​​​ cgroup 的​​​用​​​户​​​帐​​​户​​​中​​​运​​​行​​​ `cgset`{.command}
命​​​令​​​设​​​定​​​子​​​系​​​统​​​参​​​数​​​。​​​例​​​如​​​：如​​​果​​​有​​​
`/cgroup/cpuset/group1`{.filename}，则​​​请​​​使​​​用​​​以​​​下​​​命​​​令​​​指​​​定​​​这​​​个​​​组​​​群​​​可​​​访​​​问​​​的​​​
CPU：
:::
``` screen
cpuset]# cgset -r cpuset.cpus=0-1 group1
```
::: para
`cgset`{.command} 的​​​语​​​法​​​为​​​：`cgset -r`{.command} *parameter*=*value*
*path_to_cgroup* ``{=html}，其​​​中​​​：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    *parameter* 是​​​要​​​设​​​定​​​的​​​参​​​数​​​，该​​​参​​​数​​​与​​​给​​​定​​​ cgroup 的​​​目​​​录​​​中​​​的​​​文​​​件​​​对​​​应​​​。​​​
    :::
-   ::: para
    *value* 是​​​为​​​参​​​数​​​设​​​定​​​的​​​值​​​
    :::
-   ::: para
    *path_to_cgroup* 是​​​到​​​相​​​对​​​[*该​​​层​​​级​​​ root 的​​​*]{.emphasis} cgroup
    路​​​径​​​。​​​例​​​如​​​：如​​​果​​​设​​​定​​​ root 组​​​群​​​的​​​参​​​数​​​（如​​​有​​​
    `/cgroup/cpuacct/`{.filename} 文​​​件​​​），请​​​运​​​行​​​：
    :::
    ``` screen
    cpuacct]# cgset -r cpuacct.usage=0 /
    ```
    ::: para
    另​​​外​​​，因​​​为​​​ `.`{.literal} 与​​​ root 组​​​群​​​相​​​关​​​（即​​​ root
    组​​​群​​​本​​​身​​​），您​​​还​​​可​​​运​​​行​​​：
    :::
    ``` screen
    cpuacct]# cgset -r cpuacct.usage=0 .
    ```
    ::: para
    备​​​注​​​：`/`{.literal} 是​​​首​​​选​​​语​​​法​​​。​​​
    :::
    ::: note
    ::: admonition_header
    **备​​​注​​​**
    :::
    ::: admonition
    ::: para
    只​​​能​​​为​​​该​​​ root 组​​​群​​​设​​​定​​​少​​​量​​​参​​​数​​​（比​​​如​​​上​​​面​​​的​​​示​​​例​​​中​​​演​​​示​​​的​​​
    `cpuacct.usage`{.filename} 参​​​数​​​）。​​​这​​​是​​​因​​​为​​​ root
    组​​​群​​​拥​​​有​​​所​​​有​​​现​​​有​​​资​​​源​​​，因​​​此​​​定​​​义​​​某​​​些​​​参​​​数​​​限​​​制​​​现​​​有​​​进​​​程​​​就​​​没​​​有​​​任​​​何​​​意​​​义​​​，例​​​如​​​
    `cpuset.cpu`{.filename} 参​​​数​​​。​​​
    :::
    :::
    :::
    ::: para
    要​​​设​​​定​​​ root 组​​​群​​​的​​​子​​​组​​​群​​​ `group1`{.systemitem} 参​​​数​​​，请​​​运​​​行​​​：
    :::
    ``` screen
    cpuacct]# cgset -r cpuacct.usage=0 group1
    ```
    ::: para
    该​​​组​​​群​​​名​​​称​​​结​​​尾​​​的​​​斜​​​杠​​​（例​​​如​​​：`cpuacct.usage=0 group1/`{.command}）是​​​可​​​选​​​的​​​。​​​
    :::
:::
::: para
您​​​可​​​以​​​使​​​用​​​ `cgset`{.command}
设​​​定​​​的​​​值​​​可​​​能​​​取​​​决​​​于​​​在​​​具​​​体​​​层​​​级​​​中​​​设​​​定​​​的​​​较​​​大​​​的​​​值​​​。​​​例​​​如​​​：如​​​果​​​将​​​
`group1`{.filename} 限​​​制​​​为​​​只​​​能​​​使​​​用​​​系​​​统​​​中​​​的​​​ CPU 0，则​​​您​​​无​​​法​​​将​​​
`group1/subgroup1`{.filename} 设​​​定​​​为​​​使​​​用​​​ CPUs 0 和​​​ 1，或​​​者​​​只​​​使​​​用​​​ CPU 1。​​​
:::
::: para
您​​​还​​​可​​​以​​​使​​​用​​​ `cgset`{.command} 将​​​一​​​个​​​ cgroup 中​​​的​​​参​​​数​​​复​​​制​​​到​​​另​​​一​​​个​​​现​​​有​​​
cgroup 中​​​，例​​​如​​​：
:::
``` screen
~]# cgset --copy-from group1/ group2/
```
::: para
使​​​用​​​ `cgset`{.command} 复​​​制​​​参​​​数​​​的​​​语​​​法​​​为​​​：`cgset --copy-from`{.command}
*path_to_source_cgroup* *path_to_target_cgroup*``{=html}，其​​​中​​​：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    *path_to_source_cgroup* 是​​​相​​​对​​​该​​​层​​​级​​​中​​​ root 组​​​群​​​，到​​​要​​​复​​​制​​​其​​​参​​​数​​​的​​​
    cgroup 的​​​路​​​径​​​。​​​
    :::
-   ::: para