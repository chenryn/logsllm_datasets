The ufunc reference contains the following notes about `out` and `where`
usage:
> If ‘out’ is None (the default), a uninitialized return array is created. The
> output array is then filled with the results of the ufunc in the places that
> the broadcast ‘where’ is True. If ‘where’ is the scalar True (the default),
> then this corresponds to the entire output being filled. **Note that outputs
> not explicitly filled are left with their uninitialized values.**
and
> Note that if an uninitialized return array is created, values of False will
> leave those values uninitialized.
I understand why the API is like this, and that there are legitimate use cases
that prevent unnecessary initialization. But it would be nice to also have
this warning on the specific functions, like np.divide etc. - especially
because this is a construct where an innocent looking statement may result in
non-deterministic behavior.
Thanks!