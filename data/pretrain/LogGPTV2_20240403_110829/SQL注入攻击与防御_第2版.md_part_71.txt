可的安全加密哈希算法，比如SHA-2系列(SHA256、SHA384、SHA512)的算法，
或者采用更加安全的哈希算法，比如专门设计用于哈希密码的bcrypt或scrypt算法。
问题：我们的应用程序包含非常少的日志记录功能，但我们想更多地润察潜在的SQL注
入攻击。如何做才能在不修改应用程序的前提下将该功能添加到我们的环境中？
解答：可以采取多种操作。与其最开始将模块添加到应用程序，不如从Web服务器日志
文件着手。所有的Web服务器默认情况下都会保持一份请求和响应状态码的日志。
通常可以通过自定义它们来捕获额外的数据，不过因为POST数据不会记录到日志
中，所以我们仍然无法获取对POST数据的润察。Web应用防火墙可以作为很好的
补充，它们通常支持将整个请求和响应事务记录到日志。此外，还有很多可免费获
取的日志记录模块，只需修改一下配置就可以将它们部署到应用程序中。
351
---
## Page 366
SQL注入攻击与防御（第2版）
问题：是否存在某些方法，它们可以向攻击者隐藏我的Web站点，但同时仍然能够使我
的客户很容易地访间到？
解答：坚定的攻击者始终能找到你的Web站点。不过可以微一些基本的事情，这至少能
减小被自动扫描器和端虫检测到的几率。设置Web服务器以便默认的Web站点返
回空白页面，使用通配符 SSL证书，配置反向 DNS查询以便Web服务器的 IP地
址不会被解析成Web服务器上配置的主机名。如果您真的很执着，可以要求从流
行的搜索引擎（比如Google)的索引中删除站点。
问题：我有一个需要针对SQL注入进行加固的胖客户端应用程序，如何做才能不修改任
何代码即可实现该目标？
解答：如果它是通过HTTP来与应用服务器通信，那么可以将许多用于Web应用程序的
运行时解决方案运用到胖客户端应用程序中，应该加固Web服务以便在请求服务
时能够返回WSDL（Web服务描述语言)文件。如果应用程序执行数据访问，就可以
运用所有常规的数据库锁定过程。如果客户端直接连接到数据库，请考虑使用数据
库防火墙。对于这种情况，需要配置网络服务控制以便数据库防火墙不会被绕开。
352
---
## Page 367
第10章确认并从SQL注入
攻击中恢复
本章目标
·调查可疑的SQL注入攻击
·如果你是受害者，该怎么办？
10.1简介
SQL注入是黑客攻击的一种方式，它被用于很多信息安全的破坏中，并接连几周成为头条
新闻。这些破坏常常导致组织机构的声誉遭到毁灭性的损害，带来经济上的惩罚并损失很多生
意，甚至可以使一家公司破产。企业面对信息安全的重要性，他们常常聘请信息安全专家主动
地检测并设法补救应用程序中的SQL注入漏洞。在很多机构中，在已知漏洞被修正之前，往
往就会引入新的SQL注入漏洞。无论这是匆忙将新应用程序作为产品推出而忽视安全测试的
结果，还是在软件开发生命周期中缺乏安全整合的结果，很多机构都存在SQL注入漏洞，这
是黑客攻击的主要目标。
不可避免地，黑客将发现并利用这些漏洞，与SQL注入有关的事件将引起事件响应小组
的注意，计算机取证专家将调查、检验并做出响应。本章将介绍用于确认或判伪（discount）SQL
注入攻击是否成功所需的步骤，并介绍如何高效地遇制攻击或从攻击中恢复，以将商业影响降
低到最小。
10.2调查可疑的SQL注入攻击
在第2章中我们介绍了如何测试应用程序中的SQL注入漏洞，以及如何确认已经标识出
米的漏洞。当安全专家（或攻击者）位于另外一端近乎实时地接受SQL注入测试响应的Web浏
览器时，这些技术是简单明了的。在遇到可疑的攻击之后，调查者还有更多艰巨的工作要做，
他需要筛选大量信息，不但需要判断是否存在SQL注入攻击企图的证据，还需要判断这种攻
击是否成功。
下面介绍的这些步骤，是为机构内计算机安全事件响应小组和已经授权执行调查的计算机
取证专家准备的。其他读者可以在学理上进行实践或者作为一种常规的安全意识。
---
## Page 368
SQL注入攻击与防御（第2版）
10.2.1取证的合理实践
在过去10多年，尽管在安全意识和计算机取证经验领域取得了长足的进步，但由于无资
质的人以不恰当的方式来收集、处理或管理证据，因此依然有无数的调查涉及的证据无法被法
律程序采用。在绝大多数司法权力中，如果要在法庭上采用某种证据，那么对于如何收集和管
理数字化的证据都有着严格的规则和指导原则。常见的要求包括：
1）应该由接受过计算机取证培训并在机构中授权执行数字调查的人来处理调查事宜。
2）在调查期间收集的所有文件，应该镜像，并且应该创建镜像的副本用于分析。这可以
确保在需要时总有原始镜像可用。
3）对于新创建的每一份文件镜像，应该为之生成哈希，对于每个源文件也是如此。例如，
如果收集了一个Web服务器的日志文件(log)，就应该镜像服务器上的日志文件，并且应该为源
文件创建哈希，另外还要为刚才新创建的镜像文件（副本）也创建哈希，以确保二者完全匹配，
从面保证正确地复制了文件而没有受到污染。应该使用诸如 dcfdd 这样的专业工具来创建镜
像，dcfldd既可靠又灵活，而且还能为原始文件和新创建的镜像文件分别生成哈希。下面的例
子演示了dcfldd工具的语法，它将为 C:logsipostgresqllog文件创建一份位于z:的镜像，并为
二者分别生成 SHA1哈希以确保二者完全匹配，另外还将哈希存储在z:postgresql.shal文件中：
dcf1dd 1f=*C:\1ogs^postgresq1 .1og*
of=z:\postgresql dcfldd hash=sha1 hashlog=z:\postgresq1 sha1
4）在调查期间，用文档记录你所执行的所有操作，包括那些当连接到数据库服务器时完
成的操作：
·保留连接时间和所用数据库语境的记录。
·保留在RDBMS中执行命令的记录。
·将所有结果管道(pipe)重定向到文本文件中。要将标准输出（stdout)从数据库客户端控制
台(console)重定向到文本文件，可以采用多种方法。表10-1列出了主流RDBMS客户
端将标准输出重定向的命令。
5）确保将所有证据都写入无毒的存储介质，并将其保存在一个安全的地方，比如储物柜
或保险箱。
6)维护一份监管链（ChainofCustody)文档，用于跟踪收集的所有证据，从被防护时间开始
直到作为证据在法庭上呈现时的移动、存放位置和所有者。
在执行某个调查期间，这些指导原则是不容忽视的，一且确认已经发生成功的SQL注入攻
击，就可以回退（rollback）到攻击之前最近的时间，并按照法庭认可的恰当方法重新执行分析。
为了确保任何将来可能用到的证据不会失效，从一开始着手任何调查工作之时，就必须严格遵
循以上取证原则一即使在证实某个攻击已经成功之前，或者在确定将来是否进行法律诉讼之
前。这一点再怎么强调都不过分。
在理解了如何管理调查期间收集的证据之后，下面将进入实际的取证过程，这些证据中包
含了所需的信息，可以用于确认或判伪SQL注入攻击是否成功。
354
---
## Page 369
第10章确认并从SQL注入攻击中恢复
表10-1
主流RDBMS客户端重定向stdout的命令
RDBMS
厂商支持的客户端
日志记录的会话活动
重定向操作符
-e命令，当启动 SQLCMD 时，
控制台中使用：out输出命令，将
它在标准输出(sidout)上回显
把标准输出(sidout)重定向到指
Microsoft
所有发送给服务器的语句和
定的文件。
SQL Server
SQLCMD
查询。例如：
例如：
SQLCMD - e
SQLCMD>:out
2:\queryresults.txt
在 SQL*Plus 中使用 ECHO
在SQL*Plus 中使用 spool 命令。
ON命令。
例如：
Oracle
例如：
SQL> spoo1
SQL> SET ECHO ON
z:\queryresults.txt
Tee选项。
INTO OUTFILE 语句。
例如
例如：
MySQL
MySQL命令行客户端
Tee
3TIaanO oINI 
2 :\response\
2:\queryresults.txt
logofactions.txt
在PostgreSQL 中使用 ECHO
在PostgreSQL shell 中使用/g参数。
PostgreSQL
PostgreSQL shell
选项。
例如：
例如：
 =
\set ECHO a11
/g z:\queryr
sults.txt
10.2.2
分析数字化证据
数字化证据（digitalartifact）就是相关数据的集合。它们的范围很广，包括从存储在操作系
统中文件系统内的Web服务器的日志文件，到存储在内存中的信息，以及RDBMS 内核中的
信息。存在着很多种数据库痕迹。本章将重点关注一些在调查SQL注入攻击时最有效的证据
-Web服务器日志、数据库执行计划、事务日志（transactionlog）和数据库对象的时间戳
（timestamp)。虽然在各种不同的数据库中都存在其中大多数证据，比如在Microsoft SQLServer、
Oracle、MySQL和 PostgreSQL等RDBMS 产品中，但在不同数据库中，信息所在的范围和访
问这些信息的方法各有差异。下面将从Web服务器日志文件开始详细介绍以上每一种证据，对
于调查潜在的破坏，Web服务器日志是最重要的证据。
1.Web服务器日志文件
Web服务器是基于Web的应用程序的核心组件，作为交互层接受用户的输入并将输入传
递给后台应用程序。Web服务器通常维护着持久日志文件，其中包含它接收到的页面请求的历
史记录，以及以状态码形式记录的对该请求处理后产生的输出。系统管理员可以定制要记录在
日志文件中的信息的数量，主流的Web服务器产品在默认情况下启用了对基本信息的日志记录，
比如 Microsoft IIS 和 Apache。
表10-2列出了对于调查SQL注入攻击最有用的Web服务器日志属性。这些信息中包含了
关键信息，既包括合法访问请求信息，也包括恶意访问企图，比如那些在对SQL注入攻击作
出响应时生成的信息。在分析日志文件中的数据时，这些信息至关重要。
355
---
## Page 370
SQL注入攻击与防御（第2版）
表10-2对SQL注入攻击调查最有用的Web服务器日志属性
日志字段名
描
主要调查的值
Date
活动的日期
建立事件的时间基线，并在各种证据
中将事件关联起来
Time
活动的时间
建立事件的时间基线，并在各种证据
中将事件关联起来
Client-IP Adress (c-ip)
发起请求的客户端的IP地址
标识Web请求的源
Cs-UserName
发起请求的已授权的用户名
标识与流量关联的用户上下文（conmtexi）
Cs-method
请求的操作（action）
客户端试图执行的HTTP操作
Cs-uri-stem
请求目标（例如请求的 Web页面)
客户端请求访问的资源（页面、可执行
文件等）
Cs-uri-query
客户端请求的查询
标识客户端提交的恶意查询
Sc-status
客户端请求的状态码
标识处理客户端请求后产生的输出
（状态）
Cs(User-Agcnt)
客户端浏览器的版本
追踪特定客户端的请求，该客户端可
能使用了多个IP地址
Cs-bytes
客户端发送给服务器的字节
标识异常的流量传输
Sc-bytes
服务器发送给客户端的字节