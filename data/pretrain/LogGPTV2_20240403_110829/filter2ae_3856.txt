# linux内核漏洞调试：配置双机调试环境
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 选择kernel的版本
搜索含有dbgsym的内核版本  
`apt-cache search linux-image | grep dbgsym | grep 4.11`  
搜索特定source code的内核版本  
`apt-cache search linux-source`  
然后选择一个
## 安装内核
搜索要下载的linux内核版本  
`apt-cache search linux-image | grep linux-image | grep generic`  
安装内核  
`sudo apt-get install linux-image-4.10.0-19-generic`  
查看安装的内核版本  
`sudo dpkg --list | grep linux-image`  
重启，在grub之前，按住shift，选择我们的内核  
验证新内核启用  
`uname -sr`
## 安装符号文件
在终端输入下面的代码
    codename=$(lsb_release -c | awk  '{print $2}')
    sudo tee /etc/apt/sources.list.d/ddebs.list  source config
符号加载完成，bt查看当前栈帧，c运行内核。  
## 查看源码遇到的问题
可以看到，list本来应该显示具体的源码，但是这里只是打印出了它所在的文件，这是因为在这个路径下没有源码。  
所以说我们就建立这个路径，然后把源码放进去
然后dir设置好目录  
`dir /build/linux-hwe-edge-gyUj63/linux-hwe-edge-4.10.0`  
现在就可以查看源码了。  
## 单步调试
我从头开始说：
  * host  
target remote /dev/ttyS0  
按c继续运行target
  * target  
一开始停在下图这个地方，host按c之后，target继续运行进入系统  
然后输入`sudo su && echo g > "/proc/sysrq-trigger"`  
这时候target应该进入假死状态，其实就是完全动不了。  
这一步就是打开target的kgdb调试。
  * host  
这时候host那里不再是  
而是停下来了，可以下断了  
在你想要调试的函数下断点，然后按c，恢复target执行。
  * target  
这样就可以运行我们的poc了  
  * host  
回到host，此时应该已经停在断点了，然后按n可以单步调试。  
至此，内核调试的整个配置和调试方法都写完了。
## 参考链接
[ubuntu内核调试要点](http://advdbg.org/blogs/advdbg_system/search.aspx?q=%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95&p=1)
## 其他
内核调试的坑实在太深，一开始参考了muhe师傅的文章用gdb+qemu调，然后编译了kernel
4.x之后，编译不报错，但是调试过程简直了，gdb花式挂不上去，看网上说某些版本要改gdb源码重新编译gdb……放弃了放弃了。  
感谢教我搭建双机调试的师傅……  
内核还是很容易调飞的，有时候花式加载不出来。
另外如果下载符号文件太慢，可以参考我的这篇文章，在虚拟机里用ss代理。  