User: Please introduce common web attack methods and provide corresponding defense measures
Assistant: 1. SQL Injection Attack: An attacker exploits unfiltered or incorrectly filtered user input strings to access or tamper with a database. Defensive measures: use parameterized queries, restrict database user permissions, mount web application firewalls, etc. 2. Cross-site scripting attack (XSS): The attacker injects executable code into the web page to expose the user to the attack. Defensive measures: filter user input, use HTML encoding, use Content Security Policy (CSP), distrust third-party scripts, etc. 3. Cross-site request forgery (CSRF): An attacker impersonates a trusted user to send an unauthorized request to a web application. Defensive measures: use encrypted tokens, use tokens, disable third-party cookies, etc. 4. Clickjacking attack: Attackers superimpose malicious content on a transparent layer, tricking users into thinking they clicked a seemingly safe button, but were actually directed to a malicious site. Defensive measures: use X-Frame-Options, use visual interface cues, limit clickable areas, etc. 5. File inclusion attack: An attacker tricks an application into executing the code it needs through a file containing malicious code. Defensive measures: filter user input, validate user input, not use eval() function, etc. 6. HTTP hijacking attack: The attacker steals the victim's session cookie, allowing them to impersonate the victim to perform operations on the web application. Defensive measures: use HTTPS, use secure cookies, limit cookie access, etc.