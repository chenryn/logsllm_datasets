search results of the individual queries containing suspicious
suggestions, as reported by STA. This two-step analysis
produces a high accurate ﬁndings with a precision of 96.23%
and a recall of 95.63% (Section V).
V. EVALUATION
In our study, we ran our implementation of Sacabuche
to automatically analyze 114 millions suggestion and trigger
pairs and 1.6 million search result pages, on an R730xd server
with 40 Intel Xeon E5-2650 v3 2.3GHz, 25M Cache CPUs
and 256GB memories. Here we explain how the data were
collected and analyzed at large scale.
A. Data Collection and Validation
To evaluate Sacabuche, we collected a large number of
trigger-suggestion pairs. For this purpose, we ﬁrst utilized a set
of keywords to iteratively query the autocomplete services
provided by Google, Bing and Yahoo!. The trigger and
suggestion pairs discovered in this way were then analyzed by
STA to ﬁnd those suspicious. Such query terms were further
used to search the search engines and gather their result pages.
Altogether, we obtained 114 millions suggestion and trigger
pairs and 1.6 million result pages, as illustrated in Table I.
Trigger and suggestion collection. To collect these seed
triggers, we chose a set of “hot” phrases that represent popular
search interests. These trigger phrases are mainly trending
keywords with a large search volume, totally 1 million collected
from a keyword database [10], covering a broad search interests
(legal service, ﬁnancial service, home service and education).
However, they miss some content categories suggestion ma-
nipulators aim at, including gambling and pharmacy, etc. To
address this issue, we included in the dataset 386 gambling
keywords [3], [16] and 514 pharmaceutical keywords from
drug lists [5].
Using these “seed” keywords, we utilized the technique
mentioned in Section IV-B to iteratively discover suggestion
phrases through autocomplete APIs: for each given trigger,
its suggestion list is retrieved from the API and then serves
as new triggers to discover their suggestions; this process
continues until a search depth limit is met. In our research, we
set the search depth to 2 for the trending phrases, and to 3 for
gambling/pharmacy phrases, since the latter are known to be
usual targets of suggestion manipulation. Such autocomplete
collection was performed on daily basis for three months,
from 02/09/2017 to 05/09/2017. Altogether, we collected 114
millions unique suggestion and trigger pairs.
Validation. As mentioned earlier, a study on autocomplete
manipulation faces the challenge in getting ground truth, a
common problem for the research on blackhat SEO [38],
[58], [48], [41]. In line with these prior studies, we utilized
a few indicators to manually validate the ﬁndings made by
Sacabuche. Speciﬁcally, we ﬁrst randomly sampled those
ﬂagged query terms (trigger+suggestion) by grouping their
suggestions according to their individual categories and then
randomly picked out 100 from each group for an inspection.
Since the inspection cannot be done automatically, we had to
manually analyze each sample (including the search results of
a suggestion and related websites and content) to determine
its legitimacy, based upon whether some indicators are present
or not: (1) a manipulated suggestion must promote a target
whose own reputation cannot make itself stand out in the
search results of the trigger; (2) the manipulated suggestion
and its search results often conﬂict with the user’s original
search intention. For example, for the suggestion “strongvault
online backup free download”, we identiﬁed the website it
promotes “strongvault-online-backup.software.informer.com” in
the search result pages (since the website is highly ranked and
its title and search result descriptions are closely relevant to the
suggestion). We found that the website does not appear in the
search results of its trigger (“online backup free download”).
Also when we manually examined the website, we were
immediately redirected to a phishing website to download
suspicious code reported to be malware by VirusTotal[33].
Therefore we consider this suggestion to be manipulated.
B. Parameter Setting
In the experiments, the parameters of our prototype system
were set as follow:
• RBO decay constant (p). The decay constant is a parameter for
tunning the weights for different depth in rank-biased overlaps
function (Section IV-C). It was set according to the convention
of evaluating the RBO function: p = 0.9.
• Inverse of regularization strength (C). Regularization is a
parameter for reducing the over-ﬁtting to the labeled data when
we built the relation models using logistical regression. In our
implementation, we utilized a C = 10, which gave the best
performance among other C values from 0.3 to 15.
• The Scaling Factor α in Word Kernel. This factor is deﬁned
in the W K kernel to scale the word similarity value. In our
implementation, we adopted α = 5 as suggested by the original
authors to have good performance in multiple datasets.
• The Decay Factor λ in Sentence Kernel. λ is deﬁned in
the sentence kernel SK(sa, st) to penalize length of the given
phrases. Like α in the Word Kernel, we adopted λ = 1 as
recommended by the original work.
C. Results
Accuracy and coverage. We ﬁrst evaluated STA over 100
manipulated trigger suggestion pairs and 150 legitimate pairs,
and then examined SRA over the search result pages of 150
manipulated trigger suggestion pairs from the bad set (focusing
on top 20 result items), together with 300 legitimate pairs from
the good set and their search results, using a ﬁve-fold cross
validation. Overall, our prototype achieved a precision of a
precision of 96.23% and a recall of 95.63%.
Then, we ran Sacabuche on the unknown set with 114
millions suggestion and trigger pairs. Altogether, our STA
found 1 million pairs to be suspicious. These pairs were further
inspected by SRA, which reported 460K to be illegitimate.
Among all those detected, 5.6% of manipulated suggestions
include links to compromised or malicious websites in their
top 20 search results (conﬁrmed by CleanMX[17] and Google
Safebrowsing[22]). In this step, we manually inspected 1K
suggestion trigger pairs, and concluded that Sacabuche achieved
a precision of 95.4% on the unknown set.
9
TABLE III: Running time at different stages. Estimated
search query fetching time is 0.864s per query [23].
Sacabuche
average time
(ms/pair)
Sacabuche-C average time
(ms/pair)
Search Query
PF
STA
SRA
total
0.29
2.54
11.45
1.47
15.75
PF
-
Search Query
STA+SRA
total
0.29
-
1486.08
4.01
1490.38
As mentioned earlier, Sacabuche is characterized by a
two-step analysis (STA and then SRA), ﬁrst ﬁltering out
the terms unlikely to be manipulated and then querying the
search engine with the remaining terms to inspect the results.
This strategy is designed to minimize the overheads incurred
by the queries (reducing the number of search queries by a
factor of 110 on search engines), which is crucial for making
our system scalable. In the meantime, there is a concern
whether the performance beneﬁt comes with an impact on the
technique’s effectiveness, making it less accurate. To understand
the problem, we compared our implementation of Sacabuche
with an alternative solution, called Sacabuche-C, which queries
Google for every trigger +suggestion pair and then utilizes
the combined features of STA and SRA to detect manipulated
suggestions. This approach is fully tuned toward effectiveness,
completely ignoring the performance impact. In our research,
we also trained Sacabuche-C over the labeled datasets as
described in Section III and evaluated it using the ﬁve-fold
cross validation. This alternative approach has a precision of
97.68% and a recall of 95.59%, which is in line with the
original Sacabuche, indicating that our two-step design does
not affect effectiveness in detection.
Performance. To understand the performance of Sacabuche,
we measured the time it takes to process 100K suggestion
trigger pairs from the unknown set, on our R730xd server
using a single process. The breakdowns of the delays observed
at each stage (PF, STA, and SRA) are reported in Table III.
As we can see here, on average, 28.06 seconds were spent
on preprocessing those 100K suggestion trigger pairs. Also,
only 1,326 search queries were issued to Google. The results
demonstrate that Sacabuche scales well and can easily process a
large number of suggestion terms without generating too many
queries. Further we looked at the performance of Sacabuche-C
(Table III). As we can see, in the absence of the STA step
to ﬁrst ﬁlter out legitimate terms, the performance overhead
became overwhelming: introducing a delay at least 94 times
as large as our two-step approach, not to mention the pressure
on the search engine, which makes it impossible to scale.
VI. MEASUREMENT
On the 114 million trigger-suggestion pairs in the unknown
set, we performed a measurement study to understand how
today’s autocomplete services are being abused. Our study
reveals the pervasiveness of autocomplete manipulations, with
0.4% of the suggestions we collected found to present traits
typical of illicitly promoted autocompletes. More concerning
is that the threat continues to evolve, becoming even more
serious over time. We further looked into the ecosystem of
10
this emerging SEO business (see Figure 2), through purchasing
and interacting with the manipulation service providers. This
effort leads to the discovery of their strategies, including query
log pollution and utilization of compromised sites, and their
revenues, as high as $569K per week. Also we report our
analysis of an attack toolkit and a large-scale malvertising
campaign, involving 245 manipulated suggestions and 1,672
websites.
A. Landscape
Scope and magnitude. Our study reveals that manipulated
suggestion terms are pervasive across multiple search engines’
autocomplete services. Of 14 million trigger phrases on Google,
Bing and Yahoo!, we found that 256K were manipulated, which
relate to 383K manipulated suggestions. Figure 6(a) illustrates
the number of the abused suggestions we discovered on different
search engines in a single day. Among them, Google is the most
popular (0.48%) in our dataset, followed by Bing (0.37%) and
Yahoo! (0.2%). Also, in Google autocomplete service, 16.6% of
manipulated suggestions were ranked in the top 3 autocomplete
results, which is 14.2% in Bing and 29.1% in Yahoo!.
We further investigated the impacts of suggestion manipula-
tions on different search content. For this purpose, we grouped
all trigger keywords into 10 categories. Table IV presents the
number of manipulated suggestion terms under each category.
As we can see here, such abused suggestions cover a vast
range of topics, including home services, education, legal and
lending products, technology, gambling and others. Among
all these categories, Lending Products (4.13%) has the largest
portion of trigger phrases with manipulated suggestions, which
is followed by Home Services (2.47%) and Pharmaceutical
Services (2.09%). When we looked at polluted triggers in the
category of Lending Products, we found 536 “payday loan”
related polluted triggers with manipulated suggestions such
as “online payday loans get cash now - cashnow.com” and or
“payday loans cash advances www.quickquid.co.uk”. Note that
Google bans ads for payday loans to show in search results [12].
These payday loan websites were able to promote their lending
products in search engines through autocomplete manipulation.
Evolution and lifetime. To understand how this emerging
threat evolves over time, we collected 67 million distinct
autosuggestions from the Google Autocomplete API from
02/09/2017 to 05/09/2017. Among them, Sacabuche found
324,610 manipulated trigger-suggestion pairs on Google. Fig-
ure 6(b) illustrates the evolution of the attack, in terms of
the cumulative number of newly-appearing manipulated terms
observed during that period. We found that large amount of
manipulated suggestions are newly appeared, with 71.3% of
newly-appearing manipulated suggestions related to the newly-
appearing polluted triggers. Also, we observed that on average
1.9% of trigger phrases were polluted. This number jumped to
2.1% on 03/21/2017. In general, the trend exhibits a substantial
increase in the number of manipulated suggestions.
When looking into the lifetime of the manipulated sug-
gestion terms, we were surprised by the effectiveness and
stealthiness of suggestion manipulation campaigns: they have
been there for a long time, without being detected. Figure 6(c)
illustrates the distribution of the lifetime for those missuggestion
terms, which were estimated through continuously crawling
# of
manipulations
Lending Products
Home Services
Pharmaceutical
Technology
Auto Services
TABLE IV: Categories of the polluted triggers.
Vol-
ume
4.13%
2.47%
2.09%
0.91%
1.08%
0.81%
0.72%
0.68%
0.48%
0.55%
1580/34629
16712/413836
3876/93929
32696/762548
3916/92220
17628/423352
32986/773087
# of
terms
1389
17059
3715
29115
3477
17311
30465
413
6434
14064
454/10314
6554/153842
14084/348548
Trigger Category
Education
Shopping
Gambling
Travel
Legal Services
autocomplete of the seed keywords every day from 02/09/2017
to 05/09/2017. As we can see from the ﬁgure, 39.3% of the
manipulated suggestions stay on Google’s suggestion list for
more than 30 days, with the average lifetime of 34 days, which
is comparable with the lifetimes of legitimate suggestions, that
is, 63 days on average.
Manipulation content and pattern. Our research shows that
multiple triggers have been utilized to promote one suggestion.
We found that 20% of manipulated terms are related to more
than one trigger. For example, the missuggestion “free web
hosting and domain name registration services by doteasy.com”
is associated with 123 trigger phrases such as ”free web hosting
without domain name” and ”web hosting free domain name
registration”. Therefore, ﬁnding one manipulation suggestion
can help to detect other polluted triggers.
Another interesting observation is that different manipulated
suggestions tend to have similar grammatic structures, as shown
in Table V. For example, we found that 1,446 manipulated
suggestions are characterized by a pattern trigger phrase
relevant content+by+URL, such as “custom t shirt design
software and application tool by panaceatek.com”,“free web
hosting and domain name registration services by doteasy.com”