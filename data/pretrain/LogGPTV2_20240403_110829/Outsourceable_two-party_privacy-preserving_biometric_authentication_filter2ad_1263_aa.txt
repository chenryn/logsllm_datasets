title:Outsourceable two-party privacy-preserving biometric authentication
author:Hu Chun and
Yousef Elmehdwi and
Feng Li and
Prabir Bhattacharya and
Wei Jiang
Instant Privacy-Preserving Biometric
Authentication for Hamming Distance
Joohee Lee1, Dongwoo Kim1, Duhyeong Kim1, Yongsoo Song2, Junbum Shin3,
and Jung Hee Cheon1
1 Seoul National University, Republic of Korea
{skfro6360, dwkim606, doodoo1204, jhcheon}@snu.ac.kr
2 University of California, San Diego, USA
3 Software R&D Center, Samsung Electronics, South Korea
PI:EMAIL
PI:EMAIL
Abstract. In recent years, there has been enormous research attention
in privacy-preserving biometric authentication, which enables a user to
verify him or herself to a server without disclosing raw biometric informa-
tion. Since biometrics is irrevocable when exposed, it is very important
to protect its privacy. In IEEE TIFS 2018, Zhou and Ren proposed a
privacy-preserving user-centric biometric authentication scheme named
PassBio, where the end-users encrypt their own templates, and the au-
thentication server never sees the raw templates during the authentica-
tion phase. In their approach, it takes about 1 second to encrypt and
compare 2000-bit templates based on Hamming distance on a laptop.
However, this result is still far from practice because the size of tem-
plates used in commercialized products is much larger: according to NIST
IREX IX report of 2018 which analyzed 46 iris recognition algorithms,
size of their templates varies from 4,632-bit (579-byte) to 145,832-bit
(18,229-byte).
In this paper, we propose a new privacy-preserving user-centric biomet-
ric authentication (HDM-PPBA) based on Hamming distance, which
shows a big improvement in eﬃciency to the previous works. It is based
on our new single-key function-hiding inner product encryption, which
encrypts and computes the Hamming distance of 145,832-bit binary in
about 0.3 seconds on Intel Core i5 2.9GHz CPU. We show that it satis-
ﬁes simulation-based security under the hardness assumption of Learning
with Errors (LWE) problem. The storage requirements, bandwidth and
time complexity of HDM-PPBA depend linearly on the bit-length of bio-
metrics, and it is applicable to any large templates used in NIST IREX
IX report with high eﬃciency.
Keywords: privacy-preserving biometric authentication, inner prod-
uct encryption, learning with errors.
1
introduction
Biometrics is gaining popularity in the ﬁeld of authentication due to its usability
and high entropy. We can see at least two use cases: one is a user authentication
in a device, such as device unlock using ﬁngerprint, face, and/or iris, which are
commercialized in many smartphones. Another is to provide an access control of
private keys for a public-key based authentication, such as FIDO UAF (Universal
Authentication Framework) [1]. One of the most important things for biometric
authentication is privacy. Biometrics is unique and irrevocable in its permanent
nature so that its privacy issues are much more severe than those of passwords
or tokens [2]. Obviously, storing raw biometric template in a central database or
smart cards can be a risky choice, due to several threats in the literatures [3, 4].
For example, it happened that 5.6 million ﬁnger prints from U.S. government
were stolen by hackers in 2015 [5], and 1 billion user’s biometrics of Aadhaar
were reported to be hacked [6].
To protect privacy of biometrics, there has been a great amount of research
attention in privacy-preserving biometric authentication [7, 8, 9, 10, 11, 12, 13,
14, 13, 15]. We focus on one of typical authentication systems composed of two
phases; enrollment and authentication phases, which proceeds as follows [16].
In enrollment phase, the service provider stores an enrolled biometric template
sent from an end-user along with the end-user’s ID in a database. In authen-
tication phase, the service provider compares the stored template with a fresh
template sent by an end-user, and authenticates the user if two templates are
similar enough with respect to a certain measure of similarity. This approach is
called server-centric in [15] as it heavily relies on the server’s responsibility for
the biometric privacy, and end-users should trust the service provider for their
biometric data. Hence, if the service provider is malicious or compromised, there
is no guarantee for the biometric privacy. For this reason, Zhou and Ren [15]
proposed a user-centric biometric authentication system in which biometric tem-
plates are passed to the service provider only in encrypted forms. Their solution
shows some possibilities to get over the limitations of server-centric systems,
but the performance is not suﬃcient to be applied in practice when the size
of templates are large, since their solution suﬀers from the quadratic to triple
dependency of cost on the size of templates (it takes over 1 second to encrypt
and compute Hamming distance of 2000-bit templates on an ordinary laptop
without precomputations).
In fact, to build a user-centric or other secure authentication system, cryp-
tographic tools such as secure Multi-Party Computation (MPC), Homomorphic
Encryption (HE), Predicate Encryption, and Inner Product Encryption (IPE)
have been employed. For example, in a recent work of Gasti et al. [13] using
HE, it takes 3.29 seconds to compute Hamming distance (HD) of two 1600-bit
inputs.4 IPE with function privacy a.k.a. Function-Hiding Inner Product Encryp-
4 Measured on “Samsung Galaxy S4 smartphone 4-Core 1.9GHz CPU (Qualcomm
Snapdragon), 2GB RAM” (for client), and “Intel Xeon E5-2430L v2 6-Core 2.4GHz
CPU, 64GB RAM” (for server & cloud)
tion (FH-IPE) was noticed as a simple and secure primitive for secure biometric
authentication computing HD in [17] due to the close relationship of HD and in-
ner product in binary strings. Despite its conceptional simplicity and suitability
for biometric authentication, known constructions [18, 19, 17] are yet too slow
to be used in the real applications. In [17], their implementation results show
that it takes 1.6 seconds to compute HD between two 750-bit strings. Overall, as
far as we know, there is no known practical authentication system that provides
privacy of the large sized templates of hundreds or kilo bytes, in high eﬃciency.
In this paper, we propose a new user-centric privacy-preserving biometric
authentication system with Hamming distance (HD) as a measure for similarity,
i.e., a service provider authenticates a user if HD between a queried biometric
template and stored template is less than a threshold. Note that this is usual
in many cases, including ﬁngercode for ﬁngerprint [20] and all iris recognition
algorithms analyzed in [21].
The most outstanding feature of our system is that it can manage large size of
biometric template with high eﬃciency, due to the linear dependency of cost on
the size of biometric template without sacriﬁcing any privacy of biometric data.
We showed that our system takes only about 300ms to encrypt and compute HD
of 18KB binary templates on ordinary personal laptop. Since our system is simply
constructed with our new primitive named FFB-IPE for secure computation
of HD, it implies that usual ﬁngercode template (whose typical template size
varies from 8-byte to 640-byte according to [22]), or any iris template analyzed
in NIST IRES IX report of 2018 [21] (whose template size varies from 579-
byte (FotoNation 4) to 18,229-byte (Decature 5, Decature 6, TigerIT 5, TigerIT
6)) can be secured by our primitive without signiﬁcantly deteriorating their
performance in speed.
The novel primitive FFB-IPE proposed by this paper is a single key Function-
hiding Inner Product Encryption for Binary strings, in which a ciphertext of
IPE can be generated many times, while generation of secret key for a function
is allowed only once. It is a weaker primitive than a general FH-IPE, but we
remark that it can be used for privacy-preserving biometric authentication be-
cause the enrollment phase occurs only once, while the authentication phase held
many times. The security of our primitive is based on the hardness of Learning
with Errors (LWE) problem [23] on which security of various recent genuine
cryptographic primitives are based. Our idea is to use a one-time pad to achieve
function-hiding property when generating a secret key (for function) correspond-
ing to a vector x, and to generate an LWE instance for hiding a vector y as a
ciphertext corresponding to y. To allow a decryptor (or a service provider) to
calculate (cid:104)x, y(cid:105), we publish an additional value in our ciphertext, and prove
that it does not lessen the hardness of LWE: More precisely, the security of our
primitive is reduced to the hardness of a new variant of LWE problem, “Weak-
HintLWE” which is proved by us that a polynomial-time reduction from LWE
to Weak-HintLWE exists, hence to the hardness of the original LWE problem.
FFB-IPE can be easily exploited to construct biometric authentication sys-
tem as follows. In enrollment phase, an end-user registers its identity with a
biometric template secured by FFB-IPE to a service provider who stores it for
authentication phase. In authentication phase, end-user sends its identity with
fresh biometric template encrypted by FFB-IPE to the service provider who com-
putes HD of two templates with FFB-IPE and proceeds authentication based on
it. Note that the service provider can not disclose any information of biometric
templates other than the HD between them due to the security of FFB-IPE. For
more details, please refer to Section 5.
We implement our FFB-IPE and authentication system based on it on Intel
Core i5 CPU running at 2.9GHz processor with 8GB of memory, and the result-
ing performance is highly practical. With 18, 229-Byte biometrics under 128-bit
security, authentication phase takes only a single round, 304 milliseconds and
125 microseconds on end-user and service provider, respectively. The communi-
cation cost is 1.178MB. Our source code written in C++ is very simple, and is
disclosed on github (https://github.com/dwkim606/IPPBA).
Our contributions can be summarized as follows:
– We propose a new cryptographic primitive named FFB-IPE with standard
simulation-based security under the hardness of a new variant of LWE prob-
lem “Weak-HintLWE”. We then show the Weak-HintLWE problem is as
hard as the original LWE problem. It can be used to secure HD-based bio-
metric authentication system, and is highly eﬃcient in terms of asymptotic
computational cost which depends linearly on the size of biometric template.
– We propose HDM-PPBA built on FFB-IPE, a new practical and secure pri-
vacy preserving biometric authentication method, and implement it to show
its high eﬃciency: a running time for HD (or equivalently, inner product)
computation of 2,048-bit or 18KB binary strings are 3.12 milliseconds or 304
milliseconds, respectively on Intel Core i5 CPU at 2.9GHz with 8GB RAM.
This is several orders of magnitude faster than primitives used in previous
work.
– We show that our HDM-PPBA is secure against active attack which is anal-
ogous to the user-centric security model proposed in [15].
The outline of the paper is as follows. In Section 2, we present notations
and some backgrounds of the LWE problem. In Section 3, we describe our au-
thentication system and security model. In Section 4, we describe a primitive
named FFB-IPE, and prove its security under the hardness assumption of LWE.
In Section 5, we propose a PPBA system with FFB-IPE, and prove its security.
In Section 6, we present actual parameters and implementation results of our
authentication system. In Section 7, we present some other works related to ours.
In Section 8, we give a summary.
2 Preliminaries
2.1 Notations
R and Z denotes the set of real numbers and integers, respectively. Rn is the n-
dimensional vector space over R. Zq and Rq denote Z/qZ and R/qZ, respectively,
with representatives in the range (−q/2, q/2]. We denote vectors in bold lower
cases, and scalar elements in usual letters. (cid:104)·,·(cid:105) denotes the usual inner product
(dot product) in Rn. (cid:98)·(cid:99) denotes the largest integer which is not larger than the
input, and (cid:98)·(cid:101) denotes the nearest integer rounding upwards in case of a tie.
For a (ﬁnite) set X, we denote the uniform distribution over X by U (X). For a
distribution D, x ← D denotes sampling x following the distribution D. For the
simplicity, we write x ← U (X) as x ← X. For an integer n ≥ 1, Dn denotes the
product of i.i.d. random variables Di ∼ D.
2.2 Lattices and Gaussian distribution
A (full rank) n-dimensional lattice Λ ⊆ Rn is the set of all Z−linear combinations
of n linearly independent vectors (hence, R−basis) B = {b1, b2, . . . , bn} of Rn.
The n-dimensional Gaussian function ρσ,c with the width σ > 0 and center
c ∈ Rn is deﬁned as:
for x ∈ Rn,
ρσ,c(x) := exp(−π(cid:107)x − c(cid:107)2/σ2).
The (continuous spherical) Gaussian distribution Dc,σ is the distribution of
which the probabilistic density function is proportional to ρσ,c. When c = 0,
we omit c in the subscript, and add n on the superscript, i.e., Dn
σ .
2.3 The Learning with Errors Problem
In these days, there are a plenty of cryptosystems based on the LWE problem
introduced by Regev [23]. The LWE problem and its ring variant exploit math-
ematical reductions from the worst-case of the lattice problems. The problem
has been oﬀering various functionalities for the cryptosystems, exhibiting its
versatility.
For a secret vector s ∈ Zn
q × Rq by ALWE
q and e from χ, and outputting (a, b = (cid:104)a, s(cid:105) + e) ∈ Zn
q and an error distribution χ over Rq, denote the
LWE distribution over Zn
n,q,χ(s) obtained by choosing a vector a
q × Rq.
randomly from Zn
For a distribution D over Zn
q , the decision-LWE problem is to distinguish, given
n,q,χ(s) for a ﬁxed s ← D from the
arbitrary many samples, the distribution ALWE
q × Rq with non-negligible advantage. We denote
uniform distribution over Zn
the decision-LWE problem by LWEn,m,q,χ(D) where D is a distribution for the
secret vector, n is the dimension of the secret vector, q is the modulus, and
m is the number of samples. In this paper, we will consider multi-secret LWE
problem, which is the LWE problem with secret matrix other than a vector.
The multi-secret LWE distribution ALWE
q is obtained by, for a
secret matrix S ∈ Zn×k
q , and e from χk,
and outputting (a, b = Sta + e) ∈ Zn
q . For a distribution D(cid:48) over Zn×k
,
the multi-secret LWE problem is to distinguish between the uniform distribution
n,q,χ,k(S) for a ﬁxed S ← D(cid:48). As in the case of LWE, we
over Zn
n,m,q,χ(D(cid:48)), where k is
denote the decision multi-secret LWE problem by LWEk
n,q,χ,k(S) over Zn
q × Rk
q × Rk
q and ALWE
, choosing a vector a randomly from Zn
q
q × Rk
q
the number of secret vectors. In this paper, we consider χ = Dσ for some σ > 0.
In this case, we substitute χ by σ in the subscript of LWE. In this paper, the
term “LWE assumption” means the hardness assumption of LWE.
3 System Model and Security Considerations
3.1 Hamming Distance and Inner product of Binary strings
We start with a simple note on the Hamming distance (HD) of two binary strings.
We encode a k-bit binary string x as an k-dimensional vector x = (x1,··· , xk)
whose components are ±1 such that
(cid:40)
xi =
1
−1
if the i-th bit of x is 1,
otherwise.
Let x and y be k-bit binary strings, and x and y be their encodings, respectively.
Then, HD between two binary strings x and y is 1
product (cid:104)x, y(cid:105) of x and y represents HD between binary strings.
2 (k − (cid:104)x, y(cid:105)) so that an inner
In this paper, we assume that biometric templates are represented by bi-