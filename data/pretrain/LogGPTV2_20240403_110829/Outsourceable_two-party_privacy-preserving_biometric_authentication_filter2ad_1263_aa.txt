# Title: Outsourceable Two-Party Privacy-Preserving Biometric Authentication

## Authors:
- Hu Chun
- Yousef Elmehdwi
- Feng Li
- Prabir Bhattacharya
- Wei Jiang

## Abstract
In recent years, there has been significant research interest in privacy-preserving biometric authentication, which allows a user to verify their identity to a server without disclosing raw biometric information. Given the irrevocability of biometrics once exposed, protecting their privacy is crucial. In 2018, Zhou and Ren proposed PassBio, a privacy-preserving user-centric biometric authentication scheme where end-users encrypt their own templates, and the authentication server never sees the raw templates during the authentication phase. However, their approach, which takes about 1 second to encrypt and compare 2000-bit templates based on Hamming distance, is still impractical for larger template sizes, such as those used in commercial products (ranging from 4,632 bits to 145,832 bits).

In this paper, we introduce a new privacy-preserving user-centric biometric authentication system (HDM-PPBA) based on Hamming distance, which significantly improves efficiency over previous works. Our system leverages a novel single-key function-hiding inner product encryption (FFB-IPE), which can encrypt and compute the Hamming distance of 145,832-bit binary strings in about 0.3 seconds on an Intel Core i5 2.9GHz CPU. We demonstrate that our system satisfies simulation-based security under the hardness assumption of the Learning with Errors (LWE) problem. The storage requirements, bandwidth, and time complexity of HDM-PPBA scale linearly with the bit-length of the biometric data, making it highly efficient for large templates.

**Keywords:** privacy-preserving biometric authentication, inner product encryption, learning with errors.

## 1. Introduction
Biometric authentication is gaining popularity due to its usability and high entropy. Common use cases include device unlock (e.g., using fingerprints, face, or iris) and access control for private keys in public-key-based authentication systems like FIDO UAF. A critical aspect of biometric authentication is privacy, as biometrics are unique and irrevocable. Storing raw biometric templates in central databases or smart cards poses significant risks, as evidenced by several high-profile breaches, such as the theft of 5.6 million fingerprints from the U.S. government in 2015 and the reported hacking of 1 billion users' biometrics in the Aadhaar database.

To address these privacy concerns, extensive research has been conducted on privacy-preserving biometric authentication. One common approach involves two phases: enrollment and authentication. During the enrollment phase, the service provider stores an encrypted biometric template sent by the user. In the authentication phase, the service provider compares the stored template with a fresh template sent by the user. This server-centric approach relies heavily on the server's responsibility for biometric privacy, which can be problematic if the server is compromised.

Zhou and Ren [15] proposed a user-centric biometric authentication system where biometric templates are passed to the service provider only in encrypted forms. While their solution offers some advantages, it suffers from performance issues, especially for large template sizes, taking over 1 second to encrypt and compute the Hamming distance of 2000-bit templates on an ordinary laptop.

Cryptographic tools such as secure Multi-Party Computation (MPC), Homomorphic Encryption (HE), Predicate Encryption, and Inner Product Encryption (IPE) have been employed to build more secure authentication systems. For example, Gasti et al. [13] used HE to compute the Hamming distance of two 1600-bit inputs in 3.29 seconds. Function-Hiding Inner Product Encryption (FH-IPE) has also been explored, but known constructions are too slow for practical use.

In this paper, we propose a new user-centric privacy-preserving biometric authentication system (HDM-PPBA) that uses Hamming distance as a measure of similarity. Our system can efficiently manage large biometric templates, with a running time of about 300ms for 18KB binary templates on an ordinary personal laptop. The core of our system is a new primitive called FFB-IPE, which provides secure computation of Hamming distance with linear computational cost. We show that our system is secure against active attacks and provide implementation details and performance results.

## 2. Preliminaries
### 2.1 Notations
- \( \mathbb{R} \) and \( \mathbb{Z} \) denote the set of real numbers and integers, respectively.
- \( \mathbb{R}^n \) is the n-dimensional vector space over \( \mathbb{R} \).
- \( \mathbb{Z}_q \) and \( \mathbb{R}_q \) denote \( \mathbb{Z}/q\mathbb{Z} \) and \( \mathbb{R}/q\mathbb{Z} \), respectively, with representatives in the range \((-q/2, q/2]\).
- Vectors are denoted in bold lowercase, and scalar elements in regular letters.
- \( \langle \cdot, \cdot \rangle \) denotes the usual inner product in \( \mathbb{R}^n \).
- \( \lfloor \cdot \rfloor \) and \( \lceil \cdot \rceil \) denote the floor and ceiling functions, respectively.
- For a finite set \( X \), \( U(X) \) denotes the uniform distribution over \( X \).
- For a distribution \( D \), \( x \leftarrow D \) denotes sampling \( x \) from \( D \).
- For an integer \( n \geq 1 \), \( D^n \) denotes the product of i.i.d. random variables \( D_i \sim D \).

### 2.2 Lattices and Gaussian Distribution
A full-rank n-dimensional lattice \( \Lambda \subseteq \mathbb{R}^n \) is the set of all \( \mathbb{Z} \)-linear combinations of \( n \) linearly independent vectors \( B = \{b_1, b_2, \ldots, b_n\} \) in \( \mathbb{R}^n \).

The n-dimensional Gaussian function \( \rho_{\sigma, c} \) with width \( \sigma > 0 \) and center \( c \in \mathbb{R}^n \) is defined as:
\[ \rho_{\sigma, c}(x) := \exp\left(-\pi \frac{\|x - c\|^2}{\sigma^2}\right) \]
for \( x \in \mathbb{R}^n \).

The (continuous spherical) Gaussian distribution \( D_{c, \sigma} \) has a probability density function proportional to \( \rho_{\sigma, c} \). When \( c = 0 \), we write \( D_{\sigma} \) and add \( n \) in the superscript, i.e., \( D^n_{\sigma} \).

### 2.3 The Learning with Errors Problem
The Learning with Errors (LWE) problem, introduced by Regev [23], is a fundamental problem in cryptography. It provides mathematical reductions from worst-case lattice problems and has been used to construct various cryptosystems.

For a secret vector \( s \in \mathbb{Z}_q^n \) and an error distribution \( \chi \) over \( \mathbb{R}_q \), the LWE distribution \( A_{\text{LWE}}^{n, q, \chi}(s) \) is obtained by choosing a vector \( a \) randomly from \( \mathbb{Z}_q^n \) and outputting \( (a, b = \langle a, s \rangle + e) \in \mathbb{Z}_q^n \times \mathbb{R}_q \).

The decision-LWE problem is to distinguish between the LWE distribution and the uniform distribution over \( \mathbb{Z}_q^n \times \mathbb{R}_q \) with non-negligible advantage. We denote the decision-LWE problem by \( \text{LWE}_{n, m, q, \chi}(D) \), where \( D \) is a distribution for the secret vector, \( n \) is the dimension of the secret vector, \( q \) is the modulus, and \( m \) is the number of samples.

We also consider the multi-secret LWE problem, which involves a secret matrix \( S \in \mathbb{Z}_q^{n \times k} \) and outputs \( (a, b = Sa + e) \in \mathbb{Z}_q^n \times \mathbb{R}_q^k \). The decision multi-secret LWE problem is denoted by \( \text{LWE}_{k, n, m, q, \chi}(D') \), where \( D' \) is a distribution over \( \mathbb{Z}_q^{n \times k} \).

In this paper, we consider \( \chi = D_{\sigma} \) for some \( \sigma > 0 \). In this case, we substitute \( \chi \) by \( \sigma \) in the subscript of LWE. The term "LWE assumption" refers to the hardness assumption of the LWE problem.

## 3. System Model and Security Considerations
### 3.1 Hamming Distance and Inner Product of Binary Strings
The Hamming distance (HD) between two binary strings \( x \) and \( y \) of length \( k \) is the number of positions at which the corresponding bits are different. We encode a \( k \)-bit binary string \( x \) as a \( k \)-dimensional vector \( \mathbf{x} = (x_1, \ldots, x_k) \) where:
\[ x_i = \begin{cases} 
1 & \text{if the } i\text{-th bit of } x \text{ is 1,} \\
-1 & \text{otherwise.}
\end{cases} \]

Let \( \mathbf{x} \) and \( \mathbf{y} \) be the encodings of \( k \)-bit binary strings \( x \) and \( y \), respectively. Then, the HD between \( x \) and \( y \) is given by:
\[ \text{HD}(x, y) = \frac{k - \langle \mathbf{x}, \mathbf{y} \rangle}{2} \]
where \( \langle \mathbf{x}, \mathbf{y} \rangle \) is the inner product of \( \mathbf{x} \) and \( \mathbf{y} \).

In this paper, we assume that biometric templates are represented by binary strings, and we use the Hamming distance as a measure of similarity.