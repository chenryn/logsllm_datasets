per preﬁx, we repeated this process, but now poisoning ASes
by degree from high-low in the path example shown earlier.
Again, we wait 40 minutes before collecting all updates and
additionally implicitly withdraw each poisoned path after each
iteration. We then compute the normalized percent of ASes
propagating the poisoned paths. This measures the fraction
of ASes advertising speciﬁc poisoned paths versus those who
advertised the non-poisoned baseline path from the equivalent
poisoning AS and poisoned preﬁx. If an AS propagated the
non-poisoned path from our AS, and they also propagated a
poisoned path, then the normalized percent is higher. In other
words, this metric illustrates the percentage of ASes from our
random sample that do not employ poison ﬁltering.
3BGP convergence happens nearly instantly with poisoned routes, see
LIFEGUARD [23].
11
B. Filtering of Long Poisoned Paths
Our next experiment investigates the maximum amount
of poisoned ASes a poisoning AS can spread throughout
the Internet via successively longer path lengths. In existing
security systems, Nyx [52] advertises long poisoned paths to
avoid dragging along non-critical trafﬁc when steering remote
ASes around congestion. RAD [50] and censorship tools using
BGP poisoning must rely on many poisons to steer trafﬁc
around decoy routers. AS relationship and policy inference
methods could use our path steering algorithm from Section V
coupled with longer poisoned paths to explore broader AS-to-
AS business relationships [1]. Congestion discovery systems
could also beneﬁt from greater topological visibility.
To that end, we have conducted what we believe is the
most exhaustive measurement of maximum path length on the
Internet. This experiment provides valuable information on
whether common models of routing hold in practice. Though
the BGP speciﬁcation [44] does not place an upper bound on
path length, the BGP best practices RFC [12] recommends
that excessively long paths should be ﬁltered. Furthermore,
statistics from the APNIC routing registry [2] show most
maximum path lengths observed well-under what should be
possible. Many Cisco forum posts also hint at operators that
assume all paths are ﬁltered over 50 in length. Fortunately,
we were able to conduct our experiment from the university
AS with permission over two large ISP transit links, without
the path length restrictions of PEERING. The university AS’s
providers have the explicit policy of ﬁltering BGP advertise-
ments longer than 255 hops. Therefore, even though paths
may extend beyond this in some router’s policies, we can only
observe the propagation of path lengths up to 255.
1) Experimental Design: Similar to the poison-ﬁltering
approach in Section VI, we ﬁrst announce a normal baseline
path with no poisons. After collecting the baseline number
of ASes advertising the normal path and withdrawing the
baseline advertisement, we then iteratively poison paths of
increasing lengths in intervals of 40 minutes, from 1 poisoned
AS prepended to the path to 135 poisons by one at a time.
Once we reached 135 poisons, we shifted to poisoning in
successive iterations of 5, going from 135 to 500. After
every iteration of path length increase, we implicitly withdrew
the prior advertisement. During propagation throughout the
Internet, we collect all BGP updates from collectors managed
by BGPStream [42], which we again use to measure the nor-
malized percentage of ASes propagating the poisoned paths. In
practice, the path would look similar to the path in Equation 2,
where ASI, ASJ, and ASK are normal ASes forwarding the
preﬁx; ASOrig is the poisoning AS; and ASP1 through ASPn
are the prepended poisons.
(2)
ASI , ASJ , ASK, ASOrig, ASP1 , ASP2, ASP3 , ..., ASPn , ASOrig
We conducted this experiment with two sets of ASes to
prepend: 1) randomly sampled, in-use ASes from the CAIDA
topology to most closely mirror a poisoned path needed
for return path steering, and 2) using the university AS as
a self-prepend. We ensured part of the in-use AS sample
included both ASes on the edge of the topology (those with
no customers), as well as transit ASes small and large (those
with more than 5 customers) according to prior classiﬁcations
of AS types by UCLA [41].
Fig. 7: Filtering of AS paths increases as the poisoned AS increases
in degree, an approximation for its inﬂuence on the Internet
2) Results and Discussion: The results of this measurement
are shown in Figure 7. We have aggregated the normalized
propagation percentages by AS degree into averages in bins
of AS degrees from 0 to 99, 100 - 199,
..., 2300 - 2399.
We observe that for AS degrees of less than 2,500, the ASes
accepting and propagating the poisoned ASes is roughly the
same, with between 70% to 80% of ASes continuing to
propagate poisons. We did not show the most connected ASes
in Figure 7 due to their outlier status; instead, the top 10 ASes
by degree are shown with their propagation data and other
relevant AS metadata in Table III. Notably, the largest degree
AS is Hurricane Electric, a nearly Tier-1 AS. at 7,064 degree.
Hurricane Electric has roughly 20% propagation compared to
ASes with under 2,500 customers at roughly 70% propagation.
In fact, the extent to which ASes refuse to propagate high
degree poisons is conﬁned to a very small sample of high-
degree ASes. Only 4 have a propagation percentage of less
than 30%, with AS degrees of 2,538, 4,980, 5,352, and 7,064.
First, systems such as Nyx [52] and RAD [50] assume all
ASes do not conduct poison ﬁltering. We present evidence that
signiﬁcant parts of the Internet do not allow poisoned routes
to propagate, especially for the small amount of ASes with
degrees greater than 1,000. This ﬁnding exempliﬁes the reason
why systems such as Nyx do not ﬁnd the nearly limitless
available paths in practice as what is shown via CAIDA data.
To that end, future systems employing BGP poisoning for
defensive or offensive purposes should not assume all available
paths can be steered onto.
For decoy-routing systems, decoy routers should be placed
on AS paths that because of ﬁltering, the adversary can not
easily steer said path around the decoy. In scenarios where
decoy placement leverages these strategies, the censors may
face a losing scenario. Also shown in Table III, the number
of customers an AS has seems to indicate the extent of
poison ﬁltering. For example, despite AS 24482 (an ISP in
Singapore) having the 4th highest level of AS connectivity, it
only provides direct customer transit to 24 ASes. Accordingly,
this Singaporean AS has a much higher propagation percentage
relative to ASes with similar degree but more customers. In
the case of AS 24482, the non-transit ASes pumping up the
AS degree may be peers. Clearly, while paths with larger
ASes seen in poisoned paths may be ﬁltered more often, it
is not always the case based on AS 24482. With over 3000
ASes reported as connected by CAIDA [61], the amount of
propagation was still 96% of a normal non-poisoned path.
12
TABLE III: Top 10 ASes by Degree and their normalized percent of ASes propagating paths with these ASes poisoned
Rank by Degree
ASN and Name
Degree
Number of Customers
Registered Country by ASN
Normalized Propagation Percentage
1
2
3
4
5
6
7
8
9
10
6939 - Hurricane Electric
174 - Cogent
3356 - Level 3
24482 - SG.GS
3549 - Level 3 GBLX
7018 - AT&T
58511 - Anycast
49605 - IVO
8492 - OBIT Ltd.
8220 - COLT Tech. Grp.
7064
5352
4980
3382
2538
2373
2351
2193
2153
2143
1202
5272
4898
24
2446
2330
13
11
46
716
United States
United States
United States
Singapore
Unites States
United States
Australia
Italy
Russia
United Kingdom
11.9%
11.6%
11.6%
96.1%
11.6%
0.05%
60.1%
66.7%
71.4%
78.2%
advertisement of successively greater length. First, we build
a directed acyclic graph D of all paths p observed on paths
from the university AS to collectors. The nodes of D are ASes
appearing on paths; edges represent links between them. Next,
for each advertisement i of successively greater path length,
we build a set of ASes Ai composed of all ASes appearing
on our advertised paths that reached route collectors. Finally,
we remove all a ∈ Ai from a copy of D, creating Di. For
each weakly connected component remaining in Di, we learn
that 1) at minimum, the roots of each component ﬁltered the
advertisement, and 2) at maximum, all AS nodes a ∈ Di
ﬁltered it. Using this method, we iteratively build maximum
and minimum inferred ﬁltering AS sets for every path length
in our experiment.
2) Results and Discussion: Our results are grouped using
the aforementioned, widely-adopted AS classiﬁcation scheme
presented in [41]. ASes are divided into Tier-1 (can transit
trafﬁc to all ASes without compensation and form a clique),
Large ISPs with over 50 customers, Small ISPs with between
5 and 50 customers, and Stub ASes, those with less than 5
customers. Figure 9a displays our results for Tier-1s and Large
ISPs; Figure 9b gives the same information for Small ISPs and
Stub ASes. Naturally, the ephemeral structure of the Internet
topology introduces noise into our results. Additionally, it is
more difﬁcult to draw conclusions about Tier-1 and Large
ISP ﬁltering behavior using our method, as the minimum and
maximum inferences diverge signiﬁcantly. This is likely due
to advertisements being ﬁltered before reaching these ASes
as they propagate outward from the university AS. So, these
ASes are rarely the root of the weakly connected components
used to infer minimum ﬁltering, and we conjecture that the
true ﬁltering rate for these classes is closer to the maximum
inference.
Overall, the results indicate that Tier-1’s and Large ISPs
ﬁlter long paths more aggressively than Small ISPs and Stub
ASes, and that AS ﬁltering policies are highly fragmented.
In a feasibility study on Nyx/RAC by Tran et al. [60], the
authors utilize a distribution of observed path lengths from
passive measurement to hypothesize about AS ﬁltering rates.
In short, they suggest that some ﬁltering occurs on paths of
length 30 - 75, no increase in ﬁltering occurs between 75 and
255, and paths of length 255 or greater are almost universally
ﬁltered. We were limited by university AS provider policy from
experimenting with paths over length 255, but their ﬁndings
align well with our own for Small ISPs and Stub ASes. For the
larger ASes, our experiments indicate that the rate of ﬁltering
does in fact increase after a path length of 75. Additionally,
our results capture the intuition that larger, more inﬂuential
ASes should ﬁlter often. We ﬁnd that of all tiers of ASes, the
Fig. 8: With paths up to 250 in length, we found over 80% of ASes
treated 250-length paths the same as normal paths (Regression Fit of
Order 2)
2) Results and Discussion: Displayed in Figure 8 for both
the randomly sampled ASes from CAIDA and for the self-
prepended university AS, we present a rigorously evaluated
upper bound on the max path length of the Internet of 251. This
path propagated to over 99% of the Internet when including
customer cones of AS’s forwarding the path. This included
highly connected ASes such as Level 3 and Cogent. Figure 8
matches an operator’s intuition that as paths grow longer, they
are less accepted throughout the Internet, though still roughly
75% of BGP collectors observed the longest path lengths
detected.
With this information, systems such as Nyx [52] now have
an upper bound for the amount of poisoned ASes usable for
path lining, which was estimated with passive, not active,
measurements in Tran & Kang et al.’s re-routing feasibility
study [60]. Since Smith et al. did not limit the poisons, our
reproduction of Nyx earlier incorporates this poison limit,
ﬁnding less success overall when steering return paths. When
re-routing around localized failures, as Katz-Bassett et al. [23]
did between Amazon AWS instances in LIFEGUARD, this
maximum length limits the amount of path steering in practice
that can be achieved. There are implications for RAD [50]
and other decoy routing adversaries as well: the more poisons
possible, the harder Waterfall [36], [7], [35] must work to place
decoys.
C. Which ASes Filter Long Paths
1) Filtering Inference Algorithm: Here we investigate
which ASes are ﬁltering paths based on data collected in
the prior experiment. We develop a new inference algorithm
to discover which ASes ﬁlter long poisoned paths based on
a comparison of paths received by route collectors at each
13
(a) Tier-1 and Large ISPs
(b) Small ISPs and Stub ASes
(c) MANRS vs non-MANRS ASes
Fig. 9: Minimum and maximum inferred ﬁltering for ASes classiﬁed by tier and MANRS membership, each with an regression ﬁt
Tier 1 ASes ﬁlter most, while larger ISPs ﬁlter less but close
behind Tier 1 ASes shown in Figure 9a. Finally, small ISPs
and stub ASes ﬁlter very little as shown by Figure 9b.
D. Case Study: Filtering by an ISP-driven Working Group
MANRS [30], Mutually Agreed Norms for Routing Se-
curity,
is a global Internet routing security initiative that
develops and publishes best practices for network operators.
Path ﬁltering is one area of concern for MANRS, and they
publish standards for following RPKI and other BGP security
mechanisms that member ASes are expected to implement.
The 120+ MANRS ASes represent a distinct set of ASes that
intuitively should be most likely to ﬁlter BGP advertisements
similar to poisoned updates. They include Cogent, Charter
Communications, CenturyLink, and Google.
In Figure 9c, we display the results of the same ﬁltering
inference algorithm used in the previous section, with results
divided by MANRS and non-MANRS ASes. We observe a
signiﬁcant deviation in the inferred ﬁltering range between
MANRS and non-MANRS ASes, suggesting that MANRS
operators may implement tighter ﬁltering policies. This key
result
indicates that an ISP’s participation in an Internet
consortium such as MANRS may actually correspond with
stricter implementations by the operators responsible for day-