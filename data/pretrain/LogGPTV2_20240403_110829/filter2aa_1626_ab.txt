configuring the Motorola Razr Maxx TI wireless chip to 
operate in ad-hoc mode using the tiwlan drivers. Motorola has 
made pieces of the kernel available to the open source 
community so it may be possible to compile Wireless 
Extensions support into the Motorola Razr Maxx kernel. 
D. Gateway 
There are many reasons why devices in the ad-hoc network 
may need to reach out to devices on managed network. For 
example, many useful apps are based on the client-server 
model and require access to a server hosted on a managed 
network. In order to “bridge” the ad-hoc network and a 
managed network a gateway device must be appointed. The 
gateway device must have one network adapter configured to 
operate in ad-hoc mode and another network adapter 
configured to operate in managed mode. Then packets can be 
forwarded across those two adapters. 
Specifically, we use the ASUS Eee Pad Transformer Prime 
for our primary gateway device. By compiling rtl8187 USB 
driver support into the kernel we are able to use an ALFA 
AWUS036H wireless USB adapter as a second network 
interface. We configure the Eee Pad’s internal wireless adapter 
to operate in managed mode and the ALFA to operate in ad-
hoc mode. We then use the iptables command line utility to 
allow the Eee Pad to masquerade as devices on the ad-hoc 
network and forward packets across the adapters. Thus, the 
Eee Pad effectively performs Network Address Translation 
between the ad-hoc subnet and the managed network.  
We leverage the behavior of the Settings app and Android 
framework for configuring the Eee Pad’s internal wireless 
adapter to operate in managed mode. The user can connect the 
device to an access point and the device will remain connected 
to the access point regardless if the ALFA is enabled to 
operate in ad-hoc mode or not. On the other hand, a non-
gateway device will disconnect from a managed network when 
its internal wireless adapter is configured to operate in ad-hoc 
mode. 
Additionally, we have used both the Samsung Galaxy S II 
Epic Touch 4G and Samsung Galaxy Nexus as gateway 
devices by forwarding packets between their internal wireless 
adapter configured to operate in ad-hoc mode and their 
internal 3G/4G adapter. This allows every other device in the 
ad-hoc network to access the Internet through the cell service 
of those devices. Note that many cell service providers do not 
condone “tethering” of this nature because many cell phone 
users use it as a way to share one service plan across multiple 
devices instead of paying for individual service plans. 
Devices in the ad-hoc network can successfully browse the 
Internet through the gateway device; however, we have 
observed that on most devices the Browser app will prompt 
the user with a dialog stating that no network is available, 
although after dismissing the dialog the webpage will load 
without a problem. This is evidence that our approach to 
setting up the ad-hoc network works at a lower level then the 
Android framework, which does not recognize the device has 
a valid Internet connection because the wireless chip is not 
operating in managed mode. 
III. 
FIELD TEST RESULTS 
A. Effiective Range 
The initial field tests of the SPAN framework utilized both 
the OLSRd protocol and a simple implementation of the 
Dijkstra algorithm for packet routing and the tests were 
preformed using an array of currently supported devices.  It 
was observed that each MANET node utilizing a Broadcom 
BCM4329 Wi-Fi chipset could be a maximal distance of 106 
feet (32 meters) from its closest neighbor and still maintain 
MANET connectivity.  For devices harnessing the Broadcom 
BCM4330 chipset, the maximal distance was observed to be 98 
feet (29 meters). 
B. Upper Limits of Simple Multi-Hop Routing 
The initial testing did not reveal an upper limit on multi-hop 
communications, allowing a simple chat conversation to 
traverse a 5 hop network with minimal delay and throughput 
problems.  The SPAN team intends to explore networks of 10 
to 25 node traversals later this year.  The team expects to 
discover a maximal limit to multi-hop routing of VoIP data in 
the range of 10-12 node traversals. 
C. Node Density Limitations 
Given the channel-based nature of the 802.11 
specifications, the SPAN team expects to discover an upper 
limit of devices that can exist in the same peer-to-peer 
MANET enclave.  This limit was not reached during our 
initial test of 30 devices.  The team expects to solve the 
maximum channel utilization limit by creating clusters or 
enclaves of proximal devices to allow for a scalable network 
beyond the typical bounds of the specification. 
IV. 
ROUTING 
The single most challenging aspect of implementing a 
robust and scalable mesh network is the design of the routing 
protocol.  Without centralized servers and standard networking 
infrastructure to generate optimal paths across the network, the 
nodes of the mesh themselves must determine how to deliver 
the data in an efficient manner.  The field thus far can be 
subdivided into two distinct approaches: Proactive and 
Reactive.  Though neither approach can change raw 
bandwidth both solutions can have a large impact on network 
throughput. 
A. Proactive Routing 
The proactive approach (and its exemplar OLSRd) 
attempts to mimic standard networking paradigms to 
predetermine routes and store them prior to use or need.  In 
essence, the algorithm floods the mesh network with hello 
messages in order to determine topology and routing data.  
The routes are then stored per device for a specified time and 
recreated once the temporal bound has expired.  While this 
approach ensures the network is responsive to packet transfers 
at runtime, functionality is provided with a high cost.  The 
proactive paradigm can easily saturate the mesh network with 
route discovery packets, building possibly unused and 
unneeded routes at the cost of actual data transfer.  In addition, 
the highly mobile nature of mesh networks can alter the 
physical topology prior to the expiration of the stored routes.  
This issue forces the protocol to generate new routes 
dynamically after the stored paths have been discarded. 
B. Reactive Routing 
Reactive protocols await an actual need for a network 
traversal path prior to exploring the mesh for a route.  This 
ensures the network remains uncluttered with possibly 
unnecessary hello packets.  The inherent downside to this 
approach is a sluggish behavior visible to the end user when 
trying to utilize any new node on the network.  Given the lack 
of exploratory traffic, pure reactive networks also have known 
issues with determining exactly what nodes are available for 
potential use.  This problem becomes apparent when you 
consider issues with DHCP or other network identification 
mechanisms. 
C. New Routing Paradigms 
B.A.T.M.A.N. (The Better Approach To Mobile Adhoc 
Networking) is a routing protocol currently under 
development by the Freifunk Community and is intended to 
replace OLSRd.  B.A.T.M.A.N.'s main differentiating design 
aspect is the concept of route knowledge decentralization.  The 
paradigm attempts to ensure no single node needlessly collects 
all the routing data in the network. Instead each individual 
node only saves information about the “direction” it received 
data from prior to packet forwarding. As the data gets passed 
on from node to node around the mesh, packets get individual 
dynamically created routes based on current network topology. 
In essence, a network of collective routing intelligence is 
created and dynamically harnessed at runtime. 
D. Sensory Intelligence 
In future versions of the SPAN framework, the team will 
provide reference implementations for routing protocols based 
on smart phone sensor data.  The team expects vast 
improvements in mesh network stability and speed when 
harnessing location, speed and vector of movement 
information into the packet headers of exploratory packets.  
Nodes will be cognizant of neighbor node mobility when 
selecting potential routes. 
Aside from movement-based information, the SPAN team 
will explore battery and power consumption leveling across 
the mesh in the near future.  In this paradigm, the routing 
protocol will prioritize next hop nodes based on available 
battery level and charging state of the device. 
E. Self Evolving Algorithms 
During the next 12 months, the SPAN team will explore an 
automated adaptive routing protocol.  The protocol will 
preform self-analysis during runtime and adjust the routing 
fingerprint based on current use of the network.  Simply put, 
the protocol will attempt to automatically adjust battery 
leveling, network throughput and bandwidth based on how the 
network itself is being utilized by the participants at any given 
time.  An optimal solution for a sparsely populated network 
attempting to pass VoIP packets will be drastically different 
than the solution for a highly dense, large network passing 
simple text data 
V. 
SECURITY 
While far from a complete solution, the SPAN team has 
generated a basic design for mesh network security.  Each 
node on the mesh will have a shared key for initial network 
exploration.  This key will be either prepackaged into the 
mesh client or transferred to the device by Bluetooth / NFC 
when joining the network.  Once the node has joined the 
network, it will share its own public key with any node 
requesting communication. Once keys have been transferred, 
the network will harness the standard encryption scheme for 
secure client /server based communications.  The network will 
also support the expected collection of VPN tunnels, WEP & 
WPA. 
Apart from data protection, the SPAN team is cognizant of 
DDOS issues with the OLSRd protocol. Given the protocol 
itself can saturate the network with hello packets during 
normal operation, it is not beyond comprehension that a 
malicious attack could do the same.  Our modifications to the 
OLSRd protocol should, at a minimum, limit such 
disturbances to a localized enclave of the mesh. 
VI. 
CONCLUSIONS AND FUTURE WORK 
The SPAN team expects to continue refining the 
framework and developing routing protocols in the near term.  
We expect to harden our security posture both for network and 
data protection. 
Please contact the SPAN team if you have any questions, 
comments or concerns.  Also, please contact us if you use the 
framework and have interesting stories to tell.