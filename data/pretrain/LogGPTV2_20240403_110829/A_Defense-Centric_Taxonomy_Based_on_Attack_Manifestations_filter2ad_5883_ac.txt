Normal Sequence A A A B B B
Dormant Sequence A A A B (missing 2 Bs)
Normal Sequence A A A B B B
No Anomaly
A A A B B B (no difference)
Table 4: Sequence types and examples.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:00 UTC from IEEE Xplore.  Restrictions apply. 
The hypothesis of this study is that the class to which an
attack belongs ought to predict whether or not a particular
intrusion-detection system will detect a given attack. The
information upon which this prediction is based is the pres-
ence or absence of the features listed above. The features
themselves were used as taxonomic classes.
The features are not mutually exclusive; for example, it
is possible for a manifestation to contain both foreign sym-
bols and minimal foreign sequences. There is a precedence,
however, among the taxonomic classes which reﬂects the
difﬁculty of detection. A foreign symbol takes precedence
over a minimal foreign sequence, which is harder to de-
tect. Likewise, a minimal foreign sequence takes prece-
dence over a dormant sequence; and a dormant sequence
takes precedence over a sequence containing no anomalies.
To remove any ambiguity in the class to which an attack
belongs, a decision procedure, shown in Table 5 , was con-
structed for uniquely identifying the class of any attack.
Class 1 (FS): If an attack’s manifestation contains
one or more foreign symbols, classify the manifes-
tation as foreign symbol.
Class 2 (MFS): If an attack’s manifestation con-
tains no foreign symbols, but does contain one or
more minimal foreign sequences, classify the man-
ifestation as a minimal foreign sequence.
Class 3 (DS): If an attack’s manifestation contains
no foreign symbols or sequences but does contain
a dormant sequence, classify the manifestation as a
dormant sequence.
Class 4 (MNA): If an attack’s manifestation con-
tains no foreign symbols or sequences, and no dor-
mant sequences, the manifestation is indistinguish-
able from the normal record; classify the manifes-
tation as not anomalous.
Table 5: Procedure for determining class of attack.
For each of the twenty-ﬁve attacks in this study, the fea-
tures of each attack were identiﬁed. In Table 6, each of the
twenty-ﬁve attacks is listed, one per row. The four features
are listed in the ﬁrst four columns of the table. The presence
or absence of each of the four features is denoted by a mark
in the appropriate column. Using the decision procedure,
the class to which each of the twenty-ﬁve attacks belongs is
determined. It is listed in the ﬁfth column of Table 6.
5.7 Check that taxonomic rules are obeyed
The new defense-centric taxonomy should meet the cri-
teria established in Section 4 for acceptable taxonomies.
Brieﬂy, these criteria are (1) mutual exclusivity, (2) exhaus-
tivity, and (3) replicability. Both theoretical and empirical
evidence were collected to conﬁrm that the taxonomy meets
each of these criteria.
Theoretical evidence that each of these criteria is satis-
ﬁed was obtained by reviewing the decision procedure de-
scribed in Table 5. For mutual exclusivity, the decision pro-
cedure was reviewed to determine that it was not possible
for an arbitrary attack manifestation to be identiﬁed with
more than one class. For exhaustivity, the decision proce-
dure was reviewed to determine that it was not possible for
an attack to “fall through the cracks” and belong to none
of the classes. For replicability, the language of the deci-
sion procedure was reviewed to ensure that there was no
ambiguity which would cause different taxonomists to de-
cide that an arbitrary attack’s manifestation might belong to
different classes.
Empirical evidence was gathered by determining
whether or not the collected attacks and the classiﬁcations
of these attacks violated any of the taxonomic properties.
For mutual exclusivity, it was conﬁrmed that none of the at-
tacks belonged to multiple classes. For exhaustivity, it was
conﬁrmed that all the attacks belonged to one of the four
classes. For replicability, it was conﬁrmed that diverse clas-
siﬁcations of each of the attacks (e.g., different tools, differ-
ent evaluators, etc.) produced the same results, i.e., that the
same attacks were always assigned to the same categories.
5.8 Validate taxonomy using IDS evidence
For the purposes of this study, the taxonomy’s utility to
a defender lies in its ability to predict whether or not an in-
trusion detection system (IDS) will detect an attack based
on the attack’s taxonomic classiﬁcation. The taxonomy’s
utility is determined by running all 25 attacks through an
intrusion detection system to verify that the detector “sees”
all the attacks in a class in the same way; i.e., if the de-
tector scores attack detections on a scale from 1–3, then
all attacks in a class should get the same score. The Stide
anomaly-based IDS was used, because it operates on the
same kind of sequential system-call data as used here, and
because the taxonomy was designed around attack manifes-
tation features signiﬁcant to the performance of sequence-
based detectors in general, of which Stide happens to be
one. Stide is described elsewhere in great detail [7].
For each of the 25 attacks, the normal record for the at-
tack was run through Stide’s training mode to establish a
model of normal behavior. The attack record was then run
through Stide’s detection mode, and a score was assigned
on the basis of the extent to which Stide detected the attack.
Stide was conﬁgured with a locality frame of 1, so that all of
the anomalies visible in the current detector window would
be reported, regardless of whether or not there was a recent
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:36:00 UTC from IEEE Xplore.  Restrictions apply. 
history of anomalies (this is the most stringent conﬁgura-
tion of Stide). The detector window size was varied broadly,
from 1 to 15, inclusive. If one or more anomalies were re-
ported at every window-size setting, the attack was judged
to be always detectable, and a score of 3 was assigned for
the attack. If one or more anomalies were reported at some
window settings, but none were reported at others, the at-
tack was ruled to be sometimes detectable, and a score of 2
was assigned for the attack. If no anomalies were reported
at any window setting, the attack was judged to be never de-
tectable, and a score of 1 was assigned for the attack. The
attack scores are given in the last column of Table 6.
To verify that the performance of the intrusion detection
system was predicted by the defense-centric taxonomy, the
defense-centric taxonomic class of each of the twenty-ﬁve
attacks was compared to the detector score for the attack.
If the taxonomic class is a good indicator of the score, then
the taxonomy is said to predict detector performance. Table
6 shows that the predictions are perfect.
5.9 Choose contrasting attack-centric taxonomy
This paper asserts that a defense-centric taxonomy is
a better predictor of detector performance than an attack-
centric taxonomy. To validate this claim requires a com-
parison to be made between the two taxonomy types.
The attack-centric taxonomy from Lincoln Laboratory [16]
(hereafter denoted Lincoln taxonomy; also see Figure 1)
was selected for side-by-side comparison, because it is well
known and familiar to the computer security community,
and because it is attack centric (i.e., attacks are classiﬁed
according to the attacker’s goal). With respect to the 25 at-
tacks used in this study, the Lincoln taxonomy obeyed taxo-
nomic requirements of mutual exclusivity and replicability,
but not exhaustivity.
Four of the 25 attacks did not ﬁt the Lincoln taxonomy.
Two attacks (slocateheap and xmanprivs) would be
used by an attacker to elevate privileges to those of a
system-level (not root) user, e.g., users granted special priv-
ileges to manage online documentation or ﬁlesystem-wide
indexes of ﬁles. Two other attacks (crontabrace and
diskcheckrace) would be used by an attacker to create
ﬁles in unauthorized locations. None of these four attacks
can be assigned to any of the Lincoln classes.
To accommodate this shortcoming, the origins of the
Lincoln taxonomy were examined. The Lincoln taxonomy
was derived from a more elaborate taxonomy by Weber
[30], apparently by grouping together classes from the We-
ber taxonomy into more general classes in the Lincoln tax-
onomy. The four attacks which could not be classiﬁed by
the Lincoln taxonomy were found to belong to classes in the
Weber taxonomy. By creating a ﬁfth class and supplement-
ing the Lincoln taxonomy with this ﬁfth class, called “Sys-
tem access / Alter data,” an attack-centric taxonomy was
(cid:1)
Features
(cid:2)(cid:3)
(cid:4)
l
o
b
m
y
S
n
g
i
e
r
o
F
a
s
n
i
a
t
n
o
C
x
x
x
x
x
x
e
c
n
e
u
q
e
S
n
g
i
e
r
o
F
l
a
m
i
n
i
M
a
s
n
i
a
t
n
o
C
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
e
c
n
e
u
q
e
S
t
n
a
m
r
o
D
a
s
n
i
a
t
n
o
C
x
x
s
u
o
l
a
m
o
n
A
t
o
N
s
I
x
x
x
x
x
s
s
a
l
C
c
i
m
o
n
o
x
a
T
FS
FS
FS
FS
FS
FS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
MFS
DS
DS
MNA
MNA
MNA