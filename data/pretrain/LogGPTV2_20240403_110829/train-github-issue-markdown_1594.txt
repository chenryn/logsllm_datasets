I am trying to do least squares with a rank deficient matrix using the /
operator. It works in the general case, but fails when applied on a square
symmetric matrix with duplicate rows (and columns).
    > n, p = 99, 8;
    > y = randn(n);
    > X = randn(n, p);
    > X[:, 1] = 1;
    # Rank deficient. X[:, 1] = X[:, 2] + X[:, 3] 
    > X[:, 3] = 1 - X[:, 2];
    > (X\y)'
    1x8 Array{Float64,2}:
     -0.0643163  -0.123173  0.0588565  0.0812868  -0.0363878  -0.0676099  -0.0715549  0.0175931
    > ((X'*X)\(X'*y))'
    1x8 Array{Float64,2}:
     -0.124538  -0.0629509  0.119078  0.0812868  -0.0363878  -0.0676099  -0.0715549  0.0175931
    # Duplicate column. X[:, 1] = X[:, 3] = 1
    > X[:, 3] = 1;
    > (X\y)'
    1x8 Array{Float64,2}:
     -0.00272991  -0.182029  -0.00272991  0.0812868  -0.0363878  -0.0676099  -0.0715549  0.0175931
    > (X'*X)\(X'*y)
    ERROR: Base.LinAlg.SingularException(8)
     in \ at linalg/factorization.jl:25
     in \ at linalg/dense.jl:448