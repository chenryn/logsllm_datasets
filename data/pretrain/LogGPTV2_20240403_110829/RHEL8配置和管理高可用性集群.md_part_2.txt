    -   管理仲裁规则并进行裁定。
    -   为在集群的多个成员间协调或操作的应用程序提供消息功能，因此必须在实例间进行有状态或其他信息通信。
    -   使用 `kronosnet`{.literal}
        库作为其网络传输，以提供多个冗余链接和自动故障转移。
    :::
:::
:::
::: section
::: titlepage
## []{#assembly_overview-of-high-availability-configuring-and-managing-high-availability-clusters.html#_pacemaker_configuration_and_management_tools}Pacemaker 配置和管理工具 {.title}
:::
High Availability Add-On 有两个配置工具用于集群部署、监控和管理。
::: variablelist
[`pcs`{.literal}]{.term}
:   `pcs`{.literal} 命令行界面控制并配置 Pacemaker 和
    `corosync heartbeat`{.literal} 守护进程。基于命令行的程序
    `pcs`{.literal} 可以执行以下集群管理任务：
    ::: itemizedlist
    -   创建并配置 Pacemaker/Corosync 集群
    -   在集群运行时修改集群配置
    -   远程配置 Pacemaker 和 Corosync 以及启动、停止和显示集群状态信息
    :::
[`pcsd`{.literal} Web UI]{.term}
:   用于创建和配置 Pacemaker/Corosync 集群的图形用户界面。
:::
:::
::: section
::: titlepage
## []{#assembly_overview-of-high-availability-configuring-and-managing-high-availability-clusters.html#_the_cluster_and_pacemaker_configuration_files}集群和 pacemaker 配置文件 {.title}
:::
红帽高可用性附加组件的配置文件是 `corosync.conf`{.literal} 和
`cib.xml`{.literal}。
`corosync.conf`{.literal} 文件提供了 `corosync（Pacemaker`{.literal}
构建的集群管理器）使用的集群参数。通常，您不应该直接编辑
`corosync.conf`{.literal}，而是使用 `pcs`{.literal} 或 `pcsd`{.literal}
接口。
`cib.xml`{.literal} 文件是一个 XML
文件，它代表集群的配置和群集中所有资源的当前状态。Pacemaker
的集群信息基础（Cluster Information Base，CIB）会使用这个文件。CIB
的内容会在整个集群中自动保持同步。不要直接编辑 `cib.xml`{.literal}
文件；改为使用 `pcs`{.literal} 或 `pcsd`{.literal} 接口。
:::
:::
::: section
::: titlepage
# []{#assembly_overview-of-high-availability-configuring-and-managing-high-availability-clusters.html#con_HA-lvm-shared-volumes-overview-of-high-availability}红帽高可用性集群中的 LVM 逻辑卷 {.title}
:::
红帽高可用性附加组件以两种不同的集群配置为 LVM 卷提供支持。
您可以选择的集群配置如下：
::: itemizedlist
-   带有主动/被动故障转换配置的高可用性 LVM
    卷（HA-LVM），在任何一个时间点上，集群中只能有一个节点访问存储。
-   使用 `lvmlockd`{.literal} 守护进程以主动/主动配置管理存储设备的 LVM
    卷，其中多个群集节点需要同时访问存储。`lvmlockd`{.literal}
    守护进程是弹性存储附加组件的一部分。
:::
::: section
::: titlepage
## []{#assembly_overview-of-high-availability-configuring-and-managing-high-availability-clusters.html#_choosing_ha_lvm_or_shared_volumes}选择 HA-LVM 或者共享卷 {.title}
:::
使用 HA-LVM 或由 `lvmlockd`{.literal}
守护进程管理的共享逻辑卷时，应当基于所部署的应用或服务的需要。
::: itemizedlist
-   如果集群的多个节点需要同时对主动/主动系统中的 LVM
    卷进行读/写访问，则必须使用 `lvmlockd`{.literal}
    守护进程并将您的卷配置为共享卷。`lvmlockd`{.literal}
    守护进程提供了一个系统，可以同时协调 LVM
    卷的激活和更改。`lvmlockd`{.literal} 守护进程的锁定服务可保护 LVM
    元数据，因为群集的不同节点与卷交互并更改其布局。这种保护取决于将同时在多个群集节点间作为共享卷激活的卷组。
-   如果将高可用性集群配置为以主动/被动方式管理共享资源，一次只有一个成员需要访问给定
    LVM 卷，那么您可以在没有 `lvmlockd`{.literal} 锁定服务的情况下使用
    HA-LVM。
:::
因为大多数应用程序没有为与其他实例同时运行而设计或进行优化，所有它们以主动/被动配置的模式运行更佳。在共享逻辑卷中运行不是针对集群设计的应用程序时，可能会导致性能下降。这是因为，在这些情况下逻辑卷本身需要有集群通信的额外开销。针对集群设计的应用程序所获得的性能提高幅度必须大于因为集群文件系统和针对集群的逻辑卷所造成的性能降低的幅度。一些应用程序和工作负载会比其他应用程序和工作负载更容易实现这一点。确定集群的要求以及是否要为活跃/主动集群进行优化，从而在两个
LVM 配置间进行选择。大多数用户使用 HA-LVM 一般会获得最佳的 HA 结果。
HA-LVM 和使用 `lvmlockd`{.literal} 的共享逻辑卷类似，因为它们可防止 LVM
元数据及其逻辑卷损坏，否则在允许多个计算机进行重叠更改时会出现这种情况。HA-LVM
会限制在一个时间点上只能有一个逻辑卷被激活，也就是说一次只在一个机器中激活。这意味着，只使本地（非集群）实现的存储驱动被使用。使用这种方法可以避免用于集群协调的额外开销，以提高性能。使用
`lvmlockd`{.literal}
的共享卷不会强制实施这些限制，用户可以自由地在群集中的所有计算机上激活逻辑卷；这强制使用群集感知型存储驱动程序，允许将群集感知型文件系统和应用程序置于上面。
:::
::: section
::: titlepage
## []{#assembly_overview-of-high-availability-configuring-and-managing-high-availability-clusters.html#_configuring_lvm_volumes_in_a_cluster}在集群中配置 LVM 卷 {.title}
:::
集群通过 Pacemaker 管理。只有与 Pacemaker 集群联合支持 HA-LVM
和共享逻辑卷，且必须配置为集群资源。
::: itemizedlist
-   有关将 HA-LVM 卷配置为 Pacemaker 集群一部分的步骤示例，请参阅
    [在红帽高可用性集群中配置主动/被动 Apache HTTP
    服务器和在红帽高可用性集群中](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-active-passive-http-server-in-a-cluster-configuring-and-managing-high-availability-clusters){.link}
    [配置主动/被动 NFS
    服务器。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-active-passive-nfs-server-in-a-cluster-configuring-and-managing-high-availability-clusters){.link}
    请注意，这些步骤包括以下步骤：
    ::: itemizedlist
    -   确保只有集群可以激活卷组
    -   配置 LVM 逻辑卷
    -   将 LVM 卷配置为集群资源
    :::
-   有关使用 `lvmlockd`{.literal}
    守护进程在主动/主动配置中管理存储设备的步骤，请参阅 [集群中的 GFS2
    文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-gfs2-in-a-cluster-configuring-and-managing-high-availability-clusters){.link}。
:::
:::
:::
:::
[]{#assembly_getting-started-with-pacemaker-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_getting-started-with-pacemaker-configuring-and-managing-high-availability-clusters.html#assembly_getting-started-with-pacemaker-configuring-and-managing-high-availability-clusters}第 2 章 Pacemaker 入门 {.title}
:::
这些步骤介绍了您用来创建 Pacemaker
集群的工具和流程。这些内容适用于想了解集群软件以及如何管理它，而不需要配置集群的用户。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这些步骤并不会创建受支持的红帽集群。受支持的红帽集群至少需要两个节点并配置隔离设备。如需了解有关
RHEL 高可用性集群的红帽支持策略、要求和限制的完整信息，请参阅 [RHEL High
Availability
集群的支持政策。](https://access.redhat.com/articles/2912891/){.link}
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-pacemaker-configuring-and-managing-high-availability-clusters.html#proc_learning-to-use-pacemaker-getting-started-with-pacemaker}学习使用 Pacemaker {.title}
:::
通过这个过程，您将了解如何使用 Pacemaker
设置集群、如何显示集群状态以及如何配置集群服务。这个示例创建了一个
Apache HTTP 服务器作为集群资源，并显示了集群在资源失败时如何响应。
在本例中：
::: itemizedlist
-   节点为 `z1.example.com`{.literal}。
-   浮动 IP 地址为 192.168.122.120。
:::
::: itemizedlist
**先决条件**
-   运行 RHEL 8 的单个节点
-   与节点静态分配的 IP 地址之一驻留在同一网络中的浮动 IP 地址
-   运行的节点的名称位于 `/etc/hosts`{.literal} 文件中
:::
::: orderedlist
**流程**
1.  从 High Availability
    频道安装红帽高可用性附加组件软件包，并启动并启用 `pcsd`{.literal}
    服务。
    ``` literallayout
    # yum install pcs pacemaker fence-agents-all
    ...
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
    如果您正在运行 `firewalld`{.literal}
    守护进程，启用红帽高可用性附加组件所需的端口。
    ``` literallayout
    # firewall-cmd --permanent --add-service=high-availability
    # firewall-cmd --reload
    ```
2.  在群集的每个节点上设置用户 `hacluster`{.literal}
    的密码，并为您要运行 `pcs`{.literal}
    命令的节点上群集中的每个节点验证用户
    `hacluster`{.literal}。本例只使用一个节点，您要从这个节点中运行命令。把这一步包括在这个步骤的原因是，它是配置一个被支持的红帽高可用性多节点集群的一个必要步骤。
    ``` literallayout
    # passwd hacluster
    ...
    # pcs host auth z1.example.com
    ```
3.  创建名为 `my_cluster`{.literal}
    且具有一个成员的群集，并检查群集的状态。这个命令会创建并启动集群。
    ``` literallayout
    # pcs cluster setup my_cluster --start z1.example.com
    ...
    # pcs cluster status
    Cluster Status:
     Stack: corosync
     Current DC: z1.example.com (version 2.0.0-10.el8-b67d8d0de9) - partition with quorum
     Last updated: Thu Oct 11 16:11:18 2018
     Last change: Thu Oct 11 16:11:00 2018 by hacluster via crmd on z1.example.com
     1 node configured
     0 resources configured
    PCSD Status:
      z1.example.com: Online
    ```
4.  红帽高可用性集群要求为集群配置隔离功能。[Fencing in a Red Hat High
    Availability
    Cluster](https://access.redhat.com/solutions/15575){.link}
    包括了这个要求的原因。然而，在本简介中，它只显示如何使用基本
    Pacemaker 命令，通过将启用了 `stonith-enabled`{.literal}
    集群选项设置为 `false`{.literal} 来禁用隔离。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    对生产环境集群而言，`stonith-enabled=false`{.literal}
    的使用完全不合适。它通知集群，假设出现故障的节点已被安全隔离。
    :::
    ``` literallayout
    # pcs property set stonith-enabled=false
    ```
5.  在您的系统中配置网页浏览器并创建一个网页来显示简单文本信息。如果您正在运行
    `firewalld`{.literal} 守护进程，请启用 `httpd`{.literal}
    所需的端口。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    不要使用 `systemctl enable`{.literal}
    启用任何由集群管理的在系统引导时启动的服务。
    :::
    ``` literallayout
    # yum install -y httpd wget
    ...
    # firewall-cmd --permanent --add-service=http
    # firewall-cmd --reload
    # cat /var/www/html/index.html
    My Test Site - $(hostname)
    END
    ```
    要让 Apache 资源代理获得 Apache
    状态，在现有配置中添加以下内容来启用状态服务器 URL。
    ``` literallayout
    # cat  /etc/httpd/conf.d/status.conf
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1
    Allow from ::1