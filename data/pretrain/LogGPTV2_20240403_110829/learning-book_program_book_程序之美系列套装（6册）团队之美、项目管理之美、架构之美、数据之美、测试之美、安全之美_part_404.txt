7.4对最初信任网络的改进
尽管本章前面所描述的模型是经典的并且广为人知，但很少有人知
道后期版本的PGP所增加的许多额外特性和增强功能。当我们认识
到基本模型所存在的限制之后，我们增加了这些元素，以增强它的
伸缩性，抚平它的毛边。
2338
---
## Page 2340
对信任网络的主要改进所涉及的领域包括撤销（或其他原因所导致
的使密钥变得无效）、伸缩性问题以及密钥的过期签名所导致的膨
胀。本节将讨论其中的每个领域，并介绍其他一些有趣的改进。
7.4.1撤销
所有的PKI都需要一种撤销证书的方法。人是一种容易犯错的生物，
他们有时候会失去对计算机和密钥的控制，系统可能会丢失或被劫
持。因此，在密钥过期之前，必须有一种方法能够使它们失效。
在诸如X.509这样的层次式PKI中，撤销从理论上来说是非常简单的
（尽管仍然难以普及）。中心授权机构采用与发布密钥授权相同的
渠道发布撤销信息。
基本的撤销模型
7.3节所描述的最初PGP信任网络提供了两种用于撤销的机制：
密钥撤销
如果有人失去了对他的密钥的控制，他必须能够撤销所有的一切。
他不能依赖对他的密钥进行签名的每个人撤销他们的签名。这种类
型的撤销和前面所讨论的一样，本身也是一种类型的签名。（在
PGP中，签名是传递信任消息的基本形式。）用这种密钥撤销签名
就使它的所有证书变得无效。
签名撤销
密钥可以创建一个签名，发布另一个签名不再合法。例如，如果
Alice发现Bob欺骗她对他的密钥进行签名，她可以撤销她为这个密
钥提供的证书。如果Charlie也对这个密钥进行了签名但并没有撤销
他的签名，其他人可能会信任Charlie，并继续接受Bob的密钥为合法
的。注意，这种形式的撤销对于数据签名和证书签名都是适用的。
密钥的撤销和过期
密钥的撤销对于所有的PKI而言都是不完善的，它也许是公钥密码系
统中最尖锐的毛边。尽管PGP模型非常灵活，并避免了一些撤销上
的陷阱（例如证书撤销列表的规模可能会趋向于无法控制），但它
仍然存在与撤销有关的问题，下面列举了其中一些问题：
2339
---
## Page 2341
没有一种机制能够发布脱离密钥本身的带外（out-of-band）撤销信
息。如果Alice撤销了她的密钥，她可以把撤销签名放在一台密钥服
务器上，但是没有办法把这个机制广播到每个拥有她的密钥的人。
没有办法撤销一个丢失的密钥。对于PGP新用户而言，创建一个密
钥，然后把它上传到一个密钥服务器上，接着很快总了保护密钥的
口令并不是新鲜的事情。丢失的密钥会一直处于未使用状态，直到
它过期。
撤销（也包括过期）在超出时间后再解释它们的含义时应该不再有
意义。例如，Alice在2002年创建了一个将在2006年过期的密钥。假
设她在2003年对一个文档进行了签名，并在2005年撤销了她的密
钥。在2008年时，我们该怎么看待这个签名呢？显然，在2003年的
时候，这个签名是没有问题的，但是这个签名在她撤销了自已的密
钥后是不是仍然合法呢？
当然，具体地说，它在很大程度上取决于她为什么要撤销自己的密
钥。如果她是由于创建了一个新密钥而撤销了原密钥，那么这个签
名仍然是没有问题的。如果她是因为发现有窃贼窃取了自已的笔记
实际上我们无法区分它是否来自一个伪造的、倒填日期的签名1。
这些困难意味着密钥是极少被撤销的，除非是密钥丢失这种显而易
见的情况。至少在理论上，当一个密钥被新的密钥所取代或者由于
其他原因不再使用时，应该能够很方便地撤销它，并且也应该撤
销。但是，撤销常常被认为是发生了最坏的情况所致，也就是密钥
被盗用。因此，用户很少撤销密钥。
避免撤销的一种方式是使用过期。PGP密钥的过期时间保存在一个
自签名中。这种做法增加了一些额外的灵活性，因为密钥持有人可
以简单地通过创建一个自签名来修改过期时间。因此，过期也是可
以撤销的。遗憾的是，人们很少使用过期这个功能。
尽管我们接下来将讨论一些改进措施，但撤销仍然是个难题。
指定撤销人
指定撤销人是一种辅助密钥，它的权利是为一个主密钥生成撤销签
名。来自指定撤销人的撤销是合法的，就像来自主密钥本身的撤销
一样。
2340
---
## Page 2342
假设你指定Dan作为自己的指定撤销人。在指定之后，你的密钥中就
存在一个自签名，它表示Dan是你的撤销人。另外，这个签名本身也
被标记为不可撤销的签名。撤销人的指定必须是不可撤销的，不然
在发生真正的密钥盗用时，盗用人就可以撤销这个撤销人2。
指定撤销人并不一定是个活动的密钥。例如，你可以创建一个专门
作为自己的撤销人的密钥，然后把它存储在一个离线的保险箱时，
直到需要的时候才把它从保险箱里拿出来。指定撤销人这个特性极
大地缓解了去失私人密钥、忘记口令和密钥被盗用这些事件所造成
的困扰。每个人都应该为自已的密钥定义一个指定撤销人。
指定撤销人最初是在PGP3中出现的，它也是OpenPGP的组成部分。
新鲜
新鲜是另一种管理过期和撤销的方法。新鲜的系统使用标准的过期
和撤销，但它不再强调撤销的重要性强于过期（参见7.6节中的
Rivest)。
假设一个密钥持有人创建了一个将在两周后过期的密钥，但他每周
又重新创建了一个过期签名。这个密钥持有人单方面地创建了一个
新鲜的系统。他的撤销需求被最小化了，因为他的密钥的任何特定
拷贝都会在两周或更短的时间内过期。在许多情况下，新鲜允许持
有人彻底忽略撤销，完全依赖于过期。
密钥签名人也可以使用新鲜的系统，避免对他们的签名进行撤销。
但是要注意，新鲜要求签名人不断地更新他们的签名。在代替签名
时，它还需要更严格的政策。
新鲜的OpenPGP系统最早是在2003年Jon的文章"ImprovingMessage
SecurityWithaSelf-AssemblingPKI"中进行描述的（参见7.6节）。
撤销的原因
如前所述，撤销密钥的原因有很多，但在信任网络的最初实现中，
只考虑了最戏剧性的原因。从OpenPGP开始，可以对撤销签名进行
注释，表示撤销的原因是密钥被停止使用、密钥被盗用或者这个密
的字符串。
2341
---
## Page 2343
解决。如果出现了问题的文档具有另一个来自公证人或邮戳服务的
签名，则这个表示Alice在2003年进行了签名的额外签名在此时仍然
是合法的。但是，事实上并没有人采用这样的做法。
[2]不可撤销的签名是在指定撤销人的同时创建的，因为由这个特性
创建了这个需要。
7.4.2伸缩性问题
基本形式的信任网络在低端具有非常出色的伸缩性，它可以扩展到
儿十人。在一个机构内部，它甚至可以扩展到儿十万人。
但是大型的、不连接的人群网络可能难以使用基本的信任网络，因
为人群之间相互了解的路径很少。当信任网络包含了更多的具有相
对较少的边节点时，寻找信任路径就变得非常困难。
信任网络最适用于具有某种联系的人群。它并不太适合像Internet这
样的大型的普及网络。但是，目前存在两个补救办法，现代的社交
网络重建了最适合信任网络的小型网络。Intermnet作为一个整体可能
不适合信任网络，但对于我们大部分人所使用的Internet，它可能非
常适合。
另外，认识直接信任的力量也是非常重要的。如果Alice与Zeke之间
没有连接，那么她总是可以要求他向她发送他的密钥。
扩展介绍人
扩展介绍人又称辅助介绍人，通过把信任网络扩展到多级体系，完
善它的伸缩机制。基本的信任网络已经支持多级层次结构，但是树
中的每个签名节点必须是个特定的信任。扩展介绍人可以自动把介
绍人介绍到一个指定的深度。
再次观察图7-1。假设Dan是个深度为1的辅助介绍人签名。通过这个
信任签名，Jon的证书不需要其他签名就自动成为一个完全信任的介
绍人。对于Dan所签名的其他任何密钥，情况也是如此。
注意，这样一来Dan就拥有很大的权力，与第一级委托的根证书授权
相同。在现实世界中，很少向个人提供如此大的权力，但是我们可
以考虑把一个机构分解为儿个部门：如果该机构的一个顶层密钥得
2342
---
## Page 2344
到一个辅助介绍人签名，并且这个密钥对部门的密钥进行签名，这
些部门就自动信任彼此之间的密钥，而不需要进一步的交互。
扩展介绍人最初是作为OpenPGP的一部分出现的。
授权密钥
作为伸缩性问题的解决方案仍然作用有限，它只适用于具有相互之
间存在一些关系的本地级别。最初的信任网络成功地在没有授权的
情况下无中生有地创建了一个可用的PKI。
一种范围更广的伸缩性机制是我们最近对PGP信任网络所添加的特
性之—。Jon在"Improving Message Security With a Self-Assembling
PKT一文中首先描述的授权密钥的概念可以帮助创建一个完全分布
式的PKI。
授权密钥的概念是这样的：有些证书或密钥可能被预设为真的，这
并不是因为它们是从密码层次上继承而来，而是因为它们来自一个
适当的授权，比如一个Internet域。例如，如果我们想对一个由
PI:EMAIL所标识的密钥进行加密，就可以接受example.com
的授权，即便它与我们并没有共同的信任祖先。
从安全的角度而言，这并不是没有争议的。如果example.com是伪造
的，我们就会面临许多问题。另外，最终DNSSEC将使用数字签名
保护DNS域，这可以使授权密钥得到更安全的密码保护。授权密钥
依赖现实的网络：尽管DNS在小规模时很容易被破坏，但破坏大规
模的DNS非常困难。即使最近在DNS基础设施上所发现的一些问题
也说明DNS是个合理的信任点。
授权密钥解决了一个重要的伸缩性问题：机构必须能够管理它自己
的PKI。解决这个问题的另一种方法是使用十几个甚至上百个层次
（X.509证书就采用了这种做法），但这种替代方法自身就存在伸缩
性问题。
授权密钥的概念也是DKIM电子邮件认证协议的一个不可分割的组成
部分（参见7.6节的Allman等）。
2343
---
## Page 2345
7.4.3签名的膨胀和困扰
PGP软件系统一般根据密钥对签名进行组合，它是处理签名最容易
的方法，通常能够做到名实相符。但是，这种方法仍然可能导致三
种我们不希望看到的场景：
替换签名
如果一个新签名替换了一个旧签名，这个旧签名应该被丢弃。例
如，假设Alice在2007年为Bob的密钥进行了签名，过期时间为2008
年。接着，在2008年，在第一个签名过期之后，她再次为Bob的密钥
签名，过期时间为2009年。显然，2008年的签名应该替换2007年的
签名。但是我们并不是很清楚一个签名是怎么成为另一个旧签名的
后继者的。而且，在基本的信任网络中，我们也不清楚被替换的签
名应该被删除还是继续保存在历史记录中。
过期的签名
考虑前一个例子，假设在Alice的第一个签名过期之后，她并没有创
建一个新签名。我们是不是应该从Bob的密钥中删除这个签名？过期
的签名不再包含在信任计算中，那么为什么不删除它呢？基本的信