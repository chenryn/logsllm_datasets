     "ResourceRecordSet": {
       "Name": "public.k8s-devops.net",
       "Type": "A",
       "TTL": 300,
       "ResourceRecords": [
         {
          "Value": "54.227.197.56"
         }
       ]
     }
   }
  ]
}
//submit to Route53
$ aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/Z1CTVYM9SLEAN8 --change-batch file:///tmp/add-record.json 
//a few minutes later, check whether A record is created or not
$ dig public.k8s-devops.net
; > DiG 9.8.3-P1 > public.k8s-devops.net
;; global options: +cmd
;; Got answer:
;; ->>HEADER> DiG 9.8.3-P1 > public.k8s-devops.net
;; global options: +cmd
;; Got answer:
;; ->>HEADER./`，因此，您可以直接从机器上运行`kubectl`命令，查看节点列表，如下所示:
```
$ kubectl get nodes
NAME                          STATUS         AGE       VERSION
ip-10-0-36-157.ec2.internal   Ready,master   8m        v1.7.0
ip-10-0-42-97.ec2.internal    Ready,node     6m        v1.7.0
ip-10-0-42-170.ec2.internal   Ready,node     6m        v1.7.0
```
万岁！从头开始在 AWS 上设置 AWS 基础设施和 Kubernetes 只需几分钟。现在你可以通过`kubectl`命令部署 Pod 。但是您可能希望 ssh 到主节点/节点，看看发生了什么。
但是由于安全原因，如果指定`--topology private`，只能 ssh 到堡垒主机。然后使用私有 IP 地址 ssh 到主/节点主机。这类似于上一节，ssh 到公共子网主机，然后使用 ssh-agent ( `-A`选项)ssh 到私有子网主机。
在下面的例子中，我们 ssh 到堡垒主机(kops 创建 Route 53 条目作为`bastion.my-cluster.k8s-devops.net`)，然后 ssh 到主机(`10.0.36.157`):
>![](img/00126.jpeg)
# 云提供商
在 kops 设置 Kubernetes 的同时，还将 Kubernetes 云提供商配置为 AWS。这意味着当您将 Kubernetes 服务与 LoadBalancer 一起使用时，它将使用 ELB。还以**弹性积木商店** ( **EBS** )为其`StorageClass`。
# L4 负载平衡器
当你向外界公开 Kubernetes 服务时，使用 ELB 就更有意义了。将服务类型设置为负载平衡器将调用 ELB 创建，并将其与节点相关联:
```
$ cat grafana.yml 