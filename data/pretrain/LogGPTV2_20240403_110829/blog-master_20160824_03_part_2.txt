```
[root@db-172-16-3-150 soft_bak]# wget http://www.pgpool.net/download.php?f=pgpool-II-3.3.3.tar.gz    
[root@db-172-16-3-150 soft_bak]# mv download.php\?f\=pgpool-II-3.3.3.tar.gz pgpool.tar.gz    
[root@db-172-16-3-150 soft_bak]# tar -zxvf pgpool.tar.gz    
[root@db-172-16-3-150 soft_bak]# cd pgpool-II-3.3.3/    
[root@db-172-16-3-150 pgpool-II-3.3.3]#     
```
这一步需要注意, 最好pgpool依赖的postgresql版本和backend database的数据库版本一致. 例如都是9.3.1  
```
[root@db-172-16-3-150 pgpool-II-3.3.3]# ./configure --prefix=/opt/pgpool3.3.3 --with-pgsql=/home/pg93/pgsql9.3.1    
[root@db-172-16-3-150 pgpool-II-3.3.3]# gmake && gmake install    
```
### 3. 配置pgpool  
```
[root@db-172-16-3-150 etc]# cd /opt/pgpool3.3.3/etc/    
[root@db-172-16-3-150 etc]# cp pool_hba.conf.sample pool_hba.conf    
[root@db-172-16-3-150 etc]# cp pgpool.conf.sample-stream pgpool.conf    
[root@db-172-16-3-150 etc]# cp pcp.conf.sample pcp.conf    
[root@db-172-16-3-150 etc]# vi pgpool.conf    
listen_addresses = '0.0.0.0'    
port = 9999    
socket_dir = '/tmp'    
pcp_port = 9898    
pcp_socket_dir = '/tmp'    
backend_hostname0 = '172.16.3.39'    
backend_port0 = 1999     
backend_weight0 = 1    
backend_flag0 = 'ALLOW_TO_FAILOVER'    
backend_hostname1 = '172.16.3.39'    
backend_port1 = 2000    
backend_weight1 = 1    
backend_flag1 = 'ALLOW_TO_FAILOVER'    
enable_pool_hba = on    
pool_passwd = 'pool_passwd'    
authentication_timeout = 60    
ssl = off    
num_init_children = 32    
max_pool = 4    
child_life_time = 300    
child_max_connections = 0    
connection_life_time = 0    
client_idle_limit = 0    
log_destination = 'syslog'    
print_timestamp = on    
log_connections = on    
log_hostname = off    
# 以下两个参数用于调试, 能看到sql balance的情况.    
log_statement = on    
log_per_node_statement = on    
log_standby_delay = 'always'    
syslog_facility = 'LOCAL0'    
syslog_ident = 'pgpool'    
debug_level = 0    
pid_file_name = '/var/run/pgpool/pgpool.pid'    
logdir = '/tmp'    
connection_cache = on    
reset_query_list = 'ABORT; DISCARD ALL'    
replication_mode = off    
replicate_select = off    
insert_lock = off    
lobj_lock_table = ''    
replication_stop_on_mismatch = off    
failover_if_affected_tuples_mismatch = off    
load_balance_mode = on    
ignore_leading_white_space = on    
white_function_list = ''    
black_function_list = 'currval,lastval,nextval,setval'    
master_slave_mode = on    
master_slave_sub_mode = 'stream'    
sr_check_period = 2    
sr_check_user = 'srcheck'    
sr_check_password = 'SRCHECK'    
delay_threshold = 1024000    
follow_master_command = ''    
parallel_mode = off    
pgpool2_hostname = ''    
health_check_period = 0    
health_check_timeout = 20    
health_check_user = 'nobody'    
health_check_password = ''    
health_check_max_retries = 0    
health_check_retry_delay = 1    
failover_command = ''    
failback_command = ''    
fail_over_on_backend_error = on    
search_primary_node_timeout = 10    
recovery_user = 'nobody'    
recovery_password = ''    
recovery_1st_stage_command = ''    
recovery_2nd_stage_command = ''    
recovery_timeout = 90    
client_idle_limit_in_recovery = 0    
use_watchdog = off    
trusted_servers = ''    
ping_path = '/bin'    
wd_hostname = ''    
wd_port = 9000    
wd_authkey = ''    
delegate_IP = ''    
ifconfig_path = '/sbin'    
if_up_cmd = 'ifconfig eth0:0 inet $_IP_$ netmask 255.255.255.0'    
if_down_cmd = 'ifconfig eth0:0 down'    
arping_path = '/usr/sbin'           # arping command path    
arping_cmd = 'arping -U $_IP_$ -w 1'    
clear_memqcache_on_escalation = on    
wd_escalation_command = ''    
wd_lifecheck_method = 'heartbeat'    
wd_interval = 10    
wd_heartbeat_port = 9694    
wd_heartbeat_keepalive = 2    
wd_heartbeat_deadtime = 30    
heartbeat_destination0 = 'host0_ip1'    
heartbeat_destination_port0 = 9694     
heartbeat_device0 = ''    
wd_life_point = 3    
wd_lifecheck_query = 'SELECT 1'    
wd_lifecheck_dbname = 'template1'    
wd_lifecheck_user = 'nobody'    
wd_lifecheck_password = ''    
relcache_expire = 0    
relcache_size = 256    
check_temp_table = on    
memory_cache_enabled = off    
memqcache_method = 'shmem'    
memqcache_memcached_host = 'localhost'    
memqcache_memcached_port = 11211    
memqcache_total_size = 67108864    
memqcache_max_num_cache = 1000000    
memqcache_expire = 0    
memqcache_auto_cache_invalidation = on    
memqcache_maxcache = 409600    
memqcache_cache_block_size = 1048576    
memqcache_oiddir = '/var/log/pgpool/oiddir'    
white_memqcache_table_list = ''    
black_memqcache_table_list = ''    
```
生成pgpool管理秘钥, 并配置  
```
[root@db-172-16-3-150 etc]# /opt/pgpool3.3.3/bin/pg_md5 -u sup_pool sup_pool_pwd    
c21777db255631573e4233403773bb3b    
[root@db-172-16-3-150 etc]# vi pcp.conf    
sup_pool:c21777db255631573e4233403773bb3b    
```
配置pgpool pool_hba.conf  
```
[root@db-172-16-3-150 etc]# vi pool_hba.conf    
# trust会导致错误    
local   all         all                               trust    
host    all         all         127.0.0.1/32          trust    
host all all 0.0.0.0/0 md5    
```
配置pgpool-ii密码文件, 从postgresql数据库pg_authid获取  
```
digoal=# select rolname,rolpassword from pg_authid;    
 rolname  |             rolpassword                 
----------+-------------------------------------    
 postgres | md53175bce1d3201d16594cebf9d7eb3f9d    
 digoal   | md5462f71c79368ccf422f8a773ef40074d    
 srcheck  | md5662c10f61b27a9ab38ce69157186b25f    
(3 rows)    
[root@db-172-16-3-150 etc]# vi pool_passwd    
postgres:md53175bce1d3201d16594cebf9d7eb3f9d    
```
### 4. 创建check用户, pgpool用它连接到数据库并 检查数据库是否正常  
```
pg93@db-172-16-3-39-> psql -h 127.0.0.1 -p 1999    
Password:     
psql (9.3.1)    
Type "help" for help.    
digoal=# create role srcheck nosuperuser login encrypted password 'SRCHECK';    
CREATE ROLE    
```
### 5. 启动pgpool  
```
[root@db-172-16-3-150 etc]# /opt/pgpool3.3.3/bin/pgpool -f /opt/pgpool3.3.3/etc/pgpool.conf    
[root@db-172-16-3-150 etc]# tail -f -n 2 /var/log/messages    
May 13 11:56:45 db-172-16-3-150 pgpool[28153]: pgpool-II successfully started. version 3.3.3 (tokakiboshi)    
May 13 11:56:45 db-172-16-3-150 pgpool[28153]: find_primary_node: primary node id is 0    
```
### 6. 常见连接错误  
#### 问题1  
```
[root@db-172-16-3-150 etc]# su - pg93    
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 9999 -U postgres digoal    
psql: ERROR:  MD5 authentication is unsupported in replication, master-slave and parallel modes.    
HINT:  check pg_hba.conf    
```
这个错误的原因已经很清楚了, 需要修改pool_hba.conf, 对应的trust改成md5 . 对应的错误代码 :  
pool_auth.c  
```
        /* md5 authentication? */    
        else if (authkind == 5)    
        {    
                /* If MD5 auth is not active in pool_hba.conf, it cannot be    
                 * used with other than raw mode.    
                 */    
                if (frontend->auth_method != uaMD5 && !RAW_MODE && NUM_BACKENDS > 1)    
                {    
                        pool_send_error_message(frontend, protoMajor, AUTHFAIL_ERRORCODE,    
                                                                        "MD5 authentication is unsupported in replication, master-slave and parallel modes.",    
                                                                        "",    
                                                                        "check pg_hba.conf",    
                                                                        __FILE__, __LINE__);    
                        return -1;    
                }    
```
错误修复  
```
[root@db-172-16-3-150 pgpool-II-3.3.3]# cd /opt/pgpool3.3.3/etc/    
[root@db-172-16-3-150 etc]# vi pool_hba.conf    
host    all         all         127.0.0.1/32          md5    
[root@db-172-16-3-150 etc]# /opt/pgpool3.3.3/bin/pgpool -f /opt/pgpool3.3.3/etc/pgpool.conf reload    
```
这里存在BUG, 从trust改成md5后, 报错是没了, 但是密码也不提示就直接进了(这显然是有问题的).  
```
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 9999 -U postgres digoal    
psql (9.3.3, server 9.3.1)    
Type "help" for help.    
digoal=# \q    
```
连接已配置为md5验证的条目. 已有的172.16.3.150. 正常  
```
pg93@db-172-16-3-150-> psql -h 172.16.3.150 -p 9999 -U postgres digoal    
Password for user postgres:     
psql (9.3.3, server 9.3.1)    
Type "help" for help.    
digoal=# \q    
```
#### 问题2  
使用在pool_passwd中么有配置的用户连接.  
```
pg93@db-172-16-3-150-> psql -h 172.16.3.150 -p 9999 -U digoal digoal    
psql: ERROR:  "MD5" authentication with pgpool failed for user "digoal"    
```
这个错误并没有提示输入密码就出错, 原因是在pool_passwd文件中没有加入digoal的密码.  
修复错误, 在pool_passwd中添加条目  
```
[root@db-172-16-3-150 etc]# vi pool_passwd     
digoal:md5462f71c79368ccf422f8a773ef40074d    
[root@db-172-16-3-150 etc]# /opt/pgpool3.3.3/bin/pgpool -f /opt/pgpool3.3.3/etc/pgpool.conf reload    
[root@db-172-16-3-150 etc]# su - pg93    
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 9999 -U digoal digoal    
Password for user digoal:     
psql (9.3.3, server 9.3.1)    
Type "help" for help.    