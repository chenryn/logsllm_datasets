loopback interfaces, 152n Montulli, Lou, 60
Lynx, 10 Mosaic, 10. See also Netscape
MotW (Mark of the Web), 204, 231
M mouse cursors, redefining, 89n
Moved Permanently status code (301), 55
Macromedia Flash, 132 Mozilla Firefox. See Firefox (Mozilla)
mailto: protocol, 25, 36, 256 Mozilla specification, 242
mail user agent (MUA), 203n msbd: scheme, 36
malicious sites, blacklist-driven attempts to MsgBox (VBScript), 114
block, 226 MUA (mail user agent), 203n
managed code, 134n multiline headers, support for, 45
Mark of the Web (MotW), 204, 231 multiline string literals
markup filter for user content, 86 Internet Explorer support, 91
mashups, 176 in JavaScript, 113
MathML (Mathematical Markup Lan- multimedia playback, 130
guage), 72, 122 Multipurpose Internet Mail Extensions
Math.random() function, 109 (MIME). See MIME (Multipurpose
max-age parameter Internet Mail Extensions)
for cookie, 61 My computer zone, for Internet
for STS record, 248 Explorer,229
media capture, 259
Memex, 8
N
memory pointers, 266
memory use restrictions for scripts, name attribute, of frames, 175
215–216 named entities, 76
 directive, 206, 208 namespace in JavaScript, 107
 directive, 78–79 name: value pairs, in HTTP requests, 43
meta-policies, for Flash, 156–157 name=value pairs
mhtml protocol, 38 cookies for storing, 60
Microsoft. See also Internet Explorer for forms, 81
descendant policy development, 177 National Science Foundation, backbone
.NET Framework with XPAB network, 10
plug-ins, 136 Naval Research Laboratory, 3–4
objections to CORS, 239 navigateToURL() function, 133
Sun suit over Java virtual machine, 135n
INDEX 291
navigation onerror handler, on  tag, 184
to sensitive schemes, 188 onerror parameter, 74
timing, 259 onkeydown event (JavaScript), 180
navigator.device.capture API, 259 onload handler, to measure load time for
navigator.geolocation.getCurrentPosition() document, 184
API, 258 onmousemove events, 222
navigator object (JavaScript), 108 opacity property (CSS2), and
navigator:registerProtocolHandler() API, 256 JavaScriptcode, 179
Negotiate authentication method, 63 opener.window.focus() function, 217n
.NET runtime, 135 OpenGL-based 3D graphics, 131n
Netflix, 134 open redirection, 263
Netscape Opera, 10
cookie specification, 151–152 data: URLs in, 168
and JavaScript, 95–96 deleting JavaScript function, 103
and same-origin policy, 142 and file extensions in URLs, 130
Netscape Navigator, 11 history.pushState() API, 256
network fenceposts, 264 local file access, 160
networking, HTTP-less, 257 modal dialogs for prompts, 219
New York Times, 192 and multiline headers, 45
newline, HTTP quirks in handling, 45 period-counting problem in, 159
news: scheme, 36 Presto parsing engine, 70n
NLS, 9 printable characters in, 32
nntp: scheme, 36 redirects to about:blank, 167
no-cache value, for Cache-Control header, 59 Refresh redirection to javascript:, 170
No Content status code (204), 54 and RFC 2047 encoding, 50
noncanonical encodings, 32n RSS and Atom renderers for, 124
nonencapsulating pseudo-protocols, 37 stored password retrieval, 228
non-HTTP resources SWF file handling without
character set detection for, 210–211 Content-Type, 199
proxies allowing requests for, 46 Worker API, 258
non-renderable file types, 124 OPTIONS method (HTTP), 53
non-US-ASCII text, in URLs, 32–35 Origin header, 240–241
no-store value, for Cache-Control header, 59 origin inheritance, 165–171
Not Found status code (404), 56 about:blank document, 166–167
Not Modified status code (304), 55, 59 for javascript: scheme, 169–170
Notification API, 259 origins
NTLM authentication method, 63 ambiguous or unexpected, 158–161
NUL character, and HTTP headers, 51 attempts to broaden, 143
NUL-containing strings, Ormandy, Tavis, 152
JavaScriptand,109 outerHTML property, 110–111
overwriting cookie, 62
O
P
Object Linking and Embedding
(OLE),136 P2P networking, 257
 tag, 83, 84 P3P (Platform for Privacy Preference), 193
data=..., 128 Panopticlick, 109
mixed content, 183 parallel HTTP connection design, 216
octal character codes, JavaScript  tag (HTML), for plug-ins, 128
support,112 _parent, as link target, 80
Ogg Theora, 119 parsing
OK status code (200), 54 behavior fundamentals, 73–76
OLE (Object Linking and JavaScript, 97–98
Embedding),136 modes for HTML documents, 71–72
onbeforeunload dialog, 219n resynchronization risks, 90–91
292 INDEX
parsing engines, for browsers, 70n pop-under, 217
Partial Content status code (206), 54 pop-up filtering, 217–218
partly restricted URL scheme, 188 ports
passive multimedia, CSP directive for, 243 default, for protocols, overriding, 27
password prohibited, 190–192
in credentials portion of URLs, 26 positioning windows, 219–222
form-based managers, 227–229 postMessage(...) API, 144–145, 258
methods for passing, 63 POST method (HTTP), 52, 81
Path parameter, for cookie, 61 postponing JavaScript execution, 101
path value, for cookie, 149–150 Pragma: no-cache request header, 59
payload inspection, by Internet prerendering web page, 258–259
Explorer,202 presentation, HTML tags for, 73
PDF documents130–131 PresentationHost.exe, 135
percent encoding, 31 pressed key, examining code of, 180
percent sign (%), for character Presto parsing engine, 70n
encoding,31 printable characters, browser
per-host connection limit, 216 treatmentof, 32
period (.), hostnames with, and cookie- privacy-related side channels, 184–185
setting algorithms, 159 private browsing modes, 249, 253
permissions, browser- and plug-in- private value, for Cache-Control header, 59
managed, 226–227 privileges, site, 225–234
permitted-cross-domain-policies parameter, prohibited ports, 190–192
forcrossdomain.xml file, 162 properties, definitions in CSS, 89
persistent workers, for background proposals
processes, 258 content-level, 258–259
Petkov, Petko D., 131 I/O interfaces, 259
phishing, 176n URL- and protocol-level, 256–257
plaintext protocol-host-port tuple, 142, 241
converting HTML to, 85 protocol-level information
as file format, 117–118 encryption, 64–66
for HTTP session information, 64 preserving, 78
 tag (HTML), 72 protocol-level proposals, 256–257
Platform for Privacy Preference (P3P), 193 protocols
plug-ins, 10–11 claimed by third-party applications, 36–37
ActiveX, 129, 136–137 default ports for, overriding, 27
Adobe Flash. See Adobe Flash registration, 256
application frameworks as basis, 131–136 in URL scheme name, 24
content, 83 proxy-originating error responses, browser
for content rendering, 127–138 processing, 47
CSP directive for, 243 proxy requests, 46–47
document rendering helpers, 130–131 pseudo-functions (CSS), 89
invoking, 128–130 pseudo-protocols
Microsoft Silverlight, 119, 134, 157 encapsulating, 37–38
for PDF documents, 130–131 nonencapsulating, 37
perils of content-type handling, 129–130 pseudo-URLs, 23, 24, 165
protocols claimed by, 36–37 restricted, 170–171
security rules, 153–158 and same-origin policy, 161
site permissions management, 226–227 public key cryptography, 64, 64n
Sun Java, 134–135, 157–158 Public Suffix List, 159
XML browser applications (XBAP), public value, for Cache-Control header, 59
135–136 public Wi-Fi networks, and HTTP
PNG file format, 83 cachingrisk, 60
pointers, management vulnerabilities, 266 Punycode, 34
poisoned browser cache, on trusted purging browser cache, 60
network, 60 PUT request (HTTP), 53
INDEX 293
Q 2616, 44
on GET requests, 58
query string in URLs, 28
on HTTP, 42
QuickTime (Apple), 119, 130, 132
on resolving ambiguities, 47
quote characters, in HTML, 71, 74
status codes for server response, 54
quoted-printable encoding scheme, 50n
on URLs, 24
quoted-string syntax, 48–49
2617, on authentication, 62
and cookies, 62
2818, on encapsulation, 64
for CSS property values, 89
2965, on Cookie2, 60
3490, 34
R
3492, 34
race conditions, in JavaScript, 101 3986, 24, 25, 33
raw text, for CSS property values, 89 4627, on JSON, 104
Really Simple Syndication (RSS), 123 4918, on WebDAV, 54
realm string, 62 6265, on cookies, 61
RealNetworks RealPlayer, 130, 132 browser permissions to examine
redirect headers, sending user- payload, 198
controlled,67 on HTTP, 48
Redirection status codes (300–399), 55 RFI (remote file inclusion), 265
Referer header, 43, 51 rgb(...) pseudo functions (CSS), 89
alternative to, 240 Riley, Chris John, 203
leakage, 263 Rios, Billy, 129
relative URLs, 24 risk management, 4–6
vs. absolute, 25 root object in JavaScript, 107
input filters, 40 Ross, David, 251
resolution of, 38–39 rotate(...) pseudo functions (CSS), 89
remote file inclusion (RFI), 265 RSS (Really Simple Syndication), 123
Request for Comments (RFC). See RFC rtsp: scheme, 36
(Request for Comments) runtime environment, for JavaScript,
request headers, in HTTP, 43 102–104
request types
form-triggered, 80–82
S
HTTP, 52–54
reserved characters, in HTML, 31–35, 71 Safari (Apple), 13
resource exhaustion attacks, 214 and credential portion of URLs, 26
response codes, server, 54–56 deleting JavaScript function, 103
response splitting, 45 hiding address bar, 221
Restricted sites zone, for Internet and multiline headers, 45
Explorer, 229–230 and realm string, 63
revalidation, 59 RSS and Atom renderers for, 124
RFC (Request for Comments) SOP bypass flaws, 142n
1630 stored password retrieval, 228
on query string format, 28 SWF file handling without
on reference parser, 25–26 Content-Type, 199
1738, on URLs, 24, 25 text/plain document type, 200–201
1866, on HTML 2.0, 69 third-party cookies, 193
1945 time limits on continuously executing
on HTTP, 42 scripts, 215
and TEXT token, 50 WebKit parsing engine, 70n
2046, on application/octet-stream, 200 safeInnerHTML API, 251
2047, for non-ISO-8859-1 string same-origin policy mechanism, 16
format,50 cookies impact on, 150–151
2109, on cookies, 60, 61, 62 for Document Object Model, 142–146
2183, on Content-Disposition header, 203 limitations, 173–186
2368, on query string format, 28 loopholes, 185
294 INDEX
and pseudo-URLs, 161 converting HTML to plaintext, 85
for web storage, 148 cross-domain communications in
for XMLHttpRequest API, 146–148 JavaScript, 162, 186
sandbox directive, 244 cross-domain resources, 186
sandboxed frames, 245–247, 250, 253 cross-domain XMLHttpRequest
scripting, forms and navigation (CORS),253
restrictions, 247 data: and javascript: URLs, 172
synthetic origins, 247 decoding parameters received
sanitization throughURLs, 40
in-browser HTML, 250–251 embedding plug-in-handled active con-
of tags, 76 tent from third parties, 162
Scalable Vector Graphics (SVG), 83, enabling plug-in-handled files, 138
121–122 filtering user-supplies CSS, 93
scale(...) pseudo functions (CSS), 89 generating documents with partly
schemes attacker-controlled contents, 212
current list of valid names, 24 generating HTML documents with
input filters, 40 attacker-controlled bits, 85
name in URLs, 24–25 good practices for all websites, 212
navigation to sensitive, 188 hosting user-generated files, 212
Schwab, Charles, 230–231 hosting XML-based document
screen object (JavaScript), 108 formats,125
script-nonce directive, 244 hosting your own plug-in-executed
scripts, 83 content, 163
access to other documents, 111–112 hygiene for all HTML documents, 85
browser-side, 95–116 interacting with browser objects on
connection limits, 216–217 client side, 115
dialog use restrictions, 218–219 launching non-HTTP services, 195
execution time and memory use restric- loading remote scripts, 115
tions, 215–216 loading remote stylesheets, 93
pop-up filtering, 217–218 markup filter for user content, 86
rogue, 213–224 non-HTML document types, 125
specifying charset, 209 parsing JSON from server, 115
script-src directive (CSP), 242 permitting user-created 
 tag (HTML), 72 gadgetson site, 224
JSON and, 104–105 private browsing modes, 253
language parameter, 113n putting attacker-controlled values
parsing and, 98 intoCSS, 93
src parameter, 181 relying on HTTP cookies for
 tag (XHTML), 78 authentication, 162
scrollbar, document-level, 180 requesting elevated permissions within
Secure attribute, for cookie, 61 web application, 232
secure cookies, 150, 162 sandboxed frames, 253
security security hygiene for all websites, 186
actions subject to checks, 141 security policy hygiene for all
definition, 2–4 websites,162
new and upcoming features, 235–253 security-sensitive UIs, 224
practical approaches, 7–8 sending user-controlled location
quality assurance, 7 headers, 67
Security.allowDomain(...) method, for sending user-controlled redirect
Flash,155 headers, 67
security dialogs, attacks on, 222–223 serving plug-in-handled files, 138
security engineering cheat sheet Strict Transport Security, 253
building web applications on internal third-party cookies for gadgets or sand-
networks, 195 boxed content, 195
Content Security Policy (CSP), 253 toStaticHTML() API, 253
INDEX 295
security engineering cheat sheet site privileges, 225–234
(continued) browser- and plug-in-managed permis-
URL input filters, 40 sions, 226–227
URLs constructed based on user skew(...) pseudo functions (CSS), 89
input,40 SMTP (Simple Mail Transfer Protocol),
user-controlled filenames in 27, 44, 190
Content-Disposition headers, 67 social engineering attacks, 32n
user-controlled scripts, 116 software, difficulty analyzing behavior of, 3
user data in HTTP cookies, 67  tag (HTML), 73
user-specified class values on HTML SPDY (Speedy), 257
markup, 93 Spyglass Mosaic, 10
user-supplied data inside JavaScript SSL, warnings appearance, 66
blocks, 115 Standard Generalized Markup Langauge
writing browser extensions, 163 (SGML), 9
writing plug-ins or extensions recogniz- statistical forecasting, 6
ing privileged origins, 232 Sterne, Brandon, 242
XDomainRequest, 253 Stone, Paul, 180
XSS filtering, 253 Strict Transport Security (STS),
security model extension frameworks, 248–249,253
236–241 strict XML mode, 72
cross-domain requests, 236–239 stylesheets
XDomainRequest, 239–240 CSP directive for, 243
security model restriction frameworks, specifying charset, 209
241–249  tag (HTML), 72
See Other status code (303), 55  tag (XHTML), 78
selector suffixes, in CSS, 88 subframes, CSP directive for, 243
_self, as link target, 80 subresources
self-closing tag syntax, 72 cross-origin, 183
semantic web, 72–73 markup-controlled charset on, 209–210
semicolon (;), as delimiter Sun Java, 134–135, 157–158