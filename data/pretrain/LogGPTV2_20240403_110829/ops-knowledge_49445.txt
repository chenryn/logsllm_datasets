Question: An application developer argues that specifying an output encoding like UTF-8 in the HTTP header is sufficient to prevent XSS attacks on a web page. What is the best counterargument to this claim?
"A": "Specifying the encoding does not prevent XSS if the downstream component does not support or respect the specified encoding.",
"B": "All modern browsers automatically use UTF-8 encoding, rendering the specification in the header redundant.",
"C": "Output encoding should be handled by the client's browser, not the server, to ensure compatibility.",
"D": "UTF-8 encoding can only be used for English language web pages, limiting its effectiveness in a global application."
Answer: A