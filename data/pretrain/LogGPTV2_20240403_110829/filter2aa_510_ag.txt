# Chapter 8: Working With File Services

## AFP (Apple Filing Protocol) Serveradmin Commands

In addition to the standard `start`, `stop`, `status`, and `settings` commands, you can use `serveradmin` to issue the following service-specific AFP commands.

### Listing Connected Users
You can use the `getConnectedUsers` command to retrieve information about connected AFP users. This is particularly useful for retrieving session IDs, which are needed to disconnect or send messages to users.

**Command:**
```bash
$ sudo serveradmin command afp:command=getConnectedUsers
```

**Output:**
The following array of settings is displayed for each connected user:
- `afp:usersArray:_array_index:i:disconnectID`
- `afp:usersArray:_array_index:i:flags`
- `afp:usersArray:_array_index:i:ipAddress`
- `afp:usersArray:_array_index:i:lastUseElapsedTime`
- `afp:usersArray:_array_index:i:loginElapsedTime`
- `afp:usersArray:_array_index:i:minsToDisconnect`
- `afp:usersArray:_array_index:i:name`
- `afp:usersArray:_array_index:i:serviceType`
- `afp:usersArray:_array_index:i:sessionID`
- `afp:usersArray:_array_index:i:sessionType`
- `afp:usersArray:_array_index:i:state`

### Sending a Message to AFP Users
You can use the `sendMessage` command to send a text message to connected AFP users. Users are specified by session ID.

**Command:**
```bash
$ sudo serveradmin command afp:command=sendMessage afp:message="message-text" afp:sessionIDsArray:_array_index:0=sessionid1 afp:sessionIDsArray:_array_index:1=sessionid2 ...
```

**Parameters:**
- `message-text`: The message that appears on client computers.
- `sessionidn`: The session ID of a user you want to receive the message.

### Disconnecting AFP Users
You can use the `disconnectUsers` command to disconnect AFP users. Users are specified by session ID. You can also specify a delay time before disconnect and a warning message.

**Command:**
```bash
$ sudo serveradmin command afp:command=disconnectUsers afp:message="message-text" afp:minutes=minutes-until afp:sessionIDsArray:_array_index:0=sessionid1 afp:sessionIDsArray:_array_index:1=sessionid2 ...
```

**Parameters:**
- `message-text`: The text of a message that appears on client computers in the disconnect announcement dialog.
- `minutes-until`: The number of minutes between the time the command is issued and the users are disconnected.
- `sessionidn`: The session ID of a user you want to disconnect.

### Canceling a User Disconnect
You can use the `cancelDisconnect` command to cancel a `disconnectUsers` command. Users receive an announcement that they are no longer scheduled to be disconnected.

**Command:**
```bash
$ sudo serveradmin command afp:command=cancelDisconnect afp:timerID=timerID
```

**Parameters:**
- `timerID`: The integer value of the `afp:timerID` parameter output when you issued the `disconnectUsers` command.

### Listing AFP Service Statistics
You can use the `getHistory` command to display a log of periodic samples of the number of connections and the data throughput. Samples are taken once each minute.

**Command:**
```bash
$ sudo serveradmin command afp:command=getHistory afp:variant=statistic afp:timeScale=scale
```

**Parameters:**
- `statistic`: The value you want to display. Valid values: `v1` (number of connected users), `v2` (throughput in bytes/sec).
- `scale`: The length of time in seconds, ending with the current time, for which you want to see samples. For example, to see 30 minutes of data, you would specify `afp:timeScale=1800`.

### Viewing AFP Log Files
You can use `tail` or any other file listing tool to view the contents of the AFP service logs.

**Command:**
```bash
$ tail log-file
```

To see where the current AFP error and activity logs are located, use the `getLogPaths` command.

**Command:**
```bash
$ sudo serveradmin command afp:command=getLogPaths
```

**Output:**
- `afp:accesslog`: The location of the AFP service access log.
- `afp:errorlog`: The location of the AFP service error log.

## NFS (Network File System) Service

### Starting and Stopping NFS Service
NFS service is started automatically when a share point is exported using NFS. The NFS daemons that satisfy client requests continue to run until there are no more NFS exports and the server is restarted.

**Commands:**
- **Check NFS Service Status:**
  ```bash
  $ sudo serveradmin status nfs
  ```
- **See Complete NFS Status:**
  ```bash
  $ sudo serveradmin fullstatus nfs
  ```

### Changing NFS Service Settings
Use the following parameters with the `serveradmin` command to change settings for the NFS service.

**Parameters:**
- `nbDaemons`: Default = 6
- `useTCP`: Default = yes
- `useUDP`: Default = yes

## FTP (File Transfer Protocol) Service

### Starting and Stopping FTP Service
**Commands:**
- **Start FTP Service:**
  ```bash
  $ sudo serveradmin start ftp
  ```
- **Stop FTP Service:**
  ```bash
  $ sudo serveradmin stop ftp
  ```

### Checking FTP Service Status
**Commands:**
- **Check FTP Service Status:**
  ```bash
  $ sudo serveradmin status ftp
  ```
- **See Complete FTP Status:**
  ```bash
  $ sudo serveradmin fullstatus ftp
  ```

### Changing FTP Settings
You can change FTP service settings using the `serveradmin` application.

**Command:**
```bash
$ sudo serveradmin settings ftp:setting=value
```

**Parameters:**
- `setting`: An FTP service setting. To see a list of available settings, type:
  ```bash
  $ sudo serveradmin settings ftp
  ```
- `value`: An appropriate value for the setting.

### List of FTP Service Settings
- `administratorEmailAddress`: Default = "user@hostname"
- `anonymous-root`: Default = "/Library/FTPServer/FTPRoot"
- `anonymousAccessPermitted`: Default = no
- `authLevel`: Default = "STANDARD"
- `bannerMessage`: Default = "This is the 'Banner' message for the Mac OS X Server's FTP server process. FTP clients will receive this message immediately before being prompted for a name and password. PLEASE NOTE: Some FTP clients may exhibit problems if you make this file too long. ----------------------------------"
- `chrootType`: Default = "STANDARD"
- `enableMacBinAndDmgAutoConversion`: Default = yes
- `ftpRoot`: Default = "/Library/FTPServer/FTPRoot"

### Viewing the FTP Transfer Log
You can use `tail` or any other file listing tool to view the contents of the FTP transfer log.

**Command:**
```bash
$ tail /Library/Logs/FTP.transfer.log
```

To see where the current transfer log is located, use the `getLogPaths` command.

**Command:**
```bash
$ sudo serveradmin command ftp:command=getLogPaths
```

### Checking for Connected FTP Users
**Commands:**
- **Using `ftpcount`:**
  ```bash
  $ ftpcount
  ```
- **Using `serveradmin`:**
  ```bash
  $ sudo serveradmin command ftp:command=getConnectedUsers
  ```

## Windows (SMB) Service

### Starting and Stopping SMB Service
**Commands:**
- **Start SMB Service:**
  ```bash
  $ sudo serveradmin start smb
  ```
- **Stop SMB Service:**
  ```bash
  $ sudo serveradmin stop smb
  ```

### Checking SMB Service Status
**Commands:**
- **Check SMB Service Status:**
  ```bash
  $ sudo serveradmin status smb
  ```
- **See Complete SMB Status:**
  ```bash
  $ sudo serveradmin fullstatus smb
  ```

### Viewing SMB Settings
**Commands:**
- **List All SMB Service Settings:**
  ```bash
  $ sudo serveradmin settings smb
  ```
- **List a Particular Setting:**
  ```bash
  $ sudo serveradmin settings smb:setting
  ```

### Changing SMB Settings
You can change SMB service settings using the `serveradmin` command.

**Command:**
```bash
$ sudo serveradmin settings smb:setting=value
```

**Parameters:**
- `setting`: An SMB service setting. To see a list of available settings, type:
  ```bash
  $ sudo serveradmin settings smb
  ```
- `value`: An appropriate value for the setting.

### List of SMB Service Settings
- `adminCommands:homes`: Whether home directories are mounted automatically when Windows users log in so you don’t have to set up individual share points for each user. Can be set to: `yes | no`. Corresponds to the “Enable virtual share points” checkbox in the Advanced pane of Window service settings in the Server Admin application.

---

This chapter provides a comprehensive guide to managing various file services, including AFP, NFS, FTP, and SMB, using the `serveradmin` command. Each section includes detailed commands, parameters, and examples to help you effectively manage your file services.