5.67
5.75
5.85
23.75
4.78
1.80
3.97
5.03
3.91
7.68
5.68
9.09
11.83
3.70
5.21
5.00
2.87
1
1
0 a
1
1
1
0
1
1
1
1
1
1
1
1
1
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0 b
1
1
1
1
1
1
1
0
1
1
1
1
1
1
1
Topology Information Secured
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
Can Alter?
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
aThe attacker does not know the impedance of this line.
bThis line is not ﬁxed in the topology (i.e., it is not a part of the core topology.
has no speciﬁcation on the rest of the states. That is, an
unspeciﬁed state might be attacked or not. For example, if
the attacker targets to attack states 1, 4, and 6, then:
cx 1 ∧ cx 4 ∧ cx 6
(25)
It is possible to launch a UFDI attack on a number of
measurements if the attacker can form a cut that divides the
grid into two disjoint islands [11]. The attacker can attack all
of the buses of one side of the cut with respect to the other side
by altering the power ﬂow and consumption measurements of
the lines and the buses on the cut. However, in this case, all of
the attacked buses have the same change of their states (i.e.,
phase angles). If the state change of a bus is the same as that
of the neighboring buses, then there is no state change relative
to each other. In this case, the impact due to the attack might
not be signiﬁcant. Therefore, we also consider the constraints
specifying whether state changes are required to be different.
For example, if the attacker requires that state 1 and state 4
must have a different amount of change, then:
Fig. 1. The diagram of IEEE 14-bus test system. Red circles are used for bus
numbers, green squares are for transmission line numbers, and round cornered
blue squares are for measurement numbers.
(θ1 (cid:5)= θ4) ∧ ···
(26)
I. An Example Case Study
H. Implementation
We encode the system conﬁguration and the constraints
into SMT [8]. We write a program leveraging the Z3 .Net
API [12] for encoding the formalization of our proposed false
data injection model. We encode our formalizations mainly
using Boolean (i.e., for logical constraints) and real (e.g., for
the relation between power ﬂows or consumptions with states)
terms. The system conﬁgurations and the constraints are given
in a text ﬁle (input ﬁle). By executing the model (in Z3),
we obtain the veriﬁcation result as either satisﬁable (sat) or
unsatisﬁable (unsat). If the result is unsat, it means that there
is no attack vector that satisﬁes the constraints. In the case
of sat, we get the attack vector from the assignments of the
variables, cz is (and cbis), which represent the measurements
required to alter for the attack.
We present our results on the IEEE 14-bus test system (see
Fig. 1) [13]. The input about the line information is shown
(partially) in Table II. The line information includes a set
of data for each line: line number, end buses of the line,
a value indicating the line admittance, the knowledge status
(i.e., whether the line admittance is known to the attacker),
and three data about this line regarding the grid topology
(i.e., whether this line is included in the actual
topology,
whether its existence is ﬁxed in the topology, and whether
associated topology information is secured). In this example,
the admittances of lines 3, 7 and 17 are unknown. All of the
20 lines (as shown in Fig. 1) are included in the true topology,
though lines 5 and 13 are not a part of the core topology (i.e.,
these lines can be kept open if necessary).
The input about the measurements is partially shown in
161161161
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:32:00 UTC from IEEE Xplore.  Restrictions apply. 
MEASUREMENT INFO OF THE EXAMPLE IN SECTION III-I
TABLE III
Measurement #
1
2
3
4
5
. . .
11
12
13
14
15
. . .
21
22
23
24
25
. . .
41
42
43
44
45
. . .
Is Recorded?
1 a
1
1
1
0
. . .
1
1
1
0
1
. . .
1
0
1
1
1
. . .
1
1
1
1
1
. . .
Secured
1 b
1
0
0
0
. . .
0
0
0
0
1
. . .
0
0
0
0
1
. . .
1
0
0
0
1
. . .
Can Alter?
0
0
1 c
1
0
. . .
1
1
1
0
1
. . .
1
0
1
1
1
. . .
0
1
1
1
0
. . .
aThe measurement is taken or recorded for state estimation.
bThe measurement is secured, especially in terms of integrity.
cThe attacker has the accessibility to alter the measurement.
Table III. Since this system has 14 buses and 20 lines,
the maximum number of potential measurements is (14 +
2×20) or 54. Each row of Table III includes (i) whether the
measurement is taken for state estimation (all the potential
measurements are taken except measurements 5, 10, 14, 19,
22, 27, 30, 35, 43, and 52), (ii) whether the measurement is
secured (measurements 1, 2, 6, 15, 25, 32, and 41 are secured)
and (iii) whether the attacker has the accessibility to alter the
measurement. Let us now consider two different objectives of
the attacker.
Attack Objective 1. Let the attacker’s objective be to attack
states 9 and 10 but in different amounts. Due to the resource
limitation, he cannot alter more than 16 measurements at
a time, and these measurements cannot be distributed in
more than 7 substations (i.e., buses). The execution of the
model corresponding to this example returns sat along with
the assignments to different variables of the model. From
the assignments, we ﬁnd that the measurements selected for
attacking states 9 and 10 are 8, 9, 16, 18, 20, 28, 29, 36,
38, 40, 44, 47, 50, 51, 53, and 54. These measurements are
distributed in buses 4, 7, 9, 10, 11, 13, and 14. If the attacker’s
resources are more limited (e.g., 15 measurements and/or 6
buses only), then unsat is returned. However, if the attacks on
states 9 and 10 can be the same, then there is a solution. In
this case, the measurements for false data injection are 8, 9,
11, 13, 28, 29, 31, 33, 39, 44, 46, 47, 49, 51, and 53, while the
corresponding buses are 4, 6, 7, 9, 11, and 13. In both of these
cases, along with 9 and 10, some other states are also required
to be corrupted; only states 9 and 10 cannot be attacked alone.
Attack Objective 2. Here the attacker’s objective is to attack
state 12 only, i.e., no other states will be affected. The exe-
cution of the corresponding model shows that measurements
12, 32, 39, 46, and 53 are required to alter in this case. If
measurement 46 is considered as secured, then no attack vector
is possible. Let us now consider that the attacker has the ability
to alter the topology information. In this scenario, we have
a solution, where line 13 is excluded from the topology by
injecting false data into the topology information. In this case,
the measurements for false data injection are 12, 13, 32, 33,
39, and 53, which include necessary changes required for the
state change along with the topology change.
IV. SYNTHESIS OF SECURITY ARCHITECTURE FOR
PROTECTING STATE ESTIMATION
In the last section, we have described the model for ﬁguring
out potential UFDI attacks under given constraints. The pro-
posed veriﬁcation model allows a grid operator to understand
potential threats on state estimation with respect to an expected
scale of attack (expressed in terms of different attack at-
tributes) and to take necessary security measures accordingly.
However, we need an automated solution to ﬁnd out such
a security architecture. In this section, we present such an
automated mechanism for synthesizing security architecture.
A. Background
Though the authors in [6], [7] show that UFDI attacks can
be defended if a strategically chosen set of measurements are
secured, they only consider a speciﬁc attack model, where
adversaries have perfect knowledge and they are not limited
in capability. Based on this worst case attack model, the set
of measurements to be secured can exceed the grid operator’s
resource (budget). Therefore, a security design is required that
can give security within the limited capability of the grid
operator, while keep the power system state estimation secure
with respect to an attack model (security requirements).
Our solution utilizes the veriﬁcation model to ﬁnd out a
security architecture. A security architecture typically includes
a list of measurements that are required to be secured. Since
securing a number of measurements distributed in many sub-
stations are very costly compared to a set of measurements
distributed in a small number substations, we mainly focus on
substation, i.e., bus speciﬁc security architecture. Moreover,
securing a bus usually means securing all of the measurements
taken in that bus. A bus can be secured by deploying a PMU
(can be multiple for a large bus) at the bus with necessary
security measures [14]. By the security measures, we mainly
consider the data integrity protection of the measurements.
Since the PMU can provide voltage phasor of the bus and
current phasors of all the branches incident to the bus, if
the PMU is secured then all of these measurements become
secured. At the unit level, security is being provisioned by
existing PMU vendors [15]. Here,
though we propose a
mechanism to ﬁnd the security architecture as a set of buses
to be secured, similar mechanism can be used for synthesizing
security architecture with respect to measurements only.
B. Synthesis Design
Fig. 2 shows the ﬂow diagram of the security architecture
synthesis mechanism for resisting state estimation attacks. It