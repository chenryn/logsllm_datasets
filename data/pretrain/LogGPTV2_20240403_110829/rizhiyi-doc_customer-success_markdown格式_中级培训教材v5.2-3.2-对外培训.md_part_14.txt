appname:nginx
|eval new_status=if(nginx.status=="200","正常","异常")
|statscount()asCOUNTbynew_status
|autoregress'COUNT'asnew p=1
|eval total=COUNT+new
|evalsuccess=new/total
|evalfailure=COUNT/total
结果如图：
SPL说明：
 eval不但可以在语句中生成临时字段；也可以在统计后对字段进行二次计算并形成新列。
 上例中仅保留最终计算结果皆可，您有很多数据不需要，那么如何处理呢？
SPL：fields 只留下想要的字段
appname:nginx
|eval new_status=if(nginx.status=="200","正常","异常")
|statscount()asCOUNTbynew_status
3-141
日志学院
|autoregress'COUNT'asnew p=1
|eval total=COUNT+new
|evalsuccess=new/total
|evalfailure=COUNT/total
|fieldssuccess,failure
|where!empty(success)
结果如图：
SPL说明：
 本实例通过fields命令仅保留了success和failure两个字段。但是中间还存在空行。通
过where 命令将空行过滤掉即可。!empty() 为非空函数。取空为empty()。
一脉相通
道生一，一生二，二生三，三生万物。——道德经
万事互相效力。——圣经
事事相互关联相互影响，业务系统性能、主机性能指标、业务模块逻辑、网络吞吐量等等在
出现异常时都会成为事故的导火索。在日常对各种因素加以关联分析，也许可以改善或降低
运维故障的概率。本小节将为您介绍如何利用SPL命令关联分析数据。
案例 5：数据关联与子查询
为了您能好的理解接下来要介绍的内容，我们为您准备了另外两个测试数据：人员信息和人
员喜好信息，如图：
3-142
日志学院
那么现在您可能想像SQL一样将两个表的信息关联起来看。实际上换成日志原理也是一样
的。
导入上述两个测试文件，即可开始本次的案例学习。测试文件导入方法如下：
1、导入favor日志样例文件，按规则输入appname:workertag:favor
2、导入info日志样例文件，按规则输入appname:workertag:info
3-143
日志学院
导入后效果：
通过上面的学习，您可以轻松的列出样例日志属性。
appname:worker AND tag:info
|tablejson.name,json.age
3-144
日志学院
appname:worker ANDtag:favor
|tablejson.name,json.favorite_fruit
思考：我们已经得到了两张数据表，现在如何将人员姓名、年龄与喜欢的水果对应起来？
3-145
日志学院
SPL：join 关联分析
appname:workerANDtag:info
|tablejson.name,json.age
|jointype=leftjson.name
[[
appname:worker ANDtag:favor
|tablejson.name,json.favorite_fruit
]]
结果如图：
SPL说明：
 通过上例我们可以看出利用join 命令可以用类似sql中的key将两个数据表进行关联。
 type定义了关联方式。type=left不要求结果中必须有匹配的字段，type=inner要求结果
中必须有匹配的字段。
 从上例中我们看到“[[]]”扩起来一部分SPL查询，双中括号扩起来部分我们成为子查询。
一个子查询常用于作为另外一个SPL查询的参数。子查询将在外部查询执行之前被执行。
上述语句红，我们先获取了水果表，然后获取年龄表，之后才将两个表进行关联。
思考：回顾autoregress中计算比率的问题，如果用join如何处理？
appname:nginx
|evalnew_status=if(nginx.status=="200","success","failure")
|wherenew_status=="success"
|statscount()assuccbyappname
|jointype=leftappname
[[
appname:nginx
3-146
日志学院
|evalnew_status=if(nginx.status=="200","success","failure")
|wherenew_status=="failure"
|statscount()asfailbyappname
]]
|evaltotal=succ+fail
结果如图：
注：
 其实实际工作中，计算比率不需要那么复杂，一个top命令就可以解决。
SPL：append 与同环比
starttime="-1d/d"endtime="now/d" appname:nginx
|buckettimestampspan=1hasts
|evaltime=formatdate(ts,"HH")
|statscount()as_countbytime
|evalgroup="yesterday"
|append
[[
starttime="now/d"endtime="now" appname:nginx
|buckettimestampspan=1hasts
|evaltime=formatdate(ts,"HH")
|statscount()as_countbytime
|evalgroup="today"
]]
结果如图：
3-147
日志学院
SPL说明：
 append指令主要是将子查询结果附加在主查询结果之后，使用append可将两个趋势
图放到同一张图上进行展示，一般用需今昔数据对比。
 append指令一般用于数据对比，append要求两部分数据的X轴单位及刻度相同，即
上述的time字段相同；append同时需要在数据整理时为两部分数据生成一个共享分
组字段“group”，以便区分不同的图形。
 上例中您可以看到采用了两天的数据对比，即当天和前一天的数据。SPL语句中采用了
固定时间的写法starttime和endtime。starttime和endtime 被使用后其优先级高于日志
易界面上时间选择框处选择的时间范围。详细用法您可以参考案例6或产品文档《日志
易搜索指令参考》常见时间格式部分内容。
SPL指令执行结果：
3-148
日志学院
图表配置方法如下：
3-149
日志学院
案例 6：自定义 Starttime、endtime 进行搜索
starttime与endtime主要有两种用法，分别展示如下：
 相对时间：starttime="-1d"endtime="now"*
以当前时间为基准，取最近一天的数据。
 精确时间：starttime=2019-10-28:12:33:21endtime=2019-11-01:01:10:00*
以starttime与endtime指定的精确时间范围取数据。
高歌猛进
日志易机器学习功能不再在本文中阐述，如果您还想继续学习，我们建议您参阅《日志易搜
索指令》和《日志易搜索样例》或联系日志易公司官方网站获取详细资料。
附件：
1. 日志样例：网页日志样例access.log.10.gz
2. 正则解析规则：nginx日志解析规则.tar
3.join关联分析样例：favor.list、worker_info.list
3.2. 高级搜索视图
每次搜索，日志易都会为您生成简单直观的时间序列趋势图，这是搜索时间范围内所有索引
日志事件的直方图，你可以利用直方图比较随着时间推移的日志属性。如果您需要更多统计
及可视化功能，使用统计视图和报表功能。
3-150
日志学院
日志易统计视图分为两种： 统计菜单视图和高级搜索视图。统计菜单视图初级部分已经学
习，这节主要介绍高级搜索视图的使用。
高级搜索视图即对高级搜索结果用二维表格形态展示返回的数据集合。这也是日志易高级搜
索结果的默认视图。
例如：
*|statsavg(raw_message_length)asavg_length,count(apache.clientip)
asip_countbyappname|sortbyip_count
对于表格内的数值内容，日志易支持多种高亮颜色方案。在表头对应列名处点击编辑如下所
示：
这里，您可以选择的颜色方案有三种：
• 序列：日志易提供连续序列和离散序列各6种预设方案。如下图：
3-151
日志学院
也可以自定义序列方案。如下图：
 区间：指定当该列单元格内值在某个数值区间内时采用什么颜色；
 指定值：指定当该列单元格内值等于某个数值时采用什么颜色。日志易同样提供了一个
自动分配颜色的机制。
此外，对于部分单元格内的时序统计，日志易还支持特殊的可视化效果。例如：
*|statssparkline(sum(raw_message_length),30m),count(apache.clientip)asip_countby
appname|sortbyip_count
对高级搜索结果支持以多种可视化形态进行数据可视化。您只需点击”类型”子菜单中对应的
图表格式，选择展现的字段即可。
3-152
日志学院
如何选择恰当的可视化效果，最大化的体现场景数据的价值，您可以参考AndrewAbela博
士有关选择图表的方法总结。其中文版本如下图：
日志易当前支持的可视化类型分为六大类。在选择好可视化类型后，下方即会呈现该类型的
可视化内容，因为系统内部会自动的在设置中配置字段（自动配置字段详情见下文针对不同
3-153
日志学院
图的讲解），也可手动更改默认的字段配置，六大类可视化类型每类内部所用到的配置参数
相同，因此大多数同类型可视化效果之间可以直接切换，无需重复填写字段配置：
1. 序列：曲线图、面积图、散点图、柱状图
2. 维度：饼状图、玫瑰图、条形图、旭日图
3. 关系：和弦图、桑基图、力图
4. 复合：区间图、多Y轴图
5. 地图：热力地图、攻击图、区划地图、统计地图
6. 其他：单值、水球图、字符云图、循序图、雷达图、漏斗图、矩阵热力图、调用链
本材料仅列举了各个视图的示例，关于该视图的配置请参考《日志易产品使用手册》。
序列
作为序列类图，自动配置的三个参数及默认的字段取值规则:
1.x轴：取第一个分组字段
2.y轴：取第一个统计数值
3. 分组（可添加多组）：取第二个分组字段
序列类图形包括以下几种：
曲线图：展示一个连续的二维数据；展示某个事件发展的趋势；比较多个不同的数据序列；
面积图：主要用于传达趋势的大小；
堆叠面积图：有多个数据序列，并想分析每个类别的部分到整体的关系，展示部分量对于总
量的贡献时，此时可使用堆叠面积图展示；
散点图：通常用来识别两个变量之间的相关性或用来观察他们的关系；
柱状图：使用水平或垂直的柱子来显示不同类别之间的数值；
分组柱状图：将分组变量或类别与具有相同变量或类别类型的其他组进行比较；
堆叠柱状图：展示每一个分类的总量，以及该分类包含的每个小分类的大小及占比，因此非
常适合处理部分与整体的关系，如展现班级人数与男女生的人数比。
曲线图
曲线图主要用来展示数据相随着时间推移的趋势或变化。曲线图非常适合用于展示一个连续
的二维数据，如网站访问量或平均负载的波动。在日志易中，用户可以选择数据集中相应的
字段作为X轴、Y轴。
曲线图除了展示某个事件发展的趋势，还可以用来比较多个不同的数据序列。在日志易中，
用户还可以选择数据集中代表序列标记的文本字段作为分组字段。例如，搜索语句如下:
logtype:apacheAND(apache.clientip:171.221.120.144ORapache.clientip:121.236.143.48)|
statscount()byapache.clientip,apache.request_path
针对以上搜索结果，点选曲线图，X轴字段自动配置为第一个分组字段，也就是
“apache.request_path”，Y轴字段默认用第一个统计数值“count()”，分组字段默认用第二个
分组字段“apache.clientip”:
3-154
日志学院
可见以上图案不能很好的体现关于apache.clientip的数据特征，因此需要用户在输入搜索语
句时注意输入字段的先后顺序，序列类图的字段在语句中的位置将直接影响x轴与分组字段。
以上情况需要用户将分组与x轴参数对调，搜索语句改为：
logtype:apacheAND(apache.clientip:171.221.120.144ORapache.clientip:121.236.143.48)|
statscount()byapache.request_path,apache.clientip
从而更方便从请求路径和数量两个维度来观察两个IP的数据变化趋势，如下图，我们可以