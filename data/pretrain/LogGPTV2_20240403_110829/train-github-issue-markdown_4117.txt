### 问题描述
在使用 `FlutterViewController` 通过 `initWithEngine` 初始化并从原生页面推入后，当从导航栈中弹出时，内存没有被释放。如何正确地释放引擎？

### 代码示例
```objective-c
- (void)handleShowAction {
    if (_engine == nil) {
        _engine = [[FlutterEngine alloc] initWithName:@"io.flutter" project:nil];
        [_engine runWithEntrypoint:nil];
    }
    FlutterViewController *feedVC = [[FlutterViewController alloc] initWithEngine:_engine nibName:nil bundle:nil];
    [(UINavigationController *)self.window.rootViewController pushViewController:feedVC animated:YES];
}

- (void)handleDismissAction {
    [(UINavigationController *)self.window.rootViewController popViewControllerAnimated:YES];
    _engine = nil;
}
```

### 环境信息
- **Flutter**: 
  - 渠道: faceu_dev_1.0.0
  - 版本: v1.0.1-pre.5
  - 框架修订: 0fd43583b8 (3天前)
  - 引擎修订: 7375a0f414
  - Dart版本: 2.1.0 (build 2.1.0-dev.9.4 f9ebf21297)
- **iOS工具链**:
  - Xcode 10.0, 构建版本 10A255
  - ios-deploy 2.0.0
  - CocoaPods 1.5.3
- **Android工具链**:
  - 未找到Android SDK
- **开发环境**:
  - Visual Studio Code (版本 1.29.1)，未安装Flutter扩展

### 解决方案
为了确保 `FlutterEngine` 的内存能够正确释放，你需要显式地调用 `destroyContext` 方法来销毁引擎上下文，并释放相关资源。以下是优化后的代码：

```objective-c
- (void)handleShowAction {
    if (_engine == nil) {
        _engine = [[FlutterEngine alloc] initWithName:@"io.flutter" project:nil];
        [_engine runWithEntrypoint:nil];
    }
    FlutterViewController *feedVC = [[FlutterViewController alloc] initWithEngine:_engine nibName:nil bundle:nil];
    [(UINavigationController *)self.window.rootViewController pushViewController:feedVC animated:YES];
}

- (void)handleDismissAction {
    [(UINavigationController *)self.window.rootViewController popViewControllerAnimated:YES];
    
    // 销毁引擎上下文
    [_engine destroyContext];
    _engine = nil;
}
```

通过调用 `[_engine destroyContext]`，你可以确保 `FlutterEngine` 的所有资源都被正确释放，从而避免内存泄漏的问题。

### 注意事项
- 确保在 `handleDismissAction` 中调用 `destroyContext` 之前，`_engine` 不为空。
- 如果你有多个地方需要使用 `FlutterEngine`，建议将 `destroyContext` 的调用封装在一个单独的方法中，以提高代码的可维护性。