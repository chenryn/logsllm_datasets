::: section
::: titlepage
## []{#managing-the-validity-of-certificates-in-idm_managing-certificates-in-idm.html#restoring-certificates-with-the-integrated-IdM-CAs-using-IdM-CLI_restoring-certificates}使用 IdM CLI 恢复带有集成 IdM CA 的证书 {.title}
:::
完成此流程，以使用 IdM CLI 恢复因为原因 6 ：`证书冻结`{.literal}
而撤销的 IdM 证书。
::: itemizedlist
**流程**
-   使用 `ipa cert-remove-hold`{.literal} 命令并指定证书序列号。例如：
    ``` literallayout
    $ ipa cert-remove-hold 1032
    ```
:::
:::
:::
:::
[]{#configuring-idm-for-smart-card-auth_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-certificates-in-idm.html#configuring-idm-for-smart-card-auth_managing-certificates-in-idm}第 7 章 为智能卡验证配置身份管理 {.title}
:::
使用基于智能卡的验证是使用密码进行验证的替代选择。您可以将用户凭证以私钥和证书的形式存储在智能卡上，并使用证书、特殊的软件和硬件来访问它们。将智能卡放在读卡器或
USB 端口中，并为智能卡提供 PIN 代码，而不是提供您的密码。
身份管理(IdM)支持使用如下方式的智能卡身份验证：
::: itemizedlist
-   IdM 证书颁发机构发布的用户证书
-   外部证书颁发机构发布的用户证书
:::
这个用户用例演示了如何在 IdM
中为两种类型的证书设置智能卡验证。在用户故事中，`smartcard_ca.pem`{.literal}
CA 证书是包含信任的外部证书颁发机构的证书的文件。
用户会包括以下模块：
::: itemizedlist
-   [为智能卡验证配置 IdM
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
-   [为智能卡验证配置 IdM
    客户端](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
-   [在 IdM Web UI
    的用户条目中添加证书](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#proc-add-cert-idm-user-webui_configuring-idm-for-smart-card-auth){.link}
-   [在 IdM CLI
    中向用户条目中添加证书](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#proc-add-cert-idm-user-cli_configuring-idm-for-smart-card-auth){.link}
-   [安装用来管理和使用智能卡的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth){.link}
-   [在智能卡中存储证书](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#storing-a-certificate-on-the-smart-card_configuring-idm-for-smart-card-auth){.link}
-   [使用智能卡登录到
    IdM](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#logging-in-to-idm-with-smart-cards_configuring-idm-for-smart-card-auth){.link}
-   [使用智能卡身份验证配置 GDM
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#configuring-gdm-access-using-smart-card-authentication_configuring-idm-for-smart-card-auth){.link}
-   [使用智能卡验证配置 su
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#configuring-su-access-using-smart-card-authentication_configuring-idm-for-smart-card-auth){.link}
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-certificates-in-idm.html#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth}为智能卡验证配置 IdM 服务器 {.title}
:::
如果要为其证书是由 `EXAMPLE.ORG`{.literal} 域（其 LDAP 区分名称(DN)是
`CN=Certificate Authority,DC=EXAMPLE,DC=EXAMPLE,DC=ORG`{.literal}）的证书颁发机构发布的用户启用智能卡身份验证，那么您需要获取颁发机构的证书，以便您可以使用配置
IdM
服务器的脚本来运行它。例如，您可以从认证机构发布的证书的网页下载证书。详情请查看
[配置浏览器来启用证书身份验证](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/dc-web-ui-auth_configuring-and-managing-idm#configuring-browser-for-cert-auth_dc-web-ui-auth){.link}
中的步骤 1 - 4a。
要为 IdM 证书颁发机构为其发布证书的 IdM 用户启用智能卡身份验证，请从运行
IdM CA 的 IdM 服务器上的 `/etc/ipa/ca.crt`{.literal} 文件中获取 CA
证书。
这部分论述了如何为智能卡验证配置 IdM 服务器。首先，获取带有 PEM 格式 CA
证书的文件，然后运行内置的 `ipa-advise`{.literal}
脚本。最后，重新载入系统配置。
::: itemizedlist
**先决条件**
-   有到 IdM 服务器的 root 访问权限。
-   您有 root CA 证书和任何子 CA 证书。
:::
::: orderedlist
**流程**
1.  创建要进行配置的目录：
    ``` literallayout
    [root@server]# mkdir ~/SmartCard/
    ```
2.  进入该目录：
    ``` literallayout
    [root@server]# cd ~/SmartCard/
    ```
3.  获取存储在 PEM 格式文件中的相关 CA 证书。如果您的 CA
    证书存储再不同格式的文件中，如 DER，请将其转换为 PEM 格式。IdM
    证书颁发机构证书位于 `/etc/ipa/ca.crt`{.literal} 文件中。
    将 DER 文件转换为 PEM 文件：
    ``` literallayout
    # openssl x509 -in .der -inform DER -out .pem -outform PEM
    ```
4.  为方便起见，将证书复制到您要进行配置的目录中：
    ``` literallayout
    [root@server SmartCard]# cp /etc/ipa/ca.crt ~/SmartCard/
    [root@server SmartCard]# cp /tmp/smartcard_ca.pem ~/SmartCard/
    ```
5.  另外，如果您使用外部证书颁发机构的证书，请使用
    `openssl x509`{.literal} 工具查看 `PEM`{.literal}
    格式的文件内容，来检查 `Issuer`{.literal} 和 `Subject`{.literal}
    值是否正确：
    ``` literallayout
    [root@server SmartCard]# openssl x509 -noout -text -in smartcard_ca.pem | more
    ```
6.  使用管理员特权，通过内置的 `ipa-advise`{.literal} 工具生成配置脚本：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# ipa-advise config-server-for-smart-card-auth > config-server-for-smart-card-auth.sh
    ```
    `config-server-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置 IdM Apache HTTP 服务器。
    -   它在 KDC（Key Distribution Center）中启用 PKINIT（Public Key
        Cryptography for Initial Authentication in Kerberos）。
    -   它将 IdM Web UI 配置为接受智能卡授权请求。
    :::
7.  执行脚本，将包含根 CA 和子 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@server SmartCard]# chmod +x config-server-for-smart-card-auth.sh
    [root@server SmartCard]# ./config-server-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将根 CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
8.  另外，如果发布用户证书的证书颁发机构不提供任何在线证书状态协议(OCSP)响应程序，您可能需要禁用对
    IdM Web UI 身份验证的 OCSP 检查：
    ::: orderedlist
    1.  在 `/etc/httpd/conf.d/ssl.conf`{.literal} 文件中将
        `SSLOCSPEnable`{.literal} 参数设为 `off`{.literal} ：
        ``` literallayout
        SSLOCSPEnable off
        ```
    2.  重启 Apache 守护进程(httpd)使更改立即生效：
        ``` literallayout
        [root@server SmartCard]# systemctl restart httpd
        ```
    :::
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果您只使用 IdM CA 发出的用户证书，不要禁用 OCSP 检查。OCSP
    响应器是 IdM 的一部分。
    :::
    有关如何保持 OCSP 检查处于启用状态，同时防止 IdM
    服务器拒绝用户证书（如果 IdM 服务器不包含有关颁发用户证书的 CA 侦听
    OCSP 服务请求的位置的信息）的说明，请参阅 [Apache mod_ssl
    配置选项](http://httpd.apache.org/docs/trunk/en/mod/mod_ssl.html){.link}
    中的 `SSLOCSPDefaultResponder`{.literal} 指令。
:::
该服务器现在被配置为智能卡验证。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要在整个拓扑中启用智能卡验证，请在每个 IdM 服务器中运行操作过程。
:::
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-certificates-in-idm.html#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth}为智能卡验证配置 IdM 客户端 {.title}
:::
这部分描述了如何为智能卡身份验证配置 IdM 客户端。这个过程需要运行在每个
IdM
系统、客户端或服务器上，您希望在使用智能卡进行身份验证时连接到这些系统。例如，若要启用从主机
A 到主机 B 的 `ssh`{.literal} 连接，需要在主机 B 上运行脚本。
作为管理员，运行这个流程来使用如下方法启用智能卡身份验证
::: itemizedlist
-   `ssh`{.literal} 协议
    详情请参阅 [使用智能卡身份验证配置 SSH
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_authentication_and_authorization_in_rhel/index#configuring-ssh-access-using-smart-card-authentication_configuring-and-importing-local-certificates-to-a-smart-card){.link}。
-   控制台登录
-   Gnome 显示管理器(GDM)
-   `su`{.literal} 命令
:::
对于向 IdM Web UI 进行身份验证，不需要此流程。向 IdM Web UI
进行身份验证涉及两个主机，它们都不必是 IdM 客户端：
::: itemizedlist
-   机器可能位于运行浏览器的 IdM 域之外
-   运行 `httpd`{.literal} 的 IdM 服务器
:::
以下流程假设您在 IdM 客户端，而不是 IdM
服务器上配置智能卡身份验证。因此，您需要两台计算机：生成配置脚本的 IdM
服务器，以及运行脚本的 IdM 客户端。
::: itemizedlist
**先决条件**
-   为智能卡验证配置了您的 IdM 服务器，如 [为智能卡验证配置 IdM
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
    所述。
-   有对 IdM 服务器和 IdM 客户端的 root 访问权限。
-   您可以访问 root CA 证书和任何子 CA 证书。
-   已使用 `--mkhomedir`{.literal} 选项安装了 IdM
    客户端，以确保远程用户可以成功登录。如果您没有创建主目录，则默认登录位置为
    root。
:::
::: orderedlist
**步骤**
1.  在 IdM 服务器上，使用管理员权限通过 `ipa-advise`{.literal}
    生成配置脚本：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# ipa-advise config-client-for-smart-card-auth > config-client-for-smart-card-auth.sh
    ```
    `config-client-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置智能卡守护进程。
    -   它设置系统范围信任存储。
    -   它将系统安全服务守护进程(SSSD)配置为允许智能卡登录到桌面。
    :::
2.  从 IdM 服务器中，将脚本复制到 IdM 客户端机器中选择的目录中：
    ``` literallayout
    [root@server SmartCard]# scp config-client-for-smart-card-auth.sh PI:EMAIL:/root/SmartCard/
    Password:
    config-client-for-smart-card-auth.sh        100%   2419       3.5MB/s   00:00
    ```
3.  为了方便起见，将 IdM 服务器上的 PEM 格式的 CA 证书文件复制到 IdM
    客户端机器上与在上一步中所使用的相同的目录中：
    ``` literallayout
    [root@server SmartCard]# scp {smartcard_ca.pem,ca.crt} PI:EMAIL:/root/SmartCard/
    Password:
    smartcard_ca.pem                    100%   1237     9.6KB/s   00:00
    ca.crt                              100%   2514    19.6KB/s   00:00
    ```
4.  在客户端机器上执行脚本，将包含 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@client SmartCard]# kinit admin
    [root@client SmartCard]# chmod +x config-client-for-smart-card-auth.sh
    [root@client SmartCard]# ./config-client-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将根 CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
:::
现在为智能卡验证配置了客户端。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-certificates-in-idm.html#proc-add-cert-idm-user-webui_configuring-idm-for-smart-card-auth}在 IdM Web UI 的用户条目中添加证书 {.title}