如你所见，这个脚本没有经过验证，这样也行，因为这里脚本的目标只是显示怎样为屏
幕上色。
21.2.11 创建精致菜单
在讲述w h i l e循环时曾经创建过菜单，现在增加菜单脚本，菜单将具有下列选项：
本脚本使用r e a d _ c h a r函数，使用户在选择菜单选项时不必敲入回车键。 t r a p命令（本书后
面提到）用于忽略信号2、3和1 5，这样将防止用户试图跳出菜单。
此菜单还有一些控制访问形式。授权用户可以修改和删除记录，其余用户只能增加，查
看或打印记录。带有访问级别的有效用户列表保存在文件 p r i v. u s e r中。
用户运行菜单时，如果菜单名在文件中不存在，将被告之不能运行此应用并且退出。
只出于显示目的，系统命令就替换了实际的选项执行操作。执行时我们会发现用户 r o o t，
d a v e和m a t t y不能修改数据库文件，而p e t e r和l o u i s e可以。
要检查用户权限，首先需要读入列表文件，忽略注释行，将其他行重定向到一个临时文
件中。
加入java编程群：524621833
247
第21章 创建屏幕输出
下载
下一步是读取新形成的格式化文件，变量 F O U N D首先设置为假，临时文件保存名字和权
限级别。分别用用户名和权限级别设置为一个变量，然后执行测试文件中名字是否匹配 U S E R。
U S E R取值是从脚本开始时w h o a m i命令中获得的。如果不匹配，则寻找其他用户，使用命令
c o n t i n u e循环进入下一步。
处理过程直至所有用户名读取和匹配完毕。如果整个文件中均未找到匹配用户名，脚本
末尾的t e s t语句捕获权限级别，对一般访问级别为1，对高级访问权限返回0。
当用户选择修改或删除记录时，基于上述函数的返回值进行了一项测试。这个例子中
p a s s w d文件被分类或列出一个目录清单。
图21-2 带有访问限制的菜单屏幕概貌
加入java编程群：524621833
248
第四部分 基础s h e l l编程
下载
R e s t r i c t是一个只打印违规操作提示符的函数。
上述测试在一个循环里即可完成，但考虑到脚本清晰性，使用了两个文件的方法，这样
调试起来会更容易。
图2 1 - 2显示用户d a v e试图修改记录，但只具有一般权限，因此被提示权限不够。
用户可以选择q或Q退出菜单。退出时调用一个清屏函数。这样做的好处在于可以随意增
加要运行的命令，同时也增加脚本的可读性。
脚本如下：
加入java编程群：524621833
249
第21章 创建屏幕输出
下载
加入java编程群：524621833
250
第四部分 基础s h e l l编程
下载
加入java编程群：524621833
251
第21章 创建屏幕输出
下载
这种菜单可以在p r o f i l e文件中用e x e c命令调用，用户不能够退出。它们将始终位于菜单或
菜单子选项的应用里面。这对于只使用U N I X或L I N U X应用而不关心s h e l l的用户来说是一种好
方法。
21.3 小结
使用t p u t命令可以增强应用外观及脚本的控制。颜色设置可以增加应用的专业性。注意使
用颜色不要太过火，这也许对你来说很好，但其他用户使用这段脚本时看到这种屏幕设置也
许会感到厌烦。可以使用和读取控制字符来增加脚本的灵活性，特别是对用户击键输入操作
更是如此。
加入java编程群：524621833
下载
第22章 创建屏幕输入
屏幕输入或数据输入是接受输入（这里指键盘）并验证其有效的能力。如果有效，接受
它，如果无效，放弃该输入。
前面讲到了基于一些条件的测试函数，例如字符串长度、字符串是数字或字符型，这一
章在脚本中将继续使用这些函数。
本章内容有：
• 验证有效输入。
• 增加、删除、修改和查看记录。
• 修改脚本的工作文件。
本章开始读起来可能有些累人，因此可以先大概看一下，再慢慢细看。验证有效性的代
码量很大，这是因为为捕获所有错误，脚本必须测试几乎所有可能的错误。
现在在创建一个一般文件以修改系统地过程中逐步实现每一个任务：增加、删除、修改
和查看记录。这里也将创建一个个人文件以修改系统。记录文件 D B F I L E保存下列信息：
域 长 度 允许输入 描 述
职员号码 1 0 数字 雇员代码
名 2 0 字符 雇员名
姓 2 0 字符 雇员姓
部门 - 记帐 雇员所在部门
IT
服务
销售
权利
域间用冒号：分隔，例如：
:::
每一个任务即是一个完整脚本。脚本中一小部分复制于前面的两个例子。这样做是因为
本章主要用于显示怎样用文件修改系统。刚开始编写脚本时，最令人头疼的事就是将修改的
文件或数据库系统放在一起后的文档清理工作。
运行脚本应具有一些菜单选项，与任务或模块相连接或包含在文件里与菜单脚本相关的
一系列函数相连接。每一段脚本均执行t r a p命令，信号2、3和1 5被忽略。
22.1 增加记录
将记录加入文件，包含以下两个步骤：
1) 确认输入有效。
2) 将记录写入文件。
第一个任务就是将一些函数放在一起，这些函数测试域是字符型或数字型及域的长度限
制，即数据输入有效性检验。有效性检验将用于增加数据和修改数据。幸运的是前面已经编
加入java编程群：524621833
253
第22章 创建屏幕输入
下载
好这些函数，检测字符串及长度的函数脚本如下：
检测字符串是否为数字型，函数脚本如下：
检测字符串是否为字符型，函数脚本如下：
当域读取完毕时，调用相应函数，测试其返回值。
这里也需要提示以保存屏幕信息直到键入某键删除这些信息，下列函数用到了
r e a d _ a _ c h a r函数。
加入java编程群：524621833
254
第四部分 基础s h e l l编程
下载
当用户输入雇员代码后，要确保编号还没有用到，此域必须唯一。测试这一点有几种方
法，这里使用g r e p。g r e p搜寻字符串_ C O D E中的雇员编号，如果a w k返回空值，则不存在匹配
编号，函数返回状态码0。函数如下（这里在g r e p中使用“$ _ C O D E \ >”抽取相应匹配，变量
用双引号括起来，如果用单引号，则返回空值）：
以下是检测雇员编号代码段，之后继续讲解其功能。
加入java编程群：524621833
255
第22章 创建屏幕输入
下载
所有检测语句均在w h i l e循环中（实际上每一个数据输入域均在一单独的 w h i l e循环中），
如果没有有效数据，提示返回初始读位置。
读完雇员编号，继续检测域中数据是否存在：
if ["$NUM"!=""]
如果域中没有输入数据。则不执行 i f语句t h e n部分。e l s e部分在脚本结尾部分，用于显示
下列信息：
Staff Number:No Input Detec，tTehdis Field Requires a Number
t h e n部分包括对域输入数据的所有有效性检测。假定存在输入，调用 a _ n u m b e r函数，测
试传输字符串是否为一数字，如果是，函数返回 0，如果不是，函数返回 1。基于此返回值，
设置指针NU M_ PA S S为0，表示返回值正确（数字型），设置为1，表示返回失败（非数字
型）。
然后调用函数l e n g t h _ c h e c k，参数为字符串及字符串包含字符最大数目。这里为 1 0，如果
字符串长度小于1 0，则返回0，否则返回1。指针L E N _ PA S S设置为0，表示返回成功（长度不
超过最大长度），设置为1，表示返回失败（长度超出最大长度）。
接下来检测是否有重复雇员编号。调用函数c h e c k _ d u p l i c a t e，如果没有发现重复编号，设
置指针D U P L I C AT E为0，最后测试三个指针变量均为0（无错误），为此使用A N D测试，如果
条件同时成立，执行t h e n部分语句。
如果测试通过，则存在有效域。这时处在w h i l e循环中，因此需要用b r e a k命令跳出循环。
如果有效性测试任何一部分失败，即长度测试或类型测试之一不通过，返回错误信息并
显示在屏幕底部。
Staff Number : Non_Numeric or Too Many Numbers I。n Field
验证第2和第3域有效性，处理过程一样。有效性验证这次在另一个循环中。这次调用
c h a r a c t e r s函数，检验域是否只包含字符。下述脚本做名字有效性检验：
加入java编程群：524621833
256
第四部分 基础s h e l l编程
下载
使用c a s e语句检验部门域（列表见下面），因为公司只包含5个部门，部门域必须是其中之
一。注意对每个部门有三个不同的匹配模式，可以由用户键入部门名称加以验证。如果找到
匹配模式，用户跳出c a s e语句，并显示有效部门列表。
当所 有域 的有 效性验 证完 成后 ，将 提示 用户 是否保 存此 记录 ，这 里使 用函数
c o n t i n u e _ p r o m p t Y N，前面讲过这个函数，它处理 Y或N响应，用户也可以点击回车键表示缺
省回答。
如果用户选择N，进入i f语句代码段并退出脚本。如果用户输入许多记录，然后在 w h i l e循
环中调用函数以增加记录，这种方法将不会返回菜单或增加记录后退出。
如果用户选择Y，保存记录。将记录加入一个文件的脚本是：
echo "$NUM:$F_NAME:$S_NAME:$DEPART">>$D。BFILE
然后显示信息通知用户记录已存入文件。 s l e e p命令将脚本进程挂起1 s，以使用户有足够
的时间查看该信息。
域分隔符是冒号，文件以姓域分类，输出存入一临时工作文件，然后文件移入初始文件
D B F I L E。文件转移操作时，会测试其最后状态，如果存在问题，则通知用户该信息。
加入一个记录后，输出如下：
加入java编程群：524621833
257
第22章 创建屏幕输入
下载
增加记录后，D B F I L E文件内容如下：
以下是增加一个记录的完整脚本：
加入java编程群：524621833
258
第四部分 基础s h e l l编程
下载
加入java编程群：524621833
259
第22章 创建屏幕输入
下载
加入java编程群：524621833
260
第四部分 基础s h e l l编程
下载
加入java编程群：524621833
261
第22章 创建屏幕输入
下载
加入java编程群：524621833