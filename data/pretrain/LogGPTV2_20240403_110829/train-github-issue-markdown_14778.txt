Based on the discussion https://discourse.julialang.org/t/getting-union-tuple-
covariance-for-maps-between-parallel-type-hierarchies/70060/6
    abstract type Continuous end
    abstract type Count end
    Scitype(::Type{<:Integer}) = Count
    Scitype(::Type{<:AbstractFloat}) = Continuous
    Scitype(::Type{Union{A,B}}) where {A<:Integer,B} = Union{Count,Scitype(B)}
    # Scitype(::Type{Union{A,B}}) where {A,B<:AbstractFloat} = Union{Scitype(A),Continuous}
    println(Scitype(Union{Int,Float64}))
fails with
    ERROR: LoadError: StackOverflowError:
whereas
    abstract type Continuous end
    abstract type Count end
    Scitype(::Type{<:Integer}) = Count
    Scitype(::Type{<:AbstractFloat}) = Continuous
    # Scitype(::Type{Union{A,B}}) where {A<:Integer,B} = Union{Count,Scitype(B)}
    Scitype(::Type{Union{A,B}}) where {A,B<:AbstractFloat} = Union{Scitype(A),Continuous}
    println(Scitype(Union{Int,Float64}))
succeeds with
    Union{Continuous, Count}
This looks illogical. Tested on 1.6.3