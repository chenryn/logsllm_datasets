to participate in the network, a user has to get t + 1 partial
signatures from different CAs and submit to a combiner to
generate a valid membership certiﬁcate, where (n ≥ 3t+1).
This implies that at least n CAs must be available at any
point in time and requires an efﬁcient replacement scheme
to substitute the departing CA nodes. The framework pre-
sented in this paper does not aim to establish CAs, but rely
on a coordinator to manage the membership.
In [29], the authors have proposed an admission and
membership control for P2P and MANET that uses limited
consensus among current peers. The approach uses thresh-
old cryptography. The authors also revealed that threshold
cryptography seems to require signiﬁcantly more time to
complete the membership admission process.
The Terminodes [15] project aims at building a self-
organised mobile ad-hoc network platform. Authentica-
tion aspects are mainly built on PGP [36]. A fundamen-
tal assumption is that all nodes have identical function-
ality and play an equal role to support self-organisation.
Hence, there are no privileged nodes performing functions
e.g., constraint veriﬁcation, authentication, on behalf of oth-
ers. Nodes issue their own public-key certiﬁcates and store
them locally. Users issue certiﬁcates to each other, forming
a PGP-like web-of-trust. In our framework, mobile nodes
have different roles to play in the community and authenti-
cation is not fully decentralised.
M¨aki et al [21] proposed a robust membership manage-
ment framework where each ad-hoc network has a group
leader that issues membership certiﬁcates to the mobile
nodes. This is similar to the coordinator in our framework.
The leader can delegate its leadership to other mobile nodes
in order to avoid a single point of failure. However, more
delegated leaders also means that there is a higher chance
of compromising them.
The Resurrecting Duckling Protocol [33] is built on the
notion of a master-slave relationship between mobile de-
vices. The protocol has been extended to cater for secure
transient relationships [32]. This work is complementary to
the work presented in this paper. An integrated approach
to formulating a security framework is required to express
security policies, credential requirements and trust relation-
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
ships between autonomous devices in a consistent manner.
7. Discussions and Future Work
Our approach does not seek to establish CAs in mobile
ad-hoc networks. Having a CA, does not resolve the is-
sue of how the CA identiﬁes and authenticates the mobile
users, since they do not have a priori knowledge of each
other. Current PKI models require users to show proofs of
identiﬁcation before the CA can issue a public-key certiﬁ-
cate to the users. In a mobile environment, it is not possible
for each user to physically prove its identity to the mobile
user who acts as the CA when it wants to join the network.
On the contrary, we leverage on existing security solutions
where users already possess various certiﬁcates issued by
their respective CAs and AAs in the wired environment. By
using a well-deﬁned doctrine, all participants have a com-
mon knowledge regarding the admission policies that need
to be satisﬁed in order to join the community and can thus
have expectations about the attributes of the other users in
the community. We prefer broadcasting a membership list
at regular intervals rather than issuing individual certiﬁcates
of membership, which need to be revoked. For relatively
small and dynamic communities, this appears to be more
efﬁcient than the use of certiﬁcate revocation lists.
Acting as a coordinator consumes substantially more
computational resources than being a mere participant.
However, there is no direct beneﬁt from becoming the coor-
dinator and no apparent motivation for a participant to take
on this role. The role of the coordinator has been introduced
in order to provide some form of security and coordination
in communities where most of the devices would not have
the computational resources for complex cryptographic op-
erations. Without the coordinator, the community would
not exist, or would exist without any form of security. The
motivation for becoming the coordinator is therefore inti-
mately linked to the need for the community to exist. This
may be because the coordinator has an interest in obtaining
information or specialised services from the other devices
such as obtaining music ﬁles. Or it may be because there
is an overall interest in the collaboration between various
participants e.g., disaster-relief operations, business meet-
ings, etc. Note that, it would also be possible to add a form
of micro-payments to the framework presented in this pa-
per, thus adding ﬁnancial incentives to the coordinator role.
However, we have not investigated this aspect in detail yet.
When running the emulations, we observed that an ad-
hoc community could be partitioned, in which a community
instance is split into two instances. This happens because a
group of participants move out of the communication range
of the coordinator at the same time, and they reconstructed
the community and selected a new coordinator. As a result,
the community split into two distinct communities. How-
ever, we argue that this is not an issue because a doctrine
can be used to instantiate multiple communities with differ-
ent participants. Hence, provided that the community estab-
lishment constraints have been fulﬁlled, a new community
instance can be created although there is an existing com-
munity that uses the same doctrine.
Currently the broadcast of the membership list requires
extensive use of digital signatures. We are investigating
ways to eliminate this need through the use of TESLA [25].
Ensuring that all entities behave according to the speci-
ﬁed policies in a distributed system remains an open prob-
lem. In our framework, the coordinator has to enforce the
URA policies and community constraints, whereas each in-
dividual participant has to enforce the obligation and au-
thorisation policies pertaining to their role. Ensuring that
they do so remains very difﬁcult. The LGI [23] framework
achieves this by assuming that each site has a trusted con-
troller that mediates all message exchanges. This would re-
quire the use of a Trusted Computing Platform [12], to en-
sure that the user’s device runs reliable software that has not
been tampered with. The approach we are currently investi-
gating focuses more on detecting non-compliant behaviour
through monitoring of interactions. In particular, the coor-
dinator can be detected to be malicious if users without ap-
propriate credentials are admitted into the community. Fur-
ther, when a service provider denies an access request to a
user who has the right to use the service, this indicates a vio-
lation of the policies. However, continuous monitoring also
requires a great effort from all the participants to co-operate
with each other to detect anomalies.
8. Conclusions
In this paper, we have presented the notion of commu-
nity as a representation of an ad-hoc network. We claim
that a community should comprise a set of users who have
satisﬁed well-deﬁned characteristics, and a set of policies
governing the users’ interactions. We advocate the use of a
community doctrine that comprises the policies speciﬁed in
terms of roles and that can be instantiated within the appro-
priate context. Users are then assigned to the roles subject
to the constraints speciﬁed in the doctrine. This approach
presents three advantages: First, it is well suited for au-
tonomous mobile devices as it requires relatively little pro-
cessing to instantiate a community and avoids the need for
negotiation. Second, it allows additional information to be
conveyed as part of the doctrine (e.g., CA keys) provided the
doctrine issuer is trusted and third, it allows to build trust be-
tween the community participants as they have knowledge
of all the policies applying to the other participants and can
therefore have expectations regarding their behaviour.
We have described a set of security protocols to manage
the evolution of the community, in terms of its membership.
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
We have chosen to rely on a coordinator node (with high
processing capabilities) as this avoids redundant computa-
tions. Although, this implies a certain degree of trust in
the coordinator, other community members may randomly
verify its actions. A simulation in a mobile environment has
also allowed us to identify the cases where this model would
be best applied by evaluating the stability of the community
as a function of the participants’ mobility.
Finally, the proposed framework can be generalised and
being applied to other application areas, e.g. peer-to-peer
networks and the establishment of virtual organisations
between different companies in the wired networks.
Acknowledgements
We gratefully acknowledge ﬁnancial support from the EP-
SRC for AEDUS research grant GR/R95715/01 and from
the EU FP6 TrustCOM Project No. 01945.
In addition,
we are indebted for many comments and suggestions to
our colleagues Naranker Dulay, Dan Chalmers, Leonidas
Lymberopoulos and Nilufer Tuptuk.
References
[1] Oxford Advanced Learner’s Dictionary. Oxford University
Press, December 1998.
[2] Y. Amir et al. Transis: A Communication Sytem for High
Availability. In 22nd IEEE Fault-Tolerant Computing Sym-
posium (FTCS), July 1992.
[3] M. Bartel et al. XML-Signature Syntax and Processing,
2002.
[4] K. P. Birman.
The Process Group Approach to Reli-
able Distributed Computing. Communications of the ACM,
36(12):37–53, 1993.
[5] K. P. Birman et al. Lightweight Causal and Atomic Group
Multicast. ACM Trans. on Computer Systems, 9(3):272–314,
1991.
[6] K. P. Birman and T. A. Joseph. Exploiting Virtual Synchrony
in Distributed Systems. ACM Operating Systems Review,
21(5):123–138, 1987.
[7] L. Breslau et al. Advances in Network Simulation. IEEE
Computer, 33(5):59–67, May 2000.
[8] A. Cohen. The Symbolic Construction of Community. Tavi-
stock, London, 1985.
[9] Collins. Colins English Dictionary. Collins, 2000.
[10] N. Damianou et al. The Ponder Policy Speciﬁcation Lan-
guage. In 2nd Int. Workshop on Policies for Distributed Sys-
tems and Networks (Policy’01), Bristol, U.K, 2001.
[11] D. Ferraiolo and R. Kuhn. Role-Based Access Controls. In
15th National Computer Security Conference. NIST, 1992.
[12] T. C. Group. Trusted Computing Platform Alliance (TCPA)
Main Speciﬁcation, 2003.
[13] Y. Hu et al. Ariadne: A Secure On-demand Routing Protocol
for Ad Hoc Networks. In 8th ACM International Conference
on Mobile Computing and Networking, September 2002.
[14] Y. Hu et al. SEAD: Secure Efﬁcient Distance Vector Rout-
In 4th IEEE
ing in Mobile Wireless Ad-hoc Networks.
[22] N. Minsky. Regularity-based Trust in Cyberspace.
Int. Conf. on Trust Management (iTrust), May 2003.
In 1st
Workshop on Mobile Computing Systems and Applications
(WMCSA ’02), pages 3–13, June 2002.
[15] J. P. Hubaux et al. The Quest for Security in Mobile Ad Hoc
In ACM Symp. on Mobile Ad Hoc Networking
Networks.
and Computing (MobiHOC), October 2001.
[16] D. Johnson and D. Maltz. Dynamic Source Routing in Ad
Hoc Wireless Networks. In Mobile Computing, volume 353.
Kluwer Academic Publishers, 1996.
[17] D. R. Kuhn. Mutual Exclusion of Roles as a Means of Imple-
menting Separation of Duty in Role-Based Access Control
Systems. In Second ACM Workshop on Role-Based Access
Control (RBAC 97), pages 23–30, 1997.
[18] M. Kumar and B. A. Shirazi. PICO: A Middleware Frame-
work for Pervasive Computing. IEEE Pervasive Computing,
2(3):72–79, 2003.
[19] D. Lee and H. Newby. The Problem of Sociology: An Intro-
duction to the Discipline. Unwin Hyman, London, 1983.
[20] C. Malloth et al. Phoenix: A Toolkit for Building Fault-
Tolerant, Distributed Applications in Large Scale. In Work-
shop on Parallel and Distributed Platforms in Industrial
Products, October 1995.
[21] S. M¨aki et al. Robust Membership Management for Ad-hoc
Groups. In The 5th Nordic Workshop on Secure IT Systems
(NORSEC 2000), Reykjavik, Iceland, 2000.
[23] N. H. Minsky and V. Ungureanu. Law-Governed Interac-
tion: A Coordination and Control Mechanism for Heteroge-
neous Distributed Systems. ACM Trans. on Software Engi-
neering and Methodology, 9(3):273–305, 2000.
[24] C. Perkins. Ad-hoc On-demand Distance Vector Routing. In
MILCOM ’97 panel on Ad Hoc Networks, November 1997.
[25] A. Perrig et al. SPINS: Security Protocols for Sensor Net-
works. Wireless Networks, 8(5), Sept. 2002.
[26] V. Renesse et al. Horus: A Flexible Group Communication
System. Communications of ACM, 39(4):76–83, 1996.
[27] R. L. Rivest and B. Lampson. SDSI – A Simple Distributed
Security Infrastructure. CRYPTO’96, 1996.
[28] R. Sandhu and E. Coyne. Role-Based Access Control Mod-
els. IEEE Computer, 29(8):38–47, 1996.
[29] N. Saxena et al. Admission Control in Peer-to-Peer: De-
sign and Performance Evaluation. In 1st ACM Workshop on
Security of Ad-hoc and Sensor Networks (SASN), Oct 2003.
[30] D. Shands et al. Secure Virtual Enclaves: Supporting Coali-
tion Use of Distributed Application Technologies. ACM
Trans. on Information and System Security, 4(2), May 2001.
[31] M. Smith. Community. Encyclopedia of Informal Educa-
tion, 2001.
[32] F. Stajano. The Resurrecting Duckling – What Next? In The
8th Int. Workshop on Security Protocols, 2000.
[33] F. Stajano and R. Anderson. The Resurrecting Duckling:
Security Issues for Ad-hoc Wireless Networks. In The 7th
Int. Workshop on Security Protocols, 1999.
[34] Y. Zhang and W. Lee. An Integrated Environment for Test-
ing Mobile Ad-Hoc Networks. In 3rd ACM Symp. on Mobile
Ad Hoc Networking and Computing (MobiHoc), June 2002.
[35] L. Zhou and Z. J. Haas. Securing Ad-Hoc Networks. IEEE
Network Magazine, 13(6), November/December 1999.
[36] P. Zimmermann. The Ofﬁcial PGP User’s Guide. MIT Press,
1995.
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE