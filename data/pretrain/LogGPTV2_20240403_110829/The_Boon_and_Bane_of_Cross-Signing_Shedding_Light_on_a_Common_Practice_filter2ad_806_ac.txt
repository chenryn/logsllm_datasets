 Apple
 Apple
1 Dec
1 Dec
 Mozilla/Google
 Mozilla/Google
21 Oct
21 Oct
 Windows 10
 Windows 10
26 Sep
26 Sep
− Google
− Google
Sep
Sep
WoSign/StartCom ...
certs issued later are
not trusted in store
valid path via XS*
− removed from store
− Mozilla
− Mozilla
Jan
Jan
2018
2016
2017
13 Apr
13 Apr
Certinomis: XS*
Certinomis: XS*
Sep
Sep
OneCRL/CRLSet add XS*
OneCRL/CRLSet add XS*
4 Oct
4 Oct
Comodo revokes XSs
Comodo revokes XSs
18 Oct
18 Oct
Certinomis revokes XS*
Certinomis revokes XS*
2019
2027»
2027»
XS* expiry
XS* expiry
mid 2019»
mid 2019»
Certinomis −
Certinomis −
Figure 3: Certinomis’ cross-sign of WoSign/StartCom (XS*)
bypassed not before rules () set up by major root stores.
Authority G3 and thus was affected by the not before rules set up by
Google and Mozilla, rendering it unable to issue trusted certificates.
However, the new Certinomis cross-sign bypassed the not before
rules as it established a trust path to a root that was not operated by
WoSign or StartCom, enabling StartCom to issue valid certificates
despite its ban. After discovery, Mozilla and Google revoked the
cross-sign. Mozilla added it to OneCRL in September 2017 [22, 66].
One month later, Certinomis also added the certificate to its CRL.
In the end, this incident added to a list of issues that led to the
distrust of Certinomis in mid 2019. Overall, the cross-sign provided
undesired valid trust paths for about 6 months. In our dataset, this
affected 11 certificates. We saw a subset of them in a small amount
of connections during this 6 month period. This result highlights
the complexity of revocation when cross-signing is involved. A
cross-signing CA not only has to keep track of the cross-sign (as
for any issued intermediate), but must also carefully examine and
track actions applied to the cross-signed certificate.
The other cross-signs of WoSign/StartCom did not result in any
undesired trust paths. We briefly discuss them to further stress the
complexity of CA revocations given cross-signs. WoSign received
several cross-signs before its ban. Keynectic’s Certplus Class 1 Pri-
mary CA, which was part of the Microsoft root store, cross-signed
three WoSign CA certificates. These cross-signs were never revoked.
This only did not cause any undesired trust paths because Microsoft
set up a not before November 16, 2016 rule for the Certplus root in
September 2017 and disabled the Certplus root in May 2018.
Mozilla and Google, however, could have been more thorough
when revoking WoSign and StartCom. WoSign’s roots Certification
Authority of WoSign and Certification Authority of WoSign G2 set up
four (internal) intermediate XS-Certs: WoSign Class 3 OV Server CA
G2, WoSign Class 4 EV Server CA G2, WoSign Class 4 EV Pro Server
CA G2, and WoSign Class 3 OV Pro Server CA G2. Despite these cross-
sign’s expiry not before November 2029, none of them was revoked
in OneCRL or CRLSet when WoSign was distrusted. While our data
shows that this was not necessary in this case as corresponding
roots are revoked, an explicit revocation can prevent undesirable
trust paths—e.g. if there was another unknown cross-sign, or if
WoSign was able to obtain new cross-signs for its intermediates.
Comodo explicitly revoked its cross-signs when Mozilla started
to distrust WoSign in 2016. Specifically, cross-signs of the Certifica-
tion Authority of WoSign by Comodo’s UTN-USERFirst-Object and
CCS ’20, November 9–13, 2020, Virtual Event, USA
Jens Hiller, Johanna Amann, and Oliver Hohlfeld
UTN-DataCorp SGC were revoked. Similarly, Unizeto Certum CA
revoked its cross-sign of Certificate Authority of WoSign G2 in 2016.
We also find that StartCom cross-signed WoSign certificates
years before being acquired by them, going back to at least 2006
(details in Appendix B.1). This shows a close business relationship
between them years before the (not timely reported) acquisition
of StartCom by WoSign in 2015. This cross-signing behavior also
continued after the acquisition. In this regard, the analysis of cross-
signs can provide a rich source of information for security research.
Incomplete DigiNotar Revocation. After a security incident
5.1.2
at DigiNotar in 2011, an attacker was able to obtain certificates for
several domains, including Google and Mozilla’s add-on domains.
As a result, Mozilla distrusted all DigiNotar root certificates [68].
Our data shows that DigiNotar Root CA was cross-signed by En-
trust.net Secure Server CA in 2007, creating an intermediate which
was valid up to August 2013. Both, root and cross-sign, were re-
voked by Microsoft, Google, and Mozilla in 2011: Microsoft removed
the root from its root store and blocked the intermediate. Likewise,
Google added both certificates to Chrome’s blacklist disabling all
certificates that use the corresponding public key8, including ex-
isting and possible future cross-signs. Mozilla, as OneCRL was
not introduced before 2015 [39], implemented a special revocation
mechanism to disable the root cert. However, applications that base
their trust on the certificates in the root store of Mozilla, Google, or
Microsoft, often do not support their special revocation mechanisms.
As the cross-signing root Entrust.net Secure Server CA remained in
root stores until 2015 (Mozilla, Google) or longer (Microsoft, Apple),
such applications still established a valid path until expiry of the
DigiNotar cross-sign in August 2013. Hence, applications were at
risk to accept certificates issued by DigiNotar Root CA up to two
years after the distrust of DigiNotar roots because of the cross-sign.
Incomplete Vendor-Controlled CRLs. Most applications do
5.1.3
not perform certificate revocation checks—especially not for CA
certificates (see Section 2). Instead, many browsers and operating
systems ship their own revocation lists, which they have to keep
updated. The security of the web PKI thus also depends on how
consistently cross-signed certificates are revoked. In this section, we
examine these lists and show that cross-signs are not consistently
revoked. This further highlights the complexities of cross-signs.
In 2011, the Actalis Authentication Root CA created the inter-
mediate Actalis Authentication CA G2. A cross-sign by Baltimore
CyberTrust Root enabled broad trust. The Actalis Authentication
CA G2 was later revoked by Actalis with “cessation” given as the
reason in November 2016. The same is true for the cross-sign by Cy-
berTrust. OneCRL included these revocations, but Google lists only
the Actalis intermediate in its CRLSet. Hence, the cross-sign still
works for devices using Google’s root store—like Android phones.
This affected 13 certificates we saw in traffic; they were recognized
as valid for two years until expiry of the cross-sign.
Another revocation inconsistency affects the internal interme-
diate XS-Cert GlobalSign Extended Validation CA - SHA256 - G2.
The first certificate issued by GlobalSign Root CA - R2 was revoked
in September 2019 due to cessation of operation, but GlobalSign
8Technically, Chrome’s blacklist lists hashes of the certificate’s SubjectPublicKeyInfo
(SPKI), i.e., the encoded public key.
did not revoke the cross-sign by GlobalSign Root CA - R3. OneCRL
(Mozilla) and CRLSet (Google) mimic this inconsistency [23]. Lack-
ing any explanation, we believe that the cross-sign should have
been revoked, too. In this case, we did not find any non-expired
certificates affected by this.
The intermediate XS-Cert Entrust Certification Authority - L1E
shows a similar revocation inconsistency: While Entrust Root Cer-
tification Authority revoked the corresponding intermediates in
July 2018, the cross-sign by Entrust.net Certification Authority (2048)
was not revoked before February 2019, i.e., seven months later.
Google’s CRLSet even missed revoking one of the earlier CRL-
revoked cross-sign. Although no severe security problem evolved
(the intermediate was intentionally superseded and all issued cer-
tificates expired before the initial revocation), both cases show that
already cross-signing within a CA can inadvertently prolong the
validity of certificates, let alone cross-signing across CAs.
Three intermediate XS-Certs of the US Federal PKI show incon-
sistent revocation states. For all three (DoD Interoperability Root CA
2, NASA Operational CA, and DHS CA4), one intermediate was re-
voked via CRL, marking them as superseded. However, correspond-
ing cross-sings were not revoked; without an obvious explanation.
Vendor-controlled CRLs did not even add the revoked certificates.
A total of 10, 5,725 and 4 certificates were affected, respectively.
Finally, special cross-signing-related requests of CAs can further
complicate the maintenance of vendor-controlled CRLs. Specifically,
the root XS-Cert Belgium Root CA2 was cross-signed by GlobalSign
Root CA and CyberTrust Global Root. While the former cross-sign
expired in 2014, Belgium requested an inclusion of the CyberTrust-
issued cross-sign in OneCRL in October 2017 because the interme-
diate is no longer used to issue TLS certificates [18]. This request
created a very narrow-band revocation as it affects only applica-
tions that use OneCRL, i.e., mostly Firefox: First, neither Google
nor Microsoft block the cross-sign in their vendor-controlled CRLs.
Second, the root is still included in Apple’s root store today (and
was never included in any other) until its expiry in 2021. Third, the
cross-sign is not included in the CA’s CRL, probably as CRLs lack a
mechanism to revoke certificates for specific key usages (notably,
the only allowed key usage for the root are Certificate Sign and
CRL Sign). On the positive side, we can not provide evidence for
a real world relevance of this inconsistency: All observed issued
certificates already expired before the (incomplete) revocation.
Takeaway: Cross-Signing resulted in incomplete revocations or
even added new valid trust paths for already revoked certificates. Thus,
coping with cross-signing consequences adds a further burden to the
important but fragile revocation mechanisms in PKIs. Consequently,
we propose adapted mechanisms that ease the revocation in face of
cross-signing. Furthermore, CAs should be required to publicly disclose
and explain inconsistencies even if they serve a benign purpose.
5.2 PKI Barrier Breaches
Next, we show how cross-signing can enable a valid trust path
between otherwise isolated PKIs—a potentially undesired effect.
We discuss how cross-signs intentionally or inadvertently cause
breaches of such PKI boundaries, e.g., by making state-controlled
PKI systems trusted by the Web PKI. We show this effect on two
examples of the Federal PKI and the Swiss Government PKI.
The Boon and Bane of Cross-Signing: Shedding Light on a Common Practice in Public Key Infrastructures
CCS ’20, November 9–13, 2020, Virtual Event, USA
5.2.1 Undesired Global Trust in the FPKI. The Federal PKI (FPKI)
provides PKI functionality for US government services. While the
FPKI was part of the Apple and Microsoft root programs till 2018,
it never was accepted by Mozilla [8, 65]. However, we find several
cross-signs of FPKI CAs by widely trusted Web-PKI CAs. As the
FPKI extensively uses internal cross-signs among its CA certificates,
this trust in single CA certificates expanded to a large part of the
FPKI. As a result, many applications that use the Mozilla root store
unknowingly trusted certificates issued by the FPKI, even though
it did never fulfill the necessary root store policies [8, 65]. As the
FPKI applied for trust by Mozilla since 2009 [8] (aborted in 2018),
the cross-signs could be seen as attempt by the FPKI to bootstrap (cf.
Section 5.3) trust in Mozilla’s rootstore in parallel. However, at the
time of cross-signing, the public discussion on the FKPI’s applica-
tion for trust already called out concerns regarding the eligibility of
affected certificates [8]. These concerns should also have prevented
the cross-signs. This is especially worrisome since state-controlled
PKI systems can suffer from potential political influence [84].
We start our analysis with the intermediate XS-Cert Federal
Bridge CA 2013. This intermediate was issued in 2013 by the Federal
Bridge CA and two years later cross-signed by the Federal Common
Policy CA. More importantly, also in 2015, it was cross-signed by
widely trusted CA certificates of IdenTrust and VeriSign: First, it
was cross-signed by the intermediate IdenTrust ACES CA 1 which
roots back to DST ACES CA X6. Second, VeriSign cross-signed the
FPKI CA with its VeriSign Class 3 SSP Intermediate CA - G2, an
intermediate issued by VeriSigns internal XS-Cert VeriSign Universal
Root. These cross-signs provided the FPKI with broad trust coverage
until the cross-signs expired or were revoked. VeriSigns cross-sign
expired in July 2016, shortly before the issuing VeriSign Class 3
SSP Intermediate CA - G2 was revoked by CA and vendor-specific
CRLs in 2017. IdenTrust revoked its cross-sign in February 2016,
but OneCRL did not inherit the CRL entry before November 2017.
Until revocation in 2015, a further trust path was provided via a
cross-sign by the Federal Bridge CA which was itself issued by the
already aforementioned DST ACES CA X6 [8].
The thus trusted Federal Bridge CA and Federal Bridge CA 2013
distributed the trust further by cross-signing the FPKI Federal Com-
mon Policy root. Between 2008 and 2011, a further trust path to DST
ACES CA X6 for this FPKI certificate was established by a cross-
sign from the root XS-Cert FBCA Common Policy. FBCA Common
Policy offers this path to DST ACES CA X6 via a cross-sign by FBCA
Entrust; additionally it is included in recent Apple root stores and
trusted by Microsoft (between 2012 and 2017). These trust paths
are also available for Federal Bridge CA 2013 which was (mutually)
cross-signed by FPKI Federal Common Policy. Further cross-signs
by Federal Bridge CA 2016 and U.S Department of State AD Root do
not provide new trust paths, however, as these have in return been
signed by FPKI Federal Common Policy, too, the broad trust also
expands to these intermediates.
Further cross-signs by FPKI Federal Common Policy expand the
IdenTrust and VeriSign trust path deeper in the FPKI: It cross-signed
the intermediate SHA-1 Federal Root CA; as likewise done by FBCA
Common Policy (providing an alternative path to DST ACES CA X6)
and, again, VeriSign Class 3 SSP Intermediate CA - G2. SHA-1 Federal
Root CA further signed the DoD Interoperability Root CA 1 which