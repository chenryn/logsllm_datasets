**Title:** ECMO: Rehosting Embedded Linux Kernels via Peripheral Transplantation

**Abstract:**

Dynamic analysis using full-system emulators like QEMU is a widely adopted technique for various purposes. However, running firmware images from embedded devices in QEMU, particularly the process of booting Linux kernels (referred to as "rehosting" the kernel), is challenging. This difficulty arises because embedded devices often use different system-on-chips (SoCs) from multiple vendors, and QEMU supports only a limited number of these SoCs.

In this work, we introduce a novel technique called "peripheral transplantation." The core idea is to transplant the device drivers of specific peripherals into the Linux kernel. By doing so, we can replace unsupported peripherals in the kernel with those that are supported by QEMU, thereby enabling the rehosting of the Linux kernel. Once the kernel is rehosted, it can serve as a foundation for various applications.

We implemented this technique within a prototype system named ECMO and applied it to 815 firmware images, which encompass 20 different kernel versions, 37 device models, and 24 vendors. Our results show that ECMO successfully transplanted peripherals for all 815 Linux kernels. Among these, 710 kernels (87.1% success rate) were successfully rehosted, allowing the launch of a user-space shell. The primary reason for the failures was the lack of support for the root file system format (ramfs) in the kernel.

To demonstrate the practical utility of ECMO, we developed three applications: kernel crash analysis, rootkit forensic analysis, and kernel fuzzing. These applications highlight the versatility and potential of our approach in enhancing the security and reliability of embedded systems.