other nodes. The initial step chooses the ﬁrst k rows of M and
sets L to those rows, i.e. L = {1, . . . ,k}. Next, the columns that
correspond to the indices of the observer, left children, and the
others are added to R, i.e. R = {1, Nl, No}, since they have at
least k 1s in the rows of L due to the assumption nr ≥ k −1.
Next, all the remaining rows are added to L, i.e. L = {1, . . . ,n},
due to the assumptions nl ≥ k −1 and no ≥ k −1. Finally, the
columns that correspond to right children are are added to R,
i.e. R = {1, . . . ,n} since they have at least 3k −2 1s in the rows
of L.
Note that the proposition does not hold if the observer has
only one child; observation of trafﬁc between children is im-
portant for overall trafﬁc matrix completion.
The previous proposition showed that the number of cus-
tomers in each subtree matters. Next, we show that local con-
nectivity (node degree) matters as well.
PROPOSITION 3.3. Given a tree (a star) consisting of an
observer node vo connected to d other individual nodes, the
observer can complete its TM at rank k, where 2k ≤ d +1.
PROOF. In this topology, the observer vo sees the trafﬁc
between any pair of nodes. This results in a visibility matrix
M in which all elements are 1s except the last n −1 elements
in the diagonal. In the initial step we choose the ﬁrst k rows
of M and set L to those rows, i.e. L = {1, . . . ,k}. Next, the
columns that correspond to the indices greater than k are added
to R, i.e. R = {1,k + 1, . . . ,n} since they have k 1s in each
of the rows of L. Next, all the remaining rows are added to
L, i.e. L = {1, . . . ,n}, since they have at least k 1s due to the
assumption 2k ≤ d +1. Finally, all the remaining columns are
added to R, i.e. R = {1, . . . ,n} since they have at least 2k −1
1s in the rows of L.
Thus there are two node characteristics that inﬂuence the
ability to complete the TM in a tree: the observer can complete
403ZĞƐƚŽĨƚŚĞ
ŐƌĂƉŚ
ǀŽ
Đϭ
ĐŬ
ǀŬнϭ
͙
ǀŶͲϭ
ϭ
Ϭ
ǀŽ
Đϭ
ϭ ϭ
ϭ
Ϭ
͙
ϭ ϭ
͙
ĐŬ
ϭ͙
ϭ
Ϭ
ǀŽ
Đϭ
͙
ĐŬ
ǀŬнϭ
͙
ϭ
ǀŶͲϭ
Figure 5: A node with k single-parent customers
its TM if the number of nodes in each of its subtrees is high
enough, or if its degree is high enough.
3.2
Internet-Like Graphs
Now we turn to graph models that are intended to capture
aspects of the Internet topology at the AS level. We apply
the idealized graph models studied above to various Internet-
inspired topologies. Again, these models ignore important
aspects of the AS level Internet, but we build some intuition
about the AS level Internet by studying them.
Our ﬁrst model is a full mesh of nodes, each of which is
the root of a subtree, as illustrated in Figure 4. This model is
intended to capture some aspects of the relationship between
top-tier ASes, as described in Section 2.5.
PROPOSITION 3.4. Given a mesh of trees in which each
mesh node vi is the root of a tree, the observer mesh node vo
has at least two child trees each of size at least nc ≥ k −1, and
the sum of the sizes of all other trees (including the roots) is
≥ k −1, the observer node vo can fully complete its visibility
matrix at rank k.
PROOF. Straightforward adaptation of Proposition 3.2.
This example shows that even though a node participates
in a decentralized mesh (as for example happens at the top of
the AS hierarchy), if it has enough nodes in its subtrees it can
complete its trafﬁc matrix.
Single-Parent Stub Customers: Next we turn to analyze
models of AS topologies that are more typical further down
in the AS hierarchy. We deﬁne single-parent customers as
nodes that use only one provider to connect to the rest of the
network during the time interval in which measurements are
taken. Note that single-parent customers are not necessarily
single-homed customers — they may have multiple providers,
but they only route trafﬁc through one provider at any given
time.
A node with single-parent customers can see the trafﬁc be-
tween these customers and the rest of the network. Figure 5
(left) shows an observer vo that has k single-parent customers,
c1, . . ., ck, which are stub networks. Figure 5 (right) shows the
visibility matrix of vo.
PROPOSITION 3.5. Given a network of size n, an observer
vo that has k single-parent stub customers can complete its
visibility matrix M at rank k, where n ≥ 2k +1.
PROOF. In the initial step we choose the ﬁrst k rows of M
and set L to those rows, i.e. L = {1, . . . ,k}. Next, the columns
that correspond to the indices vo, ck, vk+1, . . ., vn, are added to
R, i.e. R = {1,k +1, . . .,n}. Next, the row that corresponds to
ck is added to L, i.e. L = {1, . . . ,k +1}. Next, the columns that
correspond to c1, . . ., ck−1 are added to R, i.e. R = {1, . . . ,n}.
Finally, the rows that correspond to vk+1, . . ., vn are are added
to L, so that L = {1, . . . ,n}. Note that this is a simple extension
of Proposition 3.3.
An important loss of visibility occurs when some customers
have peering relationships. If two customers ci and cj have a
peering relationship, vo can not see the trafﬁc between them.
This yields a visibility matrix like Figure 5, but with two more
0 entries on the upper left submatrix. In general, this type of
peering relationship can happen between more than one pair
of customers. In the worst case, all customers have peering
relationships and this makes the upper left part of M all 0s
except for its ﬁrst row and column.
PROPOSITION 3.6. Given a network of size n, for an ob-
server vo that has k single-parent stub customers, if at least
k − p −1 of its customers have no more than p peering links
with other customers, where p ≥ 0 and n ≥ 2k +1, then vo can
complete its TM at rank r = k − p.
PROOF. Assume that the customers are indexed (starting
from 2) in order of increasing number of peering links. In the
initial step we choose the ﬁrst r rows of M and set L to those
rows, i.e. L = {1, . . . ,r}. Next, the columns that correspond
to vo, vk+1, . . ., vn have r 1s in the rows of L. The columns
that correspond to customers are not guaranteed to have r 1s; it
depends on the number of peering links they have. Therefore,
R = {1,k +1, . . .,n}. Next, the rest of the rows that correspond
to the customers are added to L, i.e. L = {1, . . . ,k +1} due to
the assumption that n > 2k +1. After this point, the columns
that are not added to R yet are {2, . . . ,k +1}. These correspond
to the customers c1, . . ., ck. Likewise, the rows that are not
added to L are vk+1, . . ., vk. For these rows to be added, at
least r − 1 columns that correspond to the customers should
have at least r 1s. Rewriting this statement for r = k − p, to
complete the matrix at rank k − p, at least k − p −1 columns
that correspond to the customers should have at least k − p
1s. If an AS has p peering links, then it has k − p 1s in its
corresponding column. This shows that in order to complete
the matrix at rank k − p, at least k − p −1 customers should
have no more than p peering links with other customers.
This shows that the presence of a limited amount of peer-
ing links diminishes, but does not necessarily destroy, the ob-
server’s ability to complete its TM.
Single-Parent Customer Trees: Next, we consider non-stub
single-parent customers. We refer to the set of all single-
parent descendants of the observer as its Single-Parent Cus-
tomer (SPC) Tree. Figure 6 shows a SPC tree example. In this
example, vo cannot observe trafﬁc between c1 - c2, c1 - c3, c2
- c3, or c4 - c5. Note that this creates the same visibility matrix
as the case where all nodes c1, . . . ,c5 are stubs, but with peer-
ing relationships between the pairs (c1, c2), (c2, c3), (c1, c3),
and (c4, c5).
PROPOSITION 3.7. Given a node vo and its SPC tree, any
subtree of vo which consists of d nodes creates the same visi-
bility matrix as the case where the nodes are stubs, and there
are peering links between each pair of nodes of the subtree.
PROOF. Clear by construction.
404ZĞƐƚŽĨƚŚĞ
ŐƌĂƉŚ
ǀŽ
Đϭ
ĐϮ
Đϯ
Đϰ
Đϱ
ǀŬнϭ
͙
ǀŶͲϭ
ϭ
Ϭ
ǀŽ
ϭ
ϭ
ϭ
ϭ
ϭ
ϭ
ĐϮ
Đϯ Đϰ Đϱ
Đϭ
ϭ͙
ϭ ϭ
ϭ
ϭ
Ϭ
ϭ
Ϭ
Ϭ
ϭ
͙
Ϭ
ϭ
Ϭ
Ϭ
ϭ
ϭ
Ϭ
ϭ
Ϭ
Ϭ
Ϭ
ϭ ϭ ϭ
Ϭ
ϭϭϭ
ϬϬ
ϭ
ǀŽ
Đϭ
ĐϮ
Đϯ
Đϰ
Đϱ
ǀŬнϭ
͙
ǀŶͲϭ
Figure 6: Single-Parent customer tree example.
ZĞƐƚŽĨƚŚĞ
ŐƌĂƉŚ
ǀŽ
Đϭ
Đŝ
ǀŬнϭ
͙
ǀŶͲϭ
ϭ Ϭ Ϭ
ϭ͙
Ϭ
ǀŽ
Đŝ
ϭ
͙
ϭ ͙
ǀŽ
Đŝ
ǀŬнϭ
͙
ǀŶͲϭ
ϭ
Ϭ
Ϭ
͙
ϭ
Figure 7: Multi-Parent customers.
Thus a subtree of size d has the same completion effect as
d stubs, each having d −1 peering links. Thus, given an ob-
server vo and its SPC tree, proposition 3.7 and 3.6 can be used
together to determine matrix completion ability at any rank.
For example, the network in Figure 6 is equivalent to one hav-
ing ﬁve stub customers, each having no more than 2 peering
links, and so vo can complete its matrix at rank 3.
PROPOSITION 3.8. Consider a network of size n, and a
node vo which has a SPC tree that consists of m subtrees of
sizes d1, . . ., dm. Let k be the total number of customers in this
SPC tree s.t. d1 + · · · + dm = k and 2k +1 ≤ n. Let the size
of some subtrees be smaller than p +1, i.e., d1, . . .,di ≤ p +1,
where p ≥ 0. For vo to complete its visibility matrix M of rank
r = k − p, it must be true that d1 + · · · +di ≥ k − p −1.
PROOF. Follows from Propositions 3.6 and 3.7.
Multi-Parent Customers: Finally, we consider the inﬂuence
of multi-parenting on the ability of a node to do TM com-
pletion. We deﬁne multi-parent customers as nodes that use
multiple providers to connect to the rest of the network during
the time interval in which measurements are taken. Note that
all multi-parent customers are multi-homed customers.
Assume that the observer vo has a multi-parent customer ci.
Customer ci exchanges trafﬁc with some nodes in the rest of
the graph, as well as the other customers of vo, through vo.
However, ci also exchanges trafﬁc with some other nodes in
the rest of the graph through other providers. The example
graph in Figure 7 yields the visibility matrix shown in the Fig-
ure.
PROPOSITION 3.9. Given a network of size n, an AS vo,
which has c + 1 multi-parent customers out of k customers,
is guaranteed to fully complete its visibility matrix M at rank
k −c, where c ≥ 0 and n > 2k +1.
PROOF. Assume that the customers are indexed (starting
from 2) in the order of decreasing number of 1s in their rows.
In the initial step we choose the ﬁrst k −c rows of M and set
L to those rows. Due to the assumption that n > 2k +1, the
densest rows correspond to vo, c1, ..., cr−1, i.e. L = {1, . . . ,r}.
Next, if none of the customers were multi-homed, the columns
that correspond to vo, vk+1, . . ., vn since they would have r 1s.
However, if some of the customers are multi-homed, then the
columns that correspond to the ASes which they send/receive
trafﬁc to/from through other providers may have less than r 1s.
For instance, consider an AS vj which all c +1 multi-homed
customers send/receive trafﬁc to/from through other providers,
then its corresponding column has k −c 1s. This implies that
completion at ranks higher than k − c is not guaranteed for
vo.
Thus, Proposition 3.9 can not provide a guarantee that a
multi-parent customer can improve an node’s TM completion
ability. However, in practice there are a number of ways in
which the ﬂows sent by the multi-parent node through the ob-
server may contribute to TM completion ability. First, they
may nonetheless provide sufﬁcient visibility to improve TM
completion, since the Proposition only establishes a lower bound
on ICMC’s performance; and second, the additional visibil-
ity may be useful when using inference methods other than
ICMC.
In summary, the examples in this section have provided a
number of insights into the relationship between graph topol-
ogy and TM completion ability. First, we ﬁnd that the de-
centralized nature of meshes is a strong impediment to TM
completion. On the other hand, tree structures can be suitable
for TM completion, and two aspects of a tree are important:
increasing the degree of the observer node and increasing the
number of nodes in each subtree both tend to improve TM
completion.
Applying these models to Internet-like topologies, Proposi-
tion 3.4 suggests that despite its mesh-like nature, the topo-
logical relationship of top-tier ASes is amenable to TM com-
pletion. For ASes further down in the AS hierarchy, Propo-
sition 3.5 shows the value of having single-parent customers,
while Proposition 3.6 shows that peering relationships between
one’s customers are detrimental, but only in a limited way,
to TM completion. Propositions 3.7 and 3.8 show that when
one’s customers themselves are providers, nodes deeper in the
tree contribute more limited information for TM completion.
Taken together, Propositions 3.5 and 3.8 show that it is good
to have a large single-parent customer tree, and it is better for
those nodes to be arranged in a wide tree rather than a deep
tree. For example, we can compare two organizations of a SPC
tree, as shown in Figure 8. Consider the case when an AS vo
has k ASes in its SPC tree (and assume the network as a whole
is large enough). When all of vo’s descendants are its direct
customers (a), it can complete its TM at rank k. In comparison,
when only two of vo’s descendants are direct customers (b),
that is, its customers are grouped in two subtrees each of size
k/2, it can only complete at rank at most k/2.
4. WHICH ASES CAN DO TM
COMPLETION?
The analyses in the previous section provide some insight
regarding the best conditions for TM completion, but they have