make -j 6  
sudo make install  
sudo vi /etc/ld.so.conf  
# add  
/usr/local/freettype/lib  
sudo ldconfig  
```  
4、rdkit  
```  
wget https://github.com/rdkit/rdkit/archive/refs/tags/Release_2022_09_3.tar.gz  
tar -zxvf Release_2022_09_3.tar.gz   
```  
4\.1、Comic_Neue 依赖  
```  
## in macOS  
https://fonts.google.com/download?family=Comic%20Neue  
cp Comic_Neue.zip /home/postgres/rdkit-Release_2022_09_3/Code/GraphMol/MolDraw2D  
## in docker  
sudo chown postgres:postgres /home/postgres/rdkit-Release_2022_09_3/Code/GraphMol/MolDraw2D/Comic_Neue.zip  
```  
4\.2、rdkit  
```  
cd rdkit-Release_2022_09_3  
mkdir build  
cd build  
cmake -DBOOST_ROOT=/usr/local/boost -DBoost_INCLUDE_DIR=/usr/local/boost/include -DRDK_BUILD_PYTHON_WRAPPERS=OFF -DRDK_BUILD_PGSQL=ON -DPostgreSQL_ROOT="/home/postgres/tmp_basedir_polardb_pg_1100_bld" -DFREETYPE_LIBRARY=/usr/local/freettype/lib/libfreetype.so.6 -DFREETYPE_INCLUDE_DIRS=/usr/local/freettype/include/freetype2 -DRDK_TEST_MULTITHREADED=OFF -DRDK_BUILD_INCHI_SUPPORT=ON -DRDK_BUILD_AVALON_SUPPORT=ON -DRDK_INSTALL_INTREE=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/rdkit -Wno-dev ..  
// OR  
// cmake -DBOOST_ROOT=/usr/local/boost -DBoost_INCLUDE_DIR=/usr/local/boost/include -DRDK_BUILD_PYTHON_WRAPPERS=OFF -DRDK_BUILD_PGSQL=ON -DPostgreSQL_ROOT="/home/postgres/tmp_basedir_polardb_pg_1100_bld" -DFREETYPE_LIBRARY=/usr/local/freettype/lib/libfreetype.so.6 -DFREETYPE_INCLUDE_DIRS=/usr/local/freettype/include/freetype2 -DRDK_TEST_MULTITHREADED=OFF -DRDK_BUILD_INCHI_SUPPORT=ON -DRDK_BUILD_AVALON_SUPPORT=ON -DRDK_INSTALL_INTREE=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/rdkit -DRDK_BUILD_MOLINTERCHANGE_SUPPORT=OFF -Wno-dev ..  
// 编译时需要联网, cmake的时候需要git clone代码, 期间会下载几个依赖的软件, 如果没有下载成功就多试几次  
// ...  
make -j 6  
// 编译时需要联网, make的时候也需要git clone代码  
sudo make install  
```  
5、安装rdkit插件到polardb.  
```  
psql  
postgres=# create extension rdkit ;  
CREATE EXTENSION  
```  
rdkit 编译选项:    
```  
rdkit-Release_2022_09_3/CMakeLists.txt   
option(RDK_BUILD_SWIG_WRAPPERS "build the SWIG wrappers" OFF )  
option(RDK_BUILD_PYTHON_WRAPPERS "build the standard python wrappers" ON )  
option(RDK_BUILD_COMPRESSED_SUPPLIERS "build in support for compressed MolSuppliers" OFF )  
option(RDK_BUILD_INCHI_SUPPORT "build the rdkit inchi wrapper" OFF )  
option(RDK_BUILD_AVALON_SUPPORT "install support for the avalon toolkit. Use the variable AVALONTOOLS_DIR to set the location of the source." OFF )  
option(RDK_BUILD_PGSQL "build the PostgreSQL cartridge" OFF )  
option(RDK_BUILD_RPATH_SUPPORT "build shared libraries using rpath" OFF)  
option(RDK_PGSQL_STATIC "statically link rdkit libraries into the PostgreSQL cartridge" ON )  
option(RDK_BUILD_CONTRIB "build the Contrib directory" OFF )  
option(RDK_INSTALL_INTREE "install the rdkit in the source tree (former behavior)" ON )  
option(RDK_INSTALL_DLLS_MSVC "install the rdkit DLLs when using MSVC" OFF)  
option(RDK_INSTALL_STATIC_LIBS "install the rdkit static libraries" ON )  
option(RDK_INSTALL_PYTHON_TESTS "install the rdkit Python tests with the wrappers" OFF )  
option(RDK_BUILD_THREADSAFE_SSS "enable thread-safe substructure searching" ON )  
option(RDK_BUILD_SLN_SUPPORT "include support for the SLN format" ON )  
option(RDK_TEST_MULTITHREADED "run some tests of multithreading" ON )  
option(RDK_BUILD_SWIG_JAVA_WRAPPER "build the SWIG JAVA wrappers (does nothing if RDK_BUILD_SWIG_WRAPPERS is not set)" ON )  
option(RDK_BUILD_SWIG_CSHARP_WRAPPER "build the experimental SWIG C# wrappers (does nothing if RDK_BUILD_SWIG_WRAPPERS is not set)" OFF )  
option(RDK_SWIG_STATIC "statically link rdkit libraries into the SWIG wrappers" ON )  
option(RDK_TEST_MMFF_COMPLIANCE "run MMFF compliance tests (requires tar/gzip)" ON )  
option(RDK_BUILD_CPP_TESTS "build the c++ tests (disabing can speed up builds" ON)  
option(RDK_USE_FLEXBISON "use flex/bison, if available, to build the SMILES/SMARTS/SLN parsers" OFF)  
option(RDK_TEST_COVERAGE "Use G(L)COV to compute test coverage" OFF)  
option(RDK_USE_BOOST_SERIALIZATION "Use the boost serialization library if available" ON)  
option(RDK_USE_BOOST_STACKTRACE "use boost::stacktrace to do more verbose invariant output (linux only)" ON)  
option(RDK_BUILD_TEST_GZIP "Build the gzip'd stream test" OFF)  
option(RDK_OPTIMIZE_POPCNT "Use SSE4.2 popcount instruction while compiling." ON)  
option(RDK_USE_STRICT_ROTOR_DEFINITION "Use the most strict rotatable bond definition" ON)  
option(RDK_BUILD_DESCRIPTORS3D "Build the 3D descriptors calculators, requires Eigen3 to be installed" ON)  
option(RDK_BUILD_FREESASA_SUPPORT "build the rdkit freesasa wrapper" OFF )  
option(RDK_BUILD_COORDGEN_SUPPORT "build the rdkit coordgen wrapper" ON )  
option(RDK_BUILD_MAEPARSER_SUPPORT "build the rdkit MAE parser wrapper" ON )  
option(RDK_BUILD_MOLINTERCHANGE_SUPPORT "build in support for CommonChem molecule interchange" ON )  
option(RDK_BUILD_YAEHMOP_SUPPORT "build support for the YAeHMOP wrapper" OFF)  
option(RDK_BUILD_XYZ2MOL_SUPPORT "build in support for the RDKit's implementation of xyz2mol (in the DetermineBonds library)" OFF )  
option(RDK_BUILD_STRUCTCHECKER_SUPPORT "build in support for the StructChecker alpha (not recommended, use the MolVS integration instead)" OFF )  
option(RDK_USE_URF "Build support for Florian Flachsenberg's URF library" ON)  
option(RDK_INSTALL_DEV_COMPONENT "install libraries and headers" ON)  
option(RDK_USE_BOOST_REGEX "use boost::regex instead of std::regex (needed for systems with g++-4.8)" OFF)  
option(RDK_USE_BOOST_IOSTREAMS "use boost::iostreams" ON)  
option(RDK_BUILD_MINIMAL_LIB "build the minimal RDKit wrapper (for the JS bindings)" OFF)  
option(RDK_BUILD_CFFI_LIB "build the CFFI wrapper (for use in other programming languges)" OFF)  
option(RDK_BUILD_FUZZ_TARGETS "build the fuzz targets" OFF)  
```  
make installcheck  
```
cd rdkit-Release_2022_09_3/Code/PgSQL/rdkit
[postgres@aa25c5be9681 rdkit]$ USE_PGXS=1 make installcheck
/home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/pgxs/src/makefiles/../../src/test/regress/pg_regress --inputdir=./ --bindir='/home/postgres/tmp_basedir_polardb_pg_1100_bld/bin'      --dbname=contrib_regression rdkit-91 props btree molgist bfpgist-91 bfpgin sfpgist slfpgist fps reaction  
(using postmaster on 127.0.0.1, default port)
============== dropping database "contrib_regression" ==============
DROP DATABASE
============== creating database "contrib_regression" ==============
CREATE DATABASE
ALTER DATABASE
============== running regression test queries        ==============
test rdkit-91                     ... ok
test props                        ... ok
test btree                        ... ok
test molgist                      ... ok
test bfpgist-91                   ... ok
test bfpgin                       ... ok
test sfpgist                      ... ok
test slfpgist                     ... ok
test fps                          ... ok
test reaction                     ... ok
===========================================================
 All 10 tests passed. 
 POLARDB:
 All 10 tests, 0 tests in ignore, 0 tests in polar ignore. 
===========================================================
```
## 参考  
- [《重新发现PostgreSQL之美 - 35 茅山道士 - rdkit 化学分析》](../202106/20210624_01.md)    
- [《PostgreSQL 化学插件 - pgchem_tigress molecules rdkit》](../202003/20200326_06.md)    
- [《PostgreSQL 化学分析 - RDKit Cartridge 1 - 环境部署》](../201911/20191125_01.md)    
- https://www.rdkit.org/docs/Cartridge.html  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")