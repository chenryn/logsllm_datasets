the presence of known-good code. The presence of other
code, or the absence of any measurement, signify an attack.
PCR 19 is used to summarize the anti-replay nonce
provided by the web server prior to conﬁrmation, the con-
ﬁrmation message itself, and the user’s input in response to
the conﬁrmation message. The user’s input must arrive via
the keyboard driver in the isolated execution environment.
Thus, solely software-based attacks are prevented. An ad-
versary’s best course of action is to physically compromise
the keyboard, which is a signiﬁcantly more difﬁcult attack
to perpetrate without physical access to the system.
D. Denial of Service
Instead of manipulating a transaction conﬁrmation, the
adversary can block a pending conﬁrmation by preventing
the UTP code from running on the client. The server will
6This is where a “secret picture” (or similar) mechanism can be a great
aid if users can be trained to exhibit sufﬁcient diligence.
not receive any conﬁrmation and abort the transaction after a
timeout. This is a denial-of-service (DoS) attack and outside
the scope of this paper.
VI. RELATED WORK
E-EMV [39] is a software-based credit card application to
secure transaction conﬁrmation, similar to our UTP agent.
They also use an enrollment phase where an AIK of the
user’s TPM is certiﬁed by a Privacy CA or in a DAA
group. However, they do not combine transaction details
with an explicit user interaction. Users can still be tricked
into authorizing malicious transactions. Our approach in-
cludes a transaction summary and user-entered text into the
attestation. Moreover, their approach needs a persistently
running security kernel and a full trusted path.
Phoolproof Phishing [40] seeks to strengthen user authen-
tication to web sites by leveraging users’ smartphones as
a store for public key-based authentication credentials that
serve as an additional factor for authentication. Dedicated
hardware solutions for transaction conﬁrmation have also
been proposed. The IBM ZTIC [41] is a small USB device
that is assumed to share cryptographic keys with the user’s
ﬁnancial institution. It includes a screen to display transac-
tion details to the user, and buttons for accepting or aborting
the transaction. Our design is similar to both of these in
that we also use public key-based authentication credentials
stored in the system’s TPM. However, our design has the
advantage that the user is not required to carry around or
manipulate multiple devices during a transaction.
Several wallet-based approaches [26], [27], [28], [29],
[30] have been proposed to secure user authentication or
protect login credentials. They either require a trustworthy
external device as an out-of-band channel for authenti-
cation [28], [42], [43], or require a secure kernel [26],
[27] that isolates the underlying operating system and its
complex software stack from the wallet. Many existing
authentication agent proposals are prototyped using off-the-
shelf virtual machine monitors, which are not without their
share of vulnerabilities, e.g., [44], [45], [46]. In contrast,
TruWalletM [30] uses M-Shield [47], a hardware-provided
secure execution mode on a mobile phone, to protect login
credentials of a user. The wallet is only invoked during login
and executed in isolation in the secure mode. Although some
use cases of UTP require authentication, this is orthogonal
to our work. It should be a moderate effort to port their
authentication agent code to Flicker and, hence, integrate
them for the authentication step in our design.
SpyBlock [27] is a browser extension that requests au-
thentication and conﬁrmation of transactions from the user
in a separate conﬁrmation agent. However, the conﬁrmation
agent relies on a trusted window (full trusted path) and a
secure hypervisor platform. In contrast, in our design we
use the secure execution mode of the CPU to enable UTP
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:30 UTC from IEEE Xplore.  Restrictions apply. 
10to execute exclusively during conﬁrmation. Hence, the con-
ﬁrmation agent in our design depends on less trusted coded
and is less disruptive to existing software environments.
The Not-a-Bot system employs an attester that certiﬁes
network trafﬁc as originating in a system within some
threshold time period after legitimate user input [48]. While
an interesting design, the presented prototype includes a hy-
pervisor and additional operating systems and thus includes
a large TCB. Further, the binding between trafﬁc and user
input is temporal only – malware can readily wait and send
all of its trafﬁc only while the user types.
Grawrock describes the concept of a Veriﬁcation Model
possible on platforms that include support for dynamic root
of trust [49]. The system that we describe in this paper
can be considered a concrete realization of these abstract
concepts, complete with evaluation and several use cases.
Dynamic root of trust on x86 systems is not the only
mechanism available today for isolated execution. For ex-
ample, ARM TrustZone [50] and Texas Instruments’ M-
Shield [47] offer similar functionalities, especially when
paired with a Mobile Trusted Monitor. Nokia’s OnBoard
Credentials project explores some of the capabilities of
these platforms [51]. The Cell Broadband Engine [52], used
in Sony’s PlayStation 3, offers eight processing cores that
can be operated in a secure execution mode, isolated from
each other and from the main core that runs the OS. We
believe that our proposed solution should be portable to
those platform architectures with manageable effort.
VII. CONCLUSION
it
We show how the combination of an on-demand isolated
execution environment and temporal control of user-centric
I/O devices enables construction of a mechanism for a
one-way trusted path, and show that
is practical and
deployable on commodity systems today. The uni-directional
trusted path constructed by our system extends from the
client system to the remote server. Although the immediate
feedback available to the client user remains susceptible
to manipulation by malware, our system enables service
providers to gain additional assurance that client transactions
are initiated at the behest of a human user on the computer,
and not via malware such as transaction generators. Over the
long term, users will be less likely to become the victims of
a scam. Hence, service providers have high incentives for
deployment, as they can simply offer UTP as a download
for their users.
VIII. ACKNOWLEDGMENTS
We wish to thank Ahren Studer, Jim Newsome, and the
anonymous reviewers for their valuable comments, which
greatly improved the paper.
REFERENCES
[1] CNET, “Pop-up program reads keystrokes, steals passwords,”
2004, http://news.cnet.com/2100-7349 3-5251981.html.
[2] ——, “New Trojans plunder bank accounts,” 2006, http:
//news.cnet.com/2100-7349 3-6041173.html.
[3] W3C Working Group, “Inaccessibility of CAPTCHA,” Note
23, Nov. 2005.
[4] J. Epstein, J. McHugh, H. Orman, R. Pascale, A. Marmor-
Squires, B. Danner, C. R. Martin, M. Branstad, G. Benson,
and D. Rothnie, “A high assurance window system prototype,”
Journal of Computer Security, vol. 2, no. 2, 1993.
[5] N. Feske and C. Helmuth, “A Nitpicker’s guide to a minimal-
complexity secure GUI,” in Proc. Annual Computer Security
Applications Conference (ACSAC), 2005.
[6] J. S. Shapiro, J. Vanderburgh, and E. Northup, “Design of the
EROS trusted window system,” in Proc. USENIX Security,
2004.
[7] TrustMark, “TrustMark banking and ﬁnancial solutions,” http:
//www.trustmark.com/passmark/index.html, Aug. 2010.
[8] B. Lampson, “Usable security: How to get it,” Communica-
tions of the ACM, vol. 52, no. 11, 2009.
[9] AMD, “AMD64 virtualization codenamed “Paciﬁca” technol-
ogy — secure virtual machine architecture reference manual,”
AMD, Tech. Rep. Publication Number 33047, Revision 3.01,
May 2005.
[10] Intel Corporation, “Intel trusted execution technology MLE
developer’s guide,” Intel Corporation, Tech. Rep. Document
Number: 315168-006, Dec. 2009.
[11] A. J. Menezes, P. C. van Oorschot, and S. A. Vanstone,
Handbook of Applied Cryptography. CRC Press, 2001.
[12] L. F. Cranor, “What do they indicate? evaluating security and
privacy indicators,” Interactions, vol. 13, no. 3, 2006.
[13] S. E. Schechter, R. Dhamija, A. Ozment, and I. Fischer, “The
emperor’s new security indicators,” in Proc. IEEE Symposium
on Security and Privacy, 2007.
[14] M. Wu, R. C. Miller, and S. L. Garﬁnkel, “Do security tool-
bars actually prevent phishing attacks?” in Proc. Conference
on Human Factors in Computing Systems (CHI), 2006.
[15] J. M. McCune, B. J. Parno, A. Perrig, M. K. Reiter, and
H. Isozaki, “Flicker: An execution infrastructure for TCB
minimization,” in Proc. ACM SIGOPS European Conference
on Computer Systems (EuroSys), 2008.
[16] Trusted Computing Group, “TPM main speciﬁcation, version
1.2, revision 103,” Jul. 2007.
[17] T. Garﬁnkel, B. Pfaff, J. Chow, M. Rosenblum, and D. Boneh,
“Terra: a virtual machine-based platform for trusted com-
puting,” in Proc. ACM Symposium on Operating Systems
Principles (SOSP), 2003.
[18] R. Sailer, E. Valdez, T. Jaeger, R. Perez, L. van Doorn, J. L.
Grifﬁn, and S. Berger, “sHype: Secure hypervisor approach
to trusted virtualized systems,” IBM Research Division, Tech.
Rep. RC23511, Feb. 2005.
[19] European Multilaterally Secure Computing Base Project, “Tu-
raya,” http://www.emscb.org/content/pages/turaya.htm.
[20] OpenTC Project Consortium, “Open Trusted Computing,”
http://www.opentc.net.
[21] K.-P. Yee, D. Wagner, M. Hearst, and S. M. Bellovin, “Preren-
dered user interfaces for higher-assurance electronic voting,”
in Proc. USENIX Electronic Voting Technology Workshop,
2006.
[22] C. Doctorow, “Solving and creating captchas with free porn,”
Boing Boing, Jan. 2004.
[23] S. M. Bellovin and M. Merritt, “Encrypted key exchange:
Password-based protocols secure against dictionary attacks,”
in Proc. IEEE Symposium on Security and Privacy, 1992.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:30 UTC from IEEE Xplore.  Restrictions apply. 
11Trap ﬂag,” CVE-2008-4915 (under review), 2008.
[46] R. Wojtczuk, “Subverting the Xen hypervisor,” Invisible
Things Lab, 2008.
[47] J. Azema and G. Fayad, “M-Shield mobile security technol-
ogy: making wireless secure,” Texas Instruments, Feb. 2008,
http://focus.ti.com/pdfs/wtbu/ti mshield whitepaper.pdf.
[48] R. Gummadi, H. Balakrishnan, P. Maniatis, and S. Ratnasamy,
“Not-a-Bot (NAB): Improving Service Availability in the
Face of Botnet Attacks,” in Proc. Network Systems Design
and Implementation (NSDI), Apr. 2009.
[49] D. Grawrock, Dynamics of a Trusted Platform: A Building
Block Approach.
Intel Press, 2008.
[50] T. Alves and D. Felton, “TrustZone: Integrated hardware and
software security,” Information Quaterly, vol. 3, no. 4, 2004.
[51] K. Kostiainen, J.-E. Ekberg, N. Asokan, and A. Rantala,
“On-board credentials with open provisioning,” in Proc.
Symposium on Information, Computer, and Communications
Security (ASIACCS), 2009.
[52] K. Shimizu,
“The Cell Broadband Engine processor
security architecture,” http://www.ibm.com/developerworks/
power/library/pa-cellsecurity/, Apr 2006.
APPENDIX
The Trusted Platform Module is an inexpensive, passive
device that can serve as a hardware root of trust [16]. TPMs
include a bank of Platform Conﬁguration Registers (PCRs)
that can be extended with measurements of code or data. A
measurement m ← SHA1 (data) represents a cryptographic
hash over an object of interest. An extend operation is
deﬁned as PCRnew ← SHA1 (PCRold||m).
After measurements are accumulated into a hash chain
inside one or more PCRs, sealing and attestation become
possible. In a seal operation, a cryptographic key is access-
controlled based on the values of one or more PCRs. With
an appropriate software architecture, this can render data
available only to certain software stacks. In an attestation, a
digitally signed PCR aggregate called a Quote is produced.
The asymmetric key used to sign the Quote is called an
Attestation Identity Key (AIK), which can be linked to a
particular TPM instance using the Endorsement Key (EK)
certiﬁcate provided by reputable TPM vendors.
Newer x86 platforms (circa 2007) equipped with a v1.2
TPM and certain CPU and chipset enhancements can also
create a dynamic root of trust for measurement (DRTM).
A DRTM operation (1) reinitializes the CPU and memory
controller into a known-good state and (2) resets dynamic
PCRs inside the TPM into a distinguished state, enabling
the possibility to bootstrap isolated execution with data
sealing and attestation capabilities even in the face of a
compromised OS or virtual machine monitor (VMM).
[24] D. P. Jablon, “Strong password-only authenticated key ex-
change,” Computer Communication Review, vol. 26, 1996.
[25] T. Wu, “The secure remote password protocol,” in Proc.
Network and Distributed System Security Symposium (NDSS).
The Internet Society, 1998.
[26] S. Gajek, A.-R. Sadeghi, C. St¨uble, and M. Winandy, “Com-
partmented security for browsers – or how to thwart a phisher
with trusted computing,” in Proc. Conference on Availability,
Reliability and Security (ARES), 2007.
[27] C. Jackson, D. Boneh, and J. Mitchell, “Spyware resistant
web authentication using virtual machines,” http://crypto.
stanford.edu/spyblock/, 2006.
[28] R. C. Jammalamadaka, T. W. van der Horst, S. Mehrotra,
K. E. Seamons, and N. Venkasubramanian, “Delegate: A
proxy based architecture for secure website access from
an untrusted machine,” in Proc. Annual Computer Security
Applications Conference (ACSAC), 2006.
[29] M. Wu, R. C. Miller, and G. Little, “Web Wallet: Preventing
Phishing Attacks by Revealing User Intentions,” in Proc.
Symposium on Usable Privacy and Security (SOUPS), 2006.
[30] S. Bugiel, A. Dmitrienko, K. Kostiainen, A.-R. Sadeghi, and
M. Winandy, “TruWalletM: Secure web authentication on
mobile platforms,” in Proc. Trusted Systems, Second Inter-
national Conference (INTRUST), 2011.
[31] OASIS, “Assertions and protocols for the OASIS security
assertion markup language (SAML) v2.0,” OASIS Standard
saml-core-2.0-os, Mar. 2005.
[32] OpenID Foundation, “OpenID authentication 2.0 - ﬁnal spec-
iﬁcation,” Dec. 2007.
[33] E. Brickell, J. Camenisch, and L. Chen, “Direct anonymous
attestation,” in Proc. ACM Conference on Computer and
Communications Security (CCS), 2004.
[34] E. Cesena, H. L¨ohr, G. Ramunno, A.-R. Sadeghi, and
D. Vernizzi, “Anonymous authentication with TLS and DAA,”
in Proc. Conference on Trust and Trustworthy Computing
(TRUST), 2010.
[35] FreeWebShop.org, http://www.freewebshop.org.
[36] B. Dragovic, K. Fraser, S. Hand, T. Harris, A. Ho, I. Pratt,
A. Warﬁeld, P. Barham, and R. Neugebauer, “Xen and the
art of virtualization,” in Proc. ACM Symposium on Operating
Systems Principles (SOSP), 2003.
[37] K. Chen, “Reversing and exploiting an Apple ﬁrmware up-
date,” in Black Hat, 2009.
[38] M. AlZomai, B. AlFayyadh, A. Jøsang, and A. McCullagh,
“An experimental investigation of the usability of transaction
authorization in online bank security systems,” in Proc. Aus-
tralasian Information Security Conference (ACSC), 2008.
[39] S. Balfe and K. G. Paterson, “e-EMV: Emulating EMV for
internet payments with trusted computing technologies,” in
Proc. ACM Workshop on Scalable Trusted Computing (STC),
2008.
[40] B. Parno, C. Kuo, and A. Perrig, “Phoolproof phishing pre-
vention,” in Proc. Financial Cryptography and Data Security
Conference, 2006.
[41] IBM Zurich Research Lab, “Security on a stick,” Press
release, Oct. 2008.
[42] A. Vapen, D. Byers, and N. Shahmehri, “2-clickAuth - optical
challenge-response authentication,” in Proc. Conference on
Availability, Reliability and Security (ARES), 2010.
[43] T. Weigold, T. Kramp, R. Hermann, F. H¨oring, P. Buhler,
and M. Baentsch, “The Zurich Trusted Information Channel
– an efﬁcient defence against man-in-the-middle and mali-
cious software attacks,” in Proc. Conference on Trust and
Trustworthy Computing (TRUST), 2008.
[44] “Elevated privileges,” CVE-2007-4993, 2007.
[45] “The CPU hardware emulation does not properly handle the
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:30 UTC from IEEE Xplore.  Restrictions apply. 
12