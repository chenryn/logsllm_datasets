# Nginx Range 过滤器整数溢出漏洞 (CVE-2017-7529) 预警分析

## 译文声明
本文是翻译文章，原文来源为360网络安全响应中心。具体内容及含义以原文为准。
原文链接：[此处插入原文链接]

**作者：shilei && redrain@360CERT**

### I. 背景介绍
2017年7月11日，Nginx官方发布安全公告，披露了一个存在于范围过滤器中的安全问题（CVE-2017-7529）。通过精心构造的恶意请求可以导致整数溢出和对范围处理不当，进而可能泄露敏感信息。

### II. 漏洞概述
当使用Nginx标准模块时，攻击者可以通过发送包含恶意构造Range域的HTTP请求来获取缓存文件头部的信息。在某些配置下，这些缓存文件头部可能包含后端服务器的IP地址或其他敏感数据，从而导致信息泄露。

### III. 漏洞影响面
#### 影响版本
- Nginx 版本 0.5.6 至 1.13.2

#### 修复版本
- Nginx 版本 1.13.3, 1.12.1

#### 影响描述
该漏洞影响所有默认启用缓存功能的Nginx实例。一旦攻击者利用此漏洞，能够远程读取到服务器后端的真实IP地址或其它敏感信息。根据我们的评估，此漏洞易于被利用，属于低悬果实类型，在实际网络攻击中具有一定的利用价值。

### IV. 修复建议
建议受影响用户尽快升级至最新版本1.13.3 或 1.12.1，并应用官方发布的补丁。

### V. 漏洞技术细节
通过对补丁代码进行分析，发现问题是由于对HTTP头部中的Range字段处理不当造成的。具体来说，在`ngx_http_range_parse`函数中的循环处理逻辑存在缺陷：

- 当Range字段格式为 `bytes=4096-8192` 时，程序会尝试解析 `-` 前后的数字并分别赋值给 `start` 和 `end` 变量，用于指定读取文件的位置。
- 对于常规页面文件，这通常不会造成问题；但对于含有额外头部信息的缓存文件，如果 `start` 值为负数，则会导致缓存文件头部也被读取。
- 攻击者可以通过设置 `suffix` 标志为真，并使 `end` 值大于文件的实际长度，从而使 `start` 自动调整为负值。
- 为了成功绕过验证逻辑，攻击者可以构造如下的Range字段：`Range: bytes=-X, -Y`，其中 `X` 和 `Y` 分别是一个较小和较大的结束位置，以确保 `start` 和 `size` 的值均为负数且处于合理范围内。

### VI. 漏洞利用验证
在一个启用了缓存功能的标准Nginx配置环境下，利用上述方法成功地越界读取了491字节的数据。

### VII. 时间线
- 2017-07-11：Nginx官方发布安全通告及补丁
- 2017-07-12：360CERT完成漏洞分析
- 2017-07-13：发布预警分析报告

### VIII. 参考资料
- [此处添加相关参考资料链接]