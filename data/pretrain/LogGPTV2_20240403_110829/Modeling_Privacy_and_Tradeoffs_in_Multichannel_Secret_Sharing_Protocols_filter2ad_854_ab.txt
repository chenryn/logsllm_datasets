is the secret sharing scheme used to provide conﬁdentiality and
reliability. In this work, we deal speciﬁcally with the original
threshold schemes as created by Shamir and Blakley. These
schemes have two integer parameters: the number of shares
generated (or multiplicity) m, and the threshold k, such that
1 ≤ k ≤ m. Recall that each share must carry at least as many
bits of information as the secret itself; that is, H(Y ) ≥ H(X),
where H is Shannon’s entropy function. Since H(Y ) = H(X)
in the optimal case, our model can express rate plainly in terms
of symbols per unit time rather than distinguishing between
source and share symbols, as there is no need to convert
between the two.
We can now use the above deﬁnitions to model the protocol
which connects and coordinates these two components. This
protocol communicates a sequence of source symbols from the
sender to the receiver by transmitting shares on the individual
channels of C in such a way as to provide additional privacy,
reliability, performance, or some combination thereof. Using a
secret sharing scheme, it generates m shares of a symbol, k of
which are required to reconstruct that symbol. It then transmits
each share on a different channel so that an adversary must
compromise at least k channels to learn the symbol.
Sending multiple shares of the same symbol over the same
channel should be avoided in this class of protocols. An
adversary who compromises this channel can intercept multiple
shares, effectively reducing the value of k by the number of
overlapping shares. It is therefore useless to consider values
of m which are greater than the number of channels, leading
to the overall ordering
1 ≤ k ≤ m ≤ n
for the parameters of the protocol. The relationship between
these parameters deﬁnes the balance between privacy, reliability,
and performance, with each successive pair corresponding to
a different property. Privacy is characterized by k − 1, the
number of share interceptions that can be tolerated without
compromising the conﬁdentiality of a symbol. Reliability is
characterized by m − k, the number of share losses that can
be tolerated without losing the symbol. Performance is related
to n − m, the number of channels which can be used to send
other symbols in parallel.
We now give a formal description of this protocol. To send
a single source symbol x ∈ X given integer parameters k and
m, the protocol performs the following steps. First, it passes
x to the secret sharing scheme to obtain a vector of shares
(y1, . . . , ym). It then chooses a set of channels M ⊆ C over
which to send the shares, with |M| = m. Finally, it transmits
each individual share over a different channel i ∈ M. The
share is observed by an adversary with probability zi, is lost
with probability li, and if not lost takes di units time from
transmission to receipt. On the receiving end, the protocol
waits until any k of these shares (yj1 , . . . , yjk
) have arrived
successfully, then passes them to the secret sharing scheme to
reconstruct the original x.
Unfortunately, with integers 1 ≤ k ≤ m ≤ n, the parameter
space is very limited, especially given that practical values
of n in some cases may be relatively small. Secret sharing
schemes require that we use integral parameters k and m,
but since we are sending many symbols, we can allow these
parameters to vary from symbol to symbol so that the average
threshold and multiplicity over many symbols (which we will
call κ and μ) may be real numbers rather than integers. This
permits operation anywhere on the available continuum of
privacy/performance tradeoffs.
In order to maximize the overall rate—the number of source
symbols which can be sent in one unit time—it is important to
choose M intelligently. If the capacity of too many channels is
exhausted quickly, the protocol cannot send any more symbols
in the current unit time. It therefore needs to balance shares
between channels so that it can send as many source symbols
as possible before this occurs. Figure 2 illustrates this process,
with rows representing channels, columns representing the
choice of M for each successive source symbol, and boxes
representing transmitted shares. Note that as μ increases, the
number of source symbols transmitted decreases, and above a
certain value it is not possible to utilize the full rate of every
channel (a result proven later in Theorem 2).
This gives two decisions that the protocol must make for
each symbol: a threshold k and a channel subset M. It must
hold that 1 ≤ k ≤ m ≤ n for each symbol, so not every
combination of these parameters is valid. We deﬁne the set
(k, M ) ∈ N × P(C) : 1 ≤ k ≤ |M|(cid:3)
M =
(cid:2)
to represent the acceptable combinations of k and M. Let a
share schedule be a categorical distribution over this set of
choices, deﬁned by its probability mass function
p(k, M ) : M → [0, 1].
The value of p(k, M ) in a given schedule is the proportion of
symbols for which the parameters k and M are to be used.
374
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:34 UTC from IEEE Xplore.  Restrictions apply. 
We can express the resulting values of κ and μ as follows:
(cid:4)
(cid:4)
κ =
(k,M )∈M
p(k, M )k
p(k, M )|M|.
μ =
(k,M )∈M
Using this construction we can deﬁne protocol parameters
more precisely as a share schedule p rather than as separate
k and m values. The sender provides a sequence of source
symbols x1x2x3 . . . to the protocol. For each x, the protocol
chooses an element (k, M ) ∈ M independently according to
the distribution given by p. It then continues with the single-
symbol process to send x, using k as the threshold and M as
the set of channels on which to send shares.
IV. RESULTS
Here we use the mathematical model deﬁned in the previous
section to derive expressions for the optimal achievable privacy,
loss, delay, and rate under different constraints. We ﬁrst derive
preliminary formulas describing the transmission of individual
symbols, then use them to ﬁnd values for overall properties
under given sets of parameters. For each property, we give
its best possible value under any choice of parameters, and
its best possible value for given μ and κ. Finally, noting that
fully optimizing privacy, loss, or delay can lead to signiﬁcant
underutilization of channel rate, we derive an expression for
the maximum overall rate and show how to optimize other
properties while maintaining this maximum rate.
A. Subset and Schedule Properties
To begin, we consider the properties of transmitting a single
symbol as shares over a given set of channels; these results are
needed to build later formulas. In this case, the protocol has
already chosen k and M for a particular symbol, and we will
ﬁnd expressions for the expected privacy, loss, and delay when
sending it. We refer to these values as the subset privacy, loss,
and delay, as they are speciﬁc to the subset M of channels
used. The expressions for these values follow logically from
the protocol model, and we will then extend them to ﬁnd the
average over many symbols with parameters chosen according
to a given share schedule.
First we examine the expected privacy of a source symbol
for speciﬁed k and M. Recall that exactly one of the m shares
generated for the symbol will be sent on each channel i ∈ M.
If at least k of these shares are known, the source symbol can
be determined; if fewer than k are known, then no information
about the source symbol is known. So the expected risk metric
for a source symbol is the likelihood that an adversary observes
at least k of its shares. Since we assume disjoint channels, this
is a set of independent trials. The probability that an adversary
observes any given share on channel i is zi, so the subset risk
is the cdf of the corresponding Poisson binomial distribution,
(cid:4)
(cid:5)
(cid:5)
z(k, M ) =
K⊆M ;
|K|≥k
i∈K
zi
j∈M\K
(1 − zj).
375
The expression for subset loss is similar, as loss on disjoint
channels is also a set of independent trials, with probability li
for each channel i. For a source symbol to be lost, the number
of shares successfully received at the destination must be fewer
than k, so the subset loss is
l(k, M ) =
(cid:4)
(cid:5)
K⊆M ;
|K|<k
i∈K
(cid:5)
(1 − li)
lj.
j∈M\K
Deriving an expression for subset delay is complicated by
the fact that the delay in transmitting a symbol can be affected
by loss of some of its shares. It is easy to understand that,
in the absence of loss, the delay is the kth smallest delay
among the channels of M, since the receiver can reconstruct
the source symbol as soon as the k fastest shares have arrived.
In other words, if for any set of channels S we let δS be a
nondecreasing ordering of the delays of its channels, then
d(k, M ) = δM (k)
when no shares are lost. When we do account for loss, we must
exclude lost symbols from the calculation in order to obtain a
useful result, and so the expression is heavily inﬂuenced by
the equation for subset loss:
d(k, M ) =
1
1 − l(k, M )
δK(k)
(1 − li)
(cid:5)
i∈K
(cid:5)
lj.
j∈M\K
(cid:4)
K⊆M ;
|K|≥k
Intuitively, this is a weighted average of the lossless delays of
each subset K of M which could successfully convey a symbol
(i.e., |K| ≥ k), with each term weighted by the likelihood that
K is exactly the set of channels on which the transmitted
share is not lost. As expected, when all li = 0, this equation
collapses to δM (k).
We can use the subset formulas for these network properties
to ﬁnd an expression for the average privacy, loss, and delay
over a large number of symbols. These values will depend
on how frequently each pair of k and M is chosen, and so
this calculation will be speciﬁc to a share schedule. Given a
share schedule, we can then calculate the schedule privacy as
a weighted average:
(cid:4)
Z(p) =
p(k, M )z(k, M )
(k,M )∈M
and similarly with l(k, M ) and d(k, M ) for L(p) and D(p).
B. Optimal Privacy, Loss, and Delay
If the parameters κ and μ can be chosen freely, it is simple
to completely optimize privacy, loss, or delay without regard to
the other properties. The result for each property is the highest
possible value it can achieve over channel set C. Typically these
will be balanced with other properties (rate in particular), but
there can always be scenarios where one property so outweighs
the others that, relatively, they do not matter.
We begin with fully maximizing privacy. To do this, we must
force the adversary to eavesdrop as many shares as possible
for any symbol. This is the case when κ is as high as it can
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:34 UTC from IEEE Xplore.  Restrictions apply. 
be, namely κ = μ = n, resulting in the share schedule with
p(n, C) = 1. The overall risk metric ZC is then
ZC = Z(p) = z(n, C) =
zi.
(cid:5)
i∈C
(cid:5)
i∈C
To fully minimize loss, we need to add as much redundancy
as possible during the sending of a symbol. This is the case
when κ and μ are as far apart as they can be, namely κ = 1
and μ = n. This results in the share schedule with p(1, C) = 1
and an overall lossiness of
LC = L(p) = l(1, C) =
li.
Delay, as explained in the previous section, is more complex
in that it is affected by loss. To fully minimize delay, we will
obviously choose κ = 1 since d(1, M ) ≤ d(k, M ) for any
valid k and M. If there were no loss, we would only need to
ensure that the channel with the smallest delay was always
included in the set M, resulting in
DC = min
i∈C
di
for this case. However, with the possibility of loss, it becomes
important to set μ = n to include all of the channels. If the
share with the smallest delay is lost, then we want to be sure
that the channel with the second-smallest delay is in M, and
so forth if that share is also lost. This leads to the following
average delay:
n(cid:4)
1 −(cid:6)
1
i∈C li
DC =
(1 − λM (a))δM (a)
λM (b).
a=1
b=1
a−1(cid:5)
where λM (i) is the lossiness of the channel to which δM (i)
refers. In other words, the delay is the average of the delays of
the various channels, each weighted by the probability that a
share will arrive on that channel but not on any channel with
lower delay. As with the subset delay equation, this collapses
to the lossless equation when all li = 0.
To balance these properties against one another, we may
choose parameters κ and μ anywhere between 1 and n. Given
these parameters, a share schedule which fully optimizes
privacy, loss, or delay can be found via linear programming.
The following linear program, for instance, fully optimizes
privacy within the parameters κ and μ by ﬁnding values for
each p(k, M ):
Minimize Z(p)
subject to p(k, M ) ≥ 0
(k, M ) ∈ M,
(cid:4)
(cid:4)
(cid:4)
(k,M )∈M
(k,M )∈M
p(k, M ) = 1,
p(k, M )(k − κ) = 0,
p(k, M )(|M| − μ) = 0.
and
(k,M )∈M
This is a valid linear program, as all of the constraints are
linear in p with pre-calculatable coefﬁcients. The ﬁrst two
376
constraints ensure that p deﬁnes a valid categorical distribution
over M, and the last two ensure that the average k is κ and
the average size of M is μ. The same program can be used
to optimize loss or delay simply by substituting L(p) or D(p)
for the objective function.
C. Optimal Rate
As with privacy, loss, and delay, optimizing the rate without
regard for other properties is straightforward when the parame-
ters κ and μ can be chosen freely. Since at least one share must
be sent for each source symbol, we can maximize the number
of source symbols sent if we limit the number of shares per
symbol to exactly one by setting κ = μ = 1. The rate, which
is the total number of shares that can be sent per unit time, is
(cid:4)
i∈C
RC =
ri.
This is the ideal behavior for throughput-maximizing protocols
like MPTCP, and it is achieved with a share schedule which
assigns shares to each channel according to what proportion
of the total rate it represents:
(cid:7)
p(k, M ) =
ri/RC if k = 1 and M = {i}
0
otherwise.
Determining the optimal multichannel rate for a chosen
κ and μ is more complex. Given that we must achieve an
average share multiplicity of μ and may not transmit more
than ri shares on channel i in one unit time, we wish to ﬁnd
an expression for the overall multichannel rate RC. By our
deﬁnition, RC is the maximum number of source symbols