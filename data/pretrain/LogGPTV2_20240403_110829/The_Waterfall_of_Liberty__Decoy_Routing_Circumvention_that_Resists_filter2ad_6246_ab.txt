website, and embeds downstream covert messages by replacing the
leaf HTTP responses (e.g., images) from the overt website.
Previous designs use a variety of mechanism for the signaling
channel. For instance, Cirripede uses steganography in TCP Initial
Sequence Numbers (ISN) to register clients with the decoy routing
system, and Telex and Slitheen use the TLS ClientHello random
nonce field to signal decoy routers. Due to space constraints, we
refer the reader to each of the design papers for further details.
2.4 Routing Around Decoys (RAD)
The routing around decoy (RAD) attack was presented by Schuchard
et al. [48] as a generic attack on decoy routing systems. The main
intuition behind the attack is that, for any given Internet destination,
a censoring ISP is likely to know multiple upstream BGP routes.
Therefore, the censoring ISP can discard the upstream BGP routes
that transit through known decoy ASes, and instead re-route traffic
through decoy-free routes, even if those routes are not the “best”
BGP paths based on the BGP route selection criteria. The objective
of the RAD attack is to prevent censored users from using decoy
routing systems by preventing their traffic from transiting through
decoy routers, i.e., by routing their traffic around decoys.
The RAD attack imposes various costs to the censoring ISPs. If a
censoring ISP does not know any decoy-free routes to a particular
destination, it will need to drop all traffic to that destination, making
that destination unreachable. To reduce the fraction of unreachable
destinations due to RAD, Schuchard et al. argue that the censoring
ISPs controlled by the same government (e.g., all Chinese ASes) can
share their decoy-free BGP routes among themselves; therefore, a
censoring (say, Chinese) ISP with no decoy-free routes to a partic-
ular destination will tunnel its traffic to that destination through
another censoring (Chinese) ISP who knows a decoy-free route
Session I5:  Communication PrivacyCCS’17, October 30-November 3, 2017, Dallas, TX, USA2039System
Telex [59]
Cirripede [21]
Curveball [25]
TapDance [58]
Rebound [15]
TCP ISN
Out-of-band
TLS ciphertext
Similar to Telex
Slitheen [4]
Similar to Telex
Waterfall
Registration
Table 1: Major decoy routing designs
Signaling
Upstream Channel
Downstream Channel
Architecture
TLS ClientHello random
nonce
TLS records for content
TLS records
TLS records
TLS records
TLS records using HTTP
404 error
TLS records (HTTP header
only)
TLS records using HTTP
3xx redirection
TLS records
TLS records
TLS records
TLS records
TLS records using HTTP
404 error
TLS records (only image
objects)
Upstream (Type I)
Upstream (Type I)
Upstream (Type I)
Upstream (Type II)
Upstream (Type II)
Upstream (Type II)
TLS records
Downstream-Only
to the target destination. Schuchard et al. [48] show that doing so
will keep the fraction of unreachable destinations reasonably low
for specific decoy deployments, and therefore argue RAD to be
practical. Houmansadr et al. [22], however, show that re-routing of
upstream traffic due to RAD is significantly costly to the censors,
even if the ratio of unreachable destinations is kept small. This
is intuitively because the re-routed traffic will discard the “best”
BGP routes that are meant to optimize performance and monetary
expenses for the ISPs. Particularly, Houmansadr et al. [22] show
that re-routed traffic due to RAD imposes the following classes of
costs to the censoring ISPs:
• QoS degradation due to increased traffic latencies;
• QoS degradation due to increased route lengths;
• monetary expenses due to non-Valley-Free routing;
• monetary expenses due to switching traffic to less-preferred
(more expensive) routes;
• monetary costs due to setting up new transit ASes;
• monetary and QoS costs due to massive changes in transit
loads.
We refer the reader to Houmansadr et al. [22] for further discussion
of the costs of RAD. More recently, Nasr et al. [41] performed a
game theoretic analysis to optimize the placement of decoy routers
against RAD censors. Earlier, others studied the problem of decoy
deployment under non-adversarial threat models [10, 21, 29].
3 THREAT MODEL
Our threat model is the standard threat model considered in previ-
ous studies of decoy routing systems. We assume that the censoring
ISPs use common censorship techniques including IP filtering, DNS
interference, and deep-packet inspection to monitor and censor the
Internet communications of their Internet users. The censors can
also use various passive and active censorship techniques proposed
in the literature (though not all of them have been witnessed in
practice), such as statistical traffic analysis, active probing, and
packet insertion/modification [18, 20, 54, 56, 57].
Like other decoy routing studies, we assume that the censors
do not block encrypted communications (e.g., TLS) entirely. Doing
so will impose significant collateral damage as encryption is es-
sential to important business and entertainment Internet services.
The censors, however, may selectively manipulate or disconnect
encrypted connections. We also assume that the censors are not
able to break the underlying foundations of TLS in order to man-in-
the-middle arbitrary TLS connections (e.g., by compromising root
certificate authorities or breaking cryptographic algorithms), as
this will defeat not just decoy routing, but any privacy-enhancing
technology.
We also assume that the censors are aware of the identities of the
ASes deploying decoy routers and the locations of decoy routers.
The censors can also use various BGP path inference tools to infer
the BGP routes between any two points on the Internet.
We assume that the censors can re-route traffic inside their own
ASes, advertise strategic BGP routes to their own ASes, and discard
BGP routes to external ASes that contain decoy ASes. Similar to
previous works on decoy routing, we assume that the censors are
not willing and/or able to perform BGP poisoning attacks at large
scale for a long time; we have elaborated on this in Section 4.3.
Finally, we assume that decoy ASes do not cooperate with the
censors. ASes with strong business relationship with the censors,
e.g., the ring (neighbor) ASes of China, will simply not run any
decoy routers.
4 DOWNSTREAM-ONLY DECOY ROUTING
In this section, we introduce downstream-only decoy routing, which,
as discussed above, offers significantly stronger resistance to RAD [22,
41, 48]. The core idea of our new architecture is to operate decoy
routers only on the downstream traffic of the censored users, which
is in contrast to previous designs. Intuitively, this makes our new
approach stronger to routing attacks since a (censoring) ISP has
significantly more control on the BGP routes of its upstream traffic,
as opposed to its downstream traffic. Specifically, a censoring ISP
can re-route its upstream traffic by applying per-destination rules
(e.g., re-route only the traffic towards specific Internet destinations),
however, it can not re-route downstream traffic by applying per-
source rules (e.g., the censoring ISP has to either re-route all or
none of its downstream traffic through each of its Internet provider
ASes).
In the following, we will thoroughly evaluate the impact of
rerouting attacks on downstream-only decoy routing through Internet-
scale BGP path simulations. Our analysis demonstrates that our
downstream-only decoy routing proposal offers significantly stronger
Session I5:  Communication PrivacyCCS’17, October 30-November 3, 2017, Dallas, TX, USA2040resistance to the routing attacks by the censors compared to the
traditional (upstream) decoy routing approach. Supported by our
analysis, we conclude that downstream-only decoy routing is a major
step forward in making decoy routing systems practical, as they need
to be deployed on a significantly smaller number of volunteer ASes
for a target resistance to routing attacks. For instance, we show that
a downstream-only decoy routing system implemented on only a
single decoy AS is as resistant to routing attacks (by the Chinese
censors) as a traditional decoy routing system (e.g., Telex) with 53
decoy ASes.
Studied Routing Attacks. The original RAD attack studied in
the literature [22, 41, 48] works by modifying upstream BGP routes,
but not downstream routes. Therefore, it works against all previous
decoy routing designs [4, 15, 21, 25, 58, 59] as all of them require
their decoy routers to intercept upstream traffic of censored users.
The original RAD attack, however, does not work on downstream-
only decoys, as such decoy routers are oblivious to the upstream
routes of the censored users (also note that the BGP protocol de-
cides upstream and downstream routes between two end-points
independently). We therefore introduce two variants of the RAD
attack that are tailored to downstream-only decoy routing systems.
We show that such attacks are extremely costlier to the censors
compared to the original RAD attack on traditional systems, there-
fore concluding that downstream-only decoy routing systems offer
superior resistance to re-routing attacks.
Simulation Setup. We use C-BGP [45], also used in prior stud-
ies [22, 41], to simulate Internet-scale BGP routing and evaluate the
impact of different routing attacks using our Python code. We use
the CAIDA’s latest AS-relationship dataset [8], CAIDA’s AS Rank
dataset [9], and the MaxMind GeoIP dataset [37] to identify ASes
of different countries and their relationships.
4.1 Source-Block Attack
In the original RAD attack, if the censoring ISP does not know any
decoy-free upstream routes to a specific destination, she will block
all upstream traffic to that particular destination. This makes the
blocked destination “unreachable” to all censored users, but will
prevent all censored users from using that route for (upstream)
decoy routing. Our source-block attack works in a similar fashion
on downstream traffic, as shown in Figure 2. More specifically,
the censoring ISP entirely blocks traffic (e.g., by dropping packets)
from an Internet AS if the BGP route from that Internet AS to the
censoring ISP contains a decoy AS. Note that inferring downstream
BGP paths [26] is not as accurate as inferring upstream BGP paths,
however, we even assume that the censors can accurately infer
downstream routes, which makes our analysis in the censor’s favor.
4.1.1 Analysis. We simulate and evaluate the source-block at-
tack on downstream-only decoy routing systems and compare its
performance with RAD on upstream decoy routing designs. We con-
sider China to be the censoring adversary, which is shown [22, 41,
48] to be the strongest routing adversary due to its well-connected
Internet. We evaluate the attack for various numbers of decoy
ASes. We choose decoy ASes based on an algorithm similar to what
suggested in previous work [22, 41]: we simulate all routes from
non-Chinese ASes to Chinese ASes, and pick transit ASes that ap-
pear more often on the routes to the censoring ISPs as the decoy
ASes. We exclude Chinese ASes as well as the ring (i.e., neighboring)
ASes of China from being decoys (since they have strong business
relationships with China), as in previous work [22, 41, 48].
Figure 3 shows the unreachability costs imposed to Chinese
censors due to the routing attacks. As can be seen, applying the
source-block attack imposes a significantly larger damage to the
Chinese censors compared to applying RAD on previous (upstream)
designs. For instance, evading 100 upstream decoy ASes (e.g., in
Telex) by the censors will disconnect Chinese users from only 8%
of Internet destinations, however, evading 100 downstream-only
decoy ASes will disconnect Chinese users from 23% of Internet des-
tinations, therefore, imposing significantly larger collateral damage.
In other words, a single downstream-only decoy AS causes the
same unreachability damage to the censors as 53 upstream decoy
ASes (therefore, for the same protection against routing attacks,
downstream-only decoy routers needs to be implemented on a
much smaller number of volunteer ASes).
4.2 Rewiring Attack
We also introduce and evaluate a more impactful (yet more costly)
routing attack on downstream-only decoy routing systems, which
we call rewiring attack. In this attack, a censoring ISP modifies the
way it is connected to the Internet by disconnecting itself from
some of its provider ASes and/or connecting to new ones, in order
to reduce the number of decoyed routes available to its (censored)
Internet users. More specifically, the censoring ISP will disconnect
itself from an Internet provider AS that contains many decoyed
downstream routes. The censoring ISP can even compensate the
lost connectivity by connecting to new transit ASes whose down-
stream traffic contains fewer decoyed routes. An example rewiring
attack is illustrated in Figure 4. As can be seen, the censoring ISP,
AS1, has two links to the Internet through ring ASes (A) and (B).
Suppose that the ring AS (A) is on a decoyed downstream route
from some overt destination, however, assume that the ring AS
(B) does not deliver any decoyed downstream routes. Therefore,
the censoring AS disconnects herself from (A), e.g., by terminating
their Internet transit contract, and will only use the AS (B) to con-
nect to the Internet. In this case, the downstream traffic from the
overt destination to AS1 will switch to a decoy-free route through
ring (B). Note that this will re-route all downstream traffic previ-
ously received through (A) to (B), including the majority decoy-free
routes.
The rewiring attack is practically unreasonable to the censors
as changing Internet connectivity at large scale is not trivial. We
yet evaluate this attack on downstream-only decoy routing to com-
pare its impact with RAD on upstream decoy systems. Our analy-
sis shows that even if the censoring ISPs undertake the irrational
rewiring attack, it will cost them much more damage than what
RAD does on upstream systems. The main intuition for such a
higher cost is that a censoring ISP can not selectively re-route spe-
cific decoyed downstream flows, but she has to re-route all or none
of the traffic through each of her ring ASes. On the other hand, the