本资料仅供内部使用！
北京银行交易全链路监控项目
概要设计说明书
2019 年 10 月 30 日
**修改记录**
  -------------- ------------------ -------------- -------------------------
  **制定日期**   **内容摘要**       **版本**       **拟稿**
  2019-10-30     概要设计初稿       1.0            梁玫娟
  -------------- ------------------ -------------- -------------------------
# 项目简介 
## 编写目的
编写该文档的目的在于在《需求分析规格说明书》的基础上通过抽象和分解方法将项目分解成模块，并从总体设计的角度明确交易全链路监控项目(以下简称本项目)的技术、功能、约束、处理模式和接口，使项目开发人员和产品管理人员明确产品功能，可以有针对性的进行项目开发、测试、验收等各方面的工作。
## 范围
本文档的内容涵盖了本项目需要使用到的技术，项目的总体功能及功能说明，接口约定，约束条件，开发、测试环境。
本文档的读者为用户代表、数据库设计人员、详细设计人员、开发人员、测试人员和项目相关手册编写人员。
## 参考资料
《北京银行交易全链路监控系统需求规格说明书-V1.0》
> 本项目应遵循的标准或规范:《北京银行开发测试环境生产数据使用操作规程》
>
> 《北京银行核心业务系统记账类业务流水信息与对手信息管理规定》
>
> 《北京银行软件开发测试环境管理规定》
>
> 《北京银行软件开发代码规范检查管理规定》
>
> 《北京银行信息系统开发软件版本管理规定》
>
> 《北京银行软件开发项目技术测试管理规程》
>
> 《北京银行软件开发系统编译操作规程》
>
> 《北京银行总行软件开发部代码安全检查管理规定》
>
> 《北京银行分行应用系统开发管理规定》
>
> 《信息系统开发相关外包服务商管理规定》
>
> 《计算机系统异常故障引发的垫款处理操作规程》
# 软件结构设计
1.  
## 总体设计思路描述
随着银行信息化建设，银行IT系统及承载物理环境日趋复杂，为了保障业务系统的正常运行，支撑日益增长的庞大业务群，交易全链路监控系统主要应用于各种交易数据的采集和分析监控。
银行业务会产生大量的数据，除了核心系统交易数据，还有手机银行、网贷平台等不同模块的链路日志。交易全链链路监控系统需要准确处理这些数据，才能保证融资申请、贷款审批、放款等业务流程的顺利进行。这些数据中，如果有一项出错，就可能会影响整个系统的正常运转。"全链路交易监控系统"可以对这些海量数据进行实时链式跟踪、预警，防范故障蔓延，有效保障系统的稳定运行。
交易全链路监控系统以手机银行、ESB、网贷平台、大数据平台、GBG和核心系统的全链路日志为数据来源，通过日志接入、日志缓存和日志解析后，将原始日志进行格式化处理，抽取关键字段，存入日志存储层。系统使用自研的文本分析引擎beaver进行分布式存储，可通过调用日志存储层的接口获取日志，提供统一检索分析及可视化界面，技术人员可根据需要编写聚合统计的spl语句，将交易链路进行梳理和拓扑图展现，同时支持设立告警、构建最终的可视化图表及巡检报告等。具体实现如下功能：
1.  日志采集解析
采集手机银行、ESB、网贷平台、大数据平台、GBG和核心系统等多套应用系统，支持流式数据源、静态数据源、API数据源、数据库数据源等多种数据源进行"高效低耗可调控"采集，对不同格式日志处理方式包括且不限于以下：grok拆分、json转换、xml解析、csv解析、字段分割、添加字段、重命名字段、删除字段、字段类型转换、正则替换、转小写、转大写、去除空白、丢弃字段、字典替换、增加列表字段、日期转换、数据脱敏等。
2.  日志加工
通过处理完的日志，可将多种数据源处理成"业务模型"，供可视化监控、告警使用、同时可预置或定制化开发丰富的"业务模型"，支持不断变化的分析场景需求。
3.  日志检索
全链路原始日志准实时检索，支持关键字查询及SPL语句。
4.  日志可视化分析、预警
按照日志规则，完整、准确的展现交易全链路拓扑图以及各几点服务状态，并结合告警规则，对接行内邮件、短信和京智办公渠道进行告警。
5.  系统可扩展性
可根据业务、技术的发展变化以及监控经验的积累，快速响应与扩展自身服务能力，通过可视化手段，设计与完善现有监控场景，并可从处理性能层面，通过简单高效地方式横向扩展，持续强化自身快速发现问题、定位问题以及辅助解决问题的能力。
## 软件结构设计描述
### 系统逻辑架构
系统逻辑架构描述系统内部各功能模块之间的关系，以及与外部系统之间的关系，北京银行交易全链路监控项目的逻辑架构图如下：
![](media/image1.png){width="5.830555555555556in"
height="4.335416666666666in"}
北京银行交易全链路监控系统对银行内部的全链路交易行为进行监控，通过对手机相应、ESB、网贷平台、大数据平台等数据源的日志进行采集，通过日志解析将原始日志进行格式化处理，抽取关键字段。系统使用自研的文本分析引擎beaver进行分布式存储，可通过调用日志存储层的接口获取日志，提供统一检索分析及可视化界面，技术人员可根据需要编写聚合统计的spl语句进行日志聚合操作，将交易链路进行梳理和拓扑图展现，同时支持设立告警、构建最终的可视化图表及巡检报告等。
本系统数据来源：手机银行、ESB、网贷平台、大数据平台、GBG和核心系统的全链路日志
-   本系统功能模块与数据来源之间的关系
+----------------+------------------+---------------------------------+
| **功能模块**   | **数据来源**     | **描述**                        |
+----------------+------------------+---------------------------------+
| 全局概览       | 手机银行、ESB、  | 采集6套源系统的全链路日志，     |
|                | 网贷平台、大数据 | 经过处理形成指标数据进行展示。  |
|                | 平台、GBG和核心  |                                 |
|                | 系统的全链路日志 |                                 |
+----------------+------------------+---------------------------------+
| 全链路监控     | 手机银行、ESB、  | 采集6套源系统                   |
|                | 网贷平台、大数据 | 的全链路日志，经过处理形成指标  |
|                | 平台、GBG和核心  | 数据以业务拓扑图形式进行展示。  |
|                | 系统的全链路日志 |                                 |
+----------------+------------------+---------------------------------+
| 系统分析       | 手机银行、ESB、  | 采集6套源系统的全链路日         |
|                | 网贷平台、大数据 | 志，根据调用量、接口耗时及主机  |
|                | 平台、GBG和核心  | 负载情况展示单个系统进行展示。  |
|                | 系统的全链路日志 |                                 |
+----------------+------------------+---------------------------------+
| 链路分析       | 手机银行、ESB、  | 采集6套源系统的全链路日志，     |
|                | 网贷平台、大数据 | 进行规则化展示和链路视图展示。  |
|                | 平台、GBG和核心  |                                 |
|                | 系统的全链路日志 |                                 |
+----------------+------------------+---------------------------------+
| 日志查询       | 1.  手机银       | 采集6套源系统的全部日志，       |
|                | 行、ESB、网贷平  | 根据条件进行过滤查看原始日志。  |
|                | 台、大数据平台、 |                                 |
|                | GBG和核心系统的  |                                 |
|                | 全链路原始日志； |                                 |
|                |                  |                                 |
|                | 2.               |                                 |
|                |   手机银行和大数 |                                 |
|                | 据平台全量日志。 |                                 |
+----------------+------------------+---------------------------------+
|                | 3.               |                                 |
+----------------+------------------+---------------------------------+
-   本系统功能模块与数据来源之间的关系
  ----------------- ----------------- -----------------------------------
  **功能模块**      **数据来源**      **描述**
  消息              系统内部          告警消息通知
  账号              系统内部          展示当前账号信息
  运行              系统内部          当前运行版本显示
  设置              系统内部          权限管理、日志解析等配置项功能
  帮助              系统内部          帮助文档
  ----------------- ----------------- -----------------------------------
### 物理架构
![](media/image2.png){width="5.769444444444445in"
height="2.5027777777777778in"}
交易全链路监控项目物理架构如上图所示。
## 运行环境
系统上线运行环境，严格遵循行里总体技术架构建设的要求，运行在Linux操作系统上，具体情况如下：
硬件资源为：
软件资源为：
## 系统约束条件
1)  ### 设计约束 {#设计约束 .样式3}
2)  ### 需求约束  {#需求约束 .样式3}
    1.  在本项目中，日志采集模块的数据来源依赖于大数据平台提供的接口。
    2.  正确性、健壮性、可靠性、易用性可扩展性、兼容性、可移植性等需参考我行综合报表平台运行机制与用户量级。
    3.  用户界面需满足目前互联网模式下用户体验思维的转变速度。
# 功能设计及系统分工
2.  
##  系统功能设计
-   全局概览
> 通过系统维度/产品维度/异常维度三大维度展示整体运行状况。
-   全链路监控
> 通过拓扑图形式对整个交易路径进行全局监控，异常节点快速标识。
-   系统分析
> 对单系统的的关键指标进行接口级分析展示。
-   链路分析
> 通过关键性信息针对单笔交易进行调用链分析，快速定位到异常主机和接口。
-   日志查询
> 全链路原始日志查询。
## 系统分工
-   交易全链路监控系统
> 负责采集全链路日志并根据功能项进行展示分析。
-   6套源系统
> 负责全链路日志的改造工作。
-   京智办公系统
> 负责接收交易全链路监控系统的告警数据，并进行告警发送。
# 技术难点分析及解决方案
技术难点：海量数据的准实时检索
解决方案：采用业界最先进的流式大数据处理架构，构建的高性能、分布式日志处理架构。保证无数据丢失，这也是系统高可用性的保证。
# 接口设计
系统间接口：
交易全链路监控系统目前涉及京智办公的告警推送接口，依照京智办公系统提供的接口进行开发。
# 数据结构设计
![3306 ](media/image3.png){width="5.063888888888889in"
height="3.4034722222222222in"}
交易全链路监控系统基于分布式集群设计，未来横向扩展增加计算或存储资源非常容易。
-   Collector： 处理Agent采集的数据，做转换后存入消息队列Kafka。
-   Zookeeper： 用于存储很重要的配置信息，以及模块选举。
-   Kafka： 分布式消息队列。
-   Logriver： 交易全链路监控系统的日志分析处理模块。
-   Yottaweb： 交易全链路监控系统的Web模块。
-   Frontend：
    beaver前端，用于连接yottaweb和beaver，对beaver的结果做处理。
-   beaver： 文本分析引擎、信息检索和查询系统。
-   Splserver： 用于处理用户提交SPL查询语句。
-   Mysqld： 数据库，用于存储规则、人员、告警等配置信息。