title:Drafting behind Akamai (travelocity-based detouring)
author:Ao-Jan Su and
David R. Choffnes and
Aleksandar Kuzmanovic and
Fabi&apos;an E. Bustamante
Drafting Behind Akamai∗
(Travelocity-Based Detouring)
Ao-Jan Su
David R. Choffnes
PI:EMAIL
PI:EMAIL
Aleksandar Kuzmanovic
PI:EMAIL
Fabi´an E. Bustamante
PI:EMAIL
Department of Electrical Engineering and Computer Science
Northwestern University
Evanston, IL 60208, USA
ABSTRACT
To enhance web browsing experiences, content distribution net-
works (CDNs) move web content “closer” to clients by caching
copies of web objects on thousands of servers worldwide. Addi-
tionally, to minimize client download times, such systems perform
extensive network and server measurements, and use them to redi-
rect clients to different servers over short time scales. In this paper,
we explore techniques for inferring and exploiting network mea-
surements performed by the largest CDN, Akamai; our objective
is to locate and utilize quality Internet paths without performing
extensive path probing or monitoring.
Our contributions are threefold. First, we conduct a broad mea-
surement study of Akamai’s CDN. We probe Akamai’s network
from 140 PlanetLab vantage points for two months. We ﬁnd that
Akamai redirection times, while slightly higher than advertised, are
sufﬁciently low to be useful for network control. Second, we em-
pirically show that Akamai redirections overwhelmingly correlate
with network latencies on the paths between clients and the Akamai
servers. Finally, we illustrate how large-scale overlay networks can
exploit Akamai redirections to identify the best detouring nodes
for one-hop source routing. Our research shows that in more than
50% of investigated scenarios, it is better to route through the nodes
“recommended” by Akamai, than to use the direct paths. Because
this is not the case for the rest of the scenarios, we develop low-
overhead pruning algorithms that avoid Akamai-driven paths when
they are not beneﬁcial.
∗
Drafting is a technique commonly used by bikers and long-
distance runners to reduce wind resistance by moving into the air
pocket created behind the leader.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’06, September 11–15, 2006, Pisa, Italy.
Copyright 2006 ACM 1-59593-308-5/06/0009 ...$5.00.
Categories and Subject Descriptors
C.2.2 [Computer-Communication Networks]: Internet
C.4 [Performance of Systems]: Measurement techniques
General Terms
Measurement, Performance, Experimentation
Keywords
Akamai, CDN, edge server, DNS, measurement reuse, one-hop
source routing
1.
INTRODUCTION
Content delivery networks (CDNs) attempt to improve web per-
formance by delivering content to end users from multiple, geo-
graphically dispersed servers located at the edge of the network [4,
23, 27, 34]. Content providers contract with CDNs to host and dis-
tribute their content. Since most CDNs have servers in ISP points of
presence, clients’ requests can be dynamically forwarded to topo-
logically proximate replicas. DNS redirection and URL rewriting
are two of the commonly used techniques for directing client re-
quests to a particular server [18, 35].
Beyond static information such as geographic location and net-
work connectivity, most CDNs rely on network measurement sub-
systems to incorporate dynamic network information on replica
selection and determine high-speed Internet paths over which to
transfer content within the network [7]. In this paper, we explore
techniques for inferring and exploiting the network measurements
performed by CDNs for the purpose of locating and utilizing qual-
ity Internet paths without performing extensive path probing or
monitoring.
We focus our efforts on the Akamai CDN, which is perhaps the
most extensive distribution network in the world – claiming over
15,000 servers operating in 69 countries and 1,000 networks [4].
Without Akamai’s CDN, highly popular web enterprises such as
Yahoo, Amazon, or The New York Times would be unable to serve
the gigabytes of data per second required by the images, Flash ani-
mations, and videos embedded in their web sites. Given the global
nature of the Akamai network, it is clear that any viable informa-
tion about network conditions collected by Akamai can be beneﬁ-
cial to other applications; in this paper, we demonstrate how it can
improve performance for routing in large-scale overlay networks.
1.1 Our Contributions
This paper explores (i) whether frequent client redirections gen-
erated by Akamai reveal network conditions over the paths between
end-users and Akamai edge-servers, and (ii) how such information
can be utilized by the broader Internet community. We expect the
ﬁrst hypothesis to hold true because Akamai utilizes extensive net-
work and server measurements to minimize the latency perceived
by end users [12]. Thus, if the load on Akamai edge servers were
either low or uniform over long time scales (one of the main goals
of CDNs in general), then Akamai client redirections would indeed
imply viable network path-quality information.
For the second hypothesis, we consider the application of over-
lay routing. As long as an overlay network can map a subset of its
nodes to Akamai edge servers, the clients of such an overlay could
use Akamai redirections as viable indications regarding how to
route their own trafﬁc. Because the number of nodes in large-scale
overlay networks is typically several orders of magnitude larger
than the total number of Akamai servers, ﬁnding hosts that share
networks with Akamai edge servers should not be difﬁcult. More-
over, Akamai deploys its edge servers within ISPs’ networks at no
charge [1]. This greatly reduces ISPs’ bandwidth expenses while
increasing the number of potential overlay nodes that can map their
positions to Akamai servers.
The incentive for a network to latch onto Akamai in the above
way is to improve performance by using quality Internet paths with-
out extensively monitoring, probing, or measuring the paths among
In this work, we do not implement such an
the overlay nodes.
overlay network.
Instead, we demonstrate the feasibility of this
approach by performing a large-scale measurement study.
We conduct our study over a period of approximately two months,
using a testbed consisting of 140 PlanetLab (PL) nodes. We ini-
tially measure the number of Akamai servers seen by each PL node
over long time scales for a given Akamai customer (e.g., Yahoo).
The surprising result is that nodes that are further away, in a net-
working sense, from the Akamai network are regularly served by
hundreds of different servers on a daily basis. On the other hand, a
moderate number of servers seen by a client (e.g., 2) reveals close
proximity between the two. However, because different Akamai
servers often host content for different customers, we show that the
vast majority of investigated PL nodes see a large number of servers
(and paths), e.g., over 50, for at least one of the Akamai customers.
We then measure the redirection dynamics for the Akamai CDN.
While the updates are indeed frequent for the majority of the nodes,
the inter-redirection times are much longer in certain parts of the
world, e.g., as large as 6 minutes in South America. Our subse-
quent experiments indicate that such large time scales are not use-
ful for network control; we show that even random or round-robin
redirections over shorter time-scales would work better. Regard-
less, we discover that the redirection times for the vast majority of
nodes are sufﬁcient to reveal network conditions.
To show that network conditions are the primary determinant of
Akamai’s redirection behavior, we concurrently measure the per-
formance of the ten best Akamai nodes seen by each of the PL
nodes. By pinging, instead of fetching web objects from servers,
we effectively decouple the network from the server latency. Our
results show that Akamai redirections strongly correlate to network
conditions. For example, more than 70% of paths chosen by Aka-
mai are among approximately the best 10% of measured paths.
To explore the potential beneﬁts of Akamai-driven one-hop source
routing, we measure the best single-hop and direct path between
pairs of PL nodes. For a pair of PL nodes, we concurrently mea-
sure the ten best single-hop paths between the source and the desti-
nation, where the middle hop is a frequently updated Akamai edge
server. Our results indicate that by following Akamai’s updates, it
is possible to avoid hot spots close to the source, thus signiﬁcantly
improving end-to-end performance. For example, in 25% of all in-
vestigated scenarios, Akamai-driven paths outperformed the direct
paths. Moreover, 50% of the middle points discovered by Akamai
show better performance than the direct path.
Not all Akamai paths will lead to lower latency than the di-
rect alternative. For example, a direct path between two nodes
in Brazil will always outperform single-hop Akamai paths, sim-
ply because the detouring point is in the US. Thus, we develop
low-overhead pruning algorithms that consistently choose the best
path from available Akamai-driven and direct paths. The ques-
tion then becomes, how often does a client need to “double-check”
to ensure that Akamai-driven paths are indeed faster than direct
paths. We show that these techniques always lead to better per-
formance than using the direct path, regardless of frequency, and
that the frequency can be as low as once every two hours before a
client’s performance signiﬁcantly declines. Thus, we show that this
Akamai-driven routing has the potential to offer signiﬁcant perfor-
mance gains with a very small amount of network measurement.
1.2 Roadmap
This paper is structured as follows. Section 2 discusses the de-
tails of the Akamai CDN relevant to this study. In Section 3, we
describe our experimental setup and present summary results from
our large-scale measurement-based study. Section 4 further ana-
lyzes the measured results to determine whether Akamai reveals
network conditions through its edge-server selection. After show-
ing that this is the case, we present and analyze a second measurement-
based experiment designed to determine the effectiveness of Akamai-
driven, one-hop source routing in Section 5. We discuss our results
and describe related work in Section 6. Section 7 presents our con-
clusions.
2. HOW DOES AKAMAI WORK?
In this section, we provide the necessary background to under-
stand the context for the ensuing experiments. In general, for a web
client to retrieve content for a web page, the ﬁrst step is to use DNS
to resolve the server-name portion of the content’s URL into the
address of a machine hosting it. If the web site uses a CDN, the
content will be replicated at several hosts across the Internet. A
popular way to direct clients to those replicas dynamically is DNS
redirection. With DNS redirection, a client’s DNS request is redi-
rected to an authoritative DNS name server that is controlled by
the CDN, which then resolves the CDN server name to the IP ad-
dress of one or more content servers [21]. DNS redirection can be
used to deliver full or partial site content. With the former, all DNS
requests for the origin server are redirected to the CDN. With par-
tial site content delivery, the origin site modiﬁes certain embedded
URLs so that requests for only those URLs are redirected to the
CDN. The Akamai CDN uses DNS redirection to deliver partial
content.
Although Akamai’s network measurement, path selection and
cache distribution algorithms are proprietary and private, the mech-
anisms that enable Akamai to redirect clients’ requests are pub-
lic knowledge. Below, we provide a detailed explanation of these
mechanisms, which is based on both publicly available sources
[8, 9, 22, 24] and our own measurements.
server by forwarding the LDNS to a high-level Akamai DNS
server, e.g., one named za.akamaitech.net as shown in (4).
A high-level Akamai DNS sever is one of a small, global set
of DNS servers that is responsible for delegating the DNS request
to an appropriate low-level Akamai DNS server (5). Generally,
the low-level Akamai DNS server is closer to the LDNS than the
high-level one. Then, the low-level Akamai DNS server (currently
named using the pattern n#g.akamai.net, where # is between
0 and 9) returns the IP addresses of two edge servers that it expects
to offer high performance to the web client. Our measurements
reveal that the machines that act as low-level Akamai DNS servers
and as edge servers can be (and frequently are) one and the same.
Finally, the IP address of the edge server is returned to the web
client, which is unaware of any of the redirections that occurred
(6).
2.2 System Dynamics
It is important to note that many of the steps explained above are
normally bypassed thanks to LDNS caching. Unfortunately, this
same caching can reduce a CDN’s ability to direct clients to opti-
mal servers. To ensure that clients are updated on the appropriate
server to use, Akamai’s DNS servers set relatively small timeout
values (TTL) for their entries. For example, the TTL value for
an edge server’s DNS entry is 20 seconds. This means that the
LDNS should request a new translation from a low-level Akamai
DNS server every 20 seconds.1 While nothing requires a local DNS
server to expire entries according to their given timeout values [29],
we will show how this behavior does not impact the results of our
work since we request DNS translation directly.
3. MEASURING AKAMAI
In this section, we present details of our large-scale measure-
ments of the Akamai CDN. These measurements reveal important
system parameters, such as the scale and dynamics of Akamai-
driven redirections, which we exploit later in the paper.
In par-
ticular, we answer the following questions: (i) What is the server
diversity, i.e., how many Akamai edge servers does an arbitrary
web client “see” over long time intervals? (ii) What is the impact
of clients’ locations on server diversity? (iii) How does Akamai’s
content (e.g., Yahoo vs. The New York Times) impact server di-
versity? (iv) What is the redirection frequency, i.e., how often are
clients directed to a different set of edge servers?
For our measurements we relied on 140 PlanetLab (PL) nodes
scattered around the world [3]. We deployed measurement pro-
grams on 50 PL nodes in the US and Canada, 35 in Europe, 18 in
Asia, 8 in South America, 4 in Australia, and the other 25 were
randomly selected among the remaining PL nodes. Every 20 sec-
onds, each of the 140 nodes independently sends a DNS request
for one of the Akamai customers (e.g., images.pcworld.com),
and records the IP addresses of the edge servers returned by Aka-
mai. The measurement results are then recorded in a database for
further processing and analysis. The following results are derived
from an experiment that ran continuously for 7 days. We mea-
sured 15 Akamai customers, including the following popular ones:
Yahoo, CNN, Amazon, AOL, The New York Times, Apple,
Monster, FOX News, MSN, and PCWorld.
3.1 Server Diversity
We ﬁrst explore the number of unique Akamai edge servers that
an arbitrary endpoint sees over long time scales. Such measure-
1The TTL value for the entry pointing to the low-level Akamai
DNS sever is set to a value between 30 minutes and 1 hour; the
value for a high-level Akamai DNS server is set to 48 hours.
Figure 1: Illustration of Akamai DNS translation.
2.1 DNS Translation
Akamai performs DNS redirection using a hierarchy of DNS
servers that translate a web client’s request for content in an Aka-
mai customer’s domain into the IP address of a nearby Akamai
server, also called an edge server. At a high level, the DNS trans-
lation is performed as follows. First, the end user (e.g., a web
browser) requests a domain name translation to fetch content from
an Akamai customer. The customer’s DNS server uses a canoni-
cal name (CNAME) entry containing a domain name in the Aka-
mai network. A CNAME entry serves as an alias, enabling a DNS
server to redirect lookups to a new domain. Next, a hierarchy of
Akamai DNS servers responds to the DNS name-translation re-
quest, using the local DNS server’s IP address (if the client issues
DNS requests to its local DNS) or end user’s IP address (if the DNS
request is issued directly), the name of the Akamai customer and
the name of the requested content as a guide to determine the best
two Akamai edge servers to return.
The remainder of this subsection provides a detailed example of
Akamai DNS translation, using the home page for PCWorld.com
as an example (Figure 1). At ﬁrst, a web client issues a request for
an embedded object that resides in the images.pcworld.com
domain. It then queries its local DNS server (LDNS) for the IP ad-
dress corresponding to images.pcworld.com (1); the LDNS
then attempts a name translation on behalf of the client (2).
When the pcworld.com name server is contacted for a name
translation, it begins the DNS redirection by returning a CNAME
entry for images.pcworld.com, because content in the images.
pcworld.com domain is served by Akamai. The value of the
CNAME entry in this case is images.pcworld.com.edgesuite.
net; edgesuite.net is a domain owned by Akamai. The LDNS
once again performs a name translation, this time on the edgesuite.
net domain. Two more DNS redirections are subsequently per-
formed, ﬁrst to the akam.net domain (e.g., adns1.akam.net),
then to a1694.g.akamai.net, where 1694 is the customer
number for PCWorld.
In general, Akamai redirections include
a customer number in the domain name.
In the ﬁnal and most important stage of translation, the Aka-
mai network uses a hierarchy of Akamai name servers to return to
the LDNS the IP addresses of edge servers that should yield a fast
download and are likely to be close to the web client that initi-
ated the request. The LDNS is directed to the akamai.net name
(3), which begins the process of ﬁnding a nearby edge
server