### 文件路径
**文件：** `protocols\rdp\plugins\guac-common-svc\guac-common-svc.c`

### 功能描述
**功能：** `guac_rdp_common_svc_handle_open_event()`

RDP协议将不同的“设备”公开为单独的“通道”，每个设备一个。这些通道包括`rdpsnd`（声音通道）和`cliprdr`（剪贴板通道）等。为了支持分片，通道消息可以长达4GB。为了正确处理`rdpsnd`和`rdpdr`（设备重定向）通道，Guacamole服务器的开发人员在`guac-common-svc.c`中添加了一个额外的抽象层。

### 碎片处理
图9展示了在此文件中实现的碎片处理逻辑：
- **图 9：** 处理传入的通道片段

第一个片段必须包含`CHANNEL_FLAG_FIRST`标志，并根据总消息长度分配一个流。如果攻击者发送没有此标志的片段，它会被简单地附加到之前的剩余流中。这可能导致悬空指针漏洞。检查开发人员是否在处理完前一个碎片消息后将其设置为`NULL`是必要的。

### 悬空指针问题
图10显示了在不清除悬空指针的情况下释放使用的流的情况：
- **图 10：** 在不清除悬空指针的情况下释放使用的流

在碎片消息重组并继续解析后，流被释放。如果没有将悬空指针设置为`NULL`，恶意RDP服务器可能会发送乱序的消息片段，从而导致Use-After-Free漏洞。更重要的是，`wStream`对象可以用于任意写入，如果其指针字段被设置为所需的内存地址。此外，在`rdpsnd`通道中还存在信息泄露漏洞，这使得特制的`wStream`对象可以进一步利用原始漏洞，形成更强大的任意读取漏洞。

### 远程代码执行 (RCE)
通过利用**CVE-2020-9497** 和 **CVE-2020-9498**，我们实现了任意读取和任意写入原语。结合这两个原语，我们成功实现了远程代码执行漏洞利用。当远程用户请求连接到受感染的计算机时，恶意公司计算机（我们的RDP“服务器”）可以控制`guacd`进程。
- **图 11：** 漏洞利用截图——从接管`guacd`过程中弹出一个计算器

然而，`guacd`进程仅处理单个连接并以低权限运行。我们需要一个权限提升漏洞来接管整个网关。

### Apache Guacamole – 深入探讨
Apache Guacamole的网络架构如下：
- **图 12：** Apache Guacamole架构的重点视图

#### 组件
- **guacamole-client**：负责用户身份验证的Web服务器，保存每个用户会话的配置信息。
- **guacamole-server**：代理组件，与`guacd`进程通信。

#### guacamole客户端
- 负责用户身份验证。
- 存储配置信息，如所需协议（通常是RDP）、内部工作人员PC的IP地址等。
- 成功认证后，与`guacamole-server`发起Guacamole协议会话，创建匹配会话。
- 通过TCP端口4822连接到`guacd`进程。

#### guacamole服务器
- 核心组件`guacd`监听TCP端口4822，等待来自`guacamole-client`的指令。
- 建立连接后，`guacd`创建新线程并调用启动Guacamole协议的函数。
- 用户选项：
  - 创建新连接：生成唯一ID（UUID），并为其生成一个forked进程。
  - 加入现有连接：提供连接的UUID，区分所有者和其他用户。

### 权限提升步骤
1. **接管单个`guacd`进程**：已有有效利用。
2. **伪装成guacamole客户**：通过TCP端口4822连接到主进程。
3. **从内存中获取秘密**：由于`guacd`只使用`fork()`而不使用`execve()`，子进程继承父进程的整个内存地址空间，包括完整的内存布局和内容。
4. **加入所有会话**：通过提供已知的UUID请求加入每个现有连接。
5. **重复操作**：定期向主进程发送命令以启动新的RDP连接，刷新`proc-map`。

### 披露时间表
- **2020年3月31日**：向Apache和FreeRDP披露漏洞。
- **2020年5月8日**：Apache在GitHub上静默提交补丁。
- **2020年5月10日**：通知Apache补丁修复了所有报告的漏洞。
- **2020年5月12日**：Apache发布2个CVE-ID。
- **2020年6月28日**：Apache发布官方补丁版本1.2.0。

### 结论
我们展示了反向RDP攻击的新角度，特别是在部署在网关内的场景下。虽然用户通常认为RDP客户端只是客户端，但在这种情况下，攻击者可以利用客户端中的漏洞来控制整个组织网络。确保所有服务器都是最新的，并且任何用于在家工作的技术都经过全面修补，以防止此类攻击企图。