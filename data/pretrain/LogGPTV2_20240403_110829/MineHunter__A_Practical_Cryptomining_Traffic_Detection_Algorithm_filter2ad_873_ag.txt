15:
16:
17:
18:
19:
20:
21:
22:
if f in LST then
if ts  0, which means all packets
appear at points other than the beginning of the interval. Since
we assume that each packet is independent, the probability that a
packet appears outside the starting point is nk−1
and the probability
nk
of mk packets is ( nk−1
)mk . Hence,
nk
A.3 Global Similarity Table
Algorithm 3 shows the specific calculation process of the global
similarity table mentioned in Section 3.2.2. To generate the final
similarity result, we first measure the local similarity in each in-
terval by using the LST-Improved method (on lines 7-9). Then we
update the GST by the strategy mentioned in Section 3.2.2 (on lines
10-21).
P(e = 0) = 1 − P(e (cid:44) 0) = 1 − (nk − 1
nk
)mk
(1)
Second, we consider the case of e = 1, which means at least one
packet appears at the 1 second from the beginning of the interval
and no packet appears at the beginning of the interval. Therefore,
the inverse situation e (cid:44) 1 is e > 1 or e = 0. e > 1 means that all
packets are more than 1 second away from the beginning of the
1062MineHunter: A Practical Cryptomining Traffic Detection Algorithm Based on Time Series Tracking
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Similarity,
P(e = 2) = 1 − P(e = 0) − P(e = 1) − P(e > 2)
= 1 − (1 − (nk − 1
= (nk − 2
)mk ) − ((nk − 1
)mk − (nk − 3
)mk
nk
nk
)mk − (nk − 2
nk
)mk ) − (nk − 3
nk
)mk
nk
(3)
nk
Finally,
P(e = ek) = 1 − P(e = 0) − P(e = 1) − ... − P(e = ek − 1) − P(e > ek)
= 1 − (1 − (nk − 1
nk
− (nk − ek − 1
)mk
= (nk − ek
)mk − (nk − ek − 1
)mk ) − ((nk − 1
)mk − (nk − 2
)mk ) − ...
)mk
nk
nk
nk
nk
nk
(4)
□
C DETAILED PAYLOAD FILTERING METHOD
According to the scenarios described in Section 2.2, the crypto-
mining generally uses the Stratum protocol. Therefore, we extract
keywords from the payload of the Stratum protocol as filter condi-
tions. The payload of Stratum protocol is encoded by JSON-RPC
messages, and the general encoding form of mining jobs is shown in
the Fig. 18 [36]. We extract the ASCII codes of "blob" and "target" as
the conditions for load filtering. After filtering, we manually verify
the results. In this way, we find 9 flows containing cryptomining be-
havior in the background traffic, including 4 confirmed mining pool
addresses (45.9.148.125, 45.9.148.117, 45.9.148.129, 94.130.165.87).
We supplement that to further verify the capabilities of Mine-
Hunter, we use MineHunter to detect these 9 flows and the simi-
larity calculation results are shown in Table 4. Considering some
flows with long-term mining behaviors, covering multiple windows
(we set the detection window to 2 hours), we select the maximum
similarity of each detection window as the final result of a flow,
since a cryptomining flow can be effectively discovered as long as
it is detected in any window. MineHunter can effectively detect
all plaintext labeled cryptomining flows (the maximum similarity
greater than the set threshold 0.6), which can indirectly verify the
recall of MineHunter.
D DETAILED MONERO CRYPTOMINING
POOL NODES
See Table 5.
Figure 18: The example of job message in the Stratum proto-
col
Table 4: Evaluation result of the cryptomining flows in the
background traffic.
Flow (anonymized) Mining pool Maximum Similarity
Flow 1
Flow 2
Flow 3
Flow 4
Flow 5
Flow 6
Flow 7
Flow 8
Flow 9
45.9.148.117
45.9.148.125
45.9.148.129
45.9.148.117
45.9.148.125
45.9.148.129
45.9.148.117
45.9.148.117
94.130.165.87
0.97
0.93
0.84
0.79
0.81
0.78
0.86
0.93
0.98
Table 5: Detailed Monero cryptomining pool nodes.
Domain name
sg.minerxmr.com
pool.minexmr.com
fr.minexmr.com
de.minexmr.com
ca.minexmr.com
us-west.minexmr.com
pool.supportxmr.com
web.xmrpool.eu
monerohash.com
xmr.2miners.com
monero.hashvault.pro
moneroocean.stream
xmr.crypto-pool.fr
IP nodes
139.99.62.196, 139.99.68.128
37.59.44.193, 94.130.164.163,
37.59.54.205, 37.59.43.131
37.59.54.205, 37.59.44.193
94.130.164.163, 88.99.193.240
94.130.165.85
158.69.25.77, 158.69.25.71
158.69.25.62
147.135.37.31, 51.81.245.40
91.121.140.167, 94.23.23.52
54.37.7.208
107.191.99.221, 107.191.99.95
51.89.96.41
131.153.76.130
18.180.72.219
163.172.226.137
interval. Hence, P(e > 1) = ( nk−2
nk
)mk . Hence,
P(e = 1) = 1 − P(e = 0) − P(e > 1)
)mk ) − (nk − 2
= 1 − (1 − (nk − 1
= (nk − 1
)mk − (nk − 2
)mk
nk
nk
nk
nk
)mk
(2)
1063