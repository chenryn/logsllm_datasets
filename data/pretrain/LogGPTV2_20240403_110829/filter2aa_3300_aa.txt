1 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
AppSecure 
Brad Woodberg, Juniper Networks 
PI:EMAIL 
twitter:  @bradmatic517 
Defcon 2011 
Network Application Firewalls: Exploits and Defense 
2 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
AGENDA 
 Discussion 
 Beyond Layer 4 – App-FW Explained 
 Can Do / Can’t Do, Vulnerabilities and Limitations 
 Exploitation in Action 
 Getting it Right 
 Key Issues 
 Application Firewalling does not replace traditional security 
mechanisms like stateful firewall and full IPS 
 Application Firewalling has limitations even when properly 
implemented, there are also a number of potential network pitfalls. 
 How to properly deploy this technology in conjunction with 
traditional security mechanisms. 
3 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
HTTP/1.1 200 OK 
Content-Type: text/html 
Server: Apache 
Date: Wed, 09 Feb 2011 
Cache-Control, private 
EVOLUTION 
Client: 
1.1.1.1 
Server: 
2.2.2.2 
Src-IP: 2.2.2.2, Dest-IP: 1.1.1,1, Src-Port 80, Dest-Port 2481, Protocol TCP, (SYN/ACK) 
Src-IP: 2.2.2.2, Dest-IP: 1.1.1,1, Src-Port 80, Dest-Port 2481, Protocol TCP, (ACK) 
Stateful 
Firewall 
Application 
Firewall 
Full IPS 
GET /index.html HTTP /1.0 
Host:  www.google.com 
User-Agent: Mozilla/5.0 
Accept: text/html 
Accept-Language: en-us 
Accept-Encoding 
Accept-Encoding: gzip,deflate 
Accept-Charset: ISO-8859-1 
Keep-Alive: 115 
Connections: keep-alive 
Access List 
4 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
WHAT’S NEW? 
1. Application Identification (AppID) goes beyond traditional stateful firewalls by 
inspecting some Layer 7 payload to identify the application. 
2. AppID does not inspect the entire session like full IPS, and only identifies the 
application, not other activity like exploits. 
3. AppID has actually be around for a long time in numerous technologies, but 
was not typically a user controlled feature. 
5 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPID PATTERN MATCHING 
1. FW Check 
2. Preprocessing: Serialize, Order, Reassemble 
3. Pattern Match 
Finite State Machines 
DFA, NFA, Hybrids 
*Source: http://en.wikipedia.org/wiki/String_searching_algorithm  
String Matching 
Algorithms 
Boyer-Moore 
Aho-Corasick (Hybrid)  
Rabin-Karp 
Hardware, other 
algorithms 
Many other solutions 
exist… 
6 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
NESTED APPLICATIONS 
Layer 1: Cat 5, Fiber, Wifi 
Layer 2: Ethernet 
Layer 3: IPv4, IPv6 
Layer 4: TCP, UDP 
Layer 7: HTTP 
Layer 7: Nested Application 
Pandora Streaming Audio 
Facebook Application 
7 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION ID SIGNATURE EXAMPLES 
 application FTP: 
           client-to-server:  
               dfa-pattern  
"\[(USER|STAT|PORT|CHMOD|ACCOUNT|BY
E|ASCII|GLOB|HELP|AUTH|SYST|QUIT|STOR
|PASV|CWD|PWD|MDTM).*"; etc etc etc             
           server-to-client:   
                dfa-pattern "(220|230|331|530).*"; etc etc etc 
  nested-application Facebook:Application 
 parent-protocol HTTP;         
        member m01  
                 context http-header-host; 
                 pattern "(.*\.)?(facebook\.com|fbcdn\.net)"; etc etc etc 
                 direction client-to-server; 
             member m02  
                 context HTTP URL 
                 pattern "/ap\.php\?i=.*|.*"; etc etc etc 
                 direction client-to-server; 
Layer 7 Application ID Example 
Layer 7 Nested Application ID Example 
*Note many implementations use Closed Source AppID signatures 
8 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
FEATURES THAT RELY ON APPLICATION ID 
1.
Layer 7 services may rely on the results of AppID to determine if they are interested in the session, 
so tricking Application ID can have impacts on whether these services are used or not. 
IPS 
Anti-Virus 
Anti-Spam 
URL Filtering 
Application 
Firewall 
DLP 
QoS 
APP ID 
Session = HTTP 
Src-IP: 1.1.1.1 
Dst-IP: 2.2.2.2 
Dst-Port: 80 
Src-Port: 41932 
Protocol: TCP 
9 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHING 
1. Application ID is Expensive 
2. Results typically the same for IP/Protocol/Port 
3. Improved Performance         
         Sample Application Cache Table 
10 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
\(PRE\)PROCESSING 
“I say we take off and nuke the site from 
orbit. It's the only way to be sure” 
~Ripley 
11 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
Egon:       There's something very important I forgot to tell you. 
Venkman: What? 
Egon:      “Don't cross the streams.” 
SAID WORDS ARE TRUE 
12 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
PREPROCESSING: FRAGMENTATION / SEGMENTATION 
1.
Like IPS, Application Firewall must serialize, order, and reassemble packets/application data before 
trying to do pattern matching. 
2.
E.g. Matching pattern “HTTP”  in a GET request “GET /index.html HTTP/1.0” 
GET /index.html HTTP/1.0 
one packet, (no reassembly required) 
GET 
HT 
/index.html 
TP/1.0 
IP Packet 1 
IP Packet 2 
IP Packet 3 
IP Packet 4 
Multiple IP Fragments, must reassemble before we can do pattern matching, or we will not detect 
string “HTTP” in any individual packet 
GET /index.html HTTP/1.0 
13 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
PREPROCESSING: ORDERING 
1.
We must properly order packets/segments before performing pattern matching 
2.
E.g. Matching pattern “HTTP”  in a GET request “GET /index.html HTTP/1.0” 
GET 
HT 
/index.html 
TP/1.0 
IP Packet 1 
IP Packet 2 
IP Packet 3 
IP Packet 4 
Multiple IP Fragments/Segments, must reassemble before we can do pattern matching, or we will not 
detect string “HTTP” in any individual packet 
GET /index.html HTTP/1.0 
Multiple packets/segments, out of 
order 
Reassembled, we can match the pattern properly now 
14 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
PREPROCESSING: PROPER REASSEMBLY 
1.
What if attacker sends two fragements/segments with a different payload? 
2.
E.g. Matching pattern “HTTP”  in a GET request “GET /index.html HTTP/1.0” 
GET 
HTTP 
/index.html 
/1.0 
Segment 1 
Segment 2 
Segment 4 
SIP 
(denied segment 3) 
(permitted segment 3) 
15 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
NETWORK APPLICATION IDENTIFICATION 
Ripley: How many drops is this for you, Lieutenant?  
Gorman: Thirty eight... simulated.  
Vasquez: How many *combat* drops?  
Gorman: Uh, two. Including this one.  
16 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION IDENTIFICATION 1/3 
1.
Must Pass Some Traffic (Bi-directionally) before Application can be identified 
2.
In this example, TCP 3-way handshake completed, but no L7 payload has been sent so application 
has not be identified. 
17 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION IDENTIFICATION 2/3 
1.
Actual detection must occur on payload, here HTTP has been identified after Layer 7 exchange. 
18 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION IDENTIFICATION 3/3 
1.
Application Firewalling itself doesn’t inspect beyond the application ID, so it doesn’t stop attacks. 
19 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
LIMITATIONS, VULNERABILITIES, EXPLOITATION 
Hudson: Movement. Signal's clean. Range, 20 meters.  
Ripley: They've found a way in, something we've missed.  
Hicks: We didn't miss anything.  
Hudson: 17 meters.  
Ripley: Something under the floor, not in the plans, I don't know.  
Hudson: 15 meters.  
Newt: Ripley!!!  
Hicks: Definitely inside the barricades.  
Newt: Let's go.  
Hudson: 12 meters.  
Ripley: That's right outside the door. Hicks, Vasquez get back. 
Hudson: Man, this is a big f#$*kin' signal.  
Hicks: How are we doing Vasquez, talk to me? 
Vasquez: Almost there.  
Vasquez: There right on us.  
Hicks: Remember, short controlled bursts.  
Hudson: 9 meters. 7. 6.  
Ripley: That can't be; that's inside the room!  
20 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
CLIENT / SERVER COLLUSION 
1.
Start connection as a permitted application, after Application Firewall is done, switch it to another! 