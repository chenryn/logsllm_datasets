# Title: A Billion Open Interfaces for Eve and Mallory: MitM, DoS, and Tracking Attacks on iOS and macOS Through Apple Wireless Direct Link

## Authors:
- Milan Stute, Technische Universität Darmstadt
- Sashank Narain, Northeastern University
- Alex Mariotto, Technische Universität Darmstadt
- Alexander Heinrich, Technische Universität Darmstadt
- David Kreitschmann, Technische Universität Darmstadt
- Guevara Noubir, Northeastern University
- Matthias Hollick, Technische Universität Darmstadt

### Abstract
Apple Wireless Direct Link (AWDL) is a proprietary extension of the IEEE 802.11 (Wi-Fi) standard, used by over one billion iOS and macOS devices for device-to-device communication. AWDL integrates with Bluetooth Low Energy (BLE) to provide services such as Apple AirDrop. This paper presents the first comprehensive security and privacy analysis of AWDL and its integration with BLE. We uncover several vulnerabilities, including design flaws and implementation bugs, that enable man-in-the-middle (MitM) attacks, denial-of-service (DoS) attacks, and privacy leaks. These vulnerabilities allow attackers to modify files transmitted via AirDrop, prevent communication, identify and track users, and crash neighboring devices. The flaws span across AirDrop’s BLE discovery mechanism, AWDL synchronization, user interface (UI) design, and Wi-Fi driver implementation. Our analysis is based on reverse engineering of protocols and code, supported by patent analysis. We provide proof-of-concept (PoC) implementations and demonstrate that these attacks can be mounted using a low-cost ($20) micro:bit device and an off-the-shelf Wi-Fi card. We propose practical and effective countermeasures. While Apple has issued a fix for one DoS vulnerability following our responsible disclosure, the other security and privacy issues require a redesign of some of their services.

## 1. Introduction
Apple Wireless Direct Link (AWDL) is a key protocol in Apple's ecosystem, deployed on over one billion devices, including iOS, macOS, tvOS, and watchOS. AWDL enables device-to-device communication and is integrated with Bluetooth Low Energy (BLE) to support services like AirDrop and AirPlay. Despite its widespread use, the security and privacy implications of AWDL are not well understood, partly due to its proprietary nature. Given the history of security flaws in wireless protocols, such as Bluetooth, WEP, WPA2, GSM, UMTS, and LTE, the lack of information about AWDL's security is a significant concern. 

We conduct the first, to the best of our knowledge, security analysis of AWDL and its integration with BLE. Our analysis reveals several vulnerabilities, including:
- A long-term tracking attack that works despite MAC address randomization.
- A DoS attack targeting the AWDL election mechanism, preventing communication.
- A MitM attack that intercepts and modifies files transmitted via AirDrop.
- Two DoS attacks on Apple's AWDL implementations in the Wi-Fi driver, allowing targeted or simultaneous crashing of neighboring devices.

These flaws span across AirDrop’s BLE discovery mechanism, AWDL synchronization, UI design, and Wi-Fi driver implementation. We demonstrate that these attacks can be stealthy, low-cost, and launched by devices not connected to the target Wi-Fi network. We provide PoC implementations and show that the attacks can be mounted using a low-cost ($20) micro:bit device and an off-the-shelf Wi-Fi card. The impact of these findings extends beyond Apple's ecosystem, as the Wi-Fi Alliance has adopted AWDL as the basis for Neighbor Awareness Networking (NAN), which may also be susceptible to similar attacks.

Our contributions are threefold:
1. Discovery of security and privacy vulnerabilities in AWDL and AirDrop, and presentation of four novel network-based attacks on iOS and macOS.
2. Proposal of practical mitigations for all four attacks.
3. Publication of open-source implementations of both AWDL and AirDrop to stimulate future research.

The rest of this paper is structured as follows. Section 2 provides background information on AWDL. Section 3 details the results of reverse engineering AirDrop. Section 4 presents an attack to activate AWDL on nearby devices, while Section 5 discusses how we leverage this activation mechanism for user tracking attacks. Sections 6 and 7 feature the desynchronization DoS attack and the MitM attack, respectively. Section 8 reports implementation security vulnerabilities, and Section 9 concludes the work. We discuss mitigation techniques and related work in subsections of the respective sections describing the attacks.

## 2. Background on Apple Wireless Direct Link
AWDL is a proprietary wireless ad hoc protocol based on the IEEE 802.11 standard. It uses a channel hopping mechanism to enable "simultaneous" communication with an Access Point (AP) and other AWDL nodes on different channels. This channel hopping is implemented as a sequence of Availability Windows (AWs). Each node announces its own sequence of 16 AWs regularly in AWDL-specific IEEE 802.11 Action Frames (AFs). Each AW has a length of 64 Time Units (TUs), where 1 TU = 1024 µs, resulting in a period τ ≈ 1 s.

To align their sequences in the time domain, AWDL nodes elect a common master and use its AFs as a time reference. The master node transmits synchronization parameters, including the current AW sequence number and the time until the next AW starts. Nodes approximate the start of the next AW based on the received AF and adjust their clocks accordingly. The phase φ denotes the clock offset between two nodes, typically ≤ 3 ms in practice.

Nodes communicate during AWs where their channels match. The overlap O is defined as the integral over the overlap function o of two sequences, taking into account the phase. Formally, the overlap function o(s1, s2, φ, t) is 1 if s1(t) = s2(t - φ) ≠ 0, and 0 otherwise. The overlap O is then given by:

\[ O(s1, s2, \phi) = \int_{0}^{\tau} o(s1, s2, \phi, t) \, dt \]

## 3. Reverse Engineering AirDrop
AirDrop is an application that allows iOS and macOS users to exchange files between devices using AWDL as the transport layer. We reverse-engineered the AirDrop protocol using a MitM HTTPS proxy and a popular disassembler on macOS' sharingd daemon and Sharing framework. Based on our findings, we reimplemented AirDrop in Python and made it available as open-source software.

### 3.1 Discoverability User Setting
When opening the sharing pane in AirDrop, nearby devices appear in the user interface depending on their discoverability setting:
1. **Discoverable by Everyone**: The device can be discovered by any nearby device.
2. **Discoverable by Contacts Only**: The device can only be discovered by contacts in the user's address book.
3. **Receiving Off**: The device does not accept any AirDrop connection requests.

By default, Wi-Fi and Bluetooth are enabled, and AirDrop is set to "Contacts Only." Additionally, devices need to be unlocked to be discovered. Based on a user study, we found that 80% of participants enable AirDrop (59.4% in "Contacts Only" mode and 20.6% in "Everyone" mode), while the remaining 20% disable it. For the rest of the paper, we assume that the target device has AirDrop enabled and is unlocked.

### 3.2 Protocol and User Interaction
The AirDrop protocol involves several mechanisms, including discovery, authentication, and data transfer. The process is illustrated in Figure 2.

1. **Discovery**:
   - The sender emits BLE advertisements containing hashed contact identifiers.
   - The receiver scans for BLE advertisements and compares the sender's contact hashes with its address book. If there is a match or if the receiver is in "Everyone" mode, the receiver activates its AWDL interface.
   - The sender uses mDNS/DNS-SD to look for AirDrop service instances via the AWDL interface.

2. **Authentication**:
   - For each discovered service, the sender establishes an HTTPS connection with the receiver and performs a full authentication handshake.
   - If authentication is successful, the receiver appears as an icon in the sender's UI.

3. **Data Transfer**:
   - When the user selects a receiver, AirDrop sends a request containing metadata and a thumbnail of the file.
   - The receiver decides whether to accept the file. If accepted, the sender transfers the actual file.

The client and server TLS certificates are used in combination with the sender's and receiver's record data to establish an authenticated connection. The typical AirDrop protocol workflow, including user interactions, is shown in Figure 2.

## 4. Activating AWDL on Nearby Devices
In this section, we present an attack to activate AWDL on nearby devices. This activation mechanism is leveraged in subsequent sections to perform user tracking attacks.

## 5. User Tracking Attacks
Using the AWDL activation mechanism, we demonstrate a long-term tracking attack that works despite MAC address randomization. The attack can reveal personal information, such as the name of the device owner, in over 75% of experiment cases.

## 6. Desynchronization DoS Attack
We present a DoS attack targeting the AWDL election mechanism. By deliberately desynchronizing the targets' channel sequences, the attack effectively prevents communication.

## 7. Man-in-the-Middle (MitM) Attack
We describe a MitM attack that intercepts and modifies files transmitted via AirDrop. This attack allows for the planting of malicious files.

## 8. Implementation Security Vulnerabilities
We report implementation security vulnerabilities in Apple's AWDL and AirDrop. These vulnerabilities include issues in the Wi-Fi driver and other components, leading to potential DoS and other attacks.

## 9. Conclusion
This paper presents the first comprehensive security and privacy analysis of AWDL and its integration with BLE. We uncover several vulnerabilities and demonstrate four novel network-based attacks on iOS and macOS. We provide PoC implementations and propose practical mitigations. While Apple has addressed one DoS vulnerability, the other issues require a redesign of some of their services. Our open-source implementations of AWDL and AirDrop aim to stimulate further research in this area.

## References
[References to be included here]