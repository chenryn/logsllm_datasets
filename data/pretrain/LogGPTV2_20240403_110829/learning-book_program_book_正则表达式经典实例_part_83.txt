任何限制，要么就会禁止某些事实上合法的外国文字与其他字符。这样做的目的是为
了把问题变得简单。然而，如果想要在允许外国文字的同时还能提供基本的限制（而
且你也不需要在本实例内前面正则式中精确的名称验证），那么下面的几个正则式可能
会比较适合你的需要。
提示
在下面的正则式中，我们省略了字符串开始和结束的定位符，因为这些
：正则式并不打算单独使用，而是会用作更长模式的一部分。
下面第一个正则式会简单地避免匹配在XML标签中会被用作分隔符和分界符的字符，
并且还会进一步避免匹配到第一个字符是数字的情形：
[^\d\s"/][^\s/]*
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
下面是另外一个更短的形式，它能达到相同的目的。这里我们不再使用两个单独的
字符类，而是采用了否定型顺序环视来禁止数字作为首字符。虽然在字符类之后的
量词会允许正则式匹配无限多个字符，但是前面的的限制只会应用到第一个匹配到
的字符：
(?!\d)[\s"/]+
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
9
参见
XML1.1规范的编辑者之一的JohnCowan解释了在XML1.1中哪些字符是被禁止的，
标记语言和数据交换427
www.TopSage.com
---
## Page 444
以及为什么会这样做。读者可以从他的博客中找到相关内容：http://recycledknowledge
blogspot.com/2008/02/which-characters-are-excluded-in-xml.html。
edition_background.html）中讨论了把XML1.1的名称规则向后移植到XML1.0第5版
中的原因。
8.5添加和标签将纯文本转换为HTML
问题描述
给定一个纯文本学符事，例如一个通过表单提交的多行值，你想要把它转换成一个
HTML片段，从而可以在网页上显示。由两个连续换行符分隔的段落应该用
包起来。而其他的换行则应当被替换为标签。
解决方案
这个问题可以通过4个简单的步骤来解决。在大多数编程语言中，只有中间的2个步
骤才会得益于正则表达式。
步骤1：把HTML特殊字符替换为字符实体引I用
当我们把纯文本转换为HTML的时候，第一步需要把3个特殊的HTML字符&、替换成相应的字符实体引用（参见表8-3）。否则，所得到的标记在网页浏览器中显
示的时候就会得到意想不到的结果。
表8-3HTML特殊字符替换
查找
替换为
(&)
(&amp;
()
《&gt;》
必须首先替换&符号，因为在替换其他的字符实体引用的时候还会向目标字符串中添
加额外的&符号。
步骤2：把所有换行符替换为
查找：
\r\n?1\n
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
428第8章
www.TopSage.com
---
## Page 445
\R
正则选项：无
正则流派：PCRE7、Per15.10
替换为：
替代文本流派：.NET、Java、JavaScript、Perl、PHP、Python、Ruby
步骤3:把连续两个标签替换为
查找：
\s*
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
替换为：
替代文本流派：.NET、Java、JavaScript、Perl、PHP、Python、Ruby
步骤4：把整个字符串用包起来
这一步只需要简单的字符串连接操作，因此不需要用到正则表达式。
JavaScript示例
为了把所有这4个步骤连在一起，我们还创建了一个JavaScript函数html_from
plaintext。这个函数会接受一个字符串作为参数，使用我们刚刚讲解的步骤进行处理，
然后返回新的HTML字符串：
function html_from_plaintext (subject){
// step 1 (plain text searches)
subject = subject.replace(/&/g,"&amp;").
replace(//g,"&gt;");
//step 2
subject = subject.replace(/\r\n?1\n/g, "");
//step3
subject = subject.replace(/\s*/g
//step
4
subject =
+oa[qns+
return subject;
/*
html_from_plaintext("Test.")
->"Test."
html_from_plaintext("Test.\n")
>
"Test."
html_from_plaintext("Test.\n\n")
->"Test."
标记语言和数据交换
429
www.TopSage.com
---
## Page 446
html_from_plaintext("")
->""
*/
在上面的代码片段包含了几个例子，用来展示把这个函数应用到不同字符串之上时的
输出。如果你对JavaScript不是很熟悉，那么要注意在每个正则式字面量之后添加的修
饰符/g会导致replace方法替换该模式的所有匹配，而不只是替换第一个匹配。在这个
符（ASCII位置0x0A）。
讨论
步骤1：把HTML特殊字符替换为字符实体引I用
完成本步骤的最简单方式是使用3个单独的查找和替换操作（参考前面的表8-3
中所列出的替换字符串）。JavaScript总是会使用正则表达式进行全局的查找和替
换操作，但是在其他编程语言中，你通常可以通过简单的纯文本替换来获得更好
的性能。
步骤2：把所有换行符替换为
在这一步中，我们使用正则表达式（rin?\n>找到遵守Windows/MS-DOS（CRLF）、
Unix/Linux/OSX（LF）和老版本的MacOS（CR）所约定的换行序列。Perl5.10和PCRE
7用户可以使用专门的记号R）（注意这里用的是大写的R），而不用匹配上面所列的
或者其他的换行序列。
在下一步中添加段落标签之前，把所有换行符都替换为可以降低整体上的复杂度，
因为这样就可以在随后的替换中在标签之间添加空白。这样做可以帮助你维护
HTML代码的可读性，不会把它们都堆在一起。
替代字符串。你同样还需要修改第3步中的正则表达式来反映这个改动。
步骤3:把连续两个标签替换为
如果看到有两个连续的换行，那么就意味着遇到了一段的结束和下一段的开始，因此
在这个步骤中，我们的替代文本是一个结束的标签，其后紧跟一个起始标签。
如果在目标文本中只包含-个段落（也就是说，不会出现连续的两个换行），那么就不
会进行任何替换。步骤2中已经把几种不同的换行约定进行了替换（现在只剩下了
标签），因此在这一步中，我们只需采用纯文本进行替换。然而，在这里使用一个正则
式可以更进一步忽略出现在换行符之间的空白。而在一个HTML文档中也不会对任意
额外的空格字符进行显示。
430第8章
www.TopSage.com
---
## Page 447
如果要生成的是XHTML代码，因此需要把换行替换为《而不是《》，那么你
就需要把这一步的正则式也调整为：（\s*)。
步骤4:把整个字符串用包起来
步骤3只是简单地在段落之间添加了标记。现在你还需要在整个目标字符串的开始添
加一个标签，并且在字符串的最后添加一个结束的标签。这样我们的任务就完
成了，不管在文本中包含的是1个还是100个段落都一样。
参见
实例4.10讲解了关于Perl和PCRE中的标记的更多信息，并且讲解了如何手动来
匹配R所支持的其他寄形怪状的换行符号。
8.6在XML风格的标签中查找某个特定属性
问题描述
你想要在一个(X)HTML或XML文件中查找包含一个特定属性（例如id）的标签。
本实例会讲解这个问题的几种变体。假设你想要使用不同的正则表达式来匹配下面一
种类型的字符串：
·包含id属性的标签；
·包含id属性的标签；
·
包含-一个id属性且其值为my-id的标签；
·
在其class属性值中包含my-class的标签（类之间使用空格来分开)。
解决方案
包含id属性的标签（速成方案）
如果你想要在编辑器中进行快速的查找，并且编辑器允许对结果进行预览检查，那么
可能使用下面这个（过于简单化的）正则式就足够了：
]+\sid\b[^>]*>
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python.Ruby
下面是上面正则式的宽松排列形式：
#标签开始
+[]*
#标签的剩余部分，包括id属性的值
#标签结束
正则选项：不区分大小写、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
包含id属性的标签（更可靠的版本）
与上面所给的正则式不同，下面这个正则式虽然解决的是相同的问题，但是会支持引！
号引起来的包含字面的>字符的属性值，并且不会匹配到只是在其中某个属性值中包
含单词id的标签：
→（*[].1*[]）S\=S\pTS\+（•[]，1[]1[.
"']
#标签和属性名称等
"[”] *"
...以及引号引起来的属性值
—*[] *
#
) + ？
\sid
#要查找的目标属性名称，整字查找
\s*=\s*
#属性名称-值之间的分隔符
（▪[].∣u[]。）
#把属性值捕获到第1个向后引用中
(？：[>+]
#所有剩余的字符
1”["] *"
#
·..以及引号引起来的属性值
[.<]，1