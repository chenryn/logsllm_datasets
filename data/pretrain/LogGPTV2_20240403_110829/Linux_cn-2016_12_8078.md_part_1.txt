---
**作者**: firstround  
**类别**: 观点  
**评论数据**: []  
**统计信息**:  
  - 评论数: 0  
  - 收藏次数: 0  
  - 点赞数: 0  
  - 分享次数: 0  
  - 浏览量: 7511  
**日期**: 2016-12-31 08:50:00  
**编辑推荐**: 是  
**摘要**: 需要转变思维模式，不是偿还债务，而是创造科技财富；不是铲除旧代码，而是逐步修复代码。  
**来源链接**: <http://firstround.com/review/forget-technical-debt-heres-how-to-build-technical-wealth/>  
**ID**: 8078  
**是否为翻译文章**: 是  
**大图链接**: /data/attachment/album/201612/31/000424cic15s5hjhh8vzlv.jpg  
**永久链接**: /article-8078-1.html  
**缩略图链接**: /data/attachment/album/201612/31/000424cic15s5hjhh8vzlv.jpg.thumb.jpg  
**相关文章**: []  
**审稿人**: ''  
**选择器**: ''  
**总结**: 需要转变思维模式，不是偿还债务，而是创造科技财富；不是铲除旧代码，而是逐步修复代码。  
**标签**: 技术债务, 遗留代码, 开发  
**是否有缩略图**: 否  
**标题**: 忘记技术债务 —— 教你如何创造技术财富  
**是否有标题图片**: 是  
**译者**: rusking  
**更新时间**: 2016-12-31 08:50:00
---

当Andrea Goulet和她的商业伙伴坐在客厅里讨论战略时，他们正在寻找一种能够体现自身价值的方式——帮助其他公司清理遗留代码和技术债务。这个情景让人联想到《老屋》电视节目中对房屋的翻新与改造。

Goulet说：“我们意识到，我们的工作不仅仅是清理遗留代码，而是通过重建软件系统来提高其持久性、稳定性和效率。”她认为，企业应该投资于改进代码以提升系统的性能，就像更换屋顶可以增加房屋的价值一样。“尽管这可能不那么吸引人，但它至关重要，但很多人却忽视了这一点。”

目前，Goulet担任Corgibytes公司的CEO，该公司专注于提供软件现代化和系统重构方面的咨询服务。她指出，创业公司需要转变思维方式：从偿还技术债务转向创造技术财富，从铲除旧代码转向逐步修复代码。她解释了这种新方法，并分享了如何通过聘请优秀工程师来实现这一目标。

### 对遗留代码的反思

Michael Feathers在其著作《高效利用遗留代码》中定义遗留代码为未被测试覆盖的代码。然而，Goulet认为这个定义并不全面。她说：“遗留代码与软件的年龄无关。一个仅两年的应用程序也可能已经进入遗留状态。”关键在于提高软件质量的难易程度。

如果代码缺乏清晰度和文档支持，且无法理解原始开发者的意图，那么这些代码就属于遗留代码。正如Goulet所言，“遗留代码更多是一个沟通问题而非技术问题。”

![](/data/attachment/album/201612/30/235819w0yroszn04s243q8.png)

根据康威定律，组织的沟通结构会在代码中反映出来。因此，若想解决遗留代码问题，必须改善组织内部的沟通方式。

Goulet及其团队像考古学家一样研究遗留系统项目，通过前开发者留下的线索推断他们的意图，并据此做出新的决策。良好的代码结构、明确的意图表达以及整洁的代码是至关重要的。使用通用变量名如“foo”或“bar”会导致后续阅读困难。源代码控制系统提供了历史修改记录，有助于理解代码变更的原因。

自动化测试对于理解程序流程也非常有用。编写并运行单元测试、接受测试、集成测试等都是确保代码可维护性的有效手段。同时，编写清晰的注释可以帮助未来的开发者更好地理解代码。

### 忘记债务，创造技术财富

许多公司在初创阶段急于推出新功能，导致测试不足。随着时间推移，这些遗留代码逐渐成为技术债务。Goulet强调，如果不及时处理这些问题，系统将难以扩展，从而失去市场竞争力。

她建议将技术债务视为积累技术财富的机会。虽然短期内可能看不到明显效果，但长期来看，它会提高生产力。例如，在家中安装新窗户虽需花费一笔钱，但每月可以节省电费。同样地，改进代码虽然暂时不会显著提高效率，但长远来看将带来更大的收益。

通过转变思维方式，企业可以从偿还技术债务转变为创造技术财富，从而为未来的发展奠定坚实基础。