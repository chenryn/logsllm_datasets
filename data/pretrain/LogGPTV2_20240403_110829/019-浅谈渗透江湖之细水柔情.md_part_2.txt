•⽆限叫⻋，重复发送协议造成市场混乱。
•修改评价分数。
•修改限时优惠叫⻋关键参数。
•越权操作其他订单。
8.交易平台
•钱包并发提现，负数提现。
•使⽤钱包⽀付时多个订单并发⽀付（是否⽀付⾦额能⼤于余额）。
•转账负数，并发转账。
•上架商品突破限制，例如数量，字数。
•替换订单，创建订单号如果订单状态可修改，先进到⽀付界⾯，然后将订单修改成更⼤
的⾦额，然后⽀付提前进⼊的⽀付界⾯。
•数量修改。
9.快递
•根据距离计算⾦额时选择近距离，在最终⽣成订单时进⾏收货地址修改。
•订单重量修改。
•⽆验证码限制⽆限发送上⻔取件订单。
•快递员评价分数刷分。
•订单遍历。
10.教育
•免费领取课程遍历id/替换收费课程id。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 5/15
2020/7/27 浅谈渗透江湖之细⽔柔情
•试看课程抓包查看详情是否返回所有课程链接（会员视频课程同理，会员到期仍可观看
或会员权限下可看到专享课程视频链接）。
•⾃助模拟考试多次重复答题刷分。
•顺序缺陷绕过⽀付获取课程链接。
•教师端篡改课时提前结取薪酬。
案例分享
4
现在越来越多的站都采⽤前后端分离，尤其是微信公众号、⼩程序这种，很多都是采⽤
纯接⼝json格式来传递参数信息，但这种纯接⼝传递参数对于⼀些像商城、论坛这种数
据多，⽤户交互密切，也很容易传递多余不必要的敏感参数，发⽣信息泄露。⽐如查看
某个活动排名，在⻚⾯只显示⽤户脱敏的姓名以及⼿机号等，但抓包查看接⼝时，却发
现此接⼝返回数据是脱敏前的敏感数据，有些夸张的甚⾄会返回⽤户的密码等。基于这
种思路，给⼤家分享两个⼩⼩案例。
1.身为⼀名正义的⽩帽⼦，我时常活（qian）跃（fu）在多个⾏业的业务群⾥，积极交
（shou）流（ji）着上线的最新活动跟业务。⽽第⼀个案例，就来源于某个时间某个群
内偶然的⼀条短信。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 6/15
2020/7/27 浅谈渗透江湖之细⽔柔情
不好意思，放错图了，真实短信来源于某快递公司。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 7/15
2020/7/27 浅谈渗透江湖之细⽔柔情
短链接服务是该公司在短信中最新推出的业务，⽽看到四位数的短链接，相信⼤家可能
跟我⼀样，最先想到的便是去遍历穷举短链接地址，看是否可以遍历出多个⽤户的收货
信息。
但当我输⼊链接查看的时候，发现需要⼿机号⼆次认证，想法是美好的，现实却总是残
酷的。
后续查看webpack的router路由时发现⼀处留⾔反馈⻚⾯。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 8/15
2020/7/27 浅谈渗透江湖之细⽔柔情
访问此链接时发现存在接⼝敏感信息泄露，每个问题反馈都泄露了相应⽤户的收货信
息，包括收货⼿机号、收货码、收货短链接等。
但可能因为业务刚开通，留⾔反馈条数并不是很多，此时泄露⽤户数据有限，后续测试
发现在留⾔反馈处存在⼀处图⽚上传点，找不到逻辑漏洞，要是能挖到⼀处上传也是很
⾹的。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 9/15
2020/7/27 浅谈渗透江湖之细⽔柔情
尝试任意⽂件上传后发现服务器对上传⽂件强制重命名为.jpg格式，查看路径发现被上
传⾄存储服务器，也⽆法解析脚本⽂件，任意⽂件上传失败。
再次经历现实的毒打果然让我清醒了许多，仔细查看发现在上传处有⼀个smsId参数。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 10/15
2020/7/27 浅谈渗透江湖之细⽔柔情
当对此参数进⾏修改时，发现在服务端会直接根据此smsId获取⽤户的源⼿机号（即收
货⼿机号）、取货码、短链接并写⼊同⼀个问题反馈详情中。
当通过上传点修改遍历此smsId参数，再结合之前的接⼝敏感信息泄露，即可获取所有
⽤户收货⼿机号及取货码等信息，极⼤危害⽤户的财产安全。
2.第⼆个案例来源于微信公众号，在测试微信公众号时，相信⼤家对openid并不陌⽣，
openid是⽤户在当前公众号下的唯⼀标识（‘身份证’），就是说通过这个openid，就
能区分在这个公众号下具体是哪个⽤户，若是公众号服务端只根据openid来进⾏⽤户的
身份校验，则类似于会话固定，因为⽤户授权给微信公众号，openid是固定不变的，⼀
旦泄露，就意味着⽤户的所有信息及操作可被盗⽤。在测试某公众号商城时，⼜是不经
意间发现每个商品的⽤户评价处，返回的⽤户头像地址中，存在以微信的openid命名的
图⽚名称。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 11/15
2020/7/27 浅谈渗透江湖之细⽔柔情
在 后 续 的 测 试 中 发 现 ， 服 务 端 根 据 fxwxopenid 与 fxuserid 来 识 别 ⽤ 户 ， 但
fxwxopenid与fxuserid必须⼀⼀对应时才可进⾏⽤户相应操作。如下接⼝查看⽤户个
⼈信息时，服务端会从session中获取当前⽤户的fxwxopenid与fxuserid值并赋值给
要查询的参数，并对⽤户这两个参数的⼀致性进⾏校验，当校验成功后才会执⾏查询，
若不⼀致则会提示⽤户参数错误：
当不⼀致时提示⽤户参数错误：
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 12/15
2020/7/27 浅谈渗透江湖之细⽔柔情
由于商品评价处泄露的⽤户的openid，现在只需要知道⽤户的userid值即可完全代替
⽤ 户 进 ⾏ 任 意 操 作 ， 虽 然 可 以 通 过 爆 破 ⽤ 户 的 userid 去 跟 openid ⼀ ⼀ 对 应 ， 但 是
userid值巨⼤，爆破难度很⾼。
在fuzz⼤法尝试获取⽤户名接⼝也未能奏效后，场⾯⼀度陷⼊僵局，我甚⾄想到了放弃
来掩饰菜的尴尬。
正当我准备退出登录时，看⻅了联系客服按钮，想到在客户获取会话时，⼀般会获取当
前⽤户的id或⽤户名信息，点击后果然看到了⼀处可以根据userid来查询⽤户昵称的接
⼝，这可能就是传说中的皂滑弄⼈吧。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 13/15
2020/7/27 浅谈渗透江湖之细⽔柔情
因为在商品评价处，⽤户昵称也会进⾏展示，所以只需要进⾏遍历⽤户的id来查询⽤户
昵称并保存下来，通过⽤户昵称将userid值与openid值关联起来，就可以获得⽤户的
身份令牌为了验证漏洞存在，写了个⼩脚本遍历了⼀⼩部分⽤户名跟id值。
最后只筛选了三个⽤户的openid跟⽤户userid以及昵称作为确认漏洞存在，⽽当把⽤
户名称全部遍历出来，再与商品评价处的⽤户userid以及openid⼀⼀对应，便可获取
⼤量⽤户的身份令牌。
总结
5
本⽂更多的是针对于业务逻辑测试点的⼀些思维分享，不能局限束缚在这些测试点中。
熟悉相应系统业务流程，虽然会花费⼀定时间，但磨⼑不误砍柴⼯，业务逻辑⽅⾯的漏
洞最重要的是在熟悉业务流程的基础上，发散思维，能够⽐开发多想⼀层，那漏洞便会
离你更近⼀分。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 14/15
2020/7/27 浅谈渗透江湖之细⽔柔情
⼀名优秀的渗透测试⼯程师，既要武能漫游内⽹拿域控，⼜可以⽂能熟悉业务找逻辑。
⽂武兼备，刚柔并济，祝⼤家早⽇笑傲江湖。
https://mp.weixin.qq.com/s/GCTPZ4IZlih7plHowoYADQ 15/15