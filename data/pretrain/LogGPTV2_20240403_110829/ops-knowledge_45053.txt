Question: Consider the following code snippet from a program written in C:


char *data;
char *temp;
data = (char *) malloc(100);
free(data);
temp = (char *) malloc(50);
strcpy(temp, "Sample data");
printf("%s", data);
free(temp);


Which of the following lines of code is most susceptible to a use-after-free vulnerability?
"A": "strcpy(temp, "Sample data");",
"B": "printf("%s", data);",
"C": "temp = (char *) malloc(50);",
"D": "free(temp);"
Answer: B