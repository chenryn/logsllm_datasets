## Overview
This is implementation of BottomBar with multiple Navigation stack to archive
multi-workspace UX, as explained in here.
## Steps to Reproduce
Run this flutter app
        import 'package:flutter/material.dart';
        void main() {
          runApp(new MyApp());
        }
        class MyApp extends StatelessWidget {
          @override
          Widget build(BuildContext context) {
            return new MaterialApp(
              home: new MyHomePage(),
            );
          }
        }
        class SecurePage extends StatelessWidget {
          final int index;
          SecurePage(this.index);
          Widget build(BuildContext context) {
            return new Column(
              children: [
                new AppBar(
                  title: new Text('Secure'),
                ),
                new Text('No $index'),
                new Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
                  child: new TextField(
                    autofocus: index % 2 == 1,
                    decoration: const InputDecoration(
                      hintText: 'Search',
                    ),
                  ),
                ),
                new IconButton(
                  icon: new Icon(Icons.verified_user),
                  onPressed: () {
                    Navigator.of(context).push(
                      new MaterialPageRoute(
                        builder: (BuildContext context) {
                          return new VerifiedPage(index + 1);
                        },
                      ),
                    );
                  },
                ),
              ],
            );
          }
        }
        class VerifiedPage extends StatelessWidget {
          final int index;
          VerifiedPage(this.index);
          Widget build(BuildContext context) {
            return new Column(
              children: [
                new AppBar(
                  title: new Text('Verity'),
                ),
                new Text('No $index'),
                new Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
                  child: new TextField(
                    autofocus: index % 2 == 1,
                    decoration: const InputDecoration(
                      hintText: 'Search',
                    ),
                  ),
                ),
                new IconButton(
                  icon: new Icon(Icons.security),
                  onPressed: () {
                    Navigator.of(context).push(
                      new MaterialPageRoute(
                        builder: (BuildContext context) {
                          return new SecurePage(index + 1);
                        },
                      ),
                    );
                  },
                ),
              ],
            );
          }
        }
        class MyHomePage extends StatefulWidget {
          @override
          State createState() => new MyHomePageState();
        }
        class MyHomePageState extends State {
          int _page = 0;
          List initialWidgets = [
            new SecurePage(0),
            new VerifiedPage(0),
          ];
          Widget build(BuildContext context) {
            return new Scaffold(
              body: new Stack(
                children: new List.generate(initialWidgets.length, (int index) {
                  return new IgnorePointer(
                    ignoring: index != _page,
                    child: new Opacity(
                      opacity: _page == index ? 1.0 : 0.0,
                      child: new Navigator(
                        onGenerateRoute: (RouteSettings settings) {
                          return new MaterialPageRoute(
                            builder: (_) => initialWidgets[index],
                          );
                        },
                      ),
                    ),
                  );
                }),
              ),
              bottomNavigationBar: new BottomNavigationBar(
                currentIndex: _page,
                onTap: (int index) {
                  setState(() {
                    _page = index;
                  });
                },
                items: [
                  new BottomNavigationBarItem(
                    icon: new Icon(Icons.security),
                    title: new Text('Secure'),
                  ),
                  new BottomNavigationBarItem(
                    icon: new Icon(Icons.verified_user),
                    title: new Text('Verified'),
                  ),
                ],
              ),
            );
          }
        }
## What is wrong
Keyboard is not coming up in the first view ('Secure'), although it received
keyboard input. Note, IconButton is working fine.
![xvc8eh0st0](https://user-
images.githubusercontent.com/2137932/31050452-bd4bbbfc-a67c-11e7-8e96-ddb47c996936.gif)
## Expected
TextField should work in both Secure and Verfity pages.