在多数条件下，[**[chrony]{.application}**]{.strong}
都会表现良好，包括时断时续的网络连接、有大量网络数据的网络、温度不稳定（普通计算机时钟对温度敏感）以及不持续运行或在虚拟机上运行的系统。
通过互联网镜像同步的两天机器之间的准确性通常在几毫秒之内，而对于 LAN
中的机器则为几十微秒。硬件时间戳或硬件参考时钟可以提高同步到子微秒级别的两台计算机之间的准确性。
[**[chrony]{.application}**]{.strong} 包括
`chronyd`{.literal}（一个在用户空间运行的守护进程）和
[**[chronyc]{.application}**]{.strong}（可用来监控 `chronyd`{.literal}
性能并在运行时更改各种操作参数的命令行程序）。
[**[chrony]{.application}**]{.strong} 守护进程（`chronyd`{.literal}）
可以由命令行工具 [**[chronyc]{.application}**]{.strong}
监控和控制。这个工具提供了一个命令提示，允许输入大量命令来查询
`chronyd`{.literal}
的当前状态并修改其配置。在默认情况下，`chronyd`{.literal} 只接受来自本地
[**[chronyc]{.application}**]{.strong}
实例的命令，但它也可以被配置为接受来自远程主机的监控命令。应该限制远程访问。
:::
::: section
::: titlepage
# []{#using-chrony-to-configure-ntp_configuring-basic-system-settings.html#proc_using-chronyc-to-control-chronyd_using-chrony-to-configure-ntp}使用 chronyc 来控制 chronyd {.title}
:::
本节论述了如何使用 [**[chronyc]{.application}**]{.strong} 命令行工具控制
`chronyd`{.literal}。
::: orderedlist
**流程**
1.  要在互动模式中使用命令行工具 [**[chronyc]{.application}**]{.strong}
    来更改本地 `chronyd`{.literal}
    实例，以`根`{.literal}用户身份输入以下命令：
    ``` literallayout
    # chronyc
    ```
    如果要使用某些受限命令，[**[chronyc]{.application}**]{.strong}
    需要以 `root`{.literal} 运行。
    [**[chronyc]{.application}**]{.strong} 命令提示符如下所示：
    ``` literallayout
    chronyc>
    ```
2.  要列出所有命令，请键入 `help`{.literal}。
3.  或者，如果与以下命令一同调用，该工具也可以在非互动命令模式下调用：
    ``` literallayout
    chronyc command
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
使用 [**[chronyc]{.application}**]{.strong}
所做的更改不具有持久性，它们会在 `chronyd`{.literal}
重启后丢失。要使更改有持久性，修改 `/etc/chrony.conf`{.literal}。
:::
:::
::: section
::: titlepage
# []{#using-chrony-to-configure-ntp_configuring-basic-system-settings.html#proc_migrating-to-chrony_using-chrony-to-configure-ntp}迁移到 chrony {.title}
:::
在 Red Hat Enterprise Linux 7 中，用户可以选择
[**[ntp]{.application}**]{.strong} 和
[**[chrony]{.application}**]{.strong} 来保证准确计时。有关
[**[ntp]{.application}**]{.strong} 和
[**[chrony、ntp]{.application}**]{.strong} `d`{.literal} 和
`chronyd`{.literal} 之间的区别，请参阅 [ntpd 和
chronyd](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-configuring_ntp_using_the_chrony_suite#sect-differences_between_ntpd_and_chronyd){.link}
之间的差别。
从 Red Hat Enterprise Linux 8 开始，不再支持
[**[ntp]{.application}**]{.strong}。[**[Chrony]{.application}**]{.strong}
默认启用。因此，您可能需要从 [**[ntp]{.application}**]{.strong} 迁移到
[**[chrony]{.application}**]{.strong}。
在大多数情况下，从 [**[ntp]{.application}**]{.strong} 迁移到
[**[chrony]{.application}**]{.strong}
是非常直接的。程序、配置文件和服务的相应名称为：
::: table
[]{#using-chrony-to-configure-ntp_configuring-basic-system-settings.html#tabl-corresponding-names-when-migrating-to-chrony}
**表 29.1. 从 ntp 迁移到 chrony 时的程序、配置文件和服务对应的名称**
::: table-contents
  ntp 名称           chrony 名称
  ------------------ ---------------------
  /etc/ntp.conf      /etc/chrony.conf
  /etc/ntp/keys      /etc/chrony.keys
  ntpd               chronyd
  ntpq               chronyc
  ntpd.service       chronyd.service
  ntp-wait.service   chrony-wait.service
:::
:::
通过使用 `-q`{.literal} 选项或 `-t`{.literal} 选项，`chronyd`{.literal}
可以替代 [**[ntpdate]{.application}**]{.strong} 和
[**[sntp]{.application}**]{.strong} 程序（包含在 `ntp`{.literal}
发布中）。可在命令行中指定配置以避免读取
`/etc/chrony.conf`{.literal}。例如：如下所示运行 `chronyd`{.literal}
可以替代运行 `ntpdate ntp.example.com`{.literal}：
``` literallayout
# chronyd -q 'server ntp.example.com iburst'
2018-05-18T12:37:43Z chronyd version 3.3 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS +SECHASH +IPV6 +DEBUG)
2018-05-18T12:37:43Z Initial frequency -2.630 ppm
2018-05-18T12:37:48Z System clock wrong by 0.003159 seconds (step)
2018-05-18T12:37:48Z chronyd exiting
```
[**[ntpstat]{.application}**]{.strong} 工具程序之前包含在
`ntp`{.literal} 软件包中，且只支持 `ntpd`{.literal}。现在它支持
`ntpd`{.literal} 和 `chronyd`{.literal}。它现在包括在
`ntpstat`{.literal} 软件包中。
::: section
::: titlepage
## []{#using-chrony-to-configure-ntp_configuring-basic-system-settings.html#_migration_script}迁移脚本 {.title}
:::
名为 `ntp2chrony.py`{.literal} 的 Python 脚本包含在 `chrony`{.literal}
软件包文档中（`/usr/share/doc/chrony`{.literal}）。这个脚本会自动将现有的
`ntp`{.literal} 配置转换为 `chrony`{.literal}。它支持
`ntp.conf`{.literal}
文件中最常用的指令和选项。所有在转换中忽略的行都会作为注释包含在生成的
`chrony.conf`{.literal} 文件中以便用户进行核查。在 `ntp`{.literal}
密钥文件中指定但未在 `ntp.conf`{.literal}
中被标记为可信密钥的密钥会作为注释出现在生成的 `chrony.keys`{.literal}
文件中。
默认情况下，该脚本不会覆盖任何文件。如果 `/etc/chrony.conf`{.literal} 或
`/etc/chrony.keys`{.literal} 已经存在，使用 `-b`{.literal}
选项可以重新命名文件以作为备份。这个脚本支持其他选项。`--help`{.literal}
选项输出所有支持选项。
在 `ntp`{.literal} 软件包中提供了一个默认 `ntp.conf`{.literal}
调用脚本示例：
``` literallayout
# python3 /usr/share/doc/chrony/ntp2chrony.py -b -v
Reading /etc/ntp.conf
Reading /etc/ntp/crypto/pw
Reading /etc/ntp/keys
Writing /etc/chrony.conf
Writing /etc/chrony.keys
```
本例中唯一忽略的指令是 `disable monitor`{.literal}，它在
`noclientlog`{.literal} 指令中有一个等同的 chrony 项。它包括在默认
`ntp.conf`{.literal} 中只是用于缓解一个安全工具。
生成的 `chrony.conf`{.literal} 文件通常包含大量与 `ntp.conf`{.literal}
中限制行对应的 `allow`{.literal} 指令。如果您不想使用
`chronyd`{.literal} 作为 `NTP`{.literal} 服务器，从
`chrony.conf`{.literal} 中删除所有 `allow`{.literal} 指令。
:::
:::
:::
[]{#using-chrony_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#using-chrony_configuring-basic-system-settings}第 30 章 使用 Chrony {.title}
:::
以下小节介绍了如何安装、启动和停止
`chronyd`{.literal}，以及如何检查是否同步
`chrony`{.literal}。部分还介绍了如何手动调整系统时钟。
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#managing-chrony_using-chrony}管理 chrony {.title}
:::
以下流程描述了如何安装、启动、停止和检查 `chronyd`{.literal} 的状态。
::: orderedlist
**流程**
1.  在 Red Hat Enterprise Linux 中默认安装
    [**[chrony]{.application}**]{.strong} 套件。以 `root`{.literal}
    用户运行以下命令进行验证：
    ``` literallayout
    # yum install chrony
    ```
    [**[chrony]{.application}**]{.strong} 守护进程的默认位置为
    `/usr/sbin/chronyd`{.literal}。命令行工具将安装到
    `/usr/bin/chronyc`{.literal}。
2.  运行以下命令检查 `chronyd`{.literal} 的状态：
    ``` literallayout
    $ systemctl status chronyd
    chronyd.service - NTP client/server
       Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled)
       Active: active (running) since Wed 2013-06-12 22:23:16 CEST; 11h ago
    ```
3.  要启动 `chronyd`{.literal}，使用 `root`{.literal}
    用户身份运行以下命令：
    ``` literallayout
    # systemctl start chronyd
    ```
    要确保 `chronyd`{.literal} 在系统启动时自动启动，以 `root`{.literal}
    身份运行以下命令：
    ``` literallayout
    # systemctl enable chronyd
    ```
4.  要停止 `chronyd`{.literal}，以 `root`{.literal} 身份运行以下命令：
    ``` literallayout
    # systemctl stop chronyd
    ```
    要防止 `chronyd`{.literal} 在系统启动时自动启动，以 `root`{.literal}
    身份运行以下命令：
    ``` literallayout
    # systemctl disable chronyd
    ```
:::
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#checking-if-chrony-is-synchronized_using-chrony}检查是否同步 chrony {.title}
:::
以下流程描述了如何检查 [**[chrony]{.application}**]{.strong} 是否与使用
`tracking`{.literal}、`source和`{.literal} sourcestats``{=html}
命令同步。
::: orderedlist
**流程**
1.  运行以下命令检查 [**[chrony]{.application}**]{.strong} 跟踪：
    ``` literallayout
    $ chronyc tracking
    Reference ID    : CB00710F (foo.example.net)
    Stratum         : 3
    Ref time (UTC)  : Fri Jan 27 09:49:17 2017
    System time     :  0.000006523 seconds slow of NTP time
    Last offset     : -0.000006747 seconds
    RMS offset      : 0.000035822 seconds
    Frequency       : 3.225 ppm slow
    Residual freq   : 0.000 ppm
    Skew            : 0.129 ppm
    Root delay      : 0.013639022 seconds
    Root dispersion : 0.001100737 seconds
    Update interval : 64.2 seconds
    Leap status     : Normal
    ```
2.  sources 命令显示 `chronyd`{.literal}
    正在访问的当前时间源的信息。要检查
    [**[chrony]{.application}**]{.strong} 源，请运行以下命令：
    ``` literallayout
    $ chronyc sources
    	210 Number of sources = 3
    MS Name/IP address         Stratum Poll Reach LastRx Last sample
    ===============================================================================
    #* GPS0                          0   4   377    11   -479ns[ -621ns] /-  134ns
    ^? a.b.c                         2   6   377    23   -923us[ -924us] +/-   43ms
    ^ d.e.f                         1   6   377    21  -2629us[-2619us] +/-   86ms
    ```
    可以使用可选参数 -v
    来包括详细信息。在这种情况下，会输出额外的标头行显示字段含义的信息。
3.  `sourcestats`{.literal} 命令显示目前被 `chronyd`{.literal}
    检查的每个源的偏移率和误差估算过程的信息。要检查
    [**[chrony]{.application}**]{.strong} 源统计信息，请运行以下命令：
    ``` literallayout
    $ chronyc sourcestats
    210 Number of sources = 1
    Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
    ===============================================================================
    abc.def.ghi                11   5   46m     -0.001      0.045      1us    25us
    ```
    可以使用可选参数 `-v`{.literal}
    来包括详细信息。在这种情况下，会输出额外的标头行显示字段含义的信息。
:::
::: itemizedlist
**其它资源**
-   `chronyc(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#manually-adjusting-the-system-clock_using-chrony}手动调整系统时钟 {.title}
:::
下面的步骤描述了如何手动调整系统时钟。
::: orderedlist
**流程**
1.  要立即调整系统时钟，绕过单机进行的任何调整，以 `root`{.literal}
    身份运行以下命令：
    ``` literallayout
    # chronyc makestep
    ```
:::
如果使用了 `rtcfile`{.literal}
指令，则不应该手动调整实时时钟。随机调整会影响
[**[chrony]{.application}**]{.strong}测量实时时钟偏移速度的需求。
:::
::: section
::: titlepage
# []{#using-chrony_configuring-basic-system-settings.html#setting-up-chrony-for-a-system-in-an-isolated-network_using-chrony}在隔离的网络中为系统设定 chrony {.title}
:::
对于从来不连接到互联网的网络来说，一台计算机被选为主计时服务器。其他计算机要么是主计算机的直接客户端，要么是客户端的客户端。在
master 上，必须使用系统时钟的平均偏移率手动设置 drift 文件。如果 master
被重启，它将从周围的系统获得时间并计算设定系统时钟的平均值。之后它会恢复基于
drift 文件的调整。当使用 settime 命令时会自动更新 `drift`{.literal}
文件。
以下流程描述了如何在隔离的网络中为系统设置
[**[chrony]{.application}**]{.strong}。
::: orderedlist
**流程**
1.  在选为 master 的系统上，以 `root`{.literal}
    用户身份运行一个文本编辑器来编辑
    `/etc/chrony.conf`{.literal}，如下所示：
    ``` literallayout
    driftfile /var/lib/chrony/drift