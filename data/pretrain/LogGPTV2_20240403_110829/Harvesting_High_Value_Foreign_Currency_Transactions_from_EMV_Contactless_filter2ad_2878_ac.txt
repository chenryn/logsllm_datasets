payment  card  reject  any  contactless  foreign  currency  transaction 
immediately, but is just not practical. As we will argue in Section 
8, a more effective solution can be implemented by either forcing 
foreign  currency  contactless  transactions  to  be  carried  out  in 
online  mode  only,  or  where  that  is  not  possible,  to  switch  the 
transaction to "Chip & PIN". 
4.  EMV TRANSACTION SAFEGUARDS 
In  the  UK,  EMV  credit  /  debit  cards  can  perform  two  different 
transaction  types:  contactless  “tap  and  go”  transactions,  and 
contact “Chip & PIN” transactions. 
4.1  Contactless “tap and go” transactions 
Contactless transactions are intended to be a quick and convenient 
replacement  for  small  cash  purchases.    In  a  contactless  payment, 
the credit / debit card is placed on the POS terminal’s contactless 
reader for less than 1 second and the payment is approved. 
There  are  two  significant  differences  between  a  contactless 
transaction  and  a  contact  “Chip  &  PIN”  transaction.    First,  the 
contact  transaction  requires  the  cardholder  to  enter  their  PIN, 
whereas  the  PIN  is  not  required  for  contactless  transactions. 
Second, contact transactions require the card to be removed from 
the  wallet  and  inserted  into  the  POS  terminal,  whilst  contactless 
transactions  is  completed  wirelessly  by  placing  the  card  on  the 
POS terminal, this can be done whilst the card is still in the wallet. 
PIN  entry  provides  one  of  the  key  safeguards  in  “Chip  &  PIN” 
transactions.  The  PIN  ensures  that  only  the  cardholder,  who 
knows the PIN, can use the card. Contactless transactions are not 
protected  by  PIN  entry.    EMV  have  therefore  implemented  the 
following safeguards to limit the potential loss from lost or stolen 
contactless cards: 
In the UK, each contactless transaction is limited to £20; any 
transaction  above  this  value  will  require  a  Chip  &  PIN 
transaction. 
EMV  cards  are  limited  to  five  consecutive  contactless 
transactions, after which the PIN must be entered in a “Chip 
& PIN” transaction. 
These  safeguards  ensure  that  the  maximum  loss  due  to  a  lost  or 
stolen contactless card is £100. 
4.2  Contact “Chip & PIN” transactions 
The  majority  of  EMV  card  transactions  are  “Chip  &  PIN” 
transactions.    “Chip  &  PIN”  transactions  allow  purchases  up  to 
the balance of a debit card or the credit limit of a credit card. 
“Chip  &  PIN”  transactions  are  protected  by  the  following 
safeguards.  First, the cardholder must enter their PIN to authorise 
the transaction.  This is used to ensure that the person making the 
payment is the authorised cardholder. 
Second,  if  the  value  of  the  transaction  is  greater  than  the  card’s 
offline  transaction  limit,  the  card  will  request  that  the  POS 
terminal  makes  an  online  connection  to  the  bank  to  perform 
additional authorisation checks.   The POS terminal  must connect 
to the bank to provide the card with the online authorisation code 
(Authorisation  Response  Cryptogram  (ARPC)).    The  bank  will 
respond with the authorisation code only if the card has not been 
reported lost or stolen, and the account has sufficient funds to pay 
for the transaction.  The card will only authorise the transaction if 
it  receives  a  valid  online  authorisation  code  from  the  POS 
terminal. 
6 
4.3  Cryptographic protection of transactions 
The EMV payment system utilises cryptography to ensure that (i) 
only genuine EMV credit / debit cards can authorise transactions 
(ii) the transaction details approved by the card cannot be altered. 
4.3.1  Application Cryptogram (AC) 
The  AC  contains  a  Message  Authentication  Code  (MAC).    The 
MAC  utilises  a  symmetric  algorithm,  either  Triple  DES  or  AES, 
to encipher the transaction data fields detailed below: 
amount authorised (value of the purchase) 
amount other (cashback amount if required) 
terminal country code (UK - 0826, USA - 0840 etc.) 
terminal verification results (POS status code) 
transaction currency code (UK£ - 0826, US$ - 0840 etc.) 
transaction date 
transaction type (purchase - 00, cash - 01, refund - 20) 
POS terminal unpredictable number (prevents cloned cards) 
application interchange profile (card’s security capabilities) 
application transaction counter (card’s transaction counter) 
The  AC  is  sent  to  the  bank  as  part  of  the  Financial  Presentment 
message  (see  Table  2).    This  allows  the  bank  to  verify  that  the 
transaction  details  supplied  by  the  merchant  are  the  same  as  the 
transaction approved by the EMV card. 
4.3.2  Signed Dynamic Authentication Data (SDAD) 
The  SDAD  is  a  RSA  digital  signature  on  a  SHA1  hash  of  the 
transaction  data.  In  the  Visa  fDDA  protocol  the  transaction  data 
included in the SDAD are: 
POS terminal unpredictable number  
amount authorised  
transaction currency code 
card unpredictable number 
card transaction qualifiers  
The SDAD is used by the POS terminal to verify that the card is 
genuine in an offline transaction. 
5.  EMV FUNCTIONALITY EXPLOITED 
BY THE ATTACK  
The  attack  circumvents  the  safeguards  built  into  EMV  credit  / 
debit  cards  by  exploiting  some  EMV  functionality  that  has  been 
made  vulnerable  due  to  the  introduction  of  contactless  payment 
interface.  In  particular,  there  are  three  features  that  are  exploited 
in our attack scenario: 
  Contactless  foreign  currency  transactions.  As  described  in 
Section  4.1,  the  safeguards  built  into  EMV  will  limit  the 
maximum  value  allowed  for  each  contactless  transaction  to 
£20.    Any  amount  over  £20  will  require  the  cardholder  to 
enter their PIN, and any amount above the offline transaction 
limit (e.g. £100) will require the POS terminal to connect to 
the bank to perform additional checks before the transaction 
is  approved.  Our  research  has  found  that  EMV  credit  and 
debit  cards  can  be  tricked  into  approving  contactless 
transactions  of  much  higher  value  than  £20,  simply  by 
requesting  the  transaction  in  a  foreign  currency.    In  our 
experiments,  EMV  cards  have  been  found  to  approve 
contactless transactions up to €999,999.99 without requesting 
the  PIN,  and  without  requesting  that  the  POS  terminal  goes 
online to perform additional checks.  This sidesteps the usual 
safeguards employed by EMV payments system. 
  Wireless  interaction  with  card.  This  attack  exploits  the 
wireless  interface  on  contactless  cards  to  collect  transaction 
authorisations whilst the card remains in cardholder’s wallet.  
This  means  the  cardholder  remains  unaware  that  they  have 
been  exploited  until  their  card  statement  arrives,  thereby 
allowing  the  attack  to  operate  for  longer  and  be  more 
lucrative to the attackers. 
The  merchant  ID  and  terminal  ID  can  be  added  later by  the 
rogue  merchant,  as  these  data  are  not  included  in  the  AC 
generated by the card. The AC cryptographically ensures that 
the transaction data approved by the card is the same as that 
received by the issuing bank (see Section 4.3). 
6.  IMPLEMENTATION 
To  validate  our  research,  we  have  implemented  a  number  of 
software elements which demonstrate the viability and practicality 
of the attack.  The software consists of three separate applications: 
  An  Android  mobile  phone  app  which  captures  transactions 
from  the  cards.    Transactions  are  stored  on  the  Android 
phone to be transmitted to the rogue merchant later. 
  A  rogue  merchant  Internet  listening  service  which  waits  to 
receive  the  captured  transactions  from  attackers  using  the 
Android mobile phone app. 
  A  rogue  merchant  bank  communications  module  which 
packages  the  transactions  into  financial  presentment  request 
messages for transmission to the bank.  This module handles 
all  of  the  communication  with  the  bank,  which  involves 
sending  the  financial  presentment  request  messages  and 
receiving acknowledgement messages. 
6.1  Android transaction capture app 
We  have  implemented  the  attack  platform  on  an  NFC  enabled 
Android  mobile  phone  as  this  would  be  an  innocuous  device  for 
an attacker to carry around in a crowd. 
6.1.1  Attack platform 
For implementation and testing, we selected the  Google Nexus 5 
mobile  phone.    Implementing  on  a  mobile  phone  platform  limits 
the effective range to approximately 1 cm.  However in testing the 
Nexus  5  was  capable  of  extracting  transactions  from  an  EMV 
contactless  card  which  was  located  in  a  leather  wallet  in  the 
pocket of a pair of jeans worn by our “unsuspecting” test victim. 
6.1.2  Android app operation 
The attacker starts by pre-setting the amount and currency for all 
the  transactions  which  will  be  captured  from  the  victims  cards. 
Figure 3 shows the attacker setting the amount to 999,999.00 and 
setting  the  currency  to  0978  which  is  the  code  for  Euros.    In 
testing we have also obtained transaction approvals in US Dollars 
for $999,999.99 (currency code 0840). 
The app is now ready and will automatically collect a transaction 
from  every  EMV  contactless  card  that  it  detects,  without  any 
further  interaction  from  the  attacker.    This  will  minimise  the 
7 
chance  of  the  attacker  being  detected,  as  they  are  not  constantly 
interacting with their phone. 
Figure 3. Capture transaction settings 
Figure 4. Capturing the transaction     
In Figure 4 the screen on the left shows the app waiting to detect 
an  EMV  contactless  card.    The  screen  on  the  right  shows  the 
€999,999.99 transaction being captured from the card. 
When  the  app  detects  an  EMV  contactless  card,  it  sounds  an 
audible alert in the attacker’s headphones; a second alert is given 
once  the  transaction  has  been  successfully  collected.    This  takes 
less  than  500  milliseconds.    Once  the  transaction  has  been 
captured the app stores the transaction data for transmission to the 
rogue  merchant  later.    As  soon  as  the  app  has  collected  a 
transaction,  it  automatically  returns  to  waiting  to  detect  another 
EMV card; it is now ready to collect the next transaction. 
Figure  5  shows  the  data  fields  as  captured  by  the  app,  this 
includes  all  of  the  data  and  cryptographic  authorisation  codes 
required by the bank to accept the transaction as genuine. 
The  mobile  app  stores  transaction  data  until  it  has  an  Internet 
connection, at which point the app transmits the data to the rogue 
merchant. 
6.1.5  Transmission to the rogue merchant 
Our  software  can  collect  and  store  multiple  offline  transactions, 
without a connection to the Internet.  The stored transactions can 
then  be  transmitted  once  a  suitable  connection  is  available.    The 
transaction  details  will  include  all  of  the  data  fields  required  by 
the  bank.    The  Application  Cryptogram  (AC)  and  the  clear  text 
equivalent  fields  listed  in  Section  4.3  are  arguably  the  most 
important,  as  together  they  are  used  by  the  bank  to  verify  and 
thereby approve the transaction. 
6.2  The rogue merchant application 
The rogue merchant application consists of three processes: 
an  Internet  listening  service  to  receive  the  transactions  from 
the Android transaction capture app 
a  data  conversion  module  which  converts  the  EMV  data  in 
TLV format into the ISO 8583 / Standard 70 format required 
by the bank 
a POS terminal emulation which sends the formatted data to 
the  bank 
the  fraudulent 
transactions 
the  money  from 
to  collect 
Figure 5. Captured transaction data 
6.1.3  Transaction protocol 
The  code  implements  the  Visa  fDDA  [5]  contactless  transaction 
protocol sequence (depicted as Figure 6) as this is an offline only 
contactless  protocol.    This  allows  the  attack  to  be  performed  in 
less than 500 milliseconds and avoids additional validation by the 
bank. 
6.2.1  Internet based listening service 
This  is  a  simple  Internet  based  service  which  listens  to  a  pre-
agreed  IP  address  and  port  number.    The  Android  transaction 
capture app (Section 6.1) connects to the pre-arranged IP address 
and  port  number  to  send  all  of  the  collected  transactions  to  the 
rogue  merchant.    The  listening  service  stores  the  transactions  for 
later processing. 
6.2.2  Data conversion process 
The  data  conversion  process  accepts  TLV  data  as  captured  from 
the  EMV  credit  /  debit  card  and  converts  it  into  ISO8583  / 
Standard 70 format required by the bank. 
To  request  the  money  from  the  victim’s  account,  the  rogue 
merchant must send a financial presentment message (in ISO8583 
or  Standard  70  format)  to  the  acquirer  bank  that  holds  their 
merchant account.  
Table 2 shows the data fields required by the ISO 8583 financial 
presentment  message  and  shows  how  the  rogue  merchant  will 
complete the data fields from the data generated by the EMV card 
during transaction approval. 
6.2.3  POS terminal emulation 
Once  the  financial  presentment  request  message  has  been 
generated,  it  is  sent  to  the  acquirer  bank  to  complete  the 
transaction and transfer the money from the victim’s bank account 
into the rogue merchant’s account. 
In the UK, communications  with the acquirer bank over a public 
IP  network  must  be  protected  using  Secure  Sockets 
Layer/Transport Layer Security (SSL/TLS) or IPSec [12]. 
The  use  of  standard  encryption  such  as  SSL/TLS  and/or  IPSec 
allows  the  rogue  terminal  to  be  implemented  in  Java  on  a  PC 
platform; no specialist hardware is required. 
Figure 6. Visa fDDA transaction protocol sequence 
6.1.4  Storing the transaction data 
The transaction data is sent by the card in TAG / Length / Value 
(TLV) format. The Android application stores all of the data fields 
returned by the card for later transmission to the rogue merchant. 
8 
Payment CardPOS Terminal1.0 InitiateTransaction()3.0 PresentCardToTerminal()4.0 ListAvailableNFCApplications()4.1 List of available applications7.0 SelectApplication(AID)7.1 Transaction setup data inc. PDOL list4.2 Command Error7.2 Command Error9.0 GetProcessingOptions(PDOL data)9.7 Transaction Approved - TC + SDAD + Application Cryptogram (AC) + AFL9.8 Transaction Must Go Online -ARQC9.10 Command Error9.9 Transaction Declined - AAC10.0 ReadAFLRecord(SFI, Record)10.1 AFL record[ for each AFL SFI / record ]12.0 RemoveCard()Loop9.1 GenerateUPN()9.2 GenerateSDAD()9.3 GenerateAC()9.4 UpdateTransactionCount()9.5 DecrementNFCCount()9.6 UpdateAvailableOffline()11.0 ValidateTransaction()8.0 PopulatePDOL()2.0 WaitForCard()5.0 ChooseAID()6.0 SelectTheKernel(AID)Table 2. Financial presentment message data requirements 
Item 
Name 
Description and mapping to EMV card data 
1 
2 
3  
4  
5  
7  
9  
10  
11  
14  
16  
19  
20 