系统中运用的帐号核实程序检验数据操作人的数据输入，不幸的是这个程序有一点错误，
或者应该说是“非文本特征”。如果一个记录被发现包含一个错误，它应该一次只打印一行
加入java编程群：524621833
84
第二部分 文本过滤
下载
“E R R O R *”，但实际上打印了许多这样的错误行。这会给帐号管理员造成误解，因此需要用
a w k脚本过滤出错误行的出现频率，使得每一个失败记录只对应一个错误行。
在a w k实施过滤前先看看部分文件：
a w k脚本如下：
a w k过滤结果如下：
5. 在a w k中使用F S变量
如果使用非空格符做域分隔符（F S）浏览文件，例如# 或：，编写这样的一行命令很容易，
因为使用F S选项可以在命令行中指定域分隔符。
加入java编程群：524621833
85
第9章 AWK 介 绍
下载
使用a w k脚本时，记住设置F S变量是在B E G I N部分。如果不这样做，a w k将会发生混淆，
不知道域分隔符是什么。
下述脚本指定F S变量。脚本从/ e t c / p a s s w d文件中抽取第1和第5域，通过分号“;”分隔
p a s s w d文件域。第1域是帐号名，第5域是帐号所有者。
6. 向a w k脚本传值
向a w k脚本传值与向a w k一行命令传值方式大体相同，格式为：
awk script_file var=value input_file
下述脚本对比检查文件中域号和指定数字。这里使用了 N F变量M A X，表示指定检查的域
号，使用双引号将域分隔符括起来，即使它是一个空格。
如果以/ e t c / p a s s w d作输入文件（p a s s w d文件有7个域），运行上述脚本。参数格式如下：
使用前面一行脚本的例子，将之转换成a w k脚本如下：
文本包括了比实际命令更多的信息，没关系，仔细研读文本后，就可以精确知道其功能
及如何调用它。
不要忘了增加脚本的可执行权限，然后将变量和赋值放在命令行脚本名字后、输入文件
前执行。
加入java编程群：524621833
86
第二部分 文本过滤
下载
同样可以使用前面提到的管道命令传值，下述 a w k脚本从d u命令获得输入，并输出块和字
节数。
为运行这段脚本，使用d u命令，并管道输出至a w k脚本。
9.2.13 awk数组
前面讲述s p l i t函数时，提到怎样使用它将元素划分进一个数组。这里还有一个例子：
在上面的例子中，s p l i t返回数组m y a r r a y下标数。实际上m y a r r a y数组为：
数组使用前，不必定义，也不必指定数组元素个数。经常使用循环来访问数组。下面是
一种循环类型的基本结构：
For (element in array ) print array[element]
对于记录“1 2 3 # 4 5 6 # 6 7 8”，先使用s p l i t函数划分它，再使用循环打印各数组元素。操作
脚本如下：
要运行脚本，使用/ d e v / n u l l作为输入文件。
数组和记录
加入java编程群：524621833
87
第9章 AWK 介 绍
下载
上面的例子讲述怎样通过s p l i t函数使用数组。也可以预先定义数组，并使用它与域进行比
较测试，下面的例子中将使用更多的数组。
下面是从空手道数据库卸载的一部分数据，包含了学生级别及是否是成人或未成年人的
信息，有两个域，分隔符为（#），文件如下：
脚本功能是读文件并输出下列信息。
1) 俱乐部中Ye l l o w、O r a n g e和R e d级别的人各是多少。
2 )俱乐部中有多少成年人和未成年人。
查看文件，也许2 0秒内就会猜出答案，但是如果记录超过 6 0个又怎么办呢？这不会很容
易就看出来，必须使用a w k脚本。
首先看看a w k脚本，然后做进一步讲解。
加入java编程群：524621833
88
第二部分 文本过滤
下载
B E G I N部分设置F S为符号#，即域分隔符，因为要查找 Ye l l o w、O r a n g e和R e d三个级别。
然后在脚本中手工建立数组下标对学生做同样的操作。注意，脚本到此只有下标或元素，并
没有给数组名本身加任何注释。初始化完成后， B E G I N部分结束。记住B E G I N部分并没有文
件处理操作。
现在可以处理文件了。首先给数组命名为c o l o r，使用循环语句测试域1级别列是否等于数
组元素之一（Ye l l o w、O r a n g e或R e d），如果匹配，依照匹配元素将运行总数保存进数组。
同样处理数组‘ S e n i o r _ o r _ j u n i o r’，浏览域2时匹配操作满足，运行总数存入 j u n i o r或
s e n i o r的匹配数组元素。
E N D部分打印浏览结果，对每一个数组使用循环语句并打印它。
注意在打印语句末尾有一个 \符号，用来通知a w k（或相关脚本）命令持续到下一行，当
输入一个很长的命令，并且想分行输入时可使用这种方法。运行脚本前记住要加入可执行权
限。
9.3 小结
a w k语言学起来可能有些复杂，但使用它来编写一行命令或小脚本并不太难。本章讲述了
a w k的最基本功能，相信 大家已经掌握了a w k的基本用法。a w k是s h e l l编程的一个重要工具。
在s h e l l命令或编程中，虽然可以使用a w k强大的文本处理能力，但是并不要求你成为这方面的
专家。
加入java编程群：524621833
下载
第10章 sed 用 法 介 绍
s e d是一个非交互性文本流编辑器。它编辑文件或标准输入导出的文本拷贝。标准输入可
能是来自键盘、文件重定向、字符串或变量，或者是一个管道的文本。 s e d可以做些什么呢？
别忘了，Vi也是一个文本编辑器。s e d可以随意编辑小或大的文件，有许多 s e d命令用来编辑、
删除，并允许做这项工作时不在现场。 s e d一次性处理所有改变，因而变得很有效，对用户来
讲，最重要的是节省了时间。
本章内容有：
• 抽取域。
• 匹配正则表达式。
• 比较域。
• 增加、附加、替换。
• 基本的s e d命令和一行脚本。
可以在命令行输入s e d命令，也可以在一个文件中写入命令，然后调用 s e d，这与a w k基本
相同。使用s e d需要记住的一个重要事实是，无论命令是什么， s e d并不与初始化文件打交道，
它操作的只是一个拷贝，然后所有的改动如果没有重定向到一个文件，将输出到屏幕。
因为s e d是一个非交互性编辑器，必须通过行号或正则表达式指定要改变的文本行。
本章介绍s e d用法和功能。本章大多编写的是一行命令和小脚本。这样做可以慢慢加深对
s e d用法的了解，取得宝贵的经验，以便最终自己编出大的复杂 s e d脚本。
和g r e p与a w k一样，s e d是一种重要的文本过滤工具，或者使用一行命令或者使用管道与
g r e p与a w k相结合。
10.1 sed怎样读取数据
s e d从文件的一个文本行或从标准输入的几种格式中读取数据，将之拷贝到一个编辑缓冲
区，然后读命令行或脚本的第一条命令，并使用这些命令查找模式或定位行号编辑它。重复
此过程直到命令结束。
10.2 调用sed
调用s e d有三种方式：在命令行键入命令；将s e d命令插入脚本文件，然后调用s e d；将s e d
命令插入脚本文件，并使s e d脚本可执行。
使用s e d命令行格式为：
sed [选项] s e d命令 输入文件。
记住在命令行使用s e d命令时，实际命令要加单引号。s e d也允许加双引号。
使用s e d脚本文件，格式为：
sed [选项] -f sed脚本文件 输入文件
要使用第一行具有s e d命令解释器的s e d脚本文件，其格式为：
加入java编程群：524621833
90
第二部分 文本过滤
下载
s e d脚本文件 [选项] 输入文件
不管是使用s h e l l命令行方式或脚本文件方式，如果没有指定输入文件， s e d从标准输入中
接受输入，一般是键盘或重定向结果。
s e d选项如下：
n 不打印；s e d不写编辑行到标准输出，缺省为打印所有行（编辑和未编辑）。p命令可以
用来打印编辑行。
c 下一命令是编辑命令。使用多项编辑时加入此选项。如果只用到一条 s e d命令，
此选项无用，但指定它也没有关系。
f 如果正在调用s e d脚本文件，使用此选项。此选项通知 s e d一个脚本文件支持所有的s e d
命令，例如：sed -f myscript.sed input_file，这里m y s c r i p t . s e d即为支持s e d命令的文件。
10.2.1 保存sed输出
由于不接触初始化文件，如果想要保存改动内容，简单地将所有输出重定向到一个文件
即可。下面的例子重定向s e d命令的所有输出至文件‘m y o u t f i l e’，当对结果很满意时使用这
种方法。
10.2.2 使用sed在文件中查询文本的方式
s e d浏览输入文件时，缺省从第一行开始，有两种方式定位文本：
1) 使用行号，可以是一个简单数字，或是一个行号范围。
2 ) 使用正则表达式，怎样构建这些模式请参见第7章。
表1 0 - 1给出使用s e d定位文本的一些方式。
表10-1 使用s e d在文件中定位文本的方式
x x为一行号，如1
x , y 表示行号范围从x到y，如2，5表示从第2行到第5行
/ p a t t e r n / 查询包含模式的行。例如/ d i s k /或/[a-z]/
/ p a t t e r n / p a t t e r n / 查询包含两个模式的行。例如/ d i s k / d i s k s /
p a t t e r n / , x 在给定行号上查询包含模式的行。如/ r i b b o n / , 3
x , / p a t t e r n / 通过行号和模式查询匹配行。3 . / v d u /
x , y ! 查询不包含指定行号x和y的行。1 , 2 !
10.2.3 基本sed编辑命令
表1 0 - 2列出了S e d的编辑命令。
表10-2 sed编辑命令
p 打印匹配行
= 显示文件行号
a \ 在定位行号后附加新文本信息
i \ 在定位行号后插入新文本信息
d 删除定位行
c \ 用新文本替换定位文本
加入java编程群：524621833
91
第10章 sed 用法介绍
下载
(续)
s 使用替换模式替换相应模式
r 从另一个文件中读文本
w 写文本到一个文件
q 第一个模式匹配完成后推出或立即推出
l 显示与八进制A S C I I代码等价的控制字符
{ } 在定位行执行的命令组
n 从另一个文件中读文本下一行，并附加在下一行
g 将模式2粘贴到/pattern n/
y 传送字符
n 延续到下一输入行；允许跨行的模式匹配语句
如果不特别声明，s e d例子中使用下述文本文件q u o t e . t x t。
10.3 sed和正则表达式
s e d识别任何基本正则表达式和模式及其行匹配规则。记住规则之一是：如果要定位一特
殊字符，必须使用（\）屏蔽其特殊含义，如有必要请参照第 7章正则表达式。第7章使用的所
有正则表达式在s e d中都是合法的。
10.4 基本sed编程举例
下面通过例子实际检验一下s e d的编辑功能。
10.4.1 使用p（rint）显示行
p r i n t命令格式为[ a d d r e s s [，a d d r e s s ] P。显示文本行必须提供s e d命令行号。
错误在哪儿？原意只打印第二行，但是却打印了文件中所有行，为此需使用 - n选项，显
示打印定位（匹配）行。
10.4.2 打印范围
可以指定行的范围，现打印1到3行，用逗号分隔行号。
加入java编程群：524621833