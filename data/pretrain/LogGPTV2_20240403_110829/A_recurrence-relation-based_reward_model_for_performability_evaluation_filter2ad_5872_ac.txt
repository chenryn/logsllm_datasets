the no(cid:173)
tion of state-entry probability enables us to model sys(cid:173)
tems involving a generalized timer and a degradation (or
progress) sequence. More specifically, by carefully deter(cid:173)
mining the index of a state-entry probability and the bound(cid:173)
ary points, we are able to adapt the general formulas (for
basic nTSMP) developed in Sections 3.1 and 3.2 to pre(cid:173)
cisely represent systems with a generalized timer.
In the
following we discuss our approach to adapting those gen(cid:173)
eral formulas. A more comprehensive example application
is elaborated in the next section.
Let us revisit the state diagram in Figure 2, where 81
represents a periodic event to which the system normally
goes from 8 0 every L cycles.
(Without losing generality,
we can state that the system has a degradation sequence that
is degenerate, as J = {jo} and jo = 0.) In addition, 8 2
represents an unscheduled event. As mentioned earlier, the
generalized timer will reset to L upon the completion of
either event. Hence we have,
Po[i]
PI [i]
P2[i]
Pl[i - ml] + P2[i - m2]
Poo
L]
P02 Pooi- n- 1Po[n]
L-l j3, [.
0 ~ -
i-I
L
n=(i-L)+l
(5)
(6)
(7)
Clearly Eq. (5) is a direct application of the first term in
Eq. (1) with PI0 = 1 and P20 = 1. Note also that Eq. (6)
is the result of an application of the second term in Eq. (1),
as the sojourn time of 8 0 is geometrically distributed prior
to M's departure to the periodic event represented by 8 1 .
Then, when we contrast the state diagram with Eq. (1), we
note that 1) zero is the only valid value for j (i.e., 80 is
the only origin state for a transition to 8 1), 2) the periodic
event will occur if and only if M has stayed in 8 0 since the
point i - L, and 3) POI = °until the ith cycle. Hence such
an application of Eq. (1) allows us to obtain Eq. (6) in the
following manner:
i\[i]
L
i-I
L:PjlP~jn-l Pj[n]
jEIIg-{l} n=O
POIPOOi-(i-L)-1 Po[i - L]
POO L- I Po[i - L]
Further, as 8 0 is the only origin state for the transition
to 8 2 , by ap"'plying Eq. (1) again, we are able to derive the
solution of P2 [i] (Le., Eq. (7)) as follows.
P2[i]
i-I
LPj2P~jn-lPj[n]
L
jEIIg-{2} n=O
i-I
L
n=(i-L)+I
p02pb(jn-l Po[n]
It can be shown that because of the underlying recurrence
relations, (i - L) +1 is the earliest point that should be taken
1-4244-2398-9/08/$20.00 ©200B IEEE
537
DSN 2008: Tai et al.
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
into account by Eq. (7). We omit the proof here due to space
limitations.
4. An Example Application
sequence has an upper bound for its collective sojourn time
equal to the inter-restart interval L.
It follows that transi(cid:173)
tions to 8 1 will be driven by a generalized timer. Further,
the timer is reset to L every time the system enters 8 0 .
4.1. Image-Based Tracking System
4.2. Analytic Solution
The DTSMP in Figure 3 represents an image-based
tracking system that
is typically embedded in an au(cid:173)
tonomous vehicle. The system's mission task is to track
a moving target by image-taking and predicting the target's
subsequent position according to its trajectory. The trajec(cid:173)
tory is updated per the most recent image. Toward the end
of the (i - 1)th iteration, the camera takes yaw and pitch
adjustments per the prediction, followed by another image(cid:173)
taking; then the system goes to the ith iteration. Clearly
this is a typical embedded-system application that executes
in a closed loop. Note that such a closed-loop computation
may allow undetected errors to manifest and accumulate to
cause target missing (Le., 8 4 in Figure 3) or inaccurate cam(cid:173)
era positioning (i.e., 83 in Figure 3). Also, the accumulated
inaccuracy may eventually become excessive and lead to
target missing. In addition, because the embedded software
involves image processing and pattern recognition, the sys(cid:173)
tem is vulnerable to memory exhaustion.
Poo
Figure 3. Image-Based Tracking System
Accordingly, proactive restart (Le., SI) is applied every
L cycles to let the system regain adequate capacity (Le., go(cid:173)
ing back to 8 0 ). Moreover, in order to reduce the perfor(cid:173)
mance cost of the preventive measure, a policy is enforced
such that the proactive-restart timer will be reset immedi(cid:173)
ately after a reactive restart (Le., 8 2 , which involves a sys(cid:173)
tem reboot and re-initialization) caused by a detected error.
Table 1 summarizes the state definitions.
Table 1. State Definitions
~ Definition
Normal system performance.
Periodic proactive restart.
Reactive restart.
Reduced accuracy caused by undetected errors.
80
S1
82
83
84 Missing of target.
Apparently, 8 0 and 8 3 constitute a degradation sequence
in which jo = 0 and jl = 3. Moreover, the degradation
In the following subsections, we discuss one or a few
equations for each type of probabilistic measure rather than
explain all the equations due to space limitations.
4.2.1 Solution of State-Entry Probability
First, we note that both of the origin states for the transi(cid:173)
tions into 8 0 have deterministic sojourn times and that 8 0
itself does not represent a periodic event. So the recurrence
relation for Po [i] is a straightforward application of Eq. (1):
Po [i] = PI [i - ml] + P2[i - m2]
(8)
However, 8 1 represents a periodic event, and the system
can go to 81 from either So or 83 , In addition, the timer for
the periodic event is reset and starts counting down upon the
completion of the event (marked by the most recent entry to
80 ). Hence,
P1 [i] = POOL pori - L] + L P33 L- n- 1 P03PoonPo[i - L]
L-l
n=O
(9)
Eq. (9) thus captures the system behavior influenced
by the relationship between two different types of system
restart by backtracking to the most recent entry to 8 0 (which
implies the completion of the most recent system restart,
proactive or reactive).
Next, because 8 3 can only be reached from 8 0 and
because the system undergoes a periodic proactive restart
when the elapsed time since the most recent entry to So is
L, we have the following equation for P3 [i],
i-I
P3[i] = L P03POo i
n=(i-L)+l
n
-
-
1Po[n]
(10)
Note that Eq. (10) is analogous to Eq. (7). The reason
is that, although semantically different, both 8 3 and 8 2 (re(cid:173)
spectively) in Figures 3 and 2 are a destination state of a
transition from a state through which the system can go to a
periodic event.
4.2.2 Solution of State-Occupancy Probability
According to Definition 2, the sojourn-time distribution of
8 0 is an MGDD. Therefore, while the following equation is
generally an application of Eq. (2), the lower bound of the
summation is set to (i - L) + 1 rather than zero.
pori] = L POOi-n Porn]
i
n=(i-L)+1
(11)
1-4244-2398-9/08/$20.00 ©2008 IEEE
538
DSN 2008: Tai et al.
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
As to P4 [i], since it is an absorbing state (meaning that
P44 = 1), by applying the second term of Eq. (2) we have
i
P4 [i] = LP44
i
n=O
i
- nP4[n] = L P4 [n]
n=O
(12)
4.2.3 Solution of Expected Accumulated Reward
We first discuss the formulation of Wo[i]. Because the ori(cid:173)
gin states for a transition to 80 , namely 8 1 and 8 2 , both
have deterministic sojourn times, we apply the first term of
Eq. (3) so that we have
Wo[i] = L
(Wj[i - mj] + Pj[i - mj]mjwj)
(13)
jE{I,2}
where PjO does not appear as both PI0 and P20 equal 1.
The formulation of Wo[i] is an application ofEq. (4):
Wo[i] =
i
L
n=(i-L)+l
pooi-n (Wo[n] + Po[n](i - n)wo)
(14)
We note that the boundary point (i - L) + 1 is again
used for the summation in the above equation because the
sojourn-time distribution of 80 is an MGDD.
Further, since 84 is an absorbing state that represents the
loss of a mission task, entering 84 will negate all the re-
ward accumulated prior to the task loss. Hence W4 [i] = O.
Moreover, reward accrual will cease upon entering 84 • SO
W4 = O. Then applying Eq. (4) yields
i
W4[i] = LP44i- n (W4[n] +P4[n](i -n)w4) = 0 (15)
n=O
4.3. Evaluation Results
Applying the recurrence relations and using Mathemat(cid:173)
ica, we solve a number of probabilistic measures for the
image-based tracking system. In the first study, we evalu(cid:173)
ate the state-occupancy probabilities, Po [k] and PI [k], the
probabilities that the system is in normal operation and is
undergoing proactive restart in cycle k, respectively. The
parameter value assignment is shown in Table 2.
Recall that the value of W k is the magnitude of the re(cid:173)
ward impulse for a cycle during which the system resides in
8k, and mk is the deterministic sojourn time of 8k. In addi(cid:173)
tion, q is the probability of the occurrence of a nonfatal but
accumulative error, and c is the coverage of error detection.
Note also that the magnitude of the reward impulse for
81 is set to 0.2, because during such a restart, the system
remembers the target velocity and trajectory known from
the most recent calculation, so that once the system is done
with the proactive restart, it will be able to predict the target
location in order to adjust the camera's position. Thus the
costly re-initialization that is required by a reactive restart
Table 2. Parameter Values
I Parameter I
Value
~ Parameter I Value I
POO
P02
P03
P04
P32
P33
P34
q
1 - P02 - P03 - P04
cq
(1 - c)q
0.00001
0.01
1 - P32 - P34
0.01
0.005
c
Wo
WI
W2
W3
W4
ml
m2
0.80
1
0.2
0
0.75
0
5
10
is avoided. Further, a reward impulse with a magnitude of
0.75 is assigned to 83 , the state in which th~re exists an error
in camera positioning because of the system's inability to
accurately predict the target location.
Throughout this application, we assume that 1,000 cy(cid:173)
cles are allocated to a mission task of the image-based track(cid:173)
ing system. But for clarity, in Figures 4(a) and 4(b) we show
only the results of Po[k] and PI [k] for the first 30 cycles. In
addition, for the sake of illustration (Le., to show multiple
"spates" in a short period of time), we let the interval be(cid:173)
tween two consecutive system restarts, L, be 10 cycles.
From Figures 4(a) and 4(b), we observe that the two
state-occupancy probabilities approximately complement
each other. That is a reasonable result because when it is
highly probable (see the explanation for why this probabil(cid:173)
ity is less than 1 shortly) that the system is engaged in a
proactive restart (Le., in 81), the probability that the system
is under normal operation must be low, and vice versa.
In addition, we can observe from 4(a) that starting from
the initial point (Le., k = 0), the value of Po [k]
is con(cid:173)
tinuously decreasing; nonetheless upon the completion of a
proactive restart (i.e., k = 15 and k = 30), the value of
Po[k] appreciably rebounds. On the other hand, the value
prior to the second proactive-restart (at k = 25) is less than
the value right before the first restart (at k = 10), and so
are their post-restart values (at k = 15 and k = 30). This
suggests that proactive restart is a means of slowing down,
rather than eliminating, a system's capacity deterioration.
Another interesting phenomenon is that the values of
Po [k] are greater than zero in the interval during which
the system is expected to be engaged in proactive restart
(i.e., between cycles 10 and 15, and between cycles 25 and
30). The reason is that the system might undergo a reactive
restart due to a detected error prior to a scheduled point for
proactive restart, which results in a timer reset so that the
system will not go to proactive restart until the elapsed time
since the reset reaches L.
The model also allows us to evaluate the image-tracking
system's reliability and normal-performance probability at
the end of the task period, as shown in Figures 5(a) and 5(b).
Specifically, 1- P4 [k] is regarded as the system's reliability
and Po [k] is the probability of normal performance. Figures
1-4244-2398-9/08/$20.00 ©2008 IEEE
539