### DevSecOps 成熟度模型

在本文撰写期间，国内关于DevSecOps的相关标准正在制定中，尚未正式发布和实施。美国总务管理局（U.S. General Services Administration, GSA）早先发布了《DevSecOps 指南》，其中详细描述了DevSecOps平台的成熟度模型。

该成熟度模型从多个维度定义了DevSecOps实践中所涉及工作的评价标准，包括但不限于总体考虑事项、镜像管理、日志监控与告警、补丁管理、平台治理、变更管理、应用开发测试与运营、应用部署、账户权限凭证与机密管理、可用性与性能管理、网络管理、操作流程权限、备份与数据生命周期管理、协议与财务管理等。

GSA对DevSecOps的描述如下：“成功的DevSecOps团队工作具有可重复性、低冗余、高协作性和分散集体努力的特点；为了最有效地实现这一点，自动化和可审计性优先于人工主观决策。”

#### 总体的DevSecOps平台考虑事项

**描述**
本部分围绕DevSecOps平台本身的整体性质，捕获进入环境的工作流和从环境中发布的软件。

**成熟度模型**

- **级别 1（不被视为有效的DevSecOps平台）**: 该平台依赖于手动操作，状态不透明，团队协作未标准化，并且每个项目的配置异构。
- **级别 2**: 应用程序开发人员有一个管道，可以用来部署已经考虑安全性的软件，并且对运维可见。进入平台的方式可能是手动或不可预测的。部署和维护操作可能需要手动操作或评估。
- **级别 3**: 应用程序开发人员在平台上有一个清晰的自助入口，并能够通过自动化在生产环境中部署和运行符合安全性的代码。平台服务在其基础设施和管道实现中是集中的。

无论是对DevSecOps的描述还是对成熟度的分级，GSA都将自动化程度作为最高准则。因此，在本文中，编者将自动化程度作为最重要的评价标准。同时，可审计性也是重要的指标，因此对软件生产过程的监控能力也是关注的重点。

### DevSecOps 安全工具金字塔

DevSecOps中的应用安全管理和保障能力依赖于不同安全工具之间的相互作用、叠加和协作。DevSecOps安全工具金字塔描述了这些工具的不同层次。安全工具之间的边界有时会模糊不清，因为单一的安全工具可以实现多种类别的安全功能。

**金字塔结构**

- **应用实践层**: 包括CARTA平台、ASTaaS（应用安全性测试即服务）、模糊测试等。
- **传统建设层**: 包括SAST（静态应用程序安全测试）、DAST（动态应用程序安全测试）、WAF（Web应用防火墙）、IDS/IPS（入侵检测系统/入侵防御系统）等。
- **卓越层**: 包括RASP（运行时应用自我保护）、自动化渗透测试等。

**工具分层与成熟度关系**

金字塔中的安全工具分层与组织的DevSecOps成熟度分级没有直接关系。仅使用低层次的安全工具也可以完成高等级的DevSecOps实践成熟度，反之亦然。工具分层与工具的普适性、侵入性、易用性等因素相关。普适性强、侵入性低、易用性高的安全工具更适合作为底层基础优先引入，而普适性弱、侵入性高、易用性低的工具则适合作为进阶工具帮助DevSecOps实践变得更加完善且深入。

### CARTA 平台

CARTA（持续自适应风险与信任评估）由Gartner在2018年首次提出，并在2019年再次被列入十大安全项目。CARTA强调对风险和信任的评估分析，通过动态智能分析来评估用户行为，放弃追求完美的安全，寻求一种介于0和1之间的风险与信任平衡。CARTA战略是一个庞大的体系，涵盖了大数据、AI、机器学习、自动化、行为分析、威胁检测、安全防护、安全评估等方面，旨在打造一个自适应自判断安全防护平台。

CARTA与DevSecOps的趋势一致，将安全左移至开发阶段，并最终集成在整个生命周期中，完成敏捷化的自适应风险和信任评估。因此，CARTA已逐渐从单纯的生产环境实践方法，融合进DevSecOps的体系之中。

### 应用安全性测试即服务（ASTaaS）

随着应用开发环境的开放化以及云服务日趋成熟，更轻量级的ASTaaS逐渐开始被接受。使用者通常只需按需付费来对应用程序执行安全测试，而不必再分别购买昂贵的私有化安全设备。该服务通常是静态和动态分析、渗透测试、API测试、风险评估等安全功能的组合。ASTaaS通常用于移动和Web应用程序。

### 应用安全测试编排（ASTO）

应用安全测试编排（Application Security Testing Orchestration, ASTO）由Gartner首次提出，目前该技术和工具还处于较为初始的阶段。其目标是对生态系统中运行的所有不同的应用安全测试工具进行集中、协调的管理和报告。ASTO综合管理SAST/SCA/IAST/DAST等各种安全工具的检测能力，完善与开发工具链条的集成与自动化能力，提供安全能力编排方案。用户可以自定义编排安全检测的手段、工具与其他安全产品的自动化集成响应。

### 模糊测试

模糊测试是一种介于完全的手工渗透测试与完全的自动化测试之间的安全性测试类型。它能够在产品投入市场使用之前提示潜在的应当被阻断的攻击路径。模糊测试的执行过程简单，大致如下：

1. 准备好随机或半随机方式生成的数据；
2. 将准备好的数据导入被测试的系统；
3. 用程序打开文件检测被测试系统的状态；
4. 根据被测系统的状态判断是否存在潜在的漏洞。

通过这些优化，文本更加清晰、连贯和专业，有助于读者更好地理解和掌握DevSecOps的相关概念和实践。