### 7.5 Recovery Actions Evaluation Metrics

For businesses, the duration of the recovery process for their systems can directly impact their commercial interests (S. Yi et al., 2011). For example, downtime on an e-commerce website due to error recovery can result in losses amounting to tens of thousands of dollars. Therefore, Recovery Time (RT) is one of the primary metrics used to evaluate recovery actions (M. Fu et al., 2015; M. Fu et al., 2016). Businesses often operate with a specific Recovery Time Objective (RTO) in mind (T. Wood et al., 2010).

Modern cloud services are often charged on a "per-use" basis, making the cost of running operations on cloud systems another significant factor for cloud consumers. In the context of cloud, recovery actions such as launching a new instance will incur additional monetary costs (AWS, 2016). We define this monetary cost as Recovery Cost (RC), which is another metric used to evaluate recovery actions (M. Fu et al., 2015; M. Fu et al., 2016).

Cloud systems can be significantly disrupted by inappropriate recovery actions (A. C. Huang and A. Fox, 2005). Some recovery actions can have a negative impact on the system's performance. It has been emphasized that a recovery service must have minimal consequences on the performance of each application (T. Wood et al., 2010). Therefore, reducing the negative performance impact of recovery on the system is crucial. Hence, Recovery Impact (RI) is also a metric for evaluating recovery actions (M. Fu et al., 2015; M. Fu et al., 2016).

POD-Recovery uses these three metrics to evaluate the generated applicable recovery actions for each recovery point within sporadic operations on the cloud. The definitions of these metrics are summarized in Table 8.

**Table 8: Recovery Evaluation Metrics**

| **Metrics** | **Definition** |
|-------------|----------------|
| **Recovery Time (RT)** | The time for a step in a sporadic operation to recover from an error state to a correct state. |
| **Recovery Cost (RC)** | All monetary costs incurred by all the cloud API functions included in the recovery action. |
| **Recovery Impact (RI)** | The negative performance impact of recovery on the cloud system being operated on during the time period of doing recovery. |

#### 1. Recovery Time (RT)

For normal activities (such as application workflows) on a cloud system, recovery time is defined as the time for a system to recover from a failure to an agreed service level (T. Wood et al., 2010). Sporadic operation recovery time differs from normal activity recovery time. In the context of sporadic operations, recovery time has two aspects:
1. The time for the full system (during sporadic operation) to return from failure to a potentially degraded SLA/capacity.
2. The time for the operation to return from a failure (or erroneous state) to an accepted state (which could be an early captured consistent state, a future expected state, or even a "safe" state to proceed further).

When measuring the recovery time for sporadic operations, we actually measure the execution time of the recovery actions, which consist of a set of relevant cloud APIs (M. Fu et al., 2015; M. Fu et al., 2016).

#### 2. Recovery Cost (RC)

Recovery Cost (RC) refers to the money charged by AWS during the recovery process for cloud APIs (e.g., RunInstances) that compose the recovery action. This information can be obtained from AWS pricing policies (AWS, 2016). Actions such as "RunInstances" and "ModifyInstanceType" may introduce additional monetary costs. By summing up the costs of each cloud API in the recovery action, we can determine the total monetary cost (M. Fu et al., 2015; M. Fu et al., 2016).

#### 3. Recovery Impact (RI)

Recovery Impact (RI) refers to the negative impact caused by the recovery actions on the cloud system during the recovery period. This impact comes from three aspects:
1. Delay in the original completion time of the operation.
2. Decrease in the capacity/SLA level of the system due to certain recovery actions (e.g., terminating instances).
3. False positives in error detection, which can trigger unnecessary recovery and potentially disrupt the cloud system (M. Fu et al., 2015; M. Fu et al., 2016).

Sporadic operations on the cloud are performed from the perspective of cloud consumers, who prioritize ensuring that their cloud systems and applications provide a satisfactory user experience. Good user experience depends largely on the system performance of cloud applications. System end users expect high performance, and the execution of sporadic operations should be transparent to them. Even during recovery, the cloud system remains in service, and end users expect it to maintain good performance.

To measure the recovery impact, we use the system's average response time to user requests during the recovery period (M. Fu et al., 2015; M. Fu et al., 2016).

### 7.6 Recovery Action Candidates List

After calculating the values for each of the three metrics (RT, RC, RI) for each applicable recovery action, we obtain a list of recovery action candidates. Each candidate is associated with quantified recovery evaluation metrics: recovery time, recovery impact, and recovery monetary cost. These candidates are stored in an in-memory table before the selection and optimization mechanisms are applied to select the acceptable recovery actions. They serve as inputs for the recovery action selection and optimization algorithms (M. Fu et al., 2015; M. Fu et al., 2016).

### 7.7 Acceptable Recovery Actions Selection

We propose two selection and optimization mechanisms for selecting acceptable recovery actions:
1. Pareto Set Search Based Selection Algorithm (M. Fu et al., 2015; M. Fu et al., 2016)
2. User Constraints Based Selection Algorithm (M. Fu et al., 2016)

#### 7.7.1 Pareto Set Search Based Recovery Action Selection

Given a set of recovery actions \( A = \{A_i\} \) with \( |A| = n \), operators must decide which recovery action to select. Each recovery action is associated with three metrics: time \( T_i \), cost \( C_i \), and impact \( I_i \), known beforehand. To find the optimal solution, we use Pareto optimality when there is no utility function to synthesize the three objectives into a single objective (J. Branke et al., 2008).

Several techniques are available to find an exact Pareto optimum, such as the weighted-sum method, ε-constraints method, and programming methods. However, we do not assume that users can always provide extra information like weights or constraints. The time complexity of finding all strong Pareto optima, i.e., the Pareto set, is \( O(n^2) \) in general. The Pareto set is defined as \( \{A^* | \{A_i | T_i < T^*, C_i < C^*, I_i < I^*\} = \emptyset\} \) (M. Fu et al., 2015; M. Fu et al., 2016).

When \( n \) is not too large, it is feasible to find the Pareto set. After obtaining the Pareto set, we can always find an optimal solution that meets any additional constraints and requirements over the metrics. The size of the Pareto set is usually smaller than \( n \). Figure 24 shows an \( O(n^2) \) algorithm to find the Pareto set (M. Fu et al., 2015; M. Fu et al., 2016).

The symbol "≤TCI" in the algorithm means that the values of the recovery evaluation metrics from one recovery action are all smaller than or equal to those of another action. The recovery framework can further select the action with the least recovery time, least recovery monetary cost, or least recovery impact, depending on the business-specified importance of the metrics (M. Fu et al., 2015; M. Fu et al., 2016).

#### 7.7.2 User Constraints Based Recovery Action Selection

With a list of applicable recovery actions and their evaluation metrics calculated, we need to select an acceptable recovery action. This selection is a multi-dimensional optimization problem (J. Branke et al., 2008). The bounds of the dimensions used in this method are known as constraints.

The proposed algorithm for selecting an acceptable recovery action is a multi-dimensional selection method with constraint programming techniques. First, we need a selection rule or objective provided by cloud operators. The selection rule can be stated in a format where the value of each of the three metrics (Recovery Time, Recovery Cost, and Recovery Impact) should be within predefined constraints (M. Fu et al., 2016). These constraints form the recovery requirements for the business.

There are three constraints for the recovery selection method, and the selected recovery action must satisfy all of them. The acceptable recovery action selected is the one that satisfies all three constraints, though it may not necessarily be the optimal one among all the candidates. The primary goal of operational recovery for the cloud is to satisfy all three constraints. Selecting an acceptable recovery action rather than the optimal one can achieve better time complexity by reducing the search time.

We denote the constraint on Recovery Time as \( \text{Consrt} \), the constraint on Recovery Cost as \( \text{Consrc} \), and the constraint on Recovery Impact as \( \text{Consri} \). The acceptable recovery actions will be those whose recovery time is within \( \text{Consrt} \), whose recovery cost is within \( \text{Consrc} \), and whose recovery impact is within \( \text{Consri} \).