尽管我们已经尽力来保证不出现错误，但错误总是难免的，如果你在本书中找到了错
误，如拼写错误或代码错误，请告诉我们，我们将非常感激。通过勘误表，可以让其他读
者避免受挫，当然，这还有助于提供更高质量的信息。
要在网站上找到本书的勘误表，可以登录http://www.wrox.com，通过Search工具或书
名列表查找本书，然后在本书的细目页面上，单击Book Errata链接。在这个页面上可以查
看Wrox编辑已提交和粘贴的所有勘误项。完整的图书列表还包括每本书的勘误表，网址
是www.wrox.com/misc-pages/ booklist.shtml。
如果在Book 
Errata页面上没有看到你找出的错误，请进入
www.worx.com/contact/techsupport.shtml，填写表单，发电子邮件，我们就会检查你的信
息，如果是正确的，就在本书的勘误表中粘贴一条消息，我们将在本书的后续版本中采
用。
0.9 p2p.wrox.com
P2P邮件列表是为作者和读者之间的讨论而建立的。读者可以在p2p.wrox.com上加入
P2P论坛。该论坛是一个基于Web的系统，用于发送与Wrox图书相关的信息和相关技术，
与其他读者和技术用户交流。该论坛提供了订阅功能，当论坛上有新帖子时，会给你发送
你选择的主题。Wrox作者、编辑和其他业界专家和读者都会在这个论坛上讨论。
在http://p2p.wrox.com上有许多不同的论坛，不只是可以帮助读者阅读本书，在读者
开发自己的应用程序时，也可以从这个论坛中获益。要加入这个论坛，必须执行下面的步
骤：
（1）进入p2p.wrox.com，单击Register链接。
（2）阅读其内容，单击Agree按钮。
（3）提供加入论坛所需要的信息及愿意提供的可选信息，单击Submit按钮。
（4）然后就可以收到一封电子邮件，其中的信息描述了如何验证账户，完成加入过
程。
  注意： 不加入P2P也可以阅读论坛上的信息，但只有加入论坛后，才能发送
自己的信息。
加入论坛后，就可以发送新信息，回应其他用户的帖子。可以随时在Web上阅读信
息。如果希望某个论坛给自己发送新信息，可以在论坛列表中单击该论坛对应的Subscribe
to this Forum图标。
对于如何使用Wrox P2P的更多信息，可阅读P2P FAQ，了解论坛软件的工作原理，以
及许多针对P2P和Wrox图书的常见问题解答。要阅读FAQ，可以单击任意P2P页面上的
FAQ链接。
目
录
前言
第Ⅰ部分 C#语言
第1章 .NET应用程序体系结构
1.1 选择技术
1.2 回顾.NET历史
1.2.1 C#1.0——一种新语言
1.2.2 带有泛型的C# 2和.NET 2
1.2.3 .NET 3.0 ——Windows Presentation Foundation
1.2.4 C# 3和.NET 3.5——LINQ
1.2.5 C# 4和.NET 4.0——dynamic和TPL
1.2.6 C# 5和异步编程
1.2.7 C# 6和.NET Core
1.2.8 选择技术，继续前进
1.3 .NET 2015
1.3.1 .NET Framework 4.6
1.3.2 .NET Core 1.0
1.3.3 程序集
1.3.4 NuGet包
1.3.5 公共语言运行库
1.3.6 .NET Native
1.3.7 Windows运行库
1.4 Hello, World
1.5 用.NET 4.6编译
1.6 用.NET Core CLI编译
1.6.1 设置环境
1.6.2 构建应用程序
1.6.3 打包和发布应用程序
1.7 应用程序类型和技术
1.7.1 数据访问
1.7.2 Windows桌面应用程序
1.7.3 UWP
1.7.4 SOAP服务和WCF
1.7.5 Web服务和ASP.NET Web API
1.7.6 WebHooks和SignalR
1.7.7 Windows服务
1.7.8 Web应用程序
1.7.9 Microsoft Azure
1.8 开发工具
1.8.1 Visual Studio Community
1.8.2 Visual Studio Professional with MSDN
1.8.3 Visual Studio Enterprise with MSDN
1.8.4 Visual Studio Code
1.9 小结
第2章 核心C#
2.1 C#基础
2.2 用Visual Studio创建Hello, World!
2.2.1 创建解决方案
2.2.2 创建新项目
2.2.3 编译和运行程序
2.2.4 代码的详细介绍
2.3 变量
2.3.1 初始化变量
2.3.2 类型推断
2.3.3 变量的作用域
2.3.4 常量
2.4 预定义数据类型
2.4.1 值类型和引用类型
2.4.2 .NET类型
2.4.3 预定义的值类型
2.4.4 预定义的引用类型
2.5 程序流控制
2.5.1 条件语句
2.5.2 循环
2.5.3 跳转语句
2.6 枚举
2.7 名称空间
2.7.1 using语句
2.7.2 名称空间的别名
2.8 Main（）方法
2.9 使用注释
2.9.1 源文件中的内部注释
2.9.2 XML文档
2.10 C#预处理器指令
2.10.1 #define和#undef
2.10.2 #if、#elif、#else和#endif
2.10.3 #warning和# error
2.10.4 #region和#endregion
2.10.5 #line
2.10.6 #pragma
2.11 C#编程准则
2.11.1 关于标识符的规则
2.11.2 用法约定
2.12 小结
第3章 对象和类型
3.1 创建及使用类
3.2 类和结构
3.3 类
3.3.1 字段
3.3.2 属性
3.3.3 方法
3.3.4 构造函数
3.3.5 只读成员
3.3.6 只读字段
3.4 匿名类型
3.5 结构
3.5.1 结构是值类型
3.5.2 结构和继承
3.5.3 结构的构造函数
3.6 按值和按引用传递参数
3.6.1 ref参数
3.6.2 out参数
3.7 可空类型
3.8 枚举
3.9 部分类
3.10 扩展方法
3.11 Object类
3.12 小结
第4章 继承
4.1 继承
4.2 继承的类型
4.2.1 多重继承
4.2.2 结构和类
4.3 实现继承
4.3.1 虚方法
4.3.2 多态性
4.3.3 隐藏方法
4.3.4 调用方法的基类版本
4.3.5 抽象类和抽象方法
4.3.6 密封类和密封方法
4.3.7 派生类的构造函数
4.4 修饰符
4.4.1 访问修饰符
4.4.2 其他修饰符
4.5 接口
4.5.1 定义和实现接口
4.5.2 派生的接口
4.6 is和as运算符
4.7 小结
第5章 托管和非托管的资源
5.1 资源
5.2 后台内存管理
5.2.1 值数据类型
5.2.2 引用数据类型
5.2.3 垃圾回收
5.3 强引用和弱引用
5.4 处理非托管的资源
5.4.1 析构函数或终结器
5.4.2 IDisposable接口
5.4.3 using语句
5.4.4 实现IDisposable接口和析构函数
5.4.5 IDisposable和终结器的规则
5.5 不安全的代码
5.5.1 用指针直接访问内存
5.5.2 指针示例：PointerPlayground
5.5.3 使用指针优化性能
5.6 平台调用
5.7 小结
第6章 泛型
6.1 泛型概述
6.1.1 性能
6.1.2 类型安全
6.1.3 二进制代码的重用
6.1.4 代码的扩展
6.1.5 命名约定
6.2 创建泛型类
6.3 泛型类的功能
6.3.1 默认值
6.3.2 约束
6.3.3 继承
6.3.4 静态成员
6.4 泛型接口
6.4.1 协变和抗变
6.4.2 泛型接口的协变
6.4.3 泛型接口的抗变
6.5 泛型结构
6.6 泛型方法
6.6.1 泛型方法示例
6.6.2 带约束的泛型方法
6.6.3 带委托的泛型方法
6.6.4 泛型方法规范
6.7 小结
第7章 数组和元组
7.1 同一类型和不同类型的多个对象
7.2 简单数组
7.2.1 数组的声明
7.2.2 数组的初始化
7.2.3 访问数组元素
7.2.4 使用引用类型
7.3 多维数组
7.4 锯齿数组
7.5 Array类
7.5.1 创建数组
7.5.2 复制数组
7.5.3 排序
7.6 数组作为参数
7.6.1 数组协变
7.6.2 ArraySegment
7.7 枚举
7.7.1 IEnumerator接口
7.7.2 foreach语句
7.7.3 yield语句
7.8 元组
7.9 结构比较
7.10 小结
第8章 运算符和类型强制转换
8.1 运算符和类型转换
8.2 运算符
8.2.1 运算符的简化操作
8.2.2 运算符的优先级和关联性
8.3 类型的安全性
8.3.1 类型转换
8.3.2 装箱和拆箱
8.4 比较对象的相等性
8.4.1 比较引用类型的相等性
8.4.2 比较值类型的相等性
8.5 运算符重载
8.5.1 运算符的工作方式
8.5.2 运算符重载的示例：Vector结构
8.5.3 比较运算符的重载
8.5.4 可以重载的运算符
8.6 实现自定义的索引运算符
8.7 实现用户定义的类型强制转换
8.7.1 实现用户定义的类型强制转换
8.7.2 多重类型强制转换
8.8 小结
第9章 委托、Iambda表达式和事件
9.1 引用方法
9.2 委托
9.2.1 声明委托
9.2.2 使用委托
9.2.3 简单的委托示例
9.2.4 Action和Func委托
9.2.5 BubbleSorter示例
9.2.6 多播委托
9.2.7 匿名方法
9.3 lambda表达式
9.3.1 参数
9.3.2 多行代码
9.3.3 闭包
9.4 事件
9.4.1 事件发布程序
9.4.2 事件侦听器
9.4.3 弱事件
9.5 小结
第10章 字符串和正则表达式
10.1 System.String类
10.1.1 构建字符串
10.1.2 StringBuilder成员
10.2 字符串格式
10.2.1 字符串插值
10.2.2 日期时间和数字的格式
10.2.3 自定义字符串格式
10.3 正则表达式
10.3.1 正则表达式概述
10.3.2 RegularExpressionsPlayaround示例
10.3.3 显示结果
10.3.4 匹配、组和捕获
10.4 小结
第11章 集合
11.1 概述
11.2 集合接口和类型
11.3 列表