SpamAssassin [2] as the spam ﬁltering system. It employs
several detectors including Spamhaus [19] (IP-based black-
list). Every email is labeled based on a computed score
combining results from all detectors. If the score exceeds a
ﬁxed threshold (5.0 in our case), the corresponding email
will be labeled as spam.
Real-time probing experiment. We probe in real-time
to gather the TTL and RTT information to help detect
triangular spamming. Two sets of probes per destination
port per host are conducted, one with source port 25 and
the other with source port 80. The destination port is chosen
from the most popular ports potentially open on the hosts,
e.g., port 25, 80, 22. We limit probing to at most 4 different
destination ports to limit the overhead. Probing is stopped
if any destination port responds. A lack of response from
source-port-25 probes in the presence of responses from
other source ports (e.g., port 80) indicates that the IP address
is blocked for SMTP trafﬁc.
B. Detection results
Given that
triangular spamming can abuse port-25-
blocked IP addresses for sending spam, we are interested in
knowing the prevalence of such IP addresses seen by our
mail server and the usefulness to correlate this with other
features such as TTL discrepancy from real-time probing.
For instance, if their port 25 is blocked, does that mean the
actively probed TTL value is more likely to be deviate from
the passively observed TTLs?
Our results show that on average about 4% of IP ad-
dresses observed by our mail server are blocked for port 25
based on our real-time probing, indicating likely presence of
triangular spamming. We then compute various correlations
to verify whether such blocked IPs differ from other IPs in
any particular properties. Note that if these IP addresses
are involved in triangular spamming, they might also relay
our probing packets such that we can still get response.
However, the original sender may think our probing packet
is invalid and thus do not care to respond.
Spam ratio. The spam ratio of these blocked IP addresses
are 99.9%. Compared to the overall 87.6% spam ratio, it
is evident that these IP addresses are much more likely to
send spam. In fact, we found only 4 blocking IP addresses
(out of 7246) sent legitimate emails. Upon a closer look,
1 of them is likely false negative by SpamAssassin based
on its DNS name (18.151.195.200.static.copel.net) and it is
listed on multiple blacklists. The other three do appear to be
legitimate mail servers. However, we found that these three
servers have a particular security policy that results in no
response to our SYN-ACK packet if the packet has source
port 25. They do however respond to SYN packets with
source port 25. We plan to incorporate SYN probing in our
real-time probing in the future to more reliably determine
the port 25 blocking behavior.
TTL or hop count value difference. For these blocked
IP addresses, we compare the actively probed TTL value
using source port 80 with the passively observed TTL
value. Using TTL value directly can result in inaccuracies
due to differences in initial TTL value settings. Instead
we infer the hop count values using previously established
approach [31] to compute the absolute difference in hop
count for the two TTL values. Besides triangular spamming,
the discrepancy could also stem from ﬁrewall or gateway
responding to our probing, which is not easy to discern
from anomalous triangular routing. Figure 20 plots the
distribution for hop count difference for blocking and non-
blocking IPs. It indicates that blocked IP addresses are more
likely to have a larger hop count difference, likely caused
by triangular spamming.
RTT difference. Similar to TTL, we plot the relative dif-
ference of RTT for blocking and non-blocking IP addresses
shown in Figure 21. We can see that clearly blocking IPs
tend to have a larger relative difference. In fact, more than
50% of the blocking IPs have a relative difference greater
than 0.1 which is already larger than the expected difference
1
0.8
)
Blocking IP addresses
Non−Blocking IP addresses
Blocking IP addresses
Non−blocking IP addresses
1
0.8
0.6
0.4
0.2
)
X
=
>
f
f
i
d
T
T
R
(
r
P
f
f
i
d
t
X
≥
n
u
o
C
p
o
H
(
r
0.6
0.4
P
0.2
0
0
2
4
X = absolute hop count diff (active  vs. passive)
6
8
10
0
0
0.1
0.4
X = Relative RTT difference
0.3
0.2
0.5
Figure 20. Absolute hop count
for blocking and non-blocking
IPs
Figure 21.
Relative RTT dif-
ference for blocking and non-
blocking IPs
as shown in our planetlab RTT study.
OS ﬁngerprints. We group a set of IP addresses into
clusters based on the passively observed OS ﬁngerprints.
Here we include hop count in the OS ﬁngerprint (which we
call signatures) to consider IPs with same OS ﬁngerprint but
with different hop count as different senders. The results
show that although there are 52,860 different signatures
out of 233,746 IP addresses, the entropy of the signature
is only 10.7 bits, indicating that it may not be diverse
enough. We also found that the blocking ports are often
with different signatures, likely caused by the fact there are
multiple original senders involved in the current triangular
spamming architecture. In fact, there can be a hierarchical
structures where there are a set of high bandwidth bots
acting as original senders and each of them peers with
multiple relay bots.
Blocking preﬁx correlation with a popular mail
service provider. By correlating with a month-long mail
service provider’s sampled log trace using the coarse-
grained blocking preﬁx information, we gathered 93,359
IP addresses of which 97% are sending purely spam.
While there are certain legitimate mail servers mixed in the
blocking preﬁxes, it is possible to ﬁlter them based on their
DNS MX records (reverse look up their hostname based on
IP, and then look up the MX record for that domain name).
Further, 95% of these IP addresses appear only in 5 or fewer
days and 54% of them only appear in a single day in the
month-long trace, indicating that they are more likely to be
spam hosts. It is known that stable IP addresses are tend to
be legitimate while appear-once IP addresses are likely to
be spamming IP [39].
From the results above, we can conclude that despite the
stealthy behavior of triangular spamming, it also exposes
information that can be leveraged for detection. Features
proposed above are lightweight enough that they can be
easily collected during run-time to help classify spam.
C. Prevention
to prevent
Two straightforward ways exist
triangular
spamming. The approach of disallowing IP spooﬁng at
every ISP is not feasible given the scale of the Internet
and a lack of uniﬁed conﬁguration enforcement. The other
more realistic way is to have ISPs that block OUT trafﬁc
also block IN trafﬁc. However, it does put the management
burden on ISPs to correctly conﬁgure the ﬁrewall rules. An-
other less obvious prevention method is to deploy stateful
ﬁrewalls at ISPs to prevent relay bot from relaying out-of-
state TCP trafﬁc or just focus on port 25 related trafﬁc to
limit imposed overhead. For instance, it is possible to push
such functionality into the modem so that it does not have to
be deployed at some centralized point to cause performance
problems. The question is whether stateful ﬁrewall is a
desired feature for customers. We think arguably that this
can be the right decision and most users will not likely
be impacted, just as the case for outbound SMTP trafﬁc
blocking.
VI. RELATED WORK
There has been a signiﬁcant amount work on spam
detection over the years. The techniques proposed can be
broadly categorized into content-based, blacklist-based and
behavior-based. Content-based approach has been mostly
extensively studied [30], [32]. The blacklist-based approach
was originally from third-party used to blacklist individual
IP address. Popular ones include SpamHaus [19], Spam-
Cop [18] and SORBS [17]. Behavior-based approach is
complementary and is growing in popularity (e.g., [34],
[29]). The detection methodology we proposed focusing on
spammer behavior also belongs to this category.
Our work is instrumental in highlighting the arms race
caused by evolving spamming techniques in response to
the improved detection methods. When the blacklist-based
approach ﬁrst came out, spammers try to avoid being listed
by having each bot IP send very few spam to each target
mail server domain to stay under the radar [33]. In an effort
to prevent outgoing spam, many ISPs enforce outbound
SMTP trafﬁc blocking mostly on dynamic IP ranges. As
more ISPs perform outgoing SMTP trafﬁc blocking, fewer
IP addresses are available to spammers. However, our work
demonstrates that current ISPs’ port blocking practice is
insufﬁcient and triangular spamming can still leverage those
blocked IP addresses to send spam in a stealthy manner
without triggering alarms monitoring outbound SMTP traf-
ﬁc. From the perspective of ISPs where relay bots reside,
they will not notice too much trafﬁc since the bots are only
relaying response messages from the server side, at a much
lower rate compared to original outgoing spam. Another
side beneﬁt is that the bot can still participate in other
malicious activities such as DDoS attack.
In terms of detecting triangular spamming, we can bor-
row ideas from previous studies of general IP spooﬁng
defense. For instance, TTL value is proposed to detect
spoofed DDoS trafﬁc in [41]. Cryptographic puzzles [42]
can be introduced to slow down the spoofer. However, they
are all different from the triangular spamming setting where
botnets cooperate with the spoofer to carry out the attack.
Also related to our study is prior work on ﬁrewall policy
inference such as FireCracker [35]. However, there are two
key differences: 1). their goal differs from ours in that they
try to infer the complicated policies that depend on IP/port
combinations and try to reduce the number of probes to
infer such behavior, while our goal is to determine IN/OUT
trafﬁc blocking behavior. 2). We are inferring ISP-level
policy which has certain characteristics that allow us to
infer the IN/OUT blocking. More speciﬁcally, since policy
is uniform on a range of IP addresses, we can probe the
entire range and leverage the behavior in IPID value change
for some hosts within that range to help our inference.
VII. DISCUSSION AND CONCLUSION
To conclude, our work is the ﬁrst to highlight the practice
of triangular spamming, a stealthy and fairly efﬁcient spam-
ming technique that can be relatively easily carried out on
today’s Internet by thoroughly investigating its feasibility
in the presence of existing network policies and ease of op-
erational deployment. We bring attention to the community
that today’s SMTP trafﬁc blocking policies can be bypassed
to carry out such spamming activities while protecting the
identities of hosts actually sending out spam messages.
Through extensive empirical data analysis and experimental
evaluation, we propose detection and prevention schemes
that are shown to be promising approaches to mitigate
against this relatively new spamming practice.
Note that triangular spamming exploits the network level
security vulnerabilities (IP spooﬁng and insufﬁcient ﬁrewall
port blocking policy). We believe this is just one instance
where application protocols are misused due to the underly-
ing network vulnerabilities. Other attacks remain possible.
REFERENCES
[1] Adobe ﬂash player.
ﬂashplayer/.
http://www.adobe.com/products/
[2] The apache spamassassin project.
apache.org/.
http://spamassassin.
[3] Chater cable, internet, telephone. www.charter.net/.
[4] Cisco pix 515e ﬁrewall quick start guide, version
6.3. http://www.ciscosystems.org.ro/en/US/docs/security/pix/
pix63/quick/guide/63 515qk.html.
[5] Comcast takes hard line against spam. http://news.zdnet.com/
2100-3513 22-136518.html.
[6] Hacking the interwebs.
http://www.gnucitizen.org/blog/
hacking-the-interwebs/.
[7] The icsi netalyzr beta. http://netalyzr.icsi.berkeley.edu/.
[8] Microsoft: 3% of e-mail
the rest
http://arstechnica.com/security/news/2009/04/
stuff we want;
is
microsoft-97-percent-of-all-e-mail-is-spam.ars.
spam.
is
[9] Nanog survey - isp port blocking practice. http://seclists.org/
nanog/2009/Oct/727.
[10] netﬁlter/iptables project homepage. http://www.netﬁlter.org/.
[11] The new p0f 2.0.8 (2006-09-06). http://lcamtuf.coredump.
cx/p0f.shtml.
[12] Planetlab acceptable use policy (aup). http://www.planet-lab.
org/aup.
[13] Port 25 blocking. http://www.postcastserver.com/help/Port
25 Blocking.aspx.
[14] Port 25 (sonic.net).
port 25.shtml.
http://sonic.net/support/faq/advanced/
[15] Rfc2920, smtp service extension for command pipelining.
http://tools.ietf.org/html/rfc2920.
[16] Sbc email problem.
htm/.
www.sfsu.edu/∼helpdesk/sbc/index.
[17] Sorbs. http://www.au.sorbs.net/.
[18] Spamcop. http://www.spamcop.net/.
[19] Spamhaus. http://www.spamhaus.org/.
[20] Tcp/ip ﬁngerprinting methods supported by nmap. http://
nmap.org/book/osdetect-methods.html.
[21] Unicast reverse path forwarding.
wiki/Reverse path forwarding.
http://en.wikipedia.org/
[22] Universal plug and play.
Universal Plug and Play/.
http://en.wikipedia.org/wiki/
[23] Useful statistics for web designers. http://www.tvidesign.co.
uk/blog/useful-statistics-for-web-designers.aspx.
[24] Verizon
-
our
attention
settings
email
com/ResidentialHelp/HighSpeed/General+Support/Top+
Questions/QuestionsOne/124274.htm.
to send email.
needed: Re-conﬁgure
your
http://www22.verizon.
[25] Whois ip address/domain name lookup.
com/whois/.
http://cqcounter.
[26] F. Baker and P. Savola.
Ingress ﬁltering for multihomed
networks. In RFC 3704, 2004.
[27] R. Beverly, A. Berger, Y. Hyun, and k claffy. Understanding
the efﬁcacy of deployed internet source address validation
ﬁltering. In In Proc. of IMC, 2009.
[28] P. Ferguson and D. Senie. Network ingress ﬁltering: Defeat-
ing denial of service attacks which employ ip source address
spooﬁng. In RFC 2827, 2000.
[29] S. Hao, N. A. Syed, N. Feamster, A. Gray,
and
S. Krasser. Detecting Spammers with SNARE: Spatio-
temporal Network-level Automatic Reputation Engine.
In
Proceedings of Usenix Security Symposium, March 2009.
[30] F. Li and M.-H. Hsieh. An empirical study of clustering
behavior of spammers and group-based anti-spam strategies.
In In Proc. of CEAS, 2006.
[31] Z. M. Mao, L. Qiu, J. Wang, and Y. Zhang. On as-level path
inference. In In Proc. of SIGMETRICS, 2005.
[32] B. Medlock. An adaptive, semi-structured language model
approach to spam ﬁltering on a new corpus. In CEAS 2006
- Third Conference on Email and Anti-Spam, July 2006.
[33] Z. Qian, Z. M. Mao, Y. Xie, and F. Yu. On network-level
clusters for spam detection. In In Proc. of NDSS, 2010.
[34] A. Ramachandran, N. Feamster, and S. Vempala. Filtering
spam with behavioral blacklisting. In In Proc. of CCS, 2007.
[35] T. Samak, A. El-Atawy, and E. Al-Shaer. Firecracker: A
framework for inferring ﬁrewall policy using smart probing.
In In the Proceedings of the ﬁfteenth IEEE International
Conference on Network Protocols (ICNP’07), 2007.
[36] S. Sinha, M. Bailey, and F. Jahanian. Shades of Grey: On the
Effectiveness of Reputation-based ”Blacklists”. In Malware
2008, 2008.
[37] Spamhaus policy block list (PBL). http://www.spamhaus.
org/pbl/, Jan 2007.
[38] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szyd-
lowski, R. Kemmerer, C. Kruegel, and G. Vigna. Your botnet
is my botnet: Analysis of a botnet takeover. In In Proc. of
CCS, 2009.
[39] S. Venkataraman, S. Sen, O. Spatscheck, P. Haffner, and
D. Song. Exploiting network structure for proactive spam
mitigation.
In In Proc. of USENIX Security Symposium,
2007.
[40] G. Wang, B. Zhang, and T. S. E. Ng. Towards network
triangle inequality violation aware distributed systems. In In
Proc. of IMC, 2007.
[41] H. Wang, C. Jin, and K. G. Shin. Defense against spoofed
ip trafﬁc using hop-count ﬁltering. IEEE/ACM Trans. Netw.,
2007.
[42] X. Wang and M. K. Reiter. A multi-layer framework for
Int. J. Inf. Secur.,
puzzle-based denial-of-service defense.
2008.
[43] N. Weaver, R. Sommer, and V. Paxson. Detecting forged tcp
reset packets. In In Proc. of NDSS, 2009.