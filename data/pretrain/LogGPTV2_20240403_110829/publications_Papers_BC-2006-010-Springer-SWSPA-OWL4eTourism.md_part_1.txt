Chapter 4
DEVELOPING AN OWL ONTOLOGY FOR E-
TOURISM
Jorge Cardoso
Department of Mathematics and Engineering, University of Madeira, 9000-390, Funchal,
Portugal – PI:EMAIL
1. INTRODUCTION
Currently, the World Wide Web is mainly composed of documents
written in Hyper Text Markup Language (HTML). HTML is a
language that is useful for visual presentation and for direct human
processing (reading, searching, browsing, querying, filling in forms,
etc). HTML documents are often handwritten or machine generated
and often active HTML pages. Most of the information on the Web is
designed only for human consumption. Humans can read HTML
documents and understand them, but their inherent meaning is not
shown to allow their interpretation by computers.
To surpass this limitation, the W3C (World Wide Web
Consortium, www.w3.org) has been working on approaches to define
the information on the Web in a way that it can be used by computers
not only for display purposes, but also for automation,
interoperability, and integration between systems and applications.
One way to enable machine-to-machine understanding, exchange, and
automated processing is to make Web resources more readily
accessible by adding meta-data annotations that describe their content
in such a way that computers can understand it. This is precisely the
objective of the semantic Web – to make the information on the Web
understandable and useful to computer applications in addition to
humans. “The semantic Web is not a separate Web but an extension of
2 Semantic Web Processes and Their Applications
the current one, in which information is given well-defined meaning,
better enabling computers and people to work in cooperation.”
(Berners-Lee, Hendler et al. 2001).
The W3C has proposed a language designed for publishing and
sharing data, and automating data understanding by computers using
ontologies on the Web. The language, called OWL (Web Ontology
Language), will transform the current Web to the concept of Semantic
Web. OWL is being planned and designed to provide a language that
can be used for applications that need to understand the meaning of
information instead of just parsing data for display purposes.
2. OWL AND THE SEMANTIC WEB STACK
The semantic Web identifies a set of technologies, tools, and
standards which form the basic building blocks of an infrastructure to
support the vision of the Web associated with meaning. The semantic
Web architecture is composed of a series of standards organized into a
structure that is an expression of their interrelationships. This
architecture is often represented using a diagram first proposed by
Tim Berners-Lee (Berners-Lee, Hendler et al. 2001). Figure 4-1
illustrates the different parts of the semantic Web architecture. It starts
with the foundation of URIs and Unicode. On top of that we can find
the syntactic interoperability layer in the form of XML, which in turn
underlies RDF and RDF Schema (RDFS). Web ontology languages
are built on top of RDF and RDFS. The last three layers are logic,
proof, and trust, which have not been significantly explored. Some of
the layers rely on the digital signature component to ensure security.
Figure 4-1. Semantic Web layered architecture (Berners-Lee, Hendler et al. 2001)
Developing an OWL Ontology for e-Tourism 3
In the following sections we briefly describe these layers. While
the notions presented have been simplified, they give a reasonable
conceptualization of the various components of the semantic Web.
2.1 URI and Unicode
A Universal Resource Identifier (URI) is a formatted string that
serves as a way for identifying abstract or physical resource. Uniform
Resource Locator (URL) refers to the subset of URI that identify
resources via a representation of their primary access mechanism. A
Uniform Resource Name (URN) refers to the subset of URI that are
required to remain globally unique and persistent even when the
resource ceases to exist or becomes unavailable. For example,
• The URL http://dme.uma.pt/jcardoso/index.htm identifies the
location where a Web page can be retrieved from
• The URN urn:isbn:3-540-24328-3 identifies a book using its
ISBN
Unicode provides a unique number for every character,
independently of the underlying platform, program, or language.
Before the creation of unicode, there were various different encoding
systems that made the manipulation of data too complex. Any given
computer needed to support many different encodings. There was
always the risk of encoding conflict, since two encodings could use
the same number for two different characters, or use different numbers
for the same character.
2.2 XML
XML is accepted as a standard for data interchange on the Web
allowing the structuring of data but without communicating its
meaning. It is a language for semi-structured data and has been
proposed as a solution to solve integration problems, because it allows
a flexible coding and display of data.
While XML has gained much of the world’s attention it is
important to recognize that XML is simply a way to standardize data
formats. But, from the point of view of semantic interoperability,
XML has limitations. One significant aspect is that there is no way to
recognize the semantics from a particular domain because XML aims
at document structure and imposes no common interpretation of the
data (Decker, Melnik et al. 2000). Another problem is that XML has a
weak data model incapable of capturing relationships or constraints.
4 Semantic Web Processes and Their Applications
While it is possible to extend XML to incorporate rich metadata, XML
does not allow supporting automated interoperability of systems
without human involvement. Even though XML is simply a data-
format standard, it is part of the set of technologies that constitute the
foundations of the semantic Web.
2.3 RDF
On the top of XML, the W3C has developed the Resource
Description Framework (RDF) (RDF 2002) language to standardize
the definition and use of metadata. Therefore, XML and RDF each
have their merits as a foundation for the semantic Web, but RDF
provides more suitable mechanisms for developing ontology
representation languages like OIL (Horrocks, Harmelen et al. 2001) or
OWL (OWL 2004).
RDF uses XML and it is at the base of the semantic Web, so that
all the other languages corresponding to the upper layers are built on
top of it. RDF is a formal data model for machine understandable
metadata used to provide standard descriptions of Web resources. By
providing a standard way of referring to metadata elements, specific
metadata element names, and actual metadata content, RDF builds
standards for applications so that they can interoperate and
intercommunicate more easily, facilitating data and system integration
and interoperability. In a first approach it may seen that RDF is very
similar to XML, but a closer analysis reveals that they are
conceptually different. If we model the information present in a RDF
model using XML, human readers would probably be able to infer the
underlying semantic structure, but applications would not.
RDF is a simple general purpose metadata language for
representing information in the Web and provides a model for
describing and creating relationships between resources. A resource
can be a thing, such as a person, a song, or a Web page. With RDF it
is possible to add pre-defined modeling primitives for expressing
semantics of data to a document without making any assumptions
about the structure of the document. RDF defines a resource as any
object that is uniquely identifiable by a URI (Universal Resource
Identifier). A resource defined with RDF has properties associated to
it. Properties are identified by property-types, and property-types have
corresponding values. Property-types express the relationships of
values associated with resources. The basic structure of RDF is very
Developing an OWL Ontology for e-Tourism 5
simple and basically uses RDF triples of the form  as illustrated in Figure 4-2.
Figure 4-2. An RDF statement
2.4 RDF Schema
The RDF Schema (RDFS 2004) provides a type system for RDF.
The RDFS is technologically advanced compared to RDF since it
provides a way to build an object model from which the actual data is
referenced and which tells what things really mean.
Briefly, the RDF Schema (RDFS) allows users to define resources
with classes, properties, and values. The concept of RDF class is
similar to the concept of class in object-oriented programming
languages such as Java and C++. A class is a structure of similar
things and inheritance is allowed. This allows resources to be defined
as instances of classes and subclasses of classes allowing classes to be
organized in a hierarchical fashion. For example, the class
First_Line_Manager might be defined as a subclass of Manager which
is a subclass of Staff, meaning that any resource which is in class Staff
is also implicitly in class First_Line_Manager as well.
An RDFS property can be viewed as an attribute of a class. RDFS
properties may inherit from other properties, and domain and range
constraints can be applied to focus their use. For example, a domain
constraint is used to limit what class or classes a specific property may
have and a range constraint is used to limit its possible values. With
these extensions, RDFS comes closer to existing ontology languages.
As with RDF, the XML namespace mechanism serves to identify
RDFS.
6 Semantic Web Processes and Their Applications
2.5 Ontologies
An ontology is an agreed vocabulary that provides a set of well-
founded constructs to build meaningful higher level knowledge for
specifying the semantics of terminology systems in a well defined and
unambiguous manner. For a particular domain, an ontology represents
a richer language for providing complex constraints on the types of
resources and their properties. Compared to a taxonomy, ontologies
enhances the semantics by providing richer relationships between the
terms of a vocabulary. Ontologies are usually expressed in a logic-
based language, so that detailed and meaningful distinctions can be
made among the classes, properties, and relations.
Ontologies can be used to increase communication both between
humans and computers. The three major uses of ontologies (Jasper
and Uschold 1999) are:
• To assist in communication between humans.
• To achieve interoperability and communication among software
systems.
• To improve the design and the quality of software systems.
Currently, the most prominent ontology language is OWL (OWL
2004), the language we will cover in this chapter. OWL is a
vocabulary extension of RDF and is derived from the DAML+OIL
language (DAML 2001), with the objective of facilitating a better
machine interpretability of Web content than the one supported by
XML and RDF. This evolution of semantic Web languages is
illustrated in Figure 4-3.
Figure 4-3. Evolution of Semantic Web Languages
DAML+OIL resulted from the integration of the DAML and OIL
languages. DAML (DARPA Agent Markup Language) was created as
part of a research program (www.daml.org) started in August 2000 by
Developing an OWL Ontology for e-Tourism 7
DARPA, a US governmental research organization. OIL (Ontology
Inference Layer) is an initiative funded by the European Union
programme for Information Society Technologies. OIL was intended
to support e-commerce and enable knowledge management. OIL and
DAML were merged originating DAML+OIL, which later evolved
into OWL.
3. LIMITATIONS OF RDFS
RDF Schema is a semantic extension of RDF and it is used for
describing vocabularies in RDF. It provides mechanisms for
describing groups of related resources and the relationships between
resources. These resources are used to determine characteristics of
other resources, such as the domains and ranges of properties.
However, RDFS is a very primitive language and a more
expressive solution is advantageous to describe resources in more
detail. In order to fully understand the potentialities of OWL, it is
important to identify the limitations that RDFS suffers from. It is the
recognition of the limitations of RDFS that led to the development of
OWL.
Let’s analyze some of the limitations of RDFS to identify the
extensions that are needed:
1. RDFS cannot express equivalence between concepts. This is
important to be able to express the equivalence of ontological
concepts developed by separate working groups.
2. RDFS does not have the capability of expressing the uniqueness
and the cardinality of properties. In some cases, it may be
necessary to express that a particular property value may have only
one value in a particular class instance. For example, a sedan car
has exactly four wheels and a book is written by at least one
author.
3. RDFS can express the values of a particular property but cannot
express that this is a closed set by enumeration. . For example, the
gender of a person should have only two values: male and female.
4. RDFS cannot express disjointedness. For example, the gender of a
person can be male and female. While it is possible in RDFS to
express that John is a male and Julie a female, there is no way of
saying that John is not a female and Julie is not a male.
8 Semantic Web Processes and Their Applications
5. RDFS cannot build new classes by combining other classes using
union, intersection, and complement. For example, the class “staff”
might be the union of the classes “CEO”, “manager” and “clerk”.
The class “staff” may also be described as the intersection of the
classes “person” and “organization employee”. Another example is
the ability to express that a person is the disjoint union of the
classes male and female.
6. RDFS cannot declare range restrictions that apply to some classes
only. The element rdfs:range defines the range of a property for all
classes. For example, for the property “eats”, it is not possible to
express that cows eat only plants, while other animals may eat
meat, too.
7. RDFS cannot express special characteristics of properties such as
transitive property (e.g. “more complex than”), unique property
(e.g. “is mother of”), and that a property is the inverse of another
property (e.g. “writes” and “is written by”)
4. THREE TYPES OF OWL
Ontology is a term borrowed from philosophy that refers to the
science of describing the kinds of entities in the world and how they
are related. In OWL, an ontology is a set of definitions of classes and
properties, and constraints on the way those classes and properties can
be employed.
In the previous sections, we have established that RDFS was one
of the base models for the semantic Web, but that it suffered from
several limitations. At the top of the RDFS layer it is possible to
define more powerful languages to describe semantics. The most
prominent markup language for publishing and sharing data using
ontologies on the Internet is the Web Ontology Language (OWL).
OWL adds a layer of expressive power to RDFS, providing powerful
mechanisms for defining complex conceptual structures, and formally
describes the semantics of classes and properties using a logical
formalism.
OWL has been designed to meet the need for a Web ontology
language. As already mentioned, XML gives a syntax for semi-
structured documents but does not associate an XML tag with
semantics. Therefore, XML tags do not carry out any meaning, at least
for computers. XML Schema gives a schema to XML documents and
extends XML with a broad set of data types. RDF is a simple data
Developing an OWL Ontology for e-Tourism 9
model represented using the XML syntax for resources and the
relations between them. The RDF Schema provides a type system for
RDF which allows users to define resources with classes, properties,
and values. It provides a vocabulary for describing properties and
classes of RDF resources. The RDFS is technologically advanced
compared to RDF since it provides a way to build an object model
from which the actual data is referenced and which tells what things
really mean. OWL goes a step further and allows for describing
properties and classes, such as property type restrictions, equality,
property characteristics, class intersection, and restricted cardinality.
OWL is the proposed standard for Web ontologies. It builds upon
RDF and RDF Schema. XML-based RDF syntax is used, instances are
defined using RDF descriptions, and most RDFS modeling primitives
are also used. The W3C’s Web Ontology Working Group defined
OWL as three different sublanguages:
• OWL Lite
• OWL DL
• OWL Full
Each sublanguage fulfils different requirements. OWL Lite
supports those users primarily needing a classification hierarchy and
simple constraint features. The advantage of OWL Lite is that it is a
language that is easier for users to understand and it is also easier for
developers to implement tools and applications than the more
complicated and wide-ranging DL and Full versions. The main
disadvantage is that it has a restricted expressivity. For example, it
does not support the concept of disjunction, excludes enumerated
classes, and cardinality is restricted to only 0 or 1.
OWL DL supports those users who want maximum
expressiveness. OWL DL is more expressive but still ensures
completeness and decidability, i.e. all the calculations will compute
and terminate. OWL DL (DL for description logics) corresponds to a
field of research concerning a particular fragment of decidable first
order logic.
OWL Full has maximum expressivity and the syntactic freedom of
RDF but does not guarantee computation. It uses all the OWL
language primitives and the combination of these primitives in