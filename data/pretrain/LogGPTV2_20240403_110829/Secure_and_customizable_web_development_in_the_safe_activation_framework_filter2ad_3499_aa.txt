# Title: Secure and Customizable Web Development in the SAFE Activation Framework

## Authors
- Raphael M. Reischuk, Saarland University, Saarbrücken, Germany
- Florian Schröder, Saarland University, Saarbrücken, Germany
- Johannes Gehrke, Cornell University, Ithaca, New York, USA

## Abstract
We present a demonstration of the SAFE framework, showcasing its latest security features. SAFE is a comprehensive platform for developing modern web applications, providing automated state consistency, multi-level security enforcement, and support for web personalization and extensibility.

With the increasing complexity of data-driven web application development, particularly in areas such as consistent data management, ownership preservation, and data privacy, we believe that a demonstration of a secure and customizable web application framework will be of significant interest to the security community. This demo will highlight how quickly and intuitively a secure, multi-tier web application can be customized.

## Categories and Subject Descriptors
- D.2.7 [Software Engineering]: Distribution, Maintenance, and Enhancement—Extensibility
- K.6.5 [Management of Computing and Information Systems]: Security and Protection—Authentication

## Keywords
- Extensibility
- Web Security
- Access Control

## Introduction
The delivery of software through the web has become increasingly common, following the cloud computing model of software as a service. In such rich internet applications, the code is divided into client and server components, with the server code running at the service provider and the client accessing the application via a web browser.

In data-driven web applications, the application state is stored in a database or key-value store, and users interact with this persistent state through web clients, each having an individual (and possibly shared) state. Users often desire to personalize these web applications, tailoring the functionality to meet their specific needs.

Developing and customizing modern web applications is more challenging than ever due to the need to manage multiple tiers, shared states across devices, complex security attack surfaces, and intricate technical details. Additionally, large amounts of similar code are frequently rewritten from scratch. We believe that using high-level specifications in a declarative language and generating application code through a compiler can significantly simplify and secure the web development process.

## The SAFE Activation Framework
We demonstrate the SAFE activation framework, which provides an efficient and elegant way to create interactive and secure web applications using reusable software components. One of the key reasons for SAFE's success is its intuitive yet expressive declarative modeling language, SFW.

### Key Features of SAFE
1. **Common Patterns and Code Libraries**: Web applications often use common patterns that are better sourced from well-tested code libraries rather than being manually programmed from scratch. Copy-and-paste methods can introduce logical or structural flaws that are difficult to detect.
2. **Early Detection of Human Errors**: Detecting and avoiding human errors early in the development process not only prevents functional bugs but also mitigates potential security threats.
3. **Restricted Operations for Security**: A limited set of allowed operations simplifies the detection of malicious code and prevents security vulnerabilities. For example, using a system-provided and trusted encryption function ensures that all randomness is correctly chosen, preventing backdoors.

These aspects are especially important for data-driven web applications with sensitive and privacy-critical user data. Programming security checks, error handling, and other necessary components can be tedious and error-prone. The automated compilation of higher-level languages not only produces better code but also significantly reduces the programmer's workload.

### Main Features of SAFE
SAFE provides a hierarchical programming model that aligns with the DOM structure of web pages. The core components of SAFE are f-units, which encapsulate all code fragments for a specific functionality within a web page, including business logic, visual appearance, and user interaction. This modularity relieves the programmer from dealing with variable scopes and their interference.

A web page is modeled as an activation tree, where f-units are organized hierarchically. An f-unit is activated by its parent f-unit and receives activation data through well-defined interfaces. It can use this data or query the database to display parts of the web page. Each f-unit can also activate child f-units, and the compiled HTML, JS, and CSS code is made available in the activation tree. The activation tree is then linearized to a single HTML document.

### Database Updates
SAFE's methodology automates the maintenance of state consistency, even for concurrent updates. When a client's browser interacts with the delivered HTML page and sends an update request, the corresponding f-unit in the activation tree processes the request. This approach eliminates the technical inconveniences of manual state updates and ensures consistency.

## Conclusion
SAFE addresses the challenges of modern web application development by providing a secure, customizable, and efficient framework. By abstracting from technical details and preventing malicious code, SAFE simplifies the overall development process and enhances the security and extensibility of web applications.