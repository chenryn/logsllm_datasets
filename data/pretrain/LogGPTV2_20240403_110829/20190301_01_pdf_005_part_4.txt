Include the SET clause and option_name/option_value pairs to modify the
attributes of the queue:
option_name option_value
The name of the option or options to be associated with the new queue and
the corresponding value of the option. If you provide duplicate option
names, the server will return an error.
 If option_name is retries, provide an integer that represents
the number of times a dequeue may be attempted.
 If option_name is retrydelay, provide a double-precision
value that represents the delay in seconds.
 If option_name is retention, provide a double-precision
value that represents the retention time in seconds.
Use the third form of the ALTER QUEUE command to enable or disable enqueuing and/or
dequeuing on a particular queue:
ALTER QUEUE queue_name ACCESS { START | STOP } [ FOR {
enqueue | dequeue } ] [ NOWAIT ]
Parameters
queue_name
The name (optionally schema-qualified) of an existing queue.
ACCESS
Include the ACCESS keyword to enable or disable enqueuing and/or
dequeuing on a particular queue.
START | STOP
Use the START and STOP keywords to indicate the desired state of the
queue.
FOR enqueue|dequeue
Use the FOR clause to indicate if you are specifying the state of
enqueueing or dequeueing activity on the specified queue.
NOWAIT
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 39
Database Compatibility for Oracle® Developers
Reference Guide
Include the NOWAIT keyword to specify that the server should not wait for
the completion of outstanding transactions before changing the state of the
queue. The NOWAIT keyword can only be used when specifying an
ACCESS value of STOP. The server will return an error if NOWAIT is
specified with an ACCESS value of START.
Use the fourth form to ADD or DROP callback details for a particular queue.
ALTER QUEUE queue_name { ADD | DROP } CALL TO location_name
[ WITH callback_option ]
Parameters
queue_name
The name (optionally schema-qualified) of an existing queue.
ADD | DROP
Include the ADD or DROP keywords to enable add or remove callback
details for a queue.
location_name
location_name specifies the name of the callback procedure.
callback_option
callback_option can be context; specify a RAW value when
including this clause.
Example
The following example changes the name of a queue from work_queue_east to
work_order:
ALTER QUEUE work_queue_east RENAME TO work_order;
The following example modifies a queue named work_order, setting the number of
retries to 100, the delay between retries to 2 seconds, and the length of time that the
queue will retain dequeued messages to 10 seconds:
ALTER QUEUE work_order SET (retries 100, retrydelay 2, retention 10);
The following commands enable enqueueing and dequeueing in a queue named
work_order:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 40
Database Compatibility for Oracle® Developers
Reference Guide
ALTER QUEUE work_order ACCESS START;
ALTER QUEUE work_order ACCESS START FOR enqueue;
ALTER QUEUE work_order ACCESS START FOR dequeue;
The following commands disable enqueueing and dequeueing in a queue named
work_order:
ALTER QUEUE work_order ACCESS STOP NOWAIT;
ALTER QUEUE work_order ACCESS STOP FOR enqueue;
ALTER QUEUE work_order ACCESS STOP FOR dequeue;
See Also
CREATE QUEUE, DROP QUEUE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 41
Database Compatibility for Oracle® Developers
Reference Guide
2.3.5 ALTER QUEUE TABLE
Advanced Server includes extra syntax (not offered by Oracle) with the ALTER QUEUE
SQL command. This syntax can be used in association with the DBMS_AQADM package.
Name
ALTER QUEUE TABLE-- modify an existing queue table.
Synopsis
Use ALTER QUEUE TABLE to change the name of an existing queue table:
ALTER QUEUE TABLE name RENAME TO new_name
Description
ALTER QUEUE TABLE allows a superuser or a user with the aq_administrator_role
privilege to change the name of an existing queue table.
Parameters
name
The name (optionally schema-qualified) of an existing queue table.
new_name
New name for the queue table.
Example
To change the name of a queue table from wo_table_east to work_order_table:
ALTER QUEUE TABLE wo_queue_east RENAME TO work_order_table;
See Also
CREATE QUEUE TABLE, DROP QUEUE TABLE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 42
Database Compatibility for Oracle® Developers
Reference Guide
2.3.6 ALTER ROLE… IDENTIFIED BY
Name
ALTER ROLE - change the password associated with a database role
Synopsis
ALTER ROLE role_name IDENTIFIED BY password
[REPLACE prev_password]
Description
A role without the CREATEROLE privilege may use this command to change their own
password. An unprivileged role must include the REPLACE clause and their previous
password if PASSWORD_VERIFY_FUNCTION is not NULL in their profile. When the
REPLACE clause is used by a non-superuser, the server will compare the password
provided to the existing password and raise an error if the passwords do not match.
A database superuser can use this command to change the password associated with any
role. If a superuser includes the REPLACE clause, the clause is ignored; a non-matching
value for the previous password will not throw an error.
If the role for which the password is being changed has the SUPERUSER attribute, then a
superuser must issue this command. A role with the CREATEROLE attribute can use this
command to change the password associated with a role that is not a superuser.
Parameters
role_name
The name of the role whose password is to be altered.
password
The role‟s new password.
prev_password
The role‟s previous password.
Examples
To change a role‟s password:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 43
Database Compatibility for Oracle® Developers
Reference Guide
ALTER ROLE john IDENTIFIED BY xyRP35z REPLACE 23PJ74a;
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 44
Database Compatibility for Oracle® Developers
Reference Guide
2.3.7 ALTER ROLE - Managing Database Link and DBMS_RLS
Privileges
Advanced Server includes extra syntax (not offered by Oracle) for the ALTER ROLE
command. This syntax can be useful when assigning privileges related to creating and
dropping database links compatible with Oracle databases, and fine-grained access
control (using DBMS_RLS).
CREATE DATABASE LINK
A user who holds the CREATE DATABASE LINK privilege may create a private database
link. The following ALTER ROLE command grants privileges to an Advanced Server role
that allow the specified role to create a private database link:
ALTER ROLE role_name
WITH [CREATEDBLINK | CREATE DATABASE LINK]
This command is the functional equivalent of:
GRANT CREATE DATABASE LINK to role_name
Use the following command to revoke the privilege:
ALTER ROLE role_name
WITH [NOCREATEDBLINK | NO CREATE DATABASE LINK]
Please note: the CREATEDBLINK and NOCREATEDBLINK keywords should be considered
deprecated syntax; we recommend using the CREATE DATABASE LINK and NO CREATE
DATABASE LINK syntax options.
CREATE PUBLIC DATABASE LINK
A user who holds the CREATE PUBLIC DATABASE LINK privilege may create a public
database link. The following ALTER ROLE command grants privileges to an Advanced
Server role that allow the specified role to create a public database link:
ALTER ROLE role_name
WITH [CREATEPUBLICDBLINK | CREATE PUBLIC DATABASE LINK]
This command is the functional equivalent of:
GRANT CREATE PUBLIC DATABASE LINK to role_name
Use the following command to revoke the privilege:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 45
Database Compatibility for Oracle® Developers
Reference Guide
ALTER ROLE role_name
WITH [NOCREATEPUBLICDBLINK | NO CREATE PUBLIC DATABASE LINK]
Please note: the CREATEPUBLICDBLINK and NOCREATEPUBLICDBLINK keywords
should be considered deprecated syntax; we recommend using the CREATE PUBLIC
DATABASE LINK and NO CREATE PUBLIC DATABASE LINK syntax options.
DROP PUBLIC DATABASE LINK
A user who holds the DROP PUBLIC DATABASE LINK privilege may drop a public
database link. The following ALTER ROLE command grants privileges to an Advanced
Server role that allow the specified role to drop a public database link:
ALTER ROLE role_name
WITH [DROPPUBLICDBLINK | DROP PUBLIC DATABASE LINK]
This command is the functional equivalent of:
GRANT DROP PUBLIC DATABASE LINK to role_name
Use the following command to revoke the privilege:
ALTER ROLE role_name
WITH [NODROPPUBLICDBLINK | NO DROP PUBLIC DATABASE LINK]
Please note: the DROPPUBLICDBLINK and NODROPPUBLICDBLINK keywords should be
considered deprecated syntax; we recommend using the DROP PUBLIC DATABASE LINK
and NO DROP PUBLIC DATABASE LINK syntax options.
EXEMPT ACCESS POLICY
A user who holds the EXEMPT ACCESS POLICY privilege is exempt from fine-grained
access control (DBMS_RLS) policies. A user who holds these privileges will be able to
view or modify any row in a table constrained by a DBMS_RLS policy. The following
ALTER ROLE command grants privileges to an Advanced Server role that exempt the
specified role from any defined DBMS_RLS policies:
ALTER ROLE role_name
WITH [POLICYEXEMPT | EXEMPT ACCESS POLICY]
This command is the functional equivalent of:
GRANT EXEMPT ACCESS POLICY TO role_name
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 46
Database Compatibility for Oracle® Developers
Reference Guide
Use the following command to revoke the privilege:
ALTER ROLE role_name
WITH [NOPOLICYEXEMPT | NO EXEMPT ACCESS POLICY]
Please note: the POLICYEXEMPT and NOPOLICYEXEMPT keywords should be considered
deprecated syntax; we recommend using the EXEMPT ACCESS POLICY and NO EXEMPT
ACCESS POLICY syntax options.
See Also
CREATE ROLE, DROP ROLE, GRANT, REVOKE, SET ROLE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 47
Database Compatibility for Oracle® Developers
Reference Guide
2.3.8 ALTER SEQUENCE
Name
ALTER SEQUENCE -- change the definition of a sequence generator
Synopsis
ALTER SEQUENCE name [ INCREMENT BY increment ]
[ MINVALUE minvalue ] [ MAXVALUE maxvalue ]
[ CACHE cache | NOCACHE ] [ CYCLE ]
Description
ALTER SEQUENCE changes the parameters of an existing sequence generator. Any
parameter not specifically set in the ALTER SEQUENCE command retains its prior setting.
Parameters
name
The name (optionally schema-qualified) of a sequence to be altered.
increment
The clause INCREMENT BY increment is optional. A positive value will make
an ascending sequence, a negative one a descending sequence. If unspecified, the
old increment value will be maintained.
minvalue
The optional clause MINVALUE minvalue determines the minimum value a
sequence can generate. If not specified, the current minimum value will be
maintained. Note that the key words, NO MINVALUE, may be used to set this
behavior back to the defaults of 1 and -263-1 for ascending and descending
sequences, respectively, however, this term is not compatible with Oracle
databases.
maxvalue
The optional clause MAXVALUE maxvalue determines the maximum value for
the sequence. If not specified, the current maximum value will be maintained.
Note that the key words, NO MAXVALUE, may be used to set this behavior back to
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 48
Database Compatibility for Oracle® Developers
Reference Guide
the defaults of 263-1 and -1 for ascending and descending sequences, respectively,
however, this term is not compatible with Oracle databases.
cache
The optional clause CACHE cache specifies how many sequence numbers are to
be preallocated and stored in memory for faster access. The minimum value is 1
(only one value can be generated at a time, i.e., NOCACHE). If unspecified, the old
cache value will be maintained.
CYCLE
The CYCLE option allows the sequence to wrap around when the maxvalue or
minvalue has been reached by an ascending or descending sequence
respectively. If the limit is reached, the next number generated will be the
minvalue or maxvalue, respectively. If not specified, the old cycle behavior
will be maintained. Note that the key words, NO CYCLE, may be used to alter the
sequence so that it does not recycle, however, this term is not compatible with
Oracle databases.
Notes
To avoid blocking of concurrent transactions that obtain numbers from the same
sequence, ALTER SEQUENCE is never rolled back; the changes take effect immediately
and are not reversible.
ALTER SEQUENCE will not immediately affect NEXTVAL results in backends, other than
the current one, that have pre-allocated (cached) sequence values. They will use up all
cached values prior to noticing the changed sequence parameters. The current backend
will be affected immediately.
Examples
Change the increment and cache value of sequence, serial.
ALTER SEQUENCE serial INCREMENT BY 2 CACHE 5;
See Also
CREATE SEQUENCE, DROP SEQUENCE
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 49
Database Compatibility for Oracle® Developers
Reference Guide
2.3.9 ALTER SESSION
Name
ALTER SESSION -- change a runtime parameter
Synopsis
ALTER SESSION SET name = value
Description
The ALTER SESSION command changes runtime configuration parameters. ALTER
SESSION only affects the value used by the current session. Some of these parameters are
provided solely for compatibility with Oracle syntax and have no effect whatsoever on
the runtime behavior of Advanced Server. Others will alter a corresponding Advanced
Server database server runtime configuration parameter.
Parameters
name
Name of a settable runtime parameter. Available parameters are listed below.
value
New value of parameter.
Configuration Parameters
The following configuration parameters can be modified using the ALTER SESSION
command:
NLS_DATE_FORMAT (string)
Sets the display format for date and time values as well as the rules for
interpreting ambiguous date input values. Has the same effect as setting the
Advanced Server datestyle runtime configuration parameter.
NLS_LANGUAGE (string)
Sets the language in which messages are displayed. Has the same effect as setting
the Advanced Server lc_messages runtime configuration parameter.
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 50
Database Compatibility for Oracle® Developers
Reference Guide
NLS_LENGTH_SEMANTICS (string)
Valid values are BYTE and CHAR. The default is BYTE. This parameter is provided
for syntax compatibility only and has no effect in the Advanced Server.
OPTIMIZER_MODE (string)
Sets the default optimization mode for queries. Valid values are ALL_ROWS,
CHOOSE, FIRST_ROWS, FIRST_ROWS_10, FIRST_ROWS_100, and
FIRST_ROWS_1000. The default is CHOOSE. This parameter is implemented in
Advanced Server.
QUERY_REWRITE_ENABLED (string)
Valid values are TRUE, FALSE, and FORCE. The default is FALSE. This parameter
is provided for syntax compatibility only and has no effect in Advanced Server.
QUERY_REWRITE_INTEGRITY (string)
Valid values are ENFORCED, TRUSTED, and STALE_TOLERATED. The default is
ENFORCED. This parameter is provided for syntax compatibility only and has no
effect in Advanced Server.
Examples
Set the language to U.S. English in UTF-8 encoding. Note that in this example, the value,
en_US.UTF-8, is in the format that must be specified for Advanced Server. This form is
not compatible with Oracle databases.
ALTER SESSION SET NLS_LANGUAGE = 'en_US.UTF-8';
Set the date display format.
ALTER SESSION SET NLS_DATE_FORMAT = 'dd/mm/yyyy';
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 51
Database Compatibility for Oracle® Developers
Reference Guide
2.3.10 ALTER TABLE
Name
ALTER TABLE -- change the definition of a table
Synopsis
ALTER TABLE name
action [, ...]
ALTER TABLE name
RENAME COLUMN column TO new_column
ALTER TABLE name
RENAME TO new_name
where action is one of:
ADD column type [ column_constraint [ ... ] ]
DROP COLUMN column
ADD table_constraint
DROP CONSTRAINT constraint_name [ CASCADE ]
Description
ALTER TABLE changes the definition of an existing table. There are several subforms:
ADD column type
This form adds a new column to the table using the same syntax as CREATE
TABLE.
DROP COLUMN
This form drops a column from a table. Indexes and table constraints involving
the column will be automatically dropped as well.
ADD table_constraint
This form adds a new constraint to a table using the same syntax as CREATE
TABLE.
DROP CONSTRAINT
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 52
Database Compatibility for Oracle® Developers
Reference Guide
This form drops constraints on a table. Currently, constraints on tables are not
required to have unique names, so there may be more than one constraint
matching the specified name. All matching constraints will be dropped.
RENAME
The RENAME forms change the name of a table (or an index, sequence, or view) or
the name of an individual column in a table. There is no effect on the stored data.
You must own the table to use ALTER TABLE.
Parameters
name
The name (possibly schema-qualified) of an existing table to alter.
column
Name of a new or existing column.
new_column
New name for an existing column.
new_name
New name for the table.
type
Data type of the new column.
table_constraint
New table constraint for the table.
constraint_name
Name of an existing constraint to drop.
CASCADE
Automatically drop objects that depend on the dropped constraint.
Notes
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 53
Database Compatibility for Oracle® Developers
Reference Guide