Date
 10
Feb-08 Feb-15 Feb-22 Mar-01 Mar-08 Mar-15
Date
(a) LOCAL-POLICY
(c) SNMP Request udp
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
 10
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
 10
 1
Feb-08 Feb-15 Feb-22 Mar-01 Mar-08 Mar-15
Date
 1
Feb-08 Feb-15 Feb-22 Mar-01 Mar-08 Mar-15
Date
(b) Speedera
(d) Dest. Unr.
Fig. 1. Hourly alert intensity for some of the most proliﬁc signatures in learning data.
Horizontal axis is the time, and the vertical shows the number of alerts per hour
an exact deﬁnition for interesting artifacts from the real users, we had to look
for behavior that seemed to us worth further investigation. In addition to the
actual parameters, also diﬀerent aggregation criteria and input preprocessing
were used.
Setting chart parameters. The width of control limits in (6) was set to
three standard deviations as already proposed by Roberts [8]. Values {1, 2, 3, 6}
were tried before making the choice. The memory of the chart depends on the
smoothing factor and sampling interval length. Figures 2 and 3 depict the eﬀect
of memory length on the trend and control limits with sampling interval of
one hour and (1 − λ) with values 0.8 and 0.99407, respectively. The smaller
smoothing factor results in trend and control limits following the current value
closely. The diﬀerence between the trend and reality is nearly invisible in the
Fig. 2, and the control limits tighten relatively fast after an abrupt shift in ﬂow
intensity. The model behavior with signiﬁcantly larger smoothing factor in Fig. 3
shows how the recent values have relatively small eﬀect on trend. The standard
deviation reaches such large values that the control limits absorb all variations
in the ﬂow. For (1 − λ) in [0.2, 0.8] the ﬂagging rate increased towards smaller
smoothing factors, the steepness of increase varying from ﬂow to ﬂow.
ewma trend
UCL
LCL
actual
174
Jouni Viinikka and Herv´e Debar
 500
 400
 300
y
t
i
s
n
e
t
n
i
t
r
e
a
l
 200
 100
 0
-100
-200
Feb-01
Feb-08
Feb-15
Feb-22
Mar-01
Mar-08
Mar-15
Mar-22
date
Fig. 2. The eﬀect of small smoothing factor on trend and control limits
ewma trend
UCL
LCL
actual
 350
 300
 250
 200
 150
 100
 50
 0
-50
-100
y
t
i
s
n
e
n
t
i
t
r
e
a
l
-150
Feb-01
Feb-08
Feb-15
Feb-22
Mar-01
Mar-08
Mar-15
Mar-22
date
Fig. 3. The eﬀect of large smoothing factor on trend and control limits
Monitoring IDS Background Noise Using EWMA Control Charts
175
sampling interval in seconds
1800
3600
7200
14400
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
d
e
g
g
a
l
f
s
t
r
e
a
l
f
o
n
o
i
t
r
o
p
o
r
p
 0.02
 0.8
 0.82
 0.84
 0.86
 0.88
 0.9
 0.92
 0.94
 0.96
 0.98
 1
smoothing factor
Fig. 4. The eﬀect of sampling interval length and smoothing factor on alert reduction
sampling interval in seconds
1800
3600
7200
14400
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
d
e
g
g
a
l
f
s
t
r
e
a
l
f
o
n
o
i
t
r
o
p
o
r
p
 0
 0.8
 0.82
 0.84
 0.86
 0.88
 0.9
 0.92
 0.94
 0.96
 0.98
 1
smoothing factor
Fig. 5. The eﬀect of sampling interval length and smoothing factor on alert reduction
176
Jouni Viinikka and Herv´e Debar
However, the sampling interval length had surprisingly little eﬀect on the
proportion of both intervals and alerts deemed as anomalous. The same applies
also for the smoothing interval apart from the very extreme values. Figures 4
and 5 show the proportion of anomalous alerts for two signatures triggered by
ICMP Echo messages as the function of smoothing factor, where (1 − λ) ∈
[ 0.8, 0.99407 ] and sampling intervals {0.5, 1, 2, 4} hours. For both the proportion
of alerts marked as anomalous is within range of four percentage units for except
with the largest smoothing factors. In Fig. 4 alert ﬂagging shoots up with largest
smoothing factors, a phenomenon which was caused by the large diﬀerence in
trend and current value due to lagging trend. In Fig. 5 there is a sharp drop in
ﬂagging as the smoothing factor increases. This inverse eﬀect was usually related
to wide control limits causing all ﬂow behavior to be considered as normal. An
example of this kind of situation is visible in the right half of Fig. 3.
Setting the sampling interval to one hour and using smoothing factors 0.8
and 0.92 allowed ﬂagging those kinds of anomalies in alert ﬂows considered inter-
esting also by the visual exploration shown in Figs. 2 and 3. As stated above, the
sampling interval length seemed have only a minor eﬀect on the ﬂagging rate.
In addition, according to (5), this gives the model a memory of 9 and 24 hours,
respectively. For the user this provides an intuitive association with workday
and day, which is also an important aspect to consider. One hour from event
to notiﬁcation is a long time in terms of intrusion detection. However, instead
of real time detection of compromise, the need was to heavily summarize the
background noise and in addition our target IDS is not under constant surveil-
lance by the operator. As such, the one hour sampling interval was considered
suitable. Depending on the user’s requirements, the sampling frequency could
be increased.
To capture the time related behavior visible for some signatures, two other
models were deployed in addition to the one monitoring the alert ﬂow in contin-
uous manner. The second model, later referred as daily, uses separate statistic
for the intensity of each hour of the day. The third model, weekday, maintains
separate statistics for weekday and weekend intensities.
The aggregation criteria. Combining diﬀerent signatures as one ﬂow was also
tried. For example, Snort has several signatures for diﬀerent ICMP Destination
Unreachable messages and for web traﬃc that were used to form two aggre-
gates, respectively. In learning data, 232 web related signatures were activated,
and only those Destination Unreachable signatures reacting to Communication
Administratively events (Snort SIDs 485, 486, 487) were present. These combi-
nations did not seem to make sense, since there were few signatures dominating
the sums that only reﬂected the behavior of alerts caused by them. Only separate
signatures and signature classes were chosen for further examination. However,
the aggregate ﬂows could be formed in many diﬀerent ways, refer to Sect. 5 for
more on this.
Input processing. Instead of using the measured value of event intensity as
xi in (1), additional smoothing operation with small smoothing factor is done
Monitoring IDS Background Noise Using EWMA Control Charts
177
in [9]. We experimented with smoothing factors 0.2 and 0.3 for the trend input,
but the eﬀect on alert reduction was negligible. By feeding the raw intensity
to trend calculations, σz reaches higher values more quickly. This means also
that the control limits widen up rapidly, which helps to avoid ﬂagging several
intervals after an abrupt shift in intensity level. For example, in Fig. 1(c) as the
intensity increases around February 15th, the trend line lags below the real value
for a moment. If the control limits are not wide enough, several intervals become
ﬂagged instead of only the one containing the shift.
Mostly out of curiosity, cutoﬀ values for xi based on σz to limit trend updates
were also used. This did not work well, and caused problems especially with
stable ﬂows. When σz approached zero the trend became too slow adapting to
drastic changes. Again, the above mentioned example with SNMP Request udp
applies.
In order to validate the choice of parameters and to see the suitability of our
approach, experimentation with a larger data set was performed.
3 Practical Experimentation
For testing a more complete alert data base dump than the one used in learning
phase was obtained. It contains nearly 2M alerts from 1836 signatures accumu-
lated during 112 days from the same system. We use two statistics to measure the
applicability of the EWMA monitoring to a particular alert ﬂow. The statistics
are the percentage of alerts ﬂagged and proportion of anomalous intervals from
intervals with non-zero activity, discussed in 3.1. For each ﬂow these measure-
ments are made with the three models, continuous, daily and weekday, and with
two diﬀerent smoothing factors, resulting to six statistics per ﬂow. These results
are presented in 3.2. Then the overall usefulness of our method for summarizing
the alerts is evaluated with respect to number of applicable and non-applicable
ﬂows.
3.1 The Rationale for the Test Metric
As noted by Mell et al. [12] testing IDSes is no simple task and lacks rigorous
methodology. The diﬃculty in our situation arises from the fact that we intend
to signal the user when something odd is going on with the background noise
and help him to cope with alert ﬂoods by reducing the number of alerts reported.
As such we cannot make a strict separation between correct and false alarms,
and using metrics like accuracy or completeness [13] is diﬃcult. It is the user in
the very end who decides whether the extracted information is useful or not.
However, we can describe the summarizing capabilities with the two above
mentioned statistics, 1) the proportion of alerts ﬂagged as anomalous, and 2) the
proportion of busy time slots. As the control chart signals only the abnormality
of an interval, we count all alerts from anomalous interval to be ﬂagged, resulting
to a rough approximation of the alert reduction in individual alerts. Since we
intend to summarize background noise, it is unlikely that the operator would go
178
Jouni Viinikka and Herv´e Debar
through individual alerts even from an anomalous interval. Let us assume that
he uses a time unit t to skim through the raw background noise generated by
one ﬂow during an interval T to detect that it seems normal, where T equals
to sampling interval of EWMA monitoring. In our case T is one hour and it is
likely that t << T . If the operator uses EWMA monitoring for the ﬂow, he will
be notiﬁed only when ﬂow behaves in anomalous way. Now the time units t that
would be used to manually detect normal behavior can be used for more useful
tasks like treating the more severe alerts. Thus it is more interesting to look at
the number of anomalous intervals after summarization with respect to intervals
showing activity in the raw ﬂow than just the alert reduction.
The proportion of busy time slots is obtained by dividing the number of
anomalous intervals by the number of intervals showing non-zero activity for the
ﬂow. The proportion indicates how constantly the operator would be bothered
by the ﬂow with EWMA monitoring compared to manually checking the accu-
mulated noise every T . Small values for a ﬂow mean smaller nuisance to the user
where as large values tell that EWMA monitoring is not capable to summarize
the activity of this ﬂow.
As an anomaly can be caused by an interval with zero alerts, the proportion
could in theory be above unity. For example, imagine a ﬂow with impulse train
type proﬁle, such as LOCAL-POLICY in Fig. 1(a), for which all active intervals
plus some zero intensity intervals could be ﬂagged. However, in practice we never
saw this. For the daily and weekday models we combine the results of individual
time slot statistics to obtain the overall performance. One drawback in these
metrics is that there is no cost associated to them even though viewing only the
ﬂow anomaly alerts instead of individual alerts, some information is lost.
3.2 Results
As the interest is to monitor high volumed aggregates, we considered only sig-
natures that had created more than 100 alerts. After this preselection we had 85
signatures left. This section ﬁrst describes how the ﬂow volume aﬀected the sum-
marization, and the identiﬁed reasons for poor eﬃciency. Secondly we analyze
the alert types causing large numbers of alerts, the impact of time slot choice
and larger aggregates for the ﬂow behavior, and the stability of ﬂow proﬁles.
Eﬀect of ﬂow volume. Judging from the busy interval reduction, the method
is useful for alert ﬂows that had created more than 10 K alerts, the eﬀectiveness
increasing with the ﬂow volume. The busy interval reduction for ﬂows below 10 K
alerts is already more modest, and below 1 K alerts the reduction is relatively