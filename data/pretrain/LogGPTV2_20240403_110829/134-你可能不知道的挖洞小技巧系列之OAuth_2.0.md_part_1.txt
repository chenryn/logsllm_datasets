你可能不知道的挖洞⼩技
巧系列之
OAuth 2.0 -
安全脉搏
SecPulse.COM |
“ 这是 酒仙桥六号部队 的第 134 篇⽂
章。
背景
最近被⼀个同学问起 OAuth2.0，才发现有不少⼈对
OAuth2.0 ⼀知半解，没有去真正了解过，更不⽤提如何
从 OAuth2.0 授权认证中去挖掘漏洞了。⽼洞新谈，
OAuth2.0 协议本身是没有问题的，⽽关于 OAuth2.0 的
漏洞⼤多是⼀些配置不当所造成的，严重时甚⾄可以达到
⽆交互登录任意授权账户。所以此⽂重点在于讲解
OAuth 2.0 是什么、运⾏原理流程（即 OAuth 2.0 的授
权模式）以及测试漏洞点的思路。
定义 - 是什么
简单来说，OAuth 简单说就是⼀种授权的协议，只要授
权⽅和被授权⽅遵守这个协议去写代码提供服务，那双⽅
就是实现了 OAuth 模式。OAuth2.0 使⽤已久，相信⼤
家即使不清楚 OAuth2.0 是什么，但在渗透测试或者挖
洞的过程中，也经常接触到，⽐如我们在 WEB 端总会碰
到这样的⽀持第三⽅授权登录的登录界⾯。
或者在移动端同样⽀持第三⽅授权登录的 APP。
这些应⽤都是通过⽤户授权后再去调⽤第三⽅登录，由第
三⽅认证服务器返回认证数据，OAuth2.0 就是客户端
(知乎、饿了么等平台) 和认证服务器 (QQ / 微信 / ⽀付
宝 / 微博等) 之间由于相互不信任⽽产⽣的⼀个授权协
议。
原理 - 运⾏流程
在明确了 OAuth2.0 后，我们来看 OAuth2.0 客户端定
义了⽤户授权的⼏种⽅式：授权码模式、简化模式、密码
模式、客户端模式。
1. 授权码模式
授权码模式是功能最完整、流程最严密的授权模式，也是
最安全以及⽬前使⽤最⼴泛的⼀种模式。以知乎采⽤第三
⽅微信登录为例。
认证流程：
（A）⽤户访问客户端，后者将前者导向认证服务器。
（B）⽤户选择是否给予客户端授权。
（C）假设⽤户给予授权，认证服务器将⽤户导向客户端
事先指定的 "重定向 URI"（redirection URI），同时附
上⼀个授权码。
（D）客户端收到授权码，附上早先的 "重定向 URI"，向
认证服务器申请令牌。这⼀步是在客户端的后台的服务器
上完成的，对⽤户不可⻅。
（E）认证服务器核对了授权码和重定向 URI，确认⽆误
后，向客户端发送访问令牌和更新令牌。
2. 授权码简化模式
认证流程：
（A）客户端将⽤户导向认证服务器。
（B）⽤户决定是否给予客户端授权。
（C）假设⽤户给予授权，认证服务器将⽤户导向客户端
指定的 "重定向 URI"，并在 URI 的 Hash 部分包含了访
问令牌。
（D）浏览器向资源服务器发出请求，其中不包括上⼀步
收到的 Hash 值。
（E）资源服务器返回⼀个⽹⻚，其中包含的代码可以获
取 Hash 值中的令牌。
（F）浏览器执⾏上⼀步获得的脚本，提取出令牌。
（G）浏览器将令牌发给客户端。
3. 密码模式
认证流程：
（A）⽤户向客户端提供⽤户名和密码。
（B）客户端将⽤户名和密码发给认证服务器，向后者请
求令牌。
（C）认证服务器确认⽆误后，向客户端提供访问令牌。
4. 客户端模式
认证流程：
（A）客户端向认证服务器进⾏身份认证，并要求⼀个访
问令牌。
（B）认证服务器确认⽆误后，向客户端提供访问令牌。
因为此授权模式⽤户直接向客户端注册，客户端以⾃⼰的
名义要求 "服务提供商" 提供服务，实际上不存在授权问
题，再加上实际环境中此授权⽅式利⽤较少，暂不表述。
漏洞点（攻击⾯）
漏洞点（攻击⾯）
在上述的认证流程中，不论哪种模式，都是为了从认证服
务器获取 access_token，⽤来访问资源服务器。⽽申请
access_token，需要在请求⾥添加⼏个必要参数。如下
所示：
client_id：表示客户端的 id(我是谁)。
response_type 或 grant_type：表示授权类型 (申请哪种
模式)
scope：表示申请的权限范围 (申请哪些权限，由授权服
务器定义)。
redirect_uri：表示重定向 URI(申请结果跳转⾄哪⼉)。
state：表示客户端的当前状态，可以指定任意值，认证
服务器会原封不动地返回这个值 (⾃定义信息希望服务端
原样返回)。
code：表示授权码，必选项。该码的有效期应该很短，
通常设为 10 分钟，客户端只能使⽤该码⼀次，否则会被
授权服务器拒绝。该码与客户端 ID 和重定向 URI，是⼀
⼀对应关系。
⽽关于 OAuth2.0 漏洞的挖掘也是围绕其中⼏个重要参
数点展开，⼤致分为以下⼏个⽅⾯：
1.OAuth 劫持
根据 OAuth 的认证流程, ⽤户授权凭证会由服务器转发
到 redirect_uri 对应的地址, 如果攻击者伪造
redirect_uri 为⾃⼰的地址, 然后诱导⽤户发送该请求, 之
后获取的凭证就会发送给攻击者伪造的回调地址. 攻击者
使⽤该凭证即可登录⽤户账号, 造成授权劫持。
第⼀种情况：回调 URL 未校验
如果回调 URL 没有进⾏校验，则⿊客可以直接修改回调
的 URL 为指定的任意 URL，即可以配合 CSRF 进⾏
token 骗取。
http://passport.xxxx.cn/oauth2/authorize?
response_type=code&redirect_uri=http://www.baidu.
com&client_id=10000&theme=coremail
此类问题类似于普通的 URL 跳转，案例演示略。