title:Double Patterns: A Usable Solution to Increase the Security of Android
Unlock Patterns
author:Timothy J. Forman and
Adam J. Aviv
Double Patterns: A Usable Solution to Increase
the Security of Android Unlock Patterns
Adam J. Aviv
Timothy J. Forman
U.S. Naval Academy
PI:EMAIL
The George Washington University
PI:EMAIL
ABSTRACT
Android unlock patterns are still commonly used, and roughly 25%
of the respondents to our study use a pattern when unlocking their
phone. Despite security issues, the design of the patterns have
remained unchanged. We propose Double Patterns (DPatts), a nat-
ural advancement on Android unlock patterns that maintains the
core design but instead of selecting a single pattern, a user selects
two patterns entered one-after-the-other super-imposed on the
same 3x3 grid. We evaluated DPatts for both security and usability
through an online study (n = 634) with three treatments: a control
a first pattern entry blocklist, and a blocklist for both patterns. We
find that in all settings, user chosen DPatts are more secure than
traditional patterns based on standard guessability metrics, more
similar to that of 4-/6-digit PINs, and even more difficult to guess for
a simulated attacker. Users express positive sentiments in qualita-
tive feedback, particularly those who currently (or previously) used
Android unlock patterns, and overall, participants found the DPatts
interface quite usable, with high recall retention and comparable
entry times to traditional patterns. In particular, current Android
pattern users, the target population for DPatts, reported SUS scores
in the 80th percentile and high perceptions of security and usability
in responses to open- and closed-questions. Based on these findings,
we would recommend adding DPatts as an advancement to Android
patterns, much like allowing for added PIN length.
CCS CONCEPTS
• Security and privacy→ Graphical / visual passwords; • Human-
centered computing → Human computer interaction (HCI);
Usability testing.
KEYWORDS
Double Pattern, Android Pattern, Mobile Authentication, Security,
Usability
ACM Reference Format:
Timothy J. Forman and Adam J. Aviv. 2020. Double Patterns: A Usable
Solution to Increase the Security of Android Unlock Patterns. In Annual
Computer Security Applications Conference (ACSAC2020), December 7–11,
2020, Austin, USA. ACM, New York, NY, USA, 15 pages. https://doi.org/10.
1145/3427228.3427252
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
ACSAC 2020, December 7–11, 2020, Austin, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8858-0/20/12...$15.00
https://doi.org/10.1145/3427228.3427252
1 INTRODUCTION
There are two primary, knowledge based authentication methods
for unlocking mobile devices: 4-/6-digit PINs and Android unlock
patterns. Prior work has shown (and is confirmed herein) that
patterns are used by about 25% of users [4, 16, 19]. Despite there
being 389,112 possible patterns (more than 38x more than 4-digit
PINs), it is known that users likely select from a much smaller
subset of patterns in easily predictable ways [4, 26], much more so
than how users select 4-/6-digit PINs [19, 29].
Unlike the shift from 4-digit to 6-digit PINs (or longer), there
has not been a significant change to the interface of Android pat-
terns since first launched on the Android T-Mobile G1 (or HTC
Dream) in 2008 as the first commercially available Android de-
vice1, where a pattern was the only available unlock authentication
option. There have been various proposals to improve patterns,
including providing user guided selection [12], rearrangement of
the contact points [25], strength meters [2, 23, 24], and expansion
to a 4x4 grid [4]. These proposals require either a departure from
the distinctly simple selection interface or additional interventions
that may frustrate users, driving them away from selecting their
preferred patterns. More natural expansions of patterns, such as
4x4 patterns, have unfortunately been shown to not increase se-
curity [4] against a throttled attacker making a limited number of
guesses.
To address these challenges, we offer a novel improvement to
Android patterns: Double Patterns (or DPatts), whereby a user selects
two sequential, superimposed patterns as their unlock authentica-
tion (see Figure 1). Utilizing an identical 3x3 grid, the user draws
their first pattern, lifts, and then draws their second pattern, with
both patterns being displayed at the same time. This provides an
increase in the visual complexities for users to select patterns and
a large increase in the total number of DPatts (151,407,759,432 op-
tions) as compared to traditional unlock patterns. The design of
DPatt takes advantage of the popular 3x3 interface and encourages
users to select more secure patterns through the natural increased
complexity of multiple patterns.
We conducted an online survey on Amazon Mechanical Turk
to assess the potential usability and security of DPatts, first in a
preliminary survey with n = 286 participants and then in a main
study with n = 634. In the course of the survey, participants both
selected a DPatt and answered questions about their experiences
and perceptions of DPatts as an alternative for Android patterns.
We considered three treatments for DPatts: a control treatment and
two blocklist enforced treatments. Using the preliminary survey
data, we developed two blocklists, one in which the first pattern of
a DPatt was blocklisted and must be re-selected before selecting the
1https://en.wikipedia.org/wiki/HTC_Dream (viewed on October 14, 2020)
219ACSAC 2020, December 7–11, 2020, Austin, USA
Timothy J. Forman and Adam J. Aviv
• The usability of DPatts is not degraded by requiring multiple
pattern entries, with per-attempt entry speeds comparable
to traditional pattern entry and high short-term recall rates.
• Participants reported usability as good and acceptable and
had a high perception of security regarding DPatts, which
would encourage adoption.
• Participants currently utilizing patterns, the target popula-
tion for DPatts, reported even higher positive sentiment for
DPatts, both in usability metrics and perceived security of
DPatt authentication.
Our results suggest that Double Patterns are an extremely viable
improvement to the traditional Android unlock pattern from both a
security and usability perspective, and that current Android pattern
users would be willing to adopt DPatts as a natural extension to
Android patterns.
Figure 1: Double Pattern Creation Process
second pattern, and the second blocklist blocked a set of common
DPatts.
We evaluated the security of the DPatts using guessability met-
rics and compared the results to the security of 4-/6-digit PINs
and traditional Patterns (without a blocklist). When the attacker is
throttled, or limited in the number of guesses, we find that the secu-
rity metrics of DPatts are more in-line with (but still weaker than)
4-/6-digit PINs. After 30 guesses, a perfect knowledge attacker [9]
would only guess 28% of DPatts compared to 35% of patterns, and
only 20% of 4-/6-digit PINs are guessed after 30 attempts. However,
when considering a simulated attacker that guesses an unknown set
of DPatts based on modeling from a sample set, DPatts outperform
both traditional patterns and 4-/6-digit PINs. After 30 guesses an
attacker would only guess 5.3% of DPatts compared to 23.6% of
patterns, 7.6% of 4-digit PINS, and 9.0% of 6-digit PINs. The addition
of either blocklist (first pattern or Double Pattern) also greatly im-
proved the security metrics for both a perfect knowledge (18% and
20% after 30 attempts, respectively) and simulated attacker (1.9%
and 0.9% after 30 attempts, respectively).
Participants recalled their selected DPatts at very high rates
(97% success after 1.3 attempts), with extremely comparable entry
speeds per attempt of 3.35s (on average across treatments). Prior
work suggests that traditional Android pattern entry takes 3.0s and
4-digit PINs take 4.7s [16]. Among the 25% of participants currently
using patterns as their method to unlock their device, they reported
System Usable Scale (SUS) scores of 78.27, placing it in the 80-84th
percentile range. Even participants who currently do not utilize
a pattern report good and acceptable SUS scores of 71.47, falling
in the 60-64th percentile range. This suggests that if deployed to
the target audience of current pattern users, they would be open to
moving towards Double Patterns from the traditional pattern.
This paper makes the following contributions:
• We propose a natural extension to Android unlock patterns,
Double Patterns (DPatts), where users must enter two super-
imposed patterns, in sequence, as their authentication.
• We show that DPatts significantly improve the security
of patterns using guessability metrics, for both a perfect-
knowledge and simulated attacker, and may be more secure
than 4-/6-digit PINs against simulated attackers.
2 DOUBLE PATTERNS
Double Patterns are built upon Android unlock patterns, which are a
knowledge-based authentication system, whereby a user must recall
a pre-selected “pattern” by connecting points on a 3x3 grid, without
lifting. For example, the left side of Figure 1 shows a traditional
pattern, which could have been entered by selecting the top-left
point and tracing downward, or selecting the bottom-middle point
and tracing upwards (two different patterns). A pattern must be
drawn such that at least four contact points are used, no point is
used more than once, and any unselected point cannot be avoided
or traced over without being previously selected. In total there are
389,112 possible patterns [7].
Double Patterns (or DPatts) are also designed to be a knowledge
based authentication system whereby a participant must recall two
previously selected Android patterns entered in sequence. Both
patterns in a DPatt are superimposed, allowing for more complex
visual shapes, and the patterns must also be entered in the exact
order to be authenticated. For example, Figure 1 the two inverted
‘L’ patterns combine to form a ‘T’ pattern as the DPatt.
The same restrictions on the individual Android patterns exist—
at least four points, a point cannot be used more than once, and
unselected points cannot be avoided—but after entry of the first
pattern, all contact points can be used in the second pattern, as if
it was drawn independently. The only restriction on the second
pattern is that it must be a different pattern than the first. There
are 151,407,759,432 total DPatts.
3 RELATED WORKS
There is much prior work on Android patterns. Andriotis et al. [3]
provided one of the first studies regarding user habits when select-
ing unlock patterns. Uellenbeck et. al [26] collected a sample of
Android patterns and analyzed the guessability of so called “defen-
sive” patterns chosen to purposely avoid guessing and “offensive”
patterns chosen to guess others’ patterns. Uellenbeck et. al found
that Android patterns, theoretically, were only as diverse as select-
ing a random 3-digit PIN. Aviv et al. [4] conducted an online study
asking participants to self-report patterns, confirming that user
selection of Android patterns are less diverse than other authenti-
cation choices. Loge et al. [18] investigated selection of patterns in
different settings, such as to secure a banking app or shopping cart
220Double Patterns: A Usable Solution to Increase the Security of Android Unlock Patterns
ACSAC 2020, December 7–11, 2020, Austin, USA
in addition to phone unlocking, finding, again, that the security
of Android patterns is challenged. A summary and comparison of
these results and others related to Android pattern is provided by
Aviv and Dürmuth [6].
Android patterns have also been the subject of attack. Aviv et al.
first demonstrated a smudge-based side channel attack [7], whereby
residues left on the smartphone screen reveal prior pattern entries,
and have since been shown to boost guessing performance of an
attacker [11]. Patterns have also been shown to be less resilient
to shoulder surfing [5, 20], as well as video-based reconstruction
attacks [30]. Even the onboard sensors of smartphones can reveal
information about pattern input [8].
Due to the insecurity and lack of diverse choices for Android
patterns, there have been many proposals for improvement. This in-
cluded modifications to avoid shoulder surfing [14, 27] and smudge
attacks [17, 22], which maintain the primary design of Patterns but
transform the input procedure. Other more radical proposals in-
clude rearranging the points of the pattern, such as into a ring [25].
Password meters are another common proposal for improving
pattern selection. Andriotis et al. [2], Sun et al. [24], and Song et
al. [23] each proposed visual based strength metrics and a display
meter to boost diversity of patterns selected. While meters may
be an effective means of changing behavior, Golla et al. demon-
strated that strength metrics used in these meters do not correlate
with security, and likely, just the presence of the meter changes
behavior [15].
Cho et al. proposed SysPal [12], which highlights certain con-
tact points that must be used as part of the pattern, restricting
users to select different patterns but also more diverse ones. von
Zezschwitz et al. suggested that background images can improve
pattern selection, if sufficiently complex [28]. Aviv et al. investi-
gated 4x4 patterns [4], finding that there are little benefits from
larger patterns.
Double patterns offers a new direction in improving Android
patterns as it is a natural and straightforward progression in design.
DPatts maintain the same popular interface and improve security
without direct interventions, such as highlighting points, providing
background images, or including password meters. Additionally,
the use of multiple patterns increases the burden on observation
attacks whereby shoulder surfing and video-based attacks would
be more challenging due to the added complexity.
In evaluating the performance of DPatts we also consider re-
search into other mobile unlock authentications, such as 4-/6-digit
PINs. Bonneau et al. studied user choice of 4-digit PINs in the credit-
card, chip-and-pin system [10], finding that many users select PINs
derived from dates. Wang et al. studied 4-/6-digit PINs derived from
leaked password data sets [29], finding subtle differences between
English speaking and Chinese speaking users’ selection of PINs,
and that the advantages of 6-digit PINs is minimal. Markert et al.
collected 4-/6-digit PINs in the context of smartphone unlock, fur-
ther demonstrating that there are minimal benefits of 6-digit PINs
and the current use of blocklists [19].
We compare DPatts to the security of 4-/6-digit PINs based on
data provided by Markert et al. as it is specifically primed for smart-
phone authentication. We use data from von Zezchwitz et al. [28],
Aviv et al. [4], Uellenbeck et al. [26], and Loge et al. [18] to compare
Table 1: Participant Device Utilization
Control BL-First BL-Both
Iris Recognition
Finger Print
Facial Recognition
No Biometric
Other Form
Pattern
4-Digit PIN
6-Digit PIN
PIN of Other Length
Alpha-Numeric
Not Listed
Prefer not say
Total
0
108
26
72
3
57
96
29
8