DEMEM is a solid, scalable, and low message exchange overhead intrusion detection 
model for MANET. DEMEM is proposed to overcome the challenges mentioned in 
3.3  through  the  following  three  main  features:  distributed  architecture,  intrusion 
detection layer, and evidence-driven message exchange technique.  
4.1   Distributed IDS Architecture 
DEMEM is developed to adapt to the distributed and cooperative nature of MANET. 
In DEMEM, each node acts as a detector to monitor its 1-hop neighbors by validating 
routing  messages  that  it  receives  for  intrusion  detection  purposes.  In  other  words, 
while a node sends a routing message, all of its neighbors validate the correctness of 
this message. As seen in Fig. 2, node A acts as a detector to monitor nodes B, C, and 
S  while  nodes  B,  C,  and  S  are  also  detectors  of  monitor  node  A’s  activities.  In 
addition to monitoring activities between 1-hop neighbors, 2-hop neighbors may have 
to exchange their observed information by tailored Intrusion Detection (ID) Messages 
to  gather  enough  evidence  for  detection  purposes.  Obviously,  different  MANET 
routing  protocols  require  different  ID  messages  and  exchange  these  ID  messages 
differently.  This  approach  eliminates  complicated 
topology  maintenance  and 
expensive  unreliable  promiscuous  monitoring  required  by  hierarchical  cooperative 
intrusion detection [10].  
4.2   Intrusion Detection Layer 
Many  works have been done on secured routing protocols in MANET [1,2,3,13] by 
modifying  protocols.  However,  it  takes  a  long  time  for  these  modified  protocols  to 
become mature in order to be accepted as standards by authorized organizations, such 
as IETF. Therefore, we propose an Intrusion Detection (ID) Layer concept that does 
not depend on any changes of protocols but achieves security goals. As seen in Fig. 2, 
the detector acts as an Intrusion Detection layer between the routing protocol and the 
IP  layer  within  a  node.  The  detector  intercepts  all  incoming  and  outgoing  routing 
messages  from  the  IP  layer  and  to  the  IP  layer.    Although  DEMEM  have  new 
proposed  ID  messages,  the  ID  layer  handles  these  ID  messages  so  that  the  routing 
layer  is  unaware  of  their  existence.  Therefore,  DEMEM  does  not  require  changing 
routing protocols but achieves the same protection as other secured protocols. 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
255 
C
S
ID Message 
for local 
neighbors 
B
A
Detectors 
validate routing 
messages from 
neighbors  
Detector acts as 
ID layer 
processing 
ingoing & 
outgoing 
routing 
messages 
Routing 
Outgoing 
Message 
Intrusion Detection 
ID Message
Incoming 
Message
Authentication 
IP
Fig. 2. Distributed detectors and Intrusion Detection layer in DEMEM 
integrates  cryptographic 
In  addition,  DEMEM  also 
techniques  (such  as 
TESLA[22])  residing  in  the  authentication  layer  between  the  IP  layer  and  the  ID 
layer. The authentication layer has two major tasks. First, the layer signs the sender’s 
address in outgoing messages. If the node is the message originator and the message 
will be forwarded by its neighbors, then the layer signs the whole message to protect 
message  integrity.  Second,  while  receiving  incoming  messages  (including  ID 
messages) from neighbors, the authentication layer authenticates the sender’s address. 
If the sender is not the originator, the layer authenticates the whole message to ensure 
message  integrity.  Thus,  the  authentication  layer  protects  the  integrity  of  forwarded 
messages and prevents impersonation. 
4.3   Evidence-Driven Message Exchange  
A  main  contribution  of  DEMEM  is  that  it  adds  ID  messages  to  assist  intrusion 
detection.  Sending ID  messages effectively and efficiently among detectors is  very 
critical,  because  message  overhead  introduced  by  ID  messages  must  be  low  in  a 
resource-limited MANET. In order to minimize ID message overhead, we propose an 
evidence-driven  approach  that  has  better  performance  than  the  periodic-update 
approach.  
Evidence is the critical message content of the protecting protocol to validate the 
correctness  of  protocol  messages.  For  example,  in  OLSR,  evidence  is  the  1-hop 
neighbor,  Multi-Point  Relay  (MPR)  and  MPR  selector.  In  AODV,  evidence  is  the 
sequence  number  and  hop  count.  New  Evidence  means  any  update  between  the 
current and the old evidence observed by a detector. For example, assume that node 
A’s  1-hop  neighbor  list  is  {B,  C}  at  time  t1.  At  time  t2,  node  A’s  neighbor  list 
becomes  {B,  C,  D}  so  that  node  A’s  new  evidence  at  time  t2  is  D.  In  conclusion, 
sending  New  Evidence  guarantees  each  detector’s  Evidence  is  up-to-date.  In 
DEMEM,  detectors  send  ID  messages  only  when  they  observe  or  require  new 
Evidence. 
256 
C.H. Tseng et al. 
Monitor 
Manager 
Routing Msg  
ID Msg 
Evidence 
Manager 
Validate    
Msg
Validation 
Manager 
New 
Evidence
Forwarding 
Manager 
Send ID 
Msg 
No 
Alarm 
Violation 
Detected
Response 
Manager 
Attack 
Recovery
Fig. 3. DEMEM Finite State Machine (FSM) within a detector 
Fig.  3  illustrates  how  this  event-driven  message  exchange  task  works  with  the 
detection task. DEMEM consists of the  five components, called ID  Managers, that 
are  present  at  every  node.  In  the  beginning,  the  Monitor  manager  intercepts 
incoming  and  outgoing  routing  messages  and  handles  ID  messages.  The  Evidence 
manager  records  Evidence  in  the  routing  and  ID  messages.  While  the  Evidence 
manager observes New Evidence from outgoing routing  messages,  the  Forwarding 
manager  sends ID messages to trigger or to deliver this observed New Evidence to 
nodes  who  require  it.  After  receiving  an  incoming  routing  message,  the  Evidence 
manager will pass this incoming message and the related Evidence to the Validation 
manager  to  validate  the  message’s  correctness  by  the  security  policies.  Once  the 
Validation  manager  detects  violations  of  security  policies,  the  Response  manager 
analyzes  the  violations  and  performs  proper  attack  recovery.  Finally,  the  task  goes 
back to the Monitor manager for the next message. 
We  have  implemented  DEMEM  in  OLSR  as  demonstrated  in  sections  5  and  6. 
Discussion on applying DEMEM to two popular reactive protocols, AODV and DSR, 
and to another famous proactive protocol, TBRPF, is presented in section 7. 
5   DEMEM in OLSR 
5.1   Routing Attack Methods in OLSR 
OLSR is a link-state, proactive routing protocol in MANET. OLSR utilizes periodical 
Hello and Topology Control (TC) messages to establish a complete network topology 
among nodes and reduces message flooding overhead with MPRs, a minimum subset 
of  1-hop  neighbors  connecting  all  2-hop  neighbors.  OLSR  provides  a  robust  and 
complete routing topology as well as tolerates message loss caused by mobility and 
noise such that OLSR has more complete and reliable routing data than others (such 
as reactive protocols) in MANET.  
In OLSR, the computation of routing tables depends on three critical fields in Hello 
and  TC  messages:  1-hop  neighbors  and  MPRs  in  Hello  message  as  well  as  MPR 
selectors  in  TC  messages.  A  node  can  send  three  types  of  basic  OLSR  messages: 
Hello,  initiated  TC,  and  forward  TC  messages.  Thus,  an  attacker  has  four  attack 
methods against OLSR routing:  
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
257 
1.  Forging 1-hop neighbors in an initiated Hello; 
2.  Forging MPRs in an initiated Hello;  
3.  Forging MPR selectors in an initiated TC; and  
4.  Forging MPR selectors in a forwarded TC.  
The first three attack methods belong to the first type of attack model described in 
3.2,  and  the  fourth  one  belongs  to  the  second  type  of  attack  model.  These  attack 
methods can be used to add or to delete links in OLSR topology. A single attacker can 
utilize these attack methods to launch various novel and sophisticated routing attacks 
against  OLSR  severely,  such  as  man-in-the-middle  attacks  and  denial  of  service 
attacks.  
In section 5.3, we demonstrate how to apply DEMEM in OLSR to precisely detect 
and recover attacks using the first three attack methods. The example scenario in 6.1 
illustrates an example attack and detecting mechanism in detail. The ongoing work in 
7.1 can prevent attacks using the last attack method. 
5.2   Specification-Based Intrusion Detection 
In  MANET,  nodes  sharing  partial  topology  information  and  overlapped  topology 
information  of  their  routing  packets  must  be  consistent.  Although  it  is  difficult  to 
detect attacks launched by forging initiated routing packets, contents of these forged 
packets  will  not  be  consistent  with  genuine  routing  packets  that  have  overlapped 
routing  information.  Therefore,  the  detector  can  detect  these  forged  packets  by 
validating  consistency  among  related  routing  messages.  The  specification-based 
intrusion detection  model [14] describes four constraints (see Fig. 4) to validate the 
correctness of Hello and TC messages in OLSR.  
First constraint     (C1)  Neighbors in Hello messages must be reciprocal 
Second constraint (C2)  MPRs must reach all 2-hop neighbors 
Third constraint   (C3)  MPR selectors must match corresponding MPRs 
Fourth constraint  (C4)  Fidelity of forwarded TC messages must be maintained 
Fig. 4. Four detection constraints in the specification-based intrusion detection model 
[14] shows that this model can detect attacks using the four attack methods in 5.1 
against  OLSR.  However,  the  model  in  [14]  assumes  that  detectors  can  collect 
sufficient  routing-related  information  in  real  time  to  validate  consistency  among 
related  routing  packets  using  the  four  constraints.  DEMEM  helps  [14]  resolve  this 
assumption  with  a  practical  message  exchange  technique.  In  5.3,  we  show  how  to 
apply DEMEM in OLSR with three tailored ID messages for OLSR.  
5.3   Implementing DEMEM in OLSR 
To make the intrusion detection in OLSR [14] practical and effective, three Intrusion 
Detection  (ID)  messages  are  tailored  for  OLSR:  ID-Evidence,  ID-Forward,  and  ID-
258 
C.H. Tseng et al. 
Request  messages.  We  also  present  the  mechanisms  handling  three  ID  messages, 
especially within the Evidence Manager and the Forwarding Manager. Four practical 
assumptions make DEMEM realizable in OLSR. 
ID-Forward  
_ID-Evidence
B 
A
S
Fig. 5. Three ID Messages of DEMEM Implementation in OLSR 
ID-Request 
ID  Message.  ID-Evidence  is  designed  for  each  pair  of  2-hop-away  detectors  to 
exchange  their  evidence  (1-hop  neighbors,  and  MPRs)  as  the  data  supply  to  the 
Validation  Manager.  ID-Forward  is  designed  for  a  detector  to  request  its  selected 
neighbors, called forwarders, to broadcast its ID-Evidence message. An ID-Forward 
message  is  sent  only  when  the  detector  observes  new  evidence  (new  1-hop 
neighbors, MPR, or 2-hop neighbors) in its outgoing Hello message. ID-Request is 
designed to tolerate message loss of ID-Evidence that will cause false positives and 
negatives due to insufficient detection evidence supplied to the Validation Manager. 
We present the detailed design of these three ID messages in section 5.4, 5.5, and 
5.6 respectively. 
DEMEM FSM for OLSR. In OLSR, the Evidence Manager handles Hello, TC and 
ID-Evidence  messages  and  records  three  types  of  evidence  in  these  messages.  The 
Forwarding  Manager  sends  three  types  of  ID  messages  in  three  conditions, 
respectively.  The  Validation  Manager  validates  incoming  Hello  and  TC  messages 
based on the three constraints and related evidence from the Evidence Manager. If the 
Validation Manager detects message inconsistencies that violate these constraints and 
the lasting time of inconsistencies exceeds the alarm thresholds of the constraints, the 
Response Manager will perform proper attack recovery. 
Evidence Manager. Evidence in OLSR is 1-hop neighbors and MPRs of a node. The 
Evidence Manger gathers evidence from three groups (nodes, 1-hop neighbors, and 
2-hop  neighbors)  from  three  types  of  messages  (incoming  Hello,  outgoing  Hello, 
and  incoming  ID-Evidence  message).  These  groups  of  evidence  are  the  essential 
routing information for the  Validation Manager to validate incoming Hello and TC 
messages. 
Forwarding  Manager.  Three  conditions  trigger  the  Forwarding  Manager  to  send 
messages.  First, if the Validation Manager does not have sufficient evidence from an 
expected  ID-Evidence  message,  it  assumes  that  the  message  is  lost.  The  Validation 
Manager then triggers the Forwarding manager to broadcast an ID-Request message 
to  request  the  lost  ID-Evidence  message.  Second,  while  the  Evidence  Manager 
observes  new  evidence  in  an  outgoing  Hello  message,  the  Forwarding  Manager 
broadcasts  an  ID-Forward  message.  Third,  if  the  Forwarding  Manager  receives  an 
ID-Forward or ID-Request message and observes that it is a forwarder selected by its 
neighbors, then it broadcasts an ID-Evidence message for the requesting node. 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
259 
Monitor
Manger
Update Ev 
of 1-hop  
Update Ev 
of 2-hop 
Update Ev 
of Self 
Evidence 
Manger 
Ingoing
Hello & TC
ID-Evidence 
Outgoing 
Hello & TC 
ID-Forward 
ID-Request 
Validate    
Hello & TC
Validation 
Manager 
Violation 
Detected  
Long 
Evidence 
Absence
New
Evidence
Send ID- 
Request
Send ID- 
Forward
Send ID-
Evidence 
Forwarding 
Manger
Response 
Manager 
Attack 
Recovery  
Fig. 6. DEMEM Implementation FSM within a detector 
Four Practical Assumptions Based on Existing Works: 
1.  Each node has one network interface, and OLSR is the routing protocol. Multiple 
Interface Declaration (MID) and Host and Network Association (HNA) messages 
are not used here. 
2.  The content of forwarded routing messages and node identity of all routing and 
ID messages are authenticated by a cryptographic technique. Thus, Constraint 4 
in  5.2  used  to  detect  attack  method  4  in  5.1  is  covered  here.  Because  of  lower 
computation  requirements  than  public  key  techniques,  DEMEM  assumes  that 
TESLA  has  been  integrated  as  an  authentication  layer.  We  discuss  this 
integration work in detail in 7.1.  
3.  No  intentionally  packet  dropping.  Several  reputable  works  [8][9]  have  been 
developed  for  detecting  normal  unicast  data  packet  drop  attacks  as  well  as  for 
broadcasting  routing  messages.  We  assume  that  detectors  have  been  utilized  to 
detect  intentionally  packet  dropping.  DEMEM  can  also  tolerate  normal  packet 
loss or drop. 
4.  No  colluding  attackers.  Colluding  attacks  can  create  virtual  links  to  perform 
worm-hole  attacks.  Several  works  [25]  address  this  type  of  attack.  Also,  added 
virtual links do not affect the existence of other normal routing links, so DEMEM 
does not cover this issue. 
5.4   ID-Evidence Message 
DEMEM utilizes ID-Evidence message in OLSR to provide the Validation Manager 
with  sufficient,  up-to-date  evidence.  While  the  Validation  Manager  uses  three 
constraints to validate OLSR messages coming from its 1-hop neighbors, it may also 