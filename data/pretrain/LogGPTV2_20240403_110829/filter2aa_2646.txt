About me 
o What I am not? 
•
Formally Educated 
•
Developer 
•
Hacker 
o What I am? 
•
Interested 
How I am about to spend your time? 
o What is GoH? 
o What's behind it? 
o Not so wet T-Shirt contest 
o Node.js potential risks 
o Takeaways 
Game of Hacks – An idea is born 
using System; 
using System.Security.Cryptography; 
class Program 
{ 
static void Main() 
{ 
using (RNGCryptoServiceProvider rng = new 
RNGCryptoServiceProvider()) 
{ 
// Buffer storage. 
byte[] data = new byte[4]; 
// Ten iterations. 
for (int i = 0; i < 10; i++) 
{ 
// Fill buffer. 
rng.GetBytes(data); 
// Convert to int 32. 
int value = BitConverter.ToInt32(data, 0); 
Console.WriteLine(value); 
} 
// other Random Generation method 
Random otherRandomGenerator = new Random(); 
double otherRandomNumber = 
otherRandomGenerator.NextDouble(); 
Spot The  
Vulnerability 
CISO Concerns – Education and Awareness 
(https://www.owasp.org/images/2/28/Owasp-ciso-report-2013-1.0.pdf 
1+1=? 
Launched on August  
More than 100,000 games were played since 
What was behind GoH? 
Honeypot 
o We assumed the game would be attacked 
o We might as well learn from it 
o Vulnerabilities were left exposed and patched along the 
way 
Let’s take a look at the game 
GoH Architecture 
Server 
Client 
Single Thread 
Events handler 
Code.DanYork.Com 
Event Driven 
12 
Question 
Answers 
Code Snippet 
60-Second 
Timer 
Question # 
Score 
Difficulty 
Level 
Game Entities 
o Quiz questions 
o Answers 
o Score 
o Timer 
Get your Browsers ready! 
Checkmarx@Defcon 23 
Turn your mobile devices ON! 
Go to: www.kahoot.it 
Answered Question 
o Initially users initiated  app.sendAnswers multiple 
times, until they got “Correct answer” response.  
o This allowed malicious users to systematically locate 
the correct answer – and to gain points over and over 
for the same question. 
o Solutions 
•
“Question Already Answered” flag added 
Timer 
o GoH Version 1   
•
Timer handled by client 
•
User forced to go to next question when time ends 
•
Client sends to server Answer + Time spent 
o GoH 2 
•
Time is now computed at the server with 
minor traffic influence 
o So what? 
•
Players stopped timer by modifying JS code 
Timer 
o What else? 
More Node.js points to remember 
Architecture and MongoDB 
db.products.insert( { item: "card", qty : 15 } ) 
db.products.insert( { name: “elephant", size: 1700 } )  
db.products.insert 
db.products.find  
db.products.find()    
- Find all of them 
db.products.find( { qty: 15 })  
- Find based on equality 
db.products.find( { qty: { $gt: 25 } } ) - Find based on criteria  
Data is inserted and stored as JSON  
Queries as described using JSON 
var obj; 
obj.qty=15; 
db.products.find(obj)     
name = req.query.username; 
pass = req.query.password; 
db.users.find({username: name, password: pass}); 
… 
If exists …. 
Security – User Supplied Data 
o Can you spot the vulnerabilities in the code? 
o Fix: 
20 
WRONG! 
name = req.query.username; 
pass = req.query.password; 
db.users.find({username: name, password: pass}); 
Security – User Supplied Data 
21 
o What if we use the following query: 
db.users.find({username: {$gt, “a”}, 
            password : {$gt, “a”}}); 
JSON-base SQL Injection 
o Node.JS, being a JSON based language, can accept JSON 
values for the .find method: 
o A user can bypass it by sending 
22 
http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html  
http:///server/page?user[$gt]=a&pass[$gt]=a 
db.users.find({username: username, password: password}); 
DEMO 
http://localhost:49090/?user=hi&pass=bye 
JSON Based SQL Injection 
o You can use the following: 
o Then  
db.users.find({username: username}); 
bcrypt.compare(candidatePassword, password, cb); 
WRONG! 
JSON Based SQLi 
o This can lead to Regular Expression Denial of Service through 
the {“username”: {“$regex”: “……..}} 
db.users.find({username: username}); 
Re-Dos Demo 
http://localhost:49090/?user=admin&pass[$regex]=^(a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|
a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a
|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|
a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a
|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|
a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a
|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|
a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a|a
|a|a|a|a|a|a|a|a|a)(d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d
|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d
|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d
|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d
|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d
|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|
d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d|d)$ 
Some Key Takeaways 
Gamification of education 
• Knowledge is key to deliver secure code 
• Students (of all ages) absorb and retain information better 
• Anytime you have a chance to make learning a fun experience 
you should do it 
Using code 
• Always validate the input length, structure and permitted 
characters 
• Each coding language has its own pitfalls 
• Research and learn a language before you use it publicly. 
• Remember - Node.js is highly sensitive to CPU-intensive tasks 
Thank You 
Questions? 
PI:EMAIL 
@aashbel 
Amit Ashbel