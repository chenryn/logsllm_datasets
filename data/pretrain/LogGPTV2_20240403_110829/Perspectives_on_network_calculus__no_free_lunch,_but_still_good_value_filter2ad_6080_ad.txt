penalty is due to the need to obtain a bounded error function
for S2BB; note that, if δ was zero, then the obtained error
function would be unbounded.
3For some r.v. X and x, θ ∈ R+, the Chernoﬀ bound is
P(X > x) ≤ MX (θ)e−θx.
4.4 Quasi-Determinism in the S3BB Model
So far we have only commented on the applicability of the
SBB and S2BB models. The reason is that, as we demon-
strate in this section, the S3BB model is quasi-deterministic
for the class of stationary and ergodic arrival processes. For-
mally, the quasi-determinism means that the corresponding
violation probabilities, set through the error function ε(σ),
can only take the extreme values, i.e.,
ε(σ) ∈ {0, 1} ∀σ .
(25)
The immediate consequence is that the resulting SNC formu-
lation from [26] is essentially quasi-deterministic, and does
not capture statistical multiplexing gain. In fact, multiplex-
ing quasi-deterministic S3BB ﬂows yields quasi-deterministic
aggregates, by using the Superposition Property from [26];
for the precise meaning of ‘statistical multiplexing gain’ we
refer to Section 5.
We next prove the quasi-determinism claim for station-
ary and ergodic processes, and then construct two rather
contrived arrival processes for which the S3BB model is not
necessarily quasi-deterministic.
4.4.1 Stationary and Ergodic Processes
First we give some deﬁnitions (see Breiman [7], pp. 104-
120). Consider a random process X = (X1, X2, . . . ) deﬁned
on some joint probability space (Ω, F , P); the Borel σ-ﬁeld of
the subsets of R is denoted by B. We denote I = {1, 2, . . .},
and the product spaces RI = {x = (x1, x2, . . . ) : xi ∈ R}
and BI = {B = (B1, B2, . . . ) : Bi ∈ B}.
By deﬁnition, the process X is (strongly) stationary if
P(cid:16)Xi1 ≤ x1, Xi2 ≤ x2, . . . , Xin ≤ xn(cid:17)
= P(cid:16)Xi1+k ≤ x1, Xi2+k ≤ x2, . . . , Xin+k ≤ xn(cid:17) ,
for all n, k ∈ N∗, 0 ≤ i1 ≤ i2 ≤ ··· ≤ in, and x1, x2, . . . , xn.
In other words, stationarity means that the distribution of
any sequence (Xi1 , Xi2 , . . . , Xin ) is invariant under shift.
Further, the notion of ergodicity requires the introduction
of an explicit shift operator T : RI → RI , deﬁned as
T (x1, x2, . . . ) = (x2, x3, . . . ) ,
for all sequences x = (x1, x2, . . . ). The stationarity of X
implies that T is measure preserving, i.e., by deﬁnition
P (X ∈ B) = P (T X ∈ B) ∀B ∈ BI .
For B ∈ B, the event {X ∈ B} is said to be invariant if
{X ∈ B} = {T X ∈ B} P-a.s. ,
i.e., the events {X ∈ B} and {T X ∈ B} diﬀer by a set of
probability zero. In other words, the event {X ∈ B} is in-
variant if its incidence does not depend (a.s.) on any ﬁnite
preﬁx of X. Finally, the process X is ergodic if any invariant
event has probability 0 or 1.
The following lemma will be used to prove the claim of
quasi-determinism.
Lemma 1. Consider a stationary and ergodic process X =
(X1, X2, . . . ). Then
P(cid:16) max{X1, X2, . . .} > σ(cid:17) ∈ {0, 1} ∀σ .
The lemma implies that max {X1, X2, . . .} = K a.s., where
K is a constant or K = ∞.
318Proof. Fix σ and let B = (−∞, σ]I . We shall prove that
{X ∈ B} = (cid:26)max
Xi ≤ σ(cid:27)
i≥1
is an invariant event, which is equivalent to showing that
P ({X ∈ B} ∆ {T X ∈ B}) = 0 ,
(26)
where ‘∆’ denotes the symmetric diﬀerence and {T X ∈ B} =
{maxi≥2 Xi ≤ σ}.
Let us ﬁrst note that
P (max{X1, X2, . . .} > σ)
= lim
n→∞
= lim
n→∞
P (max {X1, X2, . . . Xn} > σ)
P (max {X2, X3, . . . , Xn+1} > σ)
= P (max{X2, X3, . . .} > σ) .
4.4.2 Non-Stationary or Non-Ergodic Processes
Here we give two examples of arrival processes for which
the S3BB model is not necessarily quasi-deterministic. Such
processes have to be non-stationary or non-ergodic.
For an example of a non-stationary process consider
a1 = r + X, an = r ∀n ≥ 2 ,
where X is some r.v. satisfying E[X] > 0. Note that the
cumulative process A(n) = rn+X ∀n does not have station-
ary increments because E[a1] 6= E[a2]. Moreover, for σ > 0,
the probability
P(cid:16) max
0≤k≤n≤∞ {A(k, n) − r(n − k)} > σ(cid:17) = P(cid:16) [X]+ > σ(cid:17)
(27)
can be diﬀerent from zero and one.
For an example of a non-ergodic process consider
The second and last lines follow from the monotone conver-
gence theorem (if Bn is a non-decreasing sequence of events,
then P (limn Bn) = limn P (Bn)). The third line follows from
the stationarity of Xn.
Expanding the symmetric diﬀerence from Eq. (26) into
the union of two events, we have for the ﬁrst one
P(cid:18)(cid:26)max
i≥1
Xi ≤ σ(cid:27) ∩(cid:26)max
i≥2
Xi > σ(cid:27)(cid:19) = P (∅) = 0 .
For the second one we use the inclusion-exclusion formula:
P(cid:18)(cid:26)max
i≥1
Xi > σ(cid:27) ∩(cid:26)max
i≥2
Xi ≤ σ(cid:27)(cid:19)
= P(cid:18)max
i≥1
Xi > σ(cid:19) + P(cid:18)max
i≥2
Xi ≤ σ(cid:19) − 1
= 0 .
In the last line we applied Eq. (27). Collecting terms implies
that Eq. (26) holds and thus the event {X ∈ B} is invariant.
Because X is ergodic, it follows that P (X ∈ B) ∈ {0, 1},
which completes the proof.
2
We are now ready to demonstrate the quasi-determinism
claim. Let the S3BB model from Section 4 for an arrival
process A(n), some envelope G(n), and error function ε(σ).
Assume that an := A(n − 1, n) is stationary and ergodic.
It then follows that for any m ∈ N∗, the block process
(cid:16)X (m)
comprising blocks of m consecutive instances
n (cid:17)n≥1
of an and deﬁned as
X (m)
n
:= A(n − 1, n + m − 1) − G(m) ∀n ≥ 1
is also stationary and ergodic (cf. [7], Propositions 6.6 and
6.31). According to Lemma 1, there exists K (m)’s such that
maxnX (m)
1
, X (m)
2
, . . .o = K (m) a.s. ,
for all m ≥ 1. Taking K = maxm K (m) we obtain that
max
0≤k≤n≤∞ {A(k, n) − G(n − k)} = K a.s. ,
thus concluding that
ε(σ) ∈ {0, 1} ∀σ
in the deﬁnition of the S3BB model.4
4We remark that S3BB is not necessarily quasi-deterministic
under the additional assumptions of restricting the ‘max’
operator to a ﬁnite interval 0 ≤ k ≤ n and letting ε(σ)
depend on the right margin n (see Deﬁnition 3.2.1 in [28]).
an = X ∀n ≥ 1 ,
for some r.v. X. The cumulative process A(n) = nX is
stationary but non-ergodic, as there are many realizations
of the process for which the time averages are diﬀerent. To
construct a non-quasi-deterministic S3BB model, one can
take G(n) = rn and X be any Bernoulli r.v. with E[X] = r
but P(X 6= r) > 0.
What the two examples have in common is that the sample-
paths are completely determined from some time scale on.
In particular, in the second example, the sample-paths are
completely determined once time starts. We speculate that
more compounded examples would also account for random-
ness but for a ﬁnite time scale only, in order to avoid the
limiting argument in the preceding quasi-determinism proof.
Due to this rather unnatural restricted capability in captur-
ing randomness, the relevance of such models is unclear.
5. STATISTICAL MULTIPLEXING GAIN
In this section we justify the raison d’ˆetre of SNC; con-
cretely, we present a result which rigorously reveals the mag-
nitude of the statistical multiplexing gain, as a scaling law,
achieved by SNC in the single-node case. Then we discuss
on the existence of multiplexing gain in the multi-node case,
and present numerical results.
5.1 Single-Node Case
Statistical multiplexing is an essential property of packet-
switched networks, which are based on the principle of re-
source sharing. It basically says that the number of resources
needed to support service for (say N ) ﬂows is much smaller
than N times the number of resources needed to support
service for a single ﬂow. The raison d’ˆetre of SNC is to cap-
ture the gap between these two quantities, i.e., the statisti-
cal multiplexing gain, while closely reproducing the elegant
methodology of DNC.
To illustrate the magnitude of the statistical multiplexing
gain achieved with SNC we consider a node of capacity C
serving N ﬂows Aj(n), each modelled with the envelope
Aj (k, n) ≤ r(n − k) + b ∀ k, n ,
(28)
where r > 0 is a rate and b ≥ r is a burst size. Consider now
the design question Q1: “How large should C be such that
the delay is smaller than some value, normalized to 1? ” To
answer, it is convenient to derive a backlog bound. Assum-
ing the stability condition ρ := N r
C ≤ 1, the bound follows
319directly from Eq. (21), where G(k) = N rk:
Bn ≤ N b ∀n .
Because of the delay normalization to 1, which implies that
C and the backlog scale identically, we conclude that the re-
quired capacity scales as C = O(N ) in the burst b. Although
this conclusion is based on a tight bound (recall the discus-
sion from Section 4.2), the intuition is that a much smaller
capacity would be suﬃcient under broad statistical assump-
tions on the ﬂows Aj(n), and as long as some violations of
the delay constraint are tolerable.
Let us additionally assume that Aj(n)’s are stationary and
statistically independent, and enforce the (tolerable) con-
straint P (delay > 1) ≤ ε, where ε is some small value, e.g.,
ε = 10−3. With these assumptions, we can use a stochastic
bound on the aggregate A(n) := PN
P (A(n) > N rn + σ) ≤ e− σ2
2N b2 ∀σ ≥ 0 .
j=1 Aj(n), i.e., [38]
(29)
A backlog bound can then be computed as in Eq. (19):
P (Bn > σ) ≤ P(cid:18) max
0≤k σ(cid:19)
P (A(k) > N rk + (C − N r)k + σ)
≤ Xk≥1
≤ Z ∞
0
2 (cid:16) (C
e− 1
−
N r)s+σ
√N b
(cid:17)2
ds .
In the last line we used the bound from Eq. (29) and bounded
a sum of non-increasing terms by an integral. With the
change of variable u = (C−N r)s+σ
the last term becomes
√N b
√N b
C − N r Z ∞
σ
√N b
e− u2
2 du ≤
b2
r (ρ−1 − 1) σ
e− σ2
2N b2 .
Here we used Gordon’s inequality for the standard normal
2 [24]. Setting the
last term to ε yields
density function, i.e., R ∞
σ2 = 2N b2(cid:18)log
x e− u2
x e− x2
2 du ≤ 1
εr (ρ−1 − 1) − log σ(cid:19) .
b2
From here it follows that C = O(cid:16)√N(cid:17) in the burst b (recall
that C scales identically with the backlog σ); note, however,
that C = O(N ) in the rate r in order to satisfy the stability
condition. The O(cid:16)√N(cid:17) law can also be deduced from a
result from [4], which is however obtained using an approxi-
mative application of the Central Limit Theorem, and hence
not rigorous. Several other probabilistic bounds on multi-
plexed deterministically regulated arrivals (as in Eq. (28))
[47, 50]; however, they do not
exist in the literature, e.g.,
appear to easily lend themselves to the O(cid:16)√N(cid:17) law.
The diﬀerence in the scaling laws C = O(N ) (obtained
with DNC) vs. C = O(cid:16)√N(cid:17) (obtained with SNC) re-
achieved with SNC as Ω(cid:16)√N(cid:17).
veals thus the magnitude of the statistical multiplexing gain
5.2 Multi-Node Case
Lastly, we discuss on an unconventional type of statistical
multiplexing which, to the best of our knowledge, has not
been raised previously. Consider the tandem network from
A1
A
D1
AM
C
...
DM
D
C
Figure 2: A tandem network with cross traﬃc
Figure 2 in which a ﬂow A crosses M nodes in series; at each
node j = 1, . . . , M along the end-to-end (e2e) path, A shares
the local resource (the capacity C) with a local cross ﬂow Aj.
All ﬂows are stationary and statistically independent. This
type of resource sharing looks similar to the conventional
one, except that the ‘resource’ is now a distributed one (i.e.,
all the capacities) and the cross ﬂows do not share the same
resource with each other. The arising question concerns the
existence of a distributed multiplexing gain.
To answer, we apply and compare DNC and SNC for
the following scenario: A is bounded by the envelope from
Eq. (28) with rate r and burst b, and Aj’s are bounded by
the same envelope but with rate N r and burst N b (N will be
used for tuning conventional (per-node) multiplexing gain).
We enforce the stability condition C ≥ (N + 1)r and assume
that ﬂow A gets lower priority at each node. We ask the
design question Q2: “How large should C be such that the
e2e delay of A is smaller than 1? ”.
To deal with the additional complexities due to schedul-
ing and multi-node (i.e., the system’s ‘noise’), we run the
network calculus engine, i.e., transform the network system
into a ‘somewhat looking’ linear system. The ﬁrst step is
to derive the service processes at each node, i.e., Sj (n) =
[(C − N r)n− N b]+, and then apply the convolution formula
from Eq. (13) yielding S(n) = h(cid:16)n − NM b
(C − N r).
From the transformed system, consisting of the input A and
the service process S, the deterministic e2e delay bound is