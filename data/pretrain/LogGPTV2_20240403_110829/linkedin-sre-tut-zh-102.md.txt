# 扩展到数据中心之外
> 原文：
## 缓存静态资产
稍微扩展一下现有的缓存解决方案，我们就可以实现内容交付网络(cdn)。cdn 是离用户最近的缓存层。网页中提供的大量资源可能不会每小时甚至每天都发生变化。在这种情况下，我们希望在 CDN 级别缓存这些内容，以减轻我们的负担。cdn 不仅通过消除服务静态/带宽密集型资源的负担来帮助减少我们服务器上的负载，它们还通过存在点(pop)让我们更接近我们的用户。CDNs 还允许我们进行地理负载平衡，以防我们在世界各地有多个数据中心，并希望尽可能从最近的数据中心(DC)提供服务。
**更进一步**
通过将应用缓存和分发到更简单的服务中，我们解决了扩展到 50000 个用户的问题。但是，我们的用户可能分布在不同的地理位置，并且可能与我们的数据中心或云区域的距离不同。用户体验的一致性很重要，否则我们会将远离我们位置的用户排除在外，潜在地消除了大量的潜在用户。然而，将数据中心分布在世界各地，甚至分布在世界上的几个地方，并不是不切实际的。这就是 cdn 和 pop 出现的原因。
## 存在点
CDN POPs 是地理上分布的数据中心，旨在靠近用户。pop 通过从离用户最近的位置传送内容来减少往返时间。pop 通常可能没有所有的内容，但是有缓存静态资产的缓存服务器，并从应用实际驻留的[源服务器](https://www.cloudflare.com/en-in/learning/cdn/glossary/origin-server/)获取剩余的内容。它们的主要功能是通过使内容更接近网站的访问者来减少往返时间。pop 还可以将流量路由到可能的多个来源 DC 之一。这样，可以利用 pop 来增加弹性和负载平衡。
现在，随着我们的图像共享应用日益流行，让我们假设并发用户已经达到 100，000。我们已经建立了另一个数据中心，预计流量将会增加。现在，我们需要能够以可靠的方式将服务路由到这两个数据中心，同时保留在两个数据中心之一出现问题时回退到单个数据中心的能力。这就是粘性路由发挥作用的地方。
## 粘性路由
当用户发送请求时，如果我们有多个 DC，或者在 DC 中有一个特定的服务器，我们可能希望从 DC 为特定用户的请求提供服务。我们还可能希望由一个数据中心来满足特定 POP 的所有请求。粘性路由帮助我们做到了这一点。它可能只是将所有用户锁定到特定的 DC，或者将特定的用户锁定到特定的服务器。这通常是从 POP 完成的，所以一旦用户进入到达我们的服务器，我们可以将他们路由到最近的 DC。
## 地理 DNS
当用户打开应用时，用户可以被定向到多个全球分布的 pop 之一。这可以通过使用[地理域名](https://jameshfisher.com/2017/02/08/how-does-geodns-work/)来完成，简单来说，根据发出 DNS 请求的用户的位置，给出不同的 IP 地址(按地理位置分布)。GeoDNS 是将用户分配到不同位置的第一步-它不是 100%准确的，并且通常利用 IP 地址分配信息来猜测用户的位置。然而，对于> 90%的用户来说，它已经足够好了。在这之后，我们可以有一个粘性路由服务，它为每个用户分配一个特定的 DC，我们可以用它为这个用户分配一个 DC，并设置一个 cookie。当用户下次访问时，可以在 POP 中读取 cookie，以决定用户的流量必须被定向到哪个数据中心。
拥有多个 DC 并利用粘性路由不仅具有扩展优势，还增加了服务的弹性，尽管代价是增加了复杂性。
让我们考虑另一个用例，用户为自己上传新的个人资料图片。如果我们有多个不实时同步的数据中心或 pop，并非所有的数据中心或 pop 都有更新的图片。在这种情况下，在更新传播到所有地区之前，将该用户绑定到特定的 DC/地区是有意义的。粘性路由将使我们能够做到这一点。
## 参考
1.  [cdn](https://www.cloudflare.com/en-in/learning/cdn/what-is-a-cdn/)
2.  LinkedIn 的 TrafficShift [博客](https://engineering.linkedin.com/blog/2017/05/trafficshift--load-testing-at-scale)谈论粘性路由