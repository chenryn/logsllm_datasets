common e-commerce platforms (e.g., Magento, X-cart,
Ubercart, and Zen-cart [17, 24, 27, 28]), ﬁnding ubiqui-
tous use of such a counter, typically using an SQL auto-
update ﬁeld, but sometimes embodied explicitly in code.
Given use of such a global sequential counter, the
difference between the numbers associated with orders
placed at two points in time reﬂects the total number of
orders placed during the intervening time period. Thus,
from any pair of purchases we can extract a measure-
ment of the total transaction volume for the interval of
time between them, even though we cannot directly wit-
ness those intervening transactions. Figure 1 illustrates
the methodology using a concrete example. This obser-
vation is similar in ﬂavor to the analysis used in blind/idle
port scanning (there the sequential increment of the IP
identiﬁcation ﬁeld allows inference of the presence of
intervening transmissions) [2]. It then appears plausible
that this same purchase-pair approach might work across
a broad range of spam-advertised programs, a possibility
that we explore more thoroughly next.
3.2 Data collection
To evaluate this approach requires that we ﬁrst identify
which sites advertise which afﬁliate programs, and then
place repeated purchases from each. We describe how we
gathered each of these data sets in this section.
Program data
In prior work, we developed a URL crawler to follow
the embedded links contained in real-time feeds of email
spam (provided by a broad range of third-party anti-
spam partners) [16]. The crawler traverses any redirec-
tion pages and then fetches and renders the resulting page
in a live browser. We further developed a set of “page
classiﬁers” that identify the type of good being adver-
tised by analyzing the site content, and, in most cases,
the particular afﬁliate program being promoted. We de-
veloped speciﬁc classiﬁers for over 20 of the top phar-
maceutical programs (comprising virtually all sites ad-
vertised in pharmaceutical spam), along with the four
most aggressively spam-advertised counterfeit software
programs.
After placing multiple test orders with nine of these
pharmaceutical programs, we identiﬁed seven with
strictly incrementing order numbers.4 Five of these (Rx–
4Of the two programs that we did not select, ZedCash used several
different strictly increasing order number subspaces that would compli-
Promotion, Pharmacy Express (aka Mailien), GlavMed,
Online Pharmacy and EvaPharmacy) together consti-
tuted two-thirds of all sites advertised in the roughly
350 million distinct pharmaceutical spam URLs we ob-
served over three months in late 2010. We found the
sixth, 33drugs (aka DrugRevenue), and seventh, 4RX,
less prevalent in email spam URLs, but they appear to
be well advertised via search engine optimization (SEO)
techniques [15]. We did a similar analysis of counterfeit
software programs, ﬁnding three (Royal Software, Eu-
roSoft, and SoftSales) with the appropriate order-number
signature. While counterfeit software is less prevalent in
total spam volume, these three programs constitute over
97% of such sites advertised to our spam collection appa-
ratus during the same 3-month period. For the remainder
of this paper we focus exclusively on these ten programs,
although it appears plausible that the same technique will
prove applicable to many smaller programs, and also to
programs in other such markets (e.g., gambling, fake an-
tivirus, adult).
Order data
We collected order data in two manners: actively via our
own purchases and opportunistically, based on the pur-
chases of others. First and foremost are our own pur-
chases, which we conducted in two phases. The ﬁrst
phase arose during a previous study, during which we
executed a small number of test purchases from numer-
ous afﬁliate programs in January and November of 2010
using retail Visa gift cards. Of these, 46 targeted the ten
programs under study in this paper. The second phase
(comprising the bulk of our active measurements) re-
ﬂects a regimen of purchases made over three weeks in
January and February 2011 focused speciﬁcally on the
ten programs we identiﬁed above.
When placing these orders, we used multiple distinct
URLs leading to each program (as identiﬁed by our page
classiﬁers). The goal of this procedure was to maximize
the likelihood of using distinct afﬁliates to place pur-
chases in order to provide an opportunity to determine
whether different afﬁliates of a given program make use
of different order-processing services.
Successfully placing orders had its own set of op-
erational challenges [9]. Except where noted, we per-
formed all of our purchases using prepaid Visa credit
cards provided to us in partnership with a specialty is-
suer, and funded to cover the full amount of each trans-
action. We used a distinct card for each purchase and
went to considerable lengths to emulate real customers.
We used valid names and associated residential shipping
addresses, placed orders from a range of geographically
cate our analysis and decrease accuracy, while World Pharmacy order
numbers appeared to be the concatenation of a small value with the
current Unix timestamp, which would thwart our analysis altogether.
Figure 1: How the purchase pair technique works. In this hypothetical situation, two measurement purchases are made that bracket
some number of intervening purchases made by real customers. Because order number allocation is implemented by a serialized
sequential increment, the difference in the order numbers between measurement purchases, N = 23, corresponds to the total
number of orders processed by the afﬁliate program in the intervening time.
proximate IP addresses, and provided a unique email ad-
dress for each order. We used ﬁve contact phone numbers
for order conﬁrmation, three from Google Voice and two
via prepaid cell phones, with all inbound calls routed to
the prepaid cell phones. In a few instances we found it
necessary to place orders from IP addresses closely ge-
olocated to the vicinity of the billing address for a given
card, as the fraud check process for one afﬁliate program
(EuroSoft) was sensitive to this feature. Another program
(Royal Software) would only accept one order per IP ad-
dress, requiring IP address diversity as well.
In total we placed 156 such orders. We scheduled them
both periodically over a three-week period as well as
in patterns designed to help elucidate more detail about
transaction volume and to test for internal consistency, as
discussed below.
Finally, in addition to the raw data from our own
purchase records, we were able to capture several pur-
chase order numbers via forum scraping. This opportu-
nity arose because afﬁliate programs typically sponsor
online forums that establish a community among their
afﬁliates and provide a channel for distributing opera-
tional information (e.g., changes in software or name
servers), sharing experiences (e.g., which registrars will
tolerate domains used to host pharmaceutical stores), and
to raise complaints or questions. One forum in particular,
for the GlavMed program, included an extended “com-
plaint” thread in which individual afﬁliates complained
about orders that had not yet cleared payment process-
ing (important to them since afﬁliates are only paid for
each settled transaction that they deliver). These afﬁliates
chose to document their complaints by listing the order
number they were waiting for, which we determined was
in precisely the same format and numeric range as the
order numbers presented to purchasers. By mining this
forum we obtained 122 numbers for past orders, includ-
ing orders dating back to 2008.
Afﬁliate Program
Rx–Promotion
Pharmacy Express
GlavMed
Online Pharmacy
EvaPharmacy
33drugs
4RX
EuroSoft
Royal Software
SoftSales
Phase 1
(1/10 – 11/10)
7
3
12
5
7
4
1
3
2
2
Phase 2
(1/11 – 2/11)
27
9
14
16
16
16
13
25
9
11
Table 1: Active orders placed to sites of each afﬁliate program
in the two different time phases of our study. In addition, we op-
portunistically gathered 122 orders for GlavMed covering the
period between 2/08 and 1/11.
Note that this data contains an innate time bias since
the date of complaint inevitably came a while later than
the time of purchase (unlike our own purchases). For this
reason, we identify opportunistically gathered points dis-
tinctly when analyzing the data. We will see below that
the bias proves to be relatively minor.
We summarize the total data set in Table 1. It includes
order numbers from 202 active purchases and 122 oppor-
tunistically gathered data points.
3.3 Consistency
While our initial observations of monotonicity are quite
suggestive, we need to consider other possible explana-
tions and confounding factors as well. Here we evaluate
the data for internal consistency—the degree to which
the data appears best explained by the sequential update
hypothesis rather than other plausible explanations. At
the end of the paper we also consider the issue of ex-
ternal consistency using “ground truth” revenue data for
one program.
Sequential update
The fundamental premise underlying our purchase-pair
technique is that order numbers increment sequentially
for each attempted order. The monotone sequences that
we observe accord with this hypothesis, but could arise
from other mechanisms. Alternate interpretations in-
clude that updates are monotone but not sequential (e.g.,
incrementing the order number by a small, varying num-
ber for each order) or that order numbers are derived
from timestamps (i.e., that each order number is just
a normalized representation of the time of purchase,
and does not reﬂect the number of distinct purchase at-
tempts).
To test these hypotheses, we executed back-to-back
orders (i.e., within 5–10 seconds of one another) for
each of the programs under study. We performed this
measurement at least twice for all programs (except-
ing EvaPharmacy, which temporarily stopped operation
during our study). For eight of the programs, every
measurement pair produced a sequential increment. The
GlavMed program also produced sequential increments,
but we observed one measurement for which the order
number incremented by two, likely simply due to an in-
tervening order out of our control. Finally, we observed
no sequential updates for Rx–Promotion even with re-
peated back-to-back purchase attempts. However, upon
further examination of 35 purchases, we noticed that or-
der numbers for this program are always odd; for what-
ever reason, the Rx–Promotion order processing system
increments the order number by two for each order at-
tempt. Adjusting for this deviation, our experiments ﬁnd
that on ﬁner time scales, every afﬁliate program be-
haves consistently with the sequential update hypothe-
sis.
We need however to consider an alternate hypothesis
for this same behavior: that order numbers reﬂect nor-
malized representations of timestamps, with each order
implicitly serialized by the time at which it is received.
This “clock” model does not appear plausible for ﬁne-
grained time scales. Our purchases made several seconds
apart received sequential order numbers, which would re-
quire use of a clock that advances at a somewhat peculiar
rate—slowly enough to risk separate orders receiving the
same number and violating the uniqueness property.
Figure 2: Order numbers (y-axis) associated with each afﬁliate
program versus the time of attempted purchase (x-axis).
We test for whether the order numbers in our data ﬁt
with a clock model as follows. First, we consider the
large-scale behavior of order numbers as seen across the
different afﬁliate programs. Figure 2 plots for each pro-
gram the order number associated with a purchase at-
tempt made at a given time. We plot each of the 10 af-
ﬁliate programs with a separate symbol (and varying
shades, though we reuse a few for programs whose num-
bers are far apart). In addition, we plot with black points
the order numbers revealed in the GlavMed discussion
forum.
Three basic points stand out from the plot. First, all
of the programs use order numbers distinct from the oth-
ers. (We veriﬁed that neither of those closest together,
33drugs and Royal Software, nor Pharmacy Express and
SoftSales, overlap.) Thus, it is not the case that separate
afﬁliate programs share uniﬁed order processing.
Second, the programs nearly always exhibit mono-
tonicity even across large time scales, ruling out the pos-
sibility that some programs occasionally reset their coun-
ters. (We discuss the outliers that manifest in the plot be-
low.)
Third, the GlavMed forum data is consistent with our
own active purchases from GlavMed. In addition, the
data for both has a clear downward concavity starting
in 2009—inconsistent with use of clock-driven batches,
but consistent with the sequential update hypothesis. As-
suming that the data indeed reﬂects purchase activity, the
downward concavity also indicates that the program has
been losing customers, a ﬁnding consistent with main-
stream news stories [13].
We lack such extensive data for the other programs,
but can still assess their possible agreement with use
A possible reﬁnement to the clock model would be
for a program to periodically allocate a block of order
numbers to be used for the next T seconds (e.g., for
T = 3,600), and after that time period elapses, advanc-
ing to the next available block. The use of such a hybrid
approach would enable us to analyze purchasing activity
over ﬁne-grained time scales. But it would also tend to-
wards misleading over-inﬂation of such activity on larger
time scales, since we would be comparing values gener-
ated across gaps.
2008.52009.02009.52010.02010.52011.00500000100000015000002000000YearOrder Numberllllllllllllllllllllllllllllllllllllllllllllllllllllllll33drugs4rxeurosoftevaglavmedglavmed−forumonlinepharmexroyalrx−promotionsoftsalesrange as well.) In addition, we do not discern any tempo-
ral patterns in the required errors, such as would be the
case if the least-squares ﬁt was perturbed by an outlier.
Finally, if we extend the analysis out to November 2010
(not shown), we ﬁnd that the required error grows, some-
times to 100s of hours, indicating that the discrepancy
does not result from a large batch size such as T = 1 day.
Given this evidence, we reject the Null Hypothesis that
the order numbers derive from a clock-driven mecha-
nism. We do however ﬁnd the data consistent with the
sequential update hypothesis, and so proceed from this
point on the presumption that indeed the order numbers
grow sequentially with each new purchase attempt.
Payment independence
We placed most of our orders using cards underwritten
by Visa. We selected Visa because it is the dominant pay-
ment method used by these afﬁliate programs (few accept
MasterCard, and fewer still process American Express).
However, it is conceivable that programs allocate distinct
order number ranges for each distinct type of payment. If
so, then our Visa-based orders would only witness a sub-
set of the order numbers, leading us to underestimate the
total volume of purchase transactions. To test this ques-
tion, we acquired several prepaid MasterCard cards and
placed orders at those programs that accept MasterCard
(doing so excludes Rx–Promotion, GlavMed, 4RX and
Online Pharmacy). In each case, we found that Visa pur-
chases made directly before and after a MasterCard pur-
chase produced order numbers that precisely bracketed
the MasterCard order numbers as well.
Outliers