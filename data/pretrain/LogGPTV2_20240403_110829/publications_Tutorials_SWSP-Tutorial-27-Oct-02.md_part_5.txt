142
BPEL4WS vs. DAML-S
Comparison
BPEL4WS relates closely to the ServiceModel (Process
Model) component of DAML-S.
DAML-S defines preconditions and effects
This enables the representation of side effects of Web services.
It also enables a better reasoning about the composition of
services.
DAML-S classes provide a richer representation of services
Classes allow reasoning draw properties from inheritance and
other relationships to other DAML-S classes.
143
BPEL4WS vs. DAML-S
Comparison
The DAML-S ServiceProfile and ServiceModel provide
sufficient information to enable
The automated discovery, composition, and execution based on
well-defined descriptions of a service's inputs, outputs,
preconditions, effects, and process model.
BPEL4WS has complicated semantics for determining
whether an activity actually happens in a block.
BPEL4WS defines mechanisms for catching and handling
faults and for setting compensation handlers.
BPEL4WS includes WS-Coordination and WS-Transaction to
provide a context for pre-defined transactional semantics.
144
References
http://www.daml.org/services/
http://www-106.ibm.com/developerworks/webservices/library/ws-bpel/
http://www.daml.org/2001/03/daml+oil-index
http://www-106.ibm.com/developerworks/webservices/library/ws-coor/
http://www-106.ibm.com/developerworks/webservices/library/ws-transpec/
http://www.ksl.stanford.edu/projects/DAML/Webservices/DAMLS-BPEL.html
145
The Composition Process
Definitions
Traditional workflow tasks and Web service tasks
already associated with a process and therefore
with a realization are called grounded tasks (GT).
When the designer wishes to add a Web service to
an Web process, a service template (ST) is
created, indicating his intention to extend the
functionality of the process.
146
The composition process
GT and ST Examples
Integration
Outputs
Inputs Name + Description+ QoS Model
Date
GT Duration
Outputs
City
Inputs
Outputs Inputs
Get Conference
Start Information Itinerary GT End
ST
Inputs Outputs
User Name Hotel Reservation
GT
Replace ST
Address
with SO
Get User
Information
Use ST to Semantic
discover SO Integration
Discovery
SO
SO
Inputs SO Outputs
147
The Composition Process
Steps
Once a ST is created, it is sent to the Web service
discovery module
The ST is employed to find an appropriate Web
service.
The discovery module returns a set of service
object (SO) references that are ranked according
to their degree of similarity with the service
template.
148
The Composition Process
Steps
SOs can be ranked according to a syntactical,
operational, or semantic perspective.
The designer then selects the most appropriate
SO to accomplish his objectives.
Additionally, a set of data mapping is
presented to the designer suggesting a
possible interconnection among the newly
added task interfaces and the grounded task
interfaces.
149
ST Structure
A ST has five sections that need
to be specified:
The name of the Web service to be
Name + Description+ QoS Model
found,
Its textual description,
Its operational metrics,
 Outputs Inputs
The set of outputs parameters from the ST
grounded tasks that will be connected to
SO inputs, and
The set of input parameters from the
grounded tasks that a SO will be
connected to.
150
SO Structure
A SO structure has also five sections:
Its name,
Its textual description,
Its operational metrics,
The set of outputs parameters, and
A set of input parameters.
151
The Match Function
The Web service discovery and integration
process is carried out by a key operation:
The match function.
The matching step is dedicated to finding
correspondences between a service template (ST,
i.e., a query) and a service object (SO).
152
The Match Function
0.76 SO
SO SO2 SO
0.14 SO1 2 SO3
0.31 0.68 1 3 Match Function
0.98
0.43
0.34 0.74 0.99
Conference Registry
Hotel Reservation
Service
f(ST, SO ) f(ST, SO ) f(ST, SO ) Service
1 ?2 3
Date
Date
Duration
Duration
City
City
Conference
GGeett
Itinerary
Itinerary
CCoonnffeerreennccee
SSTT B
Start A End
IInnffoorrmmaattiioonn
Travel HHootteell
Reservation RReesseerrvvaattiioonn
User Name
User Name
Employee ID
Address
Address
GGeett UUsseerr
IInnffoorrmmaattiioonn
Web Process 153
The Match Function
The match function uses syntactic,
operational, and semantic information as a
way to increase the precision of the match.
There types of similarity are evaluated:
Syntactic Similarity
Operational Similarity
Semantic Similarity
154
The Match Function
Syntactic Similarity
The syntactic similarity of a ST and a SO is based
on their service names and service descriptions.
Additional fields can be compared.
At this stage, only syntactic information is taken
into account, since the fields are simply expressed
using a set of words.
No tags or concepts are attached to the words
used.
155
The Match Function
Syntactic Similarity
Similarity ?
Name, A Name,
Name, X Name,
D De es sc cr rip ipti to ion n, , B D De es sc cr rip ipti to ion n, ,
Y
… ….
… C ….
Web Service Web Service
ωSynNS(ST.sn,SO.sn) +ωSynDS(ST.sd,SO.sd)
SynSimilarty(ST,SO) = 1 2 ∈[0..1],
ω +ω
1 2
and ω,ω ∈[0..1]
1 2
156
The Match Function
Operational Similarity
Syntactic and semantic information allows for
the selection of Web services based on their
functionality*, but without accounting for
operational metrics.
The operational similarity of a ST and a SO is
calculated based on the metrics specified in
their QoS model.
The purpose is to determine how close two
Web services are, based on their operational
capabilities.
157
*We recognize that additional research is necessary to specify the functionally of Web services
The Match Function
Operational Similarity
Similarity ?
QoS QoS
A
X
B Bu uy y B P Pu urc rch ha as se e
Y
C
Web Service Web Service
OpSimilarity(ST,SO) =
3 QoSdimD(ST,SO,time)*QoSdimD(ST,SO,cost)*QoSdimD(ST,SO,reliability)
158
The Match Function
Operational Similarity
OpSimilarity(ST,SO) =
3 QoSdimD(ST,SO,time)*QoSdimD(ST,SO,cost)*QoSdimD(ST,SO,reliability)
QoSdimD(ST,SO,dim) = 3 dcd (ST,SO,dim)*dcd (ST,SO,dim)*dcd (ST,SO,dim)
min avg max
|min(SO.qos(dim))−min(ST.qos(dim))|
dcd (ST,SO,dim) =1−
min
min(ST.qos(dim))
159
The Match Function
Semantic Similarity
Purely syntactical methods that treat terms in
isolation from their contexts.
It is insufficient since they deal with syntactic but not with
semantic correspondences
Users may express the same concept in different ways.
Therefore, we rely on semantic information to
evaluate the similarity of concepts that define ST
and SO interfaces.
This evaluation will be used to calculate their
degree of integration.
160
The Match Function
Semantic Similarity
When comparing an output with an input two
main cases can occur:
 The concepts are defined with the same Ontology
(Ω(O) = Ω(I))
 The concepts are defined in different Ontologies
(Ω(O) ≠ Ω(I))
161
The Match Function
Semantic Similarity (Ω(O) = Ω(I))
When comparing concepts defined with the
same ontology four distinct scenarios need
to be considered:
a) the concepts are the same (O=I)
b) the concept I subsumes concept O (O>I)
c) the concept O subsumes concept I (O I
SemS'(O,I) =  | p(O) |
, O  Ω(I))
ST (output) SO (input)
1,2,3,4,5
DateTimeontology Time ontology
DateTime Temporal-Entity
e)
{TheDate, TheTime}
5
Time Time
Time-Point {absolute_time}
TheTime TheDate
a) Interval Domain
{gHour, gMinute, gSecond} {gYear, gMonth, gDay} 1
b) {year, month, day} Date Time {hour, minute, second}
TTyyppee PPrrooppeerrttyy NNaammee
2 3
SShhoorrtt {{ggHHoouurr,, ggMMiinnuuttee,, ggSSeeccoonndd,, ggYYeeaarr,, ggMMoonntthh,, ggDDaayy}} Calendar-Date Event
IInntteeggeerr {{mmoonntthh,, ddaayy,, hhoouurr,, mmiinnuuttee,, sseeccoonndd}} c) {dayOftheWeek, monthOftheYear}
LLoonngg {{aabbssoolluuttee__ttiimmee,, yyeeaarr}} 4
Scientific-Event {millisecond}
SSttrriinngg {{ddaayyOOfftthheeWWeeeekk,, mmoonntthhOOfftthheeYYeeaarr}}
d)
166
The Match Function
Semantic Similarity (Ω(O) ≠ Ω(I))
S(o,i) =
 3 SemDS(d(o),d(i))*SynS(n(o),n(i))*SemRS(r(o),r(i)), o and i are primitive types
SemDS(o,i), o and i are concept classes
f (o,i), otherwise
 1, or = ir
1, or = integer,ir = string
2/3, or = long,ir = integer
SemRS(or,ir) =
1/3, or = double,ir = integer
1, or = integer,ir = long
 0, otherwise
167
Web Services
Integration
The degree of integration of a Web service is evaluated using
semantic information.
For each interface to integrate we construct a bipartite graph
with a bipartition b(O, I).
Each edge has a weight (semantic similarity).
We then compute the optimal matching*.
B B
R
b(O, I) b(O, I) A
M S
A X Y Z F A X B Y P Z F
N T
C
U
C D C D
*Bondy and Murty 1976 168
System Architecture
Web Server
Registry
SSeerrvviiccee NNaammee UURRII IInnppuutt OOuuttppuutt ……
Workflow Management System
SO DDAAMMLL--SS
t
1
ST
t t t t
CClliieenntt a 2 b a
Register Search Engine
t
n
Search
Parse DAML-S Discovery Service
DDAAMMLL--SS
Store DAML-S
Registry Advertise
file
Service
SSeerrvviiccee
Unadvertise
Service Name
169
Discovery
Example of a Query
170
Discovery and Integration
Query Results
171
What’s next?
✓
We have found the a set of Web services.
✓
We have composed a process.
Question?
Does the process meet operational requirements?
Maybe or maybe not !!!
Solution
End-to-End Process Analysis
172
Performance Analysis
Performance evaluation of Web services can help
implementers understand the behavior of the activities in a
composed process
Web services performance evaluation techniques
Time Analysis
Load Analysis
Process Execution Monitoring
173
Performance Analysis (contd.)
Difficulties in Conducting Performance Analysis Tests
For conducting performance analysis tests, we require the
Web services to be managed by the composer
If the services involved are real world services (e.g., Flight
Booking Service), then performance analysis by conducting
real tests is not feasible
To overcome these problems, Simulation could be used as an
alternative technique to do performance estimation
174
Web Services
Discovery, Integration, and Composition
Questions?
175
References
Berners-Lee, T. (2001). Keynote presentation on web services and the future of the web. Software
Development Expo 2001 Visionary Keynote,
http://www.technetcast.com/tnc_play_stream.html?stream_id=616.
Bussler, C. (1998). Workflow Instance Scheduling with Project Management Tools. 9th Workshop on
Database and Expert Systems Applications DEXA'98, Vienna, Austria, IEEE Computer Society
Press. pp. 753-758.
Fabio Casati, Ming-Chien Shan and D. Georgakopoulos (2001). "E-Services - Guest editorial." The
VLDB Journal 10(1): 1.
Fensel, D. and C. Bussler (2002). The Web Service Modeling Framework. Vrije Universiteit
Amsterdam (VU) and Oracle Corporation, http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf.
Kashyap, V. and A. Sheth (1996). "Schematic and Semantic Similarities between Database Objects: A
Context-based Approach." Very Large Data Bases (VLDB) Journal 5(4): 276-304.
http://lsdis.cs.uga.edu/lib/download/KS95b.pdf
Kochut, K. J., A. P. Sheth and J. A. Miller (1999). "ORBWork: A CORBA-Based Fully Distributed,
Scalable and Dynamic Workflow Enactment Service for METEOR," Large Scale Distributed
Information Systems Lab, Department of Computer Science, University of Georgia, Athens, GA.
Miller, J. A., J. S. Cardoso and G. Silver (2002). Using Simulation to Facilitate Effective Workflow
Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego,
California. pp. 177-181.
176
References
Miller, J. A., R. Nair, Z. Zhang and H. Zhao (1997). JSIM: A Java-Based Simulation and Animation
Environment. Proceedings of the 30th Annual Simulation Symposium, Atlanta, GA. pp. 786-793.
Miller, J. A., D. Palaniswami, A. P. Sheth, K. J. Kochut and H. Singh (1998). "WebWork: METEOR2's
Web-based Workflow Management System." Journal of Intelligence Information Management
Systems: Integrating Artificial Intelligence and Database Technologies (JIIS) 10(2): 185-215.
Miller, J. A., A. F. Seila and X. Xiang (2000). "The JSIM Web-Based Simulation Environment." Future
Generation Computer Systems: Special Issue on Web-Based Modeling and Simulation 17(2): 119-
133.
Paolucci, M., T. Kawamura, T. R. Payne and K. Sycara (2002). Semantic Matching of Web Services
Capabilities. Proceedings of the 1st International Semantic Web Conference (ISWC2002), Sardinia,
Italia.
Rodríguez, A. and M. Egenhofer (2002). "Determining Semantic Similarity Among Entity Classes from
Different Ontologies." IEEE Transactions on Knowledge and Data Engineering (in press).
Shegalov, G., M. Gillmann and G. Weikum (2001). "XML-enabled workflow management for e-services
across heterogeneous platforms." The VLDB Journal 10(1): 91-103.
Sycara, K., J. Lu, M. Klusch and S. Widoff (1999). Matchmaking Among Heterogeneous Agents on the
Internet. Proceedings AAAI Spring Symposium on Intelligent Agents in Cyberspace, Stanford, USA.
Uschold, M. and M. Gruninger (1996). "Ontologies: Principles, methods and applications." Knowledge
Engineering Review 11(2): 93-155.
W3C RDF Home Page. http://www.w3.org/RDF/
177
Process and
Quality of Service
Jorge Cardoso1, Christoph Bussler2, Amit Sheth1, 4, Dieter Fensel3
1LSDIS Lab, Computer Science, University of Georgia
2Oracle Corporation
3 Universität Innsbruck
4 Semagix, Inc
QoS
Introduction
Organizations operating in modern markets, such as
e-commerce activities, require QoS management.
QoS management is indispensable for organizations
QoS management is indispensable for organizations
striving to achieve a higher degree of