uncovered a long-standing undocumented practice among some
registrars when dealing with expired nameserver domains.
Nearly 66% of these unresolvable .biz nameservers (118,905)
have the substring "DROPTHISHOST" followed by a random unique
string (indicating a generated GUID) in their FQDN. Very few of
these nameserver domains have ever been registered, placing the
domains served by the nameservers at risk of hijacking. Examining
the history of such domains revealed a pattern: the change in their
NS records to a unique "DROPTHISHOST" nameserver happens
after the previous nameservers in the NS records expire.6
The naming, scale, and longevity of this pattern suggested sys-
tematic behavior. We reached out to the .biz registry and a large
registrar to understand our findings. The registry was unaware of
the extent of the issue because they had no visibility into it—these
nameservers are not actually registered in .biz, and hence .biz
does not have any records for them in its registry database. They
just appear as names in NS records in the databases of other TLDs.
5We examined unresolvable nameservers among the individual gTLDs in the ngTLDs
group and no particular gTLD stood out.
6As an example, see the current and past nameservers of a test domain at https:
//dns.coffee/domains/ORPHAN-FINDER.COM.
The registrar solved the mystery. For decades registrars have
used an undocumented practice to clean up expired nameserver
domains, a practice developed in response to a situation created
by requirements of the EPP specification. A registrar cannot delete
the record for a nameserver domain that expires if there are other
records (e.g., domains) in the same TLD that refer to a host object
for that domain (Section 2.2). However, by crafting a nameserver
hostname in another TLD, and updating the host object record to use
this “sacrificial” nameserver hostname instead — in effect updating
the NS record of all domains referring to the original nameserver to
use the new sacrificial nameserver host in a different superordinate
domain — the registrar can then garbage collect the original expired
nameserver object (RFC 5731 Section 3.2.2 [10]). Domains pointing
to the sacrificial nameserver become lame delegated, but domain
owners can always change the NS records to use a valid nameserver
again if they choose. Anecdotally, it appears registrars chose .biz
because it was a new gTLD at the time.
There are a few potential options to solve the problem going
forward. The first option is to create sacrificial nameserver domains
under a “sink” domain that the registrar controls. Some registrars
already use this option. However, this option leaves the registrar
responsible for answering queries for lame delegated domains, and
for operating the “sink” domain. Another option would rely on
the AS112 project empty.as112.arpa [1], which established a
distributed anycast service that DNS operators could use to sink
DNS traffic relating to parts of the global namespace under their
control. Doing so would not require coordination among zones,
and would ensure that such nameserver domains would never be
registered by another party. To minimize query latency, responses
could return NXDOMAIN with a long TTL. But this project relies on
volunteers willing to donate resources to operate an AS112 anycast
server. More concerning, a malicious actor could set up their own
AS112 server and hijack queries intended for the AS112 server.
More recently, however, ICANN’s Security and Stability Advisory
Committee (SSAC) has recommended that ICANN reserve a private-
use TLD that might offer a useful path forward [15] to resolving
this issue.
Unresolved Issues: Prevalence, Persistence, and Perils of Lame Delegations
IMC ’20, October 27–29, 2020, Virtual Event, USA
Figure 2: Fraction of domains with lame delegations for at
most X days.
Figure 3: Pre-life lame delegations (blue) due to dependency
on nameservers that are not yet unresolvable (red), because
the nameserver domain or associated glue is not yet active.
The registrar we talked with was also surprised at the extent
of the current situation; indeed, our findings motivated a change
in their operational practice. However, cleaning up the existing
DROPTHISHOST and similar sacrificial nameservers is more chal-
lenging. Given the restrictions in EPP that prevent external records
from being modified (Section 3.2.5 of RFC 5732 [11]), purging these
records will require coordination among registrars whose domains
point to such nameservers and the registrars who created them.
We plan to continue working with the registrar and registry com-
munities to find a viable alternative approach to renaming expired
nameservers as well as cleaning up the existing records.
5.4 Duration of lame delegations
How long do lame delegations persist? Figure 2 shows the fraction
of domains with lame delegations to pre/in/post-life unresolvable
nameservers for at most X days. Domains that are lame as a result
of in-life lame nameservers are lame for the shortest time: nearly
50% of the affected domains are lame delegated for less than a
week. These lame delegations suggest intermittent causes such as
misconfigurations that are discovered relatively quickly. The mode
at five days reflects an event in November 2011 where cwgsh.com
and all of the nameservers under it became unresolvable after the
domain cwgsh.com expired, causing nearly 60 thousand domains
to have lame delegations.
Both pre-life and post-life unresolvable periods of nameservers
have durations substantially longer than in-life unresolvable pe-
riods. For pre-life periods, the inflection at 29 days is due to a
misconfiguration of nic.tel, and the last inflection corresponds
to an issue with cwgsh.org, which had domains pointing to it for
289 days before it was registered (Section 5.5).
The distribution of post-life unresolvable periods has the longest
tail, reflecting intentional use of lame delegations to park domains.
Some domains are lame for up to 3,000 days, nearly the timeframe of
our data set. Parking domains for long durations is a risk since the
nameserver domain can mistakenly be allowed to expire, exposing
them to hijacks (Section 5.5.1).
Figure 4: In-life lame delegations due to nameservers that be-
come unresolvable (red), often due to temporary expiration
of nameserver domain or misconfiguration of glue.
Figure 5: Post-life lame delegations (blue) due to name-
servers that are no longer or were never resolvable (red), typ-
ically due to permanent expiration of a nameserver domain
or typo of a nameserver.
101102103Number of Days with Lame Delegation0.00.10.20.30.40.50.60.70.80.91.0Fraction of Domains1 week1 month1 year2 yearsPre-Life CDFIn-Life CDFPost-Life CDF06/1106/1206/1306/1406/1506/1606/1706/1806/19Month103104105Lame Delegation Count H1 M1 H2 H - Hijacking Risk M - MisconfigurationLame Delegation DomainsUnresolvable Nameservers06/1106/1206/1306/1406/1506/1606/1706/1806/19Month104105Lame Delegation Count M2 M3 H3 P1 M - Misconfiguration H - Hijacking Risk P - ParkingLame Delegation DomainsUnresolvable Nameservers06/1106/1206/1306/1406/1506/1606/1706/1806/19Month104105Lame Delegation Count H4 P2 H - Hijacking Risk P - ParkingLame Delegation DomainsUnresolvable NameserversIMC ’20, October 27–29, 2020, Virtual Event, USA
Akiwate, Jonker, Sommese, Foster, Voelker, Savage, and Claffy
5.5 Lame delegations over time
The duration of our zone data set allowed us to analyze long-term
trends in lame delegations caused by unresolvable nameservers.
We observed trends, discovered prominent events, and considered
associated risks. For pre-life, in-life, and post-life, Figures 3—5 show
the number of unresolvable nameservers causing lame delegations,
and the number of domains affected by them, over time.
The pre-life timeseries (Figure 3) shows a downward trend in
this kind of unresolved nameserver. Over the last few years, signif-
icantly fewer nameservers are named in NS records before those
nameservers are resolvable. Yet the number of domains affected
has increased substantially. The contrast indicates that the practice
of adding nameservers in NS records before they are resolvable is
on the rise, but concentrated on fewer nameservers. The sudden
increase in concentration (H2) is a result of a single typo causing
roughly 20,000 domains to be lame delegated.
The in-life timeseries (Figure 4) shows a generally stable baseline
number of unresolvable in-life nameservers through 2014, and a
slight decreasing trend since then. The most common cause of
in-life periods is mismanagement, e.g., failure to renew, deleting
required glue records.
The post-life timeseries (Figure 5) shows increasing trends in
the number of post-life unresolvable nameservers and the number
of domains affected by them. The steady increase could reflect the
increasing use of unresolvable nameservers for parked domains, or
for domains that have expired but have yet to be released.
These timeseries also show spikes in the number of unresolv-
able nameservers and and their associated lame delegated domains.
These spikes correspond to significant events that caused many
domains to become lame delegated. In the rest of this section, we
study these events to highlight major causes of lame delegation
and associated risks.
5.5.1 Hijacking Risk. Lame delegations can pose a risk to domain
owners since attackers can take advantage of expired nameserver
domains or typos to hijack domain resolutions. Consider the events
labeled “Hijacking Risk” in Figures 3—5. In May 2011 (H1 in Fig-
ure 3) roughly 29,000 domains pointed to three unresolvable name-
servers. These lame delegations were a result of three nameservers
created by the Conficker Working Group (CWG) to use for sink-
holed and preemptively registered domains used by Conficker [23].
However, these nameserver domains expired and someone else
acquired them, thus controlling resolution of the domains using
those nameservers [5]. Further, in May 2015 (H3 in Figure 4) the
cwgsh nameserver registrations expired again.
In December 2016 (H4 in Figure 5) nearly 100,000 domains sud-
denly become lame when their nameserver’s domain expired. Specif-
ically, the domains using nameservers ns[1,2].oigjaeiug.xyz
become unresolvable when the registered domain oigjaeiug.xyz
expired. Surprisingly, domains continued to point to these unresolv-
able nameservers for five more months, until May 2017. Further,
the domain oigjaeiug.xyz was available for registration at the
end of this period, posing a hijacking risk: an attacker registering
that domain name could immediately have become authoritative
for domains that pointed to it in this period.
Finally, in December 2018 (H2 in Figure 3) the appearance of
roughly 20,000 lame delegated domains was due to the use of
the unregistered nameserver ns5.dsndun.net, which is a typo
on the intended ns5.dnsdun.com. The domain dsndun.net was
registered six months later, but the historical zone files reveal
that ns5.dsndun.net did not resolve to the same addresses as
ns5.dnsdun.net. In this case, whoever registered dsndun.net
hijacked resolutions for nearly 20,000 domains for six months be-
fore the original domain owner removed the typoed nameserver
from its list of authoritative nameservers.
Quantifying the Hijacking Risk: To make this risk concrete,
we quantified the hijacking opportunity, i.e., the potential to gain
some degree of DNS resolution control over currently lame dele-
gated domains. Our zone file data showed that as of January 2020,
there were 70,605 nameservers under 48,185 unique registered do-
mains used by 151,422 lame delegated domains. Of these name-
server domains, 42,579 (88%) were available for purchase, placing
nearly 75,000 domains at risk. For instance, by purchasing just 10
of these domains (each under $10 per domain), anyone could have
potentially become the authoritative nameserver for around 4,000
domains.
While these domains may not have much intrinsic value, they
could be a source of cheap domains. For the cost of registering a
nameserver domain, an actor effectively gains use of all domains
that name it in their NS record. Even though a purchaser does not
own the delegated domains, they have control over how they are
resolved and can even get SSL certificates signed for them.
This risk is not hypothetical. We see evidence of actors purchas-
ing nameserver domains to take advantage of lame delegations. For
instance, the owner of phonesear.ch has been registering name-
server domains that are authoritative for many lame delegated
domains,7 apparently for search engine optimization. Section 5.6
describes a set of lame delegations that left a county government
in the U.S. at risk of hijacking for over a year.
5.5.2 Misconfiguration. A common cause of lame delegation is mis-
configuration. We describe the three examples (M1-M3) annotated
in Figures 3 and 4.
In September 2013, new nameservers were added to the nic.tel
zone without glue records (M1), followed by existing nameserver
glue records being dropped (M2). These configuration issues are
consistent with reports of ongoing troubles the registry opera-
tor had with their delegations [12]. In May 2017 .tel transferred
ownership [13], after which issues with the nic.tel nameservers
disappeared.
The nameservers conficker-sinkhole.{com,net} were reg-
istered as a fix for letting the cwgsh domains expire, and efforts
were made to move some domains over to these new nameservers
from the cwgsh nameservers (which were no longer under the Con-
ficker Working Group Control). Unfortunately, in December 2014
(M3), these domains expired and for five days were unresolvable
while the registrar held them for the grace period. Fortunately,
based on whois information, the domains were renewed in the
grace period avoiding a repeat of the hijacking seen with the cwgsh
domains (Section 5.5.1).
5.5.3 Parking. Registrars often try to monetize traffic to parked
or expired domains. Typically, this monetization takes the form of
7https://dns.coffee/nameservers/A.NS.PHONESEAR.CH
Unresolved Issues: Prevalence, Persistence, and Perils of Lame Delegations
IMC ’20, October 27–29, 2020, Virtual Event, USA
many domains serviced by a single nameserver that directs visitors
to advertisements. When such nameservers become unresolvable,
the number of lame delegations jumps. We highlight two examples.
In July 2019 (P1 in Figure 4) roughly 285 k domains became lame,
caused by the domain domainparkingserver.net, along with
the glue records for its nameservers in the zone, disappearing for
seven days from the zone files.
Similarly, the spike (P2) in March 2017 was due to a nameserver
used for parked domains expiring. Since domains still pointed to the
expired nameserver, the registrar could not delete the nameserver.
The registrar followed industry practice and changed the NS record
to ns1.pendingrenewaldeletion.com.lamedelegation.org,
making the original nameserver domain available for registration
again. In this case, the registrar used a domain it owns to act as a
“sacrificial nameserver”, and therefore created no hijacking risk.
5.6 Discussion
The lame delegation issues highlighted by our longitudinal passive
analysis may involve only a small fraction of nameservers and
domains in the DNS, and relatively unpopular ones at that. However,
we argue that these issues are still important for a variety of reasons.
First, misconfigurations due to expired nameservers, nameserver
records with typos, etc., represent a gap between expected and
actual operation. When all nameservers for a domain are lame
(fully lame), the domain is entirely unresolvable. When a subset of
nameservers for a domain are lame (partly lame), the domain may
still resolve but persistent unresolvable nameservers reduce the
resiliency of DNS resolution for those domains. Section 6 discusses
the operational impact of these issues.
Second, lame domains have sufficient value in practice to moti-
vate some actors to capture their traffic by strategically registering
dangling nameservers, as illustrated by the phonesear.ch example
in Section 5.5.1.
Finally, even “unpopular” domains may identify critical infras-
tructure. As a concrete example, consider whitecounty.net, the
official domain for White County, Georgia. This domain had the
same two authoritative nameservers ns2.internetemc.com and
ns1.hemc.net from our first import of the .net zone file until June
30, 2019 when the domain internetemc.com expired. To work
around the EPP constraint of freeing a domain (internetemc.com
in this case) when host objects associated with the domain have live
references, the registrar renamed the host object associated with
the domain ns2.internetemc.com to a sacrificial nameserver
ns2.internetemc1aj2tkdy.biz in a different TLD.8 This renam-
ing followed a similar practice to that described in Section 5.3, just
using a different pattern for the sacrificial nameserver.
As a result, starting on July 1, 2019, one of its nameservers was
unresolvable and whitecounty.net was partly lame delegated.
By registering the domain name internetemc1aj2tkdy.biz, an
attacker could have received a fraction of the resolution requests
for an official county government domain. Note that redundancy in
DNS worked as intended since the other nameserver still worked
and resolved everything correctly, albeit with a delay at times if
the resolver chose to query the lame nameserver first. Ironically,
though, because redundancy masked the long-term unresolvable
8See the timeline illustrated at https://dns.coffee/domains/WHITECOUNTY.NET
nameserver, this issue went undiscovered by the domain owner.
Given the sensitive nature of White County’s domains, we reached
out to the registry who notified the domain registrant. The domain
configurations were fixed soon after.
6 LAME DELEGATIONS MEASURED WITH
ACTIVE QUERIES
Static analysis revealed many aspects of lame delegations, particu-
larly over time, but it is a lower bound. Active measurement shows
that the prevalence of lame delegations is significantly higher in
operational practice. We can detect lame delegations operationally
by performing active domain resolutions, much as clients do when
resolving domains. We characterize the prevalence of lame dele-
gations across the major gTLDs, explore nameserver consistency
issues, and quantify the impact of lame delegations on domain
resolution time.
6.1 Methodology
We targeted NS queries at all nameservers listed in the zone file for
a domain, from a single, well-provisioned vantage point connected
to the Netherlands NREN. We supplemented our measurements
with active resolution data provided by OpenINTEL for additional
context about lame delegated domains within the recent past.
We started with a snapshot of the ngTLD zone files and .com,
.net and .org to learn all the registered domain names under
these zones. Next, we extracted the nameservers specified in their
NS records. Finally, we extracted IP addresses in any existing glue
records for nameservers.
learned per name.10
We performed the following measurement steps:
(1) Actively resolve all NS names and record the IPv4 addresses9
(2) For each registered domain name, and for every NS name
of each particular domain, we targeted up to five actively
resolved IP addresses for the NS name in question with an
explicit NS query for the registered domain name. We in-
stantiate a local DNS resolver to contact the nameserver, so
caching mechanisms will not affect our measurements.
• We recorded the set of NS records returned by the NS
• In case of an error (e.g., a connection timeout or a DNS-
query, including response flags set by the nameserver.
specific error), we record the error type.
Between March and May 2020 we queried over 49 million do-
mains: 13 million randomly sampled domains from .com, 13 million
randomly sampled domains from the combined set of all ngTLDs,
and all domains from .net and .org. This selection balances cov-
erage against the overhead of an exhaustive crawl of the entire
DNS with the exponential fan-out from multiple nameservers per
domain, and then multiple IP addresses per nameserver.
When resolvers cannot use a provided NS record (i.e., delegation)
to obtain authoritative answers for a registered domain, we infer
9We contacted nameservers over IPv4 only. Our rationale is that a nameserver that
is unresponsive over IPv4 and reachable only over IPv6 is still lame to resolvers (e.g.,
clients) with no IPv6 connectivity.