### Exploit Publication by Year

**Figure 7: Occurrences of Exploit Publication by Year**

The data in Figure 7 shows the number of exploit publications by year for different software vendors. The Fisher Exact test rejects the null hypothesis of count uniformity (p = 0.0012), indicating that the frequency of exploited software varies by package type.

- **Yearly Trends:**
  - During the initial years of RuMarket's operation, there was a significant increase in the number of published exploits for all platforms.
  - Oracle products were the most affected, followed closely by Adobe and Microsoft products.
  - This surge aligns with the rise of "cybercrime as a service" from 2010 to 2013, as reported in both scientific literature and industry reports [35, 48, 70].

- **Post-2013 Trends:**
  - Oracle exploits saw a decline after 2013, coinciding with the introduction of plugin-blocking features in major web browsers and a Java update in January 2013, which increased the default security settings [48].
  - Microsoft and Adobe exploits continued to be published at a steady rate following 2013.

- **Gartner Hype Cycle Analogy:**
  - The trend in exploit publication resembles the Gartner Hype Cycle, where an initial peak (Peak of Inflated Expectations) is followed by a drop (Trough of Disillusionment) and then a plateau (Plateau of Productivity).

### Exploit Arrival

**Figure 8: Number of Repackaged Exploits by Year**

- **Exploit Introduction:**
  - New exploits are primarily introduced through STANDALONE and EKIT packages, while MALWARE packages mainly repackage existing exploits.
  - STANDALONE products introduce new exploits at a yearly rate of approximately 80% per package.
  - EKIT products saw a significant number of new exploits in 2011, their debut year on the market [35, 70], but newer kits tend to use fewer, more reliable exploits [48].

- **Repackaging:**
  - Most exploits first appear in STANDALONE and EKIT packages and are repackaged within the same type.
  - STANDALONE exploits are often repackaged into both MALWARE and EKIT packs, while EKIT exploits are primarily repackaged into other kits.
  - This suggests that STANDALONE exploits play a role in the innovation process, potentially forming an "exploit chain" where the most effective exploits are selected for inclusion in EKIT products for large-scale deployment.

### Exploit Timing

**Figure 9: Distribution of Days Between Exploit Introduction**

- **Introduction Rates:**
  - New exploits are introduced at similar rates for all software vendors, with 50% of exploits being introduced at approximately six-month intervals (175 days).
  - The fastest 25% are introduced within two months (62 days), while the slowest 25% appear after more than a year (401 days).

- **Contrast with Assumptions:**
  - These findings contrast with the assumption that severe vulnerabilities are quickly exploited at scale [54, 66]. Instead, they support recent evidence suggesting that most vulnerabilities do not significantly increase the number of targeted systems [12, 55].

- **Repackaging Rates:**
  - Exploit repackaging happens much faster, with 75% of exploits being reintroduced within 184 days of their first publication, indicating a short-lived commercial interest.

### Exploit Age

**Table 5: Exploit Age (Days) at Time of First Publication**

- **Age Distribution:**
  - STANDALONE exploits are generally younger at the time of publication compared to other types (p = 0.05, Wilcox rank sum test).
  - 50% of STANDALONE exploits are published within 2.5 months (75 days) of public disclosure, with the top 25% published within 40 days and the top 2.5% within a week.
  - The age distribution for EKIT and MALWARE categories is not statistically significant, with most exploits taking around four months from disclosure to publication.

- **Temporal Trends:**
  - The mean exploit age decreases over time (β = −0.32, p = 0.001), suggesting that exploit vendors are becoming faster in releasing exploits for newly disclosed vulnerabilities, with an approximate 30% faster rate each year.

### Estimate of Exploit Prices

**Table 6: (Bootstrapped) Descriptive Statistics of STANDALONE Exploit Price Estimates in USD**

- **Price Estimation:**
  - STANDALONE exploit prices are estimated using a uniform distribution by package. A bootstrap analysis (N = 10000) confirms that the bootstrapped data does not deviate substantially from the observed sample, though outliers may bias sample statistics.
  - Exploits are priced between 150 and 8000 USD, with significant differences by software.

- **Software-Specific Prices:**
  - The most expensive exploits in RuMarket are for Microsoft software, averaging 2500 USD.
  - Office and Windows exploits are the most expensive, with 50% of exploits priced above 2000 USD and the top 2.5% quoted at about 7000 and 5000 USD, respectively.
  - There is a negative correlation between exploit age and price (cor = −0.16, p = 0.3), suggesting that exploits lose value as they age.

### Regression Analysis of Exploit Price Estimates

**Table 7: Regression on STANDALONE Exploit Pricing**

- **Regression Models:**
  - Three nested mixed-effect linear regression models (M1, M2, M3) were used to evaluate the factors driving exploit prices.
  - The models show consistent coefficient estimates, with no significant collinearity indicated by Variance Inflation Factors (VIF) analysis.

- **Interpretation:**
  - The log-log relationships can be interpreted as elasticities. For example, in M3, a 1% increase in exploit age (ExplAдe) leads to an average 1.4% decrease in exploit price (1.01^(-1.357) = 0.986).
  - Interaction effects between exploit age and software vendor (log(ExplAдe) × SwV en) indicate that baseline prices and depreciation rates vary by vendor.

### Conclusion

The analysis provides insights into the trends and dynamics of exploit publication, arrival, timing, and pricing in the cybercrime market. The findings highlight the importance of understanding the lifecycle of exploits and the factors influencing their value, which can inform better strategies for vulnerability management and cybersecurity.