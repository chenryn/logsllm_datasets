title:Quantifying the Pitfalls of Traceroute in AS Connectivity Inference
author:Yu Zhang and
Ricardo V. Oliveira and
Hongli Zhang and
Lixia Zhang
Quantifying the Pitfalls of Traceroute in AS
Connectivity Inference
Yu Zhang1, Ricardo Oliveira2, Hongli Zhang1, and Lixia Zhang2,(cid:2)
1 Harbin Institute of Technology, Harbin, 150001, China
{yuzhang,zhanghongli}@hit.edu.cn
2 University of California, Los Angels, CA 90024, USA
{rveloso,lixia}@cs.ucla.edu
Abstract. Although traceroute has the potential to discover AS links
that are invisible to existing BGP monitors, it is well known that the
common approach for mapping router IP address to AS number (IP2AS)
based on the longest preﬁx matching is highly error-prone. In this pa-
per we conduct a systematic investigation into the potential errors of
the IP2AS mapping for AS topology inference. In comparing traceroute-
derived AS paths and BGP AS paths, we take a novel approach of identi-
fying mismatch fragments between each path pair. We then identify the
origin and cause of each mismatch with a systematic set of tests based
on publicly available data sets. Our results show that about 60% of mis-
matches are due to IP address sharing between peering BGP routers in
neighboring ASes, and only about 14% of the mismatches are caused by
the presence of IXPs, siblings, or preﬁxes with multiple origin ASes. This
result helps clarify an argument that comes from previous work regard-
ing the major cause of errors in converting traceroute paths to AS paths.
Our results also show that between 16% and 47% of AS adjacencies in
two public repositories for traceroute-derived topology are false.
Keywords: AS topology measurement, traceroute, BGP.
1 Introduction
The Internet is a vast distributed system formed by a myriad of networks called
Autonomous Systems (ASes) that exchange routing information using the Border
Gateway Protocol (BGP). There have been two basic approaches to measuring
AS-level connectivity: (1) passive measurement through collecting BGP routing
updates, and (2) active measurement using traceroute. In the BGP-based mea-
surement, AS adjacencies can be directly extracted from the ASPATH attribute
in BGP updates collected from the monitors/routers by Routeviews [4] and
RIPE-RIS [3]. But because of policy ﬁlters and best path selection, each BGP
monitor only provides a limited partial view of the topology. Most monitors in
(cid:2) This work was partially supported by the National Basic Research Program of China
(973 Program) under grant No.2005CB321806 and by the US National Science Foun-
dation under Contract No CNS-0551736.
A. Krishnamurthy and B. Plattner (Eds.): PAM 2010, LNCS 6032, pp. 91–100, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010
92
Y. Zhang et al.
traceroute measurement projects, such as CAIDA’s Ark [1] and DIMES [16],
are placed in diﬀerent ASes than BGP monitors, thus ideally they can comple-
ment the topology inferred from existing BGP sets. It is also easier to deploy a
traceroute monitor than to obtain a new BGP feed [16].
However converting the router IP addresses on traceroute paths to AS num-
bers, termed IP2AS mapping, is a diﬃcult problem. Typically this conversion is
done by ﬁnding the origin AS of each IP address in the traceroute path from the
BGP routing table using longest preﬁx matching (LPM). Unfortunately this ap-
proach is known to generate potentially false AS links, and the following question
emerges: what’s the impact of inference errors of traceroute-derived AS paths on
the AS topology map when using LPM?
Several previous eﬀorts have studied the problem of traceroute-derived
measurement and articulated possible causes for the mismatch between the
traceroute-derived path and the BGP path [7,13,9,10,12]. However, these pre-
vious eﬀorts did not provide answers to our question because of the following
reasons: (1) They quantiﬁed mismatch causes in the unit of path, e.g. either
there was a match in the converted path or not, which does not pin down all
individual points on the topology that the two paths diﬀer; and (2) They did
not investigate the accuracy of traceroute-derived topology.
In this paper we conduct a systematic and exhaustive investigation into the
impact of pitfalls of LPM-based traceroute measurement on topology inference.
Our contributions can be summarized as follows. (1) We identify diﬀerences in
pairs of traceroute and BGP paths systemically. This allows us to pinpoint mul-
tiple mismatches in the same AS path pair and to identify each mismatch point
shared by multiple path pairs. (2) We collect a comprehensive set of publicly
available data and develop a set of tests to infer the cause of each mismatch
more systematically than before. (3) Our results show that about 60% of mis-
matches occur because of IP address sharing between neighbor routers. This
result is a departure from previous work [13,10] that attributed the causes of
errors mainly to Internet eXchange Points (IXPs), sibling ASes under the same
ownership, and preﬁxes originated from multiple origin ASes. (4) We ﬁnd that
between 16% and 47% of the traceroute-derived adjacencies in public data sets
widely used by the community may be bogus.
2 BGP vs. Traceroute
Generally speaking, the data path inferred from traceroute and BGP control
path should match. There are however some scenarios where the two paths diﬀer,
either because the data path is not completely aligned with the control path,
or because of IP2AS shortfalls in converting IP addresses to AS numbers. We
describe diﬀerent reasons why the BGP AS paths may diﬀer from the AS paths
measured by LPM-based traceroute method.
(1) There may be divergence between data path and control path due to
BGP aggregation, multi-hop sessions, tunneling, layer-2 switching, and abnormal
routing. (2) The traceroute path may be incomplete because of non-responsive
Quantifying the Pitfalls of Traceroute in AS Connectivity Inference
93
hops. In addition, the BGP routing tables may not tell exactly the original ASN
of a given preﬁx, e.g. (3) an unannounced preﬁx or (4) a Multiple Origin ASes
(MOAS) preﬁx.
The IP addresses announced by a given AS X may be used by another AS
Y . We call those addresses the foreign addresses of Y . (5) A typical case is
that one preﬁx is shared by multiple participants in the IXP, which is a shared
infrastructure where multiple networks peer with each other publicly. (6) ASes
under the same ownership, i.e. siblings, may also share the same IP address
space. (7) Another typical case is IP address sharing between neighbor ASes,
where a border router owned by AS Y replies to a traceroute using one of its
interfaces whose IP address is borrowed from the neighboring AS X to enable
the point-to-point connection. For example, when Y has a private peering with
X, two incident routers’ interfaces are typically numbered from a /30. If the /30
is coming from X, then routers at Y may reply with X’s address range.
According to our measurements, 63∼88% of path pairs had a match (no extra
links in traceroute path). In the remaining cases, at most 3.7% of mismatch
path pairs are originated by divergence of control path and traceroute path,
and for the rest we provide evidence for their occurrence due to errors in IP2AS
mapping. Therefore, we believe it makes sense to use BGP paths as the reference
by default as [13,10,12]. If in the vast majority of cases the data path would not
be align with the control path (or BGP), there would be a signiﬁcant number of
mismatch cases we could not explain, which is not the case.
3 Related Work
Measuring Internet AS-level connectivity from traceroute data has attracted
many research eﬀorts over recent years. One of the ﬁrst such studies was done
by Chang et al. [7], which alerted for possible errors in AS topology inferred from
traceroute data using the LPM approach. They presented a technique to identify
the ownership of border routers based on IP alias resolution, and presented some
heuristics to ﬁll the holes of unmapped hops in traceroute paths. This work was
probably the ﬁrst that pointed out potential errors in traceroute-derived AS
paths because of IP address sharing between neighbor ASes.
In a later work, aiming at an accurate AS-level traceroute tool, Mao et al. [13]
compared BGP paths with traceroute paths launched from the same AS where
the BGP table was extracted. They investigated a comprehensive set of possible
causes of mismatch and developed heuristics to correct the IP2AS mapping.
In a following work [12], they presented a dynamic programming algorithm to
reassign /24 preﬁxes to ASes to minimize the number of mismatched path pairs.
The main outcome of this work was a method to correct the mismatches due to
unmapped hops, MOAS preﬁxes, IXPs and siblings.
At the same time, Hyun et al. [10] presented a path pair comparison and
quantiﬁed the mismatched pairs due to IXPs and siblings. They adopted the al-
gorithm for the longest common subsequence (LCS) problem to describe the
pattern of unexplained mismatches. Later[9], they presented the concept of
94
Y. Zhang et al.
third-party addresses, but its deﬁnition does not clearly address the issue of
IP address sharing between BGP neighbors.
As far as we can tell, our paper is the ﬁrst to propose a systematic method
of identifying mismatches between each traceroute-derived path and BGP path
pair. This method allows us to pinpoint multiple mismatch points in the same AS
path pair and align mismatched portions of a pair of paths, giving local context
to the comparison and explaining the cause of the mismatches. Our result asserts
that the main cause of mismatch is the IP address sharing between neighbor ASes
in accordance with [7] and departing from [13,10] that attributed the mismatches
to the presence of IXPs, siblings and MOAS. Note that we do not use the LCS
algorithm to describe the unexplained mismatches (as [10]), but we enhanced it
to identify the mismatches.
4 Data Sets
4.1 AS Path Pair Data
We collect traceroute raw data and the corresponding BGP routing updates from
4 ASes. Table 1 lists the number of destination IP addresses and preﬁxes probed
by the traceroute vantage points, as well the corresponding BGP information.
UCLA: From a host located at UCLA, we performed probes targeting all
/24 blocks in the BGP routing table, using the traceroute tool scamper
(http://www.wand.net.nz/scamper/) with ICMP-paris [6]. At the same time,
we collected BGP updates and tables from a backbone router at UCLA.
CAIDA Ark: There are 3 CAIDA Ark monitors that happen to be located in
ASes which provide a BGP feed to either RouteViews or RIPE-RIS collectors.
For each /24 block, the latest traceroute result is picked.
The traceroute AS paths are generated by the LPM-based IP2AS mapping on
the BGP routing table of the AS where the traceroute is launched from. Since
there is no guarantee that BGP routers will have consistent tables inside a large
AS (e.g. diﬀerent routers in same AS can have diﬀerent tables), we only collect
the path pairs where the next-hop AS is the same in order to reduce ambiguities.
A traceroute path is paired with its corresponding BGP path to the same preﬁx,
only if there is no change observed in the local BGP route to the destination
preﬁx during the traceroute probe, otherwise the paths are discarded.
Table 1. Information of AS path pair data sources
52
ucla
7.6M 272K
Monitor ASN #pair #preﬁx Collector Orgnization
UCLA 2009-02-22∼03-10
ucla
ams-nl 1103 5.2M 218K ris-rrc03 SURFnet 2009-02-01∼03-12
APAN 2009-02-01∼03-12
nrl-jp 7660 4.9M 212K rv2-oix
she-cn 4538 5.2M 218K rv-wide CERNET 2009-02-01∼03-12
Date
Quantifying the Pitfalls of Traceroute in AS Connectivity Inference
95
4.2 AS Adjacencies
To evaluate the accuracy of traceroute-derived AS adjacencies, we collect data
from CAIDA Ark, DIMES, and UCLA IRL [5]. The data from IRL is also used to
explain the mismatch with the assistance of data from Internet Routing Registry
(IRR) [2] and iPlane [11].
CAIDA Ark: Two traceroute-derived AS topologies are obtained by merging
all snapshots in Feb. 2009 [1]: (1) The topology with only direct links, in which
every consecutive pair of ASes have a pair of contiguous hops in the traceroute
path; and (2) The topology with both direct links and indirect links, in which
two IP addresses in diﬀerent ASes may be separated by one or more unmapped
or non-responsive hops.
DIMES: We also collect DIMES’ monthly traceroute-derived AS topology in
Feb. 2009 [16]. This graph include the AS links which are observed at least once
in the given month and at least twice considering all period.
BGP: We use the BGP-derived AS adjacencies available at UCLA IRL [5], which
is extracted from RouteViews and RIPE-RIS. For the sake of completeness, the
data is accumulated over a period of 5 months ending at March 2009, following
the methodology in [15].
IRR: The Internet Routing Registry (IRR) [2] is a central repository where ISPs
explicitly insert information such as routing policies and BGP adjacencies. We
are able to extract 28,700 total AS numbers and 156,094 total AS adjacencies
from all available IRR databases as of 2009-03-05.
iPlane: iPlane [11] project provides a list of routers’ alias, i.e. a set of interface
IP addresses belonging to the same router. This information can be used to
explain mismatches due to IP address sharing between BGP neighbors, since we
can look up each interface alias in BGP tables and estimate which ASes have
BGP sessions in a same router. We extracted a total of 286,043 IP interface
addresses on 67,430 routers on 2009-03-05.
4.3 IXP and Sibling Lists
To help identify ASNs used by IXPs and ASes with sibling relationship, we
extracted the name/description of each AS from all WHOIS databases.
IXPs: We compiled a list of 404 /24 preﬁxes belonging to IXPs by crawling
three websites, peeringDB.com, PCH.net and euro-ix.net, on 2009-03-09. Addi-
tionally, we search a list of ASNs associated with IXP names (from the previous
websites) and the common words “internet exchange”, “exchange point”, “access
point” and “gigapop”, carefully ﬁltering the false IXP records, e.g. a description
“peering at an IXP”. We end up with a total of 323 ASNs belonging to IXPs.
Siblings: We look for similarities in AS names/descriptions of a given pair of
ASes using approximate string matching except in the cases where the name is
a word appearing in an English dictionary. The acquisition history of all Tier-1
96
Y. Zhang et al.
ISPs from wikipedia is also used to group ASes. After computing the transitive
closure of sibling relationships and cleaning up the candidate sibling groups with
size greater than 20 manually, we get 3,490 sibling groups with 13,639 ASes.
5 Mismatch Analysis: Breaking Paths into Fragments
In this section we develop a technique for comparing BGP paths and traceroute-
derived AS paths obtained in Sec. 4.1. We use the classic ﬁle comparison com-
mand diff-like method to ﬁnd the longest common subsequence (LCS) that is
present in both traceroute path and BGP path [8]. The LCS solution is described
as a minimum array of binary operations needed to transform the BGP AS path
into the traceroute AS path: insertion ‘+’, deletion ‘−’, or unmodiﬁed ‘=’. The
consecutive ‘=’ operations represent the common segments, while the ‘+’ and ‘-’
operations indicate the diﬀerence.
To pinpoint multiple mismatches in the same AS path pair and describe a
mismatch in its local context, we deﬁne a mismatch fragment between two AS
paths as a sequence of ‘−’ and/or ‘+’ wrapped around by two ‘=’. For example,
Figure 1(a) shows the solution (F1) and mismatch fragments (F2) of a one-to-
one substitution case. Note that the same mismatch fragment at the AS level
may have the diﬀerent IP-level fragment. We develop ﬁve additional steps to
detect the mismatch fragment systematically:
1. We add 4 special tokens to the traceroute AS path: ‘∗’ representing consec-
utive non-responsive hops, ‘?’ representing consecutive unmapped hops; ‘ ∧’
and ‘$’ represent the beginning and end of a path, respectively. See examples
in Figure 1(b) and (c).
2. When there are multiple alternative solutions with the same number of oper-
ations, the one whose ‘=’ operator appears earlier in the BGP path is picked.
The goal of this tie-break is to concentrate the errors in the least number of
original hops as possible. In Figure 1(d), F1 is picked from two solutions.
diﬀerences more properly as shown in Figure 1(e).
3. The mismatch fragment is replaced with its inside loop, since loops describe
4. Among more than one ‘−’ operations in the substitution at the end of path,
only the ﬁrst is kept, e.g. F1 is replaced with F2 in Figure 1(f).
5. Mismatch fragments whose modifying operations include only ‘+∗’ or ‘+?’,
or only deletions (‘−’) at the end of path are discarded, because our interest
is in extra links brought by traceroute.
We obtained a total of 39K unique mismatch fragments (15∼20K per moni-
tor) including 44% extra (‘+’-only), 20% missing (‘−’-only), and 36% substitute
BGP:
Traceroute:
(a) substitute
A
A
C D
C D
F1: =A -B +E =C =D
F2: =A -B +E =C
B
E
(b) end-extra (c) non-responsive
A B
A B C
C
C
=A -B +* =C
=B +C =$
A
A
B
*
(d) tie-break
(e) loop
(f) end-substitute
A
A
B C
C B
D
D
=A +C =B,=B -C =D
=A -B =C,=C +B =D
A
A C