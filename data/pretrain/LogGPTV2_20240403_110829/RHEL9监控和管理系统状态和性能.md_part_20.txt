显示的完整信息。但是，建议将您的系统保留在默认设置中。
要查看载入哪些驱动程序以及在什么模式下运行：
``` screen
# cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_driver
```
::: itemizedlist
-   如果 Intel P-State 驱动程序被加载且处于活跃模式，则返回
    `intel_pstate`{.literal}。
-   如果 Intel P-State 驱动程序被加载且处于被动模式，则返回
    `intel_cpufreq`{.literal}。
-   如果载入 ACPI CPUfreq 驱动程序，则返回 `acpi-cpufreq`{.literal}。
:::
在使用 Intel P-State
驱动程序时，在内核命令行中添加以下参数，以强制驱动程序在被动模式下运行：
``` screen
intel_pstate=passive
```
要禁用 Intel P-State 驱动程序并使用，而是使用 ACPI CPUfreq
驱动程序，在内核引导命令行中添加以下参数：
``` screen
intel_pstate=disable
```
:::
::: section
::: titlepage
# []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#generating-an-html-output_managing-power-consumption-with-powertop}生成 HTML 输出 {.title}
:::
除了终端中的 `powertop`{.literal} 输出外，您还可以生成 HTML 报告。
::: itemizedlist
**步骤**
-   使用 `--html`{.literal} 选项运行 `powertop`{.literal} 命令：
    ``` literallayout
    # powertop --html=htmlfile.html
    ```
    将 `htmlfile.html`{.literal} 参数替换为输出文件所需名称。
:::
:::
::: section
::: titlepage
# []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#optimizing-power-consumption_managing-power-consumption-with-powertop}优化功耗 {.title}
:::
要优化功耗，您可以使用 `powertop`{.literal} 服务或
`powertop2tuned`{.literal} 程序。
::: section
::: titlepage
## []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#optimizing-power-consumption-using-the-powertop-service_optimizing-power-consumption}使用 powertop 服务优化功耗 {.title}
:::
您可以使用 `powertop`{.literal} 服务，从引导时的 `Tunables`{.literal}
选项卡中自动启用所有 [**[PowerTOP]{.application}**]{.strong} 的建议：
::: itemizedlist
**步骤**
-   启用 `powertop`{.literal} 服务：
    ``` literallayout
    # systemctl enable powertop
    ```
:::
:::
::: section
::: titlepage
## []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#powertop2tuned-utility_optimizing-power-consumption}powertop2tuned 工具 {.title}
:::
`powertop2tuned`{.literal} 程序允许您从
[**[PowerTOP]{.application}**]{.strong} 建议创建自定义
[**[TuneD]{.application}**]{.strong} 配置集。
默认情况下，`powertop2tuned`{.literal} 在 `/etc/tuned/`{.literal}
目录中创建配置集，并在当前选择的 [**[TuneD]{.application}**]{.strong}
配置集中基础配置集。为安全起见，所有
[**[PowerTOP]{.application}**]{.strong} 调优最初在新配置集中被禁用。
要启用调整，您可以：
::: itemizedlist
-   在 `/etc/tuned/profile_name/tuned.conf 文件中`{.literal} 取消注释。
-   使用 `--enable`{.literal} 或 `-e`{.literal} 选项生成新的配置集，启用
    [**[PowerTOP]{.application}**]{.strong} 建议的大部分调优。
    某些潜在的调整（如 USB
    自动暂停）在默认情况下被禁用，需要手动取消注释。
:::
:::
::: section
::: titlepage
## []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#optimizing-power-consumption-with-powertop2tuned_optimizing-power-consumption}使用 powertop2tuned 程序优化电源消耗 {.title}
:::
::: itemizedlist
**先决条件**
-   `powertop2tuned`{.literal} 程序已安装在系统上：
    ``` literallayout
    # dnf install tuned-utils
    ```
:::
::: orderedlist
**步骤**
1.  创建自定义配置集：
    ``` literallayout
    # powertop2tuned new_profile_name
    ```
2.  激活新配置集：
    ``` literallayout
    # tuned-adm profile new_profile_name
    ```
:::
::: itemizedlist
**附加信息**
-   要获得 `powertop2tuned`{.literal} 支持的选项列表，请使用：
    ``` literallayout
    $ powertop2tuned --help
    ```
:::
:::
::: section
::: titlepage
## []{#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance.html#con_comparison-of-powertop-service-and-powertop2tuned_optimizing-power-consumption}powertop.service 和 powertop2tuned 的比较 {.title}
:::
和 `powertop.service`{.literal} 相比，对于优化能耗应首选
`powertop2tuned`{.literal}，理由如下：
::: itemizedlist
-   `powertop2tuned`{.literal} 实用程序代表将
    [**[PowerTOP]{.application}**]{.strong} 集成到
    [**[TuneD]{.application}**]{.strong}
    中，这能够带来这两个工具的优势。
-   `powertop2tuned`{.literal}
    实用程序允许对已启用的调优进行精细的控制。
-   使用 `powertop2tuned`{.literal} 时，可能无法自动启用潜在的危险调整。
-   通过 `powertop2tuned`{.literal}，可以在不重启的情况下进行回滚。
:::
:::
:::
:::
[]{#getting-started-with-perf_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#getting-started-with-perf_monitoring-and-managing-system-status-and-performance.html#getting-started-with-perf_monitoring-and-managing-system-status-and-performance}第 12 章 perf 入门 {.title}
:::
作为系统管理员，您可以使用 `perf`{.literal}
工具来收集和分析系统的性能数据。
::: section
::: titlepage
# []{#getting-started-with-perf_monitoring-and-managing-system-status-and-performance.html#introduction-to-perf_getting-started-with-perf}perf 简介 {.title}
:::
带有基于内核的子系统 [*Performance Counters for Linux*]{.emphasis} (PCL)
的 `perf`{.literal}。`perf`{.literal} 是一个功能强大的工具，使用
Performance Monitoring
Unit(PMU)来测量、记录和监控各种硬件和软件事件。`perf`{.literal}
还支持追踪点、kprobes 和 uprobes。
:::
::: section
::: titlepage
# []{#getting-started-with-perf_monitoring-and-managing-system-status-and-performance.html#installing-perf_getting-started-with-perf}安装 perf {.title}
:::
此流程安装 `perf`{.literal} 用户空间工具。
::: itemizedlist
**步骤**
-   安装 `perf`{.literal} 工具：
    ``` screen
    # dnf install perf
    ```
:::
:::
::: section
::: titlepage
# []{#getting-started-with-perf_monitoring-and-managing-system-status-and-performance.html#common-perf-commands_getting-started-with-perf}常见 perf 命令 {.title}
:::
本节概述常用的 `perf`{.literal} 命令。
::: variablelist
**常用的 perf 命令**
[`perf stat`{.literal}]{.term}
:   此命令提供常见性能事件的总体统计信息，包括执行的指令和消耗的时钟周期。选项可用于选择默认测量事件以外的事件。
[`perf 记录`{.literal}]{.term}
:   此命令将性能数据记录到文件 `perf.data`{.literal} 中，稍后可以使用
    `perf report`{.literal} 命令进行分析。
[`perf 报告`{.literal}]{.term}
:   此命令从 perf `记录`{.literal} 创建的 `perf.data`{.literal}
    文件中读取和显示性能数据。
[`perf list`{.literal}]{.term}
:   此命令列出特定计算机上可用的事件。这些事件将根据系统的性能监控硬件和软件配置而有所不同。
[`perf top`{.literal}]{.term}
:   此命令执行与 `top`{.literal}
    实用程序类似的功能。它生成并实时显示性能计数器配置集。
[`perf trace`{.literal}]{.term}
:   此命令执行与 `strace`{.literal}
    工具类似的函数。它监控指定线程或进程使用的系统调用，以及该应用收到的所有信号。
[`perf help`{.literal}]{.term}
:   此命令显示 `perf`{.literal} 命令的完整列表。
:::
::: itemizedlist
**其他资源**
-   在 子命令中添加 `--help`{.literal} 选项以打开 man page。
:::
:::
:::
[]{#configuring-an-operating-system-to-optimize-cpu-utilization_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#configuring-an-operating-system-to-optimize-cpu-utilization_monitoring-and-managing-system-status-and-performance.html#configuring-an-operating-system-to-optimize-cpu-utilization_monitoring-and-managing-system-status-and-performance}第 13 章 配置操作系统以优化 CPU 使用率 {.title}
:::
这部分论述了如何配置操作系统来优化其工作负载的 CPU 使用率。
::: section
::: titlepage
# []{#configuring-an-operating-system-to-optimize-cpu-utilization_monitoring-and-managing-system-status-and-performance.html#tools-for-monitoring-and-diagnosing-processor-issues_configuring-an-operating-system-to-optimize-cpu-utilization}监控和诊断处理器问题的工具 {.title}
:::
以下是 Red Hat Enterprise Linux 9
中用于监控并诊断处理器相关性能问题的工具：
::: itemizedlist
-   `turbostat`{.literal}
    工具以指定间隔打印计数器结果，以帮助管理员识别服务器中的意外行为，如过量电源使用、无法进入深度睡眠状态或系统管理中断(SMI)创建不必要。
-   `numactl`{.literal}
    实用程序提供了多个选项来管理处理器和内存关联性。`numactl`{.literal}
    软件包包含 `libnuma`{.literal} 库，它为内核支持的 NUMA
    策略提供简单编程接口，并可用于比 `numactl`{.literal}
    应用更精细的调优。
-   `numastat`{.literal} 工具显示操作系统及其进程的每个 NUMA
    节点内存统计信息，并演示进程内存是否在整个系统中分散，还是集中于特定的节点上。此工具由
    `numactl`{.literal} 软件包提供。
-   `numad`{.literal} 是一个自动 NUMA 关联性管理守护进程。它监控系统中的
    NUMA 拓扑和资源使用情况，以便动态改进 NUMA 资源分配和管理。
-   `/proc/interrupts`{.literal}
    文件显示中断请求(IRQ)编号、系统中的每个处理器处理的类似中断请求数量、中断发送的类型以及响应所列中断请求的设备的逗号分隔列表。
-   `pqos`{.literal} 程序在 `intel-cmt-cat`{.literal}
    软件包中提供。它监控最近 Intel 处理器上的 CPU
    缓存和内存带宽。它监控：