如果企业安全建设能力还不够，建议放到封闭环境进行操作访问，类似我们上面提到的数据仓库保护方
案。互联网企业在这块走在前面，可以借鉴其思路开展工作，包括：
·在大数据平台上提供各种各样的模型，方便业务人员直接在平台上做分析和可视化展示，这样可使
数据导出的需求尽可能少。
·建设大数据风控平台，对敏感数据展示时进行脱敏处理，或者只对用户展示最终的视图。
·确实需要导出进行离线分析的，请结合前面的各种方案进行选择，比如桌面虚拟化确保数据不落到
终端，或者落到终端的数据有审批、水印、审计等措施。
·大数据平台本身的安全性，包括身份认证、访问控制和授权等。Hadoop及其生态系统中的其他组件
都支持使用Kerberos进行用户身份验证。Hadoop和HBase都支持ACL，同时也实现了基于角色的访问控制
（RBAC）模型，更细粒度的ABAC（Attibute Based Access Control）在HBase较新的版本中也可通过访问
控制标签和可见性标签的形式实现。
14.6 其他话题
14.6.1 数据脱敏
数据脱敏在百度百科上的定义是，对某些敏感信息通过脱敏规则进行数据的变形，实现敏感隐私数
据的可靠保护。当涉及客户安全数据或者一些商业性敏感数据时，在不违反系统规则条件下，对真实数
据进行改造并提供测试使用，如身份证号、手机号、卡号、客户号等个人信息都需要进行数据脱敏。
数据脱敏的应用非常广泛，比如我们常见的火车票上的身份证号码会用星号替换其中一些数字。按
照脱敏规则，可以分为可恢复性脱敏和不可恢复性脱敏。可恢复性脱敏就是数据经过脱敏规则的转化
后，还可以经过某些处理过程还原出原来的数据；相反，数据经过不可恢复性脱敏之后，将无法还原到
原来的样子，可以把二者分别看成可逆加密和不可逆加密。
金融行业作为一个强监管的行业，经营过程中收集到的客户资料信息（包括身份证、银行卡号、手
机号、住址等个人信息）必须进行严格保护，数据脱敏是一个必不可少的环节，特别是在开发、测试过
程中可能会使用到真实生产数据时。随着业务越来越复杂及后台数据库里表规模越来越大、结构越来越
复杂，依靠人工梳理敏感信息的方式已经不能满足日益复杂的安全需求，商业的脱敏系统应运而生，这
类系统基本上都利用各类敏感信息的规则通过自动扫描来发现敏感信息字段。
除此之外，生产系统中的真实数据在对客户展示时，也需要考虑脱敏处理；内部系统也是一样，避
免不必要的信息泄露的方式，基本都需要对系统进行改造，在前端展示、数据导出环节进行控制。这里
需要注意一些“坑”，比如测试环境中的数据已经脱敏，测试人员对功能测试时往往发现不了系统内在逻
辑是否进行了脱敏，一旦有问题的代码发布到生产环境，可能效果会和测试环境不一样。假设某页面上
直接出现了客户信息（如手机号），随着现在互联网传播手段的流行，造成的声誉风险可能会非常大。
14.6.2 水印与溯源
水印在数据安全领域广泛应用，主要用来防止敏感信息被以截屏、拍照的方式泄露出去。水印，根
据其可见性，可以分为明文水印和隐藏水印。明文水印一般主要起警示的效果，比如企业内部文档通常
加上“内部资料，请注意保密”字样的水印；而隐藏水印，更多是站在追踪溯源的角度考虑。这两种水印
一般会同时使用，企业里通过技术手段配合行政手段，往往具有更好的震慑效果。
根据使用场景的不同，水印又有屏幕水印、网页数字水印、图片水印、文档水印等各种呈现方式。
屏幕水印一般是通过后台Agent来实现在屏幕上打上水印；网页数字水印一般通过网页背景技术来实现；
图片水印是通过将图片打上水印标记生成另一个图片来实现；文档水印更多是在文档本身体现，需要文
档工具支持。结合笔者经验，下面介绍三种比较特殊的水印处理技术，供大家参考。
1.强化版网页数字水印
常规的网页数字水印，基本上都是写着诸如员工编号等信息的透明度很高的图片，以Background-
Image的方式平铺满整个屏幕，有一定技能的人可利用浏览器按F12找到对应元素直接删除水印。
有没有更好的办法防止删除水印呢？一般人想到通过JavaScript来实现—当发现有人删除这个DOM节
点时再重新生成即可。除了删除，还有DOM节点的隐藏、挪动、篡改等手段也会影响水印效果。
另外，如果通过防火墙或一些浏览器插件工具拦截到水印服务的请求呢？再来个连接检查请求，看
水印服务是否可达，不可达则破坏页面不显示正常内容。
如果以上都解决了，那攻击者通过查看JS代码发现其判断逻辑，在浏览器代理工具中修改相应结果
呢？这时候就需要对JS代码进行保护了，不只是常见的压缩混淆，还会涉及前端代码保护技术。对抗是
无止境的，结合已有的保护技术，在代码里通过埋点对恶意行为进行记录，也是一个非常好的方案，毕
竟企业里真正懂这些技术的人不多，通过埋点发现“高手”也是件有趣的事情。
2.WPS字库水印
WPS文档朔源专用版客户端创建的公文，可将用户的登录身份基本信息（以及硬件ID设备信息）形
成隐藏的数字水印分布在公文的文字排版中，如图14-12所示。
图14-12 WPS隐藏水印效果图
从图14-13可以看出，其水印功能是利用特殊字体，在打开、打印文件时对字体进行绘制，埋入相应
的数据水印，图14-13是WPS隐写用户信息的原理图。
以上过程不影响原文件，仅影响WPS呈现出来的效果，而且仅通过肉眼识别不出来，用户基本感觉
不到。但是，如果当用户通过打印、复印、拍照等方式造成文档泄密时，单位管理者仅需要获取公文的
复印件或相关的拍照图片，即可通过WPS公文溯源解析系统，寻找到泄密的原始人，从而方便追责工
作，图14-14为溯源提取原理图。
图14-13 WPS隐写用户信息原理图
图14-14 WPS隐藏水印溯源提取原理图
3.矢量水印
屏幕矢量水印是某公司新一代的水印解决方案。该方案抛弃原有“所见即可得”的水印方式，用一
种“轻微型”标记的方式来展现水印，近乎等同于“隐形水印”。如果一旦通过屏幕拍照或者截屏引发了泄密
事件，即可通过泄密照片上的矢量水印信息快速锁定泄密者。
屏幕矢量水印具有抗折叠、冗余备份、抗波尔纹等特点，无论照片如何压缩、优化、折叠都不会影
响水印信息的审计和泄密源的定位。只需要在查询页面中，输入水印信息进行查询，就可以锁定的泄密
人。如果得到的泄密的图片不够完整，系统也能支持查询出精确度最高的结果。
图14-15是一个矢量水印效果截图。
图14-15 矢量水印效果
可以看到在图14-15上有很多点阵，每个点阵后台代表不同的字符，如图14-16所示。
图14-16 矢量水印追查
通过特定的算法只需提取4~6个相连的点阵即可追溯文档泄露相关信息。
14.6.3 UEBA
2014年，Gartner发布了用户行为分析(UBA)市场定义，UBA技术目标市场聚焦在安全(窃取数据)和诈
骗(利用窃取来的信息)上，帮助组织检测内部威胁以及有针对性的攻击和金融诈骗。但随着数据窃取事件
越来越多，Gartner认为有必要把这部分从诈骗检测技术中剥离出来，于是在2015年正式更名为用户实体
行为分析(UEBA)。
UEBA最近很火，国外一些领先的UEBA厂商凭借检测能力上的优势，已经在尝试颠覆原有市场格
局，包括Exabeam、Gurucul、Interset、Niara、Securonix、Splunk（2015年收购Caspida）等。这些产品的
出发点主要是解决以下问题：
·账号失陷检测。
·主机失陷检测。
·数据泄漏检测。
·内部用户滥用。
·提供事件调查的上下文。
毫无疑问，这些威胁都是企业最关注的风险。而在国内这方面的公司或产品还不够完善，很多企业
在尝试从传统的SIEM/SOC转向大数据平台进而走向UEBA。需要保持关注，国外UEBA的火热不是没有
道理的。
从数据安全的角度上看，内部用户对业务系统的异常访问是需要关注的，比如去年报道的针对征信
系统批量查询的案例，通过对账号的异地、异常时间登录，到数据的批量查询下载，都是可以发现的。
14.6.4 CASB
随着云技术和虚拟化技术的普及，越来越多的企业已经没有传统意义上的数据中心机房了，各种业
务系统迁移到云上，包括企业邮箱、企业网盘、CRM、ERP、OA、HR等各类业务系统均托管给云服务
商，计算资源规模化、集约化使办公效率取得大幅度提升。在这种情况下，存储资源变为共享式，企业
随之失去了对应用及数据的安全控制权。既要享受便捷的云端服务，又不能失去对自身数据的控制权，
基于这个预期，Gartner在2012年提出了CASB概念，定义了在新的云计算时代，企业或用户掌控云上数据
安全的解决方案模型。CASB产品有两种工作模式：一种是Proxy模式，另一种是API模式。
在Proxy模式下，CASB要处理企业上传到云应用的全部流量，重要数据采用加密等安全策略处理后
再上传到云服务商；而在API模式中，企业数据直接传给云服务商，CASB利用云应用的API，对用户进行
访问控制以及执行企业的安全策略。
金融行业的特殊性导致业务上云成为一个具有争议性的话题，笔者建议需要保持关注，技术潮流势
不可挡，传统金融机构面临互联网公司的挑战势必加快这方面的技术转型。
14.7 小结
数据安全建设工作，没有黑科技，只能靠对企业数据的全流程管理结合技术手段，尽可能地避免数
据外泄。
办公终端物理分布的广泛性导致数据管理半径的急剧扩大，加上终端的多样性导致终端数据安全管
理难度进一步加大。数据安全未来管理方向，在聚焦于敏感数据的基础上可以考虑转向后台集中管理，
数据集中的承载平台包括应用系统和虚拟桌面等，不过前提条件是要提高应用系统、虚拟桌面的数据处
理、分享能力，并打通后台的数据流转过程。未来随着云的流行和监管可能的放开，CASB是一个不错的
方向，值得关注。
第15章 业务安全
2017年共享单车行业的两大巨头的“红包大战”事件中，A公司宣布推出“红包车”吸引用户之后，B公
司也推出了“骑单车，给红包”的全新活动。活动规定在B公司单车系统显示的红包范围内开锁，只要骑行
超过500米、10分钟的用户，就能够在骑行结束之后领取最高5000元的红包奖励。
结果活动没推出几天，网上就出现了“利用B公司漏洞赚红包”的技巧分享文章，用户可以通过在手机
上安装虚拟GPS的方式来进行红包区域与共享单车的定位，然后通过正常的APP软件来完成共享单车的租
借，最终获得红包奖励。普通人利用规则一天顶多有近80元收入，而羊毛党则利用手上掌握的大量账号