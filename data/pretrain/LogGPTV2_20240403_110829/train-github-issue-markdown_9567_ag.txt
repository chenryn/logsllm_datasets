以下是优化后的文本，使其更加清晰、连贯和专业：

---

**NPM 安装日志**

1. `cosmiconfig@^5.0.0` 的范围清单在 85 毫秒内从缓存中获取。
2. `postcss@^7.0.0` 的范围清单在 6 毫秒内从缓存中获取。
3. 从 `https://registry.npmjs.org/cssnano-preset-default` 获取 HTTP 请求，状态码为 304（未修改），耗时 104 毫秒（来自缓存）。
4. 从 `https://registry.npmjs.org/is-resolvable` 获取 HTTP 请求，状态码为 304（未修改），耗时 97 毫秒（来自缓存）。
5. `cssnano-preset-default@^4.0.7` 的范围清单在 117 毫秒内从缓存中获取。
6. `is-resolvable@^1.0.0` 的范围清单在 103 毫秒内从缓存中获取。
7. 从 `https://registry.npmjs.org/postcss/-/postcss-8.2.4.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 3 毫秒（来自缓存）。
8. `postcss@^8.1.4` 的范围清单在 10 毫秒内从缓存中获取。
9. 从 `https://registry.npmjs.org/icss-utils` 获取 HTTP 请求，状态码为 304（未修改），耗时 68 毫秒（来自缓存）。
10. 从 `https://registry.npmjs.org/icss-utils/-/icss-utils-5.1.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 31 毫秒。
11. `icss-utils@^5.0.0` 的范围清单在 102 毫秒内从缓存中获取。
12. 从 `https://registry.npmjs.org/postcss-modules-extract-imports` 获取 HTTP 请求，状态码为 304（未修改），耗时 109 毫秒（来自缓存）。
13. 从 `https://registry.npmjs.org/postcss-modules-local-by-default` 获取 HTTP 请求，状态码为 304（未修改），耗时 88 毫秒（来自缓存）。
14. 从 `https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-3.0.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 78 毫秒。
15. `postcss-modules-extract-imports@^3.0.0` 的范围清单在 190 毫秒内从缓存中获取。
16. 从 `https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.0.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 34 毫秒。
17. `postcss-modules-local-by-default@^4.0.0` 的范围清单在 126 毫秒内从缓存中获取。
18. 从 `https://registry.npmjs.org/postcss-modules-scope` 获取 HTTP 请求，状态码为 304（未修改），耗时 71 毫秒（来自缓存）。
19. 从 `https://registry.npmjs.org/postcss-modules-values` 获取 HTTP 请求，状态码为 304（未修改），耗时 48 毫秒（来自缓存）。
20. 从 `https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-3.0.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 31 毫秒。
21. `postcss-modules-scope@^3.0.0` 的范围清单在 106 毫秒内从缓存中获取。
22. `semver@^7.3.2` 的范围清单在 1 毫秒内从缓存中获取。
23. 从 `https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-4.0.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 53 毫秒。
24. `postcss-modules-values@^4.0.0` 的范围清单在 105 毫秒内从缓存中获取。
25. 从 `https://registry.npmjs.org/camelcase` 获取 HTTP 请求，状态码为 304（未修改），耗时 421 毫秒（来自缓存）。
26. `camelcase@^6.2.0` 的范围清单在 425 毫秒内从缓存中获取。
27. 从 `https://registry.npmjs.org/css` 获取 HTTP 请求，状态码为 304（未修改），耗时 72 毫秒（来自缓存）。
28. 从 `https://registry.npmjs.org/parse5-htmlparser2-tree-adapter` 获取 HTTP 请求，状态码为 200（成功），耗时 40 毫秒。
29. 从 `https://registry.npmjs.org/parse5` 获取 HTTP 请求，状态码为 304（未修改），耗时 106 毫秒（来自缓存）。
30. 从 `https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-6.0.1.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 28 毫秒。
31. `parse5-htmlparser2-tree-adapter@^6.0.1` 的范围清单在 72 毫秒内从缓存中获取。
32. `parse5@^6.0.1` 的范围清单在 146 毫秒内从缓存中获取。
33. 从 `https://registry.npmjs.org/pretty-bytes` 获取 HTTP 请求，状态码为 200（成功），耗时 46 毫秒。
34. 从 `https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.5.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 31 毫秒。
35. `pretty-bytes@^5.3.0` 的范围清单在 83 毫秒内从缓存中获取。
36. `make-dir@^3.0.2` 的范围清单在 1 毫秒内从缓存中获取。
37. 从 `https://registry.npmjs.org/commondir` 获取 HTTP 请求，状态码为 304（未修改），耗时 56 毫秒（来自缓存）。
38. `commondir@^1.0.1` 的范围清单在 61 毫秒内从缓存中获取。
39. `source-map-support@^0.5.5` 的范围清单在 1 毫秒内从缓存中获取。
40. `@types/node@*` 的范围清单在 32 毫秒内从缓存中获取。
41. 从 `https://registry.npmjs.org/pkg-dir` 获取 HTTP 请求，状态码为 304（未修改），耗时 42 毫秒（来自缓存）。
42. `pkg-dir@^4.1.0` 的范围清单在 47 毫秒内从缓存中获取。
43. `supports-color@^7.0.0` 的范围清单在 2 毫秒内从缓存中获取。
44. 从 `https://registry.npmjs.org/merge-stream` 获取 HTTP 请求，状态码为 304（未修改），耗时 57 毫秒（来自缓存）。
45. `merge-stream@^2.0.0` 的范围清单在 61 毫秒内从缓存中获取。
46. 从 `https://registry.npmjs.org/klona` 获取 HTTP 请求，状态码为 304（未修改），耗时 84 毫秒（来自缓存）。
47. `klona@^2.0.4` 的范围清单在 99 毫秒内从缓存中获取。
48. 从 `https://registry.npmjs.org/emojis-list` 获取 HTTP 请求，状态码为 304（未修改），耗时 70 毫秒（来自缓存）。
49. 从 `https://registry.npmjs.org/big.js` 获取 HTTP 请求，状态码为 304（未修改），耗时 116 毫秒（来自缓存）。
50. 从 `https://registry.npmjs.org/css/-/css-3.0.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 374 毫秒。
51. `big.js@^5.2.2` 的范围清单在 123 毫秒内从缓存中获取。
52. `css@^3.0.0` 的范围清单在 451 毫秒内从缓存中获取。
53. `webpack-sources@^1.2.0` 的范围清单在 2 毫秒内从缓存中获取。
54. `emojis-list@^3.0.0` 的范围清单在 102 毫秒内从缓存中获取。
55. 从 `https://registry.npmjs.org/bl` 获取 HTTP 请求，状态码为 304（未修改），耗时 34 毫秒（来自缓存）。
56. `bl@^4.0.3` 的范围清单在 35 毫秒内从缓存中获取。
57. 从 `https://registry.npmjs.org/cli-spinners` 获取 HTTP 请求，状态码为 304（未修改），耗时 41 毫秒（来自缓存）。
58. `cli-spinners@^2.5.0` 的范围清单在 42 毫秒内从缓存中获取。
59. 从 `https://registry.npmjs.org/@types%2fwebpack-sources` 获取 HTTP 请求，状态码为 304（未修改），耗时 74 毫秒（来自缓存）。
60. 从 `https://registry.npmjs.org/is-interactive` 获取 HTTP 请求，状态码为 304（未修改），耗时 37 毫秒（来自缓存）。
61. `is-interactive@^1.0.0` 的范围清单在 38 毫秒内从缓存中获取。
62. `@types/webpack-sources@^0.1.5` 的范围清单在 79 毫秒内从缓存中获取。
63. 从 `https://registry.npmjs.org/log-symbols` 获取 HTTP 请求，状态码为 304（未修改），耗时 31 毫秒（来自缓存）。
64. `log-symbols@^4.0.0` 的范围清单在 32 毫秒内从缓存中获取。
65. 从 `https://registry.npmjs.org/wcwidth` 获取 HTTP 请求，状态码为 304（未修改），耗时 28 毫秒（来自缓存）。
66. `wcwidth@^1.0.1` 的范围清单在 29 毫秒内从缓存中获取。
67. 从 `https://registry.npmjs.org/parse-node-version` 获取 HTTP 请求，状态码为 200（成功），耗时 32 毫秒。
68. 从 `https://registry.npmjs.org/parse5-sax-parser` 获取 HTTP 请求，状态码为 304（未修改），耗时 74 毫秒（来自缓存）。
69. `parse5-sax-parser@^6.0.1` 的范围清单在 79 毫秒内从缓存中获取。
70. 从 `https://registry.npmjs.org/parse-node-version/-/parse-node-version-1.0.1.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 28 毫秒。
71. `parse-node-version@^1.0.1` 的范围清单在 65 毫秒内从缓存中获取。
72. `graceful-fs@^4.1.2` 的范围清单在 1 毫秒内从缓存中获取。
73. 从 `https://registry.npmjs.org/errno` 获取 HTTP 请求，状态码为 304（未修改），耗时 46 毫秒（来自缓存）。
74. `errno@^0.1.1` 的范围清单在 67 毫秒内从缓存中获取。
75. `make-dir@^2.1.0` 的范围清单在 9 毫秒内从缓存中获取。
76. `mime@^1.4.1` 的范围清单在 13 毫秒内从缓存中获取。
77. 从 `https://registry.npmjs.org/image-size` 获取 HTTP 请求，状态码为 304（未修改），耗时 91 毫秒（来自缓存）。
78. `image-size@~0.5.0` 的范围清单在 96 毫秒内从缓存中获取。
79. `source-map@~0.6.0` 的范围清单在 1 毫秒内从缓存中获取。
80. `webpack-sources@^1.1.0` 的范围清单在 1 毫秒内从缓存中获取。
81. 从 `https://registry.npmjs.org/needle` 获取 HTTP 请求，状态码为 200（成功），耗时 129 毫秒。
82. 从 `https://registry.npmjs.org/copy-anything` 获取 HTTP 请求，状态码为 200（成功），耗时 286 毫秒。
83. 从 `https://registry.npmjs.org/needle/-/needle-2.6.0.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 34 毫秒。
84. `needle@^2.5.2` 的范围清单在 167 毫秒内从缓存中获取。
85. 从 `https://registry.npmjs.org/copy-anything/-/copy-anything-2.0.1.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 35 毫秒。
86. `copy-anything@^2.0.1` 的范围清单在 326 毫秒内从缓存中获取。
87. `postcss-value-parser@^4.0.0` 的范围清单在 1 毫秒内从缓存中获取。
88. 从 `https://registry.npmjs.org/nanoid` 获取 HTTP 请求，状态码为 200（成功），耗时 311 毫秒。
89. 从 `https://registry.npmjs.org/nanoid/-/nanoid-3.1.20.tgz` 获取 HTTP 请求，状态码为 200（成功），耗时 56 毫秒。
90. `nanoid@^3.1.20` 的范围清单在 373 毫秒内从缓存中获取。
91. `resolve@^1.1.7` 的范围清单在 1 毫秒内从缓存中获取。
92. `cosmiconfig@^7.0.0` 的范围清单在 33 毫秒内从缓存中获取。
93. `semver@^5.5.1` 的范围清单在 2 毫秒内从缓存中获取。
94. `@babel/parser@^7.12.7` 的范围清单在 1 毫秒内从缓存中获取。
95. `@babel/types@^7.12.7` 的范围清单在 1 毫秒内从缓存中获取。
96. 从 `https://registry.npmjs.org/ts-pnp` 获取 HTTP 请求，状态码为 304（未修改），耗时 301 毫秒（来自缓存）。
97. 从 `https://registry.npmjs.org/read-cache` 获取 HTTP 请求，状态码为 304（未修改），耗时 293 毫秒（来自缓存）。
98. `read-cache@^1.0.0` 的范围清单在 309 毫秒内从缓存中获取。
99. `ts-pnp@^1.1.6` 的范围清单在 333 毫秒内从缓存中获取。
100. `iconv-lite@^0.6.2` 的范围清单在 1 毫秒内从缓存中获取。
101. 从 `https://registry.npmjs.org/neo-async` 获取 HTTP 请求，状态码为 304（未修改），耗时 98 毫秒（来自缓存）。
102. `neo-async@^2.6.2` 的范围清单在 103 毫秒内从缓存中获取。
103. `chalk@^2.0.1` 的范围清单在 2 毫秒内从缓存中获取。
104. 从 `https://registry.npmjs.org/abab` 获取 HTTP 请求，状态码为 304（未修改），耗时 75 毫秒（来自缓存）。
105. `abab@^2.0.5` 的范围清单在 134 毫秒内从缓存中获取。
106. 从 `https://registry.npmjs.org/whatwg-mimetype` 获取 HTTP 请求，状态码为 304（未修改），耗时 133 毫秒（来自缓存）。
107. `debug@~3.1.0` 的范围清单在 18 毫秒内从缓存中获取。
108. `mkdirp@~1.0.4` 的范围清单在 1 毫秒内从缓存中获取。
109. `whatwg-mimetype@^2.3.0` 的范围清单在 151 毫秒内从缓存中获取。
110. 从 `https://registry.npmjs.org/safer-buffer` 获取 HTTP 请求，状态码为 304（未修改），耗时 44 毫秒（来自缓存）。
111. `safer-buffer@^2.1.2` 的范围清单在 45 毫秒内从缓存中获取。
112. `source-map@^0.7.3` 的范围清单在 6 毫秒内从缓存中获取。
113. `istanbul-lib-instrument@^4.0.3` 的范围清单在 2 毫秒内从缓存中获取。
114. 从 `https://registry.npmjs.org/sax` 获取 HTTP 请求，状态码为 304（未修改），耗时 84 毫秒（来自缓存）。
115. 从 `https://registry.npmjs.org/merge-source-map` 获取 HTTP 请求，状态码为 304（未修改），耗时 83 毫秒（来自缓存）。
116. `sax@~1.2.4` 的范围清单在 126 毫秒内从缓存中获取。
117. `schema-utils@^2.7.0` 的范围清单在 1 毫秒内从缓存中获取。
118. `merge-source-map@^1.1.0` 的范围清单在 89 毫秒内从缓存中获取。
119. `commander@^2.20.0` 的范围清单在 4 毫秒内从缓存中获取。
120. `source-map@~0.7.2` 的范围清单在 2 毫秒内从缓存中获取。
121. `source-map-support@~0.5.19` 的范围清单在 1 毫秒内从缓存中获取。
122. `jest-worker@^26.5.0` 的范围清单在 4 毫秒内从缓存中获取。
123. `terser@^5.3.4` 的范围清单在 21 毫秒内从缓存中获取。
124. `mime@^2.4.4` 的范围清单在 3 毫秒内从缓存中获取。
125. `mkdirp@^0.5.1` 的范围清单在 1 毫秒内从缓存中获取。
126. 从 `https://registry.npmjs.org/css-parse` 获取 HTTP 请求，状态码为 304（未修改），耗时 304 毫秒（来自缓存）。
127. 从 `https://registry.npmjs.org/memory-fs` 获取 HTTP 请求，状态码为 304（未修改），耗时 58 毫秒（来自缓存）。
128. `css-parse@~2.0.0` 的范围清单在 310 毫秒内从缓存中获取。
129. `memory-fs@^0.4.1` 的范围清单在 65 毫秒内从缓存中获取。
130. 从 `https://registry.npmjs.org/webpack-log` 获取 HTTP 请求，状态码为 304（未修改），耗时 80 毫秒（来自缓存）。
131. `webpack-log@^2.0.0` 的范围清单在 87 毫秒内从缓存中获取。
132. 从 `https://registry.npmjs.org/@webassemblyjs%2fhelper-module-context` 获取 HTTP 请求，状态码为 304（未修改），耗时 114 毫秒（来自缓存）。
133. `@webassemblyjs/helper-module-context@1.9.0` 的版本清单在 119 毫秒内从缓存中获取。
134. 从 `https://registry.npmjs.org/@webassemblyjs%2fwasm-edit` 获取 HTTP 请求，状态码为 304（未修改），耗时 90 毫秒（来自缓存）。
135. `@webassemblyjs/wasm-edit@1.9.0` 的版本清单在 96 毫秒内从缓存中获取。
136. 从 `https://registry.npmjs.org/acorn` 获取 HTTP 请求，状态码为 304（未修改），耗时 63 毫秒（来自缓存）。
137. 从 `https://registry.npmjs.org/@webassemblyjs%2fwasm-parser` 获取 HTTP 请求，状态码为 304（未修改），耗时 97 毫秒（来自缓存）。
138. `acorn@^6.4.1` 的范围清单在 81 毫秒内从缓存中获取。
139. `@webassemblyjs/wasm-parser@1.9.0` 的版本清单在 104 毫秒内从缓存中获取。
140. `ajv@^6.10.2` 的范围清单在 42 毫秒内从缓存中获取。
141. 从 `https://registry.npmjs.org/ajv-keywords` 获取 HTTP 请求，状态码为 304（未修改），耗时 90 毫秒（来自缓存）。
142. 从 `https://registry.npmjs.org/chrome-trace-event` 获取 HTTP 请求，状态码为 304（未修改），耗时 53 毫秒（来自缓存）。
143. `ajv-keywords@^3.4.1` 的范围清单在 95 毫秒内从缓存中获取。
144. `chrome-trace-event@^1.0.2` 的范围清单在 85 毫秒内从缓存中获取。
145. 从 `https://registry.npmjs.org/enhanced-resolve` 获取 HTTP 请求，状态码为 304（未修改），耗时 93 毫秒（来自缓存）。
146. `enhanced-resolve@^4.3.0` 的范围清单在 98 毫秒内从缓存中获取。
147. 从 `https://registry.npmjs.org/eslint-scope` 获取 HTTP 请求，状态码为 304（未修改），耗时 85 毫秒（来自缓存）。
148. `eslint-scope@^4.0.3` 的范围清单在 117 毫秒内从缓存中获取。
149. 从 `https://registry.npmjs.org/json-parse-better-errors` 获取 HTTP 请求，状态码为 304（未修改），耗时 68 毫秒（来自缓存）。
150. 从 `https://registry.npmjs.org/loader-runner` 获取 HTTP 请求，状态码为 304（未修改），耗时 53 毫秒（来自缓存）。
151. `loader-runner@^2.4.0` 的范围清单在 58 毫秒内从缓存中获取。
152. `loader-utils@^1.2.3` 的范围清单在 1 毫秒内从缓存中获取。
153. `json-parse-better-errors@^1.0.2` 的范围清单在 112 毫秒内从缓存中获取。
154. `neo-async@^2.6.1` 的范围清单在 1 毫秒内从缓存中获取。
155. 从 `https://registry.npmjs.org/node-libs-browser` 获取 HTTP 请求，状态码为 304（未修改），耗时 64 毫秒（来自缓存）。
156. `node-libs-browser@^2.2.1` 的范围清单在 69 毫秒内从缓存中获取。
157. 从 `https://registry.npmjs.org/micromatch` 获取 HTTP 请求，状态码为 304（未修改），耗时 86 毫秒（来自缓存）。
158. `micromatch@^3.1.10` 的范围清单在 92 毫秒内从缓存中获取。
159. `schema-utils@^1.0.0` 的范围清单在 21 毫秒内从缓存中获取。
160. `terser-webpack-plugin@^1.4.3` 的范围清单在 18 毫秒内从缓存中获取。
161. 从 `https://registry.npmjs.org/tapable` 获取 HTTP 请求，状态码为 304（未修改），耗时 91 毫秒（来自缓存）。
162. 从 `https://registry.npmjs.org/watchpack` 获取 HTTP 请求，状态码为 304（未修改），耗时 82 毫秒（来自缓存）。

---