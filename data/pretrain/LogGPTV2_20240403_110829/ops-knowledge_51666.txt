User: How to use Ansible for automated configuration management? Please provide an Ansible playbook and explain what each part does.
Assistant: Taking configuring an Nginx web server as an example, the following is a basic Ansible playbook: ``` - name: Configure nginx server hosts: webserver become: true tasks: - name: Install nginx package apt: name: nginx state: present - name : Copy nginx.conf file copy: src: nginx.conf dest: /etc/nginx/nginx.conf notify: Restart nginx handlers: - name: Restart nginx service: name: nginx state: restarted ``` Explanation: - `name `: Define the name of the entire Playbook. - `hosts`: Define the host group to operate, here is `webserver`. - `become`: Execute this Playbook with sudo privileges. - `tasks`: Defines the list of tasks to be executed in the Playbook. - `apt`: Install Nginx packages using the `apt` module. - `copy`: use the `copy` module to copy the local `nginx.conf` file to the `/etc/nginx/nginx.conf` file of the target host. - `notify`: Trigger `Restart nginx` handler after successful execution of `copy` task. - `handlers`: Contains a list of handlers to perform one or more actions when the task succeeds or fails. - `service`: Restart the Nginx service using the `service` module. The main function of this Playbook is to install the Nginx software package on the `webserver` host, copy the local `nginx.conf` file to the specified location on the target host, and then restart the Nginx service to realize the configuration of the web server.