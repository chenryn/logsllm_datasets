the parallel-cloud outsourced ABE. Obviously, the compu-
tational complexity of our schemes is independent from the
complexity of access policy, which only needs a constant time
to recover the plaintext.
Next, we implement the original CP-ABE and our schem-
es using the Java Pairing-Based Cryptography Library [1].
We use Type A elliptic curve of 160-bit group order, which
provides 1024-bit discrete log security equivalently. The ex-
periments are conducted on the Raspberry Pi 2 [2], with
700MHz ARM A6 microprocessor and 512 MB RAM, to
simulate the resource-constrained IoT devices such as smart
phones acting as the gateway for wearable devices and smart
meters. We launch multiple Amazon EC2 and Windows
Azure instances to simulate the cloud service providers in
our schemes. The partial decryption in the clouds in the
parallel-cloud scheme is obviously eﬃcient since all the cloud
servers decrypt the corresponding pieces simultaneously. How-
ever, for the chain-cloud scheme, since the partial decryp-
tion is conducted in a sequential manner, we are interested
in evaluating the delay introduced by the chain structure.
Figure 5 compares the decryption time of the original CP-
ABE, our proposed parallel-cloud CP-ABE and chain-cloud
CP-ABE on the Raspberry Pi 2, using a multi-cloud plat-
form of 5 clouds. Our asymptotic complexity analysis is con-
ﬁrmed by the real implementation, that is, the decryption
time of the original CP-ABE is proportional to the complex-
ity of the access structure, while the overhead in our schemes
is signiﬁcantly reduced to a constant value, regardless of the
access structure. This shows the beneﬁt of lightweight de-
cryption introduced by the outsourcing.
Finally, we evaluate the delay introduced by the multi-
cloud structure. To evaluate the chain-cloud scheme, we
connect the instances of EC2 and Azure alternately to mea-
sure the delay, since the communication time between two
servers from the same cloud service provider (e.g., two Ama-
zon instances) is negligible. The round trip time (RTT) of
two EC2 virtual machines (VMs) is less than 2 milliseconds,
while the RTT between an EC2 VM and an Azure VM is
around 60 milliseconds. The sender and the recipient are
synchronized through a Socket communication.
Table 2 compares the delay between the time of sending
out the ciphertext and the time of receiving all the par-
tially decrypted ciphertexts from the cloud servers. In this
experiment, the message is encrypted under an access pol-
icy with 60 attributes. We use the single-cloud outsourced
ABE as the base line, and compares the delay in the 2-cloud
and 5-cloud settings. We see that the parallel-cloud scheme
achieves the best performance in terms of delay, since each
cloud partially decrypts a small part of the ciphertext and
transmits it in a parallel way. Compared to the base line, the
chain-scheme has a larger delay, because all the clouds need
to sequentially decrypt the ciphertext, which introduces the
transmission delay and the delay caused by the serialization
and un-serialization of data for network transmission.
38
80000
60000
(cid:3)
(cid:71)
(cid:81)
(cid:82)
(cid:70)
(cid:72)
(cid:86)
(cid:76)
(cid:79)
(cid:79)
(cid:76)
(cid:3)
40000
(cid:80)
(cid:81)
(cid:76)
(cid:3)
(cid:72)
20000
(cid:80)
60 (cid:55)
(cid:76)
0
(cid:38)(cid:51)(cid:16)(cid:36)(cid:37)(cid:40)
(cid:50)(cid:51)(cid:16)(cid:38)(cid:51)(cid:16)(cid:36)(cid:37)(cid:40)
(cid:50)(cid:38)(cid:16)(cid:38)(cid:51)(cid:16)(cid:36)(cid:37)(cid:40)
24228 
12185 
61228 
48933 
36437 
0
20
(cid:49)(cid:88)(cid:80)(cid:69)(cid:72)(cid:85)(cid:3)(cid:82)(cid:73)(cid:3)(cid:68)(cid:87)(cid:87)(cid:85)(cid:76)(cid:69)(cid:88)(cid:87)(cid:72)(cid:86)(cid:3)(cid:76)(cid:81)(cid:3)(cid:68)(cid:70)(cid:70)(cid:72)(cid:86)(cid:86)(cid:3)(cid:83)(cid:82)(cid:79)(cid:76)(cid:70)(cid:92)(cid:3)
60
40
80
100
Figure 5: Comparison of the decryption time between the
original CP-ABE, the parallel-cloud outsourced CP-ABE
and the chain-cloud outsourced CP-ABE with varying num-
ber of attributes in the access structure.
6. RELATED WORK
Attribute-based messaging. Extensive studies have been
done on secure data publishing. Bobba et al. developed an
attribute-based messaging system where senders can dynam-
ically create a list of recipients based on their attributes [6].
However, this scheme incurs high computational overhead
and thus only suits for traditional PC-based applications.
Fadlullah et al. proposed a secure targeted broadcast scheme
for smart grid where the utility encrypts a message using key
policy attribute-based encryption (KP-ABE) and broadcasts
the ciphertext to a speciﬁc group of users [9]. KP-ABE is
the ﬁrst ABE scheme introduced by Sahai and Waters [12].
In KP-ABE, each encrypted message is labeled with a set of
attributes and each user is assigned a private key associated
with an access structure. A user decrypts an encrypted mes-
sage only when the attributes associated with the ciphertext
satisfy her access policy. Compared to CP-ABE, KP-ABE
is less expressive in specifying who has access to the en-
crypted message. Fadlullah’s ABE-based broadcast exploits
the original KP-ABE construction without outsourcing the
decryption operation. Although it avoids the problem of
attribute privacy leakage, it imposes a very large computa-
tional overhead on receivers, which is prohibitively high for
resource-constrained devices. In [15], the authors proposed
a practical ABE-based data sharing scheme using CP-ABE
and the outsourcing technique to reduce the overhead on
smart meters. However, this scheme is still susceptible to
the privacy leakage risk, that is, when a user delegates all
the attributes to a single cloud, the cloud is able to infer her
sensitive information from the attributes.
Veriﬁable outsourced attribute-based encryption. The
presented work is also related to veriﬁable outsourced ABE.
While the outsourced schemes [13, 29, 15] protect the data
privacy, they provide no guarantee to the correctness of the
transformation performed by the cloud server. Lai et al.
implemented a veriﬁable outsourced ABE approach by at-
taching an additional encrypted random message to the real
message and computing the digest of the two messages to-
gether [16]. The receiver recovers both messages and checks
the digest to verify the correctness of the received messages.
Similarly, Li et al. proposed an outsourced ABE with check-
ability by adding a redundant pre-shared k-length bit string
to each message. The receiver can detect the dishonest ac-
tion by checking the bit string. Although these schemes
can verify the correctness of the transformation at the cloud
server, they provide no guarantee to the completeness of the
[12] V. Goyal, O. Pandey, A. Sahai, and B. Waters.
Attribute-based encryption for ﬁne-grained access
control of encrypted data. In CCS, 2006.
[13] M. Green, S. Hohenberger, and B. Waters.
Outsourcing the decryption of abe ciphertexts. In
USENIX Security Symposium, volume 2011, 2011.
[14] V. Gulisano, M. Almgren, and M. Papatriantaﬁlou.
Online and scalable data validation in advanced
metering infrastructures. In Innovative Smart Grid
Technologies Conference Europe. IEEE, 2014.
[15] J. Hur. Attribute-based secure data sharing with
hidden policies in smart grid. Parallel and Distributed
Systems, IEEE Transactions on, 2013.
[16] J. Lai, R. H. Deng, C. Guan, and J. Weng.
Attribute-based encryption with veriﬁable outsourced
decryption. Information Forensics and Security, IEEE
Transactions on, 8(8):1343–1354, 2013.
[17] F. Li and B. Luo. Preserving data integrity for smart
grid data aggregation. In SmartGridComm, 2012.
[18] F. Li, B. Luo, and P. Liu. Secure information
aggregation for smart grids using homomorphic
encryption. In SmartGridComm. IEEE, 2010.
[19] J. Li, X. Huang, J. Li, X. Chen, and Y. Xiang.
Securely outsourcing attribute-based encryption with
checkability. Parallel and Distributed Systems, IEEE
Transactions on, 25(8):2201–2210, 2014.
[20] L. Liu, M. Esmalifalak, Q. Ding, V. A. Emesih, and
Z. Han. Detecting false data injection attacks on
power grid by sparse optimization. Smart Grid, IEEE
Transactions on, 5(2):612–621, 2014.
[21] R. Lu, X. Liang, X. Li, X. Lin, and X. S. Shen. Eppa:
An eﬃcient and privacy-preserving aggregation
scheme for secure smart grid communications. Parallel
and Distributed Systems, IEEE Transactions on, 2012.
[22] R. Lu, X. Lin, and X. Shen. Spoc: A secure and
privacy-preserving opportunistic computing
framework for mobile-healthcare emergency. Parallel
and Distributed Systems, IEEE Transactions on, 2013.
[23] D. Miorandi, S. Sicari, F. De Pellegrini, and
I. Chlamtac. Internet of things: Vision, applications
and research challenges. Ad Hoc Networks, 2012.
[24] C. Papamanthou, R. Tamassia, and N. Triandopoulos.
Optimal veriﬁcation of operations on dynamic sets. In
Advances in Cryptology. Springer, 2011.
[25] Y. Ren, R. W. N. Pazzi, and A. Boukerche.
Monitoring patients via a secure and mobile healthcare
system. Wireless Communications, IEEE, 2010.
[26] A. Shamir. How to share a secret. Communications of
the ACM, 22(11):612–613, 1979.
[27] L. Yang and F. Li. Detecting false data injection in
smart grid in-network aggregation. In Smart Grid
Communications, IEEE Conference on. IEEE, 2013.
[28] Q. Zheng, S. Xu, and G. Ateniese. Vabks: veriﬁable
attribute-based keyword search over outsourced
encrypted data. In Infocom, IEEE, 2014.
[29] Z. Zhou and D. Huang. Eﬃcient and secure data
storage operations for mobile cloud computing. In
Network and Service Management, 2012.
forwarded messages. That is, checking whether the cloud
completely forwards all messages that a user is qualiﬁed to
receive. This problem is somehow related to veriﬁable com-
putation [11, 24] and veriﬁable searchable encryption [28],
which guarantee the returned result is correct and complete.
However, these schemes rely on either expensive fully homo-
morphic encryption or the pre-sharing of certain knowledge
about the underlying message between the sender and the re-
ceiver, which is obviously infeasible in the privacy-preserving
targeted broadcast applications.
7. CONCLUSION
In this paper, we present two multi-cloud outsourced-ABE
schemes for privacy preserving targeted broadcast for IoT
devices. By enforcing the collaboration between multiple
clouds, our schemes signiﬁcantly reduce the computational
overhead at the resource-constrained IoT devices. The new
schemes protect data privacy, attribute privacy and access
policy privacy. To the best of our knowledge, this is the ﬁrst
work to utilize multi-cloud structure to prevent the disclo-
sure of attributes and access policies in outsourcing. Our
schemes also provide veriﬁability, which allows receivers to
verify the correctness and completeness of the outsourced
operations. Through intensive security analysis and exper-
iments with simulated IoT devices and commercial cloud
platforms, we demonstrate the security guarantees and out-
standing performance of the proposed schemes.
8. ACKNOWLEDGMENT
This work was partially supported by the National Sci-
ence Foundation under Award DGE1565570 and KU RIC
Strategic Initiative Grant under Award INS0073037.
9. REFERENCES
[1] Java Pairing-Based Cryptography Library.
http://gas.dia.unisa.it/projects/jpbc/.
[2] Raspberry Pi. https://www.raspberrypi.org/.
[3] The 10 most popular Internet of Things applications.
http://iot-analytics.com/
10-internet-of-things-applications/.
[4] J. Bethencourt, A. Sahai, and B. Waters.
Ciphertext-policy attribute-based encryption. In
Security and Privacy, IEEE Symposium on, 2007.
[5] B. H. Bloom. Space/time trade-oﬀs in hash coding
with allowable errors. Communications of the ACM,
13(7):422–426, 1970.
[6] R. Bobba, O. Fatemieh, F. Khan, C. A. Gunter, and
H. Khurana. Using attribute-based access control to
enable attribute-based messaging. In ACSAC, 2006.
[7] D. Boneh, C. Gentry, and B. Waters. Collusion
resistant broadcast encryption with short ciphertexts
and private keys. In Advances in Cryptology, 2005.
[8] P. Cerwall. Ericsson mobility report, 2015.
[9] Z. M. Fadlullah, N. Kato, R. Lu, X. Shen, and
Y. Nozaki. Toward secure targeted broadcast in smart
grid. Communications Magazine, IEEE, 2012.
[10] A. Fiat and M. Naor. Broadcast encryption. In
Advances in Cryptology, 1993.
[11] R. Gennaro, C. Gentry, and B. Parno. Non-interactive
veriﬁable computing: Outsourcing computation to
untrusted workers. In Advances in Cryptology. 2010.
39