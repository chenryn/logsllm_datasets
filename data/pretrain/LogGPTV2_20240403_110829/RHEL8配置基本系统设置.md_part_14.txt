    Apache HTTP 服务器的服务单元名为
    `httpd.service`{.literal}。要激活这个服务单元并在当前会话中启动
    `httpd`{.literal} 守护进程，以 `root`{.literal}
    用户身份输入以下命令：
    ``` literallayout
    # systemctl start httpd.service
    ```
    :::
    :::
:::
::: itemizedlist
**其它资源**
-   [正（正）和负状态服务依赖项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#positive-and-negative-service-dependencies_managing-system-services-with-systemctl){.link}
-   [启用系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#enabling-a-system-service_managing-system-services-with-systemctl){.link}
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#stopping-a-system-service_managing-system-services-with-systemctl}停止系统服务 {.title}
:::
您可以使用 `stop`{.literal} 命令在当前会话中停止系统服务。您必须具有
`root`{.literal} 访问权限，因为停止服务可能会影响操作系统的状态。
::: itemizedlist
**流程**
-   要停止与系统服务对应的服务单元，以 `root`{.literal}
    用户身份输入以下命令：
    ``` literallayout
    # systemctl stop .service
    ```
    将 [*\*]{.emphasis} 替换为您要停止的服务单元的名称（例如：
    `bluetooth`{.literal}）。
    ::: example
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142139881888}
    **例 14.3. 停止 bluetoothd.service**
    ::: example-contents
    `bluetoothd`{.literal} 守护进程的服务单元名为
    `bluetooth.service`{.literal}。要取消激活这个服务单元并在当前会话中停止
    `bluetoothd`{.literal} 守护进程，以 `root`{.literal}
    用户身份输入以下命令：
    ``` literallayout
    # systemctl stop bluetooth.service
    ```
    :::
    :::
:::
::: itemizedlist
**其它资源**
-   [禁用系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#disabling-a-system-service_managing-system-services-with-systemctl){.link}
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#restarting-a-system-service_managing-system-services-with-systemctl}重启系统服务 {.title}
:::
您可以使用 `restart`{.literal} 命令在当前会话中重启系统服务。您必须具有
`root`{.literal} 访问权限，因为重新启动服务可能会影响操作系统的状态。
这个步骤描述了如何：
::: itemizedlist
-   在当前会话中停止所选服务单元，并立即重新启动它
-   仅在相应服务已在运行时重启服务单元
-   重新加载系统服务配置，而不中断其执行
:::
::: itemizedlist
**流程**
-   要重启与系统服务对应的服务单元，以 `root`{.literal}
    用户身份输入以下命令：
    ``` literallayout
    # systemctl restart .service
    ```
    将 [*\ 替换为您要重启的服务单元的名称*]{.emphasis} （例如
    `httpd`{.literal}）。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果所选服务单元没有运行，这个命令也会启动它。
    :::
    ::: itemizedlist
    -   另外，只有在相应服务已在运行时重启服务单元，以 `root`{.literal}
        用户身份输入以下命令：
        ``` literallayout
        # systemctl try-restart .service
        ```
    -   要在不中断服务执行的情况下重新载入配置，以 `root`{.literal}
        用户身份输入以下命令：
        ``` literallayout
        # systemctl reload .service
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        不支持此功能的系统服务忽略此命令。要重新启动这些服务，请改为使用
        `reload-or-restart`{.literal} 和
        `reload-or-try-restart`{.literal} 命令。
        :::
    :::
    ::: example
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142132044912}
    **例 14.4. 重新加载 httpd.service**
    ::: example-contents
    为了防止用户遇到不必要的错误消息或部分呈现的 Web 页面，Apache HTTP
    服务器允许您编辑和重新加载其配置，而无需重新启动它并中断主动处理的请求。要做到这一点，以
    `root`{.literal} 用户身份输入以下内容：
    ``` literallayout
    # systemctl reload httpd.service
    ```
    :::
    :::
:::
::: itemizedlist
**其它资源**
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#enabling-a-system-service_managing-system-services-with-systemctl}启用系统服务 {.title}
:::
您可以将服务配置为在系统引导时自动启动。`enable`{.literal}
命令读取所选服务单元的 `[Install]`{.literal} 部分，并在
`/ etc/systemd/system/ 目录及其子目录中创建指向 /usr/lib/systemd/system/`{.literal}
[*name*]{.emphasis}.service``{=html}
文件的适当符号链接。但是，它不会重写已经存在的链接。
::: itemizedlist
**流程**
-   要配置与系统服务对应的服务单元，在引导时自动启动，以
    `root`{.literal} 用户身份输入以下命令：
    ``` literallayout
    # systemctl enable .service
    ```
    将 [*\ 替换为您要启用的服务单元的名称*]{.emphasis} （例如
    `httpd`{.literal}）。
    ::: itemizedlist
    -   如果要确保重新创建符号链接，以 `root`{.literal}
        用户身份输入以下命令：
        ``` literallayout
        # systemctl reenable .service
        ```
        该命令禁用所选服务单元，并立即再次启用。
        ::: example
        []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142090037712}
        **例 14.5. 启用 httpd.service**
        ::: example-contents
        要将 Apache HTTP 服务器配置为在引导时自动启动，以
        `root`{.literal} 用户身份输入以下命令：
        ``` screen
        # systemctl enable httpd.service
        Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
        ```
        :::
        :::
    :::
:::
::: itemizedlist
**其它资源**
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
-   [启动系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#starting-a-system-service_managing-system-services-with-systemctl){.link}
:::
:::
::: section
::: titlepage
# []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#disabling-a-system-service_managing-system-services-with-systemctl}禁用系统服务 {.title}
:::
您可以防止服务单元在引导时自动启动。`disable`{.literal}
命令读取所选服务单元的 `[Install]`{.literal} 部分，并从
`/ etc/systemd/system/ 目录及其子目录中删除到 /usr/lib/systemd/system/`{.literal}
[*name*]{.emphasis}.service``{=html} 文件的适当符号链接。
::: itemizedlist
**流程**
-   要配置与系统服务对应的服务单元，在引导时不自动启动，以
    `root`{.literal} 用户身份输入以下命令：
    ``` literallayout
    # systemctl disable .service
    ```
    将 [*\ 替换为您要禁用的服务单元的名称*]{.emphasis} （例如：
    `bluetooth`{.literal}）。
    ::: example
    []{#managing-system-services-with-systemctl_configuring-basic-system-settings.html#idm140142160290112}
    **例 14.6. 禁用 bluetoothd.service**
    ::: example-contents
    `bluetoothd`{.literal} 守护进程的服务单元命名为
    `bluetooth.service`{.literal}。要防止这个服务单元在引导时启动，以
    `root 用户身份`{.literal} 输入以下命令：
    ``` literallayout
    # systemctl disable bluetooth.service
    Removed symlink /etc/systemd/system/bluetooth.target.wants/bluetooth.service.
    Removed symlink /etc/systemd/system/dbus-org.bluez.service.
    ```
    :::
    :::
    ::: itemizedlist
    -   要屏蔽所有服务单元并防止它被手动启动或其他服务，以
        `root`{.literal} 用户身份输入以下命令：
        ``` literallayout
        # systemctl mask .service
        ```
        这个命令将 `/etc/systemd/system/name.service`{.literal}
        文件替换为 `/dev/null`{.literal} 的符号链接，从而导致
        `systemd`{.literal} 无法访问实际的单元文件。
    -   要恢复这个动作并取消掩码一个服务单元，请输入：
        ``` literallayout
        # systemctl unmask .service
        ```
    :::
:::
::: itemizedlist
**其它资源**
-   [显示系统服务状态](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#displaying-system-service-status_managing-system-services-with-systemctl){.link}
-   [停止系统服务](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#stopping-a-system-service_managing-system-services-with-systemctl){.link}
:::
:::
:::
[]{#working-with-systemd-targets_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#working-with-systemd-targets_configuring-basic-system-settings.html#working-with-systemd-targets_configuring-basic-system-settings}第 15 章 使用 systemd 目标 {.title}
:::
systemd 目标由目标单元表示。目标单元文件以 `.target`{.literal}
文件扩展名结尾，它们的唯一用途是通过依赖项链将其他 systemd
单元分组在一起。例如，用于启动图形会话的
`graphical.target 单元`{.literal} 将启动系统服务，如 GNOME 显示管理器
`(gdm.service)`{.literal} 或帐户服务
`(accounts-daemon.service)`{.literal}，还激活
`multi-user.target 单元`{.literal}。同样，multi-user.target
单元会启动其他基本系统服务，如 NetworkManager
`(NetworkManager.service)或`{.literal} D-Bus
`(dbus.service)`{.literal}，并激活另一个名为 basic.target 的目标单元。
本节包括使用 `systemd`{.literal} 目标时要实施的步骤。
::: section
::: titlepage
# []{#working-with-systemd-targets_configuring-basic-system-settings.html#con_difference-between-sysv-runlevels-and-systemd-targets_working-with-systemd-targets}SysV 运行级别和 systemd 目标之间的区别 {.title}
:::
之前版本的 Red Hat Enterprise Linux 使用 SysV init 或 Upstart
发布，并实施一组代表特定操作模式的预定义运行级别。这些运行级别从 0 到
6，由系统管理员启用特定运行级别时要运行的系统服务选择定义。从 Red Hat
Enterprise Linux 7 开始，运行级别的概念已被 systemd 目标替代。
Red Hat Enterprise Linux 7
发布有多个预定义目标，它们与之前版本中的标准运行级别集类似。出于兼容性的原因，它还为这些目标提供了直接映射到
SysV 运行级别的别名。
下表提供了 SysV 运行级别及其相应的 systemd 目标的完整列表：
::: table
[]{#working-with-systemd-targets_configuring-basic-system-settings.html#tabl-systemd-Targets-Runlevels}
**表 15.1. SysV 运行级别与 systemd 目标的比较**
::: table-contents
  运行级别        目标单元                                                      描述
  --------------- ------------------------------------------------------------- --------------------------------
  `0`{.literal}   `runlevel0.target`{.literal}, `poweroff.target`{.literal}     关闭系统。
  `1`{.literal}   `runlevel1.target`{.literal}, `rescue.target`{.literal}       设置救援 shell。
  `2`{.literal}   `runlevel2.target`{.literal}, `multi-user.target`{.literal}   设置一个非图形化的多用户系统。
  `3`{.literal}   `runlevel3.target`{.literal}, `multi-user.target`{.literal}   设置一个非图形化的多用户系统。
  `4`{.literal}   `runlevel4.target`{.literal}, `multi-user.target`{.literal}   设置一个非图形化的多用户系统。
  `5`{.literal}   `runlevel5.target`{.literal}, `graphical.target`{.literal}    设置图形化多用户系统。
  `6`{.literal}   `runlevel6.target`{.literal}, `reboot.target`{.literal}       关闭并重启系统。
:::
:::
下表将 SysV init 命令与 systemctl 进行比较。使用 systemctl
实用程序查看、更改或配置 systemd 目标：
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`运行级别`{.literal} 和 `telinit`{.literal}
命令仍可在系统中使用，并可按预期工作，但仅出于兼容性原因而包括在内，因此应避免使用。
:::
::: table
[]{#working-with-systemd-targets_configuring-basic-system-settings.html#tabl-systemd-Targets-telinit}
**表 15.2. SysV init 命令与 systemctl 的比较**
::: table-contents
  旧命令                         新命令                                           描述
  ------------------------------ ------------------------------------------------ --------------------------
  `runlevel`{.literal}           `systemctl list-units --type target`{.literal}   列出当前载入的目标单元。
  `telinit runlevel`{.literal}   `systemctl isolate name.target`{.literal}        更改当前目标。
:::
:::
::: itemizedlist
**其它资源**
-   man `sysv init`{.literal}
-   man `upstart init`{.literal}
-   man `systemctl`{.literal}
:::
:::
::: section
::: titlepage
# []{#working-with-systemd-targets_configuring-basic-system-settings.html#proc_viewing-the-default-target_working-with-systemd-targets}查看默认对象 {.title}