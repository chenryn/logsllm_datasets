360 企业安全集团
Attacking Kerberos
演讲人：吴方东，n1nty @ 360 A-TEAM
2 0 1 8
吴方东，n1nty @ 360 A-TEAM
安全研究员
• 360 企业安全集团旗下的纯技术研究团队。
• 致力于 Web 渗透，APT 攻防对抗，前瞻性攻防工具预研。
• 进行严肃、有深度的技术研究，深入还原攻与防的技术本质。
360 A-TEAM
资深失眠患者
服务端验证“你是否真的是你所声称的那个人”的过程
非加密通道会导致明文密码泄露
USERNAME/PASSWORD
我要登陆，这是我的账号密码
对比账号密码
成功
失败
•
不需要传输密码本身
•
可在非加密通道使用
USER01
我要登陆
告诉我你是谁，用你的密码加密这段随机数据：
kjdfADSF435@#$ASDfd)(
我是 USER01，这是我加密后的结果：.......
结果一样，成功
结果不一样，失败
基于票据的
身份认证协议
MIT 发明
微软进行了扩展
域环境下的
首选认证协议
• 账号密码认证
• 通过向服务端发送“账号密码”来证明自己的身份
• 挑战认证
• 通过向服务端发送“一段计算结果”来证明自己的身份
• Kerberos 认证
• 通过向服务端发送一张“票”，来证明自己的身份
KDC
•
域内最重要的服务器
•
统一保存着所有账号的密码
使用人：USER01，权限：xxx
允许访问的服务：SMB/SERVER1
到期时间：2018-08-24 
23:00:00
Session key
Kerberos Ticket
其他信息
KDC 印章
加密的 Kerberos 票据
KDC
•
域内最重要的服务器
•
统一保存着所有账号的密码
TGT – 访问 TGS 服务的票
普通票据 – 访问其他服务的票
TGT
普通票据
KDC
客户端访问任何
使用 Kerberos 认证的服务之前
利用 TGT 去向 KDC 换取访问目标服务
的
KDC
user01
server1
我是 user01
给我一张访问 smb\server1 的票
我是 user01，我要访问你的 smb 服务
这是证明我身份的票
KDC
1, AS-REQ
3, TGS-REQ
user01
server1
2, AS-REP
4, TGS-REP
5, AP-REQ
6, AP-REP
•
AS-REQ
•
“我是 user01，这是一段加密数据，来
证明我的身份”
•
AS-REP
•
“身份验证成功，给你一张能证明你是 
user01 的票（TGT），以及对应的 
Session Key”
AS-REQ
AS-REP
user01
KDC
AS-REQ
authenticator 验证因子
•
AS-REQ
•
“我是 user01，这是一段加密数据，来
证明我的身份”
•
AS-REP
•
“身份验证成功，给你一张能证明你是 
user01 的票（TGT），以及对应的 
Session Key”
AS-REQ
AS-REP
user01
KDC
AS-REP
加密的 TGT
加密的 Session Key
•
AS-REQ 不进行预身份认证时
•
“我是 user01，但是我不想提交 authenticator 来证明我的身份，请给我一张 TGT”
•
成功时，AS-REP
•
 “ user01 账号存在，并且配置了不要求进行预身份验证”
•
失败时，KRB-ERROR
•
PREAUTH-REQUIRED
•
UNKNOWN-PRINCIPLE
AS-REQ
AS-REP
user01
KDC
AS-REQ
去掉这段数据
发送 AS-REQ 请求时不进行预身份验证
根据返回的错误码可判断用户是否存在
响应类型
结果
AS-REP 响应
账号存在
且开启了 “不要求 Kerberos 预身份验证”选项
KRB-ERROR：PREAUTH-REQUIRED
账号存在
未开启 “不要求 Kerberos 预身份验证”选项
KRB-ERROR：CLIENT-REVOKED
账号存在
但是处于锁定状态
KRB-ERROR：UNKNOWN-PRINCIPLE
账号不存在
•
AS-REQ，由客户端发送至 KDC
•
“我是 user01，我不进行预身份验证，
请给我一张 TGT”
•
AS-REP，由 KDC 返回
•
“经过检查发现 user01 被配置为不需
要进行预身份验证，这里给你返回一个 
AS-REP，里面包含了你想要的 TGT，
以及与 TGT 配合使用的 session key”
    enc-part(session key) 部分被 RC4 算法加密，且密钥为 user01 账号的 NT HASH
离线暴力破解 enc-part 可还原 user01  的明文密码
AS-REQ 用户枚
举
LDAP 查询
USER01
USER02
USER03
不需要预身份认证
USER01 Session Key
USER02 Session Key
USER03 Session Key
被目标账号 NT HASH
加密的Session Key
AS-REQ
USER01 Session Key
USER02 Session Key
USER03 Session Key
被目标账号 NT HASH
加密的Session Key
离线暴破 
Session Key
P@ssword
1qazXSW@
111222
明文密码
•
离线暴破，不在域控留下日志
•
绕开密码锁定策略
Pass the 
Hash
NTLM
Pass the Key
KERBEROS
Overpass the Hash
在没有明文密码的情况下进行 NTLM/Kerberos 身份认证
•
AS-REQ
•
“我是 user01，这是一段加密数据，来证明我的身份”
•
AS-REP
•
“身份验证成功，给你一张能证明你是 user01 的票（TGT），以及对应的 Session 
Key”
AS-REQ
AS-REP
user01
KDC
加密算法
被加密数据
加密 Key
•
AS-REQ
•
“我是 user01，这是一段加密数据，来证明我的身份”
•
AS-REP
•
“身份验证成功，给你一张能证明你是 user01 的票（TGT），以及对应的 Session 
Key”
AS-REQ
AS-REP
user01
KDC
加密算法
KEY
AES 256
密码的 AES 256 KEY
AES 128
密码的 AES 128 KEY
RC4
密码的 NT HASH 格式
其他很多
被加密数据为当前时间戳
•
AS-REQ
•
“我是 user01，我利用  RC4 算法并以我密码的 NT HASH 做为 
KEY，加密了当前时间戳（authenticator），来证明我的身份”
•
AS-REP
•
“ 因为你利用的是 RC4 算法对 authenticator 进行加密，所以我
将同样利用 RC4 算法对 authenticator 进行解密， 并使用 
user01 账号的 NT HASH 做为 解密 Key。”
•
“解密成功，发现你传送过来的时间戳与服务器的当前时间戳误差在 
5 分钟以内，所以你确实是 user01，给你一张 TGT，以及对应的 
Session Key”
•
AS-REQ
•
“我是 user01，这是一段加密数据，来证明我的身份”
•
AS-REP
•
“身份验证成功，给你一张能证明你是 user01 的票（TGT） ，以及对应的 Session 
Key”
AS-REQ
AS-REP
user01
KDC
进行 Kerberos 验证的过程中，并没有涉及到账号的明文密码
TGS-REQ
TGS-REP
user01
KDC
•
。。。前面已经通过 AS-REQ 与 AS-REP 获取了 TGT
•
TGS-REQ
•
客户端：“我是 user01，我想申请一张访问 server1 的 smb 服务的票。这是我
的 TGT，以及一段加密数据来证明我知道 与 TGT 对应的 Session key”
•
TGS-REP
•
KDC：“您的 TGT 是合法的， 并且加密数据校验成功，这是一张能够访问 
server1 的 smb 服务的票（service ticket）以及 Session Key”
TGS-REQ
通过 AS-REQ 申请到的 TGT
authenticator