状态码
 201：返回正常。
11
 404：无该容器。
 406：容器不能附加为终端（容器已经停止）。
13
 500 ：服务器错误。
curl操作： 14
$ curl -X POST -H "Content-Type: application/json" http://localhost:2376/containers/create -d '{
"Hostname":"", 15
...
}'
16
3. 查看容器信息
方法：GET /containers/(id)/json 17
用例请求：GET /containers/4fa6e0f0c678/json HTTP/1.1
18
用例返回：
266 附录B Docker API列表
HTTP/1.1 200 OK
Content-Type: application/json
{
"Id": "4fa6e0f0c6786287e131c3852c58a2e01cc697a68231826813597e4994f1d6e2",
"Created": "2013-05-07T14:51:42.041847+02:00",
"Path": "date",
"Args": [],
...
}
参数：（无）
状态码
 200：返回正常。
 404：无该容器。
 500：服务器错误。
curl操作：
curl -X GET http://localhost:2376/containers/4fa6e0f0c678/json
4. 查看容器正在运行的进程
方法：GET /containers/(id)/top
用例请求：GET /containers/4fa6e0f0c678/top HTTP/1.1
用例返回：
HTTP/1.1 200 OK
Content-Type: application/json
{
"Titles":[
"USER",
"PID",
"%CPU",
"%MEM",
"VSZ",
"RSS",
"TTY",
"STAT",
"START",
"TIME",
"COMMAND"
],
"Processes":[
["root","20147","0.0","0.1","18060","1864","pts/4","S","10:06","0:00","bash"],
["root","20271","0.0","0.0","4312","352","pts/4","S+","10:07","0:00","sleep","10"]
]
}
附录B Docker API列表 267
参数
1
 ps_arg：ps命令的参数。
2
状态码：（略，重复状态码后续不再列出）
curl操作：
3
curl -X GET http://localhost:2376/containers/4fa6e0f0c678/top
4
5. 获取容器日志
获取指定容器的标准输出和标准错误输出。
5
方法：GET /containers/(id)/logs
用例请求：GET /containers/4fa6e0f0c678/logs?stderr=1&stdout=1&timestamps=1&follow=1& 6
tail=10 HTTP/1.1
7
用例返回：
HTTP/1.1 200 OK 9
Content-Type: application/vnd.docker.raw-stream
{{ STREAM }}
8
参数
 follow：1/True/true或者 0/False/false，流式返回，默认值为false。
10
 stdout：1/True/true或者 0/False/false，显示标准输出，默认值为false。
 stderr：1/True/true或者 0/False/false，显示标准错误输出，默认值为false。
10
 timestamps：1/True/true或者 0/False/false，打印日志时间戳。
 tail：只打印末尾的N行。
11
状态码：（略）
curl操作： 13
curl -X GET http://localhost:2376/containers/4fa6e0f0c678/logs?stderr=1&stdout=1&timestamps
14
=1&follow=1& tail=10
6. 查看容器的文件系统的变更
15
方法：GET /containers/(id)/changes
用例请求：GET /containers/4fa6e0f0c678/changes HTTP/1.1 16
用例返回：
17
HTTP/1.1 200 OK
Content-Type: application/json
[ 18
{
268 附录B Docker API列表
"Path":"/dev",
"Kind":0
},
]
参数：（无）
状态码：（略）
curl操作：
curl -X GET http://localhost:2376/containers/4fa6e0f0c678/changes
7. 导出容器
方法：GET /containers/(id)/export
用例请求：GET /containers/4fa6e0f0c678/export HTTP/1.1
用例返回：
HTTP/1.1 200 OK
Content-Type: application/octet-stream
{{ TAR STREAM }}
参数：（无）
状态码：（略）
curl操作：
curl -X GET http://localhost:2376/containers/4fa6e0f0c678/export
8. 启动容器
方法：POST /containers/(id)/start
用例请求：
POST /containers/(id)/start HTTP/1.1
Content-Type: application/json
用例返回：HTTP/1.1 204 No Content
参数：（无）
状态码：（略）
curl操作：
curl -X POST http://localhost:2376/containers/4fa6e0f0c678/start
9. 停止容器
方法：POST /containers/(id)/stop
附录B Docker API列表 269
用例请求：POST /containers/e90e34656806/stop?t=5 HTTP/1.1 1
用例返回：HTTP/1.1 204 No Content
2
参数
3
 t：延时多少秒后停止。
状态码 4
 304：容器已经停止。
5
curl操作：
curl -X POST http://localhost:2376/containers/4fa6e0f0c678/stop 6
10. 重启容器
7
方法：POST /containers/(id)/restart
用例请求：POST /containers/e90e34656806/restart?t=5 HTTP/1.1 9
用例返回：HTTP/1.1 204 No Content
8
参数
 t：延时多少秒后重启。
10
状态码：（略）
curl操作： 10
curl -X POST http://localhost:2376/containers/4fa6e0f0c678/restart
11
11. 杀死容器
方法：POST /containers/(id)/kill 13
用例请求：POST /containers/e90e34656806/kill HTTP/1.1
14
用例返回：HTTP/1.1 204 No Content
参数： 15
 signal：发送给容器的信号，如SIGINIT和SIGKILL。
16
状态码：（略）
curl操作：
17
curl -X POST http://localhost:2376/containers/4fa6e0f0c678/kill?signal=SIGKILL
18
270 附录B Docker API列表
12. 附加终端到容器
方法：POST /containers/(id)/attach
用例请求：POST /containers/16253994b7c4/attach?logs=1&stream=0&stdout=1 HTTP/1.1
用例返回：
HTTP/1.1 200 OK
Content-Type: application/vnd.docker.raw-stream
{{ STREAM }}
参数
 logs：其值为1/True/true或者0/False/false，表示是否返回日志，默认值为false。
 stream：其值为1/True/true或者0/False/false，表示是否返回数据流，默认值为false。
 stdin：其值为1/True/true或者0/False/false。如果stream=true，则附加标准输入stdin，
默认值为false。
 stdout：其值为1/True/true或者0/False/false。若logs=1，返回标准输出，若stream=true，
附加标准输出，默认值为false。
 stderr：其值为1/True/true或者0/False/false。若logs=true，返回标准错误日志，若
stream=true，附加到标准错误输出，默认值为false。
状态码：（略）
curl操作：
curl -X POST http://localhost:2376/containers/4fa6e0f0c678/ attach?logs=1&stream=0 &stdout=1
13. 暂停容器
方法：POST /containers/(id)/pause
用例请求：POST /containers/e90e34656806/pause HTTP/1.1
用例返回：HTTP/1.1 204 No Content
参数：（无）
状态码：（略）
curl操作：
curl -X POST http://localhost:2376/containers/ e90e34656806/pause
14. 重新运行暂停容器
方法：POST /containers/(id)/unpause
用例请求：POST /containers/e90e34656806/unpause HTTP/1.1
附录B Docker API列表 271
用例返回：HTTP/1.1 204 No Content 1
参数：（无）
2
状态码：（略）
curl操作：
3
curl -X POST http://localhost:2376/containers/ e90e34656806/ unpause
4
15. 等待容器停止
方法：POST /containers/(id)/wait
5
用例请求：POST /containers/16253994b7c4/wait HTTP/1.1
用例返回： 6
HTTP/1.1 200 OK
7
Content-Type: application/json
{"StatusCode":0}
参数：（无） 9
状态码：（略）
8
curl操作：
curl -X POST http://localhost:2376/containers/16253994b7c4/wait 10
16. 删除容器
10
方法：DELETE /containers/(id)
用例请求：DELETE /containers/16253994b7c4?v=1 HTTP/1.1 11
用例返回：HTTP/1.1 204 No Content
13
参数
 v：其值为1/True/true或者0/False/false，用于删除关联的数据卷，默认值为false。
14
 force：其值为1/True/true或者0/False/false，用于强制删除，默认值为false。
状态码：（略） 15
curl操作：
16
curl -X DELETE http://localhost:2376/containers/4fa6e0f0c678
17. 从容器中复制目录或文件 17
方法：POST /containers/(id)/copy
18
用例请求：
272 附录B Docker API列表
POST /containers/4fa6e0f0c678/copy HTTP/1.1