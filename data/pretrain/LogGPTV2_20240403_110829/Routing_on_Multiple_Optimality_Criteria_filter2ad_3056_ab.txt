combination of two distinct feasible solutions in the fea-
of the integer-relaxing problem, where
sible region F
(cid:7)
is deﬁned by constraints (2). In other words, an ex-
F
treme solution x is not equal to λ1x1 + λ2x2, given any
x1, x2 ∈ F
, and λ1 + λ2 = 1, 0 ≤ λ1, λ2 ≤ 1, if x (cid:8)= x1 and
x (cid:8)= x2. Extreme and nonextreme nondominated solu-
tions are those nondominated solutions satisfying and
dissatisfying this extreme condition, respectively.
(cid:7)
(cid:7)
A full nondominated objective set to an n-objective
shortest path problem is an n-dimensional objective vec-
tor that satisﬁes the nondominated conditions. A par-
tial nondominated objective set to the same problem is
an m-dimensional objective vector that satisﬁes the non-
dominated condition in terms of its m objectives, where
2 ≤ m ≤ n. Suppose an arbitrary feasible solution to an
n-objective shortest path problem. As we will discuss
later, if this solution is nondominated in terms of a par-
tial objective set, it is nondominated in terms of the full
objective set; if the solution is nondominated in terms of
the full objective set, it is nondominated in terms of at
least one of its partial objective set.
The algorithmic motivation of a parametric algo-
rithm resembles the use of Lagrangian multipliers in
solving an optimization problem with side constraints.
In a Lagrangian relaxation method, some “hard” side
constraints are relaxed and supplemented into the ob-
jective function as Lagrangian terms; then, the origi-
nal problem can be tackled by repeatedly solving the
Optimal routing with multiple objectives
⎡
⎢⎢⎣
(cid:12)
=
(cid:11)
⇒
w1
w2
z2,2 − z1,2
z1,1 − z2,1
(z2,2 − z1,2) + (z1,1 − z2,1)
(z2,2 − z1,2) + (z1,1 − z2,1)
81
⎤
⎥⎥⎦ (6)
relaxed problem with updating Lagrangian multipliers.
In a similar spirit, nondominated solutions of a multiob-
jective optimization problem may be obtained through
repeatedly solving a “relaxed” single-objective problem
whose objective function is a combination of all original
objectives with varying weighting parameters.
In its most frequently used form, a biobjective short-
est path problem may be parameterized to be a single-
objective problem (P2) via a convex combination.
min zw (x)=w · z (x)=
wl zl (x) =
(cid:4)
(i, j)∈E
(cid:4)
l=1,2
(cid:4)
l=1,2
subject to constraints (2)
xi j ≥ 0 ∀ (i, j) ∈ E
is
set
the parameter
(cid:10)
where w = (w1, w2)
l=1,2
and
wl = 1 and wl ≥ 0, ∀l, hold. It can be seen
that the parameterized problem is a standard shortest
path problem, where the attribute of arc (i, j) is also
that is, cw,i j = (cid:10)
a convex combination of the original arc attribute set,
wlcl,i j . Note that after this trans-
formation, the integrality constraint (3) is no longer
required for the parameterized problem;
instead, a
nonnegative constraint (2.5), xi j ≥ 0, ∀(i, j) ∈ E is used.
A generic parametric solution procedure for generat-
ing the objective parameter values and ﬁnding nondom-
inated solutions can be described as follows:
l=1,2
wlcl,i j xi j
(4)
(5)
Step 1 (Initialization): Set w1 = (1 − ε, ε) and w2 =
(ε, 1 − ε), where ε is a sufﬁciently small number,
that is, 0  z2,1 and z1,2 
z2,2); no more search effort needs to be spent in
this conﬁned region. We then delete the used vec-
tor pair (z1, z2) from the FIFO list.
Step 4 (Stopping criterion check): If the objective
vector list is empty, stop the search; otherwise, go
to Step 1. In case the complete set of nondominated
82
Xie & Waller
solution set is not required, we can use an alterna-
tive stopping criterion, such as a maximum number
of iterations or a maximum number of nondomi-
nated solutions generated to terminate the search
earlier.
The following proposition provides a proof for the
correctness of the constrained parametric method for
the biobjective shortest path algorithm and guarantees
the “convergence” of the complete nondominated solu-
tion set.
Proposition 1. Given two nondominated solutions, x1
and x2, and their corresponding objective vectors, z1
and z2, we intend to construct a parameterized prob-
lem min zw(x) in (4) for identifying a nondominated so-
lution to the biobjective shortest path problem. The op-
timal solution to the parameterized, doubly constrained
shortest path problem, if it exists, is another nondomi-
nated solution to the biobjective shortest path problem.
The collection of optimal solutions of all such param-
eterized problems is the complete set of extreme and
nonextreme nondominated solutions of the biobjective
problem.
Proof. It is clear that the objective functions of the op-
timal solution to the parameterized, doubly constrained
shortest path problem, z∗ = (z∗,1, z∗,2), satisfy the fol-
lowing condition:
z∗,1 ∈ (cid:15)
z∗,2 ∈ (cid:15)
(cid:16)
(cid:16)
min
min
z1,1, z2,1
z1,2, z2,2
, max
, max
z1,1, z2,1
z1,2, z2,2
(cid:17)
(cid:17)
(cid:16)
(cid:16)
(cid:17)(cid:18)
(cid:17)(cid:18)
Because it is the optimal solution, no other feasible
solution of the parameterized problem has a smaller ob-
jective function value, and nor does other feasible solu-
tion dominate it. Therefore, the optimal solution to the
parameterized problem is a nondominated solution to
the biobjective shortest path problem.
Now suppose that there exists a nondominated solu-
tion x∗
of the biobjective shortest path problem not in-
cluded in the nondominated solution set identiﬁed by
the constrained parametric method. We can sort all the
nondominated solutions in the increasing order in terms
of one of the objectives, which results in a nondomi-
nated solution sequence that has the decreasing order in
terms of the other objective (see Brumbaugh-Smith and
Shier, 1989). Then we choose a pair of consecutive non-
dominated solutions, x1 and x2, whose objective values
z1 and z2 satisfy z1,1  z∗,2 > z2,2.
It is apparent that such a nondominated solution x∗
can
be obtained by solving a parameterized, doubly con-
strained shortest path problem with its parameters de-
termined by x1 and x2 using the perpendicular method
(see (6)). This contradicts our hypothesis. Therefore,
solving parameterized problems with all possible pa-
rameters will result in a complete set of nondominated
solutions of the biobjective shortest path problem. (cid:2)
So far we have assumed that the parameterized prob-
lem can be optimally solved in Step 3; this optimal solu-
tion is also a nondominated solution to the biobjective
problem. However, if the optimality is not guaranteed
(i.e., suboptimal) in Step 3, an extra step called domi-
nance check needs to be inserted between Step 4 and
Step 5. The purpose of this step is to check whether the
nondominated solution obtained in Step 3 dominates
any other existing candidate nondominated solutions in
the FIFO list. If any candidate nondominated solution
is found to be dominated, it should be deleted from the
FIFO list.
Note that for the doubly constrained shortest path
problem in Step 3, an upper bound is imposed for each
objective that is the larger one of the objective func-
tion values of the two parameter-generating solutions
x1 and x2 (see (8)). This constraint conﬁnes the search
in the restricted solution space by the two given non-
dominated solutions, x1 and x2, and enables nonex-
treme nondominated solutions, if any, to not be domi-
nated by x1 and x2 in solving the parameterized prob-
lem. Given these added constraints, the integrality con-
straint (9) must be included in the constrained short-
est path problem, which introduces the combinatorial
complexity.
The constrained shortest path problem is an NP-hard
problem due to this arising combinatorial complexity.
No efﬁcient algorithm is available to ﬁnd the optimal
solution of any constrained shortest path problem in
polynomial time. A variety of approximate solution al-
gorithms have been proposed for the constrained prob-
lem,
including implicit enumeration method (Aneja
et al., 1983), Lagrangian relaxation method (Handler
and Zang, 1980; Jaffe, 1984; Carlyle et al., 2008), dis-
tributed method (Reeves and Salama, 2000; Sun and
Langendorfer, 1998), ε-approximation method (Hassin,
1992; Lorenz and Raz, 2001), etc. Among these algo-
rithm developments, Hassin’s (1992), Jaffe’s (1984), and
Carlyle et al.’s (2008) methods can perform with a
pseudo-polynomial complexity for exact solutions. A
computational review of exact and approximate algo-
rithms for the constrained shortest path problem is
offered by Dumitrescu and Boland (2003). However,
in general, depending on the desired solution quality,
these algorithms may be still too expensive to be applied
to large networks with multiple constraints (Korkmaz et
al., 2002).
2.3 A constrained shortest path subroutine
To limit the computational complexity in a polynomial-
time bound, we propose an approximate algorithm that
Optimal routing with multiple objectives
83
(cid:20)
,
(cid:19)
z(k,q)
l,1
, z(k,q)
l,2
for each (i, j) ∈ A(i) do
begin
if dl(i) + cl,i j + d
(cid:7)
l ( j) < max
∀l = 1, 2 then
if d(i) +(cid:10)
begin
wq
can ﬁnd an optimal or near-optimal solution of the dou-
bly constrained shortest path problem through a dy-
namic programming process. This procedure has an al-
gorithmic structure analogous to a typical label-setting
method for the standard shortest path problem, which
starts from origin node r with setting its label equal to
0 and permanently labels nodes in the order of their
distances from node r until destination node s or all
nodes in the network are permanently labeled. How-
ever, this approximate algorithm maintains three labels
for each node j in addition to the label recording the
upstream node: one for the parameterized objective,
d( j) = w1d1( j) + w2d2( j), and two for the two single
objectives, d1( j) and d2( j), respectively. The purpose
of using the two single-objective labels is to make any
obtained solution satisfy the objective constraint (i.e.,
constraint (8)). This is simply realized by a feasibility
check during the dynamic scanning and updating pro-
cess, which is conducted for every node j when a new
temporary label set for this node is formed through an
upstream node i; it simply checks whether, for each ob-
jective l, the temporary label formed by a path from
origin node r to this node j via an upstream node i,
dl(i) + cl,i j , plus the permanent label formed by the
predetermined shortest path from destination node s
(cid:7)
l ( j), satisﬁes the corresponding objective
to node j, d
constraint, that is, dl(i) + cl,i j + d
(cid:7)
l ( j) < max (z1,l , z2,l).
If the feasibility check for both objectives is passed,
the temporary label for the parameterized objective,
w1(d1( j) + c1,i j ) + w2(d2( jt) + c2,i j ), is then compared
to the existing parameterized label at this node to de-
termine if an updating for this label is required; other-
wise, the temporary label set is discarded. If such an up-
dating is warranted, the whole set of labels, including
the parameterized-objective label and the two single-
objective labels, are updated with the new temporary
label set.
This approximate constrained shortest path solution
method can be described by the following pseudo code,
which synthetically serves as the major algorithmic com-
ponent of Step 3 of the parametric method.
Algorithm doubly constrained single-objective shortest path
subroutine
begin
initialize S := ∅, ¯S := V;
set dl(i) := ∞, ∀i ∈ V, ∀l = 1, 2, d (r) := ∞;
set dl(r) := 0, ∀l = 1, 2, d(r) := 0;
while s /∈ ¯S or dl( j) := ∞, ∀ j ∈ ¯S do
begin
move node i from ¯S to S for i satisfying d(i) =
(cid:16)
(cid:17)
d ( j) : j ∈ ¯S
;
min
l cl,i j < d ( j) then
l
d( j) := (cid:10)