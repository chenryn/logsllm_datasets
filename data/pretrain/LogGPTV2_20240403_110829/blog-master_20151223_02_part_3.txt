![pic](20151223_02_pic_004.png)  
![pic](20151223_02_pic_005.png)  
![pic](20151223_02_pic_006.png)  
![pic](20151223_02_pic_007.png)  
![pic](20151223_02_pic_008.png)  
![pic](20151223_02_pic_009.png)  
![pic](20151223_02_pic_010.png)  
![pic](20151223_02_pic_011.png)  
![pic](20151223_02_pic_012.png)  
![pic](20151223_02_pic_013.png)  
------------------------------------------------------------------------------------------------------------  
阶段3，  
阶段2的测试，读IO等待比较多，所以使用如下优化手段。  
使用O_DIRECT，把sga加到196GB，测10分钟把活跃数据尽量弄到内存。  
再测10分钟，取第二次10分钟的测试数据。  
------------------------------------------------------------------------------------------------------------  
```  
SQL> alter system set sga_max_size=196G scope=spfile;  
SQL> alter system set sga_target=196G scope=spfile;  
SQL> alter system set filesystemio_options=directio scope=spfile;  
SQL> alter system set disk_asynch_io=false scope=spfile;  
```  
重启数据库  
```  
show parameter pga;  
pga_aggregate_limit                  big integer     40000M  
pga_aggregate_target                 big integer    20000M  
```  
测试结果：  
```  
$ tail -n 5 benchmarksql-4.1.0_oracle01/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle02/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle03/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle04/run/log/benchmarksql.log   
```  
TPM，低于 PostgreSQL 9.5.0 。(已达到本例本次测试Oracle的最高水平)  
```  
TOP  
top - 21:14:38 up 4 days, 12:08,  4 users,  load average: 83.15, 79.45, 58.33  
Tasks: 785 total,  89 running, 696 sleeping,   0 stopped,   0 zombie  
Cpu(s): 73.5%us, 19.8%sy,  0.0%ni,  0.4%id,  0.2%wa,  0.0%hi,  6.1%si,  0.0%st  
Mem:  264643396k total, 260419476k used,  4223920k free,     1480k buffers  
Swap: 18825200k total,    30972k used, 18794228k free, 202044588k cached  
iostat -x  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          72.09    0.00   26.41    0.32    0.00    1.18  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
dfa               0.00     0.00 1253.20 15725.40 14926.40 151338.40     9.79     9.80    0.58   0.04  65.46  
dfb               0.00     0.00 1257.00 15687.40 14905.60 151028.80     9.79     9.37    0.55   0.04  64.84  
dfc               0.00     0.00 1243.60 15726.80 14753.60 151422.40     9.79    10.36    0.61   0.04  69.50  
dm-0              0.00     0.00 3752.80 40830.60 44582.40 453809.40    11.18    24.55    0.55   0.02  93.10  
```  
AWR到时候打包上来  
------------------------------------------------------------------------------------------------------------  
阶段4，  
感谢Oracle圈的朋友提供的优化建议。  
虽然性能没有提升，瓶颈转嫁了。但是玩的就是折腾，至少知道这么做不行。  
------------------------------------------------------------------------------------------------------------  
```  
alter system set audit_trail=none scope=spfile;    
alter system set control_files='/data01/digoal/oradata/orcl12c/control01.ctl' scope=spfile;  
alter system set recyclebin='OFF' scope=spfile;  
alter system set resource_manager_plan='';  
execute dbms_scheduler.set_attribute('WEEKNIGHT_WINDOW','RESOURCE_PLAN','');   
execute dbms_scheduler.set_attribute('WEEKEND_WINDOW','RESOURCE_PLAN','');  
-- execute dbms_scheduler.set_attribute('','RESOURCE_PLAN','');  
alter system set session_cached_cursors=8000 scope=spfile;  
alter system set inmemory_size=80g scope=spfile;  
conn test01/test01  
alter table STOCK inmemory;  
alter table CUSTOMER inmemory;  
alter table WAREHOUSE inmemory;  
alter table DISTRICT inmemory;  
alter table NEW_ORDER inmemory;  
conn test02/test02  
alter table STOCK inmemory;  
alter table CUSTOMER inmemory;  
alter table WAREHOUSE inmemory;  
alter table DISTRICT inmemory;  
alter table NEW_ORDER inmemory;  
conn test03/test03  
alter table STOCK inmemory;  
alter table CUSTOMER inmemory;  
alter table WAREHOUSE inmemory;  
alter table DISTRICT inmemory;  
alter table NEW_ORDER inmemory;  
conn test04/test04  
alter table STOCK inmemory;  
alter table CUSTOMER inmemory;  
alter table WAREHOUSE inmemory;  
alter table DISTRICT inmemory;  
alter table NEW_ORDER inmemory;  
select count(*) from STOCK;  
set autot trace  
SELECT * FROM STOCK;  
```  
重启数据库  
测试结果  
```  
$ tail -n 5 benchmarksql-4.1.0_oracle01/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle02/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle03/run/log/benchmarksql.log   
$ tail -n 5 benchmarksql-4.1.0_oracle04/run/log/benchmarksql.log   
```  
TPM，低于 PostgreSQL 9.5.0 。(低于阶段2的数据)  
```  
TOP  
top - 22:50:25 up 4 days, 13:43,  4 users,  load average: 72.04, 63.52, 44.66  
Tasks: 790 total,  50 running, 740 sleeping,   0 stopped,   0 zombie  
Cpu(s): 72.7%us, 17.6%sy,  0.0%ni,  3.5%id,  1.3%wa,  0.0%hi,  5.0%si,  0.0%st  
Mem:  264643396k total, 259771132k used,  4872264k free,     6980k buffers  
Swap: 18825200k total,   424680k used, 18400520k free, 203314556k cached  
iostat  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          73.89    0.00   23.05    0.93    0.00    2.13  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
dfa               0.00     0.00 2027.40 13793.20 24020.80 135840.00    10.10     9.77    0.62   0.04  70.24  
dfb               0.00     0.00 2046.20 13701.20 24318.40 134443.20    10.08    10.42    0.66   0.05  72.70  
dfc               0.00     0.00 2057.80 13784.80 24260.80 135686.40    10.10    10.65    0.67   0.05  75.26  
dm-0              0.00     0.00 6129.60 36029.60 72598.40 405996.80    11.35    25.83    0.61   0.02  98.00  
```  
AWR 后面再打包提供。  
## 其他  
清数据  
```  
./runSQL.sh props.ora sqlTableTruncates  
```  
删表  
```  
./runSQL.sh props.ora sqlTableDrops  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")