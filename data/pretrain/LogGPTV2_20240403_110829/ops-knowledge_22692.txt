User: I have a mac running OS X.  Although it has Python 2.7 preinstalled, I used home-brew to install Python 3.5, which works great.  Now I'm looking to add modules using pip.  Trouble is, when I used pip in the terminal, it looks like the module was installed, however, my Python 3.5 doesn't see it.  After a bit of digging, I suspect the problem is that my pip is pointed at the the Apple 2.7 Python version and I realize the answer is I need to change the config on pip to point at the 3.5 version of python, but I can't make any sense of the brew file structure in order to know where to point it at.  And, as I dig through the Cellar, I see multiple versions of pip, so I'm not even sure I'm using the right one, but not sure how to call the right one from the terminal.  I'm sure this is very straightforward to experienced users, but I'm lost.
Assistant: I found the answer in the documentation for homebrew.  For Homebrew python, you must use "pip3 install " instead of "python -m pip install "
There were two other issues that complicated this.
1. I had previously manually installed python 3.5.  The bash profile was configured to point to this before /usr/local/bin.
2. In the documentation of pip, it mentions that the CLI command "pip" points to the last version of python that used it.  So using "pip" alone was causing pip to load the modules into the 2.7 version of the python.
To fix this, I deleted the manually installed version, I removed the garbage from the bash profile, then it everything seemed to work.