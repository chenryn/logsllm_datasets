### 优化后的文本

#### 自定义URL Scheme Handler的概述

在macOS中，应用程序可以通过“声明”支持特定文件类型或自定义URL Scheme来处理各种文档和文件。当应用程序安装到系统后，操作系统会自动注册这些“document handler”。打开文件时，系统会查询“launch services”数据库，以确定应该启动哪个应用程序。

对于自定义URL Scheme handler，以下两点是关键：
1. 一旦应用程序安装并声明支持这些handler，macOS会自动注册自定义URL Scheme。
2. 当自定义URL Scheme被调用时，相应的应用程序会被触发启动。

由于这些操作可以由网页触发，因此可能会带来安全风险。例如，在Box 2017会议上，我曾讨论过自定义URL Scheme的话题（[“Oversight: Exposing Spies on macOS”](https://speakerdeck.com/patrickwardle/hack-in-the-box-2017-oversight-exposing-spies-on-macos)）。当时并未涉及恶意软件或恶意利用的内容。

#### 恶意利用自定义URL Scheme

为了演示攻击者如何滥用自定义URL Scheme handler来远程感染Mac主机，我编写了一个PoC示例。以下是具体步骤：

1. **创建Xcode项目**：使用Cocoa App模板创建一个新项目。
2. **编辑Info.plist文件**：在`Info.plist`中添加`URL types`数组，指定Scheme名称（如`windshift://`）和URL标识符（如`com.foo.bar.WindShift`）。

```xml
<key>CFBundleURLTypes</key>
<array>
    <dict>
        <key>CFBundleURLSchemes</key>
        <array>
            <string>windshift</string>
        </array>
        <key>CFBundleURLName</key>
        <string>com.foo.bar.WindShift</string>
    </dict>
</array>
```

3. **编译并注册**：编译应用后，`lsd`服务会解析`Info.plist`文件，并自动注册自定义URL Scheme。

通过`lsregister -dump`命令可以确认注册情况：

```plaintext
--------------------------------------------------------------------------------
BundleClass: kLSBundleClassApplication
Container mount state: mounted
bundle id: 168204
Mach-O UUIDs: E2E77A08-F458-36C1-B7BD-99F409B4DEAC
Device Family: 1
path: /Users/patrick/Projects/WindShift/DerivedData/WindShift/Build/Products/Debug/WindShift.app
name: WindShift
executable: Contents/MacOS/WindShift
CFBundleURLTypes = (
    {
        CFBundleURLName = "com.foo.bar.WindShift";
        CFBundleURLSchemes = (
            windshift
        );
    }
);
claim id: 386204
name: com.foo.bar.WindShift
rank: Default
roles: Viewer
flags: url-type
bindings: windshift:
```

4. **测试自定义URL Scheme**：在浏览器中输入`windshift://`，如果用户点击“Allow”，则应用会被启动。

#### 远程利用案例

假设我们有一个恶意网站，目标用户访问该网站后，会触发下载包含恶意应用的归档文件（`.zip`）。在Safari中，归档文件会自动解压，导致恶意应用被注册为自定义URL Scheme handler。

JavaScript代码可以轻松实现这一点：

```javascript
window.location.replace('windshift://');
```

此时，macOS会查找处理该URL Scheme的应用程序，并尝试启动它。较新版的Safari会弹出警告信息，但老版本的Safari不会。

#### 绕过安全机制

1. **文件隔离**：如果应用从互联网下载，文件隔离机制会提示用户是否允许运行。有些用户可能会点击“Allow”按钮。
2. **Gatekeeper**：默认情况下，Gatekeeper只允许经过签名的应用。许多恶意软件都带有签名，因此Gatekeeper不会阻止它们。

#### 总结

虽然macOS提供了一些安全机制，但自定义URL Scheme handler仍可能被恶意利用。作为Mac用户，建议采取以下措施：

1. 使用Google Chrome浏览器。
2. 在Safari中关闭自动解压功能（在首选项的`General`选项卡中取消勾选`Open "safe" files after downloading`）。
3. 将Gatekeeper设置为仅允许来自Mac App Store的应用。

通过这些措施，可以有效降低被恶意软件感染的风险。