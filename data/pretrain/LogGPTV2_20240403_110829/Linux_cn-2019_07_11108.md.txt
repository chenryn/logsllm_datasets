---
author: Greg Pittman
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6624
date: '2019-07-16 12:48:14'
editorchoice: false
excerpt: 使用 Scribus 的 Python 脚本编写器功能，开发一个显示 RGB 色谱的 3D 立方体。
fromurl: https://opensource.com/article/19/7/rgb-cube-python-scribus
id: 11108
islctt: true
largepic: /data/attachment/album/201907/16/124822hhxpzvbpzqdi3s3i.png
permalink: /article-11108-1.html
pic: /data/attachment/album/201907/16/124822hhxpzvbpzqdi3s3i.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 使用 Scribus 的 Python 脚本编写器功能，开发一个显示 RGB 色谱的 3D 立方体。
tags:
- Python
- 颜色
thumb: false
title: 使用 Python 和 Scribus 创建一个 RGB 立方体
titlepic: true
translator: zianglei
updated: '2019-07-16 12:48:14'
---
> 
> 使用 Scribus 的 Python 脚本编写器功能，开发一个显示 RGB 色谱的 3D 立方体。
> 
> 
> 
![cubes coming together to create a larger cube](/data/attachment/album/201907/16/124822hhxpzvbpzqdi3s3i.png "cubes coming together to create a larger cube")
当我决定这个夏天要玩色彩游戏时，我想到通常色彩都是在色轮上描绘的。这些色彩通常都是使用色素而不是光，并且你失去了任何对颜色亮度或光度变化的感觉。
作为色轮的替代，我想在立方体表面使用一系列图形来显示 RGB 频谱。色彩的 RGB 值将在具有 X、Y、Z 轴的三维图形上展示。例如，一个平面将会保持 B（蓝色）为 0，其余的坐标轴将显示当我将 R（红色）和 G （绿色）的值从 0 绘制到 255 时发生的情况。
事实证明，使用 [Scribus](https://www.scribus.net/) 及其 [Python 脚本编写器](https://opensource.com/sites/default/files/ebooks/pythonscriptingwithscribus.pdf) 功能实现这一点并不困难。我可以创建 RGB 颜色，使矩形显示颜色，并以 2D 格式排列它们。我决定设置颜色值的间隔为 5，并让矩形按 5 个点（pt）进行绘图。因此，对于每个 2D 图形，我将使用大约 250 种颜色，立方体的一个边有 250 个点（pt），也就是 3.5 英寸。
我使用下面这段 Python 代码完成了绿 - 红图的任务：
```
x = 300
y = 300
r = 0
g = 0
b = 0
if scribus.newDoc(scribus.PAPER_LETTER, (0,0,0,0),scribus.PORTRAIT, 1,                  scribus.UNIT_POINTS, scribus.NOFACINGPAGES, scribus.FIRSTPAGERIGHT):
    while r = 0:
            newcolor = str(r) + '_' + str(g) + '_' + str(b)
            if newcolor == '0_0_0':
                newcolor = 'Black'
            scribus.defineColorRGB(newcolor,r, g, b)
            rect = scribus.createRect(x, y, 5, 5)
            scribus.setFillColor(newcolor, rect)
            scribus.setLineColor(newcolor, rect)
            r = r - 5
            x = x+5
        b = b + 5
        x = 39.5
        r = 255
        y = y + 5
scribus.setRedraw(True)
scribus.redrawAll()
```
后半部分：
```
#!/usr/bin/env python
# white2rgb.py
"""
Creates one-half of RGB cube with White at origin
"""
import scribus
x = 300
y = 300
r = 255
g = 255
b = 255
if scribus.newDoc(scribus.PAPER_LETTER, (0,0,0,0),scribus.PORTRAIT, 1, scribus.UNIT_POINTS, scribus.NOFACINGPAGES, scribus.FIRSTPAGERIGHT):
    while g >= 0:
        while r >= 0:
            newcolor = str(r) + '_' + str(g) + '_' + str(b)
            if newcolor == '255_255_255':
                newcolor = 'White'
            scribus.defineColorRGB(newcolor,r, g, b)
            rect = scribus.createRect(x + 255 - r, y, 5, 5)
            scribus.setFillColor(newcolor, rect)
            scribus.setLineColor(newcolor, rect)
            r = r - 5
        r = 255
        g = g - 5
        y = y - 5
    r = 255
    g = 255
    y = 305
    while b >= 0:
        while r >= 0:
            newcolor = str(r) + '_' + str(g) + '_' + str(b)
            if newcolor == '255_255_255':
                newcolor = 'White'
            scribus.defineColorRGB(newcolor,r, g, b)
            rect = scribus.createRect(x + 255 - r, y, 5, 5)
            scribus.setFillColor(newcolor, rect)
            scribus.setLineColor(newcolor, rect)
            r = r - 5
        r = 255
        b = b - 5
        y = y + 5
    r = 255
    g = 0
    y = 305
    x = 39
    b = 255
    while b >= 0:
        while g 
作者：[Greg Pittman](https://opensource.com/users/greg-p/users/greg-p) 选题：[lujun9972](https://github.com/lujun9972) 译者：[zianglei](https://github.com/zianglei) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux 中国](https://linux.cn/) 荣誉推出