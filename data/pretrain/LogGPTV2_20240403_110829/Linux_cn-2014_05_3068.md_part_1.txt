---
author: ''
category: 技术
comments_data:
- date: '2014-05-23 09:15:38'
  message: 转发微博.
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: '@我的印象笔记'
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: '@我的印象笔记'
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: 说得简单了点，实际使用上chroot之前最好把环境变量设了，如果需要，proc sys dev 都mount 上。看一遍gentoo的安装手册会大有裨益。最后插一句，chroot是一种很简单的虚拟化技术。
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: '@mark'
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: 回复@果壳中的米特尼克:[赞]
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: 回复@果壳中的米特尼克:[赞] //@果壳中的米特尼克:说得简单了点，实际使用上chroot之前最好把环境变量设了，如果需要，proc sys
    dev 都mount 上。看一遍gentoo的安装手册会大有裨益。最后插一句，chroot是一种很简单的虚拟化技术。
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 09:15:38'
  message: chroot 花了我多少闲暇时间…//@Linux中国:回复@果壳中的米特尼克:[赞] //@果壳中的米特尼克:说得简单了点，实际使用上chroot之前最好把环境变量设了，如果需要，proc
    sys dev 都mount 上。看一遍gentoo的安装手册会大有裨益。最后插一句，chroot是一种很简单的虚拟化技术。
  postip: 183.63.11.67
  username: 微博评论
- date: '2014-05-23 12:14:05'
  message: '@我的印象笔记'
  postip: 218.25.99.130
  username: 微博评论
count:
  commentnum: 9
  favtimes: 6
  likes: 0
  sharetimes: 2
  viewnum: 34075
date: '2014-05-22 23:13:02'
editorchoice: false
excerpt: 我是一个刚接触 Linux 和 Unix 的新手。我该如何改变一个命令的根目录？我要怎样改变一个进程的根目录呢，比如用 chroot 命令将web服务与文件系统隔离？我要如何使用
  chroot 恢复密码或修复基于 Linux/Unix的受损坏的环境？   在 Linux和类 Unix 系统下每一个进程/命令的当前工作目录称之为进程/命令的根目录（译注：译者以为此处有误，实际上没有进行过chroot的进程，其根目录是系统的根目录，而不是其工作目录）。你可以使用
  chroot 命令改变一个命令的根目录，这最终将会改变当前运行的进程及其子进程的根目录。 如果一个进程/命令运行
fromurl: ''
id: 3068
islctt: true
largepic: /data/attachment/album/201405/22/231304gl1211mttz1sjk1a.jpg
permalink: /article-3068-1.html
pic: /data/attachment/album/201405/22/231304gl1211mttz1sjk1a.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我是一个刚接触 Linux 和 Unix 的新手。我该如何改变一个命令的根目录？我要怎样改变一个进程的根目录呢，比如用 chroot 命令将web服务与文件系统隔离？我要如何使用
  chroot 恢复密码或修复基于 Linux/Unix的受损坏的环境？   在 Linux和类 Unix 系统下每一个进程/命令的当前工作目录称之为进程/命令的根目录（译注：译者以为此处有误，实际上没有进行过chroot的进程，其根目录是系统的根目录，而不是其工作目录）。你可以使用
  chroot 命令改变一个命令的根目录，这最终将会改变当前运行的进程及其子进程的根目录。 如果一个进程/命令运行
tags:
- Chroot
- Jail
thumb: false
title: Linux / Unix：chroot 命令实例讲解
titlepic: false
translator: Luoxcat
updated: '2014-05-22 23:13:02'
---
> 
> 我是一个刚接触 Linux 和 Unix 的新手。我该如何改变一个命令的根目录？我要怎样改变一个进程的根目录呢，比如用 chroot 命令将web服务与文件系统隔离？我要如何使用 chroot 恢复密码或修复基于 Linux/Unix的受损坏的环境？
> 
> 
> 
![](/data/attachment/album/201405/22/231304gl1211mttz1sjk1a.jpg)
在 Linux和类 Unix 系统下每一个进程/命令的当前工作目录称之为进程/命令的根目录（译注：译者以为此处有误，实际上没有进行过chroot的进程，其根目录是系统的根目录，而不是其工作目录）。你可以使用 chroot 命令改变一个命令的根目录，这最终将会改变当前运行的进程及其子进程的根目录。
如果一个进程/命令运行在一个不能访问外部根目录文件的已修改环境中。这种修改环境通常被称为"监禁目录"（jail）或是"chroot 监禁"。只有特权进程和根用户才能使用 chroot 命令。然而这通常是很有用的：
1. 将特权分配给无特权的进程，例如 Web 服务或 DNS 服务。
2. 建立测试环境。
3. 不使程序或系统崩溃下，运行旧程序或 ABI 兼容的程序。
4. 系统恢复。
5. 重新安装引导装载程序，例如 Grub 或 Lilo。
6. 密码找回，重置一个已丢失的密码等。
### 用途
> 
> chroot 命令 **改变其当前目录，并将根目录变为指定目录,然后如果提供了命令则运行命令**，也可以运行一个用户的交互式shell的副本（译注：即bash等。）。请注意并不是每一个程序都可以使用 chroot 命令。
> 
> 
> 
### 语法
基本语法如下：
```
chroot /path/to/new/root command
```
或者
```
chroot /path/to/new/root /path/to/server
```
或者
```
chroot [options] /path/to/new/root /path/to/server
```
#### chroot 命令实例
在这个例子中，建立了一个"迷你监狱"用来测试一个只有 ls 命令的 Bash shell。首先用 mkdir 命令设定好 jail "监狱" 路径。
```
$ J=$HOME/jail
```
在 $J 内创建目录：
```
$ mkdir -p $J
$ mkdir -p $J/{bin,lib64,lib}
$ cd $J
```
用[cp 命令](http://www.cyberciti.biz/faq/cp-copy-command-in-unix-examples/)将/bin/bash 和 /bin/ls 复制到 $J/bin/ 路径下：
```
$ cp -v /bin/{bash,ls} $J/bin
```
将所需库文件拷贝到$J。可以用 ldd 命令找到 bash 所依赖的共享库。
```
$ ldd /bin/bash
```
输出样例：
```
linux-vdso.so.1 =>  (0x00007fff8d987000)
libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00000032f7a00000)
libdl.so.2 => /lib64/libdl.so.2 (0x00000032f6e00000)
libc.so.6 => /lib64/libc.so.6 (0x00000032f7200000)
/lib64/ld-linux-x86-64.so.2 (0x00000032f6a00000)
```
直接拷贝上面输出中的库文件到 $J 目录：
```
$ cp -v /lib64/libtinfo.so.5 /lib64/libdl.so.2 /lib64/libc.so.6 /lib64/ld-linux-x86-64.so.2 $J/lib64/
```
输出样例：
```
`/lib64/libtinfo.so.5' -> `/home/vivek/jail/lib64/libtinfo.so.5'
`/lib64/libdl.so.2' -> `/home/vivek/jail/lib64/libdl.so.2'
`/lib64/libc.so.6' -> `/home/vivek/jail/lib64/libc.so.6'
`/lib64/ld-linux-x86-64.so.2' -> `/home/vivek/jail/lib64/ld-linux-x86-64.so.2'
```
复制 ls 命令所需的库文件到 $J 目录下。用 ldd 命令打印出 ls 命令依赖的共享库：
```
$ ldd /bin/ls
```
输出样例：
```
linux-vdso.so.1 =>  (0x00007fff68dff000)
libselinux.so.1 => /lib64/libselinux.so.1 (0x00000032f8a00000)
librt.so.1 => /lib64/librt.so.1 (0x00000032f7a00000)
libcap.so.2 => /lib64/libcap.so.2 (0x00000032fda00000)
libacl.so.1 => /lib64/libacl.so.1 (0x00000032fbe00000)