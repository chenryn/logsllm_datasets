MacBook Pro 2013
MacBook Pro 2017
Dell Latitude 7490
MSI GE60
Kankun smart plug
Xiaomi Mi Camera
NanoPi R1
Canon PRO-100S
Asus RT-N10
Linksys WAG320N
Asus RT-AC51U
D-Link DIR-853
(cid:32) (cid:32) (cid:35) (cid:32) U
(cid:35) (cid:32)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:71)(cid:35)(cid:71)(cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:71)(cid:35)(cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:71)(cid:35)(cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:71)(cid:35)(cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:71)(cid:35)(cid:35)
(cid:32) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) U
(cid:32) (cid:32)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35) (cid:32)
(cid:32) (cid:32) (cid:32) (cid:32) U
(cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35)
(cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) U
(cid:35) (cid:32)
(cid:32) (cid:32) (cid:32) (cid:32) U
Aruba AP-305 / 7008 (cid:32) (cid:35) (cid:35) (cid:32) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:35) (cid:32)
(cid:32) (cid:35) (cid:35) (cid:32) (cid:35) (cid:35) (cid:35)
(cid:35) Not affected (cid:71)(cid:35)Vulnerable during handshake
(cid:32) Vulnerable
(cid:71)(cid:35) ((cid:72)(cid:35)) Only ﬁrst (or last) fragment must be encrypted
LANCOM LN-1700
Cisco Catalyst 9130
o Resulted in crash
◎ Accepts all fragmented frames
U Accepts plaintext
6.3 Mixed plaintext and encrypted fragments
Another common implementation ﬂaw we countered is that
devices reassemble mixed encrypted and plaintext fragments,
instead of only accepting encrypted ones (CVE-2020-26147).
This allows an attacker to replace certain encrypted fragments
with plaintext ones. In our tests, 21 devices only require that
the ﬁrst fragment is encrypted (icon (cid:71)(cid:35)), 9 that the last frag-
ment is encrypted (icon(cid:72)(cid:35)), and 3 that only one fragment is en-
crypted (icon (cid:32)). Moreover, 11 devices even accept plaintext
frames (CVE-2020-26140), and another 9 accept fragmented
but not unfragmented plaintext frames (CVE-2020-26143).
We represent these last two implementation vulnerabilities
using the icons U and ◎, respectively. All combined, 53 out
of 68 devices that support fragmentation are affected by at
USENIX Association
30th USENIX Security Symposium    171
Table 2: Test results against Windows (W) and Linux (L)
using various network cards. The AWUS051NH and Ralink
Wi-Pi did not support fragmentation on Linux. The TFWM
was not supported by Windows. See Table 1 for the legend.
Table 3: Test results against FreeBSD (F) and NetBSD (N).
Network cards at the top were tested in client mode, and
the ones at the bottom in AP mode. The AWUS0351NH
is not supported by NetBSD, and the TL-WN722N not by
FreeBSD. See Table 1 on page 11 for the legend.
Attacks
y
e
k
d
e
U
D
S
M
-
A
W L W L W L W L W L W L W L
n.
o
c
-
n
o
N
att.
e
h
c
a
C
Plain.
ol
p
a
e
e
k
a
F
g.
a
r
f
st.
a
c
B
g.
a
r
f
Mix
Network card
Intel 3160
Intel 8265
Intel AX200
AWUS036H
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:35) (cid:32) (cid:32) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:35) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) U (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
AWUS036NHA (cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:32) (cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
AWUS036ACH (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:32) (cid:32) ◎ U (cid:35) (cid:35) o (cid:32)
AWUS036ACM (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) ◎ (cid:71)(cid:35) (cid:32) (cid:35) (cid:32) (cid:35)
AWUS051NH v2 (cid:32) (cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:35) ◎ (cid:35) (cid:32) (cid:35) (cid:32) (cid:35)
ZyXel NWD6505 (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) ◎ (cid:71)(cid:35) (cid:32) (cid:35) (cid:32) (cid:35)
TL-WN725N v1 (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) ◎ U (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:32) (cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:32) (cid:35) (cid:32) (cid:32) (cid:35) (cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:35) ◎ (cid:35) (cid:32) (cid:35) (cid:32) (cid:35)
Sitecom WL-172 (cid:35) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:35) ◎ (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
(cid:32) (cid:32) (cid:35) (cid:32) (cid:35) (cid:32) (cid:32) (cid:35) (cid:71)(cid:35) (cid:71)(cid:35) (cid:35) (cid:35) (cid:35) (cid:35)
– (cid:32) – (cid:32) – (cid:35) – (cid:32) – (cid:35) – (cid:71)(cid:35)– (cid:71)(cid:35)
WNDA3200
WN111v2
Ralink Wi-Pi
ZyXel M-202
TWFM-B003D
least one of these implementation vulnerabilities (see column
“Plain. frag” in Table 1, 2, and 3).
The defragmentation code in Linux tries to enforce that
all fragments are encrypted by checking whether they have
consecutive PNs. Unfortunately, this check is implemented
insecurely: after decrypting a frame, its PN is stored a session
variable, and the PN of the previous fragment is compared to
this session variable. As a result, when a (second) plaintext
fragment is received, it checks whether the PN in this session
variable is consecutive to the previous fragment, and does not
realize this PN is unrelated to the received plaintext fragment.
This means the PN check can be bypassed by ﬁrst forwarding
a valid encrypted fragment towards Linux using a consecutive
PN but under a different sequence number, and then injecting
a plaintext fragment under the correct sequence number (see
Figure 10 in the appendix for details).
Practical impact
If the ﬁrst fragment can be a plaintext
one, an attacker can include a malicious packet in this frag-
ment, which will be processed by the victim once it received
all fragments. This is similar to the cache attack of Section 5.3.
In case the ﬁrst fragment must be encrypted, we can com-
bine this vulnerability with either the A-MSDU or fragment
cache attack to inject arbitrary frames. When combined with
the A-MSDU attack, an attacker uses its multi-channel MitM
position to set the A-MSDU ﬂag of an encrypted ﬁrst frag-
ment. After this, the attacker injects a plaintext fragment, upon
Attacks
g.
a
r
f
y
e
k
d
e
U
D
S
M
-
A
F N F N F N F N F N F N F N
n.
o
c
-
n
o
N
att.
e
h
c
a
C
Plain.
ol
p
a
e
e
k
a
F
g.
a
r
f
st.
a
c
B
Mix
Network card
Intel 3160
AWUS036H
(cid:32)(cid:35) (cid:32)(cid:35) (cid:35)(cid:35) (cid:32)(cid:32) (cid:72)(cid:35)(cid:72)(cid:35) (cid:35)(cid:35) (cid:32) (cid:35)
Sitecom WL-172 (cid:32)(cid:35) (cid:32)(cid:35) (cid:35)(cid:35) (cid:32)(cid:32) (cid:32)(cid:72)(cid:35) (cid:35)(cid:35) (cid:32) (cid:35)
(cid:32)(cid:35) (cid:32)(cid:35) (cid:35)(cid:35) (cid:32)(cid:32) (cid:72)(cid:35)(cid:72)(cid:35) (cid:35)(cid:35) (cid:32) (cid:35)
AWUS051NH v2 (cid:32) – (cid:32) – (cid:35) – (cid:32) – (cid:71)(cid:35) – (cid:35) – (cid:32) –
TL-WN725N v1 (cid:32)(cid:35) (cid:32)(cid:35) (cid:35)(cid:35) (cid:32)(cid:32) (cid:32)(cid:72)(cid:35) (cid:35)(cid:35) (cid:32) (cid:35)
Belkin F5D053 (cid:32)(cid:35) (cid:32)(cid:35) (cid:35)(cid:35) (cid:32)(cid:32) (cid:71)(cid:35)(cid:72)(cid:35) (cid:35)(cid:35) (cid:32) (cid:35)
– (cid:35) – (cid:35) – (cid:35) – (cid:32) – (cid:72)(cid:35) – (cid:35) – (cid:35)
Sitecom WL-172 (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:32) ◎ U (cid:32)(cid:32) (cid:32) (cid:35)
TL-WN725N v1 (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:32) ◎(cid:72)(cid:35) (cid:32)(cid:32) (cid:32) (cid:35)
Belkin F5D053 (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:35) (cid:32)(cid:32) (cid:32) U (cid:32)(cid:32) (cid:32) (cid:35)
– (cid:35) – (cid:35)
– (cid:35) – (cid:35) – (cid:35) – (cid:32) – U
TL-WN722N
TL-WN722N
which the victim reassembles both fragments and processes
the resulting A-MSDU. The idea is now that the second sub-
frame will correspond to the payload of the plaintext fragment
and contains a packet that the attacker wants to inject. An
obstacle is that the ﬁrst encrypted fragment, which the ad-
versary cannot control, must result in a small ﬁrst subframe
of predictable length, such that the second subframe is con-
tained in the injected (second) plaintext fragment. This can
be assured by predicting the IP ID of packets, similar to the
A-MSDU attack against clients in Section 3.2. A second limi-
tation is that not all devices support fragmented A-MSDUs.
In particular, out of 56 devices that supported A-MSDUs, 33
properly handled fragmented A-MSDUs, 9 received them as
malformed frames, and the other 14 silently discarded them.
When combined with the cache attack, the attacker ﬁrst poi-
sons the fragment cache of an AP or client with an encrypted
fragment containing (part of) the packet to be injected. Af-
ter the victim connects to the target network, the adversary
injects the second fragment as plaintext, and the victim will
reassemble the frame and process the injected packet. An
advantage of this combination compared to a default cache
attack is that it can be performed even when no devices in the
network send fragmented frames.
Applicability to WEP and TKIP We also tested WEP
on Linux and found that an adversary could trivially set the
more fragments ﬂag, since it is not authenticated, and subse-
quently combine this ﬁrst encrypted fragment with plaintext
fragments. The TKIP protocol is only affected if the authen-
ticity of reassembled frames is not veriﬁed (see Section 6.7).
172    30th USENIX Security Symposium
USENIX Association
SNAP
EAPOL
EAP
LLC
AA AA 03 00 00 00 88 8E 01 00 00 00 00 02 ··· XX ··· XX
Subframe 2
Destination
Length
Source
Figure 8: An A-MSDU payload (bottom) whose ﬁrst 8 bytes
are also a valid EAPOL LLC/SNAP header (top). Red bytes
must have the given value, and green ones can have any value.
6.4 Broadcast plaintext fragments
Although broadcast frames should never be fragmented, sev-
eral devices process broadcasted fragments as normal unfrag-
mented frames. Moreover, some devices accept second (or
subsequent) broadcast fragments even when sent unencrypted
in a protected Wi-Fi network (CVE-2020-26145). An attacker
can abuse this to inject packets by encapsulating them in a
second fragmented plaintext broadcast frame, i. e., in a Frag1
frame with a broadcast receiver address. Even unicast network
packets, such as IPv4 or ARP packets, can be encapsulated in
broadcast 802.11 frames and hence be injected in this manner.
Affected devices are listed under the column “Bcast. frag.”
in Table 1, 2, and 3. Notable affected devices are those of
Apple and APs on NetBSD and FreeBSD. Some devices are
only vulnerable during the execution of the 4-way handshake,
but this does not limit attacks: a victim can be forcibly discon-
nected, e. g., deauthenticated or jammed, such that the victim
will reconnect and execute a new 4-way handshake.
6.5 Cloaking A-MSDUs as handshake frames
Devices accept plaintext 4-way handshake frames, i. e., plain-
text data frames with an EAPOL LLC/SNAP header, when
connecting to a network. If implemented wrongly, this can be
abused to inject plaintext A-MSDUs (CVE-2020-26144). In
particular, an adversary can construct a plaintext A-MSDU
whose ﬁrst 8 bytes can also be interpreted as a valid EAPOL