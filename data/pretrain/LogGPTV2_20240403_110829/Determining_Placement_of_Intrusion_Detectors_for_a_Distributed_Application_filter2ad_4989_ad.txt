show the result using the ROC curve for the two ultimate attack goals, namely
node 19 and node 21 in the e-commerce and the VoIP systems.
To calculate the performance of each pair of detectors, we created 10,000
samples from each Bayesian network, corresponding to that many actual attacks.
Then we performed Bayesian inference and calculated the conditional probability
of the attack step, given the pair of detectors. We determined the true positive
rate and false positive rate by sweeping across threshold values.
Results show that the pair of detectors determined from the algorithm performs
better than the other randomly selected pairs. Figure 11a shows the situation in
which a single detector (d20) attached to two attack nodes (x19, x18) performs bet-
ter than two detectors (d13 and d7, or d12 and d3). The placement of the detector
d20 aﬀects the performance. This can be explained by the fact that node 18 is more
1
0.8
0.6
0.4
0.2
e
t
a
R
e
v
i
t
i
s
o
P
e
u
r
T
0
0
1
1
0.8
0.6
0.4
0.2
e
t
a
R
e
v
i
t
i
s
o
P
e
u
r
T
0
0
1
(d22,x20),(d18,x17)
(d18,x17),(d18,x14)
(d18,x12),(d18,x14)
(d18,x12),(d6,x4)
0.5
False Positive Rate
(d20,x19),(d20,x18)
(d20,x19),(d20,x16)
(d13,x12),(d7,x6)
(d13,x12),(d3,x2)
0.2
0.4
0.6
False Positive Rate
0.8
Fig. 11. ROC curves for detection of attack steps, using pairs of detectors, in the
e-commerce network (left) and the VoIP network (right)
286
G. Modelo-Howard, S. Bagchi, and G. Lebanon
highly connected in the attack graph and therefore attaching detector d20 to that
node, rather than node 16, provides better predictive performance.
There is a cost of adding detectors to a system, but there is also a cost of
having a detector attached to more attack nodes, in terms of the bandwidth
and computation. Thus adding further edges in the Bayesian network between a
detector node and an attack node, even if feasible, may not be desirable. For the
VoIP network, detector pair d22 and d18 performs best. This time two separate
detectors outperform a single high quality detector (d18) connected to two nodes.
Further details on all experiments performed, including all the probability
values used for the Bayesian networks, are available at [22]. These are omitted
here due to space constraints and the interested party is welcome to further
read. All the experiments validate the intuition behind our algorithm that the
greedy choice of the detectors also gives good results when multiple detectors
are considered together and over the entire Bayesian network.
6 Related Work
Bayesian networks have been used in intrusion detection to perform classiﬁca-
tion of events. Kruegel et al. [17] proposed the usage of Bayesian networks to
reduce the number of false alarms. Bayesian networks are used to improve the
aggregation of diﬀerent model outputs and allow integration of additional in-
formation. The experimental results show an improvement in the accuracy of
detections, compared to threshold-based schemes. Ben Amor et al. [4] studied
the use of nave Bayes in intrusion detection, which included a performance com-
parison with decision trees. Due to similar performance and simpler structure,
nave Bayes is an attractive alternative for intrusion detection. Other researchers
have also used nave Bayesian inference for classifying intrusion events [29].
To the best of our knowledge, the problem of determining an appropriate
location for detectors has not been systematically explored by the intrusion
detection community. However, analogous problems have been studied to some
extent in the physical security and the sensor network ﬁelds.
Jones et al. [15] developed a Markov Decision Process (MDP) model of how an
intruder might try to penetrate the various barriers designed to protect a physical
facility. The model output includes the probability of a successful intrusion and
the most likely paths for success. These paths provide a basis to determine the
location of new barriers to deter a future intrusion.
In the case of sensor networks, the placement problem has been studied to
identify multiple phenomena such as determining location of an intrusion [1],
contamination source [5], [27], and atmospheric conditions [16]. Anjum et al.
[1] determined which nodes should act as intrusion detectors in order to pro-
vide detection capabilities in a hierarchical sensor network. The adversary is
trying to send malicious traﬃc to a destination node (say, the base node). In
their model, only some nodes called tamper-resistant nodes are capable of exe-
cuting a signature-based intrusion detection algorithm and these nodes cannot
be compromised by an adversary. Since these nodes are expensive, the goal is
Determining Placement of Intrusion Detectors
287
to minimize the number of such nodes and the authors provide a distributed
approximate algorithm for this based on minimum cut-set and minimum domi-
nating set. The solution is applicable to a speciﬁc kind of topology, widely used
in sensor networks, namely clusters with a cluster head in each cluster capable
of communicating with the nodes at the higher layer of the network hierarchy.
In [5], the sensor placement problem is studied to detect the contamination
of air or water supplies from a single source. The goal is to detect that contami-
nation has happened and the source of the contamination, under the constraints
that the number of sensors and the time for detection are limited. The authors
show that the problem with sensor constraint or time constraint are both NP-
hard and they come up with approximation algorithms. They also solve the
problem exactly for two speciﬁc cases, the uniform clique and rooted trees. A
signiﬁcant contribution of this work is the time eﬃcient method of calculating the
sensor placement. However, several simplifying assumptions are made—sensing
is perfect and no sensor failure (either natural or malicious) occurs, there is a
single contaminating source, and the ﬂow is stable.
Krause et al. [16] also point out the intractability of the placement prob-
lem and present a polynomial-time algorithm to provide near-optimal placement
which incurs low communication cost between the sensors. The approximation
algorithm exploits two properties of this problem: submodularity, formalizing the
intuition that adding a node to a small deployment can help more than adding
a node to a large deployment; and locality, under which nodes that are far from
each other provide almost independent information. In our current work, we also
experienced the locality property of the placement problem. The proposed solu-
tion learns a probabilistic model (based on Gaussian processes) of the underlying
phenomenon (variation of temperature, light, and precipitation) and for the ex-
pected communication cost between any two locations from a small, short-term
initial deployment.
In [27], the authors present an approach for determining the location in an
indoor environment based on which sensors cover the location. The key idea is
to ensure that each resolvable position is covered by a unique set of sensors,
which then serves as its signature. They make use of identifying code theory
to reduce the number of active sensors required by the system and yet provide
unique localization for each position. The algorithm also considers robustness,
in terms of the number of sensor failures that can be corrected, and provides
solutions in harsh environments, such as presence of noise and changes in the
structural topology. The objective for deploying sensors here is quite diﬀerent
from our current work.
For all the previous work on placement of detectors, the authors are looking to
detect events of interest, which propagate using some well-deﬁned models, such
as, through the cluster head en route to a base node. Some of the work (such as
[16]) is focused on detecting natural events, that do not have a malicious motive
in avoiding detection. In our case, we deal with malicious adversaries who have
an active goal of trying to bypass the security of the system. The adversaries’
methods of attacking the system do not follow a well-known model making our
288
G. Modelo-Howard, S. Bagchi, and G. Lebanon
problem challenging. As an example of how our solution handles this, we use
noise in our BN model to emulate the lack of an accurate attack model.
There are some similarities between the work done in alert correlation and
ours, primarily the interest to reduce the number of alerts to be analyzed from
an intrusion. Approaches such as [24] have proposed modeling attack scenarios
to correlate alerts and identify causal relationships among the alerts. Our work
aims to closely integrate the vulnerability analysis into the placement process,
whereas the alert correlation proposals have not suggested such importance.
The idea of using Bayes theorem for detector placement is suggested in [26].
No formal deﬁnition is given, but several metrics such as accuracy, sensitivity,
and speciﬁcity are presented to help an administrator make informed choices
about placing detectors in a distributed system. These metrics are associated to
diﬀerent areas or sub-networks of the system to help in the decision process.
Many studies have been done on developing performance metrics for the eval-
uation of intrusion detection systems (IDS), which have inﬂuenced our choice of
metrics here. Axelsson [2] showed the applicability of estimation theory in the
intrusion detection ﬁeld and presented the Bayesian detection rate as a metric
for the performance of an IDS. His observation that the base rate, and not only
the false alarm rate, is an important factor on the Bayesian detection rate, was
included in our work by using low base rates as part of probability values in
the Bayesian network. The MAFTIA Project [8] proposed precision and recall
to eﬀectively determine when a vulnerability was exploited in the system. A dif-
ference from our approach is that they expand the metrics to consider a set of
IDSes and not only a single detector. The idea of using ROC curves to measure
performance of intrusion detectors has been explored many times, most recently
in [7], [10].
Extensive work has been done for many years with attack graphs. Recent work
has concentrated on the problems of generating attack graphs for large networks
and automating the process to describe and analyze vulnerabilities and system
components to create the graphs. The NetSPA system [11] uses a breath-ﬁrst
technique to generate a graph that grows almost linearly with the size of the
distributed system. Ou et al. [25] proposed a graph building algorithm using a
formal logical technique that allows to create graphs of polynomial size to the
network being analyzed.
7 Conclusions and Future Work
Bayesian networks have proven to be a useful tool in representing complex prob-
ability distributions, such as in our case of determining the likelihood that an
attack goal has been achieved, given evidence from a set of detectors. By us-
ing attack graphs and Bayesian inference, we can quantify the overall detection
performance in the systems by looking at diﬀerent choices and placements of
detectors and the detection parameter settings. We also quantiﬁed the informa-
tion gain due to a detector as a function of its distance from the attack step.
Also, the eﬀectiveness of the Bayesian networks can be aﬀected by imperfect
Determining Placement of Intrusion Detectors
289
knowledge when deﬁning the conditional probability values. Nevertheless, the
Bayesian network exhibits considerable resiliency to these factors as our experi-
ments showed.
Future work should include looking at the scalability issues of Bayesian net-
works and its impact on determining the location for a set of detectors in a
distributed system. The probability values acquisition problem can be handled
by using techniques such as the recursive noisy-OR modeling [19] but experi-
mentation is required to determine its beneﬁts and limitations for our scenario.
Acknowledgments. Gaspar Modelo-Howard was partly supported by an
IFARHU-SENACYT Scholarship from the Republic of Panama. Saurabh Bagchi
was partly supported in this work by an endowment grant from Purdue’s Center
for Education and Research in Information Assurance and Security (CERIAS).
References
1. Anjum, F., Subhadrabandhu, D., Sarkar, S., Shetty, R.: On Optimal Placement
of Intrusion Detection Modules in Sensor Networks. In: 1st IEEE International
Conference on Broadband Networks, pp. 690–699. IEEE Press, New York (2004)
2. Axelsson, S.: The base-rate fallacy and the diﬃculty of intrusion detection. ACM
3. Bayes Net Toolbox for Matlab, http://www.cs.ubc.ca/∼murphyk/Software
4. Ben Amor, N., Benferhat, S., Elouedi, Z.: Naive Bayes vs decision trees in intrusion
detection systems. In: 19th ACM Symposium on Applied computing, pp. 420–424.
ACM Press, New York (2004)
Trans. Inf. Syst. Secur. 3-3, 186–205 (2000)
5. Berger-Wolf, T., Hart, W., Saia, J.: Discrete Sensor Placement Problems in Dis-
tribution Networks. J. Math. and Comp. Model. 42, 1385–1396 (2005)
6. Bugtraq Vulnerability Database,
http://www.securityfocus.com/vulnerabilities
7. Cardenas, A., Baras, J., Seamon, K.: A Framework for the Evaluation of Intrusion
Detection Systems. In: 27th IEEE Symposium on Security and Privacy, p. 15. IEEE
Press, New York (2006)
8. Dacier, M. (ed.): Design of an Intrusion-Tolerant Intrusion Detection System. Re-
search Report, Maftia Project (2002)
9. Foo, B., Wu, Y., Mao, Y., Bagchi, S., Spaﬀord, E.: ADEPTS: Adaptive Intrusion
Response using Attack Graphs in an E-Commerce Environment. In: International
Conference on Dependable Systems and Networks, pp. 508–517 (2005)
10. Gu, G., Fogla, P., Dagon, D., Lee, W., Skoric, B.: Measuring Intrusion Detection
Capability: An Information-Theoretic Approach. In: 1st ACM Symposium on In-
formation, Computer and Communications Security, pp. 90–101. ACM Press, New
York (2006)
11. Ingols, K., Lippmann, R., Piwowarski, K.: Practical Attack Graph Generation for
Network Defense. In: 22nd Annual Computer Security Applications Conference,
pp. 121–130. IEEE Press, New York (2006)
12. IPTables Firewall, http://www.netfilters.org/projects/iptables
13. Jensen, F.: Bayesian Networks and Decision Graphs. Springer, Heidelberg (2001)
14. Jha, S., Sheyner, O., Wing, J.: Two Formal Analyses of Attack Graphs. In: 15th
IEEE Computer Security Foundations Workshop, pp. 49–63. IEEE Press, New
York (2002)
290
G. Modelo-Howard, S. Bagchi, and G. Lebanon
15. Jones, D., Davis, C., Turnquist, M., Nozick, L.: Physical Security and Vulnerability
Modeling for Infrastructure Facilities. Technical Report, Sandia National Labora-
tories (2006)
16. Krause, A., Guestrin, C., Gupta, A., Kleinberg, J.: Near-optimal Sensor Place-
ments: Maximizing Information while Minimizing Communication Cost. In: 5th
International Conference on Information Processing in Sensor Networks, pp. 2–10.
ACM Press, New York (2006)
17. Kr¨ugel, C., Mutz, D., Robertson, W., Valeyr, F.: Bayesian Event Classiﬁcation for
Intrusion Detection. In: 19th Annual Computer Security Applications Conference,
pp. 14–23. IEEE Press, New York (2003)
18. Kuhn, D., Walsh, T., Fires, S.: Security Considerations for Voice Over IP Systems.
Special Publication 800-58, National Institute of Standards and Technology (2005)
19. Lemmer, J., Gossink, D.: Recursive Noisy OR - A Rule for Estimating Com-
plex Probabilistic Interactions. IEEE Trans. Syst. Man. Cybern. B. 34, 2252–2261
(2004)
20. Lippmann, R., et al.: Evaluating Intrusion Detection Systems: The 1998 DARPA
Oﬀ-line Intrusion Detection Evaluation. In: 1st DARPA Information Survivability
Conference and Exposition, pp. 81–89 (2000)
21. Mehta, V., Bartzis, C., Zhu, H., Clarke, E., Wing, J.: Ranking Attack Graphs. In:
Zamboni, D., Kr¨ugel, C. (eds.) RAID 2006. LNCS, vol. 4219, pp. 127–144. Springer,
Heidelberg (2006)
22. Modelo-Howard, G.: Addendum to Determining Placement of Intrusion Detectors
for a Distributed Application through Bayesian Network Modeling,
http://cobweb.ecn.purdue.edu/ dcsl/publications/
detectors-location addendum.pdf
23. National Vulnerability Database, http://nvd.nist.gov/nvd.cfm
24. Ning, P., Cui, Y., Reeves, D.: Constructing Attack Scenarios through Correlation
of Intrusion Alerts. In: 9th ACM Conference on Computers & Communications
Security, pp. 245–254 (2002)
25. Ou, X., Boyer, W., McQueen, M.: A Scalable Approach to Attack Graph Gener-
ation. In: 13th ACM Conference on Computer & Communications Security, pp.
336–345 (2006)
26. Peikari, C., Chuvakin, A.: Security Warrior. O’Reilly, New York (2004)
27. Ray, S., Starobinski, D., Trachtenberg, A., Ungrangsi, R.: Robust Location Detec-
tion with Sensor Networks. IEEE J. on Selected Areas in Comm. 22, 1016–1025
(2004)
28. Snort Intrusion Detection System, http://www.snort.org
29. Valdes, A., Skinner, K.: Adaptive, Model-based Monitoring for Cyber Attack De-
tection. In: Debar, H., M´e, L., Wu, S.F. (eds.) RAID 2000. LNCS, vol. 1907, pp.
80–92. Springer, Heidelberg (2000)