    选项强制安装程序在文本模式而不是图形模式下运行。
[inst.noninteractive]{.term}
:   使用 `inst.noninteractive`{.literal}
    引导选项以非互动模式运行安装程序。在非互动模式中不允许用户互动，`inst.noninteractive`{.literal}
    可用于图形或文本安装。当在文本模式中使用这个
    `inst.noninteractive`{.literal} 选项时，它的行为与
    `inst.cmdline`{.literal} 选项相同。
[inst.resolution=]{.term}
:   使用 `inst.resolution=`{.literal}
    选项指定图形模式中的页面分辨率。格式为 `NxM`{.literal}，其中
    [*N*]{.emphasis} 是屏幕宽度， [*M*]{.emphasis}
    是页面高度（单位为像素）。最低分辨率为 1024x768。
[inst.vnc]{.term}
:   使用 `inst.vnc`{.literal} 选项使用 VNC 运行图形安装。您必须使用 VNC
    客户端应用程序与安装程序交互。启用 VNC
    共享时，可以连接多个客户端。在文本模式中安装使用 VNC 启动的系统。
[inst.vncpassword=]{.term}
:   使用 `inst.vncpassword=`{.literal} 选项设定安装程序使用的 VNC
    服务器中的密码。
[inst.vncconnect=]{.term}
:   使用 `inst.vncconnect=`{.literal} 选项连接到给定主机位置侦听的 VNC
    客户端。例如, `inst.vncconnect=[:]`{.literal} 默认端口为
    5900。这个选项可以与 `vncviewer -listen`{.literal} 一起使用。
[inst.xdriver=]{.term}
:   使用 `inst.xdriver=`{.literal}
    选项指定您要在安装过程中和安装的系统中使用的 X 驱动程序名称。
[inst.usefbx]{.term}
:   使用 `inst.usefbx`{.literal} 选项提示安装程序使用帧缓冲 X
    驱动程序，而不是具体硬件驱动程序。这个选项等同于
    `inst.xdriver=fbdev`{.literal}。
[modprobe.blacklist=]{.term}
:   使用 `modprobe.blacklist=`{.literal}
    选项阻止列表或者完全禁用一个或多个驱动程序。在安装开始后，使用这个选项禁用的驱动（模式）不会被加载，在安装完成后，安装的系统还会保留这些设置。您可以在
    `/etc/modprobe.d/`{.literal} 目录中找到 blocklisted
    驱动程序列表。使用以逗号分隔的列表禁用多个驱动程序。例如：
    ``` screen
    modprobe.blacklist=ahci,firewire_ohci
    ```
[inst.xtimeout=]{.term}
:   使用 `inst.xtimeout=`{.literal} 选项指定启动 X
    服务器的超时时间（以秒为单位）。
[inst.sshd]{.term}
:   在安装过程中使用 `inst.sshd`{.literal} 选项启动 `sshd`{.literal}
    服务，以便您可以在安装过程中使用 SSH
    连接到该系统，并监控安装进程。有关 SSH 的详情请参考
    `ssh(1)`{.literal} man page。默认情况下，该 `sshd`{.literal}
    选项只在 IBM Z 构架中自动启动。在其它构架中，除非您使用
    `inst.sshd`{.literal} 选项，否则`sshd`{.literal} 不会启动。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在安装过程中，root 帐户默认没有密码。您可在安装过程中使用
    `sshpw`{.literal} Kickstart 命令设定 root 密码。
    :::
[inst.kdump_addon=]{.term}
:   使用 `inst.kdump_addon=`{.literal} 选项启用或禁用安装程序中的 Kdump
    配置页面（附加组件）。这个页面会默认启用；可以使用
    `inst.kdump_addon=off`{.literal}
    来禁用它。禁用该附加组件可在图形和文本界面以及
    `%addon com_redhat_kdump`{.literal} Kickstart 命令中禁用 Kdump
    页面。
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#debug-boot-options_kickstart-and-advanced-boot-options}调试引导选项 {.title}
:::
本节介绍在调试问题时可以使用的选项。
::: variablelist
[inst.rescue]{.term}
:   使用这个 `inst.rescue`{.literal}
    选项来运行救援环境。该选项对诊断和修复系统很有用。例如：您可以
    [在救援模式中修复文件系统](https://access.redhat.com/solutions/9541){.link}。
[inst.updates=]{.term}
:   使用 `inst.updates=`{.literal} 选项指定您要在安装过程中应用的
    `updates.img`{.literal} 文件的位置。这些更新有很多源。
    ::: table
    []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#idm140037989471904}
    **表 16.7. inst.updates= source updates**
    ::: table-contents
      源               描述                                                                                                                                                                                                       示例
      ---------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------------------------------------------------------------
      从网络更新       使用 `inst.updates=`{.literal} 的最简单方法是指定 `updates.img`{.literal} 的网络位置。这不需要对安装树进行任何修改。要使用这个方法，请编辑内核命令行使其包含 `inst.updates`{.literal}。                    `inst.updates=http://some.website.com/path/to/updates.img`{.literal}.
      从磁盘镜像更新   您可在软盘或者 USB 密钥中保存 `updates.img`{.literal}。这只能使用 `ext2`{.literal} 文件系统类型完成 `updates.img`{.literal}。要在软盘驱动器中保存镜像内容,请插入软盘并运行命令。                           `dd if=updates.img of=/dev/fd0 bs=72k count=20`{.literal}.要使用 USB 密钥或者闪存介质，请使用您的 USB 密钥的设备名称替换 `/dev/fd0`{.literal}。
      安装树中的更新   如果您使用 CD、硬盘、HTTP 或者 FTP 安装，您可以在安装树中保存 `updates.img`{.literal}，以便所有安装都可检测到 .img 文件。将文件保存到 `images/`{.literal} 目录中。文件名必须是 `updates.img`{.literal}。   对于 NFS 安装，有两个选项： 您可以将镜像保存到 `images/`{.literal} 目录中，也可以保存在安装树的 `RHupdates/`{.literal} 目录中。
    :::
    :::
[inst.loglevel=]{.term}
:   使用 `inst.loglevel=`{.literal}
    选项指定终端日志信息的最小级别。这只考虑终端日志 ;
    日志文件总是包含所有级别的信息。这个选项的可能值包括（从最低到最高级别）：
    `debug`{.literal}、`info`{.literal}
    `warning`{.literal}、`error`{.literal} 和
    `critical`{.literal}。默认值为
    `info`{.literal}。这代表，默认情况下日志记录终端会显示的范围是从
    `info`{.literal} 到 `critical`{.literal}。
[inst.syslog=]{.term}
:   当安装启动时，`inst.syslog=`{.literal}
    选项会将日志信息发送到指定主机的 `syslog`{.literal} 进程。必须将远程
    `syslog`{.literal} 进程配置为接受进入的连接。
[inst.virtiolog=]{.term}
:   使用 `inst.virtiolog=`{.literal} 选项指定您要用于转发日志的 virtio
    端口（字符设备 `/dev/virtio-ports/name`{.literal}）。默认值为
    `org.fedoraproject.anaconda.log.0`{.literal};
    如果存在这个端口，则会使用它。
[inst.zram=]{.term}
:   该 `inst.zram=`{.literal} 选项控制在安装过程中 zRAM swap
    的使用。该选项会在系统 RAM 中创建压缩块设备，并使用 swap
    空间而不是硬盘。这可让安装程序在不压缩的情况下以小的可用内存运行，而且可能会加快安装速度。默认情况下，在内存超过
    2 GiB 的系统中在 zRAM 上启用 swap，并在内存超过 2 GiB 的系统中禁用
    swap。您可以使用这个选项来更改此行为 ; 在超过 2 GiB RAM
    的系统中，使用 `inst.zram=1`{.literal} 启用这个功能 ; 在内存为 2 GiB
    或更少内存的系统中，使用 `inst.zram=0`{.literal} 用来禁用这个功能。
[rd.live.ram]{.term}
:   如果指定该 `rd.live.ram`{.literal} 选项，`stage 2`{.literal}
    镜像将复制到 RAM 中。当 `stage 2`{.literal} 镜像位于 NFS
    服务器中时，使用这个选项会将该镜像大小大约增加 500 MiB。
[inst.nokill]{.term}
:   该 `inst.nokill`{.literal}
    选项是一个调试选项，可防止安装程序在出现致命错误或安装过程结束时重启。使用
    `inst.nokill`{.literal} 选项捕获重启后会丢失的安装日志。
[inst.noshell]{.term}
:   如果您在安装过程中不希望在终端会话 2(tty2)中有一个 shell，使用
    `inst.noshell`{.literal} 选项。
[inst.notmux]{.term}
:   如果您不想在安装过程中使用 tmux，使用 `inst.notmux`{.literal}
    选项。输出在没有终端控制字符的情况下生成，用于非互动性。
[inst.remotelog=]{.term}
:   您可以使用 `inst.remotelog=`{.literal} 选项通过 TCP
    连接将所有日志发送到远程
    `host:port`{.literal}。如果没有监听程序而安装正常进行，则该连接将会停用。
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#storage-boot-options_kickstart-and-advanced-boot-options}存储启动选项 {.title}
:::
::: variablelist
[inst.nodmraid]{.term}
:   使用 `inst.nodmraid`{.literal} 选项禁用 `dmraid`{.literal} 支持。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
请小心使用这个选项。如果您的磁盘被错误地识别为固件 RAID
阵列的一部分，那么您可能有一些过时的 RAID
元数据必须使用适当的工具删除，例如 `dmraid`{.literal} 或
`wipefs`{.literal}。
:::
::: variablelist
[inst.nompath]{.term}
:   使用 `inst.nompath`{.literal}
    此选项禁用对多路径设备的支持。这个选项可用于遇到假正（false-positive）的系统中，这样会错误地将普通块设备识别为多路径设备。其他情况都不需要使用这个选项。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
请小心使用这个选项。您不应该在多路径硬件中使用这个选项。使用这个选项试图安装到多路径的单一路径不被支持。
:::
::: variablelist
[inst.gpt]{.term}
:   `inst.gpt`{.literal} 引导选项强制安装程序在 GUID
    分区表（GPT）而不是主引导记录（MBR）中安装分区信息。这个选项在基于
    UEFI 的系统上无效，除非采用与 BIOS 兼容的模式。通常，基于 BIOS
    的系统和基于 UEFI 的系统在兼容模式下尝试使用 MBR
    模式来存储分区信息，除非磁盘大小为 2\^32 个扇区或大于 2
    个扇区。磁盘扇区大小通常是 512 字节，通常相当于 2 TiB。使用
    `inst.gpt`{.literal} 引导选项可更改此行为，允许将 GPT
    写入较小的磁盘。
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#kickstart-boot-options_kickstart-and-advanced-boot-options}Kickstart 引导选项 {.title}
:::
这部分包含有关 Kickstart 引导选项的信息。
::: variablelist
[inst.ks=]{.term}
:   使用 `inst.ks=`{.literal} 引导选项定义您要用于自动化安装的 Kickstart
    文件的位置。然后，可以使用任何 `inst.repo`{.literal}
    格式指定位置。如果您指定设备而不是路径，安装程序会在您指定设备的
    `/ks.cfg`{.literal} 中查找 Kickstart
    文件。如果您使用这个选项但没有指定设备，安装程序将使用以下选项：
    ``` screen
    inst.ks=nfs:next-server:/filename
    ```
    在前面的例子中，[*next-server*]{.emphasis} 是 DHCP 服务器的
    next-server 选项或者 DHCP 服务器本身的 IP
    地址，[*filename*]{.emphasis} 是 DHCP 文件名选项，或
    [*/kickstart/*]{.emphasis}。如果给定文件名以这个 `/`{.literal}
    字符结尾， `ip-kickstart`{.literal} 则会附加。下表包含示例。
    ::: table
    []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#idm140037879784656}
    **表 16.8. 默认 Kickstart 文件位置**
    ::: table-contents
      DHCP 服务器地址   客户端地址        kickstart 文件位置
      ----------------- ----------------- ----------------------------------------------------
      192.168.122.1     192.168.122.100   192.168.122.1:/kickstart/192.168.122.100-kickstart
    :::
    :::
    如果存在带有标签 `OEMDRV`{.literal} 的卷，安装程序会尝试载入名为
    `ks.cfg`{.literal} 的 Kickstart 文件。如果您的 Kickstart
    文件在这个位置，则不需要使用 `inst.ks=`{.literal} 引导选项。
[inst.ks.all]{.term}
:   指定这个选项来连续尝试多个由多个 `inst.ks`{.literal} 选项提供的
    Kickstart 文件位置。使用第一个成功位置。这只适用于类型位置
    `http`{.literal} `ftp`{.literal}, `https`{.literal}
    或者忽略其他位置。
[inst.ks.sendmac]{.term}
:   使用 `inst.ks.sendmac`{.literal} 选项将标头添加到包含所有网络接口
    MAC 地址的传出 HTTP 请求中。例如：
    ``` screen
    X-RHN-Provisioning-MAC-0: eth0 01:23:45:67:89:ab
    ```
    这在使用 `inst.ks=http`{.literal} 置备系统时非常有用。
[inst.ks.sendsn]{.term}
:   使用 `inst.ks.sendsn`{.literal} 选项为传出的 HTTP
    请求添加标头。这个标头包含从中读取的系统序列号
    `/sys/class/dmi/id/product_serial`{.literal}。标头具有以下语法：
    ``` screen
    X-System-Serial-Number: R8VA23D
    ```
:::
::: itemizedlist
**其它资源**
-   有关引导选项的完整列表，请查看
    [上游引导选项](https://github.com/rhinstaller/anaconda/blob/rhel-8.0/docs/boot-options.rst){.link}
    内容。
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#advanced-installation-boot-options_kickstart-and-advanced-boot-options}高级安装引导选项 {.title}
:::
这部分包含有关高级安装引导选项的信息。
::: variablelist
[inst.kexec]{.term}
:   该 `inst.kexec`{.literal} 选项允许安装程序在安装结束时使用
    `kexec`{.literal} 系统调用,而不是重新启动。该 `inst.kexec`{.literal}
    选项会立即载入新系统，绕过通常由 BIOS 或固件执行的硬件初始化。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    这个选项已弃用，仅作为技术预览使用。如需有关红帽对技术预览功能支持范围的信息，请参阅[技术预览功能支持范围文档](https://access.redhat.com/support/offerings/techpreview){.link}。
    当 `kexec`{.literal}
    使用后，通常会在系统完全重启后清除的设备注册，可能会仍然使用数据，这可能会给一些设备驱动程序造成问题。
    :::
[inst.multilib]{.term}
:   使用 `inst.multilib`{.literal} 引导选项为多 lib
    软件包配置系统，即允许在 64 位 AMD64 或者 Intel 64 系统中安装 32
    位软件包。通常在 AMD64 或者 Intel 64
    系统中，只安装用于这个构架（标记为
    x86_64）的软件包以及用于所有架构（标记为 noarch）的软件包。当您使用
    `inst.multilib`{.literal} 引导选项时，32 位 AMD 或者 Intel
    系统（标记为 i686）的软件包会被自动安装。
    这只适用于在 `%packages`{.literal}
    本节中直接指定的软件包。如果软件包作为相依性安装，则只会安装指定的相依性。例如：如果您要安装依赖