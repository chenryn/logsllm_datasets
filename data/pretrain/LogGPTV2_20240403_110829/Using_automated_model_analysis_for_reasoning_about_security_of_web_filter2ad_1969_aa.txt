title:Using automated model analysis for reasoning about security of web
protocols
author:Apurva Kumar
Using Automated Model Analysis for Reasoning about 
Security of Web Protocols
Apurva Kumar 
IBM Research - India 
4 Block C, Institutional Area 
Vasant Kunj, New Delhi, India-110070 
PI:EMAIL 
ABSTRACT 
Interoperable  identity  and  trust  management  infrastructure  plays 
an  important  role  in  enabling  integrations  in  cloud  computing 
environments.  In  the  past  decade  or  so,  several  web-based 
workflows  have  emerged  as  de-facto  standards  for  user  identity 
and resource access across enterprises. Establishing correctness of 
such web protocols is of immense importance to a large number of 
common  business  transactions  on  the  web.    In  this  paper,  we 
propose a framework for analyzing security in web protocols.  A 
novel aspect of our proposal is bringing together two contrasting 
styles  used  for  security  protocol  analysis.  We  use  the  inference 
construction style, in which the well-known BAN logic has been 
extended  to reason about web protocols, in conjunction with, an 
attack  construction  style  that  performs  SAT  based  model-
checking  to  rule  out  certain  active  attacks.  The  result  is  an 
analysis  method  that  shares  simplicity  and  intuitive  appeal  of 
belief logics, at the same time covers a wider range of protocols, 
along  with  an  ability  to  automatically  find  attacks.  To  illustrate 
effectiveness,  case  study  of  a  leading  web  identity  and  access 
management  protocol  is  presented,  where  application  of  our 
analysis  method  results  in  a  previously  unreported  attack  being 
identified.   
Categories and Subject Descriptors 
C.2.0 [Computer-Communication Networks]: General– Security 
and  protection;  C.2.6  [Computer-Communication  Networks]: 
Internetworking  Standards;  K.6.5  [Management  of  Computing 
and Information Systems]: Security and Protection.  
General Terms 
Security, Verification 
Keywords 
Security Protocols, Belief Logic, Automated security analysis 
1.  INTRODUCTION 
Analysis  of  cryptographic  protocols  (i.e.  protocols  that  use 
cryptographic techniques for distributing keys and authenticating 
principals over a network) has been an active area of research over  
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies  bear  this  notice  and  the  full  citation  on  the  first  page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
ACSAC ’12, Dec. 3–7, 2012, Orlando, Florida, USA. 
Copyright 2012 ACM 978-1-4503-1312-4/12/12 …$15.00. 
289
the past three decades.  Even seemingly simple protocols have the 
reputation of being notoriously error-prone [26] when exposed to 
an  environment  where  the  intruder  is  allowed  to  intercept,  alter, 
delete messages and collude with dishonest principals.    
In the last decade or so, a new set of protocols has emerged that 
manage  specific  transactions  on  the  web.  The  protocols  are 
characterized  by  a  user  interacting  with  multiple  collaborating 
service providers, using standard web security mechanisms over a 
web-browser. Examples include cross-domain web single sign-on, 
secure electronic payments, content sharing with third parties etc. 
Industrial  protocols 
transactions  are 
responsible  for  security  of  cross-domain  collaborations  on  the 
web.  Some  popular  web  protocols  that  have  been  used  to 
implement  such  transactions  are  Security  Assertion  Markup 
Language (SAML) [2], OpenID [3] and OAuth [4]. 
implementing 
these 
categories. 
Inference 
two 
computable 
formulations.  Attack 
Approaches  for  security  protocol  analysis  can  be  broadly 
classified  under 
construction 
approaches,  first  popularized  by  the  publication  of  Burrows, 
Abadi,  Needham  (BAN)  [1]  logic,  attempt  to  use  inference  in 
specialized  logics  to  establish  required  beliefs  at  protocol 
participants. These approaches have the advantage of resulting in 
efficiently 
construction 
approaches,  on  the  other  hand,  use  model  checking  tools  to 
construct  attacks  by  modeling  an  intruder  and  using  algebraic 
properties of the messages being transmitted. These complexities 
result  in  such  approaches  suffering  from  state-space  explosion 
problem.  We  feel  that  inference  construction  based  approaches 
(also  termed  as  belief  logics)  are  ideally  suited  for  analyzing 
security  of  web  protocols.  The  higher  abstraction level and their 
ability  to  establish  what  a  protocol  achieves  (in  terms  of  beliefs 
established  at  participants)  make  them  attractive  for  analyzing 
security in complex web transactions.  
Belief  logics,  however,  suffer  from  a  few  significant  limitations. 
Firstly,  soundness  has  been  challenged  due  to  their  inability  of 
handling  certain  types  of  active  attacks.  In  particular,  protocols 
suffering  from  attacks  utilizing  multiple parallel executions have 
been declared safe using these methods. Secondly, unlike model-
checking,  these  approaches  do  not  automatically  generate  an 
attack trace when expected beliefs cannot be established. Finally, 
while  there  have  been  several  extensions  of  the  original  BAN, 
very  little  work  has  been  done  in  extending  these  approaches  to 
the  web  domain  and  supporting  new  types  of  attacks  that  are 
introduced due to browser-based communication. 
In  this  paper,  we  propose  a  generic  approach  for  analyzing  web 
protocols. We perform security analysis in two stages. At a higher 
abstraction level, we perform inference construction using a logic 
that extends BAN to facilitate reasoning about web protocols. The 
reasoning  makes  underlying  assumptions  about  some  security 
properties. At a lower abstraction level, we use a model finder to 
determine  if attacks violating the property assumed by the belief 
logic are allowed by the protocol.  
While  there  have  been  several  extensions  to  BAN,  our  logic 
generalizes some basic concepts of the logic, towards supporting 
analysis of web protocols. We recognize the need to support users 
without identifying keys and having identities that are not global. 
To further simplify analysis for the web, we introduce a primitive 
construct in our logic to represent an SSL/TLS [29] based secure 
session.  We  also  provide  a  framework  for  representing  and 
reasoning about user actions. Users contribute in these protocols 
through  actions  like  submitting  a  form,  signing  in,  accepting 
terms,  clicking  a  link  etc.  When  identities  are  not  global, 
establishing that a user recently performed an action is often more 
important than knowing its identity.  
We  identify  an  important  security  property  which  ensures  that 
several session based attacks can be ruled out, thus allowing the 
belief logic analysis to be sound. To validate the security property, 
we  develop  a  general  model  for  web  protocols  in  Alloy  [15],  a 
SAT based model analysis tool. Checking of this property is done 
for a much simplified version of the original protocol and a very 
simple  intruder  model,  thus  drastically  reducing  the  overall 
complexity  of  our  approach  in  comparison  with  typical  attack 
construction approaches. 
We  illustrate  effectiveness  of  our  approach  through  security 
analysis  of  the  OAuth  protocol,  an  industry  standard  for  web-
based  third  party  delegation.  The  analysis  illustrates  how  our 
approach allows typical advantages of belief logics to be extended 
to  web  protocols.  At  the  same  time,  we  demonstrate  that  at  a 
marginal overhead, we get benefits of model checking approaches 
like  coverage  against  a  wider  range  of  attacks  and  automatic 
generation of attack traces.  
We discuss related work in Section 2 and overview of BAN logic 
in Section 3. In Section 4, we introduce syntax and inference rules 
of  the  proposed  logic.  In  Section  5,  we  introduce  the  hybrid 
approach  that  uses  model analysis in conjunction with the logic. 
Section 6 describes Alloy based web protocol modeling in detail. 
An  example  analysis  of  OAuth  is  presented  in  Section  7,  while 
important contributions of the work are covered in Section 8. 
2.  RELATED WORK 
In the previous section, we mentioned two types of approaches for 
security protocol analysis. In this section, we review existing work 
in each type of approach.  
Inference  construction  approaches  attempt  to  use  inference  in 
specialized  logics  to  establish  required  beliefs  at  the  protocol 
participants.  The  logic  of  authentication  described  in  [1], 
commonly  known  as  BAN,  was  one  of  the  first  successful 
attempts at representing and reasoning about security properties of 
protocols.  In  [6],  minor  improvements  to  the  logic’s  syntax  and 
inference  rules  suggested to remove some ambiguity. Authors of 
[7]  introduced  the  concept  of  ‘recognizability’.  Logic  in  [5] 
introduces the concept of possession along with belief and uses it 
to  support  constructs  like  ‘not  originated  here’.  In  [8]  authors 
attempt  to  consolidate  good  features  from  earlier  belief  logic 
approaches.  These  logics  have  the  advantage  of  being  usually 
decidable  and  efficiently  computable.  The  logics  can  be  easily 
automated.  In  [9],  a  transformation  of  BAN  logic  and  inference 
rules  to  first  order  formula  is  performed  and  theorem  prover 
290
concatenation, 
de-concatenation, 
SETHEO is used for finding proofs. In [10], the authors attempt 
to  embed  BAN  logic  in  EVES  theorem  prover.  However,  given 
that a real protocol has a limited number of keys, principals and 
messages,  forward  chaining  approaches  discussed  in  [28]  or  the 
model driven analysis approach in [23] are often much simpler. 
Attack  construction  approaches  on  the  other  hand  do  not  try  to 
establish  beliefs  at  the  participants  but  use  model-checking 
techniques to construct attacks. The states and transitions used for 
modeling  the  protocol  include  modeling  the  structure  of  the 
message passing over the channel and a model of the intruder. The 
intruder  is  usually  based  on  a  Dolev-Yao  model  [11],  and  is 
allowed  to  perform  any  sequence  of  operations  such  as  data 
interception, 
encryption, 
decryption  etc.  These  complexities  result  in  such  approaches 
suffering  from  state-space  explosion  problem.  However,  these 
approaches  do  have  the  advantage  of  generating  a  counter-
example corresponding to the attack, when a security property is 
not satisfied.  
Few works that are representative of this class of approaches are 
mentioned below. The first such approach was introduced in [11], 
but the class of protocols studied in this work was very limited. In 
[12]  the  author  modeled  an  extension  of  Dolev-Yao  model  in  a 
specialized  Prolog  based  model-checker,  the  NRL  protocol 
analyzer.  Other  approaches  in  this  area  include  the  use  of  FDR 
model  checker  for  CSP  [13],  use  of  SAT  based  model-checking 
techniques to solve a simplified version of the protocol insecurity 
problem [14] and on-the-fly model-checker (OFMC) [18], a semi-
decision  procedure  which  explores  the  search  space  system  in  a 
demand-driven  way.  [14]  and  [18]  have  been  employed  as 
backend model-checkers in the AVISPA tool [19] for automated 
validation of security protocols. The Proverif tool [30] is based on 
replacing  the  more  accurate  multi-set  rewriting  representation 
with  abstractions  that  allow  it  to  perform  unbounded analysis of 
small to medium sized protocols. It uses an extension of applied-
pi  calculus  as  its  input  language.  An  alternative  to  state-based 
analysis  is  the  strand-space  based  approach  [20]  which  uses  a 
graph-theoretic  interpretation  of  Dolev-Yao  model.  The protocol 
analyzer,  Athena  [21]  and  the  more  recent  Scyther  tool  [31]  are 
based on this approach.  
Since  our  work  has  elements  of  both  attack  and  inference 
construction approaches, we now compare and contrast our work 
with  most  relevant  works  in  each  category.  [23]  possibly 
represents  a  first  attempt  at  a  belief  logic  for  the  web.  The 
preliminary  logic  was  able  to  analyze  simple  web  protocols 
correctly.  The  main  drawback  was  not  being  able  to  handle 
browser-based attacks e.g. cross-site request forgery. In this work, 
we  improve  the  logic and augment the belief logic analysis with 
model  checking  methods.  We  analyze  a  version  of  OAuth 
different from the one analyzed in [23]. This version suffers from 
an attack that cannot be handled by the logic of [23].  
Authors  of  [27]  model  a  non-compliant  version  of  the  SAML 
single sign-on protocol and a standard Dolev-Yao adversary using 
multi-set rewrite formalism and discover an attack resulting from 
insufficient  authentication  between  service  providers.  However, 
use  of  the  standard  adversary  instead  of  a  specialized  browser 
based  attacker,  results  in  another  flaw,  similar  to  the  one 
identified in [22] for WebAuth protocol, remaining unexposed. 
Authors  of  [22]  model  a  few  web  mechanisms  using  Alloy  [15] 
and analyze them for multiple security properties. They also show 
how to analyze simple web protocols using their framework. For 
the second stage of our analysis, we also develop a generic model 
Schroeder  Symmetric  Key  protocol  in  which  a  server  S  sends  a 
response to an initiator A containing a session key Kab, along with 
a  message  for  another  principal  B  encrypted  using  B’s  key 
containing the same session key and A’s identity. In typical Alice-
Bob notation used in literature this can be expressed as:  
S
→
A N B K
: {
,
,
a
,{
K
, }
A
K
ab
ab
}
K
bs
as
where  Na  is  a  nonce  value.  Kas  and  Kbs  represent  keys  shared 
between A and S, B and S respectively. The message is idealized 
in [1] as follows:  
S
→
A N
: {
a
,
(
A
←→ (cid:135)
Kab
), (
B
A
K
ab
←→
B
),{
A
K
b
a
←→
}
B
K
}
K
bs
as
take  place  over 
The  idealization  makes  explicit  that  the  server  says  that  Kab  is  a 
shared key for communication between A and B and also that it is 
fresh (due to the presence of the nonce).  
Analysis.  Protocol analysis in inference construction approaches 
involves  two  main  tasks:  (i)  identification  of  an  initial  set  of 
beliefs i.e. assumptions at each principal. (ii) message-by-message 
manual  reasoning  based  on  combining  formula  (idealized 
messages) that a principal sees with what it knows using inference 
rules of the logic. 
4.  BELIEF LOGIC FOR WEB 
PROTOCOLS 
4.1  Need for Extending Belief Logics 
4.1.1  Typical Web-based Workflow 
In  a  typical  web-based  protocol  workflow,  a  user  interacts  with 
web-pages  presented  to  him  by  one  or  more  providers  by 
performing actions through a user-agent (web-browser). Examples 
of  actions  are:  accessing  a  service  by  clicking  on  a  link, 
submitting  a  form,  signing  in,  agreeing  to  terms  etc.  Since 
interaction 
the  stateless  HTTP  protocol, 
application  state  is  encoded  in  secrets  (usually  an  HTTP  header 
field  called  cookie)  and  returned  to  the  user  in  response. 
Considering that user actions are responsible for state transitions, 
secrets  are  associated  with  specific  user  actions.  Secrets  are 
usually transferred over secure SSL/TLS channels.    
the  user-agent 
In  workflows 
processes  an  HTTP  redirect  response  requesting  user  to  be 
transferred  from  one  provider  domain  to  another.  In  such 
collaborations, a degree of trust exists between the providers and 
tokens, secrets issued to a user in one domain may be acceptable 
in  another  domain.    Such  secrets  are  included  in  the  body  of  an 
HTTP  request  rather  than  a  cookie  header  since  cookies  are 
domain  specific.  With  this  context,  we  now  highlight  some 
significant  departures  from  typical  cryptographic  protocols  that 
motivate the need for a belief logic designed for the web. 
4.1.2  Principals without Identifying Keys 
Cryptographic  protocols 
that  principals  possess 
identifying keys, either a private key (public key cryptography) or 
a  key  shared  by  an  authentication  server 
(shared  key 
cryptography).  Identities  associated  with  keys  are  global.  While 
service providers on the web often possess identifying keys issued 
by trusted authorities, end-users of web protocols typically do not 
possess  identifying  keys.  Moreover,  when  protocols  require 
identifying  a  user  by  name,  identities  established  are  local  to  a 
provider.  In  web  protocols,  it  is  also  not  uncommon  to  uniquely 
identify  a  user  through  an  action  it performs rather than a name. 
For  these  reasons,  we  allow  principals  without  identifying  keys: 
involving  multiple  providers, 
assume 
P Q
≡
|
|
≡
X
(R2)    
P
|
≡
X
 (R3)                                        
in Alloy, but we are able to handle much more complex protocols 
since  we  use  model  analysis  in  conjunction  with  belief  analysis. 
This  results  in  Alloy  based  analysis  being  performed  for  a 
significantly simplified version of the original protocol.   
3.  OVERVIEW OF BAN 
BAN  statements.  A  formula  in  BAN  logic  [1]  is  constructed 
using operators from Table 1. P and Q range over principals. The 
three  statements  about  keys  and  secrets  represent  atomic 
statements. X represents a BAN formula constructed using one or 
more BAN operators. The expression  X(cid:135)
 means that the message 
X  is  fresh  and  has  not  been  used  before  the  current  run  of  the 
protocol. This is especially true for a nonce, a sequence number or 
timestamp generated with this specific purpose. Nonces are used 
in protocols to defeat replay attacks from previous executions of 
the protocol.  The said and freshness operators can be combined 
into a single says operator.  
Table 1. Operators in BAN Logic. X is a statement of the logic. 
Notation 
Meaning 
|P
X≡
P believes X 
Notation 
P
Q←→
K
Meaning 
 Shared key K 
P
X(cid:18)
P sees X 
|~P
X  
P said X 
|P
X(cid:159)   P controls X 
K Q(cid:54)  