### Master Thesis in Informatics Engineering

This document presents the Master Thesis in Informatics Engineering of the student André Pascoal Bento, conducted during the 2018/2019 academic year at the Department of Informatics Engineering (DEI), Faculty of Sciences and Technology, University of Coimbra.

### 1.1 Context

Software systems are becoming increasingly large and distributed, necessitating new solutions and development patterns. One such approach that has gained prominence in recent years is the decomposition of large monolithic components into interconnected, smaller, function-specific components, known as "Microservices." This approach has become mainstream in the enterprise software development industry [1], [2]. However, while microservices offer several benefits, they also increase system complexity, making anomaly detection a more challenging task [3].

To address this issue, Development and Operations (DevOps) teams employ techniques such as monitoring [4], logging [5], and end-to-end tracing [6] to observe and maintain records of the system's operations. Monitoring involves measuring various infrastructure metrics, such as CPU and hard drive usage, network latency, and other system performance indicators. Logging provides a discrete, event-triggered overview of system activities, while tracing focuses on capturing the flow of execution as requests traverse multiple system modules and boundaries. Distributed tracing can also preserve causality relationships when state is partitioned across multiple threads, processes, machines, and even geographical locations.

### 1.2 Motivation

The primary motivation for this work is to explore and develop methods for performing tracing analysis in microservice-based systems. The complexity and difficulty of analyzing these systems stem from their inherent properties and the nature of the data to be analyzed. DevOps teams often face significant challenges in identifying and understanding problems in distributed systems. Typically, issues are detected only after client complaints, leading to a laborious process of sifting through monitoring metrics, logs, and distributed tracing data to pinpoint the cause. This manual process is time-consuming and often compared to finding a needle in a haystack. Consequently, DevOps teams may resort to restarting services, which can have negative impacts on the entire system.

Given the exponential growth in the amount of data and the increasing difficulty in managing distributed infrastructures, there is a pressing need to simplify the identification of operational problems in distributed systems. This thesis aims to address these needs by researching and presenting methods for performing tracing analysis.

### 1.3 Goals

The main goals of this thesis are:

1. **Review Existing Technologies and Methodologies:**
   - Identify and analyze existing technologies and methodologies used by DevOps teams.
   - Gather best practices for handling tracing data.
   - Understand the advantages and disadvantages of current systems to inform the design and production of a solution capable of performing tracing analysis.
   - Provide an overview of the state of the field, including core concepts, related work, and technologies, as presented in Chapter 2 - State of the Art.

2. **Research Main Needs of DevOps Teams:**
   - Investigate the primary concerns and approaches of DevOps teams in diagnosing microservice-based systems.
   - Relate these approaches to existing research in the field of automatic tracing analysis.
   - Define clear research objectives and compile a list of questions to be evaluated and answered, as detailed in Chapter 3 - Research Objectives and Approach.

3. **Design and Implement a Solution:**
   - Propose and design a solution for performing tracing analysis.
   - Implement the solution using state-of-the-art technologies.
   - Test the solution with tracing data provided by Huawei and collect results.
   - Present the implementation process, results, analysis, and limitations in Chapters 5 - Implementation Process and 6 - Results, Analysis, and Limitations.
   - Conclude the research and suggest future work in Chapter 7 - Conclusion and Future Work.

### 1.4 Work Plan

This work involved an exploratory investigation without a formal development methodology. Regular meetings were scheduled every two weeks to discuss progress and define new research directions. The first semester focused on reviewing published papers, state-of-the-art technologies, and related work, culminating in a proposed solution. In the second semester, two additional colleagues joined the project (DataScience4NP), contributing to broader discussions. The main topics covered in these meetings included the implementation of the proposed solution, research on algorithms and methods for trace processing, and the analysis of gathered data.

**Time Spent:**
- First Semester: 16 hours per week, totaling 304 hours (from September 11, 2018, to January 21, 2019).
- Second Semester: 40 hours per week, totaling 840 hours (from February 4, 2019, to June 28, 2019).

**Work Plan Adjustments:**
- **First Semester:**
  - Task 1 (Study the state of the art) was split into two tasks: Project Contextualization and Background, and State of the Art. These tasks took longer than expected due to the limited existing work on trace processing and analysis.
  - Task 2 (Integrate the existing work) was replaced by Prototyping and Technologies Hands-On to test state-of-the-art technologies and enhance data visualization.

- **Second Semester:**
  - The initial work plan was adjusted based on the research progress.
  - Task 1 (Metrics collector tool) was reduced, and the focus shifted to analyzing research questions.
  - New tasks were introduced, including restructuring research questions, developing a data analyzer tool, and writing a paper for NCA 2019.

### 1.5 Research Contributions

The following research contributions were made as part of this thesis:
- **Publication:**
  - André Bento, Jaime Correia, Ricardo Filipe, Filipe Araujo, and Jorge Cardoso. On the Limits of Automated Analysis of OpenTracing. International Symposium on Network Computing and Applications (IEEE NCA 2019).

### 1.6 Document Structure

This section outlines the structure of the document, providing a brief explanation of each chapter:

- **Chapter 1 - Introduction:**
  - Introduces the context, motivation, goals, work plan, research contributions, and document structure.

- **Chapter 2 - State of the Art:**
  - Presents the current state of the field, divided into three sections:
    - **Section 2.1 - Concepts:** Introduces core concepts necessary for understanding the thesis.
    - **Section 2.2 - Technologies:** Reviews current technologies that can help solve the problem and produce a proposed solution.
    - **Section 2.3 - Related Work:** Discusses related research in the field of distributed tracing data handling.

- **Chapter 3 - Research Objectives and Approach:**
  - Details the problem, research objectives, and a compilation of research questions, divided into:
    - **Section 3.1 - Research Objectives:** Defines the problem, approach, and objectives.
    - **Section 3.2 - Research Questions:** Compiles and evaluates research questions.

- **Chapter 4 - Proposed Solution:**
  - Describes the proposed solution in detail, divided into:
    - **Section 4.1 - Functional Requirements:** Lists functional requirements with priority levels.
    - **Section 4.2 - Quality Attributes:** Outlines non-functional requirements.
    - **Section 4.3 - Technical Restrictions:** Specifies technical restrictions.
    - **Section 4.4 - Architecture:** Presents the solution architecture and its validation.

- **Chapter 5 - Implementation Process:**
  - Details the implementation process, divided into:
    - **Section 5.1 - Huawei Tracing Data Set:** Describes the tracing data set provided by Huawei.
    - **Section 5.2 - OpenTracing Processor Component:** Presents the implementation of the first component.
    - **Section 5.3 - Data Analyzer Component:** Describes the implementation of the data analyzer.

- **Chapter 6 - Results, Analysis, and Limitations:**
  - Presents the results, analysis, and limitations of the implemented solution.

- **Chapter 7 - Conclusion and Future Work:**
  - Summarizes the research and suggests future work.