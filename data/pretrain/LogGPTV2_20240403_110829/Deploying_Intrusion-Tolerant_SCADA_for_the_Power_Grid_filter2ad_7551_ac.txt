timing requirements of the plant engineers, and was even able
to reﬂect changes more quickly than the commercial system.
VI. LESSONS LEARNED
Our experiences deploying intrusion-tolerant SCADA re-
sulted in lessons in three dimensions: technical lessons, lessons
Fig. 5. Spire installed in a DCS room rack at the Hawaiian Electric Company.
Fig. 6. Close-up of Spire installation shown in Figure 5.
not actively generating power (as it was no longer needed
to meet demand) it had active control systems that were
connected to the grid. The goal of this test deployment
was to verify that
the system could function in a power
grid environment without degrading SCADA performance and
without adverse effects on the other power plant systems.
The deployment again began with a week-long setup and
integration period. While the red team experiment described
above involved controlling a real PLC with emulated breakers,
in this deployment Spire controlled a real PLC connected
to real breakers. The engineers at the power plant created a
subset of the topology shown in Figure 4, including the three
breakers on the left of the ﬁgure (B10-1, B57, B56). During the
setup period, we again built a new HMI to display this power
topology and integrated its state into our SCADA master.
This deployment included six diverse SCADA master repli-
cas to simultaneously support one intrusion and one proactive
recovery while maintaining continuous correct operation with
guaranteed performance (bounded delay for update execution).
A PLC proxy was used to communicate with the PLC using
the Modbus communication protocol, similarly to the setup
333
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply. 
related to conducting a successful red team experiment and
deployment, and longer-term lessons related to transitioning
intrusion-tolerant technology in the power industry.
A. Technical lessons
The low level setup in Section III-B is far from the topics
considered in most academic papers, but all of these steps need
to be taken before sophisticated intrusion-tolerant protocols
can even have a chance to be relevant. If an attacker can
circumvent the protocols at a lower level, they can break the
(often implicit) assumptions the protocols rely on.
that
Our red team experience highlighted the point
the
network is a major attack vector that is often overlooked. Low-
level network attacks do not require any protocol- or domain-
speciﬁc knowledge and are a common strength of experienced
hacker teams. We saw that the red team’s ﬁrst line of attack
was to attempt
low-level man-in-the-middle and denial of
service attacks; if we had not performed the network setup
described in Section III-B (including both the switch setup and
the architecture of using two separate networks and putting the
PLC behind a proxy), the red team would likely have been able
to succeed in at least causing a denial of service without even
attempting attacks at the Spines or SCADA system levels.
Similarly, at the operating system level, our effort in porting
all system components to the latest minimal CentOS server
version was important in preventing the red team from easily
escalating their privilege level once they were given access to
one of the replicas.
From a defense-in-depth perspective, we also learned that
we could have improved the way we compiled and ran our
code to make the attackers’ job harder. One factor that helped
the red team patch the Spines binary with their attempted
exploit was the fact that we had compiled the code to in-
clude debugging symbols. While stripping symbols from the
executable would not prevent the red team from patching
the binary, it would increase the time required to execute
the attack. Similarly, during a debrief the red team explained
that specifying options to the program through commandline
parameters and a conﬁguration ﬁle made it easier for them
to understand what was running once they got access to a
SCADA master replica; compiling these options into the pro-
gram would make their information gathering more difﬁcult.
B. Lessons for Successful Red Team and Deployment
Beyond the technical, we learned several
lessons about
how to prepare for and execute these types of experiments
and deployments successfully. One of the key lessons was
the importance of establishing rapport well ahead of the
actual experiment. Compared with three previous red team
experiments that our group has taken part in over the years
(with different systems), this one was somewhat less open
and collaborative, which may have been partially due to
the fact that the red team was physically located off-site.
While this setup more realistically models the threat posed
by remote cyberattacks, the ability to interact with the red
team in person would have improved our ability to understand
the exact attacks they carried out (which we mainly learned
about from MANA, on-site monitoring, and a post-experiment
debrief) and may have enabled them to launch a wider range
of protocol-speciﬁc attacks once the low-level attacks had
failed. The ability to work with power plant engineers in the
second deployment experience led to a mutually beneﬁcial
experience that improved both sides’ understanding of how
our technology ﬁts into the operation of a real power plant.
We also learned that the emerging open-source SCADA
ecosystem has made it possible to effectively prepare for such
experiments using emulation. Prior to the red team experiment,
Spire had never been tested with a real PLC, but we were able
to test the system end-to-end using OpenPLC [19] to emulate
PLCs on Linux. This allowed us to set up the system in our
lab and then transition to the real PLC in the deployment with
only minimal changes.
Despite the ability to prepare via emulation ahead of time,
both deployments required short-notice on-site development to
make them a success. Both deployments were intensive two-
week experiences, where the ﬁrst week was devoted to setup,
integration, and ﬁnal development. These development and test
environments were also signiﬁcantly different from those we
were used to, including a national lab with restricted Internet
and phone use, as well as a power plant where protective
personnel equipment (safety glasses, hard hats, steel-toed
boots) was required at all times when moving between rooms.
C. Lessons for Transition in the Power Industry
The power plant deployment highlighted the complex nature
of power grid monitoring and control systems today and
the need for close collaboration with the power industry to
develop holistic solutions. In contrast to a single monolithic
SCADA system, the power plant included several distinct sub-
systems for generation and transmission. While our intrusion-
tolerant SCADA system successfully controlled a small piece
of a transmission topology, much more collaborative work is
needed to understand the full power plant system architecture
and design a holistic architecture for intrusion tolerance.
Moreover, given the conservative nature of the industry, an
incremental transition approach is necessary to gain the trust
of power grid operators and decision makers and mitigate con-
cerns over introducing changes into systems where reliability
is critical. The participation of the power plant engineers in the
design of the red team experiment was essential in building
their trust for the power plant deployment, and that deployment
takes a ﬁrst step toward building the conﬁdence needed for
ultimate transition, although this is likely to be a long process.
VII. RELATED WORK
Previous work has used intrusion-tolerant replication to
create SCADA systems that are resilient to SCADA mas-
ter compromises and addressed many of the challenges of
adapting real SCADA applications to ﬁt the state machine
replication model. However, to the best of our knowledge,
none of these systems have been tested by a nation-state-level
red team or deployed in a power plant.
334
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply. 
Zhao et al. [4] use PBFT [10] with four replicated SCADA
controllers and show that a simulated power grid scenario in
a LAN can meet the required sub-second sampling rate of
SCADA operations. Kirsch et al. [6] use Prime [11] to add
intrusion tolerance to a Siemens SCADA product in a proto-
type implementation. Medeiros proposes a fault- and intrusion-
tolerant architecture for the EDP Distribuicao SCADA sys-
tem [5] that leverages knowledge of the Portuguese electric
grid to analyze the proposed architecture’s ability to reduce
downtime of SCADA services caused by benign faults.
Nogueira et al. [8] implement SMaRt-SCADA, an intrusion-
tolerant prototype that integrates Eclipse NeoSCADA [20]
with BFT-SMaRt [21]. The authors identify several challenges
with making a traditional SCADA master support intrusion-
tolerant replication, which they overcome by using proxies that
serialize all messages and logical timeouts that synchronize
timeouts across different replicas.
The BFT-SMaRt
library underlying SMaRt-SCADA has
also addressed the state transfer and state management chal-
lenges of supporting real applications that must tolerate par-
titions and proactive recoveries [22], allowing it to provide a
BFT ordering service for the Hyperledger Fabric blockchain
platform [23]. BFT-SMaRt provides a generic interface for
persistent state management and transfer. In contrast, our
approach is not generic but is tailored for SCADA systems
where the state of ﬁeld devices represents the ground-truth;
this makes it possible to recover from temporary assumption
breaches and does not require persistent state.
VIII. CONCLUSION
We have described our experience deploying intrusion-
tolerant SCADA in a nation-state-level red team experiment
and a power plant test deployment for the ﬁrst time. These ex-
periences offered technical lessons in supporting the assump-
tions of intrusion-tolerant protocols and employing defense-in-
depth (integrating low-level security, protocol-level intrusion
tolerance, and intrusion detection), as well as meta-lessons for
experimentation and transition in the power industry.
ACKNOWLEDGEMENT
We thank David Rolla, Bryan Tepper, John Tica, Keith
Webster, and the rest of the team at the Hawaiian Electric
Company for their strong support throughout this work. We
thank Jim Brown, Cliff Eyre, David Linneman, and the rest
of the team at Paciﬁc Northwest National Lab for hosting and
managing the red team experiment. This work was supported
in part by DoD Environmental Security Technology Certiﬁca-
tion Program (ESTCP) Project EW-201607 to Resurgo LLC.
Its contents are solely the responsibility of the authors and do
not represent the ofﬁcial view of the Department of Defense.
Yair Amir is a co-founder and member of and holds
equity in Spread Concepts LLC. The results discussed in this
paper could affect the value of Spread Concepts LLC. This
arrangement has been reviewed and approved by the Johns
Hopkins University in accordance with its conﬂict of interest
policies.
REFERENCES
[1] A. N. Bessani, P. Sousa, M. Correia, N. F. Neves, and P. Verissimo,
“The crutial way of critical infrastructure protection,” IEEE Security &
Privacy, vol. 6, no. 6, pp. 44–51, Nov 2008.
[2] S. Zonouz, J. Rrushi, and S. McLaughlin, “Detecting industrial con-
trol malware using automated PLC code analytics,” IEEE Security &
Privacy, vol. 12, no. 6, pp. 40–47, Nov 2014.
[3] D. Shelar, P. Sun, S. Amin, and S. Zonouz, “Compromising security of
economic dispatch in power system operations,” in IEEE/IFIP Interna-
tional Conference on Dependable Systems and Networks (DSN), June
2017, pp. 531–542.
[4] W. Zhao and F. E. Villaseca, “Byzantine fault tolerance for electric power
grid monitoring and control,” in International Conference on Embedded
Software and Systems, July 2008, pp. 129–135.
[5] N. A. C. Medeiros, “A fault- and intrusion- tolerant architecture for
EDP distribuicao SCADA system,” Master’s thesis, University of Lisbon,
2011.
[6] J. Kirsch, S. Goose, Y. Amir, D. Wei, and P. Skare, “Survivable SCADA
via intrusion-tolerant replication,” IEEE Transactions on Smart Grid,
vol. 5, no. 1, pp. 60–70, Jan 2014.
[7] A. Babay, T. Tantillo, T. Aron, M. Platania, and Y. Amir, “Network-
attack-resilient
the power grid,” in
IEEE/IFIP International Conference on Dependable Systems and Net-
works (DSN), June 2018, pp. 255–266.
intrusion-tolerant SCADA for
[8] A. Nogueira, M. Garcia, A. Bessani, and N. Neves, “On the challenges
of building a BFT SCADA,” in IEEE/IFIP International Conference on
Dependable Systems and Networks (DSN), June 2018, pp. 163–170.
[9] “Spire: Intrusion-tolerant SCADA for the power grid,” http://www.dsn.
jhu.edu/spire/, access: 2019-04-11.
[10] M. Castro and B. Liskov, “Practical Byzantine fault
tolerance and
proactive recovery,” ACM Transactions on Computer Systems, vol. 20,
no. 4, pp. 398–461, Nov. 2002.
[11] Y. Amir, B. Coan, J. Kirsch, and J. Lane, “Prime: Byzantine replication
under attack,” IEEE Transactions on Dependable and Secure Computing,
vol. 8, no. 4, pp. 564–577, July 2011.
[12] A. Homescu, S. Neisius, P. Larsen, S. Brunthaler, and M. Franz, “Proﬁle-
guided automated software diversity,” in IEEE/ACM Int. Symposium on
Code Generation and Optimization (CGO), Feb 2013, pp. 1–11.
[13] Secure
Systems
Lab,
“Multicompiler,”
https://github.com/
securesystemslab/multicompiler, access: 2019-04-11.
[14] T. Roeder and F. B. Schneider, “Proactive obfuscation,” ACM Transac-
tions on Computer Systems, vol. 28, no. 2, pp. 4:1–4:54, Jul. 2010.
[15] P. Sousa, A. Bessani, M. Correia, N. F. Neves, and P. Verissimo, “Highly
available intrusion-tolerant services with proactive-reactive recovery,”
IEEE Transactions on Parallel & Distributed Systems, vol. 21, no. 4,
pp. 452–465, 2010.
[16] D. Obenshain, T. Tantillo, A. Babay, J. Schultz, A. Newell, M. E. Hoque,
Y. Amir, and C. Nita-Rotaru, “Practical intrusion-tolerant networks,”
in IEEE International Conference on Distributed Computing Systems
(ICDCS), June 2016, pp. 45–56.
[17] K.
Jordan, E.
Jordan,
and K. Ruddell,
cyber
“ESTCP executive
defense-in-depth,”
Critical
summary:
https://www.serdp-estcp.org/content/download/48244/459154/ﬁle/
EW-201607%20Executive%20Summary.pdf, August
2019-04-11.
infrastructure
2018,
access:
[18] ——, “ESTCP ﬁnal report: Critical
infrastructure cyber defense-in-
depth,”
https://www.serdp-estcp.org/content/download/48251/459244/
ﬁle/EW-201607%20Final%20Report.pdf, August 2018, access: 2019-
04-11.
[19] T. Alves, “The OpenPLC project,” http://www.openplcproject.com/, ac-
cess: 2019-04-11.
04-11.
[20] “Eclipse neoscada,” http://www.eclipse.org/eclipsescada/, access: 2019-
[21] A. Bessani, J. Sousa, and E. E. P. Alchieri, “State machine replication for
the masses with BFT-SMART,” in IEEE/IFIP International Conference
on Dependable Systems and Networks, June 2014, pp. 355–362.
[22] A. N. Bessani, M. Santos, J. Felix, N. F. Neves, and M. Correia, “On
the efﬁciency of durable state machine replication,” in USENIX Annual
Technical Conference, June 2013, pp. 169–180.
[23] J. Sousa, A. Bessani, and M. Vukolic, “A byzantine fault-tolerant
ordering service for the hyperledger fabric blockchain platform,” in
IEEE/IFIP International Conference on Dependable Systems and Net-
works (DSN), June 2018, pp. 51–58.
335
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply.