# Checklist
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have included all related issues and possible duplicate issues in this issue.
  * I have included the contents of `pip freeze` in the issue.
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have tried reproducing the issue on more than one message broker and/or result backend.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with retries, ETA/Countdown & rate limits disabled.
**ISSUE**  
Working with celery 4.2.0 and Redis as broker and backend.
Having a task
    @shared_task()
    def add(a, b):
        return a+b
And while a worker is active, running the fallowing command:
`add.apply_async(countdown=60) `Results in the task not being registered to
the default celery queue, but still being executed after the period of time
stated in countdown
Why is that, and how can I look for all pending tasks? Doing this would have
worked if the task would be registered to the queue:
        with celery_app.pool.acquire(block=True) as conn:
            tasks = conn.default_channel.client.lrange('celery', 0, -1)
If I terminate the worker while task havent been started I get the fallowing:
> [WARNING/MainProcess] Restoring 1 unacknowledged message(s)
This tells me the task is kept somewhere else other then the queue, but why ?