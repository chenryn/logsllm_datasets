primitives do not permit router-level shortest path routing between
two instances of different protocol types (e.g., OSPF and RIP). In
such a setting, the cost of a redistributed route is set to a value with
no relation to the cost of the initial route. The cost information to
the destination is therefore lost at the ﬁrst redistribution point. Even
when redistributing between OSPF instances, the existing proce-
dure has the following additional limitation. When a route from an
OSPF instance is redistributed into a different OSPF instance , the
cost can only be set to either an arbitrary value that is independent
from the initial cost, or its original value. The current route redis-
tribution procedure does not permit the cost of redistributed routes
to be modiﬁed between the instances through a function. How-
ever, operational networks may rely on the OSPF cost to reﬂect the
physical distance between routers. When different units are used in
each instance (e.g., miles versus meters), router-level shortest path
routing is not possible.
In contrast, with the new design, operators can specify their own
conversion functions. The new primitives enable router-level short-
est path routing between any pair of IGP instances. We imple-
mented the network of Figure 10. It consists of two routing protocol
instances: OSPF and RIP. Their routing metrics represent the phys-
ical distance in different units (e.g., meters and miles, respectively.)
The described conversion functions at the border routers (B, D) al-
low geographical shortest path routing across the instances, despite
the usage of different units in each domain. We modiﬁed the costs
of the different links, and the shortest path (e.g., between A and C)
was consistently selected.
7.3 Trafﬁc engineering
Current trafﬁc engineering techniques are only applicable within
one IGP routing protocol instance [12] or between BGP domains
[26]. Our primitives, with their support for router level shortest
path routing, naturally extends trafﬁc engineering across multiple
routing instances without requiring any additional coordination be-
tween the instances.
To illustrate the existing limitations and newly supported capa-
bilities, consider the example network depicted in Figure 11. The
network is composed of three routing protocol instances (OSPF
10, RIP, OSPF 20). Network operators frequently adjust the IGP
weights to minimize congestion. The adjustments of IGP weights
aim at redirecting trafﬁc over less congested links. However, this
technique is currently applicable only within a single routing pro-
tocol instance. We assume that the link B-C is congested and its
228OSPF 10
20
D
20
50−>400
C
Z
10
B
100
Y
RIP
1
1
A
X
OSPF 20
20
30
S
Company XYZ
Site 1
OSPF
CE1
PE1
Company XYZ
Site 2
RIP
PE2
CE2
BGP
Backbone
Figure 11: Illustration of trafﬁc engineering across routing pro-
tocol instances.
Figure 12: Illustration of typical VPN scenario.
weight is therefore increased to a larger value. The goal is for
senders (e.g., S) to select the less resource constrained paths (e.g.,
S-X-Y -Z-D). However, because redistributed routes are assigned
a static metric values (e.g., at B, Y , A and X), the initial weight
information is lost and senders may still select the congested paths
(e.g., S-A-B-C-D). Although the metrics of redistributed routes
could be updated at the border routers B and Y in times of con-
gestion, the operators of OSPF 10 may have no control over the
border routers A and X. As a consequence, congestion cannot be
minimized across multiple routing instances. In comparison, our
implementation eliminates this limitation.
We implemented the network in Figure 11. We did not modify
the default conversions at the border routers. We observed that with
the cost of B-C set to 50, S received two paths to D: D-C-B-A-S
with a cost of 276, and D-Z-Y -X-S with a cost of 655. Because
of its lower cost, S selected the ﬁrst path to forward trafﬁc to D.
Then, after increasing the cost of B-C to 400, the cost of the route
redistributed by A into OSPF was updated to 1296. Consequently,
S switched to the second path to forward its trafﬁc to D.
7.4 Virtual private networks
Section 5.1 introduces a limitation to BGP: Routes cannot be re-
distributed from BGP into an IGP. An important question that nat-
urally ensues is: Does this new restriction prevent existing design
objectives from being achieved?
Empirical studies [21] have revealed that network often inject
routes from BGP into an IGP, especially in VPN deployments. As
illustrated in Figure 12, a company (e.g., XYZ) may have multiple
sites (e.g., Site 1, Site 2) with their own routing protocol (e.g., RIP,
OSPF). To allow connectivity between the sites, the company relies
on a service provider backbone. Routes from one site (e.g., OSPF
routes from Site 1) are ﬁrst redistributed into the backbone (i.e.,
BGP cloud) at an provider edge (PE) router (e.g., PE 1). The routes
are propagated through the BGP backbone, and then redistributed
from BGP into the IGP of each remote site (e.g., RIP from Site 2)
at the connecting PEs (e.g., PE 2).
The fact that the new primitives prevent this type of redistribution
may therefore be a serious impediment to its adoption. However,
it turns out that the same objective can readily be achieved without
any redistribution from BGP into IGP. For simple scenarios, a cus-
tomer edge (CE) router (e.g., CE 1) can originate a default route in
the respective site’s IGP (e.g., Site 1’s OSPF), and be conﬁgured
with a static route pointing to the connecting PE (e.g., PE 1) for
the default route (0.0.0.0/0). As an alternative, BGP can also be
deployed in the company’s sites. Then, operators simply need to
redistribute the IGP routes into BGP at each site, and control the
route propagation through BGP policies. In future work, we will
seek to further understand the full impact of the OSPF and BGP
restrictions stipulated in our design on network operations.
7.5 Strict preference policy
The current route selection allows routers to strictly prefer routes
from one protocol instance over another, e.g., “Always prefer OSPF
Attribute
Protocol
Protocol
To universal domain
Φprotocol→0
OSPF OSPF → 254
RIP → 254
RIP
EIGRP
EIGRP → 254
static → 254
static
From universal domain
Φ0→protocol
* → OSPF
* → RIP
* → EIGRP
NA
Table 3: Additional default conversion functions for the new
protocol attribute.
routes to RIP routes”. This type of policy might be useful to im-
plement blackholes (e.g., in the event of DDoS). This section il-
lustrates how our design can be extended to support such strict
preference policy. Every non-BGP routing protocol instance is
modeled as a 3-ary routing algebra: {protocol, type, cost}. The
new protocol attribute is ﬁrst considered when comparing non-BGP
routes. Its has an integer range from 1 to 255 in the universal met-
ric space, with 255 corresponding to the prohibited path. EIGRP,
OSPF, RIP and static routes are deﬁned to be of protocol type
“EIGRP”, “OSPF”, “RIP” and “static”, respectively. Table 3 presents
the additional default conversion functions. All protocols are equally
preferred by default. This design extension supports strict prefer-
ence policies in addition to the previously presented objectives. To
specify a strict preference for a protocol instance, simply override
that instance’s conversion function in the protocol dimension at all
its border routers, e.g., from “OSPF → 254” to “OSPF → 10”. Do-
ing so will not result in routing anomalies as long as the new set of
conversion functions conform to Condition 1.
8. RELATED WORK
A large body of work exists on the correctness of routing. How-
ever, most of prior work considered a speciﬁc protocol at a time.
For RIP, the focus was on solving the “count to inﬁnity” prob-
lem. For OSPF, special attention was given to its stability issues
[4, 27]. For BGP, various causes for potential routing anomalies
have been identiﬁed, followed by the development of thorough an-
alytical models and solutions. The insights gained from these ef-
forts led researchers to explore design principles towards the cre-
ation of a safer inter-domain protocol [16, 19, 10, 11] and more
abstractly, develop unifying algebraic frameworks identifying fun-
damental properties a vector or link-state routing protocol must sat-
isfy to ensure correct behaviors [29, 17].
In fact, prior to these
results, researchers had already started adopting an algebraic ap-
proach to routing [7, 13, 14]. However, these algebraic structures
may abstract away too many routing protocol speciﬁc dynamics
and some possess properties that are not realistic for contemporary
routing protocols. For example, neither IGRP nor BGP satisﬁes the
distributivity property required by dioids.
For routing across multiple routing protocol instances, several
analytical models were recently introduced [22, 23], enabling a rig-
orous analysis of the current design of connecting primitives and
exposing its deﬁciencies. These models also made the formula-
tion of practical conﬁguration guidelines possible [20]. However,
229this approach is inherently backward-looking. The models only
apply to existing solutions, and the derived guidelines further re-
strict the expressiveness of the already rigid current primitives. Re-
cently, two researchers [6] have proposed a new algebraic approach
based on idempotent semirings to model routing, including the case
across multiple routing instances. While the approach is general
and promising, it models only route redistribution, not AD, nor the
interaction of route redistribution and AD, which was left as fu-
ture work. The closest related work to our proposal is the “metric
transformations” introduced by Mills and Braun in 1987 [25]. This
concept is similar to our notion of “conversion functions” as it per-
mits to exchange routes between routing instances and derive the
metric of the newly redistributed routes. Understandably, Mills and
Braun focused on routing protocols with only a single metric (e.g.,
RIP) and with a distance vector mode of computation between the
routing instances. In comparison, our formal framework applies to
routing protocols with multiple criteria, allows a link-state mode of
redistribution across the routing instances, and identiﬁes sufﬁcient
conditions for routing safety and optimal paths.
9. DISCUSSION
Several important questions still need to be investigated. On the
theory front, can we ﬁnd safety conditions without requiring all
border routers of the same routing instance to use identical conver-
sion functions? As the ﬁne-grained effects of different path compu-
tation algorithms on routing correctness are better understood [30],
can we weaken the sufﬁcient conditions for the conversion func-
tions? In addition, we note that while the notion of conversion
functions is general and can model the existing mechanisms, our
theory concentrates on routing protocols that rank routes based on
a lexical product of multiple attributes. All existing routing pro-
tocols indeed fall into this category. However, should new routing
protocols with different ways of ranking routes emerge, new sufﬁ-
cient conditions may need to be derived. On the design front, there
may be important operational requirements that are little known
outside the selected operational communities. How do we collect
them if this is indeed the case? Furthermore, how can we anticipate
requirements that may arise in the future?
10. CONCLUSION
We have presented a new theory to reason about the safety of
routing across multiple routing instances.
In addition, we iden-
tify as set of conditions for the connecting primitives to guarantee
correct routing and optimal paths. The second part of the paper
describes an application of the theory to create a new set of con-
necting primitives that are much safer and more ﬂexible than the
currently deployed version. We assumed no changes to the speci-
ﬁcations of the existing routing protocols, and we demonstrate that
with very minimum changes to how they should be conﬁgured, the
new primitives can not only support existing operational objectives
but also enable new functions that are important but not feasible
today, all the while guaranteeing routing safety. In the big picture,
our effort can be viewed as another example that underscores the
importance and feasibility of principled design, which we believe
can help all phases of network operations.
11. ACKNOWLEDGEMENT
We thank the SIGCOMM TPC and Joao Sobrinho for their con-
structive comments on early drafts of the work. Yi Zhuang and
Aditya Bhave contributed to the XORP implementation. This re-
search was partially supported by the NSF under the 100x100 project
[1] (ANI-0331653), the 4D project [2] (ANI-0520187 & ANI-0520210),
grant CNS-0721574 and a graduate research fellowship. Views and
conclusions contained in this document are those of the authors and
should not be interpreted as representing the ofﬁcial policies, either
expressed or implied, of NSF or the U.S. government.
12. REFERENCES
[1] 100x100 Clean Slate Project. www.100x100network.org.
[2] 4D Project. www.cs.cmu.edu/∼4D.
[3] XORP: eXtensible Open source Routing Platform. www.xorp.org.
[4] A. Basu and J. G. Riecke. Stability Issues in OSPF Routing. In ACM
SIGCOMM, 2001.
[5] T. Benson, A. Akella, and D. Maltz. Unraveling the Complexity of
Network Management. In USENIX NSDI, 2009.
[6] J. N. Billings and T. G. Grifﬁn. A Model of Internet Routing Using
Semi-modules. In International Conference on Relational Methods
in Computer Science, 2009.
[7] B. Carré. Graphs and Networks. Oxford University Press, 1979.
[8] Cisco. OSPF Redistribution Among Different OSPF Processes, 2006.
[9] Cisco. What Is Administrative Distance?, March 2006.
[10] N. Feamster, H. Balakrishnan, and J. Rexford. Some Foundational
Problems in Interdomain Routing. In HotNets, 2004.
[11] N. Feamster, R. Johari, and H. Balakrishnan. Implications of
Autonomy for the Expressiveness of Policy Routing. In ACM
SIGCOMM, 2005.
[12] B. Fortz, J. Rexford, and M. Thorup. Trafﬁc Engineering With
Traditional IP Routing Protocols. In IEEE Communication
Magazine, 2002.
[13] M. Gondran and M. Minoux. Graphs and Algorithms. Wiley, 1984.
[14] M. Gondran and M. Minoux. Graphs, Dioids, and Semirings : New
Models and Algorithms. Springer, 2008.
[15] M. G. Gouda and M. Schneider. Maximizable Routing Metrics. In
IEEE ICNP, 1998.
[16] T. G. Grifﬁn, A. D. Jaggard, and V. Ramachandran. Design
Principles of Policy Languages for Path Vector Protocols. In ACM
SIGCOMM, 2003.
[17] T. G. Grifﬁn and J. L. Sobrinho. Metarouting. In ACM SIGCOMM,
2005.
[18] A. Gurney and T. G. Grifﬁn. Lexicographic Products in Metarouting.
In ICNP, 2007.
[19] A. D. Jaggard and V. Ramachandran. Robustness of Class-Based
Path-Vector Systems. In IEEE ICNP, 2004.
[20] F. Le and G. Xie. On Guidelines for Safe Route Redistributions. In
ACM INM Workshop, 2007.
[21] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding Light on the
Glue Logic of the Internet Routing Architecture. In ACM
SIGCOMM, 2008.
[22] F. Le, G. Xie, and H. Zhang. Understanding Route Redistribution. In
IEEE ICNP, 2007.
[23] F. Le, G. Xie, and H. Zhang. Instability Free Routing: Beyond One
Protocol Instance. In ACM CoNEXT, 2008.
[24] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjalmtysson, and
A. Greenberg. Routing Design in Operational Networks: A Look
from the Inside. In ACM SIGCOMM, 2004.
[25] D. Mills and H. Braun. The NSFNET Backbone Network. In ACM
SIGCOMM, 1987.
[26] B. Quoitin, C. Pelsser, L. Swinnen, O. Bonaventure, and S. Uhlig.
Interdomain Trafﬁc Engineering with BGP. In IEEE Communication
Magazine, 2003.
[27] A. Shaikh, C. Isett, A. Greenberg, M. Roughan, and J. Gottlieb. A
Case Study of OSPF Behavior in a Large Enterprise Network. In
IMW, 2002.
[28] J. Sobrinho. Algebra and Algorithms for QoS Path Computation and
Hop-by-Hop Routing in the Internet. In IEEE INFOCOM, 2001.
[29] J. L. Sobrinho. Network Routing With Path Vector Protocols:
Theory and Applications. In ACM SIGCOMM, 2003.
[30] J. L. Sobrinho and T. G. Grifﬁn. Routing in Equilibrium. In
Mathematical Theory of Networks and System, 2010.
230