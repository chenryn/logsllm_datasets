through exception analysis and testing. In: Proceedings of the 10th IEEE International Conference on Engineering
of Complex Computer Systems, 2005. ICECCS 2005. pp. 432–439.
[32] Choi, J., 2007. Kernel aware module veriﬁcation for robust reconﬁgurable operating system. Journal of Informa-
tion Science and Engineering 23 (5), 1339–1347.
[33] Chuanming, J., Zhiliang, W., Xia, Y., Jianping, W., 2008. A formal approach to robustness testing of network pro-
tocol. In: Network and Parallel Computing. IFIP International Conference, NPC 2008. 18-20 Oct. 2008. Springer-
Verlag, Berlin, Germany, pp. 24–37.
[34] Chung, L., do Prado Leite, J., 2009. On non-functional requirements in software engineering. In: Borgida, A.,
Chaudhri, V., Giorgini, P., Yu, E. (Eds.), Conceptual Modeling: Foundations and Applications. Vol. 5600 of
Lecture Notes in Computer Science. Springer Berlin / Heidelberg, pp. 363–379.
[35] Costa, D., Madeira, H., 1999. Experimental assessment of COTS DBMS robustness under transient faults. In:
Proceedings of the 1999 Paciﬁc Rim International Symposium on Dependable Computing, 16-17 Dec. 1999.
IEEE Computer Society, Los Alamitos, CA, USA, pp. 201–208.
[36] Costa, D., Rilho, T., Madeira, H., 2000. Joint evaluation of performance and robustness of a COTS DBMS through
fault-injection. In: Proceedings of the International Conference on Dependable Systems and Networks (includes
FTCS-30 30th Annual International Symposium on Fault-Tolerant Computing and DCCA-8), 25-28 June 2000.
IEEE Computer Society, Los Alamitos, CA, USA, pp. 251–260.
[37] Csallner, C., Smaragdakis, Y., 2004. JCrasher: an automatic robustness tester for Java. Software-Practice & Ex-
perience 34 (11), 1025–1050.
[38] de la Puente, J. A., 1994. Real-time software development: a perspective. In: Proceedings of the 12th Triennial
World Congress of the International Federation of Automatic Control, 18-23 July 1993. Pergamon, Oxford, UK,
pp. 693–696.
[39] De Vale, J., Koopman, P., 2002. Robust software - no more excuses. In: Proceedings of the International Confer-
ence on Dependable Systems and Networks, 23-26 June 2002. IEEE Computer Society, Los Alamitos, CA, USA,
pp. 145–154.
[40] Dehnert, J., 2002. Non-controllable choice robustness expressing the controllability of workﬂow processes. In:
Proceedings of the Application and Theory of Petri Nets 2002. 23rd International Conference, ICATPN 2002. 24-
30 June 2002. Vol. 2360 of Lecture Notes in Computer Science. Springer-Verlag, Berlin, Germany, pp. 121–141.
[41] Demsky, B., Dash, A., 2008. Bristlecone: A language for robust software systems. In: ECOOP 2008 - Object-
Oriented Programming. 22nd European Conference, 7-11 July 2008. ECOOP 2008 - Object-Oriented Program-
ming. 22nd European Conference. Springer-Verlag, Berlin, Germany, pp. 490–515.
26
[42] Demsky, B., Sundaramurthy, S., 2010. Bristlecone: Language support for robust software applications. Software
Engineering, IEEE Transactions on PP (99), 1.
[43] DeVale, J., Koopman, P., 2001. Performance evaluation of exception handling in i/o libraries. In: Proceedings of
the International Conference on Dependable Systems and Networks, 1-4 July 2001. IEEE Computer Society, Los
Alamitos, CA, USA, pp. 519–524.
[44] Dingman, C. P., Marshall, J., Siewiorek, D. P., 1995. Measuring robustness of a fault tolerant aerospace system. In:
25th International Symposium on Fault-Tolerant Computing. Digest of Papers, 27-30 June 1995. IEEE Computer
Society, Los Alamitos, CA, USA, pp. 522–527.
[45] Dix, M., Hofmann, H. D., 2002. Automated software robustness testing - static and adaptive test case design meth-
ods. In: Proceedings of the 28th Euromicro Conference, 4-6 Sept. 2002. IEEE Computer Society, Los Alamitos,
CA, USA, pp. 62–66.
[46] Dolev, S., Gersten, O., 2010. A framework for robust active super tier systems. International Journal on Software
Tools for Technology Transfer 12 (Copyright 2011, The Institution of Engineering and Technology), 53–67.
[47] Dybå, T., Dingsoyr, T., 2008. Empirical studies of agile software development: A systematic review. Information
and Software Technology 50 (9-10), 833–859.
[48] Dybå, T., Kampenes, V., Sj¨oberg, D., 2006. A systematic review of statistical power in software engineering
experiments. Information and Software Technology 48 (8), 745–755.
[49] Engstr¨om, E., Runeson, P., Skoglund, M., 2010. A systematic review on regression test selection techniques.
Information and Software Technology 52 (1), 14–30.
[50] Fernandez, J., Mounier, L., Pachon, C., 2005. A model-based approach for robustness testing. Testing of Commu-
nicating Systems, 333–348.
[51] Fernsler, K., Koopman, P., 1999. Robustness testing of a distributed simulation backplane. In: Proceedings of the
10th International Symposium on Software Reliability Engineering, 1-4 Nov. 1999. IEEE Computer Society, Los
Alamitos, CA, USA, pp. 189–198.
[52] Fetzer, C., Zhen, X., 2002. An automated approach to increasing the robustness of c libraries. In: Proceedings of
the International Conference on Dependable Systems and Networks, 23-26 June 2002. IEEE Computer Society,
Los Alamitos, CA, USA, pp. 155–164.
[53] Forrester, J. E., Miller, B. P., 2000. An empirical study of the robustness of windows nt applications using random
testing. In: Proceedings of the 4th USENIX Windows Systems Symposium, 3-4 Aug. 2000. USENIX Assoc,
Berkeley, CA, USA, pp. 59–68.
[54] Frick, A., Goos, G., Neumann, R., Zimmermann, W., 2000. Construction of robust class hierarchies. Software -
Practice and Experience 30 (Copyright 2000, IEE), 481–543.
[55] Frick, A., Zimmer, W., Zimmermann, W., 1995. On the design of reliable libraries. In: Proceedings of the 17th
International Conference. TOOLS USA ’95. Technology of Object-Oriented Systems, 1995. Prentice Hall, En-
glewood Cliﬀs, NJ, USA, pp. 13–23.
[56] Fu, C., Milanova, A., Ryder, B. G., Wonnacott, D. G., 2005. Robustness testing of java server applications. IEEE
Transactions on Software Engineering 31 (Copyright 2005, IEE), 292–311.
[57] Fu, C., Ryder, B. G., Milanova, A., Wonnacott, D., 2004. Testing of java web services for robustness. In: ACM
SIGSOFT International Symposium on Software Testing and Analysis - ISSTA 2004, 11-14 July 2004. Vol. 29 of
Softw. Eng. Notes (USA). ACM, USA, pp. 23–34.
[58] Gabriel, R. P., Goldman, R., 2006. Conscientious software. Acm Sigplan Notices 41 (10), 433–450.
[59] Garousi, V., 2010. A genetic algorithm-based stress test requirements generator tool and its empirical evaluation.
IEEE Transactions on Software Engineering 36 (Copyright 2010, The Institution of Engineering and Technology),
778–97.
[60] Ghosh, A. K., Schmid, M., 1999. An approach to testing cots software for robustness to operating system excep-
tions and errors. In: Proceedings of the 10th International Symposium on Software Reliability Engineering, 1999.
pp. 166–174.
[61] Ghosh, A. K., Schmid, M., Hill, F., 1999. Wrapping windows NT software for robustness. In: Proceedings of the
29th Annual International Symposium on Fault-Tolerant Computing, 15-18 June 1999. IEEE Computer Society,
Los Alamitos, CA, USA, pp. 344–347.
[62] Ghosh, A. K., Schmid, M., Shah, V., 1998. Testing the robustness of Windows NT software. In: Proceedings of
the 9th International Symposium on Software Reliability Engineering, 4-7 Nov. 1998. IEEE Computer Society,
Los Alamitos, CA, USA, pp. 231–235.
[63] Groot, P., Van Harmelen, F., Teije, A. T., 2000. Torture tests: a quantitative analysis for the robustness of
knowledge-based systems. In: Proceedings of the 12th International Conference on Knowledge Management, 2-6
Oct. 2000. Vol. 1937 of Lecture Notes in Artiﬁcial Intelligence. Springer-Verlag, Berlin, Germany, pp. 403–418.
[64] Hameed, K., Williams, R., Smith, J., 2010. Separation of fault tolerance and non-functional concerns: Aspect
oriented patterns and evaluation. Journal of Software Engineering and Applications 3 (Copyright 2011, The Insti-
tution of Engineering and Technology), 303–11.
27
[65] Hanna, S., Munro, M., 2009. An approach for wsdl-based automated robustness testing of web services. Informa-
tion Systems Development, 493–504.
[66] Heimdahl, M. P. E., Czerny, B. J., 2000. On the analysis needs when verifying state-based software requirements:
an experience report. Science of Computer Programming 36 (1), 65–96.
[67] Henderson, M. I., Gill, K. F., 1996. Design of real-time concurrent software. Mechatronics 6 (Copyright 1996,
IEE), 209–225.
[68] Henzinger, T. A., 2008. Two challenges in embedded systems design: predictability and robustness. Philosoph-
ical Transactions of the Royal Society London, Series A (Mathematical, Physical and Engineering Sciences)
366 (Copyright 2009, The Institution of Engineering and Technology), 3727–3736.
[69] Holderﬁeld, V. T., Huhns, M. N., 2003. A foundational analysis of software robustness using redundant agent col-
laboration. In: Agent Technologies, Infrastructures, Tools, and Applications for E-Services. NODe 2002 Agent-
Related Workshops. Revised Papers, 7-10 Oct. 2002. Vol. 2592. Springer-Verlag, Berlin, Germany, pp. 355–369.
[70] Huhns, M. N., 2001. Interaction-oriented software development. International Journal of Software Engineering
and Knowledge Engineering 11 (3), 259–279.
[71] Huhns, M. N., Holderﬁeld, V. T., 2002. Robust software. IEEE Internet Computing 6 (Copyright 2002, IEE),
80–82.
[72] Huhns, M. N., Holderﬁeld, V. T., Gutierrez, R. L. Z., 2003. Achieving software robustness via large-scale multi-
agent systems. In: Garcia, A., Lucena, C., Zambonelli, F., Omicini, A., Castro, J. (Eds.), Software Engineering
for Large-Scale Multi-Agent Systems - Research Issues and Practical Applications. Vol. 2603 of Lecture Notes in
Computer Science. pp. 199–215.
[73] Hui, D., Lui, S., 2006. Dependency algebra: a tool for designing robust real-time systems. In: Proceedings of
RTSS. 26th IEEE International Real-Time Systems Symposium, 5-8 Dec. 2005. IEEE Computer Society, Los
Alamitos, CA, USA, p. 11.
[74] Issarny, V., 1993. An exception-handling mechanism for parallel object-oriented programming: toward reusable,
robust distributed software. Journal of Object-Oriented Programming 6 (Copyright 1993, IEE), 29–40.
[75] Issarny, V., Benatre, J. P., 2001. Architecture-based exception handling. In: Proceedings of the 34th Annual
Hawaii International Conference on System Sciences, 2001. p. 10.
[76] Jaﬀe, M., Leveson, N., May 1989. Completeness, Robustness, And Safety In Real-time Software Requirements
Speciﬁcation. In: Proceedings of 11th International Conference on Software Engineering. pp. 302–311.
[77] Jaﬀe, M. S., Leveson, N. G., Heimdahl, M. P. E., Melhart, B. E., 1991. Software requirements analysis for real-
time process-control systems. IEEE Transactions on Software Engineering 17 (Copyright 1991, IEE), 241–258.
[78] Jhumka, A., Hiller, M., Suri, N., 2002. An approach to specify and test component-based dependable software.
In: Proceedings of the 7th IEEE International Symposium on High Assurance Systems Engineering, 2002. pp.
211–220.
[79] Jiang, S., Yan, D., 2005. Approach to testing java exception handling mechanism quickly. Mini-Micro Systems
26 (Copyright 2006, IEE), 1854–1857.
[80] Jiantao, P., Koopman, P., Yennun, H., Gruber, R., Mimi Ling, J., 2001. Robustness testing and hardening of
CORBA ORB implementations. In: Proceedings of the International Conference on Dependable Systems and
Networks, 1-4 July 2001. IEEE Computer Society, Los Alamitos, CA, USA, pp. 141–150.
[81] Johansson, A., Suri, N., Murphy, B., 2007. On the impact of injection triggers for os robustness evaluation. In:
Software Reliability, 2007. ISSRE ’07. The 18th IEEE International Symposium on. pp. 127–126.
[82] Jorgensen, M., Shepperd, M., 2007. A systematic review of software development cost estimation studies. IEEE
Transactions on Software Engineering 33 (1), 33–53.
[83] Jwo, J. S., Cheng, H. M., 2001. A robust framework for building java applications. In: Computer Science and
Technology in New Century. International Academic Publishers LTD, pp. 506–510.
[84] Kaksonen, R., Laakso, M., Takanen, A., 2001. Software security assessment through speciﬁcation mutations and
fault injection. In: Steinmetz, R., Dittman, J., Steinebach, M. (Eds.), Communications and Multimedia Security
Issues of the New Century. Vol. 64 of International Federation for Information Processing. Kluwer Academic
Publishers, pp. 174–183.
[85] Kanoun, K., Crouzet, Y., Kalakech, A., Rugina, A. E., Rumeau, P., 2005. Benchmarking the dependability of
windows and linux using postmark/spl trade/ workloads. In: Software Reliability Engineering, 2005. ISSRE 2005.
16th IEEE International Symposium on. pp. 10–20.
[86] Kashmirian, J., Padgham, L., 2000. Relative robustness: an empirical investigation of behaviour based and plan
based paradigms as environmental conditions change. In: Foundations of Intelligent Systems. 12th International
Symposium, ISMIS 200, 11-14 Oct. 2000. Vol. 1932 of Lecture Notes in Artiﬁcial Intelligence. Springer Verlag,
Berlin, Germany, pp. 205–215.
[87] Keane, J., Ellman, T., 1996. Knowledge-based re-engineering of legacy programs for robustness in automated
design. In: Proceedings of the 11th Knowledge Based Software Engineering Conference, 25-28 Sept. 1996. IEEE
Computer Society, Los Alamitos, CA, USA, pp. 104–113.
28
[88] Khedri, N., Rahgozar, M., Hashemi, M., 2006. A study on using n-pattern chains of design patterns based on soft-
ware quality metrics. In: Ardil, C. (Ed.), Proceedings of World Academy of Science, Engineering and Technology.
Vol. 14. WORLD ACAD SCI, ENG & TECH-WASET, pp. 354–359.
[89] Kitchenham, B., 2004. Procedures for performing systematic reviews. Keele, UK, Keele University 33.
[90] Kitchenham, B., Charters, S., 2007. Guidelines for Performing Systematic Literature Reviews in Software En-
gineering, Keele University. Tech. Rep. UK EBSE-2007-1, Software Engineering Group, School of Computer
Science and Mathematics, Keele University, and Department of Computer Science, University of Durham.
[91] Kitchenham, B., Dyba, T., Jorgensen, M., 2004. Evidence-based software engineering. In: Proceedings of the
26th international conference on software engineering. IEEE Computer Society, pp. 273–281.
[92] Kitchenham, B., Pearl Brereton, O., Budgen, D., Turner, M., Bailey, J., Linkman, S., 2009. Systematic literature
reviews in software engineering-A systematic literature review. Information and Software Technology 51 (1),
7–15.
[93] Koopman, P., 1999. Toward a scalable method for quantifying aspects of fault tolerance, software assurance, and
computer security. In: Proceedings of the Computer Security, Dependability, and Assurance: From Needs to
Solutions, 7-9 July 1998 &amp; 11-13 November 1998. IEEE Computer Society, Los Alamitos, CA, USA, pp.
103–131.
[94] Koopman, P., DeVale, J., 2000. The exception handling eﬀectiveness of posix operating systems. Software Engi-
neering, IEEE Transactions on 26 (9), 837–848.
[95] Koopman, P., Sung, J., Dingman, C., Siewiorek, D., Marz, T., 1997. Comparing operating systems using robust-
ness benchmarks. In: Proceedings of the 16th Symposium on Reliable Distributed Systems, 1997. pp. 72–79.
[96] Kovi, A., Micskei, Z., 2010. Robustness testing of standard speciﬁcations-based ha middleware. In: Proceedings
of 2010 30th International Conference on Distributed Computing Systems Workshops (ICDCS 2010 Workshops),
21-25 June 2010. IEEE Computer Society, Los Alamitos, CA, USA, pp. 302–6.
[97] Kropp, N. P., Koopman, P. J., Siewiorek, D. P., 1998. Automated robustness testing of oﬀ-the-shelf software
components. In: Proceedings of the 28th International Symposium on Fault Tolerant Computing, 23-25 June
1998. IEEE Computer Society, Los Alamitos, CA, USA, pp. 230–239.
[98] Kulkarni, D., Tripathi, A., 2010. A framework for programming robust context-aware applications. IEEE Trans-
actions on Software Engineering 36 (Copyright 2010, The Institution of Engineering and Technology), 184–197.
[99] Laprie, J., Avizienis, A., Kopetz, H., 1992. Dependability: Basic concepts and terminology. Springer-Verlag New
York, Inc. Secaucus, NJ, USA.
[100] Laranjeiro, N., Canelas, S., Vieira, M., 2008. wsrbench: an on-line tool for robustness benchmarking. In: 2008
IEEE International Conference on Services Computing (SCC), 7-11 July 2008. Vol. 2. IEEE, Piscataway, NJ,
USA, pp. 187–194.
[101] Laranjeiro, N., Oliveira, R., Vieira, M., 2010. Applying text classiﬁcation algorithms in web services robustness