---
## Page 224
Karl Fogel
本章是在CreativeCommonsAtribution3.0许可证的许可下发布的
(http://creative commons.org/licenses/by/3.0）。
本章讲述的是优秀的工具对团队协作能力所带来的变革效应。
有那么几年，万维网主要是由静态页面构成的，静态页面需要具备
专业技能才能编写。读者只能把邮件发送到适当的"webmaster@"地
址，除此之外没有办法去影响页面的内容。其后，一些有远见的人
开始编写软件，允许任何一个懂得计算机基本操作的人都能把文本
放到网上，还有一些软件充许读者对页面进行评论甚至可以由自己
去修改那些页面。博客和wiki在技术上都不是革命性的，就像传真
机一样，如果有人能够想到，它们本来是可以早儿年就发明出来
的。当它们出现后，极大地提并了人们组织高生产率网络的能力。
本章讲述的三个故事说明了优秀的工具（或者说缺少优秀工具）给
团队带来的差别。这里所讨论的工具的范围比博客和wiki要窄得
多，但是它们的特殊性非常适合于从中梳理出协作工具的一些原
则。我的经验主要是关于并源软件项目的，所以利用的是这方面的
素材，不过这些原则也可能适用于任何一项协作工作。
开源项目的工作方式
如果你已经参加过并源项目，可以略过这一节。如果你没有参加
过，让我介绍一些这类项目的基本工作方式，这样才能更好地理解
本章讨论的工具。
开源软件1是在自由版权下发布的软件，允许任何人复制、修改、
使用和再分发代码（分发时可以修改代码，也可以不修改代码）。
很多运行在Internet和万维网上的程序都是开源的，越来越多的桌面
应用程序也开源了。
开源程序通常由组织很松散的软件开发人员联盟组成。有些人自愿
投入时间，还有些人由公司支付薪酬，为了公司的利益而维护软
件。因为参与者常常分布在不同时区，可能从来都没有见过面，所
以项目在很大程度上依赖于高度协作的工作：缺陷跟踪程序、邮件
列表和归档资料、网络聊天室、版本控制储存库、wiki以及其他很
223
---
## Page 225
多东西。你不一定要熟悉所有这些工具，在后面出现这些工具的时
候我会再做解释的。
每个开源项目都必须确定下来如何对项目进行组织和管理。通常采
用非正式的方式解决：项目开始的时候一般都是一小组的人（有时
候只有一个人），随着时间的推移，感兴趣的志愿者出现并加入，
最初的核心小组认识到如果能够把那些新加入的人也邀请到核心小
组，那么对项目是有好处的。但是在项目有了很多贡献者之后，
可能会很难跟踪他们，也很难识别出哪些人能够培养成为潜在的核
心维护人员。我们要看的第一个工具就是在项目中产生的，解决的
就是这个问题。
Contribulyzer
像大多数开源项目一样，SubversionlL也一直在不停地识别潜在的
新的核心维护人员。实际上，现有的核心小组的一个主要工作就是
观察由新人提交的代码并指出将邀请谁来承担核心维护成员的职
责。为了客观地讨论候选者的长处与短处，我们（核心维护人员）
建立了一个私人邮件列表，这是项目中仅有的几个非公并列表中的
一个。如果一个核心维护人员觉得某个贡献者具备加入核心维护小
组的条件，她可以在这个邮件列表中推荐那个候选人，看看其他人
的反应是什么。我们相互都留下足够的时间来做一些背景调查，因
为我们在发出录用通知之前需要较好地达成一致意见。否则到时再
取消别人的维护人员资格就很尴尬了，我们尽量避免那样的事情。
幕后的背景调查并不像听起来那么容易。常常地，由同一位贡献者
发来的补丁山会在不同的场合下由不同的维护人员处理，意味着没
有一个人能够比较全面地了解贡献者的活动了。即使同一个维护人
员倾向于处理由同一个贡献者提交的补丁（可能是有意安排的，也
可能是偶然的），但贡献者提交的补丁在几个月或几年的时间内是
不规律的，让维护人员很难监控贡献者的代码、缺陷报告、设计建
议等内容的总体质量。
出现在私人邮件列表中的名字要在拖延很长时间后才能得到响应，
或者，有时候根本没有响应。当我注意到这一点后，我开始考虑其
中存在的问题。这样做似乎不太好：毕竞，被推荐的候选者积极地
参与到了项目中，通常是刚刚加入的，一般都是有几个补丁被接受
了的，常常是在公共列表中进行了儿轮的评审和讨论。但是，事情
很快就很清楚了：维护人员之所以犹豫不决，是因为他们不愿意仪
224
---
## Page 226
仅依靠自已的记忆来判断谁做了什么事情（谁也不想引进一个事后
证明是不中用的庸才），但是，如果让他们翻阅以前的邮件列表和
代码变更历史来帮助他们回忆，这个工作量又会把他们吓住。我发
现在进行评估的时候，很多人都陷入一种典型的希望向后拖的行为
方式：“某某人被提名担任新的维护人员。嗯，等我到周末再发表
意见吧。我要找个时间，花上几小时，看看以前的资料，看看他们
做过些什么。”当然，不管是什么原因，他们在周末都抽不出那“几
个小时”来，于是任务就一拖再拖了..与此同时，候选者不知道
发生了什么事情，继续发出有关补丁的帖子而不是直接提交[]。这
对维护人员来说意味着持续出现的额外工作，他们必须处理那些补
丁，而候选者本人如果能够成为维护人员，那么将是双赢的局面：
他在把补丁放入代码中时不需要辅助，还能够处理其他人提交的补
丁。
我自己的情况和我所做的这种猜测是一样的：每次看到一个需要考
虑的新名字时，一种熟悉的、有些恐慌的感觉就来了一—不是因为
我们不需要新的维护人员，而是因为我不知道自己从哪里能挤出时
间来做调查并对这个提议做出负责任的回复。
最后，在一天夜里，我决定放下手边正常的工作，并始寻找解决方
案。我提出了一个远远算不上理想的方案，对于我们在评价候选者
所需的信息并没有完全做到自动化收集。但即使是一个部分自动化
方案也能够极大地减少我们评估某人所需要的时间，这样已经足以
让我们摆脱困境了。在系统运行起来之后，被提名的候选者几乎总
是能够及时得到响应，这都是利用了系统中信息的结果，因为人员
不会感到因为在历史资料非常耗时地搜索而停滞不前。新系统承担
了此前由每个评估人余执行的杂事，只需要执行一次，然后就可
以把结果保存下来，供所有人永久使用。
这个系统叫做Contribulyzer（http://www.red-
bean.com/svnproject/contribulyzer/）：它记录了贡献者所做的事情，
在一个网络页面中记录了每个贡献者的活动。如果维护人员想要知
道某个贡献者是否可以拿到启程的钥匙，只要看看那个贡献者相关
的Contribulyzer页面就可以了，首先浏览他的活动概览，然后根据
需要再去关注细节。
但是计算机程序是如何“跟踪"每个贡献者做了什么事情的呢？听起
来可能觉得有点像是魔术。没有什么魔法：它需要一些人工辅助，
225
---
## Page 227
我们马上就会更仔细地看看。但是首先看看结果。下面第一幅图显
示是Contribulyzer网站的首页。
点击一下贡献者的名字，可以进到另外一个页面，详细显示那个贡
献者做了些什么。下面第二幅图显示的是MadanUS的细节页面开
始的部分。
页面上方的4个类别显示的是Madan参与的贡献类别。每个贡献都由
一个修订号（revisionnumber）表示—
一个以r开头的数字，唯
标识某个特定的变更。有了修订号，就可以让中央存储库显示那个
贡献的细节了（修改了哪些行，是如何修改的）。对于r22756和
r18324，Madan发现了在那些修订本中的缺陷。对于修订号最多的
那部分，也就是“补丁"部分，他编写了一些变更，最终由一些维护
人员提交了。对于其他修订，他或者是评审了其他人提交的补丁，
或者是提出了修复建议但是（由于某种原因）并没有得到实施。
·全
Contributorsasofr29817
The folowing list of contributors and their contributions is meant to help us keep track of whom to consider for
PlesedisitgeiewhibwtSermittng
changeindetalThis pagecanonlyait human judgment,not substitut focit
han
1. Madan.LUS ≤PI:EMAIL> (madanus) [51 patches, 19 non-patchesl (partial committer)
3. Bbuzaneswaran_≤bhsvan@collab,at>(bhuyan [37 patches. 4non-patche] (partial committer)
4. Stefan_Kueng_ [21 patches, 23 non-patchea]
5. Joo.Swatosh.≤PI:EMAIL>Uoemwatoah) [18 patches, 24non-patches] (partial committer)
6. Kouhel Sutou_≤PI:EMAIL>≥ (kos0 [10 patchoes, 27 non-patche] (partial committer)
7.Giavanni.Baio_≤PI:EMAIL>(givannajo [6 patches, 28 non-patches) (partial committer
8. Baman Gupta_ (rocketraman) [17 patehes, 2 non-patches] (partial committer)
9.S.Ramaswamy PI:EMAIL>[16 patches3 non-patches]
olll,[15.natches_3.nor
Contribulyzer（主页）
226
---
## Page 228
MadanUS(madanus)
Patch
20727.2073
207131
r20554.120515
2602
22258
2021.20157.20085
19597,t19594.r19593.19344.019335
r19316
r19724
r197D1
cl9310
FZCOT
r19112.r17541,r17334.t17312,r17275
r17216
20147
r16098.r15530.515094
r15648.r14728.r13555
20S1
r13103.r13055.51302
2422 r |2907-42-16 28:25:53000 (Fri, 16 feh 2007)
car.
Done
Contribulyzer（贡献者页面）
页面上方的四部分已经从高层次上给出了有关Madan活动的概览
此外，每个修订号都链接到了一个与该更改对应的简要描述上。这
个描述称为记录信息：与代码变更一起提交的一小段文字，说明变
更的内容。存储库将变更和此信息一起记录下来，对于后来的想要
理解这个变更的人来说，是非常有价值的资源。
点击"r20727"，下一个屏幕的顶部将会显示那个修订的记录信息，
如下图所示。
227
---
## Page 229
BleEdit
1 | dr|
coAdmncPcomm
26723 1 dr | 2996-87-18 14:1:04 -4500 (Tue, 18 3ol 2906
28734 I dlr I 2996·07-17 16:57:47 -054
17 L200
erge-tra
Soested byweadans
Contribulyzer（修订项）