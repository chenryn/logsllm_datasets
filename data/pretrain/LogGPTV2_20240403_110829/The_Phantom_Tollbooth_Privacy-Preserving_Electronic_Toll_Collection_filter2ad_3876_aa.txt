title:The Phantom Tollbooth: Privacy-Preserving Electronic Toll Collection
in the Presence of Driver Collusion
author:Sarah Meiklejohn and
Keaton Mowery and
Stephen Checkoway and
Hovav Shacham
The Phantom Tollbooth: Privacy-Preserving Electronic
Toll Collection in the Presence of Driver Collusion
Sarah Meiklejohn∗
UC San Diego
Keaton Mowery†
UC San Diego
Stephen Checkoway‡
UC San Diego
Hovav Shacham§
UC San Diego
Abstract
In recent years, privacy-preserving toll collection has been
proposed as a way to resolve the tension between the de-
sire for sophisticated road pricing schemes and drivers’
interest in maintaining the privacy of their driving pat-
terns. Two recent systems in particular, VPriv (USENIX
Security 2009) and PrETP (USENIX Security 2010), use
modern cryptographic primitives to solve this problem. In
order to keep drivers honest in paying for their usage of
the roads, both systems rely on unpredictable spot checks
(e.g., by hidden roadside cameras or roaming police vehi-
cles) to catch potentially cheating drivers.
In this paper we identify large-scale driver collusion
as a threat to the necessary unpredictability of these spot
checks. Most directly, the VPriv and PrETP audit pro-
tocols both reveal to drivers the locations of spot-check
cameras — information that colluding drivers can then
use to avoid paying road fees. We describe Milo, a new
privacy-preserving toll collection system based on PrETP,
whose audit protocol does not have this information leak,
even when drivers misbehave and collude. We then evalu-
ate the additional cost of Milo and ﬁnd that, when com-
pared to naïve methods to protect against cheating drivers,
Milo offers a signiﬁcantly more cost-effective approach.
1
Assessing taxes to drivers in proportion to their use of
the public roads is a simple matter of fairness, as road
maintenance costs money that drivers should expect to
pay some part of. Gasoline taxes, currently a proxy for
road use, are ineffective for implementing congestion
pricing for city-center or rush-hour trafﬁc. At the same
time, the detailed driving records that would allow for
such congestion pricing also reveal private information
about drivers’ lives, information that drivers do seem to
Introduction
∗PI:EMAIL
†PI:EMAIL
‡PI:EMAIL
§PI:EMAIL
have interest in keeping private. (In the U.S., for example,
some courts have recognized drivers’ privacy interests by
forbidding the police from using a GPS device to record
a driver’s movements without a search warrant [1].)
The VPriv [39] and PrETP [4] systems for private
tolling, proposed at USENIX Security 2009 and 2010
respectively, attempt to use modern cryptographic pro-
tocols to resolve the tension between sophisticated road
pricing and driver privacy. At the core of both these sys-
tems is a monthly payment and audit protocol. In her
payment, each driver commits to the road segments she
traversed over the month and the cost associated with each
segment, and reveals the total amount she owes. The prop-
erties of the cryptography used guarantee that the total is
correct assuming the segments driven and their costs were
honestly reported, but that the speciﬁc segments driven
are still kept private.
To ensure honest reporting, the systems use an audit-
ing protocol: throughout the month, roadside cameras
occasionally record drivers’ locations; at month’s end,
the drivers are challenged to show that their committed
road segments include the segments in which they were
observed, and that the corresponding prices are correct.
So long as such spot checks occur unpredictably, drivers
who attempt to cheat will be caught with high probability
given even a small number of auditing cameras. In the
audit protocols for both VPriv and PrETP, however, the
authority reveals to each driver the locations at which
she was observed. (The driver uses this information to
open the appropriate cryptographic commitments.) If the
cameras aren’t mobile, or are mobile but can be placed
in only a small set of suitable locations (e.g., overpasses
or exit signs along a fairly isolated highway), then the
drivers will easily learn where the cameras are (and, per-
haps more importantly, where they aren’t). Furthermore,
if drivers collude and share the locations at which they
were challenged, then a few audit periods will sufﬁce
for colluding drivers to learn and map the cameras’ loca-
tions.
We believe the model of large-scale driver collusion is
a realistic one. For example, drivers already collaborate
to share the locations of speed cameras [37] and red-light
cameras [38]; if we extend this behavior to consider maps
of audit cameras, then we see that the unpredictable spot
checks required in the analysis of VPriv and PrETP are
difﬁcult to achieve in the real world when drivers may col-
lude on a large scale. When drivers know where cameras
are (and where they aren’t), they will not pay for segments
that are camera-free, and may even change driving pat-
terns to avoid the cameras. By collaborating, drivers can
discover and share camera locations at acceptable cost;
in fact, if the cameras are revealed to them directly in the
course of the audit protocol then they can do so without
incurring a single ﬁne.
Finally, one might argue that an appropriate placement
of audit cameras at chokepoints will make them impos-
sible to avoid, even if their location is known; the price
charged for traversing such a chokepoint could then be
made sufﬁciently high that it subsidizes the cost of main-
taining other, unaudited road segments. This alternative
arrangement may seem superﬁcially appealing, but it is
ultimately incompatible with driver privacy. If drivers
cannot avoid a chokepoint they cannot but be observed
by authorities when they cross it; in other words, this
approach would be feasibly enforceable only when most
drivers are regularly observed at the chokepoints. In fact,
what we have described is precisely the situation today
in many cities, where tolls are collected on bridges and
other unavoidable chokepoints.
Our contribution We show, in Section 4, how to mod-
ify the PrETP system to obtain our own system, Milo,
in which the authority can perform an agreed-upon num-
ber of spot checks of a driver’s road-segment commit-
ments without revealing the locations being checked. To
achieve this, we adapt a recent oblivious transfer proto-
col due to Green and Hohenberger [28] that is based on
blind identity-based encryption. We have implemented
and benchmarked our modiﬁcations to the audit protocol,
showing (in Section 5) that they require a small amount
of additional work for each driver and a larger but still
manageable amount of work for the auditing authority.
Basic fairness demands that drivers whom the authority
accuses of cheating be presented with the evidence against
them: a photo of their car at a time and location for
which they did not pay. This means that drivers who
intentionally incur ﬁnes will inevitably learn some camera
locations; in some cases, a large coalition of drivers may
therefore proﬁtably engage in such misbehavior. Here the
information about camera locations is leaked not by the
audit protocol but by the legal proceedings that follow it.
Finally, if the cameras are themselves visible then
drivers will discover and share their locations, regardless
of the cryptographic guarantees of the audit protocol.1
All that is necessary is for one driver to spot the camera
at any point during the month; the colluding drivers can
then ensure that their commitments take this camera into
account. We discuss this further in Section 6.
In summary, our paper makes three concrete contribu-
tions:
• we identify large-scale driver collusion as a realistic
threat to privacy-preserving tolling systems;
• we modify the PrETP system to avoid leaking cam-
era locations to drivers during challenges; and
• we identify and evaluate other ways to protect
against driver collusion and compare their costs to
that of Milo.
2 System Outline
In this section we present an overview of the Milo system.
We discuss both the organizational structure of the system,
as well as the security goals it is able to achieve. As
our system is built directly on top of PrETP we have
approximately maintained its structure, with the important
differences highlighted below.
2.1 Organization
Milo consists of three main players: the driver, repre-
sented by an On-Board Unit (OBU); the company operat-
ing the OBU (abbreviated TSP, for Toll Service Provider);
and ﬁnally the local government (or TC, for Toll Charger)
responsible for setting the road prices and collecting the
ﬁnal tolls from the TSP, as well as for ensuring fairness
on the part of the driver. The interactions between these
parties can be seen in Figure 1.
In some respects, the organization of Milo is similar
to that of current toll collection systems. The driver will
keep a certain amount of money in an account with the
TSP; at the end of every month the driver will then pay
some price appropriate for how much she drove and the
amount of money remaining in the account will need to
be replenished. The major difference, of course, is that
the payments of the driver do not reveal any information
about their actual locations while driving.2 In addition, we
will require that the TC perform occasional spot checks
to guarantee that drivers are behaving honestly.
The OBU is a box installed in the car of the driver,
which is responsible for collecting location information,
computing the prices associated with the roads, and form-
ing the ﬁnal payment information that is sent to the TSP
1De Jonge and Jacobs [19] appear to have been the ﬁrst to note that
unobservable cameras are crucial for random spot checks.
2As also noted by Balasch et al. [4], the pricing structure itself
may of course reveal driver locations — e.g., if segment i costs 2i (see
Section 4), then all drivers’ paths are revealed by cost alone. This will
likely not be a problem in practice.
both roles could be performed by a single organization.
Since in practice businesses such as E-ZPass play the role
of TSP, we recommend the separation of duties above to
avoid giving the TSP an incentive to monetize customers’
driving records. Of course, this assumes that regulation
or the courts will forbid the government from misusing
the information it collects.
2.2 Security model
In any privacy-preserving system, there are two goals
which are absolutely essential to the success of the sys-
tem: maintaining privacy, while still keeping users of the
system honest. We discuss what this means in the context
of electronic toll collection in the following two points:
• Driver privacy: Drivers should be able to keep their
locations completely hidden from any other drivers
who may want to intercept (and possibly modify)
their payment information on its way to the TSP.
With the exception of the random spot checks per-
formed by the audit authority (in our case the TC),
the locations of the driver should also be kept pri-
vate from both the TC and the TSP. This property
should hold even for a malicious TSP; as for the TC,
we would like to guarantee that, as a result of the
audit protocol, it learns only whether the driver was
present at certain locations and times of its choice,
even if it is malicious. The number of these locations
and times about which the TC can query is ﬁxed and
a parameter of the audit protocol. An honest-but-
curious TC will query the driver at those locations
and times where she was actually observed, but a
malicious TC might query for locations where no
camera was present; see Section 4.3 for further dis-
cussion.
• Driver honesty: Drivers should not be able to tam-
per with the OBU to produce incorrect location or
price information; i.e., pretending they were in a
given location, using lower prices than are actually
assigned, or simply turning off the OBU to pretend
they drove less than they actually did. This property
should hold even if drivers are colluding with other
dishonest drivers, and should in fact hold even if
every driver in the system is dishonest.
These security goals should look fairly similar to those
outlined in previous work (e.g., PrETP or VPriv [39],
and inspired by the earlier work of Blumberg, Keeler,
and shelat [8]), but we note the consideration of possibly
colluding drivers as an essential addition. We also note
that we do not consider physical attacks (i.e., a malicious
party gaining physical access to a driver’s car) in this
model, as we believe these attacks to be out of scope.
Figure 1: An overview of how the Milo system works.
As we can see, the OBU deals with the TSP for payment
purposes (using the Pay protocol), but for spot checks it
interacts with the TC (using the Audit protocol). The TC
conducts these audits using both the information recorded
by the cameras it operates along the roads and the OBU’s
payment information, which is forwarded on from the
TSP after it has been checked to be correct (using the
VerifyPayment protocol).
at the end of each month. Its work in this stage is de-
scribed formally in our Pay algorithm, which we present
in Section 4.
The TSP is responsible for the collection of tolls from
the driver. At the end of each month, the TSP will receive
a payment message from the OBU as speciﬁed above. It
is then the job of the TSP to verify that this payment in-
formation is correct, using the VerifyPayment algorithm
outlined in Section 4. If the payment information is found
to be correctly formed then the TSP can debit the appro-
priate payment from the user’s account; otherwise, they
can proceed in a legal manner that is similar to the way in
which trafﬁc violations are handled now.
The TC, as mentioned, is the local government respon-
sible for setting the prices on the roads, as well as the
ﬁnes for dishonest drivers who are caught. The TC is
also responsible for performing spot checks to ensure that
drivers are behaving honestly. Although this presents a
new computational burden for the TC (as compared to
PrETP, for example, which has the TSP performing the
spot checks), we believe that it is important to keep all lo-
cation information completely hidden from the TSP, as it
is a business with incentive to sell this information. Since
the TC already sees where each car is driving regardless
of which body performs the spot checks (since it is the
one operating the cameras), having it perform the audits
itself minimizes the privacy lost by the driver.
Note, however, that the formal guarantees of correct-
ness, security, and privacy provided by our system do not
depend on having the TSP and TC not collaborate. In fact,
For ideal privacy, the locations of each driver would
be kept entirely private even from the TC. This does not
seem to be possible, however, as it would allow drivers to
behave dishonestly without any risk of getting caught. Be-
cause each camera does take away some degree of privacy
from the driver, we would like to minimize the number of
cameras operated by the TC; at the same time, we need
to keep it high enough so that the TC will have a very
good chance of catching any cheating drivers. We believe
this to be a fundamental limitation on the value of any
privacy-preserving tolling system, however, as they are
privacy preserving only when the spot-check cameras do
not monitor such a large fraction of trips that the records
themselves constitute a substantial privacy violation. As
Blumberg, Keeler, and shelat write, “Extensive camera
networks are simply not compatible with the kinds of pri-
vacy we demand since they collect too much information.
If misused, they can provide adequate data for real-time
tracking of vehicles” [8].
Finally, we note that these security properties are both
achieved by Milo, under the assumption that cameras are
randomly placed and invisible to drivers (i.e., the only
way camera locations can leak to drivers is during the
audit protocol). We discuss the potential issues with this
assumption in Section 6.
3 Cryptographic Background
Because our scheme follows closely the PrETP construc-
tion [4], we employ the same modern cryptographic
primitives as they do: commitment schemes and zero-
knowledge proofs, in addition to the more familiar primi-
tive of digital signatures [26]. In addition, to keep the spot-
check camera locations hidden from drivers, we make use
of another primitive, blind identity-based encryption, in a
manner that is inspired by the oblivious transfer protocol
of Green and Hohenberger [28].
3.1 Commitments
A commitment scheme is essentially the cryptographic
relative of an envelope, and consists of two main phases:
forming the commitment and opening the commitment.
First, to form a commitment to a certain value, a user
Alice can put the value in the envelope and then seal
the envelope; to keep the analogy going, let’s also as-
sume she sealed it in some special way such that only
she can open it. The sealed envelope then acts as her
commitment, which she can send on to another user Bob.
When the time comes, Alice can reveal the committed
value by opening the envelope and showing Bob its con-
tents. There are two properties that commitment schemes
satisfy: hiding and binding. The hiding property says
that, because Alice is the only one who can unseal the
envelope, Bob will not be able to learn any information
about its contents before she reveals them. In addition,
the binding property says that, because the envelope is
sealed, Alice will not be able to open it, change the value