# CSS
> 层叠样式表（英语：Cascading Style Sheets，缩写：CSS；又称串样式列表、级联样式表、串接样式表、阶层式样式表）是一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。当前最新版本是CSS2.1，为W3C的推荐标准。CSS3现在已被大部分现代浏览器支持，而下一版的CSS4仍在开发中。
## 语法规则
### At规则
- @charset ：
- @import ：
- @media ：
- @page ：
- @counter-style ：
- @keyframes ：
- @fontface ：
- @supports ：
- @namespace ：
### 选择器
- 
![2022630152944](/assets/2022630152944.webp)
选择器的作用：找到特定的HTML页面元素
#### namespace
svg 和 HTML 中都有 a 元素，我们若要想区分选择 svg 中的 a 和 HTML 中的 a，就必须用带命名空间的类型选择器
```css
@namespace svg url(http://www.w3.org/2000/svg);
@namespace html url(http://www.w3.org/1999/xhtml);
svg|a {
  stroke:blue;
  stroke-width:1;
}
html|a {
  font-size:40px
}
```
#### 基础选择器
选择器    | 作用              | 缺点           | 使用情况  | 用法
------ | --------------- | ------------ | ----- | --------------------
标签选择器  | 可以选出所有相同的标签，比如p | 不能差异化选择      | 较多    | p { color：red;}
类选择器   | 可以选出1个或者多个标签    | 可以根据需求选择     | 非常多   | .nav { color: red; }
id选择器  | 一次只能选择器1个标签     | 只能使用一次       | 不推荐使用 | #nav {color: red;}
通配符选择器 | 选择所有的标签         | 选择的太多，有部分不需要 | 不推荐使用 | * {color: red;}
##### 标签选择器
```css
标签名{属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }
```
```css
p {
    font-size:14px;
}
```
##### 类选择器
```css
.类名  {   
    属性1:属性值1; 
    属性2:属性值2; 
    属性3:属性值3;     
}
```
```html
```
- 多类名
```html
```
##### ID选择器
```css
#id名 {属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }
```
```html
```
- ID选择器与类选择器
  - 类选择器我们在修改样式中，用的最多。
  - id选择器一般用于页面唯一性的元素身上，经常和我们后面学习的javascript 搭配使用。
##### 通配符选择器
```css
* { 属性1:属性值1; 属性2:属性值2; 属性3:属性值3; }
```
```css
* {
  margin: 0;                    /* 定义外边距*/
  padding: 0;                   /* 定义内边距*/
}
```
## 复合选择器
### 后代选择器
- 后代选择器又称为包含选择器
```css
父级 子级{属性:属性值;属性:属性值;}
```
```css
.class h3{color:red;font-size:16px;}
```
### 子元素选择器
- 子元素选择器只能选择作为某元素**子元素(直接子元素)**的元素
```css
.class>h3{color:red;font-size:14px;}
```
### 交集选择器
```css
/* 选择标签是p且类名是one的元素 */
p.one{color:red}
```
### 并集选择器
```css
/*  .one 和 p  和 #test 这三个选择器都会执行颜色为红色。   */
.one, p , #test {color: #F00;}
```
### 链接伪类选择器
```css
a:link      /* 未访问的链接 */
a:visited   /* 已访问的链接 */
a:hover     /* 鼠标移动到链接上 */
a:active    /* 选定的链接 */
```
- 写的时候，他们的顺序尽量不要颠倒 按照 lvha 的顺序。否则可能引起错误
### 符合选择器总结
选择器     | 作用           | 特征         | 使用情况 | 隔开符号及用法
------- | ------------ | ---------- | ---- | --------------------------
后代选择器   | 用来选择元素后代     | 是选择所有的子孙后代 | 较多   | 符号是**空格** .nav a
子代选择器   | 选择 最近一级元素    | 只选亲儿子      | 较少   | 符号是 **>** .nav>p
交集选择器   | 选择两个标签交集的部分  | 既是 又是      | 较少   | **没有符号** p.one
并集选择器   | 选择某些相同样式的选择器 | 可以用于集体声明   | 较多   | 符号是**逗号** .nav, .header
链接伪类选择器 | 给链接更改状态      |            | 较多   | 重点记住 a{} 和 a:hover 实际开发的写法
### 属性和值
属性不允许使用连续的两个中划线开头，这样的属性会被认为是 CSS 变量
值可能是以下类型：
- CSS 范围的关键字：initial，unset，inherit，任何属性都可以的关键字。
- 字符串：比如 content 属性。
- URL：使用 url() 函数的 URL 值。
- 整数 / 实数：比如 flex 属性。
- 维度：单位的整数 / 实数，比如 width 属性。
- 百分比：大部分维度都支持。颜色：比如 background-color 属性。
- 图片：比如 background-image 属性。
- 2D 位置：比如 background-position 属性。
- 函数：来自函数的值，比如 transform 属性。
## 书写规范
[BEM规范](https://juejin.cn/post/6844903672162304013)
- 空格规范
```css
/*  选择器 与 { 之间必须包含空格。 */
.selector {
  /* 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格 */
  font-size: 12px;
}
```
- 选择器规范
```css
/*  并集选择器，每个选择器声明必须独占一行 */
.post,
.page,
.comment {
    line-height: 1.5;
}
```
一般情况情况下，选择器的嵌套层级应不大于 3 级，位置靠后的限定条件应尽可能精确
- 属性规范
```css
/* 属性定义必须另起一行。 */
.selector {
    margin: 0;
    padding: 0;
    /* 属性定义后必须以分号结尾。 */
}
```
## 使用方式
- 内联
```html
 内容 
```
- 内嵌
```html
```
- 外联
```html
```
属性   | 作用
---- | :-------------------------------------------------------
rel  | 定义当前文档与被链接文档之间的关系，在这里需要指定为"stylesheet"，表示被链接的文档是一个样式表文件。
type | 定义所链接文档的类型，在这里需要指定为"text/CSS"，表示链接的外部文件为CSS样式表。我们都可以省略
href | 定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。
- 比较
样式表   | 优点           | 缺点           | 使用情况    | 控制范围
----- | ------------ | ------------ | ------- | ---------
行内样式表 | 书写方便，权重高     | 没有实现样式和结构相分离 | 较少      | 控制一个标签（少）
内部样式表 | 部分结构和样式相分离   | 没有彻底分离       | 较多      | 控制一个页面（中）
外部样式表 | 完全实现结构和样式相分离 | 需要引入         | 最多，强烈推荐 | 控制整个站点（多）
## 三大特性
### 层叠性
所谓层叠性是指多种CSS样式的叠加。
样式冲突，遵循的原则是**就近原则。** 那个样式离着结构近，就执行那个样式。
### 继承性
子元素可以继承父元素的样式（**text-，font-，line-这些元素开头的可以继承，以及color属性**）
### 优先级
选择器列表是用逗号分隔的复杂选择器序列；复杂选择器则是用空格、大于号、波浪线等符号连接的复合选择器；复合选择器则是连写的简单选择器组合
- 第一优先级：无连接符号
- 第二优先级
  - “空格”
  - “~”
  - “+”
  - “>”
  - “||”
- 第三优先级：“,”
| 标签选择器             | 计算权重公式 |
| ---------------------- | ------------ |
| 继承或者 *             | 0,0,0,0      |
| 每个元素（标签选择器） | 0,0,0,1      |
| 每个类，伪类           | 0,0,1,0      |
| 每个ID                 | 0,1,0,0      |
| 每个行内样式 style=""  | 1,0,0,0      |
| 每个!important  重要的 | ∞ 无穷大     |
- 权重叠加
  - div ul  li   ------>      0,0,0,3
  - .nav ul li   ------>      0,0,1,2
  - a:hover      -----—>   0,0,1,1
  - .nav a       ------>      0,0,1,1
## 排版
### 标签显式模式
> 标签以什么方式进行显示，比如div 自己占一行， 比如span 一行可以放很多个
元素模式  | 元素排列        | 设置样式        | 默认宽度     | 包含
----- | ----------- | ----------- | -------- | ------------
块级元素  | 一行只能放一个块级元素 | 可以设置宽度高度    | 容器的100%  | 容器级可以包含任何标签
行内元素  | 一行可以放多个行内元素 | 不可以直接设置宽度高度 | 它本身内容的宽度 | 容纳文本或则其他行内元素
行内块元素 | 一行放多个行内块元素  | 可以设置宽度和高度   | 它本身内容的宽度
#### 块级元素(block-level)
```
常见的块元素有~、、、、、等，其中标签是最典型的块元素。
```
（1）比较霸道，自己独占一行
（2）高度，宽度、外边距以及内边距都可以控制。
（3）宽度默认是容器（父级宽度）的100%
（4）是一个容器及盒子，里面可以放行内或者块级元素。
- 文字类块标签里面不能放其他块元素
#### 行内元素(inline-level)
```
常见的行内元素有、、、、、、、、、等，其中标签最典型的行内元素。有的地方也成内联元素
```
（1）相邻行内元素在一行上，一行可以显示多个。
（2）高、宽直接设置是无效的。
（3）默认宽度就是它本身内容的宽度。
（4）**行内元素只能容纳文本或则其他行内元素。**
#### 行内块元素（inline-block）
```
在行内元素中有几个特殊的标签——、、，可以对它们设置宽高和对齐属性，有些资料可能会称它们为行内块元素。
```
（1）和相邻行内元素（行内块）在一行上,但是之间会有空白缝隙。一行可以显示多个 （2）默认宽度就是它本身内容的宽度。 （3）高度，行高、外边距以及内边距都可以控制。
#### 标签显示模式转换 display
- 块转行内：display:inline;
- 行内转块：display:block;
- 块、行内元素转换为行内块： display: inline-block;
### 行高
![行高的测量](/assets/202339153741.png)
实现文本垂直居中：
- 如果 行高 等 高度  文字会 垂直居中
- 如果行高 大于 高度   文字会 偏下 
- 如果行高小于高度   文字会  偏上
### 正常流
- 依次排列，排不下了换行
正常流基础上，有 float 相关规则，使得一些盒占据了正常流需要的空间，可以把 float 理解为“文字环绕”
还有 vertical-align 相关规则规定了如何在垂直方向对齐盒