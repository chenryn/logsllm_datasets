## Page 595
Given an array w of positive integers, where w[i] describes the weight of index i , write a
function pi ckIndex which randomly picks an index in proportion to its weight.
Note:
1. 1 >1
if so.prefixSum[mid] == n {
return mid
} else if so.prefixSum[mid] = 0 {
mineMap[nx] [ny]++
mineSweeper(click[0], click[1], board, mineMap, dir8)
return board
func mineSweeper(x, y int, board [][]byte, mineMap [][]int, dir8 [][]int) {
if board[x][y] !='M’ && board[x][y] !='E′{
return
if mineMap[x][y]== -1 {
board[x] [y] = *x'
} else if mineMap[x][y] > 0 {
board[x] [y] = *o′ + byte(mineMap[x][y])
}else {
board[x][y] = 'B′
for _, d := range dir8 {
nx, ny := x+d[o], y+d[1]
---
## Page 601
if isInBoard(board,nx,ny) && mineMap[nx][ny]>= 0 {
mineSweeper(nx, ny, board, mineMap, dir8)
532.K-diffPairsinanArray
题目
Given an array of integers and an integer k, you need to find the number of unique k-dliff pairs in
the array. Here a k-liff pair is defined as an integer pair (i, j), where i and j are both numbers in
the array and their absolute dlifference is k.
Example 1:
Input:[3, 1,4, 1,5],k = 2
Output:2
Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
Although we have two ls in the input, we should only return the number of
unique pai rs .
Example 2:
Input:[1, 2, 3, 4, 5], k = 1
Output: 4
Explanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4)
and (4, 5) .
Example 3:
Input: [1, 3, 1, 5, 4], k = 0
output: 1
Explanation: There is one 0-diff pair in the array, (1, 1).
Note:
1. The pairs (i, j) and (j, i) count as the same pair.
2. The length of the array won't exceed 10,000.
3. All the integers in the given input belong to the range: [-1e7, 1e7].
---
## Page 602
题目大意
给定一个数组，在数组里面找到几组不同的pair对，每个pair对相差K。问能找出多少组这样的pair
对。
解题思路
这一题可以用map记录每个数字出现的次数。重复的数字也会因为唯一的key，不用担心某个数字会
判断多次。遍历一次map，每个数字都加上K以后，判断字典里面是否存在，如果存在，count++，
如果K=0的情况需要单独判断，如果字典中这个元素频次大于1，count也需要++。
代码
package leetcode
func findPairs(nums []int,k int) int {
if k  1 {
count++
continue
if k > 0 && m[key+k]> 0 {
count++
return count
---
## Page 603
537.ComplexNumberMultiplication
题目
Given two strings representing two complex numbers.
You need to return a string representing their multiplication. Note i2 = -1 according to the
definition.
Example 1:
Input: "1+1i", "1+1i"
Output: "0+2i"
Explanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i， and you need convert it
to the form of 0+2i.
Example 2:
Input: "1+-1i", "1+-1i"
Output: "0+-21"
Explanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it
to the form of 0+-2i.
Note:
1. The input strings will not have extra blank.
2. The input strings will be given in the form of a+bi, where the integer a and b will both
题目大意
给定两个表示复数的字符串。返回表示它们乘积的字符串。注意，根据定义2=-1。
注意：
·输入字符串不包含额外的空格。
●输入字符串将以a+bi的形式给出，其中整数a和b的范围均在[-100，100]之间。输出也应当符
合这种形式。
解题思路
·给定2个字符串，要求这两个复数的乘积，输出也是字符串格式。
·数学题。按照复数的运算法则，^2=-1，最后输出字符串结果即可。
代码
---
## Page 604
package leetcode
import (
"strconv"
"strings"
func complexNumberMultiply(a string, b string) string {
realA, imagA := parse(a)
realB, imagB := parse(b)
real:= realA*realB - imagA*imagB
imag := realA*imagB + realB*imagA
return strconv.Itoa(real) + "+” + strconv.Itoa(imag) + "i"
func parse(s string) （int, int) {
ss := strings.Split(s, "+")
r, _ := strconv.Atoi(ss[o])
i,
_ := strconv.Atoi (ss[1][: len(ss[1])-1])
return r, i
541.ReverseStringl
题目
Given a string and an integer k, you need to reverse the first k characters for every 2k characters
counting from the start of the string. If there are less than k characters left, reverse all of them. If
there are less than 2k but greater than or equal to k characters, then reverse the first k
characters and left the other as original.
Example:
Input: S = "abcdefg", k = 2
Restrictions:
1. The string consists of lower English letters only.
2. Length of the given string and k will in the range [1, 10000]
题目大意
给定一个字符串和一个整数k，你需要对从字符串开头算起的每个2k个字符的前k个字符进行反转。如
果剩余少于k个字符，则将剩余的所有全部反转。如果有小于2k但大于或等于k个字符，则反转前k
个字符，并将剩余的字符保持原样。
要求：
---
## Page 605
·该字符串只包含小写的英文字母。
●给定字符串的长度和k在[1，10000]范围内。
解题思路
·要求按照一定规则反转字符串：每2K长度的字符串，反转前K个字符，后K个字符串保持
不变；对于末尾不够2K的字符串，如果长度大于K，那么反转前K个字符串，剩下的保持
不变。如果长度小于K，则把小于K的这部分字符串全部反转。
·这一题是简单题，按照题意反转字符串即可。
代码
package leetcode
func reversestr(s string, k int) string {
if k > len(s){
k =1en(s)
for i := 0; i = k {
sS := revers(s[i : i+k])
S = s[:i] + 5s + s[i+k:]
}else{
ss := revers(s[i:])
s = s[:i] + s5
return s
542.01Matrix
题目
Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.
The distance between two adjacent cells is 1.
Example 1:
---
## Page 606
Input:
[[0,0,0],
[0,1,0] ,
[0,0,0]]
Output:
[[0,0,0],
[0,1,0] ,
[0,0,0]]
Example 2:
Input:
[[0,0,0],