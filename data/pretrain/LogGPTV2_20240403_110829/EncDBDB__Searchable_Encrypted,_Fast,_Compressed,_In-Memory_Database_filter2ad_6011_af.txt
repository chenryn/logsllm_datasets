presented as a building block of an encrypted database.
StealthDB [7] and Always Encrypted [73] have the smallest
enclave size as they put only the execution of individual
operators, e.g., , and = into an enclave. Only minor
changes to an application (e.g., a database) are necessary as
plaintext operations are just replaced by protected operators.
However, much information is leaked as an attacker learns the
result of each comparison operation.
Concerto [74] uses a TEE to protect a key-value store.
However, it does only consider integrity without conﬁdentiality
and it does not support protected range queries.
Software-only, encrypted databases. Some software-only,
encrypted databases use property-preserving encryption for
efﬁcient search [4], [5]. Every database functionality requires
its own encryption scheme with additional storage overhead. For
instance, deterministic encryption [63] supports equality selects,
and OPE [75], [76], [61], [77] allows range queries. Practical
attacks on property-preserving encryption were presented [64],
[60], [78], [68], [66]. Some encrypted dictionaries of EncDBDB
are affected by the mentioned attacks, but the data owners can
freely choose a security level that ﬁts their requirements without
losing functionality. Furthermore, EncDBDB handles equality
and range queries with one encryption scheme having a small
performance and storage overhead.
Other software-only, encrypted databases, which allow
range queries, have been published, but they leak additional
information on the queried range or the result set contains false
positives [79]; propose to split the server into two non-colluding
parties [80]; or require multiple rounds [81]. EncDBDB does
not have any of those restrictions.
VIII. CONCLUSION
In this paper, we introduced EncDBDB—a concept for an
encrypted, fast, compressed, in-memory database supporting
analytic queries on large datasets using a TEE. EncDBDB
provides nine encrypted dictionaries with distinct security,
performance and storage efﬁciency tradeoffs. Even with no
frequency leakage and bounded order leakage, range queries
on datasets with millions of encrypted entries are executed
within milliseconds. If some frequency leakage is acceptable,
the compressed encrypted data requires less space than an
uncompressed plaintext column. Moreover, the TCB of Enc-
DBDB consists only of 1129 LoC exposing only a small attack
surface.
Authorized licensed use limited to: Tsinghua University. Downloaded on October 11,2021 at 09:24:56 UTC from IEEE Xplore.  Restrictions apply. 
448
REFERENCES
[1] C. Gentry, “Fully Homomorphic Encryption Using Ideal Lattices,” in
Proceedings of the ACM Symposium on Theory of Computing, ser. STOC,
2009.
[2] J. Coron, A. Mandal, D. Naccache, and M. Tibouchi, “Fully Homo-
morphic Encryption over the Integers with Shorter Public Keys,” in
Proceedings of the Annual International Cryptology Conference, ser.
CRYPTO, 2011.
[3] C. Gentry, S. Halevi, and N. P. Smart, “Homomorphic Evaluation of the
AES Circuit,” in Proceedings of the Annual International Cryptology
Conference, ser. CRYPTO, 2012.
[4] R. A. Popa, C. M. S. Redﬁeld, N. Zeldovich, and H. Balakrishnan,
“CryptDB: Protecting Conﬁdentiality with Encrypted Query Processing,”
in Proceedings of the ACM Symposium on Operating Systems Principles,
ser. SOSP, 2011.
[5] S. Tu, M. F. Kaashoek, S. Madden, and N. Zeldovich, “Processing Ana-
lytical Queries over Encrypted Data,” in Proceedings of the International
Conference on Very Large Data Bases, ser. VLDB, 2013.
[6] S. Eskandarian and M. Zaharia, “ObliDB: Oblivious Query Processing
using Hardware Enclaves,” in Proceedings of the International Conference
on Very Large Data Bases, ser. VLDB, 2019.
[7] D. Vinayagamurthy, A. Gribov, and S. Gorbunov, “StealthDB: a Scalable
Encrypted Database with Full SQL Query Support,” Proceedings on
Privacy Enhancing Technologies, 2019.
[8] A. Baumann, M. Peinado, and G. Hunt, “Shielding Applications from an
Untrusted Cloud with Haven,” in Proceedings of the USENIX Symposium
on Operating Systems Design and Implementation, ser. OSDI, 2014.
[9] C. Priebe, K. Vaswani, and M. Costa, “EnclaveDB: A Secure Database
using SGX,” in Proceedings of the IEEE Symposium on Security and
Privacy, ser. S&P, 2018.
[10] D. J. Abadi, P. Boncz, S. Harizopoulos, S. Idreos, and S. Madden,
“The Design and Implementation of Modern Column-Oriented Database
Systems,” Foundations and Trends® in Databases, 2013.
[11] P. A. Boncz and M. L. Kersten, “MIL primitives for querying a
fragmented world,” The VLDB Journal, 1999.
[12] G. P. Copeland and S. N. Khoshaﬁan, “A Decomposition Storage Model,”
in Proceedings of the ACM International Conference on Management of
Data, ser. SIGMOD, 1985.
[13] D. J. DeWitt, R. H. Katz, F. Olken, L. D. Shapiro, M. R. Stonebraker, and
D. A. Wood, “Implementation Techniques for Main Memory Database
Systems,” in Proceedings of the ACM International Conference on
Management of Data, ser. SIGMOD, 1984.
[14] H. Garcia-Molina and K. Salem, “Main Memory Database Systems:
An Overview,” IEEE Transactions on knowledge and data engineering,
1992.
[15] P.- ˚A. Larson and J. Levandoski, “Modern Main-Memory Database
Systems,” Proceedings of the VLDB Endowment, 2016.
[16] D. J. Abadi, S. Madden, and M. Ferreira, “Integrating Compression and
Execution in Column-Oriented Database Systems,” in Proceedings of the
ACM International Conference on Management of Data, ser. SIGMOD,
2006.
[17] T. Willhalm, N. Popovici, Y. Boshmaf, H. Plattner, A. Zeier, and
J. Schaffner, “SIMD-Scan: Ultra Fast in-Memory Table Scan Using
on-Chip Vector Processing Units,” Proceedings of the VLDB Endowment,
2009.
[18] P. A. Boncz, M. L. Kersten, and S. Manegold, “Breaking the Memory
Wall in MonetDB,” Communications of the ACM, 2008.
[19] SAP America, Inc. (2020) SAP HANA — In-Memory Database.
[Online]. Available: https://www.sap.com/products/hana.html
[20] Oracle. (2020) In-Memory Database — Oracle. [Online]. Available:
https://www.oracle.com/database/technologies/in-memory.html
[21] S. Idreos, F. Groffen, N. Nes, S. Manegold, K. S. Mullender, and M. L.
Kersten, “MonetDB: Two Decades of Research in Column-oriented
Database Architectures,” IEEE Data Engineering Bulletin, 2012.
[22] M. Stonebraker, D. J. Abadi, A. Batkin, X. Chen, M. Cherniack,
M. Ferreira, E. Lau, A. Lin, S. Madden, E. O’Neil et al., “C-store: A
Column-Oriented DBMS,” in Proceedings of the International Conference
on Very Large Data Bases, ser. VLDB, 2005.
[23] I. M¨uller, C. Ratsch, and F. Faerber, “Adaptive String Dictionary Com-
pression in In-Memory Column-Store Database Systems,” in Proceedings
of the International Conference on Extending Database Technology, ser.
EDBT, 2014.
[24] I. Anati, S. Gueron, S. P. Johnson, and V. R. Scarlata, “Innovative
Technology for CPU Based Attestation and Sealing,” in Proceedings of
the Workshop on Hardware and Architectural Support for Security and
Privacy, ser. HASP, 2013.
[25] V. Costan and S. Devadas, “Intel SGX Explained,” IACR Cryptology
ePrint Archive, Report 2016/086, 2016.
[26] M. Hoekstra, R. Lal, P. Pappachan, V. Phegade, and J. Del Cuvillo,
“Using Innovative Instructions to Create Trustworthy Software Solutions,”
in Proceedings of the Workshop on Hardware and Architectural Support
for Security and Privacy, ser. HASP, 2013.
[27] Intel. (2014) Intel® Software Guard Extensions Programming Reference.
[Online]. Available: https://software.intel.com/sites/default/ﬁles/managed/
48/88/329298-002.pdf
[28] Intel Corporation. (2015) Intel® Software Guard Extensions (Intel®
SGX). [Online]. Available: https://software.intel.com/sites/default/ﬁles/
332680-002.pdf
[29] F. McKeen, I. Alexandrovich, A. Berenzon, C. V. Rozas, H. Shaﬁ,
V. Shanbhogue, and U. R. Savagaonkar, “Innovative Instructions and
Software Model for Isolated Execution,” in Proceedings of the Workshop
on Hardware and Architectural Support for Security and Privacy, ser.
HASP, 2013.
[30] J. Katz and Y. Lindell, Introduction to Modern Cryptography, 2nd ed.
CRC press, 2015.
[31] G. Chen, S. Chen, Y. Xiao, Y. Zhang, Z. Lin, and T. H. Lai, “SGXPectre:
Stealing Intel Secrets from SGX Enclaves via Speculative Execution,” in
Proceedings of the IEEE European Symposium on Security and Privacy,
ser. EuroS&P, 2019.
[32] J. Van Bulck, M. Minkin, O. Weisse, D. Genkin, B. Kasikci, F. Piessens,
M. Silberstein, T. F. Wenisch, Y. Yarom, and R. Strackx, “Foreshadow:
Extracting the Keys to the Intel SGX Kingdom with Transient Out-of-
Order Execution,” in Proceedings of the USENIX Security Symposium,
ser. USENIX Security, 2018.
[33] M. Schwarz, M. Lipp, D. Moghimi, J. Van Bulck, J. Stecklina, T. Prescher,
and D. Gruss, “ZombieLoad: Cross-Privilege-Boundary Data Sampling,”
in Proceedings of the ACM SIGSAC Conference on Computer and
Communications Security, ser. CCS, 2019.
[34] S. van Schaik, M. Minkin, A. Kwong, D. Genkin, and Y. Yarom. (2020)
CacheOut: Leaking Data on Intel CPUs via Cache Evictions. [Online].
Available: https://cacheoutattack.com/
[35] F. Brasser, U. M¨uller, A. Dmitrienko, K. Kostiainen, S. Capkun, and
A. Sadeghi, “Software Grand Exposure: SGX Cache Attacks Are
Practical,” in Proceedings of the USENIX Conference on Offensive
Technologies, ser. WOOT, 2017.
[36] N. Weichbrodt, A. Kurmus, P. Pietzuch, and R. Kapitza, “AsyncShock:
Exploiting Synchronisation Bugs in Intel SGX Enclaves,” in Proceedings
of the European Symposium on Research in Computer Security, ser.
ESORICS, 2016.
[37] Y. Xu, W. Cui, and M. Peinado, “Controlled-Channel Attacks: Determin-
istic Side Channels for Untrusted Operating Systems,” in Proceedings of
the IEEE Symposium on Security and Privacy, ser. S&P, 2015.
[38] M. Schwarz, S. Weiser, D. Gruss, C. Maurice, and S. Mangard, “Malware
Guard Extension: Using SGX to Conceal Cache Attacks,” in Proceedings
of the International Conference on Detection of Intrusions and Malware,
and Vulnerability Assessment, ser. DIMVA, 2017.
[39] M. Schwarz, S. Weiser, and D. Gruss, “Practical Enclave Malware with
Intel SGX,” in Proceedings of the International Conference on Detection
of Intrusions and Malware, and Vulnerability Assessment, ser. DIMVA,
2019.
[40] Intel. (2019) Intel® Software Guard Extensions Trusted Computing Base
Recovery. [Online]. Available: https://software.intel.com/sites/default/
ﬁles/managed/01/7b/Intel-SGX-Trusted-Computing-Base-Recovery.pdf
[41] S. Shinde, Z. L. Chua, V. Narayanan, and P. Saxena, “Preventing Page
Faults from Telling Your Secrets,” in Proceedings of the ACM on Asia
Conference on Computer and Communications Security, ser. ASIACCS,
2016.
[42] S. Chen, X. Zhang, M. K. Reiter, and Y. Zhang, “Detecting Privileged
Side-Channel Attacks in Shielded Execution with D´ej´a Vu,” inProceed-
ings of the ACM on Asia Conference on Computer and Communications
Security, ser. ASIACCS, 2017.
[43] D. Gruss, J. Lettner, F. Schuster, O. Ohrimenko, I. Haller, and M. Costa,
“Strong and Efﬁcient Cache Side-Channel Protection using Hardware
Transactional Memory,” in Proceedings of the USENIX Security Sympo-
sium, ser. USENIX Security, 2017.
Authorized licensed use limited to: Tsinghua University. Downloaded on October 11,2021 at 09:24:56 UTC from IEEE Xplore.  Restrictions apply. 
449
[66] P. Grubbs, M. Lacharite, B. Minaud, and K. G. Paterson, “Pump up the
Volume: Practical Database Reconstruction from Volume Leakage on
Range Queries,” in Proceedings of the ACM Conference on Computer
and Communications Security, ser. CCS, 2018.
[67] Z. Gui, O. Johnson, and B. Warinschi, “Encrypted Databases: New
Volume Attacks against Range Queries,” in Proceedings of the ACM
Conference on Computer and Communications Security, ser. CCS, 2019.
[68] G. Kellaris, G. Kollios, K. Nissim, and A. O’Neill, “Generic Attacks
on Secure Outsourced Databases,” in Proceedings of the ACM SIGSAC
Conference on Computer and Communications Security, ser. CCS, 2016.
[69] Y. Lu, “Privacy-Preserving Logarithmic-time Search on Encrypted Data
in Cloud,” in Proceedings of the Network and Distributed System Security
Symposium, ser. NDSS, 2012.
[70] S. Arnautov, B. Trach, F. Gregor, T. Knauth, A. Martin, C. Priebe,
J. Lind, D. Muthukumaran, D. O’Keeffe, M. L. Stillwell, D. Goltzsche,
D. Eyers, R. Kapitza, P. Pietzuch, and C. Fetzer, “SCONE: Secure Linux
Containers with Intel SGX,” in Proceedings of the USENIX Symposium
on Operating Systems Design and Implementation, ser. OSDI, 2016.
[71] V. Sartakov, N. Weichbrodt, S. Krieter, T. Leich, and R. Kapitza,
“STANlite–a database engine for secure data processing at rack-scale
level,” in Proceedings of the IEEE International Conference on Cloud
Engineering, ser. IC2E, 2018.
[72] B. Fuhry, R. Bahmani, F. Brasser, F. Hahn, F. Kerschbaum, and
A. Sadeghi, “HardIDX: Practical and Secure Index with SGX,” in
Proceedings of the IFIP Annual Conference on Data and Applications
Security and Privacy, ser. DBSec, 2017.
[73] P. Antonopoulos, A. Arasu, K. D. Singh, K. Eguro, N. Gupta, R. Jain,
R. Kaushik, H. Kodavalla, D. Kossmann, N. Ogg et al., “Azure SQL
Database Always Encrypted,” in Proceedings of the ACM International
Conference on Management of Data, ser. SIGMOD, 2020.
[74] A. Arasu, K. Eguro, R. Kaushik, D. Kossmann, P. Meng, V. Pandey,
and R. Ramamurthy, “Concerto: A High Concurrency Key-Value Store
with Integrity,” in Proceedings of the ACM International Conference on
Management of Data, ser. SIGMOD, 2017.
[75] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu, “Order Preserving
Encryption for Numeric Data,” in Proceedings of the ACM International
Conference on Management of Data, ser. SIGMOD, 2004.
[76] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill, “Order-Preserving
Symmetric Encryption,” in Proceedings of the Annual International
Conference on the Theory and Applications of Cryptographic Techniques,
ser. EUROCRYPT, 2009.
[77] F. Kerschbaum and A. Schr¨opfer, “Optimal Average-Complexity Ideal-
Security Order-Preserving Encryption,” in Proceedings of the ACM
Conference on Computer and Communications Security, ser. CCS, 2014.
[78] M.-S. Lacharit´e, B. Minaud, and K. G. Paterson, “Improved Recon-
struction Attacks on Encrypted Data Using Range Query Leakage,” in
Proceedings of the IEEE Symposium on Security and Privacy, ser. S&P,
2018.
[79] S. Faber, S. Jarecki, H. Krawczyk, Q. Nguyen, M. Rosu, and M. Steiner,
“Rich Queries on Encrypted Data: Beyond Exact Matches,” in Proceedings
of the European Symposium on Research in Computer Security, ser.
ESORICS, 2015.
[80] V. Pappas, F. Krell, B. Vo, V. Kolesnikov, T. Malkin, S. G. Choi,
W. George, A. Keromytis, and S. Bellovin, “Blind Seer: A Scalable
Private DBMS,” in Proceedings of the Symposium on Security and
Privacy, ser. S&P, 2014.
[81] M. Egorov and M. Wilkison, “ZeroDB white paper,” arXiv.org,
arXiv:1602.07168, 2016.
[44] J. Laski and W. Stanley, Software Veriﬁcation and Analysis: An Integrated,
Hands-On Approach. Springer Science & Business Media, 2009.
[45] S. Matetic, M. Ahmed, K. Kostiainen, A. Dhar, D. Sommer, A. Gervais,
A. Juels, and S. Capkun, “ROTE: Rollback Protection for Trusted
Execution,” in Proceedings of the USENIX Security Symposium, ser.
USENIX Security, 2017.
[46] M. Brandenburger, C. Cachin, M. Lorenz, and R. Kapitza, “Rollback
and Forking Detection for Trusted Execution Environments using
Lightweight Collective Memory,” in Proceedings of the Annual IEEE/IFIP
International Conference on Dependable Systems and Networks, ser. DSN,
2017.
[47] F. Kerschbaum and A. Tueno, “An Efﬁciently Searchable Encrypted Data
Structure for Range Queries,” in Proceedings of the European Symposium
on Research in Computer Security, ser. ESORICS, 2019.
[48] D. Pouliot, S. Griffy, and C. V. Wright, “The Strength of Weak
Randomization: Efﬁciently Searchable Encryption with Minimal Leakage,”
IACR Cryptology ePrint Archive, Report 2017/1098, 2017.
[49] S. Krastnikov, F. Kerschbaum, and D. Stebila, “Efﬁcient Oblivious
Database Joins,” arXiv.org, arXiv:2003.09481, 2020.
[50] S. Harizopoulos, V. Liang, D. J. Abadi, and S. Madden, “Performance
Tradeoffs in Read-Optimized Databases,” in Proceedings of the Interna-
tional Conference on Very Large Data Bases, ser. VLDB, 2006.
[51] F. F¨arber, N. May, W. Lehner, P. Große, I. M¨uller, H. Rauhe, and J. Dees,
“The SAP HANA Database – An Architecture Overview,” IEEE Data
Engineering Bulletin, 2012.
[52] F. H¨ubner, J. B¨ose, J. Kr¨uger, C. Tosun, A. Zeier, and H. Plattner, “A
cost-aware strategy for merging differential stores in column-oriented
in-memory DBMS,” in Proceedings of the International Workshop on
Business Intelligence for the Real-Time Enterprise, ser. BIRTE, 2011.
[53] S. Sasy, S. Gorbunov, and C. W. Fletcher, “ZeroTrace: Oblivious
Memory Primitives from Intel SGX,” in Proceedings of the Network and
Distributed System Security Symposium, ser. NDSS, 2018.
[54] W. Zheng, A. Dave, J. G. Beekman, R. A. Popa, J. E. Gonzalez, and
I. Stoica, “Opaque: An Oblivious and Encrypted Distributed Analytics
Platform,” in Proceedings of the USENIX Symposium on Networked
Systems Design and Implementation, ser. NSDI, 2017.
[55] P. A. Boncz, M. Zukowski, and N. Nes, “MonetDB/X100: Hyper-
Pipelining Query Execution,” in Proceedings of the Conference on
Innovative Data Systems, ser. CIDR, 2005.
[56] M. J. Parreira Pereira, “Tools and Techniques for the Veriﬁcation of
Modular Stateful Code,” Ph.D. dissertation, Universit´e Paris-Saclay
(ComUE), 2018.
[57] M. Lindgren, “Practical Veriﬁcation of Stateful Embedded C Code using
Finite State Machines and VCC,” 2020.
[58] D. Boneh, K. Lewi, M. Raykova, A. Sahai, M. Zhandry, and J. Zimmer-
man, “Semantically Secure Order-Revealing Encryption: Multi-input
Functional Encryption Without Obfuscation,” in Proceedings of the
Annual International Conference on the Theory and Applications of
Cryptographic Techniques, ser. EUROCRYPT, 2015.
[59] V. Bindschaedler, P. Grubbs, D. Cash, T. Ristenpart, and V. Shmatikov,
“The Tao of Inference in Privacy-Protected Databases,” in Proceedings
of the International Conference on Very Large Data Bases, ser. VLDB,
2018.
[60] P. Grubbs, K. Sekniqi, V. Bindschaedler, M. Naveed, and T. Risten-
part, “Leakage-Abuse Attacks against Order-Revealing Encryption,” in
Proceedings of the Symposium on Security and Privacy, ser. S&P, 2017.
[61] A. Boldyreva, N. Chenette, and A. O’Neill, “Order-Preserving Encryption
Revisited: Improved Security Analysis and Alternative Solutions,” in
Proceedings of the Annual International Cryptology Conference, ser.
CRYPTO, 2011.
[62] C. Mavroforakis, N. Chenette, A. O’Neill, G. Kollios, and R. Canetti,
“Modular Order-Preserving Encryption, Revisited,” in Proceedings of the
ACM International Conference on Management of Data, ser. SIGMOD,
2015.
[63] M. Bellare, A. Boldyreva, and A. O’Neill, “Deterministic and Efﬁciently
Searchable Encryption,” in Proceedings of the Annual International
Cryptology Conference, ser. CRYPTO, 2007.
[64] M. Naveed, S. Kamara, and C. V. Wright, “Inference Attacks on Property-
Preserving Encrypted Databases,” in Proceedings of the ACM Conference
on Computer and Communications Security, ser. CCS, 2015.
[65] F. Kerschbaum, “Frequency-Hiding Order-Preserving Encryption,” in
Proceedings of the ACM SIGSAC Conference on Computer and Commu-
nications Security, ser. CCS, 2015.
Authorized licensed use limited to: Tsinghua University. Downloaded on October 11,2021 at 09:24:56 UTC from IEEE Xplore.  Restrictions apply. 
450