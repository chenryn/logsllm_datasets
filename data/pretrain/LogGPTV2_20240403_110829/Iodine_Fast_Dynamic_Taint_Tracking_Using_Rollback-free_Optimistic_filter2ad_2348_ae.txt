.
s
n
o
C
e
n
d
o
i
l
l
u
F
.
s
n
o
C
e
n
d
o
i
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
qmqp-
sink
qmqp-
source
smtp-
sink
smtp-
source
sendmail nginx
thttpd
redis
vim
gzip Mean
qmqp-
sink
qmqp-
source
smtp-
sink
smtp-
source
sendmail nginx
thttpd
redis
vim
gzip Mean
(a) some-to-some taint analysis
(b) some-to-all taint analysis
Fig. 6: Iodine compared to pure (full) dynamic DIFT and conservative hybrid DIFT.
Full Dynamic
Conservative Hybrid
Iodine
Conservative
+Unreachable Codes
+Callee Sets
+Call Contexts
5
5
6
.
4
7
4 5
1
5
.
.
3
3
3
.
9
7
2
.
2
4
3
.
8
4
.
1
3
3
1
.
2
7
2
.
3
1
2
.
7
8
9 1
2
1
.
.
4
5
5
.
4
2
3
.
2
5
4
.
1
2
4
.
8
4
3
.
7
5
4 2
1
2
.
.
7
4
2
.
5
2
1
.
1
2
1
.
6
3
1
.
4
3
.
1
8
5
7
.
6
9
3
.
4
8
.
4
3
8
.
2
5
6
1
.
1
4
.
1
s
r
o
t
i
n
o
m
c
i
t
a
t
s
f
o
n
o
i
t
c
a
r
F
1.0
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0.0
9
2
7
0
.
9
0
7
0
.
6
8
6
0
.
4
8
5
0
.
0
5
5
0
.
3
8
3
0
3
8
3
0
.
.
9
5
3
0
.
7
1
4
0
.
2
2
4
0
2
2
4
4 0
6
3
0
.
.
.
9
7
3
0
.
2
4
3
0
.
7
0
5
0
.
7
2
4
0
.
7
4
4
8 0
8
3
0
.
.
7
0
4
0
.
3
5
3
0
.
1
1
6
0
.
0
8
5
0
.
4
6
4
0
.
2
3
4
0
7
1
4
0
.
.
8
7
4
0
.
2
3
4
0
5
2
4
0
.
.
2
0
6
0
.
9
4
5
0
.
9
2
4
0
.
2
7
3
0
.
2
2
3
0
.
6
1
4
0
.
1
8
3
0
.
3
9
2
0
.
4
8
6
0
.
5
2
6
.
0
5
6
4
0
.
5
9
3
0
5
9
3
0
.
.
9
3
4
.
0
1
0
4
.
0
7
6
3
.
0
Fig. 7: Taint tracking performance on SPECint C benchmarks
same randomized some-to-some analysis setup on the SPECint
benchmarks that are written in C with reference inputs. The re-
sults of these experiments are shown in Figure 7. The SPECint
benchmarks are tuned to be CPU bound, and therefore exhibit
higher DIFT overheads compared to our other case studies.
Iodine improves the dynamic overhead of taint analysis by
4.5×, bringing the overhead of taint tracking over unmonitored
execution from 183% with conservative hybrid analysis down
to 41%. This speedup is in fact much higher than the 2.8×
speedup for our other programs.