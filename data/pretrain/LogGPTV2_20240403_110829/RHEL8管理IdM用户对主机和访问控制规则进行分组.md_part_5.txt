4.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-users-present-jsonfile.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证 IdM
    中是否存在用户帐户：
    ::: orderedlist
    1.  以管理员身份登录到 `ipaserver`{.literal} ：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  显示有关 [*idm_user_1*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user_1
          User login: idm_user_1
          First name: Alice
          Last name: Acme
          Password: True
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-absence-of-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}确保没有用户使用 Ansible playbook {.title}
:::
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中没有特定用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理器密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建 Ansible playbook 文件，使其包含没有 IdM
    的用户。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-users-present.yml`{.literal}
    文件中的示例。例如，要删除用户
    [*idm_user_1[]{.emphasis}、idm_user_2*]{.emphasis} 和
    [*idm_user_3*]{.emphasis} ：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Delete users idm_user_1, idm_user_2, idm_user_3
        ipauser:
          ipaadmin_password: MySecret123
          users:
          - name: idm_user_1
          - name: idm_user_2
          - name: idm_user_3
          state: absent
    ```
3.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/delete-users.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用 `ipa user-show`{.literal} 命令验证 IdM 中是否不存在用户帐户：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  请求有关 [*idm_user_1*]{.emphasis} 的信息：
    ``` literallayout
    $ ipa user-show idm_user_1
    ipa: ERROR: idm_user_1: user not found
    ```
    IdM 中不存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
::: itemizedlist
**其它资源**
-   您可以看到有关其他 IdM 用户相关操作的 Ansible playbook
    示例，如保留、删除、启用、禁用、解锁和取消删除用户，该文件位于
    `/usr/share/doc/ansible-freeipa/ 目录中的 README-`{.literal} user.md
    Markdown 文件中。该文件还包含 `ipauser`{.literal} 变量的定义。
-   您还可以在 `/usr/share/doc/ansible-freeipa/playbooks/user`{.literal}
    目录中查看 Ansible playbook 示例。
:::
:::
:::
[]{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts}第 4 章 为 IdM 客户端上的 IdM 用户授予 sudo 访问权限 {.title}
:::
::: section
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#sudo-access-on-an-IdM-client_granting-sudo-access-to-an-IdM-user-on-an-IdM-client}IdM 客户端上的 sudo 访问权限 {.title}
:::
系统管理员可以授予 `sudo`{.literal} 访问权限，以允许非 root
用户执行通常为 `root`{.literal}
用户保留的管理命令。因此，当用户需要执行通常为 `root`{.literal}
用户保留的管理命令时，他们会在此命令前面使用
`sudo`{.literal}。输入密码后，将像 `root`{.literal} 用户一样执行 命令。
如果 Red Hat Enterprise Linux(RHEL)8 主机注册为 Identity
Management(IdM)客户端，您可以指定 `sudo`{.literal} 规则来定义哪些 IdM
用户可以在主机上执行哪些命令：
::: itemizedlist
-   本地的 `/etc/sudoers`{.literal} 文件中
-   集中在 IdM 中
:::
本节论述了使用命令行界面(CLI)和 IdM Web UI 为 IdM 客户端创建 [**中央
`sudo`{.literal} 规则**]{.strong}。
在 RHEL 8.4
及更高版本中，您还可以使用通用安全服务应用程序编程接口(GSSAPI)为
`sudo`{.literal} 配置免密码身份验证，这是基于 UNIX 的操作系统访问和验证
Kerberos 服务的本地方式。您可以使用 `pam_sss_gss.so`{.literal}
可插拔验证模块(PAM)通过 SSSD 服务调用 GSSAPI
身份验证，允许用户通过有效的 Kerberos 票据向 `sudo`{.literal}
命令进行身份验证。
::: itemizedlist
**其它资源**
-   有关在 RHEL 8 主机上创建本地 `sudo`{.literal}
    规则的详情，[请参阅管理 sudo
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#managing-sudo-access-from-the-command-line_managing-user-and-group-accounts){.link}。
:::
:::
::: section
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#proc_granting-sudo-access-to-an-idm-user-on-an-idm-client-using-the-cli_granting-sudo-access-to-an-IdM-user-on-an-IdM-client}使用 CLI 向 IdM 客户端上的 IdM 用户授予 sudo 访问权限 {.title}
:::
在 Identity Management(IdM)中，您可以将特定命令的 `sudo`{.literal}
访问权限授予特定 IdM 主机上的 IdM 用户帐户。首先，添加 `sudo`{.literal}
命令，然后为一个或多个命令创建 `sudo`{.literal} 规则。
例如，完成这个过程以创建 `idm_user_reboot`{.literal} `sudo`{.literal}
规则，为 `idm_user`{.literal} 帐户授予在 `idmclient`{.literal}
机器上运行 `/usr/sbin/reboot`{.literal} 命令的权限。
::: itemizedlist
**先决条件**
-   以 IdM 管理员身份登录。
-   您已在 IdM 中创建 `了 idm_user`{.literal}
    的用户帐户，并通过为用户创建密码来解锁帐户。有关使用 CLI 添加新 IdM
    [用户的详情，请参阅使用命令行添加用户](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#adding-users-using-the-command-line_managing-idm-users-using-the-command-line){.link}。
-   `idm client 上尚未创建本地 idm`{.literal} \_user``{=html}
    帐户。`idm_user`{.literal} 用户未列在本地 `/etc/passwd`{.literal}
    文件中。
:::
::: orderedlist
**流程**
1.  检索作为 IdM `管理员`{.literal} 的 Kerberos 票据。
    ``` literallayout
    [root@idmclient ~]# kinit admin
    ```
2.  在 `sudo`{.literal} 命令的 IdM 数据库中添加
    `/usr/sbin/reboot`{.literal} 命令：
    ``` literallayout
    [root@idmclient ~]# ipa sudocmd-add /usr/sbin/reboot
    -------------------------------------
    Added Sudo Command "/usr/sbin/reboot"
    -------------------------------------
      Sudo Command: /usr/sbin/reboot
    ```
3.  创建名为 `idm_user_reboot`{.literal} 的 `sudo`{.literal} 规则：
    ``` literallayout
    [root@idmclient ~]# ipa sudorule-add idm_user_reboot
    ---------------------------------
    Added Sudo Rule "idm_user_reboot"
    ---------------------------------
      Rule name: idm_user_reboot
      Enabled: TRUE
    ```
4.  在 `idm_user_ reboot 规则中添加 /usr/sbin/`{.literal}
    reboot``{=html} 命令：
    ``` literallayout
    [root@idmclient ~]# ipa sudorule-add-allow-command idm_user_reboot --sudocmds '/usr/sbin/reboot'
      Rule name: idm_user_reboot
      Enabled: TRUE
      Sudo Allow Commands: /usr/sbin/reboot
    -------------------------
    Number of members added 1
    -------------------------
    ```
5.  将 `idm_user_reboot`{.literal} 规则应用到 IdM `idmclient`{.literal}
    主机：
    ``` literallayout
    [root@idmclient ~]# ipa sudorule-add-host idm_user_reboot --hosts idmclient.idm.example.com
    Rule name: idm_user_reboot
    Enabled: TRUE
    Hosts: idmclient.idm.example.com
    Sudo Allow Commands: /usr/sbin/reboot
    -------------------------
    Number of members added 1
    -------------------------
    ```
6.  在 `idm_user_`{.literal} `reboot 规则中添加 idm_user`{.literal}
    帐户：
    ``` literallayout
    [root@idmclient ~]# ipa sudorule-add-user idm_user_reboot --users idm_user
    Rule name: idm_user_reboot
    Enabled: TRUE
    Users: idm_user
    Hosts: idmclient.idm.example.com
    Sudo Allow Commands: /usr/sbin/reboot
    -------------------------
    Number of members added 1
    -------------------------
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
将更改从服务器传播到客户端可能需要几分钟时间。
:::
::: orderedlist
**验证步骤**
1.  以 `idm _user 帐户身份登录 idm`{.literal} client``{=html}
    主机。
2.  显示允许 `idm_user`{.literal} 帐户执行的 `sudo`{.literal} 规则。
    ``` literallayout
    [idm_user@idmclient ~]$ sudo -l
    Matching Defaults entries for idmuser on idmclient:
        !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin,
        env_reset, env_keep="COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS",
        env_keep+="MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE",
        env_keep+="LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES",
        env_keep+="LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE",
        env_keep+="LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY KRB5CCNAME",
        secure_path=/sbin\:/bin\:/usr/sbin\:/usr/bin
    User idm_user may run the following commands on idmclient:
        (root) /usr/sbin/reboot
    ```
3.  使用 `sudo`{.literal} 重新启动计算机。在提示时输入
    `idm_user`{.literal} 的密码：
    ``` literallayout
    [idm_user@idmclient ~]$ sudo /usr/sbin/reboot
    [sudo] password for idm_user:
    ```
:::
:::
::: section
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#using-IdM-Web-UI-to-grant-sudo-access-to-an-IdM-user-on-an-IdM-client_granting-sudo-access-to-an-IdM-user-on-an-IdM-client}使用 IdM Web UI 向 IdM 客户端上的 IdM 用户授予 sudo 访问权限 {.title}
:::
在 Identity Management(IdM)中，您可以将特定命令的 `sudo`{.literal}
访问权限授予特定 IdM 主机上的 IdM 用户帐户。首先，添加 `sudo`{.literal}
命令，然后为一个或多个命令创建 `sudo`{.literal} 规则。
完成此步骤以创建 `idm_user_reboot`{.literal} sudo 规则，为
`idm_user`{.literal} 帐户授予在 `idmclient`{.literal} 计算机上运行
`/usr/sbin/reboot`{.literal} 命令的权限。
::: itemizedlist
**先决条件**
-   以 IdM 管理员身份登录。
:::
::: itemizedlist