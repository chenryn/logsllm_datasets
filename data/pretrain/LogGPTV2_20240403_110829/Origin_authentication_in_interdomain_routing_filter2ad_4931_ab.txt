tion with the ASes owned by it. These addresses are conﬁgured
into routers which subsequently advertise them via BGP. From the
ﬁgure, AT&T assigns the addresses it is delegated to the ASes under
its control (e.g., AS7018 is assigned 12.0.0.0/8 and 64.1.0.0/16),
as does ALPHA (AS2997 is assigned 12.1.1.0/24).
AT&T retains control (originates) of 12.0.0.0/8 by assign-
ing the preﬁx to AS7018. This assignment is seemingly ambigu-
ous: because 12.0.0.0/8 is a superset of 12.1.1.0/24, they
both assert control over the same addresses. This is resolved in
BGP by the longest preﬁx matching rule: the longest preﬁx del-
egation/assignment (in terms of mask size) supersedes all shorter
preﬁxes. Hence, AT&T’s delegation and ALPHA’s subsequent as-
signment of 12.1.1.0/24 is always taken as authoritative over
the assignment of 12.0.0.0/8.
Delegation and assignment on the Internet is currently an ad-
ministrative process. There is no structure for validating claims of
address ownership and assignment. This paper addresses this need
by attempting to both clarify the semantics of these assertions as
well as deﬁne efﬁcient constructions for their authentication.
A prerequisite of this work is a parallel management structure
for the secure management of organizations and AS identiﬁers and
associated cryptographic material. Seo et. al. have considered such
infrastructures in depth [30]. We assume an infrastructure for reg-
istering address authorities and organizations, as well as for the
management of certiﬁcates assigned to these entities. Furthermore,
authentication of speaker identity, and more generally of any as-
pect of the AS topology or path information, is explicitly outside
the scope of this work.
3. RELATED WORK
Early works in interdomain routing security characterized the
relevant threats and countermeasures [31, 5, 24, 26]. The identi-
ﬁed problems are succinctly described by Murphy in her analysis
of BGP [24]. Her analysis shows that the vulnerabilities of BGP
directly ﬂow from the following truths: a) messages do not have
guaranteed integrity, freshness, or authenticity, b) paths are not au-
thenticated, and c) there is no way to validate an AS’s authority
to advertise a preﬁx. This paper focuses solely on this last point,
the lack of authenticated address usage. As identiﬁed by Murphy
and others, origin authentication traces the delegation of address
space between authorities (e.g., IANA), organizations (e.g., IBM),
and ASes. Seo et. al. uncovered the hidden complexity in the del-
egation of not only IP addresses, but of other aspects of the inter-
domain routing (e.g., AS numbers) [30]. The natural and almost
universally accepted method for tracing delegation in these large,
complex networks is through signed assertions.
In practice, the
scale of the Internet mandates that these assertions be supported by
a certiﬁcation infrastructure.
A leading candidate for securing Internet routing, the compre-
hensive S-BGP extension to BGP addresses a wide range of threats [18,
17]. Origin authentication is supported in S-BGP by an address al-
location public key infrastructure (PKI). Authorities in the S-BGP
PKI issue certiﬁcates binding preﬁxes to organizations (e.g., IANA
delegates part of an address space to ARIN, which in turn allocates
some of that space to AT&T, etc.). Certiﬁcates are used to authen-
ticate the validity of preﬁx advertisements. Address Attestations
are delegator signed statements that indicate an AS has the right to
advertise a preﬁx (i.e., delegates to the AS). Others have applied
more complex, but often efﬁcient, cryptographic structures to the
problem of path-vector security [11].
Because of the costs associated with creation and validation (and
to a lesser degree because of BGP message size constraints), the au-
thors of S-BGP advise that address attestations should be managed
through an out-of-band mechanism. The proposed architecture de-
ﬁnes a collection of intermediate repositories maintaining certiﬁ-
cates, revocation lists (CRLs), and address attestations. It is sug-
gested that much of the effort of certiﬁcate and CRL validation can
be completed by repositories. Centralized attestation repositories
mitigate the costs of validation during table resets (e.g., memory
re-initialization following a router reboot). For example, router can
rely on the repository to assert validity, rather than by validating
received or acquired proofs.
One challenge in the adoption of any interdomain routing secu-
rity solution is its integration with existing infrastructure. In the In-
terdomain Routing Validation (IRV) project [9], participating ASes
host servers called IRVs. Each IRV maintains a consistent corpus of
routing data received and advertised. Remote entities (e.g., routers,
other IRVs, application) validate locally received data by querying
source AS IRVs using an out-of-band and potentially secure proto-
col. This approach has the advantage that the query responses can
be tailored to the requester for optimization or access control.
The emerging soBGP protocol combines proactive security mea-
sures with anomaly detection [7]. Like IRV, the proposed soBGP
protocol focuses on incremental deployment. soBGP validates ad-
dress announcements in a way similar to S-BGP address attesta-
tions. However, in an effort to make the solution more incremen-
tally deployable, no authority (or structure of authorities) is man-
dated. Hence, users of the protocol are free to accept attestations
or other routing policy data from any entity deemed trustworthy.
Received policy data is used to identify and potentially discard sus-
picious BGP announcements. Because no structure of authorities is
imposed, communities of soBGP ASes may quickly bootstrap and
grow independently.
Whether by constructing and distributing cryptographic proofs
or by detecting divergence from received policy data, the works
described above acknowledge the importance of and address origin
authentication. We begin our investigation of these issues in follow-
ing section by identifying a formal model of address management
and consider the design space of origin authentication solutions.
We conclude in the latter sections by considering the applicability
of these designs to the current Internet.
4. ORIGIN AUTHENTICATION
Origin announcement authentication can be characterized by re-
lations between organizations, ASes and preﬁxes. The central goal
of any address origin authentication solution is to provide evidence
of these relations. Typically taking the form of cryptographically
strong authentication tags, this evidence is used by receiving BGP
speakers to validate address advertisements. The construction and
use of these authentication tags is the topic of this work. We begin
by precisely deﬁning the relations that will be authenticated.
Deﬁnitions: BGP address preﬁx announcements are essentially a
pairing between an AS number and a preﬁx. The goal of origin
authentication is to allow this pairing to be positively veriﬁed. Be-
fore describing origin authentication methods we will ﬁrst formally
deﬁne AS numbers, preﬁxes, and BGP speaking organizations.
Let (cid:0)(cid:1) (cid:0) (cid:3)(cid:1)(cid:3) (cid:2)(cid:3) (cid:4) (cid:4) (cid:4) (cid:3) (cid:4) be the set of all Autonomous Sys-
tem Numbers, where currently  (cid:0) (cid:2)(cid:0)(cid:2). Let (cid:1) be the set of all
BGP speaking organizations, i.e., those organizations to which AS
numbers have been assigned by ICANN [16]. For each organiza-
tion (cid:6) (cid:5) (cid:1), let (cid:0)(cid:1) (cid:6) be the set of AS numbers currently as-
signed to it. Let  be all of the organizations in (cid:1) plus IANA and
the other preﬁx registries.  is the set of all organizations which
can “own” preﬁxes and may subsequently delegate ownership.
Since all preﬁxes are possible in an origin announcement, we
take some care to deﬁne them and their structure below. Let (cid:0) (cid:0)
(cid:3)(cid:5)(cid:3) (cid:1)(cid:4)(cid:0) be the set of all (cid:7)-bit IP addresses where (cid:7) (cid:0) (cid:6)(cid:2) for IPv4
and (cid:7) (cid:0) (cid:7)(cid:8) for IPv6. Address preﬁxes, often just called preﬁxes,
are denoted as (cid:8)(cid:9)(cid:10) where (cid:10) is an integer between 0 and (cid:7), inclusive,
and (cid:8) is a (cid:10) bit number, i.e., (cid:8) (cid:5) (cid:3)(cid:5)(cid:3) (cid:1)(cid:4)(cid:1). Note that this slightly
different than the standard notation for preﬁxes (cid:9)(cid:10) where  is an
(cid:7) bit long IP address and all of the (cid:7)   (cid:10) least signiﬁcant bits are
assumed to be zero. For the remainder of this section we use the
former, non-standard notation.
For the purposes of this discussion, an address preﬁx is a set
consisting of the appropriate addresses. More precisely, (cid:8)(cid:9)(cid:10) (cid:0)
(cid:3)(cid:8)  (cid:12) (cid:11) (cid:12) (cid:5) (cid:3)(cid:5)(cid:3) (cid:1)(cid:4)(cid:0) (cid:1) (cid:4) which is simply all of the (cid:7)-bit addresses
with the (cid:10) most signiﬁcant bits equal to (cid:8) 3 By convention, (cid:13) is the
empty string so that (cid:13)(cid:9)(cid:5) (cid:0) (cid:0) is the set of all addresses. Using
this notation (cid:8)(cid:9)(cid:10) is equal to the disjoint union of the two preﬁxes (cid:8)
(cid:5)(cid:9)(cid:10) (cid:1) and (cid:8)(cid:1)(cid:9)(cid:10) (cid:1). Moreover, (cid:8)(cid:9)(cid:10) is a superset of (cid:8)(cid:12)(cid:9)(cid:10) 
(cid:14) for any (cid:14) (cid:5) (cid:3)(cid:5)(cid:3) (cid:4) (cid:4) (cid:4) (cid:3) (cid:7)   (cid:10)(cid:4) and any (cid:12) (cid:5) (cid:3)(cid:5)(cid:3) (cid:1)(cid:4)(cid:2). Note that
the superset relation deﬁnes a partial order on all address preﬁxes4.
This partial order is naturally represented by a directed tree5 where
the root is (cid:13)(cid:9)(cid:5) (cid:0) (cid:0), where the leaves are the singleton sets
(cid:15)(cid:9)(cid:7) and where each node except the leaves (cid:8)(cid:9)(cid:10) has two outgoing
edges, one to the left child (cid:8)  (cid:5)(cid:9)(cid:10)  (cid:1) and one to the right child
(cid:8)(cid:1)(cid:9)(cid:10)(cid:1). This tree is denoted the preﬁx tree. (For some purposes
it will be useful to extend this partial order to a natural total order
as we will see below.) If two preﬁxes are related by (cid:8)(cid:9)(cid:10) (cid:12) (cid:12)(cid:9)(cid:14)
then we will say that (cid:8)(cid:9)(cid:10) is a subpreﬁx of (cid:12)(cid:9)(cid:14) and that (cid:12)(cid:9)(cid:14) is
a superpreﬁx of (cid:8)(cid:9)(cid:10). We will use the terms proper subpreﬁx and
proper superpreﬁx to denote the case that the two preﬁxes are not
equal. Note that the subpreﬁxes of (cid:8)(cid:9)(cid:10) are the elements of the
subtree of the preﬁx tree rooted at (cid:8)(cid:9)(cid:10) and the superpreﬁxes of (cid:8)(cid:9)(cid:10)
are the nodes on the path from the root to (cid:8)(cid:9)(cid:10) inclusive.
Delegation:
Suppose, as an example, an organization (cid:16) explicitly delegates
the address preﬁx (cid:8)(cid:9)(cid:10) to an organization (cid:6). (cid:6) may want to use
some parts of the addresses in (cid:8)(cid:9)(cid:10) for its own hosts as well as
delegate some subpreﬁxes of (cid:8)(cid:9)(cid:10) to other organizations. Thus, (cid:6)
may delegate (cid:8)  (cid:5)(cid:1)(cid:9)(cid:10)  (cid:2) to (cid:6)(cid:0) and (cid:8)  (cid:1)(cid:5)(cid:1)(cid:9)(cid:10)  (cid:6) to (cid:6)(cid:1),
etc. At this point we are not restricting (cid:6) to behaving efﬁciently
or propertly. Thus, (cid:6) may also delegate (cid:8)  (cid:5)(cid:1)(cid:5)(cid:9)(cid:10)  (cid:6) to (cid:6)(cid:0)
although this is redundant or (cid:8)  (cid:1)(cid:5)(cid:9)(cid:10)  (cid:2) to (cid:6)(cid:3) although this
conﬂicts with (cid:6)’s delegation to (cid:6)(cid:1). If an organization chooses to
use a subpreﬁx of addresses under its ownership for its own hosts,
rather than delegating the ownership of the subpreﬁx to another
organization, it will assign that subpreﬁx of addresses to one of its
ASes. The BGP speakers of that AS will then announce the pairing
of that AS number with that subpreﬁx.
Obverve that although (cid:16) only explicitly delegated (cid:8)(cid:9)(cid:10) to (cid:6), (cid:16)
implicitly delegated to (cid:6) the right to delegate or assign all of the
subpreﬁxes of (cid:8)(cid:9)(cid:10).
Deﬁnition: When a property of a preﬁx (cid:8)(cid:9)(cid:10) implies the same
property for all of the subpreﬁxes of (cid:8)(cid:9)(cid:10) we say that the property
has subtree semantics. For the time being we will consider only
explicit delegations or assignments. But we will denote which del-
egations or assingments have subtree semantics.
For use below we present a more formal description of a simple
set of delegation and assignment options. More general options are
discussed subsequently.
For a given preﬁx (cid:12)(cid:9)(cid:14), an organization (cid:6) may perform one or
more of the following assignments or delegations:
(cid:3)Note that in this notation, (cid:15)(cid:9)(cid:7) is a set consisting of the single
address (cid:15).
(cid:4)This partial order is actually an upward lattice since for any two
preﬁxes there exits a preﬁx greater than or equal to both. This is
easily extended to a complete lattice by adding the empty set of
addresses to the elements of the lattice.
(cid:5)Remove all partial orderings that can be inferred by transitivity
and represent each remaining superset relation by a directed edge.
This is the Hasse diagram of the partial order.
1. (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) , where  (cid:5) (cid:0)(cid:1) , i.e., (cid:6) assigns (cid:12)(cid:9)(cid:14) to an AS
number ;
2. (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:6) (cid:1), where (cid:6) (cid:1) (cid:5) , i.e., (cid:6) delegates (cid:12)(cid:9)(cid:14) to (cid:6) (cid:1);
3. (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:10), i.e., (cid:6) declares (cid:12)(cid:9)(cid:14) as RESERVED6;
(cid:6) may perform zero, one, or more of the above options. The set
of triples is (cid:6)’s delegation policy for (cid:12)(cid:9)(cid:14) ((cid:6)’s delegation policy
for (cid:12)(cid:9)(cid:14) may be the empty set). (cid:6) has a delegation policy for each
preﬁx in the preﬁx tree and this entire collection of policies is (cid:6)’s
delegation policy. Every organization in  has a delegation policy.
As discussed above, delegations, i.e., triples of the form (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:6)(cid:1),
have subtree semantics. For similar reasons, RESERVED declara-
tions have subtree semantics as well. Henceforth we will assume
without loss of generality that if (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:6) (cid:1) or (cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:10) is in
(cid:6)’s delegation policy then (cid:6)(cid:3) (cid:8)(cid:9)(cid:10)(cid:3) (cid:6)(cid:1) or (cid:6)(cid:3) (cid:8)(cid:9)(cid:10)(cid:3) (cid:10), respec-
tively, is not in (cid:6)’s policy where (cid:8)(cid:9)(cid:10) is any proper subpreﬁx of
(cid:12)(cid:9)(cid:14).
Consider now assignments of preﬁxes to AS numbers. Such as-
signments do not have subtree semantics. To see this, consider the
following example in which (cid:6) has been explicitly delegated the
preﬁx (cid:8)(cid:9)(cid:10) (and, hence, implicitly all of its subpreﬁxes). And for
simplicity assume that (cid:6) does not further delegate any of these pre-
ﬁxes to another organization. (cid:6) may assign (cid:8)(cid:9)(cid:10) to one of its AS
numbers, say (cid:0). For many of the subpreﬁxes of (cid:8)(cid:9)(cid:10), (cid:6) may never
make an origin announcement and thus (cid:6)’s delegation policy for
those preﬁxes is the null set. Moreover, (cid:6) may assign a sub preﬁx
of (cid:8)(cid:9)(cid:10), say (cid:12)(cid:9)(cid:14), to another of its AS numbers, say (cid:1). To complete
the example, suppose that all of (cid:6)’s delegation policies for proper
subpreﬁxes of (cid:12)(cid:9)(cid:14) are null. The semantics of the longest preﬁx
match encoding for routing tables means that the IP addresses in
(cid:12)(cid:9)(cid:14) will be routed to AS number (cid:1) while the IP addresses in
(cid:8)(cid:9)(cid:10) but not (cid:12)(cid:9)(cid:14) will be routed to AS number (cid:0). Note that ori-
gin authentication cannot defend against the attack that drops the
(cid:6)(cid:3) (cid:12)(cid:9)(cid:14)(cid:3) (cid:1) origin announcement. The result of such an attack is
that IP addresses in (cid:12)(cid:9)(cid:14) get routed to AS (cid:0) rather than AS (cid:1).
Such attacks are inherent to the longest preﬁx match heuristic.