title:Design and implementation of an "approximate" communication system
for wireless media applications
author:Sayandeep Sen and
Syed Gilani and
Shreesha Srinath and
Stephen Schmitt and
Suman Banerjee
Design and Implementation of an “Approximate”
Communication System for Wireless Media Applications
Sayandeep Sen#, Syed Gilani$, Shreesha Srinath$, Stephen Schmitt$ and Suman Banerjee#
{sdsen,suman}@cs.wisc.edu#, {gilani,ssrinath,sschmitt1}@wisc.edu$
University of Wisconsin-Madison
ABSTRACT
All practical wireless communication systems are prone to errors.
At the symbol level such wireless errors have a well-deﬁned struc-
ture: when a receiver decodes a symbol erroneously, it is more
likely that the decoded symbol is a good “approximation” of the
transmitted symbol than a randomly chosen symbol among all pos-
sible transmitted symbols. Based on this property, we deﬁne ap-
proximate communication, a method that exploits this error struc-
ture to natively provide unequal error protection to data bits. Un-
like traditional (FEC-based) mechanisms of unequal error protec-
tion that consumes additional network and spectrum resources to
encode redundant data, the approximate communication technique
achieves this property at the PHY layer without consuming any
additional network or spectrum resources (apart from a minimal
signaling overhead) . Approximate communication is particularly
useful to media delivery applications that can beneﬁt signiﬁcantly
from unequal error protection of data bits. We show the usefulness
of this method to such applications by designing and implement-
ing an end-to-end media delivery system, called Apex. Our Soft-
ware Deﬁned Radio (SDR)-based experiments reveal that Apex can
improve video quality by 5 to 20 dB (PSNR) across a diverse set
of wireless conditions, when compared to traditional approaches.
We believe that mechanisms such as Apex can be a cornerstone in
designing future wireless media delivery systems under any error-
prone channel condition.
Categories and Subject Descriptors
C.2.1 [Computer Communication Networks]: Network Archi-
tecture and Design—Wireless Communication
General Terms
Algorithms, Design, Experimentation, Measurement, Performance
Keywords
Cross layer, Media Delivery, Wireless PHY
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
Copyright 2010 ACM 978-1-4503-0201-2/10/08 ...$10.00.
1.
INTRODUCTION
Any communication system, whether wired or wireless, is im-
pacted by errors. Typically, a transmitter encodes application data
in a frame as a set of symbols, where each symbol encodes one or
more data bits. When errors happen, one or more of these symbols
are incorrectly decoded at the receiver, leading to loss in perfor-
mance.
Conventional design of networked systems have assumed that
communication channels are error-prone and handle them in vari-
ous ways. Often a checksum ﬁeld is added to each data unit. A
receiver veriﬁes the received checksum against the expected check-
sum for the data bits to validate correct reception. Higher layers
deal with these errors in different ways.
At the MAC layer, some protocols (such as 802.11) typically
discard packets received with checksum errors. A newer class of
MAC-PHY mechanisms attempt to recover correct bits from pack-
ets with partial errors. Examples include partial packet recovery
(PPR) [18], SOFT [36], ZipTx [21], and Maranello [13]. Similarly,
at the transport layer TCP would re-transmit erroneous or lost seg-
ments. UDP simply discards them silently. UDP-lite delivers er-
roneous packets to applications, and allows applications to recover
correct portions of these packets using partial checksums.
In all the above techniques, it is the job of the receiver to de-
termine and discard erroneous bits within a packet, and the trans-
mitter has no a-priori knowledge of which bits (or bit positions)
are likely to be in error. In this paper, we demonstrate an alternate
possibility — At the PHY layer, there is a systematic structure to
wireless errors, and a wireless transmitter can leverage this struc-
ture to ensure that certain bit positions are less likely to be in error
than other bit positions. If the transmitter is aware of relative im-
portance of data bits, it can place more important data bits in more
protected positions and the less important data bits in less impor-
tant positions. In other words, a transmitter can ensure an unequal
error protection (UEP) of its data by simply placing data bits in
speciﬁc bit positions. Thus, unlike prior approaches of UEP that
explicitly need to add redundant bits to higher priority data [24, 35,
15], this proposed approach would not require any redundant data
bits to be transmitted to achieve UEP, and is available natively from
the wireless channel (apart from minimal signaling overhead).
Further, adaptation of the relative degree of UEP available to
different bit-positions can be done based on application needs and
ambient channel condition.
The relevant error structure across the wireless channel is a con-
sequence of the following phenomenon: When a wireless symbol
is decoded in error, this erroneous symbol is still a good “approx-
imation” of the original transmitted symbol. (We will make this
notion more precise in the next section.) Based on this approxi-
mation property, we design a wireless communication method to
15provide UEP that we call, approximate communication. Approxi-
mate communication can provide signiﬁcant performance gains to
all applications in which different data bits have different levels of
priority, e.g., the I-, P-, and B-frame structure in MPEG-4-AVC [3]
encoded video. In particular, we design and implement a speciﬁc
approximate communication system called Apex (an Approximate
communication system for media exchange) that combines knowl-
edge of relative bit priorities of the application with the structure of
wireless errors and client feedback on channel conditions to achieve
improved performance for media applications.
Apex requires a few, albeit marginal, modiﬁcations to the radio
transmit-receive paths. These modiﬁcations include a few addi-
tional buffers, multiplexers, and a little amount of additional ad-
dressing logic. The latencies due to such additional data process-
ing is negligible. Through detailed experiments on the WARP SDR
platform [6] under various interference and multi-path scenarios,
we demonstrate how Apex can improve the quality of video deliv-
ered over a wireless link, using a mechanism that is complementary
to existing approaches.
Key contributions: We summarize the above discussion by iden-
tifying the main contributions of our work:
(cid:129) Apex, an approximate communication system to improve ap-
plications: We show that wireless errors have a well-deﬁned
structure at the PHY layer. This structure allows the wireless
PHY layer to natively provide UEP to data bits, which form
the foundation of approximate communication.
Further, we show that by suitably adapting system parame-
ters, based on current channel conditions and application re-
quirements Apex signiﬁcantly improves performance of ap-
plications that prioritize different data bits differently.
(cid:129) Design of modiﬁcations to transmit-receive paths of an 802.11
radio to support approximate communication in Apex: Apex
requires minor modiﬁcations to the transmit-receive paths
of a wireless radio. We describe how the transmit-receive
chains of present day 802.11 hardware should be modiﬁed
to implement approximate communication. We demonstrate
such modiﬁcations can co-exist with other complementary
mechanisms implemented in the lower layers, such as a scram-
bler system, convolution coding, data interleaving, data mod-
ulation, and PHY transmission rate selection.
(cid:129) Implementation of the Apex-based video delivery system: We
demonstrate that Apex can be practically implemented by
building a prototype system using the WARP Software De-
ﬁned Radio (SDR) hardware and running H.264 video streams
through them over the air.
(cid:129) Experimentation over range of scenarios: We show that Apex
can, indeed, provide signiﬁcant performance gains for media
applications over a range of wireless communication scenar-
ios. In different experiments, we varied the transmit power
levels, the position of nodes, and the degree of external inter-
ference to demonstrate the robustness of our schemes. Over
various experiment scenarios, it provided a video quality im-
provement of 5-20 dB(measured in terms of PSNR).
The fact that wireless symbol errors of popular modulation schemes
have a speciﬁc error structure has both been analytically studied by
researchers [23, 2, 38, 8] and experimentally demonstrated [30].
However, many popular wireless communication standards, e.g.,
IEEE 802.11, consider such a structure to be a nuisance. In fact,
standards such as IEEE 802.11 typically employ a set of random-
ization and data protection mechanisms, (convolution coding, data
Data bits
010 011 111 101
Received bits
011 011 111 110
Original
image
Tx symbols
Rx symbols
Received
image
Figure 1: High level overview of wireless communication.
(Some MAC layer operations, e.g., coding, scrambling, and in-
terleaving are not shown.)
scrambling, and data interleaving) to ensure that all application bits
are equally likely to be in error. These data randomization mecha-
nisms have a number of other advantages. Hence, their wide adop-
tion and speciﬁc placement in the protocol stack ensured that op-
portunities of natively providing UEP on the wireless channel was
lost.
In this work we explain how the wireless symbol error structure
can be leveraged to implement UEP in approximate communica-
tion (Sections 2 ), how it can be practically implemented in Apex
(Section 3) to co-exist with the popular data randomization and pro-
tection techniques (convolution coding, data scrambling, and data
interleaving) and how relevant parameters like modulation scheme
and constellation mappings can be dynamically adapted (Section 3)
to improve the quality of media delivered.
We believe that approximate communication can offer a useful
design alternative for wireless media delivery systems and facilitate
greater interaction between characteristics observable at the PHY
layer and expectations of the applications.
2.
INTUITION AND APPROACH FOR AP-
PROXIMATE COMMUNICATION
Figure 1 shows a high level (and somewhat simpliﬁed) schematic
of data transfer across a wireless link as it happens for common
technologies today. Let us assume that the content is encoded into
a data bit sequence using a popular format, e.g., MPEG-4 [3]. Af-
ter packetization, the transmitter of the wireless link maps these
bits into symbols for transmission across the wireless channel. In
our example, each symbol represents a set of three data bits. The
receiver attempts to infer the transmitted symbols, but sometimes
makes decoding errors. Hence, when the received symbols are
mapped back into a bit sequence, bit errors might result (erroneous
bits and symbols are shaded). An important thing to note is that
when a symbol error occurs, not all its constituent bits are actu-
ally in error.
Symbol errors in common wireless technologies,
e.g., those based on the popular I/Q modulation schemes, have a
very well deﬁned structure. When a receiver decodes a symbol
erroneously, it is more likely that the decoded symbol is a good
“approximation” of the transmitted symbol, than a randomly cho-
sen symbol among all possible symbols. In this section, we explain
this phenomenon through an example based on Quadrature Ampli-
tude Modulation (QAM) 1.
In QAM, data elements are encoded into amplitude values of
two sinusoidal waves that are 90 degrees out-of-phase with each
other. A QAM modulation scheme is usually represented by a I/Q
constellation diagram, as shown in Figure 2. Each constellation
point (or symbol) is mapped to the amplitude of the in-phased and
the quadrature-phased signals, and corresponds to a certain bit se-
quence to be transmitted. In a 256-QAM scheme (shown in Fig-
1Some of the different mechanisms manipulated in the paper might
appear similar in meaning. Hence, for the sake of clarity, we deﬁne
the use of our terms and their meaning in Table 1.
16Term
Modulation scheme
Constellation map
Data bit
placement
Meaning / Examples
16-QAM, 64-QAM, etc.
Mapping from bit-sequence
to symbols (Gray, Block, etc.)
Mapping of data bits to
bit positions in symbols
Table 1: Table summarizing some terminology used for differ-
ent mechanisms used in the paper.
D E
A B
C
X
l
)
e
a
c
s
g
o
l
n
i
(
y
t
i
l
i
b
a
b
o
r
p
r
o
r
r
E
10-2
10-3
with interference
without interference
10-4
10-5
10-6
 1  1.5  2  2.5  3  3.5  4
Euclidean distance
(a) 256 QAM
(b) 64 QAM
(c) 16 QAM
Figure 2: Quadrature Amplitude Modulation (QAM) constel-
lations.
ure 2(a)), there are 256 distinct symbols. Each such symbol en-
codes a 8-bit sequence of data to be transmitted. In contrast, in a
64-QAM scheme, there are 64 distinct symbols, and each symbol
encodes a 6-bit data sequence (Figure 2(b)). When a transmitter
wants to communicate a speciﬁc bit-sequence, it emits the corre-
sponding symbol. The goal of the receiver is to identify which
symbol was sent.
Let us consider the case of a transmitter-receiver pair using 64-
QAM and the transmitter emits a symbol, say C (Figure 2(b)).
Depending on the conditions of the channel, there is a reasonable
chance that the receiver will correctly decode this symbol. How-
ever, there is also some possibility for the receiver to make an error
in decoding this symbol. It turns out that if an error does occur,
such errors are most likely conﬁned to the near neighborhood of
the transmitted symbol C, i.e., the receiver is more likely to de-
code this symbol to be one of A, B, D, or E, which are the nearest
neighbors of C (indicated by the inner circle of Figure 2(b)), as
compared to a far away symbol, X. In other words, within the 2-
dimensional I/Q space, an erroneously decoded symbol tends to be
a reasonable approximation of the transmitted symbol.
As noise in the environment increases, the likelihood of making
incorrect decoding decisions to “faraway” symbols can increase to
some extent (as indicated by the larger circle in Figure 2(b)). How-
ever, likelihood of making errors within close proximity also in-
creases, and continues to signiﬁcantly dominate such faraway er-
rors. We illustrate this behavior in Figure 3 in which 10 million
64-QAM symbols were transmitted between a transmitter-receiver
pair under two different conditions, ambient noise, and explicitly
generated interference in the background. The Y-axis represents
the probability that the transmitted symbol is decoded erroneously
to be another symbol at a distance given in the X-axis. The loga-
rithmic scale of the Y-axis demonstrates the dramatic decay in this
probability with increasing distance between the transmitted and
decoded symbols.
Further, if the noise conditions continue to increase in this man-
ner, a reasonable communication system will adjust to a lower rate
modulation scheme, such as 16-QAM (Figure 2(b)), which sepa-
rates constellation points further apart. This allows the system to
revert back to the original scenario where erroneous symbols are
mostly the nearest neighbors of the transmitted symbol.
Figure 3: Fast decay in probability of erroneous decoding as
the distance between the correct symbol and the erroneously
decoded symbol increases. Data based on 10 million known 64-
QAM symbols transmitted. In the ambient noise scenario, the
overall BER was 3× 10
−4. In the explicit interference scenario,
the overall BER was 6 × 10
2.1 UEP and approximate communication
−3.
The wireless error structure demonstrated in Figure 3 leads to a
construction of UEP for data bits. This is achieved by appropriately
choosing a constellation map, i.e., the map between bit-sequences
and symbols in a constellation diagram.
For the sake of simplicity, let us assume that when symbol errors
occur, the erroneous symbol is just one unit away from the actual
transmitted symbol. In the 64-QAM example in Figure 2(b), this
assumption implies that when C is transmitted, a decoding error
would result in the received symbol to be one among A, B, D, and
E.
Now imagine if a constellation map was to map bit-sequences