    for place in orderList[::-1]:
    if place in parameters:
    parameters.remove(place)
    parameters.insert(0, place)
    参数分级检查for place in parameters:
    # Test User-Agent and Referer headers only if
    # --level >= 3
    skip = (place == PLACE.USER_AGENT and conf.level = 5
    skip |= (place == PLACE.HOST and conf.level = 2
    skip |= (place == PLACE.COOKIE and conf.level  1.:
        ratio = 1. / ratio
接下来我们再顺着他的逻辑往下走：
根据上面对源码的标注，我们很容易理解这个 `ratio` 是怎么算出来的，同样我们也很清楚，其实并不只是简单无脑的使用 `ratio`
就可以起到很好的效果，配合各种各样的选项或者预处理：比如移除页面的动态内容，只比较 `title`，只比较文本，不比较 `html` 标签。
上面源码为最终使用 `ratio` 对页面的相似度作出判断的逻辑，其中
    UPPER_RATIO_BOUND = 0.98
    LOWER_RATIO_BOUND = 0.02
    DIFF_TOLERANCE = 0.05
## 0x05 结束语
阅读完本文，我相信读者对 sqlmap 中处理各种问题的细节都会有自己的理解，当然这是最好的。
在下一篇文章，笔者将会带大家进入更深层的 sqlmap 的逻辑，敬请期待。