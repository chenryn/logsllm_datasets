User: I would like to build something like this
Datastore | mycode.py | RESTful API | mywebapp.py(Django or Tornado)
I checked Piston for Django but it seems that this way I am going to be tied to Django, I would rather have a RESTful API for mycode.py that is consumable by more than one REST client and also can consume it from a REST client api inside my django app.
I checked stuff like Apache CFX, ApacheMQ, RabbitMQ, etc. with no real luck. 
Any thoughts? thnx
Assistant: Hmm, if you're into Python and open to a Java element, you might want to consider using the Java framework Restlet with Python code running in Jython. I'm a big fan of Restlet; its API embodies RESTful principles, so it encourages one to structure one's code and thinking according to those principles. It's also just a really high-quality, easy to use, well supported, and lightweight -- it's a framework, but in practice it can feel like a library.
If you want to stick with pure Python, then I haven't been able to find any libraries or frameworks which directly embrace and encourage RESTful principles. However, there are some very good WSGI microframeworks which make it easy to implement RESTful applications -- you just need to devise your own approach to structuring your code -- not too big a deal. In particular I'd recommend Bottle and web.py, both of which can be used with more or less finagling with the excellent mimerender library for solid content negotiation.