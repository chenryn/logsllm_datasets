# Second Workshop on Compiler and Architectural Techniques for Application Reliability and Security (CATARS)

## Authors
- Karthik Pattabiraman, Microsoft Research, One Microsoft Way, Redmond, WA 98052, USA. Email: [karthikp@microsoft.com](mailto:karthikp@microsoft.com)
- Zbigniew Kalbarczyk, University of Illinois at Urbana-Champaign, 1308 W Main St, Urbana, IL 61801, USA. Email: [kalbar@illinois.edu](mailto:kalbar@illinois.edu)

## Abstract
The second workshop on Compiler and Architectural Techniques for Application Reliability and Security (CATARS) aims to convene compiler designers, computer architects, dependability researchers, and practitioners. The goal is to provide a platform for research on application dependability using techniques from compilers and computer architecture. Despite the growing interest in dependability-centric compiler and architecture research, there has been no unified forum for researchers in these areas to publish their work. CATARS aims to fill this gap.

## 1. Themes, Goals, and Objectives

As computer systems become increasingly complex, ensuring their reliable and secure operation becomes more challenging, especially at the application level. Manual addition of fault and attack tolerance is error-prone and can overlook critical reliability loopholes and security vulnerabilities, leading to significant failures and attacks. Compiler and architectural techniques can automate the detection and recovery from errors and attacks in applications.

### Goals
- Provide a common platform for researchers in the dependability community to interact with compiler technologists and computer architects.
- Emphasize the importance of designing for reliability and security in the computer architecture and compiler communities, where traditionally the focus has been on performance enhancement.

### Objectives
1. **Leverage Advances**: Discuss how the latest advances in computer architecture (e.g., multi-core platforms, reconfigurable computing) and compiler technology (e.g., dynamic code generation, proof-carrying code transformations) can improve application dependability.
2. **Benchmarking and Metrics**: Define benchmarks and metrics for evaluating compiler and architectural techniques. Ensure consistent, reproducible results and explore whether existing work in the dependability literature can be leveraged or if new metrics are needed.
3. **Impact on Design Methods**: Discuss how designing for reliability and security will impact methods used in the compiler and computer architecture communities. Explore whether dependability and performance enhancement are opposing constraints or if there are complementary goals.

## 2. List of Topics
The workshop is open to all researchers working on dependability and security, as well as on computer architecture and compilers. We solicited submissions on, but not limited to, the following topics:
- Automated generation of fault-tolerant and attack-tolerant programs
- Compile-time techniques for finding programming bugs and security violations
- Formal methods to verify reliability and security properties of applications
- Memory organization schemes for detection and recovery from errors
- Metrics for assessing applicationsâ€™ vulnerability to errors and security attacks
- Micro-architectural techniques for error/attack detection and containment
- Processor support for diagnosing and understanding failures and compromises
- Programming language support for building reliable and secure programs
- Reliability and security issues due to multi-core processors and their mitigation
- Reconfigurable hardware for providing reliability and security to applications
- Static derivation and runtime enforcement of application-specific invariants
- Static techniques to aid development of distributed, fault-tolerant programs
- Trusted computing base for architecting reliable and secure applications

## 3. Organizational Details

### 3.1 Submission Information
Regular contributions were 5-6 pages long and were refereed based on the novelty of the idea and technical content. Position papers and work-in-progress reports were also encouraged and reviewed based on the novelty of the idea and the ability to generate discussion. Each paper was reviewed by a minimum of three program committee members.

### 3.2 Workshop Format
The workshop will follow the same format as last year, consisting of a half-day series of presentations followed by a panel discussion. Each regular paper will be given 30 minutes for presentation, including discussions. The panel will feature experts in dependable and secure computing from both industry and academia, who will share their views on advancing the state of the art in dependable and secure computing.

## 4. Organizers
- **Program Co-Chairs**: Karthik Pattabiraman and Zbigniew Kalbarczyk
- **Program Committee**:
  - Shuo Chen, Microsoft Research, Redmond
  - Daniel Connors, University of Colorado, Boulder
  - Onur Mutlu, Carnegie Mellon University
  - Satish Narayanasamy, University of Michigan, Ann Arbor
  - Paul Racunas, Intel Corporation
  - Mohan Rajagopalan, Intel Corporation
  - Daniel Sorin, Duke University
  - Dongyan Xu, Purdue University

## 5. Conclusion and Closing Thoughts
The area of compiler and architectural support for application dependability has seen significant interest in recent years, with papers appearing in both computer architecture and programming language conferences. However, there has been no unified venue to publish work in this area. CATARS aims to provide such a venue and become a regular forum for discussing the latest ideas in dependability related to compilers and computer architecture.

The success of the workshop depends on community involvement and participation. We received an enthusiastic response for the previous CATARS workshop and have incorporated suggestions for improvement. We hope the second workshop receives even more support from the research community. We thank the conference organizers for the opportunity to offer this workshop at DSN 2009 and our colleagues in industry and academia for their support and encouragement.