#### Description
the result of kmeans.labels_ when n_jobs=1 is different from n_jobs > 1
#### Steps/Code to Reproduce
from sklearn.cluster import KMeans  
import numpy as np  
X = np.array([[1, 2], [1, 4], [1, 0],  
[4, 2], [4, 4], [4, 0]])  
kmeans = KMeans(n_clusters=2, random_state=0, n_jobs=1).fit(X)  
kmeans.labels_
> array([0, 0, 0, 1, 1, 1], dtype=int32)
kmeans = KMeans(n_clusters=2, random_state=0, n_jobs=2).fit(X)  
kmeans.labels_
> array([1, 0, 1, 0, 0, 1], dtype=int32)
#### Expected Results
array([0, 0, 0, 1, 1, 1], dtype=int32)
#### Actual Results
array([1, 0, 1, 0, 0, 1], dtype=int32)
#### Versions
> > > import platform; print(platform.platform())  
>  Darwin-16.6.0-x86_64-i386-64bit  
>  import sys; print("Python", sys.version)  
>  Python 3.6.1 |Continuum Analytics, Inc.| (default, May 11 2017, 13:04:09)  
>  [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]  
>  import numpy; print("NumPy", numpy. **version** )  
>  NumPy 1.13.0  
>  import scipy; print("SciPy", scipy. **version** )  
>  SciPy 0.19.1  
>  import sklearn; print("Scikit-Learn", sklearn. **version** )  
>  Scikit-Learn 0.19.dev0
I found the issues maybe because the radom_state for n_job= 1 is different
from n_jobs > 1.  
I have a proposal to solve this if you think this issue needs to be fixed.  
Thank you.