# Privacy-Preserving Multi-Keyword Text Search in the Cloud Supporting Similarity-Based Ranking

## Authors
- Wenhai Sun†, PI:EMAIL
- Bing Wang††, PI:EMAIL
- Ning Cao§, PI:EMAIL
- Ming Li‡, PI:EMAIL
- Wenjing Lou††, PI:EMAIL
- Y. Thomas Hou††, PI:EMAIL
- Hui Li†, PI:EMAIL

### Affiliations
- † The State Key Laboratory of Integrated Services Networks, Xidian University, China
- †† Virginia Polytechnic Institute and State University, USA
- § Worcester Polytechnic Institute, USA
- ‡ Utah State University, USA

## Abstract
With the increasing popularity of cloud computing, a vast amount of documents are being outsourced to the cloud for reduced management costs and ease of access. While encryption helps protect data confidentiality, it poses significant challenges for efficient and secure search functions over encrypted data. In this paper, we present a privacy-preserving multi-keyword text search (MTS) scheme with similarity-based ranking to address these challenges. To support multi-keyword search and result ranking, we propose building the search index based on term frequency and the vector space model with cosine similarity measures, ensuring high search accuracy. To enhance search efficiency, we introduce a tree-based index structure and various adaptations of the multi-dimensional (MD) algorithm, which significantly outperform linear search. Additionally, we propose two secure index schemes to meet stringent privacy requirements under strong threat models, such as the known ciphertext and known background models. Finally, we validate the effectiveness and efficiency of our proposed schemes through extensive experimental evaluation.

## Categories and Subject Descriptors
E.3 [Data Encryption]; H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval

## Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.

ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.

## Keywords
Cloud Computing; Privacy-Preserving Search; Multi-Keyword Search; Similarity-Based Ranking

## 1. Introduction
Cloud computing is a new paradigm in enterprise IT infrastructure, enabling ubiquitous, convenient, and on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services). This centralized management of elastic resources benefits all stakeholders, including cloud providers, application developers, and end-users. End-users can outsource large volumes of data and workloads to the cloud, enjoying virtually unlimited computing resources on a pay-per-use basis. Many companies, organizations, and individual users have adopted cloud platforms to facilitate their business operations, research, and everyday needs.

Despite its advantages, privacy concerns remain a significant barrier to widespread cloud adoption, especially when sensitive data are outsourced and processed in the cloud. Examples include financial and medical records, and social network profiles. Cloud service providers (CSPs) typically enforce data security through mechanisms like firewalls and virtualization. However, these do not protect user privacy from the CSP itself, as the CSP has full control over the system hardware and lower levels of the software stack. Disgruntled, profiteering, or curious employees may access sensitive information for unauthorized purposes. Although encrypting data before outsourcing can preserve privacy, it also makes effective data utilization, such as searching over encrypted data, a challenging task. Without secure and private data utilization, the cloud merely becomes a remote storage with limited value.

One fundamental form of data utilization is the search operation, which involves quickly sorting out relevant information from large datasets. The information retrieval community has developed state-of-the-art techniques for rich search functionalities, such as result ranking and multi-keyword queries, on plaintext. For example, cosine measure in the vector space model is widely used to evaluate the similarity between a document and a query, incorporating term frequency (TF) and inverse document frequency (IDF) weights to yield accurate ranked results. However, implementing these techniques securely over outsourced encrypted data in the cloud is non-trivial and susceptible to privacy breaches. Inverted index, a popular and efficient data structure in document retrieval systems, is not directly applicable in TF-based multi-keyword encrypted text search environments.

Searchable encryption (SE) techniques partially address the need for secure outsourced data search. Researchers have developed SE schemes based on public key cryptography (PKC) and symmetric key cryptography (SKC). PKC-based schemes allow more expressive queries but are less efficient. SKC-based schemes, while more efficient, often lack advanced functionalities. Curtmola et al. were the first to propose a symmetric SE scheme with rigorous security guarantees. Other works have targeted ranked search, but they only support single-keyword queries, which is too restrictive for practical use. Cao et al. attempted privacy-preserving multi-keyword ranked search over encrypted cloud data, but their approach has linear search complexity and uses a heuristic ranking function, leading to less accurate results compared to state-of-the-art multi-keyword search over plaintext.

In this paper, we address the challenges of constructing efficient and flexible encrypted search functionalities that support result ranking and multi-keyword queries. We propose building the search index based on the vector space model and cosine measure, incorporating TF × IDF weights for high search accuracy. To improve search efficiency, we introduce a tree-based index structure and an adapted MD-algorithm. Our basic scheme (BMTS) is secure under the known ciphertext model. To further enhance privacy, we propose an enhanced secure index scheme (EMTS) against sensitive frequency information leakage, meeting more stringent privacy requirements under the known background model. We demonstrate the effectiveness and efficiency of our proposed schemes through extensive experimental evaluation.

### Contributions
1. By integrating state-of-the-art information retrieval techniques, we propose a privacy-preserving multi-keyword text search scheme supporting similarity-based ranking, offering the same flexibility and search accuracy as existing state-of-the-art multi-keyword search over plaintext.
2. We introduce a randomization (phantom terms) approach in the enhanced scheme to prevent sensitive frequency information leakage, achieving better keyword privacy. We show that users can balance search precision and privacy.
3. EMTS, with improved security, remains comparable in search time to BMTS. We investigate various index building methods to speed up common search cases, demonstrating significantly improved search efficiency compared to previous work.

## 2. Problem Formulation

### 2.1 System Model
The system model consists of three entities: the data owner, the data user, and the cloud server, as illustrated in Figure 1. The data owner outsources a large collection of encrypted documents (DC) and an encrypted searchable index tree (I) to the cloud server. We assume the data user has mutual authentication capabilities with the data owner, allowing the use of search control mechanisms, such as broadcast encryption, to obtain the encrypted search query (Q̂). Upon receiving Q̂, the cloud server searches the index tree I and returns the corresponding set of encrypted documents, ranked by our frequency-based similarity measures. The data user may also specify a parameter k to receive only the top-k most relevant documents. Decryption of the received documents is a separate issue and is out of the scope of this paper.

### 2.2 Threat Model
We assume the data user is honest, but the cloud server acts in an "honest-but-curious" manner, following the protocol execution but attempting to analyze the available data and index tree. Two threat models are considered:

- **Known Ciphertext Model**: The cloud server has access to the encrypted document set C, searchable index tree I, and encrypted query vector Q̂. We aim to protect the plaintext query/index information and keep the dictionary T secret.
- **Known Background Model**: In this stronger model, the cloud server has additional knowledge, such as statistical information from a comparable dataset, enabling statistical attacks to deduce specific keywords in the query.

### 2.3 Design Goals
Our mechanism aims to achieve the following design goals:

- **Accuracy-Improved Multi-Keyword Ranked Search**: Support effective multi-keyword search functionality and achieve accuracy-improved similarity-based search result ranking using the vector space model.
- **Search Efficiency**: Use a tree-based index structure and an efficient search algorithm to improve practical search efficiency.
- **Privacy Goals**: Protect user privacy by preventing the cloud server from learning information about the document set, index tree, and queries. Specifically, we aim to ensure:
  - **Index Confidentiality**: Protect the underlying plaintext information in the encrypted index tree.
  - **Query Confidentiality**: Protect the plaintext information in the encrypted query.
  - **Query Unlinkability**: Prevent linking multiple encrypted queries to the same search request.
  - **Keyword Privacy**: Prevent the identification of specific keywords in the index tree, query, or document set.

### 2.4 Notations
- **DC**: The plaintext document collection, denoted as {d1, d2, ..., dm}.
- **C**: The encrypted form of DC stored in the cloud server, denoted as {c1, c2, ..., cm}.
- **T**: The dictionary, composed of n keywords, denoted as {t1, t2, ..., tn}.
- **T̄**: A subset of T, indicating the keywords in a search request.
- **I**: The h-level searchable index tree for the whole document set DC.
- **Ti**: A subset of T, constituting the ith level of I, i = 1, ..., h.
- **Dd**: The index vector of document d for all the keywords in T.
- **Q**: The query vector for the keyword set T̄.
- **D̂d**: The encrypted form of Dd.
- **Q̂**: The encrypted form of Q.

### 2.5 Preliminaries
**Vector Space Model**: Among many similarity measures in plaintext information retrieval, the vector space model is the most popular, supporting both conjunctive and disjunctive search. Document rankings are realized by comparing the cosine values between each document vector and the query vector. The cosine measure allows accurate rankings due to the TF × IDF rule, where TF denotes the occurrence count of a term within a document, and IDF is obtained by dividing the total number of documents by the number of documents containing the term. We adopt the similarity evaluation function for cosine measure from [30].

## 3. Framework and Methodology
### 3.1 Secure Index Tree
- **Search Request**: Encrypted documents and top-k ranked results.
- **Cloud Server**: Handles search requests and returns encrypted documents.
- **Data Owner**: Manages data and search control (encrypted queries).
- **Access Control**: Data decryption keys.
- **Data User**: Receives and decrypts the top-k ranked results.

### 3.2 Enhanced Secure Index Scheme (EMTS)
To further enhance privacy, we propose an enhanced secure index scheme (EMTS) that prevents sensitive frequency information leakage, meeting more stringent privacy requirements under the known background model.

### 3.3 Experimental Evaluation
We demonstrate the effectiveness and efficiency of our proposed schemes through extensive experimental evaluation, showing significant improvements in search efficiency and accuracy compared to previous work.

## 4. Conclusion
In this paper, we have presented a privacy-preserving multi-keyword text search scheme with similarity-based ranking, addressing the challenges of secure and efficient search over encrypted data in the cloud. Our approach leverages the vector space model and a tree-based index structure, providing high search accuracy and efficiency. We have also introduced an enhanced secure index scheme to meet stringent privacy requirements. Extensive experimental evaluation validates the effectiveness and efficiency of our proposed schemes.

## References
[References to be included here]

---

This revised version is more structured, clear, and professional, with improved readability and coherence.