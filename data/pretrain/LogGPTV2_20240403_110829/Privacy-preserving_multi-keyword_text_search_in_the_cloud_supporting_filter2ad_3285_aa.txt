title:Privacy-preserving multi-keyword text search in the cloud supporting
similarity-based ranking
author:Wenhai Sun and
Bing Wang and
Ning Cao and
Ming Li and
Wenjing Lou and
Y. Thomas Hou and
Hui Li
Privacy-preserving Multi-keyword Text Search in the Cloud
Supporting Similarity-based Ranking
Wenhai Sun†,††
PI:EMAIL
Bing Wang††
PI:EMAIL
Ning Cao§
PI:EMAIL
Ming Li‡
PI:EMAIL
Wenjing Lou††
PI:EMAIL
Y. Thomas Hou††
PI:EMAIL
Hui Li†
PI:EMAIL
†The State Key Laboratory of Integrated Services Networks, Xidian University, China
††Virginia Polytechnic Institute and State University, USA
§Worcester Polytechnic Institute, USA
‡Utah State University, USA
ABSTRACT
With the increasing popularity of cloud computing, huge
amount of documents are outsourced to the cloud for re-
duced management cost and ease of access. Although en-
cryption helps protecting user data conﬁdentiality, it leaves
the well-functioning yet practically-eﬃcient secure search
functions over encrypted data a challenging problem.
In
this paper, we present a privacy-preserving multi-keyword
text search (MTS) scheme with similarity-based ranking to
address this problem. To support multi-keyword search and
search result ranking, we propose to build the search in-
dex based on term frequency and the vector space model
with cosine similarity measure to achieve higher search re-
sult accuracy. To improve the search eﬃciency, we propose
a tree-based index structure and various adaption methods
for multi-dimensional (MD) algorithm so that the practical
search eﬃciency is much better than that of linear search. To
further enhance the search privacy, we propose two secure
index schemes to meet the stringent privacy requirements
under strong threat models, i.e., known ciphertext model
and known background model. Finally, we demonstrate the
eﬀectiveness and eﬃciency of the proposed schemes through
extensive experimental evaluation.
Categories and Subject Descriptors
E.3 [Data Encryption]; H.3.3 [Information Storage and
Retrieval]: Information Search and Retrieval
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.
Keywords
Cloud Computing; Privacy-preserving Search; Multi-keyword
Search; Similarity-based Ranking
1.
INTRODUCTION
Cloud computing is a new model of enterprise IT infras-
tructure that enables ubiquitous, convenient, and on-demand
network access to a shared pool of conﬁgurable computing
resources (e.g., networks, servers, storage, applications, and
services) [8]. Due to the centralized management of elastic
resources, all players in this emerging X-as-a-service (XaaS)
model, including the cloud provider, application developers,
and end-users, can reap beneﬁts. Especially, for the end-
users, they can outsource large volumes of data and work-
loads to the cloud and enjoy the virtually unlimited com-
puting resources in a pay-per-use manner.
Indeed, many
companies, organizations, and individual users have adopt-
ed the cloud platform to facilitate their business operations,
research, or everyday needs [24].
Despite the tremendous business and technical advantages,
privacy concern is one of the primary hurdles that prevents
the widespread adoption of the cloud by potential users, e-
specially if their sensitive data are to be outsourced to and
computed in the cloud. Examples may include ﬁnancial and
medical records, and social network proﬁles. Cloud ser-
vice providers (CSPs) usually enforce users’ data security
through mechanisms like ﬁrewalls and virtualization. How-
ever, these mechanisms do not protect users’ privacy from
the CSP itself since the CSP possesses full control of the
system hardware and lower levels of software stack. There
may exist disgruntled, proﬁteered, or curious employees that
can access users’ sensitive information for unauthorized pur-
poses [14, 26]. Although encryption before data outsourc-
ing [15, 33] can preserve data privacy against the CSP, it
also makes the eﬀective data utilization, such as search over
encrypted data, a very challenging task. Without being able
to extract useful information from the outsourced data in a
71secure and private manner, the cloud will merely be a remote
storage which provides limited value to all parties.
One fundamental and common form of data utilization
is the search operation, i.e., to quickly sort out informa-
tion of interest from huge amount of data. The informa-
tion retrieval community has the state-of-the-art techniques
that are readily available to achieve rich search function-
alities, such as result ranking and multi-keyword queries,
on plaintext. For example, cosine measure in the vector s-
pace model [30] is a state-of-the-art similarity measure wide-
ly used in plaintext information retrieval community, which
incorporates the “term frequency (TF) × inverse documen-
t frequency (IDF)” weight to evaluate the similarity be-
tween a document and a particular query, and yield accurate
ranked search result. However, implementing a secure ver-
sion of such techniques over outsourced encrypted data in
the cloud is not straightforward, and is susceptible to pri-
vacy breach [29]. Although inverted index (a.k.a.
inverted
ﬁle) is the most popular and eﬃcient index data structure
used in document retrieval systems, it is not directly ap-
plicable in TF-based multi-keyword encrypted text search
environment [28, 29, 34].
In the literature, searchable encryption (SE) techniques
can partially address the need for secure outsourced da-
ta search. Many researchers have developed SE schemes
that allow searches over encrypted keyword indexes, either
based on public key cryptography (PKC) [3,4,12,13] or sym-
metric key cryptography (SKC) [6, 10, 11, 16, 27]. In gener-
al, although the PKC-based schemes allow more expressive
queries than SKC-based ones, they are much less eﬃcient.
Thus, there has been signiﬁcant interest in developing ef-
ﬁcient SKC-based SE mechanisms. Curtmola et al. were
the ﬁrst to propose a symmetric SE scheme with securi-
ty guarantees under rigorous deﬁnitions [10]. Other work-
s [28, 29, 34] targeted on providing ranked search. These
schemes only support single-keyword queries which is too
restrictive for practical use. To enrich search functionality,
Cao et al. [5] attempted privacy-preserving multi-keyword
ranked search over encrypted cloud data. Nevertheless, the
search complexity is linear to the number of documents in
the dataset, which becomes undesirable and ineﬃcient when
a huge amount of documents are present. In addition, the
heuristic ranking function, i.e., “coordinate matching”, failed
to yield more accurate search result, compared to the state-
of-the-art multi-keyword search over plaintext. Thus, the
quest for secure data search mechanisms that can simulta-
neously achieve high eﬃciency and functionality (such as
expressive/usable queries) still remains open up to date.
In this paper, we address the challenges of constructing
practically eﬃcient and ﬂexible encrypted search functional-
ities that support result ranking and multi-keyword queries.
In particular, to support multi-keyword queries and search
result ranking functionalities, we propose to build the search
index based on the vector space model , i.e., cosine mea-
sure, and incorporate the TF × IDF weight to achieve high
search result accuracy. To improve the search eﬃciency, we
propose a tree-based index structure, where each value in
a node is a vector of term frequency related information.
We then apply the search algorithm, adapted from the MD-
algorithm [19], so as to realize eﬃcient search functionali-
ty. Our basic scheme for multi-keyword text search with
similarity-based ranking (BMTS) is secure under the known
ciphertext model.
In order to further enhance the search
...
Secure index tree
Search request
Encrypted documents
Top k ranked result
Cloud server
Data owner
Search control (encrypted queries)
Access control (data decryption keys)
Data user
Figure 1: Framework of the search over outsourced
encrypted cloud data
privacy, we propose another enhanced secure index scheme
(EMTS) against sensitive frequency information leakage to
meet more stringent privacy requirements under a stronger
threat model, i.e., known background model. Finally, we
demonstrate the eﬀectiveness and eﬃciency of the proposed
schemes through extensive experimental evaluation.
Our contributions are summarized as follows:
1. By incorporating the state-of-the-art information re-
trieval techniques, we propose a privacy-preserving multi-
keyword text search scheme supporting similarity-based
ranking, which enjoys the same ﬂexibility and search
result accuracy as the existing state-of-the-art multi-
keyword search over plaintext.
2. We propose a randomization (phantom terms) approach
in the enhanced scheme to prevent sensitive frequency
information leakage thus achieving better privacy of
keywords. We show that with the proposed methods,
user can balance between search precision and privacy.
3. With improved security guarantee, EMTS is still com-
parable in search time to BMTS. In addition, we in-
vestigated various index building methods to speed up
the search of common cases. The results demonstrate
much improved search eﬃciency compared with [5].
2. PROBLEM FORMULATION
2.1 System Model
The system model considered in this paper consists of
three entities: the data owner, the data user, and the cloud
server, as illustrated in Fig. 1. The data owner outsources
a huge size of document collection DC in the encrypted for-
m C, together with an encrypted searchable index tree I
generated from DC, to the cloud server. We assume that
the data user has the mutual authentication capability with
the data owner. As such, search control mechanisms can be
applied here, e.g., broadcast encryption [10], through which
the data user obtains the encrypted search query (cid:2)Q. Upon
the receipt of (cid:2)Q, the cloud server starts searching the index
tree I and will return the corresponding set of encrypted
documents, which have been well-ranked by our frequency
based similarity measures (as will be introduced shortly).
72An additional feature is that the data user may not want to
receive all the relevant documents. Instead, the data user
may send a search parameter k along with the search query
(cid:2)Q such that the cloud server only returns the top-k most
relevant documents. The capability of the user to decrypt
the received documents [15,33] is a separate issue and is out
of the scope of this paper.
2.2 Threat Model
We assume that the data user is honest but that the cloud
server acts in an “honest-but-curious” manner, which is al-
so employed by related works on secure cloud data search
[5, 29].
In other words, the cloud server honestly follows
the protocol execution, but curiosity propels him/her to the
speculation and analysis over the data and searchable in-
dex tree available at the server. Depending on the available
information to the cloud server, two threat models are con-
sidered here.
Known Ciphertext Model: Only the encrypted docu-
ment set C, searchable index tree I and encrypted query
vector (cid:2)Q, all of which are outsourced from the data owner,
are available to the cloud server. Speciﬁcally, we intend to
protect the plaintext query/index information against the
cloud server and keep the dictionary T as secret that was
used to build the searchable index tree I.
Known Background Model: In this stronger model, the
cloud server is equipped with more knowledge than what can
be accessed in the known ciphertext model. In particular,
the attacker may extract the statistical information from a
known comparable dataset which bears the similar nature to
the targeting dataset, e.g., the TF distribution information
of a speciﬁc keyword. Given such statistical information,
the cloud server is able to launch statistical attack to de-
duce/identify speciﬁc keywords in the query [28, 29, 34].
2.3 Design Goals
To enable eﬀective, eﬃcient and secure multi-keyword ranked
search over encrypted cloud data under the aforementioned
models, our mechanism is aiming to achieve the following
design goals.
Accuracy-improved Multi-keyword Ranked Search:
To design an encrypted cloud data search scheme which not
only supports the eﬀective multi-keyword search functionali-
ty, but also, by adoption of the vector space model, achieves
the accuracy-improved similarity-based search result rank-
ing.
Search Eﬃciency: Instead of linear search [5], we explore a
tree-based index structure and an eﬃcient search algorithm
to achieve better practical search eﬃciency.
Privacy Goals: The general goal is to protect user privacy
by preventing the cloud server from learning information of
the document set, the index tree, and the queries. In par-
ticular, search privacy requirements that we are concerned
with are 1) Index Conﬁdentiality: the underlying plaintex-
t information pertaining to the encrypted index tree, e.g.,
keywords and TF of keywords; 2) Query Conﬁdentiality:
the plaintext information regarding the encrypted query,
e.g., keywords in the query and document frequency (DF)
of these keywords; 3) Query Unlinkability: whether two or
more encrypted queries are from the same search request; 4)
Keyword Privacy: the identiﬁcation of speciﬁc keyword in
the index tree, in the query or in the document set. Note
Level 1
0.0
0.5
1.0
0.3
1.0
0.9
0.0
0.4
0.7
Level 2
Level 3
0.4
0.5
C
A
B
0.5
D
1.0
E
0.0
0.7
H
F
G
0.7
I
0.4
0.6
J
K
Figure 2: Illustration of the MD-algorithm on the
MDB-tree
that protecting access pattern, i.e., the sequence of returned
documents, is extremely expensive since the algorithm has
to “touch” the whole document set [7]. We do not aim to
protect it in this work for eﬃciency concerns.
2.4 Notations
For the sake of clarity, we introduce the main notations
used in this paper.
set of m documents DC = {d|d1, d2, . . . , dm}.
denoted as C = {c|c1, c2, . . . , cm}.
as T = {t|t1, t2, . . . , tn}.
• DC – the plaintext document collection, denoted as a
• C – the encrypted form of DC stored in the cloud server,
• T – the dictionary, composed of n keywords, denoted
• ¯T – a subset of T , indicating the keywords in a search
request.
• I – the h-level searchable index tree for the whole
document set DC. Each level corresponds to an exclu-
sive subset of keywords. Documents ci’s are associated
with the leaf nodes.
• Ti – a subset of T , which constitutes the ith level of I,
i = 1, . . . , h.
• Dd – the index vector of document d for all the key-
words in T .
• Q – the query vector for the keyword set ¯T .
• (cid:3)Dd – the encrypted form of Dd.
• (cid:2)Q – the encrypted form of Q.
2.5 Preliminaries
Vector Space Model: Among many similarity measures
in plaintext information retrieval, vector space model [30] is
the most popular one, supporting both conjunctive search
and disjunctive search. Speciﬁcally, document rankings are
realized by comparing the deviation of angles, i.e., cosine
values, between each document vector and the query vec-
tor. The cosine measure allows accurate rankings due to the
“TF×IDF rule”, where TF denotes the occurrence count of
a term within a document (it is used to measure how impor-
tant a speciﬁc term is to a particular document), and IDF
is obtained by dividing the total number of documents in
the collection by the number of documents containing the
term (it implies that this frequency of a term tends to be
inversely proportional to its ranking). We adopt the similar-
ity evaluation function for cosine measure from [30], where
73D1
Dd
Dm
GenIndex
Dd,1
GenIndex
...
...
GenIndex
Dd,2
...
Dd,h
Tree-based 
search algorithm