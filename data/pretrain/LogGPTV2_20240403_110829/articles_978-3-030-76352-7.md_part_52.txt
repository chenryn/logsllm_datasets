thiswork,wefocusonplatformsandprocessesforcrowdsourcedsecurity
vulnerabilitydiscovery(bugbountyprograms)andpresentaframework
fortherepresentationofsecurityprofessionalskills.Morespecifically,we
propose an embedding-based clustering approach that exploits multiple
and rich information available across the web (e.g. job postings, vulner-
abilitydiscoveryreports)totranslatethesecurityprofessionalskillsinto
a set of relevant skills using clustering information in a semantic vec-
tor space. The effectiveness of this approach is demonstrated through
experiments, and the results show that our approach works better than
baseline solutions in selecting the appropriate security professionals.
·
Keywords: Bug bounty programs and processes Skills
· · ·
representation Embeddings models Ethical hackers Cyber security
1 Introduction
The advancement in the Web 2.0 technology and its widespread use in virtually
alltypesofbusinesseshasincreasinglyexposedustosecuritythreatsandcyber-
attacks during the last years. These attacks result in several security breaches
events targeting not only individuals but giant organizations including the US
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.334–348,2021.
https://doi.org/10.1007/978-3-030-76352-7_33
Security Professional Skills Representation 335
DepartmentofDefence1,JPMorgan2andmanymore.Perhaps,amongthese,the
mostnotableistheEquifaxdatabreach,whichexposedthesensitiveinformation
of147millionpeople,withanestimatedsettlementof∼650millionUSdollars3.
In response to these security breaches, organizations are increasingly relying
on security professionals (SecPros) and investing in their services through secu-
rity crowdsourcing platforms and processes (i.e. bug bounty programs) to find
and address security vulnerabilities [2]. A bug bounty program offers rewards to
external parties (through crowdsourcing) allowing them to perform a security
assessment of their assets (e.g. software, hardware) [9].
These bug bounty programs are a useful complement to existing internal
security programs and widely accepted by organizations [19]. Additionally, due
to the nature of crowdsourcing, organizations are benefitting from its speed and
thevastpoolofavailableSecProswithdiverseskillsandexpertise.Forinstance,
onestudy [31] foundthat through theseoutsourcedprograms, agreater number
ofvulnerabilitiescanbefound,andmorequicklycomparedtothetimerequired
by in-house testers making the process more time- and cost-effective. However,
despite the large pool of these SecPros, there is a lack of sufficiently skilled
cybersecurity professionals [26]. For example, the MIT Technology Review4 and
Cybersecurity Venture5 predicted that the demand for cybersecurity profession-
als is expected to increase by 350%, from one million in 2013 to 3.5 million in
2021.
Therecould bemany reasons for skills shortages, one of the main ones being
the “skills gap” problem [7], that is, a mismatch between the skills of security
professionals and the skills required for a particular job (vulnerability discovery
in our context). Secondly, the different types of vulnerabilities require different
levels of skills and expertise [2]. For example, Web application vulnerabilities
require knowledge about the software itself, networking protocols, Web frame-
works, and vulnerabilities that target Web technologies.
To address the aforementioned challenges, it is essential that SecPros get
selectedfortasksbasedontheirskills.Inturn,havingtherightSecProsassigned
totaskscontributestomakingbugbountyprogramsandprocessessuccessful.In
this context, we propose an embedding-based clustering technique, which trans-
latestheSecPro skills intoasetofrelevantskillsusingclusteringinformationin
the semantic space. Firstly, the data related to SecPros skills is collected from
heterogeneous, multiple sources and grouped them as semantically correlated
clusters in an embedding space using clustering algorithms [15]. Then, when a
vulnerability discovery task is presented, it is placed (vectorized) in the same
embedding space as the skills. Lastly, the cosine distance between clusters of
1 https://thehill.com/policy/cybersecurity/483853-defense-department-agency-
suffers-potential-data-breach.
2 https://www.theguardian.com/business/2014/oct/02/jp-morgan-76m-households-
affected-data-breach.
3 https://www.nytimes.com/2019/07/22/business/equifax-settlement.html.
4 https://www.technologyreview.com/s/612309/a-cyber-skills-shortage-means-
students-are-being-recruited-to-fight-off-hackers/.
5 https://cybersecurityventures.com/.
336 S. Mumtaz et al.
skills and a task vector is computed to either recommend a set of skills, or
SecPros for the task. The core of our approach is the representation of a task
and skills in the same embedding space, which helps to mitigate the “skill gap”
problem.
The rest of the paper is structured as follows. Section2 introduces our app-
roach to representing security professionals’ skills. The experiments and evalu-
ations are presented in Sect.3. Section4 provides background information and
related work on general and crowdsourced approaches for skills extraction and
representation. Finally, Sect.5 provides concluding remarks and future work.
2 Representing Security Professionals’ Skills
and Recommending to Vulnerability Discovery Task
This section presents our proposal for representing SecPros skills and recom-
mending them to vulnerability discovery task. Figure1 presents an outline of
our framework.
Task Keywords extraction - SP tor pe / fp rero quc ee ns ts win og rds Task vectorization SecPros
Bu Pg ro B go rau mnty [ XSSK , e Sy Qw Lo r ind js e: c tion ] r - loe C wm o eo n rv cva ael srt ein sg words to
- Lemmatization
Task/Skills similarity
Online: (Embedding
Task2Expert Matching SecVuln
Offline: Model)
Skills Representation
[ BuC rpo Sm um iteo ,n K t ao lo i nls m: ap ] - r eS mto op v/ afr lequent words Skills phrases
Experience knowledge: - Converting words to Skill phrases
[ Operating system Linux, lowercases vectorization
Databases Oracle ] - Lemmatization
SoS uk ril cls es SE kx ilt lr sa Pct hio ran s o ef s Pre processing Vali sd ka ilt li sn g p he rx at sra ec sted Skills vectorization Generati sn kg i lc lslusters of
Skills Collection Skills CEm lusb te ed rid ni gn sgs and
Fig.1. Overall framework
Our proposed framework exploits the heterogeneous information available
across the Web such as job postings, resumes from job search portals, and com-
plements thesewith other notable sourcessuchas theskills declared onSecPros
profiles across different platforms (e.g. Cobalt). More precisely, our approach
consists of two phases (see Fig.1):
– Skills Representation.ThisphasecollectstheSecPros’skillsrelatedinfor-
mation scattered across the Web. Then, by leveraging the property of word
embeddings [20], we represent them in a semantic space via clustering. The
generatedskillsclustersarethenstoredofflineforfurtherusebythefollowing
phase.
Security Professional Skills Representation 337
– Task-SecPro Matching. This phase represents the vulnerability discovery
task in the same space as the skills (built in the previous phase). Then, this
representation is matched with either expertise of SecPros or skills to find
appropriate SecPros for the task.
In the following sections, we discuss in more details each of these two phases.
2.1 Skills Representation
Skills Collection. Skills collection consists of four steps: (i) Identification of
skillssources,(ii)extractionofskillsfromidentifiedsources,(iii)pre-processing,
and (iv) normalization and validation of the extracted skills.
(i) Identification of Skills Sources. Skills can be extracted from multiple
sources, including job postings (e.g. job descriptions and requirements section)
from job portals (e.g. CareerBuilder.com), technical/skills sections in online
resumes (e.g. indeed.com), and self-declared skills list from various platforms
(e.g. LinkedIn, Cobalt). In this work, we prefer to use “skill phrase” (also called
n-grams [3]), considering that skills are often made up of multiple-words (e.g.
“penetration testing”, “source code review”). After the identification of skills
sources, the next step involves the extraction of skill-related phrases.
(ii) Extraction of Skills Phrases.Theliteratureoffersseveraltechniquesfor
the extraction of skills phrases. For example, [13] used Term-Frequency Inverse-
Document-Frequencey (TF-IDF) [5] to extract relevant and essential keywords
from job descriptions and resumes. Likewise, LinkedIn argued in [3] that users
on LinkedIn use a comma-separation technique to provide a skills list in the
“skills and expertise” section (e.g. “Java”, “SQL”, “Reinforcement Learning”).
They utilized the comma-separated technique for identification and extraction
of skills phrases. Similarly, we use TF-IDF and topic modelling [4] techniques
to extract the important keywords representing the skills set of SecPros from
notable sources (i.e. vulnerability discovery report, job descriptions). Further-
more,wealsoutilize thecomma-separation techniqueandWebscrappingmeth-
ods when necessary (e.g. in case of the self-declared skills list).
(iii) Pre-Processing. We apply basic text pre-processing techniques to make
our collected skill phrases available for further processing. These techniques
include the removal of stop words, converting the whole dataset to lowercase
and lemmatization. More importantly, frequently occurring words (e.g. knowl-
edge, proficient, team-oriented in job requirements), are discarded as they can
act as outliers and make the skills data noisy [14].
(iv) Normalizing and Validating the Extracted Skills Phrases.Thegoal
of this step is to retain the valid skills phrases and discard any other keywords
that are not valid skills phrases. As mentioned previously, the skills phrases are
human-generated (job postings, resumes), and everyone has different ways of
expressing them (i.e. different representations of the same concept/skill). For
example, some may prefer to write a vulnerability type as “XSS”, and others
338 S. Mumtaz et al.
may write it as “Cross-Site Scripting”. As a result, there could be a great deal
of redundancy in the users’ skills set.
We apply a normalization technique to express them in a standard (base)
form. An example of a base form would be penetration testing, pen testing, and
pen test into penetration testing. However, the lemmatization is usually done
through Wordnet [21], which is a general-purpose database and, as expected,
does not have specialized terminology. Likewise, there are several skills knowl-
edge bases available to validate skill phrases, such as O*Net (used by US public
recruitment services) [6], and ESCO (a European skills taxonomy)6. Neverthe-
less, all these skills knowledge bases are for general purpose recruitment and do
not necessarily contain terminology that is specific to cyber security domain.
To tackle this problem, we utilize Wikipedia open search [14], and tags (Stack
Overflow and Stack Exchange), and also rely on keywords from our previous
work dataset [24] and other cybersecurity domain-specific sources (e.g. National
Institute of Standard and Technology (NIST)7).
Skills Representation via Clustering. This step involves a semantic repre-
sentationofskillsphrasestoreducetheskillgapproblem.Todoso,wepresentan
embedding-based clustering method. Embedding models, more precisely, word
embeddings, generate a dense, continuous, low-dimensional representation of
words from the raw corpus in an unsupervised way [20]. The words (in our case,
skills phrases) that have a similar context or semantics have close embeddings
in the vector space. These vectors of skills phrases are further represented using
clusters so that similar and semantically coherent skills should be in the same
cluster. The assumption is that, since word embeddings span a semantic space,
the clusters based on word embeddings would give a higher semantic space for
the skills phrases [8].
Clustering. A cluster is a collection of items that are similar to each other
and dissimilar to other clusters’ items [15]. Clustering is essentially an unsuper-
vised, machine learning method and is mainly used to classify unlabeled data.
Examplesofapplicationsofclusteringincludetextanalysis,patternrecognition,
segmentation(imageprocessing)andcollaborativefiltering.Recently,ithasbeen
used successfully to represent taxonomies for topics based on academic papers
[29] and experts finding [8].
Generating Clusters. Given m number of skill phrases S = {s 1,s 2,....s m},
we utilize our cyber security vulnerability word embedding (SecVuln) [24] to
generateavectorrepresentationforeachskillphrase.Then,weapplyaclustering
algorithm, specifically hierarchical clustering [8] to group them into k clusters,
that is, C ={C 1,C 2...C k} (e.g. C ={burpsuite,kalilinux,nmap,metasploit})
1
such that semantically correlated skill phrases belong to the same cluster.
SecPro Expertise Representation. This step represents SecPro expertise to
match it with a vulnerability discovery task. Using statistical language model-
ing [23], the expertise and skills of SecPros can be inferred from their relevant
6 https://ec.europa.eu/esco/portal/skill.
7 https://csrc.nist.gov/glossary.
Security Professional Skills Representation 339
documents (e.g. email communications or answers in Q&A web sites). In our
context, vulnerability discovery reports and self-declared skills of SecPros are
an excellent illustration of their expertise. However, as previously mentioned,
self-declared skills listed in profiles are human-generated and therefore prone to
incompletenessorbias.Therefore,aftertheinitialcollectionofskillsphrases,we
enriched it with the discovered vulnerabilities given in SecPros profiles.
Next, we leverage the clusters generated in the previous step to represent
SecProsinaclusterform.Thepurposeofthisstepistorecognizetheunspecified
skillsofSecPros.Todoso,theskillsphrasesofeachSecProarematchedwiththe
clustersofskillsphrasesusingasimplekeyword-matchingalgorithm.Itisworth
mentioning that the matching takes place at a certain threshold (e.g. if 50% of
skills phrases are matched, then a cluster is chosen, otherwise discarded). The
clustersarefurtheraggregatedusingvectoraveragingtechnique[23]torepresent
the cluster as a vector. Unlike the result of skills phrases’ vector averaging,
the vector average of a clusters gives more accurate result as shown later in
our experiments reported in Sect.3, having the advantage of being semantically
similar to each other.
For instance, skills phrases extracted from a vulnerability report would con-
sist of keywords with different semantics (e.g.“Persistent XSS via filename in
projects”, a title of a vulnerability discovery report on HackerOne8). However,
the skills phrases within a cluster are already related to each other, and hence
would be more useful in accurately matchin(cid:2)g SecPros w(cid:3)ith tasks. The represen-
−→ −→ −→ −→
tations of the selected cluster vectors C = C 1,C 2...C k are then stored offline
as a distribution over skills.
2.2 Task-SecPro Matching
The purpose of this phase is to recommend either SecPros to the given task or
skill phrases to the given task. Upon the arrival of a task to the crowdsourcing
platform (e.g. HackerOne9), we perform similar pre-processing and keywords
extraction (from the description of task) as in the previous phase to obtain a
list of keywords T. Then, we leverage the word embedding model to generate a
−→
vector representation T for the task based on the extracted keywords T.
−→ −→
Afterobtainingthevector T,thetaskmatchingbetween T andtheclusters
−→
of skills phrases C takes place using cosine similarity [5], which is defined as
follows:
−→−→
T.C
sim(T,C)= −→ −→
|T||C|
The similarity score ranges from [−1, 1], where the closer the value to 1 the
more relevant to the task is to the expertise of a SecPro.
8 https://hackerone.com/reports/662204.
9 https://www.hackerone.com/.
340 S. Mumtaz et al.
3 Experiments
In this section, we present the experimental results of our approach using the
following evaluation techniques.
– Validation of cluster quality: To examine how closely the skills phrases are
related to each other within the cluster.
– Validation based on information retrieval: To determine the effectiveness of
our approach in selecting the appropriate SecPros for a given task.
3.1 Dataset
In this work, we collected data from popular job search portals such as
indeed.com10 and monster.com11 with cyber security jobs related query (e.g.