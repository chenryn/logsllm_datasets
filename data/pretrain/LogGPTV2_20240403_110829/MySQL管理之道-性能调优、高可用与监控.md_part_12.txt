3.2.2
朋友查阅相关文档资料。
用得最多还是RAID10。由于篇幅限制，各种RAID技术的相关知识这里不再介绍，请读者
它的读写速度快，固态硬盘厂商大多会宣称自家的固态硬盘持续读写速度超过了500MB/s。
《深人理解linux虚拟内存管理》一书，本书将不详细介绍。
留的共享内存，这点希望读者朋友要有所了解，具体它们之间是怎么使用和调度的请参考
务器中的内存主要被四类事务所消耗：内核、文件系统高速缓存、应用程序进程、特定预
好坏的最关键指标，而 MySQL的InnoDB引擎中的 innodb_buffer_pool_size 参数可以设置
存为王”。可以看到，内存对于服务器是多么至关重要。内存是影响MySQL服务器性能
有RAID0、RAID1、RAID10、RAID5、RAID50等RAID技术，但是目前在数据库应用中
用户数据的安全性。
备份功能，一旦用户数据发生损坏，利用备份信息即可使损坏数据得以恢复，从而保障了
硬盘），从而提供比单个硬盘更高的存储性能和数据备份技术的方式。RAID具有数据余
RAID是一种把多块独立的硬盘（物理硬盘）按不同的方式组合起来形成一个硬盘组（逻辑
但目前来说由于技术限制，其容量要比普通硬盘小得多，同时还会有使用寿命限制。
的固态硬盘有LSISandForce、Indilinx、JMicron、Marvell、Samsung及Intel等多种主控芯片。
法普遍使用。还有一种叫SSD固态硬盘技术，它是用固态电子存储芯片阵列而制成的硬
慢慢接近内存速度，可加速应用级的I/O性能，但是它目前价格相当昂贵，一般的企业无
呢？但是话又说回来，也不能随意分配内存，要根据系统的整体情况来做个判断。Linux服
为物理内存的70%～80%。因为把数据放在内存中比存放在磁盘中要快得多，何乐而不为
CPU的工作情况及其CPU的性能指标。
机制，因为这超出本书的应用范围和本书的写作意图，但是书中会详细介绍如何实时监控
知道它是如何工作的，就很难对其进行改善。本书不会讲解CPU内部的体系结构、运行
对的一个重要问题。不过性能优化核心就是理解系统的运作及系统运行的动态——如果不
件。虽然说它的性能是整体系统性能中最关键的绝对正确，但是还是有人经常过于高估了
网络I/O，以及Linux系统本身的内核。
盘，它功能及使用方法与普通硬盘的完全相同，但是它的成本也比较高。市面上比较常见
在了解Linux操作系统中的各种调优参数和性能度量工具之前，有必要讨论一下关于
在磁盘技术中应用得最多的还是RAID技术，叫廉价磁盘冗余阵列技术。简单地说
磁盘技术发展到今天也有了很大的进步，比如，当今比较火的Fusion-io，它速度已经
RAID技术有几种不同的等级，它们可分别提供不同的速度、安全性和性价比，常用的
人类在理想上都渴望无限大的存储能力，即便是在互联网时代，各类公司还是推举“内
经过几十年的发展，CPU的性能得到了飞速提高，远远超过了计算机系统中的其他组
一它也是有负荷的。因此CPU性能的监控与优化也是系统管理员或运维人员必须面
系统性能评估指标
A
---
## Page 89
到 SwapIn/Out。如果SwapIn/Out长时间保持在每秒钟超过200～300页，可能表示内存
使用只能告诉你Linux在管理内存上是多么的有效。要想确定内存是否存在瓶颈，需要用
使用率时会感到疑惑，就是这个原因。实际空闲内存应为已用内存扣除用于缓冲和缓存的
也比较容易理解，
中断等，这里不再详细描述。
存在瓶颈。
数量而得到。
大量未使用的内存分配给文件系统来缓存数据，初级运维工作人员用free-m命令看到内存
你应该检查一下I/O子系统各方面的性能。
器堆栈可能存在瓶颈。通常，系统只会花费很少时间在内核时间上。
系统正在执行实际的工作。
CPU的使用率大于80%，这就可能表明CPU出现了瓶颈。
使用你所碰到的任何工具。本节将会介绍其中最重要的一些指标。
开源的性能工具可以使用，不过，这些工具的测量指标都是相同的，理解这些指标能让你
这个值表示已使用的交换空间大小，相当于Windows系统中的虚拟内存。交换空间的
口交换空间使用
与其他操作系统相比，在Linux系统中不必过分在意空闲内存值。因为Linux内核会将
口空闲内存
影响内存的性能指标无非就内存大小和虚拟空间大小。内存的性能指标相对比较少，
2.内存性能指标
除了上面介绍的这些性能指标以外，
表示花费在执行re-nicing（改变进程的执行顺序和优先级）进程的CPU百分比。
口%id：空闲时间
等待I/O操作所需的CPU时间总和，
%wa：I/O等待
表示内核操作所花费的CPU百分比，包括中断。系统时间值持续很高表明网络或驱动
口%sy：系统（内核空间）
表示用户应用进程所花费的CPU百分比，包括Nice时间。如果用户时间值很高，表明
口%us：应用程序（用户空间）
这可能是最直接的指标了，它表示每个处理器的整体使用率。如果在持续一段时间里
口%ni：Nice时间
表示 CPU空闲的百分比。这个值越大表明系统CPU 的负荷越小。
CPU使用率
从整体上来说，CPU性能指标比较多，因为CPU处理的事物也比较多。常见的指标如下：
1．CPU性能指标
，常见的主要指标包括：
，还有诸如队列中等待执行的进程数、上下文切换、
系统不应该花费过多的时间等待I/O操作，否则
第3章故障诊断·75
---
## Page 90
76·第二部分故障诊断与性能优化篇
目了然，而且dstat支持即时刷新，可以使用相关参数来指定显示哪些内容！
sysstat相比，dstat是以一个彩色的界面动态显示的，这样数据会比较显眼，容易观察，
可用来替换vmstat、iostat、netstat、nfsstat 和ifstat 这些命令。它是由Python 编写的，与
iostat、mpstat、cifsiostat、sar等工具，而今天要介绍的 dstat是一个全能系统信息统计工具，
是基于虚拟 proc 文件系统的。要准确评估性能，还需要使用一些适当的基准工具。
UNIX上知名工具的Linux版，还有一些是专门为Linux设计的。大多Linux性能监控工具
3.2.3
读者朋友通过互联网或从其他书籍中去了解。
内核可以有不同的块大小，其范围可从512字节到4KB。
帮助确定系统平均传输值大小。平均传输值通常要与硬盘子系统的条带大小一致。
待的时间。单位为毫秒（ms）。
Linux操作系统的开放和灵活性使其拥有大量的性能监控工具。其中有一些是原来
此节由我的朋友邱治军参与编写，在此表示感谢。
安装很简单，只需一个rpm命令即可完成。
对于大多数从事运维工作的朋友来说，用得比较多的可能还是要属sysstat，它提供了
本节将给大家介绍一个第三方开源工具。Linux服务器性能监控制器：dstat。
上面介绍了服务器系统性能评估指标，这只是个大概的轮廓，还有更多的相关指标请
下面开始进人dstat的神秘世界。
表示块设备读写的实际数据的数量，单位为KB。
口每秒钟读写字节的数量
这个指标表示每秒钟读写块的数量，在2.6.XX内核中块的大小为1024字节，早期的
口每秒钟读写块的数量
表示每秒钟执行了多少次I/O操作（包括读取和写人)。与每秒钟传输字节数结合可以
口每秒钟传输的数量
I/O请求服务所花费的平均时间。等待时间包括实际I/O操作的时间和在I/O队列中等
口队列平均长度
CPU在等待I/O操作时所花费的时间。如果这个值持续很高，很可能表示I/O存在瓶颈。
磁盘I/O等待
3.磁盘性能指标
1.dstat安装
口平均等待时间
I/0请求的数量。
磁盘性能对数据库来说至关重要，它严重影响着数据库的读写操作。
开源监控和评估工具介绍
。通常硬盘队列值为2～3时最佳；过高可能表示硬盘I/0存在瓶颈。
---
## Page 91
-i,-int enable interrupt stats：启用网卡中断统计。
-c,-cpu：显示CPU 情况。
下面来看看dstat常用使用的参数，如下所示：
不带任何参数时它只会收集CPU、Disk、Network、Paging、System 的状态信息，默认
简单执行 dstat 命令，将会得到如图3-1所示的内容：
dstat[-afv][options..][delay[count]]
在dstat中使用的语法如下：
[root@MysQL56-s~]#rpm-ivh dstat-0.7.2-1.el5.rfx.noarch.rpm
[root@MySQL56-s ]#wget http://pkgs.repoforge.org/dstat/dstat-0.7.2-1.el5.rfx.noarch.rpm
Preparing...
或者所有CPU。
1:dstat
-D total,hda includehdaandtotal：显示所有磁盘的情况。
-d,-disk：显示磁盘情况。
-C 0,3,total include cpu0,cpu3 and total：如果有多个 CPU 的话，可以指定特定CPU
使用说明
[root@twexdb1~]#dstat
########################################
#################
C
0
99
018192B
8192B
8192B
|8192B
18192B
图3-1dstat状态信息
D
口
512B
512B1
17363E
6661B
paging--
3220
12694
13816
12101
11117
12463
11306
12156
4871
1310
11208
1111
3469
2449
2281
2409
11491
第3章故障诊断·77
---
## Page 92
78·第二部分故障诊断与性能优化篇
瓶颈。
实例1:dstat sda-D35
--output fil：把显示结果写人到CVS 文件中。
-m,-mem：显示内存情况。
口-1,-load enable loadstats：显示系统1分钟、5分钟、15分钟的平均负载。
这里“35”的意思跟vmstat35一样，即每隔3秒更新一次，总共更新5次。
可使用dstat sda-D35来协助找系统瓶颈，它只显示 sda磁盘的信息。如图3-2所示。
了解了dstat使用的命令和参数，现在来看看如何使用，它可以帮助我们找到系统的
口
口
口
口
L
L
L
口
L
口
L
口
1-noheaders：只显示一次表头以后就不显示了，使用重定向写入文件时很有用。
--nocolor disable colors(implies-noupdate)：关闭颜色显示，只显示一种颜色。
-f,-full:使用-C、-D、-I、-N和-S显示。
-M statl,stat2 enable internal stats and external plugin stats:显示一些额外的状态信息，
I--udp enable udp stats：显示 ucp连接的状态信息。
--tcp enable tcp stats：显示 tcp 连接的状态信息。
--raw enable raw stats：显示裸设备的状态信息。
1--lockenablelockstats：显示系统各种状态锁的信息。
--ipc：报告IPC 消息队列和信号量的使用情况。
-a,-all：使用缺省的-cdngy。
如 postfix、sendmail、raw等，具体可以通过 dstat-M list 列出。
-t,-time enable timecounte：显示当前系统时间。
-S swapl,total：可以指定多个swap。
-S,-swap：显示 swap 情况。
-p,-proc enable process stats：启用进程的状态显示。
-Nethl,total：显示指定网络接口。
-n,-net:显示网络情况。
[root@twexdb1~]#
usrsysidlwaihiqsiqlread
You did not select any stats,using-cdngy by default.
p-#x]
一
-bee-no-tero-
0
二
99
6
一
012731B
012731B
012731B
012731B
012048B
--dsk/sda-
图3-2
writ|recvsend|
171B
171B
171B
171BI
128B1
显示磁盘信息
-net/total-
---paging--
一
011858
011875
011782
011753
01
|1813
---system-
1074
2759
1184
1112
1194
CSW
---
## Page 93
而死机，所以我们得找到引起连接数升高的本质原因。
连接数增大，会导致每个连接所占用的内存也增加，这样一来，机器就很容易因内存不足
合就可以了，但如果是想一直增大（比如增大到10000），那么这就是治标不治本了，因为
其实，这得看情况，
操作很频繁，磁盘I/O遇到了瓶颈，导致无法处理繁忙的请求等。
3.3.1
3.3
靠平时多去练习和观察，这样才能熟能生巧！
sig则显示服务中断有关的信息。
sys 表示系统内核空间占用的百分比，idl表示 CPU空闲情况，wai表示 I/O 等待数，hiq和
与CPU相关的usr代表应用空间也就是应用程序所占用的百分比，注意这里也是百分比，
所示)。
口，被一条SQL查询给堵死了，造成了后面的DML操作等待，又比如，增、删、改、
其他就不再一一说明，这工具的应用还算比较简单，显示也很直观。工具的使用需要
也许有人会问，出现了too many connections，直接增大max_connections 值就行了吧？
以上各模块显示的内容跟top、vmstat、iostat等这些工具表现的含义完全相同，比如，
可使用dstat -cdlmnpsy，来协助找系统瓶颈，它显示CPU和内存的信息（如图3-3
在正常情况下，MySQL处理完一条请求后，会根据wait_timeout值来释放连接（参数
连接数是直接反应数据库性能好坏的关键指标，连接数过多，很可能有多种原因，比
实例2：dstat-cdlmnpsy
1连接数过多导致程序连接报错的原因
故障与处理
%
图3-3显示 CPU、I/O、load、memory、network、process、swap、system
00
013192B
=
013192B
=
13192B
，如果你没有设置这个参数，那么将其设置为500～1000，在大多数场
512B
0
k11
1.43
0.
4515122M
512123M
1
Scach
369
369M
369
33M
33M
三
00
--deMn----
第3章故障诊断·79
8189M11
818914
8109M
8189M
3189M
B189N1
818
4448
115
###
查
---
## Page 94
80·第二部分故障诊断与性能优化篇
繁访问的数据重新加载回buffer中，也就是说，如何对InnoDB BufferPool进行预热，以便
秒读操作3000个，写操作500个），当数据库重启后，就会面临一个问题，如何将之前频
直等待，此时数据库已经处于无响应状态，如图3-4和图3-5所示。
空间，也可以回收磁盘空间。
整理好了，缩小了它们在书柜里的位置，但书柜还是那个尺寸，不会因为把书弄整齐了
片。但因是共享表空间，不是独立表空间，这样操作可以回收数据空间，而不是磁盘空间。
享和独立表空间。alter table TableName engine-innodb 通过这条命令可以回收表空间整理碎
表空间，版本是V5.1，由于运行时间很长，产生了很多的碎片，导致ibdata文件变得很大
限数，这会报'toomanyconnections'的错误。
等到28800秒以后才会释放内存，如果你的MySQLServer有大量的闲置连接，不仅会白
设置采用默认的28800秒，那么客户端在连接到MySQLServer处理完相应的操作后，要
含义：服务器关闭非交互连接之前等待活动的秒数)，一般设置为100秒即可，如果你没有
书柜也就缩小了。而独立表空间是：有多少书就放多大尺寸的书柜里。它既可以回收数据
所以我们就用导出数据和然后再导人，并且重建ibdata的方式来释放碎片。InnoDB分为共
白消耗内存，而且如果连接一直在累加而不断开，最终肯定会达到MySQLServer的连接
下面来看一个因重启服务器导致数据库连接数过多的经典案例。之前我们用的是共享
整理完碎片重启服务器后，在早高峰期用户登录时，连接数满了，导致用户登录时一
经过分析，发现早高峰连接数升高是这样引起的：由于业务很繁忙，数据库并发高（每
这里以书柜的例子来解释整理表空间碎片。书柜上的书摆放的很凌乱，此时你把书都
Connections圈
iteresemake defout
Graph Name
Contains
#connections
Value
03:00
04:00
Total Running  Cached
图3-4连接数
05:00
Graphs
06:00
07:00
08:00
09:00