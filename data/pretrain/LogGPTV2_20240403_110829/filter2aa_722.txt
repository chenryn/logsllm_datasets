### Abusing Certificate Transparency: Hacking Web Applications Before Installation

**Speaker:** Hanno BÃ¶ck  
**Website:** [https://hboeck.de/](https://hboeck.de/)

---

#### 1. HTTPS
- **Certificate Authorities (CAs):** 
  - **Trust Issues:** Can we trust Certificate Authorities?
  - **Popular Opinion in Infosec:** CAs are problematic, and there is a need to replace them.
  - **Reality:** No feasible plan exists for replacing CAs.

#### 2. Improving the CA System
- **Baseline Requirements**
- **HTTP Public Key Pinning (HPKP)**
- **Certificate Authority Authorization (CAA)**
- **Certificate Transparency**

#### 3. Certificate Transparency (CT)
- **Public Logs:** All certificates will be required to be logged by April of next year.
- **CT Details:**
  - **Merkle Hash Trees**
  - **Signed Certificate Timestamps (SCT)**
  - **Signed Tree Head (STH)**
  - **Precertificates**
  - **Monitors and Gossip**

#### 4. The Role of CT
- **CA Watchdog:** Anyone can check logs for suspicious activity.
- **Data Source:** Provides a feed of newly created hostnames.
  - **Example Tool:** [https://crt.sh](https://crt.sh)

#### 5. Shifting Focus: Web Applications
- **Installers:** Many web application installers lack authentication.
  - **Old Method:** Google dorking web installers.
  - **New Idea:** Exploit the time window between uploading files and completing the installer.

#### 6. Attack Vector
- **Monitor CT Logs:** Extract new hostnames.
- **Check Hosts:** Look for common installers.
- **If Installer Found:**
  - Install the application.
  - Upload a plugin with a code execution backdoor.
  - Revert the installation.
  - Use an external database host for database credentials.

#### 7. Demo and Challenges
- **Challenges:**
  - Logged certificates are not immediately public (around 30 minutes).
  - Optimization: Check sites multiple times instead of once.
- **Numbers:**
  - 5000 WordPress installations within three months.
  - 500 Joomla, 120 Nextcloud, 70 Owncloud.

#### 8. Protection Measures
- **Authentication for Installers:**
  - **Challenge:** Application programmers want easy installations.
  - **Security Tokens:** Webapp creates a token file, and the user must read it.
  - **Vendor Response:**
    - **Drupal, Typo3, Owncloud:** No reaction.
    - **WordPress, Nextcloud, Serendipity:** Participated in cross-vendor discussions but no action.
- **Alternative Solutions:**
  - Whitelisting localhost (though not ideal).
  - Certificate redaction.
  - Using `.htaccess` files.

#### 9. User Defense
- **Be Fast:** Users can try to complete the installation quickly.
- **Defending as a User:** It is challenging; fixes are needed from vendors.

#### 10. Evidence of Attacks
- **Log Entry Example:**
  - `x.x.x.x - - [09/Jul/2017:12:03:03 +0200] "GET / HTTP/1.0" 403 1664 "-" "Mozilla/5.0 (compatible; NetcraftSurveyAgent/1.0; +PI:EMAIL)"`

#### 11. Takeaways
- **Unauthenticated Installers:** They pose a significant security risk.
- **No More Secret Hostnames:** Publicly available hostnames can be exploited.
- **Certificate Transparency:** A valuable data source for both attackers and defenders.

#### 12. Conclusion
- **Thank You!**
- **Questions?**
- **Contact:**
  - [https://hboeck.de/](https://hboeck.de/)
  - [https://github.com/hannob/ctgrab](https://github.com/hannob/ctgrab)

---