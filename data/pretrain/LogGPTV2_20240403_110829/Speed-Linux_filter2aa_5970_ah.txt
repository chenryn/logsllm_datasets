```
#### 磁盘
**磁盘的文件名**
Linux 中每个硬件都被当做一个文件，包括磁盘。磁盘以磁盘接口类型进行命名，常见磁盘的文件名如下：
- IDE 磁盘 : /dev/hd[a-d]
- SATA/SCSI/SAS 磁盘 : /dev/sd[a-p]
其中文件名后面的序号的确定与系统侦测到磁盘的顺序有关，而与磁盘所插入的插槽位置无关。
**磁盘配额**
- quota : 能对某一分区下指定用户或用户组进行磁盘限额。
**分区**
```bash
fdisk -l			# 查看磁盘情况
fdisk /dev/sdb		# 创建系统分区
	n	# 添加一个分区
	p	# 建立主分区
	1	# 分区号
	后面都是默认,直接回车
	t	# 转换分区格式
	8e	# LVM 格式
	w	# 写入分区表
```
**挂载**
```bash
cat /etc/fstab
mount
mount /dev/sdd1 /mnt/sdd		# 挂载新硬盘到操作系统的某个节点上
mount /dev/cdrom /mnt/cdrom/	# 挂载 CD 镜像
mount -t vfstype				# 指定文件系统的类型,通常不必指定.mount 会自动选择正确的类型.
vi /etc/fstab					# 自动挂载
/dev/cdrom /mnt/cdrom iso9660 defaults 0 0
findmnt							# 显示Linux中当前挂载的文件系统
```
**删除**
```bash
rm 	# 删除指定文件
	rm -r 	# 删除文件夹
	rm -i 	# 删除前确认
	rm -f 	# 强制删除
	rm -v 	# 显示详细信息
shred -zvu -n  5 	# 主要用于文件覆盖内容,也可以删除
	# -z - 用零添加最后的覆盖以隐藏碎化
	# -v - 显示操作进度
	# -u - 覆盖后截断并删除文件
	# -n - 指定覆盖文件内容的次数(默认值为3)
```
**数据恢复**
- [数据恢复](./Secure-Linux.md#文件恢复)
**占用**
- df
	```bash
	# 报告驱动器的空间使用情况
	df [options] [arguments ...]
	# e.g.
		df -H	# 以人类可读的格式进行显示
		df -ah	# 查看磁盘占用大的文件夹
	```
- du
	```bash
	# 报告目录的空间使用情况
	du [options] [arguments ...]
	# e.g.
		du -H . | sort			# 以人类可读的格式进行显示,排序显示
		du -Hd 1 / | sort -hr
		du -sH /etc/yum			# 特定目录的总使用量
		du --max-depth=1 -H		# 查看文件夹下各个文件夹的磁盘占用
	```
**dd**
```bash
# 主要功能为转换和复制文件。
dd [options]
	e.g. : dd if=/dev/zero of=out.txt bs=1M count=1
	# if 代表输入文件.如果不指定 if,默认就会从 stdin 中读取输入.
	# of 代表输出文件.如果不指定 of,默认就会将 stdout 作为默认输出.
	# ibs=bytes:一次读入 bytes 个字节,即指定一个块大小为 bytes 个字节.
	# obs=bytes:一次输出 bytes 个字节,即指定一个块大小为 bytes 个字节.
	# bs 代表字节为单位的块大小.
	# count 代表被复制的块数.
	# /dev/zero 是一个字符设备,会不断返回 0 值字节(\0).
	# e.g. 截取地址 925888（0xe20c0）之后的数据，保存到 out.bin
	dd if=test.trx bs=1 skip=925888 of=out.bin
	# e.g. 文件分块合并,文件分为 1 2 3 4 5 每个文件 无用头信息 364 字节,去掉头信息合并
	dd if=1 bs=1 skip=364 of=11
	dd if=2 bs=1 skip=364 of=22
	dd if=3 bs=1 skip=364 of=33
	dd if=4 bs=1 skip=364 of=44
	dd if=5 bs=1 skip=364 of=55
	cat 11 22 33 44 55 > fly.rar
```
**LVM**
> LVM 是 Logical Volume Manager 的缩写，中文一般翻译为 "逻辑卷管理"，它是 Linux 下对磁盘分区进行管理的一种机制。LVM 是建立在磁盘分区和文件系统之间的一个逻辑层，系统管理员可以利用 LVM 在不重新对磁盘分区的情况下动态的调整分区的大小。如果系统新增了一块硬盘，通过 LVM 就可以将新增的硬盘空间直接扩展到原来的磁盘分区上。
- **物理卷**
	创建物理卷
	```bash
	pvcreate /dev/sda5
	```
	查看物理卷
	```bash
	pvdisplay
	```
	物理卷数据转移
	```bash
	pvmove /dev/sda4 /dev/sda5  # 把 / dev/sda4 物理卷数据转移到 / dev/sda5 物理卷上，注意转移的时候查看物理卷大小
	```
	删除物理卷
	```bash
	pvremove /dev/sda4
	```
- **卷组**
	卷组可以由一个或多个物理卷组成,当卷组空间不够时可以再新增物理卷扩容.
	创建卷组
	```bash
	vgcreate vg1 /dev/sda5
	```
	新增卷组
	```bash
	vgextend vg1 /dev/sda6
	```
	删除卷组
	```bash
	vgremove vg1
	```
	查看卷组
	```bash
	vgdisplay
	vgs
	```
	移除某块物理卷
	```bash
	vgremove vg1 /dev/sda6
	```
- **逻辑卷**
	逻辑卷建立在卷组基础之上的,所以在创建逻辑卷的时候一定要指定卷组名称.
	创建逻辑卷
	```bash
	lvcreate -L 3G -n lvdisk1 vg1
	```
	显示逻辑卷
	```bash
	lvdisplay
	lvs
	```
	挂载逻辑卷
	```bash
	# 这里需要注意的是格式化的格式与挂载要进行匹配，否则会出现问题；挂载之后重启会失效，请查看下面让重启自动挂载的做法。
	mkfs.ext4 -t /dev/vg1/lvdisk1
	mount -t ext4 /dev/vg1/lvdisk1 /hehe
	mkfs.xfs -f /dev/vg1/lvdisk1
	mount -t xfs /dev/vg1/lvdisk1 /hehe
	```
	删除逻辑卷
	```bash
	lvremove /dev/vg1/lvdisk1
	```
	扩容逻辑卷(卷组的可用范围内的容量值)
	```bash
	lvextend -L +1G /dev/vg1/lvdisk1
	lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv
	```
	收缩逻辑卷容量
	```bash
	# 提示：使用以下命令时注意数据可能会丢失，请注意备份数据之后进行操作。
	lvreduce -L -20G /dev/vg1/lvdisk1
	```
	扩容生效
	```bash
	resize2fs /dev/vg1/lvdisk1
	xfs_growfs /dev/vg1/lvdisk1
	# 注意：resize2fs 主要针对 ext4 目录格式进行处理，而 xfs_growfs 主要针对 xfs 目录格式。
	```
	挂载重启失效问题
	```bash
	# 利用 root 权限编辑 / etc/fstab 文件加入挂载点，这样开机会自动挂载。
	/dev/vg1/lvdisk1 /hehe ext4    defaults    0  0
	```
**块设备信息**
- lsblk
	```bash
	# 显示所有可用块设备的信息
	lsblk -m	# 显示设备所有者相关的信息,包括文件的所属用户、所属组以及文件系统挂载的模式
	```
- blkid
	```bash
   	# 输出所有可用的设备、UUID、文件系统类型以及卷标
	# e.g.
	blkid /dev/sda1
	blkid -U d3b1dcc2-e3b0-45b0-b703-d6d0d360e524
	blkid -po udev /dev/sda1	# 获取更多详细信息
	blkid -g					# 清理 blkid 的缓存
	```
- partx
	```bash
	# 显示磁盘上分区的存在和编号
	partx --show /dev/sda
	partx --show /dev/sda1
	```
---
#### 无线网卡
**配置无线网卡**
- WM Ware(开机后)
    虚拟机->可移动设备->Ralink 802.11 n Wlan(显卡型号)->连接(断开与主机的连接)
- VBox
    虚拟机关机状态下->将设备插入主机->设置->USB设备->添加->删除除了供应商标识(VendorID)和产品标识(ProductID)之外的参数->开机->插入设备
- 验证是否连接成功
    ```bash
    lsusb
    airmon-ng
    ifconfig
    iwconfig
    ```
    出现无线网卡型号即为成功
---
#### 蓝牙
**启动蓝牙服务**
```bash
service bluetooth start
systemctl start bluetooth
```
**查看蓝牙设备**
```bash
hciconfig			# 查看蓝牙设备
hcitool dev
	hcitool --help
	hcitool lescan	# 扫描周围低功耗设备(BLE)
	hcitool scan	# 扫描周围蓝牙设备
	hcitool -i hci0 dev	# 查看蓝牙设备信息
gattool				# 对 BLE 数据进行精细化管理的话，就需要用到 gattool，使用 gattool 对蓝牙设备发送指令的操作上要比 hcitool 的 cmd 齐全很多
	gattool -h
```
**激活蓝牙设备**
```bash
# hciconfig 命令如 ifconfig 一样，可以控制蓝牙设备的开启与关闭
hciconfig hci0 up	# 激活蓝牙设备
hciconfig hci0 down	# 设备关闭
hciconfig hci0		# 查看属性
	# 第二行中的 “BD Address”，这是蓝牙设备的MAC地址
```
**关闭本地 pin 验证**
```bash
hciconfig hci0 noauth
```
**设置连接 pin 码**
```bash
/var/lib/bluetooth/XX:XX:XX:XX:XX:XX/pincodes	# XX:XX:XX:XX:XX:XX 为本地设备地址
文件格式为: XX:XX:XX:XX:XX:XX 1234				# XX:XX:XX:XX:XX:XX 为目标设备地址
```
**bluetoothctl**
```bash
bluetoothctl		# 蓝牙工具软件
	bluetoothctl scan on						# 主动搜索可以连接的蓝牙设备
	bluetoothctl discoverable on				# 使蓝牙适配器可被搜索
	bluetoothctl pair FC:69:47:7C:9D:A3			# 对指定设备进行配对
	bluetoothctl connect FC:69:47:7C:9D:A3		# 配对后,连接指定设备
	bluetoothctl paired-devices					# 查看已配对的设备
	bluetoothctl devices						# 列出计算机蓝牙范围内的设备
	bluetoothctl trust FC:69:47:7C:9D:A3		# 对指定设备进行信任
	bluetoothctl untrust FC:69:47:7C:9D:A3		# 取消对指定设备的信任
	bluetoothctl remove FC:69:47:7C:9D:A3		# 删除已配对的设备
	bluetoothctl disconnect FC:69:47:7C:9D:A3	# 断开指定设备的连接
	bluetoothctl block FC:69:47:7C:9D:A3		# 将指定设备加入黑名单
```
**rfcomm**
```bash
cat /etc/bluetooth/rfcomm.conf
rfcomm --help
# 输出字符到蓝牙串口
echo y>/dev/rfcomm0
```
---
#### 外接硬盘
```bash
fdisk -l			# 查看磁盘情况
mkdir -p /mnt/usb1
mount /dev/sdb1 /mnt/usb1
cd /mnt/usb1
umount /mnt/usb1	# 取消挂在
```
**[NTFS-3G](https://jp-andre.pagesperso-orange.fr/advanced-ntfs-3g.html)**
```bash
yum install -y fuse-devel
cd /tmp
wget https://jp-andre.pagesperso-orange.fr/ntfs-3g-2017.3.23AR.5-1.el7.x86_64.rpm
rpm -ivh ntfs-3g-2017.3.23AR.5-1.el7.x86_64.rpm
fdisk -l
mkdir -p /mnt/ntfsusb
mount -t ntfs-3g /dev/sda1 /mnt/ntfsusb
```
#### CD & DVD
**刻录 CD**
```bash
cdrecord -V -eject dev=/dev/cdrom data-backup.iso
```
**刻录 DVD**
```bash
growisofs -dvd-compat -Z /dev/dvdrw=data.iso
```
**从 CD 或 DVD 创建 ISO 文件**
```bash
isoinfo -d -i /dev/cdrom
dd if=/dev/cdrom bs=2048 count=1825 of=mydata.iso
```