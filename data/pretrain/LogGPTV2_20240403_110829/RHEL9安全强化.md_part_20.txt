    # auditctl -a always,exit -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
    ```
    请注意，`-F auid!=4294967295`{.literal} 选项用于排除未设置登录 UID
    的用户。
:::
::: title
**可执行文件规则**
:::
要定义一条规则，记录所有 `/bin/id`{.literal}
程序的执行，请执行以下命令：
``` screen
# auditctl -a always,exit -F exe=/bin/id -F arch=b64 -S execve -k execution_bin_id
```
::: itemizedlist
**其他资源**
-   `auditctl(8)`{.literal} 手册页.
:::
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#defining-persistent-audit-rules_auditing-the-system}定义持久性审计规则 {.title}
:::
要定义在重启过程中保持不变的审计规则，必须直接将其包含在
`/etc/audit/rules.d/audit.rules`{.literal} 文件中，或者使用
`augenrules`{.literal} 程序读取位于`/etc/audit/rules.d/`{.literal}
目录中的规则。
请注意，每次 `auditd`{.literal} 服务启动时都会生成
`/etc/audit/audit.rules`{.literal} 文件。`/etc/audit/rules.d/`{.literal}
中的文件使用相同的 `auditctl`{.literal}
命令行语法来指定规则。哈希符号(#)后面的空行和文本将被忽略。
另外，您可以使用 `auditctl`{.literal} 命令来从用 `-R`{.literal}
选项指定的文件中读取规则，例如：
``` screen
# auditctl -R /usr/share/audit/sample-rules/30-stig.rules
```
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#using-pre-configured-rules-files_auditing-the-system}使用预配置的规则文件 {.title}
:::
在 `/usr/share/audit/sample-rules`{.literal} 目录中，`audit`{.literal}
软件包根据各种认证标准提供了一组预配置的规则文件：
::: variablelist
[30-nispom.rules]{.term}
:   满足国家工业安全计划操作手册\"信息系统安全\"一章中指定的要求的审计规则配置.
[30-ospp-v42\*.rules]{.term}
:   满足 OSPP（通用目的操作系统保护配置文件）配置文件版本 4.2
    中定义的要求的审计规则配置。
[30-pci-dss-v31.rules]{.term}
:   满足支付卡行业数据安全标准(PCI DSS)v3.1 要求的审计规则配置。
[30-stig.rules]{.term}
:   满足安全技术实施指南(STIG)要求的审计规则配置。
:::
要使用这些配置文件，将其复制到 `/etc/audit/rules.d/`{.literal}
目录中，并使用 `augenrules --load`{.literal} 命令，例如：
``` screen
# cd /usr/share/audit/sample-rules/
# cp 10-base-config.rules 30-stig.rules 31-privileged.rules 99-finalize.rules /etc/audit/rules.d/
# augenrules --load
```
您可以使用编号方案对审核规则进行排序。如需更多信息，请参阅
`/usr/share/audit/sample-rules/README-rules`{.literal} 文件。
::: itemizedlist
**其他资源**
-   `audit.rules(7)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#using-augenrules-to-define-persistent-rules_auditing-the-system}使用 augenrules 来定义持久性规则 {.title}
:::
`augenrules`{.literal}脚本读取位于`/etc/audit/rules.d/`{.literal}目录下的规则，并将它们编译成`audit.rures`{.literal}文件。这个脚本会根据文件的自然排列顺序，按特定顺序处理以
`.rules`{.literal}
结尾的所有文件。这个目录中的文件被组织到具有如下含义的组中：
::: itemizedlist
-   10 - 内核和 auditctl 配置
-   20 - 可与常规规则匹配但您希望不同匹配的规则
-   30 - 主规则
-   40 - 可选规则
-   50 - 特定于服务器的规则
-   70 - 系统本地规则
-   90 - 定稿（不可变）
:::
规则并非是一次全部使用。它们是策略的一部分，应仔细考虑，并将单个文件复制到
`/etc/audit/rules.d/`{.literal}。例如，要在 STIG
配置中设置系统，请复制规则
`10-base-config`{.literal}、`30-stig`{.literal}、`31-privileged`{.literal}
和 `99-finalize`{.literal}。
在 `/etc/audit/rules.d/`{.literal} 目录中有了规则之后，运行带有
`--load`{.literal} 参数的 `augenrules`{.literal} 脚本来加载它们：
``` screen
# augenrules --load
/sbin/augenrules: No change
No rules
enabled 1
failure 1
pid 742
rate_limit 0
...
```
::: itemizedlist
**其他资源**
-   `audit.rules(8)`{.literal} 和 `augenrules(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#disabling-augenrules_auditing-the-system}禁用 augenrules {.title}
:::
使用以下步骤来禁用 `augenrules`{.literal} 工具。这会将审计切换为使用
`/etc/audit/audit.rules`{.literal} 文件中定义的规则。
::: orderedlist
**步骤**
1.  将 `/usr/lib/systemd/system/auditd.service`{.literal} 文件复制到
    `/etc/systemd/system/`{.literal} 目录中：
    ``` screen
    # cp -f /usr/lib/systemd/system/auditd.service /etc/systemd/system/
    ```
2.  在您选择的文本编辑器中编辑
    `/etc/systemd/system/auditd.service`{.literal} 文件，例如：
    ``` screen
    # vi /etc/systemd/system/auditd.service
    ```
3.  注释掉包含 `augenrules`{.literal} 的行，将包含
    `auditctl -R`{.literal} 命令的行取消注释：
    ``` screen
    #ExecStartPost=-/sbin/augenrules --load
    ExecStartPost=-/sbin/auditctl -R /etc/audit/audit.rules
    ```
4.  重新载入 `systemd`{.literal} 守护进程以获取
    `auditd.service`{.literal} 文件中的修改：
    ``` screen
    # systemctl daemon-reload
    ```
5.  重启 `auditd`{.literal} 服务：
    ``` screen
    # service auditd restart
    ```
:::
::: itemizedlist
**其他资源**
-   `augenrules(8)`{.literal} 和 `audit.rules(8)`{.literal} 手册页。
-   [auditd 服务重启将覆盖对 /etc/audit/audit.rules
    所做的修改](https://access.redhat.com/solutions/1505033){.link}。
:::
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#proc_setting-up-audit-to-monitor-software-updates_auditing-the-system}设置审计来监控软件更新 {.title}
:::
您可以使用预先配置的规则 `44-installers.rules`{.literal} 将 Audit
配置为监控以下安装软件的工具：
::: itemizedlist
-   `dnf`{.literal}
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    由于`dnf`{.literal} 在 RHEL 中是符号链接，因此 `dnf`{.literal}
    审计规则中的路径必须包含符号链接的目标。要接收正确的审计事件，请通过将
    `path=/usr/bin/dnf`{.literal} 路径改为 `/usr/bin/dnf-3`{.literal}
    来修改 `44-installers.rules`{.literal} 文件。
    :::
-   `yum`{.literal}
-   `pip`{.literal}
-   `npm`{.literal}
-   `cpan`{.literal}
-   `gem`{.literal}
-   `luarocks`{.literal}
:::
要监控 `rpm`{.literal} 实用程序，请安装 `rpm-plugin-audit`{.literal}
软件包。然后，审计会在安装或升级软件包时生成 `SOFTWARE_UPDATE`{.literal}
事件。您可以通过在命令行中输入 `ausearch -m SOFTWARE_UPDATE`{.literal}
来列出这些事件。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
预配置的规则文件不能用于 `ppc64le`{.literal} 和 `aarch64`{.literal}
架构的系统。
:::
::: itemizedlist
**先决条件**
-   `auditd`{.literal} 是根据 [为安全环境配置
    auditd](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#configuring-auditd-for-a-secure-environment_auditing-the-system){.link}
    中提供的设置进行配置的。
:::
::: orderedlist
**步骤**
1.  将预先配置的规则文件 `44-installers.rules`{.literal} 从
    `/usr/share/audit/sample-rules/`{.literal} 目录复制到
    `/etc/audit/rules.d/`{.literal} 目录中：
    ``` screen
    # cp /usr/share/audit/sample-rules/44-installers.rules /etc/audit/rules.d/
    ```
2.  加载审计规则：
    ``` screen
    # augenrules --load
    ```
:::
::: orderedlist
**验证**
1.  列出载入的规则：
    ``` screen
    # auditctl -l
    -p x-w /usr/bin/dnf-3 -k software-installer
    -p x-w /usr/bin/yum -k software-installer
    -p x-w /usr/bin/pip -k software-installer
    -p x-w /usr/bin/npm -k software-installer
    -p x-w /usr/bin/cpan -k software-installer
    -p x-w /usr/bin/gem -k software-installer
    -p x-w /usr/bin/luarocks -k software-installer
    ```
2.  执行安装，例如：
    ``` screen
    # dnf reinstall -y vim-enhanced
    ```
3.  在审计日志中搜索最近的安装事件，例如：
    ``` screen
    # ausearch -ts recent -k software-installer
    ––––
    time->Thu Dec 16 10:33:46 2021
    type=PROCTITLE msg=audit(1639668826.074:298): proctitle=2F7573722F6C6962657865632F706C6174666F726D2D707974686F6E002F7573722F62696E2F646E66007265696E7374616C6C002D790076696D2D656E68616E636564
    type=PATH msg=audit(1639668826.074:298): item=2 name="/lib64/ld-linux-x86-64.so.2" inode=10092 dev=fd:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 obj=system_u:object_r:ld_so_t:s0 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0
    type=PATH msg=audit(1639668826.074:298): item=1 name="/usr/libexec/platform-python" inode=4618433 dev=fd:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 obj=system_u:object_r:bin_t:s0 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0
    type=PATH msg=audit(1639668826.074:298): item=0 name="/usr/bin/dnf" inode=6886099 dev=fd:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 obj=system_u:object_r:rpm_exec_t:s0 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0
    type=CWD msg=audit(1639668826.074:298): cwd="/root"
    type=EXECVE msg=audit(1639668826.074:298): argc=5 a0="/usr/libexec/platform-python" a1="/usr/bin/dnf" a2="reinstall" a3="-y" a4="vim-enhanced"
    type=SYSCALL msg=audit(1639668826.074:298): arch=c000003e syscall=59 success=yes exit=0 a0=55c437f22b20 a1=55c437f2c9d0 a2=55c437f2aeb0 a3=8 items=3 ppid=5256 pid=5375 auid=0 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=pts0 ses=3 comm="dnf" exe="/usr/libexec/platform-python3.6" subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 key="software-installer"
    ```
:::
:::
::: section
::: titlepage
# []{#auditing-the-system_security-hardening.html#proc_monitoring-user-login-times-with-audit_auditing-the-system}使用审计监控用户登录时间 {.title}
:::
要监控特定时间哪个用户登录了，您不需要以任何特殊的方式配置审计。您可以使用
`ausearch`{.literal} 或 `aureport`{.literal}
工具，它们提供不同的方法来展示相同的信息。
::: itemizedlist
**先决条件**
-   `auditd`{.literal} 是根据 [为安全环境配置
    auditd](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#configuring-auditd-for-a-secure-environment_auditing-the-system){.link}
    中提供的设置进行配置的。
:::