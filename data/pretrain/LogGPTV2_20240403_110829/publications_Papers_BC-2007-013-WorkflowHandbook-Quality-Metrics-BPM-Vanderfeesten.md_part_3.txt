of deadlocks. For example, it is possible to load the SAP reference model expressed
in terms of EPCs into ProM and analyze it using reduction rules or invariants. ProM
also allows for the verification of a variety of modeling languages (e.g., BPEL,
Staffware, etc.) using a mapping onto Petri nets. Besides model verification, ProM
also allows for the calculation of various other quality metrics, e.g., cohesion and
coupling, complexity, size, etc. Given the topic of this chapter, we elaborate on these
metrics.
Complexity and Size in ProM
In order to study the complexity of process models we have developed several plug-
ins for the ProM framework. As stated previously, ProM provides various ways of
model analysis, such as soundness and absence of deadlocks. The newly developed
plug-ins target the analysis of the quality of process designs. Figure 2 shows one of
the plug-ins analyzing the complexity, coupling, and size of an EPC process model.
Figure 2: Screen shot of the ProM tool showing the analysis sheet for EPC's. For the
EPC process model presented, several metrics are calculated. Note that this tool is
still under development and that some concepts on the screen shot (e.g. BA Tree, and
Weighted Coupling) are not explained in this chapter.
As can be seen from the figure, the size of a process model has several components,
such as the number of events, functions, ORs, XORs, and ANDs. Events and func-
tions are specific elements to EPCs. The figure also shows the Control-Flow Com-
plexity (Cardoso, 2005a) of the process displayed which is 6, the density (Mendling,
2006) which is 0.048, and the weighted coupling which is 0.515. While, at this
8
QUALITY METRICS FOR BUSINESS PROCESS MODELS
point in time, these numbers may be rather complicated to interpret for someone
outside this area of research, we expect that when organizations have successfully
implemented quality metrics as part of their process development projects, empiri-
cal results and practical results from real world implementation will set limits and
threshold for processes. Recall that this scenario happened with the McCabe cyc-
lomatic complexity (Frappier, Matwin, & Mili, 1994).
Data oriented Cohesion and Coupling in ProM
Within the ProM framework, also an environment is developed to calculate cohesion
and coupling metrics based on the theory in (Reijers & Vanderfeesten, 2004). The
proposed coupling-cohesion ratio can be used to compare alternative designs de-
fined on the same PDM. In this context, a design is a grouping of data elements and
their respective operations into activities, such that every activity contains one or,
preferably, more operations. The best design is the one with the lowest coupling-
cohesion ratio.
In Figure 2 and Figure 3, some screen shots of the cohesion and coupling environ-
ment are shown. Both screen shots contain a different design based on the same
PDM. In the first design (Figure 2) the process cohesion value is 0.183, the process
coupling value is 0.714, and the coupling-cohesion ratio is 3.902. The part of activ-
ity A is also indicated in the PDM. For the second design (Figure 3) these values are:
0.123, 0.867, and 7.049. When comparing the values for the coupling-cohesion
ratio for both designs we see that the first design has a lower ratio and thus is the
better alternative of the two process designs.
Figure 3: Screen shot of the cohesion and coupling environment in ProM for the first
design. This design contains seven activities that are defined on the PDM. Activity A
is indicated.
9
QUALITY METRICS FOR BUSINESS PROCESS MODELS
Figure 4: A screen shot of the cohesion and coupling environment for design B in
ProM. Design B contains six activities that are defined on the PDM and it differs from
design A because activities A and E are merged. Activity AE is indicated in the PDM in
the screen shot.
CONCLUSION
Currently, organizations are modeling and designing business processes without
the aid of metrics to question the quality or properties of their models. As a result, it
may happen that simple processes are modeled in a complex and unsuitable way.
This may lead to a lower understandability, higher maintenance costs, and perhaps
inefficient execution of the processes in question (e.g. when such models are used
to enact). Considering the efforts that modern organizations spend on creating and
maintaining business processes we can truly speak of a great opportunity for the
use of quality metrics here.
Examples of important questions that can be made relative to a process model are:
“can process P1 be designed in a simpler way?”, “what is the complexity of process
P2?”. “is process P3 difficult to adapt?” and “can process P4 be easily restructured
into sub-processes?” In the future, these kinds of questions can perhaps be satis-
factorily answered with the use of process metrics such as coupling, cohesion,
complexity, modularity, and size metrics. Each of these metrics analyses a business
process from a particular perspective.
It is clear that quality metrics for business processes need yet to come to full bloom.
In particular, much empirical work needs to be done to assess the applicability and
validity of the various proposed metrics. However, both for practitioners and re-
searchers there is highly attractive prospect of sophisticated tools coming available
that are capable to thoroughly analyze process models against low cost, at consid-
erable speed, and yielding tangible business benefits.
10
QUALITY METRICS FOR BUSINESS PROCESS MODELS
ACKNOWLEDGEMENT
This research is partly supported by the Technology Foundation STW, applied sci-
ence division of NWO and the technology programme of the Dutch Ministry of Eco-
nomic Affairs.
REFERENCES
Aalst, W.M.P. van der (1999). On the automatic generation of workflow processes based on
product structures. Computers in Industry, 39, 2, pp. 97-111.
Aalst, W.M.P. van der; Weijters, A.J.M.M.; and Maruster, L. (2004). Workflow Mining: Discov-
ering Process Models from Event Logs. IEEE Transactions on Knowledge and Data Engi-
neering, 16(9), pp.1128–1142.
Baresi, L.; Casati, F.; Castano, S.; Fugini, M.; Mirbel, I.; Pernici, B.; and Pozzi, G. (1999).
Workflow Design Methodology. In P. Grefen, B. Pernicii and G. Sanchez, editors, Database
Support for Workflow Management: the WIDE Project, pp. 47-94, Kluwer Academic Pub-
lishers.
Bieman, J.M., and Kang, B.-K. (1998). Measuring Design-level Cohesion. IEEE Transactions
on Software Engineering, 24, 2, pp. 111-124.
Brandes, U., and Erlebach, T., editors (2005). Network Analysis: Methodological Foundations
[outcome of a Dagstuhl seminar, 13-16 April 2004], volume 3418 of Lecture Notes in
Computer Science. Springer-Verlag.
Card, D.N.; Church, V.E.; and Agresti, W.W. (1986). An Empirical Study of Software Design
Practices. IEEE Transactions on Software Engineering, 12, 2, pp. 264-271.
Cardoso, J. (2005a). How to Measure the Control-flow Complexity of Web Processes and
Workflows. In: Fischer, L., ed., Workflow Handbook 2005, pp. 199-212, Lighthouse Point.
Cardoso, J. (2005b). Control-flow Complexity Measurement of Processes and Weyuker’s Prop-
erties. Proceedings of the 6th International Enformatika Conference (IEC 2005), Interna-
tional Academy of Sciences, Budapest, Hungary. Vol. 8pp. 213-218.
Cardoso, J. (2006). Process control-flow complexity metric: An empirical validation, IEEE In-
ternational Conference on Services Computing (IEEE SCC 06), Chicago, USA, pp. 167-
173, IEEE Computer Society.
Cardoso, J.; Mendling, J.; Neuman, G. & Reijers, H.A. (2006). A discourse on complexity of
process models. In: Eder, J.; Dustdar, S. et al, editors, BPM 2006 workshops. Lecture
Notes in Computer Science 4103, Springer-Verlag, Berlin, pp. 115-126.
Conte, S.D.; Dunsmore, H.E.; and Shen, V.Y. (1986). Software Engineering Metrics and Mod-
els, Benjamin/Cummings Publishing Company, Inc..
Dongen, B.F. van; Alves de Medeiros, A.K.; Verbeek, H.M.W. ; Weijters, A.J.M.M.; and Aalst,
W.M.P. van der (2005). The ProM framework: A New Era in Process Mining Tool Support.
In G. Ciardo and P. Darondeau, editors, Application and Theory of Petri Nets 2005, vol-
ume 3536 of Lecture Notes in Computer Science, pp. 444–454, Springer-Verlag, Berlin.
Frappier, M., Matwin, S. and Mili. A. (1994). Software Metrics for Predicting Maintainability:
Software Metrics Study: Technical Memorandum 2. Canadian Space Agency, January 21.
Gruhn, V., and Laue, R. (2006). Complexity metrics for business process models. In: Witold
Abramowicz and Heinrich C. Mayer, editors, 9th international conference on business in-
formation systems (BIS 2006), vol. 85 of Lecture Notes in Informatics, pp. 1-12.
Guceglioglu, A.S., and Demiros, O.W. (2005). Using Software Quality Characteristics to
Measure Business Process Quality. In W.M.P. van der Aalst, B. Benatallah, F. Casati, and
F. Curbera, editors, Business Process Management (BPM 2005), Lecture Notes in Com-
puter Science, volume 3649, pages 374-379, Springer-Verlag, Berlin.
Jones, T. C. (1986). Programming Productivity. New York, McGraw-Hill.
Kang, B.-K., and Bieman, J.M. (1996). Using Design Cohesion to Visualize, Quantify, and
Restructure Software. 8th International Conference on Software Engineering and Knowl-
edge Engineering, Knowledge Systems Institute, Skokie IL, pp. 222-229.
Kang, B.-K., and Bieman, J.M. (1999). A Quantitative Framework for Software Restructuring.
Journal of Software Maintenance, 11, pp. 245-284.
11
QUALITY METRICS FOR BUSINESS PROCESS MODELS
Keller, G., and Teufel, T. (1998). SAP(R) R/3 Process Oriented Implementation: Iterative Proc-
ess Prototyping. Addison-Wesley.
Kostoff, R.N. (1999). Science and Technology Innovation. Technovation, 19, 10, pp. 593-604.
Latva-Koivisto, A.M. (2001). Finding a complexity measure for business process models. Hel-
sinki University of Technology, Systems Analysis Laboratory.
Mendling, J. (2006). Testing Density as a Complexity Metric for EPCs. Technical Report JM-
2006-11-15. Vienna University of Economics and Business Administration. Retrieved from
http://wi.wu-wien.ac.at/home/mendling/publications/TR06-density.pdf
Mendling, J.; Moser, M.; Neumann, G.; Verbeek, H.M.W.; Dongen, B.F. van; and Aalst,
W.M.P. van der (2006a). A Quantitative Analysis of Faulty EPCs in the SAP Reference
Model. BPM Center report BPM-06-08, Eindhoven University of Technology, Eindhoven.
Mendling, J.; Moser, M.; Neumann, G.; Verbeek, H.M.W.; Dongen, B.F. van; and Aalst,
W.M.P. van der (2006b). Faulty EPCs in the SAP Reference Model. In: J.L. Fiadeiro, S.
Dustdar and A. Sheth, editors, Proceedings of BPM2006, Lecture Notes in Computer Sci-
ence, volume 4102, pp. 451-457, Springer-Verlag, Berlin.
Myers, G.J. (1978). Composite/Structured Design. Van Nostrand Reinhold, New York, NY.
Reijers, H.A. (2003). Design and control of workflow processes: business process management
for the service industry. Lecture Notes in Computer Science 2617, Springer-Verlag, Berlin.
Reijers, H.A. (2003). A cohesion metric for the definition of activities in a workflow process.
Proceedings of the 8th CAiSE/IFIP8.1 International workflop on Evaluation of Modeling
Methods in Systems Analysis and Design (EMMSAD 2003), pp. 116-125.
Reijers, H.A.; Limam Mansar, S.; and Aalst, W.M.P. van der (2003). Product-Based Workflow
Design. Journal of Management Information Systems, 20, 1, pp. 229-262.
Reijers, H. A., and Vanderfeesten, I.T.P. (2004). Cohesion and Coupling Metrics for Workflow
Process Design. In J. Desel, B. Pernici, and M. Weske, editors, Proceedings of the 2nd In-
ternational Conference on Business process Management (BPM 2004), Lecture Notes in
Computer Science volume 3080, pp. 290-305, Springer-Verlag, Berlin.
Rozinat, A., and Aalst, W.M.P. van der (2006). Conformance Testing: Measuring the Fit and
Appropriateness of Event Logs and Process Models. In C. Bussler et al, editor, BPM 2005
Workshops (Workshop on Business Process Intelligence), volume 3812 of Lecture Notes in
Computer Science, pp. 163-176, Springer-Verlag, Berlin.
Selby, R.W., and Basili, V.R. (1991). Analyzing Error-Prone System Structure. IEEE Transac-
tions on Software Engineering, 17, 2, pp. 141-152.
Shen, V.Y.; Yu, T.-J.; Thebaut, S.M.; and Paulsen, L.R. (1985). Identifying Error-Prone Soft-
ware, IEEE Transactions on Software Engineering, 11, 4, pp. 317-324.
Shepperd, M. (1993). Software Engineering Metrics Volume I: Metrics and Validations,
McGraw-Hill.
Troy, D.A., and Zweben, S.H. (1981). Measuring the Quality of Structured Designs, Journal of
Systems and Software, vol. 2, pp. 113-120.
Weyuker, E.J. (1988). Evaluating Software Complexity Measures. IEEE Transactions on Soft-
ware Engineering, 14, 9, pp. 1357-1365.
12