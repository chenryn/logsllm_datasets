---
author: David Gewirtz
category: 分享
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5685
date: '2020-06-22 00:52:00'
editorchoice: false
excerpt: 我在 Mac 上编写 WordPress 插件，这些是我的工具列表。
fromurl: https://www.zdnet.com/article/one-developers-favorite-mac-coding-tools-for-php-and-web-development/
id: 12337
islctt: true
largepic: /data/attachment/album/202006/22/005056o9lr9yt42b3yf4gj.jpg
permalink: /article-12337-1.html
pic: /data/attachment/album/202006/22/005056o9lr9yt42b3yf4gj.jpg.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 我在 Mac 上编写 WordPress 插件，这些是我的工具列表。
tags:
- PHP
- Mac
thumb: false
title: Mac 上的 Web 开发者最喜欢的编程工具
titlepic: true
translator: wxy
updated: '2020-06-22 00:52:00'
---
![](/data/attachment/album/202006/22/005056o9lr9yt42b3yf4gj.jpg)
> 
> 我在 Mac 上编写 WordPress 插件，这些是我的工具列表。
> 
> 
> 
根据 [2020 年 Stack Overflow 开发者调查报告](https://insights.stackoverflow.com/survey/2020#technology-platforms-professional-developers5)，在 Mac 上工作的编码者（27.5%）比在 Linux 上工作的编码者（26.6%）要多一点。相比之下，使用 Windows 作为开发机器的开发者数量几乎是其两倍（45.8%）。多年来，我在不同的平台之间跳来跳去，但我发现自己经常回到 Mac 上。
事实上，我从 Mac 专用的应用程序中获得了很多生产力，尤其是用于视频制作的 Final Cut Pro X。我喜欢能够在同一台机器上运行 Windows、Linux 和 Mac 应用程序，而这只有在 Mac 上才能实现（我将在下文中详谈）。虽然 Windows 也提供了一个强大的命令行环境，但我喜欢拥有一个完全是 Linux 风格的命令行，并且 Mac 上集成良好的图形工具对其进行了完整补充。
在本文中，我将向你展示我使用的工具。许多是跨平台的，而另一些是 Mac 专用的。虽然我过去曾开发过 Mac 应用和 iOS 应用，但我现在的开发工作完全是针对 Web 的。我维护了 10 个开源的 WordPress 插件，包括一个支持了 10000 多个非营利组织的捐款插件和一个支持了 20000 多个网站的网站隐私插件。
虽然我过去用过很多编程语言（也写过自己的编程语言），但我目前的项目主要涉及 PHP 和 JavaScript，并擅长 CSS、HTML 和 SQL（及一些框架）。为了创建和维护这些代码，我使用了下面所示的各种工具。在本篇中，我将向你展示我安装的工具。在以后的文章中，我将向你展示和深入介绍有助于完成工作的云服务。
就这样，让我们开始吧。
### 集成开发环境：PhpStorm
![](/data/attachment/album/202006/22/005211trurrife8ruu6jgu.jpg)
关于代码编辑和开发环境的话题，引发的宗教式的争论我都数不清了。有些程序员坚持走老路，只依靠命令行和 vi、emacs 等编辑器。有些程序员喜欢轻量级的文本编辑器，有些则喜欢可扩展性更强的编辑器，比如 vi 和 emacs。其他人则喜欢更加可扩展的编辑器，比如 Atom 和 Sublime Text。还有一些编码者，包括我自己，喜欢完整的集成开发环境，比如 PhpStorm、Visual Studio Code 和 Xcode（主要是它的 Mac 和 iOS 原生开发工具）。
我选择的武器一直是 [PhpStorm](https://www.jetbrains.com/phpstorm/)。我已经使用它多年了。它有一个优秀的集成调试环境，可以进行本地和远程调试。它还集成了我日常使用的各种功能，从它自带的终端窗口到文件同步，再到版本控制和逐行文件历史记录。另外，它还有丰富的插件可供选择，可以扩展和提升编码体验。
我最喜欢的一些插件包括：
* **Rainbow Brackets（彩虹括号）**：一个很棒的插件，它不仅能用行匹配括号，还能用颜色来匹配。它可以非常容易地看到哪些代码属于哪里。
* **String Manipulation（字符串操作）**：各种各样的字符串操作、大小写转换等等。
* **WordPress**：语法格式化和 WordPress 式的函数格式化，以及对 WordPress 挂钩的支持。对于任何一个 WordPress 插件的编码者来说都是必备的。
### 本地环境：Local
![](/data/attachment/album/202006/22/005213brubb7cxgbl7cg55.jpg)
在做 Web 开发时，通常最好有一个本地开发栈。[Local](https://localwp.com/) 就是这样一个栈。它提供了 Nginx 或 Apache、MySQL、带有 Xdebug 的 PHP 安装包，以及其他一些资源，最重要的是它带有一个隧道，这样基于互联网的资源就可以访问本地环境进行编码和测试，内置了 SSL 集成，以及 MailHog —— 它可以拦截电子邮件，用于基于电子邮件的应用测试。哦，而且是免费的。
### 快速编辑：Sublime Text
![](/data/attachment/album/202006/22/005215ubne3ydrvsye2v0o.jpg)
我之前就提到过 [Sublime Text](https://www.sublimetext.com/)，很多编码者都把它作为主要的开发环境。它几乎支持一系列传说中的插件和附加组件。当我想在 PhpStorm 固有的项目结构之外编辑项目文件时，我使用 Sublime Text 作为一个快速编辑器。它的速度快，反应灵敏，而且相当有特点。
### 提交文件到仓库：SmartSVN
![](/data/attachment/album/202006/22/005216otgmxp87c7hv3fcc.jpg)
WordPress 插件库（所有通过的插件都在这里提供给 WordPress 用户）不使用 Git 或 Github，而是使用 SVN 源码控制系统。我觉得 SVN 的命令行很烦人，所以我使用一个叫做 [SmartSVN](https://www.smartsvn.com/) 的图形化用户界面来将我的文件发送到仓库中。它大大降低了我在发布新版本时出错的几率。
### 潇洒的命令行：iTerm2
![](/data/attachment/album/202006/22/005217it4tbt4nvntp4t3p.jpg)
虽然在我的开发工具箱中，我更喜欢使用 GUI 界面来实现大部分功能，但我并不害怕在适当的时候使用命令行。虽然只使用标准的 MacOS 终端也是可以的，但我更喜欢 [iTerm2](https://www.iterm2.com/)。它提供了分屏、命令补全、粘贴历史等功能。它还可以根据你的心情和项目进行配置。