##### Description of the problem
In creating a shadow for one scene, the basic processes include creating an
available light, a cast shadow object, a receive shadow object. The problem I
met is in the light's part.
I create a spotlight with specifying its target to be a cube, adding the
shadow camera to one `camerahelper` and then rendering them, but **results
seem different in two different three.js versions**. The grammar and APIs I
obeyed is the newest document in three.js website, can be accessed here.
A code snippet in two different three.js version shows here (the same codes
with just different three.js version included):
  * jsfiddle - r85, scripted loaded via cloudflare's CDN
  * jsfiddle - r84, scripted loaded via cloudflare's CDN
I also took some screenshots to show the differences between them:
![image](https://cloud.githubusercontent.com/assets/4990015/25666094/14452174-3052-11e7-8361-51c2b78f1f04.png)
_The **abnormal one (r85)** with shadow doesn't displayed in the right place,
as well as the shadow camera fixed to vec(0,0,0). The shadow camera scope is
emphasized with yellow lines in the picture._
![image](https://cloud.githubusercontent.com/assets/4990015/25666259/96c56fe6-3052-11e7-9fe2-7d7beecde5b0.png)
_The **good (r84)** one with shadow displayed in the right position, but the
shadow camera still fixed to vec(0,0,0), which I think it's not supposed to be
that, since a good shadow camera should follow the position of its belonged
light? (such as the following pic)_
![image](https://cloud.githubusercontent.com/assets/4990015/25666477/3efc95d6-3053-11e7-83ed-8cb93a56d7b6.png)
**It seems r85 can't display shadow in spotlight normally, but there is no
problem in r84; on the other hand, these two versions both have a wrong shadow
camera position in spotlight environment.**
##### Three.js version
  * r85
##### Browser
I didn't test all the browsers but I think it is apparently not the browser
internal issues.
  * All of them
  * Chrome
  * Firefox
  * Internet Explorer (Not test)
##### OS
  * [] All of them
  * Windows
  * macOS
  * Linux
  * Android
  * iOS
##### Hardware Requirements (graphics card, VR Device, ...)
Just follow the basic requirements of three.js' runtime environment is enough
to catch this problem.