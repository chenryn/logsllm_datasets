Cryptocurrencies that support confidential transactions (e.g.,
Monero12 and Zerocash [10]) and specifically the privacy of the
transactional amount seem to be the right tool for our problem.
However, note that the amount privacy is protected from outsiders
who oversee and maintain the underlying blockchain/consensus
system, but not the payee. More seriously, the core problem, namely,
privacy-preserving proof that a user has settled a bill, and having
the payee return the acknowledgment, remains unsolved. One could
imagine a complex zero-knowledge proof that somehow tightly
couples the encryption of the total amount to encryption of the
corresponding customer identity, and some secure-two-party com-
putation that returns a signature on the identity. Even assuming
it can be efficiently done, an integral part of it contains a witness-
indistinguishable proof among all pending and certified amounts
(otherwise, one can easily prove an imaginary bill of 0 amount has
been settled), which is essentially a paraphrase of our problem.
6.2 Privacy-Preserving Billing in Smart Grids
The general goal for privacy-preserving billing aims to protect the
privacy of fine-grained utility usage in the bill generation while
remaining verifiable by the UC. To protect individual readings,
Jawurek et al. [33] hide them by commitments and use their ho-
momorphic property for computing a linear function, summing up
the multiplication of the readings and the cost from tariffs/price
schema for different periods. Rial and Danezis [48] further apply
zero-knowledge proof to verify the correctness of the bill in each
11Alternatively, if one coin is proven each time, an additional two-party protocol is
required to let the UC know that a particular customer has paid a coin. For example,
the RU needs to present another signature from the UC and requests to update such a
signature on a decreasing outstanding balance, both in zero-knowledge. This approach
still takes O(K) time and a high number of communication rounds.
12https://www.getmonero.org, http://ia.cr/2015/1098
billing period without revealing it. Realizing that even the aggre-
gated bill may leak individual values, Danezis et al. [27] use a
differentially-private mechanism to add noise to the aggregated
bill from the previous approach [48]. The noise serves as a con-
figurable trade-off between payment accuracy and privacy level.
Since the payment amount differs from the original one, they fur-
ther design an oblivious payment protocol that allows the users to
get rebates (in the amount of their noise) in future payments. Fi-
nally, Lin et al. [37] proposed privacy-preserving bill generation and
load monitoring by using distributed pseudorandom functions [40],
which have been utilized in distributed cryptosystems [20] and
many other privacy-preserving aggregation schemes ([28, 51], also
see Appendix A). Nevertheless, all of them did not consider hiding
the total amount beyond adding noise, which is not an effective
protection mechanism without causing too much error.
6.3 Privacy-Preserving Pricing in E-Tolling
Electronic toll collection system is another kind of CPS that makes
use of trusted hardware on the car as a “meter” to record how much
toll a driver should pay after passing through a certain place. There
are quite a few privacy-preserving electronic toll pricing systems.
VPriv [46] uses secure two-party computation (2PC) to ensure
tolling privacy. To ensure users cannot cheat on the total toll price,
the scheme asks them to upload their historical driving information,
including license plate, location, and time. Meanwhile, a trusted
authority needs to randomly record users’ driving information as
well and then challenge them with these records during payment.
Apparently, it compromises the user privacy at the “checking spots.”
PrETP [9] is proposed with similar goals. Rather than using 2PC, the
toll charger first collects homomorphic commitments from users.
Then the toll service provider asks them to open the commitments
of certain location-time tuples corresponding to its random spot-
checks. Each user only reveals the payment amount and location-
time tuples in the physical vicinity of random spot-checks.
Moreover, they prevent users from manipulating the toll price
by spot checks, which reveal the price, inevitably violating privacy.
6.4 On “Aggregate Blind Signatures”
Aggregate signature [13] certifies a number of messages, and the
number of messages reveals the payment amount. A recent aggre-
gate signature scheme considers blind signing functionality [45]. It
requires the signatures to be aggregated come from different signers,
which does not match our need since there is only one company that
issues receipts as signatures. In other words, aggregating signatures
from a single signer remains a technical challenge.
The notion of aggregate blind signature, intuitively, is vulnerable
to the following issue. When the messages can be hidden, a mali-
cious user may hide multiple messages to be aggregated in a single
blind-signing request. Any scheme should remain secure against
such kinds of attacks. The closest related work we can find is a
privacy-preserving payment system for public transport [49] with
a refund feature. Similar to our approach, the above potential secu-
rity issue is resolved by assigning an authenticated random group
element to each of the signature requesters. Its core cryptographic
mechanism appears to be a “history-free sequential aggregate blind
signature” signing protocol over a restricted message set. A signer
229ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
Sherman S. M. Chow, Ming Li, Yongjun Zhao, and Wenqiang Jin
can derive the next aggregate using only the previous aggregate
(but not the history of previous messages and the corresponding
public keys) apart from (the obvious inputs of) the current message
to be signed and the signature key. In their application, all signa-
tures to be aggregated come from the same signer, who cannot
learn previous aggregates and the corresponding messages. More-
over, the aggregate signature verification is over an aggregate of
the messages instead of all the messages, conveniently storing the
amount to be refunded.
The signature requester needs to maintain state information
for the sequential aggregation, which is slightly inconvenient in
general. The most important distinction from our approach is that,
an amount d is encoded as the power of a secret α as the exponent of
the random group element. Correspondingly, to enable verification,
the public key size of their scheme is as large as the magnitude
of the aggregatable amount, i.e., O(K)-size when the amount to
pay is K unit dollars. With respect to the random group element,
the “aggregate signature” is deterministic, meaning that a zero-
knowledge proof is needed to hide the amount. In contrast, our
approach is based on the collection of K signatures to aggregate
instead of an explicit encoding of the value K, freeing us from the
zero-knowledge proof. Our underlying primitive allows arbitrary
(or non-sequential) aggregation and features a constant-size public-
key independent of the maximum aggregatable amount.
Finally, we remark that it is of theoretical interest to propose an
efficient aggregate blind signature scheme in the standard model
without any trusted device.
7 APPLICATIONS IN MOBILE PAYMENT
To show the wide applicability of our Sipster system beyond the
context of cyber-physical systems, we describe how it can be applied
to mobile payment systems to enhance payment privacy. We note
that some current mobile payment systems also rely on the TPM in
the cellphone, but for payment security instead of payment privacy.
The system involves three types of parties: the bank, the mer-
chants, and bank clients holding a (lightweight) trusted device
manufactured by a third-party company that does not collude with
the bank. The clients want to enjoy the convenience of mobile pay-
ment, yet do not want to reveal their spending pattern to the bank
or major global-scale smartphone manufacturers.
We can apply Sipster to realize a privacy-preserving credit-card
system [25]. Namely, the bank client can carry out transactions
with different merchants. From time to time, the client pays the
bank in unit amounts. These payments should collectively settle all
the transactions made within a certain billing period.
To use Sipster, the bank acts as the UC, the trusted device cor-
responds to the SM, and bank clients correspond to RUs. When
a bank client wants to pay the merchant K units of money, it en-
ters the amount K to the device, which locally outputs K (blinded)
random tokens as in TokenGen (cf. Algorithm 1), but this time it
further outputs a (normal) signature on the amount K (and a ran-
dom serial number). The merchant will redeem money from the
bank by presenting this signature. For each token generated by
the trusted device, the bank client pays back the bank some (real)
money in some private manner, such that the bank will sign on
the token after receiving the payment. The bank’s signature serves
as the receipt, in the same way as ReceiptGen (cf. Algorithm 2).
At the end of the billing period, the trusted device outputs a bill
via BillGen (cf. Algorithm 3), representing the total amount that
the client should settle. Suppose the bank client has indeed settled
the bill; it combines the receipts in the manner of CombineReceipt
(cf. Algorithm 4) and proves to the bank analogously.
The security of the above mobile payment system comes directly
from the security of our Sipster system. The bank learns nothing
about the client’s payment pattern and amount. Nevertheless, it
is assured that it has received enough money from its client if the
bill verification algorithm passes. The threat model of the above
payment system is the same as our CPS example (Section 2.3), with
the corresponding parties’ identity substituted as above.
8 CONCLUSION
We propose Sipster, a novel anonymous payment settlement proto-
col for cyber-physical systems without generic (and hence heavier)
techniques such as zero-knowledge proof or two-party computation
protocols. It protects the privacy of customers against utility com-
panies, while at the same time ensuring that the utility company
gets correct payment according to fine-grained tariff policy.
We conduct extensive simulations to demonstrate that our sys-
tem is efficient for practical deployment. In particular, the verifica-
tion time at the utility company is only linearly dependent on the
number of customers but independent of the individual amount.
Technically, we devise a variant of “aggregate blind signature”
functionality13 using smart meters equipped with a TCB. We believe
such kinds of functionalities will find application elsewhere, most
likely in the context of e-cash and anonymous credentials. We
briefly mention how this can be used as a privacy-preserving mobile
payment system in the credit card or IOU model, where the mobile
device locally records the transaction amount of its owner for a
given period, that the owner should eventually settle with the bank.
This work refutes the thought (of some non-cryptographers
perhaps) that there be no payment privacy since the utility company
must receive and see (sufficient) money. We demonstrate that a
“win-win” situation is possible: the utility company can enjoy pay-
as-you-go while users can hide unit payments “in-the-crowd.”
ACKNOWLEDGMENTS
We thank the anonymous reviewers for their helpful comments and
Wing-Cheong Lau for a quick conversation on mobile payment. We
are also grateful to the interactive review process offered by the
ACSAC Program Committee and Artifact Committee. Finally, we
thank Giorgio Giacinto for his support in the publication stage.
Chow: This research is supported by the Research Grant Council,
University Grants Committee, Hong Kong under the General Re-
search Fund (CUHK 14210217, 14209918, 14210319, and 14210621).
Zhao: This research is supported by the National Research Foun-
dation, Singapore under its Strategic Capability Research Centres
Funding Initiative. Any opinions, findings and conclusions or recom-
mendations expressed in this material are those of the authors and
do not reflect the views of National Research Foundation, Singapore.
13The blind signing functionality is deterministic and hence does not suffer from the
recent polynomial-time algorithm [11] of solving the “random inhomogeneities in
an overdetermined solvable system of linear equations” problem for large enough
dimensions, which affects a large class of Schnorr-style (blind) signatures.
230Sipster: Settling IOU Privately and Quickly with Smart Meters
ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
REFERENCES
[1] Masayuki Abe, Sherman S. M. Chow, Kristiyan Haralambiev, and Miyako Ohkubo.
2013. Double-Trapdoor Anonymous Tags for Traceable Signatures. Int. J. Inf. Sec.
12, 1 (2013), 19–31. Preliminary version appeared in ACNS 2011.
[2] Masayuki Abe, Fumitaka Hoshino, and Miyako Ohkubo. 2016. Design in Type-I,
Run in Type-III: Fast and Scalable Bilinear-Type Conversion Using Integer Pro-
gramming. In CRYPTO Part III. 387–415.
[3] Gergely Ács and Claude Castelluccia. 2011. I Have a DREAM! (DiffeRentially
privatE smArt Metering). In Information Hiding. 118–132.
[4] Ross Anderson and Shailendra Fuloria. 2010. On the Security Economics of
Electricity Metering. In Workshop on the Economics of Information Security (WEIS).
18 pages.
[5] Giuseppe Ateniese, Bernardo Magri, and Daniele Venturi. 2020. Subversion-
Resilient Signatures: Definitions, Constructions and Applications. Theor. Comput.
Sci. 820 (2020), 91–122.
[6] AT&T. 2015. AT&T Innovation Leads to Cellular Communications Module
Reference Design and Advanced Prepay Energy. https://about.att.com/story/att_
expands_smart_grid_leadership.html.
[7] AT&T. 2016.
PrePay Energy.
http://www.business.att.com/content/
productbrochures/smartgrid-prepay-energy-product-brief.pdf.
[8] Karim Baghery. 2020. Subversion-Resistant Commitment Schemes: Definitions
and Constructions. In Security and Trust Management (STM). 106–122.
[9] Josep Balasch, Alfredo Rial, Carmela Troncoso, Bart Preneel, Ingrid Verbauwhede,
and Christophe Geuens. 2010. PrETP: Privacy-Preserving Electronic Toll Pricing.
In USENIX Security. 63–78.
[10] Eli Ben-Sasson, Alessandro Chiesa, Christina Garman, Matthew Green, Ian Miers,
Eran Tromer, and Madars Virza. 2014. Zerocash: Decentralized Anonymous
Payments from Bitcoin. In IEEE S&P. 459–474.
[11] Fabrice Benhamouda, Tancrède Lepoint, Julian Loss, Michele Orrù, and Mariana
Raykova. 2021. On the (In)security of ROS. In EUROCRYPT Part I. 33–53.