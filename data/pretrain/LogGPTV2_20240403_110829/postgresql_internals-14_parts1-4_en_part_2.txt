21.2 NestedLoopJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . . 398
CartesianProduct . . . . . . . . . . . . . . . . . . . . . . . . . . . . 399
ParameterizedJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . 403
CachingRows(Memoization) . . . . . . . . . . . . . . . . . . . . . . 407
OuterJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 411
Anti-andSemi-joins . . . . . . . . . . . . . . . . . . . . . . . . . . . 412
Non-Equi-joins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 415
ParallelMode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 415
22 Hashing 417
22.1 HashJoins. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 417
One-PassHashJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . 417
Two-PassHashJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . 422
DynamicAdjustments . . . . . . . . . . . . . . . . . . . . . . . . . . 425
HashJoinsinParallelPlans . . . . . . . . . . . . . . . . . . . . . . . 429
ParallelOne-PassHashJoins . . . . . . . . . . . . . . . . . . . . . . 430
ParallelTwo-PassHashJoins . . . . . . . . . . . . . . . . . . . . . . 432
Modifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 435
22.2 DistinctValuesandGrouping . . . . . . . . . . . . . . . . . . . . . . 437
23 SortingandMerging 440
23.1 MergeJoins . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 440
MergingSortedSets . . . . . . . . . . . . . . . . . . . . . . . . . . . 440
ParallelMode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 443
Modifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 444
23.2 Sorting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 445
Quicksort . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 447
Top-NHeapsort . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 448
12
TableofContents
ExternalSorting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 450
IncrementalSorting . . . . . . . . . . . . . . . . . . . . . . . . . . . 454
ParallelMode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 456
23.3 DistinctValuesandGrouping . . . . . . . . . . . . . . . . . . . . . . 458
23.4 ComparisonofJoinMethods . . . . . . . . . . . . . . . . . . . . . . 460
Index 464
13
About This Book
Booksarenotmadetobebelieved,buttobe
subjectedtoinquiry.
—UmbertoEco,TheNameoftheRose
For Whom Is This Book?
This book is for those who will not settle for a black-box approach when work-
ingwithadatabase. Ifyouareeagertolearn,prefernottotakeexpertadvicefor
granted,andwouldliketofigureouteverythingyourself,followalong.
IassumethatthereaderhasalreadytriedusingPostgreandhasatleastsome
general understanding of how it works. Entry-level users may find the text a bit
difficult.Forexample,Iwillnottellanythingabouthowtoinstalltheserver,enter
psqlcommands,orsetconfigurationparameters.
I hope that the book will also be useful for those who are familiar with another
databasesystem,butswitchovertoPostgreandwouldliketounderstandhow
they differ. Abook like this would have saved me a lot of time several years ago.
Andthat’sexactlywhyIfinallywroteit.
What This Book Will Not Provide
Thisbookisnotacollectionofrecipes. Youcannotfindready-madesolutionsfor
everyoccasion,butifyouunderstandinnermechanismsofacomplexsystem,you
willbeabletoanalyzeandcriticallyevaluateotherpeople’sexperienceandcome
to your own conclusions. For this reason,I explain such details that may at first
seemtobeofnopracticaluse.
But this book is not a tutorial either. While delving deeply into some fields (in
whichIammoreinterestedmyself),itmaysaynothingatallabouttheother.
15
AboutThisBook
By no means is this book a reference. I tried to be precise, but I did not aim at
replacingdocumentation,soIcouldeasilyleaveoutsomedetailsthatIconsidered
insignificant.Inanyunclearsituationreadthedocumentation.
ThisbookwillnotteachyouhowtodevelopthePostgrecore. Idonotexpect
any knowledge of the C language, as this book is mainly intended for database
administratorsandapplicationdevelopers.ButIdoprovidemultiplereferencesto
thesourcecode,whichcangiveyouasmanydetailsasyoulike,andevenmore.
What This Book Does Provide
Intheintroductorychapter,Ibrieflytouchuponthemaindatabaseconceptsthat
will serve as the foundation for all the further narration. I do not expect you to
get much new information from this chapter but still include it to complete the
bigpicture.Besides,thisoverviewcanbefoundusefulbythosewhoaremigrating
fromotherdatabasesystems.
PartIisdevotedtoquestionsofdataconsistencyandisolation. Ifirstcoverthem
fromtheuser’sperspective(youwilllearnwhichisolationlevelsareavailableand
what are the implications) and then dwell on their internals. For this purpose,
Ihavetoexplainimplementationdetailsofmultiversionconcurrencycontroland
snapshotisolation,payingspecialattentiontocleanupofoutdatedrowversions.
PartIIdescribesbuffercacheand,whichisusedtorestoredataconsistency
afterafailure.
Part III goes into details about the structure and usage of various types of locks:
lightweightlocksfor,heavyweightlocksforrelations,androw-levellocks.
PartIVexplainshowtheserverplansandexecutesqueries.Iwilltellyouwhich
dataaccessmethodsareavailable,whichjoinmethodscanbeused,andhowthe
collectedstatisticsareapplied.
PartVextendsthediscussionofindexesfromthealreadycoveredB-treestoother
accessmethods. Iwillexplainsomegeneralprinciplesofextensibilitythatdefine
the boundaries between the core of the indexing system, index access methods,
anddatatypes(whichwillbringustotheconceptofoperatorclasses),andthen
elaborateoneachoftheavailablemethods.
16
Conventions
Postgre includes multiple “introspective” extensions, which are not used in
routinework,butgiveusanopportunitytopeekintotheserver’sinternalbehav-
ior. Thisbookusesquiteafewofthem. Apartfromlettingusexploretheserver
internals, these extensions can also facilitate troubleshooting in complex usage
scenarios.
Conventions
Itriedtowritethisbookinawaythatwouldallowreadingitpagebypage,from
starttofinish.Butitishardlypossibletouncoverallthetruthatonce,soIhadto
getbacktooneandthesametopicseveraltimes.Writingthat“itwillbeconsidered
later”overandoveragainwouldinevitablymakethetextmuchlonger,that’swhy
insuchcasesIsimplyputthepagenumberinthemargintoreferyoutofurther p.
discussion. Asimilarnumberpointingbackwardswilltakeyoutothepagewhere
somethinghasbeenalreadysaidonthesubject.
BoththetextandallthecodeexamplesinthisbookapplytoPostgre. Next
tosomeparagraphs,youcanseeaversionnumberinthepagemargin. Itmeans v.
thattheprovidedinformationisrelevantstartingfromtheindicatedPostgre
version,while all the previous versions either did not have the described feature
atall,orusedadifferentimplementation. Suchnotescanbeusefulforthosewho
havenotupgradedtheirsystemstothelatestreleaseyet.
Ialsousethemarginstoshowthedefaultvaluesofthediscussedparameters.The
namesofbothregularandstorageparametersareprintedinitalics: work_mem. 4MB
Infootnotes,Iprovidemultiplelinkstovarioussourcesofinformation. Thereare
severalofthem,butfirstandforemost,IlistthePostgredocumentation,1which
isawellspringofknowledge.Beinganessentialpartoftheproject,itisalwayskept
up-to-datebyPostgredevelopersthemselves. However,theprimaryreference
is definitely the source code.2 It is amazing how many answers you can find by
simplyreadingcommentsandbrowsingthroughfiles,evenifyoudonot
know C.Sometimes I also refer to commitfestentries:3 you can always tracethe
1 postgresql.org/docs/14/index.html
2 git.postgresql.org/gitweb/?p=postgresql.git;a=summary
3 commitfest.postgresql.org
17
AboutThisBook
history of all changes and understand the logic of decisions taken by developers
ifyoureadtherelateddiscussionsinthepsql-hackersmailinglist,butitrequires
diggingthroughpilesofemails.
Sidenotesthatcanleadthediscussionastray(whichIcouldnothelpbutincludeintothe
book)areprintedlikethis,sotheycanbeeasilyskipped.
Naturally,thebookcontainsmultiplecodeexamples,mainlyin. Thecodeis
providedwiththeprompt=>;theserverresponsefollowsifnecessary:
=> SELECT now();
now
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
2022−11−25 22:57:04.866944+03
(1 row)
IfyoucarefullyrepeatalltheprovidedcommandsinPostgre,youshouldget
exactly the same results (down to transaction s and other inessential details).
Anyway,allthecodeexamplesinthisbookhavebeengeneratedbythescriptcon-
tainingexactlythesecommands.
Whenitisrequiredtoillustrateconcurrentexecutionofseveraltransactions,the
coderuninanothersessionisindentedandmarkedoffbyaverticalline.
=> SHOW server_version;
server_version
−−−−−−−−−−−−−−−−
14.4
(1 row)
Totryoutsuchcommands(whichisusefulforself-study,justlikeanyexperimen-
tation),itisconvenienttoopentwopsqlterminals.
Thenamesofcommandsandvariousdatabaseobjects(suchastablesandcolumns,
functions,orextensions)arehighlightedinthetextusingasans-seriffont:,
pg_class.
Ifautilityiscalledfromtheoperatingsystem,itisshownwithapromptthatends
with$:
18
Acknowledgments
postgres$ whoami
postgres
I use Linux,but without any technicalities; having some basic understanding of
thisoperatingsystemwillbeenough.
Acknowledgments
Itisimpossibletowriteabookalone,andnowIhaveanexcellentopportunityto
thankgoodpeople.
IamverygratefultoPavelLuzanovwhofoundtherightmomentandofferedme
tostartdoingsomethingreallyworthwhile.
IamobligedtoPostgresProfessionalfortheopportunitytoworkonthisbookbe-
yondmyfreetime.Butthereareactualpeoplebehindthecompany,soIwouldlike
toexpressmygratitudetoOlegBartunovforsharingideasandinfiniteenergy,and
toIvanPanchenkoforthoroughsupportandLATEX.
Iwouldliketothankmycolleaguesfromtheeducationteamforthecreativeatmo-
sphereanddiscussionsthatshapedthescopeandformatofourtrainingcourses,
which also got reflected in the book. Special thanks to Pavel Tolmachev for his
meticulousreviewofthedrafts.
ManychaptersofthisbookwerefirstpublishedasarticlesintheHabrblog,1andI
amgratefultothereadersfortheircommentsandfeedback. Itshowedtheimpor-
tanceofthiswork,highlightedsomegapsinmyknowledge,andhelpedmeimprove
thetext.
I would also like to thank Liudmila Mantrova who has put much effort into pol-
ishingthisbook’slanguage. Ifyoudonotstumbleovereveryothersentence,the
credit goes to her. Besides,Liudmila took the trouble to translate this book into
English,forwhichIamverygratefultoo.
1 habr.com/en/company/postgrespro/blog
19
AboutThisBook
Idonotprovideanynames,buteachfunctionorfeaturementionedinthisbookhas
requiredyearsofworkdonebyparticularpeople. IadmirePostgredevelopers,
andIamverygladtohavethehonorofcallingmanyofthemmycolleagues.
20
1
Introduction
1.1 Data Organization
Databases
Postgre is a program that belongs to the class of database management sys-
tems.Whenthisprogramisrunning,wecallitaPostgreserver,orinstance.
DatamanagedbyPostgreisstoredindatabases.1 AsinglePostgreinstance
canserveseveraldatabasesatatime;togethertheyarecalledadatabasecluster.
Tobeabletousethecluster,youmustfirstinitialize2(create)it.Thedirectorythat
containsallthefilesrelatedtotheclusterisusuallycalled,afterthename
oftheenvironmentvariablepointingtothisdirectory.
Installationsfrompre-builtpackagescanaddtheirown“abstractionlayers”overthereg-
ular Postgre mechanism byexplicitlysetting all the parameters required byutilities.
Inthiscase,thedatabaseserverrunsasanoperatingsystemservice,andyoumaynever
comeacrossthevariabledirectly. Butthetermitselfiswell-established,soIam
goingtouseit.
Afterclusterinitialization,containsthreeidenticaldatabases:
template0 isusedforcaseslikerestoringdatafromalogicalbackuporcreatinga
databasewithadifferentencoding;itmustneverbemodified.
template1 servesasatemplateforalltheotherdatabasesthatausercancreatein
thecluster.
1 postgresql.org/docs/14/managing-databases.html
2 postgresql.org/docs/14/app-initdb.html
21
Chapter1 Introduction
postgres isaregulardatabasethatyoucanuseatyourdiscretion.
PostgreSQLinstance
database
CREATEDATABASE
cluster
postgres template0 template1 newdb
System Catalog
Metadata of all cluster objects (such as tables,indexes,data types,or functions)
is stored in tables that belong to the system catalog.1 Each database has its own
setoftables(andviews)thatdescribetheobjectsofthisdatabase.Severalsystem
catalogtablesarecommontothewholecluster;theydonotbelongtoanypartic-
ular database (technically,a dummy database with a zero  is used),but can be
accessedfromallofthem.
Thesystemcatalogcanbeviewedusingregularqueries,whileallmodifications
initareperformedbycommands.Thepsqlclientalsooffersawholerangeof
commandsthatdisplaythecontentsofthesystemcatalog.
Names of all system catalog tables begin with pg_, like in pg_database. Column
namesstartwithathree-letterprefixthatusuallycorrespondstothetablename,
likeindatname.
Inallsystemcatalogtables,thecolumndeclaredastheprimarykeyiscalledoid
(objectidentifier);itstype,whichisalsocalledoid,isa-bitinteger.
1 postgresql.org/docs/14/catalogs.html
22
1.1 DataOrganization
Theimplementationofoidobjectidentifiersisvirtuallythesameasthatofsequences,but
itappearedinPostgremuchearlier.Whatmakesitspecialisthatthegeneratedunique
sissuedbyacommoncounterareusedindifferenttablesofthesystemcatalog.When
anassignedexceedsthemaximumvalue,thecounterisreset.Toensurethatallvalues
inaparticulartableareunique,thenextissuedoidischeckedbytheuniqueindex;ifitis
alreadyusedinthistable,thecounterisincremented,andthecheckisrepeated.1
Schemas
Schemas2 are namespaces that store all objects of a database. Apart from user
schemas,Postgreoffersseveralpredefinedones:
public isthedefaultschemaforuserobjectsunlessothersettingsarespecified.
pg_catalog isusedforsystemcatalogtables.
information_schema providesanalternativeviewforthesystemcatalogasdefined
bythestandard.
pg_toast isusedforobjectsrelatedto. p.
pg_temp comprisestemporarytables. Althoughdifferentuserscreatetemporary
tablesindifferentschemascalledpg_temp_N,everyonereferstotheirobjects
usingthepg_tempalias.
Eachschemaisconfinedtoaparticulardatabase,andalldatabaseobjectsbelong
tothisorthatschema.
Iftheschemaisnotspecifiedexplicitlywhenanobjectisaccessed,Postgrese-
lectsthefirstsuitableschemafromthesearchpath.Thesearchpathisbasedonthe
value of the search_path parameter,which is implicitly extended with pg_catalog
and(ifnecessary)pg_tempschemas. Itmeansthatdifferentschemascancontain
objectswiththesamenames.
1 backend/catalog/catalog.c,GetNewOidWithIndexfunction
2 postgresql.org/docs/14/ddl-schemas.html
23
Chapter1 Introduction
Tablespaces
Unlike databases and schemas, which determine logical distribution of objects,
tablespaces define physical data layout. Atablespace is virtually a directory in a
filesystem. Youcandistributeyourdatabetweentablespacesinsuchawaythat
archivedataisstoredonslowdisks,whilethedatathatisbeingactivelyupdated
goestofastdisks.
Oneandthesametablespacecanbeusedbydifferentdatabases,andeachdatabase
canstoredatainseveraltablespaces. Itmeansthatlogicalstructureandphysical
datalayoutdonotdependoneachother.
Each database has the so-called default tablespace. All database objects are cre-
atedinthistablespaceunlessanotherlocationisspecified.Systemcatalogobjects
relatedtothisdatabasearealsostoredthere.
pg_global
commonclusterobjects
pg_default
xyzzy
pg_catalog public plugh pg_catalog public
postgres template1
24
1.1 DataOrganization
Duringclusterinitialization,twotablespacesarecreated:
pg_default is located in the /base directory; it is used as the default ta-
blespaceunlessanothertablespaceisexplicitlyselectedforthispurpose.
pg_global islocatedinthe/globaldirectory;itstoressystemcatalogobjects
thatarecommontothewholecluster.
Whencreatingacustomtablespace,youcanspecifyanydirectory;Postgrewill
create a symbolic link to this location in the /pg_tblspc directory. In fact,
allpathsusedbyPostgrearerelativetothedirectory,whichallowsyou