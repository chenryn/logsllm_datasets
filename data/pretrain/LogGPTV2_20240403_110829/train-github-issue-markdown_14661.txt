## Bug Report
**For English only** , other languages will not accept.
Before report a bug, make sure you have:
  * Searched open and closed GitHub issues.
  * Read documentation: ShardingSphere Doc.
Please pay attention on issues you submitted, because we maybe need more
details.  
If no response **more than 7 days** and we cannot reproduce it on current
information, we will **close it**.
Please answer these questions before submitting your issue. Thanks!
### Which version of ShardingSphere did you use?
4.0.0
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC
### Expected behavior
primary key produced by key generator  
Logic SQL:  
insert into test_complex
(`name`,age,create_time,modified_time,user_id,phone,address)  
values(?,?,?,?,?, ?,?) , (?,?,?,?,?,?,?)  
route result of sharding key(id)  
logicName=sharding_db, value=461910991453999105, hash=1101970151 , mod=1  
logicName=sharding_db, mod=1 ,route =sharding_db_1  
logicName=test_complex, value=461910991453999105, hash=1101970151 , mod=7  
logicName=test_complex, mod=7 ,route =test_complex_7
logicName=sharding_db, value=461910991453999108, hash=1101970154 , mod=0  
logicName=sharding_db, mod=0 ,route =sharding_db_0  
logicName=test_complex, value=461910991453999108, hash=1101970154 , mod=2  
logicName=test_complex, mod=2 ,route =test_complex_2
### Actual behavior
Actual SQL: sharding_db_1 ::: insert into test_complex_3
(`name`,age,create_time,modified_time,user_id,phone,address,id) values  
(?, ?, ?, ?, ?, ?, ?, ?),(?, ?, ?, ?, ?, ?, ?, ?)  
::: [null, 1, 2020-04-28 15:09:21.415, 2020-04-28 15:09:21.415,
09c53d8e85934bbf8aeeec3d4711c0c95, 09c53d8e85934bbf8aeeec3d4711c0c95,
时代峰峻克鲁赛德, 461910991453999108, null, 1, 2020-04-28 15:09:21.415, 2020-04-28
15:09:21.415, 09c53d8e85934bbf8aeeec3d4711c0c98,
09c53d8e85934bbf8aeeec3d4711c0c98, 时代峰峻克鲁赛德, 461910991453999105]
### Reason analyze (If you can)
ShardingGeneratedKeyInsertValueParameterRewriter rewrite generateKey values
had a descendingIterator  
![image](https://user-
images.githubusercontent.com/31645800/80464764-d9192b00-896c-11ea-8ee9-39ff979e871f.png)  
the params had a descending order of route result, cause th actual sql is
wrong  
why use descendingIterator here ? if use common iterator would cause some
problems?
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule
configuration, when exception occur etc.
### Example codes for reproduce this issue (such as a github link).