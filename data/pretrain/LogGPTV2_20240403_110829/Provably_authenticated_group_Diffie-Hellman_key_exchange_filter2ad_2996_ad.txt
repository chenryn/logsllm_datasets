checks if authUn = H(skUi , n). If so, then Ui accepts hold-
4However, such a proof gets complicated when one adds
in the concern of forward-secrecy. Instead the ideas in the
proof of Section 6.4 can easily be extended to show that
AKE1 guarantees forward-secrecy.
(cid:2)
Ui = H(skUi , 0), sid
(cid:2)
ing sk
then terminates. Otherwise, Ui rejects.
(cid:2)
Ui = sidUi , pid
(cid:2)
Ui = pidUi , and
The transformation AddMA (add mutual authentication)
is analogous to AddPPsA. It consists of adding to protocol P
one more round of simultaneous broadcasts. More precisely,
all the players Ui send out H(sk, i) and they all check the
received values.
7.3 Security Theorem
Let P be an AKE protocol, SK be the session-key space
and G be the associated LL-key generator. One can state
the following security result about P
=AddMA(P ):
(cid:2)
Theorem 2. Let A be an adversary against the security
within a time bound t, after qse interactions
of protocol P
with the parties and qh hash queries. Then we have:
(cid:2)
P (cid:3) (t, qse, qh) ≤ Advake
P (t, qse, qh) + qh
P (cid:3) (t, qse, qh) ≤ Advake
2(cid:7)
P (t
, qse, qh) + nqh
2(cid:7)
Advake
Succma
(cid:2) ≤ t + (qse + qh)O(1).
(cid:2)
where t
Before describing the details of the proof let us ﬁrst pro-
vide the main ideas. We ﬁrst show that the transformation
AddMA preserves the AKE security (session key indistin-
guishability) of protocol P . We then show that imperson-
ating a player in MA rounds implies for A to “fake” the
authentication value Authi. Since this value goes through
the hash function, it implies that A has computed the ses-
sion key value sk and, thus, made the Hash-query.
7.4 Security Proof
(cid:2)
Proof. Let A be an adversary that can get an advantage
P (cid:3) (t, qse, qh) in breaking the AKE security of protocol
=AddMA(P ) within time t or can succeed with proba-
P (cid:3) (t, qse, qh) in breaking the MA security of pro-
. We construct from it an attacker B that gets an
, qse, qh) in breaking the AKE security
Advake
P
bility Succma
tocol P
advantage Advake
(cid:2)
of protocol P within time t
P (t
.
(cid:2)
(cid:2)
7.4.1 Disrupt Partnering
We are not concerned with partnered oracles coming up
with diﬀerent session keys, since our deﬁnition of partnering
implies the oracles have exchanged exactly the same ﬂows.
We also note that the probability that two instances of a
given player come to be partnered is negligible; in fact, it
would mean they have chosen the same random value in the
protocols, which occurs with probability O( q
2
se
2k ).
7.4.2 AKE break
(cid:2)
(cid:2)
(cid:2)
in breaking the AKE security of P within time t
We construct from A an adversary B that gets an advan-
tage 
.
B provides coin tosses to GLL, A, all Πs
U and starts run-
). B answers the queries
ning the game Gameake(A, P
made by A as follow.
The oracle queries made by A to B are relayed by B and
the answers are subsequently returned to A. However B’s
answers to Reveal and Test-queries go through the Hash-
oracle to be padded with “0” before being returned to A.
The Hash-queries are answered as usual Figure 2.
In the ideal hash model, in which H is seen as a ran-
dom function, A can not get any advantage in correctly
guessing the bit involved in the Test-query without having
262U i
U n
comes up with SK= skUi
Protocol P which outputs
SIDS= sids, PIDS= pids, and
←−−−−−−−−−−−−−−
authUn
sk
AuthUn
(cid:2)
Ui
sk
?
= H(skUi , n)
← H(skUi , 0)
comes up with SK= skUn
authUn ← H(skUn , n)
← H(skUn , 0)
(cid:2)
Un
Figure 3: Transformation P
are unchanged.
(cid:2)
= AddPPsA(P ). The shared session key SK is sk
(cid:2)
= H(sk, 0), SIDS and PIDS
P (A) ≥ .
At some point A makes a Test-query to oracle Πs
made a query of the form H(sk, 0). So Pr[A asks (sk, 0)] ≥
Advake
U , B gets
value τ and relays H(τ, 0) to A. B then looks for τ in the
H-list: B outputs 1 if (τ, 0) is in the H-list of queries made
by A, otherwise B ﬂips a coin and outputs the coin value.
The advantage of B to win Gameake(B, P ) is the proba-
bility that A made of query of the form H(sk, 0) minus the
probability that A made such query by “pure chance”:
P (cid:3) (A) − qh
Advake
The runnning time of B is the running time of A added
to the time to process the Send-queries and Hash-queries:
P (B) = Pr [A asks (sk, 0)] − qh
2(cid:28)
≥ Advake
2(cid:28)
(cid:2) ≤ t + (qse + qh)O(1)
t
7.4.3 MA break
(cid:2)
(cid:2)
.
We construct from A an adversary B which gets advantage
(cid:2)
in breaking the AKE security of P within time t
B provides coin tosses to GLL, A, all Πs

U , and starts
). B answers the oracle
running the game Gamema(A, P
queries made by A as follows.
The oracle queries made by A to B are relayed by B and
the answers are subsequently returned to A. However B’s
answers to Reveal and Test-queries go through the Hash-
oracle to be padded with “0” before being returned to A.
The Hash-queries are answered as usual Figure 2.
In the ideal hash model, in which H is seen as a random
function, A can not get any advantage in impersonating
some oracle Πsi
i without having made a query of the form
H(sk, i).
U and gets
value τ . Later A terminates and B looks for τ in H-list: B
outputs 1 if (τ,∗) is in H-list, otherwise B ﬂips a coin and
outputs the coin value. (τ, i) is in H-list if A violates PPsA
i except with probability qh · n · 1
for oracle Πsi
2(cid:7) .
The advantage of B to win Gameake(B, P ) is the proba-
bility that A makes a query of the form H(sk, i):
P (B) = Pr [A asks (sk, i)] ≥  − nqh
At some point B makes a Test-query to oracle Πs
Advake
The runnning time of B is the running time of A added
to the time to process the Send-queries and Hash-queries:
2(cid:28)
(cid:2) ≤ t + (qse + qh)O(1)
t
7.5 Result Analysis
(cid:2)
The quality of the reduction measures how much secu-
rity of the AKE security strength of protocol P is injected
into protocol P
. We see that the reduction injects much
of the security strength of protocol P into P
In eﬀect
P (cid:3) (t, qse, qh) (Succma
we can see it since Advake
P (cid:3) (t, qse, qh) re-
spectively) is inside an additive factor of Advake
P (t, qse, qh)
(Advake
, qse, qh) respectively) and this additive factor de-
creases exponentially with ".
P (t
.
(cid:2)
(cid:2)
8. CONCLUSION
In this paper we presented a model for the group Diﬃe-
Hellman key exchange problem derived from the model of
Bellare et al. [5]. Some speciﬁc features of our approach
that were introduced to deal with the Diﬃe-Hellman key
exchange in the multi-party setting are: deﬁning the notion
of session IDS to be a set of session ID, deﬁning the notion of
partnering to be a graph of partner ID. Addressed in detail
in this paper were two security goals of the group Diﬃe-
Hellman key exchange: the authenticated key exchange and
the mutual authentication. For each we presented a def-
inition, a protocol and a security proof in the ideal hash
model that the protocol meets its goals. This paper pro-
vided the ﬁrst formal treatment of the authenticated group
Diﬃe-Hellman key exchange problem.
The model and deﬁnitions introduced in this paper may
seem limited at ﬁrst sight. Our ﬁnal goal is a model to
help manage the complexity of deﬁnitions and proofs in the
following broader scenario. A scenario in which the group
membership is dynamic rather than static: after the initial-
ization phase, and throughout the lifetime of the multicast
group, the parties would like to engage in a conversation af-
ter each change in the membership at the end of which the
session key, sk, is updated to sk
. The new session key is
known to nobody but the parties in the multicast group. We
are currently extending our model to encompass this larger
scenario.
(cid:2)
Acknowledgements
The authors thank Deborah Agarwal for many insightful
comments on an early draft of this paper and the anonymous
referees for their many useful comments.
2639. REFERENCES
[1] D. A. Agarwal, O. Chevassut, M. Thompson, and
G. Tsudik. An Integrated Solution for Secure Group
Communication in Wide-Area Networks. In Proc. of
6th Symposium on Computers and Communications.
IEEE Press, July 2001.
[2] G. Ateniese, M. Steiner, and G. Tsudik. New
Multiparty Authentication Services and Key
Agreement Protocols. Journal of Selected Areas in
Communications, 18(4):1–13, IEEE, 2000.
[17] W. Diﬃe and M. Hellman. New Directions In
Cryptography. In IEEE Transactions on Information
Theory, vol. IT-22(6), pages 644–654, November 1976.
[18] W. Diﬃe, D. Steer, L. Strawczynski, and M. Wiener.
A Secure Audio Teleconference System. In Proc. of
Crypto’ 88, vol. 403 of LNCS, pages 520–528.
Springer, 1988.
[19] S. Goldwasser and S. Micali. Probabilisitic
Encryption. Journal of Computer and System
Sciences, 28():270–299, 1984.
[3] K. Becker and U. Wille. Communication Complexity
[20] I. Ingemarsson, D. Tang, and C. Wong. A Conference
of Group Key Distribution. In Proc. of ACM CCS ’98,
pages 1–6. ACM Press, 1998.
[4] M. Bellare, R. Canetti, and H. Krawczyk. A Modular
Approach to the Design and Analysis of
Authentication and Key Exchange Protocols. In Proc.
of STOC ’98. ACM Press, 1998.
[5] M. Bellare, D. Pointcheval, and P. Rogaway.
Authenticated Key Exchange Secure Against
Dictionary Attacks. In Proc. of Eurocrypt ’00, vol.
1807 of LNCS, pages 139–155. Springer, 2000.
Key Distribution System. In IEEE Transactions on
Information Theory, volume 28(5), pages 714–720,
September 1982.
[21] M. Just and S. Vaudenay. Authenticated Multi-Party
Key Agreement. In Proc. of ASIACRYPT’96, vol.
1163 of LNCS, pages 36–49. Springer, 1996.
[22] Y. Kim, A. Perrig, and G. Tsudik. Simple and
fault-tolerant key agreement for dynamic collaborative
groups. In ACM CCS ’00, pages 235–244. ACM Press,
November 2000.
[6] M. Bellare and P. Rogaway. Entity Authentiﬁcation
[23] A. Mayer and M. Yung. Secure Protocol
and Key Distribution. In Proc. of Crypto ’93, vol. 773
of LNCS. Springer, 1993.
[7] M. Bellare and P. Rogaway. Random Oracles are
Practical: a Paradigm for Designing Eﬃcient
Protocols. In Proc of ACM CCS ’93. ACM Press,
1993.
[8] M. Bellare and P. Rogaway. Provably Secure Session
Key Distribution: The Three Party Case. In Proc. of
STOC ’95, ACM Press 1995.
[9] E. Biham, D. Boneh, and O. Reingold. Breaking
Generalized Diﬃe-Hellman Modulo a Composite is no
Easier than Factoring. In Information Processing
Letters (IPL), vol. 70, pages 83–87, 1999.
[10] S. Blake-Wilson, D. Johnson, and A. Menezes. Key
Agreement Protocols and their Security Analysis. In
Proc. of 6th IMA International Conference on
Crypotography and Coding, vol. 1355 of LNCS, pages
30–45. Springer, 1997.
[11] S. Blake-Wilson and A. Menezes. Authenticated
Diﬃe-Hellman Key Agreement Protocols. In Proc. of
the 5th Annual Workshop on Selected Areas in
Cryptography (SAC ’98), vol. 1556 of LNCS, pages
339–361. Springer, 1998.
[12] D. Boneh. The Decision Diﬃe-Hellman Problem. In
Third Algorithmic Number Theory Symposium, vol.
1423 of LNCS, pages 48–63. Springer, 1998.
[13] M. Burmester and Y. Desmedt. A Secure and Eﬃcient
Conference Key Distribution System. In Proc of
Eurocrypt’ 94, vol. 950 of LNCS, pages 275–286.
Springer, 1995.
[14] R. Canetti, J. Garay, G. Itkis, D. Micciancio,
M. Naor, and B. Pinkas. Issues in Multicast Security:
A Taxonomy and Eﬃcient Constructions. In Proc. of
INFOCOM ’99, March 1999.
[15] T. H. Cormen, C. E. Leiserson, and R. L. Rivest.
Introduction to Algorithms. MIT Electrical
Engineering and Computer Science, 1990.
[16] J.-S. Coron. On the Exact Security of
Full-Domain-Hash. In Proc. of Crypto’ 2000, vol. 1880
of LNCS, pages 229–235. Springer, August 2000.
Transformation via ”Expansion” from Two-Party to
Multi-Party. In ACM CCS ’99, pages 83–92. ACM
Press, November 1999.
[24] C. Meadows. Extending Formal Cryptographic
Protocol Analysis Techniques for Group Protocols and
Low-Level Cryptographic Primitives. In Workshop on
Issues in the Theory of Security (WITS ’00), 2000,.
[25] M. Naor and O. Reingold. Number-Theoretic
Constructions of Eﬃcient Pseudo-Random Functions.
In Proc. of FOCS ’97, pages 458–467, IEEE Press,
1997.
[26] O. Pereira and J. J. Quisquater. A Security Analysis
of the Cliques Protocols Suites. In 14-th IEEE
Computer Security Foundations Workshop. IEEE
Press, June 2001.
[27] A. Perrig. Simple and Fault-Tolerant Key Agreement
for Dynamic Collaborative Groups. In International
Workshop on Cryptographic Techniques and
E-Commerce CrypTEC ’99, 1999.
[28] D. Pointcheval and J. Stern. Security Arguments for
Digital Signatures and Blind Signatures. J. of
Cryptology, 13(3):361–396, 2000.
[29] V. Shoup. Lower Bounds for Discrete Logarithms and
Related Problems. In Proc. of Eurocrypt ’97, vol. 1233
of LNCS, pages 256–266. Springer, 1997.
[30] V. Shoup. On Formal Models for Secure Key
Exchange. Technical report, IBM Zrich Research Lab,
1999.
[31] M. Steiner, G. Tsudik, and M. Waidner.
Diﬃe-Hellman Key Distribution Extended to Groups.
In Proc. of ACM CCS ’96, ACM Press 1996.
[32] W.-G. Tzeng. A Practical and Secure Fault-Tolerant
Conference-Key Agreement Protocol. In Proc. of PKC
’2000, LNCS. Springer, February 2000.
264