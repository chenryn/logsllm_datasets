TIVs are highly like to have a low prediction ratio. Since those
harmful faked delays cause severe TIVs, we should be able to use
the prediction ratio metric to detect them.
Figure 11(a) shows the prediction ratio distributions of good nodes
and delay attackers, where the delay attackers randomly inﬂates
their delays for up to 300ms (30% of the nodes are delay attack-
ers). From this graph, we can see that the prediction ratio metric
has a reasonable ability to differentiate good nodes and delay at-
tackers. The faked delays in this attack cause much more severe
TIVs.
Using the prediction ratio metric, we can design a simple TIV
detection technique to defend against the delay attack as follows.
At each embedding step, a node A checks one of its neighbors
B. If the prediction ratio of edge AB is lower than a threshold,
this neighbor is deemed malicious. We empirically set the detec-
tion threshold to be 0.9. To evaluate the performance of TIV de-
tection, we use it to defend against 10%, 20%, 30% and 50% of
malicious nodes performing the delay attack in the system. Fig-
ure 11(b) shows the fraction of malicious nodes in the neighbor
sets during the experiment. As can be seen, for all the cases, the
TIV detection mechanism can effectively identify 90% of the ma-
licious nodes and remove them from nodes’ neighbor sets. 10%
of the malicious nodes are still left in nodes’ neighbor sets. These
small number of malicious nodes do not cause severe TIVs, there-
fore the TIV detection mechanism cannot detect them. That is why
the TIV detection mechanism has a large false negative rate in the
end. However, our coordinates accuracy result shows that these
small number of remaining malicious nodes do not impact coordi-
nates accuracy very much. Figure 11(c) shows the accuracy of good
nodes’ coordinates. From this graph, we can see that, without any
protection mechanism, the delay attackers can signiﬁcantly degrade
the accuracy of good nodes’ coordinates. The TIV detection mech-
anism can effectively protect good nodes’ coordinates by removing
Registering
TIV detection period
Stabilizing
• Registering to the   
membership server
• Acquiring initial   
neighbor set
• Acquiring witnesses 
• Randomized detection 
period
• Checking and updating 
neighbor set by TIV 
detection 
• Fixed neighbors 
• Stabilizing 
coordinates after 
convergence
Figure 12: Integrating the security and stability mechanisms
most of the malicious nodes. Even when there are 50% of mali-
cious nodes in the Vivaldi system, the good nodes’ coordinates still
have good accuracy that is close to the Vivaldi coordinates when
there is no malicious node.
5.
INTEGRATING STABILITY AND
SECURITY ALGORITHMS
In previous sections, we introduced several algorithms to solve
the stability and security problems of network coordinates. In this
section, we illustrate a simple way to integrate stability and security
algorithms.
We consider a decentralized network coordinates system. As il-
lustrated in Figure 12, when a node joins the system, it ﬁrst regis-
ters with a membership server. The membership server assigns the
node with a set of neighbors to compute coordinates with, and a set
of witnesses to audit the behavior of this node. PeerReview is used
to protect coordinates computation. With its protection, any faked
coordinates are guaranteed to be detected. When a node is detected
or suspected by a witness with evidence, this node will be removed
from the system.
The TIV detection mechanism is used to protect good nodes
against faked delays. After a node starts computing its coordinates,
it chooses a random TIV detection period. During this period, the
node focuses on checking its neighbors and detecting faked delays
that can hurt their coordinates accuracy. During the TIV detec-
tion procedure, the node’s neighbor set is dynamically changing,
therefore it cannot stabilize the coordinates in this period. After the
detection period, the node can start to stabilize its coordinates by
the error elimination algorithm. During the coordinates stabiliza-
tion procedure, nodes cannot change their neighbor sets. Finally,
the node’s coordinates are stabilized.
There is a potential attack that some malicious nodes may pre-
tend to frequently experience propagation delay changes to cause
e
c
n
a
m
r
o
f
r
e
p
n
o
i
t
c
e
t
e
D
s
e
d
o
n
s
u
o
c
i
i
l
a
m
f
o
n
o
i
t
c
a
r
F
1
0.5
0
0
0.4
0.2
0
0
100
100
False negative
False positive
i
)
s
m
(
s
n
b
s
0
1
n
200
300
Simulation time(s)
200
300
Simulation time(s)
400
500
i
t
n
e
m
e
v
o
m
s
e
t
a
n
d
r
o
o
c
i
400
500
e
g
a
r
e
v
A
140
120
100
80
60
40
20
0
0
Vivaldi(no malicious nodes)
Stabilized Vivaldi+TIV detection(30% delay attackers)
Vivaldi(30% delay attackers)
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
Vivaldi(no malicious node)
Stabilized Vivaldi+TIV detection(30% delay attackers)
Vivaldi(30% delay attackers)
i
n
o
i
t
u
b
i
r
t
s
d
e
v
i
t
a
u
m
u
C
l
500
1000
Simulation time(s)
1500
2000
0
0
1
2
3
Relative error
4
5
(a)
(b)
(c)
Figure 13: The performance of integrating TIV detection and coordinates stabilization (a) Detection performance (b) Coordinates
stability (c) Coordinates accuracy
unnecessary coordinates recomputation. However, since true prop-
agation delay changes require routing changes, and routing changes
do not happen frequently, if a node observes that a neighbor’s delay
is changing rapidly and frequently, it will remove this neighbor.
Figure 13 shows the experimental results for using this integrated
algorithm to protect and stabilize Vivaldi coordinates with 30%
delay attackers in the system. In this experiment, each node ran-
domly chooses a detection period from [200sec, 500sec]. From
Figure 13(a), we can see that, during the detection period, nodes
can effectively remove most of the malicious nodes from their neigh-
bor sets. As illustrated in Figure 13 (b) and (c), after the detection
procedure is done, the error elimination algorithm can stabilize the
coordinates. The stabilized network coordinates has good accuracy
which is close to the dynamic Vivaldi coordinates with no mali-
cious nodes.
6. RELATED WORK
Since the concept of network coordinates was ﬁrst introduce in
GNP [21], there has been a signiﬁcant amount of work on how to
build network coordinates systems. These studies focus on differ-
ent aspects of the problem.
Architectures - Because the centralized architecture in GNP suf-
fers from a scalability problem, several papers have proposed dif-
ferent architectures to build scalable coordinates systems. NPS [22]
and PIC [4] extend GNP into a hierarchical architecture. Light-
house [23], Virtual Landmarks [32] and Vivaldi [5] explore differ-
ent methods to build fully decentralized network coordinates sys-
tems.
Models - In addition to the most popular Euclidean model [21,
5, 22, 25, 4], many other models for approximating Internet de-
lays have been explored. Some Euclidean space extension models
slightly modify the Euclidean space to incorporate Internet delay
features. The representative proposals are LAT [15] and Height [5].
Other metric models have been examined as well, for example, the
Hyperbolic model in [26]. However, all the metric space mod-
els suffer from the triangle inequality violation effect of Internet
delays. Therefore several numerical optimization models are also
proposed to model Internet delays. The representative models are
PCA in [16] and [32], and the SVD, NMF models in the IDES sys-
tem [19]. These models however do not dramatically out-perform
the Euclidean space model.
Optimization algorithms - Two kinds of optimization algorithms
have been proposed to compute the coordinates in network coordi-
nates systems: multi-dimensional scaling algorithms and simula-
tion based algorithms. An example of a multi-dimensional scaling
algorithm is the Downhill Simplex algorithm used in GNP [21] and
NPS [22]. The simulation based algorithms model the delay predic-
tion errors by a force system and seek to reduce the forces among
all pairs of nodes. The representative algorithms are the Big-Bang
Simulation algorithm [25] and the Spring algorithm [5].
System optimization - Several mechanisms have been proposed
to improve the performance of coordinates systems. In addition to
the techniques we have mentioned for improving coordinates sta-
bility and security, a more recent study [27] proposes another se-
curity mechanism, Veracity, in which each node is associate with a
set of verifying nodes and the node’s coordinates are tested based
on its error to the verifying nodes.
If a node’s coordinates have
large error in predicting the delays to most of the verifying nodes,
the node is deemed malicious and its coordinates will not be used
by other nodes. Fundamentally, Veracity is another outlier detec-
tion mechanism, which still uses the statistical detection technique
to handle all kinds of faked coordinates and faked delays together.
Zhang et. al. [37] propose hierarchical coordinates to improve the
accuracy of network coordinates. Wang et. al. [33] introduce a TIV
alert mechanism to reduce the impact of TIV on network coordi-
nates systems.
Theoretical analysis - Theoretical studies [30, 28, 29] have ad-
dressed the reason why network coordinates systems can succeed at
predicting Internet delays. The results demonstrate that without tri-
angle inequality violation, network coordinates systems based on a
small number of landmarks or a small number of distributed neigh-
bors can have good accuracy.
Performance analysis - Previous work also studies the perfor-
mance of network coordinates system at the application level. In
[38] and [17], the authors quantiﬁed the imprecision of using net-
work coordinates in several applications, such as nearest neighbor
selection and overlay multicast. Lee et al. [15] point out that trian-
gle inequality violation is an important cause of coordinates inac-
curacy.
Applications - As we have mentioned, many previous studies
have applied network coordinates to solve a wide range of prob-
lems, such as overlay construction [20, 18], compact Internet rout-
ing [1, 13, 8], network modeling [36] and security [2].
7. CONCLUSIONS
In this paper, we have presented new algorithms to solve the sta-
bility and security problems in decentralized network coordinates
systems. We have found a new error elimination model that can
achieve coordinates stability without hurting accuracy, and have
designed an effective algorithm based on this model. We have
also found that solving the security problem with a single statisti-
cal mechanism is hard. We recognize that coordinates computation
can be separately secured by proven BFD techniques, and we have
shown that a customized BFD algorithm can be applied. Further-
more, we have shown that the remaining delay measurement part
can be sufﬁciently secured by TIV detection. Integrating these new
algorithms, decentralized network coordinates systems can ﬁnally
be scalable, stable, and secure simultaneously.
Acknowledgment
We would like to thank our shepherd Jia Wang and the anonymous
reviewers for their valuable feedback on earlier versions of this pa-
per.
8. REFERENCES
[1] I. Abraham and D. Malkhi. Compact routing on euclidean
metrics. In Proceedings of PODC 2004, July 2004.
[2] R.A. Bazzi and G. Konjevod. On the establishment of of
distinct identities in overlay networks. In Proceedings of
ACM PODC’05, July 2005.
[3] M. Castro and B. Liskov. Practical byzantine fault tolerance.
In Proceedings of ACM OSDI, February 1999.
[4] M. Costa, M. Castro, A. Rowstron, and P. Key. PIC: Practical
Internet coordinates for distance estimation. Technical
Report MSR-TR-2003-53, Microsoft Research, September
2003.
[5] F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: A
decentralized network coordinate system. In Proceeding of
ACM SIGCOMM, August 2004.
[6] C. de Launois, S. Uhlig, and O. Bonaventure. A stable and
distributed network coordinate system. In Technical report,
University Catholique de Louvain, December 2004.
[7] K. P. Gummadi, S. Saroiu, and S. D. Gribble. King:
Estimating latency between arbitrary internet end hosts. In
Proceedings of the SIGCOMM IMW, Marseille, France,
November 2002.
[8] R. Gummadi, N. Kothari, Y.J. Kim, R. Govindan, B. Karp,
and S. Shenker. Reduced state routing in the internet. In
Proceedings of HotNets III, November 2004.
[9] Andreas Haeberlen, Petr Kuznetsov, and Peter Druschel.
PeerReview: Practical accountability for distributed systems.
In Proceedings of the 21st ACM Symposium on Operating
Systems Principles (SOSP’07), Oct 2007.
[10] M.A. Kaafar, L. Mathy, C. Barakat, K. Salamatian,
T. Turletti, and W. Dabbous. Securing internet coordinate
embedding systems. In Proceeding of SIGCOMM’07,
August 2007.
[11] M.A. Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Virtual
networks under attack: Disrupting internet coordinate
systems. In Proceeding of CoNext’06, December 2006.
[12] J. Ledlie, P. Gardner, , and M. Seltzer. Network coordinates
in the wild. In Proceeding of USENIX NSDI’07, April 2007.
[13] J. Ledlie, P. Pietzuch, M. Mitzenmacher, and M. Seltzer.
Wired geometric routing. In Proceedings of IPTPS 2007,
February 2007.
[14] J. Ledlie, P. Pietzuch, and M. Seltzer. Stable and accurate
network coordinates. In Proceeding of International
Conference on Distributed Computing Systems, July 2006.
[15] Sanghwan Lee, Zhi-Li Zhang, Sambit Sahu, and Debanjan
Saha. On suitability of Euclidean embedding of Internet
hosts. In Proc. SIGMETRICS 2006, June 2006.
[16] H. Lim, J. Hou, and C.-H. Choi. Constructing internet
coordinate system based on delay measurement. In
Proceedings of IMC, Miami, FL, October 2003.
[17] Eng Keong Lua, Timothy Grifﬁn, Marcelo Pias, Han Zheng,
and Jon Crowcroft. On the accuracy of embeddings for
internet coordinate systems. In Proceedings of IMC,
Berkeley, CA, October 2005.
[18] C. Lumezanu, D. Levin, and N. Spring. Peer wise discovery
and negotiation of faster path. In Proceedings of HotNets-VI,
November 2007.
[19] Y. Mao and L. K. Saul. Modeling distances in large-scale
networks by matrix factorization. In Proceedings of Internet
Measurement Conference, Sicily, Italy, October 2004.
[20] Animesh Nandi, Aditya Ganjam, Peter Druschel,
T. S. Eugene Ng, Ion Stoica, and Hui Zhang. A reusable
control plane for overlay multicast. In Proceedings of
USENIX NSDI’07, April 2007.
[21] T. S. E. Ng and H. Zhang. Predicting Internet networking
distance with coordinates-based approaches. In Proceedings
of IEEE INFOCOM, June 2002.
[22] T. S. E. Ng and H. Zhang. A network positioning system for
the internet. In Proceedings of USENIX Annual Technical
Conference, June 2004.
[23] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti.
Lighthouses for scalable distributed location. In Proceedings
of IPTPS, 2003.
[24] P. Pietzuch, J. Ledlie, and M. Seltzer. Supporting network
coordinates on planetlab. In Proceeding of the Second
Workshop on Real Large Distributed Systems (WORLDS’05),
December 2005.
[25] Y. Shavitt and T. Tankel. Big-bang simulation for embedding
network distances in Euclidean space. In Proceedings of
IEEE INFOCOM, San Francisco, CA, March 2003.
[26] Y. Shavitt and T. Tankel. On the curvature of the Internet and
its usage for overlay construction and distance estimation. In
Proceedings of IEEE INFOCOM, April 2004.
[27] M. Sherr, B. T. Loo, and M. Blaze. Veracity: A fully
decentralized service for securing network coordinate
systems. In Proceedings of IPTPS’08, 2008.
[28] A. Slivkins. Distributed Approaches to Triangulation and
Embedding. In Proceedings 16th ACM-SIAM Symposium on
Discrete Algorithms (SODA), 2004.
[29] A. Slivkins. Network Distance Estimation with Guarantees
for All Node Pairs. Technical report, Cornell University,
2006.
[30] A. Slivkins, J. Kleinberg, and T. Wexler. Triangulation and
Embedding using Small Sets of Beacons. In Proceedings of
FOCS, 2004.
[31] M. Szymaniak, D. Presotto, G. Pierre, and M. van Steen.
Practical large-scale latency estimation. Elsevier’s Computer
Networks, 52(7), 2008.
[32] L. Tang and M. Crovella. Virtual landmarks for the internet.
In Proceedings of IMC, Miami, FL, October 2003.
[33] G. Wang, B. Zhang, and E. Ng. Towards network triangle
inequality violations aware distributed systems. In
Proceedings of the ACM/USENIX Internet Measurement
Conference (IMC’07), Oct 2007.
[34] Guohui Wang. On the design principles of network
coordinates systems. April 2008. Master’s thesis, Rice
University.
[35] D. Zage and C. Nita-Rotaru. On the accuracy of
decentralized network coordinate systems in adversarial
networks. In Proceeding of ACM CCS’07, October 2007.
[36] B. Zhang, T.S.Eugene Ng, A.Nandi, R.Riedi, P.Druschel, and
G.Wang. Measurement-based analysis, modeling, and
synthesis of the internet delay space. In Proceedings of ACM
SIGCOMM/USENIX Internet Measurement Conference
(IMC), October 2006.
[37] R. Zhang, Y. Hu, X. Lin, and S. Fahmy. A hierarchical
approach to internet distance prediction. In Proceedings of
IEEE ICDCS, Lisboa, Portugal, 2006.
[38] R. Zhang, C. Tang, Y. Hu, S. Fahmy, and X. Lin. Impact of
the inaccuracy of distance prediction algorithms on internet
applications: an analytical and comparative study. In
Proceedings of IEEE INFOCOM, Barcelona, Spain, April
2006.