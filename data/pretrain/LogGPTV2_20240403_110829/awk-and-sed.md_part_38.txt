分割和字段分割采用一样方法
如果没有给出 sep，则使用FS,数组
果
返
从p开始剩余的部分
为n的子串。
没有出现则返回（
区回字串t在字符串s中的位置，
- 284 -
，如果你的 awk 是老版本，则
如果n没有给出，
第十一
0
章
当没有给出字
awk 的系列产品
如
返
长
---
## Page 267
通常情况下，
语法为：
3个版本都扩展了 delete语句，使得能一次删除数组中的所有元素。
删除数组的所有元素
2）中的可用的。
共有的扩展
们中的两个或多个版本共有的扩展功能，然后详细介绍每个版本以及
有 3个awk版本的源代码是可以免费使用的。它们是 BellLabs 
OFMT 有两个作用，即负责 print 语句的格式转换和将数字转换为字符
ORS
OFS
FILENAME
表 11-3：原始的 awk中的系统变量
awk 中最大的便利就是可以定义自己的函数，但原始 awk 没有提供这
本
和如何获得它们。
awk、GUN awk、和 mawk,
可免费使用的 awk
S
变量 
原
内置变量
一功能。
sqrt (x)
log
int
exp
awk 函数
长节讨论 awk 语言的扩展，这在 awk 中的两个或多个免费版本（注
始的 awk 中的内置变量显示在表11-3 中。
for (i in data)
要从数组中删除每个元素，必须用一个如下的循环：
QQ群：
记录分隔符（默认为一个换行符)
输出字段分隔符
数字的输出格式(默认为%6g)
当前记录中的字段的个数
描述
字
乐
段分隔符（默认为一个空格
返回×的平方根 
返回x的自然对数 (以e为底)
返回×取整后的值
返回e的x次幂
描述
50192241
，由Michae丨Brennan 提供。这部分介绍了它
前文件名
 285 -
（默认为一个空格）
第十一章 
awk 的系列产品
---
## Page 268
准错误被定向到哪里。
这将“Enter your name:”直接输出到屏幕上，不管标准输出和标
据，这是用户终端的名字。当程序的输出直接写入一个文件时，这可
对于任意版本的 awk，
特殊文件名
BellLabs awk 的1993 年版本介绍了一个 POSIX标准中没有的新的函
刷新被缓存的输出
这些扩展首先出现在 mawk 中，
你应该有自己的评价。
以用来提示或通知用户的注意。
注
如果没有这些扩展，则必须重复调用 substr（)函数来获取每一个字
化需要处理单独字符的工作。
串，那么输入记录的每个字符都变成为一个单独的字段。这大大地简
3个 awk 都扩展了字段的分割和数组的分割。如果FS 得值一个空字符
获得单独的字符
名。一旦定义为数组就永远是一个数组。
即使数组中已经没有任何元素，也不能将数组名作为一个简单的变量
这对于有很多下标的数组尤其有用，这种方法比用一个循环要快得
printf “Enter your name:“>/dev/tty”“
中
这
中
能
数
大
道
数
中
符
中
类
中
这
个函数首先出现在BellLabs awk中，然后出现在 gawk和 mawk
所有被缓存的数据。这也是函数fflush()的目的。
够显示地刷新出缓冲区是很有用的，也就是说，强制地传递缓冲
多数程序对输出进行缓存，在内存块中保存将被写入文件或管道的
并多扩展的描述的作者，我对这些扩展的有效性的看法也许有偏见。
的每个字符将成为目标数组的一个单独的元素。
似地，如果函数 split()的第三个参数是空字符串，在原始字符串
这一扩展首先出现在 gawk 中，
据，直到有足够多的数据后才将它们输送到目的地。有时，程序
有交
效。
QQ群：
都能直接向 UNIX 特殊文件/dev/tty中写入数
(A.R. J)
50192241
然后出现在 gawk 和Bell Labs awk
然后出现在 mawk 和BellLabs awk
- 286 -
第十一章
awk 的系列产品
器
员
---
## Page 269
nextfile 语句
当特殊文件/dev/stderr 能用时，这将变得很简单：
echo，并直接将它的输出结果送到标准错误文件。
这个例子直接将print 语句的输出传递给一个执行 cat 命令的管道。
入标准错误的基本原理和上面一样。要显式地指定标准错误的输出,
在UNIX中，出错信息的标准目的地是标准错误文件。将出错信息写
一起。输出“ERROR“可以帮助用户识别出出错信息。
如果程序的输出直接被送到终端屏幕，那么出错信息将和输出混合在
面的例子直接输出到/dev/tty:
个单词“ERRO”
下面的 printerr（)函数用于帮助创建一致的用户出错信息。
出错信息送到终端。
mawk 和 Bell Labs awk 中获得认可。
/dev/stderr 
/dev/stdout
/dev/stdin
文件名 
表11-4：
在表11-4 列出的是3 个版本 awk 中都支持的特殊文件名。
你
文
源
用
形
尔也可以用 system（函数来执行一个UNIX命令，
用print 语句来提示用户。但是，
原于 V8 UNIX。这些特殊文件在 gawk 中首先获得认可，然后是在
件中，
引号包围。特殊文件/dev/stdin、/dev/stdout 和/dev/stderr 来
意，和其他文件名一样，当特殊文件名被指定为字符串常量时必须
a．Mawk 帮助页建议使用“-”
print“ERROR”>“/dev/stderr”
人
，用户将看不到打印结果。因此，
特殊文件名
QQ群:
后跟有一个给出的信息、记录编号和当前记录。下
50192241
标准错误
标准输出
标准输入
描述
Printer（函数
表示标准输入，
（mawk中没有）a
如果程序的输出被重定向到一个
- 287 -
#recent awks only
record number and record
一个好的办法是明确指出将
第十一
例如，cat 或
这是很方便的。
章
，它打印一
你可以简
awk 的系列产品
---
## Page 270
的转换，而1989的版本用的是0FMT，新的功能有：
POSIX awk 之间的唯一区别是POSIX使用 CONVFMT 实现数据到字符串
在1989 年，System V第四版增加了一些新的内容。这个版本和
这个版本一直在 SunOS 4.1.×系统和 SystemV第三版 UNIX系统上使
新 awk的第一个版本在1987以后可以使用。它几乎包含了我们在前
这里还有几个不同的版本，我们将根据它们在哪一年可用来识别它
名 FTP（文件传送协议）从主机 netlib.bell-labs.com下载。位于文
BellLabs awk 是原始的V7 awk 的直属后代，这个“新的” awk 首先
Bell Labs awk 
将 RS 作为正则表达式的性能首先出现在 mawk 中，并随后被加到 gawk 
在下面给出了一个例子。
gawk 和 mawk 允许 RS 是一个完全的正则表达式，
正则表达式的记录分隔符（gawk和mawk）
nextfile 语句来源于 gawk，然后被添加到 BellLabs awk 和 mawk
是很有用的，这里不需要创建一个循环并使用 next 跳过某些记录。
使用下一个文件的第一个记录。当你只需要处理文件的一部分时，
nextfi le 时,
nextfile 语句和 next 语句类似，但它是更高层次上的操作。当执行
面四章中介绍的所有内容（尽管有些脚本注明了一些是不可用的）。
3
版本的 awk需要一个ANSIC编译器。
库文件。确保使用“二进制”或“图像”模式来传输这个文件。这个
件/netlib/research/awk.bundle.Z中。这是一个压缩的 shell档案
应
隔
中，在mawk的1.4版本中这个语句开始可用。
用在SystemV3.1版本中，
南。gawk 也将 RT（记录终止符）设置为实际与 RS 匹配的输入文本。
。在这种情况下，
在命令行赋值的转义字符现在可以解释
将正则表达式作为简单的表达式成为可能。例如：
srand（返回的是什么）
函数 srand ()的返回值被定义为前一个种子数。（awk 书中没有陈述
改进了printf：增加了动态宽度和提高了精度，
添加了tolower（和toupper 函数
if(/cute/ 1l/sweet/)
当前的数据文件将被放弃，操作从脚本的顶端开始，并
QQ群：
记录被输入中与正则表达式匹配的最长文件分
50192241
它的可免费使用的源代码可用通过匿
- 288 -
，而不仅仅是单个字
第十一章
“%”的作用被合理化
awk 的系列产品
，这
---
## Page 271
注3：
像”模式来传输这个文件。
果有距离近的站点，你可以从那里获得这个文件。确保用“二进制”或“镜
gawk 的源代码可以通过连接到主机 ftp.gun.org上的匿名 FTP（注 3）获得。
和FreeBSD。
Linux 系统，
免费软件机构的 awk 的 GNU企业版，即 gawk，实现了 POSIX awk 中的所有特
GUN awk (gawk)
真正的 awk”
Web 主页 (http://cm.belI-labs.com/who/bwk） ,
特
除
录中可以获得。
它
出的FTP站点上检索到，而且可以在通过 WWW 浏览器访问Dr.Kernighan’s
在1996年6月，
错误的版本在1994年8月发布。
时，CONVFMT 变成可用，并且增加了在前面介绍的函数fflush(）。一个能锁定
在1993年，
点。
余了从前介绍的共有的扩展外，gawk 还有一些其他的特点。下面简单介绍这些
新的版本）。它是经过 gzip 程序压缩过的tar 文件，它的源代码在相同的目
后添加到BellLabsawk）
增加了ENVIRON 数组（这分别由 MKS awk 和 gawk 两者独立开发而来，然
被 gawk 采用，最后添加到BellLabs awk 中）
可以使用多个-f 选项来处理多个源文件（这首先起源于 MKS awk，然后
增加了-V选项，允许在执行 BEGIN过程之前在命令行设置变量
Free software foundation. Inc., 59 Temple Place, Suite 330,
如果你不能使用Internet 却希望得到一份 gawk 的副本，可以联系
Boston, MA 0211-1307 U.S.A.
，贝尔实验室的 Brian kernighan 公开了他的 awk 的源代码。在这
以及各种其他可免费使用的类似于 UNIX的系统中，例如 NetBSD
。这个版本增加了源于 gawk 和 mawk 的几个特点，这些特点在本
QQ群：
。世界上很多站点都从GUN发行站点上“镜像”了这个文件，如
Brian Kernighan 发布了另一个版本。它不仅可以在前面给
print “potential here!"
50192241
289
第十一章
，这里将这个版本称为“一个
awk 的系列产品
---
## Page 272
gawk 可以在适当的地方找到每个文件。这使得建立和使用 awk 库函数变得很容
例如，如果mylibs.awk 是/usr/local/share/awk 中的一个 awk 函数文件,
gawk 允许你指定一个名为 AWKPATH 的环境变量，它定义了 awk 程序文件的搜索
一个 awk 程序搜索路径
数。输入数据来自file1和file2。
这个例子运行 script 中的程序，它可以使用来自文件 mylibs.awk 中的 awk 函
尽管 POSIX awk 允许使用-f 选项来处理多个实例，但在命令行程序中使用库函
还有一些其他的选项对于日常的程序设计和脚本移植是不重要的，细节可以参
项时，
路径。
地说明，并以两个短线“--”
gawk 有几个很有用的命令行选项。
命令行选项
易
gawk-f myprog.awk -f mylibs.awk datafile1
“/”
’字符将不执行查找。
gawk --source'script’-f mylibs.awk file1 file2
将从当前路径开始查找两个默认路径。注意，如果文件名中包含一个
默认路径为：/usr/local/share/awk。因此，
也打开对区间表达式的识别功能。
--posix使所有在POSIX 标准中没有指定的扩展功能不可用。这个选项
--re-interval通过使 gawk 可以识别区间表达式（例如
相同的工作方式。
--traditional使得 GUN 的特殊扩展不可用，
awk 的原始版本中不适用的函数调用。他和--lint 是互相独立的，因为
植到其他 awk 版本的程序结构进行检查。--lint-old 选项用于提示在 
--lint 和--lint-old 使 gawk 在解析时和运行时对于不适用于或不可移
“/stuff{1,3]/”）而使得完全的 POSIX正则表达式匹配有效。
大多数系统中都包含新awk的一些版本。
QQ群：
50192241
”开始。
，和大多数GUN程序一样，这个选项具有清楚
- 290 -
第十一章 
当为-个文件名指定-f 选
例如时间函数和 gensub ()
awk 的系列产品
而
---
## Page 273
一
特殊操作符
表11-5：gawk的扩展表达式
程序是共有的。扩展操作符列于表11-5中。
gawk 提供了几个补充的正则表达式操作符。这些对多数使用正则表达式的 GNU
> worid"]
6
扩展的正则表达式
gawk 允许使用“？”或“:”实现断行。也可以用一个反斜杠字符串延续到新行
M
M
w
行的延续
hello,world
Sgawk’BEGINIprint“hello，
保持兼容
样的，因此和$作用相同。他用于与 GUN Emacs 和其他 GUN 软件
和在缓冲区开始处的空字符串匹配。
和单词内部的空字符串匹配
界）。其他GUN软件使用“\b”,
和一个单词开头的空字符串或末尾的空字符串匹配（单词边
和一个单词末尾的空字符串匹配
和一个单词开头的空字符串匹配
和任何不能做单词组成成分的字符匹配