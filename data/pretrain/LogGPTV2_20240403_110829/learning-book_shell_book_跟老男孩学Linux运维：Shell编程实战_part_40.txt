Shell的数组就是一个元素集合，它把有限个元素（变量或字符内容）用一个名字来
命名，然后用编号对它们进行区分。这个名字就称为数组名，用于区分不同内容的编
号就称为数组下标。组成数组的各个元素（变量）称为数组的元素，有时也称为下标
变量。
有了Shell数组之后，就可以用相同名字来引用一系列变量及变量值了，并通过数
字（索引）来识别使用它们。在很多场合中，使用数组可以缩短和简化程序开发。
上述横述是为了便于读者理解数组的作用。
---
## Page 279
第 13 章Shell数组的应用实践28
13.2Shell数组的定义与增删改查
13.2.1Shell数组的定义
Shell数组的定义有多种方法，列举如下。
方法1：用小括号将变量值括起来赋值给数组变量，每个变量值之间要用空格进行
分隔。
语法如下：
array=(valuel value2 value3...)
此为常用定义方法，需要重点掌握。
示例如下：
[rootθo1dboy-]array=(123）
#<=用小括号将数组内容赋值给数组变量，
[rootθoldboy~]echo s（array[*]}<==输出上面定文的数组的所有元素值。注意语法。
数组元素用“空格”分隔开。
123
方法2：用小括号将变量值括起来，同时采用键值对的形式赋值。
语法如下：
array=（[1]=one [2]=two [3]=three)
此种方法为key-value键值对的形式，小括号里对应的数字为数组下标，等号后面
的内容为下标对应的数组变量的值，此方法比较复杂，不推荐使用。
示例如下：
[rootθo1dboy scripts]#array=（[1]=one[2]=two[3]=three)
[zootθoldboy scripts]echo S（array[*]）<==榆出上图定义的数组的所有元素值。
[root&oldboy 8cripts]echo s（array[1]）<==榆出上面定又的数组的第-个元素值。
one two three
[rootθoldboy Bcripts]echos（array[2]）<==输出上面定义的数组的第二个元素值。
one
two
[root@oldboy scripts]echo S（array[3]}<=输出上面定义的数组的第三个元素值
方法3：通过分别定义数组变量的方法来定义。
语法如下：
array [0]=a;array[1]=b;array[2]=c
此种定义方法比较麻烦，不推荐使用。
示例如下：
---
## Page 280
2E2跟老男孩学Linux运维：Shell 编程实战
[rootθoldboy scripts] array[0]=a
[rootgoldboy scripts]array（1]=b
[root@oldboy scripts]# array[2]=c
[root@oldboy scripta]# echo S（array[0]]
方法4：动态地定义数组变量，并使用命令的输出结果作为数组的内容。
语法为：
array=（s（命今））
或：
array=（令)
示例如下：
[rooteoldboy scripts]mkdir/array/-p
[rooteoldboy scripts]le-1/array/
[root@oldboy scripts] touch /array/(1..3).cxt
总用量0
-rw-r--r--1rootroot09月
609:381.txt
-rw-r--x--1rootroot09月
609:382.txt
-rw-r--r--1rootroot09月
[rootθoldboy scripts]echo S（arrayi*1)
[rootgoldboy scripts]#array=(S(ls /array))
1.txt 2.txt3.txt
说明：还可以使用declare-aarray来定义数组类型，但是比较少这样用。
13.2.2Shell数组的打印及输出
1.打印数组元素
此为常用知识点，需要重点掌握。示例如下：
[rooteoldboy scripts]# axray=（one two three)
[rootaoldboy scripts]#echo $(array[0])
<==打印单个数组元素用S（数组名1下标1）.当未指定数组下标时，数组的下标将从0开始。
[rootBoldboy scripts]echo $（array[1]}
one
[rootθoldboy scripts]# echo $(array[2])
OR-
three
[rootoldboy acripts]echoS（array[*]）<==使用·或θ可以得到整个数组约内容。
one two three
[root8oldboy 8cripts]echo S（array[e]]<==使尾·或α可以得到基个数细的内客
---
## Page 281
第 13 章Shell 数组的应用实践263
2.打印数组元素的个数
此为常用知识点，需要重点掌握。示例如下：
[rootθoldboyBcripts]echos（array[*]）<-使用·或9可以得列整个数组内容。
[rootθoldboy scripts]echoS（array[*]）<==用s（+数组名[a或·]）可以得到数组
的长度，这和前文讲解的变量子串知识是一样的，困为数组也是变量，只不过是特殊的变量，因此变量的子
串誉换等知识他通合于数组。
[zootθoldboyscripts]echos（array[e]）<=使用·或θ可以得到整个数组内容。
[root9oldboy scripts]echo s（#array[9]）<==用s（数组名[@或·]）可以得到数细
one two three
的长度，这和前文讲解的变量子串如识是一样的，困为数组也是变量，只不过是特殊的变量，因此变量的子
辛替换等如识也通合于数组。
3.数组赋值
如果下标不存在，则自动添加一个新的数组元素，如果下标存在，则覆盖原来的值。
示例如下：
[rooteoldboy scripts]# array=(one two three)
[rooteoldboy scripts]#echo $（array[*])
[root@oldboy scripts]+ array[3]=four
<==增加下标力3的数组元素
[zooteoldboy scripts]# echo $（array[*])
one two three four
[rooteoldboy scripts]# array[0]=oldboy
[rooteoldboy scripts]#echo ${array[*1]
oldboy two three four
[root@oldboy 8cripts]#array[0]=o1dboy
<==修改数组元素。
[rootBoldboy scripts]echo S(array[θ]]
o1dboy 234
4.数组的删除
素，如果不带下标，则表示清除整个数组的所有数据。
示例如下：
[rootgoldboy scripts]#echo $（array[*]]
oldboy two three four
[root@oldboy scripts]#unset array[1]
<==取消下标为1的数组元素。
[xootoldboy scripts]echo$（array[*]]<==打印输出后发现数组元素“two”不见了。
[rooteoldboy scripts]#unset array
[root@oldboy scripts]echo $(array[*]]
<==别除整个数组。
<==没有任何内容了。
---
## Page 282
264跟老男孩学 Linux运维：Shell 编程实战
5.数组内容的截取和替换
这里和前文变量子串的替换是一样的，因为数组是特殊的变量。数组元素部分的内
容截取的示例如下：
[root@o1dboy scripts]array=（123 45）
[root@oldboy scripte]+echo S（array[θ]:1:3]
<==截取1号到3号数组元素
234
[root@oldboy scripts] echo $（array[9]]
[rooteoldboy scripts]array=($（echo(a..z}）)
<将变量的结果赋值给数组变量
abcdefghijklmnopqrstuvwxyz
[root@o1dboy scripte] echo $（axray[9]:1:3]
<==截取下标为1到3的数组元素
[rooteoldboy scripts]# echo $（array[θ]:0:2]
bcd
<==截取下标为0到2的数组元素。
ab
替换数组元素部分内容的代码如下：
[root@oldboy scripts]#array=(1 231 1）
[root9oldboy scripts]# echo $(array[θ]/1/b)
<==把数组中的1替换成b，原数组
米被修改，和sed很像。
提示：调用方法为S[数组名[@或*查找字符/替换字符），该操作不会改变原先
数组的内容，如果需要修改，可以参考上面的例子，重新定义数组。
删除数组元素部分内容的代码如下：
[rooteoldboy scripts]array=(one two three four five)
[rooteoldboy scripts] echo $(array[e]]
one tuo three four five
[root@oldboy scripts] echo S(array[9]#o*)
从左边开始匹配最短的数组元素，
井删除。
one two three four five
[rooteoldboy scripts]# echo ${arrayl[e]#o*)
<==从左边开始匹配最长的数组元素，
并型除
two three four five
[root@oldboy scripts] echo S(array[9]ef*)
<==从右造开始匹配最超的数组元素，
井除
[root@oldboy scripts]# echo S(azray[9]af*}
从右造开始匹配最长的数组元素，
井到除
提示：数组也是变量，因此也适合于前面讲解过的变量的子串处理的功能应用。
---
## Page 283
第13章Shell数组的应用实践285
13.3Shell数组脚本开发实践
范例13-1：使用循环批量输出数组的元素。
方法1：通过C语言型的for循环语句打印数组元素。
[rooteoldboy scripts]cat 13_1_1.sh
+1/bin/sh
array=(1 2 3 4 5)
for（（i=0;i<S（#axray[*]）i+▪））<==从数组的第一个下标0开始，环数组的所有下标。
do
echo $(array[i]]
<==打印数组元素。
done
输出结果如下：
[rooteoldboy scripts]#sh 13_1_1.sh
2
1
3
4
5
方法2：通过普通for循环语句打印数组元素。
[root@oldboy scripts]cat 13_1_2.sh
#1/bin/ah
array=（12345）
fornin S（array[*]）#<=S（array[*]}表示输出数组的所有元素，相多于列表数组元素。
do
<这里就不是直接去数组里取元素了，而是取变量n的值。
done
输出结果同方法1，此处略过。
方法3：使用while循环语句打印数组元素。
[root8oldboy scripts] cat 13_1_3.sh
#1/bin/sh
array=（12345）
i=0
do
echo s(array[i])
done
输出结果同方法1，此处略过。
范例13-2：通过竖向列举法定义数组元素并批量打印。
---
## Page 284
26跟老男孩学 Linux运维：Shell 编程实战
[root@oldboy scripts]# cat 13_2_1.sh
qs/uq/i#
oldboy
array=(
#<==对于元素特别长的情况，例如URL地址，将其竖向列出来看起来会更舒服和规范
oldgirl
xiaoting
for （(i=0;i<S（#array[*1）;i+）)
do
done
echo
echo *array len:S(#array(*])*
输出结果如下：
[rootθoldboy scripts]sh 13_2_1.sh
This is num 0,then content is oldboy
This is num 1,then content is oldgir1
This is num 2,then content is xiaoting
This is num 3,then content is bingbing
array len:4
范例13-3：将命令结果作为数组元素定义并打印。
准备数据：
[rooteoldboy scripts]mkdir-p/array/
[root@oldboy scripts]touch/array/(1..3).txt
[root@oldboy scripts]# 1s/array/
1.txt2.txt3.txt
以下为开发脚本：
[root@oldboy scripts]# cat 13_3_1.sh
gseg/utg/18
dir=($(ls /array))
#<==把1s/arzay命令结果放进数组里。
for[（i=0；i<s（#dix[*]]：1++））#<==S（#dix[*]}为数组的长度。
do
echo*7his 1o No.$i,filename ie s(dir[$i]}*
done
输出结果如下：
[root@oldboy scripts]# sh 13_3_1.sh
This is No.0,filename is 1.txt
This is No.1,filename
This 1s N0.2,f11ename 1s 3.txt
---
## Page 285
第13章Shell数组的应用实践267
13.4Shell数组的重要命令
（1）定义命令
静态数组：
array=(1 2 3）
动态数组：
array=($(18))
为数组赋值：
array[3]=4
（2）打印命令
打印所有元素：
S(array[e]]或s[array[*])
打印数组长度：
S（#array[9]}或s（#array[*])
打印单个元素：
S（array[i]）<==i是数组下标。
（3）循环打印的常用基本语法
1/bin/sh
arr-(
10.0.0.11
10.0.0.22
10.0.0.33
<==C语言for循环语法
for （(i=0;i<S(#arr[*]}:i++))
do
(.
done
<普通for环语法
echo
for n in s（arr(*])
do
echo *$n*
done
---
## Page 286
28跟老男孩学Linux运堆：Shel 编程实战
13.5Shell数组相关面试题及高级实战案例
范例13-4：利用bashfor循环打印下面这句话中字母数不大于6的单词（某企业面
试真题）。
I an oldboy teacher welcone to oldboy training class
解答思路具体如下。
1）先把所有的单词放到数组里，然后依次进行判断。命令如下：