veriﬁed using the oracle. The attack completes successfully if a true
PIP has been recovered.
In certain cases, the PIT may be extracted only for sub-circuits
that have only a subset of protecting inputs. In such scenarios, our
attack targets the candidate PIPs with the largest number of speciﬁed
bits. Brute-force or even attacks such as SAT/SMT attack may be
used to determine the values of the remaining bits in the PIP.
B Success Rate of Structural Attacks
Continuing the discussion in Section 3.1, we consider two scenar-
ios for attackers.
Well-informed attacker. Let us ﬁrst assume that the attacker knows
whether FON
is constructed by adding a PIP or removing a PIP from
cp
FON
orig. Later, we also consider the case where the attack does not know
this information. Considering the cases where the PIP is merged,
i.e., Case 1(a) or 2(a), Pr(AS ), i.e., the probability of success for a
structural attack to recover the PIP from the PIT is
(cid:26) 1
(cid:26) 1
(cid:27)
.
(cid:27)
.
Pr(AS ) (cid:20) max
jSu1j ;
1
jSu2j
Pr(AS ) (cid:20) max
jSm1j ;
1
jSm2j
When the PIP is merged, i.e., Case 1(b) and 2(b), the attacker has
to account for all minterms in either FON
cp or FOFF
cp
. Then,
Uninformed attacker. The CAC techniques may construct the Ccp
by XORing Corig with a PIP, i.e., the PIP may be either added or
removed. Thus, the attacker has to account for both addition and
removal cases. When the PIP remains isolated, the success rate for
the attacker is
jSu1j+jSu2j , implying that choosing unmergeable PIPs
is at most (jSu1j +jSu2j)-secure against structural attacks. When the
PIP is merged, the search space for attacker is the set of all minterm
jSm1j+jSm2j = 1
contained in either FON
2k .
, i.e., Pr(AS ) =
cp or FOFF
cp
1
1
C Proof of Theorem 1
Theorem 1: Satisfying Dist2 property is sufﬁcient to achieve b-
security against structural attacks on Boolean circuits represented
in SOP form, where b = jSj.
Proof: We assume that the attacker has access to 1) the corrupted
circuit implemented in SOP format and 2) the PIT of the corrupted
circuit. Locking using a D2PIP ensures that the PIT does not directly
reveal the PIPs to the attackers. The search space S for an attacker is
the set of potential D2PIP candidates an attacker has to account for.
Since the attacker does not know whether a D2PIP has been added
or removed, he/she must consider both cases.
Case 1. Removing a D2PIP. Removing a D2PIP from FON
orig yields,
FON
cp = FON
orig nfD2PIPg; 8PIi 2 FON
cp ; D(D2PIP;PIi) (cid:21) d.
For an attacker, the search space S1 is the set of all potential PIPs
that are at least distance two (or more generally distance d) away
from the PIs of FON
cp , i.e.,
S1 =fpij D(pi;PIi) (cid:21) d; 8PIi 2 FON
cp g =
P\
i=1
fpi j D(pi;PIi) (cid:21) dg,
(3)
where, P is the number of PIs in FON
Case 2: Adding a D2PIP. Adding a D2PIP into FON
ered as removing a D2PIP from FOFF
cp and pi 2 f0;1gk.
orig can be consid-
orig nfD2PIPg; 8PI0
FOFF
cp = FOFF
Therefore, the search space S2 for the attacker is,
orig . Hence,
i 2 FOFF
cp
i ) (cid:21) d.
; D(D2PIP;PI0
P0\
fpi j D(pi;PI0
S2 =fpij D(pi;PI0
i ) (cid:21) d; 8PI0
i 2 FOFF
cp
g =
where, P0 is the number of PIs in FOFF
cp
Since an attacker does not know whether the corrupted circuit is
constructed by adding or removing a D2PIP, the overall search space
i=1
and pi 2 f0;1gk .
i ) (cid:21) dg,
(4)
USENIX Association
30th USENIX Security Symposium    1071
SS2. Note that S1 and S2 are disjoint. A
S for the attacker is S = S1
PI that belongs to S1 must belong to FOFF
, and a PI that belongs to
cp
and FON
S2 must belong to FON
cp are disjoint. Hence, the size
of the overall search space for the attacker is jSj = jS1j +jS2j. The
probability of success for an attacker is 1jSj . Thus, from Deﬁnition 3,
locking only D2PIPs in two-level SOP circuits achieves a security
level of b = jSj = jS1j +jS2j against structural attacks.
cp . FOFF
cp
D Computing Upper and Lower Bounds for
the Size of the Search Space
For a given circuit, the exact computation of jS1j and jS2j is an
NP-Hard problem [93]. However, we can determine the upper and
lower bounds using the inclusion-exclusion inequality [94].
Bounds for Case 1. This analysis is based on the case where a
orig nfD2PIPg, and 8PIi 2
PIP is removed from FON
cp ; D(D2PIP;PIi) (cid:21) d. The search space S1 for the attacker is
FON
the set of possible PIs that are distance (cid:21) d from the PIP.
orig, i.e., FON
cp = FON
P\
P[
S1 =
fpijD(pi;PIi) (cid:21) dg =
fpijD(pi;PIi) <>:C1 =
P
(cid:229)
i=1
1(cid:20)i>>>>>>><>>>>>>>>:
(cid:229)
t1=0
0i
i j
a1
i j (cid:2) min(t1;t2)
1 and C0
C0
1 =
C0
2 =
t
d(cid:0)1
(cid:229)
t2=0
0 j
i j
a2
2 are
P0
(cid:229)
i=1
(cid:0)s0
(cid:1)(cid:2)
(cid:1)#
(cid:229)
1(cid:20)i< j(cid:20)P0
t1(cid:0)g
t2(cid:0)g
(cid:229)
(cid:229)
a1=0
a2=0
i (cid:2)(cid:0)k(cid:0)w0
" d(cid:0)1
(cid:1)(cid:0)
(cid:0)h
(cid:1)(cid:0)h
CP ’s PIT, where i 2 f1;2; : : : ;P0g.
The deﬁnitions of the parameters are slightly different from those in
Case 1: w0
i j is the number
of don’t care bits in PI0
i and PI0
i j is the number of speciﬁed bits
that have the same value in PI0
j, f 0
i j is the number of speciﬁed
bits that are mismatched in PI0
0i
j, h
i j is the number of bits that
0 j
are speciﬁed in PI0
j, and h
i j is the number of bits
that are don’t care in PI0
i but speciﬁed in PI0
j.
j, s0
i and PI0
i and PI0
i but don’t care PI0
i is the number of don’t care bits in PI0
i is the ith PI in FOFF
Assume PI0
t1(cid:0)g(cid:0)a1;t2(cid:0)g(cid:0)a2
i , w0
f 0
i j
.
E Discussion: Physical Aspects of Security
Even cryptographic techniques with proven guarantees are sub-
jected to physical and side-channel attacks [95, 96]. Thus, logic
locking is also susceptible to physical attacks [97, 98] Such attacks
can be thwarted by 1) storing the key in a tamper-proof memory and
2) adopting defenses developed for side-channel attacks [71].
1072    30th USENIX Security Symposium
USENIX Association