### 3.4. Expedited vs. Non-Expedited Recoveries

In this section, we compare the recovery latency of CESRM’s expedited and non-expedited recovery schemes. We define \( d \) and \( RTT = 2d \) as upper bounds on the one-way and round-trip distance (delay) between any two members of the reliable multicast group.

#### 3.4.1. Non-Expedited Recoveries

First, we consider successful first-round non-expedited recoveries. Since requests and replies are scheduled uniformly within the request and reply intervals, a rough upper bound on the average latency of a successful first-round non-expedited recovery can be expressed as:
\[
(C1 + \frac{1}{2}C2)d + d + (D1 + \frac{1}{2}D2)d + d
\]
(1)

This delay is derived from the scenario where both the request and reply are transmitted at the midpoint of their respective scheduling intervals. This is a rough upper bound for two reasons:
1. \( d \) is an upper bound on the inter-host transmission latencies, and some of the actual latencies may be smaller.
2. Multiple requests may be scheduled per loss, increasing the probability that the request initiating the packet's recovery is sent or received in the first half of the request interval. This is similarly true for replies.

Given typical SRM scheduling parameter values used by Floyd et al. [4, 5] (i.e., \( C1 = C2 = 2 \) and \( D1 = D2 = 1 \)), the rough upper bound on the average recovery latency of a successful first-round non-expedited recovery in CESRM is 6.5 \( d \), or 3.25 \( RTT \).

#### 3.4.2. Expedited Recoveries

In contrast, an upper bound on the recovery latency of a successful expedited recovery in CESRM is given by:
\[
REORDER-DELAY + 2d = REORDER-DELAY + RTT
\]
(2)

Assuming that the reordering delay (\( REORDER-DELAY \)) is negligible compared to the latency (i.e., \( REORDER-DELAY \ll RTT \)), the recovery latency for packets recovered via expedited rather than first-round non-expedited recoveries is reduced by approximately 2.25 \( RTT \).

### 4. Evaluation Through Trace-Driven Simulations

We evaluate the performance of SRM and CESRM using trace-driven simulations in NS2 [3]. Our simulations reenact the 14 IP multicast traces of Yajnik et al. [15], capturing the packet loss locality exhibited in real IP multicast transmissions. We compare the performance of CESRM against SRM, considering CESRM in its simplest form without router assistance.

#### 4.1. IP Multicast Traces

The 14 IP multicast transmission traces of Yajnik et al. [15] involve single-source IP multicast transmissions where packets are sent at a constant rate to a subset of 17 research community hosts across the US and Europe. The data collected includes per-receiver sequences indicating which packets were received and in what order. These sequences do not include reception times. Yajnik et al. also provide the IP multicast tree topology, assumed to be static throughout the transmission.

Table 1 lists the source, number of receivers, IP multicast tree depth, packet transmission period, transmission duration, number of packets transmitted, and number of losses for each of the 14 traces. For more details, see [15].

| Trace | Source & Date | Duration (hr:min:sec) | # of Rcvrs | Tree Depth | Period (msec) | # of Pkts | Losses |
|-------|---------------|-----------------------|------------|------------|---------------|-----------|--------|
| 1     | RFV960419     | 1:00:00               | 80         | 12         | 40            | 45001     | 24086  |
| 2     | RFV960508     | 1:39:19               | 80         | 10         | 40            | 148970    | 55987  |
| 3     | UCB960424     | 1:02:29               | 80         | 15         | 40            | 93734     | 33506  |
| 4     | WRN950919     | 0:23:31               | 80         | 8          | 40            | 17637     | 10276  |
| 5     | WRN951030     | 1:16:02               | 80         | 10         | 40            | 57030     | 15879  |
| 6     | WRN951101     | 0:55:40               | 80         | 9          | 40            | 41751     | 18911  |
| 7     | WRN951113     | 1:01:55               | 80         | 12         | 40            | 46443     | 29686  |
| 8     | WRN951114     | 0:51:23               | 80         | 10         | 40            | 38539     | 11803  |
| 9     | WRN951128     | 0:59:56               | 80         | 9          | 40            | 44956     | 33040  |
| 10    | WRN951204     | 1:00:32               | 80         | 11         | 40            | 45404     | 16814  |
| 11    | WRN951211     | 1:36:42               | 80         | 11         | 40            | 72519     | 44649  |
| 12    | WRN951214     | 0:51:38               | 80         | 7          | 40            | 38724     | 20872  |
| 13    | WRN951216     | 1:06:56               | 80         | 8          | 40            | 50202     | 37833  |
| 14    | WRN951218     | 1:33:20               | 80         | 8          | 40            | 69994     | 43578  |

#### 4.2. Estimating the Links Responsible for IP Multicast Transmission Losses

We estimate the links responsible for each loss based on the IP multicast tree topology and the observed loss patterns. Each loss pattern can result from a single or multiple link failures. We select the most probable combination of links to represent each loss pattern. For 13 of the 14 traces, over 90% of the selected link combinations have probabilities exceeding 95%. For the remaining trace, 85% of the selected combinations have probabilities exceeding 98%.

#### 4.3. Simulation Setup

Our simulations use the most recent loss expedited requestor/replier selection policy, which outperforms the most frequent loss policy due to higher correlation with recent losses. Receivers cache a single optimal requestor/replier pair.

For each trace, we set up the IP multicast tree and disseminate packets from the root to the leaf nodes. We synthetically choose link bandwidths and delays. Each link has a bandwidth of 1.5 Mbps, and we simulate with link delays of 10 ms, 20 ms, and 30 ms. The results are similar, so we present only the 20 ms delay results.

SRM simulations use typical parameter settings (e.g., \( C1, C2 = 2 \), \( C3 = 1.5 \), \( D1, D2 = 1 \), \( D3 = 1.5 \)). We assume lossless session packet exchange and inject losses according to the link trace representation. Recovery is also assumed to be lossless to reduce variability in results.

### 4.4. Simulation Results

Figure 1 shows the per-receiver average normalized recovery times for four of the 14 traces. CESRM consistently exhibits lower recovery latencies compared to SRM.

**Figure 1: Per-receiver average normalized recovery times**

- **Trace RFV960419**
  - Average Normalized Recovery Time
  - SRM vs. CESRM

- **Trace RFV960508**
  - Average Normalized Recovery Time
  - SRM vs. CESRM

- **Trace UCB960424**
  - Average Normalized Recovery Time
  - SRM vs. CESRM

- **Trace WRN951128**
  - Average Normalized Recovery Time
  - SRM vs. CESRM

[Graphs and detailed results would be included here]

Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04)  
0-7695-2052-9/04 $ 20.00 © 2004 IEEE  
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:50:28 UTC from IEEE Xplore. Restrictions apply.