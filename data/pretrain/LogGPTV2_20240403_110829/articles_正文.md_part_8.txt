## 5.6 小结
本章主要介绍了字段的概念和字段抽取方法。由于日志语法的多样性，字段抽取方法也多种多样，在抽取过程中常常需要将多种方法结合使用。本章还对schema
on write和schema on
read的优缺点进行了详细解释，并总结了字段解析中常见的问题。
第6章 日志存储
>  概述
>
>  日志存储形式
>
>  日志存储方式
>
>  日志物理存储
>
>  日志留存策略
>
>  日志搜索引擎
>
>  小结
## 6.1 概述
日志用于记录机器执行过程，其内容会不断增加，在累积到一定量时，对存储和检索都是不小的挑战。日志以何种形式存储，以何种策略留存，如何应用于检索，是本章讨论的重点。
## 6.2 日志存储形式
日志用于记录系统运行期间的关键信息和错误信息，以便监控系统健康度和定位问题所在。因此，其存储的内容应可读可译，或者可转化为日志使用方理解的语言。日志存储形式通常包括普通文本、二进制文本、压缩文本和加密文本。
### 6.2.1 普通文本
目前，大多数系统采用普通文本的形式记录日志，该类日志写入时方便快捷，查询时可读性强，且很多日志类框架都支持。
普通文本日志的存储步骤如下：
（1）在磁盘中创建一个日志文件，用于存储日志，并在程序中指定。
（2）每条日志以常见或自定义格式进行存储，如图6-1所示。常见日志格式包含时间戳、日志级别、线程或进程编号、请求ID及详细信息等。Syslog是一种应用广泛的日志存储格式，是许多系统（如UNIX、Linux）的标准日志记录格式。
（3）根据系统运行情况，将每条日志按顺序依次追加在指定日志文件尾部。
（4）根据配置判断日志存储的结束位置及创建新日志文件的时间。例如，配置每天创建一个新日志文件，则从第二天零点开始，系统会按照日期新创建一个日志文件，第二天的日志将被记录到新的日志文件中去，不会被追加到第一天的日志文件尾部。如果没有配置，那么每条日志默认被追加到已创建的日志文件尾部，直到磁盘已满。
+-----------------------------------------------------------------------+
| 2019-05-22 15:07:15,663 WARN pool-11-thread-16 search. EsSearchUtil   |
| e38ad41e_d674_4f24_b9a9_927d0d84db2f: execute spl with rc not 0       |
|                                                                       |
| 2019-05-22 15:08:34,315 DEBUG                                         |
| yotta-frontend-actor-system-akka.actor.default-dispatcher-56          |
| yottabyte.FrontendService f79c0ff7_5c50_2234_9beb_797fed264acd:       |
| handle NoRESTful success, frontendRequest costTime: 28ms, uri -\> GET |
| http://192.168.1.134:8080/?act=\_health                               |
|                                                                       |
| 2019-05-22 15:08:34,627 INFO                                          |
| yotta-frontend-actor-system-akka.actor.default-dispatcher-43          |
| yottabyte.FrontendService 24bfa889_769b_4ada_9fa9_3840ca9bbe48:       |
| receive NoRESTful uri -\> POST                                        |
| http://192.168.1.134:8080/es?act=batch_increase_used_flow_quota       |
+-----------------------------------------------------------------------+
图6-1 普通文本日志存储格式
### 6.2.2 二进制文本
二进制文本类型的日志文件是机器可读的日志文件，对人类而言并不易读。在通常情况下，想要读取该类日志文件，需要使用专门的工具和应用程序。下面以MySQL二进制日志文件为例，介绍二进制日志文件的存储格式、作用和解析工具。
MySQL二进制日志文件主要记录修改数据或可能引起数据变更的MySQL语句，用于数据库恢复、主从复制、审计等操作。
如图6-2所示为MySQL二进制日志文件列表。
+-----------------------------------------------------------------------+
| root@localhost\[tempdb\]\> show binary logs;                          |
|                                                                       |
| +\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\--+                 |
|                                                                       |
| \| Log_name \| File_size \|                                           |
|                                                                       |
| +\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\--+                 |
|                                                                       |
| \| binlog.000001 \| 147 \|                                            |
|                                                                       |
| \| binlog.000002 \| 147 \|                                            |
|                                                                       |
| \| binlog.000003 \| 147 \|                                            |
|                                                                       |
| \| binlog.000004 \| 498 \|                                            |
|                                                                       |
| +\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\--+                 |
|                                                                       |
| \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--                             |
|                                                                       |
| 作者：Leshami                                                         |
|                                                                       |
| 来源：CSDN                                                            |
|                                                                       |
| 原文：https://blog.csdn.net/leshami/article/details/39801867          |
+-----------------------------------------------------------------------+
图6-2 MySQL二进制日志文件列表
打开binlog.000003文件，可以看到文件内容如图6-3所示。
+-----------------------------------------------------------------------+
| root@localhost\[tempdb\]\> hexdump -C binlog.000003                   |
|                                                                       |
| 00000000 fe 62 69 6e f1 34 08 58 0f 02 00 00 00 67 00 00              |
| \|.bin.4.X\.....g..\|                                                 |
|                                                                       |
| 00000010 00 6b 00 00 00 01 00 04 00 35 2e 35 2e 35 31 2d              |
| \|.k\...\....5.5.51-\|                                                |
|                                                                       |
| 00000020 6c 6f 67 00 00 00 00 00 00 00 00 00 00 00 00 00              |
| \|log\...\...\...\....\|                                              |
|                                                                       |
| 00000030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00              |
| \|\...\...\...\...\....\|                                             |
|                                                                       |
| 00000040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 13              |
| \|\...\...\...\...\....\|                                             |
|                                                                       |
| 00000050 38 0d 00 08 00 12 00 04 04 04 04 12 00 00 54 00              |
| \|8\...\...\...\....T.\|                                              |
|                                                                       |
| 00000060 04 1a 08 00 00 00 08 08 08 02 00 42 35 08 58 02              |
| \|\...\...\.....B5.X.\|                                               |
|                                                                       |
| 00000070 02 00 00 00 4a 00 00 00 b5 00 00 00 08 00 a2 00              |
| \|\....J\...\...\.....\|                                              |
|                                                                       |
| 00000080 00 00 01 00 00 00 0a 00 00 1a 00 00 00 00 00 00              |
| \|\...\...\...\...\....\|                                             |
|                                                                       |
| 00000090 01 00 00 00 00 00 00 00 00 06 03 73 74 64 04 21              |
| \|\...\...\.....std.!\|                                               |
|                                                                       |
| 1                                                                     |
|                                                                       |
| 2                                                                     |
|                                                                       |
| 3                                                                     |
|                                                                       |
| 4                                                                     |
|                                                                       |
| 5                                                                     |
|                                                                       |
| 6                                                                     |
|                                                                       |
| 7                                                                     |
|                                                                       |
| 8                                                                     |
|                                                                       |
| 9                                                                     |
|                                                                       |
| 10                                                                    |
|                                                                       |
| 11                                                                    |
|                                                                       |
| \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--                             |
|                                                                       |
| 作者：朱小厮                                                          |
|                                                                       |
| 来源：CSDN                                                            |
|                                                                       |
| 原文：https://blog.csdn.net/u013256816/article/details/53020335       |
+-----------------------------------------------------------------------+
图6-3 MySQL二进制日志文件内容
下面利用解析工具对二进制日志文件进行解析。
（1）使用命令行工具mysqlbinlog直接提取二进制日志文件的内容。
从图6-4可以看到，MySQL二进制日志文件中不仅记录了对MySQL数据库进行修改的所有操作，还记录了操作发生时间、执行时长、操作数据等信息。
+-----------------------------------------------------------------------+
| root@localhost\[tempdb\]\> system mysqlbinlog                         |
| /var/lib/mysql/binarylog/binlog.000004                                |
|                                                                       |
| /\*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1\*/;                       |
|                                                                       |
| /\*!40019 SET @@session.max_insert_delayed_threads=0\*/;              |
|                                                                       |
| /\*!50003 SET                                                         |
| \@OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0\*/;         |
|                                                                       |
| DELIMITER /\*!\*/;                                                    |
|                                                                       |
| \# at 4                                                               |
|                                                                       |
| #141003 13:46:39 server ID 1 end_log_pos 107 Start: binlog v 4,       |
| server v 5.5.39-log created 141003 13:46:39                           |
|                                                                       |
| \# Warning: this binlog is either in use or was not closed properly.  |
|                                                                       |
| BINLOG \'                                                             |
|                                                                       |
| PzguVA8                                                               |
| BAAAAZwAAAGsAAAABAAQANS41LjM5LWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA |
|                                                                       |
| AAAAAAAAAAAAAAAAAAAAAAAAEzgNAAgAEgAEBAQEEgAAVAAEGggAAAAICAgCAA==      |
|                                                                       |
| \'/\*!\*/;                                                            |
|                                                                       |
| \# at 107                                                             |
|                                                                       |
| #141003 14:08:58 server ID 1 end_log_pos 194 Query thread_ID=1        |
| exec_time=0 error_code=0                                              |
|                                                                       |
| SET TIMESTAMP=1412316538/\*!\*/;                                      |
|                                                                       |
| SET @@session.pseudo_thread_ID=1/\*!\*/;                              |
|                                                                       |
| SET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0,     |
| @@session.unique_checks=1, @@session.autocommit=1/\*!\*/;             |
|                                                                       |
| SET @@session.sql_mode=0/\*!\*/;                                      |
|                                                                       |
| SET @@session.auto_increment_increment=1,                             |
| @@session.auto_increment_offset=1/\*!\*/;                             |
|                                                                       |
| /\*!\\C utf8 \*//\*!\*/;                                              |
|                                                                       |
| SET                                                                   |
| @@session.character_set_client=33,@                                   |
| @session.collation_connection=33,@@session.collation_server=8/\*!\*/; |
|                                                                       |
| SET @@session.lc_time_names=0/\*!\*/;                                 |
|                                                                       |
| SET @@session.collation_database=DEFAULT/\*!\*/;                      |