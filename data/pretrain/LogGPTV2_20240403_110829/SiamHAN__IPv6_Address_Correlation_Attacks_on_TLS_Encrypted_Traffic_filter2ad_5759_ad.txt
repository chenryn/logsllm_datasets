attention shown in Figure 5(c), F5,F10,F11,F13 correspond to
the server ﬁngerprints including SNI, issuer, subject, and ﬂow
1The node attributes of client node C are 2001:db8:3999::d05b:e903:1e77
and 2001:db8:880b::d05b:e903:1e77 in the two knowledge graphs.
(a) SCS attention of node C
(b) FCF attention of node C
(c) FSF attention of node S2
(d) Semantic attention
(e) Graph attention on partial nodes C ∼ F13
Figure 5: A case study of hierarchical attention to help learn
the similarity between two addresses’ meta-information.
count, respectively. Results indicate they are more important
to contribute to the server service embeddings learning.
Analysis of Semantic-level Attention. Semantic-level at-
tention aggregates the 3-type semantic-speciﬁc embeddings
for each node through the importance weights, which denotes
the importance of meta-paths for the correlation task. In Fig-
ure 5(d), the FCF meta-path reaches the most attention in
both the two knowledge graphs. The result indicates that the
semantic-speciﬁc embedding learned by user browser param-
eters substantially affects the user correlation.
Analysis of Graph-level Attention. Graph-level attention
provides a global view on the similar ﬁnal embedding of all
nodes in the two graphs. The weights of partial nodes C ∼ F13
are shown in Figure 5(e). Among them, client node C and
client ﬁngerprint nodes F1 ∼ F4 obtain higher attention values
than the server-related nodes. It indicates SIAMHAN takes
more attention to the strong correlation from the client meta-
information while only keeping eyes on speciﬁc server meta-
information due to the complexity of user activity. Finally,
SIAMHAN could effectively leverage the meta-information
integrated from address-based and trafﬁc characteristic corre-
lation to perform correlation attacks.
USENIX Association
30th USENIX Security Symposium    4339
Figure 6: The performance of all baselines compared to
SIAMHAN based on the 5-month time-based split dataset.
Figure 8: SIAMHAN’s performance is consistent regardless
of the test size in the time-based split dataset.
Figure 7: SIAMHAN’s performance on different background
knowledge volume κt formed by wiretapping times t.
Figure 9: SIAMHAN’s performance on different time gaps
between training and test dataset for timeliness evaluation.
6.3 Address Correlation
To explore the effectiveness of IPv6 address correlation at-
tacks, we ﬁrst measure the correlation performance of arbi-
trary address pairs performed by SIAMHAN. An adversary
could conduct correlation attacks on arbitrary pairwise ad-
dresses in this experimental setting based on the background
knowledge κt. We comprehensively evaluate SiamHAN’s
performance on pairwise addresses correlation tasks by con-
structing training pair samples and test pair samples.
Correlation Performance. As a ﬁrst look at the correla-
tion performance, we train the attack model on the dataset
with a time-based split setting. Figure 6 compares the ROC
curve of SIAMHAN to other systems on the dataset. As can
be seen, SIAMHAN signiﬁcantly outperforms the prior corre-
lation algorithms with a wide gap between the ROC curve of
SIAMHAN and other approaches. For instance, for a target
FPR = 4× 10−2, while SIAMHAN achieves a TPR of 0.90,
all baselines provide TPRs less than 0.40. The drastic im-
provement comes from the fact that SIAMHAN could model
a correlation function tailored to pairwise client addresses
with moderate learning on the knowledge of addresses. Since
the test dataset contains addresses from not seen users in the
training set, SIAMHAN keeps a strong practical ability to
correlate unknown addresses on the open-world dataset.
Adversary’s Background Knowledge. In an IPv6 ad-
dress correlation attack, the adversary’s background knowl-
edge κt is essential to build the knowledge graph for each
intercepted address. In Figure 7, we measure the impact of
knowledge volume on SIAMHAN’s performance with dif-
4340    30th USENIX Security Symposium
USENIX Association
Figure 10: The tracking performance of all baselines com-
pared to SIAMHAN on the 5-month time-based split dataset
with different sizes of tracking candidate |S|.
Figure 11: The discovery performance of all baselines com-
pared to SIAMHAN on the 5-month time-based split dataset
with the different number of test users (discovery candidate).
ferent wiretapping times t. This experiment set the training
addresses with different duration of knowledge to build the
training graph samples. Results indicate that a less than 2-
week wiretapping time can not perform a strong enough corre-
lation ability due to the weak knowledge volume. For a target
FPR = 10−1, the adversary is only required 1-month monitor-
ing to provide a TPR of 0.85, which could effectively corre-
late arbitrary address pairs with 90% accuracy. SIAMHAN’s
performance is positively correlated with the volume of the
adversary’s background knowledge on the training set.
Robustness of Test Users. On the consideration of
SIAMHAN’s practicality, we also show the correlation per-
formance on the different sizes of the test dataset. Figure 8
presents the ROC curve results on test datasets with different
numbers of sample pairs. The results are consistent for dif-
ferent numbers of addresses being correlated. It suggests the
robustness of SIAMHAN on the diverse user data. SIAMHAN
could provide stable correlation performance even when ap-
plied on signiﬁcantly larger datasets of intercepted addresses,
e.g., on the trafﬁc collected by a large malicious IXP.
Timeliness. Since the trafﬁc characteristics of IPv6 users
change over time, the deep learning-based algorithm requires
timeliness evaluation to conduct a long-term reliable perfor-
mance. Figure 9 compares the results with different time gaps
between training and test. In this experimental setting, we
train SIAMHAN on the dataset collected in the ﬁrst month and
test the pre-trained model on the same 1-month background
knowledge dataset after different time gaps. The results indi-
cate that SIAMHAN’s performance does not degrade with the
long-time gap. For a target FPR = 10−1, under all time gaps,
SIAMHAN provides TPRs more than 0.95, demonstrating the
continuous effectiveness of the correlation attack model.
6.4 User Tracking
After obtaining the pre-trained attack model, the IPv6 ad-
dress correlation attack could be applied to long-term user
correlation tasks. We introduce user tracking, the ﬁrst chal-
lenging task to sustainedly search target IPv6 users under the
large-scale TLS encrypted trafﬁc.
Tracking Algorithm. Given a pre-trained SIAMHAN,
based on the background knowledge, an adversary could con-
duct long-time user tracking by searching all addresses corre-
lated to the address sample of target users. For a determined
tracking candidate set S that contains the one client address
for each target user, the adversary is required to combine
each candidate Si with each test address Tj in the test dataset
T and build the pairs of their knowledge graphs (cid:104)Si, Tj(cid:105) as
SIAMHAN’s inputs, where i ≤ |S| and j ≤ |T|. Appendix B
shows the detail of the tracking algorithm.
Tracking Performance. To implement IPv6 user tracking,
we train SIAMHAN and all compared baselines on the time-
based split training set and select target user addresses from
the test users to measure the tracking performance on the
test dataset. Figure 10 indicates the tracking performance of
all baselines and SIAMHAN in the user tracking task. As
can be seen, SIAMHAN could correctly identify 1.10∼1.19
times more address pairs associated or non-associated with
the target user samples than the state-of-the-art correlation
system Deepcorr. SIAMHAN outperforms existing correla-
tion techniques with 99% accuracy compared to Deepcorr’s
85% accuracy on the user tracking task.
6.5 User Discovery
User discovery is the second challenging task applied by
SIAMHAN, which could obtain the address groups to dis-
USENIX Association
30th USENIX Security Symposium    4341
Hit PairsAccuracyHit NumberAccuracyTable 5: Ablation study on the 5-month time-based split dataset with all 3 experimental tasks.
Model
Siamese GraphSAGE
Siamese GAT
SIAMHAN - Client
SIAMHAN - Server
SIAMHAN - Node
SIAMHAN - Semantic
SIAMHAN - Graph
SIAMHAN - Classiﬁer
User IP Proﬁling
User SNI Proﬁling
Client Fingerprinting
Deepcorr
SIAMHAN
Accuracy
Address Correlation
AUC
0.942
0.955
0.906
0.920
0.781
0.912
0.909
0.892
0.785
0.777
0.808
0.826
0.966
0.908
0.922
0.902
0.911
0.687
0.906
0.879
0.875
0.711
0.693
0.751
0.802
0.932
User Tracking
AUC Tracking Accuracy
0.933
0.960
0.944
0.953
0.847
0.968
0.950
0.887
0.683
0.632
0.794
0.819
0.977
0.913
0.958
0.930
0.949
0.880
0.943
0.920
0.892
0.630
0.527
0.829
0.855
0.990
User Discovery
Discovery Accuracy
0.847
0.875
0.842
0.863
0.775
0.865
0.839
0.840
0.564
0.545
0.498
0.605
0.880
cover unique IPv6 users on the large-scale encrypted trafﬁc.
Discovery Algorithm. The adversary could construct the
knowledge graph for each intercepted address and use a re-
cursion algorithm to determine the unique users based on the
adversary’s background knowledge. The algorithm ﬁrst se-
lects an arbitrary address as the ﬁrst user group. Then, in each
iteration, the identiﬁed user group set is G, the algorithm cal-
culates the average distance ¯Di between the new input address
and each identiﬁed user group Gi’s addresses, where i ≤ |G|.
When all ¯Di > η, we build a new user group G|G|+1 for the
current input address, while if some ¯Di ≤ η, we classify the
input address into the user group with the closest distance.
Appendix C shows the detail of the discovery algorithm.
Discovery Performance. In our experiments, to explore
the performance of user discovery on the real-world 5-month
dataset, we also train and test the model on the dataset with the
time-based split setting. Figure 11 indicates the discovery per-
formance of all baselines and SIAMHAN in the user discovery
task. Results show a massive gap between SIAMHAN and
previous correlation approaches. For instance, SIAMHAN
provides a discovery accuracy of 88% compared to 60% by
the state-of-the-art system Deepcorr using the same setting,
which comes from SIAMHAN’s 1.40 ∼ 1.54 times more hit
than Deepcorr. The signiﬁcantly high accuracy of SIAMHAN
ensures the practicality to discover active IPv6 users in the
wild trafﬁc.
6.6 Ablation Study
In addition to showing the experiments on the speciﬁc tasks,
we present the ablation study experiments by evaluating the
variants of SIAMHAN to indicate the model superiority sufﬁ-
ciently. Table 5 shows all results of the ablation study.
Embedding Learning with Other GNNs. We further in-
vestigate whether our attacks can apply to other GNNs with
Siamese Networks. Concretely, we focus on GraphSAGE [18]
and GAT [49], which are also well-known for inductive learn-
ing like HAN. We implement Siamese GraphSAGE and
Siamese GAT by replacing the heterogeneous graph attention
component in SIAMHAN. Results show GNNs’ powerful
performance to learn the ﬁnal graph embedding for general
IPv6 address correlation. The variants with other GNNs still
outperform previous correlation systems in all three evalua-
tion tasks. However, SIAMHAN keeps an unreachable better
attack performance than other GNNs due to the semantic
learning from the communication in heterogeneous graphs.
Effectiveness of Different Fingerprint Types. Since we
collect client and server ﬁngerprints as the meta-information
for trafﬁc characteristic correlation, to observe the importance
of the two types of ﬁngerprints, we implement SIAMHAN -
Client and SIAMHAN - Server for the ﬁngerprints ablation
study. The two variants respectively remove all client ﬁnger-
print nodes or all server ﬁngerprint nodes when building the
knowledge graphs. In the experimental results, SIAMHAN -
Client’s performance is poorer than SIAMHAN - Server. It
indicates that client ﬁngerprints contribute more to the cor-
relation attack due to the more decrease of the performance
when SIAMHAN lacks client ﬁngerprints.
Effectiveness of Different Level Attentions. To explore
the effectiveness of each level of attention in the hierarchical
attention, we also present three attention variants including
SIAMHAN - Node, SIAMHAN - Semantic, and SIAMHAN
- Graph. The three variants respectively remove node-level,
semantic-level, or graph-level attention and assign the same
importance to each neighbor, each meta-path, or each ﬁnal
node embedding in the graph. Compared to SIAMHAN,
4342    30th USENIX Security Symposium
USENIX Association
the performance of SIAMHAN - Node drastically degrades,
which indicates that attention on each node’s neighbors is
essential for the correlation task. Among the three types of
attention, semantic-level attention contributes the least. Ev-
ery level of attention could provide effective improvement to
ﬁnally lead to the signiﬁcantly high accuracy of SIAMHAN.
Effectiveness of Distance Metric. To indicate the supe-
riority of the distance function learned for correlation, we
replace SIAMHAN’s distance learning with a binary clas-
siﬁer to build the variant SIAMHAN - Classiﬁer, which is
implemented by modifying the last layer of SIAMHAN to be
a fully connected layer with Softmax activation. Results indi-
cate that SIAMHAN still outperforms SIAMHAN - Classiﬁer
with a great margin. Since distance learning provides a more
precise description of the difference between the two knowl-
edge graphs, the distance metric architecture outperforms the
classiﬁer on the correlation task.
6.7 Time Complexity
For the user tracking task, the attack generally tracks only a
limited number of target users in the network, thus the time
complexity is O(cN), where c is the number of target users.
For the user discovery task, the discovery algorithm could
be simpliﬁed by only computing the correlation relationship
between the test address and one of the clustered addresses
in each iteration. Therefore, the time complexity is O(kN),
where k is the number of the cluster category. It is the usual
time complexity of most cluster algorithms like K-means [24].
7 Countermeasures
To mitigate IPv6 address correlation attacks, we discuss two
possible countermeasures: (1) trafﬁc obfuscation and (2) the
mechanisms to reduce the adversary’s attack chances.
7.1 Trafﬁc Obfuscation
An intuitive countermeasure against IPv6 address correlation
attacks is to obfuscate TLS trafﬁc used by SIAMHAN. We
show four types of trafﬁc obfuscation methods in Table 6. C-
Random and CF-Random respectively denote using random
forged addresses or browser parameters to obtain random
client nodes or combinations of random client ﬁngerprint
nodes. CF-Background and SF-Background are the methods
of adding background trafﬁc with different browsers or dif-
ferent online services. The background trafﬁc volume is the
same as the original trafﬁc of each user. Results indicate that
each single obfuscation method is not effective enough to de-
fend against SIAMHAN since the correlation attack focuses
on multi-type meta-information to ﬁnd the similarity. When
given a combination to apply all four methods, SIAMHAN’s
accuracy signiﬁcantly degrades due to the knowledge barrier,
Table 6: SIAMHAN’s accuracy with trafﬁc obfuscation meth-
ods on the 5-month dataset with the time-based split.
Obfuscation
Method
C-Random
CF-Random
CF-Background
SF-Background
Combination
Address