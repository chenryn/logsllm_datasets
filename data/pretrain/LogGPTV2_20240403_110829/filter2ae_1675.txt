# 漏洞分析：Microsoft Office内存损坏漏洞（CVE-2017-11882）

## 译文声明
本文为翻译文章，原文来源：安全客。译文仅供参考，具体内容及含义以原文为准。

**作者**: [MerJerson, houjingyi@360CERT](http://bobao.360.cn/member/contribute?uid=2910463042)  
**传送门**: [【漏洞分析】CVE-2017-11882漏洞分析、利用及动态检测](http://bobao.360.cn/learning/detail/4753.html)

### 0x00 背景
2017年11月，微软在例行系统补丁发布中修复了一个严重的Office远程代码执行漏洞，编号为 **CVE-2017-11882**。该漏洞类型为缓冲区溢出，位于 **EQNEDT32.EXE** 组件。当用户打开恶意的Office文档时，无需任何交互即可执行恶意代码。

据了解，该组件最初由Design Science Inc.开发，后来被微软收购。自2001年起，该组件就被编译并嵌入到Office中，并且在此后的17年间未做任何修改。因此，该漏洞影响了所有当前流行的Office版本。360CERT经过分析确认，该漏洞存在远程命令执行风险，建议用户尽快更新相应的补丁。

### 0x01 漏洞概述
**EQNEDT32.EXE** 用于在文档中插入和编辑方程式。插入到文档中的任何公式都是 **OLE对象**。该组件是在OLE技术规范下设计的，首发于Microsoft Office 2000和Microsoft Office 2003。从Microsoft Office 2007套件开始，显示和编辑方程的方法发生了变化，尽管 **EQNEDT32.EXE** 已变得过时，但为了保持版本兼容性，它并未从Office套件中删除。

**EQNEDT32.EXE** 实现了一组标准的COM接口：
- `IOleObject`
- `IDataObject`
- `IOleInPlaceObject`
- `IOleInPlaceActiveObject`
- `IPersistStorage`

问题主要出现在 `IPersistStorage:Load` 函数中。由于该组件开发时没有诸如ASLR这样的漏洞缓解措施，使得利用起来更加方便。

### 0x02 漏洞分析
VirusTotal上已检测到该漏洞的POC，多家检测机构将其标注为CVE-2017-11882（最初只有微软能检测）。

通过分析恶意样本，发现问题是出在 **EQNEDT.EXE** 中的 **sub_41160F** 函数。如图所示，`strcpy` 函数在复制数据时没有检查长度，导致了溢出。

通过调试可以猜测，在正常情况下，`eax` 寄存器（即第一个参数）应该是字体名。使用 `rtfobj` 抽取样本中的OLE对象后，发现字体名为 `cmd.exe`。在填充的 `AAA...` 后是 `0x430C12`，这是 **EQNEDT.EXE** 中调用 `WinExec` 的位置。返回地址被覆盖为 `0x430C12`，从而执行命令。最终效果如下：

### 0x03 影响版本
- Office 365
- Microsoft Office 2000
- Microsoft Office 2003
- Microsoft Office 2007 Service Pack 3
- Microsoft Office 2010 Service Pack 2
- Microsoft Office 2013 Service Pack 1
- Microsoft Office 2016

### 0x04 修复建议
360CERT建议用户及时更新补丁，以提高系统安全性。

**缓解措施**：可以通过修改注册表禁用该模块来缓解此问题。其中XX.X为版本号。
```reg
reg add "HKLMSOFTWARE\Microsoft\Office\XX.X\Common\COM Compatibility\{0002CE02-0000-0000-C000-000000000046}" /v "Compatibility Flags" /t REG_DWORD /d 0x400
reg add "HKLMSOFTWARE\Wow6432Node\Microsoft\Office\XX.X\Common\COM Compatibility\{0002CE02-0000-0000-C000-000000000046}" /v "Compatibility Flags" /t REG_DWORD /d 0x400
```

### 0x05 时间线
- 2017年11月14日：微软发布安全更新
- 2017年11月20日：GitHub放出利用代码
- 2017年11月21日：360CERT发布预警通报

### 0x06 参考文档
[参考文档链接]