## 课程小结今天，我带你了解了性能的原则、度量指标，以及在高并发下优化性能的基本思路。性能优化是一个很大的话题，只用短短一讲是完全不够的，所以我会在后面的课程中详细介绍其中的某些方面，比方说我们如何用缓存优化系统的读取性能，如何使用消息队列优化系统的写入性能等等。有时候你在遇到性能问题的时候会束手无策，从今天的课程中你可以得到一些启示，在这里我给你总结出几点：-   数据优先，你做一个新的系统在上线之前一定要把性能监控系统做好；-   掌握一些性能优化工具和方法，这就需要在工作中不断的积累；-   计算机基础知识很重要，比如说网络知识、操作系统知识等等，掌握了基础知识才能让你在优化过程中抓住性能问题的关键，也能在性能优化过程中游刃有余。
## 思考时间在课程中我们提到了一些性能优化的原则和基本的思考点，那么你在日常工作中有哪些性能优化的手段和经验呢？欢迎在留言区与我分享你的经验。最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。![](Images/5cef34b7fbf24f9dd9c2c4c485c9dd17.png){savepage-src="https://static001.geekbang.org/resource/image/72/1a/72b203e2c1ec97d268a5eead610bf71a.jpg"}
# 04 \| 系统设计目标（二）：系统怎样做到高可用？你好，我是唐扬。开课之后，有同学反馈说课程中偏理论知识的讲解比较多，希望看到实例。我一直关注这些声音，也感谢你提出的建议，在04 讲的开篇，我想对此作出一些回应。在课程设计时，我主要想用基础篇中的前五讲内容带你了解一些关于高并发系统设计的基本概念，期望能帮你建立一个整体的框架，这样方便在后面的演进篇和实战篇中对涉及的知识点做逐一的展开和延伸。比方说，本节课提到了降级，那我会在运维篇中以案例的方式详细介绍降级方案的种类以及适用的场景，之所以这么设计是期望通过前面少量的篇幅把课程先串起来，以点带面，逐步展开。当然，不同的声音是我后续不断优化课程内容的动力，我会认真对待每一条建议，不断优化课程，与你一起努力、进步。接下来，让我们正式进入课程。本节课，我会继续带你了解高并发系统设计的第二个目标------高可用性。你需要在本节课对提升系统可用性的思路和方法有一个直观的了解，这样，当后续对点讲解这些内容时，你能马上反应过来，你的系统在遇到可用性的问题时，也能参考这些方法进行优化。**高可用性（HighAvailability，HA）**是你在系统设计时经常会听到的一个名词，它指的是系统具备较高的无故障运行的能力。``{=html}我们在很多开源组件的文档中看到的 HA方案就是提升组件可用性，让系统免于宕机无法服务的方案。比如，你知道Hadoop 1.0 中的 NameNode是单点的，一旦发生故障则整个集群就会不可用；而在 Hadoop2 中提出的NameNode HA 方案就是同时启动两个 NameNode，一个处于 Active状态，另一个处于 Standby 状态，两者共享存储，一旦 Active NameNode发生故障，则可以将 Standby NameNode 切换成 Active状态继续提供服务，这样就增强了 Hadoop的持续无故障运行的能力，也就是提升了它的可用性。通常来讲，一个高并发大流量的系统，系统出现故障比系统性能低更损伤用户的使用体验。想象一下，一个日活用户过百万的系统，一分钟的故障可能会影响到上千的用户。而且随着系统日活的增加，一分钟的故障时间影响到的用户数也随之增加，系统对于可用性的要求也会更高。所以今天，我就带你了解一下在高并发下，我们如何来保证系统的高可用性，以便给你的系统设计提供一些思路。