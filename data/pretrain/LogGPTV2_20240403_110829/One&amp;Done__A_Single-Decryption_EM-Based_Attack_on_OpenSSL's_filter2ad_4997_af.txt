### Mitigation Strategy for Side-Channel Attacks on RSA Exponentiation

#### Context and Observations
In the context of side-channel attacks on RSA exponentiation, the computation typically operates on highly predictable values. This predictability causes any signal variation due to the return value of `BN_is_bit_set` to stand out in a signal that otherwise exhibits very little variation. 

#### Proposed Mitigation
Based on these observations, our mitigation strategy involves obtaining all the bits that belong to one window at once, rather than extracting them one at a time. This is achieved by using the `bn_get_bits` function (defined in `bn_exp.c` in OpenSSL’s source code). The `bn_get_bits` function uses shifts and masking to extract and return a `BN_ULONG`-sized group of bits aligned to the requested bit position, specifically the least significant bit (LSB) of the window. 

The `BN_ULONG` type is typically 32 or 64 bits in size, which means there are billions of possible values it can return. The total execution time of `bn_get_bits` is only slightly more than the time required to append a single bit to the window (using `BN_is_bit_set`, shifting `wval`, and updating `wval` with the new bit). For an attacker, this means there are now billions of possibilities for the value to be extracted from the signal, while the number of signal samples available for recovery remains similar to what was originally used for making a binary (single-bit) decision.

Intuitively, the signal still contains the same amount of information as the signal from which one bit used to be recovered, but the attacker must now attempt to extract tens of bits from that signal.

#### Performance and Security Impact
This mitigation results in a slight improvement in the execution time of the exponentiation. As shown in Figure 12, with the mitigation applied, the recovery rate for the exponent’s bits is no better than randomly guessing each bit (50% recovery rate). In fact, the recovery rate with the mitigation is lower than 50% because, as in our pre-mitigation results, the bits whose signal snippets could not be located are counted as incorrectly recovered. However, these bits can be treated as erasures, i.e., the attacker knows that the value of the bit is unknown, as opposed to a bit whose value is incorrect but the attacker has no a priori knowledge of that. Our recovery rate can be trivially improved by randomly guessing (with 50% accuracy) the value of each erasure, rather than having 0% accuracy on them. With this, the post-mitigation recovery rate indeed becomes centered around 50%, equivalent to random guessing for all of the bits.

This mitigation has been submitted to OpenSSL and was merged into its master source code branch prior to the publication of this paper.

#### Evaluation and Implementation
Our evaluation uses signals obtained by demodulating the signal from a relatively narrow band (40 MHz) around the processor’s clock frequency (around 1 GHz), which is within the capabilities of compact sub-$1,000 software-defined radio (SDR) receivers.

Finally, we propose a mitigation where the bits of the exponent are only obtained from an exponent in integer-sized groups (tens of bits) rather than obtaining them one bit at a time. This mitigation is effective because it forces the attacker to attempt recovery of tens of bits from a single brief snippet of signal, rather than having a separate signal snippet for each individual bit. This mitigation has been submitted to OpenSSL and was merged into its master source code branch prior to the publication of this paper.

### Acknowledgments
We thank the anonymous reviewers for their very helpful comments and recommendations on revising this paper, and the developers of OpenSSL for helping us merge our mitigation into OpenSSL’s source code repository on GitHub. This work has been supported, in part, by NSF grant 1563991 and DARPA LADS contract FA8650-16-C-7620. The views and findings in this paper are those of the authors and do not necessarily reflect the views of NSF and DARPA.

### References
[1] ACIIC¸ MEZ, O., KOC¸ , C. K., AND SEIFERT, J.-P. On the power of simple branch prediction analysis. In Proceedings of the 2nd ACM Symposium on Information, Computer and Communications security (ASIACCS) (Mar. 2007), ACM Press, pp. 312–320.
...
[46] ZAJIC, A., AND PRVULOVIC, M. Experimental demonstration of electromagnetic information leakage from modern processor-memory systems. Electromagnetic Compatibility, IEEE Transactions on 56, 4 (Aug 2014), 885–893.

---

**Figure 12: Success rate for recovery of secret exponent dp’s bits after the initial implementation of our window value randomization mitigation is applied.**

---

This revised text provides a clearer and more professional explanation of the mitigation strategy, its performance impact, and the evaluation process.