title:Group Signatures with Time-bound Keys Revisited: A New Model and
an Efficient Construction
author:Keita Emura and
Takuya Hayashi and
Ai Ishida
Group Signatures with Time-bound Keys Revisited:
A New Model and an Efﬁcient Construction
Keita Emura
National Institute of
Information and
Takuya Hayashi
National Institute of
Information and
Communications Technology
Communications Technology
(NICT)
(NICT)
PI:EMAIL
PI:EMAIL
Ai Ishida
Tokyo Institute of
Technology/National Institute
of Advanced Industrial
Science and Technology
(AIST)
PI:EMAIL
ABSTRACT
Chu et al. (ASIACCS 2012) proposed group signature with
time-bound keys (GS-TBK) where each signing key is asso-
ciated to an expiry time τ . In addition to prove the mem-
bership of the group, a signer needs to prove that the ex-
piry time has not passed, i.e., t < τ where t is the current
time. A signer whose expiry time has passed is automatically
revoked, and this revocation is called natural revocation.
Simultaneously, signers can be revoked before their expiry
times have passed due to the compromise of the credential.
This revocation is called premature revocation. A nice prop-
erty of the Chu et al. proposal is that the size of revocation
lists can be reduced compared to those of Veriﬁer-Local Re-
vocation (VLR) group signature schemes, by assuming that
natural revocation accounts for most of signer revocations in
practice, and prematurely revoked signers are only a small
fraction. In this paper, we point out that the deﬁnition of
traceability of Chu et al. did not capture unforgeability of
expiry time of signing keys which guarantees that no adver-
sary who has a signing key associated to an expiry time τ can
compute a valid signature after τ has passed. We introduce
a security model that captures unforgeability, and propose
a GS-TBK scheme secure in the new model. Our scheme
also provides the constant signing costs whereas those of
the previous schemes depend on the bit-length of the time
representation. Finally, we give implementation results, and
show that our scheme is feasible in practical settings.
Keywords
Group Signatures; Time-bound Keys; Revocation
1.
INTRODUCTION
1.1 Group Signatures and Revocation
Group signatures, proposed by Chaum and van Heyst [19],
provide a functionality to anonymously prove the member-
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’17, April 02-06, 2017, Abu Dhabi, United Arab Emirates
c(cid:13) 2017 ACM. ISBN 978-1-4503-4944-4/17/04. . . $15.00
DOI: http://dx.doi.org/10.1145/3052973.3052979
ship of a group. After a seminal work by Boneh, Boyen,
and Shacham (BBS) [11], many pairing-based constructions
have been proposed so far, e.g., [10, 14, 34, 35, 31, 28, 25,
21, 49]. Recently, lattice-based constructions also have been
proposed, e.g., [26, 30]. Among them, providing the revoca-
tion functionality1 is regarded as one of the major research
topics of group signatures, where an authority can revoke
the membership of users. One reason of the diﬃculties to
provide revocation functionality in the group signature con-
text is that a veriﬁer needs to publicly conﬁrm whether an
anonymous signer has been revoked or not. To overcome
this diﬃculty, several attempts have been made so far.
In revocable group signatures, there are two checks in the
veriﬁcation algorithm, the veriﬁcation check and the revo-
cation check. Then, almost all currently known revocable
group signature schemes can be classiﬁed as follows.
1. Revoked signers cannot compute a signature that passes
the veriﬁcation check (and therefore no revocation check
procedure is required in this type) [3, 4, 32, 33, 41, 44,
47, 46, 54].
2. Any signer can compute a signature that passes the
veriﬁcation check, but a veriﬁer can check whether the
signer has been revoked or not by the revocation check
procedure [12, 15, 18, 35, 42, 43, 53].
An example of the ﬁrst type scheme is the Libert-Peters-
Yung revocable group signature scheme [33]: a ciphertext
of broadcast encryption is published such that non-revoked
signers are regarded as authorized users and they can de-
crypt the ciphertext. A non-revoked signer proves the de-
cryption ability of the ciphertext for proving that the signer
is not revoked. Since revoked signers cannot decrypt the ci-
phertext, revoked signers cannot compute a signature that
passes the veriﬁcation check in the ﬁrst place. In this type, a
signer not only needs to prove the membership of the group
but also proves that the signer is not revoked, and the com-
putational cost of the signing algorithm is relatively high
compared to that of the second type scheme. On the other
hand, the computational cost of the veriﬁcation algorithm
is relatively low compared to that of the ﬁrst type scheme.
More precisely, the veriﬁcation cost is constant in terms of
the number of revoked signers.
1We clearly distinguish revocation and anonymity revoca-
tion. The former means that signing keys are expired
whereas the latter means that an authority called opener
identiﬁes the signer.
777Table 1: Eﬃciency Comparison of group signature schemes with time-bound keys
Scheme
Group public
Signature
Chu et al. [20]
Liu et al. [37]
Ours
key size
O(1)
O(log T )
O(1)
size
Signing
key size
Revocation
Expiration
list size
info size
O(log T ) O(log T ) O(Rpre log T )
O(log T ) O(Rpre log T )
O(log T )
O(1)
O(1)
O(Rpre)
-
-
O(log T )
cost
cost
Signing Veriﬁcation BU/
UET
NO
NO
YES
O(Rpre)1
O(Rpre)1
O(Rpre)
O(log T )
O(log T )
O(1)
T : The maximum size of expiry time.
Rpre: The number of “prematurely” revoked signers.
BU: Backward Unlinkability
UET: Unforgeability of Expiry Time of Signing Keys
1 More precisely, this complexity is represented as O(log T + Rpre). Here, we assume that log T < Rpre.
An example of the second type scheme is the Boneh-
Shacham Veriﬁer-Local Revocation (VLR) group signature
scheme [12]: a signer is not involved in the revocation proce-
dure. Thus, any signer can compute a signature that passes
the veriﬁcation check. In order to check whether the signer
of a signature is revoked or not, the veriﬁer runs the revoca-
tion check procedure by using a revocation list RLt that con-
tains information of revoked signers at time period t. Since
a signer just needs to prove the membership of the group,
the computational cost of the signing algorithm is relatively
low compared to that of the ﬁrst type scheme. On the other
hand, the computational cost of the veriﬁcation algorithm
is relatively high compared to that of the ﬁrst type scheme,
due to the additional revocation check procedure. Usually,
the computational cost of the revocation check linearly de-
pends on the size of revocation lists. Thus, reducing the size
of revocation lists is highly desirable. However, information
of revoked signers is added to the revocation list at each
time, and the size of revocation list grows periodically.
1.2 Group Signatures with Time-bound Keys
Chu et al. [20] proposed group signature with time-bound
keys (GS-TBK). We can regard that GS-TBK has the prop-
erties of both revocation types simultaneously. An expiry
time τ is set to each signing key, and in addition to prove
the membership of the group, a signer needs to prove that
the expiry time has not passed, i.e., t < τ where t is the cur-
rent time. Since signers whose expiry time has passed cannot
compute a signature that passes the veriﬁcation check in the
ﬁrst place, this can be classiﬁed as the ﬁrst type. Chu et al.
called this revocation “natural” revocation. Simultaneously,
signers can be revoked before their expiry times have passed
due to the compromise of the credential. Since a veriﬁer runs
the revocation check procedure, this can be classiﬁed as the
second type. Chu et al. called this revocation “premature”
revocation.
A nice property of the Chu et al. proposal is that the size
of revocation lists can be reduced compared to those of VLR
group signature schemes, by assuming that natural revoca-
tion accounts for most of signer revocations in practice, and
prematurely revoked signers are only a small fraction. That
is, a revocation list RLt just needs to contain information
of revoked signers whose expiry time τ has not passed (i.e.,
t < τ ). A small size revocation list leads to reduce the costs
of revocation check.
1.3 Our Target and Contribution: A New Model
and an Efﬁcient Construction
We point out that the deﬁnition of traceability of Chu et
al. [20] (and its journal version [37] also) did not capture the
following case:
Forgery of expiry time : An adversary who has a signing
key associated to an expiry time τ may compute a valid
signature after τ has passed.
More precisely, the winning condition of the adversary of
traceability in [20, 37] is deﬁned as follows. Let (σ∗, m∗) be
the output of the adversary and t∗ be the time that the ad-
versary outputs (σ∗, m∗). Then, it is required that (1) σ∗ is
a valid signature on the message m∗ with the revocation list
RLt∗ , (2) σ∗ is not obtained from the signing queries with t∗
on m∗, and (3) σ∗ is NOT traced to a signer in CU \ RUt∗
or the trace is failed, where CU is the set of corrupted sign-
ers, i.e., the adversary has their signing keys, and RUt∗ is a
set of revoked signers at t∗. It seems natural to addition-
ally consider the case that (4) σ∗ is traced to a signer in
CU \ RUt∗ and τ ∗ < t∗ holds where τ ∗ is the expiry time of
the corresponding signing key of the traced signer. This un-
forgeability of expiry time should be considered due to the
usage of time-bound signing keys. We remark that we do
not ﬁnd any particular attack against the schemes [20, 37]
in the new model. Nevertheless, it seems meaningful to pro-
vide a provably secure scheme in the new model. In addition
to unforgeability of expiry time, we also consider backward
unlinkability [42] and non-frameability under the dishonest
group manager setting that were not considered in [20, 37].
Next target is eﬃciency since the signing cost and the sig-
nature size of the Chu et al. scheme [20] linearly depend on
log T where T is the maximum-length of time t. They apply
the encoding technique proposed by Lin and Tzeng [36] for
proving t < τ . In the journal version [37], by using accumu-
lators [46] together with the encoding, the signature size can
be constant whereas the signing cost still linearly depends
on log T .
Our Contribution: In this paper, we deﬁne a new model
of GS-TBK that captures unforgeability of expiry time of
signing keys, and propose a scheme secure in this model.
Moreover, in our scheme, the cost of the signing algorithm
is constant whereas those of the previous schemes [20, 37]
depend on the bit-length of the time representation. In ad-
dition to this, we further reduce the size of the revocation
list compared to those of the previous ones. We give the
eﬃciency comparison in Table 1.
778For proving that the expiry time has not passed, we em-
ploy the Ohara et al. methodology [47] which eﬃciently im-
plements the Libert-Peters-Yung revocable group signature
scheme [33] in the random oracle model. Ohara et al. em-
ployed the Complete Subtree (CS) method [45] for revoca-
tion, as in the Libert-Peters-Yung (CS-based) construction,
where each signer is assigned to a leaf node of a tree struc-
ture. The Libert-Peters-Yung scheme uses an identity-based
encryption (IBE) scheme for instantiating the CS method in
the public key setting [23]. Ohara et al. used a signature
scheme instead of using an IBE scheme. A revocation list
contains signatures of nodes which are determined by the
CS method.
In other words, signatures for revoked sign-
ers are not contained in the list. Non-revoked signers can
prove that a signature related to the signers is contained
in the list. We employ the Ohara et al. methodology such
that a time t and an expiry time τ are assigned to leaves in
a sequential order, and at the time t, leaves associated to
1, 2, . . . , t − 1 are revoked. For the natural revocation, the
group manager broadcasts expiry information eit. If t < τ ,
then a signer whose signing key is not expired can prove
that τ is not revoked by using eit. This eit helps signers
to eﬃciently prove that an expiry time τ has not passed
against the current time t where t < τ without showing τ .
One drawback of our construction is that signers need to
download expiration information eit at each time t though
neither encryption for sending eit nor updating secret key is
required. In the meantime, no additional expiry time-related
value for signing is required in the previous schemes [20, 37].
At the expense of this drawback, we can achieve O(1) sign-
ing cost and O(Rpre)-size revocation list whereas those of
the previous schemes are O(log T ) and O(Rpre log T ) respec-
tively, where T is the maximum size of expiry time and Rpre
is the number of “prematurely” revoked signers. Remark
that in our scheme still signers are not required to obtain
signer revocation-related information, i.e., revocation lists,
for generating signatures. Moreover, eit is independent to
the premature revocation, and its size does not depend on
the number of revoked signers.
Finally, we implement our scheme and show that our scheme
provides enough eﬃciency in practice. In our implementa-
tion we employ (type 3) Barreto-Naehrig (BN) curves [7]
with 254-bit prime order, and use the RELIC library [2].
1.4 Related Work
Malina et al. [38, 39] also proposed group signatures with
time-bound membership. However, diﬀerent from ours and
Chu et al. [20, 37], they do not consider premature revoca-
tion. Moreover, some information of expiry time (index k
in [38, 39]) has to be contained in a signature. As mentioned
in [20, 37], signers may not wish to leak such information
(even partially) because it may be used to infer signers’ iden-