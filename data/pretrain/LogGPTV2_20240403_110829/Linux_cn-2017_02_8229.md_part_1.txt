---
author: Danyal Zia
category: 分享
comments_data:
- date: '2017-03-05 12:09:23'
  message: mark一下
  postip: 222.210.139.139
  username: baby-blue__ [Chrome 56.0|Mac 10.12]
count:
  commentnum: 1
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 9476
date: '2017-02-22 13:06:00'
editorchoice: false
excerpt: 当一个新手开发者想要学习 JavaScript 时，他常常会被各种 JavaScript 框架所吸引，也幸亏有为数众多的社区，任何开发者都可以轻易地通过在线教程或者其他资源来学习。但是，唉！多数的程序员都很难决定学习和使用哪一个框架。
fromurl: http://www.discoversdk.com/blog/6-best-javascript-frameworks-to-learn-in-2016
id: 8229
islctt: true
largepic: /data/attachment/album/201702/22/130601e91w99fa7ja9wyau.png
permalink: /article-8229-1.html
pic: /data/attachment/album/201702/22/130601e91w99fa7ja9wyau.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 当一个新手开发者想要学习 JavaScript 时，他常常会被各种 JavaScript 框架所吸引，也幸亏有为数众多的社区，任何开发者都可以轻易地通过在线教程或者其他资源来学习。但是，唉！多数的程序员都很难决定学习和使用哪一个框架。
tags:
- JavaScript
- 框架
- AngularJS
thumb: false
title: 6 个值得好好学习的 JavaScript 框架
titlepic: true
translator: GHLandy
updated: '2017-02-22 13:06:00'
---
![值得好好学习的 6 个 JavaScript 框架](/data/attachment/album/201702/22/130601e91w99fa7ja9wyau.png)
**常言道，条条大路通罗马，可是那一条适合我呢？** 由于用于构建前端页面等现代技术的出现，JavaScript 在 Web 开发社区早已是如雷贯耳。通过在网页上编写几个函数并提供执行逻辑，可以很好的支持 HTML （主要是用于页面的 *表现* 或者 *布局*）。如果没有 JavaScript，那页面将没有任何 *交互特性* 可言。
现在的框架和库已经从蛮荒时代崛起了，很多老旧的技术纷纷开始将功能分离成模块。现在不再需要在整个核心语言中支持所有特性了，开发者允许所有用户创建库和框架来增强核心语言的功能。这样，语言的灵活性获得了显著提高。
如果在已经在使用 **JavaScript** （以及 **JQuery**） 来支持 HTML，那么你肯定知道开发和维护一个大型应用需要付出多大的努力以及编写多么复杂的代码，而 JavaScript 框架可以帮助你快速的构建交互式 Web 应用 （包含单页面应用或者多页面应用）。
当一个新手开发者想要学习 JavaScript 时，他常常会被各种 JavaScript 框架所吸引，也幸亏有为数众多的社区，任何开发者都可以轻易地通过在线教程或者其他资源来学习。
但是，唉！多数的程序员都很难决定学习和使用哪一个框架。因此在本文中，我将为大家推荐 6 个值得好好学习的 JavaScript 框架。让我们开始吧。
### 1、AngularJS
![Angular](/data/attachment/album/201702/22/130601g386rg8oezao3oo8.png)
**（注：这是我个人最喜欢的框架）**
无论你是何时听说的 JavaScript，很可能你早就听过 AngularJS，因为这是在 JavaScript 社区中最为广泛使用的框架了。它发布于 2009 年，由 Google 开发 （这够有说服力让你使用了吧） ，它是一个开源项目，这意味着你可以阅读、编辑和修改其源代码以便更加符合自身的需求，并且不用向其开发者支付一分钱 （这不是很酷吗？）。
如果说你觉得通过纯粹的 JavaScript 代码编写一个复杂的 Web 应用比较困难的话，那么你肯定会兴奋的跳起来，因为它将显著地减轻你的编码负担。它符合支持双向数据绑定的 MVC （ 模型-视图-控制   （    Model–view–controller    ） ） 设计典范。假如你不熟悉 MVC，你只需要知道它代表着无论何时探测到某些变化，它将自动更新前端 （比如，用户界面端） 和后端 （代码或者服务器端） 数据。
MVC 可以大大减少构建复杂应用程序所需的时间和精力，所以你只需要集中精力于一处即可 （DOM 编程接口会自动同步更新视图和模型）。由于 *视图组件* 与 *模型组件* 是分离的，你可以很容易的创建一个可复用的组件，使得用户界面的效果非常好看。
如果因为某些原因，你已经使用了 **TypeScript** （一种与 JavaScript 非常相似的语言），那么你可以很容易就上手 AngularJS，因为这两者的语法高度相似。与 **TypeScript** 相似这一特点在一定程度上提升了 AngularJS 的受欢迎程度。
目前，Angular 2.0 已经发布，并且提升了移动端的性能，这也足以向一个新的开发者证明，该框架的开发活跃度够高并且定期更新。
AngularJS 有着大量的用户，包括 （但不限于） Udemy、Forbes、GoDaddy、Ford、NBA 和 Oscars。
对于那些想要一个高效的 MVC 框架，用来开发面面俱到、包含健壮且现代化的基础架构的单页应用的用户来说，我极力的推荐这个框架。这是为无经验 JavaScript 开发者设计的首选框架。
### 2、React
![React](/data/attachment/album/201702/22/130601kifdzimuqmuruv6o.png)
与 AngularJS 相似，React 也是一个 MVC （ 模型-视图-控制   （    Model–view–controller    ） ） 类型的框架，但不同的是，它完全针对于 *视图组件* （因为它是为 UI 特别定制的） ，并且可与任何架构进行无缝衔接。这意味着你可以马上将它运用到你的网站中去。
它从核心功能中抽象出 DOM 编程接口 （并且因此使用了虚拟 DOM），所以你可以快速渲染 UI，这使得你能够通过 *node.js* 将它作为一个客户端框架来使用。它是由 Facebook 开发的开源项目，还有其它的开发者为它贡献了代码。
假如说你见到过并喜欢 Facebook 和 Instagram 的界面，那么你将会爱上 React。通过 React，你可以给你的应用的每个状态设计一个简单的视图，当数据改变的时候，视图也自动随之改变。只要你想的话，可以创建各种的复杂 UI，也可以在任何应用中复用它。在服务器端，React 同样支持通过 *node.js* 来进行渲染。对于其他的接口，React 也一样表现得足够灵活。
除 Facebook 和 Instagram 外，还有好多公司也在使用 React，包括 Whatsapp、BBC、PayPal、Netflix 和 Dropbox 等。
如果你只需要一个前端开发框架来构建一个非常复杂且界面极好的强大视图层，那我极力向你推荐这个框架，但你需要有足够的经验来处理各种类型的 JavaScript 代码，而且你再也不需要其他的组件了 （因为你可以自己集成它们）。
### 3、Ember
![Ember](/data/attachment/album/201702/22/130601bvrze5sg68p8svzr.png)