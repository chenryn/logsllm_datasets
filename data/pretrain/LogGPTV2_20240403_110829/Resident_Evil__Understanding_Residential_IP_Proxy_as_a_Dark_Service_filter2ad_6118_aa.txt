title:Resident Evil: Understanding Residential IP Proxy as a Dark Service
author:Xianghang Mi and
Xuan Feng and
Xiaojing Liao and
Baojun Liu and
XiaoFeng Wang and
Feng Qian and
Zhou Li and
Sumayah A. Alrwais and
Limin Sun and
Ying Liu
(cid:19)(cid:17)(cid:18)(cid:26)(cid:1)(cid:42)(cid:38)(cid:38)(cid:38)(cid:1)(cid:52)(cid:90)(cid:78)(cid:81)(cid:80)(cid:84)(cid:74)(cid:86)(cid:78)(cid:1)(cid:80)(cid:79)(cid:1)(cid:52)(cid:70)(cid:68)(cid:86)(cid:83)(cid:74)(cid:85)(cid:90)(cid:1)(cid:66)(cid:79)(cid:69)(cid:1)(cid:49)(cid:83)(cid:74)(cid:87)(cid:66)(cid:68)(cid:90)
Resident Evil: Understanding Residential IP Proxy
as a Dark Service
∗
XiaoFeng Wang
∗
∗
Xianghang Mi
, Feng Qian
∗
∗
†
,
, Xuan Feng
, Xiaojing Liao
, Baojun Liu
∗
‡
§
¶
, Sumayah Alrwais
, Limin Sun
, Zhou Li
†
Indiana University Bloomington,
§
Tsinghua University,
¶
‡
Institute of Information Engineering, CAS
IEEE Member,
King Saud University,
∗{xmi, xf1, xliao, xw7, fengqian}@indiana.edu,
†
†
, Ying Liu
‡
PI:EMAIL,
PI:EMAIL,
PI:EMAIL,
PI:EMAIL,
§
PI:EMAIL,
¶
Abstract—An emerging Internet business is residential proxy
(RESIP) as a service, in which a provider utilizes the hosts within
residential networks (in contrast to those running in a datacenter)
to relay their customers’ trafﬁc, in an attempt to avoid server-
side blocking and detection. With the prominent roles the services
could play in the underground business world, little has been done
to understand whether they are indeed involved in Cybercrimes
and how they operate, due to the challenges in identifying their
RESIPs, not to mention any in-depth analysis on them.
In this paper, we report the ﬁrst study on RESIPs, which
sheds light on the behaviors and the ecosystem of these elusive
gray services. Our research employed an inﬁltration framework,
including our clients for RESIP services and the servers they
visited, to detect 6 million RESIP IPs across 230+ countries
and 52K+ ISPs. The observed addresses were analyzed and
the hosts behind them were further ﬁngerprinted using a new
proﬁling system. Our effort led to several surprising ﬁndings
about the RESIP services unknown before. Surprisingly, despite
the providers’ claim that the proxy hosts are willingly joined,
many proxies run on likely compromised hosts including IoT
devices. Through cross-matching the hosts we discovered and
labeled PUP (potentially unwanted programs) logs provided by
a leading IT company, we uncovered various illicit operations
RESIP hosts performed, including illegal promotion, Fast ﬂuxing,
phishing, malware hosting, and others. We also reverse engi-
neered RESIP services’ internal infrastructures, uncovered their
potential rebranding and reselling behaviors. Our research takes
the ﬁrst step toward understanding this new Internet service,
contributing to the effective control of their security risks.
I. INTRODUCTION
In October 2016, a spree of massive distributed denial-of-
service (DDoS) attacks temporarily brought down the Domain
Name System (DNS) operated by Dyn, a leading DNS provider,
causing major Internet platforms and services (such as Amazon,
Netﬂix, Paypal, Twitter et al.) to be unavailable across Europe
and North America. What is remarkable about this attack is that
the trafﬁc observed was found to originate from 65,000 infected
residential hosts, including home routers, web cameras, and
digital video recorders [55]. Not only did these hosts jointly
produce an overwhelming volume at 600 Gbps, one of the
largest on record, but their residential IP addresses made the
attack requests they issued less differentiable from legitimate
ones, and therefore hard to detect and block by the victim.
Residential IP Proxy as a Service. Recent years have
witnessed increasing demands for such residential IPs (those be-
longing to ISP’s dynamically assigned IPs, particularly to home
owners) as intermediaries to circumvent the restrictions imposed
by target services, for the purposes such as aggressive resource
access (e.g., registering multiple accounts), data scraping, and
others. This emerging market gives rise to a new service
model we call Residential IP Proxy as a Service (RPaaS),
offered by companies like Luminati [3], StormProxies [49],
Microleaves [38], etc. These providers all control a large
number of residential hosts, which they claim joined their
services willingly, to proxy their customers’ communication
with any Internet target. Once abused, these residential proxies
can outperform conventional public proxies or even anonymity
networks to help their clients masquerade as clean and benign
sources to communicate with the targets. Such communication
may violate the target’s service terms at the very least (e.g.,
data scraping, blackhat Search Engine Optimization(SEO))
and is likely associated with more sinister events such as the
aforementioned DDoS, due to the permissiveness of the RPaaS
providers in terms of what can be done through their proxies.
With their importance to the illicit activities, residential
proxy (RESIP) services, however, are still less understood.
One may ask whether these services indeed use residential
hosts as they claim, and if so, how they recruit these hosts,
and whether they are involved in malicious activities. Also
unclear are their infrastructures and ecosystems, particularly
the ways they promote, operate their businesses and also work
with each other. Answers to these questions are critical for
determining the role these services play in Cybercrimes, which
could potentially help identify an effective way to mitigate the
threats we are facing today, for example, through controlling
accesses to these services.
Our study. Understanding RESIP service is by no means
trivial. Unlike open proxies, which can be easily found online,
RESIP IPs are not publicized directly and can only be reached
through the mediation of a RESIP provider. Even given a
proxy’s IPs, no existing techniques can tell us whether they
are indeed residential, not to mention ﬁnding out whether their
hosts are indeed willing participants or just controlled bots.
Even more challenging is to determine whether these proxies
are malicious and to understand their illicit activities, since all
we can observe are just dynamic IPs shared by a set of hosts.
As a result, the trafﬁc associated with the IPs describes those
(cid:165)(cid:1)(cid:19)(cid:17)(cid:18)(cid:26)(cid:13)(cid:1)(cid:57)(cid:74)(cid:66)(cid:79)(cid:72)(cid:73)(cid:66)(cid:79)(cid:72)(cid:1)(cid:46)(cid:74)(cid:15)(cid:1)(cid:54)(cid:79)(cid:69)(cid:70)(cid:83)(cid:1)(cid:77)(cid:74)(cid:68)(cid:70)(cid:79)(cid:84)(cid:70)(cid:1)(cid:85)(cid:80)(cid:1)(cid:42)(cid:38)(cid:38)(cid:38)(cid:15)
(cid:37)(cid:48)(cid:42)(cid:1)(cid:18)(cid:17)(cid:15)(cid:18)(cid:18)(cid:17)(cid:26)(cid:16)(cid:52)(cid:49)(cid:15)(cid:19)(cid:17)(cid:18)(cid:26)(cid:15)(cid:17)(cid:17)(cid:17)(cid:18)(cid:18)
(cid:18)(cid:18)(cid:25)(cid:22)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:47 UTC from IEEE Xplore.  Restrictions apply. 
hosts’ collective activities and it is less clear how to separate
the good behaviors (when the IP is assigned to a legitimate
host) from the bad ones (when it is given to a compromised
host). Further without observing the internal operations of a
RESIP service, understanding its infrastructure and connections
with other services is difﬁcult.
In our research, we addressed these challenges with a suite
of innovative techniques, which enabled us to perform a large-
scale study, ﬁrst of its kind, to understand the way RESIP
service is utilized for illicit purposes. Our study was based
upon a novel framework for automatic discovery of RESIP IPs
from related services. More speciﬁcally, we ﬁrst purchased the
services from commercial RESIP service providers and ran a
set of clients to communicate with our web servers through
these services. Trafﬁc in the communication was carefully
marked with unique sub-domains and other parameters to help
the servers identify the IPs of the RESIPs, to enable our DNS
system to ﬁnd the DNS resolvers, and to ensure the proxied
trafﬁc of RESIPs is captured (§IV-C). The IPs found in this
way were further analyzed to extract a set of unique Whois
and DNS features for determining whether they are indeed
residential. Further these IPs were probed by a novel, high-
performance host proﬁling system that concurrently ﬁngerprints
the hosts behind millions of IPs, both from the clients and the
servers under our control. Our ﬁngerprinting technique ensures
that the target of our analysis is always the RESIP, despite its
highly ﬂuctuating IP and a potential NAT box standing in the
way of a direct proﬁling. Also we used a set of potentially
unwanted programs (PUP) and their trafﬁc logs obtained from
a major security company to correlate our clients’ trafﬁc with
these PUPs’ activities, leading to the discovery of the RESIP’s
illicit operations and their providers’ hidden infrastructural
components.
Findings. Using our framework, we analyzed 5 leading RESIP
providers including Luminati [3], Proxies Online [5], Geosurf
[1], IAPS Security [2] and ProxyRack [6], from which we
found 6.18 million unique IPs in a 4-month span. As a result,
we were able to conduct the ﬁrst study on RESIP service. Our
analysis reveals the abused RESIPs as attack intermediaries as
well as illicit and collusive RESIP service providers. Our key
ﬁndings are as follows.
• Our discovered RESIPs are distributed across 238 countries
and regions, 28,035 /16 network preﬁxes and 52,905 ISPs.
A vast majority of them (95.22%) are believed to be indeed
residential and very few of them (2.20%) are reported by public
blacklists or emerging threat intelligence platforms.
• We discovered the presence of likely compromised hosts
as RESIPs, among which, 237,029 IoT devices and 4,141
RESIP hosts running PUP programs were identiﬁed, although
RESIP service providers typically claim that their proxies are
all common users willingly joining their networks. In fact,
none of the 5 RESIP providers is a completely consent-based
anonymity system and even the most prominent companies
like Luminati were found to use suspiciously compromised
residential hosts.
• We identiﬁed 67 different programs running as RESIPs.
Among them, 50 are reported as malicious by anti-virus tools.
• Unlike the bots as reported in prior studies [65], even
the RESIPs running PUPs, as discovered in our research,
exhibit very different behavior in terms of their trafﬁc patterns,
indicating new challenges in detecting them.
• We found the trafﬁc relayed by RESIPs involves ad clicking,
promotion, or malicious activities. 9.36% trafﬁc destinations
were detected as malicious by popular detection engines.
Also surprisingly, we observed other monetizing services also
running on the hosts of RESIPs. Examples include Fast ﬂuxing
and malicious content services.
• We observed some RESIP providers likely reselling services
to (or at least sharing RESIP pools with) other providers. For
example, our inﬁltration trafﬁc from the IAPS proxies was
actually relayed by Hola clients controlled by Luminati. We
found that unlike Luminati, IAPS conducts no background
check and accepts bitcoin payments. Malicious IAPS users
might thus be able to abuse Luminati’s network or even to
cause denial-of-service for legitimate Luminati customers.
• We identiﬁed hidden backend gateways in the RESIP service
infrastructure, which decouple the clients and RESIPs in their
infrastructure to make illicit activities of the RESIP service
stealthier: some backend gateways were labeled as malicious
sites and were dropped by the providers, while all of the
frontend gateways were clean and enjoyed a long lifetime.
Contributions. The contributions of the paper are as follows.
• New ﬁndings. Our ﬁndings revealed the infrastructure, scale,
malice, and stealthiness of RESIP services. They highlight the
security implications of this emerging service and the urgency
to regulate its market.
• New methodologies. We designed novel techniques for ﬁnding
RESIPs, proﬁling their behaviors, and analyzing the providers.
They can be integrated into a holistic system for monitoring
RESIPs and detecting/preventing its malicious activities.
II. BACKGROUND
Residential proxy. Residential IP proxy services are a thriving
business today. During our study in 2017, we continued to
witness the emergence of new RESIP services and a boom in
existing businesses: e.g., Proxies Online [5], the ﬁrst RESIP
service we found, has increased their price from $3/GB to
$25/GB in 6 months. Like traditional proxy services such
as virtual private network (VPN), anonymity networks, and
HTTP/SOCKS proxies, RESIP service is promoted as an
anonymity channel, but also characterized by its resilience
against server-side detection and blocking. More speciﬁcally,
residential IPs are often more trusted by the server than
those from a data center [4]. Also, they tend to be dynamic,
with RESIP services usually running in a back-connect proxy
mode, making malicious clients nimble and capable of quickly
migrating to other IPs when detected.
Figure 1 illustrates the RESIP service model discussed in the
prior works [58], [59], which involves three parties interacting
with each other: the main service component including a proxy
(cid:18)(cid:18)(cid:25)(cid:23)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:47 UTC from IEEE Xplore.  Restrictions apply. 
RESIP 
client
Proxy 
gateway
RESIP 
 service
Residential 
host
Residential 
host
Residential 
host
DNS server
Targeted 
server
Fig. 1: The RESIP service from an outsider’s perspective.
gateway and residential hosts, the client, and the server to
be visited (the target). Once a client signs up with a RESIP
service, it receives a gateway’s IP address or URL for accessing
the service. During the communication, the gateway forwards
the client’s requests to different residential hosts, which further
send them to the target and get responses back. Figure 1
describes what can be observed from the outside, from the
client and target’s perspective. The inside view, however, can
be more complicated, as discovered later in §V-B.
There are many RESIP providers on the market, such as
Luminati and Geosurf. They offer a variety of service plans
with different levels of ﬂexibilities, which can be leveraged
to launch cyber attacks. For example, the client is given three
different ways to determine how proxies are chosen, based
upon whether the gateway attempts to use the same RESIP
to send multiple requests to the target: sticky (S), non-sticky
(NS), and half-sticky (HS). A sticky gateway always tries to
use the same RESIP for communication whenever it can, and
when it has to give up on the proxy (when the RESIP gets
off-line), the gateway attempts to switch to the next one. The
client can also specify the “sticky time”, e.g., changing to a
different RESIP after 1 minute. In the non-sticky model, the
gateway changes RESIP each time after a request is forwarded.
The half-sticky service allows the client to switch between the
S and the NS models by adjusting parameters (e.g., a session
ID) during the communication. Another service option is to
decide where the domain name of the target to be resolved, by
the RESIP or the gateway. This is important since the resolver
can be observed by the target’s DNS server and may need to be
covered under some circumstances. As an example, the RESIP
provider Luminati allows its client to move the DNS resolving
to the RESIP by using the -dns-remote parameter.
IP Whois Database. The Internet Assigned Numbers Authority
(IANA) allocates IP addresses in large chunks to one of ﬁve
Regional Internet Registries (RIRs), including ARIN, APNIC,
AFRINIC, LACNIC and RIPE. Each RIR operates a Whois
directory service to manage the registration of IP addresses in
their regions (e.g., Europe region for RIPE). A Whois directory
is organized in an object-oriented way, containing four types
of objects with each assigned a unique ID: inetnum, person,
organization, and ASN. Here an inetnum object describes an
IP address range and all its attributes; organization and person
objects are used to represent the ownership of IP blocks with
a set of attributes like email addresses; and ASN identiﬁes the
autonomous system an IP address belongs to. All inetnums
are created in a hierarchical manner and therefore form an
inetnum tree. Given an IP, we deﬁne its direct inetnum as the
(cid:18)(cid:18)(cid:25)(cid:24)
Purchase  
RESIP services
RESIP 
service
RESIP 