### 优化后的文本

#### 6. 评估
本节通过微基准测试和基于跟踪的实验来测试SSL拆分的有效性和实用性。这些实验的结果表明，SSL拆分减少了服务器的带宽负载，并且在未缓存文件方面的性能与纯SSL类似。

##### 6.1 一般实验设置
在实验中，我们使用了Apache Web服务器（版本1.3.23），链接了mod_ssl（版本2.8.7）和OpenSSL（版本0.9.6），运行在Linux 2.4.18上，CPU为500 MHz AMD K6。服务器的网络连接是住宅ADSL线路，最大上行带宽为160 kbps。客户端是一个用C语言编写的自定义异步HTTP/HTTPS负载生成器，使用OpenSSL，在FreeBSD 4.5上运行，CPU为1.2 GHz Athlon。代理（如果使用）在FreeBSD 4.5上运行，CPU为700 MHz Pentium III。客户端和代理都在一个100 Mbps的局域网上，具有100 Mbps的上行链路。

##### 6.2 单个文件的带宽节省
由于SSL拆分在记录级别缓存文件，并且缓存记录的传输成本是固定的，因此压缩效率取决于文件大小。一系列单文件下载的简短微基准测试证实，SSL拆分在缓存大文件方面比小文件更有效。

图7显示了HTTP、HTTPS、未缓存的SSL拆分和已缓存的SSL拆分的带宽效率，计算方法是文件吞吐量与带宽消耗的比率。（虚线表示理想非缓存协议的理论性能，无开销。）

图8展示了这些数据作为“节省因子”，即SSL拆分（带有预热缓存）与HTTP或HTTPS传输相同文件所消耗的带宽之比。对于100字节的文件，普通HTTP的成本约为SSL拆分的三分之一，因为小文件的带宽成本主要由连接建立决定；而对于1兆字节的文件，SSL拆分相对于HTTP的带宽节省率高达99.5%。

这些图表中有两个明显的特征。它们在3,000字节处显示出急剧上升的曲线，原因是Apache对于小于约4,000字节的文件将所有HTTP头和文件数据放在一个SSL记录中发送，而较大的文件则将HTTP头和文件数据分开记录发送。此外，在3兆字节到10兆字节之间还有一个明显的性能下降：这是因为对于大于2^22字节的文件，Apache以8,192字节而不是最大记录大小16,384字节发送文件数据。

##### 6.3 基于跟踪负载的带宽节省
###### 6.3.1 Web跟踪文件
Web跟踪是从两个Web服务器几个月的访问日志中提取的，分别是www.lcs.mit.edu和amsterdam.lcs.mit.edu。为了将访问日志转换为可回放的跟踪，我们过滤掉了所有非GET和非状态码200的请求，规范化了URL，并将每个（URL，大小）对编码为唯一的URL。然后用包含随机字节的文件填充服务器树。

www.lcs跟踪持续七个月，包含从10.6 GB文件下载的109 GB数据；amsterdam跟踪持续九个月，包含从77 GB文件下载的270 GB数据。分析www.lcs随机选择的不同长度片段显示，大多数重复是长期的：一天的跟踪（通常约为100 MB的数据传输）的重复系数在1.5到3之间，一个月的跟踪可以压缩约4倍，整个跟踪可以压缩约10倍。这些数据表明，让代理长时间保留块是有益的，并支持将代理组织成DHT的设计，因为这允许它们存储更多的唯一块并保存更长时间。

为了使ADSL线路上的实验易于管理，我们从每个跟踪中选择了代表大约10 MB传输的典型白天片段。图9显示了每个跟踪片段中的请求大小分布，以及完整跟踪的分布。www.lcs片段代表4.43 MB的文件和10.0 MB的传输，固有的压缩率为2.26；amsterdam片段代表8.46 MB的文件和11.6 MB的传输，固有的压缩率为1.37。

我们的任何实验都没有限制代理缓存的大小，因为对于镜像主机（或DHT）来说，存储10-70 GB的完整网站副本似乎是合理的。未来，我们计划研究缓存大小对SSL拆分性能的影响。

###### 6.3.2 测量
下一组实验使用来自两个Web服务器的跟踪来评估SSL拆分在实际工作负载下的表现。

###### 6.3.3 模拟
我们在实验中使用的10 MB跟踪片段仅覆盖几个小时；因此，它们可能不代表长时间内的Web站点流量。此外，短片段中的重复程度不如长跟踪高。

由于在ADSL链路上重放几个月的繁忙Web站点跟踪不切实际，我们转向模拟来估计SSL拆分在长时间内的性能。基于单文件微基准测试收集的数据，我们构建了一个简单的HTTP、HTTPS和未缓存情况下SSL拆分性能的线性模型：使用的带宽是每文件的固定成本加上每字节的边际成本。边际成本略大于1，因为存在包和记录开销。

我们将缓存情况下的SSL拆分成本建模为分段线性函数：对于小于4,000字节的文件，边际成本大于1，但对于更大的文件，边际成本非常小，约为1/250。对于大于2^22字节的文件，边际成本增加到约1/120。

这个简单的性能模型与微基准测试结果的误差在5%以内。此外，为了验证模型，我们模拟了每个10 MB跟踪片段的实验。模拟结果显示在图10和图11的白色条形图中，与测量结果非常接近。

模拟完整跟踪的结果如条纹条形图所示，表明SSL拆分能够利用大部分可用的冗余。例如，在www.lcs跟踪中，SSL拆分相对于HTTP的带宽节省率为83%；理想的零开销和完美缓存协议的节省率为90%。

---

通过这种方式，文本变得更加清晰、连贯和专业。希望这对你有帮助！