_Please make sure that this is a bug. As per ourGitHub Policy, we only address
code/doc bugs, performance issues, feature requests and build/installation
issues on GitHub. tag:bug_template_
**System information**
  * Have I written custom code (as opposed to using a stock example script provided in TensorFlow): no
  * OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04
  * Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
  * TensorFlow installed from (source or binary):
  * TensorFlow version (use command below): tensorflow-gpu==2.0.0rc0
  * Python version: 3.6.8
  * Bazel version (if compiling from source):
  * GCC/Compiler version (if compiling from source):
  * CUDA/cuDNN version:
  * GPU model and memory:
You can collect some of this information using our environment capture  
script  
You can also obtain the TensorFlow version with: 1. TF 1.0: `python -c "import
tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"` 2\. TF 2.0: `python -c
"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"`
**Describe the current behavior**  
tf.scatter_nd sums update values if indices are present multiple times. I use
this function for moving pixels in an image. Some pixels are present twice and
this gives wrong pixel values in scatter.
tf.Tensor([ 0 11 0 10 9 0 0 12], shape=(8,), dtype=int32)  
tf.Tensor([ 0 11 0 10 9 0 0 24], shape=(8,), dtype=int32)  
tf.Tensor([ 0 11 0 10 9 0 0 36], shape=(8,), dtype=int32)  
**Describe the expected behavior**  
I expect this behavior:
tf.Tensor([ 0 11 0 10 9 0 0 12], shape=(8,), dtype=int32)  
tf.Tensor([ 0 11 0 10 9 0 0 12], shape=(8,), dtype=int32)  
tf.Tensor([ 0 11 0 10 9 0 0 12], shape=(8,), dtype=int32)
Otherwise I need to find unique indices and delete multiples. And why it is
adding? Maybe other options are possible then too.
**Code to reproduce the issue**  
Provide a reproducible test case that is the bare minimum necessary to
generate the problem.  
indices1 = tf.constant([[4], [3], [1], [7]])  
updates1 = tf.constant([9, 10, 11, 12])
indices2 = tf.constant([[4], [3], [1], [7], [7]])  
updates2 = tf.constant([9, 10, 11, 12, 12])
indices3 = tf.constant([[4], [3], [1], [7], [7], [7]])  
updates3 = tf.constant([9, 10, 11, 12, 12, 12])
shape = tf.constant([8])
scatter1 = tf.scatter_nd(indices1, updates1, shape)  
scatter2 = tf.scatter_nd(indices2, updates2, shape)  
scatter3 = tf.scatter_nd(indices3, updates3, shape)
print(scatter1)  
print(scatter2)  
print(scatter3)
**Other info / logs**  
Include any logs or source code that would be helpful to diagnose the problem.
If including tracebacks, please include the full traceback. Large logs and
files should be attached.