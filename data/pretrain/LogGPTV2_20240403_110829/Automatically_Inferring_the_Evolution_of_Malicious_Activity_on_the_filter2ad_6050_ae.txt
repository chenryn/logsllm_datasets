dresses as those discovered by the network-aware cluster-
ing. It indicates that network-aware clustering does not dis-
cover many changes that involve a substantial volume of the
input data. On many days, especially on days with changes,
the fraction of IP addresses not identiﬁed by network-aware
clusters, however, is still smaller than the fraction of pre-
ﬁxes that it does not identify. This indicates that network-
aware clustering identiﬁes the larger, coarser changes, but
misses the ﬁne-grained changes.
Network-aware clusters perform so poorly because the
preﬁx granularity required to identify ∆-changes typically
does not appear at all in routing tables. Indeed, as our anal-
ysis in Section 4.2 shows, a large number of ∆-change pre-
ﬁxes come from hosting providers, many of which do not
even appear in BGP preﬁx tables.
Possible Differencing of IPTrees. We now show that
the possible differencing approach described in Section 2.2
produces an extremely high false positive rate. For this ex-
periment, we learn two trees (denoted Tx and Ty) over two
consecutive day-long intervals, i, i + 1 respectively. We cal-
culate the differing common preﬁxes in the trees, and then
use a basic mathematical argument to prove that there must
be a very high false positive rate among these preﬁxes.
Each tree Tx and Ty has an overall accuracy rate exceed-
ing 95.2% on each of the days i and i + 1 (we measure this
separately across all IPs in each day i and i + 1). Since each
tree makes less than 5% error, the two trees can differ on at
most 10% of the IPs on each day i and i + 1 (e.g., the trees
may make errors on disjoint sets of IPs on each day); denote
this set of IPs where the trees differ as M . Now, consider
the set of preﬁxes that appear in both trees, and contain at
least 0.01% of the data (and discard the redundant parents
from this set that account for the same trafﬁc). In order for a
preﬁx to qualify as ∆-change, at least 33% of the IPs it sees
must be from the set M . However, by the pigeonhole prin-
ciple, there can be at most 3400 preﬁxes can (1) account for
at least 0.01% of the IPs, and (2) have at least 33% of their
IPs come from the set M . However, when we measured the
number of the preﬁxes present in these two trees that were
different, based either on leaf label or on trafﬁc volume for
interior nodes (ensuring we discard redundant parents), we
found 5021 preﬁxes present in both Tx and Ty, with at least
0.01% of the trafﬁc. Thus, at least 1621 of the preﬁxes have
to be incorrect, giving a 47% false positive rate.
4.2 Characterization: Spam Data
Summary. We present a summary of ∆-changes dis-
covered in the 2010 spam data, as it covers a longer pe-
riod (120 days) compared to the 2012 data. Table 1(a)
(Fig. 12) summarizes the ∆-change preﬁxes discovered by
∆-Change, categorized by the kind of behavioral change
that they have undergone. The table shows results for dif-
ferent values of the threshold θ = 0.05%, 0.01%. As we
expect, when θ decreases, the number of preﬁxes identiﬁed
as ∆-change increases, since there are more preﬁxes with
at least θ IPs. Note that the majority of the changes come
from preﬁxes that progressively originate more spam, i.e.,
nearly 75% ∆-change preﬁxes are ∆-bad. Further, regard-
less of θ, very few spamming preﬁxes actually change for
the better. These observations are consistent with the ear-
lier studies on spam origin and spammer behavior – while
spammers tend to move around the address space, perhaps
dependent on the bots they own, legitimate mail servers tend
to remain stable. Further, when a region stops spamming, it
are much more likely to stop sending mail trafﬁc altogether,
rather than start sending substantial volumes of legitimate
mail. Since ∆-Change does not detect a preﬁx that simply
stops originating trafﬁc, we see very few ∆-good preﬁxes
in Table 1(a). 8
Table 2 (Fig. 13) shows the ∆-change preﬁxes split by
access type of the preﬁx (in this analysis, we include a preﬁx
only once even if it has appeared as a ∆-change preﬁx mul-
tiple times) for θ = 0.05%. The majority of the ∆-change
preﬁxes come from small ISPs and hosting providers, al-
though there are also a few large (tier-1) ISPs. As Table
1 shows, most of these preﬁxes are identiﬁed because they
start to send spam. In Fig. 15(a) we also show the distribu-
tion of preﬁx lengths of the ∆-change preﬁxes: over 60% of
preﬁxes have lengths between /16 and /26, which matches
the preﬁx ranges expected of hosting providers and small
ISPs. Obviously, many of these small ISPs and hosting
providers obtain their IP address ranges from large ISPs,
but ∆-Change identiﬁes the small ISPs distinctly from their
respective owning larger ISP only because their spamming
activity differs signiﬁcantly from the spamming activity of
their respective owning larger ISP. DHCP effects also in-
ﬂuence the preﬁxes that are discovered – they force the
change in spamming activity to be identiﬁed at the gran-
ularity of the owning preﬁx, rather than the individual IP
addresses, and this is likely another factor in the predomi-
nance of small ISPs and hosting providers as frequent ∆-
changes. Indeed, the predominance of small regional ISPs
and hosting providers as frequent ∆-changes emphasizes
the need for techniques that can automatically infer changed
malicious activity – these providers tend to be substantially
more volatile and transient than large ISPs, making it much
harder to track them with pre-compiled lists.
Case Study 1: Individual Provider Spamming Activity.
Fig. 14 illustrates the spamming activity of three differ-
ent providers that we identiﬁed as ∆-bad at θ = 0.05%.
Provider A is a hosting provider (with a /19 preﬁx) based in
south-eastern US, provider B is a virtual web-hosting com-
pany in Netherlands (with a /26 preﬁx), and provider C is a
small ISP in mid-western US. (with a /22 preﬁx). Note that
each one of these providers starts and stops spamming mul-
tiple times over 4 months. ∆-Change identiﬁes all of these
changes, as we highlight in Fig 14 with arrows. Further, we
note that ∆-Change identiﬁes each ∆-bad preﬁx early on,
before their peak spamming activity. None of these three
preﬁxes are detected when BGP preﬁxes are used, as they
are much too small to appear in routing tables. Further, our
mail operators were unaware that these speciﬁc providers
were engaging in spamming activity, and would not have
found them without exhaustive manual analysis.
These three providers are just examples of the many that
were not detected by BGP preﬁxes and of which our opera-
tors were previously unaware. 9 We highlighted these to il-
8Note also the design of TrackIPTree ensures that such preﬁxes even-
tually get discarded from IPtree, and thus after a period of time, these
preﬁxes will not be labeled malicious in the tree forever.
9Maintaining a list of hosting providers and using the list to track their
Original State New State
θ = 0.01% θ = 0.05%
Original State New State
θ = 0.01% θ = 0.05%
Bad
Good
Neutral
Good
Neutral
Neutral
Bad
Good
Bad
31
28
122
205
66
146
11
1
24
33
9
13
Bad
Good
Neutral
Good
Neutral
Neutral
Bad
Good
Bad
134
189
42
78
201
285
Table 1(a) Spam Data Set
Table 1(b) Botnet Data Set
Figure 12. Characterizing the ∆-change preﬁxes discovered for spam and botnet data sets.
ISP Type
Large ISPs
Small ISPs
# Identiﬁed
23
16
17
14
98
43
B
C
A
Hosting Providers
Others
4
11
9
2
Figure 13. Table 2: Spam Data: ISP Types of ∆-
change preﬁxes
lustrate spamming activity from these smaller providers that
repeatedly starts and stops. Our case study also illustrates
how difﬁcult it is to ensure that systems are conﬁgured to
never spam, especially for hosting providers, since hosting
providers typically allow their customers to easily establish
new mail servers on their physical or virtual infrastructure,
and can repeatedly get caught into a cycle of accidentally
hosting spammers and cleaning up spamming activity.
Case Study 2: Drop in Internet-wide Spamming Activ-
ity.
In our next case study, we examine the ∆-good pre-
ﬁxes discovered by ∆-Change during the Grum botnet take-
down in July 2012. The Grum botnet was considered the
third largest spamming botnet and responsible for around
17% of all the spam on the Internet. [12]. This case study
illustrates what an operator would see with the ∆-Change
algorithm during such a large event, with no a priori knowl-
edge that the event was happening.
Figure 15(b) shows the number of ∆-good preﬁxes dis-
covered each day by ∆-Change and network-aware clusters,
and the start of the botnet takedown is indicated (with an ar-
row). (As in Sec. 4.1, we count only ∆-good preﬁxes that
correspond to distinct regions of the address space, in or-
der to have a fair comparison between ∆-Change and the
network aware clusters.) Our ﬁrst observation is that there
is sudden increase in the number of ∆-good preﬁxes right
after the botnet takedown, showing that a number of pre-
ﬁxes have suddenly changed their spamming activity. The
number of ∆-good preﬁxes discovered every day remains
high for a number of days after the takedown – this hap-
pens because our algorithm discovers preﬁxes as ∆-changes
when they actively generate trafﬁc (e.g., by sending legiti-
mate mail instead of spam in this case). Thus, whenever a
spamming activity would be less effective, since hosting providers start
and shut down frequently.
105
m
a
p
S
1
2
4
5
100
20
40
3
80
60
Day
100
120
Figure 14. Case Study 1: Spamming Activity in Small
Providers A, B, C. ∆-Change discovers spamming ac-
tivity early in small ISPs and hosting providers (arrows
indicate every time the preﬁxes are discovered).
(previously) infected region become active after the botnet
takedown, its preﬁx blocks are identiﬁed as ∆-good.
We also observe that ∆-Change discovers far more ∆-
good preﬁxes than the network-aware clusters (anywhere
between a factor of 3-10). Further analysis showed that
these preﬁxes had previously sent 0.01% − 0.1% of the
daily spam volume in our data, and a few of them contained
over two thousand spamming IP addresses. Most of these
preﬁxes range are allocated to small regional ISPs (rang-
ing from /15 to /26), and many of them do not appear in
BGP routing tables, and so they cannot be detected with
network-aware clusters. Thus, ∆-Change highlights to op-
erators where on the Internet a drop in spamming activity
took place.
4.3 Characterization: Botnet Data
Next, we examine the results of ∆-Change on the bot-
net data. Recall that our data only identiﬁes botnet activity
within a single large tier-1 ISP, and thus, ∆-change only de-
tects changes internal to this ISP. This is especially useful
since large ISPs often allocate preﬁx blocks to many smaller
ISPs and other customers, many of which typically are are
managed independently and change over time as business
requirements change, and thus are likely to have very dif-
ferent security properties. In this scenario, ∆-Change was
useful for highlighting to the operators a network-wide view
1
0.8
0.6
0.4
0.2
s
e
x
i
f
e
r
P
f
o
n
o
i
t
c
a
r
F
0
10
∆−Change
Network−Aware
20
15
10
5
s
e
x
i
f
e
r
p
d
o
o
g
−
∆
15
20
25
Prefix Length
30
35
0
15
20
25
Day
30
35
100
50
s
e
x
i
f
e
r
p
e
g
n
a
h
c
−
∆
0