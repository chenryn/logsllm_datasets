YES
一样的。AUTO_INCREMENT的这种特性使得为每一
因为MySQL会替我们生成这些值。
，这可以防止创建的成员没有ID号。
NULL
NULL
NULL
NULL
NULL
NULL
NULL
+-
1.4MySOL教程
成
位
为
6
它
---
## Page 40
sampdb。其中，information_schema 是一个事先存在的特殊数据库；而 sampdb 则是刚才创
会列出默认数据库里的表。到目前为止，我们已在数据库 sampdb 里创建了两个表，因此执行
以现在试一下，看看结果。
个特殊的通配符，我们将在后面的1.4.9.7节中介绍它。
这样便只能看到与给定模式相匹配的那些列的信息：
EXPLAIN语句或SHOW语句。
列顺序列出的。
INSERT或LOAD DATA 语句时，这个顺序很重要，因为这些语句要求各列的值是以它们的默认
使用 DESCRIBE。
可用于表明该列没有显式的DEFAULT子句。）
什么未定义为允许 NULL的 Default列会显示NULL，那么我在这里告诉你，那是因为NULL也
2
SHOW 语句还有其他几种形式，可用于从 MySQL获得不同类型的信息。SHOW TABLES 语句
SHOW FULL COLUMNS与 SHOW COLUMNS 很像，不同之处在于它会显示附加的列信息。你可
你也可以通过其他方式来获得DESCRIBE 生成的信息。
如果你不记得一个表中的列名、想知道其数据类型，或者想了解其宽度是多少，那么可以
这个列表可能会因服务器不同而有所差异，但是应该能看到information_schema 和
mysql> SHOW TABLES;
使用DESCRIBE president‘%name'也可以得到同样的结果。这里用到的百分号（%）是一
这些语句还允许对输出列加以限制。例如，可以在 SHOW 语句的末尾加上一个LIKE子句，
调用DESCRIBE member 语句，则可以看到有关member 表的类似信息。（如果你想知道为
mySql> SHOW DATABASES;
mySql> SHOW COLUMNS FROM president LIKE%name';
SHOW FIELDS FROM president;
SH
DESCRIBE president;
Database
Tables_in_sampdb
president
Field
sampdb
mysql
information_schema
member
first_name
last_name
第1章MySQL入门
test
OW COLUMNS FROMpresident;
PLAIN president;
。你还可以利用它来查看MySQL在表行里存储各列的先后顺序。当你执行
1Type
varchar(15)
，下面这些语句具有相同的作用：
|Null丨Key|Default丨Extra
NO
既可以是简写的DESC，也可以是
---
## Page 41
的方式来表现的，即CCYY-MM-DD'格式。）
生的考试分数。图1-3展示了成绩册里的部分分数在表里的表现形式。（其中，日期是按 MySQL
包含哪些行呢？此问题不难回答。在每一行里，需要列出学生姓名、考试或测验日期，以及学
月的3、6、16、23日有测验；在9月9日和10月1日有考试。
这里只列出了4位学生。）考试或测验的举行日期则列在表格的顶部。从该表格可以看出：在9
面还包含了其他一些让分数有意义的信息。学生的姓名和ID号列在表格的左侧。（为了简洁，
会怎么做。图1-2展示了成绩册中一页的内容。该页的主体部分是用于记录分数的表格。该页里
1.4.6.2成绩考评项目表
SHOW FULL COLUMNS 语句。
名、密码和主机名。这些选项与你在运行mysql时所用的一样。
显示的一样。请记住：当你运行mysqlshow时，还需要提供正确的命令行选项，其中包括用户
高，你可能还会看到名为mysql的数据库，它是一个权限分配表。
建的。另外还有一个数据库test，它是 MySQL在安装过程中创建的。如果你的访问权限足够
为使用数据库持续跟踪这些信息，我们需要一个score（分数）表。那么，在这个表里应该
要想确定成绩考评项目需要用到哪些表，得先弄清在用纸质成绩册来记录考生成绩时可能
如果同时带上数据库名和表名，那么 mysqlshow会显示出该表里各列的信息，这时等同于
%mysqlshow sampdb
在带上数据库名之后，mysqlshow会列出给定数据库里的所有表：
当不带参数时，mysqlshow会显示出一个数据库列表：
客户端程序mysqlshow提供了一个命令行接口，通过它所获得的信息和使用 sHOw语句所
mysqlshow
president
member
Tables
test
sampdb
mysql
information_schema
Databases
234
students
Johnny
Missy
'name
图1-2成绩册示例
14715
10
73
14
：
1.4MySOL 教程
---
## Page 42
相匹配，我们便能看出该分数是一次测验成绩。
score表之间是如何与9月
grade_event 表进行匹配，便能获得考试的类别。图1-5 列出了这个表的结构，并展示了它毕
当天的考试事件类型，从而得知某个分数是来自测验，还是来自考试。将 score表里的日期
对应起来。我们可以把考试日期列出来，然后用它来跟踪在各个日期发生过什么样的“考试事
子
数
分别表示考试（test）或测验（quiz），如图1-4所示。这种做法的优点是考分类别能直接体现存
要
的
但这种不采用具体数据明确标识的做法会带来问题。
根据某给定日期的分数范围（在数值上，
分
它还未清楚地表明该成绩是考试分数还是测验分数。
12
多次输人一个相同的考分类别。天啊！谁会愿意输入这么多的余信息呢？
子。如果按这种办法来记录学生们的考试分数，那么我们不仅要反复输入相同的日期，而且还
勺。所有9月23日的考分都属于Q类，所有10月1日的考分都属于T类。没人会喜欢这个
据上；缺点是显得有些余。看看那些日期相同的行就能发现，考分类别栏里的值都是相同
数与测验分数的权重是有明显区别的，
可以在每行记录里将各类考分区别开来，具体方法就是：给 score表增加一列，用T或
我们再来试试另一种表示方式。这次不把考分类别放到 score表里，
可惜的是，
第1章MySQL入门
是，采用这种方式得到的表遗漏了一些信息。例如，
score
Jenny
Johnny
Johnny
Missy
Billy
name
图1-5
表
月 23日那天关联起来的。通过将该行与 grade_event 表里的相应行
score表
score 表与 grade_event 表，通过日期链接
图1-4
2012-10-01
2012-10-01
2012-10-01
2012-10-01
2012-09-2
2012-09-
Jenny
2012-0
Johnny
Jenny
Johnny
name
date
score表
09-
图1-3量
Jenny
Johnny
Missy
Jenny
Johnny
修改后包含分数类型的 score 表
Missy
name
2
2
23
2012-09-
2012-09-2
2012-09-
date
测验分数通常要比考试分数低很多）来推测其类型，
score
因此有必要将考分类别标识出来。当然，我们也可以
6238196
15
最初的 score表
1
1
2
2
22
12-10-01
date
10-01
10-01
score
一般来说，
score
2012-10-01
2012-09-09
2012-09-06
2012-09-03
grade event表
15
category
date
QQQQT
在评定的期末总成绩时，考试
请仔细看看图1-3 中的各行，
category
Q
，而是将它与考试日其
期
样
司
在
---
## Page 43
实际就是列序号。
数表格里的列序号是相当的。虽说这个列序号未被显式地写出来，并标注为“event ID"，但它
点奇怪，不过在图1-2的成绩册里其实已经隐式地用到了这个属性：这里的事件ID与成绩册分
每次事件就都拥有自己的ID 编号了，我们可以将这一列命名为event_id。这种做法看起来有
只需对有关数据的布局结构作一点小小的改动，就能处理在同一天存在多个事件的情况了，如
在同一天记录两组分数。这一问题该如何解决呢？事实证明，这个问题并不是那么难以解决。
的各种问题，你便不得不重新设计相关表。
发生”。然而，事实证明，这种奇怪的情况偶尔也会出现；而这时为了弥补这一奇怪情况所引发
行两场考试。不过，我还是会经常听到有人声称：对于他们的数据，‘
永远不会发生呢？似乎可行。毕竟，心地善良的你应该不会对学生过于苛刻，要对他们每天进
组记录，而在 grade_event 表里也会有两条记录，而且你也无法说清如何将 score 中的这些
或者一次测验加一次考试。如果这样做的话，那么对于同一个日期，在 score 表里将会出现两
用于链接score和grade_event两个表里的各个行。换句话说，不能在同一天进行两场测验，
是只有一种。正因如此，“以数据库系统的方式进行思考”，考虑如何表现数据才具有挑战性。
惯把信息统一
当作一个整体来考虑。但数据库无法那样工作，这也正是它们看起来不太自然的原因。我们
据库里并不是一件简单的事情。在日常生活中，人们习惯于把不同信息综合起来，然后把它
个表里的做法并无多大差异。唯一的区别在于，纸质成绩册里的两类信息没有明确地分离开来。
吗？
个表复杂。但是，请再仔细看看当初的成绩册（如图1-2所示)，你不是已经在记录两组信息
这会不会把事情搞得更复杂了？”
时候，或许会想：“嘿，这个主意真不错。但是，有这么多的表，想查什么东西会不会太费事？
下所示。
方法也更易让人接受。现在，我们只需记录一次考分类别，再也不用为每个考分都记录一次了。
库里的数据直接得出考试分数的类型。与将考分类别直接记录在score表里的做法相比，这种
完成上述改动之后，我们会得到图1-6所示的结果。现在要用event_id 来链接 score 表
（1）在 grade_event 表里增加一列，用它来为该表里的每一行分配一个唯一的编号。这样，
最好能防患
假如你每天最多只进行一场考试，那么这个问题就绝不会出现。但是，可否假设这一情况