Translation-Based Steganography
Christian Grothoﬀ
Krista Grothoﬀ
Ludmila Alkhutova
Ryan Stutsman
Mikhail Atallah
CERIAS, Purdue University {christian,krista}@grothoff.org,
{lalkhuto,rstutsma}@purdue.edu,PI:EMAIL
Abstract. This paper investigates the possibilities of steganographically
embedding information in the “noise” created by automatic translation
of natural language documents. Because the inherent redundancy of nat-
ural language creates plenty of room for variation in translation, machine
translation is ideal for steganographic applications. Also, because there
are frequent errors in legitimate automatic text translations, additional
errors inserted by an information hiding mechanism are plausibly unde-
tectable and would appear to be part of the normal noise associated with
translation. Signiﬁcantly, it should be extremely diﬃcult for an adver-
sary to determine if inaccuracies in the translation are caused by the use
of steganography or by deﬁciencies of the translation software.
1
Introduction
This paper presents a new protocol for covert message transfer in natural lan-
guage text, for which we have a proof-of-concept implementation. The key idea is
to hide information in the noise that occurs invariably in natural language trans-
lation. When translating a non-trivial text between a pair of natural languages,
there are typically many possible translations. Selecting one of these transla-
tions can be used to encode information. In order for an adversary to detect the
hidden message transfer, the adversary would have to show that the generated
translation containing the hidden message could not be plausibly generated by
ordinary translation. Because natural language translation is particularly noisy,
this is inherently diﬃcult. For example, the existence of synonyms frequently
allows for multiple correct translations of the same text. The possibility of er-
roneous translations increases the number of plausible variations and thus the
opportunities for hiding information.
This paper evaluates the potential of covert message transfer in natural lan-
guage translation that uses automatic machine translation (MT). In order to
characterize which variations in machine translations are plausible, we have
looked into the diﬀerent kinds of errors that are generated by various MT sys-
tems. Some of the variations that were observed in the machine translations are
also clearly plausible for manual translations by humans.
In addition to making it diﬃcult for the adversary to detect the presence of a
hidden message, translation-based steganography is also easier to use. The rea-
son for this is that unlike previous text-, image- or sound-based steganographic
2
C. Grothoﬀ, K. Grothoﬀ, L. Alkhutova, R. Stutsman, M. Atallah
systems, the substrate does not have to be secret. In translation-based steganog-
raphy, the original text in the source language can be publically known, obtained
from public sources, and, together with the translation, exchanged between the
two parties in plain sight of the adversary. In traditional image steganography,
the problem often occurs that the source image in which the message is sub-
sequently hidden must be kept secret by the sender and used only once (as
otherwise a “diﬀ” attack would reveal the presence of a hidden message). This
burdens the user with creating a new, secret substrate for each message.
Translation-based steganography does not suﬀer from this drawback, since
the adversary cannot apply a diﬀerential analysis to a translation to detect the
hidden message. The adversary may produce a translation of the original mes-
sage, but the translation is likely to diﬀer regardless of the use of steganography,
making the diﬀerential analysis useless for detecting a hidden message.
To demonstrate this, we have implemented a steganographic encoder and
decoder. The system hides messages by changing machine translations in ways
that are similar to the variations and errors that were observed in the existing MT
systems. An interactive version of the prototype is available on our webpage.1
The remainder of the paper is structured as follows. First, Section 2 reviews
related work. In Section 3, the basic protocol of the steganographic exchange is
described. In Section 4, we give a characterization of errors produced in existing
machine translation systems. The implementation and some experimental results
are sketched in Section 5. In Section 6, we discuss variations on the basic protocol,
together with various attacks and possible defenses.
2
Related Work
The goal of both steganography and watermarking is to embed information into
a digital object, also referred to as the substrate, in such a manner that the
information becomes part of the object. It is understood that the embedding
process should not signiﬁcantly degrade the quality of the substrate. Stegano-
graphic and watermarking schemes are categorized by the type of data that the
substrate belongs to, such as text, images or sound.
2.1
Steganography
In steganography, the very existence of the message must not be detectable.
A successful attack consists of detecting the existence of the hidden message,
even without removing it (or learning what it is). This can be done through, for
example, sophisticated statistical analyses and comparisons of objects with and
without hidden information.
Traditional linguistic steganography has used limited syntactically-correct
text generation [29] (sometimes with the addition of so-called “style templates”)
and semantically-equivalent word substitutions within an existing plaintext as a
1 http://www.cs.purdue.edu/homes/rstutsma/stego/
Translation-Based Steganography
3
medium in which to hide messages. Wayner [29,30] introduced the notion of using
precomputed context-free grammars as a method of generating steganographic
text without sacriﬁcing syntactic and semantic correctness. Note that semantic
correctness is only guaranteed if the manually constructed grammar enforces
the production of semantically cohesive text. Chapman and Davida [6] improved
on the simple generation of syntactically correct text by syntactically tagging
large corpora of homogeneous data in order to generate grammatical “style tem-
plates”; these templates were used to generate text which not only had syntactic
and lexical variation, but whose consistent register and “style” could potentially
pass a casual reading by a human observer. Chapman et al [7], later developed
a technique in which semantically equivalent substitutions were made in known
plaintexts in order to encode messages. Semantically-driven information hiding is
a relatively recent innovation, as described for watermarking schemes in Atallah
et al [4]. Wayner [29,30] detailed text-based approaches that are strictly statisti-
cal in nature. However, in general, linguistic approaches to steganography have
been relatively limited. Damage to language is relatively easy for a human to
detect. It does not take much modiﬁcation of a text to make it ungrammatical in
a native speaker’s judgement; furthermore, even syntactically correct texts can
violate semantic constraints.
Non-linguistic approaches to steganography have sometimes used lower-order
bits in images and sound encodings to hide the data, providing a certain amount
of freedom in the encoding in which to hide information [30]. The problem with
these approaches is that the information is easily destroyed (the encoding lacks
robustness, which is a particular problem for watermarking), that the original
data source (for example the original image) must not be disclosed to avoid
easy detection, and that a statistical analysis can still often detect the use of
steganography (see, e.g., [13,18,20,25,30], to mention a few).
2.2
Watermarking
The intended purpose of the watermark largely dictates the design goals for wa-
termarking schemes. The possible uses of watermarking include inserting owner-
ship information, inserting purchaser information, detecting modiﬁcation, plac-
ing caption information and so on. One such decision is whether the watermark
should be visible or indiscernible. For example, a copyright mark need not be
hidden; in fact, a visible digital watermark can act as a deterrent to an attacker.
Most of the literature has focused on indiscernible watermarks.
Watermarks are usually designed to withstand a wide range of attacks that
aim at removing or modifying the watermark without signiﬁcantly damaging the
usefulness of the object. A resilient watermark is one that is hard to remove by
an adversary without damaging the object to an unaceptable extent. However, it
is sometimes the case that a fragile watermark is desirable, one that is destroyed
by even a small alteration; this occurs when watermarking is used for the purpose
of making the object tamper-evident (for integrity protection).
The case where the watermark has to be diﬀerent for each copy of the digital
object, is called ﬁngerprinting. That is, ﬁngerprinting embeds a unique message
4
C. Grothoﬀ, K. Grothoﬀ, L. Alkhutova, R. Stutsman, M. Atallah
in each instance of the digital object (usually the message makes it possible to
trace a pirated version back to the original culprit). Fingerprinting is easier to
attack because two diﬀerently marked copies often make possible an attack that
consists of comparing the two diﬀerently marked copies (the attacker’s goal is
then to create a usable copy that has neither one of the two marks).
Although watermarks can be embedded in any digital object, by far most of
the published research on watermarking has dealt with media such as images,
audio or video. There is some literature on watermarking other object types like
software [9,10,11], databases [1,26], and natural language text [3,4].
2.3
Machine Translation
Most Machine Translation (MT) systems in use today are statistical MT systems
based on models derived from a corpus, transfer systems that are based on
linguistic rules for the translations, or hybrid systems that combine the two
approaches. Other translation methodologies, such as semantic MT exist, but
are not considered further as they are not commonly available at this time.
In statistical MT [2,5], the system is trained using a bilingual parallel corpus
to construct a translation model. The translation model gives the translator sta-
tistical information about likely word alignments. A word alignment [23,24] is a
correspondence between words in the source sentence and the target sentence.
For example, for English-French translations, the system “learns” that the En-
glish word “not” typically corresponds to the two French words “ne pas”. The
statistical MT systems are also trained with a uni-lingual corpus in the target
language to construct a language model which is used to estimate what con-
structions are common in the target language. The translator then performs an
approximate search in the space of all possible translations, trying to maximize
the likelihood of the translation to score high in both the translation model and
the language model. The selection of the training data for the construction of
the models is crucial for the quality of the statistical MT system.
3
Protocol
The basic steganographic protocol for this paper works as follows. The sender
ﬁrst needs to obtain a substrate text in the source language. The substrate does
not have to be secret and can be obtained from public sources - for example, a
news website. The sender then translates the sentences in the source text into the
target language using the steganographic encoder. The steganographic encoder
essentially creates multiple translations for each sentence and selects one of these
to encode bits from the hidden message. The translated text is then transmitted
to the receiver, together with information that is suﬃcient to obtain the source
text. This can either be the source text itself or a reference to the source. The
receiver then also performs the translation of the source text using the same
steganographic encoder conﬁguration. By comparing the resulting sentences, the
Translation-Based Steganography
5
substrate source
secret configuration
translators
hidden
data
translations
hidden
data
encode
decode
Alice
translation
substrate source
Bob
Fig. 1. Illustration of the basic protocol. The adversary can observe the public
news and the message between Alice and Bob containing the selected translation
and the (possibly public) substrate source.
receiver reconstructs the bitstream of the hidden message. Figure 1 illustrates
the basic protocol.
The adversary is assumed to know about the existence of this basic protocol
and is also able to obtain the source text and to perform translations. It is not
practical for the adversary to ﬂag all seemingly machine-translated messages
which do not correspond exactly to translations generated from the cover source
by well-known MT systems. There are two reasons for this. First, there are too
many variants of MT software out there (frequently produced by “tweaking”
existing ones), many of which are not advertised or made public. Second, even if
there was a single universal MT software copy that everyone uses, there are still
wildly diﬀering behaviors for it depending on the corpus on which it is trained –
there are too many such potential corpora to track, especially as users seek better
translation quality by using a corpus particularly suited to their application
domain (e.g., news stories about home construction costs and markets).
The adversary does not have access to the speciﬁc conﬁguration of the stegano-
graphic encoder (which acts like a secret key). This conﬁguration consists of ev-
erything that determines which translations are generated, such as the speciﬁc
translation algorithms, the corpora used to train any user-generated translation
systems which may be employed, rules, and dictionaries. It is assumed that the
secret is transmitted using standard secret-sharing protocols and the speciﬁcs
are not covered here. However, it should be noted that the size of the secret
that is transmitted is ﬂexible, based upon the user’s choices; users can choose to
simply share information about the settings of the encoder, or might choose to
transmit entire corpora used to train a user-generated MT system. This varies
based upon individual users’ needs.
As with most steganographic systems, the hidden message itself can be en-
crypted with a secret key, making it harder for the adversary to perform guessing
6
C. Grothoﬀ, K. Grothoﬀ, L. Alkhutova, R. Stutsman, M. Atallah
attacks on the secret conﬁguration (as conﬁgurations of the steganographic sys-
tem result in a random bitstream for the hidden message).
3.1
Producing translations
The ﬁrst step for both sender and receiver after obtaining the source text is to
produce multiple translations of the source text using the same algorithm. The
goal of this step is to deterministically produce multiple diﬀerent translations of
the source text. The simplest approach to achieve this is to apply (a subset of)
all available MT systems on each sentence in the source text. If the parties have
full access to the code of a statistical MT system, they can generate multiple
MT systems from the same codebase by training it with diﬀerent corpora.
In addition to generating diﬀerent sentences using multiple translation sys-
tems it is also possible to apply post-processing on the resulting translations to
obtain additional variations. Such post-processing includes transformations that
mimic the noise inherent in any (MT) translation. For example, post-processors
could insert common translation mistakes (as discussed in Section 4).
As translation quality diﬀers between diﬀerent engines and also depends on
which post-processors were applied to manipulate the result, the translation
system uses a heuristic to assign a probability to each translation that describes
its relative quality compared to the other translations. The heuristic can be
based on both experience with the generators and algorithms that rank sentence
quality based on language models [8]. The speciﬁc set of translation engines,
training corpora and post-processing operations that are used to generate the