### Ad Injection Analysis and Detection

#### 1. Ad Injection Extensions
We begin by focusing on ad injection extensions, comparing the results generated by our tools, WebEval and Hulk. We specifically target the ad injection extensions that we have observed to be active in real-world scenarios. To do this, we manually compile a list of the top 65 injection libraries that are correlated with ad injections on Google websites (as discussed in Section III-A). We then scan the network traces produced by WebEval and Hulk for these specific scripts.

If we detect network requests for these injection libraries and the presence of unauthorized DOM elements, we classify the extension as an ad injector. From our analysis, we identified a total of 50,870 extensions as ad injectors.

#### 2. Binary Analysis
For binary analysis, we leverage Google’s Safe Browsing infrastructure, which dynamically scans hundreds of thousands of binaries daily. The details of this process are outlined by Rajab et al. [28]. Safe Browsing acquires binaries through web crawls and from payloads delivered by websites that serve drive-by downloads [27].

During the analysis, the system sets up a virtualized environment, installs the binary under scrutiny, and then launches Chrome and Internet Explorer. Each browser is directed to visit a suite of websites, including Google properties. The system logs all network traffic throughout this process. This allows us to identify and analyze the behavior of the binaries, particularly those that may inject ads.

### Trigger Pages and Ad Insertion
To ensure a comprehensive understanding of the ad injection ecosystem, we selected trigger pages that are commonly targeted by multiple injection libraries. We visited 1,400 pages and manually identified the insertion or modification of ads. Among the Alexa Top 100, we observed in-property injections into 75% of the pages. These sites include search engines like Google and Yahoo, shopping platforms such as Amazon, Alibaba, eBay, and Craigslist, video sites like YouTube and Dailymotion, and other popular news and media sites.

Based on the most frequently targeted websites, we chose google.com, amazon.com, and walmart.com as our primary trigger pages. For each site, we generated a set of 100 representative queries:
- For Google, we used the top 100 search queries that contain advertisements.
- For Amazon and Walmart, we used the top 100 best-selling products as published by each site [2], [35].

While these 300 queries do not cover the entire range of creatives accessible to ad injectors, they provide a starting point for understanding the advertising relationships underlying the injectors.

### Enumerating Intermediaries
To enumerate intermediaries, we randomly sampled ad injection extensions and visited each of our 300 trigger pages with each extension installed on a client outside of Google’s IP space to avoid cloaking. We used a client-side DOM measurement technique to identify inserted creatives. After each page finished loading and a predefined wait period expired, we injected a script to scan all `<script>`, `<iframe>`, `<div>`, `<a>`, and `<img>` elements.

We developed a comprehensive whitelist of JavaScript events, domains, and div classes and IDs that appear independently of ad injectors, accounting for page dynamism. Any element that violates this whitelist is considered a potential ad. By running Chrome with same-origin protections disabled, we could observe all injected content, including nested iframes.

To uncover the ad revenue chain, we clicked on one injected ad per page if present, monitoring the creation of new tabs and all network traffic until the final landing page was fetched. We repeated this process indefinitely, fetching one extension from a circular task queue, running it against a trigger page, and tearing down the browser session after each successful click. In total, we generated 114,999 ad revenue chains from 398 distinct extensions, with 62,237 from Amazon, 37,718 from Google, and 15,044 from Walmart.

### Dataset Summary
The datasets produced and consumed by our analysis pipeline are summarized in Table I. We collected over 102 million client-side DOM reports, statically analyzed and dynamically executed over 1 million extensions and 25 million binaries, identifying over 50,870 culpable extensions and 34,407 binaries. Finally, we executed a sample of the ad injection extensions to uncover 114,999 clickchains, pinpointing intermediaries involved in supporting ad injection.

### Limitations
Our design has several limitations:
- **Visibility into the Internet**: Our vantage points are limited to Google websites, which may miss ad injectors targeting non-Google sites.
- **Same-Origin Restrictions**: Browsers enforce a same-origin policy, limiting our access to nested cross-origin content.
- **Detecting Modified Events**: Our scanner cannot detect events added via `addEventListener` due to JavaScript limitations.
- **Whitelist Specificity**: We use a domain whitelist, which may overlook some injected elements.
- **Report Tampering**: Operating in a hostile environment, we rely on encrypted delivery and reporting mechanisms.
- **Binary & Extension Coverage**: Our coverage is limited to software encountered by Safe Browsing, WebEval, and Hulk.
- **Advertiser & Intermediary Coverage**: Our 300 queries limit the scope of creatives served, and we only collect a small sample of clickchain data to minimize impact on advertisers.

### Prevalence of Ad Injection
From the client-side reports, we found that 5,339,913 (5.2%) contained evidence of ad injection, impacting a daily average of 5.5% of unique daily IPs. Figure 5 provides a detailed breakdown of injection levels over time per browser. Chrome, the most popular browser, is the most commonly affected platform (5–8% of page views), while Internet Explorer and Firefox show lower but steady rates of ad injection.

### Most Popular Injectors
A few injection libraries dominate the ad injection ecosystem, as shown in Table II. Superfish.com is the most popular, appearing in 3.9% of Google views, followed by Jollywallet.com (2.4%). These libraries are diligent in supporting multiple browsers and are constantly in flux, with some experiencing significant drops or growth over time.

Figure 6 illustrates the prevalence of the top ad injection libraries in Google pages over time, showing the dynamic nature of their adoption and deactivation.

This work provides a comprehensive overview of the ad injection ecosystem, highlighting the key players and the methods used to detect and analyze their activities.