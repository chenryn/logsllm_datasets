案应该不会有什么问题。
选项。
tarball，并且在每次下载包之前先检查这个位置。这在使用 tox时非常有用，tox需要
只需要将环境变量 PIP_DOWNLOAD_CACHE 指向一个目录，pip 就用它来保存下载的
如果要通过pip重复安装同一个包，可以设置本地缓存从而避免每次都去下载这个包。
提示
层面安装而造成操作系统目录的污染。
一旦有了合适的 setup·py文件，很容易生成一个用来分发的源代码 tarball。只需要使
所有其他的安装工具都正在被废弃以支持 pip，所以使用它作为包管理的一站式解决方
commando=0.3.4
Jinja2==2.7.1
$pip freeze
可以使用 pip freeze 命令列出当前已安装的包：
也可以通过提供--user 选项让 pip 将包安装在 home 目录中。这可以避免将包在系统
Babel==1.3
Cleaning up.....
Successfully installed voluptuous
和世界分享你的成果
Installing collected packages: voluptuous
Requirement already satisfied (use --upgrade to upgrade): distribute in
 /usr/lib/python2.7/dist-packages (from voluptuous)
 WARNING: Could not locate pandoc, using Markdown long_description.
WARNING: Could not locate pandoc, using Markdown long_description.
本电子书仅限学习交流使用，请勿用于商业用途
4.5和世界分享你的成果
3
---
## Page 51
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
实现，它复制了主索引的全部功能，但是只用于测试目的。
产服务器中。可以使用PyPI预付费服务器(PyPI staging server,https://testpypi.python.org/pypi)
需要将你的项目发布到PyPI（http://pypi.python.org）。
在 4.3节中提到的，可以使用bdist_wheel命令构建 Wheel 归档文件。
示例4.3使用 setup.py sdist
44
如果是第一次，你很可能会犯错，最好能在一个安全的沙箱中测试发布流程而不是在生
最后一步是要让最终用户在通过 pip 命令安装你的包时能够知道包在哪里。这意味你
第一步就是在测试服务器上注册你的项目。打开你的～/·pypirc 文件并加入下列行：
这会在你的源代码树的 dist目录下创建一个tarball，这可以用来安装你的软件。正如
removing 'ceilometer-2014.1.a6.g772e1a7' (and everything under it)
Writing ceilometer-2014.1.a6.g772ela7/setup.cfg
running check
 ur aiaumAue punog ,ord's, butuozew sa1tI papntout-Aisnotaaid ou :buturem
writing entry points to ceilometer.egg-info/entry_points.txt
writing
$ python setup.py sdist
Creating tar archive
[...]
[pbr] In git context, generating filelist from git
[pbr]  Processing SoURCEs.txt
s    
writing
running egg_info
[pbr] Generating AUTHORS
[pbr] Writing ChangeLog
running sdist
distribution
第4章分发
 ceilometer.egg-info/PKG-INFO
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 52
熊猫爱中国www.xiongmaoi.com
熊猫
爱中writing entry points to ceilometer.egg-info/entry_points.txt
writing entry points to ceilometer.egg-info/entry_points.txt
writing dependency_links to ceilometer.egg-info/dependency_links.txt
writing ceilometer.egg-info/PKG-INFO
% python setup.py sdist upload -r testpypi
最后，可以上传一个源代码分发tarball:
Server response (200): OK
Registering ceilometer to https://testpypi.python,org/pypi
[pbr] Reusing existing SoURCEs.txt
 writing dependency_links to ceilometer.egg-info/dependency_links.txt
[pbr] Processing SOURCEs.txt
[pbr] Generating AUTHORS
running sdist
running check
writing top-level names to ceilometer.egg-info/top_level.txt
writing ceilometer.egg-info/PKG-INFO
writing requirements to ceilometer.egg-info/requires.txt
running egg_info
running register
$ python setup.py register -r testpypi
现在就可以在索引中注册你的项目了：
repository = https://testpypi.python.org/pypi
[phr] Writing ChangeLog
password = 
username = 
[testpypi]
index-servers=
[distutils]
testpypi
本电子书仅限学习交流使用，请勿用于商业用途
4.5和世界分享你的成果
45
---
## Page 53
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
h
creating build/bdist.linux-x86_64/wheel
$ python setup.py bdist_wheel upload -r testpypi
以及一个Wheel归档文件：
 Server response (200): OK
writing entry points to ceilometer.egg-info/entry_points.txt
running build
Submitting dist/ceilometer-2014.1.a6.g772e1a7.tar.gz to https://testpypi.
removing 'ceilometer-2014.1.a6.g772ela7' (and everything under it)
Creating tar archive
Writing ceilometer-2014.1.a6.g772e1a7/setup.cfg
copying setup.cfg -> ceilometer-2014.1.a6.g772e1a7
creating ceilometer-2014.1.a6.g772e1a7
running check
writing manifest file 'ceilometer.egg-info/SoURCEs.txt'
[pbr] In git context, generating filelist from git
running install_lib
running install
installing to build/bdist.linux-x86_64/wheel
[pbr] Reusing existing SOURCEs.txt
writing
writing
running
running build_py
running bdist_wheel
python.org/pypi
[..]
distribution
第4章分发
g top-level names to ceilometer.egg-info/top_level.txt
 ceilometer.egg-info/PKG-INFO
 egg_info
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 54
熊猫爱中国www.xiongmaoi.com
熊猫爱
4.6Nick Coghlan 访谈
服务器了。
和服务器的具体信息添加到你的~/.pypirc 文件中：
(http://www.python.org/dev/peps/pep-0426/)(Metadata for Python Software Packages 2.0)，他
用 pip 安装它，可以通过-i 选项指定测试服务器：
Nick是Red Hat 公司的Python 核心开发人员。他已经写过几个PEP提案，包括PEP436
分别运行 register 和upload 并配合参数-r pypi 就能正确地将你的包上传到 PyPI
password =
如果一切就绪，就可以继续下一步了：上传项目到 PyPI 主服务器。只需要将身份信息
username = 
repository = https://testpypi.python.org/pypi
[testpypi]
password = 
username
index-servers =-
[distutils]
现在应该可以在PyPi预付费服务器中搜索你的包，确认是否上传成功了。也可以试着
[pypi]
Submitting /home/jd/Source/ceilometer/dist/ceilometer-2014.1.a6.g772ela7-
creating bui1d/bdist.1inux-x86_64/whee1/cei1ometer-2014.1.a6.g772e1a7
runningupload
dist-info/WHEEL
testpypi
pypi
=
本电子书仅限学习交流使用，请勿用于商业用途
4.6Nick Coghlan 访谈
47
---
## Page 55
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
zc.buildout 会更容易。
的项目。它还为插件注册和良好的跨平台脚本生成提供了强大的系统支撑。
技术的不同时代。
个问题的表述中已经指出，问题的主要原因之一是年代，上述这些工具大多产生于软件分发
针对不同使用场景的解决方案。详细的答案请参考 Python 打包用户指南（https://python
和分化？
数量真是令人印象深刻。根据你的观点，是什么（可能的历史性）原因造成这样的分裂
是这个提案的BDFL代表。
48
（或者不用）它时需要注意的吗？
PEP 426定义了Python包的一种新格式，但它仍然非常新而且尚未批准。它的进展还
尽管如此，pkg_resources 中的多版本支持要想用好仍然显得有点儿刁钻古怪。除非
setuptools 作为构建系统是相当不错的，尤其是对纯 Python 项目或者只有简单的C扩展
setuptools 如今已经是Python分发工具的事实标准。你觉得有什么问题是用户在使用
简单地回答就是软件的发布、分发和集成是很复杂的问题，所以有很大的空间共存多个
Python 的打包方案（distutils、setuptools、distutils2、distlib、bento、pbr 等）的
第4章分发
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 56
熊猫爱中国www.xiongmaoi.com
熊猫与那些直接涉及修改 CPyhon 的提案（如 pip 引导）。
的功能。
相关的“入口点”的列表。这些入口点能够被其他Python 程序用来动态发现包所提供
setuptools 为你的软件提供 setup·py 文件，这里有一些功能的介绍也许能帮你做决定。
4.7
Linux之前，我们仍然有一些问题要解决。
境，并且 PyPI允许上传针对 Windows 和 Mac OS X平台的 Wheel 归档文件。在它适用于在
了 PEP 流程，以便用 distutils-sig 管理打包与相关 PEP 的完整审批流程。python-dev 将只参
并不能用在 Python 的早期版本中。所以，在今年早些时候的Python 语言峰会上，我们调整
标准库的一部分呢？是否已经有计划包含它？
根据上传的元数据自动生成策略兼容的分发包的能力。
到的一些问题（如清楚地隔离不同类型的依赖)。
自 distutils2以及其他打包系统（如RPM和npm）的想法的融合，并且解决了现有工具中遇
同已有的 setuptools 定义的格式一起工作。因此 PEP 426是已有的 setuptools 元数据和一些来
顺利吗？最开始的动机是什么？你觉得它能解决当前的问题吗？
在下面几节中，我们将讨论如何利用入口点为软件添加扩展能力。
你可能已经在并不了解 setuptools的情况下使用过它的入口点。如果还没决定用
pip 正在接受其成为 Egg 格式的备选方案，允许构建的本地缓存以便快速创建虚拟环
根据你的设想，未来怎样的发展会推动开发人员去构建和分发Wheel格式的包？
事实证明，打包标准并不太适合放到标准库里：它的演进太慢，并且对后面版本的扩展
Wheel格式非常新，还没有被广泛使用，但看上去很有前途。是什么原因造成它还不是
主要的好处是PyPI将能够通过RESTAPI提供完整的元数据访问，并且（希望能）具有
如果PEP426被接受的话，你希望看到出现什么样的工具来充分利用PEP426？
扩展点
本电子书仅限学习交流使用，请勿用于商业用途
4.7扩展点
49
---
## Page 57
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
这个入口点是由包coverage 3.4提供的。可以使用kepi ep show 获得更多信息。
console_scripts（将在 4.7.4节中讨论)。
示例4.4epigroup list的运行结果
入口点，如示例4.4所示。
4.7.1
50
示例4.5显示了一个名为coverage 的入口点，并引用了coverage 模块的成员的 main。
安装后，它提供了名为 épi 的命令，可以从终端运行并能交互式地发现某个安装包的
要看到一个包中可用的入口点的最简单的方法就是使用一个叫éntry_point_
示例4.4显示系统有很多不同地包都提供了入口点。你可能注意到，这个列表包含
第4章分发
1coverage 1 coverage1main1 coverage 3.41
+----------+----------+--------+-------------+-------
IName
+—------------------------
setuptools.installation
 distutils.setup_keywords
distutils.commands
Name
setuptools.file_finders
flake8.extension
egg_info.writers
console_scripts
epi.commands
可视化的入口点
------+----
1Module|MemberlDistribution|Error
本电子书仅限学习交流使用，请勿用于商业用途
--+
1
+
-+---
+
+