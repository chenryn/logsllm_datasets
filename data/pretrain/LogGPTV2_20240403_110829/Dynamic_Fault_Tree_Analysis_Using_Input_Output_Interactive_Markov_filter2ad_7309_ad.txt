A
B
C
D
(a)
(b)
B
C
(c)
Figure 10. Complex spares and FDEP gate extension.
spare) fails, D remains dormant. This is the same behavior
as with the ‘spare’ AND gate in Figure 10.a. If ‘spare’ is
activated, the activation signal is only passed to the primary
C and D remains dormant (this is clearly different from the
AND gate where both BE are activated). Should C fail and
‘spare’ being in its active state, then D is activated. Based
on the above explanation, Figure 11 shows the behavior of
the spare gate A13. Signals aS,A and aS,C are actions out-
A
C
aA?
P
S
fA!
fP?
aS,C?
fS?
fP?
aS,A!
aS,C?
fP?
fS?
aS,C?
aA?
fP?
fS?
aS,C?
aA?
fS?
fP?
Figure 11. The spare gate I/O-IMC model.
put respectively by A and C signaling that the spare S has
been taken14. The spare gate I/O-IMC model has been, of
course, generalized to handle multiple spare gates sharing
multiple spares (i.e. the most general case).
6.2. FDEP gate extension
In this framework, the FDEP gate can trigger the failure
of any gate (representing a sub-system) and not only BE.
Indeed, this extension comes at no extra cost, and the I/O-
IMC used in this case is still the same as the one shown in
Figure 5. Figure 10.c shows such a conﬁguration where T
triggers the failure of the sub-tree A. Note that sub-system
A does not need to be an independent module. Note also
that the trigger T only affects the failure of the gate A and
none of its elements below it such as the basic event C.
12A sub-system is usually named after its top-node and is independent
if (1) all the elements in the tree have inputs from only elements within the
same tree and (2) all the outputs, except for the top-node, are also within
the tree and therefore hidden to the rest of the system
13For clarity, the activation signal is drawn as a dashed line.
14This solution is not very scalable since it suggests that all spare gates
sharing a spare communicate with each other. A better solution has been
found where a ‘spare granting’ auxiliary is used.
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 20077. DFT elements extension
7.2. Repair
In this section, we show, through some examples, how
readily one can extend the DFT elements within the I/O-
IMC framework.
In fact, adding/modifying elements is
done at the level of the elementary I/O-IMC models. More-
over, adding/modifying one element does not affect the re-
mainder of the elements (i.e. their corresponding I/O-IMC
models). This is indeed a desirable property of the I/O-IMC
framework, where the behavioral details and interactions of
any element is kept as local as possible. These extensions
only affect Step 1 of the DFT conversion/analysis algorithm
laid out in Section 5. The remaining ﬁve steps, including
the composition, the aggregation and the analysis remain
unchanged. The ﬁrst extension concerns the modeling of
inhibition and mutually exclusive events. The second exten-
sion is somewhat more involved and concerns the modeling
of repair.
7.1. Inhibition and mutual exclusivity
We say that event A inhibits the failure of B if the fail-
ure of B is prevented when A fails before B. Following
the idea of the ﬁring auxiliary (cf. Section 4.3), this could
be modeled by simply adding an inhibition auxiliary (IA).
Figure 12 shows the conﬁguration of such inhibition and
the corresponding I/O-IMC model of the IA of B. Signal
f∗
B corresponds to the failure signal of B taken in isolation,
i.e. without A’s inhibition. Note that, as with the FA, any
element which has B as input has to now interface with B’s
IA rather than directly with B.
fB
IAB
fA
A
fB*
B
fB*?
fB!
fA?
Figure 12. The I/O-IMC model of the IA.
If event B also inhibits the failure of A, then we need
to add an IA for A as well. In this way, the failure of A
and the failure of B become two mutually exclusive events.
Mutual exclusivity is very useful when modeling a compo-
nent exhibiting various failure modes. A typical example
is a switch with two failure modes: ‘failing to close’ and
‘failing to open’. These failures have normally different
probabilities of occurrence and different consequences on
the overall system. The switch failure modes have to be
modeled as two mutually exclusive BE since the switch can
either fail open or fail closed, but not both.
Adding a notion of repair is somewhat more complicated
as every DFT element can now fail or be repaired. Thus, no
longer only a ‘failed event’ should be signaled but also a ‘re-
paired event’. However, as mentioned above, we only need
to modify ‘locally’ the elementary I/O-IMC corresponding
to each DFT element behavior. Due to the lack of space, we
will only discuss the new I/O-IMC for the BE and the AND
gate (other elements are treated in the same fashion). The
repairable cold BE’s I/O-IMC is shown on Figure 13. Here,
µ denotes the BE repair rate and r! is a signal output by the
BE notifying, to the rest of the elements, that it has been
repaired. Note that the ﬁred state is not absorbing anymore.
As an alternative model, one can of course think of the BE
interacting with a repair station (RS); in which case, the re-
pair process15 would be part of the RS I/O-IMC model and
f would also be an input to the RS. An extra signal (input
to the BE and an output of the RS) would also be needed
for communication between the BE and RS and signaling
that the RS has ﬁnished the repair. The repairable AND
a?
f!
r!
Figure 13. The repairable BE I/O-IMC model.
gate I/O-IMC model is shown on Figure 14. The AND gate
has its own repair output signal (i.e. r!) and needs to con-
sider both failure (fA? and fB?) and repair (rA? and rB?)
signals coming from its inputs A and B. Compared to the
unrepairable AND gate, Figure 14 has 3 extra states. If we
fA?
rB?
rA?
fB?
fB?
rB?
fA?
rA?
r!
r!
r!
rB?
fB?
f!
fA?
rA?
rA?
fA?
fB?
rB?
Figure 14. The repairable AND gate I/O-IMC model.
consider a very simple repairable system composed of an
AND gate with two BE A and B (Figure 15.a), then the
resulting I/O-IMC after automatic composition and aggre-
gation16 is, as expected, a CTMC shown on Figure 15.b.
15Which could be more complicated than a single Markovian transition
with repair rate µ.
16And abstraction of the AND gate’s activation and failure signals.
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007[6] M. Bouissou and J.-L. Bon. A new formalism that combines
advantages of fault-trees and Markov models: Boolean logic
driven Markov processes. Reliability Engineering and Sys-
tem Safety, 82(2):149–163, 2003.
[7] M. A. Boyd. Dynamic fault tree models: techniques for
analyses of advanced fault tolerant computer systems. Phd
dissertation, Dept. of Computer Science, Duke University,
1991.
[8] D. Coppit, K. J. Sullivan, and J. B. Dugan. Formal seman-
tics of models for computational engineering: A case study
on dynamic fault trees. In Proceedings of the International
Symposium on Software Reliability Engineering, pages 270–
282. IEEE, Oct 2000.
[9] P. Crouzen. Compositional analysis of dynamic fault trees.
MSc thesis, University of Twente, Enschede, the Nether-
lands, 2006.
[10] J. B. Dugan, S. J. Bavuso, and M. A. Boyd.
Dy-
namic fault-tree models for fault-tolerant computer systems.
IEEE Transactions on Reliability, 41(3):363–377, Septem-
ber 1992.
[11] J. B. Dugan, B. Venkataraman, and R. Gulati. DIFTree: a
software package for the analysis of dynamic fault tree mod-
els.
In Reliability and Maintainability Symposium, pages
64–70, Jan 1997.
[12] H. Hermanns. Interactive Markov Chains, volume 2428 of
Lecture Notes in Computer Science. Springer-Verlag, 2002.
[13] H. Hermanns, U. Herzog, U. Klehmet, V. Mertsiotakis, and
M. Siegle. Compositional performance modelling with the
TIPPtool. Lecture Notes in Computer Science, 1469:51–62,
1998.
[14] H. Hermanns and J.-P. Katoen. Automated compositional
Markov chain generation for a plain-old telephone system.
Science of Computer Programming, 36(1):97–127, 2000.
[15] R. A. Howard. Dynamic probability systems. Volume 1:
Markov models. Decision and Control. John Wiley & Sons,
Inc., 1971.
[16] N. A. Lynch and M. R. Tuttle. An introduction to in-
put/output automata. CWI Quarterly, 2(3):219–246, 1988.
[17] R. Milner. Communication and Concurrency. Prentice Hall
Inc., 1989.
[18] W. J. Stewart.
Introduction to the Numerical Solution of
Markov Chains. Princeton University Press, 1994.
[19] K. K. Vemuri, J. B. Dugan, and K. J. Sullivan. Auto-
matic synthesis of fault trees for computer-based systems.
IEEE Transactions on Reliability, 48(4):394–402, Decem-
ber 1999.
[20] W. E. Veseley, F. F. Goldberg, N. H. Roberts, and D. F.
Haasl. Fault Tree Handbook, NUREG-0492. United States
Nuclear Regulatory Commission, NASA, 1981.
At this point, one can perform some analysis on the CTMC
A
B
(a)
(b)
Figure 15. A simple repairable system.
such as computing the system unavailability.
8. Conclusion and future work
In this paper, we have illustrated the use of the I/O-IMC
framework for the analysis of DFT and showed, through
some examples, the increase of the DFT modularity both at
the analysis level and the model-building level. We have
also demonstrated the ease with which one can deﬁne new
DFT elements and provided examples of such extensions.
Areas of future research include: (1) From a process al-
gebra point of view, we would like to achieve even more
drastic state-space reduction using more suitable aggrega-
tion techniques.
(2) Generalize the concept of activation
to any type of mode switch17; this is similar to the notion
of ‘triggered Markov processes’ deﬁned in [6]. (3) In this
paper, we have only considered exponential failure distribu-
tions for BE; it would be worthwhile investigating the use of
phase-type distributions, which naturally integrate into the
I/O-IMC framework, to approximate any BE failure proba-
bility distribution.
References
[1] S. Amari, G. Dill, and E. Howald. A new approach to solve
dynamic fault trees. In Annual Reliability and Maintainabil-
ity Symposium, pages 374–379, January 2003.
[2] C. Baier, H. Hermanns, J.-P. Katoen, and B. R. Haverkort.
Efﬁcient computation of time-bounded reachability proba-
bilities in uniform continuous-time Markov decision pro-
cesses. Theor. Comput. Sci., 345(1):2–26, 2005.
[3] H. Boudali. A Bayesian network reliability modeling and
analysis framework. Phd dissertation, University of Vir-
ginia, Charlottesville, VA, May 2005.
[4] H. Boudali, P. Crouzen, and M. I. A. Stoelinga. A com-
positional semantics for Dynamic Fault Trees in terms of
Interactive Markov Chains. Technical report, University of
Twente, Enschede, the Netherlands, to appear.
[5] H. Boudali and J. B. Dugan. A new Bayesian network ap-
proach to solve dynamic fault trees. In Reliability and Main-
tainability Symposium, Jan 2005.
17In this respect, inhibition can be viewed as a mode switch where the
inhibited event moves to a permanent operational state upon the receipt of
the failure signal from the inhibitor.
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007