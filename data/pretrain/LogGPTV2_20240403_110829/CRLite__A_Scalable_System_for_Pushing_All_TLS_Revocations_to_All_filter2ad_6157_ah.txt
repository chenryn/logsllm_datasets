SIGMETRICS International Conference on Measurement and Modeling
of Computer Systems, June 2010.
[31] M. Goodwin. Revoking Intermediate Certiﬁcates: Introducing OneCRL.
Mozilla Security Blog, March 2015. http://mzl.la/1zLFp7M.
[32] S. Gorbunov, V. Vaikuntanathan, and D. Wichs. Leveled Fully Homo-
In ACM Symposium on
morphic Signatures from Standard Lattices.
Theory of Computing (STOC), June 2015.
[33] P. Hallam-Baker. X.509v3 Extension: OCSP Stapling Required, October
2012. https://tools.ietf.org/html/draft-hallambaker-muststaple-
00.
[34] P. Hallam-Baker. X.509v3 Transport Layer Security (TLS) Feature
Extension. RFC 7633, October 2015.
[35] P. Hoffman and J. Schlyter. The DNS-based Authentication Of Named
Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA. RFC
6698, August 2012.
[36] R. Holz, L. Braun, N. Kammenhuber, and G. Carle. The SSL Landscape
– a Thorough Analysis Of The X.509 PKI Using Active And Passive
Measurements. In ACM Internet Measurement Conference, November
2011.
[37] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor.
Accountable Key Infrastructure (AKI): A Proposal for a Public-key
Validation Infrastructure. In International World Wide Web Conference,
May 2013.
[38] P. C. Kocher. On Certiﬁcate Revocation and Validation. In International
Conference on Financial Cryptography, February 1998.
[39] A. Langley. Smaller Than Bloom Filters, April 2011.
https://www.imperialviolet.org/2011/04/29/ﬁlters.html.
[40] A. Langley. Revocation Checking And Chrome’s CRL, February 2012.
https://www.imperialviolet.org/2012/02/05/crlsets.html.
[41] A. Langley. No, Don’t Enable Revocation Checking, April 2014.
https://www.imperialviolet.org/2014/04/19/revchecking.html.
[42] A. Langley. Revocation Still Doesn’t Work, April 2014.
https://www.imperialviolet.org/2014/04/29/
revocationagain.html.
[43] B. Laurie.
2015.
May
EVCTPlanMay2015edition.pdf.
Improving
of EV Certiﬁcates,
https://www.certiﬁcate-transparency.org/ev-ct-plan/
Security
the
[44] B. Laurie and E. Kasper. Revocation Transparency. GitHub, June
https://github.com/google/trillian/blob/master/docs/
2016.
RevocationTransparency.pdf.
[45] B. Laurie, A. Langley, and E. Kasper. Certiﬁcate Transparency. RFC
6962, June 2013.
[46] Let’s Encrypt. https://letsencrypt.org.
[47] D. Levin, J. R. Douceur, J. R. Lorch, and T. Moscibroda. TrInc: Small
In Symposium on
Trusted Hardware for Large Distributed Systems.
Networked System Design and Implementation, April 2009.
[48] J. Liang, J. Jiang, H. Duan, K. Li, T. Wan, and J. Wu. When HTTPS
Meets CDN: A Case of Authentication in Delegated Service. In IEEE
Symposium on Security and Privacy, May 2014.
[49] Y. Liu, W. Tome, L. Zhang, D. Choffnes, D. Levin, B. Maggs, A. Mis-
love, A. Schulman, and C. Wilson. An End-to-end Measurement Of
Certiﬁcate Revocation In The Web’s PKI. In ACM Internet Measurement
Conference, October 2015.
554
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:56 UTC from IEEE Xplore.  Restrictions apply. 
[50] P. D. McDaniel and A. D. Rubin. A Response to “Can We Eliminate
International Conference on Financial
Certiﬁcate Revocation Lists?”.
Cryptography, February 2000.
[51] S. Micali. Efﬁcient Certiﬁcate Revocation.
In RSA Data Security
Conference, March 1997.
[52] S. Micali. Scalable Certiﬁcate Validation And Simpliﬁed PKI Manage-
ment. In PKI Research Workshop, April 2002.
[53] G. C. M. Moura, R. de O. Schmidt, J. Heidemann, W. de Vries,
M. Mueller, L. Wei, and C. Hesselman. Anycast vs. DDoS: Evaluating
the November 2015 Root DNS Event. In ACM Internet Measurement
Conference, 2016.
[54] PKI:CT. Mozilla Wiki, December 2014.
https://wiki.mozilla.org/PKI:CT.
[55] M. Naor and K. Nissim. Certiﬁcate Revocation and Certiﬁcate Update.
In USENIX Security Symposium, January 1998.
[56] D. Naylor, A. Finamore, I. Leontiadis, Y. Grunenberger, M. Mellia,
M. Munafò, K. Papagiannaki, and P. Steenkiste. The Cost of the “S” in
HTTPS. In ACM International on Conference on Emerging Networking
Experiments and Technologies, December 2014.
[57] K. Needham. The Future of Developing Firefox Add-ons, August
2015. https://blog.mozilla.org/addons/2015/08/21/the-future-
of-developing-ﬁrefox-add-ons/.
[58] H. Perl, S. Fahl, and M. Smith. You Won’t Be Needing These Any
More: On Removing Unused Certiﬁcates From Trust Stores. In Financial
Cryptography and Data Security, March 2014.
[59] F. Putze, P. Sanders, and J. Singler. Cache-, Hash-, and Space-efﬁcient
Bloom Filters. J. Exp. Algorithmics, 14:4:4.4–4:4.18, Jan. 2010.
[60] Rapid7 SSL Certiﬁcate Scans.
https://scans.io/study/sonar.ssl.
[61] R. L. Rivest. Can We Eliminate Certiﬁcate Revocation Lists? Interna-
tional Conference on Financial Cryptography, 1998.
[62] M. D. Ryan. Enhanced Certiﬁcate Transparency and End-to-end En-
crypted Mail. In Network and Distributed System Security Symposium,
February 2014.
[63] Safe Browsing. The Chromium Project.
https://www.chromium.org/developers/design-
documents/safebrowsing.
[64] K. Salikhov, G. Sacomoto, and G. Kucherov. Using Cascading Bloom
Filters to Improve the Memory Usage for de Brujin Graphs. In Workshop
on Algorithms in Bioinformatics, September 2013.
[65] A. Schulman, D. Levin, and N. Spring. RevCast: Fast, Private Certiﬁcate
In ACM Conference on Computer and
Revocation Over FM Radio.
Communications Security, November 2014.
[66] R. Sleevi. Announcement: Requiring Certiﬁcate Transparency in 2017.
Certiﬁcate Transparency Policy, October 2016.
https://groups.google.com/a/chromium.org/forum/#!topic/ct-
policy/78N3SMcqUGw.
[67] E. Syta, I. Tamas, D. Visher, D. I. Wolinsky, P. Jovanovic, L. Gasser,
N. Gailly, I. Khofﬁ, and B. Ford. Keeping Authorities “Honest or Bust”
with Decentralized Witness Cosigning. In IEEE Symposium on Security
and Privacy, May 2016.
[68] P. Szalachowski, L. Chuat, T. Lee, and A. Perrig. RITM: Revocation in
the Middle. In IEEE International Conference on Distributed Computing
Systems, June 2016.
[69] P. Szalachowski, L. Chuat, and A. Perrig. PKI Safety Net (PKISN):
Addressing the Too-Big-to-Be-Revoked Problem of the TLS Ecosystem.
In IEEE European Symposium on Security and Privacy, March 2016.
[70] P. Szalachowski, S. Matsumoto, and A. Perrig. Policert: Secure and
ﬂexible tls certiﬁcate management. In ACM Conference on Computer
and Communications Security, November 2014.
[71] University
Of
Michigan
HTTPS
Ecosystem
Scans.
https://scans.io/study/umich-https.
[72] N. Vallina-Rodriguez, J. Amann, C. Kreibich, N. Weaver, and V. Paxson.
A Tangled Mass: The Android Root Certiﬁcate Stores. In International
Conference on Emerging Networking Experiments and Technologies,
December 2014.
[73] B. VanderSloot, J. Amann, M. Bernhard, Z. Durumeric, M. Bailey,
and J. A. Halderman. Towards a Complete View of the Certiﬁcate
Ecosystem. In ACM Internet Measurement Conference, November 2016.
[74] Z. Wang. CasAB: Building Precise Bitmap Indices via Cascaded Bloom
In IEEE Conference on Internet Computing for Science and
Filters.
Engineering, December 2009.
[75] S. Yilek, E. Rescorla, H. Shacham, B. Enright, and S. Savage. When
Private Keys Are Public: Results From The 2008 Debian OpenSSL
Vulnerability.
2009.
In ACM Internet Measurement Conference, November
[76] L. Zhang, D. Choffnes, T. Dumitras, D. Levin, A. Mislove, A. Schulman,
and C. Wilson. Analysis Of SSL Certiﬁcate Reissues And Revocations
In The Wake Of Heartbleed. In ACM Internet Measurement Conference,
November 2014.
[77] L. Zhou, F. B. Schneider, and R. Van Renesse. COCA: A Secure Dis-
tributed Online Certiﬁcation Authority. ACM Transactions on Computer
Systems, 20(4):329–368, November 2002.
APPENDIX A
ANALYSIS OF FILTER CASCADE LEVELS
Here, we extend our analysis from § III-C to rigorously
determine the expected number of hashes applied to each
certiﬁcate and the expected number of levels in the ﬁlter
cascade. Note that very few certiﬁcates survive to the last level
of the ﬁlter cascade.
We model the removal of certiﬁcates from consideration as
a coin-ﬂipping process. Recall that we seek to store some set
R, that all queries come from some “universe” U, and that
R ∪ S = U. For each set element, whether originally in R
or S, there is a coin ﬂipping process that proceeds in rounds.
The coin for an element is ﬂipped whenever it is among those
that are not being inserted into the Bloom ﬁlter at a particular
level. These are the levels at which a false positive may occur
for the element. Hence, for any element, a coin-ﬂipping round
occurs every other level. With probability 1− p1 or 1− p, the
outcome is “heads” indicating that the element can be removed
from consideration and no more ﬂips are necessary. Otherwise
the ﬂip is “tails” and the process continues. Assuming that our
hash functions choose which bits to set for different elements
independently, every coin ﬂip is independent.
Levels per Certiﬁcate. We begin by analyzing the expected
number of levels at which an individual certiﬁcate is inserted
or checked for a false positive. Let Xi be a random variable
indicating the number of rounds until heads is ﬂipped for the
ith coin. For an element in R, it is easy to show that E[Xi] =
1/(1 − p). As an example, for p = 1/2, E[Xi] = 2. For an
element in S, the formula is slightly more complicated because
the probability of heads in the ﬁrst round is 1−p1, and in later
rounds 1 − p. Thus E[Xi] = (1 − p1) + p1(1 + 1/(1 − p)).
This quantity is smaller than the number of rounds for an
element in R, assuming p1 < p. For an element in R, the
number of levels, Yi, at which the certiﬁcate is inserted or
checked is twice the number of rounds, i.e., Yi = 2Xi, so that
E[Yi] = 2/(1 − p). As an example, for p = 1/2, E[Yi] = 4.
For an element in S, the number of levels is given by Yi =
2Xi − 1, hence E[Yi] = 2(1 − p1) + 2p1(1 + 1/(1 − p)) − 1.
Again, for p1 < p, the expected number of levels is smaller
for an element of S than for an element of R. Note that the
expressions for E[Xi] and E[Yi] are actually upper bounds,
because an element of R need not be considered further if all
of the elements of S have been removed from consideration,
and vice versa.
Hashes per Certiﬁcate.
At each level, multiple hash
functions may be applied to a certiﬁcate. Let k1 denote the
number of hash functions used in the Bloom ﬁlter at level
555
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:56 UTC from IEEE Xplore.  Restrictions apply. 
1, and let k denote the number of hash functions used in
each Bloom ﬁlter at all levels after 1. Let Zi denote the
number of hash functions applied to the ith certiﬁcate. For
any element, whether in R or S, Zi = k1 + k(Yi − 1). Hence
E[Zi] = k1 + k(E[Yi] − 1). As an example, for p = 1/2 and
k = 1, for an element of R we have E[Zi] = k1 + 3. (For an
element of S, E[Zi] is smaller.)
Levels in Filter Cascade.
Finally, we would like to bound
the expected number of levels in the entire ﬁlter cascade, i.e.,
the expected number of levels required until every element
has ﬂipped heads. Eisenberg [24] states a bound that we can
immediately apply to the expected number of even-numbered
levels needed before all elements of R are removed from con-
sideration. Suppose that N coins are being ﬂipped in rounds,
where in each round, each coin has probability 1−p of ﬂipping
heads. As before, let Xi denote the number of rounds until the
ith coin ﬂips heads. We are interested in the maximum, over
all coins, of the number of rounds needed to ﬂip heads, i.e.,
in the random variable X = max(X1, . . . , XN ). The bound
from [24] is
HN
ln 1
p
≤ E[X] ≤ 1 +
HN
ln 1
p
,
(3)
(cid:7)N
where HN is the Nth harmonic number, i.e., HN =
i=1 1/i.
For large N, HN is very close to ln N +0.577. Let XR denote
the number of even-numbered levels needed. Then applying
the bound from Inequality (3) with N = r = |R|, yields
E[XR] ≤ 1 + (ln r + 0.577)/ ln(1/p).
For the elements of S a slightly messier analysis is required
because at the ﬁrst level these elements suffer false positives
with probability p1, and at all subsequent odd levels with
probability p. But for the sake of the analysis, let us begin
by assuming that the false positive probability (the probability
of ﬂipping tails) in every round is p. Then the bound from
Inequality (3) can be applied with N = s = |S|. Note that
in this coin-ﬂipping process, the probability that an element
survives the ﬁrst i rounds, ﬂipping tails i times, is pi. Suppose
now that we modify the coin-ﬂipping process so that
in
the ﬁrst round the probability of tails is p1,
in the next
(cid:17)(ln p1)/(ln p)(cid:18)− 1 rounds the probability of tails is 1, and in
all subsequent rounds the probability of tails remains p. Here
we assume that p1 < p. Observe that after this modiﬁcation to
the process, the expected number of rounds can only decrease
because the probability that any element survives i rounds,
for any i, can only decrease. Hence, applying Inequality (3)
with N = s, the expected number of rounds in the modiﬁed
process is at most 1 + (ln s + 0.577)/ ln(1/p).
Now we modify the process again by removing the rounds
in which the false positive probability is 1. Removing these
rounds does not affect what happens in any other rounds. The
probability that there are no false positives in the ﬁrst round
(and thus that there is only one level) is (1 − p1)s. Hence,
the expected number of rounds in this ﬁnal process is reduced
by (1 − (1 − p1)s)((cid:17)(ln p1)/(ln p)(cid:18) − 1). Note that this ﬁnal
process is now identical to the process implemented in the
odd levels of our ﬁlter cascade. Let XS denote the number
of odd-numbered levels needed to remove all elements of S
(cid:11)
from consideration. Then
E[XS] ≤ 1 +
ln s + 0.577
− (1− (1− p1)
(cid:8)(cid:9)
− 1
(cid:10)
.
s
)
ln p1
ln p
ln(1/p)
Building the ﬁlter cascade ends when either all of the
elements in R have been removed from consideration, or all
of the elements in S have been removed from consideration,
whichever comes ﬁrst. Hence,
the total number of levels,
XT , is min(2XS − 1, 2XR). Because the expectation of the
minimum of two random variables is at most the minimum of
the expectations, we have
E[XT ] ≤ min(2E[XS] − 1, 2E[XR]).
High Probability Bounds.
It is also straightforward to
prove a high probability bound. The probability that a coin is
ﬂipped tails i times in a row is pi. Thus, the probability that
there is any coin that has been ﬂipped tails i times in a row is
at most N pi. If we want 99% conﬁdence that at most i rounds
are needed, we set N pi = 0.01, and then solve for i.
556
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:56 UTC from IEEE Xplore.  Restrictions apply.