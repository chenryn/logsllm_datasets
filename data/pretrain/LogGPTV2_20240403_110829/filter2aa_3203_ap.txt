dotted decimal representations of the subnetted address prefixes, and the third column contains the 
dotted decimal representations of the first and last IPv4 addresses of the subnetted address prefix. 
Alternately, add a column to the previous table used for enumerating the subnetted address prefixes 
in decimal. 
2. For each row, calculate the first IPv4 address in the range by adding 1 to the last octet of the 
subnetted address prefix.  
3. For each row except the last, calculate the last IPv4 address in the range using the following 
formulas: 
When you subnet within the first octet, the last value for a given subnet is [NextSubnetID - 
1].255.255.254 (in which NextSubnetID is the value of the octet that is being subnetted for the next 
subnetted address prefix). 
When you subnet within the second octet, the last value for a given subnet is w.[NextSubnetID - 
1].255.254. 
When you subnet within the third octet, the last value for a given subnet is w.x.[NextSubnetID - 
1].254. 
When you subnet within the fourth octet, the last value for a given subnet is w.x.y.[NextSubnetID - 
2]. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 102 
4. For the last row, calculate the last IPv4 address in the range using the following formulas:  
When you subnet within the first octet, the last value is [SubnetID + i - 1].255.255.254 (in which 
SubnetID is the value of the octet that is being subnetted for the current subnetted address prefix 
and i is the increment value derived when determining the subnetted address prefixes). 
When you subnet within the second octet, the last value is w.[SubnetID + i - 1].255.254. 
When you subnet within the third octet, the last value is w.x.[SubnetID + i - 1].254. 
When you subnet within the fourth octet, the last value is w.x.y.[SubnetID + i - 2]. 
For example, Table 4-6 shows the range of IPv4 addresses for the 3-bit subnetting of 192.168.0.0/16. 
Subnet 
Subnetted address prefix 
Range of IPv4 Addresses 
1 
192.168.0.0/19 
192.168.0.1 –192.168.31.254 
2 
192.168.32.0/19 
192.168.32.1 –192.168.63.254 
3 
192.168.64.0/19 
192.168.64.1 –192.168.95.254 
4 
192.168.96.0/19 
192.168.96.1 –192.168.127.254 
5 
192.168.128.0/19 
192.168.128.1 –192.168.159.254 
6 
192.168.160.0/19 
192.168.160.1 –192.168.191.254 
7 
192.168.192.0/19 
192.168.192.1 –192.168.223.254 
8 
192.168.224.0/19 
192.168.224.1 –192.168.255.254 
Table 4-6  Decimal Technique for Defining the Ranges of IPv4 Addresses for the 3-bit Subnetting of 
192.168.0.0/16 
Subnetting Across an Octet Boundary 
Like the procedure for subnetting within an octet, the procedure for subnetting across an octet boundary 
has two steps: 
Defining the subnetted address prefixes 
Defining the range of usable IPv4 addresses for each subnetted address prefix 
The following sections describe these steps. 
Defining the Subnetted address prefixes 
To subnet across an octet boundary, do the following: 
1. Based on n, the number of host bits you are using for subnetting, create a three-column table with 2n 
rows. The first column contains the subnet numbers (starting with 1), the second column contains 
representations of the 32-bit subnetted address prefixes as single decimal numbers, and the third 
column contains the dotted decimal representations of the subnetted address prefixes. 
2. Convert the address prefix (w.x.y.z) being subnetted from dotted decimal notation to N, a decimal 
representation of the 32-bit address prefix, using the following formula: 
N = w16777216 + x65536 + y256 + z 
3. Compute the increment value I using I = 2h where h is the number of host bits remaining. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 103 
4. In the first row, place N, the decimal representation of the subnetted address prefix, in the second 
column, and place the subnetted address prefix w.x.y.z with its new prefix length in the third column. 
5. In the next row, add I to the previous row’s decimal representation, and place the result in the second 
column. 
6. Convert the decimal representation of the subnetted address prefix to dotted decimal notation 
(W.X.Y.Z) using the following formula (where s is the decimal representation of the subnetted 
address prefix): 
W = int(s/16777216) 
X = int((s mod(16777216))/65536) 
Y = int((s mod(65536))/256) 
Z = s mod(256) 
int( ) denotes integer division, and mod( ) denotes the modulus (the remainder upon division). 
7. Repeat steps 5 and 6 until you complete the table. 
For example, to perform a 4-bit subnetting of the address prefix 192.168.180.0/22, construct a table 
with 16 (24) rows, as Table 4-7 shows. N, the decimal representation of 192.168.180.0, is 3232281600, 
which is the result of 19216777216 + 16865536 + 180256. Because 6 host bits remain, the 
increment I is 26 = 64. Additional rows in the table are successive increments of 64. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 104 
Subnet 
Decimal Representation 
Subnetted Address 
Prefix 
1 
3232281600 
192.168.180.0/26 
2 
3232281664 
192.168.180.64/26 
3 
3232281728 
192.168.180.128/26 
4 
3232281792 
192.168.180.192/26 
5 
3232281856 
192.168.181.0/26 
6 
3232281920 
192.168.181.64/26 
7 
3232281984 
192.168.181.128/26 
8 
3232282048 
192.168.181.192/26 
9 
3232282112 
192.168.182.0/26 
10 
3232282176 
192.168.182.64/26 
11 
3232282240 
192.168.182.128/26 
12 
3232282304 
192.168.182.192/26 
13 
3232282368 
192.168.183.0/26 
14 
3232282432 
192.168.183.64/26 
15 
3232282496 
192.168.183.128/26 
16 
3232282560 
192.168.183.192/26 
Table 4-7  Decimal Subnetting Technique for the 4-bit Subnetting of 192.168.180.0/22 
This method is a completely general technique for subnetting, and you can also use it within an octet 
and across multiple octets. 
Defining the Range of IPv4 Addresses for Each Subnet 
To determine the range of usable host IDs for each subnetted address prefix, perform the following 
steps: 
1. Based on n, the number of host bits you are using for subnetting, create a three-column table with 2n 
rows. The first column contains the subnet numbers (starting with 1), the second column contains the 
decimal representation of the first and last IPv4 addresses for the subnetted address prefixes, and 
the third column contains the dotted decimal representation of the first and last IPv4 addresses of the 
subnetted address prefixes. Alternately, add two columns to the previous table used for enumerating 
the subnetted address prefixes using the decimal subnetting technique. 
2. Compute the increment value J based on h, the number of host bits remaining: 
J = 2h – 2 
3. The first IPv4 address is N + 1, in which N is the decimal representation of the subnetted address 
prefix. The last IPv4 address is N + J. 
4. Convert the decimal representation of the first and last IPv4 addresses to dotted decimal notation 
(W.X.Y.Z) using the following formula (where s is the decimal representation of the first or last IPv4 
address): 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 105 
W = int(s/16777216) 
X = int((s mod(16777216))/65536) 
Y = int((s mod(65536))/256) 
Z = s mod(256) 
int( ) denotes integer division, and mod( ) denotes the modulus (the remainder upon division). 
5. Repeat steps 3 and 4 for each row of the table. 
For example, Table 4-8 shows the range of IPv4 addresses for the 4-bit subnetting of 
192.168.180.0/22. The increment J is 26 – 2 = 62. 
Subnet 
Decimal Representation 
Range of IPv4 Addresses 
1 
3232281601-3232281662 
192.168.180.1-192.168.180.62 
2 
3232281665-3232281726 
192.168.180.65-192.168.180.126 
3 
3232281729-3232281790 
192.168.180.129-192.168.180.190 
4 
3232281793-3232281854 
192.168.180.193-192.168.180.254 
5 
3232281857-3232281918 
192.168.181.1-192.168.181.62 
6 
3232281921-3232281982 
192.168.181.65-192.168.181.126 
7 
3232281985-3232282046 
192.168.181.129-192.168.181.190 
8 
3232282049-3232282110 
192.168.181.193-192.168.181.254 
9 
3232282113-3232282174 
192.168.182.1-192.168.182.62 
10 
3232282177-3232282238 
192.168.182.65-192.168.182.126 
11 
3232282241-3232282302 
192.168.182.129-192.168.182.190 
12 
3232282305-3232282366 
192.168.182.193-192.168.182.254 
13 
3232282369-3232282430 
192.168.183.1-192.168.183.62 
14 
3232282433-3232282494 
192.168.183.65-192.168.183.126 
15 
3232282497-3232282558 
192.168.183.129-192.168.183.190 
16 
3232282561-3232282622 
192.168.183.193-192.168.183.254 
Table 4-8  Decimal Enumeration of the Ranges of IPv4 Addresses for the 4-bit Subnetting of 
192.168.180.0/22 
Variable Length Subnetting 
One of the original uses for subnetting was to subdivide a class-based address prefix into a series of 
equal-sized subnets. For example, a 4-bit subnetting of a class B address prefix produces 16 equal-
sized subnets. However, subnetting is a general method of using host bits to express subnets and does 
not require equal-sized subnets. 
Subnets of different sizes can exist within a class-based or classless address prefix. This practice is 
well suited to real-world environments, where networks of an organization contain different numbers of 
hosts, and you need different-sized subnets to avoid wasting IPv4 addresses. The practice of creating 
and deploying various-sized subnets from an IPv4 address prefix is known as variable length 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 106 
subnetting, and this technique uses variable prefix lengths, also known as variable length subnet masks 
(VLSMs). 
Variable length subnetting is a technique of allocating subnetted address prefixes that use prefix 
lengths of different sizes. However, all subnetted address prefixes are unique, and you can distinguish 
them from each other by their corresponding prefix length. 
Variable length subnetting essentially performs subnetting on a previously subnetted address prefix. 
When you subnet, you keep the fixed address prefix and choose a certain number of host bits to 
express subnets. With variable length subnetting, the address prefix being subnetted has already been 
subnetted. 
Variable Length Subnetting Example 
For example, given the address prefix of 157.54.0.0/16, the required configuration is to reserve half the 
addresses for future use, have 15 address prefixes for sites of the organization with up to 2,000 hosts, 
and create eight subnets with up to 250 hosts. 
To achieve the requirement of reserving half the address space for future use, subnet 1 bit of the class-
based address prefix of 157.54.0.0. This subnetting produces 2 subnets, 157.54.0.0/17 and 
157.54.128.0/17, dividing the address space in half. You can fulfill the requirement by choosing 
157.54.0.0/17 as the address prefix for the reserved portion of the address space. 
Table 4-9 shows the reservation of half the address space. 
Subnet Number 
Address Prefix (Dotted Decimal) 
Address Prefix (Prefix Length) 
1 
157.54.0.0, 255.255.128.0 
157.54.0.0/17 
Table 4-9  Reserving Half the Address Space 
To fulfill the requirement of 15 address prefixes with approximately 2,000 hosts per prefix, subnet 4 bits 
of the subnetted address prefix of 157.54.128.0/17. This subnetting produces 16 address prefixes 
(157.54.128.0/21, 157.54.136.0/21…157.54.240.0/21, 157.54.248.0/21), allowing up to 2,046 hosts per 
address prefix. You can fulfill the requirement by choosing the first 15 subnetted address prefixes 
(157.54.128.0/21 to 157.54.240.0/21) as the address prefixes for other sites. 
Table 4-10 illustrates 15 address prefixes with up to 2,046 hosts per subnet. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 107 
Subnet Number 
Address Prefix (Dotted Decimal) 
Address Prefix (Prefix Length) 
1 
157.54.128.0, 255.255.248.0 