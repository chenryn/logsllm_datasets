title:Attribute-based signature and its applications
author:Jin Li and
Man Ho Au and
Willy Susilo and
Dongqing Xie and
Kui Ren
Attribute-Based Signatures∗
Hemanta K. Maji†
Manoj Prabhakaran†
Mike Rosulek‡
November 22, 2010
Abstract
We introduce Attribute-Based Signatures (ABS), a versatile primitive that allows a party to
sign a message with ﬁne-grained control over identifying information. In ABS, a signer, who
possesses a set of attributes from the authority, can sign a message with a predicate that is
satisﬁed by his attributes. The signature reveals no more than the fact that a single user with
some set of attributes satisfying the predicate has attested to the message. In particular, the
signature hides the attributes used to satisfy the predicate and any identifying information about
the signer (that could link multiple signatures as being from the same signer). Furthermore,
users cannot collude to pool their attributes together.
We give a general framework for constructing ABS schemes, and then show several practical
instantiations based on groups with bilinear pairing operations, under standard assumptions.
Further, we give a construction which is secure even against a malicious attribute authority, but
the security for this scheme is proven in the generic group model. We describe several practical
problems that motivated this work, and how ABS can be used to solve them. Also, we show
how our techniques allow us to extend Groth-Sahai NIZK proofs to be simulation-extractable
and identity-based with low overhead.
1
Introduction
Alice, a ﬁnance manager in a big corporation, while going through her company’s ﬁnancial records,
has learned about a major international scandal. She decides to send these records to a major
newspaper, retaining her anonymity, but with a proof that she indeed has access to the records
in question. It turns out that several people, due to a combination of reasons, may have access
to these records: those in the New York, London or Tokyo oﬃce who are either ﬁnance managers
associated with project Skam, or internal auditors. Alice considers using a ring signature [30] to
endorse her message anonymously, but realizes that it is infeasible not only because of the large
number of people involved, but also because she does not know who these people are. She realizes
she cannot use a group signature [17] either, because the set of people Alice needs to refer to here
is idiosyncratic to her purposes, and may not have been already collected into a group.1 She is also
aware of mesh signatures [11], but mesh signatures provide no way to convince the newspaper that
the ﬁnancial record was endorsed by a single person, not, say, a programmer in the New York oﬃce
colluding with an internal auditor in the Smalltown oﬃce.
Alice’s needs in this story reﬂect the challenges in a system where the roles of the users depend on
the combination of attributes they possess. In such systems, users obtain multiple attributes from
∗Partially supported by NSF grants CNS 07-16626 and CNS 07-47027.
†Department of Computer Science, University of Illinois, Urbana-Champaign. {hmaji2,mmp}@uiuc.edu.
‡Department of Computer Science, University of Montana. mikero@cs.umt.edu.
1Even if a group exists, the group manager could identify Alice as the informant.
one or more attribute authorities, and a user’s capabilities in the system (e.g., sending or receiving
messages, access to a resource) depend on their attributes. While oﬀering several advantages,
attribute-based systems also present fundamental cryptographic challenges. For instance, suppose
Alice wants to simply send a message to the above group of people using an “attribute-based
messaging” system; then to provide end-to-end secure communication, it must be possible for her to
encrypt a message using attribute-keys (rather than individual users’ keys). Recently cryptographic
tools have emerged to tackle some of these challenges for encryption [33, 20, 4, 37]. In this work, we
provide a solution for authentication, which among other things, will let Alice in the above example
leak the ﬁnancial records anonymously, but with the appropriate claim regarding her credentials.
Why attribute-based signatures?
The kind of authentication required in an attribute-based system diﬀers from that oﬀered by
digital signatures, in much the same way public-key encryption does not ﬁt the bill for attribute-
based encryption. An attribute-based solution requires a richer semantics, including anonymity
requirements, similar to signature variants like group signatures [17], ring signatures [30], and
mesh signatures [11]. The common theme in all these signature primitives is that they provide
a guarantees of unforgeability and signer anonymity. A valid signature can only be generated in
particular ways, but the signature does not reveal any further information about which of those
ways was actually used to generate it.
More speciﬁcally, group and ring signatures reveal only the fact that a message was endorsed
by one of a list of possible signers.
In a ring signature, the list is public, chosen by the signer
ad hoc, and given explicitly. In a group signature, the group must be prepared in advance by a
group manager, who can revoke the anonymity of any signer. In mesh signatures, a valid signature
describes an access structure and a list of pairs (mi, vki), where each vki is the veriﬁcation key of a
standard signature scheme. A valid mesh signature can only be generated by someone in posession
of enough standard signatures σi, each valid under vki, to satisfy the given access structure.
In this work we introduce attribute-based signatures (ABS). Signatures in an ABS scheme
describe a message and a predicate over the universe of attributes. A valid ABS signature attests
to the fact that “a single user, whose attributes satisfy the predicate, endorsed the message.”
We emphasize the word “single” in this informal security guarantee; ABS signatures, as in most
attribute-based systems, require that colluding parties not be able to pool their attributes together.2
Furthermore, attribute signatures do not reveal more than the claim being made regarding the
attributes, even in the presence of other signatures.
Ring and group signatures are then comparable to special cases of ABS, in which the only
allowed predicates are disjunctions over the universe of attributes (identities). Only one attribute
is required to satisfy a disjunctive predicate, so in these cases collusion is not a concern. As in
ring signatures, ABS signatures use ad hoc predicates. Mesh signatures allow more ﬁne-grained
predicates, but do not provide hiding of signature data that would be needed in an ABS scheme. A
straight-forward application of mesh signatures as an ABS scheme would either allow collusion (as
in the previous example, a New York programmer colluding with a Smalltown auditor to satisfy
the “New York auditor” predicate) or allow signatures to be associated with a pseudonym of the
signer (thus linking several signatures as originating from the same signer).
2Note that for attribute-based encryption, if collusion is allowed there are fairly easy solutions; but for ABS, even
after allowing collusion (for instance by considering all users to have the same identity while generating keys), the
residual primitive is essentially a mesh signature, which is already a non-trivial cryptographic problem.
2
Applications
Attribute-based signatures have natural applications in many systems where users’ capabilities
depend on possibly complex combinations of attributes. ABS is a natural choice for simple
authentication in such systems. One of our motivations for developing such schemes comes from
the authentication requirements in an Attribute-Based Messaging (ABM) system. In addition to
the “leaking secrets” application described above, in Section 6 we also identify applications in trust
negotiation systems.
Overview of Our Results
the presence of collusion) and privacy for the signer.
We introduce the concept of Attribute-Based Signatures (ABS) as a powerful primitive with several
applications and several eﬃcient instantiations. Our main technical contributions in this work are
the following:
• A formal security deﬁnition for ABS, that includes the guarantees of unforgeability (even in
• A general framework for constructing ABS schemes. Our framework consists of a “credential
bundle” representing the attributes associated with a single user and a non-interactive proof of
credential ownership that can be bound to a message. The credential bundle must have the
property that multiple users should not be able to collude and combine their credentials. The
proof system must have some zero-knowledge-like guarantee so that the signature does not leak
information about the signer’s identity or attributes.
We instantiate this framework using Boneh-Boyen [8] or Waters [36] signatures as the credential
bundle, and Groth-Sahai NIZK proofs [22] as the eﬃcient non-interactive proof system. These
instantiations provide practical ABS schemes secure under standard assumptions in bilinear groups.
• We present a practical ABS scheme suitable for high throughput systems. This construction
deviates from our framework of credential bundles and proof of credential ownership. In this scheme
we do employ a credential bundle scheme (same as the one in the last item above), but use a novel
randomization technique to blind the actual attributes. This gives the best eﬃciency among our
schemes. Further, this scheme remains secure even against a corrupt attribute-authority. However,
the security of this scheme is proven in the heuristic generic-group model (augmented to handle
groups with bilinear pairings).
• One of the most striking features of our construction is that it is very easily amenable to
natural multi-authority settings. We describe practical considerations related to such a deployment.
• In Appendix E we show how our techniques of incorporating digital signatures and non-
interactive proofs can be used to add simulation-extractability to the Groth-Sahai proof system,
several orders of magnitude more eﬃciently than the only other comparable scheme, constucted by
Groth in [21].
Which among the above schemes will suit an application will depend on the speciﬁc eﬃciency
and security requirements in the system. In all these schemes, the privacy is unconditional, and it
is only the unforgeability that depends on computational assumptions. Within a large enterprise
setting (with pre-authenticated users) where the threat of forgery may be limited but the volume of
signatures may be large, the ﬁnal scheme may be the most suited. In more susceptible systems with
a high security requirement, one of the schemes based on the Groth-Sahai proof systems maybe
more suitable (at the expense of eﬃciency). The choice also depends on whether the application
demands high-volume real-time performance (as in a messaging system) or involves only oﬄine
signing and veriﬁcation (as in leaking a secret).
3
All of our instantiations depend on expressing the attribute predicate as a monotone-span
program, which is the state of the art for attribute-based cryptography [20, 4, 37]. We remark that
unlike in many constructions of attribute-based encryption schemes, we achieve “full security” in
all our constructions. That is, we do not weaken the deﬁnition in the manner of “selective-ID”
security. Nor do we need to limit our construction to a small universe of attributes. In all our
instantiations, attributes can be arbitrary strings: given a collision-resistant hash function, an a
priori unbounded attribute universe can be used.
Further Related Work
Groups with bilinear pairings have been used to construct identity-based (e.g., [10]) and attribute-
based encryption schemes [33, 20, 4]. Non-interactive zero-knowledge proofs (including identity-
based proofs) have previously been used in the context of eﬃcient constructions of signature
primitives [2, 24, 12, 21].
Khader [26, 25] proposes a notion called attribute-based group signatures. This primitive hides
only the identity of the signer, but reveals which attributes the signer used to satisfy the predicate.
It also allows a group manager to identify the signer of any signature (which is similar to the
semantics of group signatures [17]); in contrast we require signer privacy to hold against everyone,
including all authorities.
Subsequent to a preliminary (unpublished) version of this work, Li and Kim [28] gave an
ABS scheme that supports predicates which are solely conjunctions of attributes (hence privacy
is required only for the identity of the signer and not for the attributes used in satisfying the
predicate), and is restricted to a “selective” unforgeability deﬁnition. Guo and Zeng [23] construct
an attribute-based signature scheme, although their deﬁnition of security did not include any privacy
for the signer. Shahandashti and Safavi-Naini [34] and Li et al. [27] construct eﬃcient ABS schemes
that support predicates consisting of a single threshold gate.
Binding a non-interactive proof to a message, as we do, is also a feature of identity-based
proofs [24], in which every proof is bound to some identity, and proofs under one identity cannot
be used to forge any proofs under a diﬀerent identity.
Indeed, such ID-based proofs have been
used to construct signature-like primitives; however the construction from [24] does not have all
the properties we need.
Anonymous credentials [16] is one primitive that has some parallels with ABS, but with goals
that diﬀer from ABS in several important ways. ABS could be considered as providing some of the
functionality of AC as a very special case, but with a weaker anonymity guarantee. Conversely,
some of the techniques used to construct eﬃcient AC systems bear some resemblance to some of
our eﬃcient ABS constructions. In Appendix B we discuss these similarities and diﬀerences in more
detail.
Another related primitive (but much simpler than ABS) is identity-based signatures (IBS) [35].
It is well-known that a simple scheme using traditional certiﬁcates realizes IBS, but dedicated
schemes aimed at achieving better eﬃciency have been widely studied. We refer the reader to a
comprehensive survey by Bellare et al. [3] for details.
Supporting multiple attribute-authorities is crucial to many attribute-based systems. Previ-
ously, there has been much interest on this aspect for attribute-based encryption schemes; see
Chase et al. [14, 15]. The constructions in this paper readily generalize to the multi-authority
setting.
4
2 Preliminaries
2.1 Groups with Bilinear Pairings
Let G, H, GT be cyclic (multiplicative) groups of order p, where p is a prime. Let g be a generator
of G, and h be a generator of H. Then e : G × H → GT is a bilinear pairing if e(g, h) is a generator
of GT , and e(ga, hb) = e(g, h)ab for all a, b. We review several standard cryptographic assumptions
in such groups:
Deﬁnition 1 (q-SDH assumption [8]). Let G, H, and GT be as above. The q-Strong Diﬃe-Hellman
(q-SDH) assumption holds in (G, H) if, given the elements (g, gx, gx2, . . . , gxq , h, hx) ∈ Gq+1 × H2,
for random choice of x ← Zp and random generators g ∈ G, h ∈ H, it is computationally infeasible
to compute any pair of the form(cid:0)c, g
x+c(cid:1) ∈ Zp × G.
1
Deﬁnition 2 (SXDH assumption [22]). Let G, H, and GT be as above. The Symmetric External
Diﬃe-Hellman (SXDH) assumption holds in (G, H) if the standard Decisional Diﬃe-Hellman
(DDH) assumption holds simultaneously in G and H.
Deﬁnition 3 (DLIN assumption [9]). Let G, H, and GT be as above, but with G = H. The
Decision-Linear (DLIN) assumption holds in G if, given the elements (gx, gy, grx, gsy, gt) ∈ G5, for
a random choice of x, y, r, s ← Zp, it is computationally infeasible to determine whether t = r + s
or t is random in Zp.
2.2 Monotone Span Programs
Let Υ : {0, 1}n → {0, 1} be a monotone boolean function. A monotone span program for Υ over
a ﬁeld F is an (cid:96) × t matrix M with entries in F, along with a labeling function a : [(cid:96)] → [n] that
associates each row of M with an input variable of Υ, that, for every (x1, . . . , xn) ∈ {0, 1}n, satisﬁes
the following:
Υ(x1, . . . , xn) = 1 ⇐⇒ ∃ (cid:126)v ∈ F1×(cid:96) :(cid:126)vM = [1, 0, 0, . . . , 0]
and (∀i : xa(i) = 0 ⇒ vi = 0)
In other words, Υ(x1, . . . , xn) = 1 if and only if the rows of M indexed by {i | xa(i) = 1} span the
vector [1, 0, 0, . . . , 0].
We call (cid:96) the length and t the width of the span program, and (cid:96) + t the size of the span program.
Every monotone boolean function can be represented by some monotone span program, and a large
In particular, given a circuit expressed using
class do have compact monotone span programs.
(cid:1) threshold gate, it is easy to recursively construct a
threshold gates, with the i-th gate being an(cid:0)(cid:96)i
monotone span program with length(cid:80)
i((cid:96)i − 1) + 1 and width(cid:80)
ti
i(ti − 1) + 1.
2.3 Non-Interactive Proofs
We refer the reader to [22] for detailed deﬁnitions of non-interactive witness-indistinguishable
(NIWI) proofs, but give a brief overview of the necessary deﬁnitions here. A NIWI scheme is
comprised of the following main algorithms:
• NIWI.Setup: Outputs a reference string crs.