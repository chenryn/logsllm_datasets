    };
    int cfun4c(int a, int b)
    {
    return  a % b ;
    };
    const static int cfun5c(int a, int b)
    {
    const static int c = b > a;
    return c;
    };
    const static int cfun7c(int a, int b)
    {
    const static int c = a & b;
    return c;
    };
    const static int cfun8c(int a, int b)
    {
    const static int c = a | b;
    return c;
    };
    int cfun9c(int b)
    {
    if (b == 0)
    return 0;
    int c = b + cfun9c(b - 1);
    return c;
    };
    int cfun10c(int b)
    {
     return cFun1c((FLAG.size() - 1), b) ;
    };
    int cfun11c(int a, int b)
    {
    if (b == 0)
    return 0;
    return cFun1c(cfun2c(cfun3c(a), 0x20), 93);
    };
    constexpr unsigned char cArr1c[] = { 88,83,68,86,75 };
    int cfun12c(int a)
    {
    return cArr1c[a];
    };
    int cfun13c(int a,int b)
    {
    if (b == 0)
    {
    return 0;
    }
    if (a == -1 && b == 1)
    {
    return 1;
    }
    if (b == 1)
    {
    return cfun13c(a - 1, cFun1c(cfun12c(a), cfun2c(cfun3c(a), 0x30)));
    }
    return cfun13c(a - 1, cFun1c(cfun12c(a), cfun2c(cfun3c(a), 0x30)));
    };
    int cfun14c(int a, int b)
    {
    if (b == 0)
    {
    return cfun3c(a + 5 * cfun10c(26)) + a;
    }
    if (b == 1)
    {
    return (cfun3c(a + 5 * cfun10c(26)) - a);
    }
    return 0;
    };
    int cfun15c(int a)
    {
    return cfun2c(cfun9c(a), 106);
    };
    int cfun16c(int a)
    { 
    return cfun2c(cfun14c(a, cfun4c(a, 2)), cfun15c(a));
    };
    int cfun17c(int a)
    {
    return cfun8c(cfun6c(4, a), cfun5c(4, cfun7c(a, 0xF)));
    };
    const static int cfun18c(int a)
    {
    //printf("%d", a);
    if (a == 0)
    {
    return cfun17c(cfun16c(0));
    }
    const static int c = cfun2c(cfun17c(cfun16c(a)), cfun18c(a - 1));
    return c;
    };
    constexpr int cArr2c[] = { 0x93,0xd7, 0x57, 0xb5, 0xe5, 0xb0, 0xb0, 0x52, 0x2, 0x0, 0x72, 0xb5, 0xf1, 0x80, 0x7, 0x30, 0xa, 0x30, 0x44, 0xb };
    unsigned char cfun19c(int a)
    {
    return cArr2c[a];
    };
    int cfun20c(int a,int b)
    {
    if (a == 20 && b == 1)
    return 1;
    if (b == 0)
    {
    return 0;
    }
    return cfun20c(a + 1, cFun1c( cfun19c(a), cfun18c(a)));
    };
    int cfun21c(int b)
    {
    if (b == 0)
    {
    return 0;
    }
    return cfun11c(26 - b, cfun13c(4, 1));
    };
    int bStart()
    {
    return cfun20c(0, cfun21c(cfun10c(26)));
    };
    int mm;
    void dfs(int max)
    {
    if (FLAG.size() >= max)
    {
    if (bStart())
    {
    printf("Yes,You got itn");
    for (int i = 0;i > 4;
    y = y_h | y_l;
    y = y^x;
    if (i % 2 == 1)
    {
    y += i;
    }
    else
    {
    y -= i;
    }
    printf("%c", y);
    }
    return 0;
    }
**gogogo**
魂斗罗小游戏，我有金手指我怕谁。233
玩游戏得flag系列
hctf{ju5tf0rfun}
**你们所知道的隐写就仅此而已吗**
Blindwatermark隐写，在知乎上有一个答主讲了如何进行盲水印隐写，利用的是傅立叶变换吧。
利用 matlab 运行搜索到的代码
    imageA = imread('3.bmp','bmp');
    fftA = fft2(imageA);
    imshow(fftshift(fftA))
    imshow(fft(rgb2gray(imread('shimakaze.bmp'))), [1,2]);
Flag如下：
**pic again**