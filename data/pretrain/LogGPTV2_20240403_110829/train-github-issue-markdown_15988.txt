I've tried to create a simple example that utilizes workers to send and
receive messages, but the main "thread" for lack of a better word fails to
receive any kind of message from my worker.
According to `deno -V` I'm using `deno 1.5.3`
Below are my test files, run them with `deno run --unstable --allow-read
test.ts`
test.ts (click to expand)
    const worker = new Worker(new URL('testworker.ts', import.meta.url).href, { type: 'module', deno: true });
    worker.onmessage = (e) => {
        //This is never executed
        console.log('Stuff in worker done:', e.data);
    };
    worker.postMessage('test');
testworker.ts (click to expand)
    import Random from 'https://deno.land/x/random@v1.1.2/Random.js';
    async function doStuff(data: any) {
        console.log('Doing stuff:', data);
        const r = new Random();
        const randInt = r.int(200, 2000);
        await new Promise((res, _) => setTimeout(() => res(randInt), 1000));
    }
    //deno-lint-ignore ban-ts-comment
    //@ts-ignore
    onmessage = async (e) => {
        try {
            //deno-lint-ignore ban-ts-comment
            //@ts-ignore
            postMessage(await doStuff(e.data))
            console.log('Stuff done:', e.data);
        } catch (e) {
            console.error('Stuff error', e);
        }
    }
The output shows the following:
Output (click to expand)
    Doing stuff: test
    Stuff done: test
As you can see, the line `Stuff in worker done:` is never logged to the
console. Unless I'm doing something wrong that's just not how it's supposed to
work as far as I'm aware.