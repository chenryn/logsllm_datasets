### FlexiSPY Data Collection and Power Consumption

FlexiSPY can collect user events, such as call logs, and periodically transmit this information via a GPRS connection at a pre-configured time interval. The power consumption associated with this data transfer is significant and depends on the time interval and the characteristics of user operations, such as the number of text messages sent during each interval.

In our detection experiments, we set the interval from 30 minutes to 6 hours, with increments of 30 minutes. Under each setting, we continuously sent and received text messages of varying sizes, ranging from 10 bytes to 1,000 bytes. Table 3 shows the detection results. All three approaches—linear regression, neural network, and decision tree—achieved detection rates above 88%. The long-term detection using linear regression and neural networks achieved a detection rate of up to 98.6%.

Our analysis indicates that FlexiSPY consumes additional power beyond just communication. Even when the interval is large and data transfer is infrequent, FlexiSPY still needs to monitor and save information related to user activities, which consumes battery power. This explains the high detection rates even in short-term experiments. Surprisingly, the decision tree did not achieve comparable results for middle-term and long-term detection. We believe this is due to the limited number of malware samples available for training the decision tree model.

### Experiments on Detecting Cabir

Cabir, a cellphone worm that spreads via Bluetooth, searches for nearby Bluetooth devices and transfers a SIS file to them once found. The power consumption of Cabir primarily comes from two parts: neighbor discovery and file transferring. Since Bluetooth typically does not consume significant battery power, we conducted our experiments in an environment with many Bluetooth devices, where Cabir continuously discovers new devices and thus consumes a non-trivial amount of power. To control the frequency of file transfers, we repeatedly turned off Bluetooth on these devices for random periods after each transfer and then turned it back on.

Table 4 shows the detection results. For linear regression, the middle-term and long-term detection significantly improved the detection rate. The table also indicates that although Bluetooth discovery and file transferring only consume a limited amount of battery power, they can be detected with a reasonably high rate by VirusMeter in real-time.

### Experiments on Detecting Multiple Malware Infections

Previous detection experiments involved only one malware program running on the cellphone. It is possible for a mobile device to be infected by multiple malware programs, each performing different attacks simultaneously. To test this, we activated both FlexiSPY and Cabir on our experimental cellphone and randomly conducted various attack combinations.

Table 5 shows the detection rates. Both linear regression and neural networks maintained reasonably high true positive rates. However, the decision tree resulted in a much higher false negative rate compared to single malware infection experiments. This can be explained by the underlying principles of these approaches: linear regression and neural networks predict the power consumption of normal user operations rather than specific malware activities, which is the objective of the decision tree. Our decision tree model was not trained with a mixture of malware samples, leading to poor performance when multiple malware programs are active.

### False Positive Experiments

In addition to detection rates, we conducted experiments to evaluate false positives. By feeding power models with a clean dataset, we calculated the false positive rate. We collected over 100 clean data samples for these experiments.

Table 6 shows the false positive rates. Linear regression in short-term detection had the highest false positive rate due to the inaccuracy of its underlying assumptions. However, both middle-term and long-term experiments significantly reduced the false positive rates. Neural networks, with a more accurate power model, achieved the best results among the three approaches for all three terms.

### VirusMeter Overhead Measurement

VirusMeter targets commodity devices, so its power consumption overhead is a concern. We conducted experiments to measure this overhead by comparing the operating durations with and without VirusMeter running on the cellphone. Figure 7 shows our experimental results. The average duration with VirusMeter off was 109.5 minutes, while with VirusMeter on, it was 108 minutes. This indicates that the VirusMeter running overhead is less than 1.5%. These results apply to the linear regression model; we did not evaluate the power consumption for the other two approaches, as they run in a battery-charging mode.

### Further Discussion

VirusMeter has the potential to detect any misbehavior with abnormal power consumption, provided the battery power metering is sufficiently accurate. However, the precision of battery power indicators varies significantly among different mobile operating systems, affecting VirusMeter's detection efficiency, particularly for real-time detection. On our experimental device, this changes the real-time detection mode to a near-real-time mode.

Since VirusMeter relies on user-centric power models, the accuracy of these models is crucial. Our experimental results show that linear regression, although consuming minimal additional power, may generate high false negative rates due to inaccurate underlying assumptions. In contrast, neural networks, which do not make such assumptions, often improve the detection rate remarkably. The decision tree model did not perform as effectively as neural networks, likely due to the limited number of malware samples used for training. We plan to collect more samples in the future to further evaluate this method.

For certain types of user operations, such as entertainment and web surfing, more fine-grained profiling can improve the accuracy of the power model. Additionally, VirusMeter can run in a battery-charging mode to enhance detection accuracy. However, malware may exploit this mode since there is no way for VirusMeter to accurately measure power consumption without external assistance. To counter this, VirusMeter would need external devices to measure power consumption and charging. Placing VirusMeter in the mobile OS could make it more resilient to attacks, but if the OS is compromised, VirusMeter will fail because the data it collects cannot be trusted.

### Conclusion

The battery power supply is often considered the Achilles' heel of mobile devices. Any activity, whether normal or malicious, consumes some battery power. VirusMeter exploits this to detect malware with abnormal power consumption. Using a lightweight, user-centric power model, VirusMeter aims to detect mobile malware in real-time and battery-charging modes. Our experiments with real-world malware, such as Cabir and FlexiSpy, demonstrate that VirusMeter can effectively and efficiently detect their presence.

### Acknowledgment

We thank the anonymous referees for their constructive comments. This work was supported in part by the U.S. AFOSR under grant FA9550-09-1-0071 and by the U.S. National Science Foundation under grants CNS-0509061, CNS-0621631, and CNS-0746649.

### References

1. http://www.wellingtonfund.com/blog/2007/02/19/gmp-3gsm-wrapup/
2. http://en.wikipedia.org/wiki/Smartphone
3. http://www.viruslibrary.com/
4. http://vx.netlux.org/29a/
5. http://www.flexispy.com/
6. http://www.panasonic.com/inustrial_oem/battery/battery_oem/chem/lith/lith.htm
7. http://en.wikipedia.org/wiki/Stepwise_regression
8. Commwarrior, http://www.f-secure.com/v-descs/commwarrior.shtml
9. Sports fans in Helsinki falling prey to Cabir, http://news.zdnet.com
10. Bose, A., Hu, X., Shin, K., Park, T.: Behavioral detection of malware on mobile handsets. In: Proceedings of Mobisys, Breckenridge, CO (June 2008)
11. Bose, A., Shin, K.: On mobile virus exploiting messaging and Bluetooth services. In: Proceedings of Securecomm (2006)
12. Bose, A., Shin, K.: Proactive security for mobile messaging networks. In: Proceedings of WiSe (2006)
13. Cheng, J., Wong, S., Yang, H., Lu, S.: Smartsiren: Virus detection and alert for smartphones. In: Proceedings of ACM MobiSys, San Juan, Puerto Rico (2007)
14. Chiasserini, C., Rao, R.: Pulsed battery discharge in communication devices. In: Proceedings of MobiComm, Seattle, WA (August 1999)
15. Dagon, D., Martin, T., Starner, T.: Mobile phones as computing devices: The viruses are coming! IEEE Pervasive Computing (2004)
16. Enck, W., Traynor, P., McDaniel, P., Porta, T.: Exploiting open functionality in SMS-capable cellular networks. In: Proceedings of CCS 2005 (November 2005)
17. Fleizach, C., Liljenstam, M., Johansson, P., Voelker, G., Mehes, A.: Can you infect me now? Malware propagation in mobile phone networks. In: Proceedings of WORMS, Alexandria, VA (November 2007)
18. Fuller, T., Doyle, M., Newman, J.: Simulation and optimization of the dual lithium ion insertion cell. Journal of Electrochem. Soc. 141 (April 1994)
19. Guo, C., Wang, H., Zhu, W.: Smart-phone attacks and defenses. In: Proceedings of HotNets III, San Diego, CA (November 2004)
20. Hu, G., Venugopal, D.: A malware signature extraction and detection method applied to mobile networks. In: Proceedings of IPCCC (April 2007)
21. Hypponen, M.: http://www.usenix.org/events/sec07/tech/hypponen.pdf
22. Kim, H., Smith, J., Shin, K.: Detecting energy-greedy anomalies and mobile malware variants. In: Proceedings of Mobisys, Breckenridge, CO (June 2008)
23. Mickens, J., Noble, B.: Modeling epidemic spreading in mobile networks. In: Proceedings of ACM WiSe (2005)
24. Mulliner, C., Vigna, G., Dagon, D., Lee, W.: Using labeling to prevent cross-service attacks against smart phones. In: B¨uschkes, R., Laskov, P. (eds.) DIMVA 2006. LNCS, vol. 4064, pp. 91–108. Springer, Heidelberg (2006)
25. Park, S., Savvides, A., Srivastava, M.: Battery capacity measurement and analysis using lithium coin cell battery. In: Proceedings of ISLPED (August 2001)
26. Racic, R., Ma, D., Chen, H.: Exploiting MMS vulnerabilities to stealthily exhaust mobile phone’s battery. In: Proceedings of SecureComm 2006 (August 2006)
27. Sarat, S., Terzis, A.: On the detection and origin identification of mobile worms. In: Proceedings of WORMS, Alexandria, VA (November 2007)
28. Simunic, T., Benini, L., Micheli, G.: Energy-efficient design of battery-powered embedded systems. In: Proceedings of ISLPED (August 1999)
29. Su, J., Chan, K., Miklas, A., Po, K., Akhavan, A., Saroiu, S., Lara, E., Goel, A.: A preliminary investigation of worm infections in a Bluetooth environment. In: Proceedings of WORM (2006)
30. Traynor, P., Enck, W., McDaniel, P., Porta, T.: Mitigating attacks on open functionality in SMS-capable cellular networks. In: Proceedings of Mobicom 2006 (2006)
31. Venugopal, D., Hu, G., Roman, N.: Intelligent virus detection on mobile devices. In: Proceedings of ACM PST, Markham, Ontario, Canada (October 2006)
32. Yan, G., Eidenbenz, S.: Modeling propagation dynamics of Bluetooth worms. In: Proceedings of ICDCS 2007 (2007)