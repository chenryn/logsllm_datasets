::: section
::: titlepage
# []{#getting-started-with-selinux_using-selinux.html#selinux-states-and-modes_getting-started-with-selinux}SELinux 状态和模式 {.title}
:::
SELinux 可使用三种模式之一运行： enforcing（强制）、permissive（宽容）或
disabled（禁用）。
::: itemizedlist
-   Enforcing 模式是默认操作模式，在 enforcing 模式下 SELinux
    可正常运行，并在整个系统中强制实施载入的安全策略。
-   在 permissive 模式中，系统会象 enforcing
    模式一样加载安全策略，包括标记对象并在日志中记录访问拒绝条目，但它并不会拒绝任何操作。不建议在生产环境系统中使用
    permissive 模式，但 permissive 模式对 SELinux
    策略开发和调试很有帮助。
-   强烈建议不要使用禁用（disabled）模式。它不仅会使系统避免强制使用
    SELinux
    策略，还会避免为任何持久对象（如文件）添加标签，这使得在以后启用
    SELinux 非常困难。
:::
使用 `setenforce`{.literal} 实用程序在 enforcing 模式和 permissive
模式之间切换。使用 `setenforce`{.literal}
所做的更改在重新引导后不会保留。要更改为 enforcing 模式，请以 Linux root
用户身份输入 `setenforce 1`{.literal} 命令。要更改为 permissive
模式，请输入 `setenforce 0`{.literal} 命令。使用 `getenforce`{.literal}
实用程序查看当前的 SELinux 模式：
``` screen
# getenforce
Enforcing
```
``` screen
# setenforce 0
# getenforce
Permissive
```
``` screen
# setenforce 1
# getenforce
Enforcing
```
在 Red Hat Enterprise Linux 中，您可以在系统处于 enforcing
模式时，将独立的域设置为 permissive 模式。例如，使
[*httpd_t*]{.emphasis} 域为 permissive 模式：
``` screen
# semanage permissive -a httpd_t
```
请注意，permissive
域是一个强大的工具，它可能会破坏您系统的安全性。红帽建议谨慎使用
permissive 域，如仅在调试特定情境时使用。
:::
::: footnotes
\
------------------------------------------------------------------------
::: {#getting-started-with-selinux_using-selinux.html#ftn.idm139972209769232 .footnote}
[^\[1\]^](#getting-started-with-selinux_using-selinux.html#idm139972209769232){.simpara}
包括 DNS 服务器所使用的信息（如主机名到 IP 地址映射）的文本文件。
:::
:::
:::
[]{#changing-selinux-states-and-modes_using-selinux.html}
::: chapter
::: titlepage
# []{#changing-selinux-states-and-modes_using-selinux.html#changing-selinux-states-and-modes_using-selinux}第 2 章 更改 SELinux 状态和模式 {.title}
:::
启用后，SELinux 可使用两种模式之一运行： enforcing 或
permissive。以下小节介绍了如何永久更改这些模式。
::: section
::: titlepage
# []{#changing-selinux-states-and-modes_using-selinux.html#changing-selinux-modes_changing-selinux-states-and-modes}SELinux 状态和模式的更改 {.title}
:::
如 [SELinux
状态和模式](#getting-started-with-selinux_using-selinux.html#selinux-states-and-modes_getting-started-with-selinux "SELinux 状态和模式"){.link}
中所述，SELinux 可以被启用或禁用。启用后，SELinux 有两个模式： enforcing
和 permissive。
使用 `getenforce`{.literal} 或 `sestatus`{.literal} 命令检查 SELinux
的运行模式。`getenforce`{.literal} 命令返回
`Enforcing`{.literal}、`Permissive`{.literal} 或 `Disabled`{.literal}。
`sestatus`{.literal} 命令返回 SELinux 状态以及正在使用的 SELinux 策略：
``` screen
$ sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Memory protection checking:     actual (secure)
Max kernel policy version:      31
```
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
当系统以 permissive 模式运行 SELinux
时，用户和进程可能会错误地标记各种文件系统对象。当禁用 SELinux
时创建的文件系统对象不会被标记。这会在将 SELinux 改为 enforcing
模式时导致问题，因为 SELinux 依赖于正确的文件系统对象标签。
为防止错误标记和未标记的文件造成问题，SELinux 在从 disabled 状态更改为
permissive 或 enforcing 模式时自动重新标记文件系统。以 root 用户身份使用
`fixfiles -F onboot`{.literal} 命令创建包含 `-F`{.literal} 选项的
`/.autorelabel`{.literal} 文件，以确保在下次重启时重新标记文件。
在重新引导系统以进行重新标记之前，请确保系统将以 permissive
模式引导，例如使用 `enforcing=0`{.literal} 内核选项。在启动
`selinux-autorelabel`{.literal} 服务前，当系统包括 `systemd`{.literal}
需要的未被标记的文件时，系统无法引导。如需更多信息，请参阅
[RHBZ#2021835](https://bugzilla.redhat.com/show_bug.cgi?id=2021835){.link}。
:::
:::
::: section
::: titlepage
# []{#changing-selinux-states-and-modes_using-selinux.html#changing-to-permissive-mode_changing-selinux-states-and-modes}切换到 permissive 模式 {.title}
:::
使用以下步骤将 SELinux 模式永久改为 permissive。当 SELinux 是以
permissive 模式运行时，不会强制 SELinux
策略。系统可保持正常操作，SELinux 不会拒绝任何操作，而只是记录 AVC
信息，它们可用于故障排除、调试和 SELinux 策略改进。每个 AVC
在这个示例中仅记录一次。
::: itemizedlist
**先决条件**
-   `selinux-policy-targeted`{.literal}、`libselinux-utils`{.literal} 和
    `policycoreutils`{.literal} 软件包已安装在您的系统中。
-   未使用 `selinux=0`{.literal} 或 `enforcing=0`{.literal} 内核参数。
:::
::: orderedlist
**步骤**
1.  在您选择的文本编辑器中打开 `/etc/selinux/config`{.literal}
    文件，例如：
    ``` screen
    # vi /etc/selinux/config
    ```
2.  配置 `SELINUX=permissive`{.literal} 选项：
    ``` screen
    # This file controls the state of SELinux on the system.
    # SELINUX= can take one of these three values:
    #       enforcing - SELinux security policy is enforced.
    #       permissive - SELinux prints warnings instead of enforcing.
    #       disabled - No SELinux policy is loaded.
    SELINUX=permissive
    # SELINUXTYPE= can take one of these two values:
    #       targeted - Targeted processes are protected,
    #       mls - Multi Level Security protection.
    SELINUXTYPE=targeted
    ```
3.  重启系统：
    ``` screen
    # reboot
    ```
:::
::: orderedlist
**验证**
1.  系统重启后，确认 `getenforce`{.literal} 命令返回
    `Permissive`{.literal}：
    ``` screen
    $ getenforce
    Permissive
    ```
:::
:::
::: section
::: titlepage
# []{#changing-selinux-states-and-modes_using-selinux.html#changing-to-enforcing-mode_changing-selinux-states-and-modes}切换到 enforcing 模式 {.title}
:::
使用以下步骤将 SELinux 切换到 enforcing 模式。当 SELinux 处于 enforcing
模式时，它会强制 SELinux 策略并根据 SELinux 策略规则拒绝访问。在 RHEL
中，当系统最初使用 SELinux 安装时，默认启用 enforcing 模式。
::: itemizedlist
**先决条件**
-   `selinux-policy-targeted`{.literal}、`libselinux-utils`{.literal} 和
    `policycoreutils`{.literal} 软件包已安装在您的系统中。
-   未使用 `selinux=0`{.literal} 或 `enforcing=0`{.literal} 内核参数。
:::
::: orderedlist
**步骤**
1.  在您选择的文本编辑器中打开 `/etc/selinux/config`{.literal}
    文件，例如：
    ``` screen
    # vi /etc/selinux/config
    ```
2.  配置 `SELINUX=enforcing`{.literal} 选项：
    ``` screen
    # This file controls the state of SELinux on the system.
    # SELINUX= can take one of these three values:
    #       enforcing - SELinux security policy is enforced.
    #       permissive - SELinux prints warnings instead of enforcing.
    #       disabled - No SELinux policy is loaded.
    SELINUX=enforcing
    # SELINUXTYPE= can take one of these two values:
    #       targeted - Targeted processes are protected,
    #       mls - Multi Level Security protection.
    SELINUXTYPE=targeted
    ```
3.  保存更改，重启系统：
    ``` screen
    # reboot
    ```
    在下一次引导中，SELinux 会重新标记系统中的所有文件和目录，并为禁用
    SELinux 时创建的文件和目录添加 SELinux 上下文。
:::
::: orderedlist
**验证**
1.  系统重启后，确认 `getenforce`{.literal} 命令返回
    `Enforcing`{.literal}:
    ``` screen
    $ getenforce
    Enforcing
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
切换到 enforcing 模式后，SELinux 可能会因为不正确或缺少 SELinux
策略规则而拒绝某些操作。要查看 SELinux 拒绝的操作，以 root
用户身份输入以下命令：
``` screen
# ausearch -m AVC,USER_AVC,SELINUX_ERR,USER_SELINUX_ERR -ts today
```
另外，如果安装了 `setroubleshoot-server`{.literal} 软件包，请输入：
``` screen
# grep "SELinux is preventing" /var/log/messages
```
如果 SELinux 是活跃的，且 Audit
守护进程(`auditd`{.literal})没有在您的系统中运行，在 `dmesg`{.literal}
命令输出中搜索特定的 SELinux 信息：
``` screen
# dmesg | grep -i -e type=1300 -e type=1400
```
如需更多信息，请参阅 [SELinux
故障排除](#troubleshooting-problems-related-to-selinux_using-selinux.html "第 5 章 故障排除与 SELinux 相关的问题"){.link}。
:::
:::
::: section
::: titlepage
# []{#changing-selinux-states-and-modes_using-selinux.html#enabling-selinux-on-systems-that-previously-had-it-disabled_changing-selinux-states-and-modes}在之前禁用的系统中启用 SELinux {.title}
:::
[]{#changing-selinux-states-and-modes_using-selinux.html#enabling-selinux_changing-selinux-states-and-modes}
为了避免问题，比如系统无法引导或进程失败，请在之前禁用它的系统中启用
SELinux 时按照以下步骤操作。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
当系统以 permissive 模式运行 SELinux
时，用户和进程可能会错误地标记各种文件系统对象。当禁用 SELinux
时创建的文件系统对象不会被标记。这会在将 SELinux 改为 enforcing
模式时导致问题，因为 SELinux 依赖于正确的文件系统对象标签。
为防止错误标记和未标记的文件造成问题，SELinux 在从 disabled 状态更改为
permissive 或 enforcing 模式时自动重新标记文件系统。
在重新引导系统以进行重新标记之前，请确保系统将以 permissive
模式引导，例如使用 `enforcing=0`{.literal} 内核选项。在启动
`selinux-autorelabel`{.literal} 服务前，当系统包括 `systemd`{.literal}
需要的未被标记的文件时，系统无法引导。如需更多信息，请参阅
[RHBZ#2021835](https://bugzilla.redhat.com/show_bug.cgi?id=2021835){.link}。