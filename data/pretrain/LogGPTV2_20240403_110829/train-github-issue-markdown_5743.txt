### Issue Details

**Apache Airflow Version:** Not provided  
**Ticket Created:** 21/Nov/16 18:35  
**Kubernetes Version (if applicable):** Not provided (use `kubectl version` to get the version)  

#### Environment
- **Cloud Provider or Hardware Configuration:** Not provided
- **Operating System:** Not provided (e.g., from `/etc/os-release`)
- **Kernel Version:** Not provided (e.g., `uname -a`)
- **Installation Tools:** Not provided
- **Other Relevant Information:** Not provided

### Description

We are planning to run approximately 40,000 tasks per day using Apache Airflow. Some of these tasks are critical and require quick feedback for developers.

Currently, using the execution date to uniquely identify tasks is not sufficient for our use case. This is because we primarily trigger DAGs manually rather than running them on a schedule, which leads to collisions due to the 1-second granularity in task scheduling. 

To address this issue, we propose the following:
1. Introduce a unique task UUID.
2. Associate the `dag_run` with the `task_instance` table.
3. Use this association for scheduling and updating the status of tasks.

### Expected Behavior

- Tasks should be uniquely identifiable even when triggered manually within the same second.
- The system should be able to handle the high volume of tasks without collisions.

### Steps to Reproduce

1. Set up an Apache Airflow environment.
2. Configure a DAG to be triggered manually.
3. Trigger multiple instances of the DAG within the same second.
4. Observe the collision in task scheduling due to the 1-second granularity.

### Additional Information

- This issue was moved from: [AIRFLOW-642](https://issues.apache.org/jira/browse/AIRFLOW-642)

Please provide any additional details that might help in addressing this issue.