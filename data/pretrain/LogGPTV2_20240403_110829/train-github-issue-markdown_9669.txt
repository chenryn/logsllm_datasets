The issue appears to stem from the unexpected behavior of `lax.eq(np.inf, np.nan)` returning `True`. I am currently using a recent commit from the master branch (7328689).

Here is the code and the output that demonstrates the problem:

```python
import jax.numpy as np
from jax.numpy.lax_numpy import isinf
from jax import lax

# Create an array with a NaN value
nan_array = np.array([np.nan])
print(nan_array)
# Output: array([nan], dtype=float32)

# Check if the array contains NaN values (should return True)
print(np.isnan(nan_array))
# Output: array([False])

# Check if the array contains infinite values (should return False)
print(np.isinf(nan_array))
# Output: array([True])

# Check if NaN is equal to infinity (should return False)
print(lax.eq(np.nan, np.inf))
# Output: array(True)
```

### Explanation:
- The `np.isnan(nan_array)` function should return `True` for the array containing `NaN`, but it returns `False`.
- The `np.isinf(nan_array)` function should return `False` for the array containing `NaN`, but it returns `True`.
- The `lax.eq(np.nan, np.inf)` function should return `False` because `NaN` is not equal to `inf`, but it returns `True`.

This suggests a potential bug in the current implementation. Further investigation or a bug report may be necessary to address this issue.