(b) Client Port Proﬁle
(c) Client IP Proﬁle
Fig. 2. Session proﬁle for a single client in the Zoom test session
Figure 2 shows the session proﬁle for the Zoom test session from Fig. 1.
Figure 2(a) shows the connection proﬁle, which illustrates the TCP and UDP
connections used during a Zoom session. The vertical axis shows a monotonically
increasing ID number for each connection (TCP, UDP, or ICMP) in the order of
their creation, and the horizontal axis shows the elapsed time duration for each
connection. A normal Zoom session has four horizontal lines for each participant,
representing one TCP connection and three UDP connections launched almost
simultaneously, and with very similar durations. An exception is when switching
between P2P mode (with a single UDP connection) and Zoom server mode, since
three new UDP connections are created then, while the TCP connection remains
the same. Figure 2(b) is a port proﬁle, which shows the port numbers used by each
client connection, which sometimes reveals OS-speciﬁc behaviours. Notably, the
UDP port numbers here are consecutive (suggestive of Microsoft Windows), and
the P2P session occurred on a distinctly diﬀerent port than the others. Because
of the vertical scale of the graph, some of the concurrent UDP connections blend
together, though they are separate connections as seen in Fig. 2(a). Figure 2(c)
Zoom Session Quality: A Network-Level View
561
shows the IP proﬁle, which stitches together disrupted connections (if any), and
groups them based on the client’s IP address. We vertically oﬀset TCP from
UDP so that they do not obfuscate each other, and bundle the UDP connections
together to reduce visual clutter (e.g., this helps a lot when many clients are
being shown).
4.3 Anomalous Zoom Sessions
The session proﬁle plot provides a useful visualization tool for assessing Zoom
session quality, and identifying anomalous Zoom sessions.
Figure 3 shows the session proﬁle from a Zoom meeting that had very poor
quality (i.e., two Zoom restarts, and two additional audio outages for the user).
Figure 3(a) shows that this particular session had numerous disruptions to the
TCP control channel, which had trouble reconnecting, and ﬁnally stabilized7
after about 10 min. There were about 40 TCP connection attempts, though
only four Zoom impairments were perceptible at the user level. The two Zoom
restarts resulted in new UDP connections for all three channels (labelled ‘AVD’ in
Fig. 3(c)). There were also two other disruptions to the audio channel (labeled
‘A’), which resulted in the creation of a new UDP connection. The dynamic
port selection for the disrupted audio channel is evident in Fig. 3(b), while that
for the TCP control channel is less evident, since these port numbers are often
contiguous. Figure 3(c) shows the IP proﬁle for this session. The overall structure
of the Zoom session is clearer on this plot. In particular, the TCP channel had
many disruptions, which aﬀected the control channel and Zoom connectivity.
The UDP channels had fewer disruptions, but still degraded session quality.
Surprisingly, even small Zoom meetings in P2P mode can experience disrup-
tions. As an example, the second row of Fig. 3 shows the session proﬁle for a
two-person meeting, with one on campus, and the other at home. The on-campus
laptop for which we have a Wireshark trace has TCP (red) and UDP (orange)
connections that start near time 50 on the graph. The UDP connection was
normal, but the TCP connection was disrupted repeatedly for over half an hour.
Analysis of the Wireshark trace and the campus-level data shows numerous con-
nection resets, often in alternating fashion with another campus host (green for
TCP) that was trying to set up a diﬀerent meeting with the same Zoom server.
The graph also shows a third host (blue for TCP, and magenta for UDP) that
had started another meeting with the same Zoom server about an hour earlier.
Its session was ﬁne until near the end, when the other sessions started.
Figure 3 leads to several insights. First, it is quite common for multiple
meetings on our campus network to share the same Zoom server at the same
time. This behaviour diﬀers from that reported in prior work, where every new
meeting used a diﬀerent Zoom server [3]. We attribute this diﬀerence to the
large number of Zoom meetings on campus, and the limited set of Zoom servers
available in our region. Second, things can go wrong when too many Zoom
7 The client contacted a Zone Controller (ZC), and then switched the TCP control
channel (but not the UDP channels) to a diﬀerent Zoom MMR server.
562
A. Choi et al.
meetings concurrently use the same busy Zoom server. Our Wireshark traces
show lots of TCP duplicate ACKs, spurious retransmissions, and the Zoom server
sending an “Encrypted Alert” to terminate the TLS session with the client, which
then has trouble reconnecting to the server. Third, the network-level eﬀects are
most evident on TCP connections. Detailed analysis shows a mix of unsuccessful
connection attempts, resets by the server, and resets by the client. Several exhibit
sluggish Server Hello messages in the TLS handshake (e.g., taking 2–8 s instead
of 25–30 ms), causing the client to timeout and reset the connection.
(a) Zoom 1: Connections
(b) Zoom 1: Client Ports
(c) Zoom 1: Client IPs
(d) Zoom 2: Connections
(e) Zoom 2: Client Ports
(f) Zoom 2: Client IPs
Fig. 3. Session proﬁle examples for two anomalous Zoom meetings (Color ﬁgure online)
5 Large-Scale Measurements
Our next set of measurements focus on larger examples of Zoom sessions
extracted from our campus network traﬃc logs. For these sessions, we have
no packet-level Wireshark traces, since we do not have permission to collect
such traces during live classes or meetings. Nonetheless, we use the empirically-
observed traﬃc data from connection logs to infer information about the Zoom
sessions.
5.1 Zoom Usage Patterns
Figure 4(a) shows a time series plot of the aggregate Zoom traﬃc observed on our
campus network for a representative day (Wed Sept 22, 2021) from our Fall 2021
semester. The lines on the graph represent the total number of concurrent UDP
8801 connections (purple) to Zoom MMR servers, as well as the corresponding
Zoom Session Quality: A Network-Level View
563
number of Zoom sessions (green) and Zoom meetings (blue) determined using our
traﬃc analysis tools. On this day, the peak load reached about 3,500 concurrent
UDP connections, representing about 1,100 Zoom sessions (i.e., users) in about
250 diﬀerent concurrent Zoom meetings. There were a total of 3,679 diﬀerent
Zoom meetings on this day. Each meeting had about 4 on-campus users, on
average, and each user session had about 3 UDP connections.
Figure 4(a) shows that Zoom usage exhibits a diurnal pattern that corre-
sponds to when people are on campus. The busy period starts in the morning
with usage peaking mid-day8 and declining towards the evening. Class sched-
ules are also evident in the overall Zoom traﬃc, with classes starting every hour
between 8:00 am and 5:00 pm on this speciﬁc day.
(a) Zoom Traﬃc Patterns
(b) Zoom Server Usage
Fig. 4. Aggregate Zoom traﬃc characteristics: demand vs. supply (Color ﬁgure online)
Figure 4(a) also illustrates the growth in Zoom traﬃc on our campus network
between Fall 2021 and the corresponding day (Wed Sept 23, 2020) from the Fall
2020 semester, when only 20% of courses were oﬀered in person. We use the count
of concurrent UDP 8801 connections for this comparison (i.e., purple line versus
thin magenta line). The results show that Zoom traﬃc has increased 4x from
Fall 2020 to Fall 2021; in fact, it now exceeds 1 TB per day [6]. This growth in
demand is substantial, and reﬂects the impacts of mixed modalities for learning,
with 30–50% of students back on campus.
Figure 4(b) takes a diﬀerent perspective, by looking at the supply of Zoom
servers. This graph is an IP frequency-rank plot (on a log-log scale), showing
the relative frequency with which diﬀerent Zoom MMR server IPs are used for
meetings. The data is from a one-week period in September 2021, during which
8 The dip at 12 noon is an artifact of our campus network monitor, which is restarted
every 6 h to avoid possible crashes during high-volume scans [6]. This restart unfor-
tunately loses information about connections in progress at 6:00 am, noon, 6:00 pm,
and midnight. This artifact is most evident at 12 noon, when load is higher.
564
A. Choi et al.
there were 17,120 Zoom meetings, involving a total of 1,374 Zoom MMR servers.
However, Fig. 4(b) shows that the usage of Zoom servers is highly non-uniform.
In our dataset, the top three/24 Zoom network preﬁxes accounted for 42%, 35%,
and 13% of the meetings, using 183, 150, and 76 MMR servers, respectively. Each
of these MMR servers was used, on average, about 40 times during the week, or
about 6 times each day.
These results show that the number of Zoom servers available to our campus
users is limited, with about 400 servers handling 90% of the meetings. The
reason for this is our campus Zoom conﬁguration, which directs work-related
meetings to regionally-hosted Zoom servers within Canada (primarily Vancouver
and Toronto, as well as Etobicoke, Ontario). The other Zoom server IPs in our
dataset appear only a few times, possibly from personal (free-tier) Zoom usage,
or on-campus people attending meetings hosted by colleagues elsewhere.
We believe that this mismatch between supply and demand is the root cause
of the Zoom performance anomalies that we have observed on our campus net-
work. At peak times of the day, some MMR servers are managing multiple large
meetings, and are unable to cope with the corresponding load. This phenomenon
might be speciﬁc to our university’s Zoom conﬁguration, but could occur else-
where if the supply of regional Zoom servers is quite limited.
5.2 Session Characteristics
By focusing on a single Zoom server IP address at a time, we can identify speciﬁc
Zoom sessions for classes or meetings. As a sanity check for these sessions, we
also check the consistency of the end time, and the data volumes exchanged
on each connection. For such an event, we can then determine the number of
participants, and assess the arrival patterns for the attendees.
Based on the relative data volumes sent in each direction on the UDP chan-
nels, we can also estimate the proportion of participants that are using their
camera, microphone, or screen-sharing during a Zoom call. Anecdotally, it has
been observed that most students turn their cameras oﬀ when attending a Zoom
lecture. Our measurements suggest that about 10% of participants are using
their camera, and the others have the camera oﬀ for most or all of the session.
Figure 5(a) shows an example from a one-hour Zoom session with about
40 on-campus participants. The horizontal axis shows the average packet size
sent by each connection, and the vertical axis shows the average packet size
received. The points are colour-coded based on our (heuristic) classiﬁcation of the
channels. The points cluster quite tightly into logical groupings, with the video
category varying the most. The graph shows that one of the Zoom participants
was using screen-sharing, with an average packet size of 600 bytes, while the
others were not. Similarly, one participant sent more audio/video than the others,
and received more control information. These observations imply that there was
a single presenter during the session, with several questions asked via audio or
chat. These patterns are consistent with a lecture-based class.
Figure 5(b) shows an example of a large meeting with 120 Zoom participants,
about 30 of whom were on campus (including one of the co-authors). The pat-
Zoom Session Quality: A Network-Level View
565
(a) Zoom 3: Lecture Class
(b) Zoom 4: Large Meeting
Fig. 5. Scatterplot view of Zoom channel usage
terns for the UDP channels resemble those in Fig. 5(a), though more cameras
(about 40%) were on during the meeting. In addition, the TCP control channel
indicates lots of interaction via the chat interface for questions and answers.
5.3 Session Quality
Figure 6 shows the session proﬁle9 for the large Zoom meeting. There was a steep
arrival pattern for the connections, because of the Zoom waiting room used to
admit attendees. The consistency in the end times for the connections suggests
that all participants were (likely) in the same meeting.
(a) Client Connections
(b) Client IP Addresses
Fig. 6. Zoom 4: session proﬁle for participants in large Zoom meeting
Figure 6 shows that about a dozen (40%) of the 30 participants had disrup-
tions to their TCP connections during the Zoom session. We have also annotated
9 We exclude the port proﬁle, which is too cluttered to be useful.
566
A. Choi et al.
the graph with A, V, or D to indicate disruptions to the UDP-based audio, video,
or data channels, respectively, that occurred during the meeting. About 10 of
the participants (30%) had disruptions, with many of these participants on NAT
addresses. Even users on static IP addresses (e.g., IPs on rows 7, 25, and 27)
had some disruptions on their UDP channels.
5.4 Anomalous Zoom Behaviour
Figure 7 shows one of the most interesting Zoom sessions that we found in our
data. This graph shows the IP proﬁle for a session with about 20 on-campus
participants. This session seems to be a lecture-oriented class that lasted about
an hour. Several disruptions occurred during this session, at almost periodic
intervals that are about 11 min apart. Based on the session proﬁle, it appears
that the session host had their network connectivity disrupted (note the ICMP
messages), which aﬀected every other meeting participant.
The timing gaps between UDP connections are about 2–10 s each, consistent
with Zoom restarts. Even more interesting, Zoom seems to enter a “failover”
mode with four concurrent UDP connections: three10 new ones on a randomly
chosen11 Zoom server, and one on the original server. On the graph, this mode
manifests in alternating fashion upon each new disruption. This might reﬂect
Forward Error Correction (FEC) to preserve audio quality [10], since the extra
UDP channel has packet rates and sizes consistent with audio.
Fig. 7. Zoom 5: example of Zoom failover mode
We have not yet identiﬁed the root cause of this anomaly, but have found
several other examples like it in our data. Using scatterplot analysis on this
10 There is also a TCP control connection to this new server (not shown on graph).
11 Curiously, two clients (IPs 9 and 11) choose the original Zoom server to handle
failover as well, inducing extra connection overhead at an inopportune time.
Zoom Session Quality: A Network-Level View
567
example, we have determined that all participants have their cameras on, and
screen-sharing is in use, though the presenter does not seem to be on campus.
This might suggest that the problem is a home networking issue for the presenter,
such as buﬀer overﬂow at a WiFi router, leading to repeated Zoom failures that
aﬀect all participants in a synchronized fashion. We are trying to recreate this
phenomenon experimentally in our ongoing work.
6 Discussion
In this section, we highlight the main performance implications from our study,
and oﬀer several suggestions for network administrators and Zoom software engi-
neers to improve Zoom performance in the future. We also discuss the technical
limitations of our work.
6.1 Performance Implications and Recommendations
The main problem identiﬁed in our study is one of supply versus demand. The
use of mixed learning modalities on our campus during the Fall 2021 semester
quadrupled Zoom traﬃc demand compared to Fall 2020, while directing this