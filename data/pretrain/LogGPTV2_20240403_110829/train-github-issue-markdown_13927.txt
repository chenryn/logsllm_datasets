 **Elasticsearch version** : 2.3.3, 1.4.4
**Plugins installed** : not related
**JVM version** : 1.8.0_77
**OS version** : OS X El Capitan
**Description of the problem including expected versus actual behavior** :  
In ES 2.3.3, if you do a geo polygon query whose one side lies on the equator
in the south hemisphere, then you cannot find the indexed point on the
equator. The query will work fine if the polygon is across the equator.
Interestingly, this bug also exists in ES 1.4.4 but only happens when your
polygon is in the north hemisphere.
I searched ES docs but there is no clear definition whether a geo point on the
boundary of the geo polygon should be considered searchable or not. Is it
considered as undefined behavior or is there any special rules about geo
points on edges? It will be really helpful if you can edit ES docs to clarify
this case.
**Steps to reproduce** :
  1. Create an index with mapping:
        PUT /geo_polygon
    {
        "settings" : {
            "index" : {
                "number_of_shards" : 1, 
                "number_of_replicas" : 0
            }
        },
      "mappings": {
        "my_type": {
          "properties": {
            "location": {
              "type": "geo_point"
            }
          }
        }
      }
    }
  2. Put a list of points on the map.
        PUT /geo_polygon/my_type/1
    {
      "text": "Point on the equator",
      "location": { 
        "lat": 0.0,
        "lon": 30.0
      }
    }
    PUT /geo_polygon/my_type/2
    {
      "text": "Point in the southern hemisphere",
      "location": { 
        "lat": -0.1,
        "lon": 30.0
      }
    }
    PUT /geo_polygon/my_type/3
    {
      "text": "Point in the northern hemisphere",
      "location": { 
        "lat": 0.1,
        "lon": 30.0
      }
    }
  3. Search with a square polygon whose one side is on the equator in the southern hemisphere.
        GET /geo_polygon
    {
        "query": {
            "bool" : {
                "filter" : {
                    "geo_polygon" : {
                        "location" : {
                            "points" : [
                                {"lat" : 0.0, "lon" : 10},
                                {"lat" : 0.0, "lon" : 50},
                                {"lat" : -1, "lon" : 50},
                                {"lat" : -1, "lon" : 10}
                            ]
                        }
                    }
                }
            }
        }
    }
Result:
    * ES 2.3.3: only point 2 is returned.
    * ES 1.4.4: both point 1 and 2 are returned.
  4. Search with a square polygon whose one side is on the equator in the northern hemisphere.
        GET /geo_polygon
    {
        "query": {
            "bool" : {
                "filter" : {
                    "geo_polygon" : {
                        "location" : {
                            "points" : [
                                {"lat" : 0.0, "lon" : 10},
                                {"lat" : 0.0, "lon" : 50},
                                {"lat" : 1, "lon" : 50},
                                {"lat" : 1, "lon" : 10}
                            ]
                        }
                    }
                }
            }
        }
    }
Result:
    * ES 2.3.3: both point 1 and 2 are returned.
    * ES 1.4.4: only point 2 is returned.
  5. Search with a square polygon which is across the equator.
        GET /geo_polygon
    {
        "query": {
            "bool" : {
                "filter" : {
                    "geo_polygon" : {
                        "location" : {
                            "points" : [
                                {"lat" : -1, "lon" : 10},
                                {"lat" : -1, "lon" : 50},
                                {"lat" : 1, "lon" : 50},
                                {"lat" : 1, "lon" : 10}
                            ]
                        }
                    }
                }
            }
        }
    }
Result:
    * ES 2.3.3: all points 1, 2 and 3 are returned.
    * ES 1.4.4: all points 1, 2 and 3 are returned.
**Provide logs (if relevant)** :
**Describe the feature** :