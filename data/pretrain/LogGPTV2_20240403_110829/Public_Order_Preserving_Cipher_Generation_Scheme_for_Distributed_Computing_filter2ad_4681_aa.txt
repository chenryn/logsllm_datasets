title:Public Order Preserving Cipher Generation Scheme for Distributed Computing
author:Amrita Roy Chowdhury and
Parameswaran Ramanathan
POSTER:Public Order Preserving Cipher Generation Scheme for
Distributed Computing
Amrita Roy Chowdhury
University of Wisconsin Madison
PI:EMAIL
ABSTRACT
Ordering is a widely used operation in distributed settings. However
certain distributed settings like an on-line auction, place unique
requirements on the protocol design. Firstly, all entities participate
in the ordering with a communication channel(s) only with a co-
ordinator(s), completely oblivious to other participants. This lack
of intra-party communication channels makes traditional secure
multi-party computations unsuitable for this scenario. Secondly,
the security and functionality of the protocol should not depend on
a single piece of secret information such as a secret symmetric key, (
as in the case of order-preserving encryption, OPE ). It is so because
now every participating entity has to be communicated the secret
key in order for them to encrypt their private data. However this
means that even if just one of the entities is corrupt, the security
of all the honest entities is compromised. These restrictions render
both SMPC and OPE ill-suited for the above distributed setting.
In this paper we propose a public order-preserving cipher genera-
tion scheme (POPC) that addresses the aforementioned challenges.
POPC encodes a transform of the plaintext using a public order-
preserving probabilistic encoding and generates the cipher in a two
round interactive protocol. In POPC neither the correctness nor
the security of the scheme depends on the possession of a single
secret key. Moreover POPC needs no intra-party communication
for its execution. We show POPC achieves the ideal security guar-
antee for any total order-preserving scheme, which is to reveal no
information about the plaintexts beside the order, with a ciphertext
space that is polynomial in size of the plaintext.
CCS CONCEPTS
• Security and privacy → Privacy-preserving protocols; Cryp-
tography;
KEYWORDS
Order-Preserving Encryption, IND-OCPA, secure auction
1 INTRODUCTION
Computation in a distributed setting adheres to the scenario where
a number of distinct, mutually distrusting parties, each with a piece
of private data, wish to carry out the joint computation of some
arbitrary function. Finding ordering relations amongst data items
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-5693-0/18/10.
https://doi.org/10.1145/3243734.3278530
Parmeswaran Ramanathan
University of Wisconsin-Madison
PI:EMAIL
is a desirable operation in many such settings. In addition to its
obvious use in sorting data, ordering is also used for finding ranked
elements, performing group-level aggregations and implementing
statistical tests on distributed data. However certain distributed
settings place unique requirements on the protocol design-
cation with each other.
• Firstly, the participating entities should have no communi-
• Secondly, the security and functionality of the protocol should
not rely on the secrecy of a single piece of information (say
a secret symmetric key).
The first premise can arise in cases like an on-line auction setting
where the number of participating entities can be very large and
residing in geographically dispersed locations. Each entity typi-
cally participates in the computation with communication channels
only with the central coordinators, independent of all other partic-
ipating entities - thus every entity is completely oblivious of any
information regarding the other participating entities (sometimes
even the count of other entities is unknown). In an auction set-
ting, the coordinator can be the auctioneer while the participating
entities are the different bidders; here typically a bidder has no
way of knowing about the identities of the other bidders, in fact
in some setting anonymity of the bidders is an essential security
prerequisite. Moreover the setting is non-cooperative in a game
theoretic sense where every bidder is competing against the others
and hence mutually distrusting. Hence, the bidders might be disin-
centivized to communicate with each other owing to psychological
inhibitions and misgivings. Additionally, more often than not such
settings are highly dynamic and involve multiple invocations of the
distributed computation with the participants joining and leaving
the computation continually. This instability in the total set of par-
ticipants at any given time makes the maintenance of intra-party
communication channels cumbersome. Thus the aforementioned
postulations make it unreasonable for any two independent entities
in our distributed setting to communicate with each other.
Typical secure multi-party computation [3, 4, 6] is a bad fit for
such a distributed setting for two fold reasons. Firstly, as the number
of participants rises, communication and computation overhead
grow prohibitively. Secondly, in our setting the very existence of
intra-party communication channel is unreasonable. A comparative
analysis of the traditional secure multi party computation practices
and our proposed scheme is presented in Table 2 and Table 3.
An alternative approach for secure computation is to use en-
cryption schemes that allow an untrusted server to execute specific
computation primitives over the ciphertexts. One such primitive
is order-preserving encryption (OPE) [2],[5]. It is a symmetric en-
cryption such that the ciphers respect the numerical order of the
plaintext, i.e., ∀x, y, x > y ⇒ E(x) > E(y). It can be applied in
the above setting as follows, each of the participants encrypt their
Poster PresentationCCS’18, October 15-19, 2018, Toronto, ON, Canada2273private data item using an order-preserving scheme and then com-
municate it to an untrusted server/coordinator which carries out
the ordering on the encrypted ciphers. However the functionality
and security of all the existing order-preserving encryptions are
hinged on the possession of a secret encryption key, i.e., a partic-
ipating entity can successfully encrypt his/her private data item
in a secure order-preserving manner only if he/she has access to
the secret encryption key. This entails in distributing the secret key
to all such n participating entities via explicit communication and
quite evidently the security of the schemes will be totally compro-
mised if a malicious party (or the untrusted server) gets its hands
on the secret key. Thus the disclosure of the key (both accidental
or malicious) is the single point of privacy failure in this setting; if
the adversary ( the untrusted server) colludes with even one of the
participants, the security of the entire scheme falls through as the
adversary can obtain the secret key (from the corrupt participant)
and decrypt the data of all the honest participants. Hence this model
is extremely vulnerable from a security point of view especially for
a scenario like an on-line auction with hundreds of bidders. In such
settings, the threat of a breach is in fact very real as typically any
entity can participate in the auction without any a-priori verifica-
tion or authentication phase thereby making it extremely easy for
the adversary to pose as a valid bidder and hoodwink the system
into giving up the encryption key. This gives rise to the second
prerequisite for protocol design in our distributed setting.
In this paper, we propose a public order-preserving cipher gen-
eration scheme that is suitable for the aforementioned distributed
settings. The significance of such a public scheme is based on the
canonical statement characteristic of the distributed setting in hand
- it is difficult to hide a piece of information (the secret key) from
a single agent (malicious) when it is known to a potentially large
number of other participating entities. Thus the security of our pro-
tocol does not depend on the possession of a common key, instead
it is inherent in its underlying architecture. Moreover, each entity
can encrypt its data and participate in the distributed computation
completely parallely and independent of the other entities (i.e., no
intra-party communication is required).
In POPC, the participants first transform their plaintext in a
special way and encode the results using a public order-preserving
encoding scheme. These encodings of the transformed plaintext
are then delivered to the untrusted coordinator in two rounds of
interaction such that the final transformed messages reveal the
relative order of the plaintexts in a semantically secure fashion. The
entire scheme is public, i.e., devoid of the use of any single secret or
common key. The interactive nature of the proposed scheme sets it
apart from the traditional encryption model. Hence we call it an
order-preserving cipher generation scheme.
The contributions of our approach are threefold,
(1) To the best of our knowledge this is the first public order-
preserving scheme that requires no secret common key.
(2) The communication overhead is just two rounds of commu-
nication irrespective of the number of participants.
(3) There is no inter party communication. Together with the
relaxation of the need for a common key, each of the entities
participates completely independent of each other.
2 PROPOSED SCHEME
2.1 Security for Order Preserving Scheme
The strongest security goal for a total order-preserving scheme is
indistinguishability against ordered chosen-plaintext attack (IND-
OCPA) which means that the scheme should reveal no extra infor-
mation about the plaintexts besides their order. This entails that no
efficient adversary can distinguish between the encryptions of two
plaintext sequences as long as the sequences have the same order
relationship.
2.2 Model
Brief Overview . The core idea of the proposed protocol is to
take certain transformation of the plaintexts and map it to an ex-
ponentially large domain and randomize it in an ordered fashion
(using multiplication of large primes). The two security require-
ments of our proposed protocol are no common secret or key
and IND-OCPA security guarantee. The first requirement of a pub-
lic protocol can be achieved by splitting the protocol functioning,
specifically the construction of the ciphers and their subsequent
evaluation, into separate entities with limited interaction. The IND-
OCPA security guarantee comes from the randomization in the
exponentially large domain and the hardness of prime factorization.
The protocol is IND-OCPA secure in the active attack model.
System Setting . We consider a system layout with n partici-
pating entities, Ni , i ∈ {1, 2, 3..., n} and two coordinator nodes C1
and C2. The coordinator nodes are separate entities from the n
participants. Every participating entity Ni has a private integral
plaintext number xi ∈ [l, u] and the goal is to find the ordering
relation amongst the n data items x1, x2, ..., xn.
Definition 1. A public order-preserving cipher generation scheme
for plaintext domain [l, u], is a tuple of polynomial-time algorithms