The documentation for the function, scipy.cluster.hierarchy.linkage, claims
that the function can receive either a condensed (1D) or redundant distance
matrix. Alternatively, the original observation vectors can also be given as
well, and scipy.cluster.hierarchy.linkage will use
scipy.spatial.distance.pdist to calculate the distance matrix.
It seems to me, from testing as well as reading the code, that
scipy.cluster.hierarchy.linkage cannot handle redundant distance matrices.
According to the code, if the dimension of the input array is 2, then it goes
ahead and treats it as a matrix of original observation vectors.
from line 636 in scipy/cluster/hierarchy.py 0.14.0
        elif len(s) == 2:
            X = y
            n = s[0]
            m = s[1]
            if method not in _cpy_linkage_methods:
                raise ValueError('Invalid method: %s' % method)
            if method in _cpy_non_euclid_methods:
                dm = distance.pdist(X, metric)
                Z = np.zeros((n - 1, 4))
                _hierarchy_wrap.linkage_wrap(dm, Z, n,
                                           int(_cpy_non_euclid_methods[method]))
            elif method in _cpy_euclid_methods:
                if metric != 'euclidean':
                    raise ValueError(("Method '%s' requires the distance metric "
                                     "to be euclidean") % method)
                dm = distance.pdist(X, metric)
                Z = np.zeros((n - 1, 4))
                _hierarchy_wrap.linkage_euclid_wrap(dm, Z, X, m, n,
                                                  int(_cpy_euclid_methods[method]))
where `s` is the shape tuple of the input matrix.
To fix, the documentation should either be corrected, or perhaps
scipy.spatial.distance.is_valid_dm should be used to assess whether the input
2D array is a redundant distance matrix versus a vector of observations.