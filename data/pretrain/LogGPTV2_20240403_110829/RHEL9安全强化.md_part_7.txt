# []{#using-shared-system-certificates_security-hardening.html#managing-trusted-system-certificates_using-shared-system-certificates}管理信任的系统证书 {.title}
:::
`trust`{.literal}
命令为管理全系统共享的信任存储中的证书提供了一种方便的方式。
::: itemizedlist
-   要列出、提取、添加、删除或修改信任锚，请使用 `trust`{.literal}
    命令。要查看这个命令的内置帮助信息，请不要输入任何参数，或使用
    `--help`{.literal} 指令：
    ``` screen
    $ trust
    usage: trust command ...
    Common trust commands are:
      list             List trust or certificates
      extract          Extract certificates and trust
      extract-compat   Extract trust compatibility bundles
      anchor           Add, remove, change trust anchors
      dump             Dump trust objects in internal format
    See 'trust  --help' for more information
    ```
-   要列出所有系统信任锚和证书，请使用 `trust list`{.literal} 命令：
    ``` screen
    $ trust list
    pkcs11:id=%d2%87%b4%e3%df%37%27%93%55%f6%56%ea%81%e5%36%cc%8c%1e%3f%bd;type=cert
        type: certificate
        label: ACCVRAIZ1
        trust: anchor
        category: authority
    pkcs11:id=%a6%b3%e1%2b%2b%49%b6%d7%73%a1%aa%94%f5%01%e7%73%65%4c%ac%50;type=cert
        type: certificate
        label: ACEDICOM Root
        trust: anchor
        category: authority
    ...
    ```
-   要将信任锚存储到系统范围的信任存储中，请使用
    `trust anchor`{.literal} 子命令，并指定证书的路径。将
    [*path.to/certificate.crt*]{.emphasis} 替换为证书的路径及其文件名：
    ``` screen
    # trust anchor path.to/certificate.crt
    ```
-   要删除证书，请使用证书的路径或证书的 ID：
    ``` screen
    # trust anchor --remove path.to/certificate.crt
    # trust anchor --remove "pkcs11:id=%AA%BB%CC%DD%EE;type=cert"
    ```
:::
::: itemizedlist
**其他资源**
-   `trust`{.literal} 命令的所有子命令都提供了详细的内置帮助，例如。
    ``` screen
    $ trust list --help
    usage: trust list --filter=
      --filter=     filter of what to export
                            ca-anchors        certificate anchors
    ...
      --purpose=   limit to certificates usable for the purpose
                            server-auth       for authenticating servers
    ...
    ```
:::
:::
::: section
::: titlepage
# []{#using-shared-system-certificates_security-hardening.html#_additional_resources_3}其他资源 {.title}
:::
::: itemizedlist
-   `update-ca-trust(8)`{.literal} 和 `trust(1)`{.literal} 手册页
:::
:::
:::
[]{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html}
::: chapter
::: titlepage
# []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening}第 7 章 扫描系统以了解配置合规性和漏洞 {.title}
:::
合规审计是一个确定给定对象是否遵循合规策略中指定的所有规则的流程。合规策略由安全专业人员定义的，他们通常以检查清单的形式指定计算环境应使用的必要设置。
跨组织甚至同一组织内不同系统之间的合规政策可能有很大差异。这些政策之间的差异取决于每个系统的用途及其对组织的重要性。自定义软件设置和部署特征也需要自定义策略检查表。
::: section
::: titlepage
# []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#configuration-compliance-tools-in-rhel_scanning-the-system-for-configuration-compliance-and-vulnerabilities}RHEL 中的配置合规工具 {.title}
:::
Red Hat Enterprise Linux
提供了可让您执行完全自动化的合规审核的工具。这些工具基于安全内容自动化协议(SCAP)标准，专为自动定制合规策略而设计。
::: itemizedlist
-   [**SCAP Workbench**]{.strong} - `scap-workbench`{.literal}
    图形工具旨在对单个本地或远程系统执行配置和漏洞扫描。您还可以根据这些扫描和评估，使用它来生成安全报告。
-   [**OpenSCAP**]{.strong} - `OpenSCAP`{.literal} 库以及附带的
    `oscap`{.literal}
    命令行工具，旨在对本地系统执行配置和漏洞扫描，验证配置合规性内容，并根据这些扫描和评估生成报告和指南。
-   [**SCAP 安全指南(SSG)**]{.strong} - `scap-security-guide`{.literal}
    软件包为 Linux
    系统提供了最新的安全策略集合。该指南包括一个实用强化建议目录，在适用的情况下与政府的要求相关联。该项目弥补了一般性政策要求和具体实施指南间的差距。
-   [**脚本检查引擎(SCE)**]{.strong} - SCE 是 SCAP
    协议的扩展，可供管理员使用脚本语言（如 Bash、Python 和
    Ruby）编写安全内容。SCE 扩展在 `openscap-engine-sce`{.literal}
    软件包中提供。SCE 本身不是 SCAP 标准的一部分。
:::
要在多个系统上远程执行自动合规审计，您可以使用 Red Hat Satellite 的
OpenSCAP 解决方案。
::: itemizedlist
**其他资源**
-   `oscap(8)`{.literal}、`scap-workbench(8)`{.literal} 和
    `scap-security-guide(8)`{.literal} 手册页
-   [红帽安全演示：创建自定义安全策略内容到 Automate
    安全合规性](https://2020-summit-labs.gitlab.io/rhel-custom-security-content/){.link}
-   [红帽安全演示：使用 RHEL
    安全技术保护您自己](https://github.com/RedHatDemos/SecurityDemos/blob/master/2020Labs/RHELSecurity/documentation/README.adoc){.link}
-   [管理 Red Hat Satellite Guide
    指南中的安全合规性管理](https://access.redhat.com/documentation/en-us/red_hat_satellite/6.3/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-security_compliance_management){.link}.
:::
:::
::: section
::: titlepage
# []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#vulnerability-scanning_scanning-the-system-for-configuration-compliance-and-vulnerabilities}漏洞扫描 {.title}
:::
::: section
::: titlepage
## []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#red-hat-security-advisories-oval-feed_vulnerability-scanning}红帽安全咨询 OVAL 源 {.title}
:::
Red Hat Enterprise Linux
安全审计功能基于安全内容自动化协议(SCAP)标准。SCAP
是一种多用途规格框架，支持自动化配置、漏洞和补丁检查、技术控制合规性活动和安全衡量。
SCAP
规范创建一个生态系统，其中安全内容的格式是众所周知的且标准化的，尽管扫描程序或策略编辑器的实现并不是强制性的。这使得组织能够一次性构建它们的安全策略（SCAP
内容），无论他们使用了多少家安全供应商。
开放式漏洞评估语言(OVAL)是 SCAP
最基本、最古老的组件。与其他工具和自定义脚本不同，OVAL
以声明式方法描述资源的必需状态。OVAL
代码从不直接执行，而是使用称为扫描器的 OVAL 解释器工具。OVAL
的声明性质可确保评估的系统状态不会被意外修改。
与所有其他 SCAP 组件一样，OVAL 也是基于 XML。SCAP
标准定义了多个文档格式。每一个都包括一种不同的信息，用于不同的目的。
[红帽产品安全团队](https://access.redhat.com/security/team/){.link}
通过跟踪和调查影响红帽客户的所有安全问题，来帮助客户评估和管理风险。它在红帽客户门户网站上提供及时、简洁的补丁和安全公告。红帽创建和支持
OVAL 补丁定义，提供机器可读的安全公告版本。
由于平台、版本及其他因素之间存在差异，红帽产品安全严重性等级评级无法直接与第三方提供的通用漏洞评分系统(CVSS)基准评级一致。因此，我们建议您使用
RHSA OVAL 定义，而不是第三方提供的定义。
[RHSA OVAL 定义](https://www.redhat.com/security/data/oval/v2/){.link}
可以单独提供，也可以作为一个完整的软件包提供，并在红帽客户门户网站上提供新安全公告的一小时内进行更新。
每个 OVAL 补丁定义将一对一地映射到红帽安全公告(RHSA)。由于 RHSA
可以包含对多个漏洞的修复，因此每个漏洞都通过其通用漏洞和风险(CVE)名称单独列出，并在我们的公共
bug 数据库中有一个指向其条目的链接。
RHSA OVAL 定义旨在检查系统上安装的 RPM
软件包是否存易受攻击的版本。可以扩展这些定义以包括进一步的检查，例如，查找软件包是否在易受攻击的配置中被使用。这些定义旨在涵盖红帽所提供的软件和更新。需要其他定义来检测第三方软件的补丁状态。
::: itemizedlist
**其他资源**
-   [红帽和OVAL的兼容性](https://access.redhat.com/articles/221883){.link}
-   [红帽和CVE的兼容性](https://access.redhat.com/articles/2123171){.link}
-   [产品安全概述](https://access.redhat.com/security/overview){.link}中的[通知和建议](https://access.redhat.com/security/updates/advisory){.link}
-   [安全数据指标](https://www.redhat.com/security/data/metrics/){.link}
:::
:::
::: section
::: titlepage
## []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#scanning-the-system-for-vulnerabilities_vulnerability-scanning}扫描系统漏洞 {.title}
:::
`oscap`{.literal}命令行实用程序使您能够扫描本地系统，验证配置合规性内容，并根据这些扫描和评估生成报告和指南。此工具充当
OpenSCAP 库的前端，并根据它所处理的 SCAP
内容类型将其功能分组到模块（子命令）。
::: itemizedlist
**先决条件**
-   `AppStream`{.literal}存储库已启用。
:::
::: orderedlist
**步骤**
1.  安装 `openscap-scanner`{.literal} 和 `bzip2`{.literal} 软件包：
    ``` screen
    # dnf install openscap-scanner bzip2
    ```
2.  下载系统的最新 RHSA OVAL 定义：
    ``` screen
    # wget -O - https://www.redhat.com/security/data/oval/v2/RHEL9/rhel-9.oval.xml.bz2 | bzip2 --decompress > rhel-9.oval.xml
    ```
3.  扫描系统漏洞并将结果保存到 [*vulnerability.html*]{.emphasis}
    文件中：
    ``` screen
    # oscap oval eval --report vulnerability.html rhel-9.oval.xml
    ```
:::
::: itemizedlist
**验证**
-   在您选择的浏览器中检查结果，例如：
    ``` screen
    $ firefox vulnerability.html &
    ```
:::
::: itemizedlist
**其他资源**
-   `oscap(8)`{.literal} 手册页
-   [Red Hat OVAL
    定义](https://www.redhat.com/security/data/oval/v2/RHEL9/){.link}
:::
:::
::: section
::: titlepage
## []{#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html#scanning-remote-systems-for-vulnerabilities_vulnerability-scanning}扫描远程系统的漏洞 {.title}
:::
您还可以使用通过 SSH 协议的 `oscap-ssh`{.literal} 工具，使用 OpenSCAP
扫描程序来检查远程系统的漏洞。
::: itemizedlist
**先决条件**
-   `AppStream`{.literal}存储库已启用。
-   `openscap-scanner`{.literal} 软件包已安装在远程系统上。
-   SSH 服务器在远程系统上运行。
:::
::: orderedlist
**步骤**
1.  安装 `openscap-utils`{.literal} 和 `bzip2`{.literal} 软件包：
    ``` screen
    # dnf install openscap-utils bzip2
    ```
2.  下载系统的最新 RHSA OVAL 定义：
    ``` screen
    # wget -O - https://www.redhat.com/security/data/oval/v2/RHEL9/rhel-9.oval.xml.bz2 | bzip2 --decompress > rhel-9.oval.xml
    ```
3.  扫描 SSH 在端口 22 上运行、用户名为 [*joesec*]{.emphasis}、主机名为
    [*machine1*]{.emphasis} 的远程系统上的漏洞，并将结果保存到
    [*remote-vulnerability.html*]{.emphasis} 文件中：
    ``` screen
    # oscap-ssh joesec@machine1 22 oval eval --report remote-vulnerability.html rhel-9.oval.xml
    ```
:::
::: itemizedlist
**其他资源**
-   `oscap-ssh(8)`{.literal}
-   [Red Hat OVAL
    定义](https://www.redhat.com/security/data/oval/v2/RHEL9/){.link}
:::
:::
:::
::: section
::: titlepage