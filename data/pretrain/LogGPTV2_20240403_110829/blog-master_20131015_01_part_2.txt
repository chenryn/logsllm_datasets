Spawn waitpid result (0x0): 0  
Removed temporary directory "/tmp/stap4b1okP"  
把io.stp脚本改成如下, 使用全局变量interval来控制输出间隔.  
注意不要在begin中初始化interval, 否则staprun传入的global 变量会被begin中的覆盖. 初始化在global定义时指定就不会覆盖staprun指定的全局变量值.  
global var1%[60000], var2%[60000], ts, interval=1  
probe begin {  
  ts = gettimeofday_s()  
}  
probe syscall.read {  
  var1[pid(),execname()] = interval) {  
    ts = gettimeofday_s()  
    print("**********\n")  
    foreach([x,y] in var1- limit 5)   
      printdln("---", x, y, @count(var1[x,y]), @sum(var1[x,y]))  
    delete var1  
   }  
}   
probe end {  
  print("END:**********\n")  
  foreach([x,y] in var2- limit 5)   
    printdln("---", x, y, @count(var2[x,y]), @sum(var2[x,y]))  
  delete var1  
  delete var2   
  exit()  
}  
运行io.stp脚本, 测试是否正常 .  
[root@db-172-16-3-39 ~]# stap io.stp   
**********  
3377---pcscd---27---444  
25393---stapio---7---671752  
19947---stapio---5---655360  
8969---postgres---4---64  
8968---postgres---4---64  
**********  
3377---pcscd---27---444  
25393---stapio---6---786432  
19947---stapio---5---655360  
3391---hald---4---8192  
8969---postgres---4---64  
**********  
3377---pcscd---27---444  
25393---stapio---6---786432  
19947---stapio---5---655360  
8969---postgres---4---64  
8968---postgres---4---64  
**********  
25410---perl---250---946396  
25405---nrpe---43---48502  
25406---nrpe---43---48502  
25415---psql---36---56640  
25413---psql---36---56640  
**********  
3377---pcscd---27---444  
25393---stapio---6---786432  
19947---stapio---5---655360  
8969---postgres---4---64  
8968---postgres---4---64  
END:**********  
25410---perl---250---946396  
3377---pcscd---135---2220  
25405---nrpe---43---48502  
25406---nrpe---43---48502  
25415---psql---36---56640  
生成模块 :   
[root@db-172-16-3-39 ~]# stap -p 4 -r 2.6.18-348.12.1.el5 -m ioread_top5 io.stp  
ioread_top5.ko  
将ioread_top5拷贝到目标机器运行, 使用全局变量interval控制输出频率.  
[root@db-172-16-3-33 ~]# staprun ioread_top5.ko interval=5   
这样就可以在目标机器上实现每5秒输出1次了.  
**********  
3431---pcscd---120---1890  
19940---check_nrpe---41---42422  
19927---stapio---28---3424264  
19940---sh---8---16640  
3229---irqbalance---5---5120  
END:**********  
3431---pcscd---168---2646  
19940---check_nrpe---41---42422  
19927---stapio---38---4734984  
19940---sh---8---16640  
3229---irqbalance---5---5120  
```  
## 参考  
1\. https://sourceware.org/systemtap/SystemTap_Beginners_Guide/cross-compiling.html  
2\. https://sourceware.org/systemtap/SystemTap_Beginners_Guide/using-systemtap.html#install-kinfo  
3\. http://blog.163.com/digoal@126/blog/static/163877040201391434530674/  
4\. man stap , man staprun  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")