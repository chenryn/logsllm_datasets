title:A \emphk-anonymous communication protocol for overlay networks
author:Pan Wang and
Peng Ning and
Douglas S. Reeves
A k-Anonymous Communication Protocol for Overlay
Networks ∗
Pan Wang
Dept. of Electrical and
Computer Engineering
NC State University
Raleigh, NC 27695
PI:EMAIL
Peng Ning
Dept. of Computer Science
NC State University
Raleigh, NC 27695
PI:EMAIL
Douglas S. Reeves
Depts. of Computer Science &
Electrical and Computer
Engineering
NC State University
Raleigh, NC 27695
PI:EMAIL
ABSTRACT
Anonymity is increasingly important for network applica-
tions concerning about censorship and privacy. The ex-
isting anonymous communication protocols generally stem
from mixnet and DC-net. They either cannot provide prov-
able anonymity or suﬀer from transmission collision. In this
paper, we introduce a novel approach which takes advan-
tage of hierarchical ring structure and mix technique. This
proposed protocol is collision free and provides provable k-
anonymity for both the sender and the recipient, even if a
polynomial time adversary can eavesdrop all network traf-
ﬁc and control a fraction of participants. Furthermore, it
can hide the sender and the recipient from each other and
thus can be used for anonymous ﬁle sharing. The analysis
shows the proposed protocol is secure against various at-
tacks. Measurements further demonstrate it is practical.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; C.2.1 [Computer-Communication
Networks]: Network Architecture and Design—Network
communications
General Terms
Security
Keywords
Overlay Networks, Security, Anonymity
INTRODUCTION
1.
∗This material
is based upon work partially supported
through the U.S. Army Research Oﬃce under the Cyber-
TA Research Grant No. W911NF-06-1-0316.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’07, March 20-22, 2007, Singapore.
Copyright 2007 ACM 1-59593-574-6/07/0003 ...$5.00.
45
The privacy of communication has become a critical issue
in the Internet. Encryption protects the content of com-
munication, but does not conceal the fact that two users are
communicating. In many situations, users may wish to make
their communication anonymous. For instance, a customer
placing an online order may not want his/her transactions
to be traced. As another example, if the item ordered by
this person can be delivered electronically (e.g., an electronic
book or a digital movie), he/she may not want his/her des-
tination address (e.g., the email account, the IP address of
his/her computer) to be identiﬁed.
In the past two decades, a number of anonymous commu-
nication protocols (e.g., [5, 7, 8, 11, 14, 17, 23, 26, 32, 33])
have been proposed. Most of them originate from Chaum’s
two seminal approaches: mixnet [11] and DC-net [12]. The
mixnet family protocols (e.g., [14, 18, 27, 32, 33]) use a set of
“mix” servers that shuﬄe the received packets to make the
communication path (including the sender and the recipi-
ent) ambiguous. They rely on the statistical properties of
background traﬃc that is also referred to as the cover traﬃc
to achieve the desired anonymity, and cannot provide prov-
able anonymity. The DC-net family protocols (e.g., [5, 12,
16, 17]) utilize secure multi-party computation techniques.
They provide provable anonymity without relying on trusted
third parties. However, they suﬀer from the transmission
collision problem that does not have a practical solution [17].
In this paper, we develop a simple and scalable anonymous
communication protocol. It provides provable k−anonymity
to both the sender and the recipient without transmission
collision. That is the sender and the recipient are indistin-
guishable from the other k − 1 participants, where k is a
predetermined parameter that can be any number between
1 and N (the number of participants in the network).
In the proposed protocol, the participants, which are re-
ferred to as the nodes, are organized into a set of logical rings
and form an overlay network over the Internet. Within each
ring, an anonymous transmission mechanism, which is the
cornerstone of the proposed protocol, uses message batching
and one-way key chain to make a node’s message indistin-
guishable. It ensures (i) a node can send messages to any
other node (in its ring) without disclosing identity to all
nodes in the network, and (ii) a node is prevented from ma-
liciously modifying or replaying any transmitted message in
a ring.
A sender utilizes the above anonymous transmission mech-
anism to anonymously communicate with a recipient that
may be located in a diﬀerent ring. That is the sender con-
ceals the ID of destination ring, in which the recipient re-
sides, into its outgoing message.
It sends the message to
a randomly chosen (agent) node in its local ring, following
the above anonymous transmission mechanism. This agent
node extracts the message and forwards it to the correspond-
ing destination ring without knowing the sender’s identity.
The forwarded message is locally broadcasted in the desti-
nation ring, i.e., sent to all member nodes. The recipient
thus receives the message without disclosing its identity. If
each ring has at least k honest nodes, the proposed proto-
col, therefore, provides provable k−anonymity for both the
sender and the recipient.
The analysis shows the proposed protocol is secure under
a strong adversary model, in which the adversary controls a
fraction of nodes, is able to eavesdrop all network traﬃc and
maliciously modify/replay the transmitted messages. We
have completed a proof-of-concept implementation of the
basic communication module and tested it on PlanetLab [2].
Our results demonstrate the proposed protocol is practical.
The rest of the paper is organized as follows. Section
2 describes the nomenclature and cryptographic tools used
in this paper, and provides an overview of the related work.
Section 3 introduces the system and threat models and some
major notation used in the paper. Section 4 presents the
proposed k−anonymous communication protocol in detail.
Section 5 provides the anonymity, security and performance
analysis. Finally, section 6 concludes this paper and points
out some future research directions.
2. BACKGROUND
In this section, we ﬁrst brieﬂy describe the nomenclature
of anonymity deﬁned by previous work, then introduce some
cryptographic tools used in the paper, and ﬁnally give a brief
overview of related work.
2.1 Nomenclature of Anonymity
The concept of anonymity in information management has
been discussed in previous work [28, 30, 33, 37]. Three types
of anonymity or anonymous communication properties were
deﬁned: sender anonymity, recipient anonymity and rela-
tionship anonymity. We recall the deﬁnitions in [28]. Sender
anonymity means that a particular message is not linkable
to any sender and no message is linkable to a particular
sender. Recipient anonymity similarly means that a mes-
sage cannot be linked to any recipient and that no message
is linkable to a recipient. Relationship anonymity is a weak
property; it means that the sender and the recipient can-
not be identiﬁed as communicating with each other, though
it may be clear they are participating in some communica-
tion. The above anonymities are also referred to as the full
anonymities, since they guarantee that an adversary can-
not infer anything about the sender, the recipient, or the
communication relationship from a transmitted message.
k-Anonymity is a weaker guarantee of anonymity, if com-
pared with full anonymity. Ahn, Bortz and Hopper [5] de-
ﬁned it as the property that an adversary was able to learn
something about the sender or the recipient of a particular
message, but could not narrow down its search to a set of
less than k participants. In other words, k-anonymity guar-
antees that the adversary is not able to guess the sender or
the recipient of a particular message with a probability non-
negligibly greater than 1/k. Ahn, Bortz and Hopper further
deﬁned the sender (recipient) k-anonymity as the property
that the sender (recipient) of a transmitted message is indis-
tinguishable from at least other k − 1 honest participants.
2.2 Cryptographic Tools
One-way key chain [24] is a chain of cryptographic keys
generated by repeatedly applying a one-way (hash) function
H() to a random number (key chain seed). For example, to
construct a key chain of size L, the user randomly chooses
a key chain seed KL, and then computes KL−1 = H(KL),
KL−2 = H(KL−1), ..., until K0 = H(K1). K0 generally is
referred to as the commitment of the key chain. Due to the
one-way property of the function H(), given a disclosed ki,
it is computationally infeasible to compute any undisclosed
kj for j > i. However, a user can compute any Kj for j < i
eﬃciently, i.e., Kj = H(i−j)(Ki).
In the proposed proto-
col, we use one-way key chains to authenticate the origins
of transmitted messages (in the message batch). The order
of keys in a key chain, therefore, represents the order of a
node’s messages and thus prevents the replay attacks eﬀec-
tively. For convenience, we refer to the keys in a key chain
as the key-chain keys, in order to distinguish them from the
encryption keys used by the proposed protocol.
We consider two types of encryptions in our proposed pro-
tocol: symmetric key encryption and public key encryption.
In symmetric key encryption, two hosts share a common se-
cret key that is used for both encryption and decryption. In
public key encryption, a host publishes its public key which
is used for encryption by any other node, and secretly keeps
the private key which is used for decryption. We require the
semantic security for both encryptions. That is, the encryp-
tion is randomized, and a polynomial time adversary cannot
distinguish the encryptions of two input messages.
2.3 Previous Work
As mentioned earlier, most anonymous communication
protocols are stemmed from Chaum’s two seminal approaches:
mixnet [11] and DC-net [12]. In mixnet, a sender encrypts
an outgoing message and the ID of recipient using the pub-
lic key of a trusted server, called a “mix”. The mix ac-
cumulates a batch of encrypted messages, decrypts and re-
orders these messages, and forwards them to the recipients.
An eavesdropper cannot link a decrypted output message
with a speciﬁc (encrypted) input message. Mixnet thus pro-
tects the secrecy of users’ communication relationships. To
deal with the possibility of compromising the single mix,
mixnet has been extended in [18, 23, 29, 32], where a set
of mix servers are used. Recently, M¨oller presented a prov-
ably secure public-key encryption algorithm for mixnet [26].
This algorithm has been adopted by Mixminion [14]. Since
mixnet-like protocols rely on the statistical properties of
background traﬃc, they cannot provide provable anonymity.
Wright et al. showed the degradation of anonymity of some
protocols in the face of persistence attackers [38]. Our pro-
tocol is mixnet-like; however, it removes the requirement of
trusted servers and provides provable anonymity.
DC-net [12, 37] is an anonymous broadcast protocol em-
ploying secure multiparty computation.
It provides prov-
able anonymity in the absence of trusted servers. But it
is vulnerable to the transmission collision problem. That
is, two (or more) players may transmit in the same mes-
sage slot and thus no message will be delivered successfully,
even if all players are honest. There is no practical solution
46
to solve such a transmission collision problem [17]. Further-
more, this protocol has poor scalability, as it requires O(N 3)
protocol messages for each transmitted anonymous message
in a network of N users. Pﬁtzmann and Waidner suggested
to implement superposed sending of DC-net on a physical
ring network to reduce the communication overhead [30].
It is important to note that the ring is used for improv-
ing eﬃciency and reliability instead of the anonymous mes-
sage delivery directly. Recently, Ahn et al. extended DC-
net to achieve k−anonymity for message transmission [5].
Golle and Juels presented new DC-net constructions to de-
tect cheating with high probability [17]. Compared with
DC-net family protocols, our protocol avoids the problem
of transmission collision, and it is more eﬃcient (i.e., O(n2)
protocol messages per anonymous message, where n is the
number of nodes in the ring).
Crowds is designed for anonymous web browsing, i.e., hid-
ing the sender from the recipient [33]. However, it does not
hide the recipient and the packet content from the nodes
en route. Hordes is an extension of Crowds, intending to
reduce packet processing at members [35]. Compared with
both Crowds and Hordes, our protocol provides stronger
anonymous protection.
It not only hides the sender from
the recipient, but also hides both of them from the other
nodes in the network.
Beimel and Dolev designed a family of anonymous mes-
sage delivery protocols, i.e., the BUS system, simulating the
public transportation system in digital world [7]. BUS pro-
tocol suﬀers from the huge size of transmitted message, i.e.,
O(N 2). Furthermore, the “seat” in the “bus” discloses the
sender’s identity to the recipient. The authors suggested to
use random seating and clusters to reduce the number of
seats and hide senders from recipients. However, it makes
the recipient unable to reply, and information may lose due
to seating collision. Compared with the BUS system, our
protocol is more eﬃcient, collision-free, and supports the
detection of active adversaries.
3. MODELS AND NOTATION
We assume the participating nodes voluntarily cooperate
with each other to provide an anonymizing service. All
nodes are potential originators of anonymous communica-
tion. Each node has a unique ID. For simplicity, we assume
a node’s ID is its IP address, and we will not distinguish
between the node’s ID with its IP address in the rest of the
paper. Each node has a public/private key pair authenti-