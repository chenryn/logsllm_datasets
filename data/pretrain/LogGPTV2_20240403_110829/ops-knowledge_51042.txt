User: 使用ansible编写一个自动化配置脚本，实现将多台主机加入同一个Kubernetes集群。
Assistant: 以下是可能的Ansible自动化配置脚本，用于将多台主机加入同一个Kubernetes集群。

1. 编写Ansible playbook，定义要执行的任务

```
---
- name: Join Kubernetes cluster
  hosts: all
  become: true

  tasks:
  - name: Install kubeadm, kubelet and kubectl
    yum:
      name:
        - kubeadm
        - kubelet
        - kubectl
      state: present

  - name: Initialize the first control plane node
    command: kubeadm init --pod-network-cidr=10.244.0.0/16

    register: init_output

    environment:
      KUBECONFIG: "/etc/kubernetes/admin.conf"

    ignore_errors: true

  - name: Copy kubeconfig for root user
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /root/.kube/config
      owner: root
      group: root
      mode: '0600'
    when: init_output is changed

  - name: Install a pod network add-on
    command: kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml
    when: init_output is changed

  - name: Join the other control plane nodes and worker nodes to the cluster
    command: "{{ hostvars[item]['join_command']['cmd'] }}"
    loop: "{{ groups['all'] }}"
    when:
      - "'control-plane' in group_names and 'kubelet' in group_names"
      - item != inventory_hostname
```
2. 配置Ansible inventory，指定要执行任务的主机列表

```
[control-plane]
control-plane-1.example.com
control-plane-2.example.com

[worker]
worker-1.example.com
worker-2.example.com

[all:vars]
ansible_user=root
```
3. 运行Ansible playbook，执行配置任务

  ```
  ansible-playbook -i inventory.ini join_cluster.yml
  ```

这个Ansible自动化配置脚本将执行以下操作：

- 在所有主机上安装Kubernetes必需的kubeadm、kubelet和kubectl软件包。
- 在第一个控制平面节点上初始化集群，生成初始化输出并复制kubeconfig文件以供root用户使用。
- 安装网络插件Calico。
- 将其他控制面节点和工作节点加入集群。

此脚本可使多台主机同时加入同一Kubernetes集群，确保所有节点都可以完整地工作。