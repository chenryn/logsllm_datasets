**Title: A General Approach to Bypassing Many Kernel Protections and Its Mitigation**

In this presentation, we will begin by analyzing an anecdotal exploit that bypasses Kernel Address Space Layout Randomization (KASLR) using a flexible object in the Linux kernel. We then extend the definition of flexible objects to "elastic objects" and demonstrate that this exploit technique is a general approach applicable not only to the Linux kernel but also to FreeBSD and XNU. This method can be used to bypass multiple kernel protections, including KASLR, heap cookie protectors, stack canaries, and even achieve arbitrary read attacks.

First, we show that adversaries can leverage elastic objects to easily obtain a leaking primitive for nearly any kernel vulnerability with limited overwriting capabilities. Second, we demonstrate how this leaking primitive enables adversaries to bypass various protections, such as heap cookie protectors, KASLR, and stack canaries, and even perform arbitrary read attacks. Third, we introduce a static analysis technique to identify all such elastic structures or objects within the kernel codebase. Finally, based on our findings, we propose an isolation-based defense mechanism as part of kernel hardening. We evaluate the security improvements and measure the performance overhead at different granularities.