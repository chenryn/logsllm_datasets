阅读并对下面的脚本进行注释：
/etc/init.d/rpcbind
do
指令
done
提示：注意代码缩进。
while循环语句会对紧跟在while命令后的条件表达式进行判断，如果该条件表达式
成立，则执行while循环体里的命令或语句（即语法中do和done之间的指令），每一次
执行到done时就会重新判断while条件表达式是否成立，直到条件表达式不成立时才会
---
## Page 211
第10章while 循环和until循环的应用实践183
跳出while循环体。如果一开始条件表达式就不成立，那么程序就不会进人循环体（即
语法中do和done之间的部分）中执行命令了。
可以用为手机充值（费用就是条件），然后发短信打电话的案例来形象地说明while
循环语句的执行，如下。
while
do
指令..
done
until循环语句的用法与while循环语句的用法类似，区别是until会在条件表达式
不成立时，进人循环执行指令；条件表达式成立时，终止循环。until的应用场景很罕见，
---
## Page 212
B4跟老男孩学Linux运维：Shell编程实战
读者了解下即可，本书不会深人探讨此循环语句。
10.2当型和直到型循环的基本范例
首先来了解一下Shell中的两个休息命令：sleep1表示休息1秒，usleep1000000
也表示休息1秒。
下面是与while和until循环语句相关的示例。
范例10-1：每隔2秒输出一次系统负载（负载是系统性能的基础重要指标）情况。
参考答案1：每隔2秒在屏幕上输出一次负载值。
[root@oldboy script8] cat 10_1_1.sh
#1/bin/sh
while true
这里的条件和上面的写法有区别，注意（1里面两墙要有空
格，true和1都表示条件永远成立。
op
uptime>>/tmp/uptime.1og==>将负载值输入到1og文件里，注意，此处最好写绝对路径
usleep 2000000
==>这里的单位是微秒，其实结果出是两秒
euop
通过在脚本的结尾使用&符号来在后台运行脚本：
[root9oldboy scripts]sh 10_1_2.sh &
[1] 14318
[root8oldboy scripts]# ta11 -f /tmp/uptime.log
==>使用tai1命令实时观察输出结果。
11:08:35 up 14:57,1user,1oadaverage:0.00,0.00,0.00
---
## Page 213
第 10 章 while 循环和 unti 器环的应用实践IB5
11:08:37up 14:57,1user,1oadaverage:0.00,0.00,0.00
11:08:39 up 14:57,
1 user,
1oad average:0.00,0.00,0.00
11:08:41 up 14:57,1 user,1oad average:0.00,0.00,0.00
在实际工作中，一般会通过客户端SSH连接服务器，因此可能就会有在脚本或命
令执行期间不能中断的需求，若中断，则会前功尽弃，更要命的是会破坏系统数据。下
面是防止脚本执行中断的几个可行方法：
1）使用sh/server/scripts/while_01.sh&命令，即使用&在后台运行脚本。
2）使用nohup/server/scripts/uptime.sh&命令，即使用nohup加&在后台运行脚本。
3）利用screen保持会话，然后再执行命令或脚本，即使用screen保持当前会话
状态。
此外，让进程在后台可靠运行的几种方法的参考资料如下：
http://www.ibm.com/developerworks/cn/linux/l-cn-nohup/
10.3让Shell脚本在后台运行的知识
有关脚本运行的相关用法和说明见表10-1。
表10-1脚本运行的相关用法和说明
用法
说明
sh while1.sh &
把脚本whilel.sh放到后台执行（在后台运行脚本时常用的方法）
3+
停止执行当前期本或任务
ctl+z
暂停执行当前脚本或任务
bg
把当前脚本或任务放到后台执行，bg可以理解为background
fg
把当前脚本或任务放到前台执行，如果有多个任务，可以使用fg加任务编号调出对应
的脚本任务，如fg2，是指调出第二个脚本任务，fg可以理解为frontground
_jobs
查看当前执行的脚本或任务
kill
通过jobs 来获得
下面针对表10-1中的知识进行实践演示，如下：
[zootθoldboy scripts]#sh10_1_2.ah&==>结尾使用&特号表示在后台运行脚本。
[rooteoldboy scripts]# fg
[1] 14318
任务，则可以使用fg加joba输出中的任务编号调出对应编号的脚本到前台。
*>执行tg命令将脚本放到前台执行，如果有多个脚本
sh 10_1_2.sh
=>执行Ctr1+z快捷键出现如下结果，临时暂停执行脚本。
[root@oldboy scripts] bg
peddons+[T]
sh 10_1_2.sh
*>将当前执行的脚本放到后台运行。
[1]+sh 10_1_2.sh &
---
## Page 214
8跟老男孩学 Linux 运维：Shell编程实战
[root@oldboy scripts]# jobs
=>查看当前She11下运行的脚本任务。
[1]+Running
sh 10_1_2.sh &
[root@oldboy scripts]# fg 1
>可以使用fg加jobe输出中的任务编号调出对应编号
的脾本到首台来运行。
sh 10_1_2.sh
^C
==>当脚本在前台运行时，可以执行Ctr1+c快捷健停止
脚本运行。
(1]+Stopped
sh whi1e-1-1.8h
以下是使用kill命令关闭jobs任务脚本的示例。
[rootoldboy-]#jobs
[1]-Running
sh whilel.sh 6
[2]+Running
sh whilel.sh 6
[rooteoldboy-]#ki11 82
0))
＜==夏小括号条件表达式的用法，当1大于0不成立时就晚出循环
do
echo
-1S.
0 1]
双中括号条件表达式的用法
do
echo $i
((1--))
done
参考答案3：使用脚本传参需要打印的数字。
f=*51*
<=使用1接收脚本传参。
while [$1
-gt01
#<==单中括号条件表达式的用法。
do
echo $i
((i--))
done
执行结果如下：
[root8oldboy
也可以传入其他数字
4
5
3
2
1
参考答案4：使用until命令。
[root9oldboy scripts]cat 10_2_4.sh
q/uq/1
1=5
until (1si<1]]
#<当条件表达式不成空时，进入环执行命令，
因为5<1不成立，因此进入环执行命令。
do
 o
((--))
---
## Page 216
B跟老男孩学 Linux运维：Shell 编程实战
提示：当i自减到0时，条件表达式（0<1）成立，因此跳出循环，当条件不成立
时，则进入循环。
执行结果如下：
4
3
思考：如果不用while、until及for循环，还有什么命令或方法可以打印上述数字
序列？
范例10-3：计算从1加到100之和（请用1+2+3++100的方法）。
参考答案：
[rootgo1dboy scripts]#cat 10_3_1.sh
this script is created by oldboy.
1/bin/bash
1=1
#<=m1为自增的变量，从1到100，初始值为1。
sum=0
<==总和变量相始值为0。
while ((i<=100）)
<==条件是i小于等于100，也就是从1加到100。
do