I have some spare time and am considering contributing to three.js. I found several resources for implementing NURBS (Non-Uniform Rational B-Splines) both on the CPU and GPU. Here is a summary of what I found:

### CPU Implementations
1. **Mesa's GLU Library**  
   - Source: [glinterface.cc](http://cgit.freedesktop.org/mesa/mesa/tree/src/glu/sgi/libnurbs/interface/glinterface.cc?h=8.0)
   - License: Restrictive

2. **Blender's NURBS Implementation**  
   - Source: [curve.c](https://svn.blender.org/svnroot/bf-blender/trunk/blender/source/blender/blenkernel/intern/curve.c)
   - License: GPL

3. **NAR Associates' NURBS Code**  
   - Source: [C Code](http://www.nar-associates.com/nurbs/c_code.html)
   - License: Copyright, non-commercial reuse allowed

### GPU Implementations
- **Paper: "Real-Time NURBS Surface Rendering on GPUs"**  
  - Source: [CAD09.pdf](http://kingkong.me.berkeley.edu/~adarsh/Papers/CAD09.pdf)
  - Performance: Up to 10 times faster than CPU implementations
  - Consideration: High setup cost

Would any of these be suitable for inclusion in three.js, @mrdoob?