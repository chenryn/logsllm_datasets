# CANVuS: Context-Aware Network Vulnerability Scanning

**Authors:** Yunjing Xu, Michael Bailey, Eric Vander Weele, and Farnam Jahanian  
**Affiliation:** Computer Science and Engineering, University of Michigan  
**Email:** {yunjing, mibailey, ericvw, farnam}@eecs.umich.edu  
**Address:** 2260 Hayward St., Ann Arbor, Michigan 48109, USA

## Abstract
Enterprise networks face a variety of threats, including worms, viruses, and DDoS attacks. Effective defense against these threats requires accurate inventories of network devices and the services they run. Traditional vulnerability scanning systems meet these requirements by periodically probing target networks to discover hosts and their running services. This polling-based model suffers from two main issues: wasted network resources and detection latency leading to stale data. These limitations primarily stem from using time as the scanning decision variable. To mitigate these problems, we propose an event-driven approach that triggers scans based on changes in the network context—an instantaneous view of host and network state. In this paper, we present an architecture for building network context for enterprise security applications using existing passive data sources and common network formats. Using this architecture, we developed CANVuS, a context-aware network vulnerability scanning system that initiates scans based on network activities. Experimental results show that this approach outperforms traditional models in timeliness and resource efficiency.

## 1. Introduction
Modern enterprise networks are under constant threat from spyware, spam, and phishing scams. Network operators use intrusion detection/prevention systems, firewalls, and antivirus software to protect users and resources. For these defenses to be effective, accurate information about network devices and their services is essential. While both passive and host-based methods exist, active network-based vulnerability scanning remains the most prevalent. In this model, scanners enumerate potential hosts and their services, but this process can be resource-intensive and time-consuming, especially for large networks. Consequently, scans are often run only periodically, leading to stale data and wasted resources.

The dynamic nature of host mobility, availability, and service configurations further complicates the timing of vulnerability scans. A context-insensitive model suffers from inefficiencies and outdated data. For example, network operators may lack control over host placement and availability, leading to unnecessary scans of unallocated or unavailable IP addresses. Additionally, the rapid emergence of new exploits, vulnerabilities, and patches, along with the dynamic nature of user behavior, means that even small discrepancies in inventory can have significant security implications. Periodic scanning captures only a snapshot of active services and may miss many others.

To address these issues, we introduce a context-aware architecture that provides a uniform view of network states and their changes. This architecture leverages existing data sources from various network layers (link, network, transport, and application) and diverse data formats (syslog, SNMP, NetFlow) to generate abstract views of important network activities. Instead of scanning all hosts at the same frequency, our architecture selectively scans based on availability patterns and triggers active scans upon detecting configuration changes. This event-driven model, built on the context-aware architecture, provides more timely and accurate results while consuming fewer resources.

## 2. Related Work
Various security solutions and appliances have been proposed to defend against enterprise network threats. These include real-time, reactive detection and prevention systems like intrusion detection systems and host-based antivirus software. Proactive approaches, such as network-based vulnerability scanners, aim to identify risks before attacks occur. Active scanners (e.g., Nessus, Retina) send crafted packets to inventory targets, while passive scanners fingerprint software versions by auditing network traffic. Both types of scanners have limitations, and specialized scanners for popular applications (e.g., web applications) have also been developed.

Once accurate inventory and service data are acquired, they can be used for various tasks, such as firewall configuration, blocking unwanted services, and prioritizing patching. Attack graph representations are often used to reason about these inventories. However, existing work does not provide up-to-date data with fewer costs. CANVuS differs by leveraging network context to improve the timeliness and efficiency of vulnerability scanning.

## 3. Motivation
Our motivation stems from interactions with the University of Michigan’s Office of Information and Infrastructure Assurance (IIA). The IIA conducts quarterly scans of seven /16 subnets, which take one to two weeks to complete. To reduce scan time, many vulnerability signatures are not used, and scans proceed without knowledge of sub-allocations. Only 85% of IP addresses and vulnerabilities are shared between scans, and only 56% of configurations remain unchanged. The IIA staff are aware of the dynamic nature of their network and the overhead of scanning, but lack a platform for comprehensive visibility.

## 4. Architecture and Design
We describe a context-aware architecture that provides a uniform view of network states and their changes. The architecture consists of three components:
1. **Network Monitors:** Distributed over network devices (switches, routers, servers) to collect data.
2. **Context Manager:** Converts data from monitors into a network state database.
3. **Network State Database:** Provides a uniform model for context-aware vulnerability scanning and other applications.

This architecture is designed to be incrementally deployable and utilizes existing data formats (syslog, SNMP, NetFlow) and extensible mechanisms (databases, SQL). Where necessary, probe-based mechanisms extract data from network streams. The focus is on data breadth and operational realities, aligning with the guidelines outlined by Allman et al. [3].

## 5. Implementation
Details of the CANVuS system implementation on this architecture will be presented in this section.

## 6. Evaluation
We evaluate CANVuS and the context-aware architecture in a large academic network with several thousand active hosts. Over a 16-day period in March 2010, CANVuS outperformed existing techniques in detection latency and accuracy with fewer scans. The evaluation highlights the current methodology's limitations, including the lack of ground truth and limited event types, which will be addressed in future work.

## 7. Risks and Mitigation
This section discusses the risks involved in the project and our mitigation efforts.

## 8. Limitations and Future Work
We explore the limitations of the current approach and outline future work to address these issues.

## 9. Conclusion
In conclusion, CANVuS offers a more efficient and timely approach to network vulnerability scanning by leveraging context-awareness. The system demonstrates significant improvements over traditional periodic scanning, providing more accurate and up-to-date data with fewer resources.

---

This revised version aims to enhance clarity, coherence, and professionalism, making it suitable for academic and technical audiences.