:::
本节列出了在创建、删除或重新定义分区大小前需要考虑的关键点。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本节不涵盖 DASD 分区表，它特定于 IBM Z 构架。有关 DASD 的详情请参考：
::: itemizedlist
-   [在 IBM Z 中配置 Linux
    实例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/performing_a_standard_rhel_installation/configuring-a-linux-instance-on-ibm-z_installing-rhel){.link}
-   IBM 知识库中的 [您应该知道的有关 DASD
    的内容](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lgdd/lgdd_c_dasd_know.html){.link}
    的文章
:::
:::
### []{#assembly_resizing-a-partition_managing-file-systems.html#_the_maximum_number_of_partitions_4}分区的最大数量
设备中的分区数量受分区表类型的限制：
::: itemizedlist
-   在使用 [**主引导记录(MBR)**]{.strong}
    分区表格式化的设备上，您可以有：
    ::: itemizedlist
    -   最多四个主分区，或者
    -   最多有三个主分区，以及一个扩展分区，其中包括多个逻辑分区。
    :::
-   在使用 [**GUID 分区表(GPT)**]{.strong}
    格式化的设备上，最大的分区数为 128。尽管 GPT
    规范通过增大为分区表保留的空间来允许更多的分区，但
    `parted`{.literal} 工具的常用的做法是将其限制为足够容纳 128
    个分区的空间。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽建议，除非有其他原因，否则 [*至少*]{.emphasis} 要创建以下分区：
`swap`{.literal}、`/boot/`{.literal} 和 `/`{.literal} (root)。
:::
### []{#assembly_resizing-a-partition_managing-file-systems.html#_the_maximum_size_of_a_partition_4}分区的最大大小
设备中的分区大小受分区表类型的限制：
::: itemizedlist
-   在使用[**主引导记录（MBR）**]{.strong}
    分区表格式化的设备中，最大值为 2TiB。
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备上，最大大小为
    8ZiB。
:::
如果要创建一个大于 2TiB 的分区，该磁盘必须使用 GPT 格式化。
### []{#assembly_resizing-a-partition_managing-file-systems.html#_size_alignment_4}大小协调
`parted`{.literal} 工具可让您使用多个不同的后缀来指定分区的大小：
::: variablelist
[MiB、GiB 或 TiB]{.term}
:   大小为 2 的指数代表。
    ::: itemizedlist
    -   分区的起点与根据大小指定的扇区一致。
    -   结束点与指定大小减 1 扇区一致。
    :::
[MB、GB 或 TB]{.term}
:   以 10 的指数表示容量。
    起始和结束点在指定单元的一半内一致：例如,使用 MB 后缀时 ±500KB。
:::
:::
::: section
::: titlepage
# []{#assembly_resizing-a-partition_managing-file-systems.html#proc_resizing-a-partition-with-parted_assembly_resizing-a-partition}使用 parted 重新定义分区大小 {.title}
:::
这个过程使用 `parted`{.literal} 工具重新定义磁盘分区大小。
::: itemizedlist
**先决条件**
-   如果您想缩小分区，备份保存在分区上的数据。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    缩小分区可能会导致分区上的数据丢失。
    :::
-   如果要将分区大小调整为大于 2TiB，必须使用 GUID
    分区表(GPT)对磁盘进行格式化。有关如何格式化磁盘的详情，请参阅
    [在磁盘上创建分区表](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_creating-a-partition-table-on-a-disk_managing-file-systems){.link}。
:::
::: orderedlist
**流程**
1.  如果您想缩小分区，首先缩小它上面的文件系统，使其不大于重新定义大小的分区。请注意
    XFS 不支持缩小。
2.  启动交互式 `parted`{.literal} shell：
    ``` screen
    # parted block-device
    ```
    ::: itemizedlist
    -   使用您要调整分区大小的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis} ：例如
        `/dev/sda`{.literal}。
    :::
3.  查看当前的分区表：
    ``` screen
    (parted) print
    ```
    从分区表中决定：
    ::: itemizedlist
    -   分区的从号码
    -   调整大小后现有分区的位置和新结束点
    :::
4.  重新定义分区大小：
    ``` screen
    (parted) resizepart minor-number new-end
    ```
    ::: itemizedlist
    -   使用您要调整大小的分区的次号替换
        [*[minor-number]{.replaceable}*]{.emphasis} ：例如
        `3`{.literal}。
    -   用决定重新定义大小的新分区的结束点（从磁盘开始计算）替换
        [*[new-end]{.replaceable}*]{.emphasis}。您可以使用大小后缀，如
        `512MiB`{.literal}、`20GiB`{.literal} 或
        `1.5TiB`{.literal}。默认大小 MB。
    :::
    ::: example
    []{#assembly_resizing-a-partition_managing-file-systems.html#idm139895580607104}
    **例 18.1. 扩展分区**
    ::: example-contents
    例如，要将位于磁盘开头的分区大小扩展为 2GiB，请使用：
    ``` screen
    (parted) resizepart 1 2GiB
    ```
    :::
    :::
    输入此命令后，这些更改就会生效，因此在执行前请先重新检查。
5.  查看分区表以确认调整了大小的分区位于分区表中，且大小正确：
    ``` screen
    (parted) print
    ```
6.  退出 `parted`{.literal} shell:
    ``` screen
    (parted) quit
    ```
7.  验证内核是否识别了新的分区：
    ``` screen
    # cat /proc/partitions
    ```
8.  如果您扩展了分区，也扩展了它上面的文件系统。详情请参阅（参考）。
:::
::: itemizedlist
**其他资源**
-   `parted(8)`{.literal} 手册页。
:::
:::
:::
[]{#strategies-for-repartitioning-a-disk_managing-file-systems.html}
::: chapter
::: titlepage
# []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#strategies-for-repartitioning-a-disk_managing-file-systems}第 19 章 重新分区磁盘策略 {.title}
:::
重新分区磁盘的方法有几种。本节讨论以下可能的方法：
::: itemizedlist
-   有可用的未分区的空闲空间
-   有可用的未使用过的分区
-   被活跃使用的分区内有可用的空闲空间
:::
请注意，本节仅从理论上讨论了前面提到的概念，不包括关于如何逐步执行磁盘重新分区的任何流程步骤。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
为了清晰起见，以下示意图进行了简化，不反映您在实际安装 Red Hat
Enterprise Linux 时遇到的确切分区布局。
:::
::: section
::: titlepage
# []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#using-unpartitioned-free-space_strategies-for-repartitioning-a-disk}使用未分区的空闲空间 {.title}
:::
在这种情况下，已定义的分区不会跨越整个硬盘，留下的未分配空间不是任何已定义分区的一部分。下图显示了这可能是什么样子：
::: figure
[]{#strategies-for-repartitioning-a-disk_managing-file-systems.html#idm139895593820688}
**图 19.1. 有未分区的可用空间的磁盘**
::: figure-contents
::: mediaobject
![未分区空间](images/unpart-space.png)
:::
:::
:::
在上例中，第一个图表示一个具有一个主分区的磁盘，以及一个具有未分配空间的未定义分区的磁盘，第二个图表示具有两个定义分区且分配了空间的磁盘。
未使用的硬盘也属于这一类别。唯一的区别是，[*所有*]{.emphasis}
空间并不是任何定义的分区的一部分。
无论哪种情况，您都可以从未使用的空间创建必要的分区。这种情境很可能是新磁盘。大部分预安装的操作系统都被配置为占据磁盘驱动器上所有可用空间。
:::
::: section
::: titlepage
# []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#using-space-from-an-unused-partition_strategies-for-repartitioning-a-disk}使用未使用分区中的空间 {.title}
:::
在这种情况下，您可以有一个或者多个不再使用的分区。下图显示了这种情况。
::: figure
[]{#strategies-for-repartitioning-a-disk_managing-file-systems.html#idm139895595827264}
**图 19.2. 有未使用分区的磁盘**
::: figure-contents
::: mediaobject
![未使用的分区](images/unused-partition.png)
:::
:::
:::
在上例中，第一个图表示带有未使用分区的磁盘，第二个图表示为 Linux
重新分配未使用的分区。
在这种情况下，您可以使用分配给未使用分区的空间。您必须删除分区，然后在此位置上创建合适的
Linux 分区。您可以删除未使用的分区，并在安装过程中手动创建新分区。
:::
::: section
::: titlepage
# []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#con_using-free-space-from-an-active-partition_strategies-for-repartitioning-a-disk}使用活跃分区中的空闲空间 {.title}
:::
这是最常见的情况。它也是最难处理的，因为即使您有足够的可用空间，它目前也被分配给一个已经在使用的分区。如果您购买了一台带有预装软件的计算机，硬盘很可能有一个大型分区存放操作系统和数据。
除了向系统添加新硬盘外，您还可以选择破坏性和非破坏性重新分区。
::: section
::: titlepage
## []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#_destructive_repartitioning}破坏性重新分区 {.title}
:::
这会删除分区并创建几个较小的分区。您必须进行完整备份，因为原始分区中的所有数据都会被破坏。创建两个备份，使用验证（如果您的备份软件提供的话），并在删除分区
[*前*]{.emphasis} 尝试从备份中读取数据。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
如果在该分区上安装了操作系统,必须重新安装它才能使用该系统。请注意，一些预装了操作系统的计算机可能不包括安装介质来重新安装原始操作系统。在销毁原始分区及其操作系统安装
[*前*]{.emphasis}，您应该检查这是否适合您的系统。
:::
为现有操作系统创建一个更小的分区后，您可以重新安装软件，恢复您的数据并启动
Red Hat Enterprise Linux 安装。
::: figure
[]{#strategies-for-repartitioning-a-disk_managing-file-systems.html#idm139895594810480}
**图 19.3. 在磁盘上进行破坏性重新分区动作**
::: figure-contents
::: mediaobject
![dstrct reprt](images/dstrct-reprt.png)
:::
:::
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
原有分区中的数据将会丢失。
:::
:::
::: section
::: titlepage
## []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#_non_destructive_repartitioning}非破坏性重新分区 {.title}
:::
通过非破坏性重新分区，您可以执行一个程序，使大分区变小，而又不会丢失该分区中存储的任何文件。这个方法通常是可靠的，但在大型驱动器上可能非常耗时。
非破坏性重新分区过程很简单，它由三个步骤组成：
::: orderedlist
1.  压缩和备份现存数据
2.  重新划分现存分区的大小
3.  创建新分区
:::
每个步骤都会详细介绍。
::: section
::: titlepage
### []{#strategies-for-repartitioning-a-disk_managing-file-systems.html#_compressing_existing_data}压缩现有数据 {.title}
:::
第一步要压缩现存分区上的数据。这样做的原因是重新安排数据，以最大化分区\"结尾\"处的可用空间。
::: figure
[]{#strategies-for-repartitioning-a-disk_managing-file-systems.html#idm139895592788336}
**图 19.4. 磁盘压缩**
::: figure-contents
::: mediaobject
![compression](images/compression.png)
:::
:::
:::
在上例中，第一个图代表压缩前的磁盘，第二个图表代表压缩后的磁盘。