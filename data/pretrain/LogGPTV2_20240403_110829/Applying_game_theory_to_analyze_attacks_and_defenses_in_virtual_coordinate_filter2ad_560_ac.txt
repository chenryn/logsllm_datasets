error when calculating the payoff functions. We do not only
collect median values for the error metrics, but also the 5th
and 95th percentile errors. We deﬁne the following games:
• Game 1: we use the 5th percentile for calculating the
attacker’s payoff, as the aim of the attacker is to have
as large of an impact on the system as possible. At the
same time, the defender wants to protect as many nodes
as possible, with the goal of minimizing the impact on
the system and maintaining a low 95th percentile error.
• Game 2: we use the median error nodes for both players
as this provides an average overview of the strategic
situation of the system.
The payoff functions for Game 1 and Game 2 are summa-
rized in Table I. The usage of the different payoff functions
and the corresponding evaluation of the attack and defense
strategies are shown in Section VI.
Analysis of spatial outlier detection with adaptive thresh-
old selection. We use the system prediction error (Errorpred)
and the evaluation of the threshold due to the closed-loop feed-
back control as the basis for the following payoff functions:
Prediction error based payoffs:
Pattacker = Errorpred, Pdef ender = −Errorpred
Pattacker describes the gain of the attacker in direct relation
to the median prediction error. If the prediction error increases,
the payoff increases as well. Pdef ender describes the gain of
the defender in negative relation to the median prediction error.
If the prediction error increases, the gain of the defender will
decrease.
Threshold evaluation based payoffs:
Pattacker = Tavg, Pdef ender = −Errorpred
For the attacker, Pattacker describes the gain in direct relation
to the averaged dynamic threshold. Due to the closed-loop
control the threshold changes over all updates in a simulation
run, we then take the average value of the evaluation of
the threshold value. From the attacker’s perspective, his goal
is that the threshold remains high, so the probability that
his attacks remain undetected is higher than with a smaller
threshold. For the defender, Pdef ender describes the gain in
negative relation to the median prediction error as in the
previous payoff function. We do not take into consideration
the threshold for defender’s gain as the defender wants the
prediction error to be low and that
the system converges
independent of what value the threshold has. We deﬁne the
following games:
• Game 3: we use the Errorpred as attacker payoff, as
we assume that
the attacker wants to have as much
impact on the network as possible. For the defender we
use −Errorpred as the defender wants to have a good
functioning system with a low error. In both cases, we
use the median prediction error.
• Game 4: we use the Tavg as payoff for the attacker, in
this case, we assume the attacker to not only want to
disturb the network but also to remain undetected of the
dynamic threshold, so that the attacks still have impact
on the network. The defender uses again the −Errorpred
as payoff, as for the defender it is not of great importance
what value the threshold has, but mainly that the system
is working ﬁne, assuming a low median prediction error.
The payoff functions for Game 3 and Game 4 are summa-
rized in Table I. The usage of the different payoff functions
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:28:05 UTC from IEEE Xplore.  Restrictions apply. 
138THE DIFFERENT GAMES AND PAYOFF FUNCTIONS OVERVIEW
Defender payoff
Attacker payoff
TABLE I
1
1
Pattacker 5th pred =
Pattacker 5threl =
Pattacker 50th pred =
Pattacker 50threl =
5thErrorpred
% attackers
5thErrorrel
% attackers
50thErrorpred
% attackers
50thErrorrel
% attackers
Scenario
ﬁxed threshold
Game 1
Pdef ender 95thpred = −95thErrorpred
Pdef ender 95threl =
95thErrorrel
Pdef ender 50thpred = −50thErrorpred
Pdef ender 50threl =
Pdef ender = −Errorpred
Pdef ender = −Errorpred
50thErrorrel
Game 2
Game 3
Game 4
and the corresponding evaluation of the attack and defense
strategies are shown in Section VI.
VI. EXPERIMENTAL RESULTS
In this section, we demonstrate through simulations using
actual Internet topologies and quantitative analysis using game
theory techniques the efﬁcacy of different attacks at impacting
the accuracy of the Vivaldi virtual coordinate system and of
our defense mechanisms at preserving its ability to maintain
accurate latency estimates.
A. Evaluation Methodology
In order to simulate the attack and defense strategies, we
use the King [17] and AMP [18] data sets in conjunction with
the p2psim simulator [19]. The King data set contains the pair-
wise RTT of 1740 nodes with an average RTT of 180ms and
was selected since it is representative of larger scale peer-to-
peer systems and has been used in validating several virtual
coordinate systems. The AMP data set consists of the pair-
wise RTT of 90 nodes with an average RTT of 70ms and
it is used to represent smaller, high speed systems (e.g., a
corporate network). Synthetic topologies are not considered
as they do not capture important network properties inherent
in real networks such as violations of the triangle inequality.
We ran simulations for each combination of attack type and
defense strategy described in Section III. We ran each simula-
tion for 200 time units, where each time unit is 500 seconds in
length. Every simulation was run ten times with the reported
metrics averaged over all of the runs. The nodes join in a ﬂash-
crowd scenario in which all nodes join simultaneously and are
initially placed at the origin of the logical coordinate space. All
nodes that join the network are physically stationary and are
present for the duration of the experiment. Each node proceeds
independently of other nodes and chooses a reference set of
64 nodes using the Vivaldi method where half of the nodes are
selected as the closest nodes based on network latency and the
rest are selected at random. All other Vivaldi parameters were
initialized to the optimal values discussed by Dabek et al. [8].
B. King Data Set Analysis
Analysis for the different outlier detection defense mech-
anisms with ﬁxed threshold. We ﬁrst analyze the effect
of using different spatial outlier thresholds on the Vivaldi
virtual coordinate system running over the King topology. In
Table IV, we can see the Nash equilibrium using Game 1 as
deﬁned in Table I in Section V-B. From the results, we see that
the inﬂation attack has a large impact on the system. Under
Pattacker = Errorpred
Pattacker = Tavg
adaptive threshold
this attack, we ﬁnd that the most efﬁcient defense strategy
is spatial-temporal outlier detection when using lower spatial
outlier thresholds (e.g., ≤ 1.5). For higher thresholds, both
spatial-temporal outlier detection and spatial outlier detection
provide similar defense performance. We note that temporal
outlier detection is ineffective as it never appears as part of
one of the equilibria.
In Table V, we present the Nash equilibrium using Game 2.
Depending on the threshold selected, either the spatial outlier
detection or the spatial-temporal outlier detection defense tech-
niques provide the best performance and are thus employed
in the resulting Nash equilibrium. Based on the evaluations
of both Game 1 and Game 2, we conclude that the inﬂation
attack has the greatest potential to impact the virtual coordinate
system. It is interesting to note that for lower outlier thresholds
(≤ 1.5), the attack is most effective for smaller percentages of
malicious nodes as the effort to create larger attacks leads to
diminishing returns. Only the higher threshold of 1.75 allows
the inﬂation attack with 30% malicious nodes to be effective
and appear as an equilibrium, allowing us to conclude this
threshold is less effective at mitigating the effects of the
attacker. Finally, similar to Game 1, we notice that temporal
outlier detection does not appear in an equilibrium and we thus
conclude that this type of outlier detection is not an effective
countermeasure when used by itself.
We also analyze the best defenses against
the different
attacks when using a spatial outlier threshold of 1.5, as this
value was suggested by previous research [6]. For the deﬂation
attack, the optimal defense strategy is to use spatial outlier
detection as it results in a pure equilibrium for both the
prediction error and the relative error. The spatial-temporal
outlier detection is the best defensive mechanism against the
oscillation attack regarding both error metrics. Evaluations
based on Game 1 show that spatial outlier detection performs
similarly. For the inﬂation attack, we have a different defense
strategy resulting in a pure equilibrium for each of the games.
For Game 1, spatial-temporal outlier detection represents the
pure equilibrium, while in Game 2, spatial outlier detection
represents the equilibrium. Furthermore, we assess the thresh-
old selection for this data set, and ﬁnd independent of the game
or the error metric, that a threshold value of 1.25 always results
in a pure equilibrium, making this the best threshold.
The previous results, which are based on the Nash equi-
librium, assume that the players are completely rational. As
this cannot be guaranteed, we use a secondary evaluation
to determine how irrational the players can act while still
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:28:05 UTC from IEEE Xplore.  Restrictions apply. 
139OVERVIEW OF THE GAME FOR THE DIFFERENT OUTLIER DETECTION DEFENSES WITH FIXED THRESHOLD
TABLE II
Player
Strategy
Defender
Attacker
Spatial
Temporal
10%
Spatial-Temporal
Inﬂation
Deﬂation
Oscillation
Inﬂation
Deﬂation
Oscillation
Inﬂation
Deﬂation
Oscillation
20%
30%
border value
median value
Pdef 95th pred = −95thErrorpred
Pdef 50thpred = −50thErrorpred
Payoff function
Pdef 95threl =
1
95thErrorrel
Pdef 50threl =
1
50thErrorrel
Patt 5thpred =
5thErrorpred
% mal. nodes
Patt 50thpred =
50thErrorpred
% mal. nodes
Patt 5threl =
5thErrorrel
% mal. nodes
Patt 50th rel =
50thErrorrel
% mal. nodes
OVERVIEW OF THE GAME ANALYSIS FOR SPATIAL OUTLIER DETECTION WITH ADAPTIVE THRESHOLD
TABLE III
Player
Defender
Attacker
Strategy
c = 0
25th Percentile
50th Percentile
75th Percentile
10%
20%
30%
c = (0.04, 0.06, 0.08, 0.1)
c = (0.04, 0.06, 0.08, 0.1)
c = (0.04, 0.06, 0.08, 0.1)
(Inﬂation, Deﬂation, Oscillation)
(Inﬂation, Deﬂation, Oscillation)
(Inﬂation, Deﬂation, Oscillation)
Payoff function
Error evaluation
Threshold evaluation
Pdef = −Errorpred
Patt = Errorpred
Patt = Tavg
(a) Prediction error
(b) Relative error
Fig. 2. The Quantal Response Equilibrium evaluation for the King data set based on Game 1
maintaining the same optimal equilibrium proﬁles. In Figure 2,
we present the regular QRE (as described in Section V-A) for
the data set. The y-axis represents the probability for a strategy
for a given λ. We notice that when considering the prediction
error (Figure 2(a)), the QRE converges to the Nash equilibrium
for λ → 0, implying that even if the attacker is irrational, he
will follow the Nash equilibrium with respect to the prediction
error. Regarding the relative error, the QRE converges to the
Nash equilibrium for λ ≈ 300(Figure 2(b)) which means that
the strategies in relation to the relative errors also converge
fast to the Nash Equilibrium as 0 < λ < ∞. Using this metric
as the basis of the payoff function, an irrational attacker will
diverge from the Nash Equilibrium, but as it becomes more
rational, it quickly follows the optimal identiﬁed strategy.
Analysis for the spatial-temporal outlier detection with
adaptive spatial threshold. In the previous analysis, we
observed that the best defense mechanism is to apply spatial-
TABLE IV
KING - EQUILIBRIUM POINTS BASED ON Game 1
Nash equilibrium strategy proﬁle
Threshold
1.25
1.5
1.75
Error
metric
pred. error
rel. error
pred. error
rel. error
pred. error
rel. error
proﬁle
pure
pure
pure