## 制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务    
### 作者            
digoal            
### 日期            
2023-07-10            
### 标签            
PostgreSQL , PolarDB , docker , 插件          
----            
## 背景            
制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务.   
推荐使用Dockfile和docker build来构建镜像. 使用容器 + docker commit构建的镜像非常大.    
插件如下:   
```
postgres=# create extension 
Display all 104 possibilities? (y or n)
address_standardizer              hdfs_fdw                          pgcrypto                          pg_surgery                        powa
"address_standardizer-3"          hll                               pg_dirtyread                      pg_trgm                           q3c
address_standardizer_data_us      hstore                            pgfincore                         pg_visibility                     refint
"address_standardizer_data_us-3"  hypopg                            pg_freespacemap                   pg_wait_sampling                  roaringbitmap
adminpack                         insert_username                   pg_jieba                          pg_walinspect                     rum
amcheck                           intagg                            pgpool_adm                        pldbgapi                          seg
autoinc                           intarray                          pgpool_recovery                   plprofiler                        smlar
bloom                             ip4r                              pgpool_regclass                   plr                               sslinfo
btree_gin                         isn                               pg_prewarm                        pointcloud                        tablefunc
btree_gist                        lo                                pg_qualstats                      pointcloud_postgis                table_log
citext                            ltree                             pg_repack                         postgis                           tcn
cube                              moddatetime                       pgroonga                          "postgis-3"                       tdigest
dblink                            mysql_fdw                         pgroonga_database                 postgis_raster                    timescaledb
dict_int                          ogr_fdw                           pgrouting                         "postgis_raster-3"                timescaledb_toolkit
dict_xsyn                         old_snapshot                      pgrowlocks                        postgis_sfcgal                    tsm_system_rows
duckdb_fdw                        oracle_fdw                        pg_show_plans                     "postgis_sfcgal-3"                tsm_system_time
earthdistance                     orafce                            pg_similarity                     postgis_tiger_geocoder            unaccent
extra_window_functions            pageinspect                       pg_sphere                         "postgis_tiger_geocoder-3"        "uuid-ossp"
file_fdw                          parray_gin                        pg_stat_kcache                    postgis_topology                  vector
first_last_agg                    pgaudit                           pg_stat_statements                "postgis_topology-3"              xml2
fuzzystrmatch                     pg_buffercache                    pgstattuple                       postgres_fdw      
```
## 例子  
本文图方便使用容器 + docker commit构建的镜像. 非常大.    
使用debian上一个稳定版作为基础镜像.    
```  
docker pull debian:oldstable  
IT-C02YW2EFLVDL:~ digoal$ docker images  
REPOSITORY   TAG             IMAGE ID       CREATED      SIZE  
debian       oldstable       b3b1ed8e0d05   6 days ago   124MB  
```  
启动并进入debian容器  
```  
docker run -it --name debian debian:oldstable /bin/bash  
```  
配置国内源  
```  
sed -i "s@http://\(deb\|security\).debian.org@http://mirrors.aliyun.com@g" /etc/apt/sources.list    
apt update    
apt-get reinstall -y apt-transport-https ca-certificates     
sed -i "s@http://mirrors.aliyun.com@https://mirrors.aliyun.com@g" /etc/apt/sources.list    
apt update    
```  
安装postgresql-15  
```  
apt install -y lsb-release wget vim man   
sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'  
apt-get install -y gnupg2  
apt-get update  
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -  
apt-get update  
apt-get install -y locales   
localedef -i en_US -f UTF-8 en_US.UTF-8  
apt-get -y install postgresql-15 postgresql-client-15 libpq-dev postgresql-server-dev-15 postgresql-doc-15 postgresql-contrib  
```  
安装postgresql常见插件  
```  
apt search postgres|grep postgresql-15|grep -v dbgsym|grep -v "debug symbols"  
apt-get -y install postgresql-15-dirtyread postgresql-15-extra-window-functions postgresql-15-first-last-agg postgresql-15-hll postgresql-15-hypopg postgresql-15-ip4r postgresql-15-mysql-fdw postgresql-15-ogr-fdw postgresql-15-oracle-fdw postgresql-15-orafce postgresql-15-pg-qualstats postgresql-15-pg-stat-kcache postgresql-15-pg-wait-sampling postgresql-15-pgfincore postgresql-15-pgaudit postgresql-15-pgpool2 postgresql-15-pgrouting postgresql-15-pgrouting-doc postgresql-15-pgrouting-scripts postgresql-15-pgsphere postgresql-15-pgvector postgresql-15-pldebugger postgresql-15-pointcloud postgresql-15-plr postgresql-15-postgis-3 postgresql-15-postgis-3-scripts postgresql-15-powa postgresql-15-q3c postgresql-15-repack postgresql-15-rum postgresql-15-show-plans postgresql-15-similarity postgresql-15-tablelog postgresql-15-tdigest postgresql-15-wal2json postgresql-15-plprofiler pgagroal pgpool2 pgbouncer pgxnclient   
```  
timescaledb  
```  
echo "deb https://packagecloud.io/timescale/timescaledb/debian/ $(lsb_release -c -s) main" | tee /etc/apt/sources.list.d/timescaledb.list  
wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | gpg --dearmor -o /etc/apt/trusted.gpg.d/timescaledb.gpg  
apt update  
apt install -y timescaledb-2-postgresql-15  
```  
groonga, 任意语言, 任意字符个数的模糊查询插件  
```  
wget https://packages.groonga.org/debian/groonga-apt-source-latest-bullseye.deb  
apt install -y -V ./groonga-apt-source-latest-bullseye.deb  
apt update  
apt install -y postgresql-15-pgdg-pgroonga  
```  
配置环境变量  
```  
su - root  
vi ~/.bashrc      
#  add by digoal      
alias rm='rm -i'      
alias cp='cp -i'      
alias ll='ls -larth'      
alias mv='mv -i'  
export PGHOME=/usr/lib/postgresql/15  
export PATH=$PGHOME/bin:$PATH      
export LD_LIBRARY_PATH=$PGHOME/lib:$LD_LIBRARY_PATH  
export PGDATA=/var/lib/postgresql/15/pgdata     
export PGUSER=postgres      
export PGHOST=$PGDATA      
export PGPORT=1921      
export PGDATABASE=postgres      
export LC_ALL=en_US.UTF-8  
su - postgres  
vi ~/.bash_profile    
#  add by digoal      
alias rm='rm -i'      
alias cp='cp -i'      
alias ll='ls -larth'      
alias mv='mv -i'  
export PGHOME=/usr/lib/postgresql/15  
export PATH=$PGHOME/bin:$PATH      
export LD_LIBRARY_PATH=$PGHOME/lib:$LD_LIBRARY_PATH  
export PGDATA=/var/lib/postgresql/15/pgdata     
export PGUSER=postgres      
export PGHOST=$PGDATA      
export PGPORT=1921      
export PGDATABASE=postgres      
export LC_ALL=en_US.UTF-8  
```  
还有几个插件需要手工安装, 没有在apt里面.   
结巴分词  
```  
apt install -y git cmake  
cd ~  
git clone --depth 1 https://github.com/jaiminpan/pg_jieba  
cd pg_jieba  
git submodule update --init --recursive  
mkdir build  
cd build  
cmake -DPostgreSQL_TYPE_INCLUDE_DIR=/usr/include/postgresql/15/server ..  
make  
make install  
```  
rb  
```  
cd ~  
git clone --depth 1 https://github.com/ChenHuajun/pg_roaringbitmap  
cd pg_roaringbitmap  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
parray_gin  
```  
cd ~  
git clone --depth 1 https://github.com/theirix/parray_gin  
cd parray_gin  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
相似搜索  
```  
cd ~  
git clone --depth 1 https://github.com/jirutka/smlar  
cd smlar  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
duckdb fdw  
```  
cd ~  
git clone --depth 1 https://github.com/alitrack/duckdb_fdw  
cd duckdb_fdw  
wget https://github.com/duckdb/duckdb/releases/download/v0.8.1/libduckdb-linux-amd64.zip  
unzip -d . libduckdb-linux-amd64.zip   
cp libduckdb.so $(pg_config --libdir)   
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
hdfs_fdw  
```  
cd ~  
apt-get install -y default-jre  