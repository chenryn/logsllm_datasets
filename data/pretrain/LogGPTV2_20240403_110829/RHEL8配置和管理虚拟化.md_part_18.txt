:::
::: itemizedlist
-   您还可以将虚拟机从非 KVM 系统管理程序迁移到 RHEL 7 或 RHEL 8
    主机。这也称为 `V2V 转换`{.literal}，您可以在
    [红帽知识库](https://access.redhat.com/articles/1351473){.link}
    中找到其他信息和说明。
:::
:::
:::
[]{#managing-virtual-devices_configuring-and-managing-virtualization.html}
::: chapter
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#managing-virtual-devices_configuring-and-managing-virtualization}第 10 章 管理虚拟设备 {.title}
:::
管理虚拟机功能、特性和性能的最有效的方法之一是调整其[*虚拟设备*]{.emphasis}。
以下小节[介绍了虚拟设备的一般信息](#managing-virtual-devices_configuring-and-managing-virtualization.html#how-virtual-devices-work_managing-virtual-devices "虚拟设备的工作原理"){.link}，以及如何从虚拟机中
[附加](#managing-virtual-devices_configuring-and-managing-virtualization.html#attaching-devices-to-virtual-machines_managing-virtual-devices "将设备附加到虚拟机"){.link}、[修改](#managing-virtual-devices_configuring-and-managing-virtualization.html#attaching-devices-to-virtual-machines_managing-virtual-devices "将设备附加到虚拟机"){.link}或
[删除](#managing-virtual-devices_configuring-and-managing-virtualization.html#removing-devices-from-virtual-machines_managing-virtual-devices "从虚拟机中删除设备"){.link}它们的说明。
::: section
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#how-virtual-devices-work_managing-virtual-devices}虚拟设备的工作原理 {.title}
:::
::: title
**基础知识**
:::
与物理机一样，虚拟机(VM)也要求专门的设备为系统提供功能，如处理能力、内存、存储、网络或图形。物理系统通常将硬件设备用于这些目的。但是，由于虚拟机作为软件实施而工作，因此它们需要使用此类设备的软件抽象，称为
[*虚拟设备*]{.emphasis}。
附加到虚拟机的虚拟设备可在[创建虚拟机时](#getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization.html#assembly_creating-virtual-machines_virt-getting-started "创建虚拟机"){.link}配置，也可以在现有虚拟机上管理。通常，只能在虚拟机关闭时从虚拟机连接或分离虚拟设备，但某些设备可在虚拟机运行时添加或删除。这个功能被称为设备[*热插（hot
plug）*]{.emphasis}和[*热拔（hot unplug）*]{.emphasis}。
创建新虚拟机时，lib `virt 会自动`{.literal}
创建和配置一组默认的基本虚拟设备，除非用户另有指定。它们基于主机系统架构和机器类型，通常包括：
::: itemizedlist
-   CPU
-   内存
-   键盘
-   网络接口控制器（NIC）
-   各种设备控制器
-   一个视频卡
-   一个声卡
:::
要在创建虚拟机后管理虚拟设备，请使用命令行界面(CLI)。但是，若要管理
[虚拟存储设备](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#managing-storage-for-virtual-machines-using-the-web-console_managing-storage-for-virtual-machines "使用 web 控制台管理虚拟机的存储"){.link}
和
[NIC](#configuring-virtual-machine-network-connections_configuring-and-managing-virtualization.html#managing-virtual-machine-network-interfaces-using-the-web-console_configuring-virtual-machine-network-connections "使用 web 控制台管理虚拟机网络接口"){.link}，也可以使用
RHEL 8 web 控制台。
::: title
**性能或灵活性**
:::
对于某些类型的设备，RHEL 8 支持多种实施，通常会在性能和灵活性之间权衡。
例如，用于虚拟磁盘的物理存储可以由各种格式的文件（如 `qcow2`{.literal}
或 `raw`{.literal} ）表示，并使用各种控制器向虚拟机显示：
::: itemizedlist
-   模拟控制器
-   `virtio-scsi`{.literal}
-   `virtio-blk`{.literal}
:::
模拟控制器比 `virtio`{.literal} 控制器慢，因为 `virtio`{.literal}
设备专为虚拟化而设计。另一方面，仿真控制器可以运行没有
`virtio`{.literal} 设备驱动程序的操作系统。同样，`virtio-scsi`{.literal}
提供更完整的 SCSI
命令支持，并使得可以将更多磁盘附加到虚拟机。最后，`virtio-blk`{.literal}
比 `virtio-scsi`{.literal}
和仿真控制器提供更好的性能，但使用案例范围更有限。例如，在使用
`virtio-blk`{.literal} 时，无法将物理磁盘作为 LUN 设备附加到虚拟机。
有关虚拟设备类型的详情，请参考
["虚拟设备类型"一节](#managing-virtual-devices_configuring-and-managing-virtualization.html#types-of-virtual-devices_managing-virtual-devices "虚拟设备类型"){.xref}。
::: itemizedlist
**其它资源**
-   有关如何使用 CLI 附加、删除或修改虚拟机存储设备的步骤，请参阅
    [第 11 章
    *为虚拟机管理存储*](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html "第 11 章 为虚拟机管理存储"){.xref}。
-   有关如何使用 Web 控制台管理虚拟机磁盘的说明，请参考 ["使用 web
    控制台管理虚拟机的存储"一节](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#managing-storage-for-virtual-machines-using-the-web-console_managing-storage-for-virtual-machines "使用 web 控制台管理虚拟机的存储"){.xref}。
-   有关如何使用 Web 控制台管理虚拟机 NIC 的说明，请参考 ["使用 web
    控制台管理虚拟机网络接口"一节](#configuring-virtual-machine-network-connections_configuring-and-managing-virtualization.html#managing-virtual-machine-network-interfaces-using-the-web-console_configuring-virtual-machine-network-connections "使用 web 控制台管理虚拟机网络接口"){.xref}。
-   有关如何创建和管理 NVIDIA vGPU 的说明，请参考 ["管理 NVIDIA vGPU
    设备"一节](#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#assembly_managing-nvidia-vgpu-devices_assembly_managing-gpu-devices-in-virtual-machines "管理 NVIDIA vGPU 设备"){.xref}。
:::
:::
::: section
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#proc_viewing-devices-attached-to-virtual-machines-using-the-web-console_managing-virtual-devices}使用 web 控制台查看附加到虚拟机的设备 {.title}
:::
在添加或修改附加到虚拟机(VM)的设备前，您可能需要查看已附加到虚拟机的设备。以下流程提供了使用
Web 控制台查看此类设备的说明。
::: itemizedlist
**先决条件**
-   Web 控制台 VM 插件
    [已安装在您的系统上](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html#setting-up-the-rhel-web-console-to-manage-vms_managing-virtual-machines-in-the-web-console "设置 web 控制台以管理虚拟机"){.link}。
:::
::: orderedlist
**流程**
1.  在 [Virtual Machines]{.guimenu} 界面中，点击您要查看的信息的虚拟机。
    此时将打开一个新页面，其中包含有关虚拟机的详细信息。
    ::: informalfigure
    ::: mediaobject
    ![显示虚拟机接口的页面.](images/virt-cockpit-VM-details.png)
    :::
    :::
2.  滚动到 [**Host devices**]{.strong} 部分。
    ::: informalfigure
    ::: mediaobject
    ![显示虚拟机主机设备部分的页面。](images/virt-cockpit-host-devices.png)
    :::
    :::
:::
::: itemizedlist
**其它资源**
-   有关附加或删除虚拟设备的详情请参考 [第 10 章
    *管理虚拟设备*](#managing-virtual-devices_configuring-and-managing-virtualization.html "第 10 章 管理虚拟设备"){.xref}。
:::
:::
::: section
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#attaching-devices-to-virtual-machines_managing-virtual-devices}将设备附加到虚拟机 {.title}
:::
您可以通过附加新的虚拟设备来向虚拟机(VM)添加特定的功能。例如，您可以通过将新虚拟磁盘设备附加到虚拟机来增加虚拟机的存储容量。
以下流程使用命令行界面(CLI)演示如何创建虚拟设备并将其附加到虚拟机(VM)。还可[使用
RHEL 8 web
控制台](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html "第 5 章 在 web 控制台中管理虚拟机"){.link}将一些设备附加到虚拟机。
::: itemizedlist
**先决条件**
-   获取您要附加到虚拟机的设备所需的选项。要查看特定设备的可用选项，请使用
    `virt-xml --device=?`{.literal} 命令。例如：
    ``` literallayout
    # virt-xml --network=?
    --network options:
    [...]
    address.unit
    boot_order
    clearxml
    driver_name
    [...]
    ```
:::
::: orderedlist
**流程**
1.  要将设备附加到虚拟机，请使用 `virt-xml --add-device`{.literal}
    命令，包括该设备和所需选项的定义：
    ::: itemizedlist
    -   例如，以下命令会在 `/var/lib/libvirt/images/`{.literal}
        目录中创建一个 20GB [*newdisk*]{.emphasis} qcow2
        磁盘镜像，并将它作为虚拟磁盘附加到虚拟机启动时运行的
        [*testguest*]{.emphasis} 虚拟机：
        ``` literallayout
        # virt-xml testguest --add-device --disk /var/lib/libvirt/images/newdisk.qcow2,format=qcow2,size=20
        Domain 'testguest' defined successfully.
        Changes will take effect after the domain is fully powered off.
        ```
    -   在虚拟机运行时，下面的命令会将一个 USB 盘（在主机的 002
        总线中作为设备 004）附加到 [*testguest2*]{.emphasis} 虚拟机：
        ``` literallayout
        # virt-xml testguest2 --add-device --update --hostdev 002.004
        Device hotplug successful.
        Domain 'testguest2' defined successfully.
        ```
        可以使用 `lsusb`{.literal} 命令获取用于定义 USB 的 bus-device
        组合。
    :::
:::
::: title
**验证**
:::
要验证该设备是否已添加，请执行以下操作之一：
::: itemizedlist
-   使用 `virsh dumpxml`{.literal} 命令，并查看该设备的 XML
    定义是否已添加到虚拟机 XML 配置的 ` 部分`{.literal}。
    例如，以下输出显示了 [*testguest*]{.emphasis}
    虚拟机的配置，并确认已添加了 002.004 USB 闪存磁盘设备。
    ``` literallayout
    # virsh dumpxml testguest
    [...]
    [...]
    ```
-   运行虚拟机并测试该设备是否存在并正常工作。
:::
::: itemizedlist
**其它资源**
-   有关使用 `virt-xml`{.literal} 命令的详情，请使用
    `man virt-xml`{.literal}。
:::
:::
::: section
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#modifying-devices-attached-to-virtual-machines_managing-virtual-devices}修改附加到虚拟机的设备 {.title}
:::
您可以通过编辑附加的虚拟设备的配置来更改虚拟机(VM)的功能。例如，如果您想要优化虚拟机的性能，您可以更改其虚拟
CPU 模型以更好地与主机的 CPU 匹配。
以下流程提供了使用命令行界面(CLI)修改虚拟设备的常规说明。还可以 [使用
RHEL 8 web
控制台](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html "第 5 章 在 web 控制台中管理虚拟机"){.link}
修改附加到虚拟机的某些设备，如磁盘和 NIC。
::: itemizedlist
**先决条件**
-   获取您要附加到虚拟机的设备所需的选项。要查看特定设备的可用选项，请使用
    `virt-xml --device=?`{.literal} 命令。例如：
:::
``` literallayout
# virt-xml --network=?
--network options:
[...]
address.unit
boot_order
clearxml
driver_name
[...]
```
::: itemizedlist
-   [**可选：**]{.strong} 使用 `virsh dumpxml vm-name`{.literal}
    备份虚拟机的 XML 配置，并将输出发送到文件。例如，以下方法将
    [*Motoko*]{.emphasis} 虚拟机的配置备份为 `motoko.xml`{.literal}
    文件：
:::
``` literallayout
# virsh dumpxml Motoko > motoko.xml
# cat motoko.xml
  Motoko
  ede29304-fe0c-4ca4-abcd-d246481acd18
  [...]
```