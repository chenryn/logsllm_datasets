---
author: Seth Kenlon
category: 技术
comments_data:
- date: '2019-01-14 11:37:31'
  message: sdf j
  postip: 36.34.85.175
  username: 来自安徽的 Firefox 52.0|GNU/Linux 用户
- date: '2021-11-22 20:01:04'
  message: 很好的udev介绍
  postip: 101.207.8.4
  username: 来自四川的 Chrome 96.0|Windows 10 用户
- date: '2022-07-01 11:26:14'
  message: '6666'
  postip: 39.170.12.120
  username: 来自39.170.12.120的 Chrome 102.0|Windows 10 用户
count:
  commentnum: 3
  favtimes: 1
  likes: 0
  sharetimes: 1
  viewnum: 8292
date: '2018-12-09 22:12:08'
editorchoice: false
excerpt: 创建这样一个脚本，当指定的设备插入时触发你的计算机去做一个指定动作。
fromurl: https://opensource.com/article/18/11/udev
id: 10329
islctt: true
largepic: /data/attachment/album/201812/09/221138aqmuwpuu5uxlw85w.jpg
permalink: /article-10329-1.html
pic: /data/attachment/album/201812/09/221138aqmuwpuu5uxlw85w.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 创建这样一个脚本，当指定的设备插入时触发你的计算机去做一个指定动作。
tags:
- udev
- 设备
thumb: false
title: udev 入门：管理设备事件的 Linux 子系统
titlepic: true
translator: qhwdw
updated: '2018-12-09 22:12:08'
---
> 
> 创建这样一个脚本，当指定的设备插入时触发你的计算机去做一个指定动作。
> 
> 
> 
![](/data/attachment/album/201812/09/221138aqmuwpuu5uxlw85w.jpg)
udev 是一个为你的计算机提供设备事件的 Linux 子系统。通俗来讲就是，当你的计算机上插入了像网卡、外置硬盘（包括 U 盘）、鼠标、键盘、游戏操纵杆和手柄、DVD-ROM 驱动器等等设备时，代码能够检测到它们。这样就能写出很多可能非常有用的实用程序，而它已经很好了，普通用户就可以写出脚本去做一些事情，比如当某个硬盘驱动器插入时，执行某个任务。
这篇文章教你去如何写一个由一些 udev 事件触发的 [udev](https://linux.die.net/man/8/udev) 脚本，比如插入了一个 U 盘。当你理解了 udev 的工作原理，你就可以用它去做各种事情，比如当一个游戏手柄连接后加载一个指定的驱动程序，或者当你用于备份的驱动器连接后，自动执行备份工作。
### 一个初级的脚本
使用 udev 的最佳方式是从一个小的代码块开始。不要指望从一开始就写出完整的脚本，而是从最简单的确认 udev 触发了某些指定的事件开始。
对于你的脚本，依据你的目标，并不是在任何情况下都能保证你亲眼看到你的脚本运行结果的，因此需要在你的脚本日志中确认它成功触发了。而日志文件通常放在 `/var` 目录下，但那个目录通常是 root 用户的领地。对于测试目的，可以使用 `/tmp`，它可以被普通用户访问并且在重启动后就被清除了。
打开你喜欢的文本编辑器，然后输入下面的简单脚本：
```
#!/usr/bin/bash
echo $date > /tmp/udev.log
```
把这个脚本放在 `/usr/local/bin` 或缺省可运行路径的位置中。将它命名为 `trigger.sh`，并运行 `chmod +x` 授予可运行权限：
```
$ sudo mv trigger.sh /usr/local/bin
$ sudo chmod +x /usr/local/bin/trigger.sh
```
这个脚本没有任何和 udev 有关的事情。当它运行时，这个脚本将在文件 `/tmp/udev.log` 中放入当前的时间戳。你可以自己测试一下这个脚本：
```
$ /usr/local/bin/trigger.sh
$ cat /tmp/udev.log
Tue Oct 31 01:05:28 NZDT 2035
```
接下来让 udev 去触发这个脚本。
### 唯一设备识别
为了让你的脚本能够被一个设备事件触发，udev 必须要知道在什么情况下调用该脚本。在现实中，你可以通过它的颜色、制造商、以及插入到你的计算机这一事实来识别一个 U 盘。而你的计算机，它需要一系列不同的标准。
udev 通过序列号、制造商、以及提供商 ID 和产品 ID 号来识别设备。由于现在你的 udev 脚本还处于它的生命周期的早期阶段，因此要尽可能地宽泛、非特定和包容。换句话说就是，你希望首先去捕获尽可能多的有效 udev 事件来触发你的脚本。
使用 `udevadm monitor` 命令你可以实时利用 udev，并且可以看到当你插入不同设备时发生了什么。用 root 权限试一试。
```
$ su
# udevadm monitor
```
该监视函数输出接收到的事件：
* UDEV：在规则处理之后发出 udev 事件
* KERNEL：内核发送 uevent 事件
在 `udevadm monitor` 命令运行时，插入一个 U 盘，你将看到各种信息在你的屏幕上滚动而出。注意那一个 `ADD` 事件的事件类型。这是你所需要的识别事件类型的一个好方法。
`udevadm monitor` 命令提供了许多很好的信息，但是你可以使用 `udevadm info` 命令以更好看的格式来看到它，假如你知道你的 U 盘当前已经位于你的 `/dev` 树。如果不在这个树下，拔下它并重新插入，然后立即运行这个命令：
```
$ su -c 'dmesg | tail | fgrep -i sd*'
```
举例来说，如果那个命令返回 `sdb: sdb1`，说明内核已经给你的 U 盘分配了 `sdb` 卷标。
或者，你可以使用 `lsblk` 命令去查看所有连接到你的系统上的驱动器，包括它的大小和分区。
现在，你的驱动器已经处于你的文件系统中了，你可以使用下面的命令去查看那个设备的相关 udev 信息：
```
# udevadm info -a -n /dev/sdb | less
```
这个命令将返回许多信息。现在我们只关心信息中的第一个块。
你的任务是从 udev 的报告中找出能唯一标识那个设备的部分，然后当计算机检测到这些唯一属性时，告诉 udev 去触发你的脚本。
`udevadm info` 命令处理一个（由设备路径指定的）设备上的报告，接着“遍历”父级设备链。对于找到的大多数设备，它以一个“键值对”格式输出所有可能的属性。你可以写一个规则，从一个单个的父级设备属性上去匹配插入设备的属性。
```
looking at device '/devices/000:000/blah/blah//block/sdb':
  KERNEL=="sdb"
  SUBSYSTEM=="block"
  DRIVER==""
  ATTR{ro}=="0"
  ATTR{size}=="125722368"
  ATTR{stat}==" 2765 1537 5393"