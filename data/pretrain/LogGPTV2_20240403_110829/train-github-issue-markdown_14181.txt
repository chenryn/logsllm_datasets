**Issue Type** (Select one with "x")
- [X] Bug Report => Please search GitHub for a similar issue or PR before submitting.
- [ ] Feature Request
- [ ] Support Request => Please do not submit support requests here. Instead, see [CONTRIBUTING.md](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question).

**Current Behavior**
In my component, I have the following `@ViewChild` decorator:
```typescript
@ViewChild(AccountFormComponent)
form: AccountFormComponent;
```
And in the template, I have a button:
```html
<button (click)="save()">Save</button>
```
After the component is rendered, change detection stops completely. I traced this issue to the `onMicrotaskEmpty` subscription in the `apprefs` zone, which has stopped:
```typescript
this._zone.onMicrotaskEmpty.subscribe({
  next: () => {
    this._zone.run(() => {
      this.tick();
    });
  }
});
```
The reason is that `this.tick()` throws an error:
```plaintext
Error: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: 'true'. Current value: 'false'.
    at viewDebugError (core.es5.js:8625) [angular]
    at expressionChangedAfterItHasBeenCheckedError (core.es5.js:8603) [angular]
    at checkBindingNoChanges (core.es5.js:8767) [angular]
    at checkNoChangesNodeInline (core.es5.js:12195) [angular]
    at checkNoChangesNode (core.es5.js:12169) [angular]
    at debugCheckNoChangesNode (core.es5.js:12743) [angular]
    at debugCheckDirectivesFn (core.es5.js:12645) [angular]
    at Object.eval [as updateDirectives] (AccountFormPage.html:4) [angular]
    at Object.debugUpdateDirectives [as updateDirectives] (core.es5.js:12627) [angular]
    at checkNoChangesView (core.es5.js:12027) [angular]
    at callViewAction (core.es5.js:12348) [angular]
    at execComponentViewsAction (core.es5.js:12300) [angular]
    at checkNoChangesView (core.es5.js:12030) [angular]
    at callViewAction (core.es5.js:12348) [angular]
```
This error is caught by `SafeSubscriber.prototype.__tryOrUnsub` and propagated up to `zone.js`. However, the error is caught and swallowed by the `hasTask` function in `zone.js`:
```typescript
ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {
  // hasTask should not throw error so other ZoneDelegate
  // can still trigger hasTask callback
  try {
    return this._hasTaskZS &&
      this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);
  } catch (err) {
  }
};
```
This makes the issue very difficult to debug because change detection simply stops working. I am not entirely sure why this error occurs, as I have seen this error printed out in other cases where change detection continues to work.

**Expected Behavior**
- The error should be logged to the console.
- The `app-ref` should resubscribe to `zone.onMicrotaskEmpty`, which actually did not stop; only the `appref` got unsubscribed.

**Minimal Reproduction of the Problem with Instructions**
I am not certain if the combination of injecting `@ViewChild` and using it in the view in an expression is sufficient to reproduce the issue.

**Motivation / Use Case for Changing the Behavior**
At the very least, some information should be printed to the console to help developers understand what caused change detection to stop. This might also be an issue for `zone.js`.

**Environment**
- OS: macOS
- Angular Version: 4.0.1
- Zone.js Version: 0.8.5
- Browser: Chrome 57