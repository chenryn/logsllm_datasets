s
l
l
e
c
f
o
e
g
a
t
n
e
c
r
e
P
D
r
i
f
t
b
y
1
0
%
D
r
i
f
t
b
y
2
0
%
D
r
i
f
t
b
y
4
0
%
e
c
f
o
e
g
a
t
n
e
c
r
e
P
Small resistance window
Resistance 
III. RESISTANCE DRIFT ON MLC-PCM SYSTEM: 
CHARACTERIZATION AND IMPLICATION 
A. 
MLC-PCM System 
A Characterization of Resistance Drift Dynamics on 
We  develop  an  analytical  model  and  integrate  it  into  the 
microarchitecture  simulator  to  quantify  the  readout  error  rate  of 
MLC-PCM due to resistance drift. Our analytical model is built 
based  upon  Eq-1  to  capture  the  behavior  of  resistance  drift  by 
tracking the dynamic resistance change for each memory cell. It 
takes the following factors as inputs: the initial resistance value 
for  a  logic  level  immediately  after  programming,  memory 
reference  characteristics  and  run-time  chip  temperature.  Our 
simulated memory system consists of a large MLC-PCM serving 
as  main  storage  and  a  small  DRAM  between  MLC-PCM  and 
processor serving as a buffer.  Previous work [2, 3, 14] show that 
such hybrid memory architecture is able to combine the latency 
benefit  of  DRAM  and  the  low-power,  high-density  benefit  of 
PCM. We assume a 2-bit-per-cell, 1GB (2GB effective capacity) 
PCM storage and a 64MB DRAM and both are managed at the 
granularity  of  a  physical  page  size  of  4KB.  For  the  initial 
resistance values used to represent each logic state, we evaluate a 
range of design choices that provide different resistance margins. 
By  doing  so,  we  are  able  to  quantify  how  the  impact  of  drift 
varies  with  the  margin  size.  We  investigate  five  cases  in  which 
the read current margin is increased from 0uA to 2uA with a step 
of 0.5uA and a larger current margin corresponds to the case in 
which a wider resistance margin is employed and vice verse. In 
each  case,  the  resistance  value  assigned  to  each  logic  state  is 
listed  in  Table  2.  Each  logic  state  is  represented  by  a  range  of 
resistance values due to process variation. We use the multi-level 
quad  tree  approach  [15]  to  model  the  correlated  within-die  and 
die-to-die  variations  in  the  resistance  of  each  logic  state  across 
MLCs. We assume that the resistance distribution for each logic 
state  follows  a  normal  distribution  with  a  coefficient  variation 
(σ/µ)  of  17%  which  is  similar  to  the  parameters  in  recent 
prototypes  [8].  Memory  references  to  the  PCM  storage  are 
collected  using  a  cycle-accurate  simulator  (see  Section  V  for 
details) and then feed into the analytical model, which tracks the 
amount  of  erroneous  data  that  is  read  from  the  MLC-PCM 
storage. The data in a cell is considered as corrupted during read 
operations  if  the  cell’s  resistance  value  runs  into  its  adjacent 
resistance  range.  Note  that  we  assume  that  data  can  still  be 
retrieved correctly even if the resistance value of the cell falls in 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:46 UTC from IEEE Xplore.  Restrictions apply. 
199the  margin  between  adjacent  states,  such  as  the  case  shown  in 
Figure  2-c.  Therefore,  our  error-rate  estimation  is  conservative 
and  provides  a  lower  bound  estimation  of  error  rates.  Note  that 
the  readout  reliability  issue  due  to  resistance  drift  is  exposed 
when  data  are  accessed  after  their  most  recent  update.  We 
simulated  a  total  of  27  benchmarks  from  the  NAS  parallel 
benchmarks and SPEC2000 suite, since the good reuse pattern of 
SPEC  workloads  mixed  with  the  large  working  set  of  NAS 
benchmarks create workloads that are suitable for our evaluation. 
Figure  3  shows  the  quantitative  results  on  the  impact  of 
resistance  drift  on  readout  error  rate  for  a  low-temperature  off-
chip  MLC-PCM-based  hybrid  design  and  a  3D  die-stacked  on-
chip  design.  In  the  figure,  the  benchmarks  are  ordered  in 
descending order of their drift-induced error rate along the X-axis 
and  the  absolute  error  rate  (i.e.  the  number  of  erroneous  bits 
divided by the total number of bits read from the PCM storage) is 
shown on the Y-axis.  
16.8%
10%
20% 11%
0uA	
  margin
1.5uA	
  margin
0.5uA	
  margin
2.0uA	
  margin
1uA	
  margin
e
t
a
R
r
o
r
r
E
t
u
o
d
a
e
R
8%
6%
4%
2%
0%
p
i
z
g
p
i
z
b
t
r
a
i
m
w
s
e
k
a
u
q
e
p
m
m
a
s
a
c
u
l
x
e
t
r
o
v
k
c
a
r
t
x
i
s
A
U
f
c
m
p
a
g
u
l
p
p
a
d
i
r
g
m
y
t
f
a
r
c
c
e
r
e
c
a
f
T
B
P
E
T
F
G
M
r
p
v
G
C
U
L
a
s
e
m
d
3
a
m
f
k
m
b
l
r
e
p
g
v
a
p
i
z
g
p
i
z
b
t
r
a
i
m
w
s
e
k
a
u
q
e
p
m
m
a
s
a
c
u
l
x
e
t
r
o
v
k
c
a
r
t
x
i
s
A
U
f
c
m
p
a
g
u
l
p
p
a
d
i
r
g
m
y
t
f
a
r
c
c
e
r
e
c
a
f
T
B
P
E
T
F
G
M
r
p
v
G
C
U
L
a
s
e
m
d
3
a
m
f
k
m
b
l
r
e
p
g
v
a
Low-­‐temperature	
  off-­‐chip
High-­‐temperature	
  3D	
  on-­‐chip
Figure 3. The dependence of read reliability on resistance margin between two adjacent states  
for the low-temperature off-chip design and high-temperature 3D on-chip design 
As  can  be  seen  in  Figure  3,  there  is  a  high  probability  of 
erroneous  readout  when  the  margin  is  too  narrow  (i.e.  0uA  or 
0.5uA margin), since drift can cause the resistance level to shift 
across the margin area from a correct to an incorrect state. With 
an  increased  margin  setting  (i.e.  1.5uA  or  2uA  margin),  the 
likelihood of drift-induced corruption is mitigated, resulting in a 
one or two magnitude order reduction in the error rate. Therefore, 
a  wider  margin  provides  more  tolerance  for  resistance  drift  and 
improves  the  read  reliability.  Moreover,  we  observed  that  the 
simulated  benchmarks  exhibit  a  variety  of  read  reliability 
characteristics as the resistance margin changes. This is because 
the  PCM  drift  dynamics  are  also  affected  by  memory  reference 
and  data  patterns,  both  of  which  are  workload  inherent.  For  the 
former, the memory reference read-to-write latency, which is the 
measurement  of  the  elapsed  time  (i.e.  the  number  of  cycles) 
between read references to a given page on the PCM partition and 
the most recent update to the same page, strongly affects the drift-
induced read reliability since the initial resistance values can be 
restored  upon  on  a  write  operation.  As  drift  causes  resistance 
increases  over  time,  the  higher  the  read-to-write  latency  is,  the 
more  likely  an  erroneous  readout  will  occur.  As  described  in 
Section II.B, resistances drift differently on different logic levels. 
Intermediate  states,  especially  those  with  high  resistance  values 
(such as “01” shown in Figure 2-a), are much more susceptible to 
the  drifting  phenomena.  The  value  pattern,  which  varies  with 
workloads  and  input,  contributes  differently  to  readout  errors 
across  benchmarks.  Besides  time  and  data  pattern  factors, 
resistance  drift  also  shows  significant  temperature  dependence. 
Compared  to  the  low-temperature  off-chip  design,  the  elevated 
temperature  in  the  3D  die-stacked  design  causes  an  up  to  2X 
increase  in  the  error  rate,  as  is  shown  in  Figure  3.  The  higher 
error rate is contributed by the increased drift due to a higher drift 
coefficient.  Hence,  an  even  wider  margin  is  required  to  tolerate 
drift  to  ensure  a  low  bit  error  rate  in  light  of  elevated  chip 
temperature. 
B. 
Tolerance on PCM Power and Endurance 
Implication of Conservative Resistance Drift 
A simple method to improve the readout reliability of MLC-
PCM is to adopt an enlarged resistance margin to guard against 
drift.  To  accommodate  multiple  resistance  levels,  the  gap 
between the minimum and the maximum resistance states needs 
to be increased. As the resistance value of the highest resistance 
state is determined by the active volume size of the GST material 
that is switched to the amorphous state, increasing the level of the 
highest  resistance  requires  a  programming  current  of  higher 
amplitude. To quantify the increase in programming current, we 
use a heat conduction model [16], which captures the flow of heat 
in  the  PCM  device  during  programming  operations.  The  model 
takes the physical dimensions of the PCM device, the properties 
of the GST material and the target resistance value as inputs and 
produces an estimated programming current that can achieve this 
target resistance level. We assume a read current of 40µA and the 
estimated SET and RESET programming currents for each given 
margin  are  listed  in  Table  2.  We  investigate  the  total  power 
consumption of the PCM storage and normalized the power to the 
case in which the smallest margin (e.g. 0uA) is used. The results 
are  shown  in  Figure  4-a.  As  can  be  seen,  the  total  power 
consumption  increases  exponentially  with  the  enlarged  margin. 
This is because 1) the total power of PCM is dominated by the 
write  power  and  2)  The  write  current  is  found  to  increase 
exponentially with the enlarged margin since the volume size of 
active  GST  material  switched  between  states  is  proportional  to 
the  electrical-pulse  generated  thermal  energy,  which  shows  a 