false values (where the operator was
uncertain of the land use category)
 Actively saved to filter out the false
(provisional) values
The following example uses data from one
province. If national data is available, a
broadly, evenly distributed set of training sites
should be used to train a classifier. In the
following example, data from Central Province
in Papua New Guinea is used as in input for the
Random Forest classifier.
To access the table in Earth
Engine, the table must be
publically available. Click on
Share in the upper right corner.
Under Who has access, click on Change. Select Anyone with the link or Public on the web as the
new visibility option.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 83
Once the file is
classified as public,
you will need the
table ID to import it
into Earth Engine.
Click on File and
select About this
table.
Copy the table ID.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 84
6.1.2 Importing KMLs into Google Fusion Tables
KMLs from Google Earth
or QGIS can also be
imported into Google
Fusion Tables and later
used in Earth Engine.
The process is the same
as the one for CSVs.
(Shapefiles can be
converted to KMLs in
QGIS.)
Vector data that may facilitate
land use classification or help
delineate the area of interest can
be imported into Google Earth
Engine as a Fusion Table.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 85
6.2 Getting started with Google Earth Engine
Google Earth Engine is a web-based platform for processing satellite imagery and other spatial data. Earth
Engine facilitates access to over 40 years of continuous, earth observation data gathered by the United
States Geological Survey (USGS) Landsat Program. Earth Engine was developed by Google, in partnership
with Carnegie Mellon University, NASA, USGS and TIME.
A public version of the tool
is available at
earthengine.google.org.
However, trusted users
privileges are required for
the processes described in
the following section.
Under Earth Engine Access,
click on Let us know.
Complete and submit the necessary form
to be granted tester privileges. The
approval can take days or weeks.
Once you receive your login details via
email, return to the Earth Engine
homepage and login.
Note: It is possible to sign in with your
Google account. However, the trusted
user privileges will not be available unless
you have completed the form and been
granted trusted tester privileges.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 86
6.3 Google Earth Engine (GEE) API playground
Access to the API is provided through a web portal called the Earth Engine Playground. This online IDE
consists of a JavaScript code editor, a visualization frame, an API reference and a console to view errors and
output. Scripts developed in the playground are sent to Google for processing, and the resultant map tiles
and/or messages sent back to the browser for display. Information about objects in the script or placed on
the map (e.g. a map layer) can be output to the console for further examination. Mapped results are
completely interactive, allowing pan, zoom, layer visibility toggling and query by location. Numeric results
can be displayed or charted using features from the Google charting API. Long-running tasks, output of
which is directed to a user account (e.g. Google Drive), can be monitored in the playground. To aid coding, a
library of sample scripts is provided in addition to a complete API reference. Some important components of
the playground IDE are illustrated in the below.
Google Earth Engine API Playground. Further info: https://sites.google.com/site/earthengineapidocs/
6.3.1 Vegetation Indices
A vegetation index is an indicator that describes the greenness — the relative density and health of
vegetation — for each picture element, or pixel, in a satellite image. Collect Earth displays through Google
Earth Engine Playground a set of time-frame charts with different vegetation indices to help the user identify
possible trends and seasonalities for the area of interest.
Normalized Difference Normalized Difference
Vegetation Index (NDVI): Water Index (NDWI):
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 87
Collect Earth access a large database of satellite imagery in order to cover a longer time span. Please find the
description of each source below:
Landsat 8 32-Day NDVI, NDWI and EVI Composite
These Landsat composites are made from Level L1T orthorectified scenes, using the computed top-of-
atmosphere reflectance. The Normalized Difference Vegetation Index (NDVI) is generated from the Near-IR
and Red bands of each scene.
The Normalized Difference Water Index (NDWI) is sensitive to changes in liquid water content of vegetation
canopies. It is derived from the Near-IR band and a second IR band, ≈1.24μm when available and the nearest
available IR band otherwise.
The Enhanced Vegetation Index (EVI) is generated from the Near-IR, Red and Blue bands of each scene.
All three indices have values that range from -1.0 to 1.0. Areas of barren rock, sand, or snow usually show
very low NDVI values (for example, 0.1 or less). Whereas the Normalized Difference Vegetation Index (NDVI)
is chlorophyll sensitive, the EVI is more responsive to canopy structural variations, including leaf area index
(LAI), canopy type, plant physiognomy, and canopy architecture. The two vegetation indices complement
each other in global vegetation studies. Sparse vegetation such as shrubs and grasslands or senescing crops
may result in moderate NDVI values (approximately 0.2 to 0.5). High NDVI values (approximately 0.6 to 0.9)
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 88
correspond to dense vegetation such as that found in temperate and tropical forests or crops at their peak
growth stage.
Each of these composites includes all the scenes in each 32-day period beginning from the first day of the
year and continuing to the 352nd day of the year. The last composite of the year, beginning on day 353, will
overlap the first composite of the following year by 20 days. All the images from each 32-day period are
included in the composite, with the most recent pixel on top.
Landsat 7 32-Day NDVI Composite
The Landsat 7 32-Day NDVI Composite has data available from 1999 to 2015. It allows the assessment of
time periods not covered by Landsat 8.
MOD13Q1 Vegetation Indices 16-Day Global 250m
The MODIS Normalized Difference Vegetation Index (NDVI) complements NOAA's Advanced Very High
Resolution Radiometer (AVHRR) NDVI products and provides continuity for time series historical
applications. MODIS also includes a new Enhanced Vegetation Index (EVI) that minimizes canopy background
variations and maintains sensitivity over dense vegetation conditions. The EVI also uses the blue band to
remove residual atmosphere contamination caused by smoke and sub-pixel thin cloud clouds. The MODIS
NDVI and EVI products are computed from atmospherically corrected bi-directional surface reflectances that
have been masked for water, clouds, heavy aerosols, and cloud shadows.
MODIS 16-Day NDVI
This product is generated from the MCD43A4 MODIS surface reflectance composites and also provides a
Normalized Difference Vegetation Index (NDVI).
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 89
6.3.2 Creating a sampling grid for Collect Earth using GEE API code editor
The following section reviews the process of creating a random and a systematic grid in decimal degrees
using Chile and Namibia as examples.
First, access the website https://ee-api.appspot.com/ and get familiar with the platform. The scripts are
written in the code editor window below:
6.3.2.1 Generate random grid over a country or region:
The first step to create the grid is to import the external information necessary into the script. In this case,
we will be using Hansen Global Forest Change image, the USGS’s elevation model image and a Fusion Table
with country boundaries.
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2013");
var elevation = ee.Image("USGS/SRTMGL1_003");
var countries = ee.FeatureCollection("ft:1uL8KJV0bMb7A8-SkrIe0ko2DMtSypHX52DatEE4");
To filter the country of interest, you will need to know its OBJECTID, which is a specific identification for the
countries. It can be found in the fusion table World Country Boundaries (WARNING: THIS IS A PUBLIC
FUSION TABLE USED AS A TUTORIAL EXAMPLE. FAO HAS NO OWNERSHIP OF THIS MATERIAL AND
RECOMMEND THE USE OF OFFICIAL MATERIAL ONLY. Link:
www.google.com/fusiontables/data?docid=1uL8KJV0bMb7A8-SkrIe0ko2DMtSypHX52DatEE4#rows:id=1).
Once you have the OBJECTID, you can change it in the script below (44 is the ID for Chile) and it will define
the selected country as the area to generate the grid.
var filterPerCountry = ee.Filter.eq("OBJECTID",44);
var country = countries.filter(filterPerCountry).first();
Express the number of point to be generated in the given area (in the script line below we used 1000 as the
number of points).
var points = ee.FeatureCollection.randomPoints( country.get("geometry"), 1000);
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 90
The script excerpt below is meant to stack the information from Hansen Global Forest Change image and the
USGS’s elevation model into the points generated. Aspect, Slope and Elevation are required for the grid file
to be imported into Collect Earth.
var lonlat = ee.Image.pixelLonLat();
var gfc5b = gfcImage.select(['treecover2000','gain','loss','lossyear','datamask']);
var dtm = ee.Algorithms.Terrain(elevation);
var stack = gfc5b.addBands(dtm);
var stack = stack.addBands(lonlat);
var out = stack.reduceRegions(points,ee.Reducer.first(),30);
The last step is to add the points to the playground and generate a URL to download the csv file, which will
be imported into Collect Earth.
Map.addLayer(points);
print( ee.FeatureCollection(out).getDownloadURL('csv', ['system:index','latitude', 'longitude',
'elevation', 'slope', 'aspect', 'treecover2000', 'gain', 'loss', 'lossyear', 'datamask']));
The outputs of this script consist of the set of points plotted over the map in the playground and a csv table
to be imported into Collect Earth. At the end, the script and output should look like this:
Direct Link to the script: https://ee-api.appspot.com/1f8765c84e103fe49a4af4053bea9b41
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 91
6.3.2.2 Generate systematic grid over a country or region:
The process to generate a systematic grid is quite similar. However, instead of selecting a number of points
to be created, it allows the user to define the distance (in decimal degrees) between the points. First, import
the input information and select the country of interest.
var gfcImage = ee.Image("UMD/hansen/global_forest_change_2013");
var elevation = ee.Image("USGS/SRTMGL1_003");
var countries = ee.FeatureCollection("ft:1uL8KJV0bMb7A8-SkrIe0ko2DMtSypHX52DatEE4");
var filterPerCountry = ee.Filter.eq("OBJECTID",44);
var country = countries.filter(filterPerCountry).first();
It is necessary to identify the special extent for the grid. The script below generates a rectangle over the
co untry of interest and uses its vertices to define the maximum and minimum longitude and latitude where
th e grid will be created.
var region = country.get("geometry");
var boundingrectangle = ee.Geometry(region).bounds();
var northwestPoint = ee.List( boundingrectangle.coordinates().get(0));
var minLongitude = ee.Number( ( ee.List (northwestPoint.get(0) ).get(0)));
var minLatitude = ee.Number( ( ee.List (northwestPoint.get(1) ).get(1)));
var southeastPoint = ee.List( boundingrectangle.coordinates().get(0));
var maxLongitude = ee.Number( ( ee.List (southeastPoint.get(1) ).get(0)));
var maxLatitude = ee.Number( ( ee.List (southeastPoint.get(3) ).get(1)));
var minLat = minLatitude.getInfo();
var minLong = minLongitude.getInfo();
var maxLat = maxLatitude.getInfo();
var maxLong = maxLongitude.getInfo();
Once the limits to the grid’s rectangle have been defined, the points can be created. In the script below, it is
possible to define the distance in decimal degrees (See page 60 for information on the relationship between
length and degree). In the example below, 0.5 degrees was used for both latitude and longitude.
var points = [];
for (var lon = minLong; lon < maxLong; lon += 0.5) {
for (var lat = minLat; lat < maxLat; lat += 0.5) {
points.push(ee.Feature.Point(lon, lat));
}
}
Th e command to stack information from the input sources remains the same.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 92
var lonlat = ee.Image.pixelLonLat();
var gfc5b = gfcImage.select(['treecover2000','gain','loss','lossyear','datamask']);
var dtm = ee.Algorithms.Terrain(elevation);
var stack = gfc5b.addBands(dtm);
var stack = stack.addBands(lonlat);
The points now contain the necessary information, however are still being plotted over the rectangle. The
following commands reduce the points to the country boundaries and allow the user to define the datamask
attributes from Hansen Global Forest Change image that will be considered in the grid (no data (0), mapped
land surface (1), and permanent water bodies (2). In the example below, we filtered only datamask = 1,
leaving aside the points with no data or over permanent water bodies. Keep in mind that for some analysis,
such as classifying land cover, permanent water bodies need to be assessed as well, turning the command
into ("datamask", 1, 2);.
points = ee.FeatureCollection(points).filterBounds( region );
var out=stack.reduceRegions(points,ee.Reducer.first(),30);
var filterPerDatamask = ee.Filter.eq("datamask", 1);
out = out.filter(filterPerDatamask);
Th e last step is to add the points to the playground and generate a URL to download the csv file, which will
be imported into Collect Earth.
addToMap(out);
print( ee.FeatureCollection(out).getDownloadURL('csv', ['system:index','latitude', 'longitude',
'elevation', 'slope', 'aspect', 'treecover2000', 'gain', 'loss', 'lossyear', 'datamask']));
The outputs of this script consist of the set of points plotted over the map in the playground and a csv table
to be imported into Collect Earth. At the end, the script and output should look like this:
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 93
Direct Link to the script: https://ee-api.appspot.com/61161a43c0a37c3a7214ba22c5765477
The processing time for GEE is 30 seconds. Therefore, large files can return an error due to this maximum
time cap. In this case, replace the previous code for the code below. It will allow the user to save the csv file
to a Google Drive folder.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 94
Export.table(out.select(['system:index','latitude','longitude','elevation',
'slope','aspect','treecover2000','gain','loss','lossyear','datamask']));
In this case, edit the csv file columns in order to obtain the arrangement that best fit your needs.
6.4 Collect Earth data as training sites for a supervised classification
6.4.1 Add Collect Earth vector data
There are three main sections of Earth Engine: the home page, the data catalogue and the workspace. In
the workspace, add Collect Earth data by importing the Fusion Table. Click on the main search field and
select Fusion Table.
Paste the ID of the Fusion Table
and Load the table. (Delete any
extra tabs or spaces.)
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 95
Select Land use category as the Class
Column and click Load the classes.
Assign each class to a separate class
and Save these settings.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 96
Once the table has been loaded and the classes
assigned, modify the title and color of each class to
reflect the land use categories in the fusion table.
Click on the name or color of the class to change
each.
Boundaries of an area of interest can also be added to help define the geographic scope of a classification.
This may be useful with archipelagos or sub-national classifications.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 97
6.4.2 Add raster data (Landsat and MODIS)
Landsat’s Greenest-Pixel Top of Atmosphere (TOA) Reflectance series is well suited for classification because
it pools imagery acquired over the course of 8 days, 32 days or 1 year to create a composite of pixels with
the highest NDVI values. The resulting image tends to have less cloud cover and atmospheric noise than
images acquired on a single date. In areas with persistent cloud cover and low seasonal changes in
phenology (e.g. the tropics), the Annual Greenest-Pixel TOA imagery is recommended. Where seasonality is
high and cloud cover is generally low (temperate areas), the 32-day composites will provide better results.
For Papua New Guinea, use the
most recent annual greenest-
pixel image.
Click on the search field and type
the exact title of the layer or
enter a keyword such as
“greenest”. Select the
appropriate layer from the
updated list of search results.
Indicate that the classification
will be used as an input.
Jump to date 31 December 2013
to draw upon a complete
calendar years’ worth of greenest
pixel data.
Save these settings.
Make the previous layers invisible by clicking on the eye icon beside the title of each layer.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 98
Add the raster MOD44W Land Water Mask Derived from MODIS and SRTM L3 Global 250m SIN Grid.
6.4.3 Extract and apply the water mask
The MODIS Land Water Mask contains only 2 values. Land (value = 1) is visible and water is not (value=0).
The raster must be inverted so that the water class is visible, and thus ready to mask or exclude water from
further analysis. The land class should have the null value, enabling the values from the underlying layer to
be used.
Click on Add computation and select Expression.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 99
Use the MODIS Land Water Mask as the input image. Click on the dropdown box for the bands. By default,
both bands have tics marks. Click on water_mask_qa to remove the check beside it. (Only the band
water_mask will be used.) In the Expression field, type: 1-img1. Click Save to run the computation. With
the default visibility setting, the result appears completely white.
\
Select the Landsat Greenest-Pixel layer as the primary input
Return to the computation menu and image. Indicate that the mask is a raster and select the Computed
select Apply mask. layer as the secondary input.
Volume II: Collect Earth User Manual for Windows OS
Synergies between the Collect Earth sampling and Wall-to-Wall mapping 100
The resulting layer is a Landsat 8 image of 13 bands covering land only.
6.4.4 Extract the area of interest
Apply a second mask to hone in on the area of interest.
Return to the Add computation menu and select Apply