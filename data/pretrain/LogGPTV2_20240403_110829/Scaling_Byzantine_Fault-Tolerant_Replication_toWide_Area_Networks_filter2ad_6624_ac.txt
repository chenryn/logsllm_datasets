 80
 70
 60
 50
 40
 30
 20
 10
 0
 500
 400
 300
 200
 100
)
c
e
s
/
s
e
t
a
d
p
u
(
t
u
p
h
g
u
o
r
h
T
e
t
a
d
p
U
)
c
e
s
/
s
n
o
i
t
c
a
(
t
u
p
h
g
u
o
r
h
T
Steward 10 Mbps
Steward    5 Mbps
Steward 2.5 Mbps
BFT 10 Mbps
BFT   5 Mbps
BFT 2.5 Mbps
 5
 10
 15
 20
 25
 30
Figure 2: Write Update Latency
Clients
Steward
BFT
)
s
m
(
y
c
n
e
t
a
L
e
t
a
d
p
U
 1000
 800
 600
 400
 200
 0
 0
 350
 300
 250
 200
 150
 100
 50
)
s
m
(
y
c
n
e
t
a
L
 0
 0
 10
 20
 30
 50
 60
 40
Write Updates (%)
 70
 80
 90
 100
 0
 0
 10
 20
 30
Figure 3: Update Mix Throughput - 10 Clients
Figure 4: Update Mix Latency - 10 Clients
 50
 60
 40
Write Updates (%)
 70
 80
 90
 100
that emulated a wide area network spanning several con-
tinents. We selected (cid:2)ve sites on the Planetlab network
[15], measured the latency and available bandwidth be-
tween all sites, and emulated the network topology on
our cluster. We ran the experiment on our cluster because
Planetlab machines lack suf(cid:2)cient computational power.
The (cid:2)ve sites are located in the US (University of Wash-
ington), Brazil (Rio Grande do Sul), Sweden (Swedish
Institute of Computer Science), Korea (KAIST) and Aus-
tralia (Monash University). The network latency varied
between 59 ms (US - Korea) and 289 ms (Brazil - Korea).
Available bandwidth varied between 405 Kbps(Brazil -
Korea) and 1.3 Mbps (US - Australia).
Figure 5 shows the average write update throughput
as we increased the number of clients in the system,
while Figure 6 shows the average update latency. Stew-
ard is able to achieve its maximum throughput of 84 up-
dates/sec with 27 clients. The latency increases from
about 200 ms for 1 client to about 360 ms for 30 clients.
BFT is bandwidth limited to about 9 updates/sec. The
update latency is 631 ms for one client and increases to
several seconds with more than 6 clients.
Comparison with Non-Byzantine Protocols: Since
Steward deploys a lightweight fault-tolerant protocol be-
tween the wide area sites, we expect it to achieve perfor-
mance comparable to existing benign fault-tolerant repli-
cation protocols. We compare the performance of our hi-
erarchical Byzantine architecture with that of two-phase
commit protocols. In [16] we evaluated the performance
of two-phase commit protocols [17] using a WAN setup
across the US, called CAIRN [18]. We emulated the
topology of the CAIRN network using the Spines mes-
saging system, and ran Steward and BFT on top of it.
The main characteristic of the CAIRN topology is that
East and West Coast sites were connected through a sin-
gle link of 38 ms and 1.86 Mbps.
Figures 7 and 8 show the average throughput and la-
tency of write updates, respectively, of Steward and BFT
on the CAIRN network topology. Steward achieved about
51 updates/sec in our tests, limited mainly by the band-
width of the link between the East and West Coasts in
CAIRN. In comparison, an upper bound of two-phase
commit protocols presented in [16] was able to achieve
76 updates/sec. We believe that the difference in per-
formance is caused by the presence of additional digi-
tal signatures in the message headers of Steward, adding
128 bytes to the 200 byte payload of each update. BFT
achieved a maximum throughput of 2:7 updates/sec and
an update latency of over a second, except when there
was a single client.
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:28 UTC from IEEE Xplore.  Restrictions apply. 
)
c
e
s
/
s
e
t
a
d
p
u
(
t
u
p
h
g
u
o
r
h
T
e
t
a
d
p
U
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
Steward
BFT
 0
 5
 10
 15
 20
 25
 30
)
s
m
(
y
c
n
e
t
a
L
e
t
a
d
p
U
 2500
 2000
 1500
 1000
 500
 0
 0
Steward
BFT
 5
 10
 15
 20
 25
 30
Figure 5: WAN Emulation - Write Update Throughput
Clients
Figure 6: WAN Emulation - Write Update Latency
Clients
)
c
e
s
/
s
e
t
a
d
p
u
(
t
u
p
h
g
u
o
r
h
T
e
t
a
d
p
U
 100
 90
 80
 70
 60