### 1. Lower Bound Analysis

When \(\hat{t}\) is close to 1, the lower bound is generally equal to 0. As \(\hat{t}\) increases, the lower bound quickly converges to 1. Using the default parameters and assuming \(L = \hat{t} \rho \hat{t} N^{1/2} \ln r\), we calculated the lower bound for \(\hat{t} = 1, \ldots, 10\). For each value of \(\hat{t}\):

\[
\sum_{i=1}^{\hat{t}} (|P^*| - 1) \left( \frac{L}{\hat{t}} \right) = 1 - \min \left( 1, \sum_{i=\hat{t}+1}^{L} q_i \right)
\]

\[
\geq 1 - \min \left( 1, \sum_{i=2}^{L} q_i \right)
\]

\[
= 1 - \min \left( 1, \sum_{i=\hat{t}}^{L} \binom{L}{i} q_0^{L-i} (1 - q_0)^i \right)
\]

\[
\text{where } q_i = \sum_{j=\hat{t}}^{L} \binom{L}{j} q_0^{L-j} (1 - q_0)^j
\]

### 2. Theoretical and Experimental Estimation

We conducted 10,000 random experiments to estimate the real probabilities. Table VI shows the results.

**Table VI: Theoretical Lower Bound and Experimental Estimation**

| \(\hat{t}\) | Theoretical Lower Bound | Experimental Estimation |
|------------|------------------------|------------------------|
| 1          | 0                      | 0                      |
| 2          | 0                      | 0.0504                 |
| 3          | 0.9473                 | 0.9604                 |
| 4          | 0.9997                 | 0.9999                 |
| ≥ 5        | 1                      | 1                      |

Following a similar argument, we can also derive:

\[
\Pr \left( \max_{i=2}^{N} (\#(O_i)) \leq \#(O_1) + \hat{t} \right) \leq \min \left( 1, (N - 1) \sum_{i=\hat{t}}^{L} \binom{L}{i} q_0^{L-i} (1 - q_0)^i \right)
\]

### 3. Upper Bound of Mean \(E(N_{\text{max}})\)

Assuming there are \(N_{\text{max}}\) cell-index vectors occurring most often in \(P^*\), i.e., \(N_{\text{max}}\) is the cardinality of the set \(\{i | \#(O_i) = \max_{j=1}^{M_p} \#(O_j)\}\), we can get an upper bound of its mean:

\[
E(N_{\text{max}}) \leq 1 + (M_p - 1) \cdot \min \left( 1, (N - 1) \sum_{i=\hat{t}}^{L} \binom{L}{i} q_0^{L-i} (1 - q_0)^i \right)
\]

For the default setting of the PAS scheme and \(\hat{t} = 1, \ldots, 10\), Table VII shows the theoretical upper bound and the real value of \(E(N_{\text{max}})\) estimated from 10,000 random experiments.

**Table VII: Theoretical Upper Bound and Experimental Estimation of \(E(N_{\text{max}})\)**

| \(\hat{t}\) | Theoretical Upper Bound | Experimental Estimation |
|------------|------------------------|------------------------|
| 1          | 3.6846                 | 3.6184                 |
| 2          | 1.7168                 | 1.0086                 |
| 3          | 607.1                  | 6.842                  |
| 4          | 1                      | 1                      |
| 5          | 1                      | 1                      |
| ≥ 6        | 1                      | 1                      |

### 4. Implications of the Results

The data in Tables VI and VII imply that one can recover the secret cell-index vector with high probability with only 3 observed authentication sessions.

### 5. Complexity Analysis

The computational complexity of the proposed probabilistic attack is the sum of the complexities of all three steps:

- **Step 1:** The complexity is \(\hat{t} (M H)^p\), which is the maximal number of p-predicate vectors one has to check for all \(\hat{t}\) observed authentication sessions to get \(P_i\).
- **Step 2:** After Step 1, the average size of each \(P_i\) is \(1 + N^{1/2} \ln r\), so the average complexity of Step 2 is \(\hat{t} (1 + N^{1/2} \ln r)\).
- **Step 3a:** The complexity is very small and can be omitted.
- **Step 3b:** The ranking done in Step 3b has a complexity of \(\sum_{i=1}^{\hat{t}} |P^*_i|\).

The worst-case complexities of Step 2 and Step 3b are always less than the complexity of Step 1. Therefore, the overall complexity of the attack is determined by Step 1, which has an upper bound of \(O(\hat{t} (M H)^p)\). For the default setting of the PAS basic scheme and \(\hat{t} = 4\), the complexity is \(O(\hat{t} (M H)^p) = O(2^{20.7})\).

Since the size of the password space of the basic PAS scheme is \(len \cdot (M H)^p\), the complexity of the probabilistic attack is always strictly smaller than that of the brute force attack, as \(\hat{t} < len\) always holds.

### 6. Experimental Results

Based on the above theoretical analysis and complexity estimation, the attack is feasible as long as \((M H)^p\) is not cryptographically large. This condition is satisfied for the default setting of the PAS scheme.

We developed a MATLAB implementation of the basic PAS scheme with \(p = 2\) and tested the real performance of the proposed probabilistic attack. On a PC with a 2.4 GHz Intel Core2 Duo CPU and 2 GB memory, one successful attack with \(\hat{t}\) observed authentication sessions consumes only \(5 \hat{t}\) seconds. The MATLAB code is available at [http://www.hooklee.com/Papers/Data/PAS.zip](http://www.hooklee.com/Papers/Data/PAS.zip).

**Table VIII: Success Rate of Breaking the Secret Cell-Index Vector and the Number of Candidates Estimated from Real Attacks**

| \(\hat{t}\) | Success Rate | Number of Candidates |
|------------|--------------|----------------------|
| 1          | 0.012        | 2.02                 |
| 2          | 0.035        | 1.73                 |
| 3          | 0.071        | 1.51                 |
| 4          | 0.13         | 1.36                 |
| 5          | 0.24         | 1.23                 |
| 6          | 0.41         | 1.10                 |
| 7          | 0.60         | 1.03                 |
| 8          | 0.76         | 1.01                 |
| 9          | 0.86         | 1.01                 |
| 10         | 0.94         | 1.01                 |

### 7. Consequences of the Probabilistic Attack

It is impossible and unnecessary to break the whole password with the probabilistic attack, as some secret characters will never occur until the last authentication session. The main consequence of breaking the secret cell indices is that the password becomes a set of \(len\) words \(\{W^*_j\}_{j=1}^{len}\), each used for exactly one authentication session. After all the \(len\) words are used up, a new password must be issued to the user. This means that PAS now works essentially like a one-time password (OTP) system, where each word \(W^*_j\) is the OTP used for each authentication session and expires immediately after being used.

### 8. Degradation of the PAS Scheme

The degradation of the PAS scheme to an OTP-like system has several consequences:

1. **Disqualification as a Better Solution:** This fact disqualifies PAS as a better solution than common OTP systems.
2. **Usability:** The downgraded PAS scheme is still a challenge-response protocol, which requires the user to go through the same process as in the original PAS scheme. In comparison, common OTP systems are not based on a challenge-response structure and simply ask the user to input the dynamic password in an input box, making them more user-friendly.
3. **Security Against Random Guess Attacks:** The downgraded PAS scheme offers lower security against random guess attacks. The success rate of the downgraded PAS scheme is given by:

\[
\frac{1}{2 \ln r} + \frac{2 \ln r - 1}{2 \ln r} \left( \frac{H + k - 1}{k} \right)^p
\]

Comparing this equation with Eq. (1), the success rate becomes larger. For the default parameters, Eq. (1) is around \(9.7893 \times 10^{-4}\), but the above equation is around \(2.4544 \times 10^{-3}\), nearly 2.5 times larger. To maintain the same level of security, the parameters must be increased, which will further decrease usability.

### 9. Conclusion

In this paper, we re-evaluate the security of the predicate-based authentication service (PAS) proposed in [3]. We show that PAS is insecure against both brute force attacks and a probabilistic attack. The probabilistic attack can break part of the password even with a small number of observed authentication sessions, degrading PAS to an OTP-like system and nullifying its main advantages over common OTP systems.

Enhancing the security of PAS by increasing parameter values will decrease usability, making the system impractical. This problem highlights the difficulty in designing a secure and usable authentication system against passive adversaries who can observe all authentication sessions.

### 10. Acknowledgments

Shujun Li was supported by a fellowship from the Zukunftskolleg of the University of Konstanz, Germany, which is part of the “Excellence Initiative” Program of the DFG (German Research Foundation). Hassan Jameel Asghar was supported by an MQRES (Macquarie University Research Excellence Scholarships) International PhD Scholarship. Josef Pieprzyk was supported by the Australia Research Council under Grant DP0987734. Ahmad-Reza Sadeghi was supported by the EU project CACE (Computer Aided Cryptography Engineering, [http://www.cace-project.eu](http://www.cace-project.eu)). Huaxiong Wang was supported by the National Research Foundation of Singapore under Research Grant NRF-CRP2-2007-03 and the Singapore Ministry of Education under Research Grant T206B2204.