href="http://docs.python-requests.org/en/master/">requests שמאפשר להתחבר לכתובת מסויימת באמצעות פרוקסי
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
עלינו
לנסות מספר כתובות IP עד שהחיבור
יצליח, מכיוון ששרתי פרוקסי חינמיים לא תמיד זמינים
הדגל:
OWASP-IL{W0rld_T0r_0ops_S0rry_T0ur!}
&nbsp;
אתגר 13 - Break The Captcha – Nightmare (רמת
קושי קשה, 700 נקודות)
&nbsp;
הוראות האתגר:
Following the last attack on my website i increased the
difficulty of my human security.
Do you think that you can bypass it with code and flood my form?
URL: http://challenges.owaspil.ctf.today:8085/
פתרון:
האתגר החדש נראה כך:
אז מה התחדש?
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
נוסף
תרגיל מתמטי אשר מופיע כטקסט (קל לפתור אותו)
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
התמונה
כוללת רעש אקראי (מקשה על ה-OCR)
נתמקד בינתיים בתמונה,
מכיוון שהפתרון הנדרש עבור הטקסט הוא קל ביותר.
מהתבוננות בתמונה
הזו (ובמדגם מייצג של תמונות נוספות), אפשר לשים לב למאפיינים הבאים:
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
הטקסט
הוא תמיד לבן
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
הרקע
הוא תמיד צבעוני, וכן ה&quot;נקודות&quot; ברקע
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;רעש&quot;
נוסף הוא הקווים שלעיתים חוצים את הטקסט במקומות אקראיים, והוא תמיד שחור
&nbsp;
&nbsp;
&nbsp;
ה-OCR מעדיף טקסט שחור על
רקע לבן, ונראה שלא מאוד קשה לייצר תמונה כזו מהתמונה המקורית:
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
עוברים
על התמונה, פיסקל אחרי פיקסל
2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
פיסקל
לבן הופכים לשחור
3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
פיסקל
שאינו לבן הופכים ללבן
הנה תוצר של
האלגוריתם הזה:
הבעיה היא שהקווים
השחורים מאוד מקשים על ה-OCR (את הדוגמא לעיל הוא זיהה בתור uk/za). גם באתגר המקורי היו טעויות בזיהוי, אבל האחוז פה הוא גבוה
משמעותית.
כנראה שהפתרון הנכון
ביותר במצב הזה היה &quot;לאמן&quot; את ה-OCR עם הגופן שמשתמשים בו בתמונה. כלומר, לתת ל-OCR מספיק דגימות של
התווים השונים המשמשים לבניית התמונה, כאשר עבור כל תו אנחנו מספרים ל-OCR איזה תו זה, ובאופן
זה הוא &quot;לומד&quot; כיצד התו נראה. &quot;אימון&quot; כזה משפר מאוד את
היכולת של OCR-ים לזהות
טקסט.
במקום זה, בחרתי
לקחת קיצור דרך בהתבסס על המאפיינים המיוחדים של התרגיל הזה.
צפייה במספר תמונות
במקביל נראית כך:
שימו לב שהטקסט תמיד
תופס את אותו המקום בתמונה. לכן, בשלב הראשון (לפני עיבוד נוסף) אפשר &quot;לחתוך&quot;
אותו (crop) ולהתעלם מכל החלק הימני. לאחר מכן, הפעלתי את האלגוריתם שפירטנו לעיל
על מנת ליצור טקסט לבן על רקע שחור.
הקוד עצמו נראה כך:
```python
def get_image_bounding_box(img):
    w, h = img.size
    return (3, 6, w - 28, h - 2)
def filter_image(in_file):
    img = PIL.Image.open(in_file)
    img = img.crop(get_image_bounding_box(img))
    m = img.load()
    new_w, new_h = img.size
    num_black_pixels = 0
    for x in xrange(new_w):
        for y in xrange(new_h):