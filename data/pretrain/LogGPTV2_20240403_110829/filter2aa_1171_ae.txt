# internal/fmtsort
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b016\_pkg_.a -trimpath 
$WORK\b016=> -p internal/fmtsort -std -complete -buildid 37fWy08BCZ4uS--
bPHjs/37fWy08BCZ4uS--bPHjs
 -goversion go1.17.3 -importcfg $WORK\b016\importcfg -pack -c=4 C:\Program 
Files\Go\src\internal\fmtsort\sort.go]
# io/fs
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b040\_pkg_.a -trimpath 
$WORK\b040=> -p io/fs -std -complete -buildid UiD4-E9lV3Gz4b5uArcr/UiD4-
E9lV3Gz4b5uArcr -goversion
 go1.17.3 -importcfg $WORK\b040\importcfg -pack -c=4 C:\Program 
Files\Go\src\io\fs\fs.go C:\Program Files\Go\src\io\fs\glob.go C:\Program 
Files\Go\src\io\fs\readdir.go C
:\Program Files\Go\src\io\fs\readfile.go C:\Program Files\Go\src\io\fs\stat.go 
C:\Program Files\Go\src\io\fs\sub.go C:\Program Files\Go\src\io\fs\walk.go]
# internal/poll
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b031\_pkg_.a -trimpath 
$WORK\b031=> -p internal/poll -std -buildid 
IXpjsaEP6zsMlk19tV8P/IXpjsaEP6zsMlk19tV8P -goversion g
o1.17.3 -importcfg $WORK\b031\importcfg -pack -c=4 C:\Program 
Files\Go\src\internal\poll\errno_windows.go C:\Program 
Files\Go\src\internal\poll\fd.go C:\Program Files\Go
\src\internal\poll\fd_fsync_windows.go C:\Program 
Files\Go\src\internal\poll\fd_mutex.go C:\Program 
Files\Go\src\internal\poll\fd_poll_runtime.go C:\Program Files\Go\src
\internal\poll\fd_posix.go C:\Program Files\Go\src\internal\poll\fd_windows.go 
C:\Program Files\Go\src\internal\poll\hook_windows.go C:\Program 
Files\Go\src\internal\pol
l\sendfile_windows.go C:\Program Files\Go\src\internal\poll\sockopt.go C:\Program 
Files\Go\src\internal\poll\sockopt_windows.go C:\Program 
Files\Go\src\internal\poll\soc
koptip.go]
# os
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b029\_pkg_.a -trimpath 
$WORK\b029=> -p os -std -buildid c7ud9UoTXZ8mxp4xTMg1/c7ud9UoTXZ8mxp4xTMg1 -
goversion go1.17.3 -im
portcfg $WORK\b029\importcfg -pack -c=4 C:\Program Files\Go\src\os\dir.go 
C:\Program Files\Go\src\os\dir_windows.go C:\Program 
Files\Go\src\os\endian_little.go C:\Progra
m Files\Go\src\os\env.go C:\Program Files\Go\src\os\error.go C:\Program 
Files\Go\src\os\error_errno.go C:\Program Files\Go\src\os\error_posix.go 
C:\Program Files\Go\src\
os\exec.go C:\Program Files\Go\src\os\exec_posix.go C:\Program 
Files\Go\src\os\exec_windows.go C:\Program Files\Go\src\os\executable.go 
C:\Program Files\Go\src\os\execut
able_windows.go C:\Program Files\Go\src\os\file.go C:\Program 
Files\Go\src\os\file_posix.go C:\Program Files\Go\src\os\file_windows.go 
C:\Program Files\Go\src\os\getwd.g
o C:\Program Files\Go\src\os\path.go C:\Program Files\Go\src\os\path_windows.go 
C:\Program Files\Go\src\os\proc.go C:\Program Files\Go\src\os\rawconn.go 
C:\Program Files
\Go\src\os\readfrom_stub.go C:\Program Files\Go\src\os\removeall_noat.go 
C:\Program Files\Go\src\os\stat.go C:\Program Files\Go\src\os\stat_windows.go 
C:\Program Files\G
o\src\os\sticky_notbsd.go C:\Program Files\Go\src\os\str.go C:\Program 
Files\Go\src\os\sys.go C:\Program Files\Go\src\os\sys_windows.go C:\Program 
Files\Go\src\os\tempfi
le.go C:\Program Files\Go\src\os\types.go C:\Program 
Files\Go\src\os\types_windows.go]
# path/filepath
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b045\_pkg_.a -trimpath 
$WORK\b045=> -p path/filepath -std -complete -buildid 
B4jt8XXbtE0ya8z9wcqy/B4jt8XXbtE0ya8z9wcqy -g
接管go build 命令
transformFuncs
oversion go1.17.3 -importcfg $WORK\b045\importcfg -pack -c=4 C:\Program 
Files\Go\src\path\filepath\match.go C:\Program Files\Go\src\path\filepath\path.go 
C:\Program File
s\Go\src\path\filepath\path_windows.go C:\Program 
Files\Go\src\path\filepath\symlink.go C:\Program 
Files\Go\src\path\filepath\symlink_windows.go]
# fmt
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b003\_pkg_.a -trimpath 
$WORK\b003=> -p fmt -std -complete -buildid Nf5pYdmuniAvPRg-
xnvX/Nf5pYdmuniAvPRg-xnvX -goversion g
o1.17.3 -importcfg $WORK\b003\importcfg -pack -c=4 C:\Program 
Files\Go\src\fmt\doc.go C:\Program Files\Go\src\fmt\errors.go C:\Program 
Files\Go\src\fmt\format.go C:\Prog
ram Files\Go\src\fmt\print.go C:\Program Files\Go\src\fmt\scan.go]
# os/exec
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b042\_pkg_.a -trimpath 
$WORK\b042=> -p os/exec -std -complete -buildid 8GuqnQS-OOQeAU4kiiyV/8GuqnQS-
OOQeAU4kiiyV -goversi
on go1.17.3 -importcfg $WORK\b042\importcfg -pack -c=4 C:\Program 
Files\Go\src\os\exec\exec.go C:\Program Files\Go\src\os\exec\exec_windows.go 
C:\Program Files\Go\src\os
\exec\lp_windows.go]
# log
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b002\_pkg_.a -trimpath 
$WORK\b002=> -p log -std -complete -buildid 
yObk2BayHg7xaQqRCt9g/yObk2BayHg7xaQqRCt9g -goversion g
o1.17.3 -importcfg $WORK\b002\importcfg -pack -c=4 C:\Program 
Files\Go\src\log\log.go]
# command-line-arguments
[wrapper] 2022/06/13 20:01:42 compile [-o $WORK\b001\_pkg_.a -trimpath 
$WORK\b001=> -p main -lang=go1.17 -complete -buildid 
8u9g0k5n8Iyp2P9Ad8Y0/8u9g0k5n8Iyp2P9Ad8Y0 -go
version go1.17.3 -D _/C_/Users/xqx/Downloads/garble-0.6.0/ddiy -importcfg 
$WORK\b001\importcfg -pack -c=4 .\main.go $WORK\b001\_gomod_.go]
# command-line-arguments
[wrapper] 2022/06/13 20:01:43 link [-o $WORK\b001\exe\a.out.exe -importcfg 
$WORK\b001\importcfg.link -buildmode=pie -
buildid=Sl758QsvYT6uz8zhhnCd/8u9g0k5n8Iyp2P9Ad8Y0/_N
3emNC9hZaNV9HjIGQA/Sl758QsvYT6uz8zhhnCd -extld=gcc $WORK\b001\_pkg_.a]
asm
汇编阶段接管临时的汇编代码，使用-p命令指定一个混淆的package,使用 trimpath 过滤garble自己的
目录，也会将汇编代码中的函数进行混淆。
compile
go tool compile 参数如下
 xqx on  ~
# go tool compile
usage: compile [options] file.go...
  -% int
        debug non-static initializers
  -+    compiling runtime
  -B    disable bounds checking
  -C    disable printing of columns in error messages
  -D path
        set relative path for local imports
  -E    debug symbol export
  -G    accept generic code
  -I directory
        add directory to import search path
  -K    debug missing line numbers
  -L    show full file names in error messages
  -N    disable optimizations
  -S    print assembly listing
  -V    print version and exit
  -W    debug parse tree after type checking
  -asmhdr file
        write assembly header to file
  -bench file
        append benchmark times to file
  -blockprofile file
        write block profile to file
  -buildid id
        record id as the build id in the export metadata
  -c int
        concurrency during compilation (1 means no concurrency) (default 1)
  -clobberdead
        clobber dead stack slots (for debugging)
  -clobberdeadreg
        clobber dead registers (for debugging)
  -complete
        compiling complete package (no C or assembly)
  -cpuprofile file
        write cpu profile to file
  -d value
        enable debugging settings; try -d help
  -dwarf
        generate DWARF symbols (default true)
  -dwarfbasentries
        use base address selection entries in DWARF (default true)
  -dwarflocationlists
        add location lists to DWARF in optimized mode (default true)
  -dynlink
        support references to Go symbols defined in other shared libraries
  -e    no limit on number of errors reported
  -embedcfg file
        read go:embed configuration from file
  -gendwarfinl int
        generate DWARF inline info records (default 2)
  -goversion string
        required version of the runtime
  -h    halt on error
  -importcfg file
        read import configuration from file
  -importmap definition
        add definition of the form source=actual to import map
  -installsuffix suffix
        set pkg directory suffix
garble会在编译时插入参数
  -j    debug runtime-initialized variables
  -json string
        version,file for JSON compiler/optimizer detail output
  -l    disable inlining
  -lang string
        Go language version source code expects
  -linkobj file
        write linker-specific object to file
  -linkshared
        generate code that will be linked against Go shared libraries
  -live
        debug liveness analysis
  -m    print optimization decisions
  -memprofile file
        write memory profile to file
  -msan
        build code compatible with C/C++ memory sanitizer
  -mutexprofile file
        write mutex profile to file
  -nolocalimports
        reject local (relative) imports
  -o file
        write output to file
  -p path
        set expected package import path
  -pack
        write to file.a instead of file.o
  -r    debug generated wrappers
  -race
        enable race detector
  -shared
        generate code that can be linked into a shared library
  -smallframes
        reduce the size limit for stack allocated objects
  -spectre list
        enable spectre mitigations in list (all, index, ret)
  -std
        compiling standard library
  -symabis file
        read symbol ABIs from file
  -t    enable tracing for debugging the compiler
  -traceprofile file
        write an execution trace to file
  -trimpath prefix
        remove prefix from recorded source file paths
  -v    increase debug verbosity
  -w    debug type checking
  -wb
        enable write barrier (default true)
通过读取原命令行中的 -importcfg 的值实现替换
tiny参数，优化体积实现
通过接管获取到runtime的文件时，对其中的函数进行一些处理
flags = append(flags, "-dwarf=false") // -w
flags = alterTrimpath(flags) // --trimpath
newImportCfg, err := processImportCfg(flags) // 替换依赖的package信息
...
// 使用 -p 定义新的package
newPkgPath := ""
if curPkg.Name != "main" && curPkg.ToObfuscate {
  newPkgPath = curPkg.obfuscatedImportPath()
  flags = flagSetValue(flags, "-p", newPkgPath)