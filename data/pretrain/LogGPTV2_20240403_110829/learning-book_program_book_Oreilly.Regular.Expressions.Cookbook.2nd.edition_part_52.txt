SeeAlso
All the other recipes in this chapter show more ways of matching different kinds of
numbers with a regular expression.
Techniques used in the regular expressions in this recipe are discussed in Chapter 2.
Recipe 2.3 explains character classes. Recipe 2.5 explains anchors. Recipe 2.6 explains
word boundaries. Recipe 2.8 explains altermation. Recipe 2.9 explains grouping.
Recipe 2.12 explains repetition. Recipe 2.16 explains lookaround.
378 | Chapter 6: Numbers
---
## Page 395
6.2HexadecimalNumbers
Problem
You want to find hexadecimal numbers in a larger body of text, or check whether a
string variable holds a hexadecimal number.
Solution
Find any hexadecimal number in a larger body of text:
\b[0-9A-F]+\b
Regex options: Case insensitive
Regexflarer: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
\b[0-9A-Fa-f]+\b
Regex options: None
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Check whether a text string holds just a hexadecimal number:
\A[0-9A-F]+\Z
Regex options Case insensitive
Regexflavers: .NET, Java, PCRE, Perl, Python, Ruby
[0-9A-F]+$
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python
Find a hexadecimal number with a ox prefix:
\b0x[0-9A-F]+\b
Regex options: Case insensitive
Regexflarer: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a hexadecimal number with an &H prefix:
&H[0-9A-F]+b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a hexadecimal number with an H suffix:
b[0-9A-F]+H\b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a hexadecimal byte value or 8-bit number:
\b[0-9A-F]{2}\b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
6.2 Hexadecimal Numbers | 379
---
## Page 396
Find a hexadecimal word value or 16-bit number:
\b[0-9A-F]{4}\b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a hexadecimal double word value or 32-bit number:
\b[0-9A-F]{8}\b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a hexadecimal quad word value or 64-bit number:
\b[0-9A-F]{16}\b
Regex options: Case insensitive
Regexflavers: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Find a string of hexadecimal bytes (i.e., an even number of hexadecimal digits):
\b(?: [0-9A-F]{(2})+\b
Regex options: Case insensitive
Regexflarer: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Discussion
The techniques for matching hexadecimal integers with a regular expression is the same
as matching decimal integers. The only difference is that the character class that match-
es a single digit now has to include the letters A through F. You have to consider whether
the letters must be either uppercase or lowercase, or if mixed case is permitted. The
regular expressions shown here all allow mixed case.
By default, regular expressions are case-sensitive. [o-ga-f] allows only lowercase
hexadecimal digits, and [o-gA-F] allows only uppercase hexadecimal digits. Toallow
mixed case, use [o-9a-fA-F] or turm on the option to make your regular expression
case insensitive. Recipe 3.4 explains how to do that with the programming languages
covered by this book. The first regex in the solution is shown twice, using the two
different ways of making it case-insensitive. The others shown use only the second
method.
If you only want to allow uppercase letters in hexadecimal numbers, use the regexes
shown with case insensitivity turned off. To allow only lowercase letters, turn off case
insensitivity and replace ,
 does that one or more
times. The noncapruring group (see Recipe 2.9) is required because the plus needs to
repeat the character class and the quantifier  combined. [0-9]{2}+ is not a syntax
error in Java, PCRE, and Perl 5.10, but it doesn’t do what you want. The extra +> makes
 gde 1 08
---
## Page 397
the {2) possessive. That has no effect, because , these regular expressions use  to match either the digit zero,
or a decimal number with at least one digit that does not begin with a zero. Since the
altermation operator has the lowest precedence of all regular expression operators, we
altemation.
use a group to make sure the anchors and word boundaries stay outside of the
384 | Chapter6: Numbers
---
## Page 401
See Also
Recipe 6.4 has solutions for matching octal numbers.
Techniques used in the regular expressions in this recipe are discussed in Chapter 2.
Recipe 2.3 explains character classes. Recipe 2.5 explains anchors. Recipe 2.6 explains
word boundaries. Recipe 2.8 explains altemation. Recipe 2.9 explains grouping.
Recipe 2.12 explains repetition.
6.6StripLeadingZeros
Problem
You want to match an integer number, and either return the number without any lead-
ing zeros or delete the leading zeros.
Solution
Regular expression
q(o|[6-0][6-])0q
Regex options: None
Regexflaver: NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Replacement
$1
Replacement text flavors: .NET, Java, JavaScript, PHP, Perl
\1
Replacement text flavors: PHP, Python, Ruby
Getting the numbers in Perl
while ($subject =~ m/\bo*([1-9][0-9]*|o)\b/g) {
push(@list, $1);
Stripping leading zeros in PHP
$result = preg_replace(′/\bo*([1-9][0-9]*|o)\b/′, ‘$1′, $subject);
Discussion
 matches the leading zeros,if any. Within the group, [1-9][o-9]*> matches a num-
We use a capturing group to separate a number from its leading zeros. Before the group,
ber that consists of one or more digits, with the first digit being nonzero. The number
6.6 Strip Leading Zeros | 385
---
## Page 402
can begin with a zero only if the number is zero itself. The word boundaries make sure
we don't match partial numbers, as explained in Recipe 6.1.
To get a list of all numbers in the subject text without leading zeros, iterate over the
regex matches as explained in Recipe 3.11. Inside the loop, retrieve the text matched
by the first (and only) capturing group, as explained in Recipe 3.9. The solution for this
shows how you could do this in Perl.
Stripping the leading zeros is easy with a search-and-replace, Our regex has a capruring
group that separates the number from its leading zeros. If we replace the overall regex
match (the number including the leading zeros) with the text matched by the first
how to do this in PHP. Recipe 3.15 shows how to do it in other programming languages.
ssous uonpos au soaz Supea a no padds fjaaaa aaam dnoug uumdes
See Also
All the other recipes in this chapter show more ways of matching different kinds of
numbers with a regular expression.
Techniques used in the regular expressions in this recipe are discussed in Chapter 2.
Recipe 2.3 explains character classes. Recipe 2.5 explains anchors. Recipe 2.6 explains
word boundaries. Recipe 2.8 explains altermation. Recipe 2.9 explains grouping.
Recipe 2.12 explains repetition.
6.7NumbersWithina CertainRange
Problem
You want to match an integer number within a certain range of numbers. You want
the regular expression to specify the range accurately, rather than just limiting the
number of digits.
Solution
1 to 12 (hour or month):
(1[0-2]1[1-9])$
Regex options: None
Regexflarer: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
1 to 24 (hour):
(2[0-4]|1[0-9]][1-9]]$
Regex options: None