445/tcp filtered microsoft-ds
9929/tcp open nping-echo
31337/tcp open Elite
Nmap done: 1 IP address (1 host up) scanned in 230.83 seconds
    On the other hand, in
     passive scanning
    , you use third-party resources to learn about a machine’s ports without interacting with the server. Passive scanning is stealthier and helps attackers avoid detection. To find services on a machine without actively scanning it, you can use
     Shodan
    , a search engine that lets the user find machines connected to the internet.
    另一方面，在被动扫描中，您使用第三方资源来了解机器的端口，而无需与服务器进行交互。被动扫描更加隐秘，帮助攻击者避免被发现。要在不活跃扫描机器的情况下查找该机器的服务，您可以使用Shodan，这是一个搜索引擎，允许用户查找连接到互联网的机器。
    With Shodan, you can discover the presence of webcams, web servers, or even power plants based on criteria such as hostnames or IP addresses. For example, if you run a Shodan search on
     scanme.nmap.org
    ’s IP address, 45.33.32.156, you get the result in
     Figure 5-1
    . You can see that the search yields different data than our port scan, and provides additional information about the server.
    通过Shodan，您可以根据主机名或IP地址等标准发现网络摄像头、Web服务器甚至是电厂的存在。例如，如果您在scanme.nmap.org的IP地址45.33.32.156上运行Shodan搜索，您将获得图5-1中的结果。您可以看到，此搜索产生了与我们的端口扫描不同的数据，并提供了有关服务器的其他信息。
       Figure 5-1
      : The Shodan results page of
       scanme.nmap.org
      图5-1：scanme.nmap.org的Shodan结果页面。
    Alternatives to Shodan include Censys and Project Sonar. Combine the information you gather from different databases for the best results. With these databases, you might also find your target’s IP addresses, certificates, and software versions.
    除了 Shodan 之外，还有 Censys 和 Project Sonar 可供选择。从不同的数据库中收集信息以获得最佳结果。通过这些数据库，您还可能找到目标的 IP 地址、证书和软件版本。
    Directory Brute-Forcing
    The next thing you can do to discover more of the site’s attack surface is brute-force the directories of the web servers you’ve found. Finding directories on servers is valuable, because through them, you might discover hidden admin panels, configuration files, password files, outdated functionalities, database copies, and source code files. Directory brute-forcing can sometimes allow you to directly take over a server!
    你可以接下来尝试对网站已发现的web服务器目录进行暴力破解，以便更全面地探测攻击面。发现服务器目录很有价值，因为通过它们，你可能会找到隐藏的管理面板、配置文件、密码文件、过时的功能、数据库副本和源代码文件。有时暴力破解目录会让你直接接管服务器！
    Even if you can’t find any immediate exploits, directory information often tells you about the structure and technology of an application. For example, a pathname that includes
     phpmyadmin
    usually means that the application is built with PHP.
    即使你找不到立即可用的漏洞，目录信息通常也会告诉你应用程序的结构和技术。例如，包括phpmyadmin的路径名通常意味着该应用程序是用PHP构建的。
    You can use Dirsearch or Gobuster for directory brute-forcing. These tools use wordlists to construct URLs, and then request these URLs from a web server. If the server responds with a status code in the 200 range, the directory or file exists. This means you can browse to the page and see what
    the application is hosting there. A status code of 404 means that the directory or file doesn’t exist, while 403 means it exists but is protected. Examine 403 pages carefully to see if you can bypass the protection to access the content.
    你可以使用Dirsearch或Gobuster进行目录穷举。 这些工具使用单词列表来构造URL，并从Web服务器请求这些URL。 如果服务器响应的状态代码在200范围内，则表示该目录或文件存在。 这意味着您可以浏览该页面并查看应用程序托管的内容。 404状态代码表示目录或文件不存在，而403表示该目录或文件存在，但受到保护。 仔细检查403页，看看是否可以绕过保护以访问内容。
    Here’s an example of running a Dirsearch command. The
     -u
    flag specifies the hostname, and the
     -e
    flag specifies the file extension to use when constructing URLs:
    这是运行Dirsearch命令的示例。-u标志指定了主机名，-e标志指定了构建URL时要使用的文件扩展名：
$ ./dirsearch.py -u scanme.nmap.org -e php
Extensions: php | HTTP method: get | Threads: 10 | Wordlist size: 6023
Error Log: /tools/dirsearch/logs/errors.log
Target: scanme.nmap.org
[12:31:11] Starting:
[12:31:13] 403 -  290B  - /.htusers
[12:31:15] 301 -  316B  - /.svn  ->  http://scanme.nmap.org/.svn/
[12:31:15] 403 -  287B  - /.svn/
[12:31:15] 403 -  298B  - /.svn/all-wcprops
[12:31:15] 403 -  294B  - /.svn/entries
[12:31:15] 403 -  297B  - /.svn/prop-base/
[12:31:15] 403 -  296B  - /.svn/pristine/
[12:31:15] 403 -  291B  - /.svn/tmp/
[12:31:15] 403 -  315B  - /.svn/text-base/index.php.svn-base
[12:31:15] 403 -  293B  - /.svn/props/
[12:31:15] 403 -  297B  - /.svn/text-base/
[12:31:40] 301 -  318B  - /images  ->  http://scanme.nmap.org/images/
[12:31:40] 200 -   7KB  - /index
[12:31:40] 200 -   7KB  - /index.html
[12:31:53] 403 -  295B  - /server-status
[12:31:53] 403 -  296B  - /server-status/
[12:31:54] 301 -  318B  - /shared  ->  http://scanme.nmap.org/shared/
Task Completed 
    Gobuster’s Dir mode is used to find additional content on a specific domain or subdomain. This includes hidden directories and files. In this mode, you can use the
     -u
    flag to specify the domain or subdomain you want to brute-force and
     -w
    to specify the wordlist you want to use:
    Gobuster的Dir模式用于在特定域或子域上查找其他内容，包括隐藏目录和文件。在此模式下，您可以使用-u标志来指定要暴力破解的域或子域，使用-w来指定要使用的字典：
gobuster dir -u target_url -w wordlist
    Manually visiting all the pages you’ve found through brute-forcing can be time-consuming. Instead, use a screenshot tool like EyeWitness (
     https://github.com/FortyNorthSecurity/EyeWitness/
    ) or Snapper (
     https://github.com/dxa4481/Snapper/
    ) to automatically verify that a page is hosted on each location. EyeWitness accepts a list of URLs and takes screenshots of each page. In a photo gallery app, you can quickly skim these to find the interesting-looking ones. Keep an eye out for hidden services, such as developer or admin panels, directory listing pages, analytics pages, and pages that look outdated and ill-maintained. These are all common places for vulnerabilities to manifest.
    手动访问通过暴力破解找到的所有页面可能会耗费大量时间。相反，使用像EyeWitness（https://github.com/FortyNorthSecurity/EyeWitness/）或Snapper（https://github.com/dxa4481/Snapper/）这样的截图工具自动验证每个位置上是否托管有该页面。EyeWitness接受一个URL列表并截取每个页面的屏幕截图。在照片库应用程序中，您可以快速滑过这些页面，找到有趣的页面。注意隐藏服务，例如开发人员或管理员面板，目录列表页面，分析页面以及看起来过时和未养护的页面。这些都是漏洞可能发生的常见地方。
    Spidering the Site
    Another way of discovering directories and paths is through
     web spidering
    , or web crawling, a process used to identify all pages on a site. A web spider tool
    starts with a page to visit. It then identifies all the URLs embedded on the page and visits them. By recursively visiting all URLs found on all pages of a site, the web spider can uncover many hidden endpoints in an application.
    另一种发现目录和路径的方式是通过网络蜘蛛或网络爬虫。它是一种用于识别网站上所有页面的过程。一个网络爬虫工具从一个访问页面开始。然后它会识别页面上嵌入的所有 URL 并访问它们。通过递归访问站点上所有页面中找到的所有 URL，网络爬虫可以揭示应用程序中许多隐藏的端点。
    OWASP Zed Attack Proxy (ZAP) at
     https://www.zaproxy.org/
    has a built-in web spider you can use (
     Figure 5-2
    ). This open source security tool includes a scanner, proxy, and many other features. Burp Suite has an equivalent tool called the
     crawler
    , but I prefer ZAP’s spider.
    OWASP Zed Attack Proxy（ZAP）在https://www.zaproxy.org/有一个内置的网络蜘蛛，您可以使用（图5-2）。这个开源安全工具包括扫描器、代理和许多其他功能。Burp Suite有一个等效的工具称为爬虫，但我更喜欢ZAP的蜘蛛。
       Figure 5-2
      : The startup page of OWASP ZAP
      图5-2：OWASP ZAP的启动页面
    Access its spider tool by opening ZAP and choosing
     Tools
     ▶
     Spider
    (
     Figure 5-3
    ).
    通过打开ZAP并选择工具▶Spider（图5-3），访问它的爬虫工具。
       Figure 5-3
      : You can find the Spider tool via Tools
       ▶
      Spider.
      图5-3：您可以通过工具▶蜘蛛来找到蜘蛛工具。
    You should see a window for specifying the starting URL (
     Figure 5-4
    ).
    你应该看到一个窗口来指定起始URL（图5-4）。
       Figure 5-4
      : You can specify the target URL to scan.
      图5-4：您可以指定要扫描的目标URL。
    Click
     Start Scan
    . You should see URLs pop up in the bottom window (
     Figure 5-5
    ).
    点击开始扫描。您应该会在底部窗口（图5-5）中看到URL弹出。
       Figure 5-5
      : The scan results show up at the bottom pane of the OWASP ZAP window.
      图 5-5：扫描结果会显示在 OWASP ZAP 窗口的底部面板。
    You should also see a site tree appear on the left side of your ZAP window (
     Figure 5-6
    ). This shows you the files and directories found on the target server in an organized format.
    你还应该在ZAP窗口左侧看到一个站点结构树的出现（如图5-6所示）。它以有组织的格式显示了目标服务器上找到的文件和目录。
       Figure 5-6
      : The site tree in the left window shows you the files and directories found on the target server.
      图5-6：左窗口中的站点树显示了目标服务器上找到的文件和目录。
    Third-Party Hosting
    Take a look at the company’s third-party hosting footprint. For example, look for the organization’s S3 buckets.
     S3
    , which stands for
     Simple Storage Service
    , is Amazon’s online storage product. Organizations can pay to store resources in
     buckets
    to serve in their web applications, or they can use S3 buckets as a backup or storage location. If an organization uses Amazon S3, its S3 buckets can contain hidden endpoints, logs, credentials, user information, source code, and other information that might be useful to you.
    看看公司的第三方托管足迹。例如，寻找组织的S3存储桶。 S3代表Amazon的在线存储产品 – 简单存储服务。组织可以付费将资源存储在存储桶中以在其Web应用程序中使用，或者他们可以使用S3存储桶作为备份或存储位置。如果组织使用Amazon S3，则其S3存储桶可能包含隐藏的端点、日志、凭据、用户信息、源代码和其他对你有用的信息。
    How do you find an organization’s buckets? One way is through Google dorking, as mentioned earlier. Most buckets use the URL format
     BUCKET.s3.amazonaws.com
    or
     s3.amazonaws.com/BUCKET
    , so the following search terms are likely to find results:
    如何查找组织机构的存储桶？一种方法是通过前面提到的 Google Dorking。大多数存储桶使用 URL 格式 BUCKET.s3.amazonaws.com 或 s3.amazonaws.com/BUCKET，因此以下搜索词可能会找到结果：
site:s3.amazonaws.com COMPANY_NAME
site:amazonaws.com COMPANY_NAME
    If the company uses custom URLs for its S3 buckets, try more flexible search terms instead. Companies often still place keywords like
     aws
    and
     s3
    in their custom bucket URLs, so try these searches:
    如果公司为其S3存储桶使用自定义URL，请尝试更灵活的搜索词。公司通常在其自定义存储桶URL中仍然放置像aws 和 s3 等关键字，因此尝试以下这些搜索：
amazonaws s3 COMPANY_NAME
amazonaws bucket COMPANY_NAME
amazonaws COMPANY_NAME
s3 COMPANY_NAME
    Another way of finding buckets is to search a company’s public GitHub repositories for S3 URLs. Try searching these repositories for the term
     s3
    . We’ll talk about using GitHub for recon in
     “GitHub Recon” on the following page
    .
    另一种找到存储桶的方式是在公司的公共GitHub存储库中搜索S3网址。尝试在这些存储库中搜索“s3”一词。我们将在下一页的“GitHub侦察”中讨论如何使用GitHub进行侦察。
     GrayhatWarfare
    (
     https://buckets.grayhatwarfare.com/
    ) is an online search engine you can use to find publicly exposed S3 buckets (
     Figure 5-7
    ). It allows you to search for a bucket by using a keyword. Supply keywords related to your target, such as the application, project, or organization name, to find relevant buckets.
    GrayhatWarfare（https://buckets.grayhatwarfare.com/）是一个在线搜索引擎，您可以使用它来查找公开暴露的S3存储桶（图5-7）。它允许您使用关键字搜索桶。提供与目标相关的关键字，例如应用程序、项目或组织名称，以查找相关的桶。
       Figure 5-7
      : The GrayhatWarfare home page
      图5-7：GrayhatWarfare主页
    Finally, you can try to brute-force buckets by using keywords.
     Lazys3
    (
     https://github.com/nahamsec/lazys3/
    ) is a tool that helps you do this. It relies on a wordlist to guess buckets that are permutations of common
    bucket names. Another good tool is
     Bucket Stream
    (
     https://github.com/eth0izzle/bucket-stream/
    ), which parses certificates belonging to an organization and finds S3 buckets based on permutations of the domain names found on the certificates. Bucket Stream also automatically checks whether the bucket is accessible, so it saves you time.
    最后，你可以尝试使用关键词进行暴力破解存储桶。Lazys3（https://github.com/nahamsec/lazys3/）是一个帮助你实现的工具。它依赖于一个单词列表来猜测存储桶，这些存储桶是常见存储桶名称的排列组合。另一个好的工具是Bucket Stream（https://github.com/eth0izzle/bucket-stream/），它解析属于一个组织的证书，并基于在证书上找到的域名的排列组合来找到S3存储桶。Bucket Stream还自动检查存储桶是否可访问，因此它可以节省你的时间。
    Once you’ve found a couple of buckets that belong to the target organization, use the AWS command line tool to see if you can access one. Install the tool by using the following command:
    一旦找到几个属于目标机构的存储桶，使用AWS命令行工具查看是否可以访问其中一个。使用以下命令安装工具：
pip install awscli
    Then configure it to work with AWS by following Amazon’s documentation at
     https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html
    . Now you should be able to access buckets directly from your terminal via the
     aws s3
    command. Try listing the contents of the bucket you found:
    按照亚马逊文档 https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html 进行配置，使其可与 AWS 兼容。现在，您可以通过 aws s3 命令直接从终端访问桶。尝试列出您找到的桶的内容：
aws s3 ls s3://BUCKET_NAME/
    If this works, see if you can read the contents of any interesting files by copying files to your local machine:
    如果这个方法有效，请尝试复制文件到本地计算机上，查看其中有趣文件的内容：