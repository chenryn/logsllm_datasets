Right now getting a direction or spot light's direction is somewhat complex
and only present in the renderers, rather than as a method on the SpotLight
and DirectionalLight classes.
Specifically to get the true direction of a light one uses this code:
https://github.com/mrdoob/three.js/blob/master/src/renderers/WebGLRenderer.js#L5020  
https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/SVGRenderer.js#L225  
https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/WebGLDeferredRenderer.js#L431
I would like to move the repeated code from the renderers into the base Light
class. Thus I would like to add to Light this (and use it in the renderers):
    THREE.Light.prototype.getWorldDirection = function() {
        var targetPosition = new THREE.Vector3();
        return function ( optionalTarget ) {
            var direction = optionalTarget || new THREE.Vector3();
            if( this.target ) {
                direction.setFromMatrixPosition( this.matrixWorld );
                targetPosition.setFromMatrixPosition( this.target.matrixWorld );
                direction.sub( targetPosition );
                direction.normalize();
            }
            return direction;
        };
    }();
I added the check for `this.target` because in order to share the code between
SpotLight and DirectionalLight it had to go on the base class, and thus it may
be used by Lights that do not have a `this.target` on them.
PS. I am proposing this because I would have to again duplicate this code in
the new batching renderer.