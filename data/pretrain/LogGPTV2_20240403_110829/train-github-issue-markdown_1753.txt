Currently, obtaining the direction of a spotlight or directional light is a complex process and is only available within the renderers, rather than as a method on the `SpotLight` and `DirectionalLight` classes. To get the true direction of a light, one must use the following code snippets:

- [WebGLRenderer](https://github.com/mrdoob/three.js/blob/master/src/renderers/WebGLRenderer.js#L5020)
- [SVGRenderer](https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/SVGRenderer.js#L225)
- [WebGLDeferredRenderer](https://github.com/mrdoob/three.js/blob/master/examples/js/renderers/WebGLDeferredRenderer.js#L431)

To simplify this process and avoid code duplication, I propose moving the repeated code from the renderers into the base `Light` class. Specifically, I would like to add the following method to the `Light` class:

```javascript
THREE.Light.prototype.getWorldDirection = function (optionalTarget) {
    var targetPosition = new THREE.Vector3();
    var direction = optionalTarget || new THREE.Vector3();

    if (this.target) {
        direction.setFromMatrixPosition(this.matrixWorld);
        targetPosition.setFromMatrixPosition(this.target.matrixWorld);
        direction.sub(targetPosition).normalize();
    }

    return direction;
};
```

The addition of the `getWorldDirection` method in the `Light` class will allow for a more consistent and maintainable approach across different types of lights. The check for `this.target` ensures that the method can be shared between `SpotLight` and `DirectionalLight`, and it will not cause issues if used by other light types that do not have a `target`.

This change is particularly beneficial as it will prevent the need to duplicate this code in the new batching renderer, thereby improving code maintainability and reducing the risk of errors.