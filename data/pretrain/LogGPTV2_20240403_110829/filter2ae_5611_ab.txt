                }
            }
            @pclose($fp);
        } else {
            $kWJW = 0;
            $result["status"] = base64_encode("fail");
            $result["msg"] = base64_encode("none of proc_open/passthru/shell_exec/exec/exec is available");
            $key = $_SESSION['k'];
            echo encrypt(json_encode($result), $key);
            return;
        }
        $result["status"] = base64_encode("success");
        $result["msg"] = base64_encode(getSafeStr($kWJW));
        echo encrypt(json_encode($result),  $_SESSION['k']);
    }
    function encrypt($data,$key)
    {
        if(!extension_loaded('openssl'))
            {
                for($i=0;$i
以PHP为例，应用安装成功后，会在返回包头中添加X-Protected-By：OpenRASP字段，如下图所示：
此时，我们再次利用冰蝎进行命令执行操作，发现OpenRASP的检测引擎已经完美发现加密流量，并检测出执行的命令“whoami”。
虽然OpenRASP有很多优势，可以准确检测出一些未知漏洞，但是由于其本身的实现也存在一些问题使其在大规模推广还有一定难度。比如RASP对应用侵入过大、angent的安装可能对系统性能的影响、企业大规模部署运维的压力等等。
**思路三：主机侧**  
**（1）定期对服务器进行webshell文件扫描查杀**  
这里用D盾、河马和OpenRASP团队开发的下一代WebShell检测引擎[webdir+](https://scanner.baidu.com/#/pages/intro)进行测试，检测结果都比较一般。
其中，D盾、河马只检测出了早期冰蝎v1.2版本中的PHP webshell文件，未检测出jsp、asp 等webshell，检出比只有20%。
而对于冰蝎v2.1的webshell，D盾、河马都完全没有检测出来，检出比为0。
只有webdir+检测出了冰蝎v2.1的3个webshell文件，检出比为60%，可见冰蝎的免杀做得很不错。
同时，定期的webshell文件扫描也存在时效性差的问题，攻击方拿到shell后，也会对webshell进行痕迹清理，所以这种方式检测效果也有限。
**（2）Linux audit日志检测**
虽然冰蝎通讯流量是加密的，但落到主机侧，还是会调用系统命令，所以可以在主机审计日志层面定制检测规则，监控冰蝎对系统命令的调用。Linux审计系统提供了一种跟踪系统上与安全相关的信息的方法。基于预先配置的规则，审核生成日志条目以记录尽可能多的关于系统上发生的事件信息，参考[《另类WebShell监测机制–基于auditd》](https://www.secpulse.com/archives/62113.html)思路。
以root身份执行如下命令，可实现对执行系统命令这一个SYSCALL行为的监控审计。
    auditctl -D # 用于测试，清除已有规则  
     auditctl -a always,exit -F arch=b64 -S execve -k rule01_exec_command
上述命令在系统审计规则中增加了一条监控调用命令执行监控规则，并且定义规则名为rule01_exec_command。
在冰蝎中执行命令whoami，在Linux审计日志中发现记录：
type=SYSCALL：日志规则“rule01_exec_command”被触发，uid=33的用户，通过父进程ppid=597，调用/usr/bin/bash，执行了命令sh，进程pid=8380。
type=SYSCALL和type=EXECVE都能看到执行的程序名称和参数。
type=CWD则说明了，命令执行所在的目录cwd="/var/www/html"。
一般cwd在web目下的，又执行了系统命令，则这个行为是比较可疑的。
当然基于审计日志的检测思路也存在一定问题，包括：合理配置auditd的运行参数，准确评估审计功能对系统性能的影响；如何主动识别Web进程和Web目录信息；如何实时收集操作系统进程和进程PID等信息；如何关联分析Web访问日志；
Windows平台是否有同样的检测机制等等。
### 0x04 总结
随着攻防对抗的不断升级，攻击方的手段越来越隐蔽，很多攻击流量都会进行加密，给防守方带来了较大挑战，相信后续对加密攻击流量检测的研究也会越来越多。本文对加密webshell“冰蝎”的加密原理进行了分析，在流量侧检测、应用侧检测、主机层检测方面提出了检测思路。各个层面的检测各有利弊，都难以仅仅依靠一种手段解决所有问题。按照纵深防御的思想，企业需要部署多层次的防护，合理运用各种技术的特点，从而达到多层次、多技术的防御互补的效果，进而防止一处防御失效后被全局突破。同时，在各个防御手段部署后，企业还需要持续不断的进行安全运营，发挥防御设备最大功效，构建合适自身的安全防御体系，才能不断提升企业的安全防护水平，才能应对日益严峻的网络安全形势。