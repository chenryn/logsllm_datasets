### Matrices and Their Inverses

The matrices \( G_{\text{pow}} \) and its inverse (which represents division by \( g_p \) in the powerful basis) are square \((p-1)\)-dimensional matrices. The matrix \( G_{\text{dec}} \) and its inverse, which represent multiplication by \( g_m \) in the decoding and CRT bases, respectively, have similar structures.

#### Definitions:
- \( G_{\text{pow}} \):
  \[
  G_{\text{pow}} = \begin{pmatrix}
  p-1 & -1 & -1 & \cdots & -1 \\
  -1 & p-1 & -1 & \cdots & -1 \\
  -1 & -1 & p-1 & \cdots & -1 \\
  \vdots & \vdots & \vdots & \ddots & \vdots \\
  -1 & -1 & -1 & \cdots & p-1
  \end{pmatrix}
  \]

- \( G_{\text{dec}} \):
  \[
  G_{\text{dec}} = \text{Diagonal}(1 - \omega^i)
  \]
  where \(\omega\) is a primitive \(p\)-th root of unity.

- \( G_{\text{crt}} \):
  \[
  G_{\text{crt}} = \text{Diagonal}(1 - \omega^i)
  \]
  where \(\omega\) is the same primitive \(p\)-th root of unity used to define the CRT basis.

### Linear Transforms and Time Complexity

The linear transforms represented by these matrices can be applied in time linear in the dimension. For \( G_{\text{pow}} \) and its inverse, this is due to their sparsity. For \( G_{\text{dec}} \) and \( G_{\text{crt}} \), the transforms can be computed efficiently by summing the input entries and their partial sums from the bottom up.

### Tensor Methods for Multiplication and Division

- **mulGPow** and **mulGDec**: Represent multiplication by \( G_{\text{pow}} \) and \( G_{\text{dec}} \), respectively.
- **divGPow** and **divGDec**: Represent division by \( G_{\text{pow}} \) and \( G_{\text{dec}} \). The outputs are wrapped by `Maybe` to handle cases where division fails.
- **mulGCRT** and **divGCRT**: Represent multiplication and division by \( G_{\text{crt}} \). These methods are also wrapped by `Maybe` because \( G_{\text{crt}} \) and its inverse are well-defined over the base ring only when a CRT basis exists.

### Chinese Remainder and Discrete Fourier Transforms

Consider a base ring, such as \(\mathbb{Z}_q\) or \(\mathbb{C}\), that admits an invertible index-\(m\) Chinese Remainder Transform (CRT\(_m\)), defined by a principal \(m\)-th root of unity \(\omega_m\). This transform converts from the powerful basis to the CRT basis, i.e.,
\[
\vec{p}_t \cdot \text{CRT}_m = \vec{c}_t
\]

For \( m > p \), the following sparse decompositions hold:
\[
\text{CRT}_m = (\text{DFT}_{m/p} \otimes I_{p-1}) \cdot \hat{T}_m \cdot (I_{m/p} \otimes \text{CRT}_p)
\]
\[
\text{DFT}_m = (\text{DFT}_{m/p} \otimes I_p) \cdot T_m \cdot (I_{m/p} \otimes \text{DFT}_p)
\]

Here, \(\text{DFT}_p\) is a square \(p\)-dimensional matrix with rows and columns indexed from zero, and \(\text{CRT}_p\) is its lower-left \((p-1)\)-dimensional submatrix. The \((i, j)\)-th entry of each matrix is \(\omega^{ij}_p\), where \(\omega_p = \omega^{m/p}_m\). The matrices \(\hat{T}_m\) and \(T_m\) are diagonal "twiddle" matrices whose diagonal entries are certain powers of \(\omega_m\).

### Inverse Transforms

For the inverses \(\text{CRT}_m^{-1}\) and \(\text{DFT}_m^{-1}\), we have:
\[
\text{DFT}_p^{-1} = p^{-1} \cdot \text{DFT}_p^*
\]
\[
\text{CRT}_p^{-1} = p^{-1} \cdot (X - 1 \cdot (\omega_1, \omega_2, \ldots, \omega_{p-1})^t)
\]
where \(X\) is the upper-right \((p-1)\)-dimensional submatrix of \(\text{DFT}_p^*\).

### Tensor Methods for CRT and DFT

- **crt** and **crtInv**: Represent multiplication by \(\text{CRT}_m\) and its inverse. These methods are wrapped by `Maybe` to handle cases where there is no CRT basis over the base ring.

### Generating Tweaked Gaussians in the Decoding Basis

Cryptographic applications often require sampling secret error terms from a prescribed distribution. For Ring-LWE, it is useful to use distributions \(D_r\) corresponding to spherical Gaussians in the canonical embedding. For sufficiently large \(r\), these distributions are supported by worst-case hardness proofs.

With the "tweaked" perspective, we sample from tweaked distributions \(t_m \cdot D_r\). The algorithm samples a coefficient vector over \(R\) with respect to one of the standard bases of \(R\), distributed as \(t_m \cdot D_r\).

### Sampling Algorithm

The sampling algorithm applies a linear transform over \(R\) to a vector of i.i.d. real Gaussian samples with parameter \(r\). The matrix \(E_m\) has a sparse decomposition:
\[
E_m = \sqrt{\frac{m}{p}} \cdot (I_{m/p} \otimes E_p)
\]
where \(E_p\) for \(p > 2\) is:
\[
E_p = \frac{1}{\sqrt{2}} \cdot \text{CRT}_p^* \cdot \begin{pmatrix}
I & -\sqrt{-1}J \\
\sqrt{-1}I & J
\end{pmatrix}
\]
with \(J\) being the "reversal" matrix obtained by reversing the columns of the identity matrix.

### Gram Matrix of Decoding Basis

Certain cryptographic applications need to compute the Euclidean norm of cyclotomic ring elements under the canonical embedding \(\sigma\). Let \(\vec{b}\) denote any \(\mathbb{Q}\)-basis of the ambient number field and \(\tau\) denote conjugation. The squared norm of \(\sigma(e)\), where \(e = \vec{b}^t \cdot \mathbf{e}\) for some rational coefficient vector \(\mathbf{e}\), is:
\[
\|\sigma(e)\|^2 = \langle \sigma(e), \sigma(e) \rangle = \text{Tr}_{R/\mathbb{Z}}(e \cdot \tau(e)) = \mathbf{e}^t \cdot \text{Tr}_{R/\mathbb{Z}}(\vec{b} \cdot \tau(\vec{b}^t)) \cdot \mathbf{e} = \langle \mathbf{e}, G \mathbf{e} \rangle
\]
where \(G = \text{Tr}_{R/\mathbb{Z}}(\vec{b} \cdot \tau(\vec{b}^t))\) is the Gram matrix of the basis \(\vec{b}\).

The Gram matrix of the decoding basis \(\vec{b}_m\) of \(R^\vee\) has a simple sparse decomposition. The tensor method `gSqNormDec` maps the coefficient tensor of \(e\) (with respect to \(\vec{d}_m\)) to \(\hat{m}^{-1} \cdot \|\sigma(g_m \cdot e)\|^2\).

### Summary

- **Matrices and Inverses**: Defined for powerful, decoding, and CRT bases.
- **Linear Transforms**: Efficiently computed in linear time.
- **Tensor Methods**: Implement multiplication and division by the matrices.
- **CRT and DFT**: Sparse decompositions for efficient computation.
- **Sampling Algorithm**: Generates tweaked Gaussians in the decoding basis.
- **Gram Matrix**: Computes the Euclidean norm of cyclotomic ring elements.