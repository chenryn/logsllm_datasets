执行结果
product_name | product_type
---------------+--------------
T恤衫 | 衣服
运动T恤 | 衣服
菜刀 | 厨房用具
高压锅 | 厨房用具
擦菜板 | 厨房用具
圆珠笔 | 办公用品
SQL中主要的比较运算符如表2-2所示，除了等于和不等于之外，还
有进行大小比较的运算符。
2-2 算术运算符和比较运算符 61 ●
表2-2 比较运算符
运算符 含义
KEYWORD = 和~相等
●=运算符
<> 和~不相等
●<>运算符
●>=运算符 >= 大于等于~
●>运算符
> 大于~
●=和= 1000;
执行结果
product_name | product_type | sale_price
---------------+--------------+-------------
T恤衫 | 衣服 | 1000
运动T恤 | 衣服 | 4000
菜刀 | 厨房用具 | 3000
高压锅 | 厨房用具 | 6800
代码清单2-21 选取出登记日期在2009年9月27日之前的记录
SELECT product_name, product_type, regist_date
FROM Product
WHERE regist_date =运算符。
另外，在使用大于等于（>=）或者小于等于（）和等号（=）的位置不能颠倒。一定要让不等
号在左，等号在右。如果写成（=）就会出错。当然，代表
不等于的比较运算符也不能写成（>= 500;
执行结果
product_name | sale_price | purchase_price
---------------+-------------+---------------
T恤衫 | 1000 | 500
运动T恤 | 4000 | 2800
高压锅 | 6800 | 5000
对字符串使用不等号时的注意事项
对字符串使用大于等于或者小于等于不等号时会得到什么样的结果
呢？接下来我们使用表2-3中的Chars表来进行确认。虽然该表中存储
的都是数字，但chr是字符串类型（CHAR类型）的列。
2-2 算术运算符和比较运算符 63 ●
表2-3 表
Chars
chr（字符串类型）
1
2
3
10
11
222
可以使用代码清单2-23中的SQL语句来创建Chars表。
代码清单2-23 创建Chars表并插入数据
-- DDL：创建表
CREATE TABLE Chars
(chr CHAR(3) NOT NULL,
PRIMARY KEY (chr));
SQL Server PostgreSQL
-- DML：插入数据
BEGIN TRANSACTION; ——————————①
INSERT INTO Chars VALUES ('1');
INSERT INTO Chars VALUES ('2');
INSERT INTO Chars VALUES ('3');
INSERT INTO Chars VALUES ('10');
INSERT INTO Chars VALUES ('11');
INSERT INTO Chars VALUES ('222');
COMMIT;
特定的SQL
代码清单2-23中的DML语句根据DBMS的不同而略有差异。在MySQL中执行
该语句时，请大家把①的部分改成“START TRANSACTION;”。在Oracle和DB2中
执行时不需用到①的部分，请删除。
那么，对Chars表执行代码清单2-24中的SELECT语句（查询条
件是chr列大于'2'）会得到什么样的结果呢？
代码清单2-24 选取出大于'2'的数据的SELECT语句
SELECT chr
FROM Chars
WHERE chr > '2';
● 64 第２章 查询基础
大家是不是觉得应该选取出比2大的3、10、11和222这4条记
录呢？下面就让我们来看看该SELECT语句的执行结果吧。
执行结果
chr
-----
3
222
没想到吧？是不是觉得10和11比2大，所以也应该选取出来呢？
大家之所以这样想，是因为混淆了数字和字符串，也就是说2和'2'并
不一样。
现在，chr列被定为字符串类型，并且在对字符串类型的数据进行
大小比较时，使用的是和数字比较不同的规则。典型的规则就是按照字典
顺序进行比较，也就是像姓名那样，按照条目在字典中出现的顺序来进行
排序。该规则最重要的一点就是，以相同字符开头的单词比不同字符开头
的单词更相近。
Chars表chr列中的数据按照字典顺序进行排序的结果如下所示。
1
10
11
2
222
3
'10'和'11'同样都是以'1'开头的字符串，首先判定为比'2'小。
这就像在字典中“提问”“提议”和“问题”按照如下顺序排列一样。
提问
提议
问题
或者我们以书籍的章节为例也可以。1-1节包含在第1章当中，所以
肯定比第2章更靠前。
2-2 算术运算符和比较运算符 65 ●
1
1-1
1-2
1-3
2
2-1
2-2
3
进行大小比较时，得到的结果是'1-3'比'2'小（'1-3'  '2'）。
比较字符串类型大小的规则今后还会经常使用，所以请大家牢记A。
注A
法则2-8
该规则对定长字符串和可变长字
符串都适用。
字符串类型的数据原则上按照字典顺序进行排序，不能与数字的大小顺序混淆。
不能对 使用比较运算符
NULL
关于比较运算符还有一点十分重要，那就是作为查询条件的列中含有
NULL的情况。例如，我们把进货单价（purchase_price）作为查
询条件。请注意，商品“叉子”和“圆珠笔”的进货单价是NULL。
我们先来选取进货单价为2800日元（purchase_price = 2800）
的记录（代码清单2-25）。
代码清单2-25 选取进货单价为2800日元的记录
SELECT product_name, purchase_price
FROM Product
WHERE purchase_price = 2800;
执行结果
product_name | purchase_price
---------------+---------------
运动T恤 | 2800
菜刀 | 2800
● 66 第２章 查询基础
大家对这个结果应该都没有疑问吧？接下来我们再尝试选取出进货单
价不是2800日元（purchase_price <> 2800）的记录（代码清单2-26）。
代码清单2-26 选取出进货单价不是2800日元的记录
SELECT product_name, purchase_price
FROM Product
WHERE purchase_price <> 2800;
执行结果
product_name | purchase_price
---------------+---------------
T恤衫 | 500
打孔器 | 320
高压锅 | 5000
擦菜板 | 790
执行结果中并没有“叉子”和“圆珠笔”。这两条记录由于进货单价
不明（NULL），因此无法判定是不是2800日元。
那如果想选取进货单价为NULL的记录的话，条件表达式该怎么写
呢？历经一番苦思冥想后，用“purchase_price = NULL”试了试，
还是一条记录也取不出来。
代码清单2-27 错误的SELECT语句（一条记录也取不出来）
SELECT product_name, purchase_price
FROM Product
WHERE purchase_price = NULL;
执行结果
product_name | purchase_price
---------------+---------------
一条记录也没取到（0行）
注A 即使使用<>运算符也还是无法选取出NULL的记录A。因此，SQL
SQL不识别“= NULL”和“<>
提供了专门用来判断是否为NULL的IS NULL运算符。想要选取NULL
NULL”的理由将会在下一节（包
含NULL情况下的真值）中进行
的记录时，可以像代码清单2-28那样来书写条件表达式。
说明。
KEYWORD 代码清单2-28 选取NULL的记录
●IS NULL运算符
SELECT product_name, purchase_price
FROM Product
WHERE purchase_price IS NULL;
2-2 算术运算符和比较运算符 67 ●
执行结果
product_name | purchase_price
---------------+---------------
叉子 |
圆珠笔 |
KEYWORD 反之，希望选取不是NULL的记录时，需要使用IS NOT NULL运
●IS NOT NULL运算符
算符（代码清单2-29）。
代码清单2-29 选取不为NULL的记录
SELECT product_name, purchase_price
FROM Product
WHERE purchase_price IS NOT NULL;
执行结果
product_name | purchase_price
---------------+---------------
T恤衫 | 500
打孔器 | 320
运动T恤 | 2800
菜刀 | 2800
高压锅 | 5000
擦菜板 | 790
法则2-9
希望选取NULL记录时，需要在条件表达式中使用IS NULL运算符。希望选取不
是NULL的记录时，需要在条件表达式中使用IS NOT NULL运算符。
除此之外，对NULL使用比较运算符的方法还有很多，详细内容将
会在接下来的第6章中进行介绍。
● 68 第2章 查询基础
第2章 查询基础
2-3
逻辑运算符
● 通过使用逻辑运算符，可以将多个查询条件进行组合。
学习重点
● 通过NOT运算符可以生成“不是~”这样的查询条件。
● 两边条件都成立时，使用AND运算符的查询条件才成立。
● 只要两边的条件中有一个成立，使用OR运算符的查询条件就可以成立。
● 值可以归结为真（TRUE）和假（FALSE）其中之一的值称为真值。比较运
算符在比较成立时返回真，不成立时返回假。但是，在SQL中还存在另外
一个特定的真值——不确定（UNKNOWN）。