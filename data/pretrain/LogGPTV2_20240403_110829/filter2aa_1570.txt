Wietze Beukema (@wietze)
D3FC0N, August 2022
SAVE THE ENVIRONMENT (VARIABLE)
HIJACKING LEGITIMATE APPLICATIONS WITH A MINIMAL FOOTPRINT
D3F
C0N
@Wietze
‚ñ™ Sr Threat Hunter on CrowdStrike‚Äôs OverWatch Elite team
‚ñ™ Based in London, UK
‚ñ™ Previously presented at BSides London, MITRE ATT&CK EU Community,
SANS DFIR
HELLO WORLD, WHO DIS?
2
@WIETZE
D3F
C0N
DLL HIJACKING
‚ÄúTricking a (legitimate/trusted) application into loading an arbitrary DLL‚Äù
Legitimate DLLs
Trusted program
Evil DLL
3
@WIETZE
D3F
C0N
Attacker-
controlled folder
Original folder
4
@WIETZE
DLL HIJACKING: COMMON TYPES
DLL SIDE-LOADING
Move vulnerable EXE, put next to malicious DLL
DLL SEARCH ORDER HIJACKING
Put malicious DLL in folder searched before legit DLL
DLL SUBSTITUTION
Replace the original DLL with a malicious one
D3F
C0N
Attacker-
controlled folder
Original folder
5
@WIETZE
DLL HIJACKING: LESS COMMON TYPES
PHANTOM DLL HIJACKING
Create malicious DLL in location that is searched for, 
but normally does not exist
WINSXS HIJACKING
Manipulate Windows Side-by-Side infrastructure
INPUT-BASED HIJACKING
Manipulate the command line, Windows Registry, etc.
D3F
C0N
WELL DOCUMENTED
WELL RESEARCHED
WELL DETECTED
6
@WIETZE
D3F
C0N
7
@WIETZE
VARIABLES
D3F
C0N
‚ñ™ (Dynamic) variable that can be used by running programs
‚ñ™ Can be used in:
‚ñ™ Command shells (e.g. %VAR% on Windows, $VAR on Unix)
‚ñ™ As well as regular processes (e.g. getenv("VAR") in C)
‚ñ™ Typically stored as (ASCII) string
8
@WIETZE
ENVIRONMENT VARIABLES
D3F
C0N
ENVIRONMENT VARIABLES: A BRIEF HISTORY
An environment variable is a special case of a replaceable parameter.
If the SET command is used in the form
SET name=value
to add an environment variable to the system's environment block, the
string value will be substituted for the string %name% wherever the
latter is encountered during the interpretation of a batch file. This
capability is available only in versions 2.x, 3.1, and 3.2.
70
80
90
00
10
20
1978: Version 7 Unix introduces 
environment variables
1982: PS DOS 2.0 introduces 
environment variables
1999: First ever issued CVEs contain 
PrivEsc via %PATH%
1997: Security researcher highlights 
issues with %PATH% in WinNT
1992: Windows 3.1 introduces the 
Windows Registry
List:       ntbugtraq
Subject:    NT security - why bother?
From:       Paul Ashton 
Date:       1997-07-23 22:34:20}
[‚Ä¶]
Why would any other application developers bother to support secure 
configurations if this is what they see coming out of Redmond?
[‚Ä¶]
9
@WIETZE
D3F
C0N
‚ñ™ All variable keys and values are stored in a single string
‚ñ™ This string can contain up to 32,767 (215-1) characters in total
‚ñ™ (Semi-) Persistent variables are stored in:
‚ñ™ (typically) Initialised on boot, then passed down when creating child processes
10
@WIETZE
ENVIRONMENT VARIABLES IN WINDOWS
Scope
Location
All Users
HKLM\System\CurrentControlSet\Control\Session Manager\Environment
Current User
HKCU\Environment
Current Session
HKCU\Volatile Environment
Process
D3F
C0N
11
@WIETZE
ENVIRONMENT VARIABLES IN WINDOWS
Process Environment Block 
(PEB)
InheritedAddressSpace
ReadImageFileExecOptions
BeingDebugged
SpareBool
Mutant
Ldr
ProcessParameters
SubSystemData
ProcessHeap
‚Ä¶
RTL_USER_PROCESS_PARA
METERS
MaximumLength
Length
Flags
ConsoleHandle
ConsoleFlags
StdInputHandle
StdOutputHandle
StdErrorHandle
CurrentDirectoryPath
CurrentDirectoryHandle
DllPath
ImagePathName
CommandLine
Environment
StartingPositionLeft
StartingPositionTop
‚Ä¶
=::=::\
ALLUSERSPROFILE=C:\ProgramData
APPDATA=C:\Users\Wietze\AppData\Roaming
CommonProgramFiles=C:\Program Files\Commo
CommonProgramFiles(x86)=C:\Program Files 
CommonProgramW6432=C:\Program Files\Commo
COMPUTERNAME=WIETZE-LAB
ComSpec=C:\Windows\system32\cmd.exe
DriverData=C:\Windows\System32\Drivers\Dr
FPS_BROWSER_APP_PROFILE_STRING=Internet E
FPS_BROWSER_USER_PROFILE_STRING=Default
HOMEDRIVE=C:
HOMEPATH=\Users\Wietze
LOCALAPPDATA=C:\Users\Wietze\AppData\Loca
LOGONSERVER=\\WIETZE-LAB
NUMBER_OF_PROCESSORS=2
OneDrive=C:\Users\Wietze\OneDrive
OS=Windows_NT
Path=C:\Windows\system32;C:\Windows;C:\Wi
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS
PROCESSOR_ARCHITECTURE=AMD64
PROCESSOR_IDENTIFIER=Intel64 Family 6 
PROCESSOR_LEVEL=6
PROCESSOR_REVISION=8e09
ProgramData=C:\ProgramData
ProgramFiles=C:\Program Files
ProgramFiles(x86)=C:\Program Files (x86)
ProgramW6432=C:\Program Files
D3F
C0N
BOOL CreateProcessA(
[in, optional] 
LPCSTR
lpApplicationName,
[in, out, optional] LPSTR
lpCommandLine,
[in, optional] 
LPSECURITY_ATTRIBUTES lpProcessAttributes,
[in, optional] 
LPSECURITY_ATTRIBUTES lpThreadAttributes,
[in] 
BOOL
bInheritHandles,
[in] 
DWORD
dwCreationFlags,
[in, optional] 
LPVOID
lpEnvironment,
[in, optional] 
LPCSTR
lpCurrentDirectory,
[in] 
LPSTARTUPINFOA
lpStartupInfo,
[out] 
LPPROCESS_INFORMATION lpProcessInformation,
);
12
@WIETZE
WINDOWS API
D3F
C0N
SCOPE FOR TAMPERING?
13
@WIETZE
D3F
C0N
Environment variables pointing to folders we normally do not control, e.g.:
SYSTEMDRIVE=C:
SYSTEMROOT=C:\Windows
WINDIR=C:\Windows
ProgramFiles=C:\Program Files
ProgramFiles(x86)=C:\Program Files (x86)
ProgramW6432=C:\Program Files
14
@WIETZE
VARIABLES OF PARTICULAR INTEREST
D3F
C0N
After picking an application to test:
1. Update environment variable 
to new location
2. Start application
3. Monitor attempted DLL loads 
from the new location
4. Profit
15
@WIETZE
BASIC CONCEPT
Further references: 
https://www.fortinet.com/blog/threat-research/elastic-boundaries-elevating-privileges-with-environment-
variables-expansion, https://twitter.com/0gtweet/status/1429731052826906624
Trusted Program
%SOMEVARIABLE%\SomeLib.DLL
SomeLib.DLL
C:\Legitimate\Path\SomeLib.DLL
Trusted Program
%SOMEVARIABLE%\SomeLib.DLL
SomeLib.DLL
C:\Evil\Path\SomeLib.DLL
SOMEVARIABLE=C:\Evil\Path
Normal run
Manipulated run
D3F
C0N
16
@WIETZE
EXAMPLE: POWERSHELL
%SystemRoot%\System32\mswsock.dll
hostname.exe
mswsock.dll
C:\Windows\System32\mswsock.dll
C:\Temp\Evil\System32\mswsock.dll
D3F
C0N
17
@WIETZE
D3F
C0N
‚úîRun your code via pre-existing, legitimate software
‚úîNo custom command lines, special process operations, etc. 
‚úîNo registry footprint 
‚úîEDR rarely (?) analyses process-level environment variables
‚úîSupported by scripting languages including PowerShell, VBScript, JScript
18
@WIETZE
‚Ä¶BUT WHY?
D3F
C0N
19
@WIETZE
EXAMPLE: VBSCRIPT
D3F
C0N
DLL Side-loading
‚ñ™ Requires bringing/moving executable
DLL Search Order Hijacking
‚ñ™ Limited options
‚ñ™ Or requires bringing executable 
DLL substitution
‚ñ™ May require elevated rights
Input-based DLL hijacking
‚ñ™ Detectable via command line 
‚ñ™ Detectable via (known) Registry locations
COMPARISON
20
@WIETZE
Environment Variable-Based Hijacking
‚ñ™ Uses pre-existing applications
‚ñ™ Does not require elevated rights
‚ñ™ Does not require special command-line 
arguments
‚ñ™ Many candidates
‚ñ™ Only footprint: planting of the DLL
D3F
C0N
21
@WIETZE
FINDING 
VULNERABLE
EXECUTABLES
D3F
C0N
Turning one observation into a systemic approach
Idea:
HACKER‚ÄôS MINDSET 
PREP
‚Ä¢ Take all DLLs in e.g. 
C:\Windows\System32
‚Ä¢ Create implants for 
each of them, creating 
a fingerprint file when 
loaded
EXECUTION
‚Ä¢ Take all EXEs in e.g. 
C:\Windows\System32
‚Ä¢ Run them with certain 
environment variables 
pointed to implants 
folder
VALIDATION
‚Ä¢ Check fingerprint files
22
@WIETZE
D3F
C0N
A common problem with DLL Hijacking: stability
‚ñ™ We don‚Äôt (fully) know the role of the DLL in the vulnerable program
‚ñ™ We don‚Äôt (fully) control the execution flow of the vulnerable program
23
@WIETZE
CHALLENGES
Approach
Problems
Solution
Creating a generic DLL
‚ö†Ô∏è Rejected/crashing due to missing exports or ordinals
‚ö†Ô∏è Crashing due to missing functionality
‚ö†Ô∏è Crashing due to missing metadata/resources
üîÄ Function Redirection 
(‚ÄòDLL Proxying‚Äô)
Creating DLL with dummy 
functions for expected export 
names
‚ö†Ô∏è Rejected/crashing due to missing ordinals
‚ö†Ô∏è Crashing due to missing functionality
‚ö†Ô∏è Crashing due to missing metadata/resources
Creating DLL with function 
redirection
‚ö†Ô∏è Crashing due to missing metadata/resource
üìÑ Resource cloning
D3F
C0N
24
@WIETZE
LegitimateApp.exe
ExportA
ExportB
ExportA
ExportB
C:\fakepath\SomeDll.dll
C:\windows\SomeDll.dll
D3F
C0N
25
@WIETZE
MASS GENERATE DLL IMPLANTS
D3F
C0N
BOOL WINAPI DllMain(HINSTANCE hModule, DWORD fdwReason, LPVOID lpvReserved)
{
switch (fdwReason)
{
case DLL_THREAD_ATTACH:
case DLL_PROCESS_ATTACH:
generate_fingerprint(__func__);
break;
case DLL_PROCESS_DETACH:
break;
case DLL_THREAD_DETACH:
break;
}
return TRUE;
}
26
@WIETZE
D3F
C0N
27
@WIETZE
MASS TEST VULNERABLE EXECUTABLES
D3F
C0N
28
@WIETZE
D3F
C0N
RELEASING TODAY
29
@WIETZE
‚ñ™ Framework for mass compiling DLLs 
for DLL Hijacking 
‚ñ™ With export function redirection
‚ñ™ With resource cloning
‚ñ™ Using MinGW (i.e. cross-platform 
support)
https://github.com/wietze/
D3F
C0N
Tested on Windows 11 (21H2):
‚ñ™ 82 executables
‚ñ™ 91 unique DLLs
‚ñ™ Nearly 398 combinations
FINDINGS
30
@WIETZE
3rd-party software:
‚ñ™ Office 2021
‚ñ™ Browsers: latest Edge, Chrome, Firefox, ‚Ä¶
‚ñ™ Chat software: latest Slack, Teams, Zoom, 
WebEx, ‚Ä¶
However: it is not about the individual results
D3F
C0N
31
@WIETZE
FURTHER 
IMPLICATIONS
D3F
C0N
‚ñ™ Requirement: when process is created, we should be able to set Environment Variable
‚ñ™ Using script in combination with scheduled task: bit meh
‚ñ™ Manipulating service-specific Environment Variables‚Ä¶?
@WIETZE
PERSISTENCE
D3F
C0N
33
@WIETZE
PRIVILEGE ESCALATION (?)
‚ñ™ ‚ÄòStealthy‚Äô (?) way to get SYSTEM 
D3F
C0N
‚ñ™ CreateProcess cannot run programs that require elevation
‚ñ™ ShellExecute does not take process-level environment variables
34
@WIETZE
UAC BYPASS (?)
D3F
C0N
‚ñ™ By design: a child process that is run with a higher integrity level 
will not inherit its parent‚Äôs environment variables
‚ñ™ Design decision made likely to prevent unauthorised tampering with the 
PATH environment variable
‚ñ™ However: some processes are known to take Current User‚Äôs environment 
variables and run it elevated
35
@WIETZE
UAC BYPASS (?)
D3F
C0N
36
@WIETZE
FUTURE
D3F
C0N
DLL HIJACKING IS HERE TO STAY
37
@WIETZE
D3F
C0N
Hijack Libs project
‚ñ™ Curated list of DLL hijacking 
candidates
‚ñ™ Environment Variable
‚ñ™ Side-Loading
‚ñ™ Phantom
‚ñ™ Search Order Hijacking
‚ñ™ Open source, community driven
Now live: hijacklibs.net 
RELEASING TODAY: HIJACK LIBS
38
@WIETZE
D3F
C0N
HIJACK LIBS
39
@WIETZE
For each DLL:
‚ñ™ Breakdown of applicable DLL Hijacking 
types
‚ñ™ Overview of expected DLL locations
‚ñ™ Overview of vulnerable EXEs
‚ñ™ Detection logic (Sigma)
üëâhijacklibs.net 
D3F
C0N
40
@WIETZE
D3F
C0N
41
@WIETZE
Community, unite! üëè
https://hijacklibs.net
D3F
C0N
THANK YOU
FEEDBACK? DM S OPEN: @Wietze
https://www.hijacklibs.net