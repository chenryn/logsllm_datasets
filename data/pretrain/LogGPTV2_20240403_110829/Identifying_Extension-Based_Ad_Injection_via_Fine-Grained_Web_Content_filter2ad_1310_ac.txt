### 4.3 Content Provenance Indicators

To effectively track and communicate the origin of content modifications, OriginTracer must first (i) identify when suspicious content modifications, such as extension-based ad injection, occur, and (ii) convey this information to the user in an easily comprehensible manner.

#### Identification of Suspicious Content Modifications
Our prototype monitors for content modifications by annotating subtrees of elements with label sets that include a particular extension's label. This check is performed efficiently by traversing the DOM and inspecting element label sets after a set of changes have been made. For example, if a subtree of elements is annotated with a label indicating that it was modified by a specific extension, OriginTracer can flag this as a suspicious modification.

#### Communication of Provenance Information
There are several methods to communicate content provenance, as discussed in Section 3. In our current prototype, we use a configurable border color for the root element of the suspicious DOM subtree. This border should be visually distinct from the existing color palette of the web page. Additionally, a tooltip displaying the root label is shown when the user hovers over the DOM subtree. An example of this is illustrated in Figure 3. To implement these features, OriginTracer modifies the style and title attributes. Since OriginTracer highlights elements in real-time, it delays the addition of highlighting until the element is attached to the page’s DOM and is displayed. Therefore, modifications were made to the `ContainerNode` class, which is responsible for attaching new elements to the DOM.

While we did not exhaustively explore the design space of content provenance indicators in this work (e.g., selective blocking of extension-based DOM modifications), we report on the usability of the prototype implementation in our evaluation.

### 5 Evaluation

In this section, we evaluate the effectiveness, usability, and performance of content provenance indicators using the OriginTracer prototype. The key questions we aim to answer are:

- **(Q1)** How susceptible are users to injected content such as third-party advertisements? (Section 5.1)
- **(Q2)** Do provenance indicators lead to a significant, measurable decrease in the likelihood of clicking on third-party content that originates from extensions? (Section 5.1)
- **(Q3)** Are users likely to use the system during their normal web browsing? (Section 5.2)
- **(Q4)** Does integration of the provenance tracking system significantly degrade the users’ browsing experience and performance of the browser on a representative sample of websites? (Section 5.3)

#### Ethics Statement
As part of the evaluation, we conducted two experiments involving users unaffiliated with the project. Due to the potential risk to user confidentiality and privacy, we formulated an experimental protocol approved by our university’s institutional review board (IRB). This protocol included safeguards to prevent exposing sensitive user data such as account names, passwords, personal addresses, and financial information, as well as to protect the anonymity of the study participants. While users were not initially informed of the purpose of some experiments, all users were debriefed at the end of each trial.

### 5.1 Effectiveness of the Approach

Similar to prior work [13], we conducted a user study to measure the effectiveness of content provenance in helping users identify unwanted third-party content. However, our study involved a significantly larger group of 80 students with varying levels of technical sophistication. We conducted an initial briefing to ensure honest responses.

#### User Susceptibility to Ad Injection
The first phase of the experiment aimed to measure whether users could detect third-party content not intended for inclusion by the publishers. Users were divided into two equal groups of 40. Each group was presented with three unmodified Chromium browsers, each with a separate ad-injecting extension installed: Auto Zoom, Alpha Finder, and X-Notifier for the first group, and Candy Zapper, uTorrent, and Gethoneybadger for the second group. These extensions exhibit a range of ad injection behaviors, from subtle injections to obvious pop-ups.

Participants were asked to visit three popular retail websites (Amazon, Walmart, and Alibaba) and report any content that did not seem to originate from the publisher. The results, shown in Figure 4, indicate that many users often fail to recognize ad injection, even when told to look for foreign content. For example, 34 participants did not notice any of the three ads added to Amazon by the Auto Zoom extension. More users identified ads injected by Alpha Finder and X-Notifier, possibly because these extensions use more noticeable pop-up advertisements. However, many participants still failed to identify these pop-ups and thought they were part of the publisher’s content.

#### Efficacy of Content Provenance Indicators
After the first phase, we briefly explained the purpose of OriginTracer and content provenance to the participants. For each participant, we selected one of the three ad-injecting extensions where they had missed most of the injected ads and installed it on a Chromium instance equipped with OriginTracer. Participants were then asked to visit one of the three retail websites and identify third-party content modifications with the help of provenance indicators. The results, shown in Figure 5b, demonstrate that users are more likely to recognize third-party content modifications using provenance indicators. A paired t-test yielded a p-value of 4.9199 × 10−7, sufficient to reject the null hypothesis at a 1% significance level. Some outliers in assisted identification suggest that different visual highlighting techniques might further improve user recognition.

Finally, we asked participants how likely they would be to use the content provenance system in their daily web browsing. The results, shown in Figure 5c, indicate that most users would be willing to use such a system. A few participants stated they do not need the system because they would not click on any advertisements. However, distinguishing between advertisements and legitimate content can be challenging, and users might still be lured into clicking on injected ads.

### 5.2 Usability

We conducted another experiment to measure the usability of the OriginTracer prototype. The user population consisted of 13 students with different technical backgrounds. Participants were asked to browse the web for several hours, visiting any websites of their choice, but avoiding those requiring login or involving sensitive subject matter. We also randomly selected 50 websites from the Alexa Top 500 for each user to visit, ensuring they browsed at least three levels down from the home page and visited external links.

During the browsing session, the browser recorded the number of URLs visited, and participants reported any errors. Out of nearly 2,000 URLs, two catastrophic errors and 27 non-catastrophic errors were encountered. However, the majority of URLs rendered and executed correctly, and no broken extensions were reported. We conclude that the proposed approach is compatible with modern browsers and benign extensions, and further optimization could reduce errors.

### 5.3 Performance

To measure the performance overhead of OriginTracer, we configured both an unmodified Chromium browser and the prototype to automatically visit the Alexa Top 1 K. This test set includes a broad spectrum of websites, including those with heavy use of third-party components and advertisements. We used Selenium WebDriver to automate the process and recorded the total elapsed time from the beginning of the browsing process until the entire list of websites was visited. The average elapsed time for browsing the home pages of the Alexa Top 1 K websites was 3,457 seconds for the unmodified browser and 3,821 seconds for OriginTracer, resulting in a 10.5% overhead on browsing time. OriginTracer did not cause any measurable overhead on startup time.

While this overhead is not insignificant, our user study indicates that many users would be willing to trade off perceived performance overhead for the security benefits provided by the system. Further optimization of the implementation could decrease the page load time.

### 6 Related Work

#### 6.1 Malicious Advertising
Substantial research on malicious advertisements has focused on isolation and detection.