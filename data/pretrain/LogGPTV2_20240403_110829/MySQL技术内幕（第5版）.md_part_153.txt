Innodb_os_log_written
Innodb_os_log_pending_fsyncs
InnoDB日志文件的写入次数，
Innodb_log_writes
Innodb_log_write_requests
当把数据写入将被刷新的日志缓冲池时，InnoDB必须等待的次数。
Innodb_log_waits
写入InnoDB双写缓冲区的次数，
写入InnoDB双写缓冲区的页面数。
Innodb_dblwr_pages_written
Innodb_data_written
InnoDB读取的字节数。
Innodb_data_read
。此变量是在MySQL5.6.2里引入的。
D.2状态变量
647
---
## Page 668
D.2.3SSL 状态变量
D.2.2查询缓存状态变量
648
以下变量提供的是与SSL 管理代码有关的信息。其中的许多变量都可以反映出当前会话的状态；
口
 Qcache_queries_in_cache
口
Qcache_free_memory
 Qcache_free_blocks
下面这些状态变量显示的是与查询缓存操作有关的信息。
口
 Innodb_truncated_status_writes
口
 Innodb_row_lock_time_max
 Innodb_row_lock_current_waits
 Innodb_pages_written
查询缓存里的空闲内存块数量。
D
SHOW ENGINE INNODB STATUS的输出内容被截断了多少次。此变量是在MySQL5.5.7里引入的。
查询缓存里的内存块数量。
缓存里注册的查询数量。
无法缓存的或者因用户使用了SQL_NO_CACHE关键字而被禁止缓存的查询的数量。
在InnoDB表里更新的行数。
插入InnoDB表的行数。
获得InnoDB行锁所需要花费的最大时间（单位为毫秒）
获得一个InnoDB行锁所需要花费的平均时间（单位为毫秒）
InnoDB正在等待获得的行锁个数。
InnoDB写入的页数。
Qcache_total_blocks
Qcache_not_cached
为了给新的查询结果腾出空间而从查询缓存里丢弃的缓存查询结果的数量。
Qcache_lowmem_prunes
在查询缓存里注册过的查询数量。
Qcache_inserts
保存在缓存里的满足查询请求的查询数量。
Qcache_hits
查询缓存里的空闲内存总量。
从InnoDB表读取的行数
 Innodb_rows_read
从InnoDB表删除的行数。
Innodb_rows_deleted
InnoDB为获得行锁而等待的时间。
Innodb_row_lock_waits-
获得InnoDB行锁所花费的总时间（单位为毫秒）
Innodb_rows_inserted
Innodb_row_lock_time_avg
附录D系统变量、状态变量和用户变量参考
---
## Page 669
才可用。
并且当会话实际并非安全连接时，它们将为空白。只有服务器在构建时包含了 SSL支持，这些变量
ssl_session_cache_timeouts
 Ssl_session_cache_overflows
 Ssl_session_cache_mode
 Ssl_session_cache_misses
 Ssl_session_cache_hits
 Ssl_server_not_before
 Ssl_server_not_after
 ssl_finished_connects
 Ssl_finished_accepts
 Ssl_default_timeout
 Ssl_ctx_verify_mode
 ssl_ctx_verify_depth
 ssl_connect_renegotiates
 ssl_client_connects
 Ssl_cipher_list
 Ssl_cipher
 Ssl_callback_cache_hits
 ssl_accepts
 Ssl_accept_renegotiates
Ssl_session_cache_size
SSL证书的开始有效日期。此变量是在MySQL5.6.3里引入的。
SSL证书的最后有效日期。此变量是在MySQL5.6.3里引入的。
SSL会话缓存里存储的会话数。
SSL上下文的验证模式。
SSL上下文的验证深度。
在服务器模式里从外部会话缓存成功地检索到的会话数量。
在服务器模式里开始重新协商的次数。
服务器所使用的SSL缓存类型。
在会话缓存里未找到的SSL会话数。
在客户端模式里成功建立的SSL/TLS会话数。
已超时的会话数。
因缓存已满而被删除的会话数。
在会话缓存里找到的SSL会话数。
在服务器模式里成功建立的SSL/TLS会话数。
默认的SSL会话超时时间
在客户端模式里开始重新协商的次数。
在客户端模式里开始的SSL/TLS握手的次数。
可用的SSL密码协议列表
判断会话是否是已加密。
会话所使用的SSL密码（协议）。
在服务器模式里开始的SSL/TLS握手的次数。
（如果不存在有效的密码，则为空。）可以利用此变量来
D.2状态变量
649
---
## Page 670
赋予的值。
默认值为NULL。
达式（包括引用了其他变量的表达式）进行赋值。
里使用操作符“：=”。可以在同一条语句里对多个变量进行赋值。
用引号引起来。用户变量名不区分大小写。
规则相似（参考2.2节)。不过，用户变量名有一点与标识符不相同，它与可以包含“”，同时无需
D.3
650
在返回多个行的 SELECT 语句里，每一行都会执行变量赋值操作。最终的结果值为最后那行所
用户变量的赋值方式有两种：在SET语句里使用操作符“=”或“：=”；在其他语句（如SELECT）
mySql> SELECT CHARSET(@s),COLLATION(@s）;
mysql> SET @s = CONVERT(abc'USING latin2) COLLATE latin2_czech_cs;
字符串类型的用户变量所拥有的字符集和排序规则与给它们赋值的那些值的相同：
用户变量的值只在当前会话里有效。也就是说，当会话终止时，这些值都将会消失。
用户变量可以被赋值为整数、小数、浮点数、
mysql> SET @color
mysql>SET@x=0,@y=2;
用户定义的变量的名字由“@”字符和一个紧随其后的标识符构成，遵守的规则与合法标识符的
mySql> SELECT @count := COUNT(*）FROM member;
用户定义的变量（简称为“用户变量”）可以被赋值；然后，在其他语句里引用它们。
 ssl_version
口
Ssl_used_session_cache_entries
Ssl_session_reused
latin2
CHARSET(@S)ICOLLATION(@s)
@count:=COUNT（*）
@x
是否有会话再次利用了之前的某个会话。
用户定义的变量
会话的SSL协议版本。
SSL验证模式。
Ssl_verify_mode
SSL验证深度。
Ssl_verify_depth
会话缓存里的会话数。
附录D系统变量、状态变量和用户变量参考
@y
|latin2_czech_cs
1@color|@size
102
'red',
@size:=
'large';
，如果在访问某个用户变量时它还未被赋值，则其
，字符串或NULL值，并且可以通过任意形式的表
---
## Page 671
句或子句。
或子句，以及那些与MySQL集群或那些不常使用到的存储引擎（如FEDERATED）特定相关的语
SQL语法参考
■附录E
口SCHEMA和 SCHEMAS 分别与DATABASE和DATABASES 同义，并且可以在任何地方使用后面
口下面两种的格式都可用于指定字符集：
对于那些通用的同义词，本书则将它们统一列在了下面，而没有将其随处放置。
本附录不会涉及那些与用户定义的函数（User-DefinedFunction，UDF）和XA事务相关的语句
str'表示的是一个字符串。
口
口省略号（...）表示的是该省略号前面的那个项目可以重复多次。
口竖线字符（1）用于分隔列表里的各个条目。如果列表出现在一对方括号里，则表示可以从中
方括号（[]）用于表示可选信息。
在对SQL语法进行描述时，本书使用了以下这些约定。
口复合语句所使用的 SQL 语句，都需要使用 BEGIN 和 END 来编写，并且可用于编写存储程
口 复合语句之外的 SQL 语句。
本附录的内容包括以下3个部分。
这些形式可以用在表和列的定义里，也可以用在CREATE DATABESE 和ALTER DATABASE
 CHARACTER SET charset
pattern'），表示的是一些更为特定类型的值，如文件名或模式。
n表示的是一个整数。
语句里。
CHARSET [=] charset
选取一个。如果列表出现在一对花括号（{）里，则表示必须从中选取一个。
器忽略掉）。
在 SQL代码里编写注释的语法。注释的用途是编写描述性文字（它们会被MySQL服务器忽
序：在服务器端存储的函数、过程、触发器和事件。
附录将介绍MySQL 提供的各种 SQL 语句的语法。如无特别说明，这里列出的语句早在
对于使用单引号括起来的值（如file_name'或
---
## Page 672
有IGNORE，则那些拥有键值重复的行将被删除。
么还需要使用关键字 IGNORE。如果没有 IGNORE，则 ALTER TABLE 语句的作用会被取消。如果带
以指定需要对该表执行的哪些操作。如果该操作会使更改后的表里的唯一性索引出现重复键值，那
限。
权限。
子句会在CREATE EVENT 条目里进行描述。
件系统编码。
据库目录名称里包含有特殊字符，那么它会根据需要将该名字重新编码为MySQL当前使用的那个文
现错误。
属性值相同。如果省略了数据库名，那么此语句会使用默认数据库。如果没有默认数据库，则会出
权限。
的权限，那么执行 USE db_name 语句时会失败。
果在执行语句时没有足够的权限，那么该语句的执行会失败。例如，如果没有访问db_name 数据库
E.1
652
当升级 MySQL 5.1之前的版本时，需要使用 UPGRADE DATA DIRECTORY NAME 语法。如果数
ALTERTABLE可用于重命名表或更改它们的结构。要使用此命令时，需要指定表名，同时还可
这些语句用于更改存储例程的特性。在使用它们时，需要对指定例程拥有 ALTER ROUTINE 权
ALTER (FUNCTION I PROcEDURE) routine_name [characteristic]...
·ALTER FUNCTION,ALTER PROCEDURE
这条语句用于更改现有事件，
·ALTER EVENT
这条语句可用于更改数据库的属性，或者升级数据库目录名的编码。它要求对数据库拥有ALTER
本节将对MySQL的各种 SQL语句（复合语句除外，参考E.2节）的语法和含义进行描述。如
·ALTER DATABASE
口COLUMNS和FIELDS同义。
ALTER[IGNORE] TABLE tbl_name[action[,action]...]
●ALTERTABLE
characteristic:
ALTER
ALTER DATABASE
[DO event_stmt]
[DEFINER=definer_name]
SQL语句语法（非复合语句）
【ON COMPLETION [NOT] PRESERVE]
句，也可以使用CREATESCHEMA语句。
两个关键字的语句里随意替换。例如，在创建数据库时，既可以使用CREATE DATABASE语
COMMENT
ON SCHEDULE
附录ESQL语法参考
{CONTAINS SQL
COMMENT
DISABLE [ON SLAVE]]
str'
new
schedule]
INOSQL
vent
name
使其具有新的定义。
|READS SQL DATAIMODIFIES SQL DATA}