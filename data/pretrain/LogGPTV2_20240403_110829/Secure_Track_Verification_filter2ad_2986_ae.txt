0
1
EGR=1
m=3
m=5
m=10
m=15
0
5
10
Number of verifiers (|V|)
15
20
Fig. 9. Result of the simulation of the global veriﬁcation scheme for 1000
tracks with an increasing number of veriﬁers and different numbers of received
location claims (m = |T|). We used the following simulation parameters:
r = 200 m, σ = 50 ns, σdrift = 20 μs/s.
Fig. 10. The 1000 trajectories fetched from the OpenSky database for our
applicability analysis. To achieve a good distribution of the veriﬁers across the
considered area, we arranged 25 veriﬁers on a grid as marked by the bubbles.
Another result of this analysis is, that adding more than 7
veriﬁers does not result in a signiﬁcant increase of the EGR.
VII. APPLICABILITY TO AIR TRAFFIC
Besides analyzing error propagation, we conducted addi-
tional simulations with real ﬂight
tracks recorded by the
OpenSky Network [14]. This enables us to assess the per-
formance of our scheme with realistic tracks, proves the
applicability to air trafﬁc surveillance systems, and highlights
challenges for a secure deployment of our scheme.
A. Simulation Setup & Data Preparation
The OpenSky Network is an Automatic Dependent
Surveillance–Broadcast (ADS-B) sensor network which col-
lects real-world air transportation communication data. In
209209
ADS-B, airplanes (and other vehicles) broadcast their posi-
tion, velocity, and other status information periodically. The
position reports, for instance, are broadcast twice per second.
They contain the airplane’s longitude, latitude, and altitude.
Interpreting these position reports as location claims, ADS-B
perfectly ﬁts to our track veriﬁcation scheme. The tracks are
the trajectories of airplanes described by their ADS-B position
reports.
For our analysis, we fetched 1000 ﬂights from OpenSky’s
database which were received by one receiver. To have a large
variety of trajectories, we selected a receiver close to Zurich
Airport. This way, our simulations contain trajectories from
the en-route airspace as well as from the approach area of
the airport. We placed 25 veriﬁers in the reception area of the
OpenSky receiver. To achieve a good distribution of veriﬁers
across the reception area, we arranged the veriﬁers in a grid.
Figure 10 shows the 1000 trajectories and the positions of the
25 veriﬁers.
While OpenSky provides timestamps with nanosecond pre-
cision for the time of arrival of the position reports, ADS-B
does unfortunately not support timestamps for the transmission
times. An attempt to estimate Δi,j for two position reports
based on the airplane’s reported velocity and the distance
between the two reported positions failed due to the low
resolution of velocity reports.
It is worth noting here that ADS-B has a feature in which
transponders transmit position reports at discrete, known time
intervals (see A.1.4.2.3.1 of [18]). This allows a receiver to
estimate Δi,j very accurately without the need for explicit
transmission timestamps. Thus, our scheme is fully realizable
within the ADS-B standard. As of this writing, however,
the ADS-B deployment is still in an initial phase. Too few
airplanes support this mode at the moment and there are no
guarantees and information on the accuracy of the current
implementation as it is not yet certiﬁed for operational use.
Thus, we had to generate the timestamps ti artiﬁcially to
be able to apply our track veriﬁcation scheme to the data.
Therefore, we assumed that the track claimed by the airplane
was correct and used the veriﬁers positions to estimate the
propagation delay for each position report and veriﬁer. Noise
was added to these estimations in the same way as in the
previous simulations from Section VI. This way, we were able
to apply our scheme to trajectories with realistic properties
such as dilution of precision and real shapes.
As in the previous simulations,
the timestamps for the
position reports were generated with random clock drifts with
standard deviation σdrift = 20 μs/s for each airplane and
measurement error with σ = 50 ns for each timestamp. Then,
we calculated the local veriﬁcation results of all ﬂights for
each veriﬁer. In order to gain insights on the time needed to
verify a ﬂight, we replayed 50 random position reports of each
ﬂight and recalculated V x
T after the reception of each position
report.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:03:31 UTC from IEEE Xplore.  Restrictions apply. 
0
8
0
6
0
4
)
s
(
e
m
T
n
o
i
i
t
a
c
i
f
i
r
e
V
0
2
0
0
10
20
30
Number of position reports (|T|)
Vx
Vy
Vx
Vy
time
e
c
n
a
t
s
i
d
Median
Mean
40
50
Fig. 11. Median and mean time needed to receive |T| position reports of 1000
ﬂights from OpenSky’s database. The mean (median) arrival rate is 0.54 (0.95)
messages per second.
Fig. 13.
Illustrative example scenario for a track which is highly linear for
Vx and non-linear for Vy. The RMSE for Vx is very small because of the
linear dependence of the distance on time. Vy cannot accurately approximate
the distance with the linear model which results in a large RMSE.
0
.
1
8
.
0
6
.
0
e
t
a
R
4
.
0
2
.
0
0
.
0
10
False Rejecection Rate
False Acceptance Rate
Honest Flights
Dishonest Flights
8
-
0
1
t
l
u
s
e
R
n
o
0
1
-
0
1
i
t
a
c
i
f
i
r
e
V
2
1
-
0
1
4
1
-
0
1
40
50
0
10000
20000
Linearity (RMSE)
30000
40000
20
30
Number of position reports (|T|)
Fig. 12. False rejection rate for Tlocal = mindishonest and false acceptance
rate for Tlocal = maxhonest of 1000 ﬂights recorded by one receiver of the
OpenSky Network.
B. Results
1) Veriﬁcation Time: The average and median veriﬁcation
time for different |T| is shown in Figure 11. The ADS-B
channel experiences high loss [2]. This loss results in a lower
arrival rate than the transmission rate (which is two position
reports per second). Altogether, the average message arrival
rate was 0.54 and the median rate 0.95 messages per second.
The difference in mean and median are a result of the high
loss close to the edge of the receiver’s reception range.
2) Veriﬁcation Result: The false acceptance rate for
Tlocal = maxhonest and the false rejection rate for Tlocal =
mindishonest are shown in Figure 12. For example, if we
set Tlocal such that all honest ﬂights get accepted, 2.4% of
the dishonest ﬂights get falsely accepted after 15 messages.
Conversely, setting Tlocal such that all dishonest ﬂights get
rejected, we observed a false rejection rate of 39.3%. Both,
the false acceptance and false rejection rate dropped to zero
after receiving 39 position reports.
A deeper analysis of the results revealed, that the false re-
jections and false acceptances are the result of some dishonest
Fig. 14. The local veriﬁcation result of 1000 real trajectories consisting of 50
position reports depending on their linearity. The less linear (i.e. the higher
the RMSE), the greater the difference between honest and dishonest ﬂights.
i − Δx
trajectories, which produce extremely small V x
T . The problem
are particular trajectories, on which the change in distance to
the receiving veriﬁers is monotonically and linearly increasing
or decreasing. If this is the case, the deviation of the attacker’s
signal arrivals to the expected signal arrivals (i.e. Δx
A) is
also monotonically and linearly decreasing or increasing since
Δx
A is constant. The issue is, however, that clock drift also
results in a linear deviation. As a consequence, our system
cannot distinguish between these two deviations. Our drift
estimator (Equation (8)) not only cancels out the clock drift, it
also cancels out the linear deviation caused be the adversary’s
dishonesty. This results in very small V x
T for dishonest tracks T
with a high linearity. Flights, especially en-route ﬂights, often
have a shape close to a straight line with linearly changing
Δx
i . This leads to the false acceptances in our simulations. An
illustrative example for the linearity property of a trajectory is
provided in Figure 13. The ﬂight has a high linearity for Vx
and a low linearity for Vy.
In order to further investigate this effect, we need an appro-
priate measure for the linearity property of tracks. Therefore,
210210
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:03:31 UTC from IEEE Xplore.  Restrictions apply. 
0
3
.
0
5
2
0
.
t
t
e
a
R
e
c
n
a
p
e
c
c
A
e
s
a
F
l
0
2
.
0
5
1
.
0
0
1
0
.
m = 10
m = 20
m = 30
m = 40
m = 50
5
0
.
0
0
0
0
.
5
10
50 100
Least Linearity (RMSE)
500
5000
Fig. 15. The false acceptance rates for Tlocal = maxhonest and different
m = |T|.
we quantiﬁed the linearity by doing a linear regression of the
distances (cid:4)(cid:2)pi − (cid:2)px(cid:4) on times ti. We then used the root-mean-
square error (RMSE) as a measure for non-linearity: the higher