like the rules or words that can successfully hit a specific target
password and the number of guesses needed to hit the password
without actually running the tool. They optimized the time and
storage required for parameter configuration, like the expansion
and reordering of the wordlist and rule set. Pasquini et al. [31]
used a neural network to model the relationship between rules and
words in the wordlist so that the existing rules can be applied to the
appropriate words to reduce the guess number. They also added
cracked passwords to the wordlist to obtain a dynamic and more
targeted dictionary.
Different from the above studies, we conduct a comprehensive
study on digit semantics in passwords from the real world, both
on the scope of digital strings and on the completeness of digit
semantics. Besides, compared with prior works on the digit se-
mantics [43, 44, 49], our main novelty is the combination of digit
semantics and practical password cracking tools (rule-based attack).
To the best of our knowledge, this paper is the first one to opti-
mize the guessing efficiency of practical password cracking tools
utilizing digit semantics. By designing and implementing our new
operations, we realize the detection, transformation, and replace-
ment at the level of digit semantics in password cracking tools and
gain a significant improvement on the guessing efficiency.
3 DESIGN OF THE EXTRACTION TOOL FOR
DIGIT SEMANTICS
In this section, we take a comprehensive study on digit semantics in
passwords. First, we classify the digit semantics in passwords into
three categories with a total of 12 tags. We then integrate the process
515ACSAC ’21, December 6–10, 2021, Virtual Event, USA
H. Zhang, C. Wang, W. Ruan, et al.
of extracting digit semantics in passwords into an automated, highly
configurable extraction tool to facilitate researchers to extract and
analyze the digit semantics of any password set or even any data
set containing digit segments.
3.1 Digit Semantics in Passwords
Different from the semantics in natural language, for the digit
semantics used in passwords, we consider not only the information
represented with digits in real life but also the common digital
patterns like continuous number strings, which users frequently use
when creating passwords [44, 49]. By investigating prior studies [8,
28, 43–45, 49] and summarizing the commonly used semantics
expressed with digits in real life, we classify the digit semantics into
three categories, Common Digit Patterns, Information Represented
with Digits, and Combination of Single Tags, with a total of 12 tags,
as is shown in Table 1.
Table 1: Twelve tags of digit semantics in passwords.
Tag
Repeat
Continuation
Leap
Repeat+
Palindrome
Numpad
Phone
MathConstant
Date
Postcode
Idiom
Category
Common Digit Patterns
Information Represented
with Digits
Index
1
2
3
4
5
6
7
8
9
A (10)
B (11)
C (12)
Combination
Combination of Single Tags
Common Digit Patterns. We first introduce 6 types of digital
patterns that are commonly used in passwords: (1) Repeated number
string, like 1111, referred to as Repeat; (2) Continuous number
string, like 123 and 8765, referred to as Continuation; (3) Arithmetic
progression string with the absolute value of the common difference
greater than 1, like 1357 and 864, referred to as Leap; (4) Number
string repeated with more than one digit, like 121212, referred to
as Repeat+; (5) Palindrome number string, like 123321, referred to
as Palindrome; (6) General numpad string (numbers are adjacent
on the numpad) except the above patterns, like 159874, referred to
as Numpad.
Information Represented with Digits. This category includes 5
types of information that can be represented with digits: (7) Phone
number, including commonly used phone number like 110 and 911,
and ordinary cell number that conforms to the Chinese, British, or
American mobile phone number formats, referred to as Phone; (8)
Common mathematical constant, like π, referred to as MathCon-
stant; (9) Date string, like 1998, referred to as Date; (10) Postcode
string that conforms to the Chinese, British, or American post-
code/zipcode formats, referred to as Postcode; (11) Number string
with special meaning, like 520 which means "I love you" in Chinese
and 007 which means "James Bond", referred to as Idiom. Among
these 5 tags, Date has been proven to be a vital role in passwords cre-
ation [8, 28, 43, 44, 49]. Phone and Postcode are both very common
information represented with digits in real life. Besides, Phone has
also been mentioned as a frequently used digit pattern in passwords
in prior work [8]. We also show that Postcode is commonly used
as Phone in Section 4. Moreover, Idiom is an important feature in
Chinese passwords [44, 49]. Finally, we add MathConstant because
it is another important part of information represented with digits
and that some common constants like π and Fibonacci Sequence
are found popular in passwords in prior work [44].
Combination of Single Tags. The above 11 tags may not only
appear alone in passwords but also be combined arbitrarily, like the
combination of 123 and 520 in passwd123520. We refer to those
as Combination.
3.2 Extraction Tool
3.2.1 Extraction Process. The extraction process includes the fol-
lowing three steps:
(Step A) Firstly, we extract all digit segments with a length greater
than or equal to a certain length Min_Len, which is configurable.
We then match the digit segments with the first 11 single tags. The
matched set is referred to as S1 (44.03% ∼ 68.34% of all segments
in the following analysis). In our analysis, we set Min_Len to 3
because it is the shortest length to determine most tags, like Leap
and Repeat+.
It is straightforward to match the tags of Common Digit Patterns
since they all have explicit structural features, but rather complex
and unclear to match the tags of Information Represented with
Digits. Among these 5 tags, Idiom and Postcode are matched with
dictionaries [4, 10, 15, 24, 39]. MathConstant is also matched with a
dictionary [5] but more flexible in length. For example, both 31415
and 31415926 match π. Phone is matched both with dictionary
(for commonly used phone numbers) and with phone structure
formats in China [11], the US [47], and the UK [1]. In addition, a
string composed of multiple commonly used phone numbers (like
110120 and 911911) matches Phone too. Date is more structured.
We consider three different full date formats that are commonly
used, year/month/day (common in China), day/month/year (com-
mon in the UK), and month/day/year (common in the US), as well as
the formats of pure year, year/month, month/day, and day/month,
which result in 29 date formats with the length from 4 to 8, as is
shown in Table 2. We discuss the special case of the UK postcode
in Appendix B.
The tags of Common Digit Patterns might have inclusion re-
lations. For example, all segments of Repeat match Repeat+ and
Palindrome. Therefore, to avoid overlapping matches in those tags,
we assign the first match according to the tag order during the
extraction process of the first 6 tags. Besides, there are segments
that conform to tags of Common Digit Patterns matching those tags
of Information Represented with Digits, like 1111 and 1234, which
match Date. However, those segments often do not represent extra
information and have a significant impact on the results [28, 43].
We refer to those matched segments as false positives. Thus, we
match the 6 tags of Common Digit Patterns first. If a digit segment
matches any of the first 6 tags, it will not match the tags left. By
doing so, we use the first 6 tags (tags of Common Digit Patterns) as
filters for the tags left (tags of Information Represented with Digits)
to reduce false positives.
516Digit Semantics based Optimization for Practical Password Cracking Tools
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
(Step B) Combination is extracted in the unmatched segments
(31.66% ∼ 55.97% of all segments in the following analysis). We
use S1 as a dictionary and refer to the matched segment in it as
sub-segments. Then we detect the unmatched segments composed
of those sub-segments as Combination. For example, if S1 contains
1997 and 1234, then 19971234 (1997+1234) will be detected as
Combination. For each sub-segment, we assign its frequency in S1
as its probability. When matching, a segment may be considered
as combinations of different sub-segments. In this case, we select
the combination with the largest product of probabilities of the
sub-segments.
(Step C) However, there may still be a considerable amount of
segments left unmatched (25.04% ∼ 33.03% of all segments in the
following analysis). We add a supplementary function for users to
further obtain the digit string hidden inside those segments, which
has a high probability but cannot match any of the above tags, like
100 and 001.
We use the unigram-language-model-based word segmentation
method (ULM for short) to segment those unmatched segments
to obtain a finer-grained subword dictionary. ULM is a subword
segmentation algorithm based on the unigram language model, ca-
pable of outputting multiple subword strings with probabilities [26].
In addition, one of the parameters of ULM, namely vocabulary size,
is not suitable for all data sets. Our tool is initialized to the default
vocabulary size (8000). If the default size is too large for the input
data set, our tool will try the maximum size possible. Moreover, to
make up for the lack of length of a single tag, we set the minimum
length of subword to 2, which is also configurable.
To be consistent with other tags, the output dictionary is re-
ferred to as Subword. However, even though those subwords can
be useful in attacks, they are not considered as tagged segments in
the analysis in Section 4. The main reasons are that most of them
(86.79% ∼ 94.63% of all segments in the following analysis) are nei-
ther semantically explainable nor with explicit structural features,
and that they are not complete segments and highly sensitive to
the parameters like dictionary size.
3.2.2 Dictionary Generation. We further generate dictionaries for
all tags and Subword with common segments in descending order
Table 2: List of date formats, where the YYYY means a year
field with 4 digits, MM means a month field with 2 digits and
the DD means a day field with 2 digits. The year range is set
as 1900 to 2020 (configurable).
Length
Formats
4
5
6
7
8
YYYY, MMDD, DDMM, YYMM, MMYY
YYMDD, YYMMD, DDMYY, DMMYY, MDDYY,
MMDYY, YYYYM (YYYYD), MYYYY (DYYYY)
DDMMYY, MMDDYY, YYMMDD, YYYYMM,
MMYYYY, MDYYYY, YYYYMD
DDMYYYY, DMMYYYY, MDDYYYY, MMDYYYY,
YYYYMDD, YYYYMMD
DDMMYYYY, MMDDYYYY, YYYYMMDD
by frequency. As is mentioned in Section 3.2.1, there may be du-
plicated segments in those tags of Information Represented with
Digits. Therefore, we first sort these tags according to the total
amount of segments matching each tag, then generate dictionaries
in order. The dictionary of Subword is generated after the 12 tags
with explicit semantics. During generation, we skip the segments
that have been added to other dictionaries.
4 EMPIRICAL ANALYSIS OF DIGIT
SEMANTICS
In this section, based on the digit semantics and extraction tool we
introduced in Section 3, we take a comprehensive analysis on four
password sets leaked from the real world. Moreover, we evaluate
the coverage of our tags in social media data and compare the
difference between the coverage in passwords and that in random
models.
4.1 Data Sets from the Real World
We conduct our analysis on four password sets leaked from the real
world, including two Chinese sets (Dodonew and Youku) and two
English sets (XATO and Rockyou). All of these sets are commonly
used in password-related studies [18, 30, 45, 46, 48]. Dodonew [50]
was leaked from the Chinese website dodonew.com, including more
than 16 million user passwords. Youku [14] is a password set of
40 million passwords in plaintext, which was leaked from one of
the top-rated video streaming providers in China. XATO [9] is a
password set of 10 million plaintext passwords. It was collected
by security consultants through sampling from millions of leaked
passwords. Rockyou [2] is a password set leaked from the social
gaming website rockyou.com after a SQL attack, which led to a leak
of 32 million plaintext passwords. All password sets are cleaned by
removing non-ASCII characters and long (more than 256 characters)
passwords.
In the term of academic ethics, for all password sets (including
the evaluation sets in Section 6.1), we only analyze the passwords
and do not pay any attention to the account number, mailbox, or
other identifying information. In addition, since all data have been
published on the Internet, our analysis will not aggravate the harm
to users. Therefore, our work should meet the requirements of the
academic ethics.
4.2 Analysis Results
4.2.1 Coverage and Distribution of Tags. In general, we find fairly
rich digit semantics in both Chinese and English passwords, as is
shown in Table 3. Specifically, the percentage of the passwords
containing digit semantics in Chinese password sets is 54.37% ∼
58.94%, which is higher than that in English password sets (22.15% ∼
27.47%). The reason is that the usage of digit segments in Chinese
passwords is more extensive than that in English passwords, as
is shown in Table 4. However, from the perspective of all digit
segments, the proportion of matched segments in English password
sets (around 75%) is higher than that in Chinese password sets
(around 67%). We then analyze the distribution characteristics of
different tags from the perspective of all digit segments.
In English passwords, the coverage of Common Digit Patterns is
pretty high (more than 21%), even though the structures of these
517ACSAC ’21, December 6–10, 2021, Virtual Event, USA
H. Zhang, C. Wang, W. Ruan, et al.
Table 3: Coverage of each tag in all digit segments (in segs) and in all passwords (in passwords). The segments here require a
minimum length of 3. The coverage in passwords is the percentage of passwords which contain at least one matched segment.
Tags
Repeat
Continuation
Leap
Repeat+
Palindrome
Numpad
Total Above
Phone
MathConstant
Date
Postcode
Idiom
Total Above
Combination
Total Above
in segs
2.32%
8.56%
0.32%
1.87%
1.06%
4.03%
18.16%
4.27%
0.12%
21.19%
5.41%
5.05%
51.05%
16.86%
67.91%
Dodonew
in passwords
1.86%