  * Output of `node_modules/.bin/electron --version`: **4x / 5x**
  * Operating System (Platform and Version): Windows 10/ Windows 7/ Ubuntu 18.04.1
aes gcm mode is missing from the list of available ciphers. it works for on my
end so is there any reason for this?
**To Reproduce**
    const crypto = require('crypto');
    console.log(crypto.getCiphers())
    // returns
    [ 'aes-128-cbc','aes-128-ctr','aes-128-ecb','aes-128-ofb','aes-256-cbc',
      'aes-256-ctr','aes-256-ecb','aes-256-ofb','aes-256-xts','des-cbc',
      'des-ecb','des-ede','des-ede-cbc','des-ede3-cbc','rc2-cbc','rc4'
    ]
    // encrypt with gcm
    const encGcm = function(text, secret, salt){
      let obj = {},
      iv = crypto.randomBytes(32).toString('hex'),
      key = crypto.pbkdf2Sync(secret, salt, 10000, 32, 'sha512'),
      cipher = crypto.createCipheriv('aes-256-gcm', key, iv),
      encrypted = Buffer.concat([cipher.update(text, 'utf8'), cipher.final()]),
      tag = cipher.getAuthTag();
      obj.iv = iv
      obj.tag = tag.toString('hex');
      obj.encrypted = encrypted.toString('hex');
      return obj;
    }
    let i = encGcm('text', 'secret', 'salt')
    // decrypt with gcm
    const decGcm = function(encdata, secret, salt, iv, tag){
      let key = crypto.pbkdf2Sync(secret, salt , 10000, 32, 'sha512'),
      decipher = crypto.createDecipheriv('aes-256-gcm', key, iv);
      decipher.setAuthTag(Buffer.from(tag, 'hex'));
      let decrypted = decipher.update(Buffer.from(encdata, 'hex')) + decipher.final();
      return decrypted;
    }
    console.log(decGcm(i.encrypted, 'secret', 'salt', i.iv, i.tag))
    // returns
    text