Goodness of an alignment is measured using a scoring
function s deﬁned on pairs of symbols in Σ, and typically
having the form
s(u, v) = (cid:26) c
−d
if u = v
if u 6= v,
(1)
for nonnegative integers c and d with c equal to or slightly
larger than d. This function can also be described using a
matrix, called the weight matrix. The form of scoring func-
tion described by (1) is unique to nucleotide comparisons.
Amino acid comparisons, in contrast, use scoring functions
that do not exhibit this binary property (one score when
symbols match, and one when they do not, regardless of the
literal). Because our strategy for Smith-Waterman relies on
this property, our methods are not applicable to amino acid
comparisons.
Gaps are scored using a gap function (or gap penalty) g.
Gap functions for local alignments typically have an afﬁne
form, with
g(k) = α + β(k − 1),
where k is the length of the gap3, α > 0 is the penalty of
the initial indel in a multiple column gap, and β > 0 is the
penalty for each subsequent indel in the gap. The score of
an alignment is deﬁned as the sum of the scores of each
individual column, minus the gap penalties. By carefully
choosing the scoring function and gap penalty, goodness of
ﬁt can be made to correspond to intuitive notions such as
the probability that the sequences evolved from a common
ancestor.
The similarity S(U, V ) of sequences U and V is de-
ﬁned to be the maximum score over all alignments between
the two sequences. Although the number of alignments
is huge, a dynamic programming algorithm developed by
Needleman and Wunsch [26] allows the similarity of se-
quences of length n to be determined in O(n2) time.
The alignments discussed thus far are global alignments
because they include every element of both sequences. In
practice, local alignments, in which one seeks the best
matching substrings of the two sequences, is much more
useful. The local alignment problem seeks to ﬁnd
H(U, V ) =
max{S(uiui+1 . . . uj−1uj, vkvk+1 . . . vl−1vl) :
0 ≤ i ≤ j ≤ n − 1, 0 ≤ k ≤ l ≤ m − 1}.
Waterman [37] notes that even using Needleman-Wunsch
(see Appendix A for details) for global alignments, the
3The length of a gap is determined by the number of consecutive
“dashes” in a single sequence. Thus, say, a column with a dash in se-
quence U, followed immediately by a column with a dash in sequence V
is considered two length-one gaps, as opposed to a single length-two gap.
4
2(cid:1)(cid:1)2 global alignments
naive approach of computing the (cid:0)(cid:0)n
required for a single local alignment of two length-n se-
quences requires O(n6) time. Fortunately,
the Smith-
Waterman local alignment dynamic programming algo-
rithm [33] reduces this to O(n3) time. Speciﬁcally, deﬁne
for each (i, j) pair the function H by
Hi,j = max{0;
S(uxux+1 . . . ui−1ui, vyvy+1 . . . vj−1vj) :
1 ≤ x ≤ i, 1 ≤ y ≤ j}.
Then H can be computed using the following two results.
Theorem. Assume that the gap function g is a function of
gap length. Set H0,0 = 0, and set Hi,0 = H0,j = 0 for
1 ≤ i ≤ n and 1 ≤ j ≤ m. Then
Hi,j = max(cid:20)0, max
1≤k≤i{Hi−k,j − g(k)},
Hi−1,j−1 + s(ui, vj), max
1≤l≤j{Hi,j−l − g(l)}(cid:21) .
Corollary.
H(U, V ) = max{Hk,l : 1 ≤ k ≤ n, 1 ≤ l ≤ m}.
Signiﬁcance of a Smith-Waterman score is based on
probabilistic considerations. Speciﬁcally, similarity scores
for random sequences compared using gapless (i.e., gaps
are not allowed) Smith-Waterman were shown by Karlin
and Altschul to follow an approximate extreme value distri-
bution [23, 24]. Though their proof technique breaks down
when gaps are allowed, empirical evidence ([7, 27]) has
demonstrated that scores using gapped Smith-Waterman
are approximately extreme value as well. The signiﬁcance
threshold value p is chosen so that a match will be con-
sidered signiﬁcant provided the probability that a random
comparison generates a score greater than or equal to p is
small, typically less than 0.003. Note that p depends in
part on the length of the sequences being compared, and
thus varies between Smith-Waterman executions.
Tasks in a large-scale distributed implementation of
Smith-Waterman consist of the comparison of two task-
speciﬁc sets of sequences A and B, with each sequence
in one set compared to all sequences in the other. In most
cases, one set consists of proprietary sequences, and the
other consists of sequences contained in a public database
such as the National Institutes of Health GenBank database
[18]. In other cases, both sets consist of proprietary data.
This would be the case, for example, if a company wished
to use external participants to compare some newly identi-
ﬁed sequences against the company’s own large proprietary
database. Unless otherwise speciﬁed, we assume for the re-
mainder of this paper that sequences in A are proprietary
and sequences in B are publicly available.
5
4.1 Sequence Comparison Assumptions
There is no uniform set of assumptions under which
biologists run sequence comparisons. We consider here
Smith-Waterman computations of an exploratory nature, in
which the supervisor compares the proprietary sequences
against sequences from a variety of species, in order to
inform further small scale investigations. Chargaff [13]
showed in 1951 that nucleotide frequencies are not uni-
form, but instead vary in known ways between species,
and often vary among different evolutionary branches of
the same species. Thus the total population of public se-
quences exhibits a wide range of nucleotide frequencies.
Because we cannot know the exact distribution of the pub-
lic database sequence population, we assume, both in our
analysis and simulations, the worst case (in terms of de-
termining sequence similarity) that all sequences in A ∪ B
share the same relative nucleotide frequencies. We assume
also, that nucleotide frequency distributions are reason-
able, with, for example, all nucleotide frequencies between
0.15 and 0.35. With these assumptions, our algorithm per-
forms in practice no worse (for the comparison conﬁgura-
tions considered in this paper) than the results presented. It
should be noted, however, that the security of our scheme
does depend in part on the speciﬁc frequency distributions
of the nucleotides being compared, and that there are patho-
logical cases, such as a sequence consisting entirely of only
one or two nucleotide literals, in which our proposed mech-
anisms provide little, if any, data privacy.
An actual
large-scale distributed implementation of
Smith-Waterman has tasks for which the sets A and B each
contain approximately 100 sequences. We assume, without
loss of generality and for relative simplicity of analysis, that
A consists of a single sequence.
5. The Transformation
In applying the strategy outlined in Section 3 to the
speciﬁcs of sequence comparison, our method for achiev-
ing data privacy requires transforming the sets A and B,
scoring and gap functions s and g, and ﬁlter parameter p
into sets A0, B0, scoring functions s0 and g0 and ﬁlter pa-
rameter p0. We then assign the task T (A0,B0, s0, g0, p0) in
place of T (A,B, s, g, p).
Our transformation involves computing the offsets be-
tween occurrences of individual nucleotide literals. The
resulting sequences of offsets are then distributed, and can
be compared using the Smith-Waterman algorithm with the
original scoring function and gap penalty information.
Speciﬁcally, for a sequence U over the alphabet Σ, and
i be the index (position) of the ith occurrence
δ ∈ Σ, let uδ
of δ in U. Deﬁne the offset sequence, F (U, δ) to be the
sequence
1, uδ
1, uδ
3 − uδ
2 − uδ
F (U, δ) = {uδ
k−1},
where the literal δ occurs in U exactly k times. Though
we are assuming that all sequences begin at index 1, if for
notational convenience we let uδ
2, . . . , . . . uδ
k − uδ
F (U, δ)i = uδ
0 = 0, then we have
i − uδ
i−1
for i = 1, 2, . . . , k. For example, if U is the sequence
U: GCACTTACGCCCTTACGACG
then the offset sequences for each δ ∈ Σ are
F (U, A) = {3, 4, 8, 3}
F (U, C) = {2, 2, 4, 2, 1, 1, 4, 3}
F (U, G) = {1, 8, 8, 3}
F (U, T ) = {5, 1, 7, 1}
For E a set of nucleotide sequences,
let F (E, δ) de-
note the set F (E, δ) ≡ {F (U, δ)|U ∈ E}. The ba-
sic scheme for transforming a sequence comparison task
T (A,B, s, g, p) is to randomly choose a nucleotide lit-
eral δ, compute F (A, δ) and F (B, δ) and send the task
T (F (A, δ), F (B, δ), s, g, p0), where p0 is a revised thresh-
old. We determine the value of p0 by applying statistical
distribution ﬁtting techniques to the results of small simu-
lation runs. A detailed description of this is given below.
The intuition behind our method is that similar se-
quences should have similar offsets. Thus sequences with
offsets that differ signiﬁcantly from the sequence in A can
be excluded. The security of the transformation, in con-
trast, results from its many-to-one property. Thus in or-
der to avoid a black-box analysis (in which the adversary
can reconstruct the sequence of nucleotides by identify-
ing the substrings of a public sequence that match well
with those of a proprietary sequence), the public databases
should contain many sequences that could be the preim-
age, under our transformation, of the proprietary sequence.
This, however, results in a potentially large number of false
positives. These can be reduced signiﬁcantly by creating
two tasks, one corresponding to each of two nucleotide lit-
erals, and assigning those tasks to different participants. A
sequence pair is then classiﬁed as signiﬁcant only if both
tasks indicate signiﬁcant similarity.
We have found through experimentation that creating
a set of tasks, each of which corresponds to a different
nucleotide literal, greatly increases the accuracy of our
scheme when compared with using only the offsets corre-
sponding to a single nucleotide4. Two different methods,
4This holds true as well for Needleman-Wunsch global sequence anal-
ysis. However in the global sequence alignment, using even a single offset
provides high accuracy.
6
to be described next, for creating and using these multiple
tasks performed well. In both methods, a single task from
the unmodiﬁed computation becomes multiple tasks in the
modiﬁed computation.
Maximum method: In the ﬁrst method, all four offset
sequences are computed for every sequence in the original
task. Then four tasks are created, one for each nucleotide
literal; each task contains the corresponding nucleotide off-
set sequence for each sequence in the original task. The
four tasks measure signiﬁcance against a single common
threshold value, returning any matches that exceed the
threshold. A pair of sequences is deemed well-matched
(i.e., exhibit statistically signiﬁcant similarity) provided the
maximum of the four similarity scores exceeds the thresh-
old. This approach can be augmented by requiring that two
or more of the four similarity scores exceed the threshold,
thus decreasing the rate of false positives.
Adding method: In the second method, the participants
assigned each of the four tasks do not measure signiﬁcance,
but instead return all scores to a ﬁfth participant, who adds
the scores. Twp sequences are deemed well-matched pro-
vided the sum of the similarity scores for all four offset se-
quences exceeds the signiﬁcance threshold. This approach,
in which communication is required between participants
and each participant generates signiﬁcant network trafﬁc,
is not currently practical due to platform limitations. How-
ever, such network trafﬁc will be far less an impediment in
future platforms with increased bandwidth. Moreover, vol-
unteer computing platforms in the near future likely will
allow communication among participants via hierarchical
architectures (as opposed to the ﬂat master-slave architec-
ture we have been considering). Such platforms have al-
ready been proposed [28] as a means of dealing with the
inclusion of mobile wireless devices (such as cell phones
and PDAs) into the computational grid.
Note that both schemes decrease net execution time as
compared to the unmodiﬁed Smith-Waterman algorithm
because they operate on shorter sequences. A Smith-
Waterman comparison of two length-N sequences has time
cost O(n3). Reducing sequence lengths by a factor of four
(on average) decreases run time by roughly a factor of 64.
Thus, even if ﬁve modiﬁed tasks are required to perform the
work of a single unmodiﬁed task, one can expect an order
of magnitude decrease in net execution time.
5.1 Analysis
We now consider the performance of our sequence
transformation scheme as it relates to the ideal transforma-
tion properties described in Section 3.
1
states
Property
task
T (F (A, δ), F (B, δ), s, g, p0) should not
leak any in-
formation about the original private sequences A other
transformed
that
a
y
t
i
s
n
e
D
 0.4
 0.3
 0.2
 0.1
 0
 0
 Extreme Value Distribution for Well−matched
Extreme Value Distribution for Random
 10
 20
 30
 40
 50
 60
 70
Similarity Score
 0.25
 0.2
 0.15
 0.1
 0.05
y
t
i
s
n
e
D
 0
 0
Extreme Value Distribution for Well−matched
Extreme Value Distribution for Random
 50
 100
 150
 200
Similarity Score
Figure 1. Distributions of Smith-Waterman scores us-
ing our transformation (with no mask) and the maxi-
mum method for determining signiﬁcance. Curves gen-
erated from 10,000 comparisons with base sequence
length between 600 and 800, matching portion length
300, and with well-matched sequences suffering an av-
erage of 52.5 substitutions and 52.5 indels.
than what could possibly be gleaned from the scores re-
turned by an unmodiﬁed Smith-Waterman implementation.
This corresponds to asserting that the adversary cannot, us-
ing our scheme, learn any more about a private sequence U
than what is revealed by the unmodiﬁed Smith-Waterman
scores of alignments of U with the sequences in B. This
is clearly not satisﬁed by our transformation, since it leaks
information: though the public databases are large (Gen-
Bank, for example, is estimated to contain more than 54
billion bases in 50 million sequences as of this writing), we
must assume that an adversary can completely determine
the contents of B, and will thus know the locations of all
instances of a single nucleotide literal in U.
Entropy calculations give a rough estimate of the
amount of information leaked. Assuming that Cδ is the
number of instances of literal δ in the length-N sequence
U, then the conditional entropy of U given F (U, δ) is
(N − Cδ) log 3 (justiﬁcation in Appendix B). Since the
entropy of U is 2N, approximately 2N − (N − Cδ) log 3
bits of information are leaked. Thus, for example, given a
sequence of 600 nucleotides in which 1/4 are δ, the entropy
is 1200 and the conditional entropy is 450 log 3 ≈ 713.23.
That is, approximately 1200 − 713 = 487 bits of infor-
mation are leaked by the scheme, with roughly 713 bits of
uncertainty remaining.
Implicit in our use of entropy in this context is the as-
sumption that nucleotides in a string are randomly dis-
tributed according to some predetermined relative fre-