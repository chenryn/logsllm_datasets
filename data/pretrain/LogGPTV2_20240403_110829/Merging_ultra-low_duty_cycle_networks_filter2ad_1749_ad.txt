works acceptably 
in the small 64-node topology, 
all nodes to a single cluster in an average of 
it does not 
of the round number, 
across 32 runs. We see that GMAC's  
GMAC configuration. Figure 4a shows a plot of the standard 
deviation of start times as a function 
averaged 
configuration 
converging 
about 1 000 rounds (about 8 minutes). However, 
consist
cases. In the 256-node networks, 
synchronize 
In Figure 4b, we see a composite plot showing that only six 
of the thirty-two 
synchronized 
a full simulated hour. 
the 256-node and 1 024-node test 
the majority of all nodes 
and in those cases it often took almost 
1 024-node runs converged 
ently synchronize 
network, 
to a completely 
to the best cluster, but not all runs synchronize. 
osed 
problem, 
in Section 
IV-B. In Figures 
but nodes use the cluster 
configu­
merge 
In order to solve this decision 
we have  prop
5e and 
of the  
1 024-node run. The general 
timing heuristics. When compared 
decide whether to join a discovered cluster, 
to the 
using cluster ids, described 
5f, we show the performance 
ration for a representative 
mechanism is the same as , 
ids to reliably 
rather  than  arbitrary 
results for the  configuration, the ids clearly provide 
performance. In Figure 6a we show the average 
for superior 
performance 
of the  
see that it is  able 
network in a little over 1 000 rounds. This is the same number 
of rounds it takes the  configuration 
a 64-node network. 
the  configuration 
following 
configuration, and we can 
synchronize 
a 1 024-node 
we can eliminate 
of the 
Based on these findings 
to consistently 
to synchronize 
from further 
cluster IDs. 
utilize 
results 
study,  and  all 
of some individual runs 
that 
To  examine 
the cause of the  configuration's 
the difference 
The three graphs on the left side 
in f-Ls between each node's 
start time for the round on the x­
difficulties, we look at the results 
clearly show the problem. 
of Figure  5  show 
start time and the average 
axis. Those on the right show the percentage 
the largest cluster, calculated as described in Section 
V-D. 
Figure 5a shows a 256-node run that properly 
to 
a single 
cluster around round 2500. The individual 
can be seen previous 
converging 
view of the same data, showing the nodes  outside 
the largest 
of 1 024-node runs show 
cluster dropping 
similar initial 
fail to converge. 
For an 
example of a non-converging 
results 
described 
only consist
than two clusters a cycle may exist, 
III-B. The  merge protocol can 
two clusters. If there are more 
demonstrate the problem of cyclic 
ently synchronize 
to zero. The results 
but generally 
run, see Figures 
preventing 
behavior, 
in Section 
ordering 
converges 
clusters 
to bounds of about ±lOOf-Ls. Figure 5b is another 
convergence 
to that point as clusters of  points, 
of nodes outside 
GMAC currently 
uses an active detection 
B. Detection 
mechanism, as 
of 
Here we will examine the performance 
earlier. 
described 
the new passive detection 
i.e. , 
to the existing active 
from the AsynchronousStart 
the SingletonBest 
in order to  see 
mechanism. 
and Singleton 
configurati
whether they are 
ons we have designed, 
superior 
We begin with more results 
to evaluate 
scenario, then proceed 
Worst scenarios. 
In Figure 6c we show the average behavior of 
over 32 simulated runs. The performance 
5c and 5d.  These 
to that of  (Fig.  4a) 
of clusters 
though it does take longer to converge 
is clearly superior 
topologies, 
networks, 
network sizes, the consist
to be an essential 
as seen from the 64-node topology 
results
ent ordering 
of clusters turns out 
passive detection's 
element that overcomes 
on larger 
for small 
. At larger 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:14 UTC from IEEE Xplore.  Restrictions apply. 
544 
10" 
105 
10' 
10' 
10' 
101 
0 
_101 
_10' 
_10' 
_10' 
_105 
. 2> QJ '" '" Q; > « 
E 0  D 
Vi 
QJ C> :;; ...J w 0.100% 
0 Vi '"" => 
III QJ "tJ 0 :: 0.001% 
00.010% 
0 
;f. 
3000 
Round Number 
4000  5000 
6000  7000 
0%0 
1000 
2000  3000 
4000 
Round Number 
5000 
6000 
7000 
(a) A 2S6-node 
run, showing proper synchronization 
(b) The simulated 
run as Fig. Sa, showing the size of the largest 
cluster 
10" 
105 
10' 
10' 
10' 
101 
_101 
_10' 
_10' 
_10' 
_105 
.; 
QJ '"  QJ > « 
E 0  D 
Vi 
QJ C> § 
w 0.100% 
o  => o 0.010% 
III QJ "tJ o :: 0.001% 
o 
;f. 
0%0--10002707003000--4000507070---6000--77000 
Round Number 
(c) Example 1024-node 
that fails to reach complete 
synchrony 
(d) Cluster 
size in the same I024-node 
run as Fig. Sc 
Round Number 
simulation 
10" 
105 
10' 
10' 
10' 
101 
_101 
_10' 
_10' 
_10' 
_105 
. .;:, QJ '"  QJ > « 
E 0  D 
Vi 
QJ C> § 
w 0.100% 
o  => o 0.010% 
III QJ "tJ o :: 0.001% 
o 
;f. 
Round Number 
o% oL- -- --lo00--  20-00-- 3000-- 4000-- 5-000-- 6000--  700
0 
Round Num ber 
(e) A 1024-node 
 run demonstrating 
correct 
synchronization 
(f) Cluster 
size in the same I024-node 
run as Fig. Se 
Fig. 5 :  The problem with 's 
merge mechanism and a proposed 
solution, 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:14 UTC from IEEE Xplore.  Restrictions apply. 
545 
1eB 
J 
'" 
., E 
i= 1:  '" 
'0 c 0 ., '" '> ., 0 "E 
1000 
100 
'" 
c   10 
" 
'" 
Topology (# Nodes) 
64 
2 5 6  
1024 
-------------------------------------
1
0 
1000 2000 3000 
4000 5000 6000 7000 
Round N u m ber 
(a)  
Topology (# Nodes) 
64 
2 5 6  
1024 
1e7 
'" 
]. le6  I 
.,  1e5 
1: 
  1e4 
o c o  1000 
. o "E 100 
'" " c .!9  10 
'" 
I ' 
1
0 
1000 2000 3000 
4000 5000 6000 7000 
Round Number 
(b)  
Topology (# 
64 
256 
1024 
disadvantage. 
configuration 
inherent 
performance 
to the  
no competit
passive detection, because  of 
recruit 
ion. Active detection 
is several 
times faster than 
active  detect
ion' s  ability to 
broadcast. 
However, 
when compared 
(Fig. 6a), there is really 
multiple 
We evaluate 
inferior 
our other proposed improvement 
nodes with a single 
to detection, 
chaotic 
fore-merge, 
using the  same 
to see in the graph
does give a performance 
but it is  quite 
start scenario in 
s, the listen-be
fore­
improvement 
on the 
This scenario should 
listen-be 
Figure 6b. Though hard 
merge behavior 
largest test-case, 
be the one in which this behavior 
as there may be many different clusters in a node's transmit 
range. However, 
are more than one superior 
it will only help if the node detects 
begin with. 
cluster in range, and even then, 
provides the most benefit, 
this additional listening 
a second-best 
cluster to 
help if there 
can only 
minimal. 
We continue our evaluation 
by looking 
at our singleton 
and  
labeled 
the singleton 
'P+I', to that of two of our ac­
using both versions  of 
and a 1 024-node topology. 
'A+I' and 'A+I+L', respectively). 
We simulate these 
merge 
Each graph shows the 
cluster scenarios. In Figure 7 we can compare the performance 
of , 
tive configurations:  
(labeled 
configurations 
scenario 
percentage 
cluster as a function 
we examine , where  the 
of the simulated 
j oin the  other 
cluster 
configurations 
detection 
the network. 
eventually 
again performs 
Unsurprisingly, the listen-be 
Finally, we look at the  
synchronize the 
network, 
but 
ently fails 
poorly and consist
fore­
helped in this scenario, as there are 
scenario. In this 
scenario, the isolated node has a superior 
cluster id, so all 
other nodes must leave their cluster and join the singleton 
cluster. In Figure 7b, we see that all the configurations 
using active 
passive detection 
to synchronize 
merge optimization has  not 
no other clusters for it to detect. 
worse than the simple  
that the additional 
nodes listen for better clusters that do not exist. 
the listen-be 
energy.  Using 
costs about the same energy as 1 00 'normal' frames. Given 
the high cost and low success  rate 
we can discontinue 
configuration. 
as 
Additional
ly, 
costs a significant amount  of 
a duty cycle of 1 %, a full frame of listening 
investigating 
configuration. It seems 
In fact, it performs 
fore-merge 
behavior 
of listen-
slightly 
before-merge, 
listening causes delays in synchronization 
the  
1
0 
1000 2000 3000 
4000 
5000 
Round Number 
(e)  
7000 
6000 
C. Notification 
Fig. 6: Comparison of configurations using cluster 
IDs 
In this part, we delve  into 
enhance­
When one node detects another 
our final performance 
ment: notification. 
decides 
can save a lot of energy. 
to join it, notifying 
his already 
Each neighbor alerted 
cluster and 
synchronized 
neighbors 
by a merge 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:44:14 UTC from IEEE Xplore.  Restrictions apply. 
546 
Configuration 
A+I 
A+I+ML 
A+I+L 
A+I+M 
I::rt:. P+I 
100%r- ------ ,- ------  -------- r-  ======  
Configuration 
A+I 
A+I+ML 
A+I+L 
ii 
I !! 
i. _: 
w 
Q 0.100% 
 => o 
'0 a Z ....  0.001% 
 0.010% 
Rou n d  Number 
(a) SingletonWorst 
0%0--500----1000----1500----2000-- 
Round N u m ber 
(b) Singleton 
Best 
Fig. 7: Passive detection 
compared 
to Active detection 
using our  two 
Singleton 
scenarios 
Configuration 
A+I 
A+I+ML 
A+I+M 
rate clusters in a 1 024-node grid. Figure 8 shows the results 
our three remaining configurations. The basic  
configuration 
on average to converge 
configurati
reach synchrony 
to a single cluster. However, the 
ons with merge messages perform even better and 
quite well, taking  only  500 