---
author: David Both
category: 系统运维
comments_data:
- date: '2022-03-21 11:21:04'
  message: 自己的网站当然好迁移，迁移一下公司的屎山就知道难受了 (国外应该有很多公司用 Wordpress 吧)。利好 Docker。
  postip: 117.175.125.244
  username: 来自四川的 Chrome 85.0|Windows 10 用户
count:
  commentnum: 1
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 3040
date: '2022-03-19 12:43:23'
editorchoice: false
excerpt: 使用这个简单的方法来迁移一个网站以及管理防火墙配置。
fromurl: https://opensource.com/article/21/9/migrate-wordpress
id: 14371
islctt: true
largepic: /data/attachment/album/202203/19/124316krzvxcr4ff2kr2ji.jpg
permalink: /article-14371-1.html
pic: /data/attachment/album/202203/19/124316krzvxcr4ff2kr2ji.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 使用这个简单的方法来迁移一个网站以及管理防火墙配置。
tags:
- WordPress
- 迁移
thumb: false
title: 如何把 WordPress 网站迁移到新主机
titlepic: true
translator: lxbwolf
updated: '2022-03-19 12:43:23'
---
> 
> 使用这个简单的方法来迁移一个网站以及管理防火墙配置。
> 
> 
> 
![](/data/attachment/album/202203/19/124316krzvxcr4ff2kr2ji.jpg "Text editor on a browser, in blue")
你有过把一个 WordPress 网站迁移到一台新主机上的需求吗？我曾经迁移过好多次，迁移过程相当简单。当然，的的市场时候我都不会用通用的推荐方法，这次也不例外 —— 我用更简单的方法，这才是我推荐的方法。
这个迁移方法没有破坏性，因此如果出于某些原因你需要还原到原来的服务器上，很容易可以实现。
### 一个 WordPress 网站的组成部分
运行一个基于 [WordPress](https://wordpress.org/) 的网站有三个重要组成部分：WordPress 本身，一个 web 服务器，如 [Apache](https://opensource.com/article/18/2/how-configure-apache-web-server)（我正在用），以及 [MariaDB](https://mariadb.org/)。MariaDB 是 MySQL 的一个分支，功能相似。
业界有大量的 Web 服务器，由于我使用了 Apache 很长时间，因此我推荐用 Apache。你可能需要把 Apache 的配置方法改成你用的 Web 服务器的方法。
### 初始配置
我使用一台 Linux 主机作为防火墙和网络路由。在我的网络中 Web 服务器是另一台主机。我的内部网络使用的是 C 类私有网络地址范围，按    无类别域间路由    Classless Internet Domain Routing （CIDR）方式简单地记作 192.168.0.0/24。
对于防火墙，相比于更复杂的 `firewalld`，我更喜欢用非常简单的 [IPTables](https://en.wikipedia.org/wiki/Iptables)。这份防火墙配置中的一行会把 80 端口（HTTP）接收到的包发送给 Web 服务器。在 `/etc/sysconfig/iptables` 文件中，你可以在注释中看到，我添加了规则，把其他入站服务器连接转发到同一台服务器上合适的端口。
```
# Reroute ports for inbound connections to the appropriate web/email/etc server.
# HTTPD goes to 192.168.0.75
-A PREROUTING -d 45.20.209.41/255.255.255.248 -p tcp -m tcp --dport 80 \
  -j DNAT --to-destination 192.168.0.75:80
```
我使用 命名虚拟主机   named virtual host 来配置原来的 Apache Web 服务器，因为我在这个 HTTPD 实例上运行着多个网站。使用命名虚拟主机配置是个不错的方法，因为（像我一样）未来你可能会在运行其他的网站，这个方法可以使其变得容易。
`/etc/httpd/conf/httpd.conf` 中需要迁移的虚拟主机的网站相关部分请参考下面代码。这个片段中不涉及到 IP 地址的修改，因此在新服务器上使用时不需要修改。
```
   ServerName www.website1.org
   ServerAlias server.org
DocumentRoot "/var/website1/html"
   ErrorLog "logs/error_log"
   ServerAdmin PI:EMAIL
      Options Indexes FollowSymLinks
AllowOverride None
      Require all granted
```
在迁移之前，你需要在 `httpd.conf` 的最顶端附近找到 `Listen` 声明并修改成类似下面这样。这个地址是服务器的真实私有 IP 地址，不是公开 IP 地址。
```
Listen 192.168.0.75:80
```
你需要修改新主机上 `Listen` 的 IP 地址。
### 前期工作
准备工作分为以下三步：
* 安装服务
* 配置防火墙
* 配置 web 服务器
#### 安装 Apache 和 MariaDB
如果你的新服务器上还没有 Apache 和 MariaDB，那么就安装它们。WordPress 的安装不是必要的。
```
dnf -y install httpd mariadb
```
#### 新服务器防火墙配置
确认下新服务器上的防火墙允许访问 80 端口。你\_每台\_电脑上都有一个防火墙，对吗？大部分现代发行版使用的初始化配置包含的防火墙会阻止所有进来的网络流量，以此来提高安全等级。
下面片段的第一行内容可能已经在你的 IPTables 或其他基于防火墙的网络过滤器中存在了。它标识已经被识别为来自可接受来源的入站包，并绕过后面的其它 INPUT 过滤规则，这样可以节省时间和 CPU 周期。片段中最后一行标识并放行 80 端口新进来的请求到 HTTPD 的连接。
```
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
# HTTP
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
```
下面的示例 `/etc/sysconfig/iptables` 文件是 IPTables 最少规则的例子，可以允许 SSH（端口 22）和 HTTPD（端口 80）连接。
```
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
# SSHD
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
# HTTP
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
# Final disposition for unmatched packets
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT