    `collapsed_forwarding_shared_entries_limit`{.literal}。
:::
`Squid 5`{.literal} 是此 Application Stream 的初始版本，您可以将其作为
RPM 软件包轻松安装。
如需更多信息，请参阅[配置 Squid
缓存代理服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/deploying_web_servers_and_reverse_proxies/configuring-the-squid-caching-proxy-server_deploying-web-servers-and-reverse-proxies){.link}。
([BZ#1990517](https://bugzilla.redhat.com/show_bug.cgi?id=1990517){.link})
[]{#New-features.html#BZ-1971248}
::: title
**RHEL 9 中的 `MariaDB 10.5`{.literal}**
:::
RHEL 9 提供 `MariaDB 10.5`{.literal}。`MariaDB 10.5`{.literal} 是此
Application Stream 的初始版本，您可以轻松地作为 RPM 软件包安装。在以后的
RHEL 9 次要发行本中，其他 `MariaDB`{.literal}
版本将会作为模块提供较短的生命周期。
如需更多信息，请参阅[使用
MariaDB](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_using_database_servers/using-mariadb_configuring-and-using-database-servers){.link}。
([BZ#1971248](https://bugzilla.redhat.com/show_bug.cgi?id=1971248){.link})
[]{#New-features.html#JIRA-RHELPLAN-78673}
::: title
**RHEL 9 包括 `MySQL 8.0`{.literal}**
:::
RHEL 9 提供 `MySQL 8.0`{.literal}。`MySQL 8.0`{.literal} 是此
Application Stream 的初始版本，您可以轻松地作为 RPM 软件包安装。
如需更多信息，[请参阅使用
MySQL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_using_database_servers/assembly_using-mysql_configuring-and-using-database-servers){.link}。
(JIRA:RHELPLAN-78673)
[]{#New-features.html#JIRA-RHELPLAN-78675}
::: title
**RHEL 9 提供 `PostgreSQL 13`{.literal}**
:::
RHEL 9 提供 `PostgreSQL 13`{.literal}。`PostgreSQL 13`{.literal} 是此
Application Stream 的初始版本，您可以轻松地作为 RPM 软件包安装。在以后的
RHEL 9 次要发行本中，其他 `PostgreSQL`{.literal}
版本将会作为模块提供更短的生命周期。
如需更多信息，请参阅[使用
PostgreSQL](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_using_database_servers/using-postgresql_configuring-and-using-database-servers){.link}。
(JIRA:RHELPLAN-78675)
[]{#New-features.html#BZ-1959756}
::: title
**RHEL 9 中的 `Redis 6.2`{.literal}**
:::
RHEL 9 由 `Redis 6.2`{.literal} 提供，它比 RHEL 8 提供的 6.0
版本提供了很多程序错误和安全修复和增强。
值得注意的是，`Red`{.literal} Hatis 服务器配置文件现在位于专用目录中：
`/etc/redis/redis.conf`{.literal} 和
`/etc/redis/sentinel.conf`{.literal}。在 RHEL 8
版本中，这些文件的位置分别是 `/etc/redis.conf`{.literal} 和
`/etc/redis-sentinel.conf`{.literal}。
`Redis 6`{.literal} 是此 Application Stream 的初始版本，您可以轻松地作为
RPM 软件包安装。
([BZ#1959756](https://bugzilla.redhat.com/show_bug.cgi?id=1959756){.link})
[]{#New-features.html#BZ-2039361}
::: title
**新软件包： `perl-Module-Signature`{.literal}**
:::
RHEL 9 引进了 `perl-Module-Signature`{.literal} Perl
模块。使用这个新模块，您可以为 `cpan`{.literal} 启用签名检查来缓解
CVE-2020-16156。如需更多信息，[请参阅如何在 perl-CPAN 中缓解
perl-App-cpanminus 和 CVE-2020-16156 中的
CVE-2020-16154](https://access.redhat.com/articles/6774301){.link}。
(BZ#2039361)
:::
::: section
::: titlepage
# []{#New-features.html#enhancement_compilers-and-development-tools}编译器和开发工具 {.title}
:::
[]{#New-features.html#BZ-2027596}
::: title
**RHEL 9 支持 IBM POWER10 处理器**
:::
从 Linux 内核中，通过系统工具链（GCC、binutils、glibc）Red Hat
Enterprise Linux 9 已被更新，使其包含对 IBM 的最新 POWER 处理器(
POWER10)的支持。RHEL 9 适用于 POWER10
上的工作负载，在以后的版本中有所改进。
(BZ#2027596)
[]{#New-features.html#BZ-1986836}
::: title
**GCC 11.2.1 可用**
:::
RHEL 9 由 GCC 版本 11.2.1 提供。重要的程序错误修复和增强包括：
[**一般改进**]{.strong}
::: itemizedlist
-   GCC 现在默认为 DWARF 版本 5 调试格式。
-   诊断中显示的列号默认为实际列号并尊重多列字符。
-   直接线性代码向向量化时，会考虑整个功能。
-   如果每个条件表达式中包含比较同一变量，则可以将一系列条件表达式转换为
    switch 语句。
-   流程优化改进：
    ::: itemizedlist
    -   新的 IPA-modref pass 由 `-fipa-modref`{.literal}
        选项控制，跟踪函数调用的副作用并改进点分析的精度。
    -   通过 `-fipa-icf`{.literal}
        选项控制相同的代码是明显的，以增加统一功能的数量并减少编译内存使用。
    :::
-   链路优化改进：
    ::: itemizedlist
    -   通过链接时间优化(LTO)，编译器通过使用链接时间的中间表示，在程序的所有转换单元中执行各种优化。如需更多信息，请参阅
        [链接时间优化](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/developing_c_and_cpp_applications_in_rhel_9/index#ref_link-time-optimization_using-libraries-with-gcc){.link}。
    -   改进了连接过程中的内存分配，以减少峰值内存用量。
    :::
-   在 IDE 中使用新的 `GCC_EXTRA_DIAGNOSTIC_OUTPUT`{.literal}
    环境变量，您可以在不调整构建标志的情况下请求机器可读的\"fix-it
    hints\"。
-   由 `-fanalyzer`{.literal}
    选项运行的静态分析器会显著提高，提供很多程序错误修复和增强。
:::
[**特定于语言的改进**]{.strong}
[**C family**]{.strong}
::: itemizedlist
-   C 和 C++ 编译器支持 OpenMP 构造和 OpenMP 5.0
    规范的\"非恢复循环\"例程。
-   属性：
    ::: itemizedlist
    -   新的 `no_stack_protector`{.literal}
        属性标记不应通过堆栈保护来检测的功能(`-fstack-protector`{.literal})。
    -   改进的 `malloc`{.literal} 属性可用于识别分配器和放大器 API 对。
    :::
-   新警告：
    ::: itemizedlist
    -   `-Wsizeof-array-div`{.literal} 通过 `-Wall`{.literal}
        选项启用，它会警告两个 `sizeof`{.literal}
        操作符的不同（当第一个应用到一个数组，而 divisor
        与数组的大小不同时）。
    -   `-Wstringop-overread`{.literal}
        默认启用，警告字符串对字符串功能的调用，尝试将以参数形式传递给它们的阵列结束。
    :::
-   增强的警告：
    ::: itemizedlist
    -   `-Wfree-nonheap-object`{.literal}
        检测到更多调用实例来利用没有从动态内存分配功能返回的指针来取消分配函数。
    -   `-Wmaybe-uninitialized`{.literal}
        诊断将指针和引用未初始化的内存传递给使用
        `const`{.literal}-qualified参数的功能。
    -   `-Wuninitialized`{.literal}
        检测到从未初始化动态分配的内存中读取。
    :::
:::
[**C**]{.strong}
::: itemizedlist
-   通过 `-std=c2x`{.literal} 和 `-std=gnu2x`{.literal}
    选项支持来自即将发布的 C2X 版本中的几个新功能。例如：
    ::: itemizedlist
    -   ``{.literal} 标准属性被支持。
    -   支持 `__has_c_attribute`{.literal} preprocessor operator。
    -   标签可能会在 compound 语句的末尾出现。
    :::
:::
[**C++**]{.strong}
::: itemizedlist
-   默认模式改为 `-std=gnu++17`{.literal}。
-   现在，C++ 库 `libstdc++`{.literal} 改进了 C++17 支持。
-   实施了几个新的 C++20 功能。请注意，C++20 支持是实验性的。
    有关功能的更多信息，请参阅 [C++20
    语言功能](https://gcc.gnu.org/projects/cxx-status.html#cxx20){.link}。
-   C++ 前端对一些即将出现的 C++23 草案功能提供了实验性支持。
-   新警告：
    ::: itemizedlist
    -   `-Wctad-maybe-unsupported`{.literal}（默认禁用），提醒在类型为
        deduction 指南中的执行类模板参数。
    -   `-Wrange-loop-construct`{.literal} （由 `-Wall`{.literal}
        启用），当基于范围循环时警告是创建不必要的且资源低效的副本。
    -   `-Wmismatched-new-delete`{.literal} （由 `-Wall`{.literal}
        启用），警告对 Operator 的调用，并发出从不匹配形式的 Operator
        返回的指针，或从其他不匹配分配功能返回。
    -   `-Wvexing-parse`{.literal} （默认启用）会警告大多数 vexing
        解析规则：当声明与变量定义类似时，C++ 语言需要被解释为函数声明。
    :::
:::
[**特定于架构的改进**]{.strong}
[**64 位 ARM 架构**]{.strong}
::: itemizedlist
-   Armv8-R 架构通过 `-march=armv8-r`{.literal} 选项进行支持。
-   GCC 可自动执行增加、减法、乘法、乘法和减去复杂数字上的操作。
:::
[**AMD 和 Intel 64 位构架**]{.strong}
::: itemizedlist
-   添加了对 Intel AVX-VNNI 的新 ISA 扩展支持。`-mavxvnni`{.literal}
    编译器切换控制 AVX-VNNI 内部。
-   新的 `-march=znver3`{.literal} 选项支持基于 znver3 内核的 AMD CPU。
-   [the x86-64 psABI
    supplement](https://gitlab.com/x86-psABIs/x86-64-ABI){.link}
    中定义的三个微架构级别通过新的
    `-march=x86-64-v2`{.literal}、`-march=x86-64-v3`{.literal} 和
    `-march=x86-64-v4`{.literal} 选项支持。
:::
[**IBM Z 架构**]{.strong}
::: itemizedlist
-   GCC 11.2.1 默认为 IBM z14 处理器。
:::
[**IBM Power 系统**]{.strong}
::: itemizedlist
-   GCC 11.2.1 默认为 IBM POWER9 处理器。
-   GCC 编译器现在支持使用新的 `-mcpu=power10`{.literal} 命令行选项的
    POWER10 指令
:::
([BZ#1986836](https://bugzilla.redhat.com/show_bug.cgi?id=1986836){.link},
BZ#1870016, BZ#1870025, BZ#1870028, BZ#2019811,
[BZ#2047296](https://bugzilla.redhat.com/show_bug.cgi?id=2047296){.link})
[]{#New-features.html#BZ-2023422}
::: title
**用于捕获 `glibc`{.literal} 优化数据的新命令**
:::
新的 `ld.so --list-diagnostics`{.literal} 命令可以捕获影响
`glibc`{.literal} 优化决策的数据，如在一个机器可读的文件中的 IFUNC
选择和 `glibc-hwcaps`{.literal} 配置。
([BZ#2023422](https://bugzilla.redhat.com/show_bug.cgi?id=2023422){.link})
[]{#New-features.html#BZ-2030554}
::: title
**对 `binutils`{.literal}的显著变化**
:::
RHEL 9 对 `binutils`{.literal} 包括以下更改：
::: itemizedlist
-   `binutils`{.literal} 现在支持 Intel 的 AMX/TMUL
    指令集，从而提高了可利用此新功能的应用程序的性能。
-   assembler、linker 和其它二进制工具现在支持 POWER10 指令。
:::
(BZ#2030554, BZ#1870021)
[]{#New-features.html#BZ-2019806}
::: title
**更新了性能工具和调试器**
:::
RHEL 9.0 提供了以下性能工具和调试器：
::: itemizedlist
-   GDB 10.2
-   Valgrind 3.18.1
-   SystemTap 4.6