Applied Cryptography and Cyber Security in conjunction with the
Israel National Cyber Bureau in the Prime Minister’s O(cid:28)ce.
REFERENCES
[1] BoringSSL, https://boringssl.googlesource.com/boringssl/
[2] RFC5077: Transport Layer Security (TLS) Session Resumption without Server-
Side State, https://tools.ietf.org/html/rfc5077#section-4
[3] A. Abdalla and M. Bellare. Increasing the Lifetime of a Key: A Comparative
Analysis of the Security of Re-keying Techniques. In ASIACRYPT 2000, Springer
(LNCS 1976), pages 546–559, 2000.
[4] E. Barker and J. Kelsey. Recommendation for Random Number Generation
Using Deterministic Random Bit Generators, NIST Special Publication 800-90A.
http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-90Ar1.pdf
[5] K. Bhargavan and G. Leurent. On the Practical (In-)Security of 64-bit Block
Ciphers: Collision Attacks on HTTP over TLS and OpenVPN. In ACM CCS,
pages 456–467, 2016.
[6] E. Biham. How to decrypt or even substitute DES-encrypted messages in 228
steps. Information Processing Letters, 84(3):117–124, 2002.
[7] H. Bock, A. Zauner, S. Devlin, J. Somorovsky and P. Jovanovic. Nonce-
Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS. In the
10th USENIX Workshop on O(cid:29)ensive Technologies (WOOT 16), 2016.
[8] W. Dai, V.T. Hoang and S. Tessaro. Information-Theoretic Indistinguishability
via the Chi-Squared Method. In CRYPTO 2017, Springer (LNCS 10403), pages
497–523, 2017.
[9] M. Dworkin. Recommendation for Block Cipher Modes of Operation: Ga-
lois/Counter Mode (GCM) for Con(cid:27)dentiality and Authentication. Federal Infor-
mation Processing Standard Publication FIPS 800-38D, 2006. http://csrc.nist.gov/
publications/nistpubs/800-38D/SP-800-38D.pdf
[10] S. Gilboa and S. Gueron. How many queries are needed to distinguish a truncated
random permutation from a random function?, Journal of Cryptology (2017).
doi:10.1007/s00145-017-9253-0
[11] S. Gilboa and S. Gueron. The Advantage of Truncated Permutations. Manuscript,
2016. https://arxiv.org/abs/1610.02518.
[12] S. Gueron, Y. Lindell. GCM-SIV: Full Nonce Misuse-Resistant Authenticated
Encryption at Under One Cycle per Byte. 22nd ACM CCS, pages 109–119, 2015.
[13] S. Gueron, A. Langley, Y. Lindell. AES-GCM-SIV: Speci(cid:27)cation and Analysis,
Cryptology ePrint Archive, Report 2 017/168, 2017. http://eprint.iacr.org/2017/
168.
A.
Langley,
Y.
Lindell.
https://tools.ietf.org/html/
[14] S.
Gueron,
draft-irtf-cfrg-gcmsiv
[15] S. Gueron, Y. Lindell, A. Nof and B. Pinkas. Fast Garbling of Circuits Under
Standard Assumptions. 22nd ACM CCS, pages 567–578, 2015.
[16] D.A. McGrew and J. Viega The Galois/Counter Mode of Operation (GCM).
http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/gcm/
gcm-spec.pdf
[17] D.A. McGrew and J. Viega The Security and Performance of the Galois/Counter
Mode (GCM) of Operation. In INDOCRYPT 2004, Springer (LNCS 3348), pages
343–355, 2004.
[18] N. Mouha, A. Luykx. Multi-key Security: The Even-Mansour Construction
Revisited. Advances in Cryptology – CRYPTO 2015, Proceedings Part I, pp.
209–223 (2015).
[19] QUIC, a multiplexed stream transport over UDP. https://www.chromium.org/
quic.
[20] P. Rogaway and T. Shrimpton. Deterministic Authenticated Encryption: A
Provable-Security Treatment of the Key-Wrap Problem. In EUROCRYPT 2006,
Springer (LNCS 4004), pages 373–390, 2006.
[21] A. J. Stam, Distance between sampling with and without replacement, Statist.
Neerlandica 32 (1978), no. 2, 81–91.
[22] K. Suzuki, D. Tonien, K. Kurosawa and K. Toyota. Birthday Paradox for Multi-
collisions. Proceedings of the 9th International Conference on Information Security
and Cryptology, Springer (LNCS 4296), pages 29–40, 2006.
A DEFINING ENCRYPTION SECURITY IN
OUR MODEL
In order to show how standard notions of security are formulated
this way, we give some examples of oracles:
• Eavesdropping adversary for a single message (EAV): Oracle O
receives (b, k, m0, m1) and outputs Enck (mb ) if |m0| = |m1|, and
⊥ otherwise. After being called once, O halts and answers no
more queries. (Note that although O receives four input values,
A provides only m0, m1.)
• LR-oracle security (CPA): O is exactly the same as in the previous
item, except that it does not halt and answers an unlimited num-
ber of queries. There are two versions of this: nCPA for nonce
based encryption, and ivCPA for random-IV based encryption.
• CCA security (CCA): De(cid:27)ne O to carry out both encryption and
decryption. Formally, de(cid:27)ne O(b, k, Enc, m0, m1) = Enck (mb ) if
|m0| = |m1|, and ⊥ otherwise. Furthermore, de(cid:27)ne the decryp-
tion oracle O(b, k, Dec, c, λ) = Deck (c) if c was not returned in
a previous call to O, and ⊥ otherwise.
• Nonce-respecting authenticated encryption (nAE): First denote
by Enck (IV , a, m) an encryption of additional authentication
data a and message m using nonce IV . Then, for b = 0, de(cid:27)ne
the oracle O(0, k, Enc, IV , a, m) = Enck (IV , a, m) if IV has not
been used in a previous encryption query, and ⊥ otherwise.
Furthermore, de(cid:27)ne O(0, k, Dec, c, λ, λ) = Deck (c) for c that was
not previously returned by an encryption query, and ⊥ otherwise.
For b = 1, de(cid:27)ne O(1, k, Enc, IV , a, m) by (cid:27)rst computing c =
Enck (IV , a, m); if c = ⊥ then output ⊥, else output a random
string of length |c|. Furthermore, de(cid:27)ne O(1, k, Dec, c, λ, λ) to
always return ⊥.
• Nonce-misuse resistant authenticated encryption (nmrAE): This
is identical to the previous formulation, with the exception that
Enc is a deterministic function of (IV , a, m), and thus if the same
(IV , a, m) is queried to Enc when b = 1 then the same random
string is returned as in the last query of (IV , a, m). This expresses
the fact that the only thing revealed in such a case is that the
same value was encrypted.
• IV-based formulations: We will also consider authenticated en-
cryption and misuse-resistant authenticated encryption with
random IVs. This is the same as for nonce-based encryption
as above, except that the adversary does not choose the nonce
but the IV is randomly chosen. For authenticated encryption, de-
noted ivAE, if the same IV is chosen by the oracle in two di(cid:29)erent
encryption queries, then the bit b is returned to the adversary
(signifying that the adversary “won”). For misuse-resistant au-
thenticated encryption, denoted ivmrAE, the only di(cid:29)erence is
that for b = 1 if the same IV is chosen for the same (a, m) from
a previous query, then the same random string is returned.
As can be seen, all standard de(cid:27)nitions can be formulated in this
way. This formulation is slightly cumbersome since a single oracle
is de(cid:27)ned instead of separate ones for the case of b = 0 and b = 1.
However, this formulation allows us to prove a single theorem
that can be applied to all such de(cid:27)nitions. For sake of exposition,
we will refer to queries to the encryption and decryption oracles,
with the understanding that this refers to queries to O that con-
tain parameter Enc or Dec, respectively. We denote the oracles by
nCPA, ivCPA, nAE, ivAE, nmrAE, ivmrAE for the appropriate level
of security.
nonces overall
1
E , . . . , QN
1
D , . . . , QN
cryption queries
encryption queries and Qi
D
For the sake of our analysis, we need to separately consider
adversaries for the nonce and IV settings. This is due to the fact
that we need to specify the level at which nonces repeat. Therefore,
we will say that A is a (t, N, (cid:126)QE , (cid:126)QD , (cid:126)B, a, m)-nonce adversary, with
D ), and (cid:126)B = (B1, . . . , BN),
E ), (cid:126)QD = (Q
(cid:126)QE = (Q
if:
• A runs in at most t steps,
• A queries its encryption or decryption oracle with N di(cid:29)erent
• A queries the ith nonce for Qi
de-
E
• The number of blocks encrypted with the ith nonce in encryption
• The longest additional authentication data (AAD) in an encryp-
• The longest message in an encryption or decryption query (not
For the random-IV setting, we will say that A is a (t, N, QE , (cid:126)QD , (cid:126)B,
a, m)-IV adversary if it as above, with the di(cid:29)erence that encryption
queries are random and so the number of di(cid:29)erent nonces is not
speci(cid:27)ed; rather QE queries overall are made. Note that in this case,
N is the number of di(cid:29)erent nonces queried by A in calls to the
decryption oracle.
Finally, for O ∈ {nCPA, ivCPA, nAE, ivAE, nmrAE, ivmrAE}, we
and decryption queries is Bi
tion or decryption query is less than 2a blocks
including AAD) is less than 2m blocks.
de(cid:27)ne the advantage of the adversary in game ExptEnc to be
AdvEncA, Π,O = 2 · Prob
ExptEncA, Π,O = 1
− 1.
(cid:102)
(cid:103)
We say that a (t, N, (cid:126)QE , (cid:126)QD , (cid:126)B, a, m)-nonce adversary is nonce-respecting
if for all i it holds that Qi
E
disrespecting if there exists an i for which Qi
= 1, and we say that it is nonce-
E > 1.
B AES-GCM WITH UNIQUE NONCES
In this section, we consider the concrete case of AES-GCM with
a standard 96-bit IV. Here, the encrypted messages have length
at most 232 − 2 blocks (with each nonce). We consider a nonce-
respecting adversary here, and thus assume that all the nonces
are unique. We consider a (t, N, (cid:126)QE , (cid:126)QD , (cid:126)B, a, m)-adversary A. The
analysis is very similar to that of the CTR case, because AES-GCM
encryption is based on CTR mode. The di(cid:29)erence is that the GHASH
authenticator, which is an almost XOR universal family of hash
functions, is applied to the ciphertext, and one additional encryp-
tion per message is used, to encrypt (mask) the GHASH value. Thus,
due to its polynomial construction, the probability of (cid:27)nding a suc-
cessful forgery in a single decryption attempt is upper bounded
, where 2a − 1 is the maximum length of the AAD and
by 2a +2m
2m − 1 is the maximum message length. Since the number of de-
, a union bound yields that the
cryption queries equals(cid:80)N
forgery probability is upper bounded by ((cid:80)N
is(cid:80)N
i =1 (Bi + 1) = N +(cid:80)N
bounded by ((cid:80)N
Basic AES-GCM. The overall number of blocks encrypted with E
i =1 Bi, and these are all encrypted under
+ ((cid:80)N
a single key. The distinguishing probability in this case is upper
(as described above,
D )·(2a +2m )
2n
i =1 Qi
D
i =1 Q i
i =1 Q i
2n
D )·(2a +2m )
2n
i =1 (Bi +1))
2n+1
.
2
i =1 Q i
Concretely, for a 128-bit block cipher like AES, when N +(cid:80)N
mode, since the additional advantage of ((cid:80)N
the second term re(cid:30)ects the probability that GHASH values collide).
i =1 Bi
reaches 248, the security level is only (roughly) 2−32. Furthermore,
if 264 blocks are encrypted, then security is broken with very high
probability; this could happen if 248 plaintext each of length 216
were encrypted. Observe that this is essentially the same as CTR
gained
by the decryption queries is typically dominated by the other term.
AES-GCM with key derivation. We apply Theorem 3.1 and thus it
remains to analyze A’s advantage when interacting in an encryp-
tion experiment where E is replaced with a truly random function.
Note that in the AES-GCM standard, the GHASH key is generated
by applying E to the block of all-zeroes, and thus here the key is
the output of the truly random function on 0128. Since the GCM
speci(cid:27)cation prevents inputting the block of all zeroes at any other
time, this implies that the GHASH key is random.
D )·(2a +2m )
2n
Consider the nonce-respecting authenticated-encryption experi-
ment described in Section 2.4). In this experiment, the adversary
receives an oracle O = nAE that either decrypts and encrypts
according to the scheme, or that outputs a random string for en-
cryption and returns ⊥ for every decryption (decryption requests
of ciphertexts that were obtained from previous encryption queries
are decrypted correctly). We need to bound AdvEncRFN
. In
this experiment, all the counters are encrypted using a truly random
function. Since all the counters are unique, the advantage of the
adversary due to encryption queries is 0 (all strings output by the
oracle in both cases are random). Thus, the only advantage is due to
a decryption query that may return something other than ⊥ from a
decryption query (in such a case, the adversary will know that it re-
ceived a real decryption oracle and so can distinguish). Thus, from
the above, we have AdvEncRFN
for all
parameter settings. By Theorem 3.1, we conclude that there exists
an (O (t ), N)-adversary A1 for F and an (O (t ), N, (cid:126)B, µ)-adversary
A2 for E, such that
Π(cid:48)(cid:48),A,O = ((cid:80)N
D )·(2a +2m )
2n
Π(cid:48)(cid:48),A,nAE
i =1 Q i
AdvEncΠ(cid:48),A,nAE =
=
1
2 · AdvPRFNA2,E
Π(cid:48)(cid:48),A,nAE
1
2 · AdvPRFNA2,E
1
2 · AdvKDFA1,F +
+ AdvEncRFN
1
2 · AdvKDFA1,F +
+ N · (Bmax + 1)
.
2n
addition of ((cid:80)N
(cid:32)
AdvEncΠ(cid:48),A,nAE
≤
1
2 ·
As in the case of counter mode, since all nonces are unique, we
have that µ = 1. This is exactly the same as in CTR mode, with the
. We can therefore use the analysis in
i =1 Q i
D )·(2a +2m )
2n
the bound in Eq. (10) and obtain:
(cid:40) 36N2
((cid:80)N
2129 ,
i =1 Qi
(cid:41)
+ N3
6N
296 , 1
6 · 22κ
D ) · (2a + 2m )
2n
.
AdvPRP
6NA(cid:48),AES
+ N · Bmax2
2n
+ min
(cid:33)
+ TE
2κ
+
Consider now the case of κ = n = 128 (as in AES-128), and
N = 248 and Bmax = 216, as above, meaning that at most 216
blocks are encrypted per nonce. Then, for reasonable values of
TE, we have that the dominant term in the advantage is N·Bmax2
.
For these parameters, we have that it equals 248·232
2128 = 2−48. This
term is small even for large N, and for N = 248 we get 6 · 2−48,
which does not change the security margin (in any signi(cid:27)cant way).
Consequently, unlike basic AES-GCM mode, this is well within the
range of being secure.
2n
Encryption limits. The additional term of ((cid:80)N
that
has been added here over CTR-mode encryption is insigni(cid:27)cant.
Thus, we obtain the same encryption limits and can encrypt N = 264
messages of length Bmax = 216, N = 248 messages of length 224,
or N = 232 messages of length 232, and still remain within the
NIST-recommended limit of 2−32 advantage.
i =1 Q i
D )·(2a +2m )
2n