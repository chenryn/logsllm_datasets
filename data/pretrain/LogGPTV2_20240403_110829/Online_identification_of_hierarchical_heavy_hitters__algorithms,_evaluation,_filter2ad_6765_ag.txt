e
n
e
s
a
l
f
)
%
(
o
i
t
a
r
e
v
i
t
i
s
o
p
e
s
a
l
f
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 1.8
 1.6
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
FN (phi = 0.001)
FP (phi = 0.001)
FN (phi = 0.005)
FP (phi = 0.005)
 0
 0.5
 1
 1.5
 2
 2.5
 3
error ratio (%)
(a) router1
 0.002
 0.004
 0.006
phi
(b) false positives (gran = 1)
 0.008
 0.01
 0
 0
FN (phi = 0.001)
FP (phi = 0.001)
FN (phi = 0.005)
FP (phi = 0.005)
 0.5
 1
 1.5
 2
 2.5
 3
error ratio (%)
(b) router2
Figure 18: Accuracy with compression.
Figure 19: Cummulative distribution of error ratios over an en-
tire month (algo = got(cid:3), (cid:15) = 0:001).
Algorithm
sk
sk2
lc-noFN
lc-noFP
got(cid:3)-split
Max.
4.30
239.83
75.32
97.67
7.26
Normalized Error Estimates (%)
99 percentile
0.64
101.27
41.48
71.70
3.28
90 percentile Med.
0.00
0.00
2.01
0.28
0.40
0.06
2.15
16.25
30.12
1.52
Table 2: Normalized Error Estimates (absolute value) for the
one month trace ISP-1mon (gran = 1).
The F P and F N metrics measure an algorithm’s ability to cor-
rectly identify HHH clusters. We are also interested in the accuracy
of the the estimated volumes for the HHH clusters. Table 2 shows
the empirical distribution of the absolute value of ES (deﬁned in
Section 5) normalized by 1=(cid:15), for gran = 1. The values indicate
that got with lazy expansion and compression has signiﬁcantly lower
ES than lc-noFN, lc-noFP and sk2. Only the baseline algorithm sk
seems to have slightly better ES values that got(cid:3). However, the com-
putation cost for sk is signiﬁcantly higher (recall Figure 14).
In summary, the key conclusions from the HHH evaluations are:
(i) The techniques lazy expansion, splitting and compression are ef-
fective and should be used. (ii) compared to the baseline algorithms,
the proposed algorithms got(cid:3), cp(cid:3), and rs(cid:3) have orders of magni-
tude smaller run-time costs, comparable or smaller space require-
ments, and comparable FN and FP values. Also the algorithm got
had substantially lower volume reconstruction error values than the
baselines – the only exception being sk, for which got had slightly
worse ES.
6.2 Evaluation on change detection
Figure 20 summarizes the overlap percentage between top N biggest
changes reported by online and ofﬂine algorithms. The overlap ratio
is always above 97% even for very large N. For N below 100, the
top N lists produced by the two algorithms often differ by no more
than one element.
Figure 21 illustrates the effects of smart sampling [16, 15] on ac-
 100
 99
 98
 97
 96
)
%
(
e
g
a
t
n
e
c
r
e
p
p
a
l
r
e
v
o
 95
 0
 100
 200
 300
 400
 500
 600
 700
top N
Figure 20: Overlap between top N biggest changes reported by
online and ofﬂine algorithms for router2 in trace ISP-1day. On-
line algorithms uses got* with compression and lazy expansion
((cid:15) = 0:001, (cid:30) = 0:001).
curacy. With a sampling threshold of 300KB, we are able to reduce
the number of ﬂow records to be processed by a factor of 12. Yet the
accuracy still consistently remains above 90%.
7. CONCLUSIONS
In this paper, we present several efﬁcient streaming algorithms
for detecting multidimensional hierarchical heavy hitters. These al-
gorithms are based on adaptive synopsis data structures that hierar-
chically organize the trafﬁc into its most active components. The al-
gorithms are much more efﬁcient than existing algorithms, and pro-
vide data-independent deterministic accuracy guarantees on trafﬁc
estimates for the multidimensional hierarchical heavy hitters. Our
motivating application is network anomaly detection, and we use ro-
bust techniques to detect changes among such heavy hitters. Our
 100
 98
 96
 94
 92
)
%
(
e
g
a
t
n
e
c
r
e
p
p
a
l
r
e
v
o
 90
 0
sample thresh = 20KB
sample thresh = 50KB
sample thresh = 200KB
sample thresh = 300KB
 50
 100
 150
 200
top N
Figure 21: Overlap between top N biggest changes reported
by online and ofﬂine algorithms for router2 in trace ISP-1day.
Smart sampling with threshold between 20KB and 300KB is
used (threshold = 300KB reduces the number of records to be
processed by a factor of 12).
techniques can accommodate variability due to sampling that is in-
creasingly used in network measurement. Evaluation using real In-
ternet traces collected at a Tier-1 ISP suggests that these techniques
are remarkably accurate and efﬁcient. Our results are promising and
point to the potential of using our algorithms as a building block
for network anomaly detection and trafﬁc measurement in large net-
works. We are developing a prototype anomaly detection system
that embodies the algorithms developed in this paper.
Acknowledgments
We are grateful to Bill Aiello, Chuck Kalmanek, Muthu Muthukrish-
nan, Divesh Srivastava, and Mikkel Thorup for thought-provoking
discussions. We would also like to thank Florin Baboescu, Flip
Korn, George Varghese, and the anonymous reviewers for giving us
valuable comments.
8. REFERENCES
[1] H. Arsham. Time series analysis and forecasting techniques.
http://obelia.jde.aca.mmu.ac.uk/resdesgn/arsham/opre330Forecast.htm.
[2] F. Baboescu, S. Singh, and G. Varghese. Packet classiﬁcation for core
routers: Is there an alternative to CAMs. In INFOCOM, 2003.
http://citeseer.ist.psu.edu/baboescu03packet.html.
[3] F. Baboescu and G. Varghese. Scalable packet classiﬁcation. In Proc.
ACM SIGCOMM, 2001.
http://citeseer.ist.psu.edu/baboescu01packet.html.
[4] P. Barford, J. Kline, D. Plonka, and A. Ron. A signal analysis of
network trafﬁc anomalies. In Proceedings of the ACM SIGCOMM
Internet Measurement Workshop, Marseille, France, November 2002.
[5] P. Barford and D. Plonka. Characteristics of network trafﬁc ﬂow
anomalies. In Proceedings of the ACM SIGCOMM Internet
Measurement Workshop, San Francisco, CA, November 2001.
[6] G. E. P. Box and G. M. Jenkins. Time Series Analysis, Forecasting and
Control. Holden-Day, 1976.
[7] G. E. P. Box, G. M. Jenkins, and G. C. Reinsel. Time Series Analysis,
Forecasting and Control. Prentice-Hall, Englewood Cliffs, 1994.
[8] J. Brutlag. Aberrant behavior detection in time series for network
monitoring. In Proc. of the 14th USENIX System Administration
Conference (LISA XIV), New Orleans, LA, December 2000.
[9] C. Chen and L.-M. Liu. Forecasting time series with outliers. Journal
of Forecasting, 12:13–35, 1993.
[10] Cisco. Random Sampled NetFlow. http://www.cisco.com/univercd/
cc/td/doc/product/software/ios123/123newft/123t/123t 2/nfstatsa.pdf.
[11] G. Cormode, F. Korn, S. Muthukrishnan, and D. Srivastava. Finding
hierarchical heavy hitters in data streams. In International Conference
on Very Large Data Bases, 2003.
[12] G. Cormode, F. Korn, S. Muthukrishnan, and D. Srivastava. Diamond
in the rough: Finding hierarchical heavy hitters in multi-dimensional
data. In Proc. ACM SIGMOD, June 2004.
[13] G. Cormode and S. Muthukrishnan. What’s hot and what’s not:
Tracking most frequent items dynamically. In Proc. ACM
PODC ’2003, July 2003.
[14] G. Cormode and S. Muthukrishnan. Improved data stream summaries:
The count-min sketch and its applications. In Journal of Algorithms,
2004. In press. http://dimacs.rutgers.edu/(cid:24)graham/pubs/cm-full.pdf.
[15] N. Dufﬁeld and C. Lund. Predicting resource usage and estimation
accuracy in an IP ﬂow measurement collection infrastructure. In ACM
SIGCOMM Internet Measurement Workshop, Miami Beach, FL,
October 2003.
[16] N. Dufﬁeld, C. Lund, and M. Thorup. Charging from sampled network
usage. In ACM SIGCOMM Internet Measurement Workshop, San
Francisco, CA, November 2001.
[17] C. Estan and G. Varghese. New directions in trafﬁc measurement and
accounting. In Proc. ACM SIGCOMM, Pittsburgh, PA, August 2002.
[18] C. Estan and G. Varghese. Automatically inferring patterns of resource
consumption in network trafﬁc. In Proc. ACM SIGCOMM, Karlsruhe,
Germany, August 2003.
[19] F. Feather, D. Siewiorek, and R. Maxion. Fault detection in an ethernet
network using anomaly signature matching. In Proc. ACM
SIGCOMM, 1993.
[20] A. Feldmann and S. Muthukrishnan. Tradeoffs for packet
classiﬁcation. In INFOCOM (3), pages 1193–1202, 2000.
http://citeseer.ist.psu.edu/feldmann00tradeoffs.html.
[21] P. Gupta and N. McKeown. Packet classiﬁcation on multiple ﬁelds. In
Proc. ACM SIGCOMM, pages 147–160, 1999.
http://citeseer.ist.psu.edu/gupta99packet.html.
[22] C. Hood and C. Ji. Proactive network fault detection. In Proc. IEEE
INFOCOM ’97, Kobe, Japan, April 1997.
[23] K. J. Houle, G. M. Weaver, N. Long, and R. Thomas. Trends in Denial
of Service Attack Technology.
http://www.cert.org/archive/pdf/DoS trends.pdf.
[24] J. Jung, B. Krishnamurthy, and M. Rabinovich. Flash crowds and
denial of service attacks: Characterization and implications for CDNs
and web sites. In Proceedings of the World Wide Web Conference,
Honolulu, Hawaii, May 2002.
http://www.research.att.com/(cid:24)bala/papers/www02-fc.html.
[25] I. Katzela and M. Schwartz. Schemes for fault identiﬁcation in
communication networks. IEEE/ACM Transactions on Networking,
3(6):753–764, December 1995.
[26] B. Krishnamurthy, S. Sen, Y. Zhang, and Y. Chen. Sketch-based
change detection: Methods, evaluation, and applications. In Proc.
ACM/USENIX Internet Measurement Conference, 2003.
http://www.research.att.com/(cid:24)yzhang/papers/nad-imc03.pdf.
[27] G. Manku and R. Motwani. Approximate frequency counts over data
streams. In International Conference on Very Large Data Bases, 2002.
[28] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and
N. Weaver. The spread of the Sapphire/Slammer worm. Technical
report, CAIDA, February 2003.
http://www.cs.berkeley.edu/(cid:24)nweaver/sapphire/.
[29] S. Muthukrishnan. Data streams: Algorithms and applications, 2003.
Manuscript based on invited talk from 14th SODA.
[30] S. Singh, F. Baboescu, G. Varghese, and J. Wang. Packet classiﬁcation
using multidimensional cutting. In Proc. ACM SIGCOMM, 2003.
http://citeseer.ist.psu.edu/singh03packet.html.
[31] V. Srinivasan, S. Suri, and G. Varghese. Packet classiﬁcation using
tuple space search. In Proc. ACM SIGCOMM, pages 135–146, 1999.
http://citeseer.ist.psu.edu/srinivasan99packet.html.
[32] V. Srinivasan and G. Varghese. Faster IP lookups using controlled
preﬁx expansion. In ACM Transactions on Computer Systems, 1999.
[33] V. Srinivasan, G. Varghese, S. Suri, and M. Waldvogel. Fast and
scalable layer four switching. In Proc. ACM SIGCOMM, 1998.
http://citeseer.ist.psu.edu/srinivasan98fast.html.
[34] R. S. Tsay. Outliers, level shifts, and variance changes in time series.
Journal of Forecasting, 7:1–20, 1988.
[35] A. Ward, P. Glynn, and K. Richardson. Internet service performance
failure detection. Performance Evaluation Review, August 1998.