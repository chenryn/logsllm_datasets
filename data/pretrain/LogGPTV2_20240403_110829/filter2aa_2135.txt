滴滴出行
基于符号执行的反混淆方法研究
演讲人：糜波
2019
PART 01
混淆框架简介
目录
CONTENTS
PART 02
混淆技术原理
PART 03
反混淆技术原理
PART 04
后续的工作
01
02
03
04
CLICK ADD RELATED TITLE TEXT, AND CLICK ADD RELATED TITLE 
TEXT, CLICK ADD RELATED TITLE TEXT, CLICK ON ADD RELATED 
TITLE WORDS.
PART.01
混淆框架简介
• 混淆技术是基于OLLVM开源代码， https://github.com/obfuscator-llvm/obfuscator
• 是瑞士西北应用科技大学于2010年6月份发起的一个项目，该项目旨在提供一套开源的
基于LLVM的代码混淆工具，以增加逆向工程的难度。
• LLVM是开源的编译器框架，LLVM出现也是为了替换与系统紧耦合的GCC编译器。
• LLVM分为三个独立模块，高级语言解析、中间语言（IR）处理、目标机器语言生成。三个
模块都具备可扩展性。
• 高级语言支持C/C++，OC等，目标指令支持x86、ARM、mips等，混淆是基于IR进行的扩展。
CLICK ADD RELATED TITLE TEXT, AND CLICK ADD RELATED TITLE 
TEXT, CLICK ADD RELATED TITLE TEXT, CLICK ON ADD RELATED 
TITLE WORDS.
PART.02
混淆技术原理
• OLLVM4.0主要支持三种混淆特性：
  a. 控制流平坦化
b. 虚假控制流
c. 指令替换
• 控制流平坦化（引自freebuf)
• 虚假控制流（引自freebuf)
• 指令替换（引自freebuf)
• 混淆技术原理——虚假控制流
• 引入不透明谓词
• (y <10 || x *(x + 1)%2 == 0)
• https://github.com/obfuscator-llvm/obfuscator/wiki/Bogus-Control-Flow
• 混淆技术原理——指令替换
加法 a = b + c：
a = b - (-c)
a = -(-b + (-c))
r = rand (); a = b + r; a = a + c; a = a - r
r = rand (); a = b - r; a = a + b; a = a + r
减法、与、或、异或运算：
https://github.com/obfuscator-llvm/obfuscator/wiki/Instructions-Substitution
• 混淆技术原理——控制流平坦化
• 有块变量（可能是堆栈或寄存器变量）
• 初始化后的块变量，经过二分搜索执行块
• 当前块修改块变量，决定下一步执行哪个
块
• 原始代码中的分支，会影响块变量赋值
CLICK ADD RELATED TITLE TEXT, AND CLICK ADD RELATED TITLE 
TEXT, CLICK ADD RELATED TITLE TEXT, CLICK ON ADD RELATED 
TITLE WORDS.
PART.03
反混淆技术原理
• 认识符号执行引擎
• 用符号代替变量
• 模拟程序执行
• 约束求解
• 我使用的是符号执行引擎释angr 
https://github.com/angr/angr
• 去流程平坦化思路
• 找到所有真实块
• 从序言块符号执行
• 到第一个真实块即为序言块的后继
• 再递归找这个真实块的后继
• 遇到分支进入递归执行
• 递归返回时修改分支条件继续执行
• 输出（patch汇编 or 其他）
• 寻找基本块思路 Case 1
• 序言块是真实块，后继是主分发器
• 后继是主（预）分发器都是真实块
• 没有后继的是return块（也是真实块）
• 寻找基本块思路 Case 2
• 两个以上主分发器
• 手工指定主分发器地址
• “人工的智能”往往最简单有效
• 寻找基本块思路 Case 3
• 真实块被优化成多个
• 在BEQ或BNE和主（预）分发器之
间的是真实块
• 为什么从函数开头符号执行
• 和块变量比较的可能不是常量
• 这些block value在序言块中初始化
• 识别原始分支
• 单纯控制流平坦化识别相对容易
• ARM 32遇到ITT指令，即可认为是是原始
分支
• 加上虚假控制流，流程变得复杂，可以考
虑使用约束求解，还在研究中……
• 输出——patch汇编or其他
• 指令空间不够
• 输出GDL文件，用wingraph打开。
• 最终效果
• 混淆代码vs还原的代码
• 最终效果
• 混淆代码vs还原的代码
CLICK ADD RELATED TITLE TEXT, AND CLICK ADD RELATED TITLE 
TEXT, CLICK ADD RELATED TITLE TEXT, CLICK ON ADD RELATED 
TITLE WORDS.
PART.04
后续的工作
• GDL文件输出只是图形，不方便查找和交叉引用。
• 计划编写hex-ray的插件，修改反编译的Ctree结构。
• IDA  Pro 7.2的Hex-Rays api 中microcode引入了block概念，由此可以调整block的后继。
• 另外一种输出方式--指令patch
• 做指令迁移
• 这里坑比较多
• 重写SO文件
谢谢观看
演讲人：糜波