### 传输协议问题我们先解决第一个，传输协议的问题。基于 XML的最著名的通信协议就是**SOAP**了，全称**简单对象访问协议**（SimpleObject Access Protocol）。它使用 XML 编写简单的请求和回复消息，并用 HTTP协议进行传输。SOAP将请求和回复放在一个信封里面，就像传递一个邮件一样。信封里面的信分**抬头**和**正文**。    POST /purchaseOrder HTTP/1.1Host: www.geektime.comContent-Type: application/soap+xml; charset=utf-8Content-Length: nnn                1234                                                    2018-07-01                 趣谈网络协议                  刘超                 68                        HTTP 协议我们学过，这个请求使用 POST 方法，发送一个格式为application/soap + xml 的 XML 正文给www.geektime.com](http://www.geektime.com)，从而下一个单，这个订单封装在SOAP的信封里面，并且表明这是一笔交易（transaction），而且订单的详情都已经写明了。
### 协议约定问题接下来我们解决第二个问题，就是双方的协议约定是什么样的？因为服务开发出来是给陌生人用的，就像上面下单的那个 XML文件，对于客户端来说，它如何知道应该拼装成上面的格式呢？这就需要对于服务进行描述，因为调用的人不认识你，所以没办法找到你，问你的服务应该如何调用。当然你可以写文档，然后放在官方网站上，但是你的文档不一定更新得那么及时，而且你也写的文档也不一定那么严谨，所以常常会有调试不成功的情况。因而，我们需要一种相对比较严谨的**Web服务描述语言**，**WSDL**（Web Service DescriptionLanguages）。它也是一个 XML 文件。在这个文件中，要定义一个类型 order，与上面的 XML 对应起来。                        接下来，需要定义一个 message 的结构。        接下来，应该暴露一个端口。                然后，我们来编写一个 binding，将上面定义的信息绑定到 SOAP 请求的 body里面。                                最后，我们需要编写 service。             WSDL 还是有些复杂的，不过好在有工具可以生成。对于某个服务，哪怕是一个陌生人，都可以通过在服务地址后面加上"?wsdl"来获取到这个文件，但是这个文件还是比较复杂，比较难以看懂。不过好在也有工具可以根据WSDL 生成客户端 Stub，让客户端通过 Stub进行远程调用，就跟调用本地的方法一样。
### 服务发现问题最后解决第三个问题，服务发现问题。这里有一个**UDDI**（Universal Description, Discovery, andIntegration），也即**统一描述、发现和集成协议**。它其实是一个注册中心，服务提供方可以将上面的WSDL描述文件，发布到这个注册中心，注册完毕后，服务使用方可以查找到服务的描述，封装为本地的客户端进行调用。
## 小结好了，这一节就到这里了，我们来总结一下。-   原来的二进制 RPC    有很多缺点，格式要求严格，修改过于复杂，不面向对象，于是产生了基于文本的调用方式------基于    XML 的 SOAP。-   SOAP 有三大要素：协议约定用 WSDL、传输协议用 HTTP、服务发现用 UDDL。最后，给你留两个思考题：1.  对于 HTTP 协议来讲，有多种方法，但是 SOAP 只用了    POST，这样会有什么问题吗？2.  基于文本的 RPC 虽然解决了二进制的问题，但是 SOAP    还是有点复杂，还有一种更便捷的接口规则，你知道是什么吗？我们的专栏更新到第 33讲，不知你掌握得如何？每节课后我留的思考题，你都有没有认真思考，并在留言区写下答案呢？我会从**已发布的文章中选出一批认真留言的同学**，赠送[学习奖励礼券]{.orange}和我整理的[独家网络协议知识图谱]{.orange}。欢迎你留言和我讨论。趣谈网络协议，我们下期见！![](Images/55417b60e9c8040807daf07e6bd9cb4b.png){savepage-src="https://static001.geekbang.org/resource/image/b5/fb/b5bc14cb81d3630919fee94a512cc3fb.jpg"}
# 第34讲 \| 基于JSON的RESTful接口协议：我不关心过程，请给我结果上一节我们讲了基于 XML 的 SOAP 协议，SOAP 的 S 是啥意思来着？是Simple，但是好像一点儿都不简单啊！你会发现，对于 SOAP 来讲，无论 XML 中调用的是什么函数，多是通过 HTTP 的POST 方法发送的。但是咱们原来学 HTTP 的时候，我们知道 HTTP 除了POST，还有 PUT、DELETE、GET等方法，这些也可以代表一个个动作，而且基本满足增、删、查、改的需求，比如增是POST，删是 DELETE，查是 GET，改是 PUT。
## 传输协议问题对于 SOAP 来讲，比如我创建一个订单，用 POST，在 XML 里面写明动作是CreateOrder；删除一个订单，还是用 POST，在 XML 里面写明了动作是DeleteOrder。其实创建订单完全可以使用 POST 动作，然后在 XML里面放一个订单``{=html}的信息就可以了，而删除用DELETE 动作，然后在 XML 里面放一个订单的 ID 就可以了。于是上面的那个 SOAP 就变成下面这个简单的模样。    POST /purchaseOrder HTTP/1.1Host: www.geektime.comContent-Type: application/xml; charset=utf-8Content-Length: nnn       2018-07-01       趣谈网络协议         刘超        68  而且 XML 的格式也可以改成另外一种简单的文本化的对象表示格式 JSON。    POST /purchaseOrder HTTP/1.1Host: www.geektime.comContent-Type: application/json; charset=utf-8Content-Length: nnn { "order": {  "date": "2018-07-01",  "className": " 趣谈网络协议 ",  "Author": " 刘超 ",  "price": "68" }}经常写 Web 应用的应该已经发现，这就是 RESTful 格式的 API 的样子。