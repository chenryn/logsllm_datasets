使用 vim 编辑 `Config.pm` 文件：
```
vim Kernel/Config.pm
```
更改 42 行的数据库密码：
```
$Self->{DatabasePw} = 'myotrspw';
```
注释 45 行的 MySQL 数据库支持：
```
# $Self->{DatabaseDSN} = "DBI:mysql:database=$Self->{Database};host=$Self->{DatabaseHost};";
```
取消注释 49 行的 PostgreSQL 数据库支持：
```
$Self->{DatabaseDSN} = "DBI:Pg:dbname=$Self->{Database};";
```
保存文件并退出 vim。
接着编辑 apache 启动文件来启用 PostgreSQL 支持。
```
vim scripts/apache2-perl-startup.pl
```
取消注释 60 和 61 行：
```
# enable this if you use postgresql
use DBD::Pg ();
use Kernel::System::DB::postgresql;
```
保存文件并退出编辑器。
最后，检查缺失的依赖和模块。
```
perl -cw /opt/otrs/bin/cgi-bin/index.pl
perl -cw /opt/otrs/bin/cgi-bin/customer.pl
perl -cw /opt/otrs/bin/otrs.Console.pl
```
你可以在下面的截图中看到结果是 “**OK**”：
![Check all modules again](/data/attachment/album/201706/02/003046w5jfvx5jf21ffy44.png)
### 步骤 6 - 导入样本数据库
在本教程中，我们会使用样本数据库，这可以在脚本目录中找到。因此我们只需要将所有的样本数据库以及表结构导入到第 4 步创建的数据库中。
登录到 `postgres` 用户并进入 otrs 目录中。
```
su - postgres
cd /opt/otrs/
```
作为 otrs 用户使用 `psql` 命令插入数据库以及表结构。
```
psql -U otrs -W -f scripts/database/otrs-schema.postgresql.sql otrs
psql -U otrs -W -f scripts/database/otrs-initial_insert.postgresql.sql otrs
psql -U otrs -W -f scripts/database/otrs-schema-post.postgresql.sql otrs
```
在需要的时候输入数据库密码 `myotrspw`。
![Import OTRS Sample Database](/data/attachment/album/201706/02/003051uuiinj58sa6tial7.png)
### 步骤 7 - 启动 OTRS
数据库以及 OTRS 已经配置了，现在我们可以启动 OTRS。
将 otrs 的文件及目录权限设置为 `www-data` 用户和用户组。
```
/opt/otrs/bin/otrs.SetPermissions.pl --otrs-user=www-data --web-group=www-data
```
通过创建一个新的链接文件到 apache 虚拟主机目录中启用 otrs apache 配置。
```
ln -s /opt/otrs/scripts/apache2-httpd.include.conf /etc/apache2/sites-available/otrs.conf
```
启用 otrs 虚拟主机并重启 apache。
```
a2ensite otrs
systemctl restart apache2
```
确保 apache 启动没有错误。
![Enable OTRS Apache Virtual Host](/data/attachment/album/201706/02/003052ub7vjebbvdz7vk0x.png)
### 步骤 8 - 配置 OTRS 计划任务
OTRS 已经安装并运行在 Apache Web 服务器中了，但是我们仍然需要配置 OTRS 计划任务。
登录到 `otrs` 用户，接着以 otrs 用户进入 `var/cron` 目录。
```
su - otrs
cd var/cron/
pwd
```
使用下面的命令复制所有 `.dist` 计划任务脚本：
```
for foo in *.dist; do cp $foo `basename $foo .dist`; done
```
使用 `exit` 回到 root 权限，并使用 otrs 用户启动计划任务脚本。
```
exit
/opt/otrs/bin/Cron.sh start otrs
```
![Enable OTRS Cron](/data/attachment/album/201706/02/003100yff5sbswfj5fllo5.png)
接下来，手动收取电子邮件的 PostMaster 创建一个新的计划任务。我会配置为每 2 分钟收取一次邮件。
```
su - otrs
crontab -e
```
粘贴下面的配置：
```
*/2 * * * *    $HOME/bin/otrs.PostMasterMailbox.pl >> /dev/null
```
保存并退出。
现在停止 otrs 守护进程并再次启动。
```
bin/otrs.Daemon.pl stop
bin/otrs.Daemon.pl start
```
![Enable OTRS Fetching Email](/data/attachment/album/201706/02/003104avxzlal61x6tyhlt.png)
OTRS 安装以及配置完成了。
### 步骤 9 - 测试 OTRS
打开你的 web 浏览器并输入你的服务器 IP 地址： 
使用默认的用户 `root@localhost` 以及密码 `root` 登录。
![Installation Successfully OTRS Home Page](/data/attachment/album/201706/02/003107dkdnnxzlxpg8dsz5.png)
使用默认的 root 账户你会看到一个警告。点击警告信息来创建一个新的 admin root 用户。
下面是用另外的 admin root 用户登录后出现的 admin 页面，这里没有出现错误信息。
![OTRS Admin Dashboard Without Error Messages](/data/attachment/album/201706/02/003109y9cw28ccvdchn1y1.png)
如果你想作为客户登录，你可以使用 `customer.pl` ：
你会看到客户登录界面，输入客户的用户名和密码。
![OTRS Customer Login Page](/data/attachment/album/201706/02/003109pntzn1nbop286yt1.png)
下面是一个创建新单据的客户页面。
![Customer Open Ticket](/data/attachment/album/201706/02/003112xlvltyvymltbe99z.png)
### 步骤 10 - 疑难排查
如果你仍旧看到 “OTRS Daemon is not running” 的错误，你可以像这样调试 OTRS 守护进程。
```
su - otrs
cd /opt/otrs/
```
停止 OTRS 守护进程：
```
bin/otrs.Daemon.pl stop
```
使用 `--debug` 选项启动 OTRS 守护进程。
```
bin/otrs.Daemon.pl start --debug
```
### 参考
* [http://wiki.otterhub.org/index.php?title=Installation*on*Debian*6*with\_Postgres](http://wiki.otterhub.org/index.php?title=Installation_on_Debian_6_with_Postgres)
* 
* 
---
via: 
作者：[Muhammad Arul](https://www.howtoforge.com/tutorial/how-to-install-otrs-opensource-trouble-ticket-system-on-ubuntu-16-04/) 译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出