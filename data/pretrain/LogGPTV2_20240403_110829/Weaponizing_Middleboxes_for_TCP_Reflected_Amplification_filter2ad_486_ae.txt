contributor to this problem.
5.6 Routing Loops
Routing loops are the result of network misconﬁgurations, in-
consistencies, and errors in routing protocol implementations.
Packets caught in a routing loop will typically eventually be
dropped when their TTL reaches zero. However, even a ﬁnite
routing loop can hypothetically have signiﬁcant impact on
ampliﬁcation factor. Suppose an amplifying middlebox were
in a routing loop; every time an offending packet traversed
the loop, it would re-trigger the middlebox. Such a scenario
would make the network self-amplifying: at no additional cost
to an attacker, the effective ampliﬁcation rate of a middlebox
would be increased by the number of times the packet crosses
the middlebox in the routing loop.
The maximum value of TTL in the IPv4 header is 255, so
the number of times a single trigger packet sequence can elicit
responses from an RFC-compliant middlebox is (cid:96)(255− d),
where d is the number of hops between the attacker machine
and the routing loop and (cid:96) is the number of times the packets
traverse the amplifying middlebox per loop.
So far, our scans were conducted with a TTL value of 255,
in accordance with the optimizations discovered by Geneva in
§3. We performed follow-up scans with a reduced TTL value
in order to observe which IP addresses send us a correspond-
ing reduction in the number of packets, allowing us to identify
which ampliﬁers involve routing loops.
For this experiment, we use the (cid:104)SYN; PSH+ACK(cid:105) packet
sequence with the www.youporn.com trigger keyword. We
use the top 1 million hosts (by number packets sent during the
scans), and perform two follow-up scans to these IP addresses:
one with the TTL set to 255 and one set to 64 (approximately
1/4 the value). As we are knowingly re-triggering machines
with potentially enormous ampliﬁcation factors, we reduced
the scanning speed to 100 kbps6.
We can identify routing loops by comparing the number of
packets we receive per IP address across scans. For a routing
loop d hops from our scanner, we expect a probe with TTL =
255 to receive (255− d)/(64− d) times more packets than
6Despite our low send rate, we received back on average around 800 Mbps,
representing a total ampliﬁcation of 8,000× for this experiment.
USENIX Association
30th USENIX Security Symposium    3355
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 4 5 6 7 8 9 10Cumulative Fraction of HostsIncrease Factor from TTL=64 to 255 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1100101102103Fraction of Prefix’sAddresses that LoopRank Order of /24 Prefixes with At Least One Routing Loopa probe with TTL = 64. Note that this value increases as d
increases, and, for a routing loop, has a minimum value of
∼4 (when the routing loop is zero hops away). Therefore,
we label an IP addresses as having a routing loop if it has an
increase factor of at least 4 and sent more than 10 packets
when probed with a TTL of 255. From our top 1 million
IP sample, we label 53,041 IP addresses as routing loop
ampliﬁers using this heuristic, spanning 2,763 distinct /24
preﬁxes. Figure 9 presents a CDF of the increase factor for
these routing loop IPs.
Loops per subnet One would expect that if sending to a
given IP address results in a routing loop, then all of the other
IP addresses in its /24 preﬁx would experience a loop, as well.
Surprisingly, we ﬁnd that 62% of /24 preﬁxes with at least
one routing loop have exactly one loop. Figure 10 shows the
fraction of IP addresses found in each looping /24 preﬁx. Only
54 subnets have over 90% (231 of 256) of their IP addresses
show evidence of being a routing-loop ampliﬁer. On the other
hand, 81.2% (2,244) of looping preﬁxes have fewer than 10
looping IP addresses. This means that even if an attacker can
elicit responses from a middlebox by sending packets to any
IP address that routes through it, she may only be able to take
advantage of routing loops to a small number of IP addresses.
6 “Mega-ampliﬁers”
In our scans, we identify a surprising number of hosts that
send enormous amounts of data in response to a single packet
sequence—on the order of many gigabytes. We believe these
are the same “mega-ampliﬁers” that Czyz et al. [9] reported
in 2014. We identify two phenomena that contribute to mega-
ampliﬁcation: self-sustaining ampliﬁers and victim-sustained
ampliﬁers.
Self-Sustaining Ampliﬁers Self-sustaining ampliﬁers are
IP addresses that, once triggered, continue sending data in-
deﬁnitely. In our scans, we have observed these continuing
for weeks after our probes. We hypothesize the cause of self-
sustaining ampliﬁers is inﬁnite routing loops: routing loops
between middleboxes that do not decrement TTLs.
An inﬁnite routing loop suggests these ampliﬁers are send-
ing responses at the maximum capacity of their links. To
conﬁrm, we sent a packet sequence to a self-sustaining ampli-
ﬁer we identiﬁed in an ISP’s censorship system in Russia. A
short time later, we sent the same packet sequence from a dif-
ferent vantage point, and we recorded the bandwidth received
from each. Figure 11 shows the bandwidth we received on
both vantage points during our experiment. When we send a
probe from a second vantage point, the response bandwidth
was split equally between them.
We were unable to terminate the barrage of packets sent
to us by this ampliﬁer. We sent RST packets, and also tried
FIN+ACK, FIN, RST+ACK, and ICMP port unreachable
messages with no effect. Ultimately, the trafﬁc stopped after
Figure 11: Attack bandwidth received at two vantage points
from a self-sustaining amplifying IP address, which (based
on its block page) appears to be a component of a Russian
ISP’s censorship system. The dashed line marks when the
packet sequence was sent from the second vantage point. Note
how the bandwidth we get from the system is divided evenly
between the vantage points. This experiment supports our
hypothesis that self-sustaining ampliﬁcation is caused by an
inﬁnite routing loop.
approximately six days to the ﬁrst vantage point, and 22 hours
for the second. We believe the reason they ﬁnally stopped was
because the routing loop eventually dropped a packet.
Fortunately, we ﬁnd very few self-sustaining ampliﬁers:
only 19 IP addresses sent data continuously. We identiﬁed 6 IP
addresses (each in a different /24 preﬁx) located in China that
sent the known censorship pattern from the GFW indeﬁnitely,
possibly indicating a loop across the GFW itself. Two ISPs in
Russia also sent block pages indeﬁnitely.
Victim-Sustained Attacks The TCP standard says that
when a host receives an unsolicited non-RST packet, it should
send a RST packet in response [28]. For TCP ampliﬁcation vic-
tims, this means they will send RST packets for any received
(ampliﬁed) trafﬁc. Normally, victim-generated RST packets
have no effect on middlebox ampliﬁers7.
However, our scans identify amplifying IP addresses that
send an additional response to RST packets instead of ignoring
them. This causes the victim to send another RST, inducing
more responses, and so on. This packet storm continues in-
deﬁnitely until a packet is dropped.
By default, our scanning machine sent outbound RST pack-
ets in response to data, thereby eliciting additional packets
from victim-sustained ampliﬁers. To explore the effect that
outbound RST packets have on ampliﬁcation factor, we per-
form two additional scans: one with outbound RST pack-
ets turned off for the www.youporn.com keyword in the
(cid:104)SYN; PSH+ACK(cid:105) sequence, and one with RSTs enabled (de-
fault). Figure 12 shows a comparison between these two scans.
Dropping outbound RST packets has the effect of lowering
the ampliﬁcation factor for the top amplifying IP addresses,
7Conversely, they may serendipitously halt SYN-based ampliﬁcation at-
tacks that target end-hosts [15, 16].
3356    30th USENIX Security Symposium
USENIX Association
 0 500 1000 1500 2000 0 100 200 300 400 500 600 700KbpsSeconds Since Experiment StartVantage Point 1Vantage Point 2tive techniques to avoid having clients in censored countries
make requests for banned content [11, 25, 34, 41]. Similarly
in our work, the requests are made by our scanning machine
from outside the censored countries to all IPv4 addresses,
making it unlikely that a government would punish any indi-
vidual, due to the directionality and ubiquity of the scans. The
packet sequences we probe with are non-TCP compliant and
do not induce any in-country clients to make sensitive requests
in response. For these reasons, we believe wide-scale scans
of this nature pose minimal risk to individuals in censored
regions.
Saturation Experiments A natural question with all ampli-
ﬁcation studies is: at what point do ampliﬁers’ link saturate?
For example, a single host with ampliﬁcation factor of 5,000×
may not be very valuable if it only has a 100kbps uplink.
Measuring the saturation of a speciﬁc ampliﬁer requires
sending the triggering packet sequence in rapid succession
and measuring the response it triggers. For ethical reasons,
we do not perform such an experiment. These experiments
would effectively perform denial of service attacks against
the speciﬁc middlebox or the IP address, or could adversely
impact other networks on path.
We unintentionally triggered mega-ampliﬁers, and report
on our ﬁndings in this paper. However, after discovering these
IP addresses and the nature of their responses, we removed
them from future scans.
Responsible Disclosure Responsibly disclosing our ﬁnd-
ings is challenging given the large number of potentially af-
fected vendors and network operators. It is both difﬁcult to
ﬁngerprint speciﬁc vendors or manufacturers of middleboxes,
and also difﬁcult to identify the networks where middleboxes
are responding from, as they spoof their source IP address by
design.
Nonetheless, we attempted to reach out to both operators
and vendors of middleboxes we discovered in our study. We
contacted several country-level Computer Emergency Readi-
ness Teams (CERT) that coordinate disclosure for their re-
spective countries, including China, Egypt, India, Iran, Oman,
Qatar, Russia, Saudi Arabia, South Korea, the United Arab
Emirates, and the United States. We also reached out to sev-
eral middlebox vendors and manufacturers, including Check
Point, Cisco, F5, Fortinet, Juniper, Netscout, Palo Alto, Son-
icWall, and Sucuri.
We also publicly provide a repository of scripts that can
help manufacturers and network operators test their middle-
boxes for amplifying behavior.
8 Related Work
TCP Reﬂected Ampliﬁcation Attacks
In 2014, Kürher et
al. introduced a TCP handshake ampliﬁcation attack [15, 16]
that takes advantage of a server retransmitting SYN+ACK pack-
ets multiple times in response to a single SYN. They ﬁnd
Figure 12: Rank order plot of ampliﬁcation factor of two
scans for the www.youporn.com keyword requested with the
(cid:104)SYN; PSH+ACK(cid:105) packet sequence: one with outbound RST
and RST+ACK packets being dropped and the other normally.
while raising the ampliﬁcation factor of many IP addresses in
the “long-tail”.
We ﬁnd several thousand IP addresses that behave this way,
which we classify into two classes: censoring repeaters and
“acknowledgers”.
For censoring repeaters, we ﬁnd 4,154 middleboxes that
re-send a block page in response to a RST. This appears to
be a buggy ﬂow-tracking middlebox that, once a TCP ﬂow
triggers blocking, will continue injecting its block page in
response to any subsequent packet, including RSTs.
For acknowledgers, we ﬁnd 10,645 IPs that respond with
an ACK to both data payloads and subsequent RST packets.
This behavior is also not TCP compliant. To investigate what
operating systems these “acknowledgers” are, we performed
Operating System (OS) identiﬁcation nmap [19] scans on 500
randomly sampled victim sustained IP addresses. Of the 452
(90.2%) IP addresses with a successful OS match, 267 (59%)
were Dell SonicWall NSA 220. We believe this ﬁrewall model
is to blame for most of the acknowledger victim-sustained
behavior: the next most common OS match was Linux 2.68,
with only 14 hosts (3%).
7 Ethical Considerations
Internet Scanning We followed best practices for scans as
outlined by ZMap and Quack [10,41]. We set up reverse DNS
and hosted a webpage on the IP address we performed scans
from, explaining the purpose of our scans. We also listed an
email address to receive complaints and allow people to opt
out of future scans. We received 8 removal requests over the
course of our study comprising 2.1 million IP addresses which
we removed from our scans.
Censorship-focused Internet-wide scans require additional
careful considerations to avoid causing harm or falsely impli-
cating users in making censored requests. In prior work on
active probing to trigger censorship, researchers used alterna-
8We note this is not standard Linux 2.6 behavior.
USENIX Association
30th USENIX Security Symposium    3357
10−1100101102103104105106107108100101102103104105106107108Amplification FactorIP Address RankRSTsNo RSTsmillions of hosts that will retransmit up to 20×, though most
send fewer than 6. We also observe this attack in our work,
but additionally discover hundreds of millions more IPs with
orders of magnitude higher ampliﬁcation rates.
Non-reﬂective Ampliﬁcation Attacks Other ampliﬁcation
attacks abuse TCP but involve directly connecting to the vic-
tim. Sherwood et al. [36] showed an attacker can use opti-
mistic acknowledgments to induce a server to send a ﬁle at
higher rates, ultimately DoSing its own network. The Great
Cannon injects Javascript into Baidu webpages, turning vis-
iting browsers into denial of service bots [20]. Our attack is
effectively the reverse: instead of a censor co-opting the band-
width of users to perform an attack, an attacker can co-opt the
bandwidth of the censor.
UDP Reﬂected Ampliﬁcation Attacks Reﬂected UDP at-
tacks have been studied extensively [1, 18, 32, 37]. However,
we are the ﬁrst to study the use of middleboxes as reﬂectors.
Victim-sustained Attacks Sargent et al. [33] identiﬁed 79
hosts that respond to a particular IGMP request by repeating
the request. Ostensibly, source-spooﬁng this request could
cause an inﬁnite loop between two such hosts, and is thus
similar to our victim-sustained attacks in §6. Our attacks are
more widely applicable, since they rely on standard client
behavior (sending RSTs to unsolicited packets); and as a re-
sult we identiﬁed several orders of magnitude more targets of
victim-sustained inﬁnite ampliﬁcation. However, their ﬁnd-
ings motivate applying tools like Geneva at the application
layer to discover application-speciﬁc bugs.
9 Countermeasures
Unlike previous ampliﬁcation attack vectors [9, 32, 37], our
attack is not isolated to a speciﬁc protocol and impacts a
wide range of implementations and devices. Unfortunately,
this means there is no single vendor or network that can be
patched to correct the problem. Instead, this issue is systemic
to middleboxes, particularly those that must operate seeing
only one side of a connection.
Nonetheless, we offer potential remedies that can eliminate
or partially mitigate ampliﬁcation attacks, for both middle-
boxes and potential victims.
9.1 Middleboxes
Connection directionality While many middleboxes see
asymmetric sides of a connection (e.g., only trafﬁc to the
server), there are others that see both sides, such as middle-
boxes deployed at the gateways of networks. These middle-
boxes can accurately infer if a connection is live and only
inject content if the three-way handshake is valid. We recom-
mend such middleboxes require seeing trafﬁc in both direc-