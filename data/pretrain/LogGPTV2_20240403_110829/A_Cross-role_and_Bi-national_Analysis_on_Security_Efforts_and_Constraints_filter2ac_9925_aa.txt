title:A Cross-role and Bi-national Analysis on Security Efforts and Constraints
of Software Development Projects
author:Fumihiro Kanei and
Ayako Akiyama Hasegawa and
Eitaro Shioji and
Mitsuaki Akiyama
A Cross-role and Bi-national Analysis on Security Efforts and
Constraints of Software Development Projects
Ayako Akiyama Hasegawa
Fumihiro Kanei
NTT
Tokyo, Japan
PI:EMAIL
NTT
Tokyo, Japan
PI:EMAIL
Eitaro Shioji
NTT
Tokyo, Japan
PI:EMAIL
Mitsuaki Akiyama
NTT
Tokyo, Japan
PI:EMAIL
ABSTRACT
Software security, which is often regarded as a non-functional
requirement, tends to be less prioritized than other explicit require-
ments in development projects. For designing security measures
that can be used in software development, we must understand the
obstacles that prevent the adoption of secure software development
practices. In this study, we quantitatively analyzed security efforts
and constraints of software development projects through an online
survey of software development professionals in the US and Japan
(N =664). We revealed how certain characteristics of a development
project, such as the project’s contractual relationships or the soft-
ware’s target users, influence security efforts and constraints. In
addition, by comparing the survey results of two groups (devel-
opers and managers), we revealed how the gap in their security
efforts and constraints influences software security. We believe the
results provide insights toward designing usable measures to as-
sist security-related decision-making in software development and
conducting appropriate surveys targeting software development
professionals.
CCS CONCEPTS
• Security and privacy → Human and societal aspects of se-
curity and privacy; Software security engineering.
KEYWORDS
Security, Survey, HCI for development, Secure programming
ACM Reference Format:
Fumihiro Kanei, Ayako Akiyama Hasegawa, Eitaro Shioji, and Mitsuaki
Akiyama. 2021. A Cross-role and Bi-national Analysis on Security Efforts
and Constraints of Software Development Projects. In Annual Computer
Security Applications Conference (ACSAC ’21), December 6–10, 2021, Virtual
Event, USA. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/
3485832.3485922
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8579-4/21/12...$15.00
https://doi.org/10.1145/3485832.3485922
1 INTRODUCTION
Software vulnerabilities have been a major attack vector of cy-
ber threats. To address software vulnerabilities, methods for de-
tecting and remediating vulnerabilities have been extensively
studied in various research fields including software engineer-
ing [11, 21, 22, 34, 42, 43]. For instance, program analysis techniques
to detect vulnerabilities [11, 21, 34, 43] and remediation techniques
to automatically fix detected vulnerabilities [22, 42] have been pro-
posed.
In the last five years, researchers have focused on the human as-
pects of software development to understand the causes of software
vulnerabilities and have presented technical and organizational
approaches to address these causes [3, 5, 6, 17, 29, 31]. Through
interviewing software developers, these studies revealed the fol-
lowing factors in secure software development: usability and mis-
use of application programming interfaces (APIs) [17, 29, 31], the
insufficient documentation of secure coding guides [3, 5], and de-
velopers’ strategies, motivations, and deterrents towards software
security [6].
Although researchers have intensively researched software de-
velopers, they have not sufficiently investigated how the character-
istics of software products and the form of software development
affect software security. In the process of software development, se-
curity is often considered as a non-functional requirement (i.e., not
explicitly described as a requirement) and can easily be neglected
due to conflicts with more explicit requirements [32, 35]. Several
studies have examined the causes of conflicts between security and
other explicit requirements and discussed the lack of resources (e.g.,
time, personnel, and budget) for security practices [6, 41]. With a fo-
cus on multi-person projects for software development, no studies
to date have quantitatively investigated how other characteristics
of the project-based software development (i.e., contract types, de-
velopment methods, and users of the software) affect developers’
attitudes towards software security.
Recent security research on software development has focused
on various types of developers (e.g., computer science students,
freelancers, and company developers) to improve the ecological
validity of results [26], but the roles of people involved in project
development have not been sufficiently researched. In project de-
velopment, in addition to the developers (programmers and testers)
who do the coding and testing, there are also managers who man-
age the project schedule and various resources. However, most
349ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Fumihiro Kanei, Ayako Akiyama Hasegawa, Eitaro Shioji, and Mitsuaki Akiyama
existing research has focused on only software developers. As an
example of research focusing on the role of managers, Kokulu et al.
conducted a user study to investigate both managers and security
analysts in security operation centers (SOCs) [20]. They identified
gaps in operational awareness between analysts and managers at
SOCs. The issues of such gaps between managers and others have
been partly discussed in some studies in the context of software
development [30, 32, 36]. On the other hand, there has been insuffi-
cient quantitative analysis in terms of the specific security behavior
and awareness of managers and how the gaps between software
development professionals1 (i.e., managers and developers) affect
the secure software developments.
Most studies on software development professionals have been
conducted with single-country participants (e.g., US residents).
Even in cases where participants from multiple countries are in-
cluded, the characteristics of the development project in each coun-
try are not fully taken into account, and answers from each country
are usually analyzed in the same manner [5, 19, 29]. However,
the characteristics of software development projects are known
to vary somewhat between countries. For instance, according to a
report about software investment published by the Japanese gov-
ernment [25], contractual relationships in the US greatly differ
from those in Japan: software development is outsourced 33% and
88% of the time in the US and Japan, respectively. Furthermore,
software development methods also differ between countries. For
instance, according to reports about software development methods
published by Gartner [14, 15], nearly 50% of companies in the US
have adopted Agile development, compared with only 30% of com-
panies in Japan, where more companies use traditional Waterfall
development. Although some existing studies have investigated and
systematized the contractual relationships in software development
and development methods adopted by projects [8, 9], there has not
been sufficient research to date to determine what differences ex-
ist in security awareness and behavior of software development
professionals in different countries.
questions (RQs) in this work.
Given this situation, we attempt to answer the following research
• RQ1. How do software development characteristics (e.g.,
the project’s contractual relationship) impact developers’
security behavior and awareness?
• RQ2. Are there any gaps between developers and managers
regarding security behavior and awareness? If so, how do
they impact the security of products?
• RQ3. Do security behavior and awareness of software de-
velopment professionals follow the same tendency in the
United States and Japan, where characteristics of develop-
ment projects tend to differ?
Working on these RQs, we aim to clarify the issues that should be
considered for security measures for software developers and come
up with interventions that will contribute to a more secure software
development. To answer these RQs, we conducted an online survey
of 664 professionals in the US and Japan who were engaged in
software development projects. Our questionnaire is composed of
1In this work, we use the terms “developers” and “managers” when explicitly dis-
tinguishing between the two roles, and “software development professionals” when
otherwise.
questions about (1) characteristics of development projects and
(2) participants’ security behavior and awareness. We conducted
analyses on the basis of the correlations among the answers. Also,
we surveyed two different groups (developers and managers) and
analyzed both groups’ tendencies and differences. In addition, we
compared the survey results of the two countries and analyzed their
differences in security behavior and awareness.
This paper makes the following contributions:
• We conducted an online survey of software development
professionals and analyzed the relationship between devel-
opment characteristics and security and the gaps in security
behavior and awareness between developers and managers.
To the best of our knowledge, this is the first quantitative
analysis focusing on the positional difference between de-
velopers and managers in a development project.
• By comparatively analyzing answers about development
characteristics and security behavior and awareness, we
identified that certain characteristics, such as the user scope
of developed software or a project’s contractual relationship,
strongly influence the security behavior and awareness of
software development professionals.
• By analyzing answers about security behavior and aware-
ness, we identified that the absence of decision-making au-
thority and difficulty in security-related decision-making are
large obstacles that prevent secure software development.
• Comparing the survey results of participants in the US and
Japan, we identified that they generally follow the same
tendency, especially in how development characteristics and
positions of developers and managers impact their security
behavior and awareness.
• We identified that when considering security measures for
software development projects, it is important to approach
the person or organization with security-related decision-
making authority, such as managers or contractees.
• We identified that developers and managers tend to have
different perceptions regarding security of development
projects. This finding suggests that, when designing surveys
targeting software development professionals, one must first
consider the characteristics of developers and managers and
select appropriate participants who suit the purpose or the
content of a survey.
2 RELATED WORK
2.1 Developer’s insecure behavior
Researchers have studied insecure behaviors of developers in
software development through security-focused programming
tasks. Oliveira et al. focused on the causes of API misuse, called
blindspots, and conducted a user study solving programming puz-
zles with/without blindspots [29]. They found that the personality
trait of openness in developers was associated with the ability to
detect blindspots but that the cognitive function and programming
experience of developers were not. Acar et al. found that partic-
ipants who copied and pasted a code snippet as ready-to-use on
Stack Overflow (Q&A forum) produced significantly less secure
code than those using official documentation or books [1]. Fischer
et al. investigated to what extent security-related code snippets
350A Cross-role and Bi-national Analysis on Security Efforts and Constraints of Software Development Projects
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
posted on Stack Overflow were copied into Android apps. They
found that 15.4% of all 1.3 million apps contained such code snippets
and 97.9% of these contained at least 1 insecure code snippet [12].
Patnaik et al. identified 16 thematic issues of usability across 7
cryptographic libraries by analyzing developers’ struggles on Stack
Overflow [31]. Acar et al. showed that ecological validity (whether
the circumstances of a study reflect the real world) is a major con-
cern for usable security in security studies with developers [2].
Naiakshina et al. investigated the ecological validity of results in
security studies of developers [26]. They conducted a user study
across different developer samples and found that company de-
velopers overall performed better than computer science students
and freelancers with regard to security measures. To offer more
ecological validity, Votipka et al. organized a secure-programming
competition [38]. They analyzed projects developed by teams and
their vulnerabilities and found that vulnerabilities arising from
misunderstanding of security concepts were significantly more
common than vulnerabilities arising from simple mistakes.
2.2 Security practices and disincentives in
software development process
On comparing best practices identified in the literature to real-life
security practices obtained from their interviews with company
developers, Assal and Chiasson found that best practices in the
Software Development Life Cycle (SDLC) are often ignored due to
the division of labor or cost-benefit trade-offs [5]. Acar et al. ana-
lyzed 19 distinct online documents for secure software development
and found several problems: readily available but outdated advice,
no concrete examples or exercises, and poorly represented topics
(e.g., program analysis tools, logging/auditing, and data minimiza-
tion) [3]. Palombo et al. conducted an ethnographic study of secure
software development processes in a software company to observe
software (in)security phenomena [30]. Through fieldwork lasting
1.5 years in terms of total research time, they reported specific exam-
ples of how incentive structures, organizational relationships, and
work flow affect secure software development processes. Most rele-
vant to our study, Assal and Chiasson conducted an online survey
to explore the interplay between developers and software security
processes [6], specifically focusing on (1) strategies developers use
to deal with security, (2) developers’ motivations and deterrents
towards software security, and (3) the influence of the development
methodology, company size, or adoption of Test-Driven Develop-
ment (TDD) for software security. Our study differs from their work
in the following aspects: the newly focused on factors in software
development, such as budget, type of industry, type of developed
product, as well as development methodology and company size;
and a comparative analysis of managers who have decision-making
authority to introduce security efforts for secure development vs.
developers who do not.
2.3 Support for secure software development
To support secure software development, tools, processes, and orga-
nizational structures have been proposed. Nguyen et al. proposed
an integrated development environment (IDE) plug-in, which high-
lights security and privacy related code problems and explains
and suggests actionable changes to developers [28]. Gorski et al.
proposed a security advice concept that is directly integrated into
an API [17]. Fischer et al. proposed nudge-based security advice
controlled from neural network-based learning of cryptographic
use cases and integrated it in Stack Overflow [13]. Glumich et al.
proposed addressing vulnerabilities earlier in the SDLC by conduct-
ing early-cycle vulnerability assessments [16]. Weir et al. explored
effective interventions in development teams to motivate and help
them to improve security [39, 40]. Votipka et al. presented a scale
measuring self-efficacy of secure software development to evaluate
any resulting improvement in secure development skill caused by
educational interventions, guidelines, or tools [37].
2.4 Managers’ perspective
Since people with various roles need to work cooperatively in orga-
nizations, much research has been conducted to understand mental
models and behaviors that are affected by different positions. In
usable security research, some studies have focused on relation-
ships and differences between staff members involved in front-line
operations and a manager who is responsible for controlling or
administrating certain groups of staff from a broad perspective.
Kokulu et al. interviewed managers and analysts in security oper-
ation centers (SOCs) about issues of SOCs and found that the three
most controversial issues between analysts and managers were the
speed of response and level of automation, evaluation metrics, and
tool functionality [20]. To understand non-technical issues when
security strategies are applied in practice, Alomar et al. interviewed
security practitioners tasked with vulnerability discovery or man-