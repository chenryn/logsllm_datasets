来源：[先知安全技术社区](https://xianzhi.aliyun.com/forum/read/2084.html
"作者：FaIth4444@先知安全技术社区")  
作者：FaIth4444
#### 漏洞描述
ThinkerPHP，由 thinker 开发维护。基于 thinkphp3.2
开发的一款部分开源的cms系统，前期是仿的phpcms系统，后在在模仿基础上对界面等做了优化。
thinkphp3.2 的优势在于相对应 phpcms 用更少的代码实现更多的功能，
基于命名空间的相对较新的架构以及拥有更好的底层扩展性。ThinkerPHP希望融合phpcms和thinkphp3.2的优点并志在收获一个扩展性好、开发效率高、用户体验佳、底层扩展性好的快速开发系统。在开发过程中作者一直秉承专注、专业、专心的精神，不断完善。
ThinkerCMS1.4 （最新版）`InputController.class.php` 页面由于对 `$_POST`
等参数没有进行有效的判断和过滤，导致存在任意代码执行漏洞，允许攻击者利用漏洞全完获取Webshell权限。
#### 溯源发现危险代码块
###### ① 漏洞触发位置
文件位置： `D:\WWW\Modules\Plug\Controller\InputController.class.php` （67行）
触发函数： `public function cropzoomUpload()`
    public function cropzoomUpload()
            {
                    if(session("userinfo")==NULL)E('没有登陆！');
                    load('@.cropzoom');
                    list($width, $height) = getimagesize($_POST["imageSource"]);
                    $viewPortW = $_POST["viewPortW"];
                    $viewPortH = $_POST["viewPortH"];
                    $pWidth = $_POST["imageW"];
                    $pHeight =  $_POST["imageH"];
                    $ext = end(explode(".",$_POST["imageSource"]));
                    $function = returnCorrectFunction($ext);
                    $image = $function($_POST["imageSource"]);
                    $width = imagesx($image);
                    $height = imagesy($image);
                    // Resample
                    $image_p = imagecreatetruecolor($pWidth, $pHeight);
                    setTransparency($image,$image_p,$ext);
                    imagecopyresampled($image_p, $image, 0, 0, 0, 0, $pWidth, $pHeight, $width, $height);
                    imagedestroy($image);
                    $widthR = imagesx($image_p);
                    $hegihtR = imagesy($image_p);
                    $selectorX = $_POST["selectorX"];
                    $selectorY = $_POST["selectorY"];
                    if($_POST["imageRotate"]){
                            $angle = 360 - $_POST["imageRotate"];
                            $image_p = imagerotate($image_p,$angle,0);
                            $pWidth = imagesx($image_p);
                            $pHeight = imagesy($image_p);
                            //print $pWidth."---".$pHeight;
                            $diffW = abs($pWidth - $widthR) / 2;
                            $diffH = abs($pHeight - $hegihtR) / 2;
                            $_POST["imageX"] = ($pWidth > $widthR ? $_POST["imageX"] - $diffW : $_POST["imageX"] + $diffW);
                            $_POST["imageY"] = ($pHeight > $hegihtR ? $_POST["imageY"] - $diffH : $_POST["imageY"] + $diffH);
                    }
                    $dst_x = $src_x = $dst_y = $src_y = 0;
                    if($_POST["imageX"] > 0){
                            $dst_x = abs($_POST["imageX"]);
                    }else{
                            $src_x = abs($_POST["imageX"]);
                    }
                    if($_POST["imageY"] > 0){
                            $dst_y = abs($_POST["imageY"]);
                    }else{
                            $src_y = abs($_POST["imageY"]);
                    }
                    $viewport = imagecreatetruecolor($_POST["viewPortW"],$_POST["viewPortH"]);
                    setTransparency($image_p,$viewport,$ext);
                    imagecopy($viewport, $image_p, $dst_x, $dst_y, $src_x, $src_y, $pWidth, $pHeight);
                    imagedestroy($image_p);
                    $selector = imagecreatetruecolor($_POST["selectorW"],$_POST["selectorH"]);
                    setTransparency($viewport,$selector,$ext);
                    imagecopy($selector, $viewport, 0, 0, $selectorX, $selectorY,$_POST["viewPortW"],$_POST["viewPortH"]);
                    //获取图片内容
            //var_dump($_POST);
                    ob_start();
                    parseImage($ext,$selector);
                    $img = ob_get_contents();
                    ob_end_clean();
                    if(filter_var($_POST["imageSource"], FILTER_VALIDATE_URL))
                    {
                            $urlinfo=parse_url($_POST["imageSource"]);
                            $path=$urlinfo['path'];
                            $pathinfo=pathinfo($path);
                    }
                    else
                    {
                            $path=$_POST["imageSource"];
                            $pathinfo=pathinfo($_POST["imageSource"]);
                    }
                    $file_name=$pathinfo['filename'].'_crop.'.$pathinfo['extension'];//剪切后的图片名称
                    $file_path='.'.$pathinfo['dirname'].'/'.$file_name;
                    file_put_contents($file_path, $img);
                    echo C('upload_host').$pathinfo['dirname'].'/'.$file_name;
                    imagedestroy($viewport);
            }
在这里我们可以观察发现 `public function cropzoomUpload()` 函数的大概操作流程:
1.接受了包括
`$_POST["viewPortW"]`，`$_POST["viewPortH"]`，`$_POST["imageSource"]`等一系列的图片剪切的参数
2.使用这些参数，并调用php-GD库对图片进行渲染和处理
3.将处理后的图片输出到缓冲区，将缓冲区作为图片的内容
4.然后将再根据`$_POST["imageSource"]`参数进行pathinfo处理，将结果存到`$pathinfo`，并组合成为写文件的路径`$file_path`
5.将缓冲区内容通过file_put_contents写入指定的$file_path（此处直接写入Webshell，获取Web权限）
###### ② ByPass （绕过文件后缀名检测，绕过php-GD对图片的渲染和处理导致webshell代码错位失效）
绕过文件后缀名检测 cropzoom 图片剪切相关的函数
文件位置: D:\WWW\Modules\Plug\Common\cropzoom.php
    = 0) {
                            // Get the original image's transparent color's RGB values
                            $trnprt_color    = imagecolorsforindex($imgSrc, $trnprt_indx);
                            // Allocate the same color in the new image resource
                            $trnprt_indx    = imagecolorallocate($imgDest, $trnprt_color['red'], $trnprt_color['green'], $trnprt_color['blue']);
                            // Completely fill the background of the new image with allocated color.
                            imagefill($imgDest, 0, 0, $trnprt_indx);
                            // Set the background color for new image to transparent
                            imagecolortransparent($imgDest, $trnprt_indx);
                    }
                    // Always make a transparent background color for PNGs that don't have one allocated already
                    elseif ($ext == "png") {
                            // Turn off transparency blending (temporarily)
                            imagealphablending($imgDest, true);
                            // Create a new transparent color for image
                            $color = imagecolorallocatealpha($imgDest, 0, 0, 0, 127);
                            // Completely fill the background of the new image with allocated color.
                            imagefill($imgDest, 0, 0, $color);
                            // Restore transparency blending
                            imagesavealpha($imgDest, true);
                    }
            }
    }
    ?>
对文件后缀名的处理包括主要通过 `$_POST["imageSource"]` 这个变量的值，包括两部分
1.获取 `$_POST["imageSource"]` 的值，使用 end 和 explode 获得路径的后缀，根据路径后缀使用对应的 php-GD
库函数进行处理
                    $ext = end(explode(".",$_POST["imageSource"]));
                    $function = returnCorrectFunction($ext);
                    $image = $function($_POST["imageSource"]);
2.同样是根据的 `$_POST["imageSource"]` 值进行判断进入不同的分支，然后组合成为 `$file_path
（file_put_contents` 的路径参数）
    if(filter_var($_POST["imageSource"], FILTER_VALIDATE_URL))
                    {
                            $urlinfo=parse_url($_POST["imageSource"]);
                            $path=$urlinfo['path'];
                            $pathinfo=pathinfo($path);
                    }
                    else
                    {
                            $path=$_POST["imageSource"];
                            $pathinfo=pathinfo($_POST["imageSource"]);
                    }
                    $file_name=$pathinfo['filename'].'_crop.'.$pathinfo['extension'];//剪切后的图片名称
                    $file_path='.'.$pathinfo['dirname'].'/'.$file_name;
                    file_put_contents($file_path, $img);
绕过办法，令 `$_POST["imageSource"]` 为``
1.使用end函数 所以加入使用 ?1.jpg 作为请求的参数进行绕过，不然会因为找不到函数报错终止，因为程序会调用
returnCorrectFunction() 函数根据后缀（此处为JPG）进行调用其他php-GD函数
2.因为使用的 pathinfo() 处理 `$_POST["imageSource"]`，所以 前半部分为
payload_faith4444_crop.php
至此，成功绕过文件后缀名检测