User: 请写一个简单的Python脚本，用于监控远程服务器的磁盘空间，并通过邮件发送报警信息，当磁盘空间低于某个临界值时。
Assistant: ```
# -*- coding: utf-8 -*-
import os
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.application import MIMEApplication
 
server = "smtp.xxx.com" # 邮件服务器
port = 25 # 邮件服务端口
user = "user@xxx.com" # 发件人邮箱
passwd = "your_password" # 发件人邮箱密码
to_list = ["receiver1@xxx.com", "receiver2@xxx.com"] # 收件人邮箱
threshold = 80 # 磁盘空间使用率临界值，大于此值发警告
 
def check_disk():
    cmd = 'df -hl' # 获取磁盘空间信息的命令
    res = os.popen(cmd).readlines() # 执行命令并获取输出信息
    for line in res[1:]:
        line = line.split()
        disk_used = int(line[4].strip('%'))
        if disk_used > threshold:
            return line[0], line[4]
    return None
 
def send_mail(file_path):
    msg = MIMEMultipart()
    att = MIMEApplication(open(file_path, 'rb').read())
    att.add_header('Content-Disposition', 'attachment', filename=file_path.split('/')[-1])
    msg.attach(att)
 
    msg['From'] = user
    msg['Subject'] = "磁盘空间不足报警"
    msg['To'] = ";".join(to_list)
     
    content = "磁盘空间不足，请及时处理！"
    part_text = MIMEText(content)
    msg.attach(part_text)
     
    try:
        smtp = smtplib.SMTP(server, port)
        smtp.login(user, passwd)
        smtp.sendmail(user, to_list, msg.as_string())
        smtp.quit()
    except Exception as e:
        print(e)
 
if __name__ == '__main__':
    disk_info = check_disk()
    if disk_info:
        file_path = '/tmp/%s.txt' % disk_info[0].split('/')[-1]
        with open(file_path, 'w') as f:
            f.write('磁盘：%s\n空间使用率：%s' % disk_info)
        send_mail(file_path)
```