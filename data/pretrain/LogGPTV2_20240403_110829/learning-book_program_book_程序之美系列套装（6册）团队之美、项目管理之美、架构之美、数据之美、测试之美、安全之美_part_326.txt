---
## Page 1866
小时100个电话。测试表明，在速度显著变慢之前，应用程序可以处
理高达每小时近1000次电话。
我们决定去除应用程序中所有的图形和其他可省略的部分，使其速
度尽可能最快，然后由我自己或某个并发人员监视验收测试，这样
我们就可以亲眼见到到底是什么变慢了。让我们更困惑的是应用程
用户在等待应用程序，反馈意见却仍然是该应用程序速度很慢。可
以预见的是，我们还得到反馈说该应用程序很难看。
最后，我意识到，我们所有的反馈都来自Susan的口述或她的总结报
告，我问她我是否能看看实际的反馈表。虽然协议是只有验收测试
组长能看实际的表格，我被允许与Susan一起对其进行审查。我们在
看第三份或第四份表格时，我有了一些想法。那张表格上的评论是
“用此方法处理调用所需的时间太长”。我问我是否能和发表了那篇
评论的用户谈谈，Susan为我们安排了会议时间。
第二天下午，我在验收测试实验室见到了Juanita。我让她为我做一
次模拟。我边看边计时。她模拟了大概2.5分钟，不过我马上就意识
到她既不习惯用户界面的流程，也不习惯使用鼠标。我问她是否可
以在现有的系统上为我做一次同样的模拟，她说可以。花了约5分钟
时间将加载现有的系统，并准备完毕，她只要登录就可以使用。系
统一准备好，她就转身对我说，“准备好了吗？”
Juanmita猛地打了一会儿字，然后转过身看着我。儿秒钟后，我说，
“你已经完成了？”她得意地笑着点了点买，我检查了一下时间：47
秒。我感谢她，并告诉她我已经得到我所需要的。
我打电话回办公室，请我的同事们30分钟后在会议室和我碰头。我
到达时所有人都已经聚集在那里了。我花了不到10分钟来解释，当
用户验收测试人员说“慢"的时候，他们并不是指响应时间；他们指
的是应用程序的设计影响了他们的工作效率。
那时候，我在这个项目的工作基本上结束了，所以我不知道重建后
的用户界面的最终模样，但是Sam告诉我，他们此后与Susan和她的
用户验收测试人员有了更多的互动，他们在应用程序发布后十分兴
奋。
对于性能测试人员来说，没有几件事能比呼叫中心代表对你测试的
应用程序十分满意更美妙了。
1865
---
## Page 1867
总结
在这一章中，我与你分享了我作为一个性能测试人员在成长过程中
遇到的几个事例。事实上，这些都是发生在我工作过的真实项目中
的真实故事。事实上，它们是在大约14个月的时间内连续发生的，
这使得它们更有力。
几年前，我学到了一项名为关键事件分析（criticalincident analysis）
的技术，可以用来确定可用于复杂的任务的共同原则，比如性能测
试就是一种复杂的任务。我是在第三次启发式和探索式教学技术研
讨会（Workshop on Heuristic and Exploratory Teaching,WHET）上从
CemKaner和RebeccaFiedler那里学到这些的。我们试图找出这种方
法在确定人们用于测试软件的核心技术或概念时效果如何，这将对
建立相关培训很有价值。
根据维基百科：
关键事件，是指对某项活动或现象产生了重大贡献的事件，而不管
其是正面的还是负面的。关键事件可以按多种方式收集，但一般受
访者会被要求讲述他们曾经历的某件事的故事。
这些故事是我有关性能测试中协作的重要性的关键事件。在这些故
事中，通过协作，各种各样的性能测试挑战被解决、攻克了：与其
作，与I人员协作，以及与最终用户协作。我所有的性能测试经验
都印证了这些故事所暗示的结论一—协作是性能测试之美的基石。
第二部分过程之美
我相信规则。这毋庸置疑。没有规则，你怎能破坏它？
—Leo Durocher
第5章用模糊测试让办公软件更可靠
KamranKhan
1866
---
## Page 1868
显而易见，大多数读者用过办公软件，也在生活中见过美丽的东
西，甚至两者在同一时间发生。然而，要把两者相提并论甚至混在
一起思考却需要丰富的想象力。我们之所以喜欢美丽的东西有如下
几个原因：引人注目并新奇得令人愉快；吸引我们当前的注意力并
让我们铭记于心。不过，若在办公程序中发现这些特点则会起到相
反的效果。对神秘而复杂的功能，或引人注意的错误信息，我们并
不惊喜。事实上，在理想的世界里，我们的办公软件永远不会打扰
我们，它们应该像普通的桌椅一样平凡。那么，为什么呈现在我们
的办公软件中同样的美的品质就变得丑陋了呢？答案在于我们对这
些程序的运行的期望。
用户的期望
“办公”一词有多种含义，但主要含义是和工作有关。英语"ofce"实
际上来源于拉丁语"oficium"一词，意为执行一项工作或任务。虽然
语源在这里是次要的，但这确实提醒我们办公软件的主要目的：帮
助我们高效地、不添任何麻烦地完成任务。正是记住了这个目标，
微软重新设计了熟悉的O董ce界面，在2007版中用新的条状功能区代
替原来的工具栏和任务面板。Ofice用户体验组的程序经理Jensen
Harris写道，功能区的设计着眼于“可预测性、一致性和人性化，而
不是精巧和自动优化。"最重要的是，它特别强调“帮助人们无干扰
地工作。"1]
把一次彻底的改革描述成“可预测的"这似乎是矛盾的，但微软Ofice
界面当时如此复杂，已偏离帮助用户直观地完成工作这个更大目
标。通过O币ce团队的用户体验改进计划所收集的数据，微软得以分
析几千个用户如何和程序交互一—从他们自定义哪些工具面板到他
们使用某些菜单项目的频率。2在总结这些数据时，Harris写道，
在0fice2003“所有命令的使用中，32%"由五种命令组成。按使用率
为序，它们是：
1.粘贴
2.保存
3.复制
4.撤销
1867
---
## Page 1869
5.加粗3]
考虑到微软O币ce套件有数百个功能，得知所有用户的操作几乎有三
分之一被这么小和简单的集合覆盖，确实令人惊讶。或许更重要的
是，这个统计强调了保证办公应用程序最基本功能可靠性的重要。
它也说明，许多用户用屈指可数的功能就可完成数量可观的任务。
当Oce2007以新的条状功能区为核心的界面公布时，在线办公应
用程序的人气正在上开。这些程序使用的增多表明了网上应用程序
更厂泛化的趋势。但这也表明，许多用户愿意牺牲高级功能来换取
简单易用。把这个概念再进一步，有几种功能很少但没有任何“干
扰"的文字处理器吸引了不少用户。山虽然传统的办公套件仍然流
行，但这些替代者提醒我们，为用户提供最少烦恼和可靠功能是何
等董要。用户用这样的功能可以写出范围很广的文档一一从普通的
到漂亮的，而无需很在意他们所选的工具。
这就把我们带回到我在第一段提出的问题：为何办公软件中漂亮的
东西会带来相反的效果呢？简言之，美和透明之间的统一是不容易
的。办公软件中传统意义上美丽的特征肯定会夺人眼球，因而干扰
完成工作的根本目的。相反，并发者和测试者应改变他们对美丽的
定义，转而注重于制造出隐藏复杂性只显示简单易用功能的产品。
因此，测试办公软件美丽的方案之一，似乎也应该是具有这些特征
的方法。模糊测试是一种功能强大且复杂的测试技术。它的本质是
简单的，却又允许有创造性。
[1] http://blogs.msdn.com/jensenh/archive/2005/09/15/467956.aspx.
[2] http:/blogs.msdn.com/jensenh/archive/2005/10/31/487247.aspx.
[3] http://blogs.msdn.com/jensenh/archive/2006/04/07/570798.aspx.
[4]WriteRoom和DarkRoom是两个这样的例子。
什么是模糊测试
那么，什么是模翻测试？模糊测试是通过对输入数据进行随机修改
和破坏来测试程序的方法。虽然这一技术已存在（至少）20年，但
由于安全测试的日益重视和模糊测试专用工具的增多，它在近十年
变得更加盛行。一个程序的模糊化可以是手工或自动的，但伴以自
动化和测试日志，这一技术就会最有效。
为什么要模糊测试
1868
---
## Page 1870
如它的定义所暗示的，它的方法很简单。但它为测试人员和编程人
员在开发办公软件时面临的棘手问题提供多种优美的解决方案。
增强互操作性
办公软件面临的最可怕的问题之一是与其他软件（特别是类似的办
公软件）之间的互操作性。微软Ofice最常用的三个命令是粘贴、保
存和复制。这实际上就表明了使用来自别的软件和文档的数据的重
要性。这些基本功能虽然简单，但支持了用户希望软件能完美处理
的一系列操作。模糊测试的长处之一就是用自动的方式帮助模拟很
多这样的场景，把对互操作性允许的无数可能情况的处理变得很简
单。
成千上万个办公文档会有几十种现代的或过时的格式。人们期望你
的软件支持其中的很多种。在有些情况下，你或许能找到使用特定
格式的文档，但这些文档可能不准确或有丢失处。你也或许可以为
了测试而设法保存所有各种软件。但当你试图管理几百种可与你的
软件交互的程序所需的所有硬件、操作系统和许可证时，这种办法
会迅速变得十分笨拙。模糊测试为这一滩题提供一种优雅且简单的
方案。它的最佳处是不需要在跟踪所有那些软件上花工夫。只用一
种技术，你就可以有效地不费力气地模拟几十种其他复杂软件，而
且可以接触模糊测试的美丽潜力。
开发人员不再需要设法完成那个无法完成的任务。他们可用一个模
的差别。这种基于模糊的方法非常便利，它允许你在处理无数种的
文档、文件格式和办公软件组合时发挥创造性。从这个意义上来
说，模糊测试相似于美丽的办公软件。那些软件用可靠强大的功能
生成无数个终端产品，让用户有高效率和创造性。同样，模糊测试
保证让用户能打开隐藏格式的文档，就像打开当前新格式那样容
易。虽然总有不支持的格式和文件，但通过支持更广范围的输入，
你可使你的软件对更多的人更有用，尽管有的输入是技术上无效或
违反正式规范。就像含有微妙差别的办公软件一样，损坏也会改变
文件并使支持最大范围文件的努力复杂化。
正常文件在无意中被轻微损坏的途径之多令人惊讶：存有你过去作
品的盘会在你闷热的抽展内慢慢变质；你同事通过电子邮件送给你
的电子表格可能会被网络的中断所损环；你用来保存你的学校论文
的U盘可能在你关闭文字处理器前已被拔出了插口。就像可以模拟各
1869
---
## Page 1871
种办公软件一样，模糊测试可以帮你模拟那些破坏的条件而不需要
真正重复它们。把模糊器用于这些互操作和损坏的情况是一种特别
有用和美丽的技术，因为它让你用一种简单的方法代替各类软件和
工具。通过这样充分的测试，你的程序就能让用户使用范围很厂的
文档，根本无需考虑文件格式的复杂本质和互操作性。
改进用户满意度
通过让你的软件更好地接受无效的和不同类的输入，你可避免大量
的用户投诉和缺陷报告。这些报告是反馈的重要渠道，特别对开发
代码的项目来说。但它们的质量各异，通常需要进一步的信息和分
类才会有用。例如，许多用户报告的问题是针对特定的文件，但用
户在提交缺陷报告时没有附上文件。这在很大程度上是不直观的缺
陷追踪软件的过失，但也可能是遗忘或不熟悉质量保障步骤造成
的。
不管是何原因，这些不完整的报告需要开发人员或测试人员加上评
论，要求用户提供具体文件。有时这些要求得不到回答，导致问题
因缺少信息而最终无结果地结案。有时用户也会由于隐私或保密的