demodulation algorithm, so we count the required comparisons to
calculate complexity. Dictionary sizes have a bearing on this count,
as a larger dictionary results in more candidate words found for a
05010000.20.40.60.81Word recovery ratioNumber of typed wordsetaorisnhdlcmpfuwbykgvjqxz00.10.2(b) Letter frequency distribution in the typed contentetaoinshrdlcumwfgypbvkjxqz00.10.2(a) Letter frequency distribution in Englishetaorisnhdlcmpfuwbykgvjqxz-505(c) Difference² (1) Recover with frequency analysis ² (2) Recovery with the proposed attack police indicated they knew the identity of the assailant who fatally stabbed unarmed police officer Typed content: police indicated they knew the identity of the assailant who fatally stabbed unarmed police officer  molnce nhdncated trep bheg tre ndehtntp ow tre assanlaht gro watallp stayyed fhaiued molnce owwncei Success rate of classification0.40.50.60.70.80.91Word recovery ratio00.20.40.60.811500-word dictionary1000-word dictionary500-word dictionary020406000.20.40.60.81NumberLoftypedwordsEmpirical CDF  P(LWRR>0.80.9, and &) while
typing. Specifically, if the user inserts uncommon characters before
the first word, the matrix of the first observed CSI word group will
either match an incorrect word or not match with any word in the
dictionary, so the demodulation algorithm will return incorrect or
no candidates. In the former case, the attacker can still correctly
demodulate the following word if it shares no letters with the
previous. If no candidates are returned, the attacker will discard the
first observed CSI word group and start the demodulation algorithm
at the second observed CSI word group. Clearly in both cases,
to confuse subsequent words, the user must continue inserting
uncommon characters in each word.
To further mislead the attacker, the user can also construct se-
quences of uncommon characters with the same inter-element
relationship matrices as various words in the dictionary. The user
can type several of these “fake words” before inputting the mean-
ingful content, and continue typing fake words periodically. The
fake words can not only feed the attacker with wrong mappings
but also mislead the attacker with incorrect eavesdropping results.
To prevent the fake words from interfering with the meaningful
content, the user may employ a computer program that automati-
cally searches for and removes the uncommon characters or fake
words from the input text.
Beyond disrupting the inter-element relationship matrix, we
can also prevent the attacker from receiving useful CSI. Users can
employ a wireless jamming device that constantly transmits noise
signals to the wireless channel to interfere with the attacker’s trans-
missions. Thus the attacker will not be able to collect accurate CSI,
which is required for all wireless-based keyboard eavesdropping
attacks, including the proposed one. However, the user will have to
set up an external wireless device and turn it on whenever needing
to type. This method has more hardware demands than the previous,
but it does not require inserting many additional characters.
6 RELATED WORK
Existing non-invasive attacks to infer keystrokes fall into the fol-
lowing categories:
Vibration based attacks: Typing on a keyboard can cause vibra-
tions on the surface where the keyboard rests, with subtle differ-
ences depending on keys typed [21, 26]. The accelerometer of a
Key length6789101112Ratio of letters00.20.40.60.80	
  0.2	
  0.4	
  0.6	
  0.8	
  1	
  5.4	
  10.8	
  16.2	
  21.6	
  27	
  …	
  54.8	
  Empirical	
  PMF	
  Password	
  entropy	
  Before	
  aAack	
  ADer	
  aAack	
  Session 9B: Mobile 2 CCS’18, October 15-19, 2018, Toronto, ON, Canada1757nearby phone or tablet on the same surface can capture the vi-
brations. With training, an attacker can establish the relationship
between the keystroke and the acceleration disturbance caused by
the vibration. In the detection phase, the attacker can then recover
the typed content by applying this relationship.
Cai et al. discovered typing different keys on a soft keyboard on
a smartphone may also cause different vibrations [10]. Hence, an
invasive key inference attack can be constructed if the attacker can
install a key logging malware on the target phone. Recent research
has further discovered keystrokes can be inferred by exploiting
the accelerometer of a compromised smart smartwatch that a vic-
tim wears on the wrist [20, 35]. Under the assumption that the
attacker and the user may cause similar impact on accelerometer
measurement, the wrist movement trajectory may be used to recon-
struct the finger movement trajectory to determine what keys are
pressed. [20] novelly combines both accelerometer data and acous-
tic emanations acquired with a smartwatch to attack keyboards.
These methods using smartwatches [20, 35], however, require some
kind of malware to be installed on the wrist-worn device to read
the sensor data and report them to the adversary.
Acoustic signal based attacks: It has been observed typing on
a keyboard can produce sounds unique to each key. Researchers
extract features from these sounds and then train a classifier to re-
construct the keystrokes [7, 12, 37, 42]. Some work also exists which
relaxes the requirement for training. For example, [42] uses an statis-
tical unsupervised training method to design a supervised classifier.
However, the proposed method is faster than the method in [42]
for establishing the mapping between features and keystrokes. The
fundamental reason for this advantage is that the proposed method
is based on word structures whereas the method in [42] is based on
statistics. Specifically, the method in [42] uses the Hidden Markov
Model (HMM) for key recognition. HMM requires creating a statis-
tical Markov state transition matrix. Creating an accurate transition
matrix requires a large number of samples (features). For exam-
ple, [42] mentions that the attacker needs to collect 50 features for
good performance. This means that the state transition matrix is 50-
by-50, with each of these 2500 elements representing a state-to-state
transition probability. Such a transition matrix can be estimated
with reasonable accuracy only after the number of letters a user
types is 2500 or larger. Therefore, as discussed in [42], the HMM