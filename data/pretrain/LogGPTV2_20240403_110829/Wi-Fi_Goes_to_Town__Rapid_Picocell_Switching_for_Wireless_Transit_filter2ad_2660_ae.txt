as the metric to measure the video’s quality of experience (QoE).
Video rebuffer measures number of times and the duration of in-
terruptions due to re-buffering. The video rebuffer ratio is defined
as the fraction of rebuffers over the time duration that the client
transits through eight APs. To minimize the impact of Internet
latency on video rebuffers, we cache the video in the local server.
In this experiment, a volunteer is asked to watch a HD video (1280
× 720 resolution) through our testbed. We then vary the driving
speed of the client and test the rebuffer ratio of this video using the
VLC media player [48] and play online streamming via FTP. We set
the pre-buffer length to be 1,500 ms. The result is shown in Table 4.
As shown, WGTT achieves a smoothed video playback with zero
rebuffer ratio in both low (5 mph) and high (20 mph) driving speed.
In contrast, the video rebuffer ratio reaches to 0.69 at 5 mph driving
speed and drops gradually to 0.54 at 20 mph driving speed when the
client transits through APs through Enhanced 802.11r fast roaming
protocol. The decreasing trend of the rebuffer ratio here is due to
the significant decreasing of the transition time at high moving
speed.
F
D
C
1
0.8
0.6
0.4
0.2
0
0
20
Skype − 5mph
Skype − 15mph
Google Hangouts − 5mph
Google Hangouts − 15mph
60
80
100
40
Frame per second (fps)
Figure 24: CDF of the frame rate of video conferencing in
different moving speed settings.
the webpage on the local server, allowing the client to load the
webpage directly. At each driving speed, we repeat the experiment
10 times and average the result (Table 5). As shown, we achieve a
constantly stable webpage loading time at different driving speeds
when employing WGTT as the default roaming protocol. In contrast,
the webpage loading time increases to around 18 s at 10 mph as
when we change the roaming protocol to Enhanced 802.11r. As
we increase the driving speed further, the client never successfully
loads the whole page during its short driving time across eight APs.
Table 4: Video rebuffering ratio at different moving speed.
Table 5: Web page loading time at different driving speeds.
Client speed (mph)
WGTT
Enhanced 802.11r
5
0
0.69
10
0
0.64
15
0
0.61
20
0
0.54
Client speed (mph)
WGTT
Enhanced 802.11r
5
4.44
15.49
10
4.64
18.21
15
4.34
∞
20
4.47
∞
Remote video conferencing. In this case study, we test WGTT’s
ability to provide reliable video streaming to mobile clients. Unlike
the previous case study, remote video conferencing requires the
mobile client to simultaneously upload and download real-time
video streams, hence have an even higher link quality requirement.
In this experiment, we run a two-user video conference, with one
user on the moving vehicle and the other in a conference room.
Both applications periodically present their fps on the application’s
user interface. We use scrot, a screenshots software to record the
fps every 1 s. We then measure the frames per second (fps) of
the downlink video on each client side and show the CDF of the
averaged value in Figure 24. As shown, we achieve an 85% percentile
of 20 fps using Skype [42] on both 5 mph and 15 mph driving speeds.
The fps increases to 56 when we turn to Google Hangouts [19]. This
is because Google Hangouts automatically reduces image resolution
of each frame.
Web browsing. In this case study, we test WGTT’s ability to load
web pages quickly for a mobile client. We invite one volunteer to
browse the eBay homepage (2.1 MB) during its fast transition among
eight APs. We then vary the client moving speed, and measure the
duration of time that the system launches the web browser until
the webpage is fully loaded in the web browser. To minimize the
impact of Internet latency on our measurement result, we store
6 RELATED WORK
Pack et al. [37] survey much of the older related work in the area;
in this section we focus on newer work. While Wi-Fi handover is a
well-trodden area in name, prior work largely focuses on walking
and stationary scenarios, or sporadic, delay-tolerant patterns of
opportunistic network connectivity while driving. We thus argue
that while still nominally “handover,” the objective of Wi-Fi Goes
to Town qualitatively differs from the objectives of the following
prior work.
6.1 Wi-Fi-based systems
Streamlining AP discovery. Taking handoff itself as a given,
these techniques reduce its latency. Multiscan [3] leverages multi-
ple radios to make a connection to a new AP before breaking the
current one. Syncscan [39] and DeuceScan [7] time-synchronize
APs to accelerate the standard 802.11 handoff process, and Neighbor
Graphs [41] allow APs to provide channel information about their
neighbors, as was later standardized in 802.11k.
Multiple AP association at the link layer. This group of ap-
proaches connects clients to multiple APs simultaneously, switch-
ing packets at the link and/or network layers. FatVAP [24] balances
traffic between multiple APs at time granularities of two seconds,
332
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
Zhenyu Song, Longfei Shangguan, and Kyle Jamieson
and so is designed for clients with good continuous connectivity
to multiple APs at a time. DenseAP [30] targets the same scenario,
updating load metrics every 20 seconds and client locations every
30 seconds. Multiscan [3] equips each client with two radios, allow-
ing it to “pre-associate” with one AP while actively communicating
with another, thus eliminating handoff overhead. The later 802.11k
and 802.11r standards reduce handoff latency, but without the need
for multiple radios. VirtualWiFi (also known as MultiNet) [6] and
Juggler [34] allow clients to associate with more than one AP at a
time, but do not balance transport-layer flows across APs.
SWIMMING [27] is a simulator-based proposal that uses energy
detection to classify any burst of energy of similar length to an
acknowledgement as such. Thus while it may correctly classify
multiple simultaneous ack packets from more than one AP as an
ack, as noted by the authors, energy detection is prone to false
positives resulting in data loss and degrading end-to-end perfor-
mance (based on Matlab simulations). In comparison, Wi-Fi Goes to
Town contributes novel fine-grained AP switching algorithms that
SWIMMING does not anticipate, specifically to handle the vehicu-
lar picocell regime. We experimentally evaluate the prevalence of
downlink ack collisions (§5), showing that the issue has minimum
effect on end-to-end throughput performance. We also claim the
first practical implementation and evaluation in a testbed of an
entire seamless roadside hotspot system.
ViFi [2] is a system targeted at cars, allowing nearby APs to
“salvage” uplink packets from vehicular clients APs, and develops
a probabilistic algorithm for de-duplicating packets on the uplink.
However, ViFi APs have large cell sizes resulting from use of low-
rate 1 Mbit/s bit-rate transmissions from rooftop-mounted omnidi-
rectional antennas, maximizing range, but sacrificing spatial reuse.
MRD [28] leverages diversity reception and the combination of
different parts of the same frame received by multiple APs in the
uplink in order to recover packets. Divert [29] finds that frame loss
history, combined with a hysteresis mechanism to limit the speed
of AP switching yields performance gains for walking-speed clients.
While these techniques share some of our proposed mechanism,
they don’t push the envelope in terms of cell size, nor do they lever-
age fine-grained location at fine timescales to preemptively place
packets at the right access point before the client arrives at that
location, the keys to our proposed method of making the network
more reliable for users on the go.
Approaches at the transport layer. Classic approaches to mobil-
ity at the transport layer include rapidly rebinding TCP endpoints
in response to connectivity changes at the network layer or be-
low, as TCP Migrate [43] proposes, or rerouting packets at the
network layer, as Mobile IP [38] proposes. But these methods are
intended for mobility on the temporal scale of minutes to hours and
longer, in contrast to the much finer timescales of our work. Recent
Multipath extensions to TCP enable its operation over multiple
Internet paths (MP-TCP [15]). Croitoru et al. [11] exploit MP-TCP,
lettering the client associate to multiple nearby APs and send one
subflow over each connection. But again, their approach is tuned
for walking-speed mobility and hence slow to react to link quality
changes: indeed, the authors observe in their experiments a latency
of 1–2 seconds for traffic to shift to a better AP once links change.
Industrial efforts. In addition to, and/or sometimes extending the
802.11 standards for fast handover 802.11r and 802.11k (described
in detail above, §2), multiple Wi-Fi vendors have developed their
own solutions for fast handover of Wi-Fi clients, all of which target
walking speed-mobility, and many of which are not described in
full technical detail in the associated white papers we reference
here.
Like Wi-Fi Goes to Town, commercial offerings from Extricom,
Meru, and Ubiquiti also present multiple APs as one AP to the
client, with Extricom and Meru using a controller to make handoff
decisions, and Ubiquiti lets APs talk to each other to determine the
best one for packet delivering. However, these systems are either at
a high cost (e.g., the controller of Extricom costs over 6,800 usd [14])
or performing worse in fast moving scenario (as we experimen-
tally demonstrated in §2). Linksys, Meraki and Cisco also offer fast
handover APs, but addressing on the fast client authentication.
6.2 Opportunistic, disconnected systems
A large body of work has focused on predicting rough mobility and
connectivity patterns, but operates at much more coarse temporal
(e.g. 10 seconds) and spatial (100 m × 100 m) scales [8, 32, 33] than
Wi-Fi Goes to Town. A 2006 study of vehicular Wi-Fi hotspot access
[4] shows that Wi-Fi hotspots are often usable from the road at
speeds of up to 60 kph, but performance significantly degrades at
speeds above 30 kph. Gass et al. [16] measure the antenna coverage
and packet loss rates at various vehicle speeds without considering
AP switching. Ott et al. [36] measure transmission characteristics of
TCP/UDP packets in a moving vehicle that passes by one or more
APs. However, they do not consider the packet buffering problem
during AP handover. The Cartel system [20] and the QuickWiFi
protocol [13] develop an optimal scanning strategy based on an
a priori distribution of AP channel assignments, and streamline
the 802.11 association process, but do not coordinate traffic flows
between and among roadside APs. Spider [44] uses models of a
vehicular client’s join probability, simultaneously associating with
multiple APs on different channels and exposing a virtual interface
for each AP, like VirtualWiFi. Mobisteer [31] uses large transmit
beam-forming antennas on clients to steer transmissions towards
roadside APs.
7 DISCUSSION
System cost. The WGTT prototype costs around $120 USD per
AP. This cost can be further cut down to $15 USD by building a
dedicated WGTT AP. e.g., using a $5 USD ESP8266 system-on-chip
Wi-Fi chipset, a $5 USD Raspberry Pi Zero [40], and a less than
$5 USD “Pringle Can” antenna [5].
Picocells vs. macrocells. Picocells increase network capacity by
re-using the same frequencies between adjacent APs. In contrast,
due to inter-cell interference, macrocells achieve lower throughput
and spectral efficiency. This in turn reduces the data rate of a user
which is detrimental to the network as a whole.
Multi-channel settings. The current WGTT prototype works on
a single channel. Letting adjacent APs work on different wireless
channels would avoid serious wireless interference and improve the
absolute throughput of the system. However, spectrum efficiency
would then drop significantly. Moreover, the nearby APs working
333
Wi-Fi Goes to Town: Rapid Picocell Switching for Wireless Transit Networks
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
on different channels would be unable to forward overheard packets,
resulting in a higher uplink packet loss rate and thus hurt the
throughput.
Large area deployment. The current WGTT prototype consists
of eight APs. In the future, we plan a large deployment and a large-
scale measurement study, e.g., measuring the achievable network
capacity. Network providers are also well-motivated to deploy WG-
TT because they would gain advertising opportunities, and a transit
system would gain revenue, either directly through customer billing
or indirectly through deals.
8 CONCLUSION
We have presented Wi-Fi Goes to Town, the first Wi-Fi based road-
side hotspot network designed to operate in a new performance
regime for wireless networks, the vehicular picocell regime. Our
design uses a nearby controller commanding tight control of the
AP array. Our controller and APs cooperate to implement an AP
selection, downlink queue management algorithm, and uplink ac-
knowledgement sharing protocol that work hand-in-hand to lever-
age wireless path diversity to precisely switch downlink traffic, and
make uplink acknowledgements more reliable. Wi-Fi Goes to Town
is the first step in a line of work that will scale out the wireless
capacity of roadside hotspot networks using small cells. Many inter-
esting problems in this performance regime remain open: the choice
of antenna and Wi-Fi chipset technology; the application of MIMO
techniques ranging all the way from basic link-level MIMO to Dis-
tributed multi-user MIMO beamforming; and further mitigation of
inter-AP interference.
ACKNOWLEDGEMENTS
We thank our shepherd Prof. Bhaskaran Raman and the anonymous
reviewers for their constructive feedback. This material is based
upon work supported by the National Science Foundation under
Grant No. 1617161 and by a Google Research Award.
REFERENCES
[1] 802.11r, 802.11k, and 802.11w Deployment Guide, Cisco IOS-XE Release 3.3.
Website.
[2] A. Balasubramanian, R. Mahajan, A. Venkataramani, B. N. Levine, J. Zahorjan.
Interactive Wi-Fi connectivity for moving vehicles. SIGCOMM, 2008.
[3] V. Brik, A. Mishra, S. Banerjee. Eliminating handoff latencies in 802.11 WLANs
using multiple radios: Applications, experience, and evaluation. IMC, 2005.
[4] V. Bychkovsky, B. Hull, A. Miu, H. Balakrishnan, S. Madden. A measurement
study of vehicular internet access using in situ wireless networks. MobiCom,
2006.
[5] Building a Can antenna. Website.
[6] R. Chandra, P. Bahl, P. Bahl. MultiNet: Connecting to multiple IEEE 802.11
networks using a single wireless card. Infocom, 2004.
[7] Y.-S. Chen, M.-C. Chuang, C.-K. Chen. DeuceScan: Deuce-based fast handoff
scheme in IEEE 802.11 wireless networks. IEEE Transactions on Vehicular
Technology, 2008.
[8] Y.-C. Cheng, Y. Chawathe, A. LaMarca, J. Krumm. Accuracy characterization for
metropolitan-scale Wi-Fi localization. MobiSys, 2005.
[9] The Click modular router project. Website.
[10] Cooper’s Law. Website.
[11] A. Croitoru, D. Niculescu, C. Raiciu. Towards Wi-Fi mobility without fast
handover. NSDI, 2015.
[12] Linksys EA7500 MAX-STREAM AC1900 Wi-Fi router. Website.
[13] J. Eriksson, H. Balakrishnan, S. Madden. Cabernet: Vehicular content delivery
using WiFi. MobiCom, 2008.
[14] Extrecom multiSeries 1000 wireless LAN switch. Website.
[15] A. Ford, C. Raiciu, M. Handley, O. Bonaventure. TCP extensions for multipath
operation with multiple addresses. Tech. rep., RFC-6824, 2013.
[16] R. Gass, J. Scott, C. Diot. Measurements of in-motion 802.11 networking.
WMCSA, 2005.
[17] D. Halperin, W. Hu, A. Sheth, D. Wetherall. Predictable 802.11 packet delivery
from wireless channel measurements. SIGCOMM, 2010.
[18] ——. Tool release: Gathering 802.11n traces with channel state information.
ACM SIGCOMM CCR, 2011.
[19] Google Hangouts. Website.
[20] B. Hull, V. Bychkovsky, Y. Zhang, K. Chen, M. Goraczko, A. Miu, E. Shih,
H. Balakrishnan, S. Madden. CarTel: A distributed mobile sensor computing
system. SenSys, 2006.
[21] IEEE 802.11k-2008—Amendment 1: Radio Resource Measurement of Wireless
LANs, 2008.
[22] IEEE 802.11r-2008—Amendment 2: Fast Basic Service Set (BSS) Transition, 2008.
[23] Iperf3. Website.
[24] S. Kandula, K. Lin, T. Badirkhanli, D. Katabi. FatVAP: Aggregating AP backhaul
capacity to maximize throughput. NSDI, 2008.
[25] E. Kohler, R. Morris, B. Chen, J. Jannotti, M. F. Kaashoek. The Click modular
router. ACM Transactions on Computer Systems, 2000.
[26] Laird GD24BP 2.4G directional antenna. Website.
[27] P. Lv, X. Wang, X. Xue, M. Xu. SWIMMING: Seamless and efficient WiFi-based
internet access from moving vehicles. IEEE Transactions on Mobile Computing,
2015.
[28] A. Miu, H. Balakrishnan, C. E. Koksal. Improving loss resilience with multi-radio
diversity in wireless networks. MobiCom, 2005.
[29] A. Miu, G. Tan, H. Balakrishnan, J. Apostolopoulos. Divert: Fine-grained path
selection for wireless LANs. MobiSys, 2004.
[30] R. Murty, J. Padhye, R. Chandra, A. Wolman, B. Zill. Designing high
performance enterprise Wi-Fi networks. NSDI, 2008.
[31] V. Navda, A. Subramanian, K. Dhanasekaran, A. Timm-Giel, S. Das. MobiSteer:
Using steerable beam directional antenna for vehicular network access. MobiSys,
2007.
[32] A. Nicholson, Y. Chawathe, M. Chen, B. Noble, D. Wetherall. Improved access
point selection. MobiSys, 2006.
[33] A. Nicholson, B. Noble. BreadCrumbs: Forecasting mobile connectivity.
MobiCom, 2008.
[34] A. Nicholson, S. Wolchok, B. Noble. Juggler: Virtual networks for fun and profit.
IEEE Transactions on Mobile Computing, 2010.
[35] Openwrt Chaos Calmer v15.05.1. Website.
[36] J. Ott, D. Kutscher. Drive-thru internet: Ieee 802.11 b for" automobile" users.
INFOCOM, 2004.
[37] S. Pack, J. Choi, T. Kwon, Y. Choi. Fast handoff support in IEEE 802.11 wireless
networks. IEEE Communication Surveys and Tutorials, 2007.
[38] C. Perkins. IP Mobility Support. RFC 2002, IETF, 1996.
[39] I. Ramani, S. Savage. SyncScan: Practical fast handoff for 802.11 infrastructure
networks. Infocom, 2005.
[40] Raspberry Pi . Website.
[41] M. Shin, A. Mishra, W. Arbaugh. Improving the latency of 802.11 hand-offs
using neighbor graphs. MobiSys, 2004.
[42] Skype. Website.
[43] A. Snoeren, H. Balakrishnan. An end-to-end approach to host mobility.
MobiCom, 2000.
[44] H. Soroush, P. Gilbert, N. Banerjee, B. Levine, M. Corner, L. Cox. Concurrent
Wi-Fi for mobile users: Analysis and measurements. CoNEXT, 2011.
[45] Lenovo Thinkpad T430 laptop. Website.
[46] Tp-link N750 gigabit router. Website.
[47] D. Tse, P. Viswanath. Fundamentals of Wireless Communication. Cambridge
University Press, 2005.
[48] VideoLAN. Website.
[49] Y. Xie, Z. Li, M. Li. Precise power delay profiling with commodity Wi-Fi. ACM
MobiCom, 2015.
334