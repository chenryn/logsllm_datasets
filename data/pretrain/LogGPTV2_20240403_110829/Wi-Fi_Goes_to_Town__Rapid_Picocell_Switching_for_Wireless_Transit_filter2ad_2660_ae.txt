### Video Quality of Experience (QoE) Metrics

**Rebuffering Metrics:**
- **Definition:** Rebuffering measures the number of interruptions and their duration due to re-buffering events.
- **Rebuffer Ratio:** This is defined as the fraction of time spent rebuffering over the total time the client transitions through eight Access Points (APs).

**Mitigating Internet Latency:**
- To minimize the impact of Internet latency on rebuffering, we cache the video content on a local server.

**Experiment Setup:**
- A volunteer was asked to watch a high-definition (HD) video (1280 × 720 resolution) using our testbed.
- We varied the driving speed of the client and tested the rebuffer ratio using VLC media player [48] and online streaming via FTP.
- The pre-buffer length was set to 1,500 ms.

**Results:**
- As shown in Table 4, WGTT achieved smooth video playback with a zero rebuffer ratio at both low (5 mph) and high (20 mph) driving speeds.
- In contrast, the rebuffer ratio for Enhanced 802.11r fast roaming protocol reached 0.69 at 5 mph and gradually decreased to 0.54 at 20 mph. The decreasing trend in rebuffer ratio is attributed to the significant reduction in transition time at higher moving speeds.

**Table 4: Video Rebuffering Ratio at Different Moving Speeds**

| Client Speed (mph) | WGTT | Enhanced 802.11r |
|--------------------|------|------------------|
| 5                  | 0    | 0.69             |
| 10                 | 0    | 0.64             |
| 15                 | 0    | 0.61             |
| 20                 | 0    | 0.54             |

### Webpage Loading Time

**Experiment Setup:**
- To test webpage loading times, we stored the webpage on the local server, allowing the client to load it directly.
- At each driving speed, the experiment was repeated 10 times, and the results were averaged (Table 5).

**Results:**
- Using WGTT, we achieved consistently stable webpage loading times across different driving speeds.
- With Enhanced 802.11r, the loading time increased to around 18 seconds at 10 mph. At higher speeds, the client failed to load the entire page during its short transit time across eight APs.

**Table 5: Webpage Loading Time at Different Driving Speeds**

| Client Speed (mph) | WGTT | Enhanced 802.11r |
|--------------------|------|------------------|
| 5                  | 4.44 | 15.49            |
| 10                 | 4.64 | 18.21            |
| 15                 | 4.34 | ∞                |
| 20                 | 4.47 | ∞                |

### Remote Video Conferencing

**Experiment Setup:**
- We tested WGTT's ability to provide reliable video streaming to mobile clients by conducting a two-user video conference, with one user in a moving vehicle and the other in a conference room.
- Both applications periodically displayed their frames per second (fps) on the user interface.
- We used scrot, a screenshot software, to record the fps every second and then measured the downlink video fps on each client side.

**Results:**
- As shown in Figure 24, we achieved an 85th percentile of 20 fps using Skype [42] at both 5 mph and 15 mph driving speeds.
- The fps increased to 56 when using Google Hangouts [19], which automatically reduces the image resolution of each frame.

**Figure 24: CDF of the Frame Rate of Video Conferencing at Different Moving Speeds**

### Web Browsing

**Experiment Setup:**
- We tested WGTT's ability to quickly load web pages for a mobile client by having a volunteer browse the eBay homepage (2.1 MB) while transitioning among eight APs.
- We varied the client's moving speed and measured the time from launching the web browser until the webpage was fully loaded.

**Results:**
- Storing the webpage on the local server minimized the impact of Internet latency.
- The results showed that WGTT provided stable webpage loading times across different driving speeds, while Enhanced 802.11r led to increased loading times and failures at higher speeds.

### Related Work

**Wi-Fi Handover Techniques:**
- **Streamlining AP Discovery:** Techniques like Multiscan [3], Syncscan [39], and DeuceScan [7] reduce handoff latency by leveraging multiple radios or time-synchronized APs.
- **Multiple AP Association:** Approaches such as FatVAP [24], DenseAP [30], and Juggler [34] allow clients to connect to multiple APs simultaneously, switching packets at the link and/or network layers.
- **SWIMMING [27]:** Uses energy detection to classify bursts of energy as acknowledgments but is prone to false positives, leading to data loss.
- **ViFi [2]:** Salvages uplink packets from vehicular clients and uses a probabilistic algorithm for de-duplication, but has large cell sizes and limited spatial reuse.
- **MRD [28] and Divert [29]:** Use diversity reception and hysteresis mechanisms to improve performance for walking-speed clients.

**Transport Layer Approaches:**
- **TCP Migrate [43] and Mobile IP [38]:** Propose rapid re-binding of TCP endpoints and packet rerouting, respectively, but are designed for longer mobility timescales.
- **MP-TCP [15]:** Enables operation over multiple Internet paths, but is tuned for walking-speed mobility and slow to react to link quality changes.

**Industrial Efforts:**
- Vendors like Extricom, Meru, and Ubiquiti present multiple APs as a single AP to the client, but these systems are either expensive or perform poorly in fast-moving scenarios.

### Discussion

**System Cost:**
- The WGTT prototype costs around $120 USD per AP, which can be reduced to $15 USD by building a dedicated WGTT AP using cost-effective components.

**Picocells vs. Macrocells:**
- Picocells increase network capacity by reusing frequencies between adjacent APs, whereas macrocells suffer from inter-cell interference, reducing throughput and spectral efficiency.

**Multi-Channel Settings:**
- The current WGTT prototype operates on a single channel. Allowing adjacent APs to work on different channels would avoid interference but could reduce spectrum efficiency and increase uplink packet loss.

**Large Area Deployment:**
- Future plans include a large-scale deployment and measurement study to assess achievable network capacity. Network providers are motivated to deploy WGTT for advertising opportunities and revenue generation.

### Conclusion

**Summary:**
- Wi-Fi Goes to Town (WGTT) is the first Wi-Fi-based roadside hotspot network designed for the vehicular picocell regime.
- Our design uses a nearby controller and AP array to implement an AP selection, downlink queue management algorithm, and uplink acknowledgment sharing protocol.
- WGTT leverages wireless path diversity to precisely switch downlink traffic and make uplink acknowledgments more reliable.
- Future work will focus on scaling out the wireless capacity of roadside hotspot networks using small cells, addressing antenna and Wi-Fi chipset technology, MIMO techniques, and inter-AP interference mitigation.

### Acknowledgements

- We thank Prof. Bhaskaran Raman and the anonymous reviewers for their constructive feedback.
- This research was supported by the National Science Foundation under Grant No. 1617161 and a Google Research Award.

### References

- [List of references as provided in the original text]

This optimized version aims to enhance clarity, coherence, and professionalism, making the text easier to read and understand.