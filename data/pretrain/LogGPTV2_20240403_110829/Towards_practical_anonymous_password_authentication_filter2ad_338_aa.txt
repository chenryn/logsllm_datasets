title:Towards practical anonymous password authentication
author:Yanjiang Yang and
Jianying Zhou and
Jun Wen Wong and
Feng Bao
Practical Anonymous Password Authentication and TLS
with Anonymous Client Authentication ∗
Zhenfeng Zhang
Trusted Computing and Information Assurance
Laboratory, SKLCS, Institute of Software,
Chinese Academy of Sciences
PI:EMAIL
Xuexian Hu
Institute of Software, Chinese Academy of
Sciences & State Key Lab of Mathematical
Engineering and Advanced Computing
PI:EMAIL
†
Kang Yang
Trusted Computing and Information Assurance
Laboratory, Institute of Software,
Chinese Academy of Sciences
PI:EMAIL
Yuchen Wang
Trusted Computing and Information Assurance
Laboratory, Institute of Software,
Chinese Academy of Sciences
PI:EMAIL
ABSTRACT
Anonymous authentication allows one to authenticate her-
self without revealing her identity, and becomes an impor-
tant technique for constructing privacy-preserving Internet
connections. Anonymous password authentication is high-
ly desirable as it enables a client to authenticate herself
by a human-memorable password while preserving her pri-
vacy.
In this paper, we introduce a novel approach for
designing anonymous password-authenticated key exchange
(APAKE) protocols using algebraic message authentication
codes (MACs), where an algebraic MAC wrapped by a pass-
word is used by a client for anonymous authentication, and
a server issues algebraic MACs to clients and acts as the
veriﬁer of login protocols. Our APAKE construction is se-
cure provided that the algebraic MAC is strongly existential-
ly unforgeable under random message and chosen veriﬁca-
tion queries attack (suf-rmva), weak pseudorandom and tag-
randomization simulatable, and has simulation-sound ex-
tractable non-interactive zero-knowledge proofs (SE-NIZKs).
To design practical APAKE protocols, we instantiate an
algebraic MAC based on the q-SDH assumption which sat-
isﬁes all the required properties, and construct credential
presentation algorithms for the MAC which have optimal ef-
ﬁciency for a randomize-then-prove paradigm. Based on the
algebraic MAC, we instantiate a highly practical APAKE
protocol and denote it by APAKE, which is much more eﬃcien-
∗The work is supported by National Basic Research Program
of China (No.2013CB338003) and National Natural Science
Foundation of China (No.U1536205, 61572485, 61502527).
†Corresponding author
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’16, October 24-28, 2016, Vienna, Austria
c(cid:13) 2016 ACM. ISBN 978-1-4503-4139-4/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2976749.2978354
t than the mechanisms speciﬁed by ISO/IEC 20009-4. An
eﬃcient revocation mechanism for APAKE is also proposed.
We integrate APAKE into TLS to present an anonymous
client authentication mode where clients holding passwords
can authenticate themselves to a server anonymously. Our
implementation with 128-bit security shows that the aver-
age connection time of APAKE-based ciphersuite is 2.8 ms.
With APAKE integrated into the OpenSSL library and us-
ing an Apache web server on a 2-core desktop computer,
we could serve 953 ECDHE-ECDSA-AES128-GCM-SHA256 HTTP-
S connections per second for a 10 KB payload. Compared
to ECDSA-signed elliptic curve Diﬃe-Hellman ciphersuite
with mutual authentication, this means a 0.27 KB increased
handshake size and a 13% reduction in throughput.
1.
INTRODUCTION
Privacy protection has become a major concern with the
rapid growth of cloud computing, big data and internet of
things. For example, contact details of 1.5 million customers
of Verizon Enterprise were put up for sale on a Dark Web fo-
rum recently [1]. Most people typically associate the loss of
privacy with a feeling of invasion or loss of control [45]. The
importance of user privacy in authentication systems has
been emphasized by the European privacy standard [31] and
by the US government in the National Strategy for Trust-
ed Identities in Cyberspace [52]. NIST has developed three
privacy engineering objectives - predictability, manageabili-
ty, and disassociability [47], where disassociability captures
one of the essential elements of privacy-enhancing systems
that the system actively protects or “blinds” an individual’s
identity or associated activities from unnecessary exposure.
Authentication of participants is usually required in com-
puter systems-based applications to establish trust relations.
An eﬀective approach to protect users’ privacy in authentica-
tion systems is anonymous authentication which achieves se-
cure authentication and anonymity simultaneously [45], i.e.,
no unauthorized user can fool a server into granting it ac-
cess, and the server should not know which user it is in-
teracting with. As stated in [21], privacy-conscious service
providers (SPs) have a strong incentive to adopt anonymous
authentication, and it is in their best interest to keep client
information private on technical unavailability grounds.
1179Password-based authentication systems have been wide-
ly deployed in information systems to guarantee authorized
access to desktop, mobile and web applications, as pass-
words have advantages of being memorable, avoiding com-
prehensive public key infrastructure for distributing client
certiﬁcates and dedicated hardware for storing secret keys.
Password-based authentication with key exchange protocols
have been extensively explored [7, 4, 14, 44, 49, 8] and widely
standardized [39, 57, 40]. The TLS ciphersuite using secure
remote password protocol [57] is provided in OpenSSL.
In traditional password-based authentication systems, a
user keeps a password conﬁdential but pays no attention
to privacy protection of herself [2], since the identity infor-
mation is usually transmitted explicitly so that the server
can determine which password should be used. Therefore,
anonymous authentication that can work with password-
based technology are highly desirable [45].
Anonymous password authentication protocols have been
proposed by Viet et al. [58] via integrating an oblivious
transfer protocol within a two-party password-authenticated
key exchange protocol, and later improved in [60, 54]. Such
protocols allow a client holding a password to authenticate
herself to the server, while preserving her privacy. However,
these protocols have an inherent limitation for computation
eﬃciency, i.e., a server performs O(N ) computations per
protocol execution, where N is the total number of users.
Another approach for anonymous password authentica-
tion was proposed in [61, 62], where a user obtains a (CL
[17] or BBS [12]) signature from a server, wraps the signa-
ture with her password and stores it on some extra storage,
such as a smartphone, a tablet (e.g., iPad), a USB ﬂash
memory, or even in a public directory (e.g., cloud). The ex-
tra storage is only needed to be integrity-protected, which
is weaker than a dedicated hardware. To login the server,
the user recovers the signature from a password-wrapped
credential using her password, and then proves possession
of the signature. In these schemes, the server’s cost is in-
dependent of the scale of user set. However, homomorphic
encryption is needed in [61, 62] to resist oﬀ-line dictionary
attacks. For 80-bit security level, a user with a 2.53GHz
notebook costs 385 ms and a server with a 3.0GHz desktop
computer costs 430 ms per login protocol run.
Anonymous password authentication also attracts the in-
terest of industry standard organizations. In a standard for
anonymous entity authentication, the mechanisms based on
weak secrets are named as ISO/IEC 20009-4 and developed
by ISO/IEC JTC 1, SC 27, IT Security techniques. Three
mechanisms have been included in ISO/IEC 20009-4 [43].
For the Transport Layer Security (TLS) protocol [28],
there are three modes supported: mutual authentication,
server authentication (with no client authentication), and
total anonymity. The ﬁrst mode needs client certiﬁcates to
oﬀer authentication, and thus provides no client-anonymity.
The last two modes do not provide any authentication of
clients, and the mode of total anonymity is inherently vul-
nerable to man-in-the-middle attacks and strongly discour-
aged. A TLS mode of anonymous client authentication is
of great interest, where clients can authenticate to a server
without revealing their identities, the server is assured that
only authorized clients can provide secure authentication.
In CCS 2015, Cassola et al.
[21] consider a practical s-
cenario of anonymous authentication for Wi-Fi connectivity
using open hotspots hosted on untrusted Access Points (AP-
s). A dishonest ISP may track which APs a client connects
to and when, revealing clients’ mobility patterns and other
sensitive information. A protocol was proposed in [21] that
allows SPs to authenticate their clients, but hides clients’
identities from APs and SPs at the time of authentication.
1.1 Our Contributions
In this paper, we propose a novel approach for design-
ing anonymous password authentication protocols by using
algebraic MACs which are constructed using only group op-
erations rather than block ciphers or hash functions [24].
Speciﬁcally, an algebraic MAC is issued by a server to a us-
er, and then used as a credential for authentication. The
algebraic MAC is protected by a user’s password and stored
on some extra storage with integrity-protection. The under-
lying algebraic MAC is required to be weak pseudorandom
in order to resist oﬀ-line dictionary attacks, and admits ef-
ﬁcient zero-knowledge proofs so that a user can prove pos-
session of a credential. Thus, only registered users owning
algebraic MACs can authenticate themselves to the server
while preserving their privacy. This approach suﬃciently
incorporates the symmetric feature of algebraic MACs with
that of anonymous password authentication, eliminates the
dependence of homomorphic encryption, and yields concep-
tually simple and provably secure constructions.
To construct practical APAKE protocols, we instantiate
an algebraic MAC scheme based on the q-SDH assump-
tion [11], and show that it is suf-rmva secure, weak pseudo-
random and tag-randomization simulatable, and allows la-
beled SE-NIZKs. For credential presentation, the Show algo-
rithm costs one exponentiation and one multi-exponentiation
to generate a presentation proof and the ShowVerify algorith-
m costs one multi-exponentiation for veriﬁcation, which are
optimal for the randomize-then-prove paradigm.
Based on the instantiated algebraic MAC scheme, we ob-
tain a highly practical APAKE protocol, which is denot-
ed by APAKE. Compared with the mechanisms speciﬁed by
ISO/IEC 20009-4 [43], APAKE provides signiﬁcant perfor-
mance advantages, and may invoke interest of the standard
community. An eﬃcient revocation mechanism for APAKE is
proposed, and the resulting protocol is denoted by APAKEr.
We integrate APAKE and APAKEr into the TLS protocol to
provide a mode of anonymous client authentication. For an
ECDSA-signed elliptic curve Diﬃe-Hellman ciphersuite, we
denote the ciphersuite with anonymous client authentication
by ECDHE3, and denote the ciphersuite with only server au-
thentication (resp., mutual authentication) by ECDHE1 (resp.,
ECDHE2). Let ECDHE4 be the ECDHE3 supporting revocation.
Based on OpenSSL library, we implemented in C the ECDHEi
ciphersuite at a 128-bit security level for i = 1,··· 4. HTTPS
connections per second supported by the server are report-
ed in Figure 1. When using the secp256r1 elliptic curve
and an Apache web server on a 2-core desktop computer,
the server can handle 953 ECDHE-ECDSA-AES128-GCM-SHA256
HTTPS connections with anonymous client authentication
per second for a 10 KB payload, and a factor 1.13x fewer
than ECDHE2. While the average connection time of ECDHE3
ciphersuite is 2.8 ms, that of ECDHE4 ciphersuite is 3.4 ms.
1.2 Related Work
To enhance users’ privacy, anonymous signature schemes,
such as group signatures [27], blind signatures [25] and Di-
rect Anonymous Attestation (DAA) [15] have been exten-
1180) for x $←
q-DDHI Assumption [10]. Given (g, gx, . . . , gxq
Z∗
p, it is hard to distinguish g1/x from a random element.
DDH Assumption. Given (g, gx, gy) for x, y $← Z∗
hard to distinguish gxy from a random element in G∗.
2.2 Non-Interactive Zero-Knowledge Proofs
Non-interactive zero-knowledge proofs (NIZKs) enable a
prover to prove in zero-knowledge that a statement x is in
a given language L deﬁned by an NP-relation R, i.e., L =
{x| ∃w s.t. R(x, w) = 1}. An NIZK could also be extended to
support (optional) labels, meaning that both a prover and
a veriﬁer are given a label (cid:96) as input.
p, it is
Figure 1: HTTPS connections per second supported by
the server at a 128-bit security level
sively investigated. DAA has been adopted by the Trusted
Computing Group and standardized by ISO/IEC [41, 42].
Anonymous credentials are introduced by Chaum [26],
and a series of schemes [19, 18, 16] have been proposed. Sev-
eral privacy-enhancing attribute-based credential systems
[51] have been developed, including IBM’s Idemix system
[38], and Microsoft’s U-Prove system [48].
In CCS’14, Chase et al. [24] constructed keyed-veriﬁcation
anonymous credentials based on two algebraic MACs, where
one is uf-cmva secure [29] in the generic group model [55],
and the other is uf-cmva secure under the DDH assumption.
Cesena et al. [22] proposed a solution for anonymous au-
thentication via integrating DAA into TLS, and obtained
a ciphersuite which has a factor about 25x fewer HTTPS
connections per second than ECDHE2, even if the compu-
tations of TPM are performed on a PC. Walker and Li [59]
presented a key exchange protocol with anonymous authen-
tication by combining DAA and the SIGMA family of key
exchange protocols from IPsec and IKE.
In CCS’15, Fett et al. [32] proposed the ﬁrst privacy-
respecting Single Sign-On system (SPRESSO) for users to
login web sites, and prove that it enjoys strong authenti-
cation and privacy properties. SPRESSO is a new system
built from scratch and involves a forwarder (FWD) to for-
ward messages from Identity Providers to Relying Parties.
2. BUILDING BLOCKS
In this section, we present the building blocks used in our
APAKE construction. Firstly, we describe the notation and
the assumptions used in this paper.
Notation. Throughout this paper, λ denotes the security
parameter, x $← S denotes x is sampled uniformly at random
from a set S, [n] denotes the set {1, . . . , n}. For an algorith-
m A, (y1, y2, . . . ) ← A(x1, x2, . . . ) denotes the process of
running A on input (x1, x2, . . . ) and getting (y1, y2, . . . ) as
output. A function f : N → [0, 1] is negligible if for any
positive c, we have f (λ) < 1/λc for suﬃcient large λ.
Let G be a multiplicative group of prime order p generated
by g, 1 be the identity element of G and G∗ denote G\{1}.