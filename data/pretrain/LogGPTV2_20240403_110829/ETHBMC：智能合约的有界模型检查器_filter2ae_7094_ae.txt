**合约间分析：**
对Mythril进行合约间分析非常困难；该工具支持合约间分析，但是合约必须已经部署在区块链上。因此将它们排除在此测试之外，仅让Manticore进行评估，因为其他工具均不支持合约间分析。使用两个合约库和Target来模拟该实验，以反映List
4中给出的示例。假设Target是要分析的合约， Manticore和ETHBMC都为该示例找到正确的输入。
Mythril提供了一种链上分析模式，可以从链上下载所有必要的实时信息。不幸的是，它仅支持当前最新块的分析。本文扩展了该工具以使其能够处理过去的块，并且当前正在将该补丁提交到上游存储库。但是，在分析奇偶合约时，Mythril不报告任何漏洞。
ETHBMC确实支持类似于Mythril的模式：在特定块中提取存储信息，并使用它们预先配置环境。当到达任何基于调用的指令时，提取任何常量参数并加载相应的接收者合约。
ETHBMC完成分析并正确报告两种利用合约的方式。在实际的奇偶校验代码中，构造函数和初始化代码分为两个函数。因此，攻击者可以直接调用暴露的构造函数或初始化方法。
ETHBMC会为这两个漏洞生成有效的攻击代码。
Manticore不支持任何类型的在线分析。因此，在相应的块中提取存储参数，并利用两个帐户的API来建立测试环境。处理完第一笔交易后，Manticore报告它尚未检测到任何可以进一步探究的状态，并完成了分析而未报告任何问题。
###  2）大规模分析
为了进一步评估ETHBMC，对截至2018年12月24日在Google
BigQuery上列出的所有2,194,650个帐户进行了大规模扫描。将扫描分为三个阶段，使得可以将其与之前的两个大规模大规模进行直接比较进行的实验：第一次是Krupp和Rossow，第二次是Nikolic等。
Kruppand Rossow提出了teEther，它将二进制切片与符号执行结合使用。该工具侧重于提取以太币，以及重定向控制流。
Nikolicet等开发了可以执行自杀合约（即任何人都可以销毁）的MAIAN。下表中列出了本研究的发现，下面将对其进行详细讨论。请注意，例如在奇偶校验中，ETHBMC经常发现多种利用同一漏洞的方法，因此，在分析中列出了在分析过程中发现的不同漏洞数量。
**实验设计：**
由于运行存档节点，因此可以在任何给定的块高度上自由地重新创建帐户环境。利用此功能首先重新创建Krupp和Rossow进行扫描的环境，然后分析其数据集列出的所有帐户。随后，提取了Nikolic扫描时出现的所有合约地址。由于希望避免不必要的合约重新扫描，因此继续仅扫描teEther和MAIAN帐户集之间的差异。通过收集所有新创建的帐户以及帐户状态在两个区块之间变化的所有帐户来计算此差异，从而对区块链的观点“更新”到较新的区块。最后，使用相同的方法来计算MAIAN扫描与截至2018年12月在Google
BigQuery上列出的所有帐户之间的差异，从而提供了当前以太坊漏洞态势的完整视图。请注意，同时选择了teEther和MAIAN扫描，因为这两种工具均提供了误报修剪功能，因此可以进行合理的比较。
由于分析的规模，必须对ETHBMC施加一些限制。分析配置为使用30分钟超时。此外，将循环执行绑定到一个迭代中，对于后端SMT求解器使用两分钟的超时时间，并且最多只能加载10,000个存储变量。当一个账户链上的余额为零时，假设10个以太币的替代物，因此模型检查器可以推断提取的以太币。此外，将交易深度限制为三笔交易，并在执行过程中引入了额外的限制，以将内存复制操作的大小限制为256，从而模仿teEther的行为。
在实验中使用了一些机器：大学内部云中的20个虚拟机，运行6个2.5 Ghz虚拟化内核，每个内核分配12
GB内存。此外，在两台服务器上运行了12个ETHBMC实例，每个实例均配备了Intel Xeon
E5-2667和96GB内存。扫描2,193,697个唯一帐户占用了整个群集大约3.5个月的时间，大约相当于39个CPU年。
本研究联系了teEther的作者，获得了他们的实验数据，并在同一日期（2017年11月30日）对他们的数据集列出的所有784,344个账户进行了分析。注意，在分析过程中，Krupp和Rossow首先假定了一个空的存储空间。这与仅单个合约分析结合在一起，使他们可以跳过对重复合约代码的分析，从而减少了38,757个合约的初始分析集。他们首先分析了此减少的合约集的漏洞。当他们的工具将某个帐户标记为易受攻击时，他们便在更大的集合中搜索了共享此合约代码的所有计数。随后，他们将重新对这些帐户进行分析，同时还提取相应的环境（例如，这些帐户的存储变量）。但是，请注意，此快捷方式可能会错过易受攻击的合约，因为它们可能会根据初始化的存储变量和与之交互的帐户而有所不同。为避免这种情况，分别扫描所有784,344个帐户，提取初始存储变量以及分析期间发现的被调用帐户。想强调的是，两次扫描都针对同一套合约，本文只是在方法上有所不同。
分析成功完成了大部分合约（91.21％），只有很少的超时（2.41％）。相比之下，teEther成功分析了85.65％的合约。由于本文的分析具有大规模性质，因此在分析过程中确实遇到了多个错误（6.38％）。有些是由于EVM（一种用于验证的框架）中的错误导致的。一些与本研究有关，无法从区块链加载帐户，这是目前仍在调查的问题。但是，无论如何将相应的帐户标记为错误，从分析中将其排除在外。
经过两个阶段的分析，Krupp和Rossow报告了1,532个易受攻击的帐户。在分析中，发现了2,856个易受攻击的合约，可以从中提取以太的1,681个合约，可以重定向的51个控制流以及可以随时杀死的1,431个（即自杀合约）。请注意，一个帐户可以标记为多个类别，例如255个帐户都被标记为可以提取以太币的suicidaland。在评估过程中，teEtherauthors列出了容易受到劫持的控制流的帐户。一旦攻击者可以重定向控制流，他们就可以轻松地从帐户中提取所有资金。
**当前的漏洞情况：**
最后一次扫描显示，截至2018年12月，以太坊区块链上共有4,301个易受攻击的活跃合约。分为2708个可提取以太币的合约，97个可重定向其控制流的账户和1924个合约可以随意破坏自己。
###  3）性能分析
本文展示了ETHBMC扩展到大型数据集的能力。但是，在分析单个合约时，也对它的性能感兴趣。从数据集中随机抽取了10,000个合约，并对本文分析时间进行了研究。请注意，如果合约与其他合约互动，仍将从区块链加载它们。结果如下图所示。
在这10,000个合约中，在前5秒成功分析了5,577个合约，并在5到10秒后成功分析了另外2,006个（即，在10秒内总计7,583个）。此后，已解决合约的数量逐渐增加，在前2分钟内解决了10,000个合约中的8,471个。
30分钟后，已成功分析了10,000个帐户中的9,031个，即90％左右，这反映了在大规模分析中的效果。请注意在图中一起绘制了错误和超时，以更好地表示。
## 0x07 Discusion
接下来讨论ETHBMC的基本假设和局限性。
环境模型：尽管环境模型很精确，但仍然必须对其施加一些限制。当执行与环境中其他帐户交互的指令（例如，BALANCE或CALL指令）时，仅将当前加载的环境中的帐户视为有效目标。否则，将不得不将以太坊生态系统中的每个账户视为有效目标。尽管可以简单地对整个执行过程进行符号化建模，但这也会带来一个弊端，即这种帐户群甚至永远不可能。因此，决定只考虑提供给环境或在实时分析中发现的帐户。另外，不为帐户创建建模。
**限制条件：**
在评估过程中，必须对本文的框架施加一些限制，例如边界循环和设置时间限制。尽管其中一些限制无法完全取消，例如，总是必须对循环施加上限，但提高超时限制或循环计数可能会导致发现程序中更深处的错误。这同样适用于合约调用，即ETHBMC无法找到需要三个以上事务的错误。此外，目前仅为一个攻击者帐户建模。但是，由于使用智能合约对复杂的系统进行建模，因此实际上包括其他攻击者或用户帐户可能会导致发现交互，而只有在多方使用该合约时才会触发交互。请注意，由于ETHBMC已经支持完整的环境，因此具有以这种方式使用的功能。
**扩展到其他漏洞：**
本文模型检查方法可以通过将新漏洞建模为约束来检测新的攻击媒介。此外，EthBMC可以用来为合约提供正式担保。分析师可以将合约的正确行为建模为约束系统。然后在标准模型检查过程中，将使用EthBMC来检查是否存在既可以达到的状态，又可以满足约束系统的条件。这些属性证明违反了正确的行为。可达性评估该状态在实践中是可行的。正确行为的约束系统是所有可行程序状态的子集，当发现此子集以外的状态（即取反）时（在实践中也是可行的），发现违反了此行为。
**可扩展性：**
可以为可伸缩性做出类似的论点，再次以keccak为例。使用严格的编码方案对这些计算进行编码，由于增加了复杂性，因此需要更长的分析时间。如果简单地假设计算可以有任何结果，即过高地近似，这将使推理变得直截了当。在检查诸如MadMax之类的工具的分析时间时，可以证明这一点：尽管在第一分钟内解决了约80％的所有合约，但这些工具在前20秒中分析了约90％。在智能合约的正常开发周期中，开发人员可以快速迭代许多版本的合约，他们可以使用“更快”的工具。最后，在部署到区块链之前，可以使用ETHBMC进行最终的精确分析。
**影响：**
对EthBMC可能产生的实际影响进行公正的评估非常困难。由于以太坊系统对外界完全透明，因此攻击者可以监控区块链并在账户中包含诱人数量的以太币时从账户中提取资金。因此，对发现的每个易受害帐户的最高记录值进行了分析，从而为本研究确定了潜在影响的上限。这样产生的最大影响约为155,000个以太坊。但是，EthBMC可以重新创建Parity
hack。如果当时使用该工具，那么本可以提取超过370,000个以太坊。以2020年2月底的汇率计算，这分别相当于约4000万美元和8900万美元。
## 0x08 Conclusion
在本文中首先介绍了用于智能合约的最新静态分析工具。证明了所有这些工具都至少在一个类别中采用了不精确的推理。认识到这些缺陷后，介绍了ETHBMC，它是一种符号执行器，能够捕获合约间的关系，加密哈希函数和内存复制式操作。通过评估以前的几项工作的实施来证明了它的有效性，并表明ETHBMC的准确性明显优于它们。另外，介绍了当前合约前景的漏洞分析，以及对ETHBMC内部工作的多项研究。