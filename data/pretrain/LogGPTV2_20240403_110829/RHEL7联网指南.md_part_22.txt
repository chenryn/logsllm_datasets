``` screen
DEVICE=eth1
HWADDR=D4:85:64:01:46:9E
DEVICETYPE=TeamPort
ONBOOT=yes
TEAM_MASTER=team0
TEAM_PORT_CONFIG='{"prio": 100}'
```
根据要求添加与上述接口类似的附加端口接口，修改 DEVICE 和 HWADDR
字段使其与端口（网络设备）匹配。如果未根据 `prio`{.literal}
指定端口优先权，则默认为 `0`{.literal}。该数值可为负数和正数，范围在
`-32,767`{.literal} 到 `+32,767`{.literal} 之间。
:::
::: para
使用 `HWADDR`{.command} 指令指定硬件或 MAC
地址会影响设备命名过程。原因请查看 [第 8 章
*一致网络设备命名*](#ch-Consistent_Network_Device_Naming.html){.xref}。
:::
::: para
请作为 `root`{.systemitem} 运行以下命令启用网络成组：
``` screen
~]# ifup team0
```
运行以下命令查看网络成组：
``` screen
~]$ ip link show
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Add_a_port_to_a_Network_Team_Using_iputils}5.10.4. 使用 iputils 在网络成组中添加端口 {.title}
:::
::: para
请作为 `root`{.systemitem}，使用 [**ip**]{.application}
工具程序运行以下命令，在网络成组 [team0]{.interface} 中添加端口
[em1]{.interface}：
``` screen
~]# ip link set dev em1 down
~]# ip link set dev em1 master team0
```
根据需要添加附加端口。成组驱动程序会自动启用这些端口。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Listing_the_ports_of_a_Team_Using_teamnl}5.10.5. 使用 teamnl 列出成组连接的端口 {.title}
:::
::: para
请作为 `root`{.systemitem} 使用 [**teamnl**]{.application}
工具程序，运行以下命令查看或列出网络成组中的端口：
``` screen
~]# teamnl team0 ports
em2: up 100 fullduplex
em1: up 100 fullduplex
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Configuring_Options_of_a_Team_Using_teamnl}5.10.6. 使用 teamnl 配置成组连接选项 {.title}
:::
::: para
请作为 `root`{.systemitem} 使用 [**teamnl**]{.application}
工具程序，运行以下命令查看或列出当前可用选项：
``` screen
~]# teamnl team0 options
```
请作为 `root`{.systemitem} 运行以下命令将网络成组配置为使用
active-backup 模式：
``` screen
~]# teamnl team0 setoption mode activebackup
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Add_an_address_to_a_Network_Team_Using_iputils}5.10.7. 使用 iputils 在网络成组中添加地址 {.title}
:::
::: para
请作为 `root`{.systemitem} 使用 [**ip**]{.application}
工具程序，运行以下命令在成组接口 [team0]{.interface} 中添加地址：
``` screen
~]# ip addr add 192.168.252.2/24 dev team0
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Bring_Up_an_interface_to_a_Network_Team_Using_iputils}5.10.8. 使用 iputils 在网络成组中激活接口 {.title}
:::
::: para
请作为 `root`{.systemitem}，使用 [**ip**]{.application}
工具程序，运行以下命令激活接口，或在网络成组中
["[启用]{.quote}"]{.quote} 接口：
``` screen
~]# ip link set team0 up
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Viewing_the_Active_Ports_of_a_Team_Using_teamnl}5.10.9. 使用 teamnl 查看成组连接的 activeport 选项 {.title}
:::
::: para
请作为 `root`{.systemitem}，使用 [**teamnl**]{.application}
程序，运行以下命令查看或列出网络成组中的 `activeport`{.option} 选项：
``` screen
~]# teamnl team0 getoption activeport
0
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Setting_the_Active_Ports_of_a_Team_Using_teamnl}5.10.10. 使用 teamnl 设置成组连接的 activeport 选项 {.title}
:::
::: para
请作为 `root`{.systemitem}，使用 [**teamnl**]{.application}
工具程序，运行以下命令在网络成组中设置 `activeport`{.option} 选项：
``` screen
~]# teamnl team0 setoption activeport 5
```
请作为 `root`{.systemitem}，使用以下命令检查成组端口选项变更：
``` screen
~]# teamnl team0 getoption activeport
5
```
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Teaming.html#sec-Controlling_teamd_with_teamdctl}5.11. 使用 teamnl 控制 teamd {.title}
:::
::: para
请使用控制工具 [**teamdctl**]{.application} 查询运行的
`teamd`{.systemitem} 实例，以获取统计或配置信息。
:::
::: para
请作为 `root`{.systemitem} 使用以下命令查看成组 [team0]{.interface}
的当前状态：
``` screen
~]# teamdctl team0 state view
```
要了解更详细的信息，请运行：
``` screen
~]# teamdctl team0 state view -v
```
:::
::: para
运行以下命令获取 [team0]{.interface} 的完整 JSON
格式状态转储（对机器处理有帮助）：
``` screen
~]# teamdctl team0 state dump
```
:::
::: para
运行以下命令获取 [team0]{.interface} 的 JSON 格式配置转储：
``` screen
~]# teamdctl team0 config dump
```
:::
::: para
运行以下命令查看作为成组 [team0]{.interface} 一部分的端口
[em1]{.interface} 配置：
``` screen
~]# teamdctl team0 port config dump em1
```
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Add_a_port_to_a_Network_Team}5.11.1. 在网络成组中添加端口 {.title}
:::
::: para
请作为 `root`{.systemitem} 运行以下命令在网络成组 [team0]{.interface}
中添加端口 [em1]{.interface}：
``` screen
~]# teamdctl team0 port add em1
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Remove_a_Port_From_a_Network_Team}5.11.2. 从网络成组中删除端口 {.title}
:::
::: para
请作为 `root`{.systemitem} 运行以下命令，从网络成组 [team0]{.interface}
中删除接口 [em1]{.interface}：
``` screen
~]# teamdctl team0 port remove em1
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-Apply_a_Configuration_to_a_Port_in_a_Network_Team}5.11.3. 在网络成组中为端口应用配置 {.title}
:::
::: para
要在网络成组 [team0]{.interface} 为端口 [em1]{.interface} 应用 JSON
格式配置，请作为 `root`{.systemitem} 运行以下格式的命令：
``` screen
~]# teamdctl team0 port config update em1 JSON-config-string
```
其中 *JSON-config-string* 是 JSON
格式文本中的字符串文本配置。这样就可使用提供的 JSON
格式字符串更新端口配置。用来配置端口的有效 JSON 字符串示例类似如下：
``` screen
{
  "prio": -10,
  "sticky": true
}
```
使用单引号括起 JSON 配置字符串，并忽略换行符号。
:::
::: para
注：会覆盖旧的配置，同时会将省略的选项重置为默认值。有关成组守护进程控制工具命令示例，请查看
`teamdctl(8)`{.filename} man page。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Teaming.html#sec-View_the_Configuration_of_a_Port_in_a_Network_Team}5.11.4. 查看网络成组中端口的配置 {.title}
:::
::: para
要复制网络成组 [team0]{.interface} 中端口 [em1]{.interface}
的配置，请作为 `root`{.systemitem} 运行以下命令：
``` screen
~]# teamdctl team0 port config dump em1
```
这会将该端口的 JSON 格式配置转储为标准输出。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Teaming.html#sec-Configure_teamd_Runners}5.12. 配置 teamd 运行程序 {.title}
:::