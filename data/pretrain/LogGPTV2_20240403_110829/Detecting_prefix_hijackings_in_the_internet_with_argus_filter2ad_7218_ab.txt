The whole system is depicted in Figure 5.
The Anomaly Monitoring Module receives live BGP UP-
DATEs from BGPmon [3], a real-time BGP feed in the
Route Views project [33] that collects UPDATEs from router-
s all over the world. When the AMM receives an UPDATE,
it will check whether the embedded AS-path has an anoma-
lous origin AS or an anomalous AS-path segment according
to its local routing information database, as described in
Section 4.2.
The Live-IP Retrieving Module maintains a pool of live
IPs by periodically collecting from various sources. For an
anomalous preﬁx f , it will carefully select an live IP as the
probing target of the identiﬁcation module. Details of the
LRM will be discussed in Section 4.3.
The Hijacking Identiﬁcation Module is responsible for col-
lecting information from a number of vantage points, com-
puting the ﬁngerprint for the anomalous route event, and
making ﬁnal decisions about whether the suspicious preﬁx
is really hijacked. It is the core of Argus, and Section 4.4
will present it in detail.
4.2 Monitor Anomalies
In Argus, we consider three types of route anomalies: ori-
gin anomalies (OA), adjacency anomalies (AA), and policy
anomalies (PA), as illustrated in Fig. 6.
An origin anomaly (OA) happens when the origin AS in
the AS-path of a preﬁx changes to a diﬀerent AS, or a new
preﬁx appears. This is the simplest case of preﬁx hijacking,
and is the focus of all existing hijacking detection solution-
s. For example, in Figure 6(a), AS3 is not the origin AS
of the preﬁx f , thus any AS-path for f ending with h3i is
anomalous. Argus maintains a database which keeps track
of the normal origin AS of each preﬁx to help detect origin
anomalies.
Hijacking can also be caused by changing some AS-path
segments, e.g., by using a command like as-path prepend in-
cautiously, or by intentionally removing some ASes to short-
en the path length. Such hijackings are key security issues
considered by the IETF [5], but have not got enough at-
tentions in measurement studies. To detect such anoma-
lies, it is impractical to maintain all the AS-paths due to
their enormous quantity. Instead, Argus only focuses on the
neighboring ASes pairs and triples that occur in an AS-path.
In an AS-path of a preﬁx, if any pair of neighboring ASes
has not appeared in any UPDATE before, Argus will report
an adjacency anomaly (AA), since such a pair indicates that
the adjacency between two ASes changes. Figure 6(b) illus-
18...
BGPmon
Live
BGP
feed
Daily
traceroute 
archives
Origin ASes
AS pairs
AS triples
Test
Extract
Detect
...
Live IP
i in f
show ip bgp
   Internet
ping
Fingerprint
Identify
HIM: Hijacking Identification Module
Hijacking 
Alarm
Victim
Prefix f
AMM: Anomaly Monitoring Module
Eyes of Argus
public route-servers & looking-glasses
Parse
Stat.
OA / AA / PA
Prefix f, Anomaly pa
CAIDA
iPlane
Live IP
Candidates
LRM: Live-IP Retrieving Module
Figure 5: The architecture of Argus.
2
4
2
4
2
(cid:455)4,3,2,1(cid:456)
4
(cid:455)1(cid:456)
f
1
victim
(cid:455)3(cid:456)
3
f
attacker
(cid:455)1(cid:456)
1
f
(cid:455)3,1(cid:456)
3
(cid:455)1(cid:456)
1
f
(cid:455)3,2,1(cid:456)
3
victim
attacker
victim
attacker
(a) Origin Anomaly (OA)
(b) Adjacency Anomaly (AA)
(c) Policy Anomaly (PA)
Normal UPDATE
Hijacking UPDATE
Customer-Provider
Peer-Peer
Normal AS
Polluted AS
Figure 6: The three kinds of anomalies considered in Argus.
trates such an example, where AS3 does not directly connect
to AS1, but erroneously announces an AS pair h3, 1i in the
AS-path.
On the other hand, since BGP is policy based, it often
cares about whether routes learned from one neighbor should
be propagated to another neighbor. Such a relationship be-
tween one AS with its two neighbors usually constitutes a
BGP policy. For example, in Figure 6(c), although AS3
directly connects to AS2 and AS4, it should not announce
routes learned from its provider AS2 to another provider
AS4, so the triple h4, 3, 2i should not appear in any route.
In case that a new triple of neighboring ASes appears, e.g.,
an AS-path containing h4, 3, 2i is received in this example,
Argus will report a policy anomaly (PA).
In most cases, an AS uses the same policy for all the pre-
ﬁxes learned from the same neighbor, and does not care
about the other non-adjacent ASes, so we think monitoring
adjacency and policy anomalies can be an eﬀective replace-
ment for monitoring the whole AS-path. The latter needs to
maintain all normal AS-paths while the former only needs
to maintain all normal neighboring AS pairs and triples, as
is done in Argus.
By considering the above three kinds of anomalies, Ar-
gus can detect a much wider range of hijackings, as will be
demonstrated in Section 5.
Once the AMM detects an anomaly, it will notify the HIM
to identify whether a hijacking truly happens. If not, it will
add the new origin AS or the AS pair/triple into the local
database since they are normal. The database will also be
refreshed periodically by removing those origin ASs or AS
pairs/triples inactive for a long period (i.e., more than two
months).
Figure 7: Finding an address block covered by
166.111.0.0/16 but not by any of its sub-preﬁxes.
4.3 Retrieve Live IPs
When anomaly is detected for a preﬁx f , the Live-IP Re-
trieving Module (LRM ) tries to ﬁnd a live IP address i in
f . The reachability to this address is a key factor for de-
termining whether f is hijacked. Due to the longest preﬁx
matching mechanism, i should be covered by f , but not by
any sub-preﬁx of f . Fig. 7 shows such an example, where
the anomalous preﬁx 166.111.0.0/16 has three sub-preﬁxes
announced, and our algorithm will try to ﬁnd a live IP in
the range of 166.111.64.0/18.
The LRM accomplishes this task by maintaining a local
database of candidate live IP addresses in all announced pre-
ﬁxes in the Internet. These IPs are collected from CAIDA’s
Ark [2] and iPlane [23] daily traceroute results 6, and from
many DNS records [6].
When a live IP address is asked for, the LRM will ﬁrst
retrieve all live IP addresses in the database according to the
given preﬁx, and then launch parallel probings to select one
that is currently reachable. This process is very quick, and
6These two projects perform traceroute from various van-
tage points to construct a router level atlas of the Internet.
19usually completes within one second. When no reachable
IP can be found, for example, when the server hosting the
LRM is also polluted, the most active IP in the probing
history will be selected. Inevitably, using an IP reachable
in history may introduce false negatives if it is not alive at
the moment, but our experiments show that this probability
tends to be relatively low.
4.4
Identify Hijackings
The Hijacking Identiﬁcation Module (HIM ) employs a
number of public route-servers and looking-glasses, called as
the eyes of Argus, to ﬁnally determine whether an anomaly
detected by the AMM is actually a preﬁx hijacking or not.
At each eye, Argus activates two processes, one for gath-
ering the control-plane route status of the victim preﬁx f ,
and the other for obtaining the data-plane reachability to
the selected live IP i.
Speciﬁcally, Argus uses show ip bgp to extract the best
BGP route pt,j(f ) that its j-th eye chooses for the anoma-
lous preﬁx f , in the t-th second. Then it checks whether
pt,j(f ) is aﬀected by the anomalous origin AS (or AS pair/triple)
reported by the AMM. Meanwhile, Argus uses ping to test
whether the live IP i is reachable from each eye. Both of
the two commands are very fast, so realtime results can be
collected once every second.
After an anomaly is reported, we continuously do that for
W seconds on N eyes. At the t-th second (1 ≤ t ≤ W ), we
compose the control-plane results of all eyes into a binary
vector Ct = {Ct,j|1 ≤ j ≤ N }, where
Ct,j =(cid:26) 0,
1,
if pt,j(f ) is aﬀected by the anomaly
if pt,j(f ) is not aﬀected by the anomaly
and compose the data-plane reachability results into a bina-
ry vector Dt = {Dt,j|1 ≤ j ≤ N }, where
Dt,j =(cid:26) 0,
1,
if the j-th eye gets no reply from the IP i
if the j-th eye gets a reply from the IP i
Our key observation in Section 3 tells that, the relation-
ship between Ct and Dt can expose the underlying cause of
a route event, e.g., users in an unpolluted AS should be able
to get a reply (Ct,j = Dt,j = 1) while users in a polluted
AS should not (Ct,j = Dt,j = 0). Due to the possible incon-
sistency between the control and data plane at a node, we
do not directly compare Ct,j and Dt,j of the same j-th eye
one by one.
Instead, we utilize the correlation coeﬃcient
of the two vectors Ct and Dt to measure this relationship,
mathematically deﬁned as
N
Ft =
(1)
Pj=1(cid:2)(Ct,j − Ct)(Dt,j − Dt)(cid:3)
s N
Pj=1
(Ct,j − Ct)2 ×
N
Pj=1
(Dt,j − Dt)2
where Ct and Dt are the average of Ct,j’s and Dt,j’s (1 ≤
j ≤ N ) on all eyes, respectively. We also call Ft and Dt
the ﬁngerprint and reachability of the route event at time t,
respectively.
Fig. 8 schematically illustrates the ﬁngerprint and reach-
ability distribution of diﬀerent route events. When Ft is
close to 1, Dt and Ct have a strong positive correlation (i.e.,
most polluted eyes cannot get reply from the victim preﬁx,
while most normal eyes can), then very probably a preﬁx
hijacking is going on. Since routing may be inconsistent and
Reachability   Dt
1
TE,
Multi-homing ,
Anycast,
…
Route failure, 
Firewall,
Inactive host,
…
0
Route
migration
-1
Prefix
hijacking
1
Fingerprint   F t
Figure 8: Fingerprint and reachability of diﬀerent
route events.
instable, we raise a hijacking alarm only when Ft is greater
than a threshold µ for at least a period of T seconds. The
choice of µ and T will aﬀect the detection accuracy, as will
be discussed in Section 5. We compute Ft in each second
for a total of 120 seconds.
When Ft is close to -1, a strong negative correlation exists
between Ct and Dt (i.e., most polluted eyes can get reply
while most normal eyes cannot), then the anomaly is very
possibly just a route migration.
When Dt and Ct are not strongly correlated (i.e., Ft is
close to 0), there are two possible situations: (1) if the aver-
age data-plane reachability Dt approaches 1, which means
most eyes can communicate with hosts in the target preﬁx,
then the anomalous route is often a normal backup route,
used for multi-homing, BGP anycast, backup path, or traf-
ﬁc engineering; (2) if Dt approaches 0, which means most
eyes can not reach the target preﬁx, then a route failure or
a ﬁrewall may exist in the middle, or because the probing
target we choose is not alive.
We can see that Argus has very little dependency on ex-
ternal nodes. It only receives live BGP feed, collects active
IP addresses, and logins to route-servers or looking-glasses
to execute two simple commands. All of these resources are
publicly and widely available, thus it is very easy to deploy,
and can monitor the Internet closely and pervasively.
We note that, when the denominator of equation (1) is
zero, we set Ft to be zero. This happens when either Ct or
Dt is a vector of all zero’s or all one’s. In particular, when
Ct is a vector of all one’s, all our eyes are polluted, and
we will not raise hijacking alarms any more. However this
rarely happens, as will be shown in the next section.
Based on Argus, we have built several online services. We
raise realtime hijacking alarms via a public mailing list and
twitter, which network operators can subscribe freely. We
post the information of all anomalous routes and hijackings,
together with their statistics, on our website, to facilitate
further processing and analysis. We also provide web ser-
vice APIs that can access our monitoring system in realtime
so that other systems can integrate the hijacking detection
capability. We make the services robust by deploying them
in diﬀerent ASes, so even when some of them are polluted
under an attack, the victim AS can still be informed as soon
as possible. All the detail of these services can be found at
argus.csnet1.cs.tsinghua.edu.cn.
205.
INTERNET MONITORING PRACTICE
Argus has been continuously monitoring the Internet for
one year, starting from May 2, 2011. During this period,
40K anomalous route events were reported 7, and 220 sta-
ble hijackings were identiﬁed. Due to a lack of the ground
truth, we use several methods to verify our identiﬁcation re-
sults. First, we query all valid Route Origin Authorizations
(ROAs) [17], which are digitally signed and can be used to
verify whether a preﬁx is announced by its authorized own-
er AS. Those anomalies with ROA records can be used as
a validation set to test our algorithm: if any such anomaly
is identiﬁed as a hijacking, then it must be a false positive.
However the ROA records are still rather incomplete, and
only 266 anomaly alarms can be used for validation, so we
also query the Internet Routing Registry (IRR)[7] to get
more preﬁx-origin pairs, where matching records are found
for 3988 anomalies. 8 Although the IRR information is not
guaranteed to be correct, we use it for a rough evaluation.
Second, we announce all the identiﬁed hijackings via several
public channels like twitter and mailinglist, 9 and have re-
cently started to directly contact the corresponding network
operators. Till now, we have not got any objection to our
identiﬁcation results, and 10 out of 31 network operators
being contacted have conﬁrmed our results. Last, we also
query the IRR to get other auxiliary information, such as
import/export policies, and query other databases such as
whois and Cyclops [12] to validate our results. Since that
needs a lot of labor work, the analysis is still on going.
5.1 System Parameters and Performance
The higher the correlation between the control and the
data plane, the more likely a hijacking is going on. When
an anomaly is reported by the Anomaly Monitoring Module
(AMM ), the Hijacking Identiﬁcation Module (HIM ) starts
to compute the ﬁngerprint Ft for this anomaly, in every sec-
ond of a continuous period of W seconds. Since the Internet
often converges in less than two minutes except for some un-
usual cases, and preﬁx hijacking is one kind of Tshort event,
which moves from a longer or less preferred to a shorter or
more preferred path, with convergence time typically less
than 40 seconds [26], we set W = 120 seconds. During this
period, if Ft is larger than a hijacking ﬁngerprint threshold
µ, we say the event is in a suspicious hijacking state, and
if the duration of the suspicious state, denoted by d, is no
smaller than a hijacking duration threshold of T seconds, we
classify this anomaly as a stable hijacking. Using a large hi-
jacking ﬁngerprint threshold µ or duration threshold T may
miss some real hijacking events, while using a small µ or T
may cause unnecessary alarms.
To model the high correlation coeﬃcient a hijacking should
have, µ can not be too small. Fig. 9 shows how the false
positive rate (FPR) changes with µ, where µ varies from 0.4
to 1.0. When we use the 266 route anomalies that have cor-
responding ROAs as the validation set 10, and the threshold
7We have aggregated the raw BGP UPDATEs from diﬀerent
routers into anomalous events, using algorithms like in [26].
8The IRR currently contains about 36% of all the Inter-
net preﬁxes, while the ratio that an origin anomaly can be
matched in it is 20%.
9Full details about
http://argus.csnet1.cs.tsinghua.edu.cn/about/.
10These anomalies are all caused by normal route events, so
FPR is the percentage of hijackings identiﬁed in this set.
these channels can be found at
4%
3%
2%
1%
0%
e
t
a
r
e
v
i
t
i
s
o
p
e
s
l
a
O A 
O A 
= 1)
  10)
= 10)
0.4
0.5
0.6
0.7
µ
0.8
0.9
1.0