### Processes and Open Directory

Processes no longer need to know the specifics of how and where administrative data is stored; Open Directory handles this for them. For instance, if a process requires the location of a user's home directory, it simply requests this information from Open Directory. Open Directory retrieves the necessary data and returns it to the process, thereby insulating the process from the underlying storage details. If Open Directory is configured to access administrative data across multiple directory domains, it will automatically consult these domains as needed.

### Data in Directory Domains

Some of the data stored in a directory domain mirrors the data found in traditional UNIX configuration files, such as `/etc/passwd`. This includes fields like the encrypted password, home directory location, real name, user ID (UID), and group ID (GID). However, a directory domain also stores additional data to support Mac OS X-specific functions, such as managing client computers.

### Data Distribution

One key characteristic of UNIX configuration files is that the administrative data they contain is only available on the computer where they are stored. Each computer has its own set of UNIX configuration files. Consequently, each computer that a user wants to use must have that user's account settings stored locally, and each computer must store the account settings for every person who can use it. To configure a computer's network settings, an administrator must physically go to the computer and enter the IP address and other network-identifying information.

Similarly, when changes are needed in UNIX configuration files, the administrator must make these changes on the specific computer where the files reside. For example, updating network settings may require the same changes to be made on multiple computers, which becomes cumbersome as networks grow in size and complexity.

### Open Directory and Data Management

Open Directory addresses these issues by allowing administrative data to be stored in a directory domain that can be managed from a central location. This data can then be distributed across the network, making it visible to the computers and administrators who need it.

### Uses of Directory Data

Open Directory makes it possible to consolidate and maintain network information easily in a directory domain, but this information is only valuable if the application and system software processes running on network computers actually access it. Here are some ways in which Mac OS X system and application software use directory data:

- **Login**: Workgroup Manager can create user records in a directory domain, which can be used to authenticate users logging into Mac OS X and Windows computers. When a user enters their name and password in the login window, the login process asks Open Directory to authenticate the credentials. Open Directory uses the provided name to find the user's account record and validates the password using the data in the record.
  
- **Folder and File Access**: After a successful login, a user can access files and folders. Mac OS X uses the user ID (UID) from the user record to determine the user's access privileges. The file system compares the user's UID with the UID assigned to the folder or file. If the UIDs match, the user is granted owner privileges (typically read and write). If they do not match, the user does not receive owner privileges.
  
- **Home Directories**: Each user record in a directory domain stores the location of the user's home directory, where personal files, folders, and preferences are kept. The home directory can be located on a specific computer or on a network file server.
  
- **Automount Share Points**: Share points can be configured to automount (appear automatically) in the /Network folder in Finder windows on client computers. Information about these share points is stored in a directory domain. Share points include folders, disks, or disk partitions accessible over the network.
  
- **Mail Account Settings**: User records in a directory domain specify whether the user has mail service, the mail protocols to use, how to present incoming mail, and more.
  
- **Resource Usage**: Disk, print, and mail quotas can be stored in each user record of a directory domain.
  
- **Managed Client Information**: Administrators can manage the Mac OS X environment of users whose account records are stored in a directory domain. Mandatory preference settings stored in the directory domain can override users' personal preferences.
  
- **Group Management**: In addition to user records, a directory domain stores group records. Each group record affects all users in the group and specifies preferences and access rights for group members.

### Inside a Directory Domain

Information in a directory domain is organized into record types, such as users, computers, and mounts. Each record type contains multiple records, and each record is a collection of attributes, with each attribute having one or more values. For example, when you define a user using Workgroup Manager, you create a user record. The settings you configure—such as short name, full name, and home directory location—become attribute values in the user record.

In some directory services like LDAP and Active Directory, record types are called object classes, and records are called objects. Each class defines similar objects by specifying certain required and optional attributes. For example, the `inetOrgPerson` class defines objects containing user attributes and is a standard LDAP class defined by RFC 2798. Other standard LDAP classes and attributes are defined by RFC 2307.

A collection of attributes and record types provides a blueprint for the information in a directory domain, known as the schema.

### Local and Shared Directory Domains

The decision on where to store server's user information and other administrative data depends on whether the data needs to be shared. This information can be stored in the server's local directory domain or in a shared directory domain.

#### Local Directory Domain

Every Mac OS X computer has a local directory domain. The administrative data in a local domain is only visible to applications and system software running on the same computer. It is the first domain consulted during operations like user login.

When a user logs into a Mac OS X computer, Open Directory searches the local directory domain for the user's record. If the local domain contains the user's record and the correct password is entered, the login process proceeds, and the user gains access to the computer.

After logging in, the user can choose "Connect to Server" from the Go menu to connect to a Mac OS X Server for file service. In this case, Open Directory on the server searches the server's local directory domain for the user's record. If the server's local domain has a record for the user and the correct password is entered, the server grants the user access to file services.

When setting up a new Mac OS X computer, its local directory domain is automatically created and populated with records, including a user record for the installer with the specified username, password, and other information like a unique ID and home directory location.

#### Shared Directory Domains

While Open Directory on any Mac OS X computer can store administrative data in the local directory domain, the true power of Open Directory lies in its ability to allow multiple Mac OS X computers to share administrative data by storing it in shared directory domains. When a computer is configured to use a shared domain, the administrative data in the shared domain is also visible to applications and system software running on that computer.

If Open Directory does not find a user's record in the local domain of a Mac OS X computer, it can search for the user's record in any shared domains to which the computer has access. For example, a user can log into both computers because the shared domain accessible from both computers contains a record for the user.

Shared domains typically reside on servers due to the critical nature of the data, such as user authentication. Servers often have enhanced security and reliability features, including uninterruptible power sources.

Shared directories can also be used to isolate network resources. For example, graphic artists might need high-performance computers, while copy center personnel can work on standard equipment. You can restrict access by setting up user records in two shared directory domains: one for high-performance computers and one for standard computers. When users log in to high-performance computers, their records in the Graphics directory domain are used for authentication. Similarly, when users log in to standard computers, their records in the Repro directory domain are used. A user whose record is in the Repro directory cannot log in to a high-performance computer, and vice versa.

#### Shared Data in Existing Directory Domains

Some organizations, such as universities and large corporations, maintain user information and other administrative data in directory domains on UNIX or Windows servers. Open Directory can be configured to search these non-Apple domains as well as shared Open Directory domains on Mac OS X Server systems.

### Search Policies

Each Mac OS X computer has a search policy that specifies which directory domains Open Directory can access and the order in which it searches them. Open Directory stops searching once it finds a matching record.

#### Search Policy Levels

- **Local Directory Only**: The simplest search policy consists only of the computer's local directory. Open Directory looks for user information and other administrative data only in the local directory domain.
- **Two-Level Search Policies**: If a server hosts a shared directory, all computers on the network can include the shared directory in their search policies. Open Directory first searches the local directory and then the shared directory if the information is not found locally.

### Access to Directory Services

Open Directory can access directory domains in various directory services, including:
- **Lightweight Directory Access Protocol (LDAP)**: An open standard commonly used in mixed environments and the native directory service for shared directories in Mac OS X Server version 10.3.
- **NetInfo**: The legacy directory service of Mac OS X and Mac OS X Server.
- **Active Directory**: The directory service of Microsoft Windows 2000 and 2003 servers.
- **Network Information System (NIS)**: A directory service of many UNIX servers.
- **BSD flat files**: The legacy directory service of UNIX systems.

### Discovery of Network Services

Open Directory can provide more than just administrative data; it can also provide information about available network services, such as file servers. Open Directory supports several service discovery protocols, including:
- **Rendezvous (Multicast DNS)**: Used for discovering file, print, chat, music sharing, and other network services.
- **AppleTalk**: The legacy protocol for discovering file, print, and other network services.
- **Service Location Protocol (SLP)**: An open standard for discovering file and print services.
- **Server Message Block (SMB)**: The protocol used by Microsoft Windows for file, print, and other services.

When Open Directory requests information about a user, service discovery protocols do not respond because they do not contain user information. The user information is collected from the directory domains.

### Summary

Open Directory simplifies the management and distribution of administrative data across a network, providing a centralized and efficient way to handle user and resource information. By leveraging shared directory domains and flexible search policies, Open Directory enhances the scalability and manageability of networked environments.