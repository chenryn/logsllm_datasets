# Nabs: A System for Detecting Resource Abuses via Characterization of Flow Content Type

## Authors
Kulesh Shanmugasundaram, Mehdi Kharrazi, Nasir Memon  
Polytechnic University, Brooklyn, NY 11201

## Abstract
Network administrators face a growing challenge in detecting and preventing the abuse of computing resources by both authorized and unauthorized users. Such abuses can range from running unauthorized applications to distributing unauthorized content. The proliferation of peer-to-peer networks and the widespread use of tunneling techniques make it increasingly difficult to detect these abuses and enforce security policies. This paper introduces Nabs, a system designed to characterize the content types of network flows based solely on payload data. By doing so, Nabs can identify resource abuses more robustly than traditional methods that rely on packet headers or other simple characteristics.

## 1. Introduction
The abuse of computing resources is a significant and growing problem. Network administrators must contend with various forms of abuse, including unauthorized use of network bandwidth, unauthorized application services, and the distribution of unauthorized content. These abuses can be perpetrated by malicious attackers, insiders, or even uninformed users.

### Traditional Defenses
The most common defenses against network abuses are firewalls and Intrusion Detection Systems (IDS). While IDSs can detect some types of abuses, they often fail to capture the essence of the abuse if it does not match a predefined set of signatures. Firewalls, which use port blocking to prevent unauthorized services, are more effective but can still be circumvented. For example, outbound connections, non-standard ports, and tunneling techniques can all bypass firewall rules.

### Challenges and Proposed Solution
Current state-of-the-art methods for abuse detection, such as port blocking and bandwidth throttling, are not always effective. Bandwidth usage monitoring, for instance, may penalize legitimate activities. Research has been conducted on identifying application types, but these methods often rely on weak port binding. Nabs, the system proposed in this paper, takes a different approach by characterizing the content type of network flows based on their payload. This method does not depend on packet header information, making it more robust against circumvention.

## 2. Overview of Nabs
Nabs is a tool designed to characterize the content types of network flows. This information can be used to improve resource provisioning, Quality of Service (QoS) policy development, traffic accounting, and billing. Additionally, Nabs can serve as an intrusion detection system, although this paper focuses on its application in detecting resource abuse.

### Components of Nabs
- **Flow Collection & Throttling**: Nabs collects and groups packets into flows based on a quintuple (Protocol, Source IP, Destination IP, Source Port, Destination Port). It uses libpcap and BPF filters to capture and filter network traffic.
- **Flow Characterization**: Once a flow accumulates a sufficient amount of payload (e.g., 16KB), it is characterized based on its statistical properties. The results are stored in a database.
- **Storage**: To manage storage requirements, Nabs summarizes the data without losing essential information.
- **User Interaction & Query Processing**: Users can interact with the system using a SQL-like query language to extract and analyze data. The system supports both continuous and instantaneous queries.

## 3. Flow Collection & Throttling
Flow characterization requires a minimum amount of payload per flow. Flows are buffered in a flow-table until the required payload is accumulated. To optimize memory usage, Nabs employs a throttling mechanism that prioritizes significant flows and discards insignificant ones. The system uses lossy counting, a streaming algorithm, to efficiently track flow rates and maintain a compact data structure.

## 4. Flow Characterization
This component determines the content type of each flow based on its payload. Statistical measures from the time and frequency domains are used to build a model that distinguishes between different content types. Key measures include mean, variance, autocorrelation, and entropy. Figure 2 illustrates the average entropy of data vectors from eight major content types, demonstrating the effectiveness of these measures.

---

This optimized version of the text is more structured, clear, and professional, with improved readability and coherence.