4.测试
Successfu1ly built 4e3936e36e3
Removing intermediate container 84095d6a71c2
Removing
Removing intermediate container 391a0b606082
Step 6:WORKDIR/etc/nginx
Removing intermediate container 6966fb517eed
var/log/nginx
Step5:voLuME/etc/nginx/sites-enabled /etc/nginx/certs
Removing intermediate container a0cob0ec6bcc
Step4:RUNchmod755/*.sh
Removing intermediate container 5c16bf1046aa
sudodocker run -d-Pnginx:stable
St
---> Running in a0c0b0ec6bcc
--->ab72d235e438
cep9：
-->8d3262eaf1b8
->4e3936e36e31
->Running in 84095d6a71c2
->Running in36d7b8f0e7cf
>
->Running in 6966fb517eed
e1c0b7bde8cf
：Running in 9f1e239daf52
666fb7e351fe
Running in
3b64e8cb7119
EXPOSE 443
intermediate
EXPOSE 80
查看内部的80端口被映射到本地的49193端口：
nginx:stable
IMAGE
391a0b606082
container 36d7b8f0e7cf
0.0.0.0:49192->443/tcp,0.0.0.0:49193->80/tcp
COMMAND
9f1e239daf52
"/run.sh"
CREATED
8 seconds ago
STATUS
/etc/nginx/conf.d
PORTS
Up 8 seconds
NAMES
---
## Page 103
net.ipv4.tcp_synack_retries =1
net.ipv4.tcp_timestamps=0
net.ipv4.tcp_max_syn_back1og=262144
net.ipv4.tcp_max_orphans=3276800
net.core.somaxconn = 262144
net.core.netdev_max_backlog=262144
net.core.wmem max=16777216
net.core.rmem_max=16777216
net.core.rmem default = 8388608
net.core.wmem_defau1t=8388608
net.ipv4.tcp_wmem = 409616384 4194304
net.ipv4.tcp_rmem=409687380 4194304
net.ipv4.tcp_window_scaling=
net.ipv4.tcp_sack
net.ipv4.tcp_max_tw_buckets=6000
kernel.shmall
kernel.core_uses_pid=
net.ipv4.ip_forward=
下面是一份常见的Nginx内核的优化参数：
最后，为了能充分发挥Nginx的性能，
Thank you for using nginx.
nginx.com.
Commercial supportis available at
For online documentation and support please refer to
working.Further configuration is required.
If you see this page,the nginx web server is successfully installed and
Welcome to nginx!
一
body
font-family:Tahoma,Verdana,Arial,sans-serif;
margin:0 auto;
width:35em;
I
4294967296
68719476736
65536
65536
0
1
可对系统内核参数做一些调整。
第11章Web服务器与应用
89
---
## Page 104
Tengine 镜像
90第二部分实战案例
#定义挂载的目录
RUN dpkg-i tengine_2.0.2-1_amd64.deb
WORKDIR/home/nginx
ENV DEB_BUILD_OPTIONS nocheck
RUN su nginx-c'mv packages/debian.
RUN su nginx-c'git clone https://github.com/alibaba/tengine.git
WORKDIR/home/nginx
#tengine安装的shell脚本
RUN adduser --disabled-login --gecos 'Tengine' nginx
#创建Nginx用户
你的应用程序发生不可思议的效果哦
#注意这里要更改系统的时区设置，
RUN echo"Asia/Shanghai"
libpcre3-dev git-core
RUN apt-get install -y build-essential debhelper make autoconf automake patch
MAINTAINER waitfish from dockerpool.com(PI:EMAIL)
#下面是一些创建者的基本信息
FROM sshd:dockerfile
#设置继承自我们创建的sshd镜像
1.Tengine Dockerfile
WORKDIR/home/nginx/tengine
#安装编译环境
#Lettheconatiner know thatthere is notty
net.ipv4.ip_1ocal_port_range = 1024 65000
net.ipv4.tcp_keepalive_time
net.ipv4.tcp_syn_retries=1
dpkg-reconfigure
install
94500000915000000927000000
-y dpkg-dev fakerootpbuilder gnupg dh-make libssl-dev
-f
1
，因为在Web应用中经常会用到时区这个系统变量，默认的ubuntu会让
noninteractive tzdata
/etc/timezone&&
=30
---
## Page 105
an hour
08c456536e69
0.0.0.0:49194->443/tcp,0.0.0.0:49195->80/tcp,
$ sudo docker ps
ff4650e77c53b174a10b4cd29533deffad889458f88d98c4443ac3654b01552a
$sudo docker run -d -P nginx:albb
启动一个容器，
4.测试
$sudo docker build -t nginx:albb.
ffd58545b787
wright
ff4650e77c53
CONTAINER ID
3.创建过程
/usr/sbin/nginx
/usr/sbin/sshd&
#!/bin/bash
$cat run.sh
2.查看run.sh脚本文件内容
CcP
EXPOSE
EXPOSE80
#定义输出端口
CMD ["/run.sh"]
#定义输出命令
RUN
ADDrun.sh /run.sh
#添加我们的脚本，并设置权限，这会覆盖之前放在这个位置的脚本
WORKDIR/etc/nginx
#定义工作目录
RUN echo"\ndaemon off;">>/etc/nginx/nginx.conf
#让Nginx运行在排Daemon模式
VOLUME
chmod755/*.sh
romantic_curie
443
["/data","/etc/nginx/sites-enabled","/var/log/nginx"]
0.0.0.0:49177->22/tcp,
0.0.0.0:49191->22/tcp,
并查看端口映射信息：
apache:ubuntu
nginx:albb
IMAGE
nginx:stable
COMMAND
0.0.0.0:49178->80/tcp
"/run.sh"
0.0.0.0:49192->443/tcp,0.0.0.0:49193->80/
"/run.sh"
CREATED
0.0.0.0:49196->22/tcp
3seconds ago
第11章
Aboutan hourago
STATUS
13 minutes ago
Web服务器与应用
jovial_galileo
PORTS
Up2seconds
UpAbout
furious
NAMES
Up13
---
## Page 106
进程和默认映射的端口：
92第二部分实战案例
tcp6
tcp
tcp
Proto Recv-Q Send-Q Local Address
Active Internet connections (only servers)
root@ff4650e77c53:/etc/nginx#netstat-tunlp
root
root
root
nginx
root
root
UID
root@ff4650e77c53:/etc/nginx#
$sudodocker exec -tiff4/bin/bash
可以使用docker
5.进人容器查看创建的容器信息
Thankyou for using tengine.
For online documentation and support please refer to
working.Further configuration is required.
If you see this page, the tengine web server is successfully installed and
Welcome to tengine!
Welcome to tengine!
返回的内容是淘宝版本的Nginx特有的页面：
$cur1127.0.0.1:49195
访问本地的49195端口进行测试：
body
font-family:Tahoma,Verdana, Arial,sans-serif;
margin:0 auto;
width:35em;
一
23
PID
PPIDCSTIME
14
11
exec 命令进入刚启动的 Tengine 容器，查看建立容器后默认运行的
0：：:22
00.0.0.0:22
00.0.0.0:80
015:09
015:09
015:09
015:09
15:09
TTY TIME CMD
ps-ef
sd00:00:00
00:00:00
00:00:00
00:00:00/bin/bash/run.sh
00:00:00
0.0.0.0:*
0.0.0.0:*
Foreign Address
:：:*
/bin/bash
/usr/sbin/sshd
0 nginx: master process /usr/sbin/nginx
LISTEN
LISTEN
LISTEN
State
PID/Program name
---
## Page 107
loaded modules:
-Wl,-z,relro"
http_spdy_module
stub_status_module
http_mp4_module
TLS SNI support enabled
built by gcc4.8.2(Ubuntu 4.8.2-19ubuntu1)
Tengine version:Tengine/2.0.3
root@ff4650e77c53:/etc/nginx# nginx
查看 Tengine的编译参数和模块特性：
var/run/nginx.lock--http-client-body-temp-path=/var/cache/nginx/client_temp
-with-http_sub_module
-with-http_ssl_module
ngx_http_geo_module (static)
ngx_http_realip_module (static)
ngx_http_limit_req_module (static)
ngx_http_limit_conn_module (static)
ngx_http_access_module(static)
ngx_http_auth_basic_module (static)
ngx_http_random_index_module
ngx_http_autoindex_module(static)
ngx_http_gzip_static_module (static)
ngx_http_static_module (static)
ngx_http_spdy_module (static)
ngx_http_upstream_module (static)
ngx_http_log_module(static)
ngx_http_core_module (static)
ngx_http_module
ngx_regex_module (static)
ngx_openssl_module (static)
ngx_proc_core_module (static)
ngx_procs_module (static)
ngx_epoll_module (static)
ngx_event_core_module (static)
ngx_events_module
ngx_syslog_module
ngx_dso_module (static)
ngx_conf_module (static)
ngx_errlog_module (static)
ngx_core_module (static)
--with-ipv6
module(static)
(static)
(static)
(static)
-with-mail
--prefix=/etc/nginx--sbin-path=/usr/sbin/nginx
--with-http_dav_module
--with-http_realip_module
(nginx/1.6.1)
(static)
-V
--with-http_flv_module
第11章Web服务器与应用
--with-http_addition_modul
--with-file-aio
--with
--with
--conf-
·
---
## Page 108
ngx_mail_smtp_module
ngx_mail_ssl_module (static)
ngx_mail_core_module (static)
ngx_mail_module (static)
ngx_http_not_modified_filter_module
ngx_http_range_body_filter_module (static)