netbios-ssn
Microsoft Windows netbios-ssn
10.0.10.207
443
http
Microsoft IIS httpd 10
IP address
Port
Protocol
Network service
265
APPENDIX D
Capsulecorp internal network penetration test report
10.0.10.207
445
microsoft-ds
Microsoft Windows Server 2008 R2 - 2012 
microsoft-ds
10.0.10.207
587
smtp
Microsoft Exchange smtpd
10.0.10.207
593
ncacn_http
Microsoft Windows RPC over HTTP 1
10.0.10.207
808
ccproxy-http
10.0.10.207
1801
msmq
10.0.10.207
2103
msrpc
Microsoft Windows RPC
10.0.10.207
2105
msrpc
Microsoft Windows RPC
10.0.10.207
2107
msrpc
Microsoft Windows RPC
10.0.10.207
3389
ms-wbt-server
Microsoft Terminal Services
10.0.10.207
5985
http
Microsoft HTTPAPI httpd 2 SSDP/UPnP
10.0.10.207
6001
ncacn_http
Microsoft Windows RPC over HTTP 1
10.0.10.207
6002
ncacn_http
Microsoft Windows RPC over HTTP 1
10.0.10.207
6004
ncacn_http
Microsoft Windows RPC over HTTP 1
10.0.10.207
6037
msrpc
Microsoft Windows RPC
10.0.10.207
6051
msrpc
Microsoft Windows RPC
10.0.10.207
6052
ncacn_http
Microsoft Windows RPC over HTTP 1
10.0.10.207
6080
msrpc
Microsoft Windows RPC
10.0.10.207
6082
msrpc
Microsoft Windows RPC
10.0.10.207
6085
msrpc
Microsoft Windows RPC
10.0.10.207
6103
msrpc
Microsoft Windows RPC
10.0.10.207
6104
msrpc
Microsoft Windows RPC
10.0.10.207
6105
msrpc
Microsoft Windows RPC
10.0.10.207
6112
msrpc
Microsoft Windows RPC
10.0.10.207
6113
msrpc
Microsoft Windows RPC
10.0.10.207
6135
msrpc
Microsoft Windows RPC
10.0.10.207
6141
msrpc
Microsoft Windows RPC
10.0.10.207
6143
msrpc
Microsoft Windows RPC
10.0.10.207
6146
msrpc
Microsoft Windows RPC
10.0.10.207
6161
msrpc
Microsoft Windows RPC
10.0.10.207
6400
msrpc
Microsoft Windows RPC
IP address
Port
Protocol
Network service
266
APPENDIX D
Capsulecorp internal network penetration test report
Appendix 3: Tools list
The following tools were used during the engagement:
 Metasploit framework—https://github.com/rapid7/metasploit-framework
 Nmap—https://nmap.org
 CrackMapExec—https://github.com/byt3bl33d3r/CrackMapExec
 John the Ripper—https://www.openwall.com/john
 Impacket—https://github.com/SecureAuthCorp/impacket
 Parsenmap—https://github.com/R3dy/parsenmap
 Ubuntu Linux—https://ubuntu.com
 Exploit-DB—https://www.exploit-db.com
 Mssql-cli—https://github.com/dbcli/mssql-cli
 Creddump—https://github.com/moyix/creddump
 Mimikatz—https://github.com/gentilkiwi/mimikatz
Appendix 4: Additional references
The following references pertain to security guidelines and best practices around net-
work services observed within the Capsulesorp environment:
 Apache Tomcat
– http://tomcat.apache.org/tomcat-9.0-doc/security-howto.html
– https://wiki.owasp.org/index.php/Securing_tomcat
 Jenkins
– https://www.jenkins.io/doc/book/system-administration/security/
– https://www.pentestgeek.com/penetration-testing/hacking-jenkins-servers-
with-no-password
 Microsoft SQL Server
– https://docs.microsoft.com/en-us/sql/relational-databases/security/secur-
ing-sql-server
10.0.10.207
6401
msrpc
Microsoft Windows RPC
10.0.10.207
6402
msrpc
Microsoft Windows RPC
10.0.10.207
6403
msrpc
Microsoft Windows RPC
10.0.10.207
6404
msrpc
Microsoft Windows RPC
10.0.10.207
6405
msrpc
Microsoft Windows RPC
10.0.10.207
6406
msrpc
Microsoft Windows RPC
10.0.10.207
47001
http
Microsoft HTTPAPI httpd 2 SSDP/UPnP
10.0.10.207
64327
msexchange-
logcopier
Microsoft Exchange 2010 log copier
IP address
Port
Protocol
Network service
267
APPENDIX D
Capsulecorp internal network penetration test report
 Active Directory
– https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/
security-best-practices/best-practices-for-securing-active-directory
 Ubuntu Linux
– https://ubuntu.com/security
268
appendix E
Exercise answers
Exercise 2.1: Identifying your engagement targets
This exercise doesn’t necessarily have a correct answer. But the result after complet-
ing it should be a list of IP addresses in your scope of IP address ranges that have
responded to your host-discovery probes. These IP addresses should be in a file
called targets.txt located in your hosts directory. If you are performing your
engagement against the Capsulecorp Pentest environment, you should have the
following IP addresses in your targets.txt file:
172.28.128.100
172.28.128.101
172.28.128.102
172.28.128.103
172.28.128.104
172.28.128.105 
Your file tree should look like this:
.
 capsulecorp
 discovery
 hosts
 targets.txt
 ranges.txt
 services
 documentation
 logs
 screenshots
 focused-penetration
8 directories, 2 files
269
APPENDIX E
Exercise answers
Exercise 3.1: Creating protocol-specific target lists
After performing service discovery against your targets.txt file, you should be able to
produce a list of all listening network services on those hosts. If you are doing this on
a real enterprise network with thousands of IP addresses, you should expect to see
upward of tens of thousands of individual services. This is why using the parsenmap.rb
script to create a CSV file to import into a spreadsheet program is a really good idea. 
 For the Capsulecorp Pentest network, this isn’t necessary because there are only a
few dozen services listening. Use grep to find all the HTTP servers, and then put their
IP addresses into a file called web.txt. Find all the Microsoft SQL servers, and place
them in a file called mssql.txt. Do this for all the services you observe. If you’re using
the Capsulecorp Pentest environment, you should now have a tree similar to this:
.
 capsulecorp
 discovery
 hosts
 mssql.txt
 targets.txt
 web.txt
 windows.txt
 ranges.txt
 services
 all-ports.csv
 full-sweep.xml
 documentation
 logs
 screenshots
 focused-penetration
8 directories, 7 files
For complete output of the full-sweep.xml file, see listing 3.11 in chapter 3.
Exercise 4.1: Identifying missing patches
This results of this exercise will vary depending on your target environment. If you’re
using the Capsulecorp Pentest environment, you should find that the tien.capsulecorp
.local system is missing the MS17-010 patch.
Exercise 4.2: Creating a client-specific password list
Here is an example of what a client-specific password list could look like for Capsule-
corp. As you can see, the word Capsulecorp could be replaced with CompanyXYZ or the
name of the organization for which you’re conducting a penetration test.
~$ vim passwords.txt
 1 
 2 admin
Listing E.1
Capsulecorp password list
270
APPENDIX E
Exercise answers
 3 root
 4 guest
 5 sa
 6 changeme
 7 password #A
 8 password1
 9 password!
10 password1!
11 password2019
12 password2019!
13 Password
14 Password1
15 Password!
16 Password1!
17 Password2019
18 Password2019!
19 capsulecorp #B
20 capsulecorp1
21 capsulecorp!
22 capsulecorp1!
23 capsulecorp2019
24 capsulecorp2019!
25 Capsulecorp
26 Capsulecorp1
27 Capsulecorp!
28 Capsulecorp1!
29 Capsulecorp2019
30 Capsulecorp2019!                    
~                            
NORMAL > ./passwords.txt >  < text <  3% <  1:1 
Exercise 4.3: Discovering weak passwords
The output of this exercise will be greatly impacted by your service discovery. If your
target network has no listening services, then you are not likely to discover any with
weak passwords. That said, you were hired to conduct a network pentest, so there are
probably plenty of network services to target for password guessing. If you are target-
ing the Capsulecorp Pentest environment, you should find these: 
 MSSQL credentials sa:Password1 on gohan.capsulecorp.local
 Windows credentials Administrator:Password1! on vegeta.capsulecorp.local
 Apache Tomcat credentials admin:admin on trunks.capsulecorp.local
Exercise 5.1: Deploying a malicious WAR file
If you’ve managed to successfully compromise the trunks.capsulecorp.local server,
then you should be able to easily list the contents of C:\. If you do, you should see
something that looks like figure E.1. If you open the flag.txt file, you’ll see this:
wvyo9zdZskXJhOfqYejWB8ERmgIUHrpC
271
APPENDIX E
Exercise answers
Exercise 6.1 Stealing SYSTEM and SAM registry hives