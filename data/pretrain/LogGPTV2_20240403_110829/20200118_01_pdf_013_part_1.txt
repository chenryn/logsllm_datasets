高级SQL提升生产力
阿里云
digoal
目录
• 物化视图 • skip locked
• 实时清洗数据 • distinct on
• 数据采样 • 秒杀
• 数据加密 • 批量sql
• 数据脱敏 • 数据分析
• 数据去重 • 流计算
• 字段范围加速查询 • rule、异步消息
• 行级安全 • 线性回归、预测
• WITH ORDINALITY • 化学分析
• LATERAL • 机器学习
• GROUPING SETS, CUBE and ROLLUP , grouping • update|delete limit
• 窗口 • prepare 动态sql in function
• cte，递归
物化视图
• https://www.postgresql.org/docs/devel/static/sql-creatematerializedview.html
• 预计算，支持索引
CREATE MATERIALIZED VIEW [ IF NOT EXISTS ] table_name
[ (column_name [, ...] ) ]
[ WITH ( storage_parameter [= value] [, ... ] ) ]
[ TABLESPACE tablespace_name ]
AS query
[ WITH [ NO ] DATA ]
• 刷新物化视图
REFRESH MATERIALIZED VIEW [ CONCURRENTLY ] name
[ WITH [ NO ] DATA ]
实时数据清洗、转换
• https://github.com/digoal/blog/blob/master/201706/20170619_02.md
• rule
• 创建来源表结构
postgres=# create table nt(id int, c1 numeric, c2 numeric);
CREATE TABLE
• 创建目标表结构
postgres=# create table nt_geo (id int, geo geometry);
CREATE TABLE
• 对来源表创建规则或触发器，例如
postgres=# create rule r1 as on insert to nt do instead insert into nt_geo values (NEW.id,
ST_MakePoint(NEW.c1,NEW.c2));
CREATE RULE
• 使用来源数据结构，将数据插入来源数据表
postgres=# insert into nt values (1,1,1);
INSERT 0 1
实时数据清洗、转换
• rule
• 源表，JSONB非结构化
postgres=# create table t1 (id int, info text, j jsonb);
• 目标表，结构化
postgres=# create table t2 (id int, info text, c1 int, c2 int, c3 text);
• 在源表创建规则，自动将JSONB非结构化数据，转换为结构化数据插入
postgres=# create rule r1 as on insert to t1 do instead insert into t2 values (NEW.ID, NEW.INFO, ((NEW.J)-
>>'c1')::int, ((NEW.j)->>'c2')::int, (NEW.j)->>'c3');
postgres=# insert into t1 values (1,'test',jsonb '{"c1":1, "c2":2, "c3":"text"}');
postgres=# select * from t1;
(0 rows)
postgres=# select * from t2;
id | info | c1 | c2 | c3
----+------+----+----+------
1 | test | 1 | 2 | text
(1 row)
数据采样
• 使用采样算法
• 行级随机采样(BERNOULLI(百分比))
select * from test TABLESAMPLE bernoulli (1);
• 块级随机采样(SYSTEM(百分比))
select * from test TABLESAMPLE system (1);
• https://github.com/digoal/blog/blob/master/201706/20170602_0
2.md
• 采样应用：估值计算、统计信息、测试环境
• https://github.com/digoal/blog/blob/master/201709/20170911_0
2.md
数据加密
• pgcrypto
• https://www.postgresql.org/docs/10/static/pgcrypto.html
• 加密后的查询加速（等值查询）
• 加密
• 对称、非对称、混淆（使用非对称加密需要交换的对称加密密钥，然后
使用对称加密）加密
• https://github.com/digoal/blog/blob/master/201802/20180226_01.md
字段加密
digoal=# create extension pgcrypto;
• 可逆加密
digoal=# insert into userpwd (userid,pwd) values (1, crypt('this is a pwd
source', gen_salt('bf',10)));
digoal=# create table userpwd(userid int8 primary key, pwd text);
CREATE TABLE
• 不可逆加密
• https://github.com/digoal/blog/blob/master/201607/20160727_02.md
• https://github.com/digoal/blog/blob/master/201711/20171127_02.md
数据脱敏
• https://github.com/digoal/blog/blob/master/201706/20170602_0
2.md
数据去重
• https://github.com/digoal/blog/blob/master/201706/20170602_0
1.md
• 单列去重
• 多列去重
• 行去重
• 多列混合去重
• 窗口、行号、= any(array())、数组
去重最常用SQL
delete from tbl where ctid = any (array (
select ctid from (select ctid,row_number() over (partition by c1
order by ts desc) as rn from tbl) t where rn<>1
));
多字段范围检索加速
• 范围查询，联合索引效果并不好。
• 使用range类型，GIST索引加速。(或者第11课讲到的cube)
• 开始时间，结束时间范围
• 经纬度范围
• DNS匹配（开始IP，结束IP 范围）
• https://github.com/digoal/blog/blob/master/201206/20120607_01.md
VPD(RLS)
• https://github.com/digoal/blog/blob/master/201602/20160203_03.md
• https://github.com/digoal/blog/blob/master/201504/20150409_01.md
• https://www.postgresql.org/docs/11/sql-createpolicy.html
create table test (id int, r name, info text, crt_time timestamp);
insert into test values (1,'digoal','test',now());
insert into test values (2,'r3','test123',now());
create role r3 login;
grant select on test to r3;
alter table test enable row level security ;
\c postgres r3
postgres=> explain verbose select * from test;
QUERY PLAN
--------------------------------------------------------------
Seq Scan on public.test (cost=0.00..19.45 rows=3 width=100)
Output: id, r, info
Filter: (test.r = CURRENT_USER)
(3 rows)
目录
• WITH ORDINALITY • 流计算
• LATERAL • rule、异步消息
• GROUPING SETS, CUBE and • 线性回归、预测
ROLLUP , grouping
• 化学分析
• 窗口
• 机器学习
• cte，递归
• update|delete limit
• skip locked
• prepare 动态sql in function
• distinct on
• 秒杀
• 批量sql
• 数据分析
https://github.com/digoal/blog/blob/master/201307/20130730_01.md
db1=> select * from unnest(array[100,200,111,333]) with ordinality as t (v,i); -- srf函数的行号输出
v | i
-----+---
100 | 1
200 | 2
111 | 3
333 | 4
(4 rows)
db1=> select t1.i, t1.v, t2.v from
(select * from unnest(array[100,200,111,333]) with ordinality as t (v,i) ) t1
join
(select * from unnest(array['b','c','d','e']) with ordinality as t (v,i) ) t2
using (i);
i | v | v
---+-----+---
1 | 100 | b
2 | 200 | c
3 | 111 | d
4 | 333 | e
(4 rows)
create table a (
sid int, -- 传感器ID
ts timestamp[], -- 时间戳数组
s1_val float4[], -- 维度1值数组
s2_val float4[], -- 维度2值数组
tsr tsrange -- 范围
);
db1=# select unnest(array[100,200,111,333]) , unnest(array['b','c','d','e']) ;
unnest | unnest
--------+--------
100 | b
200 | c
111 | d
333 | e
(4 rows)
• db1=# select unnest(array[100,200,111,333]) , unnest(array['b','c','d','e','f']) ;
• unnest | unnest
• --------+--------
• 100 | b
• 200 | c
• 111 | d
• 333 | e
• | f
• (5 rows)
目录
• WITH ORDINALITY • 流计算
• LATERAL • rule、异步消息
• GROUPING SETS, CUBE and • 线性回归、预测
ROLLUP , grouping
• 化学分析
• 窗口
• 机器学习
• cte，递归
• update|delete limit
• skip locked
• prepare 动态sql in function
• distinct on
• 秒杀
• 批量sql
• 数据分析
• https://github.com/digoal/blog/blob/master/201210/20121008_0
1.md
目录
• WITH ORDINALITY • 流计算
• LATERAL • rule、异步消息
• GROUPING SETS, CUBE and • 线性回归、预测
ROLLUP , grouping
• 化学分析
• 窗口
• 机器学习
• cte，递归
• update|delete limit
• skip locked
• prepare 动态sql in function
• distinct on
• 秒杀
• 批量sql
• 数据分析
多维度透视，一条sql搞定
• https://github.com/digoal/blog/blob/master/201505/20150526_02.md
目录
• WITH ORDINALITY • 流计算
• LATERAL • rule、异步消息
• GROUPING SETS, CUBE and • 线性回归、预测
ROLLUP , grouping
• 化学分析
• 窗口
• 机器学习
• cte，递归
• update|delete limit
• skip locked
• prepare 动态sql in function
• distinct on
• 秒杀
• 批量sql
• 数据分析
• 窗口
• 窗口指计算的数据区间，指与当前row在同一个分组中的数据。
• 帧
• 帧也是指计算的数据区间，但是是在分组内的指定，可以根据当前row设定辐射半径，或者当前row的前后分
开设置辐射范围。
• 窗口函数
• 帧函数
• https://www.postgresql.org/docs/current/functions-aggregate.html
• https://www.postgresql.org/docs/current/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS
窗口、帧查询
• 窗口查询语法
• https://www.postgresql.org/docs/devel/static/sql-expressions.html#SYNTAX-WINDOW-FUNCTIONS
• https://github.com/digoal/blog/blob/master/201802/20180224_01.md
• 窗口函数
• https://www.postgresql.org/docs/devel/static/functions-window.html
• 聚合函数
• https://www.postgresql.org/docs/devel/static/functions-aggregate.html
窗口、帧查询例子
• 与第一名分差
• select id, first_value(score) over(partition by sub order by score desc) - score, score, sub from t order by sub,id;
• 每门课程排名
• select id,sub,score,rank() over (partition by sub order by score desc) from t order by sub,id;
• 滑窗分析-每条记录附近10(11)条记录的平均值
• select id,class,score,avg(score) over (partition by class rows between 5 preceding and 5 following) from t order by
class,id;
• 滑窗分析-每一天相比前一天的新增UV，最近7天新增UV
• SELECT date, (# hll_union_agg(users) OVER two_days) - (# lag(users) over (ORDER BY date ASC)) AS new_uniques
FROM daily_uniques WINDOW two_days AS (ORDER BY date ASC ROWS 1 PRECEDING);
• SELECT date, # hll_union_agg(users) OVER seven_days FROM daily_uniques WINDOW seven_days AS (ORDER BY
date ASC ROWS 6 PRECEDING);
• 数据去重
• delete from tbl where ctid = any (array(
• select ctid from
• (select ctid,row_number() over (partition by id order by crt_time desc) as rn from tbl) t
• where t.rn<>1
• ));
找到数据关键点-高潮、尿点、低谷
• https://github.com/digoal/blog/blob/master/201612/20161203_01.md
• query 5
• https://github.com/digoal/blog/blob/master/201612/20161203_01.md