 1
BTAS (dynamic)
FAS (dynamic)
Direct path
BTAS (static)
FAS (static)
 10
 100
Update interval (min)
 1000
Figure 14: Comparing pruning algorithms against best-case
performance.
when simply picking the ﬁrst of the two. Still, the difference is not
dramatic.
We also note that the performance of the static versions of the
pruning algorithms are nearly identical, and are slightly worse than
using the direct path (by ≤ 1%) when averaged over all pairs of
nodes. As discussed above, Akamai optimizes only the source part
of the one-hop path, and thus may sometimes direct clients to edges
that are along slower one-hop paths than the direct path. Since the
static versions of these algorithms cannot “double-check” Akamai,
they may suffer a performance hit by sticking with their original
decision to always use one-hop paths.
6. DISCUSSION AND RELATED WORK
In this section, we discuss several issues relevant to our study
and present work related to topics covered in this paper.
6.1 Discussion
Akarouting. Akamai has formed a private, proprietary network
measurement system and overlay network. One goal of this sys-
tem is to improve download speeds by using its network measure-
ments to ﬁnd “high-speed” Internet paths over which to transfer
content within the network. In addition, Akamai applies one-hop
source routing to transfer content from customer origin servers,
e.g., NYTimes.com to edge-servers, a technique they call Akarout-
ing [7]. The fundamental difference between Akarouting and our
approach is the following: we are using Akamai’s client-to-server
redirections to locate and utilize potentially high-quality detouring
points in a separate overlay network.
Additionally, it is important to note that the Akamai-driven one-
hop source routes in our experiments are not routed through the
proprietary Akamai-owned network. Our ping and trace-route mea-
surements conﬁrm that the routes from PL nodes to Akamai edge-
servers take “public” Internet paths available to everybody.
“Free riding” on Akamai. It is very possible that Akamai, or
any other CDN, might not be excited by the fact that third parties
are exploiting the CDNs’ measurements for their own purposes.
However, it is important to realize that the load placed on the Aka-
mai DNS infrastructure by our proposed technique, even in the
case of larger-scale deployment by overlay networks, will proba-
bly be negligible compared to the load that this infrastructure is
already experiencing from its “regular” clients. This is because the
Akamai CDN hosts some of the most popular web enterprises and
keeps small TTL values for an edge server’s DNS entries. Thus,
the “regular” load placed on low-level Akamai DNS servers is al-
ready very high. The implication is that the proposed technique
should not jeopardize Akamai’s performance. Moreover, we be-
lieve that any attempt to detect the “free-riding” nodes might face
non-negligible false negatives and positives, thus unnecessarily de-
grading the “regular” clients’ performance. Finally, it is important
to understand that the proposed techniques do not require the Aka-
mai edge servers to reply to pings. Although we indeed used pings
to verify the correlation between network latencies and Akamai
redirections, they are not required for conducting Akamai-driven
source routing.
The implications of widespread adoption. Finally, one con-
cern is that if the approach is successful and widely followed, then
this might affect the performance of the network paths that Akamai
identiﬁes as “good.” For example, if all clients from a particular
domain use Akamai’s recommendations in precisely the same way,
previously uncongested paths may become congested within a short
time period. However, we do not expect this to be the common
case, since different overlay nodes can choose to query Akamai’s
DNS servers for any of the large number of hosted web sites (e.g.,
The New York Times vs. Amazon). As explained in Section
3.2, different edge servers typically host different web sites. As
a result, overlay nodes from the same domain will have different
“views” of the network, which naturally helps to spread the trafﬁc
load along different network paths.
6.2 Related Work
There have been a number of studies on the use, effectiveness
and impact of content distribution networks.
In an early work,
Gadde et al. [11] analyze the effectiveness of interior web caches
and CDNs based on an analytical model of caching behavior. Two
recent studies conﬁrm that CDNs reduce average download response
times, but that DNS redirection techniques add noticeable overhead
due to DNS latency [19, 21]. In [20] the authors examined how
content distribution servers improved latency when compared to
throughput from the origin servers. Johnson et al. [16] assessed
the degree to which two different CDNs optimally redirect requests
among their mirrors, and argue that these CDNs appeared to use
the DNS mechanisms not necessarily to select optimal servers, but
to avoid selecting bad ones. Krishnamurthy et al. [21] do an exten-
sive study on the use of CDNs and propose a methodology to study
client-perceived performance. Saroiu et al. [31] characterize four
content delivery systems, including Akamai, based on traces col-
lected at a university’s borders routers. In their study Akamai ap-
pears as the smallest bandwidth consumer (0.2%), with Gnutella,
Kazaa and WWW trafﬁc consuming near 60% of the remaining
bandwidth. In addition to revealing and understanding CDN be-
havior, our research enables clients of other networks to reuse the
measurements made by CDNs for their own purposes.
Some previous work has addressed other issues with DNS-based
control, particularly in the context of server selection in CDNs.
Shaikh et al. [35] evaluate the impact of DNS-based server selec-
tion on DNS; the authors ﬁnd that extremely low TTL values (on
the order of seconds) can adversely affect latency. In a related work,
Jung et al. [17] show that the most common values for TTL should
not greatly increase DNS-related wide-area network trafﬁc. Stud-
ies by Shaikh et al. [35] and Mao et al. [25] found that clients are
often not close in network topology to the name servers they use,
questioning the accuracy of server selection based on IP address.
No such problem exists with our scheme because clients request
DNS translation directly, and not via a local DNS server.
CDN-driven detouring is based on, and related to overlay rout-
ing systems that attempt to improve a client’s reliability and perfor-
mance. Our work is the ﬁrst one to propose relying on CDNs’ mea-
surements to locate and utilize quality Internet paths without per-
forming extensive path probing or monitoring. The Detour study
[33] suggested that this could be accomplished by routing via in-
termediate end systems. The Resilient Overlay Network (RON)
project demonstrated this to be the case in a small-scale overlay [5].
This, however, required background monitoring that is not scalable
and therefore limits the approach to communication among a rel-
atively small set of nodes. The solution proposed in [36] relies
on end-to-end probing of the overlay paths and the inference of the
loss probabilities on the underlying physical path segments, which
suffers from similar scalability limitations.
In order to limit the resource requirement for overlays, more re-
cent studies have focused on reducing the end-to-end measurement
needed to select overlay paths. In [28], the authors propose a rout-
ing underlay dedicated to topology probing. With the help of this
underlay, one can use inferred AS path information to construct
disjoint paths between communicating nodes. The potential prob-
lem of this method is the accuracy of AS path inference. For in-
stance, [25] showed that AS path inference can often be much less
accurate than expected. Gummadi et al. [13] select relay nodes by
randomly choosing k overlay nodes (random-k) and selecting the
one with the best performance. With a small k, there is clearly the
risk that random selection, while avoiding outages, will discard a
good relay node. Indeed, the key difference between the random-k
and Akamai-driven one-hop source routing is the former is intended
to improve system’s reliability by avoiding network outages, while
the goal of our scheme is to improve clients’ performance by select-
ing and hopping over quality (low-latency) paths as recommended
by Akamai.
MONET looks to increase web site availability by taking advan-
tage of redundant client-to-web-server paths whose failure modes
are expected to be largely independent. Clients contact web sites
via a local MONET proxy that is multi-home with multiple lo-
cal interfaces. MONET increases the number of alternative paths
through an overlay network of peer proxies that can probe a given
origin server using a TCP SYN by request [6]. Undoubtedly, CDN-
driven detouring has the potential to improve the performance of
the above systems; not only by more efﬁciently avoiding network
outages and hot spots, but by eliminating the need to probe a num-
ber of Internet paths, thus reducing the TCP SYN stress placed on
web servers.
In another closely related work, Fei et al. [10] use AS-level path
information inferred from traceroute to reduce the size of the
candidate set for one-hop routing. The goal is to limit the overhead
in selecting middle hops by examining only nodes along paths be-
tween the origin and destination that diverge in the AS-level path
as early as possible. While able to avoid performance degradation
over direct paths, it is unclear how the proposed technique could
be extended to online, dynamic selection of middle nodes. In addi-
tion, the proposed heuristic normally yields a large number of po-
tential middle nodes (up to 50) which, due to the coarse resolution
of AS-level path disjointness, may not include good candidates.
CDN-driven detouring typically results in a very small number of
candidates selected based on measurements performed by the CDN
as part of its normal operation.
Finally, our work is inspired by tools like Sting [32], T-BIT [26],
and King [14], which use existing protocols “in unanticipated ways
to obtain results that were previously intractable [14].”
7. CONCLUSIONS
In this paper, we performed an extensive measurement study
of the Akamai CDN; the goal was to determine how one can in-
fer and utilize quality, short time-scale information regarding net-
work conditions without the cost of extensive network measure-
ment. By concurrently measuring network paths and monitoring
the frequently refreshed low-level Akamai DNS server tables, we
showed that: (i) Akamai-server redirections strongly correlate with
network conditions on the paths between clients and servers; more
than 70% of paths chosen by Akamai are among the best 10% of
the measured network paths. (ii) For a given client, the correla-
tion level predominantly depends on the inter-redirection frequency
of the corresponding low-level Akamai DNS server. (iii) Due to
low redirection frequencies, clients from South America experi-
ence correlation levels that are below that achievable by a random
or round-robin path selection. (iv) Because Akamai customers are
heterogeneously hosted on the edge servers, all investigated clients
see a large number of servers (paths) for at least one of the cus-
tomers. (v) CDN services that utilize network measurements and
global server deployment can signiﬁcantly outperform traditional
web content distribution that use load-balancing server farms in a
few data centers.
To provide a sample application, we studied the potential for uti-
lizing Akamai redirections to drive one-hop source routes (i.e., de-
tours) in a large-scale overlay network. By concurrently measuring
and comparing Akamai-driven one-hop with direct paths between
nodes scattered around the globe, we show that (i) in more than
50% of investigated scenarios, it is better to route through the nodes
“discovered” by Akamai than to use direct paths. (ii) in 25% of
investigated scenarios, a better-than-direct path can be utilized by
always following Akamai redirections at the source. (iii) The vast
majority of Akamai-driven paths between Asia and Europe belong
to the above category; in addition to avoiding local hot spots, they
exploit rich Akamai “proxy” infrastructure placed in between the
two — e.g., in the US. (iv) Other nodes can apply simple, low-
overhead techniques to decide whether to stick with the direct path,
or to draft behind Akamai. We conclude by noting that Akamai is
only one of many CDNs; such networks are a great resource that
can be exploited to obtain “a global Internet weather-report ser-
vice” for little to no cost.
8. REFERENCES
[1] Akamai and loral cyberstar alliance.
http://www.akamai.com/en/html/about/
press/press123.html.
[2] Kazaa. http://www.kazaa.com/.
[3] Planetlab. http://www.planet-lab.org/.
[4] Akamai. Akamai CDN. http://www.akamai.com.
[5] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris.
Resilient overlay networks. In ACM SOSP, Alberta, Canada,
October 2001.
[6] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Rao.
Improving web availability for clients with MONET. In
NSDI, Boston, MA, May 2005.
[7] C. Bornstein, T. Canﬁeld, and G. Miller. Overlay routing
networks (Akarouting), 2002. http://www-math.mit.
edu/steng/18.996/lecture9.ps.
[8] C. Bornstein, T. Canﬁeld, G. Miller, and S. Rao. Optimal
route selection in a content delivery network. US Patent
Application 20020163882.
[9] J. Dilley, B. Maggs, J. Parikh, H. Prokop, and R. Sitaraman.
Globally distributed content delivery. IEEE Internet
Computing, 6(5):50–58, September 2002.
[10] T. Fei, S. Tao, L. Gao, and R. Guerin. How to select a good
alternate path in large peer-to-peer systems? In IEEE
INFOCOM, Barcelona, Spain, April 2006.
[11] S. Gadde, J. Chase, and M. Rabinovich. Web caching and
content distribution: a view from the interior. In WCW,
Boston, MA, June 2000.
[12] P. Gilmore. OARtech, 2001.
http://www.osc.edu/oarnet/oartech/
presents/oarnet/11apr2001.ppt.
[13] K. Gummadi, H. Madhyastha, S. Gribble, H. Levy, and
D. Wetherall. Improving the reliability of Internet paths with
one-hop source routing. In USENIX OSDI, San Francisco,
CA, December 2004.
[14] K. Gummadi, S. Saroiu, and S. Gribble. King: Estimating
latency between arbitrary Internet end hosts. In ACM IMW,
Marseille, France, November 2002.
[15] A. Habib and J. Chuang. A measurement-based analysis of
residential multihoming. In IEEE INFOCOM, poster session,
Miami, FL, March 2005.
[16] K. Johnson, J. Carr, M. Day, and M. Kaashoek. The
measured performance of content distribution networks. In
WCW, Lisbon, Portugal, May 2000.
[17] J. Jung, E. Sit, H. Balakrishnan, and R. Morris. DNS
performance and the effectiveness of caching. IEEE/ACM
Transactions on Networking, 10(5):589–603, October 2002.
[18] J. Kangasharju, K. Ross, and J. Roberts. Performance
evaluation of redirection schemes in content distribution
networks. Computer Communications, 24(2):207–214,
February 2001.
[19] M. Koletsou and G. Voelker. The Medusa proxy: A tool for
exploring user-perceived web performance. In WCW,
Boston, MA, June 2001.
[20] B. Krishnamurthy and C. Wills. Analyzing factors that
inﬂuence end-to-end web performance. In WCW,
Amsterdam, Netherlands, April 2000.
[21] B. Krishnamurthy, C. Wills, and Y. Zhang. On the use and
[25] Z. Mao, C. Cranor, F. Douglis, M. Rabinovich,
O. Spatscheck, and J. Wang. A precise and efﬁcient
evaluation of the proximity between web clients and their
local DNS servers. In USENIX Annual Technical
Conference, Monterrey, CA, June 2002.
[26] A. Medina, M. Allman, and S. Floyd. Measuring the
evolution of transport protocols in the Internet. ACM
SIGCOMM Computer Communication Review, 35(2):37–52,
April 2005.
[27] Mirror Image. Mirror image CDN.
http://www.mirror-image.net.
[28] A. Nakao, L. Peterson, and A. Bavier. A routing underlay for
overlay networks. In ACM SIGCOMM, Karlsruhe, Germany,
August 2003.
[29] North American Network Operators’ Group. NANOG
mailing list.
http://www.nanog.org/mailinglist.html,
1999,2000.
[30] J. Padhye, V. Firoiu, D. Towsley, and J. Kurose. Modeling
TCP Reno performance: A simple model and its empirical
validation. IEEE/ACM Transactions on Networking,
8(2):133–145, April 2000.
[31] S. Saroiu, K. Gummadi, R. Dunn, S. Gribble, and H. Levy.
An analysis of Internet content delivery systems. In USENIX
OSDI, Boston, MA, December 2002.
[32] S. Savage. Sting: a TCP-based measurement tool. In USENIX
Annual Technical Conference, Boulder, CO, October 1999.
[33] S. Savage, A. Collins, E. Hoffman, J. Snell, and T. Anderson.
The end-to-end effects of Internet path selection. In ACM
SIGCOMM, Vancouver, British Columbia, September 1999.
performance of content distribution networks. In ACM IMW,
San Francisco, CA, November 2001.
[34] SAVVIS. Digital island CDN.
http://www.savvis.net.
[22] F. Leighton and D. Lewin. Global hosting system. US Patent
[35] A. Shaikh, R. Tewari, and M. Agrawal. On the effectiveness
No. 6,108,703.
[23] LimeLight Networks. Limelight networks CDN.
http://www.limelightnetworks.com.
[24] R. Mahajan. How Akamai works? http://www.cs.
washington.edu/homes/ratul/akamai.html.
of DNS-based server selection. In IEEE INFOCOM,
Anchorage, AK, April 2001.
[36] C. Tang and P. K. McKinley. A distributed multipath
computation framework for overlay network applications.
Technical Report MSU-CSE-04-18, Michigan State
University, May 2004.