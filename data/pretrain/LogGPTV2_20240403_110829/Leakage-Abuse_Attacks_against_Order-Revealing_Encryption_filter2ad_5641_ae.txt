names that are both longer than average and quite rare). Of
course, even for these long and rare names, a preﬁx of the
name is nevertheless apparent to attackers.
Figure 7 summarizes the inference attack’s recovery rates
for birthdates and ZIP codes, for b = 3 and b = 1. The
attacks are much more accurate with b = 1. With b = 3
we only recover about 1.5% more ZIP codes than with the
non-crossing attack. Our accuracy for birthdates with b = 3
does not improve compared to the non-crossing attack. With
b = 1 the attack performed well for birthdates, recovering
more than 90% of records and nearly 70% of unique values.
This attack performed more modestly on ZIP codes, but we
still recovered about 12% of the ZIP code records and 8%
of the unique values. The BCLO leakage by itself revealed,
on average, 36% of the plaintext for ZIP codes and 31% for
birth dates.
That our attack performs well with b = 1 is surprising
because the probability that the correct plaintext is in the
computed window is (roughly) an inverse exponential of b.
When b = 1 the success probability of their lower-bound
attack should ostensibly be only about 0.3 for each ciphertext,
Raw, b = 1
Unique, b = 1
Raw, b = 3
Unique, b = 3
Birthdates
91
70
0
0
ZIP codes
12
9
4
3
Figure 7: Raw and unique recovery rates for birthdates and ZIP
codes encrypted with BCLO. The value b refers to the window width
discussed above.
but this was clearly not the case in our experiments. The
probability of success for the attack in [6] is, however, only
analyzed for uniformly-sampled messages, and so they may
not be predictive for the non-uniform birthdate and ZIP code
distributions.
VI. ATTACKING THE CLWW SCHEMES
Our results show that the BCLO scheme’s additional leak-
age represents a signiﬁcant threat to plaintext conﬁdentiality
for real datasets. We now turn to suggestions by Chenette,
Lewi, Weis, and Wu (CLWW) to provide ORE and OPE that
they prove leak less than the BCLO scheme, yet remains
practical [12]. We will test this empirically.
The CLWW ORE scheme. In [12] the authors construct a
new ORE scheme. As with BCLO, we will for brevity omit
the details of the CLWW scheme; our attacks will only abuse
its leakage proﬁle. Towards that proﬁle, for two equal-length
bit strings x, y let inddiff(x, y) be the index of the ﬁrst bit that
differs between x and y. If x = y then inddiff(x, y) outputs
|x| + 1. Then, a sequence of ciphertexts C = (c1, . . . , cn) for
which ci = Ek(mi) leaks order as well as, for every pair 1 ≤
i  1 and pq < n.
The adversary can then partition the inference problem
for the n ciphertexts into (at most) q + 1 sub-problems
by splitting at each location pi. In more detail, for each
1 ≤ i ≤ q and letting p0 = 1 and pq+1 = n, deﬁne the
new problem instances to be C i = (cpi−1+1, . . . , cpi−1) and
Z i = (zpi−1+1 , . . . , zpi−1). Each (C i, Z i) pair we can then
run independently using whichever ciphertext-only inference