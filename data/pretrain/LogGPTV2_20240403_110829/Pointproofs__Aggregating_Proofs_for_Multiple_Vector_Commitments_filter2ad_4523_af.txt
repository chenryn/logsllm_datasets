(instead of separate invocations of Prove followed by Aggregate) is only 83ms for |S|=8. See Figure 3
for more details.
• If veri(cid:128)cation of ˆπ is desired before aggregation, it can be done in 4.7ms for |S| = 1 and 9.9 ms (1.2
ms per value proven) for |S| = 8 (Figure 3).
• (cid:145)e block proposer can aggregate proofs across multiple commitment ˆπ1, . . . , ˆπ(cid:96) into a single proof
π using AggregateAcross at the cost 0.06–0.07 ms per proof, with the per-proof cost decreasing as
the number of proofs in a block grows. Aggregation is highly parallelizable because the main cost
is one exponentiation per the commitment. See Figure 4 for more details.
• A validator can verify the aggregated proof π using VerifyAcross at the cost of 1.9ms per commitment
for |S| = 1 and 5.7ms per commitment (0.72ms per value proven) for |S| = 8. (cid:145)e per commitment
cost does not change noticeably as the number of commitments grows from 1000 to 5000. Veri(cid:128)cation
is highly parallelizable because the main cost is the per-commitment Miller loop of one pairing
operation. See Figure 4 for more details.
Applied in the Algorand blockchain, for instance, a 64-thread parallelized version of the Verify
algorithm would add 0.45 seconds (or 70%) to the block veri(cid:128)cation time for 5000 transactions
(Figure 5, plot “5000 txs; Pixel” [DGNW20]).
23
• Anyone storing the commitments can update them with the new values in m(cid:48)
a[S] at the cost of 0.3
ms per proof for |S| = 1 and 0.2 ms per proof for |S| = 8. One-time precomputation on the public
parameters (storing 256 values per parameter) can speed this up by a factor of 3–5.
Acknowledgments.
We thank Derek Leung and Nickolai Zeldovich for numerous insightful discussions on using vector
commitments on the blockchain; Shai Halevi, Craig Gentry, and Ariel Gabizon for conversations on
polynomial commitments; Adam Suhl for insights into parameter generation; and Dario Fiore for help
understanding the parameters of prior work. (cid:145)is work was done while HW and SG were at Algorand.
References
[AGH10]
[Alg20a]
[Alg20b]
[BBF18]
[BBF19]
[BBG05]
Pairing plus library, 2020.
https://github.com/algorand/
Jae Hyun Ahn, Ma(cid:139)hew Green, and Susan Hohenberger. Synchronized aggregate signatures:
new de(cid:128)nitions, constructions and applications. In Ehab Al-Shaer, Angelos D. Keromytis, and
Vitaly Shmatikov, editors, ACM CCS 2010, pages 473–484. ACM Press, October 2010.
Algorand.
pairing-plus.
Algorand. Source code for pointproofs, 2020. https://github.com/algorand/
pointproofs.
Dan Boneh, Benedikt B¨unz, and Ben Fisch. A survey of two veri(cid:128)able delay functions.
Cryptology ePrint Archive, Report 2018/712, 2018. https://eprint.iacr.org/
2018/712.
Dan Boneh, Benedikt B¨unz, and Ben Fisch. Batching techniques for accumulators with
applications to IOPs and stateless blockchains.
In Alexandra Boldyreva and Daniele
Micciancio, editors, CRYPTO 2019, Part I, volume 11692 of LNCS, pages 561–586. Springer,
Heidelberg, August 2019.
Dan Boneh, Xavier Boyen, and Eu-Jin Goh. Hierarchical identity based encryption with
constant size ciphertext. In Ronald Cramer, editor, EUROCRYPT 2005, volume 3494 of LNCS,
pages 440–456. Springer, Heidelberg, May 2005.
[BDN18]
[BDFG20] Dan Boneh, Justin Drake, Ben Fisch, and Ariel Gabizon. E(cid:129)cient polynomial commitment
schemes for multiple points and polynomials. Cryptology ePrint Archive, Report 2020/081,
2020.
Dan Boneh, Manu Drijvers, and Gregory Neven. Compact multi-signatures for smaller
blockchains. In (cid:145)omas Peyrin and Steven Galbraith, editors, ASIACRYPT 2018, Part II, volume
11273 of LNCS, pages 435–464. Springer, Heidelberg, December 2018.
Sean Bowe, Ariel Gabizon, and Ian Miers. Scalable multi-party computation for zk-SNARK
parameters in the random beacon model. Cryptology ePrint Archive, Report 2017/1050, 2017.
http://eprint.iacr.org/2017/1050.
[BGM17]
24
[BGR12]
Kyle Brogle, Sharon Goldberg, and Leonid Reyzin. Sequential aggregate signatures with lazy
veri(cid:128)cation from trapdoor permutations - (extended abstract). In Xiaoyun Wang and Kazue
Sako, editors, ASIACRYPT 2012, volume 7658 of LNCS, pages 644–662. Springer, Heidelberg,
December 2012.
[BGW05] Dan Boneh, Craig Gentry, and Brent Waters. Collusion resistant broadcast encryption with
In Victor Shoup, editor, CRYPTO 2005, volume 3621 of
[BM+19]
[BR93]
[But14]
[But17]
[CF13]
short ciphertexts and private keys.
LNCS, pages 258–275. Springer, Heidelberg, August 2005.
Benedikt B¨unz, Mary Maller, , Pratyush Mishra, and Noah Vesely. Proofs for inner pairing
products and applications. Cryptology ePrint Archive, Report 2019/1177, 2019. https:
//eprint.iacr.org/2019/1177.
Mihir Bellare and Phillip Rogaway. Random oracles are practical: A paradigm for designing
e(cid:129)cient protocols. In Dorothy E. Denning, Raymond Pyle, Ravi Ganesan, Ravi S. Sandhu, and
Victoria Ashby, editors, ACM CCS 93, pages 62–73. ACM Press, November 1993.
Vitalik Buterin. Ethereum: A next-generation smart contract and decentralized application
platform, 2014.
Ethereum Blog, 2017.
Vitalik Buterin. (cid:145)e stateless client concept.
ethresear.ch/t/the-stateless-client-concept/172.
Dario Catalano and Dario Fiore. Vector commitments and their applications.
In Kaoru
Kurosawa and Goichiro Hanaoka, editors, PKC 2013, volume 7778 of LNCS, pages 55–72.
Springer, Heidelberg, February / March 2013.
https://
[Che06]
[CKS09]
[CFG+20] Ma(cid:139)eo Campanelli, Dario Fiore, Nicola Greco, Dimitris Kolonelos, and Luca Nizzardo. Vector
commitment techniques and applications to veri(cid:128)able decentralized storage. Cryptology
ePrint Archive, Report 2020/149, 2020. https://eprint.iacr.org/2020/149.
Jung Hee Cheon. Security analysis of the strong Di(cid:129)e-Hellman problem. In Serge Vaudenay,
editor, EUROCRYPT 2006, volume 4004 of LNCS, pages 1–11. Springer, Heidelberg, May / June
2006.
Jan Camenisch, Markulf Kohlweiss, and Claudio Soriente. An accumulator based on bilinear
maps and e(cid:129)cient revocation for anonymous credentials.
In Stanislaw Jarecki and Gene
Tsudik, editors, PKC 2009, volume 5443 of LNCS, pages 481–500. Springer, Heidelberg, March
2009.
Edrax: A
Alexander Chepurnoy, Charalampos Papamanthou, and Yupeng Zhang.
cryptocurrency with stateless transaction validation. Cryptology ePrint Archive, Report
2018/968, 2018. https://eprint.iacr.org/2018/968.
[CPZ18]
[DGKR18] Bernardo David, Peter Gazi, Aggelos Kiayias, and Alexander Russell. Ouroboros praos: An
adaptively-secure, semi-synchronous proof-of-stake blockchain. In Jesper Buus Nielsen and
Vincent Rijmen, editors, EUROCRYPT 2018, Part II, volume 10821 of LNCS, pages 66–98.
Springer, Heidelberg, April / May 2018.
25
[DPS19]
[Dra17]
[FKL18]
History,
state,
Ethereum Blog,
[DGNW20] Manu Drijvers, Sergey Gorbunov, Gregory Neven, and Hoeteck Wee. Pixel: Multi-signatures
for consensus. In USENIX Security, 2020. https://eprint.iacr.org/2019/514.
Phil Daian, Rafael Pass, and Elaine Shi. Snow white: Robustly recon(cid:128)gurable consensus and
applications to provably secure proof of stake. In Ian Goldberg and Tyler Moore, editors, FC
2019, volume 11598 of LNCS, pages 23–41. Springer, Heidelberg, February 2019.
Justin Drake.
stateless model.
history-state-and-asynchronous-accumulators-in-the-stateless-model/
287.
Georg Fuchsbauer, Eike Kiltz, and Julian Loss. (cid:145)e algebraic group model and its applications.
In Hovav Shacham and Alexandra Boldyreva, editors, CRYPTO 2018, Part II, volume 10992 of
LNCS, pages 33–62. Springer, Heidelberg, August 2018.
Ariel Gabizon. Private communication, April 2020.
the
https://ethresear.ch/t/
[Gab20]
[GHM+17] Yossi Gilad, Rotem Hemo, Silvio Micali, Georgios Vlachos, and Nickolai Zeldovich. Algorand:
Scaling byzantine agreements for cryptocurrencies. In Proceedings of the 26th Symposium on
Operating Systems Principles, 2017.
asynchronous
and
2017.
accumulators
in
[LM19]
[KZG10]
[GWC19] Ariel Gabizon, Zachary J. Williamson, and Oana Ciobotaru. PLONK: Permutations over
lagrange-bases for oecumenical noninteractive arguments of knowledge. Cryptology ePrint
Archive, Report 2019/953, 2019. https://eprint.iacr.org/2019/953.
Aniket Kate, Gregory M. Zaverucha, and Ian Goldberg. Constant-size commitments to
polynomials and their applications. In Masayuki Abe, editor, ASIACRYPT 2010, volume 6477
of LNCS, pages 177–194. Springer, Heidelberg, December 2010.
Russell W. F. Lai and Giulio Malavolta. Subvector commitments with application to succinct
arguments.
In Alexandra Boldyreva and Daniele Micciancio, editors, CRYPTO 2019, Part I,
volume 11692 of LNCS, pages 530–560. Springer, Heidelberg, August 2019.
Benoˆıt Libert, Somindu C. Ramanna, and Moti Yung. Functional commitment schemes: From
polynomial commitments to pairing-based accumulators from simple assumptions. In Ioannis
Chatzigiannakis, Michael Mitzenmacher, Yuval Rabani, and Davide Sangiorgi, editors, ICALP
2016, volume 55 of LIPIcs, pages 30:1–30:14. Schloss Dagstuhl, July 2016.
Benoˆıt Libert and Moti Yung. Concise mercurial vector commitments and independent zero-
knowledge sets with short proofs. In Daniele Micciancio, editor, TCC 2010, volume 5978 of
LNCS, pages 499–517. Springer, Heidelberg, February 2010.
[LRY16]
[LY10]
[MBKM19] Mary Maller, Sean Bowe, Markulf Kohlweiss, and Sarah Meiklejohn. Sonic: Zero-knowledge
SNARKs from linear-size universal and updatable structured reference strings.
In Lorenzo
Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz, editors, ACM CCS 2019, pages
2111–2128. ACM Press, November 2019.
Ralph C. Merkle. A digital signature based on a conventional encryption function. In Carl
Pomerance, editor, CRYPTO’87, volume 293 of LNCS, pages 369–378. Springer, Heidelberg,
August 1988.
[Mer88]
26
[Mil12]
[Nak09]
[Pip80]
[PS18]
[RMCI17]
[SL20]
[ST99]
[Suh19]
[(cid:145)a19]
[Tod16]
Storing UTXOs in a balanced Merkle tree (zero-trust nodes with O(1)-
https://bitcointalk.org/index.php?topic=101734.
Andrew Miller.
storage), 2012.
msg1117428.
Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system, 2009.
Nicholas Pippenger. On the evaluation of powers and monomials. SIAM J. Comput., 9(2):230–
250, 1980.
Rafael Pass and Elaine Shi. (cid:145)underella: Blockchains with optimistic instant con(cid:128)rmation. In
Jesper Buus Nielsen and Vincent Rijmen, editors, EUROCRYPT 2018, Part II, volume 10821 of
LNCS, pages 3–33. Springer, Heidelberg, April / May 2018.
Improving
Leonid Reyzin, Dmitry Meshkov, Alexander Chepurnoy, and Sasha Ivanov.
authenticated dynamic dictionaries, with applications to cryptocurrencies.
In Aggelos
Kiayias, editor, FC 2017, volume 10322 of LNCS, pages 376–392. Springer, Heidelberg, April
2017.
SCIPR-Lab. Zexe, 2020. https://github.com/scipr-lab/zexe.
In Michael J.
Tomas Sander and Amnon Ta-Shma. Auditable, anonymous electronic cash.
Wiener, editor, CRYPTO’99, volume 1666 of LNCS, pages 555–572. Springer, Heidelberg,
August 1999.
Adam Suhl.
pointproofs-paramgen/blob/master/consistencycheck.pdf.
Supranational. blst, 2020. https://github.com/supranational/blst.
Private communication, 2019. https://github.com/algorand/
[Sup20]
[TAB+20] Alin Tomescu, I(cid:139)ai Abraham, Vitalik Buterin, Justin Drake, Dankrad Feist, and Dmitry
Khovratovich.
Aggregatable subvector commitments for stateless cryptocurrencies.
Cryptology ePrint Archive, Report 2020/527, 2020. https://eprint.iacr.org/
2020/527.
Steve (cid:145)akur. Batching non-membership proofs with bilinear accumulators. Cryptology
ePrint Archive, Report 2019/1147, 2019. https://eprint.iacr.org/2019/1147.
Peter Todd. Making UTXO set growth irrelevant with low-latency delayed TXO commitments,
2016. https://petertodd.org/2016/delayed-txo-commitments.
David Wagner. A generalized birthday problem. In Moti Yung, editor, CRYPTO 2002, volume
2442 of LNCS, pages 288–303. Springer, Heidelberg, August 2002.
Bill White. A theory for lightweight cryptocurrency ledgers. Available at http://
qeditas.org/lightcrypto.pdf, 2015.
ZkCrypto. Pairing library, 2019. https://github.com/zkcrypto/pairing.
[Wag02]
[ZkC19]
[Whi15]
27
A Same-Commitment Aggregation from CDH-like Assumption
We sketch a same-commitment aggregation scheme with O(N 2)-size public parameters from the following
CDH-like static assumption: given gu
. (cid:145)e e(cid:129)ciency and underlying
hardness assumption of this scheme matches that of LM-CDH ([LM19, Fig 2]), while additionally
supporting aggregation.
(cid:135)e scheme. Here, both Commit and Prove are deterministic.
, it is hard to compute guv2
1 , gv
1, gv
2
T
• Setup(1λ, 1N ). Samples ui, vi ← Zp for i = 1, . . . , N and outputs
{gui
1 , gvi
2 }i∈[N ],{guj vi
1
}i(cid:54)=j
• Commit(m). Outputs
(cid:80)
C := g
1
i∈[N ] miui
• UpdateCommit(C, S, m[S], m(cid:48)[S]). Outputs
(cid:80)
i∈S (m(cid:48)
i−mi)ui
C(cid:48) := C · g
1
• Prove(i, m). Outputs
πi := g
• Aggregate(C, S, m[S],{πi : i ∈ S}). Outputs
j(cid:54)=i mj uj vi
1
(cid:80)
(cid:89)
i∈S
ˆπ :=
πi
• Verify(C, S, m[S], ˆπ). Checks that
(cid:80)
) ?= e(ˆπ, g2) · g
(cid:80)
T
i∈S miuivi
i∈S vi
e(C, g
2
Comparison with LM-CDH We do not know how to support aggregation in LM-CDH (which corre-
sponds to the special case ui = vi) [LM19, Fig 2]. In particular, the veri(cid:128)cation equation there is given
by:
i∈S vi
e(C, g
2
) ?= e(ˆπ, g2) · g
(cid:80)
An earlier version of [LM19] claims security from CDH, but we found a mistake in the proof of binding,
where they incorrectly assume that e(C, g
). (cid:145)e mistake has since been (cid:128)xed.
Proof of correctness. Follows readily from
) = e(C, g
2
i∈S0 vi
i∈S vi)
T
2
((cid:80)
i∈S miui)((cid:80)
(cid:80)
(cid:88)
i∈S1 vi
mjujvi
j(cid:54)=i
(cid:80)
(cid:88)
j∈[N ]
(
and then summing over i ∈ S.
mjuj) · vi = miuivi +
28
Proof of binding. Now, consider the output of a winning adversary
C,{Sb, mb[Sb], ˆπb}b=0,1
i∗ (cid:54)= m1
along with i∗ such that m0
i∗. (cid:145)e reduction proceeds as follows: embeds u, v from the computational
problem into ui∗, vi∗, and samples ui, vi ← Zp, i (cid:54)= i∗ (formally, the reduction picks a random i∗ ← ZN
and aborts if m0
i∈S vi. Raising the veri(cid:128)cation equations to vS0, vS1 respectively and using
Next, let us write vS :=(cid:80)
i∗). Simulating pp is straight-forward since we know gui∗
i∗ = m1
, gvi∗
.