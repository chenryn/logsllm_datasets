```
.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 1992 Drew Eckhardt; 1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies. Permission is also granted to copy and distribute
.\" modified versions of this manual under the same conditions, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date. The author(s) assume no
.\" responsibility for errors, omissions, or damages resulting from the use
.\" of the information contained herein. The author(s) may not have taken
.\" the same level of care in the production of this manual, which is licensed
.\" free of charge, as they might when working professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified:
.\" - Wed Jul 21 22:40:25 1993 by Rik Faith
.\" - Sat Feb 18 15:27:48 1995 by Michael Haardt
.\" - Sun Apr 14 11:40:50 1996 by Andries Brouwer (corrected description of lock effects)
.\" - Fri Jan 31 16:21:46 1997 by Eric S. Raymond
.\" - 2000-07-22 by Nicolás Lichtmaier (added note about close(2) not guaranteeing data safety)
.\"
.TH CLOSE 2 1996-04-14 "Linux Programmer's Manual"
.SH NAME
close \- 关闭一个文件描述符
.SH SYNOPSIS
.nf
.B #include <unistd.h>
.sp
.BI "int close(int " fd );
.fi
.SH DESCRIPTION
The
.B close
function closes a file descriptor, making it no longer refer to any file and available for reuse in new file operations. Any locks associated with the file and owned by the program will be released, except those held by other file descriptors.

If
.I fd
is the last file descriptor referring to the resource, the resource will be released. If this was the last reference to the file, the file will be deleted using
.BR unlink (2).
.SH RETURN VALUE
.B close
returns 0 on success, or -1 on error.
.SH ERRORS
.TP
.B EBADF
.I fd
is not a valid open file descriptor.
.TP
.B EINTR
The
.BR close ()
call was interrupted by a signal.
.TP
.B EIO
An I/O error occurred.
.SH CONFORMING TO
SVr4, SVID, POSIX, X/OPEN, BSD 4.3. SVr4 documents an additional ENOLINK error condition.
.SH NOTES
It is generally not checked for errors, except in cases of serious programming errors. File systems often use "write-behind" techniques to improve the performance of
.BR write (2).
Even if the write has not yet been completed, the write operation may succeed. Errors are reported after the write operation, but they are guaranteed to be reported upon closing the file. Not checking the return value of
.B close
can lead to data loss, particularly in NFS and disk quota scenarios.

Since the kernel delays writes, a successful
.B close
does not guarantee that the data has been successfully written to the disk. When a file stream is closed, the file system typically does not flush the buffers. To ensure data is written to physical storage, use
.BR fsync (2)
or
.BR sync (2),
depending on the disk device.
.SH SEE ALSO
.BR open (2),
.BR fcntl (2),
.BR shutdown (2),
.BR unlink (2),
.BR fclose (3)
.SH [中文维护]
Daniel (PI:EMAIL)
.SH [中文更新]
2002/1/10
.SH [说明]
若发现错误或不足，请与我联系。
```