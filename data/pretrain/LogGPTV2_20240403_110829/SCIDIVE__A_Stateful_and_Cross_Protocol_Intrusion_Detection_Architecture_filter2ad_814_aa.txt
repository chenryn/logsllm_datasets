title:SCIDIVE: A Stateful and Cross Protocol Intrusion Detection Architecture
for Voice-over-IP Environments
author:Yu-Sung Wu and
Saurabh Bagchi and
Sachin Garg and
Navjot Singh and
Timothy K. Tsai
SCIDIVE: A Stateful and Cross Protocol Intrusion Detection 
Architecture for Voice-over-IP Environments 
Yu-Sung Wu, Saurabh Bagchi 
Dependable Computing Systems Lab 
School of Electrical & Computer Engineering 
Purdue University 
{yswu,sbagchi}@purdue.edu
Sachin Garg, Navjot Singh 
Avaya Labs 
{sgarg,singh}@avaya.com
Tim Tsai 
Sun Microsystems 
PI:EMAIL
Abstract
1
Introduction
Voice  over  IP  (VoIP)  systems  are  gaining 
in 
popularity as the technology for transmitting voice traffic 
over  IP  networks.  As  the  popularity  of  VoIP  systems 
increases,  they  are  being  subjected  to  different  kinds  of 
intrusions some of which are specific to such systems and 
some  of  which  follow  a  general  pattern.  VoIP  systems 
pose  several  new  challenges  to  Intrusion  Detection 
System  (IDS)  designers.  First,  these  systems  employ 
multiple  protocols  for  call  management  (e.g.,  SIP)  and 
data  delivery  (e.g.,  RTP).  Second,  the  systems  are 
distributed  in  nature  and  employ  distributed  clients, 
servers  and  proxies.  Third,  the  attacks  to  such  systems 
span a large class, from denial of service to billing fraud 
attacks.  Finally,  the  systems  are  heterogeneous  and 
typically under several different administrative domains.
In  this  paper,  we  propose  the  design  of  an  intrusion 
detection system targeted to VoIP systems, called SCIDIVE
(pronounced  “Skydive”).  SCIDIVE  is  structured  to  detect 
different  classes  of  intrusions,  including,  masquerading, 
denial of service, and media stream-based attacks. It can 
operate with both classes of protocols that compose VoIP 
systems  –  call  management  protocols  (CMP),  e.g.,  SIP, 
and media delivery protocols (MDP), e.g., RTP. SCIDIVE
proposes  two  abstractions  for  VoIP  IDS  (cid:127)  Stateful 
detection and Cross-protocol detection. Stateful detection 
denotes assembling state from multiple packets and using 
the  aggregated  state  in  the  rule  matching  engine.  Cross 
protocol  detection  denotes  matching  rules  that  span 
multiple protocols. SCIDIVE is demonstrated on a sample 
VoIP  system  that  comprises  SIP  clients  and  SIP  proxy 
servers  with  RTP  as  the  data  delivery  protocol.  Four 
attack  scenarios  are  created  and  the  accuracy  and  the 
efficiency  of  the  system  evaluated  with  rules  meant  to 
catch these attacks. 
Keywords: Intrusion detection, Voice over IP system, 
Cross-protocol detection, Stateful detection, SIP, RTP.
Voice  over  IP  (VoIP)  systems  are  gaining 
in 
popularity as the technology for transmitting voice traffic 
over IP networks. While VoIP technology is fast gaining 
ground,  and  is  already  being  used  by  a  number  of 
traditional telephone companies to connect their regional 
offices, on a smaller scale it can also be a useful solution 
for  businesses  looking  to  trim  their  telephone  expenses. 
As  the  popularity  of  VoIP  systems  increases,  they  are 
being  subjected  to  different  kinds  of  intrusions,  some  of 
which  are  specific  to  such  systems,  and  some  of  which 
follow  a  general  pattern.  There  have  been  enormous 
strides  made  in  the  field  of  intrusion  detection  systems 
(IDS)  for  different  components  of  the  information 
technology  infrastructure.  Some  IDSs  are  generic  in 
nature and can be customized with detection rules specific 
to  the  environment  in  which  they  are  deployed  (e.g., 
Snort  [10]  and  Prelude  [13]),  and  some  are  tools 
specifically  targeted  to  an  environment  or  to  specific 
classes  of  intrusions,  such  as  IBM  Tivoli  Intrusion 
Manager for MQSeries products [14]. VoIP systems pose 
several  new  challenges  to  IDS  designers.  First,  these 
systems  employ  multiple  protocols  for  call  management 
and data delivery. Second, the systems are distributed in 
nature  and  employ  distributed  clients,  servers,  and 
proxies.  Third,  the  attacks  against  such  systems  span  a 
large class, from denial of service to billing fraud. Finally, 
the systems are heterogeneous and typically under several 
different  administrative  domains,  e.g.,  the  proxy  server 
may  be  provided  by  the  service  provider  and  the  client 
managed by the home organization.  
In  this  paper,  we  propose  the  design  of  an  intrusion 
detection system targeted to VoIP systems, called SCIDIVE
(pronounced  “Skydive”).  SCIDIVE  is  structured  to  detect 
different  classes  of  intrusions,  including,  masquerading, 
denial of service, and media stream-based attacks. It can 
be  installed  at  multiple  points  –  clients,  servers,  or 
proxies, 
system 
customization,  be  extended  for  detecting  new  classes  of 
can,  without 
and 
substantial 
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:30:44 UTC from IEEE Xplore.  Restrictions apply. 
attacks. The IDS can handle client mobility, an important 
design goal of VoIP protocols such as SIP, and does not 
flag false alarms for such situations. SCIDIVE can operate 
with both classes of protocols that compose VoIP systems 
–  call  management  protocols  (CMP),  e.g.,  the  Session 
Initiation  Protocol  (SIP),  and  media  delivery  protocols 
(MDP), e.g., the Real Time Transport Protocol (RTP). 
SCIDIVE  proposes  two  abstractions  for  VoIP  IDS  – 
stateful  detection  and  cross-protocol  detection.  Stateful 
detection  denotes  the  functionality  of  assembling  state 
from  multiple  packets  and  using  the  aggregated  state  in 
the rule-matching engine. The reassembly functionality is 
applicable to packets of both CMP and MDP and can be 
configured  to  handle  packets  spread  out  arbitrarily  far 
apart  in  time,  constrained  in  practice  by  the  amount  of 
memory available at the hosting machine. Some existing 
IDSs  provide  support  for  reassembly,  but  they  are 
restrictive  and  applicable  only  to  specific  protocols.  For 
example,  Snort’s  stream4  module  can  reassemble  TCP 
packets  that  belong  to  the  same  session.  Cross  protocol 
detection denotes the functionality of matching rules that 
span multiple protocols, e.g., detecting a pattern in a SIP 
packet  followed  by  one  in  a  succeeding  RTP  packet 
followed  by  one  in  an  RTCP  packet.  The  aggregation 
across  protocols  can  be  chained  in  an  arbitrarily  long 
manner  and  spread  out  in  time.  This  abstraction  is 
powerful for VoIP systems because they involve multiple 
protocols and several attacks are based on sequences that 
cross  protocol  boundaries.  There  are  very  few  systems 
today  that  support  cross-protocol  detection.  One  of  the 
notable  ones  is  WebSTAT  [1]  for  detecting  attacks 
against web servers by correlating protocols in a vertical 
stack,  e.g.,  application  level  (web  server)  and  operating 
system log. Since VoIP systems use multiple application 
layer  protocols,  horizontal  cross-protocol  correlation  is 
required. 
The  architecture  of  SCIDIVE uses  a  Distiller,  through 
which  all  incoming  network  traffic  passes  and  which 
translates  packets  into  protocol  dependent  information 
units called Footprints. The Footprints that belong to the 
into  Trails.  The  Event
same  session  are  grouped 
Generator  maps  Footprints 
into  Events  which  are 
matched by the Rule Matching Engine against a Ruleset.
According  to  the  stateful  and  cross-protocol  approaches, 
the  Events  can  potentially  have  state  information  and 
encapsulate information from multiple packets.  
Our  goal  in  the  paper  is  to  provide  an  architecture 
suited  to  intrusion  detection  in  VoIP  systems  and  show 
the  feasibility  of  the  architecture  by  demonstrating  its 
behavior  on  four  attack  scenarios  that  we  believe  are 
representative. Our goal is not to provide an enumeration 
of rules to be  fed  into  SCIDIVE  for  detecting  all  possible 
kinds  of  attacks.  SCIDIVE  is  demonstrated  on  a  sample 
VoIP  system  that  comprises  SIP  clients  and  SIP  proxy 
servers. The protocols used are SIP for call management 
and  RTP  for  real-time  audio  data  transfer.  In  our 
experiments,  an  instance  of  SCIDIVE  is  associated  with 
each client. Four different types of attacks  are  simulated 
on  the  system  and  the  effectiveness  and  efficiency  of 
SCIDIVE analyzed.
The rest of the paper is organized as follows. Section 2 
gives  an  overview  of  VoIP  systems  and  attacks  in  such 
systems.  Section  3  presents  the  architecture  of  SCIDIVE
and  motivates  the  stateful  and  cross-protocol  detection 
through  two  running  examples. Section  4 presents  the 
implementation of SCIDIVE, the kinds of attacks simulated 
in the system, and analysis of the efficiency of the system. 
Section  5  reviews  related  work.  Section  6  concludes  the 
paper.
2
System Description: VoIP Systems and 
Attack Classification 
2.1 VoIP Overview 
and 
corresponding 
ease 
its 
simplicity 
the  most  widely  deployed  standard 
Voice  over  IP  (VoIP)  systems  provide  facilities  for 
setting up and managing voice communications based on 
one of two main protocols:  H.323 [2] and SIP [3].  H.323 
is 
in  VoIP 
communications,  but  SIP  is  increasing  in  popularity  due 
to 
of 
implementation.  With both types of system, endpoints or 
terminals, which may be physical phones (hardphones) or 
software  programs  executing  on  a  general-purpose 
computer (softphones), send and receive RTP [4] packets 
that  contain  encoded  voice  conversations.    Since  voice 
calls may be made between IP phones and phones on the 
Public-Switched  Telephone  Network  (PSTN),  gateways 
often perform transparent translation between IP and non-
IP  based  networks.    Such  gateways  may  implement 
protocols for media gateway management such as MGCP 
[5] and MEGACO/H.248 [6]. 
Within an H.323 network, an optional gatekeeper may 
be  present.    The  gatekeeper  performs  several  functions 
including  authorizing  network  access,  assisting 
in 
managing  quality  of  service,  and  providing  address-
translation  services. 
  Also,  multipoint  conferences 
between  three  or  more  terminals  or  gateways  may  be 
managed by specialized controllers. 
forwards 
SIP networks also include additional types of servers.  
A  proxy  server 
requests,  possibly  after 
performing  some  processing  or  translation.    A  redirect 
server  is  used  to  support  mobile  clients  and  performs 
address translation for an accepted request and returns the 
new address to the originator of the request.  Both proxy 
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:30:44 UTC from IEEE Xplore.  Restrictions apply. 
and  redirect  servers  may  be  used  to  implement  call 
forwarding and other similar services.  User agent clients 
send requests to user agent servers to initiate calls.  The 
user  notifies  a  registrar  of  his  current  location  to  allow 
others  to  contact  him.    The  registrar  is  often  combined 
with a proxy or redirect server. 
Both  H.323  and  SIP  provide  protocols  for  call  setup, 
management, and media delivery.  Voice is encoded using 
a negotiated codec and delivered using RTP over UDP/IP 
for both protocols.  However, call setup and management 
are handled quite differently.  H.323 relies on the H.225.0 
[7]  and  H.245  protocols  [8],  whereas  SIP  uses  a  much 
simpler  set  of  request  messages: 
  INVITE,  ACK, 
OPTIONS,  BYE,  CANCEL,  and  REGISTER.    SIP 
provides  a  globally  reachable  address  to  which  callees 
bind  using  SIP  REGISTER  method.  The  INVITE 
message is used by a user client agent wishing to initiate a 
session, which can be responded to with an OK, followed 
by an ACK. To tear down a connection, a BYE message 
is sent. CANCEL cancels a pending invite. OPTIONS is 
used  to  query  or  change  optional  parameters  of  the 
session, such as encryption. 
Figure  1  illustrates  a  typical  set  of  SIP  messages 
leading to a session. 
INVITE
Ringing 
OK
ACK
BYE
Conversation over RTP
OK
Calling party 
Called party 
Figure 1. Sample SIP message exchange in a 
SIP call setup and teardown 
2.2 VoIP Attacks 
One  of  the  main  advantages  of  a  VoIP  system  is  the 
convergence of voice and data networks with voice being 
conveyed  over  a  data  network.  While 
this  offers 
advantages in cost and ease of management, the use of the 
data network in a converged system makes it suffer from 
the  same  vulnerabilities  suffered  by  the  data  network.  
This  includes  well-known  attacks  such  as  denial  of 
service  attacks  as  well  as  authentication  attacks.    While 
the  vulnerabilities  that  are  not  specific  to  the  design  of 
VoIP  systems  can  conceivably  be  handled  by  existing 
IDSs  from  the  data  network  domain,  that  is  not  enough. 
In  addition,  a  voice  network 
introduces  potential 
vulnerabilities related to toll fraud, privacy, and denial of 
service attacks based on degrading the quality of service 
of the voice conversation. 
A major source of vulnerabilities lies in the protocols 
used  to  set  up  and  manage  calls.  Both  H.323  and  SIP 
transmit packet headers and payload in clear text,  which 
allows an attacker to forge packets that manipulate device 
and  call  states.    For  example,  such  forged  packets  can 
prematurely terminate calls, redirect calls, or facilitate toll 
fraud.    Some  efforts  are  currently  underway  to  develop 
encrypted 
found 
widespread adoption. 
signaling,  but  no 
solution  has 
In  addition  to  vulnerabilities  present  in  the  signaling 
protocols,  the  RTP  protocol  for  media  delivery  also 
introduces  several  vulnerabilities  due  to  the  absence  of 
authentication  and  encryption.    Each  RTP  packet  header 