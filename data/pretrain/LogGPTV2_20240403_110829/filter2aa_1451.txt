1
WEB⾮实⽤之Burp的AutoRepeater使⽤
LxLN 前⾔
LxLO 安装⽅法
LxLP 使⽤例⼦
LxLP.N ssrf检测
LxLP.O 未授权检测
LxLP.P 越权检测
LxLQ 其它
0x01 前⾔ 
0x02 安装⽅法 
Plain Text
复制代码
以前想写⼀个SSRF的检测⼯具,后⾯和朋友⼀聊,感觉⼀直使⽤的AutoRepeater就可以做到
尝试使⽤了这么久,使⽤这个插件挖到的漏洞也不少了,感觉是真实可⽤的
于是作为⼀个专业的狗推,我就要开始推荐AutoRepeater了
它作为⼀个burp⼯具,可以极⼤的简化⼿⼯测试的效率
我常⽤于该⼯具拿来检测SSRF,未授权,越权(平⾏,垂直)
下⾯就简单介绍⼀下,如何检测,来给你们进⾏狗推
1
2
3
4
5
6
Plain Text
复制代码
github地址: https://github.com/nccgroup/AutoRepeater
下载完成以后,burp的Extender界⾯中,导⼊AutoRepeater.jar 即可
1
2
2
0x03 使⽤例⼦ 
0x03.1 ssrf检测 
Plain Text
复制代码
这是我使⽤最多的⼀种了,很⾹,也靠这样检到了不少ssrf漏洞
⾸先做两个准备
1. ⼀个dnslog,个⼈推荐http://ceye.io
2. 准备两个正则: 
(?i)^(https|http|file)://.*
与
(?i)^(https|http|file)%3A%2F%2F.*
第⼀个正则,保证未编码的URL可以被正常匹配到
第⼆个正则,保证编码的URL可以被正常匹配到
1
2
3
4
5
6
7
8
9
10
11
3
Plain Text
复制代码
然后配置如下规则:
正则的作⽤就是匹配URL然后替换成DNSLOG的地址,接着⾃动发包
然后在有空的时候去看看DNSLOG有没有数据或是把所有带URL的⾃⼰测试⼀遍就知道有没有SSRF了
减少了漏包的可能性
1
2
3
4
4
Plain Text
复制代码
然后放着等待有缘的URL即可
例如:
本地起环境
http://192.168.24.145/ssrf.php?
aa=123123123&t=hTtp://baidu.com&c=httP://4399.com
然后burp代理以后去访问
1
2
3
4
5
5
如下操作: 
0x03.2 未授权检测 
Plain Text
复制代码
例如: 登录完毕以后会在COOKIE中返回⼀个BIDUPSID,这个BIDUPSID表示登录凭证
也就是Cookie: BIDUPSID=111111111
那么假设我们把Cookie: BIDUPSID=111111111修改为Cookie: test=test;
然后对⽐请求包,如果两个请求包的响应包是类似的,那不就说明未授权么?
1
2
3
4
6
0x03.3 越权检测 
Plain Text
复制代码
例如: 登录完毕以后会在header头返回⼀个 user-token: userid=1表示登录凭证
那么想测试越权(平⾏,垂直)也很简单
如果想测试平⾏越权那就准备两个权限⼀摸⼀样的账号
如果想测试垂直越权那就准备⼀个⾼权限,⼀个低权限的账号
管理员账号1 user-token: userid=1 
普通⽤户账号2 user-token: userid=998
浏览器登录,管理员账号1
然后burp抓包
接着使⽤AutoRepeater正则替换user-token为userid=998
然后查看数据包,如果两个请求包的响应包是类似的,那不就说明有问题么?
1
2
3
4
5
6
7
8
9
10
11
12
7
如何设置⿊⽩域名名单?  
如下设置即可,注意哦: 设置这个只是表示界⾯显示对应的数据⽽已,实际上还是发了包的 
0x04 其它 
8