Table 2 - Status of implementation
may enter an inconsistency state since the information that
they have relatively to the previous task t does not reflect Following the architectural implementation of
any more current state of the system. In our work, most of ORBWork, the dynamic change interface was built on top
the primitive changes implemented in ORBWork are of the CORBA ORB infrastructure and using IIOP as the
incremental changes. underlying communication protocol. Additional functions
Composite changes are composed of a sequence of have been added to the IDL interface of the CORBA object
primitive changes that describe a elaborated process responsible for managing tasks.
definition change (e.g., adding a task between two existing
tasks is the result of applying a sequence of primitive
3.2.2 Adaptation
changes).
As Charles Darwin mentioned - ”It is not the strongest
Dynamic Change Change Type species that survive, or the most intelligent, but the one most
responsive to change”. Adaptation characterizes the ability
AND to OR Join Change Incremental
of a system to adjust to environmental conditions. It is the
OR to AND Join Change Incremental
modification of a system or its parts that makes it more fit
Split Change Incremental for existence under the conditions of its environment. The
Addition of an AND Transition Incremental importance of adaptation has been recognized in several
areas, that include software [21][10], database systems and
Addition of an OR Transition Incremental
mobile systems [31], and fault-tolerant systems [11].
Deletion of a Transition Incremental
To better understand the concept of adaptation lets
Data Object Transfer Addition Incremental consider a very simple example [11]: the Ethernet protocol.
Data Object Transfer Deletion Incremental It may be not completely obvious but the Ethernet protocol
is considered to be an adaptive algorithm. Analyzing its
Parameter Mapping Change Incremental
behavior we verify that the protocol increase or decrease the
Parameter Type Change Incremental
interval after which it tries to resend the message based on
Task Type Change Incremental the collisions on the broadcast medium. Thus the algorithm
Task Invocation Change Composite change changes its behavior in response to changes and events in
the environment making it adaptable.
Insertion of a Task Composite change
In the domain of workflow management systems we
Deletion of a Task Composite change
also desire to obtain adaptable features. This permits
workflow systems to be prepared to adapt themselves to a
Table 1 - Dynamic changes classification
range of different business and organization settings and
also to a changing context [9]. This requirement is a direct
consequence of the highly changeable environment existing
Status of implementation
around business processes. The environment can be
From the classification of different types of changes that can
characterize has heterogeneous and is affected, in a global
be applied to a workflow instance exposed in Table 1 we
perspective, by events like political decisions, new company
have implemented the ones showing in Table 2.
polices, new laws and regulations, and changes in global
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
markets. In a more fine grain analysis we may find that the
environment also include simple elements, like the people 33)) AAppppllyy cchhaannggeess ((eexx:: rreeppllaaccee ttaasskk)) 11)) EExxcceeppttiioonn ggeenneerraatteedd
involved in the execution of a business process, or the
BB11
resources used to archive the goals of the process. Let’s BBB
consider the following scenario: a workflow instance is
running when a task cannot be completed due to the
AAA NNN111 EEE NNN222 FFF
inability to access a DBMS. At this point a change in the
internal environment is identified. In consequence an event
CCC DDD
or exception is generated describing the change in the
environment. A competent module subsequently processes IInnssttaannccee LLeevveell
the event, with the objective of restoring the environment to
a stable state. DDyynnaammiicc CChhaannggee
Having this scenario in mind we have developed a
module that allows the METEOR workflow management AAddaappttaattiioonn
systems to be an adaptable system. The module deals with EExxcceeppttiioonn HHaannddlliinngg MMoodduullee
22)) EExxeeccuuttee hhaannddlliinngg pprroocceedduurree
exceptions, a well-defined class of events that may occur
during the realization of a process instance.
Figure 3 - Example of adaptation using Exception
Handling mechanism
3.2.3 Exception handling a case of
adaptation
System description
Although research in workflow management has been very
A knowledge-based approach of managing the exception
active for several years, and the need for modeling
handling knowledge is used in our exception handling
exceptions in information systems has been widely
system. A case-based reasoning (CBR) mechanism is used
recognized only recently the workflow community has
to improve the exception handling capabilities [18]. In this
tackled the problem of exception handling [5]. An exception
approach, information about previous problem solving cases
refers to facts, situations, or abnormal events not modeled
is retrieved to help solve new problems [18]. During the
by the underlying workflow management system or
workflow execution, if an exception is propagated to the
deviations between what we plan and what actually happen
CBR based exception-handling component, the case-based
[18].
reasoning process is used to derive an acceptable exception
The architecture developed [18] and implemented in
handler. Human involvement is needed when acceptable
ORBWork runtime system includes a sophisticated
exception handlers cannot be automatically obtained.
exception handling mechanism with the crucial requirement
Solutions given by a person will be incorporated into the
to allow workflow management system to be deployed in
case repository. Effects of the exception handler candidates
cross-organizational settings. During a workflow schema
on the workflow system and applications will be evaluated.
execution if an exception occurs and it is propagated to the
Thus, when the exception is handled necessary
case-based reasoning exception handling module, the CBR
modifications to the workflow systems or applications may
system is used to derive an acceptable exception handler
be made. The exception resolution process is actually the
[20]. The system has the ability to adapt itself over time,
population process of CPR templates. The actual exception
based on knowledge acquired about past experiences that
resolution performs the following tasks [19]:
will help to solve new problems. As the CBR system
• The coordination mode of exception handling will be
collects more cases, the global WfMS becomes more
determined. The coordination mode will be determined
resistant, preventing unwanted states, since it has a larger set
according to the type of process interactions between
of knowledge to handle future exception. A simple example
business processes.
is shown in Figure 3.
• The contacting party as well as interaction point will be
determined. A contacting party is one of the entities that
are responsible for handling exception in the processes in
its organization. An interaction point is where the
interactions can take place.
• The compensation scheme will be found if necessary. The
nature of the processes will affect the compensation
schemes. Human involvement is allowed in determining
the compensation schemes.
• The rework scheme will be found if necessary. Rework
scheme is the plan for the processes to make progress
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
from the failure points. Human involvement is allowed in previously. This overall architecture sketches a global
determining the rework schemes. picture of the main issues that have to be solved. In this
context two main modules have been developed for the
The retrieval procedure of similar previous cases is METEOR system to increase its survivability: dynamic
based on the similarity measure that takes into account both change and adaptation. Dynamic changes module gives an
semantic and structural similarities and differences between interface that permits the change of workflow instances.
the cases. A similarity measure is achieved by get the This module is indispensable to allow adaptation and
following [19]: evolution at the instance level. The adaptation module
• Exception similarity. Exception similarity is based on the developed deals with exception that occur during instance
is-a relationship in the exception hierarchy in METEOR realization and is based on case base reasoning algorithms.
model 3.
• Workflow similarity. It is the workflow structural
similarity such as AND, OR building block similarity. 5 References
• Context similarity. It is obtained by computing nearest
neighborhood function of the quantified degrees of
[1] Alonso, G., Hagen, C., Agrawal, D., El Abbadi, A.,
semantic similarities over workflow application data. To
Mohan, C. “Enhancing the Fault Tolerance of Workflow
do so, a concept tree should be built first [18]. The
Management Systems”. IEEE Concurrency, Vol. 8, No.3, pp
distances between concepts will be stored into the case
74-81, Jul-Sep, 2000.
repository.
[2] M. Barbacci. “Survivability in the age of vulnerable
We use a pattern guided case adaptation scheme [19].
systems”. IEEE Computer, 29(11):8, Nov, 1996.
There are four steps in the adaptation process in this pattern
guided adaptation scheme. The process is really the
[3] L. Bass, P. Clements and R. Kazman, “Software
population process of the CPR handling template [19].
Architecture in Practice”. Addison Wesley, 1998.
• Classifying the exception pattern. At this step, the
exception pattern will be identified. If it is a new pattern,
[4] Pauline M. Berry and Karen L. Myers. “Adaptive
it will be added to exception pattern repository.
Process Management: An AI Perspective”. The 1998 ACM
• Searching the handling pattern. Once the exception
Conference on Computer Supported Cooperative Work.
pattern is determined, a search will be conducted for the
Seattle, Washington, 1998.
handling pattern. At this step, the exception handling
coordination mode will be determined. Contacting party
[5] Fabio Casati, "A Discussion on Approaches to Handling
as well as interaction point is also determined by
Exceptions in Workflows". Proceedings of 1998 Computer-
analyzing the interactions among business processes.
Supported Cooperative Work (CSCW 1998), Towards
• Selecting a handler pattern. A handler pattern will be
Adaptive workflow Systems Workshop, Seattle, WA, 1998.
selected based on the search result from step 2. The
compensation scheme as well as the rework scheme will
[6] Yufeng Chen, ”Design and Implementation of Dynamic
be determined.
Process Definition Modifications in OrbWork Enactment
• Initializing the handler. The CPR handling template will
System”. M.Sc. thesis. University of Georgia. July 2000.
be populated. An adapted case is created.
[7] R.J. Ellison, D. Fisher, R.C. Linger, H. F. Lipson, T. A.
Longstaff, and N.R. Mead, “Survivable Network Systems:
4 Conclusions An Emerging Discipline”. Software Engineering Institute
Technical Report No. CMU/SEI-97-TR-013, Nov 1997.
The new requirements of modern systems in a highly
technological society demand that critical systems to be
[8] E. Elnozahy, L. Alvisi, Y.M. Wang, and D.B. Johnson.
survivable. Survivability addresses a set of characteristic
“A Survey of Rollback-Recovery Protocols in Message-
that systems should have in order to be resistant to failures
Passing Systems”. Carnegie Mellon University, Tecnical
and changes in the surrounding environment. In order to
Report CMU-CS-99-148, Jun 1999.
archive those two goals, security, recovery, fault-tolerant,
mobility, scalability, adaptation and evolution factors have
[9] Yanbo Han, Amit Sheth and Christoph Bussler. "A
to be considered. Our work focuses the survivability issues
Taxonomy of Adaptive Workflow Management".
of workflow management systems (WfMS). We have
Proceedings of 1998 Computer-Supported Cooperative
defined a survivable architecture that functionally divide
Work (CSCW 1998), Towards Adaptive workflow Systems
workflow WfMS in a four-layer architecture and include the
Workshop, Seattle, WA, 1998.
seven fundamental survivable characteristics mentioned
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
[10] Heineman, George T. “Adaptation and Software [22] Krys J. Kochut, Amit P. Sheth, John A. Miller.
Architecture”. ISAW3, Orlando, Florida, USA, check “ORBWork: A CORBA-Based Fully Distributed, Scalable
reference, Sept 1998. and Dynamic Workflow Enactment Service for METEOR”.
Large Scale Distributed Information Systems Lab,
[11] Hiltunen, Matti A. and Schlichting, Richard D. Computer Science Department, University of Georgia,
“Adaptive Distributed Fault-Tolerant Systems”. 1999.
International Journal of Computer Systems Science and
Engineering, vol.11, n.5, pp. 125-133, Sep 1996. [23] J. Miller, D. Palaniswami, A. Sheth, K. Kochut, and H.
Singh. “WebWork: METEOR's Web-based Workflow
[12] David Hollingsworth. “The Workflow Reference Management System”. Journal of Intelligence Information
Model”. Workflow Management Coalition, Document Management Systems, pp. 185-215, 1997.
Number TC00-1003, 19 Jan 1995.
[24] Manfred Reichert, Peter Dadam, “ADEPT —
flex
[13] Stefan Horn, Stefan Jablonski, “An Approach to Supporting Dynamic Changes of Workflows Without
Dynamic Instance Adaption in Workflow Management Loosing Control”. Journal of Intelligent Information
Applications”. 1998. Systems (JIIS), Special Issue on Workflow Management
Systems, Vol. 10, No. 2, pp. 93-129, 1998.
[14] John D. Howard. “An Analysis Of Security Incidents
On The Internet 1989–1995”. PhD thesis, Carnegie Mellon [25] Vincent, Regis, Horling, Bryan, Wagner, Tom and
University, Pennsylvania USA, Apr 1997. Lesser, Victor. “Survivability Simulator for Multi-Agent
Adaptive Coordination”. In International Conference on
[15] OMG BODTF RFP #2 Submission, Workflow Web-Based Modeling and Simulation, San Diego, CA,
Management Facility, Revised Submission, 1998.
(ftp://ftp.omg.org/pub/docs/bom/98-06-07.pdf), 4 Jul 1998.
[26] C. Sabnis, M. Cukier, J. Ren, P. Rubel, W. H. Sanders,
[16] R. Kazman, M. Klein, M. Barbacci, T. Longstaff, H. D. E. Bakken, and D. A. Karr. “Proteus: A Flexible
Lipson, J. Carriere, "The Architecture Tradeoff Analysis Infrastructure to Implement Adaptive Fault Tolerance in
Method", Proceedings of ICECCS ‘98, Monterey CA, Aug AquA”. In C. B. Weinstock and J. Rushby (Eds.),
1998. Dependable Computing for Critical Applications 7, vol. 12
in series Dependable Computing and Fault-Tolerant
[17] Mark Klein and Chrysanthos Dellarocas, "A
Systems, pp. 149-168. Los Alamitos, CA, IEEE Computer
Knowledge-Based Approach to Handling Exceptions in
Society, 1999.
Workflow Systems". Proceedings of 1998 Computer-
Supported Cooperative Work (CSCW 1998), Towards [27] Santosh K. Shrivastava, Stuart M. Wheater,
Adaptive workflow Systems Workshop, Seattle, WA, 1998. “Architectural Support for Dynamic Reconfiguration of
Distributed Workflow Applications”. IEE Proceedings –
[18] Zongwei Luo, Amit Sheth, Krys Kochut, and John
Software Engineering, 145:5, pp. 155-162,1998
Miller, "Exception handling in workflow systems", Applied
Intelligence: the International Journal of AI, Neural [28] Knight J. Sullivan, John C. Knight, Xing Du, and Steve
Networks, and Complex Problem-Solving Technologies, Geist. “Information Survivability Control Systems”.
Volume 13, Number 2, pp125-147, Sep-Oct 2000. Proceedings of 21th International Conference on Software
Engineering (ICSE’99), Los Angeles, California, May 16-
[19] Zongwei Luo, "Knowledge Sharing, Coordinated
22, 1999.
Exception Handling, and Intelligent Problem Solving to
Support Cross-Organizational Business Processes", Ph.D. [29] Swenson, K., “SWAP - Simple Workflow Access
dissertation, Department of Computer Science, University Protocol”. 1998.
of Georgia, December, 2000.
[30] Jeffrey M. Voas, Gary E. McGraw, & Anup K. Ghosh,
[20] Zongwei Luo, Amit Sheth, John Miller, Krys Kochut, “Reducing Uncertainty About Survivability”. Information
"Defeasible Workflow,its Computation, and Exception Survivability Workshop - ISW'97, San Diego, California,
Handling". Proceedings of 1998 Computer-Supported Feb 12-13, 1997.
Cooperative Work (CSCW 1998), Towards Adaptive
workflow Systems Workshop, Seattle, WA, 1998. [31] Olaf Zukunft. “Rule based Adaptation in Mobile
Database Systems”. Proc. 12th Symposium on Applied
[21] Davis, J. Margaret. “Adaptable, Reusable Code”. SSR, Computing, ACM SAC 97, pp. 310-317, Mar 1997.
ACM, check reference, Seattle, WA, USA, 1995.