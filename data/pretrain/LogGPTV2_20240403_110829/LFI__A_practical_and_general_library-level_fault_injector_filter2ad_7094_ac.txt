Inordertounderstandhowfrequentlythedifferentwaysofpropagatingerrorinformationareusedinpractice,weanalyzed>20,000functionsintheUbuntuLinuxlibraries.WeusedtheELSAC/C++parser[6]toanalyzethelibraryheadersinallthedevelopmentpackages,andcombinedthisinformationwiththeLFIanalysesdescribedabove.There-sultsaresummarizedinTable1—rowlabelsindicatefunc-tionreturntype,columnlabelsindicatethemethodforpro-vidingerrordetails,andvaluesincellsindicatethecor-respondingfractionofallthefunctionsweanalyzed.Wefoundthatmorethan90%oftheexportedfunctionsinLinuxsharedlibrariesdonothavesideeffects.ReturnNoneErrordetailsinErrordetailsTypegloballocationviaargumentsvoid23.0%0%0%scalar56.5%1%3.5%pointer11.6%1%3.4%Table1.StatisticsonhowLinuxlibrariesprovidead-ditionaldetailsonerrorconditionsexposedtocallers.3.3.FaultProﬁleTheoutputoftheLFIproﬁlerisafaultproﬁleoftheanalyzedlibrary.ThisoutputismeanttobepassedtotheLFIcontroller,butitcouldalsobeusedforotherpurposes,suchascross-checkingAPIdocumentation.WethereforechoseageneralXMLformatthatisbothhuman-readableandeasytoparse.LFIgeneratesoneproﬁleperanalyzedlibrary.Foreachexportedfunction,theproﬁlecontainsinformationregard-ingpossibleerrorreturnvalues,alongwithaspeciﬁcationofassociatedsideeffectsforeachsuchvalue.Hereisasnip-petoftheproﬁlegeneratedforthelibcclosefunction:...-9-5-4...Incaseoferror,closereturns-1andprovidesadditionalinformationviaaTLSvariable(errno)atthegivenoffset.Thissideeffectcanbevalue-9(correspondingtoEBADF=badﬁledescriptor),-5(forEIO=input/outputerror),or-4(forEINTR=interruptedsystemcall).Incidentally,thisisanotherexamplewheremanpagescanbedeceiving:onBSDsystems,themanpageaccuratelystatesthatclosecanonlyseterrnotoEBADForEINTR.OnLinux,EIOisalsopossible,soprogrammersportingfromBSDtoLinuxmightforgettoaddacheckforEIO;similarly,ifportingtoHP/UXtheymightforgettocheckforENOSPC,oronSolaristheymightforgetaboutENOLINK,allofwhicharereturncodespresentinthecorrespondinglibclibraries.LFIcanautomaticallyﬁndtheerrorsspeciﬁctotheplatformandtesttheprogramswiththosevalues.4.FaultInjectionScenariosAfaultinjectionscenariodescribesasequenceoffaultstobeinjected;itcanalsobereferredtoas“faultload.”Suchascenariopairsfaultswithtriggers,i.e.,conditionsthat,whentrue,shouldleadtoaninjection.WedesignedasimpleXML-basedlanguagetodescribescenariosassetsoftuples.Everytimeafunctionisintercepted,therelevanttriggersareevaluatedand,ifanyistrue,theassociatedfault(s)is/areinjected.Duetospaceconstraints,wedonotdescribethelanguageindetail,butprovideanillustrativeexamplebelow:0xb824490refresh_files...Theﬁrsttriggermatchesthe5thcalltofunctionreaddir64andreturnsvalue0(nullpointer),setserrnotoEBADF(“badﬁledescriptor”),anddoesnotcalltheoriginalreaddir64function.Thesecondtriggermatchesthe5thcalltofunctionreaddirand,ifthecallstackhastheaddress0xb824490intheﬁrstframeandfunctionrefreshfilesinthesecondframe,itinjectsEBADF.Thethirdtriggermatchesthe20thcallofthereadfunction,modiﬁesits3rdargument(thenumberofbytestoberead)bysubtracting10fromit,andthenpassesthecallontotheoriginalreadlibrarycall.978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
384
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:24 UTC from IEEE Xplore.  Restrictions apply. 
ThecurrentLFIprototypeautomaticallygeneratestwotypesofscenarios:exhaustiveandrandom.Intheexhaus-tivecase,everyexportedfunctionofeverylinkedlibraryisincluded,andconsecutivecallstoanexportedfunctioniteratethroughthepossibleerrorcodes.Intherandomsce-nario,LFItakesasargumentaprobability,whichisthenusedtorandomlyselectbothwhichcallwillreturnanerrorcodeandwhichparticularerrorcodeitshouldreturn.LFIallowstesterstocustomizegeneratedscenariosbyusingdomain-speciﬁcknowledge:theymightrestrictthefunctioncallstoonlyasubsetofinterest,orspecifya(par-tial)stacktraceasaconditionthatmustbematchedbytheruntimebacktraceinordertotriggeraninjection.Scenar-ioscanalsobehand-writtenbytesters,basedonthelibraryfaultproﬁles.Therandomscenarioisusefulforquick-and-dirtytesting,whentestershavelimitedtimeanddonotwanttocustomizethefaultscenarios,orwhentheylackspeciﬁcknowledgethatcouldtargetthetestingbetter.Tohelpbootstrapfaultinjectiontestingexperiments,LFIalsocomeswithseveralready-madefaultscenariosforlibc,suchasallfaultsrelatedtoﬁleI/O,allmemoryallocationfaults,orallsocketI/Ofaults.5.LFIControllerTheLFIcontroller(Figure3)receivesfromtheproﬁlerthefaultproﬁle(s)ofinterestalongwithafaultscenario,ei-therautomaticallygeneratedbytheproﬁlerorcustomizedbythedeveloper.Itthengeneratesinterceptionstubswhicharecombinedwithboilerplatecodetosynthesizeanewli-brary.ThissyntheticlibraryhasthesameAPIastheorigi-nalone,butunderneaththisAPIencodesthefaultinjectionlogic.Thisnewlibraryisshimmedbetweentheprogrambeingtestedandtheoriginallibrary(ies).stub generatorC codeboilerplateprogramundertestnew libX.sooriginallibX.solibX.profilefault scenariologLFI ControllerreplayscriptsFigure3.TheLFIcontroller.Oncethestubsaregeneratedandinstalled(§5.1),theLFIcontrollerinvokesadeveloper-providedscriptthatstartstheprogramundertest,exercisesitwiththedesiredworkload,andmonitorsitsbehaviortodeterminewhetheritterminatesnormallyorwithanerrorexitcode.Thisinformationiscollectedinalog,alongwithanLFI-generatedreplayscriptforeachfaultinjectiontestcase;thetestscriptsallowthedevelopertodiagnoseanddebug(see§5.2).5.1.InterceptionMechanicsTheshimmingofthesynthesizedlibraryissystem-speciﬁc.OnLinuxandSolaris,LFIusestheLDPRELOADenvironmentvariabletotellthedynamiclinkertoloadtheLFI-generatedlibrarybeforetheoriginalone.OnWin-dows,LFIusesacombinationofWriteProcessMemory/CreateRemoteThread,andpassestheaddressofLoadLibraryasthethreadstartaddress,toforceaprocesstoloadthesyntheticlibrary.Asynthesizedlibraryconsistsofstubsthatinterceptthelibrarycalls.Eachstubdeterminestheaddressoftheorigi-nalfunction,evaluatesthetriggersfromthescenarioand,ifaninjectionistobedone,determinesthereturnvalue/sideeffecttobeinjectedand/orwhetherthecallshouldbepassedtotheoriginalfunctionornot.Ifnoinjectionistobedone,itcleansupthestackandjumpstotheorigi-nalfunction.Ingeneral,usingajmpinstruction(insteadofcall)simpliﬁesthehandlingoftheoriginalreturnaddressfromthestack,becauseitavoidstheneedforsave/restore.Astublooksapproximatelyasfollows:intLIB_FUNC_NAME(void){staticvoid*(*original_fn_ptr)();staticintcall_count;call_count++;if(!original_fn_ptr)original_fn_ptr=(void*(*)())dlsym(RTLD_NEXT,#FUNC_NAME);if(eval_trigger(LIB_FUNC_NAME,call_count,call_stack)){/*determinereturn_code,side_effects*//*applyside_effects*/returnreturn_code;}else{/*returnstackandregisterstoorigvalues*/__asm__("jmp[original_fn_ptr]");/*origfuncwillreturndirectlytocaller*/}}Interceptorsformultiplelibrariescancoexist(see§6.4).Thishappenstransparently,becausetheinterceptionmech-anismonlyreliesonthefunctionname,notonthelibrarywheretheoriginalfunctionresides;thus,stubsforfunctionsfromdifferentlibrariesdonotinterferewitheachother.AlthoughinterceptionisspeciﬁctotheOSandCPUar-chitecture,portingtonewplatformsisstraightforward.5.2.ControllerOutputTheLFIcontrollercollectsinformationthathelpsdevel-opersreproduce,understand,andﬁxthebehaviorsobservedasaresultoffaultinjection.978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
385
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:24 UTC from IEEE Xplore.  Restrictions apply. 
TheLFIlogisatextﬁlethatrecordseachinjection,theappliedsideeffects,andtheeventsthattriggeredthatinjec-tion(e.g.,callcount,stacktrace).Thisoutputcanbeusedtomatchinjectionstoobservedprogrambehavior,aswellastoreﬁnethefaultscenario.Thereplayscriptsareautomatically-generatedXMLﬁlesthatcanbefedbacktotheLFIcontrollertoreproducethedesiredtestcaseonasubsequentrun.Replayisnotal-ways100%accurate,becauseLFIdoesnotcontrolthreadinterleaving,timerinputs,etc.Wehavefoundthatthesere-playscriptscansavealotoftimeduringad-hoctesting,andcanalsoaugmentexistingregressiontestsuites.6.EvaluationOurgoalinbuildingLFIwastomaketestingbasedonfaultinjectioneasierandlesshuman-intensive;inthissec-tionweevaluatetheextenttowhichwereachedthisgoal.WeanalyzetheeffectivenessofusingLFIintesting(§6.1),measureitsefﬁciency(§6.2),assesstheaccuracyoftheLFIproﬁler(§6.3),andmeasuretheperformanceoverheadin-curredduringtesting(§6.4).LFIcurrentlyworksonLinuxandWindows(bothIntelIA-32andIA-64architectures),aswellasSolaris(SPARCarchitecture).WeexpectLFItobeeasilyportedtoothersystemsaswell.6.1.EﬀectivenessEaseofUse:LFI’sprimarycontributioniseaseofuse.ThehumaneffortinvolvedinthebasicuseofLFIissmall:itrequiresissuingtwocommands,oneforproﬁlingandoneforrunningthetests.Whenthetestermodiﬁesthedefaultfaultproﬁles,moretimeisrequired,butweexpectthistobeeasierthandirectlyscriptingfaultinjectionexperiments.Below,weillustrateLFIusagewithanexample.WetestedPidgin[15],apopularinstantmessengerclient,byinstructingtheLFIcontrollertolaunchitandex-ercisearandomfaultinjectionscenarioonI/Ofunctionswith10%probability.ShortlyafterweenteredtheIMlogindetailsinPidgin,itcrashedwithaSIGABRT.WerestartedPidginusingthecorrespondingreplayscriptandattachedwithgdb;itcrashedagainandwewereabletoinspecttheprogramstate.Inamatterofminutes,wediscoveredtheissue:PidginforksaDNSresolverpro-cesstoperformhostresolutionasynchronously;thisprocessthencommunicatesbacktotheparentviaapipe.Thechilddoesnothandlethecasewhenwritesfailorareincomplete.Asaresult,thechildmaywritetheanswertotheparent,but,ifthewriteisincomplete,itmaysubsequentlywriteadditionaldatacorrespondingtoanotherrequest.Asare-sult,theparentreadsthestatus(whichisok),andthenreadsthesizeofthe(resolved)address—duetothepartialwrite,thisreadreturnsdatawrittenaftertheinjection,inourcaseaverylargevalue.Theparentcallsmallocforthisamountofmemory,whichresultsinSIGABRT,becauseitisunabletoallocatethememory.Furtherdetailsappearinthebugreportweﬁled[16].ImprovingCoverage:Besidesease-of-use,effectivenesscanalsobemeasuredbywhetherLFIcanimproveexistingregressiontestsuites.WeconsideredtheMySQLdatabaseserver,whichisthemostmatureopen-sourceRDBMS,ﬁrstreleasedin1995;itclaims11millioninstallations[4].MySQLshipswithitsownthoroughtestsuite.TheMySQL5.0testsuiteachieves73%overallbasicblockcoverage,whichisremarkableforanopen-sourceproject;wethere-foresetouttoseeifwecanimprovethiswithnohumaneffort.WeranLFIinfullyautomaticmode,generatingaran-domfaultinjectionscenariobasedonlibc.Withnohumanhelp,LFIimprovedthecoverageoftheMySQLtestsuitetoatleast74%overall;insomemodules(suchastheInnoDBibufimplementation)coverageimprovedby12%.Weex-pectthecoveragenumberstobeslightlyhigher,becausein12casesMySQLcrashedwithSIGSEGVandthecoverageinformationforthosetestcaseswasnotsaved.Weareen-couragedbythefactthat,withnohumanassistance,LFIwasabletoimproveamature,extensivetestsuite.FindingObscureScenarios:Athirdaspectofeffective-nessiswhetherLFIisabletoexercisescenariosthatex-istingtoolswouldnotﬁnd.Asalreadymentionedin§3.1and§3.3,theLFIproﬁlerfoundseveralreturnerrorcodesthataremissingfromtheAPIdocumentationofpopularli-braries.Byanalyzingdirectlythebinary,LFIhelpstestersﬁndfaultscenariosthattheywouldotherwisenotbeawareof;knowingtheseadditionalfaultscenariosenablestesterstowritemorethoroughtests.6.2.EﬃciencyTherunningtimeofatesttoolisanimportantfactorinitsadoption,becausetestersaregenerallyunwillingtowaitlongforresults.Forexample,thelongrunningtimesofmodelcheckershavediscouragedtheirwideuseintesting.TheLFIproﬁlerisfast:wemeasuredproﬁlingtimerangingfrom0.2secondsforasmalllibrary(libdmx,with18ex-portedfunctionsandan8KBcodesegment)to20secondsforalargelibrary(libxml2,with1612exportedfunctionsanda897KBcodesegment).Toproﬁlethe>1,000li-brariesfoundonatypicalLinuxsystemtakesseveralhours,butinpracticeweexpecttesterstoonlyproﬁlethelibrariesusedbytheprogramofinterest.Whenupdatingalibraryonthesystem,whichweexpectwillhappenaboutonceamonth,ittakesontheorderofminutestore-analyzethe978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
386
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:37:24 UTC from IEEE Xplore.  Restrictions apply. 