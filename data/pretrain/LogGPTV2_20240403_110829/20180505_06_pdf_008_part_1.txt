# Czech and Slovak PostgreSQL Users Group
## PostgreSQL for Oracle DBAs

**Note:** The Oracle database logo is not included on this page. Remember that you are generally not able to use Oracle logos unless you are specifically licensed or authorized to do so.

**Contributor:**
- Aleš Zelený (Email: [PI:EMAIL]), CSPUG, CC BY-SA

---

### PostgreSQL
**The world's most advanced open source database.**

#### Agenda
1. **Mind Migration**
   - Terminology
   - Architecture
   - Security
   - Backup and Recovery
   - High Availability / Disaster Recovery
   - Other Considerations

2. **Purpose of These Slides**
   - Understand the differences between Oracle and PostgreSQL
   - Provide a migration guide
   - Highlight common behaviors in RDBMS
   - Prevent potential displeasure during migration
   - Compare feature matrices

3. **Mind Migration**
   - **PostgreSQL is not an Oracle database:**
     - Both Oracle and PostgreSQL are excellent databases.
     - Their relationship is not like Red Hat and CentOS.
     - Do not expect equivalents for all Oracle RDBMS features in PostgreSQL.
     - Be impressed by PostgreSQL's broad range of data types.
     - PostgreSQL has extensions.

4. **Terminology**
   - **Architecture/Concepts:**
     - Cluster
     - Role
     - Instance
     - Database
     - Schema
     - Tablespace
     - Tuple (a finite ordered list of elements)
     - Architectural Fundamentals
     - Documentation Index

5. **Oracle and DB Relation**
   - **From Installed Software to Database (Simplified):**
     - **Instance:** Software loaded into memory working with one database.
     - **Oracle SW Installation:**
       - ORACLE_HOME: `/u01/app/oracle/product/11.2.0.4/db`
       - ORACLE_SID: `SALES`, `EMPLOYEE`, `DWH`, `INWEB`
       - Databases: `SALES`, `EMPLOYEE`, `DWH`, `INWEB`

6. **PostgreSQL and DB Relation**
   - **From Installed Software to Database (Simplified):**
     - **SW Installation:**
       - POSTGRESQL_HOME: `/usr/pgsql-9.4/`
       - PGDATA: `/var/lib/pgsql/9.4/data`
     - **Instance:**
       - Running postgres process
     - **Databases:**
       - `template0`, `template1`, `postgres`, `INWEB`, `DWH`, `SALES`

7. **Comparison: PostgreSQL and Oracle**
   - **From Installed Software to Database (Simplified):**
     - **PostgreSQL Installation 9.4:**
       - POSTGRESQL_HOME: `/usr/pgsql-9.4/`
       - PGDATA: `/var/lib/pgsql/9.4/data`
       - Databases: `template0`, `template1`, `postgres`, `INWEB`, `DWH`, `SALES`
     - **Oracle SW Installation:**
       - ORACLE_HOME: `/u01/app/oracle/product/12.1.0.2/db`
       - ORACLE_SID: `MYDB1`, `MYDB2`, `MYDB3`, `MYDB`
       - Databases: `DWH`, `INWEB`

8. **Oracle - DB Physical Structure**
   - **Oracle RAC (Real Application Clusters):**
     - Even with RAC setup, an Oracle instance serves one database.
     - Multitenant pluggable databases in version 12 break this rule.
   - **Physical Components:**
     - Parameter File
     - Control Files
     - Redo Log
     - Archived Logs
     - Data Files
     - Password File
     - UNDO Tablespaces

9. **Postgres - Cluster Physical Structure**
   - **Not Clustering Like Oracle RAC:**
     - Postgres uses a directory (PGDATA) to store all necessary data managed by the Postgres instance.
     - This directory contains configuration files and data files for all databases within the cluster.
   - **Database Cluster:**
     - Configuration Files
     - Databases Directory
     - Example:
       ```bash
       ps -fu postgres
       du -sh base/*
       tree base | head -5
       ```

10. **Postgres - Mapping to Oracle**
    - **Archiving:**
      - Postgres can create archives of online logs for Point-in-Time Recovery (PITR) and other purposes.
      - Instead of Oracle Archiver processes, Postgres uses any external command to copy inactive online logs to another destination.

11. **Tablespaces and Filesystems**
    - **Tablespaces:**
      - Can reside on different filesystems.
      - Outage prevention.
      - Data & storage tier lifecycle management.
      - Active data on SSD.
      - Archive data on rotating disks.
      - Temporary files on fast, unprotected storage.

12. **UNDO Tablespace in PostgreSQL**
    - **Location:**
      - Inside the data files.
    - **Maintenance:**
      - Vacuuming is required to avoid table bloat.
    - **Data Consistency:**
      - Managed using MVCC (Multiversion Concurrency Control).
      - Transaction isolation for each session.
      - Snapshot of data visible to each session.
      - Minimizes locking contention.
      - Readers never block writes.

13. **Online REDO ~ WAL Files**
    - **Oracle:**
      - Cyclic buffer.
      - Static amount of redo log groups.
      - Log switch tuning.
    - **PostgreSQL:**
      - Write-Ahead Log (WAL) files.
      - Soft limit in size.
      - File reuse.
      - `archive_command` is called when WAL is switched to a new file.

14. **WAL Files**
    - **Placement:**
      - On a separate filesystem.
    - **Space Requirements:**
      - Up to 9.4: `(2 + checkpoint_completion_target) * checkpoint_segments + 1` or `checkpoint_segments + wal_keep_segments + 1` files.
      - Starting with 9.5: `wal_min_size` (default 80MB) and `wal_max_size` (default 1GB).

15. **Archive_mode and WAL_level**
    - **Archive_mode:**
      - `off`, `on`, `always`.
    - **WAL_level:**
      - `minimal`: Used for crash recovery only.
      - `archive`: Used for streaming replication.
      - `hot_standby`: Used for read-only access to the replica.

16. **Memory Management**
    - **Oracle:**
      - SGA, Shared Pool, Library Cache, Data Buffer, Redo Log Buffer.
    - **PostgreSQL:**
      - Shared Buffers, WAL Buffers, CLOG Buffers, Work Mem, Maintenance Work Mem, Temp Buffers, Locks Space, Catalog Cache, Optimizer/Executor.

17. **Database Structure**
    - **Oracle:**
      - Tablespaces, Segments, Extents, Data Files, Operating System Blocks.
    - **PostgreSQL:**
      - Custom Tablespaces, Default Directories, Data Files, 8k Pages, 1GB Default Size Limit.

18. **Connections**
    - **Oracle:**
      - Listener process.
    - **PostgreSQL:**
      - Master process `postgres` listens for new connections.
      - `pg_hba.conf` (user/database/network settings)

---

This revised document provides a more structured and professional presentation of the content, making it easier to follow and understand.