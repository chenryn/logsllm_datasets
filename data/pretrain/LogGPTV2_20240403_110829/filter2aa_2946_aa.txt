# 滴水逆向课程笔记 - Win32

## 1. Win32课程介绍
许多开发者对Win32的理解存在误区，认为它仅用于界面绘制。实际上，即使已掌握MFC，深入学习Win32对于编写高效Windows程序仍然至关重要。正确理解并应用Win32是提升编程能力的关键一步。

## 2. 字符编码

### 2.1 原始的ASCII编码
计算机最初由美国人发明，因此早期设计时主要考虑英文字符需求，使用ASCII编码即可满足。然而，随着计算机技术的全球化普及，非拉丁语系国家的文字（如中文、日文等）无法通过原始ASCII编码来表示。

### 2.2 ASCII编码扩展：GB2312或GB2312-80
为解决ASCII编码局限性，中国开发了GB2312标准，该标准在原有ASCII基础上增加了汉字及图形符号的支持。尽管如此，GB2312仍不足以全面覆盖所有语言文字，并且当文本跨越不同编码体系传输时容易产生乱码问题。

### 2.3 Unicode编码
Unicode旨在提供一种全球统一的字符编码方案，能够涵盖几乎所有人类使用的文字系统。每个字符都赋予唯一的代码点，理论上解决了跨语言交流中的编码不兼容难题。不过，如何存储这些广泛范围内的字符成为新的挑战。

#### 2.4 Unicode存储实现
- **UTF-16**：以16位为单位存储Unicode字符，但某些特殊字符可能需要更多空间。
- **UTF-8**：采用变长字节序列存储Unicode字符，更加节省空间但解析复杂度增加。

### 2.5 BOM (Byte Order Mark)
BOM用于标识文件开头处的编码格式，帮助接收端正确识别Unicode文本流的编码方式。

## 3. C语言中的宽字符
本章节探讨C语言环境下如何处理多种字符编码形式，特别是针对ASCII与Unicode之间的差异。例如，在定义字符串变量时需区分普通字符数组(`char`)和宽字符数组(`wchar_t`)，并选择合适的函数库进行操作。

## 4. Win32 API中的宽字符
介绍了Win32应用程序接口中涉及宽字符处理的相关知识，包括常用API函数如`MessageBox`的不同版本(`MessageBoxA` vs `MessageBoxW`)以及推荐使用的类型定义(`TCHAR`, `PTSTR`)等。

## 5. 进程的创建过程
解释了Windows操作系统下进程的概念及其创建机制。重点讲述了`CreateProcess`函数的工作原理及其参数配置方法，同时还简要提到了进程虚拟地址空间布局等相关内容。

## 6. 创建进程
详细说明了如何利用`CreateProcess`函数来启动一个新的进程实例，包括设置必要的环境变量、传递命令行参数等内容，并展示了完整的示例代码。

## 7. 句柄表
讨论了内核对象的概念以及它们在操作系统内部是如何被管理和引用的。特别强调了句柄的作用——作为访问特定资源（如文件、线程等）的安全令牌，并给出了基本的使用案例。

以上是对滴水逆向课程关于Win32部分内容的总结概述。希望这能为你进一步探索相关主题提供有价值的参考信息。