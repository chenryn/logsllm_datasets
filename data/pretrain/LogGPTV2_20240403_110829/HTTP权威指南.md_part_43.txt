### 向分布式对象系统的借鉴

分布式对象系统在可扩展性和功能特性方面具有显著优势。自1996年起，研究界一直在讨论是否应将HTTP与更复杂的分布式对象系统结合。采用分布式对象模型在Web中具有诸多益处，更多相关信息请参阅Xerox PARC早期发布的文章《Migrating the Web Toward Distributed Objects》（“向分布式对象迁移”）（ftp://ftp.parc.xerox.com/pub/ilu/misc/Webilu.html）。

然而，将Web与分布式对象统一的雄心壮志也遭遇了一些阻力，部分社区对HTTP-NG的应用持保留态度。过去的一些分布式对象系统因其实现复杂且重量级而受到诟病。HTTP-NG项目组致力于解决这些问题。

### 第一层——报文传输

HTTP-NG架构分为三层，我们从最底层开始探讨。报文传输层专注于高效地传输报文，而不考虑其内容和目的。该层提供了一个API，适用于各种网络协议栈。其主要目标包括：

- **管道化和批量化**：通过减少往返延迟来提高性能。
- **连接重用**：降低延迟并提升带宽利用率。
- **多流复用**：在同一连接上并行处理多个报文流，优化共享连接资源。
- **报文分段**：简化报文边界的确定。

HTTP-NG工作组投入大量精力开发了WebMUX协议，这是一种高性能的报文传输协议，支持在单个TCP连接上交错传输多个报文。本章将详细介绍WebMUX。

### 第二层——远程调用

HTTP-NG的中间层提供了远程方法调用的支持。这一层为客户端提供了通用的请求/响应框架，用于调用服务器端的操作。它并不关心特定操作的具体实现或语义，如缓存、安全性和方法逻辑等，而是专注于提供一个接口，使客户端能够远程调用服务器上的操作。

尽管有许多现有的远程方法调用标准（例如CORBA、DOM和Java RMI），但HTTP-NG的目标是扩展HTTP/1.1中的HTTP RMI支持，以一种可扩展的面向对象方式提供更通用的远程过程调用。为此，建议采用二进制连接协议，该协议支持高性能的远程操作调用，并返回结果。本章稍后将详细讨论此协议。

### 第三层——Web应用

Web应用层是执行语义和应用程序特定逻辑的地方。HTTP-NG工作组避免了过度扩展HTTP应用特性的诱惑，转而专注于基础建设。该层描述了一个用于提供应用程序特定服务的系统，不同应用可能使用不同的API。例如，HTTP/1.1的Web应用和WebDAV可以共享一些公共部分，但也存在差异。HTTP-NG允许多个应用共存于同一层，并提供了一种添加新应用的机制。

Web应用层的基本思想是提供与HTTP/1.1等效的功能和一些扩展接口，同时将其映射到一个可扩展的分布式对象框架中。更多关于Web应用层接口的信息，请参阅相关文档（http://www.w3.org/Protocols/HTTP-NG/1998/08/draft-larner-nginterfaces-00.txt）。

### WebMUX

WebMUX是一种高性能的报文传输系统，旨在通过一个复用的TCP连接并行传输报文。它可以有效地对独立报文流进行分组和复用，从而提高数据传输效率。WebMUX的关键目标包括：

- 简洁设计
- 高性能
- 复用能力
- 基于信用的流量控制
- 数据对齐
- 丰富的功能接口

更多关于WebMUX协议的信息，请访问W3C网站（http://www.w3.org/Protocols/MUX/WD-mux-980722.html）。

### 二进制连接协议

二进制连接协议被提议用于增强下一代HTTP协议的远程操作支持。该协议定义了一系列“对象类型”，并为每种类型分配一组方法。每个对象类型都有一个URI，以便对外公布其描述和方法。这使得HTTP-NG提供了一种比HTTP/1.1更具扩展性和面向对象的执行模型。

二进制连接协议通过有状态的连接承载客户端到服务器的操作调用请求以及服务器到客户端的结果应答。请求报文包含操作、目标对象和可选的数据值；应答报文则带回操作状态、请求序列号及可选的返回值。此外，协议还定义了几种内部控制报文，以提高连接效率和稳定性。

更多关于二进制连接协议的内容，请参阅W3C的相关文档（http://www.w3.org/Protocols/HTTP-NG/1998/08/draft-janssen-httpng-wire-00.txt）。

### 当前状态

截至1998年底，HTTP-NG小组认为将HTTP-NG建议引入IETF尚不成熟。工业界和各社团尚未完全适应HTTP/1.1，若无明确转换计划就进行重大重构可能会造成破坏。因此，提出了以下两点建议：

- 重点关注WebMUX传输技术，而非一次性实现整个HTTP-NG重构。
- 探讨通过XML等灵活方式修改正式协议类型，以满足Web应用需求。

目前，HTTP-NG的应用尚未成为主导力量，但随着HTTP应用的不断增多及其作为平台的广泛应用，HTTP-NG提出的技术在未来可能会变得更加重要。

### 更多信息

更多关于HTTP-NG的信息，请参阅以下详细规范和活动报告：

- W3C HTTP-NG工作组（http://www.w3.org/Protocols/HTTP-NG/）
- WebMUX协议（http://www.w3.org/Protocols/MUX/WD-mux-980722.html）
- HTTP-NG的二进制连接协议（http://www.w3.org/Protocols/HTTP-NG/1998/08/draft-janssen-httpng-wire-00.txt）
- HTTP-NG Web接口（http://www.w3.org/Protocols/HTTP-NG/1998/08/draft-larner-nginterfaces-00.txt）
- Web向分布式对象迁移（ftp://ftp.parc.xerox.com/pub/ilu/misc/Webilu.html）

### 客户端识别与Cookie机制

#### 个性化接触

现代Web站点希望通过个性化接触来更好地了解用户并跟踪其浏览行为。例如，Amazon.com可以通过以下几种方式实现个性化体验：

- **个性化问候**：为用户生成定制的欢迎词和页面内容。
- **有的放矢的推荐**：根据用户的兴趣推荐商品。
- **管理信息存档**：存储用户的地址和信用卡信息，简化购物流程。
- **记录会话**：区分不同用户的HTTP事务，构建增量状态。

#### HTTP首部

表11-1列出了常见的HTTP请求首部，用于承载用户相关信息。这些首部包括From、User-Agent、Referer等。虽然它们提供了一些用户信息，但不足以实现可靠的用户识别。后续章节将讨论更高级的用户识别技术。

#### 客户端IP地址

早期的Web开发者尝试使用客户端IP地址作为标识形式。然而，这种方法存在局限性，因为并非每个用户都拥有唯一的IP地址。因此，需要更可靠的方法来识别特定用户。