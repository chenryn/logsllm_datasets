of (2 f + 1) nodes decides that the leader is faulty, then
the next leader in a well-known schedule takes over.
PBFT relies upon a correct
PBFT has its limitations. First, it assumes a ﬁxed,
well-deﬁned group of replicas, thus contradicting Bit-
coin’s basic principle of being decentralized and open
for anyone to participate. Second, each PBFT replica
normally communicates directly with every other replica
during each consensus round, resulting in O(n2) com-
munication complexity: This is acceptable when n is
typically 4 or not much more, but becomes impractical
if n represents hundreds or thousands of Bitcoin nodes.
Third, after submitting a transaction to a PBFT service,
a client must communicate with a super-majority of the
replicas in order to conﬁrm the transaction has been com-
USENIX Association  
25th USENIX Security Symposium  281
3
Authoritative statements: e.g. log records
1 record
2 record
3 record
each statement collectively
signed by both authority
and all or most witnesses
Authority
Witness
Cosigners
Figure 1: CoSi protocol architecture
mitted and to learn its outcome, making secure transac-
tion veriﬁcation unscalable.
2.3 Scalable Collective Signing
CoSi [54] is a protocol for scalable collective signing,
which enables an authority or leader to request that state-
ments be publicly validated and (co-)signed by a decen-
tralized group of witnesses. Each protocol run yields
a collective signature having size and veriﬁcation cost
comparable to an individual signature, but which com-
pactly attests that both the leader and its (perhaps many)
witnesses observed and agreed to sign the statement.
To achieve scalability, CoSi combines Schnorr multi-
signatures [51] with communication trees that are long
used in multicast protocols [13, 21, 55].
Initially, the
protocol assumes that signature veriﬁers know the public
keys of the leader and those of its witnesses, all of which
combine to form a well-known aggregate public key. For
each message to be collectively signed, the leader then
initiates a CoSi four-phase protocol round that require
two round-trips over the communication tree between the
leader and its witnesses:
1. Announcement: The leader broadcasts an announce-
ment of a new round down the communication tree.
The announcement can optionally include the message
M to be signed, otherwise M is sent in phase three.
2. Commitment: Each node picks a random secret
and uses it to compute a Schnorr commitment.
In
a bottom-up process, each node obtains an aggre-
gate Schnorr commitment from its immediate chil-
dren, combines those with its own commitment, and
passes a further-aggregated commitment up the tree.
3. Challenge: The leader computes a collective Schnorr
challenge using a cryptographic hash function and
broadcasts it down the communication tree, along with
the message M to sign, if the latter has not already
been sent in phase one.
4. Response: Using the collective challenge, all nodes
compute an aggregate response in a bottom-up fashion
that mirrors the commitment phase.
The result of this four-phase protocol is the production
of a standard Schnorr signature that requires about 64
bytes, using the Ed25519 elliptic curve [6], and that any-
one can verify against the aggregate public key nearly as
efﬁciently as the veriﬁcation of an individual signature.
Practical caveats apply if some witnesses are ofﬂine dur-
ing the collective signing process: in this case the CoSi
protocol can proceed, but the resulting signature grows
to include metadata veriﬁably documenting which wit-
nesses did and did not co-sign. We refer to the CoSi pa-
per for details [54].
3 ByzCoin Design
This section presents ByzCoin with a step-by-step ap-
proach, starting from a simple “strawman” combination
of PBFT and Bitcoin. From this strawman, we progres-
sively address the challenges of determining consensus
group membership, adapting Bitcoin incentives and min-
ing rewards, making the PBFT protocol scale to large
groups and handling block conﬂicts and selﬁsh mining.
3.1 System Model
ByzCoin is designed for untrustworthy networks that can
arbitrarily delay, drop, re-order or duplicate messages.
To avoid the FLP impossibility [27], we assume the net-
work has a weak synchrony property [14]. The Byz-
Coin system is comprised of a set of N block miners
that can generate key-pairs, but there is no trusted public-
key infrastructure. Each node i has a limited amount of
hash power that corresponds to the maximum number of
block-header hashes the node can perform per second.
At any time t a subset of miners M (t) is controlled by
a malicious attacker and are considered faulty. Byzantine
miners can behave arbitrarily, diverting from the protocol
and colluding to attack the system. The remaining hon-
est miners follow the prescribed protocol. We assume
that the total hash power of all Byzantine nodes is less
than 1
4 of the system’s total hash power at any time, since
proof-of-work-based cryptocurrencies become vulnera-
ble to selﬁsh mining attacks by stronger adversaries [25].
3.2 Strawman Design: PBFTCoin
For simplicity, we begin with PBFTCoin, an unrealisti-
cally simple protocol that naively combines PBFT with
Bitcoin, then gradually reﬁne it into ByzCoin.
For now, we simply assume that a group of n = 3 f + 1
PBFT replicas, which we call trustees, has been ﬁxed and
282  25th USENIX Security Symposium 
USENIX Association
4
globally agreed upon upfront, and that at most f of these
trustees are faulty. As in PBFT, at any given time, one of
these trustees is the leader, who proposes transactions
and drives the consensus process. These trustees col-
lectively maintain a Bitcoin-like blockchain, collecting
transactions from clients and appending them via new
blocks, while guaranteeing that only one blockchain his-
tory ever exists and that it can never be rolled back or
rewritten. Prior work has suggested essentially such a
design [17, 19], though without addressing the scalabil-
ity challenges it creates.
Under
these simplifying assumptions, PBFTCoin
guarantees safety and liveness, as at most f nodes are
faulty and thus the usual BFT security bounds apply.
However, the assumption of a ﬁxed group of trustees
is unrealistic for Bitcoin-like decentralized cryptocurren-
cies that permit open membership. Moreover, as PBFT
trustees authenticate each other via non-transferable
symmetric-key MACs, each trustee must communicate
directly with most other trustees in every round, thus
yielding O(n2) communication complexity.
Subsequent sections address these restrictions, trans-
forming PBFTCoin into ByzCoin in four main steps:
1. We use Bitcoin’s proof-of-work mechanism to deter-
mine consensus groups dynamically while preserving
Bitcoin’s defense against Sybil attacks.
2. We replace MAC-authenticated direct communica-
tion with digital signatures to make authentication
transferable and thereby enabling sparser communica-
tion patterns that can reduce the normal case commu-
nication latency from O(n2) to O(n).
3. We employ scalable collective signing to reduce per-
round communication complexity further to O(logn)
and reduce typical signature veriﬁcation complexity
from O(n) to O(1).
4. We decouple transaction veriﬁcation from leader elec-
tion to achieve a higher transaction throughput.
3.3 Opening the Consensus Group
Removing PBFTCoin’s assumption of a closed consen-
sus group of trustees presents two conﬂicting challenges.
On the one hand, conventional BFT schemes rely on a
well-deﬁned consensus group to guarantee safety and
liveness. On the other hand, Sybil attacks [23] can triv-
ially break any open-membership protocol involving se-
curity thresholds, such as PBFT’s assumption that at
most f out of 3 f + 1 members are honest.
Bitcoin and many of its variations employ a mecha-
nism already suited to this problem: proof-of-work min-
ing. Only miners who have dedicated resources are al-
lowed to become a member of the consensus group. In
reﬁning PBFTCoin, we adapt Bitcoin’s proof-of-work
mining into a proof-of-membership mechanism. This
blockchain
share window of size w
block
share
miner
L
leader
L
trustees
Figure 2: Valid shares for mined blocks in the blockchain
are credited to miners
mechanism maintains the “balance of power” within the
BFT consensus group over a given ﬁxed-size sliding
share window. Each time a miner ﬁnds a new block, it re-
ceives a consensus group share, which proves the miner’s
membership in the group of trustees and moves the share
window one step forward. Old shares beyond the cur-
rent window expire and become useless for purposes of
consensus group membership. Miners holding no more
valid shares in the current window lose their membership
in the consensus group, hence they are no longer allowed
to participate in the decision-making.
At a given moment in time, each miner wields “vot-
ing power” of a number of shares equal to the number
of blocks the miner has successfully mined within the
current window. Assuming collective hash power is rel-
atively stable, this implies that within a window, each
active miner wields a number of shares statistically pro-
portionate to the amount of hash power that the miner
has contributed during this time period.
The size w of the share window is deﬁned by the av-
erage block-mining rate over a given time frame and in-
ﬂuences certain properties such as the resilience of the
protocol to faults. For example, if we assume an average
block-mining rate of 10 minutes and set the duration of
the time frame to one day (or one week), then w = 144
(w = 1008). This mechanism limits the membership of
miners to recently active ones, which prevents the sys-
tem from becoming unavailable due to too many trustees
becoming inactive over time, or from miners aggregat-
ing many shares over an extended period and threatening
the balance in the consensus group. The relationship be-
tween blocks, miners and shares is illustrated in Fig. 2.
Mining Rewards and Transaction Fees. As we can
no longer assume voluntary participation as in PBFT-
Coin’s closed group of trustees, we need an incentive
for nodes to obtain shares in the consensus group and to
remain active. For this purpose, we adopt Bitcoin’s ex-
USENIX Association  
25th USENIX Security Symposium  283
5
isting incentives of mining rewards and transaction fees.
But instead of these rewards all going to the miner of
the most recent block we split a new block’s rewards and
fees across all members of the current consensus group,
in proportion to the number of shares each miner holds.
As a consequence, the more hash power a miner has de-
voted within the current window, hence the more shares
the miner holds, the more revenue the miner receives dur-
ing payouts in the current window. This division of re-
wards also creates incentives for consensus group mem-
bers to remain live and participate, because they receive
their share of the rewards for new blocks only if they con-
tinually participate, in particular contributing to the pre-
pare and commit phases of each BFT consensus round.
3.4 Replacing MACs by Digital Signatures
In our next reﬁnement step towards ByzCoin, we tackle
the scalability challenge resulting from PBFT’s typical
communication complexity of O(n2), where n is the
group size. PBFT’s choice of MAC-authenticated all-
to-all communication was motivated by the desire to
avoid public-key operations on the critical transaction
path. However, the cost for public-key operations has
decreased due to well-optimized asymmetric cryptosys-
tems [6], making those costs less of an issue.
By adopting digital signatures for authentication, we
are able to use sparser and more scalable communica-
tion topologies, thus enabling the current leader to col-
lect and distribute third-party veriﬁable evidence that cer-
tain steps in PBFT have succeeded. This removes the
necessity for all trustees to communicate directly with
each other. With this measure we can either enable the
leader to collect and distribute the digital signatures, or
let nodes communicate in a chain [32], reducing the
normal-case number of messages from O(n2) to O(n).
3.5 Scalable Collective Signing
Even with signatures providing transferable authentica-
tion, the need for the leader to collect and distribute –
and for all nodes to verify – many individual signatures
per round can still present a scalability bottleneck. Dis-
tributing and verifying tens or even a hundred individual
signatures per round might be practical. If we want con-
sensus groups with a thousand or more nodes, however
(e.g., representing all blocks successfully mined in the
past week), it is costly for the leader to distribute 1000
digital signatures and wait for everyone to verify them.
To tackle this challenge, we build on the CoSi proto-
col [54] for collective signing. CoSi does not directly im-
plement consensus or BFT, but it offers a primitive that
the leader in a BFT protocol can use to collect and aggre-
gate prepare and commit messages during PBFT rounds.
We implement a single ByzCoin round by using two
sequential CoSi rounds initiated by the current leader
(i.e., the owner of the current view). The leader’s an-
nouncement of the ﬁrst CoSi round (phase 1 in Sec-
tion 2.3) implements the pre-prepare phase in the stan-
dard PBFT protocol (Section 2.2). The collective sig-
nature resulting from this ﬁrst CoSi round implements
the PBFT protocol’s prepare phase, in which the leader
obtains attestations from a two-thirds super-majority
quorum of consensus group members that the leader’s
proposal
is safe and consistent with all previously-
committed history.
As in PBFT, this prepare phase ensures that a proposal
can be committed consistently, but by itself it is insufﬁ-
cient to ensure that the proposal will be committed. The
leader and/or some number of other members could fail
before a super-majority of nodes learn about the success-
ful prepare phase. The ByzCoin leader therefore initi-
ates a second CoSi round to implement the PBFT proto-
col’s commit phase, in which the leader obtains attesta-
tions from a two-thirds super-majority that all the sign-
ing members witnessed the successful result of the pre-
pare phase and made a positive commitment to remem-
ber the decision. This collective signature, resulting from
this second CoSi round, effectively attests that a two-
thirds super-majority of members not only considers the