User: We have a common python installation for all of our systems in order to ensure every system has the same python installation and to ease configuration issues.  This installation is located on a shared drive.  We also have multiple platforms that share this installation.  We get around conflicting platform-specific files by setting the --exec-prefix configure option when compiling python.
My issue is that I now want to install an egg using easy_install (or otherwise) that is platform-dependent.  easy_install puts the egg in the site-packages directory of the platform-independent part of the install.  The name of the egg has the platform in it so there should be no conflict.  But python will only load the first one it finds.  (So, on Solaris it might try to load the Linux egg).  Modifying the easy-install.pth file can change which one it finds, but that's pretty useless.
I can move the .egg files into a platform-depended packages directory and then use pkg_resources.require() to load them (or manually adjust the path).  But it seems as though I shouldn't have to since the platform is in the name of the egg.
Is there any more generic way I can ensure that python will load the egg for the correct platform?
Assistant: Use "easy_install -m" to install all the platform-specific packages, so that there is no default version on sys.path.  That way, version resolution takes place at runtime, and platform information will be taken into consideration.