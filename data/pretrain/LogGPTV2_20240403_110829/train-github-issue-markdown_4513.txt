### System Information
- **Custom Code (vs. Stock Example Script in TensorFlow)**: Yes
- **Operating System and Distribution**: macOS 10.13.3
- **TensorFlow Installation Method**: Source
- **TensorFlow Version**: 1.6
- **Python Version**: 3.6.3
- **Bazel Version (if compiling from source)**: 0.9
- **CUDA/cuDNN Version**: 9/7
- **GPU Model and Memory**: NVIDIA GeForce GTX 1080 Ti, 12 GB

### Issue Description
I have written custom code to train a MobileNet model from scratch. I also attempted to use the Keras `MobileNet` function for training, but neither approach successfully converts the model to TFLite.

### Command and Error
The command I am using to convert the model is:
```sh
./bazel-bin/tensorflow/contrib/lite/toco/toco --input_file=/path/to/MobileNet-trained.pb --input_format=TENSORFLOW_GRAPHDEF --output_format=TFLITE --output_file=train-1.tflite --inference_type=FLOAT --input_arrays=input_1 --output_arrays=dense_1/Sigmoid --allow_custom_ops
```

The output of the command is as follows:
```
2018-04-17 15:25:11.070338: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1236] Converting unsupported operation: RandomUniform
2018-04-17 15:25:11.098993: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 865 operators, 1364 arrays (0 quantized)
2018-04-17 15:25:11.139921: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After Removing unused ops pass 1: 809 operators, 1280 arrays (0 quantized)
2018-04-17 15:25:11.183528: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 809 operators, 1280 arrays (0 quantized)
1984959600
2006980784
2018-04-17 15:25:11.184242: F tensorflow/contrib/lite/toco/graph_transformations/resolve_batch_normalization.cc:90] Check failed: mean_shape.dims() == multiplier_shape.dims()
Abort trap: 6
```

### Additional Notes
- The `RandomUniform` operation is not supported by TFLite.
- There appears to be an issue with the dimensions of the mean and multiplier shapes during the batch normalization resolution.

If you have any suggestions or solutions, please let me know.