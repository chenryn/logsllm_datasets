#------------------------------------------------------------------------------  
# These options allow settings to be loaded from files other than the  
# default postgresql.conf.  Note that these are directives, not variable  
# assignments, so they can usefully be given more than once.  
#include_dir = '...'			# include files ending in '.conf' from  
					# a directory, e.g., 'conf.d'  
#include_if_exists = '...'		# include file only if it exists  
#include = '...'			# include file  
#------------------------------------------------------------------------------  
# CUSTOMIZED OPTIONS  
#------------------------------------------------------------------------------  
# Add settings for extensions here  
```  
```  
postgres@6f60081d4ace:~/14/pgdata$ grep "^[a-z]" postgresql.conf|awk -F "#" '{print $1}'  
max_connections = 100			  
shared_buffers = 128MB			  
dynamic_shared_memory_type = posix	  
max_wal_size = 1GB  
min_wal_size = 80MB  
log_timezone = 'Etc/UTC'  
datestyle = 'iso, mdy'  
timezone = 'Etc/UTC'  
lc_messages = 'en_US.UTF-8'			  
lc_monetary = 'en_US.UTF-8'			  
lc_numeric = 'en_US.UTF-8'			  
lc_time = 'en_US.UTF-8'				  
default_text_search_config = 'pg_catalog.english'  
```  
`postgresql.auto.conf` // `alter system` 配置的热配置文件, 优先级高于`postgresql.conf`  
```  
postgres@6f60081d4ace:~/14/pgdata$ cat postgresql.auto.conf   
# Do not edit this file manually!  
# It will be overwritten by the ALTER SYSTEM command.  
listen_addresses = '0.0.0.0'  
port = 1921  
max_connections = 2000  
unix_socket_directories = '., /var/run/postgresql'  
shared_buffers = 128MB  
dynamic_shared_memory_type = posix  
vacuum_cost_delay = 0  
bgwriter_delay = 20ms  
bgwriter_lru_maxpages = 500  
bgwriter_lru_multiplier = 5.0  
max_parallel_workers_per_gather = 0  
synchronous_commit = off  
wal_compression = on  
wal_writer_delay = 10ms  
max_wal_size = 1GB   
min_wal_size = 80MB   
random_page_cost = 1.1  
log_destination = 'csvlog'  
logging_collector = on  
log_truncate_on_rotation = on  
log_timezone = 'Etc/UTC'   
autovacuum = on  
autovacuum_vacuum_cost_delay = 0ms  
vacuum_freeze_table_age = 750000000   
vacuum_multixact_freeze_table_age = 750000000   
datestyle = 'iso, mdy'   
timezone = 'Etc/UTC'   
lc_messages = 'en_US.UTF-8'  
lc_monetary = 'en_US.UTF-8'  
lc_numeric = 'en_US.UTF-8'  
lc_time = 'en_US.UTF-8'  
default_text_search_config = 'pg_catalog.english'  
```  
```  
postgres@6f60081d4ace:~/14/pgdata$ psql  
psql (14.9 (Debian 14.9-1.pgdg110+1))  
Type "help" for help.  
db1=> show max_connections ;  
 max_connections   
-----------------  
 2000  
(1 row)  
```  
#### 6 查看数据库日志文件  
```  
cd $PGDATA/log  
ll  
total 20K  
drwx------ 2 postgres postgres 4.0K Nov 10 12:17 .  
-rw------- 1 postgres postgres  162 Nov 10 12:17 postgresql-2023-11-10_121724.log  
drwx------ 1 postgres postgres 4.0K Nov 10 12:17 ..  
-rw------- 1 postgres postgres 1.3K Nov 10 12:17 postgresql-2023-11-10_121724.csv  
```  
#### 7 查看数据库bin目录内容  
```  
cd $PGHOME/bin  
ll  
total 15M  
-rwxr-xr-x 1 root root  26K May  2  2023 pg_send_cancellation  
-rwxr-xr-x 1 root root  47K Aug  8 08:16 vacuumlo // 清除未被关联的大对象  
-rwxr-xr-x 1 root root  88K Aug  8 08:16 vacuumdb // 垃圾回收  
-rwxr-xr-x 1 root root  87K Aug  8 08:16 reindexdb // 重建索引  
-rwxr-xr-x 1 root root 724K Aug  8 08:16 psql // SQL客户端  
lrwxrwxrwx 1 root root    8 Aug  8 08:16 postmaster -> postgres // main进程命令  
-rwxr-xr-x 1 root root 8.2M Aug  8 08:16 postgres // main进程命令  
-rwxr-xr-x 1 root root 103K Aug  8 08:16 pg_waldump // 分析wal日志关键信息  
-rwxr-xr-x 1 root root 103K Aug  8 08:16 pg_verifybackup // 校验物理备份文件健康状态  
-rwxr-xr-x 1 root root 155K Aug  8 08:16 pg_upgrade // 升级大版本  
-rwxr-xr-x 1 root root  39K Aug  8 08:16 pg_test_timing // 测试时钟性能  
-rwxr-xr-x 1 root root  47K Aug  8 08:16 pg_test_fsync // 测试文件系统的IO延迟指标  
-rwxr-xr-x 1 root root 135K Aug  8 08:16 pg_rewind // 回卷数据库集群到过去的某个时刻  
-rwxr-xr-x 1 root root 192K Aug  8 08:16 pg_restore // 逻辑还原  
-rwxr-xr-x 1 root root  67K Aug  8 08:16 pg_resetwal // 暴力修改控制文件, 以抛弃不一致的wal/redo文件带来的无法启动问题  
-rwxr-xr-x 1 root root  91K Aug  8 08:16 pg_recvlogical // 通过流复制协议接收逻辑日志  
-rwxr-xr-x 1 root root  91K Aug  8 08:16 pg_receivewal // 通过流复制协议接收wal日志  
-rwxr-xr-x 1 root root  71K Aug  8 08:16 pg_isready // 通过wire protocol检测数据库实例状态  
-rwxr-xr-x 1 root root 116K Aug  8 08:16 pg_dumpall // 逻辑备份所有数据库  
-rwxr-xr-x 1 root root 425K Aug  8 08:16 pg_dump // 逻辑备份单个数据库  
-rwxr-xr-x 1 root root  75K Aug  8 08:16 pg_ctl // 数据库实例控制命令  
-rwxr-xr-x 1 root root  63K Aug  8 08:16 pg_controldata // 查询控制文件信息  
-rwxr-xr-x 1 root root  47K Aug  8 08:16 pg_config // 查询数据库集群软件编译信息  
-rwxr-xr-x 1 root root  63K Aug  8 08:16 pg_checksums // 通过checksum检查数据文件完整性  
-rwxr-xr-x 1 root root 188K Aug  8 08:16 pgbench // 模拟数据库压力测试  
-rwxr-xr-x 1 root root 124K Aug  8 08:16 pg_basebackup // 物理备份  
-rwxr-xr-x 1 root root  47K Aug  8 08:16 pg_archivecleanup // 清理归档文件  
-rwxr-xr-x 1 root root 104K Aug  8 08:16 pg_amcheck // 数据可靠性检测  
-rwxr-xr-x 1 root root  47K Aug  8 08:16 oid2name // OID转换  
-rwxr-xr-x 1 root root 148K Aug  8 08:16 initdb // 初始化数据库实例  
-rwxr-xr-x 1 root root  71K Aug  8 08:16 dropuser // 删除用户  
-rwxr-xr-x 1 root root  71K Aug  8 08:16 dropdb // 删除数据库  
-rwxr-xr-x 1 root root  80K Aug  8 08:16 createuser // 创建用户  
-rwxr-xr-x 1 root root  83K Aug  8 08:16 createdb // 创建数据库  
-rwxr-xr-x 1 root root  71K Aug  8 08:16 clusterdb // 使用索引来聚集数据  
-rwxr-xr-x 1 root root  31K Sep  4 10:37 ogr_fdw_info // ogr外部表状态  
-rwxr-xr-x 1 root root 104K Sep 17 18:43 pg_repack // 以最短时间的锁来回收膨胀表/索引占用的物理空间  
-rwxr-xr-x 1 root root 4.3K Sep 21 06:49 run_refresh.py  
-rwxr-xr-x 1 root root 8.7K Oct 17 13:39 pg_dump_anon.sh  
-rwxr-xr-x 1 root root 9.1K Oct 17 13:52 postgresql // pg_bulkload相关命令  
-rwxr-xr-x 1 root root 318K Oct 17 13:52 pg_bulkload // 绕过wal直接写数据文件的高速批量数据导入工具  
-rwxr-xr-x 1 root root 610K Oct 17 14:50 pg_rman // 块级别增量备份/恢复数据库工具  
-rwxr-xr-x 1 root root 589K Oct 17 17:17 pg_statsinfod // 数据库统计工具  
-rwxr-xr-x 1 root root  987 Oct 17 17:17 archive_pglog.sh  
-rwxr-xr-x 1 root root 346K Oct 17 17:17 pg_statsinfo // 数据库统计工具  
drwxr-xr-x 1 root root 4.0K Oct 17 17:17 .  
drwxr-xr-x 1 root root 4.0K Oct 17 17:20 ..  
```  
#### 8 查看数据库相关环境变量  
https://www.postgresql.org/docs/14/libpq-envars.html  
```  
cat ~/.bash_profile   
#  add by digoal  
alias rm='rm -i'  
alias cp='cp -i'  
alias ll='ls -larth'  
alias mv='mv -i'  
export PGHOME=/usr/lib/postgresql/14  
export PATH=$PGHOME/bin:$PATH  
export LD_LIBRARY_PATH=$PGHOME/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH  
export PGDATA=/var/lib/postgresql/14/pgdata  
export PGUSER=postgres  
export PGHOST=$PGDATA  
export PGPORT=1921  
export PGDATABASE=postgres  
export LC_ALL=en_US.UTF-8  
export LD_LIBRARY_PATH=$PGHOME/lib/oracle:$LD_LIBRARY_PATH  
export ORACLE_HOME=$PGHOME/lib/oracle  
export TNS_ADMIN=$ORACLE_HOME/network/admin/  
```  
#### 9 详细的连接参数  
https://www.postgresql.org/docs/14/libpq-connect.html#LIBPQ-CONNSTRING  
```  
postgresql://[userspec@][hostspec][/dbname][?paramspec]  
where userspec is:  
user[:password]  
and hostspec is:  
[host][:port][,...]  
and paramspec is:  
name=value[&...]  
```  
#### 10 登陆数据库  
```  
psql  
```  
#### 11 查看数据库版本  
```  
db1=> select version();  
                                                           version                                                             
-----------------------------------------------------------------------------------------------------------------------------  
 PostgreSQL 14.9 (Debian 14.9-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit  
(1 row)  
```  
#### 12 创建用户  
```  
db1=> create role r1 login encrypted password 'pwd123';  
CREATE ROLE  
```  
#### 13 创建表空间  
```  
cd $PGDATA/pg_tblspc  
pwd  
  /var/lib/postgresql/14/pgdata/pg_tblspc  
mkdir tbs1  
mkdir tbs2  
db1=> create tablespace db1_data location '/var/lib/postgresql/14/pgdata/pg_tblspc/tbs1';  
WARNING:  tablespace location should not be inside the data directory  
CREATE TABLESPACE  
db1=> create tablespace db1_idx location '/var/lib/postgresql/14/pgdata/pg_tblspc/tbs2';  
WARNING:  tablespace location should not be inside the data directory  
CREATE TABLESPACE  
db1=> \db  
                         List of tablespaces  
    Name    |  Owner   |                   Location                     
------------+----------+----------------------------------------------  
 db1_data   | postgres | /var/lib/postgresql/14/pgdata/pg_tblspc/tbs1  
 db1_idx    | postgres | /var/lib/postgresql/14/pgdata/pg_tblspc/tbs2  
 pg_default | postgres |   
 pg_global  | postgres |   
(4 rows)  
```  
正常情况不建议把表空间放在数据库数据目录, 这里只是为了演示功能. 实际情况建议根据空间和性能需求, 将表空间放在独立的文件系统中.   
#### 14 创建数据库  
```  
db1=> \h create database  
Command:     CREATE DATABASE  
Description: create a new database  
Syntax:  
CREATE DATABASE name  
    [ WITH ] [ OWNER [=] user_name ]  
           [ TEMPLATE [=] template ]  
           [ ENCODING [=] encoding ]  
           [ LOCALE [=] locale ]  
           [ LC_COLLATE [=] lc_collate ]  
           [ LC_CTYPE [=] lc_ctype ]  
           [ TABLESPACE [=] tablespace_name ]  
           [ ALLOW_CONNECTIONS [=] allowconn ]  
           [ CONNECTION LIMIT [=] connlimit ]  
           [ IS_TEMPLATE [=] istemplate ]  
URL: https://www.postgresql.org/docs/14/sql-createdatabase.html  
```  
```  
db1=> create database db1 with owner r1 template template0 encoding 'UTF-8' ;  
CREATE DATABASE  
db1=> \l+  
                                                                 List of databases  
   Name    |  Owner   | Encoding | Collate |   Ctype    |   Access privileges   |  Size   | Tablespace |                Description                   
-----------+----------+----------+---------+------------+-----------------------+---------+------------+--------------------------------------------  
 db1       | r1       | UTF8     | C       | en_US.UTF8 |                       | 8401 kB | pg_default |   
 postgres  | postgres | UTF8     | C       | en_US.UTF8 |                       | 8553 kB | pg_default | default administrative connection database  
 template0 | postgres | UTF8     | C       | en_US.UTF8 | =c/postgres          +| 8401 kB | pg_default | unmodifiable empty database  
           |          |          |         |            | postgres=CTc/postgres |         |            |   
 template1 | postgres | UTF8     | C       | en_US.UTF8 | =c/postgres          +| 8401 kB | pg_default | default template for new databases  
           |          |          |         |            | postgres=CTc/postgres |         |            |   
(4 rows)  
```  
#### 15 进入数据库  
```  
db1=> \c db1 r1  
You are now connected to database "db1" as user "r1".  
```  
#### 16 创建schema  
```  
db1=> create schema s1;  
CREATE SCHEMA  
```  
#### 17 配置```search_path```搜索路径  
```  
db1=> show search_path ;  
   search_path     
-----------------  
 "$user", public  
(1 row)  
db1=> alter role r1 set search_path ="$user",s1,public;  
ALTER ROLE  
db1=> \c db1 r1  
You are now connected to database "db1" as user "r1".  
db1=> show search_path ;  
     search_path       
---------------------  
 "$user", s1, public  
(1 row)  
```  
#### 18 创建表  
```  
db1=> create table tbl (id int, info text, ts timestamp);  
CREATE TABLE  