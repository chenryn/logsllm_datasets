 46 | 10101708 | 499972043.14903589 |  24 | 999999878 | 5050571588054961  
 47 | 10106118 | 500030970.34321596 |  29 | 999999844 | 5053371989943041  
 48 | 10095113 | 500116265.59612844 | 171 | 999999942 | 5048730214330929  
 49 | 10099635 | 500022230.53773765 |  19 | 999999896 | 5050042020317004  
 50 | 10099019 | 500071716.15831359 | 177 | 999999894 | 5050233762845416  
 51 | 10099397 | 499984737.20374058 |  65 | 999999933 | 5049544354961246  
 52 | 10101573 | 500040171.38814430 | 355 | 999999932 | 5051192294209851  
 53 | 10104969 | 500071097.82430129 |   5 | 999999948 | 5053202941310532  
 54 | 10096312 | 500084305.08322980 |  77 | 999999934 | 5049007170423474  
 55 | 10103707 | 499960231.76141549 |  45 | 999999850 | 5051451693369436  
 56 | 10099521 | 499829373.88272018 | 157 | 999999902 | 5048037257945384  
 57 | 10103823 | 500008680.94237251 | 100 | 999999925 | 5051999210705205  
 58 | 10099972 | 499913934.27681205 |  35 | 999999792 | 5049116738605642  
 59 | 10099747 | 499892322.50948692 |   2 | 999999808 | 5048785984588223  
 60 | 10105650 | 499950744.86907888 | 209 | 999999873 | 5052327244886207  
 61 | 10100503 | 500007920.18347482 |  28 | 999999903 | 5050331497836948  
 62 | 10098974 | 500002801.70267990 |  33 | 999999765 | 5049515294322520  
 63 | 10102023 | 499895229.11286373 | 353 | 999999910 | 5049953102088419  
 64 | 10102942 | 500113184.40411526 |  47 | 999999693 | 5052614495470081  
 65 | 10103111 | 499851261.81228049 |  48 | 999999726 | 5050052781579531  
 66 | 10100455 | 500019718.10486528 |  11 | 999999889 | 5050426661830877  
 67 | 10105426 | 500125756.38757753 | 245 | 999999866 | 5053983821868692  
 68 | 10098999 | 499977042.17730005 |  59 | 999999857 | 5049267648971511  
 69 | 10097014 | 500143184.43549093 |  91 | 999999720 | 5049952735249734  
 70 | 10103640 | 500126978.16268454 | 238 | 999999801 | 5053102941643626  
 71 | 10099125 | 500129933.36370557 |  51 | 999999877 | 5050874713281733  
 72 | 10099035 | 499987853.74665619 |   3 | 999999917 | 5049394834562362  
 73 | 10102325 | 499981690.45138629 |  62 | 999999809 | 5050977530989301  
 74 | 10098824 | 499966081.89006641 | 170 | 999999890 | 5049069466977368  
 75 | 10101250 | 500037496.22236486 |  63 | 999999928 | 5051003758716163  
 76 | 10101689 | 499896977.81069849 | 438 | 999999843 | 5049803801883577  
 77 | 10097737 | 500019227.64007143 |  34 | 999999751 | 5049062655652572  
 78 | 10107866 | 500012506.29948478 |  69 | 999999740 | 5054059411999348  
 79 | 10098900 | 499957103.41625533 | 114 | 999999846 | 5049016791690421  
 80 | 10102160 | 499846266.99365116 |  54 | 999999945 | 5049526964572583  
 81 | 10106622 | 499963749.19985233 | 229 | 999999944 | 5052944626865710  
 82 | 10101286 | 499966805.25783499 |  10 | 999999534 | 5050307690415695  
 83 | 10097518 | 499986390.21850389 |   8 | 999999777 | 5048621574986367  
 84 | 10105345 | 500042003.07276951 | 271 | 999999895 | 5053096955541396  
 85 | 10103461 | 499947692.92315683 |  18 | 999999904 | 5051202017489091  
 86 | 10099751 | 499991374.31581996 |   7 | 999999782 | 5049788382737577  
 87 | 10100597 | 499967794.21520292 |  14 | 999999907 | 5049973202346696  
 88 | 10103668 | 499850251.05678888 |  64 | 999999780 | 5050320986394444  
 89 | 10102886 | 499906895.35258341 |  21 | 999999941 | 5050502374361080  
 90 | 10096744 | 500199293.81002103 |  43 | 999999875 | 5050384218580567  
 91 | 10102311 | 499764530.03199971 |   1 | 999999950 | 5048776709152101  
 92 | 10097628 | 499985682.50355083 |  79 | 999999951 | 5048669427246965  
 93 | 10105004 | 499972842.51360445 |  25 | 999999852 | 5052227573491343  
 94 | 10097423 | 500030504.88384472 | 102 | 999999930 | 5049019520715746  
 95 | 10102589 | 499885307.44265257 |  74 | 999999770 | 5050135808231760  
 96 | 10099064 | 499905578.18719725 | 243 | 999999892 | 5048578428069509  
 97 | 10103503 | 500029746.92137618 | 123 | 999999921 | 5052052048109365  
 98 | 10097327 | 499944814.06690414 |  22 | 999999919 | 5048106269587731  
 99 |  5051395 | 499818438.43313204 |  39 | 999999936 | 2524780360808931  
(100 rows)  
Time: 11585.315 ms (00:11.585)  
```  
5、CPU消耗  
```  
top - 17:25:46 up 30 days, 22:13,  2 users,  load average: 4.78, 1.92, 2.38  
Tasks: 522 total,  58 running, 464 sleeping,   0 stopped,   0 zombie  
%Cpu(s): 96.1 us,  3.6 sy,  0.0 ni,  0.0 id,  0.3 wa,  0.0 hi,  0.0 si,  0.0 st  
KiB Mem : 23094336+total, 79267856 free,  2570612 used, 14910489+buff/cache  
KiB Swap:        0 total,        0 free,        0 used. 15125537+avail Mem  
```  
## 小结  
目前PostgreSQL已内置了并行计算的能力（透明和非透明）。结合列存+向量计算，PostgreSQL 统计分析能力到底能有多强？  
本文以vops（向量计算） + 并行计算为例，演示了单实例PostgreSQL 10亿数据量的count,avg,min,max,sum查询，耗时不到2秒。  
我们可以大胆的预见PostgreSQL结合列存、向量计算，OLAP能力会有多强。  
数据量 | 硬件 | CASE | 优化方法 | 空间占用 | 耗时 | CPU 利用率  
---|---|---|---|---|---|---  
10亿 | 56核虚拟机 | 10亿分组聚合求count,avg,min,max,sum | 普通单表HASH并行聚合 | 34 GB | 11.6 秒 | 100 %  
10亿 | 56核虚拟机 | 10亿分组聚合求count,avg,min,max,sum | 普通多表dblink异步调用并行聚合 | 34 GB | 9.6 秒 | 100 %  
10亿 | 56核虚拟机 | 10亿分组聚合求count,avg,min,max,sum | vops瓦片式多表dblink异步调用并行聚合 | 8.7 GB | 1.97 秒 | 100 %  
## 参考  
[《PostgreSQL dblink异步调用实现 并行hash分片JOIN - 含数据交、并、差 提速案例 - 含dblink VS pg 11 parallel hash join VS pg 11 智能分区JOIN》](../201802/20180201_02.md)    
[《PostgreSQL 11 preview - parallel hash (含hash JOIN , hash agg等) 性能极大提升》](../201802/20180201_01.md)    
[《PostgreSQL 向量化执行插件(瓦片式实现) 10x提速OLAP》](../201702/20170225_01.md)    
https://postgrespro.com/docs/enterprise/10/vops  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")