title:The importance of being overheard: throughput gains in wireless mesh
networks
author:Mikhail Afanasyev and
Alex C. Snoeren
The Importance of Being Overheard:
Throughput Gains in Wireless Mesh Networks
Mikhail Afanasyev and Alex C. Snoeren
University of California, San Diego
{mafanasyev,snoeren}@cs.ucsd.edu
ABSTRACT
1.
INTRODUCTION
A ﬂurry of recent work has focused on the performance gains that
may be achieved by leveraging the broadcast nature of the wireless
channel. In particular, researchers have observed that nodes other
than the intended recipient of a packet may overhear the transmis-
sion in certain settings. Systems have been proposed to leverage
this so-called overhearing phenomena by opportunistically adjust-
ing forwarding paths, suppressing similar transmissions, and super-
imposing packet transmissions using network coding. The effec-
tiveness of such approaches in practice depends greatly on the em-
pirical overhearing rate, which is a function not only of the partic-
ular network and its environment, but also upon individual nodes’
transmission rates.
Most existing opportunistic routing systems use a single, ﬁxed
bitrate throughout the network, leaving open signiﬁcant opportu-
nity for increased performance. We present modrate, a mecha-
nism to jointly optimize rate selection and overhearing opportu-
nities to maximize overall network throughput. We implement
modrate in ExOR, an integrated routing and MAC protocol that
leverages overhearing to improve bulk-data transfers, and compare
its performance in a 48-node wireless mesh network testbed to
ExOR, MORE, and traditional routing. While modrate increases
the number of proﬁtable overhearing instances in the network, we
discover that ExOR extracts far less value from overhearing than
might be expected. Instead, the majority of ExOR’s performance
improvement in many instances is due to its bulk-acknowledgment
scheme.
Categories and Subject Descriptors
C.2.1 [Computer Communication Networks]: Network Ar-
chitecture and Design; C.2.2 [Computer Communication Net-
works]: Network Protocols
General Terms
Algorithms, Experimentation, Measurement, Performance
Keywords
Overhearing, 802.11 mesh networks
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
Wireless mesh networks frequently provide connectivity in chal-
lenging environments, such as sparsely populated rural regions
with extremely long distances between nodes [9] and dense, urban
neighborhoods with a great deal of interference [2, 4]. The princi-
pal difﬁculty facing successful network operation in these deploy-
ments is channel variability: link quality can vary dramatically over
time, forcing the network to constantly reevaluate the most efﬁcient
way in which to transmit packets across the mesh.
Early work focused on selecting the optimal bitrate for each link
in the network. The goal of these systems was to send individual
packets as efﬁciently as possible between intermediate hops: when
channel quality is poor, nodes may employ low bitrates to ensure
frame exchanges are successful, but they seek to transmit packets
using the fastest bitrate the next hop can reliably decode as con-
ditions improve. Despite attempts to select the optimal bitrate for
an individual link, it is frequently the case that the chosen bitrate
is overly conservative, in that the packet “overshoots” the next hop
and is also successfully received at another node closer to the even-
tual destination. This phenomena is especially prevalent in net-
works with highly variable link quality, where senders are forced
to be more conservative.
A ﬂurry of recent work has focused on leveraging overhearing
to improve network throughput [1, 6, 8, 16]. Some opportunisti-
cally beneﬁt from serendipitous overhearing [1], while others de-
liberately seek out node conﬁgurations where packets are regularly
overheard [16]. The systems that report the greatest throughput im-
provement for bulk data transfers, however, fundamentally redesign
the way in which data is shipped from source to destination [6,
8]. In doing so, they not only alter the transport-layer behavior of
nodes, but also change the way they use the MAC (e.g., by send-
ing multicast instead of unicast packets, and turning off link-layer
acknowledgments, among others).
Somewhat surprisingly, each of these previous systems has lever-
aged existing rate-adaptation techniques to determine the appropri-
ate bitrate to employ for packet transmissions. Some simply ﬁx the
bitrate to a single value network wide [6, 8], while others employ
traditional link-local optimization [1, 7]. In either case, the result-
ing transmissions are likely to be sub-optimal in the global sense.
For example, while sending at 6 Mbps might be the best choice if
one considers the throughput between two hops A and B on some
path A → B → C → D → E, throttling down to 5.5 Mbps may
enable 80% of A’s packets to be overheard by node D, two hops
further along the path. The latter is clearly a better choice if one
seeks to optimize the throughput of the entire path from A to E.
The ﬁrst contribution of this paper is a new rate-selection al-
gorithm called modrate that seeks to jointly optimize individual
link bitrate selections with network-wide overhearing opportuni-
384ties. In particular, as opposed to selecting bitrates in a link-local
fashion based only upon a packet’s next hop, modrate selects the
bitrate that minimizes a packet’s expected number of transmissions
along a path to its eventual destination assuming that any overhear-
ing can be proﬁtably exploited. We have integrated modrate with
ExOR [6], one of the most effective systems currently available for
leveraging overhearing, and deployed it on a 48-node indoor wire-
less mesh network testbed.
As our initial survey shows, our testbed presents ample oppor-
tunities for overhearing, and its prevalence varies noticeably with
the particular bitrates employed. The performance of both ExOR
and a more recent extension, MORE [8], vary substantially with
bitrate, and most settings outperform traditional routing in our en-
vironment. We therefore expected modrate to provide signiﬁcant
further throughput improvement in ExOR. While modrate is able
to increase ExOR’s performance in some instances, the boost is
surprisingly modest in many cases. Our detailed evaluation of the
cause leads to the second contribution of this paper: we show that
while proposed opportunistic algorithms—ExOR in particular—
can provide tremendous performance improvement, in our environ-
ment at least, the vast majority of their gains come not from lever-
aging overhearing, but instead from a number of other substantial
changes to the transfer protocol in the implementation.
Motivated by this observation we present a careful analysis of
a spectrum of potential protocols on a smaller, 10-node controlled
testbed, starting with Srcr, a state-of-the art traditional routing pro-
tocol that does not leverage overhearing [4], and incrementally ap-
plying changes to arrive at ExOR with modrate. Previous studies
have compared only two points in this spectrum, typically tradi-
tional routing and their proposed protocol. By considering each
modiﬁcation individually, we discover that in many circumstances
ExOR gains more from the relatively prosaic step of eliminating in-
dividual per-packet acknowledgments than from taking advantage
of overhearing. This discrepancy is especially pronounced in net-
works with lossy links. Hence, Amdahl’s Law explains modrate’s
limited improvement: even though modrate is able to increase the
number of proﬁtable instances of overhearing, it is fundamentally
limited in the impact it can have on the overall throughput of ExOR.
While considerable work remains to be done to determine the
generality of our ﬁndings, we believe the results may have sig-
niﬁcant implications. In particular, many researchers—ourselves
included—may overestimate the ability of existing systems to ef-
fectively exploit overhearing in mesh networks. Conversely, signif-
icant gains can be extracted from far more banal protocol changes.
The remainder of this paper is organized as follows. In Section 2,
we provide an overview of related work, including a brief survey of
mechanisms that have been proposed to select appropriate 802.11
bitrates and to leverage overhearing. We present our testbed envi-
ronment in Section 3, and quantify the amount of latent overhearing
present in the network. Section 4 describes the design and imple-
mentation of modrate. We evaluate the effectiveness of rate adap-
tation in Section 5 on a small, controlled testbed. Section 6 teases
apart the performance gains from various protocol enhancements.
Section 7 reports on results from a building-wide testbed. Finally,
we summarize our conclusions in Section 8.
2. BACKGROUND & RELATED WORK
In order to place our contribution in context, we brieﬂy survey re-
lated work in three distinct ﬁelds. First, we discuss existing 801.11
rate control algorithms. Second, we explore how traditional routing
metrics consider rate selection in computing paths through the net-
work. Finally, we detail the various ways in which researchers have
proposed to harness overhearing, focusing particularly on ExOR.
2.1 Rate adaptation
Modern 802.11 PHY layers support multiple bit rates, ranging
from 1–11 Mbps for 802.11b, 6–54 Mbps for 802.11a, and 1–54
Mbps for 802.11g. Because channel characteristics vary across
space and time, an effective 802.11 sender will periodically re-
consider the bitrate it employs. A large number of rate-adaptation
techniques have been proposed in the literature [5, 14, 15, 20, 21]
including several [5, 15] which have been deployed in commer-
cial products. Each seeks the same goal, however: to optimize the
goodput of the wireless link between sender and receiver.
Because the basic 802.11 standard does not provide for explicit
feedback about channel quality at the receiver, senders are forced
to estimate the optimal transmission rate through indirect means.
The mechanism ﬁrst deployed commercially, Auto Rate Fallback
(ARF) [15], defaults to the highest bitrate and falls back to slower
speeds if it fails to receive a link-layer acknowledgment for a trans-
mitted frame. ARF speeds back up after a string of successive
successful packet transmissions. Researchers have observed, how-
ever, that 802.11’s link-layer retransmission mechanism may mask
frame losses, causing ARF to over-estimate the optimal bit rate.
As an alternative, Receiver-Based Auto Rate (RBAR) [14] pro-
poses to have the receiver report received channel quality in RTS
packets, allowing the sender to dynamically adjust transmission
rates according to current channel conditions. This presumes
that CTS signal-to-noise ratios are effective predictors of frame-
exchange success, however, which Bicket found was not always
the case [5]. Instead, he proposes to send periodic probe packets
at speeds higher than the one currently employed and keep track of
their relative success rates in a protocol he calls SampleRate, which
has been widely deployed in the MadWiﬁ driver and employed by
follow-on research projects [4, 6, 8]. Recent results, however, have
shown that SampleRate can be too conservative in certain cases;
indeed its poor performance has lead to its deprecation within the
MadWiﬁ driver. Instead, Starsky et al. have proposed combining
feedback from the RTS/CTS exchange with loss-rate information
gathered at the current rate into a system they call Robust Rate
Adaptation Algorithm (RRAA) [21].
While researchers have proposed making opportunistic use of the
link by sending packets in rapid succession when conditions allow
higher transmission rates [20], none of the existing schemes rate-
adaptation schemes consider what impact that choice will have on
route selection or global network throughput.
2.2 Routing metrics
In order to provide end-to-end connectivity, a mesh network
must compute routes between any two node pairs. In general, rout-
ing protocols attempt to compute paths that minimize some cost
metric. The most natural metric, commonly used in wireline net-
works, is hop count. While straightforward to compute, hop count
favors paths consisting of fewer, longer hops, which tend to be less
reliable than shorter hops. Instead, the Roofnet urban mesh net-
work introduced ETX, or expected transmission count, which ac-
counts for the retransmissions that are likely to be required on less-
reliable links [12]. Yet, if a particular link employs a lower bitrate
which is more likely to succeed, it is also more likely to be included
on a path despite other, potentially higher-throughput alternatives.
To address this deﬁciency, Roofnet replaced ETX with ETT, or ex-
pected transmission time, that incorporates link rates in addition to
retry attempts into the link cost [4].
There are multiple ways to determine ETT; Roofnet eschews col-
lecting explicit samples between each pair of nodes [13] in favor of
conducting a synchronized, network-wide survey using broadcast
packets. To forward packets, Roofnet employs a source-routing
385protocol known as Srcr that calculates paths using ETT. When an
individual node transmits a packet, however, it employs SampleR-
ate to select the bitrate; hence, the actual transmission speeds em-
ployed may deviate from those anticipated by the ETT calculation.
2.3 Overhearing
No matter what link rate and next-hop are selected, the broadcast
nature of wireless networks leads to the possibility—indeed, the
probability—that nodes other than the intended recipient overhear
the transmission. Researchers have proposed a number of tech-
niques to harness overhearing to varying success.
2.3.1 Single-path routing
A number of efforts have examined methods for selecting routes
that explicitly leverage opportunistic forwarding opportunities in
multi-hop networks [17, 19]. We previously observed that even if
routes are not deliberately selected to enhance overhearing, nodes
further a long a path that overhear a transmission can squelch sub-
sequent forwarding attempts by upstream nodes [1]. While broadly
applicable, these techniques provide modest throughput gains.
2.3.2 Batching
Far greater throughput gains can be achieved if the network is
designed from the ground up to leverage overhearing. In particular,
both ExOR [6] and the more recent MORE [8] deﬁne new, bulk-
transfer transport protocols that leverage overhearing to dramati-
cally increase goodput. While effective at achieving high through-
put, both systems are unfortunately incompatible with traditional
transport protocols like TCP and latency-sensitive applications.
ExOR is a bulk-data protocol: rather than transmitting individ-
ual packets, it transfers batches of packets. The source gathers to-
gether the set of packets destined for a particular destination and
transmits them all at once, along with a precomputed forwarder list
enumerating any likely1 intermediate nodes between the source and
destination. The source prioritizes the forwarder list based upon its
estimation of their proximity to the destination (computed using
the ETX metric, described above). Any nodes contained within the
forwarding list that successfully receive packets transmitted by the
sender buffer them until the batch is completed.
Once the sender has ﬁnished sending the batch, the receiving
node with highest priority begins forwarding any packets it has
buffered. The node annotates this so-called batch fragment with
its estimation of the highest-priority node to have received each
packet in the batch, called a batch map. Subsequently, each node in
the forwarding list takes its turn sending any packets not previously
acknowledged in another’s batch map until the destination has re-
ceived at least 90% of of the packets in the batch. The remainder
of the packets are forwarded using traditional routing.
One of the most challenging aspects of implementing ExOR is
ensuring each forwarder transmits its batch fragment at the appro-
priate time. If transmissions are uncoordinated, fragments will col-
lide, eliminating any potential beneﬁts. The ExOR design requires
each node to keep a transmission timer, as well as to record the
fragment numbers being transmitted to estimate the effective chan-
nel rate and predict when individual forwarders will complete their
fragment transmissions.
2.3.3 Network coding
MORE’s operation is similar, but it uses random network cod-
ing to avoid the need for ExOR’s scheduler. Mostly by increasing
opportunities for spatial reuse, MORE achieves unicast throughput
4th Floor
3rd Floor
2nd Floor
1st Floor
Figure 1: The UC San Diego Jigsaw wireless testbed. We use
the Jigsaw mesh nodes (depicted as circles); production 802.11
access in the building is provided by infrastructure-mode ac-
cess points (shown as triangles).
22–45% higher than ExOR’s [8]. While not included in the con-
ference publication, Chachulski develops an extension to the ETX
metric, called EOTX (expected opportunistic transmission count),
in his Masters’ thesis [7] that considers the potential decrease in
expected hop count due to the use of ExOR or MORE. While theo-
retically more appropriate than ETX, practical experimentation in-
dicates that EOTX provides negligible performance improvement
over ETX when used in conjunction with MORE.
Another notable approach based on network coding, COPE [16],
does not target opportunistic overhearing in quite the same fashion
as the schemes described previously. Instead, it takes advantage
of the fact that a sender in the middle of a three-node chain can
be heard by both of the nearby nodes during a single transmission,
allowing bidirectional trafﬁc to be sent using three transmissions
instead of four. While we believe that COPE could also beneﬁt
from joint bitrate adaptation, we leave the application of modrate
to COPE as future work.
3. OVERHEARING’S SIREN SONG
The effectiveness of any overhearing scheme depends greatly on
the channel characteristics of the network. Hence, we ﬁrst seek to
quantify the latent overhearing in our testbed.
3.1 Jigsaw testbed
1In order to keep the list size manageable in dense networks, ExOR
prunes nodes expected to overhear less than 10% of the packets.
In order to determine the impact of transmission rate on delivery
ratio in a practical environment, we use the Jigsaw wireless testbed
386 100
 80
 60
 40
 20
s
e
d
o
n
f
o
F
D
C
 0
 0
s
e
d
o
n
f
o
F
D
C
 100
 80
 60
 40
 20
 0
1
2
5.5
11
6
9
12
18
24
36
48
54
6
9
12
18
24
36
48
54
 5
 10
 15
 20
 25
 0
 1
 2
 3
 4
 5
 6
 7
 8
Expected # of recipients
(a) Jigsaw testbed
Expected # of recipients
(b) ALIX network, full power
Figure 2: CDF of the number of the average number of recipients per packet as a function of bitrate.
and analysis engine at the University of California, San Diego [10,
11]. Figure 1 shows the layout of the testbed nodes (reproduced
with permission from [11, Fig. 1]). The testbed consists of 48 em-
bedded Linux nodes, each outﬁtted with two Atheros 802.11a/b/g
radios. The testbed is deployed within the Computer Science and
Engineering building on the UC San Diego campus and spans four
and a half ﬂoors (the half-covered basement is not shown in the
ﬁgure) covering approximately 150,000 square feet of ﬂoor space
and one million cubic feet of volume.
In addition to human in-
habitants, the building contains thousands of workstations and a
large variety of electronics operating in the same 2.4 and 5 GHz
unlicensed frequency bands as 802.11, resulting in highly variable
channel quality in different portions of the building and during dif-
ferent times of the day [11]. In our work, we use only one radio
per node, and place the device into 802.11g mode. While the use
of 802.11a would decrease interference from the building’s produc-
tion 802.11g network, increased fading in the 5 GHz band signiﬁ-
cantly decreases connectivity.
The Jigsaw analysis engine is particularly appropriate for our
needs, since it is able to tightly time synchronize traces collected
at multiple nodes and precisely determine which received frames
are actually identical—i.e., a single transmission that was success-
fully decoded at multiple receivers—and which are simply dupli-
cates (such as those that result from link-layer retransmission). The
infrastructure also automatically records the RSSI and any associ-
ated hardware errors reported along with the received frame.
3.2 Channel quality
Overhearing varies as a function of various channel characteris-
tics including noise, fading, and signal attenuation; hence, before
proceeding we seek to quantity number of testbed nodes that can
successfully decode packets sent by any other node in the testbed.
Obviously, this number depends not only on the channel condi-
tions, but also on the transmitter’s power and selected bitrate. For
all experiments in this paper, we ﬁx transmit power to the maxi-
mum supported by the 802.11 devices in use (nominally 100 mW).
To measure the performance of the network, we conduct a
network-wide link survey similar to that conducted by the Roofnet
researchers [3]. In particular, we ﬁx all nodes to the same 802.11
channel (eleven in these experiments) and set them to listen in
promiscuous mode. To reduce variance, we conduct our experi-
ments during the night.
In our initial experiments, we implemented the Roofnet proce-
dure, iterating through each of the nodes in the network in the fol-
lowing fashion. At each node, we transmitted one thousand 1,500-
byte packets back-to-back at a particular bitrate. We cycled through
each of the twelve available 802.11g bitrates in order before mov-
ing on to the next node. The entire process takes roughly ten min-
utes. Once the transmission phase is complete, we submit the traces
to the Jigsaw analysis engine to determine how many stations re-
ceived each individual frame. The analysis takes an additional ten
minutes, during which the infrastructure cannot conduct probe ex-
periments.
We discovered, however, that this measurement technique can
be highly inaccurate in our environment. In particular, a moderate-
length burst of broadband interference can completely distort mea-
surements for one or more links. Thus, we alter our survey proce-
dure to split transmissions into groups: We divide the 1,000 pack-
ets that each node transmits into 10 groups. Then, at each node,
we transmit 100 1,500-byte packets back-to-back at a particular bi-
trate. We cycle through every node in the system and then move to
next bitrate. Once all bitrates are done, we repeat the whole process
10 times until every station has transmitted 1,000 packets at each
bitrate. In addition to spreading the impact of broadband interfer-
ence, this method also allows us to estimate short-term variations
in link quality. We calculate the standard deviation of the reception
rate of each link. In our experience, the deviation is an important
parameter of the link, staying relatively consistent over each mea-