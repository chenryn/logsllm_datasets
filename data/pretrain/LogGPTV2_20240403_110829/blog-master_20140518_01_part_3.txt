使用snapshot创建克隆, 并结合PostgreSQL PITR, 将数据库恢复到一个指定的状态.  
例如使用倒数第二个snapshot来克隆.  
[root@db-172-16-3-150 ~]# zfs clone zptest/pg93@2014-05-1723:18:11 zptest/pg93_clone1  
[root@db-172-16-3-150 ~]# df -h  
Filesystem            Size  Used Avail Use% Mounted on  
/dev/sdc1              29G  9.3G   19G  34% /  
tmpfs                  48G     0   48G   0% /dev/shm  
/dev/sdc3              98G   30G   63G  33% /opt  
/dev/sdd1             183G   41G  133G  24% /ssd1  
/dev/sdb1             221G   39G  171G  19% /ssd4  
zptest                 24G  128K   24G   1% /zptest  
zptest/pg93            28G  3.7G   24G  14% /zptest/pg93  
zptest/pg93_clone1     28G  3.7G   24G  14% /zptest/pg93_clone1  
修改必要的配置文件  
[root@db-172-16-3-150 ~]# su - pg93  
pg93@db-172-16-3-150-> cd /zptest/pg93_clone1/pg_root  
port = 1923  
# archive_command  #注释  
选择一个合适的还原点, 以时间为还原点最好确认 :   
pg93@db-172-16-3-150-> vi recovery.conf  
restore_command = 'cp /ssd1/pg93/arch/%f %p'            # e.g. 'cp /mnt/server/archivedir/%f %p'  
recovery_target_time = '2014-05-17 23:19:00.203219+08'  
recovery_target_timeline = 'latest'  
pause_at_recovery_target = true  
standby_mode = on  
pg93@db-172-16-3-150-> rm -f postmaster.pid  
pg93@db-172-16-3-150-> pg_ctl start -D /zptest/pg93_clone1/pg_root  
server starting  
pg93@db-172-16-3-150-> LOG:  00000: redirecting log output to logging collector process  
HINT:  Future log output will appear in directory "pg_log".  
LOCATION:  SysLogger_Start, syslogger.c:649  
一段时间后查看是否恢复到指定时间点.  
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 1923 -U postgres postgres  
psql (9.3.3)  
Type "help" for help.  
postgres=# select max(crt_time) from test;  
            max              
---------------------------  
 2014-05-17 23:19:00.20281  
(1 row)  
如果觉得这个快照不合适, 可以关闭数据库后删掉它.  
pg93@db-172-16-3-150-> pg_ctl stop -m fast -D /zptest/pg93_clone1/pg_root  
[root@db-172-16-3-150 ~]# zfs destroy zptest/pg93_clone1  
最后说一下zpool的扩容, 增加磁盘即可. 最好选择和POOL中已存在磁盘容量大小, 性能一致的磁盘.  
[root@db-172-16-3-150 ssd1]# cd /ssd1  
[root@db-172-16-3-150 ssd1]# dd if=/dev/zero of=./zfs.disk5 bs=1024k count=8192  
[root@db-172-16-3-150 ssd1]# zpool add zptest /ssd1/zfs.disk5  
[root@db-172-16-3-150 ssd1]# zpool status zptest  
  pool: zptest  
 state: ONLINE  
  scan: none requested  
config:  
        NAME                            STATE     READ WRITE CKSUM  
        zptest                          ONLINE       0     0     0  
          /ssd1/zfs.disk1               ONLINE       0     0     0  
          /ssd1/zfs.disk2               ONLINE       0     0     0  
          /ssd1/zfs.disk3               ONLINE       0     0     0  
          /ssd1/zfs.disk4               ONLINE       0     0     0  
          /ssd1/zfs.disk5               ONLINE       0     0     0  
        logs  
          mirror-4                      ONLINE       0     0     0  
            /ssd4/zfs.log1              ONLINE       0     0     0  
            /ssd4/zfs.log2              ONLINE       0     0     0  
        cache  
          wwn-0x5e83a97e827c316e-part1  ONLINE       0     0     0  
errors: No known data errors  
[root@db-172-16-3-150 ssd1]# df -h  
Filesystem            Size  Used Avail Use% Mounted on  
/dev/sdc1              29G  9.3G   19G  34% /  
tmpfs                  48G     0   48G   0% /dev/shm  
/dev/sdc3              98G   30G   63G  33% /opt  
/dev/sdd1             183G   53G  122G  30% /ssd1  
/dev/sdb1             221G   39G  171G  19% /ssd4  
zptest                 29G  128K   29G   1% /zptest  
zptest/pg93            33G  3.7G   29G  12% /zptest/pg93  
zptest/pg93_clone1     33G  3.7G   29G  12% /zptest/pg93_clone1  
```  
## 其他  
1\. 其实zfs的快照在数据库版本升级, 做重大调整时用作快速回滚也是很有用的. 例如greenplum的版本升级, 可以在停库后对所有节点的dataset创建快照, 再升级, 如果升级失败, 全部回滚到快照即可.  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/163877040201441694022110/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")