next to each other. In this design, one copper plate is connected
with an excitation signal and the other is connected to ground.
With this configuration, the generated E field is drawn into the
grounded copper plate rather than distributed on the surface
of victim device. In our later experiment section, we show
that our antenna design can be made as small as 4mm x
4mm which provides both accuracy and high resolution. In
section VII-A, we show how a copper needle antenna can be
used on a large touchscreen device to generate highly accurate
ghost touches without the involvement of ground due to the
internally large metal of the device.
VII. FEATURES AFFECTING IEMI ATTACK PERFORMANCE
In this section, we evaluate the accuracy and effectiveness
of our touchscreen attack with different touchscreen devices
across different manufacturer, size, operating system, and
model. We explore the features affecting IEMI attack pefor-
mance and practicality. In particular, we highlight the success
rate and accuracy of the IEMI attack using different materials
and at different distances. We also demonstrate how to locate
the position of the phone and manage interference between
antennas.
A. Experimental Setup
To evaluate how different factors can influence the gen-
eration of a ghost touch, we conduct experiments using a
similar setup as presented in Section V, except we add a
probe positioning system and single-end antenna, as shown in
Fig. 14. We use standard SMA-to-SMA coaxial cables which
are equipped with a shielding layer to connect the antenna to
the RF amplifier to avoid undesired EM signal emission. It
is worth mentioning that we use copper needles as antennas
for our experiments on the iPad Pro and Surface Pro devices
because they provide better resolution due to the more focused
E field at the needle tip. As for the smaller devices tested,
such as iPhone and Android smart phones, we still use the
standard copper plates (4mm x 4mm) antenna setup because
it provides a more controllable and small E field due to the
presented ground terminal. We attach the copper plate/copper
needle to standard SMA connectors as the antenna. A separate
copper plate is also used to measure the touchscreen sampling
signal for the phone detector which we will elaborate in
Section VIII-B.
Fig. 14: Copper needle antenna and device under test
B. Experiment Design
To evaluate the precision and success rate of our touch-
screen attack across different victim devices (Android, iOS,
Windows), we designed our own cross-platform touchscreen
gesture collection application with flutter. The application
collects tap, double tap, long press, and swiping gestures on
the touchscreen. It then reports all detected gestures and their
associated time and location to a remote server for subsequent
analysis. The application draws a red dot at the center of the
test device for target visualization purposes. The application
also visualizes the detected gestures on the screen along with
coordinates information.
C. Success Rate and Accuracy
With the reported touch event location and timing, we can
perform evaluation against the collected data to show both the
success rate and accuracy of our attack. During the experiment,
we notice that our attack occasionally creates rare random
touch events at distant positions due to the non-ideal E field
spread and interference from nearby equipment. This is shown
in Table III under the QD (X) and QD (Y) columns, where
we choose Quartile Deviation (QD) to better evaluate how the
generated touch events are focused in a small region. The QD
(X) and QD (Y) columns represent how large the generated
touch events are distributed along the X axis and Y axis of
a test device with respect to pixels. Another benefit of using
Quartile Deviation instead of Standard Deviation is that we
find if the generated touch event is far away from its intended
target, then it will not interfere with the attack chain by, for
example, pressing an incorrect button that is adjacent to the
correct button. As the result, we believe QD is an appropriate
metric to quantify the ªactual attackº accuracy. From Table III,
we can tell that our attack performs accurately on the iOS
device, especially on large touchscreen devices. However,
we also noticed that our attack often creates scattered touch
events vertically or horizontally. After further investigation,
we believe that although our antenna and signal cable is
specifically chosen to generate a small, focused interference
signal, there are still undesired IEMI signals leaked and the
Android test devices are sensitive enough to recognize them
as touch events. Note that the ghost touch occurs every time
we apply IEMI signal on these Android devices so the ghost
touch success rate is 100% but the accuracy is lower than iOS
devices.
D. Table Material
As we aforementioned in Section V, the dielectric constant
of the table material impacts our attack. To evaluate the
performance of our attack using different common table ma-
terials, we choose five typical table top samples (solid wood,
acrylic, marble, medium density fiberboard/MDF, copper) as
the insulation material between antenna and victim device and
repeat our experiment. We conduct the experiment with acrylic
sheet and our probe positioning system first and then swap the
table top sample so that we can still calculate the statistical
dispersion for non-transparent table material. The thickness of
these table material samples are all 10mm. Table III shows
that when non-metal table materials are used, our attack can
achieve similar performance with respect to success rate and
dispersion. However, the metal table material does not allow
us to perform a valid attack due to its high conductivity.
E. Table Thickness
To understand the practicality of our attack, we also evaluate
it with respect to success rate and accuracy using different
thicknesses of table material. We set the signal generator to
sweep mode and each sweep period is set to 1 second, such
that the correct interference frequency will be generated every
second. The total time of signal generator output lasts 30 sec-
onds. We use our own application to record how many touch
events are generated during the test period and where/when
they are generated. Using an iPad Pro and acrylic sheets, we
conduct the experiments when the thickness of the acrylic
sheets is 10mm, 15mm, 20mm. As we can see in Fig. 15,
the success rate of our attack is up to 100% when the table
thickness is 10mm. The success rate decreases to 76% when
the table thickness is 15mm. The success rate eventually drops
to 40% when the table thickness is 20mm. In real life, the
common table thickness is only 1/2 inch or 5/8 inch based on
IKEA [24], Office Depot [25] and Wayfair [26]. Our effective
TABLE II: Success Rate and Accuracy of Touchscreen Attack
Device
Operating System
Success
Freqeuncy (kHz)
Electric Field Strength (V/m)
Success Rate (s)
QD (X) (s)
QD (Y) (s)
Nexus 5X
Android 8.1.0
270
1000
100%
3.5
182.5
Google Pixel 2
Android 10
230
1000
100%
10.0
149.5
OnePlus 7 Pro
Android 11
295
800
100%
196.5
3.0
iPhone SE
iOS 12.0
✓
95
1500
57%
10.5
6.0
iPhone 6
iOS 12.2
✓
98
1500
86%
14.0
10.0
iPhone 11 Pro
iOS 14.7.1
✓
120
1500
77%
4.5
8.5
Surface Pro 7
Windows 10 Pro 2004
✓
220
1200
88.3%
12.5
7.5
iPad Pro
iPadOS 14.7.1
✓
270
1500
100%
1.0
0.5
TABLE III: Touchscreen Attack with Different Table Materials
Material
Dielectric Constant
Success Rate
QD (X)
QD (Y)
acrylic
2.7 - 4.0
100%
1.0
0.5
marble
3.5 - 5.6
76%
2.6
1.0
solidwood
1.2 - 5
90%
1.6
1.4
MDF
3.5 - 4
100%
1.0
1.0
copper
✗
✗
✗
✗
attack distance, 20mm, is larger than the common tabletop
thickness.
Fig. 15: Generated touch event on iPad Pro with different table thickness.
F. Interference Between Antennas
In our experiments, we design and use an antenna array to
generate multiple touch events at different locations. However,
if we need sequential touch events, only one antenna will
be applied with an excitation signal at a certain time and
other antennas should be kept as either grounded or floated.
However, two antennas that are physically close with each
other can easily couple with each other and create undesired
touch events at random locations and times. To overcome
this issue, we employed isolated and shielded signal cables
and antennas. All the signal cables that are used to drive
the antenna array are standard SMA-to-SMA shielded cables
in order to avoid coupling between each other. Furthermore,
copper tape is used to cover the antennas to insulate the
generated EM field into a small region as shown in Figure 14.
VIII. PRACTICALITIES OF TOUCHSCREEN ATTACK
In this section, we discuss how to utilize the proposed IEMI
attack in real attack scenarios. To perform a practical attack,
the attacker has three major obstacles to overcome, the design
of an IEMI antenna, knowledge of the victim device’s location,
and knowledge of a successfully injected touch event. We
address all three obstacles by building an antenna array, phone
locator, and touch event detector respectively.
A. Design of an IEMI Antenna
In previous sections, we show how to inject simple tap,
long hold, and any direction sweep gestures on touchscreens
with a single needle IEMI antenna. The injected touch gestures
are located directly in the path of the IEMI antenna. Under a
practical scenario, however, the touchscreen device can be ran-
domly placed on the tabletop. A single needle IEMI antenna
is therefore insufficient to inject a touch event if not placed
directly in its path. We consider two solutions to address
this issue. First, the attacker can implement a mechanical
system to maneuver the single needle IEMI antenna into
the desired location of the victim touchscreen device, then
perform an IEMI attack. The attacker can then operate the
IEMI antenna to perform complicated drawing gestures by
continuously generating the interference signal to meet the
attack requirement. While possible, we consider this a less-
than-ideal solution due to both the size and noise of the
mechanical infrastructure required to freely move a single
needle IEMI antenna under a tabletop without being detected.
This option would therefore require significant effort and cost
to ensure a stealthy design. We therefore opt for implementing
a static antenna array to reduce the associated engineering and
practical issues mentioned above. A modular antenna array
allows us to configure the way it is attached, so that we can
increase the density of IEMI antennas for a smaller target
device without changing the hardware design. In addition to
the antenna array, we implement an IEMI channel controller
that can independently control up to 64 IEMI antennas using
programmable reed relays. The size of the designed IEMI
channel controller and antenna array are smaller enough to
squeeze into a shoe box. The needles of the antenna array are
inserted into foam to support and protect the fragile hardware.
The size of the array is 24cm x 17cm, and the distances
between the antennas vary between 2cm and 7mm to meet the
density requirements for different sizes of target touchscreen
devices.
B. The Screen Locators
As we have mentioned in Section II-A, a touchscreen sens-
ing system consists of a grid of TX and RX electrodes. The
TX electrodes generate varied excitation signals on different
lines while the intersecting RX electrodes sense the physical
variations to determine the touch points. Our experiments
found that antennas placed near the screen can easily pick
up these TX signals. Such signals contain patterns that can
tell us at which TX lines the antennas are pointing. Besides,
when an antenna is placed perpendicular to the screen, only
the pointed TX electrode produces the strongest signals, while
nearby electrodes have little impact on the received signals.
Hence, the signal received by an antenna can be used to
identify the pointed-at location with high spatial resolution.
For example, a significant signal strength degradation can be
observed when two antennas are placed on both sides of a
screen boundary. This feature allows us to accurately detect
the screen boundary location with an error of less than 1 cm.
Various driving methods can be used to generate the TX sig-
nals. Among all examined devices, we observed two methods
being used. The sequential driving method (SDM) is usually
implemented to excite the electrodes in turn. As a result,
the electrode location can be identified by checking when a
TX signal appears. Fig. 16a shows EM traces collected on
four different rows of a Google Pixel 2. We can observe the
linear relationship between the rows and the appearing time
of TX signals. The orientation and location for this kind of
screen can be quickly recovered using a simple linear function.
Besides the sequential driving method, we found the parallel
driving method (PDM) to be a more frequently implemented
technique on most of the latest devices, which uses orthogonal
codes to drive all TX signals concurrently. Fig. 16b shows
EM traces collected on four different columns of an iPhone
11 Pro. As we can see, instead of generating signals with the
same patterns sequentially, different electrodes produce signals
with varied patterns simultaneously. In this case, recovering
the location information is more challenging because of the
less straightforward correlations between signals and screen
locations. However, we can still successfully recover the screen
location information using these TX signals with the technique
described below.
0
1
2
3
4
5
6
-2