i_product_name char(50) ,
primarykey(i_item_sk)
);
explain
selecti_product_nameproduct_name
,i_item_skitem_sk
,s_store_namestore_name
,s_zipstore_zip
,ad2.ca_street_numberc_street_number
,ad2.ca_street_namec_street_name
,ad2.ca_cityc_city
,ad2.ca_zipc_zip
,count(*)cnt
,sum(ss_wholesale_cost)s1
,sum(ss_list_price)s2
,sum(ss_coupon_amt)s3
FROM store_sales
,store_returns
,store
,customer
,promotion
,customer_addressad2
,item
WHERE ss_store_sk=s_store_skAND
ss_customer_sk=c_customer_skAND
ss_item_sk=i_item_skand
ss_item_sk=sr_item_skand
ss_ticket_number=sr_ticket_numberand
c_current_addr_sk=ad2.ca_address_skand
ss_promo_sk=p_promo_skand
i_colorin('maroon','burnished','dim','steel','navajo','chocolate')and
i_current_pricebetween35and35+10and
南大通用数据技术股份有限公司
578
GBase 8s V8.8开发者手册
i_current_pricebetween35+1and35+15
groupbyi_product_name
,i_item_sk
,s_store_name
,s_zip
,ad2.ca_street_number
,ad2.ca_street_name
,ad2.ca_city
,ad2.ca_zip
14.4.9.2 Join 顺序的 Hint
功能描述
指明join的顺序，包括内外表顺序。
语法格式
仅指定join顺序，不指定内外表顺序。
leading(join_table_list)
同时指定join顺序和内外表顺序，内外表顺序仅在最外层生效。
leading((join_table_list))
参数说明
join_table_list为表示表join顺序的hint字符串，可以包含当前层的任意个表（别名），
或对于子查询提升的场景，也可以包含子查询的hint别名，同时任意表可以使用括号指定优
先级，表之间使用空格分隔。
 表只能用单个字符串表示，不能带schema。
 表如果存在别名，需要优先使用别名来表示该表。
南大通用数据技术股份有限公司
579
GBase 8s V8.8开发者手册
jointablelist中指定的表需要满足以下要求，否则会报语义错误。
 list中的表必须在当前层或提升的子查询中存在。
 list中的表在当前层或提升的子查询中必须是唯一的。如果不唯一，需要使用不同的别
名进行区分。
 同一个表只能在list里出现一次。
 如果表存在别名，则list中的表需要使用别名。
例如：
leading(t1t2t3t4t5)表示：t1、t2、t3、t4、t5先join，五表join顺序及内外表不限。
leading((t1t2t3t4t5))表示：t1和t2先join，t2做内表；再和t3join，t3做内表；再和
t4join，t4做内表；再和t5join，t5做内表。
leading(t1(t2t3t4)t5)表示：t2、t3、t4先join，内外表不限；再和t1、t5join，内外表
不限。
leading((t1(t2t3t4)t5))表示：t2、t3、t4先join，内外表不限；在最外层，t1再和t2、t3、
t4的join表join，t1为外表，再和t5join，t5为内表。
leading((t1(t2t3)t4t5))leading((t3t2))表示：t2、t3先join，t2做内表；然后再和t1join，
t2、t3的join表做内表；然后再依次跟t4、t5做join，t4、t5做内表。
示例
对示例中原语句使用如下hint:
explain
select/*+leading((((((store_salesstore)promotion)item)customer)ad2)store_returns)
leading((storestore_sales))*/i_product_nameproduct_name...
该hint表示：表之间的join关系是：store_sales和store先join，store_sales做内表，然
后依次跟promotion,item,customer,ad2,store_returns做join。生成计划如下所示：
南大通用数据技术股份有限公司
580
GBase 8s V8.8开发者手册
图中计划顶端warning的提示详见Hint的错误、冲突及告警的说明。
14.4.9.3 Join 方式的 Hint
功能描述
指明Join使用的方法，可以为NestedLoop、HashJoin和MergeJoin。
语法格式
[no]nestloop|hashjoin|mergejoin(table_list)
参数说明
 no表示hint的join方式不使用。
 table_list为表示hint表集合的字符串，该字符串中的表与join_table_list相同，只是中
间不允许出现括号指定join的优先级。
例如：
nonestloop(t1t2t3)表示：生成t1、t2、t3三表连接计划时，不使用nestloop。三表连接
计划可能是t2t3先join，再跟t1join，或t1t2先join，再跟t3join。此hint只hint最后一次
join的join方式，对于两表连接的方法不hint。如果需要，可以单独指定，例如：任意表均
不允许nestloop连接，且希望t2t3先join，则增加hint：nonestloop(t2t3)。
示例
对示例中原语句使用如下hint:
explain
select/*+nestloop(store_salesstore_returnsitem)*/i_product_nameproduct_name...
该hint表示：生成store_sales、store_returns和item三表的结果集时，最后的两表关联
使用nestloop。生成计划如下所示：
南大通用数据技术股份有限公司
581
GBase 8s V8.8开发者手册
14.4.9.4 Join 行数的 Hint
功能描述
指明中间结果集的大小，支持绝对值和相对值的hint。
语法格式
rows(table_list#|+|-|*const)
参数说明
 #、+、-、*，进行行数估算hint的四种操作符号。#表示直接使用后面的行数进行hint。
+、-、*表示对原来估算的行数进行加、减、乘操作，运算后的行数最小值为1行。table_list
为hint对应的单表或多表join结果集，与Join方式的Hint中table_list相同。
 const可以是任意非负数，支持科学计数法。
例如：
rows(t1#5)表示：指定t1表的结果集为5行。
rows(t1t2t3*1000)表示：指定t1、 t2、t3join完的结果集的行数乘以1000。
建议
推荐使用两个表*的hint。对于两个表的采用*操作符的hint，只要两个表出现在join的
两端，都会触发hint。例如：设置hint为rows(t1t2*3)，对于(t1t3t4)和(t2t5t6)join时，由
于t1和t2出现在join的两端，所以其join的结果集也会应用该hint规则乘以3。
rowshint支持在单表、多表、functiontable及subqueryscantable的结果集上指定hint。
示例
对示例中原语句使用如下hint：
explain
select/*+rows(store_salesstore_returns*50)*/i_product_nameproduct_name...
该hint表示：store_sales、store_returns关联的结果集估算行数在原估算行数基础上乘以
50。生成计划如下所示：
南大通用数据技术股份有限公司
582
GBase 8s V8.8开发者手册
14.4.9.5 Scan 方式的 Hint
功能描述
指明scan使用的方法，可以是tablescan、indexscan和indexonlyscan。
语法格式
[no]tablescan|indexscan|indexonlyscan(table[index])
参数说明
 no表示hint的scan方式不使用。
 table表示hint指定的表，只能指定一个表，如果表存在别名应优先使用别名进行hint。
 index表示使用indexscan或indexonlyscan的hint时，指定的索引名称，当前只能指定
一个。
对于indexscan或indexonlyscan，只有hint的索引属于hint的表时，才能使用该hint。
scanhint支持在行列存表、obs表、子查询表上指定。
示例
为了hint使用索引扫描，需要首先在表item的i_item_sk列上创建索引，名称为i。
createindexionitem(i_item_sk);
对示例中原语句使用如下hint：
explain
select/*+indexscan(itemi)*/i_product_nameproduct_name...
该hint表示：item表使用索引i进行扫描。生成计划如下所示：
南大通用数据技术股份有限公司
583
GBase 8s V8.8开发者手册
14.4.9.6 子链接块名的 hint
功能描述
指明子链接块的名称。
语法格式
blockname(table)
参数说明
table表示为该子链接块hint的别名的名称。
 blocknamehint仅在对应的子链接块没有提升时才会被上层查询使用。目前支持的
子链接提升包括IN子链接提升、EXISTS子链接提升和包含Agg等值相关子链接
提升。该hint通常会和前面章节提到的hint联合使用。
 对于FROM关键字后的子查询，则需要使用子查询的别名进行hint，blocknamehint
不会被用到。
 如果子链接中含有多个表，则提升后这些表可与外层表以任意优化顺序连接，hint
也不会被用到。
示例
explainselect/*+nestloop(store_salestt)*/*fromstore_saleswheress_item_skin(select
/*+blockname(tt)*/i_item_skfromitemgroupby1);
该hint表示：子链接的别名为tt，提升后与上层的store_sales表关联时使用nestloop。
生成计划如下所示：
南大通用数据技术股份有限公司
584
GBase 8s V8.8开发者手册
14.4.9.7 Hint 的错误、冲突及告警
PlanHint的结果会体现在计划的变化上，可以通过explain来查看变化。
Hint中的错误不会影响语句的执行，只是不能生效，该错误会根据语句类型以不同方式
提示用户。对于explain语句，hint的错误会以warning形式显示在界面上，对于非explain
语句，会以debug1级别日志显示在日志中，关键字为PLANHINT。
hint的错误分为以下类型：
 语法错误
语法规则树归约失败，会报错，指出出错的位置。
例如：hint关键字错误，leadinghint或joinhint指定2个表以下，其它hint未指定表等。
一旦发现语法错误，则立即终止hint的解析，所以此时只有错误前面的解析完的hint有效。
例如：
leading((t1t2))nestloop(t1)rows(t1t2#10)
nestloop(t1)存在语法错误，则终止解析，可用hint只有之前解析的leading((t1t2))。
 语义错误
 表不存在，存在多个，或在leading或join中出现多次，均会报语义错误。
 scanhint中的index不存在，会报语义错误。
 另外，如果子查询提升后，同一层出现多个名称相同的表，且其中某个表
需要被hint，hint会存在歧义，无法使用，需要为相同表增加别名规避。
 hint重复或冲突
如果存在hint重复或冲突，只有第一个hint生效，其它hint均会失效，会给出提示。
 hint重复是指，hint的方法及表名均相同。例如：nestloop(t1t2)nestloop(t1
t2)。
 hint冲突是指，tablelist一样的hint，存在不一样的hint，hint的冲突仅对
南大通用数据技术股份有限公司
585
GBase 8s V8.8开发者手册
于每一类hint方法检测冲突。
例如：nestloop(t1t2)hashjoin(t1t2)，则后面与前面冲突，此时hashjoin的hint失效。
注意：nestloop(t1t2)和nomergejoin(t1t2)不冲突。
leadinghint中的多个表会进行拆解。例如：leading((t1t2t3))会拆解成：leading((t1t2))
leading(((t1t2)t3))，此时如果存在leading((t2t1))，则两者冲突，后面的会被丢弃。（例
外：指定内外表的hint若与不指定内外表的hint重复，则始终丢弃不指定内外表的hint。）
 子链接提升后hint失效
子链接提升后的hint失效，会给出提示。通常出现在子链接中存在多个表连接的场景。
提升后，子链接中的多个表不再作为一个整体出现在join中。
 列类型不支持重分布
对于skewhint来说，目的是为了进行重分布时的调优，所以当hint列的类型不支持重
分布时，hint将无效。
 hint未被使用
 非等值join使用hashjoinhint或mergejoinhint。
 不包含索引的表使用indexscanhint或indexonlyscanhint。
 通常只有在索引列上使用过滤条件才会生成相应的索引路径，全表扫描将
不会使用索引，因此使用indexscanhint或indexonlyscanhint将不会使用。
 indexonlyscan只有输出列仅包含索引列才会使用，否则指定时hint不会
被使用。
 多个表存在等值连接时，仅尝试有等值连接条件的表的连接，此时没有关
联条件的表之间的路径将不会生成，所以指定相应的leading、join、rowshint将不
使用，例如：t1t2t3表join，t1和t2，t2和t3有等值连接条件，则t1和t3不会优
先连接，leading(t1t3)不会被使用。
 生成stream计划时，如果表的分布列与join列相同，则不会生成redistribute
的计划；如果不同，且另一表分布列与join列相同，只能生成redistribute的计划，
不会生成broadcast的计划，指定相应的hint则不会被使用。
 如果子链接未被提升，则blocknamehint不会被使用。
南大通用数据技术股份有限公司
586
GBase 8s V8.8开发者手册
 对于skewhint，hint未被使用可能由于：
 计划中不需要进行重分布。
 hint指定的列为包含分布键。
 hint指定倾斜信息有误或不完整，如对于join优化未指定值。
 倾斜优化的GUC参数处于关闭状态。
14.4.9.8 优化器 GUC 参数的 Hint
功能描述
设置本次查询执行内生效的查询优化相关GUC参数。hint的推荐使用场景可以参考各
guc参数的说明，此处不作赘述。
语法格式
set(paramvalue)
参数说明
 param表示参数名。
 value表示参数的取值。
 目前支持使用Hint设置生效的参数有
 布尔类：
enable_bitmapscan 、 enable_hashagg 、 enable_hashjoin 、 enable_indexscan 、
enable_indexonlyscan 、 enable_material 、 enable_mergejoin 、 enable_nestloop 、
enable_index_nestloop、enable_seqscan、enable_sort、enable_tidscan
 整形类：
query_dop
 浮点类：
cost_weight_index、default_limit_rows、seq_page_cost、random_page_cost、cpu_tuple_cost、
cpu_index_tuple_cost、cpu_operator_cost、effective_cache_size
 枚举类型：
try_vector_engine_strategy
南大通用数据技术股份有限公司
587
GBase 8s V8.8开发者手册
 设置不在白名单中的参数，参数取值不合法，或hint语法错误时，不会影响查询执
行的正确性。使用explain(verboseon)执行可以看到hint解析错误的报错提示。