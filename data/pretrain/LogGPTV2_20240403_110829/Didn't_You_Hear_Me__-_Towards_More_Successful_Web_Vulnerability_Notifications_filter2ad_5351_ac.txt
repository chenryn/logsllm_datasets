view the reports (averaging to 36% of recipients who opened
our report). This aligns with our hypothesis that these WP sites
may be more poorly maintained or signiﬁcantly out-of-date.
IV.
IN-DEPTH ANALYSIS
Potential challenges for an email notiﬁcation campaign
stem from a variety of aspects. On the one hand, emails might
not get delivered in the ﬁrst place, either due to non-existing
mailboxes or spam ﬁltering. On the other hand, even if a
message is delivered successfully to an inbox, it is unclear
whether we reached an appropriate point of contact, whether
the message itself is trusted by the recipient, and whether the
message conveys the proper information to spur the recipient
into taking the corrective steps. In the end, the operator may
make an educated decision to not ﬁx the security issue, perhaps
to avoid compatibility problems or unplanned downtime. It is
important to recognize that such decision may arguably be the
correct decision in certain circumstances and environments,
depending on different cost-beneﬁt considerations. Thus, 100%
remediation is not necessarily the ideal goal for a notiﬁcation.
In this section, we investigate further these technical and
human aspects that affect a notiﬁcation campaign’s success.
A. Technical Aspects
Bounced Emails — Unsurprisingly, widespread emailing to site
owners results in a number of bounced emails. For all notiﬁed
Git domains, 1,085/8,160 (13.3%) bounced all emails sent
to their corresponding addresses; for WordPress 1,906/12,442
6
02/0802/1502/2203/0103/0803/15  0%  2%  4%  6%  8% 10% 12% 14%Viewed ReportsHTMLTrackingPlainMailbotS/MIMEFriendly02/0802/1502/2203/0103/0803/15  0%  2%  4%  6%  8% 10%Viewed ReportsHTMLTrackingPlainMailbotS/MIMEFriendlyGroup
Notiﬁed
Viewed
Git
WP
Notiﬁed
Viewed
1,561
1,559
1,560
1,548
1,565
367
NOTIFIED DOMAINS, VIEWED REPORTS (AND %), FIXED AFTER VIEW (VIEWED → FIXED)
(11.79%)
(12.06%)
(12.24%)
(9.95%)
(9.01%)
(13.08%)
(7.68%)
(6.70%)
(7.51%)
(4.98%)
(5.31%)
(9.40%)
2,371
2,374
2,371
2,370
2,371
585
182
159
178
118
126
55
Viewed → Fixed
(32.97%)
60
(41.51%)
66
(35.39%)
63
(33.90%)
40
(37.30%)
47
18
(32.73%)
Plain
S/MIME
Mailbot
Tracking
HTML
Friendly
TABLE IV.
184
188
191
154
141
48
Viewed → Fixed
(78.26%)
144
(80.85%)
152
(75.92%)
145
(72.73%)
112
(73.05%)
103
37
(77.08%)
(15.3%) bounced all attempts. These bounce rates differ neg-
ligibly between different notiﬁcation groups.
Spam Filtering — An email may also be stopped by a spam
ﬁlter while in transit to a recipient. To explore the impact
of spam ﬁltering, we analyzed how email access rates for
Tracking differed across mail providers with likely different
spam ﬁltering policies. Requests for the image embedded in
our message (each to a unique URL) allow us to approximate
the number of opened emails. In Table V, we summarize the
email access rates for the Git Tracking group bucketed by the
recipient mail provider, grouped by GMail, Microsoft-hosted
company mail servers, and all other providers. The results are
commensurate for WP, and elided for space.
For 477 domains, at least one email was sent to Google’s
mail servers. On Google’s GMail web interface, external
resources are retrieved by Google servers by default on email
open, except if the sender is deemed suspicious [15]. We
observe that the fraction of delivered emails that resulted in
image loads is four times higher for other mail providers com-
pared to GMail. Assuming the inherent email access levels are
similar for recipients using different providers, this signiﬁcant
difference is likely due to either Google spam ﬁltering or
blacklisting of our email sender. Based on the timestamps
of image loads for recipients using GMail, we believe our
email sender was not blacklisted as image loads continued
consistently for days after our messages were distributed. Thus
Google’s content-based spam ﬁlter appears to have ﬁltered
out a signiﬁcant fraction of our messages, highlighting the
signiﬁcant impact spam ﬁltering may have on security noti-
ﬁcations. While this observation may not be surprising, it is
important to note the operational similarities between security
notiﬁcation campaigns and those done for marketing or spam.
Future coordination with mail providers may help distinguish
security notiﬁcations from other less desirable messages.
B. Human Aspects
Reasons for not Fixing Issues — As previously outlined, only
about one third of the operators that saw a report for their
WordPress installation actually ﬁxed the problem afterward. To
better understand the reason behind this, we contacted these
operators in June, excluding those sites which did eventually
end up ﬁxed. In contrast
to our survey (see Section VI),
Provider
Delivered
Tracked
Fraction
Google
Microsoft
Others
477
103
1,049
49
46
392
10.2%
44.6%
37.4%
TABLE V.
TRACKING ANALYSIS PER PROVIDER FOR GIT
they did not
instead of providing an anonymous questionnaire, we reminded
operators about the unﬁxed vulnerabilities and asked if there
was anything we could do to help. In total, we contacted
360 domain operators this way. We only received a total
of 15 replies, but these nevertheless provided some insights.
Six domain operators said that
think it was
necessary to address the vulnerabilities, e.g., because they
were planning to move away from WordPress altogether. Three
answers indicated that the contact was not even aware of our
initial message, even though the report had been accessed
before. This is most likely due to larger teams handling such
issues, or churn in a site’s administrators. The remaining
reasons given were either that the recipient was not responsible
for the content (e.g., only registered the domain), upgrading
would have threatened compatibility with plugins, or that the
ﬂaw had been addressed before but re-appeared (possibly
through misconﬁguration of the web server). Moreover, one
recipient told us that he simply had forgotten about the problem
and another answered that our information was not trusted,
although they did follow the link to our web interface. As we
report in Section VI, our more methodical survey experiment
conveyed similar sentiments, particular on trust.
Correlating Update Frequency With Remediation — Word-
Press by default features an RSS feed, which is typically
accessible at domain.com/feed/ and shows recent site
changes such as new articles. We developed a small crawler
which allowed to us to retrieve this RSS feed, which features
the lastBuildDate ﬁeld describing when the site’s content
was last updated. In total, we could gather this data for 660
domains in WP for which a report was accessed (for the rest,
the feed was disabled or the site was ofﬂine when we checked).
Out of these, 223 ﬁxed the issue after having seen the report,
while 427 did not. For each domain, we then extracted the
number of days since the last content update relative to June
1st, 2017. Subsequently, we calculated the average time for
those domains that ﬁxed and those that did not.
We found that sites which remediated after accessing a re-
port updated an average of 60 days priors, whereas vulnerable
domains averaged 115 days since their last update. This in
line with our hypothesis that webmasters of vulnerable WP
sites who do not react skew towards those that less actively
maintain their site or run such an outdated WordPress version
that updating is rife with compatibility issues.
We conducted the same analysis for the control group,
ﬁnding minimal differences in the time since the last update be-
tween those who ended up ﬁxing versus those who did not (119
days for ﬁxed domains, 109 days for still vulnerable domains).
These values are similar to the domains who did not remediate
after viewing a report, suggesting similar populations.
7
Git
Fix
183
87
96
Read
490
361
129
% Fix
Read
37.35%
24.10%
74.42%
642
546
96
WP
Fix
113
81
32
% Fix
17.60%
14.84%
33.33%
FIX RATES OF VIEWED EMAILS IN Tracking
Email Read
and Report Not Viewed
and Report Viewed
TABLE VI.
C. Tracking Analysis
The purpose of our Tracking group was primarily to under-
stand the conversion rate of email access compared to report
views. Table VI summarizes the remediation behavior condi-
tioned on email and report views. The top row Email Read
shows the total number of domains for which we veriﬁed that
the email was read. The two other rows distinguish between
domains that did and did not view the report, respectively.
From Reading an Email to Viewing a Report — For Git, from a
total of 1,548 Tracking notiﬁed domains, our email was opened
by (at least) 490 domain operators. Note that this email reading
rate of 32% represents a lower bound, as recipients might
have also read the email without loading the external content
in the email. Of these veriﬁed readers, only 129 recipients
viewed our online report or requested it via email. This yields
a report access rate of 26%. Apart from the 129 accesses after
the hit on our tracking image, an additional 25 reports were
accessed without retrieving the image. For WP, out of 2,370
Tracking domains, 642 domains had at least one email read
(email reading rate of 27%), leading to 96 viewed reports
(report access rate of 15%); here, we observed an additional
22 viewed reports without the tracked image.
These ﬁndings are sobering, as they show that even if an
email was read, only 15–26% would investigate further by
viewing the report. Thus, even after overcoming the technical
challenges of successfully delivering a message to a recipient’s
inbox, there are human factors such as lack of trust or misun-
derstanding the information conveyed that reduce remediation
rates (although again, some recipients may have made an
informed decision towards inaction). Judging from the results
that our previous work had with including the whole message
in the body instead of a link [19, 25], we believe that the
external link only played a minor role in these results.
Fix Rates — Considering only those domains for which a
report was viewed (and the email was opened), we observe
that 74.42% and 33.33% of the issues were addressed for Git
and WP, respectively. This is in line with the results for all
other groups. The ﬁx rate for WP domains which did receive
our email, but did not open the linked report, are in line with
the results for the control group (see Table II). Notably, the
outcome is different for the Git domains who opened the
email but did not view the report: 24.7% of these domains
remediated. This is signiﬁcantly higher than the 13.0% ﬁx ratio
exhibited by the Git control group, which may suggest that
recipients already had enough information to handle the case
even without accessing our detailed reports.
The difference in the ﬁx rates may be due to the varying na-
ture of the security issues. While the Git version control system
requires a certain level of technical expertise to use, WordPress
can be installed by a non-technical user. Thus, site operators
for Git domains may skew towards a better understanding of
Git
WP
Alias
Read (Viewed)
Fraction R.
Read (Viewed)
Fraction R.
info
abuse
webmaster
security
134 (16)
79 (23)
87 (23)
26 (3)
8.7%
5.1%
5.6%
1.7%
189 (18)
80 (6)