### Viewed Reports and Analysis

The analysis of the viewed reports (with an average of 36% of recipients opening our report) supports our hypothesis that these WordPress (WP) sites may be more poorly maintained or significantly out-of-date.

### In-Depth Analysis

#### Potential Challenges for an Email Notification Campaign

Email notification campaigns face several challenges. These can include:

1. **Delivery Issues**: Emails may not reach the intended recipient due to non-existent mailboxes or spam filters.
2. **Recipient Engagement**: Even if the email is delivered, it is uncertain whether:
   - The message reaches the appropriate point of contact.
   - The recipient trusts the message.
   - The message effectively conveys the necessary information to prompt corrective action.
3. **Decision-Making**: The recipient may decide not to address the security issue, possibly to avoid compatibility problems or unplanned downtime. It is important to recognize that such a decision may be justified in certain circumstances based on cost-benefit considerations. Therefore, 100% remediation is not always the ideal goal for a notification campaign.

In this section, we delve deeper into the technical and human factors that influence the success of a notification campaign.

### A. Technical Aspects

#### Bounced Emails

Widespread emailing to site owners inevitably results in a number of bounced emails. For Git domains, 1,085 out of 8,160 (13.3%) bounced all emails sent to their corresponding addresses. For WordPress, 1,906 out of 12,442 (15.3%) bounced all attempts. The bounce rates are similar across different notification groups.

#### Spam Filtering

Emails may also be stopped by spam filters during transit. To investigate the impact of spam filtering, we analyzed how email access rates for the Tracking group differed across mail providers with varying spam filtering policies. By embedding a unique URL in the email, we could approximate the number of opened emails.

- **Google (GMail)**: For 477 domains, at least one email was sent to Google's mail servers. GMail retrieves external resources by default when an email is opened, unless the sender is deemed suspicious. We observed that the fraction of delivered emails resulting in image loads was four times higher for other mail providers compared to GMail. This significant difference is likely due to Google's content-based spam filter, which appears to have filtered out a substantial portion of our messages.
- **Microsoft and Other Providers**: The email access rates for Microsoft-hosted company mail servers and other providers were also analyzed. The results are summarized in Table V, showing that the email access rates vary significantly between different mail providers.

| Provider | Delivered | Tracked | Fraction |
|----------|-----------|---------|----------|
| Google   | 477       | 49      | 10.2%    |
| Microsoft| 103       | 46      | 44.6%    |
| Others   | 1,049     | 392     | 37.4%    |

These findings highlight the significant impact of spam filtering on the delivery and effectiveness of security notifications. Future coordination with mail providers may help distinguish security notifications from less desirable messages.

### B. Human Aspects

#### Reasons for Not Fixing Issues

As previously noted, only about one-third of the operators who viewed a report for their WordPress installation actually fixed the problem. To better understand the reasons behind this, we contacted 360 domain operators in June, excluding those sites that were eventually fixed. We received 15 replies, which provided some insights:

- **Necessity**: Six domain operators did not think it was necessary to address the vulnerabilities, often because they were planning to move away from WordPress.
- **Awareness**: Three responses indicated that the contact was unaware of our initial message, despite the report being accessed. This is likely due to larger teams handling such issues or administrative turnover.
- **Responsibility**: Some recipients were not responsible for the content (e.g., only registered the domain).
- **Compatibility**: Upgrading would have threatened compatibility with plugins.
- **Reappearance**: The flaw had been addressed before but reappeared, possibly due to misconfiguration of the web server.
- **Trust and Forgetfulness**: One recipient forgot about the problem, and another did not trust the information, although they followed the link to our web interface.

Our more methodical survey experiment (Section VI) conveyed similar sentiments, particularly regarding trust.

#### Correlating Update Frequency with Remediation

WordPress typically features an RSS feed that shows recent site changes. We developed a small crawler to retrieve this feed, which includes the `lastBuildDate` field. We gathered data for 660 WP domains where a report was accessed. Out of these, 223 fixed the issue after viewing the report, while 427 did not. We calculated the average time since the last content update relative to June 1st, 2017.

- **Remediated Sites**: Updated an average of 60 days prior.
- **Vulnerable Sites**: Updated an average of 115 days prior.

This aligns with our hypothesis that webmasters of vulnerable WP sites who do not react tend to be those who less actively maintain their site or run outdated WordPress versions with compatibility issues.

We conducted a similar analysis for the control group, finding minimal differences in the time since the last update between those who fixed the issue and those who did not (119 days for fixed domains, 109 days for still vulnerable domains). These values are similar to the domains that did not remediate after viewing a report, suggesting similar populations.

### C. Tracking Analysis

The purpose of our Tracking group was to understand the conversion rate of email access to report views. Table VI summarizes the remediation behavior conditioned on email and report views.

| Group | Email Read | Report Not Viewed | Report Viewed |
|-------|------------|-------------------|---------------|
| Git   | 490        | 361               | 129           |
| WP    | 642        | 546               | 96            |

- **Git**: From a total of 1,548 Tracking notified domains, 490 (32%) opened the email, and 129 (26%) viewed the online report.
- **WP**: From 2,370 Tracking domains, 642 (27%) opened the email, and 96 (15%) viewed the report.

These findings indicate that even if an email is read, only 15-26% of recipients will further investigate by viewing the report. This highlights the importance of overcoming both technical and human factors, such as lack of trust or misunderstanding of the information, to improve remediation rates.

#### Fix Rates

- **Git**: 74.42% of issues were addressed for domains that viewed the report.
- **WP**: 33.33% of issues were addressed for domains that viewed the report.

For Git domains that opened the email but did not view the report, 24.7% remediated, significantly higher than the 13.0% fix ratio for the control group. This suggests that recipients may have enough information to handle the case even without accessing detailed reports.

The difference in fix rates may be due to the varying nature of the security issues. Git requires a certain level of technical expertise, while WordPress can be installed by non-technical users. Thus, site operators for Git domains may have a better understanding of the issues and are more likely to take action.

### Summary

- **Bounced Emails**: Significant bounce rates for both Git and WordPress domains.
- **Spam Filtering**: Content-based spam filters, particularly on GMail, significantly affect email delivery.
- **Human Factors**: Lack of necessity, awareness, responsibility, and trust are key reasons for not fixing issues.
- **Update Frequency**: Regularly updated sites are more likely to remediate.
- **Tracking Analysis**: Only a small percentage of email readers view the report, and fix rates vary between Git and WordPress domains.