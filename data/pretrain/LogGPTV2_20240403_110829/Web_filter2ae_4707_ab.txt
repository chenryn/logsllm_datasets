求在上述模型θ下观测序列Y出现的概率P(Y∣θ)。
相当于你知道骰子有几种（状态集合），每种骰子是什么样的（状态转移矩阵），根据骰子抛出的结果（观测序列），你可以计算抛出这个结果的概率。
看到这里，你可能会问，我是谁？我在哪？我为啥要算这玩意？？？
既然你能抛出这一串结果，那么说明这一串结果的出现的概率是比较大的。你计算一下在当前已知模型下出现这一串序列的概率，如果得到的概率非常非常小，你基本可以判断，我出千了，我用的骰子不符合正常骰子的模型。如果是正常的模型θ，不太可能会出现这一串数字。换个角度看，这一串数字对于正常模型来说，就是异常情况！
总结起来就是，你可以用观测序列评估模型是否靠谱；也可以假设模型是靠谱的，用这个模型来评估观测到的数据是否异常。
###  学习问题
已知有3种骰子，已知观测序列Y =
(1,6,3,5,2,7,3,5,2,4)。估计模型θ=(A,B,π)的参数，使得以估计出来的参数作为前提条件时，出现这个观测序列的概率P(Y∣θ)最大。
相当于，你现在知道有几种骰子（但是不知道都是啥样的骰子），还知道骰子抛出来的结果（观测序列），其他就啥也不知道了。现在让你掐指算一下，骰子都是啥样的，A,B,π里面的值都得求出来。
看到这，你应该又是一脸问号，what？我就知道这么点信息，这能算出来？鲁豫看了都想说：
当我第一次看到这个问题的时候，我也不信，后面算完我就相信了。
###  预测问题（解码问题）
已知模型θ=(A,B,π)，已知观测序列Y =
(1,6,3,5,2,7,3,5,2,4)，求最有可能对应的隐含状态序列Z，也就是计算概率P=(Z∣Y,θ)，得到能让这个概率最大的Z。
相当于，你知道骰子有几种（状态集合），每种骰子是什么样的（状态转移矩阵），根据骰子抛出的结果（观测序列），可以计算出每次抛的是哪种骰子（隐含状态序列）。
## 四、对应到Web请求参数异常检测中
对于上面三个问题，我会在后面讲具体怎么求解。为了防止数学计算/公式导致的劝退现象，我打算先提前讲一下隐马尔可夫模型为什么可以用在Web安全相关的参数异常检测中，以及和上述基本问题的对应关系。
“正常总是基本相似，异常却各有各的异常。“基于这样的假设前提，隐马尔可夫模型才可能达到比较好的效果。也就是说，隐马尔可夫模型只适用于正常请求参数都比较相似的场景。
###  概率计算问题（评估问题）
假设有一个填写用户邮箱功能的Web Api，下面是3条业务中产生的正常post请求数据：
    {"id":"12334", "email": "PI:EMAIL"}
    {"id":"14352", "email": "PI:EMAIL"}
    {"id":"27988", "email": "PI:EMAIL"}
下面是三条攻击者发送的异常请求数据：
    {"id":"67123' union select 1,2,3", "email": "PI:EMAIL"}
    {"id":"67123", "email": "PI:EMAIL\\"\>\"}
    {"id":"67123", "email": "PI:EMAIL' and 1=1-- a"}
可以看到上面正常的请求中，参数值都是比较相似的。而攻击请求的Payload和正常参数值有很大不同。如果我们能够利用大量的正常请求参数，通过计算学习到一个模型，再拿这个模型去评估新的数据，那么不符合这个模型的数据，都可以判定为异常。
现在，你可以想象每个请求参数对应着一套形状各不相同的不规则骰子，每个骰子都有很多面，每个面上刻着一个字符。这一套骰子以及每次抛之前选骰子的规则加在一起就是我们的模型。有了这个模型，每次你就可以对新输入的字符串进行计算，如果是正常请求的参数字符串，这套骰子能把它抛出来的概率一定远大于异常请求参数被抛出来的概率。
例如：id这套骰子，只能抛出来数字，如果你看到其他字符出现在结果里，那肯定不是这套骰子抛出来的。同样email这套骰子能抛出来的字符也有限，除了字母就是@.这两个符号，如果结果里出现尖括号<，那也不会是这套骰子抛出来的。对于异常的情况，在模型下的条件概率会非常非常小，甚至为0。
###  学习问题
要根据上面的理论通过计算区分正常和异常，前提条件是，我们得先有一个Web请求参数的模型，那么该如何得到这个模型呢？
继续想象每个请求参数对应着一套形状不规则的骰子，每个骰子有多少面以及形状是否规则（决定输出概率）我们是不知道的，每次抛骰子前如何选骰子的规则我们也不知道（决定状态转移矩阵），第一次应该选哪个骰子来抛我们也不知道（决定初始状态概率分布）。
我们唯一知道的，就是一堆观察到的字符串，也就是这套骰子每次抛出来的结果。
如果能反推出来上面所有的未知信息，那么我们就成功得到了模型。
接下来我们尝试建立模型。
从Web安全的角度看，数字、字母、汉字、其他语言类型的字符与一些特殊字符对于参数注入类型的攻击Payload类型来说，有着明显意义上的不同。如果我们把每个观测到的字符都直接加入观测集合，那么将会导致我们的模型非常复杂，模型越复杂，泛化能力就可能越差。（想象一下，需要大量的骰子，每个骰子有特别多的面，才能表示出模型，直觉上计算量和预测效果都不会太理想。）
所以，我们可以将数字、字母等字符用统一的符号代替。比如数字用N（Number）、字母、汉字、其他语言类型的字符用A（Alphabet）来表示，特殊字符可以不做转化处理直接表示观测状态，加入观测集合。
例如，
    {"id":"12334", "email": "PI:EMAIL"}
这条数据用上面的方法表示成观测序列就是：
    {"id":"NNNNN", "email": "PI:EMAIL"}
接下来对比上一个小节讲的学习问题，可以看到，那里除了观测到的骰子序列，还有一个已知条件——骰子个数为3。而这里我们是不知道一个Web请求参数应该对应几个骰子（隐含状态）的，那怎么办呢？
那就只能靠假设了，问题又来了，假设有多少个合理呢？如果你了解过机器学习，那么你应该大概率听说过“调参侠”，这是机器学习工程师对自己工作自嘲的称谓。在机器学习领域，很多参数是要人工去尝试着调节的（在我们的上下文中，这里的参数指隐含状态的个数）。很多问题，目前为止都没有严谨的数学算法能够通过计算调节出最优的参数，遍历所有的数字去计算也不现实，毕竟目前人类社会科技的发展阶段还不支持这样的算力。我们只能退而求其次，通过有限次数的调节，最终去寻找一个相对更优的参数。
在[《数据科学在Web威胁感知中的应用》](https://www.jianshu.com/p/942d1beb7fdd)这篇文章里，作者取了所有观测序列中的观测状态数均值做了四舍五入作为隐藏状态数。
对于这种选取方式的合理性暂时不做探讨，因为在没有找到足够的理论依据，以及足够量级的实践之前，笔者也不好妄下结论。可以先完全照搬，以此为起点，在前人的经验上继续探索。
再比如，这两篇语音识别问题相关的论文中，隐藏状态数选取在6～8之间：  
[《语音识别中隐马尔可夫模型状态数的选取原则及研究》](https://wenku.baidu.com/view/979c64622379168884868762caaedd3383c4b590)  
[《语音识别中隐马尔可夫模型状态数的研究》](https://www.ixueshu.com/document/205aa064fbe7cef0318947a18e7f9386.html)  
虽然问题不同，但理论上也许可以借鉴，或许能找到更好的隐藏状态数选取方式。
###  预测问题（解码问题）
这个问题其实和我们要做的Web请求参数异常检测没什么关系。主要用在翻译，语音识别等问题上。比如根据训练好的模型，用一段观测到的音频序列，预测出其代表的文字（隐藏状态）。由于我们的问题用不到，所以这个就不做过多解释了，感兴趣的读者可以自行探索。
如果可以求解前两个基本问题，那么就可以说明隐马尔可夫模型用到Web安全参数异常检测问题上是有完整的理论依据的，等你搞清楚这个理论依据，这个问题就不再是个玄学问题了。
## 五、求解
数学警告！如果感觉看不下去，记住结论就好，上面讲的，真的是可以算出来的！如果对这部分感兴趣，就请继续往下看。
要读懂下面的内容，你需要了解概率论、微积分、凸优化相关的知识。
###  学习问题
如何推导学习问题呢？这里要用到EM（Expectation Maximization，期望极大）算法。
先复习一下Jensen不等式，后面会用到。如果不了解或者忘记了，可以先看下笔者以前写的关于凸优化的笔记[《凸优化相关概念整理总结》](https://stayfoolish.cc/article/36)。
Jensen不等式：
在隐马尔可夫模型的参数学习问题中，假设我们用Y表示观测变量的数据，Z表示隐含变量的数据，θ表示需要估计的模型参数。
我们面对的是一个含有隐含变量Z的概率模型，目标是极大化观测数据Y关于参数θ的对数似然函数，即极大化：
这一极大化求解的重要困难是：上面式子中有未观测数据（隐含变量）Z，有包含和（Z为离散型时）或积分（Z为连续型时）的对数，很难通过求导等于0求得解析解。
EM算法采用的是通过迭代逐步近似极大化L(θ):