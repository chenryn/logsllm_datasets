works. Below we ﬁrst consider in general what the adver-
sary can accomplish after it compromises a sensor node. We
then discuss some detailed attacks on routing protocols in
Section 5.2.
First, because the individual key of a node is only shared
between the node and the base station, obtaining this key
usually does not help the adversary to launch attacks. Sec-
ond, possessing the pairwise shared keys and cluster keys of
a compromised node allows the adversary to establish trust
with all the neighboring nodes. Thus the adversary can in-
ject some malicious routing control information or erroneous
sensor readings into the network. However, in our scheme
the adversary usually has to launch such attacks by using
the identity of the compromised node due to the use of our
inter-node authentication scheme. We note a salient feature
of our protocol is its ability in localizing the possible dam-
age, because after a node joins the network, it keeps a list
of trusted neighboring nodes. Thus, the compromised node
cannot establish trust relationship with any nodes except its
neighbors, which means the adversary cannot jeopardize the
secure links among any other nodes.
Third, possessing the group key allows the adversary to
decrypt the messages broadcast by the base station. Since
a broadcast message, by its nature, is intended to be known
by every node, compromising one single node is enough to
reveal the message, no matter what security mechanisms are
used for secure message distribution. Moreover, possessing
the group key does not enable the adversary to ﬂood the en-
tire network with malicious packets impersonating the base
station, because any messages sent by the base station are
authenticated using µTESLA. Finally, because we deploy a
periodic group rekeying scheme, the adversary can decrypt
only the messages being encrypted using the current group
key.
5.2 Defending against Various Attacks on Se-
cure Routing
Karlof and Wagner [17] have studied various possible at-
tacks on security of routing protocols for wireless sensor net-
work. We now show how our schemes can defend against the
attacks they described. Recall that in our scheme routing
control information is authenticated by the inter-node au-
thentication scheme, which prevents most outsider attacks
(with the exception of the wormhole attack which we intro-
duce in Section 5.2.1). Therefore, in the discussion below
we mainly consider attacks launched by an insider adver-
sary that has compromised one or more sensor nodes.
An insider adversary may attempt to spoof, alter or re-
play routing information, in the hope of creating routing
loops, attracting or repelling network traﬃc, generating false
error messages. The adversary may also launch the Se-
lective Forwarding attack in which the compromised node
suppresses the routing packets originating from a select few
nodes while reliably forwarding the remaining packets. Our
scheme cannot prevent the adversary from launching these
attacks. However, our scheme can thwart or minimize the
consequences of these attacks. First, our inter-node authen-
tication scheme makes these attacks only possible within a
two-hop zone of the compromised node. Second, because
the attacks are localized in such a small zone, the adversary
takes a high risk of being detected in launching these at-
tacks. For example, our probabilistic challenge scheme make
the spooﬁng attacks diﬃcult to go undetected. The alter-
ing attack is also likely to be detected because the sending
node may overhear its message being altered while being
forwarded by the compromised node. Third, once a com-
promised node is detected, our group rekeying scheme can
revoke the node from the network very eﬃciently.
Our scheme can prevent the following attacks. The ad-
versary may try to launch HELLO Flood Attack in which it
sends a HELLO message to all the nodes with transmission
power high enough to convince all the nodes that it is their
neighbor.
If this attack succeeds, all the nodes may send
their readings or other packets into oblivion. However, this
attack will not succeed in our schemes because the adver-
sary does not have a network-wide authentication key (note
that the group key in our scheme is only used for secure
distribution of messages from the base station, not for au-
thentication purpose). Our scheme can also prevent Sybil
attacks [8]. In this attack, the adversary may replicate the
compromised node and add multiple replicas into the net-
work. A replica node then tries to establish pairwise keys
with nodes that are not the neighbors of the compromised
node with the help of the base station, if the base station
does not know precisely the topology of the network. This
attack may work in schemes [22] that use a Kerberos-like
protocol for pairwise key establishment, but it will not work
in our scheme because in our scheme every node knows its
neighbors and we do not use the base station for pairwise
key establishment.
5.2.1 Dealing with Wormhole and Sinkhole Attacks
The attack that is most diﬃcult to detect or prevent is
one that combines the Sinkhole and the Wormhole attacks.
In a sinkhole attack, a compromised node may try to attract
packets (e.g., sensor readings) from its neighbors and then
drop them, by advertising information such as high remain-
ing energy or high end-to-end reliability. This information is
hard to verify. In the wormhole attack, typically two distant
malicious nodes, which have an out-of-band low latency link
that is invisible to the underlying sensor network, collude
to understate their distance form each other. When placing
one such node close to the base station and the other close
to the target of interest, the adversary could convince the
nodes near the target who would normally be multiple hops
away from the base station that they are only one or two
hops away. Thus this creates a sinkhole. Similarly, nodes
that are multiple hops away from each other may believe
they are neighbors via the wormhole. The wormhole attack
is very powerful because the adversary does not have to
compromise any sensor nodes to be able to launch it. In the
literature, Hu, Perrig, and Johnson [11] propose two schemes
to detect wormhole attacks for ad hoc networks. The ﬁrst
scheme requires every node to know its geographic coordi-
nate (using GPS). The second scheme requires an extremely
tight time synchronization between nodes and is thus infea-
sible for most sensor networks.
In our scheme, an outsider adversary cannot succeed in
launching wormhole attacks in any time other than the neigh-
bor discovery phase of the pairwise key establishment pro-
cess. After that phase, a node knows all its neighbors. Thus
the adversary cannot later convince two distant nodes that
they are neighbors. Since the time for neighbor discovery is
very small (usually of the order of seconds) compared to the
lifetime of the network, the probability that the adversary
succeeds in such attacks will also be very small. We note
that the authenticated and initial neighborhood knowledge
is critical to defend against wormhole attacks.
An insider adversary needs to compromise at least two
sensor nodes to create a wormhole in our schemes. Even
so, it still cannot convince two distant nodes that they are
neighbors after they have completed their neighbor discovery
phases. However, if the adversary compromises one node u
that is close to the base station, the other one v in the area
of interest, it may succeed in creating node v as a sinkhole
because the number of hops between the node v and the base
station becomes smaller, making node v especially attractive
to surrounding nodes. In applications where the location of
a base station is static, a node will know the approximate
number of hops it is away from the base station after the
network topology is constructed. Thus it is diﬃcult for the
adversary to create a very attractive sinkhole without being
detected.
6. RELATED WORK
Stajano and Anderson discuss the various issues that arise
for secure devices consisting of “peanut nodes” [23]. In par-
ticular, they propose that nodes bootstrap trust relationship
through physical contact. Zhu et al [28] propose an eﬃcient
scheme for bootstrapping trust among mobile nodes based
on the combination of TESLA [21] and one-way hash chain.
Carman, Kruus and Matt have analyzed several approaches
for key management and distribution in sensor networks [5].
In particular, they discuss the energy consumption of three
diﬀerent approaches for key establishment – pre-deployed
keying protocols, arbitrated protocols involving a trusted
server, and autonomous key agreement protocols. Basagni
et al [2] discuss a rekeying scheme for periodically updating
the group-wide traﬃc encryption key in a sensor network.
However, they assume that the sensor nodes are tamper-
free and can trust each other. In contrast, our pairwise key
establishment scheme only requires that a sensor node not
be compromised for a short time interval at the time of its
deployment.
Eschenauer and Gligor [9] present a key management scheme
for sensor networks based on probabilistic key predeploy-
ment. Chan et al [6] extend this scheme and present three
new mechanisms for key establishment based on the frame-
work of probabilistic key predeployment. Zhu et al [29]
present an approach for establishing a pairwise key that
is exclusively known to a pair of nodes with overwhelm-
ing probability, based on the combination of probabilistic
key sharing and (threshold) secret sharing. We note most
of these schemes only provide probabilistic security in the
sense that the compromise of a fraction of sensor nodes may
expose other nodes’ keys with some probability. In contrast,
our schemes provide deterministic security because the com-
promise of a fraction of sensor nodes does not reveal the
pairwise keys between other nodes.
Perrig et al present security protocols for sensor networks
[22]. In particular, they describe SNEP, a protocol for data
conﬁdentiality and two-party data authentication, and µTES-
LA, a protocol for broadcast data authentication. We note
that their scheme uses the base station to help establish a
pairwise key between two nodes, which limits its scalability
and make it subject to Sybil attacks [8]. In contrast, in our
scheme pairwise keys are established in a distributed fashion
without the involvement of the base station.
Liu and Ning [19] present a multi-level key chain scheme
for µTESLA. Karlof et al [16] describe TinySec, the link
layer security mechanism that is part of the TinyOS plat-
form. They also discuss the impact of diﬀerent keying mech-
anisms on the eﬀectiveness of in-network processing in sen-
sor networks.
In a recent paper [17], Karlof and Wagner
discussed several security attacks on routing protocols for
sensor networks. As we have shown in Section 5.2, our
scheme can prevent or thwart many of these attacks very
eﬃciently.
7. CONCLUSIONS
In this paper, we have presented LEAP (Localized En-
cryption and Authentication Protocol), a key management
protocol for sensor networks. LEAP has the following prop-
erties:
• The design of the protocol is motivated by the ob-
servation that diﬀerent types of messages exchanged
between sensor nodes have diﬀerent security require-
ments, and that a single keying mechanism is not suit-
able for meeting these diﬀerent security requirements.
Consequently, LEAP includes support for establishing
four types of keys per sensor node – individual keys
shared with the base station, pairwise keys shared with
individual neighboring nodes, cluster keys shared with
a set of neighbors, and a group key shared with all
the nodes in the network. These keys can be used to
increase the security of many non-secure protocols.
• LEAP includes an eﬃcient protocol for inter-node traf-
ﬁc authentication based on the use of one-way key
chains.
• A distinguishing feature of LEAP is that its key shar-
ing approach supports in-network processing, while at
the same time restricting the security impact of a node
compromise to the immediate network neighborhood
of the compromised node.
• The key establishment and key updating procedures
used by LEAP are eﬃcient and the storage require-
ments per node are small.
• LEAP can prevent or increase the diﬃculty of launch-
ing many security attacks on sensor networks.
8. ACKNOWLEDGMENTS
We would like to thank Fan Ye (UCLA) for helpful com-
ments and discussions. We also thank the anonymous re-
viewers for their valuable comments.
9. REFERENCES
[1] R. Anderson, M. Kuhn. Tamper Resistance – a
Cautionary Note. The Second USENIX Workshop on
Electronic Com-merce Proceedings, Oakland,
California, November, 1996.
[2] S. Basagni, K. Herrin, E. Rosti, D. Bruschi. Secure
Pebblenets. In Proc. of MobiHoc 2001.
[3] A. Cerpa and D. Estrin. ASCENT: Adaptive
selfconﬁguring sensor network topologies. In Proc. of
INFOCOM’02, June 2002.
[4] D. Coppersmith, M. Jakobsson. Almost Optimal Hash
Sequence Traversal. In Finanical Cryptography (FC)
02.
[5] D. Carman, P. Kruus and B. Matt. Constraints and
approaches for distributed sensor network security,
NAI Labs Technical Report No. 00010 (2000).
[6] H. Chan, A. Perrig, D. Song. Random Key
Predistribution Schemes for Sensor Networks. To
appear in Proc. of the IEEE Security and Privacy
Symposim 2003, May 2003.
[7] T. Dierks and C. Allen. The TLS Protocol Version
1.0. RFC 2246, January 1999.
[8] J. Douceur. The Sybil Attack. In First Interntional
Workshop on Peer-to-Peer Systems (IPTPS’02), 2002.
[9] L. Eschenauer and V. Gligor. A Key-Management
Scheme for Distributed Sensor Networks. In Proc. of
ACM CCS 2002.
[10] O. Goldreich, S. Goldwasser, and S. Micali. How to
Construct Random Functions. Journal of the ACM,
Vol. 33, No. 4, 1986, pp 210-217.
[11] Y. Hu, A. Perrig, and D. Johnson. Packet Leashes: A
Defense against Wormhole Attacks in Wireless Ad
Hoc Networks. Proceedings of INFOCOM 2003, IEEE,
San Francisco, CA, April 2003, to appear.
[12] J. Hill, R. Szewczyk, A. Woo, S. Hollar, D. Culler, and
K. Pister. System architecture directions for
networked sensors. In Proc. of ASPLOS IX, 2000.
[13] C. Intanagonwiwat, R. Govindan and D. Estrin.
Directed diﬀusion: A scalable and robust
communication paradigm for sensor networks In Proc.
of MobiCOM’00, Boston, Massachussetts, August
2000.
[14] C. Karlof, Y. Li, and J. Polastre. ARRIVE: An
Architecture for Robust Routing In Volatile
Environments. Technical Report UCB/CSD-03-1233,
University of California at Berkeley, Mar. 2003.
[15] J. Kohl and B. Neuman. The Kerberos Network
[20] S. Madden, R. Szewczyk, M. Franklin, and D. Culler.
Supporting Aggregate Queries Over Ad-Hoc Wireless
Sensor Networks. In 4th IEEE Workshop on Mobile
Computing Systems & Applications, June 2002.
[21] A. Perrig, R. Canetti, J. Tygar, D. Song. Eﬃcient
authentication and signing of multicast streams over
lossy channels. In IEEE Symposium on Security and
Privacy. May 2000.
[22] A. Perrig, R. Szewczyk, V. Wen, D. Culler, and
J. Tygar. SPINS: Security Protocols for Sensor
Networks. In Proc. of Seventh Annual ACM
International Conference on Mobile Computing and
Networks(Mobicom 2001), Rome Italy, July 2001.
[23] F. Stajano and R. Anderson. The resurrecting
duckling: Security issues for ad-hoc wireless networks.
In Security Protocols, 7th International Workshop.
Springer Verlag, 1999.
[24] TinyOs.
http://www.cs.berkeley.edu/ jhill/spec/index.htm.
[25] A. Woo and D. Culler. A Transmission Control
Scheme for Media Access in Sensor Networks. In Proc.
of MOBICOM ’01, Rome, July 2001.
[26] C. Wong, M. Gouda,S. Lam. Secure Group
Communication Using Key Graphs. In Proc. Of
SIGCOMM’98, 1998.
Authentication Service (V5). RFC 1510, Sep. 1993.
[27] F. Ye, G. Zhong, S. Lu, L. Zhang. PEAS: A Robust
[16] C. Karlof, N. Sastry, U. Shankar, and D. Wagner.
TinySec: TinyOS Link Layer Security Proposal,
version 1.0, Unpublished manuscript, July 2002.
[17] C. Karlof and D. Wagner. Secure Routing in Sensor
Networks: Attacks and Countermeasures. To appear
in Proc. of First IEEE Workshop on Sensor Network
Protocols and Applications, May 2003.
[18] L. Lamport. Password authentication with insecure
communication. Communications of the ACM,
24(11):770-772, Nov., 1981.
[19] D. Liu and P. Ning. Eﬃcient Distribution of Key
Chain Commitments for Broadcast Authentication in
Distributed Sensor Networks. In Proc. of NDSS’03,
Feb. 2003.
Energy Conserving Protocol for Long-lived Sensor
Networks. In Prof. of ICDCS 2003, Providence Rhode
Island, May, 2003.
[28] S. Zhu, S. Xu, S. Setia, and S. Jajodia. LHAP: A
Lightweight Hop-by-Hop Authentication Protocol For
Ad-Hoc Networks. In ICDCS 2003 International
Workshop on Mobile and Wireless Network (MWN
2003), Providence, Rodhe Island, May 2003.
[29] S. Zhu, S. Xu, S. Setia, and S. Jajodia. Establishing
Pair-wise Keys For Secure Communication in Ad Hoc
Networks: A Probabilistic Approach. To appear in the
11th IEEE International Conference on Network
Protocols (ICNP’03), Atlanta, Georgia, November 4-7,
2003.