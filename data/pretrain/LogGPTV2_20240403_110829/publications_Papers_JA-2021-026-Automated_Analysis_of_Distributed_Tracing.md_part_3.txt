segnahC 01
5
hparG
0
1530140000 1530160000 1530180000 1530200000 1530220000
Time Stamp
Fig.6 Metricsovertimeanddetectedanomalies
Fig.7 ComparisonbetweenAnomalousandNon-Anomalousservicework-flowtypes
JGridComputing(2021)19:9 Page11of15 9
Fig.8 Servicescoverageanalysis
Fig.9 CategorizationofTracingLimitations
9 Page12of15 JGridComputing(2021)19:9
mustbeadaptive,preferablystayingat100%untilthe of interest (e.g., time, work-flow, dependency graph
overheadbecomesaproblem. / architecture, physical infrastructure, run-time, and
In addition to the previous considerations, which others).
focused on the data set level (set of traces), it is also Data exploration is another use case that would
importanttopayattentiontoindividualtraces,inother benefitfrombettertooling.Whendebuggingasystem
words, “internal trace quality”. Traces should have orattemptingtoreasonaboutitsbehaviour,itisuseful
enough information to clearly and uniquely identify tobeabletoviewdataincontextandfollowconnec-
all the components in the system, their invocation / tions across different dimensions, for example, find
causality relationships, as well as their context (e.g., logs or infrastructure metrics related to a particular
physical computer, run-time, real time clock). Note trace,ortracesfromaspecificwork-flow.Thiscould
that component, might refer to a executable artefact, beimplementedinanumberofways,asanexample,
run-time, service or be as granular as classes and relatelogstospansbyaddingspanidentifierstologs,
functions. and relate infrastructure metrics by time-stamp and
Spans should follow an ontology that enforces a physicalmachine;alternatively,thiscouldbeachieved
stricttracingschemaupontraces,implyingarchetypes by creating a unified observation standard that col-
forformatandnaming,aswellasvalidationfeatures. lects all observability data, therefore having enough
With respect to format, spans parameters should fol- informationtopreservetheirrelation.
low specific descriptions, lowering the difficulty of We believe that the industry is experiencing the
employing statistical analysis and machine learning samelimitations,regardingtoolsandstandards,aswe
methods. As an example, the definition of span start did in this work, as evidenced by an ongoing open
andendtime-stampsshouldbeacompoundtype,con- source initiative entitled OpenTelemetry [6]. Sup-
taining a 64 bit integer numeric value and a time ported by big companies, such as Google, Lightstep
unit (e.g., milliseconds (ms), microseconds (μs)); in and Uber, this project aims at creating a more com-
termsofvalidation,thereshouldbeboundsofwhatis prehensive standard, merging OpenCensus [15] and
anacceptable,relativelycurrenttime-stamp(e.g.,±1 OpenTracing [1], to enable the creation of reusable
month), and an assertion that the end time-stamp is tools. Furthermore, so far, they have not satisfied all
greaterthanthestartingone. the requirements we uncovered, having mostly car-
In line with the current practices of Continuous ried a merging effort between technologies, instead
Development (CD) / Continuous Integration (CI), of redesigning them. For example, the consortium
there is the need to fully automate the suggested should consider trace testability as a driver for the
practices. To begin, to make sure that the code-base design, laying the foundation to create a quantitative
is sufficiently covered by the tracing instrumenta- metric for trace evaluation, as well as the respective
tion, developers need a tool that can be integrated in tools. Developers need a tool capable of determining
their development and quality assurance pipelines as iftheanalysisfailedasaconsequenceoftracequality
means of enforcement. From the testing perspective, issues.Thelackofautomaticanalysisleadstousabil-
and looking at the resulting traces themselves, there ityissuesandcodequalityproblems;instrumentation
shouldbetoolscapableoftestingcompliancewiththe libraries do not guide programmers towards the cor-
ontology/ specification and clearly outputerrors and rect way of using them (e.g., requiring explicit units
warningsaboutanyinconsistencies.Toensurethatthis fortime-stamps).
isnotedbythedevelopers,thetracingback-endtools
should,forexample,refusetoingestincongruentdata.
Notethatthisisonlypossibleifthetracingformatis 6Conclusion
sufficientlystrictandwelldefined,leadingbacktothe
needforanontology. Our results, and industry tendencies, reveal that trac-
Concerning visualization, traces are not easy to ing data is useful and required to find anomalies in
present as a result of being tree structures represent- large-scale distributed systems, where human cogni-
ing a path on the dependency / architectural graph; tion starts to fail; However, tracing data is hard to
additionally, there are no tools to filter and project handle due to application specificity, complexity and
resultsaccordingtomultipledimensionsthatmightbe sheervolume.Wehaveusedthisinformationtodetect
JGridComputing(2021)19:9 Page13of15 9
anomalous behaviours and locate them in services Data are however available from the authors upon reasonable
and time. We extracted metrics, from tracing data, as requestandwithpermissionofHuaweiResearch.Alloursource
codewasmadeavailableinGitHub.2
time-series,andthenperformedoutlierdetectionanal-
ysis over a composite multi-dimensional time-series.
Despitetheelevatedcostofanalysingtracesmanually,
References
issues addressed in this paper can only be identified
usingtracingdata.
1. The OpenTracing Specification repository. https://github.
In the end, our analysis of the tracing data from
com/opentracing/specification.RetrievedonNov,2018
the Huawei Cloud Platform, lead us to the following
2. Aguilera, M.K., Mogul, J.C., Wiener, J.L., Reynolds, P.,
conclusions: Muthitacharoen,A.:Performancedebuggingfordistributed
systemsofblackboxes.ACMSIGOPSOperatingSystems
1. OpenTracingsuffersfromalackoftoolsfordata Review37(5),74(2003).https://doi.org/10.1145/1165389.
processingandvisualisation. 945454
2. The OpenTracing specification is not strict 3. Apache Software Foundation: Zipkin. http://zipkin.io
(2016).RetrievedonFeb,2019
enoughforautomatedanalysis.
4. Ates, E., Sturmann, L., Toslali, M., Krieger, O., Meggin-
3. Thelackoftoolstocontrolinstrumentationqual- son, R., Coskun, A.K., Sambasivan, R.R.: An automated,
ityjeopardizesthetracingeffort. cross-layerinstrumentationframeworkfordiagnosingper-
formance problems in distributed applications. In: Pro-
These conclusions are valid for the newer Open- ceedingsoftheACMSymposiumonCloudComputing-
Telemetry standard, as it is partially derived from SoCC ’19, pp. 165–170. ACM Press, New York (2019).
https://doi.org/10.1145/3357223.3362704
OpenTracingandOpenCensus[15].
5. Cinque, M., Della Corte, R., Pecchia, A.: Microservices
Finally,theanalysiswedidontracingqualitylead
monitoringwitheventlogsandblackboxexecutiontracing.
us to another result. While we can use more or less IEEE Trans. Serv. Comput., 1–1. https://doi.org/10.1109/
complex tools and data analysis algorithms, the poor TSC.2019.2940009(2019)
quality of traces compromises what can be achieved. 6. Cloud Native Computing Foundation: OpenTelemetry:
Effective observability requires high-quality telemetry.
Evenwhentracesareappropriatelyorganizedandpro-
https://opentelemetry.io(2019).RetrievedonJuly,2019
videreasonabletemporalcoverage,thelackofastrict 7. Cotroneo, D., De Simone, L., Liguori, P., Natella, R.,
specification,togetherwiththelackofcodecoverage Bidokhti, N.: Enhancing failure propagation analysis in
considerablyreducestheusefulnessoftracingdata. cloudcomputingsystems.In:2019IEEE30thInternational
SymposiumonSoftwareReliabilityEngineering(ISSRE),
As future work, we intend to generate a labelled
pp.139–150.IEEE(2019).https://doi.org/10.1109/ISSRE.
dataset using fault and or failure injection to enable 2019.00023
theuseofsupervisedlearningmethods.Additionally, 8. Cournapeau,D.:Scikit-learn-MachinelearninginPython.
theindustrydefinitionoftracinginadistributedcon- https://github.com/scikit-learn/scikit-learn. Retrieved on
Feb,2019(2007)
textislackingcomparedtotheclassictracingconcept.
9. Dragoni,N.,Giallorenzo,S.,Lafuente,A.L.,Mazzara,M.,
One interesting path to follow is to extend tracing to Montesi,F.,Mustafin,R.,Safina,L.:Microservices:yester-
include other aspects of system state and meta-data, day,today,andtomorrow.In:PresentandUlteriorSoftware
suchasmonitoringandlogging. Engineering,pp.195–216(2017).https://doi.org/10.1007/
978-3-319-67425-4 12
10. Erlingsson, U´., Peinado, M., Peter, S., Erlingsson, U.,
Acknowledgements This work was produced with the sup-
Peinado, M., Peter, S., Budiu, M.: Fay. Proceedings of
port of INCD funded by FCT and FEDER, under the project
theTwenty-ThirdACMSymposiumonOperatingSystems
01/SAICT/2016n 022153andwaspartiallycarriedoutunder
¯ Principles-SOSP’1113(4),311–326(2011).https://doi.
theprojectP2020-31/SI/2017:AESOP—AutonomicService
org/10.1145/2043556.2043585
Operation, supported byPortugal 2020andUE-FEDER.This
11. Ewaschuk,R.,Beyer,B.:SiteReliabilityengineering:How
work was also partially supported by national funds through
Google Runs Production Systems, chap. Monitoring Dis-
theFCT-FoundationforScienceandTechnology,I.P.,within
tributedSystems,pp.55–66.O’ReillyMediaInc.(2016)
thescopeoftheprojectCISUC-UID/CEC/00326/2020andby
12. Fonseca, R., Porter, G., Katz, R.H., Shenker, S., Sto-
the European Social Fund, through the Regional Operational
ica, I.: X-trace: a pervasive network tracing frame-
ProgramCentro2020.
work. In: Proceedings of the 4th USENIX Confer-
ence on Networked Systems Design & Implementation
Data Availability The data that support the findings of this
study are available from Huawei Research, but restrictions
applytotheavailabilityofthesedata,whichwereusedunder 2OpenTracingProcessor(OTP),https://github.com/andrepbento/
licenseforthecurrentstudy,andsoarenotpubliclyavailable. OpenTracingProcessor
9 Page14of15 JGridComputing(2021)19:9
(NSDI’07), April, p. 20. USENIX Association (2007). 27. Levin, A., Garion, S., Kolodner, E.K., Lorenz, D.H.,
https://doi.org/10.5555/1973430.1973450 Barabash, K., Kugler, M., McShane, N.: AIOps for a
13. Fowler, M., Lewis, J.: Microservices, a definition of cloud object storage service. In: 2019 IEEE International
this architectural term. https://martinfowler.com/articles/ Congress on Big Data (Bigdatacongress), pp. 165–169.
microservices.html.RetrievedonSep,2018(2014) IEEE (2019). https://doi.org/10.1109/BigDataCongress.
14. Francesco,P.D.,Malavolta,I.,Lago,P.:Researchonarchi- 2019.00036
tectingmicroservices:trends,focus,andpotentialforindus- 28. Li, H., Oh, J., Oh, H., Lee, H.: Automated source code
trialadoption.In:2017IEEEInternationalConferenceon instrumentationforverifyingpotentialvulnerabilities.IFIP
Software Architecture (ICSA), pp. 21–30. IEEE (2017). AdvancesinInformationandCommunicationTechnology
https://doi.org/10.1109/ICSA.2017.24 471, 211–226 (2016). https://doi.org/10.1007/978-3-319-
15. Google LLC: OpenCensus. https://opencensus.io (2016). 33630-5 15
RetrievedonJuly,2019 29. Li, S.: Time Series of Price Anomaly Detection. https://
16. Grafana Labs: Grafana - The tool for beautiful met- towardsdatascience.com/time-series-of-price-anomaly-
ric dashboards. https://github.com/grafana/grafana (2015). detection-13586cd5ff46.RetrievedonJan,2019(2019)
RetrievedonFeb,2019 30. Nedelkoski, S., Cardoso, J., Kao, O.: Anomaly detection
17. Herbst,N.R.,Kounev,S.,Reussner,R.:Elasticityincloud fromsystemtracingdatausingmultimodaldeeplearning.
computing: what it is, and what it is not. Presented as In: 2019 IEEE 12th International Conference on Cloud
part of the 10th International Conference on Autonomic Computing(CLOUD),vol.2019-July,pp.179–186.IEEE
Computing,23–27(2013) (2019).https://doi.org/10.1109/CLOUD.2019.00038
18. Jacob,S.:TheRiseofAIOps:HowData,MachineLearn- 31. NetworkXdevelopers:NetworkX.https://networkx.github.
ing, and AI Will Transform Performance Monitoring. io(2014).RetrievedonNov,2018
https://www.appdynamics.com/blog/aiops/aiops-platforms- 32. NewRelic,Inc.:Newrelic–delivermoreperfectsoftware.
transform-performance-monitoring.RetrievedonMar,2019 https://newrelic.com(2008).RetrievedonJan,2021
(2019) 33. OpenTracingSpecificationCouncil:TheOpenTracingData
19. Janapati,S.P.R.:DistributedLoggingArchitectureforMicroser- Model Specification. https://opentracing.io/specification
vices.https://dzone.com/articles/distributed-logging-archite (2019).RetrievedonFeb,2019
cture-for-microservices.RetrievedonFeb,2019(2017) 34. OpenTracing Specification Council: The OpenTracing
20. Jonas Bone´r Dave Farley, R.K., Thompson, M.: The Semantic Conventions. https://github.com/opentracing/
Reactive Manifesto. https://www.reactivemanifesto.org. specification/blob/master/semantic conventions.md
RetrievedonJun,2019(2014) (2019).RetrievedonFeb,2019
21. Kaldor, J., Mace, J., Bejda, M., Gao, E., Kuropatwa, W., 35. OpenTracing Specification Council: The OpenTracing
O’Neill,J.,Ong,K.W.,Schaller,B.,Shan,P.,Viscomi,B., SemanticSpecification.https://github.com/opentracing/spe
Venkataraman,V.,Veeraraghavan,K.,Song,Y.J.:Canopy: cification/blob/master/specification.md (2019). Retrieved
anend-to-endperformancetracingandanalysissystem.In: onFeb,2019
SOSP2017-Proceedingsofthe26thACMSymposiumon 36. Oracle: Java Stream API. https://docs.oracle.com/javase/
OperatingSystemsPrinciples,pp.34–50.ACMPress,New 8/docs/api/java/util/stream/package-summary.html (2017).
York(2017).https://doi.org/10.1145/3132747.3132749 RetrievedonFeb,2019
22. Kohyarnejadfard,I.,Shakeri,M.,Aloise,D.:SystemPer- 37. Pina, F., Correia, J., Filipe, R., Araujo, F., Cardoso, J.:
formance AnomalyDetectionUsingTracingDataAnaly- Nonintrusive monitoring of microservice-based systems.
sis.In:ACMInternationalConferenceProceedingSeries, In:2018IEEE17thInternationalSymposiumonNetwork
vol. Part F1482, pp. 169–173. ACM Press, New York ComputingandApplications(NCA),pp.1–8.IEEE(2018)
(2019).https://doi.org/10.1145/3323933.3324085 38. Project Jupyter: Jupyter Notebooks. https://jupyter.org
23. Lamport, L.: Time, clocks, and the ordering of events in (2015).RetrievedonNov,2018
adistributedsystem.CommunicationsoftheACM21(7), 39. Richardson, C.: Microservices Definition. https://microse
558–565 (1978). https://doi.org/10.1145/359545.359563. rvices.io.RetrievedonSep,2018(2019)
http://amturing.acm.org/p558-lamport.pdf, http://portal.ac 40. Sambasivan, R.R., Fonseca, R., Shafer, I., Ganger, G.R.:
m.org/citation.cfm?doid=359545.359563 So,youwanttotraceyourdistributedsystem?Keydesign
24. Laprie, J.C.: From dependability to resilience. In: 38th insights from years of practical experience. Tech. rep.,
IEEE/IFIP Int. Conf. on Dependable Systems and Net- TechnicalReportCMU-PDL-14(2014)
works,pp.G8–G9(2008) 41. Sambasivan, R.R., Shafer, I., Mace, J., Sigelman, B.H.,
25. Las-Casas, P., Papakerashvili, G., Anand, V., Mace, J.: Fonseca, R., Ganger, G.R.: Principled workflow-centric
Sifter:scalablesamplingfordistributedtraces,withoutfea- tracingofdistributedsystems.In:ProceedingsoftheSev-
tureengineering.In:ProceedingsoftheACMSymposium enthACMSymposiumonCloudComputing-SoCC’16,
on Cloud Computing - SoCC ’19, pp. 312–324. ACM pp.401–414.ACMPress,NewYork(2016).https://doi.org/
Press,NewYork(2019).https://doi.org/10.1145/3357223. 10.1145/2987550.2987568
3362736 42. Sigelman, B.H., Andre´, L., Burrows, M., Stephenson, P.,
26. Lerner, A.: AIOps Platforms. https://blogs.gartner.com/ Plakal,M.,Beaver,D.,Jaspan,S.,Shanbhag,C.:Dapper,
andrew-lerner/2017/08/09/aiops-platforms. Retrieved on a Large-Scale Distributed Systems Tracing Infrastructure.
Jun,2019(2017) Tech.rep.,GoogleLLC(2010)
JGridComputing(2021)19:9 Page15of15 9
43. StumbleUpon, Inc: OpenTSDB. https://github.com/ logs. In: Proceedings of the 2019 27th ACM Joint Meet-
OpenTSDB/opentsdb(2010).RetrievedonFeb,2019 ing on European Software Engineering Conference and
44. Uber Technologies: Jaeger. https://www.jaegertracing.io Symposium on the Foundations of Software Engineering
(2017).RetrievedonJun,2019 - ESEC/FSE 2019, pp. 683–694. ACM Press, New York
45. Wes McKinney: Pandas - Flexible and powerfull time- (2019).https://doi.org/10.1145/3338906.3338961
seriesdataanalysis.https://github.com/pandas-dev/pandas
(2008).RetrievedonNov,2018
46. Zhou,X.,Peng,X.,Xie,T.,Sun,J.,Ji,C.,Liu,D.,Xiang, Publisher’s Note Springer Nature remains neutral with
Q., He, C.: Latent error prediction and fault localization regard to jurisdictional claims in published maps and institu-
formicroserviceapplicationsbylearningfromsystemtrace tionalaffiliations.