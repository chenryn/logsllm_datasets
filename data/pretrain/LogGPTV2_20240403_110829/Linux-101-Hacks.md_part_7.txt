# tune2fs -l /dev/sda1 | grep volume
Filesystem volume name: database-home
Hack 69. Create a swap file system.
Create a file for swap usage as shown below.
# dd if=/dev/zero of=/home/swap-fs bs=1M count=512
512+0 records in
512+0 records out
# ls -l /home/swap-fs
-rw-r--r-- 1 root root 536870912 Jan 2 23:13
/home/swap-fs
Use mkswap to setup a Linux swap area in the /home/swap-fs file that was
created above.
# mkswap /home/swap-fs
Setting up swapspace version 1, size = 536866 kB
Once the file is created and has been setup for Linux swap area, it is time to
enable the swap using swapon as shown below.
# swapon /home/swap-fs
Add the following line to /etc/fstab and reboot the system for the swap to
take into effect.
/home/swap-fs swap swap defaults 0 0
86
Linux 101 Hacks www.thegeekstuff.com
Hack 70. Create a new user
Add a new user – Basic method
Specify only the user name.
# useradd jsmith
Add a new user with additional Parameter
You can also specify the following parameter to the useradd
o -c : Description about the user.
o -e : expiry date of the user in mm/dd/yy format
# adduser -c "John Smith - Oracle Developer" -e
12/31/09 jsmith
Verify that the user got added successfully.
# grep jsmith /etc/passwd
jsmith:x:510:510:John Smith - Oracle
Developer:/home/jsmith:/bin/bash
Change the user password.
# passwd jsmith
Changing password for user jsmith.
New UNIX password:
BAD PASSWORD: it is based on a dictionary word
Retype new UNIX password:
passwd: all authentication tokens updated successfully.
87
Linux 101 Hacks www.thegeekstuff.com
Note: Make sure to follow these best practices to create a strong password
for the user.
How to identify the default values used by useradd?
Following are the default values that will be used when an user is created.
# useradd –D
GROUP=100
HOME=/home
INACTIVE=-1
EXPIRE=
SHELL=/bin/bash
SKEL=/etc/skel
Hack 71. Create a new group and assign to an user
Create a new developer group.
# groupadd developers
Validate that the group was created successfully.
# grep developer /etc/group
developers:x:511:
Add an user to an existing group.
You cannot use useradd to modify an existing user, as you’ll get the following
error message.
88
Linux 101 Hacks www.thegeekstuff.com
# useradd -G developers jsmith
useradd: user jsmith exists
# usermod -g developers jsmith
Validate the users group was modified successfully.
# grep jsmith /etc/passwd
jsmith:x:510:511:Oracle
Developer:/home/jsmith:/bin/bash
# id jsmith
uid=510(jsmith) gid=511(developers)
groups=511(developers)
# grep jsmith /etc/group
jsmith:x:510:
developers:x:511:jsmith
Hack 72. Setup SSH passwordless login in OpenSSH
You can login to a remote Linux server without entering password in 3 simple
steps using ssky-keygen and ssh-copy-id as explained in this example.
ssh-keygen creates the public and private keys. ssh-copy-id copies the local-
host’s public key to the remote-host’s authorized_keys file. ssh-copy-id also
assigns proper permission to the remote-host’s home, ~/.ssh, and
~/.ssh/authorized_keys.
Step 1: Create public and private keys using ssh-key-gen on local-
host
jsmith@local-host$ ssh-keygen
Generating public/private rsa key pair.
89
Linux 101 Hacks www.thegeekstuff.com
Enter file in which to save the key
(/home/jsmith/.ssh/id_rsa):[Enter key]
Enter passphrase (empty for no passphrase): [Press
enter key]
Enter same passphrase again: [Pess enter key]
Your identification has been saved in
/home/jsmith/.ssh/id_rsa.
Your public key has been saved in
/home/jsmith/.ssh/id_rsa.pub.
The key fingerprint is:
33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9
jsmith@local-host
Step 2: Copy the public key to remote-host using ssh-copy-id
jsmith@local-host$ ssh-copy-id -i ~/.ssh/id_rsa.pub
remote-host
jsmith@remote-host’s password:
Now try logging into the machine, with “ssh ‘remote-
host’”, and check in:
.ssh/authorized_keys to make sure we haven’t added
extra keys that you weren’t expecting.
Note: ssh-copy-id appends the keys to the remote-host’s
.ssh/authorized_key.
Step 3: Login to remote-host without entering the password
jsmith@local-host$ ssh remote-host
Last login: Sun Nov 16 17:22:33 2008 from 192.168.1.2
[Note: SSH did not ask for password.]
jsmith@remote-host$ [Note: You are on remote-host here]
90
Linux 101 Hacks www.thegeekstuff.com
Hack 73. Use ssh-copy-id along with ssh-agent
Using ssh-copy-id along with the ssh-add/ssh-agent
When no value is passed for the option -i and If ~/.ssh/identity.pub is not
available, ssh-copy-id will display the following error message.
jsmith@local-host$ ssh-copy-id -i remote-host
/usr/bin/ssh-copy-id: ERROR: No identities found
If you have loaded keys to the ssh-agent using the ssh-add, then ssh-copy-id
will get the keys from the ssh-agent to copy to the remote-host. i.e, it copies
the keys provided by ssh-add -L command to the remote-host, when you don’t
pass option -i to the ssh-copy-id.
jsmith@local-host$ ssh-agent $SHELL
jsmith@local-host$ ssh-add -L
The agent has no identities.
jsmith@local-host$ ssh-add
Identity added: /home/jsmith/.ssh/id_rsa
(/home/jsmith/.ssh/id_rsa)
jsmith@local-host$ ssh-add -L
ssh-rsa
AAAAB3NzaC1yc2EAAAABIwAAAQEAsJIEILxftj8aSxMa3d8t6JvM79D
aHrtPhTYpq7kIEMUNzApnyxsHpH1tQ/Ow==
/home/jsmith/.ssh/id_rsa
jsmith@local-host$ ssh-copy-id -i remote-host
jsmith@remote-host’s password:
Now try logging into the machine, with “ssh ‘remote-
host’”, and check in: .ssh/authorized_keys to make sure
we haven’t added extra keys that you weren’t expecting.
[Note: This has added the key displayed by ssh-add -L]
91
Linux 101 Hacks www.thegeekstuff.com
Three Minor Annoyances of ssh-copy-id
Following are few minor annoyances of the ssh-copy-id.
1. Default public key: ssh-copy-id uses ~/.ssh/identity.pub as the
default public key file (i.e when no value is passed to option -i).
Instead, I wish it uses id_dsa.pub, or id_rsa.pub, or identity.pub
as default keys. i.e If any one of them exist, it should copy that
to the remote-host. If two or three of them exist, it should copy
identity.pub as default.
2. The agent has no identities: When the ssh-agent is running and
the ssh-add -L returns “The agent has no identities” (i.e no keys
are added to the ssh-agent), the ssh-copy-id will still copy the
message “The agent has no identities” to the remote-host’s
authorized_keys entry.
3. Duplicate entry in authorized_keys: I wish ssh-copy-id validates
duplicate entry on the remote-host’s authorized_keys. If you
execute ssh-copy-id multiple times on the local-host, it will keep
appending the same key on the remote-host’s authorized_keys
file without checking for duplicates. Even with duplicate entries
everything works as expected. But, I would like to have my
authorized_keys file clutter free.
Hack 74. Crontab
Using cron you can execute a shell-script or Linux commands at a specific
time and date. For example a sysadmin can schedule a backup job that can
run every day.
How to add a job to the cron?
# crontab –e
0 5 * * * /root/bin/backup.sh
92
Linux 101 Hacks www.thegeekstuff.com
This will execute /root/bin/backup.sh at 5 a.m every day.
Description of Cron fields.
Following is the format of the crontab file.
{minute} {hour} {day-of-month} {month} {day-of-week} {full-path-to-shell-script}
o minute: Allowed range 0 – 59
o hour: Allowed range 0 – 23
o day-of-month: Allowed range 0 – 31
o month: Allowed range 1 – 12. 1 = January. 12 = December.
o Day-of-week: Allowed range 0 – 7. Sunday is either 0 or 7.
Crontab examples
1. Run at 12:01 a.m. 1 minute after midnight everyday. This is a good time to
run backup when the system is not under load.
1 0 * * * /root/bin/backup.sh
2. Run backup every weekday (Mon – Fri) at 11:59 p.m.
59 11 * * 1,2,3,4,5 /root/bin/backup.sh
Following will also do the same.
59 11 * * 1-5 /root/bin/backup.sh
93
Linux 101 Hacks www.thegeekstuff.com
3. Execute the command every 5 minutes.
*/5 * * * * /root/bin/check-status.sh
4. Execute at 1:10 p.m on 1st of every month
10 13 1 * * /root/bin/full-backup.sh
5. Execute 11 p.m on weekdays.
0 23 * * 1-5 /root/bin/incremental-backup.sh
Crontab Options
Following are the available options with crontab:
o crontab –e : Edit the crontab file. This will create a crontab, if it
doesn’t exist
o crontab –l : Display the crontab file.
o crontab -r : Remove the crontab file.
o crontab -ir : This will prompt user before deleting a crontab.
Hack 75. Safe Reboot Of Linux Using Magic SysRq Key
The magic SysRq key is a key combination in the Linux kernel which allows
the user to perform various low level commands regardless of the system’s
state.
It is often used to recover from freezes, or to reboot a computer without
corrupting the filesystem. The key combination consists of
94
Linux 101 Hacks www.thegeekstuff.com
Alt+SysRq+commandkey. In many systems the SysRq key is the printscreen
key.
First, you need to enable the SysRq key, as shown below.
echo "1" > /proc/sys/kernel/sysrq
List of SysRq Command Keys
Following are the command keys available for Alt+SysRq+commandkey.
o ‘k’ – Kills all the process running on the current virtual console.
o ’s’ – This will attempt to sync all the mounted file system.
o ‘b’ - Immediately reboot the system, without unmounting partitions
or syncing.
o ‘e’ – Sends SIGTERM to all process except init.
o ‘m’ – Output current memory information to the console.
o ‘i’ - Send the SIGKILL signal to all processes except init
o ‘r’ - Switch the keyboard from raw mode (the mode used by programs
such as X11), to XLATE mode.
o ’s’ – sync all mounted file system.
o ‘t’ - Output a list of current tasks and their information to the
console.
o ‘u’ - Remount all mounted filesystems in readonly mode.
o ‘o’ – Shutdown the system immediately.
o ‘p’ – Print the current registers and flags to the console.
o ‘0-9′ - Sets the console log level, controlling which kernel messages
will be printed to your console.
95
Linux 101 Hacks www.thegeekstuff.com
o ‘f’ - Will call oom_kill to kill process which takes more memory.
o ‘h’ – Used to display the help. But any other keys than the above
listed will print help.
We can also do this by echoing the keys to the /proc/sysrq-trigger file. For
example, to re-boot a system you can perform the following.
echo "b" > /proc/sysrq-trigger
Perform a Safe reboot of Linux using Magic SysRq Key
To perform a safe reboot of a Linux computer which hangs up, do the
following. This will avoid the fsck during the next re-booting. i.e Press
Alt+SysRq+letter highlighted below.
o unRaw (take control of keyboard back from X11,
o tErminate (send SIGTERM to all processes, allowing them to terminate
gracefully),
o kIll (send SIGILL to all processes, forcing them to terminate
immediately),
o Sync (flush data to disk),
o Unmount (remount all filesystems read-only),
o reBoot.
96
Linux 101 Hacks www.thegeekstuff.com
Chapter 10: Apachectl and Httpd
Examples
After you have installed Apache2, if you want to use apachectl and httpd to
it’s maximum potential, you should go beyond using start, stop and restart.
The 9 practical examples provided in this chapter will help you to use
apachectl and httpd very effectively.
Apachectl acts as SysV init script, taking arguments like start, stop, restart
and status. It also acts as front-end to httpd command, by simply passing the
command line arguments to httpd. So, all the commands you execute using
apachectl, can also be executed directly by calling httpd.
If you don’t have Apache, refer to the tutorials: install apache from source or
install LAMP stack using yum.
Hack 76. Pass different httpd.conf filename to
apachectl
Typically you’ll modify the original httpd.conf to try out different Apache
directives. If something doesn’t work out, you’ll revert back the changes.
Instead of playing around with the original httpd.conf, copy it to a new
httpd.conf.debug and use this new httpd.conf.debug file with Apache for
testing purpose as shown below using option -f.
# apachectl -f conf/httpd.conf.debug
# httpd -k start -f conf/httpd.conf.debug
[Note: you can use either apachectl or httpd as shown
above]
# ps -ef | grep http
root 25080 1 0 23:26 00:00:00 /usr/sbin/httpd -f
97
Linux 101 Hacks www.thegeekstuff.com
conf/httpd.conf.debug
apache 25099 25080 0 23:28 00:00:00 /usr/sbin/httpd -f
conf/httpd.conf.debug
[Note: ps shows the httpd running with httpd.conf.debug
file]
Once you are satisfied with the changes and Apache runs without any problem
with httpd.conf.debug, you can copy the changes to httpd.conf and start the
Apache normally as shown below.
# cp httpd.conf.debug httpd.conf
# apachectl stop
# apachectl start
# ps -ef | grep httpd
root 25114 1 0 23:28 00:00:00 /usr/sbin/httpd
-k start
daemon 25115 25114 0 23:28 00:00:00 /usr/sbin/httpd
-k start
[Note: ps indicates that the httpd is running using the
default config file]
Hack 77. Use a temporary DocumentRoot without
modifying httpd.conf
This is very helpful, when you are trying out different layout for your website
and don’t want to modify the original files under the default DocumentRoot.
Take a copy of your original DocumentRoot directory (/var/www/html) to a
new temporary DocumentRoot directory (/var/www/html_debug). Make all
your changes under this temporary DocumentRoot directory
(/var/www/html_debug) and start the Apache with this temporary directory
as shown below using option -c.
98
Linux 101 Hacks www.thegeekstuff.com
# httpd -k start -c “DocumentRoot /var/www/html_debug/”
If you want to go back to original configuration using the default
DocumentRoot (/var/www/html), simply restart the Apache as shown below.
# httpd -k stop
# apachectl start
Hack 78. Increase the Log Level temporarily
While you are debugging an issue, you can change the LogLevel of the Apache
temporarily, without modifying the LogLevel directive in the httpd.conf as
shown below using option -e. In this example, the LogLevel is set to debug.
# httpd -k start -e debug
[Sun Aug 17 13:53:06 2008] [debug] mod_so.c(246):
loaded module auth_basic_module
[Sun Aug 17 13:53:06 2008] [debug] mod_so.c(246):
loaded module auth_digest_module
Possible values you can pass to option -e are:
o debug
o info
o notice
o warn
o error
o crit
o alert
o emerg
99
Linux 101 Hacks www.thegeekstuff.com
Hack 79. Display the modules inside Apache
Display the modules compiled inside Apache
# httpd -l
Compiled in modules:
core.c
prefork.c
http_core.c
mod_so.c
Display both static and dynamic module loaded by Apache
When you pass option -l, to httpd, it will display only the static modules.
Passing option -M, will display both static and shared modules as shown
below.