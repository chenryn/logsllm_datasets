and port number to different external addresses and ports, depending on the external destination 
address (for outgoing traffic). Teredo in Windows Server 2003 and Windows XP does not support 
symmetric NATs. 
Teredo Components 
Figure 15-8 shows the set of components for Teredo connectivity. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 453 
Figure 15-8  Teredo components 
The components of Teredo are the following: 
Teredo client 
An IPv6/IPv4 node that supports a Teredo tunneling interface through which packets are tunneled 
to either other Teredo clients or nodes on the IPv6 Internet through a Teredo relay. 
Teredo server 
An IPv6/IPv4 node that is connected to both the IPv4 Internet and the IPv6 Internet. The role of the 
Teredo server is to assist in the initial configuration of Teredo clients and to facilitate the initial 
communication between either Teredo clients in different sites or between Teredo clients and IPv6-
only hosts on the IPv6 Internet. 
Teredo relay 
An IPv6/IPv4 router that can forward packets between Teredo clients on the IPv4 Internet and IPv6-
only hosts on the IPv6 Internet. 
Teredo host-specific relay 
An IPv6/IPv4 node that has an interface and connectivity to both the IPv4 Internet and the IPv6 
Internet and can communicate directly with Teredo clients over the IPv4 Internet, without the need 
for an intermediate Teredo relay. The connectivity to the IPv4 Internet can be through a public IPv4 
address or through a private IPv4 address and a neighboring NAT. The connectivity to the IPv6 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 454 
Internet can be through a direct connection to the IPv6 Internet or through an IPv6 transition 
technology such as 6to4.  
Windows Vista, Windows Server 2008, Windows Server 2003 with Service Pack 1 and later, Windows 
XP with SP2 and later, and Windows XP with SP1 and the Advanced Networking Pack for Windows XP 
include Teredo client and Teredo host-specific relay functionality. The Teredo host-specific relay 
functionality is automatically enabled if a global IPv6 address has been assigned. A global address can 
be assigned from a Router Advertisement message that is received from a native IPv6 router, an 
ISATAP router, or a 6to4 router. If there is no global address configured, Teredo client functionality is 
enabled. 
Teredo Addresses 
Teredo addresses have the format shown in Figure 15-9. 
Figure 15-9  Teredo addresses 
A Teredo address consists of the following: 
Teredo prefix 
The first 32 bits are for the Teredo prefix, which is the same for all Teredo addresses. The Microsoft 
implementations of Teredo use 2001::/32 or 3FFE:831F::/32 (obsolete). 
Teredo server IPv4 address 
The next 32 bits contain the IPv4 public address of the Teredo server that assisted in the 
configuration of this Teredo address. 
Flags 
The next 16 bits are reserved for Teredo flags. The only defined flag is the high-order bit known as 
the Cone flag. The Cone flag is set when the Teredo client detects that it is located behind a cone 
NAT. 
Obscured external port 
The next 16 bits store an obscured version of the external UDP port that corresponds to all Teredo 
traffic for this Teredo client. When the Teredo client sends its initial packet to a Teredo server, the 
source UDP port of the packet is mapped by the NAT to a different, external UDP port. All Teredo 
traffic for the host uses the same external, mapped UDP port.  
The external port is obscured by exclusive ORing (XORing) the external port with 0xFFFF. For 
example, the obscured version of the external port 5000 in hexadecimal format is EC77 (5000 
equals 0x1388, and 0x1388 XOR 0xFFFF = 0xEC77). Obscuring the external port prevents a NAT 
from translating the external port contained within the payload of the packets that are being 
forwarded. 
Obscured external address 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 455 
The last 32 bits store an obscured version of the external IPv4 address that corresponds to all 
Teredo traffic for this Teredo client. Just like the external port, when the Teredo client sends its 
initial packet to a Teredo server, the source IP address of the packet is mapped by the NAT to a 
different, external address.  
The external address is obscured by XORing the external address with 0xFFFFFFFF. For example, 
the obscured version of the public IPv4 address 131.107.0.1 in colon-hexadecimal format is 
7C94:FFFE (131.107.0.1 equals 0x836B0001, and 0x836B0001 XOR 0xFFFFFFFF = 
0x7C94FFFE). Obscuring the external address prevents NATs from translating the external 
address contained within the payload of the packets that are being forwarded. 
How Teredo Works 
For two Windows-based Teredo clients, the most crucial Teredo processes are those used for initial 
configuration and communication with a peer in a different site. 
Initial Configuration 
Teredo clients perform initial configuration by sending a series of Router Solicitation messages to 
multiple Teredo servers. Windows-based Teredo clients obtain the IPv4 addresses of Teredo servers 
on the IPv4 Internet by performing a DNS query the name teredo.ipv6.microsoft.com. You can use the 
netsh interface ipv6 set teredo servername=Name_or_IPv4_Address command to specify the DNS 
name to query. The Teredo client uses the router advertisements to derive a Teredo address and 
determine whether the client is behind a cone, restricted, or symmetric NAT. You can see what type of 
NAT the Teredo client has discovered from the display of the netsh interface ipv6 show teredo 
command. 
Based on the received Router Advertisement messages, the Teredo client constructs its Teredo 
address from the following: 
The first 64 bits are set to the value included in the Prefix Information option of the received router 
advertisement. The 64-bit prefix advertised by the Teredo server consists of the Teredo prefix 
(2001::/32) and the public IPv4 address of the Teredo server (32 bits). 
The next 16 bits are the Flags field with the high-order bit set to either 1 (cone NAT) or 0 (restricted 
NAT). 
The next 16 bits are set to the obscured external UDP port number for Teredo traffic. 
The last 32 bits are set to the obscured external IPv4 address for Teredo traffic. 
The external IPv4 address and UDP port number for Teredo traffic are included in an extra Teredo 
header in the router advertisements sent by the Teredo servers. 
Initial Communication Between Two Teredo Clients in Different Sites 
The set of packets sent during the initial communication between Teredo clients located in different 
sites depends on whether the Teredo clients are located behind cone NATs or restricted NATs.  
When a Teredo client is located behind a cone NAT, the NAT translation table entries for Teredo traffic 
for the Teredo client allows traffic from any source IP address or source UDP port. Therefore, a Teredo 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 456 
client can send packets directly to another Teredo client behind a cone NAT without having to send 
additional packets.   
When a Teredo client is located behind a restricted NAT, the NAT translation table entries for Teredo 
traffic for the Teredo client is only allowed from specific IPv4 addresses and UDP port numbers. 
Therefore, when a Teredo client is located behind a restricted NAT, an initiating Teredo client must first 
send packets to create a source-specific NAT mapping that allows the initiating Teredo client's traffic to 
traverse the restricted NAT, prior to sending the initial communication packet. 
Figure 15-10 shows the initial communication process between Teredo clients that are located in 
different sites when both sites are using restricted NATs. 
Figure 15-10  Process for sending an initial packet when two Teredo clients are located behind restricted 
NATs 
To send an initial communication packet from Teredo Client A to Teredo Client B, the following process 
is used: 
1. Teredo Client A sends a bubble packet directly to Teredo Client B. A bubble packet contains no data 
and is used to create or maintain NAT mappings. Because Teredo Client B is behind a restricted 
NAT, Teredo traffic from an arbitrary source IPv4 address and UDP port number is not allowed 
unless there is a source-specific NAT translation table entry. Assuming that there is none, the 
restricted NAT silently discards the bubble packet. However, when the restricted NAT for Teredo 
Client A forwarded the bubble packet, it created a source-specific NAT translation table entry that will 
allow future packets sent from Teredo Client B to be forwarded to Teredo Client A. 
2. Teredo Client A sends a bubble packet to Teredo Client B through Teredo Server 2 (Teredo Client 
B's Teredo server). The IPv4 destination address in the bubble packet is set to the IPv4 address of 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 457 
Teredo Server 2, which Teredo Client A determines from the third and fourth blocks of Teredo Client 
B's Teredo address. 
3. Teredo Server 2 forwards the bubble packet to Teredo Client B. The restricted NAT for Teredo Client 
B forwards the packet because there is an existing source-specific mapping for Teredo traffic from 
Teredo Server 2 (established by the initial configuration of Teredo Client B). 
4. Teredo Client B responds to the bubble packet received from Teredo Client A with its own bubble 
packet, which is sent directly to Teredo Client A. Because Teredo Client A's restricted NAT has a 
source-specific mapping for Teredo traffic from Teredo Client B (as established by the initial bubble 
packet sent from Teredo Client A in step 1), it forwards the bubble packet to Teredo Client A.  
5. Upon receipt of the bubble packet from Teredo Client B, Teredo Client A determines that source-
specific NAT mappings exist for both NATs. Teredo Client A sends an initial communication packet 
directly to Teredo Client B. Subsequent packets are sent directly between Teredo Client A and 
Teredo Client B. 
This process occurs transparently to the users at Teredo Client A and Teredo Client B. 
There are additional initial communication processes for when the destination for the initial packet is on 
the same link, on the IPv6 Internet, or with a Teredo host-specific relay. For more information, see 
Teredo Overview. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 458 
Migrating to IPv6 
The migration of IPv4 to IPv6 will be a long process. As a general guideline, to migrate from IPv4 to 
IPv6, you must perform the following steps: 
1. Begin upgrading your applications to be independent of IPv4 or IPv6. 
For example, Windows Sockets applications might need be changed to use new Windows Sockets 
application programming interfaces (APIs) so that name resolution, socket creation, and other 
functions are independent of whether IPv4 or IPv6 is being used. 
2. Update the DNS infrastructure to support IPv6 address and PTR records. 
The DNS infrastructure might need to be upgraded to support the new AAAA records and PTR 
records in the IP6.ARPA reverse domain. 
3. Upgrade hosts to IPv6/IPv4 nodes. 
Hosts must be upgraded to use both IPv4 and IPv6 in a dual IP layer or dual stack architecture. DNS 
resolver support must also be updated to process DNS query results that contain both IPv4 and IPv6 
addresses. 
4. Deploy ISATAP. 
This optional step provides tunneled IPv6 connectivity before native IPv6 connectivity is deployed 
across your network. 
5. Upgrade routing infrastructure for native IPv6 routing. 
Routers must be upgraded and configured to support native IPv6 prefix advertisement and routing. 
6. Convert IPv6/IPv4 nodes to IPv6-only nodes. 
IPv6/IPv4 nodes can be upgraded to be IPv6-only nodes. This should be a long-term goal because it 
will take years for current IPv4-only network devices to be upgraded to IPv6-only. For those IPv4-only 
nodes that cannot be upgraded to IPv6/IPv4 or IPv6-only, employ translation gateways or proxies as 
appropriate so that IPv4-only nodes can communicate with IPv6-only nodes. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 459 
Chapter Summary 
The chapter includes the following pieces of key information: 
IPv6/IPv4 nodes with a dual stack or dual IP architecture, DNS infrastructure, and IPv6 over IPv4 
tunneling are used to coexist with an IPv4 infrastructure and to provide eventual migration to an IPv6-
only infrastructure. 
A configured tunnel requires manual configuration of the tunnel endpoints. An automatic tunnel is a 
tunnel that does not require manual configuration. Tunnel endpoints are determined from routes and 
tunneling interfaces. 
ISATAP is an address assignment and host-to-host, host-to-router, and router-to-host automatic 
tunneling technology that provides unicast IPv6 connectivity between IPv6 hosts across an IPv4 
intranet. 
ISATAP addresses are composed of a valid 64-bit unicast address prefix and the interface identifier of 
either ::200:5EFE:w.x.y.z (w.x.y.z is a unicast public IPv4 address) or ::0:5EFE:w.x.y.z (w.x.y.z is a 
unicast private IPv4 address). 
6to4 is an address assignment and router-to-router automatic tunneling technology that provides 
unicast IPv6 connectivity between IPv6 sites and hosts across the IPv4 Internet. 
6to4 addresses are based on the prefix 2002:WWXX:YYZZ::/48 (in which WWXX:YYZZ is the colon 
hexadecimal representation of w.x.y.z, a public IPv4 address). 
Teredo is an address assignment and host-to-host or host-to-router automatic tunneling technology that 
provides unicast IPv6 connectivity across the IPv4 Internet when IPv6/IPv4 hosts are located behind 
one or multiple IPv4 NATs. 
To migrate from IPv4 to IPv6 you must upgrade your applications to be independent of IPv4 or IPv6, 
update the DNS infrastructure to support IPv6 address records, upgrade hosts to IPv6/IPv4 nodes, 
deploy ISATAP, upgrade your routing infrastructure for native IPv6 routing, and then convert IPv6/IPv4 
nodes to IPv6-only nodes. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 460 
Chapter Glossary 
_ISATAP name – See ISATAP name. 
6to4 –  An IPv6 transition technology that is used to provide unicast IPv6 connectivity between IPv6 
sites across the IPv4 Internet. 6to4 uses a public IPv4 address to construct a global IPv6 address 
prefix. 
6to4 address –  An address of the type 2002:WWXX:YYZZ:Subnet_ID:Interface_ID, where 
WWXX:YYZZ is the colon hexadecimal representation of w.x.y.z (a public IPv4 address). A 6to4 
address is used to represent a node for the 6to4 transition technology. 
6to4 host –  An IPv6 host that is configured with at least one 6to4 address (a global address with the 
2002::/16 prefix). 6to4 hosts do not require manual configuration and create 6to4 addresses by using 
standard address autoconfiguration mechanisms. 
6to4 relay –  An IPv6/IPv4 router that forwards 6to4-addressed traffic between 6to4 routers on the IPv4 
Internet and hosts on the IPv6 Internet. 
6to4 router –  An IPv6/IPv4 router that supports the use of a 6to4 tunnel interface and is typically used 
to forward 6to4-addressed traffic between the 6to4 hosts within a site and other 6to4 routers or 6to4 
relays on the IPv4 Internet. 
automatic tunnel –  An IPv6 over IPv4 tunnel in which the tunnel endpoints are determined by the use 
of logical tunnel interfaces and routes. 
configured tunnel –  An IPv6 over IPv4 tunnel in which the tunnel endpoints are determined by manual 
configuration. 
dual IP layer architecture –  The architecture of an IPv6/IPv4 node in which a single implementation of 
Transport layer protocols such as TCP and UDP operate over separate implementations of IPv4 and 
IPv6. 
dual stack architecture –  The architecture of an IPv6/IPv4 node that consists of two separate protocol 
stacks, one for IPv4 and one for IPv6, and each stack has its own implementation of the Transport layer 
protocols (TCP and UDP). 
host-to-host tunneling –  IPv6 over IPv4 tunneling where the tunnel endpoints are two hosts. For 
example, an IPv6/IPv4 node that resides within an IPv4 infrastructure creates an IPv6 over IPv4 tunnel 
to reach another host that resides within the same IPv4 infrastructure.  
host-to-router tunneling –  IPv6 over IPv4 tunneling where the tunnel begins at a sending host and ends 
at an IPv6/IPv4 router. For example, an IPv6/IPv4 node that resides within an IPv4 infrastructure 
creates an IPv6 over IPv4 tunnel to reach an IPv6/IPv4 router. 
Intra-site Automatic Tunnel Addressing Protocol (ISATAP) –  An IPv6 transition technology that 
provides unicast IPv6 connectivity between IPv6 hosts across an IPv4 intranet. ISATAP derives the 
interface ID from an IPv4 address (public or private) assigned to a host. 
IPv6 in IPv4 –  See IPv6 over IPv4 tunneling. 
IPv6 over IPv4 tunneling –  The encapsulation of IPv6 packets with an IPv4 header so that IPv6 traffic 
can be sent across an IPv4 infrastructure. In the IPv4 header, the Protocol field is set to 41. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 461 
IPv6/IPv4 node –  A node that uses both IPv4 and IPv6. 
IPv6-only node –  A node that uses only IPv6 and is assigned only IPv6 addresses. 
ISATAP –  See Intra-site Automatic Tunnel Addressing Protocol (ISATAP). 
ISATAP address –  An address of the type UnicastAddressPrefix:200:5EFE:w.x.y.z (in which w.x.y.z is 
a public IPv4 address) or UnicastAddressPrefix:0:5EFE:w.x.y.z (in which w.x.y.z is a private IPv4 
address). 
ISATAP host –  A host that is assigned an ISATAP address. 
ISATAP name –  The name that by default is resolved by computers running Windows Vista, Windows 
XP with Service Pack 1 and later, Windows Server 2008, or Windows Server 2003 to automatically 
discover the IPv4 address of the ISATAP router. Computers running Windows XP with no service packs 
installed by default attempt to resolve the name "_ISATAP". 
ISATAP router –  An IPv6/IPv4 router that responds to tunneled router solicitations from ISATAP hosts 
and forwards traffic between ISATAP hosts and nodes on other IPv6 subnets. 
router-to-host tunneling –  IPv6 over IPv4 tunneling in which the tunnel begins at a forwarding router 
and ends at an IPv6/IPv4 host. For example, an IPv6/IPv4 router creates an IPv6 over IPv4 tunnel to 
reach an IPv6/IPv4 host that resides within an IPv4 infrastructure. 
router-to-router tunneling –  IPv6 over IPv4 tunneling in which the tunnel begins at a forwarding router 
and ends at an IPv6/IPv4 router. For example, an IPv6/IPv4 router on the edge of an IPv6 network 
creates an IPv6 over IPv4 tunnel to reach another IPv6/IPv4 router. 
Chapter 15 – IPv6 Transition Technologies 
TCP/IP Fundamentals for Microsoft Windows  
Page: 462 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  