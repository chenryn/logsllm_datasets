Time from [1,1] to [3,4] = 3 seconds
Time from [3,4] to [-1,0] = 4 seconds
Total time = 7 seconds
Example 2:
Input: points = [[3,2],[2,2]]
Output: 5
Constraints:
●points.length == n
·1
->
" × "
 " × "
"O
1
00
"o0x"
Example 2:
Input: moves = [[0,0], [1,1], [0,1], [0,2], [1,0], [2,0]]
Output: “"B"
Explanation: "B" wins.
"X
"X
"xx “
"xxO"
"xxO"
"xxO"
"o
Example 3:
Input: moves = [[0,0], [1,1], [2,0],[1,0],[1,2],[2,1], [0,1], [0,2], [2,2]]
.,Meua,:andno
Explanation: The game ends in a draw since there are no moves to make.
"xxO"
"o0x"
"xOx"
---
## Page 1090
Example 4:
Input: moves = [[0,0],[1,1]]
Output: “pending”
Explanation: The game has not finished yet.
"x"
" o "
Constraints:
●1  0; n /= 10 {
sum += n % 10
product *= n % 10
3
return product - sum
1283.FindtheSmallestDivisorGivenaThreshold
题目
aaui asod e asoup lm am pousaua aau ue pue snu saau jo ee ue uai
dlivisor and divide all the array by it and sum the result of the dlivision. Find the smallest divisor
such that the result mentioned above is less than or equal to thresho1d
Each result of division is rounded to the nearest integer greater than or equal to that element.
(For example: 7/3 = 3 and 10/2 = 5).
It is guaranteed that there will be an answer.
Example 1:
Input: nums = [1,2,5,9], thresho1d = 6
Output: 5
If the divisor is 4 we can get a sum to 7 (1+l+2+3) and if the divisor is 5
the sum wi11 be 5 (1+1+1+2).
Example 2:
Input: nums = [2,3,5,7,11], threshold = 11
Output: 3
Example 3:
Input: nums = [19], threshold = 5
Output: 4
Constraints:
●1 >1
if calpivisor(nums,mid,threshold) {
high = mid
}else{
1ow = mid + 1
3
return 1ow
func calpivisor(nums []int, mid, threshold int) bool {
sum := 0
for i := range nums {
if nums[i]%mid != 0 {
[ + pw/[]swnu =+ wns
}else{
sum += nums [i] / mid
1
if sum <= threshold {
return true
return false
---
## Page 1095
1287. Element Appearing More Than 25% In Sorted
Array.
题目
Given an integer array sorted in non-dlecreasing order, there is exactly one integer in the array
that occurs more than 25% of the time.
Return that integer.
Example 1:
Input: arr = [1,2,2,6,6,6,6,7,10]
output: 6
Constraints:
●1<=arr.1ength <=10^4
●0<=arr[i] <=105
题目大意
给你一个非递减的有序整数数组，已知这个数组中恰好有一个整数，它的出现次数超过数组元素总数
的25%。请你找到并返回这个整数。
提示：
●1 <= arr.length <= 10^4
● 0 <= arr[i] <= 10^5
解题思路
·给出一个非递减的有序数组，要求输出出现次数超过数组元素总数25%的元素。
●简单题，由于已经非递减有序了，所以只需要判断arr[i]==arr[i+n/4]是否相等即可。
代码
func findSpecialInteger(arr []int) int{
n := len(arr)
for i:= 0;i < n-n/4; i++{
if arr[i]== arr[i+n/4]{
return arr[i]
return -1
---
## Page 1096
1290.ConvertBinaryNumberinaLinkedListto
Integer
题目
Given head which is a reference node to a singly-linked list. The value of each node in the linked
list is either O or 1. The linked list holds the binary representation of a number.
Return the decimol value of the number in the linked list.
Example 1:
Input: head = [1,0,1]
output: 5
Explanation: (101) in base 2 = (5) in base 10
Example 2:
Input: head = [0]
0:ndno
Example 3:
Input: head = [1]
output: 1
Example 4:
Input: head = [1,0,0,1,0,0,1,1,1,0,0,0,0,0, 0]
Output: 18880
Example 5:
Input: head = [0,0]
output: 0
Constraints:
● The Linked List is not empty.
---
## Page 1097
●Number of nodes will not exceed 30
●Each node's value is either 0 or 1.
题目大意
二进制表示形式。请你返回该链表所表示数字的十进制值。
提示：
·链表不为空。
·链表的结点总数不超过30。
·每个结点的值不是0就是1。
解题思路
·给出一个链表，链表从头到尾表示的数是一个整数的二进制形式，要求输出这个整数的十进制。
·简单题，从头到尾遍历一次链表，边遍历边累加二进制位。
代码
func getDecimalvalue(head *ListNode) int {
sum := 0
for head != nil {
Sum = sum*2 + head.Val
head = head.Next
return sum
1295.FindNumberswithEvenNumberofDigits
题目
Given an array nums of integers, return how many of them contain an even number of digits.
Example 1:
---
## Page 1098
Input: nums = [12,345,2,6,7896]
Output:2
Explanation:
12 contains 2 digits (even number of digits).
345 contains 3 digits (odd number of digits).
2 contains 1 digit (odd number of digits).
6 contains 1 digit (odd number of digits).
7896 contains 4 digits (even number of digits).
Therefore only 12 and 7896 contain an even number of digits.
Example 2:
Input: nums = [555,901,482,1771]
Output: 1