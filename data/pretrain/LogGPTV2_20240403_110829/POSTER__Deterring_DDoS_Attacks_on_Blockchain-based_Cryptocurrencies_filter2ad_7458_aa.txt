title:POSTER: Deterring DDoS Attacks on Blockchain-based Cryptocurrencies
through Mempool Optimization
author:Muhammad Saad and
My T. Thai and
Aziz Mohaisen
POSTER: Deterring DDoS Attacks on Blockchain-based
Cryptocurrencies through Mempool Optimization
Aziz Mohaisen
Muhammad Saad
My T. Thai
University of Central Florida
PI:EMAIL
University of Florida
PI:EMAIL
University of Central Florida
PI:EMAIL
ABSTRACT
In this paper, we highlight a new form of distributed denial of
service (DDoS) attack that impacts the memory pools of cryptocur-
rency systems causing massive transaction backlog and higher
mining fees. Towards that, we study such an attack on Bitcoin mem-
pools and explore its effects on the mempool size and transaction
fees paid by the legitimate users. We also propose countermeasures
to contain such an attack. Our countermeasures include fee-based
and age-based designs, which optimize the mempool size and help
to counter the effects of DDoS attacks. We evaluate our designs
using simulations in diverse attack conditions.
KEYWORDS
Blockchains, DDoS, Cryptocurrency, Mempool
ACM Reference Format:
Muhammad Saad, My T. Thai, and Aziz Mohaisen. 2018. POSTER: Deterring
DDoS Attacks on Blockchain-based Cryptocurrencies through Mempool
Optimization. In Proceedings of ACM Asia Conference on Computer and
Communications Security (ASIACCS’18). ACM, New York, NY, USA, 3 pages.
https://doi.org/10.1145/XXXXXX.XXXXXX
1 INTRODUCTION
Cryptocurrencies have witnessed enormous growth in the last two
years and the number of attacks on them have also increased. Some
of the well-known attacks on Blockchain-based cryptocurrencies
include the 51% attack, selfish mining, double-spending, Blockchain
forks and distributed denial-of-service (DDoS) attacks [6, 9]. In
Bitcoin, block size is limited to 1MB and the average block mining
time is 10 minutes. The size of individual transaction varies from
200 Bytes to 1K Bytes. Under these constraints, Bitcoin can verify
only 3-7 transactions per second [5]. Low transaction throughput
makes Bitcoin vulnerable to flood attacks [1], where malicious users
flood the network with low-valued dust transactions. A digital coin
can be divided into smaller factions of coin (ie., 1 bitcoin can be
divided into 108 satoshis). Leveraging that, a user can generate a
series of dust transactions from a single bitcoin and overwhelm the
network and its resources.
In Bitcoin, the memory pool (mempool) acts as a repository of all
the unconfirmed transactions. Once a user generates a transaction,
it is broadcast to the entire network and stored into the mempool
where it waits for confirmation. If the rate of incoming transactions
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5576-6/18/06...$15.00
https://doi.org/10.1145/XXXXXX.XXXXXX
is higher than the throughput of the network (3-7 transactions/sec),
a transaction backlog starts. Transactions that remain unconfirmed
for a long time eventually get rejected. On November 11, 2017, the
mempool size exceeded 115k unconfirmed transactions, resulting
in USD 700 million worth of transaction stall [7]. Mempool flooding
creates uncertainty among users so they pay higher mining fees to
prevent their transactions from being rejected.
In Bitcoin, a user generates a transaction from a spendable bal-
ance in his wallet. Spendable balance consists of “Unspent Trans-
action Outputs” (UTXO’s) that the user previously received from
other transactions. The relay fee in Bitcoin is the minimum fee paid
for a transaction to be relayed among the peers and the mining fee
is the fee paid to a miner as an incentive to include the transaction
into a block. Confirmation of a transaction means that a transaction
has been successfully mined into a block. A confirmation score, also
known as the age of a transaction, is the difference between the
block number in which it was mined and the most current block
computed by the network. If a transaction is mined in any block,
its age grows as the Blockchain size grows. A confirmation score of
0 means that the transaction has been broadcast to the network but
not yet mined. High confirmation scores protect the transaction
from reversibility and double-spending.
2 DDOS ATTACK ON BITCOIN
Threat Model. In this work, we assume an attacker who owns a
full node in the Bitcoin network with a complete Blockchain and a
memory pool at his machine. The attacker’s wallet has spendable
bitcoins that have been previously mined into the Blockchain. We
assume that the balance in the attacker’s wallet is large enough
that it can be split into a large number of small transactions, where
each of them is capable of paying the mining fee. The attacker
also controls a group of Sybil accounts, each with multiple public
addresses. The attacker and the Sybil accounts have an apriori
knowledge of each others’ public addresses. Also, the attacker and
Sybils have client side software and scripts [2], which enable them
to initiate a flood of “raw transactions” [10] in a short time.
Attack Objective. When launching a mempool flood, the objective
of the attacker is to maximize the size of the mempool and minimize
the cost of the attack. The cost of the attack is the fee paid to
miners—including relaying and the mining fees—if the attacker’s
transactions are mined. A higher fee increases the transaction’s
priority, which determine the transaction’s mining chances. To
avoid such fees, the attacker’s goal is to produce transactions that
are less likely to be prioritized. At the same time, the attacker wants
his transactions to stay in the mempools for as long as possible.
Attack Procedure. To achieve this objective, the attacker esti-
mates the minimum relay fee of the network, divides his spendable
bitcoins (“UTXO’s”) into various transactions, and sends those trans-
actions to a group of Sybil accounts. All transactions to the Sybil
accounts will have input “UTXO’s”, which are previously mined in
ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea
Muhammad Saad, My T. Thai, and Aziz Mohaisen
the Blockchain. As such, these transactions will have greater-than-
zero age, and will be capable of paying the minimum mining fee.
Then, all Sybils generate “raw transactions” [10] of minimal value
and exchange them with one another. The rate of transactions will
be much higher than the throughput of the network, causing trans-
action backlog, whereby the size of the mempools will increase. The
transactions made among the Sybil accounts will have unconfirmed
parent transactions, causing their age score to be zero.
Attack Validation. In Figure 1, we show the effect of the attack
by plotting the size of the mempool, which is determined by the
number of transactions, against the average transaction fee paid to
the miners. The data used in generating this figure was obtained
by crawling the mempool size and the average fee paid to the
miners from May 2016 to November 2017. We use the min-max
xi−min(x)
normalization, defined as z =
max(x)−min(x), to scale the data in
the range [0, 1], and plot the normalized values of the mempool
size and mining fee. It can be observed in the figure that there is
a high correlation between the mempool size and the transaction
fee. In May, August, and November 2017, it was reported [4, 7]
that Bitcoin mempool was under spam attacks with unconfirmed
dust transactions. From Figure 1, it can be seen that during the
attack, the size of the mempool was much larger than the average
mempool size. As a result, the mining fee pattern also followed
similar trend as the mempool size, with a high Pearson correlation
coefficient of ρ = 0.69–ρ(X , Y) is calculated as
Cov(X,Y )
√Var(X )Var(Y )
.
Figure 2: Fee-based Mempool Design