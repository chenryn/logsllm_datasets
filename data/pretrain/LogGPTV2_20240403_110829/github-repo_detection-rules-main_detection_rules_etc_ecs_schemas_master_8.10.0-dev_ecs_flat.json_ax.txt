{"process.parent.pid": {"dashed_name": "process-parent-pid", "description": "Process id.", "example": 4242, "flat_name": "process.parent.pid", "format": "string", "level": "core", "name": "pid", "normalize": [], "original_fieldset": "process", "short": "Process id.", "type": "long"}}
{"process.parent.real_group.id": {"dashed_name": "process-parent-real-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.parent.real_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.parent.real_group.name": {"dashed_name": "process-parent-real-group-name", "description": "Name of the group.", "flat_name": "process.parent.real_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.parent.real_user.id": {"dashed_name": "process-parent-real-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.parent.real_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.parent.real_user.name": {"dashed_name": "process-parent-real-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.parent.real_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.parent.real_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.parent.saved_group.id": {"dashed_name": "process-parent-saved-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.parent.saved_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.parent.saved_group.name": {"dashed_name": "process-parent-saved-group-name", "description": "Name of the group.", "flat_name": "process.parent.saved_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.parent.saved_user.id": {"dashed_name": "process-parent-saved-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.parent.saved_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.parent.saved_user.name": {"dashed_name": "process-parent-saved-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.parent.saved_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.parent.saved_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.parent.start": {"dashed_name": "process-parent-start", "description": "The time the process started.", "example": "2016-05-23T08:05:34.853Z", "flat_name": "process.parent.start", "level": "extended", "name": "start", "normalize": [], "original_fieldset": "process", "short": "The time the process started.", "type": "date"}}
{"process.parent.supplemental_groups.id": {"dashed_name": "process-parent-supplemental-groups-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.parent.supplemental_groups.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.parent.supplemental_groups.name": {"dashed_name": "process-parent-supplemental-groups-name", "description": "Name of the group.", "flat_name": "process.parent.supplemental_groups.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.parent.thread.id": {"dashed_name": "process-parent-thread-id", "description": "Thread ID.", "example": 4242, "flat_name": "process.parent.thread.id", "format": "string", "level": "extended", "name": "thread.id", "normalize": [], "original_fieldset": "process", "short": "Thread ID.", "type": "long"}}
{"process.parent.thread.name": {"dashed_name": "process-parent-thread-name", "description": "Thread name.", "example": "thread-0", "flat_name": "process.parent.thread.name", "ignore_above": 1024, "level": "extended", "name": "thread.name", "normalize": [], "original_fieldset": "process", "short": "Thread name."}}
{"process.parent.title": {"dashed_name": "process-parent-title", "description": "Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.", "flat_name": "process.parent.title", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.parent.title.text", "name": "text", "type": "match_only_text"}], "name": "title", "normalize": [], "original_fieldset": "process", "short": "Process title."}}
{"process.parent.tty": {"dashed_name": "process-parent-tty", "description": "Information about the controlling TTY device. If set, the process belongs to an interactive session.", "flat_name": "process.parent.tty", "level": "extended", "name": "tty", "normalize": [], "original_fieldset": "process", "short": "Information about the controlling TTY device.", "type": "object"}}
{"process.parent.tty.char_device.major": {"dashed_name": "process-parent-tty-char-device-major", "description": "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation.", "example": 4, "flat_name": "process.parent.tty.char_device.major", "level": "extended", "name": "tty.char_device.major", "normalize": [], "original_fieldset": "process", "short": "The TTY character device's major number.", "type": "long"}}
{"process.parent.tty.char_device.minor": {"dashed_name": "process-parent-tty-char-device-minor", "description": "The minor number is used only by the driver specified by the major number; other parts of the kernel don\u2019t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.", "example": 1, "flat_name": "process.parent.tty.char_device.minor", "level": "extended", "name": "tty.char_device.minor", "normalize": [], "original_fieldset": "process", "short": "The TTY character device's minor number.", "type": "long"}}
{"process.parent.uptime": {"dashed_name": "process-parent-uptime", "description": "Seconds the process has been up.", "example": 1325, "flat_name": "process.parent.uptime", "level": "extended", "name": "uptime", "normalize": [], "original_fieldset": "process", "short": "Seconds the process has been up.", "type": "long"}}
{"process.parent.user.id": {"dashed_name": "process-parent-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.parent.user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.parent.user.name": {"dashed_name": "process-parent-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.parent.user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.parent.user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.parent.vpid": {"dashed_name": "process-parent-vpid", "description": "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.", "example": 4242, "flat_name": "process.parent.vpid", "format": "string", "level": "core", "name": "vpid", "normalize": [], "original_fieldset": "process", "short": "Virtual process id.", "type": "long"}}
{"process.parent.working_directory": {"dashed_name": "process-parent-working-directory", "description": "The working directory of the process.", "example": "/home/alice", "flat_name": "process.parent.working_directory", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.parent.working_directory.text", "name": "text", "type": "match_only_text"}], "name": "working_directory", "normalize": [], "original_fieldset": "process", "short": "The working directory of the process."}}
{"process.pe.architecture": {"dashed_name": "process-pe-architecture", "description": "CPU architecture target for the file.", "example": "x64", "flat_name": "process.pe.architecture", "ignore_above": 1024, "level": "extended", "name": "architecture", "normalize": [], "original_fieldset": "pe", "short": "CPU architecture target for the file."}}
{"process.pe.company": {"dashed_name": "process-pe-company", "description": "Internal company name of the file, provided at compile-time.", "example": "Microsoft Corporation", "flat_name": "process.pe.company", "ignore_above": 1024, "level": "extended", "name": "company", "normalize": [], "original_fieldset": "pe", "short": "Internal company name of the file, provided at compile-time."}}
{"process.pe.description": {"dashed_name": "process-pe-description", "description": "Internal description of the file, provided at compile-time.", "example": "Paint", "flat_name": "process.pe.description", "ignore_above": 1024, "level": "extended", "name": "description", "normalize": [], "original_fieldset": "pe", "short": "Internal description of the file, provided at compile-time."}}
{"process.pe.file_version": {"dashed_name": "process-pe-file-version", "description": "Internal version of the file, provided at compile-time.", "example": "6.3.9600.17415", "flat_name": "process.pe.file_version", "ignore_above": 1024, "level": "extended", "name": "file_version", "normalize": [], "original_fieldset": "pe", "short": "Process name."}}
{"process.pe.go_import_hash": {"dashed_name": "process-pe-go-import-hash", "description": "A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).", "example": "10bddcb4cee42080f76c88d9ff964491", "flat_name": "process.pe.go_import_hash", "ignore_above": 1024, "level": "extended", "name": "go_import_hash", "normalize": [], "original_fieldset": "pe", "short": "A hash of the Go language imports in a PE file."}}
{"process.pe.go_imports": {"dashed_name": "process-pe-go-imports", "description": "List of imported Go language element names and types.", "flat_name": "process.pe.go_imports", "level": "extended", "name": "go_imports", "normalize": [], "original_fieldset": "pe", "short": "List of imported Go language element names and types.", "type": "flattened"}}
{"process.pe.go_imports_names_entropy": {"dashed_name": "process-pe-go-imports-names-entropy", "description": "Shannon entropy calculation from the list of Go imports.", "flat_name": "process.pe.go_imports_names_entropy", "format": "number", "level": "extended", "name": "go_imports_names_entropy", "normalize": [], "original_fieldset": "pe", "short": "Shannon entropy calculation from the list of Go imports.", "type": "long"}}
{"process.pe.go_imports_names_var_entropy": {"dashed_name": "process-pe-go-imports-names-var-entropy", "description": "Variance for Shannon entropy calculation from the list of Go imports.", "flat_name": "process.pe.go_imports_names_var_entropy", "format": "number", "level": "extended", "name": "go_imports_names_var_entropy", "normalize": [], "original_fieldset": "pe", "short": "Variance for Shannon entropy calculation from the list of Go imports.", "type": "long"}}
{"process.pe.go_stripped": {"dashed_name": "process-pe-go-stripped", "description": "Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.", "flat_name": "process.pe.go_stripped", "level": "extended", "name": "go_stripped", "normalize": [], "original_fieldset": "pe", "short": "Whether the file is a stripped or obfuscated Go executable.", "type": "boolean"}}
{"process.pe.imphash": {"dashed_name": "process-pe-imphash", "description": "A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.", "example": "0c6803c4e922103c4dca5963aad36ddf", "flat_name": "process.pe.imphash", "ignore_above": 1024, "level": "extended", "name": "imphash", "normalize": [], "original_fieldset": "pe", "short": "A hash of the imports in a PE file."}}
{"process.pe.import_hash": {"dashed_name": "process-pe-import-hash", "description": "A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.", "example": "d41d8cd98f00b204e9800998ecf8427e", "flat_name": "process.pe.import_hash", "ignore_above": 1024, "level": "extended", "name": "import_hash", "normalize": [], "original_fieldset": "pe", "short": "A hash of the imports in a PE file."}}
{"process.pe.imports": {"dashed_name": "process-pe-imports", "description": "List of imported element names and types.", "flat_name": "process.pe.imports", "level": "extended", "name": "imports", "normalize": ["array"], "original_fieldset": "pe", "short": "List of imported element names and types.", "type": "flattened"}}
{"process.pe.imports_names_entropy": {"dashed_name": "process-pe-imports-names-entropy", "description": "Shannon entropy calculation from the list of imported element names and types.", "flat_name": "process.pe.imports_names_entropy", "format": "number", "level": "extended", "name": "imports_names_entropy", "normalize": [], "original_fieldset": "pe", "short": "Shannon entropy calculation from the list of imported element names and types.", "type": "long"}}