4.  如果您的智能卡包含多个证书，`kinit`{.literal}
    可能无法选择正确的证书进行验证。在这种情况下，您需要使用
    `certid=`{.literal} 选项将证书 ID 指定为 `kinit`{.literal}
    命令的参数。
    ::: orderedlist
    1.  检查保存在智能卡中的证书数量，并获取您要使用的证书 ID：
        ``` screen
        $ pkcs11-tool --list-objects --type cert --login
        Using slot 0 with a present token (0x0)
        Logging in to "MyEID (sctest)".
        Please enter User PIN:
        Certificate Object; type = X.509 cert
          label:      Certificate
          subject:    DN: O=IDM.EXAMPLE.COM, CN=idmuser1
          ID:         01
        Certificate Object; type = X.509 cert
          label:      Second certificate
          subject:    DN: O=IDM.EXAMPLE.COM, CN=ipauser1
          ID:         02
        ```
    2.  使用证书 ID 01 运行 `kinit`{.literal} ：
        ``` screen
        $ kinit -X kinit -X X509_user_identity=PKCS11:certid=01 idmuser1
        MyEID (sctest)                   PIN:
        ```
    :::
5.  运行 `klist`{.literal} 查看 Kerberos 凭证缓存的内容：
    ``` screen
    $ klist
    Ticket cache: KCM:0:11485
    Default principal: PI:EMAIL
    Valid starting       Expires              Service principal
    10/04/2021 10:50:04  10/05/2021 10:49:55  krbtgt/PI:EMAIL
    ```
6.  完成后销毁您的活跃 Kerberos 票据：
    ``` screen
    $ kdestroy -A
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 `kinit`{.literal} man page。
-   请参阅 `kdestroy`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_increasing-sssd-timeouts_assembly_troubleshooting-authentication-with-smart-cards}增加 SSSD 超时 {.title}
:::
如果您在使用智能卡进行身份验证时遇到问题，请检查
`krb5_child.log`{.literal} 和 `p11_child.log`{.literal}
文件以查找类似如下的超时条目：
`krb5_child:Timeout for child [9607] reached…​..consider increasing value of krb5_auth_timeout.`{.literal}
如果日志文件中有一个超时条目，请尝试增加 SSSD 超时，如此过程中所述。
::: itemizedlist
**先决条件**
-   您已为智能卡验证配置了 IdM 服务器和客户端。
:::
::: orderedlist
**步骤**
1.  在 IdM 客户端中打开 `sssd.conf`{.literal} 文件：
    ``` screen
    # vim /etc/sssd/sssd.conf
    ```
2.  在您的 domain 部分中，如
    `[domain/idm.example.com]`{.literal}，添加以下选项：
    ``` screen
    krb5_auth_timeout = 60
    ```
3.  在 `[pam]`{.literal} 部分中，添加以下内容：
    ``` screen
    p11_child_timeout = 60
    ```
4.  清除 SSSD 缓存：
    ``` screen
    # sssctl cache-remove
    SSSD must not be running. Stop SSSD now? (yes/no) [yes] yes
    Creating backup of local data…
    Removing cache files…
    SSSD needs to be running. Start SSSD now? (yes/no) [yes] yes
    ```
:::
增加超时后，请尝试使用智能卡再次进行身份验证。如需了解更多详细信息，请参阅[测试智能卡验证](#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_testing-smart-card-authentication_assembly_troubleshooting-authentication-with-smart-cards "测试系统中的智能卡访问"){.link}。
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#assembly_troubleshooting-certificate-mapping-and-matching-rules_assembly_troubleshooting-authentication-with-smart-cards}证书映射和匹配规则故障排除 {.title}
:::
如果您在使用智能卡验证时遇到问题，请检查您已将智能卡证书正确链接到用户。默认情况下，当用户条目包含完整证书作为
`usercertificate`{.literal}
属性的一部分时，会关联一个证书。但是，如果您定义了证书映射规则，您可能已经更改了与用户关联的证书的方式。要排除证书映射和匹配规则的问题，请参阅以下部分：
::: itemizedlist
-   [检查证书如何映射到用户](#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_checking-how-the-certificates-are-mapped-to-users_assembly_troubleshooting-certificate-mapping-and-matching-rules "检查证书如何映射到用户"){.link}
-   [检查与智能卡证书关联的用户](#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_checking-the-user-associated-with-a-smart-card-certificate_assembly_troubleshooting-certificate-mapping-and-matching-rules "检查与智能卡证书关联的用户"){.link}
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您通过 SSH 使用智能卡进行验证，则需要将完整证书添加到 Identity
Management(IdM)的用户条目中。如果您不使用 SSH 验证智能卡，您可以使用
`ipa user-add-certmapdata`{.literal} 命令添加证书映射数据。
:::
::: section
::: titlepage
## []{#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_checking-how-the-certificates-are-mapped-to-users_assembly_troubleshooting-certificate-mapping-and-matching-rules}检查证书如何映射到用户 {.title}
:::
默认情况下，当用户条目包含完整证书作为 `usercertificate`{.literal}
属性的一部分时，会关联一个证书。但是，如果您定义了证书映射规则，您可能已经更改了与用户关联的证书的方式。这个步骤描述了如何检查证书映射规则。
::: itemizedlist
**先决条件**
-   已安装并配置了 Identity Management(IdM)服务器和客户端，用于智能卡。
-   您可以检测智能卡读取器并显示智能卡的内容。请参阅[在系统上测试智能卡访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication#proc_testing-smart-card-authentication_assembly_troubleshooting-authentication-with-smart-cards){.link}。
-   您已将智能卡证书映射到 IdM 用户。请参阅[在智能卡
    上配置身份验证的证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_smart_card_authentication/index#con-idm-certmapdata_managing-smart-card-authentication){.link}。
:::
::: orderedlist
**步骤**
1.  验证当前为 IdM 配置的证书映射规则：
    ``` literallayout
    # ipa certmaprule-find
    -------------------------------------------
    1 Certificate Identity Mapping Rule matched
    -------------------------------------------
      Rule name: smartcardrule
      Mapping rule: (ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500})
      Matching rule: CN=Certificate Authority,O=IDM.EXAMPLE.COM
      Enabled: TRUE
    ----------------------------
    Number of entries returned 1
    ----------------------------
    ```
    您可以看到定义的以下映射规则之一：
    ::: itemizedlist
    -   `ipacertmapdata`{.literal} 表示使用 IdM 用户条目
        `certmapdata`{.literal} 属性。
    -   `altSecurityIdentities`{.literal} 指定使用 Active Directory
        的用户条目名称映射属性。
    -   `userCertificate;binary=`{.literal} 表示使用 IdM 或 AD
        中的整个证书。
    :::
    您可以定义许多匹配选项，但一些通常配置的选项如下：
    ::: itemizedlist
    -   `CN=[…​]`{.literal} 指定被检查的证书的 issuer
        属性，以确保它与此匹配。
    -   `.*,DC=MY,DC=DOMAIN`{.literal}
        表示是否已检查证书的主题。
    :::
2.  通过在 IdM 服务器上的 `/etc/sssd/sssd.conf`{.literal} 文件中添加
    `debug_level = 9`{.literal} 来启用系统安全服务守护进程(SSSD)日志：
    ``` literallayout
    [domain/idm.example.com]
    ...
    debug_level = 9
    ```
3.  重启 SSSD：
    ``` literallayout
    # systemctl restart sssd
    ```
4.  如果正确读取映射，您应该在
    `/var/log/sssd/sssd_idm.example.com.log`{.literal}
    文件中看到以下条目：
    ``` literallayout
    [be[idm.example.com]] [sdap_setup_certmap] (0x4000): Trying to add rule [smartcardrule][-1][CN=Certificate Authority,O=IDM.EXAMPLE.COM][(|(userCertificate;binary={cert!bin})(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500}))].
    ```
5.  如果您的映射规则包含无效的语法，则日志文件中可以看到类似如下的条目：
    ``` literallayout
    [be[idm.example.com]]] [sss_certmap_init] (0x0040): sss_certmap initialized.
    [be[idm.example.com]]] [ipa_certmap_parse_results] (0x4000): Trying to add rule [smartcardrule][-1][CN=Certificate Authority,O=IDM.EXAMPLE.COM][(ipacertmapdata=X509:{issuer_dn!x509}{subject_dn})].
    [be[idm.example.com]]] [parse_template] (0x0040): Parse template invalid.
    [be[idm.example.com]]] [parse_ldap_mapping_rule] (0x0040): Failed to add template.
    [be[idm.example.com]]] [parse_mapping_rule] (0x0040): Failed to parse LDAP mapping rule.
    [be[idm.example.com]]] [ipa_certmap_parse_results] (0x0020): sss_certmap_add_rule failed for rule [smartcardrule], skipping. Please check for typos and if rule syntax is supported.
    [be[idm.example.com]]] [ipa_subdomains_certmap_done] (0x0040): Unable to parse certmap results [22]: Invalid argument
    [be[idm.example.com]]] [ipa_subdomains_refresh_certmap_done] (0x0020): Failed to read certificate mapping rules [22]: Invalid argument
    ```
6.  检查您的映射规则语法。
    ``` literallayout
    # ipa certmaprule-show smartcardrule
      Rule name: smartcardrule
      Mapping rule: (|(userCertificate;binary={cert!bin})(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500}))
      Matching rule: CN=Certificate Authority,O=IDM.EXAMPLE.COM
      Domain name: ipa.test
      Enabled: TRUE
    ```
7.  如果需要，修改您的证书映射规则：
    ``` literallayout
    # ipa certmaprule-mod smartcardrule --maprule '(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500})'
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 `sss-certmap`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_checking-the-user-associated-with-a-smart-card-certificate_assembly_troubleshooting-certificate-mapping-and-matching-rules}检查与智能卡证书关联的用户 {.title}
:::
如果您在使用智能卡进行身份验证时遇到问题，请验证正确的用户是否与您的智能卡证书关联。
::: itemizedlist
**先决条件**
-   已安装并配置了 Identity Management(IdM)服务器和客户端，用于智能卡。
-   您可以检测智能卡读取器并显示智能卡的内容。请参阅[在系统上测试智能卡访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication#proc_testing-smart-card-authentication_assembly_troubleshooting-authentication-with-smart-cards){.link}。
-   您已将智能卡证书映射到 IdM 用户。请参阅[在智能卡
    上配置身份验证的证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/managing_smart_card_authentication/index#con-idm-certmapdata_managing-smart-card-authentication){.link}。
-   您有 PEM 格式的智能卡中的证书副本，例如 `cert.pem`{.literal}。
:::
::: orderedlist
**步骤**
1.  验证用户是否与您的智能卡证书关联：
    ``` literallayout
    # ipa certmap-match cert.pem
    --------------
    1 user matched
    --------------
      Domain: IDM.EXAMPLE.COM
      User logins: idmuser1
    ----------------------------
    Number of entries returned 1
    ----------------------------
    ```
    如果用户或域不正确，请检查您的证书如何映射到用户。请参阅[检查如何将证书映射到用户](#assembly_troubleshooting-authentication-with-smart-cards_managing-smart-card-authentication.html#proc_checking-how-the-certificates-are-mapped-to-users_assembly_troubleshooting-certificate-mapping-and-matching-rules "检查证书如何映射到用户"){.link}。
2.  检查用户条目是否包含证书：
    ``` literallayout
    # ipa user-show idmuser1
      User login: idmuser1
    [...]
    Certificate:MIIEejCCAuKgAwIBAgIBCzANBgkqhkiG9w0BAQsFADAzMREwDwYDVQQKDAhJUEEuVEVTVDEeMBwGA1UEAwwVQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XD
    ```
3.  如果您的用户条目不包含证书，请将您的 base-64
    编码证书添加到用户条目中：
    ::: orderedlist
    1.  创建一个包含证书的环境变量，该变量移除了标头和页脚，并串联成一行，这是
        `ipa user-add-cert`{.literal} 命令期望的格式：
        ``` literallayout
        $ export CERT=`openssl x509 -outform der -in idmuser1.crt | base64 -w0 -`
        ```
        请注意，`idmuser1.crt`{.literal} 文件中的证书必须采用 PEM 格式。
    2.  使用 `ipa user-add-cert`{.literal} 命令将证书添加到
        `idmuser1`{.literal} 配置集中：
        ``` literallayout
        $ ipa user-add-cert idmuser1 --certificate=$CERT
        ```
    3.  清除系统安全服务守护进程(SSSD)缓存。
        ``` literallayout
        # sssctl cache-remove
        SSSD must not be running. Stop SSSD now? (yes/no) [yes] yes
        Creating backup of local data…
        Removing cache files…
        SSSD needs to be running. Start SSSD now? (yes/no) [yes] yes
        ```
    :::
4.  再次运行 `ipa certmap-match`{.literal}
    来确认用户与您的智能卡证书关联。
:::
:::
:::
:::