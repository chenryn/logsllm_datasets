rm-rf/usr/1ocal/mysql/mysql-test/usr/local/mysql/sql-bench\
rmmysql.tar.gz*
mkdir/usr/local/mysql
gpg--verifymysql.tar.gz.asc
-rf
-SL
-y
-auto-removebinutils
-typef-name
-0 mysql.tar.gz
-delete\
附录B常见仓库281
-maybe it's ata
---
## Page 296
282
lists/*\
VERSIoN-linux-glibc2.5-x86_64.tar.gz.asc"-0mysql.tar.gz.asc\
$MYSQLVERSION-1inux-glibc2.5-x86_64.tar.gz"-omysql.tar.gz\
#add our user and group first to make sure their IDs get assigned consistently,
5.7版本
ENTRYPOINT ["/entrypoint.sh"]
附
RUN apt-getupdate && apt-get install -ycurl--no-install-recommends && rm -rf
ENVMYSQL_MAJOR5.7
oracle.com>" imported
#gpg:key 5072E1F5:public key “MySQL Release Engineering >/etc/
FROM debian:wheezy
1~1.7版本
使用配置文件时，为了在容器中正常运行，需要保持daemonoff;。
docker run --name
Nginx的默认配置文件路径为/etc/nginx/nginx.conf，可以通过映射它来使用本地的配置
be backwards
forward request and error logs to docker logcollector
ENV NGINX_VERSION 1.7.5-1~Wheezy
apt/sources.list
5BD827BD9BF62
sudo docker run --name some-nginx -d -p 8080:80 some-content-nginx
开放端口，并映射到本地的8080端口：
S sudo docker run --name some-nginx -d some-content-nginx
$sudo docker build -tsome-content-nginx.
之后生成新的镜像，并启动一个容器：
COPY static-html-directory/usr/share/nginx/html
FROM nginx
用户也可以不使用这种映射方式，通过利用Dockerfle来直接将静态页面内容放到镜像
$sudo docker run --name some-nginx -v /some/content:/usr/share/nginx/html:ro
-sf
compatible with pre-official images
some-nginx
/var/log/nginx/error.log