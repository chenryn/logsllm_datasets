---
author: Karol Kozer
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 2055
date: '2023-02-24 09:22:41'
editorchoice: false
excerpt: Planby 是一个 JavaScript 组件，用于创建流媒体服务、音乐和体育赛事等的时间表、时间线和电子节目指南（EPG）。
fromurl: https://opensource.com/article/22/11/react-timeline-planby
id: 15571
islctt: true
largepic: /data/attachment/album/202302/24/092229kgr2rqm6326rgdbl.jpg
permalink: /article-15571-1.html
pic: /data/attachment/album/202302/24/092229kgr2rqm6326rgdbl.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: Planby 是一个 JavaScript 组件，用于创建流媒体服务、音乐和体育赛事等的时间表、时间线和电子节目指南（EPG）。
tags:
- 时间线
thumb: false
title: 使用开源工具在 React 中构建交互式时间轴
titlepic: true
translator: geekpi
updated: '2023-02-24 09:22:41'
---

![](/data/attachment/album/202302/24/092229kgr2rqm6326rgdbl.jpg)

**Planby** 是一个 JavaScript 组件，旨在帮助用户为流媒体服务、音乐和体育赛事等创建时间表、时间线和电子节目指南（EPG）。

## 背景

我在电视在线和视频点播（VOD）行业工作多年，在开发调度器网络应用时，我意识到现有的 EPG 和调度解决方案并不理想。虽然对于大多数 Web 开发者来说这是一个小众功能，但在电视应用中却非常普遍。许多网站都自行开发了各自的 EPG 或时间表，这促使我思考为什么没有一个通用的解决方案。因此，我开始了 Planby 的开发。

[Planby](https://github.com/karolkozer/planby) 是一个基于 React（JavaScript）的组件，它可以帮助你为在线电视和 VOD 服务、音乐和体育赛事等创建计划、时间线和 EPG。通过自定义虚拟视图，Planby 可以处理大量数据，并以友好且有用的方式呈现给观众。此外，Planby 提供了一个简单的 API，方便与第三方 UI 库集成，并支持根据应用设计需求进行主题定制。

## 时间线性能的重要性

在实现时间线功能时，性能至关重要。你需要处理多个频道的数据流，而应用程序需要不断刷新、移动和滚动。为了确保用户与内容的互动流畅，必须解决潜在的设计问题。例如，某些应用程序将 EPG 时间线实现为垂直列表，导致用户必须点击按钮才能在时间上左右移动，这很快会变得繁琐。更糟糕的是，一些自定义功能如评级、选择喜爱频道或 RTL 阅读模式可能不可用，或者会导致性能下降。另一个常见问题是数据传输过于冗长，当用户滚动浏览 EPG 时，频繁的数据请求会使时间线感觉迟缓甚至崩溃。

### Planby 的优势

这就是 Planby 发挥作用的地方。从头开始构建的 Planby 使用了 React 和 TypeScript，并且只依赖少量资源。其自定义虚拟视图允许高效处理大量数据。Planby 显示节目和频道，并根据时间和指定频道自动定位所有元素。如果某个资源不包含任何内容，Planby 会计算定位，使时间段正确对齐。

Planby 提供了一个简洁的界面，包括侧边栏、时间轴本身、愉悦的布局和实时节目刷新等功能。此外，还有一个可选功能，允许隐藏不需要的元素。Planby 的简单 API 使开发者能够轻松实现项目并满足用户的偏好。你可以利用 Planby 的主题来开发新功能，也可以制作自定义样式以匹配你的设计。整合其他功能如日历、评级选项、用户收藏列表、滚动、“现在” 按钮、录制计划和追播内容等也非常容易。最重要的是，Planby 支持自定义全局样式，包括 RTL 功能。该工具遵循 MIT 许可证，完全开源。

### 如何尝试 Planby

如果你有兴趣尝试 Planby 或了解更多详情，请访问 [GitHub 仓库](https://github.com/karolkozer/planby)。在那里，你可以找到一些示例并阅读文档。该软件包也可通过 `npm` 获取。

---
via: 
作者：[Karol Kozer](https://opensource.com/users/karolkozer)  
选题：[lkxed](https://github.com/lkxed)  
译者：[geekpi](https://github.com/geekpi)  
校对：[wxy](https://github.com/wxy)  

本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出