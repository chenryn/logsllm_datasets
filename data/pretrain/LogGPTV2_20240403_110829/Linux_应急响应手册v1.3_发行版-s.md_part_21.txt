从ps的结果可以看到，我们的程序创建了两个进程，两个进程属于同一个进程组，PGID为29938
现在我们kill掉进程组leader29938
ki11 =9 29938
helperelocalhost:~$
kill29938
helperelocalhost:~$
---
## Page 195
child
father
child
father
child
father
child
father
child
father
child
child
child
child
child
child
当我们kil掉进程leader之后，立马father就不打印了，但是child依旧在打印，这说明父进程被杀死，子进程还活着，接下来
看看子进程活得怎么样
1199
1288
1288
1199tty1
1214
1214
1214?
1288 S+
1000
0:00
_-bash
-1 5s
1000
/1ib/systend/systend
e --pid=/var/run/irqbalance.pid
1279
1
1279 ?
1279
-1 5
1000
0:00
_（sd-pam)
 --user
2638
2638?
-1 Ss
0:00
/usr/sbin/sshd -D
29716
26382
29716
29755
29716
29716
29716
-15s
29716?
-15
1000
2638 29773 29773 297737
29755
29756
29756
pts/2
1000
sshd:helper [priv]
L_-bash
29773
29810
29773
29773
-1 5
188
1000
0:00
_ sshd:helper@pts/@
29810
29943
29811
29811
29811 pts/0
29943
@8:08
29811
29943
29811
pts/@
29943 R+
100
Lps ajfx
1
25952
25952
25952
-1 5s
papn-pass/puass/q11/e:e
8:02
/lib/systemd/systend-tin
9813
9813
9813?
yncd
1
1
12014 12014
12014?
-1 Ss
18
12803
@:ee/usr/sbin/uuid --socket-activation
1
12803
12803?
1 12849
12849
12849?
-1 5s1
0:18/usr/lib/accountsse
vice/accounts-doemon
129939 29938 29756 pts/229756 S
119599
19599
19599
@:ee/usr/1ib/policykit-1/polkitd --no-debug
10000:00./fk
helperelocolhost:=S
好家伙，父进程被杀死后，子进程直接把PPID设置为1，但是进程组PGID依旧没变，还是29938，session的id SID也没有
发生变化，还是29756
此时这个子进程被称为孤儿进程
这里我们就需要注意了，一个木马或者后门如果主进程还存在子进程，仅仅kill-9pid杀死主进程可能是没用的，因为不
会杀死子进程
问题来了，如果我想把这些木马病毒进程都干掉，怎么操作？
我见过各种骚操作，有的是写脚本，有的是手动挨个杀，用kilall、pkil等等，这种回复一看就是没遇到那种进程pid，进程
名称一直变化的
其实非常简单，我们只需要把这个进程组给杀死就好了
ki11 -9 -PGID
---
## Page 196
没有看错，其实就是在PGID前面加个减号
实验开始：
2638
2638?
0-puss/u1qs/usn/ee:@
2638 29716
29716 29716
-1 5s
1000
0:00
sshd:helper [priv]
29716
29755
29716
29716
？
-1
5
0:00
29756
29756
0:00
\_sshd:helperepts/2
29755
29756
29756 pts/2
Ss+
1000
\_-bash
29756
29949
29949
29756
pts/2
29756
S
1000
0:00
29950
L./fk
29949
29949
29756
pts/2
29756
S
1000
0:00
29773
29773
./fk
2638
29773
1
Ss
0:00
sshd: helper [priv]
29773
29810
29773
29773
29811
?
-1
5
1000
1000
0:00
1_sshd:helperepts/0
29810
29811
29811
pts/0
29951
Ss
1000
0:00
pts/0
_-bash
29811
29951
29951
29811
29951
R+
0:00
/1ib/systemd/systemd-timesyncd
_psajfx
1
25952
25952
25952
-1
Ss1
100
0:02
1
9813
9813
9813
-1
Ss
0:01
/lib/systemd/systemd-udevd
1
12014
12014
12014
7
-1
Ss
108
00:0
/usr/sbin/uuidd --socket-activation
12803
12803 12803
-1
Ss1
104
0:00
/usr/sbin/rsyslogd -n
1
12849
12849
12849
-1 5s1
-1
Ss1
@:00/usr/lib/policykit-1/polkitd--no-debug
0:18
/usr/lib/accountsservice/accounts-daemon
19599
19599
19599?
helperelocalhost:-s
可以看到，父子进程都起来了，pid分别为29949和29950
这个时候我们杀掉这个进程组
ki11 -9 -29949
helperelocalhost:~Skill-9-29949
helperelocalhost:~$
father
child
father
child
father
child
father
[1]+Killed
fk
helperelocalhost:~/forkprocess$
1279
1279
1279
1279?
1279
000T
0:00
/lib/systemd/systemd --user
1279
1281
1000
0:00
/usr/sbin/sshd -D
\_(sd-pom)
1
29716
2638
29716
2638
29716?
2638
-1
0:00
2638
0:00
0:00
L
sshd: helper [priv]
29716
29755
29716
29716
-1
S
1000
sshd:helper@pts/2
29755
29756
29756
29756
pts/2
29756
Ss+
1000
0:00
29773
0:00
sshd:helper[priv]
_-bash
2638
29773
29810
29773
29773
29773
？
-1
1000
0:00
0:00
\_sshd:helperepts/θ
29810
29811
29811
29811
pts/0
29952
Ss
1000
1000
-bash
29811
29952
29952
29811
pts/0
29952
R+
_ps ajfx
1
25952
25952
25952
-1
Ss1
100
0:02
/1ib/systemd/systemd-timesyncd
1
9813
9813
9813
？
-1
Ss
0:01
/lib/systemd/systemd-udevd
12014
12014
12014 ?
-1
Ss
108
0:00
/usr/sbin/rsyslogd-n
/usr/sbin/uuidd --socket-activation
1
12803
12803
12803?
-1
104
0:00
12849
12849
12849 ?
-1 Ss1
0:00 /usr/lib/policykit-1/po1kitd --no-debug
0:18
/usr/lib/accountsservice/accounts-daemon
1 19599 19599
19599?
helperelocalhost:-s
---
## Page 197
可以看到，这个进程组已经没有了，渣都不剩！
这里一定要注意，你杀的是一个进程组，一定要注意，进程组里是否有正常业务进程，别杀错了
Session
其实文章开头我们已经简单提到过了，我们一般讨论的都是shellsession，我们打开一个新的终端就会创建一个session，每个
session都是由一个或者多个进程组组成的，每个进程组称为job，这里job不是任务，而叫作业
从描述中可以看出，session管理的范围要比进程组大，打开一个终端，你执行100条命令，只要没有新的session生成（调
用setsidO函数可以生成新的session），那么这些命令可以通过session进行统一管理，当然最常见的管理方式还是全部杀
死，但是这个杀伤力太大了，所以一般不使用，主要还是了解session的概念，从web安全过来的对于session这种机制应该
很容易理解
session中的第一个进程（一般是bash）的PID就是session的SID
现在大招来了，如何干掉整个session呢？
pki11 =s SID
实验开始
1263826382638?
-1 Ss
0:00/usr/sbin/sshd -D
29716 29755
2638
29716
91/67
-1 Ss
1000
0:00
29716
-1 S
0:00
sshd: helper [priv]
29716
？
sshd:helper@pts/2
29755
29756
29756
29756ts/2
29756 Ss+
100
1000
6ots/2
0:00
\_-bash
29756
29957
29957
29756
29756 S
0:00
_./fk
29957
29958
29773
29957
29756
ts/2
29756 S
-1 5s
0:00
_./fk
2638
29773
29773
0:00