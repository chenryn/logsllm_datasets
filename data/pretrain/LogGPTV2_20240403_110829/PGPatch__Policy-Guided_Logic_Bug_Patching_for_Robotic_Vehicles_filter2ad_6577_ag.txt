### References

1. H. D. T. Nguyen, D. Qi, A. Roychoudhury, and S. Chandra, "SemFix: Program Repair via Semantic Analysis," in *Proceedings of the IEEE/ACM International Conference on Software Engineering (ICSE)*, 2013.
2. "NPS," https://wiki.paparazziuav.org/wiki/NPS, 2021.
3. "Paparazzi Parameter List XML," https://tinyurl.com/np2e6v2r, 2021.
4. "Paparazzi UAS," https://github.com/paparazzi/paparazzi/, 2021.
5. "Paparazzi Chat Channel," https://gitter.im/paparazzi/discuss, 2021.
6. J. H. Perkins, S. Kim, S. Larsen, S. Amarasinghe, J. Bachrach, M. Carbin, C. Pacheco, F. Sherwood, S. Sidiroglou, G. Sullivan et al., "Automatically Patching Errors in Deployed Software," in *Proceedings of the ACM Symposium on Operating Systems Principles (SOSP)*, 2009.
7. E. Plaku, L. E. Kavraki, and M. Y. Vardi, "Falsification of LTL Safety Properties in Hybrid Systems," in *Proceedings of the International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS)*, 2009.
8. "Pprzlink," https://github.com/paparazzi/pprzlink, 2021.
9. "PX4 Drone Autopilot," https://github.com/PX4/PX4-Autopilot, 2021.
10. "PX4 Parameter List XML," https://tinyurl.com/5fhcuydx, 2021.
11. "PX4 Blog," https://discuss.px4.io, 2021.
12. "PX4 Chat Channel," https://gitter.im/PX4/Firmware, 2021.
13. "PX4 Documentation," https://docs.px4.io/master/en/, 2021.
14. "Pymavlink," https://github.com/ArduPilot/pymavlink, 2021.
15. "Pyparsing," https://github.com/pyparsing/pyparsing, 2021.
16. Z. Qi, F. Long, S. Achour, and M. Rinard, "An Analysis of Patch Plausibility and Correctness for Generate-and-Validate Patch Generation Systems," in *Proceedings of the International Symposium on Software Testing and Analysis (ISSTA)*, 2015.
17. C. Ragkhitwetsagul, J. Krinke, M. Paixao, G. Bianco, and R. Oliveto, "Toxic Code Snippets on Stack Overflow," *IEEE Transactions on Software Engineering (TSE)*, 2019.
18. N. M. Rodday, R. d. O. Schmidt, and A. Pras, "Exploring Security Vulnerabilities of Unmanned Aerial Vehicles," in *Proceedings of the IEEE/IFIP Network Operations and Management Symposium (NOMS)*, 2016.
19. S. Schechter, "Common Pitfalls in Writing About Security and Privacy Human Subjects Experiments, and How to Avoid Them," Microsoft, 2013.
20. M. Shahzad, M. Z. Shafiq, and A. X. Liu, "A Large Scale Exploratory Analysis of Software Vulnerability Life Cycles," in *Proceedings of the IEEE/ACM International Conference on Software Engineering (ICSE)*, 2012.
21. "Tau Labs," https://github.com/TauLabs/TauLabs, 2021.
22. "Tilt-Bug," https://tinyurl.com/6yj5bx4v, 2021.
23. "Update Math Functions," https://tinyurl.com/eaez8sjn, 2021.
24. W. Weimer, S. Forrest, C. Le Goues, and T. Nguyen, "Automatic Program Repair with Evolutionary Computation," *Communications of the ACM*, 2010.
25. W. Weimer, T. Nguyen, C. Le Goues, and S. Forrest, "Automatically Finding Patches Using Genetic Programming," in *Proceedings of the IEEE/ACM International Conference on Software Engineering (ICSE)*, 2009.
26. K. C. Zeng, S. Liu, Y. Shu, D. Wang, H. Li, Y. Dou, G. Wang, and Y. Yang, "All Your GPS Are Belong to Us: Towards Stealthy Manipulation of Road Navigation Systems," in *Proceedings of the USENIX Security Symposium (USENIX SEC)*, 2018.
27. L. Zhang, W. He, J. Martinez, N. Brackenbury, S. Lu, and B. Ur, "AutoTap: Synthesizing and Repairing Trigger-Action Programs Using LTL Properties," in *Proceedings of the IEEE/ACM International Conference on Software Engineering (ICSE)*, 2019.
28. L. Zhang, W. He, O. Morkved, V. Zhao, M. L. Littman, S. Lu, and B. Ur, "Trace2Tap: Synthesizing Trigger-Action Programs from Traces of Behavior," *The ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies*, 2020.

### Appendix

#### A. Analysis of Bug Types

We collected 1,554 patches (referred to as Pset) from 2014 to 2021 from their GitHub repositories [8], [9]. Two authors of this paper reviewed and classified each patch into one of three categories: (1) fixing a logic bug, (2) patching a memory bug, and (3) addressing minor issues. Minor issues are those that do not negatively impact an RV's behavior, such as updating comments and code refactoring.

Our analysis revealed that Pset fixed 1,234 logic bugs, 23 memory bugs, and 297 minor issues. We excluded the 297 minor issues from Pset because they do not address actual bugs. Consequently, we found that 98.2% (1,234/1,257) of the bugs were logic bugs, while 1.8% (23/1,257) were memory bugs.

#### B. Automatically Extracting Policies

Previous research has profiled normal behaviors of (1) programs using values from memory locations [6] and (2) IoT and industrial control systems using actuator and sensor traces [26], [28]. These methods could be considered for profiling the correct behavior of RVs to generate PPL formulas for PGPATCH. However, RVs operate in dynamic outdoor environments, where their correct behavior is influenced by various factors, including user commands and environmental conditions like wind, other vehicles, and obstacles. Profiling complete normal behaviors from the extensive input space of RVs is not scalable due to the need to test each user input combination under all possible environmental conditions.

#### C. Details of the Fixed Bugs

In our evaluation (Section VII), PGPATCH successfully patched 258 out of 297 logic bugs. The bug types, their root causes, and physical effects are summarized in Table VI and Table VII.

**Root Causes of Bugs:**
- **Incorrect Valid Range Check:** This issue can lead to crashes on the ground.
- **Incorrect State Handling:** This can result in unstable attitude or position and performance degradation.

**Physical Effects:**
- **Crash on the Ground:** Due to incorrect valid range checks.
- **Unstable Attitude/Position:** Due to incorrect state handling.
- **Performance Degradation:** Also due to incorrect state handling.

**Summary Tables:**

| RV Software | Bug Type | # of Fixed Bugs | Removed Feature | Misimplementation | Unimplementation |
|-------------|----------|-----------------|-----------------|-------------------|------------------|
| ArduPilot   | Logic    | 20              | 0               | 0                 | 0                |
| PX4         | Logic    | 120             | 0               | 0                 | 0                |
| Paparazzi   | Logic    | 24              | 0               | 0                 | 0                |
| Total       | Logic    | 164             | 0               | 0                 | 0                |

| RV Software | Bug Type | # of Fixed Bugs | Removed Feature | Misimplementation | Unimplementation |
|-------------|----------|-----------------|-----------------|-------------------|------------------|
| ArduPilot   | Memory   | 0               | 0               | 0                 | 0                |
| PX4         | Memory   | 0               | 0               | 0                 | 0                |
| Paparazzi   | Memory   | 0               | 0               | 0                 | 0                |
| Total       | Memory   | 0               | 0               | 0                 | 0                |

**Table VI: Summary of the 181 fixed bugs discovered by PGFuzz.**

| RV Software | Bug Type | # of Fixed Bugs | Removed Feature | Misimplementation | Unimplementation |
|-------------|----------|-----------------|-----------------|-------------------|------------------|
| ArduPilot   | Logic    | 31              | 0               | 0                 | 0                |
| PX4         | Logic    | 24              | 0               | 0                 | 0                |
| Paparazzi   | Logic    | 19              | 0               | 0                 | 0                |
| Total       | Logic    | 74              | 0               | 0                 | 0                |

| RV Software | Bug Type | # of Fixed Bugs | Removed Feature | Misimplementation | Unimplementation |
|-------------|----------|-----------------|-----------------|-------------------|------------------|
| ArduPilot   | Memory   | 2               | 0               | 0                 | 0                |
| PX4         | Memory   | 0               | 0               | 0                 | 0                |
| Paparazzi   | Memory   | 0               | 0               | 0                 | 0                |
| Total       | Memory   | 2               | 0               | 0                 | 0                |

**Table VII: Summary of the 77 fixed bugs reported in GitHub repositories.**

This structured format and clear categorization provide a more organized and professional presentation of the data and findings.