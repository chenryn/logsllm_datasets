9.8%
(235)
7.0%
(372)
effective
errors
61.9%
(1778)
78.6%
(1888)
69.4%
(3666)
31.5%
(904)
6.4%
(154)
20.1%
(1058)
1.5%
(44)
2.2%
(54)
1.9%
(98)
Target
(# exp)
Registers
(2873)
Memory
(2402)
TOTAL
(5275)
Flight
critical
failures
<0.1%
(1)
1.0%
(24)
0.5%
(25)
4.1. Errors detected by MPC565 exceptions
is
triggered,
the experiment
As shown in Table 1, 31.5% and 6.4% of all faults
injected in registers and memory respectively are detected
by MPC565 hardware exceptions [12]. When an exception
is
stopped and a new
experiment is started. In an actual system implementation,
the FADEC node should stop producing results and leave
the control to a backup when an exception is triggered. The
processor was configured to enter the Checkstop State
(CHSTP) instead of taking the Machine Check Exception
(MCE) itself when MCE occurs. CHSTP occurred for
52.4% and 26.6% of the hardware exceptions observed for
faults injected in registers and memory respectively while
the
for Floating-Point Assist
Exceptions (FPASE) are 19.0% and 50.6%. Software
Emulation Exceptions (SEE) occurred for 15.2% and 7.8%
of the exceptions observed for faults injected in registers
and memory respectively while External Breakpoint
Exceptions (EBRK) occurred for 3.3% and 13.0%. For
Alignment Exceptions (ALE), the corresponding figures
are 9.5% and 1.9%. The remaining 13 exceptions of the
MPC565 were seldom or never triggered.
corresponding figures
4.2. Errors detected by executable assertions
When an error is detected by the FADEC control
software, e.g. when engine parameters exceed fixed or
dynamic bounds,
the controller decides if the error is
negligible or if it should resign control to a backup system
to prevent a critical event. The FADEC prototype software
provides several mechanisms for detecting errors and
collecting status information. Detected errors considered as
severe will trigger at least one of the 17 final executable
assertions visualized in Figure 4, denoted EA1 to EA17
Figure 4. FADEC executable assertions triggered.
Table 2. Executable assertions.
Acronym
EA1, EA2
EA3 - EA5
EA6, EA7
EA8
EA9, EA10
EA11 - EA15
EA16, EA17
Description
Engine operating over limits
Erroneous temperature input
Erroneous speed input
Erroneous pressure input
Erroneous position measurement
Erroneous servo system
Erroneous discrete output
4.3. Critical failures due to faults in memory
Errors in the stack area, the data area and the read-only
data (rodata) area of the SRAM memory were either i)
detected by hardware exceptions or executable assertions
(208 errors), ii) undetected bounded failures (235 errors) or
iii) mission or flight critical failures (71 errors). 65.3% of
the critical failures are due to faults injected into the data
area and the remaining 34.7% of critical failures are due to
faults injected into the read-only data area. No critical
failures were observed for faults injected in the stack area.
A majority of the 71 critical failures observed for faults
injected in memory could be sorted into three groups. A
representative plot of the engine parameters observed for
each group and their causes are presented in the following
paragraphs.
Group 1 - Errors resulting in a lost afterburner. Over
59% (42 experiments) of the observed critical failures
showed a behavior similar to that shown in Figure 5. For at
least 35 of those, a unique boolean used for initialization of
the software changed state and a re-initialization was
performed. The errors in this group resulted in lost
afterburner control, but the control of the core engine was
normal. Afterburner failures are considered mission critical
and not flight critical. As long as the exhaust nozzle area
(A8) is correctly controlled (closed position for operation
at maximum speed) without afterburner,
is
sufficiently high.
thrust
level
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:32 UTC from IEEE Xplore.  Restrictions apply. 
have serious impact on flight safety. Especially during
critical flight phases such as take-off and landing. This
failure was not observed for faults in registers since faults
in the converter mask stored in a register will eventually be
overwritten.
Group 3 - FADEC produced NaN (Not a Number)
double precision floats. In eight experiments, the FADEC
node produced erroneous control outputs which were (or
resulted in) NaN floats. Since arithmetic with NaN floats
will produce more NaN floats (e.g., f1 = f2 + NaN H f1 =
NaN) the error may propagate quickly. Five out of eight
NaN errors were detected by EAs while the remaining
three resulted in flight critical failures. Figure 7 shows the
engine behavior for one of those. Only the Compressor
Variable Geometry (CVG) value stays within reasonable
bounds for normal engine operation. The engine would
probably flame out and important engine parameters such
as fuel flow and engine speed quickly decrease to levels
below ground idle, which is critical in all flight phases.
Figure 7. Behavior due to “Not a Number” floats.
Group 4 – Others. The system behavior for the remaining
14 (19.7%) critical failures can not be visualized by a
representative plot. Seven experiments converged to
nominal behavior within the observed time interval while
seven did not. Eight of these failures are considered flight
critical.
4.4. Critical failures due to faults in registers
Only 0.3% of the faults injected in registers resulted in
critical failures (compared to 3.0% of the faults injected in
memory). Nevertheless, nine mission critical and one flight
critical failure were observed for the register faults. Due to
a design flaw in the commercial debug environment used
for fault injection, only the 32 least significant bits of each
64-bit
register could be reached. This
corresponds to the 32 least significant bits of the mantissa
part of the float. Thus, faults in floating-point data only
cause minor errors which very likely affected the number
of critical failures observed. Different system behavior
floating-point
Figure 5. Error in a boolean resulting in a disabled
afterburner.
Group 2 - Error in read-only data for type conversion.
The source code for the FADEC model prototype is mainly
generated from MATRIXx but an additional software
module is also required. For each control loop, data are
exchanged between the two software modules. Different
data types are currently used in the FADEC model
compared to the additional software module and during
exchange of data between the modules, type conversions
are performed. Type conversions involve using a read-only
converter mask. When it assumes a faulty value due to a
bit-flip, the mask will be permanently corrupted. Thus, this
fault will affect all subsequent boolean-to-float conversions
in the software. In 12 experiments (16.9% of all critical
failures)
fault
injection and since all
subsequent conversions were
affected, the state of the system experienced erroneous
behavior almost identical to that shown in Figure 6.
the converter mask was the target
for
Figure 6. Error in constant used for type
conversion resulting in faulty boolean states.
During the first 4 - 5 s, the exhaust nozzle area (A8) is
too wide, the low pressure turbine speed (NL) too high and
the FVG too closed. In addition to low thrust, the fan is
outside the operating range with risk for stall or resonance.
After 4 s, the afterburner fails to light up and the exhaust
nozzle area (A8) starts to oscillate. All these factors may
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:32 UTC from IEEE Xplore.  Restrictions apply. 
could be observed for each failure and Figure 8 shows the
most severe behavior, a transient engine failure.
Acknowledgements
This work was financed by NFFP (Swedish National
Flight Research Program). We want
to specially thank
ALTIUM LIMITED for sponsoring us with the Tasking
compiler used in this study.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
Figure 8. Register fault directly affecting the core
engine fuel flow (WFM).
is lower
than normal,
After the error has occured, the core engine fuel flow
(WFM)
resulting in too low
compressor outlet pressure (PS3), fan (NL) and compressor
speed (NH). Accordingly,
the guide vanes for the fan
(FVG) and compressor (CVG) are more closed than in the
reference run. After nine seconds, the engine has recovered
and operates correctly. This engine failure is flight critical
for a few seconds during take-off and landing since the
engine response is abnormal.
5. Conclusions
on
engine
executing
controller
We have experimentally evaluated a prototype FADEC
jet
the COTS
microcontroller Motorola MPC565 intended for UAV
applications. Transient
faults were injected into the
FADEC prototype to investigate the efficiency of the
nominal error detection mechanisms. The fault injection
experiments were carried out using a pre-injection analysis
of the assembly code to avoid the injection of non-effective
faults. However, most of the faults were still non-effective
(69.4%) or caused bounded failures having only minor
effect on the UAV (7.0%) in our experiments which
suggests that the FADEC node is to some extent inherently
robust. The hardware exceptions of MPC565 detected
20.1% of the errors while the executable assertions in the
FADEC software detected 1.9%.
Critical failures, which could potentially lead to the loss
of the UAV, were observed for 1.6% of the experiments. A
majority of the critical failures were caused by errors
affecting boolean states in the software, either directly or
indirectly
conversions.
Consequently, special care should be taken how to declare
and use booleans in software.
erroneous
through
type
March
Annual
Twenty-Eighth
http://www.spacedaily.com/news/uav-04a.html, March
18th, 2005.
http://www.air-attack.com/page.php?pid=10,
18th, 2005.
E. Normand, Single event upset at ground level. IEEE
Transactions on Nuclear Science, 1996. 43(6, pt.1): p.
2742-50.
P.E. Dodd, M.R. Shaneyfelt, J.R. Schwank, and G.L.
Hash. "Neutron-induced latchup in SRAMs at ground
level", in International Reliability Physics Symposium.
March 30 - April 4, 2003. Dallas, TX, USA.
J.G. Silva, P. Prata, M. Rela, and H. Madeira.
"Practical issues in the use of ABFT and a new failure
model", in Fault-Tolerant Computing, 1998. Digest of
Papers.
International
Symposium on. 1998.
J.C. Cunha, R. Maia, M.Z. Rela, and J.G. Silva. "A
study of failure models in feedback control systems", in
Proceedings International Conference on Dependable
Systems and Networks. Göteborg, Sweden. 2001.
IEEE-ISTO, The Nexus 5001 Forum™ Standard for a
Global Embedded Processor Debug Interface. 1999: p.
9-10.
J.-C. Ruiz, P. Yuste, P. Gil, and L. Lemus. "On
benchmarking the dependability of automotive engine
control applications",
in Proceedings International
Conference on Dependable Systems and Networks.
June 28 - July 1, 2004. Florence, Italy.
J. Aidemark, J. Vinter, P. Folkesson, and J. Karlsson.
"GOOFI: generic object-oriented fault injection tool",
in
on
Dependable Systems and Networks. Göteborg, Sweden,
2001.
D. Skarin, J. Vinter, P. Folkesson, and J. Karlsson,
Implementation and usage of
the GOOFI MPC565
Nexus fault injection plug-in. Tech. Report No. 04-08,
Dept. of Comp. Eng., Chalmers University of
Technology, Göteborg, Sweden, 2004.
G.C. Messenger, Collection of charge on junction
nodes from ion tracks. IEEE Transactions on Nuclear
Science, 1982. ns-29(6): p. 2024-31.
Motorola, MPC565/MPC566 User's Manual. 2003.
R. Barbosa, J. Vinter, P. Folkesson, and J. Karlsson.
"Assembly-level pre-injection analysis for improving
fault
in Proc. Fifth European
Dependable Computing Conference (EDCC-5). April
2005. Budapest, Hungary.
injection efficiency",
International
Proceedings
Conference
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:32 UTC from IEEE Xplore.  Restrictions apply.