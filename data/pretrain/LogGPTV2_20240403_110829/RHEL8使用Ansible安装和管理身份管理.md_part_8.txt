您可以使用 Ansible playbook 管理 IdM
中的用户。[介绍用户生命周期后](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-life-cycle_managing-idm-users-using-Ansible-playbooks "用户生命周期"){.link}，本章将介绍如何将
Ansible playbook 用于以下操作：
::: itemizedlist
-   [确保存在直接列在 `YML`{.literal}
    文件中的单个用户](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-IdM-user-using-an-Ansible-playbook_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在 IdM 用户"){.link}。
-   [确保存在直接列在](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-multiple-IdM-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在多个 IdM 用户"){.link}
    `YML 文件中的多个用户`{.literal}。
-   [确保存在从 `YML`{.literal} 文件引用的 `JSON`{.literal}
    文件中列出的多个用户](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-multiple-IdM-users-from-a-json-file-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "使用 Ansible playbook 确保存在 JSON 文件中的多个 IdM 用户"){.link}。
-   [确保没有直接在 `YML`{.literal}
    文件中列出的用户](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks "确保没有用户使用 Ansible playbook"){.link}。
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-life-cycle_managing-idm-users-using-Ansible-playbooks}用户生命周期 {.title}
:::
IdM（身份管理）支持三个用户帐户状态：
::: itemizedlist
-   [**阶段用户不允许进行身份验证**]{.strong}。这是初始状态。无法设置活动用户所需的一些用户帐户属性，例如组成员资格。
-   [**活动用户被允许进行身份验证**]{.strong}。所有必需的用户帐户属性都必须设置为此状态。
-   [**保留的用户是以前被视为不活跃且无法向**]{.strong} IdM
    进行身份验证的活动用户。保留的用户保留他们作为活动用户的大多数帐户属性，但它们不属于任何用户组。
:::
[![A flow chart displaying 4 items: Active users - Stage users -
Preserved users - Deleted users. Arrows communicate the relationships
between each kind of user: Active users can be \"preserved\" as
Preserved users. Preserved users can be \"restored\" as Active users.
Preserved users can be \"staged\" as Stage users and Stage users can be
\"activated\" into Active users. All users can be deleted to become
\"Deleted
users\".](images/84_RHEL_IdM_0420_life-cycle.png)]{.inlinemediaobject}
您可以从 IdM 数据库永久删除用户条目。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
删除的用户帐户无法恢复。当您删除用户帐户时，与帐户相关的所有信息都将永久丢失。
:::
新管理员只能由具备管理员权限的用户创建，如默认的 admin
用户。如果您意外删除所有管理员帐户，目录管理器必须在 Directory
服务器中手动创建新管理员。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不要删除 `admin`{.literal} 用户。由于 `admin`{.literal} 是 IdM
所需的预定义用户，因此此操作会导致某些命令出现问题。如果要定义和使用备选
admin 用户，请在为至少一个其他用户授予 `admin`{.literal}
权限后，`使用 ipa user-disable admin`{.literal} 来禁用预定义的 admin
用户。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不要将本地用户添加到
IdM。在解析本地用户和组前，名称服务切换(NSS)总是解析 IdM
用户和组。这意味着 IdM 组成员资格不适用于本地用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-IdM-user-using-an-Ansible-playbook_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在 IdM 用户 {.title}
:::
以下流程描述了确保使用 Ansible playbook 在 IdM 中存在用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理器密码。
-   [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包安装在 Ansible 控制器上。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要确保的 IdM
    中存在的用户数据。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/add-user.yml`{.literal}
    文件中的示例。例如，创建名为 [*idm_user*]{.emphasis} 的用户并添加
    [*Password123*]{.emphasis} 作为用户密码：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Create user idm_user
        ipauser:
          ipaadmin_password: MySecret123
          name: idm_user
          first: Alice
          last: Acme
          uid: 1000111
          gid: 10011
          phone: "+555123457"
          email: PI:EMAIL
          passwordexpiration: "2023-01-19 23:59:59"
          password: "Password123"
          update_password: on_create
    ```
    您必须使用以下选项来添加用户：
    ::: itemizedlist
    -   [**name**]{.strong} ：登录名称
    -   [**首先**]{.strong} ：第一个名称字符串
    -   [**最后**]{.strong} ：姓氏字符串
    :::
    有关可用用户选项的完整列表，请参阅
    `/usr/share/doc/ansible-freeipa/README-user.md`{.literal} Markdown
    文件。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用 `update_password: on_create`{.literal} 选项，Ansible
    仅在创建用户时创建用户密码。如果已使用密码创建了用户，Ansible
    不会生成新的密码。
    :::
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-IdM-user.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证 IdM
    中是否存在新用户帐户：
    ::: orderedlist
    1.  以 admin 用户身份登录 `ipaserver`{.literal} ：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  为 admin 请求 Kerberos ticket：
        ``` literallayout
        $ kinit admin
        Password for PI:EMAIL:
        ```
    3.  请求有关 [*idm_user*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user
          User login: idm_user
          First name: Alice
          Last name: Acme
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-multiple-IdM-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在多个 IdM 用户 {.title}
:::
以下流程描述了确保使用 Ansible playbook 在 IdM 中存在多个用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理器密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要在 IdM
    中确保存在的用户的数据。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-users-present.yml`{.literal}
    文件中的示例。例如，要创建用户
    [*idm_user_1[]{.emphasis}、idm_user_2*]{.emphasis} 和
    [*idm_user_3*]{.emphasis}，并添加 [*Password123*]{.emphasis}
    作为密码 [*idm_user_1*]{.emphasis} ：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Create user idm_users
        ipauser:
          ipaadmin_password: MySecret123
          users:
          - name: idm_user_1
            first: Alice
            last: Acme
            uid: 10001
            gid: 10011
            phone: "+555123457"
            email: PI:EMAIL
            passwordexpiration: "2023-01-19 23:59:59"
            password: "Password123"
          - name: idm_user_2
            first: Bob
            last: Acme
            uid: 100011
            gid: 10011
          - name: idm_user_3
            first: Eve
            last: Acme
            uid: 1000111
            gid: 10011
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果没有指定 [**update_password: on_create**]{.strong} 选项，Ansible
    每次运行 playbook 时都会重新设置用户密码：如果用户自上次运行
    playbook 起更改了密码，则 Ansible 重新设置密码。
    :::
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-users.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证用户帐户是否存在于 IdM
    中：
    ::: orderedlist
    1.  以管理员身份登录到 `ipaserver`{.literal} ：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  显示有关 [*idm_user_1*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user_1
          User login: idm_user_1
          First name: Alice
          Last name: Acme
          Password: True
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-multiple-IdM-users-from-a-json-file-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在 JSON 文件中的多个 IdM 用户 {.title}
:::
以下流程描述了如何使用 Ansible playbook 确保在 IdM
中存在多个用户。用户存储在 `JSON`{.literal} 文件中。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理器密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建包含必要任务的 Ansible playbook
    文件。使用您要确保存在的用户数据引用 `JSON`{.literal}
    文件。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/ensure-users-present-ymlfile.yml`{.literal}
    文件中的示例：