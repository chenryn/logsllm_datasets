X-Upload-Content-Length ：设置为在后续请求中传输的上传数据的字节数。如果在此请
求时⻓度未知，则可以省略此标头。 
Content-Type ：如果提供元数据，则根据元数据的数据类型设置。 
Content-Length ：设置为此初始请求的正⽂中提供的字节数。如果您使⽤分块传输编码，
则不需要。 
更多内容请参阅 API 参考，了解每种⽅法的可接受数据MIME 类型列表和上传⽂件的⼤⼩限制。 
下⾯的示例显示了 Drive API 的分段上传请求。 
注意：对于没有元数据的初始可恢复更新请求，请将请求正⽂留空，并将  Content-Length 标头设
置为 0。 
如果会话发起请求成功，API 服务器会返回 200 OK HTTP 状态码。此外，它还提供了⼀个 
Location 标头，⽤于指定可恢复会话 URI。Location 标头（如下例所示）包含⼀个 upload_id 查
询参数部分，该部分提供⽤于此会话的唯⼀上传 ID。 
●
●
●
4.3.2 保存可恢复会话 URL 
C#
复制代码
POST /upload/drive/v3/files?uploadType=resumable HTTP/1.1
Host: www.googleapis.com
Authorization: Bearer your_auth_token
X-Upload-Content-Type: application/octet-stream
Content-Type: application/json; charset=UTF-8
{
  "name": "MyFile.txt"
}
1
2
3
4
5
6
7
8
9
16
响应中的 Location 就是要使⽤的会话 URL 
要上传⽂件，请向您在上⼀步中获取的上传 URI 发送 PUT 请求。上传请求的格式为： 
发出可恢复⽂件上传请求时使⽤的 HTTP 标头包括 Content-Length。将此设置为您在此请求中
上传的字节数，通常是上传⽂件的⼤⼩。 
顺利的话，⽂件就上传成功了。 
如果上传请求在收到响应之前被终⽌了，或者收到的响应是  Http 503 Service Unavailable ，
这种情况下则需要恢复中断的上传。当然你想重新传也就不说你了。 
4.3.3 上传⽂件 
4.4 恢复中断的上传 
C#
复制代码
HTTP/1.1 200 OK
X-GUploader-UploadID: 
ADPycduZG09xS2QEPGcpK56akP854bIgImU8tuADltGvy9OAf7Z21tOsJI00tmN8_LPiQCOo_
sh4x_dLSlMAX1hkrgI
Vary: Origin,X-Origin
Pragma: no-cache
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; 
ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443"; 
ma=2592000,quic=":443"; ma=2592000; v="46,43"
Content-Length: 0
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Content-Type: text/plain; charset=utf-8
Date: Tue, 29 Mar 2022 03:35:47 GMT
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Location: https://www.googleapis.com/upload/drive/v3/files?
uploadType=resumable&upload_id=ADPycduZG09xS2QEPGcpK56akP854bIgImU8tuADlt
Gvy9OAf7Z21tOsJI00tmN8_LPiQCOo_sh4x_dLSlMAX1hkrgI
Server: UploadServer
1
2
3
4
5
6
7
8
9
10
11
12
C#
复制代码
PUT session_uri
1
17
恢复中断的上传的步骤包括： 
1.
状态查询 ：通过向会话 URL发出⼀个 PUT 请求来查询所传⽂件的当前状态 
2.
获取上传的字节数 ：处理来⾃状态查询的响应 
3.
上传剩余数据 ：在获取已上传的字节数之后，重新读取⽂件，获取后续内容继续上传 
PS：获取当前所传输⽂件的状态，这个数据也可以⽤来展示上传进度。 
对于此请求，HTTP 标头应包含⼀个  Content-Range 标头，指示⽂件中的当前位置未知。例
如，如果要上传的⽂件总⻓度为 2,000,000，请将 Content-Range 设置为  */2000000 。如果不
知道⽂件的⼤⼩，则请将 Content-Range 设置为  */* 。 
这个数是获取 4.4.1 的响应得到的。
通过以下请求发送⽂件的剩余字节（从 43bytes 开始）来恢复上传。 
4.4.1 状态查询 
4.4.2 获取上传的字节数
4.4.3 上传剩余数据 
C#
复制代码
PUT {session_uri} HTTP/1.1
Content-Length: 0
Content-Range: bytes */2000000
1
2
3
C#
复制代码
HTTP/1.1 308 Resume Incomplete
Content-Length: 0
Range: 0-42
1
2
3
18
0x05 代码实现上传功能 
5.1 获取 Access Token 实现 
C#
复制代码
PUT {session_uri} HTTP/1.1
Content-Length: 1999957
Content-Range: bytes 43-1999999/2000000
bytes 43-1999999
1
2
3
4
5
19
5.2 上传功能实现 
C#
复制代码
/// 
/// 通过刷新令牌获取新的访问令牌
/// 
static string GetAccessToken()
{
    string token = string.Empty;
    string url = "https://accounts.google.com/o/oauth2/token";
    string httpBody = string.Format("refresh_token={0}&client_id=
{1}&client_secret={2}&grant_type=refresh_token",
                                    HttpUtility.UrlEncode(refresh_token),
                                    HttpUtility.UrlEncode(client_id),
                                    HttpUtility.UrlEncode(client_secret)
                                   );
    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
    request.Method = "POST";
    request.ContentType = "application/x-www-form-urlencoded";
    using (var writer = new StreamWriter(request.GetRequestStream()))
    {
        writer.Write(httpBody);
    }
    HttpWebResponse response = (HttpWebResponse)request.GetResponse();
    using (var reader = new StreamReader(response.GetResponseStream()))
    {
        string result = reader.ReadToEnd();
        token = Options.JosnDictionary(result)["access_token"];
    }
    return token;
}
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
20
C#
复制代码
// GoogleDrive API URL ⼊⼝点列表
static Hashtable driveAPI = new Hashtable() {
    {"uploadFile", "https://www.googleapis.com/upload/drive/v3/files/?
uploadType=resumable" },
};
public void ResumableUploadFile(string upload_id, byte[] data)
{
    // 这⾥也可以直接传⼊ Location 的值。
    string url = driveAPI["uploadFile"].ToString() + $"&upload_id=
{upload_id}";
    webClient.Headers["Content-Type"] = "application/octet-stream";
    try
    {
        byte[] responseArray = webClient.UploadData(url, "PUT", data);
        Console.WriteLine(Encoding.UTF8.GetString(responseArray));
    }
    catch (WebException ex)
    {
        HttpWebResponse responseEx = ex.Response as HttpWebResponse;
        using (var reader = new 
StreamReader(responseEx.GetResponseStream()))
        {
            string result = reader.ReadToEnd();
            Console.WriteLine("Exception: {0}", result);
        }
    }
}
public string GetUploadID(string filename)
{
    string upload_id = string.Empty;
    webClient.Headers["Content-Type"] = "application/json; charset=UTF-
8";
    webClient.Headers["X-Upload-Content-Type"] = "application/octet-
stream";
    string body = $@"
{{
""name"": ""{filename}"",
""description"": ""Stuff about the file""
}}
";
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
21
后续的恢复中断的上传部分就不展示了。⾃⾏发挥即可 
使⽤ OAuth 2.0 访问 Google API 
授权 
上传⽂件 
https://developers.google.com/drive/api/v2/reference/files/insert#examples 
https://github.com/advanced-rest-client/api-resource-example-
document/blob/master/demo/google-drive-api/docs/upload-files.md 
0x06 参考
    try
    {
        byte[] responseArray = 
webClient.UploadData(driveAPI["uploadFile"].ToString(), 
Encoding.UTF8.GetBytes(body));
        WebHeaderCollection webHeaderCollection = 
webClient.ResponseHeaders;
        foreach (var header in webHeaderCollection.AllKeys)
        {
            if (header.Equals("X-GUploader-UploadID"))
                upload_id = webHeaderCollection.Get(header); break;
        }
    }
    catch (WebException ex)
    {
        HttpWebResponse responseEx = ex.Response as HttpWebResponse;
        using (var reader = new 
StreamReader(responseEx.GetResponseStream()))
        {
            string result = reader.ReadToEnd();
            Console.WriteLine("Exception: {0}", result);
        }
    }
    return upload_id;
}
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62