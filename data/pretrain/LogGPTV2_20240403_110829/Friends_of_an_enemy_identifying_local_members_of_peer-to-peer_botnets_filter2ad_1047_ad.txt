l
l
a
c
e
R
0
5
(cid:5)
(cid:6)(cid:5)
(cid:5)
C
0
(cid:6)
(cid:6)
B−1−C
C
B−1
C
pe = 1 −
(1)
Bot-edge probabilities are plotted in Figure 6(a).
It is
observed that, similar to the Birthday Paradox, as the num-
ber of contacted peers increases, the bot-edge probability
increases very rapidly. Consequently, even for a fairly large
botnet with 50k peers, the bot-edge probability is almost
0.5 when peers contact only 200 other peers during the ob-
servation window.
Bot-Edge Capacity: Although, high bot-edge probabili-
ties works in favor of the dye-pumping algorithm, the capac-
ities of those edges are also important. It is obvious that, the
higher the bot-edge capacities the better the dye-pumping
algorithm performs.
In the random peer selection model,
(cid:5)
the probability of a peer contacted by two given peers is
write the expected capacity of bot edges (E[Cp]) as:
(cid:6)2. Therefore, since there are B peers in total, we can
C
B
(cid:7)
(cid:8)2
2
C
B
B = C
B
E[Cp] =
(2)
which is also the expected value of the corresponding hy-
pergeometric distribution. Figure 6(b) plots the expected
bot-edge probabilities. It is observed that, regardless of the
botnet size, expected bot-edge capacity rapidly exceeds 1
and continues to increase as the number of contacted peers
increases. Figure 6 suggests that the members of a P2P bot-
net will most probably be well connected with each other
on a private mutual-contacts graph through high capacity
137
To understand the structure of the subgraph formed by
members of a P2P botnet on a mutual-contacts graph, sup-
pose that there are m bots in the network, and therefore
the corresponding m nodes on the graph. Let the set X =
{X1, X2, ..., Xm} denote these nodes and pe denote the prob-
ability of having an edge between any given Xi and Xj, for
i (cid:5)= j where 1 ≤ i ≤ m and 1 ≤ j ≤ m. Since pe is the
same for any pair of Xi and Xj, the subgraph formed by
the nodesX1, X2, ..., Xm on a private mutual-contacts graph
is an Erdős-Rényi random graph [11][12], where each possi-
ble edge in the graph appears with equal probability.
One interesting property shown by Erdős and Rényi is
that, Erdős -Rényi graphs have a sharp threshold of edge-
probability for graph connectivity [12]. More speciﬁcally,
if the edge-probability is greater than the threshold then
almost all of the graphs produced by the model will be con-
nected. Erdős and Rényi have shown the sharp connectivity
threshold is ln θ
θ , where θ is the number of nodes in the
graph. Therefore, if the bot-edge probability of a P2P bot-
net is pe = ln m
m , then the dye-pumping algorithm potentially
identiﬁes all other P2P bots from a given seed bot with high
probability as long as there are more than m bots in the net-
work. In other words, it gets easier for the proposed method
to reveal P2P bots as the botmaster infects more hosts in the
network. However, even if the bot-edge probability is below
the threshold, the dye-pumping algorithm can still identify
some of the P2P bots, which happen to be connected to the
seed node on the private mutual-contacts graph.
In conclusion, according to the random peer selection model,
members of a P2P botnet are expected to be closely con-
nected to each other on a private mutual contacts graph
despite large botnet sizes.
(cid:3)
(cid:22)
(cid:31)
(cid:2)
(cid:1)
(cid:36)
(cid:34)
(cid:25)
(cid:27)
(cid:25)
(cid:1)
(cid:19)
(cid:18)
(cid:19)
(cid:30)
(cid:32)
(cid:17)
(cid:22)
(cid:24)
(cid:21)
(cid:15)
(cid:1)
(cid:30)
(cid:13)
(cid:34)
(cid:6)
(cid:5)(cid:4)(cid:11)
(cid:5)(cid:4)(cid:10)
(cid:5)(cid:4)(cid:8)
(cid:5)(cid:4)(cid:7)
(cid:5)
(cid:1)
(cid:5)
(cid:1)
(cid:13)(cid:12)(cid:9)(cid:5)(cid:26)
(cid:13)(cid:12)(cid:6)(cid:5)(cid:5)(cid:26)
(cid:13)(cid:12)(cid:7)(cid:9)(cid:5)(cid:26)
(cid:13)(cid:12)(cid:9)(cid:5)(cid:5)(cid:26)
50
100
0.2
0.15
0.1
0.05
0
0
(cid:3)
(cid:21)
(cid:34)
(cid:16)
(cid:17)
(cid:20)
(cid:2)
(cid:1)
(cid:40)
(cid:37)
(cid:29)
(cid:24)
(cid:22)
(cid:34)
(cid:22)
(cid:16)
(cid:1)
(cid:26)
(cid:28)
(cid:25)
(cid:17)
(cid:1)
(cid:37)
(cid:33)
(cid:15)
(cid:1)
(cid:4)
(cid:34)
(cid:39)
(cid:17)
(cid:13)(cid:5)
(cid:12)(cid:5)
(cid:11)(cid:5)
(cid:10)(cid:5)
(cid:9)(cid:5)
(cid:8)(cid:5)
(cid:7)(cid:5)
(cid:6)(cid:5)
(cid:5)
(cid:1)
5
4
3
2
1
0
(cid:9)(cid:5)(cid:5)
(cid:16)(cid:35)(cid:28)(cid:19)(cid:22)(cid:32)(cid:1)(cid:30)(cid:23)(cid:1)(cid:17)(cid:22)(cid:22)(cid:32)(cid:33)(cid:1)(cid:14)(cid:30)(cid:29)(cid:34)(cid:18)(cid:20)(cid:34)(cid:22)(cid:21)(cid:1)(cid:2)(cid:14)(cid:3)
(cid:6)(cid:5)(cid:5)(cid:5)
(cid:6)(cid:9)(cid:5)(cid:5)
(cid:7)(cid:5)(cid:5)(cid:5)
(cid:15)(cid:14)(cid:10)(cid:5)(cid:30)
(cid:15)(cid:14)(cid:6)(cid:5)(cid:5)(cid:30)
(cid:15)(cid:14)(cid:7)(cid:10)(cid:5)(cid:30)
(cid:15)(cid:14)(cid:10)(cid:5)(cid:5)(cid:30)
(cid:1)
102
103
(cid:6)(cid:5)(cid:7)
(cid:6)(cid:5)(cid:8)
(cid:18)(cid:38)(cid:31)(cid:23)(cid:26)(cid:35)(cid:1)(cid:33)(cid:27)(cid:1)(cid:19)(cid:26)(cid:26)(cid:35)(cid:36)(cid:1)(cid:16)(cid:33)(cid:32)(cid:37)(cid:22)(cid:24)(cid:37)(cid:26)(cid:25)(cid:1)(cid:2)(cid:16)(cid:3)
(a) Bot-Edge probability
(b) Expect.value of bot-edge
capacity
Figure 6: Properties of random peer selection model
for diﬀerent botnet sizes (B) and diﬀerent number of
contacted peers (C) are plotted in Figure 6(a). Solid
lines indicate the theoretical computation and the
stars point the empirical estimation. Inner ﬁgures
magniﬁes the region where 0 < C < 100
5. LIMITATIONS AND POTENTIAL
IMPROVEMENTS
The proposed method is able to identify P2P bots in a net-
work as long as they are clustered through short and high
capacity paths on a private mutual-contacts graph. There-
fore, botmasters need to disturb this clustering structure in
order to evade the proposed method. In this section, we re-
view these possible evasion strategies, and their implications
on the creation and maintenance of P2P botnets.
Eliminating Private Mutual-Contacts: One way to elim-
inate private mutual contacts is by increasing the popular-
ity of private mutual-contacts that P2P bots in a network
communicate with.
If their popularity gets higher than
the privacy threshold (k), they will be omitted by the pro-
posed scheme and will not result in edges in private mutual-
contacts graphs. However, in order to achieve this, a bot-
master has to control more than k hosts in that particular
network, so that they can collectively boost a contact’s pop-
ularity beyond the privacy threshold. To defend against this
strategy, the privacy threshold (k) needs to be set as large as
possible. Although, as discussed in Section 3, high k values
impairs the recall performance of the proposed scheme, for
smaller networks it is often possible to ﬁnd an appropriate k
value since a botmaster is unlikely to have too many bots in a
small network. On the other hand, for large networks which
potentially contain many P2P bots, the proposed technique
can be applied on smaller subnets separately and indepen-
dently to increase the likelihood that the number of P2P
bots in each subnet remain below the privacy threshold.
Decreasing The Probability of Mutual-Contacts: De-
creasing the probability of observing mutual-contacts be-
tween P2P bots is equivalent to decreasing the bot-edge
probability (pe). As discussed in Section 4, a botmaster has
to either(or both) increase the botnet size (B) or decrease
the number of peers that each bot communicates with (C) in
order to lower pe. It is clear that increasing B and decreas-
ing C will inversely aﬀect a P2P botnet’s robustness and
eﬃciency. Although it may be possible for a botmaster to
pull pe down to a lower value, we observed in a controlled en-
vironment that peers of today’s botnets such as Storm and
Waledac have very high bot-edge probabilities. To collect
data for Storm and Waledac, we infected two Pentium IV,
512MB RAM Windows XP hosts, which were completely
isolated from the rest of the network by a ﬁrewall. The
ﬁrewall was also set to block all SMTP traﬃc to prevent
any spam traﬃc. We observe that both Storm and Waledac
communicate with fairly high number of unique peers dur-
ing 24 hours, and therefore create many mutual-contacts as
presented in Table 1. On the contrary, Nugache peers are
less active and create far less mutual-contacts as observed
in Table 1. Nevertheless, in Section 3, the proposed scheme
is shown to successfully detect several Nugache peers, which
are introduced to the network using the crawler data, de-
spite their low communication activities. To collect data
for Nugache, the bots were installed on a Pentium IV, 1GB
RAM, running VMware Server with a Windows XP guest,
as well as on bare metal machines on comparable hardware
running Windows XP. The traces were captured within the
protected network using a customized honeywall [32] and
also using full-packet capture on an extrusion prevention
system running OpenBSD with strict packet ﬁlter rules, as
described in [10] The captured packets were converted to
ﬂow records using the SiLK tools [4] for establishing mutual
contact sets and validating the algorithm.
Table 1: Summary of observed P2P botnet behavior.
Δ : Average number of unique IP addresses that a
bot communicates with each day. (cid:8) : the number of
mutual-contacts (the bot-edge capacities) between
the two bots during 24 hours.
Day 1
(cid:8)
Δ
2861
5180
341
1145
45
0
Day 2
(cid:8)
Δ
2886
4681
300
775
53
1
Day 3
(cid:8)
Δ