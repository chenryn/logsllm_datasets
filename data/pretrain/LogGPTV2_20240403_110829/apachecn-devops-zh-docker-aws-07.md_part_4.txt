    Description: ECS Amazon Machine Image (AMI) ID
  ApplicationSubnets:
    Type: List
    Description: Target subnets for EC2 instances
  VpcId:
 Type: AWS::EC2::VPC::Id
 Description: Target VPC
Resources:
  ApplicationAutoscalingSecurityGroup:
 Type: AWS::EC2::SecurityGroup
 Properties:
 GroupDescription: !Sub ${AWS::StackName} Application Autoscaling Security Group
 VpcId: !Ref VpcId
 SecurityGroupIngress:
 - IpProtocol: tcp
 FromPort: 22
 ToPort: 22
 CidrIp: 0.0.0.0/0
 SecurityGroupEgress:
 - IpProtocol: udp
 FromPort: 53
 ToPort: 53
 CidrIp: 0.0.0.0/0
 - IpProtocol: tcp
 FromPort: 80
 ToPort: 80
 CidrIp: 0.0.0.0/0
 - IpProtocol: tcp
 FromPort: 443
 ToPort: 443
 CidrIp: 0.0.0.0/0
...
...
```
Defining an EC2 Security Group
在前面的示例中，您允许入站 SSH 访问您的实例，并允许您的实例访问互联网上的 DNS、HTTP 和 HTTPS 资源。这不是最安全的安全组配置，在生产用例中，至少，您会限制 SSH 对内部管理地址的访问，但是为了保持简单和便于演示，您配置了一组相当宽松的安全规则。
请注意，您还定义了一个名为 VPC 标识的新参数，它指定了将在其中创建安全组的 VPC 的标识，您可以使用`aws ec2 describe-vpcs`命令来获取默认情况下在您的 AWS 帐户中创建的默认 VPC 的标识:
```
> aws ec2 describe-vpcs
{
    "Vpcs": [
        {
            "CidrBlock": "172.31.0.0/16",
            "DhcpOptionsId": "dopt-a037f9d8",
            "State": "available",
            "VpcId": "vpc-f8233a80",
            "InstanceTenancy": "default",
            "CidrBlockAssociationSet": [
                {
                    "AssociationId": "vpc-cidr-assoc-32524958",
                    "CidrBlock": "172.31.0.0/16",
                    "CidrBlockState": {
                        "State": "associated"
                    }
                }
            ],
            "IsDefault": true
        }
    ]
}
```
Determining your VPC ID
一旦您有了正确的 VPC 身份证值，您需要更新您的`dev.cfg`文件，以包括`VpcId`参数和值:
```
ApplicationDesiredCount=1ApplicationImageId=ami-ec957491
ApplicationSubnets=subnet-a5d3ecee,subnet-324e246f
VpcId=vpc-f8233a80
```
Configuring the VpcId parameter in dev.cfg A more scalable approach to looking up the physical identifiers of external resources that your stack has dependencies on is to use a feature referred to as CloudFormation exports, which allow you to export data about a resource to other stacks. For example, you might define all of your networking resources in a stack called network-resources, and then configure a CloudFormation export that exports the VPC ID of VPC resources created by that stack. These exports can then be referenced in other CloudFormation stacks by using the `Fn::ImportValue` intrinsic function. See [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html) for more details on this approach.
# 部署和测试 ECS 集群
现在，您已经完成了云信息模板的配置，现在是时候部署您在上一节中所做的更改了。回想一下，您创建了一个名为`dev.cfg`的单独配置文件来存储每个栈参数的值。以下示例演示了如何使用`aws cloudformation deploy`命令部署更新的栈并引用输入参数值:
```
> aws cloudformation deploy --template-file stack.yml \
 --stack-name todobackend --parameter-overrides $(cat dev.cfg) \
 --capabilities CAPABILITY_NAMED_IAM
Waiting for changeset to be created..
Waiting for stack create/update to complete
Successfully created/updated stack - todobackend
```
Deploying a CloudFormation Stack with parameter overrides
在前面的示例中，您使用`--parameter-overrides`标志来指定模板期望的每个参数的值。您不必每次都手动键入这些内容，只需使用 bash 替换并列出本地`dev.cfg`文件的内容，该文件以正确的格式表示每个参数名称和值。
还要注意，因为您的云信息栈现在包括 IAM 资源，所以您必须用值`CAPABILITY_IAM`或`CAPABILITY_NAMED_IAM`指定`--capabilities`标志。当您这样做的时候，您承认 CloudFormation 将代表您创建 IAM 资源，并且您授予了权限。虽然在创建命名 IAM 资源的时候只需要指定`CAPABILITY_NAMED_IAM`值(我们没有)，但是我发现总是引用这个值只是更通用，更不容易出错。
假设您的模板没有配置错误，您的栈应该会成功部署，如果您浏览到 AWS 控制台中的 CloudFormation 并选择 todobackend 栈，您可以查看栈部署期间发生的各种事件:
![](img/236fe068-06d9-4685-862c-a553d2b7494c.png)
Viewing CloudFormation deployment status
在前面的截图中，您可以看到 CloudFormation 在`20:18:56`开始创建自动缩放组，然后一分半钟后，在`20:20:39`从自动缩放组中的单个 EC2 实例接收到成功信号。这符合接收所需实例数的创建策略标准，并且栈更新成功完成。
此时，您的 ECS 集群应该有一个已注册并处于活动状态的 ECS 容器实例，您可以使用`aws ecs describe-cluster`命令来验证这一点:
```
> aws ecs describe-clusters --cluster todobackend-cluster
{
    "clusters": [
        {
            "clusterArn": "arn:aws:ecs:us-east-1:385605022855:cluster/todobackend-cluster",
            "clusterName": "todobackend-cluster",
 "status": "ACTIVE",
 "registeredContainerInstancesCount": 1,
            "runningTasksCount": 0,
            "pendingTasksCount": 0,
            "activeServicesCount": 0,
            "statistics": []
        }
    ],
    "failures": []
}
```
Verifying an ECS cluster
在前面的示例中，您可以看到 ECS 集群只有一个注册的 ECS 容器实例，并且集群的状态为“活动”，这意味着您的 ECS 集群已经准备好运行您的 ECS 任务和服务。
您还可以通过导航到 EC2 控制台并从左侧菜单中选择自动缩放组来验证 EC2 自动缩放组是否已正确创建:
![](img/2447a1eb-c0bf-4d72-871f-0473731f994e.png)
Verifying EC2 Auto Scaling Groups
在上一个截图中，请注意您的自动缩放组的名称包括栈名称(`todobackend`)、逻辑资源名称(`ApplicationAutoscaling`)和随机字符串值(`XFSR1DDVFG9J`)。这说明了 cloud information 的一个重要概念——如果您没有显式命名您的资源(假设资源具有`Name`或等效属性)，那么 cloud information 将附加一个随机字符串，以确保资源被唯一命名。
如果您已经遵循并配置了您的栈，没有任何错误，那么您的云信息栈应该会成功部署，如前面的截图所示。很有可能，对于一个大约有 150 行配置的云信息模板，您可能会出错，并且您的云信息部署将会失败。如果您确实遇到了问题并且无法解决部署问题，请参考此 GitHub URL 作为参考:[https://GitHub . com/docker-in-AWS/docker-in-AWS/blob/master/ch7/todobackend-AWS](https://github.com/docker-in-aws/docker-in-aws/blob/master/ch7/todobackend-aws)
# 摘要
在本章中，您学习了如何创建一个 ECS 集群，包括一个 EC2 自动扩展组和基于自定义 Amazon 机器映像的 ECS 容器实例，使用基础架构即代码的方法使用 CloudFormation 定义所有资源。
您已经了解了 ECS 集群是如何简单地由 ECS 容器实例组成的逻辑分组，并且由管理 EC2 实例集合的 EC2 自动扩展组组成。EC2 自动缩放组可以动态地向上和向下缩放，您将 EC2 自动缩放启动配置附加到您的自动缩放组，该组提供了应用于添加到组中的每个新 EC2 实例的设置的公共集合。
cloud information 提供了强大的功能来确保您的自动缩放组中的实例被正确初始化，并且您学习了如何配置用户数据来调用您在自定义机器映像中安装的 cloud information 帮助器脚本，这些脚本随后下载 CloudFormation Init 元数据中定义的可配置初始化逻辑，该元数据附加到您的启动配置资源中。一旦云信息初始化过程完成，助手脚本向云信息发出初始化过程成功或失败的信号，并且您为您的自动缩放组配置了一个创建策略，该策略定义了为使整个自动缩放组资源被认为是健康的，必须报告成功的所需实例数。
接下来，您将 IAM 实例配置文件和安全组附加到您的启动配置中，确保您的 ECS 容器实例具有与 ECS 服务交互、从 ECR 下载映像、将日志发布到 CloudWatch 日志以及与相关 AWS API 端点通信的必要权限。
有了核心的自动扩展组、启动配置和其他支持资源，您成功地使用云信息部署了集群，建立了运行 ECS 任务和服务所需的必要基础架构基础。在下一章中，您将在此基础上进行构建，扩展您的 CloudFormation 模板来定义 ECS 任务定义、ECS 服务以及部署完整的端到端应用环境所需的其他支持资源。
# 问题
1.  对/错:EC2 自动缩放组允许您为每个实例定义一个固定的 IP 地址。
2.  EC2 用户数据需要应用什么类型的编码？
3.  如何在您的云信息模板中引用当前的 AWS 区域？
4.  对/错:`Ref`内在函数只能引用云信息模板中的资源。
5.  当使用 CloudFormation Init 元数据时，您需要在您的 EC2 实例上运行哪两个助手脚本？
6.  您正在尝试使用亚马逊发布的标准 ECS 优化的 AMI 创建 EC2 自动扩展组和 ECS 集群，但是您收到错误，表明没有实例注册到目标 ECS 集群，即使云信息报告自动扩展组已经创建。你如何解决这个问题？
7.  对/错:`aws cloudformation create`命令用于部署和更新云信息栈。
8.  您试图在没有默认互联网路由的专用子网中部署一个 ECS 群集，但是群集中的 ECS 容器实例无法注册到 ECS。对此最可能的解释是什么？
# 进一步阅读
有关本章所涵盖主题的更多信息，您可以查看以下链接:
*   CloudFormation EC2 自动缩放组资源参考:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/AWS-properties-as-group . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html)
*   CloudFormation EC2 自动扩展启动配置资源参考:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/AWS-properties-as-Launch config . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html)
*   CloudFormation IAM 实例配置文件资源参考:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/AWS-Resource-IAM-Instance Profile . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html)
*   CloudFormation IAM 角色资源参考:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/AWS-Resource-IAM-Role . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html)
*   CloudFormation EC2 安全组资源参考:[https://docs . AWS . Amazon . com/AWS cloud information/last/user guide/AWS-properties-EC2-Security-Group . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html)
*   支持的亚马逊 ECS API 资源级权限操作:[https://docs . AWS . Amazon . com/Amazon ECS/latest/developer guide/ECS-支持-iam-actions-resources.html](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-supported-iam-actions-resources.html)
*   cloud information Helper Scripts:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/cfn-Helper-Scripts-reference . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-helper-scripts-reference.html)
*   CloudFormation Init 元数据参考:[https://docs . AWS . Amazon . com/AWS cloud information/latest/user guide/AWS-resource-Init . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html)
*   云信息创建策略属性:[https://docs . AWS . Amazon . com/AWS cloudinformation/latest/user guide/AWS-Attribute-Creation Policy . html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html)