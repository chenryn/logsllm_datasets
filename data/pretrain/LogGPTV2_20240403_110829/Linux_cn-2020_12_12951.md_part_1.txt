---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 9921
date: '2020-12-24 16:45:16'
editorchoice: false
excerpt: Brian J. Fox 讲述了他在自由软件基金会的工作，他需要创建一个自由的 Bourne shell 版本。它必须兼容但不使用任何原始源代码的元素。这个 Bourne-Again Shell，即 Bash。
fromurl: https://www.redhat.com/en/command-line-heroes/season-3/heroes-in-a-bash-shell
id: 12951
islctt: true
largepic: /data/attachment/album/202012/24/164517puraibr9z9gtbwzb.png
permalink: /article-12951-1.html
pic: /data/attachment/album/202012/24/164517puraibr9z9gtbwzb.png.thumb.jpg
related:
- displayorder: 0
  raid: 12909
- displayorder: 0
  raid: 13027
reviewer: acyanbird, wxy
selector: bestony
summary: Brian J. Fox 讲述了他在自由软件基金会的工作，他需要创建一个自由的 Bourne shell 版本。它必须兼容但不使用任何原始源代码的元素。这个 Bourne-Again Shell，即 Bash。
tags:
- Bash
- 代码英雄
thumb: false
title: 《代码英雄》第三季（6）：Bash Shell 中的英雄
titlepic: true
translator: JonnieWayy
updated: '2020-12-24 16:45:16'
---

### 什么是《代码英雄》

《代码英雄》是由红帽公司精心制作的原创音频播客系列，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。该播客邀请了来自谷歌、NASA 等重量级企业的众多技术专家，共同讲述开源、操作系统、容器、DevOps 和混合云等发展过程中的动人故事。

![](/data/attachment/album/202012/24/164517puraibr9z9gtbwzb.png)

本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客《代码英雄》第三季（6）：Bash Shell 中的英雄的音频脚本。

### 导语

Shell 使得大规模 IT 成为可能，它们是现代计算的必要组成部分。然而，如果没有自由软件基金会的一位名叫 Brian Fox 的开发者的辛勤工作，这一切可能不会成为现实。如今，几乎每台电脑上都有 Bash shell。

在上世纪 70 年代，贝尔实验室希望将重复且复杂的命令序列自动化。Chet Ramey 描述了贝尔实验室是如何开发出多个 shell 的，但 UNIX 只能有一个官方支持的 shell。最终，Bourne shell 被选中。尽管它是当时最好的 shell，但它也有局限性，并且只能在受限的 UNIX 许可证下使用。Brian J. Fox 在自由软件基金会工作时，需要创建一个自由的 Bourne shell 版本。它必须兼容但不使用任何原始源代码的元素。这个被称为 Bourne-Again Shell（Bash）的软件可能是地球上使用最广泛的软件之一。Taz Brown 描述了 Bash 如何成为开发者可以学习使用的最重要的工具之一。

### 00:00:07 - Saron Yitbarek

那是 1987 年，里根总统治下的美国正蓬勃发展，一个怀揣远大梦想的人正驱车前往位于圣巴巴拉的新家。这个人名叫 Brian Fox，27 岁，高中辍学生。在他的后备箱里，有两盒巨大的磁带，里面装满了他当时正在编写的代码。

### 00:00:28

多年来，Fox 一直以程序员的身份活跃在所谓的自由软件运动中。他相信自己后备箱里的代码能够带来一场革命，这是一种全新的软件范式。他的社区正在一点一点地使之成为现实。

### 00:00:49

那年，Richard Stallman（RMS）的自由软件基金会的一组程序员正在努力给计算机界带来自由。他们想要构建一个替代 UNIX 的系统，自 70 年代以来，UNIX 一直是编程领域的主导操作系统。他们的 GNU（表示 GNU's not UNIX）将成为公众的操作系统，任何人都可以使用它，无需担心许可费用或版权问题。

### 00:01:18

多年以来，基金会一直在努力制造这个崭新的系统。那么，Brian Fox 汽车后备箱里的那两盒装着代码的巨型磁带是什么呢？它们存储着这个系统的一个至关重要的组成部分——一个自由且可更改的 shell，这使得 GNU 操作系统变得完整。这是 Brian Fox 送给自由软件运动的礼物，他称之为 Bash。

### 00:01:46

我是 Saron Yitbarek，这里是《代码英雄》，一档来自红帽公司的原创播客节目。在这一集中，我们将探讨 Bash shell 中的英雄们。我们将探索 shell 的历史以及它们为什么对我们如今的工作如此重要。大家可以将 shell 视作演员的剧本，它们提供了完整的命令序列，然后 shell 可以快速运行，就像演员可以一行接一行地读她的台词一样。这是实现重复且复杂代码的最终解决方案，也是自动化的关键。你可能会说，shell 脚本是我们开发的一大助力。但是，是否可以编写一个能帮助所有人的 shell？这就是挑战所在。

### 00:02:38 - Ken Thompson

让我们回到 1969 年。那时候，贝尔实验室的几位计算机科学家正在根据自己的需求开发程序。

### 00:02:48 - Saron Yitbarek

这位是代码英雄先驱 Ken Thompson。由贝尔实验室设计的 UNIX 操作系统最初只是一个内部系统，鼓励程序员之间的密切交流。它的目的是改变贝尔实验室，而不是整个世界。

### 00:03:13 - Ken Thompson

现在，几乎整个贝尔实验室都在使用这个系统。我们公司拥有近两万个计算机终端，其中大多数使用 UNIX 系统。

### 00:03:25 - Saron Yitbarek

Ken Thompson 设计的 UNIX shell 在 1971 年发布。尽管 Thompson shell 被设计为命令行解释器，但它并不很好地支持脚本。直到六年后的 1977 年，脚本才开始兴起。

### 00:03:44 - Chet Ramey

Shell 参数、特殊参数以及我们如今认为理所当然的变量起源于 Steve Bourne 和 Bourne shell。

### 00:03:57 - Saron Yitbarek

这位是 Chet Ramey，Case Western Reserve 大学的 IT 架构师。Chet 致力于维护 Bash，他也为我们讲述了 Bash 的起源故事。他描述了贝尔实验室当时研究 UNIX shell 的情景。

### 00:04:13 - Chet Ramey

我们如今使用的编程结构起源于 Steve Bourne，他的 shell 赢得了这场比赛。当时有大量的 Mashey shell 用户社区，也有大量用户开始使用 Bourne shell。成立了一个委员会来决定哪一个将会获胜，并成为从那时起得到官方支持的 UNIX shell，Bourne 的 shell 赢了。而其他的 shell，正如他们所说，成为了历史。

### 00:04:54 - Saron Yitbarek

不过，这还不是历史的终结。当然，Bourne shell 是一个巨大的飞跃，打开了通向更高自动化水平的大门。尽管有一段时间 Bourne 占据了上风，但它并不能解决我们所有的脚本需求。

### 00:05:14 - Chet Ramey

Bourne 撰写自己的 shell 时所受到的限制几乎是现在的你我难以想象的。显然，当你遇到这些限制时，你不得不放弃很多东西，Bourne 就放弃了很多。考虑到他所处理的空间、内存和 CPU 限制，他能够让 Bourne shell 包含那么多东西，这相当了不起。

### 00:05:42 - Saron Yitbarek

请记住，Bourne shell 仍然是贝尔实验室 UNIX 系统的一部分，仍然与 UNIX 许可证绑定。这意味着它不是自由的，不是开放的。这款 shell 是私有的。

### 00:05:55 - Chet Ramey

如果你不在大学里，获取 UNIX 源码将会非常困难。显然，这对 Berkeley UNIX 的普及产生了影响。Berkeley UNIX 始于大学，在大学社区中成长，并走了一条阻力最小的道路。因此，如果你在正确的地方，访问到 Bourne shell 的源码并不困难，但总的来说，这并不是大众都能接受的方案。

### 00:06:36 - Saron Yitbarek

Chet Ramey 是 Bash shell 的维护者。

### 00:06:41

因此，我们有了 shell 的雏形，可以着手写这些关键的组成部分，但目前为止，最好的 shell 的许可证却有个大问题，它是闭源的。对于 Richard Stallman 和他的自由软件基金会而言，这是绝对无法接受的事情。我们需要的是一个不与任何公司绑定的 shell，一个面向所有人的 shell。

### 00:07:05

但这带来了问题。这意味着我们需要编写某种能做到 Bourne shell 所能做到的一切，而又不会侵犯版权的东西。如果逐字复制 Bourne shell 的代码，你会被起诉。

### 00:07:20

为了使人们摆脱 Bourne shell 的束缚，你必须找到一位能在没看过 Bourne shell 任何源代码的情况下编写这款复杂程序的程序员。你必须找到这样的一位局外人天才。而 Richard Stallman 找到了完成这项工作的程序员。

### 00:07:46

Brian Fox 是一名 20 来岁的高中辍学生，比贝尔实验室的大多数人更懂代码。他从来没有见过任何 Bourne shell 的源代码，这使得他非常适合手头的任务。

### 00:08:02 - Brian Fox

我是 Brian Fox。

### 00:08:04 - Saron Yitbarek

为什么不直接问问这个年轻人，这个故事是什么样的呢？现如今，Fox 是一位开源倡导者以及 Opus Logica 的 CEO。但在 80 年代后期，他只是一个信仰开源软件运动的年轻人。我们聊了聊过去的日子，以及 Bash 是如何从那时演变过来的。

### 00:08:23

所以那时候 Richard Stallman 请你为 UNIX 开发一款 shell。那将会是一款自由的 shell，并且是 Bourne shell 的替代品。你是如何回应的呢？

### 00:08:38 - Brian Fox