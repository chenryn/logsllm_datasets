title:A Secure Mobile Authentication Alternative to Biometrics
author:Mozhgan Azimpourkivi and
Umut Topkara and
Bogdan Carbunar
Published and presented in 33rd Annual Computer Security Applications Conference (ACSAC 2017)
8
1
0
2
g
u
A
1
2
]
R
C
.
s
c
[
2
v
3
8
4
2
0
.
2
1
7
1
:
v
i
X
r
a
A Secure Mobile Authentication Alternative to Biometrics
Mozhgan Azimpourkivi
Florida International University
Miami, FL, USA
Umut Topkara
Bloomberg LP
New york, NY, USA
Bogdan Carbunar
Florida International University
Miami, FL, USA
ABSTRACT
Biometrics are widely used for authentication in consumer devices
and business seŠings as they provide suﬃciently strong security,
instant veriﬁcation and convenience for users. However, biomet-
rics are hard to keep secret, stolen biometrics pose lifelong secu-
rity risks to users as they cannot be reset and re-issued, and trans-
actions authenticated by biometrics across diﬀerent systems are
linkable and traceable back to the individual identity. In addition,
their cost-beneﬁt analysis does not include personal implications
to users, who are least prepared for the imminent negative out-
comes, and are not o‰en given equally convenient alternative au-
thentication options.
We introduce ai.lock, a secret image based authentication method
for mobile devices which uses an imaging sensor to reliably extract
authentication credentials similar to biometrics. Despite lacking
the regularities of biometric image features, we show that ai.lock
consistently extracts features across authentication aŠempts from
general user captured images, to reconstruct credentials that can
match and exceed the security of biometrics (EER = 0.71%). ai.lock
only stores a “hash” of the object’s image. We measure the security
of ai.lock against brute force aŠacks on more than 3.5 billion au-
thentication instances built from more than 250,000 images of real
objects, and 100,000 synthetically generated images using a gen-
erative adversarial network trained on object images. We show
that the ai.lock Shannon entropy is superior to a ﬁngerprint based
authentication built into popular mobile devices.
1 INTRODUCTION
Existing solutions to the complex mobile authentication equation
have signiﬁcant problems. For instance, while biometric authen-
tication provides suﬃciently strong security, instant veriﬁcation
and convenience for users, biometrics are also hard to keep se-
cret and pose lifelong security risks to users when stolen, as they
cannot be reset and re-issued, More importantly, as surrendering
biometrics may become de facto mandatory [34, 43], existing vul-
nerabilities [5, 21, 51, 71], coupled with the compromise of large
scale biometrics databases [49], raise signiﬁcant long term secu-
rity concerns, especially as transactions authenticated by biomet-
rics across diﬀerent systems are linkable and traceable back to the
individual identity. Further, token-based authentication solutions,
e.g., SecurID [57], require an expensive infrastructure [1] (e.g. for
issuing, managing, synchronizing the token).
A secret image based authentication approach, where users au-
thenticate using arbitrary images they capture with the device cam-
era, may address several of the above problems. For instance, the
authentication is not tied to a visual of the user’s body, but that of
a personal accessory, object, or scene. As illustrated in Figure 1, a
user sets her reference credential to be an image of a nearby object
or scene. To authenticate, the user captures a candidate image; the
authentication succeeds only if the candidate image contains the
same object or scene as the reference image. Œis improves on (1)
biometrics, by freeing users from personal harm, providing plau-
sible deniability, allowing multiple keys, and making revocation
and change of secret simple and (2) token-based authentication, by
eliminating the need for an expensive infrastructure. Visual token-
based solutions (e.g., based on barcodes or QR codes) [24, 41] can
be seen as special cases of secret image based authentication.
However, this approach raises new challenges. First, an adver-
sary who captures or compromises the device that stores the user’s
reference credentials (e.g. mobile device, remote server) and has ac-
cess to its storage, should not be able to learn information about
the reference credentials or their features. Second, while biometric
features such as ridge ﬂow of ﬁngerprints or eye socket contours
of faces, can be captured with engineered features and are invari-
ant for a given user, images of objects and general scenes lack a
well deﬁned set of features that can be accurately used for authen-
tication purposes. Improper features will generate (i) high false
accept rates (FAR), e.g., due to non-similar images with similar fea-
ture values, and (ii) high false reject rates (FRR) that occur due to
angle, distance and illumination changes between the capture cir-
cumstances of reference and candidate images.
In a ﬁrst contribution, we introduce ai.lock, a practical, secure
and eﬃcient image based authentication system that converts gen-
eral mobile device captured images into biometric-like structures,
to be used in conjunction with secure sketch constructs and pro-
vide secure authentication and storage of credentials [§ 5].
To extract invariant features for image based authentication,
ai.lock leverages (1) the ability of Deep Neural Networks (DNNs)
to learn representations of the input space (i.e., embedding vectors
of images) that reﬂect the salient underlying explanatory factors of
the data, (2) Principal Component Analysis (PCA) [20] to identify
more distinguishing components of the embedding vectors and (3)
Locality Sensitive Hashing (LSH) to map the resulting components
to binary space, while preserving similarity properties in the in-
put space. We call the resulting binary values imageprints. ai.lock
builds on a secure sketch variant [17] to securely store reference
imageprints and match them to candidate imageprints.
In a second contribution, we propose the LSH-inspired notion
of locality sensitive image mapping functions (δ -LSIM), that con-
vert images to binary strings that preserve the “similarity” relation-
ships of the input space, for a desired similarity deﬁnition [§ 3]. A
δ -LSIM function can be used to eﬃciently match images based on
their extracted binary imageprints.
Further, we develop brute force image based aŠacks that aim to
defeat ai.lock. First, we perform real image aˆacks, that use man-
ually collected and publicly available image datasets. To evaluate
ai.lock on large scale aŠack images, we develop synthetic image at-
tacks that use images produced by generative models [54]. To eval-
uate the resilience of stored credentials, we introduce synthetic cre-
dential aˆacks, that use authentication credentials generated with
Solution
ai.lock (MLMS)
ai.lock (MLSS)
iPhone TouchID [4]
Deepface [65] (face)
SoundProof [33] (sound)
[62] (eye movement)
RSA SecurID [57]
Text-based password [10]
FAR
(%)
0.0004
0.0015
0.0020
-
0.1
0.06
-
-
EER
(%)
-
0.17
-
8.6
0.2
6.2
-
-
Shannon Entropy
Dataset
(bits)
18.02
16.02
15.61
-
9.97
10.70
19.93
10-20
size
2 ×109
6 ×106
-
> 0.5 ×109
> 2 ×106
1, 602
-
7 ×107
Table 1: ai.lock variants vs. commercial and academic bio-
metric, token-based authentication solutions, and text pass-
words. ai.lock MLSS variant has no false rejects, as it is evalu-
ated under attack samples only. Under large scale datasets of
powerful attacks, ai.lock achieves better entropy than state-
of-the-art biometric solutions.
Figure 1: ai.lock model and scenario. ‡e user captures the
image of an object or scene with the device camera. ai.lock
converts the image to a binary imageprint, and uses it as a
biometric, in conjunction with a secure sketch solution, to
securely store authentication information on the device or
on a remote server. ‡e user can authenticate only if she is
able to capture another image of the same object or scene.
the same distribution of the credentials extracted from manually
collected images [§ 2.1]. We have captured, collected and gener-
ated datasets of 250,332 images, and generated 1 million synthetic
credentials [§ 6.1]. We have used these datasets to generate aŠack
datasets containing more than 3.5 billion (3,567,458,830) authenti-
cation instances [§ 6.2].
We have implemented an ai.lock in Android using Tensorﬂow [3]
and show that it is resilient to aŠacks. Its FAR on 140 million syn-
thetic image aŠack samples is 0.2×10−6%. ai.lock was unbreakable
when tested with 1.4 billion synthetic credential aŠack samples.
Œe estimated Shannon entropy [60] of ai.lock on 2 billion image
pairs is 18.02 bits, comparing favorably with state-of-the-art bio-
metric solutions (see Table 1). Further, we show that ai.lock is a δ -
LSIM function, over images that we collected [§ 7.4]. ai.lock is fast,
imposing an overhead of under 1s on a Nexus 6P device. We have
released the code and data on hŠps://github.com/casprlab/ai.lock.
2 MODEL AND APPLICATIONS
We consider a user that has a camera equipped device, e.g., smart-
phone or tablet, a resource constrained device such as a smart
watch/glasses, or a complex cyber-physical system such as a car.
Œe user needs to authenticate to the device or an application back-
end, or authenticate through the device to a remote service. For
this, we assume that the user can select and easily access a physical
object or scene. To set her password, the user captures the image
of an object/scene with the device camera, see Figure 1 for an illus-
tration. ai.lock extracts a set of features from the user’s captured
reference image, then stores this information (imageprint) securely
either on the device or on a remote server. We note that, in the
former case, the device can associate the reference image with the
user’s authentication credentials (e.g. OAuth [14]) for multiple re-
mote services. To authenticate, the user needs to capture another
image. Œe user is able to authenticate only if the candidate image
is of the same object or scene as the reference image. Similar to e.g.,
text passwords, the user can choose to reuse objects across multi-
ple services, or use a unique object per service. Using a unique
object per service will aﬀect memorability. However, due to the
image superiority eﬀect [45], objects may be easier to remember
than text passwords. In the following, we describe a few applica-
tions of this model.
Alternative to biometric authentication. Instead of authenti-
cating with her sensitive and non-replaceable biometrics (face, ﬁn-
gerprint), the user uses a unique nearby scene or object that she
carries, e.g., a trinket, Rubik’s cube with a unique paŠern, printed
random art, etc. ai.lock moves the source of information from the
user to an externality, as it does not require a visual of the user’s
body, but that of a personal accessory, object, or scene that the user
can recreate at authentication time. ai.lock improves on biometrics
by freeing users from personal harm, providing plausible deniabil-
ity, allowing multiple keys, and making revocation and change of
secret simple.
Location based authentication. Œe user chooses as password
an image of a unique scene at a frequented location (oﬃce, home,
coﬀee shop), e.g., section of book shelf, painting, desk cluŠer. Œis
approach can be generalized to enable location based access con-
trol, e.g., to provide restricted access to ﬁles and networks in less
secure locations.
Cyber-physical system authentication. Our model supports
authentication to cyber-physical systems, including car and door
locks, thermostat and alarm systems, where key and PIN entry
hardware [58, 59] is replaced with a camera. To authenticate, the
user needs to present her unique but replaceable authentication
object to the camera.
2.1 Adversary Model
We assume an active adversary who can physically capture or com-
promise the device that stores the user credentials. Such an adver-
sary can not only access the stored credentials, but also any keying
material stored on the device, then use it to recover encrypted data
and use it to authenticate through the proper channels. However,
we assume that the adversary does not have control over the au-
thentication device while the user authenticates (e.g., by installing
malware). We also assume an adversary with incomplete surveil-
lance [19], i.e., who can physically observe the victim during au-
thentication but cannot capture the details of the secret object.
2
Furthermore, we assume that the adversary has “blackbox ac-
cess” to the authentication solution, thus can eﬃciently feed it im-
ages of his choice and capture the corresponding imageprint. Œe
adversary can use this output to learn information from the stored
credentials. More speciﬁcally, we consider the following aŠacks:
• Real image attack. Œe adversary collects large datasets of
images, e.g., manually using a mobile camera, and online. Œen, in
a brute force approach, he matches each image as an authentica-
tion instance against the stored reference credentials until success.
• Synthetic image attack. Œe adversary uses the previously
collected images to train a generative model, e.g. [23], that cap-
tures essential traits of the images, then uses the trained model to
generate a large dataset of synthetic images. Finally, the adversary
matches each such image against the reference credentials.
• Synthetic credential attack. Instead of images, the adver-
sary queries the authentication system with binary imageprints.
For this, the adversary extracts the imageprints generated by the
authentication solution on real images of his choice. He then gen-
erates a large dataset of synthetic credentials that follow the same
distribution as the extracted credentials. Finally, he matches each
synthetic credential exhaustively against the reference credentials.
• Object/scene guessing attack. While we do not consider
shoulder surﬁng aŠacks which also apply to face based authenti-
cation [35, 71], we assume an adversary that is able to guess the
victim’s secret object/scene type. Œe adversary then collects a
dataset of images containing the same object or scene type, then
uses them to brute force ai.lock (see Appendix B).
Finally, we assume the use of standard secure communication
channels for the remote authentication scenario where the user
credentials are stored on a server.
3 PROBLEM DEFINITION
Let I denote the space of images that can be captured by a user
with a camera. Let sim : I × I → {0, 1} be a function that returns
true when its input images have been taken with the same camera
and are of the same object or scene, and false otherwise.
Informally, the image based authentication problem seeks to iden-
tify a store function S : I → {0, 1}k , and an authentication function
Auth : {0, 1}k × {0, 1}∗ → {0, 1} (for a parameter k) that satisfy the
following properties. First, it is hard for any adversary with access
to only S(R), for a reference image R ∈ I, to learn information about
R. Œat is, S imposes a small entropy reduction on its input image.
Second, for any candidate string C ∈ {0, 1}∗, Auth(S(R),C) = 1
only if C ∈ I and sim(R, C) = 1. Œus, a candidate input to the
Auth function succeeds only if it is a camera captured image of the
same object or scene as the reference image.
We observe that the secure sketch of [17] solves this problem for
biometrics: given a biometric input, the secure sketch outputs a