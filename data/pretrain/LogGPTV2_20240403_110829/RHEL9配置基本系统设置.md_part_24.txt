:::
要验证接口是否支持使用 `NTP`{.literal} 的硬件时间戳，请使用
`ethtool -T`{.literal} 命令。如果 `ethtool`{.literal} 列出了
`SOF_TIMESTAMPING_TX_HARDWARE`{.literal} 和
`SOF_TIMESTAMPING_TX_SOFTWARE`{.literal} 模式，以及
`HWTSTAMP_FILTER_ ALL`{.literal} 过滤器模式，则可以使用硬件时间戳的
`NTP`{.literal}。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hw-timestamping}
**例 29.1. 在特定接口中验证硬件时间戳支持**
::: example-contents
``` literallayout
# ethtool -T eth0
```
输出：
``` literallayout
Timestamping parameters for eth0:
Capabilities:
        hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)
        software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)
        hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)
        software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)
        software-system-clock (SOF_TIMESTAMPING_SOFTWARE)
        hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)
PTP Hardware Clock: 0
Hardware Transmit Timestamp Modes:
        off                   (HWTSTAMP_TX_OFF)
        on                    (HWTSTAMP_TX_ON)
Hardware Receive Filter Modes:
        none                  (HWTSTAMP_FILTER_NONE)
        all                   (HWTSTAMP_FILTER_ALL)
        ptpv1-l4-sync         (HWTSTAMP_FILTER_PTP_V1_L4_SYNC)
        ptpv1-l4-delay-req    (HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ)
        ptpv2-l4-sync         (HWTSTAMP_FILTER_PTP_V2_L4_SYNC)
        ptpv2-l4-delay-req    (HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ)
        ptpv2-l2-sync         (HWTSTAMP_FILTER_PTP_V2_L2_SYNC)
        ptpv2-l2-delay-req    (HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ)
        ptpv2-event           (HWTSTAMP_FILTER_PTP_V2_EVENT)
        ptpv2-sync            (HWTSTAMP_FILTER_PTP_V2_SYNC)
        ptpv2-delay-req       (HWTSTAMP_FILTER_PTP_V2_DELAY_REQ)
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-hardware-timestamping_chrony-with-hw-timestamping}启用硬件时间戳 {.title}
:::
要启用硬件时间戳，请使用 `/etc/chrony.conf`{.literal} 文件中的
`hwtimestamp`{.literal}
指令。该指令可指定单一接口，也可以指定通配符字符来启用所有支持接口的硬件时间戳。如果没有其它应用程序，如
`linuxptp`{.literal} 软件包中的
[**[ptp4l]{.application}**]{.strong}，请使用通配符规格，则在接口中使用硬件时间戳。在
chrony 配置文件中允许使用多个 `hwtimestamp`{.literal} 指令。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-hardware-timestamping}
**例 29.2. 使用 hwtimestamp 指令启用硬件时间戳**
::: example-contents
``` literallayout
hwtimestamp eth0
hwtimestamp eth1
hwtimestamp *
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-client-polling-interval_chrony-with-hw-timestamping}配置客户端轮询间隔 {.title}
:::
建议为互联网中的服务器使用默认的轮询间隔范围（64-1024秒）。对于本地服务器和硬件时间戳，需要配置一个较短的轮询间隔，以便最小化系统时钟偏差。
`/etc/chrony.conf`{.literal} 中的以下指令使用一秒钟轮询间隔指定本地
`NTP`{.literal} 服务器：
``` literallayout
server ntp.local minpoll 0 maxpoll 0
```
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#enabling-interleaved-mode_chrony-with-hw-timestamping}启用交集模式 {.title}
:::
不是硬件 `NTP`{.literal} 设备的 `NTP`{.literal}
服务器，而常规计算机运行软件 `NTP`{.literal} 实施（如
[**[chrony]{.application}**]{.strong}
）仅在发送数据包后获得硬件传输时间戳。这个行为可防止服务器在它对应的数据包中保存时间戳。要启用
`NTP`{.literal}
客户端接收传输时间戳后生成的传输时间戳，请将客户端配置为使用
`NTP`{.literal} 交集模式，方法是在 `/etc/chrony.conf`{.literal} 中的
server 指令中添加 `xleave`{.literal} 选项：
``` literallayout
server ntp.local minpoll 0 maxpoll 0 xleave
```
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-server-for-large-number-of-clients_chrony-with-hw-timestamping}为大量客户端配置服务器 {.title}
:::
默认服务器配置允许最多成千上万个客户端同时使用交集模式。要为更多的客户端配置服务器，增大
`/etc/chrony.conf`{.literal} 中的 `clientloglimit`{.literal}
指令。这个指令指定为服务器中客户端访问的日志分配的内存量：
``` literallayout
clientloglimit 100000000
```
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hardware-timestamping_chrony-with-hw-timestamping}验证硬件时间戳 {.title}
:::
要校验该接口是否已成功启用了硬件时间戳，请检查系统日志。这个日志应该包含来自
`chronyd`{.literal} 的每个接口的消息，并成功启用硬件时间戳。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hardware-timestamping}
**例 29.3. 为启用硬件时间戳的接口记录日志信息**
::: example-contents
``` literallayout
chronyd[4081]: Enabled HW timestamping on eth0
chronyd[4081]: Enabled HW timestamping on eth1
```
:::
:::
当 `chronyd`{.literal} 配置为 `NTP`{.literal} 客户端或 peer
时，您可以传输和接收时间戳模式，以及 `chronyc ntpdata`{.literal}
命令为每个 `NTP`{.literal} 源报告的交集模式：
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#Report-mode-for-source}
**例 29.4. 报告每个 NTP 源的传输、接收时间戳以及交集模式**
::: example-contents
``` literallayout
# chronyc ntpdata
```
输出：
``` literallayout
Remote address  : 203.0.113.15 (CB00710F)
Remote port     : 123
Local address   : 203.0.113.74 (CB00714A)
Leap status     : Normal
Version         : 4
Mode            : Server
Stratum         : 1
Poll interval   : 0 (1 seconds)
Precision       : -24 (0.000000060 seconds)
Root delay      : 0.000015 seconds
Root dispersion : 0.000015 seconds
Reference ID    : 47505300 (GPS)
Reference time  : Wed May 03 13:47:45 2017
Offset          : -0.000000134 seconds
Peer delay      : 0.000005396 seconds
Peer dispersion : 0.000002329 seconds
Response time   : 0.000152073 seconds
Jitter asymmetry: +0.00
NTP tests       : 111 111 1111
Interleaved     : Yes
Authenticated   : No
TX timestamping : Hardware
RX timestamping : Hardware
Total TX        : 27
Total RX        : 27
Total valid RX  : 27
```
:::
:::
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#stability-NTP-measurements}
**例 29.5. 报告 NTP 测量的稳定性**
::: example-contents
``` literallayout
# chronyc sourcestats
```
启用硬件时间戳后，`NTP`{.literal}
测量的稳定性应该在正常负载下以十或几百秒为单位。在
`chronyc sourcestats`{.literal} 命令的输出的 `Std Dev`{.literal}
列中报告这个稳定性：
输出：
``` literallayout
210 Number of sources = 1
Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
ntp.local                  12   7    11     +0.000      0.019     +0ns    49ns
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-ptp-ntp-bridge_chrony-with-hw-timestamping}配置 PTP-NTP 桥接 {.title}
:::
如果网络中存在一个高度准确的 Precision Time Protocol (`PTP`{.literal})
grandmaster，但没有支持 `PTP`{.literal}
支持的交换机或路由器，则一个计算机会可能会被指定专门用于作为
`PTP`{.literal} slave 和一个 stratum-1 `NTP`{.literal}
服务器。此类计算机需要具有两个或更多个网络接口，并且接近 grandmaster
或与它建立直接连接。这样可保证高度准确的网络同步。
从 `linuxptp`{.literal} 软件包中配置
[**[ptp4l]{.application}**]{.strong} 和
[**[phc2sys]{.application}**]{.strong} 程序，以使用 `PTP`{.literal}
来同步系统时钟。
将 `chronyd`{.literal} 配置为使用其他接口提供系统时间：
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-NTP-bridge}
**例 29.6. 将 chronyd 配置为使用其他接口提供系统时间**
::: example-contents
``` literallayout
bindaddress 203.0.113.74
hwtimestamp eth1
local stratum 1
```
:::
:::
:::
:::
[]{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings}第 30 章 chrony 中的网络时间安全概述(NTS) {.title}
:::
Network Time
Security(NTS)是用于网络时间协议(NTP)的身份验证机制，旨在扩展大量客户端。它将验证从服务器计算机接收的数据包在移到客户端机器时是否被取消处理。Network
Time Security(NTS)包含 Key
Establishment(NTS-KE)协议，该协议会自动创建在服务器及其客户端中使用的加密密钥。
::: section
::: titlepage
# []{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html#proc_enabling-nts-in-the-client-configuration-file_assembly_overview-of-network-time-security-in-chrony}在客户端配置文件中启用网络时间协议(NTS) {.title}
:::
默认情况下不启用 Network Time Security(NTS)。您可以在
`/etc/chrony.conf`{.literal} 中启用 NTS。为此，请执行以下步骤：
::: itemizedlist
**先决条件**
-   带有 NTS 支持的服务器
:::
::: title
**流程**
:::
在客户端配置文件中：
::: orderedlist
1.  除推荐的 `iburst`{.literal} 选项外，使用 `nts`{.literal}
    选项指定服务器。
    ``` screen
    For example:
    server time.example.com iburst nts
    server nts.netnod.se iburst nts
    server ptbtime1.ptb.de iburst nts
    ```
2.  要避免在系统引导时重复 Network Time Security-Key
    Establishment(NTS-KE)会话，请在 `chrony.conf`{.literal}
    中添加以下行（如果不存在）：
    ``` screen
    ntsdumpdir /var/lib/chrony
    ```
3.  将以下行添加到 `/etc/sysconfig/network`{.literal} 以禁用与
    `DHCP`{.literal} 提供的网络时间协议(NTP)服务器的同步：
    ``` screen
    PEERNTP=no
    ```
4.  保存您的更改。
5.  重启 `chronyd`{.literal} 服务：
    ``` screen
    systemctl restart chronyd
    ```
    ::: itemizedlist
    **验证**
    -   验证 `NTS`{.literal} 密钥是否已成功建立：
        ``` screen
        # chronyc -N authdata
        Name/IP address  Mode KeyID Type KLen Last Atmp  NAK Cook CLen
        ================================================================
        time.example.com  NTS     1   15  256  33m    0    0    8  100
        nts.sth1.ntp.se   NTS     1   15  256  33m    0    0    8  100
        nts.sth2.ntp.se   NTS     1   15  256  33m    0    0    8  100
        ```
        `KeyID`{.literal}、`Type`{.literal} 和 `KLen`{.literal}
        应带有非零值。如果该值为零，请检查系统日志中来自
        `chronyd`{.literal} 的错误消息。
    -   验证客户端是否正在进行 NTP 测量：
        ``` screen
        # chronyc -N sources
        MS Name/IP address Stratum Poll Reach LastRx Last sample
        =========================================================