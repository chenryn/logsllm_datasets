domains from the Majestic Million domain list [26], and gathered
information about ANS-s that can possibly provide the answer for
each. By collecting data on possible ANS-s, we can map domain
names to each ANS, and thus estimate the number of records held by
each ANS. Following the Guidelines for Internet Measurement Activ-
ities [8], we limited our querying rate, in order to avoid placing un-
due load on any servers. As shown in Figure 7, only 5.7% of domains
we queried were served by non-privacy-preserving ANS-s, i.e., those
that hold only one record). Examples of domain names served from
non-privacy-preserving ANS-s included: tinyurl.com4, bing.com,
nginx.org, news.bbc.co.uk, and cloudflare.com. On the other
hand, 9 out of 10 queries were served by a privacy-preserving ANS,
and 65.7% by ANS-s that hold over 100 records.
These results are still approximations. Since we do not have data
for domains outside the Majestic Million list, we cannot make claims
about whether these would be served by a privacy-preserving ANS.
We hypothesize that the vast majority of ANS-s would be privacy-
preserving for the simple reason that it is more economical to
amortize the ANS’s running costs over multiple domains. On the
other hand, we can be certain that our results for the Majestic
Million are a strict lower bound on the level of privacy because
the ANS-s from which these are served could also be serving other
domains outside of our list. It would be possible to arrive at a
more accurate estimate by analyzing zone files of all (or at least
most) ANS-s. However, virtually all ANS-s disable the interface
to download zone files because this could be used to mount DoS
attacks. Therefore, this type of analysis would have to be performed
by an organization with privileged access to all ANS-s’ zone files.
4Since tinyurl.com is a URL shortening service, this is actually still privacy-preserving
because the adversary can not learn which short URL was queried.
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
Yoshimichi Nakatsuka, Andrew Paverd, and Gene Tsudik
8 RELATED WORK
There has been much prior work aiming to protect the privacy of
DNS queries [7, 15, 16, 25, 33, 37, 38]. For example, Lu et al. [25]
proposed a privacy-preserving DNS that uses distributed hash ta-
bles, different naming schemes, and methods from computational
private information retrieval. Federrath et al. [16] introduced a ded-
icated DNS Anonymity Service to protect the DNS queries using an
architecture that distributes the top domains by broadcast and uses
low-latency mixes for requesting the remaining domains. These
schemes all assume that all parties involved do not act maliciously.
There have also been some activities in the Internet standards
community that focused on DNS security and privacy. DNS Secu-
rity Extensions (DNSSEC) [3] provides data origin authentication
and integrity via public key cryptography. However, it does not
offer privacy. Bortzmeyer [5] proposed a scheme Also, though not
Internet standards, several protocols have been proposed to encrypt
and authenticates DNS packets between the client and the RecRes
(DNSCrypt [30]) and RecRes and NS-s (DNSCurve [1]). Moreover,
the original DNS-over-TLS paper has been converted into a draft
Internet standard [19]. All these methods assume that the RecRes
operator is trusted and does not attempt to learn anything from the
DNS queries.
Furthermore, there has been some research on establishing trust
through TEEs to protect confidentiality and integrity of network
functions. Specifically, SGX has been used to protect network func-
tions, especially middle-boxes. For example, Endbox [17] aims to
distribute middle-boxes to client edges: clients connect through
VPN to ensure confidentiality of their traffic while remaining main-
tainable. LightBox [14] is another middle-box that runs in an en-
clave; its goal is to protect the client’s traffic from the third-party
middle-box service provider while maintaining adequate perfor-
mance. Finally, ShieldBox [35] aims to protect confidential network
traffic that flows through untrusted commodity servers and pro-
vides a generic interface for easy deployability. These efforts focus
on protecting confidential data that flows in the network, and do
not target DNS queries.
9 CONCLUSION & FUTURE WORK
This paper proposed PDoT, a novel DNS RecRes design that oper-
ates within a TEE to protect privacy of DNS queries, even from a
malicious RecRes operator. In terms of query throughput, our unop-
timized proof-of-concept implementation matches the throughput
of Unbound, a state-of-the-art DNS-over-TLS recursive resolver,
while incurring an acceptable increase in latency (due to the use
of a TEE). In order to quantify the potential for privacy leakage
through traffic analysis, we performed an Internet measurement
study which showed that 94.7% of the top 1,000,000 domain names
can be served from a privacy-preserving ANS that serves at least two
distinct domain names, and 65.7% from an ANS that serves 100+ do-
main names. As future work, we plan to port the Unbound RecRes
to Intel SGX and conduct a performance comparison with PDoT,
as well as to explore methods for improving PDoT’s performance
using caching while maintaining client privacy.
Figure 7: Percentage of Majestic Million domains answered
by an ANS with at least N records
7.2 Caching & Timing attacks
Introducing a cache into an RecRes would allow the adversary to
launch timing attacks and help guess the domain name queried by
the end-user. We consider two types of timing attacks:
• Measuring time between query and response. This is
the simplest attack, whereby the adversary monitors the
network between client and RecRes, and records the time for
the RecRes to respond to the client. If the response time is
shorter (compared to other queries), it likely has been served
from a cache. This attack can be launched by both adversary
types described in Section 3.1. One obvious countermeasure
is to artificially delay the response to match the latency of
NS-served responses.
• Correlating client and RecRes requests. To counter the
above countermeasure the adversary may attempt to cor-
relate DNS requests sent from client to RecRes with those
sent from RecRes to NS-s e.g., using the times at which the
packets were sent. If successful, the adversary can distin-
guish requests that involve contacting an NS from those that
were served from the cache. This attack can be also launched
by a malicious RecRes or a network sniffer. One way to
counter this is to always send a query to one NS (although
not necessarily the correct NS). This diminishes the benefits
of caching, but still reduces the number of NS queries since
the real answer may have required more than one NS query.
Another way is to batch and randomize the order of requests
to the NS, creating a type of DNS mix network.
For both of these types of attacks, the information leakage de-
pends on whether the adversary is passive or active. A passive
adversary can (at most) guess the domain name. If the caching strat-
egy is Most Recently Used (MRU), the domain name must be one of
the popular ones. The active adversary can generate its own DNS
queries for a wide range of domain names and keep a list of those
that result in cache hits, thus improving the chances of inferring
the user’s query target.
PDoT: Private DNS-over-TLS with TEE Support
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
ACKNOWLEDGMENTS
We thank Geonhee Cho for the initial data collection for the privacy-
preserving ANS analysis in Section 7.1. We are also grateful to the
paper’s shepherd, Roberto Perdisci, and ACSAC’19 anonymous
reviewers for their valuable comments. First and third authors were
supported in part by NSF Award Number:1840197, titled: "CICI:
SSC: Horizon: Secure Large-Scale Scientific Cloud Computing". The
first author was also supported by The Nakajima Foundation. The
second author was supported by a US-UK Fulbright Cyber Security
Scholar Award.
REFERENCES
[1] . 2009. Introduction to DNSCurve. https://dnscurve.org/index.html [Online]
Accessed: 2019-05-29.
[2] Fritz Alder, N Asokan, Arseny Kurnikov, Andrew Paverd, and Michael Steiner.
2019. S-FaaS: Trustworthy and Accountable Function-as-a-Service using Intel
SGX. In ACM Cloud Computing Security Workshop (CCSW ’19).
[3] R. Arends, R. Austein, M. Larson, D. Massey, and S. Rose. 2005. DNS Security
Introduction and Requirements. Technical Report. https://doi.org/10.17487/
rfc4033
[4] ARM. 2009. ARM Security Technology - Building a Secure System using Trust-
Zone Technology. http://infocenter.arm.com/help/index.jsp?topic=/com.arm.
doc.prd29-genc-009492c/index.html [Online] Accessed: 2019-05-29.
[5] S. Bortzmeyer. 2016. DNS Query Name Minimisation to Improve Privacy. Technical
Report. https://doi.org/10.17487/RFC7816
[6] S Bortzmeyer. 2018. Encryption and authentication of the DNS resolver-to-
https://tools.ietf.org/html/draft-bortzmeyer-
authoritative communication.
dprive-resolver-to-auth-01
[7] Sergio Castillo-Perez and Joaquin Garcia-Alfaro. 2008. Anonymous Resolution of
DNS Queries. Springer, Berlin, Heidelberg, 987–1000. https://doi.org/10.1007/978-
3-540-88873-4_5
[8] V.G. Cerf. 1991. Guidelines for Internet Measurement Activities. Technical Report.
[9] Cloudflare. -. DNS over TLS - Cloudflare Resolver. https://1.1.1.1/dns/ [Online]
https://doi.org/10.17487/rfc1262
Accessed: 2019-05-29.
[10] Manuel Costa, Lawrence Esswood, Olga Ohrimenko, Felix Schuster, and Sameer
Wagh. 2017. The pyramid scheme: Oblivious RAM for trusted processors. arXiv
preprint arXiv:1712.07882 (2017).
[11] Victor Costan,
Ilia Lebedev, and Srinivas Devadas. 2016.
Sanctum:
, 857–
https://www.usenix.org/conference/usenixsecurity16/technical-
Minimal Hardware Extensions for Strong Software Isolation.
874 pages.
sessions/presentation/costan
[12] cs.nic. -. Knot Resolver.
https://www.knot-resolver.cz/ [Online] Accessed:
2019-05-29.
[13] T. Dierks and E. Rescorla. 2008. The Transport Layer Security (TLS) Protocol Version
1.2. Technical Report. https://doi.org/10.17487/rfc5246
[14] Huayi Duan, Cong Wang, Xingliang Yuan, Yajin Zhou, Qian Wang, and Kui Ren.
2017. LightBox: Full-stack Protected Stateful Middlebox at Lightning Speed. (Jun
2017). arXiv:1706.06261 http://arxiv.org/abs/1706.06261
[15] Annie Edmundson, Paul Schmitt, and Nick Feamster. 2018. ODNS: Oblivious
DNS. https://odns.cs.princeton.edu/ [Online] Accessed: 2019-05-29.
[16] Hannes Federrath, Karl-Peter Fuchs, Dominik Herrmann, and Christopher
Piosecny. 2011. Privacy-Preserving DNS: Analysis of Broadcast, Range Queries
and Mix-Based Protection Methods. Springer, Berlin, Heidelberg, 665–683.
https://doi.org/10.1007/978-3-642-23822-2_36
[17] David Goltzsche, Signe Rusch, Manuel Nieke, Sebastien Vaucher, Nico Weich-
brodt, Valerio Schiavoni, Pierre-Louis Aublin, Paolo Cosa, Christof Fetzer, Pascal
Felber, Peter Pietzuch, and Rudiger Kapitza. 2018. EndBox: Scalable Middlebox
Functions Using Client-Side Trusted Execution. In 2018 48th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN ’18). IEEE,
386–397. https://doi.org/10.1109/DSN.2018.00048
[18] Google. 2018. DNS over TLS support in Android P Developer Preview. https:
//security.googleblog.com/2018/04/dns-over-tls-support-in-android-p.html [On-
line] Accessed: 2019-05-29.
2019-05-29.
[19] Zi Hu, Liang Zhu, John Heidemann, Allison Mankin, Duane Wessels, and P
Hoffman. 2016. Specification for DNS over Transport Layer Security (TLS).
https://doi.org/10.17487/RFC7858
[20] Thomas Knauth, Michael Steiner, Somnath Chakrabarti, Li Lei, Cedric Xing, and
Mona Vij. 2018. Integrating Remote Attestation with Transport Layer Security.
(Jan 2018). arXiv:1801.05863 http://arxiv.org/abs/1801.05863
[21] SPROUT Lab. 2019. PDoT Source Code. https://github.com/sprout-uci/PDoT
[22] NLnet Labs. -. Stubby. https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+
[23] NLnet Labs. -. Unbound. https://nlnetlabs.nl/projects/unbound/about/ [Online]
Daemon+-+Stubby [Online] Accessed: 2019-05-29.
Accessed: 2019-05-29.
[24] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee. 2015. Last-
Level Cache Side-Channel Attacks are Practical. In 2015 IEEE Symposium on
Security and Privacy. IEEE, 605–622. https://doi.org/10.1109/SP.2015.43
[25] Y. Lu and G. Tsudik. 2010. Towards Plugging Privacy Leaks in the Domain Name
System. In 2010 IEEE Tenth International Conference on Peer-to-Peer Computing
(P2P). IEEE, 1–10. https://doi.org/10.1109/P2P.2010.5569976
[26] Majestic. 2012. Majestic Million.
https://blog.majestic.com/development/
majestic-million-csv-daily/
[27] Frank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos V. Rozas, Hisham Shafi,
Vedvyas Shanbhogue, and Uday R. Savagaonkar. 2013. Innovative instructions
and software model for isolated execution. In Proceedings of the 2nd International
Workshop on Hardware and Architectural Support for Security and Privacy (HASP
’13). ACM Press, New York, New York, USA, 1–1. https://doi.org/10.1145/2487726.
2488368
[28] Microsoft. 2017.
https://azure.
microsoft.com/en-us/blog/introducing-azure-confidential-computing/ [Online]
Accessed: 2019-05-29.
Introducing Azure confidential computing.
[29] P.V. Mockapetris. 1987. Domain names - implementation and specification. Tech-
nical Report. https://doi.org/10.17487/rfc1035
[30] DNSCrypt Project. -. DNSCrypt.
https://dnscrypt.info/ [Online] Accessed:
[31] Sajin Sasy, Sergey Gorbunov, and Christopher W Fletcher. 2017. ZeroTrace:
Oblivious Memory Primitives from Intel SGX. IACR Cryptology ePrint Archive
2017 (2017), 549.
[32] Ming-Wei Shih, Sangho Lee, Taesoo Kim, and Marcus Peinado. 2017. T-SGX:
Eradicating Controlled-Channel Attacks Against Enclave Programs. In NDSS Sym-
posium. https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/t-
sgx-eradicating-controlled-channel-attacks-against-enclave-programs/
[33] Haya Shulman and Haya. 2014. Pretty Bad Privacy: Pitfalls of DNS Encryption.
In Proceedings of the 13th Workshop on Privacy in the Electronic Society (WPES
’14). ACM Press, New York, New York, USA, 191–200. https://doi.org/10.1145/
2665943.2665959
[34] Sandeep Tamrakar, Jian Liu, Andrew Paverd, Jan-Erik Ekberg, Benny Pinkas,
and N. Asokan. 2017. The Circle Game: Scalable Private Membership Test Using
Trusted Hardware. In Proceedings of the 2017 ACM on Asia Conference on Computer
and Communications Security (ASIA CCS ’17). https://doi.org/10.1145/3052973.
3053006
[35] Bohdan Trach, Alfred Krohmer, Franz Gregor, Sergei Arnautov, Pramod Bhatotia,
and Christof Fetzer. 2018. ShieldBox: Secure Middleboxes using Shielded Execu-
tion. In Proceedings of the Symposium on SDN Research (SOSR ’18). ACM Press,
New York, New York, USA, 1–14. https://doi.org/10.1145/3185467.3185469
[36] Yuanzhong Xu, Weidong Cui, and Marcus Peinado. 2015. Controlled-Channel
Attacks: Deterministic Side Channels for Untrusted Operating Systems. In 2015
IEEE Symposium on Security and Privacy. IEEE, 640–656. https://doi.org/10.1109/
SP.2015.45
[37] Fangming Zhao, Yoshiaki Hori, and Kouichi Sakurai. 2007. Analysis of Privacy
Disclosure in DNS Query. In 2007 International Conference on Multimedia and
Ubiquitous Engineering (MUE ’07). IEEE, 952–957. https://doi.org/10.1109/MUE.
2007.84
[38] Fangming Zhao, Yoshiaki Hori, and Kouichi Sakurai. 2007. Two-Servers PIR
Based DNS Query Scheme with Privacy-Preserving. In The 2007 International
Conference on Intelligent Pervasive Computing (IPC ’07). IEEE, 299–302. https:
//doi.org/10.1109/IPC.2007.27
[39] Liang Zhu, Zi Hu, John Heidemann, Duane Wessels, Allison Mankin, and Nikita
Somaiya. 2015. Connection-Oriented DNS to Improve Privacy and Security. In
2015 IEEE Symposium on Security and Privacy. IEEE, 171–186. https://doi.org/10.
1109/SP.2015.18