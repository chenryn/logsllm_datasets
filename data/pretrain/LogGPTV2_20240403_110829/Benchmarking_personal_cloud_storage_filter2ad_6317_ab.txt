between each ﬁle upload. This can be determined by
counting packet bursts, which is proportional to the
number of ﬁles in our experiments. We conclude that
only Dropbox implements a ﬁle-bundling strategy.
4.3 Client-Side Deduplication
Server data deduplication eliminates replicas on the
storage server.
In case the same content is already
present on the storage, replicas in the client folder can
be identiﬁed to save upload capacity too.
To check whether this feature is implemented, we de-
sign the following test: i) a random ﬁle is inserted in an
arbitrary folder; ii) the same random payload is used to
create a replica with a diﬀerent name in a second folder;
iii) the original ﬁle is copied to a third folder; and iv)
after all copies are deleted, the original ﬁle is placed
back. The last step determines whether deduplication
fails after ﬁles are deleted from the local folder.
Results allow to conclude that only Dropbox and
Wuala implement deduplication. All other services have
to upload the same data even if it is readily available at
the storage server. Interestingly, Dropbox and Wuala
can identify copies of users’ ﬁles even after they are
deleted and later restored. In the case of Wuala, dedu-
plication is compatible with local encryption, i.e., two
identical ﬁles generate two identical encrypted versions.
4.4 Delta Encoding
Delta encoding is a specialized compression technique
that calculates ﬁle diﬀerences among two copies, al-
lowing the transmission of only the modiﬁcations be-
tween revisions. To verify which services implement
delta encoding, a sequence of changes are generated on
a ﬁle so that a portion of content is added/changed at
each iteration. Three cases are considered: new data
added/changed at the end, at the beginning, or at a
random position within the ﬁle. This allows us to check
whether rolling hash mechanisms are implemented. In
all cases, the modiﬁed ﬁle replaces its old copy.
Fig. 4 shows that only Dropbox fully implements
delta encoding, i.e., the volume of uploaded data corre-
sponds to the actual part that has been modiﬁed. Re-
sults in which bytes are inserted at the end and at ran-
dom positions are shown on the left and right plots, re-
spectively. In the former case, ﬁle size has been chosen
up to 2 MB. Larger ﬁles are instead considered in the
latter case to highlight the combined eﬀects with chunk-
ing and deduplication. Focusing on Dropbox, observe
that the amount of sent traﬃc increases when ﬁles are
bigger than Dropbox 4 MB-long chunk. This happens
because the original content may be shifted, changing
two or more chunks at once. As such, the volume of
data to be transmitted is larger than the added data.
4
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
)
B
M
(
d
a
o
l
p
U
 3
 2
 1
 0
)
B
M
(
d
a
o
l
p
U
 3
 2
 1
 0
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
)
B
M
(
d
a
o
l
p
U
 3
 2
 1
 0
 0.1
 0.5
 1
 1.5
 2
 0.1
 0.5
 1
 1.5
 2
 0.1
 0.5
 1
 1.5
 2
File size (MB)
(a) Random readable text
File size (MB)
(b) Random bytes
File size (MB)
(c) Fake JPEGs
Figure 5: Bytes uploaded during the compression test.
Wuala does not implement delta encoding. However,
deduplication prevents the client from uploading those
chunks not aﬀected by the change. This can be seen in
Fig. 4, when data is added at a random oﬀset, forming
a 10 MB ﬁle. In this case, only two chunks (among 3)
are modiﬁed, and thus uploaded.
4.5 Data Compression
We next verify whether data is compressed before a
transfer. Compression could, in general, reduce traf-
ﬁc and storage requirements at the expense of process-
ing time. We benchmark the compression capability
with two distinct ﬁle sets. The ﬁrst set (Fig. 5(a)) is
made of highly compressible text ﬁles (sizes from 100 kB
to 2 MB). Files in the second set (Fig. 5(b)) contain
pure random bytes so that no compression is possible.
Fig. 5(a) reveals that Dropbox and Google Drive com-
press data before transmission, with the latter imple-
menting a more eﬃcient scheme. Fig. 5(b) conﬁrms
that Dropbox has the highest overhead in this scenario.
Naturally, compression is advantageous only for some
ﬁle types. Compression will have a negligible or nega-
tive impact when already compressed ﬁles are going to
be transmitted. A possible approach would be to ver-
ify the ﬁle format before trying to compress it (e.g.,
using magic numbers). We checked whether Google
Drive and Dropbox implement smart policies by cre-
ating fake JPEGs – i.e., ﬁles with JPEG extension and
JPEG headers, but actually ﬁlled with text. Fig. 5(c)
shows that Google Drive identiﬁes JPEG content and
avoids compression. Dropbox instead compresses all
ﬁles independently of their content. In case of an or-
dinary JPEG ﬁle, resources would therefore be wasted.
4.6 Summary
Tab. 1 summarizes the capabilities of each service. It
shows that Dropbox has the most sophisticated client
from the point of view of features to enhance synchro-
nization speed. Wuala, Google Drive and SkyDrive
come next,
implementing some capabilities. Finally,
Cloud Drive has the most simplistic client, as none of
the checked capabilities have been implemented.
5. CLIENT PERFORMANCE
After documenting the architectures and capabilities,
we check their impact on performance. Passive mea-
surements [3] show that up to 90% of Dropbox users’
upload batches carry less than 1 MB, with a signiﬁcant
portion involving at least 2 chunks. Based on this in-
formation, we design 8 benchmarks varying i) number
of ﬁles; ii) ﬁle sizes and iii) ﬁle types. For the sake of
space, we do not show results with ﬁles that are con-
stantly changed or ﬁle replicas. These results are, how-
ever, identical for services that do not implement spe-
ciﬁc capabilities. Synchronization startup, upload time
and protocol overhead are discussed in the following.
5.1 Synchronization Startup
We ﬁrst evaluate how much time each service needs
before synchronization starts. The metric is computed
from the moment ﬁles start being modiﬁed until the ﬁrst
storage ﬂow is observed.5 Fig. 6(a) shows average de-
lays over 24 repetitions. Only 4 scenarios using binary
ﬁles are shown, since similar conclusions are obtained
with other ﬁle types. Dropbox is the fastest service to
start synchronizing single ﬁles.
Its bundling strategy,
however, slightly delays start up with multiple ﬁles. As
we will show next, such strategy pays back in total up-
load time. SkyDrive is by far the slowest, waiting at
least 9 s before starting submitting ﬁles. Moreover, it
gets slower as batches increase, taking more than 20 s
to start sending 100 ﬁles of 10 kB. Wuala also doubles
the startup time in this latter case.
5.2 Completion Time
Next, we test how long each service takes to com-
plete upload tasks. This is measured as the diﬀerence
between the ﬁrst and the last packet with payload seen
in any storage ﬂow. We ignore TCP tear-down delays,
and control messages sent after the upload is complete.
5The metric includes delays of our testing application to
send ﬁles to the test computer. This artifact, however, does
not aﬀect our conclusions, since all experiments are equally
aﬀected.
5
Dropbox
SkyDrive
Wuala
Google Drive Cloud Drive
Chunking
Bundling
Compression
Deduplication
Delta-encoding
4 MB
yes
always
yes
yes
var.
no
no
no
no
var.
no
no
yes
no
8 MB
no
smart
no
no
no
no
no
no
no
Table 1: Summary of the capabilities implemented in each service.
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
)
s
(
e
m
T
i
 25
 20
 15
 10
 5
 0
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
 100
)
s
(
e
m
T
i
 10
 1
 0.1
 0.01
 10
n
o
i
t
c
a
r
F
 1
 0.1
Dropbox
SkyDrive
Wuala
Cloud Drive
Google Drive
1x100kB
1x1MB 10x100kB 100x10kB
(a) Synchronization start up time
1x100kB 1x1MB 10x100kB 100x10kB
1x100kB
1x1MB 10x100kB 100x10kB
(b) Duration (note log y-axis)
(c) Overhead (note log y-axis)
Figure 6: Average benchmarking results when uploading binary ﬁles.
Fig. 6(b) summarizes our results (note the log scale on
the y-axis). A mixed ﬁgure emerges. When synchroniz-
ing single ﬁles of 100 kB or 1 MB, the distance between
our testbed and the data centers dominates the metric.
Google Drive (26,49 Mb/s) and Wuala (33,34 Mb/s)
are the fastest, since each TCP connection is termi-
nated to data centers nearby our testbed. Dropbox and
SkyDrive, on the other hand, are the most impacted ser-
vices. SkyDrive (160 ms of RTT), for instance, needs
almost 4 s to upload a 1 MB ﬁle, whereas Google Drive
requires only 300 ms (15 ms of RTT).
When multiple ﬁles are stored, the client capabilities
become central. The rightmost bars on Fig. 6(b) shows
a striking diﬀerence on completion time when 100 ﬁles
of 10 kB are used. Dropbox wins by a factor of 4 be-
cause of bundling, topping to 0,8 Mb/s of upload rate.
Interestingly, Google Drive’s advantage due to its dis-
tributed topology is completely canceled by the usage
of separate TCP/SSL connections per ﬁle. It takes 42 s
on average, i.e., 189 kb/s. Other services are also penal-
ized by their lack of bundling, with Cloud Drive taking
about 60 s (132 kb/s) to complete some tests.
5.3 Protocol Overhead
Finally, we evaluate protocol overhead as the total
storage and control traﬃc over the benchmarking size.
Fig. 6(c) shows that all services have a moderate to
high overhead when small ﬁles are synchronized. Cloud
Drive presents a very high overhead because of its high
number of control ﬂows opened for every ﬁle transfer
(see Fig. 1). Dropbox exhibits the highest overhead
among the remaining services (47% for 100 kB ﬁles and
22% for 1 MB ﬁles), possibly owing to the signaling cost
of implementing its advanced capabilities.
The lack of bundling dramatically increases overhead
when multiple small ﬁles are sent. Google Drive, for
instance, exchanges twice as much traﬃc as the actual
data size when sending 100 ﬁles of 10 kB. Cloud Drive
shows even more overhead, i.e., more than 5 MB of data
are exchanged to commit 1 MB of content.
6. CONCLUSIONS
In this paper we presented a methodology to check
both capabilities and system design of personal cloud
storage services. We then evaluated the implications of
design choices on performance by analyzing 5 services.
Our benchmarks show that Dropbox is the most ad-
vanced service considering capabilities. The maturity
of its design is reﬂected on the system performance, al-
though some protocol tweaks seem possible to reduce
network overhead. Cloud Drive exempliﬁes the rele-
vance of protocol design:
its bandwidth wastage is an
order of magnitude higher than other oﬀerings, and its
performance is disappointing. SkyDrive shows simple
design choices that limit performance, while Wuala of-
fers a good alternative. Importantly, client side encryp-
tion does not seem to aﬀect Wuala’s performance. In all
4 examples, we conﬁrm the role played by data center
placement in a centralized approach: taking the per-
spective of European users, this is still an important
limitation for U.S. centric services, such as Dropbox.
Services deploying data centers nearby our test loca-
tion, such as Wuala, have therefore an advantage.
Google Drive follows a diﬀerent approach resulting in
a mixed picture: it enjoys the beneﬁts of using Google’s
capillary infrastructure and private backbone. How-
ever, protocols and features limit performance, espe-
cially when multiple ﬁles are considered.
6
7. REFERENCES
[1] Amazon. Cloud Drive v. 2.0.2013.841.
http://www.amazon.com/gp/feature.html?-
docId=1000828861.
[2] I. N. Bermudez, S. Traverso, M. Mellia, and
M. M. Munaf`o. Exploring the Cloud from Passive
Measurements: the Amazon AWS case. In The
32nd Annual IEEE International Conference on
Computer Communications, INFOCOM’13, 2013.
[3] I. Drago, M. Mellia, M. M. Munaf`o, A. Sperotto,
R. Sadre, and A. Pras. Inside Dropbox:
Understanding Personal Cloud Storage Services.
In Proceedings of the 12th ACM Internet
Measurement Conference, IMC’12, pages 481–494,
2012.
[4] Dropbox. v. 2.0.8.
https://www.dropbox.com/release notes.
[5] B. Eriksson and M. Crovella. Understanding
Geolocation Accuracy using Network Geometry.
In The 32nd Annual IEEE International
Conference on Computer Communications,
INFOCOM’13, 2013.
[6] Google. Drive v. 1.9.4536.8202.
https://tools.google.com/dlpage/drive.
[7] Google. Network Introduction. On-line
https://peering.google.com/about/delivery
ecosystem.html.
[8] Google. Trends. http://www.google.com/trends/.
[9] W. Hu, T. Yang, and J. N. Matthews. The Good,
the Bad and the Ugly of Consumer Cloud
Storage. ACM SIGOPS Operating Systems
Review, 44(3):110–115, 2010.
[10] LaCie. Wuala v. Strasbourg.
http://www.wuala.com/.
[11] A. Li, X. Yang, S. Kandula, and M. Zhang.
CloudCmp: Comparing Public Cloud Providers.
In Proceedings of the 10th ACM SIGCOMM
Conference on Internet Measurement, IMC’10,
pages 1–14, 2010.
[12] T. Mager, E. Biersack, and P. Michiardi. A
Measurement Study of the Wuala On-line Storage
Service. In Proceedings of the IEEE 12th
International Conference on Peer-to-Peer
Computing, P2P’12, pages 237–248, 2012.
[13] Microsoft. SkyDrive v. 17.0.2006.0314.
https://skydrive.live.com/.
[14] I. Poese, S. Uhlig, M. A. Kaafar, B. Donnet, and
B. Gueye. IP Geolocation Databases: Unreliable?
SIGCOMM Comput. Commun. Rev., 41(2):53–56,
2011.
[15] R. Torres, A. Finamore, J. R. Kim, M. Mellia,
M. M. Munaf`o, and S. Rao. Dissecting Video
Server Selection Strategies in the YouTube CDN.
In Proceedings of the 31st International
Conference on Distributed Computing Systems,
ICDCS’11, pages 248–257, 2011.
[16] H. Wang, R. Shea, F. Wang, and J. Liu. On the
Impact of Virtualization on Dropbox-like Cloud
File Storage/Synchronization Services. In
Proceedings of the IEEE 20th International
Workshop on Quality of Service, IWQoS ’12,
pages 11:1–11:9, 2012.
7