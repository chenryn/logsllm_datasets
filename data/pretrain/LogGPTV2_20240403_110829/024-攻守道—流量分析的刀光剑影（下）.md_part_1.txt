2020/7/27 攻守道—流量分析的⼑光剑影（下）
攻守道—流量分析的⼑光剑影（下）
原创 队员编号023 酒仙桥六号部队 6⽉23⽇
这是 酒仙桥六号部队 的第 24 篇⽂章。
全⽂共计3449个字，预计阅读时⻓11分钟。
⼤家好，我⼜回来了，上⼀期我们对那⼀起攻击事件流量的分析只进⾏了⼀半，事情还
远未结束，这期，我们继续来进⾏探究。
第五问 数据库
攻击者拿到的数据库配置信息是什么。
前⾯攻击者已经拿下了⼀个⽹站，并上传了webshell，通常都会读取⽹站的配置⽂件来
获取数据库的账号密码，然后连接数据库进⾏数据脱取等操作，那么，我们就来从流量
中找找攻击者读取的数据库⽂件。
通常，在php语⾔的⽹站中，数据库的配置会写在config.php、database.php等名称
的 ⽂ 件 中 ， Java 语 ⾔ 的 ⽹ 站 中 ， 当 使 ⽤ ⼀ 些 框 架 时 ， 数 据 库 的 配 置 可 能 会 写 在
datasource.xml 、 config.xml 、 config.properties 等 名 称 的 ⽂ 件 中 ， ⼀ 般 情 况
下 ， 在 这 些 ⽂ 件 中 写 数 据 库 的 连 接 信 息 时 ， 都 会 有 hostname 、 dbname 、
username、password这类的关键字，在java中还会有jdbc的字段。⼤多数情况下，
这 些 配 置 信 息 在 配 置 ⽂ 件 中 都 是 明 ⽂ 存 储 的 ， 当 存 在 任 意 ⽂ 件 读 取 、 下 载 、 获 取
webshell之后都可以通过读取这些⽂件直接获取数据库信息。
现在我们就来看看攻击者的流量，看看他读到的数据库信息是什么。⾸先我们能想到，
攻击者读取到的数据库信息肯定是在返回包中显示，再通过我们之前分析出来的攻击者
使⽤的名称为a.php的webshell来筛选⼀下。先筛选攻击者IP发出的请求，并且返回包
是 由 a.php 请 求 来 的 ： ip.addr == 192.168.32.189 and http.response_for.uri
contains "a.php"
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 1/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
筛选出来90条数据包，再把返回包200的请求筛选出来，就只剩下36条数据包，这样找
起来就更容易了。
我们直接搜索数据包中的字符串，搜⼀些跟数据库配置⽂件相关的关键字，由于是搜的
返回包内容，所以我们直接搜host、dbname、password、dbpwd等。搜索了⼀番，
怎么都没找到读取数据库配置⽂件的数据包，难道没有读数据库配置⽂件吗？难道筛选
逻辑有问题？不禁⼼⽣疑问。此时想到之前遇到过的⼀个情况，流量包⾥只有返回包，
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 2/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
没有记录到请求包时，就⽆法通过特定的请求路径筛选出对应的返回数据包。难不成读
取数据库配置⽂件的请求包没有被记录下来吗？带着这个疑问，我⼜来翻查⼀遍数据
包，这次不再筛选数据包的路径，直接将所有攻击者发起的请求的返回包，并且状态是
200的数据包筛选出来，再去查找。
筛选出的数据包有1万多个，使⽤wireshark的搜索字符串的功能，搜索host发现有⼤
量的噪声包，就直接搜索dbhost字段，正中⽬标，发现攻击者只读取了⼀次配置⽂件，
只有这⼀个数据包。
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 3/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
跟踪了这个数据包之后发现，整个数据流只有返回包的内容，没有请求包，似乎就可以
印证之前的猜想了，流量包中并没有记录到这个操作的请求包，只记录到了返回包。
第六问 邮箱
攻击者获得的邮箱账号密码是什么？
前⾯攻击者已经拿到了数据库的账号密码，我们猜测攻击者可能通过哪些⽅式去查询的
数据库：第⼀种，通过webshell连接数据库，执⾏sql语句查询数据库，这种⽅式的流
量为http流量；第⼆种，通过数据库连接⼯具或命令⾏连接数据库，执⾏SQL语句查询
数据库，这种⽅式就取决于连接⼯具本身，mysql⼀般情况下都是tcp流量。
从上⼀步获取到的数据库配置信息中看到，数据库的地址是10.3.3.101，我们先来看看
被攻击者攻击的⽹站的⽹卡信息。
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 4/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
可以看到被攻击的web服务器存在两张⽹卡，⼀个对外，⼀个与数据库通信。继续分析
寻找攻击者查询数据库获取邮箱账号信息，查找http流量，没有发现任何基于http流量
的查询数据库操作，在记录到的数据包流量中，有mysql流量，直接筛选出来mysql的
流量来分析。
筛选之后发现只有web服务器与数据库的通信流量，猜测可能攻击者使⽤web服务器做
流量代理连接数据库或者直接使⽤web服务器连接数据库。流量包中的mysql流量共有
40多万条，整体逐条筛选肯定会很困难，此时，我们可以回到攻击者发起攻击的⾏为来
分析。攻击者发起读取数据库⾏为，肯定发⽣在读取数据库配置⽂件之后，由此⽽来，
我们可以看看数据包中记录到的读取数据库配置⽂件的时间，然后寻找mysql流量中对
应的时间之后的流量。
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 5/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
可以看到读取配置⽂件的时间是8⽉8⽇16点18分05秒，再回到mysql流量⾥，按照时
间排序流量包，然后来分析。查看了这个时间之后的mysql流量包，发现并没有预期的
结果，难道没有通过连接数据库来读数据库⾥的信息吗？难道是通过注⼊拿到的信息？
现在我们也⽆法直接确定，我们就来反推⼀下这个过程，先来找找攻击者登录的邮箱。
与之前⼀样，先来找找与邮箱登录相关的流量：
1 http.request.method == POST and http contains "index.php"
存在⼤量192.168.94.59发出的攻击流量，这个应该就是攻击者的IP了。再来看⼀下正
常的邮箱登录是什么样的返回包，过滤出来与邮箱有关的http数据包后，发现有⼀个
logout退出登录的数据包，在这个数据包中的cookie参数中发现有个login_name参
数，那么这个肯定就是正常登录的⽤户了。
https://mp.weixin.qq.com/s/5YFdZCrCZ_qvP9oLCeXVyA 6/16
2020/7/27 攻守道—流量分析的⼑光剑影（下）
继续看看这个⽤户名的正常登录是什么样的，会返回来什么样的数据。