1) Reﬂection Types: One functionality of the ICMP pro-
tocol is the designated notiﬁcation [20], [2] about lacking
support of transport protocols in the operating system. This
ICMP message is of type “destination unreachable/protocol
unreachable” (type = 3 / code = 2) and contains a copy
of the original incoming IP packet. We call this mechanism
unreachable reﬂection. Another ICMP functionality is the echo
(ping) mechanism that tests if a host is reachable. In response
to an echo request, the ICMP stack sends an echo reply that
this ping
copies also the payload of the request. We call
reﬂection.
While both mechanisms reﬂect the payload, they differ
in the length, rate, and foreknowledge of the payload. This
difference inﬂuences what type of reﬂection we use in distinct
Fig. 2. Overview of the LTE and IP stack. Note that ICMP is a layer-
three protocol, but ICMP packets are encapsulated in an IP packet similar to
transport-layer packets.
B. LTE Protocol Stack
Figure 2 depicts the LTE protocol stack in cooperation with
the IP stack. While the LTE stack is part of the LTE modem,
the IP stack is implemented by the operating system. We brieﬂy
explain the protocols beginning with the PDCP protocol. In
particular, we focus on the behavior of IP stacks, which is the
mechanism exploited by the IMP4GT attack.
PDCP. The Packet Data Convergence Protocol (PDCP) trans-
fers both user and control plane data. For the control plane,
PDCP provides encryption and integrity protection. For the
user plane, the protocol only provides encryption without any
integrity protection, which leads to malleable encryption [40].
We exploit the missing integrity protection of the user plane
for the IMP4GT attack.
RRC. The Radio Resource Control (RRC) protocol is part of
the control plane and manages all radio connections between
the UE and the eNodeB. This includes the conﬁguration of all
lower-level protocols down to the physical layer (PHY).
NAS. The Non-Access Stratum (NAS) protocol is responsible
for mobility management with the core network. As part of
the NAS protocol, the AKA establishes mutual authentication
and a shared session key. Further security mechanisms on the
NAS and PDCP layer build upon the established session key.
IP. The IP protocol allows to communicate with Internet ser-
vices and is implemented by the operating system. Nowadays,
most operating systems support both IPv4 and IPv6. An IP
packet contains the transport-layer protocols, whose types are
signaled by the IPv4 protocol ﬁeld or the IPv6 next header
ﬁeld. The most common transport-layer protocols are the TCP
and UDP protocols.
C. Security Establishment
The shared symmetric keys that are stored on the SIM card
and in the HSS are the anchor for all security mechanisms in
LTE. The keys are used during the AKA protocol to establish
mutual authentication and to derive session keys for ongoing
security mechanisms.
The AKA protocol takes place when the UE connects to the
network. In this situation, the MME sends an authentication
request to the UE that contains (a) an authentication token
and (b) a random nonce. The authentication token veriﬁes the
3
LTEModemOSPHYMACRLCPDCPRRCNASIP...TCPUDPICMPUser PlaneControl PlaneLayer1234Physical LayerMedium Access ControlRadio Link Controlattack parts. The unreachable reﬂection is often limited in rate
and size (cf. Section IV), but it does not rely on a checksum
for the correctness of the unsupported transport protocol. On
the other side, the ping reﬂection is not limited in rate and
size, but the echo request has its own ICMP checksum that is
checked by the operating system.
2) Limitations: The rate and size limitation of the unreach-
able reﬂection affects the attack performance and its use should
be minimized as far as possible. However, it ﬁts the situation
in which the payload is unknown to the attacker and the inner
checksum cannot be computed. In contrast, the ping reﬂection
does not impair the attack performance, but is only suitable
for situations in which the payload is known, i. e., the correct
ICMP checksum can be computed. Consequently, we use the
unreachable reﬂection for conditions where the payload is not
known (decryption) and use the ping reﬂection in cases of
known plaintext (encryption).
III.
IMP4GT ATTACKS
The lack of integrity protection for user data allows to
deterministically manipulate and redirect IP packets sent in
uplink and downlink direction—this is how far the ALTER
attack goes [40]. However, we can go further and exploit
the missing integrity protection to establish an encryption and
decryption oracle that allows to inject arbitrary packets and
access the payload of existing packets. We achieve this through
a cross-layer attack that takes the default IP stack behavior of
mobile operating system further into account. In the end, the
combination of both attack vectors allows us to perform a full
impersonation towards the UE and the network.
In the following, we ﬁrst explain the general concept of
IMP4GT and then dive into more detail
the
preparation phase and the different attack phases of an uplink
and downlink impersonation.
to document
A. Attack Concept
For extending the ALTER attack to a full impersonation,
we depend on the ability to encrypt and decrypt packets in
uplink and downlink direction. Therefore, the construction of
a cryptographic oracle is a core requirement for the IMP4GT
attacks. We now provide an overview of the different phases
of the attack procedure, document the steps of the oracle
construction, and deﬁne the attacker model.
1) Phases: As a preliminary step, we ﬁrst pass through a
preparation phase which is followed by the actual attack phase
(cf. Figure 3). The preparation phase aims to retrieve internal
information of the victim’s UE and to establish a connection to
a plaintext generation server. In the attack phase, two variants
of the impersonation attack can be conducted. The uplink
impersonation allows an attacker to establish an arbitrary IP
connection towards the Internet, e. g., a TCP connection to an
HTTP server. With the downlink variant, the attacker can build
a TCP connection to the UE.
Note that while the general attack procedure is rather
simple, the notation of different trafﬁc directions, encryption,
and decryption in the following paragraphs can sometimes get
a bit confusing. Hence we ﬁrst provide an overview of the
abstract idea before diving into details. Both attacks variants
Fig. 3.
IMP4GT attack concept. The preparation phase consists of two
preliminary steps to A(cid:13) derive internal information from the UE and to B(cid:13)
establish a connection with the plaintext server. After the preparation, either
an uplink or a downlink impersonation can be performed.
require to encrypt and decrypt packets for bidirectional com-
munication: for the uplink impersonation, uplink packets need
to be encrypted, and downlink packets need to be decrypted,
whereas the downlink impersonation requires downlink packet
encryption and uplink packet decryption. In both cases, the
encryption and decryption is achieved by an oracle.
2) Oracle Construction: In the following, we describe the
abstract idea of the (a) encryption and (b) decryption oracle.
For the sake of abstraction, we use the term system as a
combination of LTE network entities. The realization of the
oracles and the entities exploited are speciﬁc for the different
attack variants described later in more detail.
(A) Encryption Oracle. The goal of an encryption oracle is
to learn the keystream of a connection, which later allows to
encrypt and inject arbitrary packets. Figure 4 depicts the en-
cryption oracle for the IMP4GT attack. For encrypting a target
plaintext, the oracle injects a known plaintext to the system 1(cid:13).
The system encrypts the packet by xor-ing the known-plaintext
with a valid keystream for transmission, which is returned to
the oracle 2(cid:13). Now, the oracle can extract the valid keystream
by xor-ing the known-plaintext on the encrypted packet. Any
arbitrary payload can now be encrypted by xor-ing the target
plaintext and the keystream 3(cid:13).
(B) Decryption Oracle. The goal of a decryption oracle is
to decrypt and access the payload of an encrypted packet 1(cid:13).
The high-level concept of the decryption oracle is depicted in
Figure 5. To achieve the decryption of a packet, the oracle
manipulates the to-be-decrypted ciphertext and sends it to the
system 2(cid:13). The system decrypts the packet and subsequently
sends it back to oracle 3(cid:13). This way, we can receive the
plaintext of encrypted packets.
Both oracles vary in their implementation,
in the
used entities as system and mechanisms for the uplink and
downlink impersonation. We document the technical details of
the system, along with the exploited protocol properties, in the
following.
i. e.,
3) Attacker Model: We consider an active attacker that has
radio capabilities with full protocol knowledge, but does not
4
Preparation PhaseAttack PhaseUplink Imp4GtDownlink Imp4GtRetrieve InternalInformationAPlaintext ServerConnectionEstablishmentBDL DecryptionDL DecryptionUL EncryptionUL EncryptionUL DecryptionUL DecryptionDL EncryptionDL EncryptionFig. 5. The basic principle of the decryption oracle for the IMP4GT attack.
We consider the following initial situation: The victim
connects to the attacker’s relay, which can be achieved by
increasing the signal strength of the relay or by jamming the
legitimate cell [31]. Furthermore, the victim’s UE requests
the default DNS server of the network for a subsequent TCP
connection. This situation can be triggered either by the user’s
action or automatically: In the former case, the victim visits
a website or uses one of the installed applications; the latter
situation occurs when background services periodically check
for incoming data. We demonstrate the attack without requiring
any speciﬁc action of the victim. In particular, we intercept
the initial DNS request and the subsequent TCP connection
that checks the Internet connectivity (e. g., on Android a
connection to connectivity.android.com and on iOS
a connection to captive.apple.com).
B. Preparation Phase
The preparation phase allows the attacker to A(cid:13) learn
mandatory internal information about the UE, e. g., the IP
address and TCP port behind the NAT, and to B(cid:13) connect to a
plaintext generation server that later is required for maintaining
a plausible connection (cf. Figure 6). Both steps A(cid:13) and B(cid:13)
make use of a preliminary connection establishment
to a
malicious TCP proxy that allows to hijack the TCP connection.
The attacker can use this hijacked TCP connection for sending
additional packets to the UE, which is one requirement for the
unreachable reﬂection, the subsequent information retrieval,
and the keystream server connection. Next we describe each
of these steps in more detail.
1) Initial DNS Request: The preparation phase begins when
the UE requests the default DNS server, e. g., when the victim
visits a website or the UE initially checks the Internet connec-
tivity. As the malicious relay forwards all packets between the
UE and the LTE network, it can detect DNS requests based
on the packet lengths that differ from other types of trafﬁc.
Following the successful detection, the attacker performs the
aLTEr attack (described in Sec. II-C) to alter the destination
IP address of the DNS request accordingly. When the LTE
network decrypts the manipulated request, it is redirected to
the malicious DNS server.
2) Establishing TCP Proxy: With the malicious DNS
server in charge of resolving the DNS request, the attacker
performs DNS spooﬁng (1) and replies with the IP address
of the TCP proxy. In the following, the UE establishes a TCP
connection to the attacker’s TCP proxy (2a), which connects to
the original TCP server (2b). This allows the attacker to relay
TCP connections and hijack the underlying TCP connection.
More precisely, the attacker can inject additional TCP packets
at the end of the TCP connection with the correct sequence
numbers. In this way, the LTE network’s ﬁrewall/NAT routes
those packets to the UE. By injecting two additional TCP
Fig. 4. The basic principle of the encryption oracle for the IMP4GT attack.
possess any key material or access to the core network. In
particular, we analyze a layer-two attacker in a MitM position
between the eNodeB and UE. In this position, the attacker can
intercept, drop, and forward messages with unaltered or altered
content. Furthermore, we assume that an attacker can deploy
IP-based services on the Internet. In particular, the attacker
deploys the following entities:
• Relay. The relay is in a MitM position between the UE
and the network and forwards layer-two trafﬁc between
both entities. Because of this position, the relay can detect
the length of a frame. Furthermore, the missing integrity
protection allows modifying the content of encrypted
layer-two frames.
• DNS Server. The DNS server is deployed on the Internet
and is only active during the preparation phase. It per-
forms DNS spooﬁng to redirect the request, and redirects
the subsequent TCP connection to the TCP proxy.
• TCP Proxy. The TCP proxy is in a MitM position
between the UE and the original TCP server and relays a
TCP connection during the preparation phase. The TCP
proxy allows to intercept and hijack the original TCP
connection to inject additional packets into the connection
with correct sequence numbers.
• Decryption Server. The decryption server receives de-
crypted packets and shares the information with other
entities via the control connection. Those packets are
encapsulated within an ICMP frame and need to be
decapsulated by the decryption server. In the preparation
phase, the decryption server receives internal information
about
the server
receives the decrypted TCP packets encapsulated in ICMP
packets of the impersonated TCP connection.
• Plaintext Generation Server. The plaintext generation
server generates a known plaintext and sends it in down-
link direction to the UE. The relay uses the known
plaintext for extracting the keystream and re-encrypting
a crafted packet. We instantiate the plaintext generation
server as a UDP server.
the phone. During the attack phase,
The attack requires to react on parameters set by the
network for a new radio connection. For example, the victim’s
internal IP address inﬂuences the plaintext prediction that is
performed at the relay. However, only the decryption server can
access the information. Therefore, all entities share information
via a separate control connection.
5
Known-PlaintextKeystreamKnown-PlaintextCiphertextCiphertextKnown-Plaintexttarget Plaintexttarget CiphertextEncryption OracleSystemInputOutput123CiphertextPlaintextPlaintextManipulated CiphertextDecryption OracleSystemInputOutput123decrypt:Fig. 6.
In the preparation phase, the attacker ﬁrst hijacks a TCP connection with a TCP Proxy using a DNS spooﬁng attack via the ALTER attack. In the next
step, the unreachable reﬂection helps to A(cid:13) retrieve internal information about the UE and to B(cid:13) establish a UDP connection to the Plaintext Generation Server.
packets, the attacker can A(cid:13) extract internal information and
B(cid:13) set up the connection to the plaintext generation server.
Exploiting the unreachable reﬂection mechanism is part of both
steps.
3) Unreachable Reﬂection: For triggering the unreachable
reﬂection, the TCP proxy injects a TCP packet with a known
plaintext and known length (1). The network accepts the packet
and replaces the IP and TCP port according to the NAT rules.