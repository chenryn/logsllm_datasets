title:Performance based traffic control with IDIPS
author:Damien Saucez and
Olivier Bonaventure
Performance Based Trafﬁc Control with IDIPS
Damien Saucez
Université catholique de Louvain
ICTEAM
2 Place Sainte-Barbe
B-1348 Louvain-la-Neuve, Belgium
PI:EMAIL
Olivier Bonaventure
Université catholique de Louvain
ICTEAM
2 Place Sainte-Barbe
B-1348 Louvain-la-Neuve, Belgium
PI:EMAIL
ABSTRACT
Nowadays Internet is ubiquitous resulting in an increasing
path diversity and content duplication. However, while con-
tent can be retrieved from many diﬀerent places, the paths
to those places are not equivalent. Indeed, some paths oﬀer
better bandwidth while others are less expensive or more
stable.
In addition, a new range of applications is sensi-
tive to the performance of the paths that carry their traﬃc.
To support this evolution of the Internet, we propose ISP-
Driven Informed Path Selection (IDIPS). Any ISP can easily
deploy IDIPS to help its customers to select the paths that
best meet their requirements in order to reach their content.
IDIPS helps in this selection through pro-active measure-
ments and ISP-deﬁned policies. IDIPS is scalable and can
support thousands of clients. IDIPS is also ﬂexible and can
thus be used by the ISP to optimize its routing decisions to
take the performance of its inter-domain links into account.
Categories and Subject Descriptors
C.2.1 [Computer-Communication Networks]: Network
Architecture and Design
General Terms
Measurement, Performance
Keywords
route control, traﬃc engineering, XORP
1.
INTRODUCTION
Content is often replicated and distributed with the help
of eﬃcient content distribution networks (CDN) [3, 5] or
even end-user based replication with peer-to-peer applica-
tions. This creates several problems in Internet Service
Provider (ISP) networks where client-server asymmetry does
not hold anymore. In addition, due to the transition from
IPv4 to IPv6 many hosts will be dual-stack for the fore-
seeable future. Furthermore, measurements show that IPv4
and IPv6 do not always provide the same performances, even
for a single source-destination pair. To reach a destination
supporting both IPv4 and IPv6, a source host can achieve
better performance by selecting the stack that provides the
Copyright is held by the author/owner(s).
SIGCOMM’11, August 15–19, 2011, Toronto, Ontario, Canada.
ACM 978-1-4503-0797-0/11/08.
best performance. In such a context, applications can im-
prove their performance by selecting the most appropriate
paths. For instance, bulk data transfer peer-to-peer clients
will favor paths with the largest bandwidth so that the tar-
geted ﬁle will be downloaded faster.
A way to enable eﬃcient path selection for applications
would be to allow the network to cooperate with them [2,
7, 8]. Such a cooperation would also give the opportunity
to operators for managing incoming and outgoing traﬃc on
their networks. Indeed, according to their traﬃc engineer-
ing needs, operators could balance traﬃc from one link to
another.
We propose an informed path selection service called ISP-
Driven Informed Path Selection (IDIPS). IDIPS is generic
and does not require fundamental changes in the current
Internet architecture (only the clients need to implement a
library for using the service).
IDIPS is designed as a request/response service. The net-
work operators deploy servers that are conﬁgured with poli-
cies and that collect routing information (e.g., OSPF/ISIS,
BGP) and pro-actively measure the performance of popular
destinations. The clients that need to select a path send
requests to a server. A request contains a list of sources
and destinations and a ranking criterion. The server replies
with an ordered list of  tuples to
the client. This ranking is based on the current network
state and policies. The client then uses the ﬁrst pairs of the
list and potentially switches to the next one(s) in case of
problem.
An IDIPS client refers to any entity that has the possi-
bility to select paths to reach a destination or retrieve some
content. Peer-to-peer applications are clear candidate for
such an informed path selection service.
In Peer-to-peer,
IDIPS can be used to select the peers that minimize the
download completion time without harming the ISP by us-
ing costly links. The IDIPS related work in such a context
is P4P, Oracle and ALTO [8, 2, 7]. However, unlike these
related works, IDIPS is not limited to the peers selection
in P2P and can measure path performances. Consequently,
IDIPS can, for example, be used by dual stack hosts to de-
termine when IPv6 is faster than IPv4. Moreover, an in-
creasing number of networks are multihomed [1] and an im-
portant beneﬁt of multihoming as shown by Akella et al. is
that multihoming allows sites to choose better quality paths
over the Internet [4]. In this context, BGP can be coupled
with IDIPS to dynamically use the most qualitative links to
send traﬃc to or to attract traﬃc from, instead of relying
on static policies.
436Querying Module
Predicted 
values
Cost functions
Transactions
Front end
XORP
IDIPS
Prediction Module
Delay
Bandwidth
Packet loss
Measurement Module
UDP ping
Available Bandwidth
Netﬂow
Internet
Clients
c
e
s
/
q
e
r
#
 7000
 6000
 5000
 4000
 3000
 2000
 1000
 0
1
2
5
10
50
100
# destinations
Figure 1: IDIPS architecture
Figure 2: Load supported by the XORP implemen-
tation of IDIPS
2.
IDIPS ARCHITECTURE
IDIPS is a service that can be used in many situations.
This is why IDIPS presents a simple but powerful program-
ming interface and is implemented in XORP.
As illustrated in Fig. 1 IDIPS is composed of three in-
dependent modules: the Querying module, the Prediction
module, and the Measurement module. The Querying mod-
ule is directly in relation with the client as it is in charge of
receiving the requests, computing the path ranking based on
the ranking criterion provided by the client and the ISP traf-
ﬁc engineering requirements, and replying with the ranked
paths. The Measurement module is in charge of measuring
path performance metrics if required. Finally, the Predic-
tion module is used for predicting path performance (i.e.,
future performance metrics of a given path based on the
past measurements).
The ranking criterion provided by clients in their requests
might require measuring the network to obtain path per-
formance metrics, such as delay or bandwidth estimation.
The Measurement module pro-actively measures the most
important destinations on behalf of the clients. Those mea-
surements can be active (i.e., probes are sent in the network)
or passive (i.e., no additional traﬃc is injected). The deﬁ-
nition of important can be adapted to the needs (e.g., the
destination that carry most of the traﬃc).
It is possible to predict the performance of a given path
if it has been previously measured. This prediction task
is achieved by the Prediction module. Note that a given
measurement can be used in several diﬀerent predictions.
For instance, the previous delay measurements can serve for
predicting the delay, the jitter, or for determining whether
the path is reachable or not.
To enable ﬂexibility, ease of implementation and perfor-
mance, IDIPS clearly separates the Querying, Measurement
and Prediction modules. Each module communicates with
the other modules thanks to a standardized XRL interface.
Therefore, the handling of requests from the clients is strictly
separated from the prediction of path performance and path
performance prediction is separated from path measurements.
The module interfaces are abstracted into XORP XRL
interfaces such that anyone can add new measurement and
prediction modules to IDIPS. The choice of implementing
IDIPS in XORP makes the interaction between IDIPS, the
control planes and the data plane easy.
Fig. 2 shows the achievable performance of our XORP im-
plementation of IDIPS on a Intel Xeon E5430 at 2.66GHz
processor with 4GB of RAM. To determine the achievable
performance of our implementation, we repeated, for various
size of random destination lists, ten times a run of 1,000,000
ranking requests. Fig 2 shows the mean (and its 95th con-
ﬁdence interval) rate supported by IDIPS. We can see that
IDIPS can handle more than one thousands of requests per
second for reasonable destination list sizes which should be
suﬃcient to support a few tens of thousands clients. The
degradation of performance with the size of the destina-
tion list is mostly due to the marshaling and unmarshaling
events inside XORP. A detailed description and evaluation
of IDIPS can be found in [6].1
3. ACKNOWLEDGMENTS
This work is supported by the ECODE European Project.
4. REFERENCES
[1] S. Agarwal, C.-N. Chuah, and R. H. Katz. OPCA:
Robust interdomain policy routing and traﬃc control.
In Proc. IEEE OPENARCH, April 2003.
[2] V. Aggarwal, A. Feldmann, and C. Scheideler. Can ISPs
and P2P users cooperate for improved performance.
ACM SIGCOMM CCR, 37(3):29–40, July 2007.
[3] Akamai. Akamai. http://www.akamai.com.
[4] A. Akella, B. Maggs, S. Seshan, A. Shaikh, and
R. Sitaraman. On the performance beneﬁts of
multihoming route control. IEEE Transactions on
Networking, 16(1):96–104, February 2008.
[5] Limelight Networks. Limelight.
http://www.limelightnetworks.com/.
[6] D. Saucez, B. Donnet, and O. Bonaventure. ISP-Driven
Informed Path Selection. Technical report, 2011.
http://inl.info.ucl.ac.be/idips.
[7] J. Seedorf and E. Burger. Application-Layer Traﬃc
Optimization (ALTO) Problem Statement. RFC 5693
(Informational), 2009.
[8] H. Xie, Y. Yang, A. Krishnamurthy, Y. Liu, and
A. Silberschatz. P4P: Provider portal for applications.
In Proc. ACM SIGCOMM, Agust 2008.
1IDIPS code on http://inl.info.ucl.ac.be/idips
437