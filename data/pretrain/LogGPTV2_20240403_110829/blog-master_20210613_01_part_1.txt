## 重新发现PostgreSQL之美 - 22 黄帝内经  
### 作者        
digoal        
### 日期        
2021-06-13        
### 标签        
PostgreSQL , 平衡 , 非平衡 , 非对称 , 分区表       
----        
## 背景     
视频回放: https://www.bilibili.com/video/BV13B4y1M7bz/  
场景:   
电商、社交、SAAS软件行业.   
用户表、租户表、用户行为表.   
挑战:  
按企业、appid等hash分区可能出现倾斜, 例如某些APPID的数据量可能非常大, 热数据可能在同一个分区, saas的某些大企业可能被分到同一分区, 使得数据倾斜.   
PG 解决方案:  
非对称分区方法.   
## 例子  
1、创建1个分区表, 按appid hash分区  
```  
create unlogged table t (  
  appid int,  
  c1 int,  
  c2 int,  
  info text,  
  ts timestamp  
) partition by hash (appid);  
create unlogged table t0 partition of t for values with (modulus 4, REMAINDER 0);  
create unlogged table t1 partition of t for values with (modulus 4, REMAINDER 1);  
create unlogged table t2 partition of t for values with (modulus 4, REMAINDER 2);  
create unlogged table t3 partition of t for values with (modulus 4, REMAINDER 3);  
```  
2、写入2000万记录, 其中1000万appid=1, 制造倾斜  
```  
insert into t select random()*1000 , random()*100, random()*1000, md5(random()::text), clock_timestamp() from generate_series(1,10000000);  
insert into t select 1, random()*100, random()*1000, md5(random()::text), clock_timestamp() from generate_series(1,10000000);  
```  
```  
postgres=# \dt+ t*  
                                           List of relations  
 Schema |   Name   |       Type        |  Owner   | Persistence | Access method |  Size   | Description   
--------+----------+-------------------+----------+-------------+---------------+---------+-------------  
 public | t        | partitioned table | postgres | unlogged    |               | 0 bytes |   
 public | t0       | table             | postgres | unlogged    | heap          | 1014 MB |   
 public | t1       | table             | postgres | unlogged    | heap          | 189 MB  |   
 public | t2       | table             | postgres | unlogged    | heap          | 222 MB  |   
 public | t3       | table             | postgres | unlogged    | heap          | 186 MB  |   
```  
3、解决办法, 对于appid=1的分区, 再次按c1 hash分区, 其他分区保持不变.  
```  
begin;  
create unlogged table tt0(like t) PARTITION BY hash (c1);  
create unlogged table tt0_0 partition of tt0 for values with (modulus 4, REMAINDER 0);  
create unlogged table tt0_1 partition of tt0 for values with (modulus 4, REMAINDER 1);  
create unlogged table tt0_2 partition of tt0 for values with (modulus 4, REMAINDER 2);  
create unlogged table tt0_3 partition of tt0 for values with (modulus 4, REMAINDER 3);  
alter table t DETACH PARTITION t0;    
insert into tt0 select * from t0;  
alter table t attach partition tt0 FOR VALUES WITH ( MODULUS 4, REMAINDER 0 );   
end;  
```  
```  
postgres=# \d+ t  
                                            Unlogged partitioned table "public.t"  
 Column |            Type             | Collation | Nullable | Default | Storage  | Compression | Stats target | Description   
--------+-----------------------------+-----------+----------+---------+----------+-------------+--------------+-------------  
 appid  | integer                     |           |          |         | plain    |             |              |   
 c1     | integer                     |           |          |         | plain    |             |              |   
 c2     | integer                     |           |          |         | plain    |             |              |   
 info   | text                        |           |          |         | extended |             |              |   
 ts     | timestamp without time zone |           |          |         | plain    |             |              |   
Partition key: HASH (appid)  
Partitions: t1 FOR VALUES WITH (modulus 4, remainder 1),  
            t2 FOR VALUES WITH (modulus 4, remainder 2),  
            t3 FOR VALUES WITH (modulus 4, remainder 3),  
            tt0 FOR VALUES WITH (modulus 4, remainder 0), PARTITIONED  
postgres=# \d+ tt0  
                                           Unlogged partitioned table "public.tt0"  
 Column |            Type             | Collation | Nullable | Default | Storage  | Compression | Stats target | Description   
--------+-----------------------------+-----------+----------+---------+----------+-------------+--------------+-------------  
 appid  | integer                     |           |          |         | plain    |             |              |   
 c1     | integer                     |           |          |         | plain    |             |              |   
 c2     | integer                     |           |          |         | plain    |             |              |   
 info   | text                        |           |          |         | extended |             |              |   
 ts     | timestamp without time zone |           |          |         | plain    |             |              |   
Partition of: t FOR VALUES WITH (modulus 4, remainder 0)  
Partition constraint: satisfies_hash_partition('16552'::oid, 4, 0, appid)  
Partition key: HASH (c1)  
Partitions: tt0_0 FOR VALUES WITH (modulus 4, remainder 0),  
            tt0_1 FOR VALUES WITH (modulus 4, remainder 1),  
            tt0_2 FOR VALUES WITH (modulus 4, remainder 2),  
            tt0_3 FOR VALUES WITH (modulus 4, remainder 3)  
```  
可以看到appid=1的数据已经打散  
```  
postgres=# \dt+ t*  
                                           List of relations  
 Schema |   Name   |       Type        |  Owner   | Persistence | Access method |  Size   | Description   
--------+----------+-------------------+----------+-------------+---------------+---------+-------------  
 public | t        | partitioned table | postgres | unlogged    |               | 0 bytes |   
 public | t1       | table             | postgres | unlogged    | heap          | 189 MB  |   
 public | t2       | table             | postgres | unlogged    | heap          | 222 MB  |   
 public | t3       | table             | postgres | unlogged    | heap          | 186 MB  |   
 public | tt0      | partitioned table | postgres | unlogged    |               | 0 bytes |   
 public | tt0_0    | table             | postgres | unlogged    | heap          | 279 MB  |   
 public | tt0_1    | table             | postgres | unlogged    | heap          | 309 MB  |   
 public | tt0_2    | table             | postgres | unlogged    | heap          | 254 MB  |   
 public | tt0_3    | table             | postgres | unlogged    | heap          | 172 MB  |   
```  
4、检查执行计划, 分区被正常路由  
```  
postgres=# explain select * from t where appid=2;  
                         QUERY PLAN                           
------------------------------------------------------------  
 Seq Scan on t2 t  (cost=0.00..62947.58 rows=9965 width=53)  
   Filter: (appid = 2)  
(2 rows)  
postgres=# explain select * from t where appid=1;  
                                QUERY PLAN                                  
--------------------------------------------------------------------------  
 Append  (cost=0.00..337327.48 rows=10031536 width=53)  
   ->  Seq Scan on tt0_0 t_1  (cost=0.00..78943.27 rows=2771208 width=53)  
         Filter: (appid = 1)  
   ->  Seq Scan on tt0_1 t_2  (cost=0.00..87582.51 rows=3057186 width=53)  
         Filter: (appid = 1)  
   ->  Seq Scan on tt0_2 t_3  (cost=0.00..71825.61 rows=2499200 width=53)  
         Filter: (appid = 1)  
   ->  Seq Scan on tt0_3 t_4  (cost=0.00..48818.40 rows=1703942 width=53)  
         Filter: (appid = 1)  
(9 rows)  
postgres=# explain select * from t where appid=1 and c1=1;  
                           QUERY PLAN                             
----------------------------------------------------------------  
 Seq Scan on tt0_0 t  (cost=0.00..87595.73 rows=99763 width=53)  
   Filter: ((appid = 1) AND (c1 = 1))  
(2 rows)  
```  