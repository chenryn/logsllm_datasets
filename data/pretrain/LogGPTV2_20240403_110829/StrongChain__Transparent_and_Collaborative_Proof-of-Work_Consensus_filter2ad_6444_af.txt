TOM introduces and uses a greedy algorithm (called the
USENIX Association
28th USENIX Security Symposium    833
GHOSTDAG protocol) to determine the order of transac-
tions. This eliminates the applicability issues of SPECTRE,
but for the cost of slowing down transaction conﬁrmation
times. Combining advantages of PHANTOM and SPECTRE
into a full system was left by the authors as a future work.
Decentralization-oriented Schemes. Mining decentraliza-
tion was a goal of multiple previous proposals. One direc-
tion is to design mining such that miners do not have incen-
tive to outsource resources or forming coalitions. Perma-
coin [25] is an early attempt to achieve it where miners in-
stead of proving their work prove that their store (fragments
of) a globally-agreed ﬁle. Permacoin is designed such that:
a) payment private keys are bound to puzzle solutions – out-
sourcing private keys is risky for miners, b) sequential and
random storage access is critical for the mining efﬁciency,
thus it disincentives miners from outsourcing data. If the ﬁle
is valuable, then a side-effect of Permacoin is its usefulness,
as miners replicate the ﬁle.
The notion of non-outsourceable mining was further ex-
tended and other schemes were proposed [26, 50]. Miller
et al. [26] introduces “strongly non-outsourceable puzzles”
that aim to disincentivize pool creation by requiring all pool
participants to remain honest.
In short, with these puz-
zles any pool participant can steal the pool reward without
revealing its identity. The scheme relies on zero knowl-
edge proofs requiring a trusted setup and introducing sig-
niﬁcant computational overheads. The scheme is orthogo-
nal to StrongChain and could be integrated with easily inte-
grated with StrongChain, however, after a few years of their
introduction no system of this class was actually deployed at
scale; thus, we do not have any empirical results conﬁrming
their promised beneﬁts.
SmartPool is a different approach that was proposed by
Luu et al. [23]. In SmartPool, the functionality of mining
pools was implemented as a smart contract. Such an ap-
proach runs natively only on smart-contract platforms but it
allows to eliminate actual mining pools and their managers
(note that SmartPool still imposes fees for running smart
contracts), while preserving most beneﬁts of pool mining.
Rewarding Schemes for Mining Pools. Mining pools di-
vide the block reward (together with the transaction fees) in
such a way that each miner joining the pool is paid his fair
share in proportion to his contribution. Typically, the con-
tribution of an individual miner in the pool is witnessed by
showing weak solutions called shares.
There are various rewarding schemes that mining pools
employ. The simplest and most natural method is the propor-
tional scheme where the reward of a strong block is divided
in proportion to the numbers of shares submitted by the min-
ers. However, this scheme leads to pool hopping attacks [33].
To avoid this security issue, many other rewarding systems
are developed, including the Pay-per-last-N-shares (PPLNS)
scheme and its variants. We refer the reader to [37] for a
systematic analysis of different pool rewarding systems.
The reward mechanisms in StrongChain can be seen con-
ceptually as a mining pool built-in into the protocol. How-
ever, there are important differences between our design
and the mining pools. The most contrasting one is that in
StrongChain rewarding is not a zero-sum game and miners
do not share rewards. In mining pools, all rewards are shared
and this characteristic causes multiple in- and cross-pool at-
tacks that cannot be launched against our scheme. Further-
more, the miner collaboration within Bitcoin mining pools
is a “necessary evil”, while in StrongChain the collaboration
is beneﬁcial for miners and the overall system. We discuss
StrongChain and mining pools further in Section 6.2.
9 Conclusions
In this paper, we proposed a transparent and collaborative
proof-of-work protocol. Our approach is based on Nakamoto
consensus and Bitcoin, however, we modiﬁed their core de-
signs. In particular, in contrast to them, we take advantage
of weak solutions, which although they do not ﬁnalize a
block creation positively contribute to the blockchain proper-
ties. We also proposed a rewarding scheme such that miners
can beneﬁt from exchanging and appending weak solutions.
These modiﬁcations lead to a more secure, fair, and efﬁcient
system. Surprisingly, we show that our approach helps with
seemingly unrelated issues like the freshness property. Fi-
nally, our implementation indicates the efﬁciency and de-
ployability of our approach.
Incentives-oriented analysis of consensus protocols is a
relatively new topic and in the future we would like to extend
our work by modeling our protocol with novel frameworks
and tools. Another topic worth investigating in future is how
to combine StrongChain with systems solving other draw-
backs of Nakamoto consensus [10, 19, 21], or how to mimic
the protocol in the proof-of-stake setting.
Acknowledgment
We thank the anonymous reviewers and our shepherd Joseph
Bonneau for their valuable comments and suggestions.
This work was supported in part by the National Research
Foundation (NRF), Prime Minister’s Ofﬁce, Singapore, un-
der its National Cybersecurity R&D Programme (Award No.
NRF2016NCR-NCR002-028) and administered by the Na-
tional Cybersecurity R&D Directorate, and by ST Elec-
tronics and NRF under Corporate Laboratory @ University
Scheme (Programme Title: STEE Infosec - SUTD Corporate
Laboratory).
References
[1] L. Bahack. Theoretical Bitcoin attacks with less than
half of the computational power (draft). arXiv preprint
834    28th USENIX Security Symposium
USENIX Association
arXiv:1312.7013, 2013.
[2] D. Bayer, S. Haber, and W. S. Stornetta. Improving the
In
efﬁciency and reliability of digital time-stamping.
Sequences II. Springer, 1993.
[3] A. Boverman.
Timejacking & Bitcoin.
https://culubas.blogspot.sg/2011/05/
timejacking-bitcoin_802.html, 2011.
[4] M. Carlsten, H. A. Kalodner, S. M. Weinberg, and
A. Narayanan. On the instability of Bitcoin without
In Proceedings of the 2016 ACM
the block reward.
SIGSAC Conference on Computer and Communica-
tions Security, 2016.
[5] N. T. Courtois and L. Bahack. On subversive miner
strategies and block withholding attack in Bitcoin digi-
tal currency. arXiv preprint arXiv:1402.1718, 2014.
[6] J. R. Douceur. The Sybil attack. In International work-
shop on peer-to-peer systems. Springer, 2002.
[7] S. Dunbar.
Random sums of
random vari-
http://www.math.unl.edu/~sdunbar1/
ables.
ProbabilityTheory/Lessons/Conditionals/
RandomSums/randsum.shtml.
[8] C. Dwork and M. Naor. Pricing via processing or com-
batting junk mail. In Annual International Cryptology
Conference. Springer, 1992.
[9] I. Eyal. The miner’s dilemma. In 2015 IEEE Sympo-
sium on Security and Privacy (SP). IEEE, 2015.
[10] I. Eyal, A. E. Gencer, E. G. Sirer, and R. Van Renesse.
In Pro-
Bitcoin-NG: A scalable blockchain protocol.
ceedings of NSDI, 2016.
[11] I. Eyal and E. G. Sirer. Majority is not enough: Bit-
coin mining is vulnerable. In International conference
on ﬁnancial cryptography and data security. Springer,
2014.
[12] C. Farivar.
after
limit
Bitcoin pool GHash.io commits
its 51% breach.
to 40% hashrate
https://arstechnica.com/information-
technology/2014/07/bitcoin-pool-ghash-io-
commits-to-40-hashrate-limit-after-its-
51-breach/, 2014.
[15] A. E. Gencer, S. Basu, I. Eyal, R. van Renesse, and
E. G. Sirer. Decentralization in Bitcoin and Ethereum
networks. arXiv preprint arXiv:1801.03998, 2018.
[16] A. Gervais, G. O. Karame, K. W¨ust, V. Glykantzis,
H. Ritzdorf, and S. Capkun. On the security and perfor-
mance of proof of work blockchains. In Proceedings of
the 2016 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2016.
[17] A. Gervais, H. Ritzdorf, G. O. Karame, and S. Capkun.
Tampering with the delivery of blocks and transactions
in Bitcoin. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Secu-
rity. ACM, 2015.
[18] G. O. Karame, E. Androulaki, and S. Capkun. Double-
spending fast payments in Bitcoin. In Proceedings of
the 2012 ACM conference on Computer and communi-
cations security. ACM, 2012.
[19] E. K. Kogias, P. Jovanovic, N. Gailly,
I. Khofﬁ,
L. Gasser, and B. Ford. Enhancing bitcoin security
and performance with strong consistency via collec-
In 25th USENIX Security Symposium
tive signing.
(USENIX Security 16), 2016.
[20] Y. Lewenberg, Y. Sompolinsky, and A. Zohar. Inclusive
block chain protocols. In International Conference on
Financial Cryptography and Data Security. Springer,
2015.
[21] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert,
and P. Saxena. A secure sharding protocol for open
blockchains. In Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Secu-
rity. ACM, 2016.
[22] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and
A. Hobor. On power splitting games in distributed com-
putation: The case of Bitcoin pooled mining. In Com-
puter Security Foundations Symposium (CSF), 2015
IEEE 28th. IEEE, 2015.
[23] L. Luu, Y. Velner, J. Teutsch, and P. Saxena. Smartpool:
Practical decentralized pooled mining. In 26th USENIX
Security Symposium (USENIX Security 17). USENIX
Association, 2017.
[13] Gavin Andresen.
Faster blocks vs bigger blocks.
https://bitcointalk.org/index.php?topic=
673415.msg7658481#msg7658481, 2014.
[24] R. C. Merkle. A digital signature based on a conven-
tional encryption function. In Proceedings of Advances
in Cryptology, 1988.
[14] Gavin Andresen. Weak block thoughts.
https:
//lists.linuxfoundation.org/pipermail/
bitcoin-dev/2015-September/011157.html,
2015.
[25] A. Miller, A. Juels, E. Shi, B. Parno, and J. Katz. Per-
macoin: Repurposing Bitcoin work for data preserva-
tion. In 2014 IEEE Symposium on Security and Privacy
(SP). IEEE, 2014.
USENIX Association
28th USENIX Security Symposium    835
[26] A. Miller, A. Kosba, J. Katz, and E. Shi. Nonoutsource-
able scratch-off puzzles to discourage Bitcoin mining
coalitions. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Secu-
rity. ACM, 2015.
[27] M. M¨oser and R. B¨ohme. Trends, tips, tolls: A longi-
tudinal study of bitcoin transaction fees. In Financial
Cryptography Workshops, 2015.
[28] S. Nakamoto. Bitcoin: A peer-to-peer electronic cash
system, 2008.
[29] A. Narayanan, J. Bonneau, E. Felten, A. Miller, and
S. Goldfeder. Bitcoin and cryptocurrency technologies:
A comprehensive introduction. Princeton University
Press, 2016.
[30] T. Nolan. Distributing low POW headers. https:
//lists.linuxfoundation.org/pipermail/
bitcoin-dev/2013-July/002976.html, 2013.
[31] K. Papagiannaki, S. Moon, C. Fraleigh, P. Thiran, and
C. Diot. Measurement and analysis of single-hop delay
on an IP backbone network. IEEE Journal on Selected
Areas in Communications, 21(6), 2003.
[32] R. Pass and E. Shi. Fruitchains: A fair blockchain. In
Proceedings of the ACM Symposium on Principles of
Distributed Computing. ACM, 2017.
[33] Raulo.
Optimal pool abuse strategy.
http://
bitcoin.atspace.com/poolcheating.pdf, 2011.
[34] F. Ritz and A. Zugenmaier. The impact of uncle re-
wards on selﬁsh mining in Ethereum. arXiv preprint
arXiv:1805.08832, 2018.
[35] P. R. Rizun. Subchains: A technique to scale Bitcoin
and improve the user experience. Ledger, 1, 2016.
[36] K. Rosenbaum. Weak Blocks – The Good And The
Bad. http://popeller.io/index.php/2016/01/
19/weak-blocks-the-good-and-the-bad/, 2016.
[37] M. Rosenfeld. Analysis of Bitcoin pooled mining re-
ward systems. arXiv preprint arXiv:1112.4980, 2011.
[38] R. Russell.
Weak block simulator
for Bit-
https://bitcointalk.org/index.php?
coin.
topic=179598.0, 2017.
[40] Y. Sompolinsky, Y. Lewenberg, and A. Zohar. SPEC-
TRE: Serialization of proof-of-work events: conﬁrm-
ing transactions via recursive elections, 2016.
[41] Y. Sompolinsky and A. Zohar. Accelerating Bitcoin’s
transaction processing. Fast Money Grows on Trees,
Not Chains, 2013.
[42] Y. Sompolinsky and A. Zohar.
PHANTOM,
GHOSTDAG: Two scalable BlockDAG protocols.
Cryptology ePrint Archive, Report 2018/104, 2018.
https://eprint.iacr.org/2018/104.
[43] P. Szalachowski.
(short paper) towards more reliable
Bitcoin timestamps. In Proceedings of the Crypto Val-
ley Conference on Blockchain Technology (CVCBT),
2018.
[44] E.
team. A Next-Generation Smart Contract and
https:
Decentralized Application Platform.
//github.com/ethereum/wiki/wiki/White-
Paper#modified-ghost-implementation, 2018.
[45] TierNolan (Pseudonymous). Decoupling Transactions
https://bitcointalk.org/index.
and PoW.
php?topic=179598.0, 2013.
[46] P. Todd.
Near-block broadcasts for proof of tx
propagation.
https://lists.linuxfoundation.
org/pipermail/bitcoin-dev/2013-September/
003275.html, 2013.
[47] I. Tsabary and I. Eyal. The gap game. In Proceedings of
the 2018 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2018.
[48] G. Wood. Ethereum: A secure decentralised gener-
alised transaction ledger. Ethereum project yellow pa-
per, 151, 2014.
[49] A. Zamyatin, N. Stifter, P. Schindler, E. Weippl, and
W. J. Knottenbelt. Flux: Revisiting near blocks for
proof-of-work blockchains. Cryptology ePrint Archive,
Report 2018/415, 2018.
https://eprint.iacr.
org/2018/415/20180529:172206.
[50] G. Zeng, S. M. Yiu, J. Zhang, H. Kuzuno, and M. H.
Au. A nonoutsourceable puzzle under GHOST rule. In
2017 15th Annual Conference on Privacy, Security and
Trust (PST). IEEE, 2017.
[39] A. Sapirshtein, Y. Sompolinsky, and A. Zohar. Optimal
In International
selﬁsh mining strategies in Bitcoin.
Conference on Financial Cryptography and Data Se-
curity. Springer, 2016.
[51] R. Zhang and B. Preneel. Lay down the common met-
rics: Evaluating proof-of-work consensus protocols’
security. In 2019 IEEE Symposium on Security and Pri-
vacy (SP). IEEE, 2019.
836    28th USENIX Security Symposium
USENIX Association