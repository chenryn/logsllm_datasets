[注意]{.term}
:   [**TuneD**]{.strong}
    包含了作为启用或禁用调优配置文件的一部分来运行任何 shell
    命令的功能。这可让您使用尚未集成到 [**TuneD**]{.strong} 的功能扩展
    TuneD 配置集。
    您可以使用 `script`{.literal} 插件指定任意 shell 命令。
:::
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#available-tuned-plug-ins_customizing-tuned-profiles}可用的 TuneD 插件 {.title}
:::
本节列出了当前在 [**TuneD**]{.strong} 中提供的所有监控和调优插件。
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_monitoring_plug_ins}监控插件
目前，实施了以下监控插件：
::: variablelist
[`disk`{.literal}]{.term}
:   每个设备获取磁盘负载（IO 操作数）和测量间隔。
[`net`{.literal}]{.term}
:   每个网卡获取网络负载（传输数据包的数量）和测量间隔。
[`load`{.literal}]{.term}
:   获取每个 CPU 的 CPU 负载和测量间隔。
:::
### []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#_tuning_plug_ins}调优插件
目前，实施了以下调优插件。只有其中一些插件实施动态性能优化。列出插件支持的选项：
::: variablelist
[`cpu`{.literal}]{.term}
:   将 CPU 调控器设置为 `governor`{.literal} 选项指定的值，并根据 CPU
    负载动态更改电源管理服务质量(PM QoS)CPU Direct Memory
    Access(DMA)延迟。
    如果 CPU 负载低于 `load_threshold`{.literal}
    选项指定的值，则延迟设置为由 `latency_high`{.literal}
    选项指定的值，否则它将设置为 `latency_low`{.literal} 指定的值。
    您还可以强制对特定值强制延迟并阻止它动态更改。要做到这一点，将
    `force_latency`{.literal} 选项设置为所需的延迟值。
[`eeepc_she`{.literal}]{.term}
:   根据 CPU 负载动态设置前端总线(FSB)速度。
    此功能可在一些笔记本电脑中找到，也称为 ASUS Super Hybrid
    Engine(SHE)。
    如果 CPU 负载较低或等于 `load_threshold_powersave`{.literal}
    选项指定的值，则插件会将 FSB 速度设置为 `she_powersave`{.literal}
    选项指定的值。如果 CPU 负载较高或等于
    `load_threshold_normal`{.literal} 选项指定的值，它会将 FSB
    速度设置为 `she_normal`{.literal} 选项指定的值。
    不支持静态调优，如果 [**TuneD**]{.strong}
    不检测到对这个功能的硬件支持，则插件会被透明禁用。
[`net`{.literal}]{.term}
:   将 Wake-on-LAN 功能配置为 `wake_on_lan`{.literal}
    选项指定的值。它使用与 `ethtool`{.literal}
    实用程序相同的语法。它还会根据接口利用率动态更改接口速度。
[`sysctl`{.literal}]{.term}
:   设置由插件选项指定的各种 `sysctl`{.literal} 设置。
    语法为 `name=value`{.literal}，其中
    [*[name]{.replaceable}*]{.emphasis} 与 `sysctl`{.literal}
    实用程序提供的名称相同。
    如果您需要更改 [**TuneD**]{.strong}
    中其他插件所涵盖的系统设置，请使用 `sysctl`{.literal}
    插件。如果某些特定插件提供了设置，首选这些插件。
[`usb`{.literal}]{.term}
:   将 USB 设备的自动暂停超时设置为 `autosuspend`{.literal}
    参数指定的值。
    值 `0`{.literal} 表示禁用自动暂停。
[`vm`{.literal}]{.term}
:   启用或禁用透明大内存页，具体取决于 transparent
    `_hugepages`{.literal} 选项的值。
    `transparent_hugepages`{.literal} 选项的有效值为：
    ::: itemizedlist
    -   \"always\"
    -   \"never\"
    -   \"madvise\"
    :::
[`audio`{.literal}]{.term}
:   将音频解码器的 autosuspend timeout 设置为 `timeout`{.literal}
    选项指定的值。
    目前，支持 `snd_hda_intel`{.literal} 和 `snd_ac97_codec`{.literal}
    codec。值 `0`{.literal} 表示自动暂停已被禁用。您还可以通过将
    布尔值选项 `reset_controller`{.literal} 设置为 `true`{.literal}
    来强制实施控制器重置。
[`disk`{.literal}]{.term}
:   将磁盘电梯设置为 `elevator`{.literal} 选项指定的值。
    它还设置：
    ::: itemizedlist
    -   `apm`{.literal} 选项指定的值的 APM
    -   调度程序对由 `scheduler_quantum`{.literal} 选项指定的值进行量化
    -   磁盘 spindown 的超时值由 `spindown`{.literal} 选项指定的值
    -   磁盘的 readahead 会到 `readahead`{.literal} 参数指定的值
    -   当前磁盘 readahead 值乘以 `readahead_multiply`{.literal}
        选项指定的常数
    :::
    此外，此插件根据当前的驱动器利用率动态地更改驱动器的高级电源管理和机超时设置。动态调优可以由布尔值选项
    `动态`{.literal} 控制，默认情况下是启用的。
[`scsi_host`{.literal}]{.term}
:   SCSI 主机的选项调整。
    它将积极链接电源管理(ALPM)设置为 `alpm`{.literal} 选项指定的值。
[`mounts`{.literal}]{.term}
:   根据 `disable_barriers`{.literal} 选项的布尔值启用或禁用挂载障碍。
[`script`{.literal}]{.term}
:   加载或卸载配置集时，执行外部脚本或二进制代码。您可以选择任意可执行文件。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    `script`{.literal} 插件主要被用来与更早的版本兼容。如果其他
    [**TuneD**]{.strong} 插件涵盖所需的功能，则首选其他 TuneD 插件。
    :::
    [**TuneD**]{.strong} 使用以下参数之一调用可执行文件：
    ::: itemizedlist
    -   在载入配置集时 `start`{.literal}
    -   在卸载配置集时 `stop`{.literal}
    :::
    您需要在可执行文件中正确实施 `stop`{.literal} 操作，并恢复您在
    `start`{.literal} 操作过程中更改的所有设置。否则，在更改
    [**TuneD**]{.strong} 配置集后回滚步骤将无法正常工作。
    Bash 脚本可以导入 `/usr/lib/tuned/functions`{.literal} Bash
    库，并使用那里定义的功能。只在由 [**TuneD**]{.strong}
    原生提供的功能中使用这些功能。如果函数名称以下划线开头，如
    `_wifi_set_power_level`{.literal}，请考虑函数私有且不要在脚本中使用，因为它可能会在以后有所变化。
    使用插件配置中的 `script`{.literal} 参数指定可执行文件的路径。
    ::: example
    []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048839937840}
    **例 2.6. 从配置集运行 Bash 脚本**
    ::: example-contents
    要运行位于配置集目录中的 `script.sh`{.literal} 的 Bash
    脚本，请使用：
    ``` screen
    [script]
    script=${i:PROFILE_DIR}/script.sh
    ```
    :::
    :::
[`sysfs`{.literal}]{.term}
:   设置由插件选项指定的各种 `sysfs`{.literal} 设置。
    语法为 `name=value`{.literal}，其中
    [*[name]{.replaceable}*]{.emphasis} 是要使用的 `sysfs`{.literal}
    路径。
    如果需要更改其他插件未涵盖的一些设置，请使用此插件。如果插件涵盖所需的设置，则首选插件。
[`video`{.literal}]{.term}
:   在视频卡中设置各种电源保存级别。目前，只支持 Radeon 卡。
    可以使用 `radeon_powersave`{.literal} 选项指定节能级别。支持的值有：
    ::: itemizedlist
    -   `default`{.literal}
    -   `auto`{.literal}
    -   `低`{.literal}
    -   `mid`{.literal}
    -   `high`{.literal}
    -   `dynpm`{.literal}
    -   `dpm-battery`{.literal}
    -   `dpm-balanced`{.literal}
    -   `dpm-perfomance`{.literal}
    :::
    详情请查看
    [www.x.org](http://www.x.org/wiki/RadeonFeature#KMS_Power_Management_Options){.link}。请注意，此插件是实验性的，选项可能会在以后的版本中有所变化。
[`bootloader`{.literal}]{.term}
:   在内核命令行中添加选项。这个插件只支持 GRUB 2 引导装载程序。
    `grub2_cfg_file`{.literal} 选项指定 GRUB 2
    配置文件的自定义非标准位置。
    内核选项会添加到当前 GRUB
    配置及其模板中。需要重新引导系统才能使内核选项生效。
    切换到另一个配置集或手动停止 `tuned`{.literal}
    服务会删除附加选项。如果您关闭或重启系统，则 kernel 选项会在
    `grub.cfg`{.literal} 文件中保留。
    内核选项可使用以下语法指定：
    ``` screen
    cmdline=arg1 arg2 ... argN
    ```
    ::: example
    []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048850364688}
    **例 2.7. 修改内核命令行**
    ::: example-contents
    例如，要将 `quiet`{.literal} kernel 选项添加到 [**TuneD**]{.strong}
    配置集中，请在 `tuned.conf`{.literal} 文件中包括以下行：
    ``` screen
    [bootloader]
    cmdline=quiet
    ```
    以下是在内核命令行中添加 `isolcpus=2`{.literal}
    选项的自定义配置集示例：
    ``` screen
    [bootloader]
    cmdline=isolcpus=2
    ```
    :::
    :::
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#variables-in-tuned-profiles_customizing-tuned-profiles}TuneD 配置集中的变量 {.title}
:::
激活 [**TuneD**]{.strong} 配置集时，在运行时扩展的变量。
使用 [**TuneD**]{.strong} 变量可减少 [**TuneD**]{.strong}
配置集中必要输入的数量。
[**TuneD**]{.strong} 配置集中没有预定义的变量。您可以通过在配置集中创建
`[variables]`{.literal} 部分并使用以下语法来定义您自己的变量：
``` screen
[variables]
variable_name=value
```
要扩展配置集中的变量的值，请使用以下语法：
``` screen
${variable_name}
```
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048827600752}
**例 2.8. 使用变量隔离 CPU 内核**
::: example-contents
在以下示例中，`${isolated_cores}`{.literal} 变量扩展至 `1,2`{.literal};
因此内核使用 `isolcpus=1,2`{.literal} 选项引导：
``` screen
[variables]
isolated_cores=1,2
[bootloader]
cmdline=isolcpus=${isolated_cores}
```
变量可以在单独的文件中指定。例如，您可以在 `tuned.conf`{.literal}
中添加以下行：
``` screen
[variables]
include=/etc/tuned/my-variables.conf
[bootloader]
cmdline=isolcpus=${isolated_cores}
```
如果您将 `isolated_cores=1,2`{.literal} 选项添加到
`/etc/tuned/my-variables.conf`{.literal} 文件，则内核会使用
`isolcpus=1,2`{.literal} 选项引导。
:::
:::
::: itemizedlist
**其他资源**
-   `tuned.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#built-in-functions-in-tuned-profiles_customizing-tuned-profiles}TuneD 配置集中的内置功能 {.title}
:::
当激活 [**TuneD**]{.strong} 配置集时，内置功能会在运行时扩展。
您可以：
::: itemizedlist
-   与 [**TuneD**]{.strong} 变量一起使用各种内置功能
-   在 Python 中创建自定义功能，并以插件的形式将它们添加到
    [**TuneD**]{.strong}
:::
要调用函数，请使用以下语法：
``` screen
${f:function_name:argument_1:argument_2}
```
要扩展配置集和 `tuned.conf`{.literal} 文件所在的目录路径，请使用
`PROFILE_DIR`{.literal} 功能，它需要特殊语法：
``` screen
${i:PROFILE_DIR}
```
::: example
[]{#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance.html#idm140048719588368}