# 【技术分享】KaliRouter安装与使用全指南
|
##### 译文声明
本文是翻译文章，文章来源：github.com/koenbuyens
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
****
译者：[WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**写在前面的话**
KaliRouter可以将你的Kali
Linux设备变成一台路由器，你将不仅能够记录下所有的网络流量（[Wireshark](https://www.wireshark.org/)），而且还可以将HTTP和HTTPS流量发送至一个拦截代理，例如BurpSuite等等。
**安装**
我们会将Kali
Linux配置成一台代理型路由器，连接至这台“路由器”的客户端（例如嵌入式设备和手机App）都可以正常进行网络通信，但是其中的某些数据包将会被我们的Kali
Linux设备所拦截并使用Wireshark进行监控，并重定向至代理服务器。Kali
Linux设备以及BurpSuite都将以透明代理的形式运行，客户端不会感受到它们的存在。整个运行架构如下图所示:
在配置我们的Kali Linux之前，我们需要配置[ **VMWare**](https://www.vmware.com/) 和网络接口。
1\. 我们在VMWare中运行Kali Linux，并将网络改为桥接模式，这样可以让Kali
Linux直接链接到网络之中，而被监控的设备（应用程序或手机）同样可以正常连接至网络。
2\. 我们需要连接两个适配器（以太网和WiFi），并给Kali分配USB适配器，我们选择使用的是[ **Ethernet LAN Network
Adapter ASIX AX88179**](https://www.amazon.com/Plugable-Gigabit-Ethernet-Network-Adapter/dp/B00AQM8586) 和[ **Atheros UB91C
USB无线适配器**](https://www.amazon.com/gp/product/B004Y6MIXS/ref=oh_aui_detailpage_o00_s00?ie=UTF8&psc=1)
。其实你可以使用任何一款Linux兼容的USB无线网卡，只要它支持混杂模式即可。
**将Kali Linux配置成路由器**
我们的Kali Linux设备会将USB网络接口的流量路由到Kali自己的网络连接，创建路由器的方法如下。
开始配置之前，我们需要先查看本机的网络接口。我们可以使用命令ifconfig查看插入USB适配器之前和之后的设备状态。
    $ ifconfig -a
我们的以太网适配器一般会是eth1，而WiFi适配器一般是wlan0。
我们需要配置network-manager服务，告诉该服务我们会将适配器的MAC地址添加到/etc/NetworkManager/NetworkManager.conf文件的unmanaged-devices参数之中，并接管我们自己添加的接口。
    [keyfile] unmanaged-devices=mac:d8:eb:97:b6:ce:12;mac:56:6b:a2:90:c4:b9
接下来，重启网络服务，这样设备会进入“无管理”状态。
    $ /etc/init.d/networking restart
**以太网配置**
在创建监听网络之前，我们需要选择一个合适的网络地址和子网掩码。我们这里要选择一个与Kali所在网络IP范围（eth0）不同的地址空间，以此来确保受监控设备的IP地址不会跟我们的监控网络发生冲突。在我们的配置环境中，我们选择的是172.16.0.0/12。
由于我们需要让我们的无线网络和有线网络处于同一网络中，我们选择使用[ **bridge-utils**](https://help.ubuntu.com/community/NetworkConnectionBridge)
工具在这两者之间搭建一个桥梁。
    $ apt-get install bridge-utils
接下来，删除任何分配给有线网络接口（eth1）的IP地址。
    $ ip addr flush dev eth1
创建一个名为br0的桥接接口。
    $ brctl addbr br0
将我们的有线接口eth1添加到桥接接口br0。
    $ brctl addif br0 eth1
接下来，开启桥接接口br0。
    $ ip link set dev br0 up
根据我们选择的IP地址空间，给这个br0接口分配一个IP地址。因为它的功能是作为被监控设备的网关，所以我们选择172.16.0.1。
    $ ip addr add 172.16.0.1/12 dev br0
**Wi-Fi数据链路层**
配置好以太网接口之后，使用hostapd程序创建一个无线接入点。使用apt-get命令安装hostapd（关于hostapd的使用和配置信息，请参考【[
**这份文档**](http://wireless.kernel.org/en/users/Documentation/hostapd) 】）：
    $ apt-get install hostapd
然后使用下列信息创建配置文件hostapd.conf：
    # create a wireless network with this interface; change it if your wireless card is not wlan0 interface=wlan0 # change this if a different bridge interface was chosen bridge=br0 # the name of our wireless network ssid=Monitor-Network # Change the passphrase to something you like wpa_passphrase=Monitor-Network # the driver used driver=nl80211 auth_algs=3 # the wireless channel we listen on. channel=7 driver=nl80211 # the mode we use (g) hw_mode=g # we don't log logger_stdout=-1 logger_stdout_level=2 max_num_sta=5 rsn_pairwise=CCMP wpa=2 wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP CCMP
创建完无线接口wlan0之后，我们要启用无线接入点：
    $ ip link set dev wlan0 up
接下来，让hostapd程序开启监控网络：
    $ hostapd ./hostapd.conf -B
**网络配置**
配置好无线和有线网络之后，我们要开启内核选项以支持IP转发功能，然后配置iptables将所有的网络数据包转发至该接口。
    $ sysctl -w net.ipv4.ip_forward=1 $ iptables -P FORWARD ACCEPT $ iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
**网络服务**
我们使用[ **dnsmasq**](http://www.thekelleys.org.uk/dnsmasq/doc.html)
来作为我们的DNS和DHCP服务器。使用下列命令安装dsnmasq：
    $ apt-get install dnsmasq
然后使用下列信息创建并配置dnsmasq.conf文件：
    # listen to this interface; change it if a different bridge name was chosen interface=br0 # give IP addresses, lease is valid for 8 hours dhcp-range=172.16.0.10,172.31.255.254,8h # router dhcp-option=3,172.16.0.1 # dns server dhcp-option=6,172.16.0.1 # upstream DNS server server=8.8.8.8 log-queries log-dhcp  # include addresses address=/attacker.com/172.16.0.1
配置完成之后，我们需要重启dnsmasq守护进程：
    $ service dnsmasq restart
**嗅探并拦截流量**