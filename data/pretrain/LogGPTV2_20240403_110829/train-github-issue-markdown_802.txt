 **Do you want to request a _feature_ or report a _bug_?**  
Bug
**What is the current behavior?**  
I'm migrating an application from Webpack 1 to 2, where we on and off have
updated code from `module.exports` to ES2015 `import/export`. Here and there,
we got a mix. When cases like this occurs, Webpack seem to export/import
modules in a non-backwards compatible way.  
In the example repo I've made, I've been able to reproduce the bug.  
`__WEBPACK_IMPORTED_MODULE_0__deps_a__` has object set. However,
`__WEBPACK_IMPORTED_MODULE_0__deps_a__["default"]` is `undefined`.
**If the current behavior is a bug, please provide the steps to reproduce.**
  1. Here's a branch with the issue: https://github.com/jouni-kantola/webpack-output-by-build-type/tree/import-module-exports-mix
  2. `npm run serve` (to build, which doesn't cause errors: `npm run build`)
  3. I've made comments in the code where the bug is occurs and what can be done in the code itself to work around it
**What is the expected behavior?**  
It would be easier to migrate old code running with Webpack 1 ifmixing
`imports/module.export` works. However, I fully understand if you feel it's up
to the applications to not do weird things.
**Please mention other relevant information such as the browser version,
Node.js version, Operating System and programming language.**  
OS: Windows 10 + MacOS Sierra 10.12.1  
Node: Windows 10 > Node v6.4.0, MacOS > Node v6.8.0  
Deps:
    "devDependencies": {
        "babel-core": "^6.21.0",
        "babel-loader": "^6.2.10",
        "babel-preset-env": "^1.1.4",
        "html-webpack-plugin": "^2.24.1",
        "webpack": "^2.2.0-rc.3",
        "webpack-dev-server": "^2.2.0-rc.0"
      }