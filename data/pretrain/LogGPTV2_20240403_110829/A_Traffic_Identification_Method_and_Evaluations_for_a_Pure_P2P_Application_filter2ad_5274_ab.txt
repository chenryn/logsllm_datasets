10 seconds.
– All connections to the service port numbers are disconnected by a ﬁrewall
in the PC B so as not to transfer any ﬁles to the Winny network.
– The traﬃc is measured by Snort version 2.0.
4 Proposed Identiﬁcation Method for Pure P2P Traﬃc
Traditional Internet applications, WWW, FTP, E-mail, etc, are based on the
client/server computing model. In thise computing model, each of the commu-
nication entitiesy is categorized by only one of the two roles, a server or a client.
60
S. Ohzahata et al.
Internet
Winny Network
a
b
S
S
c
S
(1)
S
10001
-10005  
B
(2)
(4)
S
(3)
C
(4)
(3)
S
D
W.X.Y.Z
Stub network
Fig. 2. Procedures of our proposed identiﬁcation method 1
The server computer only supplies its service and the client computer only re-
ceives the service. When the communications start, the client computer accesses
the service port of server computer with using its client port, and the server
serves provides its service over the connection. Thus, only one identiﬁcation of
the connection between them identiﬁcation (a tuple of source/destination IP ad-
dresses, source/destination port numbers and protocol number) between them
is used in the communications. In pure P2P communications, however, one peer
plays acts as both a server and a client simultaneously in the communications
simultaneously, and there are two kinds of connections between the peers during
their communications. Our traﬃc identiﬁcation method focuses on the access
relations to the ports among the peers.
4.1
Proposed Identiﬁcation Method 1
The basic idea of our proposed identiﬁcation method is a decoy peer which
collects all pairs of IP addresses and service ports of the Winny peers. However,
collecting all of these is diﬃcult because of the restricted search capacity of the
decoy peers. Therefore, we need to ﬁnd the missing Winny peers by using a
server/client relationship between the peers.
Figure 2 shows the procedures for our proposed identiﬁcation method. We
place the Peer B as a decoy peer in the stub network whose IP address is
W.X.Y.Z and the service port numbers are assigned as 10001–10005 for each
decoy peer. The service ports and client ports are depicted by the circles beside
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
61
the PCs. As soon as the decoy peer joins the Winny network, the peers in the
Winny network access the decoy peer and the decoy peer continuously accesses
the peers in the Internet to conﬁgure the overlay networks. Each arrow corre-
sponds to a connection made by one peer to another peers service port. Thus,
these accesses are measured in the PCs A and B, as shown in Figure 1. The
procedures are described below.
First we identify the service port number and IP address of the Winny peers
connected to the Internet. In the procedures (1) and (2), only log B is used.
(1) When the decoy peer B joins the Winny network, some of the Winny peers
in the Internet access the service port of the decoy peer B. The accesses
come from the client port, and we can only identify the IP address of the
Winny peers. In this connection, the decoy peer B functions as the server.
We add the IP addresses to database α (this applies peer a IP, peer b IP and
peer c IP).
(2) Using its client port, the decoy peer B accesses the service ports of the Winny
peers in the Internet. If the decoy peer B access the peers in database α, we
can identify the service port and IP address of the Winny peers (including
peers in the stub network). We add the IP addresses and service ports to
database β (this applies peer a IP:service port number, peer b IP:service port
number and peer c IP:service port number). In this connection, the peer B
functions as a client then the two relations are established between the two
peers.
Next, we identify the IP address and the service port number of the Winny
users in the stub network, and deﬁne “Winny” and “Port 0” peers in the following
procedures. Port 0 setting is originally prepared for the peers which are behind
the ﬁrewall or NAT, but many of the Port 0 users use the setting not to upload
any ﬁles to the other peers. This is because many shared ﬁles in the Winny
network are illegal and these ﬁles are also automatically shared. In addition, in
most cases a ﬁle is transferred via a “Winny” peer, and then such “Winny” peers
will unintentionally upload and cache these illegal ﬁles.
The procedures (3) and (4) use log A and database β.
(3) In the case of a node inside the stub network which accesses a service port
of a peer in database β, the node access has the capability of a Winny
peer. However, we deﬁne a Winny peer in the stub network as a peer which
accesses more than two peers in database β, to improve the identiﬁcation
probability. In addition, in this case, the access is initiated by a node inside
the stub network, and the accessed port is a service port of the peer. Then,
we ﬁnd that the source IP address node is a Winny peer and add its IP
address to database γ (this applies to peer C IP and peer D IP).
(4) The Winny peers in database β access the service ports of peers in database γ.
If more than two peers in database β access an identical IP address (database
γ) and port number in the stub network of IP and service port number may
be identiﬁed. We deﬁne the peer as “Winny” in the stub network, for the
following description, and add the peers to database δ (peer C IP:service
62
S. Ohzahata et al.
Fig. 3. Relationship between databases of Winny peers
port number and peer D IP:service port number). However, some peers in
database β do not return to the peers in database γ by using their client
ports.
This is because some Winny peers do not prepare their service port in
their setting. We call these peers in the stub network, which do not open
their service port to the Winny networks, “Port 0” in the following, and add
their IP addresses to the database .
In the identiﬁcation procedures (3) and (4), the peers may not be Winny
peers, but the probability of this is very low. This is because the value is factorial
of the number of port in the TCP or UDP header (less than 1/655362) and our
method also considers the port access direction.
From these procedures, (1)–(4), we can ﬁnd the IP addresses and service
ports of Winny peers in the Internet and the stub network. Figure 3 shows the
relationship of the various databases of Winny peers. Using databases β, γ and
, we can select the Winny and Port 0 traﬃc from the log A with this improved
port number based application traﬃc identiﬁcation method.
4.2
Proposed Identiﬁcation Method 2
By extending the identiﬁcation method proposed in the previous subsection,
we can ﬁnd new Winny peers one after another (Figure 4). In the following
procedures, the service ports of Winny peers in the stub network play the same
role as the decoy peer in the previous subsection. These procedures are described
in below.
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
63
Internet
Winny Network
a
S
b
S
c
S
(8)
New
e
S
d
S
(6)
15231
S
B
(5)
S
(6)
(8)
(5)
S
C
D
W.X.Y.Z
Stub network
(7)
S
E
New
Fig. 4. Procedures of our proposed identiﬁcation method 2
(5) When the peers d accesses to the service ports of peers C and D, which are
not in database α, the peer d becomes newly found Winny peers. We add
its IP addresses to database α.
(6) When peers C or D uses their client ports to access peer d, the service port
of peer d is identiﬁed and the information is added to the database β . (Peer e
is also found by the same procedures.)
(7) From inside the stub network, peer E, which is not in databases δ and ,
accesses the newly found peers of these service ports (peers d and e), and so
we identify their IP address and add them to database γ.
(8) If more than two peers in database β use their client ports to access peer E,
the IP address and service port of the peer in the stub network are identiﬁed
and the peers added to database δ. The “Port 0” peers are also found in
database γ and we add them to database .
By repeating above procedures, we can eventually ﬁnd new Winny peers even
if these peers are not found in the ﬁrst few implementations of the procedures.
The next section shows the results of analysis of our proposed methods.
5 Analysis Results
5.1 Analysis Results 1
To identify Winny peers in the stub network, we used two traﬃc logs in section 3.
First, we determined the same 24-hour measurement period for the point A and
64
S. Ohzahata et al.
point B. The decoy peer is logged as “Winny” in the log A but we exclude it in the
analysis results of this subsection. Some “IP address:service port” combinations
in log B have not been identiﬁed as Winny peers in log A since a node address
and service port number are changing at that time. However, our identiﬁcation
method ensures that the probability of false positive identiﬁcation is small with
these procedures.
The number of peers identiﬁed in each step is follows.
(1) The number of unique IP addresses of Winny peers is 67,984 (database α).
(2) The number of unique pair of IP addresses and service port of Winny peers
is 45,873 (database β).
(3) The number of unique IP addresses of Winny peers in the stub network is 9
(database γ).
(4) The number of unique IP address and service port of Winny peers in the stub
network is 0 (database δ). The number of the Port 0 peers is 9 (database ).
(5)–(8) We cannot additionally ﬁnd additional Winny peers in the stub network
since there is no “Winny” peer in the stub network.
From (1) and (2), the service port of the decoy peer is accessed by many
Winny peers in the Internet, when the decoy peer joins the Winny network. In
the default setting of Winny, each peer has a few active ﬁle search connections
to the other peers, but each the peer previously searches for further connectable
peers to maintain the ﬁle search network. With these procedures, several hundred
peer search connections are always maintained by keeping, in each Winny peer,