接着上篇的总结 （=￣ω￣=）  
**Less-11**  
这关采用的防御手法是白名单过滤，只允许上传jpg、png和gif类型，并且将上传的文件给重命名为了白名单中的后缀  
查看源码：
    $is_upload = false;
        $msg = null;
        if(isset($_POST['submit'])){
          $ext_arr = array('jpg','png','gif');
          $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],".")+1);
          if(in_array($file_ext,$ext_arr)){
          $temp_file = $_FILES['upload_file']['tmp_name'];
          $img_path = $_GET['save_path']."/".rand(10, 99).date("YmdHis").".".$file_ext;
           if(move_uploaded_file($temp_file,$img_path)){
                    $is_upload = true;
                } else {
                    $msg = '上传出错！';
                }
            } else{
                $msg = "只允许上传.jpg|.png|.gif类型文件！";
            }
        }
处理上传文件的方式
    $img_path = $_GET['save_path']."/".rand(10, 99).date("YmdHis").".".$file_ext;
看起来这样防御并没有什么问题，但是这一关上传目录是可控的，所以可以先上传一个后缀名为`.jpg`，然后修改上传目录为`.php`后缀，之后在`.php`后使用截断后面的拼接内容，注意这里需要关掉`magic_quotes_gpc`这个php扩展，否则00会被转义  
`$_GET['save_path']`这里使用00截断`."/".rand(10, 99).date("YmdHis").".".$file_ext;`  
注意这里的00字符因为在url的GET参数中，所以需用进行url编码
  * **截断的条件** ：  
1）php版本必须小于5.3.4  
2）打开php的配置文件php-ini，将magic_quotes_gpc设置为Off
  * **关闭magic_quotes_gpc函数** :  
在php.ini文件内找到  
`magic_quotes_gpc = On`  
将其改为  
`magic_quotes_gpc = Off`
配置好后，上传webshell.jpg，抓包，添加`webshell.php%00`
上传成功  
**Less-12**  
和Less-11不同的是这次的`save_path`是通过 **post** 传进来的，我们还利用00截断，但这题需要在 **十六进制**
中进行修改，因为post不会像get对`%00`进行自动解码。  
步骤：上传webshell.jpg 然后 **send to repeater**  
添加文件 `wenshell.php(空格)`  
空格的十六进制为`20`然后找到`20` 改为`00`  
然后点击send 发包就好了  
发包成功。
**Less-13**  
PS：
> 这关需要将服务器版本改到PHP5.3及以上才行，不然运行文件包含漏洞会报错
查看源码：
    function getReailFileType($filename){
        $file = fopen($filename, "rb");
        $bin = fread($file, 2); //只读2字节
        fclose($file);
        $strInfo = @unpack("C2chars", $bin);    
        $typeCode = intval($strInfo['chars1'].$strInfo['chars2']);    
        $fileType = '';    
        switch($typeCode){      
            case 255216:            
                $fileType = 'jpg';
                break;
            case 13780:            
                $fileType = 'png';
                break;        
            case 7173:            
                $fileType = 'gif';
                break;
            default:            
                $fileType = 'unknown';
            }    
            return $fileType;
    }
    $is_upload = false;
    $msg = null;
    if(isset($_POST['submit'])){
        $temp_file = $_FILES['upload_file']['tmp_name'];
        $file_type = getReailFileType($temp_file);
        if($file_type == 'unknown'){
            $msg = "文件未知，上传失败！";
        }else{
            $img_path = UPLOAD_PATH."/".rand(10, 99).date("YmdHis").".".$file_type;
            if(move_uploaded_file($temp_file,$img_path)){
                $is_upload = true;
            } else {
                $msg = "上传出错！";
            }
        }
    }
发现主要是取上传文件的头两个字节判断文件类型，因此直接上传图片马即可；  
图片制作方法：`copy 1.jpg /b + shell.php /a webshell.jpg`（图片一句话木马为：`` ）  
解释：参数/b指定以二进制格式复制、合并文件(图片),参数/a指定以ASCII格式复制、合并文件（php文件）  
制作成功  
然后直接上传  
上传成功，得到文件名，如果是上传的是一句话木马就能连接菜刀了；我们上传的是图片码，可以利用文件包含漏洞进行测试：  
先新建一个包含文件漏洞的页面upload.php，将该文件放在根目录下：
测试使用，包含成功  
`http://127.0.0.1/upload-labs-master/upload/include.php?page=文件名`  
另外有时候对文件大小也有限制，所以绕过文件幻数最合适的方式是利用16进制编辑器自己制作一个伪图片马，这里利用winhex创建shell.jpg伪图片马  
**Less-14**  
查看关键代码：
    $types = '.jpeg|.png|.gif';
         if(file_exists($filename)){
            $info = getimagesize($filename);
            $ext = image_type_to_extension($info[2]);1234
这里用getimagesize获取文件类型，还是直接就可以利用图片马就可进行绕过，绕过方法同Less13 ，这里就不演示了  
知识补充：
    array getimagesize ( string $filename [, array &$imageinfo ] )
    getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。
    如果不能访问 filename 指定的图像或者其不是有效的图像，getimagesize() 将返回 FALSE 并产生一条 E_WARNING 级的错误。
**Less-15**  
关键源码：
    function isImage($filename){
        //需要开启php_exif模块
        $image_type = exif_imagetype($filename);
        switch ($image_type) {
            case IMAGETYPE_GIF:
                return "gif";
                break;
            case IMAGETYPE_JPEG:
                return "jpg";
                break;
            case IMAGETYPE_PNG:
                return "png";
                break;    
            default:
                return false;
                break;
        }
    }
利用`php_exif`模块判断文件类型，还是直接利用图片马就可以绕过。（查看下你的`php_exif`模块是否打开，没有的话就勾上）  
然后直接上传图片马，仍和 less-13一样  
上传成功。
**Less-16**  
查看源码：
    $is_upload = false;
    $msg = null;
    if (isset($_POST['submit'])){
        // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径
        $filename = $_FILES['upload_file']['name'];
        $filetype = $_FILES['upload_file']['type'];
        $tmpname = $_FILES['upload_file']['tmp_name'];
        $target_path=UPLOAD_PATH.'/'.basename($filename);
        // 获得上传文件的扩展名
        $fileext= substr(strrchr($filename,"."),1);
        //判断文件后缀与类型，合法才进行上传操作
        if(($fileext == "jpg") && ($filetype=="image/jpeg")){
            if(move_uploaded_file($tmpname,$target_path)){
                //使用上传的图片生成新的图片
                $im = imagecreatefromjpeg($target_path);
                if($im == false){
                    $msg = "该文件不是jpg格式的图片！";
                    @unlink($target_path);
                }else{
                    //给新图片指定文件名
                    srand(time());
                    $newfilename = strval(rand()).".jpg";
                    //显示二次渲染后的图片（使用用户上传图片生成的新图片）
                    $img_path = UPLOAD_PATH.'/'.$newfilename;
                    imagejpeg($im,$img_path);
                    @unlink($target_path);
                    $is_upload = true;
                }
            } else {
                $msg = "上传出错！";
            }
        }else if(($fileext == "png") && ($filetype=="image/png")){
            if(move_uploaded_file($tmpname,$target_path)){
                //使用上传的图片生成新的图片
                $im = imagecreatefrompng($target_path);
                if($im == false){
                    $msg = "该文件不是png格式的图片！";
                    @unlink($target_path);
                }else{
                     //给新图片指定文件名
                    srand(time());
                    $newfilename = strval(rand()).".png";
                    //显示二次渲染后的图片（使用用户上传图片生成的新图片）
                    $img_path = UPLOAD_PATH.'/'.$newfilename;
                    imagepng($im,$img_path);
                    @unlink($target_path);
                    $is_upload = true;               
                }
            } else {
                $msg = "上传出错！";
            }
        }else if(($fileext == "gif") && ($filetype=="image/gif")){
            if(move_uploaded_file($tmpname,$target_path)){
                //使用上传的图片生成新的图片
                $im = imagecreatefromgif($target_path);
                if($im == false){
                    $msg = "该文件不是gif格式的图片！";