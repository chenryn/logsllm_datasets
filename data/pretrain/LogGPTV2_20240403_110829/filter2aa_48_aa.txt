### Battery Firmware Hacking
**Speaker: Charlie Miller**  
**Affiliation: Accuvant Labs**  
**Contact: PI:EMAIL, @0xcharlie**

#### About the Speaker
- Former researcher at the US National Security Agency
- First to hack the iPhone and G1 Android phone
- Winner of CanSecWest Pwn2Own: 2008, 2009, 2010, 2011
- Author of:
  - "Fuzzing for Software Security Testing and Quality Assurance"
  - "The Mac Hacker’s Handbook"
- Certifications: PhD, CISSP, GCFA, etc.

#### Something Different
[Watch the video](http://www.youtube.com/watch?v=jjAtBiTSsKY)

### Agenda
1. Basics of smart battery systems
2. Security analysis of a MacBook's battery
3. Potential impact of vulnerabilities
4. Detailed exploration of smart battery technology

### Smart Battery Systems
- **Primary Design Goal:** Safety
- **Central Concept:** Embedding primary intelligence within the battery pack
- **Benefits:**
  - Improved accuracy in measuring remaining capacity and design voltage
  - Customizable charging algorithms and parameters based on specific battery chemistry
  - Enhanced safety by relying on the battery pack's internal intelligence

### Smart Batteries
- **Features:**
  - Embedded controller for communication with the charger and host
  - Responsible for maintaining safety
  - Configurable for different parameters and chemistries

### Possible Battery Attacks
- **Bricking the Battery:** Render the battery unusable
- **Reprogramming to Remove Safety Features:** Potentially leading to thermal runaway (explosion)
- **Persistent Denial of Service (DOS) to OS:**
- **Persistent Backdoor to OS:** Requires a kernel vulnerability
- **TPM, BIOS Sniffer:**

### Disclaimer
- No batteries were intentionally damaged or exploded during this research.
- Minimal parameter tweaking was done to ensure safety.
- The goal is to continue using the laptop safely, including on airplanes.

### Research Approach
- **Hardware Limitations:** Focused on associated software
- **Battery Updater Analysis:**
  - Identified calls to `IOConnectMethodStructureIsStructure` function
  - Driver involved: `AppleSmartBatteryManager`
  - Source code available but incomplete; useful information in headers

### Key Discoveries
- **Chip Identification:**
  - Google search revealed the use of Texas Instruments chips
  - Apple used default Unseal and Full-Access keys
- **Data Flash Signature:**
  - Values: 0: 22, 1: 25, 2: 10, 3: 1
  - Matches TI bq20z80 behavior

### Hardware Components
- **Lithium Polymer Cells**
- **Electronics and Chips:**
  - TI bq29312
  - TI bq20z80
  - TI bq29412

### Smart Battery System (SBS)
- **Communication Protocol:** SMBus (System Management Bus)
  - Two-wire interface based on I²C
  - Data format outlined in the Smart Battery Data Specification
- **Mac OS X Implementation:**
  - Kernel module: `AppleSmartBatteryManager`
  - API developed for easier interaction with the SMBus

### Writable Configuration Values
- **Parameters:**
  - Design capacity
  - FET control
  - Design voltage
  - Device chemistry
  - Cell overvoltage threshold
  - Pack overvoltage threshold
  - Overcharge threshold
  - Overtemperature threshold
  - Second-level thresholds for voltage, charge, and temperature
  - Impedance table
  - Temperature model

### Battery Modes
- **Sealed Mode:**
  - Factory default
  - Only standard SBS commands available (read-only)
- **Unsealed Mode:**
  - Access to Data Flash space
  - Some extended SBS commands with read/write access
  - Used during Apple firmware updates
- **Full Access Mode:**
  - All SBS commands available
  - All commands have read/write access
  - Entry to BootROM and Configuration modes
- **Configuration Mode:**
  - Allows setting current, voltage, and temperature levels
  - Calibration process detailed in the document

### Boot ROM Mode
- **Low-Level Access:**
  - Direct access to data flash and firmware
  - Not well-documented in the technical reference manual
- **Evaluation Kit:**
  - bq20z80evm-001
  - Windows software for USB interaction
  - Capabilities: Read/write SBS, data flash, raw SMBus commands, firmware flashing

### Firmware Analysis
- **SREC Files:**
  - Encrypted SREC files (XOR-based encryption)
  - Contains header, full data flash, instruction flash, and checksums
- **Introspection:**
  - PyDbg script to intercept USB data
  - Comparison with raw read/writes on Pro screen
- **Boot ROM Commands:**
  - SMBus commands for reading and writing words and blocks
  - Documentation from bq803xx ROM API v3.0 User’s Guide

### Battery Chemistry
- **Configurable for Various Chemistries:**
  - Settings can be adjusted for different or unique chemistries
  - Evaluation kit can change chemistry settings
- **Sniffing Chemistry Changes:**
  - Write specific byte sequences to undocumented subclasses
  - Adjust cell impedance and other parameters

### Conclusion
- **Research Insights:**
  - Detailed understanding of smart battery systems and potential security vulnerabilities
  - Development of tools and methods for interacting with and analyzing battery firmware
- **Future Work:**
  - Further exploration of boot ROM and configuration modes
  - Continued investigation into battery chemistry and parameter tuning

Thank you for your attention!