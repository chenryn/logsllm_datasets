:::
``` screen
pcs cluster setup [--start] [--local] --name cluster_ name node1 [node2] [...]
```
以下命令在指定节点或节点上启动集群服务。
::: itemizedlist
-   如果指定了 `--all`{.literal} 选项，命令将在所有节点上启动群集服务。
-   如果没有指定任何节点，则仅在本地节点上启动集群服务。
:::
``` screen
pcs cluster start [--all] [node] [...]
```
:::
:::
::: section
::: titlepage
# []{#ch-clusteradmin-HAAR.html#s1-configtimeout-HAAR}为集群配置超时值 {.title}
:::
使用 [**pcs cluster setup**]{.command}
命令创建群集时，群集的超时值被设置为默认值，适合大多数群集配置。但是，如果您的系统需要不同的超时值，您可以使用
[**pcs cluster setup**]{.command} 选项修改这些值，如下所示： [表 4.1
"超时选项"](#ch-clusteradmin-HAAR.html#tb-timeoutoptions-HAAR "表 4.1. 超时选项"){.xref}
::: table
[]{#ch-clusteradmin-HAAR.html#tb-timeoutoptions-HAAR}
**表 4.1. 超时选项**
::: table-contents
  选项                                                                    描述
  ----------------------------------------------------------------------- --------------------------------------------------------------------------------------------
  ` --token timeout`{.literal}``{=html}``{=html}              以毫秒为单位设置时间，直到在未接收令牌后声明令牌丢失（默认为 1000 毫秒）
  ` --join timeout`{.literal}``{=html}``{=html}               以毫秒为单位设置等待加入消息的时间（默认值 50 ms）
  ` --consensus timeout`{.literal}``{=html}``{=html}          以毫秒为单位设置在启动新成员发货配置前等待达成一致的时间（默认值为 1200 ms）
  ` --miss_count_const count`{.literal}``{=html}``{=html}     在发生重新传输前检查消息以进行重新传输前，设置收到令牌的最大次数（默认 5 消息）
  ` --fail_recv_const failures`{.literal}``{=html}``{=html}   指定在生成新配置前可能会发生消息时发生的令牌轮转数量，但不接收任何消息（默认值 2500 失败）
:::
:::
例如，以下命令创建群集 `new_cluster`{.literal}，并将令牌超时值设置为
10000 毫秒（10 秒），并将加入超时值设置为 100 毫秒。
``` screen
# pcs cluster setup --name new_cluster nodeA nodeB --token 10000 --join 100
```
:::
::: section
::: titlepage
# []{#ch-clusteradmin-HAAR.html#s1-configrrp-HAAR}配置冗余环网协议(RRP) {.title}
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽支持在群集中配置冗余环协议(RRP)，具体取决于 [RHEL
高可用性群集支持政策 -
集群互连网络接口的\"冗余环协议(RRP)\"部分中描述的条件](https://access.redhat.com/articles/3068841){.ulink}。
:::
使用 [**pcs cluster setup**]{.command}
命令创建群集时，您可以通过为每个节点指定两个接口，使用冗余环协议配置群集。使用默认的
udpu 传输时，当指定集群节点时，您可以指定环 0 地址，后跟 \',\'，然后是环
1 地址。
例如，以下命令将名为 `my_rrp_clusterM`{.literal} 的集群配置为节点 A
和节点 B。节点 A 有两个接口：node `A-0`{.literal} 和
`nodeA-1`{.literal}。节点 B 有两个接口，node `B-0`{.literal} 和
`nodeB-1`{.literal}。若要利用 RRP 将这些节点配置为群集，请执行以下命令：
``` screen
# pcs cluster setup --name my_rrp_cluster nodeA-0,nodeA-1 nodeB-0,nodeB-1 
```
有关在使用sud `p`{.literal} 传输的集群中配置 RRP 的详情，请查看 [**pcs
cluster setup**]{.command} 命令的帮助屏幕。
:::
::: section
::: titlepage
# []{#ch-clusteradmin-HAAR.html#s1-clusternodemanage-HAAR}管理集群节点 {.title}
:::
以下小节介绍了用来管理集群节点的命令，包括启动和停止集群服务以及添加和删除集群节点的命令。
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-stopservices-HAAR}停止集群服务 {.title}
:::
以下命令在指定节点或节点上停止集群服务。与 [**pcs cluster
start**]{.command} 一样，`--all`{.literal}
选项会停止所有节点上的群集服务，如果没有指定任何节点，则仅在本地节点上停止群集服务。
``` screen
pcs cluster stop [--all] [node] [...]
```
您可以使用以下命令强制停止本地节点上的集群服务，该命令会执行 [**kill
-9**]{.command} 命令。
``` screen
pcs cluster kill
```
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-enabledisableservices-HAAR}启用和禁用集群服务 {.title}
:::
使用以下命令，将群集服务配置为在指定节点或节点上启动时运行。
::: itemizedlist
-   如果指定了 `--all`{.literal} 选项，该命令在所有节点上启用集群服务。
-   如果您没有指定任何节点，则仅在本地节点上启用集群服务。
:::
``` screen
pcs cluster enable [--all] [node] [...]
```
使用以下命令配置在指定节点或节点的启动时不要运行的群集服务。
::: itemizedlist
-   如果指定了 `--all`{.literal}
    选项，该命令将禁用所有节点上的群集服务。
-   如果没有指定任何节点，则仅在本地节点上禁用集群服务。
:::
``` screen
pcs cluster disable [--all] [node] [...]
```
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-nodeadd-HAAR}添加集群节点 {.title}
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
强烈建议您仅在生产环境维护窗口期间将节点添加到现有集群中。这可让您对新节点及其保护配置执行适当的资源和部署测试。
:::
使用以下步骤将新节点添加到现有集群中。在本例中，现有群集节点为
`clusternode-01.example.com、cluster`{.literal}
`node-02.example.com`{.literal} 和
`clusternode-03.example.com`{.literal}。新节点为
`newnode.example.com`{.literal}。
在加入到集群中的新节点上，执行以下任务。
::: orderedlist
1.  安装集群软件包。如果集群使用 SBD、Booth ticket
    管理器或仲裁设备，则必须在新节点上手动安装相应的软件包（`sbd`{.literal}、boot`h-site`{.literal}、corosync-qdevice``{=html}）。
    ``` screen
    [root@newnode ~]# yum install -y pcs fence-agents-all
    ```
2.  如果您正在运行 [**firewalld**]{.command}
    守护进程，请执行以下命令启用红帽高可用性附加组件所需的端口。
    ``` screen
    # firewall-cmd --permanent --add-service=high-availability
    # firewall-cmd --add-service=high-availability
    ```
3.  设置用户 ID `hacluster`{.literal}
    的密码。建议您为集群中的每个节点使用相同的密码。
    ``` screen
    [root@newnode ~]# passwd hacluster
    Changing password for user hacluster.
    New password:
    Retype new password:
    passwd: all authentication tokens updated successfully.
    ```
4.  执行以下命令启动 `pcsd`{.literal} 服务并在系统启动时启用
    `pcsd`{.literal} ：
    ``` screen
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
:::
在现有集群中的一个节点上执行以下任务。
::: orderedlist
1.  在新群集节点上验证用户 `hacluster`{.literal}。
    ``` screen
    [root@clusternode-01 ~]# pcs cluster auth newnode.example.com
    Username: hacluster
    Password:
    newnode.example.com: Authorized
    ```
2.  在现有集群中添加新节点。此命令还会将群集配置文件
    `corosync.conf`{.filename}
    同步到集群中的所有节点，包括您要添加的新节点。
    ``` screen
    [root@clusternode-01 ~]# pcs cluster node add newnode.example.com
    ```
:::
在加入到集群中的新节点上，执行以下任务。
::: orderedlist
1.  在新节点上启动并启用集群服务。
    ``` screen
    [root@newnode ~]# pcs cluster start
    Starting Cluster...
    [root@newnode ~]# pcs cluster enable
    ```
2.  确保您为新集群节点配置并测试隔离设备。有关配置隔离设备的详情请参考
    [第 5 章 *隔离：配置
    STONITH*](#ch-fencing-HAAR.html "第 5 章 隔离：配置 STONITH"){.xref}。
:::
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-noderemove-HAAR}删除集群节点 {.title}
:::
以下命令关闭指定节点，并将其从群集配置文件 `corosync.conf`{.filename}
中删除至群集配置文件 corosync.conf
中。有关从集群节点完全删除集群的所有信息的详情，请参考
["删除集群配置"一节](#ch-clusteradmin-HAAR.html#s1-clusterremove-HAAR "删除集群配置"){.xref}。
``` screen
pcs cluster node remove node
```
:::
::: section
::: titlepage
## []{#ch-clusteradmin-HAAR.html#s2-standbymode-HAAR}待机模式 {.title}
:::
以下命令将指定节点设置为待机模式。指定节点无法再托管资源。该节点上所有当前活跃的资源都将移至另一节点。如果您指定了
`--all`{.option}，这个命令会将所有节点置于待机模式。
您可以在更新资源的软件包时使用此命令。您还可以在测试配置时使用此命令模拟恢复，而无需实际关闭节点。
``` screen
pcs cluster standby node | --all
```
以下命令将指定节点从待机模式中删除。运行此命令后，指定节点就可以托管资源。如果您指定了
`--all`{.option}，这个命令会将所有节点从待机模式中删除。
``` screen
pcs cluster unstandby node | --all
```
请注意，当执行 [**pcs cluster standby**]{.command}
命令时，这会阻止资源在指定节点上运行。执行 [**pcs cluster
unstandby**]{.command}
命令时，这允许资源在指定节点上运行。这不一定将资源回指定节点 ;
此时可以在哪里运行这些资源取决于您最初配置的资源。有关资源限制的详情请参考
[第 7 章
*资源约束*](#ch-resourceconstraints-HAAR.html "第 7 章 资源约束"){.xref}。
:::
:::
::: section
::: titlepage
# []{#ch-clusteradmin-HAAR.html#s1-accesscontrol-HAAR}设置用户权限 {.title}
:::
您可以为用户 `hacluster`{.literal}
以外的特定用户授予权限来管理集群。您可以为独立的用户授予两组权限：
::: itemizedlist
-   允许单个用户通过 Web UI 管理集群的权限，并运行通过网络连接到节点的
    [**pcs**]{.command} 命令，如
    ["设置通过网络访问节点的权限"一节](#ch-clusteradmin-HAAR.html#s2-netpermissions-HAAR "设置通过网络访问节点的权限"){.xref}
    所述。通过网络连接到节点的命令包括设置集群、从集群中添加或删除节点的命令。
-   本地用户允许只读或读写访问集群配置的权限，如 ["使用 ACL
    设置本地权限"一节](#ch-clusteradmin-HAAR.html#s2-aclpermissions-HAAR "使用 ACL 设置本地权限"){.xref}
    所述。不需要通过网络连接的命令包括编辑集群配置的命令，比如那些创建资源和配置限制的命令。
:::
当分配了两组权限时，首先应用通过网络连接的命令的权限，然后应用在本地节点中编辑集群配置的权限。大多数
[**pcs**]{.command} 命令不需要网络访问，在这种情况下，网络权限将不适用。
::: section