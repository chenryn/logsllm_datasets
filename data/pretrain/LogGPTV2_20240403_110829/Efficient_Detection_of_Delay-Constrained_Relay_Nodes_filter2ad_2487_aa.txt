title:Efficient Detection of Delay-Constrained Relay Nodes
author:Baris Coskun and
Nasir D. Memon
23rd Annual Computer Security Applications Conference
23rd Annual Computer Security Applications Conference
Efﬁcient Detection of Delay-Constrained Relay Nodes
Baris Coskun
Nasir Memon
Polytechnic University, ECE Dept.
Six Metrotech Center Brooklyn, NY
Polytechnic University, CIS Dept.
Six Metrotech Center Brooklyn, NY
PI:EMAIL
PI:EMAIL
Abstract
Relay nodes are a potential threat to networks since
they are used in many malicious situations like stepping
stone attacks, botnet communication, peer-to-peer stream-
ing etc. Quick and accurate detection of relay nodes in a
network can signiﬁcantly improve security policy enforce-
ment. There has been signiﬁcant work done and novel solu-
tions proposed for the problem of identifying relay ﬂows ac-
tive within a node in the network. However, these solutions
require quadratic number of comparisons in the number of
ﬂows. In this paper, a related problem of identifying relay
nodes is investigated where a relay node is deﬁned as a node
in the network that has an active relay ﬂow. The problem is
formulated as a variance estimation problem and a statis-
tical approach is proposed for the solution. The proposed
solution requires linear time and space in the number of
ﬂows and therefore can be employed in large scale imple-
mentations. It can be used on its own to identify relay nodes
or as a ﬁrst step in a scalable relay ﬂow detection solution
that performs known quadratic time analysis techniques for
relay ﬂow detection only on nodes that have been detected
as relay nodes. Experimental results show that the proposed
scheme is able to detect relay nodes even in the presence of
intentional inter-packet delays and chaff packets introduced
by adversaries in order to defeat timing based detection al-
gorithms.
1
Introduction
In a typical network, there can be various situations
where a node receives data from another node and forwards
it to some others. Such nodes are often called “relay nodes”.
Relay nodes can be employed for many different purposes
which can be either legitimate or malicious. Routers and
switches are clearly examples of usually legitimate relay
nodes. But there are other more ambiguous situations. For
instance, an enterprise may be running a legitimate peer-to-
peer video streaming application for the beneﬁt of its em-
ployees. On the other hand an employee could be violat-
ing company policy by running a peer-to-peer application
to watch live television on the desktop. Similarly, a sys-
tem administrator may be connected from home to a server
and logs in from that server using ssh to one of the internal
machines in order to check its status. This would be an ex-
ample of a legitimate stepping stone connection. Stepping
stones, however, are commonly used by hackers to make
attack traceback difﬁcult. In general, regardless of the orig-
inal intention, relay nodes are a potential threat to networks
since they are used in many malicious situations like step-
ping stone attacks, botnet communication, illegal peer-to-
peer ﬁle sharing etc. Hence, quick and accurate detection
of relay nodes in a network can signiﬁcantly improve secu-
rity policy enforcement.
Relay nodes can be divided into two main categories:
1) Store & Forward Relay Nodes: These type of relay
nodes often store data before forwarding. Peer to peer ﬁle
sharing and email relaying are some examples of store and
forward relays as email relays forward received emails after
few minutes and peer to peer ﬁle sharing applications don’t
forward data until another user make a request.
2) Delay-Constrained Relays Nodes: These type of re-
lay nodes forward the received data within a maximum tol-
erable delay constraint, which is inherent in the underly-
ing application. Delay-constrained relaying can be done by
applications which are either interactive or machine driven.
For instance, stepping stones and IM message routing nodes
are some examples of delay-Constrained relays with inter-
active sessions. On the other hand, peer to peer live broad-
cast and Skype super-nodes are examples of machine-driven
delay-constrained relays.
Detection of store and forward type of relays is gener-
ally done by identifying protocol features. Usually a tar-
get protocol is selected and its distinctive characteristics are
identiﬁed. Subsequently, a node that exhibits such charac-
teristics is declared as a relay node. Some such protocol
features used by researchers include connections to known
ports, payload signatures, concurrent use of both UDP and
TCP etc. This work will mainly focus on delay-constrained
relays. Interested readers can ﬁnd further details on store
1063-9527/07 $25.00 © 2007 IEEE
1063-9527/07 $25.00 © 2007 IEEE
DOI 10.1109/ACSAC.2007.29
DOI 10.1109/ACSAC.2007.29
353
353
and forward relay node detection schemes in [3, 5–8].
To the best of our knowledge, there is no prior work
that focusses on the delay-constrained relay node detec-
tion problem. However, there has been much work on the
closely related delay-constrained relay ﬂow detection prob-
lem [1,2,9,12,13]. Relay ﬂow detection is harder than relay
node detection as detection of relay ﬂows implies identiﬁca-
tion of relay nodes as well. The basic detection methodol-
ogy in the proposed delay-constrained relay ﬂow detection
schemes is to search for network ﬂow pairs which exhibit
strong mutual correlation. This correlation is determined
based on various attributes of the ﬂow, including packet
content (payload), packet arrival times, packet lengths etc.
Regardless of how the correlation is determined, all these
methods compare each incoming ﬂow to each outgoing one,
usually on a node by node basis. Therefore they require
quadratic time for each node, which may be prohibitive for
medium to large scale networks with tens of thousands of
nodes and thousands of active connections in many nodes.
For many scenarios, however, instead of identifying re-
lay ﬂows, identifying relay nodes could be sufﬁcient to take
appropriate action. In addition, a lightweight and scalable
solution to the problem of delay-constrained relay node de-
tection can serve as a ﬁrst step in a scalable relay ﬂow de-
tection solution that performs one of the known quadratic
time analysis techniques for relay ﬂow detection only on
nodes that have been determined to be relay nodes. This
strategy brings signiﬁcant computational efﬁciency to exist-
ing schemes since the quadratic ﬂow detection algorithm is
now applied to a few selected nodes rather than every node
in the network. Hence, in this work we focus on the prob-
lem of delay-constrained relay node detection. This slightly
relaxed problem is reformulated as a variance estimation
problem and a statistical approach employed to solve the
problem in linear time which makes it viable to incorporate
in large scale networks. Also the proposed technique is ro-
bust, to some extent, against adversarial manipulations that
change the time structure of the ﬂows such as intentional
delays or chaff packets.
1.1 Related Work
Research on delay constrained relay detection has mostly
focused on stepping stones due to their obvious potential
malicious intention. Perhaps the ﬁrst such technique was
proposed by Staniford and Heberlein [9]. They proposed
a content correlation based scheme where ﬂow pairs are
compared in terms of thumb-prints of their content. How-
ever, content based schemes have limited applicability since
ﬂows are usually encrypted and their contents are inacces-
sible. This fact motivated researchers to focus on layer 3
information which mostly consists of originating and des-
tination IP addresses, packet arrival times etc. In the ﬁrst
work that incorporates layer 3 information [13], Zhang and
Paxson detect stepping stones by correlating ﬂows in terms
of their ON and OFF periods. The assumption is that cor-
related ﬂows switch from OFF state to ON state at simi-
lar times. In [12], Yoda and Etoh propose a similar timing
based algorithm where correlation is deﬁned over sequence
number vs. time curves of the ﬂows. Another timing based
algorithm is proposed by He and Tong in [4], where authors
formulate the ﬂow correlation problem as a nonparametric
hypothesis testing. Other than stepping stones, in [10], Suh
et. al. proposed a similar timing based technique for detect-
ing Skype related relay trafﬁc.
Timing based methods usually fall short when an at-
tacker perturbs the time structure of the relaying ﬂows by
means of introducing artiﬁcial delays before relaying the
received packet or by adding chaff packets into the stream.
In [2], Donoho et. al. shows that if there is a maximum
tolerable delay constraint, instead of using raw timing in-
formation, applying wavelet decomposition and analyzing
packet timings in lower resolutions will make the effect of
the adversarial changes in time structure insigniﬁcant. Sim-
ilarly under a maximum tolerable delay constraint, Blum
et. al. present conﬁdence bounds on the stepping stone
detection problem in [1]. As a completely different ap-
proach, in [11], Wang and Reeves propose a watermarking
based approach where selected packet timings are slightly
adjusted on all incoming ﬂows. In order to identify a relay-
ing ﬂow, a watermark detection procedure is applied to all
outgoing ﬂows.
As we have pointed out before, ﬂow correlation based
techniques solve the problem in quadratic time. They need
to compare each incoming ﬂow to each outgoing ﬂow.
Therefore it is not easy to employ these methods in large
networks. One could adopt ﬁltering techniques to alleviate
this problem to some extent. For instance, in [13] speciﬁc
ﬂow pairs are ﬁltered out based on packet size, inconsistent
source and destination ports, inconsistent packet direction
and timing etc. However, discarding information usually
brings a potential threat to detection performance since the
real relaying ﬂows could be ﬁltered out or adversaries could
manipulate ﬂow characteristics to get ﬁltered out. There-
fore, a more scalable solution for relay detection problem
would be of potential value in many situations.
2 Detecting Relay Nodes in Linear Time
Before formally deﬁning the problem, we make the fol-
lowing deﬁnitions:
-Flow: A ﬂow is the collection of packets which share the
common the ﬁve-tuple of source IP, source port, destination
IP, destination port and layer 3 protocol type (UDP or TCP).
-Incoming/Outgoing Flows: For a particular node, if the
destination IP of a ﬂow and the IP of that node are the same,
then that ﬂow is considered as an incoming ﬂow. Con-
versely, if the source IP of the ﬂow is equal to the IP of
that node, then the ﬂow is regarded as an outgoing ﬂow.
354354
-Time Slot: We consider time axis as a sequence of equal
length time intervals which are called time slots.
-Active Flow: If a ﬂow has at least one packet transmitted
within a given time slot, then that ﬂow is regarded as being
active within that particular time slot.
2.1 Basic Idea
The basic idea of the proposed technique relies on the
fact that the incoming and outgoing components of relay
ﬂow have to transmit at least some of the packets (non chaff
packets) at similar times (within the maximum tolerable de-
lay duration). That is to say, if the time axis is considered as
a sequence of time slots, the corresponding incoming and
outgoing ﬂows of the relay would be simultaneously active
within some of the time slots. This observation is illustrated
in Figure 1, where the incoming ﬂow R and outgoing ﬂow
F are acting as a relaying ﬂow pair. It is observed that, in
order to forward the received information through ﬂow R,
ﬂow F is also active in the same time slots as ﬂow R.
In order to capture this correlation of relaying ﬂows,
we assign to each ﬂow a random number drawn from a
zero-mean known distribution. Then, for each time slot,
the random numbers assigned to active incoming ﬂows are
summed and multiplied to the sum of random numbers as-
signed to the active outgoing ﬂows. Finally the results of
each time slot are added together and an overall sum value
is obtained. Calculation of this overall sum (S) is summa-
rized below for the ﬂows shown in Figure 1. Note that the
letters A, B, C etc. represent the assigned random numbers
to the corresponding ﬂows shown Figure 1.
··· + (A + R)F + AD + RF
··· + CB + AF + RF + AD + RF
S = (R + A)(F + B) +C (D + B) +···
= RF + RB + AF + AB + CD + ···
= 3 × RF + (RB + AF + AB + ···
··· + CD + CB + AF + AD)
= 3 × RF + sum(Random Numbers)
It is observed above that, thanks to distributive prop-
erty of multiplication over addition, this calculation is ef-
fectively equivalent to assigning a random number to each
active ﬂow pair and then summing them up. Hence, if there
were no correlated relaying ﬂows, “S” would be the sum of
random numbers coming from a zero-mean known distribu-
tion. Consequently “S” itself would be a random number
coming from another zero-mean known distribution. How-
ever, when there’s a relay activity and the random number
assigned to the relaying ﬂow pair appears multiple times in
the summation and somewhat can be considered as a con-
stant term, which changes the governing distribution of “S”.
Consequently one can classify a node as being a relay or not
based on a simple statistical test applied on “S”. The math-
ematical details of this scheme are presented in Section 2.2.
I n c o m i n g
O u t g o i n g
R A
C
A
R
F
B
D B
F
A
D
R
F
T i m e s l o t
t i m e
Figure 1. Active ﬂows in a short period of
time, where the outgoing ﬂow F relays infor-
mation coming from the incoming ﬂow R.
At this point, an acute reader would have observed that
request-response based protocols (i.e. TCP) pose a prob-
lem against the proposed technique. This is because ﬂows
which carry requests and corresponding ﬂows which carry
responses are often active within the same time slots. Con-
sequently, network nodes which use such protocols would
be automatically declared as relay nodes by the scheme we
have described above. But there is a simple ﬁx to this prob-
lem. Essentially, only one ﬂow of such ﬂow pairs should
contribute to the summation process for each time slot and
the other ﬂow should simply be ignored. This solution can
easily be implemented by checking if a random number has
already been accumulated for a ﬂow which has the exact re-
verse direction (i.e source and destination IP addresses and
ports are swapped) of a given ﬂow. If the answer is yes, that
ﬂow is simply ignored since its counterpart ﬂow has already
been taken into account.
2.2 Problem Formulation and Solution
Our goal is to differentiate between network trafﬁc data
which contains relay activity and that which does not. The
basic difference between these two situations is the number
of time slots in which the same ﬂow pair is simultaneously
active. That is because, although uncorrelated ﬂows may
share few time slots but it is very unlikely that the number
of such time slots is high. On the other hand, for a ﬂow
pair relaying information with a maximum tolerable delay
constraint, if one ﬂow is active for a given time slot, with
high probability the other ﬂow is active in order to relay
information before the time constraint elapses. We denote
the number of time slots shared by the same ﬂow pair as β,
which we will show very closely related to the variance of
the sum S ((σ2
S)) introduced in Section 2.1. Therefore one
can distinguish relay nodes from the corresponding (σ2
S) .
In order to state the relationship between β and σ2
S,
we deﬁne Ii and Oj for a given node in the network as
the incoming ﬂows the outgoing ﬂows respectively, where
i = 1, 2, ..., m and j = 1, 2, ..., n. For each incoming ﬂow
and each outgoing ﬂow, a random number is generated and
assigned to the corresponding ﬂow. Let RIi and ROj de-
note the random numbers assigned to the incoming ﬂow Ii
and the outgoing ﬂow Oj respectively. Here RIi and ROj
are assigned such that they are independently drawn from
the probability mass function P (n), which is:
355355
P (n) =
1
2 ,
1
2 ,
0
if n = +γ
if n = −γ
, elsewhere
, where γ ∈ (cid:2) (1)
The reason P (n) is chosen as a bipolar symmetric PMF
is that our detection algorithm requires the distribution of
RIi × ROj to be bipolar symmetric. This distribution turns
out to be bipolar symmetric as long as P (n) itself is chosen
as bipolar symmetric.
Meanwhile, let ˆit and ˆjt be the indices of the active in-
coming ﬂows and the active outgoing ﬂows respectively for
a given time slot t. Then for each time slot t, the correspond-
ing random numbers for active incoming ﬂows within t are
summed and multiplied to the sum of the random numbers
assigned to active outgoing ﬂows. This step is repeated for
each time slot and result of each step is accumulated. More
formally, the following summation S is calculated for time
slots t = 1, 2, 3, ..., T :
T(cid:4)
(cid:4)
(cid:4)
i∈ˆit
(cid:4)
i∈ˆit
t=1
T(cid:4)
t=1
S =
S =
RIi ×
ROj
j∈ˆjt
(cid:4)
j∈ˆjt
RIi × ROj
We can rewrite Equation (2) from distributive property as:
(2)
(3)
(4)
A−β(cid:4)
Assuming independent Ma values, if there is no corre-
lation between any pair of incoming and outgoing ﬂows, in
other words if there is no relaying ﬂow pairs, then Equa-
tion (4) holds and S will simply be interpreted as the sum
of independent random variables. On the other hand if yth
outgoing ﬂow (ROy) relays the packets from xth incoming
ﬂow (RIx), both RIx and ROy will be active in a number
of time slots (β), then the sum in Equation (4) can be written
as:
a=1
Ma, where β ≥ 0
S = β (RIx × ROy) +
More generally if there are F such incoming-outgoing
ﬂow pairs, namely Ifi and Ofo, where fi and fo indicate
incoming and outgoing ﬂow indices of f th pair respectively
(f = 1, 2, ..F ), and each of these pairs are simultaneously
active within βf time slots, then the summation S can be
written as:
(6)
F(cid:4)
A−β(cid:4)
S =
βf Mf +
F
f =1
(7)
Ma
(cid:9)
f =1 βf and βf ≥
where Mf = (RIfi
0 for all f. Notice that Equation (7) reduces to Equation
(6) when F = 1 indicating a single relaying input-output
ﬂow pair and further reduces to Equation (4) when F = 0
indicating no relay.
a=1
), β =
× ROfo
S noRelay
The value S is a random variable in both Equations (4)
and (7) and variance of S (σ2
S) can be used to identify relay
activity. In order to show this, let σ2
S noRelay represents the
variance of S where there’s no relay activity. We can write
= γ4A from Equation (4), since Ma values are
σ2
i.i.d random variables drawn from probability distribution
given in Equation(5) whose variance is γ4. On the other
hand, σ2
S withRelay, which represents the variance of S un-