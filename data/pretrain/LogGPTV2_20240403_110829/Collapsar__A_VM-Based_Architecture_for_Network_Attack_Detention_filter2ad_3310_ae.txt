0x0010   800a 097d 12a7 01bb 9b4c ee60 9b51 2c3e        ...}.....L.‘.Q,>
0x0020   8018 8840 e50e 0000 0101 080a 015d bdb7        ...@.........]..
0x0030   0057 f3e8 2e2f 696e 7374 0a                    .W.../inst.
... ...
/* SSH connection against sshd backdoor from another different IP! */
17:46:46.104626 xx.yyy.zzz.3.1126 > aaa.bb.c.125.cfinger: S 
389507617:389507617(0) win 8760  (DF)
0x0000  4500 0030 1ac2 4000 6f06 30b7 51c4 e503         E..0..@.o.0.Q...
0x0010  800a 097d 0466 07d3 1737 6a21 0000 0000         ...}.f...7j!....
0x0020  7002 2238 16a3 0000 0204 0218 0101 0402         p."8............
17:46:46.105445 aaa.bb.c.125.cfinger > xx.yyy.zzz.3.1126: S 
2758367448:2758367448(0) ack 389507618 win 5840  (DF)
0x0000  4500 0030 0000 4000 4006 7a79 800a 097d         E..0..@.@.zy...}
0x0010  51c4 e503 07d3 0466 a469 58d8 1737 6a22         Q......f.iX..7j"
0x0020  7012 16d0 211c 0000 0204 05b4 0101 0402         p...!...........
17:46:46.422319 xx.yyy.zzz.3.1126 > aaa.bb.c.125.cfinger: . ack 1 win 9112 (DF)
0x0000  4500 0028 1ac3 4000 6f06 30be 51c4 e503         E..(..@.o.0.Q...
0x0010  800a 097d 0466 07d3 1737 6a22 a469 58d9         ...}.f...7j".iX.
0x0020  5010 2398 4118 0000 4100 0000 0000              P.#.A...A.....
17:46:46.728800 aaa.bb.c.125.cfinger > xx.yyy.zzz.3.1126: P 1:16(15) ack 1 win 
5840 (DF) [tos 0x10] 
0x0000  4510 0037 55d5 4000 4006 248d 800a 097d         E..7U.@.@.$....}
0x0010  51c4 e503 07d3 0466 a469 58d9 1737 6a22         Q......f.iX..7j"
0x0020  5018 16d0 ac5b 0000 5353 482d 312e 352d         P....[..SSH-1.5-
0x0030  312e 322e 3235 0a                               1.2.25.
17:46:47.050246 xx.yyy.zzz.3.1126 > aaa.bb.c.125.cfinger: P 1:28(27) ack 16 
win 9097 (DF)
0x0000  4500 0043 1ac5 4000 6f06 30a1 51c4 e503         E..C..@.o.0.Q...
0x0010  800a 097d 0466 07d3 1737 6a22 a469 58e8         ...}.f...7j".iX.
0x0020  5018 2389 4c55 0000 5353 482d 312e 352d         P.#.LU..SSH-1.5-
0x0030  5075 5454 592d 5265 6c65 6173 652d 302e         PuTTY-Release-0.
0x0040  3533 0a                                         53.
Figure 8: Collapsar log information showing a possible
stepping stone attack
6.2.2 Network Scanning
Network scanning has become a common incident, with
the existence of various scanning methods such as ping
sweeping, port knocking, OS ﬁnger-printing, and ﬁre-
walking. Figure 9 shows the ICMP (ping) sweeping
activity from the same source address (xx.yy.zzz.125)
against three honeypots within a very short period of time
(1.0 second). The honeypots are virtually present in three
different production networks. Based on the payload, it
is likely that a Nachi worm [20] is performing the scan.
14:49:44.139231 xx.yy.zzz.125 > aaa.bb.9.126: icmp: echo request
0x0000   4500 005c 30de 0000 7301 0798 0c26 797d        E..\0...s....&y}
0x0010   800a 097e 0800 95dc 0200 0ace aaaa aaaa        ...~............
0x0020   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0030   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0040   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0050   aaaa                                           ..
14:50:21.853938 xx.yy.zzz.125 > ccc.dd.8.32: icmp: echo request
0x0000   4500 005c 2ece 0000 7301 0b06 0c26 797d        E..\....s....&y}
0x0010   800a 0820 0800 f2dd 0200 adcc aaaa aaaa        ................
0x0020   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0030   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0040   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0050   aaaa    
14:50:50.970419 xx.yy.zzz.125 > eee.ff.21.9: icmp: echo request
0x0000   4500 005c 3e04 0000 7301 eee6 0c26 797d        E..\>...s....&y}
0x0010   800a 1509 0800 16d1 0200 89d9 aaaa aaaa        ................
0x0020   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0030   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0040   aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa        ................
0x0050   aaaa                  
Figure 9: Collapsar log information showing a possible
ICMP sweeping scan
7 Related Work
Several recent projects are related to Collapsar. Among
the most notable are honeyd [36], Network Telescope
[35], Netbait [23], and SANS’s Internet Storm Center
[1].
Honeyd [36] is the most comparable work with re-
spect to support for multiple honeypots and trafﬁc diver-
sion. Simulating multiple virtual computer systems at the
network level with different personality engines, honeyd
is able to deceive network ﬁngerprinting tools and pro-
vide arbitrary routing topologies and services for an ar-
bitrary number of virtual systems. The most obvious dif-
ference between honeyd and Collapsar is that honeyd is
a low-interaction virtual honeypot framework, while all
honeypots in Collapsar are high-interaction virtual hon-
eypots. Honeyd is more scalable than Collapsar, since
every computer system in honeyd is simulated. On the
other hand, with high-interaction honeypots, Collapsar is
able to provide a more authentic environment for intrud-
ers to interact with and has a potential for early worm
detection.
Network Telescope [35] is an architectural framework
that provides distributed presence for the detection of
global-scale security incidents. Using a similar architec-
ture, Netbait [23] runs a set of simpliﬁed network ser-
vices in each participating machine. The services will
log all incoming requests and federate the data to a cen-
tralized server, so that pattern matching techniques can
be applied to identify well-known signatures of various
worms and viruses. Network Telescope and Netbait do
not involve real-time trafﬁc diversion mechanisms. They
are not designed as an interactive environment where ac-
tivities of intruders are closely monitored and recorded.
The Internet Storm Center [1] was set up by SANS in-
stitute in November 2000 to gather log data from par-
ticipating intrusion detection sensors. The sensors are
distributed around the world. Again, it neither presents
an interactive environment to intruders, nor is capable of
real-time intruder trafﬁc diversion.
Leveraging the power of individual honeypots, there
have been signiﬁcant advances in recent years in attack
logging and analysis. Among the most notable are VM-
based retrospection [26], backtracker [32], ReVirt [25],
and forensix [27]. VM-based retrospection [26] is ca-
pable of inspecting inner machine states from a VM
monitor. Backtracker [32] and, similarly, forensix [27]
are able to automatically identify potential sequences of
steps that could occur during an intrusion, with the help
of system call recording. These results are highly effec-
tive and can be readily applied to Collapsar to improve
the capability of individual virtual honeypots.
Meanwhile, it has been noted that virtual honeypots
based on current VM enabling platforms could expose
certain VM foot-printing [12]. Such deﬁciency could di-
minish the value of virtual honeypots. This situation has
led to another round of “arms race”: methods such as
[33] have been proposed to minimize VM foot-printing,
although the technique in [33] is still VM-speciﬁc.
8 Conclusion
We have presented the design, implementation, and eval-
uation of Collapsar, a high-interaction virtual honeypot
architecture for network attack detention. Collapsar has
the following salient properties: centralized honeypot
management and decentralized honeypot presence. Cen-
tralized management ensures consistent expertise and
quality in deploying, administering, investigating, and
correlating multiple honeypots, while decentralized vir-
tual presence provides a wide diverse view of network
attack activities and achieves convenient production net-
work participation. Real-world deployment and sev-
eral representative attack incidents captured by Collapsar
demonstrate its effectiveness and practicality.
9 Acknowledgments
We thank Dr. Eugene H. Spafford for his valuable com-
ments and advice. We thank the anonymous review-
ers for their helpful feedbacks and suggestions. We
also thank Paul Ruth for his help with the camera-ready
preparation. This work was supported in part by a grant
from the e-Enterprise Center at Discovery Park, Purdue
University.
References
[1] Internet Storm Center. http://isc.sans.org.
[2] Iroffer. http://iroffer.org/.
[3] Napster. http://www.napster.com/.
[4] psyBNC. http://www.psychoid.net/psybnc.html.
[5] Sebek. http://www.honeynet.org/tools/sebek/.
[6] Snort. http://www.snort.org.
[7] Snort-inline.
http://sourceforge.net/projects/snort-
inline/.
[8] Tcpdump. http://www.tcpdump.org.
[9] The Honeynet Project. http://www.honeynet.org.
[10] Virtual PC. http://www.microsoft.com/windowsxp/
virtualpc/.
[11] VMware. http://www.vmware.com/.
[12] VMWare FootPrinting. http://chitchat.at.infoseek.co.jp
/vmware/vmtools.html.
[13] CERT Advisory CA-2002-01 Exploitation of Vul-
in CDE Subprocess Control Service.
Jan.
nerability
http://www.cert.org/advisories/CA-2002-01.html,
2002.
[14] CERT
Server
http://www.cert.org/advisories/CA-2002-17.html,
Mar. 2003.
Apache Web
Vulnerability.
CA-2002-17
Handling
Advisory
Chunk
[15] CERT Advisory CA-2003-20 W32/Blaster Worm.
http://www.cert.org/advisories/CA-2003-20.html, Aug.
2003.
[16] CERT/CC
Overview
Incident
and
Vulnera-
Center.
CERT
Trends,
bility
http://www.cert.org/present/cert-overview-trends/,
May 2003.
[17] CERT/CC
Coordination
Vulnerability
Note
VU-298233.
http://www.kb.cert.org/vuls/id/298233, Mar. 2003.
[18] Collapsar. http://www.cs.purdue.edu/homes/jiangx/
collapsar, Dec. 2003.
[19] Linux Kernel Ptrace Privilege Escalation Vulnerability.
http://www.secunia.com/advisories/8337/, Mar. 2003.
[20] MA-055.082003:
W32.Nachi
Worm.
http://www.mycert.org.my/advisory/MA-
055.082003.html, Aug. 2003.
[21] Microsoft
Security
Bulletin
MS03-026.
http://www.microsoft.com/technet/treeview/
default.asp?url=
026.asp, 2003.
/technet/security/bulletin/MS03-
[22] P. Barham, B. Dragovic, K. Fraser, S. Hand, T. Harris,
R. N. Alex Ho, I. Pratt, and A. Warﬁeld. Xen and the Art
of Virtualization . Proceedings of ACM Symposium on
Operating Systems Principles (SOSP 2003), Oct. 2003.
[23] B. N. Chun, J. Lee, and H. Weatherspoon. Netbait: a Dis-
tributed Worm Detection Service. Intel Research Berke-
ley Technical Report IRB-TR-03-033, Sept. 2003.
[24] J. Dike.
User Mode Linux.
http://user-mode-
linux.sourceforge.net.
[25] G. W. Dunlap, S. T. King, S. Cinar, M. A. Basrai,
and P. M. Chen. ReVirt: Enabling Intrusion Analysis
Through Virtual-Machine Logging and Replay. Proceed-
ings of USENIX Symposium on Operating Systems De-
sign and Implementation (OSDI 2002), Dec. 2002.
[26] T. Garﬁnk el and M. Rosenblum. A Virtual Machine In-
trospection Based Architecture for Intrusion Detection
. Proceedings of Internet Society Symposium on Net-
work and Distributed System Security (NDSS 2003), Feb.
2003.
[27] A. Goel, M. Shea, S. Ahuja, W.-C. Feng, W.-C. Feng,
D. Maier, and J. Walpole. Forensix: A Robust, High-
Performance Reconstruction System. The 19th Sympo-
sium on Operating Systems Principles (SOSP) (poster
session), Oct. 2003.
[28] S. Hanks, T. Li, D. Farinacci, and P. Traina. Generic
Routing Encapsulation (GRE). RFC 1701, Oct. 1994.
[29] S. Hanks, T. Li, D. Farinacci, and P. Traina. Generic
Routing Encapsulation over IPv4 networks. RFC 1702,
Oct. 1994.
[30] H. J. Hoxer, K. Buchacker, and V. Sieh. Implementing
a User-Mode Linux with Minimal Changes from Origi-
nal Kernel. Linux-Kongress 2002, Koln, Germany, Sept.
2002.
[31] X. Jiang, D. Xu, and R. Eigenmann. Protection Mech-
anisms for Application Service Hosting Platforms. Pro-
ceedings of IEEE/ACM Symposium on Cluster Comput-
ing and the Grid (CCGrid 2004), Apr. 2004.
[32] S. T. King and P. M. Chen. Backtracking Intrusions. Pro-
ceedings of ACM Symposium on Operating Systems Prin-
ciples (SOSP 2003), Oct. 2003.
[33] K.
Kortchinsky.
to
measures
http://seclists.org/lists/honeypots/2004/Jan-
Mar/0015.html, Jan. 2004.
VMware
Honeypots:
Counter
ﬁngerprinting.
[34] J. V. Miller.
SHV4
Rootkit Analysis.
https://tms.symantec.com/members/AnalystReports/030929-
Analysis-SHV4Rootkit.pdf, Oct. 2003.
[35] D. Moore. Network Telescopes: Observing Small or Dis-
tant Security Events. Proceedings of the 11th USENIX
Security Symposium, Aug. 2002.
[36] N. Provos. A Virtual Honeypot Framework. Proceedings
of the 13th USENIX Security Symposium, Aug. 2004.
[37] L. Spitzner. Honeypots: Tracking Hackers. Addison-
Wesley, 2003 ISBN: 0-321-10895-7.
Dynamic
Spitzner.
[38] L.
http://www.securityfocus.com/infocus/1731,
2003.
Honeypots
.
Sept.
[39] L.
Spitzner.
Honeypot
Farms
http://www.securityfocus.com/infocus/1720,
2003.
.
Aug.
[40] L. Spitzner. Honeytokens: The Other Honeypot
http://www.securityfocus.com/infocus/1713, July 2003.
.
[41] J. Twycross and M. M. Williamson. Implementing and
testing a virus throttle . Proceedings of the 12th USENIX
Security Symposium, Aug. 2003.
[42] Y. Zhang and V. Paxson. Detecting Stepping Stones. Pro-
ceedings of the 9th USENIX Security Symposium, Aug.
2000.
[43] C. C. Zou, L. Gao, W. Gong, and D. Towsley. Monitoring
and Early Warning for Internet Worms. Proceedings of
the 10th ACM Conference on Computer and Communi-
cation Security (CCS 2003), Washington DC, USA, Oct.
2003.