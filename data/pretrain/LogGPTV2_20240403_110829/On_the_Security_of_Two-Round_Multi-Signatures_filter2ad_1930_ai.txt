for logarithmic number of concurrent signing queries. More
precisely, CoSi is (τ, qS, qC, qH, )-unforgeable in the KOSK
setting in the random-oracle model if q > 8qH/ and if the
(cid:17)
one-more discrete-logarithm problem is
kmax · τ + kmax(qS + 1) · τexp) ,

-hard,
where kmax = 8qH/ · ln(8n/) and τexp is the time of a
multi-exponentiation in G.
Sk2
max
q
8qHqqC
S
− q2
(cid:18)
Due to space constraints, we refer the reader to the full
version of this work for the proof.
It is worth noting that the above proof does not extend to the
key veriﬁcation model with proofs of possession. The reason
is that the reduction would in that case have to guess the open
queries at each of the N forking points corresponding to the
N proofs of possession for the public keys in the forgery,
resulting in a tightness loss of (qSqH)N qC. This would mean
that the scheme is secure for at most a handful of signers, i.e.,
barely useful as a multi-signature.
The proof technique does work for a polynomial number
of signers in a restricted model where the adversary has
to commit to all potential signers’ public keys before being
granted access the signing oracle. Alternatively, one could use
a scheme in the plain public-key model (i.e., without requiring
certiﬁcates) by using a different hash value as exponents for
each public key in the veriﬁcation equation [BN06], or by
using a product of hash values as exponents [MWLD10],
[MPSW18a].
7. EVALUATION
We presented mBCJ as an alternative to CoSi, where the
provable security comes at the price of an increased signature
size and a slightly increased computational cost. In this
section, we evaluate the performance of mBCJ and show that
the increased size and computational cost will not have a
signiﬁcant impact on the efﬁciency of the system.
7.1 Experiment Setup
a) Prototype: We implemented mBCJ in the Go pro-
gramming language as an extension to the Collective Authority
project (Cothority). We used the Cothority [Ded18b] and
Onet [Ded18a] libraries to provide support for the tree-based
collective signing as used in all three CoSi and mBCJ. This
experiment compares the latest version of CoSi to an imple-
mentation of mBCJ. Note that CoSi has been further developed
since its original publication [STV+16], which explains the
small differences in performance measurements between their
work and our results.
b) Physical conﬁguration: A DeterLab [Det18] testbed
was used to evaluate our system. The testbed consists of
28 physical machines, each containing an Intel Xeon E3-
1260L processor and 16GB of RAM. Every physical machine
simulated up to 586 signers for a total of 16,384 signers. A
round-trip delay of 200 milliseconds between the machines
is enforced to simulate an international connection, and all
the signers that communicate with each other are deployed to
different physical machines to correctly simulate the network
delay.
c) Tree Conﬁguration: mBCJ requires a tree structure
between the different signers. For a given amount of signers,
we can choose either a tree with a lower depth but a higher
branching factor, or accept a higher depth but a lower branch-
ing factor. The overall network delay is linear in the depth
of the tree, and the computation cost and network usage in
each node scale linearly in the branching factor. We ﬁnd that
a depth of 3 (excluding the root of the tree) yields low network
delays while keeping the computation cost and network usage
manageable, and therefore use this setting for our following
experiments, choosing a branching factor according to the
number of signers.
(cid:18)(cid:17)(cid:26)(cid:26)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:54 UTC from IEEE Xplore.  Restrictions apply. 
2
1.5
1
0.5
0
128
256
512
1024
2048
4096
8192 16384
40
35
30
25
20
15
10
5
0
128
256
512
1024
2048
4096
8192 16384
101
100
10-1
10-2
128
256
512
1024
2048
4096
8192 16384
(a) Comparing end-to-end latency of CoSi
and mBCJ signing with varying amounts of
signers.
(b) Bandwidth consumption (sent and re-
ceived combined) of CoSi and mBCJ with
varying amounts of signers.
(c) CPU time (User + System) of CoSi and
mBCJ with varying amounts of signers.
Fig. 4: Our experimental results comparing the performance of CoSi and mBCJ.
d) Experiment: We simulate the signing process of CoSi
and mBCJ to evaluate the system. In each experiment, the
leader initiates the signing protocol for an arbitrary message,
and the resulting signature is veriﬁed against the aggregate
public key. Every experiment is repeated 10 times, taking the
average of the individual runs.
7.2 Results
a) Signing Latency: To evaluate the scalability of mBCJ,
we measured the end-to-end latency of the signing process,
meaning the time between the moment that the root initiates
the signing protocol and that it outputs the signature, from 128
up to 16,384 signers. Fig. 4a depicts the results, showing that
mBCJ can easily scale to 16,384 signers, yielding a signature
in about 2 seconds. It can readily be seen that the network
delay dominates the overall latency, as the 1.2 seconds is
exactly two rounds of three round trips over the depth of
the tree. The results conﬁrm our prediction that mBCJ scales
as well as CoSi does, only marginally increasing the overall
latency compared to them.
b) Bandwidth: Our second experiment measures the
amount of data that every signer sends and receives. While
leaf-signers (signers without children in the tree) send and
receive less data, we here look at the data sent and received
by the root signer, who always has the maximum amount of
children. Fig. 4b shows that the bandwidth consumption of
CoSi5 and mBCJ are independent of the number of signers.
mBCJ uses two points ti,1 and ti,2 in the commitment instead
of one and it has three values s, γ1 and γ2 in the response
which creates the additional cost with respect to CoSi. One
may expect that these changes result in a more signiﬁcant
difference in bandwidth usage, however, the overhead of the
connection and communicating the tree structure reduced the
gap between the schemes. We believe a 20% increase in the
bandwidth is a very acceptable overhead to gain provable
security and will not hinder the system’s scalability.
5We observed a tenfold improvement in the bandwidth of the current version
of CoSi over the original one. After further investigation, we found out that
the original CoSi aggregated the bandwidth cost over the ten rounds instead
of the average.
c) Computation Cost: Our ﬁnal experiment compares the
computational cost between CoSi and mBCJ, by measuring the
total CPU time used to run all the signers (that is, the total
time should be divided by the number of signers to obtain the
average time spent per signer). We gathered both user time
and system time of running processes to compute the CPU
time, Fig. 4c shows the results. We observe a 75% average
increase from CoSi to mBCJ. The major factor in CoSi time
increase are the two multi-exponentiations required in mBCJ
to compute ti,1 and ti,2.
Overall, mBCJ is still extremely efﬁcient, as even with
16,384 signers, the average CPU time per signer is under
0.29 milliseconds.
8. CONCLUSION
Our work provides evidence that all currently known two-
round Schnorr-based multi-signature schemes (BCJ, MWLD,
CoSi, and MuSig) are insecure. On the one hand, we show
that they cannot be proved asymptotically secure under stan-
dard assumptions, and on the other hand, we give sub-
exponential attacks that can actually be mounted in practice
for reasonable parameter choices. We then propose the mBCJ
scheme as a provably secure yet highly efﬁcient alternative.
Compared to the original CoSi scheme, our experiments yield
a 73% increase in CPU time and no noticeable difference
in signing latency, showing that mBCJ is just as scalable
as CoSi or any of the other schemes and is a viable alter-
native for use in large-scale decentralized systems. Alterna-
tive secure multi-signature schemes include non-interactive
schemes based on pairings [BLS01], [Bol03], [BDN18] or
three-move schemes based on discrete logarithms without
pairings [BN06], [BDN18], [MPSW18b]. The construction
of quantum-safe multi-signatures or efﬁcient multi-signatures
in the plain public-key model without random oracles are
interesting open problems.
Our results demonstrate the usefulness as well as the
limitations of provable security. Schemes without security
proofs clearly have no place in modern cryptographic design,
especially if efﬁcient provably secure alternatives exist. Appar-
ent resistance against obvious attacks says nothing about the
security of a scheme because, as the sub-exponential attacks in
(cid:18)(cid:18)(cid:17)(cid:17)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:54 UTC from IEEE Xplore.  Restrictions apply. 
this paper have shown, subtler attacks may always be hiding
beneath the surface.
But a security proof does not provide an absolute guarantee
either. Security proofs can contain subtle ﬂaws that, as some of
the ﬂaws that we pointed out in this work, may go unnoticed
for years. Rewinding arguments, e.g., using the forking lemma,
are particularly delicate, but are often brushed aside because
of the complexity of the analysis. On the one hand, our
results show the importance of writing out detailed proofs and
carefully reviewing these proofs, but on the other hand, they
also show the need for better tools, manual or automated, to
create and verify proofs. Provable security may not be a perfect
tool, but it’s certainly the best tool that we have at the moment.
ACKNOWLEDGEMENTS
We would like to thank Stephen Schwab and the entire
DeterLab team for their support for our experiments. We
would also like to thank the anonymous referee for pointing
out a ﬂaw in an earlier version of this paper that helped us
to signiﬁcantly improve our results. Drijvers and Neven were
supported by the EU under CHIST-ERA project USE-IT.
REFERENCES
[Bar04]
[BCJ08]
[BDN18]
[bit17]
[BJ08]
Boaz Barak. Non-Black-Box Techniques in Cryptography. PhD
thesis, 2004.
Ali Bagherzandi, Jung Hee Cheon, and Stanislaw Jarecki.
Multisignatures secure under the discrete logarithm assumption
and a generalized forking lemma. ACM CCS 2008.
Dan Boneh, Manu Drijvers, and Gregory Neven. Compact
multi-signatures for smaller blockchains. ASIACRYPT 2018.
Technology roadmap – Schnorr
aggregation.
schnorr-signature-aggregation, 2017.
Ali Bagherzandi and Stanislaw Jarecki. Multisignatures using
proofs of secret key possession, as secure as the Difﬁe-Hellman
problem. SCN 2008.
signatures and signature
https://bitcoincore.org/en/2017/03/23/
[BL13]
[BKJ+17] Maria Borge, Eleftherios Kokoris-Kogias, Philipp Jovanovic,
Linus Gasser, Nicolas Gailly, and Bryan Ford.
Proof-of-
personhood: Redemocratizing permissionless cryptocurrencies.
2017 IEEE European Symposium on Security and Privacy
Workshops, EuroS&P Workshops 2017.
Foteini Baldimtsi and Anna Lysyanskaya. On the security of
one-witness blind signature schemes. ASIACRYPT 2013.
Dan Boneh, Ben Lynn, and Hovav Shacham. Short signatures
from the Weil pairing. ASIACRYPT 2001.
Mihir Bellare and Gregory Neven. Multi-signatures in the plain
public-key model and a general forking lemma. ACM CCS
2006.
[BLS01]
[BN06]
[BP02]
[Bol03]
[BNPS03] Mihir Bellare, Chanathip Namprempre, David Pointcheval, and
Michael Semanko. The one-more-RSA-inversion problems and
the security of Chaum’s blind signature scheme. Journal of
Cryptology, 16(3):185–215, June 2003.
Alexandra Boldyreva. Threshold signatures, multisignatures
and blind signatures based on the gap-Difﬁe-Hellman-group
signature scheme. PKC 2003.
Mihir Bellare and Adriana Palacio. GQ and Schnorr identiﬁ-
cation schemes: Proofs of security against impersonation under
active and concurrent attacks. CRYPTO 2002.
Dan Boneh and Ramarathnam Venkatesan. Breaking RSA may
not be equivalent to factoring. EUROCRYPT 1998.
Dedis. Cothority overlay network library. https://github.com/
dedis/onet, 2018. [Online; accessed February-2018].
Dedis. Scalable collective authority prototype. https://github.
com/dedis/cothority, 2018. [Online; accessed February-2018].
DeterLab: Cyber-Defense Technology Experimental Research
Laboratory.
[Online; ac-
cessed February-2018].
https://www.isi.deterlab.net, 2018.
[Ded18b]
[Ded18a]
[Det18]
[BV98]
[IN83]
[KJG+16]
K. Itakura and K. Nakamura. A public-key cryptosystem suit-
able for digital multisignatures. NEC Research & Development,
71:1–8, 1983.
Eleftherios Kokoris-Kogias, Philipp Jovanovic, Nicolas Gailly,
Ismail Khofﬁ, Linus Gasser, and Bryan Ford. Enhancing bitcoin
security and performance with strong consistency via collective
signing. USENIX Security 2016.
[LOS+06]
[KKJG+18] Eleftherios Kokoris-Kogias, Philipp Jovanovic, Linus Gasser,
Nicolas Gailly, Ewa Syta, and Bryan Ford. OmniLedger: A
secure, scale-out, decentralized ledger via sharding. 2018 IEEE
Symposium on Security and Privacy.
Steve Lu, Rafail Ostrovsky, Amit Sahai, Hovav Shacham, and
Brent Waters. Sequential aggregate signatures and multisigna-
tures without random oracles. EUROCRYPT 2006.
Markus Michels and Patrick Horster. On the risk of disruption
in several multiparty signature schemes. ASIACRYPT 1996.
Silvio Micali, Kazuo Ohta, and Leonid Reyzin. Accountable-
subgroup multisignatures: Extended abstract. ACM CCS 2001.
[MPSW18a] Gregory Maxwell, Andrew Poelstra, Yannick Seurin, and Pieter
Wuille. Simple Schnorr multi-signatures with applications to
Bitcoin. Cryptology ePrint Archive, Report 2018/068, Version
20180118:124757, 2018.
[MOR01]
[MH96]
[MPSW18b] Gregory Maxwell, Andrew Poelstra, Yannick Seurin, and Pieter
Wuille. Simple Schnorr multi-signatures with applications to
Bitcoin. Cryptology ePrint Archive, Report 2018/068, Version
20180520:191909, 2018.
Lorenz Minder and Alistair Sinclair.
The extended k-tree
algorithm. In Claire Mathieu, editor, 20th SODA. ACM-SIAM,
2009.
[MS09]
[PS00]
[PV05]
[NS15]
[OO93]
[Oka93]
[Nak08]
[NSW09]
[NKJ+17]
[MWLD10] Changshe Ma, Jian Weng, Yingjiu Li, and Robert H. Deng.
Efﬁcient discrete logarithm based multi-signature scheme in the
plain public key model. Des. Codes Cryptography, 54(2):121–
133, 2010.
Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash
system. 2008.
Kirill Nikitin, Eleftherios Kokoris-Kogias, Philipp Jovanovic,
Nicolas Gailly, Linus Gasser, Ismail Khofﬁ, Justin Cappos,
and Bryan Ford. CHAINIAC: proactive software-update trans-
parency via collectively signed skipchains and veriﬁed builds.
USENIX Security 2017.
Ivica Nikolic and Yu Sasaki. Reﬁnements of the k-tree algo-
rithm for the generalized birthday problem. ASIACRYPT 2015.
Gregory Neven, Nigel P. Smart, and Bogdan Warinschi. Hash
function requirements for Schnorr signatures. J. Mathematical
Cryptology, 3(1):69–87, 2009.
Tatsuaki Okamoto. Provably secure and practical identiﬁcation
schemes and corresponding signature schemes. CRYPTO 1992.
Kazuo Ohta and Tatsuaki Okamoto. A digital multisignature
scheme based on the Fiat-Shamir scheme. ASIACRYPT 1991.
David Pointcheval and Jacques Stern. Security arguments for
digital signatures and blind signatures. Journal of Cryptology,
13(3):361–396, 2000.
Pascal Paillier and Damien Vergnaud. Discrete-log-based signa-
tures may not be equivalent to discrete log. ASIACRYPT 2005.
Thomas Ristenpart and Scott Yilek. The power of proofs-of-
possession: Securing multiparty signatures against rogue-key
attacks. EUROCRYPT 2007.
Claus-Peter Schnorr. Efﬁcient signature generation by smart
cards. Journal of Cryptology, 4(3):161–174, 1991.
Claus-Peter Schnorr. Security of blind discrete log signatures
against interactive attacks. ICICS 2001.
Victor Shoup. Lower bounds for discrete logarithms and related
problems. EUROCRYPT 1997.
[SJKK+17] Ewa Syta, Philipp Jovanovic, Eleftherios Kokoris-Kogias, Nico-
las Gailly, Linus Gasser, Ismail Khofﬁ, Michael J. Fischer, and
Bryan Ford. Scalable bias-resistant distributed randomness.
2017 IEEE Symposium on Security and Privacy.
Ewa Syta, Iulia Tamas, Dylan Visher, David Isaac Wolinsky,
Philipp Jovanovic, Linus Gasser, Nicolas Gailly, Ismail Khofﬁ,
and Bryan Ford. Keeping authorities“honest or bust” with
decentralized witness cosigning. 2016 IEEE Symposium on
Security and Privacy.
David Wagner. A generalized birthday problem. In Moti Yung,
editor, CRYPTO 2002, volume 2442 of LNCS, pages 288–303.
Springer, Heidelberg, August 2002.
Brent R. Waters. Efﬁcient identity-based encryption without
random oracles. EUROCRYPT 2005.
[STV+16]
[Wag02]
[Wat05]
[Sho97]
[Sch91]
[Sch01]
[RY07]
(cid:18)(cid:18)(cid:17)(cid:18)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:54 UTC from IEEE Xplore.  Restrictions apply.