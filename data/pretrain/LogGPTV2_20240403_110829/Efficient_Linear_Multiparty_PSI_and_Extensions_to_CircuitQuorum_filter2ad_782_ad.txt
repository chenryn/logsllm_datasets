if and only if 𝑃1’s element Table1[ 𝑗] belongs to the intersection
(except with a small error probability as explained later). The next
goal is to reveal 𝑣 𝑗 = 𝑠 𝑗 · 𝑎 𝑗 to 𝑃1, where 𝑠 𝑗 ∈ F𝑝 is uniformly
random. This ensures that if 𝑎 𝑗 is 0 then 𝑣 𝑗 is still 0, else 𝑣 𝑗 is a
uniform random element in F𝑝 (except with small probability when
𝑠 𝑗 = 0) and hides 𝑎 𝑗. To realize this, the parties convert the additive
shares of 𝑎 𝑗 to (𝑛, 𝑡)− shares of 𝑎 𝑗, using ConvertShares𝑛,𝑡 , and
then invoke the multiplication functionality to multiply with a
random 𝑠 𝑗 that is generated during the Pre-processing step. The
values 𝑣 𝑗 are revealed to 𝑃1 for each 𝑗 ∈ [𝛽]. In the final step 𝑃1
Table1[ 𝑗], permutes the elements in 𝑌 (to hide
sets 𝑌 =
the relative ordering of elements in Table1) and sends it to all the
other parties.
𝑗 ∈[𝛽]:𝑣𝑗 =0

3.2 Correctness and Security Proof
Theorem 3.1. The protocol in Figure 4 securely realizes F 𝑛,𝑚
PSI
in the F -hybrid model, where F = (F 𝛽,𝜎,𝑁
wPSM , ConvertShares𝑛,𝑡 ,
RandomF𝑛,𝑡 , MultF𝑛,𝑡 , Reveal𝑛,𝑡), against a semi-honest adversary
corrupting 𝑡  𝑛 is a prime. Let 𝑑 = ⌈log 𝑝⌉ − 1 and 𝑏𝑑𝑏𝑑−1 · · · 𝑏1𝑏0 denote the binary
representation of 𝑝 − 1. Let S = {𝑖 ∈ ({0} ∪ [𝑑]) : 𝑏𝑖 = 1} and ind𝑘, . . . , ind1, ind0 be the ascending order of elements in 𝑆, where
𝑘 = |S| − 1 .
Input: Each party 𝑃𝑖 has input set 𝑋𝑖 = {𝑥𝑖1, · · · , 𝑥𝑖𝑚}, where 𝑥𝑖 𝑗 ∈ {0, 1}𝜎. Note that element size can always be made 𝜎 bits by first
hashing the elements using an appropriate universal hash function.
Protocol:
(1) Hashing: Parties agree on hash functions ℎ1, ℎ2, ℎ3 : {0, 1}𝜎 → [𝛽].
wPSM functionality: For each 𝑖 ∈ {2, · · · , 𝑛} , 𝑃1 and 𝑃𝑖 invoke the F 𝛽,𝜎,𝑁
𝑃1 does stash-less cuckoo hashing on 𝑋1 using ℎ1, ℎ2, ℎ3 to generate Table1 and inserts random elements into empty bins.
For 𝑖 ∈ {2, · · · , 𝑛}, 𝑃𝑖 does simple hashing of 𝑋𝑖 using ℎ1, ℎ2, ℎ3 into Table𝑖, i.e., stores each 𝑥 ∈ 𝑋𝑖 at locations ℎ1(𝑥), ℎ2(𝑥) and
ℎ3(𝑥). If the three locations are not distinct, random dummy values are inserted in bin with collision.
• 𝑃𝑖 is the sender with inputs {Table𝑖[ 𝑗]} 𝑗 ∈[𝛽] and 𝑃1 is the receiver with inputs {Table1[ 𝑗]} 𝑗 ∈[𝛽].
• 𝑃𝑖 receives the outputs {𝑤𝑖 𝑗} 𝑗 ∈[𝛽] and 𝑃1 receives {𝑦𝑖 𝑗} 𝑗 ∈[𝛽].
𝑃1 and 𝑃𝑖 send their inputs 𝑦𝑖 𝑗 and 𝑤𝑖 𝑗, resp., and receive boolean shares ⟨𝑒𝑞𝑖 𝑗⟩𝐵
EQ functionality: For each 𝑖 ∈ {2, · · · , 𝑛} and for each 𝑗 ∈ [𝛽], 𝑃1 and 𝑃𝑖 invoke the F 𝜎
B2A functionality: For each 𝑖 ∈ {2, · · · , 𝑛} and for each 𝑗 ∈ [𝛽], 𝑃1 and 𝑃𝑖 invoke the F F𝑝
functionality for 𝑁 = 3𝑚 as follows:
𝑖 resp., as outputs.
functionality as follows:
functionality as follows:
1 and ⟨𝑒𝑞𝑖 𝑗⟩𝐵
(2) Invoking the F 𝛽,𝜎,𝑁