14
APPENDIX A
SKETCH OF SECURITY PROOFS
This appendix sketches the security proofs of the crypto-
graphic construction described in Section III.
a) Unforgeability: There are two possible ways for an
adversary to forge a proof of a credential: (i) an adversary
without a valid credential nevertheless manages to form a proof
such that VerifyCred passes; and (ii), an adversary that has
successfully interacted with fewer than t authorities generates
a valid consolidated credential (of which they then honestly
prove possession using ProveCred).
Unforgeability in scenario (i) is ensured by the soundness
property of the zero-knowledge proof. For scenario (ii), run-
ning AggCred involves performing Lagrange interpolation.
If an adversary has fewer than t partial credentials,
then
they have fewer than t points, which makes the resulting
polynomial (of degree t − 1) undetermined and information-
theoretically impossible to compute. The only option available
to the adversary is thus to forge the remaining credentials
directly. This violates the unforgeability of the underlying blind
signature scheme, which was proved secure by Pointcheval and
Sanders [43] under the LRSW assumption [37].
b) Blindness: Blindness follows directly from the blind-
ness of the signature scheme used during IssueCred, which
was largely proved secure by Pointcheval and Sanders [43] un-
der the XDH assumption [10]. There are only two differences
between their protocol and ours.
First, the Coconut authorities generate the credentials from
1 for random
a group element h = H(cm) instead of from g ˜r
˜r ∈ Fp. The hiding property of the commitment cm, however,
ensures that H(cm) does not reveal any information about m.
Second, Pointcheval and Sanders use a commitment to the
attributes as input to BlindSign (see Section III-C), whereas
Coconut uses an encryption instead. The IND-CPA property,