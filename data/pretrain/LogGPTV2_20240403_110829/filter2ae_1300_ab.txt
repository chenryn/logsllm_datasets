>
> A 字符串数据。这是一个引用的数据位置，包含一系列符合IDA已知字符串数据类型的字符序列，例如以空字符结尾的ASCII C字符串。
#### 命令行模式
可以使用以下命令之一启动IDA：
    idaq input-file（所有平台：启动图形界面）
    idaw input-file（Windows：启动文本界面）
    idal input-file（Linux / Mac：启动文本界面）
将“64”后缀添加到命令名称中，以启动64位版本的IDA。例如：
    idaq64 input-file
将启动64位图形界面。
命令行的参数包括以下几种：
    -a 禁用自动分析
    -A 自主模式。 IDA不会显示对话框。
       设计与-S开关一起使用。
    -b + #### 加载地址。后加上一个十六进制的数字。（中间无空格，下略）
    -B 批处理模式。 IDA将自动生成.IDB和.ASM文件
    -c 反汇编新文件。（删除旧数据库）
    -d + directive
       指示首要加载的配置。
       例如:
           -dVPAGESIZE=8192
    -D + directive
      指示次要加载的配置。
    -f 禁用FPP指令 (仅在IBM PC下可用)
    -h 帮助页面
    -i + #### 程序入口点（十六进制）
    -I + #将IDA设置为即时调试器（0禁用，1启用）
    -L + #### 指定log的文件名
    -M 禁用鼠标（仅限文本）
    -O + #### 传递给插件的选项
    -o + #### 指定输出数据库（隐含-c）
    -p + #### 指定处理器类型
    -P+ 压缩数据库（创建压缩的IDB）
    -P 打包数据库（创建未压缩的IDB）
    -P-不打包数据库（不要重新编译，看Abort命令）
    -r + ###  立即运行内置的调试器（格式在###中设置）
    -R 加载MS Windows exe文件资源
    -S###  数据库打开时执行脚本文件。 
       脚本文件扩展名用于确定哪个extlang将运行脚本。 
       可以在脚本名称之后传递命令行参数。 
       例如：
            -S"myscript.idc argument1 \"argument 2\" argument3" 
           传递的参数存储在“ARGV”全局IDC变量中。 
           使用“ARGV.count”来确定参数的数量。 
           第一个参数“ARGV [0]”包含脚本名称
    -T###  将输入文件作为指定的文件类型解释 
       在“加载文件”对话框中可见
    -t     创建一个空的数据库文件
    -W###  指定MS Windows目录
    -x 不要创建分段
        （与Dump数据库命令配对使用） 
         此开关仅影响EXE和COM格式文件。
    -z debug:
                   00000001 drefs
                   00000002 offsets
                   00000004 first
                   00000008 idp module
                   00000010 idr module
                   00000020 plugin module
                   00000040 ids files
                   00000080 config file
                   00000100 check heap
                   00000200 checkarg
                   00000400 demangler
                   00000800 queue
                   00001000 rollback
                   00002000 already data or code
                   00004000 type system
                   00008000 show all notifications
                   00010000 debugger
                   00200000 Appcall 
                   00400000 source-level debugger
    -? 适用于下一个版本
    ?  适用于下一个版本
对于批处理模式，必须使用以下命令行调用IDA：
    idaq -B input-file
相当于
    idaq -c -A -Sanalysis.idc input-file
文本界面（idaw.exe / idal）更适合批处理模式，因为它使用较少的系统资源。  
但是，请注意，常用插件不会自动加载到批处理模式，因为analysis.idc文件会退出，内核没有机会加载它们。
有关更多信息，请参阅IDC子目录中的analysis.idc文件。
#### 主要功能
IDA是一个交互式反汇编程序。用户可以主动参与反汇编过程。  
它不能自动分析程序，而是向你提示可疑的地方，未解决的问题等。  
而你的工作就是指挥IDA进行分析。
如果你第一次使用IDA，下面是一些你会发现非常有用的命令：
> 转换为指令（Code）：热键是“C”  
>  转换为数据（Data）：热键是“D”
所做的所有更改都保存到磁盘  
（译者注：即.idb数据库文件。IDA不会对原程序做任何改动。除非使用Patch Program插件）。  
当您再次运行时，IDA会从磁盘读取被分析文件的所有信息，以便可以继续您的工作。  
（译者注：同样指的是.idb数据库文件，无论原程序被改动甚至是删除都不影响）
    CODE:00401000 6A 00 push0  
    CODE:00401002 E8 64 02 00 00callGetModuleHandleA ; Call Procedure
按下D，你会看到：
    CODE:00401000 6A 00 push0
    CODE:00401000   ;   
    ---------------------------------------------------------------------------    CODE:00401002 E8db 0E8h
    CODE:00401003 64db  64h ; d
    CODE:00401004 02db2
    CODE:00401005 00db0
    CODE:00401006 00db0
    CODE:00401007   ; 
    ---------------------------------------------------------------------------
逆向的不是很友好，只有ida的介绍使用，建议大家去ctf-wiki里面看看re这块的。
## 快速搭建系统服务
### 如何快速设置FTP服务器
请用pip或easy_install安装pyftpdlib。
    sudo easy_install pysendfile
    sudo easy_install pyftpdlib
或者
    sudo pip2 install pysendfile
    sudo pip2 install pyftpdlib
如果您已经成功安装了pyftpdlib，请按以下步骤启动：
    root@lab:/tmp/pyftpdlib# python -m pyftpdlib -w -p 21
    pyftpdlib/authorizers.py:240: RuntimeWarning: write permissions assigned to anonymous user.
      RuntimeWarning)
      [I 2016-03-06 10:00:11] >>> starting FTP server on 0.0.0.0:21, pid=2090 ver
    Microsoft Windows XP [Version 5.1.2600]
    C:\Documents and Settings\test\Desktop>ftp 192.168.1.103
    Connected to 192.168.1.103.
    220 pyftpdlib 1.5.0 ready.
    User (192.168.1.103:(none)): anonymous
    331 Username ok, send password.
    Password:
    230 Login successful.
    ftp> ls
    200 Active data connection established.
    125 Data connection already open. Transfer starting.
    .ci
    .coveragerc
    .git
    ...
您也可以使用其他客户端，例如：ncftp。
### Twistd
如何用Twisted启动一个ftp服务器。
    root@lab:/tmp# twistd -n ftp --help
    Usage: twistd [options] ftp [options].
        WARNING: This FTP server is probably INSECURE do not use it.
    Options:
      -p, --port=            set the port number [default: 2121]
      -r, --root=            define the root of the ftp-site. [default:
                             /usr/local/ftp]
          --userAnonymous=   Name of the anonymous user. [default: anonymous]
          --help             Display this help and exit.
          --help-auth-type=  Show help for a particular authentication type.
          --auth=            Specify an authentication method for the server.
          --password-file=   Specify a file containing username:password login info
                             for         authenticated connections. (DEPRECATED; see
                             --help-auth instead)
          --version          Display Twisted version and exit.
          --help-auth        Show all authentication methods available.
    sroot@lab:/tmp# tudo easy_install twisted
    root@lab:/tmp# twistd -n ftp -p 2121 --userAnonymous=anonymous 
    2016-03-06 11:24:24-0500 [-] Log opened.
    2016-03-06 11:24:24-0500 [-] twistd 15.5.0 (/usr/bin/python 2.7.11) starting up.
    2016-03-06 11:24:24-0500 [-] reactor class: twisted.internet.epollreactor.EPollReactor.
    2016-03-06 11:24:24-0500 [-] FTPFactory starting on 2121
    2016-03-06 11:24:24-0500 [-] Starting factory 