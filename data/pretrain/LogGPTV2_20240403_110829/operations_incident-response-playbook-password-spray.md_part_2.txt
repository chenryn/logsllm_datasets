```powershell
Connect-MgGraph -Scopes "Domain.Read.All"
Get-MgDomain -DomainId "contoso.com"
```
### Is the authentication federated or managed?
If the authentication is federated, then successful sign-ins are stored in Microsoft Entra ID. The failed sign-ins are in their Identity Provider (IDP). For more information, see [AD FS troubleshooting and event logging](/windows-server/identity/ad-fs/troubleshooting/ad-fs-tshoot-logging).
If the authentication type is managed&ndash;cloud-only, password hash sync (PHS), or pass-through authentication (PTA)&ndash;then successful and failed sign-ins are stored in the Microsoft Entra sign-in logs.
>[!Note]
>The [Staged Rollout](/azure/active-directory/hybrid/how-to-connect-staged-rollout) feature allows the tenant domain name to be federated but specific users to be managed. Determine if any users are members of this group.
>
### Is Microsoft Entra Connect Health enabled for ADFS?
- The [RiskyIP report](/azure/active-directory/hybrid/how-to-connect-health-adfs-risky-ip) provides suspect IPs and date/time. Notifications should be enabled.
- Also check the [federated sign-ins investigation from the Phishing playbook](incident-response-playbook-phishing.md#federated-scenario)
### Is the advanced logging enabled in ADFS?
- This setting is a requirement for ADFS Connect Health, but it can be enabled independently
- See how to [enable ADFS Health Connect](/azure/active-directory/hybrid/how-to-connect-health-agent-install#installing-the-azure-ad-connect-health-agent-for-ad-fs))
- Also check the [Federated sign-ins investigation from the Phishing playbook](incident-response-playbook-phishing.md#federated-scenario)
### Are the logs stored in SIEM?
To check whether you are storing and correlating logs in a Security Information and Event Management (SIEM) or in any other system:
- Log analytics- prebuilt queries
- Sentinel- prebuilt queries
- Splunk – prebuilt queries
- Firewall logs
- UAL if > 30 days
### Understanding Microsoft Entra ID and MFA reporting
It's important that you understand the logs that you are seeing to be able to determine compromise. Here are quick guides to understanding Microsoft Entra Sign-Ins and MFA reporting:
- [MFA reporting]()
- [Understanding Sign Ins](/azure/active-directory/reports-monitoring/concept-sign-ins)
### Incident triggers
An incident trigger is an event or a series of events that causes predefined alert to trigger. An example is the number of bad password attempts has gone above your predefined threshold. Here are further examples of triggers that can be alerted in password spray attacks and where these alerts are surfaced. Incident triggers include:
- Users
- IP
- User agent strings
- Date/time
- Anomalies
- Bad password attempts
    :::image type="content" source="./media/incident-response-playbook-password-spray/Badpwdattempt.jpg" alt-text="pwdattempts":::
    *Graph depicting number of bad password attempts*
Unusual spikes in activity are key indicators through Microsoft Entra Health Connect (assuming this component is installed). Other indicators are:
- Alerting through SIEM shows a spike when you collate the logs.
- Larger than normal log size for ADFS failed sign-ins, which can be an alert in SIEM tool).
- Increased amounts of 342/411 event IDs – username or password is incorrect. Or 516 for extranet lockout.
- Hit failed authentication request threshold – Risky IP in Microsoft Entra ID or SIEM tool alert/both 342 and 411 errors (To be able to view this information, the advanced logging should be turned on.)
### Risky IP in Microsoft Entra Health Connect portal
Risky IP alerts occur when the customized threshold has been reached for bad passwords in an hour and bad password count in a day and extranet lockouts.
![Example of risky IP report data](./media/incident-response-playbook-password-spray/RiskyIPReport.jpg)
*Risky IP report data*
The details of failed attempts are available in the tabs **IP address** and **extranet lockouts**.
![ipaddresstable](./media/incident-response-playbook-password-spray/ipaddress1.png)
*IP address and extranet lockouts in the Risky IP report*
### Detect password spray in Azure Identity Protection
Azure Identity Protection is a Microsoft Entra ID P2 feature that has a password-spray detection risk alert and search feature that provides more information or automatic remediation.
:::image type="content" source="./media/incident-response-playbook-password-spray/Detectpwd.png" alt-text="Example of password spray attack":::
*Details of a password spray attack*
### Low and slow attack indicators
Low and slow attack indicators are when thresholds for account lockout or bad passwords aren't being hit. You can detect these indicators through:
- Failures in GAL order
- Failures with repetitive attributes (UA, target AppID, IP block/location)
- Timing – automated sprays tend to have a more regular time interval between attempts.
### Investigation and mitigation
>[!Note]
>You can perform investigation and mitigation simultaneously during sustained/ongoing attacks.
>
1. Turn advanced logging on ADFS if it isn't already turned on.
2. Determine the date and time of start of the attack.
3. Determine the attacker IP address (might be multiple sources and multiple IP addresses) from the firewall, ADFS, SIEM or Microsoft Entra ID.
4. Once password spray confirmed, you might have to inform the local agencies (police, third parties, among others).
5. Collate and monitor the following Event IDs for ADFS:
    **ADFS 2012 R2**
    - Audit event 403 – user agent making the request
    - Audit event 411 – failed authentication requests
    - Audit event 516 – extranet lockout
    - Audit Event 342 – failed authentication requests
    - Audit Event 412 - Successful log in
6. To collect the *Audit Event 411 - failed authentication requests,* use the following [script](/samples/browse/?redirectedfrom=TechNet-Gallery):
    ```powershell
    PARAM ($PastDays = 1, $PastHours)
    #************************************************
    #ADFSBadCredsSearch.ps1
    #Version 1.0
    #Date: 6-20-2016
    #Author: Tim Springston [MSFT]
    #Description: This script will parse the ADFS server's (not proxy) security ADFS
    #for events which indicate an incorrectly entered username or password. The script can specify a
    #past period to search the log for and it defaults to the past 24 hours. Results >#will be placed into a CSV for
    #review of UPN, IP address of submitter, and timestamp.
    #************************************************
    cls
    if ($PastHours -gt 0)
    {$PastPeriod = (Get-Date).AddHours(-($PastHours))}
    else
    {$PastPeriod = (Get-Date).AddDays(-($PastDays))}
    $Outputfile = $Pwd.path + "\BadCredAttempts.csv"
    $CS = get-wmiobject -class win32_computersystem
    $Hostname = $CS.Name + '.' + $CS.Domain
    $Instances = @{}
    $OSVersion = gwmi win32_operatingsystem
    [int]$BN = $OSVersion.Buildnumber
    if ($BN -lt 9200){$ADFSLogName = "AD FS 2.0/Admin"}
    else {$ADFSLogName = "AD FS/Admin"}
    $Users = @()
    $IPAddresses = @()
    $Times = @()
    $AllInstances = @()
    Write-Host "Searching event log for bad credential events..."
    if ($BN -ge 9200) {Get-Winevent -FilterHashTable @{LogName= "Security"; >StartTime=$PastPeriod; ID=411} -ErrorAction SilentlyContinue | Where-Object{$_.Message -match "The user name or password is incorrect"} | % {
    $Instance = New-Object PSObject
    $UPN = $_.Properties[2].Value
    $UPN = $UPN.Split("-")[0]
    $IPAddress = $_.Properties[4].Value
    $Users += $UPN
    $IPAddresses += $IPAddress
    $Times += $_.TimeCreated
    add-member -inputobject $Instance -membertype noteproperty -name >"UserPrincipalName" -value $UPN
    add-member -inputobject $Instance -membertype noteproperty -name "IP Address" ->value $IPAddress
    add-member -inputobject $Instance -membertype noteproperty -name "Time" -value >($_.TimeCreated).ToString()
    $AllInstances += $Instance
    $Instance = $null
    }
    }
    $AllInstances | select * | Export-Csv -Path $Outputfile -append -force ->NoTypeInformation
    Write-Host "Data collection finished. The output file can be found at >$outputfile`."
    $AllInstances = $null
    ```
#### ADFS 2016/2019
Along with the above event IDs, collate the *Audit Event 1203 – Fresh Credential Validation Error*.
1. Collate all successful sign-ins for this time on ADFS (if federated). A quick sign-in and logout (at the same second) can be an indicator of a password being guessed successfully and being tried by the attacker.
2. Collate any Microsoft Entra successful or interrupted events for this time-period for both federated and managed scenarios.
### Monitor and collate Event IDs from Microsoft Entra ID
See how to find the [meaning of error logs](https://login.microsoftonline.com/error).
The following Event IDs from Microsoft Entra ID are relevant:
- 50057 - User account was disabled
- 50055 - Password expired
- 50072 - User prompted to provide MFA
- 50074 - MFA required
- 50079 - user needs to register security info
- 53003 - User blocked by Conditional Access
- 53004 - Cannot configure MFA due to suspicious activity
- 530032 - Blocked by Conditional Access on Security Policy
- Sign-In status Success, Failure, Interrupt
### Collate event IDs from Sentinel playbook
You can get all the Event IDs from the Sentinel Playbook that is available on [GitHub](https://github.com/Azure/Azure-Sentinel/blob/49fee965c9def6890b7e5f2ad96cc1a89d73db26/Detections/SigninLogs/SigninPasswordSpray.yaml).
### Isolate and confirm attack
Isolate the ADFS and Microsoft Entra successful and interrupted sign-in events. These are your accounts of interest.
Block the IP Address ADFS 2012R2 and above for federated authentication. Here's an example:
```powershell
Set-AdfsProperties -AddBannedIps "1.2.3.4", "::3", "1.2.3.4/16"
```
### **Collect ADFS logs**
Collect multiple event IDs within a time frame. Here's an example: