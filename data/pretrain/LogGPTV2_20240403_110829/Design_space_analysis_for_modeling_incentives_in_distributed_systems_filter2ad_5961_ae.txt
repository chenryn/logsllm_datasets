### Experimental Setup and Results

- **Number of Leechers**: 50
- **Seeder Configuration**: One seeder with an upload bandwidth of 128 KBps.
- **Tracker**: A local tracker was set up, with peers downloading 5MB files.
- **Bandwidth Distribution**: The distribution provided by [24] was used.
- **Peer Behavior**: Peers leave the swarm upon completing their download.

**Results**:
- Figures 9 and 10 present the results of these experiments. Each data point in the figures represents the average of at least 10 runs, with error bars indicating 95% confidence intervals.
- The decision to use a cluster for these experiments is based on the arguments and results presented in [27].

### Comparison of Protocols

#### BitTorrent vs. Loyal-When-Needed
- **Figure 9(a)**: This figure shows the competitive encounters between BitTorrent and Loyal-When-Needed clients.
- **Trend**: Loyal-When-Needed clients exhibit consistent average download times, which are largely independent of the swarm composition.
- **Performance**: Loyal-When-Needed clients never perform worse than BitTorrent clients and significantly outperform them when they are in the majority.

#### Birds vs. BitTorrent
- **Figure 9(b)**: This figure validates our game-theoretic analysis from Section 2.3.
- **Comparison**: Birds clients perform as well as or better than BitTorrent clients in all proportions.
- **Statistical Significance**: The difference is statistically significant if the proportion of Birds clients is three-quarters or more.
- **Conclusion**: A swarm consisting only of Birds clients results in significantly better average download times compared to a swarm with only BitTorrent clients.

#### Birds vs. Loyal-When-Needed
- **Figure 9(c)**: This figure compares the performance of Birds and Loyal-When-Needed clients.
- **Observation**: A swarm with only Birds clients achieves better average download times.
- **Validation**: This result, along with previous findings, validates our DSA (Design Space Analysis) approach, which ranks Birds highly in performance (as discussed in Section 4.4.2).
- **Robustness**: According to DSA, the Loyal-When-Needed protocol is more robust than Birds. The performance degradation of Birds becomes statistically significant when the two protocols compete, especially when Loyal-When-Needed clients are in the majority.

### Performance of Various Protocols

- **Uniform Protocol Execution**: We compare the performance of different protocols when all peers in the population execute the same protocol.
- **Additional Protocols**: Two additional protocols discovered through DSA are considered.
- **Figure 10**: This figure shows that the Sort-S protocol, along with Birds, performs the best when all peers follow the same protocol.
- **Sort-S Protocol**: This protocol uses the Sort Slowest ranking function, defects on strangers, and has only one partner.
- **Sort Random**: A protocol using the Sort Random ranking function performs as well as BitTorrent, recalling the results in [15].
- **Note**: Figure 10 does not provide information about the robustness of these protocols.

### Related Work

The study of incentive mechanisms in distributed systems has been extensively researched. Works can be categorized into those before and after seminal papers by Feigenbaum and Shenker [6], and Dash et al. [5]. We focus on the latter.

- **Mahajan et al. [18]**: They described unsuccessful attempts to apply game theory to system design and suggested relaxing the notion of perfect selfishness to increase its applicability.
- **Feldman et al. [7]**: Applied evolutionary game-theoretic analysis to P2P design, focusing on simple cooperation, defection, and reciprocation. Our analysis covers a broader space of protocols.
- **Qiu et al. [26]**: Showed that BitTorrent is a Nash Equilibrium under certain assumptions. We used a different abstraction and proved otherwise.
- **Levin et al. [16]**: Argued that BitTorrent is an auction and developed a more robust variant. We showed that considering BitTorrent as a strategy in a game also leads to insights and developed a more robust variant.
- **Other Variants**: Many papers propose protocol variants not based on game-theoretic analysis [2, 15]. Ours is the first comprehensive, simulation-based approach.

### Conclusion and Future Work

- **Design Space Analysis (DSA)**: We introduced DSA, a simulation-based approach that complements game-theoretic analysis of incentives in distributed protocols.
- **Key Features**: DSA emphasizes the specification and analysis of a design space rather than proposing a single protocol. It provides in-depth analysis of protocol variants and can be used for designing deployable protocols.
- **Future Directions**: We aim to explore a solution concept similar to PRA quantification for heuristic-based exploration of the design space. We also plan to test DSA on other distributed domains beyond P2P.

### Acknowledgements

This work was partially supported by the Higher Education Commission (HEC) of Pakistan and the European Community 7th Framework Program through the QLectives and P2P-Next projects (grant no. 231200, 216217). We thank MÃ¡rk Jelasity and his group at Szeged, Hungary, for their valuable feedback. We also thank the anonymous reviewers and our shepherd, Scott Shenker, for their guidance.

### References

[References listed as in the original text]

### Appendix: BitTorrent Nash Equilibrium

- **Notation and Setup**: We use the notation from Table 1 and the results from Sections 2.2 and 2.3.
- **Proof**: We show that BitTorrent is not a Nash equilibrium (NE) by considering a swarm with \(N-1\) BitTorrent (BT) peers and one peer using the Birds protocol.
- **Expected Games Won**: For the BT clients, the expected number of games won against higher and lower classes remains unchanged. For the Birds client, the formula for the expected number of games won against lower classes changes to \(B[B \rightarrow c]' = \frac{NB}{Nr}\), which is the same as for BT clients.
- **Class C Analysis**: For the class C where the Birds client is located, the expected values of the number of games won due to reciprocation from other peers in this class will be \(E_r B[C \rightarrow c]' = U_r - K\) for Birds and \(E_r [C \rightarrow c]' = \frac{N_{C'} - U_r}{U_r - K - E[A \rightarrow c]} \times \frac{U_r - E[A \rightarrow c] - K'}{N_{C'}} + \frac{U_r}{N_{C'}}\), where \(N_{C'} = N_C - 1\) and \(K' = 1 - (1 - E[A \rightarrow c])(1 - \frac{1}{U_r})^{U_r-1}\).
- **Free Game Wins**: The formulas change to \(\frac{N_C - E_r [C \rightarrow c]'}{Nr}\) and \(E_B [C \rightarrow c]' = E[C \rightarrow c]' + \frac{B[C \rightarrow c]'}{N_C N_r}\), leading to the conclusion that \(E_B [C \rightarrow c]' > E[C \rightarrow c]'\).

Thus, the peer using the Birds protocol, on average, wins more games than any of the BT clients, proving that BT is not a NE.

- **Birds as a NE**: We show that it is a NE when all peers in the swarm follow the Birds protocol. Assuming \(N-1\) peers follow the Birds protocol and one peer uses the BT protocol, we provide a formal proof for the case when this new peer uses BT. The other cases (regarding class-based reciprocation) can be similarly proved.

**Reciprocation Games**:
- Neither the Birds peers nor the BT peer get anything from the higher and lower classes.
- For the specific class C, where the BT peer is located, we have \(E_r B[C \rightarrow c]'' = \frac{N_{C'} - U_r}{N_{C'}} = U_r - \frac{U_r}{N_{C'}} \times \frac{U_r - E[A \rightarrow c]}{U_r} + \frac{U_r}{N_{C'}} E[A \rightarrow c]\), where \(N_{C'} = N_C - 1\).
- Moreover, \(E_r [C \rightarrow c]'' = U_r - E[A \rightarrow c]\); from here, it is clear that \(E_r B[C \rightarrow c]'' > E_r [C \rightarrow c]''\).

**Free Game Wins**:
- The expressions for the same class become \(E[C \rightarrow c]'' = \frac{N_{C'}}{N_C} \times \frac{N_{C'} - E_r B[C \rightarrow c]}{N - U_r - 1}\) and \(E_B [C \rightarrow c]'' = E[C \rightarrow c]'' + \frac{N_{C'} - E_r [C \rightarrow c]}{N_{C'} (N - U_r - 1)}\).
- Thus, we conclude that \(E_B [C \rightarrow c]'' > E[C \rightarrow c]''\), completing the proof that Birds is a NE.