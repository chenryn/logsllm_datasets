title:On the vulnerability of FPGA bitstream encryption against power
analysis attacks: extracting keys from xilinx Virtex-II FPGAs
author:Amir Moradi and
Alessandro Barenghi and
Timo Kasper and
Christof Paar
On the Vulnerability of FPGA Bitstream Encryption against
Power Analysis Attacks
Extracting Keys from Xilinx Virtex-II FPGAs
Amir Moradi
Horst Görtz Institute
for IT-Security
Ruhr University Bochum
Germany
Alessandro Barenghi
Dipartimento di
Elettronica e Informazione
Politecnico di Milano
Italy
Timo Kasper
Horst Görtz Institute
for IT-Security
Ruhr University Bochum
Germany
PI:EMAIL
PI:EMAIL
PI:EMAIL
Christof Paar
Horst Görtz Institute
for IT-Security
Ruhr University Bochum
Germany
PI:EMAIL
ABSTRACT
Over the last two decades FPGAs have become central com-
ponents for many advanced digital systems, e.g., video signal
processing, network routers, data acquisition and military
systems. In order to protect the intellectual property and
to prevent fraud, e.g., by cloning a design embedded into an
FPGA or manipulating its content, many current FPGAs
employ a bitstream encryption feature. We develop a suc-
cessful attack on the bitstream encryption engine integrated
in the widespread Virtex-II Pro FPGAs from Xilinx, using
side-channel analysis. After measuring the power consump-
tion of a single power-up of the device and a modest amount
of oﬀ-line computation, we are able to recover all three diﬀer-
ent keys used by its triple DES module. Our method allows
extracting secret keys from any real-world device where the
bitstream encryption feature of Virtex-II Pro is enabled. As
a consequence, the target product can be cloned and ma-
nipulated at the will of the attacker since no side-channel
protection was included into the design of the decryption
module. Also, more advanced attacks such as reverse engi-
neering or the introduction of hardware Trojans become po-
tential threats. While performing the side-channel attack,
we were able to deduce a hypothetical architecture of the
hardware encryption engine. To our knowledge, this is the
ﬁrst attack against the bitstream encryption of a commercial
FPGA reported in the open literature.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’11, October 17–21, 2011, Chicago, Illinois, USA.
Copyright 2011 ACM 978-1-4503-0948-6/11/10 ...$10.00.
Categories and Subject Descriptors
K.6.5 [Security and Protection]: [Unauthorized access];
D.4.6 [Security and Protection]:
[Cryptographic con-
trols]
General Terms
Security, Experimentation
Keywords
Side-channel attacks, FPGA, bitstream encryption, triple
DES
1.
INTRODUCTION
Electronic devices have become essential parts of our pri-
vate life (e.g., cell phones, e-readers or set-top boxes), at
work (e.g., laptops or routers) and in industrial environ-
ments (e.g., control systems or sensors). Virtually all of to-
day’s IT, communication and consumer electronic systems
employ digital technology. As a ﬂip side of this well-known
development, reverse-engineering and product piracy have
become important issues for a wide variety of electronic
products since the creation of exact copies of digital infor-
mation is often straightforward. Examples include consumer
products, network routers and set-top boxes, or military
systems. The threat is not limited to merely counterfeit-
ing products; once a product has been reverse-engineered it
becomes vulnerable to various other attacks. For instance,
ill-intended malfunctioning of the device or circumvention
of business models based on the electronic content, as it is
regularly happening in the pay-TV sector, become possible.
Not only consumer products, but also industrial and mili-
tary applications can be aﬀected. For instance, the recent
discovery of details of the STUXNET virus shows the po-
tential implications that embedded malware can have [12].
Another ﬂavor of malicious manipulation of digital systems
was described in a 2005 report by the US Defense Science
111Board, where the clandestine introduction of hardware Tro-
jans was underlined as a serious threat [1]. In summary, pro-
tection of digital secrets and intellectual property is a key
factor for developing and successfully marketing electronic
products nowadays.
1.1 FPGA Basics
When developing embedded systems, the main target plat-
form choices are software, i.e. running the application on
a microprocessor, or hardware, i.e realize an application-
speciﬁc integrated circuits (ASIC). A third form of device,
Field Programmable Gate Arrays (FPGAs), combines some
advantages of software (fast development, low non-recurring
engineering costs) with those of hardware (performance, power
eﬃciency). These advantages have made FPGAs an im-
portant ﬁxture in embedded system design, especially for
applications that require heavy processing, e.g., for rout-
ing, signal processing or encryption. Modern high-end FP-
GAs have the functional equivalent of several tens of mil-
lions of Boolean gates, making them formidable devices for
a large spectrum of applications. Most of today’s FPGAs
are (re)conﬁgured via a blob of binary data, called bitstream,
which completely determines the functionality of the device.
As described in Sect. 2.1, programming them is quite simi-
lar to developing software for a microprocessor, allowing for
fast development and a quick time-to-market.
Nowadays FPGAs have applications in banking, defence,
aerospace, and many sophisticated commercial technical ap-
plications such as video signal processing, e.g., for HDTV,
or network routing. Even hitherto totally mechanical de-
vices such as guns nowadays incorporate FPGAs, e.g., the
XM25 Individual Airburst Weapon System [8]. Notewor-
thy for this contribution, satellite communication and other
mission-critical systems as well as high-security applications
also employ FPGAs [20]. As a key advantage, a product
relying on FPGAs can be regularly improved during its life-
cycle by simply changing the bitstream, e.g., if a design bug
is found or to provide new functionality. To name two ex-
amples, today’s network routers are easily upgraded in the
ﬁeld via the Internet and set-top boxes obtain an updated
ﬁrmware via cable or a satellite link. One of the disadvan-
tages of FPGAs, especially with respect to custom hardware
such as ASICs, is that an attacker who has access to the
bitstream can clone the system and extract the intellectual
property of the design. Note that the bitstream is in the
vast majority of systems stored externally to the FPGA in
a dedicated conﬁguration memory and is from there loaded
into the FPGA on every power-up or reset — an adver-
sary wire-tapping the relevant data signals can hence easily
monitor the bitstream. The main answer of the industry for
protecting the design is a security feature called bitstream
encryption.
1.2 Bitstream Encryption Basics
The idea of bitstream encryption is to establish end-to-
end conﬁdentiality by means of symmetric cryptography. It
protects the entire path of an FPGA bitstream: the develop-
ment environment of the manufacturer, the insecure channel
into the product, the storage inside the product, and ﬁnally
the loading of the design into the FPGA.
Figure 1 illustrates an example for a secure ﬁrmware up-
grade of an FPGA-based network router. As a prerequi-
site, the manufacturer and the FPGA in the network router
Figure 1: Bitstream encryption enables to securely
transfer the content of an FPGA, e.g., a ﬁrmware
update for a network router via the Internet.
possess the same secret key, that should be created individ-
ually for every device and securely stored both inside the
FPGA (kF P GA) and at the manufacturer site (kdesign). Af-
ter generating the bitstream, the designer encrypts it with
a secure symmetric cipher such as triple DES or AES using
a secret key kdesign. This encrypted bitstream can now be
safely sent, e.g., via the Internet, to the conﬁguration mem-
ory of the target network router, from where it is loaded
into the FPGA. The latter possesses an internal decryption
engine and uses its secret key kF P GA to decrypt each bit-
stream. Finally, the FPGA conﬁgures its internal circuitry
according to the decrypted bitstream. The conﬁguration
is successful if and only if the secret keys used for the en-
cryption and decryption of the bitstream are identical, i.e.,
kdesign = kF P GA.
A third party who gets hold of the encrypted bitstream —
e.g., from the Internet or by wire-tapping the internal data
bus that is used for the conﬁguration inside the product —
will not be able to extract any useful information. Without
knowing the secret key for the decryption, she will not be
able to deduce the design or conﬁgure another FPGA cor-
rectly. As a major consequence, counterfeiting or attacking
the product becomes unfeasible, and no conﬁdential or pro-
prietary information contained in the bitstream can fall into
the hands of the attacker.
1.3 Side-Channel Attacks
Side-channel attacks exploit physical information leakage
of a cryptographic implementation in order to extract secret
information, in particular the cryptographic key used. In the
case of power analysis, the consumption of electric current or
the electromagnetic emanations of the cryptographic device
are used as a side channel for key extraction. Since both
power consumption and EM emissions of a digital device
depend on the values being computed, side channel attacks
employ a divide-and-conquer approach, to model a part of
the circuit employing guesses on small parts of the key, (e.g.,
6 bits). The consumption (or EM emission) models are sub-
sequently correlated with real world measurements: only the
model dependent on the correct key guess will predict the
behaviour of the actual device. Contrary to mathematical or
brute-force attacks, where typically pairs of plaintexts and
ciphertexts are required for a key-recovery, side-channel at-
tacks require only one of them, i.e., either the plaintext or
the ciphertext [15, 18]. While the open literature reports a
number of successful attacks against cryptographic architec-
tures implemented on the FPGA fabric [25, 27], no publicly
known attack on the bitstream encryption has been reported
FPGA0100111001001110Internet,satellite,...encryptedbitstreamencryptedbitstreamConfigurationMemoryDesigner(networkrouter,set-topbox,etc.)112in the open literature. We also refer to a number of surveys
dealing with FPGA security which have not addressed bit-
stream reverse engineering as a real-world threat [14, 30].
1.4 Content of this Paper
In this paper we investigate the level of security provided
by the bitstream encryption used in the widespread Virtex-II
family of FPGAs produced by Xilinx. A detailed descrip-
tion of these FPGAs and their bitstream encryption fea-
ture, as well as an introduction to power analysis, are given
in Sect. 2. The manufacturer claims that the bitstream en-
cryption as implemented in Xilinx Virtex-II Pro FPGAs can
thwart even most Class III attacks [28], i.e., attacks by well-
funded intelligence agencies [5]. However, our research does
not support this claim as shown in Sect. 3: starting with-
out any previous knowledge about the implementation, i.e.,
a typical black box scenario, we demonstrate step-by-step
how to conclude from the power consumption and timing
behaviour of the FPGA to the detailed internal structure
of the decryption hardware that we found not side-channel
protected. Finally, we develop a side-channel attack that
exploits the power consumption of the FPGA during the
decryption of one bitstream to recover the secret keys used
for the bitstream encryption. Some of the dramatic impli-
cations of our attack are illustrated in Sect. 4.
2. PRELIMINARIES
This section introduces Field Programmable Gate Arrays
(FPGA) in general, and in particular the Virtex-II Pro de-
vice and its security features. We further describe the side-
channel analysis and digital signal processing techniques used
for our attack.
2.1 Flexible Hardware: FPGA Details
An FPGA is a reconﬁgurable integrated circuit that can
host highly complex digital circuitry, e.g., a complete mi-
crocontroller, digital signal processing algorithms, or almost
any other design that can be put in silicon.
Analyzing the worldwide FPGA market, Xilinx (51.2 %)
and Altera (35.5 %) together account for more than 85 %
market share, followed by Actel and Lattice with about 6 %
market share each (Gartner Inc., 2008) [13]. Both market
leaders oﬀer security solutions for commercial and military
environments that aim at protecting the bitstream by means
of symmetric encryption. Altera programs the respective
secret keys in non-volatile e-fuses on the silicon die of the
FPGA that are covered by layers of metal to hinder extrac-
tion of the key by invasive physical attacks [7]. Xilinx on
the other hand states that programmable fuses are easy to
reverse-engineer [20] and instead promotes a battery-backed
solution to store the keys in volatile memory, ensuring that
the key is instantly zeroed if the FPGA is removed from the
product, e.g., to conduct physical attacks. In this paper we
focus on the advertised to be more secure solution of the —
in terms of FPGAs sold — leading manufacturer Xilinx.
The essential building blocks of an FPGA are conﬁg-
urable logical blocks (CLB) which consist of slices. Each
slice in turn contains small look-up tables (LUTs) that real-
ize arbitrary combinational functions, i.e., small Boolean cir-
cuits, and usually also simple memory elements, e.g., latches
storing one bit. Programmable switches allow altering of the
signal path inside the slices, as well as routing the data to
other CLBs on the FPGA. Depending on the particular type
of FPGA various other auxiliary resources are available, for
instance, multiply-and-add units, BlockRAMs that can be
accessed by several CLBs, and even entire CPUs. By appro-
priately conﬁguring the slices and combining the inputs and
outputs of tens of thousands CLBs, an FPGA can realize
the most elaborate tasks in parallel and hence achieves very