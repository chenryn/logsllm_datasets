继初次选择xhcms审计审计之后，对代码审计来了兴趣，一处处分析，经历失败，重来，最后找到漏洞点的过程确实很不错。因此，在喜欢xhcms审计结束后就马不停蹄找了个小众一点的cms再开启一次审计，熟悉熟悉，之后计划开始浮现tp,yii之类框架内容，且行且记吧。
[toc]
## 审计过程
### 一、环境安装
直接去github搜一搜kkcms源码，我这里选择了较老的版本:
**kkcms-v1.32**
github源码地址：
安装环境：
使用phpstudy
5.6.27+mysql5.5.53进行搭建（这个cms版本比较老，用php高版本会出问题）。下载后，源码解压到phpstudy根目录，启动phpstudy，访问并安装即可。
**ps:（安装时记得提前在phpstudy中mysql管理创建一个数据库（我这里创建一个kkcms数据库使用））**
出现这样的界面就安装完成了：
### 二、先看看目录结构，了解下整体情况
都是些常见目录结构，这里就不一一介绍了。先直接丢进seay审计工具中看一下：
还不少，224个可疑点，那就以这个为线索，慢慢来看：
### 三、漏洞
#### SQL注入
##### ucenter/reg.php
seay报警此文件存在sql注入漏洞，打开看一下代码：
一个个查看，最后在 **../system/library.php** 文件中看到：
    $u_end){
        $_data['u_flag'] =="0";
        $_data['u_start'] =="";
        $_data['u_end'] =="";
        $_data['u_group'] =1;
        }else{
        $_data['u_flag'] ==$row["u_flag"];
        $_data['u_start'] ==$row["u_start"];
        $_data['u_end'] ==$row["u_end"];
        $_data['u_group'] =$row["u_group"];
        }
        mysql_query('update xtcms_user set '.arrtoupdate($_data).' where u_id ="'.$row['u_id'].'"');
        $_SESSION['user_name']=$row['u_name'];
        $_SESSION['user_group']=$row['u_group'];
        if($_POST['brand1']){ 
    setcookie('user_name',$row['u_name'],time()+3600 * 24 * 365); 
    setcookie('user_password',$row['u_password'],time()+3600 * 24 * 365); 
    } 
            header('location:user.php');
        }else{
            alert_href('用户名或密码错误或者尚未激活','login.php?op=login');
        }
    }
    if(isset($_POST['reg'])){
    $username = stripslashes(trim($_POST['name']));
    // 检测用户名是否存在
    $query = mysql_query("select u_id from xtcms_user where u_name='$username'");
这三个文件中都引用了同一个 **../system/inc.php**
文件，即用addslashes_deep()方法进行变量转义处理防注入，且可控变量都同样经过stripslashes()逆转义处理，也就是同样的“
**负负得正** ”，因此，这三个文件中都一定存在如上的sql注入漏洞。这里就不进行重复造轮子去复现了。
##### template/wapian/vlist.php
seay报sql注入，打开代码瞧瞧，关键处：
    '.$row['c_name'].'';
            }
    ?>
这里对 **$_GET['cid']** 变量进行一个判断，不为零就直接单引号包裹带入查询中，这简直就是没有任何防护，那么，根据前面的经验，只要没有引用
**../system/inc.php** 文件，即用addslashes_deep()方法进行变量转义处理防注入，那么不久可以直接开始注入了？看看去：
    视频列表-
    ">
    ">
向上查找，到文件头，果然没有发现任何引用 **../system/inc.php** 文件的迹象，hahaha,注入到手咯，实现一下：
直接访问文件路径，截取GET变量cid,sqlmap梭一把，
    python2 sqlmap.py -u "http://127.0.0.1/template/wapian/vlist.php?cid=1" --dbs --batch
直接出结果，下一个
##### admin/cms_backup.php
seay报注入漏洞，我们先看看关键代码：
    $q1=mysql_query("show tables");
    while($t=mysql_fetch_array($q1)){
      $table=$t[0];
      $q2=mysql_query("show create table `$table`");
      $sql=mysql_fetch_array($q2);
      $mysql.=$sql['Create Table'].";\r\n";