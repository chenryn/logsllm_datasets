title:Who's in Control of Your Control System? Device Fingerprinting for
Cyber-Physical Systems
author:David Formby and
Preethi Srinivasan and
Andrew M. Leonard and
Jonathan D. Rogers and
Raheem A. Beyah
Who’s in Control of Your Control System?
Device Fingerprinting for Cyber-Physical Systems
David Formby∗, Preethi Srinivasan∗, Andrew Leonard†, Jonathan Rogers†, Raheem Beyah∗
∗School of Electrical and Computer Engineering
PI:EMAIL, PI:EMAIL, PI:EMAIL
Georgia Institute of Technology
†School of Mechanical Engineering
Georgia Institute of Technology
PI:EMAIL, PI:EMAIL
Abstract—Industrial control system (ICS) networks used in
critical infrastructures such as the power grid present a unique
set of security challenges. The distributed networks are difﬁcult
to physically secure, legacy equipment can make cryptography
and regular patches virtually impossible, and compromises can
result in catastrophic physical damage. To address these concerns,
this research proposes two device type ﬁngerprinting methods
designed to augment existing intrusion detection methods in
the ICS environment. The ﬁrst method measures data response
processing times and takes advantage of the static and low-
latency nature of dedicated ICS networks to develop accurate
ﬁngerprints, while the second method uses the physical operation
times to develop a unique signature for each device type.
Additionally, the physical ﬁngerprinting method is extended to
develop a completely new class of ﬁngerprint generation that
requires neither prior access to the network nor an example target
device. Fingerprint classiﬁcation accuracy is evaluated using a
combination of a real world ﬁve month dataset from a live power
substation and controlled lab experiments. Finally, simple forgery
attempts are launched against the methods to investigate their
strength under attack.
I.
INTRODUCTION
Fingerprinting devices on a target network, whether it is
based on their software or hardware, can provide network
administrators with mechanisms for intrusion detection or
enable adversaries to conduct surveillance in preparation for a
more sophisticated attack. In the context of industrial control
systems (ICS), where a cyber-based compromise can lead to
physical harm to both man and machine, these mechanisms
become even more important. An attacker intruding on an ICS
network can theoretically inject false data or commands and
drive the system into an unsafe state. Example consequences
of such an intrusion can range from widespread blackouts
in the power grid [24] to environmental disasters caused by
tampering with systems carrying water, sewage [3], oil, or
natural gas. These false data and command injections could
Permission to freely reproduce all or part of this paper for noncommercial
purposes is granted provided that copies bear this notice and the full citation
on the ﬁrst page. Reproduction for commercial purposes is strictly prohibited
without the prior written consent of the Internet Society, the ﬁrst-named author
(for reproduction of an entire paper only), and the author’s employer if the
paper was prepared within the scope of employment.
NDSS ’16, 21-24 February 2016, San Diego, CA, USA
Copyright 2016 Internet Society, ISBN 1-891562-41-X
http://dx.doi.org/10.14722/ndss.2016.23142
be thwarted using strong cryptographic protocols that provide
integrity and authentication guarantees, but in ICS networks
it is often infeasible to upgrade legacy equipment to provide
them due to lack of processing power, devices being in remote
locations, and the critical nature of the systems that must be
online at all times. In fact, some vendors do not even support
the functionality of upgrading devices to install critical patches.
When our previous research found vulnerabilities in several
power system devices and they were reported to ICS-CERT,
the resulting ofﬁcial advisory for one of the products stated that
“There is no method to update [Product A] devices released
prior to October 2014 [1].” Since adding cryptography to
resource limited devices and keeping them patched is infeasible
and sometimes just impossible, alternative methods such as
ﬁngerprinting must be used to provide security and intrusion
detection.
While device ﬁngerprinting is a well-studied topic with
several solutions already proposed, none of them are prop-
erly suited for the ICS environment. Active ﬁngerprinting
techniques can achieve high accuracy detection of operating
systems and server versions, but require probing the network
with specially crafted packets. This solution is undesirable
in an ICS environment where devices are performing time-
critical functions and administrators would rather not risk even
the small chance of a port scan crashing the legacy devices
and resulting in critical system downtime that includes loss of
revenue and potentially life-threatening situations for affected
customers such as hospitals. Therefore passive techniques are
more suited, but they usually provide limited useful informa-
tion or require special equipment or TCP options enabled.
This paper presents some of the deﬁning characteristics
of ICS networks and discusses how to use them to develop
two new ﬁngerprinting approaches that perform uniquely well
in the ICS environment, where the two primary functions are
data acquisition and control and are carried out over supervi-
sory control and data acquisition (SCADA) protocols such as
DNP3, Modbus, and IEC 61850 GOOSE. Our ﬁrst approach
takes advantage of the data acquisition functions by using
the interaction between the application layer responses and
transport layer acknowledgments to obtain measures estimating
the speed and workload of a particular intelligent electronic
device (IED). Due to the unique properties of ICS networks,
the distributions of these measurements are constant within
device types and software conﬁgurations allowing network
Fig. 1. The two novel ﬁngerprinting methods can work together to augment
traditional intrusion detection
administrators to passively detect changes in the conﬁguration
or spoofed communication. Throughout this work we refer
to this technique as cross-layer ﬁngerprinting. Our second
ﬁngerprinting approach uses the control aspects of ICS envi-
ronments to generate signatures from the physical operations
being taken by the physical devices on the network. Even
though two relays or valves from different vendors may have
similar ratings, there will always be physical variations in
their construction resulting in fundamental differences in their
operation times. These differences are then used to identify
device types or spoofed command responses, which we call
physical ﬁngerprinting. When used together as illustrated in
Figure 1, these two methods can achieve device ﬁngerprinting
from software, hardware, and physics based perspectives and
provide a strong supplement
intrusion
detection systems (IDS) in the ICS environment.
to more traditional
The ﬁngerprint (or signature) of a device can be repre-
sented as a probability density function (PDF) of the response
times described above. To generate these PDFs, one of three
approaches can be used: white box, black box, and gray box
modeling. In a white box approach, a dynamic model of the
device is constructed from ﬁrst principles and model parame-
ters identiﬁed from CAD drawings, source code, physical mea-
surements, etc. without ever seeing any true samples from the
system. The simulated behavior is then used to create a PDF
by varying model parameters using an uncertainty distribution.
In a black box approach, the PDF is constructed strictly from
experimental data without any dynamic modeling, requiring
a signiﬁcant amount of experimental measurements but little
knowledge of the underlying system. Until now, this approach
has been the only method used by all previous ﬁngerprinting
work. Finally, in a gray box approach, a dynamic model is
ﬁrst constructed and the resulting PDF is then reﬁned based
on experimental measurements. White box modeling is best
suited for when a system’s internal details are accessible but
access to experimental measurements is restricted. Black box
modeling performs best when experimental measurements are
easily available and especially when the system is proprietary
or too complex to model. Finally, gray box approaches are
most advantageous when the basic characteristics of a software
or hardware design are known, but there is some uncertainty
in model structure or parameters that can only be dealt with
through experimental observations [17].
Due to the abundance of measurements in the available
dataset and lack of proprietary source code, the data acquisition
ﬁngerprinting method proposed here, called cross-layer ﬁnger-
printing, focuses on a black box modeling approach. In the case
of the physical ﬁngerprinting technique, there are some devices
where the operations occur so rarely that collecting enough real
samples to generate an accurate ﬁngerprint through black box
modeling is completely infeasible. Additionally, there is such
a wide variety of physical devices available and their costs
are so prohibitive that creating a black box signature database
ofﬂine is also infeasible. Therefore an alternative approach
for signature generation must be used. This paper proposes a
new class of ﬁngerprint generation for physical ﬁngerprinting
based on white box modeling to allow an administrator to
generate a usable device ﬁngerprint without ever having access
to the target device type or network. The white box generated
physical ﬁngerprint is then validated against the black box
approach using an example control device.
The major contributions of this research include:
•
Two novel ﬁngerprinting approaches that take advan-
tage of the unique characteristics of ICS devices
A new class of ﬁngerprint generation speciﬁc to ICS
networks using “white box” modeling
Performance analysis using both real world data from
a power substation and controlled lab tests
Evaluation of the methods under simple forgery at-
tacks for different classes of adversary
•
•
•
The remainder of this paper is organized as follows.
Related work in the area of device ﬁngerprinting and intrusion
detection in ICS is presented in Section II. The assumptions
and threat model addressed by this work are presented in
Section III and the details of the cross-layer and physical
ﬁngerprinting methods using black box modeling are discussed
in Section IV. Section V provides an explanation of the
extension of the physical ﬁngerprinting technique via the use
of synthetic signatures generated from white box modeling.
Finally, the performance and limitations of the techniques are
discussed in Section VI, and the results and future work are
summarized in Section VII.
II. RELATED WORK
Device ﬁngerprinting methods are usually classiﬁed into
active or passive techniques depending on whether they ac-
tively probe a device with specially crafted packets or passively
monitor network trafﬁc to develop the ﬁngerprint.
One of the oldest and most well known ﬁngerprinting
tools, Nmap, uses active ﬁngerprinting techniques to gather
information about devices on a network [2]. By sending a
series of speciﬁc requests, Nmap determines the OS and server
versions running on a machine based on how the device
responds. While this tool is invaluable for both pen-testers and
attackers on a “normal” network, it has limited use in an ICS
network where active methods are not as desirable.
For passive ﬁngerprinting, a variety of techniques exist
that provide both device type ﬁngerprinting and individual
device ﬁngerprinting. One example is the open source p0f
tool, which passively examines TCP and HTTP header ﬁelds to
determine information about a client, such as OS and browser
version [26]. The ﬁrst attempt at formalizing methods for
active and passive ﬁngerprinting of network protocols was
published in 2006, when authors used parametrized extended
ﬁnite state machine (PEFSMs) to model
the behavior of
different protocol implementations [19]. Determining software
versions is of some use, but identifying individual devices
2
on a network based on their hardware is even more useful,
which for example could be used for tracking a device across
the Internet or intrusion detection. Using both passive and
active techniques, Kohno et al. produced the ﬁrst such work
on individual device ﬁngerprinting in 2005 by examining TCP
timestamps to detect individual device clock skew [13].
Other passive ﬁngerprinting research has focused on var-
ious timing aspects of network trafﬁc to ﬁngerprint devices
and device types. In 2010 researchers were able to use wavelet
analysis on passively observed trafﬁc ﬂowing through access
points to accurately identify each access point [12]. The next
year, another paper was published that described a method
for device ﬁngerprinting based on models of the timing of a
device’s implementation of application layer protocols using
Temporal Random Parametrized Tree Extended Finite State
Machines (TR-FSMs) [11]. A third paper that used passive
observations of network trafﬁc timing to achieve device ﬁn-
gerprinting was published in 2014, and used distributions of
packet inter-arrival times (IAT) to identify devices and device
types [18].
Although these three papers all took different approaches
to using passively observed network trafﬁc timing to perform
ﬁngerprinting, they are all infeasible for implementation in an
ICS network. The wavelet analysis approach was designed and
tested only on wireless access points under heavy loads, a sce-
nario that does not occur in ICS where wired communication
is preferred for its reliability and data rates are relatively low.
The method using TR-FSMs only looks at application layer
behaviors and requires a large database of all possible sessions.
Finally, the method using distributions of IATs requires a large
number (at least 2500) of training samples to achieve accurate
results, but with some devices on ICS networks being polled
at an interval as large as a few seconds, this would result
in unacceptably slow operation. Another technique was de-
veloped that used timing measurements of USB enumerations
to ﬁngerprint host devices [4], but this is also impractical in
the ICS environment where most devices do not have USB
interfaces and where it is desirable to passively ﬁngerprint
all devices on the network at once rather than driving out to
remote locations to ﬁngerprint each individual device.
Another unique approach to passive device ﬁngerprinting
relevant to this paper focused on the physical layer of device
communication, rather than the higher layers. Speciﬁcally, re-
searchers were able to use amplitude and phase measurements
of the signals generated by Wi-Fi radios to identify individual
devices [21]. This may have been the ﬁrst work to use physical
measurements to ﬁngerprint devices, but it still is not feasible
in ICS networks where Wi-Fi devices are rarely used.
The two methods presented in this paper overcome the
limitations of the previous work on device ﬁngerprinting by
providing higher accuracy results using techniques specially
suited for ICS networks. The ﬁrst method improves on the
more traditional timing based approaches by using network
trafﬁc measurements that are unique to ICS devices, and the
second proposed method extends the idea of physical layer
ﬁngerprinting to identifying ICS control devices based on the
reported timings of their physical operations. Additionally,
all previous ﬁngerprinting work used black box methods that
require access to an example target device. This research also
overcomes this limitation by proposing a white box ﬁngerprint
generation approach that requires no previous access to exam-
ple devices.
One of the primary uses of the two proposed ﬁngerprinting
techniques would be to augment existing IDS solutions, of
which there is already a signiﬁcant amount of previous work.
The ﬁrst attempt at tailoring IDS methods for ICS and SCADA
systems was proposed by Idaho National Laboratories in 2008,
and focused on monitoring trafﬁc ﬂows for regular patterns
and understanding packets at the application layer to look
for intrusions [23]. Some researchers have also approached
the problem by modifying the popular Bro IDS software to
perform speciﬁcation based intrusion detection for common
ICS protocols [16]. Others have attempted to model the states
a process control system can enter and detect when a command
might cause it to enter a critical state [10] [5]. These solutions
are able to detect some types of attacks, but are unable to
detect a class of stealthier ones called false data injection
attacks. To address this, some methods have been proposed
for power system state estimation [14] and for process control
systems [6]. However, they are only useful in the context of
power state estimation or where the process behind the control
system can be accurately modeled. The ﬁngerprinting methods