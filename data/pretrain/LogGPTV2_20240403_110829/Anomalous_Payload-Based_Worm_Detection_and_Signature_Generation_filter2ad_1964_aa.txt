# Anomalous Payload-Based Worm Detection and Signature Generation

**Authors:** Ke Wang, Gabriela F. Cretu, and Salvatore J. Stolfo  
**Affiliation:** Computer Science Department, Columbia University, 500 West 120th Street, New York, NY 10027  
**Emails:** kewang@cs.columbia.edu, gcretu@cs.columbia.edu, sal@cs.columbia.edu

## Abstract
This paper introduces new features of the PAYL anomalous payload detection sensor, which accurately detects and generates signatures for zero-day worms. Experimental evidence demonstrates that site-specific packet content models can detect new worms with high accuracy in a collaborative security system. We propose a method that correlates ingress/egress payload alerts to identify the initial propagation of a worm, enabling automatic signature generation for immediate deployment to network firewalls and content filters. Additionally, we present a collaborative, privacy-preserving security strategy where different hosts can exchange PAYL signatures to enhance accuracy and reduce false positives. The key principle is that correlating multiple alerts identifies true positives from the set of anomaly alerts, thereby reducing incorrect decisions and improving mitigation.

## 1. Introduction
Zero-day worms pose a significant wide-scale threat due to the monoculture problem. Large numbers of replicated vulnerable systems facilitate widespread infection. If a standard signature-based detector is blind to a zero-day attack, all installations of that detector are also blind to the same attack. The time from worm launch to widespread infestation is now very short, far shorter than the time required to generate filtering signatures or patch vulnerable systems. This paper addresses the challenge of accurately detecting these "zero-day" attacks upon their first appearance or shortly thereafter.

Some attacks exploit protocol vulnerabilities, while others survey a site through scanning and probing. These can often be detected by analyzing network packet headers or monitoring connection attempts and traffic volume. However, some attacks display normal protocol behavior but carry malicious content in otherwise normal connections. For example, slow-propagating worms targeting specific sites may not exhibit unusual volumes of connection attempts, making them undetectable by sensors based on scan or probe behavior.

We argue that analyzing the packet payload provides a reliable way to detect such attacks. State-of-the-art content-based detectors rely on signatures or "thumbprints" developed from known attacks or possibly error-prone specifications of expected content, limiting their ability to detect new, unknown attacks. Our research focuses on payload-based anomaly detection, aiming to develop lightweight, real-time algorithms and systems for network intrusion detection.

The PAYL anomaly detection sensor, previously reported in [20], accurately models normal payload using unsupervised machine learning techniques. The first principle behind PAYL is that a new zero-day attack will contain content data never seen before by the victim host, appearing different from normal data and deemed anomalous. PAYL's innovation lies in its efficient means of modeling "normal data." Thus, PAYL is designed to detect the first occurrences of an attack with anomalous content, stopping the propagation to other potential victims.

Key features of worms include their self-propagation strategy and the methods they use to find new victims. Many prior approaches rely on detecting worm-like scan/probe behavior. We propose a new approach based on ingress/egress anomalous payload correlation, without using scan or probe information. The idea is that a newly infected host will begin sending outbound traffic similar to the original attack content. Correlating ingress/eggress anomalous payload alerts can detect worm propagation and stop it from the moment it first attempts to spread, rather than waiting for a high volume of outgoing scans. The important principle is that correlating multiple alerts identifies true positives and reduces incorrect decisions, leading to accurate mitigation.

We do not propose storing and correlating all incoming packet content with outbound packets, as this would be prohibitively expensive in space and time and could lead to many false alarms. Instead, we automatically identify a set of "suspect inbound packets" containing anomalous content and inspect them for anomalous outbound content directed to the same ports. The number of suspect packets is a function of the anomaly detector in PAYL, the traffic characteristics, and the amount of training to compute stable models. In many environments, the number of anomalies is a small percentage of the network traffic.

Another important aspect of this strategy is that the correlated ingress/egress content anomalies are used to automatically generate content-filtering signatures. The overlapping content of similar outgoing and incoming anomalous payloads forms a natural set of candidate worm signatures. PAYL generates these signatures, which can be distributed over the network to other collaborating hosts to prevent further worm infections.

In this paper, we demonstrate that PAYL can successfully detect inbound worm packets with high accuracy and a low false positive rate. We also show that if a worm has already infected a machine and starts to infect others, PAYL can quickly detect the propagation and generate an accurate signature that can be distributed to other machines in the local LAN or across domains, without blocking normal traffic.

New and successful wide-scale infections occur on the internet with relative frequency. The monoculture problem applies not only to a high density of common vulnerable services and applications but also to deployed security systems. If one commonly used open-source or commercial off-the-shelf (COTS) security system is blind to a new zero-day attack, all such systems are likely blind to the same attack.

Some researchers have studied solutions to the monoculture problem by diversifying common application software, making each distinct site invulnerable to the same exact attack. We conjecture that systems running the same services and software already exhibit diversity through their content flows, providing a means to create "site-specific" anomaly detectors capable of detecting new exploits, especially if many sites collaborate and exchange alert information about suspicious packet content.

Most security architectures view each site or domain as an enclave, with external sites regarded as the enemy. Worm writers and attackers, however, collaborate and share information about vulnerabilities and tools to rapidly create and launch new attacks. Defenders still depend on centralized management to update detection signatures and deploy patches, which is no longer tenable. We posit that a collaborative security system, which automatically shares information in real-time about anomalous behavior among collaborating sites, will substantially improve protection against wide-scale infections. By integrating the PAYL anomalous payload sensor into a collaborative security system and exchanging information about suspect packet content, the resulting system can detect new zero-day exploits and automatically generate new attack signatures on-site for content filtering. This strategy is demonstrated to accurately detect emerging worm outbreaks and reduce false positives to nearly zero.

PAYL has been under development for over a year and was first reported at the RAID 2004 conference [20], where many details about the underlying algorithms were described. The rest of the paper is organized as follows: Section 2 discusses related work in worm detection and automatic signature generation. Section 3 provides an overview of the PAYL detection sensor and demonstrates its effectiveness in detecting real-world worms. Section 4 evaluates the ingress/egress traffic correlation techniques and automatic worm signature generation. Section 5 introduces the concept of collaborative security among sites and demonstrates its effectiveness using anomalous payload collaboration. Section 6 concludes the paper.

## 2. Related Work
Rule-based network intrusion detection systems like Snort and Bro are limited in stopping zero-day worms because they rely on signatures known only after the worm has been launched, essentially disclosing new content and infection methods for later deployment. Shield [19] provides vulnerability signatures instead of string-oriented content signatures, blocking attacks that exploit a specific vulnerability. A shield is manually specified for a known vulnerability and distributed to all desktops to provide protection. However, the time lag to specify, test, and deploy shields favors the worm writer, not the defenders.

Several researchers have explored the use of packet flows and, in some cases, content analysis. Honeycomb [7] is a host-based intrusion detection system that automatically creates signatures. It uses a honeypot to capture malicious traffic targeting dark space and applies the longest common substring (LCS) algorithm on the packet content of connections to the same services. The computed substring is used as a candidate worm signature. PAYL optionally uses either LCS or the longest common subsequence (LCSeq) on anomalous packets, not necessarily targeting a honeypot, but any victim in the protected LAN.

Another system, Autograph [5], uses heuristics to classify traffic into two categories: a flow pool with suspicious scanning activity and a non-suspicious flow pool. TCP flow reassembly is applied to the suspicious flow pool, and Rabin fingerprints are used to partition the payload into small blocks. These blocks are counted to determine their prevalence, and the most frequent substrings form a worm signature. The signature generator uses blacklisting to decrease false positives. They also describe collaboration between multiple sensors, but the sensors exchange only suspicious IPs and destination ports. This approach to sharing scan alerts is similar to other projects, including the Worminator project [10] at Columbia University, in which PAYL is a component.

Earlybird [15] is another system that can automatically detect new worms in a...