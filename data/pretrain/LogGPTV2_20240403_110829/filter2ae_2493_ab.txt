    //undo samaccountname change
    SetMachineAccountAttribute(argContainer, argDistinguishedName, argDomain, argDomainController, "samaccountname", argMachineAccount, argMachineAccount, false, false, argVerbose, credential);
### 申请ST
Client向域控申请`WINSRVSERVER`的服务票据，域控在`HandleTGSRequest`函数中处理`TGS_REQ`请求。
首先通过`KerbFindPreAuthDataEntry`获取`TGS_REQ`中包含的`ApRequest`
    ApRequest = KerbFindPreAuthDataEntry(
                    KRB5_PADATA_TGS_REQ,
                    RequestMessage->KERB_KDC_REQUEST_preauth_data
                    );
之后便是解析获得的`APRequest`获得解密后的`TGT`
    //验证请求。这包括对AP请求进行解码，找到合适的密钥来解密票据，并检查票据。
    KerbErr = KdcVerifyKdcRequest(
                ApRequest->preauth_data.value,
                ApRequest->preauth_data.length,
                ClientAddress,
                TRUE,                           // this is a kdc request
                &UnmarshalledApRequest,
                &UnmarshalledAuthenticator,
                &SourceEncryptPart,
                &ReplyKey,
                &SourceTicketKey,
                &ServerTicketInfo,
                &UseSubKey,
                pExtendedError
                );
KdcVerifyKdcRequest做了以下几件事情
  * KdcVerifyKdcRequest
  * 解包ApRequest ---- KerbUnpackApRequest
  * 根据其中的服务名（kbrtgt）获取服务的相关信息 ---- KdcNormalize
  * 通过相关信息找到服务的Hash ---- KerbGetKeyFromList
  * 解密TGT --- KerbCheckTicket
    * 获得解密后的TGT --- KerbVerifyTicket
    * 用TGT中的Key（key为Client与KDC通信所需要的LogonSessionKey）解密获得Authenticator --- KerbUnpackAuthenticator
  * ……（校验检查之类的）
查看这个函数的结果，获得了传过来的明文`TGT`和`krbtgt`的相关服务信息
    kd> dt ServerTicketInfo
    Local var @ 0x327fc48 Type _KDC_TICKET_INFO
       +0x000 AccountName      : _UNICODE_STRING "krbtgt"
       +0x008 TrustedForest    : _UNICODE_STRING ""
       +0x010 PasswordExpires  : _LARGE_INTEGER 0x7fffffff`ffffffff
       +0x018 fTicketOpts      : 0x7b
       +0x01c UserAccountControl : 0x11
       +0x020 UserId           : 0x1f6
       +0x024 TrustType        : 0
       +0x028 TrustAttributes  : 0
       +0x02c Passwords        : 0x00084bf0 _KERB_STORED_CREDENTIAL
       +0x030 OldPasswords     : 0x000c4010 _KERB_STORED_CREDENTIAL
       +0x034 TrustSid         : (null) 
       +0x038 PasswordVersion  : 2
       +0x03c LockoutThreshold : 0
    kd> dt SourceEncryptPart
    Local var @ 0x327fdd0 Type KERB_ENCRYPTED_TICKET*
    0x000fcf90 
       +0x000 bit_mask         : 0xd0
       +0x000 o                : [1]  "???"
       +0x004 flags            : tagASN1bitstring_t
       +0x00c key              : KERB_ENCRYPTION_KEY
       +0x018 client_realm     : 0x00106a18  "WINTESTYU03.COM"
       +0x01c client_name      : KERB_PRINCIPAL_NAME
       +0x024 transited        : KERB_TRANSITED_ENCODING
       +0x030 authtime         : tagASN1generalizedtime_t
       +0x03e starttime        : tagASN1generalizedtime_t
       +0x04c endtime          : tagASN1generalizedtime_t
       +0x05a renew_until      : tagASN1generalizedtime_t
       +0x068 client_addresses : (null) 
       +0x06c authorization_data : 0x000c3370 PKERB_AUTHORIZATION_DATA_s
    kd> db authorization_data l 276
    0017f168  30 82 02 72 30 82 02 6e-a0 04 02 02 00 80 a1 82  0..r0..n........
    0017f178  02 64 04 82 02 60 04 00-00 00 00 00 00 00 01 00  .d...`..........
    0017f188  00 00 c0 01 00 00 48 00-00 00 00 00 00 00 0a 00  ......H.........
    0017f198  00 00 22 00 00 00 08 02-00 00 00 00 00 00 06 00  ..".............
    0017f1a8  00 00 14 00 00 00 30 02-00 00 00 00 00 00 07 00  ......0.........
    0017f1b8  00 00 14 00 00 00 48 02-00 00 00 00 00 00 01 10  ......H.........
    0017f1c8  08 00 cc cc cc cc b0 01-00 00 00 00 00 00 00 00  ................
    0017f1d8  02 00 02 4e 81 c8 1c f7-d7 01 ff ff ff ff ff ff  ...N............
    0017f1e8  ff 7f ff ff ff ff ff ff-ff 7f 56 b9 d8 d7 0f f7  ..........V.....
    0017f1f8  d7 01 56 79 42 02 d9 f7-d7 01 ff ff ff ff ff ff  ..VyB...........
    0017f208  ff 7f 18 00 18 00 04 00-02 00 00 00 00 00 08 00  ................
    0017f218  02 00 00 00 00 00 0c 00-02 00 00 00 00 00 10 00  ................
    0017f228  02 00 00 00 00 00 14 00-02 00 00 00 00 00 18 00  ................
    0017f238  02 00 08 00 00 00 72 04-00 00 03 02 00 00 01 00  ......r.........
    0017f248  00 00 1c 00 02 00 20 00-00 00 00 00 00 00 00 00  ...... .........
    0017f258  00 00 00 00 00 00 00 00-00 00 18 00 1a 00 20 00  .............. .
    0017f268  02 00 16 00 18 00 24 00-02 00 28 00 02 00 00 00  ......$...(.....
    0017f278  00 00 00 00 00 00 80 00-00 00 00 00 00 00 00 00  ................
    0017f288  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    0017f298  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    0017f2a8  00 00 00 00 00 00 00 00-00 00 0c 00 00 00 00 00  ................
    0017f2b8  00 00 0c 00 00 00 57 00-49 00 4e 00 53 00 52 00  ......W.I.N.S.R.
    0017f2c8  56 00 53 00 45 00 52 00-56 00 45 00 52 00 00 00  V.S.E.R.V.E.R...
    0017f2d8  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    0017f2e8  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    0017f2f8  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    0017f308  00 00 00 00 00 00 00 00-00 00 01 00 00 00 03 02  ................
    0017f318  00 00 07 00 00 00 0d 00-00 00 00 00 00 00 0c 00  ................
    0017f328  00 00 57 00 49 00 4e 00-53 00 52 00 56 00 53 00  ..W.I.N.S.R.V.S.
    0017f338  45 00 52 00 56 00 45 00-52 00 0c 00 00 00 00 00  E.R.V.E.R.......
    0017f348  00 00 0b 00 00 00 52 00-45 00 4e 00 50 00 45 00  ......W.I.N.T.E.
    0017f358  4e 00 47 00 59 00 55 00-30 00 33 00 00 00 04 00  S.T.Y.U.0.3.....
    0017f368  00 00 01 04 00 00 00 00-00 05 15 00 00 00 db ac  ................
    0017f378  e2 f8 a5 b2 f3 d1 a1 c4-3e 10 00 00 00 00 00 06  ........>.......
    0017f388  7d ec a5 f7 d7 01 18 00-57 00 49 00 4e 00 53 00  }.......W.I.N.S.
    0017f398  52 00 56 00 53 00 45 00-52 00 56 00 45 00 52 00  R.V.S.E.R.V.E.R.
    0017f3a8  00 00 00 00 00 00 76 ff-ff ff 51 30 b4 c6 f1 8c  ......v...Q0....
    0017f3b8  bf 3d 01 2f 7c 3d 75 9b-9d 8d 00 00 00 00 76 ff  .=./|=u.......v.
    0017f3c8  ff ff 5a 8c df 90 88 38-ec 5d 6c 61 b8 46 bd bf  ..Z....8.]la.F..
    0017f3d8  99 5c 00 00 00 00                                .\....
之后会获取请求的相关信息
  * 在REQUEST_BODY中获得ServerName
  * 在TGT中获得cname和crealm
    KerbErr = KerbConvertPrincipalNameToKdcName(
                &ServerName,
                &RequestBody->KERB_KDC_REQUEST_BODY_server_name
                );
    KerbErr = KerbConvertPrincipalNameToKdcName(
                   &SourceClientName,
                   &SourceEncryptPart->client_name
                   );
    KerbErr = KerbConvertRealmToUnicodeString(
                   &SourceClientRealm,
                   &SourceEncryptPart->client_realm
                   );           
内容分别如下
    kd> dt ServerName
    Local var @ 0x327fdd8 Type _KERB_INTERNAL_NAME*
    0x00117610 
       +0x000 NameType         : 0n1
       +0x002 NameCount        : 1
       +0x004 Names            : [1] _UNICODE_STRING "WINSRVSERVER"
    kd> dt SourceClientName
    Local var @ 0x327fdd4 Type _KERB_INTERNAL_NAME*
    0x0017f3e8 
       +0x000 NameType         : 0n1
       +0x002 NameCount        : 1
       +0x004 Names            : [1] _UNICODE_STRING "WINSRVSERVER"
    kd> dt SourceClientRealm
    Local var @ 0x327fdc4 Type _UNICODE_STRING
     "WINTESTYU03.COM"
       +0x000 Length           : 0x1e
       +0x002 MaximumLength    : 0x20
       +0x004 Buffer           : 0x00153578  "WINTESTYU03.COM"
之后会调用`KdcFindS4UClientAndRealm`来获取`PA_DATA_FOR_USER`这个结构中的内容  
`KdcFindS4UClientAndRealm`函数会解析`PaList`并将其转换成`KERB_PA_FOR_USER`结构，目前需要注意的便是其中的`userName`是我们要请求的高权限用户的用户名`Administrator`
    kd> dt S4URequest
    Local var @ 0x327f9b0 Type KERB_PA_FOR_USER*
    0x0012aaa8 
       +0x000 bit_mask         : 0
       +0x000 o                : [1]  ""
       +0x004 userName         : KERB_PRINCIPAL_NAME
       +0x00c userRealm        : 0x0012abf0  "WINTESTYU03.COM"
       +0x010 cksum            : KERB_CHECKSUM
       +0x01c authentication_package : 0x000fca30  "Kerberos"
       +0x020 authorization_data : tagASN1octetstring_t
    kd> dx -id 0,0,89de1678 -r1 (*((KDCSVC!KERB_PRINCIPAL_NAME *)0x12aaac))
    (*((KDCSVC!KERB_PRINCIPAL_NAME *)0x12aaac))                 [Type: KERB_PRINCIPAL_NAME]
        [+0x000] name_type        : 10 [Type: long]
        [+0x004] name_string      : 0x82c98 [Type: KERB_PRINCIPAL_NAME_name_string_s *]
    kd> dx -id 0,0,89de1678 -r1 ((KDCSVC!KERB_PRINCIPAL_NAME_name_string_s *)0x82c98)
    ((KDCSVC!KERB_PRINCIPAL_NAME_name_string_s *)0x82c98)                 : 0x82c98 [Type: KERB_PRINCIPAL_NAME_name_string_s *]
        [+0x000] next             : 0x0 [Type: KERB_PRINCIPAL_NAME_name_string_s *]
        [+0x004] value            : 0x159c88 : "wintestServer" [Type: char *]
之后会通过`KdcNormalize`获取我们自身`WINSRVSERVER`的相关信息
其中的关键调用如下：
  * KdcNormalize
  * KdcGetTicketInfo
    * SamIGetUserLogonInformation2 (WINSRVSERVER)
    * SamIGetUserLogonInformation2 (WINSRVSERVER$)
对于漏洞的利用便发生在这个函数中，并且利用了两次。
第一次实现了将申请的用户转换为域控上的`Administrator`
第二次实现了将申请的服务转换成`WINSRVSERVER$`
下面将详细分析漏洞点。
    KERBERR
    KdcNormalize(
        IN PKERB_INTERNAL_NAME PrincipalName,
        IN OPTIONAL PUNICODE_STRING PrincipalRealm,
        IN OPTIONAL PUNICODE_STRING RequestRealm,
        IN OPTIONAL PUNICODE_STRING  TgtClientRealm,
        IN ULONG NameFlags,
        IN BOOLEAN bRestrictUserAccounts,
        OUT PBOOLEAN Referral,
        OUT PUNICODE_STRING RealmName,
        OUT PKDC_TICKET_INFO TicketInfo,
        OUT PKERB_EXT_ERROR  pExtendedError,
        OUT OPTIONAL SAMPR_HANDLE * UserHandle,
        IN OPTIONAL ULONG WhichFields,
        IN OPTIONAL ULONG ExtendedFields,
        OUT OPTIONAL PUSER_INTERNAL6_INFORMATION * UserInfo,
        OUT OPTIONAL PSID_AND_ATTRIBUTES_LIST GroupMembership
        )
调用`KdcNormalize`时的相关参数中最重要的就是`SourceCName`