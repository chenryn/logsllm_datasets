title:Exploiting Opportunistic Scheduling in Cellular Data Networks
author:Radmilo Racic and
Denys Ma and
Hao Chen and
Xin Liu
Exploiting Opportunistic Scheduling in Cellular Data Networks
Radmilo Racic, Denys Ma, Hao Chen, Xin Liu
University of California, Davis
{racic,madl,hchen,liu}@cs.ucdavis.edu
Abstract
Third Generation (3G) cellular networks utilize time-
varying and location-dependent channel conditions to
provide broadband services. They employ opportunis-
tic scheduling to efﬁciently utilize spectrum under fair-
ness or QoS constraints. Opportunistic scheduling al-
gorithms rely on collaboration among all mobile users
to achieve their design objectives. However, we demon-
strate that rogue cellular devices can exploit vulnera-
bilities in opportunistic scheduling algorithms, such as
Proprotional Fair (PF), to usurp the majority of time
slots in 3G networks. Our simulations show that only
ﬁve rogue device per 50-user cell can use up to 90%
of the time slots, and can cause 2 seconds of end-to-end
inter-packet transmission delay on VoIP applications for
every user in the same cell, rendering VoIP applications
useless. To defend against these attacks, we explore sev-
eral detection and prevention schemes, including modi-
ﬁcations to the PF scheduler and a secure handoff pro-
cedure.
1
Introduction
The speciﬁcation for 3G cellular data services recom-
mends implementing an opportunistic scheduler. Both
HSDPA [18] and EV-DO [44] use an opportunistic
scheduler in the downlink to proﬁt from multi-user di-
versity. Multi-user diversity utilizes fading and shad-
owing of cellular users within a single cell to optimize
bandwidth efﬁciency [17]. To achieve this goal, many
networks require mobile devices to participate in man-
aging network services. However, since mobile devices
are outside the control of the network administrators,
networks should not trust mobile devices to manage net-
work operations [1]. Unfortunately, this principle is of-
ten violated, as in the case of opportunistic schedul-
ing in 3G networks. A popular scheduling algorithm
is Proportional Fair (PF) [4, 6, 14, 18, 31, 44], which
maximizes the product of the throughput delivered to all
users [11, 14, 21, 24, 34].
We discovered two vulnerabilities in the PF sched-
uler:
1. The scheduler trusts channel condition reports from
mobile devices without veriﬁcation.
2. The scheduler fails to track a mobile device’s aver-
age channel condition during handoff.
A malicious mobile device can exploit these vulnerabil-
ities by misrepresenting its channel conditions and ini-
tiating unnecessary handoffs (to obtain a fresh average
channel condition) to usurp a large number of time slots
at the expense of other users. Our simulations show that
only one attacker per 50-user cell can occupy between
74% to 90% of all the time slots persistently. To put it
in another perspective, when users are running VoIP ap-
plications, one attacker per cell can perpetuate a 1 sec-
ond end-to-end inter-packet transmission delay for every
other user, while ﬁve attackers per cell can perpetuate a
2 second delay. Since any delay longer than 0.4-second
would disrupt VoIP [20], this attack would render VoIP
useless.
We discuss a variety of modiﬁcations to the PF sched-
uler and their resilience to the attack. However, as the PF
scheduler operates within a single cell, it cannot guaran-
tee its goal of long term fairness to mobile devices that
can hand off freely across cells. Therefore, we propose
a robust handoff procedure to ensure graceful handoff
for honest users but at the same time to prevent attackers
from usurping bandwidth.
We make the following contributions:
• We identify vulnerabilities in the Proportional Fair
scheduler, and analyze a series of attacks mathe-
matically. Our simulations demonstrate that these
attacks would devastate victim mobile users by
causing persistent delays and lowering throughput.
• We study a variety of modiﬁcations to the PF
schedulers to scrutinize their resilience to the
above-mentioned attacks.
• We propose fortifying the PF scheduler with a ro-
bust handoff algorithm to mitigate these attacks.
2 Attack overview
3G cellular networks grant unwarranted trust to mo-
bile devices, allowing them to report channel conditions
and to initiate handoffs at their discretion. By exploit-
ing these vulnerabilities, malicious mobile devices can
usurp a majority of downlink1 scheduling slots, caus-
ing intolerable delays to the victim users and rendering
many network services virtually useless. In this section,
we will provide an overview of the 3G data network
technologies for understanding these vulnerabilities.
2.1 3G data networks
With the goal of avoiding major network restructur-
ing, cellular providers have developed two new data
services, EV-DO and HSDPA, to provide broadband-
like downlink speed for emerging applications, such
as Voice-over-IP (VoIP) and streaming video. In both
services,
the downlink utilizes time division multi-
plexing (TDM) by dividing the channel in time slots,
or Transmission Time Intervals (TTIs).
(Note that
T T IEV −DO = 1.67ms and T T IHSDP A = 2ms.) The
scheduler at each base station selects a single user2 to
transmit at each TTI. Both services rely on two main
techniques to increase efﬁciency in the downlink direc-
tion: link adaptation and fast retransmissions. In link
adaptation, mobile devices report quasi instantaneous
downlink channel quality information, channel quality
indicator (CQI), to base stations. The base station can
then adapt data rate contingent on channel conditions:
the better the channel condition, the higher the data
rate [38]. Fast retransmission (part of the Hybrid Au-
tomatic Repeat Request (HARQ) manager) is HSDPA’s
retransmission mechanism that allows a mobile device
to NACK each erroneous downlink packet to request a
retransmission from its base station instead of the send-
ing server.
2.1.1 Opportunistic scheduling
Channel conditions of cellular mobile devices are
time-varying and location-dependent due to fading and
shadowing. This causes the multi-user diversity effect:
since many users fade independently, at any given time
some subset of users will likely have strong channel
conditions. Since instantaneous channel conditions de-
rive the instantaneous data rates of mobile devices [29],
mobile devices periodically measure and report their
CQIs to their base stations. An opportunistic sched-
uler at a base station selects a user (or a subset of
1From the network to the mobile users.
2The scheduler may also select a scheduling candidate set of users
to be transmitted at each TTI.
users) with a relatively good channel condition to trans-
mit while maintaining predeﬁned QoS or fairness con-
straints. Thus, opportunistic schedulers often achieve
higher network performance than schedulers that do not
take into account channel conditions, such as round
robin. A very popular opportunistic scheduler is Pro-
portional Fair (PF) [4,6], whose goal is to maximize the
product of the throughput delivered to all users [11, 21].
In PF, each mobile device measures its instantaneous
channel conditions through pilot signals3, estimates the
achievable data rate under its channel condition (denoted
as CQIi(t) for user i at time t), and sends the infor-
mation back to the base station. To achieve the goal of
maximizing the product of the throughput delivered to
all users [22], the PF scheduler chooses the user with
the highest ratio of CQIi(t)/Ri(t) where Ri(t) Is the
average throughput of user i at time t. 4 The base sta-
tion estimates Ri(t) as follows:
(cid:26) αCQIi(t) + (1 − α)Ri(t − 1)
Ri(t) =
(1 − α)Ri(t − 1)
i scheduled
otherwise
(1)
where α is a network provider’s parameter describing
the weight of the current time slot toward the average. A
typical α is 0.001.
While current 3G standards do not select a particu-
lar opportunistic schedule, PF is the most popular both
in the research community [3,5,10,12,25,42,46] and in
industry [4,6,7,14,18,31,44]. Networks may implement
modiﬁed versions of PF schedulers. For instance, a PF
scheduler may apply code multiplexing by scheduling
multiple users within the same Transmission Time Inter-
val (TTI). In this case, one TTI may be divided into 15
channels using different channelisation codes [31, 38].
The maximum number of codes that a user could ob-
tain is determined by the mobile device’s capability. In
each TTI, the PF scheduler selects a single mobile de-
vice if the device can receive all the codes; otherwise,
the PF scheduler selects multiple devices to share the
codes. Researchers have also proposed variations of the
PF scheduler, such as combining the PF scheduler with
a priority queue or the round robin scheduler. For the
rest of the paper, we will refer to the original PF dis-
cussed in detail above as the PF scheduler, and will refer
to modiﬁed PFs as the hybrid PF schedulers.
3A continuous stream of signal sent by the base station to help
scheduling
4PF makes
devices sychronize and measure their signal strength.
ratio
DRCi(t)/Ri(t) where DRCi(t) = min{CQIk[n], Bk[n]
}
and Bk[n] is the buffer size.
In this analysis, we opt to eliminate
buffer dependence for simplicity.
decisions
tT T I
based
on
the
2.1.2 Handoff
Cellular networks implement handoffs to transfer a
connection from one base station to another. A mo-
bile device continuously monitors candidate base sta-
tions with stronger signal strength using pilot signals.
The base station controller, upon receiving pilot mea-
surement reports, determines if the mobile device will
beneﬁt from a handoff. If so, the base station controller
initiates a handoff procedure by instructing the mobile
device to handoff to another base station [31].5 There
are two types of handoffs: soft and hard handoffs. In
a hard handoff, the network drops the connection to the
current base station before initiating a new one. In a soft
handoff, a mobile device can have connections from sev-
eral base stations simultaneously. Our attacks apply to
soft as well as hard handoffs.
2.2 Overview of attacks
Opportunistic schedulers for 3G networks require
mobile device to participate in network management
functions. However, attackers can modify mobile de-
vices to perform seemingly innocuous actions differ-
ent from what is intended by the providers, even when
providers attempt tamper-proof techniques [6,19,32,39].
For instance, attackers can modify their laptops’ 3G PC
cards, either through the accompanying SDKs [30] or
the device ﬁrmware [43], to gain access to the network.
By trusting all mobile devices, a system that implements
the PF scheduler suffers from at least two vulnerabilities,
discussed in the following subsections.
2.2.1 Fabricated CQIs
Since opportunistic schedulers base their scheduling
decisions on CQIs reported by mobile devices with-
out veriﬁcation, by reporting fabricated CQIs, malicious
mobile devices can manipulate the scheduler to usurp
the network bandwidth and disrupt other mobile devices.
To illustrate this idea, let’s consider a na¨ıve attack with
one attacker operating in one cell. A malicious mo-
bile device reports an inﬂated CQI such that its ratio of
CQI to average data rate is the highest among all the de-
vices in its cell, therefore ensuring that it will be sched-
uled in the next time slot. To obtain consecutive time
slots, the attacker must report monotonically increas-
ing CQIs (because its average throughput is increasing
while other users’ throughput is decreasing, according
to Equation 1) until its reported CQI exceeds the range
of CQI values.
It is difﬁcult to calculate the precise number of con-
secutive time slots that the attacker can get, because the
5Note that EV-DO implements mobile device initiated hand-offs
instead.
number depends on the channel conditions of all the
users in the cell. However, we can estimate an upper
bound of this number by considering a simpliﬁed sit-
uation where each user has the same CQI. We assume
that each user always has outstanding data at the base
station. First, we calculate the average throughput of a
user. Let Ri(t) be the average throughput of user i at
time slot t. Recall from Section 2.1.1, Ri(t) is deter-
mined by whether the user is scheduled or not as de-
picted in equation (1). Since we assume that each user
has the same CQI, the PF scheduler becomes a round
robin scheduler, where each user is scheduled once ev-
ery N slots (N is the number of users in the cell). For
example, if user i is scheduled at time slot s, he will not
be scheduled until time slot s + N. Therefore, user i’s
average rate Ri(t) maximizes at time slot s, and mini-
mizes at the time slot s + N − 1. According to Equa-
tion 1, Ri(s) = (1 − α)N Ri(s − N) + αCQI. Let us
consider a steady state, where Ri(t) = Ri(t + kN) for
all integer k. In this case, Ri(s) = Ri(s − N). Using
this equality in Equation 2.2.1, we have
Ri(s) =
αCQI
1 − (1 − α)N ≈ CQI
N
(2)
where Ri(s) is user i’s maximum throughput. His min-
imum throughput is
Ri(s − 1) = Ri(s + N − 1) = (1 − α)N−1Ri(s)
≈ (1 − α)N−1 CQI
N
(3)
Let C(t) = maxi{CQI/Ri(t)} be the maximum of
CQI-to-throughput ratio at time t among all the users.
In the steady state, C(t) becomes a constant C, which
is:
C = CQI
Ri(s − 1)
≈
N
(1 − α)N−1
(4)
Next, we describe a strategy for the attacker to obtain
consecutive time slots. To obtain time slot 1, the attacker
i must report a CQIi(1) such that CQIi(1)/Ri(0) ≥
C(0). After time slot 1, C(1) = C(0)/(1 − α), be-
cause for each victim user j,
its CQI remains con-
stant, but its average throughput Rj has been scaled
down by a factor of (1 − α). Therefore, to obtain
time slot 2, the attacker i must report CQIi(2) such
that CQIi(2)/Ri(1) ≥ C(1) = C(0)/(1 − α). Sub-
sequently, at time t, the attacker must claim CQIi(t)
such that CQIi(t)/Ri(t − 1) ≥ C(0)/(1 − α)t−1. The
attacker can obtain consecutive time slots until the re-
quired CQIi(t) exceeds CQImax, the maximum value
of CQI. Therefore, the maximum number of consecu-