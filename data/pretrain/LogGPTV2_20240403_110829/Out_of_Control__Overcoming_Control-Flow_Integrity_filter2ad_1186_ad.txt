### Gadget Analysis and Limitations

We limit the maximum number of instructions we follow after an entry point to 30 for three primary reasons. First, the longest gadget used in our proof-of-concept (PoC) exploit is a CS-F-R gadget with 26 instructions. Second, traditional Return-Oriented Programming (ROP) attacks typically prefer shorter gadgets. Finally, we aim to keep the search space for the analysis manageable.

#### Gadgets Containing Branches

During the analysis, we account for conditional branches within gadgets. For branches, we enumerate distinct paths leading from a gadget entry point (i.e., Call Site or Entry Point) to an exit point (i.e., Return, Indirect Jump, or Indirect Call). Depending on the path taken at runtime, different sets and numbers of instructions may be executed. Therefore, multiple gadgets can originate from a specific entry point. These gadgets are more complex, and we report on them separately from simpler ones that do not include branches.

For simplicity, we exclude gadgets that may be part of a loop. We detect such gadgets by identifying cycles in the static Control Flow Graph (CFG) of functions. Note that loops and gadgets with branches can be very useful for attackers, and we do use a few gadgets with branches in the attack described in Section IV. However, broadly determining their usability requires further research, which is beyond the scope of this paper. Table III lists the different types of gadgets found in Internet Explorer 9, including both those with and without branches. As expected, the number of gadgets with branches is larger than the number of simpler gadgets, making it an interesting area for future investigation.

#### Gadget Distribution

Table IV lists the number and types of simple gadgets (without branches) in various applications. For each application, we first list the total number of gadgets that can be found at runtime, including those in the application binary and all the DLLs loaded by the binary.

#### Calling Sensitive Functions

Certain system functions are restricted by Control-Flow Integrity (CFI) approaches like CCFIR. To call such functions, like the `VirtualProtect` function used in Section IV, we need to use a CS-F-R or EP-F-R gadget. Table V lists the number of such gadgets in the largest application-specific PE files. 

### Tables

**Table IV: Number of Gadgets per Type per Application**

| Application | All PE Files | Largest Specific PE File |
|-------------|--------------|--------------------------|
| **IE9**     |              |                          |
| mshtml.dll  | 7043         | 1748                     |
| ieframe.dll | 654          | 18303                    |
|             | 13106        | 9773                     |
|             | 3281         | 13955                    |
|             | 962          | 15425                    |
|             | 1842         | 14026                    |
|             | 1313         | 4376                     |
|             | 2271         | 671                      |
| **Adobe Reader XI** | 1748 | 652 |
| AcroRd32.dll | 18303 | 1772 |
|             | 13106 | 650 |
|             | 9773 | 2611 |
|             | 3281 | 1349 |
|             | 13955 | 3764 |
|             | 962 | 413 |
|             | 15425 | 3922 |
|             | 1842 | 460 |
| **Firefox 24** | 14026 | 3526 |
| xul.dll | 1313 | 214 |
|             | 4376 | 934 |
|             | 2271 | 731 |
|             | 671 | 303 |
| **Word 2013** | 13955 | 3764 |
| WWLIB.dll | 962 | 413 |
|             | 15425 | 3922 |
|             | 1842 | 460 |
| **PowerPoint 2013** | 14026 | 3526 |
| PPCore.dll | 1313 | 214 |
|             | 4376 | 934 |
|             | 2271 | 731 |
|             | 671 | 303 |
| **Excel 2013** | 13955 | 3764 |
| Excel.exe | 962 | 413 |
|             | 15425 | 3922 |
|             | 1842 | 460 |
| **Microsoft Office 2013** | 14026 | 3526 |
| MSO.dll | 1313 | 214 |
|             | 4376 | 934 |
|             | 2271 | 731 |
|             | 671 | 303 |
| **Shared** | 13955 | 3764 |
| shell32.dll | 962 | 413 |

**Table V: Number of Gadgets Containing Fixed Calls to Sensitive Functions (CS-F-R or EP-F-R)**

| Application | PE File Name | Process (e.g., CreateProcess) | Memory Management (e.g., VirtualAlloc) | Move Memory (e.g., memcpy) | Library Loading (e.g., LoadLibrary) | File Functions (e.g., CreateFile) |
|-------------|--------------|-------------------------------|----------------------------------------|-----------------------------|------------------------------------|----------------------------------|
| **IE9**     | mshtml.dll   | 0                             | 0                                      | 0                           | 1                                  | 0                                |
|             | ieframe.dll  | 0                             | 0                                      | 0                           | 0                                  | 0                                |
| **Adobe Reader XI** | AcroRd32.dll | 0 | 0 | 0 | 1 | 0 |
| **Firefox 24** | xul.dll | 0 | 0 | 0 | 0 | 0 |
| **Word 2013** | WWLIB.dll | 0 | 0 | 0 | 0 | 0 |
| **PowerPoint 2013** | PPCore.dll | 0 | 0 | 0 | 0 | 0 |
| **Excel 2013** | Excel.exe | 0 | 0 | 0 | 0 | 0 |
| **Microsoft Office 2013** | MSO.dll | 0 | 0 | 0 | 0 | 0 |
| **Shared** | shell32.dll | 0 | 0 | 0 | 0 | 0 |

Note: The tables have been simplified for clarity. For detailed numbers, refer to the original data.