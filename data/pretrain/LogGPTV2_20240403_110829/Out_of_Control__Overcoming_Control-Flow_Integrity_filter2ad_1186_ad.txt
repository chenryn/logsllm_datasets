12400
44728
456
59252
295,934
295,934
7043
2353
4498
1183
2838
17,915
17,915
398282
124638
251706
496
297266
1,072,388
390,910
37266
7491
12984
371
4753
62,865
27,778
We limit the maximum number of instructions we follow
after an entry point to 30 for three reasons. First, the longest
gadget our PoC exploit uses is a CS-F-R gadget of 26 instruc-
tions. Second, traditional ROP attacks prefer to use shorter
gadgets. Finally, we desired to keep the search space for the
analysis reasonable.
Gadgets containing branches. During the analysis, we take
into account conditional branches within gadgets. In the case of
branches, we enumerate distinct paths leading from a gadget
entry point (i.e., CS or EP) to an exit point (i.e., R, IJ, or
IC), since based on the path followed at run time, a different
set (and number) of instructions is executed. So there may be
many different gadgets beginning from a speciﬁc entry point.
These gadgets can be more complex, so we choose to report
on them separately from simpler ones that do not include any
branches.
Also, for simplicity we exclude gadgets that may be part
of a loop. We detect such gadgets by identifying cycles in
the static CFG of functions. Note that loops and gadgets with
branches can be very useful for attackers, and we do use a few
gadgets with branches in the attack described in Sec. IV, but
broadly determining their usability requires further research
and is beyond the scope of this paper. Table III lists the
different types of gadgets found in Internet Explorer 9. We
list both gadgets with and without branches. As expected, the
number of gadgets including branches is larger than simpler
gadgets. It would be, therefore, interesting to investigate ways
that these gadgets could be easily used.
Gadget distribution. Table IV lists the number and types of
gadgets in various applications. The table lists only simple
gadgets that do not include branches. For each application, we
ﬁrst list the total number of gadgets that can be found in the
application at run time. This includes the gadgets found in
the application binary, as well as all the DLLs loaded by the
binary at run time.
Calling sensitive functions. Certain system functions are re-
stricted by CFI approaches like CCFIR. To call such functions,
like the VirtualProtect function used in Sec.IV, we need to use
a CS-F-R or EP-F-R gadget. Table V lists the number of such
583
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:49 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IV: Number of gadgets per gadget type per application. For each application we show the numbers in ‘all’ PE ﬁles
and in its largest speciﬁc PE ﬁle. Although ieframe.dll is used also by the Word, Powerpoint, and Excel applications, we added
it under IE9 especially because the ieframe.dll is also used in the PoC exploit. Furthermore MSO.dll is the largest speciﬁc
Microsoft Ofﬁce PE ﬁle and shared by the Word, Powerpoint and Excel applications. The numbers are collected from gadgets
without branches.
App
IE9
Adobe Reader XI
Firefox 24
Word 2013
PowerPoint 2013
Excel 2013
Microsoft Ofﬁce 2013
Shared
PE ﬁle
name
all
mshtml.dll
ieframe.dll
AcroRd32.dll
xul.dll
WWLIB.dll
all
all
all
all
all
all
PPCore.dll
Excel.exe
MSO.dll
shell32.dll
EP-R
7043
1748
654
18303
13106
9773
3281
13955
962
15425
1842
14026
1313
4376
2271
671
Entry Point Gadgets
EP-IC-R
2353
652
201
1772
650
2611
1349
3764
413
3922
460
3526
214
934
731
303
EP-F-R
4498
126
363
8447
3099
6316
1781
9563
690
10214
1144
9249
357
2858
2682
690
EP-IJ
1183
912
6
1082
778
635
172
780
33
893
111
837
102
124
171
7
EP-IC
2838
759
127
2085
372
2785
900
3798
284
3835
236
3638
198
520
1395
370
CS-R
179098
38559
18252
166175
58027
233183
101475
352170
60289
351969
50625
340511
54414
82006
67209
21864
Call Site Gadgets
CS-IC-R
12400
5917
1326
5641
1156
8951
4812
11749
1665
10942
704
11320
1274
2200
2506
1237
CS-F-R
44728
4865
5333
62500
25276
52883
16617
74498
3426
90826
16758
74226
4005
14612
23203
10192
CS-IJ
456
52
31
1480
1213
465
97
839
34
987
161
859
60
169
204
54
CS-IC
59252
8638
5684
40091
12587
45949
23181
129671
31913
114909
12309
119016
21698
24819
15521
9127
TABLE V: Number of gadgets that contain ﬁxed calls to sensitive functions (i.e., CS-F-R or EP-F-R) in the largest application-
speciﬁc PE ﬁles. Like in Table IV, ieframe.dll is added under IE9.
App
IE9
Adobe
Reader XI
Firefox 24
Word 2013
PowerPoint
2013
Excel 2013
Microsoft
Ofﬁce 2013
PE ﬁle
name
mshtml.dll
ieframe.dll
AcroRd32.dll
xul.dll
WWLIB.dll
PPCore.dll
Excel.exe
MSO.dll
Shared
shell32.dll
Gadget
type
EP
CS
EP
CS
EP
CS
EP
CS
EP
CS
EP
CS
EP
CS
EP
CS
EP
CS
Process
(e.g., CreateProcess)
Memory Management Move Memory
(e.g., memcpy)
(e.g., VirtualAlloc)
Library Loading
(e.g., LoadLibrary)
File Functions
(e.g., CreateFile)
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
7
0
10
0
5
0
2
0
0
0
4
0
12
0
12
3
173
4
51
1
144
32
407
12
87
23
40