          name: mysql-pv-claim
          labels:
            app: wordpress
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
        storageClassName: slow 
        ---
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: wordpress-mysql
          labels:
            app: wordpress
        spec:
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                app: wordpress
                tier: mysql
            spec:
              containers:
              - image: mysql:5.6
                name: mysql
                env:
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mysql-pass
                      key: password
                    ports:
                - containerPort: 3306
                  name: mysql
                volumeMounts:
                - name: mysql-persistent-storage
                  mountPath: /var/lib/mysql
              volumes:
              - name: mysql-persistent-storage
                persistentVolumeClaim:
                   claimName: mysql-pv-claim  
```
7.  现在，启动 MySQL pod:
```
        $ kubectl create -f mysql-deployment.yaml 
          service "wordpress-mysql" created
          persistentvolumeclaim "mysql-pv-claim" created
          deployment "wordpress-mysql" created  
```
8.  检查 Pod 的状态:
```
          $ kubectl get pods
          NAME                               READY     STATUS    RESTARTS
          AGE
            wordpress-mysql-2222028001-l8x9x   1/1       Running   0  
          6m      
```
9.  或者，您可以通过运行以下命令来检查 pod 的日志:
```
        $ kubectl logs wordpress-mysql-2222028001-l8x9x
        Initializing database
        2017-08-27 15:30:00 0 [Warning] TIMESTAMP with implicit DEFAULT 
        value is deprecated. Please use --explicit_defaults_for_timestamp 
        server 
        option (see documentation for more details).
        2017-08-27 15:30:00 0 [Note] Ignoring --secure-file-priv value as
        server is running with --bootstrap.
        2017-08-27 15:30:00 0 [Note] /usr/sbin/mysqld (mysqld 5.6.37)
        starting as process 36 ...
        2017-08-27 15:30:03 0 [Warning] TIMESTAMP with implicit DEFAULT
        value is deprecated. Please use --explicit_defaults_for_timestamp 
        server 
        option (see documentation for more details).
        2017-08-27 15:30:03 0 [Note] Ignoring --secure-file-priv value as 
        server is running with --bootstrap.
        2017-08-27 15:30:03 0 [Note] /usr/sbin/mysqld (mysqld 5.6.37)
        starting as process 59 ...
        Please remember to set a password for the MySQL root user!
 To do so, start the server, then issue the following 
 commands:
 /usr/bin/mysqladmin -u root password 'new-password' 
        /usr/bin/mysqladmin -u root -h wordpress-mysql-2917821887-dccql 
        password 'new-password' 
```
或者，您可以运行以下命令:
```
/usr/bin/mysql_secure_installation 
```
这还将为您提供删除默认创建的测试数据库和匿名用户的选项。强烈建议用于生产服务器。
Check the manual for more instructions:
Please report any problems at [http://bugs.mysql.com/](http://bugs.mysql.com/).
The latest information about MySQL is available on the web at [http://www.mysql.com](http://www.mysql.com).
Support MySQL by buying support/licenses at: [http://shop.mysql.com](http://shop.mysql.com).
请注意，没有创建新的默认`config`文件；请确保您的`config`文件是最新的。
The default `config` file, `/etc/mysql/my.cnf`, exists on the system.
默认情况下，该文件将由 MySQL 服务器读取。如果不想使用此功能，请将其删除或使用以下命令:
```
--defaults-file argument to mysqld_safe when starting the server
Database initialized
MySQL init process in progress...
2017-08-27 15:30:05 0 [Warning] TIMESTAMP with implicit DEFAULT 
value is deprecated. Please use --explicit_defaults_for_timestamp 
server option (see documentation for more details).
2017-08-27 15:30:05 0 [Note] mysqld (mysqld 5.6.37) starting as 
process 87 ...
Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time 
zone. Skipping it.
Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as
time zone. Skipping it.
Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time
zone. Skipping it.  
```
MySQL `init`流程现在已经完成。我们已准备好启动:
```
2017-08-27 15:30:11 0 [Warning] TIMESTAMP with implicit DEFAULT 
value is deprecated. Please use --explicit_defaults_for_timestamp
server 
option (see documentation for more details).
2017-08-27 15:30:11 0 [Note] mysqld (mysqld 5.6.37) starting as
process 5 ...  
```
通过运行以下命令检查永久卷声明的状态:
```
$ kubectl get pvc
NAME             STATUS    VOLUME    CAPACITY   ACCESSMODES   
STORAGECLASS   AGE
mysql-pv-claim   Bound     pv-1      5Gi        RWO         
slow           2h
wp-pv-claim      Bound     pv-2      5Gi        RWO         
slow           2h
```
创建 WordPress 部署。我们现在将创建一个服务，公开一个 WordPress 容器，一个 5 GB 的持久卷声明，以及一个使用 WordPress 容器运行 pod 的部署。将以下内容复制到`wordpress-deployment.yaml`文件中:
```
apiVersion: v1 
kind: Service 
metadata: 
  name: wordpress 
  labels: 
    app: wordpress 
spec: 
  ports: 
    - port: 80 
  selector: 
    app: wordpress 
    tier: frontend 
  type: NodePort 
--- 
apiVersion: v1 
kind: PersistentVolumeClaim 
metadata: 
  name: wp-pv-claim 
  labels: 
    app: wordpress 
spec: 
  accessModes: 
    - ReadWriteOnce 
  resources: 
    requests: 
      storage: 5Gi 
  storageClassName: slow  
--- 
apiVersion: extensions/v1beta1 
kind: Deployment 
metadata: 
  name: wordpress 
  labels: 
    app: wordpress 
spec: 
  strategy: 
    type: Recreate 
  template: 
    metadata: 
      labels: 
        app: wordpress 
        tier: frontend 
    spec: 
      containers: 
      - image: wordpress:4.7.3-apache 
        name: wordpress 
        env: 
        - name: WORDPRESS_DB_HOST 
          value: wordpress-mysql 
        - name: WORDPRESS_DB_PASSWORD 
          valueFrom: 
            secretKeyRef: 
              name: mysql-pass 
              key: password 
        ports: 
        - containerPort: 80 
          name: wordpress 
        volumeMounts: 
        - name: wordpress-persistent-storage 
          mountPath: /var/www/html 
      volumes: 
      - name: wordpress-persistent-storage 
        persistentVolumeClaim: 
          claimName: wp-pv-claim 
```
10.  现在，启动 WordPress pod:
```
    $ kubectl create -f wordpress-deployment.yaml 
      service "wordpress" created
      persistentvolumeclaim "wp-pv-claim" created
      deployment "wordpress" created
```
11.  检查服务的状态:
```
        $ kubectl get services wordpress
        NAME        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
        wordpress   10.99.124.161         80:31079/TCP   4m
```
应用现在已启动并运行！
下面列出了删除所有创建的资源所需的命令:
*   要删除您的机密:
```
        $ kubectl delete secret mysql-pass  
```
*   要删除所有部署和服务:
```
        $ kubectl delete deployment -l app=wordpress
        $ kubectl delete service -l app=wordpress
```
*   要删除永久卷声明和永久卷:
```
        $ kubectl delete pvc -l app=wordpress
        $ kubectl delete pv pv-1 pv-2  
```
# 摘要
在本章中，我们学习了容器编排引擎。我们观察了不同的 Coe，如 Docker Swarm 和 Apache Mesos。我们详细讨论了 Kubernetes 及其架构、组件和概念。
我们学习了如何使用`kubeadm`工具安装 Kubernetes 集群。最后，我们做了一个实践练习，在 Kubernetes 集群上运行一个 MySQL WordPress 应用。在下一章中，我们将了解 OpenStack 架构及其核心组件。