(3）连接主服务器，并通过执行 SHOWMASTERSTATUS语句确定其当前的复制坐标：
MASTER_LOG_POS= log_file_pos;
binlog.000093
File
MASTER_LOG_FILE =log_file_name'
MASTER_USER
MASTER_HOST
在
确保自你确定其复制坐标之时起，
在主服务器上都没有发生任何更新。
第14章
系统里，MySQL会使用套接字文件来连接localhost，但是复制操作不支持使用
数据库维护、备份和复制
，配置语句如下所示：
'master_host'
‘log_file_name'和'log_file_pos'是通过 SHOW MASTER STATUS
1707
器
，因为稍后还需要用它们，
，直到其数据快照传输到从服务器之后的这段时间里，
以便能够把从主服务器读取二进
---
## Page 553
会产生不同效果时，使用这种类型的日志记录有利于复制。
据实际需要在基于语句的日志记录或者基于行的日志记录之间来回切换。
独的数据行。这是基于行的日志记录。第三种类型的日志记录是混合格式的，它允许服务器
语句的二进制日志记录(而基于它的复制叫做基于语句的复制)。服务器也可以把更改记录为
14.8.3
务器启动选项--relay-log 和--relay-1log_index来加以改变。更多相关信息请参考12.8.5。
志索引文件的中继日志索引文件。默认的中继日志文件和索引文件都在服务器的数据目录里，分
新，并把它们记录到中继日志。
命令会使从服务器停止执行中继日志里的更新，但从服务器仍可以继续读取来自主服务器的更
IO_THREAD
信，接收来自它的更新，并把接收到的更新写到从服务器的中继日志。SQL线程负责读取中继
务器崩溃后进行数据恢复时是必需的，因此在从服务器上排除数据库的做法更可取。
制。
导致主服务器上的二进制日志文件会将那些被忽略数据库的信息排除在外。而这些信息在主服
巴
从服务
下列内容，可以做到这一点：
包括在内；或者，在传输之前先备份从服务器的mysql数据库，传输完成之后再恢复它。
果要在从服务器维护独立于主服务器的账户，需要做下面两件事情。
私用的复制从服务器，使得即使在主服务器上拥有账户的人也不能随意连接这个从服务器。）如
日志，并执行它所找到的更新。可以通过在STOP SLAVE 或 START SLAVE语句的末尾加上
默认情况下，服务器会以SQL语句的形式把数据修改事件写入二进制日志。这被称为基
中继日志文件与二进制日志文件很相似，都是按数字编号生成的。也有一个类似于二进制日
（2）让从服务器忽略来自主服务器的mysql 数据库的更新。在从服务器的选项文件里加上
（1）当把数据库的初始数据快照从主服务器传输到从服务器时，请不要把mysql数据库
，不过，也有可能你并不想让两个服务器使用相同的账户信息。（例如，你可能会想建立一个
如前所述，从服务器内部使用了两个线程来管理复制活动。I/O线程负责与主服务器进行
口 PURGE BINARY LOGS 语句。它在主服务器上运行，用于清理过期的二进制日志文件。
口 SHOW SLAVE STATUS语句。它运行在从服务器上，用于查看复制工作是否正常，以及当
关于这些语句的详细内容请参考附录E。下面是对它们的简要介绍。
在建立好复制关系，并开始运作之后
口
报务器上）排除数据库。这样做的好处是可以减少主、从服务器之间的传输量，但缺点是生
通过在主服务器的选项文件里使用--binlog-ignore-db 选项，可以在主服务器上（而非
如果想让从服务器忽略多个数据库里的表，可以多次使用此选项，对每个数据库使用一次。
replicate-wild-ignore-table=mysql.
[mysqld]
上面描述的这个流程有一个前提假设，即你想要将主服务器上的所有数据库复制到从服务
STOP SLAVE 和 START SLAVE语句。它们可用于挂起和继续从服务器上与复制有关的活
前的复制坐标。这些复制坐标可以用于确定主服务器已不需要哪些二进制日志文件。
14.8.4节)。
动。例如，当你正在进行备份时，可以用这些语句让从服务器处于静止状态（参考
不再需要。
可以在每个从服务器执行完 SHOW SLAVE STATUS 之后使用它，用于确定哪些日志文化
二进制日志格式
或 SQL_THREAD，分别挂起或者继续每一个线程。例如，STOP SLAVE SQL_THREAD
后，还有几条语句可用于对主、从服务器进行监视或控
14.8设置复制服务器
533
根
会
---
## Page 554
二进制备份不起作用，因为事务型存储引擎仍然可能有刷新的事务。）
你便不用停止主服务器，或者在备份期间不让客户端对其进行访问了。
从服务器，或者继续复制，而从服务器会补上备份期间由主服务器所做的一切更新。这样一来，
务
舍问题。
14.8.4使用复制从服务器来制作备份
这
设置的值有 STATEMENT、MIXED 和 ROW。
534
器转为从服务器。具体操作方法是，先停止从服务器，或者暂停它上面的复制。然后，重启
两者的目标存在冲突。复制从服务器提供了一种摆脱此困境的解决办法，即备份对象从主服
如果你建立了复制从服务器，那么它可以帮助你解决作为MySQL管理员所面临的各种取
mysql> UNLOCK TABLES;
口另一方面，备份也很重要，在进行备份时，最好要防止任何人对数据库进行更改。
口一方面，把服务器的作用发挥到极致很重要，能让用户社区的所有成员都享受到它提
如果要指定日志格式，可以在启动或者运行时设置系统变量binlog_format。其中，允许
mysql> SET GLOBAL read_only= OFF;
(3）再次允许对从服务器进行更新：
(2）执行备份，如使用mysqldump。（这种技术对于采用直接复制文件和目录的方式所做的
（1）让从服务器
下面这个流程展示的是如何实现上面列表里的最后一个策略。
口
口如果要使用一种无需停止从服务器的备份方法，如使用mysqldump，那么可以在备份期间
口如果要对从服务器上的所有数据进行二进制备份，则需要停止从服务器，然后遵循
下面列出了几种可能的对从服务器进行备份的策略。
ySql> SET GLOBAL read_only=ON;
供的便利，其中包括允许他们对数据库进行更新。
在从服务器处于只读状态时进行备份。
的数据库，那么你可能会带上适当的选项使用mysqldump，以便能一次性锁定所有的
有些备份方法甚至不需要你暂停复制操作。例如，你正在备份一个只包含MyISAM 表
采用这种方法的前提是，不会有客户端对从服务器进行更新。如果你打算使用某种直
何更改。IO线程可以继续保持运行，它会把从主服务器接收到的更新事件继续写入中继
SLAVE语句继续复制操作。这样一来，在备份数据库期间，从服务器不会对它们进行任
SQL_THREAD语句暂停从服务器上的复制，并且刷新其日志；然后开始备份，并用START
停止SQL线程，并且在备份完成之后重启该线程。具体操作流程是：先用STOP SLAVE
14.4.3.1节给出的指导，并重启服务器。
份文件和日志文件的检查点是同步的，那么就可以使备份的作用发挥到最大。
接
外，就恢复效果而言，如果在备份过程中停止服务器或者一次性锁定所有表，并保证备
表
第14章数据库维护、备份和复制
。此时，从服务器可以继续运行，但是在备份期间，它不会试图更新任何已锁定的
然SQL线程已停止，但是信息仍然可能缓存在内存里，没有被及时写入磁盘里。
复制数据库文件进行二进制备份的方法，那么千万不要使用这种方法。这是因为，
志。在备份结束之后，重启SQL线程，它会补上备份期间累积起来的所有更新。
备份程序结束并释放这些锁时，
器处于只读状态，防止它被更新：
、从服务器会自动继续那个更新过程。
此
---
## Page 555
目录。
需要使用第二条命令）：
解压tar格式的发行包，可以用下面两条命令中的任何一条（如果你的tar版本不支持z选项，则
了建立和访问样本数据库sampdb所需要的各种文件。该发行包的压缩格式有tar和ZIP两种。
A.1如何获得样本数据库sampdb的发行包
资源。例如，MySQL的手册里就有一章讲的是各个安装步骤。
置Apache，让其可以连同PHP一起使用提供指导。
Apache。本附录还将对MySQL的安装和必需的Perl与PHP软件的安装提供简要说明，并对如何配
录还将介绍如何获得和安装MySQL及其相关的软件，如Perl的DBI模块和CGI.pm模块、PHP以及
本书所需要的各类软件
对于安装的任何软件包，都需要仔细阅读软件包附带的各种指导说明，并在必要时查阅其他的
README.tXt文件。它包含的是发行包的使用说明。这是你应该看的第一个文件。发行包的
在解压sampdb发行包时，会创建一个名为sampdb的目录，其中会包含以下几个文件和子
访问http://www.kitebird.com/mysql-book/可以获得 sampab 发行包。该发行包中包含
口 ss1目录。其中包含的是在MySQL客户端程序和服务器之间建立SSL连接时使用到的证书和
phpapi目录。其中包含的是第9章用到的各个PHP脚本。
perlapi目录。其中包含的是第8章用到的各个PerlDBI脚本。
口capi目录。其中包含的是第7章用到的各个C语言程序。
口在第1章，创建和加载sampdlb数据库时使用到的那些文件。
为解压ZIP格式的发行包，可以使用类似winZip、pkunzip或unzip这样的工具。
tar zxf sampdb.tar.gz
各个子目录可能也会包含带有附加信息的README.txt文件。
附录
A
一它主要用于建立本书的各个示例所使
为
---
## Page 556
软件。
里使用 apt-get。
较常见。此时，你可以使用这种软件包系统来安装所需的所有软件。例如，你可以在FreeBSD 里使
译软件，或者在你的平台里没有可用的二进制发行包，那么你会需要一个C语言编译器（对于
通用的格式提供的，如 Unix里的tar 文件和Windows 里的 Zip文档。如果你想要根据源代码来编
包格式提供的，如Linux里的RPM包，或者MacOSX里的DMG包。也有发行包是采用其他更为
本书推荐使用稳定版本，而不使用开发版本，因此对大部分读者的建议是使用MySQL5.5。如果要
5.5，不过在编写本书时由5.6的早期版本所提供的某些功能也有所涉及。对于用于生产目的的站点，
能更改列表，帮助你决定哪一个发行版本最合适你。
有需要的软件包。此时，你可以直接使用它们。否则，请查看下表，找到每个软件包的主要分发站点。
MySQL，则需要C++编译器）。
体验新功能，可以使用MySQL5.6。
问题。
访问方式的不同，你可能还需要安装其他软件。
A.2
多信息，请查看 README.txt 文件。
536
本附录的剩余部分提供的是一些安装说明，其主要针对的内容是MySQL以及所需的Perl和PHP
有些平台有自己的软件包系统。在 Unix系统里和像Linux这样的类Unix系统里，这种情况比
许多安装包都是以预编译二进制文件形式提供的。二进制发行包通常都是以平台里原生的安装
当前，MySQL的稳定版本是5.5系列，而开发版本是5.6系列。本书使用的MySQL最低版本为
Apache
PHP
Perl模块
MySQL
如果你在某个提供有MySQL服务的因特网服务提供者那里拥有账户，那么它很可能已安装好所
对于那些基于Web 的脚本，本书使用的是Apache服务器，当然，使用其他服务器也没有任何
如果想要利用好本书，你必须安装一套MySQL（如果还没安装的话）。根据计划使用的MySQL
口如果想要编写访问MySQL数据库的Perl脚本，则必须安装DBI和DBD:mysql模块。如果打算
sampdb目录中还包含有其他几个目录，其中包含的是本书其他章节所提到的文件。想要了解更
这些软件包的分发站点会指明哪些是稳定版本、哪些是开发版本。它们还会提供每个版本的功
口如果想要获得最大限度的稳定性，就应该保守一点，使用软件包的最新稳定版本。这样，
具体的软件包安装版本视具体需要而定。
口如果想要编写本书描述的那些PHP脚本，则必须安装PHP及其数据库访问扩展PHP数据对象
口
：如何获得MySQL及相关软件
发版本。
（PDO）和一个Web服务器。
编写基于Web的DBI脚本，就还得安装CGI.pm模块和一个Web服务器。
密钥文件。更多相关信息请参考13.5节。
如果想要追赶前沿，或者想要获得只有最新的开发版才提供的功能，则可以使用最新的开
修复。
你既不会受到开发版本里试验性代码所带来的影响，又能获得最新的功能和最大数量的bug
附录A本书所需要的各类软件
软件包
http://httpd.apache.org/
http://www.php.net/
http://cpan.perl.org/
http://dev.mysql.com/
网站
---
## Page 557
存在有一个名为 mysql 的登录账户)。
里会包括一个mysql账户（这样便能满足 Mac OSX里的那些DMG软件包所做的假设，即假设已
Unix系统都会在其标准账户组里包括一个用户名和用户组名都为 mysql的账户。例如，Mac Os
Linux里的 RPM包，那么在安装服务器包时会自动创建一个名为mysql的用户作为登录账户。）
自己使用，则完全可以用你自己的账户来运行它。这里，你需要把在这本书里看到的所有被用作用
相关的更多讨论请参考12.2.1.1节。
而可以完成维护和故障排查等操作。在MySQL里使用root之外的其他账户能带来很多好处，与之
MySQL的管理和运行。这样，你便可以使用这个账户进行登录，并拥有对数据目录的所有权限，从
理方面的考虑，请不要以root身份来运行服务器。推荐你另外创建一个独立的账户，并把它用于
则可以跳过这一步。
A.3.1为 MySQL 用户创建登录账户
服务器启动和关闭，以及使用非特权用户账户运行服务器相关的章节。
表，因为它们已包含在发行版的预初始化操作里。
括Linux里的 RPM包和 Mac OS X里的 DMG包。在Windows 里，没有必要初始化数据目录或授权
务器，则可以跳过剩下的几个步骤。
MySQL程序的调用变得更加容易，而不需要输入完整的路径名。
个，并根据需要创建该账户。
A.3MySQL安装说明
在创建用于运行MySQL的账户之前，应该先检查你的系统，看看是否已存在这样的账户。许多
创建用户账户的过程因系统而异。想要获得具体细节，请查询你自己的文档。（如果你使用的是
名或用户组名的mysql替换为自己的登录名和用户组名。
本书使用mysql作为MySQL 管理账户的Unix用户名和用户组名。如果安装MySQL 只是为了
在Unix系统里，可以使用你系统中的任何一个账户来运行MySQL服务器。但是出于安全和管
这一步操作只有在想要运行MySQL服务器时才会需要。如果只是想使用MySQL客户端软件，
（5）初始化数据目录和mysql 数据库里的权限表。有些类型的安装包会替你做这一步。其中包
在第12章，可以找到针对这些操作和其他管理过程的指导说明。尤其应该阅读一下与密码分配、
（4）如果你不是要运行服务器，而只打算使用MySQL的客户端程序来访问其他人维护的服
在MySQL安装完成之后，你可能还需要执行一些附加操作。
接下来的几节提供的是对这几个步骤的详细讲解。
（3）设置环境变量PATH，让其包括MySQL 安装目录下的bin目录。这样可以使得对各个
（2）获得想要安装的发行包，并进行解压。如果你使用的是源代码，则需要编译并安装它。
（1）如果想在Unix系统里安装服务器，那么需要先决定好用于运行MySQL的登录账户是哪一
MySQL的安装涉及以下几个步骤。
口进一步配置服务器。例如，可以启用或禁用存储引擎，或者为它们指定调整参数。
口
口让服务器成为普通的系统启动和关闭进程，以便可以跟随系统一起自动启动和停止。将
口
（7）初始化mysql数据库里的其他表。