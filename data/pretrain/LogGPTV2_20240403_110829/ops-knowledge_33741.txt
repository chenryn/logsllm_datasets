User: I have a script in python, which spawns a new process which I want to debug in gdb. Generally I do the usual process to debug this child process. Put sleep in this process until some condition is true and then attach gdb through pid of this process in a different session, put some breakpoints and make that conditions true so that it continues after sleep. 
I want to do this in an automated way, say the python script itself spawns a new gdb process and gives me a gdb prompt ? I know a little about curses so may be I can do something with that. But main problem is how to spawn a interactive process ( gdb here ) in python and how to give gdb prompt to user, I dont have much idea. Any help is appreciated.
Assistant: If you're running the python process interactively from a terminal, just run "gdb" normally (e.g. using os.system()) as a child of the python process.  It will inherit the terminal and take over stdio just as it would if it was run from the shell.  (And if you aren't running it interactively, you'll need to explain what exactly you mean by "give me a a gdb prompt").
Also, if you know you're going to be debugging the process in the future, it's probably best to spawn the process under gdb in the first place than go through the work of getting it to stop at the right spot and attaching it.