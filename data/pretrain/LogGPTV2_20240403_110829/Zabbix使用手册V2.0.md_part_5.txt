#vim /etc/zabbix/zabbix_agentd.conf
UnsafeUserParameters=1
UserParameter=mysql.ping,mysqladmin -uroot -pharry ping|grep alive|wc -l
修改后重启host上的agentd，使配置文件生效。
#service zabbix_agentd restart
2、添加items
web 端编辑mysql 所在的 host，使之link 到template_APP_MySQL 模板，然后在 host
的items里就能看到刚才定义的这些MySQL的监控项了，修改相应的trigger值即可。
这个zabbix自带的mysql监控功能比较弱，只是通过mysqladmin工具去查询mysql的
一些状态而已。
我们可以自己编写或是找一些功能更强的mysql监控脚本，加到zabbix监控里，后面
会讲到如何自己添加监控。
另外更详细的方法可参考 zabbix wiki 上的 mysql 监控方法，这个监控的就非常详
细 :http://www.zabbix.com/wiki/howto/monitor/db/mysql/extensive_mysql_monitoring_including
_replication
5.15 添加 SNMP 监控
Zabbixsnmp的监控要在configration 中hosts中添加相关主机的模板和snmp版本，一般用
snmp监控网络设备就可以了.
5.16 添加自定义监控
对于zabbix功能上无法实现的监控，我们可以通过自己编写程序或脚本来辅助完成，
并将脚本的结果通过agent递交给zabbixserver统一管理，一样可以绘制graph 报表等。
UserParameters的定义方法，请参考：
http://www.zabbix.com/documentation/2.0/manual/config/items/userparameters
如何自定义监控
修改/etc/zabbix/zabbix_agentd.conf
UnsafeUserParameters=1 此处默认是0（不允许自定义脚本）
然后在后面添加UserParameter=key,command
key,command为格式
此处key是在创建item的时候填写的
在修改zabbix_agentd.conf后，重启zabbix_agentd服务
例如ping.ping1
用zabbix_get命令获取得到的值
下面以一个实例来说明此问题
例如要监控mysql
#vim /etc/zabbix/zabbix_agentd.conf
UnsafeUserParameters=1
UserParameter=mysql.ping_test[*],mysqladmin -u$1 -p$2 ping|grep alive|wc -l
#servicezabbix_agentdrestart
用zabbix_get检测设置是否生效
返回值为1，说明添加成功
下面添加到主机。
选择一个host192.168.1.89
点击Items-createItmes
输入key值为mysql.ping_test[root,harry]
点击graphs---creategraph
在ADD处选择Items为mysql.ping_test--save,稍等会儿就出图
当然，此处为一个简单的实现，如果需要监控复杂的应用，需要写脚本来实现，但方法
是类似的。
5.17 添加 Templates
如果有大量的同一类设备，需要监控的信息也大致类似，一个个去修改相关参数比较麻
烦，我们可以通过创建一个template来简化操作。
Configuration->HostGroups->Template->CreateTemplate
点击Items---createItems-
cteateItems
graph--creategraph--
添加到模板，后面就可以引用改模板了。
5.18 添加 Reports（定制报表）
在zabbix中关于报表的功能有三项：
Statusofzabbix:这是关于整个zabbix监控系统的
Avaliabilityreport：整个系统可用的系统报表提供过滤功能。
Mostbusytriggerstop100：提供最常用的triggers 预览：
Barreport ：可定制报表可以报多个报表整合到一起。
如下图是对test1server的freememory和swapfree每小时报表：
5.19 添加 Macros
Macros指宏变量，定义的宏变量可以在trigger、actions等多种场景中引用。
Macros分系统自带全局宏的及自定义的宏。
系统自带的全局macros列表及解释参考：
http://www.zabbix.com/documentation/2.0/manual/config/macros
引用macros的例子可参考上述action中添加{{Hostname}:{trigger.key}.last(0)}的例子。
Zabbix还支持自定义macros，在添加host或是template时，我们可以在macros项中定
义好后续要用到的宏变量，格式为:
{macroname}=macrovalue
自定义的宏变量及系统自带的宏变量都可以在zabbix场景中引用，zabbix在遇到引用
的宏变量时，会先查找当前场景中定义的宏，接着查找当前host的自定义宏，接着查找link
的template的宏，最后查找zabbix系统自带的全局宏。所以在自定义宏时注意宏引用的顺
序。
5.20 添加自动发现设备
通过zabbix的相关设置，zabbix可以自动添加设备，可以更友好的维护和添加相关设
备。
详细参考：
http://www.zabbix.com/documentation/2.0/manual/discovery
具体操作过程，请参看第4章，zabbix的高级使用-之自动化功能中的讲解。
5.21 添加 Inventory
Inventory 用来管理设备存档信息的。
在添加host时，勾选右侧的Useprofile，我们即可填入该台设备的型号、编码、MAC
地址等详细信息，勾选Useextendedprofile则可以填入更详细的信息。
填写的inventory信息在inventory->hosts下能看到.可以代替OCS一些功能。
5.22 Export/Import XML
Zabbix提供将所有配置导出为标准XML格式的文件，同样，也支持导入标准格式的
XML配置文件。
导入导出功能就可以把之前做的功能进行模板化了，和cacti的模板一个道理
通过configuration->Templates>Export/Import->Export,勾选要导出的模板，Preview 可以
展示要导出的host的详细配置，选择export即可导出xml文件到本地。
5.23 Maintenance（维护时间）
这一点和 Nagios 的 Schedule downtime for this host 差不多，在 Nagios 中可以设置在
downtime不需要告警，但是zabbxi设置的更加详细和可管理。
选择主机
注意，此功能的使用要结合Action功能一起使用
5.24 Proxy 的使用
zabbix中文文档---代理（Proxies）
概述
一个zabbix代理（Proxies）可以代表zabbix服务器收集性能和可用性数据。这样，代理（Proxies）可以负担采集数据的任务并且减轻
zabbix服务器负载 同时，使用代理（Proxies）是实施统一和分布式监控的最简单方式，因为所有的客户端和代理（Proxies）向一个zabbix
服务器报告数据，并且所有数据集中保存在服务器数据库。
一个zabbix代理（Proxies）可以用在以下：
监控远程区域
监控拥有不可靠链接的区域
当监控数以千计的设备时分担zabbix服务器的负载
简化分布式监控的维护
代理（Proxies）与服务器之间仅需要一个TCP连接。这样将更容易避开防火墙因为你仅需要配置一条防火墙规则
zabbix代理（Proxies）必须使用一个单独的数据库。代理（Proxies）执行zabbix服务器的数据库将打乱配置
所有代理（Proxies）采集到的数据在传送给服务器之前都保存在本地。这样，临时与服务器断开连接也不会导致数据丢失。proxy
配置文件中的参数ProxyLocalBuffer和 ProxyOfflineBuffer控制数据在本地保存多久。
zabbix代理（Proxies）是一个数据收集器。它不进行触发器计算，处理事件或发送报警信息。要了解代理（Proxies）的全部功能，查看
下表
Supportedby
Function
proxy
Items
Zabbixagentchecks Yes
Zabbixagentchecks(active)Yes1
Simplechecks Yes
Trapperitems Yes
SNMPchecks Yes
SNMPtraps Yes
IPMIchecks Yes
JMXchecks Yes
Logfilemonitoring Yes
Internalchecks No
SSHchecks Yes
Telnetchecks Yes
Externalchecks Yes
Built-inwebmonitoring Yes
Networkdiscovery Yes
Low-leveldiscovery Yes
Calculatingtriggers No
Processingevents No
Sendingalerts No
Remotecommands No
为确保客户端代理（agent）实现连接代理服务器（不是zabbixserver）请求主动检测，代理服务器的ip地址必须出现在
客户代理（Proxies）的参数ServerActive的值中
配置
一旦你安装并配置了一个代理服务器，现在该在zabix前端配置它了。
添加代理（Addingproxies）
要在zabbix前端配置代理，按如下步骤：
点击：高级配置 ->DM
在右上角的下拉列表框中选择proxies
点击Createproxy（或已经存在的代理服务器名称）
参数 描述
输入代理服务器名称。它必须跟代理服务器配置文件中参数Hostname的值一样。
proxyname
选择代理服务器的模式。
proxymodeActive-代理服务器将主动连接zabbix服务器并请求配置数据
被动模式-zabbix服务器连接代理服务器
hosts 添加被代理服务器监控的主机
主机配置
你可以在主机配置表单中使用Monitoredbyproxy字段指定应该被代理服务器监控的单个主机。
本节参考http://www.linuxmr.com/2012/zabbix2_0817/265.html
5.25 创建 zabbix 的报警(以 postfix 为例子)
先看一下zabbix的运行流程
HostGroups（设备组）->Hosts（设备）->Applications（监控项组）->Items（监控项）->Triggers
（触发器）->Actions（告警动作）->Medias（告警方式）->UserGroups（用户组）->Users
（用户）
在前面的内容中我们了解到了如何添加设备，如何写items，triggers，但是没有涉及如
何发送报警的问题，此处进行讲解。
5.22.1 创建 meida types
步骤：
登录zabbixweb页面------Administration--------Mediatypes--------CreateMediaType(右上角)
关于CreateMediaType参数设置的说明
Parameter Description
Description Media类型的名称
Type 选择类型为Email
SMTPserver 设置SMTP服务器来处理传出消息
SMTPhelo 设置正确的SMTP helo值,通常是一个域名.
SMTPemail 设置发送消息的email账号
点击右上角CreateMediaType
输入如下信息(此处采用本机的postfix(sendmail)发送邮件，postfix默认安装即可，无需其他
设置，为了安全，监听端口应该绑定为127.0.0.1上)，当然，此处是没法设置有密码认证的
邮箱，如需要，则可以采用脚本。
点击保存
此处内容的官方文档
https://www.zabbix.com/documentation/2.0/manual/web_interface/frontend_sections/administration/mediatypes
5.22.2 创建 actions
1.登录到zabbix，进入"Configation" >>"Actions"（“系统配置”>>“操作”），点击右上角
"CreateActions"。输入Name“mysql_baojing” ，其它都默认点击右侧“ActionOperations"
下的"New"按钮，"OperationType"选择"Send message"，"SendMessage to"选择一个或
多个要发送消息的用户组，”Sendonly to"选择我们之前新增的mysql_baojing。
2.点击save保存
Zabbix登陆-----Configation-------Actions------------CreateActions------
点击Action
依次填写
Name ：action的名称
Default operation step duration ：间隔时间
Default subject ：消息发送的默认主题
Default message ：休息发送的内容
Recovery message ：故障恢复后的消息内容，这里不是必选的，主要用于故障恢复通
知用户。如果不开启，则不会发送故障恢复的信息。
Enabled ：是否开启action
Recovery message这里勾选，则如下
点击Conditions
Type of calculation ：逻辑值，and or
Conditions ：条件，此处可以设置多个条件，例子中的条件是不在维护时间，且故障值为
PROBLEM则满足
New condition ：新的条件，如果想添加自己定义的条件，则点击add设置
发送的用户和组
参考https://www.zabbix.com/documentation/2.0/manual/web_interface/frontend_sections/configuration/actions
5.22.3 zabbix 用户配置
登录到zabbix====Adimistration=====Users======Admin用户。
在用户信息修改界面最下方的”Media"处点击"Add"按钮。
Type选择"Email"，Sendto填入收件人地址，点击Add添加。
点击"Save"保存配置。
右上角
点击add添加保存
除了以上功能，还有用户登陆的默认url，语言选项配置。
5.26 创建脚本报警(以 mail.py 为例)
此处借用mail.py来说明脚本发送邮件的问题，但是不建议用网上公用邮箱--为何？网
上公用大部分都有连接数量限制，发送邮件过多，会被服务器拒绝。因此，尽量用自己的邮
件服务器发送信息。
这部分内容直接转载lihuipeng博客，地址为http://lihuipeng.blog.51cto.com/3064864/1066915
1、Zabbix添加处理方法：管理——处理方法——create media type
zabbix会传给脚本三个参数：接收用户，邮件主题，邮件内容
cat /etc/zabbix/alertscripts/zabbix_sendmail.py #注意此文件要具有执行权限
#!/usr/bin/python
#coding:utf-8
importsmtplib
fromemail.mime.textimportMIMEText
importsys
mail_host='smtp.163.com'
mail_user='monitor_itnihao'
mail_pass='my_password'
mail_postfix='163.com'
defsend_mail(to_list,subject,content):
me=mail_user+""
msg=MIMEText(content)
msg['Subject']=subject
msg['From']=me
msg['to']=to_list
try:
s=smtplib.SMTP()
s.connect(mail_host)
s.login(mail_user,mail_pass)
s.sendmail(me,to_list,msg.as_string())
s.close()
returnTrue
exceptException,e:
printstr(e)
returnFalse
if__name__=="__main__":
send_mail(sys.argv[1],sys.argv[2],sys.argv[3])
2、添加触发设置：系统配置——操作——create action