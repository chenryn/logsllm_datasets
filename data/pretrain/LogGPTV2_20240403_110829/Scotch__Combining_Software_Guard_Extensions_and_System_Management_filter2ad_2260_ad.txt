3. Scotch requires no nested virtualization and retains a small Trusted Code
Base (TCB) within SMM. In contrast, Alibi [12] incurs a higher overhead,
roughly 6% CPU and 700% I/O, much of which is due to nested virtualization.
Additionally, Alibi incorporates the KVM codebase, signiﬁcantly increasing
the TCB.
4. Finally, Scotch is capable of reporting accurate accounting information in
the presence of a malicious guest capable of escaping the virtualization envi-
ronment. An escaped guest might be able to change resource usage informa-
tion recorded by the hypervisor (e.g., credits consumed in the Xen scheduler
to hide oddities in consumed CPU time). However, as we store this informa-
tion in SMRAM, we can derive an accurate report of resource usage without
relying on data structures stored in the hypervisor.
In addition to works from academia, several industrial systems have been
introduced for resource accounting [4,31,36]. For instance, Amazon AWS pro-
vides a tool called CloudWatch [4], which is a monitoring service for AWS cloud
resources that provides system-wide visibility to resources consumed by cloud
applications.
7.2 SMM-Based Approaches
To the best of our knowledge, only Jin et al. [24] have proposed an SMM-based
cloud resource accounting technique. Their approach is called Hardware-Assisted
420
K. Leach et al.
Resource Accounting (HRA). This technique is limited by its dependency on
random polling. By sampling which VCPU (and therefore which VM guest) is
currently executing, HRA relies on a large sample size to approximate a sort of
Gantt chart of VM running time. Additionally, HRA relies on data structures
in the hypervisor to coarsely approximate memory consumption. In contrast, by
measuring resource consumption every context switch and interrupt, Scotch
can rapidly determine accurate resource consumption information.
Additionally, there are several other SMM-based systems that are not directly
used in securely reporting hypervisor resource consumption. These systems
instead focus on detecting malicious activity [43], hiding keystrokes from the
OS [44], and securing peripheral devices [46]. Furthermore, systems like Hyper-
Check [47] and HyperSentry [8] have been used to verify the integrity of a run-
ning hypervisor. Finally, MalT [45] proposed a transparent, remote debugging
framework for use in analyzing stealthy malware or attacks capable of escaping
a VM or rooting a system. Besides using SMM for defense, attackers use it for
malicious purposes like implementing stealthy rootkits [19,33]. For example, the
National Security Agency (NSA) uses SMM to build advanced rootkits such as
Deitybounce for Dell and Ironchef for HP Proliant servers [2].
7.3 SGX-Based Approaches
Previous SGX-based systems such as Haven [10] ported system libraries and a
library OS into an SGX enclave, which forms a large TCB. Arnautov et al. [7]
proposed SCONE, a secure container mechanism for Docker that uses SGX to
protect container processes from external attacks. Hunt et al. [21] developed
Ryoan, a SGX- based distributed sandbox that enables users to keep their data
secret in data-processing services. These two papers did not propose techniques
to reduce the attack surface of computation inside enclaves or reduce the perfor-
mance overhead imposed by SGX paging. Schuster et al. [34] developed VC3, an
SGX-based trusted execution environment to execute MapReduce computation
in clouds.
7.4 Other VM Multi-tenancy Studies
Zhang et al. [48] presented a class of memory denial-of-Service attacks in multi-
tenant cloud servers, showing that a malicious VM may cause signiﬁcant perfor-
mance degradation of the victim VM by causing contention in storage-based
and scheduling-based resources. Bates et al. [9] discussed using side-channel
attacks to recover private information about co-resident VM guests. Similarly,
Inci et al. [22] exploited side-channel information to acquire RSA keys from vic-
tim guests. Scotch does not address these sorts of attacks. We instead focus
on scenarios in which attackers actively attempt to consume more resources for
themselves at the expense of victim guests.
Scotch
421
8 Future Work
In Sect. 3, we discussed three classes of attacks where Scotch can provide accu-
rate resource accounting information. However, we also discuss transplantation
attacks in which an escaped VM guest moves malicious code into a victim guest
so that the victim computes and accesses resources on behalf of the malicious
guest. Scotch and similar accounting systems are not currently capable help-
ing detect such attacks or otherwise automatically deciding whether malicious
activity occurs. Even with perfectly accurate resource consumption information,
the victim VM in this case would appear as though it were consuming resources
as normal, and so the victim would end up being billed for work initiated by the
attacker. We believe that such attacks would require detecting either the escape
itself (i.e., detecting the vulnerability or exploit causing the guest to escape the
virtualized environment) or detecting disparities from the normal workload per-
formed by the benign guest. In the future, we would like to incorporate such
detection into Scotch.
Additionally, we see Scotch as seeding the development of a general app-
roach to securing interrupts and peripheral I/O. Currently, SGX does not sup-
port any form of secure communication outside the scope of the enclave. Exist-
ing work such as SGXIO [40] has investigated trusted I/O paths with peripheral
devices. Scotch can target a similar application—by interacting with periph-
eral devices in SMM, we have the opportunity to attest ﬁrmware on potentially
malicious devices, whereas SGXIO requires trusting a hypervisor containing a
driver. We intend to explore securing I/O using Scotch’s combination of SMM
and SGX.
9 Conclusion
The growing popularity of cloud-based virtualization services, coupled with the
increasing number of security vulnerabilities in hypervisors, presents a com-
pelling need for accurate and transparent virtual machine resource accounting.
We introduce Scotch, an architecture that uses System Management Mode
on x86-based systems to carry out resource accounting and store information
in an isolated manner that cannot be tampered with by a compromised guest
or hypervisor. By accounting for resources at every task switch and I/O inter-
rupt, our system is accurate in the presence of certain classes of attacks, such
as scheduler attacks and resource interference attacks, by construction. Scotch
produced results that were within 2% of the ground truth, while incurring a
.0016% overhead on indicative workloads. Because SMRAM is isolated, Scotch
can even provide accurate information in the face of VM escape attacks. Over-
all, Scotch provides transparent and accurate resource accounting for virtual
machine guests.
422
K. Leach et al.
References
1. Credit Scheduler. http://wiki.xensource.com/xenwiki/CreditScheduler
2. NSA’s ANT Division Catalog of Exploits
for Nearly Every Major Soft-
ware/Hardware/Firmware. http://Leaksource.wordpress.com
3. Xentrace. http://linux.die.net/man/8/xentrace
4. Amazon AWS: Amazon CloudWatchamazon cloudwatch. https://aws.amazon.
com/cloudwatch
5. AMD: AMD RS800 ASIC family BIOS developer’s guide (2010)
6. AMD. AMD64 architecture programmer’s manual, Volume 2: System Program-
ming (2013)
7. Arnautov, S., Trach, B., Gregor, F., Knauth, T., Martin, A., Priebe, C., Lind, J.,
Muthukumaran, D., O’Keeﬀe, D., Stillwell, M.L., et al.: SCONE: secure Linux con-
tainers with Intel SGX. In: 12th USENIX Symposium Operating Systems Design
and Implementation (2016)
8. Azab, A.M., Ning, P., Wang, Z., Jiang, X., Zhang, X., Skalsky, N.C.: HyperSentry:
enabling stealthy in-context measurement of hypervisor integrity. In: Proceedings
of the 17th ACM Conference on Computer and Communications Security (CCS
2010) (2010)
9. Bates, A., Mood, B., Pletcher, J., Pruse, H., Valafar, M., Butler, K.: Detecting
co-residency with active traﬃc analysis techniques. In: Proceedings of the 2012
ACM Workshop on Cloud computing security workshop, pp. 1–12. ACM (2012)
10. Baumann, A., Peinado, M., Hunt, G.: Shielding applications from an untrusted
cloud with haven. ACM Trans. Comput. Syst. (TOCS) 33(3), 8 (2015)
11. Bienia, C., Kumar, S., Singh, J.P., Li, K.: The PARSEC benchmark suite: charac-
terization and architectural implications. In: Proceedings of the 17th International
Conference on Parallel Architectures and Compilation Techniques, pp. 72–81. ACM
(2008)
12. Chen, C., Maniatis, P., Perrig, A., Vasudevan, A., Sekar, V.: Towards veriﬁable
resource accounting for outsourced computation. In: Proceedings of the 9th ACM
SIGPLAN/SIGOPS International Conference on Virtual Execution Environments
(VEE 2013) (2014)
13. Cherkasova, L., Gupta, D., Vahdat, A.: Comparison of the three CPU schedulers
in Xen. SIGMnﬂuencingformance Eval. Rev. 35(2), 42–51 (2007)
14. Columbus, L.: Roundup of cloud computing forecasts and market esti-
http://www.forbes.com/sites/louiscolumbus/2016/03/13/
mates
roundup-of-cloud-computing-forecasts-and-market-estimates-2016/
(2016).
15. Common Vulnerability Database: VENOM: CVE-2015-3456, Xen 4.5 VM escape
attack (2015)
16. Coreboot: Open-Source BIOS. http://www.coreboot.org/
17. Domas, C.: The memory sinkhole. BlackHat, USA (2015)
18. Dragovic, B., Fraser, K., Hand, S., Harris, T., Ho, A., Pratt, I., Warﬁeld, A.,
Barham, P., Neugebauer, R.: Xen and the art of virtualization. In: Proceedings of
the ACM Symposium on Operating Systems Principles (2003)
19. Embleton, S., Sparks, S., Zou, C.: SMM rootkits: a new breed of OS indepen-
dent malware. In: Proceedings of the 4th International Conference on Security and
Privacy in Communication Networks (SecureComm 2008) (2008)
20. Garcia, A.: Target settles for $39 million over data breach (2015). http://money.
cnn.com/2015/12/02/news/companies/target-data-breach-settlement/
Scotch
423
21. Hunt, T., Zhu, Z., Xu, Y., Peter, S., Witchel, E.: Ryoan: a distributed sandbox
for untrusted computation on secret data. In: 12th USENIX Symposium on Oper-
ating Systems Design and Implementation (OSDI 2016), pp. 533–549. USENIX
Association (2016)
22. Inci, M.S., Gulmezoglu, B., Irazoqui, G., Eisenbarth, T., Sunar, B.: Seriously, get
oﬀ my cloud! Cross-VM RSA key recovery in a public cloud. Technical report,
IACR Cryptology ePrint Archive (2015)
23. Intel: Intel software guard extensions programming reference (2014). https://
software.intel.com/sites/default/ﬁles/managed/48/88/329298-002.pdf
24. Jin, S., Seol, J., Huh, J., Maeng, S.: Hardware-assisted Secure Resource Account-
ing under a Vulnerable Hypervisor. In: Proceedings of the 11th ACM SIG-
PLAN/SIGOPS International Conference on Virtual Execution Environments
(VEE 2015) (2015)
C.,
to
would
http://legbacore.com/Research ﬁles/
25. Kallenberg,
like
you
HowManyMillionBIOSesWouldYouLikeToInfect Whitepaper v1.pdf
(2015).
Kovah,
infect?
X.:
How many million
bioses
26. Kelion, L.: Apple toughens iCloud security after celebrity breach (2014). http://
www.bbc.com/news/technology-29237469
27. Kortchinsky, K.: CLOUDBURST: a VMware guest to host escape story. In: Black
Hat USA (2009)
28. Leach, K., Spensky, C., Weimer, W., Zhang, F.: Towards transparent introspec-
tion. In: 23rd IEEE International Conference on Software Analysis, Evolution and
Reengineering (2016)
29. National Institute of Standards, NIST: National vulnerability database. http://
nvd.nist.gov. Accessed 10 May 2016
30. Prakash, A., Venkataramani, E., Yin, H., Lin. Z.: Manipulating semantic val-
ues in kernel data structures: attack assessments and implications. In: 2013 43rd
Annual IEEE/IFIP International Conference on Dependable Systems and Net-
works (DSN), pp. 1–12. IEEE (2013)
31. Ren, G., Tune, E., Moseley, T., Shi, Y., Rus, S., Hundt, R., Proﬁling, G.-W.: A
continuous proﬁling infrastructure for data centers. IEEE Micro (2010)
32. Rong, H., Xian, M., Wang, H., Shi, J.: Time-stealer: a stealthy threat for virtu-
alization scheduler and its countermeasures. In: Qing, S., Zhou, J., Liu, D. (eds.)
ICICS 2013. LNCS, vol. 8233, pp. 100–112. Springer, Cham (2013). doi:10.1007/
978-3-319-02726-5 8
33. Schiﬀman, J., Kaplan, D.: The SMM rootkit revisited: fun with USB. In: Pro-
ceedings of 9th International Conference on Availability, Reliability and Security
(ARES 2014) (2014)
34. Schuster, F., Costa, M., Fournet, C., Gkantsidis, C., Peinado, M., Mainar-Ruiz,
G., Russinovich, M.: Vc3: trustworthy data analytics in the cloud using SGX. In:
2015 IEEE Symposium on Security and Privacy (SP), pp. 38–54. IEEE (2015)
35. Varadarajan, V., Kooburat, T., Farley, B., Ristenpart, T., Swift, M.M.: Resource-
freeing attacks: improve your cloud performance (at your neighbor’s expense). In:
Proceedings of the 2012 ACM conference on Computer and communications secu-
rity, pp. 281–292. ACM (2012)
36. VMware Inc.: vCenter chargeback manager. https://www.vmware.com/products/
vcenter-chargeback
37. Wang, H., Jing, Q., Chen, R., He, B., Qian, Z., Zhou, L.: Distributed systems meet
economics: pricing in the cloud. HotCloud 10, 1–6 (2010)
424
K. Leach et al.
38. Wang, J., Sun, K., Stavrou, A.: A dependability analysis of hardware-assisted
polling integrity checking systems. In: Proceedings of the 42nd Annual IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN 2012) (2012)
39. Wang, L., Zhan, J., Luo, C., Zhu, Y., Yang, Q., He, Y., Gao, W., Jia, Z., Shi, Y.,
Zhang, S., et al.: Bigdatabench: a big data benchmark suite from internet services.
In: 2014 IEEE 20th International Symposium on High Performance Computer
Architecture (HPCA), pp. 488–499. IEEE (2014)
40. Weiser, S., Werner, M.: SGXIO: generic trusted I/O path for Intel SGX. In: Pro-
ceedings of the Seventh ACM on Conference on Data and Application Security and
Privacy (CODASPY 2017), pp. 261–268, New York. ACM (2017)
41. Wojtczuk, R., Rutkowska, J.: Attacking Intel
execution technolo-
gies (2009). http://invisiblethingslab.com/resources/bh09dc/Attacking%20Intel%
20TXT%20-%20slides.pdf
trust
42. Wojtczuk, R., Rutkowska, J.: Attacking SMM memory via Intel CPU cache poi-
soning (2009)
43. Zhang, F., Leach, K., Sun, K., Stavrou, A.: SPECTRE: a dependable introspection
framework via system management mode. In: Proceedings of the 43rd Annual
IEEE/IFIP International Conference on Dependable Systems and Networks (DSN
2013) (2013)
44. Zhang, F., Leach, K., Wang, H., Stavrou, A.: Trustlogin: securing password-login
on commodity operating systems. In: Proceedings of the 10th ACM Symposium on
Information, Computer and Communications Security, pp. 333–344. ACM (2015)
45. Zhang, F., Leach, K., Wang, H., Stavrou, A., Sun, K.: Using hardware features for
increased debugging transparency. In: Proceedings of the 36th IEEE Symposium
on Security and Privacy (2015)
46. Zhang, F., Wang, H., Leach, K., Stavrou, A.: A framework to secure peripherals at
runtime. In: Kuty(cid:4)lowski, M., Vaidya, J. (eds.) ESORICS 2014. LNCS, vol. 8712,
pp. 219–238. Springer, Cham (2014). doi:10.1007/978-3-319-11203-9 13
47. Zhang, F., Wang, J., Sun, K., Stavrou, A.: HyperCheck: a hardware-assisted
integrity monitor. In: IEEE Transactions on Dependable and Secure Computing
(2013)
48. Zhang, T., Zhang, Y., Lee, R.B.: Memory dos attacks in multi-tenant clouds: Sever-
ity and mitigation. arXiv preprint arXiv:1603.03404 (2016)
49. Zhou, F., Goel, M., Desnoyers, P., Sundaram, R.: Scheduler vulnerabilities and
coordinated attacks in cloud computing. J. Comput. Secur. 21(4), 533–559 (2013)