---
author: Zwischenzugs
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 9244
date: '2018-09-01 21:30:59'
editorchoice: false
excerpt: 在第三部分中，我将介绍 NetworkManager 和 dnsmasq，简要说明它们如何影响 DNS 查询。
fromurl: https://zwischenzugs.com/2018/07/06/anatomy-of-a-linux-dns-lookup-part-iii/
id: 9972
islctt: true
largepic: /data/attachment/album/201809/01/213042p0w0wwdwhmh0w6wx.jpeg
permalink: /article-9972-1.html
pic: /data/attachment/album/201809/01/213042p0w0wwdwhmh0w6wx.jpeg.thumb.jpg
related:
- displayorder: 0
  raid: 9949
- displayorder: 0
  raid: 10056
reviewer: wxy
selector: oska874
summary: 在第三部分中，我将介绍 NetworkManager 和 dnsmasq，简要说明它们如何影响 DNS 查询。
tags:
- DNS
thumb: false
title: Linux DNS 查询剖析（第三部分）
titlepic: true
translator: pinewall
updated: '2018-09-01 21:30:59'
---
![](/data/attachment/album/201809/01/213042p0w0wwdwhmh0w6wx.jpeg)
在 [Linux DNS 查询剖析（第一部分）](/article-9943-1.html)中，我们介绍了：
* `nsswitch`
* `/etc/hosts`
* `/etc/resolv.conf`
* `ping` 与 `host` 查询方式的对比
而在 [Linux DNS 查询剖析（第二部分）](/article-9949-1.html)，我们介绍了：
* `systemd` 和对应的 `networking` 服务
* `ifup` 和 `ifdown`
* `dhclient`
* `resolvconf`
剖析进展如下：
![linux-dns-2 (2)](/data/attachment/album/201809/01/213100x97y0qsd7wsqry9n.png)
*（大致）准确的关系图*
很可惜，故事还没有结束，还有不少东西也会影响 DNS 查询。在第三部分中，我将介绍 `NetworkManager` 和 `dnsmasq`，简要说明它们如何影响 DNS 查询。
### 1) NetworkManager
在第二部分已经提到，我们现在介绍的内容已经偏离 POSIX 标准，涉及的 DNS 解析管理部分在各个发行版上形式并不统一。
在我使用的发行版 （Ubuntu）中，有一个名为 [NetworkManager](https://en.wikipedia.org/wiki/NetworkManager) 的 可用   available 服务，它通常作为一些其它软件包的依赖被安装。它实际上是 RedHat 在 2004 年开发的一个服务，用于帮助你管理网络接口。
它与 DNS 查询有什么关系呢？让我们安装这个服务并找出答案：
```
$ apt-get install -y network-manager
```
对于 Ubuntu，在软件包安装后，你可以发现一个新的配置文件：
```
$ cat /etc/NetworkManager/NetworkManager.conf
[main]
plugins=ifupdown,keyfile,ofono
dns=dnsmasq
[ifupdown]
managed=false
```
看到 `dns=dnsmasq` 了吧？这意味着 `NetworkManager` 将使用 `dnsmasq` 管理主机上的 DNS。
### 2) dnsmasq
`dnsmasq` 程序是我们很熟悉的程序：只是 `/etc/resolv.conf` 之上的又一个间接层。
理论上，`dnsmasq` 有多种用途，但主要被用作 DNS 缓存服务器，缓存到其它 DNS 服务器的请求。`dnsmasq` 在本地所有网络接口上监听 53 端口（标准的 DNS 端口）。
那么 `dnsmasq` 运行在哪里呢？`NetworkManager` 的运行情况如下：
```
$ ps -ef | grep NetworkManager
root     15048     1  0 16:39 ?        00:00:00 /usr/sbin/NetworkManager --no-daemon
```
但并没有找到 `dnsmasq` 相关的进程：
```
$ ps -ef | grep dnsmasq
$
```
令人迷惑的是，虽然 `dnsmasq` 被配置用于管理 DNS，但其实并没有安装在系统上！因而，你需要自己安装它。
安装之前，让我们查看一下 `/etc/resolv.conf` 文件的内容：
```
$ cat /etc/resolv.conf
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 10.0.2.2
search home
```
可见，并没有被 `NetworkManager` 修改。
如果安装 `dnsmasq`：
```
$ apt-get install -y dnsmasq
```
然后启动运行 `dnsmasq`：
```
$ ps -ef | grep dnsmasq
dnsmasq  15286     1  0 16:54 ?        00:00:00 /usr/sbin/dnsmasq -x /var/run/dnsmasq/dnsmasq.pid -u dnsmasq -r /var/run/dnsmasq/resolv.conf -7 /etc/dnsmasq.d,.dpkg-dist,.dpkg-old,.dpkg-new --local-service --trust-anchor=.,19036,8,2,49AAC11D7B6F6446702E54A1607371607A1A41855200FD2CE1CDDE32F24E8FB5
```
然后，`/etc/resolv.conf` 文件内容又改变了！
```
root@linuxdns1:~# cat /etc/resolv.conf 
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 127.0.0.1
search home
```
运行 `netstat` 命令，可以看出 `dnsmasq` 在所有网络接口上监听 53 端口：
```
$ netstat -nlp4
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address     Foreign Address State   PID/Program name
tcp        0      0 127.0.0.1:53      0.0.0.0:*       LISTEN  15286/dnsmasq 
tcp        0      0 10.0.2.15:53      0.0.0.0:*       LISTEN  15286/dnsmasq
tcp        0      0 172.28.128.11:53  0.0.0.0:*       LISTEN  15286/dnsmasq
tcp        0      0 0.0.0.0:22        0.0.0.0:*       LISTEN  1237/sshd
udp        0      0 127.0.0.1:53      0.0.0.0:*               15286/dnsmasq
udp        0      0 10.0.2.15:53      0.0.0.0:*               15286/dnsmasq  
udp        0      0 172.28.128.11:53  0.0.0.0:*               15286/dnsmasq  
udp        0      0 0.0.0.0:68        0.0.0.0:*               10758/dhclient
udp        0      0 0.0.0.0:68        0.0.0.0:*               10530/dhclient
udp        0      0 0.0.0.0:68        0.0.0.0:*               10185/dhclient