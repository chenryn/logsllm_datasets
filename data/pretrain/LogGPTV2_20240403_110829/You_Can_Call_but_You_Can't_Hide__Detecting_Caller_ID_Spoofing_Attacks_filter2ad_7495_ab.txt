information that is sent over the control channel: (a) how
Alice responds to the veriﬁcation call C v
B→A, and (b) how
long Alice waits before responding. For instance, if Alice is
calling Bob, Bob will observe that she rejects the veriﬁcation
call C v
B→A after a predeﬁned interval τv. Because timing
estimation of Alice’s waiting time τv is performed at Bob’s
side and its accuracy depends on the packet delivery delays
inside telephone networks, we use a probabilistic classiﬁer
to achieve high estimation accuracy. As we discuss in
Section V, we use a Bayesian classiﬁer [16] that is suitable
to resource constrained phone terminals.
The idea of forming a covert timing channel between
Alice and Bob is simple. However, several open problems
remain, such as: (a) Bob must be able to estimate Alice’s
waiting time τv at his end, (b) the protocol must handle
all possible scenarios, i.e., caller ID is valid, caller ID is
spoofed, Alice does not support CallerDec, Bob’s veri-
ﬁcation call goes to Alice’s voicemail, etc. We address all
these issues in the design of CallerDec. In the following,
we ﬁrst discuss regular call setup process in Section IV-B,
then present CallerDec protocol in Section IV-C, discuss
two use cases of CallerDec in Section IV-D, and perform
security analysis in Section IV-E.
B. Regular Call Setup: C o
A→B
Without
loss of generality, we consider the case that
Alice and Bob belong to carrier-A and carrier-B respec-
tively, and the two carriers communicate through SS7. We
depict a regular call setup procedure in Fig. 2: when Alice
dials Bob’s number, a SETUP request is sent to carrier-
A. Then, carrier-A sends carrier-B an Initial Address
Message(IAM), which is equivalent
to SETUP. After
carrier-B sends a SETUP to Bob, he responds with an
ALERTING message and starts the ringing. The ALERTING
message indicates that Bob is available and the ring-
ing has started. At
this point, carrier-B sends carrier-A
an Address Complete Message(ACM). Subsequently,
carrier-A sends Alice an ALERTING message, and Alice
starts to play the ringback tone. We note that all messages
(e.g., SETUP) are automatically generated by the underlying
telephone protocols.
C. CallerDec Veriﬁcation Protocol
Continuing with the example shown in Fig. 2, we intro-
duce CallerDec veriﬁcation protocol using the following
scenarios: (a) normal scenario: Alice is indeed calling Bob
and both of them installed CallerDec, (b) attack scenario
- spoof a reachable user: Eve is spooﬁng Alice’s number,
and Alice is reachable with CallerDec installed, (c) attack
scenario - spoof an unreachable user: Eve is spooﬁng
Alice’s number, and Alice is unreachable, and (d) not-
supported scenario: Alice does not install CallerDec.
1) Normal Scenario: As shown in Fig. 2, after receiving a
A→B from Alice, Bob will perform veriﬁcation
phone call C o
as follows.
171171171
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
We postpone the discussion on why it is feasible to estimate
τv based on T3 in Section V.
As we discussed in Section III-A, Eve cannot
inject
packets to the traditional telephone networks, neither can she
reject or answer the veriﬁcation call directed to Alice. Thus
the veriﬁcation process between Bob and Alice is protected,
and the response from Alice is trusted. We show a simpliﬁed
version of this scenario in Fig. 3(a).
2) Spoof a Reachable User: Eve is calling Bob and
Alice is reachable, as shown in Fig. 3(b). Similar to the
normal scenario, Bob will ﬁrst initiate a veriﬁcation call
C v
B→A to Alice once he receives the call from Eve. Alice
will treat Bob’s veriﬁcation call C v
B→A as a regular call
C o
B→A since she is not calling Bob. As a result, instead
of rejecting it, she will
initiate a new veriﬁcation call
C v
A→B after an interval τsv. When Bob identiﬁes that Alice
has initiated a veriﬁcation call C v
A→B, he concludes that
Alice was not calling him. Instead, Alice is trying to verify
Bob’s veriﬁcation call C v
B→A. After conﬁrming that Alice’s
veriﬁcation call C v
A→B was initiated after a duration of τsv,
Bob will conclude that the caller ID is SPOOFED. He will
terminate his veriﬁcation call C v
B→A for Alice) and
reject Alice’s veriﬁcation call C v
2.
Consequently, from Alice’s point of view, she detects that
her veriﬁcation call C v
A→B has been rejected and the original
call C o
B→A she received is terminated. Then, she concludes
that Bob may have received a call that had spoofed her caller
ID and terminates her own veriﬁcation.
B→A (C o
A→B after an interval τv
3) Spoof an Unreachable User: In this scenario, Eve is
calling Bob, and Alice is unreachable, e.g., her phone can be
powered off, out of the coverage range, or Alice is an invalid
number. In such cases, as shown in Fig. 3(c), the veriﬁcation
call from Bob C v
B→A will be directed immediately to either
Alice’s voicemail or carrier’s voicemail. When C v
B→A goes
straight to voicemail, it contradicts to the fact that “Alice”
was calling Bob. Based on the timing estimation Bob can
detect that the veriﬁcation call went straight to voicemail
and will terminate the veriﬁcation call before it reaches the
voice recording, and thus no voicemail is left. Finally, Bob
concludes that the caller ID is SPOOFED.
4) Not-supported Scenario: Now, we discuss the case
when Alice does not support CallerDec. In this case, the
veriﬁcation call C v
B→A will be considered as a regular call.
Since CallerDec is not installed, Alice (the person) may
reject the call after a random interval, answer the call, or
even not respond to the call. Regardless of the response,
CallerDec can handle all cases:
i. Normal Scenario. Without CallerDec, Alice may an-
swer the veriﬁcation call from Bob. To leverage Alice’s
knowledge, Bob’s CallerDec will play a pre-recorded
voice instruction which asks Alice to press “1#” for
2Bob rejects C v
B→A.
cation call C v
A→B after τv to indicate that he did initiate the veriﬁ-
(a) normal scenario
(b) spoof a reachable user
(c) spoof an unreachable user
Figure 3.
scenario, and in attack scenarios.
Simpliﬁed CallerDec protocol and outcomes in a normal
i. After an interval T1 = τsv, Bob initiates a veriﬁca-
tion call C v
B→A to Alice that triggers a sequence of
six messages: SETUP, IAM, SETUP, ALERTING,
ACM, and ALERTING.
ii. When Alice receives the veriﬁcation call C v
B→A, she
will reject it after an interval T2 = τv. As a result,
Bob will receive a REJECT message from carrier-B
indicating that C v
B→A has been rejected.
iii. After receiving a REJECT message, Bob will measure
the time difference between the moment of sending the
SETUP message and receiving the REJECT message
(denoted as T3 in Fig. 2). Examining T3 using the
classiﬁer, Bob will verify whether Alice has waited for
the expected time τv before rejecting veriﬁcation call
C v
B→A. Once the waiting time is veriﬁed, Bob will
further check the status of the original call C o
A→B. If
C o
A→B is still active, Bob will conclude that the caller
ID is VALID. If C o
A→B is no longer active, then there
is no need to continue with the veriﬁcation process.
Both τv and τsv are predeﬁned parameters and are used
to differentiate whether Alice supports CallerDec or not.
When Alice (the phone) does not support CallerDec,
Alice (the person) may answer the veriﬁcation call. Thus,
the values of τv and τsv should be chosen so that a user is
unlikely to respond to a call after a τv interval yet keeping
the veriﬁcation delay small. In addition, we deﬁne two
parameters (τv and τsv) to emphasize their independence. In
practice, they can have the same values, e.g., τv = τsv = 0.
172172172
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
initiate verification call
D. Use Cases
reject
check call status
voicemail
no
no
reject after Ĳv
yes
original
call active?
yes
VALID
new verification call
answer
verification
call after Ĳsv
SUHVVHG³1´
no
yes
no
yes
SUHVVHG³2´
yes
straight to
voicemail
no
yes
no
SPOOFED
NOTSUPPORTED
end
Figure 4.
This ﬂowchart shows how CallerDec handles different cases
to detect caller ID spooﬁng. A new incoming call initiates the veriﬁcation
process.
conﬁrming the caller ID or to press “2#” to reject the
veriﬁcation. To proof her Caller ID, Alice presses the
proper keys, and Bob will conclude that the caller ID
is VALID. Alternatively, Alice may press a random
key, and then Bob will conclude that CallerDec is
NOTSUPPORTED at Alice’s end. In addition, Alice may
ignore the call or may reject the call. For both responses,
Bob will conclude NOTSUPPORTED.
ii. Spoof a Reachable User. Similarly, Alice may answer
the veriﬁcation call. After Alice enters the proper input
(i.e., “2#”), Bob will conclude that the caller ID is
SPOOFED. For all other key-press (except “1#”), Bob
will conclude NOTSUPPORTED. In cases that Alice
rejects the veriﬁcation call, Bob will use the classiﬁer to
verify whether Alice has waited for an interval τv before
rejecting the call. Since the value of τv is chosen before-
hand to ensure that it is unlikely for a human to reject
calls after τv interval (e.g., τv = 0), Bob’s CallerDec
concludes NOTSUPPORTED. In cases that Alice ignores
the call and the veriﬁcation call goes to a voicemail after
timeout on ringing, Bob will conservatively conclude
that CallerDec is NOTSUPPORTED.
iii. Spoof an Unreachable User. The veriﬁcation call will
go to a voicemail directly, and Bob can identify the
situation utilizing the classiﬁer and will conclude that
CallerDec is SPOOFED.
The overall decision process is illustrated in Fig. 4.
We include NOTSUPPORTED to address the cases when
CallerDec is not
installed. We envision that after
CallerDec is supported by all telephone devices, we can
eliminate NOTSUPPORTED.
We envision two use cases of CallerDec: emergency
call, where calls need to be answered immediately, and
regular call, where Caller IDs are expected to be veriﬁed
before calls are answered. In both cases, CallerDec
follows the same veriﬁcation protocol, because veriﬁcation
relies on an end-to-end covert channel that is independent
to whether the original call is answered or not.
1) Emergency Calls: In emergency call cases, such as 9-
1-1 services, caller ID veriﬁcation is performed in parallel
to the voice call. As shown in Fig. 5(a), the callee (e.g.,
an 9-1-1 service) answers the call from Alice upon ring-
ing, and CallerDec starts the veriﬁcation process in the
background. After the caller ID is veriﬁed, CallerDec
will notify the callee, and sensitive information may be
exchanged thereafter. Since the duration of 9-1-1 calls are
reported to be between 1-2 minutes on average [17] [18],
the veriﬁcation results shall be returned before the call is
terminated.
2) Regular Calls: Eve may spoof Alice’s caller ID with
the goal of winning a chance talking to Bob, who would
refuse otherwise (e.g., Eve may be an unknown number
or is on Bob’s block list). Thus, in regular call scenar-
ios, CallerDec performs the veriﬁcation before a call
is answered. As shown in Fig. 5(b), once Bob receives
an incoming call, CallerDec starts to verify the caller
ID and notiﬁes Bob after the veriﬁcation completes. While
CallerDec may introduce delay in answering phone calls,
it allows users to answer or reject spoofed calls.
Although the veriﬁcation protocol is independent on the
use cases,
the number of required concurrent calls for
CallerDec depends on the type of use cases. For regular
call cases, Bob only requires one call for veriﬁcation. For
emergency call cases, two concurrent calls are required since
the veriﬁcation shall be performed in parallel to the original
call.
E. Discussion
1) Security Analysis: The security of CallerDec relies
on the observation that the veriﬁcation call from Bob to
Alice will be routed to Alice if she is available and to a
voicemail if she is unavailable, and Eve cannot manipulate
the veriﬁcation call. Based on the choice of use cases, Bob
can determine when to answer a call, e.g., before the caller
ID is veriﬁed or after. Regardless of when to answer a call,
Bob can utilize the same CallerDec to verify caller ID.
In case of spooﬁng a reachable user (Section IV-C),
equipped with CallerDec, Alice will treat Bob’s veriﬁ-
cation call as a new call and will initiate a new veriﬁcation
call to Bob. Consequently, Bob concludes that the caller ID
is SPOOFED and Alice will conclude that Bob received a
SPOOFED call. Without CallerDec, when Alice receives
173173173
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
(a) emergency call scenario
(b) regular call scenario
Figure 5. Two use cases of CallerDec. CallerDec follows the same veriﬁcation protocol for both cases, because the veriﬁcation procedure is independent
to whether the original call is answered or not.
the veriﬁcation call from Bob3, she may answer the call and
enter a proper input which leads Bob to conclude SPOOFED.
If Alice rejects or ignores the call, Bob will conservatively
conclude NOTSUPPORTED, as discussed in non-supported
scenario(b) of Section IV-C. The bottom line is that Eve
cannot send any signal to convince Bob that Alice is calling.
2) Special Cases: We discuss three special cases whereby
the claimed caller ID is different from the true ID. Yet they
should not be tagged as spoofed caller ID.
initiate veriﬁcation process if caller
i. Blocked caller IDs. CallerDec depends on the caller
ID of an incoming call for veriﬁcation and CallerDec
cannot
ID is
BLOCKED or UNAVAILABLE. However, if Bob sup-
ports the mechanism to uncover caller ID of such calls,
then CallerDec can be integrated seamlessly. For
instance, the commercial service TrapCall4 claims
to have the ability to unmask blocked numbers, and
CallerDec can utilize such a service to ﬁrst unmask
the blocked number, and then perform caller ID veriﬁ-
cation if it is needed. The 9-1-1 service also has such
capability, and if integrated, CallerDec can perform
caller ID veriﬁcation effectively.
ii. PBX systems. CallerDec can be integrated easily in
a PBX system of an organization, e.g., a bank, where
CallerDec is installed in the PBX and can keep
track of the ongoing calls as well as their extension
numbers. Since such systems generally have resources
for multiple concurrent calls, they can adopt parallel
veriﬁcation, as discussed in use case 2 (Section IV-D).
Furthermore,
if Alice is reachable via an extension
number of the PBX system and she calls Bob, Bob can
verify the caller ID as usual.
iii. Legitimate caller ID ‘spooﬁng’. It is possible that Alice
intentionally spoofs her own caller ID when calling Bob,
e.g., Alice uses skype to call Bob, while pretending to
call from her cell phone. In this case, she can control
CallerDec on her cell phone, and thus can proof her
Figure 6.
VALID and SPOOFED caller ID scenarios.
Screenshots of CallerDec implementation on smartphone for
identity. We consider this scenario as a legitimate caller
ID ‘spooﬁng,’ and CallerDec will conclude VALID.
3) Race Conditions: In a regular call scenario, both Alice
and Bob may try to call each other simultaneously. In such
cases, both calls will go straight to the voicemail. This is
because most standards allow to signal at most one call at
a time for each user, i.e., neither Alice nor Bob can receive
an incoming call while making an outgoing one [19]. In this
scenario, CallerDec is not triggered. In the case where
one of the calling parties starts the call earlier than the other,
at most one call will go through 5 and CallerDec handles
the case as usual. The party that successfully receives the
call will trigger its CallerDec to initiate the veriﬁcation
process, and validate the caller ID.
When Eve tries to spoof both Alice and Bob simulta-
neously, both Alice and Bob will initiate veriﬁcation call to
each other. But these calls would go straight to the voicemail
and CallerDec will correctly conclude SPOOFED.
4) Advanced Conﬁguration: CallerDec can be conﬁg-
ured to verify only pre-selected numbers and balance the
trade off between delays and trust. Similarly, veriﬁcation can
be disabled for certain numbers, e.g., premium rate numbers.
3Alice will receive the veriﬁcation call even if she is on a call already.
4www.trapcall.com
5Alice can receive a second call while she is on another active call
because the call signaling for the active call has ended and the call waiting
protocol kicks in.
174174174
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 