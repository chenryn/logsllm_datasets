#传送本地文件到远程主机
[root@CentOS local]# rsync -v --port 56789 b.txt PI:EMAIL::BACKUP
b.txt
sent 67 bytes received 27 bytes 188.00 bytes/sec
total size is 2 speedup is 0.02
#传送目录至远程主机
[root@CentOS local]# rsync -avz --port 56789 apache2
PI:EMAIL::BACKUP
#部分结果省略
apache2/modules/mod_vhost_alias.so
sent 27983476 bytes received 187606 bytes 5122014.91 bytes/sec
total size is 48113101 speedup is 1.71
#拉取远程文件至本地
[root@CentOS local]# rsync --port 56789 -avz
48
第3章 运维必备的网络管理技能
PI:EMAIL::BACKUP/apache2/test.txt .
receiving incremental file list
test.txt
sent 47 bytes received 102 bytes 298.00 bytes/sec
total size is 2 speedup is 0.01
#拉取远程目录至本地
[root@CentOS local]# rsync --port 56789 -avz
PI:EMAIL::BACKUP/apache2 .
#部分结果省略
apache2/modules/mod_version.so
apache2/modules/mod_vhost_alias.so
sent 16140 bytes received 13866892 bytes 590767.32 bytes/sec
total size is 48113103 speedup is 3.47
rsync 具有增量传输的功能，利用此特性可以用来做文件的增量备份。通过 rsync 可以解
决对实时性要求不高的数据备份需求。随着文件增多，rsync 做数据同步时，需要扫描所有文
件后进行对比，然后进行差量传输。如果文件很多，扫描文件是非常耗时的，使用rsync反而
比较低效。
使用rsync之前需要做一些简单的配置，读者可自行参考相关文档了解。
3.2.6 显示网络连接、路由表或接口状态 netstat
netstat命令用于监控系统网络配置和工作状况，可以显示内核路由表、活动的网络状态以
及每个网络接口有用的统计数字。常用的参数如表3.4所示。
表3.4 netstat命令常用参数说明
参数 说明
-a 显示所有连接中的Socket
-c 持续列出网络状态
-h 在线帮助
-i 显示网络界面
-l 显示监控中的服务器的Socket
-n 直接使用IP地址
-p 显示正在使用Socket的程序名称
-r 显示路由表
-s 显示网络工作信息统计表
-t 显示TCP端口情况
-u 显示UDP端口情况
-v 显示命令执行过程
-V 显示版本信息
49
CentOS 7.5系统管理与运维实战
netstat常见使用方法如【示例3-7】所示。
【示例3-7】
#显示所有端口，包含UDP和TCP端口
[root@CentOS local]# netstat -a|head -4
getnameinfo failed
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address Foreign Address State
tcp 0 0 *:rquotad *:* LISTEN
tcp 0 0 *:55631 *:* LISTEN
……
#显示所有TCP端口
[root@CentOS local]# netstat –at
#部分结果省略
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address Foreign Address State
tcp 0 0 192.168.3.100:56789 *:* LISTEN
tcp 0 0 *:nfs *:* LISTEN
#
#显示所有UDP端口
[root@CentOS local]# netstat -au
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address Foreign Address State
udp 0 0 *:nfs *:*
udp 0 0 *:43801 *:*
#显示所有处于监听状态的端口并以数字方式显示而非服务名
[root@CentOS local]# netstat -ln
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address Foreign Address State
tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN
tcp 0 0 192.168.3.100:56789 0.0.0.0:* LISTEN
#显示所有TCP端口并显示对应的进程名称或进程号
[root@CentOS local]# netstat -plnt
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name
tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 5734/rpcbind
tcp 0 0 0.0.0.0:58864 0.0.0.0:* LISTEN 5818/rpc.mountd
#显示核心路由信息
[root@CentOS local]# netstat -r
Kernel IP routing table
Destination Gateway Genmask Flags MSS Window irtt Iface
192.168.3.0 * 255.255.255.0 U 0 0 0 eth0
#显示网络接口列表
[root@CentOS local]# netstat -i
Kernel Interface table
Iface MTU Met RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flg
50
第3章 运维必备的网络管理技能
eth0 1500 0 26233 0 0 0 27142 0 0 0 BMRU
eth0:5 1500 0 - no statistics available - BMRU
lo 16436 0 45402 0 0 0 45402 0 0 0 LRU
#综合示例，统计各个TCP连接的各个状态对应的数量
[root@CentOS local]# netstat -plnta|sed '1,2d'|awk '{print $6}'|sort|uniq -c
1 ESTABLISHED
21 LISTEN
netstat 工具是运维工程师最常用的工具之一，经常被用来查看主机网络状态、监听列表
等，因此需要掌握好此工具的使用方法。
3.2.7 探测至目的地址的路由信息 traceroute
traceroute跟踪数据包到达网络主机所经过的路由，原理是试图以最小的TTL发出探测包
来跟踪数据包到达目标主机所经过的网关，然后监听一个来自网关ICMP的应答。使用语法如
下：
traceroute [-m Max_ttl] [-n ] [-p Port] [-q Nqueries] [-r] [-s SRC_Addr]
[-t TypeOfService] [-v] [-w WaitTime] Host [PacketSize]
常用参数如表3.5所示。
表3.5 traceroute命令常用参数说明
参数 说明
-f 设置第一个检测数据包的存活数值TTL的大小
-g 设置来源路由网关，最多可设置8个
-i 使用指定的网络界面送出数据包
-I 使用ICMP回应取代UDP资料信息
-m 设置检测数据包的最大存活数值TTL的大小，默认值为30次
-n 直接使用IP地址而非主机名称。当DNS不起作用时常用到这个参数
-p 设置UDP传输协议的通信端口。默认值是33434
-r 忽略普通的路由表Routing Table，直接将数据包送到远端主机上
-s 设置本地主机送出数据包的IP地址
-t 设置检测数据包的TOS数值
-v 详细显示指令的执行过程
-w 设置等待远端主机回报的时间，默认值为3秒
-x 开启或关闭数据包的正确性检验
-q n 在每次设置生存期时，把探测包的个数设置为n，默认值为3
traceroute常用操作如【示例3-8】所示。
【示例3-8】
[root@CentOS local]# ping www.php.net
PING www.php.net (69.147.83.199) 56(84) bytes of data.
51
CentOS 7.5系统管理与运维实战
64 bytes from www.php.net (69.147.83.199): icmp_seq=1 ttl=50 time=213 ms
#显示本地主机到www.php.net所经过的路由信息
[root@CentOS local]# traceroute -n www.php.net
traceroute to www.php.net (69.147.83.199), 30 hops max, 40 byte packets
#第3跳到达深圳联通
3 120.80.198.245 (120.80.198.245) 4.722 ms 4.273 ms 1.925 ms
#第9跳到达美国
9 208.178.58.173 (208.178.58.173) 185.117 ms 64.23.107.149 (64.23.107.149)
184.838 ms 208.178.58.173 (208.178.58.173) 185.422 ms
#美国
13 98.136.16.61 (98.136.16.61) 216.602 ms 209.131.32.53 (209.131.32.53)
216.779 ms 209.131.32.55 (209.131.32.55) 214.934 ms
#第14跳到达php.net对应的主机信息
14 69.147.83.199 (69.147.83.199) 213.893 ms 213.536 ms 213.476 ms
#域名不可达，最大30跳
[root@CentOS local]# traceroute -n www.mysql.com
traceroute to www.mysql.com (137.254.60.6), 30 hops max, 40 byte packets
16 141.146.0.137 (141.146.0.137) 201.945 ms 201.372 ms 201.241 ms
17 * * *
#部分结果省略
29 * * *
30 * * *
以上示例每行记录对应一跳，每跳表示一个网关，每行有3个时间，单位是ms，如域名
不通或主机不通可根据显示的网关信息定位。星号表示 ICMP 信息没有返回，以上示例访问
www.mysql.com 时不通，数据包到达某一节点时没有返回，可以将此结果提交 IDC 运营商，
以便于解决问题。
traceroute 实际上是通过给目标机的一个非法 UDP 端口号发送一系列 UDP 数据包来工作
的。使用默认设置时，本地机给每个路由器发送3个数据包，最多可经过30个路由器。如果
已经经过了30个路由器，但还未到达目标机，那么traceroute将终止。每个数据包都对应一个
Max_ttl值，同一跳步的数据包该值一样，不同跳步的数据包的值从1开始，每经过一个跳步
值加1。当本地机发出的数据包到达路由器时，路由器就响应一个ICMPTimeExceed消息，于
是traceroute就显示出当前跳步数、路由器的IP地址或名字、3个数据包分别对应的周转时间
（以 ms 为单位）。如果本地机在指定的时间内未收到响应包，那么在数据包的周转时间栏就
显示出一个星号。当一个跳步结束时，本地机根据当前路由器的路由信息，给下一个路由器发
出3个数据包，周而复始，直到收到一个ICMPPORT_UNREACHABLE的消息，意味着已到
达目标机，或已达到指定的最大跳步数。
3.2.8 测试、登录或控制远程主机 telnet
telnet 命令通常用来远程登录。telnet 程序是基于 TELNET 协议的远程登录客户端程序。
TELNET 协议是 TCP/IP 协议族中的一员，是 Internet 远程登录服务的标准协议和主要方式，
52
第3章 运维必备的网络管理技能
为用户提供了在本地计算机上完成远程主机工作的能力。在客户端可以使用telnet在程序中输
入命令，可以在本地控制服务器。由于 telnet 采用明文传送报文，因此安全性较差。telnet 可
以确定远程服务端口的状态，以便确认服务是否正常。telnet常用方法如【示例3-9】所示。
【示例3-9】
#检查对应服务是否正常
[root@CentOS Packages]# telnet 192.168.3.100 56789