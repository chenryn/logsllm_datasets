3.2 Browser Anonymity Set
Our evaluation suggests that a large fraction of
browsers provide enough information to ﬁngerprint
In this sec-
hosts within each network domain.
tion, we examine in detail
the anonymity set of
browser ﬁngerprints, deﬁned as the set of hard-
ware IDs that share the same ﬁngerprint.
Even
though 62% of UAs map to unique hosts, popular
UA strings still have large anonymity sets,
i.e., ad-
ditional examination shows that
the most common
ﬁngerprint, Mozilla/4.0(compatible;MSIE6.
0;WindowsNT5.1;SV1), corresponds to 124,355
(4.05%) of the hardware IDs that overlap with the UA
host-tracking graph.
Figure 3 compares the size of the anonymity sets for
UA and UA+IP. We ﬁnd 98.92% of the UA+IP ﬁnger-
prints to be relatively rare, with fewer than ﬁve hardware
IDs, while this holds for only 89.69% of the UA ﬁnger-
prints.
To quantify the amount of identifying information
t
e
S
y
t
i
m
y
n
o
n
A
f
o
e
z
S
i
6
10
4
10
2
10
0
10
0
10
UA
UA and IP
2
10
4
10
6
10
Index of Fingerprints
Figure 3. The distribution of the size of
the browser anonymity sets, plotted in log(cid:173)
scale.
provided by browser ﬁngerprints, we calculate their en-
tropy. In our data, UA has an entropy of 11.59 bits, while
the entropy of UA+IP is 20.29 bits. A study performed
by Eckersley et al. [20] probed the remote client for
installed plug-ins, screen resolution, timezone, system
fonts, and user-agent strings, which altogether yielded
an entropy of 18.1 bits. While this suggests that their de-
tailed information provides more distinguishing power
than UA alone, it is interesting to observe that such in-
formation may be less distinguishing than simply com-
bining UA and IP address.
These results conﬁrm our ﬁnding that UA strings aug-
mented with IP addresses can identify hosts well. How-
ever, popular UA strings still have large anonymity sets.
Changing the default UA string to one that corresponds
to a popular browser version may hence allow a client to
become less distinguishable.
3.3 Impacts of Proxies and NATs
Among the common identiﬁers we explored, none of
them performs perfectly. Aside from their inherent am-
biguity (e.g., some UAs are more common than others,
cookies can be removed), proxies and NATs introduce
fundamental difﬁculties in tracking hosts. The ability to
detect and measure them allows us to understand pre-
cisely where such practical limitations will apply.
We ﬁrst quantify the prevalence of large proxies
and NATs that are typically conﬁgured by ISPs or en-
terprises. To do so, we examine “hosts” that corre-
spond to a large number of user login IDs or cookie
IDs. A small fraction of IP addresses in our datasets—
31,874 and 2,151 from the Webmail and Search dataset,
respectively—is each associated with more than 5,000
unique login IDs and cookie IDs. These are likely large
proxies and we ﬁlter them in our evaluation.
Next, we examine small NAT devices that are often
used by home networks. In this case, since it is rela-
tively rare for a client to be running multiple operating
systems in parallel, we leverage the coarse-grained OS
type and IP address recorded for each user login event in
the Webmail dataset. The majority (80.31%) of our lo-
gin ID ﬁngerprints are associated with only one unique
user ID. When we observe multiple OS types, all from
the same IP address, it indicates that the “host” may ac-
tually be a NAT device that masks multiple clients.
From this experiment, we ﬁnd 10.60% hosts likely to
be NATs. This number is a lower bound, since we cannot
distinguish clients that are running the same OS behind
a NAT device. Table 3 shows that while the large major-
ity of NATed hosts include multiple Microsoft Windows
OSes, hand-held devices also comprise a large fraction
(about 16%). With the increasing popularity of multiple
home devices and smart phones, we expect the percent-
age of NATs to grow further.
OS Types
Multiple Windows
Windows and Hand-held device
Windows and Mac OS/Unix
Hand-held and Mac OS/Unix
Windows, Hand-held, and Mac OS/Unix
Multiple Mac OS/Unix
Multiple Hand-held devices
NAT hosts (%)
81.32%
15.62%
2.19%
0.55%
0.31%
0.01%
0.01%
Table 3. Breakdown of the OS types found
to be associated with hosts behind NATs.
4 Application: Cookie Churn Study
As the primary method for web sites to track return-
ing users without requiring login-based authentication,
browser cookies play an important role in customizing
web services and maintaining user statistics. However,
as shown in Section 3, using cookie IDs as client ﬁn-
gerprints can be unreliable.
In particular, they have a
relatively low recall rate—32% of the hardware IDs in
our evaluation cannot be completely tracked by cookies.
A main source of the low recall rate is cookie churn,
which we deﬁne as the phenomenon of cookies appear-
ing at least once but not appearing again in subsequent
web requests received by a server (within some obser-
vation time window). For service providers, being able
to track hosts will allow them to quantify the underly-
ing causes behind the cookie-churn phenomenon.
In
this section, we measure and analyze cookie churn in
the Search dataset. (Among the datasets available to us,
it is the only one that contains cookie IDs.) By apply-
ing our host-tracking methodology, we show that some
client users may still be identiﬁed despite cookie churn.
4.1 Cookie Churn Measurement
Among cookie IDs that appear on the ﬁrst day of our
Search dataset, the rate of cookie churn, i.e., the frac-
tion of cookie IDs that never returned again within our
month-long observation, is 47.86%. On average, the
daily cookie churn rate is around 45% across month-
long sliding windows.
Furthermore, 81.98% of the new cookie IDs that are
born on the ﬁrst day of the Search dataset never returned
within the month. For all cookie IDs observed on the
ﬁrst day of the month, Figure 4 shows cumulative dis-
tributions of the date that old and new cookies appear a
second time. The churn rate of new cookies is signiﬁ-
cantly higher than that of old cookies—a difference of
more than 40%.
4.2 Possible Reasons for Churn
Clearly, cookie churn can result from users quitting
the service. As shown in Figure 4, engaged users that
access the service multiple times (with old cookies) are
more likely to return than new users.
Another reason for cookie churn is the removal of
cookies from the client browser. This removal can hap-
pen in several cases, including when users manually
clear cookies, when they set their browsers to automati-
cally clear cookies on exit, or when users switch into or
out of private browsing mode. Supported by all major
web browsers today, private browsing takes a user’s ac-
tivities off records by removing caches, history, and in
particular, cookies that are set during private mode.
To study how private browsing mode affects the
cookie events observed by web services, we examine
)
%
t
(
e
g
a
n
e
c
r
e
P
100
80
60
40
20
0
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
0
1
0
2
/
1
8
/
/
2
8
/
/
3
8
/
/
4
8
/
/
5
8
/
/
6
8
/
/
7
8
/
/
8
8
/
/
9
8
/
New Cookies
Old Cookies
0
1
0
2
/
0
1
8
/
0
1
0
2
/
1
1
8
/
0
1
0
2
/
2
1
8
/
0
1
0
2
/
3
1
8
/
0
1
0
2
/
4
1
8
/
0
1
0
2
/
5
1
8
/
0
1
0
2
/
6
1
8
/
0
1
0
2
/
7
1
8
/
0
1
0
2
/
8
1
8
/
0
1
0
2
/
9
1
8
/
0
1
0
2
/
0
2
8
/
0
1
0
2
/
1
2
8
/
0
1
0
2
/
2
2
8
/
0
1
0
2
/
3
2
8
/
0
1