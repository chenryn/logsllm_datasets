### 硬币扔出的 Hash
现在设想这样一个场景：周末公司有临时事务要加班，Alice 和 Bob商量谁去处理，但大家都不想去。于是
Bob想了一个办法，说：“我扔一个硬币，你猜是正面还是反面？如果猜对了，我就去加班。如果猜错了，嘿嘿……”。
如果 Alice 和
Bob此时是面对面在一起，那么这个策略可以说相当公平，甚至可以用更简单的办法做到，两人玩一盘石头剪子布就好了。可是如果他们是通过网络聊天在商量呢，那Alice
显然不会同意这个办法，因为她担心自己无论猜正面还是反面，Bob都会说她错了。
有没有办法在网络聊天也能做到公平扔硬币呢，有人会说，那我们给扔硬币的结果加个密吧。现在假设任意奇数都代表硬币的正面，任意偶数都代表硬币的反面。Bob随便想一个数，然后乘以另外一个数，把结果先告诉Alice，比如1234
* 531 =
622254，Bob想的是1234，然后把622254告诉Alice，并声称另一个秘密数531是密钥，由他自己保管。这样显然也不行，因为验证结果的时候，Bob可以谎报说1234才是密钥，531是结果，这样
Bob 依然立于不败之地。但是如果Bob 事先把密钥公布出来呢？这样也不行，因为 Alice知道密钥后就能直接计算出原文了，便失去了保密作用。
传统的加密方法不能公开的原因是，知道了加密方法也就知道了解密方法，只需要反过来计算就好了。那么，有没有一种加密方法，使得即使知道了加密方法，也不能恢复出原文呢？有的，只需要在加密过程中加入一些不可逆运算就行了。这次Bob
又设计了一种方案：
  1. Bob 先想一个数，并加上123456。
  2. 把结果平方，取第3至第10位，组成一个8位数。
  3. 再用这个数除以456789求余数，把这个结果告诉 Alice。
  4. Alice 猜测 Bob 想的是奇数还是偶数。
  5. Bob 告诉 Alice 原始值，Alice 验算确认。
假设Bob想的依然是1234，按照上面的过程依次得到：
  1. 1234 + 123456 = 124690
  2. 124690 * 124690 = 15547596100
  3. 54759610 mod 456789 = 401719
Alice 拿到的结果是401719，既可以验证 Bob 有没有撒谎，同时 Alice又很难根据401719算回1234。
但这样也不能100%保证 Bob不作弊，如果Bob想作弊，他就必须事先找到一奇一偶两个数，按照上面的运算能得到一样的结果。这个难度取决于上面算法的难度。
在密码学中把这种会丢掉一部分信息的加密叫做“单向加密”，也叫做哈希（Hash）算法。
一个可靠的哈希算法至少需要满足下面几个条件：
  1. 对于给定的数据 M，很容易算出哈希值 X = F(M)。
  2. 根据 X，很难算出 M。
  3. 很难找到 M 和 N，令 F(M) = F(N)。
真实世界的哈希算法比上面的过程要复杂得多，但原理是类似的。而且即使对于很长一段数据，仅仅改变一个字母，也会造成2次哈希结果的巨大差异。被认为安全且在互联网中被广泛使用的哈希算法包括MD5、SHA-1、SHA-256
、国密 SM3 等。比如“1234”使用 MD5算法计算的结果是“81DC9BDB52D04DC20036DBD8313ED055”。
这种单向加密算法，并不能用来进行普通的信息传输，更多的是用来进行数据的完整性验证。
### 历久弥新的对称加密
对称加密就是大众心里认为的那种加密，使用密码 A 加密，同样使用密码 A解密。这其实是最符合直觉的一件事情。
  * 比如我向左移动了3米，要回到原点，那么就再向右移动3米就好了。
  * 比如做了个乘法，要还原数字，就做一次同样的除法就好。
传统的密码学其实使用的都是对称加密，无论是移位、变换、混淆、扩散，本质上都可以通过逆运算恢复原始信息。
所以，这块不详细解说，只需要知道这叫做对称加密就好。常用的对称加密算法有DES、3DES、AES、国密SM4，算法细节本文不细聊。对称加密具有优秀的性能和安全性，关键就在于如何商定密钥，此时就需要下面的非对称加密了。
### 数学魔术和非对称加密
来看真正要进行秘密信息传输的情况。
假设 Alice 和 Bob要通过互联网进行一份绝密情报的传输，如何阻止第三方在网络上截获信息？
如果用对称加密的思路，可能的步骤是使用压缩工具对文件进行加密压缩，然后通过Email把加密过的文件发过去，为了更安全或许还会另外通过发短信或者打电话把解压密码告诉对方。但是作为绝密情报传输，面对国家机器的力量，上面的过程依然可能泄密。如果想办法把密码加密后再发过去，但是给密码加密的方式又该如何确定呢？如果Alice
和 Bob事先认识，或许可以见面约定一个生日加上手机号作为密码，但更多的情形下，双方并没有可以利用的公共秘密。
对称加密世界里这是个看似死循环的无解问题。这里我们有2种思路来尝试解决：
  * 设计一个秘密的加密算法，即使对方拿到密码也没有办法解密。
  * 设计一种神奇的加密系统，可以让加密和解密用不同的密码。这样 Bob可以大大方方的把加密密钥告诉 Alice，Alice 加密完发给 Bob  
就行了，完全不怕监听。
秘密算法显然是不考虑的，密码学有一个公认的原则———加密的安全性永远不能建立在算法的保密上。
回到我们设想的神奇加密算法上，似乎这是一个完美的方案，但是这样的技术存在吗？听上去似乎并不可能，直觉上知道了加密方法一定就知道解密方法了，只需要反过来计算就可以了。加密方法和解密方法是否可能不对称？
话都说到这份上了，当然是必须可能！其实这门技术在小学就学过。
来看一个小时候《趣味数学》这类书里的数学小魔术：
让对方任意想一个3位数，并把这个数和91相乘，然后告诉我积的最后三位数，我就可以猜出对方想的是什么数字！
  * 比如 A 想的是123，计算出123 * 91 = 11193，并把结果的末三位193告诉我。
  * 我只需要把193乘以11，乘积的末三位就是对方刚开始想的数了。可以验证一下，193 * 11 = 2123。
其实原理很简单，91乘以11等于1001，而任何一个三位数乘以1001后，末三位显然都不变（例如123乘以1001就等于123123）。
知道原理后，我们可以构造一个定义域和值域更大的加密解密系统。
  * 任意一个数乘以400000001后，末8位都不变，而400000001 = 19801 * 20201，于是你来乘以19801，我来乘以20201，又一个加密解密不对称的系统就构造好了。
  * 甚至可以构造得更大一些：4000000000000000000000000000001 = 1199481995446957 * 3334772856269093，这样我们就成功构造了一个30位的加密系统。
这是一件非常
cooooooool的事情，任何人都可以按照我公布的方法加密一个数，但是只有我才知道怎么把所得的密文变回去。其安全性就建立在算乘积非常容易，但是要把4000000000000000000000000000001分解成后面两个数相乘，在没有计算机的时代几乎不可能成功！
但如果仅仅按照上面的思路，如果对方知道原理，非常很容易穷举出400000001这个目标值。要解决这个问题，真实世界就不是使用乘法了，比如RSA
算法使用的是指数和取模运算，但本质上就是上面这套思想。
在非对称加密的基础上，就能衍生出数字证书、数字签名、HTTPS等等互联网底层安全机制。常见的非对称加密算法有 RSA、ECC 、国密 SM2 等。
## 真实世界
在真实场景中，会将三板斧组合使用来构造协议，比如“Hash +
对称加密”可以组合成“消息认证码（MAC）”机制；而非对称加密反向使用，用私钥加密信息向外发布，所有人可用公钥解密，则可以起到“数字签名”的效果。
回到前面设想的场景，Alice 和 Bob进行绝密通信时，应该如何构造协议呢？大概会是这样：
  1. Bob 生成一对非对称密钥，分别为公钥 A 和私钥 B，A/B互相可解密对方加密的数据。
  2. Bob 将公钥 A 告诉 Alice。
  3. Alice 生成一个对称密钥 C，并加密情报得到密文D（性能原因，一般不用非对称算法加密大段信息）。
  4. Alice 用公钥 A 加密 C 得到密文 E，并计算情报的 Hash 值 F。
  5. Alice 将 D、E、F 全部发给 Bob。
  6. Bob 使用私钥 B 解密 E 得到密钥 C，并用 C 解密密文 D，再计算解密结果的Hash 是否等于 F。
当然上面还有一些问题要解决，比如如何保证 Bob 告诉 Alice 的公钥
A没有在传输过程中被篡改。可见，在拥有安全算法之后，密码学的协议研究也是至关重要的。
## 写在最后
从密码学退回符号学领域，其实符号的应用远超人们的注意，除了文字本身也是符号外，更广义的符号如：从QQ表情到电路图，从十字架到八卦图，从比心动作到金字塔造型，从乐谱到天干地支，从表情包大战到道士抓鬼画“符”……人类发明了太多符号用来传递信息。
很多学问的本质其实就是从符号还原出原始信息，比如把乐谱演奏成音乐、读诗歌和作者共鸣、禅宗的拈花微笑、斗图时的会心一击，无不充满意趣。《庄子·知北游》言：“天地有大美而不言”，此等无法描绘无法言说之信息，却让人有醍醐灌顶般的美妙，大概就是通信的巅峰了。
密码学其实只是广义通信的一个极小分支，并且里面还有太多基础数学、算法、协议场景，需要进行专门的学习。本篇只讲这么多，只要理解了密码学三板斧，就有更多应用就等着我们研究了，下期请关注密码学界近年的当红辣子鸡———比特币。
### 腾讯安全云鼎实验室
关注云主机与云内流量的安全研究和安全运营。利用机器学习与大数据技术实时监控并分析各类风险信息，帮助客户抵御高级可持续攻击；联合腾讯所有安全实验室进行安全漏洞的研究，确保云计算平台整体的安全性。相关能力通过腾讯云开放出来，为用户提供黑客入侵检测和漏洞风险预警等服务，帮助企业解决服务器安全问题。