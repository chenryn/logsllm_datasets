    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果 `--size`{.literal} 值太小，安装会失败。将 `--size`{.literal}
    值设置为您需要的最小空间量。
    :::
-   `--grow`{.literal} -
    告诉分区使用所有可用空间（若有），或使用设置的最大值（如果指定了最大值）。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您在交换分区上使用 `--grow=`{.literal} 但没有设置
    `--maxsize=`{.literal}，Anaconda 会限制 swap
    分区的最大大小。对于物理内存小于 2 GiB
    的系统，强制的限制为物理内存的两倍。对于超过 2 GiB
    的系统，强制限制为物理内存大小加上 2GiB。
    :::
-   `--maxsize=`{.literal} - 分区设置为增长时的最大分区大小（以 MiB
    为单位）。在这里指定一个整数值，如 `500`{.literal}
    （不要包含单位）。
-   `--noformat`{.literal} - 指定不要被格式化的分区，以便与
    `--onpart`{.literal} 命令一起使用。
-   `--onpart=`{.literal} 或 `--usepart=`{.literal} -
    指定要放置分区的设备。使用现有的空白设备并将其格式化到新指定类型。例如：
    ``` screen
    partition /home --onpart=hda1
    ```
    将 `/home`{.literal} 放置到 `/dev/hda1`{.literal}。
    这些选项还可以在逻辑卷中添加分区。例如：
    ``` screen
    partition pv.1 --onpart=hda2
    ```
    设备必须已在系统上存在；`--onpart`{.literal} 选项不会创建它。
    在这种情况下， Anaconda
    会在不创建分区表的情况下格式化并使用驱动器。但请注意，使用这种方式格式化的设备中不支持
    GRUB2 安装，且必须将其放在有分区表的驱动器中。
    ``` screen
    partition pv.1 --onpart=hdb
    ```
-   `--ondisk=`{.literal} 或 `--ondrive=`{.literal} -
    在现有磁盘中创建分区（由 `part`{.literal}
    命令指定）。这个命令总是创建一个分区。强制在特定磁盘中创建分区。例如：
    `--ondisk=sdb`{.literal} 将分区放在系统的第二个 SCSI 磁盘中。
    要指定不使用逻辑卷管理（LVM）的多路径设备，使用格式
    `disk/by-id/dm-uuid-mpath-WWID`{.literal}，其中 [*WWID*]{.emphasis}
    是该设备的通用识别符。例如，要指定 WWID 为
    `2416CD96995134CA5D787F00A5AA11017`{.literal} 的磁盘，请使用：
    ``` screen
    part / --fstype=xfs --grow --asprimary --size=8192 --ondisk=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    切勿按设备名称（如 `mpatha`{.literal}
    ）指定多路径设备。这样的设备名称并不是特定磁盘特有的。在安装过程中名为
    `/dev/mpatha`{.literal}
    的磁盘可能不是您期望的磁盘。因此，`part`{.literal}
    命令可能会以错误的磁盘为目标。
    :::
-   `--asprimary`{.literal} - 强制将该分区分配为 [*primary*]{.emphasis}
    分区。如果无法将该分区作为主分区分配（通常是因为已经分配了太多的主分区），则该分区进程会失败。只有使用主引导记录（MBR）时这个选项才有意义。
-   `--fsprofile=`{.literal} -
    指定要传递给在这个分区上创建文件系统的程序的使用类型。使用类型定义了创建文件系统时使用的各种微调参数。要使用这个选项，文件系统必须支持使用类型，且必须有一个配置文件来列出有效类型。对于
    `ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}，此配置文件为
    `/etc/mke2fs.conf`{.literal}。
-   `--mkfsoptions=`{.literal} -
    指定要传递给在此分区上创建文件系统的程序的其他参数。这与
    `--fsprofile`{.literal}
    类似，但适用于所有文件系统，而不仅仅是支持配置集概念的文件系统。没有对参数列表进行任何操作，因此必须以可直接传递给
    mkfs
    程序的格式提供。这意味着，根据具体文件系统，多个选项应该用逗号分开，或使用双引号分开。
-   `--fstype=`{.literal} - 为分区设置文件系统类型。有效值为
    `xfs`{.literal}、`ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}、`swap`{.literal}、`vfat`{.literal}、`efi`{.literal}
    和 `biosboot`{.literal}。
-   `--fsoptions`{.literal} -
    指定在挂载文件系统时要使用的自由格式选项字符串。该字符串将复制到安装的系统的
    `/etc/fstab`{.literal} 文件中，并且应用引号括起来。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在 EFI 系统分区(`/boot/efi`{.literal})中，anaconda
    硬编码值，并忽略用户指定的 `--fsoptions`{.literal} 值。
    :::
-   `--label=`{.literal} - 为单个分区分配标签。
-   `--recommended`{.literal} - 自动确定分区的大小。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    这个选项只能用于生成文件系统（如 `/boot`{.literal} 分区和
    `交换空间`{.literal}）的分区。它不能被用来创建 LVM 物理卷或 RAID
    成员。
    :::
-   `--onbiosdisk`{.literal} - 强制 BIOS 发现的特定磁盘上创建的分区。
-   `--encrypted`{.literal} - 指定该分区应该用 LUKS 加密，使用
    `--passphrase=`{.literal}
    选项中提供的密码短语。如果您没有指定密码短语，Anaconda 将使用
    `autopart --passphrase`{.literal}
    命令设定的默认系统级密码，或者停止安装并在未设定默认密码短语时提示您输入密码短语。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在加密一个或多个分区时， Anaconda 会尝试收集 256
    字节熵，以保证安全加密分区。收集熵可能需要一些时间 -
    无论是否有收集到足够的熵，该过程将在最多 10 分钟后停止。
    与安装系统互动（通过键盘输入或移动鼠标）可加速此进程。如果要在虚拟机中安装，您还可以将
    `virtio-rng`{.literal} 设备（虚拟随机数生成器）附加到客户机。
    :::
-   `--LUKS-version=LUKS_VERSION`{.literal} - 指定应该使用哪个版本的
    LUKS 格式来加密文件系统。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义。
-   `--passphrase=`{.literal} -
    指定在加密此分区时要使用的密码短语。这个选项必须与
    `--encrypted`{.literal} 选项一同使用；其本身无效。
-   `--cipher=`{.literal} - 指定在 Anaconda 默认
    `aes-xts-plain64`{.literal} 时要使用的加密类型。这个选项必须与
    `--encrypted`{.literal}
    选项一同使用；其本身无效。[安全强化](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/security_hardening/){.link}
    文档中列出了可用的加密类型，但红帽强烈建议您使用
    `aes-xts-plain64`{.literal} 或 `aes-cbc-essiv:sha256`{.literal}。
-   `--escrowcert=URL_of_X.509_certificate`{.literal} -
    将所有加密分区的数据加密密钥保存在 `/root`{.literal}
    的文件中，使用来自 [*URL_of_X.509_certificate*]{.emphasis} 指定的
    URL 的 X.509
    证书进行加密。每个加密分区的密钥都作为单独的文件保存。只有在指定了
    `--encrypted`{.literal} 时这个选项才有意义。
-   `--backuppassphrase`{.literal} -
    为每个加密分区添加随机生成的密码短语。将这些密码短语存储在
    `/root`{.literal} 中的单独文件中，使用通过 `--escrowcert`{.literal}
    指定的 X.509 证书进行加密。只有在指定了 `--escrowcert`{.literal}
    时这个选项才有意义。
-   `--pbkdf=PBKDF`{.literal} - 为 LUKS keylot 设置
    PBKDF（Password-Based Key Derivation Function）算法。另请参阅 man
    page [*cryptsetup(8)*]{.emphasis}。只有在指定了
    `--encrypted`{.literal} 时这个选项才有意义。
-   `--PBKDF-memory=PBKDF_MEMORY`{.literal} - 设置 PBKDF
    的内存成本。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis}。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义。
-   `--PBKDF-time=PBKDF_TIME`{.literal} - 设置 PBKDF
    密码处理所花费的毫秒数。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis} 中的
    `--iter-time`{.literal}。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义，并且与 `--pbkdf-iterations`{.literal} 相互排斥。
-   `--PBKDF-iterations=PBKDF_ITERATIONS`{.literal} -
    设定直接迭代数量并避免 PBKDF 基准测试。另请参阅 man page
    [*cryptsetup(8)*]{.emphasis} 中的
    `--pbkdf-force-iterations`{.literal}。只有在指定了
    `--encrypted`{.literal} 时这个选项才有意义，并且与
    `--pbkdf-time`{.literal} 相互排斥。
-   `--resize=`{.literal} - 调整现有分区的大小。使用这个选项时，使用
    `--size=`{.literal} 选项指定目标的大小（单位 MiB），使用
    `--onpart=`{.literal} 指定目标分区。
:::
::: itemizedlist
**备注**
-   `part`{.literal} 命令不是强制的，但您必须在 Kickstart 脚本中包含
    `part`{.literal}、`autopart`{.literal} 或 `mount`{.literal}。
-   在 Red Hat Enterprise Linux 8 中已弃用 `--active`{.literal} 选项。
-   如果因为某种原因分区失败，虚拟控制台 3 中会显示诊断信息。
-   除非使用 `--noformat`{.literal} 和
    `--onpart`{.literal}，否则所有创建的分区都会格式化为安装过程的一部分。
-   `sdX`{.literal} （或
    `/dev/sdX`{.literal}）格式的设备名称在重启后无法保证保持一致，这可能会使某些
    Kickstart
    命令的使用变得复杂。当某个命令调用设备节点名称时，您可以使用
    `/dev/disk`{.literal} 中的任何项目。例如，改为：
    ``` screen
    part / --fstype=xfs --onpart=sda1
    ```
    您可以使用类似以下条目之一：
    ``` screen
    part / --fstype=xfs --onpart=/dev/disk/by-path/pci-0000:00:05.0-scsi-0:0:0:0-part1
    ```
    ``` screen
    part / --fstype=xfs --onpart=/dev/disk/by-id/ata-ST3160815AS_6RA0C882-part1
    ```
    这样命令总是以同一存储设备为目标。这在大型存储环境中特别有用。相关详情，请参阅[*管理存储设备*]{.emphasis}文档中的[持久性名称属性概述](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/assembly_overview-of-persistent-naming-attributes_managing-storage-devices){.link}部分。
-   如果您丢失了 LUKS
    密码短语，那么就完全无法访问所有加密的分区及其数据。丢失的密码短语是无法找回的。但是，您可以使用
    `--escrowcert`{.literal} 保存加密密码短语，并使用
    `--backuppassphrase`{.literal} 选项创建加密密码短语备份。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#raid_kickstart-commands-for-handling-storage}raid {.title}
:::
`raid`{.literal} Kickstart 命令是可选的。它组成一个软件 RAID 设备。
::: title
**Syntax**
:::
``` screen
raid mntpoint --level=level --device=device-name partitions*
```
::: itemizedlist
**选项**
-   [*mntpoint*]{.emphasis} - 挂载 RAID 文件系统的位置。如果是
    `/`{.literal}，RAID 级别必须是 1，除非引导分区 (`/boot`{.literal})
    存在。如果引导分区存在，`/boot`{.literal} 分区必须是级别 1，root
    (`/`{.literal})
    分区可以是任意可用的类型。[*partitions\**]{.emphasis}
    （代表多个分区可以被列举）列出了要添加到 RAID 阵列的 RAID 标记。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    ::: itemizedlist
    -   在 IBM Power 系统中，如果一个 RAID
        设备已经准备好，且在安装过程中没有重新格式化，请确定 RAID
        元数据版本是 `0.90`{.literal} 您要将 RAID 设备 `/boot`{.literal}
        和 `PReP`{.literal} 分区放在一起。默认 Red Hat Enterprise Linux
        7 `mdadm`{.literal} 元数据版本不支持引导设备。
    -   PowerNV 系统上不需要 `PReP`{.literal} 引导分区。
    :::
    :::
-   `--level=`{.literal} - 使用的 RAID 级别（0、1、4、5、6 或 10）。
-   `--device=`{.literal} - 要使用的 RAID 设备的名称 - 例如
    `--device=root`{.literal}。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    不要使用 `md0`{.literal} 格式的 `mdraid`{.literal} 名称 -
    无法保证这些名称具有持久性。相反，应使用有意义的名称，如
    `root`{.literal} 或 `swap`{.literal}。使用有含义的名称可生成一个从
    `/dev/md/name`{.literal} 到 `/dev/mdX`{.literal}
    节点分配到的阵列的符号链接。
    如果您有一个无法为其分配名称的旧阵列（v0.90
    元数据），您可以使用文件系统标签或者
    UUID（例如：`--device=rhel7-root --label=rhel7-root`{.literal}）指定该阵列。
    :::
-   `--CHUNKSIZE=`{.literal} - 以 KiB 为单位设置 RAID
    存储的块大小。在某些情况下，使用与默认块不同的块大小
    (`512 Kib`{.literal}) 可以提高 RAID 的性能。
-   `--spares=`{.literal} - 指定分配给 RAID
    阵列的备用驱动器数量。可使用备用驱动器在驱动器失败时重建阵列。
-   `--fsprofile=`{.literal} -
    指定要传递给在这个分区上创建文件系统的程序的使用类型。使用类型定义了创建文件系统时使用的各种微调参数。要使用这个选项，文件系统必须支持使用类型，且必须有一个配置文件来列出有效类型。对于
    ext2、ext3 和 ext4，此配置文件为 `/etc/mke2fs.conf`{.literal}。
-   `--fstype=`{.literal} - 为 RAID 阵列设置文件系统类型。有效值为
    `xfs`{.literal}、`ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}、`swap`{.literal}
    和 `vfat`{.literal}。
-   `--fsoptions=`{.literal} -
    指定在挂载文件系统时要使用的自由格式选项字符串。该字符串将复制到安装的系统的
    `/etc/fstab`{.literal} 文件中，并且应用引号括起来。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在 EFI 系统分区(`/boot/efi`{.literal})中，anaconda
    硬编码值，并忽略用户指定的 `--fsoptions`{.literal} 值。
    :::
-   `--mkfsoptions=`{.literal} -
    指定要传递给在此分区上创建文件系统的程序的其他参数。没有对参数列表进行任何操作，因此必须以可直接传递给
    mkfs
    程序的格式提供。这意味着，根据具体文件系统，多个选项应该用逗号分开，或使用双引号分开。
-   `--label=`{.literal} -
    指定要生成的文件系统的标签。如果给定标签已被另一个文件系统使用，则会创建一个新标签。
-   `--noformat`{.literal} - 使用现有的 RAID 设备，且不要格式化 RAID
    阵列。
-   `--use existing`{.literal} - 使用现有的 RAID 设备并重新格式化它。
-   `--encrypted`{.literal} - 指定该 RAID 设备应该用 LUKS 加密，使用
    `--passphrase=`{.literal}
    选项中提供的密码短语。如果您没有指定密码短语，Anaconda 将使用
    `autopart --passphrase`{.literal}
    命令设定的默认系统级密码，或者停止安装并在未设定默认密码短语时提示您输入密码短语。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在加密一个或多个分区时， Anaconda 会尝试收集 256
    字节熵，以保证安全加密分区。收集熵可能需要一些时间 -
    无论是否有收集到足够的熵，该过程将在最多 10 分钟后停止。
    与安装系统互动（通过键盘输入或移动鼠标）可加速此进程。如果要在虚拟机中安装，您还可以将
    `virtio-rng`{.literal} 设备（虚拟随机数生成器）附加到客户机。
    :::
-   `--LUKS-version=LUKS_VERSION`{.literal} - 指定应该使用哪个版本的
    LUKS 格式来加密文件系统。只有在指定了 `--encrypted`{.literal}
    时这个选项才有意义。
-   `--cipher=`{.literal} - 指定在 Anaconda 默认
    `aes-xts-plain64`{.literal} 时要使用的加密类型。这个选项必须与
    `--encrypted`{.literal}
    选项一同使用；其本身无效。[安全强化](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/security_hardening/){.link}
    文档中列出了可用的加密类型，但红帽强烈建议您使用
    `aes-xts-plain64`{.literal} 或 `aes-cbc-essiv:sha256`{.literal}。
-   `--passphrase=`{.literal} - 指定加密此 RAID
    设备时使用的密码短语。这个选项必须与 `--encrypted`{.literal}