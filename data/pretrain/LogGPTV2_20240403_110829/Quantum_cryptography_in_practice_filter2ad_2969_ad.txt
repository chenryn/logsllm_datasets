number of sets of bits whose parities have been disclosed. The 
fourth—the non-randomness measure—is only a placeholder 
at the moment, until randomness testing is put into the system. 
We  assume  that  this  testing  will  produce  an  measure  in  the 
form of a number of bits by which to shorten the string. 
Information from transparent eavesdropping is not uniformly 
treated  in  the  QKD  community.  This  category  includes  all 
eavesdropping that doesn’t cause errors, which was originally 
thought to include only beamsplitting attacks on multi-photon 
pulses. It is now becoming clear that there are more general 
attacks of the same ilk. For instance, Brassard et al. [13] have 
pointed  out  that  all  weak  coherent  systems  are  particularly 
vulnerable  to  so-called  “Positive  Operator  Valued  Measure” 
attacks.  The  amount  of 
leakage  can  be 
proportional to the number of transmitted bits times the multi-
photon probability, rather than the number of bits received by 
Bob. With an entangled-photon link, by contrast, the amount 
of  information  Eve  may  obtain  is  only  proportional  to  the 
number of received bits times the multi-photon probability.  
An unresolved issue is the amount of information Eve obtains 
due  to  non-transparent  eavesdropping.  Following  Slutsky  et 
al.  [21],  we  call  these  defense  functions.  Several  defense 
functions  have  been  published  for  quantum  cryptographic 
systems. Two of the best known are by Bennett, et al. [1]  and 
Slutsky et al [21]; see Appendix for details. Neither appears to 
be completely accurate—Bennett’s estimate does not take into 
account all the information Eve can get from indirect attacks 
that  give  an  error  rate  less  than  25%,  and  while  Slutsky’s 
estimate  may  be  asymptotically  correct, 
is  overly 
conservative for finite-length blocks. 
Because we expect to refine entropy estimates in future, and 
perform  comparisons  of  different  systems  under 
like 
assumptions,  we  provide  a  choice  of  defense  function.  At 
present, we support both Bennett and Slutsky. Both estimates 
include a margin for certainty based on the standard deviation. 
In Bennett’s estimate, this is 5 standard deviations, including 
the  standard  deviation  of  the  multi-photon  probability.  In 
it 
attack,  but  doesn’t 
Slutsky’s case it is parameterizable in terms of probability of a 
successful 
include  multi-photon 
probabilities.  For  consistency,  we  separate  out  the  standard 
deviation of each term and combine them at the end, times a 
confidence parameter c (so a parameter c = 5 mean 5 standard 
deviations, or about 10–6 chance of successful eavesdropping). 
7.  IPSEC EXTENSIONS 
Once  “finished”  quantum  cryptographic  key  material  is 
available,  it  can  be  employed  as  keys  for  one  or  more 
applications. Our first use of such key material is as standard 
cryptographic keys for IPsec-based Virtual Private Networks. 
We  have  accordingly  extended  both  the  IPsec  traffic 
processing  path  and  its  key  agreement  protocol  (IKE)  to 
employ key material obtained by quantum cryptography. 
Because  new  key  material  is  constantly  streaming  into  both 
Alice  and  Bob,  they  can  both  update  the  keys  used  in  their 
cryptographic algorithms more or less continually. At present 
we  use  these  keys  as  input  to  the  IPsec  Phase  2  hash,  and 
update the resultant AES keys about once a minute. 
IPsec 
secure 
for 
communications  within  the  Internet  Protocol  suite.  This 
framework  is  defined  by  a  standards-track  document  within 
the  Internet  Engineering  Task  Force  (IETF),  namely  RFC 
2401, Security Architecture for the Internet Protocol. One of 
its  components,  the  Internet  Key  Exchange  (IKE)  protocol, 
permits two endpoints to agree  first on which cryptographic 
protocols  and  algorithms  they  wish  to  employ  for  a  given 
security  association,  and  second  on  the  keys  they  use  to 
encrypt and/or authenticate subsequent message traffic within 
that security association. IKE is defined by its own standards-
track  document  within  the  IETF,    RFC  2409,  The  Internet 
Key Exchange (IKE). 
Although  IKE  is  a  relatively  complicated  protocol,  its  basic 
concepts  are  straightforward.  Fig.  11  depicts  the  most 
important  elements  involved  in  an  ongoing  relationship 
between  two  IKE  peers.  This  illustration  is  intended  to  be 
high-level and schematic rather than a detailed depiction of an 
actual software architecture. 
architectural 
framework 
an 
is 
VPN Gateway (Entry)
Internet
VPN Gateway (Exit)
IKE
Daemon
Phase 1 SA
Security Association
for Control Traffic
IKE
Daemon
Security Policy
Database (SPD)
Security Association
Database (SAD)
Pattern Matching
Key Material
Security Association
Database (SAD)
Security Policy
Database (SPD)
Key Material
Security
Associations
for Message Traffic
IP
Packets
IP
Packet
Filter
Crypto(s)
Phase 2 SAs
Crypto(s)
IP
Packets
Figure 10. Simplified schematic of the IKE / IPsec architecture for Virtual Private Networks. 
IKE
IKE and IPsec
IKE and IPsec
QKD Protocols
QKD Protocols
Authentication
Privacy Amplification
Error Correction
Sifting
VPN / OPC Interface
Authentication
Privacy Amplification
Error Correction
Sifting
VPN / OPC Interface
IKE
SPD
SAD
IP
SPD
SAD
IP
Ethernet
Device
Driver
Ethernet
Device
Driver
Ethernet
Device
Driver
Ethernet
Device
Driver
Ethernet
Device
Driver
Ethernet
Device
Driver
Traffic
Traffic
in the Clear
in the Clear
VPN / OPC Interface
Optical
Process Control
Source Suite
VPN Tunnel
VPN Tunnel
QKD
QKD
Photons
Photons
VPN / OPC Interface
Optical
Process Control
Detector Suite
Create Key
Use Key
Figure 11. Our architecture for Virtual Private Networks based on quantum cryptography. 
Every  security  association  has  a  maximum  lifetime  which 
governs how long the key material for that association can be 
used. This lifetime can be expressed either in time (seconds) 
or  in  data  encrypted  (kilobytes)  and  is  configured  via  the 
Security  Policy  Database  (SPD)  entry  for  a  given  security 
association.  Every  time  the  lifetime  expires,  a  new  security 
association must be negotiated and it will bring with it fresh 
key  material.  This  is  sometimes  termed  “key  rollover,” 
because  it  replaces  an  older  key  by  a  newer  one  while  still 
protecting the same underlying traffic flow. 
The  key  size  needed  for  an  encryption  or  hash  algorithm 
depends  on  the  specific  algorithm  being  employed.  Some 
algorithms  always  use  the  same  key  size.  For  others,  which 
can accept a range of key sizes, the Security Policy Database 
(SPD) must list the actual key size that should be employed 
for a given SA. 
Our first implementation runs in NetBSD with the ‘raccoon’ 
IKE daemon. We have modified both the kernel and the IKE 
daemon  to  introduce  QKD  extensions.  (The  QKD  protocol 
engine also runs on the same NetBSD platform.) 
Our  extensions  to  date  fall  into  two  basic  categories:  those 
that use QKD techniques for agreement on secret keys that are 
then  employed  as  seeds  for  conventional  symmetric  ciphers 
(e.g. AES and 3DES) with continual and automatic reseeding 
by fresh QKD bits, and those that use a sequence of QKD bits 
as a one-time pad or Vernam cipher for the message traffic. 
In the rapid-reseeding extension, we have included distilled 
QKD bits into the IKE Phase 2 hash, so that keys protecting 
IPsec  Security  Associations  (SAs)  are  derived  from  QKD. 
Fig. 12 shows the very first time this extension worked with 
real QKD bits, i.e., the first time to our knowledge that a VPN 
was  created 
traffic  with  quantum 
cryptography. 
In the one-time pad extension, we have introduced one-time 
pad mechanisms into IKE and IPsec traffic processing, with 
all the adjutant changes to protocols and algorithms required, 
that  protected 
its 
and  the  necessary  linkages  into  the  secret  bits  obtained  via 
QKD. 
Ancillary changes include policy mechanisms to specify when 
either  of  these  extensions  should  be  used,  on  a  per-tunnel 
basis,  and  negotiation  mechanisms  to  agree  on  which  QKD 
bits will be used. Thus our implementation currently supports 
multiple VPNs per cryptographic gateway, each with its own 
set  of  cryptographic  algorithms,  keys,  rekey  rates,  and  so 
forth. Some  may use  conventional cryptography (e.g.  AES), 
while  others  employ  one-time  pads,  depending  on  how 
sensitive traffic is within a given VPN. 
Use of IKE for quantum cryptography calls special attention 
to  a  few  rarely-exercised  parts  of  the  IKE  design  that  may 
have some impact on our overall system design. 
The  first  such  aspect  concerns  timeouts,  in  particular,  the 
maximal  amount  of  time  that  can  elapse  during  an  IKE 
negotiation.  Such  values  are  often  set  to  10s  of  seconds  for 
Phase  1  negotiation,  and  less  than  10  seconds  for  Phase  2. 
These values may be too small for systems employing QKD 
since  it  may  take  a  while  to  accumulate  enough  bits  for  a 
successful  negotiation.  In  addition,  of  course,  this  narrow 
window  makes  Eve’s  denial-of-service  attacks  somewhat 
easier  since  she  must  block  IKE  messages  during  only  a 
relatively  short  time  in  order  to  bring  down  the  security 
association(s). 
The  second  concerns  what  IKE  does  when  Alice  and  Bob 
believe they possess secret bits in common but in fact these 
two  sets  of  bits  are  not  identical.  This  may  well  happen  in 
quantum  cryptography,  since  noise  on  the  single-photon 
channel can only be detected and corrected probabilistically. 
As it happens, IKE has no mechanisms for noticing or dealing 
with  such  cases.  The  result  appears  to  be  that  all  security 
associations that employ key bits derived from this corrupted 
information will fail to properly encrypt / decrypt traffic. This 
situation  will  apparently  continue  until 
the  security 
association  is  renewed,  i.e.,  rolls  over  to  a  new  security 
association.  This  aspect  of  IKE  provides  some  pressure  for 
Dec  5 12:53:32 bob-gw racoon: INFO: isakmp.c:1046:isakmp_ph2begin_r(): respond new phase 2 negotiation: 192.1.99.35[0]192.1.99.34[0] 
Dec  5 12:53:32 bob-gw racoon: INFO: proposal.c:1023:set_proposal_from_policy(): RESPONDER setting QPFS encmodesv 1 
Dec  5 12:53:32 bob-gw racoon: INFO: bbn-qkd-qpd.c:1047:qke_create_reply(): reply 1 Qblocks 1024 bits 1024.000000 entropy (offer is 1 Qblocks) 
Dec  5 12:53:32 bob-gw racoon: INFO: oakley.c:473:oakley_compute_keymat_x(): KEYMAT using 128 bytes QBITS 
Dec  5 12:53:32 bob-gw racoon: INFO: oakley.c:473:oakley_compute_keymat_x(): KEYMAT using 128 bytes QBITS 
Dec  5 12:53:32 bob-gw racoon: INFO: pfkey.c:1107:pk_recvupdate(): IPsec-SA established: ESP/Tunnel 192.1.99.34->192.1.99.35 spi=163084584(0x9b87928) 
Dec  5 12:53:32 bob-gw racoon: INFO: pfkey.c:1319:pk_recvadd(): IPsec-SA established: ESP/Tunnel 192.1.99.35->192.1.99.34 spi=136597565(0x824503d) 
Dec  5 12:53:43 bob-gw racoon: INFO: pfkey.c:1365:pk_recvexpire(): IPsec-SA expired: AH/Transport 192.1.99.35->192.1.99.36 spi=30999473(0x1d903b1) 
Dec  5 12:53:43 bob-gw racoon: INFO: isakmp.c:939:isakmp_ph2begin_i(): initiate new phase 2 negotiation: 192.1.99.35[0]192.1.99.36[0] 
Figure 12. Extract from the first IKE transaction setting up a VPN protected by quantum cryptography. Traffic flowed a few moments later. 
adjusting the QKD  error correction protocols towards  a low 
residual bit error rate. 
Finally we note that our QKD work is not closely tied to IKE 
itself. It is readily portable to IKEv2, JFK, or indeed upper-
layer protocols such as SSL in short order. 
8.  PLANS FOR THE NEXT STEPS 
We are now starting to build multiple QKD links woven into 
an overall QKD network that connects its QKD endpoints via 
a mesh of QKD relays or routers. When a given point-to-point 
QKD link within the relay mesh fails – e.g. by fiber cut or too 
much  eavesdropping  or  noise  –  that  link  is  abandoned  and 
another  used  instead.  This  emerging  DARPA  Quantum 
Network can be engineered to be resilient even in the face of 
active eavesdropping or other denial-of-service attacks. 
Such  QKD  networks  can  be  built  in  several  ways.  In  one 
variant, the QKD relays may only transport keying material. 
After relays have established pairwise agreed-to keys along an 
end-to-end point, e.g., between the two QKD endpoints, they 
may employ these key pairs to securely transport a key “hop 
by  hop”  from  one  endpoint  to  the  other,  being  onetime-pad 
encrypted and decrypted with each pairwise key as it proceeds 
from one relay to the next. In this approach, the end-to-end 
key  will  appear  in  the  clear  within  the  relays’  memories 
proper, but will always be encrypted  when passing  across  a 
link. Such a design may be termed a “key transport network.” 
Alternatively, QKD relays may transport both keying material 
and message traffic. In essence, this approach uses QKD as a 
link  encryption  mechanism,  or  stitches  together  an  overall 
end-to-end  traffic  path  from  a  series  of  QKD-protected 
tunnels. 
Such  QKD  networks  bring  important  benefits  that  greatly 
mitigate the drawbacks of point-to-point links enumerated at 
the start of this section. First, they can extend the geographic 
reach of a network secured by quantum cryptography, since 
wide-area  networks  can  be  created  by  a  series  of  point-to-
point 
links  bridged  by  active  relays.  Links  can  be 
heterogeneous transmission media, i.e., some may be through 