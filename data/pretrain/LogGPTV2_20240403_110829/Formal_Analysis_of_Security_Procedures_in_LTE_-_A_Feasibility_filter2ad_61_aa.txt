# Formal Analysis of Security Procedures in LTE: A Feasibility Study

## Authors
Noomene Ben Henda and Karl Norrman  
Ericsson Research, Stockholm, Färögatan 6, 16480, Sweden  
{noamen.ben.henda, karl.norrman}@ericsson.com

## Abstract
The Authentication and Key Agreement (AKA) procedure is the only part of the Long Term Evolution (LTE) security standard that has been formally analyzed. The effectiveness of existing security verification tools for other types of procedures remains unclear. In this study, we use ProVerif to analyze session management and mobility-related procedures. Our analysis confirms that most secrecy and agreement properties hold, as expected. However, proving stronger injective agreement properties was challenging.

**Keywords:** Formal verification, Telecommunications, LTE, Security

## 1. Introduction

### Background
Long Term Evolution (LTE), a 4th Generation (4G) mobile communication system, is the latest standard developed by the 3rd Generation Partnership Project (3GPP). One of its objectives is to provide higher data rates, enhanced quality of service, and improved security compared to previous generations [1] (TS 22.278). A significant improvement in LTE is the introduction of granular key separation, where different session keys are used for specific protocols and purposes between the terminal (User Equipment, UE) and network nodes. These keys are organized in a hierarchical structure (see Fig. 1b). The root key is shared between the Home Subscriber Server (HSS) and the UE, stored securely in a smartcard. During the initial attachment of the UE to the network, mutual authentication is achieved using the AKA protocol [1] (TS 33.401), which is based on the root key. Other keys are derived from keys closer to the root in the hierarchy.

Each key in the hierarchy is shared between the UE and a specific network node. For example, the KASME key is shared with the Mobility Management Entity (MME), and the KeNB key is shared with the Evolved Node B (eNB). The LTE standard defines specific procedures for establishing each key. For instance, the KASME key is established by the AKA protocol running between the UE and the HSS, and then provisioned to the target MME node. The KeNB is initially established through a combination of procedures involving the MME, eNB, and the UE. The UE and MME use the KASME to agree on a KeNB, which is then provided to the eNB. This activates the security between the UE and the eNB based on the KeNB. Key establishment procedures must satisfy security properties such as agreement, secrecy, and freshness. Agreement ensures that all involved parties obtain the same key; secrecy guarantees that no one outside the involved parties has the key; and freshness prevents key reuse.

### Contribution
In this paper, we present our work using ProVerif to model and verify security properties of different key establishment procedures in LTE. This work is part of a feasibility study aimed at integrating formal verification tools into the 3GPP standardization process. Our main contribution is providing formal models of the LTE protocols in ProVerif's input language, preserving the 3GPP trust model. To our knowledge, the security procedures related to mobility and session management have not been previously subject to formal analysis. We also show how to model and verify different security properties. Our results confirm all secrecy and most weak agreement properties, but stronger agreement properties are more challenging to prove. Our approach using ProVerif is simple and generic, making it easily adaptable to other case studies.

### Related Work
Although LTE security has been scrutinized during its design, it has received less attention in the research community. Most research has focused on analyzing the AKA protocol [29, 28, 17, 30], which is similar to the AKA used in WCDMA, a 3G access technology. AKA in WCDMA was formally analyzed using BAN logic [1] (TS 33.902). Since AKA is reused in LTE, analysis results for WCDMA carry over to LTE. Other studies have looked at privacy aspects of WCDMA [5] and handover schemes [24], but not specifically at LTE. 

Formal verification of security protocols has been an active area of research for two decades. Tools like Scyther [13] and ProVerif can verify protocols for unbounded sessions and agents. Scyther has been used to analyze the Naxos protocol [14] and IPsec exchange protocols IKEv1 and IKEv2 [15]. ProVerif has been used for the Bluetooth device pairing protocol [19], the just-fast-keying protocol [3], and secure file sharing [9]. Other relevant tools include Tamarin [23], AVISPA [6], NRL [22], LySa [11], and Casper [21].

### Outline
In the next section, we provide an overview of the LTE architecture to contextualize our protocol models. Section 3 describes ProVerif and uses AKA as an example to illustrate our modeling approach. Section 4 covers security procedures related to session management, provides corresponding formal models, and discusses verification results. Section 5 presents our work on security procedures in mobility events. Finally, Section 6 concludes with a summary and future work. Due to space constraints, full versions of the models are available upon request. For detailed specifications, refer to [1].

## 2. Overview of LTE

### 2.1 Architecture
LTE provides 4G mobile broadband access, offering IP connectivity to terminals while they move throughout the network. The LTE architecture consists of a Radio Access Network (RAN) and a core network (see Fig. 1a). The RAN includes base stations (eNBs) that connect to terminals via the radio air interface. The eNBs are connected to the MME and the Serving Gateway (S-GW) in the core network. The MME handles control plane traffic for mobile terminals, managing sessions, mobility, and security. The S-GW handles user plane traffic to and from the internet and other operator services. Subscriber information, including authentication credentials, location, and subscription preferences, is stored in the HSS.

### 2.2 Trust Model
The 3GPP security design assumes a trust model for the network, dividing it into two main trust domains: the core network and the RAN. The core network, containing nodes like the HSS, MME, and S-GW, is assumed to be physically secure, with attackers only able to access these nodes remotely via network interfaces. The RAN trust domain includes only the eNBs, which may be deployed in physically insecure locations. To address this, each eNB implements security processing in a secure environment to prevent physical tampering. The IP transport network connecting nodes across different domains is protected using IPsec unless it can be trusted.

### 2.3 Session and Mobility Management
The terminal maintains two control connections: one with the MME managed by the Non-Access Stratum (NAS) protocol and one with the eNB managed by the Radio Resource Control (RRC) protocol. The MME tracks the terminal's location, even when idle, defined by an area served by multiple eNBs. The terminal updates the MME of any area changes. For incoming data, the MME pages the terminal on all eNBs in its last known area. The terminal then requests a user plane data connection from the MME, and the eNB becomes aware of the terminal's presence. The MME provides the eNB with initial state information to communicate with the terminal. The terminal can then become active, sending and receiving data, and can later become idle again, with the eNB releasing associated resources.

### 2.4 Key Hierarchy
Once security is activated, the NAS protocol between the terminal and the MME, and the RRC protocol between the terminal and the eNB, become integrity-protected and encrypted. User plane traffic is encrypted in two hops: first, the radio link between the terminal and the eNB, and then, the eNB terminates uplink encryption inside its secure environment and forwards it to the S-GW through an IPsec tunnel. Downlink traffic is handled similarly. Security for NAS, RRC, and user plane traffic relies on separate encryption and integrity session keys (see Fig. 1b). The keys for protecting RRC and user plane traffic are derived from the KeNB, which is derived from the KASME. The keys for the NAS protocol are also derived from the KASME.

### 2.5 Initial Key Establishment
At startup, the terminal registers with the network through the attach procedure, which includes the AKA procedure. The outcome of AKA is the establishment of the KASME session key between the terminal and the serving MME. Figure 2 shows a simplified message exchange for AKA: the UE sends its IMSI and security capabilities to the MME in an attach request. The MME stores the capabilities and forwards the IMSI to the HSS. The HSS retrieves the secret subscriber key K, generates a nonce RAND, and computes the KASME key and other authentication parameters. The authentication data is sent to the MME, which uses it to authenticate the UE.

![Figure 2: Simplified AKA Message Exchange](figure2.png)

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the essential content and structure of the original text.