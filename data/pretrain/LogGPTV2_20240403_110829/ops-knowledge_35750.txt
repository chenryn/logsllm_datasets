User: How to create a shell script to regularly backup specified folders and compress them into one file?
Assistant: The steps to create a shell script to back up specified folders regularly and compress them into one file are as follows: 1. Create a new shell script file, it is recommended to use the suffix `.sh`, such as `backup.sh`. 2. At the beginning of the script file, add a shebang directive to specify which shell to use, such as `#!/bin/bash`. 3. Set the directory to be backed up and the name and path of the compressed file to be backed up, for example: ``` backup_dir="/home/user/Documents" backup_file="/home/user/backup/backup-$(date +%Y- %m-%d).tgz" ``` Among them, `backup_dir` is the directory path to be backed up, `backup_file` is the path and name of the backup compressed file, use `$(date +%Y-%m-%d )` can automatically generate a string of the current date, ensuring that each backup will generate a new file. 4. Use the tar command to compress the backup directory, for example: ``` tar -czvf $backup_file $backup_dir ``` Among them, `-c` means to create a new compressed file, `-z` means to use gzip compression, `- v` means to display the compression process, and `-f` is followed by the path and name of the backup compressed file. 5. You can upload the backup file to the cloud or other places, such as using the scp command to upload to a remote server, such as: ``` scp $backup_file user@remote:/path/to/backup/ ``` Among them, `user` is The remote server user name, `remote` is the remote server address, and `/path/to/backup/` is the remote server backup directory path. 6. Use the crontab command to set a scheduled task, such as performing a backup every morning, edit the crontab file, and add the following content: ``` 0 0 * * * /bin/bash /path/to/backup.sh ``` Among them, ` 0 0 * * *` indicates execution at 0:00 every day, `/bin/bash /path/to/backup.sh` indicates the path of the backup script file to be executed. Example of a complete backup script: ``` #!/bin/bash backup_dir="/home/user/Documents" backup_file="/home/user/backup/backup-$(date +%Y-%m-%d) .tgz" tar -czvf $backup_file $backup_dir scp $backup_file user@remote:/path/to/backup/ ``` After the configuration is completed, the system will automatically execute the backup task every morning and upload the compressed file to the remote server.