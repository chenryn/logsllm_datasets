Fig. 9: Adversary advantage versus storage overhead. Without
encryption, the minimum storage for a sequence of n SNVs is
n · log2 3 bits. The x-axis is the expansion ratio between the
storage with GenoGuard and the storage without encryption,
log2 3. The y-axis is logarithm of the
namely,
security loss term, log2 ΔAdv , that is part of the advantage
of the message recovery adversary B ( Equation (5)). With
−200, we
GenoGuard, to ensure a security loss smaller than 2
only need a storage expansion ratio that is slightly larger than
2.
n·log2 3 =
h
2(h−log2 3)n is the security
of Corollary 1 (in [13]). Essentially,
loss due to DTE imperfectness that causes the difference
between pm and pd.
3
n
+α
n
+α
As mentioned in the proof, we denote ΔAdv = 3
2(h−log2 3)n
as the security loss term. Consider a case where n = 20000,
h = 4, and γ = 2.89× 10
−44. If pk is a password distribution,
then w can be estimated to be 1/100 according to Bonneau’s
Yahoo! study [25], in which the most common password was
selected by 1.08% of users. In this case, ΔAdv is negligible
(≈ 2
−16600), and δ ≈ 0, hence the upper bound on message
recovery advantage is w = 1/100. If we consider an adversary
who trivially decrypts the ciphertext with the most probable
key and then outputs the resulting sequence, he can win
the message recovery (MR) game with probability 1/100.
Hence, the bound is essentially tight. However, this case only
happens if the patients choose weak passwords according to
the previous password study.
To choose the storage overhead parameter h in practice,
we consider how it affects the security loss term ΔAdv. Since
α is negligible compared to 3n, we have ΔAdv ≈
2(h−2 log2 3)n .
Taking the logarithm of ΔAdv, we can observe that it has a
linear relationship with h, as shown by Figure 9. For example,
−200. Hence, with
when
a storage overhead slightly larger than two times (compared to
the storage of a plaintext sequence), we achieve a negligible
security loss.
log2 3 = 200.63%, we have ΔAdv ≈ 2
h
1
Security under Brute-Force Attacks: To illustrate the se-
curity guarantee of GenoGuard, we conducted two experi-
ments to compare GenoGuard with a simple (unauthenticated)
PBE algorithm under brute-force attacks. For the simple PBE
algorithm, we encoded the genome by assuming a uniform
distribution in GenoGuard encoding, speciﬁcally by setting all
edge weights in the tree to be equal (namely, 1
3). Thus, its
decryption under any key yields a valid genome (“valid” does
456456
Fig. 10: Experimental security evaluation. We encrypted a
genome with a given password from a pool of 1000 passwords
(for simplicity, we assume that the passwords are integers
from 1 to 1000). Each point represents one decryption result
using an integer from the password pool (the x-axis). The y-
axis is the logarithm6 of the interval size of the decrypted
sequence when encoded with the recombination model. (a)
With a conventional PBE scheme [16], all the wrong passwords
have been ruled out except the correct one; (b) Obviously, with
GenoGuard, no password can be excluded.
not necessarily mean “plausible”, as we will show). We show
here that for this PBE scheme a very simple classiﬁer sufﬁces
for identifying the correctly decrypted genome with high prob-
ability. We encrypted a victim’s chromosome 22 (see Section
VII-A for dataset description and implementation details) with
a given password from a password pool of size 1000 (without
loss of generality, we assume that the passwords are integers
from 1 to 1000). We chose “539” as the correct password for
both experiments; and we assumed that the adversary knows
the correct password is a number from the password pool
and that he performs a simple brute-force attack. In real life,
brute-force attacks can be carried out if the adversary knows
that the correct password has a limited number of characters
(hence memorizable by users) or even a ﬁxed length (e.g., six-
digit PIN code). In the ﬁrst experiment, we encrypted the
victim’s sequence directly with the PBE scheme in [16] (after
encoding by assuming a uniform distribution). In the second
experiment, we followed the same procedure except that we
encrypted the victim’s sequence by using the GenoGuard.
Note that in our proposed DTE, the size of the interval of
a leaf in the ternary tree is proportional to the probability
of the corresponding sequence. In both experiments, to rule
out wrong passwords, we computed the interval sizes of the
decrypted sequences and observed the result. Figure 10 shows
the result of the two experiments. We observe that if the
sequence is protected by a direct application of the PBE
scheme, the adversary can exclude most passwords in the
attack because the corresponding decrypted sequences have
much lower probabilities than that of the correct sequence. In
this example, only the correct password is retained, as shown
in Figure 10 (a). With GenoGuard, on the contrary, the correct
sequence is buried among all the decrypted sequences, hence
it is almost impossible to reject any wrong password.
6Note that hn is close to 80000, hence the interval size is a huge integer
and is better expressed as its logarithm with base 2.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:07:07 UTC from IEEE Xplore.  Restrictions apply. 
VI. TOWARDS PHENOTYPE-COMPATIBLE GENOGUARD
An individual’s physical traits (such as gender, ancestry
and hair color) are highly correlated to his DNA sequence.
Recently, researchers showed that it is even possible to model
facial traits of an individual from his DNA [26]. Although
such progress in human genetics is desirable for many appli-
cations (e.g., forensics), it can pose a threat to our proposed
technique. In particular, such correlations could be used as
side information by an adversary who tries to obtain the
sequence of a speciﬁc victim (e.g., by trying various potential
passwords). For instance,
if the adversary knows that an
encrypted sequence belongs to a victim of Asian ancestry, he
might be able to eliminate a (wrong) password if the genetic
sequence obtained using this password does not belong to an
individual of Asian ancestry.
In genetics, gender and ancestry are the most well studied
human genetic traits. These traits have deterministic genotype-
phenotype associations, whereas other traits (such as hair
color) have less certain (probabilistic) genotype-phenotype
associations. In this section, we ﬁrst show that the security
of GenoGuard is not affected by traits with deterministic
genotype-phenotype associations. Our main goal is to show
that if an adversary knows a phenotype (physical trait) of
a victim, he always retrieves a decrypted sequence that is
consistent with the corresponding phenotype, even if he types
a wrong password. Next, we quantify the privacy loss if an
adversary has information about other traits (with probabilistic
genotype-phenotype associations) of a victim via a privacy
analysis.
Gender: Gender
A. Traits with Deterministic Genotype-Phenotype Associations
is determined by sex chromosomes,
namely, X chromosome and Y chromosome. Females have
two copies of the X chromosome, whereas males have one
X chromosome and one Y chromosome. Note however that
X chromosome and Y chromosome have different lengths.
Therefore, the adversary can immediately ascertain whether a
ciphertext comes from an X chromosome or a Y chromosome
because the latter is shorter than the former. As we mentioned
in Section IV-C, (when implementing GenoGuard) the whole
interval [0, 2hn − 1] is determined by the length n of the
sequence. To deal with the gender problem, we use the length
of X chromosome for both sex chromosomes. In other words,
X chromosome and Y chromosome are encoded in the same
interval [0, 2hn − 1], where n is the length of X chromosome.7
In this way, the adversary cannot infer any information about
the gender because the ciphertext is always of the same length,
whether it belongs to a male sequence or a female sequence.
Furthermore, if the adversary knows the gender of a victim, he
will always get a consistent sequence (based on the gender)
when he decodes the ciphertext by using the corresponding
public knowledge of Y (or X) chromosome.
Ancestry: Research has shown that ancestry information
can be accurately inferred from DNA sequences. For example,
the sequence of an individual of Asian ancestry usually has
different combinations of SNVs compared to an individual of
European origin. In genetics, ancestry can be inferred with a
7There is no LD between two different chromosomes, so each chromosome
can be encrypted as an independent sequence.
number of methods, e.g., principal component analysis (PCA)
followed by k-means clustering [27]. In this method, a training
set is comprised of a number of individuals, each of which is
genotyped on a predeﬁned set of SNVs (the most informative
SNVs). This training set is then fed into PCA in order to ﬁnd
several principal components. After the dataset is projected on
these principal components, k-means clustering is applied to
cluster the individuals into different ethnicities.
What we want to achieve in GenoGuard is ethnic plau-
sibility: the principal components of the decrypted genome-
wide genotyping data should be broadly similar to those from
a real genome. Hence, we argue that the decoding operation
with knowledge of recombination rates and haploid genotype
dataset from a speciﬁc population always yields a sequence
belonging to that population. To verify this, we conducted an
experimental analysis depicted in the following.
We used Phase III8 data from the HapMap dataset [22]. In
this dataset, we chose 3 populations for our evaluation:
(i)
(ii)
(iii)
ASW (African ancestry in Southwest USA), with 90
samples;
CEU (Utah residents with Northern and Western
European ancestry from the CEPH collection), with
165 samples;
CHB (Han Chinese in Beijing, China), with 90 sam-
ples.
We selected 100 SNVs to infer ancestry according to [28].
First, we applied PCA on the above dataset and selected
the ﬁrst
two principal components. The projection of the
dataset on the two principal components can be seen in Figure
11(a). We encrypted a sequence from a speciﬁc population
(e.g., ASW) by using GenoGuard. Then, for each of the
three aforementioned populations, we decrypted the ciphertext
with randomly guessed passwords 100 times, generating 100
random sequences for each case (in total, we generated 300
sequences). Finally, we projected these 300 sequences on the
principal components and observed the result, as shown in Fig-
ure 11(b), (c), and (d). We conclude that decoding with public
knowledge from a population always produces a sequence of
that population, which proves that ancestry inferred from a
sequence does not pose a threat to our proposed technique.
We leave the case for people with mixed blood for the future
work, but a reasonable assumption is that corresponding public
knowledge could be available for mixed-blood people in the
future.
B. Traits with Probabilistic Genotype-Phenotype Associations
In theory, the idea we introduce for ancestry also works
for other traits:
incorporate phenotype-related data during
encoding. For the case of ancestry, such data is provided
as population-speciﬁc haploid genotype dataset. However,
such data is not easily available for many other traits (e.g.,
those with probabilistic genotype-phenotype associations) and
genotype-phenotype associations is ongoing research. In the
following, we quantify the privacy loss when the phenotype
of a victim is not taken into account during encoding, but is
8The third phase of the International HapMap project. This phase increases
the number of DNA samples covered from 270 in phases I and II to 1,301
samples from a variety of human populations.
457457
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:07:07 UTC from IEEE Xplore.  Restrictions apply. 
Hair Color (T ∗
Red
Blond
Brown
Black
)
Prior (PT ∗ )
8.8%
42.6%
39.3%
9.3%
, ABlack
ARed
T ∗
T ∗
T ∗ , ABlond
, ABrown
T ∗
60.7%, 28.6%, 7.1%, 3.6%
0.8%, 93.9%, 3.8%, 1.5%
0.8%, 56.7%, 20%, 22.5%
0%, 55.2%, 3.4%, 41.4%
TABLE II: Summary of the results from the HIrisPlex sys-
tem [31]. The second column, prior, is the fraction of samples
that have the corresponding hair color. The third column is the
vector of prediction accuracies (of the classiﬁcation algorithm)
for all four hair colors, given that a person has hair color T ∗.
This is actually the password distribution pk. Suppose the
victim’s phenotype is T ∗, which is known to the adversary. We
assume that decryption under a given incorrect password yields
phenotype Ti with probability PTi, and that such assignment is
independent across passwords. Whether an incorrect password
is retained then depends on the probability that the decrypted
sequence is classiﬁed by the classiﬁer as phenotype T ∗. This
event may be modeled as independent Bernoulli trials across
passwords, each with retaining probability Pret computed as
Pret =
· AT ∗
Ti
.
PTi
(7)
u(cid:3)
i=1
Note that for the correct password, the adversary retains it with
probability AT ∗
T ∗. From Theorem 2, we observe that the advan-
tage of adversary B without side information is approximately
equal to w, the maximum weight in the password distribution
(equivalent to the above P1). Let B(cid:2) represent the adversary
with side information T ∗. B(cid:2) ﬁrst prunes passwords based on
the classiﬁer, and then executes the algorithm of adversary B
in the MR game (Figure 8) on the resulting smaller password
pool consisting of retained passwords. Let p(cid:2)
k represent this
new password distribution, with maximum weight w(cid:2). We can
represent the password pruning procedure as a randomized
function f (pk) → p(cid:2)
k. Therefore, B(cid:2) adheres to the procedure:
i) B(cid:2) uses f to compute p(cid:2)
k to B. Let Adv(B(cid:2)
represent the advantage of adversary B(cid:2). We have
HE,pm,p(cid:2)
k; ii) B(cid:2) gives p(cid:2)
Adv(B(cid:2)
k (B)]
)
) = AT ∗
≈ AT ∗
T ∗ · Ep(cid:2)
T ∗ · Ep(cid:2)
k←f (pk)[Advmr
k←f (pk)[w(cid:2)
],