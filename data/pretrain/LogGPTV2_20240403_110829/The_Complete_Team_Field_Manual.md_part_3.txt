methods include capturing screenshots and keyboard input.
1.10.1 ATTACK
1.10.1.1 Audio Capture
1.10.1.2 Screen Capture
## Requires imagemagick to be installed on the host ##
1.10.1.3 Clipboard Data
## Requires xclip to be installed on the host ##
Text
Images
1.10.1.4 Keylogging
## Requires logkeys to be installed on the host ##
1.10.2 DETECTION
Detect Keylogging by process name
This python script looks for keylogging processes and if a name that matches
one of the keyloggers on the list it will prompt to see if you want to kill the
process. This script was written by mohitbalu and is available here:
https://github.com/mohitbalu/micKeyDetector/blob/master/micKeyDetector.p
1.11COMMAND AND CONTROL
The adversary is trying to communicate with compromised systems to control
them.
Command and Control consists of techniques that adversaries may use to
communicate with systems under their control within a victim network.
Adversaries commonly attempt to mimic normal, expected traffic to avoid
detection. There are many ways an adversary can establish command and
control with various levels of stealth depending on the victim’s network
structure and defenses.
1.11.1 Relevant Information
1.11.1.1 Common C2 Ports
Ports that are commonly used for normal network activity are often targeted
to blend in with network traffic, avoid firewalls and intrusion detection
systems, such as ports:
1.11.2 ATTACK
1.11.2.1 Remote Access Tools
Remote access tools are needed to command and control a host once it has
been infected, there are many tools out there but a few of them are listed
below.
Name Language Link
Cobalt Strike propriatary https://cobaltstrike.com/
Empire (old) PowerShell2.0 https://github.com/EmpireProject/E
Empire 3 Powershell/Python https://github.com/BC-SECURITY
Metasploit Ruby https://github.com/rapid7/metasploi
Framework
Python,
SILENTTRINITY https://github.com/byt3bl33d3r/SIL
IronPython,
C#/.NET
Pupy Python https://github.com/n1nj4sec/pupy
Koadic JavaScript https://github.com/zerosum0x0/koa
PoshC2 PowerShell https://github.com/nettitude/PoshC2
Gcat Python https://github.com/byt3bl33d3r/gca
TrevorC2 Python https://github.com/trustedsec/trevor
Merlin Golang https://github.com/Ne0nd0g/merlin
Quasar C# https://github.com/quasar/QuasarR
Covenant .NET https://github.com/cobbr/Covenant
FactionC2 C#, Pythong https://github.com/FactionC2/
DNScat2 Ruby https://github.com/iagox86/dnscat2
Sliver Golang https://github.com/BishopFox/slive
EvilOSX Python https://github.com/Marten4n6/Evil
EggShell Python https://github.com/neoneggplant/Eg
Evilgrade Multiple https://github.com/infobyte/evilgrad
RedCloud Docker https://github.com/khast3x/Redclou
1.11.2.2 Remote Access Tools
Legitimate administrative tools can be used to control remote targets
Proxies
Setup NGINX proxy for Armitage/Metasploit
Install NGINX and backup conf file
Create config file for Armitage
Setup system for use
1.11.2.3 C2 Redirector
Using a linux redirector with socat installed
Point windows payload remote host to redirector IP and port, recommend
adding rules to Iptables to allow only remote host and C2 communications to
protect from scanning and hack-back
1.11.3 DETECTION
Finding an active Command and Control on a host can prove to be rather
difficult, typically Command and Control is either discovered forensically
after the exploitation has been discovered or can be found over the network
by looking for beacons and commands. While not impossible the best way is
either through the use of an antivirus or by looking for persistence
mechanisms that would restart the Command and Control.
1.11.3.1 Detect C&C with hard coded IP addresses
This technique can be used to discover Command and Control while they are
running on a system. Command and Control is typically very difficult to
discover during its execution phase. During execution phase you can also use
network traffic to catch the command and control signals. This method
requires you to gather IP addresses that have communicated with the host, the
longer the better. Then will require a memory dump file, which we will then
run volatility against the memory dump using the IP address as the search
string. We are looking for hard coded IP addresses, if any are found this
would indicate a Command and Control implant.
This method is going to need a few prerequisites
4. All IP addresses that communicated with host (recommend running for
a minimum of 24 hours)
5. A memory dump from the host
6. Get volatility profile setup for Linux
7. Use volatility to get any hardcoded IP addresses from RAM
1.12EXFILTRATION
The adversary is trying to steal data.
Exfiltration consists of techniques that adversaries may use to steal data from
your network. Once they’ve collected data, adversaries often package it to
avoid detection while removing it. This can include compression and
encryption. Techniques for getting data out of a target network typically
include transferring it over their command and control channel or an alternate
channel and may also include putting size limits on the transmission.
1.12.1 ATTACK
1.12.1.1 Data Over DNS
Method 1:
Method 2:
Victim Machine
Attacker Machine
1.12.1.2 Open SMTP Relay
1.12.1.3 SSH tarball
1.12.1.4 Raw Port Encoded
1.12.1.5 Data exfiltration over Social Media
Website Amount of Data
Youtube 20GB as a video
Flickr 200MB as an image, up to 1TB
Vimeo 5GB of videos per week; paid subscription required to retain original file
Facebook 25MB raw file for groups, 1GB as video* if verified profile, text posts
LinkedIn 100MB Office documents
DeviantArt 60MB as an image, up to 250MB
Pinterest 10MB as an image
Tumblr 10MB as an image, 150 photo posts allowed per day, text posts
1.12.2 DETECTION
1.12.2.1 Find DNS exfil
1.12.2.2 Find compressed files
Option 1: Find by Extension
Option 2: Find by File Type
This method utilizes the magic number, which is a file header that identifies
the file
1.12.2.3 Find encrypted files
Using Entropy
This is an example of a possible way to find high entropy files across the OS,
while if ran on every file this list would be quite large, however if you pass a
trusted list you can make it quite easy to find new high entropy files.
Data Type Average Entropy
Plain Text 4.347
Native Executable 5.099
Packed Executable 6.801
Encrypted Executable 7.175
1.12.2.4 Find large files
2 WINDOWS
2.1 GENERAL INFORMATION
2.1.1 Windows NT versions
NT Version Windows OS
NT 3.1 Windows NT 3.1
NT 3.5 Windows NT 3.5
NT 3.51 Windows NT 3.51
NT 4.0 Windows NT 4.0
NT 4.1 Windows 98
NT 4.9 Windows Me
NT 5.0 Windows 2000
NT 5.1 Windows XP
Windows XP (x64)
NT 5.2
Windows Server 2003 & R2
Windows Home Server
NT 6.0 Windows Vista
Windows Server 2008
Windows 7
NT 6.1
Windows Server 2008 R2
Windows Home Server 2011
Windows 8
NT 6.2
Windows Phone 8
Windows Server 2012
Windows 8.1
NT 6.3 Windows Server 2012 R2
Windows Phone 8.1
Windows 10
NT 10
Windows Server 2016
Windows Server 2019
Windows 10
NT 10
Windows Server 2016
Windows Server 2019
2.1.2 Commonly Used Windows Registry Locations
Name Registry Location
OS Information HKLM\Software\Microsoft\Windows NT\CurrentVersion
Product name HKLM\Software\Microsoft\Windows NT\CurrentVersion /v
Date of Install HKLM\Software\Microsoft\Windows NT\CurrentVersion /v
Registered Owner HKLM\Software\Microsoft\Windows NT\CurrentVersion /v
System Root HKLM\Software\Microsoft\Windows NT\CurrentVersion /v
Time Zone HKLM\System\CurrentControllerSet\Control\TimeZoneInfo
Mapped Network
HKLM\Software\Microsoft\Windows NT\CurrentVersion\E MRU
Drives
Mounted Devices HKLM\System\MountedDevices
USB Devices HKLM\System\CurrentControllerSet\Enum\USBStor
Audit Policies HKLM\Security\Policy\PolAdTev
Installed Software
HKLM\Software
(Machine)
Installed Software
HKCU\Software
(User)
Recent Documents HKCU\Software\Microsoft\Windows\CurrentVersion\Explo
Recent User
HKCU\Software\Microsoft\Windows\CurrentVersion\Explo
Locations
Typed URLs HKCU\Software\Microsoft\Internet Explorer\TypedURLs
MRU List HKCU\Software\Microsoft\Windows\CurrentVersion\Explo
Last Registry Key
HKCU\Software\Microsoft\Windows\CurrentVersion\Apple
Accessed
2.1.3 Windows Directories
Directory Description
C:\Windows\System32\drivers\etc\hosts DNS file
C:\Windows\System32\drivers\etc\networks Network Config file
Usernames and
C:\Windows\System32\config\SAM
Password
C:\Windows\System32\config\SECURITY Security Log
C:\Windows\System32\config\SOFTWARE Software Log
C:\Windows\System32\config\SYSTEM System Log
C:\Windows\System32\winevt\ Windows Event Logs
Backup of User and
C:\Windows\repair\SAM
Password
Windows XP All
C:\Documents and Settings\All Users\Start Menu\Programs\Startup\
User Startup
Windows XP User
C:\Documents and Settings\User\Start Menu\Programs\Startup
Startup
Windows All User
C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp
Startup
C:\Users\*\AppData\Roaming\Microsoft\ Windows\Start Windows User
Menu\Programs\Startup Startup
C:\Windows\Prefetch Prefetch files
C:\Windows\AppCompat\Programs\Amcache.hve Amcache.hve
C:\Windows\Users\*\NTUSER.dat NTUSER.dat
Quick Tip: For quick access to users startup directory go to “Run” and type
“shell:startup”
2.1.4 Windows cmd basics
Command Desscription
dir List files and folders
cd  Change directory to 
mkdir  Create Directory 
rmdir  Remove Directory 
copy   Copy  to 
move   Move file from  to 
ren   Rename from  to 
del  Delete 
echo  Display 
type  Display contents of 
cls Clear contents of the screen
ver Windows Version
: Change drive, Ex: (D: )
2.1.4.1Windows cmd admin basics
Command Description
ipconfig /all Get your IP address
sc query state=all Show Services
tasklist /m Show Services and processes
taskkill /PID  /F Force kill process by ID
assoc Show File Type Association
cipher /w: Secure delete file or directory
fc   File compare
netstat -an Display currently open ports
pathping Displays each hop in ping
tracert Displays each hop and time
powercfg Change power configuration
chkdsk /f  Check and fix disk errors
driverquery /FO list /v List of drivers and status
osk Onscreen keyboard
shutdown -s -t 3600 Schedule shutdown for 3600 sec or 1 hr
2.1.5 Windows powershell
Command Alias Description
Get-Content cat Get contents of a file
Get-Service gsv Get Services
Get-Process gps Show Services and processes
Stop-Process -Id  - Force kill Force kill process by ID
Clear-Content clc Clear contents of a file
Get-Command gc Gets all commands
Compare-Object (cat )
compare Compare file f1 and f2
(cat)
Copy-Item cp Copy an item
Gets the properties and methods of
Get-Member gm
objects.
Calls Windows Management
iwmi
Invoke-WMIMethod
Instrumentation (WMI) methods.
cmd /c  Run command as windows command line
Set-Alias sal Creates or changes an alias
Select-Object select Selects objects or object properties
Performs an operation against each item in
ForEach-Object %
a collection of input objects.
Selects objects from a collection based on
Where-Object ?
their property values.
2.2 INITIAL ACCESS
The adversary is trying to get into your network.
Initial Access consists of techniques that use various entry vectors to gain
their initial foothold within a network. Techniques used to gain a foothold
include targeted spear phishing and exploiting weaknesses on public-facing
web servers. Footholds gained through initial access may allow for continued
access, like valid accounts and use of external remote services, or may be
limited-use due to changing passwords.
2.2.1 ATTACK
2.2.1.1Remote Admin Tools (password required)
2.2.1.2Exposed Services
The following table shows common exploits and the vulnerable OS. There
are many services that run on your computer and a service that is vulnerable
and exposed can provide an initial attack vector.
Vulnerability Operating System
CVE-2020-0796
Windows 10
(SMBGhost)
Windows 10
Windows 8.1
CVE-2018-8174
Windows 7
Windows 10
Windows 8.1
Windows 8
Windows 7
CVE-2017-0143 Windows Vista
(EternalBlue) Windows Server 2008
Windows Server 2012
Windows Server 2016
Windows XP
CVE-2008-4250
Windows Server 2003
Windows 2000
Windows XP
CVE-2003-0352
Windows Server 2003
Windows XP
Windows Server 2003
CVE-2012-0002
Windows 7
Windows Server 2003
2.2.1.3Spear Phising
Spear Phishing is one of the more common attack vectors as it targets
unsuspecting users. The steps below allow you to use an automated tool to
create a spear phishing email.
Windows
1. Download and install Python.
2. Download and install PyCrypto library.
3. Clone SET git repository from https://github.com/trustedsec/social-
engineer-toolkit/
4. Open your cmd and run Social-Engineer Toolkit: python C:\Users\
\Documents\GitHub\social- engineer-toolkit\se-toolkit
Windows 10
1. Open Powershell window as an admin
2. run: “Enable-WindowsOptionalFeature -Online -FeatureName
Microsoft-Windows-Subsystem-Linux”
3. Install ubuntu linux distro from windows store
4. Launch ubuntu
5. In terminal run: “apt-get –force-yes -y install git apache2 python-
requests libapache2-mod-php python-pymssql build- essential python-
pexpect python-pefile python-crypto python- openssl”
6. git clone https://github.com/trustedsec/social-engineer- toolkit/set/
7. cd set
8. python setup.py install
9. setoolkit
10. Option 1 for Spear Phishing attack vectors
11. Option 2 for FileFormat attack
12. Choose fileformat to use default is pdf with embedded EXE
13. Choose payload (shell less likely to be caught, more risky)
14. Set listening port (port 80 or 443 to blend with web)
15. Option 2 to rename file (name something likely to be opened)
16. Select option 1 for single target or 2 for mass mailer
17. You will be prompted for subject and body
18. Select option 1 to use gmail and option 2 for open relay