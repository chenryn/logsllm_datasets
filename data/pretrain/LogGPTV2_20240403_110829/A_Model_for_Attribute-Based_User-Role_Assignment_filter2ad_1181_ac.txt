### 1. Introduction and Correspondence

To ensure proper assignment, Table 5 illustrates the correspondence between read and write roles. Using the language and the correspondence shown in Table 5, we can define the following rules:

- **Rule 1**: (Age ≥ 3) AND (Country IN {A..Z}) → CR AND CW
- **Rule 2**: (Age ≥ 11) AND (Country IN {A..Z}) → JR AND JW
- **Rule 3**: (Age ≥ 16) AND (Country IN {A..Z} - {Saudi, Sudan}) → DR AND DW
- **Rule 4**: (Age ≥ 18) AND (Country IN {A..Z} - {China, India, Saudi, Sudan, Egypt, Indonesia, Malaysia, Singapore}) → AR AND AW

**Table 5: Companion Read and Write Roles**

| Read Roles | Write Roles |
|------------|-------------|
| Adult Read (AR) | Adult Write (AW) |
| Adolescent Read (DR) | Adolescent Write (DW) |
| Juvenile Read (JR) | Juvenile Write (JW) |
| Child Read (CR) | Child Write (CW) |

### 2. Case II: Military Equipment Spare Parts

A military corps maintains supplies of spare parts for military equipment, typically stored at various geographical locations. Maintenance of this equipment involves multiple levels, including organizational (OM), intermediate (IM), and depot-level maintenance (DM). For simplicity, we will ignore the IM level.

Maintenance personnel at different levels need access to logistical databases to order spare parts, locate the nearest warehouse, or follow up on the status of spare parts and repair orders. The information displayed and the privileges exercised depend on several factors:

- Unit’s geographical location
- Type of equipment
- Unit’s alert status
- Maintenance Level (OM, DM)

#### 2.1. Maintenance Levels and Alert Status

We will consider the case of maintaining the High-Powered Tracking Radar (HP) at two maintenance levels (OM, DM) during two alert statuses: peacetime and wartime (WT). The roles and permissions for this case are illustrated in Table 6.

**Figure 8: Roles’ Maintenance Levels and Alert Status**

- (r2.1) HP DM WT
- (r1.1) HP OM WT
- (r2) HP DM
- (r1) HP OM

**Table 6: Roles and Permissions for HP**

| Role | Permissions |
|------|-------------|
| r1: HP OM | Request parts from local warehouse, follow up on previous orders, inquire in local database |
| r2: HP DM | Request parts from warehouses, follow up on previous orders, inquire in national databases |
| r1.1: HP OM WT | r1 + give priority to orders |
| r2.1: HP DM WT | r2 + give priority to orders |

### 3. Attributes' Representation

We will represent the attributes "Maintenance Level" and "Alert Status." The organization can specify the following non-terminal items:

- **Attribute** ::= Maintenance Level | Alert Status
- **Attribute_Value** ::= OM | DM | Peacetime | Wartime
- **Role** ::= r1 | r2 | r1.1 | r2.1

Based on the above, we can define the following rules:

- **Rule 1**: (Maintenance Level = OM AND Alert Status = Peacetime) → r1
- **Rule 2**: (Maintenance Level = DM AND Alert Status = Peacetime) → r2
- **Rule 3**: (Maintenance Level = OM AND Alert Status = Wartime) → r1.1
- **Rule 4**: (Maintenance Level = DM AND Alert Status = Wartime) → r2.1

### 4. Implementing MAC Using the Language

MAC is widely used in military organizations, and it is reasonable to implement it using the defined language. We modify our example by introducing a second equipment type: Missile. Alert status is ignored for simplicity. This yields the hierarchical classes and compartments shown in Figure 9.

**Figure 9: Hierarchical Classes and Compartments**

- **The Hierarchical Classes**:
  - HP Radar (compartment A)
  - Missile (compartment B)
- **The Compartments**:
  - DM, {A, B}
  - DM, {A}
  - DM, {}
  - DM, {B}
  - OM, {A}
  - OM, {A, B}
  - OM, {B}
  - OM, {}

Using the method expounded in [10], we can transform the lattice into RBAC role hierarchies as shown in Figure 10.

**Figure 10: RBAC Role Hierarchies**

- **Read Roles Hierarchy**:
  - DM, {A, B}-R
  - DM, {A}-R
  - OM, {A}-R
  - DM, {B}-R
  - OM, {B}-R
  - OM, R
- **Write Roles Hierarchy**:
  - OM, W
  - OM, {A}-W
  - OM, {B}-W
  - DM, {A, B}-W
  - DM, {A}-W
  - DM, {B}-W

We can express the security lattice in terms of an RBAC model using the following construct:

- **Roles** are shown in Figure 10.
- **Role Hierarchies**:
  1. A “read” role hierarchy with the same partial order as dominance (≥MAC).
  2. A “write” role hierarchy with a partial order that is the inverse of dominances (≥MAC).

- **Constraint on User Assignment**: Each user is assigned exactly two roles: xR and OM-W, where x is the label assigned to the user. OM-W is the write role corresponding to the lowermost security level according to (≥LBAC).

**Table 7: RBAC Roles and Permissions**

| RBAC Roles | Permissions |
|------------|-------------|
| OM, {A}-R | Inquire in local database about HP parts |
| DM, {A}-R | Inquire in all databases about HP parts |
| OM, {A}-W | Write report to HP OM and DM levels |
| DM, {A}-W | Write report to HP DM level only |
| OM, {B}-R | Inquire in local database about missile parts |
| DM, {B}-R | Inquire in all databases about missile parts |
| OM, {B}-W | Write report to missile OM and DM levels |
| DM, {B}-W | Write report to missile DM level only |

**Table 8: Lattice Labels and Corresponding RBAC Roles**

| Label | Read Roles | Write Roles | Roles Assigned to a User |
|-------|------------|-------------|--------------------------|
| OM, {A} | OM, {A}-R | OM, W | (OM, {A}-R AND OM, {A}-W) |
| DM, {A} | DM, {A}-R | OM, W | (DM, {A}-R AND DM, {A}-W) XOR (OM, {A}-R AND OM, {A}-W) |
| OM, {B} | OM, {B}-R | OM, W | (OM, {B}-R AND OM, {B}-W) |
| DM, {B} | DM, {B}-R | OM, W | (DM, {B}-R AND DM, {B}-W) XOR (OM, {B}-R AND OM, {B}-W) |

### 5. Discussion

The language presented is simple and can be used to express situations beyond the study cases provided. For example, a user’s membership in a role is an important attribute in many applications. Assume the security policy allows a client to be assigned a “team leader” role only if they are already a member of a “programmer” role. This can be represented as follows:

- **Attribute_Pair** ::= Attribute IN Set
  - **Attribute** ::= required-role
  - **Set** ::= {programmer}

Similarly, suppose the security policy allows the client to retain the role during regular working hours only. This condition can be captured as:

- **Attribute_Pair** ::= Attribute IN Range
  - **Attribute** ::= time
  - **Range** ::= 900..1700 (from 9 am to 5 pm)

When the time is not within this range, the role is automatically revoked.

However, the language needs to be extended to allow more expressive power. We are working on devising a way to express constraints and explore the interaction between seniority among rules and seniority among roles. Our model uses seniority levels to compare a client’s attributes to existing assignment rules or to compare two assignment rules. We will work to make seniority level comparisons less restricted and explore the usability of our model in role-to-permission assignment. More importantly, we will extend our model to allow cross-domain dynamic user-to-role assignment to reduce administrative work for security administrators.

### 6. Conclusion

We have described a model to dynamically assign users to roles based on a finite set of rules defined by authorized people in an enterprise. We believe that our model will be useful in automatically managing users' role assignments and revocations in enterprises with large client bases.

### 7. References

[1] R. Sandhu, V. Bhamidipati, and Q. Munawer, “The ARBAC97 Model for Role-based Administration of Roles”. ACM Transactions on Information and System Security. Vol.2, No.1, Feb. 1999, pages 105-135.

[2] R. Sandhu, E. Coyne, H. Feinstein, and C. Youman, “Role-based Access Control Model”, IEEE Computer, 29(2), Feb. 1996.

[3] J. Park, R. Sandhu, and G. Ahn, “Role-based Access Control on the Web”, ACM Transactions on Information and System Security, Vol. 4, No 1, 2001.

[4] A. Herzberg, Y. Mass, and J. Mihaeli, “Access Control Meets Public Key Infrastructure, Or: Assigning Roles to Strangers”, Proc of the 2000 IEEE Symposium on Security and Privacy, 2000.

[5] Y. Zhong, B. Bhargava, and M. Mahoui, “Trustworthiness Based Authorization on WWW”, In IEEE workshop on “Security in Distributed Data Warehousing”, New Orleans, Oct. 2001.

[6] Lightweight Directory Access Protocol (v3), RFC2251, December 1997.

[7] Dynamic Groups for LDAPV3 draft-haripriya-dynamicgroup-00.txt, October 2001.

[8] W. Yao, K. Moody, J. Bacon, “A Model of OASIS Role-Based Access Control and its Support for Active Security”, SACMAT’01, Chantilly, Virginia, USA, May 3-4, 2001.

[9] http://www.guardian.co.uk/international/story/0,3604,400649,00.html

[10] S. Osborn, R. Sandhu, and Q. Munawer, Configuring Role-Based Access Control to Enforce Mandatory and Discretionary Access Control Policies, ACM Transactions on Information and System Security, vol. 3, No. 2, May 2000, pages 85-106.

[11] http://www.defenselink.mil/ra/rfpb/chapter_5.html

---

This revised version aims to provide a clear, coherent, and professional presentation of the content.