### ZLAB恶意软件分析报告：《HeroRAT: 分析基于Telegram的Android恶意软件》

#### 概述
2018年6月，ESET的安全研究人员发现了一种新的安卓远程管理工具（Remote Administration Tool, RAT）家族——HeroRAT。该恶意软件通过Telegram BOT API与攻击者进行通信。使用Telegram API已经成为Android RAT威胁场景的一种新趋势，此前已有TeleRAT和IRRAT等RAT家族采用了这种技术。

HeroRAT在伊朗非常活跃，主要通过第三方应用商店、社交媒体和即时通讯应用进行传播。研究人员推测HeroRAT的部分代码可能源自其他恶意软件。尽管一些特征与IRRAT和TeleRAT明显不同，但某些部分则来源于Xamarin框架和TeleSharp库。

根据功能的不同，HeroRAT的售价分为三种版本，具体比较如下：
![图 1: HeroRAT三个不同版本比较](图1.png)

#### 恶意软件分析
这三个变种来自同一个RAT家族，但它们被重新打包，具有不同的包名、图标和僵尸控制器用户名。本文将对其中一个样本进行深入分析。

恶意应用请求的权限如下所示：
![图 2: RAT请求的权限](图2.png)

安装完成后，应用会显示“此应用程序无法在您的设备上运行”这样的消息，然后展示一个假的卸载过程。
![图 3: RAT假的卸载消息](图3.png)

随后，APP的图标会从主页移除，但RAT仍以服务模式在系统中运行。
![图 4: RAT仍在系统中运行](图4.png)

为了隐藏APP图标并让RAT后台运行，攻击者将`setComponentEnabledSetting`设置为`disabled`，并指定了参数`DontKillApp`，如下所示：
![图 5: 用于隐藏APP图标的代码](图5.png)

此外，该应用还会检查设备，并根据系统语言显示相应的消息。

#### 恶意软件与Xamarin
通过对APK文件的分析，研究人员发现了一个名为`assemblies`的文件夹，其中包含以下DLL文件：
![图 6: 来自Xamarin 的DLLs](图6.png)

这些来源于Xamarin框架的库使得恶意软件作者能够使用C#语言开发安卓应用。列表中还包括TeleSharp库，这是一个用C#实现Telegram Bot API的库，直接基于TeleSharp API，从而简化了恶意软件的开发过程。
![图 7: TeleSharp库](图7.png)

由于使用了Xamarin框架，所有的Java源代码文件只包含代码封装，而实际的代码则存储在`android.os.dll`文件中。反编译这些dll文件相对简单。

#### RAT 功能和特征
通过分析源代码，研究人员发现该RAT具备所有经典RAT的功能，例如读取短信和通话记录、获取位置信息、开关机、下载文件等：
![图 8: RAT的功能](图8.png)

Telegram僵尸的`MainToken`作为RAT的C2服务器出现在源代码中：
![图 9: Telegram僵尸的MainToken](图9.png)

还可以通过查询Telegram REST API获取僵尸主机的用户名，然后发送命令给僵尸主机：
![图 10: Bot信息](图10.png)
![图 11: 与僵尸主机通信](图11.png)

然而，僵尸主机并未接收研究人员发送的命令，回复的信息是“You Cant Use Of Bot Before Register In This Bot”。这表明僵尸主机只接受来自特定来源的命令。这一行为在源代码中得到了验证，源代码中有发送者ID和Manager ID的比较。三种样本唯一的区别在于Manager ID和僵尸主机的`MainToken`。
![图 12: Sender ID检查](图12.png)

下图展示了样本中的Manager用户名：
![图 13: Manager用户名](图13.png)

通过该用户名，研究人员找到了Telegram上的manager (botmaster)账户：
![图 14: Manager账户](图14.png)

#### Yara Rules
```yara
rule HeroRAT {
    meta:
        description = "Yara Rule to individuate some samples of HeroRAT Android malware"
        author = "CSE CybSec Enterprise - ZLab"
        last_updated = "2018-07-31"
        tlp = "white"
        category = "informational"

    strings:
        $a = "assemblies/TeleSharp.dll"
        $b = "assemblies/Mono.Android.dll"
        $c = {49 64 00 67 65 74 5F 4D 79 4D 61 6E 61 67 65 72}
        $d = {52 65 70 6C 79 4D 65 73 73 49 64 00 73 65 74 5F 43 68 61 74 49 64}

    condition:
        $a and $b and ($c or $d)
}
```

以上是对HeroRAT恶意软件的详细分析。希望这份报告能帮助安全研究人员更好地理解和应对这种新型威胁。