Figure 5. Design space for simple randomization (p1  1). System
with one billion users, two-level tree. Values are averaged over 100k
simulations each.
Selective randomization provides more points in the
design space, many of which are more useful than those
provided by simple randomization. We calculated the
amounts of entropy that
the selective randomization
preserves and simulated the expected cost for many
choices of p1 and p2. The resulting options of additional
cost versus decreased information leakage is depicted in
Figure 6. The design space includes one design point,
th as much infor-
p1  08 p2  025, where only 1
50
mation is leaked when compared to the deterministic
tree (i.e., information leakage is 98% lower) and cost
increases 22 times; another design point, p1  08 p2 
th of its
035, decreases information leakage to
original value and increases cost by a factor of 304.
2500
1
Design space for selective randomization. Each cross
Figure 6.
corresponds to one p1 p2 choice. The lower line corresponds to
p1  08 and various choices for p2, while the upper line corresponds
to the simple randomization (p1  1). System with one billion users,
two-level tree. Values are averaged over 100k simulations each.
B. Closed-Form Analysis
To ﬁnd the overall cost of an identiﬁcation, we
calculate the number of leaf groups that need to be
evaluated until the correct leaf group is found. Note,
that we are not considering the small cost of evaluating
525
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:25 UTC from IEEE Xplore.  Restrictions apply. 
0x 500x 1000x 1500x 2000x 0% 10% 20% 30% 40% Workload (relative) Information Leakage (relative) !!"#$!%&!!"#$!&!!"#$’&0x 200x 400x 600x 800x 1000x 0% 1% 2% 3% 4% 5% Workload (realtive) Information Leakage (relative) p2=0.25  p2=0.3  p2=0.35  p1=0.8 simple randomization (p1=1.0) hash functions such as HB protocols [10] that can
potentially build a very low-cost one-way function.
Public key cryptography that could also be used to
provide privacy compares unfavorably to all symmetric-
key alternatives (besides exceeding the implementation
cost of RFID tags). In comparison to symmetric one-
way functions, public key cryptography such as Elliptic
Curve Cryptography or RSA is much more expensive
in hardware. FPGA implementations of RSA are six to
seven orders of magnitude less efﬁcient per area and
time than symmetric-key alternatives [20]. On the other
hand, only a single RSA operation is required for each
identiﬁcation.
A novel low-cost public key cipher speciﬁcally de-
signed for RFID is based on the Rabin scheme [17].
The scheme can be implemented on RFID tags much
smaller than alternatives like RSA while the server
cost is comparable to that of RSA. The implementation
size on an RFID tag is still much larger than that
of a one-way function as needed in our protocol. In
particular, the scheme requires a one-way function and
a random number generator as building blocks. The
scheme enables an elegant public key management, but
has higher implementation cost and server cost.
V. RELATED WORK
The challenge of scalable cryptography has previ-
ously been addressed in several contexts such as pre-
venting piracy in multicast networks such as Pay-TV.
Multicast security has a different threat model but is
conceptually close to the question we consider. For
one protocol based on a tree of secrets that allows for
counterfeit Pay-TV cards to be linked to the subscriber
that leaked access credentials, Poovendran and Baras
derive an optimal setup using an entropy-based metric
similar to the one we use [18].
Randomizing user responses was previously used to
achieve privacy in RFID systems by the HB family
of protocols that were originally developed by Hopper
and Blum to support authentication by humans without
computer assistance [8]. These protocols use only very
basic mathematical operations to create a hash function
and achieve one-wayness by randomly ﬂipping some of
the response bits. The security of the HB hash functions
relies on the hardness of the learning parity with noise
(LPN) problem that has not conclusively been shown to
be hard. A ﬁrst attempt to make the HB protocols secure
against active attackers was proved secure in a limited
attacker model [10], but later shown to be vulnerable
against very practical attacks that are outside of the
scope of the proofs [4].
None of the existing attacks, however, apply to the
use of hash function in our protocol and to private
identiﬁcation protocols in general where the hash input
is randomly chosen by the user and therefore cannot
be inﬂuenced by an attacker. Improved variants of the
function have been proposed that also defeat
these
attacks [13][5]. Since HB hash functions only require
very basic arithmetic operations,
the implementation
overhead on an RFID tag is virtually zero. All of the HB
protocol variants, however, require a signiﬁcant number
of rounds for each hashing operation and hence have
a high communication overhead. This overhead may
be acceptable in applications such as building access
control where identiﬁcation can take up to a second,
but is not acceptable for item-level product tags. Using
an HB hash function in our protocol leads to a very
low-cost identiﬁcation protocol for RFIDs.
VI. CONCLUSIONS
The proliferation of tiny devices incorporating unique
identities with limited computing capabilities motivates
the need for cheap private identiﬁcation protocols. We
present one such protocol
that can be implemented
cheaply on small devices. The randomization of user
responses in our protocol provides an effective design
trade-off that lowers the amount of information leak-
age in exchange for a reasonable increase in server
workload. Levels of information leakage close to zero
can be achieved at modest server cost (i.e., 99.8%
privacy increase at 150x cost increase), while staying
much below the cost of alternatives such as public-key
protocols.
REFERENCES
[1] Gildas Avoine and Tam´as Holczer Istv´an Vajda
Levente Butty´an. Group-Based Private Authentication.
In International Workshop on Trust, Security, and
Privacy for Ubiquitous Computing, 2007.
[2] Gildas Avoine and Philippe Oechslin. RFID
Traceability: A Multilayer Problem. In Financial
Cryptography, 2005.
[3] Daniel Bailey, Dan Boneh, Eu-Jin Goh, and Ari Juels.
Covert Channels in Privacy-Preserving Identiﬁcation
Systems. In ACM Computer and Communications
Security Conference (CCS), 2007.
[4] Henri Gilbert, Matthew Robshaw, and Herv´e Sibert.
An Active Attack Against HB+ - A provably Secure
Lightweight Authentication Protocol. In IEE Electronic
Letters, 2005.
[5] Henri Gilbert, Matthew J.B. Robshaw, and Yannick
Seurin. HB#: Increasing the Security and Efﬁciency of
HB+. In EuroCrypt, 2008.
[6] Luca Henzen, Flavio Carbognani, JPA, Sean O’Neil,
and Wolfgang Fichtner. Vlsi implementations of the
cryptographic hash functions md6 and irrupt. In IEEE
ISCAS, 2009.
526
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:25 UTC from IEEE Xplore.  Restrictions apply. 
[7] Thomas Heydt-Benjamin, Daniel Bailey, Kevin Fu, Ari
Juels, and Tom O’Hare. Vulnerabilities in
First-Generation RFID-enabled Credit Cards. In
International Conference on Financial Cryptography
and Data Security, 2007.
[8] Nicholas J. Hopper and Manuel Blum. A Secure
Human-Computer Authentication Scheme. In
ASIACRYPT, 2001.
[9] Xu Huang. Quantifying Information Leakage in RFID
Systems. In 10th International Conference on
Advanced Communication Technology, 2008.
[10] Ari Juels and Stephen Weis. Authenticating Pervasive
Devices with Human Protocols. In Advances in
Cryptology (CRYPTO), 2005.
[11] Tam´as Holczer Istv´an Vajda Levente Butty´an. Optimal
Key-Trees for Tree-Based Private Authentication. In
Workshop on Privacy Enhancing Technologies (PET),
2006.
[12] David Molnar and David Wagner. Privacy and Security
in Library RFID: Issues, Practices, and Architectures.
In ACM Computer and Communications Security
Conference (CCS), 2004.
[13] J. Munilla and A. Peinado. HB-MP: A Further Step in
the HB-family of Lightweight Authentication Protocols.
In Computer Networks: The International Journal of
Computer and Telecommunications Networking, 2007.
[14] Karsten Nohl and David Evans. Quantifying
Information Leakage in Tree-Based Hash Protocols. In
International Conference on Information and
Communications Security (ICICS), 2006.
[15] Karsten Nohl and David Evans. Hiding in Groups: On
the Expressiveness of Privacy Distributions. In
International Information Security Conference (SEC),
2008.
[16] Miyako Ohkubo, Koutarou Suzuki, and Shingo
Kinoshita. Cryptographic Approach to
“Privacy-Friendly” Tags. In RFID Privacy Workshop,
2003.
[17] Yossef Oren and Martin Feldhofer. A Low-Resource
Public-Key Identiﬁcation Scheme for RFID Tags and
Sensor Nodes. In Second ACM Conference on Wireless
Network Security, WiSec, 2009.
[18] Radha Poovendran and John S. Baras. An
Information-Theoretic Approach for Design and
Analysis of Rooted-Tree-Based Multicast Key
Management Schemes. In IEEE Transactions on
Information Theory, 2001.
[19] T. Scott Saponas, Jonathan Lester, Carl Hartung, and
Tadayoshi Kohno. Devices That Tell On You: The
Nike+iPod Sport Kit. Technical Report 2006-12-06,
University of Washington, 2006.
[20] Helion Technology. RSA and Modular Exponentiation
Cores. www.heliontech.com/modexp.htm, 2009.
[21] Helion Technology. SHA-1 Hashing Cores.
http://www.heliontech.com/sha1.htm, 2009.
[22] Stephen Weis, Sanjay Sarma, Ronald Rivest, and
Daniel Engels. Security and Privacy Aspects of
Low-Cost Radio Frequency Identiﬁcation Systems. In
International Conference on Security in Pervasive
Computing, 2003.
APPENDIX: PROOF OF TAG ENTROPY THEORY
Theorem: The average entropy of tags in the random-
ized tree protocol as seen by an attacker is:
E  log Nࢤlog klog k  rࢤ 1ࢤ
r
k  rࢤ 1
log r
Proof: Information leakage is deﬁned as the av-
erage amount of lost entropy in the distribution of
probabilities with which different users could have
generated a given response. In the linear hash protocol
and in public key protocols, this entropy is logN and
the information leakage is virtually zero because all
users could have generated a response with probability
very close to 1
N , where N is the number of users in
the system. For the deterministic tree protocol with
two levels of secrets, the ﬁrst of which is completely
disclosed to an attacker, the entropy is logN ࢤlogk and
the information leakage is logk, where k is the number
of branches of the ﬁrst tree level.
In the randomized protocol, an attacker never learns
the exact branch a user resides in but rather a probability
distribution over the different branches as was illustrated
in Figure 1. On average, the correct branch will have
a higher probability than any of the wrong branches
(which all have the same probability). The amount of
lost entropy (i.e., information leakage) only depends on
the difference of these two probabilities and the tree
parameters N and k.
The entropy of the overall distribution is the weighted
sum of the entropies of the tree branch that contains the
user (E1) and of all other branches (E2):
E1  ࢤa1  loga1 E2  ࢤa2  loga2
r 
a1
a2
krࢤ1  log r
E  N
k  E1  N 1ࢤ 1
krࢤ1  1
 ࢤlog 1
 E2
  r
k
k log a1ࢤ log a1ࢤ r
krࢤ1  log r
N 
 k
 ࢤlog a1  r
krࢤ1  log r
kࢤrࢤ1
 log Nࢤ log k  log k  rࢤ 1ࢤ r
k
k log r a1
527
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:09:25 UTC from IEEE Xplore.  Restrictions apply.