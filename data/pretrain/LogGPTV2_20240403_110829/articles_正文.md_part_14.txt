| 监控要素    | 需求设置                                               |
+=============+========================================================+
| 检测频率    | 定时：10分钟                                           |
|             |                                                        |
|             | Crontab：0 0/10 \* \* \* ?                             |
+-------------+--------------------------------------------------------+
| 目标日志    | request.log                                            |
+-------------+--------------------------------------------------------+
| 查询语句    | \* \| stats count(value(\'status_code\') \>= 404)      |
|             |                                                        |
|             | （说明                                                 |
|             | ：字段名为status_code，比较操作符为\>=，条件值为404）  |
+-------------+--------------------------------------------------------+
| 时间区间    | 30分钟                                                 |
+-------------+--------------------------------------------------------+
| 触发条件    | 次数比较操作符：\>                                     |
|             |                                                        |
|             | 次数阈值：10                                           |
|             |                                                        |
|             | 级别：中                                               |
+-------------+--------------------------------------------------------+
### 8.3.4 基线对比类型的告警监控
基线对比是将当前数据与历史数据进行对比，需要指定查询数据的时间范围和历史数据的基准时刻，如时间范围是1天，基准时刻是1周前，则历史数据的时间区间是历史基准时刻的1天前至历史基准时刻，而当前数据的时间区间是1天前至当前时刻。基线值就是历史数据的统计值，通常采用历史数据的平均值，该值随时间变化。在基线值的基础上，还需要设置一个基线阈值区间，即数值升高或降低的幅度比例；以及设置一个比较操作符，如大于、小于、在区间内、在区间外等。如果当前数据的统计值落在历史数据的基线阈值区间内，就触发告警。这种告警监控通过和系统自身的数据进行对比，发现异常情况，更具参考价值。
告警需求：解析日志sys.log并提取出cpu字段和字段值，cpu字段代表应用程序的CPU使用率，需要每天0点进行检测，如果近1天的CPU平均使用率比7天前的CPU平均使用率上下浮动超过20%，就触发中级告警。
相关示例见表8-5。
表8-5 基线对比类型的告警监控示例
+------------+---------------------------------------------------------+
| 监控要素   | 需求设置                                                |
+============+=========================================================+
| 检测频率   | Crontab：0 0 0 \* \* ?                                  |
|            |                                                         |
|            | （说明：每天0点进行检测）                               |
+------------+---------------------------------------------------------+
| 目标日志   | sys.log                                                 |
+------------+---------------------------------------------------------+
| 查询语句   | (\* \| stats avg(\'cpu\') AND timestamp=now) / (\* \|   |
|            | stats avg(\'cpu\') AND timestamp=now-7d)                |
|            |                                                         |
|            | （说明：以当前时间为基                                  |
|            | 准的CPU平均使用率除以以历史时间为基准的CPU平均使用率）  |
+------------+---------------------------------------------------------+
| 时间区间   | 1天                                                     |
+------------+---------------------------------------------------------+
| 触发条件   | 比较操作符：在区间外                                    |
|            |                                                         |
|            | 基线阈值区间：80%～120%                                 |
|            |                                                         |
|            | 级别：中                                                |
+------------+---------------------------------------------------------+
### 8.3.5 自定义统计类型的告警监控
自定义统计类型的告警监控可以根据用户需求，设置查询统计的方式，提高了搜索的灵活性。用户可以根据实际需求设置统计内容和比较方式，如可以将已有的关键字或字段组合为一个新的字段并赋予它一个新的名称，然后对新字段进行统计比对，一旦达到阈值条件，即触发告警。
告警需求：解析日志sys.log并提取出ip字段和字段值，ip字段代表发送请求时在多节点中最终选取的节点的IP地址。需要每小时监测一次，统计在1小时内不同IP地址的选取次数，如果某个IP地址的选取次数达到1
000次，表明负载过高，就触发低级告警。
相关示例见表8-6。
表8-6 自定义统计类型的告警监控示例
+-------------+--------------------------------------------------------+
| 监控要素    | 需求设置                                               |
+=============+========================================================+
| 检测频率    | 定时：1小时                                            |
|             |                                                        |
|             | Crontab：0 0 0/1 \* \* ?                               |
+-------------+--------------------------------------------------------+
| 目标日志    | sys.log                                                |
+-------------+--------------------------------------------------------+
| 查询语句    | \* \| stats count() as ip_count by ip                  |
|             |                                                        |
|             | （说明：根据不同的ip统计                               |
|             | 相应的选取次数ip_count，结果是一个列表，需要将表中的数 |
|             | 据逐一与阈值进行比较，或者找出最大值后与阈值进行比较） |
+-------------+--------------------------------------------------------+
| 时间区间    | 1小时                                                  |
+-------------+--------------------------------------------------------+
| 触发条件    | 比较操作符：\>=                                        |
|             |                                                        |
|             | 阈值：1000                                             |
|             |                                                        |
|             | 级别：低                                               |
+-------------+--------------------------------------------------------+
### 8.3.6 智能告警
智能告警是指通过机器学习等方法，对某系统中大量的告警触发实例进行学习，过滤不重要的信息，将相关联的事件聚类，并在众多事件中识别根因问题，从而预测即将触发的告警。这实际上是一种基于过往经验教训，对未来进行预测的手段。
## 8.4 告警方式
### 8.4.1 告警发送方式
在告警触发后，如何及时、有效地通知运维人员呢？这就涉及告警发送方式。告警发送方式有很多种，并且在不断发展变化。
1\. 普通告警发送方式
普通告警发送方式有电子邮件通知、短信通知、电话通知等。这类告警发送方式应用广泛，这和电子邮件及手机高度普及密不可分。如图8-1和图8-2所示为电子邮件告警示例。
![pasted-image.png](media/image18.png){width="4.4582688101487316in"
height="2.9642989938757656in"}
图8-1 电子邮件告警示例1
![pasted-image.png](media/image19.png){width="4.3882622484689415in"
height="3.940669291338583in"}
图8-2 电子邮件告警示例2
2\. 对接第三方平台的告警发送方式
如今，各种社交软件和办公软件如雨后春笋般出现，如QQ、微信、钉钉等，这些第三方平台也成为用户接收告警信息的渠道。第三方平台通常都提供鉴权和操作API以供外部调用，可以使用这些API进行消息发送。如图8-3所示为微信告警示例。
![pasted-image.jpeg](media/image20.jpeg){width="1.5078740157480315in"
height="2.673228346456693in"}
图8-3 微信告警示例
3\. 对接客户系统的告警发送方式
有些客户，通常是大客户，拥有自己的内部系统且部署在内网中。这类客户通常要求将日志系统触发的告警转发到自己的系统中进行处理。在这种情况下，通常会以JSON的形式将告警信息转发到客户自己的系统中。如图8-4所示为告警信息转发示例。
![pasted-image.png](media/image21.png){width="2.9793700787401574in"
height="3.21582895888014in"}
图8-4 告警信息转发示例
4\. 写入Syslog的告警发送方式
很多客户采集Syslog中的日志做分析，或者使用本地日志。在这种情况下，需要把触发的告警信息写入客户机器上的Syslog中。这也是告警发送方式中较常用的一种。如图8-5所示为在Rsyslog中写入告警信息的示例。
![](media/image12.tiff){width="5.788194444444445in"
height="0.30972222222222223in"}
图8-5 在Rsyslog中写入告警信息的示例
### 8.4.2 告警抑制和恢复
告警有时比较频繁，还会出现大量重复信息。对运维人员来说，在紧张地处理问题的过程中，不断收到相同的告警信息，也是一件恼人的事情。这些告警信息是同一个故障问题未解决时多次触发的。运维人员只需要知道这个故障告警被触发了，并不需要不间断地被叨扰。在这种情况下，出现了告警抑制和恢复的概念。
告警抑制是指在同一告警被触发的过程中，限制告警信息发送次数。例如，在30分钟之内，对于被触发的同一告警，只发送一次告警信息。还可以设置抑制翻倍。例如，对于上述告警，如果设置了抑制翻倍，那么第二次发送告警信息的时间间隔就是60分钟。
告警恢复是指在触发同一告警的故障被修复后，就不再产生告警。通常告警恢复也需要发送消息，以通知用户故障解除。
### 8.4.3 告警的插件化管理
以上简要介绍了一些常用的告警发送方式。但是，有很多需求还涉及告警触发之后的数据处理，或者要求对同一告警配置多种不同的发送方式。在这种情况下，采用插件化管理是一个不错的选择。针对不同用户对告警发送的不同需求，提供一定的接口和方法供用户调用，这样用户就可以配备不同的插件以满足自身需求。
## 8.5 小结
本章着重介绍了日志告警的相关内容。通过了解监控告警的种类和告警方式，可以更加清楚日志的作用是什么，以及如何通过日志对数据进行分析。
第9章 日志可视化
>  概述
>
>  可视化分析
>
>  图表详解
>
>  日志可视化案例
>
>  小结
## 9.1 概述
大数据是近年来的发展热点，数据可视化也被频频提及。数据可视化主要是指将原生数据以更易于被视觉感知的图形图像方式展现出来。
日志可视化，即将日志以更高效、直观、清晰、便捷的可视化方式呈现。
日志作为大数据的重要来源，在可视化方面有着自己独特的优势。日志种类众多，在展示上更加多样化；基于实时的日志数据可实现更加准确的数据分析；可视化还可与钻取、跳转到搜索页结合使用，降低数据交互难度。
## 9.2 可视化分析
### 9.2.1 初识可视化
下面以一条常见的
Nginx日志为例，其中包含客户端IP地址、访问时间、请求、状态等重要信息。
[219.137.142.229 - - \[25/J]{.smallcaps}an[/2018:23:37:41 +0800\] \"GET
/]{.smallcaps}api**[/]{.smallcaps}**v[0/]{.smallcaps}upload[/ HTTP/1.1\"
200 184]{.smallcaps}
[\"]{.smallcaps}https**[://]{.smallcaps}**oaksec.u.com**[/]{.smallcaps}**sources**[/]{.smallcaps}**input**[/]{.smallcaps}**ssa[**/**\"
\"M]{.smallcaps}ozilla[**/**5.0 (W]{.smallcaps}indows [NT
6.1;WOW64;]{.smallcaps}rv[:57.0)G]{.smallcaps}ecko[**/**201101
F]{.smallcaps}irefox[**/**57.0\" \"-\" 0.140 0.140]{.smallcaps}
上述日志中各字段的名称如图9-1所示。
![](media/image22.png){width="4.015305118110236in"
height="2.447400481189851in"}
图9-1 示例日志中各字段的名称
Nginx日志字段名称及含义见表9-1。
表9-1 Nginx日志字段名称及含义
  --------------------------- ----------------------------------------------
  字段名称                    含义
  remote_addr                 客户端IP地址
  remote_user                 客户端用户名称
  time_local                  访问时间和时区
  request                     请求的URL和HTTP协议
  http_host                   请求地址，即浏览器中输入的地址（IP或域名）
  status                      HTTP请求状态
  upstream_status             upstream状态
  body_bytes_sent             发送给客户端的文件大小
  http_referer                URL跳转来源
  http_user_agent             客户端浏览器相关信息
  ssl_protocol                SSL协议版本
  ssl_cipher                  交换数据中的算法