# Checklist
  * I have verified that the issue exists against the `main` branch of Celery.
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the main branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `main` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Environment & Settings
**Celery version** : 5.2.7
**`celery report` Output:** ` import os from celery import Celery
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'proj.settings')
`
`app = Celery('proj')  
app.conf.update({  
'broker_url': 'redis://localhost:8000/11',  
'result_backend': 'django-db',  
'accept_content': ['json'],  
'task_serializer': 'json',  
'result_serializer': 'json',  
'worker_force_execv': True,  
'worker_concurrency': 10,  
'task_time_limit': 60 * 60,  
'worker_max_tasks_per_child': 200,  
'beat_tz_aware': False,  
'result_extended': True,  
})  
app.conf.timezone = 'Asia/Shanghai'  
app.conf.enable_utc = False  
app.autodiscover_tasks()  
`
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : 3.8.6
  * **Minimal Celery Version** : 5.2.7
  * **Minimal OS and/or Kernel Version** : CentOS Linux release 7.9.2009 (Core)
### Python Packages
**`pip freeze` Output:** ` aioredis==1.3.1 amqp==5.1.1 ansible-runner==2.2.0
asgiref==3.5.2 async-timeout==4.0.2 attrs==21.4.0 autobahn==22.5.1
Automat==20.2.0 backports.zoneinfo==0.2.1 billiard==3.6.4.0 celery==5.2.7
certifi==2022.6.15 cffi==1.15.0 channels==3.0.4 channels-redis==3.4.0 charset-
normalizer==2.1.0 click==8.1.3 click-didyoumean==0.3.0 click-plugins==1.1.1
click-repl==0.2.0 constantly==15.1.0 cron-descriptor==1.3.0
cryptography==37.0.2 cx-Oracle==8.3.0 daphne==3.0.2 Deprecated==1.2.13
Django==4.0.5 django-celery-beat==2.5.0 django-celery-results==2.5.1 django-
cors-headers==3.13.0 django-redis==5.2.0 django-simpleui==2023.3.1 django-
timezone-field==5.0 djangorestframework==3.14.0 djangorestframework-
simplejwt==5.2.2 docopt==0.6.2 docutils==0.18.1 flower==1.2.0 hiredis==2.0.0
humanize==4.6.0 hyperlink==21.0.0 idna==3.3 incremental==21.3.0 kombu==5.2.4
ldap3==2.9.1 lockfile==0.12.2 msgpack==1.0.4 mysqlclient==2.1.0
packaging==21.3 pexpect==4.8.0 pipreqs==0.4.11 prometheus-client==0.16.0
prompt-toolkit==3.0.29 ptyprocess==0.7.0 pyasn1==0.4.8 pyasn1-modules==0.2.8
pycparser==2.21 PyJWT==2.6.0 pyOpenSSL==22.0.0 pyparsing==3.0.9 python-
crontab==2.6.0 python-daemon==2.3.0 python-dateutil==2.8.2 pytz==2022.1
PyYAML==6.0 redis==4.3.3 requests==2.28.1 service-identity==21.1.0 six==1.16.0
sqlparse==0.4.2 supervisor==4.2.4 tornado==6.3.1 Twisted==22.4.0 txaio==22.2.1
typing_extensions==4.2.0 tzdata==2022.2 urllib3==1.26.9 vine==5.0.0
wcwidth==0.2.5 wrapt==1.14.1 yapf==0.32.0 yarg==0.1.9 zope.interface==5.4.0 `
Steps to reproduce
  1. Start Celery with the following configuration:
    #proj/celery.py
    import os
    from celery import Celery
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'proj.settings')
    app = Celery('proj')
    app.conf.update({
        'broker_url': 'redis://localhost:8000/11',
        'result_backend': 'django-db',
        'accept_content': ['json'],
        'task_serializer': 'json',
        'result_serializer': 'json',
        'worker_force_execv': True,
        'worker_concurrency': 10,
        'task_time_limit': 60 * 60,
        'worker_max_tasks_per_child': 200,
        'beat_tz_aware': False,
        'result_extended': True,
    })
    app.conf.timezone = 'Asia/Shanghai'
    app.conf.enable_utc = False
    app.autodiscover_tasks()
  2. Add a task to the app:
    # myapp/tasks.py
    from proj.celery import app
    @app.task
    def add():
        print('aa')
  3. Attempt to call the task with the following code:
    # myapp/views.py
    def task_page(request):
        from dbaOps.celery import app
        print(app.tasks.keys())
        return render(request, 'myapp/tasks.html')
Expected behavior  
The task myapp.tasks.add should be listed in the output of app.tasks.keys().
Actual Behavior  
The task myapp.tasks.add does not appear in the output of app.tasks.keys().
However, when I modify the import statement in views.py to from myapp.tasks
import app, the task does appear in the list.
    # myapp/views.py
    def task_page(request):
        from myapp.tasks import app
        print(app.tasks.keys())
        return render(request, 'myapp/tasks.html')
I would appreciate any help in understanding why this is happening and how to
resolve it. Thank you!
Related Issues and Possible Duplicates  
Related Issues  
None  
Possible Duplicates  
None