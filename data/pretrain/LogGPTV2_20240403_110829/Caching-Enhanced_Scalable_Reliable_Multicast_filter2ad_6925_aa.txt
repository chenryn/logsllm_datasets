# Caching-Enhanced Scalable Reliable Multicast

**Authors:**
- Carolos Livadas, BBN Technologies
- Idit Keidar, Department of Electrical Engineering, Technion

## Abstract
We introduce the Caching-Enhanced Scalable Reliable Multicast (CESRM) protocol, which enhances the Scalable Reliable Multicast (SRM) protocol [4, 5] with a caching-based expedited recovery mechanism. CESRM leverages the locality of packet losses in IP multicast transmissions to expedite recovery by reusing recent loss recovery decisions. Simulation results show that CESRM reduces the average recovery latency of SRM by approximately 50% and significantly decreases the overhead in terms of recovery traffic and control messages.

## 1. Introduction
Developing scalable and reliable multicast protocols is challenging due to the need to handle large multicast groups, dynamic memberships, and changing network conditions while minimizing recovery overhead. Several retransmission-based reliable multicast protocols [5, 7–9, 13, 14], including the seminal Scalable Reliable Multicast (SRM) protocol [4, 5], have been designed to address these challenges. These protocols use retransmissions to recover from packet losses. In SRM, when a receiver detects a loss (e.g., by observing a sequence number gap), it multicasts a retransmission request. Any group member that has the requested packet can retransmit it using multicast. To minimize the number of requests and replies, SRM employs a suppression mechanism that delays the transmission of requests and replies, leading to a delay in loss recovery by several network round-trip times.

All previously known retransmission-based protocols, including SRM, treat each packet loss independently and repeat the recovery process for each loss. Our work is motivated by the observation that packet losses in IP multicast are not independent [1, 6, 15–17]. Therefore, in SRM, there is no need to repeat the suppression mechanism for each loss. Instead, the recovery of later losses can be expedited based on decisions made during the recovery of earlier ones.

We present the Caching-Enhanced Scalable Reliable Multicast (CESRM) protocol, which augments SRM's functionality with a caching-based expedited recovery scheme. CESRM operates in parallel with SRM's recovery scheme. Each receiver caches the requestor/replier pairs involved in the recovery of recent losses and uses this information to select an appropriate pair for expeditious recovery. Upon detecting a loss, if a receiver considers itself the expeditious requestor, it immediately unicasts an expedited request to the expeditious replier, which then multicasts the requested packet. This results in faster recovery compared to SRM. If the expedited recovery fails, CESRM falls back to SRM's usual recovery scheme.

Like SRM, CESRM is an end-to-end protocol that does not require intelligent network support beyond IP multicast. However, we also present a router-assisted version of CESRM that exploits enhanced router capabilities, if available, to achieve localized recovery. The router-assisted version of CESRM is more lightweight than other router-assisted protocols, requiring less functionality in the underlying routers.

Trace-driven simulations show that CESRM reduces the average recovery time of SRM by approximately 50% and sends fewer retransmissions (between 30% and 80% of those sent by SRM). Additionally, CESRM sends roughly the same number of control packets as SRM, but a larger percentage of these are unicast, resulting in significantly lower overhead.

This paper is organized as follows: Section 2 provides an overview of SRM, Section 3 details CESRM, and Section 4 evaluates CESRM's performance through trace-driven simulations. Finally, Section 5 concludes the paper.

## 2. Scalable Reliable Multicast
### 2.1 Overview
Scalable Reliable Multicast (SRM) is an application-layer protocol built on top of the IP multicast best-effort communication primitive [4, 5]. SRM consists of two main components: session message exchange and packet loss recovery.

#### 2.1.1 Session Message Exchange
Hosts in the multicast group exchange session messages to estimate their inter-host distances, quantified by one-way transmission latencies. Session messages also assist in detecting packet losses by including information about received packets. Detailed descriptions of this aspect can be found in [4, 5, 10, 11].

#### 2.1.2 Packet Loss Recovery
SRM's packet loss recovery is receiver-based. A receiver detects a loss either by noticing a gap in the sequence numbers or by learning from a session message that another receiver has received the missing packet. Upon detecting a loss, the receiver initiates the loss recovery process, which is divided into asynchronous rounds. Each round involves a repair request and a repair reply. Requests and replies are sent using IP multicast, and SRM uses a suppression mechanism to minimize the number of requests and replies. This mechanism delays the transmission of requests and replies and suppresses them if similar requests or replies are received from other hosts.

### 2.2 Scheduling Repair Requests
SRM uses deterministic and probabilistic suppression techniques. Deterministic suppression schedules request times proportionately to the distance from the source, giving closer hosts a better chance to suppress their descendants. Probabilistic suppression schedules request times randomly within a specific interval, allowing equidistant hosts to probabilistically suppress each other. Parameters \(C1\) and \(C2\) control the aggressiveness of deterministic and probabilistic suppression, respectively.

Upon detecting a packet loss, a host schedules a request by setting a timeout timer to a value uniformly chosen within the interval \([C1 \cdot \hat{d}_{hs}, (C1 + C2) \cdot \hat{d}_{hs}]\), where \(\hat{d}_{hs}\) is the host's distance estimate to the source. If the host receives a request for the same packet, it reschedules its request to the next recovery round. SRM also designates a back-off abstinence period to prevent multiple back-offs in the same recovery round.

### 2.3 Scheduling Repair Replies
Replies are scheduled similarly to requests, using deterministic and probabilistic suppression. Parameters \(D1\) and \(D2\) control the scheduling of replies. When a host receives a repair request, it sets a reply timeout timer to a value uniformly chosen within the interval \([D1 \cdot \hat{d}_{hh'}, (D1 + D2) \cdot \hat{d}_{hh'}]\), where \(\hat{d}_{hh'}\) is the host's distance estimate to the requestor. If a reply is received while a scheduled reply is pending, the scheduled reply is canceled. A reply abstinence period prevents duplicate replies.

## 3. Caching-Enhanced Scalable Reliable Multicast (CESRM)
CESRM extends SRM with a caching-based expedited recovery scheme. Hosts cache the requestor/replier pairs involved in the recovery of recent losses and use this information to expedite the recovery of new losses. Expedited recoveries are not delayed for suppression, resulting in minimal recovery latency. If expedited recovery fails, CESRM falls back to SRM's usual recovery scheme.

### 3.1 Caching Requestor/Replier Pairs
Each host maintains a per-source cache of requestor/replier pairs. For simplicity, we describe the protocol for a single-source IP multicast, where each receiver maintains a single cache for the source. The cache contains tuples of the form \((i, q, \hat{d}_{qs}, r, \hat{d}_{rq})\), where \(i\) is the packet sequence number, \(q\) is the requestor, \(\hat{d}_{qs}\) is the requestor's distance to the source, \(r\) is the replier, and \(\hat{d}_{rq}\) is the replier's distance to the requestor. The optimal requestor/replier pair is cached, defined as the pair that affords the minimum recovery delay, calculated as \(\hat{d}_{qs} + 2 \cdot \hat{d}_{rq}\).

### 3.2 Expedited Recoveries
Upon detecting a packet loss, a host schedules a request using SRM's mechanism and consults its cache to determine if it should act as the expeditious requestor. The host selects the most appropriate requestor/replier pair based on policies such as the most recent loss or the most frequent loss. If the host is the expeditious requestor, it schedules an expedited request after a REORDER-DELAY to prevent extraneous requests due to packet reordering. If the packet is received before the expedited request, the request is canceled. Otherwise, the host unicasts the expedited request to the expeditious replier, which then multicasts the packet if it has it and no other reply is pending.

### 3.3 Router-Assisted Local Recovery
CESRM can also exploit enhanced router functionalities to achieve localized recovery. Routers need only be augmented to annotate reply packets with their turning point routers and subcast expedited replies downstream. This approach is similar to the Light-weight Multicast Services (LMS) protocol [13], but without the need for routers to maintain replier state. CESRM's choice of repliers evolves dynamically with group membership changes, ensuring continued packet recovery even in highly dynamic environments.

## 4. Performance Evaluation
We evaluate CESRM's performance using trace-driven simulations. Our results show that CESRM reduces the average recovery time of SRM by approximately 50% and sends between 30% and 80% of the retransmissions sent by SRM. Additionally, CESRM sends roughly the same number of control packets as SRM, but a larger percentage of these are unicast, resulting in significantly lower overhead.

## 5. Conclusion
The Caching-Enhanced Scalable Reliable Multicast (CESRM) protocol enhances the Scalable Reliable Multicast (SRM) protocol with a caching-based expedited recovery mechanism. CESRM leverages the locality of packet losses to expedite recovery, resulting in reduced recovery latency and lower overhead. Trace-driven simulations demonstrate CESRM's superior performance compared to SRM. Future work will explore further optimizations and the integration of additional network support features.

---

**References:**
1. Reference 1
2. Reference 2
3. Reference 3
4. Floyd, S., Jacobson, V., Liu, C.-G., McCanne, S., & Zhang, L. (1997). A reliable multicast framework for light-weight sessions and application level framing. *Proceedings of the ACM SIGCOMM '97 Conference*.
5. Reference 5
6. Reference 6
7. Reference 7
8. Reference 8
9. Reference 9
10. Reference 10
11. Reference 11
12. Reference 12
13. Reference 13
14. Reference 14
15. Reference 15
16. Reference 16
17. Reference 17

---

**Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04)**
**0-7695-2052-9/04 $ 20.00 © 2004 IEEE**
**Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 11:50:28 UTC from IEEE Xplore. Restrictions apply.**