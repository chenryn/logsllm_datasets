### IX. PROPOSED FIX

#### A. Session Confusion and Race Conditions
The core issue in session confusion-based attacks is identity mis-binding, leading to race conditions where the intended session for each party is not reliably identified. This results in broader security implications, which are discussed in Section XI.

#### B. Proposed Fix: Tighter Session Binding
To prevent session confusion, we propose two primary approaches:
1. **Binding Identities to Messages**: Ensure that the identities of the intended parties are bound to each message throughout the protocol.
2. **One-to-One Mapping**: Establish a one-to-one mapping between high-level 5G-AKA sessions and internal AUSF ↔ ARPF sessions.

We recommend the second approach, as it not only prevents secrecy violations but also upholds stronger authentication properties compared to using the UE’s identity as the session ID.

**Formal Verification:**
We have formally verified that this solution prevents secrecy and various authentication violations. The full formal verification results are provided in Section IX-B.

**Detailed Implementation:**
- **Fresh Values in Auth-Info Request**: Include a unique, random value in the Auth-Info Request. The ARPF should include this value in the Auth-Info Response, and the AUSF should verify that they match.
- **Session Binding Across Boundaries**: To ensure consistent session binding across the SN / HN boundary (i.e., between the SEAF and AUSF), the SEAF should include a different fresh value in the 5G-AIR. The AUSF should include the same value in the 5G-AIA, and the SEAF should verify that they match.

This method binds the correct sessions to messages at each stage of the protocol, preventing session mis-binding attacks. We believe this modification will have a negligible impact on the protocol's efficiency.

#### C. Verification Results for the Proposed Fix
We have formally analyzed the 5G-AKA protocol with the proposed fix. Specifically, we included fresh values in the messages between the AUSF ↔ ARPF and SEAF ↔ AUSF. While our session-ID binding solution correctly fixes secrecy violations and many previous agreement violations, some properties, particularly from the UE's perspective, are still violated.

**Comparison with Previous Results:**
- **Secrecy Properties (Fix 1 + SNID fix):**
  - S1: Secrecy of the honest subscriber’s long-term key K.
  - S2: Secrecy of anchor keys KSEAF and KAUSF.

- **Authentication Properties (Fix 1 + SNID fix):**
  - A1: SN and UE agree on the identity of UE.
  - A2: UE and SN agree on the identity of SN.
  - A3: HN and SN agree on the identity of UE.
  - A4: UE and HN agree on the identity of HN.
  - A5: UE and HN agree on the identity of SN.
  - A6: UE, SN, and HN agree on KSEAF.
  - A7: Anchor key KSEAF must not be replayable.

With these fixes, we believe the 5G-AKA protocol now explicitly achieves all desired security properties in the symbolic model.

#### D. Alternative Fixes
We considered several alternative fixes, but they were either more complex or insufficient. For example:
- **Unique Nonces in Channels**: Adding unique nonces in other ways in the channels to solve the attack. However, this is likely to be implemented at a lower level due to engineering concerns.
- **Explicit Identity Binding**: Creating explicit identity binding rather than session binding. This would prevent identity mis-binding but not other agreement violations. Using the SUPI as a session ID value would not prevent confusion between sessions from the same SUPI, violating agreement on the resultant session key.

#### E. Session Binding Does Not Always Imply Security
It may seem that any solution to the race condition in the honest case would prevent the attack. However, this is not always true. An example of a solution that prevents honest session confusion but is still vulnerable to a variant of the attack is:

- **UE-Chosen Nonce**: Assume the standard required the UE to choose a fresh nonce and append it to the first message sent to the SEAF. If this nonce was then appended by all other parties, it would prevent honest session confusion. However, if the adversary can repeat a nonce sent by an honest UE or use the same nonce twice, the AUSF could use the same nonce for two separate requests to the ARPF, enabling response confusion.

Our proposed fix in Section IX-A relies on tighter session binding and ensures the adversary cannot control the session binding term, as the choice is made within the 5G core network.

### X. COMPROMISED CHANNELS AND COMPONENTS

#### A. Compromised Channel Modelling
We consider compromise of each 'secure' channel within the 5G Core Network, modeling both read-only and full Dolev-Yao-style channel compromise. We add new rules, `send_insecure` and `receive_insecure`, to create fine-grained channel access for the adversary. For read-only compromise, the `receive_insecure` rule is not included, so the adversary cannot inject or modify terms on the channel.

#### B. Compromised Component Modelling
We consider the compromise of one or more components within the protocol:
- **Compromise of SEAF and/or AUSF**: Before a protocol run, neither the SEAF nor AUSF has shared secrets. They rely on secure and authentic channel access. Compromising their secure network channel access is sufficient to impersonate them.
- **Compromise of UE and/or ARPF**: The UE and ARPF share secrets. Compromising the UE’s long-term key K is sufficient for the adversary to impersonate the UE. For the ARPF, compromising the initiating UE’s long-term key K and accessing the relevant secure network channel is sufficient.
- **Compromise of Other Components**: We consider two scenarios:
  - **All-X**: Compromising all components of type X.
  - **Not-My-X**: Compromising all components of type X except the one an honest actor believes they are communicating with.

#### C. Compromised Channels: Analysis and Results
- **No Compromise**: See Section VIII.
- **Read-Only Channels**:
  - (2a) SEAF ↔ AUSF channel readable by the adversary.
  - (2b) AUSF ↔ ARPF channel readable by the adversary.
  - (2c) Both channels readable by the adversary.
- **Dolev-Yao Channels**:
  - (3a) SEAF ↔ AUSF channel fully compromised.
  - (3b) AUSF ↔ ARPF channel fully compromised.
  - (3c) Both channels fully compromised.

**Results:**
- (2a, b, c) Read-only compromise causes all security properties to be violated except S1, A3, and A4.
- (3a) Full D-Y compromise of the SEAF ↔ AUSF channel causes all security properties to be violated except S1 and A4.
- (3b) D-Y compromise of the AUSF ↔ ARPF channel causes all security properties to be violated except S1 and A3.
- (3c) D-Y compromise of both channels causes all security properties to be violated except S1.

Even with strong session binding, D-Y or read-only compromise of any secure network channel involved in the 5G-AKA protocol is devastating for both secrecy and authentication, especially from the UE's perspective.

#### D. Compromised Components: Analysis and Results
- **All-X**:
  - (1) Compromising all SEAFs violates all security properties except S1 and A4.
  - (2) Compromising all AUSFs violates all security properties except S1 and A4.
  - (3) Compromising all ARPFs violates all security properties except S1 and A3.

- **Not-My-X**:
  - (1) Compromising all SEAFs apart from 'mine' does not violate any security properties when the SNID fix is adopted.
  - (2) Compromising all AUSFs apart from 'mine' violates all security properties except S1, S2, A3, and A4, though these violations are theoretical.
  - (3) Compromising all ARPFs apart from 'mine' does not violate any security properties.

In conclusion, compromising any 5G core network component used by 5G-AKA has a severely detrimental effect on the protocol's security properties.