resulting in a race condition, and the intended session for each
10
is not reliably identiﬁed. We discuss broader implications of
the discovered vulnerabilities in Section XI.
IX. PROPOSED FIX
The essence of the session confusion-based attacks is
identity mis-binding. This leads to two ways to prevent these
attacks: binding the identities of the intended parties to each
message all the way through the protocol, or ensuring a one-
to-one mapping between the high-level 5G-AKA sessions and
internal AUSF ↔ ARPF sessions. We propose the latter: while
both prevent the secrecy violation, we believe this approach
also upholds strictly stronger authentication properties than
using the UE’s identity as the session ID.
We have formally veriﬁed that this solution prevents the
secrecy violation and various authentication violations. We
provide full formal veriﬁcation results for this in Section IX-B.
A. Proposed ﬁx: tighter session binding
Session confusion is dependent on the ability of messages
between the AUSF and ARPF from one 5G-AKA session to
end up in that channel for another 5G-AKA session. Currently,
there is nothing in the speciﬁcation that prevents this. We
propose the following method to prevent this:
The protocol should include a fresh (unique, random)
value in Auth-Info Request. The ARPF should include
this in Auth-Info Response, and the AUSF should
check that they match. To ensure similar session binding
across the SN / HN boundary, i.e., between the SEAF and
AUSF, the SEAF should also include a different fresh value in
5G-AIR; the AUSF should include the same value in 5G-AIA;
the SEAF should then check that they match.
This successfully binds the correct sessions to messages
at each stage of the protocol, preventing session mis-binding
attacks from occurring. We believe that this modiﬁcation will
have a negligible impact on the efﬁciency of the protocol.
B. Veriﬁcation results for proposed ﬁx
We have formally analysed the properties of the 5G-AKA
protocol with the proposed ﬁx from Section IX-A. Speciﬁ-
cally, we include fresh values in the messages between the
AUSF ↔ ARPF and SEAF ↔ AUSF. While our session-ID
binding solution correctly ﬁxes the secrecy violations and many
of the previous agreement violations, some of the properties,
particularly from the point of the UE, are still violated.
We state changed results compared to those from Sec-
tion VIII. now with tighter session binding: properties S1 and
A3 are still upheld; S2, A1, and A4 are now also upheld.
S2. Secrecy of anchor keys KSEAF and KAUSF:
A1. SN and UE agree on the identity of UE:
A4. UE and HN agree on the identity of HN:
This is a distinct improvement on the results from Section VIII,
but due to the lack of agreement on the SNID, A2 and A5–A7
are still not achieved.



Agreement on the ID of
the SEAF: As discussed in
Section VIII-B, this is a violation of agreement over the identity
of the SNID, as the UE never learns this term in an authenticated
message. This causes agreement to fail on the term KSEAF, as
this term is derived by the UE from a series of terms including
SNID; the ARPF, AUSF, and SEAF will derive an anchor
key KSEAF on which the UE will not agree if the adversary
has injected an arbitrary SNID into the UE’s unauthenticated
serving network discovery phase.
Fix for SNID agreement violation, and veriﬁcation: To
correct this violation of agreement, we propose that the SNID
is added to the deﬁnition of the MAC (deﬁned in TS 33.102
[4]), as this is keyed by the long-term secret key, K. This would
redeﬁne the MAC to: MAC = f1(K, ) where it did not contain the ‘SNID’ term before. We
have formally veriﬁed that this minor change now allows
the 5G-AKA protocol to gain non-injective agreement on the
SEAF’s identity from the UE’s point of view, and both non-
injective and injective agreement on the KSEAF from the UE’s
point of view. We re-state the complete table of results from
the UE’s point of view with this ﬁnal ﬁx.
Secrecy properties under (Fix 1 + SNID ﬁx):
S1. Secrecy of honest subscriber’s long term key K:
S2. Secrecy of anchor keys KSEAF and KAUSF:
Authentication properties (Fix 1 + SNID ﬁx):
A1. SN and UE agree on the identity of UE:
A2. UE and SN agree on the identity of SN:
A3. HN and SN agree on the identity of UE:
A4. UE and HN agree on the identity of HN:
A5. UE and HN agree on the identity of SN:
A6. UE, SN, and HN agree on KSEAF:
A7. Anchor key KSEAF must not be replayable:
With these ﬁxes, we believe 5G-AKA now explicitly achieves
all of its desired security properties in the symbolic model.









C. Alternative ﬁxes
We have considered several alternative ﬁxes, but they all
seem either more complex or insufﬁcient. For example, one
might consider putting unique nonces in other ways in the
channels to solve this attack, especially since this is likely to
be implemented at a lower level due to engineering concerns.
Alternatively, one might create explicit identity binding, rather
than session binding. This would prevent the identity mis-
binding attack, but it would not prevent other agreement
violations. While the SUPI is globally unique, and hence
plausibly suitable as a session ID value, each session would
use the same ID, i.e., the SUPI. This does not prevent two
sessions from the same SUPI from becoming confused, which
would violate agreement on the resultant session key.
D. Session binding does not always imply security
It may be tempting to conclude that any solution to the
race condition (in the honest case) prevents the attack. It turns
out this is not the case. To prove this, we give an example of a
solution that succeeds in preventing honest session confusion,
and hence the race condition in the honest case, but is still
vulnerable to a variant of the described attack. The underlying
idea is that it is possible to prevent honest session confusion
in a way that can be subverted by an adversary.
11
Assume the standard required the UE to choose a fresh
nonce and append it to the ﬁrst message sent to the SEAF; this
otherwise contains the SUCI, SUPI, or 5G-GUTI. If this UE-
chosen nonce was then appended by all other parties (SEAF,
AUSF, and ARPF) to messages within this protocol run, this
would be sufﬁcient to prevent honest session confusion. (If the
ﬁrst message contained a SUCI or 5G-GUTI it would also not
reveal any information about the user’s identity.) The result
would be that without adversarial interference, each request
from the AUSF to the ARPF now uses a unique value, which
enables binding the response uniquely to the request.
This is not sufﬁcient to prevent the secrecy attack. If the
‘unique nonce’ is chosen by the UE, a variant of the attack is
still possible: the adversary can repeat a nonce sent by an honest
UE, or it can use the same nonce twice. This leads to the AUSF
using the same nonce for two separate requests to the ARPF,
which enables confusion of the responses. This improves the
probability of session confusion, as no other honest sessions
should accidentally become confused with these two.
Our proposed ﬁx in Section IX-A relies upon tighter session
binding, but avoids the above error by ensuring the adversary
cannot control the session binding term; the adversary cannot
inﬂuence it as the choice is made within the 5G core network.
There are many other engineering solutions which would
coincidentally prevent our attack, but we believe this demon-
strates that not all solutions to the problem of session confusion
necessarily prevent it. We believe this further demonstrates that
any solution required to prevent this attack must be mandated
by the protocol deﬁnition in the standard, and that security
critical details must not be left as an implementation decision.
X. COMPROMISED CHANNELS AND COMPONENTS
We now consider stronger adversary capabilities against
the previously secure channels and components: AStronger. All
of the following compromise of channels and components are
explicitly disallowed by the threat model within TS 33.501
(i.e., AStandard); these used to explore further the range of
security properties achieved by 5G-AKA in various compromise
scenarios. We now describe our modelling for compromised
channels and components, followed by analysis and results.
A. Compromised channel modelling
We consider compromise of each of the ‘secure’ channels
within the 5G Core Network. We model both read-only and
full ‘Dolev-Yao’-style channel compromise. We model this
automatically by adding to the previously described channel
communication rules: the deﬁnitions of send_secure and
receive_secure are still
they are also
joined by deﬁnitions for new rules, send_insecure and
receive_insecure (see [15]). These allow us to cre-
ate ﬁne-grained channel access for the adversary. For the
‘Read-Only’ compromise of channels, we do not include the
receive_insecure rule so the adversary cannot inject or
modify terms on the channel in question.
in place, but
These rules allow the adversary unrestricted ability to access
any arbitrary channel: we limit the adversary’s behaviour to
accessing only a particular type of channel through the use of
‘restrictions’, matching against speciﬁc channels.
B. Compromised component modelling
We consider the compromise of one or more components
within the protocol.
Compromise of the SEAF and/or AUSF: Before a protocol
run, neither the SEAF or AUSF has any shared secret with
each other, the UE, or the ARPF within the 5G-AKA protocol.
Instead, they leverage their secure and authentic channel access:
this is what prevents the adversary from impersonating them
to other actors within the 5G core network.
To ensure secure and authentic 5G core network access, the
SEAF, AUSF, and ARPF will necessarily have some shared
secret(s), but this is explicitly performed at a lower layer of
the 5G core network compared to the 5G-AKA protocol.
Without other shared secrets, for modelling purposes,
taking over a component’s secure network channel ac-
cess is sufﬁcient to fully impersonate the component; this
is the case for the SEAF and AUSF. This is achieved
through adding ‘component_compromised_send’ and
‘component_compromised_receive’ rules
to the
TAMARIN models. As with channels, we restrict which com-
ponents the adversary can compromise.
Compromise of the UE and/or ARPF: The UE and ARPF
explicitly share secrets in 5G-AKA. As the UE does not have
secure network access, it is sufﬁcient to give the adversary the
UE’s long-term key K. Within our models, to compromise the
ARPF, it is sufﬁcient to compromise the initiating UE’s long-
term key K in combination with giving the adversary access
to the relevant secure network channel.
Compromise of other components: We consider two main
component compromise strands: ﬁrst, if we compromise a
component of type X , we say the adversary can compromise
all components of type X ; e.g., allowing SEAF compromise
implies that all SEAFs can be compromised, whether these are
the ones in use by the particular run of the protocol which we
consider or not. We refer to this as “All-X ”.
Second, we consider the case where the adversary may
compromise all components of type X apart from “mine”, e.g.,
if an honest component such as the UE thinks it is talking to a
SEAF with identity ‘SNID’, then it really is, and the adversary
has not compromised this speciﬁc SEAF; the adversary can still
compromise any other SEAF. We refer to this as “Not-My-X ”.
The All-X scenario considers the importance of components
involved directly in the protocol; Not-My-X considers whether
an honest actor needs to trust all actors within the 5G core
network, or just the ones with whom it believes it is talking.
C. Compromised channels: analysis and results
Each channel-compromise threat model introduces new
challenges. The channel-compromise threat models which we
consider are: (1) No compromise (see Sections VII and VIII).
Read-only channels: (2a) SEAF ↔ AUSF channel is readable
by the adversary, (2b) AUSF ↔ ARPF channel is readable
by the adversary, (2c) Both channels are readable by the
adversary. Dolev-Yao channels: (3a) SEAF ↔ AUSF channel
is D-Y compromised, (3b) AUSF ↔ ARPF channel is D-Y
compromised, (3c) Both channels are D-Y compromised.
12
Compromised channel results: Compromising secure chan-
nels has broadly the expected effect. All results assume adoption
of the channel-session binding ﬁx. (1) See Section VIII for
‘no compromise’ results. (2a,b,c) Read-only compromise of
each of the SEAF ↔ AUSF channel, AUSF ↔ ARPF channel,
and both channels together causes all security properties to be
violated except S1, A3, and A4 (see Section IV). (3a) Full D-Y
(read/write) compromise of the SEAF ↔ AUSF channel causes
all security properties to be violated except S1 and A4. (3b)
D-Y compromise of the AUSF ↔ ARPF channel causes all
security properties to be violated except S1 and A3. (3c) D-Y-
style compromise of both secure channels causes all security
properties to be violated except S1.
Even with strong session binding, D-Y or read-only compro-
mise of any secure network channel involved in the 5G-AKA
protocol is devastating for both secrecy and authentication,
especially (and critically) from the UE’s point of view.
D. Compromised components: analysis and results
Achieving results in TAMARIN for compromised compo-
nents has proved more difﬁcult than the channel compromise
results, leading to fewer results terminating automatically. The
majority of the component compromise results were achieved
through manual direction of TAMARIN’s interactive mode, and
we provide descriptions of how to repeat these manual proofs
in the README associated with 5G-AKA.m4 [15]. Choice of
heuristic or manual intervention only affects termination and
the duration of computation, not the ﬁnal result.
Our ﬁrst scenario (All-X ) considers the importance of the
components involved directly in the protocol; the second (Not-
My-X ) considers whether an honest actor needs to trust all
components within the 5G core network, or just the ones with
whom it believes it is communicating.
a) Secrecy and authentication results: All-X : (1) Allow-
ing the adversary to compromise up to and including all SEAFs
causes all security properties to be violated except properties
S1 and A4 (see Section IV). (2) Allowing the adversary to
compromise all AUSFs causes all security properties to be
violated except S1 and A4. (3) Allowing the adversary to
compromise all ARPFs causes all security properties to be
violated except S1 and A3. We conclude that compromise
of any 5G core network component used by 5G-AKA has a
severely detrimental effect on the protocol’s security properties.
We now consider the results of component compromise
excluding the components with whom an actor believes they
are communicating, i.e., Not-My-X .
b) Secrecy and authentication results: Not-My-X : (1)
Allowing the adversary to compromise all SEAFs apart from
‘mine’ causes does not violate any security properties when
the SNID ﬁx is adopted. A1, A2, A5, A6 are only achieved
with adoption of the SNID ﬁx. We were not able to achieve
termination for A7. (2) Even with the SNID ﬁx, allowing the
adversary to compromise all AUSFs apart from ‘mine’ causes
all security properties to be violated except S1, S2, A3 and
A4, although we believe these violations to be theoretical, and
not meaningfully instantiable. (3) Allowing the adversary to
compromise all ARPFs apart from ‘mine’ causes does not