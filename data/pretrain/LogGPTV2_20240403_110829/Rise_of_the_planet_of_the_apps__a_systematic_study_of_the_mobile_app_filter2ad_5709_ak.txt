respective average necessary ad income. Moreover, we see that the average
necessary ad income for a free app in a given category in order to match
the income of a paid app in the same category is lower than 1 dollar, except
from categories: social, home/hobby and other. Then we computed the
 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 0 20 40 60 80 100 120Mean total downloadsDaytop 1%top 2%top 5%top 10%top 20%free apps 0 1000 2000 3000 4000 5000 6000 7000 0 10 20 30 40 50 60 70 80 90Mean total downloadsDaytop 1%top 2%top 5%top 10%top 20%paid apps 1 2 3 4 5 6 7 8 9educationalcollaboratione-bookssocialreligioncommunicationsproductivityotherhome/hobbyhealth/fitnesstravelutilitieslocation/mapsmusiclifestyleentertainmentfun/gamesdeveloperenterprisewallpapersApp price ($)CategoryMean price per category 0 1 2 3 4 5 6educationalcollaboratione-bookssocialreligioncommunicationsproductivityotherhome/hobbyhealth/fitnesstravelutilitieslocation/mapsmusiclifestyleentertainmentfun/gamesdeveloperenterprisewallpapersNecessary ad income ($)CategoryMean ad income per category70
CHAPTER 7. APP PRICING
Figure 7.20: Average necessary ad income per category, for 3 di(cid:11)erent
popularity bins in the SlideMe marketplace. The y axis is in log-scale.
average necessary ad income for the di(cid:11)erent popularity bins. We created
popularity bins for each category separately. The results are summarised in
Figure 7.20. According to the (cid:12)gure, the di(cid:11)erence in necessary ad income
is obvious across di(cid:11)erent popularity levels (per category). Moreover, the
most promising categories in terms of gaining pro(cid:12)t, especially for the most
popular apps, appear to be E-books, wallpapers, developer, location/maps
and enterprise.
 0.0001 0.001 0.01 0.1 1 10 100educationalcollaboratione-bookssocialreligioncommunicationsproductivityotherhome/hobbyhealth/fitnesstravelutilitieslocation/mapsmusiclifestyleentertainmentfun/gamesdeveloperenterprisewallpapersNecessary ad income ($)log-scaleCategoryunpopularmedium popularhighly popular7.5. SUMMARY
71
7.5 Summary
This chapter performed an analysis in order to explore the role of pricing
in smartphone applications ecosystem. Our results show that most of de-
velopers produce a few number of applications. However, we found a small
number of developers with a huge portion of apps hosted in SlideMe app-
store and we ascertained that these developers correspond to companies.
Moreover, we clari(cid:12)ed that developers seem to have a common strategy, and
clearly prefer to o(cid:11)er either only free or only paid apps (mainly free). In
addition, we observed that most of developers (around 85%) produce apps
for only 3 out of 20 categories. Furthermore, the majority of developers
earned a few dollars from 0 to 10, while a very small portion, about 1% of
them gained millions of dollars. Also, we showed that quality is more im-
portant than quantity for developers income (as the number of apps of each
developer is not connected with her total income). Moreover, we saw that
categories with highest income di(cid:11)er from categories with largest amount
of apps. Finally, we estimated the necessary ad income of a free app per
download in order to match this of a paid app, and demonstrated that it
ranges across di(cid:11)erent popularity levels and across app categories.
72
CHAPTER 7. APP PRICING
8Related Work
In this chapter we place our work in appropriate context by presenting work
related to this thesis. We (cid:12)rst overview similar studies on content popularity
and then we present some systematic studies on mobile applications.
8.1 Similar Studies on Content Popularity
There are numerous studies focusing on content popularity for a variety
of di(cid:11)erent Web 2.0 technologies and distributed systems, including infor-
mation sharing systems, User Generated Content (UGC) systems, social
networks and so on.
The most similar to our work is by Zhong and Michahelles [54]. This
study is based on a large amount of data provided by 42matters AG 1 that
captures installations, updates and removal of apps in real time. We argue
that their dataset is limited compared with ours, as they do not know the
exactly number of downloads of each app, but a number of installations
from a client-side monitor app. The results of this study propose that the
Android market is a \Superstar" market where top 1%, 5% and 10% of the
most popular apps count for the roughly 50%, 80% and 100% percent of the
aggregate popularity. This supremacy of the most popular apps in Android
market that seems to be stronger than the Pareto Principle (which claims
that about 80% of the consequences are created by 20% of the causes) is
also observed in our experiments too. The dominance of the most popular
apps is also denoted from two phenomena that are illustrated in sales distri-
bution of their experiments: the natural monopoly and the double jeopardy.
1http://appaware.com/
73
74
CHAPTER 8. RELATED WORK
Natural monopoly states that not only the most popular apps are installed
from overbalanced portion of of users, but also these users purchase more
popular apps than unpopular ones. The double jeopardy describes that the
unpopular apps attract the minority of the users and are characterized by
lower satisfaction rate. As the overall conclusion of their work, it may be
be stated that mobile app markets in general may be characterized by dif-
ferent structure features than other online e-commerce marketplaces. The
Android Market appears to be a glaring example of such a Superstar market
dominated by hit apps. The main di(cid:11)erences with our work is that we gath-
ered and analyzed data from 4 di(cid:11)erent alternative Android markets and we
don’t focus mostly on paid apps from a business/sales perspective, as they
do. Moreover, they did not notice the fetch-at-most-once e(cid:11)ect in the dis-
tribution of popularity, nor did they attempt to give an explanation about
the drop for large download values which we explained with the clustering
e(cid:11)ect.
There are many other similar works in di(cid:11)erent (cid:12)elds and technologies.
For instance, in [32] Cha et al. study the video contents of YouTube [29],
the world’s largest UGC system. Their key (cid:12)ndings show that the popular-
ity distribution follows power-law with an exponential cuto(cid:11), that is very
similar to popularity distribution of our study. In addition, the existence of
the Pareto Principle (80-20 rule), which was demonstrated in our work, is
con(cid:12)rmed there as well. In a similar study [30], the authors systematically
analyze the content of URL shortening services using traces derived from
the services themselves and by crawling the Twitter [28] social network for
a 3 month period. They show that the short URL click distribution follows
log-normal, verifying the existence of the Pareto Principle too.
There are several studies showing that World Wide Web (WWW) con-
tent exhibits power-law and heavy-tailed distributions [31, 36]. Particularly,
in [31], Breslau et al. analyze 6 traces from proxies deployed in di(cid:11)erent
academic institutions, enterprise networks and Internet Service Providers
(ISPs). The main (cid:12)nding of their work shows that the distribution of Web
requests follows a Zipf-like distribution. Based on this outcome, they con-
struct a simple model for the web accesses that assumes that the requests are
independent and distributed according to a Zipf-like curve. They demon-
strate that their simple model is su(cid:14)cient to explain the certain asymptotic
behavior of di(cid:11)erent properties (hit-ratio, interval-times) that observed in
their collected web cache traces. Moreover, they investigate whether this
model could be help in cache replacement strategies. The fact that the
largest portion of the web requests distribution (cid:12)ts a straight line well, that
is a perfect Zipf distribution (in log-scale), can be explained by the web
users’ activity. Users in the web tend to browse the same page continuously
(e.g. the http://www.google.com). In contrast, this behavior (an exact Zipf
curve) cannot be observed in our work. This happens because, as explained
8.2. SYSTEMATIC STUDIES OF SMARTPHONE APPLICATIONS
75
in Chapter 4.2, one smartphone user typically will download one application
only once (the fetch-at-most-one principle).
Similar power-law distributions with exponential cuto(cid:11)s have been iden-
ti(cid:12)ed in various networks such as the live streaming media networks [35], the
P2P networks [46], as well as the protein, e-mail, actor and collaboration
networks [43]. Also there are many other works focusing on the explanation
and understanding of the power-law distributions with examples outside the
scope of WWW [48, 49].
8.2 Systematic Studies of Smartphone Applications
Recently, mobile systems and applications have attracted the interest of
researchers that try to understand the behavior and functionality of this
emerging technology. Several research e(cid:11)orts were made for collecting and
analyzing a large set of mobile applications from multiple marketplaces,
mainly focused on security and privacy-related analysis, such as malware
detection [56], malware analysis [55], overprivilege identi(cid:12)cation [42], de-
tection of privacy leaks [38, 44], malicious advertisement libraries [45], and
vulnerability assessment [39]. In this work we collected and analyzed a sim-
ilar large scale dataset, but our analysis was focused on characterizing and
modeling the workload of the monitored marketplaces.
In a work closely related to ours, Xu et al. [53] study the usage behav-
ior of smartphone apps by analyzing traces from a tier-1 cellular network
provider. Their analysis is mostly focused on spatial and temporal locality,
geographic coverage, and diurnal usage patterns. On the other hand, our
analysis is focused on app popularity and pricing strategies. Moreover, we
use a di(cid:11)erent dataset, by systematically crawling four third-party appstores,
while Xu et al. use an IP-level trace, which leads to a di(cid:11)erent analysis.
Other related approaches focus on mobile tra(cid:14)c analysis, but they do
not study mobile applications. Maier et al. [47] perform a study of resi-
dential DSL lines of a European ISP and (cid:12)nd that mobile devices’ tra(cid:14)c
is dominated by multimedia content and applications’ downloads. Falaki et
al. [40] conduct a tra(cid:14)c analysis of 43 di(cid:11)erent smartphones. Their (cid:12)ndings
show that browsing contributes most of the tra(cid:14)c, and lower layer proto-
cols impose high overheads due to small transfer sizes. They also study the
factors that impact performance and power consumption on smartphone
communications and propose several improvements.
Falaki et al. [41] analyze the behavior of 255 users in two di(cid:11)erent smart-
phone platforms in order to understand and characterize user activities and
their impact on network and battery. They observed a diversity in user
patterns, which implies that techniques for improving user experience or
power consumption for the average case may be ine(cid:14)cient for a large frac-
tion of users. Wei et al. [51] present a multi-layer system for monitoring
76
CHAPTER 8. RELATED WORK
and pro(cid:12)ling Android apps at runtime. While they provide a useful tool
for monitoring individual apps, we present a large scale measurement study
about the app usage and pricing models.
9Future Work
In this chapter we discuss ideas about the next steps of this work, and
questions raising from our results.
In this thesis, we performed a systematic study on four di(cid:11)erent alterna-
tive Android marketplaces in order to understand the mobile applications’
ecosystem. However, a plethora of other marketplaces exists. In fact, many
of the appstores provide rough statistics on their apps, such as download
ranges (e.g. 500 - 1000) of the apps, instead of the exact number as shown
in Section 2.1. However, we visited many of these appstores and noticed
that most of them have accurate information regarding the ratings of users.
As we found in 4.3, app popularity and user ratings showed a linear rela-
tionship in all the monitored appstores. This observation can lead us to
the conclusion we can approximate app popularity with the number of user
ratings, which allows us to crawl other appstores (e.g., Windows Phone [26]
marketplace) that only provide number of ratings.
Furthermore, our collection of data contains the APK (cid:12)les of all versions
of each app during the crawling period. An analysis on these (cid:12)les would be
interesting as it would bring insight on the content of these applications. For
instance, in our next steps, we are thinking of exploring the actual content
of this apps. That is, some main characteristics of these apps, such as their
size, the Android Permissions that they request, the number of di(cid:11)erent
advertising networks they use and how these characteristics change from
version to version. Some questions on these could be: \How the size in
MB of an application changes from version to version?" \Do applications
use to request more permissions in subsequent versions?" Moreover, having
the size of all applications of a given appstore and its daily snapshot (all
77
78
CHAPTER 9. FUTURE WORK
the downloads of every app), we could compute the appstore’s Bandwidth
usage through time in terms of applications’ downloads.
In Chapter 7, we measured the total income per developer for all the
developers in SlideMe marketplace, but we said nothing about their e(cid:11)ort.
An interesting study would be to determine the e(cid:11)ort for each developer and
to compare it with her total income. For instance, E-books or wallpapers
require less e(cid:11)ort than games or geolocation apps. The challenge here is
to (cid:12)nd a way to quantify this e(cid:11)ort. This could be approximated by the
number of di(cid:11)erent objects found in an app (images, sound (cid:12)les), and the
size of source code (i.e. by reverse engineering the APK (cid:12)les).
An other interesting analysis would be an attempt to model the app
popularity of single apps through time. That is, we could classify the appli-
cations in di(cid:11)erent categories based on their downloads distribution through
time (e.g. the apps with high rise in popularity through time, those that ex-
perience a popularity rise at their (cid:12)rst steps and then their downloads reach
a limit etc.). Afterwards, we can construct a model for these categories with
respect to app popularity, with a view to be able to predict the popularity
of an app through time, given the number of downloads of its (cid:12)rst days.
Moreover, in Section7.4, we saw that the average necessary income of a
free app, in order to match the average income of a paid app, is dropping
over time, and proved that this happens due to the fact that downloads
of free apps (i.e. popularity) are increasing much faster than those of paid
apps. An interesting question on this observation would be: \How much
time is needed so as the income of free app to match the income of a paid
app?"
10Conclusion
In this thesis we presented a systematic study in order to explore and better
understand the mobile app ecosystem. To accomplish this, we crawled four
alternative Android marketplaces for several months and collected informa-
tion and statistics of their apps through time. To the best of our knowledge,
this work is the (cid:12)rst large-scale study in the literature that sheds light onto
the explosive growth of application marketplaces.
Our results shows that appstores are dominated by a very small num-
ber of popular apps that receive a very large amount of download requests,
while the majority of the apps are downloaded only a few times verifying
the presence of the Pareto Principle. We found that the distributions of
applications popularity in all monitored appstores exhibits a Zipf-like be-
havior with some deviations. This deviations appear to happen in part from
\fetch-at-most-once" behavior of users as well as from a more general phe-
nomenon, we call \the clustering e(cid:11)ect". According to \clustering e(cid:11)ect",
which can be a result of recommendation systems or other grouping forces,
the apps are grouped in di(cid:11)erent sets and if a user downloads one of them,
then the same user will probably download another app of the same set
rather than switching to another one. We verify our hypothesis of \cluster-
ing e(cid:11)ect" through \user temporal a(cid:14)nity", a new metric that express the
a(cid:14)nity that a user has to app categories in an appstore. We measured the
user temporal a(cid:14)nity in a large dataset of user comments that implies user
downloads, and we found that there is a strong a(cid:14)nity between users and
app categories which validated our hypothesis of clustering e(cid:11)ect. Then, we
propose a novel model of appstore usage based on both \fetch-at-most-once"
and \clustering e(cid:11)ect" properties, and we evaluate our model through a se-
ries of simulations comparing its results with the actual appstore workloads
79
80
CHAPTER 10. CONCLUSION
(applicatons’ downloads). We (cid:12)nd that our model approximate very well
the actual app popularity distribution. Moreover, we present a study on the
role of pricing in smartphone apps. We see that the popularity distribution
of paid apps is di(cid:11)erent than this of free app, following a clearly power-law
behavior. This is probably due to the fact that users are more selective
when downloading paid applications. Furthermore, we outline the behavior
of app developers and give information about their income and their strate-
gies (developers seem to have a common strategy, and clearly prefer to o(cid:11)er