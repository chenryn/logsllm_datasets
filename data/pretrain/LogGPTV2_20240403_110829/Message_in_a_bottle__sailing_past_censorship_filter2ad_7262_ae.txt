system suffers similar pitfalls as Freenet, although availability of
the documents is improved by the document entanglement.
Deniable messaging. Systems for deniable messaging can
be split into two categories: The ones that require no trusted
peer outside the country (e.g., CoverFS [5], Collage [12]), and
the ones that do (e.g., Telex [62]). CoverFS is a FUSE file
system that facilitates deniable file sharing amongst a group of
people. The file system synchronization happens though messages
hidden in photos uploaded to a web media service (Flickr, in their
implementation). As mentioned by the authors, while CoverFS
focuses on practicality, the traffic patterns could be detected by a
powerful Censor. This would affect its availability and deniability.
Collage, which we already described in Section 4, improves
CoverFS’ concept of using user-generated content hosted on
media services to establish covert channels. Collage has higher
availability, as the sites where the hidden messages are left change
over time, and it provides a protocol to synchronize these updates.
As the authors point out, Collage deniability and availability
are challenged when the Censor performs statistical and timing
attacks on traffic. Also, if the Censor records the traffic, he can
join Collage, download the files where the messages are embedded,
and find out from his logs who uploaded them. To join the
Collage network, a user needs to have an up-to-date version of
the tasks database, which contains the rendezvous points. Since
its distribution has to be timely, this is challenging (and can
be solved with miab). Also, without regular updates, the tasks
database can go stale, which requires a new bootstrap.
In Collage, the tasks defining the rendezvous points are gener-
ated manually. Although every media-sharing site can potentially
be used with Collage, generating all these tasks requires substan-
tial work. miab, instead, can use millions of domains out of the
box without human intervention.
A Censor might also join Collage and disseminate large quan-
tities of bogus messages. Since the burden of finding the right
message is on Collage’s users, they would be forced into fetch-
ing many of the bogus messages, thus exposing themselves to
statistical attacks. This could be mitigated by rate-limiting the
message fetching, but this decision would result in unbounded
delays between the posting of the message and its retrieval, chal-
lenging the availability of the system. An effective solution for
this denial-of-service is to generate a separate task list for any
pair of people that need to communicate with each other. This
can be done using miab as a primitive to disseminate these
databases to the parties, so that they can bootstrap a Collage
session. Once the two parties are exchanging messages, they can
arbitrate the Collage channel they want to employ, depending on
the performance that their communication requires.
Telex is a system that should be deployed by Internet Service
Providers (ISPs) that sympathize with the dissidents. A user
using the Telex system opens a TLS connection to an unblocked
site (that does not participate in the protocol), steganographically
embedding a request in the TLS handshake. When the ISP
discovers the request, it diverts the SSL connection to a blocked
site. While Telex deniability is sound, it can be subject to a
denial of service by the Censor. Also, the Censor can discover
ISPs implement Telex by probing the paths to various points on
the Internet, and prevent the traffic originating from the country
from going through those ISPs. Overall, Telex comes close to
satisfying the goals that we set for miab. However, it requires
the ISP collaboration, which is hard to set up, as the authors
mention. miab, on the other hand, requires minimal resources
(a good Internet connection and a single machine should suffice,
when implemented efficiently), and hence, it can be setup today,
as we demonstrated by hosting our public implementation of this
system. Finally, we would like to stress that the Censor we are
facing in miab is capable and willing to man-in-the-middle or
block HTTPS connections (e.g., like China [42], and Iran [54]
are doing). If this is not true, there is a simpler solution to our
problem: the usage of a third-party service. For example, Alice
could send a message though one of the many webmail services
hosted outside the censored country (e.g., Gmail) to an address
where an anti-censorship service run by Bob is listening. In fact,
this is one of the channels used to distribute Tor bridges (by
sending an email to PI:EMAIL). This method
is highly available, because of the great number of free webmail
offerings. However, even if Alice and Bob have a deniable method
of embedding and retrieving messages from ordinarily-looking
emails, the webmail service will have an indisputable proof that
Alice and Bob exchanged something, and the Censor might, at
any point in the future, pressure the webmail service to release
that information to her (e.g., like China did by wire-tapping
Skype [34]). Instead, a steganographic message published in a
broadcast channel, like miab’s, will be out of reach from the
Censor, at least as long as Bob’s private key is kept safe.
8. CONCLUSIONS
We have introduced miab, a deniable protocol for censorship
resistance that works with minimal requirements. miab can be
used as a standalone communication system, or to bootstrap
protocols that achieve higher performance, at the cost of more
demanding requirements. We have demonstrated miab feasibility
with the implementation of a proof-of-concept prototype, and
released its code open-source. The deployment of a miab instance
requires minimal configuration and resources, since it relies on
well-established and popular technologies (blog pings and blogging
platforms). Also, we have shown that miab is resilient to attacks
to its availability, deniability and confidentiality. Although a
powerful Censor might be able to disrupt miab, in doing so he
will suffer a high cost, effectively cutting the population of his
jurisdiction out of a major part of the Internet.
9. ACKNOWLEDGEMENTS
This work was supported in part by the Office of Naval Re-
search (ONR) under grant N000140911042, the Army Research
Office (ARO) under grant W911NF0910553, the National Science
Foundation (NSF) under grants CNS-0845559 and CNS-0905537,
and Secure Business Austria.
10. REFERENCES
[1] Gallery of css descramblers. www.cs.cmu.edu/~dst/DeCSS/Gallery/.
[2] Agence France-Presse. Pakistan blocks Facebook over
Mohammed cartoon. www.google.com/hostednews/afp/article/
ALeqM5iqKZNUdJFQ6c8ctdkUW0C-vktIEA.
[3] Anonymizer. Home page. plone.anonymizer.com.
[4] Bachrach, D., Nunu, C., Wallach, D., and Wright, M. #h00t:
Censorship resistant microblogging. arXiv:1109.6874 (2011).
[5] Baliga, A., Kilian, J., and Iftode, L. A web based covert file
system. In Proceedings of the 11th USENIX workshop on Hot
topics in operating systems (2007), USENIX Association.
[6] Bas, P., Filler, T., and Pevn`y, T. “break our steganographic
system”: The ins and outs of organizing boss. In Information
Hiding (2011).
[7] Bauer, K., McCoy, D., Grunwald, D., Kohno, T., and Sicker, D.
Low-resource routing attacks against tor. In Proceedings of the
2007 ACM workshop on Privacy in electronic society.
[8] BlogPulse. Report on indexed blogs. goo.gl/SEpDH, 2011.
[9] B¨ohme, R. Advanced statistical steganalysis. Springer-Verlag, 2010.
[10] Brumley, D., and Boneh, D. Remote timing attacks are practical.
Computer Networks (2005).
[11] BuiltWith. Content management system distribution.
trends.builtwith.com/cms, 2012.
[12] Burnett, S., Feamster, N., and Vempala, S. Chipping away at
censorship firewalls with user-generated content. In USENIX
Security Symposium (2010).
SPIE, Electronic Imaging, Security and Forensics of Multimedia
Contents XI (2009).
[28] France-Presse, A. Kazakhstan blocks popular blogging platforms,
2011.
[29] FriendFeed. Simple update protocol.
code.google.com/p/simpleupdateprotocol.
[30] Goljan, M., Fridrich, J., and Holotyak, T. New blind steganalysis
and its implications. In Proceedings of SPIE (2006).
[31] Google. Pubsubhubhub. code.google.com/p/pubsubhubbub.
[32] Greenstadt, R. Zebrafish: A steganographic system. MIT (2002).
[33] Hintz, A. Fingerprinting websites using traffic analysis. In Privacy
Enhancing Technologies (2002).
[34] Human Rights Watch. Letter from human rights watch to skype
and skype’s response. www.hrw.org/node/11259/section/19.
[35] Kelly, S., and Cook, S. Freedom on the net. Freedom House
(2011).
[36] Kolari, P. Pings, spings, splogs and the splogosphere: 2007.
[37] Labs, B. The lucent personalized web assistant.
www.bell-labs.com/project/lpwa, 1997.
[38] McLachlan, J., and Hopper, N. On the risks of serving whenever
you surf: vulnerabilities in tor’s blocking resistance design. In
Proceedings of the 8th ACM workshop on Privacy in the
electronic society.
[39] Mimic, S. Homepage. spammimic.com.
[40] Murdoch, S., and Danezis, G. Low-cost traffic analysis of tor. In
Security and Privacy, 2005 IEEE Symposium on.
[41] Netcraft. May 2012 web server survey.
news.netcraft.com/archives/2012/05/02.
[42] Netresec. Forensics of chinese mitm on github.
www.netresec.com/?page=Blog&post=Forensics-of-Chinese-MITM-on-
GitHub.
[43] Noman, H., and York, J. West censoring east: The use of western
technologies by middle east censors, 2010-2011.
[44] Palfrey, J., Roberts, H., York, J., Faris, R., and Zuckerman, E.
2010 circumvention tool usage report.
[13] Clarke, I., Sandberg, O., Wiley, B., and Hong, T. Freenet: A
[45] Pevny, T., Bas, P., and Fridrich, J. Steganalysis by subtractive
distributed anonymous information storage and retrieval system. In
Designing Privacy Enhancing Technologies (2001), Springer.
[14] CNN. Egyptians brace for friday protests as internet, messaging
disrupted. articles.cnn.com/2011-01-27.
[15] Danezis, G., Dingledine, R., and Mathewson, N. Mixminion:
Design of a type iii anonymous remailer protocol. In Security and
Privacy, 2003. Proceedings. 2003 Symposium on.
[16] De Cristofaro, E., Soriente, C., Tsudik, G., and Williams, A.
Hummingbird: Privacy at the time of twitter. IEEE Symposium
on Security and Privacy (2012).
[17] Dingledine, R., Mathewson, N., and Syverson, P. Tor: The
second-generation onion router. In Proceedings of the 13th
conference on USENIX Security Symposium-Volume 13 (2004),
USENIX Association.
[18] DomainTools. Internet statistic.
www.domaintools.com/internet-statistics/.
[19] Evans, N., Dingledine, R., and Grothoff, C. A practical
congestion attack on tor using long paths. In Proceedings of the
18th conference on USENIX security symposium.
[20] Feamster, N., Balazinska, M., Harfst, G., Balakrishnan, H., and
Karger, D. Infranet: Circumventing web censorship and
surveillance. In Proceedings of the 11th USENIX Security
Symposium, August (2002).
[21] Feamster, N., Balazinska, M., Wang, W., Balakrishnan, H., and
Karger, D. Thwarting web censorship with untrusted messenger
discovery. In Privacy Enhancing Technologies (2003), Springer.
[22] Fifield, D., Hardison, N., Stark, J., Porras, R., Boneh, D., and
Tor, S. Evading censorship with browser-based proxies.
[23] Filler, T., and Fridrich, J. Fisher information determines capacity
of ε-secure steganography. In Information Hiding (2009), Springer.
[24] Filler, T., and Fridrich, J. Gibbs Construction in Steganography.
IEEE Transactions on Information Forensics and Security 5, 4
(Dec. 2010), 705–720.
[25] Filler, T., and Fridrich, J. Design of Adaptive Steganographic
Schemes for Digital Images. Proceedings of SPIE, Electronic
Imaging, Media Watermarking, Security, and Forensics XIII
(Feb. 2011).
[26] Filler, T., Judas, J., and Fridrich, J. Minimizing embedding
impact in steganography using trellis-coded quantization. IEEE
Transactions on Information Forensics and Security (Feb. 2011).
[27] Filler, T., Ker, A. D., and Fridrich, J. The Square Root Law of
Steganographic Capacity for Markov Covers. In Proceedings of
pixel adjacency matrix. information Forensics and Security,
IEEE Transactions on (2010).
[46] Pevn´y, T., Filler, T., and Bas, P. Using High-Dimensional Image
Models to Perform Highly Undetectable Steganography. 161–177.
[47] Pingdom. The blog platforms of choice among the top 100 blogs.
royal.pingdom.com/2009/01/15, 2009.
[48] rssCloud. Homepage. rsscloud.org.
[49] Ryabko, B. Y., and Ryabko, D. B. Asymptotically optimal perfect
steganographic systems. Problems of Information Transmission
(2009).
[50] Sarkar, A., Solanki, K., and Manjunath, B. Further study on yass:
Steganography based on randomized embedding to resist blind
steganalysis. Proceedings SPIE, Electronic Imaging, Security,
Forensics, Steganography, and Watermarking of Multimedia
Contents (2008).
[51] TechCrunch. Syrian government blocks live video of crisis.
eu.techcrunch.com/2012/02/17.
[52] Tor. Bridges. www.torproject.org/docs/bridges.
[53] Tor. Help users in Iran reach the internet.
lists.torproject.org/pipermail/tor-talk/2012-February.
[54] Tor. Iran blocks encrypted traffic. blog.torproject.org/blog/iran-
partially-blocks-encrypted-network-traffic.
[55] Tor. Iran blocks Tor; Tor releases same-day fix.
[56] Tor. Tor partially blocked in China.
blog.torproject.org/blog/tor-partially-blocked-china.
[57] Tor. Tor users via bridges from china. metrics.torproject.org.
[58] Von Ahn, L., and Hopper, N. Public-key steganography. In
Advances in Cryptology-EUROCRYPT 2004.
[59] Waldman, M., and Mazieres, D. Tangler: a censorship-resistant
publishing system based on document entanglements. In ACM
conference on Computer and Communications Security (2001).
[60] Waldman, M., Rubin, A., and Cranor, L. Publius: A robust,
tamper-evident, censorship-resistant web publishing system. In
USENIX Security Symposium (2000).
[61] Wang, Y., and Moulin, P. Perfectly secure steganography:
Capacity, error exponents, and code constructions. Information
Theory, IEEE Transactions on (2008).
[62] Wustrow, E., Wolchok, S., Goldberg, I., and Halderman, J. A.
Telex: Anticensorship in the network infrastructure. In USENIX
Security Symposium (2011).