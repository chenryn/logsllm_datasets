military  and  government  environments[1].  Here,  each 
individual is assigned a clearance chosen from the four 
hierarchically 
Unclassified, 
Confidential, Secret, and Top Secret, and each item of 
information  is  assigned  a  classification  chosen  from 
the  same  four  levels.  The  fundamental  requirement  is 
that  no  individual  should  see  information  classified 
above his clearance. 
ordered 
levels, 
The fewer the people who share a secret, the less the 
risk  of  its  disclosure  through  accident  or  betrayal  to 
unauthorized  persons.  Consequently,  the  basic  MLS 
policy  is  enhanced  by  the  use  of  compartments  or 
categories  designed 
to  enforce  “need  -to-know” 
controls on  the  sharing of sensitive  information.  Each 
individual’s clearance includes the set of compartments 
of information to which he is permitted access, and the 
classification  of  information  is  similarly  extended  to 
include  the  set  of  compartments  to  which  it  belongs. 
The  combination  of  a  set  of  compartments  and  a 
clearance or classification is called a security partition. 
An individual is permitted access to information only if 
his clearance level equals or exceeds the classification 
of  the  information  and  if  his  set  of  compartments 
includes  that  of  the  information.  Thus  an  individual 
with  a  Secret-level  clearance  for  the  NATO  and 
Atomic compartments, abbreviated as a Secret(NATO, 
Atomic)  clearance,  may  see  information  classified  as 
Secret(NATO)  or  Confidential(NATO,  Atomic),  but 
not 
that  classified  as  Top  Secret(NATO)  or 
Confidential(NATO, Crypto). 
A multilevel secure system should enforce the policy 
outlined  above;  unfortunately,  conventional  computer 
systems  are  quite  incapable  of  doing  so.  In  the  first 
place, they generally have no cognizance of the policy 
and therefore make no provision for enforcing it; there 
is usually no way of marking the security classification 
to  which  a  file,  for  example,  belongs.  In  the  second 
place, experience shows that conventional systems are 
vulnerable  to  outside  penetration.  Their  protection 
mechanisms  can  always  be  broken  by  sufficiently 
skilled  and  determined  adversaries.  Finally,  and  most 
worrisome of all, there is no assurance that the system 
itself  cannot  be  subverted  by  the  insertion  of  “trap 
doors”  into  its  own  code  or  by  the  infiltration  of 
“Trojan horse” programs. In these cases, the enemy is 
located  “inside  the walls” and  the system’s protection 
mechanisms  may  be  rendered  worthless.  This  type  of 
attack  is  particularly  insidious  and  hard  to  detect  or 
counter  because  it  can  compromise  security  without 
doing  anything  so  flagrant  as  directly  copying  a  Top 
Secret  file  into  an  Unclassified  one.  A  Trojan  horse 
program with legitimate access to a Top Secret file can 
convey  the  information  therein  to  an  Unclassified 
collaborator  by  “tapping  it  out”  over  clandestine 
communication 
the 
modulation  of  some  apparently  innocuous  but  visible 
component of the system state, such as the amount of 
disk space available. 
that  depend  on 
channels 
Drastic  measures  have  been  adopted  to  overcome 
these  deficiencies  in  the  security  mechanisms  of 
conventional systems. One approach is to dedicate the 
entire  system  to  a  single  security  partition.  Thus  a 
system  dedicated  to  Secret(NATO)  operations  would 
support  only  information  and  users  belonging  to  that 
single security partition. The principal objection to this 
method of operation is that it fails to provide one of the 
main  functions  required  of  a  secure  system  –  the 
controlled  sharing  of  information  between  different 
security  partitions.  Another  drawback  is  the  cost  of 
providing separate systems for each security partition. 
This  problem  can  be  mitigated  to  some  extent  by 
employing periods processing in which a single system 
is dedicated to different security partitions at different 
180180
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:38:24 UTC from IEEE Xplore.  Restrictions apply. 
times and is cleared of all information belonging to one 
partition before it is reallocated to a different one. 
it  can 
Another  crude  method  for  coping  with  the  security 
problems of ordinary systems is to require all users to 
be  cleared  to  the  level  of  the  most  highly  classified 
information  that  the  system  contains.  This  is  called 
“system  high”  operation.  The  rationale  is  that  even  if 
the  system  has  been  subverted, 
reveal 
information  only  to  those  who  can  be  trusted  with  it. 
The  disadvantage  to  this  scheme  is  that  it  is  very 
expensive (and counter to normal security doctrines) to 
clear  large  numbers  of  people  for  highly  classified 
information  that  they  have  no  real  need  to  know. 
Furthermore, many excellent people may be unable or 
unwilling  to  obtain  the  necessary  clearances.  This 
approach  can  also  lead  to  the  overclassification  of 
information, 
availability 
unnecessarily. 
reducing 
thereby 
its 
Cipher block chaining 
Data Encryption Standard 
File integrity guarantor 
Isolated file store 
Local area network 
Multilevel security 
Remote procedure call 
Secure file manager 
Secure file store 
Acronym Definitions 
CBC: 
DES: 
FARM: File access reference monitor 
FIG: 
IFS: 
LAN: 
MARI:  Microelectronics Applications Research Institute 
MLS: 
RPC: 
RSRS: Royal Signals and Radar Establishment 
SFM: 
SFS: 
TNIU:  Trustworthy network interface unit 
TTIU:  Trustworthy terminal interface unit 
Several  attempts  have  been  made  to  construct  truly 
secure systems for use in classified and other sensitive 
environments.  However,  the  builders  of  such  systems 
face  a  new  problem:  They  must  not  only  make  their 
systems secure, but  also convince  those who will rely 
on  them  that  they  are  secure.  A  full  general-purpose 
operating  system  is  far  too  complex  for  anyone  to  be 
able  to  guarantee  this  security.  Accordingly,  most 
efforts have focused on partitioning  the system  into  a 
small and simple trusted portion and a much larger and 
more  complex  untrusted  one.  The  system  should  be 
structured  so  that  all  securityrelevant  decisions  and 
operations  are  performed  by  the  trusted  portion  in  a 
way that makes  the untrusted portion  irrelevant to the 
security  of  the  overall  system.  It  is  then  necessary  to 
rigorously  establish  the  properties  required  of  the 
trusted  portion  and  prove  that  it  does  indeed  possess 
them. Such proofs constitute security verification; they 
use  the  techniques  of  formal  program  verification  to 
show  that  the  system  implementation  (usually  its 
formal specification) is consistent with a mathematical 
model of the security properties required[1,2]. 
to 
the 
task 
Because 
The  trusted  portion  of  a  secure  system  is  generally 
identified  with  a  small  operating  system  nucleus 
known  as  a  security  kernel;  the  rest  of  the  operating 
system  and all applications  and user programs belong 
to the untrusted component. Certain difficulties attend 
the use of such kernelized systems, however. 
it  provides  an  additional 
level  of 
interpretation  beneath  the  main  operating  system,  a 
security kernel necessarily imposes some performance 
degradation.  This  can  be  minor  when  specialized 
applications  are  concerned,  since  the  kernel  can  be 
tuned 
application,  but  general-purpose 
kernelized  operating  systems  are  three  to  ten  times 
slower  than  their  insecure  counterparts.  Also,  the 
division  of  a  conventional  operating  system  into 
trusted  and  untrusted  components  is  a  complex  and 
expensive 
that  cannot  easily  accommodate 
changes  and  enhancements  to  its  base  operating 
system.  Consequently,  kernelized  systems  often  lag 
many  versions  behind  the  conventional  operating 
systems from which they are derived. 
Finally,  and  as  we  have  argued  elsewhere[3], 
security kernels for general-purpose operating systems 
tend  to  be  complex,  and  their  interactions  with 
nonkernel  trusted  processes  are  also  complex.  The 
result is that the verification of their security properties 
is  neither  as  complete  nor  as  convincing  as  might  be 
desired. None of these problems are arguments against 
security  kernels  per  se,  which  have  proved  very 
successful 
specialized 
applications  such  as  cryptographic  processors  and 
message systems[4]; but they do indicate that security 
kernels  are  unlikely  to  prove  satisfactory  as  the 
primary  security  mechanism 
for  general-purpose 
systems[5]. 
limited  and 
for  certain 
Our  approach  is  to  finesse  the  problems  that  have 
caused  difficulty 
the  past  by  constructing  a 
distributed secure system instead of a secure operating 
system.  Our  system  combines  a  number  of  different 
security  mechanisms  to  provide  a  general-purpose 
distributed  computing  system 
is  not  only 
demonstrably 
secure  but  also  highly  efficient, 
cost-effective,  and  convenient  to  use.  The  approach 
involves  interconnecting  small,  specialized,  provably 
trustworthy systems and a number of larger, untrusted 
host  machines.  The  latter  each  provide  services  to  a 
single  security  partition  and  continue  to  run  at  full 
speed.  The  trusted  components  mediate  access  to  and 
communications between the untrusted hosts; they also 
provide specialized services such as a multilevel secure 
file  store  and  a  means  for  changing  the  security 
partition to which a given host belongs. 
The  most  significant  benefits  of  our  approach  to 
secure computing are that it requires no modifications 
to  the  untrusted  host  machines  and  it  allows  them  to 
that 
in 
181181
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:38:24 UTC from IEEE Xplore.  Restrictions apply. 
their  full  functionality  and  performance. 
provide 
Another  benefit  is  that  it  enables  the  mechanisms  of 
security enforcement to be isolated, single purpose, and 
simple. We therefore believe that this approach makes 
to  construct  secure  systems  whose 
it  possible 
verification 
is  more 
and  whose 
performance, cost, and functionality are more attractive 
than in previous approaches. 
compelling 
Principles and mechanisms for secure and 
distributed systems 
The  structure  of  all  secure  systems  constructed  or 
designed  recently  has  been  influenced  by  the  concept 
of a reference monitor. A reference monitor is a small, 
isolated,  trustworthy  mechanism  that  controls  the 
behavior of untrusted system components by mediating 
their  references  to  such  external  entities  as  data  and 
other  untrusted  components.  Each  proposed  access  is 
checked  against  a  record  of  the  accesses  that  the 
security policy authorizes for that component. 
entities  belonging 
It is implicit in the idea of a reference monitor, and 
utterly fundamental to its appreciation and application, 
that information, programs in execution, users, and all 
other 
security 
classifications  be  kept  totally  separate  from  one 
another.  All  channels  for  the  flow  of  information 
between or among users and data of different security 
classifications must be mediated by reference monitors. 
For their own protection, reference monitors must also 
be kept separate from untrusted system components. 
to  different 
Our  approach  to  the  design  of  secure  systems  is 
based  on 
these  key  notions  of  separation  and 
mediation. These are distinct logical concerns, and for 
ease of development and verification, the mechanisms 
that  realize  them  are  best  kept  distinct  also.  We 
consider  it  a  weakness  that  many  previous  secure 
system  designs  confused  these  two  issues  and  used  a 
single mechanism – a security kernel – to provide both. 
Once  we  recognize  that  separation  is  distinct  from 
mediation,  we  can  consider  a  number  of  different 
mechanisms for providing it and use each wherever it 
is  most  appropriate.  In  fact,  our  system  uses  four 
different  separation  mechanisms:  physical,  temporal, 
logical, and cryptographical. 
Physical  separation 
function.  Unfortunately, 
is  achieved  by  allocating 
physically different resources to each security partition 