### Recovery Actions and Costs

| Recovery Point | Action Description | Cost (USD) | Status |
| --- | --- | --- | --- |
| RP5, RP6, RP8 | Create an AMI from the old web instance | $0.00 | Direct Redo |
|  | New web instance not launched |  |  |
| RP1, RP3, RP5, RP6, RP8 | Launch a new web instance in the new availability zone; Reassign the IP to the new web instance | $0.0031 | Direct Redo |
|  | Old web instance not terminated |  |  |
| RP1, RP3, RP5, RP6, RP8 | Terminate the old web instance | $0.00 | Direct Redo |
|  | Old database instance not stopped |  |  |
| RP1, RP3, RP5, RP6, RP8 | Stop the old database instance again | $0.00 | Direct Redo |
|  | AMI not created |  | Reparation |
| RP1, RP3, RP5, RP6, RP8 | Create an AMI from the old database instance | $0.00 | Direct Redo |
|  | New DB instance not launched |  |  |
| RP1, RP3, RP5, RP6, RP8 | Launch a new database instance in the new availability zone; Reassign the IP to the new database instance | $0.0031 | Direct Redo |
|  | Delete failed AMI; Create a new AMI from the old database instance; Launch a new database instance in the new availability zone; Reassign the IP to the new database instance | $0.0031 | Direct Redo |
|  | Old database instance not terminated |  |  |
| RP1, RP3, RP5, RP6, RP8 | Terminate the old database instance | $0.00 | Direct Redo |

### Satisfying Recovery Requirement R4

The selected recovery action has an optimal/acceptable monetary cost, which means its cost is relatively low compared to other possible recovery actions. This selection and optimization mechanism ensures that the recovery cost aligns with the monetary cost objectives set by stakeholders. Therefore, the requirement to minimize monetary costs during recovery is met.

### Recovery from Errors without Known Causes

#### 1) Experimental Procedure

POD-Recovery does not require a known cause for error recovery. It dynamically generates a recovery plan from the current erroneous state to a desired state, whether it be a previously captured state or an expected future state. To study this, we conducted additional experiments with various faults. We ran migrations, injected different faults, and triggered recovery without providing the error causes. For each type of fault, we performed 30 runs.

#### 2) Experimental Results

Table 51 summarizes the results, showing the number of successful recoveries for each injected fault. All injected faults were successfully recovered, except for the "cloud system disconnected" fault, which refers to a network disconnect between the recovery service and the AWS API. Due to this disconnect, POD-Recovery cannot take any recovery actions or assess the current state of resources, thus failing to recover.

**Table 51: Recovery without Known Causes**

| Recovery Point | Error Occurred | Fault Injected (Cause) | # Successful Recoveries |
| --- | --- | --- | --- |
| Old web instance restarted by other team | Recovery Point 1 | Old web instance not stopped | “StopInstances” API call fails | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | “CreateImage” cloud API call fails | 30 |
|  |  | Other team deletes the AMI | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | AMI not created | 30 |
|  |  |  |  |
| New web instance not launched | Recovery Point 3 | “StartInstance” cloud API call fails | 30 |
|  |  | New web instance terminated by other team | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | “TerminateInstance” cloud API call fails | 30 |
|  |  | Old web instance not terminated | 30 |
|  |  | Old web instance relaunched by other team | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | Old DB instance restarted by other team | 30 |
|  |  | Recovery Point 5 | Old DB instance not stopped | “StopInstances” API call fails | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | “CreateImage” cloud API call fails | 30 |
|  |  | Other team deletes the AMI | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | “StartInstance” cloud API call fails | 30 |
|  |  | New DB instance terminated by other team | 30 |
|  |  | Recovery Point 6 | AMI not created | 30 |
|  |  | New DB instance not launched | 30 |
|  |  | Cloud system disconnected | 0 |
|  |  | “TerminateInstance” cloud API call fails | 30 |
|  |  | Old DB instance not terminated | 30 |
|  |  | Old DB instance relaunched by other team | 30 |
|  |  | Cloud system disconnected | 0 |

### Satisfying Recovery Requirement R5

Due to the dynamic recovery plan generation, our method can recover from errors without known causes, as long as the error cause is within the resource space and can be addressed through API calls. If the cause is not included or the API cannot be reached (e.g., cloud system disconnected), our method cannot recover from the error. The cause of the error does not affect the recovery process, although it may influence whether the error persists or recurs.

### Dealing with False Positives of Error Detection

#### 1) Experimental Procedure

To test POD-Recovery's reaction to false positives in error detection, we triggered...