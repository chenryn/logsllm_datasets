RP5, 
RP6, RP8 
Create an AMI 
from the old 
web instance; 
$0 
(Direct Redo) 
New  web 
instance 
not 
launched 
RP1, 
RP3, 
RP5, 
RP6, RP8 
Launch  a  new 
web  instance  in 
the 
new 
availability 
zone; 
Reasign the IP 
to the new web 
instance; 
(Direct Redo) 
$0.0031 
Old  web 
instance 
not 
terminated 
RP1, 
RP3, 
RP5, 
RP6, RP8 
Terninate the 
old web 
instance; 
(Direct Redo) 
$0 
DB 
Old 
instance 
not stopped  
RP1, 
RP3, 
RP5, 
RP6, RP8 
Stop the old 
database 
instance again; 
$0 
(Direct Redo) 
(Reparation) 
not 
AMI 
created 
RP1, 
RP3, 
RP5, 
RP6, RP8 
Create an AMI 
from the old 
database 
instance; 
(Direct Redo) 
$0 
New  DB 
instance 
not 
launched 
RP1, 
RP3, 
RP5, 
RP6, RP8 
Launch  a  new 
database 
instance  in  the 
new  availability 
zone; 
Reasign the IP 
to the new 
database 
instance; 
(Direct Redo) 
$0.0031 
the 
Delete 
failed AMI; 
Create a new 
AMI from the 
old database 
instance; 
(Reparation) 
Launch  a  new 
database 
instance  in  the 
new 
availability 
zone; 
Reasign the IP 
to the new 
database 
instance; 
 (Direct Redo) 
DB 
Old 
instance 
not 
terminated 
RP1, 
RP3, 
RP5, 
RP6, RP8 
Terninate the 
old database 
instance; 
(Direct Redo) 
$0 
Terninate the 
old database 
instance; 
(Direct Redo) 
$0 
143 
3)  Satisfying Recovery Requirement R4 
The recovery monetary cost of the selected recovery action is the optimal/acceptable one, which 
means that its recovery monetary cost is relatively small compared to all other recovery actions. 
Such  selection  and  optimization  mechanism  guarantees  that  the  recovery  monetary  cost  can 
meet the recovery monetary cost objective set by stakeholders. Hence, the requirement that the 
recovery should reduce monetary cost is achieved. 
E.  Recovery from Errors without Known Causes  
1)  Experimental Procedure 
POD-Recovery does not require a known cause: its recovery plan generation dynamically finds 
a  plan  from  the  current  erroneous  state  to  a  desired  state  –  be  it  a  captured  earlier  state  or  an 
expected future state. To study this aspect in detail, we performed additional experiments with 
other  faults.  We  again  ran  migration,  injected  various  faults,  and  triggered  recovery  without 
providing the error causes. Per type of injected fault, we performed 30 runs. 
2)  Experimental Results 
Table  51  summarizes  the  results  of  these  experiments,  by  showing  the  number  of  successful 
recoveries for each injected fault. As can be seen, recovery is successful for all injected faults, 
except  for  one:  the  fault  “cloud  system  disconnected”  refers  to  a  network  disconnect  between 
the recovery service and the AWS API. Due to this disconnect, POD-Recovery cannot take any 
recovery actions or even assess the current state of the resources, and hence cannot recover. 
Table 51.  Recovery without Known Causes 
Recovery Point 
Error Occurred 
Fault Injected (Cause) 
# Successful 
Recoveries 
Old 
restarted by other team 
web 
instance 
Recovery Point 1 
Old  web  instance  not 
stopped  
“StopInstances” 
API call fails 
cloud 
Cloud 
disconnected 
system 
“CreateImage” cloud API 
call fails 
Other  team  deletes  the 
AMI 
Cloud 
disconnected 
system 
144 
Recovery Point 2 
AMI not created 
30 
30 
0 
30 
30 
0 
Recovery Point 
Error Occurred 
Fault Injected (Cause) 
# Successful 
Recoveries 
“StartInstance” cloud API 
call fails 
Recovery Point 3 
New  web 
not launched  
instance 
New 
terminated by other team 
instance 
web 
Cloud 
disconnected 
system 
“TerminateInstance” 
cloud API call fails 
Recovery Point 4 
Old  web  instance  not 
terminated 
Old 
instance 
relaunched by other team 
web 
Cloud 
disconnected 
system 
Old DB instance restarted 
by other team 
Recovery Point 5 
Old  DB  instance  not 
stopped 
“StopInstances” 
API call fails 
cloud 
Cloud 
disconnected 
system 
“CreateImage” cloud API 
call fails 
Other  team  deletes  the 
AMI 
Cloud 
disconnected 
system 
“StartInstance” cloud API 
call fails 
New 
terminated by other team 
instance 
DB 
Recovery Point 6  AMI not created 
Recovery Point 7 
New DB instance not 
launched 
Cloud 
disconnected 
system 
“TerminateInstance” 
cloud API call fails 
Recovery Point 8 
Old  DB  instance  not 
terminated 
Old 
instance 
relaunched by other team 
DB 
Cloud 
disconnected 
system 
145 
30 
30 
0 
30 
30 
0 
30 
30 
0 
30 
30 
0 
30 
30 
0 
30 
30 
0 
3)  Satisfying Recovery Requirement R5 
Due  to  the  dynamic  recovery  plan  generation,  our  method  can  recover  from  errors  without 
known cause – as long as the error cause is included in the resource space and can be recovered 
through API calls. If the cause is not included or the API cannot be reached (e.g. cloud system 
disconnected), our method cannot recover from the error. Hence, the cause of the error does not 
affect the recovery although it may affect whether the error remains or reoccurs. 
F.  Dealing with False Positives of Error Detection 
1)  Experimental Procedure 
To  test  the  reaction  of  POD-Recovery  to  false  positives  of  error  detection,  we  trigger  the 