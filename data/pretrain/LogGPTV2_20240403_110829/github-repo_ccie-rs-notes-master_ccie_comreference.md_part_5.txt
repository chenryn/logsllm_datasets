### NEXT_HOP reachable
Can be changed with **next-hop-self **or **next-hop-unchanged**.
### Weight
* 0 through 65535
* Default 0 for learned, 32768 for locally injected
* Apply with route map or **neighbor weight** command, route map takes preference
### Highest Local Pref
* Default 100, change with bgp default local-preference
* Set with route-map
### Choose between locally injected routes based on ORIGIN PA
As BGP assigns a weight of 32768 to locally injected routes, automatically uses them.
To see routes where this might happen, a route would have to be injected AND advertised to neighbour, with a route-map assigning the weight. Another option is router injects routes through multiple methods, and same NLRI injected through two different sources. This would be the case with a **network** command and **redistribute connected **command. Same weights, same local pref.
### Shortest AS path
* AS_SET seen as one ASN
* **bgp bestpath as-path ignore**
* Confeds do not count in calculation
* neighbor remove-private-as - Removes private AS used by neighbor AS
* neighbor local-as no-prepend - Allows different AS
### Best Origin PA
i over e over ?, e never occurs today
**set origin** in route map
### Smallest MED
* Default 0, sent to one AS, no further
* **bgp bestpath med missing-as-worst **sets it to maximum value
* **bgp always-compare-med** - When multiple routes to different NLRI list different neighbouring ASNs, all routers in ASN would require this
* **bgp deterministic-med** - Stops sequential evaluation of routes to find best, processes routes per adjacent AS, picking best from that AS then comparing best from all "best" found
### EBGP over iBGP
eBGP > iBGP
### Smallest IGP Metric to next hop
As title
### Maximum paths
Above are done before maximum paths taken into account
Must decide which route is best based upon tiebreakers, and if to add multiple routes (**maximum-paths**)
### Lowest BGP RID
**bgp bestpath compare-routerid**.
Has caveats, see Notes
### Lowest Neighbor ID
As title
### Maximum paths
See notes
**maximum eibgp** - Only applies when MPLS in use
## Communities
**neighbor send-community - **needed to allow an Update to include community PA
**ip community-list** - used to match communities, no more than 16 lines in a standard list, more with extended
## display
 **ip bgp-community new-format** - Shows in AA:NN format rather than decimal
## Remove communities
**set community none**
**set comm-list list delete**
## Filtering
**match community list**, can also use exact (When exact keyword is spcified, match happen only when BGP updates have completely same communities value specified in the community list.)
## Internal Neighbor Loss detection
**neighbor fall-over**
## EBGP Fast Session Deactivation
This is a per neighbour setting. Can disable fast external fall-over with **no bgp fast-external fallover**
# Classification and Marking
## TOS values
- Routine - IPP 0 - 000
- Priority - IPP 1 - 001
- Immediate - IPP 2 - 010
- FLash - IPP 3 - 011
- Flash Override - IPP 4 - 100
- Critic/Critical - IPP 5 - 101
- Internetwork Control - IPP 6 - 110
- Network Control - IPP 7 - 111
## Class Selector PHB/dscp
- Default/CS0 - 000000 - 000 - Routine
- CS1 001000 - 001 - Priority
- CS2 010000 - 010 - Immediate
- CS3 011000 - 011 - Flash
- CS4 100000 - 100 - Flash Override
- CS5 101000 - 101 - Critical
- CS6 110000 - 110 - Internetwork Control
- CS7 111000 - 111 - Network Control
## AF PHB/DSCP
- 1 - AF11/10/001010, AF12/12/001100, AF13/14/001110
- 2 - AF21/18/010010, AF22/20/010100, AF23/22/010110
- 3 - AF31/26/011010, AF32/28/011100, AF33/30/011110
- 4 - AF41/34/100010, AF42/36/100100, AF43/38/100110
Formula to get to decimal from name is 8x + 2y, eg AF41 = 8*4 + 2*1 = 34
## EF
Decimal 46, binary 101110
## Match commands
```
class-map match-all to-nest
 match access-group 102
 match precedence 5
class-map match-any nested
 match class to-nest
 match cos 5
 ```
- Up to four Cos/IPP or eight DSCP values can be listed on a single match cos, match precedence or match dscp command. If any values found in packet, statement matched
- If class map has multiple match commands, match-any or match-all paramaeter on class-map defines how to match (default is match-all)
- match class *name* matches another class map, considered to match if refernced class map also results in match
## NBAR
** match protocol**, requires CEF
## CB Marking
- CB Marking requires CEF
- Packets classified based on logic in MQC class maps
- MQC policy prefers to one or more class maps
- CB Marking enabled for packets either entering or exiting interface using **service-policy in | out ***policy-map-name*
- CB Marking policy map processed sequentially, once matches doesnt got further
- Multiple sets in one class allowed
- Packets not expliticitly matched considered to match class-default
- For no set command in policy map, packets in that class not marked
- set [ip] precedence - for v4 and v6 if IP omitted, v4 only if ip stated
- set ip dscp - As above but for DSCP
- set cos - Marks CoS value
- set qos-group - Marks group identifier for QoS group
- set atm-clp
- set fr-de
**show policy-map ***policymap-name - *shows config
**show policy-map ***interface-spec ***input/output class ***class-name *- shows stats about policy map on an interface
```
ip cef
class-map voip-rtp
 match protocol rtp audio
class-map http-impo
 match http url "*important*"
class-map http-not
 match protocol http url "*not-so*"
class-map match-any NetMeet
 match protocol rtp payload-type 4
 match protocol rtp payload-type 34
policy-map laundry-list
 class voip-rtp
  set ip dscp EF
 class NetMeet
  set ip dscp AF41
 class http-impo
  set ip dscp AF21
 class http-not
  set ip dscp AF23
 class class-default
  set ip DSCP default
int Fa0/0
 service-policy input laundry-list
```
**show policy-map interface ***interface-name ***[ vc **[vpi/] vci**] [ dlci ***dlci *] [ **input | output ] [ class ***class-name*]
## CB Marking of CoS and DSCP
```
class-map match-any EF
 match dscp EF
class-map AF11
 match dscp AF11
class-map COS1
 match cos 1
policy-map map-cos-to-dscp
 class cos1
  set DSCP af11
 class cos5
  set ip DSCP EF
```
## NBAR
Need to make sure that **ip nbar protocol discovery **is either on an interface, or enabled by default
**show ip nbar protocol-discover interface Fa0/0 stats packet-count top-n 5**
From 12.2T/12.3, ip nbar protocol-discovery command no longer needed
NBAR can be upgraded with PDLMs (Packet Description Language Modules). Can download, copy to flash, and add with **ip nbar pdlm ***pdlm-name. *NBAR can then match on that protocol
## Cisco recommended traffic classes
Type, Cos, IPP, DSCP
- Voice Payload, 5, 5, EF
- Video Payload, 4, 4, AF41
- Voice, Video signalling, 3, 3, CS3
- Mission Critical data, 3, 3, AF31, AF32, AF33
- Transactional data, 2, 2, AF21, AF22, AF23
- Bulk data, 1, 1, AF11, AF12, AF13
- Best Effort 0, 0 BE
- Scavenger, 0, 0, 2, 4 ,6
## QoS Pre-Classification
Enable in tunnel config mode, virtual template or crypto map with **qos pre-classify**. Can see effects with **show interface **and **show crypto-map**
- interface tunnel - GRE and IPIP
- interface virtual-template - L2F and L2TP
- crypto map - IPsec
## Policy Routing for Marking
1. Packets examined as they enter interface
2. Route map matches subset of packets
3. Mark either IPP or entire ToS using set command
4. Might also define route with set command too (not required)
## AutoQoS for VoIP
Enabled at interface level with **auto qos voip { cisco-phone | cisco-softphone}. **
Enable on uplink with **auto qos voip trust**.
Enable on a router with **auto qos voip [ trust ]**. Make sure interface bandwidth configured before, as QoS config wont change later. When issuing on an individual data circuit, config differs based on interface. Compression and fragmentation enabled on links of 768kbps and lower. Not enabled on higher. Also configures traffic shaping and applies service policy regardless of bandwidth
show auto qos - displays interface AutoQoS commands
show mls qos - Several modifiers to display queueing and CoS/DSCP mappings
show policy-map interface
## AutoQoS for Enterprise
**auto discovery qos [ trust ], **issued at interface, DLCI or PVC level. CEF needs to be enabled and bandwidth configured. Trust keyword for traffic arriving already marked
Use **auto qos **on an interface. IN case of a DLCI, router applies policy map to FR map class and applies class to DLCI. Can turn off NBAR traffic collection with **no auto disvovery qos**
show auto discover qos - lists types and amounts of traffic
show auto qos
show policy map interface
# Congestion Management and Avoidance
## Hardware Queues
show controllers *interface* - tx_limited shows Tx_ring length
```
int s0/0
  tx-ring-limit 1
```
## CBWFQ basic features and config
**bandwidth ***bandwith-kbps/***percent ***percent - *Sets literal or percentage bandwidth for class
**bandwidth **{remaining percent *percent *} - Sets percentage of remaining bandwidth for class
**queue-limit ***queue-limit *- sets maximum length of queue
**fair-queue **[ queue-limit *queue-value - *Enables WFQ in class (class-default only)
```
class-map match-all voip-rtp
 match ip rtp 16384 16383
policy-map queue-voip
 class voip-rtp
  bandwidth 64
 class class-default
  fair-queue
int Se0/0
 bandwidth 128
 service-policy output queue-voip
```
## LLQ
LLQ is enabled in CBWFQ configuration by doing the following: -
**priority **{ *bandwidth-kbps *| **percent ***percentage *} [ *burst *]
```
policy-map queue-on-dscp
 class dscp-ef
  priority 58
 class dscp-af41
  bandwidth 22
 class dscp-af21
  bandwidth 20
int Se0/0  
 max-reserved-bandwidth 85
 serive-policy output queue-on-dscp
```
## WRED
### WRED Weighting
A list of the defaults for DSCP values is below: -
DSCP - Minimum Threshold - Maximum Threshold - MPD - 1/MPD
- AFx1, 33, 40, 10, 10%
- AFx2, 28, 40, 10, 10%
- AFx3, 24, 40, 10, 10%
- EF, 37, 40, 10, 10%
### Config
Most queue mechanisms do not support WRED, so can be configured in following locations: -
- Physical interface (with FIFO queueing)
- For non LLQ class in CBWFQ
- On ATM VC
 **random-detect** command enables WRED, either under interfaces or nder map. Can use **dscp-based** keyword to act on DSCP calues.
To changed WRED config from default wred profile, add this in same location as other random-detect ocmmand: -
**random-detect precedence ***precedence min-threshold max-threshold *[ *mark-prob-denominator *]
**random-detect dscp ***dscpvalue min-threshold max-threshold *[ *mark-probability-denominator *]
**random-detect exponential-weighting-constant ***constant* - Lower means old average small part of calculation (quicker changing average)
## LAN Switch QoS
### Creating priority queue
```
mls qos srr-queue input cos-map queue 2 6
mls qos srr-queue input priority-queue 2 bandwidth 20
mls qos srr-queue input buffers percentage1 percentage2
```
By default 90 percent of buffers assigned to queue 1, 10 to queue 2. Set frequency at which scheduler takes from buffers using **mls qos srr-queue input bandwidth ***weight1 weight2. *Default is 4 and 4 (evenly between two). Values are relative weightings, not strict values.
### Congestion Avoidance
Command to configure tail drop percentages for each threshold is: -
**mls qos srr-queue input threshold ***queue-id threshold-percentage1 threshold-percentage2*
If trusting CoS, map the CoS to a threshold with: -
**mls qos srr-queue input cos-map threshold ***threshold-id cos 1  cos 8*
As above but DSCP:
**mls qos srr-queue input dscp-map threshold ***threshold-id dscp 1  dscp 8*
```
mls qos srr-queue input buffers 80 20
mls qos srr-queue input bandwidth 3 1
mls qos srr-queue input threshold 1 40 60
mls qos srr-queue input cos-map threshold 1 0 1 2 3
mls qos srr-queue input cos-map threshold 2 4 5
mls qos srr-queue input cos-map threshold 3 6 7
```
All commands global for ingress QoS, so apply to all interfaces
### Egress queueing
**srr-queue bandwidth share ***weight1 weight 2 weight3 weight4*
**srr-queue bandwidth shape ***weight1 weight 2 weight3 weight4*
With default weights of 25, if all four queues contained frames, switch service each queue equally.
When queues not full though, shared scheduling keeps servicing single queue with that queue getting all bandwidth. With shapred, switch waits to servie queue, not sending any date out that interface so that queue only receives its configured percentage
```
mls qos queue-set output 1 buffers 40 20 30 10
mls qos queue-set output 1 threshold 2 40 60 100 100
int Fa0/1
 queue-set 1
 srr-queue bandwidth share 10 10 1 1
 srr-queue bandwidth shape 10 0 20 20
 priority-queue out
```
## RSVP
### Configuring
Enabled on an interace using **ip rsvp bandwdith ***total-kbps single-flow-kbps. *If no total specified, defaults to 75 percent of int-bw. If no flow value, any flow can reserve all bandwidth
DSCP value for RSVP controll messages set with **ip rsvp signalling dscp ***dscp-value*
### RSVP for Voice
When using LLQ with CBWFQ, disable RSVPs WFQ with **ip rsvp resource-provider none**. By default RSVP attempts to process every packet (not just voice). Turn this off with **ip rsvp data-packet classification none.**. LLQ and CBWFQ then configured as normal. RSVP then reserves bandwidth for voice calls, gateways QoS processes place voice traffic into priority queue
```
int S0/1/0
 ip rsvp bandwidth 128 64
 ip rsvp signalling dscp 40
 ip rsvp resource-provider none
 ip rsvp data-packet classification none
 service-policy output llq
```
Verify with
show ip rsvp interface
show ip rsvp interface detail
# Shaping, Policing and Link fragmentation
## Generic Traffic Shaping
Older, supported on router interfaces (not with flow switching)
**traffic-shape rate ***shaped-rate *[*Bc*] [*Be*] [ *buffer-limit*] - Shaprd rate is bps, bc and be bits, buffer limit in bps. Quart of shapred rate by default for be and bc
To limit with an acl, **traffic-shape group ***access-list-number shaped-rate *{**Bc**} {**Be**}
Verify with show traffic-shape *interface, *show traffic-shape statistics and show traffic-shape queue
## CB Shaping
**shape **[**average | peak**] *mean-rate *[[*burst-size*] [ *excess-burst-size*]]
```
policy-map shape-all
 class class-default
  shape average 64000
int Se0/0/0/.1
 service-policy output shape-all
```
CB shaping calculates values based on whether shaping rate exceeds 320kbps: -
Variable - Rate  320kbps
- Bc - 8000 bits - Bc = shaping rate * Tc
- Be - Be = Bc = 8000 - Be = Bc
- Tc - Tc = Bc/shaping rate - 25 ms
### Tuning for Voice using LLQ and small Tc
```
class-map match-all voip-rtp
 match ip rtp 16384 16383
policy-map queue-voip
 class voip-rtp
  priority 32
 class class-default
  fair-queue
policy-map shape-all
 class class-default
  shape average 96000 960
  service-policy queue-voip