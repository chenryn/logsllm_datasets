n_tup_hot_upd       | 0  
n_live_tup          | 0  
n_dead_tup          | 0  
n_mod_since_analyze | 0  
last_vacuum         |   
last_autovacuum     |   
last_analyze        |   
last_autoanalyze    |   
vacuum_count        | 0  
autovacuum_count    | 0  
analyze_count       | 0  
autoanalyze_count   | 0  
```  
```  
2015-08-03 17:37:55.056 CST,"postgres","postgres",3005,"[local]",55bf3302.bbd,9,"SELECT",2015-08-03 17:23:14 CST,2/23,0,LOG,00000,"using stale statistics instead of current ones because stats collector is not responding",,,,,,"select * from pg_stat_all_tables where relid='test'::regclass;",,"backend_read_statsfile, pgstat.c:4476","psql"  
```  
这里还引发一个问题，如果我们使用长连接来监控数据库状态的话，无法了解主进程是否健康，所以最好还是用短连接来监控数据库，至少可以判断认证这块还有主进程是否是正常的。不过短连接也有一定的问题，就是可能数据库的连接被占满了，无法获得连接。有利有弊，长连接+短连接的方式监控可能更加全面。  
## 其他  
关于crash自动重启的参数：  
```  
restart_after_crash (boolean)  
When set to true, which is the default, PostgreSQL will automatically reinitialize after a backend crash.   
Leaving this value set to true is normally the best way to maximize the availability of the database.   
However, in some circumstances, such as when PostgreSQL is being invoked by clusterware,   
it may be useful to disable the restart so that the clusterware can gain control and take any actions it deems appropriate.  
```  
对应的代码，某些场景会导致数据库重启。  
src/backend/postmaster/postmaster.c  
```  
/*  
 * Advance the postmaster's state machine and take actions as appropriate  
 *  
 * This is common code for pmdie(), reaper() and sigusr1_handler(), which  
 * receive the signals that might mean we need to change state.  
 */  
static void  
PostmasterStateMachine(void)  
{  
......  
        /*  
         * If recovery failed, or the user does not want an automatic restart  
         * after backend crashes, wait for all non-syslogger children to exit, and  
         * then exit postmaster. We don't try to reinitialize when recovery fails,  
         * because more than likely it will just fail again and we will keep  
         * trying forever.  
         */  
        if (pmState == PM_NO_CHILDREN && (RecoveryError || !restart_after_crash))  
                ExitPostmaster(1);  
        /*  
         * If we need to recover from a crash, wait for all non-syslogger children  
         * to exit, then reset shmem and StartupDataBase.  
         */  
        if (FatalError && pmState == PM_NO_CHILDREN)  
        {  
                ereport(LOG,  
                                (errmsg("all server processes terminated; reinitializing")));  
                /* allow background workers to immediately restart */  
                ResetBackgroundWorkerCrashTimes();  
                shmem_exit(1);  
                reset_shared(PostPortNumber);  
                StartupPID = StartupDataBase();  // 重启数据库,postmaster pid不会变化  
                Assert(StartupPID != 0);  
                pmState = PM_STARTUP;  
                /* crash recovery started, reset SIGKILL flag */  
                AbortStartTime = 0;  
        }  
......  
#define StartupDataBase()           StartChildProcess(StartupProcess)  
/*  
 * StartChildProcess -- start an auxiliary process for the postmaster  
 *  
 * xlop determines what kind of child will be started.  All child types  
 * initially go to AuxiliaryProcessMain, which will handle common setup.  
 *  
 * Return value of StartChildProcess is subprocess' PID, or 0 if failed  
 * to start subprocess.  
 */  
static pid_t  
StartChildProcess(AuxProcType type)  
......  
```  
例如autovacuum 进程被kill. 断开所有backend process, 重启autovacuum lanucher  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")