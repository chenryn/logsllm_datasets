Source CryptosystemTarget CryptosystemsProxy(ABE-CT,rk1)...(ABE-CT,rkn)r-CT1r-CTn...r-CT2CS1CS2CSnSession 16: Applied Crypto 2ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea662Scheme
GA07 [20]
Scheme1
Mat07 [35]
WWM+10 [45]
THJ09 [43]
DWQ+15[16]
MD 09[36]
LAL+14[29]
LAL+15 [30]
EMO10[18]
BGK15[5]
Ours
Scheme
GA07 [20]
Scheme2
WCW10[44]
SC12 [41]
CT 07[14]
LCL+09 [31]
single-hop
Functionality Adaptive
Security
Standard User-initiate
Model
cross-system
RKG-free
IBE
PKE → IBE
IBE
IBE
IBE
IBE → IBE
IBBE→IBE
ABE→IBE
DFA
ABE
IBE
IPE
∗ → ∗
✓
NA
✓
✓
✓
✓
✓
✓
✓
✓
✓
✕
CPA
CPA
CPA
CCA
CPA
CPA
CPA
✕
✕
✕
CPA
CPA
multi-hop
Functionality Adaptive
Security
NA
✝
NA
NA
NA
✓
✓
✝
NA
NA
NA
NA
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Standard User-initiate
Model
cross-system
RKG-free
IBE
IBE
IBE
IBE
IBE
ABE
✓
✓
✓
✓
✓
CPA
CCA
CCA
CPA
✕[40]
CPA
✓
✓
✓
✓
NA
NA
NA
NA
NA
NA
✓
✓
✓
✓
✓
✓
Figure 4: Attribute-based PREs.
1. ‘RKG’ denotes the Re-encryption Key Generator, a trusted third party, might be operated by the same party as PKG. ‘NA’ means non-
applicable. ‘User-initiate cross-system’ denotes the delegator can generate the re-encryption key only by himself, without the help of RKG or
interacting with the delegatee.
2. ‘✕’ means that the scheme in that work cannot achieve its claimed security.
3.‘✝’ denotes that scheme is not user-initiate cross-system. Namely, the delegator cannot initiate to generate the re-encryption key.
4. ‘∗ → ∗’ means that our construction supports a large class of attribute-based encryptions (e.g. IBE, ABE, DFA, SE, DSE etc.) to any CPA-secure
public-key encryption scheme.
• Non-degenerate. e (д, h) (cid:44) 1 ∈ GT if д, h (cid:44) 1 ∈ G.
• Bilinear. e (дa, дb ) = e (д, д)ab for any д ∈ G and a, b ∈ ZN .
We use G(1λ ) → (G, GT, e, N , p1, p2, p3) to denote a bilinear
group generator, where 1λ is a security parameter. We recall some
properties of a composite-order bilinear group. If p|N , there exists a
subgroup Gp of G with order p. Also, for any д ∈ Gpi
and h ∈ Gpj
,
if pi (cid:44) pj, then e (д, h) = 1. The later is sometimes referred to as
orthogonality. We re-cap some complexity assumptions related to
composite-order group.
Subgroup Decision Assumptions (SD). Our construction relies
on the following three assumptions which are presented in [26,
47]. Each of the SD assumptions starts with G(1λ ) → (G, GT, e,
N , p1, p2, p3).
SD2: Given D = (д1
$← Gp1 , Z1Z2
$← Gp1p2 , д3
Gp2p3 ) and T ∈ G, decides if T = T1
Gp1p3.
SD3: Given D = (д1
$← Gp1 , д2
$← Gp2 , д3
$← Gp3 ,W2W3
$← Gp1p2p3 or T = T2
$←
$←
$← Gp3 , дα1 Y2, дs1W2)
$← GT ,
and T ∈ G, decides if T = T1 = e (д1, д1)αs or T = T2
where W2, Y2
$← Gp2 and α, s
$← ZN .
The advantage of adversary A for problem instance SDi is defined
as follows:
SDiA (1λ ) = |Pr[A(D,T1)] − Pr[A(D,T2)]|.
Adv
SD1: Given D = (д1
$← Gp1 , д3
$← Gp1p2 or T = T2
$← Gp3 ) and T ∈ G, decides if
$← Gp1.
Then assumptions SD1, SD2 and SD3 for G assert that Adv
is negligible for all probabilistic polynomial time adversary A.
SDiA (1λ )
T = T1
Session 16: Applied Crypto 2ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea6632.2 Attribute-Based Encryption
We review the definition of attribute-based encryptions, a generali-
sation of public-key encryption. We first recall the notion of predi-
cate family in [2] which is used to describe the access control policy
in attribute-based encryption. A predicate family R = {Rk}k∈N c
for some constant c ∈ N , where Rk : Xk ×Yk → {0, 1} is a predicate
function that maps a pair of attributes (one in key space Xk, the
other one in ciphertext space Yk) to {0, 1}. k is the index which
specifies a description of predicate Rk ∈ R. We require that the
first entry of k specifies the domain of predicate function Rk, and
write simply RN to denote Rk whose domain is ZN . RN is domain-
transferable if for p that divides N , then there exists projection maps
f1 : XN → Xp, f2 : YN → Yp, such that for all X ∈ XN , Y ∈ YN ,
• Completeness: if RN (X , Y ) = 1, then Rp ( f1 (X ), f2 (Y )) = 1.
• Soundness:
(1) if RN (X , Y ) = 0, then Rp ( f1(X ), f2 (Y )) = 0.
(2) if 1 does not hold, then there exists an algorithm F takes
as input (X , Y ), and outputs a non-trivial factor a, where
p|a and a|N .
An attribute-based encryption for predicate family R consists of
four algorithms, namely, (Setup, KeyGen, Enc, Dec), defined below.
Setup(1λ, k ) → (PK, MSK). This algorithm accepts a security pa-
rameter and an index k of predicate family R, outputs the
public parameter PK and the master secret key MSK. In
the following we assume the predicate for this ABE is R :
X × Y → {0, 1}.
KeyGen(MSK, PK, X ) → SK . On input master secret key MSK, pub-
lic parameter PK and key attribute X chosen from predicate
space X, this algorithm outputs secret key SK for key at-
tribute X.
Enc(Y , M, PK) → CT . On input a ciphertext attribute Y chosen
from predicate space Y, message M and public parameter
PK, this algorithm outputs ciphertext CT of M for attribute
Y.
Dec(SK, CT ) → M. On input secret key SK with attribute X and
ciphertext CT with attribute Y, outputs a message M or ⊥.
Correctness For all valid index k, all X ∈ Xk, Y ∈ Yk such that
Rk (X, Y ) = 1 and all valid message M, the following equation holds:
(1)
Dec(KeyGen(MSK, PK, X ), Enc(Y , M, PK)) = M,
where (PK, MSK) is the output of Setup(1λ, k).
Remark 2.1. We note that the above definition also covers ordinary
public-key encryption when KeyGen outputs MSK and any predicate R
in the family R is of the form {1}×{1} → {1}. In this case, encryption
is only with respect to public key PK and decryption requires the
corresponding MSK. Note that since R(X , Y ) = 1 for all X , Y , no key
query is allowed.
2.3 The Pair Encoding Framework
In [2], Attrapadung introduced the pair encoding framework which
states that an ABE scheme can be described by a simpler primitive
called pair encoding which we review here. A Pair encoding scheme
PE for predicate family R = {Rk : Xk ×Yk → {0, 1}}k∈N c is a tuple
of four deterministic algorithms (Param, Enc1, Enc2, Pair) which
are given below.
Param(k) → n. This algorithm takes as input security parameter
k and outputs the length of the public parameter ⃗h used in
Enc1 and Enc2.
Enc1(X , N ) → (⃗k; m2). On input attribute X ∈ X, N ∈ N, this al-
gorithm outputs a sequence of polynomials {kℓ}ℓ∈[m1], each
{rj}j∈[m2], where {rj}j∈[m2] is the randomness used in Enc1,
and α is a variable.
Enc2(Y , N ) → (⃗c; w2). On input attribute Y ∈ Y, N ∈ N, this algo-
rithm outputs a sequence of polynomials {cℓ}ℓ∈[w1], each
where ⃗s = (s, s1, s2, . . ., sw2 ) is the randomness used in Enc2.
Pair(X , Y , N ) → ⃗E. Take X, Y, N as input, output matrix ⃗E ∈
m1×w1
N
polynomial kℓ is a linear polynomial in {α}(cid:83) {hi}i∈[n](cid:83)
polynomial cℓ is a linear polynomial in {hi}i∈[n](cid:83) {s, sj}j∈[w2],
Correctness. For any N ∈ N, X ∈ X and Y ∈ Y, (⃗k, m2) ← Enc1
(X, N ), (⃗c; w2) ← Enc2 (Y, N ), ⃗E ← Pair (X, Y, N ), if R(X, Y ) = 1,
Z
.
⃗k ⃗E⃗c = αs.
Within this framework, an ABE scheme Π0 = (Setup, KeyGen,
Enc, Dec) for predicate family R can then be specified by a pair
encoding scheme PE = (Param, Enc1, Enc2, Pair) for the same pred-
icate family.
Setup(1λ, k) → (PK, MSK). Run (G, GT , e, N , p1, p2, p3) ← G(1λ ).
$← Gp1, д3
$← Gp3. Then run n ← Param(k),
$← ZN . The public parameter PK = (д1, д3,
Pick generators д1
$← Z n
pick ⃗h
, α
N
⃗h1 ), the master secret key is MSK = α.
e (д1, д1)α , д
KeyGen(MSK, PK, X ) → SKX . Run (⃗k; m2) ← Enc1(X , N ), choose
$← Z
⃗r
, R3
m2
N
$← Gm1
p3 , compute
⃗k (α, ⃗h,⃗r )
SKX = д
1
(2)
Enc(PK, Y, M ) → CT = (C0, ⃗C1). Run (⃗c; w2) ← Enc2(Y, N ), choose
· R3.
⃗s= {s, s1, s2, . . ., sw2} $← Z
C0 = M × e (д1, д1)αs
w2+1
N
.
(3)
Dec(SKX , CT ) → M. Obtain X and Y from SKX and CT . If R(X , Y ) =
1, run Pair(X, Y)→ ⃗E. Then compute e (SK ⃗E , ⃗C1) → e (д1, д1)αs
and obtain C0/e (д1, д1)αs → M.
⃗C1 = д⃗c (⃗s, ⃗h)
1
.
We also recall the security requirements of a pair encoding
scheme, including perfectly master-key hiding (PMH), selectively
master-key hiding security (SMH) and co-selectively master-key
hiding security (CMH). As stated in [2], both SHM and CMH are
computational and the later, but not the former, is implied by PMH.
Perfectly Master-Key Hiding Security. Let PE be a pair encod-
ing scheme. For N ∈ N, if R(X , Y ) = 0, let n ← Param(k), (⃗k; m2) ←
Enc1(X , N ), (⃗c; w2) ← Enc2(Y , N ). If the following two distributions
are identical, we say PE is perfectly master-key hiding (PMH).
{c (⃗s, ⃗h), ⃗k (0, ⃗h, ⃗r )}
where the probability is taken over ⃗h
$← Z
.
w2+1
N
{c (⃗s, ⃗h), ⃗k (α, ⃗h, ⃗r )},
$← ZN , ⃗r
$← Z
, α
n1
N
$← Z
, ⃗s
m3
N
Session 16: Applied Crypto 2ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea664Computational Security (CMH, SMH). We recall the ⃗ExpG,b,A,T (1λ )
to encompass these two security notions by using different types
of Oracles (OT = (OT ,1
), T ∈ {SMH, CMH}) for adversary
A = (A1, A2) as follows:
⃗ExpG,b,A,T (1λ ) :
, OT ,2
$← Gp2 , д3
(1) (G, GT , e, N , p1, p2, p3) ← G(1λ );
$← Gp3;
(2) д1
$← Z n