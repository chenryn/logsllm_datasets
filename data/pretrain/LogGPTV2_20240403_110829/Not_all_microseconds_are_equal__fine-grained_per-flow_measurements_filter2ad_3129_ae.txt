SANJ
WISC
10-5
10-4
10-3
10-2
10-1
True per-flow standard deviation (second)
 0
100
101
102
103
104
105
106
True flow size (packets/flow)
(b) Binned by ﬂow size
(b) Binned by standard deviation
Figure 6: Average relative error of per-ﬂow delay mean esti-
mates binned by true ﬂow delays and sizes.
Figure 7: Average relative error of per-ﬂow delay standard de-
viation estimates binned by true deviations.
different curves, we observe that the accuracy is largely similar
both for real router packet traces (WISC) as well as our backbone
traces (CHIC and SANJ traces).
In general, we observe that the accuracy of RLI appears better
for high utilization than low utilization cases. To put this result
in perspective, we observe that true value of the median delay di-
rectly depends on the utilization levels (under high, moderate and
low utilizations, average per-ﬂow latencies are approximately 390,
11.4, 1.0μs for CHIC trace). Recall that the utilization levels in our
simulations are governed by the queue drain rate; if the drain rate is
low (high), utilization is going to be low (high). Low utilization au-
tomatically translates into low per-packet queueing delay for most
packets, and hence, most ﬂows. In other words, serialization time
is a more dominant factor in latency than queueing delay. Further,
serialization time varies depending on packet size, which in turn
causes more jitter in interpolation process; errors in low utilization
are, therefore, more signiﬁcant than in high utilization.
We envision that our architecture is more suitable for isolating
the router where a ﬂow experienced bad end-to-end performance;
we therefore care about ﬂows for which the delays are signiﬁcantly
higher than the rest. In other words, for small delays (e.g., 10μs),
a relative error of 100% is not nearly as signiﬁcant as compared to
ﬂows which experience higher delays (e.g., 100μs). Thus, while
one could argue that network operators may operate typically at
low utilizations, the accuracy of RLI is itself oblivious to the exact
utilizations, and mainly depends on the absolute latency of a given
ﬂow. The fact that the accuracy of our architecture appears signif-
icantly better in the higher utilization case is merely a reﬂection
of the fact that the number of high latency ﬂows is higher in this
case. (This also explains our rationale in designing our adaptive
reference packet injection strategy to reduce the rate as utilization
grows signiﬁcantly.) In order to bring this out in more detail, we
group ﬂows by delays and ﬂow sizes.
Grouping ﬂows by delays. In Figure 6(a), we plot average relative
error of delay mean estimates by grouping relative errors based on
true per-ﬂow delay. In the ﬁgure, we only plot high utilization con-
dition, because 99.99% of per-ﬂow latencies found in both moder-
ate and low utilization scenarios are quite low for both traces (at
most 90μs and 10μs respectively). Since we are more interested in
the high delay ﬂows, for brevity, we mainly focus on the top 50%
that start at an average latency of about 100μs all the way until
about 30ms.
We can observe from Figure 6 that RLI is quite accurate in mea-
suring latencies of ﬂows that exhibit large delays. Average relative
error of mean delay estimates is close to 12% for ﬂows with true de-
lay greater than 100μs (in the SANJ trace). For the CHIC trace, we
found that 75% of ﬂows having about 100μs latency have less than
18% relative error in CHIC trace, slightly higher than the SANJ
trace. Of course, relative errors typically go down as the true de-
lay increases as the denominator is getting bigger. The important
thing, however, is that absolute error is not growing proportionately
and remains relatively small and bounded; thus, our solution can be
quite effective in measuring ﬂow-speciﬁc delay spikes of the order
of a few 100μs very efﬁciently—exactly the level of SLA speciﬁ-
cations that Cisco provides in its trading ﬂoor architecture [1].
Our real router trace, WISC, shows similar trends with CHIC and
SANJ in that as true delay increase, average relative error decreases
signiﬁcantly. Speciﬁcally, for top 20% of delays which is around
3ms true delays, RLI achieves less than 11% average relative errors.
Recall that the WISC trace is collected over an OC-3 link, that is
64 times less capacity than the OC-192 backbone traces. Thus,
intuitively, 100μs delay in the OC-192 trace translates loosely to
around 6.4ms in the WISC trace, for which the error in the delay is
around 8-9%, similar to the backbone traces.
Grouping by ﬂow sizes. As we have considered ﬂows with large
delays before, operators may also care more for larger ﬂows, for
which latency effects may be more pronounced than smaller ones
(say with fewer than 10 packets). Thus, in Figure 6(b), we plot the
average relative error for ﬂows binned by their sizes. In our results,
we found that the top 20% of ﬂows had more than 10 packets in
our backbone traces—average relative error for these is less than
11%. For larger ﬂows, the error is even lower (around 3% for ﬂows
larger than 100 packets). Flow-size distributions in WISC traces
are synthetic; hence, we did not plot the corresponding curve.
Accuracy of delay standard deviation. While good accuracy in
average latency estimates is nice, it is important to be able to esti-
35 1
 0.8
 0.6
 0.4
 0.2
F
D
C
 0
10-3
r
o
r
r
e
e
v
i
t
l
a
e
r
e
g
a
r
e
v
A
101
100
10-1
10-2
10-3
RLI
RLI-L
MFE
Trajectory
100
101
10-2
10-1
Relative error of delay mean estimates
(a) CDF of relative error
RLI
RLI-L
MFE
Trajectory
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
Link utilization
(b) Average relative error by utilization
Figure 8: Comparison with other solutions on SANJ trace with
a packet sampling rate of 0.1%.
mate the variation in delays accurately, at least for the ﬂows where
such a measure is important, i.e., those that exhibit high amount
of standard deviation. We follow a similar approach as we did for
mean delay to compute a CDF of the standard deviation estimates
(shown in Figure 7(a)). From the ﬁgure, we can observe that the
median error is less than 12% with some small fraction of ﬂows
exhibiting high relative error. We also computed similar CDFs for
the moderate and low utilization cases (not shown for brevity). As
in the case of mean, the standard deviation estimates were more
accurate for the high utilization case as compared to the low uti-
lization scenario. In all utilization cases, when the true value of
the standard deviation is quite low, we found that the relative error
was really high—the exact proportion of ﬂows that exhibited low
standard deviation changed depending on the utilization character-
istics. To show this, we bin the ﬂows into different groups based on
their true standard deviation and plot the average relative error in
Figure 7(b). As before, we can observe that the average relative er-
ror in detecting standard deviations greater than 100μs is less than
20%, and for higher standard deviations, it is even lesser.
5.2 Comparison with other solutions
We compare our architecture with previously proposed solutions
discussed in §4.3, trajectory sampling and MFE, and also study the
advantage of using RLI estimator compared to RLI-L estimator. In
these experiments, we introduce a sampling rate of 0.1% in order to
keep the trajectory sampling overheads relatively small. While the
MFE and RLI estimator (both variants) do not care about the packet
sampling rate directly, it affects the set of ﬂows created; typically,
random packet sampling leads to the creation of ﬂow records for
relatively large ﬂows or ‘elephants’. Thus, to make the accuracy
comparison consistent (on the same set of ﬂows), we subject our
RLI to the same sampling rate as both trajectory and MFE. Note
that for RLI, we estimate and update the packet latency counters
for all the packets (similar to sample-and-hold [17]) that match the
ﬂow after the ﬂow is created.
We plot the CDFs comparing the relative errors of mean delay
estimates (standard deviation graphs look very similar) across dif-
ferent schemes in terms of relative error in Figure 8(a) for the high
l
y
a
e
d
d
e
t
a
m
i
t
s
E
10-2
10-3
10-4
10-5
10-6
10-6 10-5 10-4 10-3 10-2
True delay
l
y
a
e
d
d
e
t
a
m
i
t
s
E
10-2
10-3
10-4
10-5
10-6
10-6 10-5 10-4 10-3 10-2
True delay
(a) MFE
(b) RLI
Figure 9: Scatter plots comparing the ﬂow latency estimates
output by MFE with RLI.
utilization case. Trajectory sampling clearly performs the worst,
in part because it contains very few samples on a per-ﬂow basis.
The relative error for about 50% of the ﬂows is larger than 80%;
the estimates therefore are not reliable at all. MFE performs bet-
ter than trajectory; the fact that it takes advantage of intermediate
background samples from other ﬂows into consideration allows it
to reﬁne its estimates, allows it to approach the global mean ob-
served during the duration of that particular ﬂow.
RLI performs the best among all with most estimates well within
1% relative error—representing two and half orders of magnitude
improvement over trajectory sampling (500x) and almost two or-
ders improvement over MFE. We observe a similar trend with the
standard deviation estimates (not shown in the ﬁgure). RLI-L, that
uses no interpolation buffer and assigns the delay observed because
of the left reference packet as the estimate, performs better than
both MFE and trajectory, but loses some amount of accuracy (about
half an order of magnitude) compared to RLI. This is the price RLI
pays in the form of an interpolation buffer to hold packets.
We also compare these solutions across a wide range of utiliza-
tions in Figure 8(b). We observed similar trends, with RLI out-
performing the rest signiﬁcantly; the gap between RLI and the rest
is signiﬁcantly more pronounced at higher utilizations where the
absolute delays tend to be high for which the accuracy of RLI is
much better. Still, RLI estimates are more than an order of magni-
tude more accurate than MFE in many cases.
Scatter plots in Figure 9 compare the true and estimated delays
for individual ﬂows for both RLI and MFE. The key difference be-
tween RLI and MFE is the presence of extra timing information for
each and every intermediate packet that belongs to that particular
ﬂow. This timing helps RLI estimate the delay signiﬁcantly better
using a local estimate (as discussed in §2) compared to the MFE
scenario, where it crudely approximates based on the sampled ﬁrst
and last packets of the background ﬂows. The difference can be
clearly observed in all our results, with RLI outperforming MFE
by one to two orders of magnitude in terms of the relative error.
5.3 Overheads of RLI
We quantify the direct and obvious overheads associated with the
reference packet trafﬁc, and indirect effects of the reference packet
trafﬁc on actual per-ﬂow latencies and losses. In Figure 10(a), we
show the fraction of link capacity used by the reference packet traf-
ﬁc for different link utilization levels. As we can observe, the band-
width consumed by reference packet trafﬁc is quite small. At low
utilization, where the reference packet trafﬁc is injected at relatively
higher rate (at roughly 1-in-10 packets), still, the overall bandwidth
consumed is about 0.1%. As utilization increases, the bandwidth
consumption falls down steeply to 0.007% at 90% utilization.
Low bandwidth is nice, but it is also important for the reference
packet trafﬁc to not interfere too much with regular trafﬁc, although
some amount of interference is unavoidable. To quantify this, we
measure the difference between the average latency experienced
3610-2
100
n
o
i
t
p
m
u
s
n
o
c
h
t
d
w
d
n
a
B
i
10-3
10-4
n
o
i
t