0.15
0.1
0.05
l
s
e
u
a
v
P
l
a
m
i
t
p
O
wk1
wk2
wk3
wk4
wk5
wk6
wk7
0
0
5
10
Nodes
15
20
Figure 4: Optimal P Values over Time Totem
levels. In summary, we did ﬁnd strong diurnal patterns in
these timeseries, corresponding to daily variation as well as
weekend variation.
5. TM GENERATION USING IC MODEL
Developing a comprehensive framework for synthetically
generaing traﬃc matrices is a non-trivial task [10]. However,
we claim that the IC model represents a relatively simple
and accurate starting point for TM generation.
Based on the characterization results we have presented
here, one can attempt to use the stable-f P IC model to gen-
erate synthetic traces by following these steps: (1) Choose
an f value. Our results suggest that a in the range 0.2
to 0.3 is reasonable, (2) Use a long-tailed distribution to
generate a set of preference values {Pi}. While we do not
advocate a particular choice of distribution, our results sug-
gest that a distribution like the lognormal is a reasonable
choice, (3) Generate activity time series {Ai(t), i = 1, ..., n}.
A model that explicitly incorporates daily variation, such as
the cyclo-stationary model in [13], would make sense. and
(4) Construct the timeseries of traﬃc matrices Xij (t) us-
ing equation (5). There are a number of advantages to this
approach for TM generation. First, the parameters have
an interpretation in terms of real network phenomena. For
example, if an analyst wishes to incorporate knowledge of
application mix, or explore the eﬀects of changes in applica-
tion mix, it is possible to do so by varying f . If an analyst
wishes to model network ‘hot spots’ or ‘ﬂash crowds’ this
is possible by varying {Pi}. Finally if an analyst wishes to
incorporate knowledge of user population levels, or explore
the eﬀects of varying such levels, it is possible to do so by
varying {Ai(t)}. Second, as noted in Sec. 2, the stable-f P
model requires relatively few inputs: nt+n+1 for a network
of size n over t timesteps.
Finally, the last strength of this approach is made clear by
contrast with the gravity model, which previously has been
suggested as a starting point for synthetic TM generation
[11]. In the gravity model, the set of inputs {Xi∗(t)} and
{X∗j (t)} are causally related. gravity models requires that
the sum of the Xi∗(t)s ∀i equal the sum of the X∗j(t)s ∀j.
This constraint is typically imposed per time slot t. Thus it
is not a simple matter to synthetically construct inputs to
the gravity model: the inputs at each timestep are causally
constrained, in a complex way. On the other hand, the set
of time-varying inputs {Ai(t)} to the stable-f P model are
not causally related. They may show strong correlations in
time (which can be modeled stochastically), but they do not
follow any constrained relationship that must be preserved.
Hence synthetic TM generation is considerably simpler un-
der the IC model than under using a method like the gravity
model.
6.
IC MODEL FOR TM ESTIMATION
In the last section we showed that the IC model estimates
real TM data better than the gravity model. This motivates
us to ask whether it forms a better starting point for TM es-
timation than the gravity model. The TM estimation prob-
lem has been well studied. The fundamental issue with this
inference problem is that it is a highly under-constrained,
or ill-posed, system [12, 16].
Although the speciﬁcs of particular solutions to TM esti-
mation diﬀer, many of the TM estimation solutions follow
this blueprint: Step (1) Choose a starting point xinit as a
prior to the estimation algorithm, Step (2) Run an estima-
tion algorithm using Y , R and xinit to get xest and Step (3)
Run an iterative proportional ﬁtting algorithm to make sure
the estimated TM xest adheres to link capacity constraints.
Most solutions to the TM estimation problem (such as [9,
4, 12, 16]) select diﬀerent methods to carry out steps 1 and
2, while step 3 remains the same across many solutions. The
studies in [8, 6] indicate that the quality of the initial prior
is quite important and thus a better initial prior can lead to
substantially better estimates.
A key question in using the IC model to generate the prior
in Step 1 is what sorts of measurements are used in to de-
termine the model parameters. When using the stable-f P
model, we assume that f and {Pi} have been previously
measured. To use the stable-f model, we only need to as-
sume that f is known or measurable. We will see that both
cases yield improvements over the gravity model.
One possibility for obtaining measurements for our pa-
rameters is that of the hybrid scenarios proposed in [12]
which combine direct TM measurement during a small set
of weeks with inference used during the other weeks. (This
was proposed to lighten the burden on ﬂow monitors.) In
this case old TMs can be used to calibrate our parameters.
For our study, we vary the prior in Step 1 keeping Steps 2
and 3 the same. For Step 2 of the TM estimation procedure
we use the least-squares estimation techniques proposed in
[15] (also known as the tomo-gravity approach).
We point out that we are using the simple gravity model
herein, and the authors of [16] have also proposed a gener-
alized gravity model, which takes into account side informa-
tion about link types (e.g., access or peering). It is known
that this extension to the gravity model improves upon the
simple gravity model. We did not compare our prior to the
generalize gravity model prior because such additional in-
formation was not available to us.
6.1 TM Prior with Stable-f P Model
In these experiments, we use two weeks of data. Week 1
data is used to compute f and {Pi}. The goal is to produce
TM estimates for week 2. But before producing a TM prior
for week 2, we need to produce estimates for {Ai(t)} during
week 2. We next explain how to estimate {Ai(t)} (called
{ ˜Ai(t)}) using only the ingress and egress node counts along
with the f and {Pi} values.
In what follows, we organize the values of {Ai(t)} into an
n × t matrix A, in which Ait corresponds to Ai(t). We also
reorganize Xij (t) into the n2 × t matrix X where we have
one (i, j) pair per row, and each row is a time series.
In the stable-f P model, Xij (t) is a linear function of
{Ai(t)} as given by Equation (5). Thus we can use f and
{Pi} to construct a matrix φ such that:
X = φA
(7)
We cannot use a pseudo-inverse solution on this equation
to estimate A from X because X is unavailable (indeed, this
is the traﬃc matrix itself). However, what is available are
the ingress and egress nodes counts, speciﬁcally {Xi∗} and
{X∗j}. We thus need to convert X in (7) to the ingress and
egress counts.To do so, we deﬁne a matrix H whose elements
Hij are 1 if TM ﬂow j contributes to the total ingress count
for node i, and 0 otherwise. In other words, if TM ﬂow j
originates at node i, then its traﬃc will be counted in that
nodes ingress count. Because there are n nodes and n2 OD
ﬂows in the network, the dimensions of H are n × n2. With
this deﬁnition of H we can now write, for a node i, Xi∗ =
H(i,∗)X where H(i,∗) is the i-th row of H. Let Xingress
denote the column vector of ingress counts for all nodes;
thus Xingress = HX , and the dimensions of Xingress are
n × t (i.e., we have the time series for each node). Similarly
we deﬁne the 0-1 matrix G such that Xegress = GX .
Next we deﬁne the block matrix Q that is composed by
»
stacking matrix H on top of G:
H
G
whose size is thus 2n × n2. Then
Q =
–
–
» Xingress
Xegress
QX =
which is the data that is available to us.
After some simple manipulation, we get our IC-model
prior, ˜X, is now given by:
(Qφ)T QX
6.2 TM Prior with Stable-f Model
˜X = φ((Qφ)T Qφ)
−1
(8)
In our ﬁnal scenario, we assume that the only IC model
parameter that can be obtained directly from measurement
is f . Again, we assume we only have ingress and egress node
counts available to estimate {Ai} and {Pi}.
Simple algebraic manipulation can give us
f Xi∗ − (1 − f )X∗i
(9)
We perform a similar exercise to obtain estimates for {Pi},
2f − 1
˜Ai =
namely,
˜PiP
T
j=1
=
˜Pj
f X∗i − (1 − f )Xi∗
P
(2f − 1)
j=1 Aj
T
(10)
With these relationships, we construct a new prior for TM
estimation. For each time bin, the most recent ingress and
egress counts are used to estimate {Ai} and {Pi}, and these
estimates are combined with f according to the stable-f IC
model (4) to produce a TM prior.
We ﬁnd that the IC model yields substantial improve-
ments over the gravity model. Whether using measured φ
from the previous week or two weeks back [5], improvements
are in the range of 10-20%. We thus improve on the grav-
ity model, using only ingress/egress counts to estimate A,
and a previous week to estimate f and {Pi}.Similarly we see
improvements of around 8% with the stable-f IC prior as a
prior. Even when very little side information is available to
the analyst (just an estimate of f ), the IC model outper-
forms the gravity model as a prior for TM estimation. Refer
to [5] for detailed results.
7. CONCLUSIONS
In this paper we introduced a new model for traﬃc matrix
data that takes into consideration the bidirectional nature
of most Internet connections. We compared our model to
another popular traﬃc matrix model, namely the gravity
model. We found that our IC model better ﬁts actual traﬃc
matrix data. This was our ﬁrst validation of our model. We
considered the TM application of traﬃc matrix estimation,
and showed that when TM estimation uses the IC model as a
prior, it can do a better job, than with a gravity model prior.
This comparison serves as a second validation of our model.
In studying the application of our model to our data we
learned interesting things about our model parameters; (1)
the network-wide ratio of forward to reverse traﬃc is quite
stable over multiple days and weeks; (2) the preferences or
popularity of nodes is also stable over multiple weeks. These
two ﬁndings justify the use of the simplest version of our
model for the application of synthetic traﬃc generation.
This work was supported in part by NSF grants ANI-
9986397 and CCR-0325701, and by Intel.
8. REFERENCES
[1] Geant network http://www.geant.net.
[2] Internet Abilene Network http://www.internet2.org.
[3] Optimization Toolbox Matlab
http://www.matlab.com/products/optimization/.
[4] Cao, J., Weil, S. V., and Yu, B. Time-Varying Network
Tomography. Journal of the American Statistical Assoc. 2000
(2000).
[5] Erramilli, V., Crovella, M., and Taft, N. An Independent
Connection model for Traﬃc Matrices. Tech. Rep. 2006-022,
Computer Science Dept., Boston University, Boston, MA, USA,
2006.
[6] Gunnar, A., Johansson, M., and Telkamp, T. Traﬃc Matrix
Estimation on a Large IP Backbone - a Comparison on Real
Data. Proceedings of ACM/Usenix IMC 2004 (2004).
[7] Lakhina, A., Crovella, M., and Diot, C. Diagnosing
Network-wide Traﬃc anomalies. In In Proceedings of ACM
SIGCOMM (2004).
[8] Medina, A., Salamatian, K., Taft, N., Matta, I., , and Diot, C.
A Two Step Statistical Approach for Inferring Network Traﬃc
Demands. Tech. Rep. 2004-011, Boston University, Computer
Science Department, March 2004.
[9] Medina, A., Taft, N., Salamatian, K., Bhattacharyya, S., and
Diot, C. Traﬃc Matrix estimation: existing techniques and new
directions. In Proceedings of ACM Sigcomm 2002 (New York,
NY, USA, 2002).
[10] Nucci, A., Sridharan, A., and Taft, N. The problem of
synthetically generating IP Traﬃc Matrices: initial
recommendations. ACM Computer Communication Review
35, 3 (2005), 19–32.
[11] Roughan, M. Simplifying the synthesis of Internet Traﬃc
Matrices. SIGCOMM Comput. Commun. Rev. 35, 5 (2005),
93–96.
[12] Soule, A., Lakhina, A., Taft, N., Papagiannaki, K.,
Salamatian, K., Nucci, A., Crovella, M., and Diot, C. Traﬃc
Matrices: Balancing Measurements, Inference and Modeling. In
Proceedings of the ACM SIGMETRICS (2005).
[13] Soule, A., Nucci, A., Cruz, R., Leonardi, E., and Taft, N.
How to identify and estimate the largest Traﬃc Matrix
elements in a dynamic environment. Proceedings of ACM
SIGMETRICS (2004).
[14] Uhlig, S., Quoitin, B., Lepropre, J., and Balon, S. Providing
public intradomain traﬃc matrices to the research community.
SIGCOMM Comput. Commun. Rev. 36, 1 (2006), 83–86.
[15] Zhang, Y., Roughan, M., Duffield, N., and Greenberg, A. Fast
accurate computation of large-scale IP Traﬃc Matrices from
Link Loads. In Proceedings of the 2003 ACM SIGMETRICS
(New York, NY, USA, 2003), ACM Press, pp. 206–217.
[16] Zhang, Y., Roughan, M., Lund, C., and Donoho, D. L.
Estimating point-to-point and point-to-multipoint Traﬃc
Matrices: an Information-theoretic Approach. IEEE/ACM
Trans. Netw. 13, 5 (2005), 947–960.