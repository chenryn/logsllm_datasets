the network topology and link state information, and limited link
state propagation in a time slot.
3.1 Network components
There are three main components in a quantum network [52, 57],
explained as follows.
1. Quantum processors are similar to the end hosts in classi-
cal networks, which are connected to a certain number of other
quantum processors by quantum channels to form a quantum net-
work and run the network applications to communicate with each
other. Different from classical end hosts, each quantum processor
is equipped with a certain number of memory qubits and necessary
hardware to perform quantum entanglement and teleportation on
the qubits. All quantum processors are connected via the classical
Internet and are able to freely exchange classical information.
2. Quantum repeaters. As it is difficult to directly establish
an entanglement between two remote quantum processors, quan-
tum repeaters are used as relays. Quantum repeaters support long-
distances entanglement sharing via quantum swapping. A quantum
repeater may also connect to other repeaters and quantum proces-
sors via the classical Internet to exchange the control messages.
Every quantum processor also includes the complete function of
a repeater. Hereafter we call both quantum processors and repeaters
as nodes.
3. Quantum channels. A quantum channel connecting two
nodes supports the transmission of qubits. The physical material of
quantum channels may be polarization-maintaining optical fibers.
A quantum channel is inherently lossy: the success rate of each
attempt to create an entanglement of a quantum channel c is pc ,
which decreases exponentially with the physical length of the chan-
nel: pc = e‚àíŒ± L, where L is the physical length of the channel and
Œ± is a constant depending on the physical media [36, 43, 53, 57].2
If an attempt is successful, the two quantum processors share an
entanglement pair, and there is a quantum link on this channel.
Network topology. Consider a network of quantum nodes de-
scribed by a multigraph G = ‚ü®V , E, C‚ü©. V is the set of n nodes. Each
node u is a quantum processor, equipped with a limited number
Qu of qubits to build quantum links. All nodes are connected via
classical networks, i.e., the Internet, and every node has a certain
level of classical computing and storage capacity, such as a desktop
server. E is the set of edges in the graph. An edge existing between
two nodes means that the two nodes share one or more quantum
channels. C is the set of all quantum channels, each of which is
identified by its two end nodes. The number of channels on an edge
is called the width W of the edge.
A node can assign/bind each of its quantum memory qubits
to a quantum channel [28, 29], such that no qubit is assigned to
more than one channel, and no channel is assigned more than one
qubits at the same end of it. Channels that are assigned qubits
at its both ends are bound channels, other channels are unbound
channels. There could be more than one bound channels between
two nodes. And two neighbor nodes may share multiple quantum
links. To create a quantum entanglement, two neighbor nodes make
a number of quantum entanglement attempts at the same time on
the bound channels connecting them.
3.2 Communication and security model
For each round of communication, the source and destination are
two mutually trusted quantum processors, but they may not trust
other nodes. The source aims to deliver secret bits to the destina-
tion without letting other repeaters know, via a path of quantum
2The success rate of a link is determined by the physical layer and link layer, taking
into account the channel transmissivity, fidelity of transmitted entanglements, number
of permitted entanglement trials in one phase, and the link layer algorithm [13, 36]. In
the link layer, a channel is allowed multiple attempts to build a link, and the link is
established on the first successful attempt. The pc here is the overall success rate.
64
SIGCOMM ‚Äô20, August 10≈õ14, 2020, Virtual Event, NY, USA
Shouqian Shi and Chen Qian
Figure 2: Phases in a time slot. Nodes 1 and 2 are two arbitrary
neighbor nodes and run the same algorithm.
swapping (explained in Sec. 3.3). All nodes will follow the protocol
but may seek to get the secret information sent from the source to
the destination, similar to the ≈Çhonest-but-curious≈æ model in classic
network security. Once an intermediate node measures the infor-
mation to perform passive eavesdropping, such behavior will be
detected by the two endpoints according to the no-cloning theorem.
In addition, an external classical ‚Äònetwork information server‚Äô
may be trusted to maintain the following information and send
delta updates to all nodes in the network when necessary: 1) the
network topology and 2) the current source-destination pairs (S-
D pairs) that need to establish long-distance entanglements. The
network information server may work in an honest-but-curious
way and it will not know the communication content. Hence even
if a network information server may be comprised ≈õ which can
be detected by classical auditing methods ≈õ it will not hurt the
confidentiality for previous, on-going, and future communications.
3.3 Quantum swapping via a path
Time slots. For multi-hop entanglement swapping, all nodes on
the path need to establish and hold quantum entanglements with
its predecessor and successor at the same time. Hence, some level
of time synchronization among all nodes is necessary, which can be
achieved by existing current synchronization protocols via Internet
connections. Time is loosely synchronized in time slots [36]. Each
time slot is a device-technology-dependent constant and set to an
appropriate duration such that the established entanglements do
not discohere within one time slot [36]. The global network topol-
ogy G = ‚ü®V , E, C‚ü©, which is relatively stable, should be common
knowledge for all nodes before any time slot.
As shown in Fig. 2 and Fig. 3, each time slot includes four phases
as an extended model from [36]. In Phase One (P1), via the Internet,
all nodes receive the information of the current S-D pairs that need
to establish long-distance entanglements. As an example in Fig. 3(a),
each node has a number of qubits (red dots) and multiple quantum
channels (dashed lines) connecting neighbors. Two neighbors may
share multiple channels. Suppose ‚ü®A, B‚ü© is the only S-D pair for this
time slot, and all nodes are informed of the S-D pair.
Phase Two (P2) is called the external phase [36]. In P2, paths are
found for the S-D pairs, according to an identical routing algorithm
Figure 3: Phases in a time slot. Entanglement routing aims to build
end-to-end paths for S-D pairs (A-B in this example).
running on all nodes that produces consistency results. Each node
then binds its qubits to channels and attempts to generate quantum
entanglements with neighbors on the bound channels [28, 28]. As
an example in Fig. 3(b), two paths (solid curves) are calculated to
connect A and B. A path is identified by the sequence of the nodes
along the path v0 , v1 , ¬∑ ¬∑ ¬∑ , vh and the path width W , meaning each
edge of the path has at least W parallel channels. The path ‚ü®(v0 ,
v1 , ¬∑ ¬∑ ¬∑ , vh), W ‚ü© is also called a (W , h)-path, or a W -path. C, D, and
E are nodes on the paths and work as repeaters. Since qubits are
limited resources, some channels are not assigned qubits and thus
not used in this time slot. During P2, each channel can make a
number nc of attempts [21], nc ‚â• 1, until a link is built or timeout.
After P2, some quantum links may be created as shown in Fig. 3(b).
We call the information of these links as link states. Compared to
the same term in link-state routing of classical networks [33], the
quantum link states are highly dynamic and nondeterministic.
In Phase Three (P3), each node knows its own link states via
classical communications with its neighbors [36] and shares its
link states via the classical network, as shown in Fig. 3(c). Since
entanglements will quickly decay, each node can only exchange the
link states with a subset of other nodes. P3 only includes classical
information exchange.
In Phase Four (P4), also called the internal phase [36], nodes per-
form entanglement swapping to establish long-distance quantum
entanglement using the successful quantum links. Each node locally
determines the swapping of successful entanglements, which can
be considered as placing an internal link between two qubits as
shown in Fig. 3(d). Each swapping succeeds at a device-dependent
probability q. A and B can successfully share an entanglement qubit
pair (an ebit) if there is an end-to-end path with both external and
internal links as shown in Fig. 1(d).
After P4, the secret bit can be teleported from the source to
the destination. Eavesdropping attempts at any repeater will be
detected hence the confidentiality is preserved.
Local knowledge of link-state. P3 and P4 should be short such
that the successful entanglements built in P2 do not decay. Hence,
it is impractical for a node to know the global link states within
such a short time as the classical network has latencies [36]. A
65
P3Exchange link stateNode 1P2: qubit assignmentOne time slotInput: network topology and SD pairsOutput: selected paths, qubit to channel assignmentP4: place internal linkInput: selected paths and local link stateOutput: internal linksNode 2P1Receives SD pairsP3Exchange link stateP2: qubit assignmentSame as the leftP4: place internal linkSame as the leftP1Receives SD pairs(b)P2(externalphase):pathsarefound(solidlines)fromAtoB,andeachnodeassignsqubitstochannelsaccordingtothepaths(c)P3:eachchannelmayfailorsucceedtobuildanentanglement(solidline).Theselinkstatesaresharedwithinùíåhops.(d)P4(internalphase):eachnodelocallydecidesswapping(boldsolidlinesinCandD).Then,AandBsharearemoteentanglement.ABCDEABCDE(a)P1:AllnodesareinformedoftheS-Dpair:A-B,andqubitsarenotboundedtoanyquantumchannels(dashedlines)ABCDEABCDEConcurrent Entanglement Routing for Quantum Networks: Model and Designs
SIGCOMM ‚Äô20, August 10≈õ14, 2020, Virtual Event, NY, USA
practical model is to allow each node to know the link states of its
k-hop neighbors, k ‚â• 1 [24]. The swapping decisions in P4 thus
include the k-hop link-state information as the input. It is obvious
that the routing path selection could be sub-optimal without global
link-state knowledge.
Exclusive qubit/channel reservation. In P2 of each time slot,
to establish a single link on a channel, each end of the channel is
assigned a qubit. This qubit-channel assignment is exclusive: one
qubit cannot be shared by other channels, and no more qubits can
be assigned to a channel. In P4, to generate distant entanglements
from local ones, quantum swapping is performed on pairs of links.
This quantum swapping is also exclusive and a single link cannot be
used for more than one swapping. Hence, the qubits and channels
are precious routing resources and should be carefully managed.
Physical parameters. We show the physical parameters of typ-
ical quantum networks, which provide several insights into our
model and design. 1) The short entanglement persistent time de-
termines the nodes should be synchronized to ensure all links are
available simultaneously for selected paths. 2) The short entangle-
ment persistent time T sets the limit that t2 + t3 + t4 < T in Fig. 3.
3) The local link state cannot be propagated to the whole network.
4) The qubit capacity is bounded in a node so that the dynamic
binding of qubits and channels are necessary in P2. A most recent
quantum processor can have up to 8 qubits [13]. The typical time
for an entanglement to discohere is 1.46s [13]. The entanglement
establishment time is ~165¬µs for concurrent trying [13]. The suc-
cess rate of a single entanglement try is dependent on the length of
the optical fiber and is typically ~0.01% [13]. Multiple concurrent
entanglement tries are possible within a time slot to have a reason-
able channel success rate in P2. A typical classical communication
finishes at ~1ms, in a dedicated optical fiber network. Balancing
the time for P2 and P3 are necessary to have both high channel
success rate in P2 and a large enough local view of link states in P3.
The entanglement readout time is typically < 3¬µs [13], negligible
in routing algorithm design.
3.4 The entanglement routing problem
This work studies the entanglement routing problem: we are given
a quantum network with an arbitrary network graph G = ‚ü®V , E, C‚ü©
and a number of source-destination (S-D) pairs ‚ü®s1, d1‚ü©, ‚ü®s2, d2‚ü©,
¬∑ ¬∑ ¬∑ , ‚ü®sm , dm‚ü©, where si , di ‚àà V . The number of memory qubits of
a node u ‚àà V is Qu , and each edge e ‚àà E consists of one or more
channels from C. For each bound channel c, a link is successfully
built at a probability pc in P2. In P3, each node gets the link-state
information of its k-hop neighbors. Each node decides the swapping
of its internal qubits in P4 locally, and each swapping succeeds in
probability q. The objective of entanglement routing is to maximize
the number of ebits delivered for all S-D pairs in each time slot. Each
ebit must be delivered by a long-distance quantum entanglement,
built by a path of successful quantum links from the source to the
destination. Each S-D pair may share multiple ebits. The number of
ebits for one S-D pair in one time slot is also called the throughput
between the S-D pair. The objective can then be set to maximizing
the overall throughput in the network.
This objective does not consider fairness among different S-D
pairs, but we show the proposed algorithms achieve a certain level
of fairness as in ƒü 5. In addition, in ƒü 6 we propose a simple extension
to our designs to achieve better fairness among S-D pairs.
3.5 Compared with classic network routing
We summarize the differences between quantum entanglement
routing and classic network routing. We show that existing routing
techniques are not sufficient to solve the entanglement routing
problem.
Term clarification. Edges, channels, and links have different
definitions in this model, although they are used interchangeably
in classic networks. Besides, the network topology and global link
states may be considered as similar information in classic routing
such as OSPF [33]. However, in a quantum network, while the
network topology (nodes and channels) is stable and known to all
nodes, the link states (whether the entanglements succeeded) are
dynamic and only shared locally in P3 and P4 of each time slot.
Versus routing in wired packet-switching networks. Link-
state and distance-vector are two main types of routing protocols for
packet-switching networks. Main differences: 1) Packet switching
relies on either link-state broadcast or multi-round distance vector
exchanges to compute the shortest paths. However, in a quantum
network, link states are probabilistic and vary in different time
slots. There is no time for global link-state broadcast or distance
vector convergence, because entanglements on the links will quickly
decay. 2) Quantum links are highly unreliable while wired links are
relatively reliable. 3) A quantum link cannot be shared by multiple
S-D pairs, which is allowed in classic packet switching. If a link
is claimed by multiple S-D pairs, it can only satisfy one of them.
Hence, the ≈Çshortest paths≈æ computed by classic routing will not
always be available. 4) Classic packets can be buffered on any node
for future transmission. In quantum networks, links on a path must
be successful in the same time slot.
Versus routing in multi-hop wireless networks, such as mo-
bile ad hoc networks [20] and wireless sensor networks [2]. Main
differences: 1) For an ad hoc wireless node, neither the network
topology nor global link state is known. For a quantum node, al-
though link state is local information, the network topology is
known in advance via the Internet. 2) An ad hoc wireless node
can keep sending a packet until the transmission is successful or a
preferred receiver moves close to it. Each quantum link can only
be used once and all links on an end-to-end path must be available
simultaneously. 3) Existing wireless ad hoc routing methods such
as DSR [22], AODV [39], and geographic routing [23, 27, 44] are all
packet-switching protocols and do not fit quantum networks. Also,
they do not take the global network topology information.
Versus circuit-switching, virtual circuit, and flow schedul-
ing in SDN. Circuit switching, virtual circuit, and flow scheduling
in software defined networks (SDNs) all need to pre-determine the
end-to-end paths and reserve certain resources on the paths, such as
[3, 4, 12, 47], which share similarity with entanglement routing. The
main difference is that in a quantum network, though the topology
(nodes and channels connecting them) is relatively stable, reserved
paths for an S-D pair are not reliable because links may arbitrarily
fail. Hence, more robust algorithms are required. Besides, to build a
long-distance entanglement along a path, all hops of the path should
have one or more success quantum link at the same time. Hence,
time is divided into slots and phases for synchronization. Due to
the two differences above, the algorithm of entanglement routing is
very different from that of circuit-switching, in the following two
novel designs: 1) multiple paths are selected in P2, based on global