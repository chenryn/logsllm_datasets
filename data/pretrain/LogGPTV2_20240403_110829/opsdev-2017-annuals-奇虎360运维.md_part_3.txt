Lng
('Verify'）{
of
shX*
sh
echo "To check whether related
echo
echo"To generate
parameters
"xXX XXX XXX"
"To build image
image_name
providedwhen trigger
'MINUTES'
'Dockerfile
projec
---
## Page 20
本文链接： https://opsdev.cn/post/Docker-image-ci-in-hulk.html 
A：不需要，Jenkinsfile我们设计的plPeline流程是通用的，变化的参数，通过trigger时传入。
Q：Jenkinsfile的plPeline需要用户自己写？
ENTRYPOINT。
A：是的，用户点鼠标，
Q：镜像配置编辑页面，是图形化Dockerfile吗？怎么做的？
面对面：
，后天生成Dockerfile，
，比如rootfs会被ADD，命令序列，是一系列RUN，入口程序是
备注信息
容器化－Hulk容器服务的镜像Cl解决方案
最后作人
2017-06-0717:51:00
更新时间
2017-08-0717:49:41
壹看配置新建配置
茁
口
口
扫
锁像历史
查看文章详情
壹看日志
3
15
---
## Page 21
Kubelet 代码结构
Kubelet功能
和节点资源。
上注册节点自身信息，定期向Master节点汇报节点资源的使用情况，并通过cadvise监控容器
Master节点下发到本节点的任务，管理Pod及Pod中的容器。每个Kubelet进程会在APIServer
在Kubernetes集群中，在每个Node节点上都会启动一个kubelet服务进程。该进程用于处理
Kubelet介绍
一个参考。(kubelet版本:1.7.4)
本篇文章主要介绍kubelet服务如何启动及创建Pod的流程，也对想要看kubelet源码的同学作为
背景
IKUBELET源码分析
· cmd/kubelet/kubelet.go kubelet服务的入(main)。
·容器监控
·容器的健康检测
●Pod管理
I Nov. 23rd 2017 BY 王希刚 
16Kubelet源码分析－容器化
directories,16 files
kubeletgit:(2c2fe6e)xtree
Kubelet.go
server_test.go
auth.go
OWNERS
ver_unsupported.go
---
## Page 22
在RunKubelet中主要做CreateAndlnitKubelet和startKubelet两件事。
上面的时序图就是整个kubelet的启动流程：
Kubelet服务启动流程
图中，会标记pkg中用到了哪些文件，并主要实现了什么功能。
除了入口，kubelet其它的主要功能实现在pkg/kubelet下。这里就不一一介绍了，在下面的时序
·checkPermission 对运行kubelet进程的用户的权限验证(是否为root用户)。
· CreateAPIServerClientConfig 创建与控制节点api-server交互的client 
·validateConfig 主要对kubelet的NewKubeletServer结构体进行参数校验。
·cmd/kubelet/app/server.go 主要负责校验参数，创建和api-server交互的client及对运行
 (kubeClient, eventClient)。
kubelet权限检测，启动Kubelet等等。
StartGarbageCollection()
BirthCry()
eturni,
err
2
urebhawe dlivyered otp
ion,
BirthCr
kubeDeps
容器化－Kubelet源码分析
17
---
## Page 23
通过该server获取Pod及Node的相关信息。
startKubelet内的第一个goroutine负责启动kubelet,而后面则是创建一个kubelet http server。
当之前所有的预处理工作处理完成之后，准备启动我们的kubelet服务startKubelet。
·StartGarbageCollection 开启垃圾回收服务
·BirthCry通知api-server服务kubelet启动了
·NewMainKubelet 实例化一个kubelet对象，
18Kubelet源码分析－容器化
工作,如：
>
gpuManager 对GPU的支持
probeManager 容器健康检测
statusManager Pod状态的管理
imageManager 镜像的管路
PodManager 对Pod的管理(如:增删改等)
nitNetworkPlugin 网络插件的初始化
configMapManager configMap资源的管理
SecretManager secret资源的管理
diskSpaceManager 磁盘空间的管理 
 makePodSourceConfig Pod元数据的来源(FILE, URL, api-server)
containerGC 容器的垃圾回收
ContainerRuntime 容器运行时的选择(Docker or rkt)
PodCache Pod缓存的管理
onfiguration,kubeDeps
，并对kubelet内部各个component进行初始化
---
## Page 24
行的。这里就不细说了，创建Pod的入口在syncLoop这里开始。
上面的这段代码就是对上面介绍的各个component组件的启动，每个组件都是以goroutine运
C
O
set
sy
Start
Sta
start
Na.
wait.
S
06
ncL
obeMar
art
art
not
t.
Loop(updates，kl)
top
Until(kl.syncNe
the pod lifecycle event generator.
component
gorouting
oop
til(kl.updateRuntimeUp,
kl.
Start
fig
ine
sync
mc
nd
loops.
on
ota
nsible
rkStatus,
erver
30*time.Second,
1*time.Second
orkUtil
for checking
defined-
for
tupFailed,
killing
diately,
*time.
容器化－Kubelet源码分析
me
nonode
limits
.Minute
Se
pod
this
on
in
---
## Page 25
的状态。
的变化，并把它们汇聚起来。当有新的变化发生时，它会调用对应的函数，保证Pod处于期望
syncLoop 是kubelet的主循环方法，它从不同的管道(FILE,URL,API-SERVER)监听到Pod
Pod的创建流程
20Kubelet源码分析－容器化
1C
glog.Infof("skipping pod synchr
pleg
SY
9
nc
ato
sync'd.Aone-secondperiodis
defaulted
ch
time.
ipd
up
ites
kl.clock.
<-chai
Second)
if
---
## Page 26
syncPod是创建Pod的核心逻辑。其中有几个主要的方法：
装成UpdatePodOptions，调用 UpdatePod 方法。
间)，之后把创建Pod的事交给dispatchWork。dispatchWork主要工作就是把接收到的参数封
odAdditions做的任务就是通过canAdmitPod方法校验Pod能否在该计算节点创建(如:磁盘空
Handler，下面是对应的lnterface。
kl.syncLooplteration这个方法会对多个管道进行遍历，如果有Pod动作，则会调用相应的
· generatePodSandboxConfig 获取PodSandbox的配置(如:metadata,clusterDNS,容器的 
·RunPodSandbox 创建并开启一个Pod级别的sandbox
● createPodSandBox 创建一个PodSandBox
·computePodContainerChanges 根据最新拿到的Pod配置与当前运行的容器配置进行对比,
端口映射等）
 计算其中的变化(一个具体的hash值)，得到需要重启的容器的信息 
我们以创建Pod为例,它会调用对应的HandlePodAdditionsHandler进行处理。HandleP
m.gene
vl.
cunc
 // create pod logs directory
err
SyncHandl
att
LePod
nil
yncs(pods
is an interfa
ves
nt32）
aps
C
pods
ods
""，nil
ces
er
od
string,
cror
*yl.Pod
Pod