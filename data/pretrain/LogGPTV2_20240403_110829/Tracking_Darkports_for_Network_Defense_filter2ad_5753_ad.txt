open proxies).
DOS ATTACKS. A potentially serious attack on many
scanning detection mechanisms is one that speciﬁcally tar-
gets the detection system. In this context, we review the gen-
eral construction and maintenance of basic exposure maps,
plus the two main applications considered (scanning detec-
tion, and automated response).
The construction and maintenance of basic exposure maps
appears resilient to DoS attack. Incoming scans (bursts or
sustained activity) do not increase an exposure map’s size
(i.e. the number of HEM entries), which reﬂects only the
number of services offered by the corresponding host. In-
coming scans do need to be passively monitored, and con-
nection requests are checked for matches against the NEM;
however, the processing required for this is minimal, and we
would expect any problems caused by volume of requests to
cause other elements of a network to fail, e.g., having adverse
affect on core network devices such as routers, or ﬁrewalls.
In the scanning detection application, secondary storage
may be adversely affected by a large botnet DoS effort, be-
cause detected scanning activity is recorded. For example,
for a 100,000 system botnet executing a scanning campaign
on a target network, three simultaneous scans by each bot
would consume 13.2Mbytes in the scanning activity log. A
sustained scanning effort by such a botnet would exhaust disk
storage in most networks. However, such an attack would
also likely cause core network devices to fail as noted above.
The automated response application would experience the
same impact on disk storage as the scanning detection appli-
cation, plus system detection state would be consumed for
source IP addresses added to the scanners list (as incom-
ing connection requests to port/IP combinations outside the
NEM result in new scanners list entries). A botnet of size
100,000 would consume 400Kbytes of (scanner list) system
detection state; this state consumption does not increase af-
ter the ﬁrst scan from each source IP address. The most suc-
cessful attack would likely be an attacker intentionally trying
to exhaust scanner list state by spooﬁng source IP addresses
during a large scanning campaign; this could adversely affect
the platform executing the automated response application.
7 Limitations
NON-STANDARD PORTS. One of the strengths of the ex-
posure map approach (and all discussed applications herein)
is that it need only maintain very little state when operational.
It need not inspect or decode the content of a TCP connec-
tion, but only to observe external connection attempts (i.e.
SYN packets) and record the IP address and source port if
there is a response (SYN-ACK). Thus, exposure maps use
port numbers to identify the offered service. Although port
numbers are a good indication of the type of service offered,
users may choose to install services that use non-standard
ports, e.g., an HTTP server using port 8080 or 8000 instead
of port 80. Of course, use of non-standard ports may limit ac-
cess as client systems must know the listening port number
before accessing the service. In the case of creating a NEM
for scanning detection, this issue is less of a concern; non-
standard port usage should be detected after training when
the NEM is vetted.
8 Related Work
The basic idea of exposure maps was introduced in a
position paper [29], and developed as an example of an
attribution-free scanning detection technique. Preliminary
analysis revealed that it could detect both sophisticated and
simple forms of network scanning activity. Although not
tested, exposure maps were also proposed to detect changes
in the services offered in a network which a network operator
could verify as either authorized activity or an indication of
a successful attack.
Active scanning6 software, both open source and commer-
cial, allows a security audit on a host or network [9, 27, 20].
Active scanning can be an integral part of a security audit to
conﬁrm that a host or network is in compliance with the net-
work security policy. This activity however, can be costly in
terms of human resources as it requires personnel to perform
the required scanning activity (i.e. conﬁgure and operate the
software) and interpret the results. Furthermore, active scan-
ning provides only a snapshot in time of the active hosts and
services in a network. Any new hosts or services offered by
the network will only be detected at the next scheduled active
scanning session.
Passive scanning techniques continuously monitor the
hosts and services available in a network. Extrusion de-
tection [3] refers to identiﬁcation of unauthorized internal
network activity by inspecting outbound network trafﬁc;
its ultimate goal is the identiﬁcation of outgoing attack at-
tempts from compromised internal systems in order to stop
them from reaching their target. The passive asset detec-
tion system (PADS) is signature-based passive detection soft-
ware with a rules engine to identify hosts and services run-
ning on a network by inspecting outbound network trafﬁc
[24]. It was created to provide supplementary information
when performing active scanning of a network. Snort is an
open source IDS that has scanning detection capability [22]
through the use of the Snort preprocessor sfPortscan [21], by
observing the RST packets within the network for a prede-
termined timeout window [13]. If ﬁve RST packets are de-
tected from a suspected target within a conﬁgurable timeout
window, an alert is generated.
6Active scanning involves injecting packets into the network in order to
elicit some observable response.
Both Leckie et al. [12] and SPICE [25] use probabilistic
models to detect scanning activity. These approaches attempt
to assign connection probabilities to internal hosts based on
the observation within normal network trafﬁc conditions as
a benchmark. Scanning systems are detected as they are as-
signed probabilities based on their current connection behav-
ior which is measured and compared against the a priori con-
nection probabilities assigned to the internal hosts. Jung et
al. [11] use their Threshold Random Walk algorithm to iden-
tify scanning hosts, based on the observation that scanning
systems will contact hosts and ports that are not available
more often than benign systems.
Network darkspace is the unused IP addresses in a net-
work and thus it should have no legitimate network activ-
ity directed to it; connection attempts to IP addresses that
have no hosts assigned to them is considered anomalous. A
number of commercial products (e.g. [14, 7]) make use of
network darkspace to detect malicious network activity. A
darknet is typically a large unused block of Internet-routable
darkspace monitored for inbound packet activity. The larger
the darknet, the better the darknet’s ability to detect scans and
attacks during an observation period [16, 15]. A related but
subtly different approach by Harrop et al. [10] uses greynets,
deﬁned as regions of darknet address space that contain some
active systems (i.e. some of the IP addresses in the darknet
are assigned to active hosts). One of the motivations is that
it is not possible for most enterprise network operators to
have large regions of contiguous unused address space as-
signed to them. However, it would be useful to have some
means to detect anomalous events if dark space was avail-
able on the network. Interspersing valid light (i.e. used) and
dark (i.e. unused) addresses throughout a network will make
it difﬁcult for malware to avoid targeting greynet addresses
and thus avoiding detection.
9 Concluding Remarks
We are the ﬁrst to exploit the use of exposure maps and
introduce the concept of darkports. In contrast to darknets
and greynets [10, 7, 14], even densely populated enterprise
networks can make use of exposure maps as they exist on
live hosts. The overall exposure map technique is based on a
simple premise that is efﬁcient to implement – it requires the
passive observation, recording, and maintenance of a list of
the services offered by the hosts in a network. This simplicity
translates into a very efﬁcient use of system detection state
and computational resources that easily scales for use in large
enterprise and backbone networks.
Exposure maps can be used to perform scanning detection
and enable ﬁne-grained automated responses to deny access
only to those scanning systems that directly threaten hosts in
the network. During our evaluation, our implementation of
the exposure map scanning detection application had fewer
false positives and negatives in a direct side-by-side compar-
ison with Snort. The exposure map scanning detection ap-
proach, through the passive recording of all the services of-
fered by the network, provides an awareness of active hosts,
network darkspace, and darkports allowing network-centric
context that increases the ﬁdelity of scanning detection.
In an open network environment, the diversity of user
population and permitted activity may make the enforcement
of a single comprehensive network security policy impracti-
cal. Furthermore, mobile or transient users may make deter-
mining a stable baseline of all the services offered by hosts in
the network infeasible. In such environments, exposure maps
remain ﬂexible enough to be conﬁgured to monitor a subset
of the network to protect core network assets. A NEM could
be composed of a single HEM (e.g. for host-based intrusion
detection) or several HEMs (e.g. web server farm), allowing
a network operator to focus on these mission critical servers.
We have developed a full implementation of this approach in
software that will be made available to the public.
References
[1] G. Bakos and V. Berk. Early detection of Internet worm ac-
tivity by metering ICMP destination unreachable activity. In
SPIE Conference on Sensors, and Command, Control, Com-
munications and Intelligence, April 2002.
[2] P. Barford and V. Yegneswaran. An Inside Look at Botnets.
Special Workshop on Malware Detection, Advances in Infor-
mation Security, Springer Verlag, 2006.
[3] R. Bejtlich. Extrusion Detection, Security Monitoring for In-
ternal Intrusions. Addison Wesley, ﬁrst edition, 2006.
[4] A. Bobyshev, P. DeMar, and D. Lamore. Effect of Dynamic
ACL (Access Control List) Loading on Performance of Cisco
Routers. In Computing in High Energy Physics, Feb. 2006.
[5] D. Dagon, C. Zou, and W. Lee. Modeling botnet propagation
In Proceedings of the 13th Annual Net-
using time zones.
work and Distributed System Security Symposium (NDSS’06),
February 2006.
[6] D. Ellis, J. Aiken, K. Attwood, and S. Tenaglia. A behavioral
approach to worm detection. In Proceedings of The Workshop
on Rapid Malcode, 2003.
[7] Forescout Technologies Inc, Forescout product. http://www.
forescout.com/wormscout.html.
[8] F. C. Freiling, T. Holz, and G. Wicherski. Botnet tracking:
Exploring a root-cause methodology to prevent distributed
denial-of-service attacks. In ESORICS, pages 319–335, 2005.
[9] Fyodor. Remote OS detection via TCP/IP stack ﬁngerprint-
ing. Phrack, 54, December 1998.
[10] W. Harrop and G. Armitage. Greynets: a deﬁnition and eval-
uation of sparsely populated darknets. In Proceedings of the
2005 ACM SIGCOMM Workshop on Mining Network Data,
pages 171–172, 2005.
[11] J. Jung, V. Paxson, A. Berger, and H. Balakrishman. Fast
portscan detection using sequential hypothesis testing.
In
IEEE Symposium on Security and Privacy, pages 211–225,
2004.
[12] C. Leckie and R. Kotagiri. A probabilistic approach to de-
tecting network scans. In Eighth IEEE Network Operations
and Management Symposium (NOMS 2002), pages 359–372,
2002.
[13] B. Malmedal. Using netﬂows for slow portscan detection.
Master’s thesis, Department of Computer Science and Media
Technology, Gjovik University College, 2005.
[14] Mirage Networks. Mirage NAC.
http://www.mirage net-
works.com.
[15] D. Moore. Network telescopes: Tracking denial-of-service
attacks and Internet worms around the globe. In LISA, 2003.
[16] D. Moore, G. Voelker, and S. Savage. Inferring Internet de-
nial of service activity. In 10th USENIX Security Symposium,
2001.
[17] R. Pang, V. Yegneswaran, P. Barford, V. Paxson, and L. Pe-
terson. Characteristics of Internet background radiation. In
The Internet Measurement Conference IMC, 2004.
[18] S. Panjwani, S. Tan, K. Jarrin, and M. Cukier. An Experimen-
tal Evaluation to Determine if Port Scans are Precursors to an
Attack. In International Conference on Dependable Systems
and Networks, July 2005.
[19] M. A. Rajab, J. Zarfoss, F. Monrose, and A. Terzis. A multi-
faceted approach to understanding the botnet phenomenon. In
Internet Measurement Conference 2006 (IMC’06), Proceed-
ings of, October 2006.
[20] RemoteScan Corporation, RemoteScan. http://www.remote-
scan.com.
[21] D. Roelker, M. Norton, and J. Hewlett.
sfPortscan.
2004. http:// cvs.snort.org/viewcvs.cgi/snort/doc/ README.
sfportscan?rev=1.6.
[22] M. Roesch. Snort - lightweight intrusion detection for net-
works. In LISA, 1999.
[23] S. Schechter, J. Jung, and A. Berger. Fast detection of scan-
ning worm infections. In 7th International Symposium on Re-
cent Advances in Intrusion Detection (RAID 2004), Septem-
ber 2004.
[24] M. Shelton.
Passive Asset Detection System. (PADS).
http://passive.sourceforge.net.
[25] S. Staniford, J. Hoagland, and J. McAlerney. Practical auto-
mated detection of stealthy portscans. In 7th ACM Conference
on Computer and Communications Security, 2000.
[26] M. Tanase. Introduction to Autorooters: Crackers Working
Smarter, not Harder. SecurityFocus. http://www. securityfo-
cus.com/infocus/1619.
[27] Tenable Network Security, Inc., Nessus Vulnerability Scan-
ner. http://www.nessus.org.
[28] D. Whyte, E. Kranakis, and P. van Oorschot. DNS-based de-
tection of scanning worms in an enterprise network. In Proc.
of the 12th Annual Network and Distributed System Security
Symposium, Feb. 2005.
[29] D. Whyte, P. van Oorschot, and E. Kranakis. Exposure Maps:
Removing Reliance on Attribution during Scanning Detec-
tion. Position paper (5 pages). In USENIX HotSec 2006, Aug.
2006.
[30] D. Whyte, P. C. van Oorschot, and E. Kranakis. Tracking
darkports for network defence. Technical report, School of
Computer Science, Carleton University, TR-07-04, February
2007.
[31] M. Williamson. Throttling viruses: Restricting propagation
to defeat malicious mobile code. In 18th Annual Computer
Security Applications Conference (ACSAC), 2002.
[32] A. Wool. A Quantitative Study of Firewall Conﬁguration Er-
rors. IEEE Computer, 37(6):62–67, 2004.
[33] V. Yegneswaran, P. Barford, and J. Ullrich. Intrusions: Global
characteristics and prevalence. In SIGMETRICS, 2003.