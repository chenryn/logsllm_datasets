（2） tamper data 改包插件安装
tamper data 抓包改包工具，也是firefox浏览器扩展插件之一，故我们只要去扩展插件中搜索下载安装即可。
（3） tamper data 抓包分析
3.1.4 CSRF 漏洞利用
3.1.4.1 恶意链接伪造
对于挖掘目标站点存在密码修改的csrf漏洞后，我们如何利用它就是关键了，最简单的方法就是使用burpsuite抓包后，提取密码修改操作的GET请求的URL，然后通过相应的处理后，结合社工的方法诱骗他人点击链接，修改他人的账号密码信息，有关具体操作参见如下。
（1） 截断请求包，提取URL请求
URL提取值：[http://www.dvwa.com/vulnerabilities/csrf/?password_new=admin&password_conf=admin&Change=Change](http://www.dvwa.com/vulnerabilities/csrf/?password_new=admin&password_conf=admin&Change=Change)
（2）URL 链接伪装
在提起到存在csrf漏洞的URL请求后，我们可以直接把此URL进行缩短处理，进行简单的伪装处理后，结合社工的方法诱使被攻击对象点击触发漏洞利用。
3.1.4.2 恶意html表单伪造
伪造一个html页面相对上面简单的伪装一个链接来说，相对就更显高高级了，使用起来也更专业了，相对成功率也更高。这里收简单的描述下伪造html也的过程，后面会贴出每一步的具体操作。
•第一步：提取密码修改的URL请求；
•第二步：依照URL请求的格式，伪造一个form表达；
•第三步：诱使被攻击者点击恶意的html连接；
（1） 提取密码修改的URL请求
我们可以借助抓包工具burpsuite抓取密码修改操作的数据包，分析数据包的请求内容。
（2） 伪造form 表单
在分析修改密码数据请求内容后，我们可以手动构造一个简单的html表单页面，为csrf攻击做好准备；
（3） 诱使被攻击者点击恶意html链接
我们将构造好的html表单页面放到一个网上，然后通过社工的方式发送给被攻击者，诱使他访问此恶意页面出发“账号密码修改操作”。
3.1.5 CSRF 密码修改漏洞小结
CSRF密码修改漏洞小结：通过上面的分析与学习的展开，我们可以发现这种场景漏洞的存在，其实比较好发现。其他特点就是“用户密码的修改无任何的条件限制与校验机制”。
3.2 后台管理员新增之 CSRF 漏洞重现
我们在做渗透测试时，也会经常进行一些CMS系统的“黑盒测试”，就是自己搭建目标系统的CMS系统，然后本地进行前台和后台的所有功能安全测试，挖掘可能存在的漏洞。其中我们对于“后台账号的添加系统管理员”一项操作，进行csrf漏洞的挖掘就很有必要，如果我能够挖掘出此漏洞，我们就可以构造恶意的html表单页面对真是的目标“CMS系统”进行攻击，为我们在真实的目标系统上添加一个后台管理员，拿下其后台管理权限，为进一步的渗透打开大门。接下来的漏洞复现，就以一个小众的CMS系统进CSRF
添加后台管理账号漏洞的复现。
3.2.1 环境准备
phpstudy web容器环境准备
burpsuite 抓包工具
lvyecms 系统下载
3.2.2 phpstudy web容器环境
有关于phpstudy web容器环境的搭建，这里不做过多的说明，因为真的很简单，大家直接下载默认安装即可使用。
下载地址：
3.2.3 burpsuite 抓包工具
burpsuite 抓包工具与代理插件的使用，可参加上面的3.1章节的内容，这里也不在重复说明了。但是多说一句burpsuite
工具箱真的很强大，强烈建议大家拥有，后面还还给大家演示怎样使用burpsuite进行一键构造一个csrf
的POC表单，我也是刚刚学会的，后面演示复现时会分享给大家。
3.2.4 lvyecms 环境搭建
3.2.4.1 解压源码包
在phpstudy
web容器环境准备好后，我们直接将lvyecms源码包解压重新命名（lvyecms）,然后将解压包复制到phpstudy主目录下的WWW文件夹下即可。
3.2.4.2 站点域名设置
为了后续的对测试环境的访问，我简单的设置下“站点域名设置”，具体设置如下。
选择“其他选项菜单” – “站点域名管理” – 添加“网站域名” www.lvye.com – 设置“网站目录”
Ephpstudywwwlvyecms,然后点击新增，最后保存设置重启服务。
3.2.4.3 配置hosts主机解析文件
我直接进入目录“C:WindowsSystem32driversetc”找到hosts文件，在文件中添加一条解析记录
127.0.0.1 www.lvye.com ，然后保存即可。（注意以管理员权限打开文件才能修改成功）
3.2.5 后台管理添加过程测试
（1） 进入添加后台管理员界面
（2） 添加后台管理员test
（3） 确认管理员添加情况
3.2.6 CSRF 漏洞发现分析
通过以上三步简单的操作，我们即可完成一个后台管理员账号的授权添加，并没发现什么异常，接下来我们将使用burpsuite进行抓包分析下正添加管理账号的请求过程中是否存在未对用户做除cookie以外的有效身份验证操作。
（1） 配置好firefox 代理设置安全漏洞。
（1） 配置好firefox 代理设置
有关firefox浏览器中foxyproxy代理设置插件的使用，请参加3.1章节内容。
（2） 开启burpsuite 数据包代理截断
（3） 请求包抓包分析
通过抓包分析可以看到，在我们进行后台超级管理员添加的过程发送出去的请求只包两类关键信息：
包含了当前用户的cookie值
添加管理员相关信息参数；
除去以上两个信息再无其他任何对当前用户身份进行有效校验的信息。因此，推断此处添加管理员的操作可能存在csrf漏洞。
（4） 直接构造get类型的csrf恶意链接
构造方法比较简单，我们直接在burpsuite 截断数据出右击鼠标，选择“”，随后右击鼠标“copy
url”即可获取一个完整的get类型的“添加管理操作”的URL请求；
通过验证，发现构造的get类型csrf恶意链接并不能添加管理员，由此可以推断index.php脚本中可能对于数据请求的类型做了限制，只接受post类型的数据提交。
（5） 构造post类型的html页面
这里分析给大家一个我也是刚刚学习到一个使用burpsuite直接构造csrf表单poc的方法。我们直接右击数据包截断页面，选择“Engagement
tools”-“Generate CSRF PoC”，即可获取一个csrf的表单poc。
（6） 构造csrf html表单验证
随后我们将获取的表单内容复制到一个csrf.html文档中保存，并将此csrf.html发布到站点中（这里我就直接将poc房子lvye.com站点主目录中），随后就是想办法通过社工的方式诱使管理员访问此恶意页面，触发管理添加的操作。（当然我们这里只是简单的给大家演示了利用过程，实际的社工内容是怎样的，大家各自打开脑洞吧…）具体漏洞利用过程，基本演示如下。
**4、CSRF 漏洞防护**
其实现在有关CSRF漏洞防护已经是比较成熟了，其主要防护的思路就是需要在进行后台数据修改操作的过程中，添加对当前用户身份的有效验证措施，而不能仅限于cookie的识别，这里简单的罗列了下防护措施如下。
（1） 来源校验
使用http请求头中referer来源，对客户端源进行身份校验，此方法早期使用比较多，但是仍然容易被绕过，所以这里并不建议使用。
（2） 用户token 校验
添加基于当前用户身份的有效tokens随机验证机制，即在向后端提交数据操作请求时，添加基于当前用户的随机token校验值，此种校验方法当前使用比较多；
（3）当前用户密码验证
在修改关键信息时，要钱当前用户输入其自身的密码，以验证当前用户身份的真伪，防止未授权的恶意操作；
（4）添加验证机制
在请求数据的提交前，需填写验证码信息提交，以增加对用户来源的有效验证，防止恶意未授权的操作产生。