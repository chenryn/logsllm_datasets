work is capable of modeling and analyzing all the non-
functional properties that can be evaluated in SRNs.
However, this methodology also inherits the limitations
of SRN models. There are three main diﬃculties in
SRN model—largeness, stiﬀness, and the assumption
of exponentially distributed ﬁring rates of timed transi-
tions [26]. Largeness means the large size of the under-
lying CTMC of a SRN and stiﬀness represents the large
disparity between the ﬁring rates of a SRN. Largeness
and stiﬀness cause diﬃculties in solving the underly-
ing CTMC of a SRN. Fortunately, a number of ap-
proaches have been proposed to avoid and/or tolerate
largeness and stiﬀness [26]. The “exponential assump-
tion” limits the modeling power and precision of SRNs.
While exponentially distributed rates are reasonable in
some situations such as failure rates of a system, they
are invalid in other situations like deadlines of a sys-
tem. This problem, however, can be reduced either
by phase approximations [26] (approximating a non-
exponential distribution by a set of states and transi-
tions such that the holding time in each state is expo-
nentially distributed) or by allowing non- exponential
distributions in SRNs.
4. An Example System
In this section, we give an example to illustrate the
proposed methodology. We use a simpliﬁed model of
the United States Payment System depicted in [18] as
an example system. As shown in Figure 3, there are
FRB2
FRB1
FRB3
Federal Reserve 
Banks
MC1
MC2
MC3
Money Centers
    LinkA1
   LinkA2
A
LinkB1
B
LinkB3
 LinkC3
C
Banks
Figure 3. United States payment system.
three levels of institution: Federal Reserve Banks at
the top, money centers in the middle, and small banks
at the bottom. If two banks are connected to the same
money center, then transactions between them are han-
dled by the money center. Otherwise transactions will
go through the Federal Reserve Banks.
There are quite a few types of transactions in the
payment systems. To simplify the illustration, we fo-
cus on check clearing service of the payment system.
The check clearing service works as follows. First, a
check with a source bank and a destination bank is is-
sued to clear. Second, the check is transferred based on
shortest path routing via the network from the source
bank towards the destination bank. The nodes and the
links in the system may fail, thus a check may fail to
reach the destination bank. A check is cleared when it
successfully reaches the destination bank. Otherwise,
the check clearing is failed. For this speciﬁc type of ser-
vice, the non-functional properties at which one may
be interested are the reliability and the latency. That
is, what is the probability that an issued check is suc-
cessfully cleared, and if cleared, how long will it take?
Furthermore, one may expect to know how the reliabil-
ity is aﬀected by the reliabilities of links and nodes, and
how latency could be reduced eﬀectively by improving
the processing speed of each node.
4.1. The SAM Model
To simplify the model but without the loss of gen-
erality, we assume that the only faulty nodes are the
banks and the links between the banks and the money
centers. The money centers, Federal Reserve Banks,
and the links between them never fail. A bank fails
when there are accidental failures (e.g., process crash)
or it is under malicious attacks (e.g., a denial-of-service
attack). A link fails when it is down or maliciously in-
truded. A failed bank can neither issue a check nor
accept a check, and a failed link blocks all messages
and thus no message ever reaches the recipient. With-
out distinguishing the fault types, we use two states to
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:28:45 UTC from IEEE Xplore.  Restrictions apply. 
Failure 
fail 
return1 
Ready
r
issueRequest
forward 
Data
Success
NetworkState 
X
change
X’ 
X
X
return2
succeed
Figure 4. PrT Model of The Payment System.
represent a faulty node—state U P for a normal one and
state DOW N for a failed one. When a node fails, it
goes from state U P to state DOW N, and back to state
U P when it is repaired. Furthermore, we assume that
both the failure rates and repair rates of faulty nodes
are exponentially distributed, and banks fail indepen-
dently, while the failure rates of links are dependent
on the state of banks. For example, the failure rate
of linkA1 is dependent on the state of bank A. When
bank A is down, it is easier for linkA1 to fail. This
is reﬂected in the constraints of transitions by assign-
ing diﬀerent ﬁring rates according to the state of the
banks. Based on the structure of the payment system,
no hierarchical decomposition is needed and a composi-
tion containing just one component is enough. Aimed
at the check clearing service, we model the behavior
model of the payment system as depicted in Figure 4.
The non-functional properties to be veriﬁed are the
reliability and latency of the payment system with re-
gard to the check clearing service, and they are speci-
ﬁed as follows:
• Reliability: at least 95% percent of issued checks
It is speciﬁed in PCTL
are successfully cleared.
as AG[M(Ready) (cid:1)= φ → F ≤∞
≥0.95M(Success) (cid:1)= φ],
where M(Ready) (cid:2)= φ means that there exist one
or more tokens in place Ready.
• Latency:
the time it takes to clear a check
is at most 5 time units with at least 90It is
(cid:1)= φ →
speciﬁed in PCTL as AG[(M(Ready)
(cid:1)= φ) ∨ (M(Ready)
(cid:1)= φ →
F ≤5
≥0.9M(Success)
≥1 M(Success) (cid:1)= φ]), which means that if a check
F ≤∞
clearing service does not fail, then the check will
be cleared successfully within 5 time units with at
least 90% probability.
The used sorts in the PrT net model and the
mapping from places to sorts are deﬁned as follows.
BAN K = {A, B, C} N ODEST AT E = {U P, DOW N}
LIN K = {LA1, LA2, LB1, LB3, LC3}
DAT AST AT E = {F AILED, SU CCEEDED}
N ODE = {M C1, M C2, M C3, F RB1, F RB2, F RB3}
∪BAN K ∪ LIN K
ϕ(Ready) = ℘({READY }), where ℘ denotes power set.
ϕ(Success) = ϕ(F ailure) = ℘(BAN K × BAN K)
ϕ(N etworkState) = ℘(N ODEST AT E × (BAN K × LIN K))
ϕ(Data) = ℘(DAT AEST AT E × ({REQ} ∪ N ODE)
×BAN K × BAN K)
A token (cid:3)READY (cid:4) in place Ready means that
the system is ready to issue a check clearing re-
quest. A token (cid:3)x, y(cid:4) in place Success (F ailure) rep-
resents that a check from bank x succeeded (failed)
in reaching bank y.
Place Data keeps track of
the progress of a check clearing request. A token
(cid:3)SU CCEEDED, REQ, x, y(cid:4) in place Data means that
a request from bank x to bank y is issued, while
(cid:3)F AILED, z, x, y(cid:4) means the request from x to y
failed to be forwarded to next node from z. Place
N etworkState records the up/down state of each
faulty nodes. A token (cid:3)U P, x(cid:4) in place N etworkState
means that node x is up. We do not need to model the
exact check amount since it is irrelevant to reliability
and latency analysis.
Following is the constraint for each transition.
The special ﬁeld RAT E reﬂects the ﬁring rate of
each transition under diﬀerent conditions.
Tran-
sitions
issueRequest, f ailed, and succeeded ﬁre
immediately once enabled. Transition return1 and
return2 ﬁre at rate λret. The ﬁring rates of transi-
tions change and f orward are marking dependent
rather than ﬁxed. For example,
in the constraint
of transition change,the disjunct RAT E = λf ∧ x ∈
BAN K∧(cid:6)U P, x(cid:7) ∈ X∧X(cid:4) = X∪{(cid:6)DOW N, x(cid:7)}−{(cid:6)U P, x(cid:7)}
represents that all banks fail at rate λf .
the dis-
junct RAT E = λa1 ∧ x ∈ {LA1, LA2} ∧ (cid:6)U P, A(cid:7) ∈
X ∧ (cid:6)U P, x(cid:7) ∈ X ∧ X(cid:4) = X ∪ {(cid:6)DOW N, x(cid:7)} − {(cid:6)U P, x(cid:7)}
represents
rate
the disjunct
λa1 when bank A is up, while
RAT E = λa2 ∧ x ∈ {LA1, LA2} ∧ (cid:6)DOW N, A(cid:7) ∈
X ∧ (cid:6)U P, x(cid:7) ∈ X ∧ X(cid:4) = X ∪ {(cid:6)DOW N, x(cid:7)} − {(cid:6)U P, x(cid:7)}
represents that linkA1 and linkA2 fail at rate λa2
when bank A is down. The constraint of transition
forward decides the routing path of each request and
the ﬁring rate of processing and forwarding requests
at each node.
R(issueRequest) = (RAT E = 0 ∧ r = READY ∧
s = SU CCEEDED ∧ n = REQ ∧ x (cid:3)= y)
linkA1 and linkA2 fail at
that
R(return1) = R(return2) = (RAT E = λret ∧ r = READY )
R(f ailed) = (RAT E = 0 ∧ s = F AILED)
R(succeeded) = (RAT E = 0 ∧ s = SU CCEEDED ∧ n = y)
R(change) = ((RAT E = λf ∧ x ∈ BAN K ∧ (cid:5)U P, x(cid:6) ∈ X
(cid:4) = X ∪ {(cid:5)DOW N, x(cid:6)} − {(cid:5)U P, x(cid:6)})
∧X
∨(RAT E = λr ∧ x ∈ BAN K ∧ (cid:5)DOW N, x(cid:6) ∈ X
∧X
(cid:4) = X ∪ {(cid:5)U P, x(cid:6)} − {(cid:5)DOW N, x(cid:6)})
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 12:28:45 UTC from IEEE Xplore.  Restrictions apply. 
∨(RAT E = λr1 ∧ x ∈ {LA1, LA2} ∧ (cid:5)DOW N, x(cid:6) ∈ X
(cid:4) = X ∪ {(cid:5)U P, x(cid:6)} − {(cid:5)DOW N, x(cid:6)})
∨(RAT E = λr2 ∧ x ∈ {LB1, LB3} ∧ (cid:5)DOW N, x(cid:6) ∈ X
(cid:4) = X ∪ {(cid:5)U P, x(cid:6)} − {(cid:5)DOW N, x(cid:6)})
∧X
∧X
∨(RAT E = λr3 ∧ (cid:5)DOW N, LC3(cid:6) ∈ X
∧X
(cid:4) = X ∪ {(cid:5)U P, LC3(cid:6)} − {(cid:5)DOW N, LC3(cid:6)})
∨(RAT E = λa1∧x ∈ {LA1, LA2}∧(cid:5)U P, A(cid:6) ∈ X∧(cid:5)U P, x(cid:6) ∈ X
∧X
(cid:4) = X ∪ {(cid:5)DOW N, x(cid:6)} − {(cid:5)U P, x(cid:6)})
∨(RAT E = λb1∧x ∈ {LB1, LB3}∧(cid:5)U P, B(cid:6) ∈ X∧(cid:5)U P, x(cid:6) ∈ X
∧X
(cid:4) = X ∪ {(cid:5)DOW N, x(cid:6)} − {(cid:5)U P, x(cid:6)})
∨(RAT E = λc1 ∧ (cid:5)U P, C(cid:6) ∈ X ∧ (cid:5)U P, LC3(cid:6) ∈ X
∧X
(cid:4) = X ∪ {(cid:5)DOW N, LC3(cid:6)} − {(cid:5)U P, LC3(cid:6)})
∨(RAT E = λa2 ∧ x ∈ {LA1, LA2} ∧ (cid:5)DOW N, A(cid:6) ∈ X
∧(cid:5)U P, x(cid:6) ∈ X ∧ X
(cid:4) = X ∪ {(cid:5)DOW N, x(cid:6)} − {(cid:5)U P, x(cid:6)})
∨(RAT E = λb2 ∧ x ∈ {LB1, LB3} ∧ (cid:5)DOW N, B(cid:6) ∈ X
∧(cid:5)U P, x(cid:6) ∈ X ∧ X
(cid:4) = X ∪ {(cid:5)DOW N, x(cid:6)} − {(cid:5)U P, x(cid:6)})
∨(RAT E = λc2 ∧ (cid:5)DOW N, C(cid:6) ∈ X ∧ (cid:5)U P, LC3(cid:6) ∈ X
(cid:4) = X ∪ {(cid:5)DOW N, LC3(cid:6)} − {(cid:5)U P, LC3(cid:6)}))
∧X
R(f orward) = (s = SU CCEEDED ∧ n (cid:3)= y∧
((RAT E = 0 ∧ n = REQ ∧ (((cid:5)U P, x(cid:6) ∈ X ∧ n
∨((cid:5)DOW N, x(cid:6) ∈ X ∧ n
(cid:4) = n ∧ s
∨(n = A ∧ ((RAT E = 0 ∧ (cid:5)DOW N, LA1(cid:6) ∈ X
(cid:4) = x ∧ s
(cid:4) = F AILED)))
(cid:4) = s)
∧(cid:5)DOW N, LA2(cid:6) ∈ X ∧ n
(cid:4) = n ∧ s
∨(RAT E = λA1 ∧ (cid:5)U P, LA1(cid:6) ∈ X ∧ n
∨(RAT E = λA2 ∧ (cid:5)U P, LA2(cid:6) ∈ X ∧ n
(cid:4) = F AILED)
(cid:4) = M C1 ∧ s
(cid:4) = M C2 ∧ s
(cid:4) = s)
(cid:4) = s)))
∨(n = B ∧ ((RAT E = 0 ∧ (cid:5)DOW N, LB1(cid:6) ∈ X
∧(cid:5)DOW N, LB3(cid:6) ∈ X ∧ n
(cid:4) = n ∧ s
∨(RAT E = λB1 ∧ (cid:5)U P, LB1(cid:6) ∈ X ∧ n
∨(RAT E = λB3 ∧(cid:5)U P, LB3(cid:6) ∈ X ∧ n
(cid:4) = F AILED)
(cid:4) = M C1 ∧ s
(cid:4) = M C3∧ s
(cid:4) = s)
(cid:4) = s)))
∨(n = C ∧ ((RAT E = 0 ∧ (cid:5)DOW N, LC3(cid:6) ∈ X
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨(RAT E = λC3 ∧ (cid:5)U P, LC3(cid:6) ∈ X ∧ n
(cid:4) = M C3 ∧ s
∨(n = M C1 ∧ ((RAT E = 0 ∧ y = A ∧ (cid:5)DOW N, LA1(cid:6) ∈ X
(cid:4) = s)))
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨((RAT E = 0 ∧ y = B ∧ (cid:5)DOW N, LB1(cid:6) ∈ X
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨(RAT E = λA1∧y = A∧(cid:5)U P, LA1(cid:6) ∈ X∧n
∨(RAT E = λB1∧y = B∧(cid:5)U P, LB1(cid:6) ∈ X∧n
∨(RAT E = λM1F 2 ∧ y = C ∧ n
(cid:4) = F RB2 ∧ s
(cid:4) = y∧s
(cid:4) = y∧s
(cid:4) = s)))
∨(n = M C2 ∧ ((RAT E = 0 ∧ y = A ∧ (cid:5)DOW N, LA2(cid:6) ∈ X
(cid:4) = s)
(cid:4) = s)
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨(RAT E = λA2∧y = A∧(cid:5)U P, LA2(cid:6) ∈ X∧n
∨(RAT E = λM2F 1 ∧ y (cid:3)= A ∧ n
(cid:4) = F RB1 ∧ s
(cid:4) = y∧s
(cid:4) = s)))
∨(n = M C3 ∧ ((RAT E = 0 ∧ y = C ∧ (cid:5)DOW N, LC3(cid:6) ∈ X
(cid:4) = s)
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨((RAT E = 0 ∧ y = B ∧ (cid:5)DOW N, LB3(cid:6) ∈ X
∧n
(cid:4) = n ∧ s
(cid:4) = F AILED)
∨(RAT E = λB3∧y = B∧(cid:5)U P, LB3(cid:6) ∈ X∧n
∨(RAT E = λC3∧y = C∧(cid:5)U P, LC3(cid:6) ∈ X∧n
∨(RAT E = λM3F 3 ∧ y = A ∧ n
(cid:4) = F RB3 ∧ s
∨(n = F RB1∧((RAT E = λM2F 1∧y = A∧n
∨(RAT E = λF 1F 2 ∧ y = B ∧ n
∨(RAT E = λF 1F 3 ∧ y = B ∧ n
(cid:4) = F RB2 ∧ s
(cid:4) = F RB3 ∧ s
(cid:4) = y∧s