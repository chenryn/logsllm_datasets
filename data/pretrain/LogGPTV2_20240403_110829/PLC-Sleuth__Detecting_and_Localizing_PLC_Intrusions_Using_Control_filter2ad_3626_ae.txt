### References

[40] Ali Abbasi and Majid Hashemi. "Ghost in the PLC: Designing an Undetectable Programmable Logic Controller Rootkit via Pin Control Attack." In *Black Hat Europe*, 2016.

[41] Naman Govil, Anand Agrawal, and Nils Ole Tippenhauer. "On Ladder Logic Bombs in Industrial Control Systems." In *Computer Security*, pages 110–126, 2018.

[42] Stephen McLaughlin. "On Dynamic Malware Payloads Aimed at Programmable Logic Controllers." In *Proceedings of the 6th USENIX Conference on Hot Topics in Security*, 2011.

[43] Lucille McMinn and Jonathan Butts. "A Firmware Verification Tool for Programmable Logic Controllers." In *International Conference on Critical Infrastructure Protection*, pages 59–69, 2012.

[33] N. Lawrence Ricker. "Decentralized Control of the Tennessee Eastman Challenge Process." *Journal of Process Control*, 6(4):205–221, 1996.

[44] Sebastian Biallas, Jörg Brauer, and Stefan Kowalewski. "Arcade.PLC: A Verification Platform for Programmable Logic Controllers." In *Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering*, pages 338–341, 2012.

[45] Stephen McLaughlin, Saman A Zonouz, Devin J Pohly, and Patrick D McDaniel. "A Trusted Safety Verifier for Process Controller Code." In *Network and Distributed Systems Security (NDSS) Symposium*, 2014.

[46] Saman Zonouz, Julian Rrushi, and Stephen McLaughlin. "Detecting Industrial Control Malware Using Automated PLC Code Analytics." *IEEE Security & Privacy*, 12(6):40–47, 2014.

[47] Irfan Ahmed, Sebastian Obermeier, Sneha Sudhakaran, and Vassil Roussev. "Programmable Logic Controller Forensics." *IEEE Security & Privacy*, 15(6):18–24, 2017.

[48] Robert Mitchell and Ray Chen. "Behavior Rule Specification-Based Intrusion Detection for Safety-Critical Medical Cyber-Physical Systems." *IEEE Transactions on Dependable and Secure Computing*, 12(1):16–30, 2014.

[49] Khurum Nazir Junejo and Jonathan Goh. "Behaviour-Based Attack Detection and Classification in Cyber-Physical Systems Using Machine Learning." In *Proceedings of the 2nd ACM International Workshop on Cyber-Physical System Security*, pages 34–43, 2016.

[50] Yuqi Chen, Christopher M. Poskitt, and Jun Sun. "Learning from Mutants: Using Code Mutation to Learn and Monitor Invariants of a Cyber-Physical System." In *2018 IEEE Symposium on Security and Privacy (S&P)*, pages 240–252, 2018.

[51] Feng Cheng, Palleti Venkata, Reddy, Mathur Aditya, and Chana Deeph. "A Systematic Framework to Generate Invariants for Anomaly Detection in Industrial Control Systems." In *Network and Distributed Systems Security (NDSS) Symposium*, 2019.

[52] Mu Zhang, James Moyne, Z Morley Mao, Chien-Ying Chen, Bin-Chou Kao, Yassine Qamsane, Yuru Shao, Yikai Lin, Elaine Shi, Sibin Mohan, et al. "Towards Automated Safety Vetting of PLC Code in Real-World Plants." In *2019 IEEE Symposium on Security and Privacy (S&P)*, pages 522–538, 2019.

[53] Pinyao Guo, Hunmin Kim, Nurali Virani, Jun Xu, Minghui Zhu, and Peng Liu. "RoboADS: Anomaly Detection Against Sensor and Actuator Misbehaviors in Mobile Robots." In *48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)*, pages 574–585, 2018.

[54] Hongjun Choi, Wen-Chuan Lee, Yousra Aafer, Fan Fei, Zhan Tu, Xiangyu Zhang, Dongyan Xu, and Xinyan Deng. "Detecting Attacks Against Robotic Vehicles: A Control Invariant Approach." In *Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security*, pages 801–816, 2018.

[55] Hamid Reza Ghaeini, Matthew Chan, Raad Bahmani, Ferdinand Brasser, Luis Garcia, Jianying Zhou, Ahmad-Reza Sadeghi, Nils Ole Tippenhauer, and Saman Zonouz. "PAtt: Physics-based Attestation of Control Systems." In *22nd International Symposium on Research in Attacks, Intrusions and Defenses (RAID)*, pages 165–180, 2019.

### Appendix

#### Patterns of SCADA Logs

SCADA logs exhibit three distinct patterns, corresponding to the defined node sets:

- **Setpoint Set (S)**: Setpoint variables are constant values, as shown in Figures 20(a)-20(c).
- **Sensor Set (Y)**: Sensor readings show consistent and small vibrations, as illustrated in Figures 20(d)-20(n).
- **Command Set (U)**: Control commands have continuous or smooth values, as depicted in Figures 20(o)-20(q).

#### Evaluating PLC-Sleuth on TE

The Tennessee Eastman (TE) process, as shown in Figure 21, is widely used for evaluating threats and protection methods designed for cyber-physical systems.

We deployed command injection attacks and cooperative stealthy attacks on the 17 control loops of the TE process. The impacts of four example attacks are shown in Figure 22.

In a typical control system like the TE, control commands have strong correlations with the associated sensor readings, as indicated by the black line in Figure 23. These correlations can be quantified as command weights \( w_{ukyj} \). However, both types of attacks damage these correlations and cause variations in command weights, as shown by the red and purple lines in Figure 23.

By utilizing the variation in command weights, PLC-Sleuth detected attacks with 100% true positives and 0% false positives, and localized the compromised control loops with 96.76% accuracy. Detailed detection and localization results are listed in Table 3.

#### Figures and Tables

- **Figure 20**: Different patterns of setpoints, sensors, and command variables in SEDS.
- **Figure 21**: The Tennessee Eastman (TE) control process [33].
- **Figure 22**: System evolution under command injection attacks: (a) unstable reactor temperature; (b) stopped reactor level; (c) dangerous reactor pressure; (d) degraded product quality.
- **Figure 23**: A visualization of abnormal weight in TE’s control graph under the two attacks against reactor temperature control.
- **Table 3**: Evaluating PLC-Sleuth’s attack detection and localization with the TE process.

**Table 3: Evaluating PLC-Sleuth’s Attack Detection and Localization with the TE Process**

| **Control Loop** | **Controlled Variable** | **Command Variable** | **TP Rate (Command Injection)** | **FP Rate (Command Injection)** | **TP Rate (Stealthy Attack)** | **FP Rate (Stealthy Attack)** |
|------------------|-------------------------|----------------------|---------------------------------|---------------------------------|-------------------------------|-------------------------------|
| 1                | A feed rate             | xmv(3)               | 100%                            | 0                               | 100%                          | 0                             |
| 2                | D feed rate             | xmv(1)               | 100%                            | 0                               | 100%                          | 0                             |
| 3                | E feed rate             | xmv(2)               | 100%                            | 0                               | 100%                          | 0                             |
| 4                | C feed rate             | xmv(4)               | 100%                            | 0                               | 100%                          | 0                             |
| 5                | Purge rate              | xmv(6)               | 100%                            | 0                               | 100%                          | 0                             |
| 6                | Sep.liq.rate            | xmv(7)               | 100%                            | 0                               | 100%                          | 0                             |
| 7                | Strip.liq.rate          | xmv(8)               | 100%                            | 0                               | 100%                          | 0                             |
| 8                | Production rate         | Fp                   | 100%                            | 0                               | 100%                          | 0                             |
| 9                | Strip.liq.level         | Ratio in loop 7      | 100%                            | 0                               | 100%                          | 0                             |
| 10               | Sep.liq.level           | Ratio in loop 6      | 100%                            | 0                               | 100%                          | 0                             |
| 11               | Reac.liq.level          | Setpoint of loop 17  | 100%                            | 0                               | 100%                          | 0                             |
| 12               | Reac.pres               | Ratio in loop 5      | 100%                            | 0                               | 100%                          | 0                             |
| 13               | Mol%G in stream 11      | Eadj                 | 100%                            | 0                               | 100%                          | 0                             |
| 14               | yA                      | Ratio in loop 1, r1  | 100%                            | 0                               | 100%                          | 0                             |
| 15               | yAC                     | Sum of r1 + r'       | 100%                            | 0                               | 100%                          | 0                             |
| 16               | Reac.temp               | xmv(10)              | 100%                            | 0                               | 100%                          | 0                             |
| 17               | Sep.temp                | xmv(11)              | 100%                            | 0                               | 100%                          | 0                             |

*Note: Controlled variables and command variables are defined in [29, 33].*

---

This version of the text is more organized and professional, with clear headings and a structured format.