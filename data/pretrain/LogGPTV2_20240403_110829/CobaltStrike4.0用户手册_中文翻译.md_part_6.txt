标文件。
然后，选择你的模板文件。点击 Template 字段旁边的文件夹图标来选择一个模板文件。
现在，你可以选择增加一个附件。这是使用我们前面讨论过的社会工程程序包的好机会之一。Cobalt
Strike 会将你的附件增加到发出的钓鱼邮件。
你也可以要求 Cobalt Strike 使用你选择的 URL 来重写模板中的所有 URL。粘贴 URL 或按 ... 来选择
一个 Cobalt Strike 托管的工具。Cobalt Strike 工件集包括克隆的网站，自动漏洞利用服务器和 System
Profiler。
当你嵌入一个 URL，Cobalt Strike 将对其附加 ?id=%TOKEN%。每一封发出的邮件都会被分配自己的令
牌（token）。Cobalt Strike 使用这个令牌（token）将网站访问者映射到已发送到的电子邮件上。如
果你要写报告，请务必保留此值。
将邮件服务器设置为目标的开放中继或邮件交换记录。如有必要，你可能还会向邮件服务器进行身份验
证以发送你的网络钓鱼邮件。
点击 Mail Server（邮件服务器）字段旁边的...来配置额外的服务器选项。你也可以指定用于身份
验证的用户名和密码。Random Delay 选项告诉 Cobalt Strike 将每封邮件随机延迟一段时间，最多不
超过你指定的秒数。如果此选项未设置，Cobalt Strike 不会延迟发送邮件。
图30. 配置邮件服务器
将 Bounce 设置为退回邮件的应该发往的电子邮件地址。这个值不会影响你的目标看到的邮件。点击
Preview 来查看发送到你的收件人之一的一封组合邮件。如果预览看上去不错，点击 Send 来发送你
的攻击。
Cobalt Strike 通过团队服务器发送钓鱼邮件。
第六章 Payload Artifact 和反病毒规避
6.1 哲学
Strategic Cyber 责任有限公司会定期回答有关规避的问题。Cobalt Strike 是否能够绕过 AV 产品？它能
绕过哪些 AV 产品？它多久检查一次？
Cobalt Strike 默认的 Artifact 可能会被大多数终端安全解决方案拦截。规避不是 Cobalt Strike 默认产
品的目的。但是 Cobalt Strike 确实提供了灵活性。
你作为操作员可以改变 Cobalt Strike 在它的工作流中使用的可执行文件、DLL、applet 和脚本模板。
你也可以以多种不同的格式导出 Cobalt Strike 的 Beacon payload，这样可以与用于帮助规避的第三方
工具一起工作。
本章将重点介绍 Cobalt Strike 提供灵活性的的功能。
6.2 Artifact 工件集
Cobalt Strike 使用 Artifact 工件集来生成它的可执行文件和 DLL。这个 Artifact 工件集是一个源码框
架、用于建立（build）可以规避一些反病毒产品的可执行文件和 DLL。
Artifact 工件集理论
传统的反病毒产品使用签名来识别已知的恶意程序。如果我们把一些被标记的恶意 shellcode 注入一个
可执行文件，那么反病毒产品会识别 shellcode 并把此可执行文件标为恶意。
为了打败这种检测，攻击者通常会以某种方式混淆 shellcode 并将其放入二进制文件中。这种混淆过程
会打败使用简单的字符串搜索来识别恶意代码的反病毒产品。
很多反病毒产品会进行更严苛的检测。这些反病毒产品模拟一个可执行程序在一个虚拟沙盒中的执行。
在执行的每个模拟步骤中，这个反病毒产品会检测在模拟的进程空间中的已知的恶意部分。如果已知的
恶意部分出现，反病毒产品会把这个可执行文件或 DLL 标记为恶意的。这项技术打败了许多编码器和程
序包，它们试图去从基于签名的反 AV 产品中隐藏已知的恶意部分。
Cobalt Strike 对此的应对策略是很简单的。这个反病毒沙盒有一些限制。这不是完整的虚拟机。有一些
反病毒沙盒不会模拟的系统行为。这个 Artifact 工件集是一些可执行文件和 DLL 模板的集合，这些可执
行文件和 DLL 模板依赖于一些反病毒产品不会模拟来还原二进制中的 shellcode 的行为。
一些技术[请参阅：Artifact 工件集中的 src-common/bypass-pipe.c]生成可执行文件和 DLL，这些可
执行文件和 DLL 通过命名管道为 shellcode 服务，通过命名管道传输 shellcode。如果反病毒沙箱不模
拟命名管道，就发现不了那些已知的恶意 shellcode。
Artifact 工件集失效的地方
当然，反病毒产品可能击败 Artifact 工件集中的特定的实现。如果一个反病毒的供应商为你使用的
Artifact 工件集技术编写了签名，那么它创建的可执行文件和 DLL 将被捕获。杀软的追踪始于 Cobalt
Strike 2.5 甚至更低的版本。随着时间的推移，Cobalt Strike 中默认的绕过技术会逐渐失效。如果你想
最大化利用 Artifact 工件集，你可以使用这些 Artifact 工件集中的某项技术作为基础来构建你自己的
Artifact 工件集实现。
但是哪怕是这样也还远远不够。一些反病毒产品会回连厂商的服务器。这些厂商来决定该可执行文件或
DLL 是否是非恶意的或者是之前从未见过的未知可执行文件或 DLL。一些这些产品会自动的把未知的可
执行文件或 DLL 发送到厂商用于进一步的研究和提醒用户。其他的一些产品会把未知的可执行文件或
DLL 视为恶意的。这取决于反病毒产品及其设置。
关键是，在这种情况下，再怎么样“混淆”也帮不了你。你要面对的是不同的防御方式，需要针对性的解
决方案。你应该像处理应用白名单一样处理这些情况。尝试找到一个已知的好的程序（比如
powershell），利用它来把你的 payload stager 注入进内存中。
如何使用 Artifact 工件集
通过 Help→Arsenal（武器库），填入 Cobalt Strike 的注册码来下载 Artifact 工件集。你也可以通
过这个地址来直接访问武器库网页：
https://www.cobaltstrike.com/scripts
Strategic Cyber 有限责任公司将 Artifact 工件集以 .tgz 的格式分发。使用 tar 命令对其进行解压。
此 Artifact 工件集包含一个 build.sh 脚本。在 Kali Linux 系统上运行此脚本，无需任何参数，使用最
小化 GNU 来为 Windows 交叉编译器构建默认的 Artifact 工件集。
图31. Artifact 工件集构建过程
Artifact 工件集构建脚本会为每一项 Artifact 工件集中的技术创建一个包含模板 Artifact 的文件夹。要
通过 Cobalt Strike 来使用某项技术，通过 Cobalt Strike → Script Manager（脚本管理器），并
从该技术的文件夹加载 artifact.cna 脚本。
建议你定制化修改 Artifact 工件集及其技术，使其满足你的需求。尽管熟练的 C 程序员可以使用
Artifact 工件集做更多事情，那些不是程序员但是乐于探索的人也可以使用 Artifact 工件集。比如，每
当新版本发布时，主流的反病毒产品喜欢为 Cobalt Strike 的试用版中的可执行文件编写签名。直到
Cobalt Strike 2.5版本，Cobalt Strike 的试用版和授权版都在其可执行文件和 DLL 中使用了命名管道技
术。反病毒厂商就需要为可执行文件使用的命名管道字符串编写签名。击败它们的签名，一次又一次的
发布，就像在管道技术的源代码中更改管道名称一样简单。
6.3 Veil 规避框架
Veil 是一个流行的框架，用于生成可以通过某些防病毒产品的可执行文件。你可以使用 Veil 来为
Cobalt Strike 的 payload 生成可执行文件。通过 Attacks → Packages → Payload Generator。
选择你想要为其生成可执行文件的监听器。选择 Veil 作为输出类型，按 Generate 按钮来保存输出
文件。
启动 Veil 规避框架并选择你想要使用的技术。Veil 最终会询问关于 shellcode 的生成选项。选择 Veil
的“使用自定义 shellcode”的选项，把 shellcode 粘贴在 Cobalt Strike 的 payload 生成器使用的文件内
容中。按 Enter 键然后你就会获得一个新鲜出炉的 Veil 制作的可执行文件。
图32. 使用 Veil 来生成一个可执行文件
6.4 Java 小程序攻击
Strategic Cyber 有限责任公司以小程序集的形式为 Cobalt Strike 的小程序攻击发布源码。这部分也可
以在 Cobalt Strike 的武器库中。通过 Help → Arsenal（武器库）并下载小程序集。
使用包含的 build.sh 脚本来在 Kali Linux 上构建小程序集。很多 Cobalt Strike 的客户使用这种灵活
性来使用一个他们购买的代码签名的证书为 Cobalt Strike 的 Java 小程序攻击签名。我们也强烈推荐这
种做法。
要使 Cobalt Strike 使用你的小程序集而不是内置的那个，加载包含在小程序集里面的 applet.cna 脚
本。
在 Cobalt Strike 武器库页面上你会注意到 Power Applet（Powershell 小程序）。这是 Cobalt Strike
的 Java 小程序攻击使用 PowerShell 的替代实现，用于将 payload 注入内存。Power Applet 展示了
你有使用完全不同的方法重建 Cobalt Strike 的标准攻击并把它门用于 Cobalt Strike 的工作流中的灵活
性。
通过加载小程序集中包含的 applet.cna 脚本，可以使 Cobalt Strike 使用你的小程序集而不是内置的
那个。
6.5 资源集
资源集是 Cobalt Strike 改变其在工作流中使用的 HTA，Powershell，Python，VBA 和 VBA 脚本模板
的方法。同样，资源集在 Cobalt Strike 的武器库中，可以被有注册码的用户获取。通过 Help →
Arsenal 来下载资源集。
资源集的 README.txt 文档记录了包含的脚本和哪些功能使用它们。要规避一个产品，考虑这些脚本
中的改变字符串或行为。
要使 Cobalt Strike 使用你的脚本模板而不是内置的脚本模板，加载资源集中的 resources.cna 脚
本。
第七章 后渗透
7.1 Beacon 控制台
在一个 Beacon 会话上单击右键并选择 interact（交互）来打开 Beacon 的控制台。这个控制台是你
的 Beacon 会话的主用户接口。这个 Beacon 控制台允许你看哪个任务被发送到了 Beacon 和 Beacon
何时下载任务。这个 Beacon 控制台也是命令输出和展示其他信息的地方。
图 33. Cobalt Strike Beacon 控制台
在 Beacon 控制台的输入和输出之间是一个状态栏。这个状态栏包含关于当前会话的信息。在它的默认
配置中，这个状态栏显示目标的 NetBIOS 名称，用户名和 当前会话的 PID，以及 Beacon 最近一次连
接到团队服务器的时间。
向 Beacon 发出的每个命令，无论是通过 GUI 还是控制台，都会在此窗口中显示出来。如果一个队友发
送了一个命令，Cobalt Strike 会在命令前显示他们的昵称。
使用 Cobalt Strike 的过程中，你可能会花费大量的时间在 Beacon 控制台中。所以花费时间来熟悉控
制台命令是非常值得的。在 Beacon 控制台中输入 help 来查看可用的命令。help+命令可以获取关于
某条命令的详细帮助信息。
7.2 Beacon 菜单
在一个 Beacon 上或在一个 Beacon 的控制台内单击右键来获取 Beacon 菜单。这和与用来打开
Beacon 控制台（点击菜单中的 Interact）相同的菜单。
Access 子菜单包含对凭据的操作和提权在内的一些选项。
Explore 子菜单包含信息探测和与目标系统交互的一些选项。
通过 Pivoting 子菜单你可以通过一个 Beacon 来配置工具来搭建流量隧道。
通过 Session 菜单你可以管理当前 Beacon 会话。
图34. Cobalt Strike 的 Beacon 菜单
一些 Cobalt Strike 的可视化（枢纽图和会话表）允许你一次选择多个 Beacon。通过此菜单发生的大多
数操作将应用于所有选定的 Beacon 会话。
7.3 异步和交互式操作
请注意，Beacon 是一个异步的 payload。命令不会立即执行。每个命令都会先进入队列。当 Beacon
连接到你的时候。它会下载这些命令并挨个执行它们。此时，Beacon 会将所有的输出报告给你。如果
输入有误，使用 clear 命令来清理当前 Beacon 的命令队列。
默认情况下，Beacon 每60秒连接到你一次。你可以使用 Beacon 的 sleep 命令修改这个时间设置。
使用 sleep 接着一个秒数来指定 Beacon 连接到你的频率。你也可以指定第二个参数，这个参数必须
是一个0到99之间的数字。这个数字就是抖动因子。Beacon 会根据你指定的抖动因子的百分比随机变
化下次连接到你的时间。比如，sleep 300 20这条命令，会使得 Beacon 睡眠 300秒，另外有 20%
的抖动因子。这意味着 Beacon 在每次连接到你之后会随机睡眠 240 - 300秒。
要使得 Beacon 每秒都多次连接到你，使用 sleep 0 命令。这就是“交互式模式”。这种模式下命令
会立即执行。在你的隧道流量通过它之前你必须使得你的 Beacon 处于交互模式下。一些 Beacon 命令
（如 browerpivot、desktop等）会自动的使 Beacon 在下次连接到你时处于交互式模式下。
7.4 运行命令
Beacon 的 shell 命令会对 Beacon 创建任务来通过受害主机的 cmd.exe 来执行命令。当命令完成
时，Beacon 会将输出展示给你。