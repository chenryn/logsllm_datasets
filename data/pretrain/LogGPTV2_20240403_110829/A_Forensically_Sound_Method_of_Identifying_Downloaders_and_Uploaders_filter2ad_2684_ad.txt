X = r is large enough such that Pr(H1|X = r) > t for a threshold
0.5 = 20)FPTNFNTPh: 4h: 8h.actual: 5h.actual: 8h.actual: 120200040000200040001e+001e−031e−061e+001e−031e−061e+001e−031e−06Size of manifest (T)FPRExactCh. Boundg8163264h: 4h: 801000200030004000010002000300040000.000.200.400.600.801.00Size of manifest (T)PowerExactCh. Boundg8163264Session 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1504In our proofs, we use two simpler formulations of ϱ, as stated in
these lemmas.
LEMMA 1: The value of ϱ, the smallest number of requests
that results in a positive test given T , д, and h, is bounded by
(7)
ϱ >
T/(2д)
1/2д + ln(h)
The proof appears in Appendix B.
LEMMA 2: The value of ϱ, the smallest number of requests
that results in a positive test given T , д, and h, is bounded by
(8)
ϱ  (1 + δ)µ. Substituting this
value for δ back into the bound, we see that
(cid:19)
(cid:19) T
3дh
(9)
Pr[X ≥ ϱ] ≤ Exp
−
which is bounded by the equation in the theorem’s statement (when
δ ≥ 1). Note that while this bound is always valid, it is not tight
(i.e., it is greater than one) when дh ≤ 1 + 2д ln(h).
□
We bound Power from below, as we wish to know the probability
that the actual requester does not issue at least ϱ requests. We seek
to characterize the asymptotic behavior of Power as T increases.
THEOREM 5: For Eq. 2, the Power is Ω(cid:0)1 − Exp
(cid:17)(cid:1) if
√
T , h ≥ 2, and 0  0, 2 ≤ д <
The proof appears in Appendix C.
Using Eqs. 4 and 5, we plot in Figure 7 the exact FPR and Power
for selected values of д, h, T , and h. Dotted lines show Chernoff
bounds from Eqs. 9 and 17 for д = 8. As predicted by Theorem 4,
the semi-logscale plot illustrates that the FPR is exponentially de-
creasing with T and exponentially increasing with д. Increases in h
reduce the error rate. An increase in h would increase the FPR in a
less significant fashion. The relative value of h and h matter, but
(cid:16) д3
T
Figure 8: Distribution of requests received by observer either
adjacent to or two hops away from the requester (degree 36).
Visually, it’s clear observers can differentiate the scenarios.
most importantly, the exact FPR values are predicted to be small in
scenarios we observe in Freenet. In Freenet, T is linked to file size
(each block is 32KB). Our analysis predicts a low FPR for scenarios
that concern us on Freenet: images and videos. The equations (and
plots) also predict high Power for almost any combination of h,T ,
and д, orders of magnitude higher than the FPR.
This analysis assumes that the parameters of the model are
correct. Our FPR and TPR results from Sections 5.1 and 5.2 make
no such assumption, and neither do our results by simulation in
Section 6. All show results consistent with the theorems above.
6 EVALUATION II: SIMULATIONS
To gain further insight into the accuracy of our investigative method,
we designed and executed a custom simulator. We constructed a
Freenet-like topology and performed FOAF routing for thousands
of concurrent downloaders. We measure the FPR and TPR. These
evaluations agree with Section 5’s results but lend different insights.
Compared to our in situ tests, our simulation has the advantage
that we can modify a variety of parameters. To highlight this dif-
ference, we modified various parameters in the single downloader
and concurrent downloader scenarios below, and we present the
results differently.
Assumptions. Freenet is designed to create a small-world topol-
ogy [47]. In our simulations, we create a small-world topology
via Watts and Strogatz’s algorithm [48]; numerous evaluations of
Freenet simulate over small-world topologies [37, 38, 49–51]. Specif-
ically, we assign each node a random location in the location space
from [0, 1). We then assign each node a set of edges: c edges to close
nodes and l edges to long-distance nodes, where distance is defined
using the Freenet distance metric (Section 2). The c edges to close
nodes are chosen uniformly at random from among the 2c closest
nodes, and the l edges are chosen uniformly at random from among
the remaining nodes. Each node thus has at least c + l edges and
typically more.
All of our graphs were constructed with 5,000 nodes total. In any
single trial, all nodes in a graph had the parameters c + l of either
10+1, 18+2, 27+3, 54+6, or 81+9, resulting in average degrees of 12,
24, 36, 72, and 108, respectively. For each degree, we constructed
250 random graphs. The real Freenet graph is comprised of nodes
with a variety of degrees, at or below these values.
010002000300040000.000.010.020.03Frac. of recvd requestsFrequencyadjacenttwo hopsexpectedobservedSession 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1505Figure 9: ROC curve for investigator success for Eq. 2, from
trials of 500 small-world graphs per degree. (T = 1000.)
6.1 Single Downloader
For each graph, we requested blocks from a random node to one
of the 5,000 locations in the graph. To find the content, we use the
Freenet friend-of-a-friend routing algorithm, HTL decrementing,
and other important details from the Freenet system (Section 2).
Specifically, we ran two types of trials, each type on 250 instances
of each graph size. In the first type of trial, for a specific graph, we
selected a node at random as an originator, another at random as a
destination of the request, and then one of the originator’s peers at
random as an observer. In the second trial type, we selected a node
at random as an originator, another at random as a destination,
then one of the originator’s peers two hops away at random as an
observer. We ran 5,000 trials of each type for each graph instance.
For each trial, we simulated 5,000 requests that resulted in a path
that did or did not include the observer. From the 5,000 requests,
we constructed 10,000 bootstrap samples for error analysis [52].
We constructed each bootstrap sample by selecting 5,000 requests
uniformly at random with replacement from a trial’s 5,000 requests.
Results. Figure 8 provides an intuitive explanation of why re-
questers are distinguishable from relayers. The figure shows the
results for exactly two trials. The plot shows, for each trial, the
fraction of requests observed from the 10,000 bootstrapped samples.
One distribution of bootstrapped samples is presented for the case
when an observer is adjacent to the requester, and another distribu-
tion for when it is two hops away. A simple visual test distinguishes
the two scenarios. For these experiments, observations included
only requests with HTLs of 18 or 17.
In Figure 8, vertical lines show the observed mean fraction of
requests for the two scenarios, and two other lines show a simple
expected fraction of 1/degree for the adjacent and (1/degree)2 for
the two-hop case. Because nodes in the graph have different degrees,
and requests are sent from a random node, there is not an exact
match with the mean degree.
Figure 9 shows a Receiver Operating Characteristic (ROC) curve
for the result of applying Eq. 2 to all trials for each size graph. The
plot shows FPR versus TPR as a curve parameterized by a threshold
from 0 to 1 for the value of Eq. 2. A true positive is an observation
from an adjacent node with a probability greater than or equal to
the threshold. A false positive is an observation from a two-hop
neighbor with the same. As the figure shows, the algorithm obtains
near-perfect accuracy in simulation. The area under the curve is
numerically equivalent to 1.0 for all four graph types.
Figure 10: Simulations of concurrent downloaders of the
same manifest (5000-node topology). The FPR remains be-
low 1.5% for all scenarios, and decreases as the average de-
gree of the topology increases. Error bars show 95% c.i.
6.2 Concurrent Downloaders
Figure 10 shows the TPR and FPR of our method in the presence of
concurrent downloaders from simulations. All simulations are over
5000-node small-world topologies constructed using a variety of de-
grees. The simulations vary the number of requests per downloader
T (as distinct lines on the plots) and the number of concurrent
downloaders (as the independent variable on the x-axis). Our simu-
lations take into account Eq. 3, which (i) counts the distinct blocks
requested (and not the total number of requests), and (ii) discounts
when duplicate requests for the same block are received. In no case
does the FPR rise above 1.5%, and the FPR lowers as node degree
increases. As the size of the manifest and T increase, the FPR in-
creases slowly. If our simulation enforced request caching, the FPR
would be lower3.
We did not evaluate concurrent uploaders. We leave such an eval-
uation for future work based on the following details. Concurrent
CHK uploaders would increase the possibility of a false positive,
since each upload would use the same encryption key. But nodes
assign unique identifiers (UIDs) to their inserts. If an observer re-
ceived duplicate content blocks (Section 4.4) having distinct UIDs,
she could assume concurrent uploaders and discard the run.
7 PROSECUTIONS USING THIS METHOD
Our method has been successfully used to investigate and prosecute
cases. Convictions include: engaging in illicit sexual conduct in
foreign places with minors (i.e., child sex tourism); production of
CSAM with the intent to transport to the US; and possession, receipt,
and distribution of CSAM. Table 2 summarizes five cases brought in
US Federal District courts. Each involved a court-approved search
warrant that was supported by the results of our method. We have
omitted cases that are still in progress at the district court level. In
four, the defendants filed motions to suppress the evidence obtained
corrected as˝n
3In our prior work [14], we derived a model of concurrent downloaders. Eq. 7 is
, which is indeed less than the expected fraction
of requests from a true downloader, 1/(b + 1). The comparison of expectations does
not capture variance, but our simulations do and replace it.
2i (b +1) = (1−2−n)
b +1
1
i =1
●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●0%25%50%75%100%0% 25% 50% 75% 100%FPRTPRNode degree●●●●●●●●24 36 72 108Degree: 12Degree: 24Degree: 36FPRTPR0500100015002000050010001500200005001000150020000.0000.0050.0100.0150.00.10.20.30.4Concurrent DownloadersRequests perdownloader (T)2025050010005000Session 5C: Forensics CCS '20, November 9–13, 2020, Virtual Event, USA1506Case
Evidence Discovered
Outcome
Notes
US v. Dickerman
US Court of Appeals Eighth Circuit, No. 18-3150;
and Eastern Dist. of Missouri, Case 4:16-CR-258
US v. Hall