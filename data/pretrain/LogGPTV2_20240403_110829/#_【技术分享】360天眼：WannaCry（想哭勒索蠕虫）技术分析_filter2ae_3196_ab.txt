如下图所示为对应的payload的x86版本，可以看到这是一个pe文件。
Dump出来可以看到该段代码就是一个单的loader，用于加载资源中的蠕虫。
如下图所示为对应的内网感染代码的实现，通过函数fun_getipduan获取当前ip段，针对每个ip通过函数fun_starAttack发起一次攻击。
在fun_starAttack中首先通过fun_initalSmbcontect函数探测目标ip的445端口是否开启。
如果目标机器开启了445端口，则进入fun_enterBlueattack，该函数中通过NSA泄露的enterblue实现远程攻击，并传播对应的蠕虫样本，如下所示通过fun_tryExpfirst/second实现exploit，该次exploit之后会在目标机器中运行一段内核loader（接受来自doublespular上传的payload，并在user层运行），之后通过fun_doublespularInstall，fun_doubelspluarRunpayload将之前的payload上传并运行，这段payload被内核loader加载，并释放其中资源中的蠕虫运行。
下图为外网的情况下进行的扫描，此时通过随机生成ip进行攻击。
**Ransom释放**
扫描服务启动之后，样本中资源中先解压出对应的ransome，并移动当前 C:WINDOWStasksche.exe到 C:WINDOWSqeriuwjhrf
释放自身的1831资源(MD5: 84C82835A5D21BBCF75A61706D8AB549),到C:WINDOWStasksche.exe,并以
/i参数启动
**Ransome**
Ransom整体流程如下：
在函数fun_GetDisplayName中通过username生成一个标识A。
该勒索样本其中之后，首先会判断参数是否为2，是否包含i
通过该标识尝试在ProgramData目录/Intel目录/Temp系统临时目录生成一个标识A的目录
并将这个这个目录的属性设置为隐藏不可见。
将自身拷贝创建副本。
运行副本，优先通过服务的模式启动，否则以进程的方式启动，在函数fun_checkMutex中通过检测互斥体GlobalMsWinZonesCacheCounterMutexA来判断是否运行成功。
设置对应的注册表项
之后在函数fun_releaseResource中通过再次解压出真正的ransome模块，解压的时候资源为对应80A，需要是使用到解压码WNcry@2ol7。
解压出的文档如下所示：其中msg中包含各国的敲诈说明版本
详细的功能列表
之后在函数fun_getBitaddress中获取对应的比特币付款地址，受害者通过该地址可以进行支付解锁。
运行命令再次设置该工作目录。
之后动态获取文件类api，crypt解密类api。
之后通过内置的RSA公钥解密对应的t.wnry，该模块为对应的RansomModule，用于实现真正的文件加密功能，如下所示，解密之后通过fun_shell_loadTaskStardll加载该dll到内存中，并调用TaskStart函数开始进行加密流程。
如下图示可以看到对fun_decryptTwnry函数下断，函数运行结束之后，内存中已经解密出了RansomModule，可以直接进行dump。
**RansomeModule**
如下图所示dump出的RansomModule的导出函数如下所示，通过TaskStart开始加密任务。
该RansomeModule的加密流程如下，黑客掌握一对公私钥A1/A2，A1公钥在样本中，A2私钥为黑客持有，RansomModule通过该公钥A1生成一对新的RSA公私钥B1/B2，公钥B1保存到文件00000000.pky中，私钥B2通过公钥A1加密保存到00000000.eky中，遍历文件并对每一个文件生成随机的AES128位秘钥C，通过公钥B1加密AES秘钥C，并用C对文件进行加密，之后将被加密AES秘钥C附加在文件内容中。
如下所示样本首先获取file/crypt类函数，之后分别生成两个用于保存公私钥的文件名，之后通过函数fun_shell_testEncryptreliableOrnot测试内置公钥的的可靠性。
如下所示对首先通过加密TESTDATA字符测试该公钥的加密可行性。
之后在函数fun_optionKey中通过该内置的公钥生成一对RSA公私钥A1/A2，并保存到对应的文件00000000.pky，00000000eky中。
之后运行一系列线程初始化运行环境，如下图中fun_starTaskdl用于调用Taskdl.exe删除临时文件，最后进行fun_enterEncrypt开始加密流程。
进入fun_enterEncrypt后，首先调用fun_runBatchangFilename，之后通过命令行关闭一些重要进程，以保证对应的文件能成功被加密。
fun_runBatchangFilename中运行通过一个脚本设置一个link，将u.wnry重命名为@WanaDecryptor@.exe，该exe即为受害者能看到的勒索展示程序。
之后开始遍历文件，如下所示过滤掉ransom自己的文件，然后对比文件后缀是否为内置需要加密的文件类型。
支持的加密文件如下所示：
之后创建AES秘钥并开始加密，注意此处会随机挑选几个文件使用内置的RSA公钥来进行加密，这里的目的是为解密程序提供的免费解密部分文件功能演示。
**四、 一些思考**
蠕虫样本的分析显示其结构和功能并不复杂，也没有做什么技术上的对抗。为什么在全球范围内形成了如此大的危害，其核心还是在于其所依赖的蠕虫式传播手段。蠕虫攻击传播所利用的漏洞微软在2017年3月已经修补，而在4月Shadow
Brokers公开了蠕虫所基于的NSA黑客工具以后，安全业界对于可能出现蠕虫其实已经有所警觉，并再次提醒更新系统，但似乎并没什么用。
这回的蠕虫事件本质上是对企业机构的内部网络安全运维一次大考，如果企业有比较完善的IT运维策略并得以有效地落地执行，安全补丁能被及时打上，在本次勒索大潮中可安然度过，反之，则必然经历一场伤痛。
**五、 参考引用**
[1] WanaCrypt0r勒索蠕虫完全分析报告
[2] Wannacry勒索软件母体主程序逆向分析
[3] WannaCry蠕虫详细分析
[4] Wannacry 勒索软件分析
[5] 关于“魔窟”（WannaCry）勒索蠕虫变种情况的进一步分析
[http://www.antiy.com/response/Antiy_Wannacry_Explanation.html?from=groupmessage&isappinstalled=0](http://www.antiy.com/response/Antiy_Wannacry_Explanation.html?from=groupmessage&isappinstalled=0)
[6] WannaCry and Lazarus Group – the missing link?
[7] the-worm-that-spreads-wanacrypt0r
[8] how-to-accidentally-stop-a-global-cyber-attacks
[9] WanaCry Ransomware：Potential Link to North Korea
[10] Player 3 Has Entered the Game: Say Hello to 'WannaCry'
[http://blog.talosintelligence.com/2017/05/wannacry.html?m=1&nsukey=0iYxeUP%2BZU1uMlAkxW%2FksDg0RiWTLnUGIC2KF597siLZgc3qDVK7XZMWKuhZ4RZhlW3%2BujNrSiujH1ZxR0awd6vxNsLbR61jXdVlJT7hMX3pH7gkSrhVA%2B6w%2BvT8T0bXgAmQGZOAtHfWkNjeW9lY68RaTM7fIaoNjQvQus3P0kgxvXqOZp4NSwqmsHFZTTSm](http://blog.talosintelligence.com/2017/05/wannacry.html?m=1&nsukey=0iYxeUP%2BZU1uMlAkxW%2FksDg0RiWTLnUGIC2KF597siLZgc3qDVK7XZMWKuhZ4RZhlW3%2BujNrSiujH1ZxR0awd6vxNsLbR61jXdVlJT7hMX3pH7gkSrhVA%2B6w%2BvT8T0bXgAmQGZOAtHfWkNjeW9lY68RaTM7fIaoNjQvQus3P0kgxvXqOZp4NSwqmsHFZTTSm)