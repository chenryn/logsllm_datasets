### 优化后的文本

#### 1. 蠕虫样本分析

如下图所示，为对应的payload的x86版本，可以看到这是一个PE文件。通过Dump工具可以发现，该段代码是一个简单的加载器，用于加载资源中的蠕虫。

![Payload x86版本](image_url)

下图展示了内网感染代码的实现。通过`fun_getipduan`函数获取当前IP段，并对每个IP地址调用`fun_starAttack`函数发起攻击。

![内网感染代码](image_url)

在`fun_starAttack`中，首先使用`fun_initalSmbcontect`函数探测目标IP的445端口是否开启。如果目标机器开启了445端口，则进入`fun_enterBlueattack`函数。该函数利用NSA泄露的EternalBlue漏洞进行远程攻击，并传播蠕虫样本。具体来说，`fun_tryExpfirst`和`fun_tryExpsecond`函数实现漏洞利用，之后会在目标机器上运行一个内核加载器（接受来自`doublespular`上传的payload，并在用户层运行）。随后，`fun_doublespularInstall`和`fun_doubelspluarRunpayload`将之前的payload上传并运行，这段payload被内核加载器加载，并释放其中的蠕虫资源。

![外网扫描](image_url)

在外网情况下，通过随机生成的IP地址进行攻击。

#### 2. Ransom释放

扫描服务启动后，样本会从资源中解压出相应的勒索软件，并将当前的`C:\WINDOWS\tasksche.exe`移动到`C:\WINDOWS\qeriuwjhrf`目录下。然后，释放资源中的1831号资源（MD5: 84C82835A5D21BBCF75A61706D8AB549）到`C:\WINDOWS\tasksche.exe`，并以`/i`参数启动。

#### 3. 勒索软件流程

勒索软件的整体流程如下：

- 在`fun_GetDisplayName`函数中，通过用户名生成一个标识A。
- 判断参数是否为2，是否包含`i`。
- 尝试在`ProgramData`目录、`Intel`目录或`Temp`系统临时目录中生成一个标识A的隐藏目录。
- 将自身拷贝创建副本，并优先通过服务模式启动，否则以进程方式启动。
- 在`fun_checkMutex`函数中，通过检测互斥体`GlobalMsWinZonesCacheCounterMutexA`来判断是否运行成功。
- 设置相应的注册表项。
- 在`fun_releaseResource`函数中，再次解压出真正的勒索模块，解压时使用的资源为80A，解压码为`WNcry@2ol7`。

解压出的文档包括各国语言的敲诈说明。

- 在`fun_getBitaddress`函数中获取比特币付款地址，受害者可以通过该地址支付解锁费用。
- 运行命令设置工作目录。
- 动态获取文件类API和加密解密类API。
- 通过内置的RSA公钥解密`t.wnry`模块，该模块是实际的勒索模块。解密后，通过`fun_shell_loadTaskStardll`函数将其加载到内存中，并调用`TaskStart`函数开始加密流程。

如图所示，可以在`fun_decryptTwnry`函数处下断点，函数运行结束后，内存中已经解密出勒索模块，可以直接进行dump。

#### 4. 勒索模块

如下图所示，dump出的勒索模块导出函数如下，通过`TaskStart`函数开始加密任务。

![RansomModule导出函数](image_url)

勒索模块的加密流程如下：

- 黑客掌握一对公私钥A1/A2，A1公钥在样本中，A2私钥由黑客持有。
- 勒索模块通过公钥A1生成一对新的RSA公私钥B1/B2，公钥B1保存到文件`00000000.pky`中，私钥B2通过公钥A1加密保存到`00000000.eky`中。
- 遍历文件并对每个文件生成随机的AES-128位密钥C，通过公钥B1加密AES密钥C，并用C对文件进行加密，之后将加密后的AES密钥C附加在文件内容中。

样本首先获取文件和加密类函数，分别生成两个用于保存公私钥的文件名，然后通过`fun_shell_testEncryptreliableOrnot`函数测试内置公钥的可靠性。通过加密`TESTDATA`字符测试公钥的加密可行性。

在`fun_optionKey`函数中，通过内置的公钥生成一对RSA公私钥A1/A2，并保存到文件`00000000.pky`和`00000000eky`中。之后运行一系列线程初始化运行环境，`fun_starTaskdl`函数调用`Taskdl.exe`删除临时文件，最后进行`fun_enterEncrypt`开始加密流程。

在`fun_enterEncrypt`中，首先调用`fun_runBatchangFilename`函数，通过命令行关闭一些重要进程，以确保文件能成功被加密。`fun_runBatchangFilename`函数通过脚本设置一个链接，将`u.wnry`重命名为`@WanaDecryptor@.exe`，即受害者能看到的勒索展示程序。

之后开始遍历文件，过滤掉勒索软件自身的文件，然后对比文件后缀是否为需要加密的类型。支持的加密文件类型如下：

- `.doc`
- `.xls`
- `.ppt`
- `.pdf`
- `.jpg`
- `.png`

创建AES密钥并开始加密，注意此处会随机挑选几个文件使用内置的RSA公钥进行加密，目的是为解密程序提供免费解密部分文件的功能演示。

#### 5. 一些思考

蠕虫样本的分析显示其结构和功能并不复杂，也没有采取技术上的对抗措施。为什么在全球范围内造成了如此大的危害？其核心在于其所依赖的蠕虫式传播手段。蠕虫攻击所利用的漏洞在2017年3月已经被微软修补，而在4月Shadow Brokers公开了基于NSA黑客工具的蠕虫后，安全业界对于可能出现的蠕虫有所警觉，并再次提醒更新系统，但似乎并没有起到太大作用。

这次蠕虫事件本质上是对企业机构内部网络安全运维的一次大考。如果企业有完善的IT运维策略并得以有效执行，及时打上安全补丁，就能在这次勒索大潮中安然度过；反之，则必然经历一场痛苦。

#### 6. 参考引用

[1] WanaCrypt0r勒索蠕虫完全分析报告  
[2] Wannacry勒索软件母体主程序逆向分析  
[3] WannaCry蠕虫详细分析  
[4] Wannacry 勒索软件分析  
[5] 关于“魔窟”（WannaCry）勒索蠕虫变种情况的进一步分析  
[http://www.antiy.com/response/Antiy_Wannacry_Explanation.html?from=groupmessage&isappinstalled=0](http://www.antiy.com/response/Antiy_Wannacry_Explanation.html?from=groupmessage&isappinstalled=0)  
[6] WannaCry and Lazarus Group – the missing link?  
[7] the-worm-that-spreads-wanacrypt0r  
[8] how-to-accidentally-stop-a-global-cyber-attacks  
[9] WanaCry Ransomware：Potential Link to North Korea  
[10] Player 3 Has Entered the Game: Say Hello to 'WannaCry'  
[http://blog.talosintelligence.com/2017/05/wannacry.html?m=1&nsukey=0iYxeUP%2BZU1uMlAkxW%2FksDg0RiWTLnUGIC2KF597siLZgc3qDVK7XZMWKuhZ4RZhlW3%2BujNrSiujH1ZxR0awd6vxNsLbR61jXdVlJT7hMX3pH7gkSrhVA%2B6w%2BvT8T0bXgAmQGZOAtHfWkNjeW9lY68RaTM7fIaoNjQvQus3P0kgxvXqOZp4NSwqmsHFZTTSm](http://blog.talosintelligence.com/2017/05/wannacry.html?m=1&nsukey=0iYxeUP%2BZU1uMlAkxW%2FksDg0RiWTLnUGIC2KF597siLZgc3qDVK7XZMWKuhZ4RZhlW3%2BujNrSiujH1ZxR0awd6vxNsLbR61jXdVlJT7hMX3pH7gkSrhVA%2B6w%2BvT8T0bXgAmQGZOAtHfWkNjeW9lY68RaTM7fIaoNjQvQus3P0kgxvXqOZp4NSwqmsHFZTTSm)