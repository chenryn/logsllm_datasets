文件中删除以下行解决这个问题：
:::
``` screen
KERNEL!="dm-[0-9]*", ACTION=="add", PROGRAM=="/bin/bash -c '/sbin/lsmod | /bin/grep ^dm_multipath'", RUN+="/sbin/multipath -v0 %M:%m"
```
::: para
这行会在每次向该节点中添加块设备时让 `udev`{.literal} 设备管理器运行
`multipath`{.literal}。即使删除了这一行，`multipathd`{.command}
守护进程仍将自动生成多路径设备，同时在引导附带多路径 root
文件系统节点的过程中仍会调用
`multipath`{.literal}。唯一的变化就是没有运行 `multipathd`{.command}
守护进程不再自动生成多路径设备，对大多数多路径用户来说应该不是个问题。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#queueifnopath_issues}5.7. 有 queue_if_no_path 功能的问题 {.title}
:::
::: para
如果使用 `features "1 queue_if_no_path"`{.literal}
配置多路径设备，那么所有采用 I/O
操作的进程都将被挂起直到恢复一个或者多个路径为止。要避免这种情况，请在
`/etc/multipath.conf`{.filename} 文件中设定 `no_path_retry`{.literal}
*`N`* 参数（其中 *`N`* 是该系统应该重试某个路径的次数）。
:::
::: para
如果需要使用 `features "1 queue_if_no_path"`{.literal}
选项，且遇到这里提到的问题，请使用 `dmsetup`{.command} 命令为特定 LUN
编辑运行时策略（就是说对该特定 LUN
来说所有路径都不可用）。例如：如果想要将多路径设备 `mpath2`{.literal}
的策略从 `"queue_if_no_path"`{.literal} 改为
`"fail_if_no_path"`{.literal}，请执行以下命令。
:::
``` screen
dmsetup message mpathc 0 "fail_if_no_path"
```
::: para
请注意：必须指定 `mpath`{.literal}*`n`* 别名而不是该路径。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#MPIO_output}5.8. 多路径命令输出 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm140613826473040 .indexterm}
::: para
创建、修改或者列出多路径设备时，会显示当前设备设置状态，格式如下所示。
:::
::: para
对于每个多路径设备：
:::
``` screen
 action_if_any: alias (wwid_if_different_from_alias) dm_device_name_if_known vendor,product size=size features='features' hwhandler='hardware_handler' wp=write_permission_if_known 
```
::: para
对与每个路径组群：
:::
``` screen
-+- policy='scheduling_policy' prio=prio_if_known status=path_group_status_if_known
```
::: para
对于每个路径：
:::
``` screen
 `- host:channel:id:lun devnode major:minor dm_status_if_known path_status online_status
```
::: para
例如，多路径命令的输出可能是如下形式：
:::
``` screen
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
::: para
如果该路径已经启用并准备好执行 I/O，那么路径的状态就是 `ready`{.literal}
或者 `ghost`{.literal}。如果该路径无法使用，则状态为 `faulty`{.literal}
或者 `shaky`{.literal}。路径的状态由 `multipathd`{.command}
守护进程根据在 `/etc/multipath.conf`{.filename}
文件中定义的轮询间隔进行定期更新。
:::
::: para
dm 状态与路径状态相似，但从内核来看，dm
有两个状态：`failed`{.literal}（类似 `faulty`{.literal}）和
`active`{.literal}（涵盖所有其它路径状态）。少数情况下，设备的路径状态和
dm 状态会暂时不同。
:::
::: para
*`online_status`* 的可能值为 `running`{.literal} 和
`offline`{.literal}。`offline`{.literal} 意味着这个 SCSI 设备已被禁用。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
生成或者修改多路径设备时，路径组群状态、dm 设备名称、写入权限和 dm
状态是未知的。另外，功能也不一定正确。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipath_queries}5.9. 使用多路径命令进行多路径查询 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm140613821669376 .indexterm}
::: para
可以使用 `multipath`{.command} 命令的 `-l`{.option} 和 `-ll`{.option}
选项来显示当前 multipath 配置。`-l`{.option} 选项会显示从
`sysfs`{.literal}
以及设备映射器中的信息搜集到的多路径拓扑。`-ll`{.option} 选项会显示
`-l`{.option} 选项显示的信息以及系统的其他可用组件。
:::
::: para
显示多路径配置时，可以使用 `multipath`{.command} 命令的 `-v`{.option}
选项指定三种详细等级。指定为 `-v0`{.option} 时没有输出。指定为
`-v1`{.option} 则只输出生成或者更新的路径名称。指定 `-v2`{.option}
将输出所有检测到的路径、多路径和设备映射。
:::
::: para
以下示例显示了 `multipath -l`{.command} 命令的输出。
:::
``` screen
# multipath -l
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
::: para
以下示例显示了 `multipath -l1`{.command} 命令的输出。
:::
``` screen
# multipath -ll
3600d0230000000000e13955cc3757801 dm-10 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=enabled
| `- 19:0:0:1 sdc 8:32  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 18:0:0:1 sdh 8:112 active ready  running
3600d0230000000000e13955cc3757803 dm-2 WINSYS,SF2372
size=125G features='0' hwhandler='0' wp=rw
`-+- policy='round-robin 0' prio=1 status=active
  |- 19:0:0:3 sde 8:64  active ready  running
  `- 18:0:0:3 sdj 8:144 active ready  running
```
::: para
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipath_options}5.10. 多路径命令选项 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm140613847879008 .indexterm}
::: para
[表 5.1 "有用的 `multipath`{.command}
命令选项"](#MPIO_admin-troubleshoot.html#tb-table-multipath-options){.xref}
描述了一些您可能会用到的 `multipath`{.command} 命令选项。
:::
::: table
[⁠]{#MPIO_admin-troubleshoot.html#tb-table-multipath-options}
**表 5.1. 有用的 `multipath`{.command} 命令选项**
::: table-contents
  ---------------------------------------------------------------------------------
  选项                   描述
  ---------------------- ----------------------------------------------------------
  `-l`{.option}          显示来自 `sysfs`{.filename} 和设备映射器的当前多路径配置。
  `-ll`{.option}         显示来自 `sysfs`{.filename}
                         、设备映射器以及系统中其他所有可用组件的当前多路径配置。
  `-f device`{.option}   删除命名的多路径设备。
  `-F`{.option}          删除所有不使用的多路经设备。
  `-w device`{.option}   从 `wwids`{.filename} 文件中删除指定设备的
                         `wwid`{.literal}。
  `-W`{.option}          重新设定 `wwids`{.filename} 文件使其只包含当前 multipath
                         设备。
  ---------------------------------------------------------------------------------
:::
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#dmsetup_queries}5.11. 使用 dmsetup 命令确定设备映射器条目 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm140613850781472 .indexterm}
::: para
可以使用 `dmsetup`{.command} 找出哪个设备映射器条目与多路径的设备映射。
:::
::: para
以下命令显示所有设备映射器设备及其主、副号码。副号码确定 dm
设备的名称。例如：副号码 3 与多路径的设备 `/dev/dm-3`{.filename} 对映。
:::
``` screen
# dmsetup ls
mpathd  (253:4)
mpathep1        (253:12)
mpathfp1        (253:11)
mpathb  (253:3)
mpathgp1        (253:14)
mpathhp1        (253:13)
mpatha  (253:2)
mpathh  (253:9)
mpathg  (253:8)
VolGroup00-LogVol01     (253:1)
mpathf  (253:7)
VolGroup00-LogVol00     (253:0)
mpathe  (253:6)
mpathbp1        (253:10)
mpathd  (253:5)
```
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipathd_commands}5.12. Multipathd 命令 {.title}
:::
::: para
可使用 `multipathd`{.command} 命令管理 `multipathd`{.literal}
守护进程。有关可用的 `multipathd`{.command} 命令的详情，请查看
`multipathd`{.command}(8) 手册页。
:::
::: para
某些 `multipathd`{.command} 命令包含 `format`{.literal}
选项，后接通配符。可以使用以下命令显示可用的通配符清单。
:::
``` screen
# multipathd show wildcards
```
::: para
从 Red Hat Enterprise Linux release 7.3 开始，`multipathd`{.command}
命令支持新格式命令，以便显示多路径状态以及使用 "raw"格式版本的路径。在
raw
格式中，不会显示标头，且不会添加字段以便将标头与该列对其。反之，该字段以指定的格式显示。这样就可以更好地使用输出结果编写脚本。现在可使用
`multipathd show wildcards`{.command} 命令显示格式字符串中的通配符。
:::
::: para
要按照 `multipathd`{.command} 命令显示 `multipathd`{.command}
监控的多路径设备，使用带多路径通配符的格式字符串，可以是常规格式，也可以是
raw 格式。
:::
``` screen
list|show maps|multipaths format $format
list|show maps|multipaths raw format $format
```
::: para
以下 `multipathd`{.command} 命令显示 `multipathd`{.command}
监控的多路径设备，使用带多路径通配符的格式字符串，可以是常规格式，也可以是
raw 格式。
:::
``` screen
list|show paths format $format
list|show paths raw format $format
```
::: para
以下命令显示 `multipathd show maps`{.command} 中非 raw 和 raw
格式之间的不同。注：在 `raw`{.literal}
格式中没有标头，只在每个列之间有一个空格。
:::
``` screen
# multipathd show maps format "%n %w %d %s"
name   uuid                              sysfs vend/prod/rev
mpathc 360a98000324669436c2b45666c567942 dm-0  NETAPP,LUN   
# multipathd show maps raw format "%n %w %d %s"
mpathc 360a98000324669436c2b45666c567942 dm-0 NETAPP,LUN
```
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipath_config_confirm}5.13. 使用 multipathd 互动控制台进行故障排除 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm140613838304832
.indexterm}[]{#MPIO_admin-troubleshoot.html#idm140613838303232
.indexterm}
::: para
`multipathd -k`{.command} 命令是 `multipathd`{.command}
守护程序的交互式界面。输入这一命令将进入交互式多路径控制台。执行此命令后，就可以输入
`help`{.literal} 获取可用命令列表。可输入交互式命令，或者按
`CTRL-D`{.literal} 退出。