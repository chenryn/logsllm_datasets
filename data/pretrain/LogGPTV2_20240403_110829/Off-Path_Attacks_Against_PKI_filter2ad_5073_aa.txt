title:Off-Path Attacks Against PKI
author:Tianxiang Dai and
Haya Shulman and
Michael Waidner
Poster: Off-path Attacks Against PKI
Tianxiang Dai
Fraunhofer SIT
Haya Shulman
Fraunhofer SIT
TU Darmstadt
Michael Waidner
Fraunhofer SIT
TU Darmstadt
ABSTRACT
The security of Internet-based applications fundamentally relies
on the trustworthiness of Certificate Authorities (CAs). We practi-
cally demonstrate for the first time that even a very weak attacker,
namely, an off-path attacker, can effectively subvert the trustworthi-
ness of popular commercially used CAs. We demonstrate an attack
against one popular CA which uses Domain Validation (DV) for
authenticating domain ownership. The attack exploits DNS Cache
Poisoning and tricks the CA into issuing fraudulent certificates for
domains the attacker does not legitimately own – namely certifi-
cates binding the attacker’s public key to a victim domain.
1 INTRODUCTION
Public Key Infrastructure (PKI) is a fundamental mechanism that
facilitates Internet security and bootstraps cryptographic mecha-
nisms. In a nutshell PKI provides procedures and technology for
creating and managing digital certificates. Certificates bind entities,
such as digital resources, to cryptographic keys. These keys can
then be used to establish security, e.g., authentication or encryption,
with Internet destinations.
Over the years various PKI models were proposed, designed
and standardised. The main difference between the models is in the
entities that can be certified, currently these include: clients, devices
and digital resources. A challenge common to all the different PKIs
is the authentication of the entity that is to be certified.
In this work, we focus on the most widely deployed and used PKI
in the Internet: the web PKI, which certifies ownership over domain
names. We explore the security of the authentication technique used
by popular Certificate Authorities (CAs) to establish ownership over
domain names during the certificates issuance procedure. Correctly
establishing ownership over domain names is critical for ensuring
that services are trusted and communication to them is secure.
Ultimately CAs vouch for trustworthiness of a service by issuing a
digital certificate that binds a domain name to a public key of the
service. The certificate contains, among others, the public key of the
requesting server and the requested domain. Domain name within
the certificate is a key element on which trust can be built. The
certificate is signed by the private key of the CA. The server then
uses this certificate to prove its identity to clients in the Internet. The
clients use the key in the certificate to establish a secure (encrypted
and authenticated) connection to the server.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-5693-0/18/10.
https://doi.org/10.1145/3243734.3278516
To validate that the server issuing the request owns and controls
the domain for which it requests the certificate most CAs use Do-
main Validation (DV). DV allows to prove in an automated way that
the applicant owns a given domain name. The idea behind DV is
that only the owner of the domain can receive the communication
sent to the services in that domain and can respond to them.
In this work we build on the attack presented in [1] and prepare
a real life demonstration of the attack against a popular and widely
used CA with a victim domain controlled by us. Our demo is the
first to weaponise DNS cache poisoning by off-path attackers in
practice and to demonstrate it against a critical system such as the
web PKI. Prior to our work, off-path DNS cache poisoning was
considered a theoretical threat.
Our demo shows that although PKI is supposed to provide se-
curity against the strong Man-in-the-Middle (MitM) attackers, the
widely supported DV mechanism, which underlies the security
of certificates issued within the PKI, is vulnerable to even weak
off-path attackers. We show that off-path attackers can trick the
DV process and issue fraudulent certificates for domains they do
not own.
Our attack uses DNS cache poisoning as a building block to inject
incorrect mappings into the caches of CAs. These mappings map
the target domain to attacker’s controlled IP addresses. As a result,
the CAs perform the DV process against attacker controlled hosts
and not against the real owner of the domain. We show how to
overcome all the challenges with an off-path attacker during the
certificate issuance. Our results show that Public Key Infrastructure
(PKI)1 which is meant to provide security against strong Man-in-the-
Middle (MitM) attackers, is relying on a weak building block that
can be circumvented by an off-path attacker – and in this work we
demonstrate this.
CA Compromises
There is a long history of attacks against the CAs. The compromise
of small Dutch CA DigiNotar CA in 2011 was a critical point in
history of PKI. Subsequent works documented loopholes in PKI
ecosystem, [4]. In 2016 Chinese CA Wosign ‘mistakenly’ gave out
certificates for GitHub domains due to a loophole in domain vali-
dation process. Recently a Egyptian ISP (MCS holdings) obtained
a certificate that was signed by CNNIC, that was included in root
stores. Namely any certificate issued by MCS would be accepted as
valid (even for domains MCS did not own). In 2008, a bug in Debian
OpenSSL caused thousands of certificates to be issued for keys with
only 15-17 bits of entropy, [5].
1PKI is a set of roles, policies, procedures and entities for creating and managing
certificates and public-key encryption.
Poster PresentationCCS’18, October 15-19, 2018, Toronto, ON, Canada2213DNS Cache Poisoning
DNS cache poisoning was first demonstrated in 2008 [10] against
DNS resolvers that used fixed or incrementing source ports. Subse-
quently, [RFC5452] provided recommendations for patches. Never-
theless, shortly after attacks were found allowing to circumvent the
[RFC5452] patches. Initially, [6, 8] showed that despite randomisa-
tion the source ports can be often predicted using side channels,
such as timing. Followup works applied fragmentation for bypass-
ing the recommendations in [RFC5452], [7, 9, 11–13].
DNSSEC [RFC4033-RFC4035] would prevent the cache poison-
ing attacks, however, recently vulnerabilities and misconfigurations
were found in DNSSEC keys generation and management proce-
dures exposing a large fraction of signed domains (more than 35%)
to attacks, [2, 3, 14].
2 WEAPONISING CACHE POISONING TO
SUBVERT DV
In this section we demonstrate an off-path attack that allows an
attacker to impersonate a victim domain to a CA and cause the CA
to issue a spoofed (fraudulent) certificate binding the public key of
the attacker to a victim domain. Our demonstration is based on the
attack presented in [1], and describes the technical and practical
challenges.
The attack leverages off-path DNS cache poisoning against a
DNS resolver of the CA. During the attack we inject a spoofed DNS
record mapping the victim domain to attacker controlled hosts, so
that the DV checks, that the CA runs, are performed against the
attacker’s hosts.
For our demo we set up a victim domain at victim-org.info.
We will inject spoofed records redirecting a nameserver and email
server in this domain to attacker controlled IP addresses. The attack
is initiated with a DNS request, which the CA should send to the
victim. The attacker then injects a DNS response with malicious
records from a spoofed IP address (impersonating a victim name-
server). If the CA’s cache does not have the records of the victim
domain in its DNS cache - injecting the DNS records is simple.
Often, the victim’s records would be present in the cache. In this
case the cached records need to be overwritten with new values
supplied by the attacker. We present demonstration of both cases
(when the target records are cached and when they are not).
2.1 DNS Request
To prevent attacks against DNS resolvers the networks are config-
ured to block external requests from the Internet and to serve only
the requests that are originated by the internal clients or services.
Since the off-path attacker is not located on the same network with
the attacked CA, we need to use alternative techniques to initiate
communication with the CA’s DNS resolver.
We trigger DNS requests by utilising the CSR uploading form.
This causes the CA to initiate a DV process, which triggers DNS
requests for the domain that was provided in the CSR - this is the
target domain.
The attack is initiated with a DNS request. To succeed in the
attack, the attacker has to craft a correct DNS response before the
authentic response from the real nameserver arrives. The attack