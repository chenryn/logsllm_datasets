$ MANPATH=/usr/apps/man:/usr/local；/emxapnort MANPATH
5. LPDEST或P R I N T E R
保存缺省打印机名，用于打印作业时指定打印机名。
$ LPDEST=hp3si-systems
14.3.6 set命令
在$ H O M E . p r o f i l e文件中设置环境变量时，还有另一种方法导出这些变量。使用 s e t命令- a
选项，即set -a指明所有变量直接被导出。不要在 / e t c / p r o f i l e中使用这种方法，最好只在自己
的$ H O M E . p r o f i l e文件中使用。
14.3.7 将变量导出到子进程
s h e l l新用户碰到的问题之一是定义的变量如何导出到子进程。前面已经讨论过环境变量
的工作方式，现在用脚本实现它，并在脚本中调用另一脚本（这实际上创建了一个子进程）。
以下是两个脚本列表f a t h e r和c h i l d。
f a t h e r脚本设置变量f i l m，取值为A Few Good Men，并将变量信息返回屏幕，然后调用脚
本c h i l d，这段脚本显示第一个脚本里的变量f i l m，然后改变其值为Die Hard，再将其显示在屏
幕上，最后控制返回f a t h e r脚本，再次显示这个变量。
加入java编程群：524621833
141
第14章 环境和shell变量
下载
看看脚本显示结果。
因为在f a t h e r中并未导出变量f i l m，因此c h i l d脚本不能将f i l m变量返回。
如果在f a t h e r脚本中加入e x p o r t命令，以便c h i l d脚本知道f i l m变量的取值，这就会工作：
因为在脚本中加入了e x p o r t命令，因此可以在任意多的脚本中使用变量 f i l m，它们均继承
了f i l m的所有权。
不可以将变量从子进程导出到文进程， 然面通过重定向就可做到这一点
14.4 位置变量参数
本章开始提到有4种变量，本地、环境，还有两种变量被认为是特殊变量，因为它们是只
读的。这两种变量即为位置变量和特定变量参数。先来看一看位置变量。
如果要向一个s h e l l脚本传递信息，可以使用位置参数完成此功能。参数相关数目传入脚
本，此数目可以任意多，但只有前 9个可以被访问，使用s h i f t命令可以改变这个限制。本书后
面将讲到s h i f t命令。参数从第一个开始，在第 9个结束；每个访问参数前要加 $符号。第一个
参数为0，表示预留保存实际脚本名字。无论脚本是否有参数，此值均可用。
如果向脚本传送Did You See Th e Full Mo o n信息，下面的表格讲解了如何访问每一个参
数。
$ 0 $ 1 $ 2 $ 3 $ 4 $ 5 $ 6 $ 7 $ 8 $ 9
脚本名字 Did Yo u S e e T h e F u l l M o o n
加入java编程群：524621833
142
第三部分 登录环境
下载
14.4.1 在脚本中使用位置参数
在下面脚本中使用上面的例子。
这里只传递6个参数，7、8、9参数为空，正像预计的那样。注意，第一个参数表示脚本
名，当从脚本中处置错误信息时，此参数有很大作用。
下面的例子返回脚本名称。
注意$ 0返回当前目录路径，如果只返回脚本名，在 b a s e n a m e命令下参数设为$ 0，刚好得
到脚本名字。
14.4.2 向系统命令传递参数
可以在脚本中向系统命令传递参数。下面的例子中，在 f i n d命令里，使用 $ 1参数指定查
找文件名。
加入java编程群：524621833
143
第14章 环境和shell变量
下载
另一个例子中，以$ 1向g r e p传递一个用户i d号，g r e p使用此i d号在p a s s w d中查找用户全
名。
14.4.3 特定变量参数
既然已经知道了如何访问和使用s h e l l脚本中的参数，多知道一点相关信息也是很有用的，
有必要知道脚本运行时的一些相关控制信息，这就是特定变量的由来。共有 7个特定变量，见
表1 4 - 2。
表14-2 特定s h e l l变量
$ # 传递到脚本的参数个数
$ * 以一个单字符串显示所有向脚本传递的参数。与位置变量不同，此选项参数可超过 9个
$ $ 脚本运行的当前进程I D号
$ ! 后台运行的最后一个进程的进程I D号
$ @ 与$ #相同，但是使用时加引号，并在引号中返回每个参数
$ - 显示s h e l l使用的当前选项，与s e t命令功能相同
$ ? 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。
现在来修改脚本p a r a m并替换各种特定变量，与以前的例子不同，用不同的传递文本重新
运行脚本。
加入java编程群：524621833
144
第三部分 登录环境
下载
特定变量的输出使用户获知更多的脚本相关信息。可以检查传递了多少参数，进程相应
的I D号，以免我们想杀掉此进程。
14.4.4 最后的退出状态
注意，$ ?返回0。可以在任何命令或脚本中返回此变量以获得返回信息。基于此信息，可
以在脚本中做更进一步的研究，返回0意味着成功，1为出现错误。
下面的例子拷贝文件到/ t m p，并使用$ ?检查结果。
现在尝试将一个文件拷入一个不存在的目录：
使用$ ?检验返回状态，可知脚本有错误，但同时发现 c p：c a n n o t . . .，因此检验最后退出状
态已没有必要。在脚本中可以用系统命令处理输出格式，要求命令输出不显示在屏幕上。为
此可以将输出重定向到/ d e v / n u l l，即系统b i n中。现在怎样才能知道脚本正确与否？好，这时
可以用最后退出状态命令了。请看上一个例子的此形式的实际操作结果。
通过将包含错误信息的输出重定向到系统 b i n中，不能获知最后命令返回状态，但是通过
使用$ !，（其返回值为1）可知脚本失败。
检验脚本退出状态时，最好将返回值设置为一个有意义的名字，这样可以增加脚本的可
读性。
加入java编程群：524621833
145
第14章 环境和shell变量
下载
14.5 小结
变量可以使s h e l l编程更容易。它能够保存输入值并提高效率。 s h e l l变量几乎可以包含任
何值。特定变量增强了脚本的功能并提供了传递到脚本的参数的更多信息。
加入java编程群：524621833
下载
第15章 引 号
上一章介绍了变量和替换操作，在脚本中执行变量替换时最容易犯的一个错误就是由于
引用错误。在命令行中引用是很重要的。
本章内容有：
• 引用的必要性。
• 双引、单引和反引号。
• 使用反斜线实现屏蔽。
15.1 引用必要性
这里只讲述引用的基本规则。因为使用引用的例子很多。本书接下来的两个部分将一一
予以讲述。脚本中执行行操作时， s h e l l将对脚本设置予以解释。要采取一种方法防止 s h e l l这
样做，即使用引用号，包括各式引用或使用反斜线。
一些用户在对文本字符串进行反馈操作时觉得使用引用很麻烦。有时不注意，只引用了
一半，这时问题出现了。最好在反馈文本字符串时使用双引号。下面是各种引用的例子。
文本返回了，但由于未使用双引号，*被s h e l l误解，s h e l l认为用户要做目录列表。用双引
号得结果如下：
这样就不会有误解产生。表1 5 - 1列出各种引用类型。
表15-1 shell引用类型
" " 双引号 ｀ 反引号
' ' 单引号 \ 反斜线
15.2 双引号
使用双引号可引用除字符$、`、\外的任意字符或字符串。这些特殊字符分别为美元符号，
反引号和反斜线，对s h e l l来说，它们有特殊意义。如果使用双引号将字符串赋给变量并反馈
它，实际上与直接反馈变量并无差别。
加入java编程群：524621833
147
第15章 引 号
下载
现在假定要设置系统时间输出到变量m y d a t e。
因为s h e l l将" "符号里的字符串赋予变量m y d a t e，d a t e已没有特定意义，故此变量只保存单
词d a t e。
如果要查询包含空格的字符串，经常会用到双引号。以下使用g r e p抽取名字“Davey Wi r e”，
因为没有加双引号，g r e p将“D a v e y”认作字符串，而把“Wi r e”当作文件名。
要解决这个问题，可将字符串加双引号。这样 s h e l l会忽略空格，当使用字符时，应总是
使用双引号，无论它是单个字符串或是多个单词。
在一个反馈的文本行里可以使用双引号将变量引起来。下面的例子中， s h e l l反馈文本行，
遇到符号$，知道这是一个变量，然后用变量值b o y替换变量$ B O Y。
15.3 单引号
单引号与双引号类似，不同的是 s h e l l会忽略任何引用值。换句话说，如果屏蔽了其特殊
含义，会将引号里的所有字符，包括引号都作为一个字符串。使用上一个例子，结果如下：
15.4 反引号
反引号用于设置系统命令的输出到变量。 s h e l l将反引号中的内容作为一个系统命令，并
执行其内容。使用这种方法可以替换输出为一个变量。反引号可以与引号结合使用。下面将
举例说明。
下面的例子中，s h e l l试图替代单词h e l l o为系统命令并执行它，因为h e l l o脚本或命令不存
在，返回错误信息。
现在用d a t e命令再试一次。
这次命令有效，s h e l l正确执行。
加入java编程群：524621833
148
第三部分 登录环境
下载
下面将命令输出设置为变量m y d a t e，时间格式如下：
设置到m y d a t e，并显示其值：
当然也可以将d a t e命令输出至m y d a t e：
另一个例子中，将反引号嵌在双引号里：
打印当前系统上用户数目：
上面的例子中，打印字符串后，s h e l l遇到反引号，将其看作一条命令执行它。
15.5 反斜线
如果下一个字符有特殊含义，反斜线防止 s h e l l误解其含义，即屏蔽其特殊含义。下述字
符包含有特殊意义：& * + ^ $ ` " | ?。
假定e c h o命令加*，意即以串行顺序打印当前整个目录列表，而不是一个星号 *。
为屏蔽星号特定含义，可使用反斜线。
$ echo \*
*
上述语句同样可用于$ $命令，s h e l l解释其为现在进程I D号，使用反斜线屏蔽此意，仅打
印$ $。
在打印字符串时要加入八进制字符（ A S C I I相应字符），必须在前面加反斜线，否则s h e l l
将其当作普通数字处理。
加入java编程群：524621833
149
第15章 引 号
下载
如果是L I N U X，则……
记住使用- e选项来显示控制字符。
使用命令e x p r时，用*表示乘法会出现错误，在*前加上反斜线才会正确。
在e c h o命令中加入元字符，必须用反斜线起屏蔽作用。下面的例子要显示价格 $ 1 9 . 9 9。其
中$屏蔽与不屏蔽将产生不同的结果。
使用反斜线屏蔽$，可得更好的结果。
15.6 小结
在引用时会遇到一些问题且经常出错。我在使用引用时遵循两条规则：
1) 反馈字符串用双引号；但不要引用反馈本身。
2) 如果使用引用得到的结果不理想，再试另一种，毕竟只有三种引用方式，可以充分尝
试。
加入java编程群：524621833
下载
第四部分 基础s h e l l编程
第16章 shell脚本介绍
一个s h e l l脚本可以包含一个或多个命令。当然可以不必只为了两个命令就编写一个 s h e l l
脚本，一切由用户自己决定。
本章内容有：