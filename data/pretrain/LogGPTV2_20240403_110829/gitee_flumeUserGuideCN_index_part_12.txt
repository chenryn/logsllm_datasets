a1.sinks.k1.hive.table = weblogs
a1.sinks.k1.hive.partition = asia,%{country},%y-%m-%d-%H-%M
a1.sinks.k1.useLocalTimeStamp = false
a1.sinks.k1.round = true
a1.sinks.k1.roundValue = 10
a1.sinks.k1.roundUnit = minute
a1.sinks.k1.serializer = DELIMITED
a1.sinks.k1.serializer.delimiter = "\t"
a1.sinks.k1.serializer.serdeSeparator = '\t'
a1.sinks.k1.serializer.fieldnames =id,,msg
```
以上配置会将时间戳向下舍入到最后10分钟。
例如，将时间戳标头设置为2019年4月1日下午15:21:34且"country"标头设置为"india"的Event将评估为分区（continent
=\'asia\'，country =\'india\'，time
=\'2019-04-01-15-20\'。序列化程序配置为接收包含三个字段的制表符分隔的输入并跳过第二个字段。
#### Logger Sink
使用INFO级别把Event内容输出到日志中，一般用来测试、调试使用。这个 Sink
是唯一一个不需要额外配置就能把 Event 的原始内容输出的Sink，参照
[输出原始数据到日志](#输出原始数据到日志) 。
::: hint
::: title
Hint
:::
在 [输出原始数据到日志](#输出原始数据到日志)
一节中说过，通常在Flume的运行日志里面输出数据流中的原始的数据内容是非常不可取的，所以
Flume 的组件默认都不会这么做。但是总有特殊的情况想要把 Event
内容打印出来，就可以借助这个Logger Sink了。
:::
必需的参数已用 **粗体** 标明。
  属性            默认值   解释
  --------------- -------- -------------------------------------------------------
  **channel**     \--      与 Sink 绑定的 channel
  **type**        \--      组件类型，这个是： `logger`
  maxBytesToLog   16       Event body 输出到日志的最大字节数，超出的部分会被丢弃
配置范例：
``` properties
a1.channels = c1
a1.sinks = k1
a1.sinks.k1.type = logger
a1.sinks.k1.channel = c1
```
#### Avro Sink
这个Sink可以作为 Flume 分层收集特性的下半部分。发送到此Sink的 Event
将转换为Avro Event发送到指定的主机/端口上。Event 从 channel
中批量获取，数量根据配置的 *batch-size* 而定。 必需的参数已用 **粗体**
标明。
+----------------------+----------------------+----------------------+
| 属性                 | 默认值               | 解释                 |
+======================+======================+======================+
| **channel**          | \--                  | 与 Sink 绑定的       |
|                      |                      | channel              |
+----------------------+----------------------+----------------------+
| **type**             | \--                  | 组件类型，这个是：   |
|                      |                      | `avro`.              |
+----------------------+----------------------+----------------------+
| **hostname**         | \--                  | 监听的服务           |
|                      |                      | 器名（hostname）或者 |
|                      |                      | IP                   |
+----------------------+----------------------+----------------------+
| **port**             | \--                  | 监听的端口           |
+----------------------+----------------------+----------------------+
| batch-size           | 100                  | 每次批量发送的 Event |
|                      |                      | 数                   |
+----------------------+----------------------+----------------------+
| connect-timeout      | 20000                | 第一                 |
|                      |                      | 次连接请求（握手）的 |
|                      |                      | 超时时间，单位：毫秒 |
+----------------------+----------------------+----------------------+
| request-timeout      | 20000                | 请求                 |
|                      |                      | 超时时间，单位：毫秒 |
+----------------------+----------------------+----------------------+
| reset                | none                 | 重置连接到下一跳     |
| -connection-interval |                      | 之前的时间量（秒）。 |
|                      |                      | 这将强制 Avro Sink   |
|                      |                      | 重新连接到下一跳。   |
|                      |                      | 这将允许Sink在添     |
|                      |                      | 加了新的主机时连接到 |
|                      |                      | 硬件负载均衡器后面的 |
|                      |                      | 主机，而无需重新启动 |
|                      |                      | Agent。              |
+----------------------+----------------------+----------------------+
| compression-type     | none                 | 压缩类型。可选值：   |
|                      |                      | `none` 、 `deflate`  |
|                      |                      | 。压缩               |
|                      |                      | 类型必须与上一级Avro |
|                      |                      | Source 配置的一致    |
+----------------------+----------------------+----------------------+
| compression-level    | 6                    | Event的压缩级别      |
|                      |                      | 0：不                |
|                      |                      | 压缩，1-9:进行压缩， |
|                      |                      | 数字越大，压缩率越高 |
+----------------------+----------------------+----------------------+
| ssl                  | false                | 设置为 `true`        |
|                      |                      | 表示开启SSL 下面的   |
|                      |                      | *truststore* 、      |
|                      |                      | *                    |
|                      |                      | truststore-password* |
|                      |                      | 、 *truststore-type* |
|                      |                      | 就是开启SSL后使      |
|                      |                      | 用的参数，并且可以指 |
|                      |                      | 定是否信任所有证书（ |
|                      |                      | *trust-all-certs* ） |
+----------------------+----------------------+----------------------+
| trust-all-certs      | false                | 如果设置为true，     |
|                      |                      | 不会                 |
|                      |                      | 检查远程服务器（Avro |
|                      |                      | Source）的SSL服      |
|                      |                      | 务器证书。不要在生产 |
|                      |                      | 环境开启这个配置，因 |
|                      |                      | 为它使攻击者更容易执 |
|                      |                      | 行中间人攻击并在加密 |
|                      |                      | 的连接上进行"监听"。 |
+----------------------+----------------------+----------------------+
| truststore           | \--                  | 自定义 Java          |
|                      |                      | tr                   |
|                      |                      | uststore文件的路径。 |
|                      |                      | Flume                |
|                      |                      | 使用此文件中         |
|                      |                      | 的证书颁发机构信息来 |
|                      |                      | 确定是否应该信任远程 |
|                      |                      | Avro Source 的 SSL   |
|                      |                      | 身份验证凭据。       |
|                      |                      | 如果未指定，将使     |
|                      |                      | 用全局的keystore配置 |
|                      |                      | ，如果全局的keystore |
|                      |                      | 也未指定，将使用缺省 |
|                      |                      | Java JSSE            |
|                      |                      | 证书                 |
|                      |                      | 颁发机构文件（通常为 |
|                      |                      | Oracle JRE           |
|                      |                      | 中的"jssecac         |
|                      |                      | erts"或"cacerts"）。 |
+----------------------+----------------------+----------------------+
| truststore-password  | \--                  | 上面                 |
|                      |                      | 配置的truststore的密 |
|                      |                      | 码，如果未配置，将使 |
|                      |                      | 用全局的truststore配 |
|                      |                      | 置（如果配置了的话） |
+----------------------+----------------------+----------------------+
| truststore-type      | JKS                  | Java                 |
|                      |                      | trusts               |
|                      |                      | tore的类型。可以配成 |
|                      |                      | `JKS` 或者其他支持的 |
|                      |                      | Java                 |
|                      |                      | trusts               |
|                      |                      | tore类型，如果未配置 |
|                      |                      | ，将使用全局的SSL配  |
|                      |                      | 置（如果配置了的话） |
+----------------------+----------------------+----------------------+
| exclude-protocols    | SSLv3                | 要排除的以空格分隔的 |
|                      |                      | SSL/TLS 协议列表。   |
|                      |                      | SSLv3                |
|                      |                      | 协议不管是           |
|                      |                      | 否配置都会被排除掉。 |
+----------------------+----------------------+----------------------+
| maxIoWorkers         | 2 \*                 | > I/O工作线程        |
|                      | 机器上               | 的最大数量。这个是在 |
|                      | 可用的处理器核心数量 | > NettyAvroRpcClient |
|                      |                      | > 的                 |
|                      |                      | > NioClient          |
|                      |                      | SocketChannelFactory |
|                      |                      | > 上配置的。         |
+----------------------+----------------------+----------------------+
配置范例：
``` properties
a1.channels = c1
a1.sinks = k1
a1.sinks.k1.type = avro
a1.sinks.k1.channel = c1
a1.sinks.k1.hostname = 10.10.10.10
a1.sinks.k1.port = 4545
```
#### Thrift Sink
这个Sink可以作为 Flume 分层收集特性的下半部分。发送到此Sink的 Event
将转换为 Thrift Event 发送到指定的主机/端口上。Event 从 channel
中获取批量获取，数量根据配置的 *batch-size* 而定。 可以通过启用 kerberos
身份验证将 Thrift Sink 以安全模式启动。如果想以安全模式与 Thrift Source
通信，那么 Thrift Sink 也必须以安全模式运行。 *client-principal* 和
*client-keytab* 是 Thrift Sink 用于向 kerberos KDC
进行身份验证的配置参数。 *server-principal*
表示此Sink将要以安全模式连接的 Thrift Source 的主体，必需的参数已用
**粗体** 标明。
  属性                        默认值   解释
  --------------------------- -------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **channel**                 \--      与 Sink 绑定的 channel
  **type**                    \--      组件类型，这个是： `thrift`.
  **hostname**                \--      远程 Thrift 服务的主机名或 IP
  **port**                    \--      远程 Thrift 的端口
  batch-size                  100      一起批量发送 Event 数量
  connect-timeout             20000    第一次连接请求（握手）的超时时间，单位：毫秒
  request-timeout             20000    请求超时时间，单位：毫秒
  reset-connection-interval   none     重置连接到下一跳之前的时间量（秒）。 这将强制 Thrift Sink 重新连接到下一跳。 允许Sink在添加了新的主机时连接到硬件负载均衡器后面的主机，而无需重新启动 Agent。
  ssl                         false    设置为 true 表示Sink开启 SSL。下面的 *truststore* 、 *truststore-password* 、 *truststore-type* 就是开启 SSL 后使用的参数
  truststore                  \--      自定义 Java truststore文件的路径。 Flume 使用此文件中的证书颁发机构信息来确定是否应该信任远程Thrift Source的SSL身份验证凭据。 如果未指定，将使用全局的keystore配置， 如果全局的keystore也未指定，将使用缺省 Java JSSE 证书颁发机构文件（通常为 Oracle JRE 中的"jssecacerts"或"cacerts"）。
  truststore-password         \--      上面配置的truststore的密码，如果未配置，将使用全局的truststore配置（如果配置了的话）
  truststore-type             JKS      Java truststore的类型。可以配成 `JKS` 或者其他支持的 Java truststore类型，如果未配置，将使用全局的SSL配置（如果配置了的话）
  exclude-protocols           SSLv3    要排除的以空格分隔的 SSL/TLS 协议列表
  kerberos                    false    设置为 true 开启 kerberos 身份验证。在 kerberos 模式下，需要 *client-principal* 、 *client-keytab* 和 *server-principal* 才能成功进行身份验证并与启用了 kerberos 的 Thrift Source 进行通信。
  client-principal            ----     Thrift Sink 用来向 kerberos KDC 进行身份验证的 kerberos 主体。
  client-keytab               ----     Thrift Sink 与 *client-principal* 结合使用的 keytab 文件路径，用于对 kerberos KDC 进行身份验证。
  server-principal            \--      Thrift Sink 将要连接到的 Thrift Source 的 kerberos 主体。
::: hint
::: title
Hint
:::
官方英文文档 *connection-reset-interval* 这个参数是错误的，在源码里面是
*reset-connection-interval* ，本文档已经纠正。
:::
配置范例：
``` properties
a1.channels = c1
a1.sinks = k1
a1.sinks.k1.type = thrift
a1.sinks.k1.channel = c1
a1.sinks.k1.hostname = 10.10.10.10
a1.sinks.k1.port = 4545
```
#### IRC Sink
IRC sink 从连接的 channel 获取消息然后将这些消息中继到配置的 IRC
目标上。 必需的参数已用 **粗体** 标明。
  属性            默认值   解释
  --------------- -------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------
  **channel**     \--      与 Sink 绑定的 channel
  **type**        \--      组件类型，这个是： `irc`
  **hostname**    \--      要连接的服务器名（hostname ）或 IP
  port            6667     要连接的远程服务器端口
  **nick**        \--      昵称
  user            \--      用户名
  password        \--      密码
  **chan** name   \--      频道 真实姓名
  splitlines      false    是否分割消息后进行发送
  splitchars      \\n      行分隔符如果上面 *splitlines* 设置为 `true` ，会使用这个分隔符把消息体先进行分割再逐个发送，如果你要在配置文件中配置默认值，那么你需要一个转义符， 像这样：" \\n"