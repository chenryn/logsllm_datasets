fraction of a second per hospital. Table 3 reports the running
times (averaged over 200 hospitals) for each attack over a
diﬀerent set of attributes; each with a diﬀerent number of
values.
Notice that attacking the length of stay column requires
considerably more time than the rest. This is due to the fact
that it has a large number of values (365) which especially
aﬀects the running time of (cid:96)2-optimization and cumulative
attacks which rely on optimization. Currently, our attacks
are implemented in Matlab which is very slow compared to
other languages like C so we believe that a C implementa-
tion would decrease the running time by several orders of
magnitude.
Atts. (# of values)
Freq. An.
Sex (2)
Mortality Risk (4)
Admission Source (5)
Major Diagnostic Category (25)
Age (125)
Length of stay (365)
0.11ms
0.12ms
0.12ms
0.19ms
0.63ms
1.73ms
(cid:96)2-opt.
0.11ms
0.12ms
0.13ms
0.20ms
3.03ms
68.7ms
Cumul.
0.31ms
0.49ms
0.60ms
3.5ms
311.6ms
35, 910ms
Table 3: Time (in milliseconds) of attacks per hospital.
9. EXPERIMENTAL RESULTS
For each hospital and each column in the EDB, we com-
pute the accuracy of our attack as the number of encrypted
cells for which the recovered plaintext matches the ground
truth, divided by the total number of column cells.
We present the results of these experiments in Figures 3,
2 and 5. Each plot shows the empirical Complementary
Cumulative Distribution Function (CCDF) of our record-
level accuracy across all the hospitals in our target data. For
example, a point at location (x, y) indicates that we correctly
recovered at least x fraction of the records for y fraction of
the hospitals in the target data. The results show that our
attacks recover a substantial fraction of the encrypted DBs
and perform signiﬁcantly better than random guessing.
9.1 Attacks on DTE-Encrypted Columns
Figure 3 shows the results of our (cid:96)2-optimization attack
against DTE-encrypted columns using the 2004 HCUP/NIS
dataset as auxiliary. Figure 2 shows results of the same
attack using Texas PUDF dataset as auxiliary.
Using the 2004 HCUP/NIS as auxiliary data (Figure 3),
(cid:96)2-optimization recovers cells for a signiﬁcant number of pa-
tients, even for attributes with a large number of distinct
values such as Age and Length of Stay. It recovered Mor-
tality Risk and whether the patient died for 100% of the
patients for 99% and 100% of the hospitals respectively. It
also recovered the Disease Severity for 100% of the patients
for 51% of the hospitals. The attack recovered Race for at
least 60% of the patients for at least 69.5% of the hospitals;
Major Diagnostic Category for at least 40% of the patients
for 27.5% of the hospitals; Primary Payer for at least 90%
of the patients for 37.5% of the hospitals; Admission Source
for at least 90% of the patients for 38% of the hospitals;
Admission Type for at least 60% of the patients for 65% of
the hospitals.
Perhaps surprisingly, (cid:96)2-optimization also recovered a rel-
atively small but signiﬁcant fraction of cells for the Age at-
tribute. Recovering DTE-encrypted Ages is very diﬃcult
because Age takes on a large range of values, and multiple
values have very similar frequencies. Nonetheless, it recov-
ered Age for at least 10% of patients for 84.5% of the hos-
pitals. The attack also works surprisingly well for Length of
Stay despite its large range of 365 possible values: speciﬁ-
cally, it recovers this attribute for at least 83% of the patients
for 50% of the hospitals. The reason for this unexpected ac-
curacy is that most patients stay in the hospital for only a
few days. Therefore, by decrypting the plaintexts for a few
very common lengths of stay (e.g., 1, 2, 3, . . . ), we recover a
large fraction of the database.
Using the Texas PUDF data as auxiliary (Figure 2), the
attack performs similarly well. There is a small decrease
in accuracy for Race and Major Diagnostic Category. We
believe this is due to regional diﬀerences in demographics
across the U.S.
Figure 2: Results of (cid:96)2-optimization on DTE-encrypted columns
on 200 largest hospitals with 2009 HCUP/NIS as target data and
Texas PUDF as auxiliary data
9.2 Attacks on OPE-Encrypted Columns
The sorting attack succeeds only if a column has density 1,
meaning that all possible values of an attribute are present
in both the target and the auxiliary data. If this condition
holds, the sorting attack can recover all the OPE-encrypted
cells in a column; otherwise it fails. Figure 4 shows the
density for six selected attributes for the large and small 200
hospitals, respectively, of the 2009 HCUP/NIS dataset. For
large hospitals, the density is 1 for 100% of the hospitals for
Disease Severity and Mortality Risk and 90% of the hospitals
for Admission Month. For small hospitals, the density is 1
for 95% of the hospitals for Disease Severity, Mortality Risk,
and Admission Month.
It follows that the sorting attack
would recover 100% of the cells for these columns for these
hospitals.
To evaluate the cumulative attack, we executed it over
both large and small hospitals since the latter tend to have
lower density on many attributes. Figure 5 shows the re-
sults. For large hospitals (Figure 5a) the attack performed
0.00.20.40.60.81.0Cumulative fraction of records recovered0.00.20.40.60.81.0Fraction of hospitals (CCDF)SexDisease SeverityMortality RiskRaceMajor Diagnostic Category653Figure 3: Results of (cid:96)2-optimization on DTE-encrypted columns on 200 largest hospitals with 2009 HCUP/NIS as target data and 2004
HCUP/NIS as auxiliary data
(a) First set of attributes
(b) Second set of attributes
Figure 4: Density – Ratio of the number of values of an attribute present in a column to the total number of values of the attribute
(a) Density for large hospitals
(b) Density for small hospitals
(a) Results for the 200 largest hospitals with 2009
HCUP/NIS as target data and 2004 HCUP/NIS
as auxiliary data.
(b) Results for the 200 small hospitals with 2009
HCUP/NIS as target data and 2004 HCUP/NIS
as auxiliary data.
Figure 5: Results of Cumulative attack on OPE-encrypted columns
extremely well, even for low-density attributes. It recovered
at least 80% of the patient records for 95% of the hospitals
for all the attributes shown in Figure 5a. The attack recov-
ered Admission Month, Disease Severity, and Mortality Risk
for 100% of the patients for 100% of the hospitals; Length
of Stay for at least 99.77% of the patients for 100% of the
hospitals; Age for at least 99% of the patients for 82.5% of
the hospitals ; and Admission Type for 100% of the patients
for 78.5% of the hospitals.
For small hospitals (Figure 5b), despite the attributes’
low densities, the attack still performed surprisingly well. It
recovered Disease Severity and Mortality Risk for 100% of
the patients for 100% of the hospitals; Admission Month for
100% of the patients for 99.5% of the hospitals; Length of
Stay for at least 95% of the patients for 98% of the hospitals;
Age for at least 95% of the patients for 78% of the hospitals;
and Admission Type for 100% of the patients for 69.5% of
the hospitals.
0.00.20.40.60.81.0Cumulative fraction of records recovered0.00.20.40.60.81.0Fraction of hospitals (CCDF)SexDisease SeverityMortality RiskRaceMajor Diagnostic CategoryPatient died during hospitalization0.00.20.40.60.81.0Cumulative fraction of records recovered0.00.20.40.60.81.0Fraction of hospitals (CCDF)AgeLength of StayPrimary PayerAdmission MonthAdmission TypeAdmission Source0.00.20.40.60.81.0Density0.00.20.40.60.81.0Fraction of hospitals (CCDF)Disease SeverityMortality RiskAgeLength of StayAdmission MonthAdmission Type0.00.20.40.60.81.0Density0.00.20.40.60.81.0Fraction of hospitals (CCDF)Disease SeverityMortality RiskAgeLength of StayAdmission MonthAdmission Type0.00.20.40.60.81.0Cumulative fraction of records recovered0.00.20.40.60.81.0Fraction of hospitals (CCDF)Disease SeverityMortality RiskAgeLength of StayAdmission MonthAdmission Type0.00.20.40.60.81.0Cumulative fraction of records recovered0.00.20.40.60.81.0Fraction of hospitals (CCDF)Disease SeverityMortality RiskAgeLength of StayAdmission MonthAdmission Type65410. CONCLUSION
We study the concrete security of PPE-based encrypted
database systems such as CryptDB and Cipherbase in a real-
world scenario. We consider four diﬀerent attacks and ex-
perimentally demonstrate that they can decrypt a large frac-
tion of cells from DTE- and OPE-encrypted columns. We
speciﬁcally show this for the case of EMR databases but we
believe that the attacks would be as successful on a wide
variety of databases as long as appropriate auxiliary infor-
mation is available.
Acknowledgements
The authors thank Josh Benaloh, Melissa Chase, and Ta-
dayoshi Kohno for helpful conversations and encouragement
during the early stages of this work.
11. REFERENCES
[1] Fifth Annual Benchmark Study on Privacy and Security of
Healthcare Data.
http://www.ponemon.org/blog/criminal-attacks-the-
new-leading-cause-of-data-breach-in-healthcare.
Accessed: 2015-05-15.
[2] Google Encrytped Big Query.
https://github.com/google/encrypted-bigquery-client.
[3] HCUP Databases. Healthcare Cost and Utilization Project
(HCUP). 2008-2009. Agency for Healthcare Research and
Quality, Rockville, MD.
www.hcup-us.ahrq.gov/databases.jsp.
[4] Hospital Discharge Data Public Use Data File. http://
www.dshs.state.tx.us/THCIC/Hospitals/Download.shtm.
[5] Hospital Inpatient Discharges (SPARCS De-Identiﬁed):
2012. https://health.data.ny.gov/Health/Hospital-
Inpatient-Discharges-SPARCS-De-Identified/u4ud-w55t.
[6] OpenEMR. http://www.open-emr.org/. Accessed:
2015-05-15.
[7] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu. Order
preserving encryption for numeric data. In SIGMOD, pages
563–574, 2004.
[18] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart.
Leakage-abuse attacks against searchable encryption. In To
appear at the ACM Conference on Communications and
Computer Security (CCS ’15). ACM, 2015.
[19] N. Chenette, A. OˇSNeill, G. Kollios, and R. Canetti.
Modular order-preserving encryption, revisited. 2015.
[20] R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky.
Searchable symmetric encryption: Improved deﬁnitions and
eﬃcient constructions. In CCS, pages 79–88, 2006.
[21] C. Dwork, F. McSherry, K. Nissim, and A. Smith.
Calibrating noise to sensitivity in private data analysis. In
TCC, pages 265–284. 2006.
[22] Y. Elovici, R. Waisenberg, E. Shmueli, and E. Gudes. A
structure preserving database encryption scheme. In Secure
Data Management, pages 28–40. 2004.
[23] C. Gentry. Fully homomorphic encryption using ideal
lattices. In STOC, pages 169–169, 2009.
[24] O. Goldreich and R. Ostrovsky. Software protection and
simulation on oblivious RAMs. JACM, 43(3):431–473, 1996.
[25] M. Islam, M. Kuzu, and M. Kantarcioglu. Access pattern
disclosure on searchable encryption: ramiﬁcation, attack
and mitigation. In NDSS, 2012.
[26] H. Kadhem, T. Amagasa, and H. Kitagawa. Mv-opes:
Multivalued-order preserving encryption scheme: A novel
scheme for encrypting integer value to many diﬀerent
values. IEICE TRANSACTIONS on Information and
Systems, 93(9):2520–2533, 2010.
[27] H. Kadhem, T. Amagasa, and H. Kitagawa. A secure and
eﬃcient order preserving encryption scheme for relational
databases. In KMIS, pages 25–35, 2010.
[28] J. Katz and Y. Lindell. Introduction to Modern
Cryptography. Chapman & Hall/CRC, 2008.
[29] F. Kerschbaum and A. Schroepfer. Optimal
average-complexity ideal-security order-preserving
encryption. In CCS, pages 275–286, 2014.
[30] H. W. Kuhn. The Hungarian method for the assignment
problem. Naval Research Logistics Quarterly, 2, 1955.
[31] S. Lee, T. Park, D. Lee, T. Nam, and S. Kim. Chaotic
order preserving encryption for eﬃcient and secure queries
on databases. IEICE transactions on information and
systems, 92(11):2207–2217, 2009.
[8] I. H. Akin and B. Sunar. On the diﬃculty of securing web
[32] A. Menezes, P. van Oorschot, and S. Vanstone. Handbook
applications using CryptDB. In PriSec, 2014.
[9] I. A. Al-Kadit. Origins of cryptology: The Arab
contributions. Cryptologia, 16(2):97–126, 1992.
[10] A. Arasu, S. Blanas, K. Eguro, R. Kaushik, D. Kossmann,
R. Ramamurthy, and R. Venkatesan. Orthogonal security
with cipherbase. In CIDR, 2013.
[11] M. Bellare, A. Boldyreva, and A. O’Neill. Deterministic
and eﬃciently searchable encryption. In CRYPTO, pages
535–552, 2007.
[12] A. Boldyreva, N. Chenette, Y. Lee, and A. O’neill.
Order-preserving symmetric encryption. In EUROCRYPT,
pages 224–241, 2009.
[13] A. Boldyreva, N. Chenette, and A. O’Neill.
Order-preserving encryption revisited: improved security
analysis and alternative solutions. In CRYPTO, pages
578–595, 2011.
[14] D. Boneh, K. Lewi, M. Raykova, A. Sahai, M. Zhandry,
and J. Zimmerman. Semantically secure order-revealing
encryption: Multi-input functional encryption without
obfuscation. In EUROCRYPT, pages 563–594, 2015.
[15] D. Boneh, A. Sahai, and B. Waters. Functional encryption:
Deﬁnitions and challenges. Technical report, TCC, 2011.
[16] T. Brekne, A. ˆArnes, and A. Øslebø. Anonymization of ip
traﬃc monitoring data: Attacks on two preﬁx-preserving
anonymization schemes and some proposed remedies. In
PETs, pages 179–196, 2006.
[17] R. Burkard, M. Dell’Amico, and S. Martello. Assignment
Problems. Society for Industrial and Applied Mathematics,
2012.
of Applied Cryptography. CRC Press, 1996.
[33] J. Munkres. Algorithms for the assignment and
transportation problems. Journal of the Society for
Industrial and Applied Mathematics, 5(1), 1957.
[34] R. A. Popa, F. H. Li, and N. Zeldovich. An ideal-security
protocol for order-preserving encoding. In S&P, pages
463–477, 2013.
[35] R. A. Popa, C. Redﬁeld, N. Zeldovich, and
H. Balakrishnan. CryptDB: Protecting conﬁdentiality with
encrypted query processing. In SOSP, pages 85–100, 2011.
[36] T. Sanamrad, L. Braun, D. Kossmann, and R. Venkatesan.
Randomly partitioned encryption for cloud databases. In
DBSec XXVIII, pages 307–323. 2014.
[37] D. Song, D. Wagner, and A. Perrig. Practical techniques for
searching on encrypted data. In S&P, pages 44–55, 2000.
[38] J. Xu, J. Fan, M. H. Ammar, and S. B. Moon.
Preﬁx-preserving ip address anonymization:
Measurement-based security evaluation and a new
cryptography-based scheme. In ICNP, pages 280–289, 2002.
[39] Z. Yang, S. Zhong, and R. N. Wright. Privacy-preserving
queries on encrypted data. In ESORICS, pages 479–495.
2006.
655