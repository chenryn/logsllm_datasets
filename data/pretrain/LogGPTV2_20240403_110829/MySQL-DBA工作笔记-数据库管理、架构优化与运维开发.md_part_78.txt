在这个基础之上，再继续做空间和资源的平衡和分析，能解决的可以提前处理，解
我把备份恢复体系分为了两个层面：
整体来说，备份的目标就是为了恢复，对于备份恢复不建议区别看待，而是希望融
备份恢复是DBA的基本生存技能，重要性就不强调了，作为 DBA，我们应该对备份
从可持续的角度来说，其实希望这个预留文件的初始化是一个周期性任务调度的结
整个备份恢复的方案设计是分层来做的，首先为了减轻主库的压力，备份工作建议
·一个是基于备份集的数据备份恢复服务
初步的设计思路就是创建一个预留文件，
我先来逐个解读一下这些设计的目的和思路。
一个是基于 binlog 的数据备份恢复服务
备份恢复全景图
备份恢复
类通用的问题。
占用空间的1%~2%，如果发生了故障，可
一个是基于
---
## Page 531
14.6.2备份恢复的自动化设计
MySQL 的备份恢复要做成平台化的工作，可以基于备份全景和体系做一些细致的规划。
图14-16
二二
第14章MySQL运维管理模块设计|509
---
## Page 532
510丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
个独立的系统：任务系统和调度系统。比如备份就是一个任务。
的情况，是优先考虑异步的，这里的首选方式是Celery。
证功能的快速迭代和最低粒度，目前只保证单个实例的备份可行，如果有多个备份并行
无论是 Shell还是Python，怎么合适怎么来，只要脚本符合基本的标准，标准是什么，参
造成了免 token 的反复调用。
后端的逻辑完全通过API的方式来交互，VIEWS 层只做简单的逻辑和数据映射。
个备份数据的看板，从我的建议来说，每天上班的第一件事就是先看看备份是否成功。
来说，代价相对较高。
性会很便捷高效；如果选择了物理备份，那么增量备份就很自然了，对于表级别的恢复
份、增量备份和 binlog 备份，恢复同理也是三类，即全量恢复、增量恢复和 binlog 恢复。
数的描述，要有明确的输出。
当然任务调度从一个更高的角度来说，可以拆分为任务和调度两个模块，设置为两
备份工作可以通过可视化的看板来体现，这样备份情况就会一目了然，下图14-17是一
在产品的设计中，我通过CMDB 提供的元数据来作为备份或者恢复的入口。为了保
在接口调用中，使用了ansible_adhoc 来实现，脚本化的工作则相对来说会更加灵活，
在 API 的设计上，通用模块是使用了 Token 的安全认证，而在效率上，本地调用改
平台自动化的设计中，首先从架构设计上，我把这个阶段拆分为前后端分离的方式，
关于备份的选型，如果选择了逻辑备份，那么增量备份就是难点，但是恢复的灵活
1．备份恢复的技术体系 
首先备份和恢复是两个工作，
容量统
昨日备份集个数
2856次
昨天备份容量
一个相对完整的备份从规划来说，分为三类：全量备
GB
备份失教个数
图14-17
8
昨日备份成功次数
非日欧
昨日备份失败次数
336次
---
## Page 533
如图14-20所示。
无论我们要做全备、全量恢复、增量恢复，这些信息都可以作为我们运维操作的参考，
接的按钮，一键全库备份，如图14-19所示。
MySQL全库备份
MySQL备份操作
EMySQL实例明细信息
howing1to1of 1entries
how10entries
国MySQL概要实例信息
P地址
168
184
170
168
D
上面的是一个 tab 页面，如果按照目前的方式，可以查看到近7天的备份历史情况，
ID·
MySQL实例信思
如果是全库备份，则会收集概要信息和 MySQL 实例的明细信息，当然还有一个更直
先来说备份，备份的入口页面如图14-18所示。可以选择自己的需求来过滤。
2．备份体系设计方案
全座备份
全库各份
全库份
全库台份
全库各份
全库餐份
全库备份
全库备份
备份操作
端口binlog
警MySQL备份信
Binlog然份
Binlo备份
Bniog备份
Binlog备份
Bilo备份
Binlog备份
Brlog备份
Binlag盆份
Binlog操作
已开启
端口
端口虚拟机类型
350M
buffer_pool
103
版本
5.5.19-10og
查词
口雅
MySQL
OFF
GTID数据目录
Master
角色
data/myqlidata53
MySQL
MySQL
MySQL
MySQL
MySQL
MySQL
图14-18
MySQLMasterMySQL5.5.19
图14-19
MasterMySQL5.5.19
MasterMySQL5519Mhe
MasterMySQL5.519
MastetMySQL5.5.19
MaserMySOL519F
一键全库份
Master信息
Slave
MySQL55.19
版本
Socket目录
MySQL5.5.19
应用商称
sm_ro
第14章MySQL运维管理模块设计|511
字符集serveridMaster倍息
业务负责人
Search:
13253
None
---
## Page 534
512丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
的IP信息，另外一个是选择备份的日期，如图14-22所示。
xtracbackup 的增备功能，来大幅度降低手工运维带来的痛苦。
MySQL全库恢复操作
Show10entries
全库恢复
全库恢复
全库恢复
全库恢极
全库恢复
全民恢复
恢复操作
如果选择了全库恢复，即异机恢复的场景，我们只需要输入两个参数，一个是备机
全量恢复的入口页面如下图14-21所示。
3.恢复体系设计方案
增量备份目前是使用 binlog 的方式来处理，在数据量变化较大的情况下需要使用
MySQL全库备份
增量恢复
培家恢划
备份旧数据库版本备份实例名
国MySQL备份信息
增晶恢复
MySOL实例信意
增量恢复
增量恢复
培量恢复
增星饮复
5.5.19-10g
5.5.19-1
5.519-10g
5.5.19-0g
DML恢复
DML闪回
OME玖起
DML伤复
DML恢复
DML恢复
DML恢复
管ulySQL备份信
3353
3_3353
833353
172
335
3_3353
10.30.124.83
10:30.124.83
10:30.124.8
10 30.124.83
10.30.124.83
10.30.124.83
备份IP地址
IP地址
103
3353
3353
3353
备份端口号备份结果大小
335
口期
图14-21
图14-20
5.8G
MySQLSIngleDB1
MySQL
MySQL
MySQL
MySQL
MySQL
类型
一键全库备份
2018-06-27 020.02
备份开始时间
SingleDB
2018-06-29 02:06:02
1018-06-280206:02
018-06-25 02:06:02
018-06-2402:06:02
2018-06-2302:06:02
Master
Maste
角色Master信惠
minut
minute
minut
备份时长
MySQL5.5.19
MySQL5.5.19
MySQL5.5.19
MySOL5.5.19
applylog结果
sh
Search:
---
## Page 535
进之处，一个是基于偏移量的恢复，一个是基于时间范围，如图14-23所示。
定了备机的 IP，然后会得到 binlog 层面的反馈，能够把数据恢复到秒级。当然也有需改
国MySQL实例增量恢复入口
国MySQL实例异机恢复入口
MySQL增量恢复
MySQL全库恢复
指定恢复日期
恢复时间范围
备机IP信息
国MySQL概要实例信息
备机IP信息
国MySQL实例明细信息
how10entries
EMySQL概要实例信息
how10entries
P地址
MySQL实例信思警MySCIL签份信息
MySQL全库恢复
如上的页面是一些平台化操作的设计，可以在这个基础上把备份恢复的流程合理组
P地址
MySQL实得信息誉lySQL备份感惠
如果是增量备份，则稍微复杂些。但是里面有一个亮点，如果要恢复某一个库，指
恢复日期
机房
2019-04-1611:5954
端口binlog
端口binlog
IP地址
IP地址
350M
虚拟机
虚拟机
5.519-l0g
5.5.19-log
MySQL
类型
一键全持恢复直看恢复日志
OFF
一键全阵恢复查看恢复日志
OFF
图14-23
图14-22
Master信息
Master信息
Socket目录
MySQL5.5.19
tp/mysql.sock53
第14章MySQL运维管理模块设计|513
应用简称
应用简称
字符集server_id
业务负责人
Search:
业务负责人
Search:
13253
服务器状态
Master信息
在线
服务器状态
---
## Page 536
514丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
现数据全备、增备和 DML闪回；但是在性能和可控性方面还是存在不少需改进之处，我
日志，同时能够解析出逆操作来作为 DML 语句闪回的参考。
过备份。
的 update，所以通过逆向操作我们可以对某一张表基于时间维度实现数据恢复，而无需通
求的支撑能力的，对于 delete 操作，逆操作是 insert，而对于 update 操作，逆操作是另外
delete 了一张表的部分数据，稍后发现了问题，需要快速恢复，DBA 是应该具备这种需
14.6.3
织起来，通过不断地完善来实现备份恢复流程的融合。
们可以制定出一些改进计划如下。