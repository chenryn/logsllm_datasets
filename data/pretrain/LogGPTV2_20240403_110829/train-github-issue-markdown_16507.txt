Currently I am implementing some `Dropdown` component and I have something
like this.
    return (
        {Children.map(children, this.render_child)}
    )
    ...
    @autobind
    render_child(element, index) {
      return cloneElement(element, {
        key: element.key || index,
        selected: this.props.selected,
        onClick: this.click_handler
      })
    }
The business requirement put me in this situation. I created the list of item
of the `Dropdown` component.
    // this is using map from some array so I will return an array.
    render_menu_item(key) {
      if(!key) { //whatever checking
        return
      }
      return (
        {text}
      )
    }
Now, because I use `element.key` in some case `element` could be `null` so
give me an error. I propose to remove the `null` or `undefined` from the
`Children.map` because then I will be filtering all the time the `null` values
whenever I have this situation.
I understand I can `forEach` but I think is not the best implementation, in
the end you change the `map` function alright so