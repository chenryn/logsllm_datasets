λ2
j
.
(cid:112)
In this section, we investigate how attackers distribute in
the spectral space. By identifying the distribution of attack-
ers’ spectral coordinates, we expect to separate attacking
nodes from regular ones in the spectral space. Our theo-
retical result shows that ˜yji follows the normal distribution
whose mean and variance satisfy the following two inequal-
ities:
(cid:181)
(cid:182)
E(˜yji) ≤ di ¯xj
λj
, V(˜yji) ≤ di
n
1 − di
n
We can regard node i as a suspect if the corresponding
entry ˜yji is within the conﬁdence interval [E(˜yji)− 
V(˜yji)
, E(˜yji)+ 
2 quantile of
the standard normal distribution (i.e., interval [−, ] covers
probability p).
V(˜yji)] where  > 0 denotes the 1+p
Our spectrum based detection algorithm called Spctra
consists of three steps. In the ﬁrst step, we conduct node
non-randomness test to identify suspects.
In the second
step, from Gsusp we identify suspect groups as candidates of
RLA groups. In the third step, we test whether each dense
subgraph is a true RLA group. As a result, we can ﬁlter out
dense subgraphs accidentally formed by regular nodes.
1Attacking nodes have the same degree distribution as the
regular nodes. For attacking node i, it attacks 2∗di
3 victims.
00.10.2−0.1−0.0500.050.10.15050100150200 ˜z1˜z2 degreeregular(liberal)regular(conservative)attacking nodes748Complexity. Our algorithm involves the calculation of the
ﬁrst k eigenvectors of a graph. In general, eigen-decomposition
of an n × n matrix takes a number of operations O(n3). In
our framework, we only need calculate the ﬁrst k largest
eigenvalues and their eigenvectors. We implemented the
Arnoldi/Lanczos algorithm which generally needs O(n) rather
than O(n2) ﬂoating point operations at each iteration. The
authors in [4] developed the Greedy algorithm to catch
RLAs from the suspect set. The Greedy algorithm is to
mine subgraphs satisfying the RLA-property, starting from
the suspect nodes identiﬁed by two tests. It grows a poten-
tial attack cluster by iteratively adding nodes with a high
degree of connectivity with the cluster. The time complex-
ity of the neighborhood independence test is O(
i ) =
O(m2). To catch attacking groups among nsusp suspects,
the Greedy needs O(m2
(cid:80)
susp) time.
i d2
4. EXPERIMENTAL RESULTS
Data Set and Setting. We conducted experiments on the
Web Spam Challenge 2007 data, which contains over 105
million pages in 114,529 hosts in the .UK domain. The num-
ber of links among these hosts is 1,836,228. We implemented
our spectrum based detection algorithm and the topology
based detection algorithm [4] (including two testing proce-
dures, clustering test and neighborhood independence test,
and the Greedy algorithm) in Matlab. Our experiments
were carried out on a Windows XP64 workstation with a
3.0 GHz Pentium-IV CPU and 2GB RAM.
Table 1: Evaluation results on Web Spam data set, 8
RLA attacking groups, 650 total attackers, and 56144
total victims.
setting
RLA size
50
50
50
50
100
50
100
200
¯vi pin
100 .3
1
100 .6
2
100 1
3
200 .3
4
100 .3
5
degree
6
degree
7
8
degree
ﬁnal results (total)
Spctra
ssp
50
50
50
50
100
49
97
188
634
atck
50
50
50
50
100
49
97
188
634
Greedy
ssp
49
0
50
79
3
20
6
27
4534
atck
47
0
50
47
3
20
6
27
200
Accuracy of Detecting RLAs. We generated 8 RLAs
with varied sizes and connection patterns (links between at-
tackers and victims and internal links among the attackers),
as shown in Table 1. The total number of attacking nodes
is 650 and the size of victims is 56,144. Our goal is to test
whether algorithms (Spctra and Greedy) can catch them
and how accurate they achieve. Each algorithm output a set
of suspect groups (i.e., RLA candidates). Table 1 shows our
detailed comparisons.
Table 2: Execution time (in seconds) of for diﬀerent
data sets
Data set
polblogs
Alg.
(1222, 16714)
Spctra
Greedy
Spctra
Greedy
Spctra
(114529, 1836228) Greedy
Web Spam (33%)
(37562, 199406)
Web Spam
Testing Grouping Total
0.078
0.037
22.24
16.20
0.702
0.941
1093
577.2
33.69
4.017
12728
96043
0.041
6.047
0.239
515.4
29.68
83314
Running Time. In this experiment, we compare the run-
ning times of the Spctra and Greedy algorithms using
three data sets, polblogs, Web Spam, and a sample of Web
Spam data. In Table 2, we report the running time for both
Spctra and Greedy including the testing step (catching
suspects) and the grouping step (catching RLAs). We can
see that the time taken by Greedy is 285, 1161, and 2851
times more than our Spctra algorithm.
5. CONCLUSIONS AND FUTURE WORK
We have presented a novel framework that exploits the
spectral space of underlying network topology to identify
frauds or attacks. Our theoretical results showed that at-
tackers locate in a diﬀerent region of the spectral space from
regular users. By identifying fraud patterns in graph spec-
tral spaces, we can detect various collaborative attacks that
are hard to be identiﬁed from original topological structures.
Focusing on RLAs, we presented an eﬃcient algorithm, Spc-
tra, and compared with the topology based detection ap-
proach [4]. Empirical evaluations show that our approach
signiﬁcantly improves both eﬀectiveness and eﬃciency espe-
cially when a mix of RLAs are introduced.
In our future
work, we will explore various other attacking scenarios in
both social networks and communication networks. Speciﬁ-
cally, we will study how our spectrum based detection works
when attackers choose victims purposely (e.g., passive and
active attacks[1]) or only attack very few victims when they
launch their collaborative attacks (e.g.,Sybil attack [3]). We
will extend our approach to use the temporal information in
dynamics networks to identify and catch potential attacks.
We will explore matrix visualization and organization ap-
proaches that enable interactive navigation between network
topology and its spectral spaces.
Acknowledgment
This work was supported in part by U.S. National Science
Foundation CCF-1047621 and CNS-0831204. Refer to [5] for
details on theoretical analysis, algorithm, and evaluations.
6. REFERENCES
[1] L. Backstrom, C. Dwork, and J. Kleinberg. Wherefore
art thou r3579x?: anonymized social networks, hidden
patterns, and structural steganography. In WWW ’07,
pages 181–190, 2007.
[2] D. H. Chau, S. Pandit, and C. Faloutsos. Detecting
fraudulent personalities in networks of online
auctioneers. In PKDD, pages 103–114, 2006.
[3] J. Newsome, E. Shi, D. Song, and A. Perrig. The sybil
attack in sensor networks: analysis & defenses. In
Proceedings of the third international symposium on
Information processing in sensor networks, pages
259 ˝U–268, 2004.
[4] N. Shrivastava, A. Majumder, and R. Rastogi. Mining
(social) network graphs to detect random link attacks.
In ICDE, pages 486–495, 2008.
[5] X. Ying, X. Wu, and D. Barbar´a. Spectrum Based
Fraud Detection in Social Networks. In Technical
Report, College of Computing and Informatics, UNC
Charlotte, 2010.
749