antivirus software, permission problems
about  47
improper privileges  47
static signature file, insufficient 
permissions  47
application programming 
interface (API)  60, 115
ASPack  134
assembly language  144
Autoruns
reference link  32
working with  32, 33
B
binary patching
using, for antivirus bypass  
144, 154, 156, 157
buffer overflow
about  50
antivirus bypass approach  51
stack-based buffer overflow  51
types  50
buffer overflow, approaches
automated approach  50
manual approach  50
buffer overflow vulnerabilities, avoiding
about  191
Address Space Layout 
Randomization (ASLR)  191
Data Execution Prevention (DEP)  191
fuzzing  192
memory boundary validation  191
reverse engineering  192
stack canaries  191
bypassed antivirus engines  172
C
calloc()
about  91, 92
versus malloc()  91, 92
central processing unit (CPU)  83, 137
classic DLL injection  71
command-and-control (C2/C&C)  10, 113
control-flow obfuscation  104, 105
CreateFile
execution flow  67-70
cybercriminals
goals  4
D
DAST (Dynamic Application 
Security Testing)  192
Data Execution Prevention (DEP)  42, 191
Data Leak Prevention (DLP)  5
debugging technique  145
Detect it Easy (DiE)  122
disassembler  145
Discretionary Access Control 
List (DACL)  45
Disk Operating System (DOS)  82, 107
DLL hijacking
about  49
vulnerability, avoiding  189
domain generation algorithm (DGA)  60
Domain Name System (DNS)  60
dynamic engine  9
Index   221
dynamic-link library (DLL)  121
used, for bypassing antivirus  81, 83, 84
dynamic YARA
about  192
benefits  192
malicious strings, hunting  193-197
E
encryption
using, in antivirus bypass  117
encryption, sub-techniques
metamorphic code  120
oligomorphic code  118
polymorphic code  118, 119
Endpoint Detection and 
Response (EDR)  5, 140
Entropy  122
entry point (EP)  124
executable (EXE) file  107
Executable Linkable Format (ELF)  81
Extended Instruction Pointer 
(EIP)  51, 133
F
fuzz testing  50
G
general-purpose registers (GPRs)  147
Graphical User Interface (GUI)  43
H
heuristic engine  10
hexadecimal (hex)  106
HyperText Transfer Protocol (HTTP)  60
I
Import Address Table (IAT)  133
Internet Protocol (IP)  58, 109
Intrusion Detection Systems (IDS)  5
Intrusion Prevention Systems (IPS)  5
J
Jotti’s malware scan
detections  62
reference link  61
junk code
about  159
using, for antivirus bypass  159, 160
K
Knowledge Base (KB)  57
L
last in, first out (LIFO)  146
Local Area Network (LAN)  179
M
Mach Object (Mach-O)  81
malicious software  5
malicious strings
hunting  193-197
malloc()
about  90
versus calloc()  91, 92
malware
about  5
defining  5
malware, types
222     Index
about  6, 7
Backdoor  6
Botnet  6
Downloader  6
Dropper  6
potentially unwanted program (PUP)  6
Ransomware  6
Rootkit  6
Scareware  6
Spyware  6
Trojan  6
Virus  6
Worm  6
memory bombing
about  90-95
calloc()  91, 92
malloc()  90
metamorphic code  120
multiple antivirus bypass techniques
combining  168, 169
executable before and after 
peCloak example  169-171
N
Native API
versus Windows API  66, 67
Network Access Control (NAC)  5
Network Address Translation (NAT)  12
no operation (NOP)  120
O
obfuscation techniques
about  98
control-flow obfuscation  104, 105
rename obfuscation  99, 101, 103
using, in antivirus bypass  98
oligomorphic code  118
operation code (opcode)  106
original entry point (OEP)  121
P
packers
about  121
false positives  140, 141
using, in antivirus bypass  121
working  121
packers, unpacking process
about  121
ASPack, manually unpacking  134-139
UPX  122-127
UPX files, manually unpacking  
127, 129, 130-134
packet capture (PCAP)  60
peCloak example
antivirus software, limitations  171
PE file
about  81
format structure  82
PE headers  82
penetration test (pentest)  178
PE sections  83
polymorphic code  118, 119
potentially unwanted program (PUP)  6
PowerShell
using, for antivirus bypass  161, 
163, 164, 166, 167
process address space  64
process doppelgänging  75-77
Process Explorer tool
reference link  20
working with  20-26
process hollowing  72-74
process identifier (PID)  194
Index   223
process-injection
classic DLL injection  71
implementation  65
used by, threat actors  77, 78, 80
used, for bypassing antivirus  63
process injection, detection
about  197
behavior-based detection  206
file-based detection  207
flow-based detection  205
log-based detection  205, 206
registry-based detection  206
static-based detection  197-204
Process Monitor
reference link  26
working with  26, 28, 29, 30, 31
Process Monitor (ProcMon)  67
proof of concept (POC)  89, 116, 178, 193
protection rings
about  42
in Windows operating system  43-45
protection systems
DLP  7
EDR  7
exploring  7
Firewall  7
IDS/IPS  7
R
red team operation
about  178
antivirus software, bypassing  179, 180
Regshot
about  33
reference link  20
working with  33-36
rename obfuscation  99, 101, 103
Return-Oriented Programming 
(ROP)  51, 191
reverse engineering
about  144, 145
Assembly x86 code examples  149-153
Assembly x86 commonly used 
instructions  148, 149
Assembly x86 most commonly 
used instructions  149
assembly x86 registers  147
heap  146
indexes and pointers  147
stack  146
S
sandbox  9
SAST (Static Application 
Security Testing)  192
script-based malware detection
with AMSI  207
secure coding recommendations
about  211
automated code testing  213
code, planning securely  212
compiler warnings  213
input validation  212
integrity validation  213
old code, avoiding  212
PoLP (Principle of Least Privilege)  213
self-protection mechanism  212
wait mechanisms  213
security landscape  4, 5
Security Operations Center (SOC)  205
Server Message Block (SMB)  179
software development life 
cycle (SDLC)  213
stack  146
224     Index
stack-based buffer overflow  51
static engine  8
Structured Exception Handling 
Overwrite Protection (SEHOP)  42
Sysinternals suite
reference link  20
Sysmon (System Monitor)  205
T
threat actors
process-injection, used by  77-80
timestomping  157, 158
Transmission Control Protocol 
(TCP)  60, 109
Turbo Assembler (TASM)
download link  152
U
Uniform Resource Locator (URL)  58
Universal Serial Bus (USB)  178
unpacker engine  11
unpackers  11
Unquoted Service Path vulnerability
about  48
avoiding  190, 191
reference link  48
User Account Control (UAC)  207
V
VirScan
reference link  61
VirusTotal
about  58-60
URL  58
VirusTotal Jujubox  59
Visual Basic for Applications (VBA)  108
W
Windows access control list  45, 46
Windows API
about  66
calls, for antivirus bypass  86, 88, 89
CreateFile, execution flow  67-70
need for  66
versus Native API  66, 67
Windows Management 
Instrumentation (WMI)  182
Windows operating system
about  40- 42
protection rings  43-45
Y
Yet Another Recursive Acronym (YARA)
about  105
building blocks  105, 107
bypassing  109
Emotet downloader  108, 109
Locky ransomware  107
potential malware, detecting  105
static engine bypass  109-116