approach. In RVD it is claimed that the use of controlled in-
variant sets in detecting cyber attacks uses few information
about the controller and hence is useful for a large range
of control laws. The invariant set Σ in RVD corresponds to
the invariants in Table 2. The method of using invariant sets
is demonstrated theoretically using a second order unstable
system. The system is ﬁrst discretized and the input uk con-
strained as −1 ≤ uk ≤ 1. Next, a maximal invariant set Ω∞
is computed using an existing algorithm [5]. This maximal
set is then used to detect a control input stuck attack by
setting uk to -1 after the system has been in operation for
some time. The attack is detected, and an alarm triggered,
despite the fact that the system is still in the safety range.
The experiments reported here derive and use invariants
in a realistic setting. While the automated derivation of
Ω∞ leads to correct and maximal invariant set, it relies on
a precise state model of the system. Such a state model is
not available for SWaT, and deriving such models for large
5Each tank in SWaT has an overﬂow drain, hence the attack
causes water wastage; the laboratory is not messed up.
systems may not be practical. Hence, the approach of using
system design to generate invariants seems practical. Fur-
ther, the example used in RVD is of a single point attack,
i.e., on the control signal uk. The experiments described
here explore more complex attacks that aim to upset both
uk and the state variables xk in RVD. Such complex attacks
aim to thwart attack detection by invariants by simultane-
ously manipulating more than one state variable to ensure
that the invariants remain satisﬁed while an attack is ac-
tive. This aspect of attacker behavior and attack detection
has not been considered in RVD. Authors in RVD have also
used another invariant set Σ derived from controller infor-
mation such as the controller gain. No such information has
been considered in the experiments reported here though it
will be a useful experiment to conduct in the future. How-
ever, indirect impact of controller action, e.g., starting a
pump, is incorporated in the SD invariants.
Fabio et al. have proposed distributed state estimation [14]
and detection,[15] in power networks. The distributed de-
tection method computes a minimum variance estimate of
the network state via distributed computation. The key as-
sumption here is that the state estimator is receiving system
measurements from sensors through which an attacker can
enter false data. The authors also solve the problem of de-
tecting the presence of bad data, which is similar to the
attack detection problem posed here. The work in [14] fo-
cuses on power networks and is theoretical in nature whereas
that reported here focuses on water treatment system and
is experimental. Further, the work reported here accounts
for carefully crafted correlations by the attacker across sys-
tem measurements. Thus, using multi-point attacks, the
attacker attempts to thwart the detection mechanism in a
controller.
Hsio et al. [10] have proposed a distributed security mon-
itoring solution to detect attacks on a CPS. They describe
a coordinated architecture that employes SecMons (Secu-
rity Monitors) over the network. Each monitor monitors
a network link and the corresponding packets. The pack-
ets are analyzed and assessed for anomalous behavior. The
monitoring is stateful and hence ﬁnite state machine models
are used to describe subjects at each network level. Pre-
conditions are deﬁned for state transitions within and across
the machines and used to identify attack symptoms using a
statistical approach. While the approach described is similar
to the DaD in this paper in the sense that both approaches
use distributed detection, it is diﬀerent in that it does not
use physics/chemistry based invariants. Thus, it would be
best to consider Hsio et al.’s approach as complementary to
that described in this work.
The work of Perelman et al. [16] focuses on chemical or bi-
ological contamination in a water distribution system. The
approach is to measure water quality parameters, such as pH
and conductivity, and use these to distinguish normal from
abnormal behavior. While this approach is similar to the
one presented here, it does not assume sensor compromise.
For example, an attacker could add pollutants and, knowing
the normal system behavior, replay all the measurements as
if the system is behaving normally. Nevertheless, the ap-
proach proposed in [16] seems eﬀective when measurements
are taken at multiple stages and the attacker compromises
only one stage as in the SSMP attacks.
There exists literature on the design of robust CPS [13,
20, 21]. These works focus on attack modelling, the de-
458sign of controllers and monitors for secure CPS. In this pa-
per, attack models with SSMP are borrowed from Cardenas’
work [6] as this is most closely related to cyber attacks in a
CPS. Many other works model attacks speciﬁcally on control
systems and are abstract in nature.
8. SUMMARY, DISCUSSION, NEXT STEPS
A method to detect cyber attacks on a CPS is described.
The method makes use of invariants, derived from CPS
design, to detect attacks. Each invariant is based on the
physics or the chemistry of the process for controlled. In this
work only physics-based invariants were used. The CPS is
assumed to be structured so that it can be partitioned into
interacting stages where each stage is controlled by a PLC
that communicates with its local sensors and actuators as
well as with other PLCs and the SCADA workstation. The
invariants are coded into the PLCs that control various sub-
processes in a CPS. This method of attack detection is re-
ferred to as distributed attack detection or simply DaD.
Attacks were designed assuming that the attacker has
knowledge of any one stage of the CPS and can compromise
two or more sensors/actuators at that stage. A number of
experiments conducted reveal that the distributed detection
based on invariants is eﬀective in detecting SSMP attacks.
However, replay attacks on the ﬁrst stage of a CPS, that
has no previous stage, need additional state information for
detection. It is important to note that the method described
here could complement other methods proposed in the liter-
ature such as intrusion detection and machine learning for
which a range of commercial tools are available [7, 11].
This rather large experiment led to the realization of sev-
eral issues and open problems summarized below.
Reconnaissance attack: An attacker might be able to get into
a CPS via one of several possible vulnerabilities including
those in the SCADA workstation, PLC, or HMI. However,
the intrusion might be to learn system design and its opera-
tion. Such an attack cannot be detected using an approach
that relies solely on invariants derived from the physics or
chemistry of the CPS. As may be obvious, this is so because
unless an attacker manages to fake data to PLC or send un-
desirable control commands to an actuator, such invariants
will continue to hold and hence the attack would not be de-
tected. Detection of such reconnaissance attacks relies on
the traditional intrusion detection approaches [9].
Transient states: Any physical system is likely to include
transient states. These states arise in response to a control
action that aﬀects an actuator which in turn changes the
system state. However, the response time of an actuator is
limited by its physical design. Thus, the actuator, as well as
its host system, is considered to be in transient state, until at
least when it reaches its desired (stable) state. It is possible
for an attacker to take advantage of such transient states and
launch attacks exactly when the system is moving from one
stable to another stable other state. This aspect of attacker
capability has not been accounted for in the experiments
reported here.
Automated derivation and strength of invariants:
In the
study reported here, the invariants were derived manually.
However, an ongoing project aims at deriving the invariants
directly from the design and assessing their strengths using
a formal model using Alloy.[12] Such knowledge could help
in deciding whether or not to use an invariant. For exam-
ple, if invariant I1 detects n attacks, of which m < n, and
not more, are detected by invariant I2, then I1 subsumes I2
and hence I2 could be ignored unless there is a good reason
not to do so. The subsumption relationship could be further
generalized by creating invariant subspaces. Such subspaces
could then be used to further minimize the number of in-
variants actually implemented in various PLCs. This aspect
of invariant minimization will be considered in future exper-
iments.
Completeness of invariants: an open problem?: An obvious
question to ask is whether the set of invariants SD and SA
is complete. The completeness of SD depends on the cor-
rectness and completeness of the SCG for the system brieﬂy
described in Section 3.1. In the case of SWaT, a complete
and manually veriﬁed set of SCGs is available. The invari-
ants listed in Table 2 are derived manually from these SCGs.
However, SCGs are amenable to automation and hence a
complete set of SD invariants can be derived from a com-
plete and accurate SCG for a CPS; and this could be done
at the time of designing a CPS [1], not necessarily after it
has been built as is the case in the current experiment.
There does not appear to be any known criteria to deter-
mine the completeness of SA invariants. These invariants
are derived from the physics and chemistry of the system.
Thus, one could ﬁrst deﬁne all properties in a CPS and then
derive SA invariants based on these properties. Another way
would be to ﬁrst create a list of cyber attacks and then de-
rive invariants that will guarantee detection of each of these
attacks. Such a set would be adequate with respect to the
attack set though may not be complete with respect to some
other criteria. These are perhaps two ways that one could
use to derive a useful, but in no sense, complete, set of SA
invariants. In any case, this appears to be an open problem
for CPS researchers.
Co-design of invariants and attacks: an open problem? The
replay attack example in Section 6 indicates that while a de-
tection method might be eﬀective in detecting many attacks
of a kind, it might fail to do so for other types of attacks.
The question then is: Is there a procedure that takes the CPS
design as input, derives invariants from the design and also
shows a complete range of attacks that can and cannot be
detected using the so derived invariants? Perhaps any such
procedure will need to make use of the knowledge of physics
and chemistry associated with the various components in
the CPS.
The work described here is part of a long series of ex-
periments being conducted to understand the eﬀectiveness
of various physics and chemistry based methods for attack
detection. The assumption here is that such methods are
likely to be powerful when used at the time of CPS de-
sign and in concert with traditional network-based detection
approaches. Additional experiments are being conducted
based on the attacker knowledge and capability as illus-
trated in Figure 5. Though the method described here was
implemented on only one CPS, it seems applicable in CPS
domains such as power networks, transportation systems,
oil and natural gas systems. Nevertheless, any such claim
ought to be validated against other types of complex CPS.
459Acknowledgments
Thanks to Kaung Myat Aung for invaluable assistance in
conducting the experiments.
9. REFERENCES
[1] S. Adepu and A. Mathur. Introducing cyber security
at the design stage of public infrastructures: A
procedure and case study. In Proceedings of the 2nd
Asia-Paciﬁc Conference on Complex Systems Design
& Management in Advances in Intelligent Systems
and Computing. Springer, February 2016.
[2] S. Adepu and A. Mathur. Using process invariants to
detect cyber attacks on a water treatment system. In
Proceedings of the 31st International Conference on
ICT Systems Security and Privacy Protection - IFIP
SEC 2016 (IFIP AICT series). Springer, 2016.
[3] S. Amin, A. C`ardenas, and S. S. Sastry. Safe and
secure networked control systems under
denial-of-service attacks. In Hybrid Systems:
Computation and Control. Proc. 12th Intl. Conf.
(HSCC), LNCS, Vol. 5469, Springer-Verlag, pages
31–45, 2009.
[4] S. Amin, X. Litrico, S. Sastry, and A. Bayen. Cyber
security of water SCADA systems; Part I: Analysis
and experimentation of stealthy deception attacks.
IEEE Transactions on Control Systems Technology,
21(5):1963–1970, 2013.
[5] F. Blanchini. Set invariance in control. Automatica,
35(11):1747–1767, 1999.
[6] A. A. C´ardenas, S. Amin, Z.-S. Lin, Y.-L. Huang,
C.-Y. Huang, and S. Sastry. Attacks against process
control systems: Risk assessment, detection, and
response. In ACM Symp. Inf. Comput. Commun.
Security, 2011.
[7] Check Point: Critical Infrastructure & ICS/SCADA.
http://www.checkpoint.com/products-solutions/
critical-infrastructure/index.html.
[8] A. Fagiolini, M. Housh, A. Ostfeld, and A. Bicchi.
Distributed estimation and control of water
distribution networks by logical consensus. In
Communications, Control and Signal Processing
(ISCCSP), 2014 6th International Symposium on,
pages 239–242, May 2014.
[9] S. Han, M. Xie, H.-H. Chen, and Y. Ling. Intrusion
detection in cyber-physical systems: Techniques and
challenges. IEEE Systems Journal, 8(4):1049–1059,
Dec 2014.
[10] S.-W. Hsiao, Y. Sun, M. C. Chen, and H. Zhang.
Cross-level behavioral analysis for robust early
intrusion detection. In IEEE International Conference
on Intelligence and Security Informatics (ISI), pages
95–100, May 2010.
[11] ICS2 On Guard.
http://ics2.com/products/ics2-on-guard-2/.
[12] E. Kang, S. Adepu, D. Jackson, and A. P. Mathur.
Model-based security analysis of a water treatment
system. In In Proceedings of 2nd International
Workshop on Software Engineering for Smart
Cyber-Physical Systems (in press; SEsCPS’16), May
2016.
[13] C. Kwon, W. Liu, and I. Hwang. Security analysis for
cyber-physical systems against stealthy deception
attacks. In American Control Conference (ACC),
2013, pages 3344–3349, 2013.
[14] F. Pasqualetti, R. Carli, and F. Bullo. A distributed
method for state estimation and false data detection
in power networks. In IEEE International Conference
on Smart Grid Communications (SmartGridComm),
pages 469–474, Oct 2011.
[15] F. Pasqualetti, F. D¨orﬂer, and F. Bullo. Attack
detection and identiﬁcation in cyber-physical
systems–Part II: Centralized and distributed monitor
design. arXiv preprint arXiv:1202.6049, 2012.
[16] L. Perelman, J. Arad, N. Oliker, A. Ostfeld, and
M. Housh. Water distribution systems event detection.
In Complexity in Engineering (COMPENG), 2012,
pages 1–3, June 2012.
[17] A. Rosich, H. Voos, and M. Darouach. Cyber-attack
detection based on controlled invariant sets. In
European Control Conference (ECC), pages
2176–2181, June 2014.
[18] K. Stouﬀer and J. F. K. Scarfone. Guide to Industrial
Control Systems (ICS) Security; NIST Special
Publication 800-82; pages 1-155., June 2011.
[19] SWaT: Secure Water Treatment Testbed, 2015.
https://itrust.sutd.edu.sg/wp-content/uploads/sites/
3/2015/11/Brief-Introduction-to-SWaT 181115.pdf.
[20] A. Wasicek, P. Derler, and E. Lee. Aspect-oriented
modeling of attacks in automotive cyber-physical
systems. In Design Automation Conference (DAC),
2014 51st ACM/EDAC/IEEE, pages 1–6, June 2014.
[21] Q. Zhu and T. Basar. Robust and resilient control
design for cyber-physical systems with an application
to power systems. In 50th IEEE Conference on
Decision and Control and European Control
Conference (CDC-ECC), pages 4066–4071, 2011.
460