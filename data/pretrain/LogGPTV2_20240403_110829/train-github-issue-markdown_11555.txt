 **I'm submitting a ...** (check one with "x")
    [X] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
We have the following components trees:
    baseControl -> inputBaseControl -> inputControl
    baseControl -> textControl
baseControl has three object injected into **constructor** `(Renderer,
ElementRef, ChangeDetectorRef)`
If the derived classes do not call explicitly the `super.constructor`, then
the injected object are `undefined`.
**Expected behavior**  
We expect that objects are injected correctly even without calling explicitly
`super.constructor` like it was in Angular 2.4.1.
**Minimal reproduction of the problem with instructions**
For example `inputControl `calls explicitly and works, but `textControl `does
not call explicitly and does not work as expected.  
https://plnkr.co/edit/xXqJCy?p=preview
**What is the motivation / use case for changing the behavior?**  
This should be the standard way to manage inheritance.
**Please tell us about your environment:**  
Windows 10  
Visual Studio 2017  
NPM  
Kestrel
  * **Angular version:** 4.0.0
  * **Browser:** Chrome 56
  * **Language:** TypeScript 2.2.1
  * **Node (for AoT issues):** `node --version` = 7.7.2