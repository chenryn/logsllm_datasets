title:Generic construction of consensus algorithms for benign and Byzantine
faults
author:Olivier R&quot;utti and
Zarko Milosevic and
Andr&apos;e Schiper
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Generic Construction 
of Consensus Algorithms 
for Benign and Byzantine Faults 
Olivier RUtti  Zarko Milosevic  Andre Schiper 
Ecole Poly technique 
Federale de Lausanne (EPFL) 
1015 Lausanne, Switzerland 
{olivier.rutti,zarko.milosevic,andre.schiper}@epjl.ch 
Abstract 
The paper proposes a generic 
consensus 
algorithm  that 
the basic and commonfeatures 
of known consen­
of the generic 
between various 
algorithm 
consensus 
leader-based 
and leader-free 
algo­
authenticated 
Byzantine 
This leads to the identification 
algorithms. 
With the proposed 
benign faults, 
The parameters 
addressing 
and Byzantine 
the core differences 
including 
highlights 
sus algorithms. 
encapsulate 
algorithms, 
rithms, 
faults 
of three classes 
classification, 
class, 
ingly, 
tine consensus 
the maximum number of Byzantine 
while FaB Paxos belongs 
the classification 
algorithm 
of consensus 
faults. 
to a different class. Interest­
allowed us to identify a new Byzan­
n > 4b, where b is 
that requires 
processes. 
1 Introduction 
Paxos and PBFT indeed belong to the same 
to a different class. Interestingly, 
while 
s, which 
round. The val­
y three classes 
to the same class, 
by some algorithm
hms, and tradeoffs 
round and a decision 
among consensus algorit
hms: 
tion, Paxos [11] (benign 
round may  be skipped 
a first dichotomy 
the validation round, and the others for 
round is not necessary. We further 
sub­
round, a validation 
idation 
introduces 
those that require 
which the validation 
divide the former class in two, based on the state variables 
required. This lead us to identif
sus algorit
this classifica
(Byzantine 
FaB Paxos 
the classifica
consensus algorithm 
requirement 
Our generic 
faults) indeed  belong 
[16] belongs 
tion allowed 
of consen­
between these classes. 
With 
faults) and PBFT [4] 
n > 5b of FaB Paxos and n > 3b of PBFT). 1 
is based on four parameters: the 
FLV function, the Selector 
function, the threshold 
param­
eter TD, and the flag FLAG (* or ¢). The functions FLV 
and Selector 
to n (number of processes), f 
is defined with respect 
imum number of benign faults) and b (maximum number 
of Byzantine processes). 
generic 
stract 
of any specific 
simply in proving 
properties 
of our parameters. The correctness 
proof 
instantiated 
consists 
consensus 
properties 
n  > 4b (inbetween 
the 
We can prove correctness of the 
algorithm 
satisfy the abstract 
are characterized 
instantiations 
of the corresponding 
y  a new Byzantine 
properties; 
by referring 
that requires 
by abstract 
consensus 
algorithm 
algorithm 
us to identif
that the 
only to the ab­
functions. 
(max­
TD 
a generic 
con­
approaches. 
The paper is not the first one to propose 
a consensus framework re­
but it goes beyond previous 
to benign faults, which allows unification of leader 
sensus  algorithm, 
Mostefaoui 
et al. [18] propose 
stricted 
oracle, random oracle and failure  detector 
oracle. Guer­
algo­
raoui and Raynal [9] propose a generic 
consensus 
is encapsulated in a function 
rithm, where generality 
called 
Lambda. The Lambda function 
encapsulates both our se­
lection 
authors 
our three classes 
of consensus 
for [18], the paper is restricted 
rraoui 
and our validation rounds. This does not allow the 
of 
of [9] to identif
as 
Guer­
to benign faults. Later, 
a generic 
y the differences 
hms. Moreover, 
and Raynal 
[10] propose 
algorit
between two 
version of Paxos in 
Consensus is a fundamental 
and difficult 
problem 
in fault 
computing. This explains 
the numerous 
that have been published, with dif­
fault models. 
Considering 
s, it would be helpful 
to classify 
y the basic mechanisms on which 
distributed 
and for different 
algorithm
tolerant 
consensus algorithms 
ferent features 
these numerous 
them, in order to identif
they rely. This would allow a better 
sensus algorit
passing 
benign faults 
hms, particularly 
understanding 
of con­
tion encom­
for a classifica
faults. 
and malicious  (Byzantine) 
The paper provides 
such  a classifica
tion by proposing 
a 
which highlights the basic and 
consensus algorithm
s. The pa­
encapsulate the core 
dif­
algorithm
s, including 
hms, addressing benign 
consensus 
algorithm 
of the generic 
algorithm, 
of known 
generic 
common features 
rameters 
ferences between  various 
consensus 
ree algorit
leader-based and leader-f
faults, authenticated 
Instantiations 
ious algorithm
discuss 
of the parameters 
s. The generic 
Byzantine faults 
randomized 
and Byzantine faults. 
allow us to obtain these var­
algorithm 
also allows us to 
The generic 
consensus algorit
hms. 
of successi
consists 
algorithm 
ve phases, 
where each phase is composed 
of three rounds:  a selection 
1 b is the maximum number of Byzantine 
processes. 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
343 
DSN 2010: RUtti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP 
International 
Conference 
on Dependable 
Systems & Networks (DSN) 
(using shared memory, storage  area 
Song et al. [20] proposed 
related 
seminal 
channels 
other 
to Paxos-like proto­
they ignore  some 
abstractions 
[13] and [14]. Recently, 
blocks that allow the construction 
or active disks) 
is en­
. The paper is also re­
to benign faults. Apart from this work, several 
proposed 
which communication 
networks, message passing 
capsulated in the Omega abstraction
stricted 
authors 
cols, e.g., 
of consensus al­
building 
gorithms. They consider both benign and Byzantine 
faults. 
However, 
such as PBFT and 
fore has a somehow limited scope. 
The rest of the paper  is 
to the system model 
the generic 
as follows. Section 2 
s. Section 3 
and its param­
for 
such 
is devoted 
introduces 
eters.  Section 4 presents three classes 
these parameters, 
as Paxos, FaB Paxos, PBFT into these classes. Section 5 
gives examples of instantiations 
In Section 6 we show how the generic 
adapted 
Section 7 concludes 
randomized 
the paper. 
algorithm 
can be 
hms, and 
and classifies 
and to definition
consensus algorit
FaB Paxos, and their framework there­
consensus algorithms 
of the generic 
consensus 
organized 
algorithm 
to include 
of instantiations 
consensus algorithms 
algorithm. 
noted by S; (s;); messages received 
are denoted 
by f1; (f1;[q] is the message received 
by process p in round r 
from q) . 
of our 
During good periods 
we assume the following 
two 
to solve con­
system, 
Communication  Predicates. 
partially synchronous 
communication 
sensus: Pgood and Peons. The predicate 
correct 
process: 
predicates that are sufficient 
processes 
receive 
every message sent by a correct 
Pgood ensures that 
Pgood(r) == Vp, q E C : J1;[q] = S(s) 
An implementation 
of P good on top of the basic par­
benign and Byzan­
system model  with 
synchronous 
tially 
tine faults 
as the 
ally ensures that each correct 
The predicate 
has been proposed 
the same guarantees 
P good, but addition
in [7]. 
Peons provides 
the same set of messages. In the benign 
predicate 
process receives 
fault model (Le., b = 0), this predicate 
using the implementation 
sume that no crash occurs in good periods. In the Byzantine 
fault model (i.e., 
have been proposed 
of P good described 
of Peons 
in [7] if we as­
[17, 2]: 
can be implemented 
b  -=I=-0), several implementations 
2 Model and Definitions 
2.1 System Model 
ous). We 
and bad 
arbitrary 
algorithms 
faith­
from Byzantine 
honest processes 
We consider  a variant 
(during 
(during 
processes [12], that exhibit 
can be correct 
eventually 
or faulty. An 
crashes, and is cor­
we 
in our system, 
of a partially synchronous 
system alternates 
sys­
between 
good 
which the system is synchronous) 
which the system is asynchron
that execute 
tem [7]: we assume that the 
periods 
periods 
differentiate 
fully, 
behavior. 
Honest processes 
honest process is faulty if it 
rect otherwise. Among the n processes 
and at most f faulty 
assume at most b Byzantine 
processes 
(honest) 
The set of all processes is  denoted 
II, the set of honest processes by 1{ and the set of correct 
processes 
Round Model. Distributed 
a sequence 
message to a subset 
function S;, and at the 
state according 
input the vector of messages 
current 
round r can only be received 
can be expressed as 
of rounds. In each round r, a process p sends a 
in round r (rounds 
end of this round, computes 
a new 
to a "transition" 
T; that takes as 
at round r and its 
Note that this implies that a message sent in 
it received 
to a "sending" 
algorithms 
of processes 
are closed). 
according 
processes. 
function 
state. 
by C. 
by 
Honest processes 
cannot be impersonat
ed: if an honest 
v from p in round r, and p is honest, 
then 
process receives 
p sent v in round r. The state of process p in round r is de­
noted by s;; the message sent by  an honest2 process is de-
sense. 
Peons(r) == Pgood(r) 1\ Vp, q E C: J1; =  
Based on these definition
s, we define the notion of a 
good phase. A phase is  a sequence 
of rounds. A  good 
phase ¢ of k rounds is defined as a phase such that Peons 
holds in the first round, and P good holds in the remaining 
k -1 rounds. 
2.2 Unifying Byzantine Faults 
faults  have 
Two  different 
models for Byzantine 
been 
considered in literature 
[7]: (1) authenticated 
faults, where messages can be signed by  the sending 
pro­
cess (with the assumption that signatures cannot be forged 
by any other process), 
is no mechanism for signatures (but the receiver 
sage knows the 
and (2) Byzantine 
of the sender).3 
identity 
of a mes­
Byzantine 
faults, where  there 
consensus algorithm 
As shown in [17], the predicate 
Peons allows the uni­
fication of these two fault models: (i) Peons allows us to 
that is the same for 
express a generic 
both fault models, and (ii) Peons can be implemented 
out of 
P good in the two fault models. The implementation 
in the 
Byzantine 
authenticated 
fault model is simpler and requires 
two rounds; 
three rounds are needed in the Byzantine fault 
model. To summarize, 
scribe 
tween authenticated 
Therefore, 
both fault models, except if explicit
Peons allows us to de­
difference be­
faults. 
and Byzantine 
faults 
for 
in the paper we use the term Byzantine 
the predicate 
Byzantine 
ly mentioned. 
consensus algorithms  without making 
faults 
2Note that referring 
to the state of a Byzantine 
process 
does not 
make 
signed messages, and (2) Byzantine 
faults with oral messages. 
3In [12], these models are respectively 
called (1) Byzantine 
faults 
with 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
344 
DSN 2010: Riitti et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 13:58:22 UTC from IEEE Xplore.  Restrictions apply. 
with the initial 
Process State. The state of each process 
three variables. 
rithm 1 do not need all three variables. 
p is defined by 