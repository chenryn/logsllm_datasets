 **Glide Version** :
4.11
**Integration libraries** :
No
**Device/Android Version** :
Mi6, Android 9
**Issue details / Repro steps / Use case background** :
I'm trying to load images from compressed files.
From the `ModelLoader` docs:
> By default, Glide provides image decoders for two types of data:
>
>   1. `InputStream`
>   2. `ByteBuffer`
>
So I think I don't have to add a `ModelLoader` if I can get an `InputStream`
out of something.
Then I get the `InputStream` from a zip file object using `getInputStream`
(which is a subclass of `InputStream`)
    private class ZipFileInputStream extends InputStream
But Glide doesn't acknowledge that it is an `InputStream`.
**Glide load line /`GlideModule` (if any) / list Adapter code (if any)**:
In fragment:
    // From https://github.com/bumptech/glide/issues/1208,
    // I think I should use 1 instance of Glide and pass it around
    glide = Glide.with(this)
`RecyclerView`'s adapter:
    class FolderAdapter(val glide: RequestManager)
and in `onBindViewHolder`:
    CoroutineScope(Dispatchers.IO).launch {
    	val zis = getZipInputStream()
        withContext(Dispatchers.Main) {
    		glide.load(zis).into(holder.img)
        }
    }
**Layout XML** :
**Stack trace / LogCat** :
    E/GlideExecutor: Request threw uncaught throwable
        com.bumptech.glide.Registry$NoModelLoaderAvailableException: Failed to find any ModelLoaders registered for model class: class java.util.zip.ZipFile$ZipFileInflaterInputStream