title:Vantage: optimizing video upload for time-shifted viewing of social
live streams
author:Devdeep Ray and
Jack Kosaian and
K. V. Rashmi and
Srinivasan Seshan
Vantage: Optimizing video upload for time-shi(cid:28)ed viewing of
social live streams
Devdeep Ray
Carnegie Mellon University
PI:EMAIL
K. V. Rashmi
Carnegie Mellon University
PI:EMAIL
Jack Kosaian
Carnegie Mellon University
PI:EMAIL
Srinivasan Seshan
Carnegie Mellon University
PI:EMAIL
ABSTRACT
Social live video streaming (SLVS) applications are becoming in-
creasingly popular with the rise of platforms such as Facebook-
Live, YouTube-Live, Twitch and Periscope. A key characteristic that
diﬀerentiates this new class of applications from traditional live
streaming is that these live streams are watched by viewers at dif-
ferent delays; while some viewers watch a live stream in real-time,
others view the content in a time-shifted manner at diﬀerent delays.
In the presence of variability in the upload bandwidth, which is
typical in mobile environments, existing solutions silo viewers into
either receiving low latency video at a lower quality or a higher
quality video with a signiﬁcant delay penalty, without accounting
for the presence of diverse time-shifted viewers.
In this paper, we present Vantage, a live-streaming upload so-
lution that improves the overall quality of experience for diverse
time-shifted viewers by using selective quality-enhancing retrans-
missions in addition to real-time frames, optimizing the encoding
schedules to balance the allocation of the available bandwidth be-
tween the two. Our evaluation using real-world mobile network
traces shows that Vantage can provide high quality simultaneously
for both low-latency and delayed viewing.
For delayed viewing, Vantage achieves an average improvement
of 19.9% over real-time optimized video streaming techniques across
all the network traces and test videos, with observed gains of up to
42.9%. These beneﬁts come at the cost of an average drop in real-
time quality of 3.3%, with a maximum drop of 7.1%. This represents
a signiﬁcant performance improvement over current techniques
used for SLVS applications, which primarily optimize the video
upload for real-time viewing.
CCS CONCEPTS
• Information systems → Multimedia streaming;
KEYWORDS
Video delivery, adaptive bitrate algorithms, live streaming, VOD
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior speciﬁc permission and/or a
fee. Request permissions from permissions@acm.org.
SIGCOMM ’19 August 19–23, 2019 Beijing, China
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-5956-6/19/08. . . $15.00
https://doi.org/10.1145/3341302.3342064
ACM Reference Format:
Devdeep Ray, Jack Kosaian, K. V. Rashmi, and Srinivasan Seshan. 2019.
Vantage: Optimizing video upload for time-shifted viewing of social live
streams. In SIGCOMM ’19: 2019 Conference of the ACM Special Interest Group
on Data Communication, August 19–23, 2019, Beijing, China. ACM, New York,
NY, USA, 14 pages. https://doi.org/10.1145/3341302.3342064
1 INTRODUCTION
Mobile live video traﬃc has grown signiﬁcantly over the last
decade [14]. This growth has been propelled by improvements
in mobile camera technology, computing power, and wireless tech-
nology, which enables the capture, encoding, and transmission
of high-quality video in real-time from mobile devices. Applica-
tions for video-conferencing and live broadcasting have become
ubiquitous on mobile devices today. Social live video streaming
(SLVS) applications like Facebook Live [1], YouTube Live [11], and
Periscope [7], are a new and increasingly popular class of applica-
tions that bring the power of live streaming to individuals.
A unique feature that diﬀerentiates SLVS platforms from tradi-
tional live video applications is the ability to view real-time, time-
shifted, and archival versions of a single stream. SLVS applications
enable viewers to interact with broadcasters via comments and
reactions in real-time [40, 41], and also archive the video to enable
viewing after the live streaming session has ended. Furthermore,
platforms like Hangouts-on-air [2] and Facebook Live [4] allow mul-
tiple users to broadcast simultaneously on a single live-stream. For
viewers using interactive features such as real-time comments, as
well as broadcasters taking part in collaborative broadcasting [2, 4],
it is critical to deliver the video stream at a low-latency, whereas a
higher streaming latency is acceptable for the other viewers.
In contrast, traditional live video streaming applications target
a single viewing delay. In video conferencing applications, par-
ticipants require low-latency for interactivity, while viewers of a
broadcast event can typically tolerate tens of seconds of delay. Ex-
isting approaches for handling network bandwidth variations are
tailored for one particular viewing delay. In low-latency applications
like videoconferencing, video bitrate is chosen to closely follow the
available bandwidth in order to ensure that frames are received
before their real-time playback deadline, at the expense of lower
quality during periods of low bandwidth. On the other hand, when
higher delays are acceptable, applications use buﬀers to absorb
network variations and the video bitrate is chosen to match the av-
erage bandwidth. This results in higher video quality and smoother
playback at the cost of higher latency.
SIGCOMM ’19 August 19–23, 2019 Beijing, China
Devdeep Ray, Jack Kosaian, K. V. Rashmi, Srinivasan Seshan
Due to lack of better alternatives, current SLVS platforms make
the same tradeoﬀs between latency and quality as traditional live
streaming, despite the diversity of viewing delays. Operating at a
single point on the latency-quality tradeoﬀ spectrum is inadequate
for providing high quality-of-experience (QoE) for all the viewers
of SLVS streams. The problem is further exasperated by the fact
that SLVS streams are commonly initiated from mobile devices,
which have particularly unpredictable network behavior [44].
In this paper, we present Vantage, a live video upload solution
explicitly designed to address the time-shifted viewing characteris-
tic of SLVS in the face of bandwidth variations. Vantage exploits
the variability of the upload path to it’s advantage: periods with
high bandwidth can be used to correct for a loss in quality due to
previous periods of network impairment. Vantage optimizes the
video upload process across diﬀerent time-shifted viewing delays
by using quality-enhancing retransmissions in conjunction with a
low-latency video stream. Vantage formulates bitrate selection and
transport scheduling as a joint optimization problem that maxi-
mizes the video quality across the diverse viewing delays.
Several challenges need to be addressed to make the use of
quality-enhancing retransmissions practical and eﬀective: (1) allo-
cating bandwidth and scheduling transmissions for the real-time
and retransmitted frames such that the QoE is optimized for all
users, (2) handling the computational overheads and latencies asso-
ciated with complex optimization decisions and video compression,
and (3) dealing with the network unpredictability and its impact on
scheduling decisions. Vantage incorporates several system design
choices like approximations, pipelining, and fallback mechanisms to
handle the challenges related to optimization and unpredictability.
We have implemented Vantage and evaluated it on a wide vari-
ety of mobile network traces [31] and videos [10]. Our evaluation
shows that Vantage achieves high quality for low-latency and time-
shifted viewing simultaneously. Speciﬁcally, for delayed viewing,
Vantage achieves an average improvement of 19.9% over real-time
optimized streaming techniques across all the network traces and
test videos, with observed gains of up to 42.9%. The quality achieved
by Vantage for delayed viewing is within 7.7% on average of the
maximum quality achievable by delay tolerant techniques. These
beneﬁts come at the cost of an average drop 3.3% in the real-time
quality, with a maximum drop of 7.1%. These results demonstrate
the signiﬁcant performance beneﬁts of using Vantage over current
techniques used for SLVS applications, which primarily optimize
the video upload for real-time viewing.
2 BACKGROUND AND OPPORTUNITY
In this section, we discuss SLVS architectures and the network
variability observed on mobile upload paths used in SLVS.
2.1 SLVS Architectures
We describe common designs and practices employed by four of
the most widely used SLVS platforms as of 2019: Facebook Live,
YouTube Live, Twitch, and Periscope. Our descriptions are informed
by recent studies [40] and industry engineering material [12, 36].
Live video is captured and encoded by a broadcaster’s device
(e.g., a mobile phone) and uploaded via RTMP [8] or WebRTC [9]
to an ingestion point (a point-of-presence or a data center server),
where the upload path connection is terminated. We refer to this
ingestion point as the upload endpoint. The video is then re-encoded
at various bitrates and handed oﬀ to a content delivery network,
which delivers the video to viewers using a variety of techniques
that have been widely studied in the past [23, 24, 30]. This paper
focuses on improvements for the upload path of SLVS applications.
2.2 Time-shifted viewing in SLVS
SLVS diﬀers from traditional live-streaming in that it enables
viewing of the same video stream at diﬀerent delays. Traditional
live streaming applications are tailored either for interactive, low-
latency streaming (e.g., Skype and Hangouts) or for high quality
viewing at larger delays (e.g., ESPN and CNN). On the other hand,
SLVS platforms enable both real-time and delayed viewing of the
same stream. We term this characteristic “time-shifted viewing.”
Time-shifted viewing takes a number of forms within an SLVS
stream. Some viewers interact with broadcasters via comments
and reactions, and thus require real-time latencies [40, 41]. SLVS
platforms also archive video streams to allow for viewing after
the live stream has ended, and also allow viewers to seek back to
older segments during the live stream and watch the video with a
time-shifted delay. Moreover, collaborative broadcasting platforms
like Hangouts-on-air [2] and Facebook Live [4] allow collaborative
streaming where the co-broadcasters have stronger low latency
requirements compared to the viewers.
In summary, SLVS streams have audiences with a wide variety of
viewing delays, and thus have varying degrees of latency tolerance.
This presents a new and important dimension for improving the
quality of experience of SLVS platforms.
2.3 Variability in the upload path
Many SLVS broadcasts are initiated from mobile devices over cel-
lular networks like LTE, which experience frequent bandwidth
ﬂuctuations [44]. This forces the broadcaster’s device to either
adapt the bitrate of encoded video (i.e., alter quality), or use large
sender side buﬀers (i.e., alter the delay of transmission).
To illustrate the variability of bandwidth in mobile uplinks, we
analyzed the network traces from the Mahimahi [31] project. Across
the eight upload traces, we made the following observations:
(1) Periods of low/high bandwidth are common: 17.1% and
17.4% of the time, upload bandwidth is 50% or less and 150% or
more than the average for a particular trace, respectively.
(2) Periods of low/high bandwidth are short-lived: Periods
with less than 50% and more than 150% of the average band-
width last, on average, 789 ms and 809 ms, respectively.
(3) More bandwidth is gained during high periods than is
lost during low periods: In ﬁve out of the eight traces, we
ﬁnd that there is at least 1.25× additional bandwidth when the
bandwidth is above 150% of the average than the amount lost
when bandwidth drops below 50% of the average.
These observations suggest that periods of high bandwidth can
be exploited to improve the quality of frames that were previously
aﬀected by periods of low bandwidth. In the next section, we show
how an SLVS upload solution can make use of these properties to
improve the QoE for all time-shifted viewers.
Vantage: Optimizing video upload for time-shi(cid:28)ed viewing of social live streams
SIGCOMM ’19 August 19–23, 2019 Beijing, China
2c. The dark green region in the middle plot (labeled “Real-Time”)
represents the real-time video quality. The dark blue region in the
bottom plot (labeled “10 second delay”) shows the improvement in
video quality for delayed viewing over the real-time video quality
(shown in light green for reference). Figure 2d shows the average
quality for time-shifted viewing between t = 0 s (i.e., real-time)
and t = 12 s for video uploaded by real-time optimized, delay-
optimized, and time-shift-aware upload strategies. Compared to
real-time optimized streaming, using Vantage improves the SSIM
for delayed viewing by 9.4%, while causing a drop of only 5.2%
in the SSIM of the real-time stream. Note that the drop in SSIM
only occurs for the high-quality frames, which still results in good
real-time quality as opposed to delay-optimized streaming, where
real-time viewing is not feasible. We note here that although we
plot the average SSIM in this case to demonstrate the beneﬁts of
time-shift optimized streaming, for our evaluation, we use a uniﬁed
metric (described in Section 5.1.1) that combines the SSIM of the
video frames and the stalling events into a single metric.
Thus, by making use of quality-enhancing retransmissions and
allocating bandwidth between diverse time-shifted viewing delays,
a SLVS upload solution can deliver high QoE to viewers across a
spectrum of viewing delays.
3.2.3 Key challenges. While the idea of sending quality-
enhancing retransmissions by exploiting periods of high bandwidth
during the live streaming session is simple and promising, there
are several critical challenges in designing a live streaming upload
solution based on this idea.
Optimal, eﬃcient bandwidth allocation in real time. As
described in Section 3.2, allocating bandwidth between real-time
frames and quality-enhancing retransmissions can be formulated
and solved as an optimization problem. However, ﬁnding an op-
timal solution to this problem may take a non-trivial amount of
time, making it challenging to design an optimization-based system
involving real-time streaming.
Bitrate-SSIM curve estimation. The bitrate-SSIM curves of
frames inform the allocation of bandwidth between real-time frames
and quality-enhancing retransmissions. However, the bitrate-SSIM
curve of a video frame is not available before the frame is encoded,
and thus must be estimated for performing bandwidth allocation.
Estimating bitrate-SSIM curves is challenging as they depend on a
variety of properties of each frame and the preceding frames.
Mitigating error in bandwidth estimation. Allocating band-
width between real-time frames and quality-enhancing retrans-
missions requires having an estimate of the future bandwidth. Ac-
curately estimating future bandwidth is challenging in its own
right, and thus a system allocating bandwidth between real-time
frames and quality-enhancing retransmissions must be robust in
it’s abilities to adapt to inaccuracies in bandwidth estimation.
In sections 5.2.7 and 5.2.6, we show that addressing these chal-
lenges are critical for improving the QoE across all viewers for
time-shifted viewing of live video streams.
4 DESIGN OF VANTAGE
In this section, we describe the design of Vantage and how Vantage
overcomes the challenges outlined in Section 3.2.3 in order to deliver
high QoE to diverse time-shifted viewers.
;%"#$
#$.")"."
!"#$%"
%":
;%"#$