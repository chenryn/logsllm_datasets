### 4.2 Detailed Analysis of Network Traffic

#### 4.2.1 Identifying and Analyzing Host Traffic

To begin, we use the `rwuniq` command to identify the destination IP (dIP) with the highest number of records. In this case, the IP address `192.168.5.138` has 12 records.

```bash
$ rwuniq --fields=dip
dIP| Records|
192.168.5.138| 12|
```

Next, we look for traffic associated with this host, sorting the results by start time. The following command and sorted results illustrate this process:

```bash
$ rwfilter sample.rw --type=all \
--any-address=192.168.5.138 --protocol=6 --packets=4- \
--pass=stdout \
| rwsort --fields=stime \
| rwcut --fields=sip,sport,dip,dport,stime,etime
sIP|sPort| dIP|dPort| sTime| eTime|
203.0.113.199| 21| 192.168.5.138|49995|22:11:09.855|22:11:10.122|
192.168.5.138|49750| 203.0.113.199| 21|22:11:56.398|22:11:56.691|
203.0.113.199| 21| 192.168.5.138|49750|22:11:56.402|22:11:56.691|
192.168.5.138|49752| 203.0.113.199| 21|22:12:37.163|22:12:37.419|
203.0.113.199| 21| 192.168.5.138|49752|22:12:37.165|22:12:37.419|
192.168.5.138|49753| 203.0.113.199| 21|22:12:37.581|22:12:37.869|
203.0.113.199| 21| 192.168.5.138|49753|22:12:37.583|22:12:37.869|
192.168.5.138|49754| 203.0.113.199| 21|22:12:45.473|22:12:45.721|
203.0.113.199| 21| 192.168.5.138|49754|22:12:45.475|22:12:45.721|
192.168.5.138|49758| 203.0.113.199|32879|22:12:50.581|22:12:50.869|
203.0.113.199|32879| 192.168.5.138|49758|22:12:50.880|22:12:50.902|
192.168.5.138|49758| 203.0.113.199|32879|22:16:37.581|22:16:37.869|
203.0.113.199|32879| 192.168.5.138|49758|22:16:37.892|22:16:37.922|
192.168.5.138|49758| 203.0.113.199|32879|22:26:37.581|22:26:37.869|
203.0.113.199|32879| 192.168.5.138|49758|22:26:37.583|22:26:37.869|
192.168.5.138|49755| 203.0.113.199| 21|22:31:07.124|22:31:07.425|
203.0.113.199| 21| 192.168.5.138|49755|22:31:07.126|22:31:07.425|
192.168.5.138|49995| 203.0.113.199| 21|22:31:09.853|22:31:10.122|
```

These results indicate a data channel established over port 21, which is typical for FTP (File Transfer Protocol). The high-port-to-high-port traffic suggests passive mode FTP. In active mode, the data connection would be from the client's high port to the server's port 20.

#### 4.2.2 Anomalies in Remote File Services

Some anomalies in remote file services include:

- **Servers Acting as Clients**: FTP servers can also act as clients. This is observed in the sample network with the address `203.0.113.199`.
- **No Response from the Server (Timeout)**: A timeout does not necessarily mean the server is not a remote file access server. Some firewalls may only allow specific addresses. For example, some servers on the sample network did not allow connections, possibly because they only serve traffic from their own network.
- **Control Channel Only Traffic (for FTP)**: Sometimes, a control channel remains open without an accompanying data channel if keep-alive packets are being used. Brute force attempts against an FTP server will also show up as control-channel-only traffic.

#### 4.2.3 Validated Remote File Services

After validation, the following servers were identified on the sample network:

| Proto. | Internal Port | External IP | External Port | External Name | Comments |
|--------|---------------|-------------|---------------|---------------|----------|
| 6      | 22            | 203.0.113.36| *             | *             | SSH server |
| 6      | 21            | 203.0.113.71| *             | ftp1.st.example.org | FTP server |
| 6      | 22            | 203.0.113.199| *             | *             | SSH server |

### 4.3 Profiling Other Services

#### 4.3.1 Understanding the Service

Profiling a specific service requires understanding its protocol, ports, and architecture. For example, NTP (Network Time Protocol) uses UDP port 123 and has a client-server architecture. It typically involves small packets of around 120 bytes, with regular timing.

#### 4.3.2 The Process

1. **Filter and Sort by Port and Protocol**:
   - Filter by port numbers and protocols to identify common services.
   - Example command and results:

   ```bash
   $ rwfilter sample.rw --type=out \
   --sport=1-19,24,26-52,54-499,501-1023 \
   --pass=stdout \
   | rwstats --fields=sport --percentage=1
   INPUT: 2550 Records for 378 Bins and 2550 Total Records
   OUTPUT: Top 6 bins by Records (1% == 25)
   sPort| Records| %Records| cumul_%|
   123| 446| 17.490196| 39.333333|
   445| 187| 7.333333| 46.666667|
   3| 60| 2.352941| 49.019608|
   1| 51| 2.000000| 51.019608|
   2| 38| 1.490196| 52.509804|
   ```

2. **Identify Requested Services**:
   - Change "source port" to "destination port" to see which services are requested from external servers.
   - Example command and results:

   ```bash
   $ rwfilter sample.rw --type=out \
   --dport=1-19,24,26-52,54-499,501-1023 \
   --pass=stdout \
   | rwstats --fields=dport --percentage=1
   INPUT: 4034 Records for 77 Bins and 4034 Total Records
   OUTPUT: Top 5 bins by Records (1% == 40)
   dPort| Records| %Records| cumul_%|
   123| 2965| 73.500248| 73.500248|
   771| 229| 5.676748| 79.176996|
   778| 180| 4.462072| 83.639068|
   843| 80| 1.983143| 85.622211|
   81| 59| 1.462568| 87.084779|
   ```

3. **Examine Alternative Protocols**:
   - Look for significant traffic on alternative protocols.
   - Example command and results:

   ```bash
   $ rwfilter sample.rw --type=out \
   --protocol=1-5,7-16,18-46,48-49,52- \
   --pass=stdout \
   | rwstats --fields=protocol --percentage=1
   INPUT: 2003 Records for 1 Bin and 2003 Total Records
   OUTPUT: Top 1 bins by Records (1% == 20)
   pro| Records| %Records| cumul_%|
   1| 2003|100.000000|100.000000|
   ```

4. **Profile Servers and Clients**:
   - Filter for outbound traffic from the source port used by servers.
   - Example command and results for NTP:

   ```bash
   $ rwfilter sample.rw --type=out \
   --sport=123 --protocol=17 \
   --pass=stdout \
   | rwstats --fields=sip --percentage=1 --bytes
   INPUT: 446 Records for 4 Bins and 51908 Total Bytes
   OUTPUT: Top 3 bins by Bytes (1% == 519)
   sIP| Bytes| %Bytes| cumul_%|
   203.0.113.199| 24852| 47.877013| 47.877013|
   203.0.113.36| 19684| 37.920937| 85.797950|
   203.0.113.222| 7296| 14.055637| 99.853587|
   ```

#### 4.3.3 Points to Remember

- **Servers Initiating Client Requests**: Some services, like DNS and SMTP, have servers initiating client requests.
- **Traffic Volume Percentage**: List assets that make up a certain percentage of the traffic volume.
- **Record Keeping**: Record internal and external addresses, ports, protocols, and any specific external addresses or DNS names.

#### 4.3.4 Validation

- **Compare New Addresses**: Compare new addresses with previously profiled services.
- **Validation Methods**:
  - **Domain Name Lookup**
  - **Accessing the Service**
  - **Telnetting to the Address**
  - **Responding to Other Servers**

#### 4.3.5 Anomalies

- **Historical Behavior**: Old or unpatched hosts may behave differently.
- **Multiple Services on a Single Box**: Multiple services can run on a single server.
- **General Protocol Anomalies**: Suspicious activities like tunneling or legitimate new applications reusing outdated protocols.
- **Service Running Across Multiple Machines**: Indicates load balancing or virtual machines.
- **Unconventional Devices**: Non-PC devices running services, such as photocopiers sending emails.

#### 4.3.6 Results

The following asset was found and not previously listed in the profile:

| Proto. | Internal Port | External IP | External Port | External Name | Comments |
|--------|---------------|-------------|---------------|---------------|----------|
| 6      | *             | 203.0.113.20| *             | 123           | ntp.*    | NTP Client |

### 4.4 Cataloging Remaining Active Assets

By this point, most common services should be cataloged. To find any remaining active assets, compare the list of hosts in the current profile with the list of active assets using the following command:

```bash
$ rwsettool --difference talkers.set profiled_assets.set \
--output-path=not_profiled.set
$ rwsetcat not_profiled.set --count
10
```

This result shows that there are 10 hosts that have not yet been profiled. Expand the time frame for the sample data set to at least one month to ensure accurate results. Profile each remaining host individually.

#### 4.4.1 The Process

- **Expand Data Set**: Use at least one monthâ€™s worth of data.
- **Find Additional Talkers**: Exclude already profiled addresses to speed up the query.
- **Example Commands and Results**:

  ```bash
  $ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
  --type=out,outweb \
  --not-sipset=talkers.set --protocol=6 --packets=4- --ack-flag=1 \
  --pass=stdout \
  | rwset --sip-file=tcp_talkers.set
  $ rwsetcat tcp_talkers.set --count
  6
  $ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
  --type=out \
  --not-sipset=talkers.set --protocol=0-5,7- \
  --pass=stdout \
  | rwset --sip-file=other_talkers.set
  $ rwsetcat other_talkers.set --count
  3
  $ rwsettool --union tcp_talkers.set other_talkers.set \
  --output-path=expanded_talkers.set
  $ rwsetcat expanded_talkers.set --count
  6
  ```

Combine the list of new active assets with those not already profiled. For the sample network, there were 16 leftover assets. Profile these by examining the traffic generated by each address.

- **Example Command and Results**:

  ```bash
  $ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
  --type=out,outweb \
  --saddress=203.0.113.22 \
  --pass=stdout \
  | rwstats --fields=dport,sport,protocol --count=5 --bytes
  INPUT: 730 Records for 7 Bins and 64220 Total Bytes
  OUTPUT: Top 5 Bins by Bytes
  dPort| sPort|pro| Bytes| %Bytes| cumul_%|
  32986| 3389| 6| 18772| 29.230769| 29.230769|
  32988| 3389| 6| 18468| 28.757396| 57.988166|
  32987| 3389| 6| 10564| 16.449704| 74.437870|
  32989| 3389| 6| 8056| 12.544379| 86.982249|
  32982| 3389| 6| 2812| 4.378698| 91.360947|
  ```

The machine in the sample network is using Remote Desktop Protocol (RDP) through port 3389. Create a "miscellaneous" section in the profile for these assets. Validate the findings before adding them to the profile.

- **Validation for Clients**:
  - Resolve the domain name.
  - Check the traffic pattern, timing, and packet size.

### Conclusion

This document provides a comprehensive guide to identifying, analyzing, and profiling network traffic. By following these steps, you can effectively catalog and validate all active assets on your network.