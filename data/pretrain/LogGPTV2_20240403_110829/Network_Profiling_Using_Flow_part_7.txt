| rwuniq --fields=dip
dIP| Records|
192.168.5.138| 12|
Then look for traffic associated with that host. Sort the results by start time. The command and
sorted results are in the following example.
$ rwfilter sample.rw --type=all \
--any-address=192.168.5.138 --protocol=6 --packets=4- \
--pass=stdout \
| rwsort --fields=stime \
| rwcut --fields=sip,sport,dip,dport,stime,etime
sIP|sPort| dIP|dPort| sTime| eTime|
203.0.113.199| 21| 192.168.5.138|49995|22:11:09.855|22:11:10.122|
192.168.5.138|49750| 203.0.113.199| 21|22:11:56.398|22:11:56.691|
203.0.113.199| 21| 192.168.5.138|49750|22:11:56.402|22:11:56.691|
192.168.5.138|49752| 203.0.113.199| 21|22:12:37.163|22:12:37.419|
203.0.113.199| 21| 192.168.5.138|49752|22:12:37.165|22:12:37.419|
192.168.5.138|49753| 203.0.113.199| 21|22:12:37.581|22:12:37.869|
203.0.113.199| 21| 192.168.5.138|49753|22:12:37.583|22:12:37.869|
192.168.5.138|49754| 203.0.113.199| 21|22:12:45.473|22:12:45.721|
203.0.113.199| 21| 192.168.5.138|49754|22:12:45.475|22:12:45.721|
192.168.5.138|49758| 203.0.113.199|32879|22:12:50.581|22:12:50.869|
203.0.113.199|32879| 192.168.5.138|49758|22:12:50.880|22:12:50.902|
192.168.5.138|49758| 203.0.113.199|32879|22:16:37.581|22:16:37.869|
203.0.113.199|32879| 192.168.5.138|49758|22:16:37.892|22:16:37.922|
192.168.5.138|49758| 203.0.113.199|32879|22:26:37.581|22:26:37.869|
203.0.113.199|32879| 192.168.5.138|49758|22:26:37.583|22:26:37.869|
192.168.5.138|49755| 203.0.113.199| 21|22:31:07.124|22:31:07.425|
203.0.113.199| 21| 192.168.5.138|49755|22:31:07.126|22:31:07.425|
192.168.5.138|49995| 203.0.113.199| 21|22:31:09.853|22:31:10.122|
These results show a data channel established over port 21 and high-port-to-high-port traffic,
indicating a passive mode. Active-mode FTP sessions will have a similar pattern, except instead
CMU/SEI-2012-TR-006 | 41
of high-port-to-high-port traffic, the data connection will have client-high-port-to-server-port-20
traffic.
5.6.3 Anomalies
Some of the anomalies for remote file services are listed below.
• servers acting as clients
FTP servers can also be FTP clients. This is seen in the case of address 203.0.113.199 on the
sample network.
• no response from the server (timeout)
A timeout does not necessarily mean it is not a remote file access server. Some firewalls may
be configured to allow this type of traffic only if it is from specific addresses. In fact, this is
likely the reason that some of the servers on the sample network did not allow a connection;
they may only serve traffic from their own network.
• control channel only traffic (for FTP)
Sometimes a control channel will stay open without an accompanying data channel if keep-
alive packets are being used. These will show in traffic as small packets at regular intervals.
Also, brute force attempts against an FTP server will show up as control-channel-only
traffic.
5.6.4 Results
Three servers on the sample network were left after validation—one FTP server and two SSH
servers, which are listed in Table 20.
Table 20: Validated Remote File Services Assets for the Sample Network
Proto. Internal Port External IP External Port External Name Comments
203.0.113.36
6 22 * * * SSH server
203.0.113.71 – ftp1.st.example.org
6 21 * * * FTP server
203.0.113.199
6 22 * * * SSH server
CMU/SEI-2012-TR-006 | 42
5.7 Other Services
Depending on the business’s needs, a network may be running other services vital to the
organization that have not yet been profiled. Or, there may have been a large amount of another
type of traffic during an initial look at the top services on the network. The following steps can be
used to generally profile other services.
Profiling a specific service depends on understanding how that service works. Knowledge of the
protocol, ports, and architecture (client-server versus peer-to-peer) are all helpful to gain a general
understanding of the typical packet flow for that service. For example, the Network Time Protocol
(NTP) is carried over UDP port 123 and has a client-server architecture. It typically uses small
packets of around 120 bytes, but the packet size can vary depending on the options used. The
timing of the packets is fairly regular, but not necessarily an exact pattern.
The Requests for Comments (RFCs) from the IETF9 are a good resource for information on a
specific protocol, but they are often too detail-oriented for the purpose of getting a basic
understanding of a protocol. Vendor websites and public help forums often have clear, in-depth
explanations of a particular service or protocol.
5.7.1 The Process
In general, the process for profiling a specific service on a network starts with filtering by port
number and protocol. If the service has a client-server architecture, profile the clients separately
from the servers. The goal is to find out which hosts on the internal network are using which ports
or protocols.
1. In Section 3, the sample data set was validated in part by looking at the most common services
in use. Do the same process for other services, but leave out services that have already been
profiled. Sort the results by the most common port in use for both clients and servers. An example
of the command to validate other services and the sorted results follow.
$ rwfilter sample.rw --type=out \
--sport=1-19,24,26-52,54-499,501-1023 \
--pass=stdout \
|rwstats --fields=sport --percentage=1
INPUT: 2550 Records for 378 Bins and 2550 Total Records
OUTPUT: Top 6 bins by Records (1% == 25)
sPort| Records| %Records| cumul_%|
123| 446| 17.490196| 39.333333|
445| 187| 7.333333| 46.666667|
3| 60| 2.352941| 49.019608|
1| 51| 2.000000| 51.019608|
2| 38| 1.490196| 52.509804|
2. These results show several services being “served” from the internal network that have not yet
been profiled. Changing “source port” to “destination port” will show which services are
requested from external servers. The following example shows this change to “destination port”
and the results of that command.
9 http://www.ietf.org/rfc.html
CMU/SEI-2012-TR-006 | 43
$ rwfilter sample.rw --type=out \
--dport=1-19,24,26-52,54-499,501-1023 \
--pass=stdout \
| rwstats --fields=dport --percentage=1
INPUT: 4034 Records for 77 Bins and 4034 Total Records
OUTPUT: Top 5 bins by Records (1% == 40)
dPort| Records| %Records| cumul_%|
123| 2965| 73.500248| 73.500248|
771| 229| 5.676748| 79.176996|
778| 180| 4.462072| 83.639068|
843| 80| 1.983143| 85.622211|
81| 59| 1.462568| 87.084779|
The above results include several client services that also need to be profiled.
3. Look at the most used protocols other than TCP, UDP, GRE, and ESP (used in previous
sections) to see if there is any significant traffic on alternative protocols. The following example
shows the command and results for looking at these protocols.
$ rwfilter sample.rw --type=out \
--protocol=1-5,7-16,18-46,48-49,52- \
--pass=stdout \
|rwstats --fields=protocol --percentage=1
INPUT: 2003 Records for 1 Bin and 2003 Total Records
OUTPUT: Top 1 bins by Records (1% == 20)
pro| Records| %Records| cumul_%|
1| 2003|100.000000|100.000000|
The above ICMP (protocol 1) traffic should be examined further.
4. Get servers by filtering for outbound traffic from the (source) port used by servers for the
specific service. For example, port 123 (Network Time Protocol, or NTP) is one of the services
that needs to be profiled for the sample network. NTP uses the UDP IP protocol. The following
example shows the filter and results.
$ rwfilter sample.rw --type=out \
--sport=123 --protocol=17 \
--pass=stdout \
| rwstats --fields=sip --percentage=1 --bytes
INPUT: 446 Records for 4 Bins and 51908 Total Bytes
OUTPUT: Top 3 bins by Bytes (1% == 519)
sIP| Bytes| %Bytes| cumul_%|
203.0.113.199| 24852| 47.877013| 47.877013|
203.0.113.36| 19684| 37.920937| 85.797950|
203.0.113.222| 7296| 14.055637| 99.853587|
Each of these internal IP addresses has already been cataloged as a different type of server, but
their NTP usage will be noted in the final profile. Do this for each of the other services found
above, as well as for clients (using the destination port instead of the source port) and other
protocols (leave out the port altogether). If the resulting assets are already listed in the profile,
simply note their other activities as a separate line.
Here are some points to remember while profiling other common services:
CMU/SEI-2012-TR-006 | 44
• For some services, servers also initiate client requests.
DNS and SMTP both have servers initiating client requests as part of the protocol. Peer-to-
peer hosts will look like both servers and clients.
• List only assets making up a certain percentage of the traffic volume.
For networks using gateways or proxy/NAT servers, choose a minimum percentage between
1 and 5 (in bytes). Otherwise, try to profile directly connected workstations separately from
the rest of the machines based on their low byte volumes.
• Keep good records.
Record the internal address, internal and external ports, protocol, and any specific external
addresses the host is talking to, as well as any DNS names associated with the hosts. Also,
record any protocol-specific aspects, such as active or passive for FTP clients. Remember to
include notes on security or configuration concerns.
5.7.2 How to Validate Findings
Some services are more difficult to validate than others, but this section presents some general
ways to validate the findings.
Start by comparing the list of new addresses with the lists from the services already profiled.
Remove or correct hosts that are already listed in previous sections. A good practice is to
categorize a host based on the service that makes up most of its traffic. Look for VPNs and
gateways, which will show up in many of the services profiled.
Servers hosted within the network are often easier to validate than clients because the validation
can rely on external sources. For servers, use the following methods to validate:
• looking up domain name
Externally facing servers usually have a domain name associated with their IP address.
Often, this name hints at what kind of service is operating on the machine. For example, the
sample network’s name servers each started with ns, ns1, and ns2.
• accessing the service
Try to access the service in whatever way is appropriate. For web servers, navigate to the
server with a browser. For DNS servers, send a DNS request directed at that server. If the
response comes back as expected, the server is validated. Even if the server responds with an
error, it can still be validated; for example, a potential web server is validated when it
responds with, “The page you requested is unavailable.”
• telnetting to the address
Attempting to telnet to the address in question at the port on which the service is offered may
return an error that gives clues as to the machine’s purpose.
• responding to other servers
Servers for some services such as DNS and SMTP communicate with each other as part of
the protocol. This can confirm findings if it is appropriate for the service being profiled.
Validating clients can be more difficult but often is not necessary. The most important question
should be whether that client behavior is appropriate on the network. If client traffic must be
CMU/SEI-2012-TR-006 | 45
validated, study the traffic pattern, looking specifically at the timing and size of the packets. Do
not try to connect to unknown destination services to validate client traffic.
5.7.3 Anomalies
The following are some items to be aware of while profiling a service.
• historical behavior
Old or unpatched hosts can have different behavior than is typically expected from a certain
service.
• multiple services running on a single box
Servers can be used to host several services in parallel with each other, either at one IP
address or at different IP addresses, by using a different port for each service.
• general protocol anomalies
This could be something suspicious, like tunneling, or something more legitimate, like a new
application reusing an outdated protocol.
• a service running across multiple machines
This may not mean that the service operates at multiple IP addresses. It can indicate load
balancing or use of virtual machines.
• unconventional devices
Many non-PC devices are now running services on their own hardware or connecting to
services without using a PC as a conduit. For example, photocopiers are often able to email
documents.
5.7.4 Results
Only one address we found using the process in this section had not already been listed in the
profile. It is shown in Table 21.
Table 21: Assets for Other Services
Proto. Internal Port External IP External Port External Name Comments
203.0.113.20
6 * * 123 ntp.* NTP Client
CMU/SEI-2012-TR-006 | 46
6 Catalog Remaining Active Assets
By this point, most common services will have been cataloged, plus any services that were
profiled based on top-used services in the network. The list of assets in the profile hopefully
covers almost all of the traffic. Compare the list of hosts in the current profile with the list of
active assets found at the beginning of this report using the following command.
$ rwsettool --difference talkers.set profiled_assets.set \
--output-path=not_profiled.set
$ rwsetcat not_profiled.set --count
10
This result shows that for the sample network, there are 10 hosts that have not yet been profiled.
Before profiling any remaining hosts, expand the time frame for the sample data set to see if there
are any other active hosts that were not represented in the smaller data set. After finding the hosts
that are left, profile each one individually.
6.1 The Process
The expanded data set should be at least one month’s worth of data to get accurate results. If the
query time is too great, it is possible to separate out inbound traffic and only look at outbound
traffic over that duration. However, this is likely to produce a very large file, so the benefits of
doing such a separation might be outweighed.
Finding the additional talkers from the expanded data set is the same process as finding the talkers
in Section 4 but excludes the addresses already in the profile in order to speed up the query. The
following examples show the commands and results used to find additional talkers.
$ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
--type=out,outweb \
--not-sipset=talkers.set --protocol=6 --packets=4- --ack-flag=1 \
--pass=stdout \
| rwset --sip-file=tcp_talkers.set
$ rwsetcat tcp_talkers.set --count
6
$ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
--type=out \
--not-sipset=talkers.set --protocol=0-5,7- \
--pass=stdout \
| rwset --sip-file=other_talkers.set
$ rwsetcat other_talkers.set --count
3
$ rwsettool --union tcp_talkers.set other_talkers.set \
--output-path=expanded_talkers.set
$ rwsetcat expanded_talkers.set --count
6
CMU/SEI-2012-TR-006 | 47
Combine the list of these new active assets with the active assets not already profiled. After we
combined them, the sample network had 16 leftover assets. Profile leftover assets by looking at
what kind of traffic the assets are generating. For each address, look at which ports make up the
majority of the traffic, as the following command and results show.
$ rwfilter --start-date=2011/10/01:00 --end-date=2011/10/31:23 \
--type=out,outweb \
--saddress=203.0.113.22 \
--pass=stdout \
| rwstats --fields=dport,sport,protocol --count=5 --bytes
INPUT: 730 Records for 7 Bins and 64220 Total Bytes
OUTPUT: Top 5 Bins by Bytes
dPort| sPort|pro| Bytes| %Bytes| cumul_%|
32986| 3389| 6| 18772| 29.230769| 29.230769|
32988| 3389| 6| 18468| 28.757396| 57.988166|
32987| 3389| 6| 10564| 16.449704| 74.437870|
32989| 3389| 6| 8056| 12.544379| 86.982249|
32982| 3389| 6| 2812| 4.378698| 91.360947|
The machine in the sample network is using Remote Desktop Protocol because it is being
connected through port 3389. We created a “miscellaneous” section at the end of the profile to
hold these assets with uncommon protocols. If the machine has (or is connecting to) multiple
services that each make up at least 10% of the total traffic, list each of those services, but make a
note of which service is the most used. Table 22 does this by listing the most used service first.
Before adding these findings to the profile, try to validate them. For clients, try resolving the