要设置一本地变量，格式为：
$ variable-name=valu或e $ { v a r i a b l e - n a m e = v a l u e }
注意，等号两边可以有空格。如果取值包含空格，必须用双引号括起来。 s h e l l变量可以
用大小写字母。
表14-1 变量设置时的不同模式
Va r i a b l e - n a m e = v a l u e 设置实际值到v a r i a b l e - n a m e
Va r i a b l e - n a m e + v a l u e 如果设置了v a r i a b l e - n a m e，则重设其值
Va r i a b l e - n a m e : ? v a l u e 如果未设置v a r i a b l e - n a m e，显示未定义用户错误信息
Va r i a b l e - n a m e ? v a l u e 如果未设置v a r i a b l e - n a m e，显示系统错误信息
Va r i a b l e - n a m e : = v a l u e 如果未设置v a r i a b l e - n a m e，设置其值
Va r i a b l e - n a m e : - v a l u e 同上，但是取值并不设置到v a r i a b l e - n a m e，可以被替换
14.2.1 显示变量
使用e c h o命令可以显示单个变量取值，并在变量名前加$，例如：
可以结合使用变量，下面将错误信息和环境变量L O G N A M E设置到变量e r r o r- m s g。
上面例子中，s h e l l首先显示文本，然后查找变量$ L O G N A M E，最后扩展变量以显示整个
变量值。
14.2.2 清除变量
使用u n s e t命令清除变量。
unset variable-name
14.2.3 显示所有本地shell变量
使用s e t命令显示所有本地定义的s h e l l变量。
加入java编程群：524621833
134
第三部分 登录环境
下载
s e t输出可能很长。查看输出时可以看出 s h e l l已经设置了一些用户变量以使工作环境更加
容易使用。
14.2.4 结合变量值
将变量并排可以使变量结合在一起：
14.2.5 测试变量是否已经设置
有时要测试是否已设置或初始化变量。如果未设置或初始化，就可以使用另一值。此命
令格式为：
$ { v a r i a b l e : - v a l u e }
意即如果设置了变量值，则使用它，如果未设置，则取新值。例如：
变量c o l o u r取值b l u e，e c h o打印变量c o l o u r时，首先查看其是否已赋值，如果查到，则使
用该值。现在清除该值，再来看看结果。
上面的例子并没有将实际值传给变量，需使用下述命令完成此功能：
$ { v a r i a b l e : = v a l u e }
下面是一个更实用的例子。查询工资清单应用的运行时间及清单类型。在运行时间及类
型输入时，敲回车键表明用户并没有设置两个变量值，将使用缺省值（ 0 3 : 0 0和We e k l y），并
传入a t命令中以按时启动作业。
加入java编程群：524621833
135
第14章 环境和shell变量
下载
在输入域敲回车键，输出结果如下：
也可以编写脚本测试变量是否取值，然后返回带有系统错误信息的结果。下面的例子测
试变量f i l e是否取值。
以上结果可读性不好，但是可以加入自己的脚本以增加可读性。
测试变量是否取值，如果未设置，则返回一空串。方法如下：
$ { v a r i a b l e : + v a l u e }
使用下述方法初始化变量为空字符串。
v a r i a b l e = " "
$ D E T I N A T I O N = " "
14.2.6 使用变量来保存系统命令参数
可以用变量保存系统命令参数的替换信息。下面的例子使用变量保存文件拷贝的文件名
信息。变量s o u r c e保存p a s s w d文件的路径，d e s t保存c p命令中文件目标。
下面例子中，变量d e v i c e保存磁带设备路径，然后用于在m t命令中倒带。
14.2.7 设置只读变量
如果设置变量时，不想再改变其值，可以将之设置为只读方式。如果有人包括用户本人
想要改变它，则返回错误信息。格式如下：
v a r i a b l e - n a m e = v a l u e
readonly variable-name
下面的例子中，设置变量为系统磁带设备之一的设备路径，将之设为只读，任何改变其
加入java编程群：524621833
136
第三部分 登录环境
下载
值的操作将返回错误信息。
要查看所有只读变量，使用命令r e a d o n l y即可。
14.3 环境变量
环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程。s h e l l中执行的用
户进程均称为子进程。不像本地变量（只用于现在的 s h e l l）环境变量可用于所有子进程，这
包括编辑器、脚本和应用。
环境变量可以在命令行中设置，但用户注销时这些值将丢失，因此最好在 . p r o f i l e文件中
定义。系统管理员可能在/ e t c / p r o f i l e文件中已经设置了一些环境变量。将之放入 p r o f i l e文件意
味着每次登录时这些值都将被初始化。
传统上，所有环境变量均为大写。环境变量应用于用户进程前，必须用 e x p o r t命令导出。
环境变量与本地变量设置方式相同。
14.3.1 设置环境变量
V A R I A B L E - N A M E = v a l u e；export VARIABLE-NAME
在两个命令之间是一个分号，也可以这样写：
V A R I A B L E - N A M E = v a l u e
Export VARIABLE-NAME
14.3.2 显示环境变量
显示环境变量与显示本地变量一样，例子如下：
使用e n v命令可以查看所有的环境变量。
加入java编程群：524621833
137
第14章 环境和shell变量
下载
14.3.3 清除环境变量
使用u n s e t命令清除环境变量：
14.3.4 嵌入shell变量
Brourne shell有一些预留的环境变量名，这些变量名不能用作其他用途。通常在
/ e t c / p r o f i l e中建立这些嵌入的环境变量，但也不完全是，这取决于用户自己。以下是嵌入 s h e l l
变量列表。
1. CDPAT H
改变目录路径变量，保留一系列由冒号隔开的路径名，用于c d命令。如果设置了C D PAT H，
c d一个目录时，首先查找C D PAT H，如果C D PAT H指明此目录，则此目录成为当前工作目录。
例子如下：
$ CDPATH=:/home/dave/bin:/usr/local；/aepxppsort CDPATH.
如果要
$ cd apps
c d命令首先在C D PAT H中查找目录列表，如果发现a p p s，则它成为当前工作目录。
2. EXINIT
E X I N I T变量保存使用v i编辑器时的初始化选项。例如，调用 v i时，要显示行号，且在第
1 0个空格加入t a b键，命令为：
$ EXINIT='set nu tab=10';export EXINIT
3. HOME
H O M E目录，通常定位于 p a s s w d文件的倒数第 2列，用于保存用户自身文件。设置了
H O M E目录，可以简单使用c d命令进入它。
也可以用
$ cd $ HOME
4. IFS
加入java编程群：524621833
138
第三部分 登录环境
下载
I F S用作s h e l l指定的缺省域分隔符。原理上讲域分隔符可以是任意字符，但缺省通常为空
格、新行或t a b键。I F S在分隔文件或变量中各域时很有用。下面的例子将 I F S设置为冒号，然
后echo PAT H变量，给出一个目录分隔开来的可读性很强的路径列表。
要设置其返回初始设置：
$ IFS=; export IFS
这里 为空格和t a b键。
5. LOGNAME
此变量保存登录名，应该为缺省设置，但如果没有设置，可使用下面命令完成它：
6. MAIL
M A I L变量保存邮箱路径名，缺省为/var/spool/mail/。s h e l l周期性检查新邮
件，如果有了新邮件，在命令行会出现一个提示信息。如果邮箱并不在以上指定位置，可以
用M A I L设置。
$ MAIL=/usr/mail/da；veexport MAIL
7. MAILCHECK
M A I L C H E C K缺省每6 0 s检查新邮件，但如果不想如此频繁检查新邮件，比如设为每 2 m，
使用命令：
$ MAILCHECK=12；0export MAILCHECK
8. MAILPAT H
如果有多个邮箱要用到M A I L PAT H，此变量设置将覆盖M A I L设置。
$ MAILPATH=/var/spool/dave:/var/spool/；aedxmpionrt MAILPATH
上面的例子中，M A I L检测邮箱d a v e和a d m i n。
9. PAT H
PAT H变量保存进行命令或脚本查找的目录顺序，正确排列这个次序很重要，可以在执行
命令时节省时间。你一定不想在已知命令不存在的目录下去查找它。通常情况，最好首先放
在H O M E目录下，接下来是从最常用到一般使用到不常用的目录列表次序。如果要在当前工
作目录下查询，无论在哪儿，均可以使用句点操作。目录间用冒号分隔，例如：
$ PATH=$HOME/bin:.:/bin:/usr；/beixnport PATH
使用上面的例子首先查找 H O M E / b i n目录，然后是当前工作目录，然后是 / b i n，最后是
/ u s r / b i n。
PAT H可以在系统目录下/ e t c / p r o f i l e中设置，也可以使用下面方法加入自己的查找目录。
$ PATH=$PATH:/$HOME/bi；n:.export PATH
这里使用了/ e t c / p r o f i l e中定义的PAT H，并加入$ H O M E / b i n和当前工作目录。一般来说，
在查找路径开始使用当前工作目录不是一个好办法，这样很容易被其他用户发现。
10. PS1
基本提示符包含s h e l l提示符，缺省对超级用户为 #，其他为$。可以使用任何符号作提示
加入java编程群：524621833
139
第14章 环境和shell变量
下载
符，以下为两个例子：
11. PS2
P S 2为附属提示符，缺省为符号> 。P S 2用于执行多行命令或超过一行的一个命令。
12. SHELL
S H E L L变量保存缺省s h e l l，通常在/ e t c / p a s s w d中已设置，但是如有必要使用另一个s h e l l，
可以用如下方法覆盖当前s h e l l：
13. TERMINFO
终端初始化变量保存终端配置文件的位置。通常在 / u s r / l i b / t e r m i n f o或/ u s r / s h a r e / t e r m i n f o
$ TERMINFO=/usr/lib/termi；nefxoport TERMINFO
14. TERM
T E R M变量保存终端类型。设置T E R M使应用获知终端对屏幕和键盘响应的控制序列类型，
常用的有v t 1 0 0、v t 2 0 0、v t 2 2 0 - 8等。
$ TERM=vt10；0export TERM
15. TZ
时区变量保存时区值，只有系统管理员才可以更改此设置。例如：
返回值表明正在使用格林威治标准时间，与G M T时差为0，并作E D T保存。
14.3.5 其他环境变量
还有一些预留的环境变量。其他系统或命令行应用将用到它们。以下是最常用的一些，
注意这些值均未有缺省设置，必须显示说明。
1. EDITO R
设置编辑器，最常用。
$ EDITOR=v；iexport EDITOR
2. PWD
当前目录路径名，用c d命令设置此选项。
3. PA G E R
保存屏幕翻页命令，如p g、m o r e，在查看m a n文本时用到此功能。
$ PAGER='pg -f -p%；d'export PAGER
4. MANPAT H
加入java编程群：524621833
140
第三部分 登录环境
下载
保存系统上m a n文本的目录。目录间用冒号分隔。