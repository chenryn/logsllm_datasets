### Conclusion

Our study reveals that simply placing Front-End (FE) servers closer to users may not be entirely effective in improving the overall user-perceived performance in dynamic content distribution. Other critical factors, such as processing time, server loads at both FE and Back-End (BE) data centers, and the quality of physical and TCP connections between them, also play a significant role. Optimizing these factors is crucial for enhancing the overall user experience in dynamic content distribution, such as the real-time generation of search results in response to user queries.

### 5. FACTORING FE-BE FETCH TIME

As discussed in Section 2, the fetch time \( T_{fetch} \) consists of two key components: \( T_{proc} \) and \( RTT_{BE} \). These represent the search query processing time at the BE data center and the delivery time of search results from the BE server to the FE server, respectively. As part of our ongoing work, we are exploring various mechanisms to separate these two components.

#### Analysis of Fetch Time Components

To gain a deeper understanding of these components, we conducted the following analysis. We first obtained a list of possible locations for Bing and Google data centers from references [1] and [2]. For each data center, we considered the geographically closest FE servers and plotted the distribution of \( T_{dynamic} \) with respect to the geographical distance between the FE and BE servers. As explained in Section 4, for smaller values of Round-Trip Time (RTT), \( T_{dynamic} \) can be approximated by \( T_{fetch} \).

Figure 9 shows the distribution of \( T_{fetch} \) for Bing and Google with respect to the geographical distance between the FE and BE locations. For this plot, we used the Bing data center located in Virginia (US) and the Lenoir, North Carolina data center for Google. The figures indicate that \( T_{fetch} \) increases linearly as the distance between the BE and FE increases. We performed a linear regression to fit a straight line to these data points, which is shown using the red continuous lines in the figure.

The Y-intercept for the regression is 260 ms for Bing and 34 ms for Google. This intercept represents the computation time for a given search query at the respective data centers. The slope of the line represents the contribution of network delay in \( T_{fetch} \), which is similar for both Bing and Google. For different keywords in our search queries, we observed very similar slopes but significantly different intercept values. Although our initial results show interesting characteristics, we are conducting extensive experiments and analyses to better understand the factors affecting \( T_{fetch} \). This will guide us in designing more effective content placement and delivery strategies for dynamic content distribution.

### 6. DISCUSSIONS

In this paper, we focused on the roles of frontend servers in the end-to-end performance of search queries using standard search functions. More recently, some search engines, such as Google, have introduced advanced features like the interactive "search as you type" feature. Our preliminary investigation suggests that our basic model and key observations still hold. We find that with the interactive search feature, after each letter a user types, a separate query (using a new TCP connection) is sent to the FE server. The delivery of each query still fits our basic model, although we believe that the search query processing times at the BE data centers are generally reduced because subsequent queries are highly correlated with previous ones. We are in the process of conducting more thorough measurements and analyses on this and other search features.

Given that most PlanetLab nodes are located within or close to university campus networks, and it is known that some Akamai FE servers are placed near these networks, we recognize that using PlanetLab as a testbed may introduce some biases. For instance, the RTT between PlanetLab and Akamai FE servers may not be representative of all users. Additionally, in our measurements, we did not observe significant packet losses. In environments with high loss rates, such as wireless networks, placing FEs closer to users can significantly improve the user-perceived end-to-end performance by reducing the total time needed to deliver the query result to the user. As part of our ongoing work, we are utilizing other testbeds, such as the Seattle testbed [3], and investigating the trade-offs between RTTs and loss rates in the placement of FE servers.

### 7. CONCLUSIONS

In this paper, we investigated the roles of FE servers in improving the user-perceived performance of dynamic content distribution. Using Bing and Google search services as case studies, we conducted extensive application-layer active measurements and data analysis. Our results demonstrate a critical trade-off between the placement of FE servers and the FE-BE fetch time. While placing FE servers closer to users can help reduce latency, other key factors such as processing times, loads at both FE and BE data centers, and the quality of connections between them also play a critical role in determining the overall user-perceived performance.

### Acknowledgments

This work is supported in part by the NSF grants CNS-0905037, CNS-1017092, and CNS-1017647.

### REFERENCES

[1] Google data centers. <http://www.google.com/corporate/datacenter/locations.html>.

[2] Microsoft online services data center locations. <http://www.championcloudservices.com/data-center-locations/>.

[3] Seattle. <https://seattle.cs.washington.edu/html/>.

[4] S. Androutsellis-Theotokis and D. Spinellis. A survey of peer-to-peer content distribution technologies. ACM Computing Surveys (CSUR), 36(4):335–371, 2004.

[5] M. Bateni and M. Hajiaghayi. Assignment problem in content distribution networks: unsplittable hard-capacitated facility location. In Proceedings of the twentieth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 805–814. Society for Industrial and Applied Mathematics, 2009.

[6] M. El Dick, E. Pacitti, R. Akbarinia, and B. Kemme. Building a peer-to-peer content distribution network with high performance, scalability, and robustness. Information Systems, 2010.

[7] H. Jiang, Z. Wang, A. Wong, J. Li, and Z. Li. A replica placement algorithm for hybrid CDN-P2P architecture. In 2009 15th International Conference on Parallel and Distributed Systems, pages 758–763. IEEE, 2009.

[8] D. Lewin, A. Davis, S. Gendler, M. Kagan, J. Parikh, and W. Weihl. Dynamic content assembly on edge-of-network servers in a content delivery network, July 6 2010. US Patent 7,752,258.

[9] A. Pathak, Y. Wang, C. Huang, A. Greenberg, Y. Hu, R. Kern, J. Li, and K. Ross. Measuring and evaluating TCP splitting for cloud services. In Passive and Active Measurement, pages 41–50. Springer, 2010.

[10] J. Ravi, Z. Yu, and W. Shi. A survey on dynamic Web content generation and delivery techniques. Journal of Network and Computer Applications, 32(5):943–960, 2009.

[11] M. Tariq, A. Zeitoun, V. Valancius, N. Feamster, and M. Ammar. Answering what-if deployment and configuration questions with WISE. In Proceedings of the ACM SIGCOMM 2008 conference on Data communication, SIGCOMM ’08, pages 99–110, New York, NY, USA, 2008. ACM.

[12] M. Wittie, V. Pejovic, L. Deek, K. Almeroth, and B. Zhao. Exploiting locality of interest in online social networks. In CoNEXT, page 25. ACM, 2010.