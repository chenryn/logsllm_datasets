title:ShorTor: Improving Tor Network Latency via Multi-hop Overlay Routing
author:Kyle Hogan and
Sacha Servan-Schreiber and
Zachary Newman and
Ben Weintraub and
Cristina Nita-Rotaru and
Srinivas Devadas
9
1
6
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
2022 IEEE Symposium on Security and Privacy (SP)
ShorTor: Improving Tor Network Latency via
Multi-hop Overlay Routing
Kyle Hogan
MIT CSAIL
Sacha Servan-Schreiber
MIT CSAIL
Zachary Newman
MIT CSAIL
Ben Weintraub
Northeastern University
Cristina Nita-Rotaru
Northeastern University
Srinivas Devadas
MIT CSAIL
Abstract—We present ShorTor, a protocol for reducing latency
on the Tor network. ShorTor uses multi-hop overlay routing, a
technique typically employed by content delivery networks, to
inﬂuence the route Tor trafﬁc takes across the internet. In this
way, ShorTor avoids slow paths and improves the experience
for end users by reducing the latency of their connections while
imposing minimal bandwidth overhead.
ShorTor functions as an overlay on top of onion routing—Tor’s
existing routing protocol—and is run by Tor relays, making it
independent of the path selection performed by Tor clients. As
such, ShorTor reduces latency while preserving Tor’s existing
security properties. Speciﬁcally, the routes taken in ShorTor are
in no way correlated to either the Tor user or their destination,
including the geographic location of either party. We analyze
the security of ShorTor using the AnoA framework, showing
that ShorTor maintains all of Tor’s anonymity guarantees. We
augment our theoretical claims with an empirical analysis.
To evaluate ShorTor’s performance, we collect a real-world
dataset of over 400,000 latency measurements between the 1,000
most popular Tor relays, which collectively see the vast majority
of Tor trafﬁc. With this data, we identify pairs of relays that could
beneﬁt from ShorTor: that is, two relays where introducing an
additional intermediate network hop results in lower latency than
the direct route between them. We use our measurement dataset
to simulate the impact on end users by applying ShorTor to two
million Tor circuits chosen according to Tor’s speciﬁcation.
ShorTor reduces the latency for the 99th percentile of relay
pairs in Tor by 148 ms. Similarly, ShorTor reduces the latency of
Tor circuits by 122 ms at the 99th percentile. In practice, this
translates to ShorTor truncating tail
latencies for Tor which
has a direct impact on page load times and, consequently, user
experience on the Tor browser.
I. INTRODUCTION
Tor is the foremost deployed system for anonymous commu-
nication. Millions of people around the world use Tor every day
to escape censorship and avoid surveillance of their browsing
habits [27,58]. This broad user base is a critical component
of Tor’s privacy guarantees. Tor users are anonymous only
amongst each other—not within the general internet population.
That is, an internet censor may be able to know that some Tor
user visited a blocked site, but not which Tor user. Because of
this, the degree of anonymity Tor provides in practice grows
with the total number of concurrent users on the network [25].
This relationship between the privacy of individual users and
the overall popularity of Tor makes user experience a major
concern for Tor. A poor experience relative to non-private
browsing results in lower adoption of Tor and, ultimately, limits
the degree of anonymity Tor is capable of providing. A major
factor contributing to positive user experience is latency. Inter-
net users are very sensitive to latency, and increased page load
times discourage user interaction [10,11,24]. Unfortunately,
anonymous communication incurs higher latency than typical
internet connections [8,31,53,54,56,65,83,84].
In Tor, much of this overhead is due to the underlying
structure of its connections [26,27]. Tor is a network composed
of ∼7,000 volunteer-run servers, or relays, used to route client
trafﬁc. Rather than connecting directly to their destination, Tor
clients tunnel their trafﬁc through a series of Tor relays in a
process known as onion routing. This drastically increases the
path length for Tor trafﬁc, and, in turn, latency.
A substantial body of prior work aims to reduce latency
in Tor by changing the relay selection process [5,7,9,16,42,
74,79,87,90]. By default, Tor clients select relays for their
circuit at random, weighted by relay bandwidth, and do not
consider path length or circuit latency in the process. In contrast,
proposals that aim to reduce latency often prioritize selecting
circuits that have low latency between relays [5,9,16,42,74,79].
Unfortunately, preferentially choosing circuits in this way also
selects relays that are correlated with the identity of the user
or their destination [12,14,60]. Many attacks show how this
can be exploited to deanonymize Tor users, allowing a passive
observer to identify information about user locations [12,14,
36,60,61,74,85,86].
In this paper, we propose ShorTor, an entirely different
approach to reducing the latency of Tor trafﬁc. Rather than
alter the circuit selection process, ShorTor exploits a technique
used by content delivery networks (CDNs) known as multi-hop
overlay routing [22,81]. Multi-hop overlay routing, like Tor,
functions by introducing intermediate hops into its connections,
but does so for the explicit purpose of reducing latency. In
the wild, CDNs use multi-hop overlay routing to inﬂuence the
path internet trafﬁc takes. They do this by inserting their own
servers as intermediate points in client connections, avoiding
slow default routes by forcing trafﬁc to travel through their
server, rather than directly to its destination. The success of
this technique is due to the existence of sub-optimal default
routes across the internet [28] and the distributed nature of
CDN-controlled nodes. The broad presence of CDN controlled
© 2022, Kyle Hogan. Under license to IEEE.
DOI 10.1109/SP46214.2022.00100
1933
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
servers gives them many possible routes to choose from, and
consequently, increases their odds of ﬁnding a faster route to
send trafﬁc through. In practice, this allows CDNs to avoid
outages, congestion, or other delays along the default path.
With ShorTor, we ask:
Can multi-hop overlay routing reduce latency in Tor
without compromising anonymity?
While multi-hop overlay routing is widely successful for
CDNs (which share some similarities to the Tor network),
Tor is much smaller with ∼7,000 nodes [67] compared to the
∼300,000 operated by a CDN [3]. In addition to the difference
in scale, Tor relays are volunteer run and their placement is
not optimized for fast routing. ShorTor is the ﬁrst proposal to
apply and analyze the impact of multi-hop overlay routing on
the Tor network, and is likely of independent interest to other
distributed communication systems.
A. ShorTor
To reduce the latency experienced by end users of Tor,
ShorTor uses multi-hop routing as an additional overlay layer
on top of Tor’s onion routing protocol. Crucially, ShorTor is
independent of Tor’s circuit selection algorithm and the client,
operating only between relays. ShorTor introduces additional
hops, which we call via relays, that tunnel trafﬁc between
relays on a Tor circuit. Acting as a via is simply a role that
a normal Tor relay may take in addition to its usual function
on circuits. Via relays, unlike circuit relays, can be introduced
after circuit establishment in response to changing network
conditions without client involvement or any modiﬁcation to
the circuit itself. While the basic idea of ShorTor is simple in
retrospect, multi-hop overlay routing has security implications
for anonymous communication that are not present in CDNs.
Security: We demonstrate that ShorTor can ﬁnd faster
paths across Tor without the loss in anonymity experienced by
other approaches. ShorTor selects via relays based solely on
the adjacent circuit relays. This process ensures that malicious
vias cannot lie about their performance to artiﬁcially increase
their selection probability. Speciﬁcally, ShorTor operates as an
overlay routing layer, requiring no modiﬁcation to Tor’s onion
routing or encryption, preserving Tor’s security guarantees. We
provide a formal security analysis of the impact ShorTor has
on Tor’s anonymity using the AnoA framework, which was
introduced by Backes et al. [12] to analyze the anonymity
guarantees of Tor [13,14]. Using AnoA, we show that ShorTor
has minimal impact on security when compared to baseline
Tor. However, we ﬁnd that when used in conjunction with
alternative,1 location-aware path selection algorithms such as
LASTor [5], ShorTor can exacerbate the existing leakage. We
validate these claims through an empirical analysis on data
collected from the Tor network.
Latency Measurements: To quantify the beneﬁts of
ShorTor, we conduct latency measurements between approxi-
mately 400,000 pairs of the 1,000 most popular Tor relays. We
1Tor’s only deployed path selection algorithm is independent of user location.