**Optimized Text:**

### Evasion and Obfuscation Techniques
The evasion techniques employed by adversaries can be less stealthy. To counter this, we observed that attackers often place redirection websites in front of the compromised repositories (Bars), employing cloaking methods to conceal these repositories.

- **Obfuscation**: We discovered that attack payloads within these repositories were frequently obfuscated. Various obfuscation techniques were identified, ranging from simple Base64 encoding to more sophisticated online obfuscation tools (e.g., api.myobfuscate.com). Even the links referring to these payloads were obfuscated. These attacks resulted in the upload of various malicious payloads, including Adware, Trojans, viruses, and other types of malware. Despite the bucket owner changing the access control policy in 2012 to prevent unauthorized parties from directly listing the bucket content through a browser, the repository remained accessible via our tool mentioned in Section 4.2, which constructs an Authorization field in the HTTP header. This allowed unauthorized listing, uploading, and even modification of the content.

### Discussion
**Limitations of BarFinder**
Bar detection is challenging because cloud repositories are not directly accessible to external parties. BarFinder aims to leverage the sites served by Bars to identify suspicious repositories. By utilizing collective features of these sites, such as their topological relations and shared content, the approach becomes more robust. However, this requires gathering a large number of sites using cloud buckets. Some repositories serve only a small set of front-end sites, making it difficult for BarFinder to differentiate between legitimate and malicious ones. For example, among the Alexa top 3K sites, 67 sites connect to cloud buckets used exclusively by themselves, such as appspot.com_android-site used by android.com and s3.amazonaws.com_ttv-backgroundart used by twitch.tv. Future research should focus on developing detection techniques for these "self-serving" buckets.

**Other Defenses Against Bars**
In addition to third-party detection efforts like BarFinder, several other measures can be taken to mitigate the threats posed by Bars:
- **Website Owners**: Should perform integrity checks on resources retrieved from the bucket to ensure they are not compromised.
- **Bucket Owners**: Must carefully configure their cloud buckets to avoid misconfiguration flaws. An automatic configuration checker could be beneficial.
- **Cloud Providers**: Have a responsibility to detect and remove Bars from their systems. This is non-trivial due to privacy concerns and the fact that some Bars can only be considered malicious based on their involvement in malicious activities, such as hosting phishing images. Further research is needed to understand how providers can effectively address this issue.

**Ethical Considerations**
Most findings in this paper were derived from analyzing data crawled from the public domain. Our scanner was designed to minimize privacy impacts on vulnerable repositories by only attempting file listing, uploading, and downloading. These operations are similar to those performed by online web testing tools (e.g., Sucuri). We aimed to protect these repositories from future exploits and avoided changing any existing content, deleting all downloaded files from our system. We have also contacted major vendors like Groupon and cloud providers like Amazon about the security breaches and will continue to notify others and assist in fixing the configuration problems. Groupon has acknowledged the importance of our findings and expressed gratitude for our help.

### Related Work
**Bad Site Detection**
Malicious web activities have been extensively studied. Relevant work includes the use of HTML content and redirection paths to detect malicious or compromised websites. Examples include DOM-based clustering systems for monitoring scam websites, classification of websites to predict potential malicious behavior, and mechanisms to track changes in website content for detecting script-injection campaigns. Other approaches use short redirection sequences to identify bad sites, unique properties of malicious infrastructure, and trace-back mechanisms. Unlike these studies, BarFinder leverages features from front-end websites using cloud buckets and utilizes a set of unique collective features based on graph connected components.

**Cloud Security**
Previous research on cloud security has focused on data confidentiality and attacks targeting cloud computing infrastructure. Studies have examined co-locating attack virtual machines with target VMs, cache-based side-channel attacks, and controlled-channel attacks. More recent attention has shifted to the abuse of cloud-based services for fraudulent activities, such as exploiting Dropbox for unlimited storage and using Amazon EC2 to host malicious domains. Our study differs by proposing BarFinder to identify malicious cloud repositories and providing an in-depth analysis of their use in malicious campaigns and their correlation with the websites they serve.

### Conclusion
The use of cloud repositories as a malicious service presents a new challenge to web security. This threat has not been extensively studied, and little is known about its scope and magnitude. In this paper, we report the first systematic study on malicious and compromised cloud repositories and the illicit online activities built around them. We collected a small set of seeding Bars and identified collective features from the websites connecting to them. Using these features, we developed a new scanner that detected over 600 Bars on leading cloud platforms, including Google, Amazon, and others. Our findings provide important insights into the central roles these buckets play in web attacks and the strategies used to avoid detection, contributing to better understanding and effective mitigation of this new security threat.

### Acknowledgment
This work was supported in part by the National Science Foundation (grants CNS-1223477, 1223495, 1527141, and 1618493). We thank our anonymous reviewers for their useful comments.

### References
[References listed as provided]

### Appendices
**A. List of Cloud Hosting Platforms**
| Cloud Platform | Domain |
|----------------|--------|
| Heroku         | herokuapp.com |
| Amazon S3      | s3.amazonaws.com |
| CloudFront     | cloudfront.net |
| WindowsNet     | windows.net |
| Azure          | azurewebsites.net |
| Google         | googledrive.com |
| AppSpot        | appspot.com |
| MSECDN         | msecdn.net |
| Bitbucket      | bitbucket.org |
| GitHub         | github.io |
| Sina           | sinaapp.com |
| Olympe         | olympe.in |
| RackCDN        | rackcdn.com |
| BaiduYun       | duapp.com |
| Qiniu          | qiniucdn.com |
| AkamaiHD       | akamaihd.net |
| Yahoo          | hostingprod.com |
| Sogou          | sogoucdn.com |
| Go2Cloud       | go2cloud.org |
| Aliyun         | aliyuncs.com |