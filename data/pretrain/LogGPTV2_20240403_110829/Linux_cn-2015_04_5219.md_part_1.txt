---
author: ''
category: 活动
comments_data:
- date: '2015-04-07 17:08:25'
  message: 算法应该抽象的很好，这就导致了难理解。就算理解了，在没有实战经验的情况下，你不知道怎么用，在遇到适合的使用的时候也不一定能反应过来。这本书使用一些有趣的实例进行讲解，确实印象深刻且易于理解。
  postip: 183.63.119.10
  username: 来自 - 广东广州 的 Firefox/Windows 用户
- date: '2015-04-07 17:10:21'
  message: 算法应该抽象的很好，这就导致了难理解。就算理解了，在没有实战经验的情况下，你不知道怎么用，在遇到适合的使用的时候也不一定能反应过来。这本书使用一些有趣的实例进行讲解，确实印象深刻且易于理解。
  postip: 183.63.119.10
  username: Jamie
- date: '2015-04-07 19:17:51'
  message: 通过一些有趣的问题引出算法，并用算法来解决这些有趣的问题，让人觉得不枯燥，有学习的欲望
  postip: 114.111.166.41
  username: hermione
- date: '2015-04-08 08:05:18'
  message: 没有算法,就没有软件.没有高效率的算法,就不会有高效率的软件
  postip: 218.25.35.19
  username: chenyx
- date: '2015-04-08 10:09:43'
  message: 对于程序员来说，算法的重要性不言而喻，传统的算法教程晦涩难懂，道行尚浅的入门者往往在通向大神的路上夭折，作者另辟蹊径从一系列有趣的生活实例出发，不但使得趣味性大大增加，而且这样是入门门槛也会因此而降低，从此学习算法不再枯燥，值得一看。
  postip: 59.188.253.198
  username: 来自 - 香港 的 Chrome/Windows 用户
- date: '2015-04-08 10:10:10'
  message: 对于程序员来说，算法的重要性不言而喻，传统的算法教程晦涩难懂，道行尚浅的入门者往往在通向大神的路上夭折，作者另辟蹊径从一系列有趣的生活实例出发，不但使得趣味性大大增加，而且这样是入门门槛也会因此而降低，从此学习算法不再枯燥，值得一看。
  postip: 111.11.85.5
  username: 良昭
- date: '2015-04-08 10:46:03'
  message: 通过贴合实际的示例，介绍了算法的各个方面。相比传统的算法书籍生动许多。和算法讲解搭配的配图很合适，同时没有大段的代码堆砌。适合程序员拓展眼界，开阔思维。
  postip: 119.255.41.233
  username: taxus
- date: '2015-04-08 10:59:36'
  message: 程序是算法的体现，算法是要有程序来体现，因此程序就是算法，通过算法来实现程序之道
  postip: 114.246.160.9
  username: mkj_mkj
- date: '2015-04-08 11:22:19'
  message: 曾经有人说：学软件最重要的是思想，思想由算法而变，看过一些算法的深表赞同。看了一下，是一本算法类的好书
  postip: 202.105.45.122
  username: suriealli
- date: '2015-04-08 11:53:37'
  message: 算法很重要，可是我不会算法！！悲催
  postip: 218.17.99.82
  username: 来自 - 广东深圳 的 Mozilla/Windows 用户
- date: '2015-04-08 12:17:53'
  message: 1+1 = 3 不是等于2
  postip: 171.213.0.128
  username: 浮生一梦
- date: '2015-04-08 13:02:10'
  message: 这本书既有各种大名鼎鼎的算法，如神经网络、遗传算法、离散傅里叶变换算法及各种插值算法，也有不起眼的排序和概率计算算法。讲解浅显易懂而不失深度和严谨，对程序员有很大的启发意义。算法也是将数学原理用到计算机编程的一个重要环节，求可以得到呀
  postip: 113.108.202.203
  username: disylee
- date: '2015-04-08 13:23:20'
  message: 编程思想算法很重要
  postip: 58.215.78.58
  username: 晨风
- date: '2015-04-08 21:12:55'
  message: 这本书有很多很基础的算法，也有很多比较高大上的算法，介绍的挺全面的！！！
  postip: 14.23.136.224
  username: 来自 - 广东广州 的 Chrome/Windows 用户
- date: '2015-04-08 21:13:52'
  message: 这本书有很多很基础的算法，也有很多比较高大上的算法，介绍的挺全面的！！！
  postip: 14.23.136.224
  username: 来自 - 广东广州 的 Chrome/Windows 用户
- date: '2015-04-09 11:15:39'
  message: 原来是学长的书阿，果断有工科男的笔风，最近找工作遇到好多算法的东东，这本书很有帮助
  postip: 222.20.48.121
  username: LouisWei
- date: '2015-04-09 16:35:29'
  message: 就像本书简介中介绍的：小到寥寥数行代码即可展现一个神奇的功能，好的算法才能写出好的代码，别人看看起来会很舒服。如果没有一个完整的算法，编程都不知道该如何下手。
  postip: 123.14.10.234
  username: Rootman
- date: '2015-04-09 16:53:34'
  message: 学过Gale-Shapley算法还能帮助程序猿找到女朋友，快来看吧。
  postip: 113.57.179.98
  username: liuadam
- date: '2015-04-10 10:44:47'
  message: "typedef struct tarPartner{\r\n&nbsp; &nbsp; &nbsp; &nbsp; char name[20];\r\n&nbsp; &nbsp; &nbsp; &nbsp; int next;\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    int current;\r\n&nbsp; &nbsp; &nbsp; &nbsp; int pCount;\r\n&nbsp;
    &nbsp; &nbsp; &nbsp; int perfect[SINGLE_COUNT];\r\n}S_PARTNER;\r\n\r\nint FindFreePartner(S_PARTNER * singles, int count)\r\n{\r\n&nbsp;
    &nbsp; &nbsp; &nbsp; int i = 0;\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    for (i = 0; i &lt; count; i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; if ((singles.current == -1) &amp;&amp; (singles.pCount !=
    SINGLE_COUNT)){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; &nbsp; &nbsp; return i;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp;
    &nbsp; &nbsp; &nbsp; return -1;\r\n}\r\n\r\nint GetPerfectPosition(S_PARTNER
    * single, int id)\r\n{\r\n&nbsp; &nbsp; &nbsp; &nbsp; int i = 0;\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (i = 0; i &lt; SINGLE_COUNT; i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (single.perfect
    == id){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; &nbsp; return i;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp;
    &nbsp; &nbsp; return 0x7FFFFFFF;\r\n}\r\n\r\nint main(void)\r\n{\r\n&nbsp; &nbsp; &nbsp; &nbsp; int i = 0;\r\n&nbsp; &nbsp;
    &nbsp; &nbsp; S_PARTNER man[SINGLE_COUNT];\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    S_PARTNER women[SINGLE_COUNT];\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    for (i = 0; i &lt; SINGLE_COUNT; i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
    &nbsp; &nbsp; &nbsp; memset(&amp;man, 0x0, sizeof(S_PARTNER));\r\n&nbsp;
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; memset(&amp;women, 0x0, sizeof(S_PARTNER));\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; man.current =
    -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; women.current
    = -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    strcpy(man[0].name, &quot;liyapeng&quot;);\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    strcpy(man[1].name, &quot;xietingfeng&quot;);\r\n&nbsp; &nbsp; &nbsp; &nbsp;
    strcpy(man[2].name, &quot;douwei&quot;);\r\n\r\n&nbsp; &nbsp; &nbsp;
    &nbsp; strcpy(women[0].name, &quot;wangfei&quot;);\r\n&nbsp; &nbsp; &nbsp;
    &nbsp; strcpy(women[1].name, &quot;zhangbaizhi&quot;);\r\n&nbsp; &nbsp;
    &nbsp; &nbsp; strcpy(women[2].name, &quot;zhouxun&quot;);\r\n\r\n&nbsp;
    &nbsp; &nbsp; &nbsp; man[0].p"
  postip: 116.247.112.34
  username: 来自 - 上海 的 Chrome/Windows 用户
- date: '2015-04-10 10:45:54'
  message: 算法是解决问题的步骤，程序是算法的代码实现，算法要依靠程序来完成功能，算法是程序的灵魂！
  postip: 58.218.37.154
  username: Yaso-T
- date: '2015-04-11 10:29:26'
  message: 算法一直是程序的灵魂如果算法不精，写出来的程序一定不好，臃肿效率低下，我们就应该这样的学习这门课程
  postip: 120.200.148.136
  username: teddy
- date: '2015-04-12 13:28:55'
  message: 算法能够帮助我们解决很多问题，本书的作者用实际的代码和例子来说明各种算法的有趣性，从而深入理解算法的在工作和学习过程中的重要性。算法真的很有趣。
  postip: 121.27.182.105
  username: LinuxLearning
- date: '2015-04-13 10:55:22'
  message: 人好多啊。。。
  postip: 219.143.136.185
  username: Nerver
- date: '2015-04-13 15:01:27'
  message: 我感觉这本书讲解算法没有那么枯燥，也使用了真代码而不是伪代码。事例讲解，很好。
  postip: 106.37.8.120
  username: 来自 - 北京 的 Chrome/Windows 用户
- date: '2015-04-13 20:09:37'
  message: 感觉算法都是那么回事，尤其是将算法的书，大概都是前篇一律的讲下来，当然有个别好的书，但是这个别中有几乎抄袭了算法导论，没有什么新意，没有自己的知识框架