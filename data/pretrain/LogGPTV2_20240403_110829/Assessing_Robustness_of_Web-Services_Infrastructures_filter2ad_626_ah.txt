testing. In: Proceedings of 2010 29th IEEE International Symposium on Reliable Distributed Systems (SRDS),
31 Oct.-3 Nov. 2010. IEEE Computer Society, Los Alamitos, CA, USA, pp. 255–64.
[102] Laranjeiro, N., Vieira, M., 2009. Extending test-driven development for robust web services. In: Dependability,
2009. DEPEND ’09. 2nd International Conference on. pp. 122–127.
[103] Lei, B., Li, X., Liu, Z., Morisset, C., Stolz, V., 2010. Robustness testing for software components. Science of
Computer Programming 75 (Copyright 2011, The Institution of Engineering and Technology), 879–97.
[104] Lei, B., Liu, Z., Morisset, C., Xuandong, L., 2010. State based robustness testing for components. Electronic
Notes in Theoretical Computer Science 260 (Copyright 2010, The Institution of Engineering and Technology),
173–88.
[105] Liggesmerer, P., Rothfelder, M., 1998. System safety improvement by automated software robustness evaluation.
In: Proceedings of TCS98: 15th International Conference and Exposition on Testing Computer Software, 8-12
June 1998. ACM, New York, NY, USA, pp. 71–77.
[106] Lisboa, L., Garcia, V., Lucr´edio, D., de Almeida, E., de Lemos Meira, S., de Mattos Fortes, R., 2010. A systematic
review of domain analysis tools. Information and Software Technology 52 (1), 1–13.
[107] Liu, H., Jiang, J., 2006. A robustness testing platform for ﬁle system. High Technology Letters (English Language
Edition) 12 (Copyright 2006, The Institution of Engineering and Technology), 23–27.
[108] Lu, C., Fabre, J. C., Killijian, M. O., 2009. Robustness of modular multi-layered software in the automotive
domain: a wrapping-based approach. In: 2009 IEEE 14th International Conference on Emerging Technologies
&amp; Factory Automation. ETFA 2009, 22-25 Sept. 2009. IEEE, Piscataway, NJ, USA, p. 8.
[109] Luo, X., Ji, W., Chao, L., 2009. TTCN-3 based robustness test generation and automation. In: Proceedings of the
2009 International Conference on Information Technology and Computer Science (ITCS 2009), 25-26 July 2009.
Vol. 2. IEEE, Piscataway, NJ, USA, pp. 120–125.
[110] M. N. Huhns, 2000. Agent teams: building and implementing software. IEEE Internet Computing 4 (Copyright
2000, IEE), 93–95.
[111] Majumdar, R., Saha, I., 2009. Symbolic robustness analysis. In: Proceedings of the 2009 30th IEEE Real-Time
29
Systems Symposium (RTSS 2009), 1-4 Dec. 2009. IEEE, Piscataway, NJ, USA, pp. 355–363.
[112] Martin, E., Basu, S., Tao, X., 2007. WebSob: a tool for robustness testing of Web services. In: 29th International
Conference on Software Engineering (ICSE’07 Companion), 20-26 May 2007. IEEE, Piscataway, NJ, USA, pp.
67–68.
[113] Maxion, R. A., deChambeau, A. L., 1995. Dependability at the user interface. In: The 25th International Sympo-
sium on Fault-Tolerant Computing, 1995. FTCS-25. Digest of Papers. pp. 528–535.
[114] Maxion, R. A., Olszewski, R. T., 1998. Improving software robustness with dependability cases. In: Proceedings
of the 28th International Symposium on Fault Tolerant Computing, 23-25 June 1998. IEEE Computer Society,
Los Alamitos, CA, USA, pp. 346–355.
[115] Mays, D., Leblanc, R. J., J., 2002. The CycleFree methodology: a simple approach to building reliable, robust,
real-time systems. In: Proceedings of the 24th International Conference on Software Engineering. ICSE 2002,
19-25 May 2002. ACM, New York, NY, USA, pp. 567–575.
[116] Mendes, N., Duraes, J., Madeira, H., 2010. Evaluating and comparing the impact of software faults on web
servers. In: Dependable Computing Conference (EDCC), 2010 European. pp. 33–42.
[117] Micskei, Z., Majzik, I., Tam, F., 2007. Comparing robustness of AIS-based middleware implementations. In:
Service Availability. Proceedings of the 4th International Service Availability. 21-22 May 2007. Vol. 4526 of
Lecture Notes in Computer Science. Springer, Berlin, Germany, pp. 20–30.
[118] Miller, B., Koski, D., Lee, C., Maganty, V., Murthy, R., Natarajan, A., Steidl, J., 1995. Fuzz revisited: A re-
examination of the reliability of UNIX utilities and services. Tech. rep.
[119] Miller, B. P., Fredriksen, L., So, B., 1990. An empirical study of the reliability of unix utilities. Commun. ACM
33 (12), 32–44.
[120] Moraes, R., Barbosa, R., Duraes, J., Mendes, N., Martins, E., Madeira, H., 2006. Injection of faults at component
interfaces and inside the component code: are they equivalent? In: Proceedings of the 6th European Dependable
Computing Conference, 18-20 Oct. 2006. IEEE Computer Society, Los Alamitos, CA, USA, p. 10.
[121] Moses, J., Jackson, K., 1991. Ensuring robustness and reliability of object oriented software using mascot 3. In:
Proceedings of the 2nd International Conference Reliability and Robustness of Engineering Software II. 22-24
April 1991. Comput. Mech. Publications, Southampton, UK, pp. 19–34.
[122] Mukherjee, A., Siewiorek, D. P., 1997. Measuring software dependability by robustness benchmarking. Software
Engineering, IEEE Transactions on 23 (6), 366–378.
[123] Nebut, C., Fleurey, F., Le Traon, Y., Jezequel, J. M., 2003. Requirements by contracts allow automated system
testing. In: 14th International Symposium on Software Reliability Engineering, 17-20 Nov. 2003. IEEE Computer
Society, Los Alamitos, CA, USA, pp. 85–96.
[124] Neishaburi, M. H., Daneshtalab, M., Kakoee, M. R., Safari, S., 2007. Improving Robustness of Real-Time Oper-
ating Systems (RTOS) Services Related to Soft-Errors. In: Computer Systems and Applications, 2007. AICCSA
’07. IEEE/ACS International Conference on. pp. 528–534.
[125] Neishaburi, M. H., Kakoee, M. R., Daneshtalab, M., Safari, S., Navabi, Z., 2007. A hw/sw architecture to reduce
the eﬀects of soft-errors in real-time operating system services. In: Proceedings of the 2007 IEEE Workshop on
Design and Diagnostics of Electronic Circuits and Systems, 11-13 April 2007. IEEE, Piscataway, NJ, USA, pp.
247–250.
[126] Olah, J., Majzik, I., 2009. A model based framework for specifying and executing fault injection experiments. In:
The 4th International Conference on Dependability of Computer Systems, 2009. DepCos-RELCOMEX ’09. pp.
107–114.
[127] P. Koopman and J. DeVale, 1999. Comparing the robustness of posix operating systems. In: The 29th Annual
International Symposium on Fault-Tolerant Computing, 1999. Digest of Papers. pp. 30–37.
[128] Pan, J., Koopman, P., Siewiorek, D., 1999. A dimensionality model approach to testing and improving software
robustness. In: Proceedings of the 1999 IEEE AUTOTESTCON, 30 Aug.-2 Sept. 1999. IEEE, Piscataway, NJ,
USA, pp. 493–501.
[129] Pardo, J., Campelo, J. C., Serrano, J. J., 2009. Non-intrusive tool for verifying COTS components in embedded
systems. In: 2009 International Conference on Embedded Systems &amp; Applications. ESA 2009, 13-16 July
2009. CSREA Press, Las Vegas, NV, USA, pp. 274–279.
[130] Petersen, K., Feldt, R., Mujtaba, S., Mattsson, M., 2008. Systematic mapping studies in software engineering. In:
12th International Conference on Evaluation and Assessment in Software Engineering. pp. 71–80.
[131] Popovic, M., Kovacevic, J., 2007. A statistical approach to model-based robustness testing. In: 14th Annual IEEE
International Conference and Workshops on the Engineering of Computer-Based Systems, 2007. ECBS ’07. pp.
485–494.
[132] Preston-Thomas, P., Paterson, R., 1991. A technique for improving software robustness to failure. In: ICC 91. In-
ternational Conference on Communications Conference Record (Cat. No.91CH2984-3), 23-26 June 1991. IEEE,
New York, NY, USA, pp. 1159–1163.
[133] Rajanikanth, K. N., Narahari, Y., Prasad, N. N. S. S. R. K., Rao, R. S., 2003. A robust and scalable architecture for
30
airborne radar simulation. In: IEEE TENCON 2003. Conference on Convergent Technologies for the Asia-Paciﬁc
Region, 15-17 Oct. 2003. Vol. 1. Allied Publishers Pvt. Ltd, New Delhi, India, pp. 173–177.
[134] Rajesh, T., Huhns, M. N., 2005. Multiagent reputation management to achieve robust software using redundancy.
In: Intelligent Agent Technology, IEEE/WIC/ACM International Conference on. pp. 386–392.
[135] Robertson, P., Williams, B., 2006. Automatic recovery from software failure. Communications of the ACM
49 (Copyright 2006, The Institution of Engineering and Technology), 41–47.
[136] Robillard, M. P., Murphy, G. C., 1999. Analysing exception ﬂow in javatm programs. In: ESEC/FSE’99. 7th Eu-
ropean Software Engineering Conference. Held Jointly with 7th ACM SIGSOFT Symposium on the Foundations
of Software Engineering, 6-10 Sept. 1999. Vol. 24 of Softw. Eng. Notes (USA). ACM, USA, pp. 322–327.
[137] Rollet, A., Saad-Khorchef, F., 2007. A formal approach to test the robustness of embedded systems using be-
haviour. In: 2007 5th International Conference on Software Engineering Research, Management and Applications,
20-22 Aug. 2007. IEEE, Piscataway, NJ, USA, pp. 667–674.
[138] Ruiz, J. C., Pardo, J., Campelo, J. C., Gil, P., 2005. On-chip debugging-based fault emulation for robustness
evaluation of embedded software components. In: Proceedings of the 11th Paciﬁc Rim International Symposium
on Dependable Computing, 2005. p. 8.
[139] S. Hanna and M. Munro, 2008. Fault-based web services testing. In: The 5th International Conference on Infor-
mation Technology: New Generations, 2008. ITNG 2008. pp. 471–476.
[140] Saad-Khorchef, F., Rollet, A., Castanet, R., 2007. A framework and a tool for robustness testing of communicating
software. In: Applied Computing 2007. The 22nd Annual ACM Symposium on Applied Computing, 11-15 March
2007. Vol. 2. ACM, New York, NY, USA, pp. 1461–1466.
[141] Santana, F. G., Gonzalez, J. M., Espino, J. M. S., Calero, J. C. R., 2001. Building robust applications by reusing
non-robust legacy software. In: Reliable Software Technologies - Ada-Europe 2001. 6th Ada-Europe Interna-
tional Conference on Reliable Software Technologies, 14-18 May 2001. Vol. 2043 of Lecture Notes in Computer
Science. Springer-Verlag, Berlin, Germany, pp. 148–159.
[142] Sarbu, C., Johansson, A., Fraikin, F., Suri, N., 2006. Improving robustness testing of COTS OS extensions.
In: Penkler, D., Reitenspiess, M., Tam, F. (Eds.), Service Availability. Vol. 4328 of Lecture Notes in Computer
Science. Springer-Verlag Berlin, pp. 120–139.
[143] Schmid, M., Ghosh, A., Hill, F., 2000. Techniques for evaluating the robustness of windows nt software. In:
Proceedings of DARPA Information Survivability Conference and Exposition, 2000. DISCEX ’00. Vol. 2. pp.
347–360.
[144] Schmidt, D. C., 1999. Wrapper facade: a structural pattern for encapsulated functions within classes. C++ Report
11 (Copyright 1999, IEE), 40–41.
[145] Seung Hak, K., Hyeon Soo, K., 2009. Robustness testing framework for web services composition. In: 2009 IEEE
Asia-Paciﬁc Services Computing Conference (APSCC 2009), 7-11 Dec. 2009. IEEE, Piscataway, NJ, USA, pp.
319–324.
[146] Shahrokni, A., Feldt, R., 2010. Towards a Framework for Specifying Software Robustness Requirements Based
on Patterns. Requirements Engineering: Foundation for Software Quality, 79–84.
[147] Shahrokni, A., Feldt, R., Petterson, F., B¨ack, A., 2009. Robustness veriﬁcation challenges in automotive telematics
software. In: SEKE. pp. 460–465.
[148] Shelton, C. P., Koopman, P., Devale, K., 2000. Robustness testing of the Microsoft Win32 API. In: Proceedings of
the International Conference on Dependable Systems and Networks, 25-28 June 2000. IEEE Computer Society,
Los Alamitos, CA, USA, pp. 261–270.
[149] Shin, M. E., 2005. Self-healing components in robust software architecture for concurrent and distributed systems.
Science of Computer Programming 57 (1), 27–44.
[150] Shu, X., Sheng, L., Xiangrong, W., Lijun, D., 2003. Fault-oriented software robustness assessment for multicast
protocols. In: Proceedings of the 2nd IEEE International Symposium on Network Computing and Applications.
NCA 2003, 16-18 April 2003. Proceedings of the 2nd IEEE International Symposium on Network Computing
and Applications. NCA 2003. IEEE Computer Society, Los Alamitos, CA, USA, pp. 223–230.
[151] Shyamasundar, R. K., 1994. Design of software for safety critical systems. Sadhana 19 (Copyright 1995, IEE),
941–969.
[152] Siewiorek, D. P., Hudak, J. J., Suh, B. H., Segal, Z., 1993. Development of a benchmark to measure system
robustness. In: FTCS-23 The 23rd International Symposium on Fault-Tolerant Computing, 22-24 June 1993.
IEEE Computer Society, Los Alamitos, CA, USA, pp. 88–97.
[153] Sloan, J., Kesler, D., Kumar, R., Rahimi, A., 2010. A numerical optimization-based methodology for application
robustiﬁcation: Transforming applications for error tolerance. In: 2010 IEEE/IFIP International Conference on
Dependable Systems and Networks (DSN), 28 June-1 July 2010. IEEE, Piscataway, NJ, USA, pp. 161–70.
[154] Susskraut, M., Fetzer, C., 2007. Robustness and security hardening of COTS software libraries. In: 37th Annual
IEEE/IFIP International Conference on Dependable Systems and Networks (DSN’07), 25-28 June 2007. IEEE,
Piscataway, NJ, USA, pp. 61–71.
31
[155] Svahnberg, M., Gorschek, T., Feldt, R., Torkar, R., Saleem, S. B., Shaﬁque, M. U., 2010. A systematic review on
strategic release planning models. Information and Software Technology 52 (3), 237–248.
[156] Tao, X., Acharya, M., Thummalapenta, S., Taneja, K., 2008. Improving software reliability and productivity via
mining program source code. In: Parallel and Distributed Processing, 2008. IPDPS 2008. IEEE International
Symposium on. pp. 1–5.
[157] Tarhini, A., Rollet, A., Fouchal, H., 2004. A pragmatic approach for testing robustness on real-time component
based systems. In: Book of Abstracts. ACS/IEEE International Conference on Computer Systems and Applica-
tions, 3-6 Jan. 2005. IEEE, Piscataway, NJ, USA, pp. 143–150.
[158] Tsanchi, L., Chi-Ming, C., Horgan, B., Lai, M. Y., Wang, S. Y., 1994. A software fault insertion testing method-
ology for improving the robustness of telecommunications systems. In: IEEE International Conference on Com-
munications, 1994. ICC ’94, SUPERCOMM/ICC ’94, Conference Record, ’Serving Humanity Through Commu-
nications.’. pp. 1767–1771.
[159] Twala, B., Cartwright, M., Shepperd, M., 2005. Comparison of various methods for handling incomplete data
in software engineering databases. In: 2005 International Symposium on Empirical Software Engineering, 17-18
Nov. 2005. IEEE, Piscataway, NJ, USA, p. 10.
[160] V. Issarny, 1992. Exception handling mechanism for parallel object-oriented programming. towards the design of
reusable and robust distributed software. Tech. rep., Inst. Nat. Recherche Inf. Autom., Le Chesnay, France.
[161] Verde, L., Amato, F., Canzolino, P., 2000. A software tool for robustness analysis in plant parameters space
(roban). Computer-Aided Control System Design, 2000. CACSD 2000. IEEE International Symposium on, 196–
201.
[162] Vieira, M., Laranjeiro, N., Madeira, H., 2007. Assessing robustness of web-services infrastructures. In: Depend-
able Systems and Networks, 2007. DSN ’07. 37th Annual IEEE/IFIP International Conference on. pp. 131–136.
[163] Vieira, M., Laranjeiro, N., Madeira, H., 2007. Benchmarking the robustness of web services. In: Dependable
Computing, 2007. PRDC 2007. 13th Paciﬁc Rim International Symposium on. pp. 322–329.
[164] Voas, E., Charron, F., McGraw, G., Miller, K., Friedman, M., 1997. Predicting how badly good software can
behave. IEEE Software 14 (Copyright 1997, IEE), 73–83.
[165] Voas, J., Miller, K., 1996. Interface robustness for COTS-based systems. In: IEE Colloquium on COTS and Safety
Critical Systems (Digest No.1997/103), 28 Jan. 1997. IEE, London, UK, p. 7.
[166] Waydo, S., Dunbar, W. B., Klavins, E., 2003. Toward feedback stabilization of faulty software systems: a case
study. In: 42nd IEEE International Conference on Decision and Control, 9-12 Dec. 2003. Vol. 1. IEEE, Piscataway,
NJ, USA, pp. 738–743.
[167] Wei Hoo, C., 2007. RPB in Software Testing. In: Computing in the Global Information Technology, 2007. ICCGI
2007. International Multi-Conference on. pp. 8–8.
[168] Yeh, C. H., Parhami, B., Varavrigos, E. A., Varvarigou, T. A., 2001. RACE: a software-based fault tolerance
scheme for systematically transforming ordinary algorithms to robust algorithms. In: Proceedings of the 15th
International Parallel and Distributed Processing Symposium. p. 6.
[169] Zamli, K. Z., Hassan, M. D. A., Isa, N. A. M., Azizan, S. N., 2006. An automated software fault injection tool for
robustness assessment of java cots. In: 2006 International Conference on Computing & Informatics. ICOCI 2006,
6-8 June 2006. IEEE, Piscataway, NJ, USA, p. 6.
32