RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8
9
RUN mkdir /docker-entrypoint-initdb.d
RUN apt-key adv --keyserver pool.sks-keyservers.net --recv-keys
B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
8
ENV PG_MAJOR 9.4
ENV PG_VERSION 9.4.0-1.pgdg70+1
RUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main' $PG_MAJOR >
10
/etc/apt/sources.list.d/pgdg.list
RUN apt-get update \
&& apt-get install -y postgresql-common \
10
&& sed -ri 's/#(create_main_cluster) .*$/\1 = false/' /etc/postgresql-common/createcluster.conf \
&& apt-get install -y \
postgresql-$PG_MAJOR=$PG_VERSION \
11
postgresql-contrib-$PG_MAJOR=$PG_VERSION \
&& rm -rf /var/lib/apt/lists/*
RUN mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql
13
ENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
ENV PGDATA /var/lib/postgresql/data
VOLUME /var/lib/postgresql/data
14
COPY docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]
15
EXPOSE 5432
CMD ["postgres"]
使用Dockerfile构建镜像并启动容器： 16
$ sudo docker build -t eg_postgresql .
$ sudo docker run --rm -P --name pg_test eg_postgresql 17
有两种方法可以连接到PostgreSQL服务器。我们可以使用链接容器，或者从我们的主机（或
18
网络）访问它。在客户端docker run命令中，直接使用--link remote_name:local_alias使容器连
250 附录A 常见镜像
接到另一个容器端口：
$ sudo docker run --rm -t -i --link pg_test:pg eg_postgresql bash
postgres@7ef98b1b7243:/$ psql -h $PG_PORT_5432_TCP_ADDR -p $PG_PORT_5432_TCP_PORT -d docker -U docker
–password
在上述命令中，我们通过psql客户端连接到PostgreSQL数据库。假设你有安装postgresql客
户端，可以使用主机端口映射测试。你需要使用docker ps命令找出映射到本地主机的端口:
$ docker ps
CONTAINER ID IMAGE COMMAND CREATED
STATUS PORTS NAMES
5e24362f27f6 eg_postgresql:latest /usr/lib/postgresql/ About an hour ago
Up About an hour 0.0.0.0:49153->5432/tcp pg_test
$ psql -h localhost -p 49153 -d docker -U docker --password
一旦你已经通过身份验证，并且有docker =#提示，就可以创建一个表并填充它：
psql (9.3.1)
Type "help" for help.
$ docker=# CREATE TABLE cities (
docker(# name varchar(80),
docker(# location point
docker(# );
CREATE TABLE
$ docker=# INSERT INTO cities VALUES ('San Francisco', '(-194.0, 53.0)');
INSERT 0 1
$ docker=# select * from cities;
name | location
---------------+-----------
San Francisco | (-194,53)
(1 row)
此外，还可以使用busybox对其进行卷检查、定义日志文件、备份配置和数据等操作，相关
代码为：
$ docker run --rm --volumes-from pg_test -t -i busybox sh
/ # ls
bin etc lib linuxrc mnt proc run sys usr
dev home lib64 media opt root sbin tmp var
/ # ls /etc/postgresql/9.3/main/
environment pg_hba.conf postgresql.conf
pg_ctl.conf pg_ident.conf start.conf
/tmp # ls /var/log
ldconfig postgresql
A.3 Web服务镜像
Web服务是互联网最主要的服务，它通过HTTP协议为客户端的请求提供响应。目前，常用
附录A 常见镜像 251
的Web服务有Apache httpd、Nginx和Tomcat。
1
A.3.1 httpd
2
httpd，即Apache HTTP服务器，也会直接简称为Apache。自1996年起，它就是世界流行度排
3
名第一的Web服务器，可以运行在Windows、Linux等大多数操作系统之上。
通过以下命令可以直接启动httpd容器：
4
$ sudo docker run -it --rm --name my-apache-app -v "$(pwd)":/usr/local/apache2/htdocs/ httpd:2.4
此外，也可以使用Dockerfile的方式启动，其中Dockerfile的内容为： 5
FROM httpd:2.4
6
COPY ./public-html/ /usr/local/apache2/htdocs/
然后通过如下命令构建镜像和启动容器：
7
docker build -t my-apache2 .
docker run -it --rm --name my-running-app my-apache2
9
除了直接使用官方的镜像外，读者还可以通过如下Dockerfile来构建一个httpd镜像：
8
FROM debian:jessie
# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever
dependencies get added
#RUN groupadd -r www-data && useradd -r --create-home -g www-data www-data 10
ENV HTTPD_PREFIX /usr/local/apache2
ENV PATH $PATH:$HTTPD_PREFIX/bin
RUN mkdir -p "$HTTPD_PREFIX" \ 10
&& chown www-data:www-data "$HTTPD_PREFIX"
WORKDIR $HTTPD_PREFIX
# install httpd runtime dependencies 11
# https://httpd.apache.org/docs/2.4/install.html#requirements
RUN apt-get update \
&& apt-get install -y --no-install-recommends \ 13
libapr1 \
libaprutil1 \
libpcre++0 \ 14
libssl1.0.0 \
&& rm -r /var/lib/apt/lists/*
# see https://httpd.apache.org/download.cgi#verify 15
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys A93D62ECC3C8EA12DB220EC934EA76E6791485A8
ENV HTTPD_VERSION 2.4.12
ENV HTTPD_BZ2_URL https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2 16
RUN buildDeps=' \
ca-certificates \
curl \ 17
bzip2 \
gcc \
libapr1-dev \ 18
libaprutil1-dev \
252 附录A 常见镜像
libc6-dev \
libpcre++-dev \
libssl-dev \
make \
' \
set -x \
&& apt-get update \
&& apt-get install -y --no-install-recommends $buildDeps \
&& rm -r /var/lib/apt/lists/* \
&& curl -SL "$HTTPD_BZ2_URL" -o httpd.tar.bz2 \
&& curl -SL "$HTTPD_BZ2_URL.asc" -o httpd.tar.bz2.asc \
&& gpg --verify httpd.tar.bz2.asc \
&& mkdir -p src/httpd \
&& tar -xvf httpd.tar.bz2 -C src/httpd --strip-components=1 \
&& rm httpd.tar.bz2* \
&& cd src/httpd \
&& ./configure --enable-so --enable-ssl --prefix=$HTTPD_PREFIX \
&& make -j"$(nproc)" \
&& make install \
&& cd ../../ \
&& rm -r src/httpd \
&& sed -ri ' \
s!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g; \
s!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g; \
' /usr/local/apache2/conf/httpd.conf \
&& apt-get purge -y --auto-remove $buildDeps
COPY httpd-foreground /usr/local/bin/
EXPOSE 80
CMD ["httpd-foreground"]
A.3.2 Nginx
Nginx是一个高性能的Web服务器，也可以作为HTTP、HTTPS、SMTP、TOP3、IMAP等应
用的反向服务器。Nginx具有高并发、高性能和低内存耗费等优点，越来越受到Web应用开发者
的欢迎。
通过如下命令可以启动Nginx容器作为一个静态页面的服务器：
$ sudo docker run --name some-nginx -v /some/content:/usr/share/nginx/html:ro -d nginx
也可以使用Dockerfile来达到上述目的，其中Dockerfile的内容为：
FROM nginx
COPY static-html-directory /usr/share/nginx/html
然后使用docker build –t some-content-nginx命令构建镜像，然后启动该镜像：
docker run --name some-nginx -d some-content-nginx
暴露端口：
附录A 常见镜像 253
docker run --name some-nginx -d -p 8080:80 some-content-nginx
1
可以通过浏览器来访问http://localhost:8080来验证服务是否正常工作。
2
Nginx的配置文件为nginx.conf，如果想自定义配置，则可以挂载本地的配置文件到容器内：
$ sudo docker run --name some-nginx -v /some/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx
3
同样，这个配置也可以通过Dockerfile的方式来实现：
4
FROM nginx
COPY nginx.conf /etc/nginx/nginx.conf
5
使用docker build -t some-custom-nginx构建镜像，然后启动容器：
$ sudo docker run --name some-nginx -d some-custom-nginx
6
Nginx的官方仓库还提供了Dockerfile构建Nginx镜像，目前的版本是1.7.9，其内容为：
7
FROM debian:wheezy
MAINTAINER NGINX Docker Maintainers "PI:EMAIL"
RUN apt-key adv --keyserver pgp.mit.edu --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
9
RUN echo "deb http://nginx.org/packages/mainline/debian/ wheezy nginx" >> /etc/apt/sources.list
ENV NGINX_VERSION 1.7.9-1~wheezy
RUN apt-get update && apt-get install -y nginx=${NGINX_VERSION} && rm -rf /var/lib/apt/lists/*
# forward request and error logs to docker log collector 8
RUN ln -sf /dev/stdout /var/log/nginx/access.log
RUN ln -sf /dev/stderr /var/log/nginx/error.log
VOLUME ["/var/cache/nginx"] 10
EXPOSE 80 443
CMD ["nginx", "-g", "daemon off;"]
10
A.3.3 Tomcat
11
Tomcat是Apache软件基金会（Apache Software Foundation）开发的一款开源Web服务器和
servlet容器，主要用在开发和部署Java servlet和JSP方面的应用上。 13
可以通过以下命令启动默认的服务容器：
14
$ sudo docker run -it --rm tomcat:8.0
或者指定端口映射： 15
$sudo docker run -it --rm -p 8888:8080 tomcat:8.0
16
这样通过浏览器浏览本地的8888端口，就可以访问其服务了。
Tomcat有几个环境变量非常重要。当用户需要自定义配置时，会用到这些环境变量，其默认
17
值为：
CATALINA_BASE: /usr/local/tomcat 18
254 附录A 常见镜像
CATALINA_HOME: /usr/local/tomcat
CATALINA_TMPDIR: /usr/local/tomcat/temp
JRE_HOME: /usr
CLASSPATH: /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar
此外，Tomcat的配置文件在/usr/local/tomcat/conf/目录下。例如，你可以改变该目录下的
tomcat-users.xml文件，加入用户使其可以成为manager-gui角色等。
下面我们给出Tomcat 8.0.18-jre8版本的Dockerfile：
FROM java:8-jre
ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH
RUN mkdir -p "$CATALINA_HOME"
WORKDIR $CATALINA_HOME
# see https://www.apache.org/dist/tomcat/tomcat-8/KEYS
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys \
05AB33110949707C93A279E3D3EFE6B686867BA6 \
07E48665A34DCAFAE522E5E6266191C37C037D42 \
47309207D818FFD8DCD3F83F1931D684307A10A5 \
541FBE7D8F78B25E055DDEE13C370389288584E7 \
61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \
79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \
9BA44C2621385CB966EBA586F72C284D731FABEE \
A27677289986DB50844682F8ACB77FC2E86E29AC \
A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 \
DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \
F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE \
F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23
ENV TOMCAT_MAJOR 8
ENV TOMCAT_VERSION 8.0.18
ENV TOMCAT_TGZ_URL
https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT
_VERSION.tar.gz
RUN curl -SL "$TOMCAT_TGZ_URL" -o tomcat.tar.gz \
&& curl -SL "$TOMCAT_TGZ_URL.asc" -o tomcat.tar.gz.asc \