above for assets as well as subjects). This evaluation should be continual for as long as 
the session lasts. Enterprise-owned devices may have artifacts that enable authentication 
and provide a confidence level higher than the same request coming from nonenterprise-
owned devices. Subject credentials alone are insufficient for device authentication to an 
enterprise resource. 
4. Not all enterprise resources are on enterprise-owned infrastructure. Resources 
include remote enterprise subjects as well as cloud services. Enterprise-owned or -
managed assets may need to utilize the local (i.e., nonenterprise) network for basic 
connectivity and network services (e.g., DNS resolution). 
5. Remote enterprise subjects and assets cannot fully trust their local network 
connection. Remote subjects should assume that the local (i.e., nonenterprise-owned) 
network is hostile. Assets should assume that all traffic is being monitored and potentially 
modified. All connection requests should be authenticated and authorized, and all 
communications should be done in the most secure manner possible (i.e., provide 
confidentiality, integrity protection, and source authentication). See the tenets of ZTA 
above. 
6. Assets and workflows moving between enterprise and nonenterprise infrastructure 
should have a consistent security policy and posture. Assets and workloads should 
retain their security posture when moving to or from enterprise-owned infrastructure. 
This includes devices that move from enterprise networks to nonenterprise networks (i.e. 
remote users). This also includes workloads migrating from on-premises data centers to 
nonenterprise cloud instances. 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
9 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
3 
Logical Components of Zero Trust Architecture  
There are numerous logical components that make up a ZTA deployment in an enterprise. These 
components may be operated as an on-premises service or through a cloud-based service. The 
conceptual framework model in Figure 2 shows the basic relationship between the components 
and their interactions. Note that this is an ideal model showing logical components and their 
interactions. From Figure 1, the policy decision point (PDP) is broken down into two logical 
components: the policy engine and policy administrator (defined below). The ZTA logical 
components use a separate control plane to communicate, while application data is 
communicated on a data plane (see Section 3.4). 
Figure 2: Core Zero Trust Logical Components 
The component descriptions: 
• Policy engine (PE): This component is responsible for the ultimate decision to grant 
access to a resource for a given subject. The PE uses enterprise policy as well as input 
from external sources (e.g., CDM systems, threat intelligence services described below) 
as input to a trust algorithm (see Section 3.3 for more details) to grant, deny, or revoke 
access to the resource. The PE is paired with the policy administrator component. The 
policy engine makes and logs the decision (as approved, or denied), and the policy 
administrator executes the decision. 
• Policy administrator (PA): This component is responsible for establishing and/or 
shutting down the communication path between a subject and a resource (via commands 
to relevant PEPs). It would generate any session-specific authentication and 
authentication token or credential used by a client to access an enterprise resource. It is 
closely tied to the PE and relies on its decision to ultimately allow or deny a session. If 
the session is authorized and the request authenticated, the PA configures the PEP to 
allow the session to start. If the session is denied (or a previous approval is 
countermanded), the PA signals to the PEP to shut down the connection. Some 
implementations may treat the PE and PA as a single service; here, it is divided into its 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
10 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
two logical components. The PA communicates with the PEP when creating the 
communication path. This communication is done via the control plane.  
• Policy enforcement point (PEP): This system is responsible for enabling, monitoring, 
and eventually terminating connections between a subject and an enterprise resource. The 
PEP communicates with the PA to forward requests and/or receive policy updates from 
the PA. This is a single logical component in ZTA but may be broken into two different 
components: the client (e.g., agent on a laptop) and resource side (e.g., gateway 
component in front of resource that controls access) or a single portal component that acts 
as a gatekeeper for communication paths. Beyond the PEP is the trust zone (see Section 
2) hosting the enterprise resource. 
In addition to the core components in an enterprise implementing a ZTA, several data sources 
provide input and policy rules used by the policy engine when making access decisions. These 
include local data sources as well as external (i.e., nonenterprise-controlled or -created) data 
sources. These can include: 
• Continuous diagnostics and mitigation (CDM) system: This gathers information about 
the enterprise asset’s current state and applies updates to configuration and software 
components. An enterprise CDM system provides the policy engine with the information 
about the asset making an access request, such as whether it is running the appropriate 
patched operating system (OS), the integrity of enterprise-approved software components 
or presence of non-approved components and whether the asset has any known 
vulnerabilities. CDM systems are also responsible for identifying and potentially 
enforcing a subset of polices on nonenterprise devices active on enterprise infrastructure. 
• Industry compliance system: This ensures that the enterprise remains compliant with 
any regulatory regime that it may fall under (e.g., FISMA, healthcare or financial 
industry information security requirements). This includes all the policy rules that an 
enterprise develops to ensure compliance. 
• Threat intelligence feed(s): This provides information from internal or external sources 
that help the policy engine make access decisions. These could be multiple services that 
take data from internal and/or multiple external sources and provide information about 
newly discovered attacks or vulnerabilities. This also includes newly discovered flaws in 
software, newly identified malware, and reported attacks to other assets that the policy 
engine will want to deny access to from enterprise assets. 
• Network and system activity logs: This enterprise system aggregates asset logs, 
network traffic, resource access actions, and other events that provide real-time (or near-
real-time) feedback on the security posture of enterprise information systems. 
• Data access policies: These are the attributes, rules, and policies about access to 
enterprise resources. This set of rules could be encoded in (via management interface) or 
dynamically generated by the policy engine. These policies are the starting point for 
authorizing access to a resource as they provide the basic access privileges for accounts 
and applications/services in the enterprise. These policies should be based on the defined 
mission roles and needs of the organization. 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
11 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
• Enterprise public key infrastructure (PKI): This system is responsible for generating 
and logging certificates issued by the enterprise to resources, subjects, services and 
applications. This also includes the global certificate authority ecosystem and the Federal 
PKI,4 which may or may not be integrated with the enterprise PKI. This could also be a 
PKI that is not built upon X.509 certificates. 
• ID management system: This is responsible for creating, storing, and managing 
enterprise user accounts and identity records (e.g., lightweight directory access protocol 
(LDAP) server). This system contains the necessary subject information (e.g., name, 
email address, certificates) and other enterprise characteristics such as role, access 
attributes, and assigned assets. This system often utilizes other systems (such as a PKI) 
for artifacts associated with user accounts. This system may be part of a larger federated 
community and may include nonenterprise employees or links to nonenterprise assets for 
collaboration. 
• Security information and event management (SIEM) system: This collects security-
centric information for later analysis. This data is then used to refine policies and warn of 
possible attacks against enterprise assets. 
3.1 
Variations of Zero Trust Architecture Approaches 
There are several ways that an enterprise can enact a ZTA for workflows. These approaches vary 
in the components used and in the main source of policy rules for an organization. Each 
approach implements all the tenets of ZT (see Section 2.1) but may use one or two (or one 
component) as the main driver of policies. A full ZT solution will include elements of all three 
approaches. The approaches include enhanced identity governance–driven, logical micro-
segmentation, and network-based segmentation. 
Certain approaches lend themselves to some use cases more than others. An organization looking 
to develop a ZTA for its enterprise may find that its chosen use case and existing policies point 
to one approach over others. That does not mean the other approaches would not work but rather 
that other approaches may be more difficult to implement and may require more fundamental 
changes to how the enterprise currently conducts business flows. 
3.1.1 ZTA Using Enhanced Identity Governance 
The enhanced identity governance approach to developing a ZTA uses the identity of actors as 
the key component of policy creation. If it were not for subjects requesting access to enterprise 
resources, there would be no need to create access polices. For this approach, enterprise resource 
access policies are based on identity and assigned attributes. The primary requirement for 
resource access is based on the access privileges granted to the given subject. Other factors such 
as device used, asset status, and environmental factors may alter the final confidence level 
calculation (and ultimate access authorization) or tailor the result in some way, such as granting 
only partial access to a given data source based on network location. Individual resources or PEP 
4 https://www.idmanagement.gov/topics/fpki/ 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
12 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
components protecting the resource must have a way to forward requests to a policy engine 
service or authenticate the subject and approve the request before granting access. 
Enhanced identity governance-based approaches for enterprises are often employed using an 
open network model or an enterprise network with visitor access or frequent nonenterprise 
devices on the network (such as with the use case in Section 4.3 below). Network access is 
initially granted to all assets but access to enterprise resources are restricted to identities with the 
appropriate access privileges. There is a downside in granting basic network connectivity as 
malicious actors could still attempt network reconnaissance and/or use the network to launch 
denial of service attacks either internally or against a third party. Enterprises still need to monitor 
and respond to such behavior before it impacts workflows.  
The identity-driven approach works well with the resource portal model (see Section 3.2.3) since 
device identity and status provide secondary support data to access decisions. Other models work 
as well, depending on policies in place. Identity-driven approaches also work well for enterprises 
that use cloud-based applications/services that may not allow for enterprise-owned or -operated 
ZT security components to be used (such as many SaaS offerings). The enterprise can use the 
identity of requestors to form and enforce policy on these platforms. 
3.1.2 ZTA Using Micro-Segmentation  
An enterprise may choose to implement a ZTA based on placing individual or groups of 
resources on a unique network segment protected by a gateway security component. In this 
approach, the enterprise places infrastructure devices such as intelligent switches (or routers) or 
next generation firewalls (NGFWs) or special purpose gateway devices to act as PEPs protecting 
each resource or small group of related resources. Alternatively (or additionally), the enterprise 
may choose to implement host-based micro-segmentation using software agents (see Section 
3.2.1) or firewalls on the endpoint asset(s), These gateway devices dynamically grant access to 
individual requests from a client, asset or service. Depending on the model, the gateway may be 
the sole PEP component or part of a multipart PEP consisting of the gateway and client-side 
agent (see Section 3.2.1). 
This approach applies to a variety of use cases and deployment models as the protecting device 
acts as the PEP, with management of said devices acting as the PE/PA component. This 
approach requires an identity governance program (IGP) to fully function but relies on the 
gateway components to act as the PEP that shields resources from unauthorized access and/or 
discovery. 
The key necessity to this approach is that the PEP components are managed and should be able 
to react and reconfigure as needed to respond to threats or change in the workflow. It is possible 
to implement some features of a micro-segmented enterprise by using less advanced gateway 
devices and even stateless firewalls, but the administration cost and difficulty to quickly adapt to 
changes make this a very poor choice. 
3.1.3 ZTA Using Network Infrastructure and Software Defined Perimeters  
The last approach uses the network infrastructure to implement a ZTA. The ZTA implementation 
could be achieved by using an overlay network (i.e., layer 7 but also could be set up lower of the 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
13 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
OSI network stack). These approaches are sometimes referred to as software defined perimeter 
(SDP) approaches and frequently include concepts from Software Defined Networks (SDN) 
[SDNBOOK] and intent-based networking (IBN) [IBNVN]. In this approach, the PA acts as the 
network controller that sets up and reconfigures the network based on the decisions made by the 
PE. The clients continue to request access via PEPs, which are managed by the PA component.   
When the approach is implemented at the application network layer (i.e., layer 7), the most 
common deployment model is the agent/gateway (see Section 3.2.1). In this implementation, the 
agent and resource gateway (acting as the single PEP and configured by the PA) establish a 
secure channel used for communication between the client and resource. There may be other 
variations of this model, as well for cloud virtual networks, non-IP based networks, etc. 
3.2 
Deployed Variations of the Abstract Architecture 
All of the above components are logical components. They do not necessarily need to be unique 
systems. A single asset may perform the duties of multiple logical components, and likewise, a 
logical component may consist of multiple hardware or software elements to perform the tasks. 
For example, an enterprise-managed PKI may consist of one component responsible for issuing 
certificates for devices and another used for issuing certificates to end users, but both use 
intermediate certificates issued from the same enterprise root certificate authority. In some ZT 
product offerings currently available on the market, the PE and PA components are combined in 
a single service. 
There are several variations on deployment of selected components of the architecture that are 
outlined in the sections below. Depending on how an enterprise network is set up, multiple ZTA 
deployment models may be in use for different business processes in one enterprise.  
3.2.1 Device Agent/Gateway-Based Deployment 
In this deployment model, the PEP is divided into two components that reside on the resource or 
as a component directly in front of a resource. For example, each enterprise-issued asset has an 
installed device agent that coordinates connections, and each resource has a component (i.e., 
gateway) that is placed directly in front so that the resource communicates only with the 
gateway, essentially serving as a proxy for the resource. The agent is a software component that 
directs some (or all) traffic to the appropriate PEP in order for requests to be evaluated. The 
gateway is responsible for communicating with the policy administrator and allowing only 
approved communication paths configured by the policy administrator (see Figure 3).  
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
14 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
Figure 3: Device Agent/Gateway Model 
In a typical scenario, a subject with an enterprise-issued laptop wishes to connect to an enterprise 
resource (e.g., human resources application/database). The access request is taken by the local 
agent, and the request is forwarded to the policy administrator. The policy administrator and 
policy engine could be an enterprise local asset or a cloud-hosted service. The policy 
administrator forwards the request to the policy engine for evaluation. If the request is 
authorized, the policy administrator configures a communication channel between the device 
agent and the relevant resource gateway via the control plane. This may include information such 
as an internet protocol (IP) address, port information, session key, or similar security artifacts. 
The device agent and gateway then connect, and encrypted application/service data flows begin. 
The connection between the device agent and resource gateway is terminated when the workflow 
is completed or when triggered by the policy administrator due to a security event (e.g., session 
time-out, failure to reauthenticate). 
This model is best utilized for enterprises that have a robust device management program in 
place as well as discrete resources that can communicate with the gateway. For enterprises that 
heavily utilize cloud services, this is a client-server implementation of the Cloud Security 
Alliance (CSA) Software Defined Perimeter (SDP) [CSA-SDP]. This model is also appropriate 
for enterprises that do not want a BYOD policy in place. Access is possible only via the device 
agent, which can be placed on enterprise-owned assets. 
3.2.2 Enclave-Based Deployment 
This deployment model is a variation of the device agent/gateway model above. In this model, 
the gateway components may not reside on assets or in front of individual resources but instead 
reside at the boundary of a resource enclave (e.g., on-location data center) as shown in Figure 4. 
Usually, these resources serve a single business function or may not be able to communicate 
directly to a gateway (e.g., legacy database system that does not have an application 
programming interface [API] that can be used to communicate with a gateway). This deployment 
model may also be useful for enterprises that use cloud-based micro-services for a single 
business processes (e.g., user notification, database lookup, salary disbursement). In this model, 
the entire private cloud is located behind a gateway. 
NIST SP 800-207 
ZERO TRUST ARCHITECTURE 
15 
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207 
Figure 4: Enclave Gateway Model 
It is possible for this model to be a hybrid with the device agent/gateway model. In this model, 
enterprise assets have a device agent that is used to connect to enclave gateways, but these 
connections are created using the same process as the basic device agent/gateway model.  
This model is useful for enterprises that have legacy applications or on-premises data centers that 
cannot have individual gateways in place. The enterprise needs a robust asset and configuration 
management program in place to install/configure the device agents. The downside is that the 
gateway protects a collection of resources and may not be able to protect each resource 
individually. This may also allow for subjects to see resources which they do not have privileges 
to access.   
3.2.3 Resource Portal-Based Deployment 
In this deployment model, the PEP is a single component that acts as a gateway for subject 
requests. The gateway portal can be for an individual resource or a secure enclave for a 
collection of resources used for a single business function. One example would be a gateway 
portal into a private cloud or data center containing legacy applications as shown in Figure 5. 
NIST SP 800-207 