⟨xid, vℛ⟩
⟨xid, 𝑚 · vℛ⟩
⟨xid, vℛ⟩ = 𝑚.
=
A non-revoked user will be able to correctly decrypt this
ciphertext with overwhelming probability. On the other hand,
a revoked user cannot implement Step (b).
We now consider the (public) tracing procedure. We will
show that given an oracle access to a pirate decoder 𝒟 and a
set 𝒮 = {id1, id2, . . . ,} of suspected traitors with |𝒮| ≤ 𝑡, it
is possible to find an identity id in the set 𝒯 of traitors, as
long as 𝒯 ⊆ 𝒮. Here, we assume ℛ ∩ 𝒮 = ∅ for simplicity.
Given a pirate decoder 𝒟, our tracing algorithm first finds
a pair of messages 𝑚 and 𝑚′ such that 𝒟 can distinguish the
encryption of 𝑚 and 𝑚′ with noticeable probability. As we
will show in the main body, such a pair can be found effi-
ciently. Then, the tracing algorithm proceeds as follows. Let
us consider a subset of suspect traitors 𝒮𝑖 = {id𝑖, id𝑖+1, . . .}
for 𝑖 = 1, . . . ,|𝒮|+1. We then generate a probe ciphertext 𝐶𝒮𝑖
associated to 𝒮𝑖 with the following properties:
∙ The distribution of 𝐶𝒮 corresponds to the normal en-
∙ The distribution of 𝐶∅ corresponds to the normal en-
∙ The probes 𝐶𝒮𝑖−1 and 𝐶𝒮𝑖 are indistinguishable with-
cryption of 𝑚.
cryption of 𝑚′.
out a secret key for id𝑖−1.
The tracing algorithm then estimates the distinguishing ad-
vantage of the decoder 𝒟 for 𝐶𝒮𝑖−1 and 𝐶𝒮𝑖 for all 𝑖 ∈
{2, . . . ,|𝒮| + 1}. It outputs the identity id𝑖−1 of the user that
is excluded from 𝒮𝑖−1 to get 𝒮𝑖 such that the distinguishing
advantage between them is non-negligible.
We prove that the tracing algorithm always outputs some
user in 𝒯 . To see this, we first observe that by the first
and second properties above, the decoder 𝒟 distinguishes
𝐶𝒮1 = 𝐶𝒮 and 𝐶𝒮|𝒮|+1 = 𝐶∅ with non-negligible advantage.
Therefore, by the triangle inequality, there exists at least
one index 𝑖 such that 𝒟 distinguishes 𝐶𝒮𝑖−1 and 𝐶𝒮𝑖 with
non-negligible advantage. By the third property above, the
identity id𝑖−1 indeed corresponds to a traitor.
The above idea is implemented using inner product func-
tional encryption. To create the probe ciphertext, we first
set v𝒮 ∈ Zℓ
𝑝 as follows: If 𝑖 = 1, we set v𝒮 = 0; If 𝑖 = |𝒮| + 1,
we set v𝒮𝑖 = (𝑚′ − 𝑚) · vℛ where vℛ is chosen as in the
ordinary encryption algorithm; Otherwise, we set v𝒮𝑖 so that
∙ ⟨xid, v𝒮𝑖⟩ = 0 for every id ∈ 𝒮𝑖 ∪ ℛ,
∙ ⟨xid, v𝒮𝑖⟩ = (𝑚′ − 𝑚) · ⟨xid, vℛ⟩ for every id ∈ 𝒮1∖𝒮𝑖.
Note that this can be implemented only if 𝑟 + 𝑡  0.2 The probability of decryption for
a decoder 𝒟 can be estimated by repeatedly querying the
oracle 𝒪𝒟 with plaintext-ciphertext pairs, using Hoeffding’s
inequality. Alternatively, we may force the correct decryption
probability to be non-negligibly close to 1, by using an all-
or-nothing transform (see [24]). We also assume that the
decoder 𝒟 is stateless/resettable, i.e., it cannot see and adapt
to it being tested, and replies independently to successive
queries. Handling stateful pirate boxes has been investigated
in [22, 23].
We let the identity space ID and the message space ℳ be
implicit arguments to the setup algorithm below. We let the
secret key space 𝒦 and the ciphertext space 𝒞 (along with ID
and ℳ) be implicit public parameters output by the setup
algorithm.
Definition 2.1. A dynamic identity-based trace-and-revoke
scheme (𝑡, 𝑟)-𝒯 ℛ in black-box confirmation model is a tuple
𝒯 ℛ = (Setup, KeyGen, Enc, Dec, Trace) of five probabilistic
polynomial-time algorithms with the following specifications.
∙ Setup(1𝜆, 1𝑡, 1𝑟) takes as input the security parame-
ter 𝜆, the bound 𝑡 on the size of traitor coalitions and
the bound 𝑟 on the number of revoked users. It out-
puts (msk, pk, pd) containing the master secret key, the
encryption key and the (initially empty) public direc-
tory pd. We will implicitly assume that pd is available
to all algorithms.