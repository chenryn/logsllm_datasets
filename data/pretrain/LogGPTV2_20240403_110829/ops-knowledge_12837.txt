User: How to use Ansible to automate server management? Please provide a specific example.
Assistant: Ansible is a powerful automation tool that can be used to manage servers. Ansible can be used in the following specific scenarios: Case: Configuring web servers Suppose you need to install and configure Nginx as a web server on 10 servers, and among them Some servers require PHP to be installed. You can use Ansible for this task. 1. Create an Ansible host First, you need to create an Ansible host on one of the servers. Ansible needs to run on this host and access other servers via SSH. 2. Install Ansible on the Ansible host Ansible needs to be installed on the Ansible host. There are different installation methods depending on the operating system. Ubuntu: ``` sudo apt-get update sudo apt-get install ansible ``` CentOS: ``` sudo yum install epel-release sudo yum install ansible ``` 3. Write Ansible playbook Create a file and name it `webserver .yml`, which contains the following code: ```yaml - hosts: web tasks: - name: Install Nginx yum: name=nginx state=latest become: true - name: Start Nginx service: name=nginx state=started become: true - hosts: php tasks: - name: Install PHP yum: name=php state=latest become: true ``` The above code defines two host groups: `web` and `php`. In the `web` group, Ansible will install and start Nginx; in the `php` group, Ansible will only install PHP. In each task, the `become` property is set to `true` in order to make Ansible use root privileges when executing commands. 4. Configure server inventory Create a file named `inventory.ini`, which contains the list of servers: ``` [web] 192.168.0.1 192.168.0.2 192.168.0.3 [php] 192.168.0.2 192.168.0.4 ``` this The manifest defines two hostgroups: `web` and `php`. The server's IP address is listed below each group. 5. Run the Ansible playbook On the Ansible host, run the following command to execute the Ansible playbook: ``` ansible-playbook -i inventory.ini webserver.yml ``` Ansible will connect to the servers and execute the appropriate task in order to install and start Nginx in the `web` server group and only PHP in the `php` server group. This is just a simple example, but Ansible can handle a wide range of tasks from system configuration and software installation to application deployment and updates without manual intervention.