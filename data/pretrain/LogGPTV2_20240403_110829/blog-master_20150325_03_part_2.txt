Current max_connections setting:      100  
Current max_prepared_xacts setting:   0  
Current max_locks_per_xact setting:   64  
Maximum data alignment:               8  
Database block size:                  8192  
Blocks per segment of large relation: 131072  
WAL block size:                       16384  
Bytes per WAL segment:                16777216  
Maximum length of identifiers:        64  
Maximum columns in an index:          32  
Maximum size of a TOAST chunk:        1996  
Date/time type storage:               64-bit integers  
Float4 argument passing:              by value  
Float8 argument passing:              by value  
Data page checksum version:           1  
```  
备节点控制文件信息 :   
```  
pg93@db-172-16-3-39-> pg_controldata   
pg_control version number:            937  
Catalog version number:               201306121  
Database system identifier:           5908450106616519131  
Database cluster state:               in archive recovery  
pg_control last modified:             Mon 05 Aug 2013 10:31:39 AM CST  
Latest checkpoint location:           0/2000060  
Prior checkpoint location:            0/2000060  
Latest checkpoint's REDO location:    0/2000028  
Latest checkpoint's REDO WAL file:    000000010000000000000002  
Latest checkpoint's TimeLineID:       1  
Latest checkpoint's PrevTimeLineID:   1  
Latest checkpoint's full_page_writes: on  
Latest checkpoint's NextXID:          0/1684  
Latest checkpoint's NextOID:          12815  
Latest checkpoint's NextMultiXactId:  1  
Latest checkpoint's NextMultiOffset:  0  
Latest checkpoint's oldestXID:        1674  
Latest checkpoint's oldestXID's DB:   1  
Latest checkpoint's oldestActiveXID:  1684  
Latest checkpoint's oldestMultiXid:   1  
Latest checkpoint's oldestMulti's DB: 1  
Time of latest checkpoint:            Mon 05 Aug 2013 10:28:59 AM CST  
Fake LSN counter for unlogged rels:   0/1  
Minimum recovery ending location:     0/20000F0  
Min recovery ending loc's timeline:   1  
Backup start location:                0/0  
Backup end location:                  0/0  
End-of-backup record required:        no  
Current wal_level setting:            hot_standby  
Current max_connections setting:      100  
Current max_prepared_xacts setting:   0  
Current max_locks_per_xact setting:   64  
Maximum data alignment:               8  
Database block size:                  8192  
Blocks per segment of large relation: 131072  
WAL block size:                       16384  
Bytes per WAL segment:                16777216  
Maximum length of identifiers:        64  
Maximum columns in an index:          32  
Maximum size of a TOAST chunk:        1996  
Date/time type storage:               64-bit integers  
Float4 argument passing:              by value  
Float8 argument passing:              by value  
Data page checksum version:           1  
```  
## 测试   
1\. 主节点  
```  
pg93@db-172-16-3-33-> psql  
psql (9.3beta2)  
Type "help" for help.  
digoal=# create table test (id int primary key, info text, crt_time timestamp);  
CREATE TABLE  
digoal=# create or replace function func() returns void as $$  
digoal$# declare   
digoal$#   v_id int;  
digoal$# begin  
digoal$#   v_id := round(5000000*random());  
digoal$#   update test set info=md5(random()::text),crt_time=clock_timestamp() where id=v_id;  
digoal$#   if found then  
digoal$#     return;  
digoal$#   else  
digoal$#     insert into test values (v_id,md5(random()::text),clock_timestamp());  
digoal$#   end if;  
digoal$#   return;  
digoal$# end;  
digoal$# $$ language plpgsql strict;  
CREATE FUNCTION  
digoal=# select func();  
 func   
------  
(1 row)  
digoal=# select * from test ;  
   id    |               info               |          crt_time            
---------+----------------------------------+----------------------------  
 3554644 | c5aabfa68774a7bd9a623819537475c6 | 2013-08-05 10:39:49.304063  
(1 row)  
digoal=# select func();  
 func   
------  
(1 row)  
digoal=# select * from test ;  
   id    |               info               |          crt_time            
---------+----------------------------------+----------------------------  
 3554644 | c5aabfa68774a7bd9a623819537475c6 | 2013-08-05 10:39:49.304063  
 2856072 | ec17bc98163a1ac0cbcdeadd0b151607 | 2013-08-05 10:39:54.324455  
(2 rows)  
```  
数据变更测试   
```  
vi test.sql  
select func();  
pg93@db-172-16-3-33-> pgbench -M prepared -f ./test.sql -r -n -h $PGDATA -p 1999 -U postgres -c 16 -j 4 -T 10 digoal  
Client 13 aborted in state 0: ERROR:  duplicate key value violates unique constraint "test_pkey"  
DETAIL:  Key (id)=(3717357) already exists.  
CONTEXT:  SQL statement "insert into test values (v_id,md5(random()::text),clock_timestamp())"  
PL/pgSQL function func() line 10 at SQL statement  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 4  
duration: 10 s  
number of transactions actually processed: 419517  
tps = 41926.489602 (including connections establishing)  
tps = 42031.118850 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.376348        select func();  
```  
数据一致性验证  
主节点  
```  
pg93@db-172-16-3-33-> psql  
psql (9.3beta2)  
Type "help" for help.  
digoal=# select sum(hashtext(test.*::text)) from test;  
      sum        
---------------  
 -215513112678  
(1 row)  
digoal=# select count(*) from test ;  
 count    
--------  
 402434  
(1 row)  
```  
备节点  
```  
pg93@db-172-16-3-39-> psql  
psql (9.3beta2)  
Type "help" for help.  
digoal=# select sum(hashtext(test.*::text)) from test;  
      sum        
---------------  
 -215513112678  
(1 row)  
digoal=# select count(*) from test ;  
 count    
--------  
 402434  
(1 row)  
```  
2\. 备节点  
promote  
```  
pg93@db-172-16-3-39-> pg_ctl promote  
server promoting  
```  
数据变更测试  
```  
vi test.sql  
select func();  
pg93@db-172-16-3-39-> pgbench -M prepared -f ./test.sql -r -n -h $PGDATA -p 1999 -U postgres -c 16 -j 4 -T 10 digoal  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 4  
duration: 10 s  
number of transactions actually processed: 378395  
tps = 37814.175846 (including connections establishing)  
tps = 37866.507340 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.419977        select func();  
```  
备节点数据 :   
```  
pg93@db-172-16-3-39-> psql  
psql (9.3beta2)  
Type "help" for help.  
digoal=# select sum(hashtext(test.*::text)) from test;  
     sum        
--------------  
 380706298298  
(1 row)  
digoal=# select count(*) from test ;  
 count    
--------  
 737925  
(1 row)  
```  
3\. 主节点  
主节点继续变更数据  
```  
pg93@db-172-16-3-33-> pgbench -M prepared -f ./test.sql -r -n -h $PGDATA -p 1999 -U postgres -c 16 -j 4 -T 10 digoal  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 4  
duration: 10 s  
number of transactions actually processed: 399093  
tps = 39862.553184 (including connections establishing)  
tps = 39960.089273 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.398488        select func();  
```  
主节点数据 :   
```  
pg93@db-172-16-3-33-> psql  
psql (9.3beta2)  
Type "help" for help.  
digoal=# select sum(hashtext(test.*::text)) from test;  
     sum        
--------------  
 127807805610  
(1 row)  
digoal=# select count(*) from test ;  
 count    
--------  
 755238  
(1 row)  
```  
4\. 主节点变更为备节点, 一般可以通过rsync从新的主节点(172.16.3.39)来同步$PGDATA, 或者全新的pg_basebackup一次.  
本文使用pg_rewind来实现.  
停原主库(172.16.3.33)  
```  
pg93@db-172-16-3-33-> pg_ctl stop -m fast  
waiting for server to shut down..... done  
server stopped  
```  
配置.pgpass  
```  
su - pg93  
pg93@db-172-16-3-33-> vi .pgpass  
172.16.3.39:1999:*:postgres:postgres  
pg93@db-172-16-3-33-> chmod 400 .pgpass  
```  