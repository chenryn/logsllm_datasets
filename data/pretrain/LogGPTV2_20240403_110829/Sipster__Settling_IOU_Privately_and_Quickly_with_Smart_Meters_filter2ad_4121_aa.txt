title:Sipster: Settling IOU Privately and Quickly with Smart Meters
author:Sherman S. M. Chow and
Ming Li and
Yongjun Zhao and
Wenqiang Jin
Sipster: Settling IOU Privately and Quickly
with Smart Meters
Sherman S. M. Chow∗
The Chinese University of Hong Kong
Shatin, N.T., Hong Kong
The University of Texas at Arlington
Ming Li
USA
Yongjun Zhao†
Nanyang Technological University
Singapore
ABSTRACT
Cyber-physical systems revolutionize how we interact with physi-
cal systems. Smart grid is a prominent example. With new features
such as fine-grained billing, user privacy is at a greater risk than
before. For instance, a utility company (UC) can infer users’ (fine-
grained) usage patterns from their payment. The literature only
focuses on hiding individual meter readings in bill calculation. It
is unclear how to preserve amount privacy when the UC needs to
assert that each user has settled the amount as calculated in the bill.
We advocate a new paradigm of cash payment settlement en-
abling payment privacy. Users pay their bills in unit amount so that
they can hide in the crowd. Meanwhile, UC can obtain payments
earlier in the pay-as-you-go model, leading to a win-win situation.
A highlight of our proposed system, Sipster, is that the receipts for
the payments can be combined into a O(1)-size receipt certifying the
smart meter’s certification. Without such aggregation, techniques
such as zero-knowledge proof would fail since it typically cannot
hide the size of the witness. Seemingly helpful tools, e.g., aggregate
signatures or fully homomorphic signatures, also fail.
The novelty of Sipster lies in fulfilling our five goals simulta-
neously: 1) privacy-preserving: the UC cannot infer a user’s pay-
ment amount; 2) prover-efficient: no zero-knowledge proof is ever
needed; 3) verifier-efficient: it takes O(1) time to verify a combined
receipt; 4) double-claiming-free: users cannot present the same re-
ceipt twice; and 5) minimalistic smart meter: it has the capability
to report signed readings (needed even in a non-private setting).
CCS CONCEPTS
• Security and privacy → Cryptography; Privacy-preserving
protocols; Pseudonymity, anonymity and untraceability.
∗A preliminary version of this work has been presented in a keynote talk [23].
†Corresponding author (theory), email: yongjun.zhao@ntu.edu.sg. The work was
started when the author was a Ph.D. student at The Chinese University of Hong Kong.
‡Corresponding author (artifact), email: wqjin@hnu.edu.cn. The work was done when
the author was a Ph.D. student at The University of Texas at Arlington, United States.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8579-4/21/12...$15.00
https://doi.org/10.1145/3485832.3488029
Wenqiang Jin‡
Hunan University
Changsha, China
KEYWORDS
privacy-enhancing technologies, payment, trusted smart meters
ACM Reference Format:
Sherman S. M. Chow, Ming Li, Yongjun Zhao, and Wenqiang Jin. 2021.
Sipster: Settling IOU Privately and Quickly with Smart Meters. In ACSAC
’21, December 6–10, 2021, Austin, Texas, USA. ACM, New York, NY, USA,
16 pages. https://doi.org/10.1145/3485832.3488029
1 INTRODUCTION
Pay-As-You-Go has recently emerged as a desired way to settle util-
ity bills in some cyber-physical systems (CPS), such as smart grids.
Many companies, such as AT&T [6], Siemens [52], and SmartGrid-
CIS [53], have developed their pay-as-you-go payment programs
for residential customers. It is forecasted that more than 2.6 mil-
lion households in the United States will adopt this bill settlement
model by the end of 2021 [47]. Meanwhile, this model is quite
common in some other countries such as South Africa [32, 44].
Different from the traditional post-pay model, where customers
use utilities for 30 days and then pay for a monthly bill, customers
in the pay-as-you-go model usually pre-pay a certain amount in
advance [7, 32, 44, 52, 53], which is then deducted based on the fine-
grained usages, say, per day or even per hour, calculated according
to the meter readings and real-time tariffs. The utility company (UC)
is motivated to implement this model to mitigate late customer pay-
ments [53] and shorten investment cycles by charging in real-time.
Customers can also become more aware of their utility consump-
tion, partially due to psychological factors, and adjust their usages
accordingly to avoid unusually high bills that were only notified
at the end of a long billing cycle1. It thus helps to smoothen peaks
in load demand, leading to more efficient utilization (of electricity
generation capacities) and a higher level of resilience (e.g., against
unforeseen grid disruptions). Ideally and ultimately, it aids in global
electricity usage reduction and saves our planet.
1.1 A Neglected Weakest Link in Privacy
The utility of fine-grained meter readings, apart from benefiting all
stakeholders, raises privacy and safety concerns as well. Through
meter readings, robbers can identify empty households or even if a
robbery alarm has been set [50], or insurers can identify electricity
usage patterns with fire risks (and charge customers higher pre-
miums). Existing research studied how to preserve privacy in bill
1There is recurring news on complaints of unusually high monthly electric bills,
e.g., https://foxsanantonio.com/news/local/san-antonio-residents-complain-about-
unusually-high-electric-bills-09-14-2019.
219ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
Sherman S. M. Chow, Ming Li, Yongjun Zhao, and Wenqiang Jin
calculation under the post-pay model, i.e., aggregating unit usages
of a customer within a period or aggregating the usages across
a group of customers, while hiding the usage of any individual.
Section 6 discusses some representative works on these topics. Un-
fortunately, privacy issues of the bill settlement stage have been
neglected. Obviously, hiding the payment amount is equally critical
for its obvious correlation with the utility usage or the bill amount.
Preserving user privacy is not only for pleasing the customers
or the financial benefits of pay-as-you-go. Privacy compliance with
the fine-grained usage information, and its financial consequence
if it fails2, strongly motivate the UC to explore advanced solutions.
1.2 A New Problem Formulation
We advocate the following bill settlement paradigm. For each unit
of utility consumption, the smart meter issues a “small bill” to the
customer, who then pays anonymously to the UC from time to time
in unit amount and is given a receipt in return. By a certain deadline,
they combine all the receipts to convince the UC that what they
have paid settled what they have used so far according to the smart
meter. The benefits are twofold. The UC can get payments early as
in the pay-as-you-go model. Meanwhile, customers can hide their
payments in the crowd of all payments. We divide bill settlement
into two processes, bill payment and bill verification. Cryptographic
e-cash (e.g., [15]), ensuring unlinkability of e-coins from the same
user, can serve as a solution to the former. However, linkability is de-
sirable for bill verification to show the UC that the bill has been set-
tled. Realizing bill verification in a privacy-preserving man-
ner is an unaddressed problem very different from private
payment. The UC needs a special mechanism to verify that the
hidden amount is correct, and a user has paid enough.
1.3 Our Contributions and Design Constraints
We propose Sipster, a cash payment settlement scheme for any
smart-meter-enabled systems expecting fine-grained bill settlement
with privacy. Sipster aims to satisfy five goals simultaneously.
• Privacy. The UC cannot infer the exact payment amount a
user makes for the bill. Moreover, individual payments made
by the same user are unlinkable by the UC.
• Prover-efficient. The residential user should only perform
arguably the only necessary operation, which is to prove
their bill is settled to the UC, ideally, by just a few group
operations and one exponentiation. Despite being a privacy-
preserving solution, our user should be free from perform-
ing any explicit zero-knowledge proof. Moreover, the user
should not be required to maintain any state information.
• Verifier-efficient. The UC takes constant time (in the num-
ber of receipts/amount) to verify a combined receipt.
• Double-claiming-free. Users cannot present the same re-
ceipt twice that can pass the payment verification.
• Deployable. 1) Sipster should be modular and work seam-
lessly with any e-cash system deployed currently [10, 43]
and in the future. 2) Smart meters remain “minimalistic.”
They need not possess general computing functionality be-
yond what is assumed in the non-private setting, e.g., signing
for ensuring the unforgeability of the billing amounts.
2It may be due to financial motivation, e.g., Equifax was fined $700 mil. for data breach.
Having some form of a trusted computing base (TCB) is common
and inherent in smart meters [33, 37, 48]. Specifically, we assume
the TCB of the meters can perform primitive operations for digital
signatures, including pseudorandom number generation and basic
modular operations. In particular, the TCB only outputs group
elements and signatures without taking any input (except in a
limited form such as taking a signal to trigger the troubleshooting
mode for fault tolerance), let alone processing any cryptographic
objects such as zero-knowledge proofs. This captures the constraint
of meters in other kinds of CPSes beyond power systems, greatly
limits our design space, and rules out many potential techniques.
If we assume the TCB performs general computing functionality,
the “prover-efficient” property is made less interesting because one
could move all user computation into the TCB. In other words, our
design challenge is to “extend the trust” from the minimalistic out-
puts of the TCB to an untrusted computation environment, which
typically resorts to the “traditional” cryptographic data processing.
Note that typical hardware-aided cryptographic solutions and
Sipster leverage the TCB differently for different goals. A general
goal in the literature, especially those recent ones that appeared
after the recent developments in commodity trusted execution
environments, is to outsource computation over confidential data
to some untrusted environment. Specific technical challenges thus
often involve processing data within the limited memory space of
the TCB (e.g., [55]), interoperability with the different computing
architecture of the untrusted environment, say, GPU (e.g., [42]), or
verifiability of computation result from the untrusted environment
(e.g., [54]). Sipster aims to use the TCB to “bootstrap” the security of
a malleable-signature-like functionality (see Section 3.2), in contrast
to the trendy processing encrypted data theme.
Roughly, Sipster can be seen as authenticating encrypted data
while hiding the data size. Our problem boils down to hiding the
size of the witnesses (i.e., the number of individual signatures to be
combined) or the domain of the function modeling the controlled
malleability; both are not well explored in theoretical cryptography.
To the best of our knowledge, this is the first study on enabling
customers to prove they have paid a bill without revealing the
amount of usage, which appears to be inherent in fine-grained
incremental billing. Specifically, we will discuss in Section 3 that:
• purely cryptographic solutions, even assuming heavyweight
primitives (e.g., multi-key fully-homomorphic signatures [36]),
face several obstacles, which are unclear how to tackle;
• “trusted-computer-like” solution exists, but its deployment
cost will be high; nevertheless, it can serve as a baseline to
indirectly illustrate the novelty of our approach.
As such, we empirically evaluate a prototype implementation of
Sipster without any baseline comparison. The smart meter is imple-
mented on an ARM development board, whereas the other entities
are implemented on regular PCs. Our experiments show that Sipster
can be efficiently performed on resource-restricted systems. For
example, it issues a 1-unit bill in 34.272ms and settles the bill in
5.665ms on average. Verifying a 100-unit bill takes only 9.212ms.
We discuss in the context of smart grids for concreteness. Sipster
generally fits with the IOU (“I owe you”) model with the amount
the user owes certified by a trusted environment. Section 7 explains
how to apply Sipster in privacy-preserving mobile payment.
220Sipster: Settling IOU Privately and Quickly with Smart Meters
ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
2 SYSTEM MODEL AND USE CASES
2.1 Usage Model
Our CPS payment settlement system, Sipster, involves three entities.
Residential Users (RUs): All RUs first register with the UC to
get a meter. To receive uninterrupted electricity provisions, an RU
has to settle the bill with the UC by the end of a billing period3.
We suppose there is a payment system that RU can first deposit
money (say, at the bank) to receive (e-)coins. For every e-coin spent,
the RU receives a receipt from the UC. All the collected receipts will
be used to prove the correctness of this RU’s bill payment during
the verification process.