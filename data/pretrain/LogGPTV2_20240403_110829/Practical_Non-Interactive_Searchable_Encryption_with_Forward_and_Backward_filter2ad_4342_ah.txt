Search time. In Table VIII, we report the search time of
Janus++. The results illustrate that Aura signiﬁcantly outper-
forms Janus++ during the search phase. As mentioned, the
main reason is that Aura only involves one GGM tree evalua-
tion for decryption, while Janus++ needs to evaluate d GGM
# of ind’s 200, 000 400, 000
600, 000
219.39
2,269.03
800, 000 1, 000, 000
295.21
2,987.85
368.5
158.9
1,538.57
75.43
736.85
d = 10
d = 100
3,731.71
d = 1,000 8,073.17 16,542.07 24,406.5 33,691.52 41,766.21
d = 1,0000 84,594.42 172,439.55 256,762.04 339,898.41 435,146.61
trees. Besides, Aura is implemented via C++ and OpenSSL,
while Janus++ is implemented via Python and PyCrypto,
which further contributes to the performance downgrade.
The search time of Aura consists of the client cost and
server cost. Figure 5a and 5b shows the client and server cost of
a search query with 1, 000, 000 matched ind’s under different
d’s. We observe that the client cost is affected by d; a larger d
results in a larger GGM tree, and thus it requires more time to
generate the revoked key. Besides, the client cost is affected
by h; a larger h will reduce the size of BF and GGM tree (see
Table II), which in turn decreases the cost of generating the
revoked key. At the server side, the search time is dominated
by recovering the ind’s that are not deleted. This is correlated
with h, as it requires to evaluate h hash functions of BF to
decide whether or not each retrieved entry has been deleted.
In particular, Aura takes 0.004ms and 0.006ms to recover
an ind for h = 5 and h = 13, respectively.
Search communication cost. The communication cost of
Janus++ and Aura is presented in Table V. Note that the
search cost of Aura relates to the size of the revoked key, which
is linear in the number of GGM nodes that form the minimum
cover of the unrevoked leaf nodes (w.r.t. the BF entries with
value ‘0’). The results are derived from ‘10’, ‘100’, ‘1,000’,
‘10,000’ random deletions, respectively. In the worst case, half
b/2 of BF entries will be revoked and b/2 GGM nodes will
be sent to the server. As shown, Janus++ outperforms Aura
as it only sends a token to the server during the search phase.
Deletion communication cost. Compared to Janus++, Aura
saves the communication cost introduced by deletions sig-
niﬁcantly as shown in Table VI. We present the cost of the
revocation key consisting of a set of GGM tree nodes in both
schemes, because it dominates the communication cost during
deletion. In Janus++, once a deletion happens, a part of the
revoked key (a set of GGM tree nodes) will be sent to the
server. And the communication cost increases linearly in the
number of deletions. In Aura, the client does not communicate
with the server during the deletion, and it just inserts the
deleted ind into a Bloom ﬁlter at local.
Storage cost. The storage cost per ind in Aura is linear
in h. Fortunately, this will not be the bottleneck under the
framework of backward-private SSE [9], [52]. Like existing
non-interactive backward-private SSE schemes Janus and
Janus++, only the newly inserted ind’s are encrypted via the
dedicated schemes. After search, the results on this keyword
can be cached at the server, and all the ciphertext copies can
be physically deleted. Such treatment does not compromise the
security of SSE, because the cached results are already known
from the access pattern of previous searches.
VII. CONCLUSIONS
5The communication of search in Table V is a constant because the protocol
transmits 2,000,000 ind’s in total.
We ﬁrst introduce a new cryptographic primitive, named
Symmetric Revocable Encryption, and propose a generic con-
15
it
struction from the Bloom ﬁlter and multi-puncturable pseu-
dorandom function. Then we present the ﬁrst non-interactive
Type-II backward-private SSE scheme (without hardware as-
sumptions) from the newly introduced primitive. We also
implement
in real networks and the evaluation demon-
strates its practicality and scalability. Still, it is challenging
to design efﬁcient Type-I backward-private SSE within a
single roundtrip, and very interesting to employ our revocation
encryption technique to construct backward-private SSE in the
multi-client setting. In addition, most of existing backward and
forward-private SSE schemes support only restricted types of
queries, so constructing practical SSE schemes with support
for strong security as well as rich queries is still left open.
Acknowledgment. We would like to thank the anonymous
reviewers for their constructive comments. This work is sup-
ported in part by the Natural Science Foundation of China (No.
61802255), the Australian Research Council (ARC) Discovery
Projects (No. DP180102199, DP200103308), and the Key
(Keygrant) Project of Chinese Ministry of Education (No.
2020KJ010201).
REFERENCES
https://github.com/MonashCybersecurityLab/Aura.
https://github.com/MonashCybersecurityLab/SDd.
[1]
[2]
[3] G. Amjad, S. Kamara, and T. Moataz, “Breach-resistant structured
encryption,” Proceedings on Privacy Enhancing Technologies, vol.
2019, no. 1, pp. 245–265, 2019.
[4] ——, “Forward and backward private searchable encryption with SGX,”
in Proceedings of the 12th European Workshop on Systems Security,
EuroSec@EuroSys 2019, Dresden, Germany, March 25, 2019, 2019,
pp. 4:1–4:6.
[5] L. Blackstone, S. Kamara, and T. Moataz, “Revisiting leakage abuse
attacks,” in NDSS. The Internet Society, 2020.
[6] B. H. Bloom, “Space/time trade-offs in hash coding with allowable
[7] R. Bost, “(cid:80)oϕoς: Forward secure searchable encryption,” in ACM CCS
errors,” Commun. ACM, vol. 13, no. 7, pp. 422–426, 1970.
2016, Vienna, Austria, October 24-28, 2016, pp. 1143–1154.
[8] R. Bost and P. Fouque, “Thwarting leakage abuse attacks against
searchable encryption - A formal approach and applications to database
padding,” IACR Cryptology ePrint Archive, p. 1060.
[9] R. Bost, B. Minaud, and O. Ohrimenko, “Forward and backward private
searchable encryption from constrained cryptographic primitives,” in
ACM CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017,
pp. 1465–1482.
[10] F. Brasser, U. M¨uller, A. Dmitrienko, K. Kostiainen, S. Capkun, and
A.-R. Sadeghi, “Software grand exposure:{SGX} cache attacks are
practical,” in 11th {USENIX} Workshop on Offensive Technologies
({WOOT} 17), 2017.
[11] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart, “Leakage-abuse attacks
against searchable encryption,” in ACM CCS 2015, Denver, CO,
USA, October 12-16, 2015, 2015, pp. 668–679. [Online]. Available:
http://doi.acm.org/10.1145/2810103.2813700
[12] D. Cash, J. Jaeger, S. Jarecki, C. S. Jutla, H. Krawczyk, M. Rosu, and
M. Steiner, “Dynamic searchable encryption in very-large databases:
Data structures and implementation,” in NDSS 2014, San Diego, Cali-
fornia, USA, February 23-26, 2014, 2014.
[13] D. Cash, S. Jarecki, C. S. Jutla, H. Krawczyk, M. Rosu, and M. Steiner,
“Highly-scalable searchable symmetric encryption with support for
boolean queries,” in CRYPTO 2013, Santa Barbara, CA, USA, August
18-22, 2013, 2013, pp. 353–373.
[14] D. Cash and S. Tessaro, “The locality of searchable symmetric encryp-
tion,” in EUROCRYPT 2014, Copenhagen, Denmark, May 11-15, 2014,
2014, pp. 351–368.
16
[15]
J. G. Chamani, D. Papadopoulos, C. Papamanthou, and R. Jalili, “New
constructions for forward and backward private symmetric searchable
encryption,” in ACM CCS 2018, Toronto, ON, Canada, October 15-19,
2018, pp. 1038–1055.
[16] Y. Chang and M. Mitzenmacher, “Privacy preserving keyword searches
on remote encrypted data,” in ACNS 2005, New York, NY, USA, June
7-10, 2005, 2005, pp. 442–455.
[17] M. Chase and S. Kamara, “Structured encryption and controlled disclo-
sure,” in ASIACRYPT 2010, Singapore, December 5-9, 2010, 2010, pp.
577–594.
[18] G. Chen, S. Chen, Y. Xiao, Y. Zhang, Z. Lin, and T. H. Lai, “Sgx-
pectre attacks: Stealing intel secrets from sgx enclaves via speculative
execution,” arXiv preprint arXiv:1802.09085, 2018.
[19] D. Clayton, C. Patton, and T. Shrimpton, “Probabilistic data structures in
adversarial environments,” in ACM CCS 2019, London, UK, November
11-15, 2019, 2019, pp. 1317–1334.
[20] V. Costan and S. Devadas, “Intel sgx explained.” IACR Cryptology
ePrint Archive, vol. 2016, no. 086, pp. 1–118, 2016.
[22]
[21] R. Curtmola, J. A. Garay, S. Kamara, and R. Ostrovsky, “Searchable
symmetric encryption: improved deﬁnitions and efﬁcient constructions,”
in ACM CCS 2006, Alexandria, VA, USA, Ioctober 30 - November 3,
2006, pp. 79–88.
I. Demertzis, J. G. Chamani, D. Papadopoulos, and C. Papamanthou,
“Dynamic searchable encryption with small client storage,” in NDSS,
2020.
I. Demertzis, D. Papadopoulos, and C. Papamanthou, “Searchable
encryption with optimal locality: Achieving sublogarithmic read efﬁ-
ciency,” in CRYPTO 2018, Santa Barbara, CA, USA, August 19-23,
2018, 2018, pp. 371–406.
[23]
[24] D. Derler, T. Jager, D. Slamanig, and C. Striecks, “Bloom ﬁlter encryp-
tion and applications to efﬁcient forward-secret 0-rtt key exchange,” in
EUROCRYPT 2018, Tel Aviv, Israel, April 29 - May 3, 2018, 2018, pp.
425–455.
[25] M. Etemad, A. K¨upc¸ ¨u, C. Papamanthou, and D. Evans, “Efﬁcient
dynamic searchable encryption with forward privacy,” Proceedings on
Privacy Enhancing Technologies, vol. 2018, no. 1, pp. 5–20, 2018.
[26] S. Faber, S. Jarecki, H. Krawczyk, Q. Nguyen, M. Rosu, and M. Steiner,
“Rich queries on encrypted data: Beyond exact matches,” in ESORICS
2015, Vienna, Austria, September 21-25, 2015, 2015, pp. 123–145.
[27] S. Feghhi and D. J. Leith, “A web trafﬁc analysis attack using only
timing information,” IEEE Trans. Information Forensics and Security,
no. 8, pp. 1747–1759.
[28] C. Gentry, “Fully homomorphic encryption using ideal lattices,” in
ACM STOC 2009, Bethesda, MD, USA, May 31 - June 2, 2009, 2009,
pp. 169–178.
[29] O. Goldreich, S. Goldwasser, and S. Micali, “How to construct
random functions (extended abstract),” in 25th Annual Symposium
on Foundations of Computer Science, West Palm Beach, Florida,
USA, 24-26 October 1984, 1984, pp. 464–479. [Online]. Available:
https://doi.org/10.1109/SFCS.1984.715949
[30] O. Goldreich and R. Ostrovsky, “Software protection and simulation on
oblivious rams,” J. ACM, vol. 43, no. 3, pp. 431–473, 1996.
[31] Google, “Google Cloud Inter-Region Latency and Throughput,”
https://datastudio.google.com/u/0/reporting/fc733b10-9744-4a72-a502-
92290f608571/page/70YCB [online], 2020.
[32] M. D. Green and I. Miers, “Forward secure asynchronous messaging
from puncturable encryption,” in 2015 IEEE Symposium on Security
and Privacy, SP 2015, San Jose, CA, USA, May 17-21, 2015, 2015,
pp. 305–320. [Online]. Available: https://doi.org/10.1109/SP.2015.26
[33] P. Grubbs, M. Lacharit´e, B. Minaud, and K. G. Paterson, “Pump up
the volume: Practical database reconstruction from volume leakage on
range queries,” in Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security, CCS 2018, Toronto, ON,
Canada, October 15-19, 2018, D. Lie, M. Mannan, M. Backes, and
X. Wang, Eds. ACM, 2018, pp. 315–331.
[34] ——, “Learning to reconstruct: Statistical learning theory and encrypted
database attacks,” in 2019 IEEE Symposium on Security and Privacy,
SP 2019, San Francisco, CA, USA, May 19-23, 2019.
IEEE, 2019,
pp. 1067–1083.
[35] F. Hahn and F. Kerschbaum, “Searchable encryption with secure and
efﬁcient updates,” in ACM CCS 2014, Scottsdale, AZ, USA, November
3-7, 2014, pp. 310–320.
[36] S. Hohenberger, V. Koppula, and B. Waters, “Adaptively secure punc-
turable pseudorandom functions in the standard model,” in ASIACRYPT
2015, Auckland, New Zealand, November 29 - December 3, 2015, 2015,
pp. 79–102.
[37] S. Jarecki, C. S. Jutla, H. Krawczyk, M. Rosu, and M. Steiner,
“Outsourced symmetric private information retrieval,” in ACM CCS
2013, Berlin, Germany, November 4-8, 2013, 2013, pp. 875–888.
[38] S. Kamara and T. Moataz, “Boolean searchable symmetric encryption
with worst-case sub-linear complexity,” in EUROCRYPT 2017, Paris,
France, April 30 - May 4, 2017, 2017, pp. 94–124.
[39] ——, “SQL on structurally-encrypted databases,” in ASIACRYPT 2018,
Brisbane, QLD, Australia, December 2-6, 2018, 2018, pp. 149–180.
[40] ——, “Computationally volume-hiding structured encryption,” in EU-
ROCRYPT 2019, Darmstadt, Germany, May 19-23, 2019, 2019, pp.
183–213.
[41] S. Kamara, T. Moataz, and O. Ohrimenko, “Structured encryption and
leakage suppression,” in CRYPTO 2018, Santa Barbara, CA, USA,
August 19-23, 2018, 2018, pp. 339–370.
[42] S. Kamara and C. Papamanthou, “Parallel and dynamic searchable
symmetric encryption,” in Financial Cryptography and Data Security
FC 2013, Okinawa, Japan, April 1-5, 2013, Revised Selected Papers,
2013, pp. 258–274.
[43] S. Kamara, C. Papamanthou, and T. Roeder, “Dynamic searchable
symmetric encryption,” in ACM CCS 2012, Raleigh, NC, USA, October
16-18, 2012, pp. 965–976.
J. Katz, A. Sahai, and B. Waters, “Predicate encryption supporting dis-
junctions, polynomial equations, and inner products,” in EUROCRYPT
2008, Istanbul, Turkey, April 13-17, 2008, 2008, pp. 146–162.
[44]
[45] ——, “Predicate encryption supporting disjunctions, polynomial equa-
tions, and inner products,” J. Cryptology, vol. 26, no. 2, pp. 191–224,
2013.
[46] K. S. Kim, M. Kim, D. Lee, J. H. Park, and W. Kim, “Forward secure
dynamic searchable symmetric encryption with efﬁcient updates,” in
ACM CCS 2017, Dallas, TX, USA, October 30 - November 03, 2017,
pp. 1449–1463.
[47] A. B. Lewko, A. Sahai, and B. Waters, “Revocation systems with
very small private keys,” in IEEE S&P 2010, 16-19 May 2010,
Berleley/Oakland, California, USA, 2010, pp. 273–285.
I. Miers and P. Mohassel, “IO-DSSE: scaling dynamic searchable
encryption to millions of indexes by improving locality,” in NDSS 2017,
San Diego, California, USA, February 26 - March 1, 2017, 2017.
[48]
[49] M. Slee, A. Agarwal, and M. Kwiatkowski, “Thrift: Scalable Cross-
Language Services Implementation,” Facebook White Paper, vol. 5,
no. 8, 2007.
[50] D. X. Song, D. A. Wagner, and A. Perrig, “Practical techniques for
searches on encrypted data,” in 2000 IEEE Symposium on Security and
Privacy, Berkeley, California, USA, May 14-17, 2000, pp. 44–55.
[51] E. Stefanov, C. Papamanthou, and E. Shi, “Practical dynamic searchable
encryption with small leakage,” in NDSS 2014, San Diego, California,
USA, February 23-26, 2014, 2014.
[52] S. Sun, X. Yuan, J. K. Liu, R. Steinfeld, A. Sakzad, V. Vo, and
S. Nepal, “Practical backward-secure searchable encryption from sym-
metric puncturable encryption,” in ACM CCS 2018, Toronto, ON,
Canada, October 15-19, 2018, pp. 763–780.
[53] M. Theobald, J. Siddharth, and A. Paepcke, “Spotsigs: robust and efﬁ-