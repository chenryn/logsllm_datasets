Add array parameter/return support to PL/Python (Peter Eisentraut)  
Improve mapping of domains to Python base types in PL/Python (Peter Eisentraut)  
Add Python 3 support to PL/Python (Peter Eisentraut)  
The new server-side language is called plpython3u.  
Improve error location and exception reporting in PL/Python (Peter Eisentraut)  
E.1.3.8. Client Applications  
Add vacuumdb –analyze-only option to only analyze (Bruce Momjian)  
E.1.3.8.1. psql  
Properly escape psql variables and identifiers (Pavel Stehule, Robert Haas)  
For example, :’var’ will be escaped as a literal string, and :”var” will be escaped as an SQL identifier.  
Ignore leading UTF-8-encoded Unicode byte-order marker in psql (Itagaki Takahiro)  
This is enabled when the client encoding is UTF-8.  
Fix psql –file – to properly honor –single-transaction (Bruce Momjian)  
Prevent overwriting of psql’s command-line history if two psql sessions are run simultaneously (Tom Lane)  
Improve psql’s tab completion support (Itagaki Takahiro)  
E.1.3.8.1.1. psql Display  
Allow psql to use fancy Unicode line-drawing characters via \pset linestyle unicode (Roger Leigh)  
Improve display of wrapped columns in psql (Roger Leigh)  
The previous format is available by using \pset linestyle old-ascii.  
E.1.3.8.1.2. psql \d Commands  
Have \d show child tables that inherit from the specified parent (Damien Clochard)  
\d shows only the number of child tables, while \d+ shows the names of all child tables.  
Show definition of indexes in \d index_name (Khee Chin)  
The definition is useful for expression indexes.  
In psql, show the view definition only with \d+, not with \d (Peter Eisentraut)  
E.1.3.8.2. pg_dump  
Have pg_dump/pg_restore –clean also remove large objects (Itagaki Takahiro)  
Fix pg_dump to properly dump large objects if standard_conforming_strings is enabled (Tom Lane)  
Large objects dumps now use hex format for output. (SWITCH DEFAULT FOR BETA? TOM)  
Allow pg_dump to dump comments attached to columns of composite types (Taro Minowa (Higepon))  
Have pg_dump –verbose output the pg_dump and server versions in text output mode (Jim Cox, Tom)  
These were already present in custom output mode.  
E.1.3.8.3. pg_ctl  
Allow pg_ctl to be safely used to start the postmaster at boot-time (Tom Lane)  
Previously the pg_ctl process could have been mistakenly identified as a running postmaster based on a stale postmaster lock file.  
Give pg_ctl the ability to initialize the database (like initdb) (Zdenek Kotala)  
E.1.3.9. Development Tools  
E.1.3.9.1. libpq  
Add new libpq functions PQconnectdbParams() and PQconnectStartParams() (Guillaume Lelarge)  
These functions are similar to PQconnectdb() and PQconnectStart() except they allow a null-terminated array of connection options, rather than requiring all options to be sent in a single string.  
Add libpq functions PQescapeLiteral() and PQescapeIdentifier() (Robert Haas)  
These functions return appropriately quoted and escaped literal strings and identifiers. The caller is not required to pre-allocate the string result, as is required by PQescapeStringConn().  
Add checking for a per-user service file (.pg_service.conf), which is checked before the site-wide service file (Peter Eisentraut)  
The file .pg_service.conf is assumed to be in the user’s home directory.  
Properly report an error if the specified libpq service cannot be found (Peter Eisentraut)  
Issue a warning if the .pgpass-retrieved password fails (Bruce Momjian)  
E.1.3.9.2. ecpg  
Add SQLDA (SQL Descriptor Area) support to ecpg (Boszormenyi Zoltan)  
Add the DESCRIBE [OUTPUT] statement to ecpg (Boszormenyi Zoltan)  
Add an ecpg function to return the current transaction status (Bernd Helmle)  
Add the string data type in ecpg Informix-compatibility mode (Zoltan Boszormenyi)  
Allow ecpg to use new and old variable names without restriction (Michael Meskes)  
Have ecpg return zero for non-SQL3 data types (Michael Meskes))  
Previously it returned the negative of the data type oid.  
E.1.3.9.2.1. ecpg Cursors  
Add ecpg out-of-scope cursor support in native mode (Boszormenyi Zoltan)  
This allows DECLARE to use variables that are not in scope when OPEN is called. This facility already existed in ecpg Informix-compatibility mode.  
Allow dynamic ecpg cursor names (Boszormenyi Zoltan)  
Allow ecpg to use noise words FROM and IN in FETCH and MOVE (Zoltan Boszormenyi)  
E.1.3.10. Build Options  
Enable client thread safety by default (Bruce Momjian)  
Thread-safe builds can be disabled with configure –disable-thread-safety.  
Add a compile-time option to allow the Linux out-of-memory killer to kill backends (Alex Hunsaker, Tom)  
Now that /proc/self/oom_adj allows disabling of the Linux out-of-memory (OOM) killer for the postmaster and its children, the new compile-time option -DLINUX_OOM_ADJ=0 allows the killer to be enabled for postmaster children. pg_config shows if this flag was used during compilation.  
Use DocBook XSL stylesheets for man page building (Peter Eisentraut)  
E.1.3.10.1. Makefiles  
New Makefile targets world, install-world, and installcheck-world (Andrew Dunstan)  
These are similar to the existing all, install, and installcheck targets, but they build HTML documentation, build and test /contrib, and test server-side languages and ecpg.  
Add data and documentation location control to PGXS Makefiles (Mark Cave-Ayland)  
Restructure the HTML documentation build Makefile rules (Peter Eisentraut)  
E.1.3.10.2. New Requirements  
Require Autoconf 2.63 for building from source (Peter Eisentraut)  
Require Flex 2.5.31 or later to build from source (Tom Lane)  
Require Perl version 5.8 or greater to build the server from a CVS copy (John Naylor, Andrew)  
E.1.3.10.3. Windows  
Add support for compiling on 64-bit Windows and running in 64-bit mode (Tsutomu Yamada, Magnus)  
This allows for large shared memory sizes on Windows.  
Allow server builds using Visual Studio 2008 (Magnus Hagander)  
Allow multi-processor compilation using Microsoft Visual C (Magnus Hagander)  
E.1.3.11. Source Code  
Distribute documentation in a proper directory tree, rather than as tar archive files inside the main distribution tarball (Peter Eisentraut)  
For example, the HTML documentation is now in doc/src/sgml/html; the manual pages are packaged similarly.  
Enable the server lexer to be reentrant (Tom Lane)  
This was needed for use of the lexer by PL/pgSQL.  
Improve speed of memory allocation (Tom, Greg Stark)  
Add system columns to better document the use of indexes for constraint enforcement (Tom Lane)  
Allow multiple actions to be communicated using the same operating system signal (Fujii Masao)  
This allows improved backend communication as new features are added.  
Improve source code test coverage, including /contrib, PL/Python, and PL/Perl (Peter, Andrew)  
Remove the use of flat files for system table bootstrapping (Tom, Alvaro)  
This also improves performance when using millions of users and databases.  
Improve the ability to translate psql strings (Peter Eisentraut)  
Reduce the length of some file names so file paths are less than 100 characters (Tom Lane)  
Some decompression programs have problems with long file names.  
Tighten input requirements for int2 vector input (Caleb Welton)  
Add a new ERRCODE_INVALID_PASSWORD SQLSTATE error code (Bruce Momjian)  
Properly remove the few remaining personal source code copyright entries (Bruce Momjian)  
The personal copyright notices were insignificant but the community occasionally had to answer questions about them.  
E.1.3.11.1. Feature Support  
Use a more modern API for Bonjour (Tom Lane)  
Bonjour now requires OS X 10.3 or later.  
Add processor test-and-test lock support for the SuperH architecture (Nobuhiro Iwamatsu)  
Allow non-GCC compilers to use inline functions if they support them (Kurt Harriman)  
Remove support for platforms that don’t have a working 64-bit integer data types (Tom Lane)  
It is believed all supported platforms have working 64-bit integer data types.  
E.1.3.11.2. Server Programming  
Allow use of C++ functions in backend code (Kurt Harriman, Peter)  
This removes keyword conflicts that previously made C++ usage difficult in backend code. extern “C” { } might still be necessary.  
Add AggCheckCallContext() for use in detecting if a C function is being called as an aggregate (Hitoshi Harada)  
Require fastgetattr() and heap_getattr() backend macros to use a non-NULL fourth argument (Robert Haas) KEEP?  
E.1.3.11.3. Server Hooks  
Add parser hooks to access column and parameter references in queries (Tom Lane)  
Add a hook so loadable modules can control utility commands (Itagaki Takahiro)  
Allow the calling of parser hooks from SPI and cached plans (Tom Lane)  
E.1.3.11.4. Binary Upgrade Support  
Add support for preservation of all relfilenodes, for use during binary upgrades (Bruce Momjian)  
Add support for binary upgrades to preserve pg_type and pg_enum oids (Bruce Momjian)  
This is needed to allow binary upgrades of user-defined composite types, arrays, and enums (enumerated types).  
Move tablespace data directories into their own PostgreSQL version-specific subdirectory (Bruce Momjian)  
This simplifies binary upgrades.  
E.1.3.12. Contrib  
Add multi-threaded option (-j) to /contrib/pgbench (Itagaki Takahiro)  
This allows multiple CPUs to be used for pgbench tests.  
Add \shell and \setshell meta commands to /contrib/pgbench (Michael Paquier)  
New features for /contrib/dict_xsyn (Sergey Karpov)  
The new options are matchorig, matchsynonyms, and keepsynonyms.  
Add full text dictionary /contrib/unaccent (Teodor Sigaev)  
This filter dictionary removes accents from tokens.  
Add dblink_get_notify() to /contrib/dblink (Marcus Kempe)  
This allows async notifications in dblink.  
Greatly increase /contrib/hstore’s length limit and add btree and hash abilities so GROUP BY and DISTINCT operations are possible (Andrew Gierth)  
New functions and operators were also added.  
Add /contrib/passwordcheck which can check the strength of assigned passwords (Laurenz Albe)  
The source code of this module should be modified to implement site-specific password policies.  
Add query text to /contrib/auto_explain output (Andrew Dunstan)  
Add buffer access counters to /contrib/pg_stat_statements (Itagaki Takahiro)  
Update /contrib/start-scripts/linux to use /proc/self/oom_adj to disable the Linux out-of-memory (OOM) killer (Alex Hunsaker, Tom)  
[Count](http://info.flagcounter.com/h9V1)                