### Intrusion-Tolerant Self-Healing Devices for Critical Infrastructure Protection

**Paulo Sousa, Alysson N. Bessani, Wagner S. Dantas, Fábio Souto, Miguel Correia, Nuno F. Neves**

*University of Lisbon, Faculty of Sciences, LASIGE – Portugal*

*Emails: {pjsousa, bessani}@di.fc.ul.pt, {wagners, fsouto}@lasige.di.fc.ul.pt, {mpc, nuno}@di.fc.ul.pt*

#### Abstract
Critical infrastructures, such as the power grid, are essentially physical processes controlled by electronic devices. In recent decades, these electronic devices have started to be controlled remotely through commodity computers, often directly or indirectly connected to the Internet. Consequently, many of these systems are now exposed to threats similar to those faced by typical computer-based networks on the Internet, but with potentially much more severe societal impacts in case of failure. This paper presents a demonstration of a family of protection devices for critical information infrastructures developed within the EU CRUTIAL project. These devices, called CRUTIAL Information Switches (CIS), enforce sophisticated access control policies for incoming and outgoing traffic and are designed with various levels of intrusion tolerance and self-healing to meet different resilience requirements.

#### 1. Introduction
Critical infrastructures (CIs) like the power grid are fundamentally physical processes controlled by electronic devices. In recent decades, these electronic devices have begun to be managed remotely using off-the-shelf computers connected via common network technologies, often directly or indirectly linked to the Internet [6,7,8]. As a result, many systems that are vital to our society are now exposed to a level of threat comparable to other Internet services, which are constantly under cyber-attacks. This situation has been recognized by governments and industry, leading to the promotion of research, standards, and guidelines to address the problem (e.g., [11,14]).

Although there is considerable reluctance to disclose information about attacks and intrusions, some incidents have been reported [6,12], and there is much speculation about others. At least one tool specifically designed to find vulnerabilities in these infrastructures is known to exist [4].

In the context of the EU-IST CRUTIAL project, we recently proposed a reference architecture for protecting critical infrastructures [17]. We believe this problem must be addressed at an architectural level due to the hybrid composition of several infrastructures [6,7,8]:
1. The operational network, usually called SCADA or PCS, contains computers and electronic devices that monitor and actuate on physical processes (e.g., electricity generation, transformation, and transmission).
2. The corporate intranet includes typical enterprise services (email, databases, etc.) and workstations for personnel, such as engineers who access the SCADA/PCS systems through ad-hoc interconnections.
3. The Internet, through which CI users connect to other intranets (e.g., business partners, regulators) and/or to the outside world.

The interconnection of these three infrastructures creates an undesirable link between the Internet and the SCADA/PCS networks, facilitating the propagation of attacks from anywhere in the world to the control systems.

Additionally, we believe that CI protection is more complex than classical network security for several reasons:
- CIs feature many legacy subsystems and non-computer-standard components (controllers, sensors, actuators, etc.), which were deployed when security was not a major concern.
- Conventional security practices, when directly applied to control devices, can sometimes interfere with their effective operation.

These characteristics imply that new protection mechanisms must be carefully proposed, as they often need to be implemented without changing existing SCADA/PCS systems, at least in the medium-term future, and they cannot interfere with system operations, especially in emergency situations.

The approach in CRUTIAL is based on securing the interconnections between the different realms of the infrastructure using CRUTIAL Information Switches (CIS) [17]. CIS are protection devices that enforce sophisticated access control policies on incoming and outgoing traffic. Our point is that interference and attacks start at the level of macroscopic data flows between these realms, so protecting these data flows with proper access control policies is a fundamental step towards security. Furthermore, these policies must be enforced by highly dependable devices, the CIS, which are designed with various levels of intrusion tolerance and self-healing to meet distinct resilience requirements.

This paper describes a demonstration of a remotely managed power generation control scenario. It includes a number of computers that emulate both a power generation infrastructure and attacks coming from the Internet, as well as several prototypes of the CIS design. The main objectives are:
1. To illustrate what kinds of attacks can compromise current power system facilities protected by traditional firewalls.
2. To present a family of mechanisms that can be employed to make protection devices incrementally more resilient.
3. To show that a CIS can offer a more complete and secure solution for the protection of critical systems than traditional firewalls.

#### 2. CRUTIAL Information Switches
In CRUTIAL, the interconnection of realms in a critical infrastructure is modeled as a WAN-of-LANs [17]—realms correspond to a LAN, and LANs are connected by a WAN. Connections of LANs to the WAN are secured by different CIS, which enforce access control policies on incoming and outgoing messages. This might suggest that CIS are simply firewalls. Although they share some common features, CIS are, in fact, more than traditional firewalls, with two fundamental differences:

First, while CIS are devices placed at network boundaries (like firewalls), they play a global role in enforcing access control policies for macroscopic data flows among realms of a CI or interconnected infrastructures. Therefore, policies are not expressed as a set of local rules but globally using an organization-based access control model, PolyOrBAC [9], capable of expressing policies involving several organizations (e.g., CIs related to the production, transmission, distribution, and regulation of the power grid). In this sense, CIS are more akin to distributed firewalls [1] than to traditional firewalls, and to application-level firewalls rather than packet filters.

Second, the criticality of the infrastructures we are considering requires protection devices that are much more resilient than traditional firewalls, which are known to have vulnerabilities [10]. To provide CI designers with a trade-off between cost and complexity, we have proposed a family of increasingly resilient CIS, where the strongest devices in the family are both intrusion-tolerant and self-healing. In the rest of this section, we briefly describe the CIS instantiations. More technical details about these devices can be found in [2,3,13,16].

##### Intrusion-Tolerant CIS
The intrusion-tolerant CIS (IT-CIS) is replicated across a set of computers to mask intrusions in some of its components. Specifically, the CIS access control functionality is replicated across 2f+1 machines to tolerate up to f malicious or accidental faults. A replica in which there is an intrusion or a crash is considered faulty. An IT-CIS representation for f=1 is shown in Figure 1.

The IT-CIS is composed of three replicas/computers and two hubs (i.e., devices that broadcast the traffic they receive in one port to the other ports). The idea of intrusion tolerance is that if up to f (one in this case) of the replicas in the figure are attacked, intruded, and entirely controlled by the attacker, the IT-CIS will still perform its service correctly. For this approach to make sense, replicas must be diverse, i.e., they should have at least different operating systems and software. This need for diversity limits the maximum number of replicas. For example, the number of diverse operating systems for PCs and PC-like servers is reasonably small.

For simplicity, we explain how IT-CIS works by considering only the incoming message flows, as the explanation for outgoing traffic is identical. When a packet arrives at the IT-CIS:
1. It is forwarded by the left hub to the replicas (step (1) in the figure).
2. Each replica checks if the packet satisfies the security policy of the organization (specified using PolyOrBAC).
3. If f+1 replicas vote in favor of accepting the packet (step 2), the packet is forwarded by the current leader replica (step 3); otherwise, it is discarded.

This basic mechanism raises two issues:
1. **Preventing a Faulty Replica from Forwarding Unauthorized Packets**: The solution is based on the following idea: we consider that traffic forwarded by the CIS must follow the IPSec/AH protocol, and that the key K used to sign packets with a MAC is stored in a secure subsystem (generically called a wormhole [15]) inside each replica. A wormhole only returns a signature for a packet if the replica shows that f+1 replicas gave their approval, by providing the corresponding votes.
2. **Dealing with a Faulty Leader**: All replicas monitor what is transmitted by the leader (the hub on the right side of the figure broadcasts the packets back to all). When a leader is detected to be behaving erroneously, an election protocol runs to nominate a new leader.

Overall, the extra resilience of the IT-CIS comes from the fact that it is impossible to subvert correct operation even if there are intrusions in f replicas. Notice, for example, that a traditional firewall can be undermined with a single intrusion, making the IT-CIS much more resilient.

However, there is still a threat against the IT-CIS: given enough time, an attacker may be able to take control of more than f machines and control the protection system. This problem is solved by the next CIS design.

##### Intrusion-Tolerant CIS with Proactive Recovery
The IT-CIS with proactive recovery (ITCIS-PR) works basically the same as the IT-CIS but has a self-healing capability. This capability is implemented by periodically recovering (or rejuvenating) each replica to remove the effects of any intrusion that may have occurred. The recovery procedure involves four tasks:
1. Shutdown of the CIS replica.
2. Selection of a clean system image for the replica.
3. Copying the system image to the replica file system.
4. Booting the new system.

To ensure the timeliness and correct execution of these actions, recoveries are managed by the secure wormholes, which enforce the correctness of the process even under attack. Additionally, the ITCIS-PR needs more replicas to guarantee that system availability is preserved during the recovery of replicas (at least 2f+k+1, where k is the maximum number that can recover at the same time).

Intrusions in replicas are the result of the combination of attacks and vulnerabilities, so the latter should be removed or at least modified when a recovery is done. This is an issue that requires further research but can be tackled today using mechanisms like memory layout randomization [18]. Most attacks that allow the execution of arbitrary code in the victim machine are done using buffer overflow attacks that require some knowledge about the organization of the memory of that machine (e.g., the address of the libctowhich the attacker wants to force a jump, in the case of an arc-injection attack). Memory layout randomization makes these attacks extremely difficult by changing how the memory is organized, i.e., the (virtual) memory addresses where the application code, DLLs, and other third-party software are stored whenever the machine reboots.

ITCIS-PR is perpetually resilient in the sense that it tolerates intrusions that may occur indefinitely during the system's lifetime. However, from the moment of a successful replica intrusion until its total rejuvenation, the faulty replica can send malicious packets to the inside systems, trying to find and exploit some (known or unknown) vulnerability. Note that these vulnerabilities do exist and are similar to vulnerabilities in Internet systems. The US-CERT lists several buffer overflows, authentication problems, and improper message handling vulnerabilities in products from several control systems manufacturers [4]. This problem is solved by the next CIS design.

##### Intrusion-Tolerant CIS with Proactive and Reactive Recovery
This CIS (ITCIS-PRR) is similar to ITCIS-PR but adds another protection layer. Besides the periodic rejuvenation of replicas, each replica monitors the behavior of all others (for example, by looking at the voting decisions and the packets forwarded by the leader). If a set of replicas discovers that another one is misbehaving, they force the recovery of this replica with the assistance of the secure wormhole [13]. This wormhole provides a service that schedules both types of recoveries (periodic and due to fault detections) to maintain the availability of the CIS. It uses a private network to exchange information and support coordinated actions.

#### CIS Performance and Resilience
Above, we described the differences and benefits that each CIS instantiation brings. However, we want to quantify these benefits in terms of the percentage of failed time for each of these instances (and a traditional firewall) in unattended missions. This assessment was made using the Mobius tool, and a summary is as follows [16]. We consider that the mission time is 10,000 hours (approximately 1 year) and varied hosts' minimum inter-failure time (mift) from 1 to 1000 hours. For more details, see [4].

---

**Note:** The references and figures mentioned in the text should be included in the final document for completeness.