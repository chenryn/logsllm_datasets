approaches uses embedding methods, where the knowledge graph is embedded
into a low-dimensional space [18]. Thus, it is no surprise that this technique has
also been used by Wang et al. in [17] to propose the embedding-based method
RLRecommender as a solution for the activity recommendation problem.
While approaches that are based on embeddings dominate knowledge graph
completion, more recently rule-based approaches, which have their origin in the
field of inductive logic programming [5], have proven to be competitive [15].
As an additional benefit, these approaches offer an explanation for the given
recommendation. Explainable recommendations have recently attracted more
and more interest since they help improving the transparency, persuasiveness,
effectiveness, trustworthiness, and satisfaction of recommendation systems [19].
Weproposeanapproachwhichlearnslogicalrulesthatdescribehowactivities
areusedinthegivenprocessrepository.Theserulesareusedtogiveexplainable
recommendationsforanappropriateactivityatagivenposition.Ourrulelearner
is based on the top-down search implemented in the association rule mining
systems WARMR [6] and AMIE [9]. However, our implementation supports a
specific language especially designed for predicting activities. The learned rules
are Horn rules that predict the label u of an activity node X. In particular,
they have the form u(X) ← relation(X,Y),v(Y), where Y denotes another
activity node in the process, v denotes the label of Y and relation denotes the
relation between the activities X and Y. For the relations between activities
we make use of the definitions in [17]. The ‘Direct After’ relation depicts the
connectionsofactivitiesbutmakesitimpossibletodistinguishbetweenanAND
and an OR split. The ‘Direct Causal’ relations allow to capture the semantics
of business process models more precisely. The concurrency of activities are
describedby‘DirectConcurrent’relations.Thedefinitionofthesethreerelation
families results in three rule learning strategies. Our first rule learning strategy
(rules-after) is to only allow ‘after’ relations in the rule bodies. Analogously, we
only allow ‘causal’ relations in the rule bodies for the second strategy (rules-
causal). The third rule learning strategy (rules-concurrent) is to allow ‘causal’
and ‘concurrent’ relations in the rule body.
Fortheexperiments,wemadeuseofthetwodatasetsthathavealsobeenused
in the evaluation of RLRecommender in [17]. The first dataset (large dataset)
consists of processes from the model collection of the Business Process Man-
agement Academic Initiative [16]. The second dataset (small dataset) consists
of 221 processes collected from a district government in Hangzhou, China [4].
As evaluation metric we use the hit rate, which is the fraction of hits, where a
hit is achieved if the generated recommendation list contains the activity that
wasactuallychosen.Weadoptedtheevaluationmethodfrom[17].Forthesmall
dataset,weperformedafivefoldcross-validation.Forthelargedataset,wechose
the training and test split that we received from running the preprocessingcode
from RLRecommender on Github1. As in [17], we report the hit rate for recom-
mendation list lengths 1–5 and for the large dataset additionally for length 10.
1 https://github.com/THUBPM/RLRecommender .
A Rule-Based Recommendation Approach for Business Process Modeling 29
Fig.2. Results on small (left) and large (right) dataset
Theresultsoftheexperimentalstudyinwhichwecomparedtheembedding-
based approach RLRecommender to our rule-based approach are depicted in
Fig.2.Theyshowthatourrule-basedmethodoutperformstheembedding-based
approach on both datasets and for every recommendation list length.
4 Conclusion and Research Plans
This paper presents our ongoing work on a rule-based recommendation method
forbusinessprocessmodelingwhichallowsforexplainablerecommendationsand
outperforms an embedding-based approach.
In future work, we want to allow other forms of rules that involve more than
one preceding activity of the process model. We also intend to conduct similar
experimental evaluations with other existing methods and on other datasets.
Jannach et al. [10] propose different approaches for predicting labels in the spe-
cificareaofdataanalysisworkflows. Weplantoanalyzewhetherthesemethods
can also be used for the more general problem that we tackle, and if applicable,
we will include their approach in a comprehensive experimental study.
The activity recommendation problem that we investigate is a multi-class
classificationproblem.Thelearningofrulesformultipleclassescausestheprob-
lem of multiple rules firing. Until now we make use of a maximum strategy for
thecasethatmultiplerulesmakethesamerecommendationandassignthemax-
imum confidence score of the rules to this recommendation. We plan to analyse
other aggregation methods that are able to take entailment relations between
rules into account.
Inaddition,wewanttoextendtheproblemtothepossiblecasethatthereis
nolabelintheprocessunderdevelopmentthathasalsobeenusedintheprocess
repository. In this case, we could try to match the labels to the labels in the
repository and then apply the learned rules. However, this requires developing
anapproachthataggregatestheconfidenceofgeneratedmappingswiththecon-
fidencescoresoftherulestocomputetherankingofthefinalrecommendations.
30 D. Sola
Furthermore, we plan to investigate if a combined use of embeddings and
rules can lead to further improvements in accuracy.
References
1. Bordes,A.,Usunier,N.,Garc´ıa-Dura´n,A.,Weston,J.,Yakhnenko,O.:Translating
embeddings for modeling multi-relational data. In: NIPS, pp. 2787–2795 (2013)
2. Bunke, H.: On a relation between graph edit distance and maximum common
subgraph. Pattern Recogn. Lett. 18(8), 689–694 (1997)
3. Cao, B., Yin, J., Deng, S., Wang, D., Wu, Z.: Graph-based workflow recommen-
dation:onimprovingbusinessprocessmodeling.In:Proceedingsofthe21stACM
International Conference on Information and Knowledge Management, pp. 1527–
1531. Association for Computing Machinery, New York (2012)
4. Dataset consisting of processes collected from a district government in
Hangzhou,China.https://github.com/THUBPM/RLRecommender/tree/master/
dataset/SRD
5. De Raedt, L.: Logical and Relational Learning. Springer, Berlin (2008). https://
doi.org/10.1007/978-3-540-68856-3
6. Dehaspe, L., Toivonen, H.: Discovery of relational association rules. In: Dˇzeroski,
S., LavraˇcN. (eds.) Relational data mining, pp. 189–212. Springer, Berlin (2001).
https://doi.org/10.1007/978-3-662-04599-2 8
7. Deng,S.,etal.:Arecommendationsystemtofacilitatebusinessprocessmodeling.
IEEE Trans. Cybern. 47(6), 1380–1394 (2017)
8. Fellmann, M., Zarvic, N., Metzger, D., Koschmider, A.: Requirements catalog for
business process modeling recommender systems. In: Wirtschaftsinformatik, pp.
393–407 (2015)
9. Gal´arraga, L.A., Teflioudi, C., Hose, K., Suchanek, F.: AMIE: association rule
miningunderincompleteevidenceinontologicalknowledgebases.In:Proceedings
of the 22nd International Conference on World Wide Web, pp. 413–422 (2013)
10. Jannach, D., Jugovac, M., Lerche, L.: Supporting the design of machine learning
workflowswitharecommendationsystem.ACMTrans.Interact.Intell.Syst.(TiiS)
6(1), 1–35 (2016)
11. Kluza,K.,Baran,M.,Bobek,S.,Nalepa,G.J.:Overviewofrecommendationtech-
niquesinbusinessprocessmodeling.In:KESECEURWorkshopProceedings,vol.
1070. CEUR-WS.org (2013)
12. Koschmider, A., Hornung, T., Oberweis, A.: Recommendation-based editor for
business process modeling. Data Knowl. Eng. 70(6), 483–503 (2011)
13. Levenshtein, V.I.: Binary codes capable of correcting deletions, insertions and
reversals. Sov. Phys. Dokl. 10(8), 707–710 (1966)
14. Li,Y.,etal.:Anefficientrecommendationmethodforimprovingbusinessprocess
modeling. IEEE Trans. Ind. Inform. 10(1), 502–513 (2014)
15. Meilicke,C.,Chekol,M.W.,Ruffinelli,D.,Stuckenschmidt,H.:Anytimebottom-up
rule learning for knowledge graph completion. In: Proceedings of the 28th Inter-
national Joint Conference on Artificial Intelligence, pp. 3137–3143. AAAI Press
(2019)
16. ModelcollectionoftheBusinessProcessManagementAcademicInitiative.http://
bpmai.org/
A Rule-Based Recommendation Approach for Business Process Modeling 31
17. Wang,H.,Wen,L.,Lin,L.,Wang,J.:RLRecommender:arepresentation-learning-
based recommendation method for business process modeling. In: Pahl, C.,
Vukovic, M., Yin, J., Yu, Q. (eds.) ICSOC 2018. LNCS, vol. 11236, pp. 478–486.
Springer, Cham (2018). https://doi.org/10.1007/978-3-030-03596-9 34
18. Wang, Q., Mao, Z., Wang, B., Guo, L.: Knowledge graph embedding: a survey of
approaches and applications. IEEE Trans. Knowl. Data Eng. 29(12), 2724–2743
(2017)
19. Zhang,Y.,Chen,X.:Explainablerecommendation:asurveyandnewperspectives.
arXiv preprint arXiv:1804.11192 (2018)
Towards a Privacy Conserved and Linked
Open Data Based Device
Recommendation in IoT
B
Fouad Komeiha1,2( ), Nasredine Cheniki1, Yacine Sam1, Ali Jaber2,
Nizar Messai1, and Thomas Devogele1
1 University of Tours, Tours, France
{fouad.komeiha,nasredine.cheniki,yacine.sam,
nizar.messai,thomas.devogele}@univ-tours.fr
2 Lebanese University, Beirut, Lebanon
{fouad.komeiha,ali.jaber}@ul.edu.lb
Abstract. Interconnecting Internet of Things (IoT) devices creates a
network of services capable of working together to accomplish certain
goals in different domains. The heterogeneous nature of IoT environ-
mentsmakesitcriticaltofinddevicesthatextendexistingarchitectures
and helps in reaching the desired goal; especially if we have to take into
consideration data privacy. In this paper, we present a Linked Open
Data (LOD) based approach to semantically annotate and recommend
IoT devices while adding a layer of data security and privacy through
implementing the SOLID (SOcial LInked Data) framework.
· ·
Keywords: IoT Linked Open Data Social Linked Data
1 Introduction
InternetofThings(IoT)asaparadigm,aimstoconnectpervasivedevicestothe
internet and provides means for communication between them. The utilization
ofIoTarchitecturesindifferentdomains,ledtoanincreaseinthenumberofcon-
nected devices adapting different communication standards. This issue created
an overhead for device discovery and recommendation.
The Web of Things (WoT) intends to increase device interoperability by
using existing web standards such as HTTP1, and REST2 for data communica-
tion.Manyprotocolbaseddevicediscoveryframeworkshavebeenproposed[13].
Although protocol based recommendations provide standard, reliable architec-
tures, they lack interoperability [13]. Device representation in such protocols is
still limited and more description expressivity for devices and their capabilities
isneeded.SemanticWebofThings(SWoT),anevolutionoftheWoTwasintro-
duced where domain ontologies are used to model devices and their capabilities
in order to solve interoperability issues.
1 https://www.w3.org/Protocols/.
2 https://www.w3.org/2001/sw/wiki/REST.
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.32–39,2021.
https://doi.org/10.1007/978-3-030-76352-7_5
Towards a Linked Open Data Based Device Recommendation in IoT 33
Semantic-based device recommendation systems incorporate semantics pro-
videdbyontologieswithintherecommendationprocess.Thesesystemsrepresent
devices using designed ontologies for domain modeling and device annotation.
Thisprocesshelpsinunifyingdevices’representationallowingsystemstosearch
for, and recommend devices based on their semantic similarities. Ontologies,
however, are usually domain-specific and cover restricted knowledge domains.
Linked Open Data, on the other hand, is a global data space containing asser-
tions about diverse domains. This allows for a more expressive representation
of devices. It also eliminates the need for ontology extensions or redesigns when
recommendation in new domains is needed.
By annotating devices using LOD concepts, they become part of the LOD
cloud, enabling us to use existing LOD-based similarity measures to perform
similarity calculation and recommend devices to end-users. Besides, a recom-
mendationmethodthatprovidestrustedresultsbytheuserisnecessary.Hence,
device recommendations based on user-social relations could increase user con-
fidence. In addition, semantic similarity calculation for device recommendations
requires querying and access to semantic data representing devices. This means
that any device recommending framework should respect the privacy and secu-
rity of data (device) owners.
In this paper, we present an approach for user-user social device recommen-
dationusingLOD-basedsemanticannotationofdevices.Ourapproachsupports
data privacy and access control by implementing the SOLID3 architecture.
The paper is structured as follows: Sect.2 describes our proposed device
recommendation approach and its architecture. In Sect.3 we explain the main
challenges facing our proposal. Existing works for IoT device recommendation
are presented in Sect.4. Finally Sect.5 provides a conclusion and future works.
2 Proposed Approach
In this section, we present our approach for device recommendation taking as
a use case the smart home domain. We explain the semantic representation of
devices, the recommendation process, and the implemented data privacy mech-
anism.
2.1 Semantic Representation
Our approach focuses on using Linked Open Data (LOD) cloud for both user
profile and device annotations due to its expressivity and coverage of diverse
domains. LOD is a global data space containing billions of semantic assertions.
It’s the result of the adaptation of Linked Data Principles by many publishers,
both individuals and organizations.
Semantic similarity measures, on the other hand, are metrics that assess the
similarity between concepts by measuring the degree of overlap between their
3 https://solidproject.org/.
34 F. Komeiha
semantic representation. Many LOD-based similarity measures have been pro-
posed in the literature [3,7,9,11]. By connecting devices to the LOD cloud,
annotated devices can be treated as LOD resources and existing LOD-based
measurescanbeappliedtocomparethesemanticsimilaritybetweenthemwith-
out the necessity to define new measures. By applying these similarity measures
we can thus recommend new devices to a user based on his ecosystem.
2.2 Semantic and Social IoT Device Recommendation
Differentrecommendationalgorithmshavebeenproposedintheliterature.User-
basedcollaborativefilteringandcontent-basedfilteringaretwoofthecommonly
used algorithms. User-based collaborative filtering recommends items based on
the ratings of similar users to the target user. Content-based filtering method,
on the other hand, recommends items that are similar to the ones rated by the
user. In the domain of IoT, many approaches to recommend devices based on
social relations were introduced [1,2,12].
In our approach, we opted towards using a hybrid system that combines dif-
ferent approaches. We will use a combination of social user-user relations and
collaborative filtering to filter candidate devices. These devices will be candi-
dates for a target user as they are owned by trusted friends. After clustering
devices, a semantic content-based filtering method measures the semantic simi-
larity between a target user’s devices and the devices of his friends, thus avoid-
ingthecoldstartproblem.Anoverallsemanticvaluerepresentingthesimilarity
between a target user’s smart environment and his friend’s environment will be
obtained. Through receiving recommendations of devices from users trusted by
the target user, the confidence in the results is higher. In our architecture, the
controlnode(explainedinSect.2.4)willallowausertoaddotheruserstohislist
of friends by adding their WebIDs4, thus maintaining a user-user relationship.
Through this process, the control node can recommend devices to a user based
on the ecosystem maintained by his friends.
2.3 Data Access and Privacy
Since device recommendation process needs to access data about user-profiles
anddevicedescriptions,aprivacypolicythatdefineswhohastherighttoaccess
and use data is needed. The data owner should have full control over each piece
of his semantic stored data.
In our approach, we adopt the SOLID framework to allow owners to con-
trol access to the data concerned in the recommendation process. SOLID is
a personal data management framework that grants data owners full control
over their personal data. The SOLID architecture is based on two main compo-
nents:thePersonalOnlineDatastore(POD)/SOLIDserverwheredataisbeing
stored, semantically annotated and accessed by third parties according to the
data owner’s preferences. To do this, a data POD provides each new user with
4 https://www.w3.org/wiki/WebID.