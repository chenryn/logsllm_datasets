User: I am trying to automatize some test cases using subprocess_check.call() by calling another python script with an input and output files. I have approx. 10 input files. When I started to test, for example, first and second files were tested successfully but in the third file I got an error and the script was terminated. What I want is, how can I run my script from where it was terminated ? I do not want to start from the beginning. I just wanted to continue my test from the case where I got an error. After correcting the input file, starting from this file I want to run the script until the end.
Any ideas?
Assistant: So, this is not a question involving code, so you get a general answer, not involving code.
The solution to your problem requires you to keep protocol. This protocol must survive the lifetime of your test processes.
So, there must be some place where you can write to about the state of your tests, and this place must ensure persistence. What might that be? Right, the file system, for instance. The most simple place to keep track of your tests is the file system.
What follows is one very simple example of how you might want to implement this: For each test case that succeeded, write a file to the current working directory, indicating success for this test. Then, before your test process would invoke a certain test, make it check the existence of such file and make it skip the test if the file is found. Let's assume your input files have different basenames (e.g. A, B, ...,). You can then use a file called B.success in the current working directory to indicate that this does not need to be tested anymore.