we extend these ideas to any number of antennas and explain how we
measure channel functions. Our presentation focuses on scenarios
where interference from concurrent transmissions is much stronger
than noise and is the main factor affecting reception.
(a) Two concurrent packets on the uplink: Let us start with the
standard MIMO example in Fig. 3, where a single client transmits
two concurrent packets to an AP. Say that the client transmits p1
on the ﬁrst antenna, and p2 on the second antenna. The channel
linearly combines the two packets (i.e., it linearly combines every two
digital samples of the packets). Hence, the 2-antenna AP receives the
following signals:
y1 = h11 p1 + h21 p2
y2 = h12 p1 + h22 p2,
where hi j is a complex number whose magnitude and angle refer to
the attenuation and the delay along the path from the ith antenna on
the client to the jth antenna on the AP, as shown in Fig. 3.
Since the nodes have two antennas, the transmitted and received
signals live in a 2-dimensional space. Thus, it is convenient to use 2-
dimensional vectors to represent the system [29]. This representation
will allow us to use simple ﬁgures to describe how a MIMO system
works. We can re-write the above equations as:
y2(cid:19) = H(cid:18)1
(cid:18)y1
0(cid:19) p1 + H(cid:18)0
1(cid:19) p2,
(1)
where H is the 2 × 2 uplink channel matrix (i.e., the matrix of hi j’s).
Thus, the AP receives the sum of two vectors which are along the
directions H[1 0]T and H[0 1]T (where [.]T refers to the transpose
of a vector), as shown in Fig. 3.
1p
2p
3p
H 11
H 12
H 21
H 22
H 22
H 11
1
0
H 11
0
1
H 21
1
0
H 12
1
0
H 12
0
1
H 22
1
0
Clients
APs
(a) Three Packets Without IAC.
r
vp
11
+
r
vp
2
2
r
33vp
11H
12H
21H
22H
r
11vH
1
r
11vH
2
r
21vH
3
r
12 vH
2
r
12 vH
1
Clients
Clients
APs
APs
r
22 vH
22 vH
3
3
(b) Three Packets With IAC.
Figure 4: Three Packets with/without IAC. In (a), the clients transmit
the packets without alignment. The packets combine at the APs along
three different vectors and the APs cannot decode any packet. The sec-
ond case shows how IAC delivers three packets on the uplink. Speciﬁ-
cally, two of the three packets are aligned at AP1, allowing AP1 to decode
one packet and send it to AP2 on the Ethernet. AP2 uses interference can-
cellation to subtract the packet and decode the remaining two packets.
Assume the AP knows the channel matrix, H, (we will see how to
estimate it in §8). Decoding is easy; to decode p1, the AP needs to get
rid of the interference from p2, by projecting on a vector orthogonal to
H[0 1]T . To decode p2 it projects on a vector orthogonal to H[1 0]T .
We refer to the direction that a receiver projects on, to decode, as the
decoding vector.
(b) Three concurrent packets on the uplink: Consider what hap-
pens if another client concurrently transmits a packet, as shown in
Fig. 4a. Using the same derivation as above, AP1 receives:
(cid:18)y1
y2(cid:19) = H11(cid:18)1
0(cid:19) p1 + H11(cid:18)0
1(cid:19) p2 + H21(cid:18)1
0(cid:19) p3,
where H11 and H21 are channel matrices from the ﬁrst and second
clients to AP1. Said differently, AP1 receives the combination of three
packets p1, p2, and p3, along three vectors H11[1 0]T , H11[0 1]T and
H21[1 0]T , as shown in Fig. 4a. Since AP1 has only two antennas,
the received signal lives in a 2-dimensional space; hence AP1 cannot
decode three packets. Said differently, for any packet pi, the AP
cannot ﬁnd a projection (decoding vector) that eliminates interference
caused by the other two packets. The second access point, AP2, is in
a similar state, it receives three packets along three vectors H12[1 0]T ,
H12[0 1]T and H22[1 0]T , and cannot decode for the same reason.
However, one advantage of MIMO is that a transmitter can control
the vectors along which its signal is received. For example, when a
transmitter transmits packet p1 on the ﬁrst antenna, this is equivalent
to multiplying the samples in the packet by the unit vector [1 0]T
before transmission. As a result the received vector at the AP is
H[1 0]T p1, where H is the channel matrix from transmitter to receiver.
If the transmitter, instead, multiplies the packet p1 by a different
vector, e.g., ~v, the AP will receive the vector H~vp1. Thus, instead of
transmitting each packet on a single antenna, we multiply packet pi
by a vector ~vi (i.e., multiply all digital samples in the packet by the
vector) and transmit the two elements of the resulting 2-dimensional
161r
vp
11
+
r
vp
2
2
r
33vp
r
4 vp
4
r
11vH
1
r
11vH
2
r
21 vH
3
r
31vH
4
r
12 vH
2
r
12 vH
1
r
32 vH
4
r
22 vH
3
r
23 vH
3
r
13 vH
1
r
13 vH
2
Clients
APs
r
33 vH
4
Figure 5: Four Packets on the Uplink. IAC allows AP1 and AP2 to
decode one packet each, and AP3 to decode the two remaining packets.
This requires three packets to be aligned at AP1 and two packets at AP2,
which can be done by picking appropriate encoding vectors.
vector, one on each antenna. Thus, by changing ~vi, we can control the
vector along which the AP receives the packet. We call the vector ~vi
the encoding vector of packet i.
Now, we can apply this method to the 2-client and 2-AP system
to transmit three concurrent packets. In particular, the transmitters
multiply packet i with vector ~vi, as shown in Fig. 4b. We want to pick
~v2 and ~v3 such that the second and third packets (i.e., p2 and p3) are
aligned at AP1, as in Fig. 4b, that is:2
H11~v2 = H21~v3,
(2)
where H11 and H21 are the channel matrices from the ﬁrst and second
clients to AP1. This can be easily done by picking random (but
unequal) values for ~v1 and ~v2 and substituting in the above equation
to get ~v3 (i.e., ~v3 = H−1
21 H11~v2).3
In this case, AP1 receives the second and third packets aligned on
the same direction as in Fig 4b. Thus, AP1 can decode the ﬁrst packet,
p1, by projecting on a vector orthogonal to the aligned interference,
i.e., a vector orthogonal to H11~v2 and H21~v3. Since these two vectors
are already aligned, there is a vector that is orthogonal to both of them,
and thus the AP can decode. Note that without alignment, AP1 could
not decode because H11~v2 and H21~v3 would have different directions,
and no vector will be orthogonal to both.
Note that aligning two vectors with respect to AP1 does not mean
that they are aligned with respect to AP2. This is because the chan-
nels from the clients to the two APs are different and independent.
However, we do not need to align the signals at AP2. AP1 can decode
the ﬁrst packet and send it to AP2 on the Ethernet. Now AP2 knows
the ﬁrst packet. It also knows the channel functions (see in §8 how
we compute channel functions). Hence it can reconstruct the signal
associated with the ﬁrst packet and subtract it from what it received.
This is standard interference cancellation [19, 29]. After cancellation,
AP2 is back into a scenario similar to typical MIMO, namely two
packets on two different directions, in a 2-dimensional space. Hence,
it can decode. Thus, we obtained all three packets. AP1 decoded the
ﬁrst packet, and AP2 decoded the second and third.
(c) Four concurrent packets on the uplink: Let us try to increase
the number of concurrent packets on the uplink to 4. We cannot
do this with only 2 clients and 2 APs (This is because the system
2In general, aligning the directions would mean H11~v2 = αH21~v3, where α is a scalar.
Also note that the vectors are normalized to satisfy the power constraints. But for clarity,
we ignore these details in our description.
3Channel matrices are typically invertible because the antennas are chosen to be more
than half a wavelength apart. If the matrix is not invertible, then you don’t really have a
MIMO system because the two antennas translate into just one equation.
is already too constrained to produce the desirable alignment.) We
need to add an additional AP-client pair. For example, consider
the three APs and three clients, in Fig. 5. The ﬁrst client transmits
packets p1 and p2, the second client transmits p3 and the third client
transmits the fourth packet, p4. Now that we have developed a vector
representation, it is fairly simple to produce an IAC solution for any
conﬁguration. Speciﬁcally, as shown in Fig. 5, AP1 needs to align 3
out of 4 packets. This results in one free packet, e.g., p1, which can
be decoded with orthogonal projection, as we did earlier. From the
perspective of AP2, p1 is already decoded at AP1, and hence can be
subtracted and removed from the signal. Thus, AP2 is left with three
unknown packets. To decode one more packet, it needs to have 2 out
of 3 packets aligned, as shown in Fig. 5. From the perspective of AP3,
two packets are already decoded at AP1 and AP2, and their signal can
be canceled using interference cancellation. Thus, AP3 is left with
only two unknown packets, which it can decode. Hence, AP3 does
not need to align any packets. We can achieve the desired alignment
(i.e., the alignment in Fig. 5) by solving the following equations:
H11~v2 = H21~v3 = H31~v4
H22~v3 = H32~v4,
(3)
(4)
where Hi j is the uplink channel matrix from the ith client to the jth
AP. Eqs. 3 ensures the desired alignment at AP1 and Eq. 4 ensures the
desired alignment at AP2. Effectively, this translates to three linear
equations in three unknowns (the vectors), which can be solved. Thus,
the APs can decode four concurrent packets.4
(d) The downlink: The discussion so far has focused on the uplink,
what about the downlink? Clearly the downlink is more limited,
since the clients cannot cooperate over a wired Ethernet. A client
cannot decode one packet and send it to other clients for interference
cancellation. The lack of cooperation means that the clients have to
decode independently. So, we need to align the interference at each
client to ensure that it can decode at least one packet. For a 2-antenna
system, this means that we can at best deliver 3 concurrent packets on
the downlink. This however is still higher than what can be delivered
in today’s point-to-point MIMO LANs.