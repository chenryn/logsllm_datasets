# GVM漏洞管理框架（一）：安装与组成介绍

## 译文声明
本文为翻译文章，仅供参考。具体内容及含义以原文为准。

### 0x00 前言
GVM漏洞管理框架全称为Greenbone Vulnerability Manager，是由德国绿骨公司开发的漏洞管理框架（下文中简称GVM）。其前身是openvas扫描器。截至本文发布时，绿骨公司仍在对GVM的组件进行快速迭代和重命名，因此未来的一些名称可能会与当前不同。

#### 重要术语解释：
- **GVM-libs**：绿骨漏洞管理解决方案中的库模块，提供API以便各模块间通信。
- **GVMD (Greenbone Vulnerability Manager Daemon)**：管理守护进程。
- **OSP (Open Scanner Protocol)**：用于控制各种漏洞扫描器的XML格式通信协议。
- **OSPD (Open Scanner Protocol Daemon)**：通过OSP协议控制扫描器的框架。
- **GMP (Greenbone Management Protocol)**：基于XML的内部通信协议，用于控制GVMD。
- **VTS (Vulnerability Test Scripts)**：漏洞测试脚本。
- **NVTs (Network Vulnerability Tests)**：网络漏洞测试脚本（nasl脚本）。
- **GSA (Greenbone Security Assistant)**：生成Web界面，并为Web应用程序提供API。

### 本文将重点分析GVM的三个主要模块：

1. **OpenVAS Scanner (以下简称Scan模块)**
   - Scan模块是一个功能齐全的扫描引擎，可以针对目标系统执行漏洞测试。它使用每日更新的绿骨安全提要（商业版或社区版）。
   - 该模块由`ospd-openvas`和`openvas-scanner`组成。`ospd-openvas`通过OSP协议控制`openvas-scanner`，并将扫描结果发送到GVMD。
   - GitHub项目地址：[https://github.com/greenbone/openvas-scanner](https://github.com/greenbone/openvas-scanner)

2. **Greenbone漏洞管理器守护进程 (以下简称GVMD模块)**
   - GVMD模块是中央服务，整合普通漏洞扫描成一个完整的漏洞管理解决方案。它通过OSP协议控制Scan模块，并提供基于XML的无状态GMP协议。
   - GVMD还控制一个PostgreSQL数据库，集中存储所有配置和扫描结果数据。此外，它还处理用户管理、权限控制等任务。
   - GitHub项目地址：[https://github.com/greenbone/gvmd](https://github.com/greenbone/gvmd)

3. **GVM-libs**
   - GVM-libs是绿骨漏洞管理解决方案的库模块，提供XML解析和网络通信等基本功能。它是其他GVM模块运行的重要依赖。
   - GitHub项目地址：[https://github.com/greenbone/gvm-libs](https://github.com/greenbone/gvm-libs)

### 其他重要模块（本文不做深入分析）：

- **GSA (Greenbone Security Assistant)**
  - GSA是GVM的用户控制扫描Web界面，通过GSAD连接到GVMD，提供全功能的Web应用程序。
- **OSP扫描器**
  - 用户可以使用OSPD框架开发和连接自己的OSP扫描器。
- **GMP客户端**
  - GMP工具集帮助远程控制GSM设备及其基础GVMD。这些工具有助于访问GMP和OSP协议。

### 0x01 安装踩坑

GVM框架采用C语言编写，由于依赖某些仅在Linux中可用的第三方库，目前只能在Linux上安装。

#### 源码部署踩坑

- **源码获取**
  - 可从GitHub拉取源码，建议使用代理工具如ProxyChains。
  - 参考手册：[https://greenbone.github.io/docs/gvm-21.04/index.html](https://greenbone.github.io/docs/gvm-21.04/index.html)
  - 使用主机：Ubuntu-21.04

- **部署步骤**
  - 创建用户和组，并设置安装路径。
  - 导入Greenbone签名密钥以验证下载文件。
  - 安装GVM-libs中的重要依赖库。
  - 配置Redis和PostgreSQL，并启动相关服务。

- **常见问题及解决方法**
  1. 重启设备后之前的设置失效：重新按照手册设置安装路径和软件版本。
  2. 下载时报错404：检查并更改指定的版本号。
  3. 安装GVMD时报错缺少libical >= 1.0.0：使用`apt-get install libical-dev`命令安装。
  4. 安装GVMD时报错缺少postgresql-server-dev-11：按官方方法导入PostgreSQL库并安装。
  5. 安装GSA时yarn版本错误：删除原有yarn并重新安装。
  6. PostgreSQL版本不符：使用`apt-get install postgresql-11`指定所需版本。
  7. 设置PostgreSQL用户和数据库时密码问题：切换到root用户设置密码。

#### Kali apt install踩坑

- **自动安装**
  - 在Kali上可直接使用`apt-get install gvm -y`进行安装，但可能遇到版本不匹配问题。
- **常见问题及解决方法**
  - 删除不正确的版本并下载所需版本。
  - 修改PostgreSQL侦听端口以避免冲突。
  - 查看日志文件`/var/log/gvm/`以排查问题。

#### 在Kali中初始化启动

- `gvm-setup`：自动检测安装是否正确并给出解决方案。
- `runuser -u gvm -- gvmd --user=admin --new-password=admin`：修改Web界面密码。
- `gvm-feed-update`：更新特征库（近期不推荐使用）。

### 0x02 Scan模块

Scan模块是GVM的核心扫描引擎，用于执行网络漏洞测试脚本(NVT)。它包含以下部分：
- **Redis数据库**：默认路径为`/run/redis-openvas/redis-server.sock`，可通过`redis-cli -s /run/redis-openvas/redis-server.sock`连接。

希望本文能帮助您更好地理解和安装GVM漏洞管理框架。