### User Scenarios

**User Class A:**
- **Description:** A high proportion of users in this class are primarily seeking information without the intention to make a purchase.
- **Characteristics:**
  - The percentage of transactions that end with a payment is significantly lower, approximately 3%.
  - Only 50% of user transactions involve the functions Search, Book, or Pay.

**User Class B:**
- **Description:** This class is characterized by a higher proportion of users who are genuinely looking to book a trip.
- **Characteristics:**
  - Approximately 20% of transactions end with a payment.
  - 80% of user transactions involve the functions Search, Book, or Pay.
  - These scenarios often require interaction with external reservation systems, which can impact the perceived dependability of the service.

**Table 1: User Scenario Probabilities (in %)**
| Scenario | Class A | Class B |
|----------|---------|---------|
| 1. St-Ho-Ex | 10.0 | 10.0 |
| 2. St-Br-Ex | 26.7 | 6.6 |
| 3. St-{Ho- Br}*-Ex | 11.3 | 4.2 |
| 4. St-Ho-Se-Ex | 18.4 | 13.9 |
| 5. St-Br-Se-Ex | 12.2 | 20.4 |
| 6. St-{Ho- Br}*-Se-Ex | 7.6 | 9.7 |
| 7. St-Ho-{Se-Bo}*-Ex | 3.0 | 4.7 |
| 8. St-Br-{Se-Bo}*-Ex | 2.0 | 6.9 |
| 9. St-{Ho- Br}*-{Se-Bo}*-Ex | 1.3 | 3.3 |
| 10. St-Ho-{Se-Bo}*-Pa-Ex | 3.6 | 6.4 |
| 11. St-Br-{Se-Bo}*-Pa-Ex | 2.4 | 9.4 |
| 12. St-{Ho-Br}*-{Se-Bo}*-Pa-Ex | 1.5 | 4.5 |

### Service and Function Levels

The service level identifies the set of servers involved in the execution of each function and describes their interactions. This analysis requires a deep understanding of the technical solutions, business logic, and the overall architecture implemented by the Travel Agency (TA) system provider.

**Table 2: Mapping Between Functions and Services**

| Internal Services | Web | Application | Database | External Services | Flight | Hotel | Car | Payment |
|-------------------|-----|-------------|----------|-------------------|--------|-------|-----|---------|
| Home              | ✔   |             |          |                   |        |       |     |         |
| Browse            | ✔   | ✔           | ✔        |                   |        |       |     |         |
| Search            | ✔   | ✔           | ✔        | ✔                 | ✔      | ✔     | ✔   |         |
| Book              | ✔   | ✔           | ✔        | ✔                 | ✔      | ✔     | ✔   |         |
| Pay               | ✔   | ✔           | ✔        | ✔                 |        |       |     | ✔       |

**Function Execution Scenarios:**

- **Browse Function:**
  - **Scenario 1 (1→2→3):** The user sends a request to the web server, and the requested data is available in the local cache.
  - **Scenario 2 (1→2→4→5→6):** The web server forwards the request to the application server, which processes the request and returns a dynamically generated page.
  - **Scenario 3 (1→2→4→7→8→9→10):** The application server requires specific information from the database server, processes the request, and returns the results to the web server.

- **Search Function:**
  - The search function involves multiple stages, including input validation, query formulation, and interaction with external booking systems. The process ensures that at least one system responds for each service (Flight, Hotel, and Car).

- **Book Function:**
  - The booking function processes the user's order, interacts with the corresponding booking systems, and stores the booking references in the database before sending a confirmation to the user.

- **Pay Function:**
  - The payment function involves checking the booking data, authenticating and verifying the payment, updating the database, and sending a confirmation to the user.

### Resource Level

**Architectural Solutions:**
- **Basic Architecture (Figure 7):** 
  - Each server (web, application, database, and payment) is allocated a dedicated host.
  - The hosts are interconnected through a Local Area Network (LAN).
  - Lack of redundancy and scalability can be a significant weakness.

- **Redundant Architecture (Figure 8):**
  - Uses a server farm configuration with load balancing.
  - Includes multiple web, application, and database servers with mirrored disks.
  - Improves dependability and scalability by applying redundancy in various places.

**Figures:**
- **Figure 3:** Interaction diagram for the "Browse" function.
- **Figure 4:** Interaction diagram for the "Search" function.
- **Figure 5:** Interaction diagram for the "Book" function.
- **Figure 6:** Interaction diagram for the "Pay" function.
- **Figure 7:** Basic architecture.
- **Figure 8:** Redundant architecture.

In the next section, we will model the availability of the system based on these architectures.