tion polynomials must be formed, and later evaluated, per each
chunk. Since the same encrypted query data is used to evaluate
the interpolation polynomials for each chunk, the label size has no
direct impact on the receiver-to-sender communication. However,
the sender-to-receiver communication increases linearly with the
number of chunks. Thus, if the labels are very long, it is beneficial
to parameterize the protocol in a way that minimizes the sender-to-
receiver communication at the cost of increased receiver-to-sender
communication.
Unfortunately there are not many meaningful points of compar-
ison. Chen et al. [13] presented a single datapoint comparing to a
PIR paper [3], where the label size was ℓ = 288 B. We replicated
this experiment using our optimizations; the results are presented
in Table 3. Our protocol clearly outperforms both points of compar-
ison in all measured aspects. More examples for label sizes ℓ = 16 B
and ℓ = 32 B are in Table 4.
5.4 HElib Implementation: Optimizing for
Communication Complexity
Our proof-of-concept implementation in HElib aims to illustrate
that unbalanced PSI can achieve a sublogarithmic communica-
tion complexity in |𝑋|. We conducted experiments with 𝑋 and
𝑌 containing elements of arbitrary bit length. These elements are
hashed to 80-bit strings in the cuckoo hashing stage of the proto-
col. The set sizes are |𝑋| ∈ {220, 222, 224, 226} for the sender and
|𝑌| ∈ {126, 210, 341, 558, 1245} for the receiver. To get the small-
est possible communication cost, we avoid partitioning (i.e., we
take 𝛼 = 1). Neither the windowing method, nor the extremal
postage-stamp bases are exploited.
As mentioned in Section 3.1.6, before executing our PSI protocol
the receiver sends 𝑂(log |𝑋|) evaluation keys to the sender. The
number of keys can be reduced to one, at the cost of additional
Frobenius operations. Since the evaluation keys are independent of
𝑌, they can be sent only once and cached for repeated executions
Session 4C: Private Set Intersection CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1144Sender offline (s)
Sender online (s)
Comm. (MB)
R → S
S → R
3.7
6.5
4.5 (11.8)
2.6 (8.2)
2.6
3.5 (10.2)
3.5 (10.2)
1.2
4.0 (8.7)
2.9 (8.2)
1.8 (3.1)
1.6
1.9 (7.2)
1.7 (8.1)
1.7 (5.1)
0.9
3.4 (4.2)
2.6 (2.9)
1.6 (2.5)
0.86
2.8 (7.2)
1.8 (3.6)
1.7 (2.5)
0.87
Set sizes
|𝑌 |
|𝑋 |
4096
2048
1024
228
1
T=1
-
-
-
-
224
220
4096
2048
1024
1
820 (806)
827 (747)
833 (1,430)
463
4096
2048
1024
1
33.6 (43)
33.4 (39)
33.5 (40)
25.8
T=4
-
-
-
-
249
256
269
141
11.4
11.1
10.9
7.7
T=8
-
-
-
-
153
159
171
85.7
7.7
7.5
7.4
4.9
T=24 (T=32)
3,400
3,528 (4,638)
3,680 (4,638)
1,469
92.9
96.9
109
51.3
6.6
5.4
5.6
4.0
T=1
152
148
141
50.7
16.1 (22.0)
15.1 (12.6)
14.0 (17.7)
6.3
4.82 (4.2)
5.79 (2.1)
5.59 (2.0)
0.13
T=4
38.9
37.3
36.2
13.9
4.4
4.1
3.8
1.8
1.34
1.58
1.52
0.04
T=8
20.9
20.3
19.6
7.1
2.5
2.4
2.3
1.2
0.72
0.81
0.77
0.02
T=24
8.3
8.1 (28.5)
7.8 (12.1)
3.6
1.0
1.0
0.9
0.6
0.38
0.37
0.36
0.01
Table 1: Computation and communication cost of our SEAL implementation. ‘T’ denotes the thread count, and ‘R→S’ and ‘S→
R’ the receiver-to-sender and sender-to-receiver communication sizes, respectively. The times are averaged over 10 runs of
the protocol. Corresponding values from Chen et al. (CCS’18), for single-threaded execution are in parentheses, except for the
case of |𝑋| = 228, where Chen et al. (CCS’18) uses 32 threads and we compare against our execution on 24 threads.
|𝑋 |
228
224
220
|𝑌 |
2048
1024
11041
5535
11041
5535
Protocol
[13] (T=32)
Ours (T=24)
[54] (T=32)
[13] (T=32)
Ours (T=24)
[54]
LowMC-GC-PSI [36]
ECC-NR-PSI [36]
LowMC-GC-PSI [36]
ECC-NR-PSI [36]
LowMC-GC-PSI [36]
ECC-NR-PSI [36]
LowMC-GC-PSI [36]
ECC-NR-PSI [36]
LowMC-GC-PSI [36]
ECC-NR-PSI [36]
[13]
Ours
[54]
[13]
Ours
[54]
[13]
Ours
[54]
[13]
Ours
Sender offline (s)
4,628
3,528
182
1,869
52,332
4,628
3,680
342
117
3,298
656
783
342
117
3,298
806
824
22
7.3
242
43
29
22
7.3
242
43
28
Offline comm. and
receiver storage (MB)
0
0
806
1,072
1,072
0
0
48
67
67
0
0
48
67
67
0
0
3
4.2
4.2
0
0
3
4.2
4.2
0
0
Sender online (s) Online comm. (MB)
28.5
8.06
0.16
0.93
1.34
12.1
7.80
0.71
12.51
11.94
20.10
21.16
0.35
5.63
5.93
22.01
17.07
0.71
12.51
11.94
4.47
4.21
0.35
5.63
5.93
4.23
3.23
22.28
8.07
0.07
24.01
6.06
18.57
6.08
0.67
258.79
65.24
41.48
11.87
0.34
129.73
32.71
16.39
6.95
0.67
258.79
65.24
14.34
8.94
0.34
129.73
32.71
11.50
5.39
Table 2: Comparison to prior work. All executions are with a single thread, except those where the thread count is explicitly
marked with T=thread count.
of the protocol. Thus, this communication overhead Table 5 can be
amortized over multiple receiver’s requests.
The communication cost of our PSI protocol is shown in Table 6.
For comparison, we also included the communication cost of [13].
Note that in [13], evaluation keys and ciphertexts are generated
in the symmetric-key mode, which allows us to almost halve their
size. Unfortunately, we do not have access to this mode in HElib,
Session 4C: Private Set Intersection CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1145ℓ
288
|𝑋 |
220
|𝑌 |
256
Protocol
[3]