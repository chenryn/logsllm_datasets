756
1849
3,816
0.00
0.01
0.01
0.02
Conﬁguration
500/500
3,006,006
18,267,500
6,606
35,963
60,389
0.47
0.35
0.16
0.37
5000/500
30,060,006
182,715,500
33,606
216,287
349,552
–
4.10
0.93
2.20
5000/5000
300,060,006
1,825,175,000
65,106
868,097
980,453
–
45.63
11.53
24.62
where
f
λ
= 1/128
,
tf1
(1)) = mp1,1 ,
(j)) = 1
and
for j = 2, 3,
(1)
in ((tf1 , c1), M
(j)
in ((tf1 , c1), M
f
f
(1)
in ((tf2 , c2), M
(2)
in ((tf2 , c2), M
(3)
in ((tf2 , c2), M
f
f
= 1/96,
λtf2
(1)) = mp1,1 ,
(2)) = x1 + 1,
(3)) = 1.
and
RESULTS FOR THE EXAMPLE WITH K1 = K4 = 3.
TABLE II
b
o
r
p
b
o
r
p
1.00
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.00
K=3 50/50
K=3 500/500
K=3 5000/5000
K=5 50/50
K=5 500/500
K=5 5000/5000
80.00
100.00
20.00
40.00
60.00
t
Fig. 7. Probability of a normal operation of the system.
0.60
0.50
0.40
0.30
0.20
0.10
0.00
0.00
K=3 50/50
K=3 500/500
K=3 5000/5000
K=5 50/50
K=5 500/500
K=5 5000/5000
80.00
100.00
20.00
40.00
60.00
t
Fig. 8. Process degradation.
Although the example has again two ﬂuid places, it differs
signiﬁcantly from the simple running example. Due to the
ﬂush-out arcs and state dependent ﬂow and ﬁring rates, the
reachable states space is a proper subset of the potential state
space and a hierarchical structure has to be built. We analyze
two conﬁgurations with K1 = K4 = 3 and K1 = K4 = 5.
301
Measure
states
non-zeros
nz struct
nz htd 0.1
nz htd 0.01
time ﬂat
time struct
time htd 0.1
time htd 0.01
50/50
46,510
297,940
866
5,122
9,011
0.00
0.01
0.03
0.05
Conﬁguration
500/500
4,515,010
29,304,490
6,716
45,166
70,125
0.66
0.23
0.55
5000/500
45,150,010
293,1124,90
33,716
225,064
388,080
–
7.25
0.85
2.63
5000/5000
450,150,010
2,925,544,990
65,216
908,898
1,046,009
–
128.5
11.01
16.10
RESULTS FOR THE EXAMPLE WITH K1 = K4 = 5.
TABLE III
Some results for the two conﬁgurations and different num-
ber of discretization intervals are shown in Figs. 7 and 8. In
the ﬁrst ﬁgure the mean probability of a normal operation
is shown. It can be seen that the curves have some peaks
in the beginning which can only be analyzed with a ﬁne
discretization. Results for the process degradation, which cor-
responds to the ﬂuid level in place c2, are similar. Tables II and
III summarize additional facts about the solution effort. The
second line of each table contains the number of discretization
intervals for places c1 and c2, respectively. We analyze four
different conﬁgurations. The line starting with states contains
the number of states in the discrete model. The line starting
with non-zeros contains the number of non-zero elements in
matrix Q, which corresponds to the number of transitions plus
the number of diagonal elements. nz struct equals the number
of nonzero elements in the matrices of the subnets which can
be used to build the complete matrix using (10). The following
two lines, starting with nz htd 0.1 and nz htd 0.01 show the
number of ﬂoating point numbers which are stored in the HTD
structure when the example is analyzed with uniformization
and a maximal error in the transient results, which is less
than 10% or 1%. This requires truncation bounds for the HTD
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:47:40 UTC from IEEE Xplore.  Restrictions apply. 
structures between 10−6 and 5 · 10−8. Truncation bounds for
the largest conﬁgurations are only estimates because we were
not able to compute the exact results in an acceptable time.
The last four lines of the tables include times to perform one
iteration, which means to compute one vector matrix product,
with different matrix and vector representations. Time is mea-
sured in seconds of CPU time. For the ﬁnal solution, between
10000 and 94100 iterations are necessary. Unfortunately, the
system becomes more stiff if the number of intervals for
discretization is increased and a stiff system requires more
iterations. This means that for the largest models the largest
number of iterations has to be performed to reach the required
accuracy.
It can be noticed that, as for the simple running example,
the HTD structure remains very compact. This has the effect
that vector matrix products can be computed faster than with
a ﬂat vector and even with a sparse matrix implementation.
However, this can only be observed for large state spaces. For
small matrices the overhead of the HTD computations domi-
nates. Further results, including results about the performance
of different transient measures will be made available in a
separate report.
VI. CONCLUSION
The paper presents a compositional class of FSPNs and
a new numerical approach for their transient analysis. The
approach is tailored towards the analysis of very large state
spaces. It uses a compact, but still exact, representation of the
transition matrix and a compact, but approximate, represen-
tation of the solution vector. In this way, state spaces of size
that does not allow the representation of each state in computer
memory can be analyzed numerically with an often acceptable
accuracy.
The presented model can be extended in various directions.
It is possible to consider second order ﬂuid models in a similar
way [7], [26]. Furthermore, unbounded ﬂuid places can be
integrated by using an exponential transformation. To improve
the solution time, the inherent parallelism in the different steps
of the approach needs to be exploited.
REFERENCES
[1] Andrea Bobbio, Sachin Garg, Marco Gribaudo, Andr´as Horv´ath, Matteo
Sereno, and Mikl´os Telek. Compositional ﬂuid stochastic Petri net model
for operational software system performance.
In IEEE International
Conference on Software Reliability Engineering Workshops, ISSRE
Workshops 2008, Seattle, WA, USA, November 11-14, 2008, pages 1–6.
IEEE, 2008.
[2] Luca Bortolussi, Jane Hillston, Diego Latella, and Mieke Massink.
Continuous approximation of collective system behaviour: A tutorial.
Perform. Eval., 70(5):317–349, 2013.
[3] Peter Buchholz. Hierarchical structuring of superposed GSPNs. IEEE
Trans. Softw. Eng., 25:166–181, 1999.
[4] Peter Buchholz, Gianfranco Ciardo, Susanna Donatelli, and Peter Kem-
per. Complexity of memory-efﬁcient Kronecker operations with ap-
plications to the solution of Markov models.
INFORMS J. Comput.,
12:203–222, 2000.
[5] Peter Buchholz, Tugrul Dayar, Jan Kriege, and M. Can Orhan. On com-
pact solution vectors in Kronecker-based Markovian analysis. Perform.
Eval., 115:132–149, 2017.
[6] Peter Buchholz and William H. Sanders. Approximate computation of
transient results for large Markov chains. In 1st International Conference
on Quantitative Evaluation of Systems (QEST 2004), 27-30 September
2004, Enschede, The Netherlands, pages 126–135. IEEE Computer
Society, 2004.
[7] Dongyan Chen, Yiguang Hong, and Kishor S. Trivedi. Second-order
stochastic ﬂuid models with ﬂuid-dependent ﬂow rates. Perform. Eval.,
49(1/4):341–358, 2002.
[8] Gianfranco Ciardo, David M. Nicol, and Kishor S. Trivedi. Discrete-
IEEE Trans. Software
event simulation of ﬂuid stochastic Petri nets.
Eng., 25(2):207–217, 1999.
[9] Tugrul Dayar. Analyzing Markov Chains using Kronecker Products:
Theory and Applications. Springer, New York, 2012.
[10] Tugrul Dayar and M. Can Orhan. Cartesian product partitioning of multi-
dimensional reachable state spaces. Probab. Eng. Inf. Sci., 30:413–430,
2016.
[11] Susanna Donatelli. Superposed stochastic automata: A class of stochastic
Petri nets with parallel solution and distributed state space. Perform.
Eval., 18(1):21–36, 1993.
[12] Susanna Donatelli. Superposed generalized stochastic Petri nets: Deﬁ-
nition and efﬁcient solution. In Robert Valette, editor, Application and
Theory of Petri Nets 1994, 15th International Conference, Zaragoza,
Spain, June 20-24, 1994, Proceedings, volume 815 of Lecture Notes in
Computer Science, pages 258–277. Springer, 1994.
[13] Hamed Ghasemieh, Anne Remke, and Boudewijn R. Haverkort. Sur-
vivability analysis of a sewage treatment facility using hybrid petri nets.
Perform. Eval., 97:36–56, 2016.
[14] Gene H. Golub and Charles F. Van Loan. Matrix Computations. John
Hopkins Studies in the Mathematical Sciences. The Johns Hopkins
University Press, 3 edition, 1996.
[15] Marco Gribaudo and Andr´as Horv´ath.
Fluid stochastic Petri nets
IEEE
augmented with ﬂush-out arcs: A transient analysis technique.
Trans. Software Eng., 28(10):944–955, 2002.
[16] Marco Gribaudo, Matteo Sereno, Andr´as Horv´ath, and Andrea Bobbio.
Fluid stochastic Petri nets augmented with ﬂush-out arcs: Modelling and
analysis. Discrete Event Dynamic Systems, 11(1-2):97–117, 2001.
[17] Wolfgang Hackbusch. Tensor Spaces and Numerical Tensor Calculus.
Springer, Heidelberg, 2012.
[18] Graham Horton, Vidyadhar G. Kulkarni, David M. Nicol, and Kishor S.
Trivedi. Fluid stochastic Petri nets: Theory, applications, and solution
techniques. European Journal of Operational Research, 105(1):184–
201, 1998.
[19] Daniel Kressner and Francisco Macedo. Low-rank tensor methods for
communicating Markov processes. In G. Norman and W. Sanders, edi-
tors, Proceedings of the 11th International Conference on Quantitative
Evaluation of Systems, volume 8657 of Lecture Notes in Computer
Science, pages 25–40. Springer, Heidelberg, 2014.
[20] Daniel Kressner and Christine Tobler. Preconditioned low-rank methods
for high-dimensional elliptic PDE eigenvalue problems. Comput. Meth.
in Appl. Math., 11(3):363–381, 2011.
[21] Daniel Kressner and Christine Tobler. Algorithm 941: htucker - A matlab
toolbox for tensors in hierarchical tucker format. ACM Trans. Math.
Softw., 40(3):22:1–22:22, 2014.
[22] Krist´of Marussy, Attila Klenik, Vince Moln´ar, Andr´as V¨or¨os, Istv´an
Majzik, and Mikl´os Telek.
Efﬁcient decomposition algorithm for
stationary analysis of complex stochastic Petri net models. In Fabrice
Kordon and Daniel Moldt, editors, Application and Theory of Petri Nets
and Concurrency - 37th International Conference, PETRI NETS 2016,
Toru´n, Poland, June 19-24, 2016. Proceedings, volume 9698 of Lecture
Notes in Computer Science, pages 281–300. Springer, 2016.
[23] Ivan V. Oseledets and Eugene E. Tyrtyshnikov. Breaking the curse
of dimensionality, or how to use SVD in many dimensions. SIAM J.
Scientiﬁc Computing, 31(5):3744–3759, 2009.
[24] Carina Pilch and Anne Remke. Statistical model checking for hybrid
petri nets with multiple general transitions. In 47th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks, DSN
2017, Denver, CO, USA, June 26-29, 2017, pages 475–486. IEEE
Computer Society, 2017.
[25] William J. Stewart. Introduction to the Numerical Solution of Markov
Chains. Princeton University Press, Princeton, NJ, 1994.
[26] Kathinka Wolter. Performance and dependability modeling with second-
order ﬂuid stochastic Petri Nets. PhD thesis, TU Berlin, 1997.
302
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:47:40 UTC from IEEE Xplore.  Restrictions apply.