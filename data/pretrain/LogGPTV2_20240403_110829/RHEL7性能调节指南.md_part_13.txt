    :::
:::
::: para
《*红帽企业版 Linux 7 SystemTap 入门指南*》可在网站中查找
。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems-Configuration_tools}5.3. 配置工具 {.title}
:::
::: para
红帽企业版 Linux
提供一些帮助管理员配置存储和文件系统的工具。此章节概述可用的工具并提供示例阐述如何使用这些工具解决红帽企业版
Linux 7 中 I/O 和文件系统相关的性能问题。
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Configuring_tuning_profiles_for_storage_performance}5.3.1. 配置存储性能的调整配置文件。 {.title}
:::
::: para
[**Tuned**]{.application} 和 [**tuned-adm**]{.application}
提供一些旨在为特定用例提高性能的配置文件。下列配置文件对于提高存储性能尤其有用。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    延迟性能
    :::
-   ::: para
    吞吐量性能（默认）
    :::
:::
::: para
如需配置系统中的配置文件，请运行以下命令，用您想用的配置文件名称替代
*name*。
:::
``` screen
$ tuned-adm profile name
```
::: para
`tuned-adm recommend`{.command}
命令为系统推荐合适的配置文件。在安装时它也会为系统设置默认配置文件，因此可用于返回默认配置文件。
:::
::: para
配置文件或其他配置选项更多细节，请参见 [第 A.6 节
"tuned-adm"](#appe-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tool_Reference.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tool_Reference-tuned_adm){.xref}。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Setting_the_default_IO_scheduler}5.3.2. 设置默认 I/O 调度器 {.title}
:::
::: para
如果设备的挂载选项没有指定调度器，可使用默认 I/O 调度器。
:::
::: para
如需设置默认 I/O 调度器，在重启时通过向内核命令行附加 elevator
参数来指定欲使用的调度器，或通过编辑 `/etc/grub2.conf`{.filename} 文件。
:::
``` screen
elevator=scheduler_name
```
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Configuring_the_IO_scheduler_for_a_device}5.3.3. 为设备配置 I/O 调度器 {.title}
:::
::: para
如需设置特定存储设备的调度器或调度器优先顺序，编辑
`/sys/block/devname/queue/scheduler`{.filename} 文件，*devname*
为您欲配置的设备名称。
:::
``` screen
# echo cfq > /sys/block/hda/queue/scheduler
```
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Tuning_the_deadline_scheduler}5.3.4. 调整期限调度器 {.title}
:::
::: para
使用 `deadline`{.systemitem} 时，排队的 I/O
请求将分为读批处理或者写批处理，然后按照 LBA
递增的执行顺序调度。默认设置下，读批处理比写批处理优先处理，这是因为在读
I/O 上应用程序易被阻止。在批处理被处理后，`deadline`{.systemitem}
会检查写操作因等待处理器时间而处于多久的"饥饿"状态，并合理调度下一个读或者写批处理。
:::
::: para
下列参数影响 `deadline`{.systemitem} 调度器行为：
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_deadline_scheduler-fifo_batch}[fifo_batch]{.term}
:   ::: para
    单个批处理中读操作或写操作发出的数量。默认值为
    `16`{.literal}。值越高，吞吐量也会更多，但也会增加延迟。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_deadline_scheduler-front_merges}[front_merges]{.term}
:   ::: para
    如果您的工作负载从不产生正面合并，可调整的参数设置为
    `0`{.literal}。然而，除非您已经测试了该检查的开销，红帽推荐
    `1`{.literal} 的默认值。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_deadline_scheduler-read_expire}[read_expire]{.term}
:   ::: para
    应为服务调度读请求中毫秒的数量。默认值为 `500`{.literal}（0.5秒）。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_deadline_scheduler-write_expire}[write_expire]{.term}
:   ::: para
    应为服务调度写请求中毫秒的数量。默认值为 `5000`{.literal}（5秒）。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_deadline_scheduler-writes_starved}[writes_starved]{.term}
:   ::: para
    先于写批处理而处理的读批处理数量。该值越高，给读批处理的优先更多。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Configuration_tools-Tuning_the_cfq_scheduler}5.3.5. 调整 cfq 调度器 {.title}
:::
::: para
使用 `cfq`{.systemitem} 时
，进程分为三类：实时、尽其所能和空闲。尽其所能进程之前调度所有实时进程，而空闲进程之前调度尽其所能进程。默认设置下，进程归类为尽其所能。可使用
`ionice`{.command} 命令手动调整进程分类。
:::
::: para
通过使用下列参数进一步调整 `cfq`{.systemitem}
调度器的行为。这些参数通过改变
`/sys/block/devname/queue/iosched`{.filename}
目录下的指定文件，基于每个设备设置的。
:::
::: variablelist
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-back_seek_max}[back_seek_max]{.term}
:   ::: para
    `cfq`{.systemitem} 将执行向后搜寻以千字节计算的最大距离。默认值是
    `16`{.literal} KB。 向后搜寻通常会损害性能，因此不推荐大的值。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-back_seek_penalty}[back_seek_penalty]{.term}
:   ::: para
    磁头在决定向前还是向后移动时，乘法器应用于向后搜寻。默认值为
    `2`{.literal}。如果磁头位置是
    1024 KB，并且在系统中有等距的请求（例如：1008 KB 和
    1040 KB），*`back_seek_penalty`* 应用于向后搜寻距离和磁盘向前移动。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-fifo_expire_async}[fifo_expire_async]{.term}
:   ::: para
    异步（缓冲写入）请求以毫秒计算的可能持续无服务的时间长度。在这个时间过期之后，一个单独的"饥饿"的异步请求移动至配送列表。默认值为
    `250`{.literal} 毫秒。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-fifo_expire_sync}[fifo_expire_sync]{.term}
:   ::: para
    同步（读取或者`O_DIRECT`{.systemitem}
    写入）请求以毫秒计算的可能持续无服务的时间长度。在这个时期过期后，一个单独的"饥饿"的同步请求被移动到配送列表。默认值为
    `125`{.literal} 毫秒。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-group_idle}[group_idle]{.term}
:   ::: para
    默认设置下，参数设为 `0`{.literal}（禁用）。设置为
    `1`{.literal}（禁用）时，`cfq`{.systemitem}
    调度器空闲在控制组中发出I/O的最后进程里。如使用成比例的重量 I/O
    控制组，或 *`slice_idle`* 设置为 `0`{.literal}
    （在快速存储上）会有帮助。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-group_isolation}[group_isolation]{.term}
:   ::: para
    默认设置下，该参数设置为 `0`{.literal}（禁用）。设置为
    `1`{.literal}（启用）时，它提供组之间更强的隔离，但是吞吐量会减少，这是因为公平性用于随机和顺序工作负载。*`group_isolation`*
    禁用时（设置为
    `0`{.literal}），公平性只提供给顺序工作负载。更多信息，请参见安装文件
    `/usr/share/doc/kernel-doc-version/Documentation/cgroups/blkio-controller.txt`{.filename}。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-low_latency}[low_latency]{.term}
:   ::: para
    默认设置下，设置参数为 `1`{.literal}
    （启用）。启用后，通过为设备上发出 I/O 的每个进程提供最大为
    `300`{.literal} ms 的等待时间，`cfq`{.systemitem}
    更注重公平性而非吞吐量。设置参数为 `0`{.literal}
    时（禁用），目标延迟被忽略，每个进程接受完整时间片。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-quantum}[quantum]{.term}
:   ::: para
    该参数定义 `cfq`{.systemitem} 在同一时间发送给一个设备的 I/O
    请求的数量，实质上是对队列深度的限制。默认值为 `8`{.literal}
    请求。使用的设备可能支持更大的队列深度，但增加量程值也会导致延迟增加，尤其是大的顺序写工作负载。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-slice_async}[slice_async]{.term}
:   ::: para
    该参数定义分配给每个发出异步 I/O
    请求的进程的时间片（以毫秒计算）长度。默认值为 `40`{.literal} 毫秒。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-slice_idle}[slice_idle]{.term}
:   ::: para
    该参数指定等待下一步请求时以毫秒计算的 cfq 空闲时间长度。默认值为
    `0`{.literal}（队列无空闲或者 service tree level）。默认值对于外部
    raid
    存储器的吞吐量是理想的，由于增加了搜寻操作的整体数量，而降低内部
    non-RAID 存储器的吞吐量。
    :::
[⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#varl-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-slice_sync}[slice_sync]{.term}
:   ::: para
    该参数定义分配给每个发出同步 I/O
    请求的进程的时间片长度（以毫秒计算）。默认值为 `100`{.literal} ms。
    :::
:::
::: section
::: titlepage
### [⁠]{#chap-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Storage_and_File_Systems.html#sect-Red_Hat_Enterprise_Linux-Performance_Tuning_Guide-Tuning_the_cfq_scheduler-Tuning_cfq_for_fast_storage}5.3.5.1. 为快速存储调整 cfq {.title}
:::
::: para
不向无法遭受大搜寻 penalty（惩罚）的硬件推荐 `cfq`{.systemitem}
调度器，例如快速外部存储数列或者固态硬盘。如果您需要在此存储上使用
`cfq`{.systemitem} ，需要编辑下列配置文件：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}