$ sudo apt-get install trafshow 
```
为了使用 trafshow 来执行监控任务，我们需要在虚拟终端或 shell 中执行下面的命令：
```
$ sudo trafshow -i wlan2
```
![Trafshow](/data/attachment/album/201505/12/145303mzuagwzxwpwxg6ng.png)
为了专门监控 tcp 连接，如下面一样添加上 tcp 参数：
```
 $ sudo trafshow -i wlan2 tcp
```
![Trafshow tcp](/data/attachment/album/201505/12/145304hueslqebrlg5z15n.png)
注意： 请将上面的 wlan2 替换为你想使用的网络接口名称，假如你想通过扫描了解你的网络接口名称，可以在一个虚拟终端或 shell 中运行 `ip link show` 命令。
### 15) Vnstat
与大多数的其他工具相比，Vnstat 有一点不同。实际上它运行着一个后台服务或守护进程，并时刻记录着传输数据的大小。另外，它可以被用来生成一个网络使用历史记录的报告。
我们需要开启 EPEL 软件仓库，然后运行 **yum** 包管理器来安装 vnstat。
```
# yum install vnstat
```
Vnstat 在默认软件仓库中可以找到，所以我们可以使用下面的命令运行 **apt** 包管理器来安装它：
```
$ sudo apt-get install vnstat
```
不带有任何选项运行 vnstat 将简单地展示出从该守护进程运行后数据传输的总量。
```
$ vnstat
```
![vnstat](/data/attachment/album/201505/12/145304h9gd54rn8gnl89zn.png)
为了实时地监控带宽使用情况，使用 ‘-l’ 选项(live 模式)。然后它将以一种非常精确的方式来展示上行和下行数据所使用的带宽总量，但不会显示任何有关主机连接或进程的内部细节。
```
$ vnstat -l
```
![Vnstat 实时模式](/data/attachment/album/201505/12/145305dj4ghh43n4lb5elk.png)
完成了上面的步骤后，按 Ctrl-C 来停止，这将会得到如下类型的输出：
![Vnstat 实时结果](/data/attachment/album/201505/12/145305hqaj42j76jo8yssu.png)
### 16) tcptrack
[tcptrack](http://linux.die.net/man/1/tcptrack) 可以展示 TCP 连接的状态，它在一个给定的网络端口上进行监听。tcptrack 监控它们的状态并展示出排序且不断更新的列表，包括来源/目标地址、带宽使用情况等信息，这与 **top** 命令的输出非常类似 。
鉴于 tcptrack 在软件仓库中，我们可以轻松地在 Debian、Ubuntu 系统中从软件仓库使用 **apt** 包管理器来安装 tcptrack。为此，我们需要在 shell 或虚拟终端中执行下面的命令：
```
$ sudo apt-get install tcptrack
```
我们可以通过 yum 在 fedora 中安装它，因为它在 fedora 的默认软件仓库中。但若你运行着 CentOS 或 RHEL 系统，我们需要安装 [rpmforge 软件仓库](http://pkgs.org/centos-6/repoforge-x86_64/tcptrack-1.4.0-1.el6.rf.x86_64.rpm.html)。为此，我们需要运行下面的命令：
```
# wget http://apt.sw.be/redhat/el6/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm
# rpm -Uvh rpmforge-release*rpm
# yum install tcptrack
```
注：这里我们下载了 rpmforge-release 的当前最新版本，即 0.5.3-1，你总是可以从 rpmforge 软件仓库中下载其最新版本，并请在上面的命令中替换为你下载的版本。
**tcptrack** 需要以 root 权限或超级用户身份来运行。执行 tcptrack 时，我们需要带上要监视的网络接口 TCP 连接状况的接口名称。这里我们的接口名称为 wlan2，所以如下面这样使用：
```
sudo tcptrack -i wlan2
```
![tcptrack](/data/attachment/album/201505/12/145306itrpx4caaz9qx89w.png)
假如你想监控特定的端口，则使用：
```
# tcptrack -i wlan2 port 80
```
![tcptrack port 80](/data/attachment/album/201505/12/145306bwfbknz2kenblffy.png)
请替换上面的 80 为你想要监控的端口号。注意： 请将上面的 wlan2 替换为你想使用的网络接口名称，假如你想通过扫描了解你的网络接口名称，可以在一个虚拟终端或 shell 中运行 `ip link show` 命令。
### 17) CBM
CBM （ Color Bandwidth Meter） 可以展示出当前所有网络设备的流量使用情况。这个程序是如此的简单，以至于都可以从它的名称中看出其功能。CBM 的源代码和新版本可以在  上找到。
鉴于 CBM 已经包含在软件仓库中，我们可以简单地使用 **apt** 包管理器从 Debian、Ubuntu 的软件仓库中安装 CBM。为此，我们需要在一个 shell 窗口或虚拟终端中运行下面的命令：
```
$ sudo apt-get install cbm
```
我们只需使用下面展示的命令来在 shell 窗口或虚拟终端中运行 cbm：
```
$ cbm
```
![Color Bandwidth Meter](/data/attachment/album/201505/12/145307ht3e3tj4j5dp4ozm.png)
### 18) bmon
[Bmon](https://github.com/tgraf/bmon/) （ Bandwidth Monitoring） ，是一个用于调试和实时监控带宽的工具。这个工具能够检索各种输入模块的统计数据。它提供了多种输出方式，包括一个基于 curses 库的界面，轻量级的HTML输出，以及 ASCII 输出格式。
bmon 可以在软件仓库中找到，所以我们可以通过使用 apt 包管理器来在 Debian、Ubuntu 中安装它。为此，我们需要在一个 shell 窗口或虚拟终端中运行下面的命令：
```
$ sudo apt-get install bmon
```
我们可以使用下面的命令来运行 bmon 以监视我们的网络状态：
```
$ bmon
```
![bmon](/data/attachment/album/201505/12/145307p8u1u5gct8gcc9gg.png)
### 19) tcpdump
[TCPDump](http://www.tcpdump.org/) 是一个用于网络监控和数据获取的工具。它可以为我们节省很多的时间，并可用来调试网络或服务器的相关问题。它可以打印出在某个网络接口上与布尔表达式相匹配的数据包所包含的内容的一个描述。
tcpdump 可以在 Debian、Ubuntu 的默认软件仓库中找到，我们可以简单地以 sudo 权限使用 apt 包管理器来安装它。为此，我们需要在一个 shell 窗口或虚拟终端中运行下面的命令：
```
$ sudo apt -get install tcpdump
```
tcpdump 也可以在 Fedora、CentOS、RHEL 的软件仓库中找到。我们可以像下面一样通过 yum 包管理器来安装它：
```
# yum install tcpdump
```
tcpdump 需要以 root 权限或超级用户来运行，我们需要带上我们想要监控的 TCP 连接的网络接口名称来执行 tcpdump 。在这里，我们有 wlan2 这个网络接口，所以可以像下面这样使用：
```
$ sudo tcpdump -i wlan2
```
![tcpdump](/data/attachment/album/201505/12/145308ecg4ogw4k4jwylas.png)
假如你只想监视一个特定的端口，则可以运行下面的命令。下面是一个针对 80 端口(网络服务器)的例子：
```
$ sudo tcpdump -i wlan2 'port 80'
```
![tcpdump port](/data/attachment/album/201505/12/145309nyhosqpf4yafn23a.png)
### 20) ntopng
[ntopng](http://www.ntop.org/) 是 ntop 的下一代版本。它是一个用于展示网络使用情况的网络探头，在一定程度上它与 top 针对进程所做的工作类似。ntopng 基于 libpcap 并且它以可移植的方式被重写，以达到可以在每一个 Unix 平台 、 MacOSX 以及 Win32 上运行的目的。
为了在 Debian，Ubuntu 系统上安装 ntopng，首先我们需要安装 **编译 ntopng 所需的依赖软件包**。你可以通过在一个 shell 窗口或一个虚拟终端中运行下面的命令来安装它们：
```
$ sudo apt-get install libpcap-dev libglib2.0-dev libgeoip-dev redis-server wget libxml2-dev build-essential checkinstall
```
现在，我们需要像下面一样针对我们的系统手动编译 ntopng ：
```
$ sudo wget http://sourceforge.net/projects/ntop/files/ntopng/ntopng-1.1_6932.tgz/download
$ sudo tar zxfv ntopng-1.1_6932.tgz
$ sudo cd ntopng-1.1_6932
$ sudo ./configure
$ sudo make
$ sudo make install
```
这样，在你的 Debian 或 Ubuntu 系统上应该已经安装上了你编译的 ntopng 。
我们已经有了有关 ntopng 的使用方法的[教程](http://linoxide.com/monitoring-2/ntopng-network-monitoring-tool/)，它既可以在命令行也可以在 Web 界面中使用，我们可以前往这些教程来获得有关 ntopng 的知识。
### 结论
在这篇文章中，我们介绍了一些在 Linux 下的网络负载监控工具，这对于系统管理员甚至是新手来说，都是很有帮助的。在这篇文章中介绍的每一个工具都具有其特点，不同的选项等，但最终它们都可以帮助你来监控你的网络流量。
---
via: 
作者：[Bobbin Zachariah](http://linoxide.com/author/bobbin/) 译者：[FSSlc](https://github.com/FSSlc) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出