# Title: A Game of "Cut and Mouse": Bypassing Antivirus by Simulating User Inputs

## Authors:
- Ziya Alper Genç, University of Luxembourg
- Gabriele Lenzini, University of Luxembourg
- Daniele Sgandurra, Royal Holloway, University of London

## Abstract
To protect their digital assets from malware attacks, most users and companies rely on antivirus (AV) software. However, AVs are engaged in a continuous cat-and-mouse game with malware, which employs various techniques such as obfuscation, polymorphism, denial of service attacks, and malformed packets to circumvent AV defenses or cause them to crash. In response, AVs have implemented anomaly and behavioral detection, OS protection, and binary integrity checks. Malware, in turn, has developed countermeasures, including the use of adversarial inputs to evade detection.

This paper explores two novel attack vectors for malware. The first, called Ghost Control, involves simulating mouse events to control and disable AVs by sending them clicks to deactivate their protection. We demonstrate that many AVs can be disabled using this method. The second, Cut-and-Mouse, involves controlling high-integrity, whitelisted applications like Notepad by sending keyboard events (e.g., copy-and-paste) to perform malicious operations, such as rewriting the content of protected files. This can bypass the anti-ransomware protection features of some AVs. These attacks highlight critical vulnerabilities in current AV and anti-ransomware solutions.

## CCS Concepts
- Security and privacy → Malware and its mitigation

## Keywords
Antivirus, Ransomware, Evasion, Vulnerability, Simulated Inputs

## ACM Reference Format
Ziya Alper Genç, Gabriele Lenzini, and Daniele Sgandurra. 2019. A Game of “Cut and Mouse”: Bypassing Antivirus by Simulating User Inputs. In 2019 Annual Computer Security Applications Conference (ACSAC ’19), December 9–13, 2019, San Juan, PR, USA. ACM, New York, NY, USA, 10 pages. https://doi.org/10.1145/3359789.3359844

## Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

## Introduction
To protect IT assets, users and organizations are often advised to follow basic security practices, such as updating operating systems and applications, providing user training, and using firewalls. However, the primary recommendation is often to install an antivirus (AV) solution. AVs are widely trusted and are a fundamental part of the trusted computing base. Despite their effectiveness, AVs cannot detect all malware, and malware authors continuously develop new evasion techniques, leading to a cat-and-mouse game between AVs and malware.

In this context, we raise two questions:
1. Can an attacker use malware to send simulated mouse and keyboard events to deactivate AV functionalities?
2. Can an attacker control a trusted application, like Notepad, to perform malicious operations on behalf of the malware?

Our experiments show that many AVs can be easily disabled by simulating mouse clicks, and ransomware can bypass the Protected Folders feature of AVs by controlling Notepad. These findings highlight critical vulnerabilities in current AV and anti-ransomware solutions.

### Problem Statement
This paper identifies the following problems in current malware mitigation:
- **P-i**: Several AV programs contain a critical flaw that allows unauthorized agents to disable their protection features.
- **P-ii**: The Protected Folders solution provided by AV vendors suffers from design weaknesses, allowing malware to misuse whitelisted applications to change the contents of protected files.

### Ethical Issues and Responsible Disclosure
This research adheres to ethical guidelines and responsible disclosure practices. We do not disclose the names of AV companies or share any exploitable code. We have informed affected AV companies about our findings and followed responsible disclosure practices.

## Background
### Ransomware Defense in AVs
In response to the rise of ransomware, AV vendors have developed dedicated detection modules. These modules are primarily based on whitelists, which are maintained by AV vendors and can be customized by users. Microsoft's Controlled Folder Access, integrated into Windows Defender, controls which applications can access protected folders. Trusted applications are those with write access to these folders, either by default or added by the user.

### Process Protection via Integrity Levels
Windows OS uses Mandatory Integrity Control (MIC) to assign an Integrity Level (IL) to each process, indicating its privilege level. MIC defines four ILs: Low, Medium, High, and System. When a process attempts to interact with another, MIC checks the ILs and prevents interactions if the target has a higher IL. User Interface Privilege Isolation (UIPI) complements MIC by blocking window messages from processes with lower ILs.

## Threat Model
We assume the system is protected by the latest AVs and OS anti-ransomware features. The attacker gains access to a Windows system with user privileges, either by tricking the user or exploiting a vulnerability. Once inside, the attacker drops malware, which is blocked by the AV. Our focus is on how attackers can bypass AV and anti-ransomware protections.

### Attack Vectors
- **Cut-and-Mouse**: Bypassing the protected folder feature to encrypt files.
- **Ghost Control**: Disabling AVs' real-time protection.

## Encrypting Protected Folders
### Disharmony Between UIPI and AVs
Anti-ransomware modules grant write access only to trusted applications. However, we discovered two entry points for attacks:
- **E-i**: UIPI is unaware of trusted applications and does not enforce policies.
- **E-ii**: AVs do not monitor synthesized clicks or key press events flowing into trusted applications.

These entry points form a vulnerability that allows malware to control trusted applications and perform malicious operations, such as encrypting inaccessible protected files.

## Conclusion
This paper highlights critical vulnerabilities in current AV and anti-ransomware solutions. By simulating user inputs, malware can bypass these protections, emphasizing the need for more robust authentication and monitoring mechanisms.