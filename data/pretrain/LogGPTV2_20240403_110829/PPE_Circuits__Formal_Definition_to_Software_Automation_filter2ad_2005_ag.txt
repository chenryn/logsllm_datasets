Management Service. In CCS. 63–78.
[11] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Francois Dupressoir, Ben-
jamin Grégoire, Vincent Laporte, and Vitor Pereira. 2017. A Fast and Verified
Software Stack for Secure Function Evaluation. In CCS 2017.
[12] José Bacelar Almeida, Cecile Baritel-Ruet, Manuel Barbosa, Gilles Barthe, Francois
Dupressoir, Benjamin Grégoire, Vincent Laporte, Tiago Oliveira, Alley Stoughton,
and Pierre-Yves Strub. 2019. Machine-Checked Proofs for Cryptographic Stan-
dards: Indifferentiability of Sponge and Secure High-Assurance Implementations
of SHA-3. In CCS. 1607–1622.
[13] Miguel Ambrona, Gilles Barthe, Romain Gay, and Hoeteck Wee. 2017. Attribute-
Based Encryption in the Generic Group Model: Automated Proofs and New
Constructions. In Proceedings of the 2017 ACM SIGSAC Conference on Computer
and Communications Security. ACM, 647–664.
[14] Miguel Ambrona, Gilles Barthe, and Benedikt Schmidt. 2016. Automated Un-
bounded Analysis of Cryptographic Constructions in the Generic Group Model.
In Advances in Cryptology - EUROCRYPT. Springer, 822–851.
[15] Manuel Barbosa, Gilles Barthe, Karthik Bhargavan, Bruno Blanchet, Cas Cre-
mers, Kevin Liao, and Bryan Parno. 2019. SoK: Computer-Aided Cryptography.
Cryptology ePrint Archive, Report 2019/1393. https://eprint.iacr.org/2019/1393.
[16] Gilles Barthe, Juan Manuel Crespo, Yassine Lakhnech, and Benedikt Schmidt. 2015.
Mind the Gap: Modular Machine-Checked Proofs of One-Round Key Exchange
Protocols. In Advances in Cryptology - EUROCRYPT. Springer, 689–718.
[17] Gilles Barthe, Francois Dupressoir, Benjamin Gregoire, Alley Stoughton, and
Pierre-Yves Strub. 2018. EasyCrypt: Computer-Aided Cryptographic Proofs.
https://www.easycrypt.info/trac/.
[18] Gilles Barthe, Edvard Fagerholm, Dario Fiore, John C. Mitchell, Andre Scedrov,
and Benedikt Schmidt. 2014. Automated Analysis of Cryptographic Assumptions
in Generic Group Models. In Advances in Cryptology - CRYPTO. Springer, 95–112.
Session 2B: Applied Cryptography CCS '20, November 9–13, 2020, Virtual Event, USA402[19] Gilles Barthe, Edvard Fagerholm, Dario Fiore, Andre Scedrov, Benedikt Schmidt,
and Mehdi Tibouchi. 2015. Strongly-Optimal Structure Preserving Signatures
from Type II Pairings: Synthesis and Lower Bounds. In Public-Key Cryptography
- PKC 2015. 355–376.
[20] Gilles Barthe, Xiong Fan, Joshua Gancher, Benjamin Grégoire, Charlie Jacomme,
and Elaine Shi. 2018. Symbolic Proofs for Lattice-Based Cryptography. In Pro-
ceedings of the 2018 ACM SIGSAC Conference on Computer and Communications
Security, CCS. ACM, 538–555.
[21] Gilles Barthe, Benjamin Grégoire, and Santiago Zanella Béguelin. 2009. Formal
certification of code-based cryptographic proofs. In Proceedings of the 36th ACM
SIGPLAN-SIGACT Symposium on Principles of Programming Languages. ACM,
90–101.
[22] Gilles Barthe, Benjamin Grégoire, and Benedikt Schmidt. 2015. Automated
Proofs of Pairing-Based Cryptography. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Security. ACM, 1156–1168.
[23] Mihir Bellare, Viet Tung Hoang, and Phillip Rogaway. 2012. Foundations of
garbled circuits. In the ACM Conference on Computer and Communications Security.
784–796.
[24] Mihir Bellare, Eike Kiltz, Chris Peikert, and Brent Waters. 2012. Identity-Based
(Lossy) Trapdoor Functions and Applications. In EUROCRYPT.
[25] Bruno Blanchet. 2006. A Computationally Sound Mechanized Prover for Security
Protocols. In 2006 IEEE Symposium on Security and Privacy. IEEE Computer
Society, 140–154.
[26] Dan Boneh and Xavier Boyen. 2004. Efficient Selective-ID Secure Identity-Based
Encryption Without Random Oracles. In Advances in Cryptology - EUROCRYPT.
Springer, 223–238.
[27] Dan Boneh, Xavier Boyen, and Eu-Jin Goh. 2005. Hierarchical Identity Based En-
cryption with Constant Size Ciphertext. In Advances in Cryptology - EUROCRYPT
2005. 440–456.
[28] Dan Boneh and Matthew K. Franklin. 2001. Identity-Based Encryption from the
Weil Pairing. In Advances in Cryptology - CRYPTO. Springer, 213–229.
Weil Pairing. In ASIACRYPT. Springer, 514–532.
[30] Xavier Boyen and Brent Waters. 2006. Anonymous Hierarchical Identity-Based
Encryption (Without Random Oracles). In Advances in Cryptology - CRYPTO.
Springer, 290–307.
[31] Xavier Boyen and Brent Waters. 2006. Compact Group Signatures Without
[29] Dan Boneh, Ben Lynn, and Hovav Shacham. 2001. Short Signatures from the
Random Oracles. In Advances in Cryptology - EUROCRYPT 2006. 427–444.
[32] Jan Camenisch and Anna Lysyanskaya. 2004. Signature Schemes and Anonymous
Credentials from Bilinear Maps. In Advances in Cryptology - CRYPTO. Springer,
56–72.
[33] Ran Canetti, Alley Stoughton, and Mayank Varia. 2019. EasyUC: Using EasyCrypt
to Mechanize Proofs of Universally Composable Security. In IEEE Computer
Security Foundations Symposium, CSF 2019.
[34] Yevgeniy Dodis. 2003. Efficient Construction of (Distributed) Verifiable Random
Functions. In Public Key Cryptography - PKC. Springer, 1–17.
[35] Yevgeniy Dodis and Aleksandr Yampolskiy. 2005. A Verifiable Random Function
with Short Proofs and Keys. In Proceedings of the 8th International Conference on
Theory and Practice in Public Key Cryptography (PKC’05).
[36] Sanjam Garg, Craig Gentry, Shai Halevi, Amit Sahai, and Brent Waters. 2013.
Attribute-Based Encryption for Circuits from Multilinear Maps. Cryptology
ePrint Archive, Report 2013/128. http://eprint.iacr.org/.
[37] Craig Gentry. 2006. Practical Identity-Based Encryption Without Random Oracles.
[38] Craig Gentry and Alice Silverberg. 2002. Hierarchical ID-Based Cryptography.
[39] Vipul Goyal. 2007. Reducing Trust in the PKG in Identity Based Cryptosystems.
In Advances in Cryptology - EUROCRYPT. Springer, 445–464.
In Advances in Cryptology - ASIACRYPT. Springer, 548–566.
In Advances in Cryptology - CRYPTO. Springer, 430–447.
[40] Vipul Goyal, Steve Lu, Amit Sahai, and Brent Waters. 2008. Black-box accountable
authority identity-based encryption. In Proceedings of the 2008 ACM Conference
on Computer and Communications Security. ACM, 427–436.
[41] Matthew Green and Susan Hohenberger. 2007. Blind Identity-Based Encryption
and Simulatable Oblivious Transfer. In Advances in Cryptology - ASIACRYPT.
Springer, 265–282.
[42] Jens Groth and Amit Sahai. 2008. Efficient non-interactive proof systems for
bilinear groups. In EUROCRYPT. Springer, 415–432.
[43] Helene Haagh, Aleksandr Karbyshev, Sabine Oechsner, Bas Spitters, and Pierre-
Yves Strub. 2018. Computer-Aided Proofs for Multiparty Computation with
Active Security. In IEEE Computer Security Foundations Symposium, CSF 2018.
[44] Viet Tung Hoang, Jonathan Katz, and Alex J. Malozemoff. 2015. Automated
Analysis and Synthesis of Authenticated Encryption Schemes. In Proceedings of
the 22nd ACM SIGSAC Conference on Computer and Communications Security.
ACM, 84–95.
[45] Susan Hohenberger and Satyanarayana Vusirikala. 2019. Are These Pairing
Elements Correct? Automated Verification and Applications. In ACM Conference
on Computer and Communications Security.
[46] Tibor Jager. 2015. Verifiable Random Functions from Weaker Assumptions. In
Theory of Cryptography - 12th Theory of Cryptography Conference, TCC. Springer,
121–143.
[47] Anna Lysyanskaya. 2002. Unique Signatures and Verifiable Random Functions
from the DH-DDH Separation. In Advances in Cryptology - CRYPTO. Springer,
597–612.
[48] Alex J. Malozemoff, Jonathan Katz, and Matthew D. Green. 2014. Automated Anal-
ysis and Synthesis of Block-Cipher Modes of Operation. In IEEE 27th Computer
Security Foundations Symposium. IEEE Computer Society, 140–152.
[49] Roberto Metere and Changyu Dong. 2017. Automated Cryptographic Analysis
of the Pedersen Commitment Scheme. In MMM-ACNS 2017.
[50] David Naccache. 2005. Secure and Practical Identity-Based Encryption. IACR
Cryptology ePrint Archive (2005). http://eprint.iacr.org/2005/369
[51] Yannis Rouselakis and Brent Waters. 2013. Practical constructions and new proof
methods for large universe attribute-based encryption. In 2013 ACM SIGSAC
Conference on Computer and Communications Security, CCS. ACM, 463–474.
[52] Brent Waters. 2005. Efficient Identity-Based Encryption Without Random Oracles.
In EUROCRYPT. Springer, 114–127.
HIBE under Simple Assumptions. In CRYPTO. Springer, 619–636.
HIBE under Simple Assumptions. In CRYPTO. Springer, 619–636.
[54] Brent Waters. 2009. Dual System Encryption: Realizing Fully Secure IBE and
[53] Brent Waters. 2009. Dual System Encryption: Realizing Fully Secure IBE and
A SHORTHAND NOTATIONS FOR CIRCUITS
(CONT’D FROM SECTION 3.1)
In this section, we provide formal definitions for the shorthand
notations introduced in Section 3.1.
• MakeCircuit(G, m, α , P): Given group structure G, number
of inputs m, group identifiers α, and a PPE P, the function
outputs a PPE circuit C = (G, m, α , N , Gates, out, GateType, A, B),
where N = 1, Gates = {m + 1}, out = m + 1, GateType(m +
1) = (PPE, P), A = ∅, B = ∅.
• Cacc: We use the notation Cacc to denote the circuit
MakeCircuit(G, m, α , P), where P is an always accepting
PPE (for example, д1 = д1).
The formal definitions of the notations(C1 AND C2) and(C1 OR C2)
are a little tricky as both C1 and C2 might share the same gate
names. Henceforth, we first define the notation Shift(C, k) which
renames the gates of a circuit C by an offset integer k. We then
define (C1 AND C2), for example, by first shifting the gate names of
C2 by some offset k and then ANDing output wires of the circuits
C1 and Shift(C2, k). Note that the input wires will remain the same.
• Shift(C, k) : Given a circuit C = (G, m, α , N , Gates, out,
GateType, A, B) and integer k ≥ 1, the function Shift(C, k)
outputs a circuit C′ obtained by shifting the gate names
Gates by an offset k i.e., C′ = (G, m, α , N , Gates′, out′,
GateType′, A′, B′), where Gates′ = {д + k : д ∈ Gates},
out′ = out +k, GateType′(д +k) = GateType(д), A′(д +k) =
A(д) and B′(д + k) = B(д), whenever A(д), B(д) are defined.
Note: Shift(C, k) still has {1, 2,· · · , m} as the input wires.
• C1 OP C2 (where OP ∈ {AND, OR}): Given circuits C1 =
(G, m, α , N1, Gates1, out1, GateType1, A1, B1) and C2 = (G,
m, α , N2, Gates2, out2, GateType2, A2, B2), let k be the small-
est integer not in Gates1. Let C′
2 = Shift(C2, k) = (G, m, α ,
N2, Gates′
2, A′
2, B′
2). The circuit C1 OP C2
is given by (G, m, α , N1 + N2 +1, Gates, out, GateType, A, B),
where out is the smallest integer not in Gates1 ∪ Gates′
2, the
set Gates = Gates1 ∪ Gates′
2, GateType′
2, out′
GateType(д) =
GateType1(д)
GateType′
OP
2 ∪ {out}, the functions
if д ∈ Gates1
if д ∈ Gates′
2
if д = out
2(д)
Session 2B: Applied Cryptography CCS '20, November 9–13, 2020, Virtual Event, USA403A(д) =
B(д) =
if д ∈ Gates1
if д ∈ Gates′
2
if д = out
if д ∈ Gates1
if д ∈ Gates′
2
if д = out
B′
2(д)
out′
2
A′
2(д)
out1
A1(д)
B1(д)
(cid:40)
(cid:40)
with respect to the circuit C′. However, since C ∧ C′ is satisfied by
this challenge F, then C′ is satisfied as well. This contradicts the
original assumption that C′ was a testing circuit for Π′.
C CORRECTNESS OF RULE 2
We prove the correctness of Rule 2 (Lemma 4.3). This proof is
adapted from the proof of Rule 2 in [45].
Proof. We observe that every PPE challenge for Π is also a
challenge for Π′, as they all share the same group structure, the
number of elements of m, and the group indicator vector α. We
first show that every YES challenge for Π is an YES challenge for
Π′, and similarly every NO challenge for Π is a NO challenge for
Π′. This implies that every testing circuit C′ for Π′ is also a testing
circuit for Π.
The PPE problems Π and Π′ differ only in Trusted set, where the
Π′ set has the additional element {k}. As the definition of an YES
challenge has no dependence on Trusted set, each YES challenge
for Π is also an YES challenge for Π′ and vice versa.
We now argue that any NO challenge for Π is also a NO challenge
for Π′. Consider any NO challenge F for the PPE problem Π. By
definition, F is not a YES challenge for Π (or, by the above, for
Π′), and there exists an assignment of u∗ ∈ Zn
p such that Fi =
fi(u∗)
д
αi
fk(u∗)
. Since Rule2(Π, j, k) (cid:44)⊥, we
We want to show that Fk = д
αk
know that the polynomial fk was of the form c · ud
+ h, according
to the constraints of Rule2 i.e., the variable uj is not used in any
Trusted polynomials. Thus, for this setting of Fk in the challenge
F, there exists only one setting of the variable uj ∈ Zp that is
consistent with Fk being derived via the polynomial fk and the
settings of ui ∈ u∗. Let Fk = дy for some y ∈ Zp. Then let
∀i ∈ Trusted.
j
(cid:16)y − h
c
uj =
mod p
(cid:17)1/d mod (p−1)
.
There is a unique solution to the above since d is relatively prime
to p − 1. Thus, for setting of variables u∗ ∈ Zn
substituted
∀i ∈ (Trusted ∪ {k}). Therefore F
fi(u∗)
with uj, it holds that Fi = д
αi
is a NO challenge for Π′.
p with u∗
j
D CORRECTNESS OF RULE 3
In this section, we prove the correctness of Rule 3 (Lemma 4.3).
Proof. We observe that every challenge for Π is also a challenge
for Π′ and Π′′, as they all share same group structure, the number
of elements of m, and the group indicator vector α. Consider any
testing circuits C′, C′′ for Π′, Π′′ respectively and any PPE chal-
lenge F = (F1, F2,· · · Fm). We prove that if F is a YES challenge
for Π, then it satisfies circuit Z defined above, and if F is a NO
challenge for Π, it does not satisfy the circuit Z. We organize the
proof into four cases.
Case 1 (F is an YES challenge for Π & doesn’t satisfy IsIdentity): In
this case, by definition, there exists an assignment of variables v
• NOT C : Given a circuit C = (G, m, α , N , Gates, out, GateType, A, B),
we use the notation NOT C to denote the circuit(G, m, α , N +
1, Gates′, out′, GateType′, A′, B′), where out′ is the smallest
integer not in Gates, the set Gates′ = Gates ∪ {out′}, func-
tions
if д ∈ Gates
if д = out′