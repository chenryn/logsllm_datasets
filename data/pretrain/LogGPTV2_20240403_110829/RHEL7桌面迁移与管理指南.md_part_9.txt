::: para
用户可以通过为每个字体别名选择一个自定义字体，来覆盖系统默认字体。
:::
::: para
[**Fonts Tweak Tool**]{.application}
可能没有默认安装在系统中，运行以下命令以安装此程序：
:::
``` screen
# yum install fonts-tweak-tool
```
::: figure
[⁠]{#default-appearance.html#fig-fonts-alias}
::: figure-contents
::: mediaobject
![使用字体调整工具配置字体别名](images/fonts-alias.png)
:::
:::
**图 10.2. 使用字体调整工具配置字体别名**
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#default-appearance.html#configure-font-aliases-steps}
**过程 10.17. 配置字体别名**
1.  ::: para
    按 [**Super**]{.keycap} 键进入"`活动概览`{.systemitem}"来启动
    [**Fonts Tweak Tool**]{.application}，键入
    **`Fonts Tweak Tool`**，然后按 [**Enter**]{.keycap} 键。
    :::
2.  ::: para
    单击 "[**字体别名**]{.guilabel}" 选项卡。
    :::
3.  ::: para
    单击左窗格左下角的 "[**+**]{.guibutton}"
    按钮，选择或者输入您想要配置字体别名的区域名称，然后单击
    "[**添加**]{.guibutton}"。
    :::
    ::: para
    除了使用过的区域，从区域列表中选择默认来配置默认字体别名。
    :::
4.  ::: para
    在右侧窗格中选定您想要用来覆盖系统默认设置的字体别名，然后选择下拉列表中的自定义字体。
    :::
5.  ::: para
    单击"[**关闭**]{.guibutton}"。
    :::
:::
::: para
现在，您已经覆盖了系统默认的别名，并选择了一个自定义字体。
:::
:::
::: section
::: titlepage
## [⁠]{#default-appearance.html#change-language-order}10.7.5. 多语言顺序 {.title}
:::
::: para
[**字体调整工具（Fonts Tweak Tool）**]{.application}
允许在用户界面上配置了多种语言的用户，改变应用程序中显示的语言顺序。这个特征尤其适用于使用以拉丁语字体为基础和以非拉丁语字体为基础的用户，以及那些不想用非拉丁语为基础字体显示拉丁文字的用户。
:::
::: para
打个比方，如果您配置的语言是日文和中文，您想避免用非拉丁语为基础的日文字体来显示英语拉丁文字的话，将英文设置成主要语言，日文设置成次要语言。随后，拉丁语为基础的字体会用来显示英文字符，而以非拉丁语为基础的字体则会用来显示日文字符。
:::
::: para
[**Fonts Tweak Tool**]{.application}
可能没有默认安装到系统中，运行以下命令进行安装：
:::
``` screen
# yum install fonts-tweak-tool
```
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#default-appearance.html#change-language-order-steps}
**过程 10.18. 配置多种语言**
1.  ::: para
    按 [**Super**]{.keycap} 键进入"`活动概览`{.systemitem}"来启动
    [**Fonts Tweak Tool**]{.application}，键入
    **`Fonts Tweak Tool`**，然后按 [**Enter**]{.keycap} 键。
    :::
2.  ::: para
    单击 "[**Language Ordering**]{.guilabel}" 选项卡。
    :::
3.  ::: para
    单击窗口左下方的 "[**+**]{.guibutton}"
    按钮，选择或者键入您想要配置成主要语言的语言名称，然后点击
    "[**添加**]{.guibutton}"。
    :::
4.  ::: para
    单击窗口左下方的 "[**+**]{.guibutton}"
    按钮，选择您想要配置成次要语言的语言名称，然后点击 "[
    **添加**]{.guibutton}" 来添加其他语言。
    :::
    ::: para
    重复此项操作以增加更多语言。
    :::
5.  ::: para
    点击 "[**关闭**]{.guibutton}"。
    :::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
您已在用户界面上将语言偏好顺序设置成应用程序中语言显示的顺序。
:::
::: para
当配置了多个语言时，一些应用程序（比如 [**xterm**]{.application}
和其它"`Xft`{.systemitem}"应用程序）可能不会准确显示用户语言的所有字符。这是因为这些应用程序，或者应用程序所使用的渲染库无法支持备用字体。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#default-appearance.html#configure-font-properties}10.7.6. 配置字体属性 {.title}
:::
::: para
[**Fonts Tweak Tool**]{.application}
允许用户更改多个字体属性，并为每个用户配置精细的字体。
:::
::: para
[**Fonts Tweak Tool**]{.application}
可能没有默认安装在系统中，运行以下命令进行安装：
:::
``` screen
# yum install fonts-tweak-tool
```
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#default-appearance.html#configure-font-properties-steps}
**过程 10.19. 更改字体属性**
1.  ::: para
    按 [**Super**]{.keycap} 键进入"`活动概览`{.systemitem}"来启动
    [**Fonts Tweak Tool**]{.application}，键入
    **`Fonts Tweak Tool`**，然后按 [**Enter**]{.keycap} 键。
    :::
2.  ::: para
    点击 "[**字体属性**]{.guilabel}" 选项卡。
    :::
3.  ::: para
    单击窗口左下方的 "[**+**]{.guibutton}"
    按钮，选择或者键入您想要更改属性的字体名称，然后单击
    "[**添加**]{.guibutton}"。
    :::
    ::: para
    重复此项操作来增加更多字体。
    :::
4.  ::: para
    根据需要更改字体属性。
    :::
5.  ::: para
    单击 "[**关闭**]{.guibutton}"。
    :::
:::
::: para
根据增加的字体，用户可以在 "[**字体属性**]{.guilabel}"
选项卡中配置的一些字体属性包括：
:::
::: variablelist
[如果可以的话，使用植入式位图。]{.term}
:   ::: para
    这对喜欢点阵字体多于外框字体的用户来说很适用。添加一个合适的字体并单击
    "[**Use embedded bitmap font if any**]{.guilabel}"
    来使用植入式点阵字体。
    :::
[使用 JIS X 2013:2004 字形。]{.term}
:   ::: para
    使用 JIS X 2013:2004 标准的日文字形，而不是 JIS X 2013:2000
    或者更老的版本，添加支持 JIS X 2013:2004 的字体，然后单击
    "[**特性**]{.guilabel}" 列表中的 "[**jp04**]{.guimenuitem}"。
    :::
:::
:::
:::
:::
[]{#GNOME-shell-extensions.html}
::: chapter
::: titlepage
# [⁠]{#GNOME-shell-extensions.html#GNOME-shell-extensions}第 11 章 GNOME Shell 扩展 {.title}
:::
::: para
本章将介绍 GNOME Shell
扩展的系统范围配置。您将了解到如何查看这些扩展、如何激活这些扩展、如何锁定启用扩展列表，或者如何给系统用户设置一些强制的扩展。
:::
::: para
在配置 GNOME Shell 扩展时，您将使用"`dconf`{.systemitem}"设置以下两个
GSetting 键值：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `org.gnome.shell.enabled-extensions`{.code}
    :::
-   ::: para
    `org.gnome.shell.development-tools`{.code}
    :::
:::
::: para
更多有关"`dconf`{.systemitem}"和 [**GSettings**]{.application}
的信息，请参见〈[第 9 章 *用 GSettings 和 dconf
来配置桌面*](#configuration-overview-gsettings-dconf.html){.xref}〉。
:::
::: section
::: titlepage
# [⁠]{#GNOME-shell-extensions.html#extensions}11.1.  GNOME Shell 扩展是什么？ {.title}
:::
::: para
GNOME Shell 扩展允许自定义 GNOME Shell
默认用户界面及其某些部分，比如窗口管理和应用程序启动。
:::
::: para
每一个 GNOME Shell 扩展都是由唯一标识符 uuid 来进行识别的。uuid
同时也用来命名扩展安装的目录名称。您可以在
`~/.local/share/gnome-shell/extensions/uuid`{.filename}
中为每一个用户安装扩展，或者在
`/usr/share/gnome-shell/extensions/uuid`{.filename}
中进行计算机范围的安装。
:::
::: para
uuid 标示符（通用唯一标识符）是全局唯一标识符。请记住，在选定uuid
标示符时，它必须包含以下属性从而预防某些攻击：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    您的通用唯一标识符必须不包含 Unicode 字符。
    :::
-   ::: para
    您的通用唯一标识符必须不包含以 gnome.org
    结尾的字串，因为它不能附属于 GNOME 项目。
    :::
-   ::: para
    您的通用唯一标识符必须只包含字母数字字符与下列符号：句号（.）、at
    符号（@），和下划线（\_）。
    :::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
在红帽企业版 Linux 中配置第三方 GNOME Shell
扩展之前，确保您已阅读过以下文件，以了解红帽对第三方软件的支持策略：
:::
::: itemizedlist
-   ::: para
    [How does Red Hat Global Support Services handle third-party
    software, drivers, and/or uncertified
    hardware/hypervisors?](https://access.redhat.com/site/articles/1067)
    :::
:::
:::
:::
::: para
您可以使用 GNOME Shell 的集成调试器和检查器工具 [**Looking
Glass**]{.application} 查看已安装的扩展。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#GNOME-shell-extensions.html#idm139838601035456}
**过程 11.1. 查看已安装的扩展**
1.  ::: para
    按 [**Alt**]{.keycap}+[**F2**]{.keycap} 键。
    :::
2.  ::: para
    键入 **`lg`**，然后按 [**Enter**]{.keycap} 键，来打开 [**Looking
    Glass**]{.application}。
    :::
3.  ::: para
    在 [**Looking Glass**]{.application} 的顶部菜单栏中，点击
    "[**扩展**]{.guibutton}"，来打开已安装的扩展列表。
    :::
:::
::: figure
[⁠]{#GNOME-shell-extensions.html#fig-extensions}
::: figure-contents
::: mediaobject
![通过 Looking Glass
来查看已安装的扩展](images/extensions-screenshot.png)
:::
:::
**图 11.1. 通过 Looking Glass 来查看已安装的扩展**
:::
:::
::: section
::: titlepage
# [⁠]{#GNOME-shell-extensions.html#extensions-enable}11.2. 启用计算机范围的扩展程序 {.title}
:::
::: para
如需使所有用户能够使用该系统上的扩展程序，请将扩展程序安装在
`/usr/share/gnome-shell/extensions`{.filename}
目录下。注意新安装的计算机范围的扩展程序是默认不启用的。为了使所有用户可以启用扩展程序，您需要设置
`org.gnome.shell.enabled-extenstions`{.code} 的键值。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#GNOME-shell-extensions.html#idm139838623819136}
**过程 11.2. 启用计算机范围的扩展程序**
1.  ::: para
    在 `/etc/dconf/db/local.d/00-extensions`{.filename}
    中创建一个用于计算机范围设置的 `local`{.code} 数据库文件。
    :::
    ``` programlisting
    [org/gnome/shell]
    # List all extensions that you want to have enabled for all users
    enabled-extensions=['PI:EMAIL', 'PI:EMAIL']
    ```
    ::: para
    `enabled-extensions`{.code} 的键值通过扩展程序的 uuid
    规定了被启用的扩展程序。（*PI:EMAIL* 和
    *PI:EMAIL*）
    :::
2.  ::: para
    更新系统数据库：
    :::
    ``` screen
    # dconf update
    ```
:::
:::
::: section
::: titlepage
# [⁠]{#GNOME-shell-extensions.html#extensions-lockdown}11.3. 锁定被启用的应用程序 {.title}
:::
::: para
在 GNOME Shell 系统中，您可以通过锁定
`org.gnome.shell.enabled-extensions`{.code} 和
`org.gnome.shell.development-tools`{.code}
的键值来阻止用户启用或停用扩展程序。
:::
::: para
锁定 `org.gnome.shell.development-tools`{.code} 的键值可以确保用户无法用
GNOME Shell 的内置调试器和检查工具（[**Looking
Glass**]{.application}）停用任何强制性的扩展程序。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#GNOME-shell-extensions.html#idm139838588956032}
**过程 11.3. 锁定被启用的应用程序**