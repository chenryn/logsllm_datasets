# Quantum Classification of Malware

**Author:** John Seymour (PI: EMAIL)  
**Date:** 2015-08-09

## About the Author
- Ph.D. student at the University of Maryland, Baltimore County (UMBC)
- Actively researching information security for approximately three years (primarily academic)
- Currently employed at CyberPoint International

## Outline
1. D-Wave Basics
2. The D-Wave Controversy
3. How to Use a D-Wave
4. Machine Learning Background
5. Building a "Quantum" Malware Classifier

## Introduction
[Link to Kaspersky Blog Post](https://blog.kaspersky.com/quantum-computers-and-the-end-of-security/)

### Common Misconceptions
- **False:** The D-Wave can solve NP-Complete problems in polynomial time.
- **Probably False:** The current D-Wave chip is already "better" than classical computing for hard problems.

## Current State of D-Wave
- Quantum effects are present, but their computational significance is uncertain.
- It is unclear whether the D-Wave uses quantum effects for computation.
- The D-Wave cannot run Shor's, Grover's, or Quantum Key Distribution (QKD) algorithms.

## D-Wave Hardware
- **Components:**
  - Magnetized niobium loops
  - Couplers
- **References:**
  - [D-Wave Systems](http://www.dwavesys.com/)
  - [New York Times Article](http://www.nytimes.com/)

## D-Wave QUBO
- **Quadratic Unconstrained Binary Optimization (QUBO):**
  \[
  \sum_{i} a_i q_i + \sum_{i,j} a_{ij} q_i q_j
  \]
- **Input and Output:**
  - Input: Problem definition
  - Output: Solution to the QUBO problem

## Blackbox/QSage
- **Software:**
  - Developed by D-Wave
  - Converts arbitrary problems into QUBOs
  - Heuristic-based (problem is NP-Complete)
  - Facilitates interaction between classical machines and the D-Wave
  - Adds network latency time

## D-Wave Applications
- **Claimed Applications:**
  - Classification
  - Protein-folding models
  - Finding close-to-optimal solutions to NP-Complete problems (e.g., Traveling Salesman Problem)

## Machine Learning Overview
- **Boosting:**
  - Combines weak classifiers to form a strong classifier
  - Example: Three classifiers with 70% accuracy
    - Majority vote increases accuracy to 0.7838
    - Boosting algorithms often use weighted classifiers
  - **Reference:**
    - [Kaggle Ensembling Guide](http://mlwave.com/kaggle-ensembling-guide/)

- **Loss Function:**
  - Minimizes:
    - Number of misclassifications
    - Complexity of the model

- **N-Grams:**
  - Sliding window over text
  - Easy to generate and effective in malware classification
  - Used to create weak classifiers

## Building the "Quantum" Malware Classifier
- **QBoost:**
  - Outperforms AdaBoost
  - Robust to label noise
  - Scales poorly to large datasets
  - **Blackbox:** Can handle larger problems

- **Dataset:**
  - **Malicious Data:**
    - Vx Heaven, VirusShare, web scraping
    - Used Vx Heaven (standard but old)
  - **Benign Data:**
    - No standard dataset
    - Windows + Cygwin + Sourceforge (not recommended)
    - No adware used

- **Preprocessing:**
  - Resampled corpus to balance classes
  - Extracted 3-gram byte features

- **Training:**
  - Initial classifier performance was no better than random chance
  - Pilot experiment to determine optimal training time
  - Limited to 32 features (16 malware and 16 benign n-grams)
  - Implemented QBoost with 10-fold cross-validation using Blackbox
  - Compared to WEKA models (AdaBoost, J48 Decision Tree, Random Forest)

## Results
- **Key Findings:**
  - Training takes a significant amount of time
  - Simulator outperformed the actual D-Wave chip
  - Blackbox/D-Wave can learn a classifier, but with substantial overhead
  - General problem-solving on D-Wave is not advisable
  - Future improvements: Better feature preprocessing, embedding directly onto the chip

## Conclusion
- **Summary:**
  - D-Wave and Blackbox can be used for classification, but with limitations
  - Further research needed to understand the potential and limitations of quantum computing in malware analysis

## References
- **Original Thesis:**
  - J. Seymour. Quantum classification of malware.
- **Dataset Preparation:**
  - J. Seymour and C. Nicholas. Overgeneralization in feature set selection for classification of malware.
- **QBoost:**
  - V. S. Denchev. Binary classification with adiabatic quantum optimization.
- **Qloss:**
  - V. S. Denchev. Robust classification with adiabatic quantum optimization.
- **Tutorial:**
  - [Binary Classification Using D-Wave](https://web.archive.org/web/20130927155053/http://www.dwavesys.com/en/dev-tutorial-qbc.html).
- **Evaluating Blackbox:**
  - C. C. McGeoch and C. Wang. Experimental evaluation of an adiabatic quantum system for combinatorial optimization.

## Questions?
- Contact: PI:EMAIL, @jjseymour3

---

Thank you!