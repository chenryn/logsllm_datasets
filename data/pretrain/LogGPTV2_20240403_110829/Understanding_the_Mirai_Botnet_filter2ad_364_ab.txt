### Mirai Botnet Operation and Analysis

#### 1. Mirai Operation
Upon infection, Mirai-infected devices disable outward-facing services (e.g., HTTP) to prevent scanning by security systems. Censys scans, which are used to detect such infections, often take more than 24 hours to complete. 

**Figure 2: Mirai Operation**
- **Scanning**: Mirai bots scan the IPv4 address space for devices running telnet or SSH.
- **Infection**: They attempt to log in using a hardcoded dictionary of IoT credentials. Once successful, the bot sends the victim's IP address and associated credentials to a report server.
- **Loader**: The report server asynchronously triggers a loader to infect the device.
- **Propagation and DDoS**: Infected hosts continue to scan for additional victims and accept DDoS commands from a command and control (C2) server.

Infected devices listen for attack commands from the C2 server while simultaneously scanning for new victims.

#### 2. Malware Phylogeny
Although not directly related to our study, the Mirai family represents an evolution of BASHLITE (also known as LizardStresser, Torlus, Gafgyt), a DDoS malware that infected Linux devices by brute-forcing default credentials. BASHLITE used six generic usernames and 14 generic passwords, whereas Mirai used a dictionary of 62 username/password pairs, which largely subsumed BASHLITE’s set and added credentials specific to consumer routers and IoT devices. Additionally, Mirai employed a fast, stateless scanning module, allowing it to more efficiently identify vulnerable devices.

#### 3. Methodology
Our study of Mirai leverages various network vantage points, including:
- A large, passive network telescope
- Internet-wide scanning
- Active Telnet honeypots
- Logs of C2 attack commands
- Passive DNS traffic
- Logs from DDoS attack targets

**Table 1: Data Sources**
| Role                | Data Source        | Collection Site         | Collection Period       | Data Volume            |
|---------------------|--------------------|-------------------------|-------------------------|------------------------|
| Growth and size     | Network telescope  | Merit Network, Inc.     | 07/18/2016–02/28/2017   | 370B packets, avg. 269K IPs/min |
| Device composition  | Active scanning    | Censys                  | 07/19/2016–02/28/2017   | 136 IPv4 scans, 5 protocols |
| Ownership & evolution| Attack characterization | Telnet honeypots, Malware repository, DNS—active, DNS—passive, C2 milkers, DDoS IP addresses | AWS EC2, Akamai, VirusTotal, Georgia Tech, Large U.S. ISP, Google Shield, Dyn | Various periods | Various volumes |

**Table 2: Devices Identified**
| Protocol | Banners  | Devices Identified (Percentage) |
|----------|----------|---------------------------------|
| HTTPS    | 342,015  | 271,471 (79.4%)                 |
| FTP      | 318,688  | 144,322 (45.1%)                 |
| Telnet   | 472,725  | 103,924 (22.0%)                 |
| CWMP     | 505,977  | 35,163 (7.0%)                   |
| SSH      | 148,640  | 8,107 (5.5%)                    |
| Total    | 1,788,045| 587,743 (31.5%)                 |

**Challenges and Constraints**
- **IP Churn**: During the 24-hour scan period, devices may churn to new IP addresses.
- **Different Scan Days**: Censys executes scans for different protocols on different days, making it difficult to combine banners from multiple services.

We mitigated these constraints by restricting our analysis to banners collected within twenty minutes of scanning activity, reducing the risk of erroneous associations due to DHCP churn.

**Post-Filtering Dataset**
- **Banners**: 1.8 million
- **Mirai-Infected IP Addresses**: 1.2 million

**Device Identification**
- **Nmap Service Probes**: Used regular expressions to fingerprint devices, successfully handling 98% of SSH banners and 81% of FTP banners but only 7.8% of Telnet banners.
- **Custom Regular Expressions**: Developed to map banners to device manufacturers and models, identifying 31.5% of banners.

**Telnet Honeypots**
- **Purpose**: To track the evolution of Mirai’s capabilities.
- **Setup**: Presented a BusyBox shell and IoT-consistent device banner, logging all incoming Telnet traffic and downloading binaries via wget or tftp.
- **Data Collected**: 80K connection attempts from 54K IP addresses, 151 unique binaries, filtered to 141 Mirai binaries.
- **Supplementary Data**: 293 binaries from Akamai and 594 from VirusTotal, totaling 1,028 unique Mirai samples.
- **Analysis**: Extracted logins, passwords, IP blacklists, and C2 domains, identifying 67 C2 domains and 48 distinct username/password dictionaries.

**Passive and Active DNS**
- **Purpose**: Disambiguate ownership and estimate the relative size of each Mirai strain.
- **Data Sources**: Large U.S. ISP (209 million RRs/day) and Thales (290 million RRs/day).
- **DNS Expansion**: Identified shared DNS infrastructure by linking related historic domain names and IPs, resulting in 33 unique DNS clusters.

**Attack Commands**
- **Tracking**: Akamai ran a “milker” from September 27, 2016, to February 28, 2017, simulating a Mirai-infected device.
- **Data Collected**: 64K attack commands from 484 unique C2 servers.
- **Heuristics**: Grouped attack commands by shared C2 infrastructure and temporal similarity, yielding 15,194 attacks from 146 unique IP clusters.
- **Coverage**: Includes the Dyn attack and Liberia attacks, but not Krebs on Security and OVH attacks, which occurred before the milker’s operation.

**DDoS Attack Traces**
- **Purpose**: To analyze the DDoS attack traces and their impact.

This comprehensive approach provides a detailed and empirical analysis of the Mirai botnet, leveraging multiple data sources and methodologies to understand its growth, composition, and operational characteristics.