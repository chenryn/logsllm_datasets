Use this topic to understand more about CFM monitoring between provider edge devices and customer
edge devices when the customer edge device is not a Juniper device. Also, you can understand more
about how Interface Status TLVs, port status TLVs, chassis ID TLV, and connection protection TLV help in
monitoring your network.
80
CFM Action Profile Asynchronous Notification
SUMMARY
CFM driven asynchronous notification enables link status synchronization between two CE
devices connectedto each other through a pseudo wire originating from their respective PE
devices It emulatesthe scenario as if two CE devicesare directly connected. CFM provides end-to-
end signaling even if PE1 and PE2 are not connected through single network but a set of networks.
Layer 2 connectivity between PE1 and PE2
Figure 1 is an example of deployment scenario where CFM based asynchronous-notification can be
used to synchronize link status between CE1 and CE2. Following two requirements can be met with the
configuration of asynchronous-notification.
• When the link between PE2 to CE2 goes down then the link between PE1 to CE1 also made
down.When the link is restored, it should restore the link status PE1 to CE1 also. The link status
change between PE1 to CE1 should work the similar way.
• When there is a connectivity issue between PE1 to PE2, its triggers a link down between PE1 to CE1
and PE2 to CE2. If the connection status is restored, it should restore the link status on both ends
SEE ALSO
connectivity-fault-management
Configuring a CFM Action Profile to Asyncronus Notification
SUMMARY
81
CFM UP-MEP on PE1 to PE2, monitors the connectivity between PE1 to PE2. Use of interface-
status-tlv on these UP-MEP end points conveys the link status between PE1 to CE1 to PE2 and
link-status between PE2 to CE2 to PE1. Action profile must be configured on PE1 to PE2 to drive
asynchronous-notification towards respective CE devices . It is triggered when either adjacency-
loss is detected or link-down is detected in the received interface-status-tlv.
1. Enable asynchronous-notification at interface level
For example
user@host# set interface interface-name gigether-option asynchronous-notification
2. Configure the action profile and the CFM event(s) to triggered this action profile at the [edit protocols
oam ethernet connectivity-fault-management] hierarchy level. You can configure more than one event in the
action profile
[edit protocols oam ethernet connectivity-fault-management]
user@host# set action-profile profile-name event [event1, event2, event3]
For example
user@host# set action-profile AP_test event adjacency-loss
The action asynchronous-notification is not supported with events other than interface-status-tlv down,
interface-status-tlv lower-layer-down and adjacency-loss. Any other events configured results in a commit
error
.
3. Define the action to asynchronous-notification at the [edit protocols oam ethernet connectivity-fault-
management action-profile profile-name] hierarchy level.
[edit protocols oam ethernet connectivity-fault-management action-profile AP_test]
user@host# set action asynchronous-notification
82
4. Define the maintenance domain at the [edit protocols oam ethernet connectivity-fault-management]
hierarchy level and specify the maintenance-association parameters
[edit protocols oam ethernet connectivity-fault-management]
user@host# set maintenance-domain domain-name level number maintenance-association ma-name
continuity-check interval 1s
For example
user@host# set maintenance-domain md6 level 6 maintenance-association ma6 continuity-check
interval 1s
5. Configure the generation of interface-status-tlv .it is required if asynchronous-notification configured
based on interface-status-tlv.
[edit protocols oam ethernet connectivity-fault-management] user@host# set maintenance-domain
domain-name level number maintenance-association ma-name
continuity-check interface-status-tlv
For example
user@host# set maintenance-domain md6 level 6 maintenance-association ma6 continuity-check
interface-status-tlv
6. Define the maintenance association endpoint at the [edit protocols oam ethernet connectivity-fault-
management maintenance-domain md-name maintenance-association ma-name] hierarchy level and specify the
associated parameters.
[edit protocols oam ethernet connectivity-fault-management maintenance-domain md-name
maintenance-association ma-name] user@host# set mep mep-id direction up interface interface-
name
For example
user@host# set mep 101 direction up interface ge-0/0/0.0
83
7. Set asynchronous-notification action profile at the RMEP level.
[edit protocols oam ethernet connectivity-fault-management maintenance-domain md-name
maintenance-association ma-name mep mep-id remote-mep mep-id ] user@host# set action profile
action profile-name
For example,
[edit protocols oam ethernet connectivity-fault-management maintenance-domain md6 maintenance-
association ma6 mep 101 remote-mep 102] user@host# set action-profile AP_test
SEE ALSO
No Link Title
Understanding CFM Monitoring between CE and PE Devices
IN THIS SECTION
Single Active Multi-homing Use Case using RDI bit | 84
Active/Active Multihoming Use case using RDI bit | 84
You can enable connectivity fault management (CFM) monitoring between provider edge devices and
customer edge devices when the customer edge device is not a Juniper device. When the interface is
down, CFM propagates the status of the interface in the CC messages. The CC message informs the
customer edge device that the provider edge device is down.
You can configure CFM monitoring using either of the following two options:
• Interface Status TLV (Type, Length, and Value)—You can enable connectivity fault management (CFM)
monitoring between provider edge devices and customer edge devices when the customer edge
device is not a Juniper device by using Interface Status TLV. When the interface is down, CFM
propagates the status of the interface using interface status TLV. The Interface Status TLV indicates
the status of the interface on which the MEP transmitting the CCM is configured, or the next-lower
interface in the IETF RFC 2863 IF-MIB. Thus, the customer edge device is aware that the provider
edge device is down. To configure CFM monitoring using Interface Status TLV, use the interface-
status-tlv statement at the [edit protocols oam ethernet connectivity-fault-management maintenance-domain
84
maintenance-domainmaintenance-association maintenance-association continuity-check hierarchy level. This is
the standard option.
• RDI (Remote Defect Indication)—Starting in Junos OS Release 17.3R1, you can enable connectivity
fault management (CFM) monitoring between provider edge devices and customer edge devices
when the customer edge device is not a Juniper device by using the remote defect indication (RDI)
bit. When you enable CFM monitoring, CFM propagates the status of the provider edge device via
the remote defect indication (RDI) bit in the CC messages. Thus, the customer edge device is aware
that the provider edge device is down. The RDI bit is cleared when the service is back up. To
configure CFM monitoring using the RDI bit, use the interface-status-send-rdi statement at the [edit
protocols oam ethernet connectivity-fault-management maintenance-domain maintenance-domainmaintenance-
association maintenance-association continuity-check hierarchy level. This option is required if the
customer edge device does not support Interface Status TLV.
NOTE: When the interface is set to CCC down and you have configured RDI, then RDI bit is sent.
CFM does not monitor the status of the interface. If CCC down is set when the interface is not
standby, RDI bit is sent with the CC messages if you have configured RDI.
Single Active Multi-homing Use Case using RDI bit
Consider the following topology where there are two provider edge devices (PE1 and PE2) as well as
two customer edge devices (CE1 and CE2). PE1 is in active state while PE2 is in standby state. CFM
down MEP is configured between the PE and CE. CFM detects that the CCC down and because CFM
down MEP is configured, the CC messages generated have the RDI bit. The CC messages from PE2 to
CE2 have the RDI bit set to indicate the blocked state. When PE2 becomes active, CCM down is cleared
and the RDI bit is cleared from the subsequent CC messages.
Active/Active Multihoming Use case using RDI bit
Consider the topology where there are two provider edge devices (PE1 and PE2) and two customer
edge devices (CE1 and CE2). PE1 is in active state while PE2 is in standby state. If CFM down MEP is
not configured between the PE and CE to monitor the link connectivity, the CC messages generated do
not have the RDI bit. CFM down MEP is configured between the PE and CE. CFM detects that the CCC
down and because CFM down MEP is configured, the CC messages generated have the RDI bit. The CC
messages from PE2 to CE2 have the RDI bit set to indicate the blocked state. When PE2 becomes
active, CCM down is cleared and the RDI bit is cleared from the subsequent CC messages.
SEE ALSO
interface-status-tlv
85
interface-status-send-rdi
Configuring Port Status TLV and Interface Status TLV
IN THIS SECTION
TLVs Overview | 85
Various TLVs for CFM PDUs | 86
Support for Additional Optional TLVs | 88
MAC Status Defects | 96
Configuring Remote MEP Action Profile Support | 98
Monitoring a Remote MEP Action Profile | 99
TLVs Overview
Type, Length, and Value (TLVs) are described in the IEEE 802.1ag standard for CFM as a method of
encoding variable-length and/or optional information in a PDU. TLVs are not aligned to any particular
word or octet boundary. TLVs follow each other with no padding between them.
Table 1 shows the TLV format and indicates if it is required or optional.
Table 7: Format of TLVs
Parameter Octet (sequence) Description
Type 1 Required. If 0, no Length or Value fields follow. If not 0, at least the
Length field follows the Type field.
Length 2–3 Required if the Type field is not 0. Not present if the Type field is 0. The
16 bits of the Length field indicate the size, in octets, of the Value field.
0 in the Length field indicates that there is no Value field.
Value 4 Length specified by the Length field. Optional. Not present if the Type
field is 0 or if the Length field is 0.
86
Various TLVs for CFM PDUs
Table 8 on page 86 shows a set of TLVs defined by IEEE 802.1ag for various CFM PDU types. Each TLV
can be identified by the unique value assigned to its type field. Some type field values are reserved.
Table 8: Type Field Values for Various TLVs for CFM PDUs
TLV or Organization Type Field
End TLV 0
Sender ID TLV 1
Port Status TLV 2
Data TLV 3
Interface Status TLV 4
Reply Ingress TLV 5
Reply Egress TLV 6
LTM Egress Identifier TLV 7
LTR Egress Identifier TLV 8
Reserved for IEEE 802.1 9 to 30
Organization-Specific TLV 31
Defined by ITU-T Y.1731 32 to 63
Reserved for IEEE 802.1 64 to 255
Not every TLV is applicable for all types of CFM PDUs.
87
• TLVs applicable for continuity check message (CCM):
• End TLV
• Sender ID TLV
• Port Status TLV
• Interface Status TLV
• Organization-Specific TLV
• TLVs applicable for loopback message (LBM):
• End TLV
• Sender ID TLV
• Data TLV
• Organization-Specific TLV
• TLVs applicable for loopback reply (LBR):
• End TLV
• Sender ID TLV
• Data TLV
• Organization-Specific TLV
• TLVs applicable for linktrace message (LTM):
• End TLV
• LTM Egress Identifier TLV
• Sender ID TLV
• Organization-Specific TLV
• TLVs applicable for linktrace reply (LTR):
• End TLV
• LTR Egress Identifier TLV
• Reply Ingress TLV
• Reply Egress TLV
88
• Sender ID TLV
• Organization-Specific TLV
The following TLVs are currently supported in the applicable CFM PDUs:
• End TLV
• Reply Ingress TLV
• Reply Egress TLV
• LTR Egress Identifier TLV
• LTM Egress Identifier TLV
• Data TLV
Support for Additional Optional TLVs
IN THIS SECTION
Port Status TLV | 89
Interface Status TLV | 92
The following additional optional TLVs are supported:
• Port Status TLV
• Interface Status TLV
MX Series routers support configuration of port status TLV and interface status TLV. Configuring the
Port Status TLV allows the operator to control the transmission of the Port Status TLV in CFM PDUs.
NOTE: Although Port Status TLV configuration statements are visible in the CLI on M120 and
M320 routers, Port Status TLV cannot be configured on these systems. Port Status TLV can be
enabled on a MEP interface only if it is a bridge logical interface, which is not possible on these
systems.
For configuration information, see the following sections:
89
Port Status TLV
The Port Status TLV indicates the ability of the bridge port on which the transmitting MEP resides to
pass ordinary data, regardless of the status of the MAC. The value of this TLV is driven by the MEP
variable enableRmepDefect, as shown in Table 10 on page 89. The format of this TLV is shown in Table 9 on
page 89.
Any change in the Port Status TLVs value triggers one extra transmission of that bridge ports MEP
CCMs.
Table 9: Port Status TLV Format
Parameter Octet (Sequence)
Type = 2 1
Length 2–3
Value (See Table 10 on page 89) 4
Table 10: Port Status TLV Values
Mnemonic Ordinary Data Passing Freely Through the Port Value
psBlocked No: enableRmepDefect = false 1
psUp Yes: enableRmepDefect = true 2
The MEP variable enableRmepDefect is a boolean variable indicating whether frames on the service instance
monitored by the maintenance associations if this MEP are enabled to pass through this bridge port by
the Spanning Tree Protocol and VLAN topology management. It is set to TRUE if:
• The bridge port is set in a state where the traffic can pass through it.
• The bridge port is running multiple instances of the spanning tree.
• The MEP interface is not associated with a bridging domain.
90
Configuring Port Status TLV
Junos OS provides configuration support for the Port Status TLV, allowing you to control the
transmission of this TLV in CCM PDUs. The Junos OS provides this configuration at the continuity-check
level. By default, the CCM does not include the Port Status TLV. To configure the Port Status TLV, use
the port-status-tlv statement at the [edit protocols oam ethernet connectivity-fault-management maintenance-
domain identifier maintenance-association identifier continuity-check] hierarchy level.
NOTE: Port Status TLV configuration is not mandated by IEEE 802.1ag. The Junos OS provides it
in order to give more flexibility to the operator; however it receives and processes CCMs with a
Port Status TLV, regardless of this configuration.
An example of the configuration statements follows:
protocols {
oam {
ethernet {
connectivity-fault-management {
maintenance-domain identifier {
level number;
maintenance-association identifier {
continuity-check {
interval number,
loss-threshold number;
hold-interval number;
port-status-tlv; # Sets Port Status TLV
}
}
}
}
}
}
}
You cannot enable Port Status TLV transmission in the following two cases:
• If the MEP interface under the maintenance-association is not of type bridge.
• If the MEP is configured on a physical interface.
91
Displaying the Received Port Status TLV
The Junos OS saves the last received Port Status TLV from a remote MEP. If the received Port Status
value does not correspond to one of the standard values listed in Table 10 on page 89, then the show
command displays it as "unknown." You can display the last saved received Port Status TLV using the show
oam ethernet connectivity-fault-management mep-database maintenance-domain identifier maintenance-association
identifier local-mep identifier remote-mep identifier command, as in the following example:
user@host> show oam ethernet connectivity-fault-management mep-database maintenance-domain md5
maintenance-association ma5 local-mep 2001 remote-mep 1001
Maintenance domain name: md5, Format: string, Level: 5
Maintenance association name: ma5, Format: string
Continuity-check status: enabled, Interval: 100ms, Loss-threshold: 3 frames
MEP identifier: 2001, Direction: down, MAC address: 00:19:e2:b2:81:4a
Auto-discovery: enabled, Priority: 0
Interface status TLV: up, Port status TLV: up
Interface name: ge-2/0/0.0, Interface status: Active, Link status: Up
Remote MEP identifier: 1001, State: ok
MAC address: 00:19:e2:b0:74:00, Type: Learned
Interface: ge-2/0/0.0
Last flapped: Never
Remote defect indication: false
Port status TLV: none # RX PORT STATUS
Interface status TLV: none
Displaying the Transmitted Port Status TLV
The Junos OS saves the last transmitted Port Status TLV from a local MEP. If the transmission of the Port
Status TLV has not been enabled, then the show command displays "none." You can display the last saved
transmitted Port Status TLV using the show oam ethernet connectivity-fault-management mep-database
maintenance-domain identifier maintenance-association identifier local-mep identifier remote-mep identifier
command, as in the following example:
user@host> show oam ethernet connectivity-fault-management mep-database maintenance-domain md5
maintenance-association ma5 local-mep 2001 remote-mep 1001
Maintenance domain name: md5, Format: string, Level: 5
Maintenance association name: ma5, Format: string
Continuity-check status: enabled, Interval: 100ms, Loss-threshold: 3 frames
MEP identifier: 2001, Direction: down, MAC address: 00:19:e2:b2:81:4a
92
Auto-discovery: enabled, Priority: 0
Interface status TLV: up, Port status TLV: up # TX PORT STATUS
Interface name: ge-2/0/0.0, Interface status: Active, Link status: Up
Remote MEP identifier: 1001, State: ok
MAC address: 00:19:e2:b0:74:00, Type: Learned
Interface: ge-2/0/0.0
Last flapped: Never
Remote defect indication: false
Port status TLV: none
Interface status TLV: none
Interface Status TLV
The Interface Status TLV indicates the status of the interface on which the MEP transmitting the CCM is
configured, or the next-lower interface in the IETF RFC 2863 IF-MIB. The format of this TLV is shown in
Table 11 on page 92. The enumerated values are shown in Table 12 on page 92.
Table 11: Interface Status TLV Format
Parameter Octet (Sequence)
Type = 4 1
Length 2–3
Value (See Table 12 on page 92) 4
Table 12: Interface Status TLV Values
Mnemonic Interface Status Value
isUp up 1
isDown down 2
isTesting testing 3
93
Table 12: Interface Status TLV Values (Continued)
Mnemonic Interface Status Value
isUnknown unknown 4
isDormant dormant 5
isNotPresent notPresent 6
isLowerLayerDown lowerLayerDown 7
NOTE: When the operational status of a logical interface changes from the down state (status
value of 2) to the lower layer down state (status value of 7) and vice versa, the LinkDown SNMP
trap is not generated. For example, if you configure an aggregated Ethernet interface bundle with
a VLAN tag and add a physical interface that is in the operationally down state to the bundle, the
operational status of the aggregated Ethernet logical interface bundle at that point is lower layer
down (7). If you take the MIC associated with the interface offline, the LinkDown trap is not
generated when the logical interface shifts from the lower layer down state to the down state.
Similarly, consider another sample scenario in which an physical interface is added to an
aggregated Ethernet bundle that has VLAN tagging and the aggregated Ethernet logical interface
is disabled. When the logical interface is disabled, the operational status of the logical interface
changes to down. If you disable the physical interface that is part of the aggregated Ethernet
bundle, the operational status of the aggregated Ethernet logical interface remains down. If you
reenable the aggregated Ethernet logical interface, the operational status of it changes from
down to lower layer down. The LinkDown SNMP trap is not generated at this point.
Configuring Interface Status TLV
The Junos OS provides configuration support for the Interface Status TLV, thereby allowing operators to