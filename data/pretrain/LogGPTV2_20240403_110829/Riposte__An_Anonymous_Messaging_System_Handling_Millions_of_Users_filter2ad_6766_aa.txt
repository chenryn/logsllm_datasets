# Title: Riposte: An Anonymous Messaging System Handling Millions of Users

## Authors:
- Henry Corrigan-Gibbs
- Dan Boneh
- David Mazi√®res

### 2015 IEEE Symposium on Security and Privacy

---

**Abstract:**

This paper introduces Riposte, a novel system for anonymous broadcast messaging. To the best of our knowledge, Riposte is the first such system that simultaneously protects against traffic-analysis attacks, prevents anonymous denial-of-service (DoS) by malicious clients, and scales to anonymity sets of millions of users. Riposte achieves these properties through innovative use of techniques from private information retrieval (PIR) and secure multi-party computation (MPC). For latency-tolerant workloads with many more readers than writers (e.g., Twitter, WikiLeaks), we demonstrate that a three-server Riposte cluster can build an anonymity set of 2,895,216 users in 32 hours.

**Index Terms:**
- Anonymity
- Messaging
- Privacy
- Private Information Retrieval

---

## I. Introduction

In an era of pervasive network surveillance [6], [34], [35], [39], [62], whistleblowers face significant challenges. For instance, a government employee seeking to anonymously leak evidence of misconduct might consider various methods, each with its own risks. Directly emailing a reporter could lead to the whistleblower's identity being revealed through email server logs. Using anonymizing proxies like Tor [27] or other low-latency systems [31], [53], [59], [71] leaves the leaker vulnerable to traffic-analysis attacks [4], [60], [61]. Systems designed to protect against traffic analysis typically support only small anonymity sets (tens of thousands of users at most). Effective protection for whistleblowers in the digital age requires anonymous messaging systems that offer strong security guarantees and scale to large networks.

In this paper, we present Riposte, a new system that aims to make traffic-analysis-resistant anonymous broadcast messaging practical at Internet scale. Riposte allows a large number of clients to post messages anonymously to a shared "bulletin board" maintained by a small set of minimally trusted servers (as few as three non-colluding servers are sufficient). Whistleblowers can use Riposte to publish short, tweet-like messages and combine it with public-key encryption to create point-to-point private messaging channels.

While there is extensive literature on anonymity systems [22], [28], Riposte uniquely combines the following properties:
1. Protection against traffic analysis attacks.
2. Prevention of anonymous DoS attacks by malicious clients.
3. Scalability to anonymity sets of millions of users for certain latency-tolerant applications.

We achieve these properties by integrating three key techniques from cryptography and privacy:
1. **Traffic Analysis Resistance:** We use a protocol inspired by client/server DC-nets [14], [77], where each client sends a fixed-length secret-shared message to the servers in every time epoch.
2. **Efficient Disruption Resistance:** We employ a secure multi-party protocol to quickly detect and exclude malformed client requests [29], [41], [78].
3. **Scalability:** We leverage distributed point functions [16], [37] from PIR to minimize the data each client must upload to each server in every time epoch.

Riposte's use of PIR is unique: while traditional PIR allows a client to read a database row without revealing which row is being read, Riposte uses a reverse PIR approach, enabling a client to write into the database without revealing the row being written [67].

A large-scale Riposte deployment could form the basis for an anonymous Twitter service. Users would "tweet" by anonymously writing into a database containing all clients' tweets for a specific period. Read-only users can submit "empty" writes to significantly increase the effective anonymity set with minimal impact on system performance.

Messaging in Riposte occurs in regular time epochs (e.g., one hour). Clients generate write requests, cryptographically split them into shares, and send one share to each Riposte server. A coalition of servers smaller than a specified threshold cannot learn anything about the client's message or write location.

The Riposte servers collect write requests until the end of the time epoch, then publish the aggregated write requests. This process reveals the set of posts but not who posted them. The system ensures that a large number of honest clients participate in each epoch to maintain anonymity.

We describe two Riposte variants:
1. **Three-Server Variant:** Scales to very large networks (millions of clients) but requires no two servers to collude.
2. **s-Server Variant:** More computationally expensive but provides security even if all but one server is malicious.

Both variants maintain security under active adversarial conditions, including when all but two clients are malicious and when servers are actively malicious (subject to non-collusion).

Experiments show that Riposte is practical for anonymous broadcast messaging. With a 65,536-row, 160-byte tweet table, the system processes 32.8 client write requests per second. For a larger 377 MB table (over 2.3 million 160-byte tweets), a Riposte cluster processes 1.4 client write requests per second. Writing into a 377 MB table requires each client to upload less than 1 MB of data, compared to over 750 MB for a two-server DC-net-based system.

AES-NI encryption throughput limits the system's capacity, but sharding the database across multiple machines can achieve near-linear speedup. We tested Riposte with anonymity sets up to 2,895,216 clients, the largest ever constructed for a system defending against traffic analysis attacks.

**Contributions:**
- Two new bandwidth-efficient and traffic-analysis-resistant anonymous messaging protocols using reverse PIR.
- A fast method for excluding malformed client requests.
- A method to recover from transmission collisions in DC-net-style anonymity systems.
- Experimental evaluation with anonymity sets up to 2,895,216 users.

**Structure:**
- Section II introduces goals, threat model, and security definitions.
- Sections III and IV detail the high-level system architecture and techniques for bandwidth efficiency and disruption resistance.
- Section V presents the fast method for excluding malformed client requests.
- Section VI evaluates system performance.
- Section VII surveys related work.
- Section VIII concludes the paper.

---

## II. Goals and Problem Statement

### A. System Goals

Riposte implements an anonymous bulletin board using a primitive called a write-private database scheme. It enables clients to write into a shared database, collectively maintained by a small set of servers, without revealing the location or contents of the write. The database is a long, fixed-length bitstring divided into fixed-length rows.

To write, a client generates a write request, splits it into shares, and sends one share to each server. No coalition of servers smaller than a specified threshold can learn the contents of a single client's write request. The servers collect write requests during each time epoch and, at the end, combine their shares to reveal the plaintext messages. A client's anonymity set consists of all honest clients who submitted write requests during the same epoch.

### B. Threat Model

**Clients:** Completely untrusted; they may submit malicious write requests and collude with servers or other clients to break the system's security.

**Servers:** Trusted for availability. The failure of any one server (malicious or benign) renders the database state unrecoverable but does not compromise client anonymity. Server maintainers can use standard state-machine-replication protocols to protect against benign failures.

For each cryptographic instantiation of Riposte, there is a threshold parameter \( t \) that defines the number of malicious servers the system can tolerate while maintaining security. We make no assumptions about the behavior of the remaining servers beyond the threshold.