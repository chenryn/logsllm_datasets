using the weighted and average RTT, respectively. Between 47%
(448M) using the weighted RTT and 64% (609M) using the average
2¡42¡32¡22¡12021222324speedup of Two-Tier (S)0.00.20.40.60.81.0frac. of resolvers (R) / queries (Q)wgt RTT - Ravg RTT - Rwgt RTT - Qavg RTT - QSIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Schomp et al.
Figure 12: Computed resolution time per query from sim-
ulated resolvers to toplevels (Y-axis) and Two-Tier (X-axis)
using average (right) and weighted (left) RTTs. Tint repre-
sents a linear scaling on the number of simulated resolvers
within a hexbin.
RTT experience reduced average resolution time with Two-Tier, i.e.,
S > 1. Due to the skew in DNS queries among resolvers, those 47-
64% resolvers account for 87-98% of all DNS queries, as shown in the
lines “wgt RTT - Q” and “avg RTT - Q”. Since S is a ratio, we also plot
the absolute resolution times in Figure 12 for the “wgt RTT - Q” (left)
and “avg RTT - Q” (right). The Y-axis is the numerator in Eq. 1 while
the X-axis is the denominator. Thus, Two-Tier reduces resolution
time compared to toplevels for points above the diagonal. For both
“wgt RTT - Q” and “avg RTT - Q”, the average Two-Tier resolution
time is roughly 16 msec. The average toplevel resolution time is
27 and 61 msec in “wgt RTT - Q” and “avg RTT - Q”, respectively.
Thus, we conclude that Two-Tier can reduce resolution time in
most situations over Akamai’s single-tier of toplevels.
Improvements: Our results show that there is a cost for some
resolvers, however, and particularly those that weight delegation
selection or have low DNS query volumes. Clearly, the cost is in-
curred each time the resolver must query both the toplevels and
the lowlevels. If the DNS response from the toplevels could, in ad-
dition delegating to lowlevels, push an answer so that the resolver
need not query the lowlevels in the same resolution, then Two-Tier
would always be beneficial when the lowlevel RTT is less than
the toplevel RTT, which is the case for 87-98% of the simulated
resolvers. Pushing answers requires a modification to the DNS pro-
tocol. However, server push is a feature in recently standardized
DNS-over-HTTPS [19].
6 RELATED WORK
Since DNS was conceived during the Internet’s early stages [31], it
has been extensively studied, resulting in numerous RFCs [1], as
well as a vast array of academic work. DNS lies in the intersection
of various fields such as security and privacy [21, 38, 47], BGP
and anycast [7, 15, 30, 43], resiliency against malicious attacks
[32, 51], and DNS-based traffic load balancing and CDNs [50]. In
terms of systemic analysis and measurement studies, prior work has
extensively explored the behaviors and interactions of end-users
and their resolvers [2, 8, 17, 26, 48, 56]. In comparison, authoritative
DNS infrastructures have not been studied in as much depth, with
the exception of the root nameservers [9, 28, 53]. We focus on
the design and operation of one of the largest authoritative DNS
infrastructures in the world, Akamai DNS.
Several elements of Akamai DNS and how it is used by the Aka-
mai CDN have been studied before. In [36], the authors present the
Akamai CDN and how Akamai DNS answers DNS queries for the
CDN, including a high level description of the Two-Tier delegation
system (§5.2). In this paper, we demonstrate the effectiveness of
Two-Tier. In [11], the authors demonstrate an extension of the Map-
ping Intelligence component and Akamai DNS to support end-user
mapping using the edns-client-subnet (ECS) EDNS0 option. This
work presents a use of Akamai DNS, while we present the Akamai
DNS infrastructure in detail. Finally, the overlay multicast network
that Akamai DNS uses for near real-time delivery of certain critical
metadata is similar to that discussed in [4, 25]. Akamai DNS is a
consumer of these delivery services, so we do not discuss it here.
7 CONCLUDING REMARKS
This paper presents design principles and experiential insights
gleaned over two decades of architecting, deploying, and operating
Akamai DNS, a critical component of the Internet infrastructure. We
show how Akamai DNS is designed to provide resiliency, scalability,
performance, and reconfigurability. We describe a taxonomy of
failure modes and attack scenarios, and the mechanisms designed to
mitigate them. As DNS query volumes increase rapidly and attacks
on DNS become more sophisticated, the Akamai DNS architecture
provides a flexible platform to build more capabilities to meet future
challenges.
We now summarize the key design principles that underlie the ar-
chitecture of Akamai DNS: (i) Avoid single points of failure (§4.3.1);
(ii) Use general mitigation strategies for failure modes rather than
specific point solutions, as such strategies potentially also cover
unanticipated failure modes (§4.2), (iii) Under widespread failure,
continue to operate in a degraded state as the alternative is not op-
erating at all (§4.2.1), (iv) Build in contingencies for even extremely
unlikely but high impact scenarios, so that Akamai DNS is always
available (§4.2.3, §4.2.4), (v) Avoid actively reacting to an attack –
instead rely upon automated mitigations – until action becomes
absolutely necessary (§4.3.2).
We also highlight the following areas of future work for the
research community. Mechanisms for automating anycast traffic
engineering (§4.3.2) and the methods for information sharing be-
tween network peers to enable those mechanisms is an important
area of work. Similarly, methods for predicting anycast routing or
improving BGP route selection would greatly advance anycast per-
formance (§5.1). Further, we believe there remain opportunities to
improve the DNS protocol (§5.2), adding features to provide faster
answers to the world’s queries.
ACKNOWLEDGMENTS
The authors would like to thank the anonymous reviewers and
our shepherd for their insightful comments that helped improve
this paper. We would like to also thank Jean Roy, Larry Campbell,
Brian Sniffen, and Joshua Matt for providing valuable feedback on
early drafts of this paper. Finally, we thank the numerous engi-
neers at Akamai who contributed to building Akamai DNS into the
impressive system that it is today.
476
Toplevel resolution time (msec)Two-Tier resolution time (msec)Akamai DNS
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
REFERENCES
[1] 2020. DNS Camel Viewer. (2020). https://powerdns.org/dns-camel/
[2] Bernhard Ager, Wolfgang Mühlbauer, Georgios Smaragdakis, and Steve Uhlig.
2010. Comparing DNS resolvers in the wild. In Proceedings of the 10th ACM
SIGCOMM conference on Internet measurement. 15–21.
[3] Akamai. 2019. EdgeScape.
(2019). Retrieved December 2019 from https://
developer.akamai.com/edgescape
[4] Konstantin Andreev, Bruce M Maggs, Adam Meyerson, and Ramesh K Sitaraman.
2003. Designing overlay multicast networks for streaming. In Proceedings of the
fifteenth annual ACM symposium on Parallel algorithms and architectures. ACM,
149–158.
[5] Vasco Asturiano. 2011. The Shape of a BGP Update. (2011). Retrieved January
2020 from https://labs.ripe.net/Members/vastur/the-shape-of-a-bgp-update
[6] Chris Baker. 2016. Dyn, DDoS, and the DNS. (2016).
[7] Matt Calder, Ashley Flavel, Ethan Katz-Bassett, Ratul Mahajan, and Jitendra
Padhye. 2015. Analyzing the Performance of an Anycast CDN. In Proceedings of
the 2015 Internet Measurement Conference. 531–537.
[8] Thomas Callahan, Mark Allman, and Michael Rabinovich. 2013. On modern DNS
behavior and properties. ACM SIGCOMM Computer Communication Review 43, 3
(2013), 7–15.
[9] Sebastian Castro, Duane Wessels, Marina Fomenkov, and Kimberly Claffy. 2008.
A day at the root of the internet. ACM SIGCOMM Computer Communication
Review 38, 5 (2008), 41–46.
[10] R. Chandra, P. Traina, and T. Li. 1996. BGP Communities Attribute. RFC 1997.
https://tools.ietf.org/html/rfc1997
[11] Fangfei Chen, Ramesh K Sitaraman, and Marcelo Torres. 2015. End-user mapping:
Next generation request routing for content delivery. ACM SIGCOMM Computer
Communication Review 45, 4 (2015), 167–181.
[12] Cloudflare. 2019. Cloudflare 1.1.1.1 Public Recursive Resolver. (2019). Retrieved
June 2019 from https://1.1.1.1/
[13] C. Contavalli, W. van der Gaast, D. Lawrence, and W. Kumari. 2016. Client Subnet
in DNS Queries. RFC 7871. https://tools.ietf.org/html/rfc7871
[14] Jakub Czyz, Michael Kallitsis, Manaf Gharaibeh, Christos Papadopoulos, Michael
Bailey, and Manish Karir. 2014. Taming the 800 pound gorilla: The rise and
decline of NTP DDoS attacks. In Proceedings of the 2014 Internet Measurement
Conference. ACM, 435–448.
[15] Ricardo de Oliveira Schmidt, John Heidemann, and Jan Harm Kuipers. 2017.
Anycast latency: How many sites are enough?. In International Conference on
Passive and Active Network Measurement. Springer, 188–200.
[16] Wouter B De Vries, Ricardo de O Schmidt, Wes Hardaker, John Heidemann, Pieter-
Tjerk de Boer, and Aiko Pras. 2017. Broad and Load-Aware Anycast Mapping
with Verfploeter. In ACM Internet Measurement Conference.
[17] Hongyu Gao, Vinod Yegneswaran, Yan Chen, Phillip Porras, Shalini Ghosh, Jian
Jiang, and Haixin Duan. 2013. An empirical reexamination of global DNS behavior.
In ACM SIGCOMM Computer Communication Review, Vol. 43. ACM, 267–278.
[18] Google. 2019. Google Public DNS.
(2019). Retrieved June 2019 from https:
//developers.google.com/speed/public-dns/
[19] P. Hoffman and P. McManus. 2018. DNS Queries over HTTPS (DoH). RFC 8484.
[20] C. Hopps. 2000. Analysis of an Equal-Cost Multi-Path Algorithm. RFC 2992.
https://tools.ietf.org/html/rfc8484
https://tools.ietf.org/html/rfc2992
[21] Z. Hu, L. Zhu, J. Heidemann, A. Mankin, D. Wessels, and P. Hoffman. 2016.
Specification for DNS over Transport Layer Security (TLS). RFC 7858. https:
//tools.ietf.org/html/rfc7858
[22] Cheng Jin, Haining Wang, and Kang G Shin. 2003. Hop-count filtering: an
effective defense against spoofed DDoS traffic. In Proceedings of the 10th ACM
Conference on Computer and Communications Security. ACM, 30–41.
[23] Georgios Kambourakis, Tassos Moschos, Dimitris Geneiatakis, and Stefanos
Gritzalis. 2007. Detecting DNS amplification attacks. In International Workshop
on Critical Information Infrastructures Security. Springer, 185–196.
[24] Constantinos Kolias, Georgios Kambourakis, Angelos Stavrou, and Jeffrey Voas.
2017. DDoS in the IoT: Mirai and other botnets. Computer 50, 7 (2017), 80–84.
[25] Leonidas Kontothanassis, Ramesh Sitaraman, Joel Wein, Duke Hong, Robert
Kleinberg, Brian Mancuso, David Shaw, and Daniel Stodolsky. 2004. A transport
layer for live streaming in a content delivery network. Proc. IEEE 92, 9 (2004),
1408–1419.
[26] Marc Kührer, Thomas Hupperich, Jonas Bushart, Christian Rossow, and Thorsten
Holz. 2015. Going wild: Large-scale classification of open DNS resolvers. In
Proceedings of the 2015 Internet Measurement Conference. 355–368.
[27] Craig Labovitz, Abha Ahuja, Abhijit Bose, and Farnam Jahanian. 2000. Delayed
Internet routing convergence. ACM SIGCOMM Computer Communication Review
30, 4 (2000), 175–187.
[28] Bu-Sung Lee, Yu Shyang Tan, Yuji Sekiya, Atsushi Narishige, and Susumu Date.
2010. Availability and Effectiveness of Root DNS servers: A long term study. In
2010 IEEE Network Operations and Management Symposium-NOMS 2010. IEEE,
862–865.
477
[29] E. Lewis and Ed. A. Hoenes. 2010. DNS Zone Transfer Protocol (AXFR). RFC 5936.
https://tools.ietf.org/html/rfc5936
[30] Stephen McQuistin, Sree Priyanka Uppu, and Marcel Flores. 2019. Taming Any-
cast in the Wild Internet. In Proceedings of the Internet Measurement Conference.
165–178.
[31] P. Mockapetris. 1987. Domain names - implementation and specification. STD 13.
https://tools.ietf.org/html/rfc1035
[32] Giovane Moura, John Heidemann, Moritz Müller, Ricardo de O Schmidt, and
Marco Davids. 2018. When the Dike Breaks: Dissecting DNS Defenses During
DDoS. In Proceedings of the Internet Measurement Conference 2018. ACM, 8–21.
[33] Giovane Moura, Ricardo de O Schmidt, John Heidemann, Wouter B de Vries,
Moritz Muller, Lan Wei, and Cristian Hesselman. 2016. Anycast vs. DDoS: Eval-
uating the November 2015 root DNS event. In Proceedings of the 2016 Internet
Measurement Conference. ACM, 255–270.
[34] Moritz Müller, Giovane Moura, Ricardo de O Schmidt, and John Heidemann. 2017.
Recursives in the wild: engineering authoritative DNS servers. In Proceedings of
the 2017 Internet Measurement Conference. ACM, 489–495.
[35] Marcin Nawrocki, Jeremias Blendin, Christoph Dietzel, Thomas C Schmidt, and
Matthias Wählisch. 2019. Down the Black Hole: Dismantling Operational Prac-
tices of BGP Blackholing at IXPs. In Proceedings of the Internet Measurement
Conference. ACM, 435–448.
[36] Erik Nygren, Ramesh K Sitaraman, and Jennifer Sun. 2010. The Akamai Network:
A Platform for High-Performance Internet Applications. ACM SIGOPS Operating
Systems Review 44, 3 (2010), 2–19.
[37] Jeffrey Pang, Aditya Akella, Anees Shaikh, Balachander Krishnamurthy, and
Srinivasan Seshan. 2004. On The Responsiveness of DNS-Based Network Control.
In Proceedings of the 4th ACM SIGCOMM Conference on Internet Measurement.
21–26.
[38] Jeman Park, Aminollah Khormali, Manar Mohaisen, and Aziz Mohaisen. 2019.
Where Are You Taking Me? Behavioral Analysis of Open DNS Resolvers. In
2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and
Networks (DSN). IEEE, 493–504.
[39] Quad9. 2019. Quad9 DNS Service.
(2019). Retrieved June 2019 from https:
//www.quad9.net/
[40] Yakov Rekhter, Susan Hares, and Tony Li. 2006. A Border Gateway Protocol 4
(BGP-4). RFC 4271. (Jan. 2006). https://doi.org/10.17487/RFC4271
[41] RIPE. 2019. Atlas. (2019). Retrieved January 2020 from https://atlas.ripe.net/
[42] RIPE. 2019. Atlas API v2 manual: Base Attributes.
(2019). Retrieved June
2020 from https://atlas.ripe.net/docs/api/v2/manual/measurements/types/base_
attributes.html
[43] Sandeep Sarat, Vasileios Pappas, and Andreas Terzis. 2006. On The Use of
Anycast in DNS. In Proceedings of 15th International Conference on Computer
Communications and Networks. IEEE, 71–78.
[44] Kyle Schomp. 2019. DNS Recursive Resolver Delegation Selection in the
Wild. (2019). Retrieved May 2019 from https://indico.dns-oarc.net/event/31/
contributions/676/
[45] Kyle Schomp, Mark Allman, and Michael Rabinovich. 2014. DNS resolvers
considered harmful. In Proceedings of the 13th ACM Workshop on Hot Topics in
Networks. ACM, 16.
[46] Kyle Schomp, Tom Callahan, Michael Rabinovich, and Mark Allman. 2013. On
Measuring the Client-side DNS Infrastructure. In Proceedings of the 2013 Confer-
ence on Internet Measurement (IMC ’13). ACM, New York, NY, USA, 77–90.
[47] Kyle Schomp, Tom Callahan, Michael Rabinovich, and Mark Allman. 2014. As-
sessing DNS Vulnerability to Record Injection. In International Conference on
Passive and Active Network Measurement. Springer, 214–223.
[48] Kyle Schomp, Michael Rabinovich, and Mark Allman. 2016. Towards a model of
DNS client behavior. In International Conference on Passive and Active Network
Measurement. Springer, 263–275.
[49] Pavlos Sermpezis and Vasileios Kotronis. 2019. Inferring Catchment in Internet
Routing. Proceedings of the ACM on Measurement and Analysis of Computing
Systems 3, 2 (2019), 30.
[50] Anees Shaikh, Renu Tewari, and Mukesh Agrawal. 2001. On The Effectiveness
Of DNS-Based Server Selection. In Proceedings of IEEE INFOCOM 2001, Vol. 3.
IEEE, 1801–1810.
[51] Roland van Rijswijk-Deij, Anna Sperotto, and Aiko Pras. 2014. DNSSEC and Its
Potential for DDoS Attacks: A Comprehensive Measurement Study. In Proceedings
of the 2014 Conference on Internet Measurement (IMC ’14). ACM, New York, NY,
USA, 449–460. https://doi.org/10.1145/2663716.2663731
[52] Ralf Weber. 2014. Latest Internet Plague: Random Subdomain Attacks. (2014).
Retrieved May 2019 from https://indico.uknof.org.uk/event/31/contributions/349/
[53] Duane Wessels. 2019. Long Term Analysis of Root Server System Performance
Using RIPE Atlas Data. (2019). Retrieved Nov 2019 from https://indico.dns-oarc.
net/event/32/contributions/713/
[54] Florian Wohlfart, Nikolaos Chatzis, Caglar Dabanoglu, Georg Carle, and Walter
Willinger. 2018. Leveraging interconnections for performance: the serving in-
frastructure of a large CDN. In Proceedings of the 2018 Conference of the ACM
Special Interest Group on Data Communication. ACM, 206–220.
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Schomp et al.
[55] Bill Woodcock. 2016. Best Practices in DNS Service-Provision Architecture. In
ICANN 55. ICANN.
[56] Yingdi Yu, Duane Wessels, Matt Larson, and Lixia Zhang. 2012. Authority server
selection in DNS caching resolvers. ACM SIGCOMM Computer Communication
Review 42, 2 (2012), 80–86.
478