To apply the workflow you need to first set the system up, then you'll be able to use and maintain it. To be able to do it save block of time to initialize this process and prepare a workstation with the appropriate space, furniture, and tools. If your space is properly set up and streamlined, it can reduce your unconscious resistance to dealing with your stuff and even make it attractive for you to sit down and crank through your input and your work. An ideal time frame for most people is two whole days, back to back.
## Setting up the space
Choose a physical location to serve as as your central cockpit of control. If you already have a desk and office space set up where you work, that’s probably the best place to start. If you work from a home office, obviously that will be your prime location. If you already have both, you’ll want to establish identical, even interchangeable systems in both places, though one will probably be primary.
The basics for a workspace are just a writing surface and room for an in-tray.
## Design your system
Before you start moving stuff around it's a good idea to get the first design of your whole system, in my case I'm going to heavily rely on org-mode to track most of the stuff with a repository with the next structure:
```
.
├── calendar
│   ├── personal.org
│   │   ├── One time events
│   │   ├── Recurring events
│   │   ├── Birthdays
│   │   └── Deathdays
│   ├── day.org
│   ├── tickler.org
│   ├── work_1.org
│   ├── work_2.org
│   ├── partner.org
│   ├── family.org
├── inbox
│   ├── computer.org
│   ├── mobile.org
│   └── tablet.org
├── reference
│   ├── blue
│   ├── reference.org
│   ├── health.org
│   └── red 
└── todo
    ├── personal.org
    ├── work_1.org
    ├── work_2.org
    ├── recurrent.org
    └── someday.org
```
Where:
* The subtrees behind the `.org` files are the heading trees.
* All `org` files go with their respective `org_archive` ones, they're not shown in the above diagram to keep it simple.
* `calendar/personal.org` is my [personal calendar](#personal-calendar).
* `calendar/day.org` is my [day planner](#day-planner).
### Inbox management
Inbox is the container where you [capture your stuff](#capture). I've found myself capturing stuff in each of my devices: computer, mobile phone and tablet. Each of them has their own org file under the `inbox` directory. Each of these files has the `#+FILETAGS: :inbox:` heading so that all elements share the tag.
Part of the daily planning is to check the computer and mobile inboxes to see if there is anything that needs to be processed on the day. I don't check the tablet inbox as there's usually no urgent stuff there. The rest of the elements will be processed on the weekly review leaving all the inbox files empty.
#### Computer inbox management
[`nvim-orgmode`](orgmode.md) has an awesome feature called [capture](orgmode.md#capture) which lets you capture thoughts with a keystroke. This is awesome as no matter what are you doing inside `neovim` you can quickly record your thought, action or idea and keep on doing whatever you were doing. It's a very efficient way to record your *stuff* at the same time as you keep your focus. 
You can use the next capture template:
```lua
  org_capture_templates = {
    i = {
      description = "Inbox",
      template = "* TODO %?\n %U",
      target = "~/org/inbox/computer.org",
    },
  }
```
#### Mobile and tablet inbox management
To capture the content on the go you can use the [orgzly](orgzly.md) and then sync them with your computer through [syncthing](syncthing.md).
### Calendar management
You need to trust your calendar as sacred territory, reflecting the exact hard edges of your day's commitments, which should be noticeable at a glance while you're on the run.
So for each element you encounter in the calendar ask yourself, does this element **need** to be done on this hard date? If the answer is no, then the calendar is not the correct place for the element to be. 
Using dates to order your tasks it's a waste of time, because there will always be a thousand of reasons why you can't do all the things you allocate to that day. As these not done issues start piling up, you'll start to get stressed with a lot of things that you were not able to do on the dates you deceived yourself you were supposed to do at and then you need to spend time defining a new date. Use next actions in your `todo` instead.
#### Personal calendar
The `calendar/personal.org` file holds:
- [Appointments](orgmode.md#appointments): Meant to be used for elements of the org file that have a defined date to occur. You whether do it that date or not do it at all.  If you need to act on it use a `TODO` element, otherwise a headline is enough An example would be.
  ```org
  * TODO Meet with Marie
  * Internet's birthday
  ```
- [Recurring events](orgmode.md#recurring-tasks): Events that not only happen on the given date, but again and again after a certain interval of N hours (h), days (d), weeks (w), months (m), or years (y). The following shows up in the agenda every Wednesday:
  ```org
  * TODO Go to pilates
  ```
- [Tickler events](#tickler-management): Check the [Tickler management](#tickler-management) section for more details.
Each section has it's own tag: `:recurring:`, `:day:`, `:birthday:`, `:deathday:`, and the whole file has the `:event:` tag for easy filtering.
In rare cases you may want to use the [`DEADLINE`](orgmode.md#deadline) property if you want to be warned in the agenda some days before the date arrives or the [`SCHEDULED`](orgmode.md#scheduled) one in case you want to see in the agenda when you start working on the task. Again, don't waste time postponing these dates, if you do, you're using the system wrong.
#### Day planner
Note: I'm not yet using the day planner.
Some of my day events are semi-regular, meaning that the recurrence options are not powerful enough. For example, I usually go to pilates on Tuesdays, but some weeks I go at 18:00 and others at 19:00. In the past I used a script that interacts with [`ikhal`](khal.md) to create the elements of the day based on some questionary. The idea is to migrate the tool to create appointments in the day under the `diary.org` file using a `datetree` structure:
```org
* 2010
** 2010-12 December
*** 2010-12-20 Tuesday
**** TODO Go to pilates
```
I also use this file to add any diary annotations for my [life log](life_logging.md). Once [this issue is solved](https://github.com/nvim-orgmode/orgmode/issues/516) it will be really easy to add diary thoughts through the [capture feature](orgmode.md#capture).
### Todo files
The `todo` files are where you track the [todo list](#todo-list), which holds your projects and their next steps to work on. The `todo/personal.org`, `todo/work_1.org` and `todo/work_2.org` files of [the above schema](#design-your-system) will be divided into these level 1 headings:
- `* Necessary`: These projects need to be dealt with immediately and finished as soon as possible
- `* Desirable`: Here is where most of your elements will be, these are the ones that you think it's important to work on but there is no hard pressure.
- `* Optional`: These are the projects that it would be nice to work on, but if you don't it's fine.
Projects are any the second level headings with TODO keywords. To see the list of your projects just fold all the items in the `todo.org` file. 
Inside each section the elements are more less ordered by what I want to work on first. But all projects are actionable, so if I'm not in the mood to do the first ones, I tackle the rest. As such, I try not to spend too much time ordering them.
I find useful to split the tasks between my life silos, so that I don't even have a chance to think of anything of `work_1` when I'm doing my `personal` stuff or `work_2` stuff.
#### Project structure
Given the broad definition of what we consider a project and how they are usually cooked, the system that represents it must be equally flexible, quick to interact with and easy to evolve. 
Every project starts with the title:
```org
* TODO Improve task management system
```
Optionally you can add a description
```org
* TODO Improve task management system
  Using Openprojects is uncomfortable, I need to find a better system.
```
You may have noticed that the description doesn't follow the rules we defined for next actions, that's fine as you don't act on projects, but on their underlying actions. Nevertheless I like to start them with a verb. It may even make sense not to use TODO items but simple headings to define your projects. On one side you don't act on projects so it would make sense to use headings, on the other, it's also interesting to know the project state, which can be easily tracked with the TODO keywords. If you could tell apart headings from TODO items in the [agenda](orgmode.md#agenda) views it would make sense to use them. Right now `nvim-orgmode` let's you select in the agenda views only TODO items or TODO and headings, but you can't select only headings, so at the moment I don't see any good reason not to use TODO items for the projects.
To define the next actions of a project you can use checklists
```org
* TODO Improve task management system
  - [-] Read David Allen's GTD book
    - [x] Read chapters 6 and 7
    - [ ] Read chapters 8 and 9
  - [ ] Sum up the book in the blue book
```
As your checklists grow they may start to be uncomfortable, for example if it has:
- More than two levels of indentation: It may be hard to follow the logic of the task structure.
- A lot of elements: You can't archive parts of checklists, so as you complete elements, they will still be shown diverting your attention from the things you can actually act upon or making you loose time scrolling to find where they are.
In these cases it makes sense to promote the first level of headings to subprojects:
```org
* TODO Improve task management system
  * DOING Read David Allen's GTD book
    - [x] Read chapters 6 and 7
    - [ ] Read chapters 8 and 9
  * TODO up the book in the blue book
```
That way when `Read David Allen's GTD book` is done, you can archive it and forget about it. 
If the project starts having many subprojects, it may help to have a section "Outcomes" to define what do you want to achieve with the project. It can be accompanied with a "Next Steps" section to add any subproject or action that doesn't match the defined outcomes, and once you finish the project, you can refile them into new projects.
##### The NEXT state
It's useful to have a `NEXT` state to track the first next action you need to deal with for each project. That way when you open the file, you can go to the top of it and search for `NEXT` and it will lead you directly to where you need to work on.
#### Tag management
As explained in the [todo list](#todo-list) section, you can use tags to filter your tasks. I'm using the next ones:
- Area: Broad categories where the element falls in: `activism`, `caring`, `self-caring`, `home`, `digital services`, ...
- Type: I like to separate the tasks that are meant to survive (`maintenance`) from the ones that are meant to improve things (`improvement`). I use these only in the big projects.
- `:long_break:`: I'm using this tag to track the small projects that can be done in the [long pomodoro breaks](life_planning.md). Depending on the kind of long break that I need I then filter for the next tags:
  - `brainless`: If I want to keep on thinking on what I was doing, an example could be emptying the dishwasher, watering the plants, ...
  - `call`: If I want to completely change context and want some social interaction. For example call mom. 
- `:thinking:`: Used to track the elements where you just need to think about them. For example I like to have this list to have a prioritized list to deal with when I'm in the shower, while biking, hiking...
- `:relax:`: Used to track the things you can do when you just want to chill: really listen the music of a group, summarize a book, clean your music library...
- People involved: `:marie:`, `:billy:`, ...
Always use lowercase tags, it will save you some key strokes.
#### Priority management
You shouldn’t bother to create some external structuring of the priorities on your lists that you’ll then have to rearrange or rewrite as things change. Attempting to impose such scaffolding has been a big source of frustration in many people’s organizing. You’ll be prioritizing more intuitively as you see the whole list against quite a number of shifting variables. The list is just a way for you to keep track of the total inventory of active things to which you have made a commitment, and to have that inventory available for review.
Therefore I'm going to try not to use orgmode's priorities for the tasks.
#### Waiting tasks