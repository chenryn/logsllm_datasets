title:Peeling the Onion's User Experience Layer: Examining Naturalistic
Use of the Tor Browser
author:Kevin Gallagher and
Sameer Patil and
Brendan Dolan-Gavitt and
Damon McCoy and
Nasir D. Memon
Peeling the Onion’s User Experience Layer: Examining
Naturalistic Use of the Tor Browser
Kevin Gallagher
New York University
PI:EMAIL
Sameer Patil
Indiana University Bloomington
PI:EMAIL
Brendan Dolan-Gavitt
New York University
PI:EMAIL
Damon McCoy
New York University
PI:EMAIL
Nasir Memon
New York University
PI:EMAIL
ABSTRACT
The strength of an anonymity system depends on the number
of users. Therefore, User eXperience (UX) and usability of
these systems is of critical importance for boosting adop-
tion and use. To this end, we carried out a study with 19
non-expert participants to investigate how users experience
routine Web browsing via the Tor Browser, focusing par-
ticularly on encountered problems and frustrations. Using
a mixed-methods quantitative and qualitative approach to
study one week of naturalistic use of the Tor Browser, we
uncovered a variety of UX issues, such as broken Web sites,
latency, lack of common browsing conveniences, differential
treatment of Tor traffic, incorrect geolocation, operational
opacity, etc. We applied this insight to suggest a number of
UX improvements that could mitigate the issues and reduce
user frustration when using the Tor Browser.
CCS CONCEPTS
• Security and privacy → Usability in security and
privacy;
KEYWORDS
Tor; Tor Browser; User Experience; UX; Usability; Privacy;
Anonymity
ACM Reference Format:
Kevin Gallagher, Sameer Patil, Brendan Dolan-Gavitt, Damon Mc-
Coy, and Nasir Memon. 2018. Peeling the Onion’s User Experience
Layer: Examining Naturalistic Use of the Tor Browser. In 2018
ACM SIGSAC Conference on Computer and Communications
Security (CCS ’18), October 15–19, 2018, Toronto, ON, Canada.
ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/
3243734.3243803
Permission to make digital or hard copies of all or part of this work
for personal or classroom use is granted without fee provided that
copies are not made or distributed for profit or commercial advantage
and that copies bear this notice and the full citation on the first
page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy
otherwise, or republish, to post on servers or to redistribute to lists,
requires prior specific permission and/or a fee. Request permissions
from permissions@acm.org.
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5693-0/18/10. . . $15.00
https://doi.org/10.1145/3243734.3243803
1 INTRODUCTION
Anonymity plays a vital role in modern societies. Using the
protective cloak of anonymity, whistleblowers are able to
inform the public of malicious behaviors of governments
and corporations, journalists are able to contact sources and
perform research on subjects of interest, immigrants, abuse
victims, and other at-risk individuals are able to seek help
and information, and citizens are able to maintain privacy
and express ideas without fear. Anonymity helps many people
protect their rights or keep themselves safe from embarrass-
ment, physical danger, or in some cases, even death. Achiev-
ing anonymity in the Internet age is becoming increasingly
difficult due to the prevalence of tracking mechanisms and
metadata collection and requires more advanced tools [31].
One such tool is Tor [9], an overlay network that provides
metadata obfuscation by routing Internet traffic through
randomly selected, volunteer-run relays, with each relay pro-
viding a layer of encryption.
The strength of an anonymity system such as Tor depends
on the number of indistinguishable users, called its anonymity
set [8]. In an effort to strengthen the network and expand the
set of indistinguishable Tor users, the Tor Project provides
the Tor Browser that makes users less distinguishable by
countering some application-layer tracking techniques, such
as cookies, User-agent strings, or browser fingerprinting
mechanisms. Since the extent of anonymity is dependent
on the number of indistinguishable users, it is important to
provide user-centered security [44] by paying attention to the
User eXperience (UX) of the Tor Browser. Poor UX tends to
drive users away, thus negatively impacting the strength and
quality of anonymity provided by the Tor network. Further,
the more diverse the Tor user base, the less an adversary
may infer about any individual user. Those whose anonymity
needs may not be strict enough to tolerate UX frustrations
and inconveniences may still be willing to use the Tor Browser
if the UX is improved, thus diversifying the Tor user base.
Yet, there has been little research on the Tor Browser UX.
Existing work related to the topic is outdated [5], narrow in
focus [28], or limited to lab settings and specific tasks [32, 33],
thus limiting the utility and impact of the findings. We aim
to fill this gap via the following research question:
How do users experience routine Web browsing when using
the Tor Browser?
We addressed this question via a study that examined the
use of the Tor Browser in a naturalistic setting for a period
of one week, focusing particularly on identifying frustrations,
confusions, and problems. To this end, we collected quanti-
tative and qualitative data on the use of the Tor Browser
for routine Web browsing and online tasks. Based on 121
questionnaire responses, 11 interviews, and 19 write-ups from
19 study participants, we report on a number of UX issues,
such as broken Web sites, latency, lack of common browsing
conveniences, differential treatment of Tor traffic, incorrect
geolocation, operational opacity, etc. Specifically, we make
the following contributions:
(1) Detailed account of naturalistic use of the Tor
Browser.
We collected data regarding Tor Browser usage for routine
online activities in a naturalistic setting, uncovering a
number of important UX issues.
(2) Suggestions for improving the Tor Browser UX.
Grounded in the UX issues encountered during our study,
we identify and outline several practical solutions and
design guidelines to address and mitigate the problems
and improve the UX of the Tor Browser.
(3) Method for privately collecting naturalistic quan-
titative data on the Tor Browser UX at scale.
Our method for collecting quantitative UX data on Tor
Browser usage could be deployed to allow privately gath-
ering naturalistic data at scales significantly beyond those
possible in typical laboratory studies.
In the sections that follow, we first summarize prior re-
lated research on the UX, usability, and users of Tor. We
then describe our method, including study setup and sample.
Next, we present and discuss the quantitative and qualitative
findings on the Tor Browser UX. We discuss application of
the findings to derive practical suggestions for improving the
UX of the Tor Browser to help expand its user base and
support non-experts. Finally, we point out important limi-
tations of our study along with potential avenues for future
exploration.
2 RELATED WORK
As Dingledine and Mathewson observed [8], the strength of
an anonymity system depends on the number of users, thus
highlighting the importance of UX and usability for these
systems. Yet, in contrast to the large body of work on its
technical aspects, such as attacks, defenses, measurements,
etc. [19, 21, 22, 24, 29, 35, 39, 43], relatively little research
has focused on the UX and users of Tor. Existing research
on the user aspects falls under three main themes: UX of
anonymity systems and the Tor network, UX of the Tor
Browser in particular, and attitudes and practices of Tor
users.
2.1 UX of Anonymity Systems
K¨opsell et al. [27] performed one of the first studies on the UX
of anonymity systems by introducing latency ‘shocks’ for the
period of one month into ‘AN.ON,’ an early anonymity network.
These shocks occurred every 105 minutes, lasting for 15
minutes on each occasion. The results of the study indicated
that the number of users who leave an anonymity network
because of latency is linearly correlated to the amount of
latency for latency periods lasting fewer than 60 seconds. In
the same vein, Fabian et al. [11] attempted to quantify the
latency introduced by Tor and the corresponding loss of user
requests. They discovered that the median load time for a
Web page over Tor was 5 times higher when compared to
a direct connection, and the Domain Name System (DNS)
requests were 40 times slower. These measurements led them
to conclude that 74% of requests over Tor would be canceled,
causing significant user frustration. In 2014, Griffith [16]
examined the data on the Tor Metrics Web site and concluded
that Tor achieves less than 2% of the throughput of non-
Tor bandwidth which has remained relatively constant for
small files (when normalized by non-Tor bandwidth). Tor
performance for large files is however steadily improving,
albeit slowly.
Due to its importance for an acceptable UX, reducing la-
tency is an important topic of investigation. Jansen et al. [20]
implemented KIST, a kernel-informed socket management
algorithm which dynamically computes the amount of data
to write to a given socket. In a limited trial, KIST was shown
to reduce congestion by over 30% and latency by 18%, thus
increasing overall network throughput by nearly 10%. Later,
Jansen and Traudt [23] confirmed similar performance im-
provements in a real-world deployment of KIST within a
portion of the Tor network. Geddes et al. [14] proposed the
Avoiding Bottleneck Relay Algorithm (ABRA) which uti-
lizes messaging between clients and relays to facilitate path
selection in a manner that avoids over-utilized nodes, achiev-
ing nearly 20% increase in network utilization compared to
vanilla Tor. Despite such efforts, latency is to be an issue
for Tor users even today and addressing latency in the Tor
network is a priority for the Tor Project [10].
2.2 UX of the Tor Browser
In addition to the network based approaches mentioned above,
researchers have examined UX and usability considerations
from the user point of view. One of the very first such efforts
was a cognitive walk-through of four configurations of the Tor
software performed by Clark et al. [5]. Several user interface
improvements were proposed based on the difficulties users
encountered while performing the study tasks. However, these
results are no longer applicable as Tor has since switched
to the Tor Browser as the user-facing front end for the Tor
network.
Norcie et al. [33] identified the challenges individuals face
in adopting and using the Tor Browser,1 from installation
through to browsing. Nearly 2/3rds of the participants in the
laboratory based investigation involving 25 undergraduate
students faced problems while installing or using the Tor
1At that time, the Tor Browser was referred to as the Tor Browser
Bundle.
Browser. Norcie et al. proposed various interface modifica-
tions to address the uncovered problems, leading to notable
UX and usability improvements [32]. Similar to Norcie et al.,
our goal was to uncover challenges and problems that led
users to abandon the use of the Tor Browser for the task
at hand. However, the participants of the studies of Norcie
et al. [32, 33] used the Tor Browser in a laboratory setting
for a short time, performing specific tasks dictated by the
researchers. In contrast, our study examined use of the Tor
Browser in a naturalistic setting for routine online tasks over
a significantly longer period of one week.
On a different note, Victors et al. [40] proposed a DNS
for onion services implemented as a Tor Browser plugin
called OnioNS. OnioNS utilizes Tor network nodes and the
Bitcoin mining system to assign human readable domain
names to Tor Onion services, thus improving the UX by
allowing individuals to access these services without the
need to enter long cryptographically generated onion service
names.
2.3 Tor Users
Improving the Tor Browser UX requires understanding the
characteristics, attitudes, and needs of the Tor user popula-
tion. In this regard, McCoy et al. [30] analyzed the traffic
from an entry guard and an exit node under their control,
finding that many Tor users came from Germany, Turkey,
and Italy. They further discovered that a large amount of sen-
sitive information was sent over the Tor network in plaintext.
An investigation of the privacy perceptions of Americans
following the government surveillance revelations of Edward
Snowden found that 34% of those who were aware of the
matter made greater efforts to protect their online personal
information. Yet, only 2% of these individuals reported using
anonymity software such as Tor. Forte et al. [12] reported
that maintaining anonymity via Tor is used by some contrib-
utors to open collaboration projects (such as Wikipedia) in
order to guard against risks, such as surveillance, harassment,
violence, reputation loss, etc. Gallagher et al. [13] found that
experts and non-experts approach Tor use in notably dis-
tinct ways and exhibit differences in understanding of Tor
operation and threat model. They noted that the simplicity
and misunderstandings of non-experts in particular could
jeopardize anonymity due to a false sense of security. In a
similar vein, Winter et al. [42] found that users struggle to
understand onion services and face issues in navigating to
these resources and determining their authenticity.
3 METHOD
We tackled our research objective by studying naturalistic use
of the Tor Browser. In the following subsections, we describe
the rationale behind our study design, details of participant
recruitment and study deployment, and approaches used for
data analyses, respectively.
3.1 Study Design and Instruments
We wished to collect data from individuals as they used
Tor Browser for their routine online tasks. To ensure suf-
ficient data quality and quantity, we used three separate
data collection mechanisms: opportunistically timed short
online questionnaires, open-ended written self reports, and
one-on-one semi-structured interviews. Collectively, the three
approaches were designed to meet the following requirements:
• Use a lightweight mechanism with minimal burden that
• Respect privacy by avoiding capturing screens and
• Be independent of a specific place or time, thus allowing
• Capture sufficiently detailed information (as in a con-
• Span a reasonable period that constitutes extended
collection to occur at the participant’s convenience.
trolled laboratory setting).
does not require instructions.
URLs (unless provided voluntarily).
use.
Specifically, we designed three online questionnaires to
gather information whenever participants experienced a prob-
lem with the Tor Browser. Each questionnaire asked for the
nature and details of the problem along with the option to
provide the Web site(s) involved. If no problem was encoun-
tered, the questionnaire could be closed without answering.
The questionnaires respectively targeted the following three
circumstances: ending a Tor Browser session (Tor Browser
Questionnaire), switching from the Tor Browser to another
browser (Switched Browser Questionnaire), and starting a
new browsing session directly with a non-Tor browser (Other
Browser Questionnaire). The questionnaires are included in
Appendix A.
In a laboratory setting, researchers have direct access to
the participants and can trigger data collection upon observ-
ing relevant participant actions. In contrast, in a naturalistic
setting, it is not straightforward to seek questionnaire input
at the most opportune time. Relying on participants to re-
member to fill out a questionnaire each time they encounter
a problem is unreliable. However, continually monitoring
user activity to detect when an issue is encountered can be
invasive and difficult. We addressed this aspect via a process-
monitoring Python script that kept track of the creation and
termination of the following browser processes: Tor Browser,
Firefox, Chrome, Opera, Safari, and Edge. To detect browser
processes, we used the psutil library [37]. For Windows,
simply checking the existence of the browser process was suf-
ficient to know whether the participant closed the application.
On Mac computers, however, processes continue to run in
the background even after closing the window(s) associated
with them. Therefore, the Mac script used the Quartz library,
which is part of pyobjc [34], to monitor active windows as-
sociated with each process. If the number of active windows
fell below a pre-determined threshold unique to each browser,
the browser was marked as closed. The thresholds for each
browser were determined by counting the number of active
browser windows with visible windows open and closed.
Figure 1: State and logic flow of the browser monitoring script used to select and present the appropriate
questionnaire.
When the script detected that any of the browser processes
were terminated, it launched the appropriate questionnaire
according to the following rules: