Table II shows the results of our consistency probing. For
each host with signature data from at least one signature-
providing application open on all associated addresses, we
ﬁnd a high level of consistency—96% for routers and 97% for
servers. This roughly agrees with previous work showing that,
while it is not exceedingly rare for hostnames with both IPv4
and IPv6 addresses to represent different machines, 93% of the
time they in fact do represent the same system [12]. For servers,
our results cover nearly 60% of the hosts in the SB host list.
On the other hand, we can make a signature-based comparison
for only roughly 7% of the routers in the RB list. While the
coverage in RB is low, we note that, since routers have less
general openness than servers, we expect our consistency check
for routers to be useful in fewer cases. Even with the low
coverage we believe the high consistency rate validates our
methodology for aggregating labels into hosts.
The small fraction of hosts for which a signature match
between the IPv6 and IPv4 addresses fails suggests operators
using a separate server for IPv6 than for IPv4 behind the
hostname. We can speculate as to various explanations for such
a conﬁguration, including matching resources to load, where
the IPv4 address points to a load balancer, as most trafﬁc is
via IPv4, while the IPv6 points to a single speciﬁc server that
supports IPv6. We do not exclude the hosts without matching
signatures nor those failing matches, mainly for the reason
that we contend that the semantics of a single hostname are a
single service. As such, whether it is deployed on one physical
machine, conﬁgured identically, or neither, Internet users and
application routers do not expect that the services available via
a hostname differ based on the network protocol used to reach
them, just as they do not expect DNS-based load balancing
with multiple A records for a name to provide different service
depending on the address their host happens to select from the
several available. In other words, while the calibration in this
section is useful for understanding the underlying population
of machines that our hosts represent, the policy misalignment
we ﬁnd is orthogonal to and no less troubling whatever these
signature matching results for any name show.
IV. BASELINE POLICY DISCREPANCY
As a bound on our ability to match ﬁngerprints, we ﬁrst
assess the general openness of our targets to analyzing the
information we used for consistency checking. If we collapse
Overall, 26% of routers and 26% of servers were reachable
in IPv6 for at least one application not reachable in IPv4;
ﬁve of eight tested applications are more open over IPv6 for
5
signal less attention paid to blocking its trafﬁc over IPv6 than
has been deployed for IPv4 [18]. Further, we found that the
NTP version command we used can leak the device vendor
and version in many cases, which may be helpful to attackers
targeting speciﬁc vulnerabilities.
SSH: The second most open application we see is SSH.
SSH also has the second largest discrepancy between the two
protocols, with IPv6 being more than twice as open; 166%
more routers allow connecting over IPv6 than IPv4. As SSH
is a management application allowing control over the device,
this is a troubling ﬁnding. If exploited via brute-force password
attempts, harvested passwords used by administrators on other
compromised sites or hosts, or via software vulnerabilities, SSH
access could lead to stealthy and large-scale attacks. As with
most router vulnerabilities, these might include, for example,
redirecting trafﬁc for speciﬁc websites, email, or DNS queries
to attackers, and facilitating other various forms of man-in-the-
middle attacks. Further, since routers are specialized systems
with typically proprietary operating systems and less general-
purpose computing power, they may be less likely than servers
to be bolstered with protections against a range of SSH-based
attacks—e.g., password attempt limits, SSH key-only logins,
and logging failed attempts.
BGP: The third most open application is BGP, which we would
expect to be running on routers, but not to necessarily be open
for anyone to connect. An open BGP port on routers leaves
them potentially more susceptible to various TCP-based attacks,
such as SYN ﬂoods, and blind in-window attacks [36]. The
fact that 73% more hosts completed the TCP handshake over
IPv6 than IPv4, suggests, at the very least, that some additional
protection, likely via an access control list, has been set up on
these devices for IPv4 but not for IPv6. Hence, the deployed
security policy on these routers for IPv6 contradicts their IPv4
policy. As routers constitute the backbone of the Internet, and
BGP is the protocol by which Internet routers communicate
where to send trafﬁc, vulnerabilities in BGP pose a serious
threat.
Telnet: The fourth most open application is Telnet. We were
surprised to discover so many routers accept global TCP
connections to Telnet at all (9% of the dataset over any IP
version), given the fact that this application has been replaced
by SSH as a primary management interface for routers, in large
part due to its inherent insecurity. This insecurity stems mostly
from the fact that Telnet sends trafﬁc unencrypted and that,
unlike SSH, it also has no means of validating the identity of
the server that a client connects to (which an SSH client can do
by checking the ﬁngerprint of the key that the server provides
during connection). Moreover, beyond server authentication,
there is no key-based authentication for clients in Telnet either;
so, all connections involve sending a user name and password in
clear text to a server whose identity can not be veriﬁed. Router
Telnet sessions have even been targeted by nation states to
capture the conﬁguration of routers, leading to deeper network
breach [24]. As with SSH, the danger of weak passwords that
can be brute-forced and the possibility of shared passwords
across sites allowing compromised credentials to be used to
gain broader access, mean that the security posture of these
devices is degraded simply by having Telnet exposed. As there
are again more than double—156% more—IPv6-open routers
Fig. 1: Percentage of 25K dual-stack routers (RB) respon-
sive to ping that were open via IPv4 and/or IPv6 for each
application tested. For each application, the green bar
corresponds to reachability (connection success) over only
IPv4, the red bar only IPv6, and the blue bar reachability
over both. Beside each bar we report the percentage of
hosts tested that were only reachable by IPv4 or IPv6,
and beside each application is the percentage difference in
reachability over IPv6 compared to IPv4.
the routers, and six of eleven tested applications are more
open over IPv6 for servers. While 18% of routers and 17%
of servers we tested were reachable in IPv4 for at least one
application not reachable in IPv6, some applications can have
default conﬁgurations that do not listen in IPv6. The policy
discrepancy landscape overall is profoundly varied; a staggering
44% of routers and 43% of servers had different application
reachability (i.e., connection success) depending on version
of IP used. At a high level, this suggests a large difference
in services that dual-stacked hosts effectively make available
(intentionally or not) over one version of IP versus the other.
A. Router Application Openness Results
Figure 1 shows the protocol discrepancy observed between
IPv4 and IPv6 for routers. For each application, we show the
percentage open over IPv4 and/or IPv6, the percentage open
over only IPv4 or IPv6, and the difference in openness of
IPv6 over IPv4. Particularly troubling is an observation that
the three most open protocols in IPv6 are high-value: SSH,
BGP, and Telnet; these protocols were 166%, 73%, and 156%
more open in IPv6 than IPv4, respectively. We next discuss
each application result and comment on its possible impact.
NTP: Among tested applications, NTP is most open overall, but
discrepancy between the two protocols is relatively moderate
at 14% more openness for IPv6. The fact that NTP is the most
reachable application in this dataset is not totally unexpected,
given that this application is commonly enabled by default
on network devices (e.g., [1]). A surprising ﬁnding is that
a relatively large percentage of the routers only respond via
one protocol or the other relative to those that respond on
both. This suggests some peculiarity in default router NTP
conﬁgurations. While access to NTP is not a critical risk, it
has been leveraged for large-scale distributed denial-of-service
(DDoS) attacks in the past, and lagging IPv6 protection may
6
}+156%}−6%}−12% 10 15 20 25NTPSSHBGPTelnetSNMPHTTPHTTPSDNS}−3%}+14%}+166%}+73%0.4%6.2%0.3%3.0%3.9%0.6%1.8%0.2%18.0%15.3%0.4%0.3%0.4%0.2%0.2%0.1%}+285% 0 5Percent of Population OpenIPv6IPv4Both(a) Servers (SB)
Fig. 2: Percentage of 520K dual-stack servers responsive to ping that were open via IPv4 and/or IPv6 for each application
tested (ﬁgure 2a) and that of 137K (37% of all) servers that were not responsive to HTTP (ﬁgure 2b). Seven of the
eleven applications tested are more open in IPv6, including the security-critical SSH, SNMP, SMB, and Telnet services.
The subset of servers that are not HTTP servers are more open than the general server population.
(b) Servers (SB) unresponsive over port 80
with Telnet exposed, the deployment of IPv6 here has markedly
reduced security in this sample of routers.
SNMP: We attempted SNMPv2c requests over UDP/161 for the
sysName.0 MIB using the common default public community
string. Three percent of routers responded with data. We did
not attempt to use the common private community to alter
conﬁguration on systems, nor did we collect any data from
the device. However, when we did our follow-on probes for
signature matching described in § III, we additionally performed
SNMP gets for the sysDescr.0 MIB, which allowed us to
aggregate operating system versions, the large majority of which
reported being Cisco. While the read-only public community
may itself not necessarily pose a catastrophic risk to the device,
it may be used to leak version information, ﬁnd weaknesses in
conﬁguration, or gather information about connected devices.
All of this can be useful reconnaissance for attackers, especially
when paired with published vulnerabilities. Furthermore, the
fact that these devices expose SNMP for nearly four times
(285%) more hosts over IPv6 than IPv4 suggests that many
operators took steps to block this management application over
IPv4. If these operators are relying on access-lists, ﬁrewalls,
or other port ﬁltering for protection of SNMP but keeping
the default community strings in place, it is likely that this
population of routers could be reconﬁgured using the private
community over IPv6, a much more direct and immediate threat
than that posed by the read-only probe we attempted. As such,
we consider this a serious vulnerability.
HTTP and HTTPS: The web protocols were not very common
on routers, and are the ﬁrst to break the pattern of greater
IPv6 openness, with each slightly more closed for IPv6 than
IPv4 (-3% and -12%, respectively). For routers with web
management enabled, this means security is probably no worse
under IPv6 than IPv4. There were a small handful of hosts
where access was only allowed over IPv6 (78 routers for HTTP
and 51 HTTPS), suggesting, perhaps, at least some cases where
IPv4 access was blocked but similar blocks were not in place
for IPv6. Embedded web-based management applications are
notorious for vulnerabilities, and this capability is rarely used by
professional router operators. Having an unknown web-based
attack vector over IPv6 enabled, even for this small number of
hosts is problematic. Fortunately, the scale here is small.
DNS: Like HTTP and HTTPS, DNS was less open for IPv6,
though, again, a small handful of routers (35) only responded to
DNS over IPv6 and not IPv4. Aside from application-speciﬁc
vulnerabilities (e.g., BIND CVEs) that might impact the device
if DNS is exposed, other notable security implications of having
DNS open to the public when policy would dictate otherwise
have to do with (i) leaking internal-only DNS records and
(ii) facilitating DDoS attacks using DNS. After HTTP, router
openness for the two IP versions was most similar for DNS.
Overall, the baseline protocol differences we found in this
population are troubling. The fact that more than a quarter of
routers had at least one application accessible over IPv6 that
was closed over IPv4, including some high-value application
ports for attackers, means that the routers in our sample are
generally more vulnerable under IPv6 than IPv4 (at least on
the tested common applications). Since network operators are
at the forefront of understanding and deploying IPv6, this is
somewhat surprising. We conjecture that network hardware
may be subject to less security audits and scrutiny than servers
are, although it is also possible that, as router operators usually
deploy IPv6 (naturally) before the server operators that rely on
it do, they may be doing so under either greater time pressure
7
}−8%SNMP4.5%0.4%0.3%0.1%0.5%6.7%}−92%}+46%}+25%}−7%}+40%}+5%}−7%}−35%}+52%4.9%0.7%4.1%18.8%1.2%3.8%3.1%0.8%1.0%1.9%0.1%0.1%0.3%0.5%0.3%0.1% 10 0 20 30 40 50 60 70}+109%HTTPHTTPSSSHFTPDNSNTPRDPSMBTelnetMySQLIPv6IPv4BothPercent of Population Open}+112% 20}−76%0.7%0.4%0.6%0.0%SSHHTTPSDNSNTPFTPTelnetRDPSMBSNMPMySQL}+345%}+49%}−4%}+15%}+19%}−7%}+49%}+5%0.8%3.6%1.0%2.1%0.9%0.3%2.7%4.7%0.6%0.4%1.2%0.2%0.1%0.0%0.1%0.8% 0 5 10 15IPv6IPv4BothPercent of Population Openor with fewer existing institutional tools and processes for
assuring consistent security policy on routers.
B. Server Application Openness Results
Figure 2 shows the protocol discrepancy we observed
between IPv4 and IPv6 for the servers we probed (dataset
SB). As with the router set, the general pattern is for a more
open security policy in IPv6, with HTTPS, SSH, NTP, Telnet,
SMB, and SNMP more open. The overall discrepancy we ﬁnd
in the server list between IPv4 and IPv6 is smaller than in the
router data, relatively speaking. However, the sample size is
twenty times larger. Thus, in absolute terms, even the smaller
differences between IP version found in this dataset translate
to thousands of potentially inadvertently exposed systems.
Because characteristics of the server dataset are heavily
inﬂuenced by the overwhelming presence of HTTP servers, we
examine the server dataset in two dimensions: all responsive
servers (ﬁgure 2a) and the 191K (37%) server hosts that respond
on port 80 on neither IPv4 nor IPv6 (ﬁgure 2b). Other than for
NTP—which is nearly ﬂat, going from 52% to 49% more open
in IPv6, and HTTPS—which drops from 40% to 15% more open
in IPv6, mostly due to the elimination of a single large hosting
provider’s servers—the fraction of hosts for which IPv6 is more
open than IPv4 increases for every tested application in this non-
HTTP subset. For instance, SSH’s openness in IPv6 relative to
IPv4 increases from 5% to 19% (≈4x), Telnet jumps from 46%
to 112% (≈2.5x), SMB from 25% to 49% (≈2x), and SNMP
from 109% to 345% (≈3x). These results suggest that dual-
stacked non-web servers generally have more policy discrepancy
and, thus, apparently more IPv6 vulnerability than the overall
dual-stacked server population suggests. Our intuition behind
examining non-HTTP-responsive servers separately stems from
the fact that we believe these servers are less likely to be
behind load balancers or IPv6 gateways (e.g., as offered by
CloudFlare [2]). Since these load balancers and gateways
generally do not forward non-web trafﬁc to the actual server
behind them and since they may terminate the IPv6 connection
(in the case of gateways, that is, in fact, their function), they
are much less likely to show IPv6 capability on non-web ports.
Thus, looking at the non-web subset of servers may be more
indicative of the typical conﬁguration of the servers actually
providing the content or service. As with the router list, we
next discuss each application result for servers and comment
on its possible impact.
HTTP and HTTPS: HTTP was less open on IPv6 than IPv4
by 7%, but there were 3.5K servers not reachable over IPv4 that
were reachable on IPv6. Since it is unlikely that dual-stacked
public websites would purposefully allow only access via IPv6,
it is possible some of these servers are hosting non-public
content. With respect to HTTPS, we did ﬁnd a large percentage
of servers (19%) only reachable over IPv6. Digging deeper
into this peculiar group, we found that 94% of these IPv6-only
HTTPS servers (92K hosts) belong to a single large European
hosting provider. Of the hosts operated by this provider, 99%
have HTTP open on both IPv4 and IPv6, while HTTPS is only
served for IPv6. We contacted this provider but did not receive
a response and, thus, have no explanation as to the intention
behind this conﬁguration.
SSH and Telnet: Both remote terminal applications were more
open for IPv6, at 5% and 46% (respectively) in the overall
server set, and 19% and 112% more open for IPv6 in the non-
webserver set. Although the policy mismatch percentages are
more modest than for routers, in absolute terms 20K servers
were only reachable on SSH via IPv6 (versus only 6.5K that
were reachable by IPv4). In addition, the non-webserver set
shows a more worrying openness pattern, perhaps as a result
of these systems having a more varied role, or our probes
not being dropped by intermediate gateways. For Telnet, 2.5K
were only reachable over IPv6 and 1.4K only over IPv4. This
means that 23K servers could be vulnerable to brute-force
password or server vulnerability exploits that were protected
via IPv4. Digging a bit deeper at cross-application groups, we
were curious if the IPv6-open SSH servers were more likely to
also be open on Telnet, as it is used similarly to SSH and may
also be neglected to be blocked by the same operators. Indeed,
a disproportionate 7.3% of these SSH servers were also open
to responding over IPv6 on Telnet (versus 0.5% in the overall
sample that had Telnet open for only IPv6, regardless of SSH
status). As SSH brute-force scanning is highly prevalent in
IPv4 [30], it is reasonable to assume that such attacks over
IPv6 are on the horizon. While random address scanning may
not be common in IPv6 (though, see § VIII), once a hostname
for a dual-stacked server is discovered, brute-force password
guessing against that server over IPv6 is feasible. Since 20K
servers are running SSH but have blocked it on IPv4, they may
be less likely to utilize other SSH security measures.
SMB and RDP: The Server Message Block (SMB) application
layer protocol is generally used by Microsoft Windows systems