### Title: AEPIC Leak: Architecturally Leaking Uninitialized Data from the Microarchitecture

CPU vulnerabilities pose a significant threat to the security enhancements provided by both software and hardware. While the discovery of transient-execution attacks has heightened interest in microarchitectural CPU vulnerabilities, architectural CPU vulnerabilities remain relatively underexplored.

In this presentation, we systematically analyze existing CPU vulnerabilities, demonstrating that CPUs are susceptible to vulnerabilities with root causes similar to those found in complex software. We highlight that transient-execution attacks and architectural vulnerabilities often stem from the same type of bug and identify areas that have been overlooked. Focusing on these overlooked areas, we investigate architecturally improperly initialized data locations.

We uncover AEPIC Leak, the first architectural CPU vulnerability that leaks stale data from the microarchitecture without relying on a side channel. AEPIC Leak affects all recent Intel CPUs based on the Sunny Cove architecture (i.e., Ice Lake and Alder Lake) and does not require hyperthreading to be enabled. This vulnerability exploits the incorrect return of stale data when reading undefined APIC-register ranges, leaking data that is transferred between the L2 and last-level cache, including SGX enclave data, from the superqueue.

AEPIC Leak targets both data in use, such as register values and memory loads, and data at rest, such as SGX-enclave data pages. Although AEPIC Leak is a sampling-based attack, we introduce techniques to precisely control the page and offset from which the attack leaks data. Our end-to-end attack can extract AES-NI, RSA, and even Intel SGX attestation keys from enclaves within a few seconds.

We discuss potential mitigations and conclude that the only short-term solutions for AEPIC Leak are to disable APIC MMIO or avoid relying on SGX.