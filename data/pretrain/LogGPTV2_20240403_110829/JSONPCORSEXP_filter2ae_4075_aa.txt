# JSONP和CORS跨站跨域读取资源的漏洞利用（附带EXP）
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
JSONP 教程
Jsonp(JSON with Padding) 是 json 的一种”使用模式”，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。
## 一、服务端JSONP格式数据
## 二、客户端实现 callbackFunction 函数
    function callbackFunction(result, methodName)
    {
        var html = '';
        for(var i = 0; i ' + result[i] + '';
        }
        html += '';
        document.getElementById('divCustomers').innerHTML = html;
    }
客户端页面完整代码
    JSONP 实例
    function callbackFunction(result, methodName)
            {
                var html = '';
                for(var i = 0; i ' + result[i] + '';
                }
                html += '';
                document.getElementById('divCustomers').innerHTML = html;
            }
jQuery 使用 JSONP
        JSONP 实例
    $.getJSON("http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=?", function(data) {
        var html = '';
        for(var i = 0; i ' + data[i] + '';
        }
        html += '';
        $('#divCustomers').html(html);
    });
**jQuery – AJAX get() 和 post() 方法**
**jQuery $.get() 方法**
    向页面发送 HTTP GET 请求，然后获得返回的结果
**jQuery $.post() 方法**
    向页面发送 HTTP POST 请求，并获得返回的结果
**jQuery AJAX get() 和 post() 方法**
jQuery get()
使用 $.get() 方法从服务端异步获取数据
    菜鸟教程(runoob.com)
    发送一个 HTTP GET 请求并获取返回结果
jQuery post()
使用 $.post() 方法从服务端异步获取数据
    菜鸟教程(runoob.com)
    发送一个 HTTP POST 请求页面并获取返回内容
**jQuery jsonp跨域请求**
**jquery的jsonp方式跨域请求**
最简单的方式，只需配置一个dataType:’jsonp’，就可以发起一个跨域请求。jsonp指定服务器返回的数据类型为jsonp格式，可以看发起的请求路径，自动带了一个callback=xxx，xxx是jquery随机生成的一个回调函数名称。
这里的success就跟上面的showData一样，如果有success函数则默认success()作为回调函数。
        跨域测试
回调函数你可以写到下(默认属于window对象)，或者指明写到window对象里，看jquery源码，可以看到jsonp调用回调函数时，是调用的window.callback
然后看调用结果，发现，请求时带的参数是：callback=showData；调用回调函数的时候，先调用了指定的showData，然后再调用了success。所以，success是返回成功后必定会调用的函数，就看你怎么写了。
        跨域测试
指定callback这个名称后，后台也需要跟着更改。
        跨域测试
后台代码：
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setCharacterEncoding("UTF-8");
        response.setContentType("text/html;charset=UTF-8");
        //数据
        List studentList = getStudentList();
        JSONArray jsonArray = JSONArray.fromObject(studentList);
        String result = jsonArray.toString();
        //前端传过来的回调函数名称
        String callback = request.getParameter("theFunction");
        //用回调函数名称包裹返回数据，这样，返回数据就作为回调函数的参数传回去了
        result = callback + "(" + result + ")";
        response.getWriter().write(result);
    }
jsonp方式不支持POST方式跨域请求，就算指定成POST方式，会自动转为GET方式；而后端如果设置成POST方式了，那就请求不了了。
jsonp的实现方式其实就是脚本请求地址的方式一样，只是ajax的jsonp对其做了封装，所以可想而知，jsonp是不支持POST方式的。
总结：jQuery
ajax方式以jsonp类型发起跨域请求，其原理跟脚本请求一样，因此使用jsonp时也只能使用GET方式发起跨域请求。跨域请求需要服务端配合，设置callback，才能完成跨域请求。
## 三、JSONP EXP
### 方法一：JavaScript调用
弹窗代码（弹窗JSON数据）：
    JSONP EXP跨域测试
获取JSON数据并且Base64编码发送到远程服务器的DNSLOG：
    JSONP EXP跨域测试
    JSONP EXP跨域测试
### 方法二：jQuery jsonp跨域请求
弹窗代码（弹窗JSON数据）：
    JSONP EXP跨域测试