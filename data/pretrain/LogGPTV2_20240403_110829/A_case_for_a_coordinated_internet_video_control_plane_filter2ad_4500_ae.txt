### Hybrid Strategy and CDN Variability

The hybrid strategy, while generally effective, has a small but non-zero failure rate. This is primarily due to some clients using high bitrates, which can lead to the rejection of a small number of clients.

**CDN Variability:**
In this scenario, between epochs 20-60, the previously best-performing CDN experiences a significant degradation, with the average rebuffering ratio increasing to 13%, before eventually recovering by epoch 60. Figure 9(b) illustrates how different strategies respond to this variability. Notably, global coordination maintains a zero failure rate, which is possible due to our normalization techniques.

### Performance Metrics
- **Average Utility (min.):** 
  - Epochs: 0, 20, 40, 60, 80
  - Strategies: Global Coordination, Baseline, Hybrid
- **Failure Rate (%):** 
  - Epochs: 0, 25, 50, 75, 100
  - Strategies: Global Coordination, Baseline, Hybrid

### Buffering Ratio Over Time
- **Time (days):** 0, 1, 2, 3, 4, 5, 6, 7
- **Buffering Ratio (%):** 
  - Observed: 2.91
  - Projected: 1.41
  - Historical: 1.64
  - CDN1: 2.11
  - CDN2: 2.62
  - CDN3: 3.27

### Summary of Results
- **Global Control Plane:** Works well in all scenarios, including those with CDN performance variation and flash crowds.
- **Hybrid Approach:** Using the coordinator only at startup and relying on client-side adaptation can be effective in common scenarios.
- **Performance Degradation:** The hybrid approach may suffer under CDN variability and flash crowds. In such cases, a control plane can implement more flexible policies, such as reducing all client bitrates to maintain a zero failure rate.
- **Benefits of Control Plane:** Can be realized through simple extrapolation using predictions from previous epochs.

### Discussion
#### Scalability
A key concern with global optimization is scalability, particularly with respect to the number of clients and the time required to respond to network events. Our unoptimized Java implementation takes approximately 30 seconds to run the global optimization for 10,000 clients, 4 CDNs, and 5 bitrates. We speculate that typical video utility functions will exhibit a diminishing property, meaning the incremental utility of reducing buffering from 10% to 5% is higher than from 6% to 1%. Techniques like "lazy evaluation" can speed up the greedy step. Additionally, we envision scaling the control plane by logically partitioning different geographical regions and running one instance per region.

#### Switching Tolerance
A natural question is how much bitrate switching users can tolerate. Studies suggest users are sensitive to both frequent switches and sudden changes in bitrate. However, there is no clear quantitative understanding of the tradeoff between switching and maintaining high bitrate and low buffering. As future measurement studies provide more clarity, this tradeoff can be incorporated into the control plane optimization function.

#### Interaction with CDNs
- **Current Practices:** Measurement studies suggest that CDNs are largely optimizing for latency. Content providers often use multiple CDNs, making cross-CDN optimization challenging.
- **APIs and Collaboration:** New generation architectures where CDNs expose APIs to content providers and controllers can alleviate potential issues. Fine-grained information on available capacity and current load can inform better control plane strategies.
- **Federated CDNs:** A federated CDN integrates technology and business partnerships between carriers and CDNs to provide a unified offering. The global coordinator proposed in this paper complements a federated CDN and can enable high-quality video distribution.

#### Multiple Controllers
We assume a model where different controllers are independent, with limited impact on each other. In the future, controllers could expose APIs to exchange performance data and policy constraints, similar to how ISPs use BGP to coordinate.

### Related Work
- **Client-Side Measurements:** Variability in client-side throughput across ISPs and sessions is well-documented. Adaptive streaming technologies aim to ensure an uninterrupted viewing experience.
- **Client-Side Adaptation:** Commercial products perform client-side adaptation, but there is room for improvement. A global control plane can coordinate actions across multiple viewers to address variability and overload.
- **Video Coding:** Layered coding and multiple description coding offer alternatives for graceful degradation, but they impose higher complexity. A video control plane can leverage these solutions for smoother performance degradation.
- **CDN and Server Selection:** Proprietary algorithms based on proximity and latency are used for server selection within CDNs. There is no concerted effort to dynamically choose CDNs, highlighting the need for a global video control plane.

### Conclusions
User expectations for high-quality video delivery—low buffering, low startup delays, and high bitrates—are continuously rising. While HTTP-based adaptive streaming has made it easier for content providers to reach a wide audience, the underlying network and delivery infrastructure remain unreliable. Our measurements from over 200 million sessions confirm that more than 20% of sessions suffer quality issues. A video control plane that uses measurement-driven performance feedback to adapt video parameters can significantly improve video quality. Challenges include scalability, interaction with CDNs, and coordination among multiple providers and controllers.

### Acknowledgments
We thank Sujata Banerjee and the anonymous reviewers for their feedback. We also thank Ganesh Ananthanarayanan and Justin Ma for their comments on early drafts.

### References
[References listed as provided, with proper formatting and links.]

This optimized version aims to enhance clarity, coherence, and professionalism, making the text more accessible and structured.