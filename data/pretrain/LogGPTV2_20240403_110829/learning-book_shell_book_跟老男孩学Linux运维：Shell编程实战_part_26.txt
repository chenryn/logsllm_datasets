#1/bin/sh
RED_COLOR=*\E[1:31m
GREEN_COLOR='\E[1:32m
YELLOW_COLOR='\E[1:33m
BLUE_COL0R='\E[1;34m
RES='\E(On'
menu()(
cat <<END
<==采用cat命令方式打印某单，推荐此方式，当然了，还可用select循环
打印票单，不过不常用。
1.apple
2.pear
3.banana
END
menu
case*sfruit*in
1)
2)
3)
*)
echo-e*no fruit you choose.*
esac
---
## Page 193
第9章case条件语包的应用实践
参考答案3：
[root@oldboy scripts]cat 9_2_3.ah
RED_COLOR='\E[1;31m*
! /bin/sh
GREEN_COLOR=′\E[1;32m*
YELLOW_COLOR=\E[133m
BLUE_COLOR=*\E[1;34m*
,w1a\,=S3α
function usage(){
#<==将使用帮助写成unage通数，方便重复使用。
echo*USAGE:$0(1121314)*
exit 1
funetion nenu () (
#<==将某单内容写成函数，方便重复使用，看起来也更专业
1.apple
cat <<END
2.pear
3.banana
END
function chose()(
<==将输入变量判断内容写成函数，方便重复使用，看起来也更专业。
case *$fruit* in
1)
(2
echo -e *$(GREEN_COLOR)pearS(RES)*
3)
echo
*)
usage
esac
function main() (
J
<=主函数，执行定文的所有函数，这是程序的入口，模报c语言
的编程方式，看上去更高大上。
menu
chose
main
上
<==执行主函数，进而执行She11脚本。
说明：这是一个比较专业、规范的脚本，即美观又实用，在同质化竞争激烈的今
天，我们就要处处比别人做得好。不是好一点点，而是好很多！那么从写脚
本开始做起吧，伙伴们。
---
## Page 194
m跟老男孩学Linux运维：Shell编程实战
执行结果如下：
[rooteo1dboy scripts]# sh 9_2_3.sh
1.apple
2.pear
3.banana
pls input ycur choice:1
app1e
<==这是红色字
[root8o1dboy scripts]# sh 9_2_3.8h
1.app1e
2.pear
3.banana
pls input your choice:2
pear
<==这是绿色字
[rooteoldboy scripts] sh 9_2_3.sh
1.apple
3.banana
2.pear
pls input your choice:3
banana
<==这是黄色字
[rooteoldboy scripts]# sh 9_2_3.sh
1.apple
2.pear
3.banana
pls input your choice:4
USAGE: 9_2_3.sh (1121314)
9.3实践：给输出的字符串加颜色
9.3.1给输出的字符串加颜色的基础知识
在Linux脚本中，可以通过echo的-e参数，结合特殊的数字给不同的字符加上颜
色并显示。
范例9-3：给内容加上不同的颜色。
内容的颜色可用数字表示，范围为30～37，每个数字代表一种颜色。代码如下：
<==32n表示绿色字。
<==31n表示红色。
echo-e*\033[33m 棕色字o1dboy trainning\033[0m*
<==33m表示棕色字（browm），
和黄色字相近。
echo-e*\033[34m蓝色字o1dboy trainning \033[0m*
<==34m表示蓝色字。
<==35m表示洋红色字（magenta）
和紫色字相近。
oo.-
<=m36m表示蓝绿色字（cyan），
和浅蓝色字相近。
<=37m表示白色字。
---
## Page 195
第9章C8Se条件语句的应用实践m
说明：不同的数字对应不同的字体颜色，详情请参见系统帮助（来自使用man
console_codes命令的结果）。
执行结果见图9-3。
]e), auyuyes sogpio 1g]c, a- oqpa e[saduos fog(cgno
0],3uumiop1o agg], a- qpas[s o1
自色字oldbey traieing
图9-3不同的数字对应的字体颜色执行结果图
范例9-4：通过定义变量的方式给字体加颜色（推荐使用的方式）。
[rootθoldboy scripta]cat 9_4.sh
1/bin/bash
RED_COLOR=′\E[1;31m*
GRBEN_COLOR=′\E[1;32m*
YELLOW_COLOR='\E[1;33m*
BLUE_COLOR=*\E[1:34m*
PINK='\E[1:35m
RES='\E[Om'
echo-e
echo -e
“s（RED_COLOR）red color=$（RES）
*S（YELLOW_COLOR)=***yellow color=*===S（RES)
echo -e
"$（BLUE_COLOR).*·blue color*·***S（RES)*
echo -e
*$（GREEN_COLOR）***=green color=*==S（RES)*
-e
"S（PINK}===pink color=..=S（RES)
执行结果见图9-4。
图9-4执行结果
9.3.2结合case语句给输出的字符串加颜色
范例9-5：请开发一个给指定内容加指定颜色的脚本。
要求：使用case语句及通过脚本传人指定内容和指定颜色，在脚本命令行传2个
---
## Page 196
mB跟老男孩学 Linux运维：Sheli 编程实战
参数，给指定的内容（第一个参数）加指定的颜色（第二个参数），演示效果如图9-5
所示。
oy scripta]# sh 9_5_1. sh
9.5,1
seripta]a sh9,3.1.alo
ol4gir!
erry
图9-5演示效果
实现脚本如下：
[root@oldboy scripts]#cat 9_5_1.sh
RED_COLOR=\E[1:31m
qspq/utq/1a
GREEN_COLOR=*\E[1;32m
YELLOW_COLOR=*\B[1;33m*
BLUE_COLOR=*\E[1;34m
PINK=\E[1;35m
<==以上部分将颜色字将定义为变量，方便后续使用。
RES='\E[0n
if[s-ne 21:then
<==如果脚本传入的参数个数不等于2，则打印帮助提示，退出脚本。
echo *Usage S0 content (redlyellowlbluelgreenipink)*
exit
case*s2*in
fi
<==S2为脚本传入的第二个参数，即颜色字将事。
redIRED)
#<==使用至线1可以医配大写和小写等字符，也就是可以用整线来匹配多个值。
<==给S1（第一个参数）加颜色。
yelloWIYELLOW)
echo-e
green|GREEN)
*S(GREEN_COLOR)SIS(RES)*
blue|BLUE)
echo-e
pinkIPINK)
11
11
(。
exit
esac
如果脚本中要加颜色的内容很多，还可以专门写一个给内容加颜色的函数，如下：
---
## Page 197
第9章c8se条件语句的应用实践179
[root@oldboy scripts]#cat9_5_2.sh
1/bin/bash
plu8_co1or（）（#<==定义-个给指定字特内容加期色的函数，其实就是将前面的脚本9_5_1.sh
整个包起来定义为函数，即么原来的传参就变成了函数的参数了。
RED_COLOR='\B[1;31m'
GREEN_COLOR='\E[1;32m
YBLLOW_COLOR=\E[1:33m
BLUE_COLOR=*\E[1;34m
PINK=*\E[1;35m
if[s-ne 2 ]:then
RES=*\E[0m'
exit
case*$2*in
fi
echo
-e
yellowIYELLOW)
echo-e
greenIGREEN)
echo -e
echo -e
*S(BLUE_COLOR)S1S(RES)
pinkIPINK)
echo-e
"S(PINK_COLOR)SIS(RES)
*)
echo
*Usage $0 content (redlyellow|bluelgreenipink)
exit
esac
pax.1.1ooosnd
上
<==传入I字符和红色单词给plus_color函数。
plus_color'an′green
<==传入am字特和绿色单词给plus_color函数
plus_color*oldboy*blue
<==传入oldboy字将和蓝色单词给plus_color函数。
执行结果如图9-6所示。
old
图9-6演示效果图
本题更专业更规范的实现脚本如下，此脚本为全函数模块化、标准化、专业化的
实现：
---
## Page 198
8跟老男孩学Linux运维：Shel编程实战
[rooteoldboy scripts]# cat 9_5_3.sh
#1/bin/bash
functionAddColor（）（<==定义加颜色函数AddColor。
RED_COLOR=*\E[1;31m′
GREEN_COLOR=*\E[1;32m'
YELLOW_COLOR='\E[1:33m*
BLUE_COLOR=*\E[1;34m'
PINK=\E[1;35m
RES='\E[0m
if[s-ne 2]ithen
echo*Usage $0 content （redlyellow|bluelgreen)
exit
fi
case*s2in
redIRED)
yellow|YBLLOW)
greenIGREEN)
echo
-e
$(GREEN_COLOR}$1S(RBS]*
blueIBLUE)
echo-e
"S(BLUE_COLOR)SIS(RES)"
pinkIPINK)
*)
echo“Usage s0 content （redlyellow|bluelgreen)*
exit
esac
function main(）(
<=定义主函数main
AddColor $1 $2
<令颜色函数后面接51和52，即将函数参数转换为获取脚本的
参数，注意，这里的S1和S2不能用引号括起来，否则脚本不传参也会被AddColor认为已传入参数。在此
特别感谢看老男孩VIP教程视频的某位同学接出了此问题。
main $*
c=执行main函数，利用s*接收命令行的所有参数，井传入则main函数。
9.3.3给输出的字符串加背景颜色
范例9-6：给输出的字符串加不同的背景颜色。
字的背景颜色对应的数字范围为40~47，代码如下。
echo-e*\033[40:37m黑底自字o1dboy\033[0m*<=40m表示黑色背景。
echo-e*\033[41:37m红底自字o1dboy\033[0m*
#<==41n表示红色背景。
---
## Page 199
第9章C8se条件语句的应用实践
echo-e“\033[42:37m绿底白字o1dboy\033[0m*
<==42m表示绿色背景。
echo-e\033[43;37m棕底白字o1dboy\0330m*
<==43m表示棕色背景（brom），和
<==44m表示置色背景。
黄色背景相近。
echo-e*\033[44;37m蓝底白字o1dboy\033[0m*
echo-e*\033[45;37m洋红底自字o1dboy\033[0m*
<==45m表示洋红色青景（magenta）
和紫色背景相近。
<a=46m表示蓝绿色背景（cyan），和
浅蓝色背景相近。
<==47m表示白色背景。
说明：不同的数字所对应的背景字体颜色见系统帮助（来源于manconsole_
codes命令的执行结果）。