们就可以绘制出桔子形的窗口，甚至是人形的窗口等各种窗口啦。这多亏了我们前面设计好的图
层管理机制呢。
55 bball（harib26d）
“bball”是笔者很喜欢的一个OSASK上的应用程序，这个名字是“beautiful ball”的缩写，通
——————————
① “make run”的结果如图：某些情况下可能不会显示出图上的结果，出现这种情况时只要移动一下窗口就可以了。
这是由于没有考虑到窗口形状变化（增加了透明色）而出现的问题，只要编写一个窗口形状变化时专用的refresh
API就可以解决。本书中对于非矩形窗口并没有实现真正意义上的支持，因此没有增加相应的API。
图灵社区会员 metorm 专享 尊重版权
5 bball（harib26d） …… 649
过绘制很多条直线，组成一个美丽的球形。程序本身很短也很简单，不过画出来的图形非常漂亮。 1
我们把这个程序也移植到“纸娃娃系统”上来吧。
其实，笔者之所以在“纸娃娃系统”中编写了用来画直线的API，也正是为了在这里移植这
18
个程序呢（笑）。
3
bball.c
#include "apilib.h"
20
void HariMain(void)
{
int win, i, j, dis;
char buf[216 * 237]; 21
struct POINT {
int x, y;
}; 22
static struct POINT table[16] = {
{ 204, 129 }, { 195, 90 }, { 172, 58 }, { 137, 38 }, { 98, 34 },
{ 61, 46 }, { 31, 73 }, { 15, 110 }, { 15, 148 }, { 31, 185 },
7
{ 61, 212 }, { 98, 224 }, { 137, 220 }, { 172, 200 }, { 195, 168 },
{ 204, 129 }
};
8
win = api_openwin(buf, 216, 237, -1, "bball");
api_boxfilwin(win, 8, 29, 207, 228, 0);
for (i = 0; i = 8) {
dis = 15 - dis; /*逆向计数*/ 26
}
if (dis != 0) {
api_linewin(win, table[i].x, table[i].y, table[j].x, table[j].y, 8 - dis);
27
}
}
}
28
for (;;) {
if (api_getkey(1) == 0x0a) {
break; /*按下回车键则break; */ 29
}
}
api_end();
} 29
这种写法在结构数组声明部分直接赋予初始值，可能大家还是第一次见到。没关系，只要知
15
道“嘿，原来还可以这样写啊”就可以啦。
16
■■■■■
图灵社区会员 metorm 专享 尊重版权
650 …… 第29天：压缩与简单的应用程序
好，我们来“make run”。啊，图形超出画面边界了，不过用VESA的人应该可以完全显示出
来的哦。咦？显示的图形有问题啊……
有些线没有显示出来
唔，这貌似是操作系统的bug呢，因为画线的程序并没有什么问题。我们把窗口移动一下看
看。哦，果然好了。也就是说，这是refresh失败导致的。
于是我们来修正一下操作系统的bug。
本次的console.c节选
int *hrb_api(int edi, int esi, int ebp, int esp, int ebx, int edx, int ecx, int eax)
{
（中略）
} else if (edx == 13) {
sht = (struct SHEET *) (ebx & 0xfffffffe);
hrb_api_linewin(sht, eax, ecx, esi, edi, ebp);
if ((ebx & 1) == 0) { /*从此开始*/
if (eax > esi) {
i = eax;
eax = esi;
esi = i;
}
if (ecx > edi) {
i = ecx;
ecx = edi;
edi = i;
} /*到此结束*/
sheet_refresh(sht, eax, ecx, esi + 1, edi + 1);
}
} else if (edx == 14) {
（中略）
}
为了保证refresh范围指定正确的左上角和右下角坐标，我们将变量进行比较后做了替换。
再来“make run”一次看看……成功了！怎么样，很漂亮吧？这样一个应用程序只需要350
图灵社区会员 metorm 专享 尊重版权
6 外星人游戏（harib26e） …… 651
字节哦，“纸娃娃系统”真是相当给力不是吗？ 1
18
3
20
21
bball完成
不过图形超出画面范围看上去很不爽，我们用VESA模式再重新截一张图片下来。 22
7
8
9
26
27
这就是bball的完整版啦！ 28
66 外星人游戏（harib26e） 29
接下来，我们打算做一个跟OSASK上面的外星人游戏差不多的游戏。在看这本书的各位读
29
者估计也不知道OSASK的外星人游戏到底是何方神圣，那么我们先从背景故事开始讲起吧（笑）。
顺便说一句，这个故事不是之前就设定好的，而是笔者在这里现编的。
15
20XX年，从遥远的宇宙另一端飞来一群外星侵略者，它们不用穿太空服就能在宇宙中生存。
它们也没有发达的文明，一直就这样在宇宙中四处漂泊。
16
虽然并没有恶意，但它们身上感染了一种凶恶的病毒，人类目前的科学水平还无法应付（它
图灵社区会员 metorm 专享 尊重版权
652 …… 第29天：压缩与简单的应用程序
们自己虽然感染了病毒，但这种病毒对它们的健康无害），如果它们来到地球，包括人类在内的
大多数地球生命都会遭到毁灭性的打击。
人类曾经尝试说服这些外星人，但是他们的语言能力不佳，根本就无法沟通。科学家们经过
讨论，认为只好将它们击退。虽然做法有些残酷，但如果它们看到同伴受到攻击全都牺牲了，它
们似乎就会做出“看来这里不适合我们居住”的判断。
时间紧迫，只争朝夕。就在人类商讨对策之时，它们已经来到地球了。没办法，只好抄起手
边的等离子炮，将它们连同病毒一起消灭掉。
游戏的操作方法是这样的，按小键盘上的“4”和“6”键移动自机的位置，按空格键发射等
离子炮。等离子炮每发射一次，必须进行一段时间的充电（或者是加热?）才能重新发射（其实
这个时间也不是很长），因此不能连续发射。笔者也没见过真的等离子炮是什么样的（笑），不过
我们的等离子炮炮弹飞行的速度慢到可以用肉眼看见，反正不是像光线那样飞快就是了，发射的
时候还是要瞄准好哟。
消灭外星人会得到奖金（得分），命中率越高（打空的次数少）的话得到的奖金越多。因为
这个等离子炮需要消费大量的电力，如果老是打不中而白白浪费的话，咱们国家的电力就会不够
用啦。为了鼓励炮击手节约弹药，我们才设定了这样一个奖励的规定。
为了地球的和平，希望大家英勇奋战！
补充：当初估计它们只有30只来到了地球，但现在看来还有后续部队。另有不确定的情报表
示，后续部队的移动速度很快……消灭它们吧！
我们来编写程序吧，这次比较长哦。
invader.c
#include  /* sprintf */
#include  /* strlen */
#include "apilib.h"
void putstr(int win, char *winbuf, int x, int y, int col, unsigned char *s);
void wait(int i, int timer, char *keyflag);
static unsigned char charset[16 * 8] = {
/* invader(0) */
0x00, 0x00, 0x00, 0x43, 0x5f, 0x5f, 0x5f, 0x7f,
0x1f, 0x1f, 0x1f, 0x1f, 0x00, 0x20, 0x3f, 0x00,
/* invader(1) */
0x00, 0x0f, 0x7f, 0xff, 0xcf, 0xcf, 0xcf, 0xff,
0xff, 0xe0, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0x00,
/* invader(2) */
0x00, 0xf0, 0xfe, 0xff, 0xf3, 0xf3, 0xf3, 0xff,
图灵社区会员 metorm 专享 尊重版权
6 外星人游戏（harib26e） …… 653
0xff, 0x07, 0xff, 0xff, 0x03, 0x03, 0x03, 0x00,
1
/* invader(3) */
0x00, 0x00, 0x00, 0xc2, 0xfa, 0xfa, 0xfa, 0xfe,
0xf8, 0xf8, 0xf8, 0xf8, 0x00, 0x04, 0xfc, 0x00, 18
/* fighter(0) */
0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
3
0x01, 0x43, 0x47, 0x4f, 0x5f, 0x7f, 0x7f, 0x00,
/* fighter(1) */
0x18, 0x7e, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 20
0xff, 0xff, 0xe7, 0xe7, 0xe7, 0xe7, 0xff, 0x00,
/* fighter(2) */ 21
0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
0x80, 0xc2, 0xe2, 0xf2, 0xfa, 0xfe, 0xfe, 0x00,
22
/* laser */
0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00
}; 7
/* invader:"abcd", fighter:"efg", laser:"h" */
void HariMain(void)
8
{
int win, timer, i, j, fx, laserwait, lx = 0, ly;
int ix, iy, movewait0, movewait, idir;
int invline, score, high, point; 9
char winbuf[336 * 261], invstr[32 * 6], s[12], keyflag[4], *p;
static char invstr0[32] = " abcd abcd abcd abcd abcd ";
26
win = api_openwin(winbuf, 336, 261, -1, "invader");
api_boxfilwin(win, 6, 27, 329, 254, 0);
timer = api_alloctimer();
api_inittimer(timer, 128); 27
high = 0;
putstr(win, winbuf, 22, 0, 7, "HIGH:00000000"); 28
restart:
score = 0;
point = 1; 29
putstr(win, winbuf, 4, 0, 7, "SCORE:00000000");
movewait0 = 20;
fx = 18; 29
putstr(win, winbuf, fx, 13, 6, "efg");
wait(100, timer, keyflag);
15
next_group:
wait(100, timer, keyflag);
ix = 7;
iy = 1; 16
invline = 6;
图灵社区会员 metorm 专享 尊重版权
654 …… 第29天：压缩与简单的应用程序
for (i = 0; i  0) {
fx--;
putstr(win, winbuf, fx, 13, 6, "efg ");
keyflag[0 /* left */] = 0;
}
if (keyflag[1 /* right */] != 0 && fx < 37) {
putstr(win, winbuf, fx, 13, 6, " efg");
fx++;
keyflag[1 /* right */] = 0;
}
if (keyflag[2 /* space */] != 0 && laserwait == 0) {
laserwait = 15;
lx = fx + 1;
ly = 13;
}
/*外星人移动*/
if (movewait != 0) {
movewait--;