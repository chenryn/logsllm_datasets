# G0073: APT19
## Description
APT19 is a China-based threat group that has targeted various industries, including defense, finance, energy, pharmaceuticals, telecommunications, high technology, education, manufacturing, and legal services. In 2017, the group conducted a phishing campaign targeting seven law and investment firms. (Citation: FireEye APT19) Some analysts consider APT19 and Deep Panda to be the same group, but this remains unclear from open-source information. (Citations: ICIT China's Espionage Jul 2016, FireEye APT Groups, Unit 42 C0d0so0 Jan 2016)

## Tactics, Techniques, and Procedures (TTPs)
| Platform | Tactic | Technique | Description | Data Sources |
| --- | --- | --- | --- | --- |
| macOS, Windows | Defense Evasion | Hidden Window | APT19 used `-W Hidden` to conceal PowerShell windows by setting the `WindowStyle` parameter to hidden. | Windows event logs, PowerShell logs, process command-line parameters, process monitoring, file monitoring |
| Linux, macOS, Windows | Command and Control | Data Encoding | An APT19 HTTP malware variant used Base64 to encode communications with the C2 server. | Packet capture, process use of network, process monitoring, network protocol analysis |
| Windows | Defense Evasion, Execution | Rundll32 | APT19 configured its payload to inject into `rundll32.exe`. | File monitoring, process monitoring, process command-line parameters, binary file metadata |
| Linux, Windows, macOS | Execution | User Execution | APT19 attempted to get users to launch malicious attachments delivered via spearphishing emails. | Anti-virus, process command-line parameters, process monitoring |
| Linux, macOS, Windows | Discovery | System Network Configuration Discovery | APT19 used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine. | Process monitoring, process command-line parameters |
| Linux, macOS, Windows | Command and Control | Commonly Used Port | APT19 used TCP port 80 for C2. | Packet capture, Netflow/Enclave netflow, process use of network, process monitoring |
| Linux, macOS, Windows | Defense Evasion | Obfuscated Files or Information | APT19 used Base64 to obfuscate commands and the payload. | Network protocol analysis, process use of network, file monitoring, malware reverse engineering, binary file metadata, process command-line parameters, environment variable, process monitoring, Windows event logs, network intrusion detection system, email gateway, SSL/TLS inspection |
| Linux, macOS, Windows | Command and Control | Standard Application Layer Protocol | APT19 used HTTP for C2 communications. APT19 also used an HTTP malware variant to communicate over HTTP for C2. | Packet capture, Netflow/Enclave netflow, process use of network, malware reverse engineering, process monitoring |
| Linux, macOS, Windows | Defense Evasion, Execution | Scripting | APT19 downloaded and launched code within an SCT file. | Process monitoring, file monitoring, process command-line parameters |
| Linux, macOS, Windows, AWS, GCP, Azure | Discovery | System Information Discovery | APT19 collected system architecture information. APT19 used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine. | Azure activity logs, Stackdriver logs, AWS CloudTrail logs, process monitoring, process command-line parameters |
| Windows | Persistence | Registry Run Keys / Startup Folder | An APT19 HTTP malware variant establishes persistence by setting the Registry key `HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Windows Debug Tools-%LOCALAPPDATA%\.` | Windows Registry, file monitoring |
| Windows | Defense Evasion | DLL Side-Loading | APT19 launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL. | Process use of network, process monitoring, loaded DLLs |
| Windows | Defense Evasion, Execution | Regsvr32 | APT19 used `regsvr32` to bypass application whitelisting techniques. | Loaded DLLs, process monitoring, Windows Registry, process command-line parameters |
| Windows, Linux, macOS, SaaS | Initial Access | Drive-by Compromise | APT19 performed a watering hole attack on Forbes.com in 2014 to compromise targets. | Packet capture, network device logs, process use of network, web proxy, network intrusion detection system, SSL/TLS inspection |
| Windows, macOS, Linux | Initial Access | Spearphishing Attachment | APT19 sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits. | File monitoring, packet capture, network intrusion detection system, detonation chamber, email gateway, mail server |
| Linux, macOS, Windows | Discovery | System Owner/User Discovery | APT19 used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username. | File monitoring, process monitoring, process command-line parameters |
| Windows | Defense Evasion | Modify Registry | APT19 used a Port 22 malware variant to modify several Registry keys. | Windows Registry, file monitoring, process monitoring, process command-line parameters, Windows event logs |
| Windows | Execution | PowerShell | APT19 used PowerShell commands to execute payloads. | PowerShell logs, loaded DLLs, DLL monitoring, Windows Registry, file monitoring, process monitoring, process command-line parameters |
| Windows | Persistence | Modify Existing Service | An APT19 Port 22 malware variant registers itself as a service. | Windows Registry, file monitoring, process monitoring, process command-line parameters |
| Windows | Defense Evasion | Deobfuscate/Decode Files or Information | An APT19 HTTP malware variant decrypts strings using single-byte XOR keys. | File monitoring, process monitoring, process command-line parameters |

This revised version aims to provide a clearer and more professional presentation of the information, with consistent formatting and improved readability.