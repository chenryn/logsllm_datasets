title:Leakage-Resilient Authentication and Encryption from Symmetric Cryptographic
Primitives
author:Olivier Pereira and
François-Xavier Standaert and
Srinivas Vivek
Leakage-Resilient Authentication and Encryption
from Symmetric Cryptographic Primitives
Olivier Pereira
Université catholique de
Louvain
ICTEAM – Crypto Group
B-1348, Belgium
PI:EMAIL
François-Xavier
Standaert
Université catholique de
Louvain
ICTEAM – Crypto Group
B-1348, Belgium
PI:EMAIL
Srinivas Vivek
University of Luxembourg
University of Bristol
PI:EMAIL
ABSTRACT
Leakage-resilient cryptosystems aim to maintain security in
situations where their implementation leaks physical infor-
mation about their internal secrets. Because of their eﬃ-
ciency and usability on a wide range of platforms, solutions
based on symmetric primitives (such as block ciphers) are
particularly attractive in this context. So far, the literature
has mostly focused on the design of leakage-resilient pseu-
dorandom objects (e.g. PRGs, PRFs, PRPs). In this paper,
we consider the complementary and practically important
problem of designing secure authentication and encryption
schemes. For this purpose, we follow a pragmatic approach
based on the advantages and limitations of existing leakage-
resilient pseudorandom objects, and rely on the (arguably
necessary, yet minimal) use of a leak-free component. The
latter can typically be instantiated with a block cipher im-
plementation protected by traditional countermeasures, and
we investigate how to combine it with the more intensive
use of a much more eﬃcient (less protected) block cipher
implementation. Based on these premises, we propose and
analyse new constructions of leakage-resilient MAC and en-
cryption schemes, which allow ﬁxing security and eﬃciency
drawbacks of previous proposals in this direction. For en-
cryption, we additionally provide a detailed discussion of
why previously proposed (indistinguishability based) secu-
rity deﬁnitions cannot capture actual side-channel attacks,
and suggest a relaxed and more realistic way to quantify
leakage-resilience in this case, by reducing the security of
many iterations of the primitive to the security of a single
iteration, independent of the security notion guaranteed by
this single iteration (that remains hard to deﬁne).
INTRODUCTION
1.
Motivation. Attacks based on the exploitation of side-
channels [21] or faults [17], are an important issue for the se-
curity of cryptographic hardware. Motivated by their prac-
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813626.
tical relevance for small embedded devices such as smart
cards, a large body of research has investigated solutions
to mitigate them, analyzed in more or less abstract mod-
els, and leading to more or less eﬃcient implementations.
In this context, symmetric cryptographic primitives such as
block ciphers are of utmost importance. In general, they are
considered as the workhorses of modern cryptography [19].
Because of their low cost and eﬃciency on a wide range
of platforms, they are also a target of choice for physical
attacks. Unfortunately, their lack of mathematical struc-
ture makes them particularly challenging to protect. Tak-
ing the example of side-channel attacks (that will be our
main concern), probably the most investigated countermea-
sure is masking [5] (aka secret sharing [16]). But it implies
overheads that are (at least) quadratic in the number of
shares used (see e.g. [14] for a comparison of a couple of
schemes), and its secure implementation is far from trivial
(i.e., hardware engineers have to ensure that the leakage of
each share is independent of each other, which is frequently
contradicted in practice [22], or need to take this constraint
into account by design, which implies additional costs [28]).
Following, an alternative approach (and, as we will see, com-
plementary as well ), next denoted as leakage-resilience, has
started to look for new primitives of which the design is
inherently (more) secure against such physical attacks. So
far, leakage-resilient symmetric cryptography has mostly fo-
cused on PRGs (aka stream ciphers) [7, 9, 30, 31, 36, 37, 38,
39], PRFs and PRPs [6, 9, 37, 38]. By contrast, much less
work has been carried out on the exploitation of these prim-
itives in the context of standard cryptographic tasks such
as authentication and encryption. Our goal in this paper is
therefore to clarify how and when to use leakage-resilience
in these cases (and for which formal security guarantees).
Preliminaries. Our starting point for dealing with this
problem is a recent work of Belaid et al. [3] which shows that
concretely, the security improvements brought by leakage-
resilience highly depend on whether the underlying primitive
is stateful (like PRGs, typically) or stateless (like PRFs and
PRPs, typically).1 That is, despite proofs for both types
of primitives being essentially based on the same assump-
tions (namely the leakage per iteration has to be limited
in some sense), ensuring this condition in practice is sig-
1 By stateful, we mean that the implementation of the prim-
itive has to maintain a state (typically a key) between its
consecutive iterations, which implies that diﬀerent parties
involved in the use of this primitive have to be synchronized.
96niﬁcantly more diﬃcult in the case of stateless primitives
than in the case of stateful ones. In the case of PRGs and
stream ciphers, leakage-resilient designs limit the number
of measurements that an adversary can obtain per itera-
tion. By contrast, for PRFs and PRPs, they only limit
the number of plaintexts for which measurements can be
obtained (which still allows the adversary to measure the
same plaintext an arbitrary number of times, hence to reduce
the noise). Therefore, implementations of leakage-resilient
PRGs and stream ciphers (mostly) lead to concrete secu-
rity against side-channel key recovery attacks at a lower cost
than countermeasures like masking. By contrast, implemen-
tations of leakage-resilient PRFs and PRPs (mostly) lead to
lower concrete security levels than standard PRFs and PRPs
protected with such countermeasures. As a result, if we want
to stick with constructions based on standard block ciphers
for eﬃciency and usability reasons, there seems to be little
hope to have a secure MAC or encryption scheme without
further assumption. Indeed, stateless primitives are usually
important ingredients of such schemes, and without prop-
erties such as a homomorphic structure, block cipher re-use
will eventually leak the key in full, as just explained.
In this respect, a natural direction to investigate is to as-
sume that we will need a well protected component (i.e., a
block cipher in our case), that we will denote as “leak-free”
for convenience. Admittedly, this leak-free component will
be much (a dozen to hundred times) slower than an unpro-
tected block cipher implementation, as it could be based on
a combination of masking and other countermeasures – in
fact, it could also be based on an asymmetric cryptographic
primitive enjoying some exploitable homomorphic structure.
Concretely, it will probably be imperfect to some extent as
well (and we will detail how to capture these imperfections
in our analysis). So our goal will be to make minimal use
of this component (one call per message, independently of
the message, typically), and to combine it with a faster im-
plementation of block cipher in order to get a scheme that
would still provide good protection against side-channel at-
tacks (or at least, as good as we can hope), but would also
be much more eﬃcient than if we had to use the leak-free
component only (or solutions that only exploit the math-
ematical structure of asymmetric cryptographic primitives
such as [18] for encryption and [12, 23] for authentication).
Our contribution. First, we follow this goal of minimizing
the need of leak-freeness for two important symmetric cryp-
tographic functionalities, namely authentication and encryp-
tion. Second, we clarify and ﬁx two important shortcomings
in previously published approaches to these functionalities.
For leakage-resilient MACs, the only existing work based
on symmetric primitives is the one by Schipper [35]. The
basic idea is simple: take a leakage-resilient PRG and use it
to generate keys for a one-time MAC. While this is indeed a
stateful primitive, the main problem in this scheme is that
the use of the key is limited per message, not per message
block. This means that for long messages, and depending
on the one-time MAC that is used (CBC-MAC would be
problematic, for instance), the adversary can observe a large
number of leaking operations exploiting the same key. One
partial solution considered in Schipper’s thesis is to use a
MAC based on a leakage-resilient PRF. But this has a higher
implementation cost (as noticed in [23]) and faces the pre-
viously discussed problem of stateless primitives. In order
to improve this situation, we ﬁrst propose a new (stateful)
leakage-resilient MAC that limits the use of leak-free compo-
nent to a single IV block (which can be pre-computed), and
is eﬃcient for large messages (i.e., requires a single block
cipher execution per message block). We then propose a
variant of this scheme based on a hash and MAC paradigm.
Along these lines, we also put forward that certain standard
MACs are better suited for leakage-resilience than others
(e.g. HMAC is better than CBC-MAC in this respect).
For encryption, the literature based on symmetric primi-
tives is also sparse. To the best of our knowledge, the work
by Abdalla et al. [2] is the only one to address this question.
Here, the problem is more general and deﬁnitional. That is,
a central issue in all the leakage-resilient encryption notions
proposed so far is that they exclude the leakage during the
challenge queries, or focus on a restricted setting where an
encryption is assumed to not leak any single bit of the plain-
text that is encrypted (e.g. consider only key leakage). In
fact, this is also true for public-key encryption schemes: see,
e.g., [27] for an early proposal in this direction and [15] for a
more recent one. On the one hand, this seems unavoidable:
indeed a single bit of leakage on the plaintext trivially breaks
the semantic security game. On the other hand, we argue
that excluding challenge leakages is artiﬁcial and does not
capture the actual adversarial scenario of leaking devices, at
least in the context of side-channel attacks based on power
consumption and electromagnetic radiation that we consider
in this paper (but, we believe, in general as well). And, as
a side eﬀect, such deﬁnitions do not make a diﬀerence be-
tween an encryption implementation that would leak the full
plaintexts from an implementation that would not leak any
information about the plaintexts – a diﬀerence that seems to
be of crucial importance in the context of encryption. Hence,
we propose an alternative way to model the security in front
of leakages where we do not try to enforce traditional se-
curity notions with a negligible advantage. We rather show
that the security of multiple iterations reduces to the secu-
rity of a single iteration. That is, we show that whatever the
adversary is able to do against multiple iterations of our en-
cryption scheme is also possible against a single iteration of
this scheme. We believe this approach is more realistic since
it does not give users the (illusory) feeling that semantic (or
any indistinguishability-based) security can be obtained for
encryption schemes with leakage. By contrast, we provide
an eﬃcient solution for which the designer is guaranteed that
the security of the full construction reduces to the security
of a single block (whatever security he is able to achieve).
Remarks. The combination of these results is in fact well in
line with the early investigations of Micali and Reyzin, where
it was shown that unpredictability-based security is eas-
ier to obtain than indistinguishability-based security in the
presence of leakage [25]. Concretely, and based on present
knowledge, it also means that if semantic (or equivalent) se-
curity is required for an application, the best option is to
use leakage-resilient authentication to access a leak-free en-
vironment ﬁrst, and to perform encryption only afterwards.
In other words, the security guarantees of leakage-resilient
encryption, despite practically meaningful (e.g. in order to
prevent key recoveries), are indeed much harder to formal-
ize in terms of message conﬁdentiality. Note ﬁnally that our
following constructions only consider the leakage-resilience
of tag generation and encryption. This is a relevant ﬁrst
step, since it is a frequent scenario that only one (cost-
97constrained) party in authentication and encryption has to
be protected against side-channel analysis, while the other
party (e.g., a reader) is much easier to shield through phys-
ical countermeasures [24]. Yet, we also admit that securing
the tag veriﬁcation and decryption parts will most likely be
more challenging (since these algorithms are not randomized
in most existing MAC and encryption schemes), and leave
their investigation as an intersting research problem.
Leakage model. We consider the continuous leakage model
since it is the only one capturing actual side-channel attacks.
Indeed, if a system is used for a suﬃciently long period of
time, the amount of leakage observed by an attacker may ex-
ceed any apriori determined leakage bound. In this context,
we capture the limited informativeness of actual leakages
with the recently introduced “simulatable leakage” frame-
work [36]. We are aware of the ongoing discussion about
how to implement block ciphers ensuring this empirically
veriﬁable assumption [11]. Yet, and as argued in this ref-
erence, it remains the most realistic assumption to reason
about leakage we currently have (and in particular, the only
one that can be challenged by hardware engineers). Besides,
the recent discussion in [29] suggests that the main issue
with the leakage simulators of [36] is due to the diﬃculty
to capture the noise distribution in actual leakage traces
(i.e., does not relate to exploitable key-dependent signal),
and describes ways to design new instances of simulators to
overcome this problem (of which the analysis is beyond the
scope of this paper). Eventually, and more importantly, we
believe our core contribution is the general investigation of
leakage-resilient MAC and encryption, as well as the pro-
posal of eﬃcient constructions minimizing the need of leak-
freeness. This contribution is quite independent of the quest
for a perfectly realistic model of leakage-resilience, which in-
deed remains a great conceptual challenge. That is, we use
a leakage model (here, the simulatability framework) to rea-
son formally about our constructions and make sure they are
theoretically founded. But in the ﬁrst place, we hope that