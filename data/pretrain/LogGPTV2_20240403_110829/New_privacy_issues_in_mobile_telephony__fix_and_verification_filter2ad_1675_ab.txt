In the rest of this paper, we consider a simpliﬁed network
architecture. This architecture involves simply the mobile
stations and the network. The network models both the
Base Station (BS) which directly communicates with the MS
on the radio link, and the complex structure of databases
and servers connected with it and forming the 3G control
network. Hence, we abstract away from any communication
within the network and model only communication between
mobile stations and the network. This abstraction allows us
to hide details which are uninteresting for the purposes of
our analysis and keep the models used for veriﬁcation small,
but at the same time precisely specify the interactions on
the air between MS and network, which are the subject of
our analysis.
3.1 IMSI Paging Attack
The paging procedure is used to locate a mobile station in
order to deliver a service to it, for example an incoming call.
Paging request messages are sent by the network in all the
location areas most recently visited by the mobile station
in order to locate it and deliver a service to it. The pag-
ing request message is sent on a Common Control Channel
(CCCH) and contains the identity of one or more mobile sta-
tions. The paging procedure is typically run using the TMSI
to identify a MS. However, the IMSI can be used when the
TMSI is not known by the network. A mobile station re-
ceiving a paging request establishes a dedicated channel to
allow the delivery of the service and sends a paging response
containing the most recently assigned TMSI (see Figure 1).
The possibility of triggering a paging request for a spe-
ciﬁc IMSI allows an attacker to check a speciﬁc area for the
presence of mobile stations of whom he knows the identity,
and to correlate their IMSI and TMSI. As we will detail in
Section 4.2, in a real setting, the link between the paged
IMSI and the related TMSI would need to be conﬁrmed by
replaying the attack several times.
3.2 AKA Protocol Linkability Attack
The Authentication and Key Agreement (AKA) protocol
achieves mutual authentication between a MS and the net-
work, and establishes shared session keys to be used to se-
cure the subsequent communications. The MS with identity
IMSI and the network share a secret long-term key, KIMSI ,
assigned to the subscriber by the mobile operator and stored
in the USIM. The secret key allows the MS and the network
to compute shared ciphering and integrity session keys to be
used for encryption and integrity check of communications.
The 3G AKA protocol [6], shown in Figure 2, consists in
the exchange of two messages: the authentication request
and the authentication response. Before sending an authen-
207MS
Network
KIMSI , IMSI , SQN M S
KIMSI , IMSI , SQN N
MS
Attacker
Network
KIMSI , IMSI , SQN M S
KIMSI , IMSI , SQN N
new RAND
AK ← f5KIMSI (RAND )
MAC ← f1KIMSI (SQN N ||RAND)
AUTN ← (SQN N ⊕ AK)||MAC
Auth Req, RAND , AUTN
AK ← f5KIMSI (RAND)
XMSG||XMAC ← AUTN
XSQN ← XMSG ⊕ AK
MAC ← f1KIMSI (XSQN ||RAND)
if MAC 6= XMAC
then RES ← Mac Fail
elseif XSQN < SQN M S
then RES ← Sync Fail
else RES ← f2KIMSI (RAND)
Auth Resp, RES
CK ← f3KIMSI (RAND)
IK ← f4KIMSI (RAND )
if RES = f2KIMSI (RAND)
then CK ← f3KIMSI (RAND)
IK ← f4KIMSI (RAND)
else if RES 6= f2KIMSI (RAND )
then Recover
Figure 2: 3G Authentication and Key Agreement
tication request to the mobile station, the network computes
the authentication data: a fresh random challenge RAND,
the authentication token AUTN , the expected authentica-
tion response f2K(RAND), the integrity key IK, and the en-
cryption key CK (see Figure 2). The functions f1, f2, f3, f4
and f5, used to compute the authentication parameters, are
keyed cryptographic functions computed using the shared
key KIMSI
[8]. The authentication function f1 is used to
calculate the message authentication code MAC ; f2 is used
to produce the authentication response parameter RES ; the
key generation functions, f3, f4 and f5 are used to gener-
ate the ciphering key CK, the integrity key IK and the
anonymity key AK, respectively.
The network always initiates the protocol by sending the
authentication challenge RAND and the authentication to-
ken AUTN to the mobile station. AUTN contains a MAC
of the concatenation of the random number with a sequence
number SQN N generated by the network using an individual
counter for each subscriber. A new sequence number is gen-
erated either by increment of the counter or through time
based algorithms as deﬁned in [6]. The sequence number
SQN N allows the mobile station to verify the freshness of
the authentication request to defend against replay attacks
(see Figure 2).
The MS receives the authentication request, retrieves the
sequence number SQN N and then veriﬁes the MAC (condi-
tion MAC = XMAC in Figure 2). This step ensures that
the MAC was generated by the network using the shared
key KIMSI , and thus that the authentication request was
intended for the mobile station with identity IMSI . The
mobile station stores the greatest sequence number used
for authentication, so far SQN M S. This value is used to
check the freshness of the authentication request (condition
XSQN < SQN M S in Figure 2) to avoid replay attacks.
The mobile station computes the ciphering key CK , the
integrity key IK and the authentication response RES and
Auth Req, RAND , AUTN
Auth Resp, RES
save RAND, AUTN
Auth Req, RAND , AUTN
Auth Resp, RES ′
if RES ′ = Sync Fail
then M Sv Found
Figure 3: AKA Protocol Linkability Attack
sends this response to the network.The network authenti-
cates the mobile station by verifying whether the received
response is equal to the expected one (RES = f2K (RAND)).
The authentication procedure can fail on the MS side either
because the MAC veriﬁcation failed, or because the received
sequence number XSQN , is not in the correct range with
respect to the sequence number SQN M S stored in the mo-
bile station.
In the former case, the mobile station sends
an authentication failure message indicating MAC failure
(Mac Fail) as the failure cause. In the latter case, the au-
thentication failure message indicates synchronisation fail-
ure (Sync Fail) as the failure cause. When a MAC failure
occurs the network may initiate the identiﬁcation procedure.
When a synchronisation failure occurs the network performs
re-synchronisation.
To detect the presence of a victim mobile station M Sv, in
one of his monitored areas, an active attacker just needs to
have previously intercepted one legitimate authentication re-
quest message containing the pair (RAND, AUTN ) sent by
the network to M Sv. The captured authentication request
can now be replayed by the adversary each time he wants
to check the presence of M Sv in a particular area. In fact,
thanks to the error messages, the adversary can distinguish
any mobile station from the one the authentication request
was originally sent to. On reception of the replayed authenti-
cation challenge and authentication token (RAND, AUTN ),
the victim mobile station M Sv successfully veriﬁes the MAC
and sends a synchronisation failure message. However, the
MAC veriﬁcation fails when executed by any other mobile
station, and as a result a MAC failure message is sent. The
implementation of few false BS would then allow an attacker
to trace the movements of a victim mobile station, resulting
in a breach of the subscriber’s untraceability. The proposed
attack is shown in Figure 3.
3.3 Formal Veriﬁcation
While the paging procedure is obviously a breach of users’
privacy, the traceability attack on the AKA protocol is much
more subtle. Indeed, the messages exchanged through this
procedure contain neither the IMSI nor the TMSI of the
MS. So one could think that the AKA protocol provides
untraceability by construction. But we just saw that this is
not the case. Only careful analysis w.r.t. precisely deﬁned
privacy requirements could reveal this ﬂaw.
208We run the ProVerif tool on the IMSI paging procedure
and on the AKA protocol1. Details of how unlinkability
and anonymity were deﬁned using the ProVerif calculus are
given in Section 6. ProVerif fails to prove the unlinkability
and anonymity of the IMSI paging procedure and exhibits
actual attack traces. In the case of the AKA protocol, the
anonymity property is proved to hold, while the unlinkability
property veriﬁcation fails. Although, the trace provided by
ProVerif is a false attack, it does give a hint of the real
attack by highlighting the test of the MAC received from
the network as the source of the problem. The adoption of
formal veriﬁcation tools during protocol design could have
thus revealed design ﬂaws.
4. THE ATTACKS IN PRACTICE
In order to test the attacks presented in Section 3 in a de-
ployed telecommunication network, we use a commercially
available femtocell. Although, the particular femtocell hard-
ware is tied to the network operator SFR, the proposed at-
tacks are not. Indeed, we tested the attacks using mobile
phones registered to diﬀerent operators, hence just using
SFR as serving network. The authentication token AU T N
is still provided by the victim’s Home network. So by test-
ing our attacks on T-Mobile, O2, SFR, and Vodafone victim
MSs, we establish that all these tested networks are vulner-
able to the attacks described above. However, we want to
stress here that our implementation has the only purpose of
showing the feasibility of our attacks and conﬁrm that real
cellular networks follow the 3GPP standard speciﬁcations
and thus are vulnerable to the proposed attacks. The same
attacks could be mounted by appropriately programming a
USRP [21], which is a hardware device able to emit and
receive radio signals. In this case, one could obtain wider
range attack devices in order to monitor larger areas.
4.1 Femtocell architecture
A femtocell is a device that acts as a small base station
to enhance 3G coverage and connectivity, especially inside
buildings with otherwise bad coverage. Its coverage radius
ranges from 10 to 50 meters. It connects mobile phones to
the network of the corresponding MNO (Mobile Network
Operator) using an existing wired Internet connection pro-
vided by the femtocell user, not the operator. 3G femto-
cells, also called Home Node B (HNB) support most of the
functionalities provided by a typical 3G base station (Node
B), e.g. physical layer (radio signalling) functions. In ad-
dition, the HNB establishes an authenticated secure tunnel
over the Internet with the network of the operator. Using
this encrypted connection, the femtocell forwards all radio
signalling and user-generated traﬃc to the GANC (GAN
Controller), which is connected to the core network of the
operator (refer to [7] for more details of the femtocell archi-
tecture).
The communication between the femtocell and the GANC
is based on the Generic Access Network (GAN) protocol.
The GAN protocol, was originally designed to allow mobile
communication over Wi-Fi access points. The protocol was
standardised by MNOs in 2004 [25] and led to the GAN spec-
iﬁcation [4, 5] in 2005. This speciﬁcation has been adopted
and extended to be used in femtocell environments [35] .
The femtocell uses this protocol to forward communication
1The ProVerif code is available online [2]
Figure 4: Experimental Attack Setup
from a mobile station via the GANC to the network or vice
versa. The MS does not need any special GAN support, it
just connects to the femtocell in the same way as it connects
to a standard base station. The femtocell maps all Layer-3
radio signalling to TCP/IP based GAN messages and passes
them to the GANC. Thus, it transparently encapsulates all
traﬃc generated by the phone and the network.
4.2 Attack Procedure
For the purpose of implementing our attacks (Section 3),
we use a compromised femtocell like the one described in [23].
More speciﬁcally, we reproduce the hacking performed in [23]
to gain root access of our femtocell and redirect the traﬃc
to a Man in the Middle (MitM) GAN proxy, positioned be-
tween the femtocell and the GANC. We use this MitM GAN
proxy as entry point for message injection. In particular, us-
ing the MitM GAN proxy we can inject messages into the
connection between the MNO and the femtocell. The fem-
tocell forwards these messages to the mobile phone, mak-
ing them appear as if legitimately delivered by the MNO.
To perform the attacks, we intercept, modify and inject
3G Layer-3 messages into the communication from the base
station to the mobile phone in both directions, GANC-to-
femtocell and femtocell-to-GANC. We redirect all the traﬃc
between the femtocell and the GANC to our GAN proxy.
The GAN traﬃc is cleartext travelling over an IP Sec tun-
nel for which we own the key material, thanks to the initial
rooting/hacking of the femtocell. Additionally, we devel-
oped a set of applications which allow us to intercept, ma-
nipulate or insert selected messages, and distinguish diﬀer-
ent types of GAN messages. This allows us, for example, to
cache subscribers information used to perform the attacks.
In particular, we store the random challenge RAND, the au-
thentication token AUTN , the TMSI and the IMSI of our
victim MS. This information is directly extracted from the
traﬃc that is passed through the MitM GAN proxy.
IMSI-Paging Procedure Attack To perform the IMSI
paging attack, our software crafts a paging message encod-
ing the necessary paging headers and parameters and a mo-
bile station identity, i.e. one of the previously stored victim
IMSIs. The crafted paging request is then sent by the GAN
proxy to the femtocell. When the victim mobile phone re-
ceives the IMSI paging request, it readily answers with a
paging response containing the victim’s TMSI. Thus, by in-
jecting a paging request, we can check whether a phone be-
longing to a designated victim is in the area covered by our
device. In case of success, the phone generates the paging
response, while a failed attempt generates no message. In
general, it is possible that more than one phone replies to
a paging request during the same time slot. However, one
can repeat this procedure multiple times and correlate the
timing and TMSI usage from the multiple replies as in [20].
209Figure 5: Successful Linkability-Attack
AKA Protocol attack To perform the AKA attack we re-
play a given authentication message for a speciﬁc target for
which the GAN proxy cached the legitimate authentication
data, i.e. RAND, AUTN . This data is sent unencrypted
on the radio link and could be captured with any equip-
ment capable of sniﬃng the radio link. As soon as a dedi-
cated channel is allocated to the MS, e.g. after being paged
or when initiating a phone call, our software crafts an au-
thentication request Auth Req using the previously cached
RAND and AUTN , i.e. replays a previous request. This
request is encapsulated into a GAN message and sent to the
femtocell. The femtocell takes care of delivering the authen-
tication request message on the dedicated channel assigned
to the MS, as illustrated in Figure 4. The phone performs
a validation of the authentication request and answers with
the authentication response. If the response to the replayed
authentication is a Synchronisation Failure (Figure 5), then
the MS on this dedicated channel is the victim’s phone, and