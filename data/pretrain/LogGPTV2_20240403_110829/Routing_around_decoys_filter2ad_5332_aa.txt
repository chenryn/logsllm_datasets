title:Routing around decoys
author:Max Schuchard and
John Geddes and
Christopher Thompson and
Nicholas Hopper
Routing Around Decoys
Max Schuchard1
PI:EMAIL
John Geddes1
PI:EMAIL
Christopher Thompson2
PI:EMAIL
Nicholas Hopper1
PI:EMAIL
1: Department of Computer Science and Engineering, University of Minnesota, Twin Cities
2: Department of Electrical Engineering and Computer Science, University of California, Berkeley
ABSTRACT
Decoy Routing is a new approach to Internet censorship circum-
vention that was recently and independently proposed at FOCI’11,
USENIX Security’11 and CCS’11. Decoy routing aims to ham-
per nation-state level Internet censorship by having routers, rather
than end hosts, relay trafﬁc to blocked destinations. We analyze
the security of these schemes against a routing capable adversary,
a censoring authority that is willing to make routing decisions in
response to decoy routing systems.
We explore China, Syria, Iran, and Egypt as routing capable ad-
versaries, and evaluate several attacks that defeat the security goals
of existing decoy routing proposals. In particular, we show that a
routing capable adversary can enumerate the participating routers
implementing these protocols; can successfully avoid sending traf-
ﬁc along routes containing these routers with little or no adverse
effects; can identify users of these schemes through active and pas-
sive attacks; and in some cases can probabilistically identify con-
nections to targeted destinations.
Categories and Subject Descriptors: C.2.0 COMPUTER COM-
MUNICATION NETWORKS: Security and protection
General Terms: Security
Keywords: Decoy Routing, BGP, Telex, Cirripede, Censorship
1.
INTRODUCTION
Decoy routing [19, 27, 18], as exempliﬁed by Telex and Cirri-
pede, is a new approach to building an anti-censorship tool. Instead
of the traditional end-to-end based proxy solution, decoy routing
instead places the proxies in the middle of paths, speciﬁcally at
routers hidden throughout the Internet. Instead of explicitly con-
necting to these proxies, the user selects a destination whose path
crosses a decoy router and signals to the router to act as a man-
in-the-middle, proxying the connection to its real destination. This
solves one of the main weaknesses of traditional proxies — enu-
meration and blocking by the censoring entity. Additionally, unlike
traditional proxies, it is an explicit goal of decoy routing schemes
to hide a client’s usage of the system.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$15.00.
In this paper, we introduce the routing adversary, a new class
of adversary against censorship circumvention schemes. The rout-
ing adversary is a censoring authority who is capable of controlling
how packets originating from its network are routed. We describe
new attacks that can be launched by a routing adversary, and allow
the censoring authority to defeat each of the security goals of decoy
routing schemes. In particular, we show that a censoring authority,
or warden, that has this capability can detect the network locations
of decoy routers; we demonstrate that a warden in control of how
a user’s packets are routed can prevent those packets from being
seen by the decoy routing system; we show how an adversary that
can predict the properties of paths to innocent destinations can de-
tect the use of decoy routing through timing analysis; and we show
how that same warden can launch conﬁrmation attacks that, by ex-
ploiting the differences between a normal user and a decoy routing
user, test if a host is utilizing a decoy routing system.
The majority of the attacks we present focus on wardens who
are able to exert control on how a user’s packets are routed.
In
particular, to launch our attacks the warden must be able to locate
decoy routers and select from a diverse set of paths in reaction to
this knowledge. We show that a restrictive nation-state — an entity
decoy routing was explicitly intended to defeat — presents exactly
such an adversary. Because of their history of interference with
open Internet access and the diversity of their Internet connectivity,
we use the examples of China, Syria, Iran, and Egypt to evaluate
the effectiveness of these attacks.
Armed with both the knowledge of where decoy routers are lo-
cated and a diverse collection of paths through the Internet, a war-
den is able to attack both the availability and deniablity of existing
decoy routing schemes. In Section 4 we show how previous propos-
als for where to locate decoy routers allow a warden to ﬁnd paths
around them, preventing user trafﬁc from being proxied. Worse, the
warden can take advantage of the fact that while traditional hosts
are not sensitive to the paths their packets take (a direct extension
of the end-to-end principle), decoy routing users are. We will show
a variety of ways a warden can detect this difference using active
and passive means.
In addition to attacks focusing on manipulating the paths packets
take, we also present a collection of attacks that exploit path prop-
erties, speciﬁcally latency. In Section 5 we consider passive timing
attacks which can detect the usage of decoy routing. Even worse,
we show that it is possible to ﬁngerprint the covert website to which
a user is connecting. The most troubling element of these attacks is
that they are usable by weak wardens without the ability to control
the path a user’s packets take.
Finally, we show that there are fundamental difﬁculties based on
the physical and economic architecture of the current Internet that
limit the potential countermeasures to our attacks. We show that
85a deployment capable of denying these capabilities to a warden
may be infeasible, requiring large fractions of the Internet to de-
ploy decoy routers. Likewise, we discuss the limitations of trafﬁc-
shaping or other techniques in defeating timing analysis based on
path properties. These limitations imply that while decoy routing
may require a change in the tactics of censoring authorities, it is not
an effective solution to the censorship circumvention arms race.
The remainder of the paper is organized as follows. In Section 2
we provide background information on decoy routing and Internet
path selection. We then take a closer look at the implications of
various countries as wardens and detail the relevant capabilities of
such wardens in Section 3. In Section 4 we describe and evaluate
attacks based on routing capabilities, under the deployment scenar-
ios considered by previous work on decoy routing. Then in Sec-
tion 5 we see how a warden can use ﬁngerprinting to both detect
when decoy routing is being used and, in some cases, with whom a
client is actually communicating, evaluating our attack against the
deployed Telex [27] station. Section 6 discusses the difﬁculties in
countering our attacks, while Section 7 discusses related work.
2. BACKGROUND
Internet censorship circumvention tools aim to provide users with
unrestricted connectivity to network resources, even when those
users are located in networks controlled by the censor, henceforth
referred to as the warden. The mostly widely deployed censor-
ship resistance tools used today combine proxies and encrypted
tunnels, examples of which include Tor [9], JAP [3], and Ultra-
surf [7]. These systems provide an end-to-end approach to circum-
venting Internet censorship. The user makes a connection to one of
these services and the service then acts as a proxy, relaying trafﬁc
between the user and the censored destination.
Unfortunately, censorship authorities have responded to these
schemes with increasingly sophisticated mechanisms for identify-
ing the hosts providing this service; for instance, there is docu-
mented evidence that both China and Iran have at times applied
sophisticated Deep Packet Inspection (DPI) techniques and, in the
case of China, active network probing, to every outgoing TLS con-
nection in an effort to identify Tor Bridges [1, 4]. Once these hosts
have been enumerated, these systems are easily defeated by block-
ing all connections to their IP addresses. To solve this issue, decoy
routing systems were proposed. Decoy routing aims to fundamen-
tally alter the way users communicate with the censorship resis-
tance system.
2.1 Decoy Routing
Decoy routing systems [19, 27, 18], proposed concurrently by
Karlin et al., Wustrow et al., and Houmansadr et al., use an end-
to-middle approach to communication in an attempt to avoid be-
ing easily blocked. Instead of the censorship circumvention sys-
tem being one of the endpoints in the communication, it is located
amongst the routers used to forward packets on the Internet. Rather
than making a direct connection to the proxy, the user instead se-
lects an uncensored destination, called the overt destination, and
initiates a TLS [8] connection to that host. The overt destination
is selected such that the path from the user to the overt destina-
tion passes over a router participating in the decoy routing system,
called a decoy router. The user signals the decoy router in a man-
ner that the warden cannot observe, and the decoy router proceeds
to act as a proxy, sending trafﬁc not to the overt destination, but to
the user’s actual destination, called the covert destination. To the
warden, it appears that the user has a functional TLS connection
with the overt destination, when it actually has a connection with
the covert destination.
The details of how this is done vary based on the exact system
being used. Currently, two implementations of decoy routing exist:
Telex [27] and Cirripede [18]. In both systems, users signal their
intention to use decoy routing by selecting random ﬁelds in packets
(the TLS nonce in the case of Telex and the initial sequence number
in the case of Cirripede), in a predictable, but unobservable, man-
ner. The clients then proceed to complete a TLS handshake with
the overt destination, while the decoy router acts as a man-in-the-
middle, eventually extracting the negotiated cryptographic key. At
this point the decoy router switches to proxy mode for this connec-
tion, terminating the connection from the perspective of the overt
destination with a TCP reset, and extracting the user’s covert desti-
nation from packets sent by the user. For more details on how these
systems function, we refer the reader to the original works.
2.2
Internet Routing
Of central importance to our work is how paths through the In-
ternet are built. The Internet is composed of many autonomous sys-
tems (or ASes), sets of routers and IP addresses each under singular
administrative control. Between ASes on the Internet, the Border
Gateway Protocol [25] (BGP) is the de facto routing protocol. It
allows the exchange of information between ASes about routes to
blocks of IP addresses, allowing each AS to have knowledge of how
to forward packets toward their destinations. BGP is a path-vector
routing protocol with policies. This means that routes contain the
path they traverse along with other qualities, and individual routers
can deﬁne their own policies for which routes are considered “best”
and used to forward packets.
These policies frequently extend beyond simply choosing the
“fastest” or “shortest” routes: they allow complex and ﬂexible de-
cisions based on the relationships between ASes. In the Internet,
there are three types of economic relationships between ASes: cus-
tomer, provider, and peer. If A is a customer of B, then A pays B
to carry trafﬁc. Thus B is a provider of A. Two ASes can be peers
of each other if they both agree to carry each others’ trafﬁc without
charge. Because of these economic implications, a customer will
not advertise routes to its providers other than those it or its cus-
tomers originate. A provider will advertise all routes to all ASes to
any of its (paying) customers. These basic policies constitute what
is known as “valley-free routing” [13]—an AS never redistributes
routes from one of its providers to another; if they violated this,
they would end up paying for the privilege of carrying trafﬁc for
their providers. Valley-free routing is one example of routing de-
cisions based on policy rather than path qualities. In principle, a
BGP speaker can form a policy based on arbitrary criteria, a sub-
tlety which is taken advantage of in Sections 3 and 4.
Due to the predictable routing behavior between ASes on the In-
ternet, it is possible to infer the path along which trafﬁc to a partic-
ular destination will be forwarded. Prior work by Qiu and Gao [24]
and Mao, Qiu, Wang, and Zhang [20] detail methods for inferring
the path between two endpoints on the Internet without requiring
access to either.
The Internet’s topology can be seen as a core of densely con-
nected ASes, surrounded by a fringe of ASes that each have at most
a handful of connections. The dense and widely geographically
distributed core of the Internet means that there is a high amount of
path diversity between any two ASes. This allows for operation to
continue despite link failures, policy changes, and other potential
issues. Each router maintains a routing table (the routing informa-
tion base, or RIB), of all BGP routes it learns, and a forwarding
table (the forwarding information base, or FIB), where the route
chosen as “best” is stored and used to actually forward packets.
But, at any given time, any of the routes in the routing table are
86Country
Australia
China
France
Iran
Syria
Venezuela
ASNs
642
177
434
96
3
30
IP Addresses
38,026,901
240,558,105
31,974,177
4,073,728
665,600
4,135,168
PoC External ASes
7
3
7
1
1
4
470
161
553
58
7
22
Table 1: The number of autonomous and IP addresses in each coun-
try, as well as the number of points of control (the smallest number
of ASes that control 90% of IP addresses), and the number of ex-
ternal ASes directly connected to each country.
valid, and could be used in the forwarding table. Thus, an AS po-
tentially has as many paths to each destination as it has outbound
connections (peers and providers). Additionally, it can be possi-
ble to use the variety of additional route properties (such as the AS
path or community attributes) to gain even more possible paths to
a given destination.
3. ROUTING CAPABLE ADVERSARIES
The goal of any warden is to prevent users from accessing a set
of “forbidden” websites. This could be accomplished through a
variety of means, such as dropping inbound or outbound trafﬁc, re-
setting TCP connections, or hijacking and middleboxing encrypted
connections. A warden willing to make routing decisions in re-
sponse to decoy routing systems can be considered a routing capa-
ble adversary (or simply a routing adversary).
Since an AS can simply change its policy conﬁguration to al-
ter which route it uses, and thus which path packets take, it is in-
teresting to consider what tools this gives a warden. In addition
to analyzing all trafﬁc entering and leaving the network, a rout-
ing capable adversary is free to violate best practices and many
assumptions about routing policy (e.g., those based on economic
incentives, such as valley-free routing). As covered in Section 2.2,
since routers store all currently valid routes, they can easily select
between any of them for use in the forwarding table. Additionally,
the warden could be selective about how it advertises routes to the
rest of the Internet, to inﬂuence how trafﬁc enters its network.
3.1 Wardens as Routing Adversaries
Since decoy routing was designed to defend against wardens as
powerful as a nation-state, let us consider a variety of countries that
have a history of monitoring Internet usage and censoring Internet
access: Australia, China, France, Iran, Syria, and Venezuela. These
countries also vary widely in the size and complexity of their net-
work and their connectivity to the rest of the Internet.
Since a country can hold large amounts of political and economic
control over the ASes operating within their borders, we can con-
sider each to be not several individual ASes, but instead coalitions
of ASes. While individual ASes within a warden country might
have low degree in the Internet topology, collectively their connec-
tivity to the rest of the Internet can be much higher. Using data
from CAIDA [2] and the Berkman Center [6], we determined the
size and connectedness of each country, as shown in Table 1. As
an example, consider China with direct connections to 161 external
ASes. This high degree of connectivity to the rest of the Internet
means that China can select from up to 161 different paths to any
given destination on the Internet. While other nations, for example
Iran and Syria, are less well-connected, they still maintain a sufﬁ-
cient level of path diversity to perform routing attacks, as we will
show in Section 4.
A wide variety of network engineering techniques can be used
internally to allow a warden to take advantage of their path diver-
sity. A warden could, for example, request that an ISP black-hole
trafﬁc (advertise a route that is highly preferable to existing ones) to
a target destination so that they can forward it out one of their exter-
nal connections. Another possible mechanism would be to have all
ISPs share MPLS VPN tunnels [26], allowing them to tunnel traf-
ﬁc for particular destinations to the desired external connections.
No matter the exact mechanism, a warden has access to a poten-
tially large number of unique paths for the majority of destinations,
allowing it to act as a powerful routing adversary.
4. ROUTING ATTACKS
Decoy routing schemes have viewed the problem of selecting
where to deploy decoy routers as an issue of availability. It is obvi-
ous that if a user does not have even a single destination whose path
crosses a decoy router, he can not utilize the system. Moreover, a
user needs to be able to locate such a path quickly. Overcoming
these two challenges are where authors have focused in the past.
The ﬂaw in prior work is that it approaches these issues assuming
that the warden is not an active adversary. However, as discussed in
Section 3, wardens are not passive entities. In this section, we show
how a warden can identify which ASes are running decoy routers,
even in extremely large deployments. We then show how a warden
is able to launch both active attacks against the availability of decoy
routers and attacks that conﬁrm if a user is utilizing a decoy routing
system, defeating both speciﬁc security goals of these systems.
4.1 Detecting Decoy Routers
Some of our attacks require that the warden knows where decoy
routers are deployed. In Telex [27], it is assumed that the direc-
tory of decoy routers is made publicly available, allowing clients to
choose their overt destinations such that the usual path taken will
cross a decoy router. While a public directory of decoy routers
makes the use of decoy routing much simpler from the client’s per-
spective, it also tells the warden which ASes are participating. Cir-
ripede [18], however, instead relies on clients probing various des-
tinations until they discover a path that crosses a decoy router. But
even without such a public directory, the warden can still uncover
which ASes are participating using an intersection-based discovery
attack.
To determine which ASes are running decoy routers, the warden
can probe a large number of paths to various destinations on the
Internet using its own client. If the client does not connect to the
decoy routing system using a path, the warden can add all ASes on
that path to its list of “clean” ASes—the ASes that it knows are not
running decoy routers. Using this list, the warden can proceed to
look at all paths on which the client was able to connect. For each
such path, the warden prunes out the known clean ASes, leaving
only ASes which might be running decoy routers. If there is only a
single AS left on such a path after pruning, then the warden knows
that that AS must be running decoy routing (we refer to such ASes
as being “tainted”).
If more than one AS remains on a path after pruning, there are
two possibilities. First, the warden can attempt to construct a new
path for each AS remaining that otherwise only contains known
clean ASes. As before, if the client fails to connect on these new
paths, then that AS is also clean. If the client does connect, then
that AS is tainted.
The second possibility is that the warden is unable to construct
a new path. Note that the warden can always determine if the ﬁrst
AS on the pruned path is running decoy routing: they simply have
the client attempt to connect to a destination inside that AS. From
87l
e
b
a
h
c
a
e