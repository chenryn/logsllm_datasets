### Final Test and Learning Through Struggle

In the final test, participants were required to toss bean bags at a target placed three feet away. Interestingly, the group that practiced exclusively at this distance was outperformed by another group that practiced at two and four feet. This outcome, along with other studies, highlights the importance of struggle in the learning process. Struggle is not only crucial but often more beneficial than mere repetition for developing the neural pathways necessary for acquiring new skills (Kerr and Booth, 1978).

### The Importance of Struggle in Learning

Struggle, rather than rote repetition, is key to effective learning. This principle is reflected in the OffSec learning materials, which avoid excessive repetition. Instead, we encourage self-directed learners to revisit specific sections as needed. We often take an indirect approach to problem-solving, intentionally trying methods that may not work to foster resilience and adaptability. This is akin to moving the target around, making the learning process more dynamic.

We believe that memorizing syntax is less important than becoming familiar with challenges and comfortable with struggle. This mindset is essential in the field of information security, where encountering and overcoming obstacles is a regular part of the job.

### Embracing Challenges

It's expected that students will encounter difficulties during their learning journey. Getting stuck can be frustrating, but it is a critical part of the learning process. Being comfortable with not having all the information and working through problems is vital for success in cybersecurity. To support this, we sometimes create scenarios that lead to "getting stuck" and provide technical exercises that go beyond simple repetition. Our goal is to help students become adept at recovering from these situations.

For more on this concept, which we call the "Try Harder Mindset," see our detailed discussion and strategies elsewhere (OffSec, 2023).

### Contextual Learning and Interleaving

Whenever possible, OffSec’s learning materials present new skills within realistic scenarios. While this approach can be challenging, especially for basic skills like renaming a file, it significantly enhances retention and success (Osika et al., 2022). Contextual learning allows students to make multiple connections, improving their understanding. For example, learning about an attack method and its detection simultaneously helps the brain form more robust connections. This method is known as interleaving (University of Arizona, 2022).

### Case Study: chmod -x chmod

To better understand these teaching and learning principles, let's explore executable permissions as a case study. This section aims to demonstrate how OffSec's training materials are structured and how we approach learning.

#### Learning Objectives
1. Review a sample of learning material about executable permissions, expand beyond the initial information set, and work through a problem.
2. Understand how OffSec’s approach to teaching is reflected in the sample material.

This Learning Unit should take about 30 minutes to complete.

#### What is Executable Permission?

Every file on a Linux machine has additional properties, such as creation date, owner, and permissions. File permissions determine whether a user can read, write, or execute a file. These permissions apply to different types of users: the file owner, the user ownership group, and others. For this module, we'll focus on the file owner.

Let's open a terminal and create a file using the `touch` command, then use `ls -l` to view its permissions.

```bash
kali@kali:~$ touch newfilename.txt
kali@kali:~$ ls -l newfilename.txt
-rw-r--r-- 1 kali kali 0 Jun 6 12:31 newfilename.txt
```

The `ls -l` output shows that we have read and write permissions but no execute permission. If `newfilename.txt` were a program, we wouldn't be able to run it, which is a useful security feature.

Now, let's create a Python script named `find_employee_names.py` and try to run it.

```bash
kali@kali:~$ ./find_employee_names.py
zsh: permission denied: ./find_employee_names.py
kali@kali:~$ ls -l find_employee_names.py
-rw-r--r-- 1 kali kali 206 Jun 7 12:31 find_employee_names.py
```

The "permission denied" error indicates we lack execute permission. Let's add this permission using `chmod +x`.

```bash
kali@kali:~$ chmod +x find_employee_names.py
kali@kali:~$ ls -l find_employee_names.py
-rwxr-xr-x 1 kali kali 206 Jun 7 12:31 find_employee_names.py
kali@kali:~$ ./find_employee_names.py
R. Jones
R. Diggs
G. Grice
C. Smith
C. Woods
D. Coles
J. Hunter
L. Hawkins
E. Turner
D. Hill
```

The script now runs successfully. Let's remove the execute permission again.

```bash
kali@kali:~$ chmod -x find_employee_names.py
kali@kali:~$ ./find_employee_names.py
zsh: permission denied: ./find_employee_names.py
```

#### Going Deeper: Encountering a Strange Problem

Consider that the `chmod` command itself is a file with permissions. If we accidentally remove the execute permission for `chmod`, we won't be able to use it to set permissions.

```bash
kali@kali:~$ ./find_employee_names.py
zsh: permission denied: ./find_employee_names.py
kali@kali:~$ chmod +x find_employee_names.py
zsh: permission denied: chmod
```

To fix this, we can copy the `ls` command, which has the necessary permissions, and use it to change the permissions of `chmod`.

```bash
kali@kali:~$ cp /usr/bin/ls chmodfix
kali@kali:~$ ls -l chmodfix
-rwxr-xr-x 1 kali kali 147176 Jun 8 08:16 chmodfix
```

Our new `chmodfix` file has the same permissions as `ls`. We can now use it to change the permissions of `chmod`.

```bash
kali@kali:~$ cat /usr/bin/chmod > chmodfix
kali@kali:~$ ls -l chmodfix
-rwxr-xr-x 1 kali kali 64448 Jun 8 08:21 chmodfix
```

Finally, we can use `chmodfix` to add execute permission to our script.

```bash
kali@kali:~$ ./chmodfix +x find_employee_names.py
kali@kali:~$ ./find_employee_names.py
R. Jones
R. Diggs
G. Grice
C. Smith
C. Woods
D. Coles
J. Hunter
L. Hawkins
```

### Conclusion

This case study demonstrates the importance of contextual and interleaved learning. By working through real-world scenarios, students can better understand and retain complex concepts. For more information on the Try Harder Mindset and other related topics, please refer to the provided references.

PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.  
Made in Morocco  
Penetration Testing with Kali Linux