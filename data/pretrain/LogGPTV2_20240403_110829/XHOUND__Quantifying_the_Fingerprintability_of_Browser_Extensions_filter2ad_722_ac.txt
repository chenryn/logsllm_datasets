between the 9,000 and 10,000 rank.
according
to
to
popularity,
differences
Fingerprintability as a function of category
Next
the
ﬁngerprintability of extensions differs among categories.
As Table IV-A illustrates, many shopping extensions are
detectable on at least one URL, presumably, being designed
for a speciﬁc set of online stores; as well as social extensions,
which support speciﬁc popular social websites. At the same
time, some universal shopping extensions and those belonging
to categories like accessibility, productivity and photos, are
more content-dependent and therefore, more of them can be
detected on any arbitrary URL. According to the Pearson’s
Chi-squared test, in both of the cases URL dependent and
independent on-page changes, ﬁngerprintability is signiﬁcantly
dependent on categories, as p-values for the null hypothesis
of their independence are 3.812e-15 and 2.2e-16 respectively.
Uniqueness and types of DOM modiﬁcations
By analyzing the DOM changes incurred by the 1,656 de-
tectable extensions, we discovered that almost 90% of them
perform uniquely identiﬁable combinations of changes, and
more than 86% have at least one completely distinct on-page
side-effect that cannot be attributed to any other extension
or group of extensions. In other words, the vast majority of
ﬁngerprintable extensions perform at least one DOM change
(or combination of changes) that is unique to each one of them.
Therefore, for the majority of extensions, a web tracker can
create signatures based on their DOM changes and precisely
947
DETECTABLE EXTENSIONS PER CATEGORY
TABLE I
Category
#Evaluated Ex-
tensions
Productivity
Social & Commun.
Fun
Accessibility
Developer Tools
Search Tools
Shopping
News & Weather
Photos
Blogging
Unknown
Sports
3,438
1,397
1,300
952
936
595
444
336
208
144
129
121
Detectable
On
Some
URLs
14.95%
27.06%
12.92%
17.02%
9.29%
13.28%
34.68%
4.76%
19.71%
14.58%
23.26%
4.96%
Detectable
On
Any
URL
10.01%
9.81%
6.31%
11.87%
8.23%
5.71%
17.57%
3.87%
11.54%
5.56%
4.65%
4.13%
attribute the changes to the underlying browser extension. The
main type of extension which was not uniquely identiﬁable
is that of ad-blockers. Our current static honey pages utilize
tracking scripts from well-known web trackers which appear
to be in the blacklists of most of the evaluated extensions.
However, as recent research has shown [40], the blacklists
of different ad-blockers are not identical, hence, an interested
party could potentially analyze the blacklist of each extension
and pinpoint entries that are unique to each one. This task
requires a signiﬁcant upfront cost of getting and maintaining
a large list of ad URLs and exposing all ad-blockers to these
URLs in order to identify their “blind spots.” We consider this
procedure as out-of-scope for this paper.
Table II shows statistics of the four types of modiﬁcations
performed by the 1,656 ﬁngerprintable extensions. Speciﬁ-
cally, whenever an extension modiﬁes the DOM it can i) add
a new DOM element, ii) delete an existing DOM element, iii)
set/change a tag’s attribute, and iv) change the text on the page.
As the data shows, the most popular action among ﬁngerprint-
able extensions is to introduce new elements on a page. These
new elements are typically used to provide extension-driven
UIs to the user, such as, additional controls, overlays, and
menus. The LastPass and SaveToPocket extensions described
in Section II-B, both fall into this category. A consequence of
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:21:24 UTC from IEEE Xplore.  Restrictions apply. 
TYPES OF DOM CHANGES FROM EXTENSIONS
TABLE II
Type
New DOM node
Changed attribute
Removed DOM node
Changed text
Extensions
78.7%
41.6%
15.8%
4.7%
In on-the-ﬂy content
20.3%
84.4%
59.9%
61.5%
this ﬁnding is that, extension authors who wish to protect the
privacy of their users, may have a hard time implementing their
desired functionality without introducing changes in a page’s
DOM. We further elaborate on this problem and possible
solutions in Section VI.
The low percentage of discovered textual changes may be
due to the limited textual content of XHOUND’s static honey
pages. Our honey pages can be straightforwardly extended to
include a larger and more varied text corpus, including more
speciﬁc words, names, and headings.
i.e.
Overall, 42.9% of
they query on web pages,
the ﬁngerprintable extensions make
changes to the content
to
the DOM hierarchies or particular elements that are created
on-the-ﬂy by our honey pages. Table II shows how such
modiﬁcations in queried contents contribute to the amount
of detected extensions per each type of DOM changes. This
proves the value of dynamic honey pages in the detection of
ﬁngerprintable extensions. Moreover, almost 90% of 1,656
detected extensions issue at least one query to the DOM,
which will often serve as a check that an extension is on the
right page, before it proceeds to modify the available content.
i.e., XHOUND could not
Longitudinal analysis of ﬁngerprintability
To understand whether the ﬁngerprintable DOM changes are
temporal artifacts of extension development, or necessary
modiﬁcations that persist through time, we performed a small-
scale, longitudinal study of ﬁngerprintable extensions. Specif-
ically, we waited for four months since the original collection
of Chrome extensions and examined the updated versions
of a sample of 2,000 extensions. 1,000 of these extensions
were originally ﬁngerprintable by XHOUND, and 1,000 were
identify any
originally invisible,
DOM changes for any of these extensions. Table III shows the
results of our analysis. First, we ﬁnd that more than 90% of the
extensions are still available in the Chrome store. Among the
extensions that were originally ﬁngerprintable, approximately
38% were updated and, overall, 88% of them remained ﬁn-
gerprintable. An example of an extension that stopped being
ﬁngerprintable is the Hola extension [26] that provides free
VPN access to its users. Speciﬁcally, the extension used to
set a “hola ext inject” attribute to the root HTML node of
each visited page, but now only sets a similar attribute on
URLs owned by hola.org. It is likely that this change was
a reaction due to a recent crackdown by streaming services,
such as, Netﬂix, on users that utilize VPNs and proxies to fake
their location and stream content that is not available to their
home country [33]. At the same time, nine extensions that were
948
TRENDS IN FINGERPRINTABILITY OF EXTENSIONS (RE-RUNNING
EVALUATION AFTER 4 MONTHS)
TABLE III
Sample
Detectable
Invisible
Available
91.0%
95.3%
Updated
37.9%
25.9%
Detectable
88.0%
3.73%
previously invisible to XHOUND, became ﬁngerprintable. An
example extension is Imagine Easy Scholar [25], which started
injecting additional style sheets on more recent versions of the
extension.
Finally, we took advantage of the elapsed time of our
previous experiment (four months),
to assess whether the
“new” top 1,000 extensions were as ﬁngerprintable as the
“old” top 1,000 extensions. We found that the intersection
of these two sets of top 1,000 extensions was 79.8% out
of which 54.6% had updated their versions. By applying
XHOUND on the new top 1,000 extension set, we discovered
that 12.2% of the extensions were ﬁngerprintable on any
arbitrary URL, while 21.6% were ﬁngerprintable on at least
one popular URL, compared to our previous 13.2% and 23%.
As such, we can conclude that the fraction of ﬁngerprintable
extensions appears to be a stable property of the extension
ecosystem and is therefore an issue that will not be resolved
by itself.
Fingerprintability of extensions for other browsers
A browser extension’s modiﬁcations to web pages that are
taken advantage by XHOUND to ﬁngerprint it, are part of that
extension’s organic activity, rather than a speciﬁc vulnerability
of a particular browser. Therefore, other popular web browsers
that support extensions are likely to “allow” extension ﬁnger-
printing. To test this assumption, we modify XHOUND and
use it on the most popular extensions of Mozilla Firefox. At
the time of this writing, the Firefox browser supports several
technologies for developing add-ons, though developers are
ofﬁcially advised to use the newest WebExtensions APIs, or
its predecessor, the Add-on SDK. Since XHOUND is already
compatible with the WebExtensions API (since this is the one
used by Google Chrome), to support Add-on SDK extensions,
we enhanced our patching methods to include the ability
to intercept DOM queries from programmatically injected
content scripts (as each such script runs in its own execution
context).
Among the most popular 1,000 Firefox extensions im-
plemented with either WebExtensions or Add-on SDK, we
found that 16% are ﬁngerprintable on at least one URL, and
7.3% on any domain. The ﬁngerprintable extensions include
add-ons that have equally ﬁngerprintable Chrome versions
like Ghostery, Grammarly, Turn Off the Lights and, Privacy
Badger, as well as extensions which are only detected on
Firefox, such as, ZenMate Security & Privacy VPN. 88% of
the ﬁngerprintable Firefox extensions introduce distinct on-
page changes which can thus be used for precise attribution
of changes back to their originating extensions. Similar to
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:21:24 UTC from IEEE Xplore.  Restrictions apply. 
the analyzed Chrome extensions, the most popular types of
changes are the addition of new DOM elements (67%), the
changing of particular attributes (37%) and the deleting of
parts of content (27%). Overall, these results correlate with
our ﬁndings from examining Chrome extensions, showing that
extensions developed for either browser are equally likely to
be ﬁngerprintable.
B. Fingerprintability of Regular Users based on their
Extensions
In Section IV-A we showed that a signiﬁcant fraction
of popular browser extensions are ﬁngerprintable,
i.e., a
website could infer the extensions installed by preparing
an appropriately-structured DOM and allowing the installed
extensions to modify it. At
the same time, even though
knowing that an extension is installed could be used to infer
a user’s preferences (we discuss this issue in Section VI),
that, in itself, does not allow websites to uniquely identify the
user. In order for users to be uniquely identiﬁable, they must
not only utilize ﬁngerprintable extensions, but each user must,
to a certain extent, utilize a different set of ﬁngerprintable
extensions.
Collecting extension-usage data from real users
To understand the sets of extensions that everyday users of the
web install, and to what extent these extensions could be used
for uniquely identifying users, we deployed several surveys
where we collected the list of installed extensions from each
volunteering user.
In prior work, when researchers where collecting data to
assess the ﬁngerprintability of browsers, they would merely
ask users to visit a website which would utilize JavaScript
to collect various attributes of the users’ browsing environ-
ments [19], [36]. In our case, since browsers do not have APIs
for collecting the list of installed extensions, the only way
of collecting installed extensions through the mere visiting
of a website, would be to use XHOUND’s results and cre-
ate webpages that would ﬁngerprint extensions through their
DOM changes. While, as we later show in Section V, it is
certainly possible to ﬁngerprint the extensions that have been
analyzed by XHOUND, we would have no way of gauging
the ﬁngerprintability of extensions that were not in the set
of extensions analyzed by our system, e.g., less popular, or
custom extensions. Therefore, we opted to design and imple-
ment a browser extension which, upon installation, retrieves
the list of other extensions installed on the user’s browser, and
send this list to our monitoring server, in an anonymous (no
PII collected) and secure (using HTTPS for communication)
fashion. In addition to the list of extensions, our extension also
calculates and sends the size of the browsing history and the
number of cookies in the browser’s cookie jar (just the size,
not the actual history or cookies). As we discuss later in this
section, we use these quantities to isolate entries of users who
are not active users of Google Chrome, e.g., users who could
have just installed the browser in order to participate in our
surveys and get compensated.
CONDUCTED SURVEYS FOR EXTENSION PROFILES
TABLE IV
Survey Audience
Friends and Colleagues
US MTurk Workers
Non-US MTurk Workers
Students
Total
Participants
51
313
196
294
854
#Unique
Extensions
148
482
312
385
941
ACTIVE USERS OF EXTENSIONS PER SURVEY AUDIENCE
TABLE V
Survey Audience
Friends and Colleagues
US MTurk Workers
Non-US MTurk Workers
Students
Mean
1,466,066
835,046
1,196,496
1,049,267
Median
283,909
118,696
190,454
217,896
institute’s
Since our surveys involved the installation of software