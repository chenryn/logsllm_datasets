### Configuring TightVNC on Raspberry Pi

1. Open the terminal and create a new configuration file for TightVNC using `nano`:
   ```bash
   sudo nano tightvnc.desktop
   ```

2. Add the following lines to the new, blank configuration file. You can see an example in Figure 7.10.

   ```ini
   [Desktop Entry]
   Type=Application
   Name=TightVNC
   Exec=vncserver :1
   StartupNotify=false
   ```

   **Figure 7.10:** For some users, it is convenient to autostart the VNC server on the Raspberry Pi.

3. Save your changes and exit `nano` by pressing `Ctrl+X`, then `Y` to confirm. Reboot the Raspberry Pi to apply the changes:
   ```bash
   sudo reboot
   ```

### Browsing the Web with the Raspberry Pi

**Midori (http://is.gd/5ccfPn)** is the default web browser included in Raspbian (see Figure 7.11). The Raspberry Pi Foundation likely chose Midori due to its reputation as a "lightweight, fast, and free" web browser.

**Figure 7.11:** Midori is a suitable choice for the Raspberry Pi due to its low resource footprint.

#### Advantages of Midori on the Raspberry Pi:
- **Highly Adherent to Web Standards:** Although HTML5 support is still improving.
- **Emphasis on Security and User Privacy.**
- **Preferences Panel:** Allows you to suppress images and media from web pages, enhancing browsing speed.
- **Extensions Support:** Extensions can significantly expand the browser's capabilities.

#### Limitations:
The main limitations of Midori are more related to the Raspberry Pi's hardware constraints and ARM processor architecture rather than the browser itself. For example, Adobe Flash is not supported on ARM processors, which means you cannot view Flash content, including YouTube videos, out of the box.

- **Adobe Flash:** Adobe has discontinued Flash support for ARM processors. Therefore, Flash content, including YouTube, is not viewable on the Raspberry Pi.
- **Gnash Player (http://is.gd/TvqqNI):** An open-source alternative that supports Flash versions 7, 8, and 9, but performance may be subpar.
- **YouTube Options:** Search for "play youtube raspberry pi" for Pi-specific solutions.
- **Chapter 12:** Learn how to build a Raspberry Pi media center using Xbox Media Center (XBMC) software.

#### Alternative Browsers:
- **Chromium (http://is.gd/oWiKFh):** A good choice for the Raspberry Pi.
- **Iceweasel (http://is.gd/cfmCHP):** Recommended for Mozilla Firefox fans; used as the default browser in this book.

### Programming Raspberry Pi with Scratch—Beginnings

Now that you have some background on the Raspberry Pi, you understand why it comes preloaded with Scratch, Python, and other development environments. The primary goal of the Raspberry Pi is to inspire schoolchildren to develop an interest in computer programming.

**Scratch** is an intuitive programming language developed by the Lifelong Kindergarten group at the MIT Media Lab. It uses drag-and-drop blocks instead of traditional text commands to make programming accessible to beginners.

**Figure 8.1:** Comparison of an if/then condition in C (top) and in Scratch (bottom).

#### Technical Aspects of Scratch:
- **Open Source IDE:** Built in Squeak, a dialect of Smalltalk.
- **Cross-Platform:** Available on Windows, OS X, and Linux.
- **Compatibility:** Scratch 1.4 works well on the Raspberry Pi, but Scratch 2.0, built with Adobe Flash, is incompatible due to the lack of Flash support on the Pi.

**Eben Upton (co-creator of the Raspberry Pi):**
- **Future Plans:** The Foundation is working on optimizing Scratch 1.4 for the Pi and expects to reconverge with Scratch 2.0 when it is ported to JavaScript or similar.

#### The Scratch Community:
- **Join the Community:** Visit scratch.mit.edu and register for a free account (see Figure 8.2).
- **Community Benefits:** Download projects, share your work, and participate in discussion forums.

**Figure 8.2:** Register for a free Scratch user account.

#### Getting Comfortable with the Scratch Interface:
- **Start Scratch:** Double-click the icon on your Raspbian desktop.
- **Interface Overview:**
  - **Blocks Palette:** Drag and drop action blocks.
  - **Menu Bar:** Save projects, interact with the Scratch website, and manage files.
  - **Sprite Header Pane:** Displays details for the selected sprite.
  - **Scripts Area:** Program logic, with tabs for Scripts, Costumes, and Sounds.
  - **Stage:** The work area for your application.
  - **Sprites Pane:** Manage graphical objects (sprites).

**Figure 8.3:** Annotated Scratch interface.

#### Starting a Scratch Project:
- **Download Projects:** Visit the Scratch Projects site (http://is.gd/tsr9gM) and download interesting projects.
- **Previewing Projects:** Note that you cannot preview projects in a browser on the Pi due to the lack of Flash support.

**Figure 8.4:** Download and try out other Scratch projects.

#### Understanding Scratch Blocks:
- **Block Types:**
  - **Motion, Looks, Sound, Pen, Control, Sensing, Operators, Variables.**
  - **Color-Coded:** Helps associate actions with block types.

- **Block Shapes:**
  - **Hat Blocks:** Initiate actions.
  - **Stack Blocks:** Form the bulk of programming logic.
  - **Boolean Blocks:** Represent binary conditions.
  - **Reporter Blocks:** Hold values.
  - **C Blocks:** Wrap around other blocks.
  - **Cap Blocks:** Stop scripts.

**Figure 8.5:** Examples of different block shapes.

#### Creating a Simple Scratch Application:
- **Task: Basic Scratch App**
  1. Open Scratch and start a new file. Save your work.
  2. Change the background to the xy-grid.
  3. Use the Cartesian coordinate system to position and move the Scratch Cat.
  4. Assemble the blocks as shown in Figure 8.6.

**Figure 8.6:** Your first Scratch application.

- **Block Explanation:**
  - **1:** Starts the script when the Green Flag is clicked.
  - **2:** Lifts the Pen tool from the Stage.
  - **3:** Clears any Pen remnants.
  - **4:** Positions the Scratch Cat at the origin (0,0).
  - **5:** Moves the sprite to (100,0).
  - **6–8:** Customizes the Pen tool and draws a line.

By following these steps, you will create a simple Scratch application that moves the Scratch Cat and draws a square.