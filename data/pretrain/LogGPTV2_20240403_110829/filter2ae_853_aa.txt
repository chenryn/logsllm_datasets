# 前言
邮件钓鱼已经是老生常谈。不同的场景下当然有不一样的选择。在攻防演练中，我更加偏向于选择现有知名的邮件服务供应商，例如163、QQ等。因为是国内的演练，不会选择使用国外的邮件服务，更加别提臭名昭著的OutLook邮箱。在国内使用
163 可信度高，能让邮件的送达率高，但是往往在发送邮件的频率上有限制。  
在邮件钓鱼演练服务，针对企业大批量的钓鱼，我们可以选择自建邮件服务器。这样可以没有发件频率的限制，你可以伪造发件人，也可以改变发件人的IP，但有很多因素导致邮件信任度不高无法抵达对方的邮件，也有可能会被当做垃圾邮件处理。此篇文章讲述了一些提高邮件可信度的设置方法。  
其实邮件可信一方面是身份可信，一方面是内容可信。在身份可信上就有很多重校验，这一方面是需要我们第一步摆平的。这里涉及到IP地区、IP信任、IP网络可达；域名相似、域名信誉、域名购买时间；SPF/DKIM/DMARC/PTR身份认证；TLS/SSL证书、
S/MIME证书传输认证等。内容可信可以涉及到发件人名称、地址；邮件内容；邮件附件等。
# 前提条件选择
前提条件选的好，那就成功一半了。
## 邮件服务的选择
搭建邮件服务已经非常常见了，然而在选择邮件服务上还存在一些选项。  
我接触过 sendmail 、Ewoemail、iRedMail 其他的暂未了解，其中 sendmail
只提供了邮件服务没有可视化管理的界面。但好在小巧，安装方便，自定义程度高。Ewoemail和iRedMail，都有后台和用户邮件管理系统，体积大，可以省去很多功夫。这里我使用
sendmail 达到我们的目的。  
也可以选择使用 iRedMail
安装，它的配置教程：
## VPS的选择
为了更好的搭建邮件服务，增加可信度，我们需要有一台满足以下条件的VPS：
  * 25 端口开放且没有VPS提供商监管
  * 可以设置 PTR Records
  * 内存大于 1 GB
在国内，VPS提供商有的限制25端口，有的禁止25端口，大多都不允许自建提供于公网的邮件服务器；PTR
的设置需要VPS提供商设置，有的需要付费，有的禁止。这里我选择了国外的VPS提供商
hostinger，也是国内多少从业外贸商的选择。当然也可以从众选择搬瓦工，也可以选择小众或个人提供的VPS。尽管选择很多，但需要
**注意IP的信誉度。**
## 域名提供商和域名的选择
全球有数不清的域名提供商，其中比较出名的是 Godaddy、Enom、TuCows。国内的域名注册用 Whois 查询可能可以获取到注册人的信息，但使用
Godaddy 可以不用担心这个。  
域名的选择可以参考这个 。其中 .com
、.cn、.us比较常见，这些TLDs 顶级域名可信度较高。如果你选择使用类似于 .space 的域名，会碰到这种情况。
# 设置身份验证
通过身份验证的邮件：
  * 有助于为收件人防范钓鱼式攻击邮件等恶意电子邮件。
  * 不容易被 Gmail 拒收或标记为垃圾邮件。
邮件必须通过 SPF 或 DKIM 检查，才能通过身份验证。要通过 DMARC 检查，邮件必须先通过 SPF 或 DKIM
身份验证，而且身份验证网域必须与邮件的 From: 标头中的网域相同。
## 邮件可信度测试地址
一天只能免费测试三封邮件，注意把控次数。  
设置域名：mydomain.com  
**文中的这个域名请你自行替换成自己的域名。**  
根据以下内容设置完后邮件可信度测试如下所示，其中扣分的地方是我购买的域名还没超过28天。
还有一种被动检查方式  
关于DANE设置可以看这篇 
> 了解更多请看 
## 设置 SPF 记录
SPF 记录是为了防止垃圾邮件而设定的，告知收件方，从设置的允许列表中发出的邮件都是合法的，设置方式为添加一条根域名的 TXT 解析记录  
内容为 `v=spf1 mx ~all`  
检测方式：`nslookup -type=txt mydomain.com`
上面的 `~all` 前缀代表软拒绝，对接收方来说，遇到有软拒绝的域名没有通过SPF校验，通常采取的策略是放行或者标记为垃圾邮件。
设置完成后可以使用这个地址来测试你的SPF。
> 了解更多SPF相关内容可以参考： wiki/blob/main/SPF-how-to.md>  
>  了解如何绕过SPF：
## 设置 A 记录
将 `mail.mydomain.com` 的 A 记录指向你的 VPS 服务器（邮件服务器）IPv4地址  
检测方式：`nslookup mail.mydomain.com`
## 设置 AAAA 记录
将 `mail.mydomain.com` 的 AAAA 记录指向你的 VPS 服务器（邮件服务器）IPv6地址  
检测方式：`nslookup mail.mydomain.com`
## 设置 MX 记录
MX 记录就是邮件的解析记录，非常重要的一条记录，配置根域名的 MX 记录为自己的邮件域名地址，优先级为 10  
检测方式：`nslookup -type=mx mydomain.com`
## 设置 DMARC 记录
DMARC
记录是当收件方检测到伪造邮件等行为时，将根据您的配置进行操作的一个记录，比如拒绝邮件或放入垃圾邮件以及不做处理等，同时会反馈一份检测报告到配置的邮箱地址内。  
添加方法就是增加一条 _dmarc 的 TXT 解析，内容为配置选项，`v=DMARC1; p=none; pct=100;
rua=mailto:PI:EMAIL`  
检测方式：`nslookup -type=txt _dmarc.mydomain.com`
在检测中可能会遇到 DMARC 政策不够严格，我们可以设置成 `p=quarantine` 或者
`p=reject`，分别是隔离和拒绝政策，我们可以直接设置成 `v=DMARC1; p=reject; pct=100;
rua=mailto:PI:EMAIL`
> 了解更多关于DMARC相关知识参考： wiki/blob/main/DMARC-how-to.md>
## 启用并设置 DNSSEC
域名系统安全扩展（DNS Security Extensions，简称DNSSEC）是用于确定源域名可靠性的数字签名
，通过在域名中添加DNSSEC记录，可以增强对DNS域名服务器的身份认证，有效防止DNS缓存污染等攻击。本文为您介绍如何在阿里云域名服务控制台上添加及同步DNSSEC记录。
> 阿里云域名用户可以看这篇 
这里我使用的是 CF，到域名管理控制台左侧栏找到 DNS 中的 Settings，进入 DNS 设置页面启用 DNSSEC。
开启后会给出几个值。
到你的域名注册商设置 DS 记录，我的域名注册商是Godaddy 到域名DNS设置处找到 DNSSEC。
> 官方教程 
其中的 Key tag、Algorithm、Digest Type、Digest按照提供的数据填写后点击 Update 即可。
## 设置 DKIM 记录 【重点】
DKIM 可说是避免被判定为垃圾邮件的一大利器，DKIM 属于一种类似加密签名的解析记录，只有包含此加密数据，且公钥与密钥相匹配才属于合法邮件，要设置
DKIM 记录，首先要查询 DKIM 信息。
> 了解更多DKIM相关知识可以参考： wiki/blob/main/DKIM-how-to.md>
### Amavisd 查询
如果你的邮件服务器使用的是类似 EwoMail 或者 iRedMail 等大型邮件服务器就可以使用这个方法。  
查询 DKIM 可以使用系统命令  
`amavisd showkeys` OR  
`amavisd -c /etc/amavisd/amavisd.conf showkeys`  
如果不存在 amavisd 可以使用命令安装 `yum --enablerepo=rpmforge,rpmforge-extras install
amavisd-new -y`
### OpenDKIM 签名 【比较繁琐】
>
> 文中这节如果有一些描述没有读懂可以看这篇参考文章 configure-dkim-sendmail-debian.html>
sendmail 的配置文件
  * /etc/mail/sendmail.cf 主配置文件
  * /etc/mail/sendmail.mc 模板文件
  * /etc/mail/access 完成中继转发功能,即加入允许访问的域名
  * /etc/aliases 该文件包含 sendmail 程序所用到的别名数据库的文本形式。
  * /etc/mail/local-host-names 本地主机名和域名的列表决定收到的邮件是本地邮件，还是远程邮件，然后决定是地投送还是转发。
  * /etc/mail/sendmail.cw 当一个主机有多个域名时，在此加入这些域名
  * /var/spool/mqueue 邮件队列临时存放的目录
  * /var/mail 存放所有收到的邮件
  * /var/log/maillog 日志文件  
#### 1、设置主机名  
如果以及设置过可以跳过这一步。  
`vim /etc/hosts`在hosts 文件添加一段
        127.0.0.1 mail.mydomain.com mail
这里的 127.0.0.1 替换成你的 VPS IP。  
`echo mail > /etc/hostname` 修改你的 hostname  
验证 `hostname -f` 即可看到 `mail.mydomain.com`，而不加选项则是短名称，如果你的不是这样可以使用 `sudo
hostname mail` 强制修改。
#### 2、安装服务
我使用的是 sendmail 作为我的邮件服务器，并安装 OpenDKIM 。安装命令如下。
    yum install sendmail sendmail-cf mailutils sharutils opendkim opendkim-tools -y
为您的密钥创建新目录
    mkdir -p /etc/opendkim/keys/mydomain.com
#### 3、生成签名密钥并配置opendkim
上面的命令将在新创建的目录下创建两个文件 default.private 和 default.txt 如果您对创建密钥时可用的其他选项感兴趣，可以执行
`man opendkim-genkey`查看更多选项。在此示例中，我使用了 -D（目录）选项、-d（域）选项和 -s（选择器）选项。  
请留意这里的 -s 选项，这里可以默认为 default 你可以选择自定义任意字符。
    opendkim-genkey -D /etc/opendkim/keys/mydomain.com -d mydomain.com -s default
将所有权更改为 opendkim **这一步是必须的，不然opendkim没有权限访问 /etc/opendkim/keys/mydomain.com
文件夹，导致无法正常对邮件进行签名。**
    chown -R opendkim:opendkim /etc/opendkim/keys/mydomain.com
    chmod 640 /etc/opendkim/keys/mydomain.com/default.private
    chmod 644 /etc/opendkim/keys/mydomain.com/default.txt
`vim /etc/opendkim.conf` 配置 OpenDKIM，这是我配置的文件。请对照着修改。
    PidFile /var/run/opendkim/opendkim.pid
    Mode    sv
    Syslog  yes
    SyslogSuccess   yes
    LogWhy  yes
    UserID  opendkim:opendkim
    Socket  inet:8891@localhost
    Umask   002
    SendReports yes
    SoftwareHeader  yes
    Canonicalization    relaxed/simple
    Domain  mydomain.com
    Selector    default
    MinimumKeyBits  1024
    KeyFile /etc/opendkim/keys/mydomain.com/default.private
    KeyTable    refile:/etc/opendkim/KeyTable
    SigningTable    refile:/etc/opendkim/SigningTable
    ExternalIgnoreList  refile:/etc/opendkim/TrustedHosts
    InternalHosts   refile:/etc/opendkim/TrustedHosts
    OversignHeaders From
    AutoRestart             Yes
    AutoRestartRate         10/1h
    SignatureAlgorithm      rsa-sha256
`vim /etc/opendkim/KeyTable`在该文件添加下面一行。
    default._domainkey.mydomain.com mydomain.com:default:/etc/opendkim/keys/mydomain.com/default.private
`vim /etc/opendkim/SigningTable`在该文件添加下面一行。
    *@mydomain.com default._domainkey.mydomain.com
`vim /etc/opendkim/TrustedHosts`在该文件添加下面一行。
    127.0.0.1
    localhost
    mydomain.com
也可以直接用这个命令设置，但同样的你需要替换其中的 mydomain.com
    echo 'default._domainkey.mydomain.com mydomain.com:default:/etc/opendkim/keys/mydomain.com/default.private' >> /etc/opendkim/KeyTable
    echo '*@mydomain.com default._domainkey.mydomain.com' >> /etc/opendkim/SigningTable