13 days, more than 80% of new domains seen daily are
disposable, since new disposable domains are constantly
generated. Moreover, the volume of unique disposable RRs
daily increased from 8,111,274 (02/01/2011) to 29,738,493
(12/30/2011), during which 33,704,127 were observed on
11/14/2011. The percentage of daily unique disposable RRs
increased from 38.3% to 65.5% (see Figure 13).
Disposable domains are growing in the DNS long tail
as well. Table I shows the long tail from the RR lookup
volume. Note that the second column presents the size of
the tail of all RRs, the third column presents the disposable
part of the tail, and the last column presents the fraction
of disposable RRs that are in the tail. The disposable RRs
represent 28% of the tail on 02/01/2011, and increased
to 57% of the entire tail on 12/30/2011. As we observe,
between 96% to 98% of all disposable RRs are in the tail.
On the other hand, in Table II we can see the statistics
of long tail in the domain hit rate distribution of resource
records. Around 96% of disposable RRs belong to the tail,
and the percentage of domains in the long tail that are also
disposable RRs increased from 28% to 57% during 2011. To
summarize, disposable RRs are usually present in the DNS
long tail and the DNS long tail is increasingly composed of
disposable RRs. In the following section, we discuss their
potential impact from the DNS operation point of view.
VI. DISCUSSION
In Section V-C, we showed that disposable domains make
up about 25% of all unique queried domains, and 27% to
37% of all successfully resolved domains daily. In addition,
the number of distinct RRs related to disposable domains
represent an average of 60% of all distinct RRs observed
in a single day. Also, we offered evidence showing that
disposable domains are used by large content providers (e.g.,
Facebook and Google). In this section, we discuss possible
negative effects of the continued growth in the use of dispos-
able domains, and their impact on modern DNS operations
and DNS-related systems. Our main objective is to identify
and highlight some of these possible effects, so that the op-
erational community can anticipate them and plan ahead in
cases where changes to current DNS operations are needed.
A. DNS Caching
In Section IV-B, we showed that disposable RRs are
characterized by very low or zero cache hit rates. This is a
natural consequence of the “one time use” pattern typical of
this new class of domains. As the use of disposable domains
increases, the DNS cache may start to be ﬁlled with entries
607
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 06:04:42 UTC from IEEE Xplore.  Restrictions apply. 
2.0e+07
1.5e+07
y
c
n
e
u
q
e
r
F
1.0e+07
5.0e+06
0.0e+00
1e+00
1e+01
1e+02
1e+03
TTL
1e+04
1e+05
Figure 14: Time-to-live value histogram for disposable
domains in February and December, 2011. TTL values
range from 0s to 86400s, and values bigger than 86400s
are plotted as 86400s.
that are highly unlikely to ever be reused. Assuming a
typical Least Recently Used (LRU) cache implementation
with a ﬁxed memory allocation (a common conﬁguration
in DNS resolvers, to the best of our knowledge), during
periods of heavy load (see Figure 2) queries to disposable
domains may cause some useful cached non-disposable
domains to be prematurely evicted to make room for
them. In turn,
this may have the effect of inﬂating the
trafﬁc between the DNS resolvers and the authoritative
name servers responsible for the evicted non-disposable
domains, thus increasing the response latency. If this occurs
frequently, caching policies may require adjustments to
mitigate the performance decrease, e.g., disposable domains
could be treated with low priority.
Forcing disposable domains to use a time-to-live value
(TTL) equal to zero is not a feasible solution. First, it may
not be feasible to force all the domain owners to set the
TTL of disposable domains to zero, since they can freely
choose the TTL value they prefer. Figure 14 shows the
TTL distribution for disposable domains on 02/01/2011
and 12/30/2011. Note that X axis is log scale and starts
from zero. There were 0.8% of disposable domains with
a TTL of zero, and 28% of them with TTL = 1 second
on 02/01/2011. However, domain owners switched to using
relatively larger TTL values over time. For instance,
in
December, most disposable domains had a TTL of 300s,
as we can see from the highest bar in Figure 14. In
addition, some recursive DNS software implementations
hold resource records into the cache for a minimum number
of seconds, even when their TTL is set to zero [25], [26].
B. DNSSEC-Enabled Resolvers
Once DNSSEC is widely deployed, or even under DLV
signed zones, eventually every domain name under a zone
needs to be signed. There will inevitably be more pressure
on validating resolvers, which will consume more resources.
Clearly, validating signed responses will require higher
Time−to−live for Disposable Domains
1e7
5
New RR Seen Everyday for pDNS
4
e
m
u
o
V
l
3
2
1
month
December
February
0
1 1 - 2 8
1 1 - 3 0
1 2 - 0 2
1 2 - 0 4
1 2 - 0 6
1 2 - 0 8
1 2 - 1 0
Non-disposable
Disposable
All
Figure 15: New Resource Records over 13 days.
CPU usage, and increased memory needs due to the larger
resource records introduced by DNSSEC speciﬁcations
(e.g., DNSKEY, DS, RRSIG [27], [28], [29]). Disposable
domains will naturally, and potentially dramatically, increase
this pressure on validating resolvers. In fact, each queried
disposable domain may require an additional signature
validation whose result will never be reused. Also,
the
cache must store not only the disposable RRs, but also their
signatures. This problem may be mitigated in part if the
authoritative servers responsible for the disposable zones
register disposable domains under a single signed wildcard
domain, from which the disposable domains are synthesized.
C. Passive DNS Databases
Passive DNS database
systems
(pDNS-DBs) have
recently been adopted by the computer
security and
networking communities as an invaluable tool to analyze
security incidents and assist DNS operations [14], [13],
[30]. For example, pDNS-DBs have been extensively
used to investigate Operation Aurora [9], attacks
to
EMC/RSA [10], and malware infections of Stuxnet [11]
and Flame [12]. Because these types of security incidents
are often discovered months or even years after the attacks
ﬁrst occurred [9], pDNS-DBs play a vital role to efﬁciently
archive long-term historic DNS information. Furthermore,
pDNS-DBs are indispensable when constructing dynamic
reputation systems [6], [7], [8] for domain names.
Disposable domains have the effect of increasing pDNS-
DB storage requirement and potentially the query-response
latency, depending on the implementation. In fact, we found
that after bootstrapping a pDNS-DB with over 13 days of
resolution trafﬁc (see Figure 15), 88% of all unique resource
records in the database are disposable, which need to be
stored to maintain a full account of historic DNS resolutions.
Moreover, the percentage of new RRs related to disposable
domains increased from 68% to 94% daily. The problem
can be mitigated by ﬁltering disposable domains and storing
a single wildcard domain in the pDNS-DB. For example, a
domain name like 1022vr5.dns.xx.fbcdn.net can be replaced
by *.dns.xx.fbcdn.net. Using wildcard in the scheme would
reduce 129,674,213 distinct disposable resource records we
have seen to 945,065 (0.7%) resource records.
608
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 06:04:42 UTC from IEEE Xplore.  Restrictions apply. 
VII. CONCLUSION
With this paper we describe and build a disposable
zone miner to automatically ﬁnd disposable domain names.
Using trafﬁc from a large ISP in North America, we
identiﬁed and measured a new category of DNS trafﬁc, the
disposable domain, which currently is “lost” in the DNS
noise. We show that, on average, disposable domain names
are responsible for a signiﬁcant portion of all domain
names observed (25%) and resolved (32%), 60% of unique
resource records observed daily, and 88% of all unique
resource records observed during our 13 day experiments.
Furthermore, we discussed their potential
implication to
DNS caches, to the DNSSEC deployment and passive DNS
data collection systems.
ACKNOWLEDGMENT
The authors would like to thank the anonymous reviewers
for their valuable comments, and our shepherd Dr. Angelos
Stavrou. This material is based upon work supported in part
by the National Science Foundation under Grants No. CNS-
1017265, CNS-0831300, and CNS-1149051, by the Ofﬁce
of Naval Research under Grant No. N000140911042, and
by the Department of Homeland Security under contract
No. N66001-12-C-0133. Any opinions, ﬁndings,
and
conclusions or recommendations expressed in this material
are those of the authors and do not necessarily reﬂect the
views of the National Science Foundation, the Ofﬁce of
Naval Research, or the Department of Homeland Security.
REFERENCES
[1] Z. M. Mao, C. D. Cranor, F. Douglis, M. Rabinovich,
O. Spatscheck, and J. Wang, “A precise and efﬁcient
evaluation of the proximity between web clients and their
local dns servers,” in Proceedings of the General Track of
USENIX ATEC, 2002.
[2] N. Weaver, C. Kreibich, and V. Paxson, “Redirecting DNS
for Ads and Proﬁt,” in USENIX Workshop on Free and Open
Communications on the Internet (FOCI), 2011.
[3] S. Krishnan and F. Monrose, “DNS prefetching and
its privacy implications: when good things go bad,” in
Proceedings of USENIX Workshop on LEET, 2010.
[4] S. H. Gunderson, “Global IPv6 statistics: Measuring the
current state of IPv6 for ordinary users,” in Proceedings of
the Seventy-third Internet Engineering Task Force, 2008.
[5] McAfee, “Faqs for global threat intelligence ﬁle reputation,”
https://kc.mcafee.com/corporate/index?page=content&id=
KB53735, 2013.
[6] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and
N. Feamster, “Building a Dynamic Reputation System for
DNS,” in Proceedings of USENIX Security Symposium, 2010.
[7] M. Antonakakis, R. Perdisci, W. Lee, D. Dagon, and
N. Vasiloglou, “Detecting Malware Domains at the Upper
DNS Hierarchy,” in
Proceedings of USENIX Security
Symposium, 2011.
[8] L. Bilge, E. Kirda, C. Kruegel, and M. Balduzzi, “Exposure:
Finding malicious domains using passive dns analysis,” in
Proceedings of NDSS, 2011.
[14] D. Plonka and P. Barford, “Context-aware clustering of dns
query trafﬁc,” in Proceedings of ACM SIGCOMM conference
on Internet measurement, 2008.
“Sharding
domains,”
dominant
http://www.stevesouders.com/blog/2009/05/12/
sharding-dominant-domains/, 2009.
Souders,
[15] S.
[16] P. Vixie, “What dns is not,” Queue, no. 10, Nov. 2009.
[17] S. Yadav, A. K. K. Reddy, A. N. Reddy, and S. Ranjan,
“Detecting algorithmically generated malicious domain
names,” in Proceedings of ACM SIGCOMM conference on
Internet measurement, 2010.
[18] A. Berger and E. Natale, “Assessing the Real-World
Dynamics of DNS,” in Trafﬁc Monitoring and Analysis,
in Computer Science, A. Pescap`e,
ser. Lecture Notes
L. Salgarelli, and X. Dimitropoulos, Eds.
Springer Berlin
Heidelberg, 2012, vol. 7189, pp. 1–14.
[19] V. Paxson, M. Christodorescu, M. Javed, J. Rao, R. Sailer,
D. Schales, M. P. Stoecklin, K. Thomas, W. Venema, and
N. Weaver, “Practical comprehensive bounds on surreptitious
communication over dns,” in Proceedings of USENIX
Security Symposium, 2013.
[20] J. Jung, E. Sit, H. Balakrishnan, and R. Morris, “Dns
performance and the effectiveness of caching,” IEEE/ACM
Trans. Netw., 2002.
[21] J. Jung, A. Berger, and H. Balakrishnan, “Modeling TTL-
based internet caches,” in Proceedings of INFOCOM, 2003.
http:
[22] Mozilla
Foundation,
“Public
sufﬁx
list,”
//publicsufﬁx.org/.
[9] M. Antonakakis, C. Elisan, D. Dagon., G. Ollmann, and
E. Wu., “The command structure of the Aurora botnet,”
https://www.damballa.com/downloads/r pubs/Aurora
Botnet Command Structure.pdf, 2010.
[10] U. Rivner, “Anatomy of an attack,” http://blogs.rsa.com/
anatomy-of-an-attack/, 2011.
[11] N. Falliere, L. O. Murchu, and E. Chien, “W32.stuxnet
dossier,” http://www.symantec.com/content/en/us/enterprise/
media/security response/whitepapers/w32 stuxnet dossier.
pdf, 2011.
[12] Global Research & Analysis Team (GReAT) Kaspersky
Lab, “Full analysis of ﬂame’s command & control servers,”
http://www.securelist.com/en/blog/750/Full Analysis of
Flames Command Control servers, 2012.
[13] F. Weimer, “Passive dns replication,” in 17th Annual FIRST
Conference, 2005.
[23] M. Andrews, “Negative caching of dns queries (dns ncache),”
http://www.ietf.org/rfc/rfc2308.txt, March 1998.
[24] R. Duda, P. Hart, and D. Stork, Pattern Classiﬁcation,
2nd ed. Wiley-Interscience, 2000.
[25] A. Kumar, J. Postel, C. Neuman, P. Danzig, and S. Miller,
“Common DNS Implementation Errors and Suggested
Fixes,” http://www.ietf.org/rfc/rfc1536.txt, October 1993.
[26] D. Barr, “Common dns operational and conﬁguration errors,”
http://www.ietf.org/rfc/rfc1912.txt, February 1996.
[27] R. Arends, R. Austein, M. Larson, D. Massey, and
S. Rose, “Dns security introduction and requirements,”
http://www.ietf.org/rfc/rfc4033.txt, March 2005.
[28] ——, “Resource records for the dns security extensions,”
http://www.ietf.org/rfc/rfc4034.txt, March 2005.
[29] ——, “Protocol modiﬁcations for the dns security extensions,
rfc 4035,” http://www.ietf.org/rfc/rfc4035.txt, March 2005.
[30] I. S. Consortium. (2004) SIE@ISC : Security Information
Exchange. https://sie.isc.org/.
609
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 06:04:42 UTC from IEEE Xplore.  Restrictions apply.