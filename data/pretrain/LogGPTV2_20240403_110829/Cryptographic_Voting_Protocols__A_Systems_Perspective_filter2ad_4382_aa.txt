title:Cryptographic Voting Protocols: A Systems Perspective
author:Chris Karlof and
Naveen Sastry and
David A. Wagner
Cryptographic Voting Protocols: A Systems Perspective
Chris Karlof
David Wagner
Naveen Sastry
{ckarlof, nks, daw}@cs.berkeley.edu
University of California, Berkeley
Abstract
Cryptographic voting protocols offer the promise of veri-
ﬁable voting without needing to trust the integrity of any
software in the system. However, these cryptographic
protocols are only one part of a larger system composed
of voting machines, software implementations, and elec-
tion procedures, and we must analyze their security by
considering the system in its entirety. In this paper, we
analyze the security properties of two different crypto-
graphic protocols, one proposed by Andrew Neff and an-
other by David Chaum. We discovered several potential
weaknesses in these voting protocols which only became
apparent when considered in the context of an entire vot-
ing system. These weaknesses include: subliminal chan-
nels in the encrypted ballots, problems resulting from
human unreliability in cryptographic protocols, and de-
nial of service. These attacks could compromise election
integrity, erode voter privacy, and enable vote coercion.
Whether our attacks succeed or not will depend on how
these ambiguities are resolved in a full implementation
of a voting system, but we expect that a well designed
implementation and deployment may be able to mitigate
or even eliminate the impact of these weaknesses. How-
ever, these protocols must be analyzed in the context of
a complete speciﬁcation of the system and surrounding
procedures before they are deployed in any large-scale
public election.
1 Introduction
Democracies are built on their population’s consent, and
a trustworthy voting system is crucial to this consent. Re-
cently, “Direct Recording Electronic” voting machines
(DREs) have come under ﬁre for failing to meet this stan-
dard. The problem with paperless DREs is that the vot-
ing public has no good way to tell whether votes were
recorded or counted correctly, and many experts have ar-
gued that, without other defenses, these systems are not
trustworthy [15, 20].
Andrew Neff and David Chaum have recently pro-
posed revolutionary schemes for DRE-based electronic
voting [5, 23, 24]. The centerpiece of these schemes
consists of novel and sophisticated cryptographic proto-
cols that allow voters to verify their votes are cast and
counted correctly. Voting companies Votegrity and Vote-
Here have implemented Chaum’s and Neff’s schemes,
respectively. These schemes represent a signiﬁcant ad-
vance over previous DRE-based voting systems: voters
can verify that their votes have been accurately recorded,
and everyone can verify that the tallying procedure is cor-
rect, preserving privacy and coercion resistance in the
process. The ability for anyone to verify that votes are
counted correctly is particularly exciting, as no prior sys-
tem has offered this feature.
This paper presents a ﬁrst step towards a security anal-
ysis of these schemes. Our goal is to determine whether
these new DRE-based cryptographic voting systems are
trustworthy for use in public elections. We approach
this question from a systems perspective. Neff’s and
Chaum’s schemes consist of the composition of many
different cryptographic and security subsystems. Com-
posing security mechanisms is not simple, since it can
lead to subtle new vulnerabilities [10, 18, 25]. Conse-
quently, it is not enough to simply analyze a protocol
or subsystem in isolation, as some attacks only become
apparent when looking at an entire system. Instead, we
perform a whole-system security analysis.
In our analysis of these cryptographic schemes, we
found two weaknesses: subliminal channels in the en-
crypted ballots and problems resulting from human unre-
liability in cryptographic protocols. These attacks could
potentially compromise election integrity, erode voter
privacy, and enable vote coercion. In addition, we found
several detectable but unrecoverable denial of service at-
tacks. We note that these weaknesses only became appar-
ent when examining the system as a whole, underlining
the importance of a security analysis that looks at cryp-
tographic protocols in their larger systems context.
USENIX Association
14th USENIX Security Symposium
33
Weakness
Random subliminal channels
Protocols
Neff
Semantic subliminal channels
Chaum
Message reordering attacks
Neff
Threat Model
Malicious DRE colluding with
outsider
Malicious DRE colluding with
outsider
Malicious DRE and human error
Social engineering attacks
Neff, Chaum Malicious DRE and human error
Affects
Voter privacy, coercion
resistance
Voter privacy, coercion
resistance
Election integrity, public
veriﬁability
Election integrity, public
veriﬁability
Discarded receipts
Other human factor attacks
Neff, Chaum Malicious DRE or bulletin board Election integrity
Neff, Chaum Malicious DRE
Denial of service attacks
Neff, Chaum Malicious DRE or tallying soft-
ware
Ability of voter to prove
DRE is cheating
Voter conﬁdence, elec-
tion integrity
Table 1: Summary of weaknesses we found in Neff’s and Chaum’s voting schemes.
The true severity of the weaknesses depends on how
these schemes are ﬁnally implemented. During our se-
curity analysis, one challenge we had to deal with was
the lack of a complete system to analyze. Although Neff
and Chaum present fully speciﬁed cryptographic proto-
cols, many implementation details—such as human in-
terfaces, systems design, and election procedures—are
not available for analysis. Given the underspeciﬁcation,
it is impossible to predict with any conﬁdence what the
practical impact of these weaknesses may be. Conse-
quently, we are not yet ready to endorse these systems
for widespread use in public elections. Still, we expect
that it may be possible to mitigate some of these risks
with procedural or technical defenses, and we present
countermeasures for some of the weaknesses we found
and identify some areas where further research is needed.
Our results are summarized in Table 1.
2 Preliminaries
David Chaum and Andrew Neff have each proposed
a cryptographic voting protocol for use in DRE ma-
chines [4, 5, 23, 24, 29]. Although these protocols dif-
fer in the details of their operation, they are structurally
similar. Both protocols consist of four stages: election
initialization, ballot preparation, ballot tabulation, and
election veriﬁcation.
Before the election, we select a set of election trustees
with competing interests, chosen such that it is unlikely
that all trustees will collude. During election initializa-
tion, the trustees interact amongst themselves before the
election to choose parameters and produce key material
used throughout the protocol. The trustees should rep-
resent a broad set of interest groups and governmental
agencies to guarantee sufﬁcient separation of privilege
and discourage collusion among the trustees.
Ballot preparation begins when a voter visits a polling
station to cast her vote on election day, and ends when
that ballot is cast. To cast her vote, the voter interacts
with a DRE machine in a private voting booth to select
her ballot choices. The DRE then produces an electronic
ballot representing the voter’s choices and posts this to a
public bulletin board. This public bulletin board serves
as the ballot box. At the same time, the DRE interacts
with the voter to provide a receipt. Receipts are designed
to resist vote buying and coercion, and do not allow the
voter to prove to a third party how she voted. Also, each
voter’s ballot is assigned a unique ballot sequence num-
ber (BSN). BSNs ease auditing and veriﬁcation proce-
dures, without compromising voter privacy.
After all ballots have been posted to the bulletin board,
the ballot tabulation stage begins. In ballot tabulation,
the election trustees execute a publicly veriﬁable mul-
tistage mix net, where each trustee privately executes a
particular stage of the mix net [12, 24]. To maintain
anonymity, the trustees strip each ballot of its BSN be-
fore it enters the mix net. Each stage of the mix net
takes as input a set of encrypted ballots, partially de-
crypts or re-encrypts them (depending on the style of mix
net), and randomly permutes them. The ﬁnal result of the
mix net is a set of plaintext ballots which can be publicly
counted but which cannot be linked to the encrypted bal-
lots or to voter identities. In cryptographic voting proto-
cols, the mix net is designed to be universally veriﬁable:
the trustee provides a proof which any observer can use
to conﬁrm that the protocol has been followed correctly.
This means a corrupt trustee cannot surreptitiously add,
delete, or alter ballots.
At various points during this process, voters and ob-
servers may engage in election veriﬁcation. After her
34
14th USENIX Security Symposium
USENIX Association
ballot has been recorded on the public bulletin board, the
voter may use her receipt to verify her vote was cast as in-
tended and will be accurately represented in the election
results. Note that the receipt does not serve as an ofﬁcial
record of the voter’s selections; it is only intended for
convincing the voter that her ballot was cast correctly.
Election observers (e.g., the League of Women Voters)
can verify certain properties about ballots on the public
bulletin board, such as, that all ballots are well-formed or
that the mix net procedure was performed correctly.
Both the Chaum and Neff protocols require DREs to
contain special printing devices for providing receipts.
The security requirements for the printer are: 1) the
voter can inspect its output, and 2) neither the DRE nor
the printer can erase, change, or overwrite anything al-
ready printed without the voter immediately detecting
it. There are some differences in the tasks these devices
perform and additional security requirements they must
meet, which we will discuss later.
2.1 Security Goals
Neff’s and Chaum’s voting schemes strive to achieve the
following goals:
Cast-as-intended: A voter’s ballot on the bulletin board
should accurately represent her choices.
Counted-as-cast: The ﬁnal tally should be an accurate
count of the ballots on the bulletin board.
Veriﬁability: The previous two properties should be
veriﬁable. Veriﬁably cast-as-intended means each
voter should be able to verify her ballot on the bul-
letin board accurately represents the vote she cast.
Veriﬁably counted-as-cast means everyone should
be able to verify that the ﬁnal tally is an accurate
count of the ballots contained on the bulletin board.
One voter/one vote: Ballots on the bulletin board
should exactly represent the votes cast by legitimate
voters. Malicious parties should not be able to add,
duplicate, or delete ballots.
Coercion resistance: A voter should not be able to
prove how she voted to a third party not present in
the voting booth.
Privacy: Ballots should be secret.
2.2 Threat Models
We must consider a strong threat model for voting proto-
cols. In national elections, billions of dollars are at stake,
and even in local elections, controlling the appropriation
of municipal funding in a large city can be sufﬁcient mo-
tivation to compromise signiﬁcant portions of the elec-
tion system [14]. We consider threats from three separate
sources: DREs, talliers, and outside coercive parties. To
make matters worse, malicious parties might collude to-
gether. For example, malicious DREs might collude with
outside coercers to buy votes.
Malicious DREs can take many forms [3]. A program-
mer at the manufacturer could insert Trojan code, or a
night janitor at the polling station could install malicious
code the night before the election. We must assume ma-
licious DREs behave arbitrarily. Veriﬁcation of all the
DRE software in an election is hard, and one goal of
Neff’s and Chaum’s schemes is to eliminate the need to
verify that the DRE software is free from Trojan horses.
We also must consider malicious parties in the tallying
process, such as a malicious bulletin board or malicious
trustees. These parties wield signiﬁcant power, and can
cause large problems if they are malicious. For example,
if the bulletin board is malicious, it can erase all the bal-
lots. If all the software used by the trustees is malicious,
it could erase the private portions of the trustees’ keys,
making ballot decryption impossible.
To evaluate a voting system’s coercion resistance, we
must consider outside coercive parties colluding with
malicious voters. We assume the coercer is not present
in the voting booth. Attacks where the coercer is phys-
ically present are outside the scope of voting protocols
and can only be countered with physical security mech-
anisms. Similarly, attacks where a voter records her ac-
tions in the poll booth (e.g., with a video or cell phone
camera) are also outside the scope of voting protocols,
and we do not consider them here.
Finally, we must consider honest but unreliable partic-
ipants. For example, voters and poll workers might not
fully understand the voting technology or utilize its ver-
iﬁcation properties, and a malicious party might be able
to take advantage of this ignorance, apathy, or fallibility
to affect the outcome of the election.
3 Two Voting Protocols
In this section, we describe Neff’s and Chaum’s voting
protocols in detail.
3.1 Neff’s Scheme
Andrew Neff has proposed a publicly veriﬁable crypto-
graphic voting protocol for use in DREs [23, 24]. During
election initialization, the trustees perform a distributed
key generation protocol to compute a master public key;
decryption will only be possible through the cooperation
of all trustees in a threshold decryption operation. Also,
USENIX Association
14th USENIX Security Symposium
35
1
0 1
1 1
1 0
C1
C2
C3
2
1
1
0
1
0 1
3
0 1
0 0
0 1
`
0 1
1 1
1 0
Cn
1 0
1
0
0 1
1 0
Figure 2: A veriﬁable choice (VC) in Neff’s scheme. b
represents an encryption of bit b. This VC represents a
choice of candidate C2. Note the second row contains
encryptions of (0, 0) and (1, 1), and the unchosen rows
contain encryptions of (0, 1) and (1, 0).
indication of a cheating or malfunctioning DRE. More
precisely, there is a n × ` matrix x so that the k-th BMP
in unchosen row j is xj,k ∼ xj,k , and the k-th BMP
in the choice row i is xi,k xi,k .
Consider the idealized scenario where all DREs are
honest. The trustees can tally the votes by decrypting
each ballot and looking for the one row consisting of
(0, 0) and (1, 1) plaintexts. If decrypted row i consists
of (0, 0) and (1, 1) pairs, then the trustees count the bal-
lot as a vote for candidate Ci.1
In the real world, we must consider cheating DREs.
Up to this point in the protocol, the DRE has constructed
a VC supposedly representing the voter’s choice Ci, but
the voter has no assurance this VC accurately represents
her vote. How can we detect a dishonest DRE?
Neff’s scheme prints the pair (BSN, hash(V C)) on the
receipt and then splits veriﬁcation into two parts: 1) at the
polling booth, the DRE will provide an interactive proof
of correct construction of the VC to the voter; 2) later, the
voter can compare her receipt to what is posted on the
bulletin board to verify that her ballot will be properly
counted. At a minimum, this interactive protocol should
convince the voter that row i (corresponding to her in-
tended selection) does indeed contain a set of BMPs that
will be interpreted during tallying as a vote for Ci, or
in other words, each BMP in her chosen row is of the
b . Neff introduces a simple protocol for this:
form b
for each such BMP, the DRE provides a pledge bit p;
then the voter randomly selects the left or right position
and asks the DRE to provide a proof that the ciphertext
in that position indeed decrypts to p; and the DRE does
so by revealing the randomness used in the encryption.
Here we are viewing the ciphertext b as a commitment
1This is a simpliﬁed view of how the trustees tally votes in Neff’s
scheme, but it captures the main idea.
Figure 1: This is an example of a detailed receipt
for Neff’s scheme, taken from the VoteHere website,
http://www.votehere.com.
there is a security parameter `. A DRE can surrepti-
tiously cheat with a probability of 2−`. Neff suggests
10 ≤ ` ≤ 15.