# 如何在暗网中收集公开情报资源（上集）：利用OnionScan搭建属于自己的暗网搜索引擎
|
##### 译文声明
本文是翻译文章，文章来源：安全客
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
文章结构
一、暗网科普
二、自己动手，丰衣足食
三、服务器搭建－DigitalOcean Droplet虚拟服务器
四、配置运行环境－Golan和OnionScan
五、编写OnionScan封装脚本（Python）
六、运行结果
七、参考链接
**（一）、暗网科普**
Dark
Web，即暗网（又名深网）。其实它并没有我们想象中那样的神秘。暗网资源指的是哪些存储在网络数据库中，但是又不能通过普通的超链接来访问到的那一部分资源集合。据不完全统计，暗网中的网站比我们通过普通手段可以访问到的网站要多出好几个数量级。互联网比人们想象的要庞大得多，类似Google和微软Bing等搜索网引擎只收录了目前互联网中大约5%的内容。虽然这些网站是真实存在的，但是它们并没有被任何常用的搜索引擎编列索引，以至于很少有人能够找到这些网站。
在这种情况下，能够搜索到暗网资源的“特殊”搜索引擎就显得非常的“高大上”了。在此之前，美国国防部高级研究项目局（DARPA）曾开展过一个秘密项目，即Memex项目。Memex搜索引擎的核心理念就是“如何挖掘出不易被发现的东西”。DARPA于2015年4月17日正式宣布将Memex项目进行开源，这也就使得用户可以利用这些开源组件来进行高度定制化的搜索。
除了Memex之外，还有一个更加接地气的暗网搜索引擎，它就是[Onion.City](http://onion.city/)。Onion.City暗网搜索引擎使用了Tor2web代理技术，通过这种技术可以深度访问匿名Tor网络。但是Onion.City的搜索结果会涉及到地下黑市中的所有商品，包括枪支，毒品，以及盗窃所得的信用卡等非法商品。
**（二）、自己动手，丰衣足食**
看了之前的介绍，有没有想自己动手尝试来实现一个暗网资源搜索工具呢？在此之前，你可能已经听说过一款名叫[OnionScan](https://github.com/s-rah/onionscan)的工具了，这是一个非常棒的工具，你可以用它来扫描暗网中的隐藏服务，并收集一些潜在的泄漏数据。最近，该项目的研究人员对2016年6月份的暗网数据进行了分析和研究，随后便发布了一份[分析报告](https://mascherari.press/onionscan-report-june-2016/)。他们用非常炫酷的视觉效果呈现出了这些分析数据，并且还提供了一些非常详细的描述信息。但是你可能会有两个疑问：首先，该工具可以从暗网中扫描各种资源，那么他们是如何做到的呢？其次，这些炫酷的可视化效果是如何生成的呢？
首先我们需要做以下几件事：
1\. 配置一台能够7*24小时运行的服务器，并在服务器中加载我们的扫描器，因为扫描工作往往需要花费大量的时间。
2\. 在服务器上运行TOR软件。
3\. 安装OnionScan。
4\. 编写Python脚本来实现扫描过程的自动化处理，并管理扫描结果和其他的一些分析数据。
5\. 完善Python代码，提供更多的可视化操作接口。（这一部分内容将会在《如何在暗网中收集公开情报资源（下集）》中进行介绍）
那么，让我们开始吧！
**（三）、服务器搭建－DigitalOcean Droplet虚拟服务器**
如果你在Amazon的云平台上已经拥有了自己的服务器，或者你有自己的Linux服务器，那么你就可以跳过这一步骤了。如果你没有自己的服务器，那么你可以使用我的推荐链接来获取DigitalOcean服务的免费使用权（价值十美金，够用好几个月了）。如果服务到期之后你打算续费的话，那么我就会得到相应的报酬。当然了，你也可以不使用我的邀请链接，直接付费使用服务器。在整个配置过程中，我假设你安装的是Ubuntu
16.04。
1\. 首先你需要做的是，通过点击“创建Droplet（Create Droplet）”按钮来创建一个新的Droplet。
2\. 接下来，选择Ubuntu 16.04，然后选择每月五美金的套餐选项（如果你追求的是更高的性能，你也可以选择其他的套餐）。
3\. 你可以根据自己的需要来选择一个数据中心，然后在页面底部点击“创建（Create）”按钮。
点击了“创建”按钮之后，系统便会开始创建你的Droplet。随后系统便会向你发送一封电子邮件，并告知你如何去访问这台刚刚设置好的Linux服务器。如果你使用的是Mac
OS
X或者Linux系统的话，你可以打开你的“终端”，如果你使用的是Windows，那么请你在操作之前先安装Putty。（点击[这里](https://the.earth.li/~sgtatham/putty/latest/x86/putty.exe)下载Putty）
现在，你就可以使用SSH来访问你的服务器了。使用Windows
Putty的用户可以将电子邮件中提供的服务器IP地址拷贝进来，然后按下“回车键”即可。你将会以“root”用户的身份进行登录，你只需要将电子邮件中附带的登录密码输入进去，就可以成功访问服务器了。
对于Mac OS X用户和Linux用户而言，可以在终端中输入下列命令：
    ssh root@IPADDRESS
系统可能会要求你输入两次密码，然后你在登录前还需要修改之前的登录密码。当你完成这些操作之后，你就可以正常访问服务器了。
**（四）、配置运行环境－Golan和OnionScan**
在部署Python代码和OnionScan之前，我们还需要对服务器的环境进行配置。请你严格按照我们下方所给出的操作步骤进行操作，无论你使用的是Mac OS
X，还是Linux，或者是Windows，这些操作步骤都是相同的，因为这些命令全部会在服务器端运行。
当然了，你不必手动输入这些命令，复制粘贴也是可以的。每输入完一行命令之后，别忘了按下“回车键”，小心别打错命令了（注意空格和符号）。
    screen
    apt-get update
    apt-get install tor git bison libexif-dev
    apt-get install python-pip
    pip install stem
现在，我们需要安装Go语言的运行环境，因为OnionScan是采用Go语言进行编写的。Ryan
Frankel此前曾发表过一篇教程（《[只需七步即可在Ubuntu上安装Go语言](http://www.hostingadvice.com/how-to/install-golang-on-ubuntu/)》），所以我在这里直接引用了这篇文章中的命令。
    bash 
2.OnionScan的暗网分析报告（2016年6月）：
3.WingIDE官方网站：
4.Putty下载地址：
5.《只需七步即可在Ubuntu上安装Go语言》：
6.onionrunner.py文件源码下载地址：
7.完整的扫描结果（总共有8167条结果数据）：
8.Memex项目简介：
9.Onion.City：