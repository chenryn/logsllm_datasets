    重复此挂载的任何后续尝试都会失败，并显示以下错误：
    ``` screen
    # mount --bind mount-point duplicate-dir
    mount: wrong fs type, bad option, bad superblock on mount-point,
    missing codepage or helper program, or other error
    In some cases useful info is found in syslog - try
    dmesg | tail  or so
    ```
:::
::: example
[]{#sharing-a-mount-on-multiple-mount-points_managing-file-systems.html#idm139716059600672}
**例 15.4. 防止 /media 重复**
::: example-contents
::: itemizedlist
-   要防止 `/media`{.literal} 目录被共享，请使用：
    ``` screen
    # mount --bind /media /media
    # mount --make-unbindable /media
    ```
:::
:::
:::
::: itemizedlist
**其它资源**
-   `mount(8)`{.literal} man page
:::
:::
:::
[]{#assembly_persistently-mounting-file-systems_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#assembly_persistently-mounting-file-systems_managing-file-systems}第 16 章 永久挂载文件系统 {.title}
:::
作为系统管理员，您可以永久挂载文件系统来配置不可移动的存储。
::: section
::: titlepage
# []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#con_the-etc-fstab-file_assembly_persistently-mounting-file-systems}/etc/fstab 文件 {.title}
:::
这部分论述了控制文件系统永久挂载点的 `/etc/fstab`{.literal}
配置文件。使用 `/etc/fstab`{.literal} 是永久挂载文件系统的建议方法。
`/etc/fstab`{.literal}
文件中的每一行定义文件系统的挂载点。它包括六个字段，用空格分开：
::: orderedlist
1.  由持久属性标识的块设备或其 `/dev`{.literal} 目录的路径。
2.  挂载该设备的目录。
3.  该设备的文件系统。
4.  文件系统的挂载选项。选项 `默认值`{.literal}
    表示在启动时使用默认选项挂载分区。本节还识别
    `x-systemd.选项`{.literal} 格式的 `systemd`{.literal} 挂载单元选项。
5.  `dump`{.literal} 工具的备份选项。
6.  检查 `fsck`{.literal} 实用程序的顺序。
:::
::: example
[]{#assembly_persistently-mounting-file-systems_managing-file-systems.html#idm139716111965520}
**例 16.1. `/ etc/fstab 中的 /`{.literal}boot``{=html} 文件系统**
::: example-contents
::: informaltable
  块设备                                                  挂载点              文件系统          选项                 Backup          检查
  ------------------------------------------------------- ------------------- ----------------- -------------------- --------------- ---------------
  `UUID=ea74bbec-536d-490c-b8d9-5b40bbd7545b`{.literal}   `/boot`{.literal}   `xfs`{.literal}   `默认值`{.literal}   `0`{.literal}   `0`{.literal}
:::
:::
:::
`systemd`{.literal} 服务从 `/etc/fstab`{.literal}
中的条目自动生成挂载单元。
::: itemizedlist
**其它资源**
-   `fstab(5)`{.literal} 手册页
-   `systemd.mount(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#adding-a-file-system-to-etc-fstab_assembly_persistently-mounting-file-systems}在 /etc/fstab 中添加文件系统 {.title}
:::
这个步骤描述了如何在 `/etc/fstab`{.literal}
配置文件中为文件系统配置持久性挂载点。
::: orderedlist
**流程**
1.  找到文件系统的 UUID 属性：
    ``` screen
    $ lsblk --fs storage-device
    ```
    例如：
    ::: example
    []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#idm139716110277168}
    **例 16.2. 查看分区的 UUID**
    ::: example-contents
    ``` screen
    $ lsblk --fs /dev/sda1
    NAME FSTYPE LABEL UUID                                 MOUNTPOINT
    sda1 xfs    Boot  ea74bbec-536d-490c-b8d9-5b40bbd7545b /boot
    ```
    :::
    :::
2.  如果挂载点目录不存在，请创建它：
    ``` screen
    # mkdir --parents mount-point
    ```
3.  以 root 用户身份，编辑 `/etc/fstab`{.literal}
    文件并为文件系统添加一行，由 UUID 标识。
    例如：
    ::: example
    []{#assembly_persistently-mounting-file-systems_managing-file-systems.html#idm139716105379232}
    **例 16.3. /etc/fstab 中的 /boot 挂载点**
    ::: example-contents
    ``` screen
    UUID=ea74bbec-536d-490c-b8d9-5b40bbd7545b /boot xfs defaults 0 0
    ```
    :::
    :::
4.  重新生成挂载单元以便您的系统注册新配置：
    ``` screen
    # systemctl daemon-reload
    ```
5.  尝试挂载文件系统来验证配置是否正常工作：
    ``` screen
    # mount mount-point
    ```
:::
::: itemizedlist
**其它资源**
-   [永久命名属性概述.](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#con_device-names-managed-by-the-udev-mechanism-in-dev-disk-_assembly_overview-of-persistent-naming-attributes){.link}
:::
:::
:::
[]{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html}
::: chapter
::: titlepage
# []{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems}第 17 章 使用 RHEL 系统角色永久挂载文件系统 {.title}
:::
这部分论述了如何使用 `存储`{.literal} 角色永久挂载文件系统。
::: itemizedlist
**先决条件**
-   存在一个使用该 `存储`{.literal} 角色的 Ansible playbook。
    如需有关如何应用此 playbook 的信息，请参阅
    [应用角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-system-administration_configuring-basic-system-settings#applying-a-role_con_intro-to-rhel-system-roles){.link}。
:::
::: section
::: titlepage
# []{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#an-example-ansible-playbook-to-persistently-mount-a-file-system_persistently-mounting-a-file-system-using-rhel-system-roles}永久挂载文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用 `存储`{.literal}
角色来立即永久挂载 XFS 文件系统。
::: example
[]{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#idm139716094051344}
**例 17.1. 在 /dev/sdb 上将文件系统挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: xfs
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   此 playbook 将文件系统添加到 `/etc/fstab`{.literal}
    文件中，并立即挂载文件系统。
-   如果 `/dev/sdb 设备或`{.literal} 挂载点目录上的文件系统不存在，则
    playbook 会创建它们。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `存储系统`{.literal} 角色中使用的参数的详情，请参阅
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#persistently-mounting-a-file-system-using-rhel-system-roles_managing-file-systems.html#_additional_resources_3}其它资源 {.title}
:::
::: itemizedlist
-   有关 [`存储`{.literal}
    角色的更多信息](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#storage-role-intro_managing-local-storage-using-rhel-system-roles){.link}。
:::
:::
:::
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#assembly_mounting-file-systems-on-demand_managing-file-systems}第 18 章 根据需要挂载文件系统 {.title}
:::
作为系统管理员，您可以将 NFS 等文件系统配置为按需自动挂载。
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#the-autofs-service_assembly_mounting-file-systems-on-demand}autofs 服务 {.title}
:::
本节介绍 `autofs`{.literal} 服务的优点和基本概念，用于按需挂载文件系统。
使用 `/etc/fstab`{.literal}
配置进行永久挂载的一个缺点是，无论用户如何频繁地访问挂载的文件系统，系统都必须释放资源来保留挂载的文件系统。例如，当系统同时维护到多个系统的
NFS 挂载时，这可能会影响系统性能。
`/etc/fstab`{.literal} 的替代方法是使用基于内核的 `autofs`{.literal}
服务。它由以下组件组成：
::: itemizedlist
-   实施文件系统的内核模块，以及
-   执行所有其他功能的用户空间服务。
:::
`autofs`{.literal}
服务可以自动挂载和卸载文件系统（按需），从而节省系统资源。它可用于挂载文件系统，如
NFS、AFS、SMBFS、CIFS、CIFS 和本地文件系统。
::: itemizedlist
**其它资源**
-   `autofs(8)手册页`{.literal}.
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand}autofs 配置文件 {.title}
:::
本节介绍 `autofs`{.literal} 服务使用的配置文件的用法和语法。
::: title
**主映射文件**
:::
`autofs`{.literal} 服务使用 `/etc/auto.master`{.literal}
（主映射）作为其默认主配置文件。这可以更改为结合使用
`/etc/autofs.conf`{.literal} 配置文件中的 `autofs`{.literal} 配置以及
Name Service Switch(NSS)机制来使用其他受支持的网络源和名称。
所有 on-demand
挂载点都必须在主映射中配置。挂载点、主机名、导出的目录和选项都可以在一组文件（或其他支持的网络源）中指定，而不必为每个主机手动配置它们。
主映射文件列出了由 `autofs`{.literal}
控制的挂载点，以及它们对应的配置文件或网络来源（称为自动挂载映射）。master
映射的格式如下：
``` screen
mount-point  map-name  options
```
使用这种格式的变量有：
::: variablelist
[[*[mount-point]{.replaceable}*]{.emphasis}]{.term}
:   `autofs`{.literal} 挂载点；例如： `/mnt/data/`{.literal}。
[[*[map-file]{.replaceable}*]{.emphasis}]{.term}
:   映射源文件，其中包含挂载点列表以及挂载这些挂载点的文件系统位置。
[[*[选项]{.replaceable}*]{.emphasis}]{.term}
:   如果提供，则这些条目适用于给定映射中的所有条目（如果它们本身未指定选项）。
:::
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139716122589664}
**例 18.1. /etc/auto.master 文件**
::: example-contents
以下是来自 `/etc/auto.master`{.literal} 文件的示例行：
``` screen
/mnt/data  /etc/auto.data
```
:::
:::
::: title
**映射文件**
:::
映射文件配置单个 on-demand 挂载点的属性。