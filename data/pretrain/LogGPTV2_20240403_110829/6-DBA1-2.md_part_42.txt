\
//访问数据库时，mycat服务连接数据库服务器时使用的用户名和密码
\
\
\
指定c2名称主机对应的ip地址
\
\select user()\
\
\
//访问数据库时，mycat服务连接数据库服务器时使用的用户名和密码
\
\
\
8）添加PATH路径
\[root@mycat conf\]# export PATH=/usr/local/mycat/bin:\$PATH
\[root@mycat conf\]# echo \"PATH=/usr/local/mycat/bin:\$PATH\" \>\>
/etc/profile
\[root@mycat conf\]# source /etc/profile
\[root@mycat conf\]# echo \$PATH
/usr/local/mycat/bin:/usr/local/mycat/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
\[root@mycat conf\]# which mycat
/usr/local/mycat/bin/mycat
9）启动服务并查看端口
\[root@mycat conf\]# mycat start
Starting Mycat-server\...
\[root@mycat conf\]# netstat -antup \| grep :8066
tcp6 0 0 :::8066 :::\* LISTEN 6421/java
\[root@mycat conf\]# ps -C java
PID TTY TIME CMD
6421 ? 00:00:04 java
用admin用户登录
\[root@client \~\]# mysql -h192.168.4.54 -uadmin -p123456
mysql\> show processlist;
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Id \| User \| Host \| db \| Command \| Time \| State \| Info \|
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 3 \| admin \| 192.168.4.56:34580 \| db2 \| Sleep \| 80 \| \| NULL \|
\| 4 \| admin \| 192.168.4.56:34570 \| db2 \| Sleep \| 100 \| \| NULL \|
\| 5 \| admin \| 192.168.4.56:34572 \| db2 \| Sleep \| 40 \| \| NULL \|
\| 6 \| admin \| 192.168.4.56:34562 \| db2 \| Sleep \| 30 \| \| NULL \|
\| 7 \| admin \| 192.168.4.56:34564 \| db2 \| Sleep \| 90 \| \| NULL \|
\| 8 \| admin \| 192.168.4.56:34566 \| db2 \| Sleep \| 60 \| \| NULL \|
\| 9 \| admin \| 192.168.4.56:34574 \| db2 \| Sleep \| 70 \| \| NULL \|
\| 10 \| admin \| 192.168.4.56:34576 \| db2 \| Sleep \| 10 \| \| NULL \|
\| 11 \| admin \| 192.168.4.56:34578 \| db2 \| Sleep \| 20 \| \| NULL \|
\| 12 \| admin \| 192.168.4.56:34568 \| db2 \| Sleep \| 50 \| \| NULL \|
\| 14 \| admin \| 192.168.4.51:58354 \| NULL \| Query \| 0 \| starting
\| show processlist \|
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
11 rows in set (0.00 sec)
\[root@client \~\]# mysql -h192.168.4.55 -uadmin -p123456
mysql\> show processlist;
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Id \| User \| Host \| db \| Command \| Time \| State \| Info \|
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 3 \| root \| localhost \| NULL \| Sleep \| 2352 \| \| NULL \|
\| 4 \| admin \| 192.168.4.56:45148 \| db1 \| Sleep \| 2 \| \| NULL \|
\| 5 \| admin \| 192.168.4.56:45150 \| db1 \| Sleep \| 62 \| \| NULL \|
\| 6 \| admin \| 192.168.4.56:45160 \| db1 \| Sleep \| 12 \| \| NULL \|
\| 7 \| admin \| 192.168.4.56:45162 \| db1 \| Sleep \| 92 \| \| NULL \|
\| 8 \| admin \| 192.168.4.56:45152 \| db1 \| Sleep \| 32 \| \| NULL \|
\| 9 \| admin \| 192.168.4.56:45154 \| db1 \| Sleep \| 42 \| \| NULL \|
\| 10 \| admin \| 192.168.4.56:45156 \| db1 \| Sleep \| 22 \| \| NULL \|
\| 11 \| admin \| 192.168.4.56:45158 \| db1 \| Sleep \| 82 \| \| NULL \|
\| 12 \| admin \| 192.168.4.56:45164 \| db1 \| Sleep \| 52 \| \| NULL \|
\| 13 \| admin \| 192.168.4.56:45166 \| db1 \| Sleep \| 72 \| \| NULL \|
\| 14 \| admin \| 192.168.4.51:32796 \| NULL \| Query \| 0 \| starting
\| show processlist \|
+\-\-\--+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
12 rows in set (0.00 sec)
\[root@mycat conf\]# ls /usr/local/mycat/logs/
mycat.log mycat.pid wrapper.log //wrapper.log为错误日志
\[root@mycat conf\]# ldconfig -v //更新加载的模块
10）客户端访问
命令： mysql -hmycat主机的IP -P端口号 -u用户 -p密码
\[root@clent \~\]# mysql -h192.168.4.56 -P8066 -utest -ptest
mysql\> show databases;
+\-\-\-\-\-\-\-\-\--+
\| DATABASE \|
+\-\-\-\-\-\-\-\-\--+
\| TESTDB \|
+\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> USE TESTDB;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql\>
mysql\> show tables;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Tables in TESTDB \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| company \|
\| customer \|
\| customer_addr \|
\| employee \|
\| goods \|
\| hotnews \|
\| orders \|
\| order_items \|
\| travelrecord \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
9 rows in set (0.00 sec)
11）客户端测试：
mysql\> create table employee(id int not null primary key,name
varchar(100),sharding_id int not null);
Query OK, 0 rows affected (0.10 sec)
mysql\> insert into employee(id,name,sharding_id)
values(1,\"bob\",10000);
Query OK, 1 row affected (0.03 sec)
mysql\> insert into employee(id,name,sharding_id)
values(1,\"lucy\",10010);
Query OK, 1 row affected (0.02 sec)
mysql\> select \* from employee;
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| id \| name \| sharding_id \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| 1 \| bob \| 10000 \|
\| 1 \| lucy \| 10010 \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
2 rows in set (0.06 sec)
12）在c1上面查看结果
mysql\> show databases;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Database \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| information_schema \|
\| db1 \|
\| mysql \|
\| performance_schema \|
\| sys \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
5 rows in set (0.00 sec)
mysql\> use db1;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql\> show tables;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Tables_in_db1 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| employee \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> select \* from employee; //查看结果
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| id \| name \| sharding_id \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| 1 \| bob \| 10000 \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
13）在c2上面查看结果
mysql\> show databases;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Database \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| information_schema \|
\| db2 \|
\| mysql \|
\| performance_schema \|
\| sys \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
5 rows in set (0.00 sec)
mysql\> use db2;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql\> show tables;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Tables_in_db2 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| employee \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> select \* from employee;
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| id \| name \| sharding_id \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| 1 \| lucy \| 10010 \|
+\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
# Mysql 锁表处理
\[root@DB \~\]# mysql -uroot -proot
mysql\> show processlist； \# State状态为Locked即被其他查询锁住
![](media/image47.png){width="6.761111111111111in"
height="2.1458333333333335in"}
KILL 10866 #后面的数字即时进程的ID
mysql 查看当前连接数
命令： show processlist;
如果是root帐号，你能看到所有用户的当前连接。如果是其它普通帐号，只能看到自己占用的连接。
show processlist;只列出前100条，如果想全列出请使用show full processlist;
mysql\> show processlist;
命令： show status;
Aborted_clients 由于客户没有正确关闭连接已经死掉，已经放弃的连接数量。
Aborted_connects 尝试已经失败的MySQL服务器的连接的次数。
Connections 试图连接MySQL服务器的次数。
Created_tmp_tables 当执行语句时，已经被创造了的隐含临时表的数量。
Delayed_insert_threads 正在使用的延迟插入处理器线程的数量。
Delayed_writes 用INSERT DELAYED写入的行数。
Delayed_errors 用INSERT DELAYED写入的发生某些错误(可能重复键值)的行数。
Flush_commands 执行FLUSH命令的次数。
![](media/image48.png){width="6.763194444444444in"
height="2.2604166666666665in"}
# Mysql-5.7.27官网tar包安装
借鉴网站：https://blog.csdn.net/aeve_imp/article/details/99415932
本案例模仿241测试数据库的目录结构和做法
1.下载tar.gz包：https://www.mysql.com/downloads/
选择操作系统和版本
![IMG_256](media/image49.png){width="2.942361111111111in"
height="1.7909722222222222in"}
\[root@localhost \~\]# yum -y install perl-Data-Dumper perl-JSON
perl-Time-HiRes #此步骤不太确定有用
## 安装数据库
将mysql-5.7.27-linux-glibc2.12-x86_64\_(1).tar.gz
包传到236主机上，解压，
\[root@localhost \~\]# tar -xf
mysql-5.7.27-linux-glibc2.12-x86_64\_\\(1\\).tar.gz
\[root@localhost \~\]# mv mysql-5.7.27-linux-glibc2.12-x86_64
/home/mysql57
#将程序目录移动并改名/home/mysql57
#准备配置文件
\[root@localhost mysql57\]# ls #my.cnf文件为241上传过来，
bin COPYING data docs include lib man my.cnf README share support-files
#准备启动文件
\[root@localhost mysql57\]# ll -h support-files/
总用量 24K
-rw-r\--r\--. 1 root root 773 6月 10 22:43 magic
-rwxr-xr-x. 1 root root 1.1K 6月 10 23:37 mysqld_multi.server
-rwxr-xr-x. 1 root root 894 6月 10 23:37 mysql-log-rotate
#mysql-log-rotate脚本为241上传过来
-rwxr-xr-x. 1 root root 11K 9月 4 14:45 mysql.server
#mysql.server脚本为241上传过来
![](media/image50.png){width="6.764583333333333in"
height="2.9270833333333335in"}
初始密码为：D&eu3oYs.yHB
#执行以下命令创建RSA private key
\[root@localhost mysql57\]# bin/mysql_ssl_rsa_setup
\--datadir=/home/mysql57/data
![](media/image51.png){width="6.763888888888889in"
height="1.895138888888889in"}
\[root@localhost \~\]# mkdir /var/lib/mysql57 #my.cnf定义的sock 路径
\[root@localhost \~\]# chown mysql.mysql /var/lib/mysql57
\[root@localhost mysql57\]# ./support-files/mysql.server start
Starting MySQL\...\..... SUCCESS!
此处有坑，注意如下图报错信息
![](media/image52.png){width="6.766666666666667in"
height="2.0708333333333333in"}
## 登陆数据库
\[root@localhost mysql57\]# ./bin/mysql -uroot #登陆数据库报错
![](media/image53.png){width="6.763888888888889in"
height="3.3979166666666667in"}
\[root@localhost mysql57\]# ln -s /var/lib/mysql57/mysql.sock
/tmp/mysql.sock 解决以上问题
![](media/image54.png){width="6.766666666666667in"
height="3.2444444444444445in"}
首次登陆必须修改密码，否则无法做任何操作
mysql\> show databases ;
ERROR 1820 (HY000): You must reset your password using ALTER USER
statement before executing this statement.
mysql\> alter user root@\"localhost\" identified by \"root\";
#修改root密码为root，退出重新登陆验证