可行的布局方案就是每个目录的名称应该包含厂商、硬件平台、操作系统以及二进制文
件树的编译参数：
---
## Page 149
大型项目的管理
139
$18
hp-386-windows-optimized
hp-386-windows-debug
sgi-irix-optimzed
sgi-irix-debug
sun-solaris8-profiled
sun-solaris8-debug
当有需要保存不同时间的编译结果时，通常，最好的做法就是为目录名称加上日期戳
（甚至是时间戳）。其格式可以是yymmdd或yymmddhhmm：
$18
hp-386-windows-optimized-040123
hp-386-windows-debug-040123
sgi-irix-optimzed-040127
sgi-irix-debug-040127
sun-solaris8-profiled-040127
sun-solaris8-debug-040127
当然，此处的文件名组件次序可能跟你的不一样。这些二进制文件树的顶层目录是存放
makefile和测试记录的好地方。
这样的布局适合用来存放各个平行开发人员的编译结果。如果现在有一个开发团队负责
编译发行版本，也许是给内部的客户使用的，你可以考虑新增一个额外的“发行版布局
空间”（releasefarm）来针对一组产品进行布局，每个产品可以包含版本编号和时间戳，
如图6-2所示。
release
product1
040101
0404124
040121
roductz
031212
图6-2：发行树的布局范例
此处的产品可能是某个开发团队所编译的、可供其他开发人员使用的程序库。当然，它
们也可能是传统上所谓的产品。
---
## Page 150
140
第六章
清理的动作应该快速且明确、应该有助于文件树的搬移和保存。此外，文件系统的布局
应该尽量配合组织的处理结构。程序员以外的人员（像管理人员、质量保证人员和技术
自动编译与测试
够在夜间进行，从而节省了开发人员白天的时间：这也让开发人员能在自己所拥有的无
人照料的机器上进行编译的工作。
进人生产阶段的软件，通常会有为不同的产品编译不同版本的需求。对于负责满足这些
需求的人来说，启动若干编译过程之后“离开”，通常是让他们保持清醒以及满足需求
的不可或缺的能力。
自动测试是另一项议题。许多非图形的应用程序可以使用简单的脚本来管理测试的过程。
GNU工具dejaGnu还可以用来测试需要交互的非图形实用程序。当然，JUnit
（http://www.junit.org）之类的测试结构也能够为非图形单元的测试提供支持。
至于图形应用程序的测试则另当别论。在以X11为基础的系统上，我已经可以使用xvfb
（virtualframebuffer）以cron进行自动的测试。在Windows系统上，我还找不到一个
满意的解决方案。自动测试进行的时候，必须维持测试账号登录的状态以及取消屏保的
状态。
---
## Page 151
第七章
具可移植性的makefile
何谓具可移植性的makefile？举一个极端的例子，就是我们想让一个makefile不必经过
修改就能够在GNUmake所运行的任何系统上运行。不过这几乎是不可能的，因为不
同的操作系统间有极大的差异。一个较合理的说法是，具可移植性的makefile经过简单
的修改就可以在每个新的平台上运行。一个重要的额外限制是：不可以因为移植到新的
系统而中断对之前平台的支持。
如同传统的程序设计，我们也可以使用封装（encapsulation）和抽象化（abstraction）等
技术让makefile达到这样的可移植性水平。通过变量和用户自定义函数的使用，我们可
以封装应用程序和算法：通过为命令行选项和参数定义变量，我们可以从常数元素中抽
取出具平台差异性的元素。
然后你必须决定每个平台应该提供哪些工具来让你的工作能够顺利完成，以及每个平台
应该使用什么方法。只使用你感兴趣的、所有平台上都提供的工具和功能，可让你获得
最大程度的可移植性。这就是所谓的“最小公分母”（leastcommondenominator）法，
显然你所使用的都应该是非常基本的功能。
“最小公分母”法的另一个版本，就是使用一组功能强大的工具，并且确定你可以把它
们带到每个平台，这样可确保你在makefile中所调用的命令在任何平台上都可以正确执
行。就管理来说，这可能难以实现，而且用户的系统可能无法配合。不过这也可能会成
功，稍后我将会举一个在Windows上使用Cygwin包的例子。正如你将会看到的，工具
标准化无法解决每个问题，操作系统之间总是存在某些差别。
最后，你会接受系统之间存在着差异性以及通过慎选宏和函数来跨越这些差异。本章稍
后也会示范这个方法。
141
---
## Page 152
142
第七章
殊的功能，我们就可以提高makefile的可移植性。正如稍早所说，可移植性不可能达到
完美的地步，所以我们的工作就是让编译结果与可移植性达到平衡。不过在我们探索具
体的技术之前，让我们了解具可移植性的makefile的若干内容。
可移植性的若干内容
可移植性的问题可能难以具体描述，因为它涵盖了极广的范围，大到完全转移自己的思
考模式（比如传统的MacOS与SystemVUnix），小到缺陷的修复（比如“修复”程
序的错误结束状态中的某个缺陷）。然而，下面还是列出了每个makefile迟早必须面对的
若干常见的可移植性问题：
程序名称
不同平台上相当常见的问题，就是对相同或类似的程序使用不同的名称。最常见的
就是C或C++编译器的名称（例如cC、x1c）。另一个常见的状况是，当GNU版
的程序被安装到非GNU的系统上时会对程序的名称前置字母g（例如gmake、
gawk)。
路径
平台不同，程序和文件的位置通常也会不同。例如，在Solaris系统上，X窗口的
路径为/usr/X，然而在许多其他的系统上，X窗口的路径为/usr/X11R6。此外，当
你从一个系统转移到另一个系统时，/bin、/usr/bin、/sbin和/usr/sbin之间的差别
通常会有些模糊不清。
选项
程序不同，命令行选项也会不同，特别是当你使用的是替代品时。此外，如果一个
平台缺少了某个实用程序或是提供了某个有问题的版本，你可能需要将该实用程序
替换成另一个使用不同命令行选项的实用程序。
shell的功能
make默认会以/bin/sh来运行脚本，但是不同的sh实现之间的功能差异很大。特
别是非POSIX的shell缺少了许多功能，无法接受新式shell所能处理的语法。
皮书。你可以在http：//www.unix-systems.org/whitepapers/shdiffs.html找到这份文
件。想要取得进一步信息，可以在http://www.opengroup.org/onlinepubs/
007904975/utilities/xcu_chap02.html找到POSIX的shell'scommandlanguage规
范说明书。
---
## Page 153
具可移植性的makefile
143
程序的行为
具可移植性的makefile还必须全力处理行为完全不同的程序。当有不同的厂商调整
或插人缺陷以及新增功能时，这是极为常见的问题。实用程序是否升级到厂商的最
新版本也是一个问题。例如，awk程序于1987年大改版，几乎20年之后，仍有若
干系统并未把它们的awk程序升级到这个版本。
操作系统
最后，完全不同的操作系统之间，比如Windows与Unix或Linux与VMS，也存在
着可移植性的问题。
Cygwin
问题，因为这个固有的移植版本所使用的shell是cmd.exe（或command.exe）。再加上缺
少其他Unix工具，让“跨平台移植”成为令人却步的工作。幸好，Cygwin项目
（http://www.cygwin.com）为Windows建立了一个与Linux兼容的程序库，这让许多程
序（注1）能够被移植过来。对想要获得Linux兼容性或取用GNU工具的Windows开
发人员来说，我不相信他们还可以找到更好的工具。
我将Cygwin使用在各种项目上，从C++/Lisp的CAD应用程序到纯Java的工作流程管
理系统，已经有10年以上的经验。Cygwin工具集包含了许多程序语言的编译器和解释
器。然而，就算应用程序本身被实现的时候使用的是非Cygwin的编译器和解释器，
Cygwin的使用也能让你获益。Cygwin工具集只是用来让开发过程和编译过程协同一致。
换句话说，你无需编写Cygwin应用程序或者使用Cygwin语言工具，就可以从Cygwin
坏境获得好处。
然而，Linux并非Windows（谢天谢地！），当你将Cygwin工具使用在原生的Windows
应用程序上时，将会遇到一些问题。这些问题几乎都在“文件中所使用的行结束符号”
以及“Cygwin与Windows之间所传递的路径的形式”上打转。
行终止符
Windows操作系统的文本文件中将会以CRLF，即carriagereturn（回行首）与linefeed
（换行），这个双字符序列作为行终止符（lineterminator）。POSIX系统则会使用单字符
LF作为行终止符。这个差异有时会导致令人混淆的状况，例如程序汇报语法错误或是在
注1：我的Cygwin操作环境的/bin目录中目前包含了1343个可执行文件。
---
## Page 154
144
第七章
数据文件中找错位置。当Cygwin被安装（或是mount命令被使用）的时候，你可以选
择是否应该让Cygwin以CRLF结束符来转译文件。如果你选择使用DOS文件格式，那
么当文本文件被读人的时候，Cygwin会把CRLF转译成LF；而当文本文件被写出的时
候，Cygwin会进行相反的动作。因此，以Unix为基础的程序可以正确处理DOS文本文
件。如果你打算使用原生的语言工具，比如VisualC++或Sun的JavaSDK，请选择DOS
文件格式：如果你准备使用Cygwin编译器，请选择Unix（你可以随时改变你的选择）。
此外，你也可以使用Cygwin所提供的工具手动进行文件的转译工作。如果有需要，你
可以使用dos2unix和unix2dos来转换文件的行结束符号。
文件系统
Cygwin所提供的是Windows文件系统的POSIX观点。POSIX文件系统的根目录是/，
刚好对应到Cygwin被安装的目录。至于Windows磁盘驱动器则可通过假目录/cygdrive/
letter来访问。所以，如果Cygwin被安装在C：\usrcygwin（我喜欢安装在这个位置）下，
你可以在表7-1中看到相应的目录映射关系。
表7-1：默认的Cygwin目录映射关系
原生的Windows路径Cygwin路径
替代的Cygwin路径
/
/cygdrive/c/usr/cygwin
c:\ProgramFiles
lcygdrivelc/ProgramFiles
c:usr\cygwin\bin
/bin
/cygdrive/c/usr/cygwin/bin
乍看之下，这可能会令人有些混淆，但是这并不会对工具造成任何问题。Cygwin还提供
了mount命令，这让访问文件和目录的用户能够更加方便。这个mount命令具有一个
选项，--change-cygdrive-prefix，可让你变更前缀符号。我发现将前缀符号变更
为/特别有用，因为磁盘驱动器盘符（driveletter）的使用将会变得更加自然：
Smount --change-cygdrive-prefix/
$1s/c
AUTOEXEC.BAT
Home
Program Files
hp
BOOT, INI
I386
RECYCLER
ntldr
CD
IO.SYS
System Volume Informationpagefile.sys
CONFIG.SYS
MSDOS.SYS
Temp
tmp
C_DILLA
NTDETECT.COMWINDOWS
usr
Documents and Settings PERSIST
WUTemp
work
做此变更之后，前面的目录映射关系将会如表7-2所示。
---
## Page 155
具可移植性的makefile
145
表7-2：修改后的Cygwin目录映射关系
原生的Windows路径Cygwin路径
替代的Cygwin路径
c:usrcygwin
/
lc/usrlcygwin
c:\ProgramFiles
Ic/ProgramFiles
c:\usricygwin\bin
/bin
lc/usr/cygwin/bin
如果你需要将文件名传递给一个Windows程序，比如VisualC++编译器，你通常可以
使用POSIX风格的分隔符（斜线）传递文件的相对路径。斜线和反斜线对Win32AP1
而言并无不同，可惜，有些实用程序在解析它们自己的命令行参数时会将斜线作为命令
选项。Dos的print命令就是这样的实用程序，net命令是另一个这样的实用程序。
如果使用绝对路径，磁盘驱动器盘符的语法总是一个问题。尽管Windows程序通常可以
接受斜线，但是它们完全无法了解/c的语法。磁盘驱动器盘符总是必须转换回c：。为了
解决此问题以及进行斜线/反斜线的转换，Cygwin提供了cygpath实用程序，让我们能
够来回转换POSIX路径与Windows路径。
Scygpath--windowe/c/work/src/lib/foo.c
c:\work\src\1ib\foo.c
Scygpath--mixed/c/work/src/1ib/foo.c
c:/work/src/lib/foo.c
C:/work/src;c:/work/include
--windows选项可让你将命令上所指定的POSIX路径转译成Windows路径（或者你可
以使用适当的选项进行相反的动作）。如果Windows可以接受的话，我比较喜欢使用
--mixed选项来产生Windows路径，不过是以斜线而不是以反斜线为分隔符。这么做
对Cygwinshell的运作会比较好，因为反斜线在该处是个转义字符（escapecharacter）。
cygpath实用程序具有许多选项，其中的部分可为董要的windows路径提供相应的
POSIX路径：
S cygpath --desktop
/c/Documents and Settings/Owmer/Desktop
S cygpath --homeroot
/c/Documents and Settings
S cygpath --Bmprograms