长度的难度(测量击败密码 系 统所需的处理时间 )与数据的 重要程度做出 决定。
一般而 言 ， 数据越重要， 保护数据的密钥力口密强度就应该越强。 数据的时间性也是重要的考虑
因素。 必须考虑到计算能力 的迅速增长， 著名 的摩尔定律指出， 大约每隔 1 8 个月 计算机的计算能力
就会翻一番。 如果使用现在的计算机， 需要花费一年的处理时 间来破解1v萄， 那么按照摩尔 定律，
使用 三年后 同 时代的技术， 这种尝试只 需三个月 时间。 如果希望数据在三年后的敏感程度仍然不变，
就应该选择比较长的力口密密钥 ， 从而在今后保持较好的安全性。
根据所使用 密码系统的不同 ， 各种密钥长度的加密强度有很大差异。 有三种非对称密码系统的
密钥 长度能提供相 同 的保护程度， 如表 7. 1 所示:
表 7. 1 三种非对称密码系统的密钥长度
密码系统
时一叫一 叫一叫
RSA
DSA
椭圆 曲线密码系统
7. 1 .3 EI Gamal
在第6章中， 你己经学习 了 Di伍。Hellman 算法如何使用大的整数和模数算法来帮助在不安全的
通信信道上安全交换秘密密钥。 1 985年， T. El Gamal 博士发表了一篇文章， 文 中介绍了 Diffie-Hellman
密钥交换算法背后的数学原理如何被扩展用 于支持整个密码系统中 的消 息加密和解密。
1 61
CISSP 官方学习指南(第 7 版)
在发布时， El Gamal 算法优于 RSA 算法的一个主要方面是: 它是公开发布的。 El Gamal 博士
没有申 请 Diffie-Hellman 算法的扩展专利权， 并且它的使用是免费的 ， 不像商业化的 己取得专利的
RSA 技术(在 2000 年 ， RSA 公布其算法到公共领域)。
然而， EI Gamal 算法也有一个主要缺点， 即用此算法加密的任何消息的长度都加倍了 。 当加密
长信息或数据并且要在带宽较窄 的通信线路上传输时， 这会表现出难 以 克服的 困难。
7. 1 .4 椭圆曲线密码系统(ECC)
也是在 1 985 年， 两位数学家 Neil Koblitz(来 自 华盛顿大学)丰日 Victor MiUer(来自 IBM)独立地提
出 了运用椭圆曲线密码系统(ECC)理论来开发安全的密码系统。
注意 :
椭 圆 曲线密码系统背后的数学概念是相当复杂的 ， 并且也超出 了 本书 的讨论范围 。 但是， 在准
备 CISSP 考试时， 应 当大致熟悉椭圆曲线算法及其潜在的应用 情况。 如果有兴趣学 习椭圆 曲线密码
系 统的数学知识， 可以参考www.certicom.com/index.php/ecc-h1torial 上的优秀指南。
1 62
使用下面这个方程式可 以定义任何椭 圆 曲线:
y
2
= X
3 = ' + ax +
在这个方程式中 ， x、 y、 a和b 都是实数。 每个椭圆曲线都有一个对应的椭圆曲线组， 这个椭
圆 曲线组由椭圆 曲线上的点和位于无穷大处的点 0 组成。 在同一个椭圆 曲线组中 的两个点σ 和 Q)
可 以用椭圆 曲 线的加法算法加在一起 。 这个运算非常简单 ， 如下所示:
P + Q
这个 问 题可 以被扩展 以涉及乘法。 假设 Q是P 的倍数， 如下所示:
Q = xP
计算机科学家和数学家相信， 即使在P和Q 己知的情况下， 找到像 x 这样的数也是极其困难的。
这个难题被称为椭圆 曲线的离制才数问题， 也是形成椭圆曲线密码学的基础。 人们一般认为， 解决
这个问题比解决 RSA 密码系统依赖的质数因数分解问题和 Di面e-Hellman 与 El Gamal 应用 的标准离
散对数问题还要困难。 前面的 " 密钥长度的重要性 " 通过具体数据阐述了这个问题， 也就是 1 088
位 的 RSA 密钥的加密强度相当于 1 60 位的椭圆 曲 线密码系统密钥的加密强度。
7.2 散列 函 数
在本章的后面部分， 你将了 解密码系统如何通过实现数字签名来证明某条消息来 自 于密码系统
的一位特定用户 ， 并且保证此消息在双方传输的过程中没有被修改。 在完全理解这个概念之前， 我
们必须先解释一下散列函数的概念。 本节我们将研究散列函数的基础知识， 并讨论现代数字签名算
法中常用 的 几种散列函数。
第 7 章 PKI 和密码学应用
散列函数具有一个非常简单的用途， 那就是它们接收一条可能会很长的消息， 然后根据消息 内
容生成唯一的输出值。 该值通常被称为消息摘要 。 消息摘要可以 由消息的发送者产生 ， 并连同完整
的消息一起传送给接收者 ， 这其中有两个原因:
首先， 接收者能够使用相同的散列函数对完整的消息进行重新计算， 得出消息摘要。 然后， 接
收者将计算得出 的消息摘要与传送过来的消息摘要进行比较， 从而确保始发者发送的消息与接收者
收到的是同一条消息。 如果两个消息摘要不匹配， 那么就表明消息在传送的过程中因为某种原因被
修改过。
其次， 消息摘要可以被用于实现数字签名算法。 这个概念将在本章稍后的 "数字签名 " 部分 中
进行介绍 。
注意 :
术语 "消息摘要" 可以与其他多 种同义词王换使用 ， 这些同 义词 包括散列 、 散列值、 散列总数、
CRC、 指纹、 技验和 、 数字 ID.
大多数情况下， 消息摘要为 1 28 位或更长。 不过， 某个单位值可以被用于执行奇偶校验功能，
低位或单位校验值被用于提供单独的验证点。 大多数情况下， 消息摘要越长， 完整性验证就越可靠。
按照 RSA 安全公司 的标准 ， 对密码学散列 函数有下列 5 个基本要求:
• 输入值可 以 是任意长度 。
• 输 出值具有固定的长度 。
• 散列函数在计算任何输入值时要相 对容易。
• 散列函数是单向的(意味着在提供输出值时确定输入值是极其困难的)。 单向函数及其在密码
学 中 的用途在第 6 章 中 曾 经介绍过。
• 散列函数是不会发生冲突的(意味着找到产生相 同散列值的两条消息是极其 困难 的)。
接下来， 我们将介绍 4 种常见的散列算法: S也气、 MD2、 民在D4 和 MD5 。 本章稍后部分还将对
HMAC 进行讨论。
提示 :
散91J算法有很多 ， CISSP 考试只 涉及其中几种算法。 除 了 SHA、 MD2、 MD4、 h在D5 和 HMAC
之外， 你还应 当 了 解变长散列(Hash ofVariab1e Length， HAVAL). HAVAL 是 岛。5 的修改版， 这种
算法使用 1 024 位的分组 ， 并且产 生 128、 1 60 、 192 、 224 和 256 位的散列值。
7.2. 1 SHA
安全散列算法(SHA)及随后衍生 的 SHA-l 和 SHA-2 算法是由美国国家标准和技术协会阴1ST)
开发的政府标准的散列函数， 并在正式的政府出版物一一安全散列标准(Secure Hash Standard， SHS)
中进行了说明， 此标准也被称为联邦信息 处理标准(FIPS)1 80 。
SHA-l 表面上可以接受任意长度的输入数据(事实上， 在此算法中输入值的长度的上限大约是
2 097 1 52TB)， 并且生成一个 1 60 位的消息摘要。 SHA-l 算法处理 5 12 位的消息分组。 因此， 如果
消息的长度不是 512 的倍数， 那么 SHA 算法就会用附加的数据填充消息， 直至长度达到 512 的下
一个最高倍数。
近年来的密码分析攻击己证明 SlL斗1 算法中存在缺陷， 这导致 SHA响2 算法的出现， SHA-2 具
有下列 4 种变体:
1 63
CISSP 官方学习指南(第 7 版)
• SHA-256 处理 5 12 位的分组大小 ， 生成一个 256 位的消息摘要。
• SHA-224 处理 5 12 位的分组大小 ， 使用删减版本的 SHA-256 散列算法生成一个 224 位的消
息摘要。
• SHA-5 1 2 处理 1 024 位的分组 大小 ， 生成一个 512 位的消息摘要。
• SHA-384 处理 1 024 位的分组大小， 使用删减版本的 SHA-5 1 2 散列算法生成一个 384 位的
消 息摘要。
提示 :
虽 然看似没那 么 重要， 但还是要花时间记住本章讨论的每种散列 算法生成的信息摘要的大小。
密码机构通常将 SHA-2 算法视为安全的 ， 但是这种算法在理论上存在与 SHA-l 算法相 同的缺
陷 。 在 2012 年， 美国联邦政府宣布选择 Keccak 算法作为 S队-3 标准。 然而， S队-3 标准仍是草案
的形式并且一些技术细节仍然需要完成。 观察家认为， 一旦 NIST 定型 SHA-3 ， SHA-2 仍将是 NIST
安全散列标准(SHS)的一部分， 直到有人证明 对 SHA-2 的有效实际攻击。
7.2.2 MD2
扎在02 散列算法由 Ronald Rivest(也就是 Rivest、 Shamir 和 Adleman 中 的同一人)于 1 989 年开发，
是为 8 位处理器提供的一种安全散列函数。 扎在02 对消息进行填充， 从而使消息的长度成为 1 6 字节
的倍数。 然后， 该算法会计算出一个 1 6 字节的校验和， 并添加到消息的结尾处。 最后， 通过使用完
整的原始消息与添加 的校验和共同生成 1 28 位的消息摘要。
存在针对MD2 算法的密码分析式攻击， 尤其是 Nathalie Rogier 和 Pascal Chauvaud 发现， 如果
校验和在消 息摘要计算之前没有被添加到消息中， 那么就有可能发生冲突。 之后， Frederic Mueller
证 明 MD2 不是一种单向 函数 。 因此， 这种算法己不再使用 。
7.2.3 MD4
1 990 年， Rivest 增强了其信息摘要的算法， 进而支持 32 位的处理器并提高了安全级别 。 这种
高级的算法被称为 MD4。 这个增强算法先对消息进行填充 ， 确保消息的长度 比 512 比特的倍数短
64 比特。 例如， 一条 1 6 比特的消息会用 432 比特的附加数据进行填充 ， 使之达到 448 比特， 这条
消 息的长度是 比 512 比特的倍数短 64 比特。
随后， MD4 算法对 512 位的消息分皇岛挂行处理， 经过三轮计算， 最后的输出结果是一条 1 28
比特的消息摘要。
1 64
提示 :
扎在02、 MD4 和 MD5 算法不再被承认是合适的散列 函数。 不过， CISSP 考试中仍然可能涉及这
些 算法的细节 问 题。
几位数学家己经公开发表了 书面文档 ， 证明 MD4 算法完整版本的缺点 以及不正确实现的 MD4
版本。 特别地， 出ns Oobbertin 在 1 996 年发表了一篇论文， 概述了如何使用现代个人计算机在不到
一分钟的时间内找到针对 MD4 消息摘要的冲突。 因此， 扎在04 己经不再被认为是一种安全的散列算