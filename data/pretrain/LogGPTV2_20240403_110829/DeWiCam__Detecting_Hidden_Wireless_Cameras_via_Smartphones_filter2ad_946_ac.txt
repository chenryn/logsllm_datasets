86.782
27.826
12.695
13.217
Precision Recall(T P )
81.159
84.384
76.497
67.415
83.611
83.661
74.418
93.355
91.208
95.238
95.555
94.285
5.3.4. Machine Learning Classiﬁers
We examined the false positives that resulted from each of the diﬀerent
threshold measures and noted that only 24% of the time did all of the mea-
sures simultaneously produce a false positive. Table 5 provides a breakdown
of the false positives. We hypothesized that we could utilize the lack of
agreement between the similarity measures to improve our results via ma-
chine learning. We did not examine a majority vote system because that
would have only eliminated the false positives in 56% of our samples.
We examined many standard classiﬁers to attempt to improve above the
threshold classiﬁcation method. Of these, we achieved the best performance
Table 5: False Positive Count
False Positives Wi-Fi Camera Mobile Phone
Total Samples
135
61
3
2
1
3.28%
80.33%
16.39%
33.33%
10.37%
56.30%
Table 6: F1 Scores for Portability Between Indoors and Outdoors Training
for Wi-Fi Camera Detector
Tested
s
r
o
o
d
t
u
O
s
r
o
o
d
n
I
h
t
o
B
d Indoors
96.55 62.50 67.24
Outdoors 81.11 92.31 83.67
83.02 84.21 85.71
Both
e
n
i
a
r
T
with a neural network. We performed grid search with 10-fold cross valida-
tion. For this study, a in total of 768 combinations of hyper-parameters are
tested. We performed the grid search separately for both the Wi-Fi camera
detector and the mobile phone detector and they both produced very similar
models. The Wi-Fi camera detector’s selected model had L-BFGS as the
solver and the Logistic activation function. It also had three hidden layers
with 13 neurons in each of them. The only diﬀerence with the mobile phone
detector was that each layer had 14 neurons.
5.3.5. Best Classiﬁers
Based on the results from sections 5.3.3 and 5.3.4, we selected the best
threshold-based and machine-learning-based classiﬁers for the two detection
models. The selected best classiﬁers are presented in Table 8 below.
Table 8 presents the best classiﬁers for the two detection models. As seen
in the table, neural network models outperformed threshold-based classiﬁers
both in terms of the F1 score and an accuracy rate achieving above 94%.
Moreover, both of the neural network models had a 100% recall rate, so
Table 7: F1 Scores for Portability between Indoors and Outdoors training
for Mobile Phone Detector
Tested
s
r
o
o
d
t
u
O
s
r
o
o
d
n
I
h
t
o
B
d Indoors
e
n
i
a
r
T
96.55 73.68 78.79
Outdoors 82.62 95.23 66.67
72.72 82.35 89.15
Both
Table 8: The Selected Best Classifiers.
Classiﬁers
F1 score Accuracy Error Precision Recall
Wi-Fi camera-based detection model
Threshold-based: KLD
Neural Network Indoors
Neural Network Outdoors
Mobile phone-based detection model
Threshold-based: KLD
Neural Network Indoors
Neural Network Outdoors
88.643
96.551
92.307
88.814
96.550
95.238
87.165
97.436
94.118
87.453
96.078
96.774
12.834
2.564
5.882
12.546
3.922
3.226
84.384
93.333
85.714
81.846
93.333
90.909
93.355
100.000
100.000
97.080
100.000
100.000
scoring measurements that focus more heavily on True Positives would result
in even better scores.
5.3.6. Convergence Time
While all of the tests described in this paper were run on 60 seconds
of observation, we also examined the convergence rate of detection. We
randomly selected 1 spying camera device and 69 non-spying camera devices
then analyzed our results at each time step. Figure 5 shows that our results
when averaged over 40 trials. Generally the spying camera is identiﬁed within
a 10 seconds, and the rest of the time is spent weeding out the false positives.
We see that the F1 score exceeds 0.90 within 20 seconds.
5.3.7. Model Portability
In this portion of the evaluation we examined the portability of the models
between indoors and outdoors spaces. Figures 6 and 7 present a matrix
Figure 5: Time to Convergence
summary of the results by showing the F1 scores for our models when the
data is partitioned into Indoors, Outdoors, and Both and then the model
is trained and tested on samples from each set. From these results, we see
that, as one would expect, the best results are achieved when the model is
trained only with the class of data that it will be used to test with. We also
note that training with the outdoor data provided much better results for
non-outdoors testing than occurred with indoor training data. In general we
conclude that it is best to use separate models for drastically diﬀerent types
of space, but even if you use a combined model, there will still be value to
the results.
5.3.8. Performance of the ANN
We further examined the performance of the selected model in the new
environment. The best ANN model was selected and trained with the old
dataset, then made predictions on the new dataset we collected. The results
of the predictions on the new dataset shown in Table 9. As shown in the
table, the performance of the model suﬀered as the accuracy rate drops to
81.94%. The overall performance also drops while numbers of false positive
and false negative increases. It is stated that diﬀerent environment settings
did aﬀected the magnitudes of the changes pixels in the H.264 encoding thus
degrades the performance of the model.
In order to boost the performance of the model, we introduced several
new features into the ANN model. Cramer distance, Energy distance, and
Wasserstein distance are further implemented into the new ANN model. Per-
formance of the new ANN model is also presented in Table 9. Compared with
the previous model, the model with new features is able to boost the recall
rate to 93.37%. The new model trained with the new features can classify
more true positives than the previous model. However, the accuracy rate
and overall F1 score stays around the same ranged between 82% to 84%. It
is also noticed that the Precision rate decreased by 4%, which indicates the
new model classiﬁed slightly more false positives.
To prevent overﬁtting the model, we examined the performance of the
model by reversed the training dataset with the testing dataset. By training
the model with the new dataset and made predictions on the old dataset, we
can observed the sustainability of the modelâĂŹs performance in diﬀerent
environments. As shown in table 9, The model performs about the same as
the previous model. Reversing the train-test dataset gave us slightly better
results as all of the performance metrics improved slightly. The accuracy
rate increased by 3% as well as the overall F1 score. The persistence of the
performance has proved that the model could serve as a uniformed detection
classiﬁer that can make predictions in other environments with promising
results.
Table 9: Performance comparison of the new models.
Classiﬁers
ANN Indoors
ANN: New environment
ANN: New features
ANN: Reversed train-test
96.55
83.30
84.08
87.34
F1 score Accuracy Error Precision Recall
100.00
85.82
93.37
95.39
96.08
81.94
82.32
85.47
93.33
80.94
76.47
80.54
3.92
18.06
17.68
14.53
5.3.9. Video Delays
The adversaries might perform delay viewing attacks on the hidden cam-
era internet stream to counter the detection. Delay viewing attack is carried
out by the intentionally delay the internet stream for several seconds to dif-
ferentiate it from normal internet stream of a Wi-Fi camera. Addressing
the possibility of the delay viewing attack on the hidden Wi-Fi camera, we
compare and evaluate the performance of the old ANN model and the new
ANN model. The results of the performance of the old model is presented in
Figure 6.
Figure 6: Eﬀect of Delay Attack on Original Model
As shown in Figure 6, the old model did not perform well against the
delay viewing attack. The accuracy rate stays around 67% within 5 seconds of
delay then drops dramatically below 60% for longer delay. The precision rate
is always higher than the recall rate indicates that the model predicts more
false negatives than false positives. This has shown that the model was falsing
predicting hidden camera stream as other internet streams. The performance
of the model stays mediocre until the delay reached over 5 seconds. Recall
rate even drops below 40% if the delay is longer than 6 seconds. It has shown
that the old model did not have the ability to detect hidden cameras under
the delay viewing attack.
The performance of the new model under delay viewing attack is shown
in Figure 7. As shown from the ﬁgure, the new model performs better than
the old model while it maintained an accuracy rate around 83% within 5 sec-
onds of delay then slightly decreased to 70% for longer delay. The new model
performs opposite as the older model by having a higher recall rate than the
precision rate. It is showing that the model predicts more false positive than
false negative. The new model is more feasible than the older model since it
had less false negatives, indicates that it can predict more hidden cameras
rather labeled them as other internet streams. The recall rate maintained
higher than precision rate and was higher than 80% until delay reach around
7.8 seconds. It is showing that the model had the ability to predict suﬃ-
cient amount of true positives until the delay is longer than 8 seconds. The
performance of the model drops dramatically over 8 seconds of delay and
the accuracy rate maintained over 70% for 10 seconds delay. Although the
performance of the new model degrades, it still gave us promising results for
any delay attack shorter than 8 seconds. As a result, the new model served
as a better classiﬁer than the older model to counter delay viewing attack.
5.3.10. LSTM-based Approach
In order to achieve better predicting results, we implemented an LSTM
model. The LSTM model is a well-known artiﬁcial recurrent neural network
which predicts time series data. The selected LSTM model had 50 neurons
in the ﬁrst hidden layer, with 1 neuron in the output layer with the sigmoid
function. It also utilized an Adam optimizer and the selected batch size is set
to 48. A stepped function is applied after the output layer. A threshold of
0.00001 is applied within the stepped function. The LSTM model is trained
with the old dataset and make predictions based on the new dataset. The
performance of the LSTM model is shown in Table 10. As shown in the
table, the LSTM model performs well on predicting time-series data. The
accuracy rate had achieved 99.72% and the overall F1 score reached 99.76%.
Moreover, the model is able to eliminate all the false positives while the recall
rate achieved 100%. It shows that the model is perfectly ﬁt for detecting all
hidden cameras without mispredict any hidden camera stream.