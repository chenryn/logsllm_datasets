### 5.3.4. Machine Learning Classifiers

We analyzed the false positives generated by each of the different threshold measures and observed that all measures simultaneously produced a false positive only 24% of the time. Table 5 provides a detailed breakdown of these false positives. We hypothesized that the lack of agreement between the similarity measures could be leveraged to improve our results through machine learning. A majority vote system was not considered, as it would have only eliminated false positives in 56% of the samples.

To enhance the performance beyond the threshold classification method, we evaluated several standard classifiers. The best performance was achieved using a neural network. We conducted a grid search with 10-fold cross-validation, testing a total of 768 combinations of hyper-parameters. This process was performed separately for both the Wi-Fi camera detector and the mobile phone detector, resulting in very similar models. The selected model for the Wi-Fi camera detector used L-BFGS as the solver and the Logistic activation function, with three hidden layers, each containing 13 neurons. The mobile phone detector's model differed only in having 14 neurons per layer.

### 5.3.5. Best Classifiers

Based on the results from Sections 5.3.3 and 5.3.4, we selected the best threshold-based and machine-learning-based classifiers for the two detection models. The selected best classifiers are presented in Table 8 below.

**Table 8: The Selected Best Classifiers**

| Classifiers | F1 Score | Accuracy | Error | Precision | Recall |
|-------------|----------|----------|-------|-----------|--------|
| Wi-Fi Camera-Based Detection Model | | | | | |
| - Threshold-based: KLD | 88.643 | 96.551 | 12.834 | 84.384 | 93.355 |
| - Neural Network (Indoors) | 92.307 | 97.436 | 2.564 | 93.333 | 100.000 |
| - Neural Network (Outdoors) | 88.814 | 94.118 | 5.882 | 85.714 | 100.000 |
| Mobile Phone-Based Detection Model | | | | | |
| - Threshold-based: KLD | 88.814 | 96.550 | 12.546 | 81.846 | 93.333 |
| - Neural Network (Indoors) | 95.238 | 96.078 | 3.922 | 93.333 | 100.000 |
| - Neural Network (Outdoors) | 96.774 | 97.080 | 3.226 | 90.909 | 100.000 |

As shown in Table 8, neural network models outperformed threshold-based classifiers in terms of F1 score and accuracy, achieving rates above 94%. Additionally, both neural network models had a 100% recall rate. Metrics focusing more heavily on True Positives would likely result in even better scores.

### 5.3.6. Convergence Time

While the tests described in this paper were run on 60 seconds of observation, we also examined the convergence rate of detection. We randomly selected one spying camera device and 69 non-spying camera devices, analyzing the results at each time step. Figure 5 shows the averaged results over 40 trials. Generally, the spying camera is identified within 10 seconds, with the remaining time spent weeding out false positives. The F1 score exceeds 0.90 within 20 seconds.

### 5.3.7. Model Portability

In this portion of the evaluation, we examined the portability of the models between indoor and outdoor spaces. Figures 6 and 7 present a matrix summary of the results, showing the F1 scores for our models when the data is partitioned into Indoors, Outdoors, and Both, and then the model is trained and tested on samples from each set. As expected, the best results were achieved when the model was trained only with the class of data it would be used to test with. Training with outdoor data provided better results for non-outdoor testing than training with indoor data. In general, we conclude that it is best to use separate models for drastically different types of spaces, but even a combined model still provides valuable results.

### 5.3.8. Performance of the ANN

We further examined the performance of the selected model in a new environment. The best ANN model was trained with the old dataset and then made predictions on the new dataset. The results are shown in Table 9. The model's performance dropped, with the accuracy rate falling to 81.94% and the overall performance decreasing due to an increase in false positives and false negatives. Different environmental settings affected the magnitudes of changes in H.264 encoding, degrading the model's performance.

To boost the model's performance, we introduced new features into the ANN model, including Cramer distance, Energy distance, and Wasserstein distance. The performance of the new ANN model is also presented in Table 9. Compared to the previous model, the new model increased the recall rate to 93.37%, classifying more true positives. However, the accuracy rate and overall F1 score remained around 82% to 84%, with a 4% decrease in precision, indicating slightly more false positives.

To prevent overfitting, we reversed the training and testing datasets. By training the model with the new dataset and making predictions on the old dataset, we observed the sustainability of the model's performance in different environments. The model performed similarly to the previous model, with slight improvements in all performance metrics. The accuracy rate increased by 3%, and the overall F1 score improved, demonstrating the model's ability to make consistent predictions in various environments.

**Table 9: Performance Comparison of the New Models**

| Classifiers | F1 Score | Accuracy | Error | Precision | Recall |
|-------------|----------|----------|-------|-----------|--------|
| ANN (Indoors) | 96.55 | 100.00 | 3.92 | 93.33 | 96.08 |
| ANN (New Environment) | 83.30 | 85.82 | 18.06 | 80.94 | 76.47 |
| ANN (New Features) | 84.08 | 82.32 | 17.68 | 80.54 | 93.37 |
| ANN (Reversed Train-Test) | 87.34 | 85.47 | 14.53 | 95.39 | 95.39 |

### 5.3.9. Video Delays

Adversaries might perform delay viewing attacks on the hidden camera internet stream to counter detection. These attacks involve intentionally delaying the internet stream by several seconds to differentiate it from normal Wi-Fi camera streams. To address this, we compared and evaluated the performance of the old and new ANN models under delay viewing attacks. The results for the old model are presented in Figure 6.

**Figure 6: Effect of Delay Attack on Original Model**

The old model performed poorly against delay viewing attacks, with the accuracy rate dropping dramatically below 60% for delays longer than 5 seconds. The precision rate was always higher than the recall rate, indicating more false negatives than false positives. This suggests that the model incorrectly predicted hidden camera streams as other internet streams. The performance remained mediocre until the delay reached over 5 seconds, with the recall rate dropping below 40% for delays longer than 6 seconds.

The performance of the new model under delay viewing attacks is shown in Figure 7. The new model maintained an accuracy rate of around 83% for delays up to 5 seconds, decreasing to 70% for longer delays. Unlike the old model, the new model had a higher recall rate than the precision rate, indicating more false positives than false negatives. The new model was more effective, with a recall rate higher than 80% until the delay reached around 7.8 seconds. Although the performance degraded after 8 seconds of delay, the new model still provided promising results for delays shorter than 8 seconds, making it a better classifier for countering delay viewing attacks.

**Figure 7: Effect of Delay Attack on New Model**

### 5.3.10. LSTM-based Approach

To achieve better prediction results, we implemented an LSTM model, a well-known artificial recurrent neural network for predicting time series data. The selected LSTM model had 50 neurons in the first hidden layer, 1 neuron in the output layer with a sigmoid function, and utilized an Adam optimizer with a batch size of 48. A stepped function was applied after the output layer with a threshold of 0.00001. The LSTM model was trained with the old dataset and made predictions based on the new dataset. The performance of the LSTM model is shown in Table 10.

**Table 10: Performance of the LSTM Model**

| Classifiers | F1 Score | Accuracy | Error | Precision | Recall |
|-------------|----------|----------|-------|-----------|--------|
| LSTM Model | 99.76 | 99.72 | 0.00001 | 100.00 | 100.00 |

As shown in Table 10, the LSTM model performed exceptionally well on predicting time-series data, achieving an accuracy rate of 99.72% and an F1 score of 99.76%. The model eliminated all false positives while maintaining a 100% recall rate, indicating its perfect fit for detecting all hidden cameras without any mispredictions.