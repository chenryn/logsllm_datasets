## DuckDB 完整的PRAGMA, setting, 系统表, 系统视图, 内置函数, 内置类型 在哪里?        
### 作者      
digoal      
### 日期      
2022-09-01      
### 标签      
PostgreSQL , DuckDB , PRAGMA , setting , 系统表 , 系统视图 , 内置函数 , 内置类型   
----      
## 背景      
目前DuckDB的文档确实不太全面, 可能和文档管理有关系, PostgreSQL的文档直接在代码中, 文档视如代码, 所以相对来说PostgreSQL文档比较详细, 注释也比较详细.  
例如  
- DuckDB说它支持了infomation_schema和部分PostgreSQL的catalog, 然后不知道这个列表在哪里.  
- pragma的文档里面也只提及少部分pragma的用法  
DuckDB很多内容需要去代码里面看才能更多了解它的一些用法.    
- 1、查询所有参数设置.  
- 2、查询pragma支持的所有用法  
- 3、内置的系统表有哪些?   
- 4、内置的视图有哪些?  
- 5、默认内置函数  
- 6、默认内置类型  
例子  
```  
create table tbl (id int8, info text, crt_time timestamp, c1 int8);  
insert into tbl select generate_series, md5(random()::text), now()+(generate_series||' second')::interval, random()*10000 from generate_series(1,1000000);  
```  
1、查询所有参数设置.  
```  
D select * from duckdb_settings();  
```  
2、查询pragma支持的所有用法  
https://github.com/duckdb/duckdb/blob/master/src/function/pragma/pragma_queries.cpp  
```  
void PragmaQueries::RegisterFunction(BuiltinFunctions &set) {  
	set.AddFunction(PragmaFunction::PragmaCall("table_info", PragmaTableInfo, {LogicalType::VARCHAR}));  
	set.AddFunction(PragmaFunction::PragmaCall("storage_info", PragmaStorageInfo, {LogicalType::VARCHAR}));  
	set.AddFunction(PragmaFunction::PragmaStatement("show_tables", PragmaShowTables));  
	set.AddFunction(PragmaFunction::PragmaStatement("show_tables_expanded", PragmaShowTablesExpanded));  
	set.AddFunction(PragmaFunction::PragmaStatement("database_list", PragmaDatabaseList));  
	set.AddFunction(PragmaFunction::PragmaStatement("collations", PragmaCollations));  
	set.AddFunction(PragmaFunction::PragmaCall("show", PragmaShow, {LogicalType::VARCHAR}));  
	set.AddFunction(PragmaFunction::PragmaStatement("version", PragmaVersion));  
	set.AddFunction(PragmaFunction::PragmaStatement("database_size", PragmaDatabaseSize));  
	set.AddFunction(PragmaFunction::PragmaStatement("functions", PragmaFunctionsQuery));  
	set.AddFunction(PragmaFunction::PragmaCall("import_database", PragmaImportDatabase, {LogicalType::VARCHAR}));  
	set.AddFunction(PragmaFunction::PragmaStatement("all_profiling_output", PragmaAllProfiling));  
}  
```  
call和statement的用法差异如下, call需要带参数, statement不需要带参数:  
```  
D pragma show('tbl');  