问令牌access_token的API端点，这是在大多数互联网平台OAuth认证时
都需要提供的功能。Facebook为开发者提供JavaScript 
SDK作为接入方
式，接入时，开发者通过编码在后台创建跨域通信的代理iframe，再使
用window.postMessage() 收发令牌。
模拟攻击者在测试中发现，此链接中跳转地址xd_arbiter.php?v=42
的值可以被篡改，可以通过篡改来添加更多路径和参数，比如修改为
xd_arbiter/?v=42，而且xd_arbiter也是请求的白名单路径。通过这样的方
式，可以获取访问令牌的hash值。但若想获取可读写的访问令牌值，最
好是借助于postMessage()将消息传送出来。而恰好在
staticxx.facebook.com域名下，存在了提供上述代码功能的JavaScript文
件，于是模拟攻击者利用了这个链接构造出登录的URL。原链接如下：
构造出来的登录链接格式如下所示（其中124024574287414是
instagram的app_id）：
最后，Amol Baikar定制了Facebook JavaScript SDK，其关键代码如
下：
运行之后，可以在受害者不知情的情况下获取access_token。漏洞
在上报后，很快得到了Facebook的响应，并修复了漏洞。
3.1.3 OAuth漏洞启示
下面再来回顾一下整个攻击过程，如图3-2所示。
●图3-2 OAuth绕过攻击过程
在此次攻击成功的路径上，可修改xd_arbiter是第一个关键点，提
供代理劫持框架的7SWBAvHenEn.js是第二个关键点。有了第一个关键
点，攻击者才能伪造可执行路径，将7SWBAvHenEn.js加入进来。
7SWBAvHenEn.js文件在攻击中充当了攻击武器，本来有第一个关键点
攻击者即可找到攻击方向，但炮弹精准度不足，7SWBAvHenEn.js文件
所提供的功能加速了攻击者完成攻击的速度。同时，在网媒报道中，也
提到了“即使用户更改了Facebook账号密码，令牌仍然有效”，这是导致
账号权限被接管的主要原因。
作为防守方，如果仅仅使用URL白名单来防御往往是不够的。尤其
是复杂的应用程序中，在面对跨域通信，PC端、手机端、移动平板等
不同类型设备的多端接入提供多个接入点的情况下。而且还要考虑不同
浏览器、同一浏览器不同版本的复杂情况下，即使使用X-Frame-Options
来防止跨域但也要考虑其兼容性问题。通过这个案例，也给开发人员提
了个醒。在做某个程序设计时，在实现功能的前提下，尽可能遵循简单
原则，参考标准的协议实现流程。对线上环境中不使用的文件，尽快清
除。
3.2 PayPal委托授权漏洞
在漏洞赏金平台上，高赏金的漏洞每年都有。2019年73月，国外漏
洞赏金平台HackerOne上报告了一个PayPal用户API相关的漏洞。
3.2.1 委托授权漏洞基本信息
委托授权漏洞与用户的委托授权场景相关，平台截图与漏洞描述如
图3-3所示。
●图3-3 HackerOne平台PayPal漏洞记录
关于这个漏洞的细节，在这里带领读者一起近距离地分析看看。
漏洞类型：API1-失效的对象级授权。
漏洞难度：高。
报告日期：2019-7-30。
信息来源：https://hackerone.com/reports/415081。
漏洞发生在paypal.com站点，在PayPal的业务中，其账号可分以下
两类。
■ 企业账号（Business Account），也叫商业账号，具有PayPal高级
账号的所有功能权限，主要面向企业管理用户。
■ 子账号（Secondary Account），也叫辅助账号，主要是方便企业
账号管理下属员工，方便设置不同的管理功能，比如只能查看余额、只
能退款、只能提现等。
企业账号通过委托授权子账号来管理账号上的资金，比如企业内的
出纳和会计，在PayPal平台对应于不同的子账号，具备不同权限和功
能，出纳可以转账和提现，会计可以查询和稽核。反之，则无法操作。
3.2.2 委托授权漏洞利用过程
从上文的背景描述可以了解到，在PayPal的在线电子支付系统中，
存在企业账号A下可以设置子账号A1的情况。在此案例中攻击者通过
对“查看子账号”功能进行分析，得出URL为
https://www.paypal.com/businessmanage/users/1657893467745278998的参
数id值1657893467745278998表示子账号所绑定的企业账号。当用户操
作此子账号查看操作时，产生了一个HTTP PUT请求，报文内容如下所
示：
通过测试验证，上述PUT请求中第一个id字段值，即
1657893467745278998可以替换为任意随机数值；第二个id字段值，即
5994224506代表了其子账号id号。
而这第二个id字段只是简单的数值类型，其值是可以枚举的，它的
数值是可递增或递减的。攻击者只需要篡改id值，比如修改为
53994224507，再次访问/businessmanage/users时，即可以查看到企业账
号下关联的另一子账号的信息。
因为权限控制存在设计缺陷，攻击者只需按照上述操作方式，把相
应子账号的密码进行修改，就可以实现完美的账号接管，进行任意未授
权的转账操作。
此漏洞上报后，PayPal官方及时地进行了修复，并给予赏金猎人了
10500美元的奖励。
3.2.3 委托授权漏洞启示
现在再来回顾一下整个攻击过程，如图3-4所示。
●图3-4 委托授权攻击过程
从过程中可以看出，整个攻击链上有关键性的两步。
■ 子账号id值的可枚举，导致从当前企业账号可以切换到被攻击对
象的企业账号下的子账号。
■ 权限的扩大，从查看被攻击对象的企业账号下的子账号的功能，
权限扩展到子账号密码修改功能。
在OWASP API安全Top 10中，这属于典型的失效的对象级授权问
题。作为系统开发者，除了要增强id值的随机性（防止简单的数字值被
枚举）外，在对象的权限访问控制上，也要校验企业账号与子账号的绑
定关系，这种绑定关系的校验，不仅是信息查看、账号绑定之类的功
能，还要包含密码修改等相关操作。
对于此类场景下相关联性的校验和身份鉴别，在金融业务中非常常
见。比如对于用户身份的鉴别，当用户在ATM机或网银转账时，每次
转账都需要重新输入转账密码，这就是一种保护性设计。而不像其他电
子商务网站中的业务办理，登录后就不再需要输入密码。网银的每一笔
转账都需要密码，是因为密码的保管具有私密性，只有银行账号的所有
者才知道密码，每次验证密码的过程其实是对用户身份的一次确认过
程。比如在银行系统中，同一个自然人账号下会有多个银行账户，比如
借记卡账户、储蓄卡账户，当某人在网银自己给自己账户转账时，需要
校验自然人的身份是否一致，这也是使用关联关系来验证的一种保护性
设计。
3.3 API KEY泄露漏洞
因API KEY泄露导致的API安全问题，在业界非常普遍，下面这个
漏洞就是因API KEY保护不当而被泄露导致个人信息泄露。
3.3.1 API KEY泄露漏洞基本信息
2010年以来，个人信息泄露问题越来越成为互联网关注的重点。甚
至，有专家学者认为，信息泄露问题将可能成为压垮互联网发展的最后
一根稻草，这也从另一侧面反映出当前个人信息泄露的严重程度。在这
个案例中，将给读者讲解密钥泄露如何导致个人信息泄露。
漏洞类型：API2-失效的用户身份认证。
漏洞难度：中。
报告日期：2020-2-5。
信息来源：https://medium.com/@spade.com/api-secret-key-leakage-
leads-to-disclosure-of-employees-information-5ca4ce17e1ce。
因为隐私问题，漏洞赏金猎人Ace 
Candelario在公开资料中将被攻
击企业化名为redacted.com，在子域名收集的过程中意外发现了某个域
名对应的主页面上，main.js文件包含API 
KEY，通过此密钥信息连接
API接入点，从而获取了企业的员工信息。信息泄露过程如图3-5所示。
●图3-5 信息泄露过程示意图
3.3.2 API KEY泄露漏洞利用过程
在收集到的子域名中，Ace 
Candelario发现了一个叫
smh.internal.redacted.com的子域名，其功能是从Google重定向以对员工
登录进行身份验证。用户若想登录该页面，则需要一个有效的员工电子
邮件账号，类似于PI:EMAIL。
在查看页面源代码后，他发现了一个JavaScript文件main.js，让他感
到惊喜的是JavaScript文件并没有混淆压缩，仅仅通过检查特定的关键
字，如公司名称redacted、域名（隐藏域或内部子域名）、文件扩展名
或明显的API路径、'secret'、'access[_|-]'、'access[k|t]'、'api[_|-]'、'[-
|_]key'、'https:'、'http:'等，就找到了Base64编码的身份验证凭据，即HR
系统API KEY。其中main.js内容如图3-6所示。
●图3-6 main.js文件内容示意图
通过API文档的阅读，快速验证JavaScript文件中泄漏的API KEY是
否仍在工作。并通过curl命令，可以轻松地从API接口获取员工列表。另
外，还可以查看、删除、更新所有的员工信息。
当然，漏洞提交后也很快通过官方的审核，并获取了2000美元的奖
励。
3.3.3 API KEY泄露漏洞启示
现在再来回顾一下整个攻击过程，如图3-7所示。
●图3-7 API KEY管理不当导致个人信息泄露攻击过程分析
从漏洞过程分析中可以看出，在整个模拟攻击中，通过main.js文件
获取API KEY成了至关重要的一步。拥有了API KEY之后，才能通过
API接口获取员工信息。
从攻击者的角度看，如何创建自己的密钥关键字、通过关键字找到
密钥、正确地读懂API文档、及时验证密钥的可用性，这些都是攻击者
能力积累的体现。从防御者的角度看，将密钥存放在JavaScript文件中、
采用Base64编码、JavaScript文件未混淆压缩都是败笔，方便了攻击者快
速地获取密钥信息。
3.4 Hadoop管理API漏洞
Hadoop作为大数据技术的基础组件，在很多互联网应用中被广泛使
用，其中管理API的安全性问题，最近这几年逐渐被安全人员所关注。
3.4.1 Hadoop管理API漏洞基本信息
随着虚拟货币市场的疯狂发展，挖矿病毒已经成为网络不法分子最
为频繁的攻击方式之一。因挖矿病毒对算力的渴求，GPU服务器、大数
据应用成了挖矿病毒者眼里的宠儿。2018年6月，腾讯云鼎实验室公开
了一例针对Hadoop Yarn REST API挖矿病毒的详细报告，这里重点从
API安全的角度，一起来分析这个漏洞。
漏洞类型：API5-失效的功能级授权。
漏洞难度：高。
报告日期：2018-6-4。
信息来源：https://cloud.tencent.com/developer/article/1142503。
Hadoop Yarn大数据组件的Cluster Applications API对外提供了一系
列的接口，其中就包含new 
application和submit 
application两个API入