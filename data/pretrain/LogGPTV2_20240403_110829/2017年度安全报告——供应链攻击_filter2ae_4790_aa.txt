# 2017年度安全报告——供应链攻击
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
> XshellGhost事件  
>  Ccleaner恶意代码攻击事件  
>  OSX/Proton后门（Elmedia Player软件）攻击事件  
>  Chrome插件User－Agent Switcher供应链攻击事件  
>  全国多省爆发大规模软件升级劫持攻击  
>  Wordpress Keylogger事件
## 供应链攻击年终报告
传统的供应链概念是指商品到达消费者手中之前各相关者的连接或业务的衔接，从采购原材料开始，制成中间产品以及最终产品，最后由销售网络把产品送到消费者手中的一个整体的供应链结构。
近年来我们观察到了大量基于软硬件供应链的攻击案例，比如针对Xshell源代码污染的攻击机理是攻击者直接修改了产品源代码并植入特洛伊木马；针对苹果公司的集成开发工具Xcode的攻击，则是通过影响编译环境间接攻击了产出的软件产品。这些攻击案例最终影响了数十万甚至上亿的软件产品用户，并可以造成比如盗取用户隐私、植入木马、盗取数字资产等危害。接下来我们将从划分出来各环节的角度，举例分析这些针对供应链攻击的重大安全事件。
下面是小编收集到的今年部分供应链攻击事件(排名不分先后):
## 开发工具污染
### XshellGhost事件
2017年8月，非常流行的远程终端管理软件 Xshell
被发现植入了后门代码，导致大量使用此款工具的用户泄露主机相关的敏感信息。同时，近期大量的使用软件捆绑进行传播的黑产活动也被揭露出来，从影响面来看这些恶意活动的力度颇为惊人，这类来源于供应链并最终造成巨大危害的安全事件其实并不少见，而我们所感知的可能只是冰山一角而已。
针对开发工具进行攻击，影响最为广泛的莫过于XcodeGhost（Xcode非官方版本恶意代码污染事件），值得一提的是早在30多年前的1984年，UNIX创造者之一Ken
Thompson在其ACM图灵奖的获奖演讲中发表了叫做Reflections on Trusting
Trust（反思对信任的信任）的演讲。他分三步描述了如何构造一个非常难以被发现的编译器后门，后来被称为 the Ken Thompson
Hack（KTH），这或许是已知最早的针对软件开发工具的攻击设想。而最近的XcodeGhost最多只能算是KTH的一个简化版本，没有试图隐藏自己，修改的不是编译器本身，而是Xcode附带的框架库。
随后，经安全研究人员分析证实NetSarang公司在7月18日发布的nssock2.dll模块中被植入了恶意代码，直接影响到使用该系列软件的用户。
技术分析  
受害者在安装，启动了带有后门的客户端后，nssock2.dll模块中的攻击代码会以Shellcode形式在后台被调用解密执行。
该Shellcode分为多加密块，基于插件模型架构，各模块之间负责不同功能且协调工作、相互调用，实际分析后发现中间存在大量对抗设计，隐秘性较强，该后门还包含了如下几个特点：
  * 无自启动项，无独立落地文件
  * 存在花指令和部分加密函数设计
  * 多种通信协议的远程控制
  * 主动发送受害主机基本信息
  * 通过特定的DGA(域名生成算法)产生的DNS域名传送至远程命令控制服务器
  * C&C服务器可动态下发任意代码至用户机器执行
后门的整体流程大致分为以下9个步骤：  
1.Xshell启动后会加载动态链接库nssock2.dll。  
2.在DllMain执行前由全局对象构造启动引子代码。  
3.引子代码主要功能就是解密shellcode1并跳转到入口处执行。  
4.shellcode1(loader)加载shellcode2。  
5.shellcode2中将搜集用户信息构造DNS
TXT包传送至根据年份和月份生成的DGA域名，同时接收解密shellcode3的key并写入注册表，一旦注册表中查询到对应的值随即解密shellcode3并执行。  
6.Shellcode3(loader)主要负责加载Root模块并跳转到入口处执行。  
7.Root被加载后接着分别加载Plugin，Config，Install，Online和DNS模块。  
8.Install模块会创建svchost.exe并把Root模块注入，实现持久化运行。  
9.Online模块会根据其配置初始化网络相关资源，向指定服务地址发送信息，并等待云端动态下发代码进行下一步攻击。
Shellcode1(Loader)  
该后门是基于插件模式开发的，Root模块提供了插件的基本框架，各插件之间会相互调用，而在各个插件加载时都会多次用到同一个loader，loader中的代码中加入了化指令进行干扰，具体实现细节为如下8个步骤:
Shellcode2  
主要作用就是将搜集的数据传出，并接收服务端传来的key解密shellcode3，执行后门的核心部分，Shellcode2实现细节如下：  
1.Shellcode2首先创建工作线程。  
2.工作线程首先获取VolumeSerialNumber值并且异或0xD592FC92 这个值用来创建注册表项。  
3.创建注册表项，位置为HKEY_CURRENT_USER\SOFTWARE\\-[0-9](步骤2生成的数值)。  
4.通过RegQueryValueExA查询步骤3创建注册表中Data键的值。  
5.如果注册表Data已经存放key会直接用key解密shellcode3并执行。  
6.不存在key则继续执行下面的循环，当不满足时间条件时循环每隔10秒获取一次时间， 满足时间条件时进入主流程执行步骤7。
7.主流程首先根据当前时间生成DGA域名 ，当前8月时间为nylalobghyhirgh.com  
部分年份-月份生成的域名对应关系如下：
此外，通过对12个域名分析NS解析情况后发现， 7月开始被注册解析到qhoster.net的NS
Server上，所以猜测这个恶意代码事件至少是从7月开始的。  
8.接着根据获取的当前网络、hostName 、DomainName 、UserNmae用特定算法生成字符串构造DNS_TXT数据包并向8.8.8.8 |
8.8.4.4 | 4.2.2.1 | 4.2.2.2 | 当前时间DGA域名 发送，然后等待服务器返回数据（解密Shellcode3的key）。  
Key1 0xC9BED351  
key2 0xA85DA1C9
9.当接收到服务器的数据包后设置注册表Data数据，然后解密Shellcode3，Shellcode3依然是一个loader,该loader加载Root模块，其loader功能同上述的细节相同。
(1)、Module_Root  
Root模块是后门的关键部分，为其它模块提供了基本框架和互相调用的API，其中会加载五个模块分别为：Plugin、Online、Config、Install、DNS。  
将自身函数表地址共享给其他模块使用，主要这些API主要涉及到一些模块加载、加解密等功能。
(2)、Module_Install  
Install负责把RootModule的Code注入到傀儡进程中和Online模块的初始化。
(3)、Module_Config  
Config模块主要负责配置信息的存储和读取功能，当模块初始化函数传入的参数为100时，会保存一些默认配置信息到磁盘中，同时Config模块也提供了将配置信息发送到CC服务器的接口。
(4)、Module_Plugin  
Plugin模块为后门提供插件管理功能，包括插件的加载、卸载、添加、删除操作，管理功能完成后会通过调用Online的0x24项函数完成回调，向服务器返回操作结果。模块的辅助功能为其它插件提供注册表操作。  
(5)、Module_DNS  
DNS模块的主要功能是使用DNS协议处理CC通信过程。DNS数据包有三种类型，分别代表上线，数据和结束。
(6)、Module_Online  
Online模块是本次攻击的网络通信管理模块。该模块会读取配置文件，收集系统信息，并且能够调用DNS，HTTP，SSL等模块通信，不过在代码中暂时只有前面所述的DNS模块。
> 2017年9月18日，Piriform 官方发布安全公告，公告称旗下的CCleaner version 5.33.6162和CCleaner Cloud
> version 1.07.3191中的32位应用程序被篡改并植入了恶意代码。  
>
> 这是继Xshell被植入后门代码事件后，又一起严重的软件供应链攻击活动，此次事件极有可能是攻击者入侵开发人员机器后污染开发环境中的CRT静态库函数造成的，导致的后果为在该开发环境中开发的程序都有可能被自动植入恶意代码。
### Ccleaner恶意代码攻击事件
技术分析
基本框架图：
DNS请求态势：
PayLoad流程图:
恶意代码加载部分  
在编译器增加的初始化代码中的__scrt_get_dyn_tls_init_callback函数中增加了解密shellcode的调用。
解密出来的shellcode是一个loader，会加载一个被抹去了DOS头的dll创建线程执行恶意行为。
信息上传及Payload下载部分  
获取C&C服务器地址216.126.225.148。  
伪造host：speccy.piriform.com发送编码后的信息。  
如果没有接收到响应，还会尝试连接DGA域名，并将IP地址存储在SOFTWARE\Piriform\Agomo\NID中。DGA算法经过还原后如下：
DGA域名列表如下：