把Poe的可视警
示合并到消乌器
示系统
otherSeqsMap.put (nameToShow, checkboxState) ;
1istVector,add (naneToShow) 2
5
IncomingList,getListData (listVector) :
} catch (Exception ex)(ex.printStackTrace())
)// close while
任务3
MDE
1// close run
实施据收端代码
private void playPoke ()(
去读网络上的数
Toolkit,getDefaultToolkit () .beep () 
// close inner class
目前位置
179
---
## Page 216
深入到代码之中
任务
我们不再在HeadFirst Java之中了。下面是BeatBox客户端的一段代
码，你的任务是把这些任务贴对应到实施“传送Poke”的那段代码。
运登代码部在
Beeflox je中.
// ... more BeatBox.java code above this
这置的代码舍迷行在
boolean[] checkboxState = nul1]
String nameToShow = nu11:
这是内部费（3nxe1
新的线程中
Object obj = nu11;
class），该费以服务群上
接收数据，
public void run() (
这是原婚代码
tryf
while((obj=in.read0bject ()) 1= nu11) (
它说取从服务器
任务3
MDE
System.out.println(αgot an object from server*);
伴送来的数摄。
实施接收端代码
System,out.print1n(obj.getClass());
去读网络上的数
String nameToShov = (String) obj;
据
checkboxState - (boolean[1) in.readobject () ;
任务2
cug
1f (nameToShow,equals (POKE_START_SEQUENCE))(
增加为检叠Poke
7playPoke () :
命今和创建消息
如果得到POKE_START_
的支持。
SEQUENCE，我们夏当
1
Poke声，并用警示文
otherSeqsMap.put (naneToShov, checkboxState) :
.5
本警编消岛
1istVector.add (nameToShow);
1// close while
inconingList,setListData (listVector) ;
任务4
B30
}// close run
1catch (Exception ex)(ex.printStackTrace())
把可视警示合料
到显示系统中。
 private void playPoke()(
这置是新的playPoke)
Toolkit.getDefaultToolkit () .beep () :
任务！
5
方法，统在只厦出
sseto
MDE
哗声，如果你提高
当接收到Poke消
其我性，增加MP3的
Poe声支持
总后.
发出可听
的警示声（不要
须人）
5
180
第6章
---
## Page 217
版本控制
没有愚囊的问题
BeatBox是一个程序，首次
中。（实际的字丹事的健在BeatBox
为什么我们要浪费时间阅读全部代码。
讨论是在书名叫《HeadFirstJava》
java文件中，银可以从http://www.
中.它有一个HusicServer本端
headfirstlabs.com/books/hfsd/.上 F &),
答：
软件开发技术涵益与项目相
(Backend)和基于Java
Swing的客户
当其他的BeatBox实例看到POKE
关的每一件事情，从项目的组织到结
端（Java的图形化工具组）、客户端
START_SEQUENCE通过时，它们用
计开发全部代码所需要的时间，之前，
利用JavasoundAPI去产生声音序列
们可视的警示消患替代它，并且，收到
我们谈到项目的计划和实施部分，这
(Sound sequences），而你能通过主页
它的用户实际上从未看到代码序列。
时，我们开始有点接近代码并该到设
上的检费方块（Checkbox）对其进行
计。现在，我们需要进一步向前发展，
控制，当你输入一条消息并单去“发
问：
执行线程与Runnable是做什
谈到你能够使用的代码本身的一些工
送”时，你的消息和BeatBox的设置
么的？
具和技术。款件开发不仅是优先短排
被通到连换在MusicServer.上的其他
序和开发时间的估计：我们还是要编
BeatBox的备份。扣果你单去接收消
写良好的、可工作的和可靠的代码。
患，你就能听到别刚发运的新的序列。
抵取数据，以便它能显示进进来的
信息。然西，如果在网络上没有任何
那么，POKE_START_
信息，它可能因等特数据而“卡”在
不能确定有些代码是做什么的，我要
SEQUENCE是怎么图事？
那里。这就说明屏革不能重画，用
做什么？
户不能输人新的，要发送的信息，为
使用情节要求我们将一条
了将这两件事情分开，BcatBox采用
答：
没美系，最好能理解代码在
Poke消患发通到连接在Mu sc
线程（threads）.它创建线程去处
做什么工作，没有必要美心Java的一
Server上的其他BeatBox客户端。
理网络访问，然后使用主要的线程
强特别的细节，重要的是要在具体的
般而言，当一条消患被发送，显示给
去处理GUI的工作。可运行的接口
献件开发过程中，得到如何处理和思
用户看的只是一事字。通过一事独
(Runnable
：interface）是Java把某些应
考代码的思路。我们在以后谈到的工
特的字将事（应该没有人会有意输人
该运行另外一个线程上的代码也衰起
具和技术是有意义的，不论你是否懂
这样的字符事），在原有的BeatBox.上
未的机制。
Java线任(thread)
面，增加Poke的功能，利用此字科
问：
事，我们能通如其他的BeatBox客户
我没有看过《Head First
“Poke”被发进，该序列被存储
Java》，整个BeatBox是关于什么的？
在POKE_START_SEQUNECE常数之
Bob在他负责的部分也取得了很大的进展。此时此刻，你能想到
任何其他的你需要担心的事情吗？
目前位置
181
---
## Page 218
完成工作
现在着手GUI的工作....
我们需要另外一段代码，以便将这使用情节一起完成。我们需要为GUI增加一
个按钮，该GUI能使用户发送Poke消息。以下是执行该项任务的代码：
任务5
为gu增加按钮.以
便传送Poke序到给
//以下代码来自BeatBox.java，
其他的BeatBox实例
//
in the buildGUI () method
.5
JButton sendIt = new JButton ("sendIt");
sendIt,addActionListener (new MySendListener ()) ;
buttonBox,add (sendIt) ;
首先，我们需要为Poe功程，到
JButton sendPoke = new JButton (*Send Poke") ;
建一个新的描留，
sendPoke ,addActionListener (new MyPokeListener ()) ;
这时我们设置一个债听
buttonBox.add (sendPoke) ; 冬
以便当有贸标掌击
时.
我们有反应。
userMessage = new JTextField() ;
最后，将这个接留增加到放置其他
buttonBox,add (userMessage) ;
始往的方框中。
//以下是我们需要增加的代码，也是在BeatBox.java中
public class MyPokeListener implements ActionListener {
public void actionPerformed(ActionEvent a)(
在此。我们创建一个布尔队列
//在此，我们建立一个空的状态队列
存放我们的状态，我们可以光它
boolean[] checkboxState =new boolean[255];
收到Poke命今时，含惠略它们。
们的佳设置为级，国为当插收端
try{
out,writeObject (POKE_START_SEQUENCE) ;
out,writeObject (checkboxState) ;
}catch (Exception ex){
System.out.println("Failed to poke!") ;
这置是巧好所在：为了伟送Poke，我们地POKE_START_
SEQUENCE和我们队判传送给服务器，服务器将中
继我们的序列时具他的客户端：并且客户继金向用
户厦出母呼的声会，这是因为前面我们城写的代场，
182
惠9
---
## Page 219
版本控制
做一个快速测试.·
现在客户端和服务端都已实施完成，现在是确保开发的程序能工作的时
候了。没有软件在没有测试就可以交付的，所以
首先编译和启动MusicServer。
mkdir bin
MasicSeet将
hfsd>
听通提并国备次
器
打印一行文字。
6in景之中。
把类放在
2
然后启动新的BeatBox一我们将需要两个例程运行，这样，我
我们这置用不同名字，这样
们能测试Poke。
我们如遥哪个是哪个。
bin headfirst.sd.chapter6.BeatBox PokeReceiver
hfsd>java
-cp bin headfirst.sd.chapter6.BeatBox PokeSender
3
在命名为PokeSender例程上，单击“Send Poke”按钮，发送一个Poke。
这是我们新的
Poke编链
dual
sendit
SendPoke
这置是我们的
Poke提收沸例
程
太棒了！你修改后的代码在工作。我们把这些代
这置是我们的警示消息。
保运样)
码复制到demo服务器上，剩下的就是Bob把他的东
西合并进来。夜深了，该休息了。
目前位置
183
---
## Page 220
合并变更
Bob也做了相同的工作......
Bob完成了与他的使用情节相关的任务，并且做了快速测试。他编写的代码是可以
运行的，所以，他把他的代码复制到服务器上。为了做最后的构建，他把他编写
的代码与我们编写的代码合并了，并进行了编译和重新测试了图片的传送。每件
事情看上去都不错。明天的demo应该没有问题..
这置是B6的BeatBex版本
传送圈片的检超巴经究成了
一里任务被完
把使用情节移站
传送一个Poke给
他用户
传运片哈其他
B0#对他的代码很调象。
代码复制到der
服务器上，在构建完成后
图此，他把他的
就等特明天了
没有患囊的问题
在我们编译代码前，我们为何要创建bin目录？
了什么事？
答：
我们在下一章将更详细地读论这一问题，但是
一般来讲，把端译这的代码和源代码分开是一个好的想
表示为核查方枢（checkboxes）构成的降列，我们并不真
法，这样的语、当你做修改时、清理和构建的工作都会
正美心它们的设置是什么，因为在接收方，我们并不使
简单挥多。
“bin”这个名学并没有什么特别之处，只是
用它们，然为，我们还需要发送一叠数据，这样，已有
为了方使，它是“binaries”的缩写，即编译代码。
的代码就可以工作。我们采用Java的对象序列化（object
serialization）机制，把核查方块构成的障列和秘密的消
问：
等等，Bob刚才把代码合并到demo服务器上
息作为数据流去传送，秘密消息会慰发另外一端的警示。
吗？
在接收端，我们阻止秘密消患和核查方块构成的降列，所
有的序列化和去序列化（deserialization）都由Java处理，
184
第6章
---
## Page 221
版本控制
向客户演示新的BeatBox
我们准备开始。代码已经写好了，测试工作也完成了，并且都
被复制到demo服务器上了，Bob完成了最后一项构建，因此，
我们把客户召集起来，准备让大家伙高兴高兴。
这重是我们的接部，并目
“SendPictane”抽钮是来6
Bob的代码，
Send Poke
Send Picture
_SECRET_POKE_SEQUENCE|
个
退个不码卷
我没有听到任何警示，而显
SECRET_POKE_SEQUENCE是什飞？
客户不费了，不码了。
没有什飞感觉响。
到底哪儿错了？
在前几页，我们的代码都是可以工作的。那
么，错在什么地方了？更重要的是，在以后
你采用什么不同的方式能保证不再发生相类
想送一点.
“做更多的测
似的事情？
次
“试”，你如何在一母绵就
防止请问题的发生？
目前位置
185
---