User: Ours is a python shop. We have different python packages developed inhouse and will be deployed onto customers' environments(machines).
This is how our development and release cycle happens.
Once developers complete "testing" of a package, a distribution(egg file) of the package is prepared and pushed to a central archiving place. WHen we want to deploy our software to Customers, the same distributions(egg files) will be downloaded and installed in their environment.
Assuming the "testing" happens on multiple operating systems(to check the compatibility of the API across platforms), what is the best practice to prepare distributions and be pushed to the central archiving place.
Is it best to have operating system specific eggs on the archiving server(like, samplepkg-1.0.0.win32.egg and samplepkg-1.0.0.linux.egg ? Not sure how they can be prepared in this way using setuptools. ) Or Have a single egg because API remains same across platforms ? Any other practice which is followed by the community ?
Assistant: Platform-specific eggs are only intended for distributing packages containing C code; otherwise the egg files themselves are platform-independent and you only need to distribute one, platform-independent egg.
If you are using automated installation tools or pkg_resources' runtime APIs for finding libraries and plugins, you can actually just dump all the eggs in a single directory, and the installation tool or runtime API will pick which egg to install or import from.
tl;dr version: the way setuptools builds eggs is the way they should be distributed; if you try to make a cross-platform egg into a platform-dependent one or vice versa, you're likely to experience some pain.  ;-)