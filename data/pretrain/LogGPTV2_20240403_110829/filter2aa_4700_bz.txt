    eVar8 = FID_conflict___dupenv_s(&local_30,(size_t *)0x0,(wchar_t *)&local_20);
    if (eVar8 == 0) {
      if (local_30 == (wchar_t *)0x0) {
        local_2c = 0xb;
      }
      else {
        pwVar9 = local_30;
        do {
          wVar2 = *pwVar9;
          pwVar9 = pwVar9 + 1;
        } while (wVar2 != L'\0');
        local_2c = ((int)((int)pwVar9 - (int)(local_30 + 1)) >> 1) + 0xc;
      }
      _Src = *param_1;
      local_28 = 2;
      while (_Src != (wint_t *)0x0) {
        pwVar1 = _Src + 1;
        do {
          wVar3 = *_Src;
          _Src = _Src + 1;
        } while (wVar3 != 0);
        param_1 = param_1 + 1;
        local_28 = local_28 + ((int)((int)_Src - (int)pwVar1) >> 1) + 1;
        _Src = *param_1;
      }
      _Memory = FUN_0040e1a6();
      if (_Memory != (undefined8 *)0x0) {
        sVar4 = *(short *)_Memory;
        puVar14 = _Memory;
        while (sVar4 != 0x3d) {
          _Dst = puVar14;
          do {
            sVar4 = *(short *)_Dst;
            _Dst = (undefined8 *)((int)_Dst + 2);
          } while (sVar4 != 0);
          puVar14 = (undefined8 *)
                    ((int)puVar14 + ((int)((int)_Dst - (int)((int)puVar14 + 2)) >> 1) * 2 + 2);
          sVar4 = *(short *)puVar14;
        }
        local_38 = &local_40;
        local_40 = puVar14;
        pwVar10 = operator__((_lambda_dd1c267fe327b8eb9e23cfd134fb4af8_ *)&local_38);
        _Src = *local_34;
        ppwVar15 = local_34;
        local_38 = (undefined8 **)((int)(pwVar10 + -(int)puVar14) >> 1);
        while (_Src != (wint_t *)0x0) {
          puVar13 = &local_20;
          local_3c = &local_1e;
          do {
            uVar5 = *puVar13;
            puVar13 = puVar13 + 1;
          } while (uVar5 != 0);
          iVar11 = FUN_004135d8(_Src,&local_20,(int)((int)puVar13 - (int)local_3c) >> 1);
          if (iVar11 == 0) {
            local_21 = 1;
            goto LAB_00412cda;
          }
          ppwVar15 = ppwVar15 + 1;
          _Src = *ppwVar15;
        }
        local_21 = 0;
        local_28 = local_2c + local_28;
LAB_00412cda:
        local_28 = (int)(undefined8 **)((int)(pwVar10 + -(int)puVar14) >> 1) + local_28;
        puVar14 = (undefined8 *)__calloc_base(local_28,2);
        if (puVar14 == (undefined8 *)0x0) {
          ___acrt_errno_map_os_error(0xe);
          puVar12 = (undefined4 *)FUN_00407f40();
          *puVar12 = 0xc;
        }
        else {
          _Dst = puVar14;
          if (local_38 != (undefined8 **)0x0) {
            uVar7 = (int)local_38 * 2;
            copy_buffer(puVar14,local_40,uVar7);
            local_28 = local_28 - (int)local_38;
            _Dst = (undefined8 *)(uVar7 + (int)puVar14);
          }
          _Src = *local_34;
          while (_Src != (wint_t *)0x0) {
            eVar8 = _wcscpy_s((wchar_t *)_Dst,local_28,(wchar_t *)_Src);
            if (eVar8 != 0) goto LAB_00412e1a;
            _Src = *local_34;
            local_3c = _Src + 1;
            do {
              wVar3 = *_Src;
              _Src = _Src + 1;
            } while (wVar3 != 0);
            iVar11 = ((int)((int)_Src - (int)local_3c) >> 1) + 1;
            local_28 = local_28 - iVar11;
            _Dst = (undefined8 *)((int)_Dst + iVar11 * 2);
            local_34 = local_34 + 1;
            _Src = *local_34;
          }
          if (local_21 == 0) {
            eVar8 = _wcscpy_s((wchar_t *)_Dst,local_2c,(wchar_t *)&local_20);
            if (((eVar8 != 0) || (eVar8 = _wcscat_s((wchar_t *)_Dst,local_2c,L"="), eVar8 != 0)) ||
               ((local_30 != (wchar_t *)0x0 &&
                (eVar8 = _wcscat_s((wchar_t *)_Dst,local_2c,local_30), eVar8 != 0))))
            goto LAB_00412e1a;
            _Dst = (undefined8 *)((int)_Dst + local_2c * 2);
          }
          if (_Dst == puVar14) {
            *(undefined2 *)_Dst = 0;
            _Dst = (undefined8 *)((int)_Dst + 2);
          }
          *(undefined2 *)_Dst = 0;
          *(undefined8 **)param_2 = puVar14;
        }
        FID_conflict__free((void *)0x0);
      }
      FID_conflict__free(_Memory);
    }
    else {
      if (eVar8 == 0x16) {
LAB_00412e1a:
        uVar19 = 0;
        uVar18 = 0;
        uVar17 = 0;
        uVar16 = 0;
        FUN_00407e93();
        pcVar6 = (code *)swi(3);
        (*pcVar6)(uVar16,uVar17,uVar18,uVar19);
        return;
      }
      FUN_00407f40();
    }
    FID_conflict__free(local_30);
  }
  FUN_00401f78();
  return;
}
// Library Function - Single Match
// Name: ??R@@QBEPA_WXZ
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
// public: wchar_t * __thiscall ::operator()(void)const 
wchar_t * __thiscall operator__(_lambda_dd1c267fe327b8eb9e23cfd134fb4af8_ *this)
{
  short sVar1;
  short *psVar2;
  short *psVar3;
  psVar2 = **(short ***)this;
  sVar1 = *psVar2;
  while ((((sVar1 == 0x3d && (psVar2[1] != 0)) && (psVar2[2] == 0x3a)) && (psVar2[3] == 0x3d))) {
    psVar3 = psVar2 + 4;
    do {
      sVar1 = *psVar3;
      psVar3 = psVar3 + 1;
    } while (sVar1 != 0);
    psVar2 = psVar2 + ((int)((int)psVar3 - (int)(psVar2 + 5)) >> 1) + 5;
    sVar1 = *psVar2;
  }
  return (wchar_t *)psVar2;
}
// Library Function - Multiple Matches With Different Base Names
// Name: ___acrt_pack_narrow_command_line_and_environment,
// ___acrt_pack_wide_command_line_and_environment
// Library: Visual Studio 2015 Release
undefined4 __cdecl
FID_conflict____acrt_pack_narrow_command_line_and_environment
          (wchar_t **param_1,wint_t **param_2,wchar_t **param_3,void **param_4)
{
  int iVar1;
  undefined4 uVar2;
  void *local_c;
  wchar_t *local_8;
  uVar2 = 0;
  local_8 = (wchar_t *)0x0;
  iVar1 = FUN_00412a47(param_1,&local_8);
  if (iVar1 == 0) {
    local_c = (void *)0x0;
    iVar1 = FUN_00412b37(param_2,&local_c);
    if (iVar1 == 0) {
      *param_3 = local_8;
      *param_4 = local_c;
      FID_conflict__free((void *)0x0);
      FID_conflict__free((void *)0x0);
    }
    else {
      FID_conflict__free(local_c);
      FID_conflict__free(local_8);
      uVar2 = 0xffffffff;
    }
  }
  else {
    FID_conflict__free(local_8);
    uVar2 = 0xffffffff;
  }
  return uVar2;
}
uint __cdecl FUN_00413016(short *param_1,short *param_2,uint param_3)
{
  short *psVar1;
  short sVar2;
  undefined4 *puVar3;
  short *psVar4;
  if (param_2 == (short *)0x0) {
    puVar3 = (undefined4 *)FUN_00407f40();
    *puVar3 = 0x16;
    return 0;
  }
  if (param_3 != 0) {
    *param_2 = 0;
  }
  if (param_3 > 1) * param_3;
        pcVar7 = local_108;
        pcVar5 = pcVar8;
        _guard_check_icall();
        iVar3 = (*(code *)param_4)(pcVar7,pcVar5);
        if (0 < iVar3) {
          swap(local_108,pcVar8,param_3);
        }
        pcVar7 = local_108;
        pcVar5 = pcVar4;
        _guard_check_icall();
        iVar3 = (*(code *)param_4)(pcVar7,pcVar5);
        if (0 < iVar3) {
          swap(local_108,pcVar4,param_3);
        }
        pcVar7 = pcVar8;
        pcVar5 = pcVar4;
        _guard_check_icall();
        iVar3 = (*(code *)param_4)(pcVar7,pcVar5);
        local_114 = local_108;
        local_fc = pcVar4;
        if (0 < iVar3) {
          swap(pcVar8,pcVar4,param_3);
          local_114 = local_108;
          local_fc = pcVar4;
        }
LAB_00413290:
        if (local_114 < pcVar8) {
          do {
            local_114 = local_114 + param_3;
            if (pcVar8 <= local_114) goto LAB_004132d1;
            pcVar7 = local_114;
            pcVar5 = pcVar8;
            _guard_check_icall();
            iVar3 = (*(code *)param_4)(pcVar7,pcVar5);
          } while (iVar3 < 1);
          pcVar7 = local_fc;
          if (pcVar8 <= local_114) goto LAB_004132d1;
        }
        else {
LAB_004132d1:
          do {
            local_114 = local_114 + param_3;
            pcVar7 = local_fc;
            if (pcVar4 < local_114) break;
            pcVar7 = local_114;
            pcVar5 = pcVar8;
            _guard_check_icall();
            iVar3 = (*(code *)param_4)(pcVar7,pcVar5);
            pcVar7 = local_fc;
          } while (iVar3 < 1);
        }
        do {
          local_fc = pcVar7;
          pcVar7 = local_fc + -param_3;
          if (pcVar7 <= pcVar8) break;
          pcVar5 = pcVar7;
          pcVar9 = pcVar8;
          _guard_check_icall();
          iVar3 = (*(code *)param_4)(pcVar5,pcVar9);
        } while (0 < iVar3);
        if (local_114 <= pcVar7) {
          if (local_114 != pcVar7) {
            pcVar5 = pcVar7;
            uVar6 = param_3;
            do {
              pcVar9 = pcVar5 + 1;
              cVar1 = pcVar9[(int)(local_114 + -(int)pcVar7 + -1)];
              pcVar9[(int)(local_114 + -(int)pcVar7 + -1)] = *pcVar5;
              *pcVar5 = cVar1;
              uVar6 = uVar6 - 1;
              pcVar5 = pcVar9;
            } while (uVar6 != 0);
          }
          local_fc = pcVar7;
          if (pcVar8 == pcVar7) {
            pcVar8 = local_114;
            local_fc = pcVar7;
          }
          goto LAB_00413290;
        }
        if (pcVar8 < local_fc) {
          do {
            local_fc = local_fc + -param_3;
            if (local_fc <= pcVar8) goto LAB_004133f1;
            pcVar7 = local_fc;
            pcVar5 = pcVar8;
            _guard_check_icall();