Finally a note of warning should accompany any Sybil
prevention scheme: it is not the goal of SybilInfer (or any
other such scheme) to ensure that all adversary nodes are
ﬁltered out of the network. The job of SybilInfer is to
ensure that a certain fraction of existing adversary nodes
cannot signiﬁcantly increase its control of the system by
introducing ‘fake’ Sybil identities. As it is illustrated by
the examples on anonymous communications and stor-
age, system speciﬁc mechanisms are still crucial to ensure
that a minority of adversary entities cannot compromise
any security properties. SybilInfer can only ensure that
this minority remains a minority and cannot artiﬁcially in-
crease its share of the network.
Sybil defence schemes are also bound to contain false-
positives, namely honest nodes labeled as Sybils. For this
reason other mechanisms need to be in place to ensure that
those users can seek a remedy to the automatic classiﬁca-
tion they suffered from the system, potentially by making
some additional effort. Proofs-of-work, social introduc-
tion services, or even payment targeting those users could
be a way of ensuring SybilInfer is not turned into an auto-
mated social exclusion mechanism.
6 Conclusion
We presented SybilInfer, an algorithm aimed at detect-
ing Sybil attacks against peer-to-peer networks or open
services, and label which nodes are honest and which are
dishonest. Its applicability and performance in this task is
an order of magnitude better than previous systems mak-
ing similar assumptions, like SybilGuard and SybilLimit,
even though it requires nodes to know a substantial part of
the social structure within which honest nodes are embed-
ded. SybilInfer illustrates how robust Sybil defences can
be bootstrapped from distributed trust judgements, instead
of a centralised identity scheme. This is a key enabler for
secure peer-to-peer architectures as well as collaborative
web 2.0 applications.
SybilInfer is also signiﬁcant due to the use of machine
learning techniques and their careful application to a secu-
rity problem. Cross disciplinary designs are a challenge,
and applying probabilistic techniques to system defence
should not be at the expense of strength of protection, and
strategy-proof designs. Our ability to demonstrate that the
underlying mechanisms behind SybilInfer is not suscepti-
ble to gaming by an adversary arranging its Sybil nodes in
a particular topology is, in this aspect, a very import part
of the SybilInfer security design.
Yet machine learning techniques that take explicitly
into account noise and incomplete information, as the one
contained in the social graphs, are key to building secu-
rity systems that degrade well when theoretical guarantees
are not exactly matching a messy reality. As security in-
creasingly becomes a “people” problem, it is likely that
approaches that treat user statements beyond just black
and white and make explicit use of probabilistic reasoning
and statements as their outputs will become increasingly
important in building safe systems.
Acknowledgements. This work was performed while
Prateek Mittal was an intern at Microsoft Research, Cam-
bridge, UK. The authors would like to thank Carmela
Troncoso, Emilia K¨asper, Chris Lesniewski-Laas, Nikita
Borisov and Steven Murdoch for their helpful comments
on the research and draft manuscript. Our shepherd, Ta-
dayoshi Kohno, and ISOC NDSS 2009 reviewers pro-
vided valuable feedback to improve this work. Barry Law-
son was very helpful with the technical preparation of the
ﬁnal manuscript.
References
[1] U. A. Acar. Self-adjusting computation. PhD thesis, Pitts-
burgh, PA, USA, 2005. Co-Chair-Guy Blelloch and Co-
Chair-Robert Harper.
[2] B. Awerbuch. Optimal distributed algorithms for mini-
mum weight spanning tree, counting, leader election and
In STOC, pages
related problems (detailed summary).
230–240. ACM, 1987.
[3] M. Castro, P. Druschel, A. Ganesh, A. Rowstron, and D. S.
Wallach. Secure routing for structured peer-to-peer over-
lay networks. In OSDI ’02: Proceedings of the 5th sym-
posium on Operating systems design and implementation,
pages 299–314, New York, NY, USA, 2002. ACM.
[4] F. Dabek. A cooperative ﬁle system. Master’s thesis, MIT,
September 2001.
[5] G. Danezis, R. Dingledine, and N. Mathewson. Mixmin-
ion: Design of a Type III Anonymous Remailer Protocol.
In Proceedings of the 2003 IEEE Symposium on Security
and Privacy, pages 2–15, May 2003.
[6] G. Danezis, C. Lesniewski-Laas, M. F. Kaashoek, and
In ESORICS
R. Anderson. Sybil-resistant dht routing.
2005: Proceedings of the European Symp. Research in
Computer Security, pages 305–318, 2005.
[7] R. Dingledine, N. Mathewson, and P. Syverson. Tor: the
In SSYM’04: Proceed-
second-generation onion router.
ings of the 13th conference on USENIX Security Sympo-
sium, pages 21–21, Berkeley, CA, USA, 2004. USENIX
Association.
[8] J. R. Douceur. The sybil attack.
In IPTPS ’01: Re-
vised Papers from the First International Workshop on
Peer-to-Peer Systems, pages 251–260, London, UK, 2002.
Springer-Verlag.
[9] L. Goodman. Snowball sampling. Annals of Mathematical
Statistics, 32:148–170.
[10] W. K. Hastings. Monte carlo sampling methods us-
ing markov chains and their applications. Biometrika,
57(1):97–109, April 1970.
[11] R. Kannan, S. Vempala, and A. Vetta. On clusterings:
Good, bad and spectral. J. ACM, 51(3):497–515, 2004.
[12] L. Lamport, R. Shostak, and M. Pease. The byzantine
generals problem. ACM Trans. Program. Lang. Syst.,
4(3):382–401, 1982.
[13] C. Lesniewski-Laas. A sybil-proof one-hop dht. In Pro-
ceedings of the Workshop on Social Network Systems,
Glasgow, Scotland, April 2008.
[14] R. Levien and A. Aiken. Attack-resistant trust metrics
for public key certiﬁcation. In SSYM’98: Proceedings of
the 7th conference on USENIX Security Symposium, pages
18–18, Berkeley, CA, USA, 1998. USENIX Association.
[15] D. J. C. MacKay. Information Theory, Inference & Learn-
ing Algorithms. Cambridge University Press, New York,
NY, USA, 2002.
[16] S. Milgram. The small world problem. 2:60–67, 1967.
[17] U. M¨oller, L. Cottrell, P. Palfrader, and L. Sassaman. Mix-
master Protocol — Version 2. IETF Internet Draft, July
2003.
[18] S. Nagaraja. Anonymity in the wild: Mixes on unstruc-
tured networks. In N. Borisov and P. Golle, editors, Pro-
ceedings of the Seventh Workshop on Privacy Enhancing
Technologies (PET 2007), Ottawa, Canada, June 2007.
Springer.
[19] D. J. Phillips. Defending the boundaries: Identifying and
countering threats in a usenet newsgroup. Inf. Soc., 12(1),
1996.
[20] D. Randall. Rapidly mixing markov chains with appli-
cations in computer science and physics. Computing in
Science and Engineering, 8(2):30–41, 2006.
[21] M. Ripeanu, I. Foster, and A. Iamnitchi. Mapping the
Gnutella Network: Properties of Large-Scale Peer-to-Peer
Systems and Implications for System Design. IEEE Inter-
net Computing Journal, 6(1), Aug. 2002.
[22] Secondlife: secondlife.com.
[23] Sophos. Sophos facebook id probe shows 41% of users
happy to reveal all to potential identity thieves, August 14
2007.
[24] I. Stoica, R. Morris, D. Liben-Nowell, D. R. Karger, M. F.
Kaashoek, F. Dabek, and H. Balakrishnan. Chord: a scal-
able peer-to-peer lookup protocol for internet applications.
IEEE/ACM Trans. Netw., 11(1):17–32, 2003.
[25] L. von Ahn, M. Blum, N. Hopper, and J. Langford.
Captcha: Using hard ai problems for security. In In Pro-
ceedings of EUROCRYPT 03, Lecture Notes in Computer
Science, 2003.
[26] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao. Sybil-
limit: A near-optimal social network defense against sybil
In IEEE Symposium on Security and Privacy,
attacks.
pages 3–17, 2008.
[27] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman.
Sybilguard: defending against sybil attacks via social net-
works. SIGCOMM Comput. Commun. Rev., 36(4):267–
278, 2006.
[28] del.icio.us: delicious.com.
[29] Facebook: www.facebook.com.
[30] Orkut: www.orkut.com.
[31] Wikipedia: www.wikipedia.org.
A An overview of SybilGuard and Sybil-
Limit
A.1 SybilGuard
In SybilGuard, each node ﬁrst obtains
n independent
samples from the set of honest nodes of size n. Since, for
√
√
a given honest network size n, the mixing time of the so-
cial network is O(log n), it sufﬁces to use a long random
n · log n to gather those samples.
walk of length w =
To prevent active attacks biasing the samples, SybilGuard
performs the random walk over constrained random route.
Random routes require each node to use a pre-computed
random permutation as a one to one mapping from incom-
ing edges to outgoing edges giving them the following im-
portant properties:
• Convergence: Two random routes entering an honest
node along the same edge will always exit along the
same edge.
• Back-traceability: The outgoing edge of a random
route uniquely determines the incoming edge at an
honest node.
Since the size of the set of honest nodes, n is unknown,
SybilGuard requires an estimation technique to ﬁgure the
needed length of the random route.
The validation criterion for accepting a node as hon-
est in SybilGuard is that there should be an intersection
between the random route of the veriﬁer node and the sus-
It can be shown using the birthday paradox
pect node.
n samples
that if two honest nodes are able to obtain
from the honest region, then their samples will have an
non empty intersection with high probability, and will thus
be able to validate each other.
√
There are cases when the random route of an honest
node ends up within the Sybil region, leading to a “bad”
sample, and the possibility of accepting Sybil nodes as
honest. Thus, SybilGuard is only able to provide bounds
on the number of Sybil identities if such an event is rare,
which translates into an assumption that the maximum
√
number of attack edges is g = o(
log n). To further reduce
the effects of random routes entering the Sybil region (bad
samples), nodes in SybilGuard can perform random routes
along all their edges and validate a node only if a major-
ity of these random routes have an intersection with the
random routes of the suspect.
n
SybilGuard’s security really depends on the number of
attack edges in the system, connecting honest and dishon-
est users. To intersect a veriﬁer’s random route, a sybil
node’s random route must traverse an attack edge (say A).
Due to the convergence property, the random routes of all
sybil nodes traversing A will intersect the veriﬁer’s ran-
dom route at the same node and along the same edge. All
such nodes form an equivalence group from the veriﬁer’s
perspective. Thus, the number of sybil groups is bounded
by the number of attack edges, i.e. g. Moreover, due to
the back-traceability property, there can be at most w dis-
tinct routes that intersect the veriﬁers route at a particular
node and a particular edge. Thus, there is a bound on the
size of the equivalence groups. To sum up, SybilGuard
divides the accepted nodes into equivalence groups, with
the guarantee that there are at most g sybil groups whose
sybil identities.
Assuming there was a way to estimate all parame-
ter required by SybilLimit, our proposal, SybilInfer, pro-
vides an order of magnitude better guarantees. Further-
more these guarantees relate to the number of (real) dis-
honest entities in the system, unlike SybilLimit that de-
pends on number of attack edges. As noted, in com-
parison with SybilGuard, SybilInfer does not assume any
threshold on the number of colluding entities, while Sybil-
Limit can bound the number of sybil identities only when
g = o( n
log n).
maximum size is w.
Unlike SybilInfer, nodes in SybilGuard do not require
knowledge of the complete network topology. On the
other hand, the bounds provided by SybilGuard are quite
weak:
in a million node topology, SybilGuard accepts
about 2000 Sybil identities per attack edge!
(Attack
edges are trust relations between an honest and a dishon-
est node.) Since the bounds provided by SybilGuard de-
pend on the number of attack edges, high degree nodes
would be attractive targets for the attackers. To use the
same example, in a million node topology, the compro-
mise of about 3 high degree nodes with about 100 attack
edges each enables the adversary to control more than 1/3
of all identities in the system, and thus prevent honest
nodes from reaching byzantine consensus. In contrast, the
bounds provided by SybilInfer depend on the number of
colluding entities in the social network, and not on the
number of attack edges. Lastly, SybilGuard is only able
√
log n),
to provide bounds on Sybil identities when g = o(
while SybilInfer is not bound by any such threshold on the
number of colluding entities.
n
A.2 SybilLimit
In contrast to SybilGuard’s methodology of using a
√
single instance of a very long random route, SybilLimit
employs multiple instances (
m) of short random walks
(O(log n)) to sample nodes from the honest set, where m
denotes the number of edges amongst the honest nodes. It
can be shown that as long as g = o( n
log n), then with high
probability, a short random walk is likely to stay within
the set of honest nodes, i.e., the probability of a sample
being “bad” is small. The validation criterion for accept-
ing a node as honest in SybilLimit is that there should be
an intersection amongst the last edge (i.e. the tail) of the
random routes of the veriﬁer and the suspect. Similar to
SybilGuard, it can be shown using the birthday paradox
that two honest nodes will validate each other with high
probability. Note that if a random route enters the sybil
region, then the malicious tail of that route could adver-
tise intersections with many sybil identities. To counter
this attack, a further “balance” condition is imposed that
ensures that a particular intersection cannot validate arbi-
trary number of identities. Sybil identities can induce a
total of g · w · m intersections at honest tails. Thus, for ev-
ery attack edge, SybilLimit accepts at most w = O(log n)
sybil identities.
A key shortcoming of SybilLimit is its reliance on the
value of w = O(log n), the length of the short random
walk, without any mechanisms to estimate it. Yet the cor-
rect estimation of this parameter is essential to calculate
the security bounds of the scheme. Underestimating it is
leads to an increase of false positives, while overestimat-
ing it will result in the random walks ending in the Sybil
region, allowing the adversary to fake intersections with