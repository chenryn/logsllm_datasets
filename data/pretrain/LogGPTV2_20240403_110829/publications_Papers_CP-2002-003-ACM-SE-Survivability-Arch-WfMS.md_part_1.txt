39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
Survivability Architecture for Workflow Management Systems
Jorge Cardoso, Zongwei Luo, John Miller, Amit Sheth and Krys Kochut
LSDIS Lab, Computer Science Department
University of Georgia
Athens, GA 30602, USA
PI:EMAIL,{luo, amit,jam,kochut}@cs.uga.edu
Abstract- The survivability of critical infrastructure systems has the security area, 4,299 security-related incidents on the
been gaining increasing concern from the industry. The Internet have been reported to CERT between 1989 and
survivability research area addresses the issue of infrastructure 1995 [14].
systems that continues to provide pre-established service levels to
Categorized as an information system, workflow
users in the face of disorders and react to changes in the
management systems (WfMS) are used in a broad range of
surrounding environment. Workflow management systems need to
distinct applications. Applications can be more oriented to
be survivable since they are used to support critical and sensitive
support or enhance existing processes, to increase
business processes. They require a high level of dependability and
should not allow process instances to be interrupted or aborted due competitive advantage, to reduce costs, and also to manage
to failures. Moreover, due to their sensitivity, business process critical infrastructure systems. The applications that are
instances have to allow dynamic changes in order to reflect any managed by the WfMS have a vital significance to the
modification in the environment. In this paper we describe the organizations that govern them. In most cases disruptions of
work on increasing the survivability of the METEOR workflow the services provided by the WfMS will incapacitate the
management system. We define an architecture describing the
completion of the running process instances. Additionally
main technologies that enable survivability in WfMS. Using the
since the business logic is captured by the workflow system
developed architecture we describe two modules that have been
and may not be available in any other form, the organization
implemented: dynamic change and adaptation module.
faces the possibility to completely stop the activities
represented by the damaged business processes. It is
therefore clear that mechanisms must enable the reliability
1 Introduction
and decrease the risk of disruption that will lead to system
columns breakdown and organization malfunction.
The dependence of infrastructure systems on fragile
In order to cope with the disruptions that critical
information systems puts organizations at risk of disastrous
systems face new research areas need to be explored. The
failure. Threats that may compromise a system may be
survivability research area, in the context of information
originated from several sources; human error, application
systems, is one of them and it has started to concern an
fault, security problems, network failure, natural
increasing number of people. This is primarily because our
catastrophe, etc. In reaction of such disruptions, diagnostic,
society is becoming more and more dependent on computer
corrective procedures and reconfiguration must be taken to
systems. The survivability keyword describes a class of
ensure that the infrastructures continue to meet the original
systems that is able to "complete its mission in a timely
requirements. Disruptions that can occur are well illustrated
manner, even if significant portions are incapacitated by
by many incidents that have already been reported. Just in
attack or accident" [2]. Ellison et al. [7] refines the initial
ACM COPYRIGHT NOTICE. Copyright © 2001 by the Association for Computing
Machinery, Inc. Permission to make digital or hard copies of part or all of this work for description requiring a survivable system to be able to
personal or classroom use is granted without fee provided that copies are not made or protect against and react to any kind of attack, failure or
distributed for profit or commercial advantage and that copies bear this notice and the full
citation on the first page. Copyrights for components of this work owned by others than ACM accident that, alone or in combination, threatens the ability
must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post
on servers, or to redistribute to lists, requires prior specific permission and/or a fee. Request of a system to fulfill its mission in a timely fashion. Based
permissions from Publications Dept, ACM Inc., fax +1 (212) 869-0481, or on this definition we describe workflow survivability as the
permissions@acm.org.
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
capability of a workflow management system to maintain a applications requiring high scalability and robustness. It is
pre-established acceptable running mode and behavior after fully distributed and scalable. Since we have used Java as
the occurrence of unexpected errors, accidents, failures or the language for its development the system is portable
attacks, in a timely manner and to allow the adaptation and across platforms. It supports interoperability standards such
evolution of the supported processes in response to its as JFLOW [15] and SWAP [29]. The use of open standards
surrounding environment. In our definition we include the such as CORBA makes it a good candidate to interoperate
need for adaptation and evolution since business processes with existing systems in disparate distributed and
and their environment are dynamic by nature. In order to heterogeneous computing environments. With the recently
respond to the emergent needs expressed by today’s added modules it also includes dynamic changes at the
systems, the workflow management systems must follow instance level and an exception handling mechanism that is
the new requirements and allow the survivability of the part of the adaptation module. The concepts used in
entire system. WEBWork architecture are very similar to the one used in
In this paper we describe a survivability architecture for ORBWork system. WEBWork implementation relies solely
WfMS. The developed architecture is based on the diverse on Web technology as the infrastructure for the enactment
functional modules that compose a WfMS. Therefore we system. It is more suitable for static business processes that
start by functionally dividing the several components involve limited data exchange. The main goal is based on
involved in the runtime environment of a workflow the easy development of workflow application, installation,
management system in four categories: instance level, use and maintenance.
schema level, workflow level and infrastructure level. For
each functional level we briefly mention some solutions that
may be implemented to increase and guarantee 3 Survivability architecture for
survivability. Finally we present two survivability units
workflow management systems
implemented for the METEOR WfMS. The first module
allows the specification of dynamic changes to running
As we have mentioned previously the survivability of
instance of workflow schemas, which is a fundamental
systems is a complex issue. And it is even more delicate in
feature to allow adaptation and evolution. The second
distributed systems because of the existence of
module, an adaptation module, allows the handling of
dependability problems that are not frequently encountered
exception generated during the execution of workflow
in more traditional centralized systems. To develop
instances based on knowledge acquired about past
successful survivability solutions for systems it is necessary
experiences.
to have a clear understanding and precise global vision of
their architecture. Survivability purposes impact critical
early decisions in system development, it is both cost-
2 METEOR - Workflow Management effective and efficient to conduct survivability analyses at
System the architecture level, before substantial resources have been
committed to development [3][16].
A Workflow Management System (WfMS) is a system or
set of tools that completely defines, manages and executes
3.1 Four level architecture for WfMS
processes schema (“workflows”) through the execution of
software whose order of execution is driven by a computer
Depending on the type of problem that may affect the
representation of the workflow logic [12]. The idea behind
behavior of a workflow system, different strategies can be
the introduction of a WfMS in an organization consists in
used to restore its correct activity. In [5] a division and
mapping processes that were executed manually into a
classification of sources of failures in workflow systems is
workflow scheme that has a binary representation that will
made. The classification identifies two categories of
be executed and supervised by a computerized system. Such
failures: basic and application failures. Basic failures
systems clearly give a competitive advantage to an
correspond to failures of the WfMS or of its underlying
organization, allowing re-engineering practices and
infrastructure, such as hardware failures, network failures,
streamlining, control and automation of existing processes.
or failures of the DBMS supporting the WfMS. Application
In this context, at the LSDIS Lab and with collaboration
failures are related with malfunctions of instances invoked
with the Naval Research Laboratory, we have developed the
by the WfMS. This classification is not sufficient, and needs
METEOR workflow management model and system.
to be expanded in order to satisfy the survivability
METEOR’s architecture includes design, monitor, workflow
requirements. We classify architecturally failures in
repository, and the enactment system. Due to different needs
workflow management systems in four layers (Figure 1):
in organizations we have developed two enactment service:
instance level, schema level, workflow level and
ORBWork [22] and WEBWork [7]. ORBWork is a CORBA
infrastructure level. In each of the layers we can identify a
based system oriented to support mission-critical enterprise
distinct classes of problems that a workflow system may
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
encounter and that may jeopardize its survivability. This As the name suggests the schema level regroups the
functional division gives four main architectural areas that workflow schema definitions. A workflow schema is
need to be addressed. Each one has a specific class of business process representation that is suitable to be
problems that need to be handled properly. interpreted by a WfMS. A workflow schema is the static
view of a workflow instance. Workflow schemas are
BBB
EEEvvvooollluuutttiiiooonnn
AAA NNN111 EEE NNN222 FFF DDDyyynnnaaammmiiiccc
CCChhhaaannngggeee
CCC DDD AAAdddaaappptttaaatttiiiooonnn
IInnssttaannccee LLeevveell
SSccaallaabbiilliittyy WWoorrkkffllooww sscchheemmaass yyyyttttiiiilllliiiibbbbaaaavvvviiiivvvvrrrruuuuSSSS
SScchheemmaa LLeevveell
MMoobbiilliittyy
WWffMMSS ccoommppoonneennttss
FFaauulltt--ttoolleerraanntt
WWoorrkkffllooww LLeevveell
RReeccoovveerryy
CCOORRBBAA sseerrvveerr,, ccoommmmuunniiccaattiioonnss,,
OOSS,, HHaarrddwwaarree,, eettcc..
SSeeccuurriittyy
IInnffrraassttrruuccttuurree LLeevveell
Figure 1- Survivability architecture for Workflow Management Systems
generally stored in a repository and subsequently used by
the WfMS. At this level we need to guarantee that the
Instance level
existing schema exhibit a valid structure according to the
At the instance level layer we find all the issues that are
organizational context. Furthermore, if an organization
closely related to instances or application execution. In this
adopts mechanisms that allow the evolution or adaptation of
layer, failures may occur when the design of a workflow
schemas, we need to verify the correctness of the generated
schema did not anticipate a possible error related to the
schemas under the current environment.
execution of a workflow task. For example, a workflow
instance is running correctly when a specific task is unable
to complete properly. This may be due to the inability to Workflow level
connect to a resource (e.g. DBMS) because of an invalid At the workflow level we find a layer that represents the
address or port number, insufficiency of requested resources modules that compose a workflow management system.
(e.g. disk space or memory) or unauthorized access to a Those workflow modules, depending in the workflow
resource (e.g. ftp server). This anomalous situation is system, will typically include the enactment module, the
captured, suitably represented and delivered to be handle by monitor and repository. In this layer, failures may occur
the survivability module. Several possible actions may be when any of the modules is unable to maintain an
taken to ensure that the system still continues in a stable and acceptable behavior. For example, the workflow server
acceptable state: skip the faulty task, retry the task managing task a, task b and task c entered an invalid state
realization, abort current faulty instance, start another where no more useful processing is done regarding task a.
workflow instance, request user involvement, dynamically This may be due, for example, to a buffer overflow in the
reconfigure the workflow or raise and handle an exception. manager of task a. In this situation we may possibly restart
task manager a, abort instances involving task a,
dynamically reconfigure the instances to exclude task a, or
Schema level
request a user involvement.
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
Infrastructure level
The infrastructure level regroups all the elements that
compose the underlying infrastructure that supports the
WfMS. It includes CORBA servers, operating systems,
communication protocols, hardware, etc. A malfunctioning
of one of those components may reveal to be quite complex
to recover from. For example, the underlying operating
system, where a workflow scheduler was running, suddenly
ceases its activity due to a fault in the physical memory.
This type of situation is the most serious one since it
requires dealing; not only with a problem that happen at the
infrastructure level, but also with the recovery of the
workflow scheduler that has crashed, that is an workflow
level error, and also with the recovery of all the instances
that were running, an instance level problem.
3.2 Survivability components
Figure 2 - Survivability architecture (adaptation and
Survivability is a multidisciplinary research area. In the evolution) at the instance level
architecture proposed we have identified seven main areas
that need a special attention: evolution, adaptation,
scalability, mobility [31], fault-tolerance [1][26][11],
recovery [8] and security [25][28]. We believe that all this 3.2.1 Dynamic changes
domains need to explored to archive survivable systems. In
addition, when dealing with WfMS, we need to consider the Traditional WfMS are adequate to support business
above domains for each layer of a WfMS. processes with a defined structure and with no need for ad
In this paper we restrict our study to adaptation at the hoc deviations or dynamic extensions at run-time [8]. But,
instance layer, describing the work done in this domain. recently there has been an increasing demand in developing
Two major issues have been addressed in the context of WfMS with dynamic capabilities, with a special emphasis to
survivability (Figure 2): dynamic change and adaptation. dynamic changes at the workflow instance level. This makes
The dynamic change interface allows the modification of sense since there are in reality very few business processes
running workflow instances. This interface directly creates a that are static (i.e. without a need to change their business
necessary and indispensable basic building block to the practices over time). As workflow processes are
support of adaptation and evolution at the instance level. We instantiated, changes in the environment or previous
also provide a user interface to the dynamic change interface activities may invalidate the current workflow instances,
allowing an administrator to manually modify workflow requiring adaptation or evolution. It is therefore required to
instances in execution. Supporting dynamic changes continuously repair or improve the execution of a workflow
significantly increases the flexibility and robustness for a process [2]. A good example of the need of dynamic
workflow management system to cope with all kind of reconfiguration can be found in [13]. Additionally, long
unplanned events during the execution of the business running heterogeneous autonomous distributed applications,
process. At the adaptation level we have implemented a like ORBWork, require support for dynamic reconfiguration
sophisticated exception handling mechanism that allows the since machines fail, services are moved or withdrawn and
system to adapt, automatically or via human involvement, in user requirements change. In such an environment, it is
response to changes in the environment [18]. essential that the structure of applications can be modified to
reflect such changes [27]. Therefore one of the objectives of
dynamism consists in allow the structural change, both
control and data flow, of instances at run-time without
interfering with the other instances not implicated in the
modification and without loss of run-time performance.
In ORBWork system we have implemented a layer that
permits the realization of dynamic change of instances in a
consistent manner [6]. The implemented module guarantee
that all consistency constraints that have been ensured prior
to a dynamic change are also ensured after the workflow
instances have been modified [24].
39th Annual ACM Southeast Conference, Athens, Georgia, USA, March 16-17, 2001.
Classification of dynamic changes
Before implementing the dynamic change extensions to the
ORBWork system we made a classification of different
types of changes that can be applied to a workflow instance Dynamic Change Status
(Table 1). We classify the different types of changes in two AND to OR Join Change Implemented
main categories: primitive change and composite change.
OR to AND Join Change Implemented
Primitive changes are composed of “atomic” changes
Split Change Implemented
that can only be applied to process definition totally or not
applied at all (e.g., adding a synchronous transition between Addition of an AND Transition Implemented
two tasks). Primitive changes can be further divided into Addition of an OR Transition Implemented
immediate changes and incremental changes. Immediate
Deletion of a Transition Implemented
changes can be introduced in one step without losing the
Data Object Transfer Addition Implemented
correctness and consistency of the workflow enactment
system. Incremental changes, on the other hand, deal with Data Object Transfer Deletion Implemented
situations where we cannot apply the changes to a particular Parameter Mapping Change Implemented
instance in a one step procedure. For example, if a set of
Insertion of a Task Implemented
instances are waiting for the completion of a task t, and we
dynamically change t specifications, the waiting instances