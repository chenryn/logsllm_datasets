title:Statistical Similarity of Critical Infrastructure Network Traffic
Based on Nearest Neighbor Distances
author:Jeong-Han Yun and
Yoonho Hwang and
Woomyo Lee and
Hee-Kap Ahn and
Sin-Kyu Kim
Statistical Similarity of Critical
Infrastructure Network Traﬃc Based
on Nearest Neighbor Distances
Jeong-Han Yun1(B), Yoonho Hwang2, Woomyo Lee1, Hee-Kap Ahn2,
and Sin-Kyu Kim1
1 The Aﬃliated Institute of ETRI, Daejeon, Republic of Korea
{dolgam,wmlee,skkim}@nsr.re.kr
2 Department of Computer Science and Engineering, POSTECH,
Pohang, Republic of Korea
{cypher,heekap}@postech.ac.kr
Abstract. Industrial control systems (ICSs) operate a variety of critical
infrastructures such as waterworks and power plants using cyber physical
systems (CPSs). Abnormal or malicious behavior in these critical infras-
tructures can pose a serious threat to society. ICS networks tend to be
conﬁgured such that speciﬁc tasks are performed repeatedly. Further, for
a speciﬁc task, the resulting pattern in the ICS network traﬃc does not
vary signiﬁcantly. As a result, most traﬃc patterns that are caused by
tasks that are normally performed in a speciﬁc ICS have already occurred
in the past, unless the ICS is performing a completely new task. In such
environments, anomaly-based intrusion detection system (IDS) can be
helpful in the detection of abnormal or malicious behaviors. An anomaly-
based IDS learns a statistical model of the normal activities of an ICS.
We use the nearest-neighbor search (NNS) to learn patterns caused by
normal activities of an ICS and identify anomalies. Our method learns
the normal behavior in the overall traﬃc pattern based on the number
of network packets transmitted and received along pairs of devices over
a certain time interval. The method uses a geometric noise model with
lognormal distribution to model the randomness on ICS network traﬃc
and learns solutions through cross-validation on random samples. We
present a fast algorithm, along with its theoretical time complexity anal-
ysis, in order to apply our method in real-time on a large-scale ICS. We
provide experimental results tested on various types of large-scale traﬃc
data that are collected from real ICSs of critical infrastructures.
1 Introduction
Industrial Control System (ICS) is a general term that describes control sys-
tems and related instrumentation designed to control and monitor industrial
processes using cyber physical systems. ICSs are used in a variety of national
core infrastructures such as waterworks, railways, transportation, power plants,
c(cid:2) Springer Nature Switzerland AG 2018
M. Bailey et al. (Eds.): RAID 2018, LNCS 11050, pp. 577–599, 2018.
https://doi.org/10.1007/978-3-030-00470-5_27
578
J.-H. Yun et al.
and more. Abnormal or malicious behavior in these critical infrastructures can
pose a serious threat to the society.
To minimize the possibility of outside intrusion, most ICSs are isolated from
outside networks to a certain extent. Some old systems were built as stand-alone
systems, which are disconnected completely from outside networks. However,
malware can also be introduced to isolated infrastructure facilities via removable
drives, and this can cause serious disasters. Many modern ICSs are connected to
the Internet through a protected extension of the corporate network, and there-
fore they are potentially reachable from the Internet by malicious adversaries.
Many studies [9] have been conducted on ICS control devices that are connected
to the Internet, and there is even a search engine [1] to ﬁnd them.
Fig. 1. ICS network traﬃc behavior
The anomaly-based approach (also known as behavior-based approach) is an
alternative approach that overcomes the drawbacks of signature-based IDS. In
this approach, a statistical model of the normal activities of an ICS is learned,
and then the model is compared with the current input to detect abnormal activi-
ties in the system, caused by even unknown attacks such as zero-day and already-
forgotten attacks. In order to detect anomalies, the IDS must learn to recognize
normal system activities in advance, typically in the training phase of the system.
There are several learning methods, and typically artiﬁcial intelligence-based
techniques are employed. As ICSs become larger and more complex, it becomes
increasingly diﬃcult to ensure ICS security based on techniques that require
human intervention and maintenance. Anomaly-based IDSs can be valuable in
such scenarios.
Our goal is to develop a widely applicable anomaly-based IDS that only
requires network traﬃc data of the target ICS. In this paper, we present an
anomaly-based IDS with high detection rate and low false alert rate, using the
nearest-neighbor search (NNS) to ﬁnd normal patterns of the ICS network.
Our method learns normal behavior in the overall traﬃc pattern based on the
number of network packets transmitted and received along pairs of devices over a
certain time interval as shown in Fig. 1. The method uses a geometric noise model
with lognormal distribution to model the randomness on ICS network traﬃc and
learns solutions through cross-validation on random samples. The method then
NNS of Critical Infrastructure Network Traﬃc
579
Previously Occurred Normal Pa(cid:425)erns
Pa(cid:425)erns to Determine Anomaly
Fig. 2. An example of beneﬁt of analyzing traﬃc patterns across the entire network.
The red traﬃc that keeps the ACL is determined as abnormal. (Color ﬁgure online)
Abnormal
Normal
determines whether a traﬃc instance contains an attack or not by comparing
the NNS distance of the traﬃc instance with the distribution. The expected
beneﬁt on this approach is that it can detect abnormalities in traﬃc that might
appear normal from a local perspective. For example, an attack carried out by
following the access control list (ACL) can appear normal when we observe only
two associated nodes. However, the anomaly can be detected by analyzing the
traﬃc patterns in the entire network, as illustrated in Fig. 2.
This approach can be widely applied to various ICS devices irrespective of
the protocol used for communication or the encryption method, because it only
requires the number of packets between two devices to be collected and does not
require an in depth knowledge of individual devices or applications in an ICS
network. In addition, practically any unknown attack introduced at the packet
level can be detected, provided the attack aﬀects traﬃc patterns in the network.
Our main contributions in this paper can be summarized as follows.
– We propose a new statistical model that distinguishes between normal and
abnormal traﬃc patterns using the overall traﬃc ﬂow in an ICS network.
– Based on our concrete statistical model, we provide an IDS method to detect
a small amount of network traﬃc variation with the low false alert rates.
– We present a fast algorithm, along with its theoretical time complexity anal-
ysis, to enable our method to be used real-time in a large-scale ICS.
– We provide experimental results tested on various types of
large-scale
(18.5 TB) traﬃc data collected from real control systems of critical infras-
tructures.
The rest of this paper is organized as follows. Section 2 describes prior
research on ICS network security. Section 3 proposes an ICS network traﬃc
pattern learning method and an abnormal traﬃc detection algorithm based on
the method. Section 4 presents the performance improvement of the proposed
algorithm. Section 5 analyzes the experimental results of applying the proposed
algorithm to the network traﬃc data collected from the control systems of actual
infrastructures in 11 sites, and Sect. 6 concludes this paper.
580
J.-H. Yun et al.
2 Related Work
Numerous studies on anomaly detection techniques have been conducted. One
category of techniques focuses on changes in the physical states of control sys-
tems. There have been some recent works on data set generation for ICS research
[11,16,19]. Many studies have been carried out to perform anomaly detection
based on the characteristics of the ICS network and control devices [10,13,20,21].
They compare the estimate with the actual current physical state to determine
anomalies. However, in order for each research to be eﬀective, it is necessary to
construct a matrix containing the real-world dynamics of the physical system.
In a large-scale ICS, it can be challenging to gather a byte-wise understanding of
the data from the applications in the ICS, in conjunction with an understanding
of the laws of physics and to implement the corresponding physical laws [7,13].
Our research focuses on the development of a practically scalable IDS by
using the self-similar nature of ICS network traﬃc. For common IT network
traﬃc, it has long been known that network traﬃc has a self-similar nature [15].
Subsequent studies have found more evidence of self-similarity with statistical
characteristics, such as long-range dependency [12], the Noah eﬀect [22], and
wavelet analysis [14,18,23]. Compared to common IT networks, ICS networks
operate speciﬁc tasks with fewer human interventions. Therefore, network traﬃc
of some devices on ICS networks can be expected to possess stronger self-similar
characteristics such as periodicity and auto-correlation [4,10,17] than traﬃc from
common IT networks, but not all devices have such clear characteristics accord-
ing to our experience in critical infrastructures.
Several prior studies have applied methods from IT network traﬃc analysis
on ICS networks. However, such studies focused on analyzing ICS network traﬃc
[2], and it is diﬃcult to ﬁnd anomalies in the ICS network based only on network
traﬃc [3].
3 Chi-Square Distribution of NNS Distances for Normal
Network Traﬃc
To detect a small amount of network traﬃc variation by analyzing ICS network
traﬃc, we focused on the solutions provided by the NNS algorithm on network
traﬃc data. With an analytical choice of distance metric for NNS, we prove
that the distribution of NNS distances for normal network traﬃc follows a vari-
ant of the chi-square distribution. The traﬃc instance whose NNS distance is
signiﬁcantly diﬀerent from the variant of chi-square is considered abnormal.
3.1 Representation of Normal Network Traﬃc
An ICS network can be abstracted as a directed graph G(N, E), where N is
the set of nodes, and E is the set of directed edges in G. Let m be the number
of edges in G. During a ﬁxed unit time interval U, let p be an m-dimensional
vector, where each element of p represents the number of packets+1 that pass
NNS of Critical Infrastructure Network Traﬃc
581
through the corresponding edge in E. The slight distortion (+1 for every edge) is
added for subsequent analysis. By repeating this on the ICS network for n time
intervals, an ordered data set for normal traﬃc P = {p1, ..., pn} is obtained.
At a time t > n, the problem we intend to address can be formally deﬁned as
follows: given P, decide whether pt contains an anomaly or not.
Fig. 3. An example of how our model views an actual traﬃc generated from the set of
tasks and noise at time i.
Note that in an ICS network, speciﬁc tasks are repeated from time to time.
Suppose that for a given edge in the ICS network, we can obtain the expected
number of packets generated by the speciﬁc task or combinations of tasks trans-
mitting on that edge during the time interval U. This results in a (hidden) set
of m-dimensional task vectors U = {u1, u2, ...}. While U cannot be obtained in
practice, it plays an important role as a hidden model for subsequent statistical
analysis. The overall network traﬃc pi at time i comprises of uT (i) values over all
the edges, along with some noise, where T (i) represents the task, or combination
of tasks, in U that generates traﬃc across an edge at time i. Figure 3 illustrates
this with an example on a simple ICS network.
To model the noises in the network traﬃc, we use a geometric noise model.
Although arithmetic noise, which follows normal distribution, is more widely
used, many aspects of network traﬃc are geometric [8]. In our case, for example,
traﬃc changes of ±100 are common when measuring an edge that normally
transmits 10, 000 packets, but is uncommon on an edge that normally transmits
300 packets. Therefore, geometric changes help to suitably normalize the amount
of noise for each edge. In the ﬁnance ﬁeld, where many ﬁnancial asset values
tend to change geometrically with randomness, it is widely known that random
geometric changes can be eﬀectively modeled using a lognormal distribution. One
famous example is BSM [6]1. Similarly, we use a geometric model with lognormal
distribution to model the randomness on ICS network traﬃc. Formally, for each
network traﬃc instance pi = {p(i,1), ..., p(i,m)} and its corresponding hidden task
1 The Black-Scholes option pricing model that received 1997 Nobel Memorial Prize in
Economic Sciences.
582
J.-H. Yun et al.
uT (i) = {u(T (i),1), ..., u(T (i),m)}, the traﬃc in pi is generated by
p(i,j) = u(T (i),j)X(i,j),
(1)
where X(i,j) ∼ ln N(0, σ2) is an independent and identically distributed (IID)
random variable following a lognormal noise at a time i on an edge j, with σ
depending on the noise level of the ICS network.
3.2 Traﬃc Behavior Modeling Using NNS
At a time t > n, we decide whether pt contains an anomaly or not, using the
data P = {p1, ..., pn}. If pt was generated from normal traﬃc, it would be the
case that a similar pattern of traﬃc had previously been generated by the same
task.
For a traﬃc instance pt measured at time t > n, we attempt to ﬁnd a traﬃc
instance in P that is likely to be generated by the same task as that for pt. One
approach is to pick the traﬃc instance p ∈ P with maximum similarity to pt,
as the estimate for the instance that is generated by the same task. Formally,
we ﬁnd a p that satisﬁes,
where D is an m-dimensional distance metric,
arg min
∀pi∈P
D(pi, pt)
D(pi, pt) =
m(cid:2)
j=1
(ln(p(i,j)) − ln(p(t,j)))2
(2)
(3)
We use the squared diﬀerence of two log values as the distance metric, for two
reasons. First, we deal with geometric changes of traﬃc and the log diﬀerence of
two changes are the same if and only if their geometric changes are the same. For
example, ln(c1)− ln(c2) = ln(c3)− ln(c4) for some positive constants c1, c2, c3, c4
holds if and only if c1
c4 . Second, D naturally works as a penalty for an
extreme geometric diﬀerence, thereby preventing the traﬃc diﬀerence of any
particular edge from dominating the results.
c2 = c3
Note that the minimization (2) is precisely a deﬁnition of the NNS problem
m (cid:4)→ Z be a traﬃc to time mapping function
with distance metric (3). Let N : R
that maps pt to its NNS solution pN (pt) ∈ P. Then we estimate that pN (pt)
was generated by the same task as that for pt, which can be formally written as
follows.
Assumption 1. uT (t) = uT (N (pt))
Under Assumption 1, we can oﬀset the impact of ICS tasks on the normal
network traﬃc by using NNS, and only the part representing the distribution of
noise can be obtained as a random variable.
Lemma 1. For a traﬃc instance pt generated by the normal behavior of an ICS,
2σ2 D(pN (pt), pt) = Zt is a random variable
the well normalized NNS distance
Zt ∼ χ2(m)
1
j=1
m(cid:2)
=
(ln X(s,j) − ln X(t,j))2.
j=1
m(cid:2)
=
j=1
(Yj)2
(6)
where Yj = ln X(s,j) − ln X(t,j). Note that each X(i,j) was deﬁned to follow
lnN (0, σ2). By the deﬁnition of lognormal, ln X(i,j) ∼ N (0, σ2). Then, Yj ∼
Yj ∼ N (0, 1). Therefore, we can derive the following equations
N (0, 2σ2) and 1√
from Eq. (6).
2σ
1
2σ2 D(pN (pt), pt) =
(
1√
2σ
Yj)2
(7)
m(cid:2)
j=1
Note that the squared sum of m IID random variables that follow N (0, 1) follows
χ2(m).
(4)
(5)
(8)
NNS of Critical Infrastructure Network Traﬃc
583
Proof. Let s = N(pt). With our traﬃc model (1) and the Assumption 1, the
distance between ps, the solution of the NNS, and the query pt, can be rewritten
as follows.
m(cid:2)
D(ps, pt) =
(ln(u(T (s),j)X(s,j)) − ln(u(T (t),j)X(t,j)))2
Zt ∼ χ2(m)
Yj follows N (0, 2σ2
Since each 1√
2σ2 ), which is the standard normal distribution,
2σ
the summation term in the right side of Eq. (7) follows χ2(m), Chi-square dis-
tribution of degree m. Therefore, we get the following.
D(pN (pt), pt) d= 2σ2χ2(m)
(9)
(cid:7)(cid:8)
Lemma 1 is our core result, which has two important advantages when applied
to anomaly-based IDS. First, it shows that the distances of NNS solutions for
normal traﬃc follow a distribution associated with the well-known chi-square
distribution. Thus, it is possible to set a statistically interpretable threshold that
the NNS solutions of normal traﬃc should be present in, by observing normal
traﬃc only. Second, in the process of deriving Lemma 1, for a normal traﬃc pt
generated by normal task in U, the majority of the traﬃc generated by normal
tasks is canceled out by uT (t) and uN (pt). In contrast, for a traﬃc rt = pt + at
where at represents a traﬃc vector that is not generated from normal task in U,
the amount of traﬃc caused by at may not be canceled, since there is no matched
task in U. In other words, the eﬀect of an abnormal task will be ampliﬁed in
NNS distance. Moreover, we can expect that the ampliﬁcation will mainly act
towards increasing the NNS distance, since we deﬁne D(, ) as a sum of squares.
Any diﬀerence between the actual traﬃc and its NNS solution on each edge is
accumulated by the square. Therefore, we have the following observation.
584
J.-H. Yun et al.
Observation 1. E[D(pN (rt), rt)] will be larger than E[D(pN (pt), pt)] during
most times t.
Normal test (100 times)
Abnormal test (100 times):
Five IPs send 0.2% more packets to one IP
50
100
150
200
40
80
120
160
200
240
(a) Cross validation
(b) Normal/anomaly test
Fig. 4. Nearest log distance of network traﬃc of a site that we collected
To help understand the diﬀerence, we include brief results of the experiment
in Fig. 4. Figure 4a is the cross validation of the NNS distance distribution for the
number of packets transmitted per edge in one minute at site 1 of our dataset.
Figure 4b shows the NNS distance distribution of the normal test and the abnor-
mal test. The normal test shows the NNS distance of normal traﬃc not used for
learning, and the abnormal test computes the NNS distance when ﬁve IPs send
0.2% more packets than usual to one IP. Similar results were obtained in the
remaining sites of our dataset.
3.3 Learning Distribution of NNS Solution
In the previous section, we arrived at Lemma 1, which is well deﬁned in theory.
As illustrated in Fig. 4 (and we also present extensive empirical results later in
Sect. 5), our theory also ﬁts well with the empirical results. Nevertheless, real-
world network traﬃc typically tends to contain some dirty phenomena, which
makes them diﬀer from that expressed by theory. For example, Assumption 1 may
not perfectly hold for some traﬃc instances, which makes it hard to estimate
σ for the noise X(i,j) ∼ lnN (0, σ2) used in Lemma 1. Additionally, m = |E|
is too large to be used for the degree of the chi-square that we derived, since
the majority of edges in an ICS network never (or almost never) transmit any
packets at all. Therefore, in order to use Lemma 1 for real IDS, a robust method
to estimate σ and k for 2σ2χ2(k) is required. We solve this problem by using
ncv-fold cross validation [5].
ncv-fold cross validation runs our algorithm by dividing the dataset into ncv
equally sized pieces. Formally, let Pc ⊂ P be the cth piece among ncv equally
divided pieces of P. We randomly sample the nsp number of traﬃc instances
pc ∈ Pc from each Pc, and run the NNS algorithm with each pc on the dataset
P \ Pc. After cross validation, we can achieve a set D (|D| = ncvnsp) of NNS
distances. Let ˆμ and ˆs2 be the sample mean and the (unbiased) variance achieved
NNS of Critical Infrastructure Network Traﬃc
585
by observing D, respectively. By Lemma 1, we already know that each element
in D is sampled from the distribution 2σ2χ2(k) for some σ and k. Also, by the
deﬁnition of χ2(k), its mean and variance are k and 2k, respectively. Therefore,
with the large number of samples ncvnsp, we have the following equations.
ˆμ ≈ 2σ2k
ˆs2 ≈ (2σ2)22k
(10)
(11)
We have two unknown variables k and σ in two Eqs. (10) and (11). k and σ for
2σ2χ2(k) can be easily calculated as follows.
k ≈ 2ˆμ2
ˆs2
σ2 ≈ ˆs2
4ˆμ
(13)
By using this method, all the ncvnsp number of NNS distances in D contribute to
the estimation of 2σ2χ2(k). Therefore, even if D contains several strange results,
we can robustly estimate k and σ from Eqs. (12) and (13), respectively.
(12)
3.4 Detecting Anomaly of Traﬃc
After learning σ and k by using cross-validation, the implementation of the
detection method is straightforward. Let CCDF (k, α) be the complemen-
tary cumulative distribution function that evaluates the probability E[A|A >
α] for a random variable A ∼ χ(k). For a normal traﬃc instance pt,
let
2σ2 D(pN (pt), pt)) = φt. By Lemma 1, φt will be larger than Φ ∈ [0, 1]
CCDF (k, 1
with probability Φ. In contrast, the NNS distance of a traﬃc instance contain-
ing attacks would have a smaller φt by Observation 1. Therefore, our detection
algorithm sets a small Φ (i.e. 0.01) and it determines that a traﬃc contains an
attack when φt < Φ.
4 An Eﬃcient Algorithm for Anomaly Detection
The algorithm described in the section above can be used as an anomaly-based
IDS with reasonable performance. Nevertheless, its performance might not be
suﬃcient for detecting certain small amount of network traﬃc variation. In par-
ticular, the following three methods are common ways for hiding attacks, which
also reduce their impact on network traﬃc. First, the attacker can minimize
the short-term impact by spreading the attack over a long period. Second, the
attacker can minimize the impact on the ICS network by minimizing the number
of target devices to attack. Third, the attacker can mimic the normal behavior
of the ICS. The full version of our IDS includes additional methods to improve
the detection performance against such stealthy attacks.
We provide two extended methods to improve the detection performance:
windowed NNS and partitioned NNS. A summary of the two extended methods
586
J.-H. Yun et al.
pt
pt+1 pt+w−1
Sliding Window
S
N
N
d
e
n
o
i
t
i
t
r
a
P
Windowed NNS
...
p1
p2
p3
p4
p5
...
pn
Fig. 5. Brief concepts about windowed NNS (red) and partitioned NNS (blue). (Color
ﬁgure online)
is illustrated in Fig. 5. In the following subsections, we formally deﬁne windowed
NNS and partitioned NNS. We also analyze how we can achieve improved detec-
tion performance with those methods, and use the ﬁndings of these analyses.
Finally, we provide a fast algorithm that applies these techniques for a large-
scale ICS in real-time.
4.1 Windowed NNS
We will ﬁrst consider a continuous attack that lasts from time t to t + w − 1. In
order to gather some intuition for the improvement of the detection performance
of our simple version IDS, let us go back to the theoretical basis and analyze
Lemma 1. Consider the normal traﬃc instances Zt and Zt+1. Since they come
from diﬀerent IID random variables (see Eq. (5)), Zt and Zt+1 are also IID
random variables. Let us deﬁne Z (w)
as a summation of the w number of Z’s as
follow.
t
Z (w)
t =
t+w−1(cid:2)
Zi
i=t