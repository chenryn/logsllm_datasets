User: 请解答这个和日志有关的问题Recommendation for identity system I want to develop a system, something like a comment system for a website, that ensures I know who is posting comments. The content that is exchanged is not valuable and does not need to be encrypted, I just want to have a some reasonable assurance that the person posting the comment is in fact who they say they are. If a post is spam for example, I want to be able to hold the person accountable. At the same time I need the system to be low overhead for users. For example giving them a list of 100 one time phrases that would have to be pasted into an email or onto a website would be acceptable.

I am using node.js and was considering using a diffie-hellman key-exchange.

I know this is fuzzy and I'm not looking for answers per se, but rather a way to think about it, an example or starting point or ... ?

Edit #1 Thanks for the intelligent questions and thoughts.

Use case: Someone physically comes to me and with a thumb drive and I give them a set of one time ciphers. [206,99087,3,etc]. And yes, they have to agree to give me some information and be physically identified. Each time they comment or post (and perhaps post through email) I want one of those ciphers to be sent to me, and they are not reusable. When my application gets an email or a posted comment there is a high degree of certainty about the identity of the person. Little is at stake besides "reputation" so there is little incentive to break into the system, but it shouldn't be trivial. 

Accountability means their reputation suffers or they are banned from using the application. Since this is based on their physical person rather than their disposable email person this is sufficient.

Assistant: Captcha are one of the best way to stop spam bot so you will need them somewhere, but they are a pain for the user. That's why I like when I can authenticate in some way to a system which means that I don't have to answer a captcha everytime.

Session cookie are the way to go to identify a client. He logs in 1 time (or proves that he is not a bot 1 time by answering) a captcha then you give him a session id inside a cookie. Actually there are usually 2 cookies, a session cookie and an authentication cookie. The session cookie is created as soon as the user connect to your site, the authentication is created when he logs in.

For blocking user, you could either block them by IP address, username or by terminating the session (invalidating his session cookie, so he has to reanswer a captcha). But if you chose to do it by username you have to protect the username by a password or anyone could impersonate any username.

Also, if you don't want your user cookie or login information to be stolen (by someone listening on your web traffic), you will need to encrypt all the communication between the client and the server using HTTPS. Otherwise, your cookies and login information are not safe. If an attacker gain access to a cookie he can impersonates that person.

I see 2 alternatives

Alternative 1 : Username + Password

Ask for a unique username, a password and an answer to a captcha when creating the account. After that, the client can simply log in with a username + password. If one account is a spam bot you can either block the username and/or the IP address.

Alternative 2 : Username only

If you don't mind to have duplicate username you can use this way. Simply, ask for a username and the answer to a captcha then gives the user a session cookie to authenticate him afterward. Of course, blocking by username is no use here and you should instead do it by IP address or terminating session.