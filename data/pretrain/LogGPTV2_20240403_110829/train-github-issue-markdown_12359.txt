Hi,
I must say I'm new to typescript, but I try to use it with React and Redux.
I met the next case, here I'm trying to use the decorator `@connect` together
with my component:
    @autobind
    @connect((store) => {
        return {
            states: store.states
        };
    })
    export default class Index extends React.Component {
        componentWillMount() {
            this.props.dispatch(loadStates())
        }
        render() {
            return (
                    Webpack React
                        hello
            )
        }
    }
During the compilation the error appears:
    ERROR in ./app/pages/Index.tsx
    (8,1): error TS1238: Unable to resolve signature of class decorator when called as an expression.
      Type 'ComponentClass' is not assignable to type 'typeof Index'.
        Type 'Component' is not assignable to type 'Index'.
          Property 'componentWillMount' is missing in type 'Component'.
In case I will remove the `componentWillMount` method from the component -
there is no error.
After that, I've tried to apply the `connect` as a function call, like this:
    @autobind
    class Index extends React.Component {
        componentWillMount() {
            this.props.dispatch(loadStates())
        }
        render() {
            return (
                    Webpack React
                        hello
            )
        }
    }
    export default connect((store) => {
        return {
            states: store.states
        };
    })(Index);
This works fine, no errors during the compilation.
I really want to use decorators as long as I can. Unfortunately the produced
error doesn't ring a bell to me :) I would be glad in case somebody can point
me to the right direction.
pinging @tkqubo, @jgillich as I saw you helped in the similar topic:  
#6237
Let me know if I can provide more information.
Regards,