title:Automated Analysis of Secure Internet of Things Protocols
author:Jun Young Kim and
Ralph Holz and
Wen Hu and
Sanjay Jha
Automated Analysis of Secure Internet of Things Protocols
Jun Young Kim
Ralph Holz
Wen Hu, Sanjay Jha
UNSW Australia, Data61 CSIRO,
The University of Sydney
UNSW Australia, Data61 CSIRO
WBS Technology
Sydney, Australia
PI:EMAIL
Sydney, Australia
PI:EMAIL
Sydney, Australia
PI:EMAIL
ABSTRACT
Formal security analysis has proven to be a useful tool for
tracking modiﬁcations in communication protocols in an au-
tomated manner, where full security analysis of revisions
requires minimum eﬀorts. In this paper, we formally anal-
ysed prominent IoT protocols and uncovered many critical
challenges in practical IoT settings. We address these chal-
lenges by using formal symbolic modelling of such protocols
under various adversaries and security goals. Furthermore,
this paper extends formal analysis to cryptographic Denial-of-
Service (DoS) attacks and demonstrates that a vast majority
of IoT protocols are vulnerable to such resource exhaustion
attacks. We present a cryptographic DoS attack countermea-
sure that can be generally used in many IoT protocols. Our
study of prominent IoT protocols such as CoAP and MQTT
shows the beneﬁts of our approach.
ACM  Reference  format:
Jun  Young  Kim,  Ralph  Holz,  and  Wen  Hu,  Sanjay  Jha.  2017. 
Automated  Analysis  of  Secure  Internet  of  Things  Protocols.  In 
Proceedings  of  ACSAC  2017,  Orlando,  FL.  USA,  December  4–8, 
2017,  12  pages.
DOI:  10.1145/3134600.3134624
1 INTRODUCTION
In recent years, a number of Internet of Things (IoT) frame-
works and associated security protocols and mechanisms have
been proposed to realize the vision of the next-generation
ubiquitous Internet. However, security guarantees become
even more challenging in the IoT environment due to fre-
quent model/code changes, application-speciﬁc adversaries,
and emerging threats. The security of IoT systems remains
one of the top barriers blocking the success of IoT prolifera-
tion [10], as many attacks and vulnerabilities have started
to target relatively weak IoT applications and devices. As
an example of a particularly interersting case, IoT devices
constituted 38% of the victims of a cryptocurrency mining
worm [5].
Permission  to  make  digital  or  hard  copies  of  all  or  part  of  this  work 
for  personal  or  classroom  use  is  granted  without  fee  provided  that 
copies  are  not  made  or  distributed  for  proﬁt  or  commercial  advantage 
and  that  copies  bear  this  notice  and  the  full  citation  on  the  ﬁrst 
page.  Copyrights  for  components  of  this  work  owned  by  others  than 
ACM  must  be  honored.  Abstracting  with  credit  is  permitted.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires  prior  speciﬁc  permission  and/or  a  fee.  Request  permissions 
from  permissions@acm.org.
ACSAC  2017,  Orlando,  FL,  USA
© 2017 ACM. 978-1-4503-5345-8/17/12. . . $15.00
DOI: 10.1145/3134600.3134624
The security analysis of IoT protocols remains an open
challenge. The main reason for this is that the majority of
IoT protocols are prone to frequent change; as the vendors
and service providers modify them to respond to market de-
mands or application model changes. Any changes in setting,
security model or code require exhaustive security analysis.
Another reason is that the security properties of applications
vary depending on deployment environment, types of de-
vices, network bandwidth, and energy availability [34]. This
results in the need for analysis of the same protocol un-
der various adversary models and goals. For instance, some
applications consider only the traditional Dolev-Yao (D-Y)
attacker (insecure wireless channel), while others must con-
sider a signiﬁcantly stronger adversary such as the extended
Canetti-Krawczyk (eCK) model [36], where the adversary
may dynamically compromise a limited number of long-term
and session keys with the possibility of corrupting random
number generators. This is often due to the unguarded deploy-
ment environment of IoT applications. Some applications may
also require Perfect Forward Secrecy (PFS), which protects
past sessions against future compromises of secret keys [33].
Thus, a full security analysis of ever-changing IoT protocols
under application-speciﬁc settings is a diﬃcult task.
Pen and paper analysis. One well-established prac-
tice for security analysis is ‘pen and paper’ cryptographic
analysis. Despite its clear value, it is error-prone and time-
consuming [26], especially for protocol drafts where the se-
curity model and implementation details can still change.
Even some parameter changes in source code can trigger a
substantial full security analysis.
Automated formal symbolic security analysis. Tool-
based formal security analysis has helped with ‘automated’
analysis of abstract security protocols. In the past decade [21,
35, 39], a large number of formal security analysis tools have
become publicly available. One highly interesting case, where
such tools have proven to be immensely useful, is the analysis
of TLS 1.3 revisions. Given the complicated variants and the
use case of TLS 1.2, many ﬂaws such as BEAST [27] and
Lucky-Thirteen [20] had been identiﬁed before TLS 1.3. Thus,
the TLS working group decided to adopt an ‘analysis-before-
deployment’ paradigm when drafting TLS 1.3. Yet the full
security analysis of the entire TLS 1.3 draft was not expected
to ﬁnish in time due to the substantial complexity of the
protocol suite, with multiple ‘pen and paper’ or tool-based
approaches. Cremers et al. [26] performed extensive symbolic
security analysis on TLS 1.3 draft-10 to conﬁrm that it is
robust, except for a design ﬂaw in a delayed client authenti-
cation mechanism when combined with a PSK-resumption
238handshake. The authors claim that their approach can anal-
yse future TLS 1.3 drafts with a minimum time eﬀort, and
they keep track of current drafts.
Challenges. Based on our experience, we found that for-
mal security analysis is extremely useful for standard-based
IoT protocols. For instance, standard security primitives
such as Public Key Cryptography (PKC) and Pre-Shared
Key (PSK) based protocols can be analysed and tracked
with minimum eﬀort. However, we discovered several critical
limitations while introducing new algorithms.
DoS attack vulnerability. The 2016 DYN cyberat-
tack [12] and 2013 Spamhaus attack [3] have demonstrated
that Denial-of-Service (DoS) attacks can cause massive disrup-
tion, especially in IoT deployments. IoT systems are particu-
larly vulnerable to DoS attacks due to the involved Machine-
to-Machine (M2M) communication. Although the latter en-
ables intelligent applications, its fault-tolerance behaviour
and lack of human monitoring brings new vulnerabilities.
In addition, when IoT applications run on battery-powered
devices, bandwidth and energy are at a premium to maximize
the lifetime of such devices.
Contributions. We make the following contributions:
security analysis tools and propose solutions.
• We perform symbolic security analysis of prominent
IoT protocols under various adversary models and
goals such as D-Y, eCK, and PFS. We present our
analysis and make the code public so that it can be
used adaptively upon modiﬁcation of these proto-
cols1.
• We present critical challenges in existing symbolic
• We further demonstrate how DoS attacks can be
modelled and protocols correspondingly veriﬁed; we
show that important IoT protocols are vulnerable to
DoS attacks.
• We discuss the limitations of existing DoS counter-
measures in IoT and propose a tailored DoS attack
countermeasure that can be generally used in other
IoT protocols.
This paper is organized as follows. Section 2 presents
background of prominent IoT protocols and existing DoS
countermeasures. Section 3 introduces the Tamarin prover
by modelling standard-based protocols. Section 4 presents
restrictions of existing symbolic tools and proposes solutions
to address the restrictions. Section 5 presents the innate DoS
attack vulnerability of IoT protocols. To address DoS attack
vulnerability, we propose our countermeasure in Section 6.
Section 7 concludes the paper.
2 RELATED WORK
In this section, we present prominent IoT protocols and their
security goals, which we will refer to throughout the paper.
We present a summary in Table 1. We also show the existing
DoS countermeasures and their shortcomings when they are
used in the IoT.
1Our implementation is available at https://github.com/jun-kim/
Automated-security-veriﬁcation-of-IoT-protocols
Attacker/Goal
D-Y/Standard
D-Y/Secrecy, Integrity
Protocol
Sigfox [14]
LoRa [13]
MQTT [15] D-Y, eCK/Standard
D-Y, eCK/Standard
CoAP[4]
JPAKE [6]
D-Y, eCK/PFS
Note
All packets carry signature
PSK is recommended
Recommend session resumption
Rely on DTLS
Eliminate PKC suite
Table 1: Overview of IoT protocols analyzed in this
paper.
2.1 LPWAN Protocols
Low Power Wide Area Network (LPWAN) can provide cover-
age up to several kilometres using low-power applications [13].
Many LPWAN IoT device management applications such as
water/gas meters, street lights, vending machines, devices
for pets, trash containers, and smoke alarms are potential
users of this technology. The LPWAN radio layer uses the
unlicensed spectrum below 1 GHz, which is free for use for
all applications.
SigFox. SigFox [14] is designed for enterprise use cases
with tight management schemes. Since it targets standard
security, SigFox mandates a PKC cipher suite with X.509
certiﬁcates even on extremely constrained devices. A distin-
guishable diﬀerence between SigFox and standard PKC is
that all SigFox communication packets carry the sender’s
signature to enhance integrity in low-bandwidth environ-
ments. Furthermore, all SigFox devices are equipped with
manufacturer-generated public and private key pair before
deployment and this is used as their identity during their
lifetime. Although this design choice enables standard se-
curity with tight device management features, performance
and battery life of constrained devices are extremely limited.
Therefore, SigFox is a favourable choice for enterprise IoT
applications where devices have no energy constraints.
LoRa alliance. Designed for long battery life, the Long
Range alliance (LoRa) [13] speciﬁcation essentially uses Pre-
Shared Key (PSK) cipher suites with HMAC support only. It
leaves the choice of cipher suites to application designers and
developers. Compared to SigFox, the LoRa security model is
more suitable for constrained IoT applications with long-term
usage. However, PSK is only secure against a D-Y adversary;
one compromised device can jeopardize the entire application
security.
2.2 Publish/Subscribe Protocols
A number of publish/subscribe messaging protocols are cur-
rently in use in commercial IoT applications. The Constrained
Application Protocol (CoAP) [4] and MQ Telemetry Trans-
port (MQTT) [15] are two prominent examples. They are ex-
tremely simple with RESTful interfaces and lightweight pub-
lish/subscribe messaging protocols, designed for constrained
devices and low-bandwidth, high-latency or unreliable net-
works. Their design principles strive to make them ideal for
emerging IoT applications, where bandwidth and battery
power are at a premium. When the server (broker) receives
a published item, it securely distributes the item to all sub-
scribers resulting in tight security and privacy provided by
239the centralized server. Our case study will model and analyze
CoAP and MQTT.
2.3 JPAKE Algorithm
Password-Authenticated Key Exchange (PAKE) schemes al-
low to establish secure communication between two remote
parties based solely on their shared low-entropy password.
The PAKE paradigm is suitable for IoT applications; it fea-
tures straightforward structure, eﬃciency, and has no PKC
infrastructure requirements. As a factory default, IoT de-
vices are only required to be equipped with a low-entropy
password that can be used for further secure communica-
tion and authentication without relying on complex PKC
infrastructure.
Although patent
issues have blocked PAKE adop-
tion2, Password-Authenticated Key Exchange with juggling
(JPAKE) [29] has been proposed patent-free. The ‘juggling’
(hence ‘J’PAKE) technique and Schnorr signature [43] for
Zero-Knowledge-Proofs (ZKP) enable this design. JPAKE
is included in many IoT protocols such as Google Nest’s
THREAD IoT commissioning protocol3 [7]. It is currently
being standardized by the IETF [6].
2.4 Summary of IoT Protocols
To elaborate on the IoT protocols summarized in Table 1,
MQTT, CoAP and SigFox are used as typical examples of
standard TLS 1.2 with simple variations depending on the
protocol design philosophy. SigFox uses signatures for every
packet and MQTT uses a session resumption approach. CoAP,
on the other hand, adopts Datagram TLS (DTLS) for low-
power networks. Throughout this paper, we will use SigFox
as a standard TLS 1.2 example and model MQTT and CoAP
in terms of their variations. LoRa will serve as a typical