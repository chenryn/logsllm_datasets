在结束对制作文件的讨论之前，我们认为有必要让大家明白这样一件事：制作文件并不仅
加入jaVa编程群：524621833
---
## Page 274
256Linux程序设计
仅能够用于编译代码或创建函数库。只要是可以通过-系列命令从一些输人文件得到一个输出
文件的工作，都可以通过制作文件来自动地完成。典型的“非编译器”用途包括调用AWK或scd
命令对某些文件进行处理，或生成使用手册页等。
8.3源代码控制系统
随着接手的项目越来越大，源文件收动方面的管理就越来越重要，如果项目上的开发人员
不止一个时就更是如此。UNIX在源文件管理方面有两个广泛使用的软件系统，它们是RCS
（RevisionControlSystem，修订控制系统）和SCCS（SourceCode ControlSystem，源代码控制
系统）
RCS工具包和它们的源代码都可以从FreeSoftwarefoundation（自由软件基金会）获得，而
SCCS是由AT&T公司在UNIX的SystemV版本上引入的，现在已经成为X/Open技术规范的一个
组成部分了。除此之外，还有许多第三方的源代码控制系统，其中最有名的可能要算CVS
（ConcurrentVersionSystem）了，它比SCCS或者RCS更先进，但使用面还不够广泛。
在这一章里，我们将重点介绍RCS，但也会把RCS命令与SCCS命令进行比较。大家将会看
到它们提供了近似的功能，两者之间的切换也比较容易。RCS还有适用于MS-DOS的版本，其中
包括一些具有商业化支持的产品。我们还将对CVS源代码控制系统略加介绍，它非常适用于多
名开发人员通过网络互相合作的情况。
8.3.1RCS系统
RCS系统提供了许多对源代码文件进行管理的命令。它能够跟踪并记录下源代码文件的每·一
处改动，这些改动都保存在一个文件里：改动清单记载着足够的细节，能够重建出任何-个以
前的版本。它还允许我们为每个改动保存一个与之对应的注释，这在你回顾文件改动的历史时
将发挥出极大的作用。
随着项目的进展，我们可以把每个大的改动或者对源文件程序漏洞的修补分别记录下来，
还可以给每个改动加上一些注释并把它们也保存起来。这在需要复查文件改动情况和检查程序
漏洞补点的时候是非常有用的，我们甚至可以用它来查出程序漏洞是在什么位置引人的！
因为RCS只保存版本之间的不同之处，所以它的存储空间使用效率也是很高的。它还可以在
我们误删了文件的时候检索出以前的修订情况。
1.rcs命令
我们从一个我们希望对之进行管理的文件的初始版本开始。我们将以important.c为例向大家
介绍一个完整的控制流程：它最初是foo.c文件的一个拷贝，在文件的最开始有以下的注释内容：
/*
This is an inportant file for managing this project.
*/
首先要用rcs命令对这个文件的RCS控制进行初始化。命令“rcs-i”的作用是初始化RCS控
制文件。如下所示：
加入jaVva编程群：524621833
---
## Page 275
第8章开发工具
257
Sree-iinportant.c
RCS file: inportant.c,v
NOTE: This is NOT the log message!
enter description, terminated with single .* or end of file:
>> This is an inportant demonstration file
$
我们可以使用多行注释。结束注释输人提示符需要在文本行上单独使用一个英文句号（.）
或敲人文件尾字符，它通常对应于“Ctrl-D”组合键。
执行完这条命令之后，rcs将新创建出一个带“.v”后缓名的只读文件来。如下所示：
$ 18 -1
-rv-T-
-1rick
user8
226 Feb 11 16:25 inportant.c
lrirk
users
105 Feb 11 16:26 important.c,V
如果读者想把自己的RCS文件保存到另一个子目录里去，可以简单地在第一次使用rcs命令
之前先建立一个名为RCS的下级子目录。所有rcs命令都将自动地把rcs文件保存到RCS子目录
里去。
2.ci命令
现在给我们的文件“订个房间”，用ci命令把它的当前版本封存起来。
Sci inportant.c
nportant.c,v>Added an extra line to be printed out.
'.* or end of filer
dntx
>
如果在封存文件的时候还想保有文件的加锁状态使同一用户还能对该文件做后续调
试，我们必须在调用ci的时候加上“-1”选项。这样，子目录里还将自动留有该程序的
一个解封版本供同一用户继续调试
现在，我们再次封存了文件的修订版本。如果我们查看子目录的文件清单，就会发现
important.c文件又不见了：
 1s -1
1rick
users
633 Feb 11 16:37 important.c.v
S
4.rlog命令
有时候，我们需要查看文件的改动清单。用rlog命令可以完成这一工作，如下所示：
5rlog inportant.c
RCS tile: inportant.c.v
wosking file: important.c
head: 1.2
br aneh;
locks: strict
synbolic nanes:
dccess list:
keyword substitution:kv
comtent, leader:
devcriytion:
selected revisions:2
This is an important demonstration f11e
date1999/02/1116:37:35;
rev181on 1.2
Added an extra line to be printed out.
authcr: rick;
1ines: +1
date: 1999/02/11 16:30:19;
revi81on 1.1
author: rick; state: Exp:
加入jaVa编程群：524621833
---
## Page 277
第8章开发工具
259
Tnitial revision
第-一部分内容是对该文件的一个描述以及rcs命令正在使用的选项。接着，rlog命令列出了对
文件的各项修改，同时列出的还有我们封存修订后的文件时输入的注释文本。修订版1.2中的
“line：+1-0”表明在这一修订版里我们添加了一行语句，删除了零行。
如果我们想在这时候取回该文件的第一版，可以在调用co命令的时候指定那个版本号，如
下所示：
$ co -r1.1 Lmportant.c
inportant.c,v
revision 1.1
->inportant.c
Gone
ci命令也有一个“-r”选项，它的作用是强制主版本号取--个给定的值，请看下面这条命令：
ci -r2 important.c
它将把important.c文件封存为2.1版。RCS和SCCS都使用“1”做为辅助版本号缺省使用的
第一个数字。
5.rcsdiff命令
如果我们只是想了解一下两个修订版之间有哪些改动之处，就可以使用rcsdiff命令。
Srcsdift -r1.1-r1.2important.c
RCS tale: important.c,v
retrieving revision 1.1
ditf-r1.1 -r1.2
retrieving revision 1.2
11a12
printf(*This 1s an extra 1ine added later\n′1;
$
它告诉我们在原来的第11行后面插人了一行语句。
6.修订版本的确定
RCS系统可以在源文件里使用特殊的字符串（即宏定义）来帮助跟踪记录所做的改动。最常
“SIdS”将扩展为一个指示修订版本的字符串。RCS支持的特殊字符串的完整清单可以在其使用
手册页里找到。这些宏定义会在解封并取出文件的某个修订版本时即时扩展，并且会在封存某
个修订版本时自动刷新它们的取值。
我们对自已的文件做第3次修改，加上一些刚才介绍的宏定义。
Sco-1lmportant.c
revision 1.2 (1ocked
inpor:ant.c
Gone
对解均的important.c文件进行编辑，最终成为如下所示的样子：
 *
加入jaVa编程群：524621833
---
## Page 278
260
Linux程序设计
This is an inportant file for managing this project.
It implenents the canonical *Hello World* program,
F1lenane: SRCsfiles
#include 
#include 
static char *Rcsinfo *$Id$′;
int main(1{
printf(*This is an extra line added later`n*);
printfi*This file is under RCS control. It's ID isnes\n*,Rcsinfo);
exit (EXIT_SUCCESS);
封存这个修订版本，看看RCS是如何管理这些个特殊字符串的。
S ci inportant.c
new revision: 1.3: previous revision:1.2
important.c,V  >Added sRcsfiies and $Ids stringe
enter log message, terninated with single '.' or end of fi1e:
dono
此时，查看子目录清单将只能看到RCS文件在里面：
$1s -1
1rick
users
907 Feb 11 16:55 inportant.e,v
5
如果我们（用co命令）解封并取出源文件的当前版本进行检查，就会发现宏定义已经被扩
展了，如下所示：
/ *
This is an important file for managing this project.
It irpleaents the canonical *Hello world* program.
Filename: SRcsfile:important.c,v $
#inelude 
#include 
int nain(){
printf(*Hello World\n*):
printf(*This is an extra line added later\n*);
printf(*This file is under RCS control. It's ID is\nes\n*,RCSinfo);
exit (EXIT_SUCCESS):
动手试试：GNU的make命今和RCS系统
GNU的make命令已经内建有一些对RCS文件进行管理的规则。我们下面来看看make命令对
少了一个源文件的情况是如何处理的。
S rm -f inportant.c
加入java编程群：524621833
---