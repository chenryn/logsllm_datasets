#BHUSA @BlackHatEvents
IAM The One Who Knocks
Igal Gofman, Noam Dahan
#BHUSA @BlackHatEvents
Information Classification: General
Igal Gofman
@IgalGofman
‚Ä¢ Head of Research, Ermetic
‚Ä¢ Microsoft MSTIC
‚Ä¢ Microsoft security research
‚Ä¢ Active Directory expert 
Noam Dahan
@NoamDahan
‚Ä¢ Cloud security researcher
‚Ä¢ Love/hate relationship with embedded 
devices 
‚Ä¢ Offensive background 
Whoami
#BHUSA @BlackHatEvents
Information Classification: General
Why are we here?
Background
#BHUSA @BlackHatEvents
Information Classification: General
IAM best practices
‚Ä¢
GCP - Basic roles include thousands of 
permissions across all Google Cloud services. In 
production environments, do not grant basic roles 
unless there is no alternative. Instead, grant the 
most limited predefined roles or custom roles that 
meet your needs.
‚Ä¢
GCP - Treat each component of your application 
as a separate trust boundary.
‚Ä¢
GCP - Grant roles at the smallest scope needed.
https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html
https://cloud.google.com/iam/docs/using-iam-securely
https://docs.microsoft.com/en-us/azure/security/fundamentals/identity-management-best-practices
‚Ä¢
AWS - Apply least-privilege permissions
‚Ä¢
AWS - Use IAM Access Analyzer to generate 
least-privilege policies based on access activity
‚Ä¢
AWS - Regularly review and remove unused 
users, roles, permissions, policies, and 
credentials
‚Ä¢
AWS - Use conditions in IAM policies to further 
restrict access
‚Ä¢
Azure - Treat identity as the primary 
security perimeter
‚Ä¢
Azure - Use role-based access control
‚Ä¢
Azure - Lower exposure of privileged 
accounts
#BHUSA @BlackHatEvents
Information Classification: General
Agenda
‚Ä¢ IAM Crash Course 
‚Ä¢ Cloud IAM weak spots (permissions landscape) 
‚Ä¢ Things are not always what they seem 
‚Ä¢ Defense & Monitoring techniques
‚Ä¢ Demo
Agenda
#BHUSA @BlackHatEvents
IAM Crash Course 
#BHUSA @BlackHatEvents
Information Classification: General
Security Context 
‚Ä¢
Users
‚Ä¢
Roles
‚Ä¢
Services account
‚Ä¢
Managed Identity
‚Ä¢
Service principal 
IAM Crash Course: IAM 101
(Who?)
Access policy
‚Ä¢
Policy
‚Ä¢
Roles
‚Ä¢
Permissions
‚Ä¢
Scope
(Under which conditions?)
Federation Services 
(Who?)
#BHUSA @BlackHatEvents
Information Classification: General
Policies
‚Ä¢ AWS
‚Ä¢
Customer Managed
‚Ä¢
Inline
Roles
‚Ä¢
Basic
‚Ä¢
Predefined
‚Ä¢
Custom
IAM Crash Course: Multi-Cloud IAM
Azure
AWS
GCP
Identity
Permissions
Scope
Attach
Assign
Bind
Users
Users
Users
Groups
Groups
Groups
IAM Role
Managed identity
Service Account
AWS SSO directory
Service Principal
Pre-Defined Groups | Special groups
Federated Identities
Federated Identities
Federated Identities
AWS Policy
Customer Managed
Inline policy  
Role
(Built-In | Custom)
Role
(Basic | Predefined 
Custom)
Scope
Scope
#BHUSA @BlackHatEvents
Information Classification: General
Root Management Group
Azure Active Directory
Management Group
Management Group
Subscription
Subscription
Subscription
Organization
Organization Unit
Organization Unit
Resource Group
Resource Group Resource Group
Master Account
Account
Account
Account
Organization
Folder
Folder
Folder
Folder
Project
Project
Project
IAM Crash Course: Multi-Cloud Organizational Structure
Azure
AWS
GCP
#BHUSA @BlackHatEvents
Cloud IAM weak spot
#BHUSA @BlackHatEvents
Information Classification: General
Cloud IAM weak spot
‚Ä¢ Non-human Identities
‚Ä¢ Assignment of new permissions 
‚Ä¢ Code Execution | Task | Template üòá
‚Ä¢ Grants and Delegation
‚Ä¢ New credentials | secrets
‚Ä¢ Encryption & Cryptographic key management
‚Ä¢ Organizational policies
IAM weak spots: Permissions landscape
#BHUSA @BlackHatEvents
Information Classification: General
Cloud IAM weak spot
Non-human Identities
IAM weak spots: Non-human Identities
AWS
Role attachment 
Azure
Managed Identities
GCP
Service account
#BHUSA @BlackHatEvents
Information Classification: General
Permissions Landscape
Assignment | Code Execution | Grants and Delegation | New credentials 
IAM weak spots: Permissions landscape
Assignment
‚Ä¢
Azure - Microsoft.Authorization/roleAssignments/write
‚Ä¢
Azure - Microsoft.Authorization/roleDefinitions/write
‚Ä¢
GCP - iam.roles.update
‚Ä¢
GCP - orgpolicy.policy.set
‚Ä¢
GCP - resourcemanager.projects.setIamPolicy
‚Ä¢
AWS - lambda:AddPermission
‚Ä¢
AWS - iam:AttachUserPolicy
‚Ä¢
AWS - iam:AttachGroupPolicy
‚Ä¢
AWS - iam:AttachRolePolicy
Code Execution
‚Ä¢
AWS - lambda:CreateFunction
‚Ä¢
AWS - lambda:InvokeFunction
‚Ä¢
AWS - lambda:UpdateFunctionConfiguration
‚Ä¢
AWS - cloudformation:CreateStack
‚Ä¢
GCP - cloudscheduler.jobs.create
‚Ä¢
GCP - cloudbuild.builds.create
‚Ä¢
GCP - cloudfunctions.functions.create
‚Ä¢
GCP - cloudfunctions.functions.update
‚Ä¢
GCP - run.services.create
Grants and Delegation
‚Ä¢
GCP - iam.serviceAccounts.implicitDelegation
‚Ä¢
GCP - deploymentmanager.deployments.create
‚Ä¢
GCP - iam.serviceAccounts.actAs
‚Ä¢
AWS - iam:PassRole
‚Ä¢
Azure - Microsoft.ManagedIdentity/userAssignedIdentities/*/assign/action
New Credentials
‚Ä¢
AWS - iam:CreateLoginProfile
‚Ä¢
AWS - iam:UpdateLoginProfile
‚Ä¢
AWS - iam:CreateAccessKey
‚Ä¢
GCP - iam.serviceAccountKeys.create
‚Ä¢
GCP - iam.serviceAccounts.signJwt
‚Ä¢
GCP - serviceusage.apiKeys.create
‚Ä¢
GCP - iam.serviceAccounts.getAccessToken
#BHUSA @BlackHatEvents
Things are not always what they seem
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #1: Beware of non-human identities
‚Ä¢ How cloud providers handle non-human credentials (Certificates)
‚Ä¢ How cloud consumers handle non-human credentials (Short-lived tokens)
‚Ä¢ The Instance metadata, local addresses, and environment variables 
‚Ä¢ Beware of hybrid Instance metadata 
Azure use case: Managed identities
#BHUSA @BlackHatEvents
Information Classification: General
‚Ä¢
The Fabric Controller (FC) is a distributed program that manages 
the hardware and applications in a cluster internally used by Azure. 
Lesson #1: Beware of non-human identities
Azure use case: Managed identities
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #2: Study implementation details
‚Ä¢ Serverless code ‚Äì Are AWS lambda and GCP functions the same?
‚Ä¢ Versioning and revision 
‚Ä¢ Who can access my function code?
‚Ä¢ Privilege escalation 
AWS vs GCP: Serverless code
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #3: Defaults are a hacker‚Äôs best friend 
‚Ä¢ Why do we need default policies?
‚Ä¢ Can we rely on custom policies? (Limitations)
‚Ä¢ Service providers best practices?
AWS vs GCP vs Azure: default permissions 
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #3: Defaults are a hacker‚Äôs best friend 
‚Ä¢ AWS
‚Ä¢ Inherently broad permissions
‚Ä¢ ‚ÄúTemporary fix‚Äù that becomes permanent
‚Ä¢ Look for: ReadOnlyAccess, CloudTrailReadOnlyAccess, PassRole, Network modifiers, 
Permission modifiers, AssumeRole escalations
AWS vs GCP vs Azure: default permissions 
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #3: Defaults are a hacker‚Äôs best friend 
‚Ä¢ Azure
‚Ä¢ Built-in roles‚Ä¶ but oh so many of them
‚Ä¢ Custom role limits
‚Ä¢ Inherited permissions
‚Ä¢ Look for: Read permissions,  Assignment permissions (self-assignment)
AWS vs GCP vs Azure: default permissions 
#BHUSA @BlackHatEvents
Information Classification: General
Lesson #3: Defaults are a hacker‚Äôs best friend 
‚Ä¢ GCP
‚Ä¢ Inherited permissions by scope
‚Ä¢ Legacy roles have strong and broad permissions (Viewer)
‚Ä¢ Legacy mechanism: Access Scopes
AWS vs GCP vs Azure: default permissions 
#BHUSA @BlackHatEvents
Practical Practices for Defenders
#BHUSA @BlackHatEvents
Information Classification: General
‚Ä¢ Two approaches
‚Ä¢ Bottom-up or Top-Down
‚Ä¢ Clay is hard √† have to know exactly what you need
‚Ä¢ Marble is hard √† have to prove a negative
‚Ä¢ Most people choose Marble, and then never cut down permissions
Clay or Marble
#BHUSA @BlackHatEvents
Information Classification: General
‚Ä¢ AWS Account/GCP Project/Azure resource group separation per workload
‚Ä¢ Avoid permanent credentials when possible
‚Ä¢ Secure human identities
Limit the effect of mistakes
#BHUSA @BlackHatEvents
Information Classification: General
Log more, audit better
‚Ä¢ Log whatever you can
‚Ä¢ Use audit to build a stronger security policy 
‚Ä¢ Challenges: opaque APIs and distributed logging
#BHUSA @BlackHatEvents
Information Classification: General
Limits of logging
‚Ä¢ The unlogged and the un-loggable:
‚Ä¢ Azure read actions, distributed logging
‚Ä¢ AWS cross-account actions & failures, passive recon, some data actions, session name 
manipulation, CloudTrail manipulation
#BHUSA @BlackHatEvents
DEMO
#BHUSA @BlackHatEvents
Takeaways
#BHUSA @BlackHatEvents
Information Classification: General
Questions?