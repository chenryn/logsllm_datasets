辑行为。本节将介绍一些可以集成到脚本中基本命令和功能。
19.2.1更多的替换选项
你已经懂得了如何用s命令（substitute）来在行中替换文本。这个命令还有另外一些选
项能让事情变得更为简单。
1.替换标记
关于替换命令如何替换字符串中所匹配的模式需要注意一点。看看下面这个例子中会出现什
么情况。
This la a teat of the teat scrlpt.
S cat data4.txt
This le the second teat ot the test script.
Thia la a trlal of the test scrlpt.
S sed *s/test/trial/' data4.txt
This la the second trlal of the teat acrlpt.
替换命令在替换多行中的文本时能正常工作，但默认情况下它只替换每行中出现的第一处。
要让替换命令能够替换一行中不同地方出现的文本必须使用替换标记（substitution flag）。替换标
记会在替换命令字符串之后设置。
α/pattern/repzacenent/flaga
有4种可用的替换标记：
口数字，表明新文本将替换第几处模式匹配的地方：
口g，表明新文本将会替换所有匹配的文本；
口p，表明原先行的内容要打印出来；
wfile，将替换的结果写到文件中。
在第一类替换中，可以指定sed编辑器用新文本替换第几处模式匹配的地方。
 sed *a/teat/trlal/2* data4.txt
This ls the second test of the txial scrlpt.
Thla la a Ceat of the trial scrlpt.
将替换标记指定为2的结果就是：sed编辑器只替换每行中第二次出现的匹配模式。g替换标
记使你能替换文本中匹配模式所匹配的每处地方。
S sed *a/test/trial/g* data4.txt
This la the second trlal of the trial script,
Thia la a trlal of the trlal script,
---
## Page 426
19.2sed编辑器基础
IIt
p替换标记会打印与替换命令中指定的模式匹配的行。这通常会和sed的-n选项一起使用。
S cat data5.txt
This is a different line
Thie is a test line
Ssed -n's/test/trial/p' data5.txt
This is a trial line.
-n选项将禁止sed编辑器输出。但p替换标记会输出修改过的行。将二者配合使用的效果就是
只输出被替换命令修改过的行。
w替换标记会产生同样的输出，不过会将输出保存到指定文件中。
S sed 's/test/trial/w test.txt' data5.txt
This is a different line.
Thie is a trial line.
cat test.txt
This is a trial line.
sed编辑器的正常输出是在STDOUT中，而只有那些包含匹配模式的行才会保存在指定的输出
文件中。
2.替换字符
有时你会在文本字符串中遇到一些不太方便在替换模式中使用的字符。Limux中一个常见的
例子就是正斜线（/）。
替换文件中的路径名会比较麻烦。比如，如果想用C shell替换/etc/passwd文件中的bash shell，
必须这么做：
S sed 's/\/bin\/bash/\/bin\/csh/* /etc/pasawd
由于正斜线通常用作字符串分隔符，因面如果它出现在了模式文本中的话，必须用反斜线来
转义。这通常会带来一些困惑和错误。
要解决这个问题，sed编辑器允许选择其他字符来作为替换命令中的字符串分隔符：
S sed 'a1/bin/bash1/bin/csh1' /etc/passwd
在这个例子中，感叹号被用作字符串分隔符，这样路径名就更容易阅读和理解了。
19.2.2使用地址
默认情况下，在sed编辑器中使用的命令会作用于文本数据的所有行。如果只想将命令作用
于特定行或某些行，则必须用行寻址（line addressing）。
在sed编辑器中有两种形式的行寻址：
口以数字形式表示行区间
口用文本模式来过滤出行
---
## Page 427
412
第19章初识sed和gawk
两种形式都使用相同的格式来指定地址：
[ address] cormand
也可以将特定地址的多个命令分组：
address {
cormand1
cormand2
cormand3
sed编辑器会将指定的每条命令作用到匹配指定地址的行上。本节将会演示如何在sed编辑器
脚本中使用两种寻址方法。
1.数字方式的行寻址
当使用数字方式的行寻址时，可以用行在文本流中的行位置来引用。sed编辑器会将文本流
中的第一行编号为1，然后继续按顺序为接下来的行分配行号。
在命令中指定的地址可以是单个行号，或是用起始行号、逗号以及结尾行号指定的一定区间
范围内的行。这里有个sed命令作用到指定行号的例子。
sed*2s/dog/cat/' datal.txt
The quick browm fox junpe over the lazy dog
The quick browm fox jumps over the lazy cat
The quick browm fox junps over the lazy dog
The quick brown fox
jumps over the lazy
Eop
sed编辑器只修改地址指定的第二行的文本。这里有另一个例子，这次使用了行地址区间。
sed*2,3s/dog/cat/.data1.txt
The quick browm fox junps over the lazy dog
The quick browm fox junps over the lazy
The quick brown fox junpe over the lazy cat
The quick brown fox junps over the lazy dog
cat
如果想将命令作用到文本中从某行开始的所有行，可以用特殊地址一美元符。
S sed '2,$a/dog/cat/* data1.txt
The qulck brown fox Juanpa over the Lazy dog
The qulck brown fox Junpe over the lazy cat
The qulck brown fox Jumpa over the lazy
The qulck brown fox junpe over the lazy cat
cat
可能你并不知道文本中到底有多少行数据，因此美元符用起来通常很方便。
2.使用文本模式过滤器
另一种限制命令作用到哪些行上的方法会稍稍复杂一些。sed编辑器允许指定文本模式来过
滤出命令要作用的行。格式如下：
/pac tern/cormand
必须用正斜线将要指定的pattern封起来。sed编辑器会将该命令作用到包含指定文本模式
---
## Page 428
19.2sed 编辑器基础
413
的行上。
举个例子，如果你想只修改用户Samantha的默认shell，可以使用sed命令。
S grep Samsnths /ete/passwd
Sanantha 1x 1502 : 502:1/home/Samantha1 /bi.n/bash
$ sed */Samantha/s/bash/csh/* /etc/passwd
root 1x10: 01root 1/root 1/bin/bash
bin1x11:1 :bin1/bin1 /sbin/nologin
[. . .]
Christine1x:501 :501:Christine B:/home/Christine:/bin/bash
Tinothy :x1 503 :503:1/home/Tinothy :/bin/ba.sh
Sanantha 1x1502 : 502 t 1 /home /Samant:ha1 /lbin/csh
该命令只作用到匹配文本模式的行上。虽然使用固定文本模式能帮你过滤出特定的值，就跟
上面这个用户名的例子一样，但其作用难免有限。sed编辑器在文本模式中采用了一种称为正则
19
表达式（regularexpression）的特性来帮助你创建匹配效果更好的模式。
正则表达式允许创建高级文本模式匹配表达式来匹配各种数据。这些表达式结合了一系列通
配符、特殊字符以及固定文本字符来生成能够匹配几乎任何形式文本的简练模式。正则表达式是
shell脚本编程中令人心生退意的部分之一，第20章将会详细介绍相关内容。
3.命令组合
如果需要在单行上执行多条命令，可以用花括号将多条命令组合在一起。sed编辑器会处理
地址行处列出的每条命令。
S sed *2{
>s/fox/elepbant/
> s/dog/cat/
The quick brown fox jumps over the lazy dog.
>}′datal.txt
The quick brown elephant jumps over the lazy cat,
The quick brown fox jumps over the lazy dog.
The quick brown fox junps over the lazy dog.
两条命令都会作用到该地址上。当然，也可以在一组命令前指定一个地址区间。
S sed *3,${
> s/brown/green/
> s/lazy/active/
The quick bron fox junps over the lazy dog.
>}'datal.txt
The quick brown fox jumps over the lazy dog.
The quick green fox junps over the active dog.
The quick green
1 fox junps over
the active dog
sed编辑器会将所有命令作用到该地址区间内的所有行上。
---
## Page 429
414
第19章初识sed和gawk
19.2.3删除行
文本替换命令不是sed编辑器唯一的命令。如果需要删除文本流中的特定行，可以用删除
命令。
删除命令a名副其实，它会删除匹配指定寻址模式的所有行。使用该命令时要特别小心，如
果你忘记加人寻址模式的话，流中的所有文本行都会被制除。
The qu1.ck brownfox Jumpaoverthe lazy Gog
S cat datal.txt
The qulck brown fox Junpa over the lazy dog
The qulck brown fox junpa over the Lazy dog
The qulck brown fox junpa over the lazy dog
 sed *d' datal.txt
当和指定地址一起使用时，删除命令显然能发挥出最大的功用。可以从数据流中删除特定的
文本行，通过行号指定：
 cat data6.txt
This 1a line nunber 2.
Thia la line nunber 1.
This le 1ine nunber
Thia lg line nunber 4.
3 .
 sed *3d* data6.txt
Thia la line nunber 1.
Thia la line nunber
Thia ls line nunber 4.
2 .
$
或者通过特定行区间指定：
 sed *2,3d* data6.txt
This Ia 1ine nunber 1.
Thia la line nunber 4.
或者通过特殊的文件结尾字符：
S sed *3,$d* data6.txt
Thia la line nunber 2.
Thia ls line nunber 1.
sed编辑器的模式匹配特性也适用于删除命令。
 sed •/number 1/d' data5.txt
This Ls 1ine munber 3.
Thla la line nunber 2.
This ls line nunber 4,
sed编辑器会删掉包含匹配指定模式的行。
---
## Page 430
19.2sed 编辑器基础
415
说明记住，sed编辑器不会修改原始文件。你删除的行只是从sed编辑器的输出中消失了。原始
文件仍然包含那些“删掉的”行。
也可以使用两个文本模式来删除某个区间内的行，但这么做时要小心。你指定的第一个模式
会“打开”行删除功能，第二个模式会“关闭”行删除功能。sed编辑器会删除两个指定行之间
的所有行（包括指定的行）。
qxa*geaep P/c/*/t/. peα S
This is line number 4.
除此之外，你要特别小心，因为只要sed编辑器在数据流中匹配到了开始模式，删除功能就
会打开。这可能会导致意外的结果。
S cat data7.txt
19
Thie is line number 1.
This is line number
This is line number
2
This is line number 4.
3
This is line number l again.
This is text you want to keep.
This is the last line in the file
S sed */1/,/3/d' data7.txt
This is line nunber 4.
第二个出现数字“1”的行再次触发了删除命令，因为没有找到停止模式，所以就将数据流
中的剩余行全部删除了。当然，如果你指定了一个从未在文本中出现的停止模式，显然会出现另
外一个问题。
$ sed */1/,/5/d' data7.txt
因为删除功能在匹配到第一个模式的时候打开了，但一直没匹配到结束模式，所以整个数据
流都被删掉了。
19.2.4插入和附加文本
如你所期望的，跟其他编辑器类似，sed编辑器允许向数据流插人和附加文本行。两个操作
的区别可能比较让人费解：
口插人（insert）命令（i）会在指定行前增加一个新行；
口附加（append）命令（a）会在指定行后增加一个新行。
这两条命令的费解之处在于它们的格式。它们不能在单个命令行上使用。你必须指定是要将
行插入还是附加到另一行。格式如下：
sed  [address] command’
---
## Page 431
416
第19章初识sed和gawk
new Iine *
newline中的文本将会出现在sed编辑器输出中你指定的位置。记住，当使用插人命令时，
文本会出现在数据流文本的前面。
Test Line 2
Test Line 1
当使用附加命令时，文本会出现在数据流文本的后面。
S echo *Test Line 2* | sed 'a\Test Line 1'
Test Line 2
Test Llne 1
在命令行界面提示符上使用sed编辑器时，你会看到次提示符来提醒输人新的行数据。你必
须在该行完成sed编辑器命令。一旦你输人了结尾的单引号，bash shell就会执行该命令。
S echo *Test Line 2* |sed 'i\
> Test Line 1'
Test Line 2
Test Line 1
这样能够给数据流中的文本前面或后面添加文本，但如果要向数据流内部添加文本呢？
要向数据流行内部插人或附加数据，你必须用寻址来告诉sed编辑器你想让数据出现在什么
位置。可以在用这些命令时只指定一个行地址。可以匹配一个数字行号或文本模式，但不能用地
址区间。这合乎逻辑，因为你只能将文本插人或附加到单个行的前面或后面，面不是行区间的前
面或后面。
下面的例子是将一个新行插人到数据流第三行前。
> This is an inserted line.' data6.txt
$ sed *3i\
Thla la line number 1,
This la an lnserted line.
This la line nunber
2 .
This la line nunber 3.
Thia la line nunber 4.
下面的例子是将一个新行附加到数据流中第三行后。
> This is an appended line.' data6.txt
S sed *3a\
This la line nunber 1.
Thia 1a line nunber
Thia la line nunber
2 .
This 1a an appended 1ine.
3 .
Thia la line number 4.