title:Online Tracking: A 1-million-site Measurement and Analysis
author:Steven Englehardt and
Arvind Narayanan
Online Tracking:
A 1-million-site Measurement and Analysis
Steven Englehardt
Princeton University 
Arvind Narayanan
Princeton University
This is an extended version of our paper that appeared at ACM CCS 2016. 
ABSTRACT 
We  present  the  largest  and  most  detailed  measurement  of 
online  tracking  conducted  to  date,  based  on  a  crawl  of  the 
top  1  million  websites.  We  make  15  types  of  measurements 
on  each  site,  including  stateful  (cookie-based)  and  stateless 
(ﬁngerprinting-based) tracking, the eﬀect of browser privacy 
tools,  and  the  exchange  of  tracking  data  between  diﬀerent 
sites  (“cookie  syncing”).  Our  ﬁndings  include  multiple  so­
phisticated ﬁngerprinting techniques never before measured 
in the wild. 
This  measurement  is  made  possible  by  our  open-source 
web privacy measurement tool, OpenWPM1, which uses an 
automated  version  of  a  full-ﬂedged  consumer  browser.  It 
supports parallelism for speed and scale, automatic recovery 
from failures of the underlying browser, and comprehensive 
browser  instrumentation.  We  demonstrate  our  platform’s 
strength in enabling researchers to rapidly detect, quantify, 
and characterize emerging online tracking behaviors. 
1.  INTRODUCTION 
Web privacy measurement — observing websites and ser­
vices to detect, characterize and quantify privacy-impacting 
behaviors  —  has  repeatedly  forced  companies  to  improve 
their  privacy  practices  due  to  public  pressure,  press  cov­
erage,  and  regulatory  action  [5,  15].  On  the  other  hand, 
web  privacy  measurement  presents  formidable  engineering 
and  methodological  challenges.  In  the  absence  of  a  generic 
tool,  it  has  been  largely  conﬁned  to  a  niche  community  of 
researchers. 
We  seek  to  transform  web  privacy  measurement  into  a 
widespread practice by creating a tool that is useful not just 
to  our  colleagues  but  also  to  regulators,  self-regulators,  the 
press, activists, and website operators, who are often in the 
dark  about  third-party  tracking  on  their  own  domains.  We 
also  seek  to  lessen  the  burden  of  continual  oversight  of  web 
tracking  and  privacy,  by  developing  a  robust  and  modular 
platform for repeated studies. 
OpenWPM (Section 3) solves three key systems challenges 
faced  by  the  web  privacy  measurement  community.  It  does 
so by building on the strengths of past work, while avoiding 
the  pitfalls  made  apparent  in  previous  engineering  eﬀorts. 
(1) We achieve scale through parallelism and robustness by 
utilizing isolated measurement processes similar to FPDetec­
tive’s  platform  [2],  while  still  supporting  stateful  measure­
ments.  We’re able to scale to 1 million sites, without having 
to  resort  to  a  stripped-down  browser  [31]  (a  limitation  we 
explore  in  detail  in  Section  3.3).  (2)  We  provide  compre­
hensive  instrumentation  by  expanding  on  the  rich  browser 
extension  instrumentation  of  FourthParty  [33],  without  re­
quiring  the  researcher  to  write  their  own  automation  code. 
(3)  We  reduce  duplication  of  work  by  providing  a  modular 
architecture to enable code re-use between studies. 
Solving these problems is hard because the web is not de­
signed  for  automation  or  instrumentation.  Selenium,2  the 
main  tool  for  automated  browsing  through  a  full-ﬂedged 
browser,  is  intended  for  developers  to  test  their  own  web­
sites.  As  a  result  it  performs  poorly  on  websites  not  con­
trolled  by  the  user  and  breaks  frequently  if  used  for  large-
scale  measurements.  Browsers  themselves  tend  to  suﬀer 
memory  leaks  over  long  sessions.  In  addition,  instrument­
ing  the  browser  to  collect  a  variety  of  data  for  later  analy­
sis  presents  formidable  challenges.  For  full  coverage,  we’ve 
found it necessary to have three separate measurement points: 
a network proxy, a browser extension, and a disk state mon­
itor.  Further,  we  must  link  data  collected  from  these  dis­
parate  points  into  a  uniform  schema,  duplicating  much  of 
the browser’s own internal logic in parsing traﬃc. 
A  large-scale  view  of  web  tracking  and  privacy. 
In this paper we report results from a January 2016 mea­
surement  of  the  top  1  million  sites  (Section  4).  Our  scale 
enables  a  variety  of  new  insights.  We  observe  for  the  ﬁrst 
time  that  online  tracking  has  a “long  tail”,  but  we  ﬁnd  a 
surprisingly  quick  drop-oﬀ  in  the  scale  of  individual  track­
ers:  trackers  in  the  tail  are  found  on  very  few  sites  (Sec­
tion 5.1).  Using a new metric for quantifying tracking (Sec­
tion 5.2), we ﬁnd that the tracking-protection tool Ghostery 
(https://www.ghostery.com/) is eﬀective, with some caveats 
(Section 5.5).  We quantify the impact of trackers and third 
parties on HTTPS deployment (Section 5.3) and show that 
cookie syncing is pervasive (Section 5.6). 
Turning to browser ﬁngerprinting, we revisit an inﬂuential 
2014 study on canvas ﬁngerprinting [1] with updated and im­
proved  methodology  (Section  6.1).  Next,  we  report  on  sev­
eral  types  of  ﬁngerprinting  never  before  measured  at  scale: 
font ﬁngerprinting using canvas (which is distinct from can­
vas ﬁngerprinting;  Section 6.2), and ﬁngerprinting by abus­
ing the WebRTC API (Section 6.3), the Audio API (Section 
6.4),  and  the  Battery  Status  API  (6.5).  Finally,  we  show 
that  in  contrast  to  our  results  in  Section  5.5,  existing  pri­
vacy  tools  are  not  eﬀective  at  detecting  these  newer  and 
more obscure ﬁngerprinting techniques. 
1https://github.com/citp/OpenWPM 
2
http://www.seleniumhq.org/ 
Overall,  our  results  show  cause  for  concern,  but  also  en­
couraging signs.  In particular, several of our results suggest 
that  while  online  tracking  presents  few  barriers  to  entry, 
trackers in the tail of the distribution are found on very few 
sites  and  are  far  less  likely  to  be  encountered  by  the  av­
erage  user.  Those  at  the  head  of  the  distribution,  on  the 
other  hand,  are  owned  by  relatively  few  companies  and  are 
responsive to the scrutiny resulting from privacy studies. 
We  envision  a  future  where  measurement  provides  a  key 
layer  of  oversight  of  online  privacy.  This  will  be  especially 
important  given  that  perfectly  anticipating  and  preventing 
all possible privacy problems (whether through blocking tools 
or  careful  engineering  of  web  APIs)  has  proved  infeasible. 
To  enable  such  oversight,  we  plan  to  make  all  of  our  data 
publicly  available  (OpenWPM  is  already  open-source).  We 
expect that measurement will be useful to developers of pri­
vacy tools, to regulators and policy makers, journalists, and 
many others. 
2.  BACKGROUND AND RELATED WORK 
Background:  third-party  online  tracking.  As  users 
browse and interact with websites, they are observed by both 
“ﬁrst parties,” which are the sites the user visits directly, and 
“third  parties” which  are  typically  hidden  trackers  such  as 
ad  networks  embedded  on  most  web  pages.  Third  parties 
can  obtain  users’  browsing  histories  through  a  combination 
of  cookies  and  other  tracking  technologies  that  allow  them 
to uniquely identify users, and the “referer” header that tells 
the  third  party  which  ﬁrst-party  site  the  user  is  currently 
visiting.  Other sensitive information such as email addresses 
may also be leaked to third parties via the referer header. 
Web  privacy  measurement  platforms.  The  closest 
comparisons to OpenWPM are other open web privacy mea­
surement  platforms,  which  we  now  review.  We  consider  a 
tool  to  be  a  platform  if  is  is  publicly  available  and  there  is 
some generality to the types of studies that can be performed 
using  it.  In some  cases,  OpenWPM has  directly  built  upon 
existing platforms, which we make explicit note of. 
FPDetective  is  the  most  similar  platform  to  OpenWPM. 
FPDetective uses a hybrid PhantomJS and Chromium based 
automation infrastructure [2], with both native browser code 
and a proxy for instrumentation.  In the published study, the 
platform  was  used  for  the  detection  and  analysis  of  ﬁnger-
printers, and much of the included instrumentation was built 
to support that.  The platform allows researchers to conduct 
additional  experiments  by  replacing  a  script  which  is  exe­
cuted  with  each  page  visit,  which  the  authors  state  can  be 
easily extended for non-ﬁngerprinting studies. 
OpenWPM diﬀers in several ways from FPDetective:  (1) 
it supports both stateful and stateless measurements, whereas 
FPDetective  only  supports  stateless  (2)  it  includes  generic 
instrumentation for both stateless and stateful tracking, en­
abling  a  wider  range  of  privacy  studies  without  additional 
changes to the infrastructure (3) none of the included instru­
mentation requires native browser code, making it easier to 
upgrade to new or diﬀerent versions of the browser, and (4) 
OpenWPM  uses  a  high-level  command-based  architecture, 
which supports command re-use between studies. 
Chameleon Crawler is a Chromium based crawler that uti­
lizes the Chameleon3  browser extension for detecting browser 
ﬁngerprinting.  Chameleon Crawler uses similar automation 
3https://github.com/ghostwords/chameleon 
components,  but  supports  a  subset  of  OpenWPM’s  instru­
mentation. 
FourthParty  is  a  Firefox  plug-in  for  instrumenting  the 
browser  and  does  not  handle  automation  [33].  OpenWPM 
has  incorporated  and  expanded  upon  nearly  all  of  Fourth­
Party’s instrumentation (Section 3). 
WebXray is a PhantomJS based tool for measuring HTTP 
traﬃc [31].  It has been used to study third-party inclusions 
on  the  top  1  million  sites,  but  as  we  show  in  Section  3.3, 
measurements  with  a  stripped-down  browser  have  the  po­
tential to miss a large number of resource loads. 
TrackingObserver is a Chrome extension that detects track­
ing and exposes APIs for extending its functionality such as 
measurement and blocking [48]. 
XRay  [27]  and  AdFisher  [9]  are  tools  for  running  auto­
mated personalization detection experiments.  AdFisher builds 
on similar technologies as OpenWPM (Selenium, xvfb), but 
is not intended for tracking measurements. 
Common  Crawl4  uses  an  Apache  Nutch  based  crawler. 
The Common Crawl dataset is the largest publicly available 
web crawl5, with billions of page visits.  However, the crawler 
used  does  not  execute  Javascript  or  other  dynamic  content 
during  a  page  visit.  Privacy  studies  which  use  the  dataset 
[49]  will  miss  dynamically  loaded  content,  which  includes 
many advertising resources. 
Crowd-sourcing  of  web  privacy  and  personalization  mea­
surement  is  an  important  alternative  to  automated  brows­
ing.  $heriﬀ and Bobble are two platforms for measuring per­
sonalization  [35,  65].  Two  major  challenges  are  participant 
privacy  and  providing  value  to  users  to  incentivize  partici­
pation. 
Previous  ﬁndings.  Krishnarmurthy and Wills [24] pro­
vide much of the early insight into web tracking, showing the 
growth of the largest third-party organizations from 10% to 
20-60% of top sites between 2005 and 2008.  In the following 
years, studies show a continual increase in third-party track­
ing  and  in  the  diversity  of  tracking  techniques  [33,  48,  20, 
2, 1, 4].  Lerner et al.  also ﬁnd an increase in the prevalence 
and  complexity  of  tracking,  as  well  as  an  increase  in  the 
interconnectedness  of  the  ecosystem  by  analyzing  Internet 
Archive  data  from  1996  to  2016  [29].  Fruchter  et  al.  stud­
ied  geographic  variations  in  tracking  [17].  More  recently, 
Libert studied third-party HTTP requests on the top 1 mil­
lion sites [31], providing view of tracking across the web.  In 
this study, Libert showed that Google can track users across 
nearly 80% of sites through its various third-party domains. 
Web tracking has expanded from simple HTTP cookies to 
include  more  persistent  tracking  techniques.  Soltani  et  al. 
ﬁrst  examined  the  use  of  ﬂash  cookies  to “respawn” or  re-
instantiate  HTTP  cookies  [53],  and  Ayenson  et  al.  showed 
how  sites  were  using  cache  E-Tags  and  HTML5  localStor­
age for the same purpose [6].  These discoveries led to media 
backlash  [36,  30]  and  legal  settlements  [51,  10]  against  the 
companies  participating  in  the  practice.  However  several 
follow  up  studies  by  other  research  groups  conﬁrmed  that, 
despite  a  reduction  in  usage  (particularly  in  the  U.S.),  the 
technique is still used for tracking [48, 34, 1]. 
Device  ﬁngerprinting  is  a  persistent  tracking  technique 
which does not require a tracker to set any state in the user’s 
4https://commoncrawl.org 
5https://aws.amazon.com/public-data-sets/common­
crawl/ 
browser.  Instead,  trackers  attempt  to  identify  users  by  a 
combination  of  the  device’s  properties.  Within  samples  of 
over 100,000 browsers, 80-90% of desktop and 81% of mobile 
device  ﬁngerprints  are  unique  [12,  26].  New  ﬁngerprinting 
techniques  are  continually  discovered  [37,  43,  16],  and  are 
subsequently  used  to  track  users  on  the  web  [41,  2,  1].  In 
Section 6.1 we present several new ﬁngerprinting techniques 
discovered during our measurements. 
Personalization measurement.  Measurement of track­
ing  is  closely  related  to  measurement  of  personalization, 
since the question of what data is collected leads to the ques­
tion of how that data is used.  The primary purpose of online 
tracking  is  behavioral  advertising  —  showing  ads  based  on 
the  user’s  past  activity.  Datta  et  al.  highlight  the  incom­
pleteness  of  Google’s  Ad  Settings  transparency  page  and 
provide  several  empirical  examples  of  discriminatory  and 
predatory  ads  [9].  L´ecuyer  et  al.  develop  XRay,  a  system 
for inferring which pieces of user data are used for personal­
ization [27].  Another system by some of the same authors is 
Sunlight  which  improves  upon  their  previous  methodology 