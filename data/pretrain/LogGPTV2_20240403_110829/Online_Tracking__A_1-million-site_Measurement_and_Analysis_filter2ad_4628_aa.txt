# Online Tracking: A 1-Million-Site Measurement and Analysis

**Authors:**
- Steven Englehardt, Princeton University
- Arvind Narayanan, Princeton University

**Abstract:**
We present the most extensive and detailed study of online tracking to date, based on a crawl of the top 1 million websites. Our analysis includes 15 types of measurements, such as stateful (cookie-based) and stateless (fingerprinting-based) tracking, the effectiveness of browser privacy tools, and the exchange of tracking data between different sites ("cookie syncing"). Our findings reveal several sophisticated fingerprinting techniques that have not been previously documented in the wild.

This study is made possible by our open-source web privacy measurement tool, OpenWPM, which uses an automated version of a full-featured consumer browser. OpenWPM supports parallelism for speed and scale, automatic recovery from browser failures, and comprehensive browser instrumentation. We demonstrate how our platform enables researchers to rapidly detect, quantify, and characterize emerging online tracking behaviors.

## 1. Introduction
Web privacy measurement—observing websites and services to detect, characterize, and quantify privacy-impacting behaviors—has repeatedly forced companies to improve their privacy practices due to public pressure, press coverage, and regulatory action [5, 15]. However, web privacy measurement presents significant engineering and methodological challenges. In the absence of a generic tool, it has largely remained within a niche community of researchers.

Our goal is to transform web privacy measurement into a widespread practice by creating a tool that is useful not only to researchers but also to regulators, self-regulators, the press, activists, and website operators. These groups are often unaware of third-party tracking on their own domains. Additionally, we aim to reduce the burden of continual oversight of web tracking and privacy by developing a robust and modular platform for repeated studies.

OpenWPM (Section 3) addresses three key system challenges faced by the web privacy measurement community:
1. **Scale and Robustness:** We achieve this through parallelism and isolated measurement processes, similar to FPDetector's platform [2], while supporting stateful measurements. This allows us to scale to 1 million sites without resorting to a stripped-down browser [31] (a limitation explored in Section 3.3).
2. **Comprehensive Instrumentation:** We expand on the rich browser extension instrumentation of FourthParty [33], eliminating the need for researchers to write their own automation code.
3. **Modularity:** We provide a modular architecture to enable code reuse between studies.

Solving these problems is challenging because the web is not designed for automation or instrumentation. Selenium, the primary tool for automated browsing through a full-featured browser, is intended for developers to test their own websites. As a result, it performs poorly on websites not controlled by the user and frequently breaks when used for large-scale measurements. Browsers themselves tend to suffer memory leaks over long sessions. Additionally, instrumenting the browser to collect various data for later analysis presents significant challenges. For full coverage, we use three separate measurement points: a network proxy, a browser extension, and a disk state monitor. We must also link data collected from these disparate points into a uniform schema, duplicating much of the browser's internal logic in parsing traffic.

### A Large-Scale View of Web Tracking and Privacy
In this paper, we report results from a January 2016 measurement of the top 1 million sites (Section 4). Our scale enables several new insights. We observe for the first time that online tracking has a "long tail," but we find a surprisingly quick drop-off in the scale of individual trackers: trackers in the tail are found on very few sites (Section 5.1). Using a new metric for quantifying tracking (Section 5.2), we find that the tracking-protection tool Ghostery (https://www.ghostery.com/) is effective, with some caveats (Section 5.5). We quantify the impact of trackers and third parties on HTTPS deployment (Section 5.3) and show that cookie syncing is pervasive (Section 5.6).

Turning to browser fingerprinting, we revisit an influential 2014 study on canvas fingerprinting [1] with updated and improved methodology (Section 6.1). Next, we report on several types of fingerprinting never before measured at scale: font fingerprinting using canvas (distinct from canvas fingerprinting; Section 6.2), and fingerprinting by abusing the WebRTC API (Section 6.3), the Audio API (Section 6.4), and the Battery Status API (Section 6.5). Finally, we show that, in contrast to our results in Section 5.5, existing privacy tools are not effective at detecting these newer and more obscure fingerprinting techniques.

Overall, our results show cause for concern but also encouraging signs. Several of our results suggest that while online tracking presents few barriers to entry, trackers in the tail of the distribution are found on very few sites and are far less likely to be encountered by the average user. Those at the head of the distribution, on the other hand, are owned by relatively few companies and are responsive to the scrutiny resulting from privacy studies.

We envision a future where measurement provides a key layer of oversight for online privacy. This will be especially important given that perfectly anticipating and preventing all possible privacy problems (whether through blocking tools or careful engineering of web APIs) has proven infeasible. To enable such oversight, we plan to make all of our data publicly available (OpenWPM is already open-source). We expect that measurement will be useful to developers of privacy tools, regulators and policymakers, journalists, and many others.

## 2. Background and Related Work

### Background: Third-Party Online Tracking
As users browse and interact with websites, they are observed by both "first parties" (the sites the user visits directly) and "third parties" (typically hidden trackers such as ad networks embedded on most web pages). Third parties can obtain users' browsing histories through a combination of cookies and other tracking technologies that allow them to uniquely identify users, and the "referer" header, which tells the third party which first-party site the user is currently visiting. Other sensitive information, such as email addresses, may also be leaked to third parties via the referer header.

### Web Privacy Measurement Platforms
The closest comparisons to OpenWPM are other open web privacy measurement platforms, which we now review. We consider a tool to be a platform if it is publicly available and can perform a variety of studies. In some cases, OpenWPM has directly built upon existing platforms, which we explicitly note.

**FPDetective** is the most similar platform to OpenWPM. FPDetective uses a hybrid PhantomJS and Chromium-based automation infrastructure [2], with both native browser code and a proxy for instrumentation. In the published study, the platform was used for the detection and analysis of fingerprinters, and much of the included instrumentation was built to support that. The platform allows researchers to conduct additional experiments by replacing a script executed with each page visit, which the authors state can be easily extended for non-fingerprinting studies.

OpenWPM differs from FPDetective in several ways:
1. **Stateful and Stateless Measurements:** OpenWPM supports both stateful and stateless measurements, whereas FPDetective only supports stateless.
2. **Generic Instrumentation:** OpenWPM includes generic instrumentation for both stateless and stateful tracking, enabling a wider range of privacy studies without additional changes to the infrastructure.
3. **No Native Browser Code Required:** None of the included instrumentation requires native browser code, making it easier to upgrade to new or different versions of the browser.
4. **High-Level Command-Based Architecture:** OpenWPM uses a high-level command-based architecture, which supports command reuse between studies.

**Chameleon Crawler** is a Chromium-based crawler that utilizes the Chameleon3 browser extension for detecting browser fingerprinting. Chameleon Crawler uses similar automation components but supports a subset of OpenWPM's instrumentation.

**FourthParty** is a Firefox plug-in for instrumenting the browser and does not handle automation [33]. OpenWPM has incorporated and expanded upon nearly all of FourthParty's instrumentation (Section 3).

**WebXray** is a PhantomJS-based tool for measuring HTTP traffic [31]. It has been used to study third-party inclusions on the top 1 million sites, but as we show in Section 3.3, measurements with a stripped-down browser have the potential to miss a large number of resource loads.

**TrackingObserver** is a Chrome extension that detects tracking and exposes APIs for extending its functionality, such as measurement and blocking [48].

**XRay [27] and AdFisher [9]** are tools for running automated personalization detection experiments. AdFisher builds on similar technologies as OpenWPM (Selenium, xvfb) but is not intended for tracking measurements.

**Common Crawl** uses an Apache Nutch-based crawler. The Common Crawl dataset is the largest publicly available web crawl, with billions of page visits. However, the crawler does not execute JavaScript or other dynamic content during a page visit. Privacy studies using the dataset [49] will miss dynamically loaded content, which includes many advertising resources.

**Crowdsourcing of Web Privacy and Personalization Measurement** is an important alternative to automated browsing. $heriff and Bobble are two platforms for measuring personalization [35, 65]. Two major challenges are participant privacy and providing value to users to incentivize participation.

### Previous Findings
Krishnarmurthy and Wills [24] provided early insight into web tracking, showing the growth of the largest third-party organizations from 10% to 20-60% of top sites between 2005 and 2008. In the following years, studies showed a continual increase in third-party tracking and the diversity of tracking techniques [33, 48, 20, 2, 1, 4]. Lerner et al. also found an increase in the prevalence and complexity of tracking, as well as an increase in the interconnectedness of the ecosystem by analyzing Internet Archive data from 1996 to 2016 [29]. Fruchter et al. studied geographic variations in tracking [17]. More recently, Libert studied third-party HTTP requests on the top 1 million sites [31], providing a view of tracking across the web. In this study, Libert showed that Google can track users across nearly 80% of sites through its various third-party domains.

Web tracking has expanded from simple HTTP cookies to include more persistent tracking techniques. Soltani et al. first examined the use of flash cookies to "respawn" or reinstantiate HTTP cookies [53], and Ayenson et al. showed how sites were using cache E-Tags and HTML5 localStorage for the same purpose [6]. These discoveries led to media backlash [36, 30] and legal settlements [51, 10] against the companies participating in the practice. However, several follow-up studies by other research groups confirmed that, despite a reduction in usage (particularly in the U.S.), the technique is still used for tracking [48, 34, 1].

**Device Fingerprinting** is a persistent tracking technique that does not require a tracker to set any state in the user's browser. Instead, trackers attempt to identify users by a combination of the device's properties. Within samples of over 100,000 browsers, 80-90% of desktop and 81% of mobile device fingerprints are unique [12, 26]. New fingerprinting techniques are continually discovered [37, 43, 16] and are subsequently used to track users on the web [41, 2, 1]. In Section 6.1, we present several new fingerprinting techniques discovered during our measurements.

### Personalization Measurement
Measurement of tracking is closely related to the measurement of personalization, as the question of what data is collected leads to the question of how that data is used. The primary purpose of online tracking is behavioral advertising—showing ads based on the user's past activity. Datta et al. highlight the incompleteness of Google's Ad Settings transparency page and provide several empirical examples of discriminatory and predatory ads [9]. Lécuyer et al. develop XRay, a system for inferring which pieces of user data are used for personalization [27]. Another system by some of the same authors is Sunlight, which improves upon their previous methodology.