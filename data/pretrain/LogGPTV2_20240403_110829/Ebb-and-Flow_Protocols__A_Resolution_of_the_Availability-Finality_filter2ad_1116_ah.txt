Proof. Via the security of Πlc under (A∗
2,Z2), if any two
honest nodes i and j view bi and bj as conﬁrmed (at any time),
√
either bi (cid:22) bj or bj (cid:22) bi, except with probability e−Ω(
σ).
Moreover, for a BFT block to become ﬁnal in the view of an
honest node i under (A∗
2,Z2), at least one vote from an honest
node is required, and honest nodes only vote for a BFT block
if they view the referenced LC block as conﬁrmed. Hence,
given any two honest nodes i and j, if LC blocks bi and bj
are referenced by the BFT blocks Bi and Bj that are ﬁnal in
the views of i and j respectively, then either bi (cid:22) bj or bj (cid:22) bi.
This is true even if the BFT blocks Bi and Bj conﬂict with
each other in the output of Πbft (see Figure 9).
Since the LC blocks referenced by ﬁnal BFT blocks in the
view of an honest node i does not conﬂict with the LC blocks
referenced by ﬁnal BFT blocks in the view of any other honest
node j under (A∗
2,Z2) (even when these BFT blocks might
be conﬂicting), the ledgers LOGt
ﬁn,j also do not
conﬂict for i and j at any times t, t(cid:48), except with probability
√
e−Ω(
σ). Finally, since the ledgers LOGﬁn are constructed
from conﬁrmed snapshots of the preﬁx of the output of Πlc
which is safe, LOGﬁn is a safe preﬁx of the output of Πlc at
any time and in the view of any honest node under (A∗
2,Z2),
√
except with probability e−Ω(
ﬁn,i and LOGt(cid:48)
σ).
Finally, we can start the main proof for Theorem 1.
Proof. We ﬁrst observe via Lemma 1 that Πbft is safe at
1,Z1). Then, since the ledger extraction
all times under (A∗
for LOGﬁn (Section III-B3) preserves the safety of Πbft,
1,Z1) as well. Second, via Lemma 4,
LOGﬁn is safe under (A∗
there exists a constant C > 0 such that for any GST
1,Z1), LOGﬁn is live after time
and GAT speciﬁed by (A∗
√
C(max{GAT, GST} + σ) except with probability e−Ω(
σ).
1,Z1), LOGﬁn is safe with probability
Consequently, under (A∗
1 and live after time C(max{GAT, GST} + σ) except with
√
probability e−Ω(
Via [3, Theorem 3, Lemma 1], Πlc is secure with Tconﬁrm =
2,Z2) for any p  0.
In Deﬁnition 4 below, we use the same deﬁnition for the
convergence opportunity as given in [3, Sections 2.2 and 5.2].
Let A[ta, tb] and C[ta, tb] denote the number of adversarial
slots and convergence opportunities respectively, between slots
ta and tb ≥ ta.
Deﬁnition 4. A time slot t ≥ max{GST, GAT} is said
if for any ta, tb, 0 ≤ ta ≤
to be a GST-strong pivot
t ≤ tb,
the number of convergence opportunities within
[max{ta, GST, GAT}, tb] is greater than the number of ad-
versarial slots in [ta, tb], i.e.,
C[max{ta, GST, GAT}, tb] > A[ta, tb].
(8)
In the deﬁnition of GST-strong pivots, we only count
the number of convergence opportunities that happen after
max{GST, GAT}. This is because the useful properties of
convergence opportunities do not hold in an asynchronous
network, which is the case before GST, and all honest nodes
are potentially asleep before GAT.
We can now focus on the proof of Theorem 2, which
depends on the following propositions. Recall
that while
proving the propositions below, we can assume that β  0.
(19)
We conclude the proof by setting
C =
1
A,β(1 − A,β)
,
c = − ln (A,β) > 0.
(20)
Corollary 1. Given any  > 0,
the following statement
is true for any s > 1 except with probability Ce−cs:
For any GST and GAT speciﬁed by (A∗
the num-
ber of adversarial slots by max{GST, GAT} is less than
(1 + )β max{s, GST, GAT}.
Proposition 3. For any positive integer Ne,  > 0 and times
t0, t1, there exist positive constants ˜C and ˜c such that
1,Z1),
Pr[A[t0, t1] + Ne ≤ C[t0, t1]] ≥ 1 − e−˜cNe
(21)
if t (cid:44) t1 − t0 ≥ ˜CNe.
Proof follows from [3, Fact 2, Lemma 2].
Proof. Deﬁne
and, let
˜C =
1 + 
α(1 − 2pn∆) − β
,
(α(1 − 2pn∆) − β)
(1 + )(α(1 − 2pn∆) + β)
.
1 =
(22)
(23)
(24)
Proposition 1. Consider two honest nodes i and j, and, let
t, max{GST, GAT} ≤ t, be a GST-strong pivot. Then, given
any r, r(cid:48) such that r(cid:48) ≥ r > t + (σ/β), the preﬁxes ending at
time t are the same for the longest chains seen by i and j at
times r and r(cid:48).
Note that every GST-strong pivot is also a strong pivot as
given in [3, Deﬁnition 5] and the network is ∆ synchronous
after time max{GST, GAT}. Hence, the proof of Proposition 1
follows from the proof of Lemma 5 in [3].
Proposition 2. For any  > 0, there exist constants C, c > 0
such that
Pr[A[0, t]  1 − Ce−cs.
(9)
Proof. We ﬁrst consider the time sequence {tn}n≥0 given by
the following formula:
t0 = 0,
tn =
for n ≥ 1.
(10)
(cid:18) 2 + 2
(cid:19)n−1
2 + 
Let’s deﬁne En as the event that A[0, tn] > (1 + )βtn−1,
i.e., there are more than (1 + )βtn−1 adversarial slots within
the time interval [0, tn]. Similarly, let’s deﬁne Fs as the event
that for any time t ≥ s, A[0, t] ≤ (1+)βt, i.e., the number of
adversarial slots within the time interval [0, t] is smaller than
(1 + )βt for any t ≥ s.
Given these deﬁnitions, we can express F s, s > 1, in terms
En, where ns is an integer
of the events En as F s ⊆(cid:83)∞
(cid:19)ns−2 ≤ s  0 and ta, tb such that
t (cid:44) tb − ta ≥ 0,
Pr[A[ta, tb] > (1 + )βt] ≤ e− 2βt
3
.
tn =
2 + 2
2 + 
tn−1 =
1 + 
1 + /2
tn−1,
Then, as
we infer that
Pr[En] = Pr[A[0, tn] > (1 + )βtn−1]
= Pr[A[0, tn] > (1 + /2)βtn]  1,
Finally, using
tns =
Pr(cid:2)F s
(cid:3) ≤
(cid:19)ns−1 ≥ s ≥ (cid:98)s(cid:99),
∞(cid:88)
e− 2 βtn
12
Pr[En] ≤
2 + 
(cid:18) 2 + 2
∞(cid:88)
∞(cid:88)
n=ns
i=(cid:98)s(cid:99)
.
(11)
Due to [3, Fact 2], for any 0  (1 + 1)βt]  0, there exists a positive
2 such that
Pr[C[t0, t1]  C[t0, t1]]
≥ 1 − Pr[A[t0, t1] > (1 + 1)βt]
− Pr[C[t0, t1] < (1 − 1)α(1 − 2pn∆)t]
= 1 − e−2βt − e− 2
1βt
3
(27)
(28)
(29)
(30)
where t = O(Ne). Consequently, there exists a constant ˜c
such that
Pr[A[t0, t1] + Ne ≤ C[t0, t1]] ≥ 1 − e−˜cNe .
(31)
(12)
(13)
(14)
(15)
.
(16)
(17)
≤
e− 2βi
12 ≤
n=ns
1
A,β(1 − A,β)
As
,β