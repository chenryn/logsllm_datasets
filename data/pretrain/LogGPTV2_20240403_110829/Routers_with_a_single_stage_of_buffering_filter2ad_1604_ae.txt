BRS t( )
k S⁄
, i.e.,
0>
0>
3≥
–
–
–
S
k
(
)
)
(
)
k 3
ory bandwidth of 3NR. (cid:1)
1–
Remark: It is possible that an arriving cell must depart before
it can be written to the memory i.e.
. In that case
the cell is immediately transferred to the output port j, bypassing
the shared memory buffer.
B. Proof of Theorem 2
DT t j,(
t T+(
0>
Sn
1+,+
1 n
is optimal.
1+
are not. After
)
is the first
, then the first m rows of S are
will remain
Sm n
, and
1+
Bn
n
Bn
An
1+
are all zeros but those of
are not. This
n
1+
is optimal.
Bn
c. The entries of
Cn
case is similar to case (b).
and
d. The sub-matrices
Bn
Cn
both have positive entries. The
column permutation will not change row
such that it
becomes smaller than the rows below it. Similarly, the row per-
mutation following will not change column
such that it
becomes smaller than the columns on its right. So
is
optimal.
1+
1+
An
1+
n
n
After at most N iterations, or a total of
2N 1–
permutations, the
request matrix is ordered. (cid:1)
B. Proof of Theorem 7
Theorem 7: If a request matrix S is ordered, then any maximal
matching algorithm that gives strict priority to entries with lower
indices, such as the WFA [11], can find a conflict-free schedule.
263Proof: By contradiction. Suppose the scheduling algorithm cannot
find a conflict free time slot for request
. This means
m n(
, )
the entries in the mth row and those in the nth column are in
Lr
, so the sum of all the entries satisfies
Lc∪
4≥
.
Sin
(5)
Sij
∑
i
∑
j
≥
(
Lc∪ 2–
)
Lr
+
Smn
+
1–
n
∑
1=
j
Smj
m 1–
∑+
1=
i
Sin
(6)
(7)
1–
n
∑
1=
j
Smj
m 1–
∑+
1=
S′
i
Now consider the sub-matrix
, consisting of the first m rows
and the first n columns of S. Let’s look at the set of the first non-
zero entries of each row,
, and the set of the first non-zero
Lr
. Without loss of generality, suppose
entries of each column,
Lc
S′
is the only entry belonging to both sets. (If this is not true,
11
S′
and
and
,
Lc
l
columns
then we can remove the first
of
only have
. At most two of
one common entry.) Then
, also belongs to both
Lr
1–
l
Lc
to obtain a new matrix. Repeat until
rows and the first
and
1≠
k 1–
Lc∪
m n 1–+
, where
1≠
Lr
S′
Lr
k
or
=
kl
Hence we get,
≥
Sij
m n
+ +
2
∑
i
∑
j
which conflicts with property 1. (cid:1)
264