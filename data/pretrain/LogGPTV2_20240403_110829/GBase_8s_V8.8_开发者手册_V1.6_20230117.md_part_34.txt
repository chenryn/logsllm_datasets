2|joy|154320000011111111
(1row)
----结束
7.4.3 使用 JDBC 操作密态数据库
连接密态数据库
南大通用数据技术股份有限公司
198
GBase 8s V8.8开发者手册
连接密态数据库需要使用驱动包gsjdbc4.jar，具体JDBC连接参数参考基于JDBC开发
章节介绍。JDBC支持密态数据库相关操作，需要设置enable_ce=1，示例如下。
publicstaticConnectiongetConnect(Stringusername,Stringpasswd)
{
//驱动类。
Stringdriver="org.postgresql.Driver";
//数据库连接描述符。
StringsourceURL="jdbc:postgresql://10.10.0.13:15432/postgres?enable_ce=1";Connection
conn=null;
try
{
//加载驱动。Class.forName(driver);
}
catch(Exceptione)
{
e.printStackTrace();returnnull;
}
try
{
//创建连接。
conn=DriverManager.getConnection(sourceURL,username,passwd);
System.out.println("Connectionsucceed!");
}
catch(Exceptione)
{
e.printStackTrace();returnnull;
}
returnconn;
};
 【建议】使用JDBC操作密态数据库时，一个数据库连接对象对应一个线程，否则，不
同线程变更可能导致冲突。
 【建议】使用JDBC操作密态数据库时，不同connection对密态配置数据有变更，由客
户端调用isvalid方法保证connection能够持有变更后的密态配置数据，此时需要保证参
数 refreshClientEncryption 为 1(默认值为 1)，在单客户端操作密态数据场景下，
refreshClientEncryption参数可以设置为0。
使用isValid方法刷新缓存示例
// 创建客户端主密钥
南大通用数据技术股份有限公司
199
GBase 8s V8.8开发者手册
Connectionconn1=DriverManager.getConnection("url","user","password");
//conn1通过调用isValid刷新缓存try{
if(!conn1.isValid(60)){
System.out.println("isValidFailedforconnection1");
}
}catch(SQLExceptione){e.printStackTrace();
returnnull;
}
执行密态等值查询相关的创建密钥语句
// 创建客户端主密钥
Connectionconn=DriverManager.getConnection("url","user","password");Statementstmt=
conn.createStatement();
intrc=stmt.executeUpdate("CREATECLIENTMASTERKEYImgCMK1WITH
(KEY_STORE=localkms,KEY_PATH=\"key_path_value\",ALGORITHM=RSA_2048);
创建密钥之前需要使用gs_ktool工具提前生成密钥，才能创建CMK成功。
// 创建列加密密钥
intrc2=stmt.executeUpdate("CREATECOLUMNENCRYPTIONKEYImgCEK1WITH
VALUES(CLIENT_MASTER_KEY=ImgCMK1,ALGORITHM=
AEAD_AES_256_CBC_HMAC_SHA256);");
执行密态等值查询相关的创建加密表的语句
intrc3=stmt.executeUpdate("CREATETABLEcreditcard_info(id_numberint,name
varchar(50)encryptedwith(column_encryption_key=ImgCEK1,encryption_type=
DETERMINISTIC),credit_cardvarchar(19)encryptedwith(column_encryption_key=
ImgCEK1,encryption_type=DETERMINISTIC));");
// 插入数据
intrc4=stmt.executeUpdate("INSERTINTOcreditcard_infoVALUES
(1,'joe','6217986500001288393');");
// 查询加密表
ResultSetrs=null;
rs=stmt.executeQuery("select*fromcreditcard_infowherename='joe';");
// 关闭语句对象
stmt.close();
执行加密表的预编译 SQL 语句
// 调用Connection的prepareStatement方法创建预编译语句对象。
PreparedStatementpstmt=con.prepareStatement("INSERTINTOcreditcard_infoVALUES
(?,?,?);");
南大通用数据技术股份有限公司
200
GBase 8s V8.8开发者手册
// 调用PreparedStatement的setShort设置参数。
pstmt.setInt(1,2);pstmt.setString(2,"joy");
pstmt.setString(3,"62199856783491543233");
// 调用PreparedStatement的executeUpdate方法执行预编译SQL语句。
introwcount=pstmt.executeUpdate();
// 调用PreparedStatement的close方法关闭预编译语句对象。
pstmt.close();
执行加密表的批处理操作
// 调用Connection的prepareStatement方法创建预编译语句对象。
Connectionconn=DriverManager.getConnection("url","user","password");
PreparedStatementpstmt=conn.prepareStatement("INSERTINTObatch_table(id,name,
address)VALUES(?,?,?)");
// 针对每条数据都要调用setShort设置参数，以及调用addBatch确认该条设置完毕。
intloopCount=20;
for(inti=1;i'1234567890123456');
f_encrypt_in_plpgsql
----------------------
Avi
(1 row)
----结束
 函数/存储过程中的“执行动态查询语句”中的查询是在执行过程中编译，因此函数/存储
南大通用数据技术股份有限公司
202
GBase 8s V8.8开发者手册
过程中的表名、列名不能在创建阶段未知，输入参数不能用于表名、列名或以任何方式
连接。
 在RETURNS、IN和OUT的参数中，不支持混合使用加密和非加密类型参数。虽然参
数类型都是原始数据类型，但实际类型不同。
 当前版本函数/存储过程的LANGUAGE只支持SQL和PL/pgSQL，不支持C和JAVA
等其他过程语言。
 不支持在函数/存储过程中执行其他查询加密列的函数/存储过程。
 当前版本不支持default、DECLARE中为变量赋予默认值，且不支持对DECLARE中的
返回值进行解密，用户可以用执行函数时用输入参数，输出参数来代替使用。
 不支持gs_dump对涉及加密列的function进行备份。
 不支持在函数/存储过程中创建密钥。
 该版本密态函数/存储过程不支持触发器
 密态等值查询函数/存储过程不支持对plpgsql语言对语法进行转义，对于语法主体带有
引号的语法CREATEFUNCTIONAS‘语法主体'，可以用CREATEFUNCTIONAS$$语
法主体$$代替。
 不支持在密态等值查询函数/存储过程中执行修改加密列定义的操作，包括对创建加密
表，添 加加密列，由于执行函数是在服务端，客户端没法判断是否是需要刷新缓存，
得断开连接后或触发刷新客户端加密列缓存才可以对该列做加密操作。
7.5 设置账本数据库
7.5.1 账本数据库概述
背景信息
账本数据库融合了区块链思想，将用户操作记录至两种历史表中：用户历史表和全局区
块表。当用户创建防篡改用户表时，系统将自动为该表添加一个hash列来保存每行数据的
hash摘要信息，同时在blockchain模式下会创建一张用户历史表来记录对应用户表中每条数
据的变更行为；而用户对防篡改用户表的一次修改行为将记录至全局区块表中。由于历史表
具有只可追加不可修改的特点，因此历史表记录串联起来便形成了用户对防篡改用户表的修
改历史。创建防篡改用户表的操作步骤如下：
南大通用数据技术股份有限公司
203
GBase 8s V8.8开发者手册
步骤1 创建防篡改模式。
例如，创建防篡改模式ledgernsp。
gbase=# CREATE SCHEMA ledgernsp WITH BLOCKCHAIN;
步骤2 在防篡改模式下创建防篡改用户表。
例如，创建防篡改用户表ledgernsp.usertable。
gbase=# CREATE TABLE ledgernsp.usertable(id int, name text);
查看防篡改用户表结构及其对应的用户历史表结构。
gbase=# \d+ ledgernsp.usertable;
gbase=# \d+ blockchain.ledgernsp_usertable_hist;
执行结果如下：
gbase=# \d+ ledgernsp.usertable;
Table "ledgernsp.usertable"
Column | Type | Modifiers | Storage | Stats target | Description
--------+---------+-----------+----------+--------------+-------------
id | integer | | plain |
name | text | | extended |
hash | hash16| plain |
Has OIDs: no
Distribute By: HASH(id)
Location Nodes: ALL DATANODES Options: orientation=row, compression=no
History table name: ledgernsp_usertable_hist
gbase=# \d+ blockchain.ledgernsp_usertable_hist;
Table "blockchain.ledgernsp_usertable_hist"
Column | Type | Modifiers | Storage | Stats target | Description
----------+--------+-----------+---------+--------------+-------------
rec_num | bigint | | plain |
hash_ins | hash16 | | plain |
hash_del | hash16 | | plain |
pre_hash | hash32 | | plain |
Indexes:
"gs_hist_16388_index" PRIMARY KEY, btree (rec_num int4_ops) TABLESPACE
pg_default Has OIDs: no
Options: internal_mask=263
 防篡改表不支持非行存表、临时表、外表、unlog表，非行存表均无防篡改属性。
 防篡改表在创建时会自动增加一个名为hash的系统列，所以防篡改表单表最大列数为
南大通用数据技术股份有限公司
204
GBase 8s V8.8开发者手册
1599。
步骤3 修改防篡改用户表数据。
例如，对防篡改用户表执行INSERT/UPDATE/DELETE。
gbase=# INSERT INTO ledgernsp.usertable VALUES(1, 'alex'), (2, 'bob'), (3,
'peter');
INSERT 0 3
gbase=# SELECT *, hash FROM ledgernsp.usertable ORDER BY id;
id | name | hash
----+-------+------------------
1 | alex | 1f2e543c580cb8c5
2 | bob | 8fcd74a8a6a4b484
3 | peter | f51b4b1b12d0354b
(3 rows)
gbase=# UPDATE ledgernsp.usertable SET name = 'bob2' WHERE id = 2;
UPDATE 1
gbase=# SELECT *, hash FROM ledgernsp.usertable ORDER BY id;
id | name | hash
----+-------+------------------
1 | alex | 1f2e543c580cb8c5
2 | bob2 | 437761affbb7c605
3 | peter | f51b4b1b12d0354b
(3 rows)
gbase=# DELETE FROM ledgernsp.usertable WHERE id = 3;
DELETE 1
gbase=# SELECT *, hash FROM ledgernsp.usertable ORDER BY id;
id | name | hash
----+------+------------------
1 | alex | 1f2e543c580cb8c5
2 | bob2 | 437761affbb7c605
(2 rows)
----结束
7.5.2 查看账本历史操作记录
前提条件
 系统中需要有审计管理员或者具有审计管理员权限的角色。
 数据库正常运行，并且对防篡改数据库执行了一系列增、删、改等操作，保证在查询时
段内有账本操作记录结果产生。
南大通用数据技术股份有限公司
205
GBase 8s V8.8开发者手册