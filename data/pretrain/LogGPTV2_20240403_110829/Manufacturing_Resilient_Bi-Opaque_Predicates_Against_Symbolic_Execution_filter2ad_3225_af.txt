×
tool for C programs based on LLVM compiler [23]. We adopt
LLVM as our compiler basis because it is open-source released
and has achieved wide usage in both research and industrial
ﬁelds.
Figure 5 describes the framework of our prototype. The
source code of a program is ﬁrstly processed by an LLVM
frontend, which transforms the source code to intermediate
representatives (IR). For C programs, the frontend is Clang.
IR is the core object processed in LLVM. LLVM provides a
basic framework for performing program analysis tasks based
on IR. It allows users to customize their own compilation
passes for speciﬁc program analysis tasks, such as optimization
and obfuscation. Obfuscator-LLVM in nature applies several
compilation passes to obfuscate programs in IR level. Finally,
the IR will be compiled to binaries by a corresponding backend
(e.g., for X86 64 system).
Based on the framework of LLVM, we implement
the
feature of symbolic opaque predicates as a compiler pass.
The pass can substitute the opaque predicates generated by
Obfuscator-LLVM with resilient ones. We have implemented
all the challenging problems discussed in Section III. Users
can decide which opaque predicates will be employed during
obfuscation.
Our prototype supports two methods to customize new
templates of symbolic opaque predicates. The ﬁrst one is to
write a native LLVM pass which can insert IR (as shown in
Algorithm 1) during compilation. To this end, users should be
familiar with the IR syntax and LLVM APIs, which impose
a steep learning curve. The second method requires only very
little knowledge about LLVM development. Users can create
new templates in source code level. Then they can compile
the source code to object code and link it with the original
program via static linkage. The second approach is somehow
limited but it can facilitate the development process.
C. Resilience
Our adversary model assumes symbolic execution-based
adversaries. Therefore, we mainly evaluate the resilience of
symbolic opaque predicates with respect to the security against
symbolic execution engines. If a symbolic execution engine
fails in handling the proposed predicates, the corresponding
adversaries should also suffer the same problems.
We choose three prevalent symbolic execution tools for
resilience evaluation,
including BAP [8], Triton [9], and
Angr [10]. We consider several criteria when selecting them: 1)
the tool should support binaries; 2) the tool should demonstrate
good capabilities with high community impacts; 3) it should be
free and open-source for public usage. To our best knowledge,
these three tools are the only tools that meet our criteria.
Other prevalent symbolic execution tools either do not support
binaries, such as KLEE [24], or they are close-source, such
as Mayhem [25]. By evaluating against these tools, we aim to
show that the proposed opaque predicates can achieve good
resilience to symbolic execution in practice.
Table I summarizes our evaluation results. The results are
mainly based on the correctness of the generated constraint
models. If a symbolic execution tool falsely models the
constraint for a type I opaque predicate or reports a solution,
we label the result as ×f n; if it falsely models the constraint
the result as ×f p. The results show that all the tools suffer
for a type II opaque predicate, or reports no solution, we label
problems when handling our symbolic opaque predicates,
except that Angr is capable of handling the ﬂoating-point
example. We further analyze the details of each experimental
result as follows.
First, we discuss the issues of symbolic execution tools
when handling the predicates based on symbolic memory.
For each tool, we demonstrate the issue of the tool with
a ﬁgure. Figure 6(a) reports the issue of BAP. BAP only
taints the ﬁrst array value retrieving operation (line 18), and
omits the second one (line 21). When modeling the constraint
for the cmp instruction in line 24, the value of EAX is
falsely retrieved from line 18, rather than line 21 or 23. As
a result, BAP cannot model the constraint correctly. Triton
also fails in tainting the array operation. As a result shown
in Figure 6(b), Triton detects several branching points, but
only one contains a constraint model. Finally, a test case 3
is reported a solution to trigger Bogus(), which is a false
positive case. Moreover, Triton does not generate constraint
models to reach the branch with Foo(), so it also suffers false
negative issues. To run Angr, we have customized a python
script which searches solutions that can trigger the addresses
of Foo() and Bogus(). Our script is shown in Figure 6(c).
We observe that the result of Angr depends on how we declare
the size of the symbolic variable. If we declare the size as one
byte, Angr can ﬁnd a correct solution for reaching Foo().
However, if we declare the size as two bytes or four bytes,
Angr ﬁnds two paths to Foo(), but it ﬁnds no solution.
Moreover, it falsely reports a solution to reach Bogus(). We
have further veriﬁed that if we change the 1-digit predicate
(i.e., j == 7) to a 2-digit predicate (e.g., j == 10), Angr
would suffer problems for all such size declarations. Therefore,
the opaque predicate based on symbolic memory should be
secure against Angr.
672
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:23:23 UTC from IEEE Xplore.  Restrictions apply. 
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:883)(cid:888)
(cid:883)(cid:889)
(cid:883)(cid:890)
(cid:883)(cid:891)
(cid:884)(cid:882)
(cid:884)(cid:883)
(cid:884)(cid:884)
(cid:884)(cid:885)
(cid:884)(cid:886)
(cid:884)(cid:887)
(cid:884)(cid:888)
(cid:884)(cid:889)
(cid:512)(cid:512)(cid:149)(cid:150)(cid:131)(cid:133)(cid:141)(cid:3)(cid:139)(cid:144)(cid:139)(cid:150)(cid:139)(cid:131)(cid:142)(cid:139)(cid:156)(cid:131)(cid:150)(cid:139)(cid:145)(cid:144)(cid:3)
(cid:512)(cid:512)(cid:133)(cid:145)(cid:143)(cid:146)(cid:151)(cid:150)(cid:135)(cid:3)(cid:140)(cid:936)(cid:889)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:890)(cid:132)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:886)(cid:886)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:139)(cid:143)(cid:151)(cid:142) (cid:936)(cid:135)(cid:134)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:890)(cid:134)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:886)(cid:888)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:142)(cid:135)(cid:131)(cid:3)(cid:3)(cid:3)(cid:3)(cid:4666)(cid:936)(cid:148)(cid:134)(cid:154)(cid:481)(cid:936)(cid:148)(cid:133)(cid:154)(cid:481)(cid:883)(cid:4667)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:882)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:886)(cid:891)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:131)(cid:148) (cid:836)(cid:882)(cid:154)(cid:884)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:885)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:887)(cid:884)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:131)(cid:154)(cid:481)(cid:936)(cid:135)(cid:134)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:887)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:887)(cid:886)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:133)(cid:154)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:889)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:887)(cid:888)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:131)(cid:148) (cid:836)(cid:882)(cid:154)(cid:883)(cid:136)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:131)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:887)(cid:891)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:151)(cid:132)(cid:3)(cid:3)(cid:3)(cid:3)(cid:936)(cid:135)(cid:131)(cid:154)(cid:481)(cid:936)(cid:135)(cid:134)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:133)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:888)(cid:883)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:134)(cid:154)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:891)(cid:135)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:888)(cid:885)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:138)(cid:142) (cid:836)(cid:882)(cid:154)(cid:885)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:883)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:888)(cid:888)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:151)(cid:132)(cid:3)(cid:3)(cid:3)(cid:3)(cid:936)(cid:135)(cid:134)(cid:154)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:885)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:888)(cid:890)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:149)(cid:151)(cid:132)(cid:3)(cid:3)(cid:3)(cid:3)(cid:936)(cid:135)(cid:131)(cid:154)(cid:481)(cid:936)(cid:135)(cid:133)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:887)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:889)(cid:882)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:133)(cid:154)(cid:481)(cid:936)(cid:135)(cid:134)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:887)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:889)(cid:882)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:133)(cid:154)(cid:481)(cid:936)(cid:135)(cid:134)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:889)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:889)(cid:884)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152)(cid:149)(cid:142)(cid:147) (cid:936)(cid:135)(cid:134)(cid:154)(cid:481)(cid:936)(cid:148)(cid:131)(cid:154)
(cid:512)(cid:512)(cid:137)(cid:135)(cid:150)(cid:3)(cid:131)(cid:144)(cid:3)(cid:135)(cid:142)(cid:135)(cid:143)(cid:135)(cid:144)(cid:150)(cid:3)(cid:136)(cid:148)(cid:145)(cid:143)(cid:3)(cid:142)(cid:883)(cid:820)(cid:131)(cid:148)(cid:155)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:131)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:889)(cid:887)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:486)(cid:882)(cid:154)(cid:886)(cid:882)(cid:4666)(cid:936)(cid:148)(cid:132)(cid:146)(cid:481)(cid:936)(cid:148)(cid:131)(cid:154)(cid:481)(cid:886)(cid:4667)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:131)(cid:135)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:889)(cid:891)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:133)(cid:142)(cid:150)(cid:147)
(cid:512)(cid:512)(cid:137)(cid:135)(cid:150)(cid:3)(cid:131)(cid:144)(cid:3)(cid:135)(cid:142)(cid:135)(cid:143)(cid:135)(cid:144)(cid:150)(cid:3)(cid:136)(cid:148)(cid:145)(cid:143)(cid:3)(cid:142)(cid:884)(cid:820)(cid:131)(cid:148)(cid:155)(cid:3)(cid:4666)(cid:144)(cid:145)(cid:150)(cid:3)(cid:150)(cid:131)(cid:139)(cid:144)(cid:150)(cid:135)(cid:134)(cid:4667)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:882)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:890)(cid:883)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:486)(cid:882)(cid:154)(cid:884)(cid:882)(cid:4666)(cid:936)(cid:148)(cid:132)(cid:146)(cid:481)(cid:936)(cid:148)(cid:131)(cid:154)(cid:481)(cid:886)(cid:4667)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:886)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:890)(cid:887)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:936)(cid:135)(cid:131)(cid:154)(cid:481)(cid:486)(cid:882)(cid:154)(cid:886)(cid:886)(cid:4666)(cid:936)(cid:148)(cid:132)(cid:146)(cid:4667)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:889)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:890)(cid:890)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:486)(cid:882)(cid:154)(cid:886)(cid:886)(cid:4666)(cid:936)(cid:148)(cid:132)(cid:146)(cid:4667)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:131)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:891)(cid:883)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:133)(cid:143)(cid:146) (cid:486)(cid:882)(cid:154)(cid:886)(cid:890)(cid:4666)(cid:936)(cid:148)(cid:132)(cid:146)(cid:4667)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:134)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:891)(cid:886)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:140)(cid:144)(cid:135) (cid:882)(cid:154)(cid:886)(cid:882)(cid:882)(cid:134)(cid:133)(cid:891)(cid:3)(cid:3407)(cid:143)(cid:131)(cid:139)(cid:144)(cid:3397)(cid:884)(cid:882)(cid:888)(cid:3408)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:132)(cid:136)(cid:3)(cid:3407)(cid:3397)(cid:883)(cid:891)(cid:888)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:143)(cid:145)(cid:152) (cid:836)(cid:882)(cid:154)(cid:882)(cid:481)(cid:936)(cid:135)(cid:131)(cid:154)
(cid:882)(cid:154)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:882)(cid:886)(cid:882)(cid:882)(cid:134)(cid:133)(cid:886)(cid:3)(cid:3407)(cid:3397)(cid:884)(cid:882)(cid:883)(cid:3408)(cid:483)(cid:3)(cid:3)(cid:3)(cid:133)(cid:131)(cid:142)(cid:142)(cid:147) (cid:882)(cid:154)(cid:886)(cid:882)(cid:882)(cid:132)(cid:890)(cid:134)(cid:3)(cid:3407)(cid:5)(cid:145)(cid:137)(cid:151)(cid:149)(cid:3408)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)(cid:882)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:883)(cid:888)
(cid:883)(cid:889)
(cid:883)(cid:890)
(cid:883)(cid:891)
(cid:884)(cid:882)
(cid:884)(cid:883)
(cid:884)(cid:884)
(cid:884)(cid:885)
(cid:884)(cid:886)
(cid:884)(cid:887)
(cid:884)(cid:888)
(cid:4670)(cid:12)(cid:17)(cid:9)(cid:18)(cid:4671)(cid:483)(cid:3)(cid:22)(cid:150)(cid:131)(cid:148)(cid:150)(cid:3)(cid:150)(cid:148)(cid:139)(cid:150)(cid:145)(cid:144)(cid:484)(cid:484)(cid:484)
(cid:4670)(cid:12)(cid:17)(cid:9)(cid:18)(cid:4671)(cid:483)(cid:3)(cid:135)(cid:144)(cid:150)(cid:148)(cid:155)(cid:483)(cid:3)(cid:886)(cid:882)(cid:882)(cid:131)(cid:131)(cid:882)(cid:481)(cid:3)(cid:135)(cid:154)(cid:139)(cid:150)(cid:483)(cid:3)(cid:886)(cid:882)(cid:882)(cid:134)(cid:135)(cid:131)
(cid:4670)(cid:12)(cid:17)(cid:9)(cid:18)(cid:4671)(cid:483)(cid:3)(cid:23)(cid:131)(cid:141)(cid:135)(cid:3)(cid:22)(cid:144)(cid:131)(cid:146)(cid:149)(cid:138)(cid:145)(cid:150)
(cid:4670)(cid:12)(cid:17)(cid:9)(cid:18)(cid:4671)(cid:483)(cid:3)(cid:9)(cid:139)(cid:144)(cid:134)(cid:3)(cid:150)(cid:138)(cid:135)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:3)(cid:136)(cid:151)(cid:144)(cid:133)(cid:150)(cid:139)(cid:145)(cid:144)