title:BOTMAGNIFIER: Locating Spambots on the Internet
author:Gianluca Stringhini and
Thorsten Holz and
Brett Stone-Gross and
Christopher Kruegel and
Giovanni Vigna
BOTMAGNIFIER: Locating Spambots on the Internet
Gianluca Stringhini§, Thorsten Holz‡, Brett Stone-Gross§,
Christopher Kruegel§, and Giovanni Vigna§
§University of California, Santa Barbara
{gianluca,bstone,chris,vigna}@cs.ucsb.edu
‡ Ruhr-University Bochum
PI:EMAIL
Abstract
Unsolicited bulk email (spam) is used by cyber-
criminals to lure users into scams and to spread mal-
ware infections. Most of these unwanted messages are
sent by spam botnets, which are networks of compro-
mised machines under the control of a single (malicious)
entity. Often, these botnets are rented out to particular
groups to carry out spam campaigns, in which similar
mail messages are sent to a large group of Internet users
in a short amount of time. Tracking the bot-infected hosts
that participate in spam campaigns, and attributing these
hosts to spam botnets that are active on the Internet, are
challenging but important tasks. In particular, this infor-
mation can improve blacklist-based spam defenses and
guide botnet mitigation efforts.
In this paper, we present a novel technique to support
the identiﬁcation and tracking of bots that send spam.
Our technique takes as input an initial set of IP addresses
that are known to be associated with spam bots, and
learns their spamming behavior. This initial set is then
“magniﬁed” by analyzing large-scale mail delivery logs
to identify other hosts on the Internet whose behavior is
similar to the behavior previously modeled. We imple-
mented our technique in a tool, called BOTMAGNIFIER,
and applied it to several data streams related to the deliv-
ery of email trafﬁc. Our results show that it is possible
to identify and track a substantial number of spam bots
by using our magniﬁcation technique. We also perform
attribution of the identiﬁed spam hosts and track the evo-
lution and activity of well-known spamming botnets over
time. Moreover, we show that our results can help to im-
prove state-of-the-art spam blacklists.
1
Introduction
Email spam is one of the open problems in the area of
IT security, and has attracted a signiﬁcant amount of
research over many years [11, 26, 28, 40, 42]. Unso-
licited bulk email messages account for almost 90% of
the world-wide email trafﬁc [20], and a lucrative busi-
ness has emerged around them [12]. The content of spam
emails lures users into scams, promises to sell cheap
goods and pharmaceutical products, and spreads mali-
cious software by distributing links to websites that per-
form drive-by download attacks [24].
Recent studies indicate that, nowadays, about 85% of
the overall spam trafﬁc on the Internet is sent with the
help of spamming botnets [20, 36]. Botnets are networks
of compromised machines under the direction of a sin-
gle entity, the so-called botmaster. While different bot-
nets serve different, nefarious goals, one important pur-
pose of botnets is the distribution of spam emails. The
reason is that botnets provide two advantages for spam-
mers. First, a botnet serves as a convenient infrastructure
for sending out large quantities of messages; it is essen-
tially a large, distributed computing system with mas-
sive bandwidth. A botmaster can send out tens of mil-
lions of emails within a few hours using thousands of
infected machines. Second, a botnet allows an attacker
to evade spam ﬁltering techniques based on the sender
IP addresses. The reason is that the IP addresses of some
infected machines change frequently (e.g., due to the ex-
piration of a DHCP lease, or to the change in network
location in the case of an infected portable computer).
Moreover, it is easy to infect machines and recruit them
as new members into a botnet. This means that black-
lists need to be updated constantly by tracking the IP ad-
dresses of spamming bots.
Tracking spambots is challenging. One approach to
detect infected machines is to set up spam traps. These
are fake email addresses (i.e., addresses not associated
with real users) that are published throughout the Inter-
net with the purpose of attracting and collecting spam
messages. By extracting the sender IP addresses from
the emails received by a spam trap, it is possible to ob-
tain a list of bot-infected machines. However, this ap-
proach faces two main problems. First, it is likely that
only a subset of the bots belonging to a certain botnet
will send emails to the spam trap addresses. Therefore,
the analysis of the messages collected by the spam trap
can provide only a partial view of the activity of the bot-
net. Second, some botnets might only target users lo-
cated in a speciﬁc country (e.g., due to the language used
in the email), and thus a spam trap located in a different
country would not observe those bots.
Other approaches to identify the hosts that are part of
a spamming botnet are speciﬁc to particular botnets. For
example, by taking control of the command & control
(C&C) component of a botnet [21, 26], or by analyzing
the communication protocol used by the bots to interact
with other components of the infrastructure [6, 15, 32],
it is possible to enumerate (a subset of) the IP addresses
of the hosts that are part of a botnet. However, in these
cases, the results are speciﬁc to the particular botnet that
is being targeted (and, typically, the type of C&C used).
In this paper, we present a novel approach to identify
and track spambot populations on the Internet. Our am-
bitious goal is to track the IP addresses of all active hosts
that belong to every spamming botnet. By active hosts,
we mean hosts that are online and that participate in spam
campaigns. Comprehensive tracking of the IP addresses
belonging to spamming botnets is useful for several rea-
sons:
in their networks.
• Internet Service Providers can take countermea-
sures to prevent the bots whose IP addresses reside
in their networks from sending out email messages.
• Organizations can clean up compromised machines
• Existing blacklists and systems
that analyze
network-level features of emails can be improved
by providing accurate information about machines
that are currently sending out spam emails.
• By monitoring the number of bots that are part of
different botnets, it is possible to guide and support
mitigation efforts so that the C&C infrastructures
of the largest, most aggressive, or fastest-growing
botnets are targeted ﬁrst.
Our approach to tracking spamming bots is based on
the following insight: bots that belong to the same bot-
net share the same C&C infrastructure and the same code
base. As a result, these bots will feature similar behavior
when sending spam [9, 40, 41]. In contrast, bots belong-
ing to different spamming botnets will typically use dif-
ferent parameters for sending spam mails (e.g., the size
of the target email address list, the domains or countries
that are targeted, the spam contents, or the timing of their
actions). More precisely, we leverage the fact that bots
(of a particular botnet) that participate in a spam cam-
paign share similarities in the destinations (domains) that
they target and in the time periods they are active. Simi-
lar to previous work [15], we consider a spam campaign
to be a set of email messages that share a substantial
amount of content and structure (e.g., a spam campaign
might involve the distribution of messages that promote
a speciﬁc pharmaceutical scam).
Input datasets. At a high level, our approach takes two
datasets as input. The ﬁrst dataset contains the IP ad-
dresses of known spamming bots that are active during
a certain time period (we call this time period the obser-
vation period). The IP addresses are grouped by spam
campaign. That is, IP addresses in the same group sent
the same type of messages. We refer to these groups of
IP addresses as seed pools. The second dataset is a log
of email transactions carried out on the Internet during
the same time period. This log, called the transaction
log, contains entries that specify that, at a certain time,
IP address C attempted to send an email message to IP
address S. The log does not need to be a complete log
of every email transaction on the Internet (as it would be
unfeasible to collect this information). However, as we
will discuss later, our approach becomes more effective
as this log becomes more comprehensive.
Approach.
In the ﬁrst step of our approach, we search
the transaction log for entries in which the sender IP ad-
dress is one of the IP addresses in the seed pools (i.e.,
the known spambots). Then, we analyze these entries
and generate a number of behavioral proﬁles that capture
the way in which the hosts in the seed pools sent emails
during the observation period.
In the second step of the approach, the whole trans-
action log is searched for patterns of behavior that are
similar to the spambot behavior previously learned from
the seed pools. The hosts that behave in a similar man-
ner are ﬂagged as possible spamming bots, and their IP
addresses are added to the corresponding magniﬁed pool.
In the third and ﬁnal step, heuristics are applied to re-
duce false positives and to assign spam campaigns (and
the IP addresses of bots) to speciﬁc botnets (e.g., Rus-
tock [5], Cutwail [35], or MegaD [4, 6]).
We implemented our approach in a tool, called BOT-
MAGNIFIER.
In order to populate our seed pools, we
used data from a large spam trap set up by an Internet
Service Provider (ISP). Our transaction logs were con-
structed by running a mirror for Spamhaus, a popular
DNS-based blacklist. Note that other sources of infor-
mation can be used to either populate the seed pools or
to build a transaction log. As we will show, BOTMAGNI-
FIER also works for transaction logs extracted from net-
ﬂow data collected from a large ISP’s backbone routers.
BOTMAGNIFIER is executed periodically, at the end
of each observation period. It outputs a list of the IP ad-
dresses of all bots in the magniﬁed pools that were found
during the most recent period. Moreover, BOTMAGNI-
FIER associates with each seed and magniﬁed pool a la-
bel that identiﬁes (when possible) the name of the botnet
that carried out the corresponding spam campaign. Our
experimental results show that our system can ﬁnd a sig-
niﬁcant number of additional IP addresses compared to
the seed baseline. Furthermore, BOTMAGNIFIER is able
to detect emerging spamming botnets. As we will show,
we identiﬁed the resurrection of the Waledac spam botnet
during the evaluation period, demonstrating the ability of
our technique to ﬁnd new botnets.
In summary, we provide the following contributions:
behavior of spamming bots.
• We developed a novel method for characterizing the
• We provide a novel technique for identifying and
tracking spamming bot populations on the Internet,
using a “magniﬁcation” process.
• We assigned spam campaigns to the major botnets,
and we studied the evolution of the bot population
of these botnets over time.
• We validated our results using ground truth col-
lected from a number of C&C servers used by a
large spamming botnet, and we demonstrated the
applicability of our technique to real-world, large-
scale datasets.
2
Input Datasets
BOTMAGNIFIER requires two input datasets to track
spambots: seed pools and a transaction log. In this sec-
tion, we discuss how these two datasets are obtained.
2.1 Seed Pools
A seed pool is a set of IP addresses of hosts that, during
the most recent observation period, participated in a spe-
ciﬁc spam campaign. The underlying assumption is that
the hosts whose IP addresses are in the same seed pool
are part of the same spamming botnet, and they were in-
structed to send a certain batch of messages (e.g., emails
advertising cheap Viagra or replica watches).
To generate the seed pools for the various spam cam-
paigns, we took advantage of the information collected
by a spam trap set up by a large US ISP. Since the email
addresses used in this spam trap do not correspond to
real customers, all the received emails are spam. We
collected data from the spam trap between September 1,
2010 and February 10, 2011, with a downtime of about
15 days in November 2011. The spam trap collected, on
average, 924,000 spam messages from 268,000 IP ad-
dresses every day.
Identifying similar messages. We identify spam cam-
paigns within this dataset by looking for similar email
messages. More precisely, we analyze the subject lines
of all spam messages received during the last observation
period (currently one day: see discussion below). Mes-
sages that share a similar subject line are considered to
be part of the same campaign (during this period).
Unfortunately, the subject lines of messages of a cer-
tain campaign are typically not identical. In fact, most
botnets vary the subject lines of the message they send
to avoid detection by anti-spam systems. For exam-
ple, some botnets put the user name of the recipient
in the subject, or change the price of the pills be-
ing sold in drug-related campaigns. To mitigate this
problem, we extract templates from the actual subject
lines. To this end, we substitute user names, email ad-
dresses, and numbers with placeholder regular expres-
sions. User names are recognized as tokens that are
identical to the ﬁrst part of the destination email address
(the part to the left of the @ sign). For example, the
subject line “john, get 90% discounts!” sent
to user PI:EMAIL becomes “\w+, get
[0-9]+% discounts!”
More sophisticated botnets, such as Rustock, add ran-
dom text fetched from Wikipedia to both the email body
and the subject line. Other botnets, such as Lethic, add
a random word at the end of each subject. These tricks
make it harder to group emails belonging to the same
campaign that are sent by different bots, because differ-
ent bots will add distinct text to each message. To handle
this problem, we developed a set of custom rules for the
largest spamming botnets that remove the spurious con-
tent from the subject lines.
Once the subjects of the messages have been trans-
formed into templates and the spurious information has
been removed, messages with the same template subject
line are clustered together. This approach is less sophis-
ticated than methods that take into account more features
of the spam messages [22, 40], but we found (by manual
investigation) that our simple approach was very effec-
tive for our purpose. Our approach, although sufﬁcient,
could be reﬁned even further by incorporating these more
sophisticated schemes to improve our ability to recognize
spam campaigns.
Once the messages are clustered, the IP addresses of
the senders in each cluster are extracted. These sets of IP
addresses represent the seed pools that are used as input
to our magniﬁcation technique.
Seed pool size. During our experiments, we found that
seed pools that contain a very small number of IP ad-
dresses do not provide good results. The reason is that
the behavior patterns that can be constructed from only a
few known bot instances are not precise enough to rep-
resent the activity of a botnet. For example, campaigns
involving 200 unique IP addresses in the seed pool pro-
duced, on average, magniﬁed sets where 60% of the IP
addresses were not listed in Spamhaus, and therefore
were likely legitimate servers. Similarly, campaigns with
a seed pool size of 500 IP addresses still produced mag-
niﬁed sets where 25% of the IP addresses were marked
as legitimate by Spamhaus. For these reasons, we only
consider those campaigns for which we have observed
more than 1,000 unique sender IP addresses. The emails
belonging to these campaigns account for roughly 84%
of the overall trafﬁc observed by our spam trap. It is in-
teresting to notice that 8% of the overall trafﬁc belongs
to campaigns carried out by less than 10 distinct IP ad-
dresses per day. Such campaigns are carried out by ded-
icated servers and abused email service providers. The
aggressive spam behavior of these servers and their lack
of geographic/IP diversity makes them trivial to detect
without the need for magniﬁcation.
The lower limit on the size of seed pools has implica-
tions for the length of the observation period. When this
interval is too short, the seed pools are likely to be too
small. On the other hand, many campaigns last less than
a few hours. Thus, it is not useful to make the observa-
tion period too long. Also, when increasing the length