---
author: Pratham Patel
category: 技术
comments_data:
- date: '2023-09-25 16:42:09'
  message: "补充一些知识\r\n架构&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;特点&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;代表性的厂商&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;运营机构&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 发明时间\r\nX86&nbsp; &nbsp;
    &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;性能高，速度快，兼容性好&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;英特尔，AMD&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 英特尔&nbsp; &nbsp; &nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 1978年\r\nARM&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;成本低，低功耗&nbsp; &nbsp;
    &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;苹果，谷歌， IBM，华为&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;英国ARM公司&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp; 1983年\r\nRISC-V&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;模块化，极简，可拓展&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;三星，英伟达，西部数据&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;RISC-V基金会&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
    2014年\r\nMIPS&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;简洁，优化方便，高拓展性&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;龙芯&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;MIPS科技公司&nbsp;
    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 1981年"
  postip: 222.79.44.24
  username: 来自福建福州的 Chrome 117.0|GNU/Linux 用户
- date: '2023-09-25 21:48:49'
  message: 除了x86，其他的很难以低廉价格在市场上买到，即使是二手的也是。
  postip: 114.224.35.129
  username: 来自江苏无锡的 Firefox 117.0|Ubuntu 用户
count:
  commentnum: 2
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 2933
date: '2023-09-25 09:28:00'
editorchoice: false
excerpt: 当涉及到 CPU 的时候，有许多术语：AArch64、x86_64、amd64、arm 等等。了解它们是什么以及它们之间的区别。
fromurl: https://itsfoss.com/arm-aarch64-x86_64/
id: 16224
islctt: true
largepic: /data/attachment/album/202309/25/092727ilaax5z7dexxhxop.jpg
permalink: /article-16224-1.html
pic: /data/attachment/album/202309/25/092727ilaax5z7dexxhxop.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 当涉及到 CPU 的时候，有许多术语：AArch64、x86_64、amd64、arm 等等。了解它们是什么以及它们之间的区别。
tags:
- 架构
- CPU
- ISA
thumb: false
title: arm vs AArch64 vs amd64 vs x86_64 vs x86：有什么区别？
titlepic: true
translator: ChatGPT
updated: '2023-09-25 09:28:00'
---
![](/data/attachment/album/202309/25/092727ilaax5z7dexxhxop.jpg)
> 
> 当涉及到 CPU 的时候，有许多术语：AArch64、x86\_64、amd64、arm 等等。了解它们是什么以及它们之间的区别。
> 
> 
> 
当你查看数据表或软件下载页面时是否被 `ARM`、`AArch64`、`x86_64`、`i386` 等术语混淆？这些被称为 CPU 架构，我会帮你深入了解这个计算话题。
以下的表将为你总结每个字符串所代表的意义：
| CPU 架构 | 描述 |
| --- | --- |
| **`x86_64`** /`x86`/`amd64` | 64 位 AMD/英特尔 CPU 的别称 |
| **`AArch64`** /`arm64`/`ARMv8`/`ARMv9` | 64 位 ARM CPU 的别称 |
| **`i386`** | 32 位 AMD/英特尔 CPU |
| **`AArch32`** /`arm`/`ARMv1` 到 `ARMv7` | 32 位 ARM CPU 的别称 |
| **`rv64gc`** /`rv64g` | 64 位 RISC-V CPU 的别称 |
| **`ppc64le`** | 64 位 PowerPC CPU，**小端字节序存储** |
从左到右是使用该术语来描述 CPU 架构超过其右侧其他可选用术语的偏好。
从左到右是使用该术语描述 CPU 架构的优先级，使用左侧的而不是其右侧的其他可供选择的术语。
如果你像我一样是个极客，并想要更深入地解释，请继续阅读！
### 概述：CPU 架构
通常来说，我之前列出的术语是描述 CPU 架构的。但严格讲，它们被计算机工程师视为 CPU 的  指令集架构   Instruction Set Architecture （ISA）。
CPU 的指令集架构定义了 CPU 如何解析二进制代码中的 1 和 0。
这些 CPU 的 ISA 有几个主要的类别：
* x86（AMD/英特尔）
* ARM
* RISC-V
* PowerPC（IBM 仍在使用）
当然，还有更多种类的 CPU ISA，比如 MIPS、SPARC、DEC Alpha 等等。但我列出的这些至今仍然被广泛使用（以某种形式）。
上述列出的 ISA 主要根据 *内存总线的宽度* 分为至少两个子集。内存总线的宽度指的是 CPU 和 RAM 一次能传输的位数。内存总线有很多种宽度，但最常见的是 32 位和 64 位。
> 
> ? 32 位的 CPU ISA 要么是已经过时的历史产物，被留下来要么只是为了支持旧的系统，要么只运用在微控制器中。可以说，**所有新的硬件都已经是 64 位的了**，特别是那些面向消费者的硬件。
> 
> 
> 
### x86（AMD/英特尔）
x86 CPU 的指令集架构主要源于英特尔，因为英特尔是最初搭配 8085 微处理器创建了它。8085 微处理器的内存总线宽度为 16 位。而后来，AMD 加入了这个领域，并且一直紧随英特尔的步伐，直到 AMD 创建出了自己的超集 64 位架构，超过了英特尔。
x86 架构的子集如下：
* `i386`：如果你拥有的是 2007 年之前的 CPU，那么这可能就是你的 CPU 架构。它是现在使用的 AMD/英特尔的 x86 架构的 32 位“版本”。
* `x86_64`/`x86`/`amd64`：这三个术语在不同的项目中可能会被交替使用。 但它们都是指 x86 AMD/英特尔架构的 64 位“版本”。无论如何，`x86_64` 这个字符串比 `x86` 和 `amd64` 使用得更广泛（也更受欢迎）。例如，FreeBSD 项目称 64 位的 x86 架构为 `amd64`，而 Linux 和 macOS 则称之为 `x86_64`。
> 
> ? 由于 AMD 在创造 64 位 ISA 上超越了英特尔，所以一些项目（比如 FreeBSD）把 x86 的 64 位版本称为 `amd64`。**但更被广泛接受的术语还是 x86\_64**。
> 
> 
> 
对于 CPU ISA，“x86” 这个字符串是一种特殊的情况。你要知道，在从 32 位的 x86（`i386`）到 64 位的 x86（`x86_64`）的过渡过程中，CPU 制造商确保了 CPU 能够运行 32 位 *和* 64 位指令。所以，有时你可能会看到 `x86` 也被用来意指“这款产品只能运行在 64 位的计算机上，但如果该计算机能运行 32 位指令，那么你也可以在它上面运行 32 位的用户软件”。
这种 x86 的模糊性——也就是诸如能同时运行 32 位代码的 64 位处理器——其主要用于和存在于运行在 64 位处理器上的，但是允许用户运行 32 位软件的操作系统，Windows 就通过这种被称作“兼容模式”的特性运用了这种方式。