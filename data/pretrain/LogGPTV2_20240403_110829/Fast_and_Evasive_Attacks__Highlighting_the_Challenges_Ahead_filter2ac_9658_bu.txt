require  evidence  from  its  2-hop  neighbors.  Thus,  ID-Evidence  message  is  designed 
for 2-hop neighbors to exchange  their evidence  with each  other for their Validation 
Manager.  Fig.  7  describes  this  procedure:  the  ID-Evidence  message  provides 
sufficient evidence for the Validation Manager to use first constraint (C1) to validate 
Hello messages coming from neighboring nodes. 
260 
C.H. Tseng et al. 
Example  of  supporting  C1. ID-Evidence  message consists of 1-hop neighbors and 
MPRs, which are essential inputs for three constraints in message validation. In Fig. 
7,  S’s  detector  uses  C1  to  validate  the  1-hop  neighbor  list  contained  in  a  Hello 
message sent from node A. Node A’s 1-hop neighbor list  is {S, B}. According to C1, 
the 1-hop neighbor lists in S’s and B’s Hello messages must both include A. Clearly, 
S’s detector contains S’s Hello message by intercepting S’s outgoing Hello message. 
Thus, S’s detector requires B’s Hello message from B. 
ID-Forward
B 
A
ID-Evidence 
(B) = {A} 
S
Hello (B) ={A} 
Hello (A) ={S,B}
Hello(S) ={A}
Fig. 7. Example of validating neighbor’s Hello message (C1) 
B’s detector broadcasts an ID-Forward message (see 5.5 for details) to request A to 
broadcast B’s ID-Evidence message. While A receives B’s ID-Forward indicating that 
A is the selected forwarder, A generates B’s ID-Evidence message and broadcasts B’s 
ID-Evidence  message.    Lastly,  S  receives  B’s  expected  ID-Evidence  message 
containing A as B’s 1-hop neighbor and finishes validating A’s Hello message by C1. 
Supporting  C2.  Similarly,  B’s  ID-Evidence  satisfies  the  requirements  of  message 
validation by C2 and C3. While S validates MPRs contained in A’s Hello messages 
by C2, A’s 2-hop neighbor set, computed from A’s MPRs, must equal the union set of 
A’s 1-hop neighbors. There are three different categories of A’s 1-hop neighbors in 
S’s point of view: S itself, S’s 1-hop neighbors, and S’s 2-hop neighbors. In order to 
have sufficient data, the detector residing on S requires 1-hop neighbor lists of nodes 
in all of these three categories. S’s detector has 1-hop neighbor lists of the following 
categories:  S’s detector has S’s 1-hop neighbor list; from incoming Hello messages 
of  S’s  1-hop  neighbors,  S’s  detector  has  1-hop  neighbor  lists;  and  S’s  2-hop 
neighbors,  such  as  B,  provide  their  1-hop  neighbor  lists  by  ID-Evidence  to  allow  S 
complete validation of C2.  
Supporting  C3.  Since  S’s  detector  can  receive  A’s  TC  message  containing  B  as  a 
MPR selector and also knows B’s MPRs from B’s ID-Evidence, S’s detector can use 
C3  to  determine  if  the  relationship  between  A  and  B  is  reciprocal.  Thus,  with  ID-
Evidence messages, the Validation Manger of each detector has sufficient evidence to 
validate incoming Hello and TC messages according to the constraints in 5.2. 
5.5   ID-Forward Message 
Reducing  message overhead. ID-Forward messages are used to trigger the selected 
forwarder  to  forward  ID-Evidence  messages.  To  reduce  message  overhead,  the 
detector sends ID-Forward messages to trigger the forwarder instead of sending ID-
Evidence messages ,because an ID-Evidence message is usually much larger than an 
ID-Forward message: an ID-Evidence message contains 1-hop neighbors’ and MPRs’ 
addresses but an ID-Forward message only contains forwarders’ addresses. In order to 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
261 
protect  the  integrity  of  forwarded  ID-Evidence  messages,  the  sender  of  the  ID-
Forwarder signs an expected ID-Evidence message by TESLA (see 7.1 for detail) to 
allow the receivers to authenticate the ID-Evidence message.  
Conditions  triggering  ID-Forward  messages  to  be  sent.  While  the  detector 
intercepts  a  new  outgoing  Hello  message  from  OLSR  routing  layer,  the  detector 
searches one of the following new evidence: New MPRs, New Neighbors, or New 2-
hop  Neighbors.  New  evidence  includes  2-hop  neighbors  because  evidence  is 
exchanged between 2-hop neighbors. In other words, if a detector observes a new 2-
hop  neighbor,  that  new  2-hop  neighbor  should  require  that  detector’s  evidence. 
Similarly,  if  the  detector  observes  a  new  MPR  or  1-hop  neighbor,  the  detector  also 
sends an ID-Forward message to transmit its updated evidence to its 2-hop neighbors. 
An ID-Forward message is sent after a random jitter time (4523. First, we demonstrate an example of 
the  Man-In-the-Middle  attack.  Second,  we  illustrate  how  detectors  residing  at  the 
neighbors of attackers detect the attack. 
264 
C.H. Tseng et al. 
Example Man-In-the-Middle Attack. The attacker, node 6, is going to hijack the 
route,  changing  it  to  89673.  To  launch  the  attack,  the  attacker  
utilizes attack methods 1 and 3 in 5.1 to create the virtual links. Then, the attacker 
can  use  the  virtual  links  to  lure  nodes 8 and 3  to  change  the  route  as  the attacker 
expects.  
The attacker  uses  attack  method  1:  forge  its  neighbor  list  in  its  Hello  message. 
Node  6  adds  node  3  and  8  in  its  1-hop  neighbor  list  and  broadcasts  its  Hello 
message with this new forged neighbor list. Also, the attacker uses attack method 3: 
forge its MPR selector set in its TC messages. Node 6 adds node 3 and 8 in its MPR 
selector set, and broadcasts its TC messages with this new forged new MPR selector 
set. By the forged Hello and TC message, the attacker creates the virtual links, 6->8 
and 6->3. 
8
9 
Hello (6) = {1,5,7,9,3,8}
TC (6) = {1,5,7,9,3,8} 
6
4 
0 
5 
1 
2 
Fig. 8. Example attack scenario 
7 
3
The attacker uses the virtual link 6->3 to lure node 8 and 9 to change the route to 
be  8  9673  instead  of  84523.  While  node  8  receives  the 
forged TC message of node 6, node 8 believes that node 6 is the last hop to node 3. 
Then node 8 computes the new route, 8->9->6->3 and chooses the new route (3 hop) 
instead of the original one (4 hops). So node 8 sends the packets to node 9 toward 3. 
Note that node 8 does not receive the forged Hello message from node 6; node 8 does 
not choose node 6 as the next hop toward node 3.  
Also,  node  9  knows  that  node  3  is  the  neighbor  of  node  6  from  the  new  forged 
Hello message. Then node 9 believes node 6 is the best next hop to node 3 and sends 
the packets from node 8 to node 6. Thus, the attacker successfully attracts the packets 
from node 8 toward 3, sending it to the attacker itself and using node 7 to finish the 
new route. 
Similarly, the attacker uses the virtual link 6-8 to lure node 3 and 7 to change the 
route to 3->7->6->9->8 instead of 3->2->5->4->8. Therefore, the attacker successful 
changes  the  bi-directional  route,  and  the  attack  is  complete.  Note  that  the  forged 
messages are almost normal OLSR messages except for the forged content. Since the 
originator of the messages forges its neighbor information, only the related neighbors 
can be aware of the forged messages. 
DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection 
265 
Detecting  the  attack.  While  the  neighbors  of  node  6,  node  1,5,7,9,  receive  the 
forged  messages,  the  detectors  residing  on  the  neighbors  can  detect  the  forged 
messages from the attacker, node 6. For node 9, because they have the neighbor list 
of node 8 from the Hello message directly, node 9 knows that node 8 does not agree 
that node 6 is node 8’s neighbor. So node 6 should not claim node 8 as its neighbor 
because the neighboring record will expire in 6 seconds. Thus, the detector at node 
9 determines that node 6’s Hello message violates C1 against node 8. In its Hello 
message,  8  does  not  claim  node  6  as  its  MPR,  and  thus  node  6’s  TC  message 
violates C3 against node 8.  
However, node 9 does not have the Hello message of node 3. Node 9 sends an ID-
Request to ask node 6 to send an ID-Evidence message of node 3 because node 6 is 
the only node can reach node 3 from node 9 according to the Hello message of node 
6.  Although  node  6  can  have  ID-Evidence  message  of  node  3  from  node  7,  node  6 
cannot forge the message by adding itself into the 1-hop neighbor list and MPR set of 
the  message  because  of  authentication  protection.    So  node  9  cannot  have  ID-
Evidence message having node 6 in the 1-hop neighbor list MPR set of the message. 
Thus,  node  9  determines  that  node  6’s  Hello  and  TC  message  violates  C1  and  C3 
against node 3. 
Similarly, the detectors of node 1,5,7 detect that node 6’s Hello and TC messages 
violate C1 and C3 against nodes 3 and 8. So the detectors of node 1,5,7,9 correct their 
evidence tables and the forged messages before their OLSR layers can process them. 
Since  the  OLSR  layers  of  the  attacker’s  neighbors  have  the  correct  messages,  the 
OLSR layers have correct topology and routing tables to send the new correct OLSR 
messages. For example, node 9 does not count node 6 as the neighbor of node 3 and 
sends the correct TC message of node 6, which does not contains nodes 3 or 8. After 
node 8 receives the corrected TC message from node 9, node 8 does not counts node 6 
as  last  hop  to  node  3  and  chooses  the  original  route,  8-4-5-2-3.  Thus,  the  hijacked 
route becomes the original route and is recovered. 
6.2   Performance Evaluation 
Because mobility results are the major factors of message loss and lost links, which 
significantly  affect  the  three  performance  metrics,  it  is  challenging  to  have  good 
results  in  mobile  topologies,  especially  with  high  degree  mobility.  We  will  discuss 
performance metrics in mobile topologies and the better results in stable topologies. 
Since  background  end  to  end  traffic  has  little  impact  on  performance,  we  will  not 
discuss it here. 
A.  Mobile  Topology.  Mobile  nodes  follow  the  Random  Waypoint  Mobility  Model 
with random speed up to 20 m/s (45 mile/hr) with no pause time. Network topologies 
consist of four types of topologies: (1) 10 nodes in 1km x 1km, (2) 50 nodes in 1.5km 
x 1.5km, (3) 100 nodes in 2km x 2km, (4)150 nodes in 2.5km x 2.5km. For each type 
of topology, the simulation has run 50 times: five different kinds of node allocations 
and 10 different set of mobility degrees: 0, 30, 60, 120, 300 seconds pause time, and 
0-10, 1-20 m/s node speed. 
266 
C.H. Tseng et al. 
Fig. 9. Message Overhead vs. Scalability               Fig. 10. Message Overhead vs. Mobility 
Fig. 11. Max and Ave lasting T.I. time               Fig. 12. ID-Evidence Message waiting time 
1.  Message  Overhead.  ID-Evidence  message  is  the  main  source  of  message 
overhead. The ratio of  message overhead  for ID-Evidence, ID-Forward, ID-Request 
message  in  average  is  85%,  12.5%,  2.5%  in  size  and  58%,  39%,  3%  in  frequency. 
ID
-
Evidence
Message overhead formula is:  
-
+
ID 
Hello
Forward
TC
+
+
ID 
-
Request