file  system.  If  a  ghostware  program  creates  a  file  using 
activities during reboot did  introduce  some  false positives. 
low-level  APIs  in  an  NTFS  file  system  that  breaks  any  of 
They  were  mostly  log  files  generated  by  always-running 
the restrictions, Win32 API calls will not be able to access 
services  (such  as  anti-virus real-time  scanners and Change 
them.  Examples  include  long  full  pathnames,  filenames 
and  Configuration  Management  (CCM)  services),  System 
with  trailing  dots  or  spaces,  filenames  containing  special 
Restore  [SR]  file-change  log  entries,  OS  prefetched  files 
characters, reserved filenames, etc. [MSDN]. 
[PF], and browser temporary files. On all but one machine, 
To  detect  files  hidden  by  ghostware,  our  GhostBuster 
the  number  of  false  positives  was  two  or  less  and  they 
tool  performs  the  high-level  scan  using  either 
the 
were  easily  filtered  out  through manual  inspection. On  the 
FindFirst(Next)File  APIs  or  the  “dir  /s  /b”  command,  and 
one  machine  that  had  7  false  positives,  we  disabled  the 
performs  the  low-level  scan  by  reading  the  Master  File 
CCM service, re-ran the scan, and saw the number of false 
Table  (MFT),  which  is  the  core  of  the  NFTS  volume 
positives reduced to 2.  
structure  [SR00],  and  other  NTFS  metadata  directly.  A 
comparison  of  the two  scans reveals hidden  files. We note 
3. Detection of Registry-hiding Ghostware 
that  not  all  files  revealed  by  the  comparison  necessarily 
come from ghostware programs; for example, some benign 
software bugs may generate filenames that are too long, or 
files  may  be  created  in  the  very  small  time  window 
between  when  the  high-  and  low-level  scans  are  taken. 
However, in practice the noise level from this is extremely 
low.  For  the  outside-the-box  solution,  our  tool  scans  the 
potentially  infected  hard  drive  from  a  clean  WinPE  CD 
boot  using  either  the  Win32  APIs,  the  “dir  /s  /b” 
command,  or  the  low-level  scanning  code,  and  compares 
The  Windows  Registry  is  a  centralized,  hierarchical 
store for configuration data containing name-value pairs. A 
Registry  key  is  like  a  file-system  folder  and  can  contain 
one  or  more  Registry  items  (or  values).  The  Registry  is 
composed  of  several  “hives”  [SR00],  each  of  which  is 
backed 
by 
a 
file; 
for 
example, 
“C:\windows\system32\config\system” 
stores 
the 
HKLM\system  hive,  and  “ntuser.dat”  in  the  user  profile 
folder stores the per-user sub-hive under the HKU hive.  
the result with the inside high-level scan. 
Most Windows ghostware programs we studied do not 
Experimental Results
modify  OS  files,  presumably  for  two  reasons:  the 
Windows  system  source  code  is  not  widely  available,  and 
Figure  3  shows  the  GhostBuster  detection  results  for 
there  are many  easy-to-use  Auto-Start Extensibility Points 
the  10  file-hiding  ghostware  programs.  The  Urbin  and 
(ASEPs)  [WRV+04]  that  applications  can  “hook”  to  get 
Mersting  Trojan  samples  were  captured  from  actual 
automatically  started  as  essentially  “part  of  the  system”. 
infected machines. The remaining programs were obtained 
Most  of  the  ASEPs  reside  in  the  Registry.  Examples 
from  various  Web  sites.  The  hidden  files  are  divided  into 
include  the  HKLM\SYSTEM\CurrentControlSet\Services 
three  categories:  (1)  ghostware  binaries  including  EXEs, 
Registry  key  for  auto-starting  drivers  and  services,  the 
DLLs,  and  drivers;  (2)  ghostware  data  files  such  as  .ini 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\
configuration  files  and  .log  files;  and  (3)  other  target  files 
Run  key  for  auto-starting  additional  processes,  and  the 
specified  to  be  hidden  by  either  rootkits/Trojans  or  file 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\
hiders.  The  results  clearly  demonstrate 
the  major 
Explorer\Browser  Helper  Objects  for  auto-loading  DLLs 
advantage  of  the  GhostBuster  cross-view  diff  approach:  it 
into the Internet Explorer browser.  
can  uniformly  detect  files  hidden  by  ghostware  programs 
By  extensively  studying  120  real-world  spyware 
implemented  with  a  wide  variety  of 
interception 
programs, we have shown that the ASEP-based monitoring 
techniques.  
and  scanning  technique  is  effective  for  detecting  spyware 
The  execution  time  for  hidden-file  detection  depends 
programs  [WRV+04].  In  a  similar  study  of  30  malware 
on  the disk  size,  speed,  and usage. We  tested GhostBuster 
programs,  we  found  that  each  hooked  at  least  one 
on  8  machines  including  4  corporate  desktops,  3  home 
Registry-based  ASEP.  Since  ASEP  hooks  are  critical  for 
machines,  and  1  laptop.  Seven  machines  had  disk  usage 
their  continued  operation  across  reboots,  many  ghostware 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:09:20 UTC from IEEE Xplore.  Restrictions apply. 
programs  hide  their  hooks  to  evade  detection  and  resist 
Experimental Results
removal.  
Figure  4  shows  the  results  of  GhostBuster  detecting 
The  first  six  file-hiding  ghostware  programs  that  we 
six  Registry-hiding  ghostware  programs.  Both  of  the 
analyzed  in  the  previous  section, namely  Urbin, Mersting, 
Trojans  that  came  from  the  wild,  Urbin  and  Mersting, 
Vanquish,  Aphex,  Hacker  Defender,  and  ProBot  SE,  also 
hook  the  AppInit_DLLs  ASEP  to  allow  their  DLL  to  be 
hide  their  ASEP hooks.  The hiding  techniques  are  similar 
loaded into every process that loads User32.dll [AID]; they 
to  those  illustrated  in  Figure  2  except  that  the  file-related 
both hide  the  ASEP hook.  Hacker  Defender hides  both  of 
APIs 
Kernel32!FindFirst(Next)File 
and 
its  ASEP hooks,  one  for  the  service  hxdef100.exe  and  the 
NtDll!NtQueryDirectoryFile  are  replaced  by  the  Registry-
other for the driver hxdefdrv.sys. Vanquish and ProBot SE 
related 
APIs 
Advapi32!RegEnumValue 
and 
similarly  hide  their  service  and  driver  hooks.  ProBot  SE 
NtDll!NtEnumerateKey, 
respectively.  Alternatively, 
and Aphex hide their Run key hooks for starting additional 
ghostware  programs  can  use  the  kernel-level  Registry 
user-mode processes. 
callback functionality to intercept and filter Registry query 
results. 
On  the  8  machines  we  tested,  inside-the-box  hidden-
ASEP  detection  took  between  18  to  63  seconds.  In  all  the 
 Another  form  of  Registry  hiding  exploits  differences 
experiments,  we  observed  only  one  false  positive  on  one 
in  the  way  Win32  API  and  the  Native  API  interpret 
machine:  the  data  field  of  the  AppInit_DLLs  entry 
Registry  entry  names: 
the  former  assumes  NULL-
contained  corrupted data  that did not  show up  in RegEdit, 
terminated  strings,  while  the  latter  uses  counted  Unicode 
but  appeared  in  the  raw  hive  parsing.  The  problem  was 
strings  [YH]. As a result, Registry  entries  created with  the 
fixed by exporting the parent key (to a text file without the 
Native  API  can  be  hidden  from  most  of  the  Registry 
corrupted data), by deleting the parent key, and then by re-
editors  that  use  the  Win32  API  by  embedding  NULL 
importing the exported key. 
characters  as  part  of  the  name.  Yet  another  form  of 
Registry  hiding  exploits  some  Registry  editors’  software 
bugs  in  handling  long  names  that  allow  certain  entries  to 
become 
invisible.  The  GhostBuster  hidden-Registry 
detection tool described next can detect these two forms of 
hiding as well. 
4. Detection of Process/Module-hiding 
Ghostware
In  addition  to hiding persistent  state  such  as  files  and 
Registry  entries,  some ghostware programs hide processes 
GhostBuster  uses  either  the  standard  Win32  Registry 
from the commonly used Task Manager utility and the tlist 
enumeration  APIs  or  the  RegEdit  program  for  the  high-
command-line  utility  that  is  popular  among  systems 
level  scan  of  all  ASEP hooks.  Since  each  Registry  hive  is 
administrators.  In  many  environments,  process  hiding  is 
simply a file with a well-defined schema [SR00], our low-
considered  more  important  than  file  and  Registry  hiding 
level  scan  copies  and  parses  each  hive  file  directly  to 
because, while there are typically hundreds of thousands of 
retrieve  all  ASEP  hooks  thus  bypassing  the  APIs.  These 
files  and  Registry  entries  [WVD+03],  there  are  usually 
copies are “truth approximation” instead of the truth itself, 
only tens of processes running on a machine and so it may 
as  shown  in  Figure  1,  because  some  ghostware  programs 
be  feasible  for  the  user  to  go  through  the  entire  list  in  an 
may  eventually  be  able  to  interfere  with  the  copying 
attempt to identify suspicious entries. 
process.  For 
the  outside  scan,  GhostBuster  mounts 
Registry  hive  files  from  the  potentially  infected  system 
drive  under  the  live  Registry  loaded  from  the WinPE  CD, 
and  uses  the  Win32  APIs  or  RegEdit  to  scan  all  ASEP 
hooks to extract the truth. 
Figure  5  illustrates  the  different methods  used  by  the 
four  process-hiding  ghostware  programs  in  our  collection. 
Aphex intercepts process list queries by modifying the IAT 
entry for the NtDll!NtQuerySystemInformation API, while 
Hacker Defender and Berbew hijack the queries by putting 
Detection of hidden ASEP hooks is particularly useful 
a 
“jmp” 
instruction 
inside 
the 
for  ghostware  removal:  it  locates  the  Registry  keys  that 
NtDll!NtQuerySystemInformation  in-memory  code.  The 
can be deleted to disable the ghostware after a reboot, even 
DKOM  implementation  of  the  FU  rootkit  presents  a 
if  the  ghostware  files  still  remain  on  the  machine.  It  also 
unique  challenge:  it  hides  a  process  by  removing  its 
reveals  the  pathnames  of  the  associated  program  files;  the 
corresponding  entry  from  the  Active  Process  List  kernel 
user can locate and remove those  files  once the machine is 
data 
structure.  Since 
the 
list 
is  only  a  “truth 
rebooted  and 
those 
files  are  no 
longer  hidden. 
approximation”  for  responding  to  process  list  queries  and 
Alternatively, on-demand anti-virus scan can be invoked to 
does  not  necessarily  reflect  all  the  processes  that  own  at 
remove  those  key  files  as  well  as  other  auxiliary  files 
least  one  schedulable  thread  [YK04],  a  process  can  be 
installed by the ghostware.     
absent  from  the  list  while  remaining  fully  functional.  One 
can  even  use  the  FU  rootkit  to  hide  the  other  process-
hiding ghostware programs to increase their stealth. 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:09:20 UTC from IEEE Xplore.  Restrictions apply. 
Although  less  popular,  administrator  tools  such  as 
processes,  the  GhostBuster  report  contains  many  such 
Process  Explorer  [PE],  AskStrider  [WR+04]  and  tlist  can 
entries. 
be  used  to  enumerate  all modules  (e.g.,  DLLs)  loaded  b y 
The inside-the-box scanning and diff for the combined 
each process and all drivers loaded by the system to detect 
hidden-process and hidden-module detection took between 
any  suspicious  entries.  For  example,  AskStrider  can  be 
1  and  5  seconds.  It  is  conceivable  that  false  positives  can 
used  to  quickly  detect  a  Hacker  Defender  infection  today 
be  introduced  if  any  process  happens  to  get  started  or 
by  revealing  its  unhidden  hxdefdrv.sys  driver.  To  hide  its 
terminated  during  that  short  interval,  but  we  have  not 
modules 
from 
these 
tools 
and 
the  underlying 
Kernel32!Process32First(Next)NtDll!NtQueryInformati
encountered  any  false  positives  in  our  experiments  so  far. 
For  the  outside-the-box  scan,  the  kernel  memory  dump 
onProcess  calling  chain,  the  Vanquish  rootkit  blanks  out 
through blue screen added 15 to 45 seconds. 
the  pathname  of  vanquish.dll 
from 
the  Process 
Environment  Block  (PEB)  module  list  in  the  per-process 
5. Extensions 
memory.     
For  inside-the-box  hidden-process  detection,  our  tool 
Ghostware Targeting Issues
performs 
the 
high-level 
scan 
using 
the 
NtDll!NtQuerySystemInformation  API,  and  uses  a  driver 
to  perform  the  low-level  scan  by  traversing  the  Active 
Process  List.  A  diff  between  these  two  scans  can  reveal 
API-intercepting ghostware,  but  it  cannot detect processes 
hidden  through  DKOM  because  the  low-level  scan  does 
not contain the truth. To detect the latter, our tool supports 
an  advanced  mode  that  performs  the  low-level  scan  by 
traversing  another  kernel  data  structure  that  maintains  the 
It  is  possible  for  ghostware  to  target  specific  OS 
utilities;  for  example, a process-hiding ghostware program 