Malicious CDNs: Identifying Zbot 
Domains en Masse via SSL 
Certiﬁcates and Bipartite Graphs
Dhia Mahjoub and Thomas Mathew
Overview
• The goal of this talk is to provide a series of simple 
statistical methods that allow a researcher to 
identify ZBot domains using SSL data 
• All of the data discussed is open source and can 
be obtained at scans.io/study/sonar.ssl (thanks 
rapid7!)
SSL
• Secure Socket Layer 
• Method of encrypting trafﬁc over HTTP 
• Increase in websites employing SSL 
SSL (cont)
• Interested in the x509 certiﬁcate 
• Contains information regarding the issuer, subject, 
creation date, etc 
• Each certiﬁcate associated with IP(s) 
• x509 contain a CommonName ﬁeld which can be 
either blank or contain an alphanumeric string 
• Our interest is in CommonNames that are valid 
domain names
SSL (Cont)
• x509 certiﬁcates reveal valuable network 
information 
• Maps relationship between domestic vs 
commercial IP space 
•  Gives information regarding ownership of a 
particular IP
SSL (Cont)
CDNs, SSL, Zbot?
• CDNs serve as content delivery for popular domains 
• CDNs help establish similar connections to a 
domain by hosting identical x509 certiﬁcates or 
x509 certiﬁcates with the same common name 
• In recent times Zbot has attempted to use its 
network of hacked machines as CDN for malicious 
actors (hosts carding forums, trojans, etc) 
• Can we use SSL data to help us identify Zbot?
Sonar Data
• 2x or 4x monthly scan of the entire IPv4 IP space 
• x509 —> IP pairing 
• Sampled data because of restrictions 
Sonar Data
• Longitudinal study of Sonar SSL data. Examine 
hosting patterns over a 5 month time period 
• Hope to identify anomalous behavior
Sonar Data
• Table documents the 
number of SHAs and 
CommonNames per 
month 
• Manually infeasible
Unique 
SHAs
Unique 
Common 
Names
JAN
1,068,402
850,236
FEB
692,542
589,609
MARCH
977,484
813,773
APRIL
249,252
233,834
MAY
1,098,914
958,321
Investigation
• Data easier to work with if it has a natural structure 
• What structure naturally captures this type of data?
Investigation
• Graphs can be used 
to model network 
data 
• We will work with 
bipartite graphs 
• A bipartite graph is 
a graph whose 
vertices can be split 
into two disjoint sets 
Bipartite Graphs
• Two sets: 
• Common Names 
• ASNs 
• Could create a bipartite graph 
between CommonName —> IP, etc 
• Choose ASN because provides 
best resolution to analyze the data
Bipartite Graph
• Multiple methods of analyzing the graph: 
• Graph factorization 
• Identify minimum connected components 
• Extract minimum spanning tree
Graph Analytics
• Our interest is in anomalous 
substructures within the 
graph 
• Examining out degree of 
CommonNames to discover 
anomalies 
• Plot histogram of graph 
degree counts
Graph Analytics
• Histogram shows that there 
are a few outliers in the tail 
• Majority of the domains 
bounded between 1-200 
• These outliers are expected. 
google and dlink would be 
widely distributed domain 
names across IP space
Popular Graphs 
• Goal: Create a measure 
of popularity for each 
CommonName 
• Have it based on 
topological features of 
the bipartite graph 
• Calculate frequencies of 
what type of ASNs host 
each common name
Popular Graphs
• Two different types 
of histogram 
distribution 
• naranyamarket.com 
is found on some 
extremely popular 
ASNs
Filters for Anomaly Detection
• We want a ﬁlter that is more sensitive to ‘low 
frequencies’ 
• Fits our hypothesis regarding hosting patterns of 
popular domains 
• To create such a ﬁlter we increase the number of 
bands in the lower frequency spectrum (ie 1-5 
domains map to an ASN).
Filters for Anomaly Detection
• Bucket the frequencies into 9 different bands. 
• ie 1-5, 5-10, 10-20, 20-50, 50-100, 1000-2000, 
etc 
• notice the higher resolution for lower frequencies 
• Each domain is then associated with a 9-d vector
Filters for Anomaly Detection
• Use the following algorithm: 
• Split CommonNames by increments of 10.  
• Within each of these groups create the distance 
matrix (n x n) between each pairwise 
CommonName using the Euclidean norm 
• Calculate the norm for each column vector
Algorithm Results
• This is the result from a 
particularly interesting 
interval (110-110) 
• The histogram clearly shows 
a signiﬁcant outlier (more 
than 2 std away) 
• The outlier in the high band 
was ‘tangerine-secure.com’ 
which we ended up verifying 
as a ZBot domain
Algorithm Results
• Another interesting 
band is the 30-40 ASN 
range 
• Much tighter spectrum 
of results 
• The tail end of the 
histogram contains 
interesting domains
Algorithm Results
• Out of these 5 domains - three 
are ZBot (meenyousecu.com, 
securedatassl.net, 
secure.tangerineaccess.com’) 
• Identiﬁed via further probing 
• This anomaly detection 
method was able to reduce 
~500k domains down to a 
manageable list of 8 domains 
• Gave us actionable 
intelligence regarding which 
ASNs to monitor more closely