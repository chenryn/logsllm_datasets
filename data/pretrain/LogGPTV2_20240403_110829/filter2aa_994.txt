### Malicious CDNs: Identifying Zbot Domains in Bulk via SSL Certificates and Bipartite Graphs
**Authors: Dhia Mahjoub and Thomas Mathew**

#### Overview
The objective of this presentation is to introduce a series of straightforward statistical methods that enable researchers to identify ZBot domains using SSL data. All the data discussed is open source and can be accessed at [scans.io/study/sonar.ssl] (courtesy of Rapid7).

#### SSL (Secure Socket Layer)
- **Definition:** SSL is a protocol for encrypting traffic over HTTP.
- **Trend:** There has been a significant increase in websites employing SSL.
- **Focus:** Our interest lies in the x509 certificate, which contains information about the issuer, subject, creation date, etc. Each certificate is associated with one or more IP addresses. The CommonName field in an x509 certificate can be either blank or contain an alphanumeric string. We are particularly interested in CommonNames that are valid domain names.

#### SSL Certificates and Network Information
- **Revealing Data:** x509 certificates provide valuable network information, such as the relationship between domestic and commercial IP spaces and ownership details of specific IPs.

#### CDNs, SSL, and Zbot
- **CDN Role:** Content Delivery Networks (CDNs) serve popular domains by hosting identical x509 certificates or certificates with the same CommonName.
- **Zbot Exploitation:** Recently, Zbot has attempted to use its network of compromised machines as a CDN for malicious activities, such as hosting carding forums and trojans.
- **Research Question:** Can SSL data help us identify Zbot domains?

#### Sonar Data
- **Data Collection:** Monthly scans of the entire IPv4 IP space, resulting in x509 certificate to IP pairings. Due to restrictions, only sampled data is used.
- **Longitudinal Study:** A 5-month longitudinal study of Sonar SSL data to examine hosting patterns and identify anomalous behavior.

| Month | Unique SHAs | Unique Common Names |
|-------|-------------|---------------------|
| JAN   | 1,068,402   | 850,236             |
| FEB   | 692,542     | 589,609             |
| MARCH | 977,484     | 813,773             |
| APRIL | 249,252     | 233,834             |
| MAY   | 1,098,914   | 958,321             |

#### Investigation
- **Data Structure:** To make the data more manageable, we need a natural structure. Graphs, specifically bipartite graphs, are ideal for modeling network data.
- **Bipartite Graphs:** These graphs have vertices that can be split into two disjoint sets. In our case, the sets are Common Names and Autonomous System Numbers (ASNs). We chose ASNs because they provide the best resolution for analyzing the data.

#### Analyzing the Bipartite Graph
- **Methods:** Various techniques can be used to analyze the graph, including:
  - Graph factorization
  - Identification of minimum connected components
  - Extraction of the minimum spanning tree

#### Graph Analytics
- **Anomalies:** We are interested in identifying anomalous substructures within the graph. By examining the out-degree of CommonNames, we can discover anomalies. A histogram of graph degree counts helps visualize these patterns.
- **Histogram Analysis:** The histogram shows a few outliers in the tail, with the majority of domains having between 1-200 connections. Expected outliers include widely distributed domain names like Google and D-Link.

#### Popular Graphs
- **Popularity Measure:** We aim to create a measure of popularity for each CommonName based on topological features of the bipartite graph. This involves calculating the frequencies of ASNs that host each common name.
- **Distribution Patterns:** Two types of histogram distributions were observed. For example, naranyamarket.com was found on some extremely popular ASNs.

#### Filters for Anomaly Detection
- **Sensitivity to Low Frequencies:** We want a filter that is more sensitive to low-frequency domains, fitting our hypothesis about the hosting patterns of popular domains.
- **Frequency Bands:** Bucket the frequencies into 9 different bands, with higher resolution for lower frequencies. Each domain is then associated with a 9-dimensional vector.

#### Anomaly Detection Algorithm
- **Algorithm Steps:**
  1. Split CommonNames by increments of 10.
  2. Within each group, create a distance matrix (n x n) between each pairwise CommonName using the Euclidean norm.
  3. Calculate the norm for each column vector.

#### Algorithm Results
- **Interesting Interval (110-110):** The histogram clearly shows a significant outlier (more than 2 standard deviations away). The outlier, tangerine-secure.com, was verified as a ZBot domain.
- **ASN Range (30-40):** This range showed a tighter spectrum of results, with interesting domains in the tail end of the histogram.
- **Identified Domains:** Out of five domains, three (meenyousecu.com, securedatassl.net, secure.tangerineaccess.com) were identified as ZBot domains through further probing.
- **Outcome:** This anomaly detection method reduced approximately 500,000 domains to a manageable list of 8, providing actionable intelligence on which ASNs to monitor more closely.