### System info
  * Playwright Version: [v1.32]
  * Operating System: [Windows 11, macOS 13.2]
  * Browser: [All]
**Config file**
    // playwright.config.ts
    import { PlaywrightTestConfig, devices } from '@playwright/test';
    import { join } from 'path';
    import { isCI } from './utils';
    const CI = isCI();
    // Use process.env.PORT by default and fallback to port 3000
    const PORT = process.env.PORT || 3000;
    // Set webServer.url and use.baseURL with the location of the WebServer respecting the correct set port
    const baseURL = `http://localhost:${PORT}`;
    // Reference: https://playwright.dev/docs/test-configuration
    const config: PlaywrightTestConfig = {
      globalSetup: require.resolve('./global-setup'),
      timeout: 30 * 1000,
      testDir: join(__dirname, 'tests'),
      forbidOnly: CI,
      retries: 1,
      workers: 1,
      outputDir: 'e2e-results/',
      reporter: [['list'], ['junit', { outputFile: './e2e-results/results.xml' }]],
      use: {
        baseURL,
        trace: 'retain-on-failure',
        screenshot: 'only-on-failure'
      },
      projects: [
        {
          name: 'API',
          testDir: 'tests/api',
        },
        {
          name: 'Desktop Chrome',
          testDir: 'tests/ui',
          use: {
            ...devices['Desktop Chrome'],
          },
        },
        {
          name: 'Desktop Safari',
          testDir: 'tests/ui',
          use: {
            ...devices['Desktop Safari'],
          },
        },
        // Test against mobile viewports.
        {
          name: 'Mobile Chrome',
          testDir: 'tests/ui',
          use: {
            ...devices['Pixel 5'],
          },
        },
        {
          name: 'Mobile Safari iPad',
          testDir: 'tests/ui',
          use: devices['iPad (gen 6)'],
        },
        {
          name: 'Mobile Safari iPhone',
          testDir: 'tests/ui',
          use: devices['iPhone 13'],
        },
      ],
    };
    export default config;
**Test file (self-contained)**
**Steps**
  * Run any test on the page with >> attributes
**Expected**
The HTML elements with any form of >> should works fine with Playwright
including:
    &gt;&#x200B;&gt;
    &gt;&gt; 
**Actual**
Any HTML elements with >> break the Playwright parser and make many elements
on the page not accessible (not only the ones with >> attributes) Pick locator
also does not recognize those elements.  
Does not work:
    &gt;&#x200B;&gt;
    &gt;&gt; 
Works fine:
    &gt; &gt;  (space between) 
    &gt;&nbsp;&gt; 