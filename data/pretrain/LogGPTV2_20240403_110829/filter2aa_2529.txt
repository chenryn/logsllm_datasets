Bypassing Android 
Password Manager Apps 
Without Root
Stephan Huber, Siegfried Rasthofer, Steven Arzt
Fraunhofer SIT
2
3
Stephan
•
Mobile Security Researcher at 
Fraunhofer SIT
•
Enjoys teaching students in 
Android (app) hacking
•
Twitter: @teamsik
Siegfried
•
Head of Department Secure 
Software Engineering at Fraunhofer 
SIT
•
Founder of CodeInspect
•
Web: www.rasthofer.info
•
Twitter: @teamsik
Acknowledgements
• Benedikt Hiemenz
• Daniel Hitzel
• Daniel Magin
• Joseph Varghese
• Julien Hachenberger
• Max Kolhagen
• Michael Tröger
• Philipp Roskosch
• Wittmann Andreas
4
5
Wish
6
aim=e1Ioci Ohyoh>wae0 kei7Gae$si bei3cooai eGah+K5iuM yae$V4leex ohjiu_Hei6 fee'Cho5Oo jahK3Ad+ai
oH)eewaec0 KiG&ee4ahy ujohj%ie1J wae,Gei6mu uSh=i2ahng ainai]Le2i Ieb~o5fohF
ohN\ah1gae Dooch\ei7i ich]a're1U aiToh5cee= eiZ2thaip; ni"W3oom?i oi(Sh7vie)
gu}i8Tohco il@ah@ve9U cie"tae8Eo Au&S3aigae eir0ieHo)c ohch/ah6Ii Bie*t9xie"
ukieTh6fu[ ie*vieZai9 ohwu(v0eeY ua&ghi7aeR em?ohG?oi3 phu$L^ah4p ieX&i2shei
aiZie%l7Oo ood8Pen phie9Ib(ie beiMei[r7a Nagh(aid0U
AhTee:tah5 oY"a5pheib ohthe1Na.e eria9Ahn>u eid8Ohso!o Uv4ia6Gu`o Aeli1li$i&
Toth^ai8ph Euso6eu$ja vie8Ieh?ai leec4aeZ/o Eele+ph2na yai=b!a5Oo Wefoh&m4oh
Vo-oX9ka0v ei9eenuNih2oPh noo7Ish'ie Uaz6she|Zu oo0aiP*ee2 coh=Puo1Ve
roo9Kee-th ra@c3Ce7sh mabi6Malo[ auw1Eu\kie eiVoo,Kuu5 aiW\oo5phu Oos_abir7U
Reality
7
Note
Password-Manager
Password-Recycling
Single Sign On
8
App
GooglePlay Downloads
Keeper
10 – 50 m
Keepsafe
10 – 50 m
1Password
1 – 5 m
Dashlane
1 – 5 m
Lastpass
1 – 5 m
Avast
0.5 – 1 m
MyPasswords
0.5 – 1 m
F-Secure
100 – 500 k
PasswordManger
50 – 100 k
26 Vulnerabilities
9
• Premium features for free
• Resetting master password with ease
• Breaking C.I.A without ROOT
• Lost device scenario
• Mitm attack
• Via third party app
11
Premium upgrade for free !
12
13
App 1
App 2
Android
PC
Intent Communication (IPC)
14
PC
Android
adb shell am start -n /.DatabaseSettings –ei 
PAID-STATUS 2
class DatabaseSettings {
protected static boolean PAID = false;
protected void onCreate(Bundle bundle) {
…
if (getIntent().getIntExtra("PAID-STATUS", 0) == 2){
PAID = true;
}
…
}
public void onActivityCreated(Bundle bundle) {
…
checkBoxForBackup.setEnabled(PAID);
…
}
}
15
Resetting Master Password
16
Common Password Reset Process
Forgot Password
Verification
Code via Email
YES
Correct ?
Security Question
YES
Reset
Master Password
Correct ?
YES
USER
Lost-Device Scenario
17
Manifest:
adb shell am start -n 
com.xyz.android_apps.noname/.Dee
pLinkActivity
Start Activity:
18
19
Common Password Reset Process
Forgot Password
Verification
Code via Email
YES
Correct ?
Security Question
YES
Reset
Master Password
Correct ?
YES
USER
26
Get Master Secret
Master Secret
Extraction process
• ADB-backup
• Mitm attack
• Browser file access
• Residue attack
Decryption process
• Plaintext
• Custom crypto
• Hardcoded symmetric keys
• Custom obfuscation
28
1
2
Master Secret
Extraction process
• Mitm attack
Decryption process
• Custom crypto
29
1
2
User Authentication
30
username:password
success
HTTP + Custom Crypto
31
Authentication Process
http – POST - request
seed = time[ms]
key = random(seed)
enc_data = AES(key, auth_data)
seed = time[ms]
key = random(seed)
dec_data = AES(key, auth_data)
Body:
Header:
enc_data
encrypted payload
?
32
Authentication Process
http - POST
seed = time[ms]
key = random(seed)
enc_data = AES(key, auth_data)
seed = time[ms]
key = random(seed)
dec_data = AES(key, auth_data)
seed = time[ms]
key = random(seed)
dec_data = AES(key, auth_data)
Best Practices: Secure Communication
• Android, correct SSL/TLS*
• Stronger, SSL/TLS (Pinning)
• Android 7 supports pinning (security  configuration file)
• Use library with pinning support, e.g. OkHttp library 
(take care of version)
33
URL url = new URL("https://example.org");
URLConnection urlConnection = url.openConnection();
InputStream in = urlConnection.getInputStream();
…
*https://developer.android.com/training/articles/security-ssl.html
Master Secret
Extraction process
• Browser file access
34
1
35
API accessing browser elements
credentials
Pw Manager
36
Inject
37
base64(encr(key, PASS))
file:///data/data/package.name/shared_prefs/passwd_pref.xml
password manager process
Master Secret
Extraction process
• Residue attack
38
1
39
THE ACCOUNTMANAGER
THE WHAT ?
Android AccountManger
• “This class provides access to a centralized registry 
for the user‘s online accounts …“
• SQLITE Database for storing tokens or temp. 
Credentials 
• API provides access for Application
40
/data/system/users/0 # ls -l accounts.db
-rw-rw---- system
system
241664 2017-04-03 10:58 accounts.db
“With this in mind, you shouldn't pass the user's actual password to 
AccountManager.addAccountExplicitly(). Instead, you should 
store a cryptographically secure token that would be of limited use to an attacker. 
If your user credentials are protecting something valuable, you should carefully
consider doing something similar.”
https://developer.android.com/training/id-auth/custom_auth.html
Quote google developer (AccountManager)
41
DEMO TIME !
42
DEMO TIME !
43
AccountManager
ID
email
type
token
accounts.db
44
AccountManager
ID
email
type
token
com.account
PI:EMAIL
secret
Target App
account type
accounts.db
45
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
com.account
PI:EMAIL
secret
Target App
account type
installation
accounts.db
UID = 123
46
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
com.account
PI:EMAIL
stuff
Attacker App
account type
installation
accounts.db
UID = 456
47
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
UID = 456
COLLISION ! 
UID:123  UID:456
48
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
UID = 456
COLLISION ! 
UID:123  UID:456
uninstall target app
com.account
49
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
Not removed,
there is an app with matching account type
com.account
50
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
Attacker app can now access the secret !
com.account
Master Secret
Decryption process
• Hardcoded symmetric keys
• Custom obfuscation
51
2
Crypto – Do it right
52
“A cryptosystem should be secure even if everything 
about the system, except the key, is public knowledge.” *
*JOURNAL DES SCIENCES MILITAIRES. Janvier 1883. LA CRYPTOGRAPHIE MILITAIRE.
Kerckhoffs's principle
Correct encryption
53
master secret
(password)
cipher-text
key derivation function
(e.g. PBKDF2)
encryption or
decryption
Lsdh3ji
a32er4o
er3owe2
daerw23
Bad Crypto
54
master password
(mp)
encryption/ decryption
(enc(mp, d))
Lsdh3ji
a32er4o
er3owe2
daerw23
static key = s
store enc(s, mp)
mp =
mp 
cipher-text
+ [0…0]
data d
Hard-coded keys
55
String = staticinvoke f.b("ydPCPFnpqfPuuBYPzhfGXD38gtUPN2yj", 
$String);
public abstract class LPCommon {
//first part of the key
protected static String aA = "ldT52Fjsnjdn4390";
//second part of the key
protected static String aB = "89y23489h989fFFF";
AES-Key = ydPCPFnpqfPuuBYPzhfGXD38gtUPN2yj
AES-Key = ldT52Fjsnjdn4390 89y23489h989fFFF;
Broken Key Obfuscation
56
master password
(mp)
random key
self-implemented random
enc(k_rand, mp)
obf(k_rand) = k_obf
obfuscator
encryption
k_rand
sizeof(k_rand)=9
9
55
obfuscated key
Break Obfuscation
57
obfuscated key
?
k_rand
unknown
deobfuscation
break it
k_obf
random key
master password
(password= mp)
Example:
Abc2QNFeenpK
enc(k_rand, mp)
Key Obfuscation Analysis
58
k_random parts
k_obfuscated pos
k_obf parts
k[0] + k[1]
[0-2]
Abc
k[2]
3
2
k[3] + k[4]
[4-6]
QNF
k[5]
7
e
k[6] + k[7]
[8-11]
enp
k[8]
12
K
modified
changes
independent
reverse lookup table 
Reverse Lookup
59
obf(kr) parts
Key k[n] + k[n+1]
…
…
Abc
kl
…
…
QNF
Bq
…
…
enp
zz
2
y
..
…
K
1
…
..
e
Z
obfuscated key
k_obf
Example:
Abc2QNFeenpK
k_rand
klyBqZzz1
=
random key
lookup table
Decrypt Master Password
60
master password
(mp)
enc(k_rand, mp)
decryption
k_rand
klyBqZzz1
=
random key
Recommendations (1/2)
• Use Android KeyStore
• Key derivation (e.g. PBKDF2 (API), Conceal (Open 
Source, bcrypt, …))
• No static keys
• Use AES/CBC or AES/GCM
61
Recommendations (2/2)
• Disable backup flag (apps support backend 
synchronization -> implicit backup)
• If there is a master pass storage function, do not 
store it in plaintext
• Do not store the master pass in the local app 
folder, this is not a protected area
62
63
Keeper
Lastp
1Pass
MyPass
Avast
F-Sec
Keeps.
PwMgr
Mirsoft
Dash
Master/PIN
X
X
X
X
X
X
X
X
Hardcoded
Key
X
X
X
X
Sandbox
Bypass
X
X
X
X
X
Side channel
X
X
X
X
X
Subdomain
X
X
X
X
X
X
Data leakage
X
X
X
Partial 
encryption
X
Broken sync.
X
www.sit4.me/pw-manager
64
66
THIS IS THE END
MY FRIEND
67
Stephan Huber
Email: PI:EMAIL
Siegfried Rasthofer
Email: PI:EMAIL
Twitter: @teamsik
Website: www.team-sik.org