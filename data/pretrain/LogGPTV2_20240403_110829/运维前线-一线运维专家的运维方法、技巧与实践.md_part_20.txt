:/Stage[main]/Main/File[/etc/yum.repos.d/nginx.repo]/ensure:defined
/Stage[main]/Main/File[/etc/yum.repos.d/Centos-Vault.repo]/ensure
/Stage[main]/Main/File[/etc/yum.repos.d/epel.repo]/ensure:defined
/Stage[main]/Main/File[/etc/yum.repos.d/CentOs-Media.repo]/ensure:
1root
1root
1root
1root
1root
1root
root
root
root
root
root
root
1250No
3664Not
957
630Not
638
No
No
406:44 puppetlabs.repo
406:44nginx.repo
4 06:44 Cent0s-Debuginfo.repo
406:44Cent0s-Base.repo
406:44epel.repo
06:44Cent0s-Vault.repo
06:44Cent0s-Media.repo
---
## Page 109
我们将服务器端的文件依次复制到此目录的/etc下，操作如下所示：
我们观察下 node.pp文件，在这个文件里，source 值会告诉 Puppet去哪里寻找文件，我们将
来提示。
如下命令：
Puppet利用 node（节点）来区分不同的客户端，并且会给不同的客户端分配不同的资源，
cp/etc/(crontab,hosts,resolv.conf) /etc/puppet/modules/pushfile/files
如果配置文件是正确的，则什么也不显示；如果检测到是错误的，则会以红色醒目字体
puppetparservalidatenode.pp
node.pp 配置文件比较长并且也很复杂，我们究竟应该使用什么方法呢？我们可以输入
我们用tree命令来查看下 pushfle模块的目录树结构，命令如下：
source => "puppet://server.cn7788.com/modules/pushfile/resolv.conf",
node 'nginx.cn7788.com'{
group => root,
node'fabric.cn7788.com'{
group => root,
node 'client.cn7788.com'{
服务器端的/etc/puppet/manifests/node.pp文件内容如下所示：
mode
owner
{"/etc/resolv.conf":
file
mode
owner
{"/etc/hosts":
file
mode
{"/etc/crontab":
file
=>644，
=>
=>644，
=>
=>644，
root,
root
root',
第4章
集中配置管理工具Puppet
6
---
## Page 110
以client.cn7788.com机器举例说明下，输人如下命令：
94运维前线：一线运维专家的运维方法、技巧与实践
Notice: Finished catalog run in 0.47 seconds
33e0caafb614272212'
命令显示结果如下所示：
puppet agent --test --server server.cn7788.com
我们依次在3台 puppet-client 机器上面执行 puppet 命令，可以发现配置是成功的，这里
contentchanged
Info:Computing checksum on file/etc/crontab
+#0303
-#0104
-0303*
null2>&1
+#00
null
-0001***root/bin/bash
+++ /tmp/puppet-file20151104-17989-algkh6-02015-11-04 08:02:50.127072946 +0000
Notice: /Stage[main]/Main/Node[client.cn7788.com]/File[/etc/crontab]/content:
Info:Cachingcatalog forclient.cn7788.com
Info:Retrieving plugin
Info: Retrieving pluginfacts
命令显示结果如下所示：
#*/5
0102*
--/etc/crontab2015-11-0307:34:26.372044003+0000
Info:Applying configuration version'1446623887
/etc/puppet/modules/pushfile
tree/etc/puppet/modules/pushfile
directories，3 files
-14,10+14,9@@
01*
2>&1
templates
manifests
files
一
*root/bin/bash
resolv.conf
hosts
crontab
root/etc/init.d/iptablesstop
*root/bin/bash
root
root/etc/init.d/iptables stop
root
* user-name command to be executed
/bin/bash/root/sshdeny.sh>>/dev/null2>&1
/bin/bash/root/sshdeny.sh >>/dev/null 2>&1
/bin/bash/root/rsync_dir.sh>>/dev/nul12>&1
/root/backup.sh >> /dev/null 2>&1
/usr/local/nginx/sbin/cut_nginx_log.sh >>/dev/
/usr/local/nginx/sbin/cut_nginx_log.sh >> /dev/
---
## Page 111
程序，具体内容如下：
nagioscli 的模块，命令如下所示：
送 Shell脚本自动安装，其他节点机器暂时不需要安装这个程序，那么这个应该如何实现呢？
4.5
器的结果这里就不打印了。
我们主要还是通过模块的方法来实现这个需求，和4.4节一样，先在这里建立一个名为
在 /etc/puppet/modules/nagioscli/fles目录下安装Nagios 客户端名为 nagiosclilsh的 Shell
mkdir -p /etc/puppet/modules/nagiosins/{manifests,files,templates}
客户端机器 nginx.cn7788.com 没有安装Nagios 客户端程序，这时想通过 puppet-server 推
配置是成功的，/etc/crontab 被成功地推送过来了，而且内容也进行了置换，其他节点机
node 'nginx.cn7788.com{
node.pp 文件的内容如下所示：
rc.local
chown -R nagios:nagios /usr/local/nagios/libexec
cd nagios-plugins-1.4.13
tar zxvf nagios-plugins-1.4.13.tar.gz
cd/usr/local/src
useradd nagios
#!/bin/bash
echo
/usr/local/nagios/bin/nrpe
nagios/etc/nrpe.cfg
sed-i
/configure
/configure
如何根据节点机器名来选择性地执行Shell程序
na
na
na
ke install-daemon
ake install-plugin
1nrpe-2.12
hown nagios:nagios /usr/local/nagios
get http://syslab.comsenz.com/downloads/linux/nrpe-2.12.tar.gz
keinstall
ke
's@allowed_hosts=127.0.0.1@allowed_hosts=114.112.11.11@'/usr/local/
-c/usr/local/nagios/etc/nrpe.cfg-d
第4章集中配置管理工具Puppet95
---
## Page 112
了防止自动连接时 Puppet 频繁报错。
因为 client 和 fabirc 节点机器也在此 Puppet环境里，并配置成了自动连接。如此配置，是为
96运维前线：一线运维专家的运维方法、技巧与实践
Info:Applying configuration version'1446693418'
Info:Caching catalog for client.cn7788.com
Info:Retrieving plugin
Info:Retrieving pluginfacts
命令显示结果如下所示：
puppetd--test --server server.cn7788.com
这里以client.cn7788.com为例，在其主机上输人如下命令：
节点机器client 和 fabric 机器后面什么都没有，表示在此节点机器上面没有任何操作，
node'fabric.cn7788.com'{
path => ["/usr/bin","/usr/sbin","/bin","/bin/sh"],
user =>"root",
command =>"sh
"auto install naigios client":
exec{
mode
owmer
group => root,
source => "puppet://server.cn7788.com/modules/nagiosins/nagiosins.sh"
("/usr/local/src/nagiosins.sh":
file
node'client.cn7788.com'{
path =>["/usr/bin","/usr/sbin","/bin","/bin/sh"],
user =>"root",
command =>"sh /usr/local/src/nagiosins.sh",
"auto install naigios client":
exec{
mode
group=>root,
owner
{"/usr/local/src/nagiosins.sh":
file
=>
=>
=>755，
755，
root,
/usr/local/src/nagiosins.sh",
---
## Page 113
们在其/etc/puppet/puppet.conf文件下添加如下命令：
举例说明，其他 Puppet客户端操作与此类似，这里就不一一列举了)。
所以这里还是采用自己摸索出来的方法，具体步骤如下（这里以client.cn7788.com节点机器
更新或同步文件的目的。当然也可以用 Puppet rsync 模块，但我个人觉得使用这个太麻烦了，
可以用 rsync+Puppet 的方式来实现工作中的需求。这里要用到 Puppet Kick 的知识点，Puppet
件或子目录也发生改变。
要求nginx.cn7788.com、client.cn7788.com和fabric.cn7788.com对应的目录/var/www/html文
4.6
似，这里就不贴出检测结果了。
否开启了 nrpe 进程，输入命令如下所示：
前面已经提到了，Puppet分发大文件和海量图片小文件的效果并不好，但这里我们其实
实例说明：server.cn7788.com机器下的/data/svn/resource目录文件或子目录发生改变时，
，这个又该如何实现呢？
当我们拥有大规模Web集群的时候，所有服务器/var/www/html的数据要求必须迅速统
检查结果说明 puppet-master 的 nagioscli模块是正常的，nginx.cn7788.com 的结果与此类
执行时间比较长，总共耗时165.27秒，我们先检查下client.cn7788.com的节点机器上是
[puppet-client]
如何快速同步puppet-server 端的www目录文件
/usr/local/nagios/bin/nrpe -c /usr/local/nagios/etc/nrpe.cfg -d
touch/var/lock/subsys/local
命令执行结果显示如下所示：
grep -v "^#" /etc/rc.local
我们再检查下/etc/rc.local，看看此命令有没有添加进去，命令如下所示：
nagios/bin/nrpe -c /usr/local/nagios/etc/nrpe.cfg -d
nagios
命令显示结果如下所示：
psaux|grepnrpe|grep-vgrep
Notice: Finished catalog run in 165.27 seconds
Notice: /Stage[main]/Main/Node[client.cn7788.com] /Exec[auto install naigios
223310.00.1
5108
924？
第4章集中配置管理工具Puppet97
SS
22:35
0:00 /usr/local/
---
## Page 114
文件只需要指定同步用户的密码即可，/etc/rsyncd.password 文件内容如下所示：
个是推送到客户端的文件，需要注意与/etc/rsyncd.password文件进行区分，/etc/rsyncd.pass
puppet-client 会连接不到 puppet-master 机器，从而导致文件同步不过去。
98
server=server.cn7788.com：此选项必须要配置，经过测试，可以发现如果无此选项时，
运维前线：一线运维专家的运维方法、技巧与实践
（3）在 server.cn7788.com机器的/etc目录下建立rsyncd.pass文件并分配内容，注意：这
最后，在 puppet-client 端重启Puppet 服务，命令如下所示：
Autorequiring File[/var/lib/puppet/ssl/private_keys]
如果不进行此项操作的话，会有如下报错：
在最末行的path/之后添加 allow*，保证代码内容相同：
listen=true：此选项将使 puppet agnet 监听 8139 端口。
puppet/ssl/certs]
Debug:
Debug:/File[/var/lib/puppet/state]: Autorequiring File[/var/lib/puppet]
var/lib/puppet/ssl]
Debug:
puppet/ssl]
Debug:
File[/var/lib/puppet/ssl/certs]
Debug:
Debug:
allow*
auth any
path/run
server=server.cn7788.com
servicepuppet restart
authenticated