结合密码和昵称的语言文化，我们认为这些信息进一步印证了控制源IP来源于南亚某国的分析推断。
**4.2.3 线索三：遗留数据**
研究人员在跟踪溯源采集的数据中，发现了攻击者调试免杀木马时遗留的证据，免杀针对的杀毒软件包含但不限于：
    AVAST
    Trendmicro
    Bitdefender
    Panda
    GDATA
    NOD32
    AVIRA
    NIS诺顿
攻击者把每个杀毒软件部署在一个或者多个独立的WIN7或者WIN8系统上，已知约10个系统，逐个测试样本免杀情况。并且，这些杀毒软件同属10.*.*.*子网，考虑到终端的数量和部署环境，推测该子网为攻击者真实的工作环境，而非被控端。
图13 免杀测试环境和对外链接IP
最重要的是，这个子网对外的出口IP正好是上述南亚某国IP段的*.*.*.138，也就是说这个IP是跳板或另一个受害者的可能性非常低，再次证实了攻击者来源于此IP。
基于相关性分析，推测该组织可能与近期友商公布的一些事件存在关联，或许原本是同一组织活跃在不同时期的不同工作。后续研究人员将持续跟进做进一步的确认。
**5.** **攻击工具分析**
我们对攻击工具深度分析后发现，攻击者这次发起的“丰收行动”是精心准备的、有组织的一次网络间谍攻击。其使用了APT攻击中最为典型和常用的攻击方式，有效的绕过了传统防护手段。为预防攻击者利用公开信息进行反溯源，以下仅阐述攻击工具的部分分析结果。
**5.1 载荷投递**
在本次行动中，我们捕获了伪装成Word文档的RTF格式邮件附件样本，所以可以确定攻击者使用了鱼叉攻击。此外，我们发现攻击者囤积了多个浏览器挂马脚本，脚本的最后修改时间为2016年4月，据此推测攻击者还可能使用了挂马或水坑攻击方式。
**5.1.1 鱼叉攻击**
利用邮件实施“鱼叉式钓鱼攻击”是典型APT攻击方式之一，将恶意代码作为电子邮件的附件，并命名为一个极具诱惑力的名称，发送给攻击目标，诱使目标打开附件，从而感染并控制目标计算机。我们在《利用邮件实施APT攻击的演示》[[6]]一文进行了视频演示，读者可以参考印证。
**5.1.2 水坑攻击**
“水坑攻击”，是指黑客通过分析被攻击者的网络活动规律，寻找被攻击者经常访问的网站的弱点，先攻下该网站并植入攻击代码，等待被攻击者来访时实施攻击。这种攻击行为类似《动物世界》纪录片中的一种情节：捕食者埋伏在水里或者水坑周围，等其他动物前来喝水时发起攻击猎取食物。[[7]]
**5.2 漏洞利用**
**5.2.1 鱼叉攻击使用的漏洞**
“丰收行动”中，攻击者以邮件形式发送了一份捆绑了漏洞利用代码和远程控制工具的Word文档给受害者。附件文档被点击后会显示一份以乌尔都语描述的网络犯罪法案诱饵文档《PEC
Bill as on 17.09.2015》，用以迷惑受害者，如下所示：
图14 诱饵文档内容
但该附件文档实质是包含CVE-2015-1641（Word类型混淆漏洞）漏洞利用的RTF格式文档，用户在打开的同时除了用诱饵文档显示迷惑性文档内容外，还会利用该漏洞释放恶意程序，从而感染并控制用户主机。
该附件文档样本的MD5为******e0b4a6b6a5b11dd7e35013d13a，样本捕获后不久交由54款杀毒引擎检测，仅8款能够查杀。用二进制编辑工具打开该文件，由开头的几个字符为{rtf1adeflang1025ansi，可确定文件是一个RTF文件。同时，该样本文件中包含以下内容：
{objectobjemb{*objclass
None}{*oleclsid '7bA08A033D-1A75-4AB6-A166-EAD02F547959'7d}
在注册表查询此olecsid，发现是Office的otkload.dll组件，该组件依赖msvcr71.dll动态库，可见此RTF文档打开时会加载msvcr71.dll，而msvcr71.dll文件不支持ASRL，所以判断样本加载该库是借此构建ROP来绕过ASRL&DEP。漏洞利用相关代码如下：  
    7c341dfa 5e             
      pop     esi
    7c341dfb c3              ret
    7c341cca 8b06          mov    
      eax,dWord ptr [esi] 
      ds:0023:7c38a2d8={kernel32!VirtualProtect (76c62341)}
    7c341ccc 85c0           
      test      eax,eax
    7c341cce 74f1            je        MSVCR71!initterm+0x7 (7c341cc1)         [br=0]
    7c341cd0 ffd0           
      call       eax {kernel32!VirtualProtect
      (76c62341)}
    7c341cd2 ebed           
      jmp      MSVCR71!initterm+0x7
      (7c341cc1)
    7c341cc1 83c604         
      add      esi,4
    7c341cc4 3b74240c       
      cmp     esi,dWord ptr [esp+0Ch]
      ss:0023:06e9fbd4=7c38a2ff
    7c341cc8 730a           
      jae      MSVCR71!initterm+0x1a (7c341cd4)        [br=0]
    7c341cca 8b06           
      mov     eax,dWord ptr [esi]  ds:0023:7c38a2dc=09c908bc
    7c341ccc 85c0           
      test      eax,eax
    7c341cce 74f1            je        MSVCR71!initterm+0x7 (7c341cc1)         [br=0]
    7c341cd0 ffd0           
      call       eax {09c908bc}
表1 漏洞利用相关代码片段
主要目的是要调用VirtualProtect函数绕过DEP，接着跳到栈上的代码。Shellcode部分的代码如下：
    09c908bc 49              dec     ecx
    09c908bd 49              dec     ecx
    09c908be 49              dec     ecx
    09c908bf 49              dec     ecx
    09c908c0 49              dec     ecx
    09c908c1 49              dec     ecx
    09c908c2 49              dec     ecx
    09c908c3 49              dec     ecx
    09c908c4 49              dec     ecx
    09c908c5 49              dec     ecx
    09c908c6 49              dec     ecx
    09c908c7 49              dec     ecx
    09c908c8 49              dec     ecx
    09c908c9 49              dec     ecx
    09c908ca 49              dec     ecx
    09c908cb 49              dec     ecx
    09c908cc 49              dec     ecx
    09c908cd 49              dec     ecx
    09c908ce 49              dec     ecx
    09c908cf 49              dec     ecx
    09c908d0 49              dec     ecx
    09c908d1 49              dec     ecx
    09c908d2 49              dec     ecx
    09c908d3 49              dec     ecx