title:Screen Gleaning: A Screen Reading TEMPEST Attack on Mobile Devices
Exploiting an Electromagnetic Side Channel
author:Zhuoran Liu and
Niels Samwel and
Leo Weissbart and
Zhengyu Zhao and
Dirk Lauret and
Lejla Batina and
Martha A. Larson
Screen Gleaning: A Screen Reading TEMPEST Attack on Mobile Devices Exploiting an
Electromagnetic Side Channel
Zhuoran Liu, Niels Samwel, L´eo Weissbart, Zhengyu Zhao, Dirk Lauret∗, Lejla Batina and Martha Larson
Institute for Computing and Information Sciences, Radboud University, The Netherlands
{z.liu@cs, n.samwel@cs, l.weissbart@cs, z.zhao@cs, dirk.lauret@student, lejla@cs, m.larson@cs}.ru.nl
Abstract—We introduce screen gleaning, a TEMPEST attack
in which the screen of a mobile device is read without a visual
line of sight, revealing sensitive information displayed on the
phone screen. The screen gleaning attack uses an antenna and
a software-deﬁned radio (SDR) to pick up the electromagnetic
signal that the device sends to the screen to display, e.g., a message
with a security code. This special equipment makes it possible to
recreate the signal as a gray-scale image, which we refer to as
an emage. Here, we show that it can be used to read a security
code. The screen gleaning attack is challenging because it is often
impossible for a human viewer to interpret the emage directly. We
show that this challenge can be addressed with machine learning,
speciﬁcally, a deep learning classiﬁer. Screen gleaning will become
increasingly serious as SDRs and deep learning continue to
rapidly advance. In this paper, we demonstrate the security code
attack and we propose a testbed that provides a standard setup
in which screen gleaning could be tested with different attacker
models. Finally, we analyze the dimensions of screen gleaning
attacker models and discuss possible countermeasures with the
potential to address them.
I.
INTRODUCTION
Most of our daily business relies on the devices we carry on
us. A great deal of sensitive information is exchanged through
these devices, and the security and privacy of our data is
constantly at stake. Even the task of authenticating ourselves
(or our data) has been shifted to our phones, where two-factor
authentication, a common approach, requires successfully pre-
senting two or more pieces of evidence to conﬁrm our identity.
To protect our data, mobile devices typically use secret
(cryptographic) keys that are not accessible from the outside.
Getting a hold of the key allows a hacker to steal our data.
The majority of real-world attacks on security implementations
on small devices today use side-channel analysis (SCA), i.e.,
they measure and process physical quantities, like the power
consumption or electromagnetic emanations of a chip, or
reaction time of a process. Moreover, thanks to computing
power becoming ever cheaper nowadays, modern adversaries
have started using state-of-the-art machine and deep learning
algorithms for SCA. Securing (embedded) systems against
SCA remains a great challenge.
In certain cases, the security implementation is not the tar-
get of an attack. Instead, the target is the sensitive information
∗This author is afﬁliated with the Eindhoven University of Technology. This 
work  was  done  during  an  internship  at  Radboud  University
Network and Distributed Systems Security (NDSS) Symposium 2021
21-25 February 2021, Virtual 
ISBN 1-891562-66-5
https://dx.doi.org/10.14722/ndss.2021.23021
www.ndss-symposium.org
displayed on the screen. For example, here, we can think of
secret security codes sent from banks or credit card companies,
giving secure access to a user who is the only one able to read
the code. SCA can take advantage of the fact that information
is exposed in this way in order to mount an attack. Since
we can expect adversaries will always target the weakest link,
such attacks are more feasible than cryptographic attacks i.e.
cryptanalysis.
In this paper, we investigate the problem of sensitive
information on mobile phone screens. Until now, the study
of side-channel analysis attacks that aim to recover the screen
content of a mobile phone has focused on visible-spectrum
signals. This focus is consistent with people’s general belief
that protecting information on their mobile phone screen means
hiding it from the line of sight of a person or a camera.
However, SCA can go beyond visible-spectrum information
displayed on the screen. In this paper, we present a low-cost
SCA attack that can recover information displayed on a mobile
device’s screen by capturing the electromagnetic signal sent to
the phone screen. Our work introduces an attack, which we call
screen gleaning, that uses an antenna and a basic software-
deﬁned radio (SDR). Our attack demonstrates the security
threat posed by emanations leaking from mobile devices. We
release an implementation of our attacks that allows for further
testing and extension.1
The side-channel analysis that we consider in this work is
a type of TEMPEST technique. TEMPEST techniques exploit
vulnerabilities of communication and other types of emana-
tions from electrical equipment that contain sensitive data [55].
From our experiments with a simple TEMPEST setup using
an SDR receiver, we were able to successfully capture the
phone screen content without a visible-spectrum line of sight.
The signal recovered from the screen can be visualized as a
gray-scale image, which we refer to as an emage. A challenge
faced by our attack is that the emage is often not interpretable,
meaning that it cannot be read by way of human eyesight.
We propose a machine learning-based approach capable of
processing an emage that is not interpretable to the human
eye in order to recover secret information, such as a security
code in two-factor authentication.
This simple attack story illustrates the potential danger of
our attack:
Alice keeps her mobile phone on a stack of magazines
on top of her desk. She lays the phone face down because
she receives security codes and she believes that blocking the
visual line of sight to the phone screen will keep the codes
secure. Eve has access to Alice’s desk and has hidden an
1Code available at: https://github.com/cescalab/screen gleaning
antenna under the top magazine. The antenna can read the
security code via electromagnetic emanations of the phone.
In sum, this paper makes ﬁve contributions:
• We present a novel side-channel technique called screen
gleaning, an attack that can be used to recover information
such as a security code communicated by text message.
The attack does not require a visual line of sight nor the
readability of the signal by a human. In fact, the signal we
observe is, in most cases, not interpretable to the human
eye, so the information in the leakage is not obvious.
• We show that this kind of challenge can be tackled using
machine learning, and speciﬁcally, using a deep learning
classiﬁer we are able to attain very high accuracy (of close
to 90%) when guessing the digits of a security code.
• We quantitatively demonstrate that our attack is effective
for three representative phone models under various envi-
ronmental conditions. In particular, our attack is applica-
ble in the context of cross-device, through-magazine, and
noisy environments.
• We deﬁne and validate a new testbed applicable for
further research on screen gleaning. The testbed includes
a parameterized attacker model, which will guide future
research to systematically explore and exploit the threat
of screen gleaning.
• Finally, we propose and discuss possible countermeasures
against screen gleaning attacks on mobile devices.
The remainder of this paper is organized as follows: In
Section II, we discuss related work. Section III describes the
attacker model. In Section IV, we describe our measurement
and machine learning setup. In Section V, we explain the
experiments we conducted together with the results. Section VI
introduces a testbed. Section VII discusses the results of the
paper and describes different countermeasures. Section VIII
discusses different formulations of the screen gleaning prob-
lem. Finally, Section IX concludes the paper.
II. RELATED WORK
A. Side-Channel Attacks
A security attack exploiting unintentional physical leakage
is called a side-channel attack. For example, an adversary
might be able to monitor the power consumed by a device
while it performs secret key operations [41], [43]. Other
sources of side-channel information, such as electromagnetic
emanations from a chip [2], [25], [58] and timings for different
operations performed [42], were also shown to be exploitable
(for an overview see [52]).
Side-channel attacks pose a real threat to the security of
mobile and embedded devices and since their invention many
countermeasures have been proposed. The goal of counter-
measures is to remove the dependence between the (secret)
data and the side channel such as power consumed during the
computation. An extensive study of the power side channel
from mobile devices was presented in [64]. One approach for
countermeasures aims to break the link between the actual data
processed by the device and the data on which the computation
is performed. Such a countermeasure is usually called masking
and is exploiting the principle of secret sharing [18]. A second
approach aims at breaking the link between the data computed
by the device and the power consumed by the computations.
This approach is called hiding, and one way to achieve it is by
ﬂattening the power consumption of a device by, for example,
using special logic styles that are more robust against SCA
attacks such as WDDL [60].
SCA attacks belong to the most serious threats to embedded
crypto devices and often target the secret (cryptographic) key
in a device that keeps personal data and communications
secure [11], [26] or even white-box implementations [13].
There are many examples of SCA attacks in the real-world
such as [9], [23], [57] and more recent ones [20], [37], [56].
TEMPEST is another side-channel technique that has been
known for decades. TEMPEST refers to spying on computer
systems through leaking emanations, including unintentional
radio or electrical signals, sounds, and vibrations [47]. For
example, through TEMPEST, one could easily detect a user’s
keystrokes using the motion sensor inside smartphones or
recover the content from a computer or other screens remotely.
In 1985 van Eck published the ﬁrst unclassiﬁed analysis of
the feasibility and security risks of emanations from computer
monitors. Previously, such monitoring was believed to be
a highly sophisticated attack available only to governments.
However, van Eck successfully eavesdropped on a real system,
at a range of hundreds of meters, by measuring electromagnetic
emanations using just $15 worth of equipment plus a CRT
television set [62]. Later, Kuhn performed a comprehensive
study on a range of ﬂat-screen monitors and eavesdropping
devices [45]–[47]. Other side channels can also convey the
screen’s content in the frequency range of the visible spectrum
[6], [8], [46], [63] or through acoustic channel [27] but can
sometimes even require an expensive telescope.
More recently, Backes et al. [6], [8] improved TEMPEST
further and argue that the requirement on a direct line of
sight is not necessary as they exploit reﬂections between the
target screen and the observer. Xu et al. [63] broadened the
scope of the attacks by relaxing the previous requirements
and showing that breaches of privacy are possible even when
the adversary is “around a corner”. A new technique is
presented for reconstructing the text typed on a mobile device,
including password recovery via analysis of ﬁnger motions
over the keyboard and language model. The main distinction
from the works by Backes et al. is that they use “repeated”
reﬂections, i.e., reﬂections of reﬂections in nearby objects,
but always originating from the surface of a person’s eyeball.
Nevertheless, all those papers use direct or indirect reﬂections
from the screen, which makes their research line very different
from ours. More speciﬁcally, those papers focus on recovering
text and images from the screen while being typed and being
captured by a camera from an eyeball, which implies rather
special assumptions on the setup and attacker model.
Hayashi et al. performed a comprehensive evaluation of
electromagnetic emanations from a chip including countermea-
sures [31]–[34]. However, their focus is on recovering secret
information from “inside” such as cryptographic keys and not
the screen content.
As a follow-up, the work of Kinugawa et al. [40] demon-
strates that it is possible to amplify the electromagnetic leakage
with cheap hardware modiﬁcation added on potentially any
device and spread the attack to a broader distance. They
2
demonstrate that this additional circuitry, a so-called intercep-
tor, enlarges the amount of leakage and even forces leakage in
devices that do not suffer potential electromagnetic leakage.
Goller and Sigl proposed to use standard radio equipment
when performing side-channel attacks on smartphones [29].
They also aimed their attack at cryptographic operations inside
the chip as they demonstrate the ability to distinguish between
squaring and multiplications. This observation could lead to
the full RSA key recovery, assuming that the modular ex-
ponentiation is implemented with a basic square-and-multiply
algorithm. Their setup used an Android phone to collect elec-
tromagnetic leakages from (albeit they modiﬁed the hardware,
which makes their attacker’s model different).
There exist many papers considering ﬁnger movements on
the screen or other traces from typing on a smartphone. For
example, Cai et al. developed an Android application called
TouchLogger, which extracts features from device orientation
data to infer keystrokes [16]. Aviv et al. used the embedded
accelerometer sensor to learn user tapping and gesturing to un-
lock smartphones [5]. In another work, they introduce smudge
attacks as a method that relies on detecting the oily smudges
left behind by the user’s ﬁngers when operating the device
using simple cameras and image processing software [4].
As another two examples of recent work, we also mention
the papers of Genkin et al. [27], [28]. In [28], the authors use
various side channels like power and electromagnetic radiation
to extract cryptographic keys, i.e., RSA and ElGamal keys
from laptops, but do not discuss the possibility to perform the
attacks on a phone. On the other hand, in [27] the authors
show how to extract the screen content by using the acoustic
side channel. They demonstrate how the sound can be picked
up by microphones from webcams or screens and transmitted
during a video conference call or archived recordings. It can
also be recorded by a smartphone or other device with a mi-
crophone placed in the screen proximity. These two examples
are different from our work because they use either another
kind of emanation or have different attack goals (or both).
Other work using acoustic side channels is from Berger et.
al [12], which demonstrated a dictionary attack using keyboard
acoustic emanations. Backes et al. [7] investigated acoustic
side channel on printers, and Asonov and Agrawal [3] used
the sound emanated by different keys to recover information
typed on a keyboard.
In sum, the uniqueness of our contribution is a side-channel
analysis attack that exploits the electromagnetic emanations
of the display cable from a mobile phone. These emanations
are less accessible and may be substantially weaker than
the signals analyzed in more traditional TEMPEST technique
attacks. To the best of our knowledge, the most recent work,
which bears superﬁcially similarity to ours, is [49]. This work
applied deep learning to recognition on TEMPEST signals,
but does so with the goal of automation and enhancement.
In other words, [49] targeted a captured signal in which the
content is clearly interpretable to the human eye (cf. Figure 2
in [49]). In our work, machine learning is used for the purpose
of identiﬁcation. We face the challenge of an uninterpretable
emage derived from a mobile phone.
B. Deep Learning and Side-channel Analysis
Several side-channel analysis techniques are based on pro-
ﬁling a physical device and are commonly known as template
attacks and refer to the ﬁrst such attack presented by Chari
et.al. [19]. Proﬁling attacks estimate a power proﬁle of a
cryptographic device for each possible secret key from their
resulting power traces (also known as the training phase)
and predicting the corresponding key of an unknown trace.
From this very similar approach to machine learning, several
methods have been inspired by machine learning and neural
networks [15], [17], [38], [51]. These methods have raised
much attention as they provide more powerful attacks than
the state-of-the-art. In our work, we will discuss the usability
of deep learning, speciﬁcally Convolutional Neural Networks
(CNNs) [44], [48], for classifying the emages that are recon-
structed from the screen content.
Image classiﬁcation is the task of predicting a class for a
given image according to its content. In the context of machine
learning, it can be automated by modeling a transformation
from an image to its corresponding class. Early research [30],
[50], [61] tackled this problem via a two-step process: man-
ually extracting features from the images and then training a
discriminative model for classiﬁcation.
Deep learning algorithms, such as CNNs [44], [48], au-
tomatically learn image features simultaneously with learning
the classiﬁcation by making use of a large number of ﬁlters
in an end-to-end manner. Deep learning has lead to break-
through success in general image classiﬁcation. Large-scale
training and diverse data augmentation techniques make an
important contribution. In particular, it has been demonstrated
that deep learning can achieve superhuman performance in
speciﬁc domains where the discriminative visual patterns are
hard to distinguish by the human eye, e.g., image forensics
and steganalysis [10], [65], [66]. In our work, since the emage
content is hardly recognizable to the human eye, we use CNNs
to capture the subtle differences between various classes, rather
than relying on human-interpretable features.
III. ATTACKER MODEL
The attacker’s goal is to recover the information (e.g.,
security code, password, or message) displayed on the target
display. We start from the general attack story presented in the