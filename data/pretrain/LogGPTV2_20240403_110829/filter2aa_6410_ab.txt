.SS ECMA-48 Mode Switches ECMA-48模式选择
.TP
ESC [ 3 h
DECCRM(默认关闭): 显示控制字符.
.TP
ESC [ 4 h
DECIM(默认关闭): 设置插入模式.
.TP
ESC [ 20 h
LF/NL(默认关闭): 自动在CR后加上 LF,VT 或者 FF.
.LP
.SS ECMA-48 状态报告命令.
.TP
ESC [ 5 n
设备状态报告(DSR): 以 ESC [ 0 n 应答(终端准备好).
.TP
ESC [ 6 n
光标位置报告(CPR): 以ESC [ \fIy\fP ; \fIx\fP R 应答,
这里 \fIx,y\fP 指光标位置.
.SS DEC Private Mode(DECSET/DECRST)sequences DEC私有模式序列.
这里给出的序列在 ECMA-48中没有描述.我们列出了设置模式序列;
用l替换最后一个h就是重设模式序列.
.TP
ESC [ ? 1 h
DECCKM(默认关闭): 打开时光标键送出 ESC O 前缀,
而不是 ESC [.
.TP
ESC [ ? 3 h
DECCOLM(默认 = 80 行): 交替选择 80/132 行模式.当原显示
模式不足以满足要求的时候,象
.BR resizecons(8)
这样的用户程序会改变终端显示卡的硬件注册.
.TP
ESC [ ? 5 h
DECSCNM(默认关闭): 设置视频反转模式.
.TP
ESC [ ? 6 h
DECOM(默认关闭): 打开时,光标位置用相对于滚动条左上角
的位置表示.
.TP
ESC [ ? 7 h
DECAWM(默认关闭): 打开自动换行.在这种模式下,一行中
超过80列的字符将自动换行(在DECCOLM打开时是132列).
.TP
ESC [ ? 8 h
DECARM(默认关闭): 打开键盘自动重复.
.TP
ESC [ ? 9 h
X10 鼠标报告(默认关闭): 设置报告模式 1(或者重设为
0)\- 见下文.
.TP
ESC [ ? 25 h
DECCM(默认打开): 设置光标可见.
.TP
ESC [ ? 1000 h
X11 鼠标报告(默认关闭): 设置报告模式 2(或者重设为
0)\- 见下文.
.SS Linux Console Private CSI Sequences Linux控制台私有控制序列
下面的序列既不属于 ECMA-48 字符也不属于 VT102.它们只在
Linux控制台上使用.颜色采用 SGR 参数:
0 = 黑色,1 = 红色,2 = 绿色,3 =褐色 ,4 = 蓝色,5 = 洋红,6 =
孔雀蓝,7 = 白色.
.TS
l l.
ESC [ 1 ; \fIn\fP ]	设置下划线颜色为 \fIn\fP
ESC [ 2 ; \fIn\fP ]	设置暗色为 \fIn\fP
ESC [ 8 ]       	设置当前颜色对为默认属性.
ESC [ 9 ; \fIn\fP ]	设置屏幕空白超时为 \fIn\fP 分钟.
ESC [ 10 ; \fIn\fP ]	设置机箱喇叭鸣叫频率,单位: Hz.
ESC [ 11 ; \fIn\fP ]	设置机箱喇叭鸣叫持续时间,单位:微秒.
ESC [ 12 ; \fIn\fP ]	设置指定控制台前台运行.
ESC [ 13 ]      	设置指定控制台黑色
ESC [ 14 ; \fIn\fP ]   	设置 VESA 关闭间隔,单位: 分钟.
.TE
.SH "CHARACTER SETS" "字符集"
内核可以完成以下四种字符转换,使字符能在屏幕上显示.
a)Latin1 -> PC,b)VT100 graphics -> PC,c)PC -> PC,
d)user-defined(用户自定义).
有两种字符集设置,以 G0 和 G1定义,当前字符集必定是其中之一.(初
始化为G0.)键入 ^N 使 G1 成为当前字符集,键入 ^O 使 G0 成为当前设置.
变量 G0 and G1 指向字符映射关系表,并且这种指向关系可以由用户改变.
系统初始化时它们分别指向表 a)and b).
序列 ESC( B ,ESC( 0 ,ESC( U 和 ESC( K 分别使 G0 指向字符映射表
 a),b),c)和 d).
序列 ESC )B ,ESC )0 ,ESC )U 和 ESC )K 分别使 G1 指向字符映射表
a),b),c)和 d).
序列 ESC c 重置一个终端,当屏幕显示出现混乱时可以使用这个序列.
另一个序列 "echo ^V^O" 仅仅将G0设为当前字符集,但并不保证 G0 指
向映射表 a).
有的Linux发行版中提供一个叫做
.BR reset(1)
的程序用来送出序列 "echo ^[c".
如果你的系统终端变量没有错误( rs1=\\Ec),
那么使用"tput reset"也可以达到同样效果.
用户自定义映射表可以用程序
.BR mapscrn(8).
定义.这个程序工作时会将送入的字符c通过关系式s=map[c]映射到
字符s然后送入显存.字符s所对应的位图放在字符ROM里面,可以使
用程序
.BR setfont(8).
来改变.
.SH "MOUSE TRACKING" "鼠标轨迹"
鼠标轨迹工具可以返回与 xterm 兼容的鼠标状态报告.因为控制台
驱动没有办法知道鼠标类型,只有当虚拟终端驱动接收到鼠标输入
输出消息更新时才会将这些报告返回给控制台输入流..这些鼠标
输入输出消息由 \fBgpm(8)\fR 守护进程产生.
所有鼠标轨迹转义序列参数由\fIxterm\fP 编码成象\fIvalue\fP+040
这样的单一字符形式的数字参数.比如,`!' 编码成 1.屏幕坐标系统
以'1'为基准.
X10 兼容模式在鼠标键按下时将按下的键和鼠标位置编码后送出.
ESC [ ? 9 h 允许这一动作,ESC [ ? 9 l禁止这一动作.
有键按下时,\fIxterm\fP 送出ESC [ M \fIbxy\fP(6 个字符).这里 
\fIb\fP 代表 键\-1,而 \fIx\fP 和 \fIy\fP 是鼠标的 x 和 y 坐标.这和
内核产生的序列相同.
常规的轨迹模式(Linux 2.0.24不再支持)在左右两键同时按下然后
释放时送出转义序列.组合键编码也被送出.ESC [ ? 1000 h 允许这
个动作而ESC [ 1000 l 禁止这个动作.当有键按下或者释放时,
\fIxterm\fP 送出 ESC [ M \fIbxy\fP.\fIb\fP 的低两位对按键信息编码:
0=鼠标键1按下,1=鼠标键2 按下,2=鼠标键3 按下,3=释放.
高位编码代表组合键,和上述编码一起送出:
4=Shift,8=Meta(Alt),16=Control(Ctrl).\fIx\fP 和\fIy\fP为发生鼠标事
件的x和y坐标.以左上角为(1,1).
.SH 和其它终端的比较
我们已经讨论了几种终端类型,比如Linux 控制台.这类终端称为
"VT100兼容"的终端.这里我们再介绍其他两种重要的终端类型:
DEC VT102 和
.BR xterm(1)
以及他们和Linux控制终端的区别.
.SS Control-character handling 控制字符处理
vt102 也使用以下控制序列:
.HP
NUL(0x00)忽略;
.HP
ENQ(0x05)触发应答消息;
.HP
DC1(0x11,^Q,XON)继续传送;
.HP
DC3(0x13,^S,XOFF)使 vt100 忽略(并停止传送)
除 XOFF and XON 以外的一切字符.
.LP
VT100-like DC1/DC3 进程可以由 tty 驱动激活.
.LP 
程序
.I xterm
(在 vt100 模式 中)使用控制序列 
BEL,BS,HT,LF,VT,FF,CR,SO,SI,ESC.
.SS Escape sequences 转义序列
VT100  控制台序列不完全支持Linux控制台序列:
.LP
.TS
l l l.
ESC N	SS2	仅仅为下一个字符选择 G2 字符集
		(Single shift 2).
ESC O	SS3	仅仅为下一个字符选择 G2 字符集
		(Single shift 2).
ESC P	DCS	设备控制字符,由ESC \e 终止
		(Device control string).
ESC X	SOS	字符串开始.
		(Start of string)
ESC ^	PM	私有消息,由 ESC \e 终结
		(Privacy message)
ESC \e	ST	字符串终结
		(String terminator)
ESC * ...		指定 G2 字符集
ESC + ...		指定 G3 字符集
.TE
程序
.I xterm
(vt100 模式)承认 ESC c,ESC # 8,ESC >,ESC =,
ESC D,ESC E,ESC H,ESC M,ESC N,ESC O,ESC P ...ESC \,
ESC Z(以 [ ? 1 ; 2 c,`I am a vt100 with advanced video option'回应)
以及 ESC ^ ...ESC \,意义同上.
接受 ESC(,ESC ),ESC *,ESC + 后跟 0,A,B 的字符序列,分别
代表的DEC 特殊字符,画线设置,UK 和 US ASCII码.
接受 ESC ] 作为特定资源设置:
.LP
.TS
l l.
ESC ] 0 ; txt BEL	将图标名和窗口标题设为文本.
ESC ] 1 ; txt BEL	将图标名设为文本.
ESC ] 2 ; txt BEL	将窗口名设为文本.
ESC ] 4 6 ; name BEL	改变日志文件名(一般
	由编译时选项禁止)
ESC ] 5 0 ; fn BEL	字体设置为 fn.
.TE
以下字符的含义略有不同::
.LP
.TS
l l l.
ESC 7  DECSC	存储光标位置
ESC 8  DECRC	恢复光标位置
.TE
它还接受以下序列:
.LP
.TS
l l l.
ESC F		光标移动到屏幕左下角(由
		hpLowerleftBugCompat 打开这项设置)
ESC l		内存锁定(对于 HP 终端).
		锁定光标以上的内存.
ESC m		内存解锁(对于 HP 终端).
ESC n	LS2	调用 G2 字符集.
ESC o	LS3	调用 G3 字符集.
ESC |	LS3R	以GR调用 G3 字符集.
		在xterm上看不到效果.
ESC }	LS2R	以GR调用 G3 字符集.
		在xterm上看不到效果.
ESC ~	LS1R	以GR调用 G3 字符集.
		在xterm上看不到效果.
.TE
它不识别 ESC % ...
.SS CSI Sequences CSI 序列
程序
.I xterm
(直到 XFree86 3.1.2G)不能识别闪烁或者不可见模式的 
SGR值.X11R6 也不能识别以 SGRs 为参数设置的色彩.
.IR xterm
可以识别其他的 ECMA-48 CSI 序列,只要Linux可以识别.
反之亦然.
.I xterm
可以识别以上列出的所有 DEC 私有序列,但是不包括 Linux 私有模式序列.
在
.I Xterm Control Sequences
中有关于
.IR xterm 
的私有模式序列的讨论.
document by Edward Moy and Stephen Gildea,available with the X 
distribution.
.SH BUGS
在版本为 2.0.23 的内核中,CSI 序列的识别有些问题: 不能识别转义序列中的NUL.
.SH 参见
.BR console(4),
.BR console_ioctl(4),
.BR charsets(7)