证书对 IdM 部署至关重要。每个证书都存储在
`/etc/pki/pki-tomcat/`{.literal} 目录中的 NSS 数据库以及 LDAP
数据库条目中。存储在 LDAP 中的证书必须与存储在 NSS
数据库中的证书匹配。如果不匹配，在 IdM 框架和 IdM CA 之间以及 IdM CA 和
LDAP 之间会发生身份验证失败。
所有 IdM CA 副本都有针对每个系统证书的跟踪请求。如果带有集成 CA 的 IdM
部署不包含 CA 续订服务器，则每个 IdM CA
服务器都会单独请求续订系统证书。这会导致发生各种系统证书和身份验证失败的不同
CA 副本。
将一个 CA
副本用作续订服务器，可以在需要时完全续订一次系统证书，从而避免身份验证失败。
### []{#ipa-ca-renewal_working-with-idm-certificates.html#_the_role_of_the_certmonger_service_on_ca_replicas}CA 副本中的 `certmonger`{.literal} 服务角色
在所有 IdM CA 副本中运行的 `certmonger`{.literal} 服务使用
`dogtag-ipa-ca-renew-agent`{.literal} 续订帮助程序来跟踪 IdM
系统证书。续订帮助程序读取 CA 续订服务器配置。在不是 CA 续订服务器的每个
CA 副本上，续订帮助程序从 `ca_renewal`{.literal} LDAP
条目检索最新的系统证书。由于正好发生 `certmonger`{.literal}
续订尝试时，由于未确定，`dogtag-ipa-ca-renew-agent`{.literal}
帮助程序有时会在 CA
续订服务器实际续订证书前尝试更新系统证书。如果发生这种情况，旧的、即将扩展的证书会返回到
CA 副本中的 `certmonger`{.literal} 服务。`certmonger`{.literal}
服务发现它与已存储在其数据库中的证书相同，它会在单独尝试之间稍延迟尝试续订证书，直到它可以从
CA 续订服务器检索更新的证书。
### []{#ipa-ca-renewal_working-with-idm-certificates.html#_the_correct_functioning_of_idm_ca_renewal_server}IdM CA 续订服务器正常工作
带有嵌入式 CA 的 IdM 部署是一个 IdM 部署，安装有 IdM CA - 或者稍后安装了
IdM CA 服务器。带有嵌入式 CA 的 IdM 部署必须始终有一个 CA
副本配置为续订服务器。续订服务器必须在线且功能完整，并且必须与其他服务器正确复制。
如果使用
`ipa server-del`{.literal}、`ipa-replica-manage del`{.literal}、`ipa-csreplica-manage del`{.literal}
或 `ipa-server-install --uninstall`{.literal} 命令删除当前的 CA
续订服务器，则会自动将另一个 CA 副本指定为 CA
续订服务器。此策略确保续订服务器配置保持有效。
该政策不包括以下情况：
::: itemizedlist
-   [**脱机续订服务器**]{.strong}
    如果续订服务器在延长期限内处于脱机状态，则可能会错过续订窗口。在这种情况下，所有非续订
    CA
    服务器都会持续重新安装当前的系统证书，直到证书过期为止。当发生这种情况时，IdM
    部署会被破坏，因为即使是一个过期的证书都可能会导致其他证书的续订失败。
    [为防止这种情况：如果您当前的续订服务器离线且长时间不可用，请考虑手动分配新的
    CA
    续订服务器](#ipa-ca-renewal_working-with-idm-certificates.html#changing-ca-renewal_ipa-ca-renewal "更改和重置 IdM CA 续订服务器"){.link}。
-   [**复制问题**]{.strong}
    如果在续订服务器和其他 CA
    副本之间存在复制问题，则续订可能会成功，但其他 CA
    副本可能无法在更新的证书过期前检索更新的证书。
    要防止这种情况，请确保您的复制协议正常工作。详情请参阅 RHEL 7
    [*Linux 域身份、身份验证和策略指南中
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#trouble-gen-replication](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#trouble-gen-replication){.link}
    的常规
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#trouble-replica](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/linux_domain_identity_authentication_and_policy_guide/index#trouble-replica){.link}
    或特定复制故障排除指南*]{.emphasis}。
:::
:::
::: section
::: titlepage
# []{#ipa-ca-renewal_working-with-idm-certificates.html#changing-ca-renewal_ipa-ca-renewal}更改和重置 IdM CA 续订服务器 {.title}
:::
当证书颁发机构(CA)续订服务器停用时，身份管理(IdM)会自动从 IdM CA
服务器列表中选择一个新的 CA 续订服务器。系统管理员无法影响选择。
为了能够选择新的 IdM CA
续订服务器，系统管理员必须手动执行替换操作。在开始停用当前续订服务器的过程之前，选择新的
CA 续订服务器。
如果当前的 CA 续订服务器配置无效，请重置 IdM CA 续订服务器。
完成此步骤以更改或重置 CA 续订服务器。
::: itemizedlist
**先决条件**
-   有 IdM 管理员凭证。
:::
::: orderedlist
**流程**
1.  获取 IdM 管理员凭证：
    ``` literallayout
    ~]$ kinit admin
    Password for PI:EMAIL:
    ```
2.  （可选）查找部署中的哪些 IdM 服务器具有必要的 CA
    角色，有资格成为新的 CA 续订服务器：
    ``` literallayout
    ~]$ ipa server-role-find --role 'CA server'
    ----------------------
    2 server roles matched
    ----------------------
      Server name: server.idm.example.com
      Role name: CA server
      Role status: enabled
      Server name: replica.idm.example.com
      Role name: CA server
      Role status: enabled
    ----------------------------
    Number of entries returned 2
    ----------------------------
    ```
    部署中有两个 CA 服务器。
3.  另外，要查找哪个 CA 服务器是当前 CA 续订服务器，请输入：
    ``` literallayout
    ~]$ ipa config-show | grep 'CA renewal'
      IPA CA renewal master: server.idm.example.com
    ```
    当前续订服务器为 `server.idm.example.com`{.literal}。
4.  要更改续订服务器配置，使用带 `--ca-renewal-master-server`{.literal}
    选项的 `ipa config-mod`{.literal} 工具：
    ``` literallayout
    ~]$ ipa config-mod --ca-renewal-master-server replica.idm.example.com | grep 'CA renewal'
      IPA CA renewal master: replica.idm.example.com
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    您还可以使用以下命令切换到新的 CA 续订服务器：
    ::: itemizedlist
    -   `ipa-cacert-manage --renew`{.literal} 命令。此命令会续订 CA
        [*证书，并使您在其上执行新*]{.emphasis} CA 续订服务器的 CA
        服务器。
    -   `ipa-cert-fix`{.literal}
        命令。当证书过期时，该命令会恢复部署。它还使您在其上执行该命令的
        CA 服务器成为新的 CA 续订服务器。
        详情请查看 [IdM
        离线时重新更新过期的系统证书](#renewing-expired-system-certificates-when-idm-is-offline_working-with-idm-certificates.html#renewing-expired-system-certificates-on-a-ca_renewing-expired-system-certificates-when-idm-is-offline "在 CA 续订服务器上续订过期的系统证书"){.link}。
    :::
    :::
:::
:::
::: section
::: titlepage
# []{#ipa-ca-renewal_working-with-idm-certificates.html#switch-from-externally-to-self-signed-ca_ipa-ca-renewal}在 IdM 中从外部切换到自签名 CA {.title}
:::
完成此步骤，从外部签名切换到身份管理(IdM)证书认证机构(CA)的自签名证书。使用自签名
CA 时，自动管理 CA
证书的续订：系统管理员不需要向外部机构提交证书签名请求(CSR)。
从外部签名切换到自签名 CA 只替换 CA 证书。之前 CA
签名的证书仍有效且仍在使用。例如：即使您移到自签名 CA 后
`LDAP`{.literal} 证书的证书链仍保持不变：
``` literallayout
external_CA certificate > IdM CA certificate > LDAP certificate
```
::: itemizedlist
**先决条件**
-   具有 IdM CA 续订服务器的 root 访问权限。
-   有 IdM 管理员凭证。
:::
::: orderedlist
**流程**
1.  在 IdM CA 续订服务器上，将 CA 证书更新为自签名：
    ``` literallayout
    ~]# ipa-cacert-manage renew --self-signed
    Renewing CA certificate, please wait
    CA certificate successfully renewed
    The ipa-cacert-manage command was successful
    ```
2.  在所有 IdM 服务器和客户端中，使用来自服务器的证书更新本地 IdM
    证书数据库：
    ``` literallayout
    [client ~]$ kinit admin
    [client ~]$ ipa-certupdate
    Systemwide CA database updated.
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
3.  （可选）检查您的更新是否成功，新的 CA 证书是否已添加到
    `/etc/ipa/ca.crt`{.literal} 文件中：
    ``` literallayout
    [client ~]$ openssl crl2pkcs7 -nocrl -certfile /etc/ipa/ca.crt | openssl pkcs7 -print_certs -text -noout
    [...]
    Certificate:
        Data:
            Version: 3 (0x2)
            Serial Number: 39 (0x27)
            Signature Algorithm: sha256WithRSAEncryption
            Issuer: O=IDM.EXAMPLE.COM, CN=Certificate Authority
            Validity
                Not Before: Jul  1 16:32:45 2019 GMT
                Not After : Jul  1 16:32:45 2039 GMT
            Subject: O=IDM.EXAMPLE.COM, CN=Certificate Authority
    [...]
    ```
    输出显示更新已成功，因为新 CA 证书使用旧的 CA 证书列出。
:::
:::
::: section
::: titlepage
# []{#ipa-ca-renewal_working-with-idm-certificates.html#renew-with-externally-signed-CA_ipa-ca-renewal}使用外部签名的证书续订 IdM CA 续订服务器 {.title}
:::
本节论述了如何使用外部 CA 为证书签名请求(CSR)签名，更新 Identity
Management(IdM)证书颁发机构(CA)证书。在这个配置中，您的 IdM CA
服务器是外部 CA 的 subCA。外部 CA 可以（但不必）是 Active Directory
证书服务器(AD CS)。
如果外部证书颁发机构是 AD CS，您可以在 CSR 中为 IdM CA
证书指定您想要的模板。证书模板定义收到证书请求时使用的策略和规则。AD
中的证书模板与 IdM 中的证书配置集对应。
您可以通过其对象标识符(OID)定义特定的 AD CS 模板。OID
是不同发布机构发布的唯一数字值，用于唯一标识分布式应用中的数据元素、语法和其他部分。
另外，您还可以根据名称来定义特定的 AD CS 模板。例如，IdM CA 向 AD CS
提交的 CSR 中使用的默认配置集的名称为 `subCA`{.literal}。
要通过在 CSR 中指定 OID 或名称来定义配置集，请使用
`external-ca-profile`{.literal} 选项。详情请查看
`ipa-cacert-manage`{.literal} man page。
除了使用现成的证书模板外，您还可以在 AD CS 中创建自定义证书模板，并在
CSR 中使用它。
::: itemizedlist
**先决条件**
-   具有 IdM CA 续订服务器的 root 访问权限。
-   有 IdM 管理员凭证。
:::
::: title
**流程**
:::
完成此流程以使用外部签名续订 IdM CA 的证书，无论当前的 CA
证书是自签名还是外部签名。
::: orderedlist
1.  创建要提交到外部 CA 的 CSR：
    ::: itemizedlist
    -   如果外部 CA 是 AD CS，请使用
        `--external-ca-type=ms-cs`{.literal} 选项。如果您希望使用与默认
        `subCA`{.literal} 模板不同的模板，请使用
        `--external-ca-profile`{.literal} 选项指定它：
        ``` literallayout
        ~]# ipa-cacert-manage renew --external-ca --external-ca-type=ms-cs [--external-ca-profile=PROFILE]
        Exporting CA certificate signing request, please wait
        The next step is to get /var/lib/ipa/ca.csr signed by your CA and re-run ipa-cacert-manage as:
        ipa-cacert-manage renew --external-cert-file=/path/to/signed_certificate --external-cert-file=/path/to/external_ca_certificate
        The ipa-cacert-manage command was successful
        ```
    -   如果外部 CA 不是 AD CS：
        ``` literallayout
        ~]# ipa-cacert-manage renew --external-ca
        Exporting CA certificate signing request, please wait
        The next step is to get /var/lib/ipa/ca.csr signed by your CA and re-run ipa-cacert-manage as:
        ipa-cacert-manage renew --external-cert-file=/path/to/signed_certificate --external-cert-file=/path/to/external_ca_certificate
        The ipa-cacert-manage command was successful
        ```
        输出显示已创建了 CSR，并存储在 `/var/lib/ipa/ca.csr`{.literal}
        文件中。
    :::
2.  将位于 `/var/lib/ipa/ca.csr`{.literal} 中的 CSR 提交到外部
    CA。这个过程根据要用作外部 CA 的服务的不同而有所不同。
3.  检索发布的证书和 CA 证书链，用于在基本的 64 编码 Blob 中发布
    CA，即：
    ::: itemizedlist
    -   如果外部 CA 不是 AD CS，则是一个 PEM 文件。
    -   如果外部 CA 是 AD CS，则为 Base_64 证书。
        每个证书服务的进程都有所不同。通常，网页或通知电子邮件中的下载链接允许管理员下载所有必要的证书。
        如果外部 CA 是 AD CS，且您已通过 Microsoft Windows
        认证授权机构管理窗口使用已知模板提交 CSR，AD CS
        会立即发出证书，且 Save Certificate 对话框会出现在 AD CS Web
        界面中，询问如何保存颁发的证书。
    :::
4.  再次运行 `ipa-cacert-manage renew`{.literal}
    命令，添加提供完整证书链所需的所有 CA 证书文件。多次使用
    `--external-cert-file`{.literal} 选项指定所需文件：
    ``` literallayout
    ~]# ipa-cacert-manage renew --external-cert-file=/path/to/signed_certificate --external-cert-file=/path/to/external_ca_certificate_1 --external-cert-file=/path/to/external_ca_certificate_2
    ```
5.  在所有 IdM 服务器和客户端中，使用来自服务器的证书更新本地 IdM
    证书数据库：
    ``` literallayout
    [client ~]$ kinit admin
    [client ~]$ ipa-certupdate