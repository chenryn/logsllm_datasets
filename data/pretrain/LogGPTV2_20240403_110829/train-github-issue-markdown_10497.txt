### Is There an Existing Issue for This?
- I have searched the existing issues.

### This Issue Exists in the Latest npm Version
- I am using the latest npm version.

### Current Behavior
When running npm scripts, npm logs `timing config:load:flatten completed in 1/2ms` (the time flickers between 1ms and 2ms). This issue only occurs when there is a `.npmrc` file in the package root. Additionally, npm warns about ignoring the workspace configuration with the message:
```
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
```
This behavior does not prevent the scripts from executing, but it obscures the input in the terminal and causes a significant slowdown during package installation (part of my script runs `npm i -D "a bunch of packages"`).

**Example:**
```sh
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
> create-octobox-app@2.0.0 test
> npm run elevate && npm run build && npm run install && node test/main.test.js && npm run clean
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
> create-octobox-app@2.0.0 elevate
> sudo echo '' || exit 0
[sudo] password for thomas: (⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ : timing config:load:flatten (⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ : timing config:load:flatten Completed in 2ms
(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ : timing config:load:flatten Completed in 1ms
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
> create-octobox-app@2.0.0 build
> tsc --project tsconfig.json && minify bin/index.max.js > bin/index.js && rimraf bin/index.max.js && chmod u+x bin/index.js || exit 0
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
> create-octobox-app@2.0.0 install
> npm run clean && sudo npm link || npm link
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
> create-octobox-app@2.0.0 clean
> sudo npm -g uninstall create-octobox-app || npm -g uninstall create-octobox-app
up to date, audited 1 package in 147ms
found 0 vulnerabilities
npm WARN ignoring workspace config at /home/thomas/Documents/octobox/create-octobox-app/.npmrc
added 1 package, and audited 3 packages in 497ms
found 0 vulnerabilities
➤ Running tests...⠂) ⠙ : timing config:load:flatten Completed in 2ms
➤ Running test 1...) ⠙ : timing config:load:flatten Completed in 2ms
```

### Expected Behavior
The logging and warning messages should not appear, and the terminal should function normally without any flickering or obscured input.

**Expected Example:**
```sh
> create-octobox-app@2.0.0 test
> npm run elevate && npm run build && npm run install && node test/main.test.js && npm run clean
> create-octobox-app@2.0.0 elevate
> sudo echo '' || exit 0
[sudo] password for thomas: 
> create-octobox-app@2.0.0 build
> tsc --project tsconfig.json && minify bin/index.max.js > bin/index.js && rimraf bin/index.max.js && chmod u+x bin/index.js || exit 0
> create-octobox-app@2.0.0 install
> npm run clean && sudo npm link || npm link
> create-octobox-app@2.0.0 clean
> sudo npm -g uninstall create-octobox-app || npm -g uninstall create-octobox-app
removed 1 package, and audited 1 package in 157ms
found 0 vulnerabilities
added 1 package, and audited 3 packages in 349ms
found 0 vulnerabilities
➤ Running tests...
➤ Running test 1...
```

### Steps to Reproduce
1. Place a `.npmrc` file in a locally installed package with `npm link`. My `.npmrc` file contains the line `engine-strict=true`.
2. Run any npm script from this package, either within or outside the package's root directory. For example, you can use `npm create octobox-app` if you have a binary to execute with `npx` and the package name is `create-octobox-app`.
3. Observe the error messages and terminal behavior.

### Environment
- npm: 8.5.5
- Node.js: 16.14.0
- OS Name: Ubuntu 21.09
- System Model Name: Custom build (will provide specs if requested)
- npm config:
  ```sh
  ; "user" config from /home/thomas/.npmrc
  //registry.npmjs.org/:_authToken = (protected) 
  unsafe-perm = true 
  user = "0" 
  ; node bin location = /usr/local/bin/node
  ; cwd = /home/thomas/Documents/octobox/create-octobox-app
  ; HOME = /home/thomas
  ; Run `npm config ls -l` to show all defaults.
  ```