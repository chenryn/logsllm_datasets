#BHUSA @BlackHatEvents
Tunable Replica Circuit for Fault-
Injection Detection
Daniel Nemiroff
Carlos Tokunaga
• Fault‐Injection Attack Basics
• Dive into the TRC (Tunable Replica Circuit)
• Why and How Intel Integrated the TRC
• TRC Calibration and Validation
• Conclusions and Productization
Non‐Invasive FI Attacks
• This briefing covers the fault‐injection  
detection circuit, known as the TRC 
(tunable replica circuit).
• Our focus is non‐invasive FI attacks, where 
modification of the package is out of scope, 
this includes:
• Voltage attacks
• Clock attacks
• EM (electro‐magnetic radiation) attacks
• Thermal attacks
Non‐Invasive FI Attacks
As they are exposed at the package‐level, 
clock and voltage pins are the primary non‐
invasive attack surface.
Semi‐Invasive FI Attacks
• Lasers are a primary semi‐invasive threat, 
because they require a package de‐lid.
• However, research shows attacks from the 
side of a package can be done, without a 
de‐lid.
• These attacks are out of scope for this 
briefing.
To Complete the Circle . . .
. . . Invasive Physical Attacks
Primary Vehicles:
• FIBs, etching, on‐die probing, etc.
• Again, out of scope for this briefing, which 
is focused on non‐invasive physical 
attacks.
What is the Attacker is Trying to 
Accomplish with FI?
• Using FI, a common goal of the attacker is to cause circuit timing to 
fail, without causing the platform to crash.
• When circuit timing fails, data can be latched too early or too late.
• In many cases, latching data early causes 0x00 to be latched.
• In the context of a CPU or uC, when glitched at just the right time, an 
attack can cause a NOP to be latched, instead of a JMP.
• In fixed‐function crypto engines, real keys could be replaced, etc.
• In fabrics and busses, I/O devices could latch data or bus addresses 
too early/late.
Voltage Glitch Impact on Timing
Good CLK
Data Lines: Undervoltage glitch slows the data down, resulting in a 0b being latched
Under‐voltage Glitch Attack
NOP
JMP
Clock Glitch Impact on Timing
“Good” Clock
Data Lines
Good CLK latches a 1b
Bad Clock
Overclocking Glitch Attack
NOP Executed!
JMP Executed
Question: What would an overclocking waveform look like?
• Fault‐Injection Attack Basics
• Dive to the TRC (Tunable Replica Circuit)
• Why and How Intel Integrated the TRC
• TRC Calibration and Validation
• Conclusions and Productization
• The TRC was designed to mitigate aging in silicon by analyzing circuit timing.
• It consists of a launch flip‐flop, a tunable delay chain, and a capture flop. 
• The capture flop detects when a signal exits the delay chain at the wrong speed.
• Since FI often seeks to induce timing violations, the TRC can help detect FI attacks.
D
Q
CLK
D
Q
CLK
check_error
nor delay chain
inv delay chain
error
trc_input_clk
Configurable delay settings
Vnom
The TRC (Tunable Replica Circuit)
Launch Flop
Capture Flop
Deeper Dive into TRC Behavior
D
Q
CLK
D
Q
CLK
error
trc_input_clk
TRC Launch FF
TRC Capture FF
trc_data_ref
trc_data_actual
trc_input_clk
trc_data_ref
Slower, due to delay line
trc_data_actual (no attack)
XOR/error = 0
trc_data_actual (undervoltage attack)
XOR/error = 1
Slightly delayed, due to launch flop
Low voltage
= much slower
Capture FF latches the XOR, & 
outputs Error here
What is the XOR/Error result?
What is the XOR/Error result?
Why Intel Selected the TRC
Traditional FI detection circuits are dedicated analog voltage‐level detectors, 
analog clock monitors and thermal sensors, so why did we choose the TRC:
1.
The TRC was a proven technology at Intel, analog circuits would be new.
2.
The TRC can help detect multiple attacks (clock, voltage, EMFI, temp).
3.
The TRC is a digital circuit, easy to port to future process nodes.
4.
The TRC is small in die area.
Advantages of Traditional Analog FI Sensors:
• Precision
• Independent Detection of Attacks  The TRC will not detect if both voltage 
and clock frequency increase.
• Fault‐Injection Attack Basics
• Dive to the TRC (Tunable Replica Circuit)
• Why and How Intel Integrated of the TRC
• TRC Calibration and Validation
• Conclusions and Productization
What Is CSME? 
CSME is an embedded subsystem in Platform Controller 
Hub (PCH)
• Stands for Converged Security & Manageability Engine
• Standalone low power Intel processor with dedicated 
Hardware (HW)  
CSME is Root of Trust of the platform
• Provides an isolated execution environment protected 
from host SW running on main CPU
• Executes CSME Firmware (FW)
CPU
PCH
CSME
LAN 
WLAN
SMBUS 
GPIO
HECI
TRC 
Integration 
into CSME
Details for the CSME‐TRC
• The TRC is integrated into the system agent partition of CSME.
• The CSME‐TRC monitors the power and clock coming into CSME, 
to help protect all portions of CSME from an attack.
• When the TRC detects a glitch, it invokes countermeasures that 
result in a CSME reset.  The rest of the SoC is not impacted.
• The TRC is on the same reset line as all CSME HW, and if CSME is 
on, the TRC is monitoring this power.
• If CSME is power‐gated, the TRC is also power‐gated.
Why Integrate the TRC?
• Physical attacks have become cheaper to mount with FI equipment available for 
purchase or rent.
• Intel views security as an evolutionary process with a roadmap of  incremental and 
meaningful countermeasures . . . the TRC is an example of this roadmap.