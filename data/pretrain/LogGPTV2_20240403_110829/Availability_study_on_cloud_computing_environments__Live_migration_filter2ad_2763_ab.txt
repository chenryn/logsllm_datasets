show what happens when the rejuvenation supported by live
migration is used on clouds with different loads.
A. Models parameters
The RBD models are built and evaluated using the
SHARPE tool [18]. SPN models are built and evaluated using
the TimeNET tool [15]. Parameters adopted in the RBD
models can be seen in Table I, and SPN parameters are in
Table II. Due to the difﬁculty to obtain dependability rates
through experimentation, in the scope of this paper all values
are retrieved from consolidated studies [19] and [20].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:48 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 3. SPN model for a cloud environment with live migration rejuvenation mechanism
(a) Scn #1 - 100hrs
(b) Scn #2 - 250hrs
(c) Scn #3 - 500hrs
Fig. 4. Sensitivity analysis of rejuvenation policies on steady-state availability
(d) Scn #4 - 750hrs
(e) Scn #5 - 1000hrs
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:48 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I.
RBDS PARAMETERS
Block RBD
HW
OS
Management tool
MTTF
8760 h
1440 h
788.4 h
MTTR
100 min
1 h
1 h
TABLE II.
SPNS PARAMETERS
Parameters
Transition Name
MS fail
MS repair
MN fail, MN fail2
MN repair, MN repair2
SN fail
SN repair
VM fail
VM repair
VM Rb
Aging, Aging2
RecoverFromAging
MigrationTime
RejuvenationNode
* Depends on the scenario
Description
MS Internal failure
MS Repair
MainNode Internal failure
MainNode Repair
StandbyNode Internal failure
StandbyNode Repair
VM failure
VM repair
VM reboot
Times to aging (phases)
Time to recover from aging
failure
Time to live migrate a VM
Time to rejuvenate Node
Values
Mean time
481.5 h
1.03 h
1236.7 h
1.09 h
1236.7 h
1.09 h
2880 h
30 min
5 min
*
1 h
4 s
30 min
TABLE IV.
RESULTS FROM MODEL ANALYSIS
# Scn
Rej. Policy
1
2
3
4
5
1 h
6 h
6 h
12 h
12 h
SS Avail.
0.9961765
0.9965244
0.9966707
0.996714
0.9967297
Downtime (min/yr)
2009.6
1826.7
1749.8
1727.1
1718.8
other two metrics. First, the percentage gain of availability.
This measure show how much the steady-state availability is
improved when the system uses the rejuvenation supported by
live migration. It was computed by comparing the steady-state
availability with and without migration. The measure of this
gain appears on Y-axis of the Figure 5. We also calculated the
minutes of downtime avoided in a year. The Y-axis of Figure
6 shows the difference of downtime in the system with and
without rejuvenation. The X-axis on both plots corresponds to
time interval to trigger a rejuvenation on the system, which is
limited to 720 hours.
B. Evaluation of scenarios
The evaluation of the scenarios is based on two major
factors: rejuvenation policy and Time To Aging Related Failure
(TTARF). So, we built ﬁve scenarios with different TTARFs.
In each scenario, the time interval to trigger the rejuvenation
varies from 1 hour to 720 hours, using sampling. It is important
to highlight that these values correspond to mean interval
between migrations. The scenarios are speciﬁed in Table III,
including the time values used for each phase of the Erlang-
based sub-net
that represents the aging phenomenon. The
values are determined using a proportion shown in the aging
phenomenon described in [13].
For each scenario, we made a sensitivity analysis con-
sidering the impact of rejuvenation policies on steady-state
availability. Figure 4 presents the results of these scenarios.
The plots also include a base line availability obtained from a
model without rejuvenation policies. Notice that, for nearly all
scenarios and policies, the system which uses rejuvenation has
higher availability than the system which does not use it. With
the results is possible to see that the availability decreases
after reaching a speciﬁc maximum value. The appropriate
rejuvenation policy to achieve the maximum availability on
each scenario is an important conclusion from this sensitivity
analysis. Table IV presents the rejuvenation trigger interval
which yields the highest availability for each scenario. Note
that for scenarios with lowest workload intensities (scenarios 4
and 5) the rejuvenation may be triggered with a larger interval
than it would be triggered in scenarios with highest workload
intensity, and subsequently smallest TTARFs.
In order to better show the impact of the proposed re-
juvenation on cloud computing environments, we compute
Fig. 5.
Improvement availability in each scenario
TABLE III.
SCENARIOS DEFINITION
Fig. 6. Downtime reduction (min/yr)
# Scenario
1
2
3
4
5
TTARF
100 h
250 h
500 h
750 h
1000 h
Aging 1st phase
Aging 2nd, 3rd phases
66.667 h
166.667 h
333.333 h
500 h
666.667 h
16.667 h
41.667 h
83.333 h
125 h
166.667 h
These plots enable us to see the direct impact of rejuve-
nation trigger intervals on the availability of the system. In
Scenario 1, which has the smallest TTARF, the rejuvenation
mechanisms produce signiﬁcant improvements: with the proper
rejuvenation trigger interval is possible to avoid about 78 hours
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:48 UTC from IEEE Xplore.  Restrictions apply. 
[7]
[8]
J. Araujo, R. Matos Junior, P. Maciel, and R. Matias, “Software
aging issues on the eucalyptus cloud computing infrastructure,” in
Proceedings of the IEEE Int. Conf. on Systems, Man, and Cybernetics
(SMC’11), Anchorage, 2011.
J. Araujo, R. Matos Junior, P. Maciel, R. Matias, and I. Beicker, “Ex-
perimental evaluation of software aging effects on the eucalyptus cloud
computing infrastructure,” in Proceedings of the ACM/IFIP/USENIX
International Middleware Conference (Middleware’11), Lisbon, 2011.
[9] R. Matos Junior, J. Araujo, V. Alves, and P. Maciel, “Experimental
evaluation of software aging effects in the eucalyptus elastic block
storage,” in Proceedings of the IEEE Int. Conf. on Systems, Man, and
Cybernetics (SMC’12), Seoul, 2012.
[11]
[10] R. Matias and P. J. Freitas Filho, “An experimental study on software
aging and rejuvenation in web servers,” in Proc. of 30th Annual
Int. Computer Software and Applications Conference (COMPSAC’06),
Chicago, Sep. 2006.
J. Araujo, R. Matos Junior, P. Maciel, F. Vieira, R. Matias, and
K. S. Trivedi, “Software rejuvenation in eucalyptus cloud computing
infrastructure: a method based on time series forecasting and multiple
thresholds,” in Proc. of the 3rd Int. Workshop on Software Aging and
Rejuvenation (WoSAR’11) in conj. with the 22nd annual Int. Symp. on
Software Reliability Engineering (ISSRE’11), Hiroshima, Japan, 2011.
[12] A. Guimaraes, H. Oliveira, R. Barros, and P. Maciel, “Availability
analysis of redundant computer networks: A strategy based on reliability
importance,” in Communication Software and Networks (ICCSN), 2011
IEEE 3rd Int. Conf. on, May, pp. 328–332.
[13] R. Matos, J. Araujo, V. Alves, and P. Maciel, “Characterization of
software aging effects in elastic storage mechanisms for private clouds,”
in IEEE 23rd Int. Symp. on Software Reliability Engineering Workshops
(ISSREW), 2012, pp. 293–298.
[14] R. German, Performance Analysis of Communication Systems with Non-
Markovian Stochastic Petri Nets. New York, NY, USA: John Wiley
& Sons, Inc., 2000.
[15] R. German, C. Kelling, A. Zimmermann, G. Hommel, T. U. Berlin,
and F. P. U. Robotik, “Timenet - a toolkit for evaluating non-markovian
stochastic petri nets,” Performance Evaluation, vol. 24, pp. 69–87, 1995.
[16] K. D. Figiel and D. R. Sule, “A generalized reliability block diagram
(rbd) simulation,” in Proc. of the 22th Winter Simulation Conference,
New Orleans, Louisiana, USA, December 9-12, 1990, O. Balci, Ed.
IEEE, 1990, pp. 551–556.
[17] Y. Wu and M. Zhao, “Performance modeling of virtual machine live
migration,” in Cloud Computing (CLOUD), 2011 IEEE Int. Conf. on,
July, pp. 492–499.
[18] K. S. Trivedi, “Sharpe 2002: Symbolic hierarchical automated reliability
[19]
and performance evaluator,” in DSN, 2002, p. 544.
J. Dantas, R. Matos, J. Araujo, and P. Maciel, “An availability model
for eucalyptus platform: An analysis of warm-standy replication mech-
anism,” in Systems, Man, and Cybernetics (SMC), 2012 IEEE Int. Conf.
on, Oct., pp. 1664–1669.
[20] D. S. Kim, F. Machida, and K. Trivedi, “Availability modeling and
analysis of a virtualized system,” in Dependable Computing, 2009.
PRDC ’09. 15th IEEE Paciﬁc Rim Int. Symp. on, Nov., pp. 365–371.
of downtime in a year. When the rejuvenation trigger interval
varies, the steady-state availability also changes, but in sightly
different ways for each scenario. There is an appropriate sched-
ule for each scenario. In some cases, too often migrations can
degrade system availability drastically. In the other way, the
behavior depicted in the plots allows us to state that the steady-
state availability tends to be close to baseline availability (no
migration) as the trigger interval increases.
VI. CONCLUSIONS AND FUTURE WORKS
We presented a comprehensive availability model based
on RBD and SPN for a cloud system where VMM rejuve-
nation supported by live migration is enabled. The models
enable the choice of the appropriate rejuvenation policy to
distinct scenarios, achieving signiﬁcant improvement in the
steady-state availability. The results show that the rejuvena-
tion mechanism supported by live migration may be useful
on various scenarios with different workloads. Besides, for
systems under heavy workloads, where aging is faster, the live
migration rejuvenation can bring a signiﬁcant improvement to
availability, by employing the correct rejuvenation schedule.
Also, it is important to say that when the rejuvenation trigger
interval is large the steady-state availability tends to return to
the value of the system without rejuvenation. There are also
cases where a intense migration activity is not appropriate to
improve availability.
In future works, we intend to study more scenarios with
different types of workloads and include in the availability
models the aging characteristics of other components of cloud
computing environments. Another future objective is to do
sensitivity analysis on another models parameters, not only
rejuvenation trigger.
ACKNOWLEDGMENTS
We would like to thank the Coordination of Improvement
of Higher Education Personnel – CAPES, the Foundation for
Support to Science and Technology of Pernambuco State -
FACEPE, and MoDCS Research Group for their support.
REFERENCES
[1] C. Gong, J. Liu, Q. Zhang, H. Chen, and Z. Gong, “The characteristics
of cloud computing,” in Parallel Processing Workshops (ICPPW), 2010
39th Int. Conf. on.
IEEE, 2010, pp. 275–279.
[2] C. Clark, K. Fraser, S. Hand, J. G. Hansen, E. Jul, C. Limpach, I. Pratt,
and A. Warﬁeld, “Live migration of virtual machines,” in Proceedings
of the 2nd Symposium on Networked Systems Design & Implementation-
Volume 2. USENIX Association, 2005, pp. 273–286.
[3] F. Machida, D. S. Kim, and K. S. Trivedi, “Modeling and analysis of
software rejuvenation in a server virtualized system,” in Software Aging
and Rejuvenation (WoSAR), 2010 IEEE 2nd Int. Workshop on.
IEEE,
2010, pp. 1–6.
[4] Y. Huang, C. Kintala, N. Kolettis, and N. D. Fulton, “Software rejuve-
nation: Analysis, module and applications,” in Proc. of 25th Symp. on
Fault Tolerant Computing, FTCS-25, Pasadena, 1995, pp. 381–390.
[5] M. Grottke, R. Matias, and K. Trivedi, “The fundamentals of software
aging,” in Proc of 1st Int. Workshop on Software Aging and Rejuvena-
tion (WoSAR), in conjunction with 19th IEEE Int. Symp. on Software
Reliability Engineering, Seattle, Nov. 2008.
[6] A. Avizienis, J. Laprie, B. Randell, and C. Landwehr, “Basic concepts
and taxonomy of dependable and secure computing,” IEEE Transactions
on Dependable and Secure Computing, vol. 1, pp. 11–33, 2004.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:48 UTC from IEEE Xplore.  Restrictions apply.