title:A Firewall for Routers: Protecting against Routing Misbehavior
author:Ying Zhang and
Zhuoqing Morley Mao and
Jia Wang
A Firewall for Routers:
Protecting Against Routing Misbehavior
Ying Zhang Z. Morley Mao
Jia Wang
University of Michigan
AT&T Labs–Research
Abstract
In this work, we present the novel idea of route normal-
ization by correcting on the ﬂy routing trafﬁc on behalf of a
local router to protect the local network from malicious and
misconﬁgured routing updates. Analogous to trafﬁc normal-
ization for network intrusion detection systems, the proposed
RouteNormalizer patches ambiguities and eliminates seman-
tically incorrect routing updates to protect against routing
protocol attacks. Furthermore, it serves the purpose of a
router ﬁrewall by identifying resource-based attacks against
routers. Upon detecting anomalous routing changes, it sug-
gests local routing policy modiﬁcations to improve route se-
lection decisions. Deploying a RouteNormalizer requires no
modiﬁcation to routers if desired using a transparent TCP
proxy setup.
the detailed design of
In this paper, we present
the
RouteNormalizer and evaluate it using a prototype implemen-
tation based on empirical BGP routing updates. We validate
its effectiveness by showing that many well-known routing
problems from operator mailing lists are correctly identiﬁed.
1
Introduction
I would stress that all of these things, particularly pre-
ﬁx hijacking and backbone router “ownage”, are real
threats, happening today, happening with alarming fre-
quency. Folks need to realize that the underground is
abusing this stuff today, and has been for quite some time.
–Rob Thomas quoted by David Meyer at NANOG 28,
June 2003
This is a quote given by David Meyer, a well-known net-
work researcher and network operator, at the North American
Network Operators’ Group (NANOG) Meeting in 2003 [33].
It highlights the urgency to better protect the Internet routing
system, providing the main motivation for our work.
The Internet originated from a research network where net-
work entities are assumed to be well-behaved. The original
Internet design addresses physical failures well, but fails to
address problems resulting from misbehavior and misconﬁgu-
rations. Routers can misbehave due to misconﬁgurations [29],
impacting network reachability. Today, the Internet has no ro-
bust defense mechanisms against misbehaving routers, leav-
1
ing the routing infrastructure largely unprotected [34]. One of
the most widely known and serious misconﬁguration occurred
in 1997, when a customer router at a small edge network by
mistake advertised a short path to many destinations, result-
ing in a massive blackhole disconnecting a signiﬁcant portion
of the Internet [10]. This example illustrates the need for an
easily deployable protection mechanism to prevent local for-
warding decisions from being polluted.
For our purpose, we deﬁne the control plane to be the
Internet routing layer, and the data plane to be the packet
forwarding layer. There is an inherent trust relationship in
today’s routing system: a router assumes routing updates
from its neighbors are correct. However, router misconﬁgu-
rations [29], attacks [30], and inherent routing problems [21]
often render this assumption incorrect.
Given the lack of security in today’s routing proto-
cols, both the research and the network operator commu-
nity have already proposed solutions such as SBGP [40] and
SoBGP [35], which require routing protocol modiﬁcations.
However, we have witnessed a rather slow deployment. Fur-
thermore, most of them do not eliminate the possibility of
router misconﬁgurations and their associated impact.
We take a different approach by posing the question of
what individual networks can do locally to protect against
routing misbehavior from external networks. Even if future
routing protocols have enhanced security mechanisms, there
is still a need to be defensive against routing attacks from
noncooperative networks or misconﬁgurations. Furthermore,
there exist inherent ambiguities in routing protocols that re-
quire rectiﬁcation to proactively prevent unexpected behav-
ior due to implementation variations. We propose that net-
works proactively correct routing updates locally through a
RouteNormalizer (RN), which logically sits on the data path
between the local router to be protected and the remote router
whose updates may be untrustworthy. Our work ﬁts perfectly
with the recent proposal of logically centralized routing ar-
chitecture such as RCP [12] to improve routing control. Such
a platform acts as a ﬁrewall for the local router by identify-
ing and preventing routing attacks using anomaly detection.
Taking advantage of local information such as local routing
policies, local address information, relationship with neigh-
boring Autonomous Systems or ASes help more accurately
detect routing attacks directly impacting the local AS.
Unlike protocols such as SBGP, our approach requires no
changes to routing protocols or router conﬁgurations. We
summarize RN’s main functionality: (i) Identify and correct
anomalous routing updates. (ii) Identify and mitigate routing
attacks. (iii) Mitigate routing instability by dampening rout-
ing updates. (iv) Perform load management by rate-limiting
updates. (v) Emulate features not available on local routers,
e.g., graceful restart [39]. One of our novel contributions lies
in applying routing anomaly detection to inﬂuence routing de-
cisions so that routes selected are more likely correct.
The RouteNormalizer is a general platform for correct-
ing routing updates for any routing protocols. In this work,
we focus on the interdomain routing protocol – BGP (Bor-
der Gateway Protocol [37, 24, 22]) given its importance to
the well-being of the Internet and that its routing informa-
tion mostly arrives from external untrusted networks. BGP
is a path vector protocol, as the AS PATH attribute contains
the sequence of ASes of the route. Each BGP update con-
tains path attributes such as NEXT HOP and ORIGIN, some
of which are mandatory. BGP is incremental, i.e., every BGP
update message indicates a routing change. In addition, BGP
is policy-oriented: routers can apply complex policies to in-
ﬂuence best route selection for each preﬁx and to subsequent
route propagation.
We summarize our main contributions: (1) Developed a
platform to perform BGP trafﬁc normalization, enabling in-
crementally deploying new router functionality. (2) Improved
on existing router functionality, e.g., max-preﬁx-limit.
(3)
Proposed the use of routing anomaly detection to achieve ro-
bust routing. (4) Improved routing anomaly detection by ex-
ploiting local network information.
(5) Performed the ﬁrst
extensive correlation between NANOG emails for routing re-
lated complaints with BGP data.
The rest of the paper is organized as follows. We ﬁrst
present the architecture design of the RouteNormalizer in
Section 2. Section 3 describes the deployment scenarios. We
describe our prototype in Section 4. We show the effective-
ness of the RouteNormalizer using empirical BGP data in
Section 5. Finally, we cover related work and conclude.
2 RouteNormalizer Architecture
In this section, we describe the architectural design. We re-
fer to the local router as the router under the protection of the
RouteNormalizer in the same AS. The RouteNormalizer can
correct trafﬁc on behalf of several local routers. The remote
router refers to the other router in the BGP session, typically
not within the same AS as the local router.
As illustrated in Figure 1, the RouteNormalizer takes sev-
eral optional input data such as the local router’s policy con-
ﬁguration and real-time BGP feeds from external sources.
The RouteNormalizer can be conﬁgured to observe all the
trafﬁc destined to the local router’s BGP port 179, as well
as trafﬁc originated by the local router to the remote router.
As output, in addition to the “normalized” BGP trafﬁc, it gen-
erates alarms and suggestions for policy modiﬁcations for the
BGP traffic
Route Normalizer
Individual 
alarms
Policy Engine
Optional
config input
(e.g., local router
configuration)
Policy 
configuration
Optional
data input
(e.g., external 
BGP data)
Aggregated alarm reports
Figure 1. The RouteNormalizer framework.
local router. Note that the RouteNormalizer performs normal-
ization on BGP trafﬁc both destined to as well as originated
from the local router. We focus on the former case here.
2.1 Functionality overview
We ﬁrst highlight its design principles. (1) Basic check-
ing to ensure protocol semantic correctness. (2) Make use of
local network information such as local network addresses.
(3) Take advantage of external information to assist route
anomaly detection. (4) Assume dominant history behavior is
mostly correct. (5) Use anomaly detection to inﬂuence route
selection: be conservative by avoiding anomalous routes.
A summary of all functionalities is shown in Table 1. Ar-
guably, some of these can be performed directly by routers
using route ﬁlters for example. However, route ﬁlters are
usually signature based, only protecting against known attack
patterns. Nor do they have any anomaly detection or data cor-
relation capability. Routers usually have limited memory to
perform such ﬁltering, and such incurred overhead may im-
pact regular forwarding behavior. Furthermore, as we explain
below, the RouteNormalizer also acts as a ﬁrewall to prevent
potential router OS bugs from being exploited. For known
router OS problems such as the recently announced DoS vul-
nerabilities in Cisco IOS [43], the RouteNormalizer can act
as a ﬁlter before patches are applied. Next, we illustrate each
category using examples.
2.2 Fix violations of BGP semantics
The RouteNormalizer performs simple checks for detect-
ing violations of BGP semantics in routing updates. Routers
may react differently to such updates depending on their im-
plementations. In the ideal case, they would drop such up-
dates and send back an error message.
In some instances,
these routes may actually be selected as the best route for for-
warding; however, packets may not reach the destinations due
to the violation of BGP semantics.
Routers from different vendors running distinct software
versions may exhibit dissimilar default behavior, possibly
leading to inconsistent routing decisions in a single network.
As a result, simply enforcing uniform routing conﬁgurations
across all routers in the network may not be sufﬁcient. More-
over, unexpected BGP updates may also lead to router OS
crashes (e.g., [7]). Thus, a platform such as the RouteNormal-
izer that dynamically detects routing problems is very useful.
2
Category
Description
Fix violations
of BGP semantics
Fix violations
of routing policies
Detect routing
anomalies
Incorrect attribute values: e.g., AS loops
Attributes with private information
Missing mandatory attribute values
Export policy violations
Nexthop violations
Anomalous routing behavior
Routing inconsistency
Local and remote address hijacks
Load management and Mitigate load due to identical routing updates
instability mitigation
Mitigate against router DoS attacks
Mitigate instability of ﬂapping preﬁxes
Mitigate instability of session resets
RouteNormalizer actions
(also suggest improved routing policies)
Modify, drop updates, generate warnings
Existing router
implementation
Conﬁgure with route ﬁlters.
Drop updates, generate warnings
Modify, drop updates, generate warnings
Drop updates, generate warnings
Drop updates, generate warnings
Modify, drop updates, generate warnings
Drop duplicate updates
Filter BGP attack trafﬁc, delay updates
Emulate route ﬂap damping, delay updates
Emulate graceful restart, delay updates
Conﬁgure with route ﬁlters,
may require external information.
Not available,
difﬁcult to implement,
requires external information.
Partially implementable,
RouteNormalizer enhanced
existing functionality.
Table 1. Functionality of the RouteNormalizer.
1. AS routing loops. This is an example of ambiguities
in BGP routing protocol speciﬁcation.
It is recommended
that routes containing loops should not be used; however, in
practice we still observe such routes due to lack of enforce-
ment. In some rare instances, routing loops are allowed in
the AS PATH due to special topology arrangements. How-
ever, one cannot count on these paths to be accepted by other
routers, leading to potential routing blackholes. Thus, to im-
prove routing robustness, it is best to exclude such routes from
BGP decision process if alternate routes exist.
2. Missing mandatory attributes. Another BGP semantics
violation is missing mandatory attributes in the routing up-
dates. Some attributes such as ORIGIN or AS PATH cannot
be easily inferred. However, the NEXT HOP attribute, which
is also mandatory, usually is the interface IP address of the
advertising router. Proactively correcting this prevents unnec-
essary session resets.
3. Private information. For eBGP sessions i.e., BGP ses-
sions between routers belonging to different ASes, BGP at-
tributes in general should not contain private information such
as private IP addresses/preﬁxes or private AS numbers. For
iBGP sessions, i.e., sessions within an AS, such values are
meaningful only within the local network. For all sessions,
bogon preﬁxes or unallocated preﬁxes by address registries
should not be announced. Accidentally accepting such routes
may impact forwarding for legitimate destinations using pri-
vate address blocks inside the local network.
Remark: In general, there is only a small classes of updates
that violate BGP semantics due to the ﬂexibility of routing
policies and ambiguities of the protocol speciﬁcation. If the
RouteNormalizer is initialized with the local routing policies,
more semantic violation can be identiﬁed. Routing updates
in this category can be corrected or ﬁltered using route ﬁl-
ters. However, there is a limited number of ﬁlters a router can
accommodate, and this imposes additional overhead.
2.3 Fix violations of routing policies