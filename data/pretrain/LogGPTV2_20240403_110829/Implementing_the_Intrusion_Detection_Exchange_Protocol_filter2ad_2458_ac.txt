port mapping” documents are to be developed, deﬁning
how to use speciﬁc transport protocols to meet the BEEP
requirements. BEEP will map easily to any connection-
oriented transport protocol offering ordered, reliable de-
livery. This clearly suggests that TCP be used as an
underlying transport. Attempts to map BEEP onto a
connection-less, best-effort delivery protocol (i.e., UDP)
are strongly discouraged, as it’s anticipated that such an
effort would be forced to duplicate much of the effort
that went into the development of TCP.
A transport mapping for TCP has been developed,
deﬁning how a BEEP session is mapped onto a single
TCP connection.
In March 2001, this document was
designated RFC 3081 [23] and is on the IETF standards-
track. There has been some discussion of mapping
BEEP onto the Stream Control Transmission Protocol
(SCTP) [19]. SCTP is a reliable, connection-oriented
protocol that provides multi-streaming functionality, al-
lowing data to be broken into multiple independently se-
quenced streams.
BEEP
TCP
IP
Ethernet, ATM, etc.
Figure 2: BEEP’s Position in TCP/IP Protocol Stack.
7 Intrusion Detection Exchange Protocol
(IDXP)
IDXP is an implementation of the IDWG application
level transport protocol described in the IDWG require-
ments document as IDP [9]. IDXP is implemented as
a BEEP proﬁle. Thus BEEP provides the actual proto-
col while the IDXP proﬁle speciﬁes the BEEP channel
characteristics necessary for implementation of the IDP
requirements. IDXP can be broken down into four main
phases: connection provisioning, security setup, BEEP
channel creation, and data transfer. Basically, IDXP is
implemented as a BEEP proﬁle that uses other proﬁles
to create a channel.
7.1 Connection Provisioning
Connections between ID entities may be established
using zero or more intermediate hops. A simple BEEP
connection from one ID entity to another is used for the
case of no intermediate hops. When one or more inter-
mediate hops are required, the protocol needs to set up
an application-layer tunnel across those hops.
The IDXP BEEP proﬁle requires that users of IDXP
choose a BEEP tuning proﬁle (6.7) designed to create
such a tunnel, and requires that implementors include
support for use of the TUNNEL proﬁle [15]. Use of
a tuning proﬁle for this purpose preserves the orthogo-
nality between this phase of IDXP and later phases, be-
cause later phases need only know that a connection ex-
ists from one ID entity to another. Requiring support for
TUNNEL insures interoperability between implementa-
tions for this phase of the protocol.
It is important to note that no security-related require-
ments are placed on the creation of application-layer
tunnels. This stems from IDXP’s trust model, which
states simply that endpoints alone are trusted once mu-
tual authentication between endpoints has taken place.
Intermediate hops are not trusted, and do not partici-
pate in end-to-end security measures except in their ba-
sic function as links in the application-layer tunnel.
The IDXP proﬁle does require that some authentica-
tion mechanism be supported by the tunneling proﬁle
chosen, and in particular requires support for the use of
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:41 UTC from IEEE Xplore.  Restrictions apply. 
SASL [14] by users utilizing the TUNNEL proﬁle for
tunnel creation. Use of security measures in tunnel cre-
ation is encouraged if the cost of security during connec-
tion provisioning is acceptable, and support for an au-
thentication mechanism is required to, at the least, pro-
vide an option for safe buildup of the tunnel across secu-
rity perimeters. In particular, IDS deployment scenarios
may require that ID entities outside a ﬁrewall connect to
other ID entities located within the ﬁrewall, and in such
scenarios it is highly desirable to authenticate any host
attempting to connect through the ﬁrewall and into the
protected network (Figure 1).
7.2 Security Setup
Once a connection has been provisioned the use
of end-to-end security measures must be initiated.
The IDXP proﬁle requires that a BEEP tuning pro-
ﬁle( 6.7) be used to establish security properties of
the connection that meet the IDWG requirements on
transport security.
implemen-
tors support use of the TLS proﬁle [8], using the
TLS DHE DSS WITH 3DES EDE CBC SHA cipher-
suite, to insure interoperability for this phase of the pro-
tocol.
IDXP requires that
Utilizing a tuning proﬁle to establish end-to-end se-
curity preserves the orthogonality of this phase of the
protocol with other phases, because other phases assume
that sufﬁcient security measures are in place (or will be
put in place). The TLS proﬁle is the only proﬁle known
to meet all the transport requirements of the IDWG [9]
for IDP.
7.3 BEEP Channel Provisioning
Once a BEEP session has been established and se-
cured, the next phase is to open one or more BEEP chan-
nels over which ID data can be exchanged. The client
(source of ID data) and server (sink for ID data) must
be established for each channel that is opened for use
with IDXP, and so the ﬁrst message exchanged across a
channel running IDXP contains a URI [2] for the peer
as well as a requested role, i.e., server or client. A fully
qualiﬁed domain name and/or IP address may also be
supplied. Once a peer receives this message it must de-
cide whether the role requested by the ID entity with the
given identiﬁcation is acceptable, and reply with an af-
ﬁrmative or negative answer.
Messages identifying a peer and requesting a role on
a channel running IDXP may be sent at any point in the
lifetime of the channel, and the current role choices at
any given time are determined by the last afﬁrmatively
acknowledged greeting message. The choosing of roles
on a per-channel basis allows BEEP sessions to be cre-
ated between ID entities in a fully peer-to-peer fash-
ion, and permits different concurrent exchanges within
a BEEP session. Additionally, the use of multiple chan-
nels running IDXP under a single BEEP session pro-
vides a reduction in per-exchange overhead because the
costs of connection provisioning and security are only
paid once at session creation.
IDXP profile
syslog profile
Other profile
BEEP
TCP
IP
Ethernet, ATM, etc.
Figure 3: BEEP in Action
7.4 Data Transfer
ID data is sent from clients to servers in one
of three MIME types [12]:
text/plain, or
application/octet-stream. XML data must conform to
the DTD for IDMEF messages, and the remaining two
types are provided so as not to restrict the present and
future formatting of ID data being sent using IDXP.
text/xml,
Transfer categorization can be achieved by appropri-
ating a different channel to different categories of ID
data, and transfer prioritization can be achieved by es-
tablishing an order in which channels are serviced (mes-
sages sent or received).
8 Future Work
Future work on IDXP can be grouped into four ar-
eas: improving the IDXP speciﬁcation and preparing it
for the standards process, completing and testing our
implementation of IDXP, developing applications that
use IDXP, and extending IDXP to do more than deliver
alerts.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:41 UTC from IEEE Xplore.  Restrictions apply. 
8.1 The IDXP Speciﬁcation
Although there are no obvious problems with the
IDXP proﬁle, it is important for it to be scrutinized be-
fore the standards process, in order to ensure its security
and usability. Any ambiguities in the deﬁnition of IDXP
must be resolved in order to avoid the interoperability
problems that have faced other protocols when the spec-
iﬁcations have not been clear.
Part of this process will involve testing our imple-
mentation of IDXP with implementations developed by
others. In addition to ﬁnding any ambiguities or errors
in the text of the speciﬁcation, this step is important in
order to ﬁnd any design problems that may hinder oper-
ation under various conditions.
After appropriate testing and reﬁnements to the doc-
ument, the working group will submit IDXP for consid-
eration as an RFC. At that point, it will be up to the ven-
dors to implement support for IDXP in their intrusion
detection products.
At this time, the IDXP speciﬁcation is undergoing ’ﬁ-
nal call’ within the IDWG. After ’ﬁnal call’, the IDWG
will request that IDXP become a Proposed RFC.
8.2 The Implementation
Currently, there are several major problems with the
implementation. First, because the TLS proﬁle is not
done, the implementation can not check that it is being
used correctly. It can check that the underlying session
is using TLS but can not verify that the correct algorithm
is being used. Second, the implementation has a prob-
lem servicing multiple channels. The ﬁx for this should
include the ability to prioritize channels. Third, the con-
ﬁguration interface needs to be improved. But as it cur-
rently exists our IDXP implementation demonstrates the
ability to fulﬁll the IDWG requirements for a transport
protocol using the BEEP framework.
8.3 IDXP Applications
In order to show the usefulness of IDXP, applications
which make use of it must be created. The most useful
demonstration of IDXP would consist of a complete sys-
tem of analyzers, managers, and proxies for distributing
alert data across the network.
The easiest way to implement analyzers would be to
create IDXP interfaces for existing intrusion detection
products. A plug-in for the popular Snort tool would
be one useful example. For those applications which do
not have easily extensible architectures, a small program
could be written to convert and transmit proprietary out-
put.
A simple manager application could demonstrate the
utility of IDXP by collecting information from the ana-
lyzers and storing it in a database. A user interface for
collating, summarizing, and searching the alert database
would allow for powerful administrative abilities.
Currently, we have created a small environment of
analyzers and managers with IDXP as the transport pro-
tocol. Our hope is to expand on this environment during
the next year with commercial and public domain tools.
8.4 Extending IDXP
Although the IDWG is currently only working on
exchanging alert data, it may examine other issues at
a later time. One popular idea for future work would
be to standardize methods for remote conﬁguration of
IDS. IDS that use IDXP to communicate with managers
across the network might be physically located far away
from those responsible for their conﬁguration. Even if
they are physically accessible, an operator might prefer
to conﬁgure them remotely, especially if a large number
of systems must be reconﬁgured. It might also be desir-
able for a manager application to reconﬁgure an analyzer
automatically in response to a network attack.
In order to allow managers to conﬁgure analyzers,
standard messages need to be deﬁned, possibly as an ex-
tension of IDMEF[7], and need to be sent to the analyz-
ers over the network. The natural mechanism for send-
ing such messages is IDXP. The managers and analyzers
already connect to each other through IDXP, so conﬁgu-
ration messages could easily be carried on the same con-
nection. One of the nice features of BEEP is the ability
to open multiple channels over the same connection, so
while one channel is used to exchange alerts, a separate
channel could carry conﬁguration information. BEEP
even allows for assignment of priorities to channels, so
a conﬁguration channel could be given higher priority
than the alert channel, in order to avoid the situation in
which a ﬂood of alerts might prevent timely delivery of
conﬁguration changes.
9 Summary
In this paper, we describe the goals of the IDWG and
the requirements for a transport protocol to communi-
cate among intrusion detection systems. Our focus has
been on specifying and implementing the Intrusion De-
tection Exchange Protocol (IDXP) a transport protocol
designed and implemented within the BEEP framework.
There are still open issues in IDXP implementation, but
IDXP appears to fulﬁll all the IDWG requirements for a
transport protocol.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:41 UTC from IEEE Xplore.  Restrictions apply. 
References
[1] ALVESTRAND, H. RFC 3066: Tags for the identiﬁcation of languages, Jan. 2001.
[2] BERNERS-LEE, T., FIELDING, R., AND MASINTER, L. RFC 2396: Uniform Resource Identiﬁers (URI):
Generic syntax, Aug. 1998.
[3] BETSER, J., WALTHER, A., ERLINGER, M., BUCHHEIM, T., FEINSTEIN, B., MATTHEWS, G., POLLOCK, R.,
AND LEVITT, K. Globalguard: Creating the ietf-idwg intrusion alert protocol (iap). IEEE DARPA Information
Survivability Conference and Exposition (DISCEX), Anaheim, CA, June 2001.
[4] BRADNER, S. RFC 2026: The Internet standards process — revision 3, Oct. 1996.
[5] BUCHHEIM, T., FEINSTEIN, B., GUPTA, D., MATTHEWS, G., AND POLLOCK, R. IAP: Intrusion Alert Proto-
col, Mar. 2001. draft-ietf-idwg-iap-05, work in progress.
[6] CASE, J., FEDOR, M., SCHOFFSTALL, M., AND DAVIN, C. RFC 1157: Simple Network Management Protocol
(SNMP), May 1990.
[7] CURRY, D., AND DEBAR, H. Intrusion Detection Message Exchange Format data model and Extensible Markup
Language (XML) Document Type Deﬁnition, Feb. 2001. draft-ietf-idwg-idmef-xml-03, work in progress.
[8] DIERKS, T., AND ALLEN, C. RFC 2246: The TLS protocol version 1, Jan. 1999.
[9] ERLINGER, M., AND WOOD, M. Intrusion detection message exchange requirements, Feb. 2001. draft-ietf-
idwg-requirements-05, work in progress.
[10] FEINSTEIN, B., MATTHEWS, G., AND WHITE, J. The Instrusion Detection Exchange Protocol (IDXP), Feb.
2001. draft-ietf-idwg-beep-idxp-01, work in progress.
[11] FIELDING, R., GETTYS, J., MOGUL, J., NIELSON, H., MASINTER, L., LEACH, P., AND BERNERS-LEE, T.
RFC 2616: Hypertext Transfer Protocol — HTTP/1.1, June 1999.
[12] FREED, N., AND BORENSTEIN, N. RFC 2046: Multipurpose Internet Mail Extensions (MIME) part two: Media
types, Nov. 1996.
[13] KLENSIN, J. RFC 2821: Simple Mail Transfer Protocol, Apr. 2001.
[14] MYERS, J. RFC 2222: Simple Authentication and Security Layer (SASL), Oct. 1997.
[15] NEW, D. The TUNNEL proﬁle, Feb. 2001. draft-ietf-idwg-beep-tunnel-01, work in progress.
[16] NEW, D., AND ROSE, M. Reliable delivery for syslog, May 2001. draft-ietf-syslog-reliable-07, work in progress.
[17] POSTEL, J. STD 7, RFC 793: Transmission Control Protocol, Sept. 1981.
[18] POSTEL, J., AND REYNOLDS, J. RFC 959: File Transfer Protocol, Oct. 1985.
[19] R. STEWART, E. A. RFC 2960: Stream Control Transmission Protocol, Oct. 2000.
[20] ROSE, M. The facts on BEEP, Mar. 2001.
[21] ROSE, M. On the design of application protocols, Mar. 2001.
[22] ROSE, M. RFC 3080: The Blocks Extensible Exchange Protocol core, Mar. 2001.
[23] ROSE, M. RFC 3081: Mapping the BEEP Core onto TCP, Mar. 2001.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:41 UTC from IEEE Xplore.  Restrictions apply.