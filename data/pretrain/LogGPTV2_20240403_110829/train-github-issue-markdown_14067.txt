The function `np.argsort` returns the indices that would sort an array. For the input `[7, 4, 5]`, the expected output is `array([1, 2, 0])`, which indicates the following:

- The smallest element (4) is at index 1.
- The next smallest element (5) is at index 2.
- The largest element (7) is at index 0.

If you expected the output to be `array([2, 0, 1])`, it seems there might be a misunderstanding. Let's break it down:

- The smallest element (4) is at index 1.
- The next smallest element (5) is at index 2.
- The largest element (7) is at index 0.

So, the correct and expected behavior of `np.argsort([7, 4, 5])` is indeed `array([1, 2, 0])`.

If you need the indices in descending order, you can use `np.argsort` with the `kind='mergesort'` parameter and then reverse the result:

```python
import numpy as np

arr = [7, 4, 5]
sorted_indices = np.argsort(arr, kind='mergesort')[::-1]
print(sorted_indices)
```

This will give you the indices in descending order: `array([0, 2, 1])`.