programming interfaces, and mobile services. For example,
Google’s AdMob [1] advertising network is only supported
on Android and iOS, so devices that contact the AdMob
1We deﬁne the set of epochs as single days falling within the fol-
lowing ranges EP OCHS = {4/15/12 − 4/21/12, 5/13/12 −
5/19/12, 6/17/12 − 6/23/12}
Indicator Type
Domain name
Subdomain
m.example.com
mobile.example.com
Subdomain
android.example.com Subdomain
iphone.example.com
Subdomain
Subdomain
ipad.example.com
touch.example.com
Subdomain
Table 1: Examples of popular mobile indicators.
network are almost certainly mobile. Certain mobile APIs
use unique domains that are easily identiﬁable. Apple’s
Push Notiﬁcations, for instance, use a set of mobile do-
mains (e.g., *.courier.push.apple.com) reserved
speciﬁcally for the push notiﬁcations service. Additionally,
services like HeyTell [2] provide push-to-talk functionality
for mobile devices via a mobile application. Devices com-
municating with these types of services should be almost
exclusively mobile.
We ﬁrst exclude all devices Rk that query any of six do-
main names d in an epoch j related to standard operations of
Windows operating systems 2. Devices are labeled as mo-
bile only if they contact a domain d with a mobile indicator
or domains strongly associated with mobile applications or
services. We are able to identify 132, 516 unique domain
names that ﬁt this former category.
Through the combination of ﬁltering based on device IDs
and mobile domain inference, we are able to identify de-
vices as either mobile or non-mobile with high conﬁdence.
In the small number of cases where overlap exists, we tag
a device as unknown and do not consider its behavior as
reﬂective of mobile devices. By conservatively choosing
devices in this manner, we strongly reduce the likelihood of
selecting traditional computing devices that are connected
via mobile broadband cards or tethering. However, if a tra-
ditional computing device is visiting a mobile resource, we
would falsely label that device as mobile. We note that
this scenario is exceedingly rare as browsers generally di-
rect users to the appropriate version of a website.
3.2 Filtering Benign Domains
At this point in our workﬂow, we can label a device and
associate it with RRs. We can then begin the second task in
Figure 2: classifying each of the resource records requested
by mobile devices. The ﬁrst step in this process is identi-
fying and removing known benign trafﬁc from our dataset.
Our methodology again remains conservative, aggressively
reducing false positives potentially at the cost of increas-
ing false negatives. We achieve this by whitelisting all re-
2Two of the most frequently hit domain names in this list are the
time.windows.com and download.windowsupdate.com.
INPUT : M DEVj , mDrdcj and all Qj (di) for every mobile
domain name (di ∈ mDrdcj ) observed in epoch j.
Let HOST Sj = ∅, be the set that will contain the unique hosts (or
IP addresses) that have been mapped with the domain names in
mDrdcj after the completion of the process.
[1] : ∀d ∈ mDrdcj :
[2] : Let IPsj be the set of IPs in the tuple Qj (d), if
Rj ∈ M DEVj
[3] : HOST Sj ∪ IPsj
OUTPUT: HOST Sj
Algorithm 1: The algorithm used to obtain the set
of IP addresses (or hosts) that represent the hosting
infrastructure that facilitated resolution of domain
names from mobile devices in epoch j.
quests made to the top 750,000 effective second level do-
mains (e2LDs) according to Alexa [6]. However, we must
note that we do not whitelist domains associated with dy-
namic DNS (DDNS) providers given their common use by
network malware. Intuitively, such broad whitelisting re-
moves the most popular sites (and e2LDs) as they are more
likely to be trustworthy and less likely to be intentionally
malicious. This approach is commonly used in DNS-based
reputation and classiﬁcation systems [7, 8].
We want to remain as conservative as possible and re-
duce any potential false positives from our datatset. To that
end, we further ﬁlter benign trafﬁc from our dataset by re-
moving a number of the most popular remaining e2LDs.
We compile a list of approximately 800 e2LDs based on the
lookup volume of the queried domains. We manually in-
spect all of them and we classify them as benign. We should
note that the lookup volume distribution for the e2LDS fol-
lows a power law.
The end result of the whitelist ﬁltering process is a re-
duced set of domain names mDrdcj = {dk}k=1...n, where
mDrdcj is a set that contains all n not whitelisted domain
names (dk) resolved by mobile devices in epoch j. In this
set we will have domain names in the “Malicious” and “Un-
known” categories of Figure 2.
3.3 Feature Extraction
The remaining entries in our dataset now belong to mo-
bile devices communicating with Internet-based hosts with
either malicious or unknown reputations. We now describe
the features that we extract from these remaining domains,
which will allow us to analyze the hosting infrastructure
supporting these domains. We use Algorithm 1 to ﬁnd
all unique IP addresses (hosts) for all domains in the set
mDrdcj for epoch j, resulting in the set HOST Sj =
{IPk}k=1...n. For ease of understanding, the entire feature
extraction process is summarized in Figure 3.
We compare the trafﬁc observed in the cellular carrier
(only from the mobile devices) against a pDNS data collec-
tion from a non-cellular ISP. Let fpdns(d) = {ipk}k=1...n
be a mapping function that takes a domain name d as in-
put and returns a set of routable IP addresses that have been
historically linked with d.
The f j
cell() function returns passive DNS data from the
DNS trafﬁc in the cellular carrier over an epoch j. Let
f j
cell(ip) = {dk}k=1...n be a function that receives an IP
address ip as input and returns a set of related historic do-
main names (dk) observed in the cellular network during
epoch j from mobile devices in set M DEVj .
The function fmal(ip) = α returns the number α of
unique malware samples that IP address ip has been asso-
ciated with over the past 19 months. The association could
be direct (i.e., the malware contacts the IP address/host) or
indirect (i.e., the malware looks up a domain name that re-
solves to that IP address/host) as shown in Figure 3. We
similarly deﬁne furl(ip) = β and fpbl(ip) = γ, as the
functions that return the number of malicious URLs (β) and
malicious entries (γ) in public blacklists.
For every host (ip) in the set HOST Sj we extract the
two groups of features: passive DNS and evidence features.
At the end of the feature extraction process, we obtain sta-
tistical historic passive DNS and malicious evidence-based
observations (used in Section 5.1) for the set of hosts in
HOST Sj .
Passive DNS Features (PF) We collect two features from
this group. They are simply the number of elements in the
sets fpdns(ip) (i.e., related historic non-cellular domains)
and f j
cell(ip) (i.e., related historic cellular domains) for an
address ip.
Evidence Features (EF) We compute a total of three fea-
tures from this group. These features describe direct repu-
tations of the IP addresses in the set HOST Sj (during the
epoch j). We compute three features for each IP address:
(i) fmal(ip), the count of unique malware associated with
ip, (ii) furl(ip), the count of URLs associated with ip, and
(iii) fpbl(ip), the count of public blacklisting incidents as-
sociated with ip.
Both PF and EF feature families represent the basic
building blocks of DNS reputation systems [7, 10]. We se-
lect them to understand (i) the extent that malicious hosts
currently serve mobile-related DNS resolutions and (ii) the
extent that the infrastructure used to resolve mobile-related
domain names is already present in passive DNS data col-
lections from non-cellular networks. In particular, the PF
feature family, which is based on passive DNS data, will
show to what extent the hosts from mobile RRs (directly or
indirectly) can be associated with DNS resolutions from a
.
.
.
Device Rj
.
.
.
Algorithm
1
HOSTSj
(IP addrs)
qname1
.
.
.
qnamen
Host1
.
.
.
Hostm
Evidence 
Features
fmal(ip)
furl(ip)
fpbl(ip)
Products of 
Analysis
Communication 
with known 
malicious hosts
Overlap with 
Non-Cellular ISP
fpdns(ip)
j
f 
cell(ip)
Passive DNS 
Features
Figure 3: Determining the communication patterns for each mobile device (Rj ). Each qname requested by Rj is
converted into an IP address via Algorithm 1. This list of IP addresses (HOST Sj ) is then processed for Passive DNS
Features (PF) to determine overlap with trafﬁc from our non-cellular ISP and for Evidence Features (EF) to determine
the presence of communications with known malicious domains.
non-cellular ISP. The EF features, which are based on his-
toric reputation information, will show us to what extent the
already tainted Internet hosting infrastructure is currently
used directly by mobile devices. Additionally, we perform
one more level of ﬁltering in which we evaluate the ma-
licious hosts identiﬁed by the EF feature family using the
Notos [7] reputation system; we remove any hosts identiﬁed
using the EF features if Notos does not produce a reputation
score below our chosen threshold.
Non-cellular The non-cellular pDNS data was collected
from seven different sensors located across the US over
more than 15 months. Due to the extended collection pe-
riod, this dataset presents a substantial volume of trafﬁc that
can be used to provide historical context for domains and
hosts of interest. In particular, we can use this data to make
inferences about the hosting infrastructure of a particular
domain or tie speciﬁc hosts to their related domains.
4 Dataset Summary
This section describes the datasets used in our analysis.
These include pDNS data collected from a major US cel-
lular carrier, pDNS data collected from a major US non-
cellular ISP, and a database of malicious evidence built from
several classes of malicious information.
4.1 DNS
Cellular We observed DNS trafﬁc from a cellular data
network on twenty-one days over a three month period.
This data was passively collected from a single sensor that
aggregates information from several cities.
4.1.1 Observations from the Cellular Carrier Trafﬁc
Table 2 provides insight into the number of unique RRs,
domains, and hosts seen over the twenty-one (single day)
epochs. For each record type, there are two columns that
specify the total number of unique records seen for the given
week and the number of new records not seen in any prior
week. Intuitively, the number of new records seen should
decrease over time, and Table 2 shows that the inﬂux of
RRs, domains, and hosts does follow this pattern.
4.2 Devices
Devices seen in the cellular dataset accessed the net-
work via a cellular data connection. Consequently, these de-
vices should fall into three general categories: smartphones,
tablets, or mobile broadband devices. The ﬁrst two cate-
gories include devices such as Android and iOS phones and
tablets. A mobile broadband device includes any device ac-
cessing the network via a mobile broadband card or tether-
ing to another device’s cellular data connection. This could
include traditional computing devices such as desktop or
laptop computers.
As discussed in Section 3.1, we are conservative in the
classiﬁcation of mobile devices; a comparison of the total
devices and what was classiﬁed as a mobile device can be
seen in Table 2. Most importantly, this table shows that our
estimate of mobile devices is conservative; we classify only
79% of devices seen as mobile.
4.3 Evidence
We analyze cellular DNS trafﬁc with an evidence
database composed of three general classes of non-mobile
malicious evidence: public blacklist data (PBL), phishing
and drive-by download evidence (URL), and hosts accessed
by known malicious applications (MAL). In addition to the
Duration
(hours)
168
168
168
504
RRs
Domains
Hosts
Devices
Total
8,553,155
9,240,372
8,660,555
New
8,553,155
4,498,765
3,246,194
Total
8,040,141
8,711,704
8,109,536
New
8,040,141
4,042,009
2,745,999
Total
2,070,189
2,168,266
2,050,168
New
2,070,189
606,467
377,048
Total
157,286,931
169,561,760
153,525,716
Mobile
121,497,066
136,292,358
122,747,704
26,454,082
16,298,114
24,861,381
14,828,149
6,288,623
3,053,704
480,374,407
380,537,128
4/15-4/21
5/13-5/19
6/17-6/23
Total
Table 2: Listing of unique RRs, domains, hosts, and devices seen in cellular dataset.
(a) Cellular Traffic
(b) Wired Traffic
F
D
C
 1
 0.95
 0.9
 0.85
 0.8
 0.75
 0.7
 0.65
 0.6
 1
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0