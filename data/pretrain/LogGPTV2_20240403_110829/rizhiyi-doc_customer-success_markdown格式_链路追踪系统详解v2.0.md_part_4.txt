主机名：10-0-0-7
3.  主机名指向检查
请务必保证机器的hostname指向自身IP，可以通过命令：ping \$(hostname)
确认。
ping \$(hostname) 返回的IP需要确保是该机器内网IP。
检查示例：
\# hostname
\# ping \$(hostname)
\# ping localhost
4.  软件工具检查
安装过程中会使用到一些系统命令，主要有ssh，缺少的话请手工安装。其余命令安装脚本会自动补全，无需操作。
#### 单机安装
1.  解压日志易产品包
\# mkdir /opt/rizhiyi
\# tar zxf rizhiyi-dataengine-3.2.0.5-release.tar.gz -C /opt/rizhiyi
\# cd /opt/rizhiyi/deployer
2.  单机安装操作
安装说明：
1)  必须通过 \--license 参数指定license文件的绝对路径。
2)  必须通过 \--localaddr 参数指定运行安装脚本的机器IP
3)  必须通过 \--engine 参数指定运行集群使用的搜索引擎
4)  需要使用root用户运行安装命令
5)  安装失败 请参考“3.1.3失败清理”进行清理
6)  安装成功 请参考“3.1.4 开始使用”进行访问。
7)  安装命令示例(可参考 /opt/rizhiyi/deployer/install_cmd.Readme )：
\# python install.py \--localaddr 192.168.1.145 \--action install
\--license License安装包绝对路径 \--deploymode standalone \--engine
beaver
#### 自动模式集群部署
1.  解压日志易产品包
选择机器中任意一台作为安装部署过程中的Server。
\# mkdir /opt/rizhiyi
\# tar zxf rizhiyi-dataengine-3.2.0.5-release.tar.gz -C /opt/rizhiyi
\# cd /opt/rizhiyi/deployer
2.  创建 nodes.list 文件，初始化前需要创建 nodes.list
    文件，该文件是集群服务器登录信息，包含IP 、SSH端口、root、root密码
格式要求：每台机器1行，要求有4列，每列含义如下：
\# vi /opt/rizhiyi/deployer/nodes.list
按照格式写入机器信息
安装包内提供了一个示例（/opt/rizhiyi/deployer/node.txt.demo）：
\# cat /opt/rizhiyi/deployer/node.txt.demo
192.168.1.145 22 root 123456
192.168.1.146 22 root 123456
192.168.1.147 22 root 123456
PS：该文件有严格的格式要求，请务必保证，其中对用户名的要求为root用户名，另外需要保证这里列举的所有机器都可以从运行安装脚本的机器通过ssh进行访问，否则安装将会出错无法进行。
3.  准备安装脚本
安装说明：
1)  必须通过 \--license 参数指定license文件的绝对路径。
2)  必须通过 \--localaddr 参数指定运行安装脚本的机器IP
3)  必须通过 \--engine 参数指定运行集群使用的搜索引擎
4)  必须使用 \--nodesfile 参数指定 node.list 文件
5)  需要使用root用户运行安装命令
6)  安装失败 请参考“3.1.3 失败清理”进行清理
7)  安装成功 请参考“3.1.4 开始使用”进行访问。
8)  安装命令示例(可参考 /opt/rizhiyi/deployer/install_cmd.Readme )：
\# python install.py \--localaddr 本机IP \--action install \--license
License安装包绝对路径 \--deploymode cluster \--nodesfile
nodes.list文件绝对路径 \--engine beaver
#### 指定模式集群部署
1.  解压日志易产品包
> 选择机器中任意一台作为安装部署过程中的Server。
\# mkdir /opt/rizhiyi
\# tar zxf rizhiyi-enterprise-2.0.0.0.tar.gz -C /opt/rizhiyi
\# cd /opt/rizhiyi/deployer
2.  创建 nodes.list 文件，初始化前需要创建 nodes.list
    文件，该文件是集群服务器登录信息。
\# vi /opt/rizhiyi/deployer/nodes.list
安装包内提供了一个示例（/opt/rizhiyi/deployer/node.txt.demo）：
\# cat /opt/rizhiyi/deployer/node.txt.demo
192.168.1.145 22 root 123456
192.168.1.146 22 root 123456
192.168.1.147 22 root 123456
PS：该文件有严格的格式要求，请务必保证，其中对用户名的要求为root用户名，另外需要保证这里列举的所有机器都可以从运行安装脚本的机器通过ssh进行访问，否则安装将会出错无法进行。
3.  创建 deploy.list 文件，该文件是模块分布信息。
编辑 deploy.list 文件，写入模块分布信息。
\# vi /opt/rizhiyi/deployer/deploy.list
这里给出一个示例：
\# cat /opt/rizhiyi/deployer/instance.txt.demo
zookeeper:10.0.0.4,10.0.0.5,10.0.0.6
kafka:10.0.0.4,10.0.0.5,10.0.0.6
yottasearch:10.0.0.4,10.0.0.5,10.0.0.6
yottaweb:10.0.0.4,10.0.0.5
yottaapi:10.0.0.5
haproxy:10.0.0.5,10.0.0.6
nginx:10.0.0.5,10.0.0.6
collector:10.0.0.4,10.0.0.5
heka:10.0.0.4,10.0.0.5,10.0.0.6
auth:10.0.0.4,10.0.0.5
cruxee:10.0.0.4,10.0.0.5
logparserserver:10.0.0.4
logriver:10.0.0.4,10.0.0.5,10.0.0.6
splserver:10.0.0.5,10.0.0.6
archiver:10.0.0.5
mongodb:10.0.0.5
influxdb:10.0.0.5
beaver_master:10.0.0.5
beaver_datanode:10.0.0.5
beaver_broker:10.0.0.5
4.  准备安装脚本
安装说明：
1)  必须通过 \--license 参数指定license文件的绝对路径。
2)  必须通过 \--localaddr 参数指定运行安装脚本的机器IP
3)  必须通过 \--engine 参数指定运行集群使用的搜索引擎
4)  必须使用 \--nodesfile 参数指定 node.list 文件
5)  需要使用root用户运行安装命令
6)  安装失败 请参考“3.1.3 失败清理”进行清理
7)  安装成功 请参考“3.1.4 开始使用”进行访问。
8)  安装命令示例(可参考 /opt/rizhiyi/deployer/install_cmd.Readme )
\# python install.py \--localaddr 本机IP \--action install \--license
License安装包绝对路径 \--deploymode assign \--nodesfile
nodes.list文件绝对路径 \--deployfile deploy.list文件绝对路径 \--engine
beaver
#### 失败清理
安装失败的话，需要做清理工作后才能重新部署。
在运行安装脚本的机器执行如下命令即可完成清理工作
使用node.txt指定需要清理的机器
\# python clear.py \--nodesfile /opt/rizhiyi/deployer/nodes.list
只清理当前的机器
\# python clear.py
#### 开始使用
需要使用 IE9+；chrome；firefox 等浏览器访问。
日志易运维后台
访问 rizhiyi manager
（直接访问IP:8180即可。IP为执行install.py脚本的服务器IP。）
用户名： *admin*
密码： *admin*
日志易产品前台
直接访问 Nginx模块所在机器的IP即可。
用户名： *admin*
密码： *PI:EMAIL*
### 全链路模块部署
1.  产品部署完成后，需要手工创建fullink的表
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
CREATE TABLE \`Fulllink\` (
\`id\` int(11) unsigned NOT NULL AUTO_INCREMENT,
\`name\` varchar(255) COLLATE utf8mb4_bin NOT NULL DEFAULT \'\',
\`domain_id\` bigint(20) NOT NULL,
\`creator_id\` bigint(20) NOT NULL,
\`content\` longtext COLLATE utf8mb4_bin,
\`fulllink_id\` varchar(255) COLLATE utf8mb4_bin NOT NULL DEFAULT \'\',
\`category\` smallint(8) NOT NULL DEFAULT \'0\',
PRIMARY KEY (\`id\`),
KEY \`name\` (\`name\`(191)),
KEY \`domain_id\` (\`domain_id\`),
KEY \`create_id\` (\`creator_id\`),
KEY \`category\` (\`category\`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4
COLLATE=utf8mb4_bin;
INSERT INTO \`PrivilegeMeta\` (\`id\`, \`action\`, \`resource_type\`,
\`create_time\`, \`update_time\`)
VALUES
(285, \'CreateFulllink\', \'\', \'2019-07-24 15:03:36\', NULL),
(286, \'Delete\', \'Fulllink\', \'2019-07-24 15:03:36\', NULL),
(287, \'Read\', \'Fulllink\', \'2019-07-24 15:03:36\', NULL),
(288, \'Update\', \'Fulllink\', \'2019-07-24 15:03:36\', NULL),
(289, \'Fulllink\', \'\', \'2019-06-25 19:49:35\', NULL);
2.  登陆日志易Manager升级yottaweb定制包。