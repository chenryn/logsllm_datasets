FreeBuf 咨询荣誉出品 
CHAPTER FOUR
23
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
图 2019 软件安全构建成熟度示例
指标驱动运营：制定了项目安全建设运营指标，如项目安全评估的覆盖率、端到端安全交付效能、安全工具链DevOps集成率、安全测试能力覆盖率、
安全漏洞修复率、安全漏洞漏出率、标准化安全组件、软件安全能力成熟度等。
软件安全成熟度：每年安全团队都会进行软件安全成熟度自评估*。评估时，基于自定义的标准，生成安全成熟度模型。此外，还会不断进行差距分
析，确定下一年度可行的改进方向，并制定成熟度行动计划，不断提升软件安全成熟度。
（注释：软件安全成熟度评估模型基于BSIMM(Build Security In Maturity Model，软件安全构建成熟度模型)，BSIMM分为4个领域12类实践，总共包括100多项活动。）
FreeBuf 咨询荣誉出品 
5
CHAPTER
FIVE
第五章
携程 DevSecOps
实践 
FreeBuf 咨询荣誉出品 
5.1 安全背景介绍
携程业务覆盖机票、酒店、度假、汽车票、火车票、支付等各个方面，为全球用户提供在线旅游服务。在如此庞大复杂的业务架构下，携程每周都会有数
以万计的应用发布次数，如何保证每一次发布代码的安全性成为携程DevSecOps实践中最大的挑战。
复杂安全需求与有限人力的矛盾
为了保证将安全嵌入DevSecOps的每一个流程，保证代码的安全，首先面临的难点是人力问题。在软件行业，版本发布涉及到开发、测试等流程、动辄
需要数月时间，每个版本的发布都可以按照SDL流程完整的做一次安全评估，包括需求评审、威胁建模、安全开发、安全扫描。
而在CI／CD模型下，每天都有几千次的发布，在持续集成/持续部署的道路上如何避免变成持续引入漏洞，仅靠携程现有的安全人力是无法解决的。
如何从亡羊补牢到未雨绸缪
SQL注入、撞库、验证码绕过等问题源源不断，安全人员往往沦为救火队长，在众多问题间疲于奔命。因此携程认为本质还需从企业安全文化着手，提
高业务团队的整体安全意识，避免安全变成被动的修补角色。
安全推动困难
安全与其他业务架构往往处于割裂状态，例如仅修复一个漏洞就需开发、测试甚至产品沟通方案及排期，如果是大规模推动底层框架、中间件升级，更
是难上加难。携程认为安全需要与公司框架、CI／CD流程更紧密的结合，提供温和嵌入流程的DevSecOps方案。
5.2 企业安全文化建设
2020年初携程内部组建了安全BP制，即每个事业部指定一名安全负责人，负责BU内部的安全事项，协助安全部推动研发团队的安全建设，安全BP通
常由研发团队的开发负责人或测试负责人担任。
指定安全BP的好处在于：安全BP作为BU研发团队成员，更了解BU内部开发测试流程，同时安全作为BP职责的一部分，相比安全部门能够更方便推动
BU内部的安全项目落地。同时，安全BP也是DevSecOps里安全左移流程的重要角色。
目前在携程内部通过BP推动落地的项目有IAST、Fastjson升级等。以IAST项目落地对比示例：
无安全BP时：推动IAST的流程为安全部->应用负责人。然而应用负责人大多不理解安全项目的需求，推动过程困难重重。
有安全BP时：流程变为安全部->安全BP->应用负责人。安全BP以提升自身业务安全的角度去推进，解决了安全与研发之间的矛盾，从而更加高效的推
动安全项目的落地。
5.3 企业安全流程建设
威胁建模作为DevSecOps计划阶段重要的一环，携程重点对此进行了规范建设，在此重点介绍。
携程通过对接公司内部的团队协作平台完成威胁建模。具体流程为，平台用户（各业务线产品经理）可按照业务场景选择威胁建模的场景，系统根据内
置模型中每种（业务）场景对应的威胁从而提供缓解措施。
CHAPTER FIVE
25
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
该平台重点针对标签、业务场景、威胁类型进行关联，由此串联生成威胁模型。以上图“暴破”标签为例：
“暴破”对应的业务场景有“登录”、
“注册”、
“忘
记密码”、
“验证码”、
“支付”，对应的威胁类型包括“验证码暴破”和“万能验证码”，因此生成的威胁模型如下：
图 携程团队协作平台操作界面
图 携程威胁建模示例
图 携程漏洞管理界面
5.4 企业安全工具链实践
SCA是携程落地比较早的项目，主要在应用CI的过程中进行扫描分析，对于扫描发现中高危级别漏洞的应用进行发布拦截。
在SCA项目初期，动辄出现上万的漏洞告警，由此也诸多问题：漏洞是否需要修复、如何评定漏洞修复的优先级等。为了解决该问题，携程首先对漏
洞进行了维度划分及定义，包括：漏洞等级（高、中、低）、对应CVE是否有POC、应用内外网属性
5.4.1  开源组件安全扫描(SCA)
26
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
图 携程应用的 Cobra 应用框架
针对不同属性漏洞，携程规定对于外网应用存在POC的漏洞进需进行优先修复，内网应用和无POC的漏洞紧急性则调低。此外，携程还按照漏洞归
属区分框架漏洞和应用漏洞，对于框架引入的第三方组件漏洞，会协调公司内部框架修复。通过这样的方式减少了大量的漏洞告警，使得SCA嵌入
CI/CD流程对发布流程的影响降到最低。
携程的SAST有两套不同的代码扫描引擎：基于文本扫描的正则规则扫描与基于数据流/控制流的代码扫描。
正则扫描常用于在CI/CD流程中的快速检测，每个项目的扫描时间平均在10秒左右，可完全串入CI/CD流程，几乎不会额外增加开发流程的时间。
正则扫描代码的优点在于快速，这也意味着可用于应急响应中的全量代码扫描，比如说对于一些代码配置扫描或特殊函数调用检测。不过缺点也很
明显，对于部分理解代码上下文的漏洞误报率较高，如SQL注入。针对此类型漏洞，正则扫描器结果需由安全运营确认，从而减少对开发人员误报困
扰。
基于数据流、控制流的代码扫描与CI/CD流程的关系则为旁路。代码在CI/CD过程中同步进行扫描，扫描时间根据项目代码量从几分钟到几十分钟
不等。该扫描方式的优点在于对SQL注入、命令执行等漏洞检测准确率可达95%以上。
5.4.2  源代码安全扫描（SAST）
携程采用IAST Agent被动检测+分布式扫描器主动扫描的方式实现IAST，分为以下几部分：
-IAST Agent：集成到测试环境应用Docker容器的Agent，用来检测应用中的漏洞，同时会把所有http流量复制回传到用于收集流量的kafka队列。
-IAST服务端：管理IAST Agent和漏洞的控制台。
-流量kafka队列：用于收集待扫描的流量，除了从IAST Agent回传的流量，还有来自主动爬虫、Chrome插件以及提测平台调用API发送过来的流量。
-分布式扫描器：消费kafka的流量并按照URL去重，调用扫描器进行漏洞扫描。
5.4.3  交互式应用安全测试（IAST）
CHAPTER FIVE
27
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
FreeBuf 咨询荣誉出品 
针对不同属性漏洞，携程规定对于外网应用存在POC的漏洞进需进行优先修复，内网应用和无POC的漏洞紧急性则调低。此外，携程还按照漏洞归
属区分框架漏洞和应用漏洞，对于框架引入的第三方组件漏洞，会协调公司内部框架修复。通过这样的方式减少了大量的漏洞告警，使得SCA嵌入
CI/CD流程对发布流程的影响降到最低。
该架构具备较高的扫描覆盖率、IAST+DAST双重检测的漏洞精准检出率及低误报特性，帮助携程发现了内部存在已久未被发现的通用型漏洞，为企
业安全检测能力的补齐提供了很好的帮助。
图 携程 IAST 架构
标准镜像中将安装IAST agent
主动扫描
人工扫描
提测平台
黑盒扫描器
检测结果
流量转发
测试人员测试
请求
请求
请求
应用服务器
IAST agent
被动扫描
CI/CD⸺应用发布
28
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
针对越权检测，携程使用了替换Cookie重放流量的方法，具体步骤如下：
>首先需抓取访问携程服务的http请求报文；
>其次使用事先准备好的已登录账号Cookie替换请求报文进行重放；
>最后根据返回报文来判断是否存在水平越权或者垂直越权，按照相似度高的报文、敏感信息关键字等信息判断（敏感信息包括订单金额、手机号、
身份证号等）。
详细的流程如下图：
5.4.4 越权检测
FreeBuf 咨询荣誉出品 
CHAPTER FIVE
29
2 0 2 0  D e v S e c O p s 企 业 实 践 白 皮 书
除此之外，携程在落地及高效运营越权检测系统中，还总结了企业需要注意的3项关键点，在此分享：
（1）请求流量的筛选
面对携程每天海量的访问请求，实践越权检测的第一步应筛选出真正需要用来重放检测的流量。筛选条件有两个：
第一个是请求URL中是否包含关键字，这一点主要用于区分无需权限限制的公开信息和需要限制权限的与用户强相关的订单信息、个人信息等，原