# OCR Output
## Page 1
本文档使用书栈(BookStack.CN)构建
Exporter
Prometheus 配置
数据可视化
PromQL
基础概念
Prometheus 简介
如何贡献
修订记录
前
致谢
Sample Exporter
文本格式
配置样例
远程可写存储
数据拉取配置
规则配置
全局配置
Grafana
Web Console
与 SQL 对比 
PromQL 基本使用
作业与实例
Metric types
数据模型
Docker 安装
二进制包安装
为什么选择 Prometheus 
Prometheus 是什么
服
远
告
服务发现
程可读存储
警配置
录
---
## Page 2
本文档使用书栈(BookStack.CN)构建
Prometheus 性能调优
主机监控完整示例
Alertmanager
告
数据存储
Pushgateway
警规则
通过日志分析 Prometheus 运行状态
通过 Metrics 查看 Prometheus 运行状态 
 Alertmanager 是什么
如何配置
Remote Store
Local Store
如何使用 Pushgateway?
Promu 介绍和使用
通过 Alertmanager 告警
NodeExporter
其他告警接收方案
通过 Webhook 接收告警
触发逻车
 Pushgateway 是什么
启动参数详解
Client SDK
Grafana 集成
配置告警规则
通过 Slack 接收告警
通过企业微信接收告警
通过 Email 接收告警
配置详情
其他 Exporter 介绍
Node Exporter Grafana 模版
Node Exporter 常用查询
Node Exporter 安装使用
辑
---
## Page 3
本文档使用书栈(BookStack.CN)构建
常见问题收录
v2.x迁移注意
高可用方案探讨 
Prometheus 与 DevOps
Prometheus 常见服务监控
监控 Ruby On Rails 应用
Prometheus 如何通过认证后拉取数据
为什么有数据丢失
如何删除 Pushgateway 的数据
为什么重启 Prometheus 过后，数据无法查询
Rule 新配置
新存储架构
新功能
AlertManager 的高可靠
Prometheus Server 的高可靠
使用 Webhooks 开发一个 alert receiver
从0开发一个 exporter
监控 JVM
为什么内存使用这么高
Redis
MySQL
MongoDB
Memcached
Nginx
Swarm
Kubernetes
Docker
---
## Page 4
本文档使用书栈(BookStack.CN)构建
址: http://www.bookstack.cn/books/prometheus_practic
者
者
最新的文档，
一份力量
文档，
确
档内容有不恰当的地方，请向我们反馈，让我们共同携手，将知识准
文档内容知识点是否错漏。如果您在阅读文档获取知识的时候，发现文
及对文档内容的生成和导出工具。
（BookStack.CN）进行构建，生成于 2018-03-16。
致谢
高效且有效地传递给每一个人。
也感谢每一位阅读到此处的读者，因为我们都将成为知识的传承
书栈开源：https://github.com/TruthHun
书栈官网：http://www.bookstack.cn
文档地
如果当前文档生成时间太久，请到书栈（BookStack.CN）获取
同时，如果您在日常生活、工作和学习中遇到有价值有营养的知识
文档内容由网友们编写和整理，书栈（BookStack.CN）难以确认
书栈（BookStack.CN）仅提供文档编写、整理、归类等功能，以
分享，让知识传承更久远！感谢知识的创造者，感谢知识的分享
，欢迎分享到书栈（BookStack.CN），
当前文档
，以跟上知识更新换代的步伐。
《Prometheus 实战》
致谢
由进击的皇虫使用书栈
，为知识的传承献上您的
---
## Page 5
本文档使用书栈(Books
致谢
S
ck.CN)构建
---
## Page 6
本文档使用 书栈(BookStack.CN)构建
不妨碍我们使用和喜爱它。根据我们长期的使用经验来看，它足已满足
Prometheus 作为监控后起之秀，虽然还有做的不够好的地方，但是
当初选择 Prometheus 并不是偶然，因为：
特别感谢 Promethues 这样优秀的开源软件。
基础和业务监控，
在过去一年左右时间里，我们使用 Prometheus 完成了对几个机房的
Prometheus 实战
v0.1.0
前言
前言
·丰富的数据收集客户端，官方提供了各种常用exporter。
·Go语言开发，性能不错，
·Prometheus 是按照 Google SRE 运维之道的理念构建的，具
·Prometheus 实战
，丰富强大的查询能力。
在进步，
v1.8.2以及最新最新的 v2.1，你会发现 Prometheus一直
速度，
Prometheus
有实用性和前瞻性。
。技术交流
鼓励项目
关于作者
从去年V1.θ1开始接触使用以来，到目前发布的
在优化。
，大大提高了我们服务质量以及oncall 水平，在此
社区非常活跃，
安装部署简单，多平台部署兼容性好。
，基本稳定在1个月1个版本的迭代
---
## Page 7
本文档使用书栈(BookStack.CN)构建
关于作者
Prometheus 资源，交流 Prometheus 技术。
欢迎加入 Prometheus
技术交流
你准备好了吗？接下来就让我们一起开始这段神奇旅行吧！
在实际部署监控中给大家有所帮助。
理解原理和实现细节的高级用户参考，同时也希望书中给出的实践案例
本开源书籍既适用于具备基础Linux 知识的运维初学者，也可供渴望
大家有所帮助。
Prometheus 基本，进阶，实战，以及常见问题列表等方面，
本书主要根据个人过去一年多的使用经验总结而成，内容主要包括
它的最大能力而已。
大多数场景需求，
前言
·QQ群I（可加）：465362780申请加入请备注:
· smallfish_
prometheus 实战
。个人公众号
。微博
github
只不过对于新东西，往往需要花费更多力气才能发挥
技术交流QQ群或微信组，分享
，希望对
---
## Page 8
本文档使用书栈(BookStack.CN)构建
欢迎鼓励项目一杯coffee~
鼓励项目
---
## Page 9
本文档使用书栈(BookStack.CN)构建
主要修订记录
修订记录
修订记录
●0.1.0:2017-05-12
·主要修订记录
。添加基本内容。
---
## Page 10
本文档使用书栈(BookStack.CN)构建
如何贡献项目{#如何贡献项目}
如何贡献
如何贡献
·在 GitHub上fork 到自己的仓库，如
·如何贡献项目{#如何贡献项目}
·定期使用项目仓库内容更新自己仓库内容。
在 GitHub 网站上提交 pull request。
修改代码后提交，并推送到自己的仓库。
xxx/prometheus_practice，然后clone到本地，并设置用户信
W
5.
3.
 $ git push 
 $ git commit -m "Fix issue #1: change helo to hello"
 $ git config user.email "your email"
$ git fetch upstream
 $ git clone PI:EMAIL:xxx/prometheus_practice.git 
https://github.com/songjiayang/prometheus_practice
 $ git remote add upstream 
$ #do some change on the content
 $ git config user.name "yourname"
 $ cd prometheus_practice
---
## Page 11
本文档使用 书栈(BookStack.CN) 构建
如何贡献
$ git push -f origin master
$ git rebase upstream/master
$ git checkout master
---
## Page 12
Prometheus 简介
本文档使用书栈(BookStack.CN)构建
好吧，让我们带着问题开始这神奇之旅。
别？
用它会带来什么样的好处，为什么选择它，以及与其他监控方案的区
什么是 Prometheus?
本章将带领你进入 Prometheus 的世界。
简介
Prometheus 简介
·简介
---
## Page 13
k8s 后，第二名 CNCF(Cloud Native Computing 
Prometheus 是什么
本文档使用书栈(BookStack.CN)构建
核心组件
主要功能
作为新一代开源解决方案，很多理念与 Google SRE运维之道不谋而
Foundation）成员。
9k+关注，以及很多大公司的使用；2016年Prometheus成为继
年开始编写代码，
Prometheus 是由 Soundcloud 开源监控告警解决方案，从 2012
什么是 Prometheus
Prometheus 是什么
·多维 数据模型（时序由 metric 名字和k/v的labels 构
·监控目标，可以采用服务发现或静态配置的方式。
·什么是Prometheus
·支持多种统计数据模型，图形化友好。
采用 http 协议，使用 pull 模式，拉取数据，
无依赖存储，
灵活的查询语句（PromQL）。
成）。
。注意
。基础架构
。主要功能
核心组件
支持 local 和 remote 不同模型。
，再到2015 年 github 上开源以来，已经吸引了
简单易懂。
---
## Page 14
本文档使用 书栈(BookStack.CN)构建
基础架构
Prometheus 是什么
Short-ived jobs
图胜千言，
·用于告警通知管理的alertmanager。
 Jobs / Exporters
exporter 等等。
node_exporter,
各种汇报数据的exporters
用于业务数据汇报等。
push gateway 
查询和上报数据。
client libraries，用于对接 Prometheus Server，可以
外还提供查询和 Alert Rule 配置管理。
Prometheus Server,
 Pushgateway
，先来张官方的架构图
Prometheus Server
pull metrics
汇报 MongoDB 信息的 MongoDB
用于批量，
 Service Discovery
Retrieval
Node
主要用于抓取数据和存储时序数据，
 Prometheus Server
，例如汇报机器数据的
，短期的监控数据的汇总节点，主要
 Storage
PromQL
PagerDuty
 push alerts 
Email
Alertmanager
 API clients
Grafana
Web UI
notify
另
---
## Page 15
本文档使用 书栈(BookStack.CN)构建
注意
3.
它大致使用逻辑是这样：
Alertmanager， WebuI 等。
L：
Server, Exporters, Pushgateway, 
从这个架构图，也可以看出 Prometheus 的主要模块包含，
Prometheus 是什么
·Prometheus 的数据是基于时序的 float64 的值，如果你的数
·Prometheus 不适合做审计计费，因为它的数据是按一定时间采
据值有更多类型，无法满足。
和聚合数据。
Alertmanager 收到警告的时候，可以根据配置，聚合，去重，
的时候，会将 alert 推送到配置的 Alertmanager。
Prometheus 可以配置rules，然后定时查询数据，
当新拉取的数据大于配置内存缓存区的时候，Prometheus 会将
现的 targets 拉取数据。
 Prometheus 
审计系统。
长期存储，这个和 Prometheus 无法满足，可能需要采用专门的
据没有采集也能容忍，但是审计计费需要记录每个请求，并且数据
集的，关注的更多是系统的运行瞬时状态以及趋势，即使有少量数
可以使用API，
降噪，最后发送警告。
端）。
数据持久化到磁盘（如果使用remotestorage 将持久化到云
 server 
 Prometheus Console 或者 Grafana 查询
定期从静态配置的targets 或者服务发
PromQL;
当条件触发
---
## Page 16
本文档使用 书栈(BookStack.CN) 构建
Prometheus是什么
---
## Page 17
本文档使用书栈(BookStack.CN)构建
Prometheus vs Zabbix
Prometheus.
在这里主要和其他监控方案对比，方便大家更好的了解
后给我们带来的好处。
在前言中，简单介绍了我们公司选择 Prometheus 的理由，以及使用
为什么选择Prometheus
为什么选择 Prometheus
为什么选择
·Zabbix 可以在 WebGui 中配置很多事情，但是
·Zabbix在传统主机监控方面，有更丰富的插件。
·Zabbix 使用的是 C 和 PHP，Prometheus 使用 Golang,
·为什么选择Prometheus
·Zabbix 属于传统主机监控，主要用于物理主机，
需要手动修改文件配置。
整体而言 Prometheus 运行速度更快一点。
SaaS,
监控，
。总结
o Prometheus vs Nagios
o Prometheus vs InfluxDB
o Prometheus vs Graphite
o Prometheus vs Zabbix
Prometheus vs Sensu
 PrometheuS Vs OpenTSDB
，Prometheus 不仅适用主机监控，
 Openstack,
 Prometheus
，Container 监控。
，还适用于 Cloud,
，交换机，网络等
： Prometheus
---
## Page 18
本文档使用书栈(BookStack.CN)构建
Prometheus vs Nagios
PrometheuS vs OpenTSDB
Prometheus vs InfluxDB
Prometheus vs Graphite
为什么选择 Prometheus
·OpenTSDB 是一个分布式时序数据库，它依赖 Hadoop 和
·InfluxDB 是一个开源的时序数据库，
·在水平扩展方案以及数据存储周期上，Graphite 做的更好。
·Nagios 是上世纪 9θ年代的监控系统，
·Nagios 数据不支持自定义Labels，
，如果想搭建监控告警系统，OpenTSDB需要依赖其他系统。
·InfluxDB 在存储水平扩展以及高可用方面做的更好，
·Graphite 功能较少，它专注于两件事，
持去噪，
择。
如果你系统已经运行了 Hadoop 和 HBase，
HBase，能存储更长久数据，
是数据库。
需要依赖其他系统。
想搭建监控告警系统，
件。
和查询能力。
一站式，提供告警和趋势分析的常见功能，
可视化数据，
分组，
其他功能需要安装相关插件，而Prometheus 属于
没有数据存储，如果想查询历史状态，需要安装插
不支持查询，
主要用于存储数据，如果
，存储时序数据，
比较适合小集群或静态
它提供更强的数据存储
它是个不错的选
，告警也不支
毕竟核心
18
---
## Page 19
本文档使用书栈(BookStack.CN)构建
总结
Prometheus vs Sensu
为什么选择 Prometheus
·Prometheus 支持对云的或容器的监控，其他系统主要对主机监
·Prometheus属于一站式监控告警平台，
·Sensu 依赖 RabbitMQ 和 Redis，数据存储上扩展性更好。
·Sensu 广义上讲是Nagios 的升级版本，它解决了很多
OpenTSDB，Sensu 好。
Prometheus在数据存储扩展性以及持久性上没有InfluxDB,
Prometheus 数据查询语句表现力更强大，内置更强大的统计函
控。
不错的选择。
Nagios 的问题，如果你对 Nagios 很熟悉，使用 Sensu 是个
数
Prometheus 要优秀很多。
系统的监控，
，显然 Nagios 太古老了，很多特性都没有，
，依赖少，功能齐全。
---
## Page 20
本文档使用 书栈(BookStack.CN) 构建
装方式。
本章将介绍 Prometheus 两种安装方式，传统二进制和 Docker 安
安装
Prometheus安装
Prometheus安装
·安装
---
## Page 21
本文档使用书栈(BookStack.CN)构建
使用wget 下载 Prometheus 的安装包
创建下载目录，以便安装过后清理掉
下载 Prometheus Server
环境准备
本，下面我们将以 ubuntu server 作为演示。
我们可以到 Prometheus 二进制下载页面，
二进制包安装
二进制包安装
二进制包安装
·prometheus 1.6.2 
·linux amd64 (ubuntu server)
·二进制包安装
 cd ~/Download
1.6.2.linux-amd64.tar.gz
https://github.com/prometheus/prometheus/releases/download/v1.6.2/prc
wget
mkdir ~/Download
。总结
o启动 Prometheus Server
。环境准备
 下载 Prometheus Server
选择自己需要的系统版
21