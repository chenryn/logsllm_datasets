title:Split-ballot voting: everlasting privacy with distributed trust
author:Tal Moran and
Moni Naor
Everlasting Privacy With Distributed Trust ∗
Split-Ballot Voting:
†
Moni Naor
Mathematics
Department of Computer Science and Applied
Department of Computer Science and Applied
Weizmann Institute of Science, Rehovot, Israel
Weizmann Institute of Science, Rehovot, Israel
Tal Moran
Mathematics
PI:EMAIL
PI:EMAIL
ABSTRACT
In this paper we propose a new voting protocol with de-
sirable security properties. The voting stage of the pro-
tocol can be performed by humans without computers; it
provides every voter with the means to verify that all the
votes were counted correctly (universal veriﬁability) while
preserving ballot secrecy. The protocol has “everlasting pri-
vacy”: even a computationally unbounded adversary gains
no information about speciﬁc votes from observing the pro-
tocol’s output. Unlike previous protocols with these proper-
ties, this protocol distributes trust between two authorities:
a single corrupt authority will not cause voter privacy to be
breached. Finally, the protocol is receipt-free: a voter cannot
prove how she voted even she wants to do so. We formally
prove the security of the protocol in the Universal Compos-
ability framework, based on number-theoretic assumptions.
Categories and Subject Descriptors
C.2.4 [Computer-Communication Networks]: Distributed
Systems—Distributed Applications; K.4.1 [Computers and
Society]: Public Policy Issues—Privacy; E.3 [Data]: Data
Encryption—Public Key Cryptosystems
General Terms
Security, Theory, Human Factors
1.
INTRODUCTION
Recent years have seen increased interest in voting sys-
tems, with a focus on improving their integrity and trustwor-
thiness. This focus has given an impetus to cryptographic
research into voting protocols. Embracing cryptography al-
lows us to achieve high levels of veriﬁability, and hence trust-
worthiness (every voter can check that her vote was counted
∗
†
Foundation
Incumbent of the Judith Kleeman Professorial Chair
This work was partially supported by the Israel Science
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’ 07,  October 29–November 2, 2007, Alexandria, Virginia, USA.  
Copyright  2007  ACM  978-1-59593-703-2/07/0010. . .$5. 00.
correctly), without sacriﬁcing the basic requirements of bal-
lot secrecy and resistance to coercion.
A “perfect” voting protocol must satisfy a long list of
requirements. Among the most important are:
Accuracy The ﬁnal tally must reﬂect the voters’ wishes.
Privacy A voter’s vote must not be revealed to other par-
ties.
Receipt-Freeness A voter should not be able to prove how
she voted (this is important in order to prevent vote-buying
and coercion).
Universal Veriﬁability Voters should be able to verify
both that their own votes were “cast as intended” and that
all votes were “counted as cast”.
Surprisingly, using cryptographic tools we can construct pro-
tocols that satisfy all four of these properties simultane-
ously. Unfortunately, applying cryptographic techniques in-
troduces new problems. One of these is that cryptographic
protocols are often based on computational assumptions (e.g.,
the infeasibility of solving a particular problem). Some com-
putational assumptions, however, may have a built-in time
limit (e.g., Adi Shamir estimated that all existing public-key
systems, with key-lengths in use today, will remain secure
for less than thirty years [23]).
A voting protocol is said to provide information-theoretic
privacy if a computationally unbounded adversary does not
gain any information about individual votes (apart from the
ﬁnal tally). If the privacy of the votes depends on computa-
tional assumptions, we say the protocol provides computa-
tional privacy. Note that to coerce a voter, it is enough that
the voter believe there is a good chance of her privacy being
violated, whether or not it is actually the case (so even if
Shamir’s estimate is unduly pessimistic, the fact that such
an estimate was made by an expert may be enough to allow
voter coercion). Therefore, protocols that provide computa-
tional privacy may not be proof against coercion: the voter
may fear that her vote will become public some time in the
future.
While integrity that depends on computational assump-
tions only requires the assumptions to hold during the elec-
tion, privacy that depends on computational assumptions
requires them to hold forever. To borrow a term from Au-
mann, Ding and Rabin [2], we can say that information-
theoretic privacy is everlasting privacy.
A second problem that cryptographic voting protocols
must consider is that most cryptographic techniques require
complex computations that unaided humans are unable to
246perform. However, voters may not trust voting computers
to do these calculations for them. This mistrust is quite
reasonable, because there is no way for them to tell if a
computer is actually doing what it is supposed to be doing
(as a trivial example consider a voting program that lets a
voter choose a candidate, and then claims to cast a vote for
that candidate; it could just as easily be casting a vote for
a diﬀerent candidate).
Finally, a problem that is applicable to all voting protocols
is the problem of concentrating trust. We would like to con-
struct protocols that don’t have a “single point of failure”
with respect to their security guarantees. Many protocols
involve a “voting authority”. In some protocols, this author-
ity is a single-point of failure with respect to privacy (or, in
extreme cases, integrity). Protocols that require the voter to
input their votes to a computer automatically have a single
point of failure: the computer is a single entity that “knows”
the vote. This is not an idle concern: many ways exist for
a corrupt computer to undetectably output information to
an outside party (in some cases, the protocol itself provides
such “subliminal channels”).
1.1 Our Contributions
In this paper we introduce the ﬁrst universally-veriﬁable
voting protocol with everlasting privacy that can be per-
formed by unaided humans and distributes trust across more
than one voting authority. This protocol has reasonable
complexity (O(m) exponentiations per voter, where m is
the number of candidates) and is eﬃcient enough to be used
in practice.
We formally prove our protocol is secure in the Universal
Composability (UC) framework, which provides very strong
notions of security. Surprisingly, we can attain this level of
security even though we base the voting protocol on com-
mitment and encryption schemes that are not, themselves,
universally composable (we propose using a modiﬁcation of
the Pedersen commitment scheme together with Paillier en-
cryption; see Appendix A for details).
As part of the formal proof of security, we can specify pre-
cisely what assumptions we make when we claim the pro-
tocol is secure (this is not the case for most existing voting
protocols, that lack formal proofs completely).
In addition, we formally prove that our protocol is receipt-
free, using a simulation-based deﬁnition of receipt-freeness
previously introduced by the authors [16]. Helping to show
that rigorous proofs of correctness are not just “formalism
for the sake of formalism”, we demonstrate a subtle attack
against the receipt-freeness of the Punchscan voting system
[9] (see Section 2.4).
1.2 Related Work
Voting Protocols.
Chaum proposed the ﬁrst published
electronic voting scheme in 1981 [7]. Many additional pro-
tocols were suggested since Chaum’s. Among the more no-
table are [13, 10, 3, 11, 12, 14].
Only a small fraction of the proposed voting schemes sat-
isfy the property of receipt-freeness. Benaloh and Tuinstra
[3] were the ﬁrst to deﬁne this concept, and to give a pro-
tocol that achieves it (it turned out that their full protocol
was not, in fact, receipt free, although their single-authority
version was [14]). To satisfy receipt-freeness, Benaloh and
Tuinstra also required a “voting booth”: physically untap-
pable channels between the voting authority and the voter.
Human Considerations. Almost all the existing protocols
require complex computation on the part of the voter (infea-
sible for an unaided human). Thus, they require the voter
to trust that the computer casting the ballot on her behalf
is accurately reﬂecting her intentions. Chaum [8], and later
Neﬀ [18], proposed universally-veriﬁable receipt-free voting
schemes that overcome this problem. Recently, Reynolds
proposed another protocol similar to Neﬀ’s [21].
All three schemes are based in the “traditional” setting,
in which voters cast their ballots in the privacy of a voting
booth. Instead of a ballot box the booth contains a “Direct
Recording Electronic” (DRE) voting machine. The voter
communicates her choice to the DRE (e.g., using a touch-
screen or keyboard). The DRE encrypts her vote and posts
the encrypted ballot on a public bulletin board.
It then
proves to the voter, in the privacy of the voting booth, that
the encrypted ballot is a truly an encryption of her intended
vote.
Chaum’s original protocol used Visual Cryptography [17]
to enable the human voter to read a complete (two-part)
ballot that was later separated into two encrypted parts, and
so his scheme required special printers and transparencies.
Bryans and Ryan showed how to simplify this part of the
protocol to use a standard printer [4, 22]. A newer idea
of Chaum’s is the Punchscan voting system [9], which we
describe in more detail in Section 2.4.
Recently, the authors proposed a voting protocol, based
on statistically-hiding commitments, that combines everlast-
ing security and a human-centric interface [16]. This pro-
tocol requires a DRE, and inherently makes use of the fact
that there is a single authority (the DRE plays the part of
the voting authority).
Adida and Rivest [1] suggest the “Scratch&Vote” system,
which makes use of scratch-oﬀ cards to provide receipt-
freeness and “instant” veriﬁability (at the polling place)
Their scheme publishes encryptions of the votes, and is there-
fore only computationally private.
Our scheme follows the trend of basing protocols on physi-
cal assumptions in the traditional voting-booth setting. Un-
like most of the previous schemes we also provide a rigorous
proof that our scheme actually meets its security goals.
2.
INFORMAL OVERVIEW OF THE
SPLIT-BALLOT PROTOCOL
Our voting scheme uses two independent voting author-
ities that are responsible for preparing the paper ballots,
counting the votes and proving that the announced tally is
correct.
If both authorities are honest, the election is guaranteed to
be accurate, information-theoretically private and receipt-
free. If at least one of the authorities is honest, the election
is guaranteed to be accurate and private (but now has only
computational privacy, and may no longer be receipt-free).
If both authorities are corrupt, the voting is still guaranteed
to be accurate, but privacy is no longer guaranteed.
An election consists of four phases:
1. Setup: In this stage the keys for the commitment and
encryption schemes are set up and ballots are pre-
pared.
2. Voting: Voters cast their ballots. This stage is de-
signed to be performed using pencil and paper, al-
Candidate for President
Candidate for President
Scan and keep this page
Scan and keep this page
Candidate for President
Scan and keep this page
Candidate for President
Scan and keep this page
E
F
H
G
George Washington
Vote A,E or B,H  or C,G  or D,F
John Adams
Vote A,F or B,E or C,H  or D,G
Thomas Jefferson
Left
Vote A,G  or B,F or C,E or D,H
James Madison
Vote A,H  or B,G  or C,F or D,E
Proposition 123
Ballot 1
Verification Code:
8PbGfIKjknp7IX5i6y5ar/NqtF4t
Vote A,F or B,E
Vote A,E or B,F
Yes
No
F
E
A
C
D
B
A
B
George Washington
Vote A,E or B,H  or C,G  or D,F
John Adams
Vote A,F or B,E or C,H  or D,G
Thomas Jefferson
Right
Vote A,G  or B,F or C,E or D,H
James Madison
Vote A,H  or B,G  or C,F or D,E
Proposition 123
Ballot 1
Verification Code:
GmJYsZDhSfEILpCjAkvd+v2Ghv0
Vote A,F or B,E
Vote A,E or B,F
Yes
No
Left
Ballot 2
Right
Ballot 2
Vote A,F or B,E or C,H  or D,G
Vote A,E or B,H  or C,G  or D,F
Vote A,E or B,H  or C,G  or D,F
John Adams
George Washington
George Washington
Candidate for President
Scan and keep this page
Scan and keep this page
Candidate for President
A
C
D
B
E
F
John Adams
Thomas Jefferson
H
Verification Code:
G
Thomas Jefferson
James Madison
GmJYsZDhSfEILpCjAkvd+v2Ghv0
Verification Code:
Proposition 123
James Madison
8PbGfIKjknp7IX5i6y5ar/NqtF4t
A
Proposition 123
No
B