# CloudPD: Problem Determination and Diagnosis in Shared Dynamic Clouds

**Authors:**
- Bikash Sharma†
- Praveen Jayachandran§
- Akshat Verma§
- Chita R. Das†

**Affiliations:**
- †Department of Computer Science and Engineering, Pennsylvania State University, University Park, PA
  - {bikash, das}@cse.psu.edu
- §IBM Research - India
  - {prjayach, akshatverma}@in.ibm.com

## Abstract
In this work, we address the challenge of problem determination in virtualized cloud environments. We highlight that high dynamism, resource sharing, frequent reconfiguration, a high propensity for faults, and automated management introduce significant new challenges for fault diagnosis in clouds. To tackle these issues, we propose CloudPD, a comprehensive fault management framework for cloud environments. CloudPD leverages:
1. A canonical representation of the operating environment to quantify the impact of resource sharing.
2. An online learning process to handle the dynamic nature of the cloud.
3. Correlation-based performance models to enhance detection accuracy.
4. An integrated end-to-end feedback loop to synergize with the cloud management ecosystem.

Using a prototype implementation with representative batch and transactional workloads such as Hadoop, Olio, and RUBiS, we demonstrate that CloudPD can detect and diagnose faults with low false positives (< 16%) and high accuracy (88%, 83%, and 83%, respectively). In an enterprise trace-based case study, CloudPD diagnosed anomalies within 30 seconds with an accuracy of 77%, showcasing its effectiveness in real-world operations.

**Keywords:** Cloud, Problem Determination, Fault Diagnosis, Virtualization, Performance, Hadoop MapReduce

## I. Introduction
Large data centers and utility clouds frequently experience faults, which are major contributors to their total management costs and often lead to Service Level Agreement (SLA) violations [1]–[4]. A recent survey indicates that IT downtime averages 14 hours per year, resulting in $26.5 billion in lost revenue [5]. Another survey [6] reveals growing reluctance among customers to adopt cloud services due to unpredictable performance. A related study [7] on forum messages over three years shows that virtualization-related issues contribute to approximately 20% of the total problems faced by end users. The existence of public repositories of failure traces [8] across diverse distributed systems like Skype, Microsoft, and PlanetLab further underscores the prevalence and need to manage these faults for successful operation.

Traditional problem determination in distributed systems focuses on building a model of an application running without errors. When an application's performance deviates from this model, an anomaly is detected, and system administrators are alerted to manually resolve the issue. However, the automated and dynamic nature of clouds conflicts with this manual/semi-automatic approach. Applications running in a cloud often appear opaque to the cloud provider, making it challenging to access fine-grained system and application measurements for problem detection [9].

### A. Problem Determination in Clouds: What is New?
In this paper, we address the issue of problem determination in a dynamic multi-tenant Infrastructure as a Service (IaaS) cloud environment. We focus on performance degradation issues that do not cause complete application failure (e.g., fail-stop failures like power outages). Besides being large-scale virtualized systems, clouds present several new challenges that traditional problem determination techniques cannot adequately address:

- **Resource Sharing:** Clouds are multi-tenant, with multiple virtual machines (VMs) collocated on the same physical server. Since resources like cache, disk, and network bandwidth are not fully virtualized, the performance of an application can be affected by other collocated applications. Our preliminary study (Figure 1(a)) shows that multi-tenancy can lead to up to 40% performance degradation for a file system benchmark (Iozone). This highlights the importance of understanding the operating context under which a workload operates and distinguishing collocation faults from application errors. We elaborate on the notion of operating context in Section III-A.

- **Dynamism:** Clouds are elastic, allowing workloads to request and release resources on-demand. Elasticity is enabled through VM resizing, migration, and cloning. Consequently, the operating context changes more frequently compared to traditional distributed systems. In a 24-hour case study (Section V-F), we observed that the operating context of all VMs changes within 3.5 hours (Figure 1(b)), with the maximum duration without a change being 6 hours. This necessitates a problem determination system that dynamically learns application behavior in specific contexts, rendering static model-based approaches ineffective [10]–[12].

- **High Frequency of Faults:** Resource sharing combined with high dynamism leads to a large number of cloud anomalies [7], [9], [12], [13]. We found that faulty VM resizing can impact performance by up to 20%, and faulty VM migration can impact performance by more than 10% (Figure 1(a)). Additionally, up to 10% of cloud reconfiguration actions can be faulty (Section V-F). Thus, problem determination in clouds must handle a much higher frequency of faults than traditional distributed systems.

- **Autonomic Systems:** Clouds are autonomic, reacting automatically to changes in workload requirements. A problem determination system that manually flags anomalies does not align with the cloud model [9], [10], [13]. Problem determination in a cloud needs to take a completely automated end-to-end approach for anomaly detection, diagnosis, classification, and remediation by integrating with the cloud management stack [9].

To the best of our knowledge, no existing framework provides a comprehensive, automated end-to-end solution for handling virtualized cloud-related faults. Therefore, we present CloudPD, a comprehensive fault management framework for clouds.

### B. Contributions
Our contributions include:
- Demonstrating that high dynamism and resource sharing in the cloud lead to frequent changes in an application's resource model, making traditional stationary model-based approaches ineffective. We identify the need for an end-to-end problem detection, diagnosis, and remediation framework consistent with the autonomic cloud management system. Unlike prior works, we specifically focus on faults arising from cloud activities and virtualization artifacts such as VM migration, resizing, and collocation.
- Presenting the design and implementation of CloudPD, a fault management system that addresses the identified challenges. CloudPD introduces three novel ideas:
  1. Including the operating context of an application in its resource model.
  2. Using host metrics as a canonical representation of the operating context to reduce the number of resource models.
  3. Combining resource models with correlation models in a three-level framework (light-weight event generation, inexpensive problem determination, and robust diagnosis).
- Implementing a working prototype of CloudPD and evaluating it on 28 VMs with cloud-representative benchmarks (Hadoop, Olio, and RUBiS). CloudPD diagnosed faults with low false positives (< 16%) and high accuracy (88%, 83%, and 83%, respectively). In an enterprise trace-driven case study, CloudPD achieved 77% accuracy, with high recall and precision, and fewer false alarms. Furthermore, CloudPD can suggest remediation actions to the cloud resource manager within 30 seconds.

## II. Background
In this section, we provide an overview of related work in the context of problem determination and diagnosis, and discuss how CloudPD interfaces with the cloud ecosystem to address the new challenges posed by cloud environments.

### A. Related Work
We categorize prior works based on the techniques used and existing frameworks for problem determination.

- **Core Problem Determination Techniques:**
  - **Threshold-based schemes:** These set thresholds on system and application performance metrics based on historical observations. While widely used in commercial (e.g., IBM Tivoli, HP OpenView) and open-source (e.g., Ganglia, Nagios) monitoring tools, they are unsuitable for dynamic environments, prone to high false alarm rates, and perform poorly in large-scale utility clouds [10].
  - **Statistical machine learning techniques:** These build performance models of the system under normal behavior and flag deviations as anomalies [11], [14]–[16]. Recent methods include application-based and peer-based correlation [4], [17], [12], which capture performance invariants. However, learning correlations, especially non-linear ones, is expensive and requires large training data. PeerWatch [12] uses canonical correlation analysis but only works for positive correlations. Zhang et al. [18] use an ensemble of models to address variations in underlying models due to workload fluctuations or updates. Cherkasova et al. [15] use two different models for a given time period to improve accuracy.

- **Problem Determination Frameworks:**
  - **EbAT [10]:** Analyzes system metric distributions rather than individual thresholds.
  - **Vigilant [19]:** Uses out-of-band, hypervisor-based failure monitoring with machine learning.
  - **DAPA [13]:** An initial prototype for application performance diagnostics in virtualized environments.
  - **PREPARE [9]:** Integrates online anomaly detection and predictive prevention measures in virtualized clouds.

These prior works focus on detecting application or OS-related anomalies but do not address anomalies arising from cloud activities and virtualization artifacts such as VM migration, resizing, and collocation, which is a key focus of this work. Moreover, they address only one or two components of the cloud ecosystem in isolation, whereas CloudPD integrates them efficiently.

### B. End-to-end Problem Determination in a Cloud Ecosystem
IaaS cloud management systems are autonomic and continually optimize the cloud infrastructure to adapt to different workload variations. Future management actions depend on the outcomes of previous actions, so the cloud management stack must be aware of any faults. A problem determination system in a cloud must be autonomic and provide fault remediation actions for cloud-related faults.

Virtualization does not allow reservation of resources like cache, network, and I/O bandwidth, leading to performance changes when VMs are dynamically configured. Clouds introduce collocation faults, where an application experiences performance anomalies due to collocated VMs. Continual reconfigurations, such as VM resizing and live migration, can also lead to performance degradation. VM resizing can result in insufficient resources, and VM live migration can impact write-intensive workloads and CPU usage.

Clouds introduce new fault types that need to be distinguished from traditional application faults. Problem determination in traditional distributed systems has focused on one application at a time, but collocation faults require learning the normal behavior of an application in the context of other collocated applications. This, combined with VM live migration, implies that the model needs to be learned in the context of all possible sets of collocated applications, which is infeasible in a cloud with thousands of applications. Thresholding techniques cannot be applied, and while correlation-based models are more stable, the number of relevant pair-wise correlations is exponential. A cloud problem determination system like CloudPD needs to integrate with the cloud management infrastructure and update any collocation errors as changes in workload profiles. It should trigger the Cloud Resource Manager (CloudRM) to estimate new sizes for VMs and communicate faulty live migrations for future configuration actions. Application and system errors are handled by notifying system administrators. The cloud ecosystem requires not just fault detection but also diagnosis and automated remediation.

Figure 2 captures the system context in which a cloud problem determination system operates. The CloudRM periodically reconfigures the cloud using monitored system and application data, and workload profiles. The reconfiguration events are passed to the virtualization layer for further actions. Multi-tenancy ensures efficient utilization of compute resources by reserving CPU and memory for individual VMs.

## III. CloudPD Architecture
### A. Design Decisions
The architecture of CloudPD is based on the following key design choices:

- **Include Operating Context in the Performance Model:** One of the key ideas in CloudPD is to include the operating context of a workload in its performance model to capture the impact of other collocated applications in a scalable manner. The operating context includes host metrics and impacted metrics (e.g., L1/L2 cache misses, context switches, page faults). This canonical representation merges VMs with similar collocation impacts into a common context, drastically reducing the number of operating contexts. Figure 3 illustrates the effectiveness of this approach, showing that the distinction between anomalous and normal intervals is primarily in the cache misses experienced at the server hosting the VM.

- **Online Learning Process:** CloudPD uses an online learning process to handle the dynamic nature of the cloud. This allows the system to continuously update and refine its performance models as the operating context changes.

- **Correlation-Based Performance Models:** CloudPD combines simple and correlation-based models in a two-phase methodology. A lightweight resource model first predicts events, followed by a correlation-based analysis for a subset of these events. This approach enhances detection accuracy while maintaining scalability.

- **Integrated End-to-End Feedback Loop:** CloudPD integrates with the cloud management ecosystem to provide a closed-loop feedback mechanism. This ensures that any detected anomalies are communicated to the CloudRM, which can then take appropriate remediation actions.

By incorporating these design choices, CloudPD effectively addresses the challenges of problem determination in dynamic and shared cloud environments, providing a robust and scalable solution for fault management.