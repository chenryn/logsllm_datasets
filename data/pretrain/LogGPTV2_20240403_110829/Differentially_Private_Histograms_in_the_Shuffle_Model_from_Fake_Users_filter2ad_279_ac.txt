· ln 20
·
1
1 − 2q
with probability 9/10 via Claim III.2 and the bound (k+1)/k ≤
2. Note that both forms of q approach zero as k increases, so
3The constants in this claim come from somewhat intricate analysis of
multinomial distributions. It is possible an alternative analysis could yield
improved bounds but we leave this for future work.
(cid:33)
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:25:20 UTC from IEEE Xplore.  Restrictions apply. 
444
1
1−2q is a monotonically decreasing function of k as desired.
n · ln 20 must be the smaller of the two due
Finally, the term 2
to our bound on δ.
(cid:16) 132
We have shown that the values n, d, ε, δ ﬁx a lower bound on
the values of k that sufﬁce for privacy and any choice of k will
determine a value for q. These assignments of k, q permitted
analysis of per-bin error. We now adjust the assignments in
(cid:17)
order to derive a bound on the maximum error:
Theorem III.4. Fix any ε > 0, δ  max
,
there is a choice of parameter q  2
is at most 1/10.
d , the probability that
q(1 − q) ln 20d ·
1 − 2q
k + 1
n
1
1
Because k is sufﬁciently large, there is a value ˆq ∈ (0, 1/2)
that satisﬁes the equality q(1 − q) = 33
δ . Similar
to before, we will choose q to be the maximum of ˆq and
˜q ← 1
nk+n ln 20d. The theorem follows from Claim III.1 and
Corollary III.5 (where
1−2q again expands to a monotonically
1
decreasing function of k)
eε−1 )2 ln 4
5nk ( eε+1
As previously stated, we prove Claims III.1 and III.2 in
Subsections III-B and III-A, respectively. In Subsection III-C,
we bound the impact of corrupt users (Part iii of Theorem I.1).
A. Accuracy of PFLIP
In this section, we show how to obtain conﬁdence intervals
of the per-bin error of PFLIP (Claim III.2). To prove the claim,
we will ﬁrst analyze the bias and variance of each estimate.
Claim III.6. Fix any q  n,
i corresponds to the index of a fabricated user; in this case,
xi,j = 0.
In the proof of Claim III.6, we saw that each term in
1−2q · (yi,j − q) is an independent random variable
(1−2q)2 · q · (1 − q). Naturally,
with mean xi,j and variance
this means each term in (2) is an independent random variable
(1−2q)2 · q · (1 − q).
with mean zero and variance
We now add the observation that each term in (2) has
maximum magnitude m = 1−q
1−2q . This follows from the fact
that xi,j, yi,j ∈ {0, 1} and q  n—and all nk + n messages are shufﬂed together. For any
real user i ∈ [n], we can decompose it into two stages: (1) run
Rd,q on xi, xn+1, . . . , xnk+n and shufﬂe the output, then (2)
run Rd,q on the values x1, . . . , xi−1, xi+1, . . . , xn and shufﬂe
all nk + n messages. The ﬁrst stage is precisely Cnk,d,q and
the second is a post-processing of its output. Thus, privacy
follows from post-processing (Fact II.2).
2) Step Two: In this step, we argue that we only need to
concern ourselves with the d = 2 case. Consider any j, j(cid:48) ∈ [d]
where j  0 and δ  9
2 ln(4/δ), then
4
δ
4
δ
(7)