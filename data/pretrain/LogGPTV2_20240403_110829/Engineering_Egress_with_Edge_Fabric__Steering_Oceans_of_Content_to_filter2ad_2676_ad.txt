cannot realize either of these objectives.
We first describe how we direct specific flows onto specific paths
(§6.1), then describe how we use that capability to measure the
performance of multiple paths to a prefix in parallel (§6.2). We have
deployed these two mechanisms in production alongside Edge
Fabric (§5). We finish this section by discussing future use cases
that employ those measurements for directing specific flows to
enable performance-aware routing (§6.3).
6.1 Placing Traffic on Alternate Paths
To sidestep BGP’s limitation that it only supports destination-based
routing, we build a mechanism that allows us to route specific flows
via select paths. The mechanism requires only minimal modifica-
tions at servers and peering routers, and does not require coordi-
nation between servers and other network elements: servers can
make decisions on a per-flow basis without having any knowledge
of network state at peering routers.7
• Servers select and mark flows that should be treated specially.
Specifically, servers set the DSCP field in the IP packets of selected
flows to one of a set of pre-defined values. Servers can mark a
flow to, for instance, signal that it can be used to measure the
performance of an alternate path or to signal that the flow is
carrying real-time traffic and is performance-sensitive.
• Policy routing at the PRs match on the markings applied by
servers and route corresponding packets based on alternate rout-
ing tables. We install a unique routing table for each DSCP value.
• A controller injects routes into the alternate routing tables at
PRs to control how marked flows are routed. If the controller has
not injected a route for a particular destination, marked flows
will be routed based on the PR’s default routing table.
This approach does not require continued synchronization be-
tween servers, routers, and controllers. Servers can continuously
tag packets without any knowledge of network state, and con-
trollers can inject routes into alternate routing tables to control the
route of marked packets only as needed.
In addition, the aggregation switch (ASW) layer need not be
aware of DSCP values assigned to flows and can blindly forward IP
traffic based on BGP’s best route for the destination prefix. However,
a PR with the best route may not connect to the peer providing
the alternate route, since different PRs at a PoP can have different
peers. To handle this case, the controller injects the alternate route
at PRs that lack the peer, setting the nexthop of the route to be a
PR that connects to the peer. Trying to forward traffic from one PR
to another via IP would cause a loop since the aggregation layer
forwards traffic based on BGP’s best route for the destination. To
7Per-flow overrides avoid out-of-order packets that slow TCP.
avoid this, we configure the PRs to address each other via labels
(using ISIS-SR) and tunnel traffic via ASWs using MPLS forwarding.
6.2 Measuring Performance of Alternate Paths
End-user TCP connections terminate at front-end servers at the
edge of our network, which in turn proxy HTTP requests to backend
servers [26]. We use the mechanism described in Section 6.1 to ran-
domly select a subset of these connections (§6.2.1) and route them
via alternate paths (§6.2.2). This allows us to collect measurements
with Facebook’s existing infrastructure that logs the performance
of client connections observed by the front-end servers (§6.2.3).
6.2.1 Randomly selecting flows. We implemented a program that
runs on front-end servers to randomly select flows and mark them
to be routed via an alternate path using the Extended Berkeley
Packet Filter (eBPF) instruction set. eBPF allows the program to be
loaded into the kernel where it can efficiently process all packets
egressing from the server. With this approach, no changes are
required to existing client or server applications.
The eBPF program randomly selects a configurable fraction of
flows for alternate path measurements and then sets the DSCP
field in all of the flow’s IP packets to a DSCP value reserved for
alternate path measurements. The program’s configuration can be
dynamically updated and contains the percentage of flows that
should be randomly mapped to each DSCP value reserved for mea-
surements. For instance, to measure two extra paths per prefix, the
configuration could assign 0.75% of flows the DSCP value 12 and
0.25% of flows the DSCP value 24. Given the scale of Facebook,
sampling a small fraction of connections still results in a large set of
measurements. By using passive measurements based on existing
production traffic, we avoid active measurements (e.g., pings) which
may not represent performance as perceived by real users.
6.2.2 Injecting routes. We built an AltPath controller to inject
routes into alternate routing tables. The controller only generates
alternate paths for prefixes with traffic in the past 10 minutes,
drastically reducing the size of alternate routing tables (§2.2).
Every 30 seconds, the AltPath controller uses BGP routes re-
trieved from the BMP Collector service (§5.1) to decide on an al-
ternate path for each prefix, for each of the DSCP values being
assigned by servers. The controller then uses the BGP Injector ser-
vice (§5.3) to inject alternate routes for each DSCP value into the
corresponding routing table at PRs.
The AltPath controller takes as input a set of destination ASNs
that it will not perform alternate path measurements for. Our traffic
engineering team adds to the list of networks that are known (from
prior operational experience) to have extremely poor performance
on alternate paths to avoid negatively impacting end-users.
6.2.3 Measuring performance. At the termination of (a sample
of) client TCP connections, our front-end servers log metrics that
we use to evaluate path performance. These servers use a separate
eBPF program to capture statistics at connection termination for
sampled TCP connections, with a typical sampling rate of 1 out
of every 1000 connections. The statistics include retransmission
rate, retransmission timeout (RTO), smoothed round-trip times
(SRTT), and the number of segments sent/received. In addition, the
servers sample HTTP transactions and measure per-response client
Engineering Egress with Edge Fabric
ACM SIGCOMM, August 21–25, 2017, Los Angeles, CA, USA
download goodput. The servers also record the value assigned to
the connection’s DSCP field by the eBPF program, if any. A collector
joins samples with egress route information so that samples can be
grouped by the route they traversed and performance statistics can
be aggregated per route.
6.3 Future Uses of Performance-Aware Routing
The mechanisms described in Section 6.1 and Section 6.2 allow us
to route traffic along alternate paths and measure performance. In
this section, we explore how we can build atop these mechanisms
to improve user performance.
6.3.1 Overriding paths chosen by BGP. Today, Edge Fabric over-
rides BGP’s default decision process to mitigate congestion at the
edge of Facebook’s network. Going forward, we can improve Edge
Fabric by incorporating AltPath measurements. First, Edge Fab-
ric can use the measurements to identify scenarios where it may
be possible to improve performance by overriding BGP’s default
decisions, even though the edge is not congested. When perfor-
mance on the current path degrades, AltPath measurements can
identify whether the problem can be avoided via a path change,
or whether the problem impacts all paths (as might happen with
severe congestion close to the destination). Second, Edge Fabric
can use alternate path measurements to ensure that traffic is placed
onto the best performing detour path whenever congestion does
occur. We provide initial results on the promise of these use-cases in
Section 7.3. Finally, alternate path measurements can help network
operators identify how performance will be impacted if traffic is
detoured, which can be used in network planning decisions.
6.3.2 Optimizing use of limited capacity. When capacity is lim-
ited, Edge Fabric may be forced to detour traffic to paths with
comparatively worse performance. Edge Fabric can be extended
to best use the limited capacity on the primary path by shifting
prefixes and/or flows that measurements indicate are less likely
to be impacted. First, Edge Fabric can amend its decision criteria
(§5.2) to prefer shifting prefixes that will experience little perfor-
mance degradation on their detour path. Second, higher priority
flows can be routed over the constrained path. Front-end servers
can assign predefined DSCP values to flows that are higher priority,
such as a live video stream. Then, when Edge Fabric injects routes
to shift default-routed traffic away from an overloaded interface, it
can in parallel inject routes into an alternate routing table to keep
flows that are marked with a high priority DSCP value on the better
performing path. Both IPFIX and sFlow samples collected by Traffic
Collector include the DSCP field, thereby making it possible for
Edge Fabric to determine the rate of traffic marked with a given
DSCP value and account for this in its projection.
7 RESULTS ON PRODUCTION TRAFFIC
7.1 Deployment Status and Evaluation Datasets
We deployed Edge Fabric for all production traffic, detouring traffic
to avoid overloading interfaces at PoPs around the world. Section 7.2
describes a two-day study in January 2017, predating our current
stateless controller. This study used our earlier stateful controller,
which also did not automatically split large-volume prefixes. We
believe that our stateless controller achieves better utilization than
Figure 9: Utilization of interfaces relative to detour thresholds.
the stateful one (without negative side effects) but have not yet
formally evaluated it.
We are now deploying AltPath across our PoPs, but the results
in Section 7.3 are from our initial trial deployment at four PoPs
beginning in late 2016, chosen in part for their rich connectivity:
one in North America (PoP-19 in §2), one in Europe (PoP-11), and
two in Asia Pacific (PoPs-2, 16). Combined, these PoPs account for
approximately 18% of the total traffic of the 20 PoPs. We do not
currently use AltPath measurements automatically to inform pro-
duction routing decisions, but Section 7.3 presents trial results on
the impact and challenges of integrating performance into routing
decisions.
We created two alternate path tables at each router, populated
with BGP’s 2nd and 3rd preferred paths for all prefixes. Our 2016
measurements predate our current DSCP-based approach and in-
stead assign flows to tables based on the flows’ destination ports.
For each alternate routing tables, we generated a distinct set of
ports that matches approximately 0.5% of the total traffic, and then
installed rules at PRs to route traffic destined towards these ports to
one of the tables. To increase the number of measurements of alter-
nate paths, we apply a 100x multiplier to the existing measurement
sampling rate whenever a connection uses a port in the AltPath
port set. With this multiplier, each alternate path receives 0.5% of
traffic and has ≈ 50% as many measurements as the primary path.
7.2 Evaluating Capacity-Aware Routing
Does Edge Fabric achieve its primary goal, preventing congestion
at edge interfaces while enabling efficient utilization? Edge Fabric
prevents congestion by detouring traffic to alternate routes. During
the study, non-overloaded alternate routes always existed, giving
Edge Fabric options to avoid overloading interfaces. In particular,
transit providers can take detoured traffic to any destination, and
the maximum instantaneous transit utilization observed at any
individual PoP (sampled at one minute intervals) during the study
was 55%. Edge Fabric successfully prevented egress traffic from
overloading egress interfaces, with no packet drops at an interface
when Edge Fabric was not detouring traffic from it, nor in 99.9%
of periods in which it was detouring. Figure 9 shows the utilization
on these interfaces (relative to their detour thresholds) during these
periods; Edge Fabric keeps utilization of preferred routes high
even while avoiding drops, and utilization is below a safe threshold
during periods in which Edge Fabric decides not to detour traffic.
How much traffic does Edge Fabric detour? Figure 10 shows the
distribution of the fraction of time that Edge Fabric detoured traffic
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 10 20 30 40 50 60 70 80 90 100CDF of samplesInterface utilization relative to detour threshold (%)When not detouring trafficWhen detouring trafficACM SIGCOMM, August 21–25, 2017, Los Angeles, CA, USA
B. Schlinker et al.
Figure 10: Fraction of time Edge Fabric detours from interfaces.
Figure 13: Performance difference between best paths chosen based
on BGP policy and chosen based on alternate path measurements.
Graph depicts latency-selected path minus policy-selected path,
and so a negative value indicates that Edge Fabric’s override
achieved better performance (lower latency).
become heavily overloaded (see Figure 6) by taking advantage of
available capacity elsewhere.
Figure 11: Distributions of Edge Fabric detour period lengths
across (PoP, prefix) pairs and of time between detours.
Figure 12: Fraction of traffic detoured by Edge Fabric across 20
PoPs and at the PoP with the largest fraction detoured.
from each interface to avoid overloading it. During our evaluation
period, Edge Fabric detoured traffic from 18% of interfaces at least
once, and it detoured 5% of interfaces for at least half the period.
Figure 11 shows how long each period of detouring lasts, and how
long the periods are between detours for a given (PoP, destination
prefix). The median detour lasts 22 minutes, and 10% last at least 6
hours. Interestingly, the median time between detours is shorter–
only 14 minutes–but the tail is longer, with a gap of more than 3
hours 36% of the time and a sizable fraction of gaps long enough to
suggest detouring during a short daily peak. Figure 12 shows, over
time, the fraction of traffic detoured across 20 PoPs and the fraction
of traffic detoured at the PoP (in this set of 20) that detours the
highest fraction of its traffic. The global and PoP detour volumes
display diurnal patterns and remain a small fraction of overall traffic,
leaving spare capacity to absorb detours, as PoPs always had at
least 45% of their transit capacity free. Edge Fabric enables PoPs
to dynamically detour traffic from interfaces that would otherwise
7.3 Evaluating Performance-Aware Routing
This section investigates how performance differs across paths to
the same prefix and whether our system can use this information to
select paths that outperform the ones BGP prefers. We use 7 days of
measurements of production traffic from 4 PoPs where we deployed
alternate path measurements (§7.1), including measurements of
every prefix served from any of those PoPs, with a total of over
350M alternate path measurements to 20K ASes and an average of
8000 measurements per ⟨alternate path, destination prefix⟩.
What is the performance impact of using measurements of alter-
nate paths to inform better decisions? We use the measurements to
override BGP decisions for actual production user traffic at PoP-2.
AltPath identified 400 destination prefixes for which an alternate
route has a median latency at least 20ms faster (and loss was no
worse) than BGP’s preferred path (§7.1). Edge Fabric consumed
this information and injected overrides at the PoP, steering these