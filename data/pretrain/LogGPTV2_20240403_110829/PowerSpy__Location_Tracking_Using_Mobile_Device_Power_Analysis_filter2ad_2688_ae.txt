tensive overview appears in Gentile et al. [10]). Similar
to PowerSpy, these works ﬁngerprint the area of interest
with pre-recorded radio maps. Others use signal strength
to calculate distances to base stations at known loca-
tions. All of these methods [16, 24, 25, 30] require sig-
nal strength measurements and base station ID or WiFi
network name (SSID), which is now protected on An-
droid and iOS. Our work does not rely on the signal
strength, cell ID, or SSID. PowerSpy only requires ac-
cess to power measurements, which are currently unpro-
tected on Android.
PowerSpy builds on a large body of work that has
shown how a variety of unprotected sensors can leak lo-
cation information. Zhou et al. [34] reveal that audio
on/off status is a side-channel for location tracking with-
out permissions. In particular, they extract a sequence
of intervals where audio is on and off while driving in-
structions are being played by Google’s navigation ap-
plication. By comparing these intervals with reference
sequences, the authors were able to identify routes taken
by the user. SurroundSense [3] demonstrates that ambi-
ent sound and light can be used for mobile phone local-
ization. They focus on legitimate use-cases, but the same
methods could be leveraged for breaching privacy. AC-
Complice [12] demonstrates how continuous measure-
ments from unprotected accelerometers in smartphones
can reveal a user’s location. Hua et al. [13] extend AC-
Complice by showing that accelerometers can also reveal
where a user is located in a metropolitan train system.
10.2 Other private information leaked
from smartphone sensors
An emerging line of work shows that various phone sen-
sors can leak private information other than location. In
future work we will continue analyzing power measure-
ments to determine if other private information is leaked.
Prior work has demonstrated how smartphone sensors
can be used to ﬁngerprint speciﬁc devices. AccelPrint [9]
shows that smartphones can be ﬁngerprinted by tracking
imperfections in their accelerometer measurements. Fin-
gerprinting of mobile devices by the characteristics of
their loudspeakers is proposed in [7, 8]. Further, Boji-
nov et. al.
[4] showed that various sensors in smart-
phones can be used to identify a mobile device by its
unique hardware characteristics. Lukas et. al. [20] pro-
posed a method for digital camera ﬁngerprinting by noise
patterns present in the images. [19] enhances the method
enabling identiﬁcation of not only the model but also par-
ticular cameras.
Sensors can also reveal a user’s input such as speech
and touch gestures. The Gyrophone study [21] showed
that gyroscopes on smartphones can be used for eaves-
dropping on a conversation in the vicinity of the phone
and identifying the speakers. Several works [2, 5, 32]
have shown that the accelerometer and gyroscope can
leak information about touch and swipe inputs to a fore-
ground application.
11 Conclusion
PowerSpy shows that applications with access to a smart-
phone’s power monitor can gain information about the
location of a mobile device – without accessing the GPS
or any other coarse location indicators. Our approach
enables known route identiﬁcation, real-time tracking,
and identiﬁcation of a new route by only analyzing the
phone’s power consumption. We evaluated PowerSpy on
real-world data collected from popular smartphones that
have a signiﬁcant mobile market share, and demonstrated
their effectiveness. We believe that with more data, our
approach can be made more accurate and reveal more in-
formation about the phone’s location.
Our work is an example of the unintended conse-
quences that result from giving 3rd party applications ac-
cess to sensors. It suggests that even seemingly benign
sensors need to be protected by permissions, or at the
very least, that more security modeling needs to be done
before giving 3rd party applications access to sensors.
Acknowledgments
We would like to thank Gil Shotan and Yoav Shecht-
man for helping to collect the data used for evaluation,
Prof. Mykel J. Kochenderfer from Stanford University
for providing advice regarding location tracking tech-
niques, Roy Frostig for providing advice regarding clas-
siﬁcation and inference on graphs, and ﬁnally Katharina
Roesler for proofreading the paper. This work was sup-
ported by NSF and the DARPA SAFER program. Any
opinions, ﬁndings and conclusions or recommendations
expressed in this material are those of the author(s) and
do not necessarily reﬂect the views of NSF or DARPA.
References
[1] ARULAMPALAM, M. S., MASKELL, S., GORDON, N., AND
CLAPP, T. A tutorial on particle ﬁlters for online nonlinear/non-
gaussian bayesian tracking. Signal Processing, IEEE Transac-
tions on 50, 2 (2002), 174–188.
[2] AVIV, A. J., SAPP, B., BLAZE, M., AND SMITH, J. M. Practi-
cality of accelerometer side channels on smartphones.
In Pro-
ceedings of the 28th Annual Computer Security Applications
Conference (2012), ACM, pp. 41–50.
798  24th USENIX Security Symposium 
USENIX Association
14
[3] AZIZYAN, M., CONSTANDACHE, I., AND ROY CHOUDHURY,
R. Surroundsense: mobile phone localization via ambience ﬁn-
gerprinting.
In Proceedings of the 15th annual international
conference on Mobile computing and networking (2009), ACM,
pp. 261–272.
[4] BOJINOV, H., MICHALEVSKY, Y., NAKIBLY, G., AND BONEH,
D. Mobile device identiﬁcation via sensor ﬁngerprinting. arXiv
preprint arXiv:1408.1416 (2014).
[5] CAI, L., AND CHEN, H. Touchlogger: Inferring keystrokes on
touch screen from smartphone motion. In Usenix HotSec (2011).
[6] CARROLL, A., AND HEISER, G. An analysis of power consump-
tion in a smartphone. In USENIX Annual Technical Conference
(2010).
[7] CLARKSON, W. B., AND FELTEN, E. W. Breaking assump-
tions: distinguishing between seemingly identical items using
cheap sensors. Tech. rep., Princeton University, 2012.
[8] DAS, A., AND BORISOV, N. Poster: Fingerprinting smartphones
through speaker. In Poster at the IEEE Security and Privacy Sym-
posium (2014).
[9] DEY, S., ROY, N., XU, W., CHOUDHURY, R. R., AND
NELAKUDITI, S. Accelprint: Imperfections of accelerometers
make smartphones trackable. In Proceedings of the Network and
Distributed System Security Symposium (NDSS) (2014).
[10] GENTILE, C., ALSINDI, N., RAULEFS, R., AND TEOLIS, C.
Geolocation Techniques. Springer New York, New York, NY,
2013.
[11] GOLDSMITH, A. Wireless communications. Cambridge univer-
sity press, 2005.
[12] HAN, J., OWUSU, E., NGUYEN, L. T., PERRIG, A., AND
ZHANG, J. ACComplice: Location inference using accelerom-
eters on smartphones. In Proceedings of the 2012 International
Conference on COMmunication Systems & NETworkS (2012).
[13] HUA, J., SHEN, Z., AND ZHONG, S. We can track you if you
take the metro: Tracking metro riders using accelerometers on
smartphones. arXiv:1505.05958 (2015).
[14] HUANG, J., QIAN, F., GERBER, A., MAO, Z. M., SEN, S.,
AND SPATSCHECK, O. A close examination of performance and
power characteristics of 4G LTE networks. In MobiSys (2012).
[15] KOCHER, P., JAFFE, J., AND JUN, B. Differential power analy-
sis. In Advances in Cryptology – CRYPTO’99 (1999), Springer,
pp. 388–397.
[16] KRUMM, J., AND HORVITZ, E. Locadio: Inferring motion and
In MobiQuitous (2004),
location from wi-ﬁ signal strengths.
pp. 4–13.
[17] LATECKI, L., WANG, Q., KOKNAR-TEZEL, S., AND MEGA-
LOOIKONOMOU, V. Optimal subsequence bijection.
In Data
Mining, 2007. ICDM 2007. Seventh IEEE International Confer-
ence on (Oct 2007), pp. 565–570.
[18] LEVENSHTEIN, V. I. Binary codes capable of correcting dele-
tions, insertions and reversals. In Soviet physics doklady (1966),
vol. 10, p. 707.
[19] LI, C.-T. Source camera identiﬁcation using enhanced sensor
pattern noise. Information Forensics and Security, IEEE Trans-
actions on 5, 2 (2010), 280–287.
[20] LUKAS, J., FRIDRICH, J., AND GOLJAN, M. Digital camera
Information Forensics
identiﬁcation from sensor pattern noise.
and Security, IEEE Transactions on 1, 2 (2006), 205–214.
[21] MICHALEVSKY, Y., BONEH, D., AND NAKIBLY, G. Gyro-
phone: Recognizing speech from gyroscope signals.
In Proc.
23rd USENIX Security Symposium (SEC14), USENIX Associa-
tion (2014).
[22] MOHAN, P., PADMANABHAN, V. N. V., AND RAMJEE, R. Ner-
icell: rich monitoring of road and trafﬁc conditions using mobile
smartphones. In . . . of the 6th ACM conference on . . . (New York,
New York, USA, Nov. 2008), ACM Press, p. 323.
[23] M ¨ULLER, M.
Information Retrieval for Music and Motion.
Springer Berlin Heidelberg, Berlin, Heidelberg, 2007.
[24] MUTHUKRISHNAN, K., VAN DER ZWAAG, B. J., AND
HAVINGA, P. Inferring motion and location using WLAN RSSI.
In Mobile Entity Localization and Tracking in GPS-less Environ-
nments. Springer, 2009, pp. 163–182.
[25] OUYANG, R. W., WONG, A.-S., LEA, C.-T., AND ZHANG,
V. Y. Received signal strength-based wireless localization via
semideﬁnite programming. In Global Telecommunications Con-
ference, 2009. GLOBECOM 2009. IEEE (2009), IEEE, pp. 1–6.
[26] POLLINI, G. P. Trends in handover design. Communications
Magazine, IEEE 34, 3 (1996), 82–90.
[27] RABINER, L. A tutorial on hidden Markov models and selected
applications in speech recognition. Proceedings of the IEEE
(1989).
[28] RISTIC, B., ARULAMPALAM, S., AND GORDON, N. Beyond
the kalman ﬁlter. IEEE AEROSPACE AND ELECTRONIC SYS-
TEMS MAGAZINE 19, 7 (2004), 37–38.
[29] SCHULMAN, A., SPRING, N., NAVDA, V., RAMJEE, R., DESH-
PANDE, P., GRUNEWALD, C., PADMANABHAN, V. N., AND
JAIN, K. Bartendr: a practical approach to energy-aware cellular
data scheduling. MOBICOM (2010).
[30] SOHN, T., VARSHAVSKY, A., LAMARCA, A., CHEN, M. Y.,
CHOUDHURY, T., SMITH, I., CONSOLVO, S., HIGHTOWER, J.,
GRISWOLD, W. G., AND DE LARA, E. Mobility detection using
everyday gsm traces. In UbiComp 2006: Ubiquitous Computing.
Springer, 2006, pp. 212–224.
[31] XU, F., LIU, Y., LI, Q., AND ZHANG, Y. V-edge: fast self-
constructive power modeling of smartphones based on battery
voltage dynamics. Presented as part of the 10th USENIX . . .
(2013).
[32] XU, Z., BAI, K., AND ZHU, S. Taplogger: Inferring user inputs
on smartphone touchscreens using on-board motion sensors. In
Proceedings of the ﬁfth ACM conference on Security and Privacy
in Wireless and Mobile Networks (2012), ACM, pp. 113–124.
[33] ZHANG, L., TIWANA, B., QIAN, Z., AND WANG, Z. Accurate
online power estimation and automatic battery behavior based
power model generation for smartphones. Proceedings of the . . .
(2010).
[34] ZHOU, X., DEMETRIOU, S., HE, D., NAVEED, M., PAN, X.,
WANG, X., GUNTER, C. A., AND NAHRSTEDT, K.
Identity,
location, disease and more: inferring your secrets from android
public resources.
In Proceedings of the 2013 ACM SIGSAC
conference on Computer & communications security - CCS ’13
(2013), pp. 1017–1028.
A Formal model of new route inference
In this section we formalize the problem of the new route
inference (Section 6) as a hidden Markov model (HMM)
[27]. Let I denote the set of intersections in an area in
which we wish to track a mobile device. A road segment
is given by an ordered pair of intersections (x,y), deﬁned
to be a continuous road between intersection x and inter-
section y. We denote the set of road segments as R.
USENIX Association  
24th USENIX Security Symposium  799
15
We assume that once a device starts to traverse a road
segment it does not change the direction of its movement
until it reaches the end of the segment. We deﬁne a state
for each road segment. We say that the tracked device
is in state sxy if the device is currently traversing a road
segment (x,y), where x,y ∈ I. We denote the route of the
tracked device as a (Q,T ), where
Q =(cid:31)q1 = sx1x2,q2 = sx2x3, ...(cid:30) T = {t1,t2, ...}
For such a route the device has traversed from xi to
xi+1 during time interval [ti−1,ti] (t0 = 0,ti−1  0).
Let A =(cid:31)axyz|∀x,y,z ∈ I(cid:30) be the state transition prob-
ability distribution, where
axyz = p(cid:31)qi+1 = syz|qi = sxy(cid:30)
(1)
Note that axyz = 0 if there is no road between intersec-
tions x and y or no road between intersections y and z.
A traversal of the device over a road segment yields a
power consumption proﬁle of length equal to the dura-
tion of that movement. We denote a power consumption
proﬁle as an observation o. Let B be the probability dis-
tribution of yielding a given power proﬁle while the de-
vice traversed a given segment. Due to the hysteresis of
hand-offs between cellular base stations, this probability
depends on the previous segment the device traversed.
Finally, let Π =(cid:31)πxy(cid:30) be the initial state distribution,
where πxy is the probability that the device initially tra-
versed segment (x,y).
If there is no road segment be-
tween intersections x and y, then πxy = 0. In our model
we treat this initial state as the state of the device before
the start of the observed power proﬁle. We need to take
this state into account due to the hysteresis effect. Note
that an HMM is characterized by A, B, and Π.
The route inference problem is deﬁned as follows.
Given an observation of a power proﬁle O over time in-
terval [0,tmax], and given a model A, B and Π, we need
to ﬁnd a route (Q,T ) such that p{(Q,T )|O} is maxi-
mized. In the following we denote the part of O which
begins at time t(cid:25) and ends at time t(cid:25)(cid:25) by O[t(cid:25),t(cid:25)(cid:25)]. Note that
O = O[0,tmax]. We consider the time interval [0,tmax] as
having a discrete resolution of τ.
B Choosing the best inferred route
Upon its completion, the particle ﬁlter described in sec-
tion 6.1 outputs a set of N routes of various lengths. We
denote this set by Pﬁnal. This set exhibits an estimate
of the distribution of routes given the power proﬁle of
the tracked device. The simple approach to select the
best estimate is to choose the route that appears most fre-
quently in Pﬁnal as it has the highest probability to occur.
Nonetheless, since a route is composed of multiple seg-
ments chosen at separate steps, at each step the weight
of a route is determined solely based on the last segment
added to the route. Therefore, in Pﬁnal there is a bias
in favor of routes ending with segments that were given
higher weights, while the weights of the initial segments
have a diminishing effect on the route distribution with
every new iteration.
To counter this bias, we choose another estimate using
a procedure we call iterative majority vote. This proce-
dure ranks the routes based on the prevalence of their pre-
ﬁxes. At each iteration i the procedure calculates – Pre-
ﬁx[i] – a list of preﬁxes of length i ranked by their preva-
lence out of the all routes that has a preﬁx in Preﬁx[i-1].
Preﬁx[i][n] denotes the preﬁx of rank n. The operation
p|| j – where p is a route and j is an intersection – denotes
the appending of j to p. At each iteration i algorithm 3 is
executed. In the following we denote RoutePreﬁxed(R,
p) to be the subset of routes out of the set R having p as
their preﬁx.
Algorithm 3 Iterative majority vote
I(cid:25) ← I
while not all preﬁxes found do
Prf ← next preﬁx from Preﬁx[i].
Find j ∈ I(cid:25) that maximizes
RoutePreﬁxed(RoutePreﬁxed(Pﬁnal,Prf),Prf|| j)
if no such j is found then
I(cid:25) = I
continue loop
end if
Preﬁx[i + 1] ← Preﬁx[i + 1]∪{Prf|| j}
I(cid:25) = I(cid:25) −{ j}
end while
At each iteration i we rank the preﬁxes based on the
ranks of the previous iteration. Namely, preﬁxes which
are extensions of a shorter preﬁx having a higher rank in
a previous iteration will always get higher ranking over
preﬁxes which are extensions of a lower rank preﬁx. At
each iteration the we ﬁrst ﬁnd the most common preﬁxes
of length i + 1, which start with the most common pre-
ﬁx of length i found in the previous iteration, and rank
them according to their prevalence. Then we look for
common preﬁxes of length i + 1, that start with the sec-
ond most common preﬁx of length i found in the previ-
ous iteration, and so on until all preﬁxes of length i + 1
are found. The intuition is as follows. The procedure
prefers routes traversing segments that are commonly
traversed by other routes. Those received a high score
when were chosen. Since we cannot pick the most com-
mon segments separately from each step (a continuous
route probably will not emerge), we iteratively pick the
most common segment out of the routes that are preﬁxed
with the segments that were already chosen.
800  24th USENIX Security Symposium 
USENIX Association
16