title:POSTER: Pseudonymizing Client as a Privacy-Preserving Service: A
Case Study of CDN
author:Zheng Wang
POSTER: Pseudonymizing Client as a Privacy-Preserving
Service: A Case Study of CDN
Zheng Wang
Qingdao University
Qingdao, China 266071
PI:EMAIL
ABSTRACT
While a number of Internet applications determine the op-
timal service tailored for a client based on its identiﬁer, the
client’s identiﬁer, if explicitly leaked to the Internet appli-
cations, raises critical privacy concerns. To address the pri-
vacy problem for those sender-sensitive systems, this paper
proposes a privacy-preserving service of pseudonymizing In-
ternet client. Replacing real identiﬁer with pseudonymizing
identiﬁer in talking to Internet applications preserves the
client’s privacy. Delegating sender-sensitive optimization
tasks to a trustworthy third party ensures the performance
of Internet applications. The usage of pseudonymizing-client
service in CDN is presented to improve CDN performance
as well as privacy on client’s IP address.
Categories and Subject Descriptors
C.2.0 [COMPUTER-COMMUNICATION
NETWORKS]: General—Security and protection
Keywords
CDN; EDNS-Client-Subnet; pseudonymity
1.
INTRODUCTION
Nowadays Internet applications aggressively rely on one or
multiple identiﬁers of Internet clients to decide and deliver
optimal service. Those identiﬁers such as IP address may
implicitly or explicitly encode a wealth of information about
the Internet client. On the good side, identiﬁers can provide
useful knowledge about the Internet client enabling Internet
applications to tailor their services speciﬁcally suited for the
Internet client. On the bad side, identiﬁers may result in
a breach of privacy if revealed to Internet applications as
well as intermediate systems. A dilemma stands here that
more privacy-protection on identiﬁers of the Internet client
may risk a suboptimal performance of Internet applications
because Internet applications would know less about the In-
ternet client.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the Owner/Author(s). Copyright is held by the
owner/author(s).
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
ACM 978-1-4503-3832-5/15/10.
DOI: http://dx.doi.org/10.1145/2810103.2810124.
One good example for explaining the tradeoﬀ between pri-
vacy and performance is DNS (Domain Name System)-based
CDN (Content Delivery Network). CDNs replicate content
across geographically distributed sets of servers and redi-
rect clients to the optimal replicas to minimize web access
delay. DNS is one common way to support CDN replica
server selection. When a client performs a DNS lookup for
the CDN’s content, the CDN’s authoritative DNS server re-
turns the IP address of the optimal replica server to serve the
client. Ideally the DNS should map the client’s IP address
to the nearest CDN replica server. However, as clients typi-
cally rely on recursive resolvers as “proxies” to traverse DNS
tree talking to authoritative servers, authoritative servers
cannot see clients’ IP addresses (but recursive resolvers’ IP
addresses) because they are masked by recursive resolvers.
As for privacy and performance concerns, there exists three
options in practice for the DNS-based CDN service: 1) Use
a local recursive resolver (or a client-side resolver [3]). As
the local recursive resolver may be in close proximity to the
client, the optimal CDN replica server is likely to be decided
by the authoritative servers simply based on the local recur-
sive resolver’s IP address. Nevertheless, the CDN provider
can also learn a good approximation of the client’s actual IP
address. So privacy concerns arise. 2) Use a remote DNS re-
solver. As a means of protecting his privacy, a user may turn
to an alternative remote DNS resolver such as the popular
OpenDNS, Google DNS, Norton public DNS service. The
remote DNS resolver hides the client’s actual IP address
because the source IP address of DNS request observed at
authoritative servers may be far from the DNS originator’s
IP address. The cost of privacy is the suboptimal CDN
replica server selected by authoritative servers because of
the location mismatch between remote DNS resolver and
client. 3) Use a remote DNS resolver and EDNS-Client-
Subnet. As a simple but eﬀective solution to the problem
of suboptimal replica server selection in using remote DNS
resolver, the industry has developed and deployed an ex-
tension to the DNS called EDNS-Client-Subnet [5]. In the
extension, client’s IP address information is included in DNS
requests. So client’s IP address information is visible to au-
thoritative servers and thereby used to improve the client-
to-replica mapping [4]. Despite of the performance gain,
using an EDNS-Client-Subnet enabled recursive resolver ac-
tually leaks more information on client’s IP address even
than using a local recursive resolver.
Since none of existing CDN solutions addresses both per-
formance and privacy concerns, we propose a privacy-preser-
ving service whose use in CDN is a case of pseudonymizing
1687cation provider queries its subscribed PO for the optimized
answer using the PI in the request ( 3⃝). The PO ﬁrst trans-
lates the PI into the OI by accessing the resolution service
provided by the PR ( 4⃝) and then performs the subscribed
optimization based on the OI with the results returned ( 5⃝).
Finally, the optimal response is forwarded to the client ( 6⃝).
Since any OI-contained message or OI-sensitive process-
ing is isolated from Internet application providers as well as
eavesdroppers between recursive resolver and Internet appli-
cation providers, the privacy on client’s identiﬁer is better
preserved. Meanwhile, the cost of performance degradation
is saved because of the pseudonymous optimization. Each
component of PIC service is detailed as the following:
PI: PI should be well chosen to reveal the least privacy
about Internet client. That is, it should be the least rele-
vant to the client’s location, ISP, identity, and other sensitive
characteristics. Moreover, it should be suﬃcient secret and
unpredictable so that it would be hard for adversaries to
guess. For example, the PI may be a pseudo-random func-
tion of the client’s IP address and a secret quantity known
only to the client. The length of the PI should be large
enough to ensure a suﬃcient entropy. The selection of the
pseudo-random function is a matter private to the client.
Pseudonymizing registration: A record of pseudonymiz-
ing registration should at least include three sections: OI,
PI, validity time, e.g. a triple . The
validity time, represented by the period between the incep-
tion time and the expiration time, deﬁnes the time within
which the mapping between OI and PI should be valid for
the PIC service. One OI may be allowed to map to multiple
PIs so that the client can use diﬀerent PIs for diﬀerent Inter-
net applications. Conversely, the mapping from multiple OIs
and one PI may be prohibited because that will cause ambi-
guity in handling the optimization using OI. pseudonymiz-
ing registration transaction is originated by client and re-
sponded by PR. Client can add, change, or revoke a record
of pseudonymizing registration through registration transac-
tions. To protect the sensitive registration information from
eavesdropping, the communication of registration transac-
tion should be secured, e.g. through public key encryption.
Client: Before using PIC service, a client should ﬁrst gen-
erate a PI corresponding to its OI, and register their map-
ping to a trustworthy PR. For the sake of security, the PI
should set a not too high validity time and therefore periodi-
cally roll over if it is intended to be persistently used. Client
may register multiple PIs for the same OI in the strategy of
attaching diﬀerent PIs to diﬀerent Internet applications or
even diﬀerent services in the same Internet application. Af-
ter a PI is successfully registered, the client can include it
in a request for PIC service. The PIC-aware request may
take the same form as its PIC-oblivious counterpart except
that the intended OI in the latter is substituted by its cor-
responding PI in the former.
PR: PR may be deployed much like a DNS registration
service (namely DNS registry) for its clients or even the pub-
lic. There is a trustworthy guarantee of protecting all reg-
istrants’ privacy at PR. PR has at least two functions: 1)
Registration. PR is responsible for answering pseudonymiz-
ing registration requests from clients.
It responds a suc-
cess message or a failure message with error codes following
some policies or rules. Records of pseudonymizing regis-
tration are stored in a database of PR. To ensure prompt-
ness, stability, and resilience, PR’s registration front-ends