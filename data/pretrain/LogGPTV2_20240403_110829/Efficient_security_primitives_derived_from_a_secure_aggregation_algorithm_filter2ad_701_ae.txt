able to forge a message L(cid:4)
mate node i that successfully passed the checks of some legitimate
node j. Let r be the hash tree root computed by j. Since j ac-
cepted the message authentication, the base station must have re-
leased N(cid:4),(cid:2)r, sb, h(N(cid:4)
)(cid:3) in a prior authenticated broadcast from
the base station. This means that (assuming that the nonce N(cid:4)
was
not repeated, and M ACKi is a MAC whose forgeability is negli-
gible) in some prior execution of the algorithm, node i has (with
almost-certainty) successfully veriﬁed the inclusion of Li in the
hash tree with root vertex r, in the location bound to its ID in the
i (cid:5)= Li this implies a hash colli-
topological binding sb. Since L(cid:4)
sion somewhere in the veriﬁcation path that j computed and the
veriﬁcation path that i computed (i.e.
the two sequences are the
same length, but started with different pre-images and resulted in
the same image r). This implies that the adversary was able to
engineer a hash collision with non-neglible probability.
The authentication primitive described in this section allows the
protocol designer to build protocols where nodes can construct mes-
sages that can be origin-authenticated by any other node in the net-
work. Previously, the only known method for such a capability
We note that not only does the authentication structure give un-
forgeability (i.e. integrity and source veriﬁcation) properties, it also
has the property of non-repudiation in the sense that once a message
with an authentic tag of this form is released, the originating node
cannot plausibly deny that it was responsible for creating the mes-
sage (assuming the base station is not compromised). This makes
this authentication structure somewhat more useful than, for exam-
ple, a MAC using a shared secret key between two nodes (where the
originating node can always claim that the verifying node was the
one which actually originated the message). Based on this property,
it is clear that such tags can be used to create publicly-veriﬁable
commitments; such commitments can be used, for example, to ex-
pose nodes which attempt to cheat in a protocol.
The overhead of the scheme is a signature of length O(log n), the
generation of which causes O(log n) congestion in the network.
7.3 Applications
The use of node-to-node authenticated broadcast in constructing
general resilient applications are too numerous to discuss in detail.
Some examples include: allowing node cluster heads to authen-
tically broadcast schedules to their children; authenticated broad-
casts of node power levels (e.g., for trafﬁc shaping); authenticated
routing distance metrics (for secure routing).
In this section we
brieﬂy focus on some examples of uses of the authentication prim-
itive in constructing other basic security protocols.
7.3.1 Multi-message Signatures
A basic limitation of this HT -based signature scheme is that
nodes must generate signatures in coordinated network-wide phases;
each phase allows each node to generate an authenticator for an ar-
bitrary message Li. In the case where a node has several messages
M1, . . . , Mk that it may wish to authenticate in a given phase, it
could generate a hash tree over these k messages and set Li to be
the root of the tree. Then each message Mi could be individually
authenticated by showing that Mi is a leaf in the hash tree rooted
at Li. Clearly, the messages M1, . . . , Mk must be ﬁxed prior to
executing the network-wide phase and cannot be changed once Li
has been signed. For a more ﬂexible signature method, we can as-
sign each Mi as the “public key” of a one-time signature (such as
Merkle-Winternitz signatures [20]). The nodes may then use these
authenticated one-time public keys to sign up to k ﬁxed-length mes-
sages at any time without needing network-wide coordination. If
loose time synchronization is available, then broadcast authentica-
tion techniques like μTesla are more efﬁcient and can effectively
sign a much larger number of messages without byte-length con-
straints. We describe the details below.
7.3.2 Initializing Hash Chains for μTesla.
The HT -based signature primitive described in this section com-
plements nicely with the μTesla broadcast authentication scheme
described by Perrig et al. [22]. When the HT -based signature
scheme is used to bootstrap μTesla, the two schemes cover each
other’s weaknesses. The HT -based signature has the following
weaknesses: (1) inﬂexibility: it requires the entire network to par-
ticipate in signing one message from each node; (2) long signa-
tures: each signature carries O(log n) hash values of authenticat-
ing information. The μTesla scheme does not suffer either of these
weaknesses but instead has the drawback of being troublesome to
bootstrap: it requires a per-source hash chain “anchor” value to be
somehow loaded onto every verifying node. Due to these issues,
μTesla is typically only used for authentication from base station
to node. The HT -based signature scheme enables node-to-node
use of μTesla, because it provides an easy way to reload hash chain
anchors onto the receiving nodes. When used in this fashion the
drawbacks of HT -based signatures are minimized since, due to the
time-synchronized nature of μTesla, all nodes need to refresh their
hash chain anchors at approximately the same time. Once the hash
chain anchors are initialized on the receiver nodes, the more efﬁ-
cient and ﬂexible μTesla can be used for broadcast authentication.
7.3.3 Distributed Node Revocation.
One application of this authentication primitive is in the dis-
tributed revocation protocol of Chan, Gligor, Perrig and Muralidha-
ran [1]. In that protocol, when one node u detects another node v to
be acting maliciously, a local broadcast (i.e. a broadcast transmis-
sion to all nodes in the neighborhood of v) is used to issue “revoca-
tion votes” against the detected node, such that if enough neighbors
vote indicating they believe v to be malicious then v is ejected from
the network. The original protocol required the use of deterministic
key establishment schemes (e.g. the random pairwise scheme [2]).
In such key distribution schemes, for each node v, there exists a
ﬁxed set of nodes Sv each of which shares a preloaded key with v.
In the revocation scheme, each of the nodes in Sv is thus given a
revocation vote against node v and these votes are authenticated us-
ing a hash-tree mechanism with the votes as the leaves. Since each
of these votes (and their authenticating information) needs to be
stored on the node, this yields a massive memory overhead: each
node must store around |Sv| revocation votes each of which re-
quires O(log |Sv|) authentication information; since |Sv| = O(n),
this means O(n log n) 128-bit hash values must be a-priori loaded
onto each sensor node. Furthermore, since the nodes that share a
pairwise keys with a given node are a subset of the neighbors of
a given node, only a small subset of a given node’s neighbors can
issue a revocation vote against it. With the use of the HT -based
signature scheme, distributed revocation can now work indepen-
dently of the key distribution scheme, because any node u can is-
sue a signed message voting for the revocation of any other node v.
This signature can be veriﬁed by any other node x without need-
ing any additional preloaded information except for the single key
x shares with the base station. Speciﬁcally, each node can cre-
ate a message voting for the revocation of each of its neighbors in
the network, and authenticate each of them in a single pass of the
HT -based signature protocol using the multi-message signature of
Section 7.3.1. This reduces the storage overhead of the scheme to
O(log n + δ) for a node with δ neighbors. This greatly increases
the practicality of distributed node revocation.
8. RELATED WORK
Many secure data aggregation mechanisms for sensor networks
have been proposed [3, 5, 7, 10, 11, 17, 19, 23–25], we review the
CPS and Frikken and Dougherty’s scheme that the mechanisms in
this paper build on in Section 2.
Since we are not aware of other work that studies uses of secure
data aggregation mechanisms to applications other than data aggre-
gation, we discuss other work that addresses authenticated broad-
cast, public key management, and signature schemes for sensor net-
works.
In the area of broadcast authentication for sensor networks, Per-
rig et al. propose μTESLA [22], which unfortunately requires lose
time synchronization. Improvements to μTESLA have been pro-
posed, but they all require lose time synchronization [13]. Luk et al.
propose families of broadcast authentication mechanisms [15], but
the communication overhead of their one-time signature schemes
can be quite substantial.
To provide resistance against computational DoS attacks for sig-
nature-based broadcast authentication in sensor networks, Ning et al.
propose several mechanisms [4, 21]. Fortunately, our approaches
for authentication and signature are inherently robust against com-
putational DoS attacks.
Several works also target the problem of preventing the injection
of false information into the sensor network, for example the work
by Ye et al. [25] or Zhu et al. [26]. The problem we consider in this
work is orthogonal.
Relatively little work has been dedicated to the important prob-
lem of performing public key management in sensor networks. Ning
et al. propose to use hash trees for distribution of node certiﬁ-
cates [6, 14]. By updating the hash trees they provide a mecha-
nism to revoke entities. Chan et al. develop mechanisms for node
revocation in sensor networks [1]. However, their approach is not
applicable for public key management.
Many researchers have studied the problem of efﬁcient sensor
network signatures, for example Liu and Ning [12], Malan et al. [18],
Gupta et al. [9], and Gaubatz et al. [8]. In contrast, we propose a
novel approach that enables a signature operation based on purely
symmetric functions without using one-time signatures, by only
trusting the base station.
9. CONCLUSION
We describe how the HT functionality encapsulated in the CPS
algorithm for secure data aggregation is useful for developing a va-
riety of useful and efﬁcient security applications. In particular, we
show fast and efﬁcient primitives for broadcast authentication, pub-
lic key management, and node-to-node signatures, each of which
has important properties superior in some way to the current best
known protocols in the literature. The reason for this performance
is because they directly inherit, from the original secure data aggre-
gation protocol, speciﬁc optimizations that work best in the struc-
tured tree network on which they operate.
These results highlight the signiﬁcance of the secure data aggre-
gation problem. As data aggregation represents a general descrip-
tion of the speciﬁc distributed computation pattern common in sen-
sor networks, secure algorithms for this problem also represent se-
cure versions of the communication and computation patterns that
are most useful in sensor networks. Hence, secure data aggregation
should not be considered simply a secure version of a sensor net
application, but may be recognized as an important foundational
problem closely related to the ideal of efﬁcient secure computation
and communication in structured networks.
10. ACKNOWLEDGEMENTS
The authors would like to thank the anonymous reviewers for
their helpful comments and suggestions.
11. REFERENCES
[1] H. Chan, V. Gligor, A. Perrig, and G. Muralidharan. On the
distribution and revocation of cryptographic keys in sensor
networks. IEEE Transactions on Dependable and Secure
Computing (TDSC), 2(3):233–247, 2005.
[2] H. Chan, A. Perrig, and D. Song. Random key
predistribution schemes for sensor networks. In IEEE
Symposium on Security and Privacy, May 2003.
[3] H. Chan, A. Perrig, and D. Song. Secure hierarchical
in-network aggregation for sensor networks. In Proceedings
of the ACM Conference on Computer and Communications
Security, Oct. 2006.
[4] Q. Dong, D. Liu, and P. Ning. Pre-authentication ﬁlters:
Providing DoS resistance for signature-based broadcast
authentication in wireless sensor networks. In Proceedings of
ACM Conference on Wireless Network Security (WiSec), Apr.
2008.
[5] W. Du, J. Deng, Y. Han, and P. K. Varshney. A witness-based
approach for data fusion assurance in wireless sensor
networks. In Proceedings of the IEEE Global
Telecommunications Conference, 2003.
[15] M. Luk, A. Perrig, and B. Whillock. Seven cardinal
properties of sensor network broadcast authentication. In
Proceedings of ACM Workshop on Security of Ad Hoc and
Sensor Networks (SASN), Oct. 2006.
[16] S. Madden, M. J. Franklin, J. M. Hellerstein, and W. Hong.
TAG: a tiny aggregation service for ad-hoc sensor networks.
SIGOPS Oper. Syst. Rev., 36(SI):131–146, 2002.
[17] A. Mahimkar and T. Rappaport. SecureDAV: A secure data
aggregation and veriﬁcation protocol for sensor networks. In
Proceedings of the IEEE Global Telecommunications
Conference, 2004.
[6] W. Du, R. Wang, , and P. Ning. An efﬁcient scheme for
[18] D. Malan, M. Welsh, and M. Smith. A public-key
authenticating public keys in sensor networks. In
Proceedings of Symposium on Mobile Ad Hoc Networking
and Computing (MobiHoc), pages 58–67, May 2005.
[7] K. B. Frikken and J. A. Dougherty. An efﬁcient
integrity-preserving scheme for hierarchical sensor
aggregation. In Proceedings of ACM Conference on Wireless
Network Security (WiSec), pages 68–76, Apr. 2008.
[8] G. Gaubatz, J. Kaps, and B. Sunar. Public keys cryptography
in sensor networks - revisited. In Proceedings of European
Workshop on Security in Ad-Hoc and Sensor Networks
(ESAS), 2004.
[9] V. Gupta, M. Millard, S. Fung, Y. Zhu, N. Gura, H. Eberle,
and S. C. Shantz. Sizzle: A standards-based end-to-end
security architecture for the embedded internet. In
Proceedings of the Third IEEE International Conference on
Pervasive Computing and Communication (PerCom), 2005.
[10] L. Hu and D. Evans. Secure aggregation for wireless
networks. In Workshop on Security and Assurance in Ad hoc
Networks, 2003.
[11] P. Jadia and A. Mathuria. Efﬁcient secure aggregation in
sensor networks. In Proceedings of the 11th International
Conference on High Performance Computing, 2004.
[12] A. Liu and P. Ning. TinyECC: A conﬁgurable library for
elliptic curve cryptography in wireless sensor networks. In
Proceedings of Conference on Information Processing in
Sensor Networks (IPSN), SPOTS Track, Apr. 2008.
[13] D. Liu and P. Ning. Multi-level uTESLA: Broadcast
authentication for distributed sensor networks. ACM
Transactions in Embedded Computing Systems (TECS),
3(4):800–836, Nov. 2004.
[14] D. Liu, P. Ning, S. Zhu, and S. Jajodia. Practical broadcast
authentication in sensor networks. In Proceedings of
Conference on Mobile and Ubiquitous Systems: Networking
and Services (MobiQuitous), pages 118–129, July 2005.
infrastructure for key distribution in TinyOS based on elliptic
curve cryptography. In Proceedings of IEEE Conference on
Sensor and Ad hoc Communications and Networks
(SECON), Oct. 2004.
[19] M. Manulis and J. Schwenk. Provably secure framework for
information aggregation in sensor networks. In Proceedings
of the International Conference on Computational Science
and Its Applications (ICCSA), Aug. 2007.
[20] R. C. Merkle. A digital signature based on a conventional
encryption function. In A Conference on the Theory and
Applications of Cryptographic Techniques on Advances in
Cryptology, pages 369–378. Springer-Verlag, 1988.
[21] P. Ning, A. Liu, and W. Du. Mitigating DoS attacks against
broadcast authentication in wireless sensor networks. ACM
Transactions on Sensor Networks (TOSN), 4(1), Jan. 2008.
[22] A. Perrig, R. Szewczyk, J. D. Tygar, V. Wen, and D. E.
Culler. SPINS: Security protocols for sensor networks. Wirel.
Netw., 8(5):521–534, 2002.
[23] B. Przydatek, D. Song, and A. Perrig. SIA: Secure
information aggregation in sensor networks. In Proceedings
of the 1st International Conference on Embedded Networked
Sensor Systems, 2003.
[24] D. Wagner. Resilient aggregation in sensor networks. In
Proceedings of the 2nd ACM Workshop on Security of
Ad-hoc and Sensor Networks, 2004.
[25] Y. Yang, X. Wang, S. Zhu, and G. Cao. SDAP: A secure
hop-by-hop data aggregation protocol for sensor networks.
In Proceedings of the ACM International Symposium on
Mobile Ad Hoc Networking and Computing, 2006.
[26] S. Zhu, S. Setia, S. Jajodia, and P. Ning. An interleaved
hop-by-hop authentication scheme for ﬁltering false data in
sensor networks. In Proceedings of IEEE Symposium on
Security and Privacy, pages 259–271, May 2004.