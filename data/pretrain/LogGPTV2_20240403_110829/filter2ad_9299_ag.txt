         Flags = 0xb8 = 1011 1000,Pointer=0x8,TPF_LEFT_CHILD=0x10,TPF_LAST_CHILD=0x20,TPF_DATA_POS=0x80
    _cchLeft = 00680002
    _pFirstChild = 04896ae0,Text
    _pNext = 04896c60,Pointer
    _pLeft = 048a0624,
    _pRight = 04896c60,Pointer
    _ulRefs_Flags = 00000040
    pSmartObject = 00000000
    _pTextData = 00000000
    _dwPointerAndGravityAndCling = 04f3ce70
我根据CTreePos中的_pFirstChild和_pNext成员，可以还原出此漏洞PoC所对应的DOM树结构如下图所示：
我根据CTreePos中的_pLeft和_pRight成员，可以还原出此漏洞PoC所对应的DOM流结构如下图所示：
### 6.3 漏洞产生的根本原因分析
以下是动态调试过程中，关键部分的WinDbg输出内容：
    (638.e60): Break instruction exception - code 80000003 (first chance)
    ntdll!DbgBreakPoint:
    00007ffd`64a43150 cc              int     3
    0:020> bp MSHTML!CSpliceTreeEngine::RemoveSplice
    0:020> bp 63A46783  ; Crash前调用的第一个CTreePos::GetCp()
    0:020> bp 63A467B5  ; 分配存储要删除的元素的堆块,operator new[]()
    0:020> bp 63A468CF  ; 获取文本的未截断长度，Tree::TextData::GetText()
    0:020> g
    Breakpoint 0 hit
    MSHTML!CSpliceTreeEngine::RemoveSplice:
    63a46320 8bff            mov     edi,edi                                        ; 第一次中断,b.innerHTML = Array(40370176).toString();
    0:008:x86> g
    Breakpoint 0 hit
    MSHTML!CSpliceTreeEngine::RemoveSplice:
    63a46320 8bff            mov     edi,edi                                        ; 第二次中断,b.innerHTML = "";
    0:008:x86> g
    Breakpoint 1 hit
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x463:
    63a46783 8b4e14          mov     ecx,dword ptr [esi+14h] ds:002b:0508ca1c=04aae54c
    0:008:x86> p
    eax=00000000 ebx=0508cb38 ecx=04aae54c edx=00000000 esi=0508ca08 edi=04aae54c
    eip=63a46786 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl nz na po nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x466:
    63a46786 e8dc118900      call    MSHTML!CTreePos::GetCp (642d7967)              ; 返回值为0x2,和标签对应的字符数
    0:008:x86> dd ecx-0xc l10   ; CTreeNode,_ptpSourceL(),0x04aae548 = 0x36 = 54,ETAG_HEAD = 54
    04aae540  04a82d40 04aae240 70020036 00000061
    04aae550  00000000 04a84b40 04aae24c 04a84b40
    04aae560  04aae564 00000052 00000000 04aae5ac
    04aae570  04aae5c4 04aae54c 04aae5ac ffffffff
    0:008:x86> p
    eax=00000002 ebx=0508cb38 ecx=00000000 edx=04a3d534 esi=0508ca08 edi=04aae54c
    eip=63a4678b esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x46b:
    63a4678b 8b4e18          mov     ecx,dword ptr [esi+18h] ds:002b:0508ca20=04aae5c4
    0:008:x86> p
    eax=00000002 ebx=0508cb38 ecx=04aae5c4 edx=04a3d534 esi=0508ca08 edi=04aae54c
    eip=63a4678e esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x46e:
    63a4678e bf01000000      mov     edi,1
    0:008:x86> dd ecx-0x24 l10  ; CTreeNode,_ptpSourceL(),0x04aae5a8 = 0x12 = 18,ETAG_BODY = 18
    04aae5a0  04a86320 04aae240 70020012 00000061
    04aae5b0  00000000 00000000 04aae564 04aae564
    04aae5c0  04a849f0 00000062 00000000 00000000
    04aae5d0  04a849f0 04a849f0 04a84ae0 ffffffff
    0:008:x86> p
    eax=00000002 ebx=0508cb38 ecx=04aae5c4 edx=04a3d534 esi=0508ca08 edi=00000001
    eip=63a46793 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x473:
    63a46793 2bf8            sub     edi,eax                                        ; 1-2=-1
    0:008:x86> p
    eax=00000002 ebx=0508cb38 ecx=04aae5c4 edx=04a3d534 esi=0508ca08 edi=ffffffff
    eip=63a46795 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei ng nz ac pe cy
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000297
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x475:
    63a46795 e8cd118900      call    MSHTML!CTreePos::GetCp (642d7967)              ; 返回值为0x00680004
    ; Array(40370176),40370176-1 = 0x267ffff
    ; CTreeDataPos->DATAPOSTEXT->_cch(25bit),0x67ffff
    ; 0x00680004 = 0x67ffff + 0x5
    ; ,,,,标签的字符数每个为1
    0:008:x86> p
    eax=00680004 ebx=0508cb38 ecx=00000000 edx=04aae5c4 esi=0508ca08 edi=ffffffff
    eip=63a4679a esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x47a:
    63a4679a 8b4e18          mov     ecx,dword ptr [esi+18h] ds:002b:0508ca20=04aae5c4
    0:008:x86> p
    eax=00680004 ebx=0508cb38 ecx=04aae5c4 edx=04aae5c4 esi=0508ca08 edi=ffffffff
    eip=63a4679d esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x47d:
    63a4679d 8d1407          lea     edx,[edi+eax]                                  ; edx = 0x00680003
    ; _ptpSourceL(),_ptpSourceL()
    ; CTreeDataPos->DATAPOSTEXT->_cch(25bit),0x67ffff
    ; 0x00680003 = 0x67ffff + 0x4
    ; ,,,标签的字符数每个为1
    ......
    0:008:x86> g
    Breakpoint 2 hit
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x495:
    63a467b5 8b442458        mov     eax,dword ptr [esp+58h] ss:002b:0508c800=00680004
    0:008:x86> p
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x499:
    63a467b9 3b442460        cmp     eax,dword ptr [esp+60h] ss:002b:0508c808=00680004
    0:008:x86> p
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x49d:
    63a467bd 0f8f36ac1400    jg      MSHTML!CSpliceTreeEngine::RemoveSplice+0x14b0d9 (63b913f9) [br=0]
    0:008:x86> p
    eax=00680004 ebx=0508cb38 ecx=04aae5c4 edx=00680003 esi=0508ca08 edi=ffffffff
    eip=63a467c3 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x4a3:
    63a467c3 8d0c12          lea     ecx,[edx+edx]
    0:008:x86> p
    eax=00680004 ebx=0508cb38 ecx=00d00006 edx=00680003 esi=0508ca08 edi=ffffffff
    eip=63a467c6 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x4a6:
    63a467c6 e8c3fa1e00      call    MSHTML!ProcessHeapAlloc (63c3628e)          ; 分配的堆块是以文本截断长度进行分配的
    0:008:x86> p
    eax=21d4e020 ebx=0508cb38 ecx=00d00006 edx=00000000 esi=0508ca08 edi=ffffffff
    eip=63a467cb esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl zr na pe nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x4ab:
    63a467cb 89465c          mov     dword ptr [esi+5Ch],eax ds:002b:0508ca64=00000000
    0:008:x86> !heap -x eax
    Entry     User      Heap      Segment       Size  PrevSize  Unused    Flags
    -----------------------------------------------------------------------------    0000000021d4e018  0000000021d4e020  0000000000670000  0000000000670000    d01000         0       ffa  busy extra virtual
    0:008:x86> g
    Breakpoint 3 hit
    eax=000002e4 ebx=0508cb38 ecx=04a849f0 edx=00000003 esi=0508ca08 edi=0000fdef
    eip=63a468cf esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl nz na po nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x5af:
    63a468cf 8b4920          mov     ecx,dword ptr [ecx+20h] ds:002b:04a84a10=1d02f020
    0:008:x86> dd ecx lc    ; CTreeDataPos(Text)
    04a849f0  000002e4 00000002 04aae564 04aae54c
    04a84a00  04aae5ac 04aae5c4 00000041 00000000
    04a84a10  1d02f020 8267ffff 00000000 00000000
    0:008:x86> !heap -x 1d02f020
    Entry     User      Heap      Segment       Size  PrevSize  Unused    Flags
    -----------------------------------------------------------------------------    000000001d02f018  000000001d02f020  0000000000670000  0000000000670000   4d01000         0       ffa  busy extra virtual
    0:008:x86> dd 1d02f020 l10  ; Tree::TextData对象
    1d02f020  00000002 0267ffff 002c002c 002c002c
    1d02f030  002c002c 002c002c 002c002c 002c002c
    1d02f040  002c002c 002c002c 002c002c 002c002c
    1d02f050  002c002c 002c002c 002c002c 002c002c
    0:008:x86> dd 1d02f020+0x2680000*2-0x10 l10
    21d2f010  002c002c 002c002c 002c002c 002c002c
    21d2f020  002c002c 0000002c 00000000 00000000
    21d2f030  00000000 00000000 00000000 00000000
    21d2f040  00000000 00000000 00000000 00000000
    0:008:x86> p
    eax=000002e4 ebx=0508cb38 ecx=1d02f020 edx=00000003 esi=0508ca08 edi=0000fdef
    eip=63a468d2 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl nz na po nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x5b2:
    63a468d2 8d442414        lea     eax,[esp+14h]
    0:008:x86> p
    eax=0508c7bc ebx=0508cb38 ecx=1d02f020 edx=00000003 esi=0508ca08 edi=0000fdef
    eip=63a468d6 esp=0508c7a8 ebp=0508c9f0 iopl=0         nv up ei pl nz na po nc
    cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202
    MSHTML!CSpliceTreeEngine::RemoveSplice+0x5b6:
    63a468d6 50              push    eax                                            ; 存储实际获得的文本长度的局部变量
    0:008:x86> p
    eax=0508c7bc ebx=0508cb38 ecx=1d02f020 edx=00000003 esi=0508ca08 edi=0000fdef
    eip=63a468d7 esp=0508c7a4 ebp=0508c9f0 iopl=0         nv up ei pl nz na po nc