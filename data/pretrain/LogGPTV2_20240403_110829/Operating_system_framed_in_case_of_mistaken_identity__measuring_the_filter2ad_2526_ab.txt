### Methodology

#### 3.1.1 Recruitment and Screening
Participants were recruited through a Human Intelligence Task (HIT) posted on Amazon’s Mechanical Turk, as detailed in Appendix A. To be eligible, participants had to meet the following criteria:
- Be at least 18 years old.
- Be located in the United States while taking the survey.
- Have an MTurk approval rating of at least 95%.
- Not have participated in any previous similar studies from our lab, including pilot versions of this experiment.

We verified that participants were using either Windows Vista/7 or Mac OS X or higher by checking their browser-submitted HTTP headers. Each participant who qualified and completed the survey was compensated with $1.00.

#### 3.1.2 Tasks
Upon accepting the HIT, participants were redirected to a survey site hosted on our research institution's domain. The survey requested that participants maximize their browser window to make the spoofed window less suspicious. We hypothesized that an attacker could use social engineering to convince most users to maximize their browsers.

The survey consisted of three sequential game evaluation forms, each asking participants to:
- Click on a link to open a third-party online gaming website (a different one for each form).
- Play an online game for two to three minutes.
- Answer questions about the game, including its enjoyability and age-appropriateness.

Participants were instructed to open the links in a new browser tab by pressing the ctrl (Windows) or command (Mac OS) key. After playing each game, they were to close the tab and return to the survey form. The evaluation form, provided in Appendix B, also included an option to report if they were unable to play the game.

The first two games were real, operated by genuine gaming websites outside our control, to add legitimacy to the study. The third and final website, yourgamefactory.net, was the confederate site we secretly operated. Here, participants were told they needed to install new software to play the game and saw a spoofed credential-entry window. The exact message and layout of the spoofed windows varied based on the participant’s treatment group.

If participants entered their credentials into the confederate website, they encountered a page explaining that the game had been removed. Regardless, after completing the evaluation, which required them to check a box indicating they couldn't or wouldn't play the game, they were presented with our exit survey.

#### 3.1.3 Exit Survey
The primary methodological challenge was determining whether participants' credentials would have been compromised by our simulated attack. Asking participants directly if they entered their genuine credentials could result in underreporting due to potential mistrust and fear of misuse.

To address this, we recorded the length \( l \) of the password field without sending the actual content to our server. If the field was non-empty (\( l > 0 \)), we asked the following 'yes' or 'no' question:

**Question:**
You entered \( l \) characters into the password field of the dialog box. This password you entered is stored in your browser but we have not sent your password to our servers. Was the password you entered a real password for an account on your computer?
- [ ] Yes, I did enter a genuine password (we’ll immediately delete any records of the password we kept in your browser)
- [ ] No, I did not enter a genuine password

If the answer was "No," we followed up with another question to identify participants who might have entered their genuine passwords but denied doing so:

**Follow-up Question:**
Since you did not enter a genuine password into the password field of the dialog box, may we collect the contents of this field for analysis?
- [ ] Yes, since the password I entered is not a genuine password, you may send it to your servers.
- [ ] No, the password I entered was actually a genuine password. Please immediately delete any records of it in my browser and do not send it to your servers for analysis.
- [ ] No, I have another reason for not wanting the password I entered sent to your servers (please explain)

Participants who admitted to entering genuine credentials in either of these questions were considered compromised.

For participants who did not enter genuine credentials, we asked them to explain why and to indicate which factors contributed to their decision. These factors included legitimate concerns and items that should not have been concerns. Among the options was one stating, "I thought that the password-entry window was trying to steal my password." Participants who checked this option were considered aware of the spoofing attack; those who did not were considered oblivious.

After these questions, we disclosed the deception and explained the purpose of the study. We then asked additional questions about their suspicions and actions during the study, followed by demographic questions.

### 3.2 Instrumentation
We instrumented the confederate gaming website to record:
- Participants' OS type, browser client name and version, screen size, and browser viewport size.
- The position of the top left corner of the browser's viewport relative to the top left corner of the screen.
- Mouse movements, clicks within the page content, and number of keystrokes in the username and password fields.
- Timing of these events in milliseconds.

If participants tried to submit credentials using the spoofed window, we encrypted the contents of the username and password fields using a random, one-time-use symmetric encryption key. The ciphertext was stored in the client's browser local storage, and the key was discarded from the client to prevent decryption. This allowed us to reduce the risk of storing sensitive information while providing the option to transmit the data later if consent was obtained.

### 3.3 Implementing Spoofed Windows
We created the spoofed OS windows using HTML, CSS, and JavaScript, without Flash or other plugins. The windows could be moved within the browser content region. For Windows treatments, we used the default Windows color scheme and implemented a translucent chrome, matching the fonts of genuine Windows dialogs. On Mac OS, we matched the OS fonts, colors, and other aspects of the genuine window's appearance.

Genuine credential-entry windows often have the username field pre-filled. Since our simulated attacks did not have access to the username, these fields were left blank. We used a generic 'flower' icon to represent the user account in the UAC dialog, as an attacker would not have access to a user-specific icon.

### 3.4 Treatment Groups
Table 1 shows the 11 treatment groups in our experiment. Participants using a browser on Windows were randomly assigned one of 7 treatments: 3 CredUI treatments and 4 UAC treatments. Participants using a browser on Mac OS were randomly assigned to one of 4 MacOS treatments.

#### CredUI
In the CredUI treatment, a webpage appeared explaining that the game was being prepared (see Figure 2a). After four seconds, the spoofed CredUI window (Figure 1c) was overlaid. The browser name (e.g., "Internet Explorer" or "Chrome") was placed in the heading. The username field was left blank, with a label "Username" overlaid on top.

#### UAC
In the UAC1 treatment, the webpage stated that the game required Microsoft Silverlight (Figure 2b). After four seconds, a spoofed UAC window (Figure 1b) appeared, asking for credentials to install Silverlight. The UAC2 treatment was identical, except it instructed participants to verify the publisher (Figure 2c).

#### MacOS
For Mac OS, we simulated the installation of QuickTime. The sequence began with a dialog describing the software (Figure 2d), followed by a request for credentials. After four seconds, a spoofed installation-description dialog (Figure 3) appeared. Only after clicking to continue did the spoofed password-entry window (Figure 1a) appear. In the MacOS2 treatment, the installation-description step was omitted.

Mac OS places labels to the left of text fields, so the username field was empty. The credential-entry windows were centered on the screen, and the 'T' in QuickTime was correctly capitalized in the spoofed dialog.