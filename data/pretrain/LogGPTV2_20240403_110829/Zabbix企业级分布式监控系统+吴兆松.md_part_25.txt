名称
修改日期
jcmd.e
2013/10/1216:18
2013/10/1216:18
图7-33
连接JMX服务，这里为10.10.10.10:10053，表示匿名用户连接，如图7-34
所示。
197
---
## Page 214
Zabbix企业级分布式监控系统
JConsale：新建连接
新建连接
本地进程（）
名称
PID
sun.toolsjconsole.JConsole
9540
远程进程（）
10.10.10.1010053
tpoztgt：或ser
Jas:lt:protcoolzt/1t:sapzt
用户名()：
口令(）：
连接(C)取消
图7-34
例如，参数Memory下的NonHeapMemoryUsage，其设置如图7-35所示。
连接(窗口W帮助（H
概览内存线程类概要MBean
JMImplementation
属性值
名称
值
java.lang
ClassLoading
表格式导航
Compilation
Collector
组合导
名称
值
noryUsage
mmitted
40370176
init
35815424
X
123731968
2207007
操作
通知
HemoryManage
MemoryPool
 Code Cache
刷新
图7-35
2.检测JMX 数据的获取
通过命令行获取jconsole中的数据。
shell# wget http://crawler.archive.org/cmdline-jmxclient/cmdline-
jmxc1ient-0.10.3.jar
shell# java -jar cmdline-jmxclient-0.10.3.jar - 10.10.10.10:1005
3 java.lang:type=Memory NonHeapMemoryUsage
10/25/2013 18:07:49 +0800 org.archive.jmx.C1ient NonHeapMemoryUsa
ge:
committed:32178176
init:24313856
max: 224395246
used:15336752
通过上面的命令，我们可以对JMX数据进行查询，这样就能验证JIMX配置
和监控的值是否正确，同时也能够发现Key需要的参数。
198
---
## Page 215
第7章
监控方式剖析
3.配置JMX的Items
在Items中的设置如图7-36所示，Key来自图7-35中的数据，在Items添加
语句如下：
jmx["java.lang:type=MemoryPool",NonHeapMemoryUsage.used]
Name mem Non-Heap Memory used
Type
JMXaqent
、
Key
[jmx[java.lang:type=Memory",NonHeapMemoryUsage.used]
Username
Password
Type ofinformationNumeric（unsianed）
Data tyoeDecimal
图7-36
相信通过这个例子的学习，读者应该知道如何自定义JMX的Items。
7.7.7监控Tomcat
1.Tomcat配置JMX
shell#vim/usr/sbin/tomcat6#源码安装修改catalina.sh，放在开头即可。
export CATALINA_OPTS="SCATALINA_OPTS -Dcom.sun.management.jmxremo
te"
te.port=10053"
o
te.authenticate=false"
export CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremo
te.ssl=false"
将以上内容添加到如图7-37框线所示的位置。
fi
CLASSPATH="${CLASSPATH):$(CATALINA_ HOME}/bin/bootStrap.jar"
CLASSPATH="s{CLASSPATH):${CATALINA_HOME)/bin/tomcat-juLi.jar""
CLASSPATH=s(CLASSPATH):s（build-classpathcommons-daemon2>/dev/nulL)"
export CATALINA_oPTS="sCATALINA_OPTS-Dcom.Sun.management.jmxremo te.authenticate=false
export CATALINA_OPTS=sCATALINA_OPTS-Dcom.sun.management.jmxremo te.ssl=false"
if ["s1"="start" 1;then
图7-37
重启Tomcat程序的语句如下。
shell# service tomcat6 stop
shell# service tomcat6  start
199
---
## Page 216
Zabbix企业级分布式监控系统
2.Web中对主机添加JMX监控方式
添加Host的时候，选择JMX的监控方式，端口值为10053，这里的IP地址
10.1.1.5（被监控端）是JMX监控方式所在的主机，如图7-38所示。
JMXinterfaces10.1.1.5
IPDNS10053
Add
图7-38
选择Tomcat模板，如图7-39所示。
HostTemplatesIPMIMacrosHostinve
Name
TemplateAppZabbix ServerUninkmk
Template App Agentless
Template Qs Linux Unlink Unlink-sn
TemplateAppMySQL
Template App ZabbixAgent
TemplateAppZabbixSer
Sav
TemplateIPMIIntelSR1530
TemplateIPMIIntel SR1630
Templats 3MX Generic
TenplateJMXTomcat
图7-39
7.7.8Weblogic的监控
首先安装Weblogic，本例的安装目录为/opt/weblogic，实例为webapp。
shell# cd /opt/weblogic/user_projects/domains/webapp/
shell# vim bin/setDomainEnv.sh
export JAVA_OPTIONS="${JAVA_OPTIONS) -Dcom.sun.management.jmxremo
te.p0rt=10053"
export JAVA OPTIONS="$(JAVA OPTIONS) -Dcom.sun.management.jmxremo
te.authenticate=false"
export JAVA_OPTIONS="${JAVA_OPTIONS) -Dcom.sun.management.jmxremo
te.ssl=false”#修改的参数位置如图7-40框线所示部分
JAVA_PROPERTIES-"${JAVA_PROPERTIES}${CLUSTER_PROPERTIES)"
export JAVA_PROPERTIES
export JAVA_OPTIONS="s{JAVA_OPTIONS}-Dcom.sun.management.jmxremote"
exportJAVA_OPTIONS="${JAVA_OPTIONS)
exportJAVA_OPTIONS="S{JAVA_OPTIONS)
-Dcom.sun.management.jmxremote.authenticate=false
export JAVA_OPTIONS="$(JAVA_OPTIONS)-Dcom.sun.management.jmxremote.ssl=false"
JAVA_OPTIONS="s{JAVA_oPTIONS) ${enableHostswapFlag)-ea -da:com.bea...-da.javelin..
sole..."
export JAVA_OPTIONS
1
图7-40
shell#./startWebLogic.sh#启动WebLogic服务，如图7-41所示
用ps命令查看启动的进程，可查看刚才添加的JMX相关参数，如图7-42所示。
200
---
## Page 217
第7章监控方式剖析
L5Start Mode=production
ver_10.3/sery
g1cbpwebn
s.jar:
tn:/sbtn:/b1o:/usw/sern:/usr/bin:/ver/1ona//jdk1.7/bin/msr/local/g.a.cherant
TM）SE
otssotunm4-nvironvent(bufud24045-b1mixed
图7-41
-comsun.management.jmxremote-Dcom.sun.management.jmxremote.port-10053Dcom.sun.management.mxremote.authen
图7-42
添加监控模板的内容在这里就不详叙了。
7.8命令的执行
1. system.run
system.run是Zabbix-Agent的一个Key，这个Key在默认情况下是不能使用的。
若要使用这个Key，需在/etc/zabbix/zabbix_agentd.conf中修改为EnableRemote
Commands=1（如图7-43所示）。注意，这个Key如果没有远程执行命令的需要，
为了安全考虑，可以将其关闭，在关闭后，Action 中的远程命令也将无法使用，如
果将其开启，请务必保证
Zabbix-Server和Zabbix-Agent
之间的通信安全，防止被黑
EnableRemotecommands=0
客劫持而造成损失。
图7-43
例如，执行以下命令：
shell# zabbix_get -s 127.0.0.1 -k system.run["ls /"]
bin
boot
dev
etc
home
lib
2.Remotecommand
有关在Action中配置远程命令的执行，请参考6.3.6节。
201
---
## Page 218
第8章分布式监控
Zabbix的架构模式分为Proxy和Node，然而，在Zabbix2.4中，已经不再支
持Node模式了，故本章也不再介绍这种模式。除了架构，被监控端的工作模式
（主动模式和被动模式）也是构建分布式监控必须考虑的因素。本章对分布式监控
方式进行了详细讲解，构建大型监控环境的读者需深入理解。
8.1代理架构
Zabbix是一个分布式的监控系统，这意味着一个中心点、多个分节点的模式可
以正常运行。这种情况适合于跨机房、跨地域的网络监控系统。从多个节点收集数
据，而每个节点下可以采集多个设备的数据，从而轻松地构建分布式监控系统。
Zabbix代理（Proxy）可以用在以下环境中。
·监控远程区域。
·监控拥有不可靠网络连接的区域。
·当监控数以千计的设备时分担Zabbix-Server服务器的负载。
·简化分布式监控的维护。
Proxy架构的使用环境可以用图8-1来表示。
Zabbix-Prox
Zabbix-Server Routefirewall
firewall
Route
Zabbix-Agent
图8-1
Proxy和Server之间只需要一个TCP端口连接。因此，从安全方面考虑，需
要一条防火墙规则来确保数据传输的安全。
所有的代理（Proxies）采集到的数据在传送给服务器之前都保存在本地。这
样，临时与服务器断开连接也不会导致数据丢失。Proxy配置文件中的参数
ProxyLocalBuffer和ProxyOfflineBuffer控制数据在本地保存的时间。
---
## Page 219
第8章分布式监控
1.安装Zabbix-Proxy
在用源码安装Zabbix的时候（安装的位置与Zabbix-Server不在同一台机器
中），加上--enable-proxy参数。
RPM安装方式下，默认已经开启了此参数，RPM用YUM安装方式的语句如下：
shell# rpm -ivh http://repo.zabbix.com/zabbix/2.2/rhe1/6/x86_64
/zabbix-release-2.2-1.el6.noarch.rpm
s-s sxox-x Axox-xz- Tsu  #
er
注意：若zabbix-release软件的版本有更新，请读者下载并安装最新的版本，
地址如下：
http://repo.zabbix.com/zabbix/2.2/rhe1/6/x86_64/
2.导入Zabbix-Proxy的数据库
Zabbix-Proxy数据库类型可以选择MySQL、Oracle、SQLite等，这里采用
MySQL
Zabbix-Proxy的数据创建和Zabbix-Server相同。
shell# service mysqld start
-oo- su #
mysql> create database zabbix-proxy character set utf8;
ostidentifiedby 'zabbix';
mysql> flush privileges;
与Zabbix-Server导入数据唯一的不同是，前者只需导入schema.sql即可。
mysql> source
/usr/share/doc/zabbix-server-mysql-2.2.2/create/s
chema.sql;
官方的RPM安装路径如上，如果是其他方式，读者需要输入正确的路径。
3.配置zabbix_proxy.conf
zabbix_proxy.conf重要的参数如表8-1所示，读者需要对这些参数进行深入
理解。
表8-1
参
数
参数配置
描述
ProxyMode=0
默认参数值为O，即Zabbix-Proxy工作于主动模式
ProxyMode
ProxyMode=1
表示Zabbix-Proxy工作于被动模式
该参数工作于主动模式（ProxyMode=0），从X.X.X.X这个IP
Server
Server=X.X.X.X
地址的Zabbix-Server获取监控配置信息。被动模式中此参数无效
ServerPort
ServerPort=10051
默认参数为10051，工作于主动模式，被动模式中此参数无效
203
---
## Page 220
Zabbix企业级分布式监控系统
续表
参
数
参数配置
描
述
ZabbixProxy的主机名字，需要注意，这个名字要具有唯
一性，不能重复，在配置Proxy时，Web中的配置会用到
Hostname
Hostname=Zabbixproxy
此参数，即Administration-DM-Create proxy-Proxy name，这
个是配置zabbix-proxy的重点
Hostnameltem
Hostnameltem=system.hostname
该参数是在Hostmame没有定义的时候才会生效
ListenPort
ListenPort=10051
Zabbix-Proxy的默认端口
SourceIP
SourceIP=X.X.X.X
用于多网卡环境，指定Zabbix-Proxy连接的外网IP地址
DBHost
DBHost=localhost
Zabbix-Proxy的数据库IP地址
DBNaine
DBName=zabbix_proxy
Zabbix-Proxy的数据库名称
DBUser
DBUser-root
Zabbix-Proxy的数据库用户名
DBPassword
DBPassword=zabbix
Zabbix-Proxy的数据库密码
DBSocket
DBSocket=/tmp/mysql.sock
Zabbix-Proxy 的 mysql.sock 文件
4.启动Zabbix-Proxy服务
shell# service
zabbix-proxy
start
shell# chkconfig
zabbix-proxy
on
5.在ZabbixGUI中配置Zabbix-Proxy
配置步骤为：单击Administration→DM，选择Proxies→Createproxy，如图8-2
所示。
User
5Scn
CONFIGURATION OF PROXIES
Proxyname
Zabbixproxy
ProxymodeActive
Hosts Proxy hosts
Otherhosts
api.itnihao.com
host2
host3
图8-2
图8-2中的各参数说明如下。
·Proxy name, 即Zabbix-Proxy的hostname。
·Proxymode，即Zabbix-Proxy的工作模式，分被动和主动，默认是主动模式。
·Hostsproxyhosts，即选择哪些机器处于Proxy模式。
204
---
## Page 221
第8章分布式监控
说明：Proxy name必须和 zabbix_proxy.conf中的Hostname参数一致，即这里
的Proxyname是来自各个Node服务器中定义的zabbix_proxy.conf 中Hostname
的参数值，各代理节点的Hostname需唯一（假如有5个Proxy，那么配置的时候
需要分别添加这5个Proxy，每个Proxy的Hostname对应zabbix_proxy.conf中的
Hostname），这是成功配置Proxy的重要参数。
6.添加Proxy架构的主机监控
添加主机的方式和正常模式一样，唯一的不同是Monitoredbyproxy选项选择
的是Proxy的名称，如图8-3所示。
Host TemplatesIPMiMacrosHostinventory
Host name zabbix-agent.itnihao.con
Visiblename
Sdnooun sdno
Devops
Agentinterfa
IPaddress
DNSname
10.10.10.10
Add
SNMPinterfacesAdd
JMXinterfaces
Add
Monitored by proxy
ZabbixDroxv
StatusMonitored
Save
图8-3
8.2节点架构
节点架构与Proxy相似，唯一的不同是节点（Node）架构中，Node本地是一
个独立的Zabbix-Server，可以拥有自己的前端，每个Node 可以分别进行独立管
理，Node架构适用于这样的环境：一个公司有多个分公司，而每个分公司有自己
的ZabbixServer管理人员，可以对自己的Zabbix-Server进行独立管理，但监控数
据需要汇总到总公司。这种架构在实际的生产环境中维护起来比较麻烦，故一般
不采用这种架构。
在Zabbix2.4中，由于Node模式在大型分布式监控系统架构中存在的问题较
205
---
## Page 222
Zabbix企业级分布式监控系统
多，将不再支持Node架构，仅支持Proxy一种分布式架构。
本书将不对这种架构的搭建进行讲解，读者如果有需要，请参考以下官方地址。
https://www.zabbix.com/documentation/2.2/manual/distributed_moni
toring/nodes
被动模式和主动模式
8.3
Zabbix-Agent的工作方式有Active（主动模式）和Passive（被动模式）。
Zabbix-Server和Zabbix-Agent之间的通信是Zabbix的专用协议，数据格式为
JSON。主动模式由于是Agent将采集到的数据主动发送给Server，而不需要Server
每次连接Agent等待采集，所以采用主动模式会使Zabbix-Server具有最好的性能。
在大型环境中，一定要将工作模式设置为主动模式，并尽可能地采用更多的Proxy，
以降低Server的负担。
8.3.1被动模式
1.被动模式的配置
默认情况下，Zabbix-Agent工作在被动模式下，工作的模式是由Key和zabbix
agentd.conf参数配置决定的。
在Items中，将Items的检测方式设置为被动模式，如图8-4所示（默认模式，
无须修改）。
Host Percona MysQL Server Template
Name
Unflushed Log
TypeZabbix agent
日
Key
MySQL.unflushed-log
rmation Numeric(float)
图8-4
默认是被动模式，如图8-5所示。
Key
Interval
HistoryTrends
Type
Applications
MySQL.unflushed-log
OOE
90
365
MySQL
MySQL.uncheckpointed-bytes
300
06
365