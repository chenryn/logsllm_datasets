# The Devil is in the Details: Revealing How Linux Kernel `put_user` Puts Systems at Risk

## Authors
- **Edward Lo (罗元琮)**
  - Security Research and Development Engineer at Qihoo 360
  - Specializes in kernel vulnerability discovery and exploitation
  - Technical Lead for "360 Super ROOT"
- **Chiachih Wu (@chiachih_wu)**
  - Security Research and Development Engineer at Qihoo 360
  - Focuses on Android/Linux system security
  - Founding member of C0RE Team (c0reteam.org)

## Vulnerabilities Discussed
- **CVE-2013-2094 (perf_swevent_init)**
- **CVE-2013-2597 (acdb)**
- **CVE-2012-4220 (diag)**
- **CVE-2012-6422 (ExynosAbuse)**
- **CVE-2013-6123 (video100)**
- **CVE-2009-2848 (put_user on ARM32)**

### CVE-2009-2848: `put_user(x, addr)` on ARM32
- **Description**: When `CONFIG_CPU_USE_DOMAINS` is not set, `put_user()` can lead to arbitrary memory writes.
- **Mechanism**: The `addr` parameter is checked by hardware using STRT/STRBT/STRHT instructions. Without `CONFIG_CPU_USE_DOMAINS`, `put_user()` allows for arbitrary memory writes.

## Timeline of Events
| Date          | Event                                                                                      |
|---------------|---------------------------------------------------------------------------------------------|
| 2010-11-04    | T macro and `CONFIG_CPU_USE_DOMAINS` are upstreamed                                         |
| 2012-01-25    | T macro is renamed to TUSER                                                                  |
| 2012-09-09    | !`CONFIG_CPU_USE_DOMAINS` case is fixed                                                     |
| 2013-07       | `put_user` vulnerability identified through `clone()`                                       |
| 2013-09-11    | Incomplete patch to fix `__put_user_*` vulnerability is upstreamed                          |
| 2013-11-14    | Most Android OS maintainers start merging the patch to fix !`CONFIG_CPU_USE_DOMAINS` case  |
| 2016-07-31    | `__put_user_*` vulnerability identified through code/patches auditing                       |

### 0-day Discovery
- **CVE-2016-3857**: We identified a 0-day in the ARM/Linux kernel.
- **Affected Devices**:
  - Google Nexus 4 ("mako"), Nexus 7 (2013 version, "flo")
  - Huawei Ascend Mate 7 series, Honor 4X/6/6 Plus series, MediaPad X1 7.0
  - Lenovo A390t/A750e
  - Meizu MX series (M032, M040/045, M351/353/355/356)
  - OPPO Find 5 (X909/X909T)
  - Samsung Galaxy Trend (GT-S7568/SCH-I879), Galaxy Trend II (GT-S7572/GT-S7898/SCH-I739), Galaxy Tab 3 7.0 (SM-T211), Galaxy Core (GT-I8262D)
  - Sony Xperia (LT26i/26ii/26w)
  - Xiaomi MI 2 (2/2A/2C/2S/2SC)

## Exploitation Techniques
- **Arbitrary Memory Read/Write**: With arbitrary memory read/write capabilities, we can modify members in the `struct file_operations`.
- **Targets for Exploitation**:
  - `/dev/ptmx`
  - `/dev/binder`
  - `/dev/ashmem`

### Example Exploitation
- **Step 1**: Modify `.fsync` in `ptmx_fops` to point to shellcode.
- **Step 2**: Trigger it by opening `/dev/ptmx` and calling `fsync(fd)`.
- **Step 3**: Follow the call chain: `fsync(fd) → do_fsync() → vfs_fsync() → vfs_fsync_range() → file->f_op->fsync()`.

### Universal Exploit
- **Info Leak**: With an info leak (e.g., CVE-2016-3809), we can write a universal exploit without needing specific symbols.
- **qtaguid Driver**: Whenever a socket is opened in Android, it is tagged using the `qtaguid` netfilter driver.
- **Control Interface**: The interface is accessible via `/proc/net/xt_qtaguid/ctrl`, revealing kernel virtual addresses for sockets.

### Overwriting `struct sock`
- **Process**:
  - Find the socket address.
  - Use the vulnerability to overwrite its `proto` pointer, pointing it to a fake `struct proto`.
  - Trigger the modified function.

### ARM32 and ARM64 Considerations
- **PxN Enabled**: On some ARM32 and all ARM64 phones, PxN (Privileged Execute Never) is enabled, preventing user-mode shellcode execution.
- **Kernel ROP**: However, control flow can still be manipulated within kernel space (Return-Oriented Programming).

### Additional Finding
- **CVE-2016-2441**: Similar issue identified in Qualcomm’s debug module "msm-buspm".
- **Device Node**: Exports `/dev/msm-buspm-dev`, but not every user can open or operate on it.

## Conclusion
- **Human Error**: Old fixes can always be re-examined for new vulnerabilities.
- **Similar Functions**: `copy_from_user`, `copy_to_user`, `__copy_from_user`, `__copy_to_user`, `__copy_from_user_inatomic`, `__copy_to_user_inatomic`, and potentially more.

## Q&A
- **Presenters**: Edward Lo and Chiachih Wu