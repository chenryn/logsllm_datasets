```
* = : 等于
* != : 不等于
* ! : 代表“非”的运算符
AND和OR在MySQL中被看作连接运算符
### 4. IFNULL()当打在MySQL中有什么作用?
**答**：使用**IFNULL()**方法能使MySQL中的查询更加精确。IFNULL()方法将会测试它的第一个参数，若不为NULL则返回该参数的值，否则返回第二个参数的值
```
mysql> SELECT name, IFNULL(id,'Unknown') AS 'id' FROM taxpayer;
+---------+---------+ 
| name    | id      | 
+---------+---------+ 
| bernina | 198-48  | 
| bertha  | Unknown | 
| ben     | Unknown | 
| bill    | 475-83  | 
+---------+---------+
```
### 5. 如果你只想知道从一个结果集的开头或者结尾开始的特定几条记录，该如何实现？
**答**：我们需要把**LIMIT**语句接在**ORDER BY**语句后使用，以达到上述效果。
#### 显示一行记录
```
mysql> SELECT * FROM name LIMIT 1;
+----+------+------------+-------+----------------------+------+ 
| id | name | birth      | color | foods                | cats | 
+----+------+------------+-------+----------------------+------+ 
| 1  | Fred | 1970-04-13 | black | lutefisk,fadge,pizza | 0    | 
+----+------+------------+-------+----------------------+------+
```
#### 显示5行记录
```
mysql> SELECT * FROM profile LIMIT 5;
+----+------+------------+-------+-----------------------+------+ 
| id | name | birth      | color | foods                 | cats | 
+----+------+------------+-------+-----------------------+------+ 
| 1  | Fred | 1970-04-13 | black | lutefisk,fadge,pizza  | 0    | 
| 2  | Mort | 1969-09-30 | white | burrito,curry,eggroll | 3    | 
| 3  | Brit | 1957-12-01 | red   | burrito,curry,pizza   | 1    |   
| 4  | Carl | 1973-11-02 | red   | eggroll,pizza         | 4    | 
| 5  | Sean | 1963-07-04 | blue  | burrito,curry         | 5    | 
+----+------+------------+-------+-----------------------+------+
```
#### 显示按照ORDER BY排序后的第一条记录
```
mysql> SELECT * FROM profile ORDER BY birth LIMIT 1;
+----+------+------------+-------+----------------+------+ 
| id | name | birth      | color | foods          | cats | 
+----+------+------------+-------+----------------+------+ 
| 9  | Dick | 1952-08-20 | green | lutefisk,fadge | 0    | 
+----+------+------------+-------+----------------+------+
```
### 6. Oracle 和 MySQL该如何选择，为什么?
**答**：它们都有各自的优点和缺点。考虑到时间因素，我倾向于MySQL。
#### 选择MySQL而不选orcale的原因
* MySQL开源
* MySQL轻便快捷
* MySQL对命令行和图形界面的支持都很好
* MySQL支持通过Query Browser进行管理
### 7. MySQL中如何得到当前日期?
**答**：在MySQL中获取当前日期就是如下的SELECT语句这么简单。
```
mysql> SELECT CURRENT_DATE();
+----------------+
| CURRENT_DATE() |
+----------------+
| 2014-06-17     |
+----------------+
```
### 8. MySQL中如何将表导出为XML文件?
**答**：我们可以使用'-e'(export)选项来把MySQL表或整个数据库导出到XML文件。当处理大型表的时候我们可能需要手动导出，不过对于小表的话可以直接使用想phpMyAdmin等这样的工具。
```
mysql -u USER_NAME -xml -e 'SELECT * FROM table_name' > table_name.xml
```
上面的例子中USER\_NAME是数据库的用户名，table\_name是待导出为xml文件的表名，table\_name.xml是存放数据的xml文件
### 9. MySQL\_pconnect是什么? 它和MySQL\_connect有什么区别?
**答**：MySQL\_pconnect()打开一个持久的数据库连接，这意味着数据库不是在每次页面加载的时候被打开一个新连接，因此我们不能使用MySQL\_close()来关闭一个持久的连接。
MySQL\_pconnect和MySQL\_connect最简要的区别是：
与MySQL\_pconnect不同，MySQL\_connect在每次页面被加载的时候打开连接，这个连接可以使用MySQL\_close()语句来关闭。
### 10. 当你需要查看一个名为'mysql'的数据库中'user'表中的所有索引时，你会如何做?
**答**：下面的命令将会显示出‘user’表中所有的索引
```
mysql> show index from user;
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ 
| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | 
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ 
| user  |          0 | PRIMARY  |            1 | Host        | A         |        NULL |     NULL | NULL   |      | BTREE      |         |               | 
| user  |          0 | PRIMARY  |            2 | User        | A         |           4 |     NULL | NULL   |      | BTREE      |         |               | 
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ 
2 rows in set (0.00 sec)
```
### 11. 什么是CSV表?
**答**：CSV是逗号分隔值（Comma-Separated Values）或也被称为字符分隔值（Character-Separated Values）的缩写。CSV表以纯文本和表格形式来存储数据。
每一条记录都使用特定的分隔符隔开(如逗号,分号,...)，并且每条记录都有着顺序相同的列。CSV表最广泛地被用来存储用于导入和导出的电话联系人，并能够用来存储任何类型的纯文本数据。
以上就是这次要讲的全部内容。我还会带来其他你们应该会喜欢的有趣的文章。到那时敬请关注并访问Tecmint，不要忘了在下方的评论栏中留下你们的宝贵意见。
---
via: 
译者：[GOLinux](https://github.com/GOLinux) 校对：[ReiNoir](https://github.com/reinoir)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出