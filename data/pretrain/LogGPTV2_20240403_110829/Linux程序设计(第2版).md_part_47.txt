第7章数据管理
229
并进行相应的处理，直到用户选择了退出操作的选项为止。请注意，我们把current_cdc_entry结
构做为一个参数传递给了show_menu函数、这是为了让桌单选项能够根据用户是否选取了一个
标题记录项做相应的变化。
while(cutrent_option 1= mo_exit)(
current_option ± show_menu &current_cdc_entry1 :
switehicurrent_option)(
case mo_add_cat:
if lenter_new_cat_entry(&current_cdc_entry))(
if(!add_cdc_entry(curront_cdc_entry))(
nemset(kcurrent_cfc_entry.'\0,
eizeof (current_cdc_entry1) ;
1
case no_adi_tracks:
break:
fter_new_track_entries (&current_cdc_entry);
break;
Ge1_cat_entry(&current_cdc_entry):
case mo_find_cat:
break;
current_cdc_entry s find_cat(1;
case mo_list_cat_tracks:
break;
list_tracks(kcurrent_ode_entry):
case mo_Gel_tracks:
break;
del_track_entries &current_cdc_entry) :
case no_count_entries:
break;
count_all_entries():
case so_exit:
break;
case mo_invalid:
break;
default:
break;
}/*ewiteh */
break:
}/* while */
6）当主循环退出的时候，我们关闭数据库文件并返回到环境。欢迎辞是用announce函数输
出的。
database_close() :
1 /* main */
static void announce(void]
printf(\n\nWeicome to the demonstration CD catalog database
program\n*) ;
7）下面是show_menu函数的程序清单。它先检在用户是否已经选中一个标题记录项，用户
通过输入标题记录项第一个字母的办法来选取它。如果已经选中一个标题记录项，用户将看到
更多的菜单选项。
注意：现在要用数字来选择某单项了。我们在前两个例子里用的都是首字母
加入jaVa编程群：524621833
---
## Page 248
230
Linux程序设计
static menu_options show_menu (const ede_entry *cdc_selected)
char tmp_str[TMP_STRING_LEN + 1]:
nenu_options option_chosen  no_invalid;
vhile (option_chosen =s mo_invalid) (
if (cdc_selected->catalog[0]){
printf(*is，s，s,esn,
cdc_selected->title,
cdc_selected->catalog
cdc_selected->type,
cdc_selected->artist):
printf(°1 -add new cD\n*);
printf(\n*):
printf(*2
printf(*3
search for a CD\n*}:
-.uad
re-enter tracks for current CD\n*);
count the CDs and tracks in Lhe database\n°}:
printf(*5
printf(*6、
list tracks for this CD\n*);
delete this CD, and all its tracks\n*):
printf(*g - quit\n*};
printf(*\noption:*):
fgets(tnp_str, TMP_STRING_LEN,stdin);
switch(tnp_str[0])(
case
1':option_chosen =mo_add_cat;break;
case
3':option_chosen=mo_count_entries;break;
2':option_chosen =mo_find_cat;break;
case
case
4：
'5'：option_chosen =mo_del_cat;break;
option_chosen ± mo_add_tracks: break;
case6':option_chosen=mo_list_cat_tracks;break;
case ‘q': option_chosen = mo_exit; break;
else{
printf(*\n\n*);
printf(*2-search for a CD\n*);
printf(*q-quit\n*);
printf(*3-
count the CDs and tracks in the database\n*);
printf(*\noption:*):
fgets(tmo_str, THP.STRING_LEN,stdin);
switch(tmp_str[0]){
case 1':option_chosen mo_add_cat; break;
case
2：option_chosen=mo_find_cat;break;
case ‘q': option_chosen = mo_exit; break;
1
)/*while */
return(option_chosen);
8）我们需要在几个地方稍做停顿，好让用户对他们准备进行的操作予以确认。我们不想让
这段提问多次出现在代码里，我们把有关代码提取出来做为一个函数，这就是下面的ge_confirm
函数：
static int get_confirm(const chaz *question)
char tmp_str{TMP_STRING_LEN + 1];
printf(*es′,question）;
fgets(tmp_str, TMP_STRING_LEN, stdin);
if (tnp_str[0]
x[0]xda11.人，[
return(l) :
'y'}
return(0):
加入java编程群：524621833
---
## Page 249
第7章数据管理
231
9)enter_new_cat_entey函数的作用是让用户输人…个新的标题记录。我们不想保存由fgets函
数返回的换行符，所以把它去掉了。
注意：我们没有使用gets函数，因为它没有办法对缓冲区是否溢出进行检查。要尽
量避免使用gcts函数！
static int enter_new_cat_entry(cdc_entry *entry_to_update)
char tnp_str[TMP_STRING_LEN + 1]:
cdc_entry new_ontry:
memset(knew_entry.*\0', sizeof Inew_entry));
ptintf(*Enter catalog_entry:*);
{void)fgets(tnp_str. TMP_STRING_LEN, stdin};
strip_return(tmp_str):
strncpy (new_entry.catalog. tmp_str. CAT_CAT_LEN - 11:
printf(*Enter tatle:):
(void)fgets(tnp_str,
strip_return(tnp_str):
TMP_STRING_LEN, stdinl:
strncpyinew_entry.title,
,tMp_str, CAT_TITLE_LEN - 1);
printf(*Enter type:*}:
(void)Egets(tp_str,TMP_STRING_LEN.stdin);
strncpytnew_entry.type, tmp_str, CAT_TYPE_LEN - 1):
strip_return(tap_str):
printf(*Enter artist:*);
(void)fgets(tp_str, TMP_STRING_LEN,stdin);
strip_return(tmp_str):
strncpy(new_entry.artist, tmg_str, CAT_ARTIST_LEN - 1);
printf(*\nNew catalog entry entry is :-\n²):
if Iget_contirm(*Add this entry 7*))
display_cdc(&new_entry);
memcpy(entry_to_update, &new_entry. sizeof (new_entry)):
return(l):
return(0) :
10）下面是输人曲目资料的enter_new_track_entries函数。它比对应的标题记录函数稍微复杂
一些，因为我们允许对现存曲目记录不做修改。
static void entex_new_track_entries(const cdc_entry *entry_to_add_to)
cdt_entry new_track, existing_track;
chat tap_str[TMP_STRING_LEN + 1]:
int track_no = 1;
if tentry_to_aGd_to->catalogi0]*'\0}return;
printf(*\nupdating tracks for es\n*,entry_to_add_to->catalog):
printf(*Press return to leave existing description unchanged,\n');
printf(a singie to delete this and ronaining tracks,n*);
printf(* or new track description\n*);
while(1){
11）我们必须先查明当前曲目编号处是否有现存曲目。我们将根据查询的结果对提示做相应
的修改、
加入java编程群：524621833
---
## Page 250
232
Linux程序设计
memset (&new_track.*\o', sizeof (new_track));
existing_track = get_cdt_entry (entry_to_add_co->catalog,
if (existing_track.catalogf01}{
track_no);
printf(*\tTrack ed:s\n*, track_no,
printf(*\tNew text: *);
existing_track.track_txt):
else(
printf(*\tTtack $d description: *, track_no);
fgets(tNp_str. THP_STRING_LEN. stdin);
strip_return[tmp_str):
12）如果曲目编号处没有现存记录，并且用户也没有添加一条记录，我们就认为曲目都已经
添加完了。
if (strlen(tmp_str) == 0）
if (existing_track.catalog[0]==\o′}{
/*no existing entry. so finished adding */
break;
else[
/ leave existing entry. jurp to next track */
track_no++:
continue;
13）如果用户单独输人一个字母“d”，就会副除当前以及更高编号的曲目记录。如果
del_cdt_entry函数找不到可删除的曲目，它就会返回“false”。
if ((strlen(tmp_str) == 1) 64 tmp_str{0]=d’){
while (del_cdt_entry(entry_to_add_to->catalog. track_no)){
/*delete this and remaining tracks */
track_no**;
break;
1
14）下面这段代码的作用是添加一个曲目，或者对一个现存曲目进行修改。我们对那个
cdt_entry结构的数据项new_track进行构造，然后调用数据库函数add_cdt_entry把它添加到数据
库里去。
strncpy(new_track.track_txt, tmp_str.TRAcK_rrexr_LEN-1):
strcpy(new_track.catalog.entry_to_add_to->catalog):
new_Lrack.crack_no=track_no;
if （1add_edt_entry(new_track)){
fprintf (stderr, *Failed to add new track\n*);
break;
track_no++;
}/*while */
1
15）函数del_cat_entry的作用是删除一条标题记录。如果标题记录被副除了，原来与它对应
的曲目记录也都将被删除。
static void del_cat_entryiconst cdc_entry *entry_to_delete)
加入java编程群：524621833
---
## Page 251
第7章数据管理
int track_no = 1:
int delete_ok;
display_cdc(entry_to_delete);
if (get_confirm(*Delete this entry and all it's tracks? *)](
do(
delete_ok = del_cdt_entry(entry_to_delete->catalog.
track_no+*;
track,no) :
1while(delete_ok);
if (!del_edc_entry(entry_to_delete->catalog)}(
fprintf(stderr,*Failed to delete entry\n*1:
static void del_track_entries(const cdc_entry *entry_to_delete)
int track_no = 1;
int delete_ok;
display_cdc(entry_to_delete) ;
if (get_confirn[*Delete tracks for this entry? ")1(
do[
delete_ok = del_cdt_entry(entry_to_delete->catalog. track_no);
1whileldelete_ok);
rack_no++:
17）接下来，我们编写了一个非常简单的标题搜索小工具。我们提示用户输入一个字符串，
然后开始查找包含这个字符串的标题记录项。可能会查到多个匹配的记录，我们一次一个地把