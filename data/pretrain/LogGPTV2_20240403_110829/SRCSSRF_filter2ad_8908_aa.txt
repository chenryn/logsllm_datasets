# SRC中的SSRF小记
## ssrf - 漏洞简介
SSRF全称：Server-Side Request Forgery，即
服务器端请求伪造。是一个由攻击者构造请求，在目标服务端执行的一个安全漏洞。攻击者可以利用该漏洞使服务器端向攻击者构造的任意域发出请求，目标通常是从外网无法访问的内部系统。简单来说就是利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网进行攻击。
## ssrf - 漏洞原理
SSRF全称为Server-side Request
Fogery,中文含义为服务器端请求伪造，漏洞产生的原因是服务端提供了能够从其他服务器应用获取数据的功能，比如从指定的URL地址获取网页内容，加载指定地址的图片、数据、下载等等。漏洞URL示例:
## ssrf - 漏洞危害
1、可以对服务器所在的内网环境进行端口扫描、资源访问
2、利用漏洞和Payload进一步攻击运行其他的应用程序;
3、对内网web应用进行指纹识别，通过访问应用存在的默认文件实现
4、GET型漏洞利用，GET参数就可以实现的攻击，比如struts2漏洞利用等
5、POST型漏洞利用，可利用gopher协议进行参数构造;
6、利用Redis未授权访问getshell、Weblogic默认SSRF漏洞页面
7、如果ssrf漏洞存在于云服务器
    攻击元数据服务
    攻击存储桶
    攻击Kubelet API
    越权攻击云平台内其他组件或服务
## ssrf - 场景及参数
### 常见场景:
1、通过URL地址进行网页分享;
    http://share.xxx.com/index.php?url=http://www.xxx.com
2、转码服务，通过URL地址把原地址的网页转换格式
3、图片加载与下载，一般是通过url参数进行图片获取
    http://image.xxx.com/image.php?image=http://www.xxx.com
4、未公开的api实现以及其他调用url的功能;
5、设备后台管理进行存活测试;
6、远程资源调用功能;
7、数据库内置功能;
8、编辑器进行远程图片抓取，如: ueditor;
9、打包附件或者内容编辑并导出时
10、PDF生成或导出
### 常见参数:
    share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain...
## ssrf - 漏洞成因
### 产生漏洞的函数
根据后台使用的函数的不同，相应的影响和利用方法也不一样，PHP中下面函数的使用不当会导致SSRF:
    file_get_contents()
    fsockopen()
    curl_exec()
#### file_get_contents()
这个函数的作用是将整个文件读入一个字符串中，并且此函数是用于把文件的内容读入到一个字符串中的首选方法。
比如：下面的代码执行结果是输出test.txt文件里面的字符串。
#### fsockopen()
使用fsockopen函数实现获取用户制定url的数据（文件或者html）。
#### curl_exec()
该函数可以执行给定的curl会话。
[root@localhost]# curl -V
    curl 7.83.1 (Windows) libcurl/7.83.1 Schannel
    Release-Date: 2022-05-13
    Protocols: dict file ftp ftps http https imap imaps pop3 pop3s smtp smtps telnet tftp
    Features: AsynchDNS HSTS IPv6 Kerberos Largefile NTLM SPNEGO SSL SSPI UnixSockets
## ssrf - 利用协议
SSRF常用的攻击协议: http(s)、file、dict、 **gopher**
Http协议: 最常用的SSRF漏洞利用协议，作用为直接访问http资源。如:
File协议:可利用此协议进行服务器文件读取如:
Dict协议:可用此协议进行端口开放探测如:
Gopher协议: gopher支持发出GET、POST请求，可进行复杂的漏洞利用  
例如，内网中的一处其他的漏洞URL为:   
尝试用gopher协议调用此代码，先构造一个GET请求体:
    GET /get.php?name=admin HTTP/1.1Host:192.168.1.120
转化为gopher协议请求:
    gopher://192.168.1.120:80/ GET%20/get.php%3fname=admin%20HTTP/1.1%0d%0aHost:xxx.com%0d%0aRequest
## ssrf - 常用绕过方法
由于SSRF漏洞危害较大，并且容易出现在各种功能点中，因此开发人员常常对请求资源的域名、IP进行白名单或者黑名单的限制过滤。
一般情况下利用URL解析导致SSRF过滤被绕过基本上都是 **因为后端通过不正确的正则表达式对URL进行了解析** 。
### 绕过某种特定限制
#### @符: 绕过域名
一般用于
例如 10.10.10.10
#### /#/符:绕过后缀
一般用于.jpg等固定后缀不可更改
例如 
### 绕过限制请求IP不为内网地址
#### 1、点分割符号替换:
在浏览器中可以使用不同的分割符号来代替[域名](https://cloud.tencent.com/act/pro/domain-sales?from=10680)中的`.`分割，可以使用`。`、`｡`、`．`来代替
例如：
    127。0。0。1
    127｡0｡0｡1
#### 2、xip.io:
10.10.10.10.xip.io 会被解析成10.10.10.10
#### 3、数字IP地址:
127.0.0.1的十进制: 2130706433，HTTP访问: 
#### 4、短网址：
    https://www.985.so/
#### 5、进制转换: