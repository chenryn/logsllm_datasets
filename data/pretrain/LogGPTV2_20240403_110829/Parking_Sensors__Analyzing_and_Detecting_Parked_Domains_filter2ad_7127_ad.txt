### Classifier Improvement and Adaptability

The quality of a classifier is crucial, especially if it is to be integrated into a browser and used by end-users. For this reason, we have chosen the Random Forest algorithm. This choice is based on the algorithm's ability to combine the strengths of ensemble learning with the interpretability of decision trees. Additionally, decision trees are robust against outliers, and the ensemble technique in Random Forest helps prevent overfitting. Once the trees are constructed during the training phase, classification during the detection phase is typically very fast.

### Dataset Handling

#### 1. Train and Test Datasets
- **Training Set**: Two-thirds of our dataset, consisting of 6,000 pages, is reserved for the training phase.
- **Test Set**: The remaining one-third is isolated and used after the model is built to evaluate the classifier's performance. These instances, used to test the classifier, are referred to as the test set.

#### 2. Data Transformation
To avoid overfitting, we remove outliers and extreme values from the training set using an interquartile range (IQR) filter, which operates on a per-feature basis.

#### 3. Omitted Features
Our initial feature set included two additional features, which were later omitted after manual and algorithmic selection.

- **WHOIS Anonymization Feature**: This feature was based on the detection of WHOIS entries that use anonymizing services like WhoisGuard. We hypothesized that parked domain owners would be more likely to anonymize their personal information compared to regular domain owners. However, upon manual inspection, we found that this feature was not particularly discriminative for parked domains. Additionally, the feature required searching for specific strings related to anonymizing services, making it less robust. Therefore, it was removed from the final model.
- **HTTP Request Parameters Feature**: Another feature counted the number of times the parked domain name was passed along with HTTP request parameters. The reasoning behind this feature was that parked domains often pass the domain name as a parameter to enable the parking service to return relevant content or ads. However, this feature was found to confuse the classifier and was thus omitted.

### Feature Selection
To further refine our feature set, we conducted a backward greedy stepwise search. Starting with the complete feature set, we removed features one by one until the classification performance improved. This process identified and removed the aforementioned features.

### Model Evaluation
After transforming the data and selecting the best-performing features, we built the model using Random Forest with 10-fold cross-validation. The performance of the model was evaluated using the test set, which consists of unseen instances. This approach ensures that the model's effectiveness is measured by its ability to classify new, unknown data.

### Related Work

In concurrent research, Alrwais et al. [15] investigated fraudulent practices in the domain parking industry. They registered themselves as both domain owners and advertisers, allowing them to detect discrepancies between what they knew to be true and what the domain parking services claimed. Their work uncovered several fraudulent practices, including click fraud, where advertising campaigns were charged for non-existent clicks.

While Alrwais et al. focused on abuse against advertisers, our work focuses on the abuse against users landing on parked domains and domain owners whose trademarks are being diluted due to the lack of trademark-infringing checks by domain parking services. Both studies conclude that the current unlegislated state of domain parking services allows for significant abuse, affecting users, advertisers, and trademark holders. A client-side countermeasure, such as the parked-page classifier proposed in this paper, can help protect users while we transition to a more regulated domain parking industry.

In 2010, Almishari et al. [14] developed a classifier for "ads-portal" domains to identify typosquatting abuse. They observed that 50% of parked pages in 2008 were on typosquatting domains. While the percentage has decreased, it remains substantial. Their classifier used HTML features similar to those in our study but did not incorporate HAR features, redirections, or frame analysis. They also used keyword-based features to increase accuracy, which we avoided to ensure robustness.

Li et al. [23] studied generic malicious web infrastructures and found that domains hosting malicious Traffic Distribution Systems (TDS) were monetized through parking services after the TDS was taken down. Even after takedowns, these domains continued to receive traffic from compromised websites.

Earlier research on cybersquatting, such as Wang et al. [31], showed that 51% of possible typosquatting domains for the Alexa top 10,000 websites were registered and active in 2006. Moore and Edelman [25] identified Google as the primary source of pay-per-click (PPC) ads on typosquatted domains and noted that 63% of these domains belonged to only five different publisher IDs.

A recent study by Agten et al. [12] confirmed that ad parking remains the most prominent monetization strategy for typosquatting domains, with 51% of observations showing ad parking. They also detected malicious redirections to malware, scams, and adult content, initiated by parking services hosting typosquatting domains.

### Conclusion

Despite operating for over a decade, managing millions of domain names, and generating significant revenue, domain parking services have received limited attention. In this paper, we mapped the ecosystem of domain parking services, identifying popular services, types of parked domains, and the advertising content users encounter. We discovered multiple types of abuse, including malware, inappropriate advertising, and scams. We also found that a significant fraction of typosquatting domains are monetized through domain parking, and there is a lack of controls, as evidenced by our successful parking of an obviously abusive domain with various parking services.

Motivated by these findings, we designed and built a parked-page classifier to block or alert users about parked pages. Our classifier uses a list of generic and robust features characteristic of parked pages and achieves high accuracy with minimal false positives.

### Acknowledgments

We thank the anonymous reviewers for their valuable comments. This research at KU Leuven was supported by the Prevention against Crime Programme of the European Union (B-CCENTRE), the Research Fund KU Leuven, the IWT project SPION, and the EU FP7 project NESSoS.

### References

[References listed as in the original text]

This optimized version of your text aims to enhance clarity, coherence, and professionalism.