title:Exploiting social networks for threshold signing: attack-resilience
vs. availability
author:Shouhuai Xu and
Xiaohu Li and
T. Paul Parker
Exploiting Social Networks for Threshold Signing:
Attack-resilience vs. Availability
Shouhuai Xu
Dept. Computer Science
U. of Texas, San Antonio
PI:EMAIL
Xiaohu Li
Dept. Computer Science
U. of Texas, San Antonio
PI:EMAIL
Paul Parker
Dept. Computer Science
U. of Texas, San Antonio
PI:EMAIL
ABSTRACT
Digital signatures are an important security mechanism, es-
pecially when non-repudiation is desired. However, non-
repudiation is meaningful only when the private signing keys
and functions are adequately protected — an assumption
that is very diﬃcult to accommodate in the real world be-
cause computers (and thus cryptographic keys and func-
tions) could be relatively easily compromised. One approach
to resolving, or at least alleviating, this problem is to use
threshold cryptography. But how should such techniques be
employed in the real world? In this paper we propose ex-
ploiting social networks whereby average users take advan-
tage of their trusted ones to help secure their cryptographic
keys. While the idea is simple from an individual user’s per-
spective, we aim to understand the resulting systems from
a whole-system perspective. Speciﬁcally, we propose and
investigate two measures of the resulting systems: attack-
resilience, which captures the security consequences due
to the compromise of some computers and thus the compro-
mise of the cryptographic key shares stored on them; avail-
ability, which captures the eﬀect when computers are not
always responsive (due to the peer-to-peer nature of social
networks).
Categories and Subject Descriptors
K.6.5 [MANAGEMENT OF COMPUTING AND IN-
FORMATION SYSTEMS]: Security and Protection; C.2.4
[COMPUTER-COMMUNICATION NETWORKS]:
Distributed Systems
General Terms
Algorithms, Design, Security
Keywords
social networks, threshold signing, threshold cryptography,
attack-resilience, availability
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’08, March 18-20, Tokyo, Japan
Copyright 2008 ACM 978-1-59593-979-1/08/0003 ...$5.00.
1.
INTRODUCTION
The problem of helping average users better protect their
digital signing cryptographic keys has been extensively in-
vestigated, and one solution is to utilize threshold cryptog-
raphy whereby a private key is “split” into multiple shares
such that compromise of the private key requires compromis-
ing a threshold number of the key shares. But how should
such techniques be employed in the real world so that, for
example, the users would not need to pay any service fees
and would not have to trust any one they did not trust al-
ready? In this paper we propose exploiting social networks
whereby users take advantage of their trusted ones to help
secure their private signing keys, and thus their private sign-
ing functions.
1.1 Our contributions
While the idea of “exploiting social networks for threshold
protection of private signing keys” is simple from an individ-
ual user’s perspective — there have been many threshold sig-
nature schemes that can be adopted for this purpose, we aim
to understand the resulting systems from a whole-system
perspective. This is important because (i) although users are
trusted by their friends, the users’ computers may be com-
promised by an external attacker, and (ii) the peer-to-peer
nature of social networks may imply that users’ computers
are not always “up” (e.g., either the computers are powered
oﬀ or they do not contribute their resources at some points
in time). For this purpose, we propose and investigate two
measures, called attack-resilience and availability, as
well as their trade-oﬀs. Speciﬁcally, we make three contri-
butions.
First, we characterize the security consequences due to
the compromise of user computers via attack-resilience.
This metric oﬀers three utilities. (i) It guides us to recom-
mend an attack-resilient design, where each user distributes
her private key to her friends via a two-tier secret sharing
method. (ii) In order to understand the worst-case attack-
resilience, we need to identify the optimal attack strategy,
which turns out to be NP-hard. We thus present a heuris-
tic algorithm that helps identify an often powerful attack
strategy. (iii) It inspires us to investigate the impact of so-
cial network topology on attack-resilience. Since we are
unable to solve this problem analytically (see Section 8 for
hints why it is diﬃcult), we use simulation to draw insights.
Second, we characterize the eﬀect of the peer-to-peer na-
ture of social networks on the availability of private sign-
ing keys/functions, by taking into account the uptime and
downtime distributions of the computers. We derive an ana-
325
lytic expression of availability for arbitrary node uptime
and downtime distributions. In the special case that node
uptime and downtime follow exponential distributions, we
further give an expression for the mean available time of
user private signing keys/functions.
Third, since attack-resilience and availability are
at odds with each other, we present a method for select-
ing parameters that can lead to a desired trade-oﬀ between
them.
Finally we note that although the exploration in this pa-
per focuses on protecting private signing keys/functions, it
would be easy to extend the discussions to protecting pri-
vate decryption keys/functions. Note also that for shortness
and clariﬁcation, we will omit mentioning the protection of
private signing functions.
Paper organization. The rest of the paper is organized as
follows. Section 2 brieﬂy reviews some (cryptographic) pre-
liminaries. Section 3 presents a model of exploiting social
networks for threshold cryptography, including the deﬁni-
tions of attack-resilience and availability. Section 4
explores the attack-resilience aspect of the resulting sys-
tems, including the heuristic algorithm for identifying the
often powerful attack strategy. Section 5 investigates the
availability aspect of the resulting systems. Section 6
presents a method for identifying good trade-oﬀs between
attack-resilience and availability. Section 7 discusses
related prior works. Section 8 concludes the paper. Due to
space limitation, we leave certain details to the full version
of the present paper [35].
2. PRELIMINARIES
Let G = (V, E) be an undirected graph, where V is the
node or vertex set and E is the edge set. For any u, v ∈
V , there is at most one edge between them. Let deg(v, G)
denote the degree of node v in G.
A digital signature scheme consists of: a key generation
algorithm that takes as input a security parameter κ and
outputs a pair of public and private keys (pk, sk); a sign-
ing algorithm that takes as input a private key sk and a
message m, and outputs a signature σ; a veriﬁcation algo-
rithm that takes as input a message m, a public key pk and
a candidate signature σ, and decides whether to accept the
signature. Security of digital signatures is captured by the
existential unforgeability under adaptive chosen-message
attack, meaning that the probability for an adversary, who
may have access to many message-signature pairs, to gen-
erate a new signature is negligible in κ [13].
(A function
 : N → R+ is negligible if for any c there exists κc such that
∀κ > κc we have (κ) < 1/κc.)
A threshold signature scheme is based on the technique
known as threshold secret sharing; the most popular exam-
ple is due to Shamir [33]. Intuitively, a (k, n) secret shar-
ing scheme “splits” a private signing key sk into n shares
sk1, . . . , skn such that, in order to recover sk, at least k
shares are needed. Such a technique clearly enhances the se-
crecy of sk during its storage, but still suﬀers from the single-
point-of-failure that sk has to be recovered during its utiliza-
tion, namely when signing messages via f (sk,·). Threshold
signing eliminates this drawback by taking advantage of a
certain algebraic property of f (sk,·) such that f (sk,·) can
be computed using any k of f (sk1,·), . . . , f (skn,·). Security
deﬁnition of threshold signatures is a natural extension of
[13] and can be found, for example, in [16].
3. SYSTEM MODEL AND DESIGN
Consider a set of users V , where each u ∈ V has a pair of
public and private keys (pku, sku) with respect to a secure
digital signature scheme. Consider a type of social networks
that can be modeled as an undirected graph G = (V, E),
where each node or vertex u ∈ V represents a user, and
(u, v) ∈ E means that there is a strong mutual trust between
u and v. In other words, a user only deals with the others
she directly trusts (i.e., there is no issue of “transitive trust”).
We consider an adversary that can compromise user com-
puters, and thus the secrets stored on the computers. This
is reasonable because existing cryptographic techniques are
suﬃcient for defeating any probabilistic polynomial-time ad-
versary that launches cryptanalysis-like attacks, but the ad-
versary may relatively easily compromise computers so as to
obtain the keys stored on them. We assume that the adver-
sary controls all the dishonest or compromised nodes (i.e.,
users), and knows the topology of the social networks. Since
the primary goal of the adversary would be to compromise
the private keys, it is reasonable to assume that the adver-
sary will keep its attack as stealthy as possible and will not
intend to jeopardize the availability of the private signing
keys (otherwise, the jeopardized availability can serve as a
signal of attack).
We explore the resulting systems via two measures, called
attack-resilience and availability, which capture the
properties of the “architectural design” and are independent
of the cryptosystems that may be adopted in a concrete
realization. (Other measures, such as performance, are of
course important, but they are dependent upon the adopted
cryptosystems.)
Before we precisely deﬁne the two measures, let us discuss
the deﬁnition rationale. First, it is natural to let avail-
ability capture, in some fashion, that in the long run how
available are the private keys when the need arises. This
is relevant because of the peer-to-peer nature of social net-
works.
Second, we observe that compromise of T nodes may cause
the compromise of S ≥ T private keys. This is because a
node may hold private key shares of multiple other nodes,
and thus compromise of a single node may contribute to the
compromise of multiple private keys. We also observe that
in the “benchmark” design where each user holds her own
private key, compromise of T nodes causes the compromise
of exactly S = T private keys (cf. the pink-color line in Fig-
ure 1). Therefore, it is meaningful to let attack-resilience
capture, in some fashion, the “side-eﬀect” of the compromise
of T nodes, namely S − T .
Third, we observe that attack-resilience and avail-
ability are often at odds with each other. To see this, let
us consider the special case that the social network is a com-
plete graph, meaning that every user trusts every one else.
On one hand, the design that each user u shares her private
key sku using a (|V |,|V |) secret sharing scheme (cf. the blue-
color lines in Figure 1) oﬀers the best attack-resilience
because, in order to compromise any private key, the at-
tacker has to compromise all the |V | nodes. However, this
design has the worst availability because every node has