CREATE INDEX  
postgres=# explain select * from a order by c1 collate "zh_CN";  
                               QUERY PLAN                                 
------------------------------------------------------------------------  
 Index Only Scan using idxa on a  (cost=0.15..31.55 rows=1360 width=64)  
(1 row)  
```  
4\. 设置数据库的collate为zh_CN，将默认使用这个collate，按拼音排序  
```  
test02=# create database test03 encoding 'UTF8' lc_collate 'zh_CN.utf8' lc_ctype 'zh_CN.utf8' template template0;  
CREATE DATABASE  
test02=# \c test03  
You are now connected to database "test03" as user "postgres".  
test03=# select * from (values ('刘德华'),('刘少奇')) as a(c1) order by c1 ;  
   c1     
--------  
 刘德华  
 刘少奇  
(2 rows)  
```  
### 注意多音字  
有些多音字，例如重庆(chongqing), 编码时"重"可能是按zhong编码，影响输出。    
```  
test03=# select * from (values ('中山'),('重庆')) as a(c1) order by c1 collate "zh_CN";  
  c1    
------  
 中山  
 重庆  
(2 rows)  
```  
## 补充
建议使用convert_to, 转换为gbk, gb18030, euc_cn的bytea再排序.   
```
postgres=# select * from (values ('刘德华'),('刘少奇'),('张学友'),('郭富城'),('郭德纲'),('黎明'),('李刚'),('中山'),('重庆'),('冲哥')) as t(info) order by info collate "C";
  info  
--------
 中山
 冲哥
 刘少奇
 刘德华
 张学友
 李刚
 郭富城
 郭德纲
 重庆
 黎明
(10 rows)
postgres=# select * from (values ('刘德华'),('刘少奇'),('张学友'),('郭富城'),('郭德纲'),('黎明'),('李刚'),('中山'),('重庆'),('冲哥')) as t(info) order by info collate "zh_CN";
  info  
--------
 中山
 冲哥
 李刚
 重庆
 黎明
 刘少奇
 刘德华
 张学友
 郭富城
 郭德纲
(10 rows)
postgres=# select * from (values ('刘德华'),('刘少奇'),('张学友'),('郭富城'),('郭德纲'),('黎明'),('李刚'),('中山'),('重庆'),('冲哥')) as t(info) order by convert_to(info,'GB18030');
  info  
--------
 冲哥
 郭德纲
 郭富城
 黎明
 李刚
 刘德华
 刘少奇
 张学友
 中山
 重庆
(10 rows)
postgres=# select * from (values ('刘德华'),('刘少奇'),('张学友'),('郭富城'),('郭德纲'),('黎明'),('李刚'),('中山'),('重庆'),('冲哥')) as t(info) order by convert_to(info,'EUC_CN');
  info  
--------
 冲哥
 郭德纲
 郭富城
 黎明
 李刚
 刘德华
 刘少奇
 张学友
 中山
 重庆
(10 rows)
postgres=# \df convert_to
                            List of functions
   Schema   |    Name    | Result data type | Argument data types | Type 
------------+------------+------------------+---------------------+------
 pg_catalog | convert_to | bytea            | text, name          | func
(1 row)
```
## Greenplum按拼音排序  
greenplum不支持单列设置collate，按拼音排序有些许不同。  
在greenplum中，可以使用字符集转换，按对应二进制排序，得到拼音排序的效果。  
```  
postgres=# select * from (values ('刘德华'), ('刘少奇')) t(id) order by byteain(textout(convert(id,'UTF8','EUC_CN')));  
   id     
--------  
 刘德华  
 刘少奇  
(2 rows)  
```  
## 参考        
[《PostgreSQL 按拼音排序 - convert to GBK/EUC_CN coding》](../201612/20161205_01.md)    
[《如何设置数据库的LC_COLLATE, LC_CTYPE, ENCODING, TEMPLATE》](../201704/20170424_01.md)   
https://www.postgresql.org/docs/9.6/static/charset.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")