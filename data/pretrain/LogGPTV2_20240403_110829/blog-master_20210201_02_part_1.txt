## PostgreSQL 14 preview - 支持 jsonb 下标语法, 支持set原子操作, 类似array下标   
### 作者  
digoal  
### 日期  
2021-02-01   
### 标签  
PostgreSQL , jsonb , subscripting , 下标    
----  
## 背景  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=676887a3b0b8e3c0348ac3f82ab0d16e9a24bd43  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=81fcc72e66222357f9bccce3eeda62eb2cb29849  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=aa6e46daf5304e8d9e66fefc1a5bd77622ec6402  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=7c5d57caed4d8af705d0cc3131d0d8ed72b7a41d  
```  
Implementation of subscripting for jsonb  
Subscripting for jsonb does not support slices, does not have a limit for the  
number of subscripts, and an assignment expects a replace value to have jsonb  
type.  There is also one functional difference between assignment via  
subscripting and assignment via jsonb_set().  When an original jsonb container  
is NULL, the subscripting replaces it with an empty jsonb and proceeds with  
an assignment.  
For the sake of code reuse, we rearrange some parts of jsonb functionality  
to allow the usage of the same functions for jsonb_set and assign subscripting  
operation.  
The original idea belongs to Oleg Bartunov.  
Catversion is bumped.  
```  
```  
+-- jsonb subscript  
+select ('123'::jsonb)['a'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('123'::jsonb)[0];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('123'::jsonb)[NULL];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": 1}'::jsonb)['a'];  
+ jsonb   
+-------  
+ 1  
+(1 row)  
+  
+select ('{"a": 1}'::jsonb)[0];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": 1}'::jsonb)['not_exist'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": 1}'::jsonb)[NULL];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)['a'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[0];  
+ jsonb   
+-------  
+ 1  
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)['1'];  
+ jsonb   
+-------  
+ "2"  
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[1.0];  
+ERROR:  subscript type is not supported  
+LINE 1: select ('[1, "2", null]'::jsonb)[1.0];  
+                                         ^  
+HINT:  Jsonb subscript must be coerced to either integer or text  
+select ('[1, "2", null]'::jsonb)[2];  
+ jsonb   
+-------  
+ null  
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[3];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[-2];  
+ jsonb   
+-------  
+ "2"  
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[1]['a'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('[1, "2", null]'::jsonb)[1][0];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": 1, "b": "c", "d": [1, 2, 3]}'::jsonb)['b'];  
+ jsonb   
+-------  
+ "c"  
+(1 row)  
+  
+select ('{"a": 1, "b": "c", "d": [1, 2, 3]}'::jsonb)['d'];  
+   jsonb     
+-----------  
+ [1, 2, 3]  
+(1 row)  
+  
+select ('{"a": 1, "b": "c", "d": [1, 2, 3]}'::jsonb)['d'][1];  
+ jsonb   
+-------  
+ 2  
+(1 row)  
+  
+select ('{"a": 1, "b": "c", "d": [1, 2, 3]}'::jsonb)['d']['a'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": {"a1": {"a2": "aaa"}}, "b": "bbb", "c": "ccc"}'::jsonb)['a']['a1'];  
+     jsonb       
+---------------  
+ {"a2": "aaa"}  
+(1 row)  
+  
+select ('{"a": {"a1": {"a2": "aaa"}}, "b": "bbb", "c": "ccc"}'::jsonb)['a']['a1']['a2'];  
+ jsonb   
+-------  
+ "aaa"  
+(1 row)  
+  
+select ('{"a": {"a1": {"a2": "aaa"}}, "b": "bbb", "c": "ccc"}'::jsonb)['a']['a1']['a2']['a3'];  
+ jsonb   
+-------  
+   
+(1 row)  
+  
+select ('{"a": ["a1", {"b1": ["aaa", "bbb", "ccc"]}], "b": "bb"}'::jsonb)['a'][1]['b1'];  
+         jsonb           
+-----------------------  
+ ["aaa", "bbb", "ccc"]  
+(1 row)  
+  
+select ('{"a": ["a1", {"b1": ["aaa", "bbb", "ccc"]}], "b": "bb"}'::jsonb)['a'][1]['b1'][2];  
+ jsonb   
+-------  
+ "ccc"  
+(1 row)  
+  
+-- slices are not supported  
+select ('{"a": 1}'::jsonb)['a':'b'];  
+ERROR:  jsonb subscript does not support slices  
+LINE 1: select ('{"a": 1}'::jsonb)['a':'b'];  
+                                       ^  
+select ('[1, "2", null]'::jsonb)[1:2];  
+ERROR:  jsonb subscript does not support slices  
+LINE 1: select ('[1, "2", null]'::jsonb)[1:2];  
+                                           ^  
+select ('[1, "2", null]'::jsonb)[:2];  
+ERROR:  jsonb subscript does not support slices  
+LINE 1: select ('[1, "2", null]'::jsonb)[:2];  
+                                          ^  
+select ('[1, "2", null]'::jsonb)[1:];  
+ERROR:  jsonb subscript does not support slices  
+LINE 1: select ('[1, "2", null]'::jsonb)[1:];  
+                                         ^  
+select ('[1, "2", null]'::jsonb)[:];  
+ERROR:  jsonb subscript does not support slices  
+create TEMP TABLE test_jsonb_subscript (  
+       id int,  
+       test_json jsonb  
+);  
+insert into test_jsonb_subscript values  
+(1, '{}'), -- empty jsonb  
+(2, '{"key": "value"}'); -- jsonb with data  
+-- update empty jsonb  
+update test_jsonb_subscript set test_json['a'] = '1' where id = 1;  
+select * from test_jsonb_subscript;  
+ id |    test_json       
+----+------------------  
+  2 | {"key": "value"}  
+  1 | {"a": 1}  
+(2 rows)  
+  
+-- update jsonb with some data  
+update test_jsonb_subscript set test_json['a'] = '1' where id = 2;  
+select * from test_jsonb_subscript;  
+ id |        test_json           
+----+--------------------------  
+  1 | {"a": 1}  
+  2 | {"a": 1, "key": "value"}  
+(2 rows)  
+  
+-- replace jsonb  
+update test_jsonb_subscript set test_json['a'] = '"test"';  
+select * from test_jsonb_subscript;  
+ id |           test_json             