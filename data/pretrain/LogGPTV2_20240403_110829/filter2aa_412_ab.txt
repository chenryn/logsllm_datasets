Violating access control policies causes the NAC to impose a restriction:
§ In a wired network, this is a physical restriction
§ In a wireless network, this can only be a logical restriction
More on this later…
The Scenario
§ We are attacking a WLAN that is used to access sensitive resources
§ We have already breached the perimeter
How do we get out?
Review: LLMNR/NBT-NS Poisoning
LLMNR/NBT-NS Poisoning
NetBIOS name resolution [20][21]:
1. Check local cache
2. Check LMHosts file
3. DNS lookup using local nameservers
4. LLMNR broadcast to entire subnet
5. NBT-NS broadcast to entire subnet
LLMNR/NBT-NS Poisoning
LLMNR/NBT-NS [22]:
Different mechanisms, but same logical functionality
Best understood through example
LLMNR/NBT-NS Poisoning
Two Windows computers named Alice and Leeroy [23]:
1. Alice wants to request file from Leeroy, but does not know Leeroy’s IP
2. Alice attempts to resolve Leeroy’s name locally and using DNS, but fails
3. Alice makes broadcast requests using LLMNR/NBT-NS
4. Every computer on Alice’s subnet receives request
5. Honor system: only Leeroy responds
LLMNR/NBT-NS Poisoning
No honor among thieves [23]:
1. If Alice receives two responses, first one is considered valid
2. Creates race condition
3. Attacker waits for LLMNR/NBT-NS queries, responds to all of them
4. Victim sends traffic to the attacker
Review: Redirect to SMB
Redirect to SMB
§ The idea is to force the victim to visit an HTTP endpoint that redirects to an SMB share 
on attacker’s machine, triggering NTLM authentication
§ Variation: redirect to non-existent SMB share, triggering LLMNR/NBT-NS [24]
§ Fast way to get hashes
§ Requires social engineering
Hostile Portal Attacks
Steal Active Directory creds from 
wireless network
without network access.
Captive Portal
§ Used to restrict access to an open WiFi-network
Captive Portal
§ All DNS queries resolved to captive portal
§ All DNS traffic redirected to captive portal (optional)
§ All HTTP traffic redirected to captive portal (optional)
Hostile Portal Attack
§ Based on Redirect to SMB Attack
§ Victim forced to connect to attacker using Rogue AP attack
§ All HTTP traffic redirected to SMB share on attacker’s machine instead of a captive 
portal attack
§ All LLMNR/NBT-NS lookups are poisoned
DEMO
WPA-EAP networks:
In most cases, this means EAP-TTLS or EAP-PEAP.
§ Both use MS-CHAPv2 as the inner authentication method.
§ Mutual authentication: the RADIUS server must prove knowledge of the supplicant’s 
password for inner authentication to succeed [29]
WPA-EAP networks:
What this means:
§ Although the attacker can force the victim to authenticate with an evil twin to steal 
hashes, the attacker’s RADIUS server will fail the final stage of the authentication 
process and the client will not associate with the attacker [29]. 
Solution:
Crack credentials offline:
1. Weak RADIUS Passwords: Use auto crack ‘n add technique (Dominic White & Ian de 
Villiers in 2014) [5]
2. Strong RADIUS Passwords: Crack offline, finish attack later
Auto Crack ‘N Add (Dominic White & Ian de Villiers)
Second Option: Crack offline, Pwn later
No caveats other than time.
§
Dictionary attack: lifecycle of the attack now takes 
place over the course of a week, rather than an 
hour.
§
Divide and Conquer: 24 hours max when using 
FPGA based hardware, 100% success rate 
DEMO
What this gets you: lots and lots of NTLM hashes
Similar results to LLMNR/NBT-NS poisoning, but with a few key advantages:
§ No network access required
§ Not limited to a local subnet (you get everything that is connected to wireless)
§ Not a passive attack
Back to our scenario...
Indirect Wireless Pivots
Use Rogue Access Point attacks to 
bypass port-based access control 
mechanisms
Hashes cracked offline…
Better approach: SMB Relay
DEMO
Indirect Wireless Pivots:
Equivalent technique in a wired 
network:
§ Unplugging an authorized 
device from the wall and 
connecting it to a hostile 
network on which it can be 
attacked.
Indirect Wireless Pivots:
§
Port-based access controls rely on the 
assumption that the physical layer can be 
trusted
§
In a wireless network, WPA2-EAP is the 
means through which the integrity of the 
physical layer is protected
§
When weak forms of WPA2-EAP are used, 
the attacker can freely control the physical 
layer using rogue access point attacks, 
rendering port-based NAC mechanisms 
useless
Indirect Wireless Pivots:
§ Demonstrates that port-based NAC mechanisms do not effectively mitigate the risk 
presented by weak WPA2-EAP implementations
Indirect Wireless Pivots:
§ Demonstrates that adding port-based NAC mechanisms to a wireless network does
not make the use of EAP-TTLS and EAP-PEAP any less inappropriate if the network 
in question is used to grant access to sensitive information
§ I.e. PCI or HIPAA data (compliant != secure !!!!)
A Case For EAP-TLS:
It’s not as bad as it used to be.
§
Use Group Policy to configure 802.1x clients [26]
Best option:
§ Use a private CA
§ Leverage Active Directory to deploy EAP-TLS
§ Distribute the server cert to clients using a solid MDM or BYOD onboarding solution 
[27]
A Case For EAP-TLS:
You can even use Let’s Encrypt:
§ Note: even the folks at Let’s Encrypt state that this is far from the best option out there 
[27] 
Closing thoughts:
§ Just because wireless and wired networks operate similarly at the logical level, does 
not mean that they work the same way at the physical level
§ As a community, we should question whether it is truly a sound business decision to 
neglect EAP-TLS in favor of a more reactive approach that focuses on access control 
and threat containment.
§ The needs for convenience and security are often at odds with one another. Maintain a 
healthy skepticism towards proposed solutions that promise both.
github.com/s0lst1c3/eaphammer
References:
[1] http://dl.acm.org/citation.cfm?id=1360099
[2] http://asleap.sourceforge.net/asleap-defcon.pdf
[3] http://theta44.org/karma/aawns.pdf
[4] 
http://www.willhackforsushi.com/presentations/PEAP_Shmoocon2008_Wright_Antoniewicz.
pdf
[5] https://defcon.org/images/defcon-22/dc-22-presentations/White-deVilliers/DEFCON-22-
Dominic-White-Ian-de-Villiers-Manna-from-Heaven-Detailed-UPDATED.pdf
References:
[6] https://tools.ietf.org/html/rfc3579
[7] https://tools.ietf.org/html/rfc4017
[8] https://tools.ietf.org/html/rfc5281
[9] http://www.willhackforsushi.com/?page_id=67
[10] https://tools.ietf.org/html/rfc5216
References:
[11] https://4310b1a9-a-93739578-s-
sites.googlegroups.com/a/riosec.com/home/articles/Open-Secure-Wireless/Open-Secure-
Wireless.pdf?attachauth=ANoY7cp3gqgS8JIZY9jdvVoc0DQu7i16aoRTm6icHP-
NJyZfYMtj72S6WDlQPyl7vgQYy14fu-5t3mssAfFhmQo_bl6OYyqK5dENUGHee-
40daHWqAem3m2dWJd6jNeuP9ZSnaezoRkarq_s8J92z3SJMEXdxdAUkF1nMzRoaCPeG
2anVCQ1tSxB8Uupviji6Pom1xr10aRuISitMk7bfMmAQ00VBESXW7lWkM1veZMlNA24Npc
KkmcdvF3u_R21u_b_pkEAGIJ0&attredirects=0
References:
[12] https://www.blackhat.com/presentations/bh-dc-07/Arkin/Presentation/bh-dc-07-Arkin-
ppt-up.pdf
[13] https://www.sans.org/reading-room/whitepapers/analyst/securing-personal-mobile-
device-next-gen-network-access-controls-35627
[14]
[15] https://blogs.technet.microsoft.com/josebda/2010/12/01/the-basics-of-smb-signing-
covering-both-smb1-and-smb2/
References:
[16] https://blog.gdssecurity.com/labs/2013/2/5/resurrecting-wifitap.html
[17] http://sid.rstack.org/static/articles/w/i/f/Wifitap_README_202c.html
[18] https://www.aircrack-ng.org/doku.php?id=airtun-ng
[19] https://www.aircrack-ng.org/doku.php?id=tkiptun-ng
[20] http://www.ietf.org/rfc/rfc1001.txt
[21] http://www.rfc-editor.org/rfc/rfc1002.txt
References:
[22] https://msdn.microsoft.com/en-us/library/dd240328.aspx
[23] https://www.trustwave.com/Resources/SpiderLabs-Blog/Introducing-Responder-1-0/
[24] https://www.cylance.com/redirect-to-smb
[25] https://technet.microsoft.com/en-us/library/dd283093(v=ws.10).aspx
[26] https://msdn.microsoft.com/en-us/library/dd759173(v=ws.11).aspx
[27] https://framebyframewifi.net/2017/01/29/use-lets-encrypt-certificates-with-freeradius/
References:
[28] https://docs.microsoft.com/en-us/windows/configuration/manage-wifi-sense-in-
enterprise
[29] https://technet.microsoft.com/en-us/library/cc957983.aspx
[30] https://www.helpnetsecurity.com/2017/04/26/lure10-exploiting-wi-fi-sense/
[31]http://web.archive.org/web/20160203043946/https://www.cloudcracker.com/blog/2012/0
7/29/cracking-ms-chap-v2/
[32] http://crack.sh/bsideslv2017.pdf
[33] https://crack.sh/