The rules for struct identity in Go require that two identical structs must have identical tags. This requirement can lead to some unfortunate limitations when it comes to assignments and conversions of structs.

Currently, there appears to be no straightforward way to assign or convert a struct with tags to another struct that has different tags or no tags at all, whether the target struct is named or unnamed. You can see an example of this issue in the following Go Playground link: [http://play.golang.org/p/6FZcWSIc9w](http://play.golang.org/p/6FZcWSIc9w).

This restriction seems overly stringent. For instance, if you want to convert a struct with JSON tags to a struct with tags for a different encoding (e.g., to switch from one encoding format to another), you currently have to manually copy each field. This process is not only cumbersome but also counter-intuitive. One would expect to be able to use an unnamed struct as an intermediary or, at the very least, perform an explicit conversion.

To address this, I propose that we relax the rules around struct identity and conversion. One approach could be to remove the requirement that tags must be identical for structs to be considered the same. Alternatively, we could relax the rules for assignments and conversions of structs, allowing more flexibility in these operations.