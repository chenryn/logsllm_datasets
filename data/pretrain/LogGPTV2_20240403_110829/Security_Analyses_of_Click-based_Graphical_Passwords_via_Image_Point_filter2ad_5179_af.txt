salience  alone  predicts  click-points  of  PCCP  passwords  poorly. 
This can be explained by the fact that salience has a granularity of 
image region, which may not be closely correlated to which point 
in  the  viewport  people  likely  select  as  a  click-point  in  creating  a 
PCCP password.  
We  conclude  that  the  automated  memorability  is  effective  in 
eliminating  indistinguishable  points  (i.e.,  points  unlikely  to  be  a 
click-point)  but  ineffective  in  predicting  click-points  among 
distinguishable points.  
7.5.2  Comparison with Prior Analyses of PCCP  
A  previous  study  [8]  has  examined  PCCP’s  security  by  studying 
the spatial distribution of click-points in PCCP. It estimates that a 
33-bit dictionary has a mere 3% chance in successfully guessing a 
password in the set that traverses all possible combinations of the 
collected click-points. The actual passwords take a tiny portion of 
the  set,  and  thus  this  estimated  strength  should  be  much  weaker 
than  the  actual  strength  of  PCCP  passwords.  However,  their 
approach and finding can be used to estimate the effective space for 
our PCCP passwords.  
According to [8], the click-points of the PCCP passwords in [14], 
which  were  created  with a  mean of 3 shuffles and a  median of 1 
shuffle  per  click-point,  approach  complete  spatial  randomness. 
Using  the  same  configuration,  our  passwords  were  created  with 
fewer shuffles and thus should be more random than those in [14]. 
This suggests that the click-points of our PCCP passwords should 
also approach complete spatial randomness, which implies that the 
effective space of our PCCP passwords approaches the theoretical 
size, i.e., 43 bits.   
Our attack results indicate that the strength of our PCCP passwords 
is  substantially  weaker  than  the  above  estimate.  Our  automated 
memorability attack suggests that their effective space is about 36 
bits;  our  human-assisted  memorability  attack  suggests  that  their 
effective  space  can  be  as  small  as  30.58  bits,  and  that  their 
probability distribution is seriously biased.  
Therefore,  both  the  automated  memorability  attack  and  human-
assisted memorability attack provide a substantially more accurate 
estimation  of  the  strength  of  PCCP  passwords  than  the  previous 
study [8]. Our attacks are the first successful dictionary attacks on 
PCCP, which is robust to all prior dictionary attacks.   
7.5.3  Comparison with Attacks on PassPoints  
Figures 6 and 7 show that the human-seeded attacks on PassPoints 
are much more efficient than other attacks on either PassPoints or 
PCCP.  When  success  rate (cid:29) decreases  from  31.6%  to  7.0%,  the 
effective PassPoints password space reduces from 15.0 bits to 4.8 
bits.  This  is  dramatically  smaller  than  the  theoretical  password 
space  (43  bits).  This  implies  that  the  probability  distribution  of 
PassPoints  passwords  is  highly  skewed:  a  significant  portion  of 
passwords  have  much  higher  probabilities  and  thus  are  highly 
predictable. The probability distribution of PCCP passwords, on the 
other  hand,  is  much  less  skewed:  the  effective  password  space 
remains  30.58  bits  at (cid:29) = 2.08% while  the  theoretical  password 
space  has  the  same  size.  These  results  indicate  that  PCCP 
passwords are much harder to predict and thus much more resilient 
to dictionary attacks than PassPoints passwords, which agrees with 
our  expectation  that  the  viewport  in  PCCP  would  result  in  more 
random  passwords,  and  explains  why  prior  dictionary  attacks, 
while effective in attacking PassPoints, are ineffective in attacking 
PCCP.  
Figures 6 and 7 also show that the automated attacks on PassPoints 
are  slightly  more  efficient  than  our  attacks  on  PCCP,  albeit 
PassPoints  passwords  are  much  more  predictable.  With  35-bit 
dictionaries,  they  have  similar  success  rates  and  similar  sizes  of 
effective password spaces, all around 50% and 36 bits, respectively. 
When  success  rate (cid:29) decreases  from  around  50%,  their  effective 
password spaces start to deviate in size: the automated attacks on 
1227PassPoints have a smaller size than our attacks on PCCP; the largest 
difference  is  about  3.5  bits  for  our  human-assisted  memorability 
attack  and  about  7.2  bits  for  our  automated  memorability  attack. 
The  large  gap  between  the  two  curves  of  PassPoints  attacks  in 
Figure 7 indicates that the automated attacks on PassPoints did not 
capture the password probability distribution well enough, partially 
due 
i.e., 
distinguishability  described  in  Section  5.1,  in  building  attack 
dictionaries.  
lack  of  memory  decay  mechanism, 
to 
their 
7.6   PCCP Password Distribution Bias   
Here, we attempt to explain root causes of the PCCP password bias 
identified by our attacks, and why our IPM model can exploit the 
bias to predict PCCP passwords.  
Firstly,  choosing  a  PCCP  click-point  is  effectively  equivalent  to 
choosing a PassPoints click-point from the image portion covered 
by  the  viewport,  referred  to  as  the  selection  region  of  the  click-
point. A selection region contains multiple spots since the 75× 75 
viewport is much larger than a 19 × 19 tolerance square. Among 
these  spots,  it  is not  surprising  that  some  spots  are  more  popular 
than  others.  That  is  to  say,  the  hotspot  effect  may  exhibit  in  the 
selection region of a click-point, although such local hotspots are 
not necessarily hotspots for the whole image. As local hotspots are 
more  likely  chosen  than  other  spots  in  the  selection  region,  this 
results in a biased distribution.  
Secondly, the distance between two points affects the chance that 
they fall into a selection region. If the viewport is never shuffled, 
two  distant  points  whose  spots  would  never  fall  into  the  same 
viewport  area  are  independent  in  likelihood  to  be  selected  as  a 
PCCP click-point. They do not contribute any bias to the password 
probability  distribution.  Sorting  them  by  memorability  levels  is 
irrelevant and thus would not help pinpoint the click-point. In this 
case,  the  probability  distribution  bias  is  contributed  by  the 
preference  for  selecting  as  a  click-point  a  “local  hotspot”  rather 
than any nearby points that are likely in the viewport area. This is 
the main cause to the distribution bias in our case.  
Since a local hotspot is likely more memorable, rank-ordering all 
points  that  are  likely  in  the  same  viewport  area  by  their 
memorability levels helps pinpoint a click-point and thus detect the 
biased  password  distribution,  as  our  attacks  do.  However,  such 
rank-ordering of distant points that would never fall into the same 
viewport  area  does  not  help  attackers  at  all,  which  explains  our 
earlier  observation  in  Section  7.5.3  that  PCCP  passwords  are 
substantially more difficult to guess than PassPoints passwords.  
However, when the viewport is shuffled in selecting a PCCP click-
point, distant points that would never  fall into the same  viewport 
area may fall into the selection region of a click-point, and thus are 
no  longer  independent.  Shuffling  breaks  their  independence,  and 
one  point  may  be  more  likely  selected  as  a  click-point  than  the 
other. In this case, shuffling is another source contributing to the 
probability distribution bias, and rank-ordering these distant points 
by  their  memorability  levels  may  also  help  pinpoint  click-points 
and thus detect the bias. 
7.7  Practical Implications 
As  we have found, the effective PCCP password space can be as 
low  as  30.58  bits.  This  is  substantially  weaker  than  PCCP’s 
theoretical strength and its commonly believed strength. To put it 
in  perspective,  this  effective  space  size  is  about  the  same  as  the 
theoretical  password  space  of  Windows  8’s  graphical  scheme 
(which is 30.1 bits according to [5]), significantly larger than the 
effective password space of typical text passwords (which is about 
middle  twenties  or  fewer  bits  [32]),  but  less  than  the  effective 
password  space  of  strong  text  passwords  used  for  high-value 
accounts (which is about 35 to 45 bits [33]). Therefore PCCP still 
offers reasonable security.  
To  improve  the  practical  security  of  PCCP,  we  recommend 
increasing  password  length.  Our  experiment  suggests  that  each 
click-point  contributes  about  6.12  (=30.58/5)  bits  in PCCP.  If  an 
effective password space of ) bits is needed, the number of click-
points  in  a  password  should  be M)/6.12 N.  For  example,  if  the 
password length is set to 8 click-points, still a click-point per image, 
the effective password space will be boosted to about 49 bits, which 
outperforms  what  strong  text  passwords  used  for  high-value 
accounts can offer. However, a usability study is needed to gauge 
how  well  users  can  cope  with  the  increased  length  in  terms  of 
password memorability.  
We  also  recommend  increasing  image  size.  The  images  used  in 
previous studies and ours were relatively small, 451 × 331. If we 
increase  the  image  size  to 640 × 480,  the  theoretical  space  of  5-
click passwords will increase from 43.1 bits to 48.4 bits. If we use 
images that have a similar density of  memorable points as in our 
case study, the effective password space will increase from about 
30.58 bits to about 36 bits. We expect such a change in image size 
will have little or no negative impact on password usability.  
Finally,  it  improves  PCCP  security  by  reducing  the  number  of 
shuffles  allowed  in  choosing  a  click-point  during  password 
creation, and by reducing the viewport size.  These  measures  will 
increase randomness in passwords. However, both could introduce 
usability  concerns,  and  therefore  careful  empirical  studies  are 
needed for determining an appropriate design choice.  
8.  CONCLUSION 
For the first time, we have introduced the concept of image point 
memorability,  proposed  the  first  heuristic  IPM  model  and  two 
methods to implement it, and applied them to novel and successful 
security  analyses  of  click-based  graphical  passwords,  leading  to 
both new techniques and insights. 
On the defensive side, the IMP model can be used to generate high-
quality  honeywords  for  any  click-based  graphical  password 
schemes. Our contribution in this arena includes the first systematic 
method for generating high-quality graphical honeywords, and a set 
of criteria for judging honeyword quality. Our empirical study with 
PassPoints  indicates  that  our  method  could  generate  honeywords 
that  exhibit  no  statistically  significant  difference  from  real 
passwords.  The  honeywords  generated  with  either  realization  of 
our  IPM  model  were  substantially  better  than  a  baseline  method 
that generates honeywords by randomly selecting image points.  
On  the  offensive  side,  the  IPM  model  offers  a  new  approach  to 
mounting effective dictionary attacks on any click-based graphical 
password  schemes.  In  this  arena,  we  have  presented  the  first 
successful dictionary attack on PCCP, which is robust to all prior 
dictionary attacks. Our empirical evaluation of PCCP security via 
the  IPM  model  shows  that  the  probability  distribution  of  PCCP 
passwords  was  seriously  biased,  in  contrast  to  previous  common 
beliefs. In our empirical study, the effective PCCP password space 
can  be  as  small  as  30.58  bits,  which  is  substantially  weaker  than 
both  its  theoretical  strength  (43  bits)  and  its  commonly  believed 
strength. This result is a major contribution to the understanding of 
the  real-world  security  of  click-based  passwords,  and  has 
significant implications.  
1228To  improve  the  practical  security  of  PCCP,  we  recommend 
increasing its password length and image size. We also recommend 
considering the option of reducing the number of shuffles allowed 
in choosing a click-point during password creation, and the option 
of  reducing  the  viewport  size.  As  some  of  these  measures  might 
introduce usability concerns, we also recommend careful empirical 
studies to determine the right design choices for PCCP.   
The power of our IPM model, as evidenced by the achievements, 
stems  mainly  from  1)  the  insight  that  both  memorable  and 
forgettable  aspects  of  image  points  should  be  captured,  and  2)  a 
memorability metric that is defined at the right granularity and that 
supports appropriate numerical methods for describing, measuring, 
and  comparing  relative  memorability  ranking  orders  of  image 
points. All these also represent our main conceptual and technical 
innovations that distance this work from prior art. 
Our  work  sheds  light  on  a  new  direction  for  analyzing  graphical 
passwords, with ample potential for future research. For example, 
it  is  interesting  to  explore  the  IPM  model’s  applicability  in 
analyzing  security  of,  and  in  generating  honeywords  for,  other 
graphical passwords. It is also useful to develop refined computer 
vision  algorithms  for  approximating  image  point  memorability. 
These are our ongoing work. 
Last  but  not  the  least,  our  work  on  image  point  memorability 
complements  the  research  on  the  memorability  of  images  as  a 
whole and the memorability of individual image regions in multiple 
disciplines.  We  expect  that  it  will  interest  a  wide  range  of 
communities, including computer security, HCI, computer vision, 
psychology and cognitive science. 
9.  ACKNOWLEDGMENTS 
We  thank  Ahmet  E.  Dirik  for  sharing  the  PassPoints  passwords 
used  in  [13],  Jussi  Palomaki  and  Beibei  Liu  (both  at  Newcastle 
University, England), Alexei Czeskis and the anonymous reviewers 
for  valuable  comments,  and  our  experiment  helpers  and 
participants for their contributions. 
10.  REFERENCES 
[1]  Dunphy, P., and Yan, J. 2007. Do background images 
improve “Draw a Secret” graphical passwords? In ACM 
CCS’07. 
[2]  Paivio, A., Rogers, T.B., and Smythe, P.C. 1968. Why are 
pictures easier to recall than words? Psychonomic Science. 
11, 4, 137-138. 
[3]  Defeyter, M.A., Russo, R., and McPartlin, P.L. 2009. The 
picture superiority effect in recognition memory: A 
developmental study using the response signal procedure. 
Cognitive Development. 24, 3, 265–273. 
[4]  Tao, H. and Adams, C. 2008. Pass-Go: A proposal to 
improve the usability of graphical passwords. Int. Journal of 
Network Security. 7, 2, 273-292.  
[5]  Zhao, Z., Ahn, G.-J., Seo, J.-J., and Hu, H. 2013. On the 
security of Picture Gesture Authentication. In USENIX 
Security 2013.  
[6]  Uellenbeck, S., Dürmuth, M., Wolf, C., and Holz, T. 2013. 
Quantifying the security of graphical passwords: the case of 
android unlock patterns. In ACM CCS’13. 161-172. 
[7]  Chiasson, S., Forget, A., Biddle, R., and van Oorschot, P. C. 
2008. Inﬂuencing users towards better passwords: Persuasive 
cued click-points. In Proc. of HCI. British Computer Society.  
[8]  Chiasson, S., Stobert, E., Forget, A., Biddle, R., and van 
Oorschot, P. C. 2012. Persuasive cued click-points: Design, 
implementation, and evaluation of a knowledge-based 
authentication mechanism. IEEE Trans. on Dependable and 
Secure Computing. 9, 2 (March/April 2012), 222-235. 
[9]  Wiedenbeck, S., Waters, J., Birget, J. C., Brodskiy, A., and 
Memon, N. 2005. Authentication using graphical passwords: 
Effects of tolerance and image choice. In Proc. Symp. on 
Usable Privacy and Security (SOUPS’05). 
[10] Wiedenbeck, S., Waters, J., Birget, J. C., Brodskiy, A., and 
Memon, N. 2005. PassPoints: Design and longitudinal 
evaluation of a graphical password system. Int. Journal of 
Human-Computer Studies (Special Issue on HCI Research in 
Privacy and Security). 63, 102–127. 
[11] Chiasson, S., van Oorschot, P. C., and Biddle, R. 2007. A 
second look at the usability of click-based graphical 
passwords. In Proc. Symp. on Usable Privacy and Security 
(SOUPS’07). 
[12] Golofit, K. 2007. Click passwords under investigation. In 
12th European Symposium on Research in Computer 
Security (ESORICS’07). LNCS vol. 4734 (Sept. 2007). 
[13] Dirik, A., Memon, N., and Birget, J. 2007. Modeling user 
choice in the PassPoints graphical password scheme. In Proc. 
Symp. on Usable Privacy and Security (SOUPS’07). 