到的第一个表就是目标表，如果没有找到则报错。（某个表即使存在，如果它的schema
不在search_path中，依然会查找失败）在搜索路径中的第一个schema叫做"当前schema"。
它是搜索时查询的第一 个schema，同时在没有声明schema名时，新创建的数据库对
象会默认存放在该schema下。
 每个数据库都包含一个pg_catalogschema，它包含系统表和所有内置数据类型、函数、
南大通用数据技术股份有限公司
32
GBase 8s V8.8开发者手册
操作符。pg_catalog 是搜索路径中的一部分，始终在临时表所属的模式后面，并在
search_path中所有模式的前面，即具有第二搜索优先级。这样确保可以搜索到数据库内
置对象。如果用户需要使用和系统内置对象重名的自定义对象时，可以在操作自定义对
象时带上自己的模式。
操作步骤
步骤1 创建管理用户及权限schema
 执行如下命令来创建一个schema。
gbase=# CREATE SCHEMA myschema;
当结果显示为如下信息，则表示成功创建一个名为myschema的schema。
CREATE SCHEMA
如果需要在模式中创建或者访问对象，其完整的对象名称由模式名称和具体的对象名称
组成。中间由符号“.”隔开。例如：myschema.table。
 执行如下命令在创建schema时指定owner。
gbase=# CREATE SCHEMA myschema AUTHORIZATION gbase;
当结果显示为如下信息，则表示成功创建一个属于omm用户，名为myschema的schema。
CREATE SCHEMA
步骤2 使用schema
在特定schema下创建对象或者访问特定schema下的对象，需要使用有schema修饰的
对象名。该名称包含schema名以及对象名，他们之间用“.”号分开。
 执行如下命令在myschema下创建mytable表。
gbase=# CREATE TABLE myschema.mytable(id int, name varchar(20));
CREATE TABLE
如果在数据库中指定对象的位置，就需要使用有schema修饰的对象名称。
 执行如下命令查询myschema下mytable表的所有数据。
gbase=# SELECT * FROM myschema.mytable;
id | name
----+------
(0 rows)
步骤3schema的搜索路径
南大通用数据技术股份有限公司
33
GBase 8s V8.8开发者手册
可以设置search_path配置参数指定寻找对象可用schema的顺序。在搜索路径列出的第
一个schema会变成默认的schema。如果在创建对象时不指定schema，则会创建在默认的
schema中。
 执行如下命令查看搜索路径。
gbase=# SHOW SEARCH_PATH;
search_path
----------------
"$user",public
(1 row)
 执行如下命令将搜索路径设置为myschema、public，首先搜索myschema。
gbase=# SET SEARCH_PATH TO myschema, public;
SET
步骤4schema的权限控制
默认情况下，用户只能访问属于自己的schema 中的数据库对象。如果需要访问其他
schema的对象，则该schema的所有者应该赋予他对该schema的usage权限。
通过将模式的CREATE权限授予某用户，被授权用户就可以在此模式中创建对象。注
意默认情况下，所有角色都拥有在public模式上的USAGE权限，但是普通用户没有在public
模式上的CREATE权限。普通用户能够连接到一个指定数据库并在它的public模式中创建
对象是不安全的，如果普通用户具有在public模式上的CREATE权限则建议通过如下语句
撤销该权限。
 撤销PUBLIC在public模式下创建对象的权限，下面语句中第一个“public”是模式，第
二个“PUBLIC”指的是所有角色。
gbase=# REVOKE CREATE ON SCHEMA public FROM PUBLIC;
REVOKE
 使用以下命令查看现有的schema：
gbase=# SELECT current_schema();
current_schema
----------------
myschema
(1 row)
 执行如下命令创建用户jack，并将myschema的usage权限赋给用户jack。
gbase=# CREATE USER jack IDENTIFIED BY 'xxxxxxxxx';
南大通用数据技术股份有限公司
34
GBase 8s V8.8开发者手册
CREATE ROLE
gbase=# GRANT USAGE ON schema myschema TO jack;
GRANT
 将用户jack对于myschema的usage权限收回。
gbase=# REVOKE USAGE ON schema myschema FROM jack;
REVOKE
步骤5 删除schema
 当schema为空时，即该schema下没有数据库对象，使用DROPSCHEMA命令进行删
除。例如删除名为nullschema的空schema。
gbase=# DROP SCHEMA IF EXISTS nullschema;
DROP SCHEMA
 当schema非空时，如果要删除一个schema及其包含的所有对象，需要使用CASCADE
关键字。例如删除myschema及该schema下的所有对象。
gbase=# DROP SCHEMA myschema CASCADE;
DROP SCHEMA
 执行如下命令删除用户jack。
gbase=# DROP USER jack;
DROP ROLE
3.8.2 创建和管理表
背景信息
GBase8s数据库支持的分区表为范围分区表、间隔分区表、列表分区表、哈希分区表。
 范围分区表：将数据基于范围映射到每一个分区，这个范围是由创建分区表时指定的分
区键决定的。这种分区方式是最为常用的，并且分区键经常采用日期，例如将销售数据
按照月份进行分区。
 间隔分区表：是一种特殊的范围分区表，相比范围分区表，新增间隔值定义，当插入记
录找不到匹配的分区时，可以根据间隔值自动创建分区。
 列表分区表：将数据中包含的键值分别存储再不同的分区中，依次将数据映射到每一个
分区，分区中包含的键值由创建分区表时指定。
 哈希分区表：将数据根据内部哈希算法依次映射到每一个分区中，包含的分区个数由创
建分区表时指定。
南大通用数据技术股份有限公司
35
GBase 8s V8.8开发者手册
分区表和普通表相比具有以下优点：
 改善查询性能：对分区对象的查询可以仅搜索自己关心的分区，提高检索效率。
 增强可用性：如果分区表的某个分区出现故障，表在其他分区的数据仍然可用。
 方便维护：如果分区表的某个分区出现故障，需要修复数据，只修复该分区即可。
 均衡I/O：可以把不同的分区映射到不同的磁盘以平衡I/O，改善整个系统性能。
普通表若要转成分区表，需要新建分区表，然后把普通表中的数据导入到新建的分区表
中。因此在初始设计表时，请根据业务提前规划是否使用分区表。
操作步骤
创建和管理表操作步骤如下，以使用默认表空间为例。
步骤1 创建分区表（假设用户已创建tpcdsschema）
gbase=# CREATE TABLE tpcds.customer_address (ca_address_sk integer NOT NULL ,
ca_address_id character(16) NOT NULL , ca_country character varying(20),
ca_gmt_offset numeric(5,2), ca_location_type character(20), ca_street_number
character(10), ca_street_name character varying(60), ca_street_type
character(15), ca_suite_number character(10),ca_city character varying(60),
ca_county character varying(30), ca_state character(2), ca_zip character(10),
ca_country character varying(20), ca_gmt_offset numeric(5,2),
ca_location_type character(20)) PARTITION BY RANGE (ca_address_sk) (PARTITION P1
VALUES LESS THAN(5000), PARTITION P2 VALUES LESS THAN(10000), PARTITION P3 VALUES
LESS THAN(15000), PARTITION P4 VALUES LESS THAN(20000), PARTITION P5 VALUES LESS
THAN(25000), PARTITION P6 VALUES LESS THAN(30000), PARTITION P7 VALUES LESS
THAN(40000), PARTITION P8 VALUES LESS THAN(MAXVALUE)) ENABLE ROW MOVEMENT;
当结果显示为如下信息，则表示创建成功。
CREATE TABLE
创建列存分区表的数量建议不超过1000个。
步骤2 插入数据
将表tpcds.customer_address的数据插入到表tpcds.web_returns_p2中。例如在数据库中
创建了一个表 tpcds.customer_address 的备份表 tpcds.web_returns_p2，现在需要将表
tpcds.customer_address中的数据插入到表tpcds.web_returns_p2中，则可以执行如下命令。
gbase=# CREATE TABLE tpcds.web_returns_p2 (
南大通用数据技术股份有限公司
36
GBase 8s V8.8开发者手册
ca_address_sk integer NOT NULL, ca_address_id character(16),
ca_street_number character(10) , ca_street_name character varying(60),
ca_street_type character(15), ca_suite_number character(10), ca_city
character varying(60), ca_county character varying(30), ca_state character(2),
ca_zip character(10), ca_country character varying(20), ca_gmt_offset
numeric(5,2), ca_location_type character(20))
PARTITION BY RANGE (ca_address_sk) (
PARTITION P1 VALUES LESS THAN(5000), PARTITION P2 VALUES LESS THAN(10000),
PARTITION P3 VALUES LESS THAN(15000), PARTITION P4 VALUES LESS THAN(20000),
PARTITION P5 VALUES LESS THAN(25000), PARTITION P6 VALUES LESS THAN(30000),
PARTITION P7 VALUES LESS THAN(40000), PARTITION P8 VALUES LESS THAN(MAXVALUE)
)
ENABLE ROW MOVEMENT;
CREATE TABLE
gbase=# INSERT INTO tpcds.web_returns_p2 SELECT * FROM tpcds.customer_address;
INSERT 0 0
步骤3 修改分区表行迁移属性
gbase=# ALTER TABLE tpcds.web_returns_p2 DISABLE ROW MOVEMENT;
ALTER TABLE
步骤4 删除分区
删除分区P8。
gbase=# ALTER TABLE tpcds.web_returns_p2 DROP PARTITION P8;
ALTER TABLE
步骤5 增加分区
增加分区P8，范围为 40000<=P8<=MAXVALUE。
gbase=# ALTER TABLE tpcds.web_returns_p2 ADD PARTITION P8 VALUES LESS THAN
(MAXVALUE);
ALTER TABLE
步骤6 重命名分区
重命名分区P8为P_9。
gbase=# ALTER TABLE tpcds.web_returns_p2 RENAME PARTITION P8 TO P_9;
ALTER TABLE
重命名分区P_9为P8。
gbase=# ALTER TABLE tpcds.web_returns_p2 RENAME PARTITION FOR (40000) TO P8;
ALTER TABLE
南大通用数据技术股份有限公司
37
GBase 8s V8.8开发者手册
步骤7 查询分区
查询分区P6。
gbase=# SELECT * FROM tpcds.web_returns_p2 PARTITION (P6);
gbase=# SELECT * FROM tpcds.web_returns_p2 PARTITION FOR (35888);
步骤8 删除分区表和表空间
gbase=# DROP TABLE tpcds.customer_address; DROP TABLE
gbase=# DROP TABLE tpcds.web_returns_p2; DROP TABLE
3.8.3 创建和管理索引
背景信息
索引可以提高数据的访问速度，但同时也增加了插入、更新和删除操作的处理时间。所
以是否要为表增加索引，索引建立在哪些字段上，是创建索引前必须要考虑的问 题。需要
分析应用程序的业务处理、数据使用、经常被用作查询的条件或者被要求排序的字段来确定
是否建立索引。
 索引建立在数据库表中的某些列上。因此，在创建索引时，应该仔细考虑在哪些列上创
建索引。
 在经常需要搜索查询的列上创建索引，可以加快搜索的速度。
 在作为主键的列上创建索引，强制该列的唯一性和组织表中数据的排列结构。
 在经常需要根据范围进行搜索的列上创建索引，因为索引已经排序，其指定的范围是连
续的。
 在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，
加快排序查询时间。
 在经常使用WHERE子句的列上创建索引，加快条件的判断速度。
 为经常出现在关键字ORDERBY、GROUPBY、DISTINCT后面的字段建立索引。
 索引创建成功后，系统会自动判断何时引用索引。当系统认为使用索引比顺序扫描
更快时，就会使用索引。
 索引创建成功后，必须和表保持同步以保证能够准确地找到新数据，这样就增加了
数据操作的负荷。因此请定期删除无用的索引。
南大通用数据技术股份有限公司
38
GBase 8s V8.8开发者手册
 分区表索引分为LOCAL索引与GLOBAL索引，一个LOCAL索引对应一个具体
分区，而GLOBAL索引则对应整个分区表。
操作步骤
创建分区表的步骤请参考3.8.2 创建和管理表。
步骤1 创建索引
创建分区表LOCAL索引tpcds_web_returns_p2_index1，不指定索引分区的名称。
gbase=# CREATE INDEX tpcds_web_returns_p2_index1 ON tpcds.web_returns_p2
(ca_address_id) LOCAL;
当结果显示为如下信息，则表示创建成功。
CREATE INDEX
 创建分区表LOCAL索引tpcds_web_returns_p2_index2，并指定索引分区的名称。
gbase=# CREATE INDEX tpcds_web_returns_p2_index2 ON tpcds.web_returns_p2
(ca_address_sk) LOCAL
(
PARTITION web_returns_p2_P1_index,
PARTITION web_returns_p2_P2_index TABLESPACE example3, PARTITION
web_returns_p2_P3_indexTABLESPACEexample4,PARTITIONweb_returns_p2_P4_index,
PARTITIONweb_returns_p2_P5_index,PARTITIONweb_returns_p2_P6_index,PARTITION
web_returns_p2_P7_index, PARTITION web_returns_p2_P8_index
) TABLESPACE example2;
当结果显示为如下信息，则表示创建成功。
CREATE INDEX
 创建分区表GLOBAL索引tpcds_web_returns_p2_global_index。
CREATEINDEXtpcds_web_returns_p2_global_indexONtpcds.web_returns_p2
(ca_street_number)GLOBAL;
步骤2 修改索引分区的表空间
 修改索引分区web_returns_p2_P2_index的表空间为example1。
gbase=# ALTER INDEX tpcds.tpcds_web_returns_p2_index2 MOVE PARTITION
web_returns_p2_P2_index TABLESPACE example1;
当结果显示为如下信息，则表示修改成功。
ALTER INDEX
南大通用数据技术股份有限公司
39
GBase 8s V8.8开发者手册
 修改索引分区web_returns_p2_P3_index的表空间为example2。
gbase=# ALTER INDEX tpcds.tpcds_web_returns_p2_index2 MOVE PARTITION
web_returns_p2_P3_index TABLESPACE example2;
当结果显示为如下信息，则表示修改成功。
ALTER INDEX
步骤3 重命名索引分区
执行如下命令对索引分区进行重命名操作。如将web_returns_p2_P8_index重命名为
web_returns_p2_P8_index_new。
gbase=# ALTER INDEX tpcds.tpcds_web_returns_p2_index2 RENAME PARTITION
web_returns_p2_P8_index TO web_returns_p2_P8_index_new;
当结果显示为如下信息，则表示重命名成功。
ALTER INDEX
步骤4 查询索引
 执行如下命令查询系统和用户定义的所有索引。
gbase=# SELECT RELNAME FROM PG_CLASS WHERE RELKIND='i' or RELKIND='I';
 执行如下命令查询指定索引的信息。
gbase=# \di+ tpcds.tpcds_web_returns_p2_index2
步骤5 删除索引
gbase=# DROP INDEX tpcds.tpcds_web_returns_p2_index1;
gbase=# DROP INDEX tpcds.tpcds_web_returns_p2_index2;
当结果显示为如下信息，则表示删除成功。
DROP INDEX
GBase8s支持4种创建索引的方式请参见表3-4。
 索引创建成功后，系统会自动判断何时引用索引。当系统认为使用索引比顺序扫描
更快时， 就会使用索引。
索引创建成功后，必须和表保持同步以保证能够准确地找到新数据，这样就增加了数据
操作的负荷。因此请定期删除无用的索引。
南大通用数据技术股份有限公司