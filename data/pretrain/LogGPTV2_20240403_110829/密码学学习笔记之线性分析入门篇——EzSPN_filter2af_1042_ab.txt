            return False
    def linearAttack():
        key2 = []
        for i in range(8): # 第二轮子密钥的第i段
            count = [0 for _ in range(256)]
            for guessed_key in range(256):
                print("[+] Cracking key...({}-{})".format(i, guessed_key))
                for j in range(10000):
                    if calcOffset(plain[j], cipher[j], i, guessed_key) == True:
                        count[guessed_key] += 1
            bias = [abs(x - 5000) / 10000 for x in count]
            key2.append(bias.index(max(bias)))
        return key2
linearAttack()中我们主要关注那个循环。这里调用了calcOffset函数，传入了一对明文密文对（plain[j],
cipher[j]）、索引（i）、以及猜测的密钥（guessed_key）。
在calcOffset中，首先用密文异或了guessed_key，然后根据值获取从Sbox的输入，然后乘以了coef（这里已经是原来coef的逆了），接着是u2
= bitxor(ct[j], 0b10000000)，用了0b10000000作为掩码，即选取了密文的第一个bit。然后选取 linearInput[1