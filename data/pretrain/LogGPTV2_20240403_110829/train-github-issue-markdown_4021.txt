## Release 5.1.1
Hi community,
After the release of 5.1.0 version, we have received a lot of feedback  
from users and developers. Now we plan to release the ShardingSphere 5.1.1  
version this week, which has made a lot of optimization and improvement for  
these feedback.
Please refer to this release notes to confirm whether it contains the  
features you expect. If I miss anything, please remind me ASAP. If there  
are any suggestions, please feel free to tell us.
Mail: https://lists.apache.org/thread/o9ys6db6mdnwlx0osd4nflw1rwbb3086
## Release Notes
### New Feature
  1. Kernel: support alter materialized view for PostgreSQL
  2. Kernel: support declare for PostgreSQL
  3. Kernel: support discard for PostgreSQL
  4. Kernel: Add mode to parser to support $$ in PostgreSQL
  5. Kernel: Support MySQL create tablespace statement parse
  6. Scaling: Implement stop source writing and restore source writing
  7. Scaling: Support partial tables scale-out
  8. DistSQL: New DistSQL syntax: `SHOW UNUSED RESOURCES`
  9. Mode: Added persistent `XA Recovery Id` to Governance Center
  10. Mode: Database discovery adds delayed master-slave delay function
  11. Distributed Transaction: Add savepoint support for ShardingSphere proxy
  12. Distributed Transaction: Support auto rollback when report exception in transaction block for PostgreSQL and openGauss
  13. Distributed Transaction: Make it is easy to use with Narayana
  14. Distributed Transaction: Add savepoint support for ShardingSphere-JDBC
### Enhancement
  1. Kernel: Refactor kernel to improve performance
  2. Proxy: Reduce Docker image size of ShardingSphere-Proxy
  3. Proxy: ShardingSphere-Proxy supports set names statements
  4. Proxy: ShardingSphere-Proxy MySQL supports multi statements
  5. Scaling: Only one proxy node could do data consistency check in proxy cluster
  6. Scaling: Replace scaling input and output config fields type from int to Integer
  7. Scaling: Update MySQL checksum SQL
  8. Scaling: Improve scaling job progress deletion in reset and progress check before starting job
  9. Scaling: Improve `FinishCheckJob` data consistency check when target tables already have the same data as source tables
  10. Scaling: Break scaling job ASAP when there is unsupported table since primary key
  11. Scaling: Reuse `ClusterPersistRepository` of proxy in `PipelineAPIFactory`
  12. Scaling: Update jobId generation algorithm, and make it support idempotency
  13. DistSQL: Support configuration data type and length when CREATE/ALTER ENCRYPT RULE
  14. DistSQL: Unify the display results of `SHOW ALL VARIABLES` and `SHOW VARIABLE`
  15. DistSQL: Remove the effect of binding order when `DROP BINDING TABLE RULES`
  16. DistSQL: Add column `mode_type` in the result of `SHOW INSTANCE LIST`
  17. DistSQL: Add validation to the mode when `ENABLE/DISABLE INSTANCE`
  18. DistSQL: Check if the rule is in used when `DROP READWRITE_SPLITTING RULE`
  19. DistSQL: Check duplicate resource names when `CREATE READWRITE_SPLITTING RULE`
  20. DistSQL: Add column `delay_time` to the result of `SHOW READWRITE_SPLITTING READ RESOURCES`
  21. DistSQL: Support `IF EXISTS` when `DROP RULE`
  22. DistSQL: Optimize the prompt information of connection failure when `ADD/ALTER RESOURCE`
  23. Mode: Add schema-level global distributed locks
  24. Mode: Add schema version number to support batch execution of DistSQL
  25. Mode: Persistent metadata optimization in cluster mode
  26. Mode: The database discovery add the `schemaName` identifier when create a JOB
### Refactor
  1. Kernel: Refactor test case for encrypt
  2. Kernel: Refactor metadata to support PostgreSQL database and schema
  3. Scaling: Remove HikariCP dependency in pipeline modules
  4. Mode: Refactor governance center storage node structure
  5. Mode: Refactor governance center meta data structure
  6. Mode: Adjust the database discovery MGR module to MySQL module
### Bug Fix
  1. Kernel: Fix function with no parameter
  2. Kernel: Fix `InsertValueContext.getValue` cast exception
  3. Kernel: Fix aggregate distinct column error
  4. Kernel: Fix NPE when rewrite parameter with schema
  5. Kernel: Fix NPE caused by `GeneratedKeysResultSet` not return `columnName` in read-write splitting
  6. Kernel: Fix show tables statement loses part of the single table
  7. Kernel: Fix ModShardingAlgorithm wrong route result when exist same suffix table
  8. Kernel: Fix sql parse error when contains key in assignment clause and optimize index parse
  9. Kernel: Fix NumberFormatException when sharding algorithm config number props
  10. Kernel: Fix wrong metadata when config single dataSource for read-write splitting
  11. Kernel: Fix statement close exception when use `BatchPreparedStatementExecutor`
  12. Kernel: Fix rewrite lowercase logic when sql contains shorthand projection
  13. Kernel: Fix NullPointerException when start up proxy with memory mode
  14. Proxy: Fix literals may be replaced by mistake in PostgreSQL/openGauss protocol
  15. Proxy: Fix ShardingSphere-Proxy PostgreSQL with multi-schema cannot be connected by PostgreSQL JDBC Driver 42.3.x
  16. Proxy: Fix timestamp nanos inaccurate in ShardingSphere-Proxy MySQL
  17. Proxy: Complete ShardingSphere-Proxy PostgreSQL codec for numeric in binary format
  18. Proxy: Potential performance issue and risk of OOM in ShardingSphere-JDBC
  19. Proxy: Fix Operation not allowed after ResultSet closed occasionally happens in ShardingSphere-Proxy MySQL
  20. Proxy: Fix NPE causes by ShardingSphere-JDBC executeBatch without addBatch
  21. Scaling: Fix failed or stopped job could not be started by DistSQL except restarting proxy
  22. DistSQL: Fix parsing exception for inline expression when `CREATE SHARDING TABLE RULE`
  23. DistSQL: Fix parsing exception when password is keyword `password` in `ADD RESOURCE` statement
  24. Mode: Fixed loss of compute nodes due to ZooKeeper session timeout
  25. Mode: Fixed the case of the table name in the governance center
  26. Mode: DistSQL enable disable instance refresh in-memory compute node status
  27. Mode: Fixed database discovery unable to create Rule through DistSQL