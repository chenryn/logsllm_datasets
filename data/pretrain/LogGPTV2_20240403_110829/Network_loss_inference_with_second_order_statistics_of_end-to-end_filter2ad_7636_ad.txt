### 优化后的文本

**图5：LIA算法在定位拥塞链路方面的准确性。**

该方法的真正优势不仅在于能够推断出拥塞链路的位置，还在于能够推断出链路的丢包率，如图6所示。在图中，我们绘制了绝对误差（推断丢包率与真实值之间的差值的绝对值）和误差因子（10）的累积分布函数（CDFs），其中m = 50个快照。从图中可以看出，这两种误差都非常小：推断值几乎完全匹配真实值。这些小误差不仅由端到端丢包率的采样误差引起，还由我们将从R中移除的链路的丢包率近似为0所导致。如果一些拥塞链路（具有不可忽略的丢包率）被移除，这种类型的误差可能是致命的，因为它们会影响所有包含它们的方程（3）。幸运的是，在所有模拟中，R*始终包含所有拥塞链路的列。因此，在我们的模拟结果中，这种近似引入的误差很小。我们在第6.3节中进一步探讨了这些近似误差的影响。

### 6.2 网格拓扑的结果

我们进一步评估了LIA算法在网格拓扑中的表现。我们使用BRITE [21]生成的不同网格拓扑，包括WAXMAN、Barabasi-Albert和分层拓扑，每个拓扑包含1000个节点；PlanetLab拓扑[34]，包含500个信标和14922条不同链路（数据收集于2006年7月15日）；以及DIMES [33]拓扑，包含801个信标和35067条不同链路（数据收集于2006年5月至7月）。

在模拟拓扑中，终端主机是具有最少出度的节点。在PlanetLab和DIMES拓扑中，所有终端主机都是给定的。DIMES和PlanetLab都是真实的互联网拓扑。大多数DIMES主机位于商业互联网中，而PlanetLab主机主要位于大学和研究机构中。

在所有模拟中，终端主机既是信标也是探测目标。链路丢包模型是LLRD1，其中p = 10%的链路拥塞。我们使用默认值m = 50和S = 1000。结果见表2，每个条目是10次运行的平均值。为了清晰起见，我们省略了置信区间。

结果显示，LIA算法在所有拓扑中都实现了高精度。这是可以理解的，因为该算法理论上可以在所有拓扑中工作（定理1）。在某些拓扑中，如BRITE分层拓扑或DIMES拓扑，LIA的表现不如其他拓扑。这些不准确是由（9）中的近似引起的。然而，在所有拓扑中，链路方差都被精确学习。

图7显示了拥塞链路数量与R*中列数的比率。我们可以清楚地看到，拥塞链路的数量总是小于R*中的列数。当我们移除R中的列直到达到满秩矩阵R*时，这意味着我们仅通过移除未拥塞链路的列来达到满秩矩阵R*。因此，我们首先计算链路方差然后求解（9）的方法是合适的，因为它不会将任何拥塞链路的丢包率设为零。

### 6.3 p和S的影响

在本节中，我们探讨拥塞链路百分比p和探针数量S对LIA算法准确性的影响。我们在PlanetLab网络上进行了模拟，其中m = 50个快照。在图8.a中，我们绘制了当S = 1000且p从5%变化到25%时，LIA算法定位拥塞链路的检测率（DR）和误报率（FPR）。在图8.b中，我们绘制了当p = 10%且S从200变化到1000时，LIA算法的DR和FPR。

随着p的增加，链路方差v仍然可以被精确学习，正如第4节所证明的。然而，当p较大时，一些拥塞链路可能需要从R中移除以获得R*（9）。因此，LIA算法在计算链路丢包率和定位拥塞链路的准确性会随着p的增长而下降。当S较小时，端到端丢包率φ的采样误差也会影响LIA的准确性。然而，S的影响相对较小。

### 6.4 运行时间

在所有模拟中，求解（3）所需的时间在毫秒级，而求解（9）所需的时间大约是其10倍。这些运行时间如下：

- **图8.a：**
  - 检测率（DR）
  - 误报率（FPR）
  - 拥塞链路百分比（p）

- **图8.b：**
  - 检测率（DR）
  - 误报率（FPR）
  - 每个快照中的探针数量（S）

这些结果表明，LIA算法在各种参数设置下都能保持较高的准确性和可接受的运行时间。