### MakeXDocRequest and Provenance Label

The `MakeXDocRequest` function ensures that the programmer cannot forge the provenance label. If the constructed label does not accurately reflect the URL passed to `MakeXDocRequest`, a type error will be triggered, indicating a policy violation.

### GlueMiner Overview

**GlueMiner** differs from **TwitterMiner** in that it does not add any data to the personal store. Instead, it provides a privacy-preserving conduit between third-party websites that want to offer personalized content, the user's personal store information, and another third party, getglue.com, which uses personal information to provide personalized content recommendations. The core functionality of GlueMiner is the `predictResultsByTopic` function, which effectively multiplexes the user’s personal store to getglue.com. A third-party site can use this function to query getglue.com using data from the personal store. This communication is made explicit to the user in the policy expressed by the extension.

Given the broad range of topics on which getglue.com is knowledgeable, it makes sense to open this functionality to pages from many domains. However, this creates novel policy issues:
- The user may not want information collected from netflix.com to be queried on behalf of linkedin.com but may still agree to allow linkedin.com to use information from twitter.com or facebook.com.
- Similarly, the user may want sites such as amazon.com and fandango.com to use the extension to ask getglue.com for recommendations based on data collected from netflix.com.

### Policy Requirements for GlueMiner

The policy requirements for GlueMiner are facilitated by REPRIV’s support for multi-label provenance tracking. Key points include:
- The extension must only communicate personal store information from twitter.com and facebook.com to linkedin.com through the `predictResultsByTopic` function. Additionally, the information ultimately returned will be tagged with labels from getglue.com, as it was communicated to this host to obtain recommendations.
- The extension must only leak information from netflix.com to getglue.com on behalf of amazon.com or fandango.com, creating policy requirements analogous to the previous case.
- It is assumed that getglue.com is not a malicious party and does not otherwise pose a threat to the user's privacy. This judgment is ultimately left to the user, as REPRIV makes explicit the requirement to communicate with this party and guarantees that the leak cannot occur to any other party.

### Experimental Evaluation

#### Performance Overhead

We evaluated the performance overhead of REPRIV on web browsing activities. Several aspects of REPRIV can affect browsing performance, including:
- **In-Browser Behavior Mining:** Nearly all documents are classified in around one-tenth of a second, indicating that REPRIV does not adversely affect browser performance.
- **Personalization Extensions:** Even in an extreme case with one hundred miners loaded into memory, only 20.3 megabytes of memory are needed.

#### Classifier Effectiveness

To characterize the quality of the default in-browser classifier, we focused on the rate at which a user’s interest profile converges. Our evaluation used anonymized browsing history traces from IE 8 users who opted into data collection. The measure of convergence is the percentage of entries in the current top-ten list of interest categories that are also present in the final top-ten list. 

Key findings include:
- After 20% completion, 50% of the final top-ten categories are already present, and the global convergence curve has reached a point of gradual decline.
- This implies that the results returned by the core mining algorithm will not change dramatically from this point, and one-fifth of the way through the trace, REPRIV’s estimate of the users’ interests has converged.

#### In-Browser vs. Public Data Mining

We compared REPRIV’s mining algorithm when used over single-user browsing history data to the results obtained by examining publicly-accessible information (e.g., social networking profiles, tweets). Key issues with public data mining include:
- **Homonyms:** Most names have several homonyms, affecting the precision and accuracy of behavior profiles.
- **Noise in Source Data:** Our results show that the behavior mining algorithm was able to come to a much stronger conclusion given browsing histories, supporting our claims about the availability of high-quality behavior information within the browser.

In future work, we plan to evaluate the interest mining capabilities of large third-party tracking networks such as DoubleClick and Facebook in comparison to the ability to do so inside the browser. Intuitively, the results inside the browser must be at least as good as those attainable by such networks, as the browser has access to at least as much of the user’s data.