---
author: Muhammad Arul
category: 系统运维
comments_data:
- date: '2017-03-31 00:24:27'
  message: hhvm还有必要继续推广吗？php7比hhvm好得多。
  postip: 175.10.193.230
  username: 来自湖南的 QQ Browser 9.5|Windows 7 用户
count:
  commentnum: 1
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 7824
date: '2017-03-30 15:40:48'
editorchoice: false
excerpt: HHVM （HipHop Virtual Machine） 是一个用于执行以 PHP 和 Hack 语言编写的代码的虚拟环境。它是由 Facebook
  开发的，提供了当前 PHP 7 的大多数功能。
fromurl: https://www.howtoforge.com/tutorial/how-to-install-wordpress-with-hhvm-and-nginx-on-centos-7/
id: 8356
islctt: true
largepic: /data/attachment/album/201703/30/154015piw0vxfk1vzwll76.png
permalink: /article-8356-1.html
pic: /data/attachment/album/201703/30/154015piw0vxfk1vzwll76.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: HHVM （HipHop Virtual Machine） 是一个用于执行以 PHP 和 Hack 语言编写的代码的虚拟环境。它是由 Facebook
  开发的，提供了当前 PHP 7 的大多数功能。
tags:
- WordPress
- HHVM
- PHP
- SELinux
thumb: false
title: 如何在 CentOS 7 中在 HHVM 和 Nginx 之上安装 WordPress
titlepic: true
translator: GHLandy
updated: '2017-03-30 15:40:48'
---
HHVM （HipHop Virtual Machine） 是一个用于执行以 PHP 和 Hack 语言编写的代码的虚拟环境。它是由 Facebook 开发的，提供了当前 PHP 7 的大多数功能。要在你的服务器上运行 HHVM，你需要使用 FastCGI 来将 HHVM 和 Nginx 或 Apache 衔接起来，或者你也可以使用 HHVM 中的内置 Web 服务器 Proxygen。
![](/data/attachment/album/201703/30/154015piw0vxfk1vzwll76.png)
在这篇教程中，我将展示给你如何在 Nginx Web 服务器的 HHVM 上安装 WordPress。这里我使用 CentOS 7 作为操作系统，所以你需要懂一点 CentOS 操作的基础。
**先决条件**
* CentOS 7 - 64位
* Root 权限
### 步骤 1 - 配置 SELinux 并添加 EPEL 仓库
在本教程中，我们将使用 SELinux 的强制模式，所以我们需要在系统上安装一个 SELinux 管理工具。这里我们使用 `setools` 和 `setrobleshoot` 来管理 SELinux 的各项配置。
CentOS 7 已经默认启用 SELinux，我们可以通过以下命令来确认：
```
# sestatus
# getenforce
```
![验证 SELinux 运行状态](/data/attachment/album/201703/30/154050wli510n0fq5nbfcb.png)
如图，你能够看到，SELinux 已经开启了强制模式。
接下来就是使用 `yum` 来安装 `setools` 和 `setroubleshoot` 了。
```
# yum -y install setroubleshoot setools net-tools
```
安装好这两个后，再安装 EPEL 仓库。
```
# yum -y install epel-release
```
### 步骤 2 - 安装 Nginx
Nginx (发音：engine-x) 是一个高性能、低内存消耗的轻量级 Web 服务器软件。在 CentOS 中可以使用 `yum` 命令来安装 Nginx 包。确保你以 root 用户登录系统。
使用 `yum` 命令从 CentOS 仓库中安装 nginx。
```
# yum -y install nginx
```
现在可以使用 `systemctl` 命令来启动 Nginx，同时将其设置为跟随系统启动。
```
# systemctl start nginx
# systemctl enable nginx
```
为确保 Nginx 已经正确运行于服务器中，在浏览器上输入服务器的 IP，或者如下使用 `curl` 命令检查显示结果。
```
# curl 192.168.1.110
```
我这里使用浏览器来验证。
![Nginx 正确运行](/data/attachment/album/201703/30/154050gzhaia3zxpoai89o.png)
### 步骤 3 - 安装并配置 MariaDB
MariaDB 是由原 MySQL 开发者 Monty Widenius 开发的一款开源数据库软件，它由 MySQL 分支而来，与 MySQL 的主要功能保持一致。在这一步中，我们要安装 MariaDB 数据库并为之配置好 root 密码，然后再为所要安装的 WordPress 创建一个新的数据库和用户。
安装 mariadb 和 mariadb-server：
```
# yum -y install mariadb mariadb-server
```
启动 MariaDB 并添加为服务，以便随系统启动。
```
# systemctl start mariadb
# systemctl enable mariadb
```
现在 MariaDB 已经启动了，还需要为 mariadb/mysql 数据库配置 root 用户密码。输入以下命令来设置 MariaDB root 密码。
```
# mysql_secure_installation
```
提示设置 root 用户密码时，输入新密码进行设置：
```
Set root password? [Y/n] Y
New password:
Re-enter new password:
Remove anonymous users? [Y/n] Y
 ... Success!
Disallow root login remotely? [Y/n] Y
 ... Success!
Remove test database and access to it? [Y/n] Y
Reload privilege tables now? [Y/n] Y
 ... Success!
```
这样就设置好了 MariaDB 的 root 密码。现在登录到 MariaDB/MySQL shell 并为 WordPress 的安装创建一个新数据库 `wordpressdb` 和新用户 `wpuser`，密码设置为 `wpuser@`。为你的设置选用一个安全的密码。
登录到 MariaDB/MySQL shell：
```
# mysql -u root -p
```
接着输入你刚刚设置的 root 用户密码。
创建数据库和用户：
```
MariaDB [(none)]> create database wordpressdb;
MariaDB [(none)]> create user wpuser@localhost identified by 'wpuser@';
MariaDB [(none)]> grant all privileges on wordpressdb.* to wpuser@localhost identified by 'wpuser@';
MariaDB [(none)]> flush privileges;
MariaDB [(none)]> \q
```
![为 WordPress 的安装创建数据库和用户](/data/attachment/album/201703/30/154055t3tc327j38chm38y.png)
现在安装好了 MariaDB，并为 WordPress 创建好了数据库。
### 步骤 4 - 安装 HHVM
对于 HHVM，我们需要安装大量的依赖项。作为选择，你可以从 GitHub 下载 HHVM 的源码来编译安装，也可以从网络上获取预编译的包进行安装。在本教程中，我使用的是预编译的安装包。
为 HHVM 安装依赖项：
```
# yum -y install cpp gcc-c++ cmake git psmisc {binutils,boost,jemalloc,numactl}-devel \
> {ImageMagick,sqlite,tbb,bzip2,openldap,readline,elfutils-libelf,gmp,lz4,pcre}-devel \
> lib{xslt,event,yaml,vpx,png,zip,icu,mcrypt,memcached,cap,dwarf}-devel \
> {unixODBC,expat,mariadb}-devel lib{edit,curl,xml2,xslt}-devel \
> glog-devel oniguruma-devel ocaml gperf enca libjpeg-turbo-devel openssl-devel \
> mariadb mariadb-server libc-client make
```
然后是使用 `rpm` 安装从 [HHVM 预编译包镜像站点](http://mirrors.linuxeye.com/hhvm-repo/7/x86_64/) 下载的 HHVM 预编译包。
```
# rpm -Uvh http://mirrors.linuxeye.com/hhvm-repo/7/x86_64/hhvm-3.15.2-1.el7.centos.x86_64.rpm
# ln -s /usr/local/bin/hhvm /bin/hhvm
```
安装好 HHVM 之后使用如下命令按了验证：
```
# hhvm --version
```
为了能使用 PHP 命令，可以把 `hhvm` 命令设置为 `php`。这样在 shell 中输入 `php` 命令的时候，你会看到和输入 `hhvm` 命令一样的结果。
```
# sudo update-alternatives --install /usr/bin/php php /usr/bin/hhvm 60
# php --version
```
![安装 HHVM](/data/attachment/album/201703/30/154056wkljh19kkjry3284.png)
### 步骤 5 - 配置 HHVM
这一步中，我们来配置 HHVM 以系统服务来运行。我们不通过端口这种常规的方式来运行它，而是选择使用 unix socket 文件的方式，这样运行的更快速一点。
进入 systemd 配置目录，并创建一个 `hhvm.service` 文件。
```
# cd /etc/systemd/system/
# vim hhvm.service
```
复制粘贴如下配置到文件中去。
```
[Unit]
Description=HHVM HipHop Virtual Machine (FCGI)
After=network.target nginx.service mariadb.service
[Service]
ExecStart=/usr/local/bin/hhvm --config /etc/hhvm/server.ini --user nginx --mode daemon -vServer.Type=fastcgi -vServer.FileSocket=/var/run/hhvm/hhvm.sock
[Install]
WantedBy=multi-user.target
```
保存文件退出 vim。
接下来，进入 `hhvm` 目录并编辑 `server.ini` 文件。
```
# cd /etc/hhvm/
# vim server.ini
```
将第 7 行 `hhvm.server.port` 替换为 unix socket，如下：
```
hhvm.server.file_socket = /var/run/hhvm/hhvm.sock
```
保存文件并退出编辑器。
我们已在 hhvm 服务文件中定义了 hhvm 以 `nginx` 用户身份运行，所以还需要把 socket 文件目录的属主变更为 `nginx`。然后我们还必须在 SELinux 中修改 hhvm 目录的权限上下文以便让它可以访问这个 socket 文件。
```
# chown -R nginx:nginx /var/run/hhvm/
# semanage fcontext -a -t httpd_var_run_t "/var/run/hhvm(/.*)?"
# restorecon -Rv /var/run/hhvm
```
服务器重启之后，hhvm 将不能运行，因为没有存储 socket 文件的目录，所有还必须在启动的时候自动创建一个。
使用 vim 编辑 `rc.local` 文件。