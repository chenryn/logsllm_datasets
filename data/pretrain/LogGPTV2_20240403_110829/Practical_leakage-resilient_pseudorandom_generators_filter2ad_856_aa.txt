title:Practical leakage-resilient pseudorandom generators
author:Yu Yu and
François-Xavier Standaert and
Olivier Pereira and
Moti Yung
Practical Leakage-Resilient Pseudorandom Generators
Yu Yu
Université catholique de
Louvain, Crypto Group
B-1348 Louvain-la-Neuve
Belgium
François-Xavier
Standaert
Université catholique de
Louvain, Crypto Group
B-1348 Louvain-la-Neuve
Belgium
Olivier Pereira
Université catholique de
Louvain, Crypto Group
B-1348 Louvain-la-Neuve
Belgium
Moti Yung
Columbia University
Google Inc
New York, NY, USA
ABSTRACT
Cryptographic systems and protocols are the core of many
Internet security procedures (such as SSL, SSH, IPSEC,
DNSSEC, secure mail, etc.). At the heart of all crypto-
graphic functions is a good source of randomness, and for
eﬃciency, the primitive of pseudorandom generator (PRG).
PRG can also be used in the design of stream ciphers, for
secure communications. The Internet is nowadays composed
of many types of devices with very diﬀerent hardware and
software characteristics. Hence, one of the concerns in such
open environments is the information “leakage” and its ex-
ploitation via the so-called “side channel attacks”.
A very extensive and current research direction is de-
signing basic cryptographic operations that are resistant to
such attacks. Recent works on leakage-resilient PRG and
stream ciphers did signiﬁcant progresses in providing tools
for the analysis of side-channel attacks in the standard cryp-
tographic setting. But in the absence of a completely sound
model for the leakages, the only constructions that can be
proven secure require tweaks that do not correspond to the
physical intuition. For example, constructions using an al-
ternating structure, in which a key bit-size of 2n can only
guarantee a security of at most 2n, have been designed for
this purpose.
In this paper, we provide two methodological contribu-
tions, allowing to get rid of these tweaks, or to reduce their
impact towards negligible performance overheads. First, we
show that the leakage-resilience of a natural, i.e. conform
to engineering experience, stateful PRG can be proven un-
der a random oracle based assumption. We then discuss the
relevance of this assumption, and argue that it nicely cap-
tures the reality of actual side-channel attacks. Second, we
provide the ﬁrst construction of a PRG without alternat-
ing structure, that exploits the keying material to its full
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
Copyright 2010 ACM 978-1-4503-0244-9/10/10 ...$10.00.
length and that can be proven leakage-resilient in the stan-
dard model. For this purpose, we only need to assume a
non adaptive leakage function and a small public memory.
We also argue that such an assumption is not only realistic,
but necessary for any leakage-resilient primitive that grants
adversaries with a (stateless) reinitialization capability. To-
gether with weaker requirements for practical implementa-
tions, these contributions further reduce the gap between the
theory and practice of physically observable cryptography.
Categories and Subject Descriptors
H.4 [Information Systems Applications]: Miscellaneous
General Terms
Algorithms, Design, Security
1.
INTRODUCTION
Side-channel attacks are one of the most dangerous threats
against cryptographic algorithm implementations: these at-
tacks circumvent traditional security proofs by going out-
side the model in which these proofs are realized, and are
generally much more eﬀective than traditional cryptanaly-
sis. As a consequence, resilience to these attacks has in-
tensively been studied during the last ﬁfteen years, through
the design of countermeasures at low abstraction implemen-
tation levels, using gate masking and randomization tech-
niques or speciﬁc logic styles for instance, and assessing the
eﬀectiveness of these countermeasures through experimen-
tal evidence. More recently, an important body of works
addressed this issue at a higher abstraction level, proposing
models capturing physical attacks and designing new primi-
tives of which the security can be proven within these models
[1, 3, 4, 7, 9, 10, 11, 12, 19, 23, 25, 28, 29, 33, 35, 37].
These new models adopt a point of view that is comple-
mentary to the traditional one: while the traditional ap-
proaches aim at limiting the amount of information leaked
by a device, the recent works cited above aim at limiting
the impact of information leakage. In the bounded retrieval
model [5, 8], one considers an attacker who is not able to get
more than a certain amount of information through leakages,
this amount of information being bounded for the whole
lifetime of the system. Such a model appears to be partic-
141ularly suitable for mitigating the risks of memory attacks
such as [13], for instance.
In another line of work, intro-
duced by Dziembowski and Pietrzak [23], the computation
performed by a leaking device is partitioned into rounds,
and it is assumed that information leakages occur indepen-
dently in each round, and are a function of the part of the
system state that is active during the corresponding round.
In this setting, the amount of information leaked per round
is still expected to be bounded, but the total amount of in-
formation leaked can be much larger than in the bounded re-
trieval model. This second approach, which we adopt here, is
particularly suitable for the analysis of cryptographic prim-
itives that are attacked through power or electromagnetic
analysis for instance [21, 30], and are inherently executed
iteratively, which is most common for the symmetric cryp-
tography primitives that we are studying in this paper. The
advantage of such an approach is that it simpliﬁes the (ar-
guably diﬃcult) task of hardware designers. Rather than
asking them to protect an implementation against an ad-
versary who can monitor the leakages corresponding to an
arbitrary number of iterations of the primitive, we only re-
quire to protect a single iteration, and rely on sound math-
ematical tools to ensure that the security of one round can
be extended to the security of multiple rounds.
In other
words, we still rely on low abstraction level countermeasures
to protect the cryptographic implementations, but in a less
demanding way.
The main ingredient for resilience to bounded leakages
per round is key update: One designs schemes in such a
way that, in each round, leakages occur on diﬀerent keys
(or secret data). This, in turn, ensures that repeated mea-
surements occurring during diﬀerent rounds cannot be easily
combined in order to recover a complete key. The intuition
behind needing key update is demonstrated by looking at the
side-channel attack resilience of the two pseudorandom gen-
erators depicted in Fig. 1. Running the ANSI X9.17 PRG,
which is shown in high-level principle in Fig. 1a, requires, in
each iteration, the encryption of some values with the key
k. As a result, the leakage of even one single bit of k per
iteration might be enough to fully compromise this genera-
tor after a few iterations. On the other hand, the stateful
PRG shown in Fig. 1b involves computation with updated
keys in each round, which is expected to make this type of
construction much more resilient to side-channel attacks.
s
k
k
(a)
xi
k0
k1
x1
k2
x2
k3
x3
(b)
Figure 1: (a) ANSI X9.17 PRG, (b) Stateful PRG.
Related work.
In fact, the intuitive idea of combining a bounded leak-
age per iteration with regular key updates, e.g.
for block
ciphers, is not new. Shortly after the publication of the ﬁrst
power analysis attack [21], Paul Kocher listed possible coun-
termeasures in which similar principles are found (see [20]
for instance). Therefore, the novelty in these previous works
mainly lies in the advanced techniques that they provide for
evaluating and analyzing physical attacks. But, as exten-
sively discussed in [35], none of these solutions combines all
the features that one can wish for a leakage-resilient con-
struction. That is, the proposals that are most satisfying
from a theoretical point of view fail to convey some impor-
tant engineering intuition. And the proposals that are most
satisfying from a practical point of view could not be proven
secure with general cryptographic techniques.
Let us elaborate on this, focusing on the case of stream
ciphers, which are often implemented in small embedded
circuits and are a target of choice for side-channel attacks.
The construction of Dziembowski and Pietrzak [9], which is
proven secure in the standard model, exploits an alternat-
ing structure in which the secret key size is doubled, and
a combination of extractor and PRG is used to process the
iterations. By assuming that the leakages occurring when
computing in one part of the alternating structure are in-
dependent of the variables manipulated in the other part
(i.e., independent computations result in independent leak-
ages), the authors are able to prove the security of their
construction, against a very wide class of leakage functions.
Namely, a class that includes any polynomial time function
of the device’s manipulated (i.e., active) state and that can
be adaptively chosen by the adversary, provided it satisﬁes
some bounds on the amount of leaked information.
The construction of Pietrzak [29] relies on similar princi-
ples, but replaces the extractor and PRG by a single wPRF
(weak pseudorandom function), which can be easily instan-
tiated with block ciphers such as the AES Rijndael, at the
cost of worse security bounds in the proofs. Finally, a third
stream cipher construction was proposed in [37], together
with an instance of low complexity extractor, aiming at bet-
ter practical security and stronger leakage-resilience. This
last paper shows that the parallel computation of the two
branches in an alternating structure can be exploited for
these purposes.
It also brings tools that better connect
the results of theoretical analysis with the practice of side-
channel attacks (e.g., by introducing more realistic assump-
tions that can be empirically veriﬁed by cryptographic en-
gineers).
From an engineering point of view, the main limitation of
the three aforementioned papers relates to the diﬃculty of
properly modeling the leakage function. That is, by consid-
ering any polynomial time leakage functions in their anal-
ysis, the resulting constructions need to face (unrealistic)
“future computation attacks”, in which parts of a state that
will only be reached after dozens of computation rounds can
be leaked during the current computation round. Conse-
quently, and in order to incorporate these (admittedly overly
strong) attacks, these constructions require an alternating
structure which does not seem to be motivated by physical
intuition.
In contrast, the earlier forward secure PRG secure against
side-channel key recovery attacks presented at ASIACCS
2008 [28] was not limited by such considerations. But it
only provides a security analysis for restricted classes of leak-
age functions which, although representative of the current
state-of-the-art attacks, does not imply the generic security
that one can hope for in modern cryptographic designs.
Contributions.
With respect to the previous related works, this paper con-
tains two contributions to the analysis and design of leakage-
142resilient stream ciphers. First, we show the leakage resilience
of a natural (i.e., conform to engineering experience) block-
cipher based stateful PRG, under a random oracle based as-
sumption. More precisely, in the proof of leakage resilience,
we model the length-doubling PRG 2PRG, that is the core of
the construction, by a random oracle that cannot be queried
by the leakage function. This guarantees that the leakage
function, while being allowed to leak about the current in-
puts and outputs of 2PRG, cannot leak about previous or
future invocations of 2PRG. Admittedly, this corresponds
to a strong black box assumption. However, we argue that
it reasonably captures the reality of actual leakages, which
do not provide sophisticated functions that are not present
in a circuit state (e.g. a future output of the PRG). We
also note that, in the absence of leakages, our stream cipher
construction is secure in the standard model.
Second, we show that it is actually possible to prove the
security of a leakage-resilient stream cipher in the standard
model, without alternating structure, and with a marginal
construction complexity increase compared to the construc-
tion discussed in the previous paragraph. For this purpose,
we only need to rely on the additional assumption that the
leakage function is not chosen adaptively by the adversary,
but is ﬁxed prior to the attack. We describe two designs
of leakage-resilient stream ciphers in this new setting, either
based on the combination of an extractor and a PRG, or
based on a single wPRF, as in previous works.
To summarize, this work addresses the leakage resilience
of some of the most natural PRG / stream cipher construc-
tions, either under a non standard assumption, or in the
standard model, at the cost of a slight memory overhead.
2. NON ADAPTIVE LEAKAGES
As a starting point, let us clarify the slightly confusing
terminology used in previous works on leakage resilience.
Most proposed stream ciphers build on an arbitrary length
PRG, of which the outputs are used as a keystream. But in
practical applications, a stream cipher additionally requires
a reinitialization process, i.e. the ability to re-synchronize
with a remote device, without sharing a new secret seed. For
example, all candidates to the eStream competition have a
public Initialization Vector (IV) as input, in addition to the
secret seed [27]. And the constructions in [9, 29, 37] miss
such a feature. Eﬃcient solutions exist to complement these