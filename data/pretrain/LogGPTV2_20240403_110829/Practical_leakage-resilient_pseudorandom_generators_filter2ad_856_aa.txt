# Practical Leakage-Resilient Pseudorandom Generators

## Authors
- Yu Yu
  - Université catholique de Louvain, Crypto Group
  - B-1348 Louvain-la-Neuve, Belgium
- François-Xavier Standaert
  - Université catholique de Louvain, Crypto Group
  - B-1348 Louvain-la-Neuve, Belgium
- Olivier Pereira
  - Université catholique de Louvain, Crypto Group
  - B-1348 Louvain-la-Neuve, Belgium
- Moti Yung
  - Columbia University, Google Inc.
  - New York, NY, USA

## Abstract
Cryptographic systems and protocols are fundamental to many Internet security procedures, such as SSL, SSH, IPSEC, DNSSEC, and secure mail. At the core of these cryptographic functions is a reliable source of randomness, often implemented through pseudorandom generators (PRGs). PRGs are also used in the design of stream ciphers for secure communications. The modern Internet encompasses a wide variety of devices with different hardware and software characteristics, making information leakage and side-channel attacks a significant concern.

A major research direction is the development of cryptographic operations that are resistant to such attacks. Recent work on leakage-resilient PRGs and stream ciphers has made significant progress in providing tools for analyzing side-channel attacks in standard cryptographic settings. However, in the absence of a completely sound model for leakages, the only constructions that can be proven secure require adjustments that do not align with physical intuition. For example, some constructions use an alternating structure where a key bit-size of \(2n\) can only guarantee security up to \(2^n\).

In this paper, we make two methodological contributions to address these issues:
1. We show that the leakage resilience of a natural, stateful PRG can be proven under a random oracle-based assumption. We discuss the relevance of this assumption and argue that it accurately captures the reality of actual side-channel attacks.
2. We provide the first construction of a PRG without an alternating structure that fully exploits the keying material and can be proven leakage-resilient in the standard model. This construction requires only a non-adaptive leakage function and a small public memory. We argue that such assumptions are not only realistic but necessary for any leakage-resilient primitive that allows adversaries to reinitialize the state.

These contributions help bridge the gap between the theory and practice of physically observable cryptography.

## Categories and Subject Descriptors
- H.4 [Information Systems Applications]: Miscellaneous

## General Terms
- Algorithms, Design, Security

## 1. Introduction
Side-channel attacks pose a significant threat to cryptographic algorithm implementations by circumventing traditional security proofs and exploiting physical characteristics. Over the past fifteen years, extensive research has focused on designing countermeasures at low abstraction levels using techniques like gate masking and randomization, and assessing their effectiveness through experimental evidence. More recently, higher-level models have been proposed to capture physical attacks and design new primitives with provable security within these models.

These new models aim to limit the impact of information leakage rather than just the amount. In the bounded retrieval model, an attacker is assumed to be unable to obtain more than a certain amount of information over the system's lifetime, which is suitable for mitigating risks from memory attacks. Another approach, introduced by Dziembowski and Pietrzak, partitions the computation into rounds, assuming independent leakages in each round. This approach is particularly useful for analyzing symmetric cryptography primitives, simplifying the task of hardware designers by requiring protection for a single iteration and extending this to multiple rounds using mathematical tools.

The key to resilience against bounded leakages per round is key update: schemes are designed so that leakages occur on different keys or secret data in each round, preventing the combination of repeated measurements to recover a complete key. This is illustrated by comparing the side-channel attack resilience of the ANSI X9.17 PRG and a stateful PRG.

## Related Work
The idea of combining bounded leakage per iteration with regular key updates is not new. Paul Kocher listed similar countermeasures shortly after the first power analysis attack. However, none of these solutions combine all desired features. Theoretical proposals often lack practical engineering intuition, while practical proposals cannot be proven secure with general cryptographic techniques.

For stream ciphers, Dziembowski and Pietrzak's construction, proven secure in the standard model, uses an alternating structure with a doubled secret key size and a combination of extractor and PRG. Pietrzak's construction replaces the extractor and PRG with a single wPRF, achieving better practical security at the cost of weaker security bounds. A third construction in [37] aims for better practical security and stronger leakage resilience, showing that parallel computation in an alternating structure can be beneficial.

From an engineering perspective, the main limitation of these constructions is the difficulty in modeling the leakage function, leading to unrealistic "future computation attacks." In contrast, earlier forward-secure PRGs provided security for restricted classes of leakage functions but lacked generic security.

## Contributions
This paper makes two contributions to the analysis and design of leakage-resilient stream ciphers:
1. We show the leakage resilience of a natural, block-cipher-based stateful PRG under a random oracle-based assumption. This assumption reasonably captures actual leakages and ensures that the leakage function cannot leak about previous or future invocations of the PRG.
2. We prove the security of a leakage-resilient stream cipher in the standard model without an alternating structure, with a marginal increase in construction complexity. This requires the assumption that the leakage function is fixed prior to the attack. We describe two designs: one based on an extractor and PRG, and another based on a single wPRF.

In summary, this work addresses the leakage resilience of natural PRG and stream cipher constructions either under a non-standard assumption or in the standard model, with a slight memory overhead.

## 2. Non-Adaptive Leakages
To clarify the terminology, most proposed stream ciphers build on an arbitrary-length PRG, using its outputs as a keystream. In practical applications, a stream cipher requires a reinitialization process to resynchronize with a remote device without sharing a new secret seed. For example, eStream competition candidates include a public Initialization Vector (IV) in addition to the secret seed. Efficient solutions exist to complement these constructions.