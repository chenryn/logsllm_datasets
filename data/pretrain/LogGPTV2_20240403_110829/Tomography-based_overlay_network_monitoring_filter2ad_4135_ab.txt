In general, the measurement matrix G may be rank deﬁcient:
i.e., k = rank(G) and k < s. If G is rank deﬁcient, we will
Gx = b
be unable to determine the loss rate of some links from (4).
We call these links unidentiﬁable as in [6].
A
1
b2
3
=
G
b3
C
G
x
1
x
x
3
011
100
111
b
1
b
b
=
3
2
2
link 2
(1,1,0)
(1,-1,0)
null space
(unmeasured)
row space
(measured)
link 1
link 3
b1
D
2
B
Figure 2: Sample overlay network.
T
We illustrate how rank deﬁciency can occur in Fig. 2.
There are three end hosts (A, B, and C) on the overlay,
three links (1, 2 and 3) and three paths between the end
hosts. Because links 1 and 2 always appear together, their
individual loss rates cannot be computed from the measure-
ments. For example, suppose that x1 + x2 = b1 = −0.06
and x3 = b2 = −0.01. We know that x1 = −0.03 + α and
x2 = −0.03 − α for some α, but the value of α cannot be
determined from the end-to-end measurements. The set of
vectors α1 −1 0
which are not deﬁned by (4) can be
added to x without aﬀecting b. This set of vectors is the
null space of G.
To separate the identiﬁable and unidentiﬁable components
of x, we write x as x = xG + xN , where xG ∈ R(GT ) is in
the row space of G and xN ∈ N (G) is in the orthogonal null
space of G (i.e. GxN = 0). The vector xG contains all the
information we can know from (4) and the path measure-
ments. For instance, we can determine x1 + x2 in Fig. 2, but
not x1 − x2. Intuitively, links 1 and 2 together form a single
virtual link with an identiﬁable loss rate x1 + x2. All end-
to-end paths can be written in terms of such virtual links,
as we describe in more details in Sec. 3.3. So xG involves all
the links, while xN only involves unidentiﬁable links. The
decomposition of x for the sample overlay network is shown
below.
xG =
(x1 + x2)
2
xN =
0
0
1
1
1
0
3
5
2
4
(x1 − x2)
3
+ x32
5
4
2
3
1−1
5
4
2
0
= 2
4
b1/2
b1/2
b2
3
5
(5)
(6)
Because xG lies in the k-dimensional space R(GT ), only k
independent equations of the r equations in (4) are needed
to uniquely identify xG. By measuring k independent paths,
we can compute xG. Since b = Gx = GxG + GxN = GxG,
we can compute all elements of b from xG, and thus obtain
the loss rate of all other paths. For example, in Fig. 2, we
only need to measure b1 and b2 to compute xG, from which
we can calculate b3. Detailed algorithms are described in
Sec. 4.
3.2 Dimension Analysis of Path Space (R(GT ))
In this section, we will examine asymptotically how big k
is in terms of n.
Theorem 1. Given a power-law degree network topology
of M nodes, the frequency fd of nodes with outdegree d is
]11=G
[
Rank(G)=1
1’
1
2
⇒
1
G
1
=
1
1
0
0
1
Rank(G)=2
1
1’
2’
2 3
⇒
1
2
=
G
1
0
1
0
0
1
0
1
0
1
0
1
1
0
0
1
Rank(G)=3
1’
1
2’
3’
2
3
4
4’
⇒
Virtualization
1
2
3
Real links (solid) and all of the overlay 
paths (dotted) traversing them
Virtual links
Figure 3: Sample parts of IP network and overlay
paths.
proportional to dc, where c is the outdegree exponent con-
stant (i.e., fd _ dc). With d ≥ 1 and c < −2 (as found
in [12]), the number of end hosts N is at least M/2.
See the Appendix for the proof. It also follows the intu-
ition that the number of end hosts should be more than the
number of routers in the Internet.
Meanwhile, Faloutsos et al. prove that such a topology
has only O(M ) links (Lemma 2 in [12]). Combining the two
facts, given N end hosts, there are at most O(N ) links in
the topology. Thus, if the majority of the end hosts are on
the overlay network (n = O(N )), the dimension of R(GT )
is O(n).
What about if only a small portion of the end hosts are on
the overlay? Tangmunarunkit et al. found that the power-
law degree Internet topology has moderate hierarchy due
to the heavy-tailed degree distribution [26]. Because G is
an r by s matrix, k is bounded by the number of links s.
If it is a strict hierarchy like a tree, s = O(n), thus k =
O(n). But if there is no hierarchy at all (e.g., clique), k =
O(n2) because all the O(n2) paths are linearly independent.
Moderate hierarchy should fall in between. We found that
for reasonably large n (e.g, 100), k = O(n log n). Refer to
our tech report [7] for full regression analysis and results.
3.3 Intuition through Virtual Links
In Sec. 3.1, we explain in algebraic terms how to compute
all end-to-end path loss rates from only k path measure-
ments. Our actual computations are based completely on
this algebraic picture; however, these formulas may not seem
intuitive. We now describe a more intuitive picture using the
notion of virtual links. The key idea is that although the loss
rates of some individual links are incomputable (unidentiﬁ-
able links), each of them is covered by some path segment
whose loss rate is computable, and the loss rates of these
path segments are suﬃcient to compute the path loss rates
in which we are interested.
We choose a minimal set of such path segments that can
fully describe all end-to-end paths, and refer to them as
virtual links. If a link is identiﬁable, the link itself is a virtual
link.
Fig. 3 illustrates some examples. In the top ﬁgure, the vir-
tual link is a concatenation of two sequential physical links
as we discussed before. In the middle ﬁgure, there are three
links, but only two paths traverse these links. Thus, rank(G)
= 2 and none of the links are identiﬁable. In the bottom
ﬁgure, there are four links, and a total of four paths travers-
ing them. But the four paths are linearly dependent, so
rank(G) = 3, and none of the link loss rate are computable.
We can use any three out of the four paths as virtual links,
and the other one can be linearly represented by the virtual
(cid:2)
links. For example, path 4
can be described as virtual links
2+3-1.
Since the dimension of R(GT ) is k, the minimum number
of virtual links which can fully describe R(GT ) is also k.
xG is a linear combination of the vectors representing the
virtual links. Since virtual links are identiﬁable, xG is also
computable. From xG, we can compute the loss rates of all
end-to-end paths as we can do with virtual links.
4. ALGORITHMS
In this section, we describe implementation techniques.
4.1 Selecting Measurement Paths
To characterize all O(n2) end-to-end paths, we monitor k
linearly independent end-to-end paths and form a reduced
system
¯GxG = ¯b
(7)
where ¯G ∈ {0, 1}k×s and ¯b ∈ R