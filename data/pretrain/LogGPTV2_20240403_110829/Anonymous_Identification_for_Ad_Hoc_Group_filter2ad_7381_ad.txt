e2
g¡1
0
0
0
0
0
0
1
3
77777777775
Observe that a proof of the above discrete-log relation set ensures that (i)
the prover knows a witness w for some value x in the ad-hoc group accumulated
value v, and (ii) for the same x, the value x ¡ 1 can be split by the prover
into two integers one of which belongs to S(2‘=2; 2„). This latter range-property
guarantees the non-triviality of the splitting i.e., that the prover knows a non-
trivial factor of x ¡ 1 (i.e., diﬁerent than ¡1; 1; 2). Note that this will require
that the parameters ‘; „; †; k should be selected such that ‘=2 > †(„ + k) + 2.
5.3
ID Escrow
In Section 4.1, we discussed a generic transformation to add Identity Escrow
to an Ad hoc Anonymous Identiﬂcation scheme. Most of the required changes
do not aﬁect the system’s e–ciency, except for the need to resort to a generic
derivation of the Anon-ID protocol.
This performance penalty is not unavoidable, however: in fact, escrow capa-
bilities can be directly supported by the §-protocol for Anonymous Identiﬂcation
described in Section 5.2. using protocols for veriﬂable encryption and decryption
of discrete logarithms from [17].
With notation as in Section 5.2, the Anon-ID protocol is augmented as follows:
after sending the commitment T2 to the veriﬂer, the prover veriﬂably encrypts
an opening of T2 (namely, x and r) under the IEA public key. By checking
that the encryption was carried out correctly, the veriﬂer can be assured that,
should the need arise, the IEA would be able to identify the prover by decrypting
such opening, which would yield the prover’s public key x. Moreover, by using
veriﬂable decryption in the Extract algorithm, we can prevent the IEA from
untruthfully opening the identity of the prover for a given transcript, or falsely
claiming that the prover’s identity cannot be properly recovered.
Alternatively, if only honest users are assumed to have access to the Escrow
functionality (so that malicious parties cannot exploit the IEA as a \decryption
oracle"), then a more e–cient solution is possible, by having the IEA knowing the
value logg(h) in the proof of knowledge from Section 5. Then, given a transcript
of the protocol (which includes the values T1; T2; T3; T4; T5) the IEA can recover
the value gx = T2T
, from which the prover’s identity can be recovered
by comparing gx to the public keys published in the public DB database.
¡ logg(h)
1
6 Applications
6.1 Ad Hoc Identiﬂcation Schemes
This is the most direct application. Imagine a large universe of users, where
each user has a public certiﬂcate, but otherwise there is no central authority
in the system. Now, some party \from the street" has a resources which he is
willing to share with some subset of the users. For example, an Internet provider
P may want to enable internet access to all its subscribers. However, privacy
considerations may lead a user to refuse to positively identify himself; in fact,
this is not strictly necessary, as long as he proves he belongs to the group of
current subscribers. Our ad-hoc identiﬂcation schemes are ideally suited for this
application, bringing several very convenient feautures. First, P can simply take
all the public keys of the users (call this set S) and combine them into one
short group public key gpkS. Notice, this initial setup is the only operation P
performs which requires time proportional to the group size. As for each user
u 2 S, once again he will use his secret key and the public keys of other user
to prepare one short group secret key gsku. After that, all identiﬂcations that u
makes to P require computation and communication independent of the size of
the group. Now, another provider P 0 can do the same for a totally diﬁerent sub-
group, and so on, allowing truly ad-hoc groups with no trusted authority needed
in the system. Additionally, with incremental Ad hoc Anonymous Identiﬂcation
schemes (deﬂned in the full version of this paper [25]), one can preserve e–ciency
even when the ad-hoc group is built gradually, as each new member addition only
requires constant computation by P and by every pre-existing user in the system.
6.2 Constant Size Ring Signatures
This is one of our main applications, since it dramatically improves the e–ciency
of all known ring signature schemes (e.g. [34, 12, 9]). Recall, in a ring signature
scheme there again is a universe of registered users, but no trusted authority.
Any user u can then form a ring S, and sign a message m in such a way that
any veriﬂer (who knows S) can conﬂdently conclude that \the message m was
signed by some member u of S", but gets no information about u beyond u 2 S.
Previous papers on the subject suggested that linear dependence of the ring
signature size on the size of the ring S was inevitable, since the group is ad-hoc,
so the veriﬂer needs to know at least the description of the ring. While the latter
is true, in practical situations the ring often stays the same for a long period
of time (in fact, there could be many \popular" rings that are used very often
by various members of the ring), or has an implicit short decryption (e.g., the
ring of public keys of all members of the President’s Cabinet). Thus, we feel
that the right measure of \signature size" in this situation is that of an \actual
signature"|the string one needs in addition to the group description. Indeed,
when the ring stays the same for a long time or has a short description, this
actual signature is all that the veriﬂer needs in order to verify its correctness.
With this in mind, there is no reason why the signature size must be linear in
the size of the ring.
In fact, our result shows that it does not have to be. Speciﬂcally, by applying
the Fiat-Shamir heuristics to our ad-hoc identiﬂcation scheme, we immediately
get ring signatures of constant size. Moreover, our ring signatures enjoy several
desirable features not generally required by ring signatures (even those of con-
stant size). For example, both the signer and the veriﬂer need to perform a one-
time computation proportional to the size of the ring, and get some constant-size
information (gskS and gpkS, respectively) which allows them to produce/verify
many subsequent signatures in constant time.
6.3 Ad Hoc ID Escrow and Group Signatures
As mentioned in Section 3.4, in some situations complete anonymity might not
be desirable. In this case, one wishes to introduce a trusted Identity Escrow Au-
thority (IEA), who can reveal the true identity of the user given the transcript of
the identiﬂcation procedure (presumably, when some \anonymity abuse" hap-
pens). Such schemes are called ID Escrow schemes [32] and have traditionally
been considered for ﬂxed groups. ID Escrow schemes are duals of group signa-
ture schemes [19, 1], which again maintain a single group of signers, and where
a similar concern is an issue when signing a document anonymously. As argued
in Section 4.1 and Section 5.3, our Ad hoc Anonymous Identiﬂcation schemes
and the corresponding signer-ambiguous signature schemes can e–ciently sup-
port identity escrow capabilities. As a result, we get an ID Escrow and a group
signature scheme with the following nice features. (For concreteness, we concen-
trate on group signatures below.) First, just like in current state-of-the-art group
signature schemes, the signature is of constant size. Second, a user can join any
group by simply telling the group manager about its public key: no expensive
interactive protocols, where the user will \get a special certiﬂcate" have to be
run. Thus, the group manager only needs to decide if the user can join the group,
and periodically certify the \current" public key of the group. In other words,
we can imagine a simple bulletin board, where the group manager periodically
publishes the (certiﬂed) group public key the group, the description of the group,
and potentially the history of how the public key evolved (which is very handy
for incremental Ad hoc Anonymous Identiﬂcation schemes; see [25]). From this
information, each member of the group can ﬂgure out its group secret key and
sign arbitrary many messages e–ciently. (Of course, when signing a message the
signer should also include the certiﬂed version of the current group key, so that
\old" signatures do not get invalidated when the group key changes.)
References
1. G. Ateniese, J. Camenisch, M. Joye, and G. Tsudik. A practical and provably
In Advances in Cryptology|
secure coalition-resistant group signature scheme.
CRYPTO ’00, volume 1880 of LNCS, pages 255{270. Springer, 2000.
2. G. Ateniese and B. de Medeiros. E–cient group signatures without trapdoors. In
Advances in Cryptology|ASIACRYPT ’03, volume 2894 of LNCS, pages 246{268.
Springer, 2002.
3. G. Ateniese and G. Tsudik. Some open issues and new directions in group signa-
tures. In Financial Cryptography (FC ’99), volume 1648 of LNCS, pages 196{211.
Springer, 1999.
4. N. Bari¶c and B. Pﬂtzmann. Collision-free accumulators and fail-stop signature
In Advances in Cryptology|EUROCRYPT ’97, volume
schemes without trees.
1233 of LNCS, pages 480{494. Springer, 1997.
5. M. Bellare, M. Fischlin, S. Goldwasser, and S. Micali. Identiﬂcation protocols se-
cure against reset attacks. In Advances in Cryptology|EUROCRYPT ’01, volume
2045 of LNCS, pages 495{511. Springer, 2001.
6. M. Bellare, D. Micciancio, and B. Warinschi. Foundations of group signatures:
Formal deﬂnitions, simpliﬂed requirements, and a construction based on general
assumptions. In Advances in Cryptology|EUROCRYPT ’03, volume 2656, pages
630{648. Springer, 2003.
7. J. Benaloh and M. de Mare. One-way accumulators: a decentralized alternative to
digital signatures. In Advances in Cryptology|EUROCRYPT ’93, volume 765 of
LNCS, pages 274{285. Springer, 1993.
8. D. Boneh and M. Franklin. Anonymous authentication with subset queries. In
ACM Conference on Computer and Communications Security|CCS ’99, pages
113{119. ACM Press, 1999.
9. D. Boneh, C. Gentry, B. Lynn, and H. Shacham.
ably encrypted signatures from bilinear maps.
EUROCRYPT ’03, volume 2656 of LNCS, pages 416{432. Springer, 2003.
Aggregate and veriﬂ-
In Advances in Cryptology|
10. F. Boudot. E–cient proofs that a commited number lies in an interval. In Advances
in Cryptology|EUROCRYPT ’00, volume 1807 of LNCS, pages 431{444. Springer,
2000.
11. E. Bresson and J. Stern. E–cient revocation in group signatures. In Public Key
Cryptography (PKC ’01), volume 1992 of LNCS, pages 190{206. Springer, 2001.
12. E. Bresson, J. Stern, and M. Szydlo. Threshold ring signatures and applications to
ad-hoc groups. In CRYPTO 2002, volume 2442 of LNCS, pages 465{480. Springer,
2002.
13. J. Camenisch. E–cient and generalized group signatures.
In Advances in
Cryptology|EUROCRYPT ’97, volume 1233 of LNCS, pages 465{479. Springer,
1997.
14. J. Camenisch and A. Lysyanskaya. An identity escrow scheme with appointed
veriﬂers. In Advances in Cryptology|CRYPTO ’01, volume 2139 of LNCS, pages
388{407. Springer, 2001.
15. J. Camenisch and A. Lysyanskaya. Dynamic accumulators and applications
In Advances in Cryptology|
to e–cient revocation of anonymous credentials.
CRYPTO ’02, volume 2442 of LNCS, pages 61{76. Springer, 2002.
16. J. Camenisch and M. Michels. A group signature scheme with improved e–ciency.
In Advances in Cryptology|ASIACRYPT ’98, volume 1514 of LNCS, pages 160{
174. Springer, 1998.
17. J. Camenisch and V. Shoup. Practical veriﬂable encryption and decryption of dis-
crete logarithms. Full length version of extended abstract in CRYPTO’03, available
at: http://shoup.net/papers/, 2003.
18. J. Camenisch and M. Stadler. E–cient group signature schemes for large groups.
In Advances in Cryptology|CRYPTO ’97, volume 1294 of LNCS, pages 410{424.
Springer, 1997.
19. D. Chaum and E. van Heyst. Group signatures.
In Advances in Cryptology|
EUROCRYPT ’91, volume 547 of LNCS, pages 257{265. Springer, 1991.
20. L. Chen and T. P. Pedersen. New group signature schemes (extended abstract). In
Advances in Cryptology|EUROCRYPT 94, volume 950 of LNCS, pages 171{181.
Springer, 1994.
21. R. Cramer. Modular Design of Secure yet Practical Cryptographic Protocols. PhD
thesis, CWI and University of Amsterdam, November 1996.
22. R. Cramer, I. B. Damg”ard, and B. Schoenmakers. Proofs of partial knowledge
In Advances in Cryptology|
and simpliﬂed design of witness hiding protocols.
CRYPTO ’94, volume 839 of LNCS, pages 174{187. Springer, 1994.
23. A. De Santis, G. Di Crescenzo, and G. Persiano. Communication-e–cient anony-
mous group identiﬂcation. In 5th ACM Conference on Computer and Communi-
cations Security, pages 73{82. ACM Press, 1998.
24. A. De Santis, G. Di Crescenzo, G. Persiano, and M. Yung. On monotone formula
closure of SZK. In 35th Annual Symposium on Foundations of Computer Science,
pages 454{465. IEEE Computer Society Press, 1994.
25. Y. Dodis, A. Kiayias, A. Nicolosi, and V. Shoup. Anonymous identiﬂcation in Ad
Hoc groups. Full version: http://www.cs.nyu.edu/~nicolosi/papers/, 2004.
26. U. Feige, A. Fiat, and A. Shamir. Zero-knowledge proof of identity. Journal of
Cryptology, 1(2):77{94, 1988.
27. U. Feige and A. Shamir. Zero knowledge proofs of knowledge in two rounds.
In Advances in Cryptology|CRYPTO ’89, volume 435 of LNCS, pages 526{544.
Springer, 1989.
28. A. Fiat and A. Shamir. How to Prove Yourself: Practical Solutions to Identiﬂcation
and Signature Problems. In Advances in Cryptology|CRYPTO ’86, volume 263
of LNCS, pages 186{194. Springer, 1986.
29. O. Goldreich, S. Micali, and A. Wigderson. Proof that yield nothing bur their
validity or all languages in np have zero-knowledge proof systems. Journal of the
ACM, 38(3):691{729, 1991.
30. S. Goldwasser, S. Micali, and C. Rackoﬁ. The knowledge complexity of interactive
proof systems. SIAM Journal on computing, 18(1):186{208, 1989.
31. A. Kiayias, Y. Tsiounis, and M. Yung. Traceable signatures.
In Advances in
Cryptology|EUROCRYPT 04, LNCS. Springer, 2004.
32. J. Kilian and E. Petrank.
Identity escrow.
In Advances in Cryptology|
CRYPTO ’98, volume 1462 of LNCS, pages 169{185. Springer, 1998.
33. M. Naor. Deniable ring authentication. In Advances in Cryptology|CRYPTO ’02,
volume 2442 of LNCS, pages 481{498. Springer, 2002.
34. R. Rivest, A. Shamir, and Y. Tauman. How to leak a secret.
In Advances in
Cryptology|ASIACRYPT ’01, volume 2248 of LNCS, pages 552{565. Springer,
2001.
35. G. Tsudik and S. Xu. Accumulating composites and improved group signing. In
Advances in Cryptology|ASIACRYPT ’03, volume 2894 of LNCS, pages 269{286.
Springer, 2003.