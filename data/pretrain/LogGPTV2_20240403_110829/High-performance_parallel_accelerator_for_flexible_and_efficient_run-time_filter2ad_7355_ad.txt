E. Limitations
The Harmoni architecture targets to support a broad range of
tag-based monitoring techniques efÔ¨Åciently through carefully
trading off programmability and efÔ¨Åciency. While we found
that many monitoring techniques can be mapped to the current
Harmoni design, the architecture is not Turing complete and
certain monitoring techniques may not work well. Here, we
brieÔ¨Çy discuss the limitations of the current architecture, which
we plan to investigate in the future.
One main limitation of the current Harmoni design is that it
only allows a single tag operation for each monitored instruc-
tion. Therefore, tagging techniques that require a sequence
of operations for a single monitored instruction cannot be
efÔ¨Åciently supported. We plan to investigate the possibility of
expanding the control table to allow multiple operations per
opcode or even simple control instructions. Another limitation
comes from the limited interface to the main processing core.
Currently, the architecture is designed to only work on tags
but not data. Therefore, a monitor that checks data values
of the monitored program such as soft error detection is not
supported by the architecture.
IV. EVALUATION
To evaluate the Harmoni architecture, we implemented a
prototype system based on the Leon3 microprocessor [18].
Leon3 is a synthesizable RTL model of a 32-bit processor
compliant with the SPARC [19] instruction set. The Leon3
processor includes a single-issue in-order seven stage integer
pipeline and 32KB of on-chip L1 instruction and data caches.
Completed instructions are forwarded from the exception stage
of the integer pipeline to the Harmoni co-processor. Since
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:21:47 UTC from IEEE Xplore.  Restrictions apply. 
Description
Max Freq (MHz)
Leon3 Processor - 32KB IL1/DL1
Harmoni (32-bit)
Harmoni (16-bit)
Harmoni (8-bit)
Support structures: FIFO, cache, etc.
465
465
1250
465
1250
465
1250
458
Area
Power
Œºm2
835,525
156,517
187,255
82,552
94,289
46,319
50,974
271,442
-
overhead mW overhead
-
12.46%
32.9%
6.6%
17.3%
3.8%
9.6%
14.6%
18.7%
22.4%
9.9%
11.3%
5.5%
6.1%
32.5%
365
46
120
24
63
14
35
53
THE AREA, POWER, AND FREQUENCY OF THE HARMONI ARCHITECTURE WITH DIFFERENT MAXIMUM TAG SIZES. THE OVERHEADS IN SILICON AREA
AND POWER CONSUMPTION ARE SHOWN RELATIVE TO THE BASELINE LEON3 PROCESSOR.

	

TABLE III

the opcode in the SPARC ISA can come from different
parts of the instruction and are irregular in size, we divide
instructions in the SPARC ISA into 32 custom categories. Only
instructions from categories that are relevant to the monitoring
function being performed on Harmoni are forwarded from the
Leon3 processor to Harmoni and the CONTBL is indexed
by the instruction category. The Harmoni architecture was
evaluated with the Harmoni pipeline and support structures
that include the Core-Harmoni FIFO and a 4-KB on-chip tag
cache. Table II summarizes the parameters that we used in the
evaluation. To evaluate the area, power, and maximum fre-
quency of this architecture, we synthesized Leon3, Harmoni,
and corresponding hardware support structures in Synopsys
Design Compiler using Virage 65nm standard cell libraries.
The power estimates currently use a Ô¨Åxed toggle rate of 0.1
and static probability of 0.5 to provide rough comparisons.
Table III shows the results of this analysis.
Even without extensive optimizations, the Harmoni pipeline
can run up to 1.25 GHz, which is more than 2.5 times the
maximum frequency of the Leon3 processing core. This result
shows that Harmoni can keep pace with processing cores
that have much higher operating frequencies and application
performance. The rest of the Harmoni architecture, including
the FIFO interface from the main core and a tag memory
system, is synthesized with the Leon3 core and shown to have
a minimal impact on the core‚Äôs clock frequency even with the
additional signals that are required for forwarding instructions
and supporting an exception.
The Harmoni architecture does show noticeable area and
power consumption compared to the Leon3 processor. The
total area that includes the forwarding FIFO, the tag cache,
and the full 32-bit Harmoni pipeline makes up an additional
55% in area compared to the baseline Leon3 processor. The
area overhead can be mitigated by limiting the maximum
size of the tags that Harmoni can support. By going to 16-
bit and 8-bit pipelines for tag updates and tag checks, the
respective area overheads of Harmoni can be reduced to 44%
and 39%. Furthermore, we note Leon3 is a very small and
simple embedded processing core. The performance of the
Harmoni architecture allows it to be easily coupled with much
larger and higher-performance processing cores that runs at a
few GHz. For example, the Intel Atom processing core [20]
is more than 25 times larger than Leon3 while running at
a comparable clock frequency with Harmoni. The full 32-bit
Harmoni pipeline would present an area overhead of less than























 



















Fig. 6. The performance overheads of run-time monitoring on the Harmoni
co-processor. The Y-axis shows normalized performance relative to an un-
modiÔ¨Åed Leon3 processor. The X-axis shows the names of benchmarks used
in the evaluation.
3% for Atom. Moreover, we note that the Harmoni architecture
is far more energy efÔ¨Åcient compared to an approach that
utilizes a regular processing core as a monitor. At 465MHz,
Harmoni is estimated to consume 46mW, which is less than
15% of the baseline processor power consumption. This is
far more efÔ¨Åcient than consuming twice the power using two
identical cores for both computation and monitoring.
To evaluate the performance overheads of the Harmoni
architecture, we performed RTL simulations of the architecture
with three different monitoring techniques for several bench-
marks. Benchmarks include programs from the MiBench [21]
benchmark suite as well as two kernel benchmarks for SHA-
256 and GMAC, which are popular cryptographic standards.
We compared the execution time of these benchmarks between
an unmodiÔ¨Åed Leon3 processor, Leon3 with a hardware mon-
itor mapped to Harmoni, and Leon3 with a hardware monitor
mapped to the FPGA fabric as in FlexCore [12].
Figure 6 shows the normalized execution time of bench-
marks on Harmoni with respect
to an unmodiÔ¨Åed Leon3
processing core. We implemented three monitoring techniques
on Harmoni, including uninitialized memory checking (UMC),
dynamic information Ô¨Çow tracking (DIFT), and array bounds
checking (BC). The results show that run-time monitoring on
Harmoni has low performance overheads on the monitored
program. In fact, the Harmoni performance is almost identical
to that of custom hardware monitors because most overheads
come from tag accesses to memory, which is identical in both
cases.
The Harmoni architecture as shown in Table III is capable
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:21:47 UTC from IEEE Xplore.  Restrictions apply. 






































































































	



(a) UMC







	



(b) DIFT







	



(c) BC
Fig. 7. Normalized performance overheads of run-time monitoring on the
Harmoni co-processor and the FPGA-based co-processor (FlexCore) for a
main processing core running at 1GHz.
of running at a high clock frequency. The high performance
and energy efÔ¨Åciency distinguish Harmoni from previously
proposed run-time monitoring platforms. For example, Flex-
Core [12] provides Ô¨Çexibility using on-chip FPGA fabric, but