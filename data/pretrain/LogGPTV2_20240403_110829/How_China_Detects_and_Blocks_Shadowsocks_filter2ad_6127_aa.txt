title:How China Detects and Blocks Shadowsocks
author:Alice and
Bob and
Carol and
Jan Beznazwy and
Amir Houmansadr
GFW Report
GFW Report
GFW Report
How China Detects and Blocks Shadowsocks
Alice
Carol
Bob
gfw.report+PI:EMAIL
gfw.report+PI:EMAIL
gfw.report+PI:EMAIL
Jan Beznazwy
Independent consultant
PI:EMAIL
Amir Houmansadr
University of Massachusetts Amherst
PI:EMAIL
ABSTRACT
Shadowsocks is one of the most popular circumvention tools in
China. Since May 2019, there have been numerous anecdotal reports
of the blocking of Shadowsocks from Chinese users. In this study,
we reveal how the Great Firewall of China (GFW) detects and blocks
Shadowsocks and its variants. Using measurement experiments,
we find that the GFW uses the length and entropy of the first data
packet in each connection to identify probable Shadowsocks traffic,
then sends seven different types of active probes, in different stages,
to the corresponding servers to test whether its guess is correct.
We developed a prober simulator to analyze the effect of differ-
ent types of probes on various Shadowsocks implementations, and
used it to infer what vulnerabilities are exploited by the censor. We
fingerprinted the probers and found differences relative to previ-
ous work on active probing. A network-level side channel reveals
that the probers, which use thousands of IP addresses, are likely
controlled by a set of centralized structures.
Based on our gained understanding, we present a temporary
workaround that successfully mitigates the traffic analysis attack by
the GFW. We further discuss essential strategies to defend against
active probing. We responsibly disclosed our findings and sugges-
tions to Shadowsocks developers, which has led to more censorship-
resistant tools.
CCS CONCEPTS
• Social and professional topics → Censoring filters.
KEYWORDS
Shadowsocks, Great Firewall of China, active probing, censorship
circumvention
ACM Reference Format:
Alice, Bob, Carol, Jan Beznazwy, and Amir Houmansadr. 2020. How China
Detects and Blocks Shadowsocks. In ACM Internet Measurement Conference
(IMC ’20), October 27–29, 2020, Virtual Event, USA. ACM, New York, NY, USA,
14 pages. https://doi.org/10.1145/3419394.3423644
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’20, October 27–29, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8138-3/20/10...$15.00
https://doi.org/10.1145/3419394.3423644
111
Figure 1: How active probing works. A genuine Shadowsocks
client connects to a Shadowsocks server; Once the GFW pas-
sively determines that the connection may be Shadowsocks,
it directs its active probers to confirm this guess.
1 INTRODUCTION
Shadowsocks is a protocol for Internet censorship circumvention,
especially popular in China. According to a research survey in July
2015, of 371 faculty members and students from Tsinghua Univer-
sity, 21% used Shadowsocks to bypass censorship in China [29,
§4.1]. The popularity of Shadowsocks stems from its simplicity. Its
lightweight design imposes minimal overhead on proxied traffic
and makes it easy to implement on a variety of platforms. A large,
profit-incentivized proxy reseller market, as well as numerous tuto-
rials and one-click installation scripts, have reduced the difficulty
of installing and using Shadowsocks, and made it popular even
among non-technical users.
Since as early as October 2017, users in China have reported
their Shadowsocks servers becoming unreliable or being blocked
by the Great Firewall (GFW), especially during politically sensitive
times [21]. The most recent such event happened in mid-September
2019, with Shadowsocks users reporting a sudden increase in block-
ing [17]. Section 2.2 summarizes past blocking events. Despite the
anecdotal evidence that the GFW is capable of detecting and block-
ing Shadowsocks servers, little is known about how the GFW actu-
ally does it. The importance of Shadowsocks in censorship circum-
vention, and the mysterious behavior of the GFW, motivate us to
explore and understand the underlying mechanisms of detection
and blocking.
Shadowsocks ClientShadowsocks ServerActive probersActive probersThe GFW of ChinaIMC ’20, October 27–29, 2020, Virtual Event, USA
Alice et al.
Our systematic study finds that the GFW has started to identify
Shadowsocks servers using a combination of passive traffic analy-
sis and active probing. Figure 1 illustrates the general notion: the
GFW first detects suspected Shadowsocks traffic, using features
like the size and entropy of the first data packet in each connection.
Once a server falls under suspicion, the GFW sends active probes
to it, in different stages, to confirm whether the server really is
Shadowsocks. The probes are partial replays of past legitimate con-
nections, and random probes of varied lengths. We suspect that the
probes are designed to attack detection vulnerabilities in different
implementations of Shadowsocks. The GFW has been known to use
active probing against various circumvention tools since as long
ago as 2011 [14], but the techniques now in use against Shadow-
socks are new and more sophisticated than what has previously
been reported.
and infer the probable intention behind them.
In summary, our work makes the following contributions:
• We reveal and systematically study the GFW’s latest secret
weapon against Shadowsocks.
• We identify and fingerprint different types of active probes,
• We derive a more realistic adversary model of replay attacks.
• We introduce a temporary but effective mitigation against
the detection, and provide suggestions for defending against
active probing.
• We have collaborated with the developers of different Shadow-
socks implementations to make Shadowsocks more resistant
to active-detection attacks.
2 BACKGROUND ON SHADOWSOCKS
Shadowsocks is an encrypted proxy protocol. It attempts to avoid
detection not by imitating some other protocol, but by using en-
cryption to appear as a uniformly random byte stream. There are
two components: client and server. The server is typically installed
on some network outside the censor’s control. The client sends
an encrypted target specification to the server. The server then
connects to the target and begins proxying traffic for the client. All
traffic between the client and the server is encrypted.
It will be important to know a few details of how Shadowsocks
encryption works, in order to appreciate the construction of the
probes described in Section 3.2. Shadowsocks specifies two main
classes of cryptographic constructions, known in the context of
the protocol as “stream ciphers” and “AEAD ciphers” [46]. The
stream cipher construction is cryptographically weak—it provides
only confidentiality, not integrity or authentication, and for that
reason is deprecated. The AEAD cipher construction (authenticated
encryption with associated data) was developed to fix the flaws
of the stream cipher construction, and provides confidentiality,
integrity, and authentication. Both constructions are keyed by a
master password that client and server share, and both intend to
require the client to demonstrate knowledge of the shared password
before using the proxy server (though as we will see, with stream
ciphers the requirement is loose).
With stream ciphers, the network stream in both directions is
one long ciphertext, preceded by a random initialization vector:
[variable-length IV][encrypted payload...]
112
Table 1: Timeline of all major experiments. The three set
of experiments span weeks and months. Shadowsocks, Sink
and Brdgrd refer to the experiments in Section 3.1, Sec-
tion 4.1 and Section 7.1 respectively.
Experiment
Shadowsocks
Sink
Brdgrd
Time span
Sept 29, 2019 – Jan 21, 2020 (4 months)
May 16 – 31, 2020 (2 weeks)
Nov 2 – 19, 2019 (403 hours)
Client and server use the same encryption key, but different initial-
ization vectors. The length of the initialization vector may be 8, 12,
or 16 bytes, depending on what cipher is configured.
With AEAD ciphers, the network stream is a sequence of length-
prefixed chunks, each encrypted and authenticated with an AEAD
tag. To avoid introducing any plaintext for the censor to match on,
the length prefixes are themselves encrypted and tagged.
[variable-length salt]
[2-byte encrypted length][16-byte length tag]
[encrypted payload][16-byte payload tag]
[2-byte encrypted length][16-byte length tag]
[encrypted payload][16-byte payload tag]
...
The entire stream is preceded by a salt, which is combined with the
shared secret password to produce a session key for each direction.
The salt may be 16, 24, or 32 bytes.
In both constructions, the first piece of data the client sends
through the tunnel is a host:port target specification, whose struc-
ture is borrowed from the SOCKS proxy protocol. The first byte is
an address type that indicates the format of the bytes that follow.
The three address types are:
[0x01][4-byte IPv4 address][2-byte port]
[0x03][1-byte length][hostname][2-byte port]
[0x04][16-byte IPv6 address][2-byte port]
There are many implementations of Shadowsocks [22, 25, 41, 44,
45, 47], and they differ in what features they support. Not every im-
plementation supports every possible cryptographic construction;
for example, OutlineVPN [25] supports AEAD ciphers only, not
stream ciphers. Some implementations take steps to mitigate replay
attacks, and some do not. This means that a probing adversary
may encounter different reactions to probes, depending on what
implementation of Shadowsocks is in use. In this work, we focus on
two of the more popular implementations, Shadowsocks-libev [45]
and OutlineVPN [25], but the vulnerabilities we describe may also
apply to other implementations.
2.1 Historical Vulnerabilities and Defenses
In August 2015, BreakWa11 discovered an active-probing vulnera-
bility in Shadowsocks stream ciphers, resulting from their lack of
integrity protection [8, 15]. An attacker can make many connec-
tions to a suspected Shadowsocks server, and take advantage of
ciphertext malleability to try every possible value of the byte that
corresponds to the address type in the target specification. Because
only 0x01, 0x03, and 0x04 are valid address types, a known fraction
of connections will time out differently from the rest. Shadowsocks
How China Detects and Blocks Shadowsocks
IMC ’20, October 27–29, 2020, Virtual Event, USA
developers mitigated the vulnerability by having the server not
immediately terminate a connection when a target specification
contains an unknown address type [30].
Shadowsocks developers attempted to further mitigate the prob-
lem by introducing a “one time auth” mode, in which each chunk
of data would carry its own authenticator. But a lack of integrity
protection in chunk length prefixes led to another active probing
vulnerability [15, 37]. In February 2017, AEAD ciphers became part
of the protocol specification, fixing this authentication problem.
In February 2020, Zhiniang Peng disclosed a devastating vulner-
ability in Shadowsocks stream ciphers [16, 36]. Using the Shadow-
socks server as a decryption oracle, an attacker, without knowledge
of the shared master password, can get full decryption of recorded
Shadowsocks connections.
2.2 Past Blocking of Shadowsocks
Since as early as October 2017, Internet users in China have reported
their Shadowsocks servers being blocked, by port or IP address [21,
38, 42]. Notable blocking events were reported in October 2017 and
January 2018, at the same time as two important political congresses
in China [21]. After the two congresses, many users reported their
servers got unblocked. Contrary evidence comes from Wiley et al.,
who during those times were testing Shadowsocks reachability
every day from locations around the world, but reported not having
seen any evidence of Shadowsocks blocking anywhere [53].
The reported large-scale blockings mostly happened during po-
litically sensitive times, including during the 30th anniversary of
the 1989 Tiananmen Square protests, the 70th anniversary of the
People’s Republic of China, and the 4th Plenary Session of the
19th Central Committee of the Communist Party of China. The
most recent spate of reports began around September 16, 2019 [17].
3 CHARACTERIZATION OF PROBES AND
THE PROBING INFRASTRUCTURE
Here we describe the experiments we conducted to collect and
understand the GFW’s active probes. Based on a collection of 51,837
active probes observed in a number of experiments, we answer the
following questions:
tions?
• What types of probes are observed, and under what condi-
• Where do the probes come from?
• Do the probes have any “fingerprints” that reveal informa-
• How long is the delay between a legitimate connection and
tion about the underlying probing infrastructure?
the probes that react to it?
3.1 Shadowsocks Server Experiment
We set up our own Shadowsocks servers and attempted to pro-
voke the GFW into probing them. To do this, we connected to our
servers using Shadowsocks clients, and sent HTTP and HTTPS
traffic through the encrypted proxy tunnel, using web browsers
and curl as automated drivers. We captured packets at both ends
for analysis. We used unmodified clients and servers in all our ex-
periments, did not create any special firewall rules, and did not
113
Figure 2: Number of occurrences of random probes
(type NR1 and type NR2) by length. Note the two different
vertical axes. The lengths of type NR1 probes are evenly dis-
tributed in trios (𝑛 − 1, 𝑛, 𝑛 + 1) for 𝑛 = 8, 12, 16, 22, 33, 41, 49.
Type NR2 probes have length 221 and are roughly three
times as common as all the NR1 probes together.
install any obfuscation plugins. As summarized in Table 1, the ex-
periments were conducted over four months, from September 29,
2019 to January 21, 2020.
Because we could not know in advance what features the GFW
might use to identify Shadowsocks, we maximized our coverage by
using different Shadowsocks implementations and versions, and by
selecting different encryption algorithms. The two implementations
we used were Shadowsocks-libev [45] and OutlineVPN [25].
Shadowsocks-libev. We installed Shadowsocks-libev clients on
five VPSes in a Tencent Cloud Beijing datacenter, and Shadowsocks-
libev servers on five VPSes in a Digital Ocean UK datacenter. Each
client was configured to connect to only one of the servers. Two
pairs of the clients and servers used v3.1.3 of Shadowsocks-libev,
and the other three pairs used v3.3.1. As a control, we set up an
additional VPS within the same UK datacenter and never connected
to it, only capturing all incoming traffic.
We generated client traffic using curl. Through the Shadow-
socks proxy, we constantly fetched one of the websites at a given