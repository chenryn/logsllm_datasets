新通采集点
功能块
块
动采集点
社采基点
办公电N
图15-2系统架构图
15.3
数据库结构设计
15.3.1
数据库分析
分布式质量监控平台有两张数据库表，分别为 webmonitor_hostinfo及webmonitor_
monitordata表，其中webmonitor_monitordata的FID字段配置外键关联，表信息说明如下：
webmonitor_hostinfo：业务信息表
webmonitor_monitordata：采集数据信息表
15.3.2
数据字典
webmonitor_hostinfo业务信息表。
段名
数据类型
默认值
允许非空
自动递增
备注
ID
int(11)
NO
是
业务ID
AppName
char(20)
NO
业务名称
URL
char(100)
NO
探洲URL
IDC
(01)rq
NO
探测点
Alarmtype
char(10)
NO
告警类型
Alari
char(20)
NO
告警条件
---
## Page 280
第15章构建分布式质量监控平台259
webmonitor_monitordata采集数据信息表。
字段名
数据类型
默认值
允许非空
自动递增
备注
ID
ine(11)
NO
是
探测结果ID
FID
ime(11)
NO
业务ID
NAMELOOKUP_TIME
double
NO
DNS解析时间
CONNECT_TIME
double
NO
建立连接时间
PRETRANSFER_TIME
double
NO
准备传输时间
STARTTRANSFER_TIME
double
NO
开始传输时间
TOTAL_TIME
double
NO
传输总时间
HTTP_CODE
char(80)
NO
HTTP状态或异常信息
SIZE_DOWNLOAD
im(6)
NO
下载数据包大小
HEADER_SIZE
smallint(6)
NO
HTTP头大小
REQUEST_SIZE
smallint(6)
NO
请求包大小
CONTENT_LENGTH_DOWNLOAD
smallint(6)
NO
下载内容长度
SPEED_DOWNLOAD
ine(6)
NO
下载速度
DATETIME
ine(11)
NO
探测时间
MARK
enum(0,1)
NO
更新RRDTOOL标记
15.3.3
数据库模型
从图15-3的数据库EER图可以看出，表webmonitor_monitordata的FID字段被设置为
外键，与webmonitor_hostinfo表中的ID字段进行关联，作为采集信息数据与业务信息表的
唯一关联。
 B 3N(μ0)
1D NT(1)
U8 0W(e)
+RD NT(10
IDCOVR(1)
NMELOOUP_TPME DOUBLE
iamnge OuR(I)
neno 3NINNCO
RETIWNSPTR_TME DOULLE
swoDsuoepue
gRTTRGRER_TEDOURE
0T8L,ME00UBE
x9_C0DE OHAL(8)
SZE_DOINLOAD BT(3)
HEQUEST_SE SMAL3NT(%)
EAER_SUt 9AL3()
oEETMEINT(14)
DINE OYOT
RPK DUM(V/1)
图15-3系统数据库模型
---
## Page 281
260第三部分案例篇
15.4系统环境部署
15.4.1系统环境说明
前面介绍了分布式质量监控平台的三种角色，为了便于读者理解，下面对不同角色的环
境、实现方法进行详细说明，环境设备角色表如表15-1所示。
表15-1系统环境说明表
角色
主机名
IP
环境说明
Web Server
SN2012-07-010
192.168.1.10
Django+uwsgi+mdtool+MySQL 环境
mdtool f作业l
SN2012-07-010
192.168.1.10
Python 2.6+rrdtool
数据采集（电信）
SN2013-08-020
192.168.1.20
Python 2.6+pycurl
（）出
SN2013-08-021
192.168.1.21
Python 2.6*pyeurl
15.4.2
数据采集角色
数据采集功能角色需要完成两个任务：一为采集远程业务服务集群HTTP响应数
据，并将数据写人远程MySQL数据库：二为提供异常HTTP响应告警支持。本示例部署
192.168.1.20、192.168.1.21主机，分别模拟电信与联通网络。下面详细说明。
数据采集端只有两个Python文件，一个为config-Py，其定义了数据库信息、运营商网
络代码、连接超时时间等，内容如下：
[ /data/detector/config-py 1
 -*- coding: utf-8 --
定又My5QL数据信息
DBNAME=*HebNonI tor *
DBUSER=*vebmonitor_user*
DBPASSWORD= *SKJDH3745tgDTS *
DBH0ST=*192.168.1.10*
settings.py中定又IDC-(*ct：电，,cne：联通·,cmce*：移结“)
梦议成报测运管类网培代码（重要）
“ct”代表电信探测点网路，联通网络修改成“cnc”，移动网络修改成“cmcc”，其他类叙
IDC=*ct*
连接的等得时间
CONNECTTIMEOUT = 5
请求超时时间
TIMEOUT = 10
---
## Page 282
第15章构建分布式质量监控平台261
告警部件地址
MAIL7o=*user1edomain. com, user28do
告警手机号
ma.1n - 00
HOBILETO=*136****3463*
另一个为提供业务服务质量采集功能的runmonitor.py，采用了pycurl模块实现，通过定
义setoptO方法定量参数，模拟一个HTTP请求器（request），也可以理解成一个简单的测览
器。再通过getinfoO定义的定量获取HTTP返回结果（response），采集的数据将即时入库，
异常响应将触发告警，关键代码如下：
[ /data/detector/runmonitor.py ]
Curlob] = pycur1.Cur1()
创是 Cur1对象
Cur1obj .setopt (Cur1obj URL, ur1)
定文请求的URL
定义setopt请求器常量、各参数详细说明见2.4节
Cur1obj .setopt (Curlob§ ,CONNECTTIMEOUT, CONNSCTTIMEOUT)
Cur1ob) - setopt (Cur1ob) .NOPROGRESS, 0)
Curlobj .setopt (Cur1ob) ,TIMEOUT, TIMEOUT)
Cur1ob} . setopt (Cur1obj . FOLLOWL0CATION,  1)
CurlobJ , setopt (Cur1obj .MAXREDIRS, 5)
Cur1ob} .setopt (Curlob OPT_FIL&TIME, 1)
Cur1obj -setopt (Cur1ob .NOPROGRESS, 1)
(q。*_ /dev/nul1 2>&1
15.4.3rrdtool作业
rdtool作业实现从MySQL导出数据并更新到rrdtool中，以便为后面的rdtool报表功
---
## Page 283
262第三部分案例篇
能提供数据支持。具体方法是通过查询webmonitor_monitordata表字段MARK为0的记
录，再将数据通过rdtoolupdatevO方法做rrdtool更新，最后更新数据库标志MARK为‘1。
rrdtool 作业部署在任一台安装rrdtool模块的主机上即可，本示例的 rdtool作业与 Web
Server部署在同一台主机上。部分关键源码如下：
[ /data/www/Servermonitor/webmonitor/updaterrd.py 1
def updateRRD (self, rovob]) :
1f str (rowobg (*HrrP_coDe*))==*20o";
更析rrd 文件方法
非HTTP200张态标志“1”
unavai1ablevalue=0
else:
unavai1ablevalue=1
[α1a1fqonox=α1a
time_rrdpath=RRDPATH+*/ ′+str (se1f , getURL (FID)) +* /*+str (FID) +*_*+\
str (oe1f,rrdfiletype [0]) +′ ,rrd*
指定三个特性数据rrdtoo1文件位置
dovnload_rrdpath=RRDPATH+*/*+str (8e1f getURL (FID)) +* /*+str (FID) +*_*+\
str (self,rrdfiletype [1])+',rrd*
unavai1able_rrdpath=RRDPATH+ 1 / *+str (self -getURL (FID) ) +* /*+8tr (PID) +*_*+\
str (self,rrdfiletype [2]) +* ,rrd*
将壹询的 MySOL 记承更新到rrd 文件
rrdtoo1.updatev (tine_rrdpath, *%s:s:hs:a:%s:s* $(str (rowob] [*DATETIME*))1
. s tε (  o w ob j  * N Aε L oo  u  _ T I ε " 1 . s tr (r o  o b j [ " c o N α ε c T .
TIME*)), str (rowobj [*PRETRANSFER_TIME*l), str (rovobj["STARTTRANSFER_
TIME*]) , str (rowob3 [*TOTAL_TIME"])))
rrdtool updatev (download_rrdpath, *$s:hs′ 4 (str (rowob] (*DATETIME*)) \
str (rOwob][*SPEED_DOKNLOAD*))))
rrdtool.updatev (unavailable_rrdpath, *ts:hs′ $ (str (rowob)
[*DATETIME*]}\
, 8tr (unavai1ablevalue)1)
更新数据库标志
except Exception,e:
logging.erroz (*Update zrd error:*+stz (e))
def setMARX (self,_id) :
更新已券志记浆方法
try:
self,cursor.execute (*update webmonitor_monltordata set \
MARK=*1* where ID=*$&s**% (_id))
self,conn.commit()
except Exception,e:
logging-error (′SetMark datebase error1′+str (e))
def getNewdata (self) :
获取未标志的新记录方法
try:
self , cursor,execute (*select ID, FID, NAMELOOKUP_7IME, CONNECT,
TIME, PRETRANSFER_TIME, STARTTRANSFER_TIME, TOTAL_TIME, HTTP_CODE, SPEED
DOWNLOAD, DATETIME from vebeonItor_monitordata where MRK=*o**)
---
## Page 284
第15章构建分布式质量监控平台263
for rov in self,cursor.fetchall() :
self.updateRRD(rov)
except Exception,e:
1ogging.error(*Get nev databaseerror:*+atr (e))
同目录下的config-py为rrdtool作业配置文件，定义了数据库连接信息及项目路径等信
息，可根据实际情况相应修改，最后配置系统crontab，建议与采集同一执行频率，如每5分
钟，内容如下：
dev/nu11 2>$1
15.5服务器端功能设计