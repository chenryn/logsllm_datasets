single vector UAP.
2 BACKGROUND ON DNN-BASED
COMMUNICATION SYSTEMS
Historically, the prosperity of wireless communications has relied
on its own model-based design paradigms, where accurate mathe-
matical models and expert knowledge are required. However, the
traditional model-based wireless techniques cannot address the new
challenges of emerging applications, such as communicating under
excessively complex scenarios with unknown channel models, low-
latency requirement in large-scale super-dense networks [3], etc.
To tackle these challenges, DNNs have recently begun to play an
important role in wireless communication applications due to their
promising performance [6]. In this work, we focus on three major
DNN-based wireless communication systems introduced below:
End-to-End Autoencoder Communication Systems: Despite
the widespread use of provably optimal statistical models for the
wireless physical layer, such models exhibit many imperfections
and non-linearities in practical scenarios that can only be captured
approximately. On the other hand, a DNN-based communication
system such as an end-to-end autoencoder, that does not require a
mathematically tractable model and can be optimized for a specific
hardware configuration and channel, might better be able to handle
such imperfections. Autoencoders are increasingly used for end-to-
end learning of communication systems [33, 34, 37], and they can
outperform contemporary modularized designs of these systems.
Such systems implement their encoders and decoders using DNNs
that are able to learn the construction and reconstruction process
of the information as well as the noisy environment of the physical
channel. For instance, Oshea et al. [37] consider a communication
system design as an end-to-end reconstruction task that tries to
jointly optimize transmitter and receiver components in a single
process. As another example, Nachmani et al. [34] use Recurrent
Neural Networks (RNNs) to decode linear block codes.
Modulation Recognition: Radio signal classification or modu-
lation recognition is the task of classifying the modulation of a
received radio signal to understand the type of communication
scheme used in a wireless system. This can be considered as an
ùëÅ -class decision problem where the input is a complex baseband
time series representation of the received signal. Modulation recog-
nition is a key enabler for spectrum interference monitoring, radio
fault detection, dynamic spectrum access, and many other wireless
applications. Prior to using DNNs, modulation recognition has been
achieved by carefully handcrafting specialized feature extractors
for specific signal types and properties. Then, compact decision
boundaries or statistically learned boundaries are derived from
them with low-dimensional feature spaces.
Recently, conventional methods have been replaced with DNNs
in modulation recognition [38, 39, 48], i.e., [38] applies Convolu-
tional Neural Networks (CNNs) to the complex-valued temporal ra-
dio signal domain. They use expert feature based methods instead of
naively learned features to improve classification performance. Fur-
thermore, West et al. in [39] survey the latest advances in machine
learning with DNNs by applying them to the task of modulation
recognition. Their results show that the performance of modulation
recognition system can be improved by novel architectures and
training methods.
Signal Detection in OFDM Systems: Orthogonal frequency di-
vision multiplexing (OFDM) is a popular modulation scheme that
has been widely used in wireless systems. OFDM is currently being
deployed in many standards such as the downlink of 4G LTE and
IEEE 802.11 family [20, 22]. Furthermore, OFDM is an important
candidate for emerging standards such as 5G [9]. A key component
of OFDM is channel state information (CSI), which refers to known
channel properties of a communication link. CSI can be estimated
using pilot signals that are known to the wireless system prior to
the detection of the transmitted data. With the estimated CSI, trans-
mitted symbols can be recovered at the receiver. Traditionally, least
square (LS) and minimum mean-square error (MMSE) estimation
methods are used for channel estimation in OFDM systems and
have been thoroughly studied in the literature [28].
Recently, DNNs have been introduced in OFDM systems to esti-
mate CSI and recover transmitted symbols at the receiver. [49] and
[50] deploy DNNs for channel estimation and signal detection in
OFDM systems in an end-to-end manner. In [50], Zhao et al. use
CNNs to design an OFDM receiver that outperforms conventional
OFDM receivers based on Linear Minimum Mean Square Error
channel estimators. Ye et al. [49] use DNNs to estimate the CSI
implicitly and recover the transmitted symbols directly instead of
estimating CSI explicitly and detecting the transmitted symbols
using the estimated CSI.
Session 1B: Attacks and Robustness CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea1283 BACKGROUND ON ADVERSARIAL
EXAMPLES
An adversarial example is a crafted input that fools a target classifier
or regression model into making incorrect classifications or predic-
tions. The adversary‚Äôs goal is to generate adversarial examples by
adding minimal perturbations to the input data attributes. Previ-
ous works [11, 17, 32, 35] have suggested several ways to generate
adversarial examples. Most adversarial example techniques gener-
ate perturbations specific to the input meaning that the adversary
needs to be aware of the input to generate its corresponding adver-
sarial perturbation, e.g., the Fast Gradient Sign Method (FGSM) [17]
algorithm generates adversarial perturbations based on the input
and the sign of the model‚Äôs gradient. Recently, Moosavi-Dezfooli et
al. [32] introduced universal adversarial perturbations (UAP) where
the adversary generates adversarial examples that are independent
of the inputs.
3.1 Adversarial Examples Against DNN-based
Wireless Systems
Similar to other DNN-based applications, DNN-based wireless sys-
tems are susceptible to adversarial attacks [1, 2, 7, 8, 12, 13, 19,
23, 24, 42‚Äì45, 47]. Flowers et al. [13] use the FGSM method to
evaluate vulnerabilities of the raw in-phase and quadrant (IQ)
based automatic modulation classification task. There is a body
of work [1, 12, 23, 24, 42‚Äì44] concentrated on using the adversarial
input-agnostic technique proposed in [43] to attack DNN-based
wireless applications, e.g., in [43], Sadeghi and Larsson design a
single UAP vector that, when added to the received signal in a
DNN-based modulation recognition system, causes the receiver
to misclassify the modulation used by the transmitter. [44] uses
the same approach in an end-to-end autoencoder communication
system where an attacker can craft effective physical black-box
adversarial attacks to increase error rates.
As opposed to using a single vector UAP, [12, 42] use a DNN
to generate perturbations, e.g., Flowers et al. [12] encapsulate the
learned model for perturbation creation in an Adversarial Resid-
ual Network (ARN) in a white-box scenario to evade DNN-based
modulation classification systems. In [42], Restuccia et al. formu-
late a Generalized Wireless Adversarial Machine Learning Problem
(GWAP) against modulation recognition systems where they ana-
lyze the combined effect of the wireless channel and adversarial
waveform on the efficacy of the adversarial attacks. Instead of
computing the optimal perturbation for each input, they generate
adversarial perturbations in a white-box scenario over a set of con-
secutive input samples. However, as opposed to our work, their
perturbations are not input-agnostic since they are generated based
on the knowledge of a set of consecutive inputs, which renders the
attack impractical. Note that both works only consider a white-box
scenario where the attacker is fully aware of the target DNN model.
Moreover, these works only apply their attacks to the modulation
recognition task while in this work we consider three types of
wireless communication tasks.
Furthermore, Kokalj-Filipovic et al. [26] propose two counter-
measure mechanisms to detect adversarial examples in modula-
tion classification systems based on statistical tests. One test uses
Peak-to-Average-Power-Ratio (PAPR) of received signals, while an-
other statistical test uses the Softmax outputs of the DNN classifier.
Furthermore, [23] uses a certified defense based on randomized
smoothing against the modulation recognition task. They augment
the training dataset using Gaussian noise, and then use a hypothesis
test to make predictions in the test phase.
4 SYSTEM MODEL
We begin by presenting the system models of the three DNN-based
wireless applications targeted in this paper. A general DNN-based
wireless communication system consists of a transmitter, a channel,
and a receiver. The input of the system is a message ùë† ‚àà M =
{1, 2, ..., ùëÄ} where ùëÄ = 2ùëò is the dimension of M and ùëò is the
number of encoded bits per message. The transmitter employs a
modulation scheme and sends the modulated symbols through
the channel. The receiver receives the transmitted symbols and
demodulates them to reconstruct the original symbols with the
least error. Depending on the wireless application, each part of the
system behaves differently, as overviewed in the following.
4.1 Autoencoder Communication Systems
In an autoencoder communication system, the transmitter and
receiver are called encoder and decoder, respectively, and are imple-
mented using DNNs. The transmitter generates a transmitted signal
ùë• = ùëí(ùë†) ‚àà R2ùëÅ by applying the transformation ùëí : M ‚Üí R2ùëÅ
to the message ùë†. Note that the output of the transmitter is an ùëÅ
dimensional complex vector, which can be treated as a 2 √ó ùëÅ di-
mensional real vector. Then, the generated signal ùë• is added to the
channel noise, which we consider to be AWGN. Hence, the receiver
receives a noisy signal ùë¶ = ùë• + ùëõ and applies the transformation
ùëë : R2ùëÅ ‚Üí M to create ÀÜùë† = ùëë(ùë¶), the reconstructed version of
the message ùë†. To enable a benchmark for comparison with the
single vector UAP attack proposed in [44], we set ùëÅ = 7 and ùëò = 4;
therefore, the input size of the DNN-based decoder is 2 √ó 7 where
the first 7 elements are the in-phase components and the second
7 elements are the quadrature components of the received signal.
For the training and test datasets, we randomly generate input
messages.
4.2 Modulation Recognition Systems
DNN-based modulation recognition can be treated as a classifica-
tion problem where the input is a complex base-band time series
representation of the received signal and the goal of the model
is to identify the modulation type of the transmitter. Similar to
autoencoder systems, the modulated (transformed) input message
ùë• is added to the channel AWGN noise ùëõ, and the receiver receives
a noisy complex base-band signal ùë¶ = ùë• + ùëõ. In this work, we will
use the GNU radio ML dataset RML2016.10a [36] and its associated
DNN [38]. This dataset is publicly available and also enables us to
compare our attack with the single vector UAP attack proposed
by [43].
The GNU radio ML dataset RML2016.10a contains 220000 input
samples, where each sample is associated with one specific mod-
ulation scheme at a specific signal-to-noise ratio (SNR = 10 dB).
It contains 11 different modulations: BPSK, QPSK, 8PSK, QAM16,
QAM64, CPFSK, GFSK, PAM4, WBFM, AM-SSB, and AM-DSB. The
Session 1B: Attacks and Robustness CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea129samples are generated for 20 different SNR levels from -20 dB to
18 dB with a step size of 2 dB. The size of each input vector is 256,
which corresponds to 128 in-phase and 128 quadrature components.
Half of the samples are considered as the training set and the other
half as the test set.
4.3 OFDM Channel Estimation and Signal
Detection Systems
In an OFDM system, at the transmitter side, the transmitted symbols
and pilot signals are converted into parallel data streams. Then, the
inverse discrete cosine transform (IDFT) converts the data streams
from the frequency domain to the time domain with a cyclic prefix
(CP) inserted to mitigate the inter-symbol interference (ISI). The
length of the CP should be no shorter than the maximum delay
spread of the channel. Based on Ye et al. [49], we consider a sample-
spaced multi-path channel described by the complex random vector
‚Ñé. On the receiver side, the received signal can be expressed as
ùë¶ = ùë• ‚äõ ‚Ñé + ùëõ, where ‚äõ denotes circular convolution while ùë• and
ùëõ represent the transmitted signal and the AWGN noise of the
channel, respectively. At the receiver of the OFDM system, the
frequency domain received signal is obtained after removing the
CP and performing a discrete cosine transform (DFT).
We assume that the DNN model takes as input the received data
consisting of one pilot block and one data block, and reconstructs
the transmitted data in an end-to-end manner. To be consistent
with [49], we consider 64 sub-carriers and a CP of length 16. Also,
we use 64 pilots in each frame for channel estimation. Hence, the
size of the input vector is 256, where the first 128 samples are the
in-phase and quadrature components of the pilot block, and the
second 128 samples are the in-phase and quadrature components
of the following data block. We use [49]‚Äôs fully connected DNN
model. For the training and test datasets, we randomly generate
input messages.
5 ATTACK MODEL
In all of the aforementioned wireless applications, the goal of the
attacker1 is to transmit a well-designed perturbation signal over
the channel such that the underlying DNN-based model fails to
perform adequately. The generated perturbation is added to the
transmitted signal and AWGN noise. The receiver receives the per-
turbed signal and applies the target DNN-based model to it. Note
that in the OFDM system, the attacker adds the generated perturba-
tion to each frame containing a pilot block and a data block. In the
white-box scenario, we consider a strong attacker who is aware of
the underlying DNN-based model, while in the black-box setting
the adversary has no or limited knowledge of the underlying DNN-
based model. Due to the challenges for the attacker to obtain robust
phase synchronization with the transmitter at the receiver, which
would likely require tight coordination with the communicating
nodes, we assume that the perturbation generated by the attacker
is subject to a random phase shift on the channel relative to the
transmitter‚Äôs signal.
As mentioned in Section 3, in the underlying wireless applica-
tions, the perturbation signal needs to be transmitted over-the-air,
and therefore the perturbation signal should be input-agnostic i.e.,
1We use ‚Äúattacker‚Äù and ‚Äúadversary‚Äù interchangeably.
Figure 1: Performance of the single vector UAP attack in the
presence of defense mechanisms for an autoencoder com-
munication system. The single vector UAP attack [44] can
be easily defeated using our two defense mechanisms.
universal (UAP). This allows the attacker to generate perturbation
signals with no need to know the upcoming wireless signals. While
some works [43, 44] have investigated such UAPs, they are easily
detectable as the attacker uses a single perturbation vector. Such a
perturbation vector can be inferred by the defender (e.g., through
pilot signals) and consequently subtracted from the jammed signals.
We demonstrate this through two defense mechanisms (namely, ad-
versarial training and perturbation subtraction defenses presented