工萨
铃木
铃木
夏子
铃木
吉田
吉田
吉田
因为UNINALL不会排除掉重复的行，所以即使吉田没有孩子，结
果里也会出现3行相关数据。把结果存入表时，最好先排除掉“child”列
为 NULL 的行。
不过，根据具体需求，有时需要把没有孩子的吉田也留在表里，像下
面这张“员工子女列表”这样。
■员工子女列表
yee(员工)
chid(孩于)
赤井
郎
赤井
二郎
赤井
三郎
工路
春子
工藤
夏子
铃木
夏子
吉田
在这道例题中，我们不能单纯地将“child”列为NULL的行排除掉。
能想到的解法有好几个，不过先来生成一个存储子女列表的视图（孩子主
表）吧。
CREATE VIEW Children (chi1d)
AS SEL&CT child_1 FROM Persomnel
UNION
SEL&CT chi1d_2 FROM Personnel
SEL&CT chi1d_3FRoM Personnel ;
NOIN
---
## Page 91
78
第1章神奇的SQL
chi1d
一郎
二郎
三郎
春子
子
如果原本就有这样一张员工子女表备用，请直接使用它。
那么，接下来我们以员工列表为主表进行外连接操作。请注意连接
条件。
--获取员工子女列表的SOL语句（没有孩子的员工也要输出|
SELECT EXP enployee, CHILDREN chi1d
FROK Perscnnel ENP
LEPT OUTER JOIN Children
ON CHILDREN.chi1d IN (ENP.chi1d_1, EMP.child_2, ENP.ch11d_31 ;
这里对子女主表和员工表执行了外连接操作，重点在于连接条件是通
过IN谓词指定的。这样一来，当表Personnel里“孩子1～孩子3”列的
名字存在于Children 视图里时，返回该名字，否则返回 NULL。工藤家和
铃木家有同名的孩子“夏子”，但这并不影响结果的正确性。
在交叉表里制作嵌套式表侧栏
在生成统计表的工作中，经常会有制作嵌套式表头和表侧栏的需求。
例如这道例题：表TbIPop是一张按照县、年龄层级和性别统计的人口分
布表，要求根据表TbIPop生成交叉表“包含嵌套式表侧栏的统计表”。
■年龄层级主表：TblAge
ape_clas年龄具级|
age_range ( 年酯]
21岁~30 岁
31岁~ 40 岁
41 岁 ~ 50 岁
性别主表：
:TblSex
cd（性别编号]
当色（性别！
T
男
女
---
## Page 92
1-5外连接的用法
79
|县名）age_class（年腾层经]
sax_od（性别l编号）popul
前人口
秋田
m
400
秋田
m
1000
秋田
1
f
800
秋田
3
f
1000
青森
X?
m
700
青森
1
f
500
青森
3
f
800
东京
1
900
东京
1
f
1500
东京
3
1200
千叶
1
m
900
千叶
f
1000
千叶
900
1包含嵌套式表侧栏的坑计表
东北
关系
21 岁 ~ 30 岁
1100
1800
女
1300
2500
31 岁 ~ 40 岁
男
女
 09 ~  1#
男
1000
女
1800
2100
这个间题的要点在于，虽然表TbIPop中没有一条年龄层级为2的数据，
但是返回结果还是要包含这个年龄层级，固定输出6行。生成固定的表侧
栏需要用到外连接，但如果要将表侧栏做成嵌套式的，还需要再花点工夫。
目标表的侧栏是年龄层级和性别，所以我们需要使用表TblAge和表
TblSex作为主表。
思路是以这两张表作为主表进行外连接操作。但是如果像下面的
SQL语句这样简单地进行两次外连接，并不能得到正确的结果。
---
## Page 93
80
第1章神奇的SOL
--使用外连接生成嵌套式表侧栏：错误的SQL语句
SEL&CT MASTER1-age_class AS age_clas8,
MASTER2 .sex_cd
DRTA.pop_tohoku
DATA.pop_kanto
AS pop_tohoku,
FROM (SELECT age_class, Bex_od,
AS pop_kanto
SUM(CASE WHEN pref_pane IN (青森',秋田)
THE population ELSE NULL EMD) AS pop_tohoku,
SUM(CASE WHEN pref_oane IN (东京', 千叶)
THEN population ELSE NULL EMDI AS pop_kanto
FROM Tb1Pop
GROUP BY age_class, Bex_cd) DATA
RIGHTOUTER JDIN Tb1Age MASTER1 --外连接1：和年输易级主表进行外连接
ON MAsTER1.age_class = DATA-age_cla.s8
RIGHOUTERJOIN Tb1Sex MASTER2--外连接2：和性别主表进行外连接
ON MASTER2.sex_cd - DATA.sex_cdj
■执行结果
age_class sex_cd pop_tobolcu pop_kanto
1100
1800
1300
2500
1000
1800
2100
观察返回结果可以发现，结果里没有出现年龄层级为2的行。这不是
我们想要的。我们已经使用了外连接，为什么结果还是不正确呢？
原因是表TbIPop里没有年龄层级为2的数据。也许大家会觉得奇怪，
我们已经使用了外连接，而外连接的作用不就是保证在这种情况下也能获
取定制化的结果吗？
没错，确实是这样的。实际上，与年龄层级主表外连接之后，结果里
是包含年龄层级为2的数据的。
--停在第1个外连接处时：结果里包含年龄层级为2的数据
SELSCT MASTER1.age_elass AS age_class,
DATA.sex_cd
AS sex_cd,
DATA.pop_tohoku
oodd 5
DATA.pop_kanto
AS pop_kanto
PROM (sELECT age_class, Bex_cd,
SUM(CASE WHE pref_oane IN(青森·,秋田)
THEN population ELSE NULL ENDI AS pop_tohoku,
SUM(CASg MHE pre_oane IN东京，千叶)
THEN population ELSE NULL ENDI AS pop_kanto
---
## Page 94
1-5外连接的用法
81
FROM Tb1.Fop
GROUP BY age_elass, sex_d) DATA
RIGHT OUTER JOIN TbIAge MASTER1
ON MAsTER1.age_class = DATA.age_clas8
■执行结果
age_class
poxo8
pop_toboku
pop_kanto
1100
........
1800
1300
2500
-存在年龄层级为2的数据
1000
1800
2100
但是请注意，核心点在这里：虽然年龄层级2确实可以通过外连接从
表TblAge获取，但是在表TblPop里，与之相应的“性别编号”列却是
NULL.原因也不难理解。表TbIPop里本来就没有年龄层级为2的数据，
自然也没有相应的性别信息m或f，于是“性别编号”列只能是NULL
因此与性别主表进行外连接时，连接条件会变成ONMASTER2.sex_cd·
NULL，结果是unknown（这个真值的意思请参考1-3节）。因此，最终结
果里永远不会出现年龄层级为2的数据，即使改变两次外连接的先后顺序，
结果也还是一样的。
那么，究竞怎样才能生成正确的嵌套式表侧栏呢？答案如下。
如果不允许进行两次外连接，那么调整成一次就可以了。
-使用外连接生成嵌套式表例栏：正确的SQL语句
SELBCT MAsTER.age_class AS age_clas8,
MASTER.sex_cdAS sex_cd,
DATA.pop_tohoku AS pop_tohoku,
DATA.pop_kantoAS pop_kanto
PROM IsELECT age_class, Bex_od
LEFT OUTER JOIN
ISELECT age_class, sex_od,
SUM(CASE WHEN preE_nane IN青森·,·秋图1
THEN population ELSE sULL END) AS pop_tohoku,
SUM(CASE KHEN pref_nane IN(东京, +千叶)
THEN population ELSE BULL END] AS pop_kanto
PROM Tb1Fop
GROUP BY age_class, sex_cdl DATA
0BMASTER.age_class = DATA.age_class
AND MASTER.sex_cd
=DATA.sex_cd
---
## Page 95
82
—第1章 神奇的SQL
■执行结果
age_class
sex_cd pop_tobolku
pop_kanto
1100
1800
1300
2500
1000
1800
2100
这样，我们就准确无误地得到了6行数据。无论表TbIPop里的数
据有怎样的缺失，结果的表侧栏总能固定为6行。技巧是对表TblAge
和表TbISex进行交叉连接运算，生成下面这样的笛卡儿积。行数是
3×2 = 6
MASTER
aga_clas ( 年龄层致 1sex_cd ( 性别缩号 ]
m
f
m
m
f
然后，只需对这张MASTER视图进行一次外连接操作即可。也就
是说，需要生成嵌套式表侧栏时，事先按照需要的格式准备好主表就
可以了，当需要3层或3层以上的嵌套式表侧栏时，也可以按照这种方
法进行扩展。
这里补充一下：对于不支持CROSSJOIN语句的数据库，可以像FRON