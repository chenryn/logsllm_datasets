其目的在于要避免ID值出现重复或为NULL。
student_id列时请不要为它加上AUTO_INCREMENT属性。不过，需要保留 PRIMARY KEY子句，
AUTO_INCREMENT 列，其定义与前面创建 member 表时所用的 member_id 列相类似。
个权威机构，如学校办公室。但本书出于示例目的，将自己编造它们。我们将使用一个
male')。
要创建 grade_event 表，可以在 mysql 客户端程序里输入上述 CREATE TABLE 语句，也
在早些时候，我们在创建美史联盟的表（president 和member）时，并没有使用ENGINE
关于这两个引擎之间的不同之处请参考2.6.1节。现在，只需说明成绩考评项目表的定义显
如果的确需要从学校办公室获得学生ID编号，而不能自动生成它们，那么在定义
grade_event 表的定义如下所示;
为了实施这些约束，我们需要建立一些外键关系。这里的“外”表示的意思是“在另一个
口考试成绩与考试事件和学生都有关联：只有当与考试成绩相关联的学生ID和考试事件
student_id是一个整型列，用于保存唯一的学生ID编号。通常情况下，ID编号来源于某
CREATE TABLE grade_event
口类似地，考勤记录与学生有关联：只有与考勤相关联的学生ID在student表里存在时，
ENUM列的值不一定非得是单个字符。例如，还可以把 sex列定义为：ENUM（‘female*，
）ENGINE=InnoDB;
mysql> DESCRIBE student 'sex';
ID分别在student表和grade_event表里存在时，才允许考试成绩进入score表。
IField |Type
PRIMARY KEY (event_id)
event_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
date
才允许考勤情况进入absence表。
sex
enum（'F,M'）1NO
DATE NOT NULL
NOT NULL,
|Null|Key|Default|Extra
+
1.4MySOL教程
用
---
## Page 48
student_id 列的 FOREIGN KEY，则无法使用 PRIMARY KEY，因为 student_id 列未被首先列
查找速度。对于 event_id 列的 FOREIGN KEY，该列被优先列在 PRIMARY KEY 里。对于
都应该有一个关于它们的索引，或者它们应该是某个多列索引里被首先列出的列，这样能加快
表里。
确保在我们的记录行不会有虚假的 ID值，即要求它们必须存在于 grade_event 表和 student
考试事件。通过它们与 student 表和 grade_event 表里的相应ID 值链接起来，我们就能够查
数，
面的命令：
与 student 表里的 student_id 列类似，其特定的值并不重要，重要的是它们必须唯一。
表里的 student_id列类似。利用 AUTO_INCREMENT 属性,我们能方便地生成唯一事件 ID的值。
其允许的取值是'T'和'Q’，分别代表测试（test）和测验（quiz)。
2
为什么 student_id 列会有一个索引呢？这是因为，对于 FOREIGN KEY 定义里的任何列，
学生姓名和考试日期。关于 student_id列和event_id列有两个要点需要注意一下。
那个 PRIMARY KEY 定义可以确保我们不会创建重复的分数行。而 FOREIGN KEY 定义可以
student_id列和event_id 列都是整型列，它们分别表示每一个考试分数所对应的学生和
，那么最好使用能表示它们的数据类型，如DECIMAL。
score是一个INT列，用于保存整型分数值。如果想要保存像58.5那样带有小数部分的分
要创建 score表，可以在 mysql 客户端程序里输入上面的语句，也可以在命令行里执行下
event_id 是一个 AUTO_INCREMENT 列，同时也被定义为了 PRIMARY KEY。它与 student
mysql sampdb SELECT * FROM student;
例如：
至此，我们的数据库和表就都创建好了。接下来，我们需要往表里添加一些行。不过，
口在删除表时，必须把上面的顺序颠倒过来。如果不先删除score表，就无法删除
口 score表依赖于grade_event表和student表，因此在创建score表之前必须先创建其
将 student_id 列和 date 列都定义为 NOT NULL，这样可以防止有缺失值。为了避免出现
mysql sampdb INSERT INTO Btudent (name,sex) VALUES('Abby','F'),('Joseph','M');
这种形式的INSERT语句也可以一次插入多个值列表：
mysql> INSERT INTO member (last_name,first_name) VALUEs('Stein',Waldo');
例如：
INSERT INTO tbl_name (col_namel,col_name2,...) VALUES(valuel,value2,...);
mysql> INSERT INTO student VALUES('Avery','F',NULL,'Nathan','M',NULL);
例如：
INSERT INTO tbl_name VALUES(...),(...),...;
在使用此语法时，
mySql> INSERT INTO grade_event VALUES('2012-09-03','Q',NULL);
mysql>
例如：
INSERT INTO tbl_name VALUES(valuel,value2, ...）;
（1）一次性指定全部列值。语法如下：
第1章MySQL入门
VALUES列表必须包含表中每一列的值，并且值的顺序要与各列在表里
'M'，NULL）;
。下列语句是非法的，因为它括号
---
## Page 51
下LOCAL功能被禁用了：
限)。另外，你还要指定完整的文件路径，以便服务器能找到它。
于服务器主机上，并且你需要拥有FILE服务器访问权限（大部分MySQL用户都没有这样的权
数据文件，并把文件内容发送到服务器进行加载。如果省略了LOCAL，那么数据文件必须存在
附录E。
可以用它来读取其他格式的文件，或者指定不同的列顺序。有关LOAD DATA的更多细节请参考
同时，假设这些值的顺序都与表里存储的列的顺序相同（文件里的\N值表示的是NULL)。你也
并将其内容发送至服务器，加载到member表里。member.txt文件可在sampdb发行版里找到
户端程序mysqlimport 来加载它们。
那么你可以像下面那样直接执行这些语句：
一系列用于将新行添加到 president 表里的INSERT 语句。如果你是在与该文件相同的目录里，
原始数据。例如，在 sampdb 发行版里就有一个名为 insert_president.sql 的文件，它包含
1.4.7.2利用文件添加新行
表和student表里找几个不存在的ID值，然后插入几条分别包含这些值的行：
外键关系是否真的能够防止将不规范的行录入 score表和 absence表里。试着在 grade_event
插入多个行的情形。
=value的赋值形式，没有使用VALUES（）列表的形式。
如果在LOAD DATA语句里使用LOCAL时遇到以下错误信息，那么很可能是因为在默认情况
LOAD DATA语句里的关键字LOCAL会引发客户端程序（在本示例里，指的是mySql）读取
默认情况下，LOADDATA语句会假设各列的值是以制表符分隔的，各行末尾都是换行符。
LOAD DATA 语句是一个从文件里读取数据的批量加载程序。它需要在mysql里运行：
既然已对INSERT 语句的工作原理有所了解，那么现在便用它来检查一下，我们所建立的
假设member.txt文件位于客户端主机的当前目录里，那么上面这条语句会读取该文件，
如果文件里存储的行不是INSERT语句而是原始数据，那么可以利用LOADDATA语句或客
mysql> source insert_president.sql;
如果你已经运行了mysql，那么可以用一条source命令来读取这个文件：
mysql Sampdb  INSERT INTO absence
KEY(event_id）REFERENCES
对于没在 SET子句里指定的列，将被赋予默认值。这种形式的 INSERT 语句无法用于一次
mysql> INSERT INTO member SET last_name='Stein',first_name='Waldo';
例如：
INSERT INTO tbl_name SET col_namel=value1, col_name2=value2, ...
）REFERENCES`student
absence
`grade_event`
CONSTRAINT
(student_id`）)
date='2012-09-16';
1.4MySOL教程
key
3
---
## Page 52
紧挨着它。
无论使用哪条命令，如果需要在命令行里指定连接参数，那么请把它们放到命令名的后面，
而在Windows系统上，可以执行下面这条命令：
件的目录下，运用mysql程序来执行下面这些语句：
1.4.8
member.txt2.
那么可以分别将它们命名为member.1.txt和member.2.txt，或者member.txt1和
加载到名为member1和member2的表里去。如果你真的想将这两个文件加载到member表里，
要加载文件member1.txt和member2.txt，那么mysqlimport会认为是要把这两个文件分别
这
会把名为 member.txt和 president.txt 的文件分别加载到 member 表和 president表里。
member表里的LOADDATA语句。这是因为mysqlimport程序是根据数据文件的名字来确定表
据
成一
32
C:\>init_all_tables.bat sampdb
意味着，你应该仔细挑选数据文件名，否则，mysqlimport 将无法使用正确的表名。如果想
名的，同时它会把文件名中第一个句号（.）之前的所有内容都当作表名。例如，mysqlimport
居库名字的前面，紧挨着它。
在练习完成上面介绍的这几种添加行的方法之后，为了顺利进行后面的学习，你应该重新
对于上面这条命令，mysqlimport 程序将生成一条能将 member.txt文件里的内容加载到
8sh init_all_tables.sh sampdb
如果不想单独输入这么多条语句，那么在Unix系统上，可以执行下面这条命令：
是
是
mysql>
%mysqlsampdb
%mysqlimport --local sampdb member.txt