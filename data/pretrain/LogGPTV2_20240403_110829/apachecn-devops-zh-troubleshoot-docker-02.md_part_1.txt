# 二、Docker 安装
在大多数操作系统中，Docker 的安装都非常顺利，出错的可能性很小。所有的 Linux、云、Windows 和 Mac OS X 环境都支持 Docker 引擎安装。如果不支持 Linux 版本，那么可以使用二进制文件安装 Docker Engine。Docker 二进制安装主要面向想要在各种操作系统上试用 Docker 的黑客。它通常包括检查运行时依赖关系、内核依赖关系，以及使用 Docker 平台特定的二进制文件，以便继续安装。
Docker 工具箱是一个安装程序，可以用来在你的 Windows 或 Mac 机器上快速安装和设置 Docker 环境。Docker 工具箱还安装了:
*   **Docker 客户端**:它通过与 Docker 守护进程通信来执行命令，如构建和运行，以及运送容器
*   **Docker Machine** :是用于在虚拟主机上安装 Docker Engine，并借助 Docker Machine 命令进行管理的工具
*   **Docker Compose** :是一个用来定义和运行多容器 Docker 应用的工具
*   **Kitematic** :运行在 Mac OS X 和 Windows 操作系统上的 Docker GUI
带有工具箱的 Docker 以及各种支持的操作系统的安装非常简单，但是我们已经列出了潜在的缺陷和涉及的故障排除步骤。
在本章中，我们将探讨如何在各种 Linux 发行版上安装 Docker，例如:
*   人的本质
*   Red Hat Linux
*   CentOS
*   韩国人
*   一种男式软呢帽
*   SUSE Linux
所有上述操作系统都可以部署在裸机上，但是我们在某些情况下使用了 AWS 进行部署，因为这是生产环境的理想情况。此外，在 AWS 中启动和运行环境会更快。我们已经在本章的相应章节中解释了相同的步骤，这将帮助您排除故障并加快在 AWS 上的部署。
# 在 Ubuntu 上安装 Docker
让我们开始在 Ubuntu 14.04 LTS 64 位上安装 Docker。我们可以使用 AWS AMI 来创建我们的设置。借助以下链接，可以在 AMI 上直接启动映像:
[http://thecloudmarket.com/image/ami-a21529cc-Ubuntu-images-hvm-SSD-Ubuntu-trusty-14-04-amd64-server-2016 01 14-5](http://thecloudmarket.com/image/ami-a21529cc--ubuntu-images-hvm-ssd-ubuntu-trusty-14-04-amd64-server-20160114-5)
下图说明了在 Ubuntu 14.04 LTS 上安装 Docker 所需的安装步骤:
![Installing Docker on Ubuntu](img/image_02_001.jpg)
## 先决条件
无论 Ubuntu 版本如何，Docker 都需要 64 位安装。内核最低必须是 3.10。
让我们使用以下命令来检查我们的内核版本:
```
$ uname -r
```
输出是 3.13.x 的内核版本，这很好:
```
3.13.0-74-generic
```
## 更新包信息
执行以下步骤来更新 APT 存储库并安装必要的证书:
1.  Docker 的 APT 存储库包含 Docker 1.7.x 或更高版本。要设置 APT 使用新存储库中的包:
    ```
     $ sudo apt-get update 
    ```
2.  运行以下命令，确保 APT 使用 HTTPS 方法，并且安装了 CA 证书:
    ```
     $ sudo apt-get install apt-transport-https ca-certificates 
    ```
`apt-transport-https`包使我们能够使用`/etc/apt/sources.list`中的`deb https://foo distro main`行，这样使用`libapt-pkg`库的包管理器就可以访问可通过 HTTPS 访问的源中的元数据和包。
`ca-certificates`是 CA 证书的容器 PEM 文件，它允许基于 SSL 的应用检查 SSL 连接的真实性。
## 添加新的 GPG 键
**GNU 隐私卫士**(被称为 **GPG** 或 **GnuPG)** 是一款符合 OpenPGP (RFC4880)标准的免费加密软件:
```
$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D 
```
输出将类似于下面的列表:
```
Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --homedir /tmp/tmp.SaGDv5OvNN --no-auto-check-trustdb --trust-model always --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D 
gpg: requesting key 2C52609D from hkp server p80.pool.sks-keyservers.net 
gpg: key 2C52609D: public key "Docker Release Tool (releasedocker) " imported 
gpg: Total number processed: 1 
gpg:               imported: 1  (RSA: 1)
```
## 故障排除
如果发现`sks-keyservers`不可用，可以尝试以下命令:
```
$ sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D 
```
## 为 Docker 添加新的包源
可以通过以下方式将 Docker 存储库添加到 APT 存储库中:
1.  用一个新的源作为 Docker 存储库来更新`/etc/apt/sources.list.d`。
2.  打开`/etc/apt/sources.list.d/docker.list`文件，用以下条目更新:
    ```
     deb https://apt.dockerproject.org/repo ubuntu-trusty main
    ```
## 更新 Ubuntu 包
添加 Docker 存储库后的 Ubuntu 包可以更新，如下所示:
```
$ sudo apt-get update
```
## 额外安装 linux 映像
对于 Ubuntu Trusty，建议安装`linux-image-extra`内核包；`linux-image-extra`包允许使用 AUFS 存储驱动程序:
```
$ sudo apt-get install linux-image-extra-$(uname -r) 
```
输出将类似于下面的列表:
```
Reading package lists... Done 
Building dependency tree        
Reading state information... Done 
The following extra packages will be installed: 
  crda iw libnl-3-200 libnl-genl-3-200 wireless-regdb 
The following NEW packages will be installed: 
  crda iw libnl-3-200 libnl-genl-3-200 linux-image-extra-3.13.0-74-generic 
  wireless-regdb 
0 upgraded, 6 newly installed, 0 to remove and 70 not upgraded. 
Need to get 36.9 MB of archives. 
After this operation, 152 MB of additional disk space will be used. 
Do you want to continue? [Y/n] Y 
Get:1 http://ap-northeast-1.ec2.archive.ubuntu.com/ubuntu/ trusty/main libnl-3-200 amd64 3.2.21-1 [44 ..
Updating /boot/grub/menu.lst ... done 
run-parts: executing /etc/kernel/postinst.d/zz-update-grub 3.13.0-74-generic /boot/vmlinuz-3.13.0-74-generic 
Generating grub configuration file ... 
Found linux image: /boot/vmlinuz-3.13.0-74-generic 
Found initrd image: /boot/initrd.img-3.13.0-74-generic 
done 
Processing triggers for libc-bin (2.19-0ubuntu6.6) ...
```
## 可选-安装设备
如果尚未安装，请使用以下命令安装 AppArmor:
```
$ apt-get install apparmor
```
输出将类似于下面的列表:
```
sudo: unable to resolve host ip-172-30-0-227 
Reading package lists... Done 
Building dependency tree        
Reading state information... Done 
apparmor is already the newest version. 
0 upgraded, 0 newly installed, 0 to remove and 70 not upgraded.
```
## Docker 安装
让我们开始使用官方 APT 包在 Ubuntu 上安装 Docker 引擎:
1.  更新 APT 包索引:
    ```
     $ sudo apt-get update
    ```
2.  安装 Docker 引擎:
    ```
     $ sudo apt-get install docker-engine 
    ```
3.  启动 Docker 守护程序:
    ```
     $ sudo service docker start 
    ```
4.  确认 Docker 安装正确:
    ```
     $ sudo docker run hello-world 
    ```
5.  这就是输出的样子:
    ```
     Latest: Pulling from library/hello-world 
            03f4658f8b78: Pull complete  
            a3ed95caeb02: Pull complete  
            Digest: sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8b
            c72074cc1ca36966a7 
            Status: Downloaded newer image for hello-world:latest 
            Hello from Docker. 
            This message shows that your installation appears to be working 
            correctly.
    ```
# 在红帽 Linux 上安装 Docker
红帽企业版 Linux 7.x 支持 Docker。本节提供了使用 Docker 管理的发行包和安装机制安装 Docker 的概述。使用这些包可以确保您能够获得 Docker 的最新版本。
![Installing Docker on Red Hat Linux](img/image_02_002.jpg)
## 检查内核版本
可以在以下命令的帮助下检查 Linux 内核版本:
```
$ uname -r
```
在我们的例子中，输出是内核版本 3.10.x，它将正常工作:
```
3.10.0-327.el7.x86 _64
```
## 更新百胜包
可以使用以下命令更新 YUM 存储库:
```
$ sudo yum update
```
给出了输出列表；确保在最后显示`Complete!`，如下:
```
Loaded plugins: amazon-id, rhui-lb, search-disabled-repos 
rhui-REGION-client-config-server-7       | 2.9 kB   
.... 
Running transaction check 
Running transaction test 
Transaction test succeeded 
Running transaction 
  Installing : linux-firmware-20150904-43.git6ebf5d5.el7.noarch      1/138  
  Updating   : tzdata-2016c-1.el7.noarch                             2/138  
  ....                              
Complete! 
```
## 添加 YUM 存储库
让我们将 Docker 存储库添加到 YUM 存储库列表中:
```
$ sudo tee /etc/yum.repos.d/docker.repo <<-EOF 
[dockerrepo] 
name=Docker Repository 
baseurl=https://yum.dockerproject.org/repo/main/centos/7 
enabled=1 
gpgcheck=1 
gpgkey=https://yum.dockerproject.org/gpg 
EOF
```
## 安装 Docker 包
可以使用 YUM 存储库安装 Docker 引擎，如下所示:
```
$ sudo yum install docker-engine
```
## 启动 Docker 服务
Docker 服务可以在以下命令的帮助下启动:
```
$ sudo service docker start
Redirecting to /bin/systemctl start docker.service
```
## 测试 Docker 安装
借助以下命令列出 Docker 引擎中的所有进程可以验证 Docker 服务的安装是否成功:
```
$ sudo docker ps -a
```
以下是前面命令的输出:
```
CONTAINER   ID   IMAGE   COMMAND   CREATED   STATUS   PORTS   NAMES
```