I believe that it's a better choice to have the std library on crates.io,
instead of in /usr/local. It makes it easier to have alternative standard
libraries, and the compilers shouldn't really link with it automatically
anyway. It also makes it easier to build for new targets, making cross
compilation multiple grades of magnitude easier.
The standard library requires on a rust version, but implementing a rustc
version requirement shouldn't be too hard.
The only argument I've so far heard against this, is that it'd require people
to update their Cargo.lock if they are using cargo, or manually update the std
if they are not. While this is true, most people _will_ be using cargo or a
dependency manager, and updating the lock file shouldn't be an issue.
Today I heard rust prefers explicit over implicit. Not implicitly linking
against all the standard libraries would follow this.