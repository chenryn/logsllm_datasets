# office“噩梦公式”漏洞攻击演进分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
Office办公软件内有一个名为“EQNEDT32.EXE”的公式编辑器组件，该组件存在多个隐藏了17年之久的远程代码执行漏洞，黑客可以在office文档中嵌入恶意的公式数据发起攻击，用户打开恶意文档就会中招，因此我们将该系列安全漏洞命名为“噩梦公式”漏洞。360核心安全事业部高级威胁应对团队持续跟踪和关注该漏洞的进展，在全球范围内率先截获了“噩梦公式”0day漏洞的在野攻击，并向微软报告了漏洞细节，助力微软修复该漏洞，同时为网民全面拦截利用该漏洞的攻击。在“噩梦公式”漏洞爆发后，我们对黑客攻击的样本进行了持续的监控，发现该攻击在全球范围内呈爆发性增长，本文将对目前流行的Office“噩梦公式”漏洞利用样本进行了整理分析，让各安全厂商和相关用户了解该漏洞在野攻击的真实情况。
## 在野样本首次捕获时间
目前，在野利用的“噩梦公式”漏洞主要是CVE-2017-11882、CVE-2018-0802和CVE-2018-0789三个漏洞，样本的首次捕获时间线大致如下：
  1. 2017年11月21日，在漏洞细节曝光后，捕获首例在野利用的CVE-2017-11882样本
  2. 2017年12月14日，开始出现绕过ASLR地址随机化的0day样本，捕获的样本使用了CVE-2017-11882/CVE-2018-0802组合漏洞
  3. 2017年12月19日，捕获了另一例在野攻击的CVE-2018-0802样本，该样本只用了CVE-2018-0802单个漏洞
  4. 2018年1月16日，开始出现利用CVE-2018-0798漏洞的变种，并捕获一例CVE-2018-0798的测试样本
  5. 2018年1月19日，捕获两例CVE-2018-0798的在野攻击真实样本，经确认shellcode主体部分和1月16日捕获的测试样本完全一致
## 代表性样本简要分析
下面我们依次对连续捕获多例利用公式编辑器的代表性样本进行简要分析：
### CVE-2017-11882/CVE-2018-0802
2018年1月18日，我们捕获了2个文档诱饵内容包含中国韩国商会的攻击样本，这两个样本分别独立利用CVE-2017-11882和CVE-2018-0802，内容完全一致：
由于网上已有许多对于CVE-2017-11882和CVE-2018-0802漏洞的分析，所以本文不对这两个漏洞的原理进行阐述。如需了解CVE-2018-0802漏洞的具体细节可以参考我们团队之前写的文章()。
该漏洞触发后的payload部分比较简单，只是简单启动一个叫做v3ah.exe的进程，因此shellcode部分无需详细展示。本文不对payload部分作详细讨论。该样本在我们的平台跑出的进程链如下：
2018年1月22日，我们又捕获2个诱饵内容包含比特币主题的韩文漏洞文档，诱饵及payload完全相同，但分别独立利用CVE-2017-11882和CVE-2018-0802漏洞进行攻击：
这两个样本在我们的平台跑出的进程树如下，可以看到payload名称与1月18日捕获到的样本一致(但md5不同)：
### CVE-2018-0802
2018年1月19日，我们捕获一个诱饵内容为关于智能手机用户的安全建议的漏洞文档，该样本单独利用CVE-2018-0802：
该样本在我们的平台跑出的进程树如下：
### CVE-2018-0798
2018年1月19日，我们捕获一个CVE-2018-0798漏洞的在野利用样本，内容为关于海洋监视网络的调查问卷。
该样本在我们的平台跑出的进程树如下：
有趣的是，在这之前的1月16日，我们已捕获过一个CVE-2018-0798的在野测试样本。下面我们结合修改过的测试样本对CVE-2018-0798漏洞进行简要分析。
CVE-2018-0798漏洞正是国外安全厂商checkpoint在本月公开的另一个“CVE-2018-0802”漏洞，经确认，checkpoint文章中所谓的“CVE-2018-0802”其实是CVE-2018-0798。由于微软的工作失误，把checkpoint提交的CVE-2018-0798错误归类到了CVE-2018-0802，引起了国内外分析人员的广泛讨论。
CVE-2018-0798的根本原因是office公式编辑器在解析Matrix
Record(0x05)的内容时，解析到rows与cols成员时没有进行额外的长度校验，通过构造恶意数据，可以任意指定后面读入的row_parts和col_parts长度，从而导致栈溢出(如下图所示)：
相关调用点位于ParseMatrixRecord(sub_443E34)函数内，其中发生溢出的是高亮的ReadPartLineTypes(sub_443f6c)函数
由于在拷贝数据到栈上时没有对v4进行长度校验，导致v2为null时才会停止拷贝，通过精心构造数据，就可导致栈溢出，从而覆盖eip，控制执行流。
我们捕获的原测试样本在触发漏洞后，会启动PowerShell远程下载一个正常的notepad.exe并启动，虽然由于测试者写的代码有问题，最终notepad.exe并没有下载下来，启动的是系统自带的notepad.exe。这是攻击者的测试样本在我们平台上跑出的进程树：
分析时我们略微改造了这个样本的shellcode，使之启动一个计算器。下面结合改造过的样本对其shellcode进行分析。
触发CVE-2018-0798的关键部分如下图蓝色高亮部分所示：
对上图中的字节码逐一进行解释：
这段shellcode比较有意思的一点是直接定位到了读入OLE数据的全局堆数据，整个执行流程为：漏洞触发->栈上的shellcode
->堆上的shellcode->启动恶意进程。
显然，如此精妙的shellcode肯定是被精心设计的，所以自从捕获测试样本后，我们也一直在等待攻击样本的出现，在1月19日，我们果然捕获两个利用CVE-2018-0798的攻击样本。
从下图的对比可以看到，攻击样本和测试样本除了命令行参数不同外，其余字节完全相同，明显是同一团伙所为(上半部分为1月19日的攻击样本，下半部分为1月16日的测试样本):
不过，需要指出的是，我们捕获的在野CVE-2018-0798样本都只针对未开启ASLR的公式编辑器版本，目前我们尚未发现能绕过ASLR的该漏洞在野样本。
## 攻击利用手法演进分析
在观察到的形形色色的利用公式编辑器进行攻击的样本中，我们还观察到一些高级技巧，在这里我们也一并总结一下。
### 1\. Mshta远程执行代码利用
利用mshta去启动远程hta文件其实已司空见惯，之前的CVE-2017-0199和CVE-2017-8759已经将这一技巧用烂。
我们的平台于2018年1月18日捕获一个日文诱饵内容的样本，该样本同时利用了CVE-2017-11882和CVE-2018-0802漏洞。样本标题为“必要部数的调查”，打开后界面如下：
该样本为docx格式，组织相对简单，在\word\embeddings下含两个ole对象：一个利用CVE-2017-11882，一个利用CVE-2018-0802。
两个ole的shellcode部分基本一致，也相当简单，获取WinExec地址后，传入参数去启动一个远程的hta文件，如下所示：
### 2\. PowerShell远程执行代码利用
利用powershell去下载、启动远程文件也已经很常见了，现在已经开始有样本在尝试文件不落地。这里介绍2个我们捕获到的，攻击我国一些商业公司的样本。两个样本都只利用了CVE-2017-11882。
第一个样本为2018年1月3日捕获，邮件信息如下：
可以看到该邮件的原始发送日期为2017年11月30日，主题为“财务报销注意事项”，附件打开后并没有什么引人关注的诱饵，引起我们注意的是它的powershell命令。首先，该样本的进程树如下：
我们很好奇这段加密的base64代表什么？于是尝试手动解码。解码完如下：