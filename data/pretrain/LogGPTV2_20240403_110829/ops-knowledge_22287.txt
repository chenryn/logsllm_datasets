User:  Write a Python script to download a file from a specified URL and output the download progress to the screen
Assistant: The following is a sample code that can download a file from a specified URL and display the download progress: ``` import requests import shutil import os url = "http://example.com/file.zip" filename = "file.zip" r = requests .get(url, stream=True) if r.status_code == 200: total_size = int(r.headers.get('content-length')) downloaded_size = 0 with open(filename, 'wb') as f: for chunk in r.iter_content(chunk_size=1024): if chunk: f.write(chunk) downloaded_size += len(chunk) done = int(50 * downloaded_size / total_size) print(f"\r[{'=' * done }{' ' * (50-done)}] {int(100*downloaded_size/total_size)}%", end="") print(f"\nFile {filename} downloaded successfully!") else: print("Error downloading file!") ``` Explanation: 1. First import the required modules, requests is used to send HTTP requests, shutil and os are used for file-related operations. 2. Define the URL and file name of the file to download. 3. Send the HTTP request and wrap the response in a traversable object (stream=True). 4. Check whether the status code of the HTTP response is 200. If not, the file download fails and an error message is output. 5. If the status code is 200, get the file size from the response header, and create an empty file to save the downloaded file data. 6. Iterate over each chunk of the response content and write it to an empty file. 7. After each chunk is written to the file, update the download progress and output it to the screen. The download progress is shown as a progress bar. 8. When the download is complete, a success message is output.