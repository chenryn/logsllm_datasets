is not available. With most existing systems, in this situation, wire-
less communication is not possible unless the IMD is activated by
a magnetic read switch. However, as described in Section 6, these
physical backdoors have many drawbacks. We, instead, propose to
use the protocol shown in Figure 1 in this mode of operation.
With this solution, both the reader and the IMD verify that they
are within each other’s security range and generate a temporary se-
cret key. An attacker won’t be able to get access to the victim’s
IMD from a remote location, however, he could potentially estab-
lish a key with the IMD if he gets close to the patient, without
having to steal his credential. We therefore suggest, that in the
Emergency mode of operation, the security range should be much
smaller than in the normal mode of operation. We believe that a
security range of 2-4 centimetres should be quite appropriate, since
this would require the attacker to almost have physical contact with
his victim.
Note that inputs from other sensors could be used to reinforce
the security of the emergency mode of operation. For example,
if the IMD is equipped with an accelerometer, the policy of the
IMD might be to verify that the reader is close, as proposed by our
scheme, but also that the patient is lying down. This would provide
an additional level of protection. Furthermore if the IMD detects
an emergency situation (stroke, heart failure, etc.), access control
could be deactivated all together. Access control, in this case, is
probably not the biggest concern.
4.2 Proximity-Based Commands
4.3 Robustness
Until now, our proximity-based scheme has been proposed to
secure the IMD–reader pairing during the normal and emergency
modes of operation. However, this approach can be extended to
any other aspect of IMD–reader communication.
A doctor might want to access an IMD for several reasons. One
reason could be to remotely monitor a patient and retrieve log-
ging/history data. Another reason could be to modify the param-
eters of the IMD or reconﬁgure the device.
Because robustness is a key design criterion we propose a method
to allow the proximity aware device pairing protocol in Figure 1 to
continue, despite transmission errors on the sound channel. This
proposal is an optional addition to the protocol and is meant to en-
able device pairing in extremely loud environments at the cost of
some security.
The proposal is, that after the rapid bit exchange phase, the prover
(or veriﬁer) sends a radio message containing the exact same data
414/
/
o
o
/
/
/
o
/
o
/
o
/
o
/
o
/
o
/
/
y
t
i
l
i
b
a
b
o
r
P
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
Probability of attacker randomly
guessing x of the bits
Probability that nonce contains
x ’1’s (Binomial)
 20
 40
 60
 80
 100
Number of bits
Figure 5: Probability that an attacker can guess x of the bits
in a nonce. This assumes that the attacker is guessing each bit
randomly with a probability of 1/2 and applies if the receiver
allows bit errors.
(Nv ⊕ Np) as was sent in the sound messages. Doing that will
enable the veriﬁer (or prover) to use the arrival time of the sound
messages to detect proximity but since the same data was transmit-
ted via the radio channel (which presumably is immune to audio
noise) it doesn’t matter if part of the audio message is wrong. It
should be emphasized that this extra radio message is sent after the
distance bounding phase has completed successfully. In order for
an attacker to abuse this robustness proposal he must already have
cheated the distance bounding phase, i.e., sent all replies at the cor-
rect times, otherwise the protocol would have been aborted.
If the veriﬁer (or prover) is willing to accept some transmission
errors in the audio messages, it reduces the guessing space for the
attacker. However, as long as enough bits are correct, the veriﬁer
(or prover) can be fairly certain that the audio messages where not
guessed in advance and sent by an attacker. In the following we
discuss some guessing strategies that an attacker might use to attack
a version of the protocol that allows bit errors on the sound channel.
The optimal guessing strategy depends on how the nonce is gen-
erated but if we assume a truly random nonce, most guessing strate-
gies will give the same result, on average. In a guessing strategy
where the attacker tries to guess each bit randomly, i.e., ’1’ with
probability 1/2 and ’0’ with probability 1/2, the probability of
guessing exactly m out of N bits is P (m) =`N
assuming each guess is independent. In Figure 5 this binomial dis-
tribution is plotted along with the probability of guessing at least
m out of N bits. This probability is given by the sum of the prob-
ability of guessing exactly m bits and the probability of guessing
exactly m + 1 bits, etc.
m´pm(1 − p)N −m,
P (at least m bits) = P (m) + P (m + 1) + · · · + P (N )
=
N
Xi=m N
i!pi(1 − p)N −i
The exact amount of correct bits that the IMD will require will
depend on the current mode of operation and the security policy
in effect. However, we propose as a reasonable trade-off between
security and robustness, to require at least 75% of the bit to be
correct. If N = 100, that will result in a probability for an attacker
to fake his distance of approximately 2−22.
Note that this is an upper bound, since this computation assumes
that all 100 sound messages sent by the attacker passed the distance
bounding test, i.e., that they were sent at the correct time such that
they appear to be from someone in the proximity of the device.
Figure 6: The analog portion of the receiver used in the long
distance mode of our proof-of-concept prototype. A highly se-
lective bandpass ﬁlter is used to reject environmental noise,
then a phase locked loop is used for detection of the commu-
nications frequency.
5. PROTOTYPE IMPLEMENTATION AND
MEASUREMENTS
In this section we present the implementation details of our pro-
totype and the details of our measurement setup.
5.1 Construction of Proof-Of-Concept Proto-
types
In order to test various properties of our system we built proof-
of-concept prototypes of both the prover and the veriﬁer, and pro-
grammed them with selected portions of the protocols and lower
level overhead, sufﬁcient to measure several properties of the sys-
tem. We describe here the high level technical details of the proto-
types.
The prototypes are respectively a prover and a veriﬁer with ana-
log circuitry for RF and sonic communication and ATMega644p
microcontrollers running at 20MHz for computation and control.
The ATMega644p microcontroller is representative of medium-cost
general purpose microcontrollers for embedded systems. The pro-
totypes have two modes of operation: a precision near distance
mode, and a long distance mode.
The near distance mode is designed to provide good accuracy in
distance measurement, while simultaneously providing a baud rate
suitable for fast transaction times. In this mode the analog portion
of the receiver consists of a 4 poles VCVS active high pass ﬁlter
to exclude the majority of environmental noise, and two stages of
ampliﬁcation. We designed the ﬁnal ampliﬁcation stage to clip the
signal thereby producing a TLL square wave as input to the micro-
controller where the frequency detection was implemented. This
mode of operation uses a carrier frequency of 13.6kHz and com-
municates using binary frequency shift keying with a modulation
index of 500Hz. We found this setup to be suitable for reliable
communication at speeds of up to 1kbaud.
The near distance mode is only intended for the case where the
programmer is in very close proximity to the IMD. In order to ad-
ditionally support the case where it is desirable (perhaps in a lower
security setting) to communicate with a programmer at a greater
distance, the long distance mode (whose analog receiver is depicted
in Figure 6) has a much higher frequency selectivity and performs
frequency detection in the analog domain, rather than in the digital
domain as in the near distance mode. The analog signal path for
the long distance mode consists of a state variable band pass ﬁlter
with fc = 7.35kHz and a quality factor of Q = 100 (very high fre-
quency selectivity). The ﬁlter output is ampliﬁed and then fed into
a phase locked loop timed to detect the fc of the ﬁlter. The phase
locked loop outputs TTL level pulses to the microcontroller when
the mark frequency is detected, thus supporting the same BFSK
communication scheme used by the near distance mode. Long dis-
tance mode has less accuracy in distance measurements for reasons
discussed below.
415We measured the power consumption of the microcontrollers
during peak computation and found the receiver to consume 0.15W
at 5V DC and the transmitter to consume 0.17W at 5V DC. We
did not attempt to optimize power consumption through turning off
unused portions of the controller, or using lower power states dur-
ing periods of reduced computational demand. The analog portion
of the receiver consumes 0.13W at 10V DC. All measurements
taken with current sensing laboratory bench power supplies.
Assuming (pessimistically) that authentication takes 1 second,
the energy consumed by our prototype would be 0.28J. To place
this in context, a deﬁbrillation shock of 10J would be a medium
energy therapy for several common conditions, and an Implantable
cardioverter deﬁbrillator is expected to be able to provide such a
therapy many times. Our prototype can run an authentication pro-
tocol around 36 times and consume as much energy as a single such
therapy.
5.2 Turn around time
In order for the distance bounding to be sufﬁciently accurate to
provide security it is important that there be only a short lag time
between the reception of a bit on the radio channel and the corre-
sponding transmission of the response bit on the sound channel.
We performed measurements by connecting an oscilloscope lead
to the microcontroller pins on which demodulated data are received
from the radio and sent to the sonic transducer respectively. Us-
ing this setup we measured the time required to detect incoming
data, store it into memory, calculate the response based on this
challenge, and output the response. We found that approximately
412ns (mean of 20 trials) are required for these combined oper-
ations, with a standard deviation of 45.4ns. During this amount
of time sound travels around one hundredth of a centimeter, which
indicates that the digital domain overhead of our protocol has a
negligible impact on distance estimation when run on reasonably
modern embedded technology.
5.3 Distance Measurement
To test the accuracy of distance estimation we measured the time
of ﬂight as the difference between the time one bit of information
reaches the output of the transmitter and the time that bit can be
recognized by the receiver. This latter time includes the time of
ﬂight of the sound, and the delay introduced by the entire analog
signal path. The signal thus produced was measured at the point
where the input enters the receiver’s microcontroller.
In our ﬁrst series of distance measurement experiments we eval-
uated the near distance mode’s distance measurement accuracy at
different distances in air, and through 2cm of meat and 1cm of
air. This latter case represents a likely practical scenario for emer-
gency near distance communication, and therefore requires that the
programmer be very close to the medical device. Because of the
amount of RF noise present with the transmitter and receiver so
close together we performed this series of experiments with the re-
ceiver mounted in a Faraday cage.
In a real IMD the shielding
would be integrated into the housing of the IMD itself. To simulate
communications through a patient’s abdominal wall we implanted
the transmitter in 8kg of ground beef with at least 2cm of meat sur-
rounding the transmitter on all sides. We implanted the transmitter
rather than the receiver in this series of experiments both to test the
time of ﬂight calculation available to the programmer device in our
protocol, and also because the receiver, being in a Faraday cage,
would have been difﬁcult to implant.
Through air we measured every distance between 1cm and 100cm
at 2cm intervals with 5 observations at each distance. We found
the accuracy to be ±1.78cm with a standard deviation of 1.59cm.
Figure 7: To test time of ﬂight distance calculations we im-
planted the receiver’s microphone inside a portion of the ab-
dominal wall of a cow. Shown here connected to the analog
portion of the long distance receiver.
Through 2cm of meat and 1cm of air we found the near distance
mode to be accurate to within ±.01cm with a standard deviation of
0.5cm (mean of 14 trials). This provides suitable accuracy for the
IMD’s emergency mode of operation (see Section 4).
In our second series of distance measurement experiments, we
evaluated the long distance mode’s distance measurement accuracy
through 3cm of meat and additional distances in air as shown in
Figure 7. We measured total (air + meat) distances from 10cm
to 150cm at 10cm intervals, as well as at 5cm. We recorded 10
observations at each distance.
The implantation setup for our second series consisted of implan-
tation of the receiver’s microphone inside a portion of the abdomi-
nal wall of a cow measuring slightly more than 15cm×9cm×6cm.
The microphone was implanted 3cm deep.
Figure 8 shows the results of these measurements. Measured
distance includes both air and meat between the sound transmitter
and receiver. The estimated distance shown is calculated based on
the average speed of sound in air at sea level multiplied by the time
of ﬂight adjusted for the constant propagation delay through the
ﬁlter and PLL frequency detector used by the long distance mode.
These measurements show that the prototype has a precision of
±9cm with standard deviation of 3cm.
We see from these experiments that the long distance mode has a
greater range, but poorer accuracy than the short distance mode.
The inaccuracy of the long distance mode is largely due to the
phase locked loop used for frequency detection. A phase locked
loop consists of an oscillator at a multiple of the mark frequency
with feedback mechanisms which cause this oscillator to lock on to
(synchronize with) an incoming signal. The time required to lock
on to a new incoming signal is somewhat non-deterministic as it
will depend on many factors including the initial phase difference
between input and the PLL’s internal oscillator. Fortunately, how-
ever, 9cm is sufﬁcient accuracy for long distance mode operation
in which the reader may operate from a distance of several meters.
6. RELATED WORK
Several approaches have been proposed to solve the IMD secu-
rity problem described in the previous sections. We brieﬂy review