.B \-relax
这个选项 的 效果 取决于 机器, 目前 只支持 H8/300.
在 某些 平台 上 可以 使用 这个选项 做 全局优化, 它 让 linker 解决 程序中
的 地址处理, 例如 在 输出目标文件 中 缓和(relax) 地址模式 以及 合成
(synthesize) 新指令.
其他平台 也接受 `\|\c
.B \-relax\c
\&\|' 选项, 但是 不起作用.
.TP
.B \-r 
生成 可重定位 输出 \(em\& 就是说, 生成的 输出文件 能够 依次 成为 \c
.B ld\c
\& 的 输入, 一般 称之为 \c
.I 不完全(partial)
连接\c
\&. 它 有 一个 副效应, 在 支持 标准 Unix 幻数(magic number) 的 环境 中,
这个选项 把 输出文件 的 幻数 设置成 \c
.B OMAGIC\c
\&. 如果 没有 指定 这个选项, linker 生成 绝对定位 的 文件.
连接 C++ 程序时, 这个选项 \c
.I 不会 \c
\& 解析 出 对 构造子(constructor) 的 引用(reference); 不妨 改用 \c
.B \-Ur\c
\& 选项. 
这个选项 的 效果 和 \c
.B \-i\c
\& 一样.
.TP
.B \-rpath\ \fIdirectory
增加 一条 对 运行时(runtime)库 的 搜索路径. 这个选项 用于 连接 ELF 可执行
文件 和 共享目标库. 所有
.B \-rpath
选项 的 参数 被 合并, 然后 一起 传递 给 运行时 linker, 运行时 linker 在
运行 的 时候 使用 这些 路径 寻找 共享目标库.
.B \-rpath
也可以 用来 定位 共享目标库 引用的 共享目标库; 参见 对
.B \-rpath\-link
选项 的 叙述.  如果 连接 ELF 可执行文件 时 没有 指定
.B \-rpath
选项, linker 就使用 环境变量
.B LD_RUN_PATH
的 内容 \(em\& 只要 这个 环境变量 存在.
.B \-rpath
选项 能够 用在 SunOS 上, 缺省状况下, linker 可以 根据 给出的
.B \-L
选项 形成 运行时 搜索路径.  如果 使用了
.B \-rpath
选项, 运行时 搜索路径 从
.B \-rpath
中 产生, 而 忽略
.B \-L
选项.  这一点 有利于 使用 gcc, 在 NFS 文件系统 上, gcc 可能 产生 许多
.B \-L
选项.
.TP
.B \-rpath\-link\ \fIdirectory
使用 ELF 或 SunOS 的 时候, 某些 共享库 可能 需要 其他 共享库. 
这种情况 一般 发生在 某个
.B ld\ \-shared
连接 中, 输入文件 包含了 共享库.
如果 linker 遇到 这样的 依赖情况, 当 它 执行 非共享, 不可重定位 的 连接
时, linker 将 自动 寻找 所需的 共享库, 如果 它们 没有 被 显明 包含, 就
把 它们 包含到 连接 中. 在 这种情况下,
.B \-rpath\-link
选项 指定了 最先 搜索 的 目录集.
.B \-rpath\-link
能够 指定 一批 目录, 目录 用 冒号 隔开. 也可以 用 这些 目录名 作为 参数,
重复 使用 这个 选项.
如果 没有 找到 需要的 共享库, linker 产生 一个 警告, 但是 继续 连接.
.TP
.B \-S 
去掉 输出文件 中的 调试符号信息 (但不是 所有符号).
.TP
.B \-s 
去掉 输出文件 中的 全部 符号信息.
.TP
.B \-shared
创建 一个 共享库. 目前 只支持 ELF 和 SunOS 平台 (在 SunOS 上, 这个选项 不是
必须的, 如果 没有 使用
.B \-e
选项, 而且 存在 不确定 的 符号, linker 将 自动 创建 共享库).
.TP
.B \-sort\-common
.B ld
通常 把 全局公共符号 放到 适当的 输出节, 按照 大小 排序.
首先是 单字节符号, 然后是 双字节, 接下来是 四字节, 随后是 其他的.
它的 目的是 防止 符号间 因为 排布限制 出现 间隙. 
使用 这个选项 可以 禁止 排序.
.TP
.B \-split\-by\-reloc\ \fIcount
在 输出文件 中 创建 附加节(extra section), 使得 输出文件 中, 
没有 某一个 输出节 包含 大于
.I count
个 重定位项. 它 用于 产生 大型 可重定位 COFF 目标文件, 可以 插入到
某些 实时内核 中; 因为 COFF 不能 在 单一节内 存放 65535 以上的 重定位项.
注意, 有些 目标文件格式 不支持 任意 分节, 此时 这个选项 将会 操作 失败.
此外, linker 不能够 分割 输入节, 然后 重新分配, 因此 如果 某个 输入节 包含
.I count
以上的 重定位项, 相应的 输出节 将 包含 同样多的 重定位项.
.TP
.B \-split\-by\-file
类似于
.B \-split\-by\-reloc ,
但是 它为 每个 输入文件 建立一个 新的 输出节.
.TP
.BI "\-Tbss " "org"\c
.TP
.BI "\-Tdata " "org"\c
.TP
.BI "\-Ttext " "org"\c
把 \c
.I org\c
\& 作为 输出文件 的 段 起始地址 \(em\& 特别是 \(em\& \c
.B bss\c
\&, \c
.B data\c
\&, 或 \c
.B text\c
\& 段.
\c
.I org\c
\& 必须是 十六进制整数.
.TP
.BI "\-T " "commandfile"
等同于 \c
.B \-c \c
.I commandfile\c
\&\c
\&; 用于 兼容 其他工具.  
.TP
.B \-t 
在 \c
.B ld\c
\& 处理 输入文件 的 时候 显示 文件名.
.TP
.BI "\-u " "sym"
把 \c
.I sym\c
\& 作为 未定义(undefined) 的 符号 送入 输出文件.
这样做 可以, 例如, 促使 linker 从 标准库 连接 某个 附加的模块. 
允许 使用 多个 \c
.B \-u\c
\& 选项 输入 多个 未定义 符号.
.TP
.B \-Ur 
对于 除 C++ 以外的 任何 程序, 这个选项 等同于
\c
.B \-r\c
\&: 生成 可重定位 的 输出 \(em\& 就是说, 能够 依次 输入 \c
.B ld\c
\& 的 输出文件. 连接 C++ 程序 的 时候, \c
.B \-Ur
.I 将\c
\& 解析 对 构造子(constructor) 的 引用(reference), 这一点 和 \c
.B \-r\c
\& 不同.
.TP
.B \-\-verbose
显示 \c
.B ld
的 版本号, 列出 支持的 模拟项(emulation). 显示 哪些 输入文件 能够 打开, 
哪些 不能,
.TP
.B \-v, \-V
显示 \c
.B ld\c
\& 的 版本号.
此外
.B \-V
选项 能够 列出 支持的 模拟项.
.TP
.B \-\-version
显示 \c
.B ld
的 版本号 然后 结束.
.TP
.B \-warn\-common
当 公共符号 和 其他 公共符号 合并 时, 或者 和 某个 符号定义 合并 时,
linker 就发出 警告. Unix 系统的 linker 允许 这种 有些 草率 的 做法, 其他
操作系统 则 不行. 这个选项 帮助你 在 合并 全局符号 的 时候 发现 潜在问题.
.TP
.B \-warn\-constructors
如果 使用了 全局构造子(global constructor), linker 就发出 警告.
它 只对 某些 目标文件结构 有用, 对于 如 COFF 或 ELF, 此 linker 不能够
检测 全局构造子 的 使用情况.
.TP
.B \-warn\-multiple\-gp
如果 输出文件 需要 多个 全局指针值, linker 就发出 警告. 这个选项 只能
用于 某些 处理器, 如 Alpha.
.TP
.B \-warn\-once
对 每个 未定义符号 只 警告 一次, 而不是 每次 引用 这个符号 都 警告.
.TP
.B \-warn\-section\-align
如果 某个 输出节(section) 的 地址 因为 边界对齐 而 发生 改变,
linker 就发出 警告. 典型情况下 由 输入节 设置 边界, 只有 不做 明确指定
的 时候 地址 才会 改变; 就是说, SECTIONS 命令 没有 指出 该节 的 开始地址.
.TP
.B \-\-whole\-archive
对于 命令行 上
.B \-\-whole\-archive
选项 提到的 每个 归档库, 连接时 连入 归档库 的 全部 目标文件, 而不是
在 归档库 中 搜索 所需的 目标文件. 一般用于 把 归档库文件 转变成 共享库文件,
迫使 全部 目标文件 进入 共享库.
.TP
.B \-\-no\-whole\-archive
关闭
.B \-\-whole\-archive
选项 对 归档库 的 影响.
.TP
.BI "--wrap " "symbol"
对
.I symbol
使用 包装函数(wrapper function). 任何 对
.I symbol
未定义 的 引用 (undefined reference) 将 解析为
.BI "__wrap_" "symbol".
任何 对
.BI "__real_" "symbol"
未定义 的 引用 将 解析为
.I symbol.
.TP
.B \-X 
删除 全部 临时的 局部符号. 大多数 目的文件 中, 这些 局部符号 的 名字 用 `\|\c
.B L\c
\|' 做 开头.
.TP
.B \-x
删除 全部 局部符号.
.PP
.SH "环境 (ENVIRONMENT)"
\c
通过 环境变量 \c
.B GNUTARGET\c
\& 可以 改变 
.B ld\c
\& 的 行为.
\c
如果 没有 使用 \c
.B \-b\c
\& 选项 (或 相同的 \c
.B \-format\c
\&),
.B GNUTARGET\c
\& 决定了 输入文件 的 目标格式, 其值 应为 BFD的 名称之一.  如果 没有 \c
.B GNUTARGET \c
\& 环境变量, \c
.B ld\c
\& 就使用 主机的 本地格式. 如果 \c
.B GNUTARGET\c
\& 设置为 \c
.B default\c
\&, BFD 通过 检查 输入文件 的 二进制格式 判断 输入格式;
这个方法 通常 有效, 但 隐含 歧义, 这是因为 没有 办法 保证 标志 目标文件格式
的 幻数 是 唯一的.
不过, 各个系统 配置 BFD 的 时候, 会把 系统 约定的格式 放在 搜索列表 的
前面, 因此 能够 按照 约定 消除 歧义.
.PP
.SH "另见 (SEE ALSO)"
.BR objdump ( 1 )
.br
.RB "`\|" ld "\|' 和 `\|" binutils "\|'"
项 (
.B info\c
)
.br
.I 
ld: the GNU linker\c
, Steve Chamberlain and Roland Pesch;
.I
The GNU Binary Utilities\c
, Roland H. Pesch.
.SH COPYING
Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
.SH "[中文版维护人]"
.B 徐明 
.SH "[中文版最新更新]"
.BR 2003/05/13
第一版
.SH "《中国Linux论坛man手册页翻译计划》"
.BI http://cmpp.linuxforum.net