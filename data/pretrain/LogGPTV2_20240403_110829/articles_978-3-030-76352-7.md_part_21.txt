addedtoS tandtheprocessterminateswhen|S t|=0,i.e.,whennonodesfurther
nodesareactivated.TheinfluenceoftheseedsetS isthentheexpectednumber
0
of activated nodes when applying the above stochastic activation procedure.
Therearenumerousalgorithmsavailabletosolvetheinfluencemaximization
problem [12]. In our scenario, each graph GPI is relatively small and the actual
i
algorithm is thus less important. We directly select the Influence Ranking Influ-
ence Estimation algorithm (IRIE) [8] for this task. IRIE estimates the influence
r(u)foreachnodeubyderivingasystemofnlinearequationswithnvariables.
The influence of a node u comprises of its own influence, 1, and the sum of the
influences it propagates to its neighbors.
6 Evaluation
In this section, we present the experimental setup and evaluation results. We
performtwomainexperiments,onetoverifythecorrectnessofourcausalgraph
and a second experiment to evaluate the root cause identification accuracy. The
first experiment is performed on both synthetic and real-world data, while the
second is completed on the real-world dataset. The datasets and code are avail-
able at https://github.com/shaido987/alarm-rca.
Synthetic Data Generation. The synthetic event sequences are generated in
four steps. (1) We randomly generate a DAG G with an average out-degree d
with N event types. We set d to 1.5 to emulate the sparsity property of our
real-world dataset. (2) For each edge (u,v), a weight α uv is assigned by uniform
random sampling from a range r ∈ [(0.01,0.05),(0.05,0.1),(0.1,0.5),(0.5,1.0)].
132 K. Zhang et al.
(3) For each event type u∈U, we assign a background intensity μ u by uniform
random sampling from (0.001,0.005). (4) Following Ogata [17], we use α uv and
μ u as parameters of a Multi-dimensional Hawkes process and simulate event
sequences. We generate event sequences of length T = 14 days while ensuring
that the total number of events is greater than 10,000.
Real-World Dataset. The dataset was collected from a major cellular carrier
in a moderate-sized city in China between Aug 4th, 2018 and Oct 24th, 2018.
Afterpreprocessing,itconsistsof672,639alarmrecordsfrom3,818deviceswith
78differentalarmtypes.Duetothedifficultyoflabelingcausalrelations,weonly
havetheground-truthcausalrelationsforasubsetof15alarmtypes,44directed
edges in the graph. Furthermore, we have also obtained the ground-truth root
causealarms ina random sampleof 6,000 alarm transactions. Theseareusedto
evaluate the root cause localization accuracy.
6.1 Causal Graph Structure Correctness
We evaluate our proposed HPCI method and the accuracy of the discovered
causalgraphs.Weusefour frequentlyusedcausalinferencemethods forsequen-
tial data as baselines.
– PC-GS: PC algorithm with G-square CI test.
– PC-FZ: PC algorithm with Fisher-Z CI test.
– PCTS: Improved PC algorithm for causal discovery in time series [14].
– HPADM4: Multi-dimensional Hawkes process with exponential parameteri-
zation of the kernels and a mix of L1 and nuclear-norm [25].
The significance level p in the conditional independence tests included in the
methods are all set to 0.05. The size of time window w for aggregating event
sequences is set to 300s, the maximum lag τ max = 2 in PCTS, and the penal-
ization level in HPADM4 is set to the default 1,000. Furthermore, the decay
parameter β in Hawkes process is set to 0.1, and we select Fisher-Z as the CI
test in our HPCI algorithm. For evaluation, we define three metrics as follows.
|P ∩S| |P ∩S| Precision·Recall
Precision= , Recall= , F1-score=2· ,
|P| |S| Precision+Recall
where P is the set of all directed edges in the learned causal graph GC and S is
the set of ground-truth edges.
Results. The F1-scores using synthetic data with N ∈ [10,15,20] are shown
in Table1. As shown, HPCI outperforms the baselines for nearly all settings of
N and α. However, HPADM4 obtains the best result for N = 10 and low α,
this is due to the distribution of event occurrence intervals being sparse which
makesthecausaldependencystraightforwardtocaptureusingaHawkesprocess.
However, for higher N or α the events will be denser. Thus, Hawkes process has
trouble distinguishing instantaneous causal relations, especially when events co-
occur. The use of CI tests in HPCI helps to distinguish these instantaneous
Root Cause Alarm Discovery in Telecom Networks 133
Table 1.F1-scoresonthesyntheticdatasetfordifferentnumberofeventtypesandα.
α N PS-GS PS-FZ PCTS HPADM4 HPCI
(0.01,0.05) 10 0.286 0.174 0.283 0.566 0.200
20 0.133 0.321 0.156 0.306 0.604
30 0.216 0.267 0.104 0.229 0.357
(0.05,0.1) 10 0.500 0.529 0.283 0.500 0.867
20 0.367 0.585 0.155 0.323 0.806
30 0.265 0.484 0.227 0.227 0.756
(0.1,0.5) 10 0.467 0.811 0.278 0.517 0.933
20 0.621 0.889 0.151 0.306 0.984
30 0.495 0.845 0.103 0.227 0.967
(0.5,1.0) 10 0.800 0.722 0.272 0.517 0.929
20 0.708 0.906 0.151 0.302 0.983
30 0.433 0.845 0.103 0.227 0.967
Table 2. Results of the causal graph structure evaluation on the real-world dataset.
Method Precision Recall F1-score
PC-GS 0.250 0.159 0.194
PC-FZ 0.452 0.432 0.442
PCTS 0.220 0.864 0.350
HPADM4 0.491 0.614 0.545
HPCI 0.634 0.591 0.612
causal relations by taking another perspective in which causality is discovered
based on distribution changes in the aggregated data without considering the
time-lagged information among events. HPCI thus achieves better results. The
use of time aggregation is disadvantageous for PCTS due to its focus on time
series, which can partly explain its comparatively worse results.
The results on the real-world data are shown in Table2. HPCI performs sig-
nificantlybetterthanallbaselinesinprecisionandF1-score,whilePTCSobtains
the highest recall. PTCS also has significantly lower precision, indicating more
falsepositives.PCTSisdesignedfortimeseries,however,thosemaybeperiodic,
whichcangivehigherlagged-correlationvaluesleadingtomoreredundantedges.
HPCI instead finds a good balance between precision and recall. The competi-
tive result indicates that the causality behind the real alarm data conforms to
the assumptions of HPCI to a certain extent.
6.2 Root Cause Alarm Identification
WeevaluatetheeffectivenessofCPBEandtherootcausealarmaccuracyonthe
real-world dataset. We use the causal graph structure created by HPCI as the
134 K. Zhang et al.
Table3.Rootcausealarmidentificationaccuracyusingdifferentedgeweightinference
strategies together with IRIE for alarm ranking at different K.
Method K=1 K=2 K=3 K=4 K=5
IT 0.576 0.590 0.672 0.810 0.900
Pearson 0.407 0.435 0.456 0.486 0.486
CP 0.474 0.640 0.730 0.790 0.840
ST 0.439 0.642 0.750 0.785 0.814
CPBE 0.618 0.752 0.851 0.929 0.961
base and augment it with the 44 known causal ground-truths. The causal graph
is thus as accurate as possible. CPBE is compared with four baseline methods,
all used for determining edge weights.
– IT, directly use the weighted causal graph discovered by HPCI with the
learned influence intensities as edge weights.
– Pearson, uses the aligned Pearson correlation of each alarm pair [16].
– C timP, esth ue aw ne dig vht cs o-o of cca un re id ng ae w(u in,v d) owis ase nt dt Ao uA A iu suv thw eh te or te aA nu uv mis beth re ofn uum alb ae rr mo sf
, l .
– ST,astaticmodelwithmaximizationlikelihoodestimator[5].Itissimilarto
CP, but A uv represents the number of times u occurs before v.
For each method, IRIE is used to find the top-K most likely root cause alarms
in each of the 6,000 labeled alarm transactions. For IRIE, we use the default
parameters. We attempt to use RandomWalk, BFS, and DFS for traversal in
CPBE, as well as different Skip-gram configurations with w ∈ [1,5] and vector
length L ∈ [10,30]. However, there is no significant difference in the outcome,
indicating that CPBE is insensitive to these parameter choices on our data.
The results for different K when using RandomWalk are shown in Table3. As
shown, CPBE outperforms the baselines for all K. For K = 1, CPBE achieves
an accuracy of 61.8% which, considering that no expert knowledge is integrated
intothesystem,isanexcellentoutcome.Moreover,therunningtimeofCPBEis
around 10s and IRIE takes 325s for all 6,000 alarm transactions. This is clearly
fast enough for system deployment.
7 Conclusion
We present a framework to identify root cause alarms of network faults in
large telecom networks without relying on any expert knowledge. We output
a clear ranking of the most crucial alarms to assist in locating network faults.
To this end, we propose a causal inference method (HPCI) and a novel network
embedding-based algorithm (CPBE) for inferring network weights. Combining
the two methods, we construct an alarm influence graph from historical alarm
data. The learned graph is then applied to identify root cause alarms through
Root Cause Alarm Discovery in Telecom Networks 135
a flexible ranking method based on influence maximization. We verify the cor-
rectness of the learned graph using known causal relation and show a signifi-
cant improvement over the best baseline on both synthetic and real-world data.
Moreover, we demonstrate that our proposed framework beat the baselines in
identifying root cause alarms.
References
1. Abele, L., Anic, M., et al.: Combining knowledge modeling and machine learning
for alarm root cause analysis. IFAC Proc. Volumes 46(9), 1843–1848 (2013)
2. Bahl, P., Chandra, R., et al.: Towards highly reliable enterprise network services
via inference of multi-level dependencies. In: ACM SIGCOMM Computer Com-
munication Review, vol. 37, pp. 13–24. ACM (2007)
3. Chen,P.,Qi,Y.,etal.:Causeinfer:automaticanddistributedperformancediagno-
sis with hierarchical causality graph in large distributed systems. In: INFOCOM,
2014 Proceedings IEEE, pp. 1887–1895. IEEE (2014)
4. Ge, Z., Yates, J., et al.: GRCA: a generic root cause analysis platform for service
qualitymanagementinlargeISPnetworks.In:ACMACMConferenceonEmerging
Networking Experiments and Technologies (2010)
5. Goyal, A., Bonchi, F., et al.: Learning influence probabilities in social networks.
In: Proceedings of the third ACM International Conference on Web Search and
Data Mining, pp. 241–250. ACM (2010)
6. Grover,A.,Leskovec,J.:node2vec:scalablefeaturelearningfornetworks.In:Pro-
ceedings of the 22nd ACM SIGKDD International Conference on Knowledge Dis-
covery and Data Mining, pp. 855–864. ACM (2016)
7. Hawkes,A.G.:Spectraofsomeself-excitingandmutuallyexcitingpointprocesses.
Biometrika 58(1), 83–90 (1971)
8. Jung,K.,Heo,W.,etal.:IRIE:scalableandrobustinfluencemaximizationinsocial
networks. In: 2012 IEEE 12th International Conference on Data Mining (ICDM),
pp. 918–923. IEEE (2012)
9. Kalisch, M., Bu¨hlmann, P.: Estimating high-dimensional directed acyclic graphs
with the PC-algorithm. J. Mach. Learn. Res. 8, 613–636 (2007)
10. Kempe,D.,Kleinberg,J.,etal.:Maximizingthespreadofinfluencethroughasocial
network.In:ProceedingsoftheNinthACMSIGKDDInternationalConferenceon
Knowledge Discovery and Data Mining, pp. 137–146. ACM (2003)
11. Kobayashi, S., Otomo, K., et al.: Mining causality of network events in log data.
IEEE Trans. Netw. Serv. Manag. 15(1), 53–67 (2018)
12. Li, Y., Fan, J., et al.: Influence maximization on social graphs: a survey. IEEE
Trans. Knowl. Data Eng. 30(10), 1852–1872 (2018)
13. Lou, J.G., Fu, Q., et al.: Mining dependency in distributed systems through
unstructured logs analysis. SIGOPS Oper. Syst. Rev. 44(1), 91–96 (2010)
14. Meng, Y., et al.: Localizing failure root causes in a microservice through causal-
ity inference. In: 2020 IEEE/ACM 28th International Symposium on Quality of
Service (IWQoS), pp. 1–10. IEEE (2020)
15. Mikolov,T.,Sutskever,I.,etal.:Distributedrepresentationsofwordsandphrases
and their compositionality. In: Advances in Neural Information Processing Sys-
tems, pp. 3111–3119 (2013)
16. Nie, X., Zhao, Y., et al.: Mining causality graph for automatic web-based service
diagnosis.In:2016IEEE35thInternationalPerformanceComputingandCommu-
nications Conference (IPCCC), pp. 1–8 (2016)
136 K. Zhang et al.
17. Ogata, Y.: On lewis’ simulation method for point processes. IEEE Trans. Inf.
Theory 27(1), 23–31 (1981)
18. Peters, J., Mooij, J.M., et al.: Causal discovery with continuous additive noise
models. J. Mach. Learn. Res. 15(1), 2009–2053 (2014)
19. Spirtes, P., Glymour, C.: An algorithm for fast recovery of sparse causal graphs.
Soc. Sci. Comput. Rev. 9(1), 62–72 (1991)
20. Spirtes, P., Glymour, C.N., et al.: Causation, Prediction, and Search. MIT Press,
Cambridge (2000)
21. Su, C., Hailong, Z., et al.: Association mining analysis of alarm root-causes in
power system with topological constraints. In: Proceedings of the 2017 Interna-
tional Conference on Information Technology, pp. 461–468. ACM (2017)
22. Veen,A.,Schoenberg,F.P.:Estimationofspace-timebranchingprocessmodelsin
seismology using an EM-type algorithm. J. Am. Stat. Assoc. 103(482), 614–624
(2008)
23. Wang, P., Xu, J., et al.: Cloudranger: root cause identification for cloud native
systems. In: 2018 18th IEEE/ACM International Symposium on Cluster, Cloud
and Grid Computing (CCGRID), pp. 492–502. IEEE (2018)
24. Zhang, X., Bai, Y., et al.: Network alarm flood pattern mining algorithm based
on multi-dimensional association. In: Proceedings of the 21st ACM International
ConferenceonModeling,AnalysisandSimulationofWirelessandMobileSystems,
pp. 71–78. ACM (2018)
25. Zhou, K., Zha, H., et al.: Learning social infectivity in sparse low-rank networks
usingmulti-dimensionalhawkesprocesses.In:ArtificialIntelligenceandStatistics,
pp. 641–649 (2013)
Localization of Operational Faults
in Cloud Applications by Mining Causal
Dependencies in Logs Using
Golden Signals
B B B B
Pooja Aggarwal( ), Ajay Gupta( ), Prateeti Mohapatra( ), Seema Nagar( ),
B B B
Atri Mandal( ), Qing Wang( ), and Amit Paradkar( )
IBM Research AI, New Delhi, India
{aggarwal.pooja,ajaygupta,pramoh01,senagar3,atri.mandal}@in.ibm.com
PI:EMAIL, PI:EMAIL
Abstract. Cloud based microservice architecture has become a power-
ful mechanismin helpingorganizationsto scaleoperations byaccelerat-
ing the pace of change at minimal cost. With cloud based applications
being accessed from diverse geographies, there is a need for round-the-
clock monitoring of faults to prevent or to limit the impact of outages.
Pinpointingsource(s)offaultsincloudapplicationsisachallengingprob-
lemduetocomplexinterdependenciesbetweenapplications,middleware,
and hardware infrastructure all of which may be subject to frequent
and dynamic updates. In this paper, we propose a light-weight fault
localization technique, which can reduce human effort and dependency
on domain knowledge for localizing observable operational faults. We
model multivariate error-rate time series using minimal runtime logs to
infercausalrelationshipamongthegoldensignalerrors(errorrates)and
micro-serviceerrorstodiscoverrankedlistofpossiblefaultycomponents.
Our experimental results show that our system can localize operational
faultswithhighaccuracy(F1=88.4%)underscoringtheeffectivenessof
using golden signal error rates in fault localization.
· · ·
Keywords: Hybridcloud Faultlocalization Goldensignals Causal
·
modeling PageRank
1 Introduction
Run time failures in running software systems are unavoidable. Recovering sys-
tems from such failures is an important aspect of incident management process
in IT Operations. In order to identify the mitigating actions that will lead to
system recovery, the failure needs to be triaged to a faulty system component
(along with the reason for component failure). This triaging process, known as