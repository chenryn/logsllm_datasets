# Good Viruses: Evaluating the Risks

**Dr. Igor Muttik | Senior Architect | McAfee | Avert Labs®**

## 1. Introduction to Good Viruses
- **Technology Neutrality**: Technology itself is neither inherently good nor bad.
- **Potential Dangers**:
  - Lack of control
  - Wide availability
- **Dangerous Implications**:
  - If a technology is dangerous, it is generally considered bad.
  - Examples:
    - Atomic bomb (bad)
    - Splitting the atom (neutral, but with potential for misuse)
    - Chain reaction (worst due to loss of control)

- **Questions**:
  - Can a virus be created accidentally?
  - Can a good virus get out of control?

## 2. Agenda
- **Recurring Idea of "Good Virus"**
- **Case Studies**:
  - ALREADY.71: A tool and a virus
  - "Corrupted Blood" epidemic in World of Warcraft (WoW)
  - W32/Nachi: A worm that exploited and patched a vulnerability
- **Pros and Cons of Harnessing Replicating Code**
- **Conclusions**

## 3. Public Perception
- **Google Search Trends**:
  - People are receptive to the idea of a "good virus."
  - Searches for "bad virus" often include emotional terms like "horrible" and "awful."

## 4. Case Study: ALREADY.71
- **Overview**:
  - ALREADY.71 is both a tool and a worm, consisting of just 71 bytes (0x47).
- **Functionality**:
  - Gets the current date
  - Compares dates
  - Writes itself to disk
- **Spread Mechanism**:
  - Due to the "current folder" concept.

- **Usage Example**:
  ```batch
  @echo off
  rem Start of AUTOEXEC.BAT file
  rem Opening commands always execute
  ALREADY.COM
  IF ERRORLEVEL 1 GOTO skip
  rem Things to do once a day go here
  :skip
  rem Following commands always execute
  ```

- **Lessons Learned**:
  - The probability of mistakes increases with insecure programming techniques:
    - Self-modifying code
    - Modifying other programs on disk or in memory
    - Using exploits
  - Insecure environments are more common than expected.

## 5. Case Study: "Corrupted Blood" Incident in WoW
- **Background**:
  - Zul’Gurub instance dungeon (added in WoW 1.7 for level 60+ players)
  - Hakkar the Soulflayer casts the "Corrupted Blood" spell, which is infectious.
- **Timeline**:
  - WoW 1.7 released on September 13, 2005
  - Epidemics started on several servers on September 15, 2005
- **Spell Parameters**:
  - Damage: 200 HP (level 60+ players have 4000-5000 HP)
  - Duration: 10 seconds (every 2 seconds)
  - Radius: 100 yards (100% infectious probability)
  - By design, it should be limited in time and space
  - Spread from player to player, including NPCs and pets
  - Could be "conserved" in an un-summoned pet (design oversight)

- **Impact**:
  - Infected Ironforge city
  - Corpses and dead characters everywhere
  - Game was effectively unplayable for many days, causing significant user frustration.

- **Reaction**:
  - Official patch preparation
  - Many players excited about the "first proper world event"
  - Fixes:
    - Patch 1.8 (October 10, 2005): Fixed a bug allowing Hakkar's Corrupted Blood to target pets.
    - Patch 1.9.3 (February 7, 2006): Corrupted Blood now deals direct damage with a following damage over time effect and no longer spreads to others in the raid.

- **Lessons Learned**:
  - Replication can quickly go out of control (similar to the Chernobyl incident)
  - Predicting all possible scenarios in complex environments is challenging.

## 6. Case Study: W32/Nachi
- **Overview**:
  - Released on August 18, 2003
  - Followed W32/MSBlaster (August 11, 2003)
  - Contains code to download and run Microsoft’s patch for MS03-026 RpcDcom vulnerability
  - Overloaded many networks
  - Time-limited (removes itself in 2004)
  - Approximately 30,000 IPs had W32/Nachi at the time of its "suicide."

- **Lessons Learned**:
  - Beneficial worms can contain bugs
  - W32/Nachi lacked control in two areas:
    - Network load
    - Did not die as quickly as expected
  - The internet is a very complex environment.

## 7. Pros and Cons of Harnessing Replicating Code
- **Arguments For**:
  - Compress/encrypt files/disks
  - "Maintenance" worm
  - Quicker (and forceful) patching
  - Remove bad worms
  - Better administration through computers’ discovery
  - Support human rights (e.g., censorship in China)

- **Patching Using Replication**:
  - Very quick (Warhol and flash worms)
  - Patching needs to outrun worm propagation
  - Should a replicating patch be released? No, because:
    - Technically risky
    - Insufficient time for proper QA
    - Legal challenges

## 8. Conclusions
- **Replicative Property**:
  - Dangerous technology
  - Available to everyone
  - Hard to control (e.g., WoW, Nachi)
- **Useful Virus Creation**:
  - Possible, but dangerous
  - More dangerous than expected
- **Infections and Viral Properties**:
  - Not a good idea to experiment with them.

## 9. Key References
- **ALREADY.71**:
  - [Link](http://home.flash.net/~hoselton/pubs/mah_010.txt)
- **World of Warcraft**:
  - [Link](http://www.wowwiki.com/Corrupted_Blood)
  - [Link](http://www.securityfocus.com/news/11330)
  - [Link](http://www.worldofwarcraft.com/patchnotes/patch1p7.html)
  - [Link](http://events.ccc.de/congress/2007/Fahrplan/events/2322.en.html)
- **W32/Nachi**:
  - [Link](http://vil.nai.com/vil/content/v_100559.htm)
  - P. Szor, "Virus Research and Defense," Symantec Press, ISBN 0-321-30454-3
- **Bad Viruses**:
  - [Link](http://www.people.frisk-software.com/~bontchev/papers/goodvir.html) (by V. Bontchev)
  - [Link](http://www.avertlabs.com/research/blog/index.php/2008/02/18/friendly-worms-facing-frien) (and see a comment by V. Bontchev to this blog)
- **Good Viruses**:
  - [Link](http://pages.cpsc.ucalgary.ca/~aycock/papers/china.pdf)

## 10. Questions
- Please email any questions to: [PI:EMAIL]