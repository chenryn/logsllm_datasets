2Br  
1Dr  
2Dr
3Dr
(b) On-demand Path Discovery
Cross Links 
Path Discovery Messages 
1Cr  
2Cr  
3Cr  
Cross Links 
Path Discovery Requests 
1Cr  
2Cr  
3Cr  
Figure 5: Examples of proactive and on-demand path discovery
target domain, a path request message is generated by the
home domain and is sent on its outgoing cross links. Upon
receiving the path request message, the receiving domain
performs a path evaluation based on the basic path link-
ing rules. If the path is accepted, the domain updates the
path and resends the request through its cross link exclud-
ing the cross links that involve domains already included in
the path. This ensures that the path is loop free and re-
duces the number of resent requests. Figure 5(b) shows an
example of a on-demand path discovery initiated by domain
A to determine roles reachable at domain D from role rA3 .
The solid arrows show the path discovery messages; note
that domains B does not forward the request on the cross
link (rB2 , rA1 ) as domain A is in the computed path. Also,
note that domain D does not forward the request on the
cross link (rD3 , rB2 ) as domain B is in the computed path.
Figure 6 shows the algorithm executed when a domain j
receives a path request from a neighboring domain.
After sending the path request the home domain waits for
a timeout period of Tmax. If no reply arrives from the target
domain then this means there are no secure paths from home
domain to the target domain. The value of Tmax is assigned
based on the number of collaborating domains. The path
authenticity is ensured by using the path signature scheme
discussed in Section 6 as the path request message takes the
path taken by the actual access request.
The major advantage of on-demand path discovery is that
it saves network bandwidth because it limits the amount of
bandwidth consumed in the exchange of path discovery in-
formation by maintaining paths to only those target domains
to which the domains need to collaborate with. The home
domain could include constraints on the requested path, to
further reduce the path discovery traﬃc. For example, the
request could include a list of domains that should or should
not be included in the path discovery. On-demand path dis-
covery also obviates the need for disseminating path discov-
ery information periodically, or ﬂooding such information
whenever a cross link changes or when a domain leaves or
joins the collaboration environment. The primary problem
with on-demand path discovery is the large latency at the
beginning of the collaboration caused by propagation of the
path request message.
7.3 Path Selection
Both path discovery algorithms could return multiple se-
cure paths between the home and target domains. The home
domain, selects one path according to a selection criteria.
The selection criteria is based on the path properties which
include:
• Path length: The path having the shortest length in
terms of the number of visited domains is selected.
• Visited domains: Select the path that contains a
certain set of domains or visits domains according to
a certain sequence.
• Composite domain reputation: Domains could be
given reputation metrics and the path reputation is
computed using the domains included in the path, and
the path having the highest reputation be selected.
8. SECURITY ANALYSIS
In this section we discuss some security attacks that could
be performed in a mediator-free collaboration environment.
Moreover, we show that our secure framework is resilient to
these attacks.
• Path Corruption. The access path is one of the
main elements required when making access control
decisions. A malicious domain may attempt to alter
the access path by removing or adding entries to the
64Input : Request = (Target Domain T , Path P , Path Signature S.P ) arriving to domain j
from domain i via cross link (rX
Algorithm :
i , rE
j ).
1. Check Path signature S.P , if invalid drop request, End.
2. Check the Path linking rules on P and link (rX
i , rE
j ), if insecure path then drop
request, End.
3. If |P | > P max then drop request, End.
4. If domain j is equal to the target domain T
(a) Update path Pnew = P ◦ rE
(b) Generate path signature S.Pnew = SIGNej (S.P ⊕ h(rE
(c) Send Path Request Reply =(Pnew, S.Pnew) to Home domain in P
j )).
j .
5. For all cross links L = (rX
j , rE
k ) ∈ F O
j and (rE
j , rX
j ) ∝ Aj and domain k 6∈ D.P ,
(a) Update path Pnew = P ◦ rE
(b) Generate path signature S.Pnew.
(c) Send Request = (Target Domain T , Pnew, S.Pnew) to domain k.
j ◦ rX
j .
6. End.
Figure 6: Algorithm executed by domain j upon receiving a path request.
1 , rX
1 , rX
i , rX
k , rX
1 , . . . , rE
The path insertion attack is performed by an attacker
in an attempt to insert a domain in the path. Given
Pi = {rE
i }, the attacker attempts to
change it by inserting roles rE
y in the path string,
k , rE
y , rE
k+1, . . . , rE
i
, rX
i }. Figure 7(b) shows such an attack. The attacker
is unable to generate the signature of the new path
y , rX
y , rX
1 , . . . , rE
k+1, rX
current access path. The path corruption could be di-
vided into two types of attacks, namely path insertion
and deletion.
ePi = { rE
gS.Pi as this requires the generation of new signatures
gS.Pj, k ≤ j ≤ i and this requires the knowledge of the
ePi = {rE
gS.Pi
gS.Pj,
The path deletion attack is performed by an attacker
in an attempt to delete a domain in the path. Given
Pi = {rE
i } the attacker attempts to
change it by deleting roles rE
k in the path string,
k+1, rX
i }.
Figure 7(c) shows such an attack. The attacker is un-
able to generate the signature of the new path
as this requires the generation of new signatures
j ∈ {k − 1, k + 1, . . . , i}, which requires the knowledge
of the corresponding secret keys. This shows that this
path cannot be authenticated by the attacker.
secret keys ej, for k ≤ j ≤ i. This shows that this
path cannot be authenticated by the attacker.
k , rX
k−1, rE
k+1, . . . , rE
1 , . . . , rE
1 , . . . , rE
k−1, rX
i , rX
i , rX
1 , rX
1 , rX
when the path linking rules are executed.
1 
2 
3 
4 
(a) Original Path P
1 
2 
3 
y 
4 
(b) Path Insertion Attack
1 
2 
3 
4 
(c) Path Deletion Attack
Figure 7: Types of path corruption attacks.
• Path Replay Attacks. An attacker could capture
a request submitted during a valid session and try to
replay such a request. This attack is not possible as
for each session a new seed is used to authenticate the
path and thus the captured request will have an old
seed.
• Denial of Service. An attacker would request a
role via a path that contains a loop P = {r1, r2, . . . ,
rn, r1, r2, . . . } and repeat such requests inﬁnitely to
increase the path size inﬁnitely. Such an attack can
be easily dealt with by introducing a bound on the
permissible path size, which is basically the path car-
dinality constraint mentioned in Section 5.1, and the
permissible path size can be set to double the number
of domains present in the collaboration.
• Violations of the Restricted Relation R. In this
attack a malicious domain involved in a restricted ac-
Note that other types of attacks such as path reorder-
ing are not possible because the attacker cannot prove
the authenticity of such path. Another type of attack
in which domains in the collaboration collude to forge
an access path, in this case two or more domains agree
to provide cross links which did not exist. However,
if these cross links only involve the colluding domains
then this cannot be an attack because both domains
agreed to provide such cross link. If the cross links in-
volve domains other than the colluding domains, then
this is easily detected from the path signature and
65cess relation does not honor such relations. In such a
case this domain gives access to a user that violates
the restricted access relation R. This attack is eas-
ily detected by the neighboring domain, as such role
access will be recorded in the user’s access path. Fur-
thermore, violating the restricted access relation will
only directly aﬀect the security of the malicious do-
main. Thus domains that do not abide by the path
linking rules cause security violations to their own se-
curity policies.
9. RELATED WORK
The problem of secure interoperation in a multi-domain
environment has been addressed in [11, 4]. In particular, Li
Gong et al. [11] characterized the properties that must be
satisﬁed to compose a global secure policy. They proposed
the maximal secure interoperability problem and determined
its complexity to be NP-Complete. In all such approaches
a trusted third party that has a global view of the collabo-
ration environment is required to perform the secure policy
composition and integration.
Dawson et al. [7] presented a mediator based approach to
provide secure interoperability for heterogeneous databases.
This approach assumes a mandatory access control policy,
such as the Bell LaPadula [2] policy, which is not ﬂexible and
not applicable in many commercial applications. Further-
more, all access requests go through the central mediator
which has a global view of the collaboration environment.
This approach is thus not appropriate for a dynamic distrib-
uted environment. Other approaches related to centralized
database collaboration have been proposed in [20, 15, 24,
25]. Also these approaches have limited applicability be-
cause assume a centralized global view of the systems to be
interoperated.
10. CONCLUSIONS
In this paper, we have presented a mediator-free collabo-
ration environment in which domains collaborate in making
localized access control decisions. We presented a frame-
work to enable collaboration in such an environment where
domains collaborate securely without needing a trusted me-
diator and without needing a global view of the collaboration
environment. In our framework the user’s access path is used
to provide domains with enough information to make se-
cure access control decisions using both basic and extended
path linking rules. We also provided a path authentication
scheme that ensures that the path is not tampered with as
it propagates between domains.
Furthermore, we have provided proactive and on-demand
path discovery algorithms that enable domains to discover
available multi-hop collaborations. We also analyzed several
security attacks that could be performed and showed how
our framework can easily handle such attacks.
11. ACKNOWLEDGMENTS
The research of Mohamed Shehab and Arif Ghafoor has
been supported by the sponsors of the Center for Educa-
tion and Research in Information Assurance and Security
(CERIAS) at Purdue University, and the National Science
Foundation under NSF Grant IIS-0209111. The research by
Elisa Bertino was supported in part by the NSF under the
Project “The Design and Use of Digital Identities”, by an
IBM Fellowship, and by the sponsors of CERIAS at Purdue
University.
12. REFERENCES
[1] H. Afsarmanesh, C. Garita, and L. Hertzberger.
Virtual Enterprises and Federated Information
Sharing. In DEXA’98: Proceedings of the 9th
International Conference Database and Expert
Systems Applications, pages 374–383, Aug 1998.
[2] D. Bell and L. LaPadula. Secure Computer Systems:
Mathematical Foundations. Technical Report
MTR-2547, 1, March 1973.
[3] E. Bertino, E. Ferrari, and V. Atluri. The
Speciﬁcation and Enforcement of Authorization
Constraints in Workﬂow Management Systems. ACM
Transactions on Information and Systems Security,
2(1):65–104, Feb 1999.
[4] P. Bonatti, M. Sapino, and V. Subrahmanian.
Merging Heterogenous Security Orderings. Journal of
Computer Security, 5(1):3–29, 1997.
[5] D. Brewer and M. Nash. The Chinese Wall Security
Policy. In Proceedings of IEEE Symposium on Security
and Privacy, pages 206–214, 1989.
[6] J. Crampton. On Permissions, Inheritance and Role
Hierarchies. In CCS ’03: Proceedings of the 10th ACM
conference on Computer and communications security,
pages 85–92. ACM Press, Oct 2003.
[7] S. Dawson, S. Qian, and P. Samarati. Providing
Security and Interoperation of Heterogeneous Systems.
Distributed Parallel Databases, 8(1):119–145, 2000.
[8] A. Desai and N. Awad. Special Issue on Adaptive
Complex Enterprises. Communications of ACM,
48(5), May 2005.
[9] D. Ferraiolo, D. Kuhn, and R. Chandramouli.
Role-Based Access Control. Artech House, Apr 2003.
[10] D. Ferraiolo, R. Sandhu, S. Gavrila, D. Kuhn, and
R. Chandramouli. Proposed NIST Standard for
Role-Based Access Control. ACM Transactions on
Information and Systems Security, 4(3):224–274, Aug
2001.
[11] L. Gong and X. Qian. The Complexity and
Composability of Secure Interoperation. In Proceedings
of IEEE Symposium on Security and Privacy, pages
190–200. IEEE Computer Society, 1994.
[12] L. Gong and X. Qian. Computational Issues in Secure
Interoperation. IEEE Transaction on Software and
Engineering., 22(1), Jan 1996.
[13] Y. Hu, A. Perrig, and D. Johnson. Ariadne: A Secure
On-demand Routing Protocol for Adhoc Networks. In
MobiCom’02: Proceedings of the 8th annual
international conference on Mobile computing and
networking, pages 12–23. ACM Press, Sept 2002.
[14] D. Johnson, D. Maltz, and J. Broch. DSR: The
Dynamic Source Routing Protocol for Multihop
Wireless Adhoc Networks. Ad hoc networking, pages
139–172, 2001.
[15] D. Jonscher and K. Dittrich. An Approach for
Building Secure Database Federations. In VLDB’94:
Proceedings of the 20th International Conference on
Very Large Data Bases, pages 24–35, Santiago de
Chile, Chile, Sept 1994. Morgan Kaufmann.
66[16] N. Li, Z. Bizri, and M. Tripunitara. On Mutually
[21] R. Ramnath and D. Landsbergen. IT-Enabled
Exclusive Roles and Separation of Duty. In CCS ’04:
Proceedings of ACM Conference on Computer and
Communications Security, Oct 2004.
Sense-and-Respond Strategies in Complex Public
Organizations. Communications of ACM, 48(5):58–64,
May 2005.
[17] H. Ludwig, C. Bussler, M. Shan, and P. Grefen.
[22] R. Rivest, A. Shamir, and L. Adleman. A Method for
Cross-Organisational Workﬂow Management and
Co-ordination. In WACC’99: Proceedings of the
Workshop on Cross-Organisational Workﬂow
Management and Co-ordination, Feb 1999.
[18] J. Madhavan, P. Bernstein, A. Doan, and A. Halevy.
Corpus-Based Schema Matching. In ICDE ’05:
Proceedings of the Twenty First International
Conference on Data Engineering, April 2005.
[19] J. Madhavan and A. Halevy. Composing Mappings
Among Data Sources. In VLDB’2003 : Proceedings of
the Twenty Ninth International Conference on Very
Large Databases, 2003.
[20] M. Morgenstern, T. Lunt, B. Thuraisingham, and
D. Spooner. Security Issues in Federated Database
Systems: Panel Contributions. In Results of the IFIP
WG 11.3 Workshop on Database Security V, pages
131–148. North-Holland, 1992.
Obtaining Digital Signatures and Public-Key
Cryptosystems. Communications of the ACM,
21(2):120–126, Feb 1978.
[23] R. Sandhu, E. Coyne, H. Feinstein, and C. Youman.
Role-Based Access Control Models. IEEE Computer,
29(2):38–47, Feb 1996.
[24] S. Vimercati and P. Samarati. Authorization
Speciﬁcation and Enforcement in Federated Database
Systems. Journal of Computer Security, 5(2):155–188,
1997.
[25] G. Wiederhold, M. Bilello, and C. Donahue. Web
Implementation of a Security Mediator for Medical
Databases. In Proceedings of the IFIP TC11 WG11.3
Eleventh International Conference on Database
Securty XI, pages 60–72, London, UK, UK, 1998.
Chapman & Hall, Ltd.
67