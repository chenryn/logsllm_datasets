# Greater Than One: Defeating "Strong" Authentication in Web Applications
## Brendan Oâ€™Connor

### Introduction
- **Internet Banking**
- **Bill Pay**
- **Car Loans and Mortgages**
- **Retirement Plans / 401K**
- **Stock Trading / Investments**

### Background
The Federal Financial Institution Examination Council (FFIEC) has established guidelines for authentication in internet banking environments. According to the FFIEC, single-factor authentication is inadequate for high-risk transactions involving access to customer information or the movement of funds to other parties. Account fraud and identity theft often result from the exploitation of single-factor (e.g., ID/password) authentication.

**Source:** [FFIEC Guidelines](http://www.ffiec.gov/ffiecinfobase/resources/info_sec/2006/frb-sr-05-19.pdf)

### Key Points
- **Access to Customer Information or Movement of Funds**: This includes almost every screen in an internet banking application.
- **Single-Factor Authentication Inadequacy**: The FFIEC states that single-factor authentication is insufficient, but does not mandate two-factor authentication.
- **Hardware Tokens**: These are expensive and can be easily lost or broken.
- **Biometrics**: Not feasible for end users.

### Control Types
1. **Mutual Authentication**
   - **Site-to-User Authentication**: This is not device-based mutual authentication.
   - **Device Fingerprinting**: Uses persistent cookies and HTTP header information.
   - **Device Interrogation**: Gathers specific device information.

2. **Out of Band Authentication**
   - **Delivery Methods**: Email, SMS, or phone call with a PIN.
   - **Limitations**: Authentication still occurs within the HTTP session.

3. **One Time Passwords (OTPs)**
   - **Dynamic Single-Use Passwords**: Delivered via out-of-band methods.
   - **Static Pre-Issued Pads**: Different from algorithmic token-based authentication like RSA SecurID.

4. **Knowledge Base Archives (KBAs)**
   - **Questions Based on Public Records**: For example, asking about car purchases in a specific year.

### Implementation Considerations
- **Bolt On vs. Built In**: Enhanced authentication is often a third-party product integrated into existing applications, increasing the attack surface.
- **Authentication Process**: Standard processes must be interrupted, potentially exposing architectural weaknesses.

### Authentication Architecture
- **Simple Request/Response Authentication**
  1. Post username/password.
  2. Database lookup.
  3. Return success or failure.
  4. Display "Invalid username or password" if necessary.

- **Device Fingerprinting**
  - **Hybrid Approach**: Combines picture/phrase-based mutual authentication with OTPs or challenge questions if the device is not recognized.
  - **Persistent Cookie**: Set after passing authentication criteria.
  - **Request Analysis**: Can involve single or multiple server authentications.

### Device Fingerprinting Request Flow
1. Push authentication to a new system.
2. Verify valid user.
3. Match authentication criteria (cookie, fingerprint).
4. Challenge questions/OTP if necessary.
5. Resume authentication upon success.
6. Logged in.

### Authentication Flow
- **Post Username and Cookie (if exists)**
- **Challenge for Device Fingerprint**
- **Post Fingerprint (if no cookie)**
- **New Authentication Challenge**
- **Answer Challenge**
- **Old Login**

### Device Fingerprinting Analysis
- **Parameters and Values Dissection**: Includes browser type, screen resolution, installed plugins, and more.
- **JavaScript Interrogation**: Reverse engineering is straightforward with access to source code.

### Attacking Device Fingerprinting
- **Fuzz Parameters**: Determine failure thresholds.
- **IP Lookup and Challenge Questions**: Lack of randomization and trivial enumeration of valid usernames.
- **Multiple Servers and Redirects**: Out-of-state requests are possible, forcing OTPs or challenge questions.
- **Mutual Authentication**: Picture and passphrase, with potential vulnerabilities in GUIDs or stream ciphers.

### Defeating Device Fingerprinting
- **IV Collision and MitM Attacks**: Exhaustive requests and on-the-fly replacements.
- **Shared Image Catalog**: All implementations use the same alt tags for unique images, making it easy to mirror the image catalog.

### Effectiveness Against Threats
- **Phishing**: Targeted at specific organizations, with attackers copying fingerprinting JavaScript.
- **Transaction Fraud and Identity Theft**: Device fingerprinting does little to combat these issues.

### One Time Passwords (OTPs)
- **Delivery Methods**: Out-of-band delivery, hardware, and soft tokens.
- **Session Enforcement**: Issues arise if the app doesn't enforce all phases within a single session.
- **XSRF and Phishing**: Possible in conjunction with phishing sites.

### Knowledge Base Archives (KBAs)
- **Public Records**: Used in conjunction with persistent cookies.
- **Randomization**: Multiple requests from multiple sessions can help defeat this method.
- **Effectiveness**: Less effective than challenge questions and can be defeated through response analysis.

### Is There a Better Way?
- **Mutual Authentication**: Responses must always be given, and the same response must be given for the same authentication criteria.
- **Challenge Questions**: Still single-factor, replacing one thing the user knows with another.
- **Behavioral Analysis**: Fingerprinting behaviors rather than devices, using transaction-based anomaly detection.
- **Positive Authentication Model**: Require strong authentication for new transactions, use hash values to prevent tampering, and involve the user in reviewing and verifying transactions.

### Conclusions
- **Traditional Attack Vectors**: Still pose a threat, and these controls do not address other vulnerability types.
- **Financial Industry Problems**: Online fraud due to phishing or malware, with a lose-lose situation for both companies and customers.
- **Regulatory Cycle**: Government regulation, private sector implementation, and attacker adaptation.
- **False Sense of Security**: Technologies being deployed may not address the real problem, and security products should reduce, not increase, the attack surface.

Thank you.