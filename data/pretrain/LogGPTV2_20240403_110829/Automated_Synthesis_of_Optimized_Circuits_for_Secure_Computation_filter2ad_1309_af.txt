Instead, our framework
allows to compute the distance formulas directly on ﬂoating-
point numbers with multiple precision options available and
thus can oﬀer a higher precision.
Universal Transverse Mercator (UTM). This distance
metric maps Earth over a set of planes and provides accurate
results if A and B are located relatively close to each other,
within the same UTM zone.
points: CA = (xA, yA) and CB = (xB, yB).
In this metric coordinates are expressed as 2-dimensional
DUTM(CA, CB) <  ⇔ (xA − xB)2 + (yA − yB)2 < 2,
where underlined variables are inputs of party A and the
other terms are inputs of party B. For computing this
formula we need 2 FPSQR, 3 FPADD, and 1 FPCMP operations.
Earth-Centered, Earth-Fixed (ECEF). This distance
metric uses the Earth-Centered, Earth-Fixed (ECEF, also
known as Earth Centered Rotational, or ECR) coordinate
system which provides very accurate results when the parties
are far apart.
The coordinates are expressed as 3-dimensional points
where (0, 0, 0) is the center of the Earth: CA = (xA, yA, zA)
and CB = (xB, yB, zB).
DECEF(CA, CB) <  ⇔
(xA − xB)2 + (yA − yB)2 + (zA − zB)2 < 4R2a,
(tan 
with a =
2R )2
2R )2 . Underlined variables are inputs of
1 + (tan 
party A and the other terms are inputs of party B. Com-
puting this formula takes 3 FPSQR, 5 FPADD, and 1 FPCMP
operations.
Haversine (HS). This distance metric is based on the haver-
sine (HS) formula which is a trigonometric formula used to
1515Table 5: Runtimes (setup + online phase) in ms per single proximity test for multiple precisions. ‘–’ indicates
that no numbers were given. All protocols are in the 2-party setting. Entries marked with × could not be
run on our machines.
Distance Metric
Parallel Batch Size
1
100
10 000
AND Gates
Size
Depth
UTM
ECEF
HS
HE [ˇSG14]
GC [ˇSG14]
32-bit GMW
32-bit Yao
64-bit GMW
64-bit Yao
HE [ˇSG14]
GC [ˇSG14]
32-bit GMW
32-bit Yao
64-bit GMW
64-bit Yao
HE [ˇSG14]
GC [ˇSG14]
32-bit GMW
32-bit Yao
64-bit GMW
64-bit Yao
700 . . . 1 100
401.0 + 102.0
4.4 + 59.8
18.0 + 2.4
19.9 + 67.2
18.1 + 5.7
1 000 . . . 1 300
404.0 + 105.0
5.7 + 60.1
12.8 + 3.3
13.9 + 78.1
27.4 + 8.8
1 700
409.0 + 124.0
13.6 + 67.5
17.9 + 5.6
49.5 + 283.6
67.8 + 18.0
–
–
4.0 + 1.49
4.2 + 0.87
10.6 + 2.65
12.5 + 2.54
–
–
5.8 + 1.56
6.6 + 1.32
15.8 + 2.91
19.9 + 3.88
–
–
11.6 + 2.11
12.8 + 2.48
33.3 + 3.40
41.4 + 8.03
–
–
–
–
3.3 + 0.05
8 815
×
8 815
10.2 + 0.14
26 588
× 26 588
–
–
–
–
5.3 + 0.07
14 042
× 14 042
41 850
× 41 850
–
–
–
–
10.5 + 0.14
27 525
× 27 525
88 530
× 88 530
16.0 + 0.20
33.4 + 0.41
–
–
146
146
195
195
–
–
205
205
267
267
–
–
224
224
342
342
7. REFERENCES
[ABZS13] M. Aliasgari, M. Blanton, Y. Zhang, A. Steele.
Secure computation on ﬂoating point numbers.
In NDSS’13. The Internet Society, 2013.
[ALSZ13] G. Asharov, Y. Lindell, T. Schneider,
[Bea91]
[Ber]
M. Zohner. More eﬃcient oblivious transfer and
extensions for faster secure computation. In
ACM CCS’13, p. 535–548. ACM, 2013.
D. Beaver. Eﬃcient multiparty protocols using
circuit randomization. In CRYPTO’91, volume
576 of LNCS, p. 420–432. Springer, 1991.
Berkeley Logic Synthesis. ABC: a system for
sequential synthesis and veriﬁcation, release
70930.
http://www.eecs.berkeley.edu/~alanmi/abc/.
[BHKR13] M. Bellare, V. Hoang, S. Keelveedhi,
[BNP08]
P. Rogaway. Eﬃcient garbling from a ﬁxed-key
blockcipher. In IEEE S&P’13, p. 478–492.
IEEE, 2013.
A. Ben-David, N. Nisan, B. Pinkas. FairplayMP:
a system for secure multi-party computation. In
ACM CCS’08, p. 257–266. ACM, 2008.
[BNTW12] D. Bogdanov, M. Niitsoo, T. Toft, J. Willemson.
High-performance secure multi-party
computation for data mining applications.
International Journal of Information Security,
11(6):403–418, 2012.
J. Boyar, R. Peralta. Concrete multiplicative
complexity of symmetric functions. In
Mathematical Foundations of Computer Science
(MFCS’06), volume 4162 of LNCS, p. 179–189.
Springer, 2006.
J. Boyar, R. Peralta, D. Pochuev. On the
multiplicative complexity of boolean functions
[BP06]
[BPP00]
over the basis (∧,⊕, 1). Theoretical Computer
Science, 235(1):43–57, 2000.
[DSZ15]
[CHK+12] S.-G. Choi, K.-W. Hwang, J. Katz, T. Malkin,
D. Rubenstein. Secure multi-party computation
of Boolean circuits with applications to privacy
in on-line marketplaces. In CT-RSA’12, volume
7178 of LNCS, p. 416–432. Springer, 2012.
D. Demmler, T. Schneider, M. Zohner. ABY – a
framework for eﬃcient mixed-protocol secure
two-party computation. In NDSS’15. The
Internet Society, 2015. Code:
https://github.com/encryptogroup/ABY.
M. Franz, S. Katzenbeisser. Processing
encrypted ﬂoating point signals. In ACM
Multimedia and Security (MM&Sec’11), p.
103–108. ACM, 2011.
IEEE standard for ﬂoating-point arithmetic.
IEEE Std 754-2008, p. 1–70, Aug 2008.
[FK11]
[FP008]
[GMW87] O. Goldreich, S. Micali, A. Wigderson. How to
play any mental game. In STOC’87, p. 218–229.
ACM, 1987.
J. Garay, B. Schoenmakers, J. Villegas.
Practical and secure solutions for integer
comparison. In PKC’07, volume 4450 of LNCS,
p. 330–342. Springer, 2007.
[GSV07]
[HEK12] Y. Huang, D. Evans, J. Katz. Private set
intersection: Are garbled circuits better than
custom protocols? In NDSS’12. The Internet
Society, 2012.
[HEKM11] Y. Huang, D. Evans, J. Katz, L. Malka. Faster
secure two-party computation using garbled
circuits. In USENIX Security’11, p. 539–554.
USENIX, 2011.
1516[HFKV12] A. Holzer, M. Franz, S. Katzenbeisser, H. Veith.
Secure two-party computations in ANSI C. In
ACM CCS’12, p. 772–783. ACM, 2012.
[HKS+10] W. Henecka, S. K¨ogl, A.-R. Sadeghi,
T. Schneider, I. Wehrenberg. TASTY: Tool for
Automating Secure Two-partY computations.
In ACM CCS’10, p. 451–462. ACM, 2010.
[IKNP03] Y. Ishai, J. Kilian, K. Nissim, E. Petrank.
Extending oblivious transfers eﬃciently. In
CRYPTO’03, volume 2729 of LNCS, p. 145–161.
Springer, 2003.
Y.-K. Kwok, I. Ahmad. Static scheduling
algorithms for allocating directed task graphs to
multiprocessors. ACM Computing Surveys
(CSUR), 31(4):406–471, 1999.
A. A. Karatsuba, Y. Ofman. Multiplication of
many-digital numbers by automatic computers.
SSSR Academy of Sciences, 145:293–294, 1962.
V. Kolesnikov, T. Schneider. Improved garbled
circuit: Free XOR gates and applications. In
ICALP’08, volume 5126 of LNCS, p. 486–498.
Springer, 2008.
[KO62]
[KA99]
[KS08]
[KSMB13] B. Kreuter, A. Shelat, B. Mood, K. R. B. Butler.
[KSS09]
[KSS12]
[KSS13]
[KW14]
[LF80]
PCF: A portable circuit format for scalable
two-party secure computation. In USENIX
Security’13, p. 321–336. USENIX, 2013.
V. Kolesnikov, A.-R. Sadeghi, T. Schneider.
Improved garbled circuit building blocks and
applications to auctions and computing minima.
In CANS’09, volume 5888 of LNCS, p. 1–20.
Springer, 2009.
B. Kreuter, A. Shelat, C.-H. Shen. Billion-gate
secure computation with malicious adversaries.
In USENIX Security’12, p. 285–300. USENIX,
2012.
F. Kerschbaum, T. Schneider, A. Schr¨opfer.
Automatic protocol selection in secure
two-party computations. In ACNS’15, volume
8479 of LNCS, p. 1–18. Springer, 2013.
L. Kamm, J. Willemson. Secure ﬂoating point
arithmetic and private satellite collision
analysis. International Journal of Information
Security, p. 1–18, 2014.
R. E. Ladner, M. J. Fischer. Parallel preﬁx
computation. Journal of the ACM,
27(4):831–838, 1980.
[LWN+15] C. Liu, X. S. Wang, K. Nayak, Y. Huang,
E. Shi. ObliVM: A programming framework for
secure computation. In IEEE S&P’15, p.
359–376. IEEE, 2015.
L. Malka. VMCrypt - modular software
architecture for scalable secure computation. In
ACM CCS’11, p. 715–724. ACM, 2011.
B. Mood, L. Letaw, K. R. B. Butler.
Memory-eﬃcient garbled circuit generation for
[Mal11]
[MLB12]
mobile devices. In FC’12, volume 7397 of LNCS,
p. 254–268. Springer, 2012.
[MNPS04] D. Malkhi, N. Nisan, B. Pinkas, Y. Sella.
Fairplay – a secure two-party computation
system. In USENIX Security’04, p. 287–302.
USENIX, 2004.
[NNOB12] J. B. Nielsen, P. S. Nordholt, C. Orlandi, S. S.
[Sav97]
[ˇSG14]
Burra. A new approach to practical
active-secure two-party computation. In
CRYPTO’12, volume 7417 of LNCS, p. 681–700.
Springer, 2012.
J. E. Savage. Models of Computation: Exploring
the Power of Computing. Addison-Wesley Pub,
Boston, MA, USA, 1st edition, 1997.
J. ˇSedˇenka, P. Gasti. Privacy-preserving
distance computation and proximity testing on
earth, done right. In ACM ASIACCS’14, p.
99–110. ACM, 2014.
[SHS+15] E. M. Songhori, S. U. Hussain, A.-R. Sadeghi,
[ST]
[Syn10]
[Syn15]
[SZ13]
[Wak68]
[Wol]
[Yao86]
[ZRE15]
[ZSB13]
T. Schneider, F. Koushanfar. TinyGarble:
Highly compressed and scalable sequential
garbled circuits. In IEEE S&P’15, p. 411–428.
IEEE, 2015.
N. Smart, S. Tillich. Circuits of basic functions
suitable for MPC and FHE.
http://www.cs.bris.ac.uk/Research/
CryptographySecurity/MPC/.
Synopsys Inc. Design compiler, 2010. http:
//www.synopsys.com/Tools/Implementation/
RTLSynthesis/DesignCompiler.
Synopsys Inc. DesignWare library - datapath
and building block IP. https:
//www.synopsys.com/dw/buildingblock.php,
2015.
T. Schneider, M. Zohner. GMW vs. Yao?
Eﬃcient secure two-party computation with low
depth circuits. In FC’13, volume 7859 of LNCS,
p. 275–292. Springer, 2013.
A. Waksman. A permutation network. Journal
of the ACM, 15(1):159–163, 1968.
C. Wolf. Yosys open synthesis suite.
http://www.clifford.at/yosys/.
A. C.-C. Yao. How to generate and exchange
secrets. In FOCS’86, p. 162–167. IEEE, 1986.
S. Zahur, M. Rosulek, D. Evans. Two halves
make a whole: Reducing data transfer in
garbled circuits using half gates. In
EUROCRYPT’15, volume 9057 of LNCS, p.
220–250. Springer, 2015.
Y. Zhang, A. Steele, M. Blanton. PICCO: a
general-purpose compiler for private distributed
computation. In ACM CCS’13, p. 813–826.
ACM, 2013.
1517