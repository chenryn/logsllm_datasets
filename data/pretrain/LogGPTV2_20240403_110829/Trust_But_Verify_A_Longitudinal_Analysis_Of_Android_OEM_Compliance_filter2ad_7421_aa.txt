# Trust, But Verify: A Longitudinal Analysis of Android OEM Compliance and Customization

**Authors:** Andrea Possemato<sup>∗†</sup>, Simone Aonzo<sup>†</sup>, Davide Balzarotti<sup>†</sup>, Yanick Fratantonio<sup>†‡</sup>

- <sup>∗</sup> IDEMIA
- <sup>†</sup> EURECOM
- <sup>‡</sup> Cisco Talos

**Abstract:**
Over two billion mobile devices run the Android operating system. The success of Android is largely attributed to its open-source nature, allowing vendors to customize the code base for their devices. While customization offers benefits, it can also lead to compatibility and security issues. To mitigate these, Google has established a set of requirements, encoded in the Compatibility Definition Document (CDD) and enforced through automated tests like the Compatibility Test Suite (CTS). This paper presents the first longitudinal study on Android OEM customizations, analyzing 2,907 ROMs from 42 different vendors, covering Android versions 1.6 to 9.0 (2009–2020). We developed an analysis framework to evaluate compliance with CDD requirements and the impact of customizations on device security. Our results are concerning: approximately 20% of the ROMs violate at least one CDD requirement, including some branded by Google. We found that vendors often bypass or disable safety features, and some ROMs include outdated, vulnerable software. This study highlights the need for improved compliance checks and provides recommendations for enhancing the security of Android ROMs.

## I. Introduction

Mobile devices are integral to our daily lives, with over 2.5 billion devices worldwide running the Android operating system. The Android Open Source Project (AOSP) provides the documentation and source code needed to build custom variants of the Android OS, known as Android ROMs. However, AOSP does not include all components required for a complete system, necessitating third-party vendors (OEMs) to customize the AOSP base image for their devices. These modifications can affect both user-space and kernel-space components, leading to fragmentation and potential security risks.

### Security Implications of Customizations

Customizations can negatively impact the security posture of the system by:
1. **Undermining Hardening Efforts:** Customizations may negate Google’s hardening efforts, increasing the attack surface and introducing new vulnerabilities.
2. **Compatibility and Patch Delays:** Modifications to core components can cause compatibility issues and delays in applying security patches.

Google addresses these issues through:
1. **Compliance Requirements:** The Android Compatibility Definition Document (CDD) outlines technical and non-technical requirements for Android-branded devices. The Compatibility Test Suite (CTS) automates the checking of these requirements, though it only covers a subset.
2. **Project Treble:** Introduced in 2017, Project Treble reorganizes the Android OS to separate vendor-specific components from the core framework, facilitating easier application of security patches. The Vendor Test Suite (VTS) ensures forward compatibility and is required for devices to run Google Mobile Services (GMS).

Despite these efforts, studies have shown that OEM customizations can introduce significant security vulnerabilities. To gain a comprehensive understanding, we conducted a large-scale longitudinal study on Android OEM customizations, analyzing 2,907 ROMs from 42 OEMs, spanning Android versions 2.3 to 9.0 (2010–2020).

### Key Aspects of the Study

Our analysis focuses on:
1. **Compliance with Regulations:** Whether OEMs comply with CDD, CTS, and VTS requirements.
2. **Impact on Security Posture:** How customizations affect the overall security of the device, including binary hardening, SELinux policies, init scripts, and kernel security settings.

### Findings and Recommendations

Our findings are concerning:
- **CDD Violations:** Approximately 20% of the ROMs violate at least one “must comply” CDD rule, and 10% do not implement “strongly recommended” suggestions.
- **Security Risks:** Some ROMs bypass or disable security features, and others include outdated, vulnerable software.

We conclude with several recommendations for Google, including extending the compliance requirements that can be automatically verified and providing guidelines to discourage insecure customizations.

### Contributions

This paper makes the following contributions:
- **Longitudinal Analysis:** The first large-scale, longitudinal analysis of 2,907 Android ROMs from 42 OEMs, spanning 10 versions of Android.
- **Comprehensive Security Evaluation:** A detailed evaluation of how customizations affect the security of the Android system.
- **Recommendations for Improvement:** Practical recommendations for enhancing the security and compliance of Android ROMs.

---

**Note:** The document has been optimized for clarity, coherence, and professionalism. The content has been restructured and refined to enhance readability and ensure a logical flow of information.