title:A Security Framework for Distributed Ledgers
author:Mike Graf and
Daniel Rausch and
Viktoria Ronge and
Christoph Egger and
Ralf K&quot;usters and
Dominique Schr&quot;oder
A Security Framework for Distributed Ledgers
Mike Graf
Daniel Rausch
Viktoria Ronge
PI:EMAIL
PI:EMAIL
University of Stuttgart
Stuttgart, Germany
PI:EMAIL
FAU Erlangen-Nürnberg
Erlangen, Germany
University of Stuttgart
Stuttgart, Germany
Christoph Egger
PI:EMAIL
FAU Erlangen-Nürnberg
Erlangen, Germany
Ralf Küsters
PI:EMAIL
University of Stuttgart
Stuttgart, Germany
Dominique Schröder
PI:EMAIL
FAU Erlangen-Nürnberg
Erlangen, Germany
ABSTRACT
In the past few years blockchains have been a major focus for
security research, resulting in significant progress in the design,
formalization, and analysis of blockchain protocols. However, the
more general class of distributed ledgers, which includes not just
blockchains but also prominent non-blockchain protocols, such as
Corda and OmniLedger, cannot be covered by the state-of-the-art
in the security literature yet. These distributed ledgers often break
with traditional blockchain paradigms, such as block structures to
store data, system-wide consensus, or global consistency.
In this paper, we close this gap by proposing the first frame-
work for defining and analyzing the security of general distributed
ledgers, with an ideal distributed ledger functionality, called Fledger,
at the core of our contribution. This functionality covers not only
classical blockchains but also non-blockchain distributed ledgers
in a unified way.
To illustrate Fledger, we first show that the prominent ideal block-
chain functionalities Gledger and GPL realize (suitable instantiations
of) Fledger, which captures their security properties. This implies
that their respective implementations, including Bitcoin, Ouroboros
Genesis, and Ouroboros Crypsinous, realize Fledger as well. Sec-
ondly, we demonstrate that Fledger is capable of precisely modeling
also non-blockchain distributed ledgers by performing the first
formal security analysis of such a distributed ledger, namely the
prominent Corda protocol. Due to the wide spread use of Corda
in industry, in particular the financial sector, this analysis is of
independent interest.
These results also illustrate that Fledger not just generalizes the
modular treatment of blockchains to distributed ledgers, but more-
over helps to unify existing results.
CCS CONCEPTS
• Security and privacy → Formal security models; Cryptog-
raphy; Distributed systems security.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3485362
KEYWORDS
Distributed Ledgers; Blockchain; Universal Composability; Protocol
Security; Corda
ACM Reference Format:
Mike Graf, Daniel Rausch, Viktoria Ronge, Christoph Egger, Ralf Küsters,
and Dominique Schröder. 2021. A Security Framework for Distributed
Ledgers. In Proceedings of the 2021 ACM SIGSAC Conference on Computer
and Communications Security (CCS ’21), November 15–19, 2021, Virtual Event,
Republic of Korea. ACM, New York, NY, USA, 22 pages. https://doi.org/
10.1145/3460120.3485362
1 INTRODUCTION
In the past few years, researchers made significant progress in
formalizing and analyzing the security of blockchain protocols [3,
5, 16, 21, 26]. Initially analyzed in the game-based setting based
on trace properties [15, 20, 38], blockchain security research has
moved to simulation-based security which leverages modularity
and strong security guarantees offered by universal composability
(UC) frameworks [11, 12, 32]. Several ideal blockchain function-
alities have been proposed – most notably the functionality by
Badertscher et al. [5], called Gledger, and its privacy-preserving de-
rivative GPL [26]. They have successfully been applied to prove the
security of various, partly newly designed blockchains (cf. [3, 5, 26]).
However, the more general class of distributed ledgers has been
out of reach so far:
Distributed ledgers are a generalization of blockchains. A dis-
tributed ledger allows for establishing consensus on and distribu-
tion of data. While the class of distributed ledgers includes block-
chains as a special case, there are several prominent non-blockchain
distributed ledgers, such as Corda [9], OmniLedger [30], and Can-
ton [44], which break with several central blockchain paradigms.
For example, some of these ledgers do not establish a system-wide
consensus, do not use a block structure to store data, and/or do not
provide central security goals of traditional blockchains, such as
global consistency, chain-growth, or chain-quality. By departing
from such blockchain paradigms, these systems aim for higher trans-
action throughput and security properties like transaction privacy
that are not easily provided by blockchains. Both of these aspects
are highly desired by industry, thereby making non-blockchain dis-
tributed ledgers very attractive for practical use [14, 19, 23, 24, 39].
Due to the conceptual differences between traditional block-
chains and non-blockchain distributed ledgers, existing security
definitions and results for blockchains do not apply to the class
Session 4A: Modeling Blockchains and Distributed Ledgers CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1043of distributed ledger protocols in general, and non-blockchain dis-
tributed ledgers in particular (cf. Section 3 and Section 4).
In this work, we close this gap by proposing the ideal distributed
ledger functionality Fledger. This functionality provides a highly
flexible tool set that allows for the modular security analysis of
virtually arbitrary distributed ledgers, thereby, for the first time,
covering not only classical blockchains but also non-blockchain
distributed ledgers. It does so in a single unified framework.
The Ideal Ledger Functionality Fledger. To capture and ana-
lyze security properties of arbitrary distributed ledger protocols
including blockchains, the design of and the features offered by
Fledger follow these main objectives:
Firstly, Fledger is highly flexible due to various parameters, mod-
eled as generic subroutines. This not only allows for capturing a
wide range of distributed ledgers, but also a broad spectrum of se-
curity properties without having to change the ideal functionality
itself. Such security properties include both established (blockchain)
security notions, such as consistency and chain-growth, but also
entirely new security properties such as partial consistency, which
we propose of the first time in this work (see below).
Secondly, the interface and core logic of Fledger abstract from
technical details of the envisioned implementations/realizations,
such as purely internal roles (miners or notaries), maintenance
operations such as mining, consensus mechanisms (proof-of-work,
proof-of-stake, Byzantine agreement, ...), and setup assumptions
(networks with bounded delay, honest majorities, trusted parties, ...).
All of these details are left to realizations/implementations. Hence,
Fledger can not only be implemented using vastly different, e.g., con-
sensus mechanisms, but Fledger also offers a very simple, clean, and
implementation-independent interface to higher-level protocols
which should facilitate their specification, modeling, and analysis.
Thirdly, Fledger is built for a very general interpretation of cor-
ruption: parties in a realization cannot only be corrupted directly,
and hence controlled by the adversary, but whether or not they are
considered corrupted may also depend on the security assumptions,
such as an honest majority. For example, if the honest majority
assumption, say in Bitcoin, is violated, one would consider all par-
ticipants to be corrupted, even if they are not directly controlled by
the adversary but still run the protocol honestly, since it is impossi-
ble for honest parties to provide any security guarantees in this case.
We believe that this technique, which has already been successfully
employed in the non-blockchain UC literature before (e.g., in [33]),
will improve security analyses in the field of distributed ledgers. For
example, and as also illustrated by our case study, the commonly
used environment-restricting wrapper is typically obsolete when
using this general corruption model.
We show the power and generality of Fledger via two core results,
as further explained below: Firstly, as a fundamental result, we show
that existing results for the modular security of blockchains carry
over to Fledger. Secondly, as a case study, we provide the first formal
model and security analysis of a non-blockchain distributed ledger,
namely the prominent Corda system.
Covering Blockchains. To demonstrate that Fledger generalizes
the existing literature on blockchains, we first show that Fledger
is indeed able to capture blockchains as a special case. Instead
of illustrating this via a classical case study, which would typi-
cally prove that, e.g., Bitcoin realizes Fledger, we choose a more
general approach. We show that the so far most commonly used
blockchain functionality Gledger [5] (with some syntactical interface
alignments) realizes a suitable instantiation of Fledger which cap-
tures the security properties provided by Gledger, and demonstrate
that this result also holds for its privacy-preserving variant GPL [26].
Hence, any realization of Gledger or GPL (with the mentioned align-
ments) also realizes Fledger, which covers all published UC analyses
of blockchains, including Bitcoin [5], Ouroboros Genesis [3], and
Ouroboros Crypsinous [26].
We want to emphasize that, while Gledger realizes Fledger, both
functionalities differ fundamentally in several core design choices.
For example, Gledger is designed for the special case of blockchains
and hence, among others, requires the security property of consis-
tency for realizations. In contrast, Fledger requires only the exis-
tence of a totally ordered set of transactions. Similarly, the design
rationales for GPL and Fledger are quite different as well.
We also discuss how other published ideal blockchain function-
alities are captured by Fledger – though these functionalities have
only been used as setup assumptions for higher-level protocols.
Altogether, this shows that Fledger can cover the blockchain
literature and unifies existing models and results.
Case study: Corda. We demonstrate that Fledger can capture
non-blockchain distributed ledgers, making Fledger the first such
functionality. We do so via a case study. That is, we provide the first
formal analysis of a non-blockchain distributed ledger: Corda [8, 9,
40, 41]. We emphasize that existing ideal blockchain functionalities
are not suitable for capturing Corda (cf. Section 3 and Section 4).
Corda is one of the most widely used distributed ledgers. It is
used by more than 60 companies, banks, and institutions, including
HP Enterprise, Intel, Microsoft, and also by NASDAQ [14, 19, 23–
25, 39, 42]. Leading consulting groups identify Corda as the most
prominent distributed ledger technology [1, 7, 37].
Understanding the security and privacy of Corda is not only
interesting due to its wide spread use in practice, but also from a
scientific perspective because of its conceptual differences to other
distributed ledger technologies. Compared to traditional block-
chains, such as Bitcoin, three major differences strike immediately.
First, Corda does not structure transactions in blocks. The second
one is the lapse of a common state, i. e., no party has a full view
of the state, which in turn improves privacy of transactions. In
particular, while blockchains strive to achieve the notion of consis-
tency, where every party is supposed to have the same full view of
the global state, Corda aims to provide a weaker security notion,
which we call partial consistency. For partial consistency, which
we formalize for the first time in this work, parties may see only
part of the state but these views put together should result in a
consistent global state. The third major difference is the inclusion
of a number of trusted parties in Corda, so-called notaries, which
are used to prevent double-spending (see Section 4 for details).
In our case study, we model Corda and formalize its security and
privacy properties via an instantiation of Fledger. We then show that
Corda realizes Fledger. Our analysis uncovers and defines the level of
privacy provided for transactions in Corda, including several meta-
information leakages that Corda does not protect against. Further,
Session 4A: Modeling Blockchains and Distributed Ledgers CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1044while the official specification of Corda requires security only under
the assumption that all notaries are honest, our analysis shows that
Corda achieves security even in the presence of some corrupted
notaries, thereby improving on the official security claims.
Summary of Our Contributions. In summary, our contribu-
tions are as follows:
• We propose, in Section 2, an ideal functionality – called Fledger
– for general distributed ledgers. It is the first functionality that
can be applied to non-blockchain distributed ledgers. As demon-
strated in this work, it covers both traditional blockchains and
non-blockchain distributed ledgers. Our functionality offers
high flexibility to support a wide variety of different implemen-
tations with various security properties while simultaneously
exposing a simple and implementation independent interface
to higher-level protocols. Thereby Fledger not only generalizes
but also unifies the landscape of existing functionalities for
blockchains.
• We show in Section 3 that our functionality subsumes Gledger
and GPL. In particular, this allows for directly transferring all
published results on the modular security of blockchains, such
as Bitcoin and the Ouroboros family, to our functionality. We
further discuss that other published ideal blockchain functional-
ities, which have so far only been used to model setup assump-
tions, are also captured by Fledger.
• In Section 4, we provide the first formal model and security
analysis of a non-blockchain distributed ledger, Corda. As part
of this, we develop and formalize the novel security notion of
partial consistency. Due to Corda’s wide-spread use in practice,
this case study is a significant contribution in its own right.
We provide further details including full formal specifications and
proofs in our technical report [22].
2 AN IDEAL FUNCTIONALITY FOR GENERAL
DISTRIBUTED LEDGERS