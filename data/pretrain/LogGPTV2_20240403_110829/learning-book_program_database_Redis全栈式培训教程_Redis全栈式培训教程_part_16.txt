## Page 190
11.14.事件通知
11.14.1.事件类型说明
Redis的数据库在发生变化时，能够将这些变化通过配置方式产生通知，进而辅助我们的业务程序处理
配置项
配置名称
配置值
注释说明
notifykeyspace-events
Redis 事件通知
*9
为空表示禁用事件通知
notifykeyspaceevents
Redis 事件通知
K
键空间通知，订阅以_keyspacee
为前级
notifykeyspaceevents
Redis 事件通知
E
键事件通知，订阅以_keyevent@
为前缀
notifykeyspaceevents
Redis 事件通知
g
del，expire，rename等无关的通用命令的集合
notifykeyspaceevents
Redis 事件通知
String 命令
notifykeyspaceevents
Redis 事件通知
1
List 命令
notifykeyspaceevents
Redis 事件通知
S
Set 命令
notifykeyspaceevents
Redis事件通知
H
Hash 命令
notify-keyspace-events
Redis 事件通知
有序集合命令
notifykeyspaceevents
Redis 事件通知
X
过期事件（key过期时生成）
notifykeyspaceevents
Redis 事件通知
e
驱逐事件（内存满了，key被清除时）
notifykeyspaceevents
Redis 事件通知
A
以上 g$1shzxe 的集合
notifykeyspaceevents
Redis 事件通知
AKE
AKE代表接收全部的通知
notifykeyspaceevents
Redis 事件通知
Ex
过期事件通知
notifykeyspaceevents
Redis 事件通知
Elg
通用事件+List类型事件
notifykeyspaceevents
Redis 事件通知
可自由组合
过期事件可以自由组合
春风阁讲堂出品
190
---
## Page 191
11.14.2.观察事件类型
配置服务端产生事件类型为所
[xiangsl@crm167 redis]$ redis-cli config set notify-keyspace-events KEA
OK
在一个窗口中订阅所有事件类型
[xiangsl(@erm167 redis]$ redis-cli --csv psubscribe'__key**
Reading messages... (press Ctrl-C to quit)
"psubscribe","_key*:*",1
在第二个窗口中输入如下命令，观察第一个窗口的消息
127.0.0.1:6379> set a 1
OK
127.0.0.1:6379> set b 1
OK
127.0.0.1:6379> hset c f1 v1
(integer) 1
127.0.0.1:6379>
春风阁讲堂出品
16 I
---
## Page 192
11.14.3.适当订阅所需事件
以过期事件为例，首先我们要配置服务端产生事件类型中有过期事件
[xiangsl@crm167 redis]S redis-cli config set notify-keyspace-events Ex
OK
在一个窗口中订阅过期事件
[xiangsl@crm167redis]$redis-cli psubseribe_keyevent@0_expired
Reading messages... (press Ctrl-C to quit)
1)"psubscribe"
2)"_keyevent@0_:expired"
3) (integer) 1
第二个窗口中生产过期事件，10秒钟左右，观看第一个窗口的消息
127.0.0.1:6379> set a 1
OK
127.0.0.1:6379> EXPIRE a 10
(integer) 1
127.0.0.1:6379>
到这里，我们学到了什么？
通过事件通知，我们接收到Redis数据库中的某些值的变化，从而进一步进行我们的业务处理
注意事项：订阅事件属于即发即收，非持久化，尚若连接断开，消息则丢失
11.14.4.业务代码演示
参考源码工程redis
春风阁讲堂出品
192
---
## Page 193
11.15.高级配置1
配置项
配置名称
默认值
注释说明
hashmax1istpack-entries
压缩列表最大元素个数
512
表示用压缩列表保存时哈希集合中的最大元素个数
表示用压缩列表保存时哈希集合中单个元素的最大长度
压缩列表单个元素的
如果我们往Hash集合中写入的元素个数超过了hash-max-listpack-entries，
hashmax1istpackvalue
最大长度
64
或者写入的单个元素大小超过了hash-max-listpack-value，Redis 就会自动把
Hash类型的实现结构由压缩列表转为哈希表
listpack 长度
每个quicklist 节点上的 listpack长度，取值：-1、2、-3、-4、-5，分别对
listmaxlistpacksize
2
应4K、8K、16K、32K、64K，越往后性能越慢
quicklist 两端不压缩的节
0：表示都不压缩。这是Redis的默认值，1：表示quicklist 两端各有1个节点
listcompressdepth
点数目
0
不压缩，中间的节点压缩。3：表示quicklist两端各有3个节点不压缩，中间
的节点压缩
内部编码阅值
512
当集合中的元素全是整数，且长度不超过set-max-intset-entries（默认为512
setmaxintsetentries
个）时，redis会选用intset 作为内部编码，大于512用set
压缩列表单个元素的
zsetmax1istpack-entries
最大长度
128
表示用压缩列表保存时Set中的最大元素个数
表示用压缩列表保存时Set单个元素的最大长度
当有序集合的元素小于zset-max-listpack-entries 配置（默认是128个)，同时
zsetmaxlistpackvalue
listpack 长度
64
每个元素的值都小于zset-max-1istpack-value（默认是64字节）时，Redis会用
listpack来作为有序集合的内部编码实现，listpack可以有效的减少内存的使用
value 大小小于等于hl1-sparse-max-bytes 使用稀疏数据结构（sparse），大
h11sparsemax-bytes
稀疏数据结构阀值
于 hl1-sparse-max-bytes 使用稠密的数据结构（dense）
春风阁讲堂出品
193
---
## Page 194
11.16.高级配置2
配置项
配置名称
默认值
注释说明
stream-node-max-bytes
Streams 单个节点的字节数
4096
Streams 单个节点的字节数
streamnodemaxentries
Streams单个节点的最大的长度
100
Streams单个节点的最大的长度
activerehashing
重新散列设置
yes
主动重新散列每100毫秒CPU时间使用1毫秒
clientoutput-bufferlimit normal 0 0 0:
对普通客户端输出缓冲不进行限制
client-output-buffer-limit replica 256mb 64mb 60:
clientoutputbufferlimit
客户端连接断开配置
对于 slave c1ient 和 M0NITER client, 如果 c1ientoutputbuffer —且超过 256nb,
开
又或者超过64mb持续60秒，那么服务器就会立即断开客户端连接
clientoutput-bufferlimit pubsub 32nb 8nb 60:
对pubsub客户端，如果缓冲区一旦超过32mb，又或者超过8mb持续60秒，那么服务器
就会立即断开客户端连接
client-query-buffer1imit
客户端查询缓冲区累积限制
#
客户端查询缓冲区累积限制
protomax-bu1k1en
批量请求请求限制
512mb
在Redis协议中，批量请求（即表示单个字符串的元素）通常限制为512MB
hz
hz默认为10.提高值时，将使用更多CPU。范围介于1到500之间，大多数用户应使用默
任务频率设置
10
认值10，除非仅在需要非常低延迟的环境中将此值提高到100
启用动态HZ时，实际配置的HZ将用作基线，一旦连接更多客户端，将根据实际需要使
dynamichz
动态任务频率设开关
yes
用配置的HZ值的倍数
aofrewriteincrementalfsync
AOF文件同步方式
 yes
当一个子进程重写A0F文件时，如果启用选项，则文件每生成32M数据会被同步
rdb-saveincrementa1fsync
RDB文件同步方式
yes
当redis保存RDB文件时，如果启用选项，则每生成32 MB数据将对文件进行fsync
春风阁讲堂出品
194
---
## Page 195
12.Redis中常用运维管理
12.1.配置修改/查看
1.静态方式/配置文件方式
通过redis.conf，我们可以查看和修改Redis所有的静态配置
2.动态方式
我们可以通过config set 命令进行动态设置，也可以通过config get命令进行动态查看
业务场景
处理方式
是否需要重启
说明
查看静态配置
查看redis.conf
#
动态修改的配置在没有回写之前看不到
修改静态配置
修改redis.conf
是
未重启不会生效
动态查看配置
config get 
#
静态配置修改在未重启之前看不到
动态修改配置
config set  
否
重启会丢失，一般会配置configrewrite使用
在生产上建议大家采用动态修改方式，修改之后，尽快使用configrewrite进行回写
春风阁讲堂出品
195
---
## Page 196
12.2.安全认证之密码
在Redis的配置文件中有两个参数用来设置密码
requirepass这里修改连接密码#redis连接密码，用于客户端连接登陆
masterauth这里修改集群密码#redis集群密码，用于从节点同步用到
1．强烈建议各个节点的masterauth和requirepass设置为相同的密码，降低运维成本
2.当然主从同步密码和登陆设置为不同也是可以的，但会增加运维上的麻烦
3.Redis加上密码后，我们的命令行登陆，应用程序都需要进行统一的调整修改
这节课我们演示一个带有密码认证的集群搭建实例
1.修改redis.conf配置文件，将所有节点的requirepass和masterauth配置都修改为123456
2.集群初始化命令:redis-cli--cluster create --cluster-replicas 1 -a 123456 192.168.128.167:6381 192.168.128.167:6382 192.168.128.167:6383
192.168.128.167:6384 192.168.128.167:6385 192.168.128.167:6386
春风阁讲堂出品
196
---
## Page 197
12.3.安全认证之ACL
12.3.1.ACL背景&简介
在Redis6.0之前的版本中，登陆Redis Server只需要输入密码（前提配置了密码requirepass）即可，不需要输入用户名，而且密码也是明文配
置到配置文件中，安全性不高
并且应用连接也使用该密码，导致应用有所有权限处理数据，风险也极高
在Redis6.0有了ACL之后，可以按照不同的需求设置相关的用户和权限
acl可以配置如下方面的控制：
配置项
样例配置
说明
用户名
user Xiangsl on >123456 ~*& * +@all
用户，默认为default用户
密码
user xiangsl on >123456 ~→ &* +@all
手工设置
启禁状态
user xiangsl on >123456 ~→ &* +@all
默认关闭，需要
键值权限
user xiangsl on >123456 ~* &* +@all
*表示所有，~pre：*表示以pre：开头
Pub/sub 权限
user xiangsl on >123456 ~* &* +@all
&*表示所有，&pre：*表示以pre：开头
命令权限
user xiangsl on >123456 ~* &* +@all
支持命令和命令类型
春风阁讲堂出品
197
---
## Page 198
12.3.2.ACL开启方式
Redis开启ACL有两种方式
1.可以直接在redis.conf文件中指定用户(默认就是这一种）
2.可以指定外部ACL文件（通过增加aclfile/xxx/xxx/users_${port}acl文件来进行控制)
这两种方法互不兼容，因此Redis会要求您使用其中一种，一般来讲
1.数量较少的用户，一般采用第一种方式就够
2.当需要定义多个用户时，而且业务关系比较复杂时，一般建议您采用ACL文件
3.在任何时候使用acl文件方式都是一种较好的选择
两者在使用上没有区别，所有的命令都是兼容的，只是最后存储的文件不一样
1.第一种回写的命令是configrewrite
2.第二种回写的命令是aclsave
春风阁讲堂出品
86 1
---
## Page 199
12.3.3.用户启禁与密码
on：启用用户：可以作为该用户进行身份验证。
off：禁止该用户：无法再通过该用户进行身份验证：但已经连接上的连接仍然有效
密码设定方式：
配置项
说明
>
添加明文密码，如>123456，将密码设置成123456
删除明文密码，如
添加 SHA-256密码，如#8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92
!
删除SHA-256密码，如!8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92
nopass
设置成无密码模式，代表用于登陆时不需要密码
resetpass
设置成重置状态，在此状态下，必须进行一步设定密码或者设定nopass，否则相当于用户被禁掉
生成sha-256密钥方式：
echo -n "123456" | shasum -a 256
春风阁讲堂出品
661
---
## Page 200
12.3.4.用户密码演示
1.创建用户（默认禁止）：acl setuserlongge
2.创建用户+开启：acl setuser longge on
3.创建用户+开启+密码：acl setuser longgeon>123456
4.创建用户+开启+多密码：acl setuser longge on>123456>abcdef
5.获取某一个用户信息：aclgetuserlongge
6.重置用户信息：acl setuser longge reset
7.重置用户密码：acl setuser longge resetpass
8.重置用户键值：acl setuser longge resetkeys
9.重置用户频道：acl setuser longge resetchannels
10.禁用用户：acl setuser longge off
11.用户设置无权限：acl setuser longge-@all
12.设定用户密码：acl setuser longge on>123456
13.设定用户多密码：acl setuser longge on >123456 >abcdef
14.用户删除一个密码：acl setuser longge on
将命令添加到用户可以调用的命令列表中。可|用于允许子命令（例如“+configlget"）
将命令删除到用户可以调用的命令列表中。从Redis7.0开始，它可以|用于阻止子命令（例如"-configlser"）
+@
增加某一类命令权限，类别可通过ACLCAT命令获取，+@ALL表示拥有命令权限
-@
惕除某一类命令权限，类别可通过ACLCAT命令获取，-@ALL表示不含有任意命令权限
allcommands
等同+@all
nocommands
等同-@all
样例配置：
样例配置
业务说明