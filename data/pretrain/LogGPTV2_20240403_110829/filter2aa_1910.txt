# Uroburos Rootkit: A Comprehensive Analysis

## Overview
Uroburos is a sophisticated rootkit revealed to the public by G DATA in February 2014. The primary purpose of this rootkit is to maintain remote access to infected machines and exfiltrate sensitive data.

### Key Features
- **Function Hooking**: To hide its activities.
- **Deep Packet Inspection (DPI)**: To monitor network traffic.
- **Bypass Kernel Protection**: To load and execute the driver.
- **Virtual File System**: To store configuration and data.
- Additional features are detailed in the following sections.

## Uroburos Name Origin
The name "Uroburos" is derived from the Greek word "Ouroboros" (Οὐροβόρος), which symbolizes a serpent or dragon eating its own tail. This ancient symbol represents cyclicality and self-sufficiency, reflecting the rootkit's ability to persist and operate autonomously.

## Rootkit Composition
The Uroburos rootkit consists of two main files:
- **.sys file**: A Microsoft Windows driver (32/64 bits).
- **.dat file**: An encrypted virtual file system.

## Driver Analysis
The loaded driver is a critical component of the Uroburos rootkit. It performs various malicious activities, including function hooking and kernel bypass.

### Function Hooking
To conceal its presence and activity, the driver sets several hooks by modifying the beginning of functions with an interrupt (0x3C). For example, the `IoCreateDevice` function is hooked as follows:

```assembly
kd> ? IoCreateDevice
Evaluate expression: -2103684120 = 829c53e8
kd> u 829c53e8
nt!IoCreateDevice:
829c53e8 6a01            push    1
829c53ea cdc3            int     0C3h
829c53ec ec              in      al,dx
829c53ed 83e4f8          and     esp,0FFFFFFF8h
829c53f0 81ec94000000    sub     esp,94h
829c53f6 a14cda9282      mov     eax,dword ptr [nt!__security_cookie (8292da4c)]
829c53fb 33c4            xor     eax,esp
829c53fd 89842490000000  mov     dword ptr [esp+90h],eax
```

### Interrupt Descriptor Table (IDT)
The IDT is used to manage hardware and software interrupts. The rootkit modifies the IDT to intercept and control system calls.

```plaintext
kd> !idt
Dumping IDT: 80b95400
3194895000000030: 
82c27ca4 hal!Halp8254ClockInterrupt (KINTERRUPT …) 
3194895000000031: 
8486b058 i8042prt!I8042KeyboardInterruptService (KINTERRUPT 
3194895000000038: 
82c18c6c hal!HalpRtcProfileInterrupt (KINTERRUPT …) 
3194895000000039: 
8486bcd8 ACPI!ACPIInterruptServiceRoutine (KINTERRUPT …) 
...
31948950000000c3: 
859e84f0  
```

### Hooked Functions
The following `ntoskrnl.exe` functions are hooked by the rootkit:

- **Registry**: `NtCreateKey`, `NtEnumerateKey`, `NtQueryKey`, `NtSaveKey`
- **Process**: `NtQueryInformationProcess`, `NtTerminateProcess`, `NtCreateUserProcess`, `NtCreateThread`
- **System Information**: `NtQuerySystemInformation`, `NtShutdownSystem`
- **Driver**: `ObOpenObjectByName`, `IoCreateDevice`, `IofCallDriver`
- **File/Event**: `NtClose`, `NtReadFile`

## Windows Filtering Platform (WFP)
The WFP is a set of APIs and system services that provide a platform for creating network filtering applications. Uroburos uses this technology to perform Deep Packet Inspection (DPI) and modify network flows. The rootkit intercepts relevant data when a connection to the Command & Control (C&C) server or other local infected machines is established.

### Traffic Parsing
The filter parses HTTP and SMTP traffic (other protocols can be easily supported). To identify Uroburos traffic, the rootkit decrypts the network flow and looks for data starting with:
- `0xDEADBEEF`
- `0xC001BA5E`

Intercepted data is forwarded to the user land using named pipes.

## Virtual File Systems
Uroburos uses two virtual file systems: FAT32 and NTFS. During analysis, the FAT32 system was never used, suggesting it may be a legacy mode. The NTFS system is the decrypted `.dat` file (CAST-128 encryption).

### Access and Contents
- **Volume Access**: `\\.\Hd1\`
- **Contents**: Queue file, log files, additional tools (reconnaissance tools)

### Queue File
The queue file (`\\.\Hd1\queue`) contains the rootkit configuration, encryption keys, additional DLLs, and exfiltrated data. These DLLs are injected into user land processes, such as browsers, to steal sensitive information.

## User Land Injected Libraries
Injected libraries communicate with C&C servers and steal information. They act as a proxy between the kernel and user land. The libraries include:
- `inj_snake_Win32.dll`
- `inj_services_Win32.dll`

### Communication Protocols
From the user land perspective, the protocol used for C&C communication can be:
- HTTP
- SMTP
- ICMP
- Others

## Bypassing Kernel Protections
Uroburos bypasses several kernel protections to ensure its persistence and operation.

### Kernel Patch Protection (PatchGuard)
PatchGuard checks the integrity of the Windows kernel. If a modification is detected, the system is shut down with a blue screen. Uroburos hooks the `KeBugCheckEx()` function to avoid handling the code `0x109 CRITICAL_STRUCTURE_CORRUPTION`.

### Driver Signature Enforcement
This protection ensures that only signed drivers are loaded on 64-bit versions of Windows Vista and later. Uroburos uses a legitimate, signed driver (e.g., VirtualBox driver) and exploits a vulnerability (CVE-2008-3431) to switch the `g_CiEnabled` flag to `0`, thereby bypassing the protection.

### Step-by-Step Bypass
1. Open the VBoxDrv symbolic link.
2. Load `ntoskrnl.exe`.
3. Locate `g_CiEnabled`.
4. Use `DeviceIoControl()` to switch the arbitrary address to `0`.

Example:
```c
DeviceIoControl(VBoxDrv, SUP_IOCTL_FAST_DO_NOP, g_CiEnabledAddr, 0, g_CiEnabledAddr, 0, &cb, NULL)
```

## Other Exploits
The dropper contains resources with exploits to obtain administrator privileges, such as MS09-025 and MS10-015.

## Command & Control (C&C)
Attackers use two types of C&C:
- **Dedicated Servers**
- **Compromised Legitimate Web Sites** (water holing, e.g., TYPO3 CMS)

The use of WFP allows infected machines to operate without hardcoded C&C addresses. The malware can wait for specific network patterns and use local, infected systems as relays, complicating incident response.

## Infection Vectors
- **Spear Phishing Emails**: Adobe PDF exploits (CVE-2013-3346, CVE-2013-5065)
- **Social Engineering**: Trick users into running malware installers with `.SCR` extensions, sometimes packed with RAR
- **Watering Hole Attacks**: Java exploits (CVE-2012-1723), Flash exploits, Internet Explorer 6,7,8 exploits
- **Fake Installers**: Social engineering to trick users into running fake "Flash Player" malware installers

## Targets
Uroburos is designed to target high-profile entities, including:
- **Government Institutions**: Ministries of interior, trade and commerce, foreign affairs, intelligence agencies, embassies, and military organizations.
- **Education and Research Institutions**
- **Pharmaceutical Companies**

## Attribution
Technical links connect Uroburos to Agent.Btz, including:
- Shared encryption keys
- Usage of the same file names
- Checking for the presence of Agent.Btz
- Use of Russian language and user names (e.g., vlad, gilg, urik)

According to a Reuters article from 2011, the U.S. government strongly suspects that the original attack was crafted by Russian Intelligence. Belgian journalists have further confirmed these Russian roots.

## Conclusion
Thank you for your attention! If you have any questions, please feel free to ask.

---

This document provides a comprehensive overview of the Uroburos rootkit, detailing its features, composition, and methods of operation.