根据《银行业金融机构信息科技外包风险管理指引》、《关于加强银行业金融机构信息
科技非驻场集中式外包风险管理的通知》等相关监管制度，以科技风险为导向，应用行业典
型风险评估方法，对银行信息科技外包，从组织架构、科技外包战略与外包制度体系建设、
外包风险管理、外包风险评估及准入、服务商尽职调查、外包服务合同及要求、安全管理、
外包服务监控与评价、外包集中度管理、非驻场集中式外包风险管理等方面全面、科学、深入、
客观地进行风险分析和评估，明确每一风险点等级，出具外包风险评估报告，并提出相应整
改措施和建议。
6.1.2 实施步骤
1. 实施思路
2. 解读行业规范→➁收集经验材料→➂调研客户现状→➃建立外包评估标准→➄对标改
进完善→➅输出评估报告→➆协助优化整理
3. 实施步骤
任务规划阶段：详细解读行业外包管理的规范要求和银监会监管要求，归纳提取出银行
机构外包业务关键环节的标准要求，详查公司的组织过程资产。
任务实施阶段：进行现场调研，了解银行信息科技部门外包业务的详细现状，包括外包
管理组织架构、外包业务的内容范围、外包业务的各项流程、外包风险的管控措施、外包相
关的监督评价机制、已入围的外包服务商等等，梳理客户外包业务现状；梳理并建立可落地
的信息科技风险外包评估标准。
任务收尾阶段：评估客户根据模板制定的外包管理办法和银监会监管要求情况，从专家
的角度给出修订意见，出具评估报告及解决方案建议。
6.2 交通运输企业供应链安全监督检查实践
6.2.1 项目概述
某交通运输行业单位积极组织落实上级监管单位监管要求，对本单位供应链安全风险进
行了自查，出具了自查报告，并对发现的安全风险进行整改落实。自查分为技术自查和管理
风险自查两部分。
软件供应链安全技术白皮书
083
6.2.2 技术自查
（一）资料收集、梳理
针对识别、收集的关键供应链产品，与各供应商收集梳理此类产品已具有的销售许可证
及近期相关检测报告（第三方安全检测报告、代码审计报告、漏洞扫描报告、渗透测试报告、
等级测评报告）。
（二）环境准备
对关键供应链产品准备技术检测涉及的环境，包括协调供应商准备测试环境，协调测试
时间窗口等。 
（三）技术检测
技术检测主要通过代码审计、漏洞扫描、软件安全分析进行验证产品的安全性。具体检
测方式如下：
● 
代码审计：
人工源代码审计（由具备丰富的安全编码及应用安全开发经验的人员，根据一定的编码
规范和标准，针对应用程序源代码，从结构、脆弱性以及缺陷等方面进行审查）和工具源代
码审计（SDA 代码审查工具）
● 
漏洞扫描：
通过评估工具对某交通运输行业单位供应链产品相关的脆弱性进行安全检查，以发现目
标可能存在的安全隐患，有效发现产品涉及的操作系统和应用软件在用户账号、口令、安全
漏洞、服务配置等方面存在的安全风险、漏洞和威胁，为进一步通过技术手段降低或解决发
现的问题提供了参考依据和方法。
● 
软件安全分析：
对开源组件及软件进行漏洞分析、后门分析，识别存在的漏洞、被植入的后门木马、访
问的风险域名等问题。
（四）自查分析
整体分析上一步骤对供应链产品技术检测数据，形成自查报告。
084
行业、企业最佳实践
6.2.3 管理风险自查
第一阶段：自查启动阶段。此阶段主要确定评估范围、评估方法和评估工作计划安排，
确保某交通运输行业单位供应链管理能力自查活动能够顺利开展。
第二阶段：问卷调查阶段。以电子邮件的方式向供应商发放供应商调查内容清单，收集
供应商基本情况，了解和掌握供应商信息安全管理状况，识别其在开展项目活动重存在的风
险点，同时为后续各阶段的工作提供基础数据与资料。
第三阶段：文档审查阶段。通过对某交通运输行业单位进行文档审查，了解供应链管理
落实情况，对于标准中的要求，是否在制度流程上得以控制，特殊的业务要求是否明确说明
原因等。
第四阶段：业务参与风险梳理阶段。根据供应商参与业务系统工作流程需求，整理出相
应风险点列表，为人员访谈和技术检查做好准备。
第五阶段：人员访谈阶段。在某交通运输行业单位供应链能力自查工作中，自查人员通
过对某交通运输行业单位相关人员进行现场访谈，询问供应商工作中检查点内容是如何实现
的，实现的具体要求及相关制度规定落实情况等。 
第六阶段：技术检查阶段。在某交通运输行业单位供应链管理能力自查工作中，针对部
分关键检查点，通过对其进行制度文审、人员访谈外，还需要进行现场检查，确认该检查点
是否与制度规定、人员访谈结果一致。对于现场检查工作，采取漏洞扫描、代码审计、手工
检查、渗透测试、抓包分析等手段，评估自查内容中的控制措施的有效性，做出是否符合自
查要求的最终判断。
第七阶段：分析与报告阶段。根据调研及检查现状，梳理总结风险问题，形成风险问
题清单。综合以上工作，建立风险评估报告。
第八阶段：风险处置阶段。针对自查中存在的安全问题，提出改进意见，制定风险处理建议，
并在后续工作中落实问题整改，跟踪整改情况。
7
典型供应链攻击案例复盘
086
典型供应链攻击案例复盘
7.1 IT 管理供应商 SolarWinds 供应链攻击事件
SolarWinds是一家国际IT管理软件供应商，Orion 是该公司的网络管理系统 （NMS） 产品。
该供应链攻击事件由安全公司 FireEye 发现，并在 2020 年 12 月公布，将幕后的国家级 APT
团伙称为 UNC2452。进一步的调查证实攻击者通过 Orion 软件更新包中植入的后门向下游植
入恶意后门代码。
美国多家全球 500 强企业、重要政府机构都是 SolarWinds 的客户，使得该事件在该国造
成了较大的社会影响。12 月 14 日，华尔街日报发表文章表示，美国财政部和商务部等数个
联邦机构网络系统遭到入侵，政府部门的通信可能已经遭到攻击势力监控。12 月 15 日，路
透社报道，SolarWinds入侵也被用于渗透到美国国土安全部（DHS）的计算机网络。12月16日，
据美国“政客”新闻网报道，美国国家安全事务助理罗伯特 • 奥布莱恩当地时间 15 日缩短了
他的出访行程，返回华盛顿，协调处理“美国政府机构遭遇网络攻击”事件。部分人怀疑白
宫也受到了本次攻击的影响。SolarWinds 事件的高影响度，除了受攻击影响的目标重要性高，
还因为它攻陷了由众多安全企业与国家安全部门共同构建的安全防线，令整个安全体系的安
全性与可靠性遭到了怀疑，足以撼动其根基。
7.1.1 攻击流程分析
表 7.1 SolarWinds 事件供应链攻击技术与脆弱性
生命周期
安全风险发生阶段
攻击技术
上游安全
上游企业安全问题
外部攻击
关键数据泄露
开发安全
开发环境安全
开发环境污染
CI/CD 集成环境污染
托管平台代码、存储平台污染
开发过程安全
遭受外部攻击
恶意代码植入
攻击者利用漏洞、密码爆破或社会工程学攻击的手段，获取了 SolarWinds 研发环境的控
制权限。长时间的潜伏与刺探之后，在 Orion 平台软件的核心服务组件代码中植入了恶意后门，
以在线升级包的形式被下游用户静默安装。包含恶意代码的升级程序利用来自厂商的合法数
字证书绕过验证，在两周的潜伏阶段结束后通过隐蔽的自定义 DNS 通讯，实现隐蔽的命令控
制与数据回传。攻击者对于产品代码与工作流程都十分熟悉，在后门代码中甚至调用了产品
中的合法组件，侧面显示了攻击者对 SolarWinds 研发环境长时间的实际控制。
软件供应链安全技术白皮书
087
图 7.1 SolarWinds 事件攻击流程图
7.1.2 问题分析
此次攻击事件是一起典型的软件供应链安全事件，攻击者利用了用户对上游企业的信任
关系（ATT&CK T1199），通过在恶意植入上游企业的产品及利用上游企业的数字签名，绕
过了安全防御机制，造成大量下游企业及用户遭受攻击的严重影响。
实际上，通过攻破上游企业获取目标源代码，或在其中植入恶意代码等的攻击行为早有
发生。近年来随着越来越多的企业将基础设施迁移至云端，供应链安全威胁出现了从本地到
云端蔓延的趋势。当本地 ADFS 服务器中的凭据被窃取，攻击者可通过签名伪造的 SAML 令牌，
伪造任意用户以任意权限访问企业的云端资产（包括 Azure、Vsphere）。这种攻击技术被称
为 Golden SAML，在本次事件中首次披露在野利用
[33]。这些云端资产的沦陷扩大了本次供
应链攻击事件的影响范围，对代码、数据等重要资产的修改权限为下一轮供应链攻击创造
了条件。
[33] https://www.splunk.com/en_us/blog/security/a-golden-saml-journey-solarwinds-continued.html
088
典型供应链攻击案例复盘
7.1.3 应对措施
7.1.3.1 上游厂商应加强研发过程安全及软件成分监控管理
供应商有责任做好产品的安全管控、关键信息（如密钥、账号）的保护，建立完善的漏
洞和安全事件的披露溯源机制。
对于供应商，假设在代码被感染，打包分发路径中引入 SBOM 自动生成机制，每次更新
时都生成该软件最新构建的 SBOM（类比于 github 的版本控制，将 SBOM 看作另一种版本控
制机制，自动化、强制性地指出每一处改动），可以辅助排查恶意代码。在构建环节结束后，
将 SBOM 与上一版本软件的 SBOM 比对，进行二次筛查，检查是否有计划外的异常改动（比
如计划中没有用到的软件包、第三方库，或者计划外文件内容出现更改等等），如果有异常
改动，立刻对源码重新筛查；如果没有计划外文件的改动，则在测试环节重点对新增 / 改动
的文件进行安全测试（IAST、SAST、SCA 等），筛查其异常行为。通过这些有效措施，代
码 / 软件植入的风险能够得到一定的控制。