cd/usr/local/mysql/data
另一个办法是使用二进制备份技术，即把数据库文件（不是转储文件）从一台主机复制到
mysql sampdb.sql
（1）创建转储文件：
处理表时，停止这两个服务器。
存储引擎。否则，第二台主机上的结果表可能会出现非常奇怪的内容。
将数据库从一个服务器复制到另一个
，下面这条命令将使用 scp 程序，把文件复制到
14.5将数据库复制到另一个服务器
523
---
## Page 544
不过，myisamchk 程序还提供了以下好处。
得这种好处。
的访问了。接下来的几节将描述如何使用CHECK TABLE、REPAIR TABLE和mysqlcheck 来获
外部工具程序来做，那么让服务器来做会更简单。
加载 sampdb 数据库里的 absence表：
这个表，重新加载那个转储文件来重新创建它。
替你连接服务器
说明。
考14.7节。
数据库丢失或无法修复，则需要使用数据库备份和二进制日志来恢复它们。具体操作方法请参
情就到此为止；否则，请按以下指南进行修复。
在其他一些情况下（例如，用户错误地删除了数据库、表或者表的内容），可能也需要恢复。
14.6检查和修复数据库表
复
微欣
主机的服务器进行通信的程序。这里的压缩仅限于网络传输，目标数据库里创建的表不会被压缩。
524
如果在服务器运行的情况下使用myisamchk程序，就必须使用锁定协议（参考14.2节)。
如果要修复发现有问题的InnoDB表，可以先使用mysqldump 把它转储成文件，然后删除
如果要检查InnoDB表，可以使用cHECK TABLE 语句，或者使用mysqlcheck程序（它会
下面大概介绍一下检查和修复InnoDB和MyISAM表的几种办法，随后会对它们进行详细
如果你怀疑某个表被破坏了，则需要对它进行错误检查。如果表没查出任何问题，那么事
这种损坏。如果你比较倒霉，那么就得恢复整个数据目录（如存有数据目录的硬盘报废了)。
受损的情况（如机器因为断电而关闭）。在这种情况下，服务器在恢复正常运行时通常能够
数据库受损的原因很多，受损程度也大不一样。如果运气好，你可能只会遇到一两个表轻
关于使用myisamchk 进行维护的信息请参考 F.3节。
口你可以让myisamchk使用更大的缓冲区，从而加快检查和修复操作的速度。当你的表
口当服务器停止时，你可以使用myisamchk。
正如本章前面提到的，在进行表维护操作时，如果你可以选择，是让服务器来做，还是让
口使用myisamchk程序，它可以直接操作表文件。
如果要检查和修复MyISAM表，
mysqlcheck sampdbabsence
本节描述的表检查和修复过程适用于处理轻微受损的情况。对于更为严重的问题，如表或
请注意，
口
实际上，绝大多数问题都很容易解决，
口先使用一种快速但不那么全面的修复方法。
%mysqldump --databases sampdb I mysql --compress -h boa.example.com sampdb
非常大时，这样做会很有帮助。
服务器，并执行这些语句）！
TABLE和REPAIR TABLE。
使用CHECKTABLE和REPAIRTABLE语句，或者使用mysqlcheck程序（它会替你连接到
mysql sampdb < absence.sql
或者再也找不到更好的方法为止。
如果这个方法不管用，那就试试那些更全面（但较慢）的修复方法，直到损坏得到修复
第14章数据库维护、备份和复制
--compress 选项适用于与远程主机的服务器进行通信的程序，而不适用于与本地
器，并执行这条语句)。
，可以选择以下方法。
absence.sql
，用不着求助于较全面的、较慢的修复方法。
下面的命令序列展示了如何检查、转储和重新
，这样，
。当服务器正在运行时，需要使用CREATE
，你便不用考虑使用锁定协议来协调表
修
---
## Page 545
个或多个表名。如果只给出了数据库名，那么 mysqlcheck 将检查数据库里的所有表。
引擎类型，与前面描述的CHECK TABLE和REPAIRTABLE的一样。
务器，并根据你指定的选项执行相应的语句。因此，mysqlcheck 能够检查或修复的表的存储
14.6.3使用mysqlcheck检查修复表
问题，只不过，在只应包含唯一值的索引里会出现重复值。
略它们。更多相关信息请参考附录E。
用以指明你想进行何种类型的修复。例如，
MyISAM、ARCHIVE 和 CSV 表。
14.6.2
们。
有在它们未被正确关闭时才会进行检查：
以指明你想进行何种类型的检查。例如，
MyISAM、ARCHIVE和CSV表，还可用它来检查视图。
14.6.1使用CHECKTABLE 检查表
通常情况下，在调用 mysqlcheck 时，后面需要带上一个数据库名，
如果要使用REPAIRTABLE，需要列出一个或多个表名，后面可以选择性地加上限定符，
如果没有选项，那么 REPAIRTABLE 会执行常规的表修复操作，这样也能修复大部分的
REPAIRTABLE语句为我们提供了一个对服务器的表进行修复的接口。
如果要使用CHECKTABLE，需要列出一个或多个表名，
下面是对几种可用修复选项的描述。这些选项适用于MyISAM表。其他存储引擎可能会忽
CHECK TABLE 语句为我们提供了一个对服务器的表进行检查的接口。可用它来检查 InnoDB、
口QUICK。它表示的是，只尝试快速修复索引，而不修复数据文件。
口EXTENDED。它表示的是，执行扩展修复，重建索引。
REPAIR TABLE tb11,tb12,tb13 QUICK;
口CHANGED。它表示的是，如果表是正常关闭的，并且自上次检查以来未被更改，则跳过
更多相关信息请参考附录E。
下面是对几种可用检查选项的描述。它们适用于MyISAM表。其他存储引擎可能会忽略它
CHECK TABLE tb11,tb12,tb13 FAST MEDIUM;
口
口
口
口
QUICK。它表示的是，只扫描索引，而不扫描数据行。
选项，则默认为它。
FAST。它表示的是，只有在表未正常关闭时，才检查它。
长
过
文件的内容，以便能够重建索引。如果索引丢失或损坏后不可恢复，则此选项非常有用。
USE_FRM。它所表示的是，使用表的.frm文件，重新初始化索引文件，并确定如何解释数据
在升级后很有用。
FOR UPGRADE。它表示的是，确定被检查表是否与当前的 MySQL 版本相兼容。此选项
MEDIUM。它表示的是，通过检查索引、扫描数据行的问题，
EXTENDED。
表检查。
，它应该作为最后的打算，并且只有在当前的MySQL版本与创建表时所使用的MySQL！
使用REPAIR
一样时才能使用它；否则，有可能会进一步破坏表。
，它表示的是，执行扩展检查，以试图确保表完全一致。
RTABLE修复表
下面这条语句将对3个表进行中等级别的检查，但只
下面这条语句将对3个表进行快速修复：
，后面可以选择性地加上限定符，
14.6检查和修复数据库表
，并进行校验。如果未给出
，然后选择性地跟上一
，可用它来修复
525
版
不
用
---
## Page 546
你肯定不想看到这样的情况发生：因懒情而没有保存恢复所需要的信息，从而导致表在弄丢之
你将身处险境。在继续往下读之前，你应该立刻启用二进制日志功能，并制作一份新的备份。
表更加容易，因为与应用表的二进制日志相比，应用数据库的二进制日志会更容易。
用 mysql来执行它们，进而重新应用在备份和问题出现这两个时间点之间所产生的更改。
过的表更改语句。mysqlbinlog可以把这些日志文件转换回文本形式的 SQL语句，因此可以使
mysqldump 这样的工具生成的转储文件，也可以是使用某种二进制备份方法复制出来的文件。
这些选项只适用于MyISAM表，其他存储引擎可能会忽略它们。
14.7
CHECKTABLE语句，这些选项只适用于MyISAM表，其他存储引擎可能会忽略它们。
个表相对应的语句。
有
那些语句需要你显式地给出每一个你想检查或修复的表的名字。如果需要对某个数据库里的月
并检查每个数据库里的所有表：
526
一些 mysqlcheck 选项和与之相对应的 REPAIR TABLE 语句的选项。对于 REPAIR TABLE 语句,
。本节会假设你已经做了数据库的备份，并且启用了二进制日志功能。如果不是这样，那么
数据恢复过程因需要恢复的信息量不同而有所差异。事实上，恢复数据库通常比恢复单个
备份文件能够把表恢复到备份时的状态。
有表进行检查，那么使用mysqlcheck会更加简单：它会替你找出数据库中表名，并调用与名
数据恢复过程涉及两个信息源：备份文件和二进制日志。
--repair
--repair
--repair --extended
--repair
对于MyISAM、ARCHIVE和CSV表，mysqlcheck 还可以执行表修复操作。下表列出了
--quick
--medium-check
--fast
--check-only-changed
默认情况下，mysqlcheck 将对表进行中等检查，但是可以使用选项显式地选择具体的操
如果指定了--all-databases 选项，那么 mysqlcheck 将检查所有数据库里的所有表。这
如果指定了--databases 选项,那么 mysqlcheck 将把所有非选项性参数解释为数据库名,
1
与直接执行CHECK TABLE和 REPAIRTABLE 语句相比，使用mysqlcheck更加方便，因为
%mysqlcheck --all-databases
不需要提供任何数据库名或表名参数：
%mysqlcheck--databasessampdb test
8mysqlcheck sampdb president member
如果在数据库名的后面带上表名，那么 mysqlcheck将只会检查那些表：
mysqlchecksampdb
extended
使用备份来恢复数据
第14章数据库维护、备份和复制
-quick
mysqlcheck选项
mysqlcheck选项
-use-frm
USE_FRM
QUICK
EXTENDED
无选项（执行标准的修复操作）
QUICK
MEDIUM
FAST
EXTENDED
CHANGED
。二进制日志文件里记载着自该次备份之后所执行
REPAIR TABLE选项
CHECKTABLE选项
，备份文件既可以是使用像
所
---
## Page 547
接复制到原来的那个数据库目录。为安全起见，
TABLE 语句，其作用是在重建该表之前先删除它。
mysqldump 时使用了--opt 或--add-drop-table 选项，那么转储文件里会多出一条 DROP
的数据库。实现方法是
制日志里提取部分内容恢复单个表的做法相比，
有适用于单个表的选项。在这种情况下，比较有用的策略可能是：首先，恢复更多的内容（如
包
mysqlbinlog 有一个--database选项，
余的内容。这部分很容易。
用这样的方法来恢复其中的某个表：先编辑这个文件，删除其他表的数据，然后再重新加载剩
只包含那个表，那么只需重新加载这个文件即可。如果转储文件包含有多个表的数据，可以采
14.7.2
的位置
这样才能保证在恢复数据库时，服务器不会去访问它们。然后，再把备份文件复制到它们原来
所有的远程连接，这也是一种不错的做法。在你把表都恢复好之后，需要关闭服务器，再重启
服务器会抱怨“无法找到权限表”。使用--skip-networking选项让服务器在恢复过程中拒绝
那些表，那么可以在服务器运行时，使用--skip-grant-tables选项来重新加载它们。否则，
重新加载它们。
了问题，那么你可能会需要这些内容。
14.7.1
14.4节。
后再也无法找回。如果要启用二进制日志功能，请参考12.8.4节。如果要制作备份，请参考
对于MyISAM表，还有一个办法，即使用 mysqldump 把第二个数据库目录里的表文件直
含这个表的整
恢复操作中更难的部分是，需要在二进制日志里把那些与这个表有关的内容提取出来。
（1）先找到包含你想要的那个表的数据库，
如果你使用的文件源自二进制备份（如使用tar 或cp做的备份），那么就要停止服务器，
如果需要恢复的数据库里有包含权限表的mysq1数据库，并且你打算使用转储文件来恢复
恢复单个表往往要比恢复数据库更难。如果你有一个由 mysqldump 生成的转储文件，其中
(3）利用二进制日志，重新应用在制作备份之后发生的数据更改。具体过程请参考14.7.3节。
（1）复制一份数据库目录的内容。如果以后在恢复过程中做错了什么，或者有什么地方出现
置（通常是在数据目录下），并重启服务器。
(2）使用最近的备份文件重新加载数据库。
恢复一个或多个数据库的基本步骤如下所示。
(3)
#
■mysqlbinlog的输出可能包含一条或多条初始数据库的USE语句。在将这个文件用作
■mysqldump生成的转储文件可能包含一条用于初始数据库的 USE语句。在将这个转储
文件用作 mysql 的输人之前，需要先更改该语句，或者将其删除。
恢复单个表
从第二个数据库开始，使用mysqldump 把你感兴趣的那个表转储成文件。
句，将其中的数据库换成第二个数据库。
mysql 的输人之前
恢复整个数据库
除原来的表，并把那个转储文件加载到原来的数据库，重建那个表。
整个数据库)，这样肯定会超出实际所需；然后，删除不需要的内容。与只从二进