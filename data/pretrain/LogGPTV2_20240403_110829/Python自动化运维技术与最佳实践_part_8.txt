指定 Content-Disposition 使秀attachment 则出现下载保存对话框。保存的职认文件名使用
由于qgma11使用gb18030页面编码，为保证中文文件名不出现乱码，对文件名进行编码转换
ilenane 指定
attach[Content-Disposition")-"attachmentfilLename=\*业务服务质量周根（12 周) xlsx\*,
(0E08tq6_) apooua* (=8-g2n_)apoap
msg.attach (attach)
#MIMEMu1tipart 对象附加 MIMEText 图件内容
邮件主题
msg[*From′]=FRON
部件发件人，部件头部可关
0.L=[,0,]6s
邮件收件人，邮件头部可见
try:
server = sntplib,SMTP()
创建一个SNTP（）对象
通过connect 方法连接sntp 主机
server.starttls ()
启动安全传输模式
server . 1ogin (*mymai18gnai1,com*, “nypassvord*)
server,sendnai1(FRoM, ro, msg.as_string ())
邮箱账号登承校秘
邮件发远
print“邮件发进成功！“
server,quit ()
新开smtp 连接
except Exception, e1
print "失败：“+str(e)
代码运行结果如图2-8所示，实现了发送业务服务质量周报的邮件功能。
---
## Page 55
一
官网业负服负质量用
 20144月11838(618上9:20 3/八C-07:00 98, 89618
间让务美平均时固表：
(1)
图2-8示例3的运行结果
口 2.3.1节 smtplib 模块的常用类与方法内容参考 https:/docs.python.org/2.7library/
smtplib.html.
 2.3.2节email.mime 常用类定又内容参考https://docs.python.org/2.7/library/email.
mime.html。
2.4探测Web服务质量方法
pycurl（http://pycurl.sourceforge.net）是一个用 C语言写的 libcurl Python实现，功能非常
强大，支持的操作协议有FTP、HTTP、HTTPS、TELNET 等，可以理解成Linux下curl命
令功能的Python封装，简单易用。本节通过调用pycurl提供的方法，实现探测Web服务质
量的情况，比如响应的HTTP状态码、请求延时、HTTP头信息、下载速度等，利用这些信
息可以定位服务响应慢的具体环节，下面详细进行说明。
pycurl模块的安装方法如下：
[anod tTeueoo
easy_insta11安装方法
pip install pycurl
pip 安装方法
---
## Page 56
第2章业务服务监控详解35
源码安装方法
要求cur1-config包支持，需要源码方式重新安装cur1
tar -zxvf cur1-7.36.0.tar.gz
 wget http://cur1-haxx.se/download/cur1-7.36.0.tar-gz
 cd cur1-7.36.0
 make s& make instal1
./configure
 export LD_LIBRARY_PATH=/ust/loca1/1ib
 vget https://pyp1 -python.org/packages/source/p/pyeur1/pycur1-7.19.3.1.tar.gz
 tar -zxvf pycur1-7.19.3.1.tar.gz
--no=check=certificate
 cd pycur1-7,19.3.1
 python setup ·py insta11 -=cur1-config=/usr/loca1/bin/cur1-config
校验安装结果如下：
[anod xodut >> pycurl version
'PycURL/7.19.3.1 1ibcur1/7.36.0 OpenSSL/1.0.1e z1ib/1.2.3*
2.4.1模块常用方法说明
pycurl.CurlO类实现创建一个libcurl包的Curl句柄对象，无参数。更多关于libcurl包的
介绍见http://curL.haxx.se/libcurl/c/libcurl-tutorial.html。下面介绍Curl对象儿个常用的方法。
口closeO方法，对应libcurl包中的curl_easy_cleanup方法，无参数，实现关闭、回收
Curl对象。
口performO方法，对应libcurl包中的curl_easy_perform方法，无参数，实现Curl对象
请求的提交。
setopt（option,value)方法，对应 libcurl包中的 curl_easy_setopt 方法，参数option 是通
过libcurl的常量来指定的，参数value的值会依赖option，可以是一个字符串、整型、
长整型、文件对象、列表或函数等。下面列举常用的常量列表：
c = pycur1.Cur1 ()
创建一个cur1对象
C.setOpt (pyeur1.CONNECTTINEOUT, 5)
c,setopt (pycur1,TIMEoUr, 5)
请求超时时间
连接的等得时间，设置为0则不等快
c,setopt (pycur1.NOPROGR&Ss, 0)
是否层蔽下载进度条，事0则屏蔽
c.setopt (pycur1 ,MAXREDIRS, 5)
指定日TTP重定向的最大数
c.setopt (pycur1.FORBID_REUSE, 1)
完成交互后强制断开连接，不重用
c.setopt (pycur1 .FRESH_cONNECT, 1)
强制获取新的连楼，即替代缓存中的连接
c,setopt (pycur1 .DNS_CACHS_TIMEOUr, 60)
设置保夺 DNS 信息的时间,默认为 120 移
C.setopt (pycur1.UsERAGENT, *Mozi11la/5.2 (compatible) MSIE 6.0; Windous NT 5.1)
c , setopt (pycur1 , URL, *http : //www.baidu, com*)
指定遣求的URL
SV1: .NET CLR 1.1.4322; .NET CLR 2.0.50324)*)
配置请求 HTTP头的User-Agent
c.setopt (Pycur1 .HEADERFUNCTION,getheader)将返国的 HTP HEADER 定润到据调通数 getheader
---
## Page 57
36第一部分基础简
C,setopt (pycur1,WRITEFUNCTIoN, getbody)
将返图的内容定向到园调函数getbody
C,setopt (pycur1 ,wRITEHEADER, fileobj)
将返因的BTTP HEADER 定病到fileobj 文件对象
c,setopt (pycur1,WRITEDATA, fileobj)
将返团的 HTML 内容定向到 fileobj 文件对象
getinfo（option)方法，对应libcurl包中的curl_easy_getinfo方法，参数option是通过
libcurl 的常量来指定的。下面列举常用的常量列表：
c = pycur1,Cur1 ()
+划建一个cur1对象
C.getinfo (pycurl .HTTP_CoDE)
c,getinfo (pyeurl ,TorAL_rIME)
延因的 HTTP 状态码
传输结束所消耗的总时间
c.getinfo（pycur1.NAMELOOKUP_TIME）oNS繁析所消耗的时网
C.getinfo (pycurl ,CoNNECT_TIME)
建立连接所消耗的时间
C,getInfo (pyeur1 .PRETRANSFER_TIME)
从建立连接到准备传输所消耗的时间
c.getinfo (pyeur1 .STARTTRANSFER_TIME)
从建立连接到传输开始消耗的时间
c .getinfo (pycur1 , REDIRECT_TIME)
重定向所消耗的时间
c.getinfo (pyeur1 SIZE_UPLOAD)
上传数据包大小
c.getInfo (pycurl.SI2E_DoWNLoAD)
下载数据包大小
c .getinfo (pyeur1 SPBED_DOwNLOAD)
平购下载速度
c.getinfo (pycur1 ,SPBED_UPLOAD)
平均上传速度
c.getinfo (pycurl .HEADER_SIZE)
HTTP 头御大小
我们利用libcurl包提供的这些常量值来达到探测Web服务质量的目的。
2.4.2实践：实现探测Web服务质量
HTTP服务是最流行的互联网应用之一，服务质量的好坏关系到用户体验以及网站的
运营服务水平，最常用的有两个标准，一为服务的可用性，比如是否处于正常提供服务状
态，面不是出现404页面未找到或500页面错误等：二为服务的响应速度，比如静态类文件
下载时间都控制在毫秒级，动态CGI为秒级。本示例使用pycurl的setopt与getinfo方法实
现HTTP服务质量的探测，获取监控URL返回的HTTP状态码，HTTP状态码采用pycurl.
HTTP_CODE常量得到，以及从HTTP请求到完成下载期间各环节的响应时间，通过pycurl.
NAMELOOKUP_TIME、 pycurl. CONNECT_TIME、pycurl. PRETRANSFER_TIME、pycurl.
R等常量来实现。另外通过pycurl.WRITEHEADER、pycurl.WRITEDATA常量得到目标URL
的HTTP响应头部及页面内容。实现源码如下：
[ /home/test/pycurl/simple1.py 1
# -*- coding: utf-8 --
import os, sys
import tine
import sys
import pycur1
URL=*http: //ww.google.com.hk"
探测的目标URL
c = pycur1,Cur1 ()
+划是个 Cur1对家
---
## Page 58
第2章业务服务监控详解37
c.setopt (pycur1.URL, URL)
定又请求的URL常量
c.setopt (pycurl.cONNECTrIMEOUT, 5)
定义请求连接的等特时间
c.setopt (pycur1.TIMEoUT,5)
定文请求超时时间
c.setopt (pycur1.NOPROGRESS, 1)
屏藏下载进度条
c.setopt (pycur1,FORBID_REUSE, 1)
完成交互后强制断开连楼，不重用
c.setopt (pycur1.MAXREDIRS, 1)
指定HTTP重定向的最大数为1
c.setopt (pycur1.DNS_CACHE_TIMEoUT, 30)
设置保存DNS信患的时间为30秒
创建一个文件对象，以”wb”方式打开，用来春储返国的http头部及页面内容
"wb")
c.setopt (pycur1,MRITEHEADER,  indexfile)
将返因的 HTTPHEADER 定肉到 Lndexile 文件
对象
c.setopt (pycur1.MRITEDATA, indexfile)
将返因的HTML内事定肉到Lndexfi1e文件对象
tey:
c-perform ()
要交请求
except Exception, e:
print "connecion error:"+str(e)
indexfile,close ()
c.close()
sys.exit ()
NAMELOOKUP_TIME -c-getinfo (c.NAMELOOKUP_TIME)
获取DNS邮析时间
CONNECT_TIME -c.getinfo(c.CONNECT_TIME)
获取建立连接时间
PRETRANSFER_TIME =
C.getinfo(c,PRETRANSFER_TIME)
获取从建立连接到准备传输所消
耗的时间
STARTTRANSFER_TIME = C,getinfo (c,STARTTRANSFER_TIME)
获取风建立连接到传输开始消
耗的时间
TOTAL_TIME = C.getinfo (c,TOTAL_rIME)
获取传输的忍时间
HTTP_coOE -c.getinfo (c.HTrP_coDE)
SIZE_DOMNLOAD =c.getinfo(c.SIZE_DOWNLOAD)
获取HTTP状高码
获取下载数据包大小
HEADER_SIZE - c.getinfo (c.HEADER_SIZE)
获取HTTP头都大小
SPEED_DOWNLOAD=c getinfo (c.SPEED_DOWNLOAD)
获取平地下载速度
打印输出相关数据
print “HTTP (R苏码;s*(NTTP_COOE)
print*DNS 解析时间:4.2f ms*% (NAMELO0KUP_TIME*1000)
print*建立连接时间：.2f ms$（CONNECT_TIME*1000)
Pr1nt *准各传输时间:.2f ms*%(PRETRANSFER_TIME*1.000)
print*传输开始时网：.2f ms*$(STARTTRANSFER_TIME*1000)
print*传输结求总时间：$.2f ms*$(TOTAL_TIME*1000)
print*下氨数据包大小：d bytes/s*(SIZB_DOWNLOAD)
print *HTTP 头部大小; td byte* (HEADER_SIZE)
print *平均下载速度; d bytes/s* 3 (SPEED_DOWNLOAD)
关闭文件及Cur1对象
indexfile,close ()
c.close (1
代码的执行结果如图2-9所示。
---
## Page 59
38第一部分基础篇
约下座：23656bytes/s
图2-9探测到的Web服务质量
查看获取的HTTP文件头部及页面内容文件content.txt，如图2-10所示。
ed,23Aer201415:19:04GTi
NTIFACOR
NTD-42-P9B15187V
isnotaPPpolicyl Seehttp://w
ncript-(funct
012373,
827,4837281,4857285,4057261,4012336,6380335,83N0212,8500965,850
图 2-10content.txt 截图
?
口2.4.1节pycurl 模块的常用类与方法说明参考官网http://pycurl.sourceforge.net/
doc/index.html.
---
## Page 60
第3章
Clnyder3
定制业务质量报表详解
在日常运维工作当中，会涉及大量不同来源的数据，比如每天的服务器性能数据、平台
监控数据、自定义业务上报数据等，需要根据不同时段，周期性地输出数据报表，以方便管
理员更加清晰、及时地了解业务的运营情况。在业务监控过程中，也需要更加直观地展示报
表，以便快速定位问题。本章介绍Excel操作模块、rrdtool数据报表、scapy包处理等，相关
知识点运用到运营平台中将起到增色添彩的作用。
3.1数据报表之Excel操作模块
Excel是当今最流行的电子表格处理软件，支持丰富的计算函数及图表，在系统运营方
面广泛用于运营数据报表，比如业务质量、资源利用、安全扫描等报表，同时也是应用系统
常见的文件导出格式，以便数据使用人员做进一步加工处理。本节主要讲述利用Python操作
Excel的模块XlsxWriter（https://xlsxwriter.readthedocs.org），可以操作多个工作表的文字、数
字、公式、图表等。XlsxWriter模块具有以下功能：
口100%兼容的 Excel XLSX文件，支持 Excel2003、Excel 2007等版本；
口支持所有Excel单元格数据格式；
口单元格合并、批注、自动筛选、丰富多格式字符串等；
口支持工作表PNG、JPEG图像，自定义图表；
口内存优化模式支持写人大文件。
XlsxWriter模块的安装方法如下：
---
## Page 61
40第一部分基础篇
# pip instal1 XlsxMriter
easy_install Xlsxiriter
pip 安装方涨
easy_instal1 安装方法
源码安装方法
 cur1 -0 -L http://github,com
 tar zxvf master.tar.gz
sudo python setup-py insta11
#cd XlsxWriter=naster/
下面通过一个简单的功能演示示例，实现插人文字（中英字符）、数字（求和计算）、图
片、单元格格式等，代码如下：
[ /home/test/Xlsx Writer/simple1.py ]
coding: utf-8
import xisxwriter
workbook = xlsxvriter,Workbook(*demol.x1sx*)
创建一个Excel文件
worksheet = workbook,add_vorksheet ()
创建一个工作张对象
vorksheet,set_column (*A:A′, 20)
设定第一列（A）宽度为20像素
bold = workbook,add_format ((*bold’: True))
定义一个加相的格式对象
worksheet,write (*A1′,
'Be11o′)
A1单元格写入“Bello
vorksheet,write (*A2′,