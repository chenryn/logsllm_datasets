Physical Device and Device Type Fingerprinting. IEEE Transactions on Dependable
and Secure Computing 12, 5 (Sept 2015), 519–532. https://doi.org/10.1109/TDSC.
2014.2369033
[46] M. Ross. 2006. Introduction to Probability Models, Ninth Edition. Academic Press,
[47] Yasser Shoukry, Paul Martin, Yair Yona, Suhas Diggavi, and Mani Srivastava.
2015. PyCRA: Physical Challenge-Response Authentication For Active Sensors
Under Spoofing Attacks. In Proceedings of the 22Nd ACM SIGSAC Conference on
Computer and Communications Security (CCS ’15). ACM, New York, NY, USA,
1004–1015. https://doi.org/10.1145/2810103.2813679
[48] J. Slay and M. Miller. 2008. Lessons Learned from the Maroochy Water Breach.
Inc., Orlando, FL, USA.
Springer 620 US, Boston, MA (2008), 73–82.
[49] Yunmok Son, Hocheol Shin, Dongkwan Kim, Youngseok Park, Juhwan Noh,
Kibum Choi, Jungwoo Choi, and Yongdae Kim. 2015. Rocking Drones with
Intentional Sound Noise on Gyroscopic Sensors. In Proceedings of the 24th USENIX
Conference on Security Symposium (SEC’15). USENIX Association, Berkeley, CA,
USA, 881–896. http://dl.acm.org/citation.cfm?id=2831143.2831199
Session 12: Physical Attacks and DefenseASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea494[50] A. Sridhar and M. Aditya. 2016. Generalized Attacker and Attack Models for
Cyber Physical Systems. In 40th IEEE COMPSAC.
[51] S. Sridhar, A. Hahn, and M. Govindarasu. 2012. Cyber Physical System Security
for the Electric Power Grid. Proc. IEEE 100, 1 (Jan 2012), 210–224. https://doi.
org/10.1109/JPROC.2011.2165269
[52] David I Urbina, Jairo A Giraldo, Alvaro A Cardenas, Nils Ole Tippenhauer, Junia
Valente, Mustafa Faisal, Justin Ruths, Richard Candell, and Henrik Sandberg.
2016. Limiting the impact of stealthy attacks on industrial control systems. In
Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 1092–1105.
[53] C.S. van Dobben de Bruyn. 1968. Cumulative sum tests : theory and practice.
London : Griffin.
[54] Xiukun Wei, Michel Verhaegen, and Tim van Engelen. 2010. Sensor fault detection
and isolation for wind turbines based on subspace identification and Kalman
filter techniques. International Journal of Adaptive Control and Signal Processing
24, 8 (2010), 687–707. https://doi.org/10.1002/acs.1162
[55] Peter Welch. 1967. The use of fast Fourier transform for the estimation of power
spectra: a method based on time averaging over short, modified periodograms.
IEEE Transactions on audio and electroacoustics 15, 2 (1967), 70–73.
[56] Wired. 2015. A Cyberattack Has Caused Confirmed Physical Damage for the
Second Time Ever. https://www.wired.com/2015/01/german-steel-mill-hack-
destruction/. (2015).
[57] S. Yasser, M. Paul, T. Paulo, and S. Mani. 2013. Non-invasive Spoofing Attacks
for Anti-lock Braking Systems. In CHES, Springer Link, Vol. 8086. 55–72.
A PROOF PROPOSITION 1.
For the process (1), the Kalman filter (3)-(6), we can represent
estimation error as, ek +1 = xk +1 − ˆxk +1, which in turn gives,
ek +1 = A(xk − ˆxk) − Lηk + vk .
ek +1 = (A − LC)ek + vk − Lηk
(28)
Considering estimation error as in (28), we start with estimator’s
initial state same as real system state, then e1 = 0. For second
iteration of estimation, from (28) we have e2 = (A−LC)e1 +v1 +Lη1,
for e1 = 0, it gives e2 = v1 +Lη1. Similarly we get e3 = (A−LC)(v1−
Lη1)+v2−Lη2 and e4 = (A−LC)2(v1−Lη1)+(A−LC)(v2−Lη2)+(v3−
Lη3). By induction, we can generalize expression for k iterations of
an estimator and estimation error can be represented as,
ek =
(A − LC)i(vk−i−1 − Lηk−i−1)
(29)
i =0
For residual we have rk = yk − ˆyk, with ˆyk = C ˆxk, it becomes
rk = C(xk − ˆxk) + ηk,
(30)
By replacing ek in (30) we get an expression for residual in steady
state that is a function of process and sensor noise as given by
following expression,
rk = Cek + ηk
k−2
(cid:40)k−2
i =0
rk = C
(A − LC)i(vk−i−1 − Lηk−i−1)
(cid:41)
+ ηk
(31)
■
B STATISTICAL DETECTORS: A PRIMER
Residuals and Hypothesis Testing: In this work, we assess the
performance of two model-based fault detection procedures (the
Bad-Data and the CUSUM detectors) for a variety of attacks. These
procedures rely on a state estimator (e.g., Kalman filter) to predict
the evolution of the system. The estimated values are compared
with sensor measurements ¯yk (which may have been attacked). The
difference between the two should stay within a certain threshold
13
under normal operation, otherwise an alarm is triggered to point a
potential attack. Define the residual random sequence rk , k ∈ N as
(32)
rk := ¯yk − C ˆxk = Cek + ηk + δk .
If there are no attacks, the mean of the residual is
E[rk +1] = CE[ek +1] + E[ηk +1] = 0m×1.
(33)
where 0m×1 denotes an m × 1 matrix composed of only zeros, and
the covariance is given by
Σ := E[rk +1rT
k +1] = CPCT + R2.
(34)
For this residual, we identify two hypotheses to be tested, H0 the
normal mode (no attacks) and H1 the faulty mode (with attacks).
For our particular case of study, the pressure at the nodes and the
water level in the tank are the outputs of the system. Using this data
along with the state estimates, we construct our residuals. Then,
we have:
H0 :
or H1 :
(cid:40)
(cid:40)
E[rk] = 0m×1,
E[rkrT
k ] = Σ,
E[rk] (cid:44) 0m×1,
E[rkrT
k ] (cid:44) Σ.
We can formulate the hypothesis testing in a more formal manner
using existing change detection techniques (as explained in the
following) based on the statistics of the residuals.
Cumulative Sum (CUSUM) Detector: The CUSUM procedure is
driven by the residual sequences. In particular, the input to the
CUSUM procedure is a distance measure, i.e., a measure of how
deviated the estimator is from the actual system, and this measure
is a function of the residuals. In this work, we assume there is
a dedicated detector on each sensor (or on any sensor we want
to include in the detection scheme). Throughout the rest of this
paper we will reserve the index i to denote the sensor/detector,
i ∈ I := {1, 2, . . . , m}. Thus, we can partition the attacked output
vector as ¯yk = col(¯yk,1, . . . , ¯yk,m) where ¯yk,i ∈ R denotes the i-th
entry of ¯yk ∈ Rm; then
¯yk,i = Ci xk + ηk,i + δk,i ,
(35)
with Ci being the i-th row of C and ηk,i and δk,i denoting the i-th
entries of ηk and δk, respectively. Inspired by the empirical work
in [11], we propose the absolute value of the entries of the residual
sequence as distance measure, i.e.,
zk,i := |rk,i| = |Ciek + ηk,i + δk,i|.
(36)
Note that, if there are no attacks, rk,i ∼ N(0, σ
denotes
the i-th entry of the diagonal of the covariance matrix Σ. Hence,
δk = 0 implies that |rk,i| follows a half-normal distribution [46]
with
i ), where σ
2
2
i
E(cid:2)|rk,i|(cid:3) =
√2√
π
σi and var(cid:2)|rk,i|(cid:3) = σ
2
i
(cid:16)1 − 2
(cid:17)
π
(37)
.
Next, having presented the notion of distance measure, we intro-
duce the CUSUM procedure. For a given distance measure zk,i ∈ R,
the CUSUM of Page [41] is presented in (19).
From (19), it can be seen that Sk,i accumulates the distance measure
zk,i over time. The thresholds τi and bias bi are selected based on
a certain false alarm rate [1, 38, 53].
Bad-Data Detector: We have also implemented the Bad-Data de-
tector for this case study because it is widely used in the CPS
security literature [26, 32]. For the residual sequence rk,i given by
Session 12: Physical Attacks and DefenseASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea495(15), the Bad-Data detector is defined in (20). Using the Bad-Data
detector an alarm is triggered if distance measure |rk,i| exceeds the
threshold αi. Similar to the CUSUM procedure, the parameter αi
is selected to satisfy a required false alarm rate A∗
. An interested
i
reader is referred to [37].
C SUPPORT VECTOR MACHINE CLASSIFIER
SVM is a data classification technique used in many areas such as
speech recognition, image recognition and so on [7]. The aim of
SVM is to produce a model based on the training data and give
classification results for testing data. For a training set of instance-
label pairs (xi , yi), i = 1, ..., k where xi ∈ Rn and y ∈ {1,−1}k,
SVM require the solution of the following optimization problem:
k
ζi
1
2wT w + C
yi(wT ϕ(xi) + b) ≥ 1 − ζi ,
i =1
minimize
w,b,ζ
subject to
where ζi ≥ 0.
Figure 8: Overview of WADI testbed [6]. Solid arrows indi-
cate flow of water and sequence of processes. S and A repre-
sent, respectively, sets of sensors and actuators.
(38)
Table 6: Validating SWaT system model obtained from first
principles.
The function ζ maps the training vectors into a higher dimen-
sional space. In this higher dimensional space a linear separating
hyperplane is found by SVM, where C > 0 is the penalty parameter
of the error term. For the kernel function in this work we use the
radial basis function:
(39)
In our work, we have multiple sensors to classify. Therefore,
K(xi , xj) = exp(−γ||xi − xj||2), γ > 0.
multi-class SVM library LIBSVM [14] is used.
D WATER TREATMENT TESTBED
It is a fully operational (research facility) scaled down water treat-
ment plant producing 5 gallons/minute of doubly filtered water, this
testbed mimics large modern plants for water treatment. Following
is the brief overview of the testbed, for further details, please refer
to [31].
Water Treatment Process: The treatment process consists of six
distinct stages each controlled by an independent Programmable
Logic Controller (PLC). Control actions are taken by the PLCs
using data from sensors. Stage P1 controls the inflow of water to
be treated by opening or closing a motorized valve MV-101. Water
from the raw water tank is pumped via a chemical dosing station
(stage P2, chlorination) to another UF (Ultra Filtration) feed water
tank in stage P3. A UF feed pump in P3 sends water via UF unit
to RO (Reverse Osmosis) feed water tank in stage P4. Here an RO
feed pump sends water through an ultraviolet dechlorination unit
controlled by a PLC in stage P4. This step is necessary to remove any
free chlorine from the water prior to passing it through the reverse
osmosis unit in stage P5. Sodium bisulphate (NaHSO3) can be added
in stage P4 to control the ORP (Oxidation Reduction Potential). In
stage P5, the dechlorinated water is passed through a 2-stage RO
filtration unit. The filtered water from the RO unit is stored in the
permeate tank and the reject in the UF backwash tank. Stage P6
controls the cleaning of the membranes in the UF unit by turning
on or off the UF backwash pump.
Sensor (Output Channel)
Ultrasonic Level Sensor (Tank-1)
Ultrasonic Level Sensor (Tank-2)
VAF value
100.0%
100.0%
E WATER DISTRIBUTION TESTBED
It is an operational testbed supplying 10 US gallons/min of filtered
water. It represents a scaled-down version of a large water distribu-
tion network in a city. It contains three distinct control processes
labeled P1 through P3, each controlled by its own set of PLCs as
shown in Figure 8. An interested reader might look at [6] to under-
stand the functionality of the testbed. Following is a brief overview
of the WADI.
Stages in WADI: Water distribution process is segmented into the
following sub-processes: P1: Primary grid, P2: Secondary grid, P3:
Return water grid.
Primary grid: The primary grid contains two raw water tanks of
2500 liters each, and a level sensor (1-LIT-001) to monitor the water
level in the tanks. Water intake into these two tanks can be from the
water treatment plant, from Public Utility Board inlet, or from the
return water grid. A chemical dosing system is installed to maintain
adequate water quality. Sensors are installed to measure the water
quality parameters of the water flowing into and out of the primary
grid.
Secondary grid: This grid has two elevated reservoir tanks and six
consumer tanks. Raw water tanks supply water to the elevated
reservoir tanks and, in turn, these tanks supply water to the con-
sumer tanks based on a pre-set demand pattern. Once consumer
tanks meet their demands, water drains to the return water grid.
Return water grid is equipped with a tank.
F SUPPORTING FIGURES
In the following, supporting figures auxiliary results are shown.
Figure 9 shows threshold validation for CUSUM and Bad-Data
detectors on SWaT testbed. Figure 10 shows detection using Bad-
Data detector. Figure 11 shows system model validation of SWaT.
14
Session 12: Physical Attacks and DefenseASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea496Figure 9: (a): False alarm rate of Bad-Data and CUSUM detector at Tank-1. (b): False alarm rate of Bad-Data and CUSUM detector
at Tank-2.
Figure 10: Constant bias attack detection by Bad-Data detector. It can be observed that as attack starts at 11s, it’s detected.
Figure 11: SWaT System Model Validation for Tank-1.
15
Bad-DataBad-DataCUSUMCUSUM(a)(b)Real-time System States: Tank-1Bad-Data Detector: Tank-1Number of Measurements050010001500200025003000Water Flow Value0.40.60.811.2Ultrasonic Level Sensor MeasurementsSensor Measurement (Real Testbed)Sensor Measurement Estimate (System Model)Number of Measurements050010001500200025003000Residual#10-3-2024Residual Values#10-3-1-0.500.51Number of Readings050010001500Session 12: Physical Attacks and DefenseASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea497