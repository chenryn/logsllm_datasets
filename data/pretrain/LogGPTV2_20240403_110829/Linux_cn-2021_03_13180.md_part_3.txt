从被许可人的角度来看，这是 MIT 许可证中最重要的七个字。主要的法律问题就是因侵犯版权而被起诉，和因侵犯专利而被起诉。无论是版权法还是专利法都没有将 “ 处置   to deal in ” 作为一个术语，它在法庭上没有特定的含义。因此，任何法庭在裁决许可人和被许可人之间的纠纷时，都会询问当事人对这一措辞的含义和理解。法庭将看到的是，该措辞有意宽泛和开放。它为被许可人提供了一个强有力的论据，反对许可人提出的任何主张 —— 即他们不允许被许可人使用该软件做那件特定的事情，即使在授予许可证时双方都没有明显想到。
> 
> including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
> 
> 
> 
> 
> 包括不受限制地使用、复制、修改、合并、发布、分发、转授许可和/或出售该软件副本，以及再授权被配发了本软件的人如上的权利，
> 
> 
> 
没有一篇法律是完美的、“意义上完全确定”、或明确无误的。小心那些假装不然的人。这是 MIT 许可证中最不完美的部分。主要有三个问题：
首先，“ 包括不受限制地   including without limitation ”是一种法律反模式。它有多种衍生：
*  包括，但不受限制   including, without limitation 
*  包括，但不限于前述的一般性   including, without limiting the generality of the foregoing 
*  包括，但不限于   including, but not limited to 
* 很多、很多毫无意义的变化
所有这些都有一个共同的目标，但都未能可靠地实现。从根本上说，使用它们的起草者也会尽量试探着去做。在 MIT 许可证中，这意味着引入“ 处置软件   dealing in the Software ”的具体例子 — “使用、复制、修改”等等，但不意味着被许可方的行为必须与给出的例子类似，才能算作“处置”。问题是，如果你最终需要法庭来审查和解释许可证的条款，法庭将把它的工作看作是找出这些语言的含义。如果法庭需要决定“ 处置   deal in ”的含义，它不能“无视”这些例子，即使你告诉它。我认为，“不受限制地处置本软件”本身对被许可人更好，也更短。
其次，作为“ 处置   deal in ”的例子的那些动词是一个大杂烩。有些在版权法或专利法下有特定的含义，有些稍微有或根本没有含义：
* “ 使用   use ”出现在 [《美国法典》第 35 篇，第 271(a)节](https://www.govinfo.gov/app/details/USCODE-2017-title35/USCODE-2017-title35-partIII-chap28-sec271)，这是专利法中专利权人可以起诉他人未经许可的行为的清单。
* “ 复制   copy ”出现在 [《美国法典》第 17 篇，第 106 节](https://www.govinfo.gov/app/details/USCODE-2017-title17/USCODE-2017-title17-chap1-sec106)，即版权法列出的版权所有人可以起诉他人未经许可的行为。
* “ 修改   modify ”既不出现在版权法中，也不出现在专利法中。它可能最接近版权法下的“ 准备衍生作品   prepare derivative works ”，但也可能涉及改进或其他衍生发明。
* 无论是在版权法还是专利法中，“ 合并   merge ”都没有出现。“ 合并   merger ”在版权方面有特定的含义，但这显然不是这里的意图。相反，法庭可能会根据其在行业中的含义来解读“合并”，如“合并代码”。
* 无论是在版权法还是专利法中，都没有“ 发布   publish ”。由于“软件”是被发布的内容，根据《[版权法](https://www.govinfo.gov/app/details/USCODE-2017-title17/USCODE-2017-title17-chap1-sec106)》，它可能最接近于“ 分发   distribute ”。该法令还包括“公开”表演和展示作品的权利，但这些权利只适用于特定类型的受版权保护的作品，如戏剧、录音和电影。
* “ 分发   distribute ”出现在《[版权法](https://www.govinfo.gov/app/details/USCODE-2017-title17/USCODE-2017-title17-chap1-sec106)》中。
* “ 转授许可   sublicense ”是知识产权法中的一个总称。转授许可的权利是指把自己的许可证授予他人，有权进行你所许可的部分或全部活动。实际上，MIT 许可证的转授许可的权利在开源代码许可证中并不常见。通常的做法是 Heather Meeker 所说的“ 直接许可   direct licensing ”方式，在这种方法中，每个获得该软件及其许可证条款副本的人都直接从所有者那里获得授权。任何可能根据 MIT 许可证获得转授许可的人都可能会得到一份许可证副本，告诉他们其也有直接许可证。
* “ 出售副本   sell copies ”是个混杂品。它接近于《[专利法](https://www.govinfo.gov/app/details/USCODE-2017-title35/USCODE-2017-title35-partIII-chap28-sec271)》中的“ 要约出售   offer to sell ”和“ 出售   sell ”，但指的是“ 副本   coyies ”，这是一种版权概念。在版权方面，它似乎接近于“ 分发   distribute ”，但《[版权法](https://www.govinfo.gov/app/details/USCODE-2017-title17/USCODE-2017-title17-chap1-sec106)》没有提到销售。
* “ 允许被配发了本软件的人这样做   permit persons to whom the Software is furnished to do so ”似乎是多余的“转授许可”。这也是不必要的，因为获得副本的人也可以直接获得许可证。
最后，由于这种法律、行业、一般知识产权和一般使用条款的混杂，并不清楚 MIT 许可证是否包括专利许可。一般性语言“ 处置   deal in ”和一些例子动词，尤其是“使用”，指向了一个专利许可，尽管是一个非常不明确的许可。许可证来自于版权持有人，而版权持有人可能对软件中的发明拥有或不拥有专利权，以及大多数的例子动词和“ 软件   the Software ”本身的定义，都强烈地指向版权许可证。诸如 [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0) 之类的较新的宽容开源许可分别具体地处理了版权、专利甚至商标问题。
#### 三个许可条件
> 
> subject to the following conditions:
> 
> 
> 
> 
> 须在下列条件下：
> 
> 
> 
总有一个陷阱！MIT 许可证有三个！
如果你不遵守 MIT 许可证的条件，你就得不到许可证提供的许可。因此，如果不能履行条件，至少从理论上说，会让你面临一场诉讼，很可能是一场版权诉讼。
开源软件的第二个伟大思想是，利用软件对被许可人的价值来激励被许可人遵守条件，即使被许可人没有支付任何许可费用。最后一个伟大思想，在 MIT 许可证中没有，它构建了许可证条件：像 [GNU 通用公共许可证](https://www.gnu.org/licenses/gpl-3.0.en.html)（GPL）这样的左版许可证，使用许可证条件来控制如何对修改后的版本进行许可和发布。
#### 声明条件
> 
> The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
> 
> 
> 
> 
> 上述版权声明和本许可声明应包含在该软件的所有副本或实质成分中。
> 
> 
> 
如果你给别人一份软件的副本，你需要包括许可证文本和任何版权声明。这有几个关键目的：
1. 给别人一个声明，说明他们有权使用该公共许可证下的软件。这是直接授权模式的一个关键部分，在这种模式下，每个用户直接从版权持有人那里获得许可证。
2. 让人们知道谁是软件的幕后人物，这样他们就可以得到赞美、荣耀和冷冰冰的现金捐赠。
3. 确保保修免责声明和责任限制（在后面）伴随该软件。每个得到该副本的人也应该得到一份这些许可人保护的副本。
没有什么可以阻止你对提供一个副本、甚至是一个没有源代码的编译形式的副本而收费。但是当你这么做的时候，你不能假装 MIT 代码是你自己的专有代码，也不能在其他许可证下提供。接受的人要知道自己在“公共许可证”下的权利。
坦率地说，遵守这个条件正在崩溃。几乎所有的开源许可证都有这样的“ 归因   attribution ”条件。系统和装机软件的制作者往往明白，他们需要为自己的每一个发行版本编制一个声明文件或“许可证信息”屏，并附上库和组件的许可证文本副本。项目监管型基金会在教授这些做法方面起到了重要作用。但是整个 Web 开发者群体还没有取得这种经验。这不能用缺乏工具来解释，工具有很多，也不能用 npm 和其他资源库中的包的高度模块化来解释，它们统一了许可证信息的元数据格式。所有好的 JavaScript 压缩器都有保存许可证标题注释的命令行标志。其他工具可以从包树中串联 `LICENSE` 文件。这实在是没有借口。
#### 免责声明
> 
> The Software is provided “as is”, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement.
> 
> 
> 
> 
> 本软件是“如此”提供的，没有任何形式的明示或暗示的保证，包括但不限于对适销性、特定用途的适用性和不侵权的保证。