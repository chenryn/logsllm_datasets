When trying to achieve this **import functionality** according to atomic
design:
    import { Button, Avatar, ...etc } from '~/components/atoms'
I use an `index.js` file @ `src/components/atoms/index.js` which contains
this:
    const req = require.context(".", true, /\.\/[^/]+\/index\.js$/);
    req.keys().forEach(key => {
      const componentName = key.replace(/^.+\/([^/]+)\/index\.js/, "$1");
      module.exports[componentName] = req(key).default;
    });
**I know it looks crazy ha!** All it does is go through all the components in
the `src/components/atoms` dir and **exports them** so I don't have to do it
manually ( _because it gets annoyingly tedious when you have lots of
components_ ) in the `index.js` file like:
    import Button from "./Button";
    import Avatar from "./Avatar";
    export { Avatar, Button };
  * I have searched the issues of this repository and believe that this is not a duplicate.
Here are some similar issues that deal with absolute imports: #342 #714
## Expected Behavior
I expect the components to resolve correctly.
## Current Behavior
It is throwing a `TypeError: require.context is not a function` error.
I expect this is due to the fact that `require.context` is **not available in
node** because components are being server rendered.
## Your Environment
Tech | Version  
---|---  
next | 2.0.0  
node | 9.1.0  
OS | Ubuntu 17.10  
browser | Chrome 62