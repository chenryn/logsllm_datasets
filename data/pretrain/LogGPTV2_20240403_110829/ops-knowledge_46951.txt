User: 分析以下代码中可能存在的安全漏洞，并提供修复建议
public void loginUser(String username, String password) {\n    String sql = \
Assistant: "SELECT * FROM users WHERE username='" + username + "' AND password='" + password + "';";
    ResultSet rs = executeQuery(sql);
    if (rs.next()) {
        System.out.println("Login successful");
    } else {
        System.out.println("Incorrect username or password");
    }
}

可能存在的安全漏洞：
1. SQL注入攻击。由于代码中直接拼接SQL语句，攻击者可以通过输入恶意字符来修改SQL语句的执行逻辑，甚至获取敏感信息。
2. 明文密码传输。代码中明文传输密码，容易被拦截和窃取，造成账户信息泄露。

修复建议：
1. 使用参数化查询或拼接预编译的SQL语句，防止SQL注入攻击。
2. 对用户密码进行加密处理，使用HTTPS等安全协议传输，保证账户信息安全。