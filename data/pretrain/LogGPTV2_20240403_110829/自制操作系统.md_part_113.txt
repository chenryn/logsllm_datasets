话说，如果编写一个轻巧的操作系统也算是一种比较优秀的特殊技能的话，那么大家通过
这30天应该已经可以体验到了。也就是说，大家已经比普通的初学者（甚至是比普通的程序
8
员？）更加优秀了也说不定哦（笑）。如果这是真的，那这本书说不定能成为名著而大卖特卖
呢……（笑）
9
如果你曾经不知不觉地编写了一些比较臃肿的程序，（从喜欢短小精悍程序的笔者的角度来
看的话）若能基于本书的体验加以改善那就太好了。不过这一点和本书的目的（编写自己的操作
26
系统）是没关系的，即便是很大的操作系统或者很大的应用程序，也欢迎推荐到我们的支持网页
上来。
27
33 操作系统开发的诀窍
28
在这里想跟大家介绍一些操作系统开发的诀窍。在0.3节中也提到了，不要从一开始就想着
去做一个操作系统，这一点是非常重要的。还有，遇到不满意的地方，可以过后再来改，甚至是
29
过后全部推翻重来也没问题。从一开始就想做得完美的话，真的可能会寸步难行。
也不要指望能够一次就搞定，推翻重做几次也是很正常的。反正有30天的时间就可以做到现
30
在这样（如果习惯了的话，有两周的时间就足够做到现在这样了，因为我们总不会每次都从helloos
开始吧）。在这个过程中，你的能力也在一点点提升。
16
——————————
① 其实OSASK的应用程序更小，这是因为为了让应用程序变得更小，在API上面下了工夫，这个结果也是理所当然 31
的。比如OSASK的invader.bin为1108字节（invader.hrb为1590字节）。
图灵社区会员 metorm 专享 尊重版权
694 …… 第31天：写在开发完成之后
■■■■■
为你的操作系统设定一个明确而又容易理解的目标也很重要。比如说，“纸娃娃系统”是作
为教材编写的，目标就是让初学者能看懂。为了实现“易懂”这个目的，我们可以牺牲一些性能
和功能，实用性稍微差一点也没有关系。虽然有些部分若改用汇编语言就可以大幅度提升速度，
不过笔者还是放弃了这个念头。如果明确了“什么是最优先的，什么又是可以放弃的”，操作系
统的开发就会变得更加顺利。
如果什么都没想清楚就开始开发的话，最后做出来的操作系统就会让人搞不懂开发者的目
的。只是做着玩的话，这样也未尝不可，或者说也可以将“做着玩”设定成一个目标吧。这样一
来只要享受开发的过程就可以了，用起来有点慢也没关系。当别人抱怨“这个不好用啊”的时候，
你就可以堂堂正正地回答说：“嗯，是啊。不过这样也挺好了。”
以提高自己的编程技巧为目的来开发操作系统也不错。如果以此为目标，就尽量不要从其他
的操作系统中挪用代码，而是要自己来编写。
上面这些可能有点难懂，其实刚上手也不必太在意目标啦。或者说，在开发的过程中你自然
而然地就会发现各种目标。重新做过几次之后（从大约第三次开始）就应该仔细考虑目标了。
44 分享给他人使用
好不容易编写了一个操作系统，想要使用这个操作系统是理所当然的。这个想法很不错，一
定要用用看。实际的使用会激发你改良的欲望，你对系统的理解也会相应加深。
更进一步，可能你会想分享给别人使用。不过要做到这一点，有一个障碍是不得不去逾越的，
那就是“找到你的系统比其他系统出色的地方”。无论多么小，如果找不到一个比其他系统更好
的地方，那别人肯定会想，还不如用Windows或者Linux呢。
笔者开发的OSASK因为运行速度非常快，因此将“在很老很慢的电脑上也可以流畅运行，
启动时间很短”作为宣传重点，并找到了一些愿意使用它的人（不过笔者觉得OSASK也不一定
要让别人来使用，因此即便找不到愿意使用的人也不会觉得遗憾）。
即便操作系统本身没什么亮点，如果能开发出好玩的应用程序（比如游戏）也不错，“如果
要用这个应用程序就只能用我的操作系统哦！”想想看这方法似乎有点不太厚道，不过从操作系
统的的历史来看，这可以算是最常用的一种推销手段了（笑）。
只要逾越了这个障碍，找到愿意使用你的操作系统的人，那么你的用户一定会发邮件来鼓励
你的。如果是商业销售的话，收益也会跟着水涨船高吧。
图灵社区会员 metorm 专享 尊重版权
5 关于光盘中的软件 …… 695
55 关于光盘中的软件
1
光盘中project/目录中的文件是教材用的操作系统，按照0.7节中的声明，大家是可以随意使
18
用的。这种使用方法对与tolset/目录中的大多数文件也是适用的。在这里我们将不适用于KL-01
许可协议的软件列出来，也就是说，没有在这里列出的软件都适用KL-01协议。
3
文 件 名 许可协议 发布地址
cc1.exe GPL http://wiki.osask.jp/?downloads/dev (go_0020)
20
cpp0.exe GPL http://wiki.osask.jp/?downloads/dev (go_0020)
ld.exe GPL ftp://ftp.gnu.org/gnu/binutils/ (2.13)
21
make.exe GPL ftp://ftp.gnu.org/gnu/make/ (3.79.1)
upx.exe GPL http://upx.sourceforge.net/ (1.25w)
t5lzma.exe LGPL http://k.hideyosi.com/tk5lgpl1.lzh 22
qemu/qemu.exe LGPL http://fabrice.bellard.free.fr/qemu/ (0.6.1)
qemu/bios.bin LGPL http://fabrice.bellard.free.fr/qemu/ (0.6.1)
7
qemu/SDL.dll LGPL http://fabrice.bellard.free.fr/qemu/ (0.6.1)
■■■■■ 8
GPL是“The GNU General Public License”（GNU通用公共许可协议）的缩写，在这里可以查
看协议的中文翻译版本①： 9
http://wiki.linux.org.hk/w/GPLv3
26
简单概括一下，就是说如果对以GPL协议发布的软件进行了修改，那么修改之后的产物也必
须以GPL协议来进行发布（但这并不是说只能免费发布），而且源代码也必须公开。如果未经修
改而只是单纯地转载发布的话，必须要明示其原始发布地址。如果将以GPL协议发布的软件的一 27
部分或者全部用于自己开发的程序中，该程序也必须以GPL协议进行发布（当然源代码也需要公
开）。不过修改和引用完全是私人行为，如果不公开其可执行文件的话，源代码也不必公开。以
28
GPL协议发布的软件是无保障的，因使用该软件所造成的损失，不能向软件作者索取赔偿。
29
■■■■■
LGPL是“The GNU Lesser General Public License”（GNU较宽松通用公共许可协议）的缩写，
30
在这里可以查看协议的中文翻译版本②：
——————————
16
① 值得注意的是，所有该协议的中文版都不是GNU官方翻译的版本，GNU官方发布的该协议语言只有英语、阿拉伯
语、加泰罗尼亚语和德语4种版本，GNU官方协议文本请参见：http://www.gnu.org/licenses/gpl.html。——译者注
② 值得注意的是，所有该协议的中文版都不是GNU官方翻译的版本，GNU官方发布的该协议语言只有英语、加泰罗 31
尼亚语和德语3种版本，GNU官方协议文本请参见：http://www.gnu.org/copyleft/lesser.html。——译者注
图灵社区会员 metorm 专享 尊重版权
696 …… 第31天：写在开发完成之后
http://www.thebigfly.com/gnu/lgpl/lgpl-v3.php
LGPL相较于GPL只有一点不同：将以LGPL协议发布的软件的一部分或者全部用于自己开发
的程序中时，不伴随协议的强制性和公开的义务。LGPL协议主要是为库而准备的，只是引用了
一个库没有必要强制发布协议。不过，如果对库本身进行了修改，则修改后的库必须以LGPL或
者GPL协议进行发布。
■■■■■
至于以KL-01协议发布的文件，无论怎么修改都是OK的，也没有必须将修改产物的源代码公
开或者必须以KL-01协议进行发布之类的规定，大家可以随意使用。当然，它们同样是无保障。
■■■■■
本书附送的光盘里面还有很多剩余空间，因此笔者在omake/目录中塞了很多东西（其实是现
在才打算要塞进去）。在写书稿的时候，还没有想好到底要放点什么东西进去，笔者会在
omake/omake.txt中做出说明。不过剩余空间实在是太多了，肯定没办法全部填满，不好意思。
66 关于开源的建议
在这里想说说顺利完成操作系统和应用程序开发之后应该做什么。在软件的发布上，大概有
三种方法。
第一种方法是做成软件包，或者以共享软件的方式出售。这样做如果顺利的话会怎么样呢？
你也许会变得很有钱，可能靠这份收入可以维持生计，也可能雇佣开发人员，使事业得到进一步
的发展。一般来说，开发操作系统花不了多少钱，比如这个“纸娃娃系统”的成本，除了笔者的
生活费以外，再就是电脑的电费之类的。所以说操作系统也许还是能维持稳定的经营。话说，这
种情况好像也不必多费口舌，大家自己应该可以想象出来。
第二种方法是作为自由软件来发布。可以做一个网站，把软件放在上面供大家下载，也可以
发布到专门的软件下载门户网站上面。有人会说，“这样不就挣不到钱了吗？”基本上就是挣不
到钱的，因为这样做的目的本来就不是为了挣钱。这样的软件只要想用的人就可以免费下载使用。
最后一种方法就是以开源方式发布。所谓开源并不仅仅是公开了源代码就可以了，而是必须
认可对源代码进行修改并作为自己的作品进行发布的行为。只能看我的源代码，但是不准模仿，
或者可以拿来修改但必须经过作者的允许才能发布等等之类的，都不能算作是开源。
开源还有一个条件，那就是必须认可再次发布的自由。也就是说，你不能因为人家复制了你
的软件放在其他网页上供人下载而生气。比如“只能从我自己的主页才能下载哦”，“由于想要正
确统计下载数量而禁止再次发布哦”之类的话是不能说的。KL-01以及GPL、LGPL都是为开源软
件而制定的许可协议。
图灵社区会员 metorm 专享 尊重版权
6 关于开源的建议 …… 697
■■■■■ 1
无论是自由软件也好还是开源软件也好，并不是说就完全不能用来盈利。你可以宣布“下个
月开始停止免费下载，改成在商店里面出售”之类的。不过如果是开源软件的话，因为拥有再次 18
发布的自由，已经下载过软件的人在自己的主页上发布出来，半价销售跟你竞争的话，你也无话
可说。如果不希望变成这样，那最好从一开始就不要选择开源。如果是自由软件，那只要在文档
3
中写明禁止再次发布，将来想改成收费软件的时候就可以放心了。
如果想要半路出家改成收费软件，为了吸引之前下载过免费版的用户来购买，可以使用增加
20
一些功能、发布升级版的方法，而之前的免费版可以作为试用版继续提供免费下载。用这种方法
可以不用过于担心再次发布的问题，也同样适用于开源软件。不过话说回来，开源软件由于公开
21
了源代码，那实际上是保证了修改的自由，可能会有人做出比你的商品版更好的软件，然后用来
出售或者免费发布。
22
因此，如果选择以开源方式发布软件的话，将来想要转为付费方式就比较困难了。
■■■■■ 7
看上去弊端很多的开源方式，其实也有好的一面。如果用户跟你抱怨“请加上一个○○的功
能吧”、“××功能没什么用啊，去掉吧”、“bug太多了，帮帮忙”之类的话，你可以说： 8
“这个是开源软件，请自己修改好了（笑）。”
9
这就是开源软件最大的好处。
如果作为商品出售的话，用户可能会抱怨说，“有○○这样的功能是理所当然的啊，你这个
26
软件居然没有，太过分了，退钱！”如果是自由软件虽说不会被要求“退钱”，但用户可能会说：
“我已经请求了很久了，为什么还没加上这个功能呢？什么，你说有意见的话自己从头开发一个
类似的软件好了？这也太过分了吧，你是作者，只要改几行代码再重新make一下就好了啊……”。 27
但开源的话就不会有这样的问题啦。
28
尤其是当你只是凭兴趣编写了一个小软件，发布之后即便引来一大堆抱怨也不希望会过于占
用自己的时间，这个时候开源是很适合你的。即便很久之后服务器不能继续工作了，也会有人帮
你再次发布出来，你也不会因此而受到过多的指责。甚至也许在不经意间，你的软件已经渐渐流 29
传开来，并有人进行了各种改良，然后你意外地发现已经有很多人在使用它了。
30
■■■■■
而且，开源的话，会有很多人“误以为”“这个作者好大方”，于是你会多出许多朋友，搞不
16
好还会被人尊敬。朋友和尊敬可是用钱买不到的。当然，如果你是高帅富也可能会有很多朋友，
也可能会赢得尊敬，但万一你遭灾变得贫穷时，朋友和尊敬可能也会随之烟消云散。啊，真正的
31
朋友屈指可数，真是人生无常啊。但是，由开源而赢得的朋友和尊敬，如果你真破产了，他们反
图灵社区会员 metorm 专享 尊重版权
698 …… 第31天：写在开发完成之后
而会变得更加支持你。啊，那个家伙已经身无分文了，居然还将自己的软件开源呢！（笑）
而且，这种事是会上瘾的。因一次开源而成名之后，以后就会只想用开源方式发布软件了。
这样可不行，真的会破产的。因此，好孩子可千万不要玩开源哦。喂，那啥，这哪里是在推荐大
家开源啊！（笑）
■■■■■
话说，如果你一直努力做开源软件，在你的朋友中间可能会有人帮你介绍一份好工作，请你
到大学里面演讲，或者明明实力一般却意外地出了名，获得自己写书出版的机会。其实这只是笔
者的情况而已，不知道是不是所有人都能走这条路。笔者觉得只是自己运气比较好罢了，可不敢
打包票哦。
如果大家选择用开源方式发布自己的软件，以后有机会一定要和笔者一起出席“开源大会”
哦。笔者会出席OSASK的展位，如果各位读者能在旁边的展位一起展示你的开源软件，那真是
再好不过的事了。
开源大会是日本开源软件界的盛会①，每年在东京举办两次，在北海道和冲绳举办一次，详
细请参见以下网页：
http://www.ospn.jp/
关于开源就介绍到这里。对于自己所开发的软件，如果是有偿销售或者是作为自由软件发布，
可能大家比较容易想象，而开源的发布方式可能大家不是很熟悉，因此才在这里专门详细介绍了
一下。
开源有开源的好处，也有其独有的乐趣，但开源也不是万能的，如果你选择自由软件或者有
偿销售的话都是完全OK的。请大家深思熟虑，找一个最贴近目标的方式来发布自己的软件吧（当
然，不想发布的话也是OK的啦）。无论如何，笔者都会支持大家的。
77 后记
后记，或者叫涂鸦吧，反正凡是关于这本书的话题，都可以随便写写。
从哪里开始写呢？就从这本书的封面开始写吧。书的封面是很漂亮的绿色，这个绿色是笔者
提议的，代表鲜嫩的叶子。初学者就像是嫩叶一样，而且笔者很喜欢森林浴，感觉这种看上去很
环保的颜色，和非常强调HLT重要性的本书也挺搭调的。
封面中间还有只猫，其实那不是猫，而是有两条尾巴的一种日本传说中的妖怪——猫又，在
——————————
① 中国也举办类似的开源大会，详细信息可以参见“中国开源软件推进联盟”： http://www.copu.org.cn/。
——译者注
图灵社区会员 metorm 专享 尊重版权
7 后记 …… 699
本书的漫画中也经常登场。它是OSASK的吉祥物，也是“纸娃娃系统”的吉祥物，名字叫做“卡
1
奥斯”，昵称叫“小卡”，大家请多关照……喂，话说怎么到了后记才介绍人家啊！
18
■■■■■
笔者努力将这本书写成一本初中生也能看懂的书。笔者自己也是从初中的时候开始萌发要编
3
写一个操作系统的念头的，因此在这本书的内容安排上是以当时的自己也能看懂为基准的（话说，
其实笔者当时并没有能够编写出操作系统）。
20
在本书中，笔者尽量避免使用晦涩难懂的语言，对英语单词也进行了适度的解释。其实编写
操作系统本来也不需要什么高深的知识。即便你不会解数学方程式，不会用英语对话，不知道历
史上的重要人物，不知道如何使用敬语①，不知道原子的名称，你都可以毫无障碍地编写出操作 21
系统。因此，笔者没有刻意去圈定对象读者，而是以让所有想要编写操作系统的人都能够看懂作
为写这本书的目的。 22
另一方面，笔者也努力让大学生和成人读者不至于觉得这本书太幼稚。笔者觉得自己应该是
找到了这么一个平衡点，如果各位读者也有同感那就再好不过了。 7
■■■■■
8
笔者觉得编程相关的书都卖得比较贵，当然，考虑到读者的数量，这个价格也无可厚非，请
大家不要埋怨出版社（如果出版社亏损倒闭的话那情况会更糟糕）。不过，笔者想让这本书能让
9
初中生也买得起，因此拜托了一些有关的朋友，让他们把价格定得低一些。我不知道对现在的初
中生来说，如果不等到过年发压岁钱的话，这个价格他们是否能够承受，如果不行的话可以让图
26
书馆购买，学生只要到图书馆去借就可以了。如果这个价格让你觉得还可以承受，那么请对出版
社和那些有关人士的努力表示感谢吧。
27
如果笔者是一个很有名的作者，出版社对书的销量有信心的话，可能会定一个比较有挑战性
的价格，但其实这本书是笔者写的第一本书，出版社也基本上是赌了一把。这么想的话觉得自己
的要求确实有点任性，在这里说声抱歉了。 28
可能有的读者觉得这本书页数太多，太重了。其实当初也考虑过分成上下册，甚至是分成1～
4册，但结果发现合并成一册最便宜，于是就这样愉快地决定了。这本书的内容属于先苦后甜的 29
类型，如果分成上下册，有些读者只看了上册觉得未来一片黑暗，可能会失去继续阅读的兴趣，
这也是合并成一册出版的理由之一。如果一定要分成几册的话，那只能麻烦大家自己用切割机把 30
书给切开了。
这本书从开始到读完差不多真的需要30天左右，因此把这本书的价格除以30的话，说不定就
16
会觉得“平均每天只要花3.3元啊，真划算”。虽然不如RPG（角色扮演游戏）那样好玩，不过你