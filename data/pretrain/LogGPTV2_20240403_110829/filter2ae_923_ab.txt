# USB设备文件系统配置

## 文件系统配置
- **文件系统**:
  - 内核自动挂载支持 (Kernel automounter support)
  - 内核自动挂载版本4支持（同时支持v3）
  - 用户空间文件系统支持 (Filesystem in Userspace support)
  - 虚拟文件系统 (Pseudo filesystems):
    - /proc 文件系统支持
      - /proc/kcore 支持
      - Sysctl 支持 (/proc/sys)
    - sysfs 文件系统支持

## 库配置
- **库配置** (Library Configuration):
  - 选择需要的Lib库
- **网络应用程序** (Network Applications):
  - 存储 (enable chmod, fdisk in busybox)
    - proftpd (FTP服务器)
  - iptables
  - openssl
  - pppd
    - L2TP客户端
  - PPTP
  - uvc_stream
- **其他应用程序** (Miscellaneous Applications):
  - BusyBox
  - MTD写入
- **专有应用程序** (Proprietary Application):
  - NVRAM
  - GPIO

## 其他配置
- **BusyBox设置** (Busybox Settings):
  - 构建选项 (Build Options):
    - 将BusyBox编译为静态二进制文件 (无共享库) (Build BusyBox as a static binary (no shared libs))

## 编译
1. `make dep`
2. `make`

编译完成后，可以在`source/images`目录下找到`root_uImage`镜像文件，在`source/romfs`目录下找到文件系统。

## Ralink SDK文件系统修改
仅编译固件并不能满足我们的需求，还需要能够修改启动脚本并添加自定义文件。打开`source/vendors/Ralink/RT3052`目录下的Makefile，可以看到它创建了文件目录系统，并将一些必要的文件拷贝进去。通过修改Makefile和目录下的文件来编辑自己的文件系统。根据需要修改以下文件：
- `rcS`: 启动脚本
- `inittab`: init进程配置文件
- `motd`: Ralink图标
- `fstab`: 文件系统信息
- `RT2860_default_vlan`: NVRAM默认配置文件

在`ROMFS_DIRS`后添加目录，在`$(ROMFSINST) /etc_ro/motd`后添加文件（注意这些文件需要放在`source/vendors/Ralink/RT3052`目录下）。

查看`source/user/rt2880_app/scripts`目录下的Makefile，可以发现它配置了`/sbin`目录下的可执行文件和脚本文件。要添加脚本只需将其复制到`source/user/rt2880_app/scripts`目录下即可。

## 启动脚本配置
以下是一个示例启动脚本配置，并进行了注释，仅供参考：

```sh
#!/bin/sh

# 挂载所有文件系统，在fstab文件中有配置
mount -a

# 创建/var/run目录
mkdir -p /var/run

# 显示Ralink图标
cat /etc_ro/motd

# Linux 2.6使用udev而不是devfs，我们需要自己创建静态设备节点
mounted=$(mount | grep mdev | wc -l)
if [ $mounted -eq 0 ]; then
  mount -t ramfs mdev /dev
  mkdir /dev/pts
  mount -t devpts devpts /dev/pts
  mdev -s
fi

# 创建设备文件
mknod /dev/spiS0 c 217 0
mknod /dev/i2cM0 c 218 0
mknod /dev/rdm0 c 254 0
mknod /dev/flash0 c 200 0
mknod /dev/swnat0 c 210 0
mknod /dev/hwnat0 c 220 0
mknod /dev/acl0 c 230 0
mknod /dev/ac0 c 240 0
mknod /dev/mtr0 c 250 0
mknod /dev/nvram c 251 0
mknod /dev/gpio c 252 0
mknod /dev/PCM c 233 0
mknod /dev/I2S c 234 0

# 配置mdev.conf
echo "#  :  [ ]" > /etc/mdev.conf
echo "# 特殊字符的含义:" >> /etc/mdev.conf
echo "# @ 在创建设备后运行" >> /etc/mdev.conf
echo "# $ 在删除设备前运行" >> /etc/mdev.conf
echo "# * 在创建和删除设备时都运行" >> /etc/mdev.conf
echo "sd[a-z][1-9] 0:0 0660 */sbin/automount.sh \$MDEV" >> /etc/mdev.conf

# 启用USB热插拔功能
echo "/sbin/mdev" > /proc/sys/kernel/hotplug

# 启动nvram_daemon进程
nvram_daemon &

# 从NVRAM配置文件中获取用户名和密码并设置系统用户
login=$(nvram_get 2860 Login)
pass=$(nvram_get 2860 Password)
echo "$login::0:0:Adminstrator:/:/bin/sh" > /etc/passwd
echo "$login:x:0:$login" > /etc/group
chpasswd.sh $login $pass

# 音频
pcmcmd -s &

# 视频
uvc_stream -b &
sleep 2

# 设置RT3050为交换机模式（恢复到无VLAN分区）
switch reg w 14 5555
switch reg w 40 1001
switch reg w 44 1001
switch reg w 48 1001
switch reg w 4c 1
switch reg w 50 2001
switch reg w 70 ffffffff
switch reg w 98 7f7f
switch reg w e4 7f

lan_if="br0"

# 启用lo接口 -- mydlink需要它
ifconfig lo up

# 设置桥接、局域网和无线接口，并配置快速转发时间（setfd, setmaxage）
ifconfig eth2 0.0.0.0
ifconfig ra0 0.0.0.0
brctl addbr br0
brctl addif br0 ra0
brctl addif br0 eth2
brctl setfd br0 1
brctl setmaxage br0 1

# 启用/禁用无线网络
gpio wlan 1

# 配置IP地址
ip=$(nvram_get 2860 wan_ipaddr)
nm=$(nvram_get 2860 wan_netmask)
gw=$(nvram_get 2860 wan_gateway)
ifconfig $lan_if $ip netmask $nm
route del default
gpio gw 0.0.0.0
if [ "$gw" == "0.0.0.0" ]; then
  gw=""
fi
if [ "$gw" != "" ]; then
  route add default gw $gw
  gpio gw $gw
else
  route add default gw $ip
fi

# 后台启动alphapd服务
web.sh
sleep 3

# 后台运行调度器
killall -q schedule
schedule &

# 用于telnet调试
telnetd

# 用于syslogd
mkdir -p /var/log
```

以上配置和脚本仅为示例，请根据实际需求进行调整。