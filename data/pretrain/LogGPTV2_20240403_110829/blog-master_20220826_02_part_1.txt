## DuckDB 定位OLAP方向的SQLite, 适合嵌入式数据分析 - tpch测试与简单试用  
### 作者                              
digoal                              
### 日期                              
2022-08-26                             
### 标签                              
PostgreSQL , DuckDB , SQLite , OLAP , TPC-H              
----                              
## 背景    
duckdb的定位是OLAP方向的sqlite, 适用于嵌入式环境的数据分析. SQL语法支持丰富, duckdb的语法非常接近PostgreSQL. 由于duckdb使用简单, 也非常适合开发者做数据科学分析.   
下面简单测试一下dockdb的tpch测试, 以及一些常用的数据生成, SQL用法.   
1、下载  
下载macos下的命令行版本, 用户学习duckdb  
```  
https://duckdb.org/docs/installation/index  
https://github.com/duckdb/duckdb/releases/download/v0.4.0/duckdb_cli-osx-universal.zip  
unzip duckdb_cli-osx-universal.zip  
```  
2、启动  
```  
./duckdb  
```  
3、安装tpch插件  
https://duckdb.org/docs/extensions/overview  
https://duckdb.org/docs/api/cli  
```  
D install 'tpch';  
```  
4、加载tpch插件  
```  
D load 'tpch';  
```  
5、生成tpch数据  
https://github.com/pdet/duckdb-tutorial  
```  
D CALL dbgen(sf=0.1);  
```  
6、查看表  
```  
D show tables;  
┌──────────┐  
│   name   │  
├──────────┤  
│ customer │  
│ lineitem │  
│ nation   │  
│ orders   │  
│ part     │  
│ partsupp │  
│ region   │  
│ supplier │  
└──────────┘  
```  
7、配置参数  
```  
D .timer on  
```  
8、查询tpc-h SQL  
```  
SELECT  
    l_orderkey,  
    sum(l_extendedprice * (1 - l_discount)) AS revenue,  
    o_orderdate,  
    o_shippriority  
FROM  
    customer,  
    orders,  
    lineitem  
WHERE  
    c_mktsegment = 'BUILDING'  
    AND c_custkey = o_custkey  
    AND l_orderkey = o_orderkey  
    AND o_orderdate  CAST('1995-03-15' AS date)  
GROUP BY  
    l_orderkey,  
    o_orderdate,  
    o_shippriority  
ORDER BY  
    revenue DESC,  
    o_orderdate  
LIMIT 10;  
┌────────────┬─────────────┬─────────────┬────────────────┐  
│ l_orderkey │   revenue   │ o_orderdate │ o_shippriority │  
├────────────┼─────────────┼─────────────┼────────────────┤  
│ 223140     │ 355369.0698 │ 1995-03-14  │ 0              │  
│ 584291     │ 354494.7318 │ 1995-02-21  │ 0              │  
│ 405063     │ 353125.4577 │ 1995-03-03  │ 0              │  
│ 573861     │ 351238.2770 │ 1995-03-09  │ 0              │  
│ 554757     │ 349181.7426 │ 1995-03-14  │ 0              │  
│ 506021     │ 321075.5810 │ 1995-03-10  │ 0              │  
│ 121604     │ 318576.4154 │ 1995-03-07  │ 0              │  
│ 108514     │ 314967.0754 │ 1995-02-20  │ 0              │  
│ 462502     │ 312604.5420 │ 1995-03-08  │ 0              │  
│ 178727     │ 309728.9306 │ 1995-02-25  │ 0              │  
└────────────┴─────────────┴─────────────┴────────────────┘  
Run Time: real 0.011 user 0.022415 sys 0.001322  
```  
## 其他常用的用法  
1、generate_series, range 生成数据  
https://duckdb.org/docs/sql/functions/nested  
```  
range(start, stop, step)  
range(start, stop)  
range(stop)  
generate_series(start, stop, step)  
generate_series(start, stop)  
generate_series(stop)  
```  
例如: 生成大量测试数据  
```  
create table  tbl (gid bigint, crt_time timestamp, info text, v numeric);  
insert into tbl select t1.generate_series, now() + (t1.generate_series*t2.generate_series||' second')::interval, md5(random()::text), random()*1000 from   
(select * from generate_series(1,10) ) t1,   
(select * from generate_series(1,100000)) t2;   
create index idx_tbl_1 on tbl (gid, crt_time);  
```  
```  
D select * from tbl limit 10;  
┌─────┬─────────────────────────┬──────────────────────────────────┬─────────┐  
│ gid │        crt_time         │               info               │    v    │  
├─────┼─────────────────────────┼──────────────────────────────────┼─────────┤  
│ 1   │ 2022-08-26 06:45:55.731 │ 10ac3e73c0c92e79119ad97e4e23dd14 │ 397.538 │  
│ 1   │ 2022-08-26 06:45:56.731 │ d8326304f6e0c7fd0706f2be3f3bec18 │ 792.504 │  
│ 1   │ 2022-08-26 06:45:57.731 │ ce61632252bc56f161a0732131eb8258 │ 866.972 │  
│ 1   │ 2022-08-26 06:45:58.731 │ 706e6740e66c9daf203b93deb321fcf0 │ 803.576 │  
│ 1   │ 2022-08-26 06:45:59.731 │ 57f22d800fd0afd5905341e3fcca693f │ 232.984 │  
│ 1   │ 2022-08-26 06:46:00.731 │ d27dc48c88cb2de684085b82770ebb2a │ 179.774 │  
│ 1   │ 2022-08-26 06:46:01.731 │ b5c8015e94f72bf0f3472eb7b4e6548f │ 891.579 │  
│ 1   │ 2022-08-26 06:46:02.731 │ d70d14790a9b3a00d4c6dbc2f7c448b7 │ 204.278 │  
│ 1   │ 2022-08-26 06:46:03.731 │ 5bd45f42c9cf073eaeb8e81eb54c8f7a │ 814.422 │  
│ 1   │ 2022-08-26 06:46:04.731 │ d90e8764f1b8f37ee34afdd7024774bd │ 589.196 │  
└─────┴─────────────────────────┴──────────────────────────────────┴─────────┘  
Run Time: real 0.002 user 0.002828 sys 0.000333  
```  
2、统计数据柱状图信息  
https://duckdb.org/docs/guides/meta/summarize  
```  
D SUMMARIZE tbl;  
┌─────────────┬───────────────┬──────────────────────────────────┬──────────────────────────────────┬───────────────┬───────────────┬───────────────────┬─────┬─────┬─────┬─────────┬─────────────────┐  
│ column_name │  column_type  │               min                │               max                │ approx_unique │      avg      │        std        │ q25 │ q50 │ q75 │  count  │ null_percentage │  
├─────────────┼───────────────┼──────────────────────────────────┼──────────────────────────────────┼───────────────┼───────────────┼───────────────────┼─────┼─────┼─────┼─────────┼─────────────────┤  
│ gid         │ BIGINT        │ 1                                │ 10                               │ 10            │ 5.5           │ 2.87228275941074  │ 3   │ 6   │ 8   │ 1000000 │ 0.0%            │  
│ crt_time    │ TIMESTAMP     │ 2022-08-26 06:45:55.731          │ 2022-09-06 20:32:34.731          │ 502481        │               │                   │     │     │     │ 1000000 │ 0.0%            │  
│ info        │ VARCHAR       │ 000013c1e3a86c264720b7115e583653 │ ffffd28e7a1fac6d008abf4d1d8799d9 │ 992246        │               │                   │     │     │     │ 1000000 │ 0.0%            │  
│ v           │ DECIMAL(18,3) │ 0.003                            │ 1000.000                         │ 626691        │ 500.097364103 │ 288.8111132165053 │ 251 │ 500 │ 751 │ 1000000 │ 0.0%            │  
└─────────────┴───────────────┴──────────────────────────────────┴──────────────────────────────────┴───────────────┴───────────────┴───────────────────┴─────┴─────┴─────┴─────────┴─────────────────┘  
Run Time: real 0.074 user 0.511695 sys 0.002223  
```  
3、查询计划  
```  
D explain select * from tbl where gid in (9,10) order by crt_time limit 10;  
┌─────────────────────────────┐  
│┌───────────────────────────┐│  
││       Physical Plan       ││  
│└───────────────────────────┘│  
└─────────────────────────────┘  
┌───────────────────────────┐  
│           TOP_N           │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│           Top 10          │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│      tbl.crt_time ASC     │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│          SEQ_SCAN         │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│            tbl            │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│            gid            │  
│          crt_time         │  
│            info           │  
│             v             │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│Filters: gid>=9 AND gid<=10│  
│     AND gid IS NOT NULL   │  
└───────────────────────────┘                               
Run Time: real 0.001 user 0.001180 sys 0.000133  
```  
4、客户端帮助  