### 参考文献

1. Oppliger, R., Rytz, R.: 《可信计算能否解决计算机安全问题？》*IEEE Security & Privacy* 3(2) (2005) 16–19
2. Brumley, D., Hartwig, C., Liang, Z., Newsome, J., Song, D.X., Yin, H.: 《自动识别恶意软件中的触发行为》。载于：*Botnet Detection*，Springer (2008) 65–88
3. Newsome, J., Brumley, D., Franklin, J., Song, D.: 《Replayer: 基于二进制分析的协议自动重放》。载于：*ACM计算机与通信安全会议*。CCS '06，纽约，美国，ACM (2006) 311–321
4. Bayer, U., Kirda, E., Kruegel, C.: 《提高动态恶意软件分析的效率》。载于：*2010年ACM应用计算研讨会论文集*，ACM (2010) 1871–1878
5. Guo, F., Ferrie, P., Chiueh, T.C.: 《对加壳问题及其解决方案的研究》。载于：*入侵检测最新进展*，Springer (2008) 98–115
6. Cook, S.A., Reckhow, R.A.: 《时间有界随机访问机器》。*J. Comput. Syst. Sci.* 7(4) (1973) 354–375
7. Jang, J., Brumley, D., Venkataraman, S.: 《Bitshred: 用于可扩展分类和语义分析的特征哈希恶意软件》。载于：*ACM计算机与通信安全会议*。CCS '11，纽约，美国，ACM (2011) 309–320
8. Moser, A., Kruegel, C., Kirda, E.: 《静态分析在恶意软件检测中的局限性》。载于：*计算机安全应用会议* (2007) 421–430
9. Zhang, Q., Reeves, D.S.: 《MetaAware: 识别变形恶意软件》。载于：*年度计算机安全应用会议*，IEEE计算机学会 (2007) 411–420
10. Sharif, M.I., Lanzi, A., Griffin, J.T., Lee, W.: 《恶意软件模拟器的自动逆向工程》。载于：*IEEE计算机学会安全与隐私* (2009) 94–109
11. Kang, M.G., Poosankam, P., Yin, H.: 《Renovo: 一个隐藏代码提取器，用于加壳可执行文件》。载于：*WORM*，ACM (2007年11月)
12. Martignoni, L., Christodorescu, M., Jha, S.: 《OmniUnpack: 快速、通用且安全的恶意软件解包》。载于：*年度计算机安全应用会议*，IEEE计算机学会 (2007) 431–441
13. Yin, H., Song, D.: 《隐藏代码提取》。载于：*自动恶意软件分析*。SpringerBriefs in Computer Science。Springer New York (2013) 17–26
14. Liu, L., Ming, J., Wang, Z., Gao, D., Jia, C.: 《基于主机的通用解包器上的拒绝服务攻击》。载于：Qing, S., Mitchell, C., Wang, G., 编辑：*信息与通信安全*。Lecture Notes in Computer Science第5927卷。Springer Berlin Heidelberg (2009) 241–253
15. Xie, P.D., Li, M.J., Wang, Y.J., Su, J.S., Lu, X.C.: 《恶意软件分析中的解包技术和工具》。*Applied Mechanics and Materials* 198–199 (2012) 343–350
16. Perdisci, R., Lanzi, A., Lee, W.: 《为准确的计算机病毒检测进行打包可执行文件的分类》。*Pattern Recognition Letters* 29(14) (2008) 1941–1946
17. Spinellis, D.: 《可靠识别有界长度病毒是NP完全问题》。*IEEE Transactions on Information Theory* 49(1) (2003) 280–284
18. Borello, J.M., Mé, L.: 《变种病毒的代码混淆技术》。*Journal in Computer Virology* 4(3) (2008) 211–220
19. Katz, J., Lindell, Y.: 《现代密码学导论》。Chapman & Hall (2008)
20. Elgot, C.C., Robinson, A.: 《随机访问存储程序机：一种编程语言的方法》。*J. ACM* 11(4) (1964) 365–399
21. Hartmanis, J.: 《随机访问存储程序机的计算复杂性》。*Mathematical Systems Theory* 5(3) (1971) 232–245
22. Aho, A.V., Hopcroft, J.E., Ullman, J.D.: 《计算机算法的设计与分析》。Addison-Wesley (1974)
23. Cohen, F.: 《计算机病毒》。博士论文，南加州大学 (1986)
24. Cohen, F.: 《计算机病毒的计算方面》。*Computers & Security* 8(4) (1989) 297–298
25. Adleman, L.M.: 《计算机病毒的抽象理论（邀请演讲）》。载于：*密码学进展会议论文集*。CRYPTO '88，纽约，美国，Springer-Verlag New York, Inc. (1990) 354–374
26. Thimbleby, H., Anderson, S., Cairns, P.: 《木马和计算机病毒感染建模框架》。*The Computer Journal* 41(7) (1998) 444–458
27. Chess, D.M., White, S.R.: 《无法检测的计算机病毒》。载于：*Virus Bulletin Conference论文集*。第5卷 (2000)
28. Filiol, E., Josse, S.: 《不可判定病毒检测的统计模型》。*Journal in Computer Virology* 3(2) (2007) 65–74
29. Oreans Technologies. http://www.oreans.com/themida.php
30. Sipser, M.: 《计算理论导论》。第27卷。Thomson Course Technology Boston, MA (2006)
31. Shaw, D.E., Deneroff, M.M., Dror, R.O., Kuskin, J.S., Larson, R.H., Salmon, J.K., Young, C., Batson, B., Bowers, K.J., Chao, J.C., 等: 《Anton: 一种用于分子动力学仿真的专用机器》。载于：*ACM SIGARCH计算机架构新闻*。第35卷，ACM (2007) 1–12
32. Stevens, M., Lenstra, A., Weger, B.: 《MD5的选定前缀碰撞以及不同身份的X.509证书碰撞》。载于：Naor, M., 编辑：*EUROCRYPT 2007*。Lecture Notes in Computer Science第4515卷。Springer Berlin Heidelberg (2007) 1–22
33. Garey, M.R., Johnson, D.S.: 《计算机和难处理性》。第174卷。Freeman New York (1979)
34. Clarke, E.M., Emerson, E.A.: 《使用分支时间时态逻辑设计和合成同步骨架》。载于：*程序逻辑* (1981) 52–71
35. Queille, J.P., Sifakis, J.: 《CESAR中并发系统的规范与验证》。载于：*编程研讨会* (1982) 337–351
36. Clarke, E.M.: 《模型检查的诞生》。载于：*25年的模型检查* (2008) 1–26
37. Sistla, A.P., Clarke, E.M.: 《命题线性时态逻辑的复杂性》。*J. ACM* 32(3) (1985年7月) 733–749
38. Clarke, E.M., Emerson, E.A., Sistla, A.P.: 《使用时态逻辑规范自动验证有限状态并发系统：一种实用方法》。载于：*POPL* (1983) 117–126
39. Burch, J.R., Clarke, E.M., McMillan, K.L., Dill, D.L., Hwang, L.J.: 《符号模型检查：超过10^20个状态》。载于：*LICS* (1990) 428–439
40. Marques-Silva, J.a.P., Sakallah, K.A.: 《GRASP—一种新的SAT求解搜索算法》。载于：*IEEE国际计算机辅助设计会议文摘* (ICCAD)，圣何塞，加利福尼亚 (1996年11月) 220–227
41. Marques-Silva, J.a.P., Sakallah, K.A.: 《GRASP: 命题可满足性的搜索算法》。*IEEE Transactions on Computers* 48(5) (1999年5月) 506–521
42. Moskewicz, M.W., Madigan, C.F., Zhao, Y., Zhang, L., Malik, S.: 《Chaﬀ: 工程化高效的SAT求解器》。载于：*DAC* (2001) 530–535
43. Biere, A., Cimatti, A., Clarke, E.M., Zhu, Y.: 《无BDD的符号模型检查》。载于：*第五届工具和算法构造及分析国际会议论文集*。TACAS '99，伦敦，英国，Springer-Verlag (1999) 193–207
44. Clarke, E., Biere, A., Raimi, R., Zhu, Y.: 《使用可满足性求解的有界模型检查》。*Form. Methods Syst. Des.* 19 (2001年7月) 7–34
45. Clarke, E., Grumberg, O., Jha, S., Lu, Y., Veith, H.: 《反例引导的抽象细化》。载于：Emerson, E., Sistla, A., 编辑：*计算机辅助验证*。Lecture Notes in Computer Science第1855卷。Springer Berlin / Heidelberg (2000) 154–169 10.1007/10722167 15.
46. Clarke, E., Grumberg, O., Jha, S., Lu, Y., Veith, H.: 《符号模型检查的反例引导抽象细化》。*J. ACM* 50 (2003年9月) 752–794
47. Bradley, A.R., Manna, Z.: 《通过归纳反例的归纳泛化来检查安全性》。载于：*形式化方法在计算机辅助设计中的应用* (FMCAD'07) (2007年11月) 173–180
48. Bradley, A.R.: 《无展开的基于SAT的模型检查》。载于：*第12届验证、模型检查和抽象解释国际会议论文集*。VMCAI'11，柏林，海德堡，Springer-Verlag (2011) 70–87
49. Knuth, D.E.: 《计算机程序设计艺术 第1卷：基本算法（第3版）》。第3版。Addison-Wesley Professional (1997年7月)
50. Amdahl, G.M.: 《单处理器方法实现大规模计算能力的有效性》。载于：*1967年4月18-20日春季联合计算机会议论文集*。AFIPS '67 (Spring)，纽约，美国，ACM (1967) 483–485
51. Downey, R.G., Fellows, M.R., Stege, U.: 《计算可处理性：火星视角》。载于：*欧洲理论计算机科学协会公报*。73–97
52. VMProtect Software. http://vmpsoft.com/

### 附录 - RASP 表格

**表1. 十六个RASP指令的操作语义和时间成本。大多数助记符是显而易见的；一个不太明显的助记符是bpa，代表“正累加器分支”。指令具有多种寻址模式。指令的成本取决于寻址模式；请参见表2以获取详细信息。（l(·) 的定义见第6页的方程1。）此ISA允许直接形式化解包行为。**

| 助记符 | 操作数 | 操作码 | 操作语义 | 时间成本 |
| --- | --- | --- | --- | --- |
| halt | - | 0 | 停止 | - |
| load | j | 1 | ac ← rval; ip++ | l(ip) + rcost |
| stor | j | 2 | M[lval] ← ac; ip++ | l(ip) + l(ac) + lcost |
| add | j | 3 | ac ← ac + rval; ip++ | l(ip) + l(ac) + rcost |
| sub | j | 4 | ac ← ac − rval; ip++ | l(ip) + l(ac) + rcost |
| jmp | j | 5 | ip ← rval | rcost |
| bpa | j | 6 | if (ac > 0) then ip ← rval else ip++ | l(ip) + l(ac) + rcost |
| read | j | 7 | M[lval] ← in; ip++ | l(ip) + l(in) + lcost |
| write | j | 8 | out ← rval; ip++ | l(ip) + rcost |

**表2. 三种寻址模式的值和成本。这些成本使我们能够分析随着机器字长和输入大小的增长的渐近行为，并允许我们制定对时间和空间至关重要的限制，从而得出可判定性结果。**

| 寻址模式 | 操作数 | rval | rcost | lval | lcost |
| --- | --- | --- | --- | --- | --- |
| 立即数 | j | j | j | - | - |
| 直接 | j | M[j] | l(j) | M[j] | l(j) + l(M[j]) |
| 间接 | j | M[M[j]] | l(j) + l(M[j]) | M[j] | l(j) + l(M[j]) + l(M[M[j]]) |

希望优化后的文本更加清晰、连贯和专业。如果需要进一步修改或调整，请告诉我！