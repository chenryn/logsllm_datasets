# 攻破Ledger比特币硬件钱包的安全模型
##### 译文声明
本文是翻译文章，文章原作者 Saleem Rashid，文章来源：saleemrashid.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
在这篇文章中，我主要讨论我在Ledger硬件钱包中发现的一个漏洞。由于Ledger使用了自定义的体系结构对其安全元素进行了相应限制，所以才导致该漏洞的存在。  
攻击者可以利用这一漏洞，在用户接收比特币之前对设备进行破坏，或者以物理等方式远程从设备中获取私钥。
###  在设置种子之前进行物理访问
该方式也被称为“供应链攻击”，是本文主要讨论的内容。该攻击方式不需要目标计算机上具有任何恶意软件，也不需要目标用户点击确认任何事务。尽管有一些其他的限制条件，但我已经成功在一台真正的Ledger
Nano上演示了此种攻击方法。此外，我在几个月前已经将相关源代码发送给Ledger，以便他们能够重现这一问题。  
从上面的视频可以看出，对生成的恢复种子（Recovery
Seed）执行供应链攻击以修改的方式并不困难。因为所有的私钥都是由恢复种子生成的，所以攻击者可以借此窃取到任何设备上的资金。
###  安装后的物理访问
这通常被称为“邪恶女佣攻击（Evil Maid
Attack）”。通过这种方式，只要该设备在攻击后被使用过一次，攻击者便可以提取PIN码、恢复种子，以及使用任何BIP-39口令。  
和上一种方案一样，不需要预先在计算机上安装恶意软件，同样也不需要用户进行任何确认。只需要攻击者安装一个自定义的MCU固件，就能在用户下一次使用的时候，在用户不知情的情况下取得私钥。
###  恶意软件（包含社会工程学）
这种攻击要求用户更新受感染计算机上的MCU固件。具体可以通过显示错误消息来实现，该消息要求用户通过按住左侧按钮来重新连接设备（以进入MCU引导程序）。随后，恶意软件就可以使用恶意代码对MCU进行更新，允许恶意软件控制设备上的显示内容以及确认按钮。  
如果在官方的固件更新发布时利用这种攻击方式，就会变得非常有迷惑性，在撰写本文的两周前就发生过这样的攻击。
## PoC
如果你想错过自己开发漏洞利用方式的乐趣，可以在Github上找到我的PoC： 。  
大家可以根据里面的说明进行操作，将其安装在运行固件1.3.1或更低版本的Ledger Nano
S上，即可重现上述视频中的攻击。然而，由于该PoC只用于教学目的，因此我故意将该攻击调整得不太可靠。
## 硬件钱包的背景介绍
像比特币这样的加密货币，会使用公钥密码来保护资金的安全。只有持有私钥的用户才可以合法使用所拥有的资金。  
这样一来，就给用户带来了一个问题：用户应该如何保护他们的私钥？大家知道，人类在保护机密和设备安全的这一方面非常脆弱，甚至连安全专家都不是绝对可靠的。  
为了解决这一问题，目前已经发明了一类名为“硬件钱包”的设备。顾名思义，这些硬件设备可以存储用户的私钥，以防范恶意软件。有很多此类设备都是通过USB的方式连接到PC，但并不会泄露PC的私钥，就像硬件安全模块（HSM）一样。  
然而，获取私钥并不是攻击者窃取比特币的唯一方式。攻击者还可以对交易的接受者和金额进行更改。如果该操作是在暗中进行的，那么大多数用户都不会意识到这种攻击的发生，直到发现时已经无法再收回自己的资金。  
因此，硬件钱包与简单的硬件安全模块有所不同，它需要具有以下功能：  
1、用于可视化验证交易信息的可信显示；  
2、设备上的按键，用于确认或拒绝交易。  
硬件钱包还需要防范各类攻击，其中包括：  
1、远程攻击（当攻击者可以通过计算机上的恶意软件获取私钥时）；  
2、供应链攻击（当攻击者可以在用户接收到信息前修改设备时）；  
3、未经授权的物理访问攻击（当攻击者可以获得物理访问权限时）。  
进一步，我们可以将最后一类攻击再细分成两类：盗窃设备和“邪恶女仆”攻击。如果攻击者可以窃取到设备，那么他们就有更长的时间来执行攻击，并可能会有权限访问到昂贵的实验室设备。然而，用户可能会发现自己的设备丢失，从而立即更换新的私钥，这样一来这种攻击方式便随之失效。  
一些安全特性（如使用未存储在设备上的密码验证短语）可以防止攻击者窃取资金，因为设备目前不完全包含恢复私钥所必需的信息。  
对于另一种攻击方式，如果采取“邪恶女仆”攻击，攻击者便只有有限的时间来执行攻击。由于这些攻击可以在多种场景下实现，因此会更加危险：  
1、顾名思义，一个“邪恶女仆”可能会在酒店房间清洁时非法窃取设备；  
2、在通过机场安检的过程中，设备可能会被短时间持有；  
3、如果将设备委托给亲属或律师，可能会产生风险。  
在本文的相关披露中，我们主要关注供应链攻击的情况，也就是说，当用户从经销商或第三方购买硬件钱包后，是否可以信任这个硬件钱包。但是，正如我在本文开头所简要解释的那样，这里描述的方法可以应用于其他两种攻击方式。
## 攻破结构
2014年9月，Ledger发布了HW.1。这个钱包基于ST23YT66，这是一款支持USB的智能卡。但不幸的是，该设备没有可信显示屏及按钮，这样就使得钱包在使用过程中非常危险。  
2016年7月，Ledger推出名为Nano S的新设备，该设备基于ST31H320安全元件，同样采用USB连接方式，但包含了确认按钮和可信显示屏。  
2017年11月，我开始认真研究Nano S的安全性。  
尽管我目前还没有精力来研究最新的Ledger Blue，但其功能与Nano S相同。在撰写本文时，还没有发布任何固件更新来修复Ledger
Blue中的漏洞。
###  双芯片结构
尽管ST31H320（ 
）没有可用的公共数据表，但我们迅速地查看了数据摘要（
），该安全元件不支持显示器，甚至它居然不支持USB。它所支持的唯一接口是较低吞吐量的UART。  
为解决这一问题，Ledger开发了一种新的架构。Nano S增加了第二个非安全的微控制器（STM32F042K6，
），由它来充当安全元件的代理。该处理器负责显示器、按钮和USB接口的驱动，并连接存储实际私钥的安全元件。  
从现在开始，我们将ST31安全元件成为SE，将STM32微控制器称为MCU。架构图如下所示：
SE只能与MCU直接通信，但MCU却可以代表SE与外部设备进行通信。  
安全元件的一个重要特性就是，我们可以执行加密证明，以确定它在运行真正的Ledger固件。这实际上是Ledger的一个亮点，Ledger认为这个安全功能非常强大，以至于Ledger钱包不需要防包装篡改（
 ）（archive.is / archive.org）。
Ledger的CTO甚至告诉用户，从eBay上购买是完全安全的。  
这样就产生了关键的问题，虽然我们可以信任SE上的软件，但是MCU并不是安全的芯片，我们可以证明它的固件可以被攻击者替换。  
在这里存在的问题是：如果要保证Ledger的安全，那么信任链必须要保存着SE中，这就意味着SE必须验证MCU上的固件。
###  硬件篡改
虽然本文将着重介绍软件篡改，但还是希望大家注意，如果没有软件漏洞存在，我们还是可以通过硬件篡改的方式来对设备进行漏洞利用。  
为了保证设备绝对的安全，我们必须对物理硬件进行彻底的验证，这一点非常重要。  
由于包装和实际设备都不能被用户明显地看到，因此攻击者对设备的修改行为也是隐蔽的，这里就在要强调验证物理硬件的重要性。  
当存在有未经授权访问的风险时，也应该对硬件进行验证，否则很容易受到“邪恶女仆”类型的攻击。  
Ledger提供了针对该攻击方式的指导说明（ 
），但我们注意到在说明中存在着两个问题：  
1、这些图片的质量各不相同，Ledger需要提供能清晰展现每个组件的高分辨率图片；  
2、并没有展现设备的反面细节。  
验证设备反面的细节是非常重要的，特别是因为这是MCU的JTAG头（调试接口）所在的地方。  
除了这两个问题之外，我还对于其中一个具有额外闪存（但引脚数相同）的MCU重新标记为STM32F042K6有所质疑。  
尽管这一部分的内容非常重要，但我本文中所描述的攻击不需要硬件篡改。
###  验证MCU固件
假设用户已经仔细检查了固件，而且确信其没有被修改。但如果攻击者只是更改了MCU的固件，那么会发生什么呢？  
Ledger考虑到这种攻击方式，并且为了防范此类情况，设定SE去验证MCU固件。  
但事实证明，在非安全的处理器上验证固件并不是一件简单的事情。SE只是一个简单的智能卡，其与MCU通信的唯一方法就是通过一个低吞吐量的UART。那既然不能直接访问MCU上的RAM或闪存，SE如何验证其固件呢？  
Ledger的方案是，SE要求MCU传输其闪存的全部内容，如下所示。
起初来看，这样的机制似乎有问题。从本质上，我们是在要求一个（有可能已经被攻陷的）MCU来证明它正在运行官方的Ledger固件。然而，如果单片机受到危害，那么是否有机制可以防范它发送不同的代码呢？这是Ledger试图解决的一大难题。  
Ledger采用的理论基于这样的一个事实：MCU具有相对有限的闪存容量。如果要运行恶意固件，那么攻击者还需要存储官方Ledger固件，以便能够满足SE的要求。因此，Ledger
希望通过限制闪存量的方式来将这种利用方法变得困难。  
具体而言，Ledger选择验证整个闪存，并用随机数据填充空白区域，这样就难以使得存储有恶意代码的MCU通过验证。  
这是一个非常不错的想法，而且有可能会做到，但我完全不同意这个解决方案。