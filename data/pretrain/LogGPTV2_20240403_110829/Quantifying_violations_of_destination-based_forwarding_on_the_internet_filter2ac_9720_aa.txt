title:Quantifying violations of destination-based forwarding on the internet
author:Tobias Flach and
Ethan Katz-Bassett and
Ramesh Govindan
Quantifying Violations of Destination-based Forwarding
on the Internet
Tobias Flach
University of Southern
California
Los Angeles, CA 90089, USA
ﬂPI:EMAIL
Ethan Katz-Bassett
University of Southern
California
Ramesh Govindan
University of Southern
California
Los Angeles, CA 90089, USA
PI:EMAIL
Los Angeles, CA 90089, USA
PI:EMAIL
ABSTRACT
Initially, packet forwarding in the Internet was destination-based –
that is, a router would forward all packets with the same destination
address to the same next hop. In this paper, we use active probing
methods to quantify and characterize deviations from destination-
based forwarding in today’s Internet. From over a quarter million
probes, we analyze the forwarding behavior of almost 40,000 in-
termediate routers. We ﬁnd that, for 29% of the targeted routers,
the router forwards trafﬁc going to a single destination via different
next hops, and 1.3% of the routers even select next hops in differ-
ent ASes. Load balancers are unlikely to explain these AS-level
variations, and in fact we uncover causes including routers inside
MPLS tunnels that otherwise employ default routes. We also ﬁnd
that these violations can signiﬁcantly affect the results of measure-
ment tools that rely on destination-based forwarding, and we dis-
cuss some ideas for making these tools more robust against these
violations.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network Opera-
tions—Network management; C.2.6 [Computer-Communication
Networks]: Internetworking—Routers
Keywords
Routing, Measurements, Forwarding, Ping, Traceroute
1.
INTRODUCTION
Historically, most IP routers determined the next hop of a packet
based solely on the destination of that packet [8]. As the routing
fabric has evolved, networks have deployed several mechanisms
that violate destination-based forwarding. Many Internet routers
employ load balancing, with the majority of load balancers split-
ting trafﬁc based on the ﬂow identiﬁer [3]. Tunneling using en-
capsulation (e.g., MPLS label switching or IP-in-IP encapsulation)
can produce different routes than destination-based forwarding, as
routers in the tunnel forward packets based on a label or the IP
address of the tunnel endpoint. Finally, policy-based forwarding
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’12, November 14–16, 2012, Boston, Massachusetts, USA.
Copyright 2012 ACM 978-1-4503-1705-4/12/11 ...$15.00.
mechanisms may determine next hops using policies speciﬁed on
arbitrary header ﬁelds to realize, for example, differentiated ser-
vice.
Despite the existence of such mechanisms, a number of measure-
ment systems still assume destination-based forwarding [6,10, 15].
These systems are agnostic to whether routers forward based on
destination or based on, say, labels. However, their correctness de-
pends on the resulting routes being observably destination-based,
in that all packets from a router to a destination follow the same
path.
For example, reverse traceroute assumes forwarding is destination-
based in order to stitch together a path out of segments of multiple
paths to a common destination [10]. This stitching could yield false
paths if routers forward based on factors other than just the desti-
nation address.
As another example, Doubletree attempts to minimize the num-
ber of probes required for topology discovery [6]. It uses hop-by-
hop probing, like traceroute, to ﬁnd (partial) paths between source-
destination pairs, but stops probing for a pair if it observes an in-
terface which was encountered earlier while probing on a different
path to the same destination. In that case, Doubletree assumes that
the remainder of the path is the same for both pairs. This may not
hold if forwarding is not strictly destination-based.
Figure 1 illustrates how violations of destination-based forward-
ing can signiﬁcantly distort path measurements. This ﬁgure shows
the result of two probes sent to a PlanetLab node at the University
of Auckland, New Zealand. We sent the ﬁrst probe from a Planet-
Lab host at the University of Texas in Arlington, and we injected
the second probe at one of the intermediate nodes observed on the
ﬁrst probe’s path. The two probes take completely different AS-
level paths because we injected the second probe at a router inside
an MPLS tunnel. Because the injected packet lacked an MPLS la-
bel, the router forwarded it via a default route [14].
In this paper, we make two contributions. First, we devise a
general methodology to detect destination-based forwarding vio-
lations; prior work (e.g., [4]) has described methodologies tailored
towards speciﬁc kinds of violations like load balancing. Combining
and adapting two existing probing techniques [7,10], our technique
uses source-spoofed IP record-route pings to quantify violations of
destination-based forwarding. By injecting packets in routers in the
middle of a source-destination path, we are able to detect violations
caused by MPLS tunnels. In addition, these injected packets have
different contents, so they can exercise load balancers or certain
violations due to policy-based forwarding.
Our second contribution is an analysis of three research ques-
tions: How often is destination-based forwarding violated (Sec-
tion 3)? What are the causes of these violations (Section 3 &
4)? What effect do these violations have on the accuracy of mea-
265Figure 1: Observed partial paths for two probes to the same
New Zealand destination. The ﬁrst probe (thin/blue arrows)
traverses the LEARN network via an MPLS tunnel. We inject
the second probe (thick/red arrows) at the colored router inside
the tunnel. The router forwards it based on the IP table entry
for the destination. Each node is labeled with its AS. Dashed
arrows indicate elided paths.
surement systems that assume the prevalence of destination-based
forwarding (Section 5)? To answer these questions, we employ
our probing methods on PlanetLab and conduct large-scale experi-
ments, measuring paths between PlanetLab hosts and from Planet-
Lab to the broader Internet. We measure over 250,000 paths span-
ning over 3,700 ASes and ﬁnd that a non-negligible fraction (4.4%)
of probed ASes exhibit violations that cause AS-level differences in
paths. Moreover, we ﬁnd that violations of destination-based for-
warding can signiﬁcantly skew the results obtained by tools like
reverse traceroute and Doubletree. We also ﬁnd that a tool like re-
verse traceroute can easily be made more robust to such violations,
but it is less obvious how to make Doubletree more robust.
2. MEASUREMENT METHODOLOGY
In this paper, we use active probing to ﬁnd routes that observ-
ably violate destination-based forwarding. We ﬁrst measure a path
h1, h2, . . . hn from a PlanetLab source to a destination D. Then,
for each router hi on that path, we want hi to send a packet to D, to
test whether it forwards to the same next hop hi+1 observed in our
original path. By forcing hi to send the packet – that is, by chang-
ing the point where the packet is injected into the network1 – we
guarantee that it does not route based on encapsulation originated
by another router, thus giving us visibility inside tunnels. Since we
do not have direct access to hi, we have to induce it into sending a
packet to D, which we can do by sending it an ICMP Echo Request
and measuring the path that hi’s response uses.
While traceroute cannot measure this path, an IP Record Route
ping (henceforth RR ping) can [10]. An RR ping is an ICMP Echo
Request with the Record Route (RR) IP option enabled. The IP
standard requires that, if a packet has the RR option set, routers
record the IP address of one of their interfaces into the packet
header. However, the RR ﬁeld only has space for nine entries, and
some routers do not honor the standard. Thus, only the ﬁrst nine
routers that implement the RR option will record one of their in-
terfaces, and later routers will not overwrite these entries. A router
that receives an RR ping will copy the RR ﬁeld into the ICMP Echo
Response, and hops on the reverse path will ﬁll the remaining slots.
Many routers support the RR option [17], and the global distribu-
tion of PlanetLab allows probes to reach many IP addresses within
the nine-hop limit [9]. Nevertheless we acknowledge that the limi-
tations of RR might introduce some bias to our data.
Baseline Experiments: Our experiments use PlanetLab nodes
1In this study, we only modiﬁed the point of injection (and there-
fore the source address of the packet), to keep the methodology
concise. Thus, we do not detect violations caused by differing port
numbers, protocol types, etc.
Figure 2: Example for two comparable paths to the same des-
tination P2. The thin/blue path (top) is traversed by an RR
ping request sent directly to P2. The thick/red path (bottom) is
traversed by a spoofed RR ping request sent to h1 and the re-
sponse forwarded to P2. Note that only the ﬁrst nine hops can
be recorded in either case, thus the remainder of the path to the
destination is unknown.
to send RR pings and receive the responses. To describe our method-
ology, we discuss our baseline experiments conducted between source-
destination pairs (cid:104)P1, P2(cid:105) both on PlanetLab, resulting in a data set
we label Set PL/PL (PlanetLab-to-PlanetLab). Later, we discuss
extensions to this methodology.
For each such pair, P1 ﬁrst sends an RR ping request to another
PlanetLab host P2. Depending on the hop distance between the
pair, the RR ﬁeld in the response that P1 receives will include all
or part of the forward path to P2 and may include all or part of the
reverse path back to P1. The hops on the forward path of this probe
constitute what we call a control hop-sequence.
To detect violations to destination-based forwarding, we com-
pare this hop sequence with sequences generated by sending test
probes as follows (Figure 2). P1 sends an RR ping to each for-
ward path hop hi, but spoofs the source address as P2. Spooﬁng
ensures that the response traverses the path between hi and P2.
The response records hops in this path, when header space permits,
and we use these hops to form what we call a test hop-sequence.
This technique is strongly inﬂuenced by the methodology of re-
verse traceroute [10] and a prior technique used to estimate ICMP
generation delays [7].
Thus, while the control probe is routed through the forward hops,
we inject the i-th test probe at hi.
If forwarding were strictly
destination-based, the control probe and the response to the test
probe would follow the same path from hi to P2 because they are
both destined to P2, even though they have different source ad-
dresses (the response has hi as the source address). On the other
hand, if the next hop h(cid:48)
i+1 in the test hop-sequence is different
from the next hop in the control hop-sequence, the hop hi vio-
lates destination-based forwarding. In this case, we say that a path
fork occurred at router hi and that hi satisﬁes the fork condition.
However, the converse is not true: hi may violate destination-based
forwarding, but this violation may not always be visible in the way
packets are forwarded at hi.
Since a fork condition may be caused by a routing change be-
tween the control and the test probes, we repeat the pair of probes
to ensure that the fork condition is reproducible. If a hop hi reliably
satisﬁes the fork condition, it is said to be a violator. Note that a
violator need not violate destination-based forwarding for all traf-
ﬁc through it; our deﬁnition classiﬁes the router as a violator if it
exhibits the fork condition for at least one source-destination pair.
Extended Experiment Sets: As seen in the Set PL/PL part of
Figure 3, only the ﬁrst eight routers on a path between two Plan-
etLab nodes can be classiﬁed, and the source node must support
spooﬁng. To target routers that are not observed on paths between
266additional load balancing. Many routers act as packet-based load
balancers for packets with IP options, including RR pings [17]. We
can pinpoint these nodes by recording the control hop-sequence for
a source-destination pair multiple times; we do this by issuing RR
pings repeatedly. To ﬁnd all possible paths with high probability
we send 100 probes for each pair, and then compute the conﬁdence
interval for observing all next hops [4]. To avoid misclassiﬁca-
tions in our analysis, we only used measurements with at least 99%
conﬁdence. Our results indicate that the 100 probes we sent per
pair were sufﬁcient to reach this conﬁdence threshold in almost all
cases. We mark a node as a load balancer if we observed at least
two different next hops after that node on measurements to a single
destination.
If a router inside an MPLS tunnel forwards the control probe
based on a tunnel label, rather than based on the destination, it may
choose a different route when it generates and sends the test probe
towards the destination. To detect violations correlated with MPLS
tunneling, that is cases where the violating node is observed in an
MPLS tunnel, we use two detection mechanisms.
First, we rely on traceroute measurements which exhibit MPLS
labels for nodes in explicit MPLS tunnels [5]. However, up to 50%
of the tunnels have conﬁgurations which prevent this means of de-
tection. That is, either the nodes do not appear in traceroute mea-
surements at all (opaque or invisible tunnels) or their MPLS labels
are obfuscated (implicit tunnels) [5, 18]. As such violations caused
by them remain unclassiﬁed.
Second, we enhance our measurements to ﬁnd possible instances
of default routing regardless of tunnel visibility. Some routers in
the middle of tunnels do not carry full routing tables and rely on
tunnels to forward packets routed through them [14]. A router con-
ﬁgured in this manner will use a default route to forward any packet
it sources, and so all packets sent from the router will have the same
next hop, regardless of the destination. To detect evidence suggest-
ing such behavior, we sent a number of RR pings to a router, each
using a different PlanetLab node as the spoofed source, thus caus-
ing the router to send responses to each of those PlanetLab desti-
nations. If all these responses have the same ﬁrst hop, regardless
of the destination, and this hop differs from the next hop we ob-
serve on a route through the router, we assume the route through
the router was traversing a tunnel.
Violation causes such as policy-based forwarding are harder to
establish, and we have left these to future work.
3. RESULTS