尽管如此，在 IT
运营组织内管理工作的最常见方法是什么？以工单系统的形式请求队列。
当组织通过工单系统在其他孤岛中工作的人员之间的交互时，你正在直接（等待时间更多、开销更多、断开连接更多、错误更多）和间接（因此产生更多的琐事）削弱人们进行增值工程工作的能力。更糟糕的是，这种不断缺乏的能力和日益增加的琐事正在超越我们的修复能力，因为根源在另一个孤岛。
在接下来的章节中，我讨论如何消除孤岛、队列和工单，以及如何在无法消除的孤岛、队列和工单时避免其有害影响。 
# 立即行动
 本章的第一部分阐述了 SRE
要求改变传统企业运维组织中普遍存在的基本条件。以下各节将介绍你可以采取哪些步骤来清除
SRE 转换的障碍。
与任何转型一样，应该采用持续改进的方法。你的组织是一个复杂的系统。复杂系统的大爆炸变换是有风险的，而且成功几率很低。无论你为
SRE
转换提前计划了多少，在开始实际操作后，它可能会有所不同。应该鼓励你的团队采取一系列稳定、深思熟虑的行动。
本章其余部分的建议不应被视为采取行动的先决条件或应遵循的明确公式（即"唯一可靠的方式"）。这些是需要持续应用的模式和经验。召集新的
SRE
团队，赋予它开始转变工作方式的能力。使团队能够跨越组织边界，并协作进行有利于每个人的改进。支持行动和持续改进。
# 从精益开始
  如果要转变运维组织的工作方式，不妨利用经过验证的转化知识。精益制造运动产生了丰富的设计模式和技术，[*https://www.goldratt.com*](https://www.goldratt.com)和[*https://www.lean.org*](https://www.lean.org)可以应用于改进任何工作流程。特别是从 丰田生产系统诞生的
*Kaizen*（大致翻译为"持续改进"）的原则，加速了转型，并推动了组织的不断学习能力。  为了把
Kaizen 带到一个组织，有一个叫做 *Kata*的方法，也基于丰田生产系统。
Kata 是一种极好的方法，适用于消除琐事、孤岛和请求队列的挑战。Kata
鼓励组织查看端到端工作流程，并有条不紊地进行实验，直到达到预期结果。鼓励团队超越自己的工作，从整体上思考问题。Kata
将帮助你确定阻碍目标前进的方向，并且在迭代这些目标时保持一致。
重要的是要指出，Kata
是关于*自我*提升。当人们知道如何在日常工作中解决问题时，性能会持续提高。一次性项目或外部帮助可能在特定时间点提供特定利益。然而，企业不会停滞不前。新的挑战，大大小小的，将一直出现。
SRE
团队旨在进行工程工作，以提高系统的可靠性和可操作性，并减少琐事（腾出更多时间用于工程工作）。根据定义，SRE
团队必须是学习团队，他们可以在日常工作中发现并解决问题。Kata
是一个很好的参考，教新的 SRE 团队如何思考和工作这样的。
Kata 方法已经成为敏捷和 DevOps
努力中的常见做法，旨在改进开发和交付流程。但是，运维过程很少被视为值得努力，尤其是在传统运维文化中。这种疏忽是不幸的，因为运维质量的价值与组织中的任何其他质量度量值相等。即使是临时运维流程（例如，由于事件或类似类型的事件而导致的一次性运维）也是值得研究的过程。
如果正在考虑迁移到
SRE，你应该假定自己的组织已经知道投资改进运维工作的价值。如果不是，公司中的技术和业务领导者之间需要就价值问题展开对话。
有许多书籍，演示文稿，和其他资源，带你深入到 Kata 的实践。我强烈推荐
Mike Rother[的作品"The Improvement
Kata"](http://www-personal.umich.edu/~mrother/The_Improvement_Kata.html)和
John Shook。Rother, Mike, and John Shook (2009). *Learning to See
Value-Stream Mapping to Create Value and Eliminate Muda*Cambridge, MA:
Lean Enterprise Institute; Shook, John (2010). *Managing to Learn: Using
the A3 Management Process to Solve Problems*, Gain Agreement, Mentor,
and Lead. Cambridge, MA: Lean Enterprise Institute.然而，Kata
的一部分美是，你不需要太多的知识，开始，并开始看到的好处。以下是运维上下文中的
Kata 流程概述：
1.  *选择方向或挑战。*这是更高级别的方向目标。作为一个组织，你想去哪里？要最大化的业务价值是什么？贵公司理想的运维状态是什么？
-   关键是要就运维对业务的价值以及为了最大化该价值所需的性能和可靠性级别达成共识。整个组织（从一线工程师到领导）应该知道他们为什么要进行这种
    SRE 转型，以及它将如何改善业务。
    答案不需要过于详细，也不必解决如何达到这个要求。但是，如果答案听起来像一般性陈词滥调或模糊的任务声明，那是一个失败（例如，"让客户获得高度可用和快速的服务"）。继续努力，直到人们对组织需要去哪里以及为什么有一个体面的概念。应对可衡量的运维成果（例如，减少事件、缩短响应时间和增加变更频率）和期望的业务成果（例如，销售额增加和净推广者得分较高）进行一些认可。
2.  *掌握当前状况。*明确了解当今事物的工作原理。对想要改进的流程进行端到端的查看，并努力了解当前实际如何完成。为什么会这样？完成它需要什么？需要谁来完成它？有什么妨碍你？什么时候出问题？
-   请务必查看组织中的每个工作类型。面向项目的工作是一个明显的选择（系统工程、环境构建等）。查看事件（即故障情况）也同样重要。将事件作为流程进行检查听起来可能很奇怪，因为除了某些通信和信息收集手续之外，事件很少遵循许多标准流程。但是，如果查看足够的事件，你会发现常见的模式。事件为了解组织如何真正"编程"工作提供了非常启发性的调查。
     记住，孤岛是你的敌人。私下进行此类分析或将其限制在"专家"团队，这只为你的组织带来最小价值。企业因信息条块分割而臭名昭著。很少有人会知道端到端流程的实际发生情况，甚至他们也难以达成一致意见。你一定会睁大眼睛，听到这样的评论，比如，"嗯，这不是我想象中的运行机制"，或者"我从来不知道"，即使是任期最长的员工也可能这样说。仅此一项就值得付出努力。
    公开做你的分析，并鼓励尽可能多的人参与。寻找上游和下游，让有知识的参与者作出贡献。邀请开发人员、项目经理和其他操作团队。如果尽可能多的人对需要改变的内容有类似的理解，那么你向
    SRE 的转换就最有可能成功。
     可视化分析是使一组人员保持一致（假定你作为一个组进行可视化分析）的一种非常有效的方法。在 精益术语中，这称为"去
    Gemba"，它大致翻译为"去工作发生的地方"，在物理制造世界中，这意味着去工厂直接观察工作的第一手资料。
    在 IT
    运维中，实际上看不到大多数工作发生。除了一些工件之外，这项工作都是抽象和个人的心理模型。因此，只有在将人们聚集在一起，并在流程回顾会议中最好地调整这些心理模型时，才在我们的上下文中访问
    Gemba。[#artifacts_from_visual_analysis_created_du](#artifacts_from_visual_analysis_created_du)显示这些会话之一的结果。这种一致性非常重要，因为这些个人的心理模型是组织内每个人评估和执行其日常工作的镜头。
    ![在流程回顾会话期间创建的可视化分析中的工件。](media/rId37.png){width="4.816053149606299in"
    height="1.2876246719160105in"}
    在流程回顾会话期间创建的可视化分析中的工件
    那你怎么做到的呢？当你一次查看一个进程时，此可视化分析效果最佳。选取流程（项目工作的特定交付或特定事件）。将掌握流程第一手知识的人员召集在一起（足以端到端地查看它）。找出实际发生的情况（关注工作流程，将人和工具作为二级支持细节）。最后，让学员识别和讨论哪些方面妨碍了参与者。用足够的流程实例（或相关流程组）重复此操作，直到对流程如何发生、为什么发生（如果是事件）以及妨碍的原因达成合理的共识。
    你可以利用其他资源来开发可视化和分析技术。价值流映射Rother, Mike,
    and John Shook. (2003). *Learning to See: Value-Stream Mapping to
    Create Value and Eliminate Muda*. Cambridge, MA: The Lean Enterprise
    Institute. 和 [Lean Waste
    classification](https://itrevolution.com/the-7-wastes-of-devops/)
    都非常有用。
3.  *建立你的下一个目标条件。*此步骤是决定你的组织将尝试达到的下一个改进目标的位置。同样，最好作为一个组来完成。根据步骤
    1 中确定的方向目标和步骤 2
    中发现的当前状况，我们将尝试完成的下一个主要中间步骤是什么？这是组织要关注的，因此每个人都应该能够阐明当目标条件实现时应该是什么样子。
-    正如 Mike Rother
    建议的那样，"设置目标条件不是在现有选项或最佳实践之间进行选择。这是关于渴望新的表演。通过设置目标条件并尝试实现它，你了解了为什么不能实现。*这就是你工作的原因。*"
4.  *朝目标条件进行实验。*使组织进入形成假设的迭代节奏（例如，"如果我们能停止/启动*x*，它将导致
    *y* *z*
    减少/增加"），测试备选方案（例如，流程、工具或组织更改），并评估结果。如果结果将您推向目标条件，请实现任何测试内容，然后继续进行其他实验。如果你看到这个科学方法，你是正确的。重复实验，直到达到下一个目标条件。
在此过程的第 4 步中，请确保经常重新访问步骤
2，以确保每个人都仍然掌握当前情况。此外，请确保经常查看下一个目标条件的规范，以确保每个人都保持一致。