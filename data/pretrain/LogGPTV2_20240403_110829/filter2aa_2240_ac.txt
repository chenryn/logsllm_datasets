### 4.2.1 "Best Before" Date for Web Browsers

As previously quantified, a significant fraction of the web browsers used daily to navigate the internet are not up-to-date with the latest security patches. This leaves users vulnerable to malware infections, which can expose their personal data to attackers. The lack of critical or important updates in web browsers can generally be attributed to three key factors: technological (inability to update), motivational (lack of concern), or informational (lack of awareness).

When addressing the issue of vulnerable web browsers, it is essential to consider the roles of the end user, the web browser vendor, and the web service provider. Each party can contribute to resolving the problem in different ways.

We believe that a crucial step in enhancing the security of web browsers (and other networked applications) is to make users aware of the risks they face without introducing additional complexity. Most users are familiar with the concept of "sell by," "expires on," or "best before" dates on perishable goods. Consumers use this information to decide whether to purchase, use, or dispose of these products. Once a product has passed its "best before" date, the consumer must evaluate the risk of using it versus disposing of it. The longer the period between the "best before" date and the current date, the higher the risk assumed by the consumer.

Given the state of the software industry and the increasing threat of exploitable vulnerabilities in all applications, we propose the establishment of a "best before" date for all new software releases. This could be an effective means of educating users about the need to patch or "refresh" their software. The same "best before" date information could also be used by internet businesses to assess and mitigate the risk posed by customers using outdated software.

In Table 5, we compare the practices of the food industry with those of the software industry. The food industry's implementation of "best before" dates has been widely accepted as a valuable tool for consumers to evaluate the integrity and spoilage likelihood of their purchases. By developing a similar system for software, both users and businesses could be better informed, particularly in the context of web browsers and plug-in applications.

A shift in public mindset is necessary to counter evolving internet threats. A "best before" dating system would highlight the risks of using outdated and insecure software. Instead of assuming software is secure, this system would notify users of upcoming expiration and associated risks, encouraging them to keep their installed software "fresh." Although the exact "best before" date for software is not known at the time of release, it will be defined when a security patch is detected and made available for an already released version. Therefore, the software must frequently query this information.

To implement a viable "best before" dating system, software vendors need to follow stricter practices in allocating and making version numbers accessible. For example, Firefox, Safari, and Opera provide detailed version information in the USER-AGENT header field, while Internet Explorer only provides major version information. Detailed version information allows service providers to remotely determine the patching level of the web browser and potentially implement their own "best before" look-up services. For instance, an online banking service could use the version information provided by the user's web browser to assess the risk of the host being compromised by malware and implement additional safeguards.

While some may argue that more detailed version information in the USER-AGENT field makes it easier for attackers to target specific versions, this is irrelevant given current attack methodologies. Access to such information by attackers would not increase the probability of exploitation but would reduce the volume of data sent to the browser by the attacker's malicious server.

**Visualizing a "Best Before" Date**

We believe that the "best before" dating concept could be integrated into most existing software applications, providing a convenient and persistent validation of the software's integrity. Popular web browsers could display a visual warning of expiry and the number of missing patches, as illustrated in Figure 5. With more concise USER-AGENT version information, popular websites could also visually alert users (see Figure 6) that their web browser is operating beyond its "best before" date and provide shortcuts to the appropriate updates.

### 4.2.2 Authentic Sources of Most Recent Plug-In Versions

As discussed, auto-update mechanisms are valuable for keeping web browsers up to date with the latest security patches. However, these mechanisms typically do not cover plug-ins not produced by the vendor or not included in the default installation. The Firefox web browser's auto-update mechanism alerts users to compatible updates for plug-ins installed through and registered by the browser, but this is limited to a few commonly used plug-ins.

Vulnerability disclosures over the past few years have revealed numerous critical, remotely exploitable vulnerabilities in almost all plug-in technologies (e.g., Microsoft ActiveX, Adobe Flash, Apple QuickTime). These plug-ins must be patched and updated like the web browser itself. To achieve this, the version information for installed plug-ins must be quickly compared with an authoritative source to determine if the host has the most current and secure version.

It is inefficient for different engineering teams of web browsers and plug-ins to develop independent solutions for the same problem. We propose that trusted organizations systematically collect and make accessible the most recent secure version information for browsers and popular plug-ins using a standardized querying process. This would allow web browsers to easily check the status of installed plug-ins and inform the user, as well as provide the necessary information to download and install the latest update. The same protocol could be used by web service operators to check the "best before" date information of client browsers and plug-ins requesting their services.

Conveniently, services and processes to collect and disseminate relevant security information already exist, such as CERTs and several private security information providers. Providing secure version information on a standardized protocol would align with their existing activities.

For plug-in technologies not registered or recorded by a searchable central authority, the use of a "best before" dating system, reinforced by web browser actions such as disabling access to the component, would likely aid in protecting vulnerable hosts.

### 5. Conclusion

Access to Google’s global web server logs enabled us to provide the first in-depth global perspective on the state of insecurity for web browser technologies. Understanding the nature of threats against web browsers and their plug-in technologies is crucial for continued internet usage. As more users and organizations rely on these technologies to access complex and distributed business applications, any threats to the underlying platform equate to a direct risk to business continuity and integrity.

By measuring the patching processes of web browser user populations, we identified the potential global scale of web-based malicious exploitation of browser technologies and demonstrated how existing mechanisms, such as Firefox’s auto-update, can outperform more complex and less timely solutions.

Based on direct measurements of the adoption of new web browser updates and combining that data with Secunia’s local-host scanning results for plug-in patch adoption, we quantified the lower bounds of the web browser population vulnerable to attacks through security weaknesses. Unfortunately, we were only able to measure the tip of the iceberg, estimating that 637 million (or 45.2%) internet users worldwide are at risk due to not running the latest, most secure browser version. The hidden part of the iceberg includes users relying on outdated, vulnerable browser plug-ins, which was out of scope for our passive measurement study.

To combat existing and rapidly evolving threats, we proposed the concept of a "best before" date for software and related mechanisms to enhance user awareness and provide a tool for online businesses to better assess the risk level of their customers' hosts. While none of the proposed mechanisms can guarantee full protection against exploitation, widespread adoption and improvements of these technologies would dramatically reduce the dimensions of the insecurity iceberg and shrink the attack surface.

### Acknowledgements

We would like to thank Bernhard Plattner, Head of the Communication Systems Group at ETH Zurich, for his valuable feedback and support for this paper.

### References

[1] Dan Goodin, TheRegister, “Attack code in the wild targets new (sort of) Adobe Flash vuln,” http://www.theregister.co.uk/2008/05/27/new_adobe_flash_vuln, May 2008.
[2] Adobe Inc., “Browser plug-in Market Shares,” http://www.adobe.com/products/player_census/flashplayer/tech_breakdown.html.
[3] IBM Internet Security Systems - X-Force, “IBM Internet Security Systems X-Force 2007 Trend Statistics,” http://www.ibm.com/services/us/iss/pdf/etr_xforce-2007-annual-report.pdf, December 2007.
[4] Heise security, “Hundreds of thousands of web pages infected with malicious JavaScript,” http://www.heise-online.co.uk/news/, April 2008.
[5] Websense, “Mass Attack JavaScript injection - UN and UK Government websites compromised,” http://securitylabs.websense.com/content/Alerts/3070.aspx, April 2008.
[6] Dan Goodin, TheRegister, “Trend Micro gets slashed in attack of the killer iframes,” http://www.theregister.co.uk/2008/03/13/trend_micro_website_infected, March 2008.
[7] F-Secure Inc., “Mass SQL Injection,” http://www.f-secure.com/weblog/archives/00001427.html, April 2008.
[8] SANS, “Mass File Injection Attack,” http://isc.incidents.org/diary.html?storyid=4405, May 2008.
[9] N. Provos, D. McNamee, P. Mavrommatis, K. Wang, and N. Modadugu, “The Ghost In The Browser - Analysis of Web-based Malware.” In Proceedings of HotBots 2007, Usenix, April 2007.
[10] NetApplications.com, “Search Engine Market Share,” http://marketshare.hitslink.com/articles.aspx, March 2008.
[11] NetApplications.com, “Search Engine Worldwide Market Share,” http://marketshare.hitslink.com/report.aspx?qprid=4, April 2008.
[12] Janco Associates Inc., “Browser and OS Market Share White Paper,” http://www.itproductivity.org/browser.php, June 2008.
[13] NetApplications.com, “Browser Market Share,” http://marketshare.hitslink.com/report.aspx?qprid=3.
[14] OneStat.com, “OneStat WebAnalytics,” http://www.onestat.com/html/aboutus_pressbox53-firefox-mozilla-browser-market-share.html.
[15] Jupitermedia Corporation, “TheCounter.com. Web Analytics,” http://www.thecounter.com/stats/2008/June/browser.php.
[16] T. Berners-Lee, R. Fielding, and H. Nielsen, “Hypertext transfer protocol - HTTP/1.0. RFC 1945, Internet Engineering Task Force,” IETF RFC 1945, May 1996.
[17] Secunia, “Secunia PSI study: 28% of all detected applications are insecure; current last month statistics,” http://secunia.com/blog/11/.
[18] B. Livingston, “Is IE 7 Really More Secure Than IE 6?” http://itmanagement.earthweb.com/columns/executive_tech/article.php/3639566, October 2006.
[19] S. Hardmeier, “Microsoft Better Browsing - Internet Explorer 7 offers improved security and productivity,” http://windowshelp.microsoft.com/Windows/en-us/help/a426bb85-708c-4b75-87e2-874f9be3b4aa1033.mspx, October 2006.
[20] Internet World Statistics, “World Internet Users and Population Statistics,” http://www.internetworldstats.com/stats.htm, March 2008.
[21] Secunia Inc., “Secunia Software Inspector Statistics,” http://secunia.com/software_inspector_statistics, May 2008.
[22] CNET, “Mozilla CEO says Apple’s Safari auto-update 'wrong',” http://news.cnet.com/8301-10784_3-9901006-7.html, May 2008.
[23] US-CERT, “United States Computer Emergency Readiness Team (US-CERT),” http://www.us-cert.gov.
[24] Secunia Inc., “Secunia,” http://www.secunia.com.
[25] IBM Internet Security Systems - X-Force, “IBM ISS X-Force,” http://xforce.iss.net.
[26] SecurityFocus/Symantec, “SecurityFocus,” http://www.securityfocus.com.
[27] FrSIRT, “French Security Incident Response Team (FrSIRT),” http://www.frsirt.com.