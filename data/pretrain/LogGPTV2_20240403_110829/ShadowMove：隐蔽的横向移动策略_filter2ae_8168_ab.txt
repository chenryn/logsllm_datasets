### ShadowMove总体架构概述

上图展示了ShadowMove的总体体系结构，该系统由六个主要模块构成：连接检测器、套接字复制器、对等处理器、网络视图管理器、横向移动计划器和计划执行器。其中，网络视图的概念是ShadowMove设计的核心，它代表了受害环境中正常网络通信模式的模型，并且由运行在不同受感染系统上的ShadowMove实例共同维护。每个ShadowMove实例都负责维护两个视图：基于本地系统当前连接状态的本地视图以及通过与其他ShadowMove实例间信息交换构建的全局视图。

#### 1. 连接检测器
连接检测器的主要职责在于发现可用于横向移动的新建立TCP连接，并请求套接字复制器复制这些连接对应的套接字；同时也能识别出断开的TCP连接并向网络视图管理器报告。本研究选择了定期轮询的方法来跟踪Windows或Linux平台上形成的TCP连接状态变化情况。对于Windows平台而言，在通知相关组件前还会先检查是否拥有足够的权限去访问特定进程。

#### 2. 对等处理器
此模块允许不同的ShadowMove实例之间共享各自关于受感染网络的认知。通过对等处理器的工作线程执行，各个实例能够根据已知的信息构建整个网络的概览。此外，它们还利用一种类似于距离向量路由协议的技术来保持彼此间知识的一致性。

#### 3. 网络视图管理器
网络视图管理器负责依据来自连接检测器与对等处理器的数据维护一个全面的网络视图。除了管理和更新重复套接字池之外，它还会尝试确定每种服务类型，并确保即使在网络不稳定的情况下也能够维持套接字的有效性。这包括设置SO_KEEPALIVE标志以自动发送保活数据包。

#### 4. 横向移动计划器与执行器
横向移动计划器会基于现有网络视图及可用资源定期制定新的攻击路径规划，指定所需使用的具体套接字及其操作方式。而计划执行器则负责实际实施这些策略，例如通过给定套接字发送/接收数据包来进行文件传输等任务。

### 关键技术细节

- **套接字复制**：在Windows操作系统下，尽管标准API如WSADuplicateSocket不能直接用于非协作环境中的套接字复制，但本文提出了一种创新方法，通过枚举目标进程中所有打开的句柄并寻找特定类型的afd文件句柄来间接实现这一目标。
- **套接字上下文理解**：为了更好地解释上述过程如何工作，还需要深入探讨Winsock库内部结构以及Windows API在常规套接字共享过程中所扮演的角色。这有助于我们理解为什么ShadowMove能够成功地在没有源进程合作的情况下完成套接字劫持。

总之，ShadowMove是一个复杂且高度集成的框架，旨在通过精确控制网络层面上的行为来促进恶意活动的传播。其独特之处在于巧妙地结合了多种技术手段，从而能够在不引起过多注意的情况下达到预期效果。