### Proving UI Element Coverage in Automated Android App Testing

To enhance the coverage of user interface (UI) elements when automatically exercising Android apps, a tool called Reaper was publicly released, outperforming Android's Monkey. Reaper employs a breadth-first traversal to identify an app's visual and "interactable" elements. However, there are scenarios where such tools may fall short, such as in complex games or apps that require user login before interaction. While Single Sign-On (SSO) could be used to handle login requirements, we chose not to use it to avoid potential influences on in-app ads delivered to our device.

#### Advertisement Coverage and Bias

The ad ecosystem is inherently complex and dynamic, with personalized and micro-targeted advertisements. This complexity means that our experiments likely capture only a limited snapshot of ad campaigns that misuse motion sensors. To mitigate this, we used a Virtual Private Network (VPN) service to diversify our device's geolocation and reduce potential bias in ad collection. Despite this, prior research has shown that VPNs can be detected, allowing ad libraries to infer the true location of a device. Additionally, persistent and hardware identifiers can track users even when using a VPN. Our empirical findings suggest that while a VPN is sufficient for obtaining foreign ads, certain apps or ads might modify their behavior based on the use of a VPN. In our analysis, ads fetched over VPN sessions were less likely to collect sensor data. Given the implications of our attacks and reports of increasing sensor-based ads, there is a critical need for stricter access control policies for mobile sensor data.

#### Network Flows and JavaScript Analysis

Our study involved analyzing network traffic and JavaScript code for suspicious behavior and data leakage. In most cases, the network flows were encrypted, and the JavaScript code was obfuscated, with dynamic code loading further complicating the process. Although we manually examined these cases, it is possible that some instances of suspicious behavior were missed. Therefore, our findings should be considered a lower bound of the privacy risks posed by in-app ads that access motion sensors.

#### Interstitial Ad Libraries

Interstitial ads are widely used, with many third-party libraries providing this functionality. In our study, we focused on Google's library due to its popularity. Our analysis identified flaws that amplify the impact of our attacks. Other third-party ad libraries that offer interstitials may suffer from similar or additional vulnerabilities.

#### Ad Ecosystem Practices

Based on our findings, it is possible for anyone to abuse the mobile ad ecosystem by delivering ads that capture rich sensor data. However, different ad networks and Demand-Side Platforms (DSPs) have varying policies and constraints for the JavaScript code allowed in ads. These entities may also dynamically analyze submitted ads in a sandboxed environment to prevent malvertising. As the ability for ads to access sensor data is an emerging trend aimed at increasing user engagement, it is unlikely that many ad networks or DSPs will prevent this.

#### Malvertising

Our study identifies an emerging threat originating from popular apps downloaded from the official Google Play Store and advertisements fetched from major, legitimate services. We did not analyze malware or suspicious apps from third-party markets, so we do not explore whether ads from less reputable or malicious ad networks are misusing sensor data.

### Related Work

To the best of our knowledge, this paper presents the first exploration of how the ad ecosystem can be misused for stealthy sensor-based attacks. Here, we briefly discuss relevant prior work on in-app ads, the HTML5 WebAPI, and the risks posed by WebView.

#### In-App Advertising

In-app ads are a crucial part of the mobile ecosystem and a primary revenue source for app developers. This relationship introduces several privacy issues, as Personally Identifiable Information (PII) is often accessed and leaked by embedded ad libraries. Meng et al. [60] collected over 200,000 real user profiles and found that mobile ads are personalized based on both demographic and interest profiles, potentially leaking sensitive information. Reardon et al. [81] discovered that third-party SDKs and ad companies use covert and side channels to obtain and leak permission-protected data from apps without the appropriate permissions. Reyes et al. [87] analyzed COPPA compliance and found that the majority of apps and embedded third-party SDKs contain potential COPPA violations. Nguyen et al. [67] conducted a large-scale study and found that 34.3% of apps sent personal data to advertisement providers without explicit user consent. Contrary to popular belief, a recent study found that ad networks comply with legal regulations, and app developers are the responsible entities [102]. Another issue with in-app advertising is the potential for ad fraud, with a recent study revealing that most ad fraud activities originate from ad libraries [54].

#### HTML5 WebAPI

The standardized features of the WebAPI allow developers to create interactive elements, improving the web experience and increasing user engagement. However, these features can also be misused for privacy-invasive or malicious purposes, such as web tracking and fingerprinting. Eckersley et al. [37] explored browser fingerprinting and introduced the Panopticlick project to identify common fingerprinting features in web browsers. While traditional fingerprinting techniques are heavily used to track desktop users, smartphone devices offer additional features for this purpose. Das et al. [25] studied web scripts accessing mobile sensors in 100,000 websites. The rich features of mobile devices can also be used to enhance security, such as device fingerprinting for web authentication [9] and accelerometer-based mechanisms for multi-factor mobile authentication [105].

#### WebView

Numerous studies have shown that misconfigured hybrid apps pose significant risks to users' privacy. Luo et al. [56] identified several attacks against WebViews, including the notorious `@JavascriptInterface` that allows JavaScript code to access Java methods. Rizzo et al. [89] evaluated the impact of such code injection attacks using static information flow analysis, while BridgeScope [112] assesses JavaScript interfaces based on custom flow analysis. Mutchler et al. [64] performed a large-scale analysis of over a million mobile apps and found that 28% contained at least one WebView vulnerability.

### Conclusion

The unique hardware capabilities of modern smartphones, such as sensors, enable a range of features that improve user interaction and experience. Unfortunately, these features also introduce new opportunities for misuse. In this paper, we demonstrated a novel attack vector that misuses the ad ecosystem to deliver sensor-based attacks. Our approach amplifies the impact and scale of such attacks by allowing attackers to reach millions of devices without requiring a malicious app download or tricking users into visiting a malicious page. We uncovered several flaws in Android's app isolation, lifecycle management, and access control mechanisms that enhance the coverage, persistence, and stealthiness of our attacks. To provide a comprehensive view of mobile-sensor access, we created a dynamic analysis framework using actual smartphone devices, which allowed us to analyze a large number of popular apps and ads over several months. Our findings reveal an emerging threat, as we identified in-app advertisements accessing and leaking motion sensor values. We propose a set of guidelines to better protect users and hope that our study will contribute to ongoing research pushing for better permission and access control management in Android.

### Acknowledgments

This project received funding from Horizon 2020 under grant agreements No 777855, 830927, 833683, and the National Science Foundation under contract CNS-1934597. This paper reflects only the views of the authors, and the funding bodies are not responsible for any use that may be made of the information it contains.

### References

[References listed here as provided in the original text.]

---

This revised version aims to make the text more coherent, professional, and easier to follow. It clarifies the key points and provides a structured overview of the research and its findings.