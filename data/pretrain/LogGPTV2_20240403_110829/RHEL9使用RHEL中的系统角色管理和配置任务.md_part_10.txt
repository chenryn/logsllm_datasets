1.  使用以下内容创建一个新的 `playbook.yml`{.literal} 文件：
    ``` screen
    ---
    - hosts: all
      tasks:
      - name: Configure crypto policies
        include_role:
          name: rhel-system-roles.crypto_policies
        vars:
          - crypto_policies_policy: FUTURE
          - crypto_policies_reboot_ok: true
    ```
    您可以将 [*FUTURE*]{.emphasis}
    值替换为您首选的加密策略，例如：`DEFAULT`{.literal}、`LEGACY`{.literal}
    和 `FIPS:OSPP`{.literal}.
    `crypto_policies_reboot_ok: true`{.literal}
    变量会导致系统在系统角色更改加密策略后重启系统。
    如需了解更多详细信息，请参阅
    [加密策略系统角色变量和事实](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/index#crypto-policies-system-role-variables_using-the-system-wide-cryptographic-policies){.link}。
2.  可选：验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file playbook.yml
    ```
:::
::: orderedlist
**验证**
1.  在控制节点上，创建另一个 playbook，例如,名为
    `verify_playbook.yml`{.literal}:
    ``` screen
    - hosts: all
      tasks:
     - name: Verify active crypto policy
       include_role:
         name: rhel-system-roles.crypto_policies
     - debug:
         var: crypto_policies_active
    ```
    此 playbook 不更改系统上的任何配置，只报告受管节点上的活动策略。
2.  运行同一个清单文件上的 playbook:
    ``` screen
    # ansible-playbook -i inventory_file verify_playbook.yml
    TASK [debug] **************************
    ok: [host] => {
        "crypto_policies_active": "FUTURE"
    }
    ```
    `"crypto_policies_active":`{.literal} 变量显示受管节点上的活动策略。
:::
:::
::: section
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_administration-and-configuration-tasks-using-system-roles-in-rhel.html#_additional_resources_2}其他资源 {.title}
:::
::: itemizedlist
-   `/usr/share/ansible/roles/rhel-system-roles.crypto_policies/README.md`{.literal}
    文件。
-   `ansible-playbook(1)`{.literal} 手册页。
-   [安装 RHEL
    系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/administration_and_configuration_tasks_using_system_roles_in_rhel/index#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel){.link}
    。
-   [应用系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings#applying-a-role_getting-started-with-rhel-system-roles){.link}
    。
:::
:::
:::
[]{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 8 章 使用 Clevis 和 Tang 系统角色 {.title}
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#introduction-to-the-clevis-and-tang-system-roles_the-clevis-and-tang-system-roles}Clevis 和 Tang 系统角色介绍 {.title}
:::
RHEL 系统角色是 Ansible 角色和模块的集合，为远程管理多个 RHEL
系统提供一致的配置界面。
您可以使用 Ansible 角色使用 Clevis 和 Tang
自动部署基于策略的解密(PBD)解决方案。`rhel-system-roles`{.literal}
包中包含了这些系统角色、相关的例子以及参考文档。
Network Bound Disk Encryption Client 系统角色可让您自动部署多个 Clevis
客户端。请注意，Network Bound Disk Encryption Client 角色只支持 Tang
绑定，您目前不能在 TPM2 绑定中使用它。
Network Bound Disk Encryption Client 角色需要已经使用 LUKS
加密的卷。此角色支持将 LUKS 加密卷绑定到一个或多个网络绑定(NBDE)服务器 -
Tang
服务器。您可以使用密码短语保留现有的卷加密，或者将其删除。删除密码短语后，您只能使用
NBDE 解锁卷。当卷最初使用临时密钥或密码加密时，这很有用。
如果您同时提供密语和密钥文件，角色将使用您首先提供的那一个。如果找不到任何有效密语或密码，它将尝试从现有的绑定中检索密码短语。
PBD
将绑定定义为设备到插槽的映射。这意味着对同一个设备你可以有多个绑定。默认插槽是插槽
1。
Network Bound Disk Encryption Client 角色也提供了 `state`{.literal}
变量。使用 `present`{.literal} 值来创建新绑定或更新现有绑定。与
`clevis luks bind`{.literal} 命令不同，您可以使用
`state: present`{.literal}
来覆盖其设备插槽中的现有绑定。`absent`{.literal} 的值会删除指定的绑定。
使用 Network Bound Disk Encryption Server 系统角色，您可以部署和管理
Tang 服务器作为自动磁盘加密解决方案的一部分。此角色支持以下功能：
::: itemizedlist
-   轮转 Tang 密钥
-   部署和备份 Tang 密钥
:::
::: itemizedlist
**其他资源**
-   有关网络绑定磁盘加密(NBDE)角色变量的详细参考，请安装
    `rhel-system-roles`{.literal} 软件包，并查看
    `/usr/share/doc/rhel-system-roles/nbde_client/`{.literal} 和
    `/usr/share/doc/rhel-system-roles/nbde_server/`{.literal} 目录中的
    `README.md`{.literal} 和`README.html`{.literal} 文件。
-   关于系统角色 playbook 示例，请安装 `rhel-system-roles`{.literal}
    软件包，并查看
    `/usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/`{.literal}
    目录。
-   有关 RHEL 系统角色的更多信息，请参阅 [RHEL
    系统角色简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}
:::
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-nbde_server-system-role-for-setting-up-multiple-tang-servers_the-clevis-and-tang-system-roles}使用 NBDE 服务器系统角色设置多个 Tang 服务器 {.title}
:::
按照以下步骤准备和应用包含您的 Tang 服务器设置的 Ansible playbook。
::: itemizedlist
**先决条件**
-   访问一个或多个 [*受管节点*]{.emphasis} （这是您要使用 NBDE
    服务器系统角色配置的系统）。
-   对 [*控制节点*]{.emphasis} 的访问和权限，控制节点是 Red Hat Ansible
    Engine 配置其他系统的系统。
    在控制节点上：
    ::: itemizedlist
    -   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
        软件包已安装 。
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
RHEL 8.0-8.5 提供对一个独立的 Ansible 存储库的访问权限，该存储库包含基于
Ansible 的自动化 Ansible Engine 2.9。Ansible Engine
包含命令行实用程序，如
`ansible`{.literal}、`ansible-playbook`{.literal}、连接器（如
`docker`{.literal} 和 `podman`{.literal}
）以及许多插件和模块。有关如何获取并安装 Ansible Engine 的详情，请参考
[如何下载并安装 Red Hat Ansible
Engine](https://access.redhat.com/articles/3174981){.link} 知识库文章。
RHEL 8.6 和 9.0 引入了 Ansible Core（作为 `ansible-core`{.literal}
软件包提供），其中包含 Ansible 命令行工具、命令以及小型内置 Ansible
插件。RHEL 通过 AppStream
软件仓库提供此软件包，它有一个有限的支持范围。如需更多信息，请参阅 [RHEL
9 和 RHEL 8.6 及更新的 AppStream 软件仓库文档中的 Ansible Core
软件包的支持范围](https://access.redhat.com/articles/6325611){.link}。
:::
::: itemizedlist
-   列出受管节点的清单文件。
:::
::: orderedlist
**流程**
1.  准备包含 Tang 服务器设置的 playbook。您可以从头开始，或使用
    `/usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/`{.literal}
    目录中的一个 playbook 示例。
    ``` screen
    # cp /usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/simple_deploy.yml ./my-tang-playbook.yml
    ```
2.  在您选择的文本编辑器中编辑 playbook，例如：
    ``` screen
    # vi my-tang-playbook.yml
    ```
3.  添加所需参数。以下 playbook 示例确保部署 Tang 服务器和密钥轮转：
    ``` screen
    ---
    - hosts: all
      vars:
        nbde_server_rotate_keys: yes
      roles:
        - rhel-system-roles.nbde_server
    ```
4.  应用完成的 playbook:
    ``` screen
    # ansible-playbook -i inventory-file my-tang-playbook.yml
    ```
    其中： \* `inventory-file`{.literal} 是清单文件。\*
    `logging-playbook.yml`{.literal} 是您使用的 playbook。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
通过使用在安装了 Clevis 的系统上的 `grubby`{.literal} 工具来确保 Tang
pin 的网络可用：
``` screen
# grubby --update-kernel=ALL --args="rd.neednet=1"
```
:::
::: itemizedlist
**其他资源**
-   如需更多信息，请安装 `rhel-system-roles`{.literal} 软件包，并查看
    `/usr/share/doc/rhel-system-roles/nbde_server/`{.literal} 和
    `usr/share/ansible/roles/rhel-system-roles.nbde_server/`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-nbde_client-system-role-for-setting-up-multiple-clevis-clients_the-clevis-and-tang-system-roles}使用 NBDE 客户端系统角色设置多个 Clevis 客户端 {.title}
:::
按照步骤准备和应用包含 Clevis 客户端设置的 Ansible playbook。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
NBDE 客户端系统角色仅支持 Tang 绑定。这意味着您目前无法将其用于 TPM2
绑定。
:::
::: itemizedlist
**先决条件**
-   访问一个或多个 [*受管节点*]{.emphasis} （这是您要使用 NBDE
    客户端系统角色配置的系统）。
-   Ansible Core 软件包安装在控制机器上。
-   `rhel-system-roles`{.literal} 软件包安装在您要运行 playbook
    的系统中。
:::
::: orderedlist
**流程**
1.  准备包含 Clevis 客户端设置的 playbook。您可以从头开始，或使用
    `/usr/share/ansible/roles/rhel-system-roles.nbde_client/examples/`{.literal}
    目录中的一个 playbook 示例。
    ``` screen
    # cp /usr/share/ansible/roles/rhel-system-roles.nbde_client/examples/high_availability.yml ./my-clevis-playbook.yml
    ```
2.  在您选择的文本编辑器中编辑 playbook，例如：
    ``` screen
    # vi my-clevis-playbook.yml
    ```
3.  添加所需参数。以下 playbook 示例配置 Clevis 客户端，以便在两个 Tang
    服务器中至少有一个可用时自动解锁两个 LUKS 加密卷：
    ``` screen
    ---
    - hosts: all
      vars:
        nbde_client_bindings:
          - device: /dev/rhel/root
            encryption_key_src: /etc/luks/keyfile
            servers:
              - http://server1.example.com
              - http://server2.example.com
          - device: /dev/rhel/swap
            encryption_key_src: /etc/luks/keyfile
            servers:
              - http://server1.example.com
              - http://server2.example.com
      roles:
        - rhel-system-roles.nbde_client
    ```
4.  应用完成的 playbook:
    ``` screen
    # ansible-playbook -i host1,host2,host3 my-clevis-playbook.yml
    ```
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
通过使用在安装了 Clevis 的系统上的 `grubby`{.literal}
工具来确保在早期引导期间 Tang pin 的网络可用：
``` screen
# grubby --update-kernel=ALL --args="rd.neednet=1"
```
:::
::: itemizedlist
**其他资源**
-   有关 NBDE 客户端系统角色的参数和附加信息，请安装
    `rhel-system-roles`{.literal} 软件包，并查看
    `/usr/share/doc/rhel-system-roles/nbde_client/`{.literal} 和
    `/usr/share/ansible/roles/rhel-system-roles.nbde_client/`{.literal}
    目录。
:::
:::
:::
[]{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage