– manually fully-enabled Windows Teredo or Teredo on other OS
(0.1–0.2% of all connections).
Native IPv6 peaked in the week of IPv6-day, then decreased
slightly and has remained relatively steady since (with a possibly
very small uptrend). The percentage of 6to4 has decreased slightly
over time. On weekends there are signiﬁcantly fewer connections
from hosts using native IPv6, but more connections from hosts us-
ing 6to4. During the week this reverses. This suggests a higher
native IPv6 usage at work places.
Figure 11 shows that 90–100% of connections from hosts with
native IPv6 prefer IPv6 in dual-stack. However, the percentage
has decreased over time. We suspect this happened because of an
increased use of happy eyeballs, which fails over very quickly from
IPv6 to IPv4 (see Section 5.6). Only 0.5–1% of IPv6-capable 6to4
connections preferred IPv6 in dual-stack, and well under 0.1% of
Teredo connections preferred IPv6 in dual-stack (Teredo omitted in
Figure 11).
4The 6to4 protocol uses the preﬁx 2002::/16 and the Teredo proto-
col uses the preﬁx 2001:0::/32 [1, 2]. We ignore older IPv6-over-
IPv4 tunnelling technologies since they are not common [5, 13].
Percentage of all DNSv6 capableDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb20120102030405060DNSv6−capable connections [%]GGGGGGGWeekdaysWeekendPercentage of all IPv6 forced, capable, preferredDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb201205101520253035IPv6 forced, capable, preferredconnections [%]GGGGGGGForced WDForced WECapable WDCapable WEPreferred WDPreferred WEPercentage of all that are IPv6 unicast, 6to4, Teredo capableDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb201201234567Native, 6to4, Teredo connections [%]GGGGGGGNative WDNative WE6to4 WD6to4 WETeredo WDTeredo WE93Figure 11: Percentage of IPv6-capable connections that pre-
ferred IPv6 in dual-stack (native IPv6, 6to4). Capable clients
with Teredo never preferred IPv6.
Figure 13: Percentage of IPv6-capable connections where the
host preferred IPv6 by operating system
Figure 12: Percentage of all connections from IPv6-capable
hosts by operating system
5.2 Operating system IPv6 capabilities
Figure 12 shows the percentages of IPv6-capable connections
and Figure 13 shows the percentage of connections from IPv6-
capable clients that preferred IPv6 for diﬀerent OSs.5 Over 6%
of connections were from IPv6-capable Windows clients, but only
for 20% of these (with native IPv6) the clients actually preferred
to use IPv6 in dual-stack. In contrast MacOS X and Linux clients
have a similar 6–7% of IPv6-capable connections, but most of them
were native IPv6 and preferred to use IPv6 in dual-stack. Only 1–
2% of connections came from IPv6-capable iOS clients, but about
30–40% (with native IPv6) preferred IPv6 in dual-stack.6
Figure 12 shows a signiﬁcantly increased IPv6-capability for
Linux around IPv6-day 2011. Many of the connections came from
Ubuntu clients that enabled IPv6 via point-to-point tunnels on that
day and even for a few weeks afterwards. In the raw data the spike
is even higher (up to 30%), since multiple of our participating web
sites were monitored by a company that uses Ubuntu-based probes
located in diﬀerent countries. We ﬁltered out these probes as they
are not “genuine” clients.
5We distinguish between MacOS X, Linux, BSD variants, Solaris,
iOS, Windows, mobile OS (Symbian, BlackBerry, and Android),
and unidentiﬁed OS. OSs with too few occurrences are not shown.
6Note that due to the low number of observed IPv6-capable iOS
connections the standard error here is 5–10%.
Figure 14: Percentage of IPv6-capable and IPv6-forced for
Windows XP, Vista, and 7 connections
Figure 14 shows the percentages of IPv6-capable and IPv6-
forced connections for all connections of each Windows version
(Windows XP, Vista, and 7 only, as 99% of the tested Windows
clients ran these versions). Only 1% of connections from Windows
XP hosts were IPv6-capable and the percentage of IPv6-forced was
equally low (6to4 and Teredo are not enabled by default on Win-
dows XP). Windows Vista and Windows 7 had a similar 10% of
IPv6-capable connections, but the percentage of IPv6-forced was
20% larger for Windows 7 (6to4 and Teredo are enabled by default
on Windows Vista and 7, but the lower IPv6-forced percentage sug-
gests that Teredo was either disabled or failed to establish a tunnel
more often on Vista [32]).
The percentages of connections from IPv6-capable Windows XP,
Vista and 7 clients that preferred IPv6 in dual stack were 20–30%,
10%, and 20% respectively (since there were no signiﬁcant trends
we omitted the ﬁgure). Windows XP has the highest IPv6-preferred
(native IP) percentage, which is not very surprising since in con-
trast to Windows Vista or 7 6to4 is not enabled by default. The
IPv6-preferred percentage is signiﬁcantly higher for Windows 7
than for Windows Vista, maybe because more IPv6-savy Windows
users avoid Vista.
5.3 Client sample dependencies
Figure 15 compares the IPv6-forced, IPv6-capable and IPv6-
preferred proportions for JS-tests and FA-tests. IPv6-forced was
higher for FA-tests since the proportion of Windows was higher.
Percentage of capable that prefer IPv6 (native, 6to4, Teredo)Date16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb2012020406080100IPv6−capable connectionspreferring IPv6 [%]GGGGGGGNative WDNative WE6to4 WD6to4 WEPercentage of IPv6 capable by OSDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb2012051015IPv6−capable connections [%]GGGGGGGMacOSXLinuxiOSWindowsMiscMobileUnidentifiedPercentage of IPv6 capable that preferd IPv6 in dual−stack by OSDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb2012020406080100IPv6−capable connectionspreferring IPv6 [%]GGGGGGGMacOSXLinuxiOSWindowsWindows IPv6 capabilitiesDate16May201125Jun201104Aug201113Sep201123Oct201102Dec201111Jan201220Feb20120102030405060IPv6 forced, capable connections [%]GGGGGGGWin XP capableWin XP forcedWin Vista capableWin Vista forcedWin 7 capableWin 7 forced94Figure 15: Percentage of IPv6-forced, IPv6-capable and IPv6-preferred for JS test (left) and FA test (right)
Figure 16: Percentage of all connection from IPv6-capable hosts by IPv6 type for JS test (left) and FA test (right)
IPv6-capable was similar for both tests (for FA-tests it was slightly
lower and the diﬀerence between weekday and weekend was
larger). IPv6-preferred was lower for FA-tests. FA-tests covered
fewer MacOS X and Linux connections, the two OSs that strongly
preferred IPv6, but also the IPv6-capable proportion for these two
OSs was lower for FA-tests.
Figure 16 shows the breakdown of the IPv6-capable connections
for JS-tests and FA-tests. The percentage of 6to4 was higher for
FA-tests, whereas the percentage of native IPv6 was higher for JS-
tests. However, for both tests the 6to4 percentage decreased slightly
over time and the native IPv6 percentage peaked around IPv6 day,
then decreased to a low in July 2011 and since then has increased
very slightly. The weekday/weekend diﬀerence for 6to4 was con-
sistent across both tests, but the weekday/weekend diﬀerence for
native IPv6 was diﬀerent. For JS-tests the percentage was signif-
icantly higher on weekdays, but for FA-tests there was no diﬀer-
ence between weekdays and weekends. We suspect some JS-test
web sites attracted IPv6-capable hosts during the week (e.g. AP-
NIC web site), whereas the FA-test was more biased towards home
users.
For both JS-tests and FA-tests 90–95% of connections from
clients with native IPv6 addresses preferred IPv6 in dual-stack, but
only 0.5–1% of 6to4 connections and under 0.1% of Teredo con-
nections preferred IPv6 in dual-stack.
5.4 Country IPv6 capabilities
We now analyse the proportions of IPv6-capable and IPv6-
preferred connections for the top-12 countries in each category over
the whole measurement period. The number of Teredo connections
does not vary much for diﬀerent top-12 countries, hence we omit an
analysis for brevity. We analysed JS-tests and FA-tests separately,
but here focus on the results for FA-tests, since we think the JS-test
is more biased because of the participating web sites.
Figure 17 shows the percentages of IPv6-capable connections for
the FA-test for Brazil (BR), France (FR), Indonesia (IN), Italy (IT),
Japan (JP), Korea (KR), Poland (PL), Romania (RO), Russia (RU),
Taiwan (TW), Ukraine (UA), and the USA (US). For the JS-test
the percentages and order of the countries diﬀer, but 9 of the 12
countries (75%) in the top-12 are identical.
Figure 18 shows the percentage of IPv6-preferred connections
for the FA-test for China (CN), France (FR), Germany (DE), Great
Britain (GB), Japan (JP), Malaysia (MY), Poland (PL), Russia
(RU), Taiwan (TW), Thailand (TH), Ukraine (UA), and the USA
(US). Again, for the JS-test the percentages and order of the coun-
tries diﬀer, but 8 of the 12 countries (66% of countries) in the top-12
are identical. Colitti et al. [13] analysed the world’s top-10 coun-
tries of clients that preferred IPv6 previously. While their ranking
diﬀers from ours we note that 6 (JS-test) or 7 (FA-test) of their
top-10 countries are also in our top-12.
5.5 Dual-stack failures
It would be interesting to know the proportion of connections
that failed the dual-stack sub-test, because the clients tried to re-
trieve the test image unsuccessfully over IPv6. However, we can-
not diﬀerentiate reliably between IPv6-related dual-stack failures
Percentage of all IPv6 forced, capable, preferredDate01Jun201109Jul201116Aug201123Sep201131Oct201108Dec201115Jan201222Feb2012010203040IPv6 forced, capable, preferredconnections [%]GGGGGGGForced WDForced WECapable WDCapable WEPreferred WDPreferred WEPercentage of all IPv6 forced, capable, preferredDate01Jun201109Jul201116Aug201123Sep201131Oct201108Dec201115Jan201222Feb2012010203040IPv6 forced, capable, preferredconnections [%]GGGGGGGForced WDForced WECapable WDCapable WEPreferred WDPreferred WEPercentage of all that are IPv6 unicast, 6to4, Teredo capableDate01Jun201109Jul201116Aug201123Sep201131Oct201108Dec201115Jan201222Feb201202468Native, 6to4, Teredo connections [%]GGGGGGGNative WDNative WE6to4 WD6to4 WETeredo WDTeredo WEPercentage of all that are IPv6 unicast, 6to4, Teredo capableDate01Jun201109Jul201116Aug201123Sep201131Oct201108Dec201115Jan201222Feb201202468Native, 6to4, Teredo connections [%]GGGGGGGNative WDNative WE6to4 WD6to4 WETeredo WDTeredo WE95Figure 17: Percentage of IPv6-capable connections of top-12
countries for FA-test
Figure 19: Percentage of connections with DNS AAAA requests
with dual-stack failure due to IPv6 problems (upper bound)
ables browsers/OSs to reduce connection-setup times by minimis-
ing fail-over delays. They fail over to IPv4 very quickly if IPv6
connections cannot be established.
We estimated the percentage of clients with native IPv6 that use
happy eyeballs.
If for a dual-stack sub-test a host tried to open
IPv4 and IPv6 TCP connections simultaneously (within a one sec-
ond time window) and one connection succeeded while the other
was abandoned, we count this as happy eyeballs attempt. Figure 20
shows that we observed happy eyeballs for 10–20% of hosts with
native IPv6 and the percentage increased. For 75% of these connec-
tions clients preferred IPv6 over IPv4, but for 25% of them clients
failed over to IPv4.
Figure 21 shows the web browsers that used happy eyeballs (ac-
cording to the browser ID strings). Most of the happy eyeballs
came from hosts using Chrome, which has had working happy eye-
balls support since May 2011 [33]. A smaller number of happy
eyeballs came from Firefox and Safari. Since July 2011 MacOS X
Lion had happy eyeballs support and the combination of Safari and
MacOS X Lion works [34]. According to our data there were happy
eyeballs from Safari running on MacOS X and on iOS.
Firefox had a happy eyeballs implementation since version 7,
but prior to version 10 it was disabled by default [34]. Also, the
initial Firefox implementation had problems; it was eﬀectively re-
moved in September 2011 and replaced by an improved version
in November 2011 [35]. This explains the period without happy
eyeballs from Firefox. Happy eyeballs was turned on by default in
Firefox 10 (released end of January 2012), which is clearly visible
in the graph.7
We also computed the average latency between the IPv6 and
IPv4 connection requests. For Chrome it was on the order of 200–
250 ms, close to the nominal 300 ms fail-over time [34]. For Fire-
fox since version 10 the delay was also on the order of 200–250 ms,
whereas for Safari the delay was 150–200 ms.
6. RELATED WORK
A number of researchers studied the progress of IPv6 deploy-
ment. The survey paper [4] provides an excellent overview and
also identiﬁes areas that need further study.
Some studies examined routing or DNS data, or used active
measurements to identify the IPv6 capabilities of domains and
7Firefox automatically updates on a daily basis, assuming a user
restarts it on request or reboots. Hence, an update can relatively
quickly change the abilities of the Firefox population.
Figure 18: Percentage of IPv6-preferred connections of top-12
countries for FA test
or other connectivity failures. Nevertheless, we can estimate an
upper bound.
Let eA
dual be the dual-stack sub-test failure rate for connections
where only a DNS A request was observed, eA+AAAA
be the dual-
stack sub-test failure rate for connections where both A and AAAA
requests were observed, and eA+AAAA
v4only+dual be the proportion of connec-
tions with failed IPv4-only and dual-stack sub-tests for clients that
asked for A+AAAA records. We assume that non-IPv6 related fail-
ures do not depend on whether clients asked for A+AAAA records
or A record only. We estimate the proportion of dual-stack failures
because of failed IPv6 to:
dual
− eA
dual − eA+AAAA
dual
ε = eA+AAAA
v4only+dual .
(2)
Still some of these failures may have other causes than failed
IPv6, hence our estimated proportion is an upper bound. Figure
19 shows the estimated dual-stack error rate because of failed IPv6
(we only logged DNS requests since mid July 2011). Overall, well
under 1% of connections with AAAA requests failed the dual-stack
sub-test because of IPv6, but the error rate increased during our
measurement.
5.6 Happy eyeballs
When a dual-stack client resolves a host name to IPv6 and IPv4
addresses, it will often try to reach the destination host using IPv6
ﬁrst. If the client cannot reach the destination with IPv6, it will fail
back to use IPv4. With older browsers/OSs this fail-over could take
a long time (sometimes up to a minute). “Happy eyeballs” [17] en-
TWRUROKRUAINJPITBRPLFRUSTop10 countries IPv6 capable overall by typeTop−12 countriesIPv6 capable connections [%]0246810121402468101214               Native6to4TeredoFRJPUSTHCNTWRUDEUAMYGBPLTop10 countries IPv6 preferred overall by typeTop−12 countriesIPv6 preferred connections [%]0.00.51.01.52.02.53.00.00.51.01.52.02.53.0               Native6to4TeredoDual stack failureDate17Jul201117Aug201117Sep201118Oct201118Nov201119Dec201119Jan201219Feb20120.00.20.40.60.81.0Dual−stack failures ofconnections with DNS AAAA [%]GGGGG96FTP, DNS) in 2007 and found that 0.3–0.4% of the connections
used IPv6. Labovitz [11] measured an IPv6 traﬃc proportion of
0.03–0.04% in 2010 based on ﬂow measurements from 100 Inter-
net Service Providers (ISPs). Defeche and Wyncke [38] studied
the use of IPv6 in the BitTorrent ﬁle sharing community and found
that the fraction of IPv6-capable peers was 1%. The IPv6 propor-
tions observed in [5, 11, 38] span almost two magnitudes, probably
because each study observed a very speciﬁc set of clients.
Recently, a few studies used a web-based measurement method
to study the IPv6 capabilities of clients based on Steﬀann’s [12] ap-
proach. Colitti et al. [13] measured the proportion of hosts that pre-
ferred IPv6 and the IPv6 technologies used for diﬀerent countries
based on a fraction of Google users in 2008–2009. They found that
only 0.25% of hosts used IPv6. Kreibich et al. [30] analysed Net-
alyzr logs and reported that 4.8% of sessions used IPv6. However,
they note that this is an upper bound due to possible caching eﬀects
and “geek bias” (Netalyzr only tests hosts of users who choose to
be tested). Smets et al. [14] estimated the IPv6 deployment for EU
states based on over 30 participating web sites in 2010. They found
that the proportion of IPv6-capable hosts varied from under 1%
(Cyprus) to over 12% (Sweden) with an average of 6%. Aben [15]
measured the IPv6 deployment based on DNS AAAA records for