 proargtypes     | oidvector    | not null  
 proallargtypes  | oid[]        |   
 proargmodes     | "char"[]     |   
 proargnames     | text[]       |   
 proargdefaults  | pg_node_tree |   
 prosrc          | text         |   
 probin          | text         |   
 proconfig       | text[]       |   
 proacl          | aclitem[]    |   
Indexes:  
    "pg_proc_oid_index" UNIQUE, btree (oid)  
    "pg_proc_proname_args_nsp_index" UNIQUE, btree (proname, proargtypes, pronamespace)  
```  
从以上查询可以看出本例的groupid=2中的=使用的是int4eq函数, 这个函数的cost=1;  
所以只要attack函数的cost小于int4eq就肯定会被先执行.  
```  
digoal=> select * from v_userinfo where attack(id,groupid,username,age,addr,email,phone);  
NOTICE:  1,1,digoal,1000,杭州西湖区,PI:EMAIL,13999999999  
NOTICE:  2,1,test,1000,火星,PI:EMAIL,11999999999  
NOTICE:  3,1,test,1000,月球,PI:EMAIL,11999999999  
NOTICE:  4,2,test,1000,土星,PI:EMAIL,11999999999  
-[ RECORD 1 ]------------  
id       | 4  
groupid  | 2  
username | test  
age      | 1000  
addr     | 土星  
email    | PI:EMAIL  
phone    | 11999999999  
```  
将attack的成本改为1.1, 就不会先执行了.  
```  
digoal=> create or replace function attack(int,int,text,int,text,text,text) returns boolean as $$  
declare  
begin  
  raise notice '%,%,%,%,%,%,%', $1,$2,$3,$4,$5,$6,$7;  
  return true;  
end;  
$$ language plpgsql cost 1.1;  
CREATE FUNCTION  
```  
改成1.1后, 显然不能查看到groupid<>2的数据了.  
```  
digoal=> select * from v_userinfo where attack(id,groupid,username,age,addr,email,phone);  
NOTICE:  4,2,test,1000,土星,PI:EMAIL,11999999999  
-[ RECORD 1 ]------------  
id       | 4  
groupid  | 2  
username | test  
age      | 1000  
addr     | 土星  
email    | PI:EMAIL  
phone    | 11999999999  
```  
建立安全的视图, 使用security_barrier选项 :   
```  
digoal=# create view v_userinfo_1 with(security_barrier) as select * from userinfo where id=2;  
CREATE VIEW  
digoal=# grant select on v_userinfo_1 to digoal;  
GRANT  
digoal=# \c digoal digoal  
You are now connected to database "digoal" as user "digoal".  
digoal=> create or replace function attack(int,int,text,int,text,text,text) returns boolean as $$  
declare  
begin  
  raise notice '%,%,%,%,%,%,%', $1,$2,$3,$4,$5,$6,$7;  
  return true;  
end;  
$$ language plpgsql cost 0.1;  
CREATE FUNCTION  
```  
查看非安全视图, 依旧欺骗.  
```  
digoal=> select * from v_userinfo where attack(id,groupid,username,age,addr,email,phone);  
NOTICE:  1,1,digoal,1000,杭州西湖区,PI:EMAIL,13999999999  
NOTICE:  2,1,test,1000,火星,PI:EMAIL,11999999999  
NOTICE:  3,1,test,1000,月球,PI:EMAIL,11999999999  
NOTICE:  4,2,test,1000,土星,PI:EMAIL,11999999999  
 id | groupid | username | age  | addr |     email      |    phone      
----+---------+----------+------+------+----------------+-------------  
  4 |       2 | test     | 1000 | 土星 | PI:EMAIL | 11999999999  
(1 row)  
```  
查看安全视图, 无法被欺骗了.  
```  
digoal=> select * from v_userinfo_1 where attack(id,groupid,username,age,addr,email,phone);  
NOTICE:  2,1,test,1000,火星,PI:EMAIL,11999999999  
 id | groupid | username | age  | addr |     email      |    phone      
----+---------+----------+------+------+----------------+-------------  
  2 |       1 | test     | 1000 | 火星 | PI:EMAIL | 11999999999  
(1 row)  
```  
## 其他  
1\. 由于使用security_barriers选项后优化器不起作用, 只走seqscan, 是个巨大缺陷, PostgreSQL 9.4将新增Row-Level-Security补丁 . 规避这个问题.  
## 参考  
1\. http://www.postgresql.org/docs/9.3/static/rules-privileges.html  
2\. http://blog.163.com/digoal@126/blog/static/163877040201362402650341/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")