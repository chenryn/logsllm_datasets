User: How to write Infrastructure-as-Code code using Terraform to deploy AWS Lambda function?
Assistant: You can use Terraform to write Infrastructure-as-Code codes to deploy AWS Lambda functions according to the following steps: 1. Configure AWS Provider: Add AWS Provider configuration in Terraform code, including access_key, secret_key and other information. 2. Define the Lambda function: Add the definition of the Lambda function in the code, including parameters such as function name, runtime environment, code path, role, memory, and timeout. 3. Add API Gateway: If you need to trigger the Lambda function through API Gateway, you need to add the definition of API Gateway in the code, including resources, methods, Lambda function binding relationship, etc. 4. Run terraform init: This command initializes Terraform and downloads required dependencies and plugins. 5. Run terraform plan: This command will show the changes that need to be performed. 6. Run terraform apply: This command will deploy the defined resources to the AWS cloud. Through the above steps, you can successfully use Terraform to write Infrastructure-as-Code code to deploy AWS Lambda functions.