# You've Got Vulnerability: Exploring Effective Vulnerability Notifications

## Authors
- Frank Li, University of California, Berkeley
- Zakir Durumeric, University of Michigan, University of Illinois at Urbana–Champaign, and International Computer Science Institute
- Jakub Czyz, University of Michigan
- Mohammad Karami, George Mason University
- Michael Bailey, University of Illinois at Urbana–Champaign
- Damon McCoy, New York University
- Stefan Savage, University of California, San Diego
- Vern Paxson, University of California, Berkeley, and International Computer Science Institute

## Publication Information
- **Proceedings of the 25th USENIX Security Symposium**
- **Date:** August 10–12, 2016
- **Location:** Austin, TX
- **ISBN:** 978-1-931971-32-4
- **Open Access Sponsor:** USENIX
- **Link:** [https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/li](https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/li)

## Abstract
Security researchers often send vulnerability notifications to help secure systems on a large scale. However, the factors that influence the effectiveness of these notifications have not been thoroughly examined. In this paper, we report on an extensive study where we notified thousands of parties about security issues in their networks, with the goal of identifying which aspects of notifications have the greatest impact on their efficacy. The vulnerabilities used in our study span a range of protocols and considerations, including the exposure of industrial control systems, apparent firewall omissions for IPv6-based services, and the exploitation of local systems in DDoS amplification attacks.

We monitored vulnerable systems for several weeks to determine their remediation rates. By comparing with experimental controls, we analyzed the impact of various variables, such as the choice of contact (WHOIS abuse contacts versus national CERTs versus US-CERT), message verbosity, hosting an informational website linked in the message, and translating the message into the recipient's local language. We also assessed the outcomes of the emailing process itself (bounces, automated replies, human replies, silence) and characterized the sentiments and perspectives expressed in both human replies and an optional anonymous survey that accompanied our notifications.

Our findings indicate that different notification regimens result in varying outcomes. The most effective process was directly notifying WHOIS contacts with detailed information in the message itself. These notifications had a statistically significant impact on improving remediation, and the majority of human replies were positive. However, the majority of notified contacts did not take action, and even when they did, remediation was often only partial. Repeat notifications did not further improve patching. These results are promising but modest, suggesting that the security community needs to more deeply investigate ways to enhance the effectiveness of vulnerability notifications.

## 1. Introduction
A secure Internet ecosystem requires continuous discovery and remediation of software vulnerabilities and critical misconfigurations. Security researchers discover thousands of such issues each year across various platforms. This process involves four key phases: (1) discovering new security problems, (2) identifying remedies, (3) determining affected parties, and (4) reaching out to promote remediation among those affected.

The security community has decades of experience with the first two phases, and advancements in high-speed scanning and network monitoring have significantly improved the third phase. However, the outreach process remains largely ad hoc. Unlike the public health community, which has developed best practices for patient notification, the security community lacks significant insight into the kinds of notification procedures that produce the best outcomes.

In the past, large-scale notifications were often seen as ineffective and impractical. However, recent case studies have provided clear evidence to the contrary. For example, Durumeric et al. emailed notices to operators of hosts detected as vulnerable via scanning and found that notified operators patched at a rate almost 50% greater than a control group. Similarly, Li et al. found that direct communication with webmasters increased the likelihood of cleanup by over 50% and reduced infection durations by more than 60%.

Given these indications that notifications can drive positive security outcomes, it is essential for the security community to determine the most effective ways to conduct outreach. At the same time, we must balance the benefits to the ecosystem against the burden this imposes on the reporter, which calls for determining notification regimens that will not prove unduly taxing.

In this work, we aim to lay the foundations for systematically determining the most effective notification regimens, seeking to inform and drive the development of "best practices" for the community. The solution space has many dimensions, and we aim to develop soundly supported results for the most salient basic issues, with an eye towards facilitating follow-on work that builds on these findings to further map out additional considerations.

The issues we address include:
1. Who to notify (e.g., WHOIS contacts versus national CERTs versus US-CERT)
2. The role of notification content (e.g., do reporters need to devise detailed messages or do short ones suffice)
3. The importance of localization (e.g., what role does native language play in notification response rates)
4. How these considerations vary with the nature of the vulnerability (including whether for some vulnerabilities, notification appears hopeless)

We evaluate these questions empirically in the context of notification campaigns spanning three different vulnerability categories: publicly accessible industrial control systems, misconfigured IPv6 firewalls, and DDoS amplifiers. Using large-scale Internet scanning to identify vulnerable hosts and then monitor their behavior over time post-notification, we infer the effects of different notification regimes as revealed by the proportion and timeliness of contacts remediating their vulnerable hosts.

Our results indicate that notifications can have a significant positive effect on patching, with the best messaging regimen being directly notifying WHOIS contacts with detailed information within the message itself. An additional 11% of contacts addressed the security issue when notified in this fashion, compared to a control. However, we failed to push the majority of contacts to take action, and even when they did, remediation was often only partial. Repeat notifications did not further patching. We additionally characterize the responses we received through our notification campaigns, of which 96% of human-sent responses were positive or neutral.

Given these promising yet modest findings, it behooves the security community to more deeply investigate vulnerability notifications and ways to improve their efficacy. Our methodology and results form the basis for establishing initial guidelines to help drive future efforts.

## 2. Related Work
Several recent studies have found that large-scale security notifications increase patching and remediation—particularly for infected websites. Vasek et al. notified 161 infected websites and found that after 16 days, 55% of notified sites cleaned up compared to 45% of unnotified sites. They further noted that more detailed notifications outperformed reports with minimal information by 13%, resulting in a 62% cleanup rate. Cetin et al. performed a similar study, measuring the role of sender reputation when notifying the owners of hijacked websites. They emailed the WHOIS contacts of 240 infected sites from email addresses belonging to an individual independent researcher (low reputation), a university research group (medium reputation), and an anti-malware organization (high reputation). While nearly twice as many notified sites cleaned up within 16 days compared to unnotified ones, they found no significant differences across the various senders.

On a larger scale, Li et al. investigated the life cycles of 761,000 website hijacking incidents identified by Google Safe Browsing and Search Quality. They found that direct notifications to webmasters increased the likelihood of cleanup by over 50% and reduced infection lengths by 60% on average. Absent this communication, they observed that browser interstitials—while intended to protect browser users—correlated with faster remediation.

Most similar to the vulnerabilities we investigate, Durumeric et al. used Internet-wide scanning to track the Heartbleed vulnerability and notified system owners two weeks after public disclosure. Their notifications drove a nearly 50% increase in patching compared to a control: 39.5% versus 26.8%.

Concurrent to this work, Stock et al. investigated the feasibility of large-scale notifications for web vulnerabilities. Similar to our study, they experimentally evaluated the effectiveness of different communication channels, including WHOIS email contacts and CERTs. Additionally, they analyzed the reachability and viewing behavior of their messages. Their results largely accord with ours, providing a complementary study of notifications in a separate context (namely, vulnerable websites). Notably, they likewise observed that while notifications could induce a statistically significant increase in patching, the raw impact was small. In the best case, only an additional 15% of the population patched compared with a control group.

Each of these studies has established that notifications can increase vulnerability patching and cleanup. We build on these works and explore the next critical step: understanding what factors influence patching and how to construct effective vulnerability notifications.

## 3. Methodology
To measure notification efficacy and to understand how to construct effective notifications, we notified network operators while varying aspects of the notification process. In this section, we detail the datasets of vulnerable hosts, the variables we tested, and how we tracked remediation.

### 3.1 Vulnerable Hosts
We notified operators about the three classes of vulnerabilities listed below. Table 1 shows the population of vulnerable hosts.

| **Vulnerability Type** | **Hosts** | **WHOIS Abuse Contacts** | **Hosts with WHOIS Contacts** |
|------------------------|-----------|--------------------------|-------------------------------|
| ICS                    | 45,770    | 2,563                    | 5.960                         |
| IPv6                   | 180,611   | 3,536                    | 79.7%                         |
| Amplifiers             | 83,846    | 5,960                    | 92.4%                         |

**Table 1: Vulnerable Hosts—We notified network operators about three classes of vulnerabilities found in recent studies: publicly accessible industrial control systems (ICS), hosts with misaligned IPv4 and IPv6 firewall policies, and DDoS amplifiers (NTP, DNS, and Chargen).**

#### Publicly Accessible Industrial Control Systems
Industrial control systems (ICS) are pervasive and control physical infrastructure ranging from manufacturing plants to environmental monitoring systems in commercial buildings. These systems communicate over a myriad of domain and manufacturer-specific protocols, which were later layered on Ethernet and TCP/IP to facilitate long-distance communication. Never designed to be publicly accessible on the Internet, these protocols lack important security features, such as basic authentication and encryption, but nonetheless are frequently found unsecured on the public Internet. To identify vulnerable ICS devices, Mirian et al. extended ZMap and Censys to complete full IPv4 scans for several ICS protocols: DNP3, Modbus, BACnet, Tridium Fox, and Siemens S7.

In total, they found upwards of 46,000 ICS hosts that were publicly accessible and inherently vulnerable. We coordinated with Mirian et al. to complete daily scans for each protocol against the public IPv4 address space from January 22–24, 2016. We limited our study to the 45,800 hosts that were present all three days to reduce the noise due to IP churn. To track the impact of our notifications, we continued the daily scans of these hosts using the same methodology.

#### Misconfigured IPv6 Firewall Policies
Czyz et al. found that 26% of IPv4/IPv6 dual-stack servers and routers have more permissive IPv6 firewall policies compared to IPv4, including for BGP, DNS, FTP, HTTP, HTTPS, ICMP, MySQL, NTP, RDP, SMB, SNMPv2, SSH, and Telnet access. For example, twice as many routers have SSH accessible over IPv6 compared to IPv4. Given the presumed rarity of IPv6-only services, this likely indicates a misconfiguration and potential security issue.

To identify dual-stack servers, Czyz et al. looked for hostnames in the Rapid7 DNS ANY dataset that had both A and AAAA records. After filtering out automatically generated hostnames, they identified 520,000 dual-stack servers. To find routers, the team performed reverse DNS lookups and subsequent A and AAAA lookups for hosts in the CAIDA Ark dataset, identifying 25,000 routers. Czyz et al. then scanned these hosts using Scamper to identify firewall inconsistencies.

We scanned the hosts that Czyz et al. identified over a 25-day period from December 31, 2015, to January 24, 2016. We limited our study to the 8,400 routers and 172,200 servers that were consistently available during that period. Similar to the ICS measurements, we continued to perform daily scans using the same methodology to track the impact of our notifications.

#### DDoS Amplifiers
Several UDP protocols allow attackers to launch distributed denial of service attacks when improperly configured. In this scenario, an attacker spoofs a small request to a misconfigured server, which then sends a large response to the victim. For example, an attacker can spoof a DNS lookup to a recursive DNS resolver, which will then send the full recursive lookup to the victim’s machine. We identified 152,000 misconfigured hosts that were actively being used to launch DDoS attacks over NTP, DNS, and Chargen by monitoring the sources of DDoS attacks against a university network between December 11–20, 2015.

We restricted our notifications to the vulnerable hosts that were consistently available during our daily scans from December 21, 2015, to January 26, 2016. In total, we notified 83,846 hosts.