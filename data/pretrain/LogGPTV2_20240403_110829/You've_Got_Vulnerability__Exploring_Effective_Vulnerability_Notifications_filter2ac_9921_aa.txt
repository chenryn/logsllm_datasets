title:You've Got Vulnerability: Exploring Effective Vulnerability Notifications
author:Frank Li and
Zakir Durumeric and
Jakub Czyz and
Mohammad Karami and
Michael Bailey and
Damon McCoy and
Stefan Savage and
Vern Paxson
You’ve Got Vulnerability: Exploring Effective 
Vulnerability Notifications
Frank Li, University of California, Berkeley; Zakir Durumeric, University of Michigan, 
University of Illinois at Urbana–Champaign, and International Computer Science Institute; 
Jakub Czyz, University of Michigan; Mohammad Karami, George Mason University;  
Michael Bailey, University of Illinois at Urbana–Champaign; Damon McCoy, New York 
University; Stefan Savage, University of California, San Diego; Vern Paxson, University of 
California, Berkeley, and International Computer Science Institute
 https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/li
This paper is included in the Proceedings of the 25th USENIX Security SymposiumAugust 10–12, 2016 • Austin, TXISBN 978-1-931971-32-4Open access to the Proceedings of the 25th USENIX Security Symposium is sponsored by USENIX You’ve Got Vulnerability: Exploring Effective Vulnerability Notiﬁcations
Frank Li†
Michael Bailey‡ Damon McCoy(cid:30)
Zakir Durumeric∗‡(cid:31)
Jakub Czyz∗ Mohammad Karami(cid:30)
Stefan Savage◦ Vern Paxson†(cid:31)
†University of California Berkeley
∗University of Michigan
(cid:30)George Mason University
‡University of Illinois Urbana-Champaign
(cid:30)New York University
◦University of California San Diego
(cid:31)International Computer Science Institute
Abstract
1
Introduction
Security researchers can send vulnerability notiﬁcations
to take proactive measures in securing systems at scale.
However, the factors affecting a notiﬁcation’s efﬁcacy
have not been deeply explored. In this paper, we report
on an extensive study of notifying thousands of parties
of security issues present within their networks, with an
aim of illuminating which fundamental aspects of noti-
ﬁcations have the greatest impact on efﬁcacy. The vul-
nerabilities used to drive our study span a range of pro-
tocols and considerations: exposure of industrial control
systems; apparent ﬁrewall omissions for IPv6-based ser-
vices; and exploitation of local systems in DDoS ampli-
ﬁcation attacks. We monitored vulnerable systems for
several weeks to determine their rate of remediation. By
comparing with experimental controls, we analyze the
impact of a number of variables: choice of party to con-
tact (WHOIS abuse contacts versus national CERTs ver-
sus US-CERT), message verbosity, hosting an informa-
tion website linked to in the message, and translating
the message into the notiﬁed party’s local language. We
also assess the outcome of the emailing process itself
(bounces, automated replies, human replies, silence) and
characterize the sentiments and perspectives expressed in
both the human replies and an optional anonymous sur-
vey that accompanied our notiﬁcations.
We ﬁnd that various notiﬁcation regimens do result
in different outcomes. The best observed process was
directly notifying WHOIS contacts with detailed infor-
mation in the message itself. These notiﬁcations had
a statistically signiﬁcant impact on improving remedia-
tion, and human replies were largely positive. However,
the majority of notiﬁed contacts did not take action, and
even when they did, remediation was often only partial.
Repeat notiﬁcations did not further patching. These re-
sults are promising but ultimately modest, behooving the
security community to more deeply investigate ways to
improve the effectiveness of vulnerability notiﬁcations.
A secure Internet ecosystem requires continual discovery
and remediation of software vulnerabilities and critical
misconﬁgurations. Security researchers discover thou-
sands of such issues each year, across a myriad of plat-
forms [1]. This process consists of four key phases:
(1) discovering new security problems, (2) identifying
remedies, (3) determining affected parties, and (4) reach-
ing out to promote remediation among those affected.
The security community has decades of experience
with the ﬁrst two phases, and developments in high-
speed scanning [10, 11] and network monitoring [23, 25]
have signiﬁcantly advanced the ease of the third phase
for many security issues. However, the process of out-
reach remains today at best ad hoc. Unlike the public
health community, which has carefully studied and de-
veloped best practices for patient notiﬁcation (e.g., [4,
19]), the security community lacks signiﬁcant insight
into the kinds of notiﬁcation procedures that produce the
best outcomes.1 Instead, for most software, the modern
practice of vulnerability notiﬁcation remains broadcast-
ing messages via well-known mailing lists or websites
that administrators must periodically poll and triage.
Given the relative ease with which investigators can
today often determine the affected parties, the question
then arises of how they should best utilize that infor-
mation.
In the past, performing large-scale notiﬁca-
tions was often seen as both ineffective and impracti-
cal [2, 7, 12, 18]. However, several recent case studies
have provided clear evidence to the contrary. For exam-
ple, to promote patching of the 2014 OpenSSL Heart-
bleed vulnerability, Durumeric et al. emailed notices to
operators of hosts detected as vulnerable via scanning
1An exception concerns the development of online software update
systems that explicitly tie together notiﬁcation and remediation, allow-
ing precise and automated updating targeting the affected parties. Un-
fortunately, the vast majority of software lacks such systems; even for
those that do, operators may disable it in some contexts (critical servers,
embedded systems) to avoid unplanned downtime.
USENIX Association  
25th USENIX Security Symposium  1033
1
and found that notiﬁed operators patched at a rate al-
most 50% greater than a control group [9]. Similarly,
Li et al. analyzed the efforts of Google Safe Browsing
and Search Quality in reaching out to operators of com-
promised websites, and found that direct communication
with webmasters increased the likelihood of cleanup by
over 50%, and reduced infection durations by more than
60% [14].
With these clear indications that notiﬁcations can drive
positive security outcomes, it behooves the security com-
munity to determine how to best conduct the outreach
efforts. At the same time, we must balance the beneﬁts
to the ecosystem (and the associated ethical responsibil-
ities to notify) against the burden this imposes on the re-
porter, which calls for determining notiﬁcation regimens
that will not prove unduly taxing.
In this work, we strive to lay the foundations for sys-
tematically determining the most effective notiﬁcation
regimens, seeking to inform and drive the development
of “best practices” for the community. The solution
space has many more dimensions than we can hope to
methodically explore in a single study. Here, we aim
to develop soundly supported results for the most salient
basic issues, with an eye towards then facilitating follow-
on work that builds on these ﬁndings to further map out
additional considerations. The issues we address include
(1) who to notify (e.g., WHOIS contacts versus national
CERTs versus US-CERT), (2) the role of notiﬁcation
content (e.g., do reporters need to devise detailed mes-
sages or do short ones sufﬁce), (3) the importance of lo-
calization (e.g., what role does native language play in
notiﬁcation response rates), and (4) how these consider-
ations vary with the nature of the vulnerability (includ-
ing whether for some vulnerabilities notiﬁcation appears
hopeless).
We evaluate these questions empirically in the context
of notiﬁcation campaigns spanning three different vul-
nerability categories: publicly accessible industrial con-
trol systems, misconﬁgured IPv6 ﬁrewalls, and DDoS
ampliﬁers. Using large-scale Internet scanning to iden-
tify vulnerable hosts and then monitor their behavior over
time post-notiﬁcation, we infer the effects of different
notiﬁcation regimes as revealed by the proportion and
timeliness of contacts remediating their vulnerable hosts.
Our results indicate that notiﬁcations can have a sig-
niﬁcant positive effect on patching, with the best mes-
saging regimen being directly notifying WHOIS contacts
with detailed information within the message itself. An
additional 11% of contacts addressed the security issue
when notiﬁed in this fashion, compared to a control.
However, we failed to push the majority of contacts to
take action, and even when they did, remediation was
often only partial. Repeat notiﬁcations did not further
patching. We additionally characterize the responses we
received through our notiﬁcation campaigns, of which
96% of human-sent responses were positive or neutral.
Given these promising yet modest ﬁndings, it behooves
the security community to more deeply investigate vul-
nerability notiﬁcations and ways to improve their efﬁ-
cacy. Our methodology and results form the basis for es-
tablishing initial guidelines to help drive future efforts.
2 Related Work
Several recent studies have found that large-scale secu-
rity notiﬁcations increase patching and remediation—
particularly for infected websites.
Vasek et al. notiﬁed 161 infected websites [24] and
found that after 16 days, 55% of notiﬁed sites cleaned
up compared to 45% of unnotiﬁed sites. They further
note that more detailed notiﬁcations outperformed re-
ports with minimal information by 13%, resulting in
a 62% cleanup rate. Cetin et al. performed a simi-
lar study, measuring the role of sender reputation when
notifying the owners of hijacked websites [5]. They
emailed the WHOIS contacts of 240 infected sites from
email addresses belonging to an individual independent
researcher (low reputation), a university research group
(medium reputation), and an anti-malware organization
(high reputation). While nearly twice as many notiﬁed
sites cleaned up within 16 days compared to unnotiﬁed
ones, they found no signiﬁcant differences across the var-
ious senders.
On a larger scale, Li et al. investigated the life cy-
cles of 761 K website hijacking incidents identiﬁed by
Google Safe Browsing and Search Quality [14]. They
found that direct notiﬁcations to webmasters increased
the likelihood of cleanup by over 50% and reduced in-
fection lengths by 60% on average. Absent this commu-
nication, they observed that browser interstitials—while
intended to protect browser users—correlated with faster
remediation.
Most similar to the vulnerabilities we investigate, Du-
rumeric et al. used Internet-wide scanning to track the
Heartbleed vulnerability and notiﬁed system owners two
weeks after public disclosure [9]. Their notiﬁcations
drove a nearly 50% increase in patching compared to a
control: 39.5% versus 26.8%.
Concurrent to this work, Stock et al. investigated the
feasibility of large-scale notiﬁcations for web vulnera-
bilities [22]. Similar to our study, they experimentally
evaluated the effectiveness of different communication
channels, including WHOIS email contacts and CERTs.
Additionally, they analyzed the reachability and viewing
behavior of their messages. Their results largely accord
with ours, providing a complementary study of notiﬁca-
tions in a separate context (namely, vulnerable websites).
Notably, they likewise observed that while notiﬁcations
1034  25th USENIX Security Symposium 
USENIX Association
2
Dataset
Hosts WHOIS Abuse
Contacts
Hosts with
WHOIS Contacts
ICS
IPv6
Ampl.
45,770
180,611
83,846
2,563
3,536
5.960
79.7%
99.8%
92.4%
Table 1: Vulnerable Hosts—We notiﬁed network oper-
ators about three classes of vulnerabilities found in recent
studies: publicly accessible industrial control systems
(ICS), hosts with misaligned IPv4 and IPv6 ﬁrewall poli-
cies, and DDoS ampliﬁers (NTP, DNS, and Chargen).
could induce a statistically signiﬁcant increase in patch-
ing, the raw impact was small. In the best case, only an
additional 15% of the population patched compared with
a control group.
Each of these studies has established that notiﬁcations
can increase vulnerability patching and cleanup. We
build on these works and explore the next critical step:
understanding what factors inﬂuence patching and how
to construct effective vulnerability notiﬁcations.
3 Methodology
To measure notiﬁcation efﬁcacy and to understand how
to construct effective notiﬁcations, we notiﬁed network
operators while varying aspects of the notiﬁcation pro-
cess. In this section, we detail the datasets of vulnerable
hosts, the variables we tested, and how we tracked reme-
diation.
3.1 Vulnerable Hosts
We notiﬁed operators about the three classes of vulnera-
bilities listed below. We show the population of vulnera-
ble hosts in Table 1.
Publicly Accessible Industrial Control Systems
In-
dustrial control systems (ICS) are pervasive and con-
trol physical infrastructure ranging from manufactur-
ing plants to environmental monitoring systems in com-
mercial buildings. These systems communicate over a
myriad of domain and manufacturer speciﬁc protocols,
which were later layered on Ethernet and TCP/IP to fa-
cilitate long distance communication. Never designed to
be publicly accessible on the Internet, these protocols
lack important security features, such as basic authen-
tication and encryption, but nonetheless are frequently
found unsecured on the public Internet. To identify vul-
nerable ICS devices, Mirian et al. extended ZMap [10]
and Censys [8] to complete full IPv4 scans for several
ICS protocols: DNP3, Modbus, BACnet, Tridium Fox,
and Siemens S7 [17].
In total, they found upwards of
46 K ICS hosts that were publicly accessible and inher-
ently vulnerable.
We coordinated with Mirian et al. to complete daily
scans for each protocol against the public IPv4 address
space from January 22–24, 2016. We limited our study
to the 45.8 K hosts that were present all three days to
reduce the noise due to IP churn. To track the impact of
our notiﬁcations, we continued the daily scans of these
hosts using the same methodology.
Misconﬁgured IPv6 Firewall Policies Czyz et al.
found that 26% of IPv4/IPv6 dual-stack servers and
routers have more permissive IPv6 ﬁrewall policies com-
pared to IPv4, including for BGP, DNS, FTP, HTTP,
HTTPS, ICMP, MySQL, NTP, RDP, SMB, SNMPv2,
SSH, and Telnet access [6]. For example, twice as many
routers have SSH accessible over IPv6 compared to IPv4.
Given the presumed rarity of IPv6-only services, this
likely indicates a misconﬁguration and potential security
issue.
To identify dual-stack servers, Czyz et al. looked for
hostnames in the Rapid7 DNS ANY dataset [20] that had
both A and AAAA records. After ﬁltering out automat-
ically generated hostnames, they identiﬁed 520 K dual-
stack servers. To ﬁnd routers, the team performed reverse
DNS lookups and subsequent A and AAAA lookups for
hosts in the CAIDA Ark dataset [3], identifying 25 K
routers. Czyz et al. then scanned these hosts using Scam-
per [15] to identify ﬁrewall inconsistencies.
We scanned the hosts that Czyz et al. identiﬁed over a
25 day period from December 31, 2015 to January 24,
2016. We limited our study to the 8.4 K routers and
172.2 K servers that were consistently available during
that period. Similar to the ICS measurements, we contin-
ued to perform daily scans using the same methodology
to track the impact of our notiﬁcations.
DDoS Ampliﬁers Several UDP protocols allow attack-
ers to launch distributed denial of service attacks when
improperly conﬁgured [21]. In this scenario, an attacker
spoofs a small request to a misconﬁgured server, which
then sends a large response to the victim. For example,
an attacker can spoof a DNS lookup to a recursive DNS
resolver, which will then send the full recursive lookup
to the victim’s machine. We identiﬁed 152 K misconﬁg-
ured hosts that were actively being used to launch DDoS
attacks over NTP, DNS, and Chargen by monitoring the
sources of DDoS attacks against a university network be-
tween December 11–20, 2015.
We restricted our notiﬁcations to the vulnerable hosts
that were consistently available during our daily scans
from December 21, 2015 to January 26, 2016. In total,