---
## Page 1113
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛：Normandie
1113/1144
import zlib
f=open(chall.bin',rb)
data=f.read()
f.close()
data=data[0x385:]
decompress=zlib.decompressobj().decompress(data)
f2 =open（chall.decompressed”,wb)
f2.write(decompress)
f2.close()
解压之后，用binwalk查看结果，如图30-18所示，结果丰富了很
多。
ECIMAL
HEXADECIMAL
DESCRIPTION
@x1F441C
0x1F586C
Untx
path:/FLASH/wwroot/conf/NTP
252
Unix path:
5016
0x1F7ABA
0x1F5F58
Unix
path:
/Eth_NoE/vxworks_gen
/FLASH9/w
root/conf/snnp/snmp.ini
0x1F7856
Unix
path:
path:
/Eth_NoE/vxworks_ger
../utils/setfstine
3199
../bp_drv/bp_isr.cpp
e-cpp
UnLx
Jnix
0x1F841E
path:
Inix
path:
path:
/EthNOE/vxWorksge
/EthNOE/
/vxworks
/bp drv/inbound
cpp
82
x1
Jn1x
path:
/EthNOE/v
bp_drv/moc
,CPP
6734
In1x
path:
path:
7742
ot/conf/fw/usrsel.ini
BD1E
Jnix
path:
Bx1FBF4C
Inlx
path:
/FLASH9/
root/conf/glbdata/glbcfg.1n1
9494
32
3x1
Inix
path:
Inix
path:
patn:
8x1F9770
JnLx
path:
/FLASHO/
root/conf/snnp/sysloc.ini
root/conf/snnp/sn
.ini
2071102
Jnix
path:
/./DeviceMgr/M_Ut11.cpp
SC6E/A
Jn1x
path:
/FLASH9/w
046
0x1FA9A6
Jn1x
Jnix
path:
path:
/Eth_NOE/vxWorks
0x1FAB
path:
/Eth_Noe/vxworks_ge
an/../Host_Interface/hi_rcv.cpp
图30-18
binwalk分析结果
结果是一堆文件，但是我们可以看到其中包含了如下关键信息：
---
## Page 1114
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛：Normandie
1114/1144
2211604
0x21BF14
VxWorksWINDkernelversion"2.5"
2225264
0x21F470
Copyright string:“Copyright WindRiver Systems,Inc.,1984-
2000"
2321952
0x236E20
Copyright string:“copyright_wind_river”
3118988
0x2F978C
Copyright string:Copyright,Real-Time Innovations,Inc.,
1991.Allrightsreserved."
3126628
0x2FB564
Copyright string:“Copyright 1984-1996 Wind River
Systems,Inc."
3153524
0x301E74
VxWorks symbol table,big endian,first entry:[type:
function,codeaddress:0x1FF058,symbol address:0x27655C]
这似乎是一个可执行文件，那VxWroks又是什么呢？通过Google
搜索和上面收集的信息可以了解到，这是一个大端序的实时操作系
统，如图30-19所示。
VxWorkS
维基百科，自由的百科全书
Vxoxks是美国风河系统（windRiver）公司于1983年设计开发的一种嵌入式实时操作系统（KTos），是嵌入式开发环境的关键组成部
分。良好的持续发展能力、高性能的内核以及友好的用户开发环境，在嵌入式实时操作系统领域占据一席之地。Vorks支持几乎所有
现代市场上的嵌入式PU，包括x86系列、mIPS、PorPC、Freeole ColdFie、Inteli960、SPAMC、SH4、A，StrongA人及
ScaleCPU
高以其良好的可靠性和卓然的实时性技广泛地应用在通信，军事、航空、航天等高精尖技术及实时性要求极高的领域中，如卫星通讯、
军事演习、弹道制导、飞机导航等。在美国的F-16、F/A-18战斗机、B-2隐形轰作机和爱国者导弹上，甚至连一些火星操测器，如1997
年7月登陆的火星探测器，2008年5月登陆的风凰号[11，和2012年8月登陆的好奇号也都使用到了vxork8。
图30-19Wikipedia上的Vxworks介绍
接下来使用strings命令进行分析，并在输出结果中找到了如下信
息：
MY_BOARDNAME-PowerPC860
---
## Page 1115
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛:Normandie
1115/1144
1.1/2
50MHZ
原来，主机是PoWerPC的，那么我们接下来用IDA试着加载它
在Porcessortype里选择PowerPCbig-endian[PPC]，如图30-20所示。
Load a new file
Load file C: \Users\xjh\Desktop\chall. deeompressed as
Binary file
Processor type
PoverPC bigendian [PPC]
Set
Loading seghent Ox00000
Analysis
Kerneloptions 1Kerneloptions 2
Enabled
Loading offset
0x00000000
Indicator enabled
Processor options
Options
Loading options
Load resources
Fill segent gaps
Renane DLL entries
Create sements
Manual load
Create FLAT group
Create inports segment
Load as code sement
OK
Cancel
Help
图30-20
固件加载窗口
在不知道基地址的时候，我们先按0地址加载，加载上去看看能
---
## Page 1116
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛:Normandie
1116/1144
不能分析出代码，如图30-21所示。
Disassemblymemoryorganization
×
RAM
Create RAM section
RAM start address
0x0
RAM size
0x0
Create ROM section
ROMstart address
0x0
ROM size
0x480D2C
Input file
Loading address
0x0
File offset
0x0
Loading size
0x480D2C
Additional binary files can be loaded into the database using the
"File, Load file,Addtional binary file”command.
OK
Cancel
---
## Page 1117
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛：Normandie
1117/1144
图30-21
memoryorganization窗口
在CPU型号选择窗口（如图30-22所示）中，先按默认的ppc选
择，然后点击0K按钮，如图30-22所示。
Drag a file here to disassemble it
Choose the device name
口
X
Name
mpc860
mpc5xx
mpc55xx
CellBE
OK
Cancel
Search
Help
Line 1of5
图30-22CPU具体类型选择窗口
加载后发现已经能分析出部分代码了，但没有符号，甚至还有解
析问题，如图30-23所示。下一步，我们就需要确定基地址，以解决
这些问题。
---
## Page 1118
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛：Normandie
1118/1144
IDA - C/U
Fie
Edt
H
X
口
ROH:000
AOH:
set
var_28,-0x28
BYTES
Z
ra,r3,0,17,15
B
SEq
_31E
rluinn
1oc_16:
T88214214
52
TFE
ntspr
x239,r4
seb_4E344
图30-23固件加载完成之后的界面
在28.3节中我们介绍过PPC的基地址确定方法，下面找一条@ha
的直接寻址指令，如图30-24所示。
ROM:000009F4
1wz
1is
r0,0xC(r31)
RON:000009F8
r9,duord339AB8@ha
ROM:000009FC
addi
r11,r9,duord_339AB8@1
图30-24
相对寻址指令处
可以确定基地址为0x10000，用新的基地址重新加载固件，设置
如图30-25所示。
---
## Page 1119
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛:Normandie
1119/1144
重新加载后，函数识别全部正常，如图30-26所示。
Disassembly memory organization
RAM
Create RAM section
RAM start address
0x0
RAM size
0x0
Create ROM section
ROM start address
0x0
ROM size
0x490D2C
Input file
Loading address
0x10000
File offset
0x0
Loading size
0x480D2C
Additional binary files can be loaded into the database using the
"File,Load file,Addtional binary file”command.
OK
Cancel
---
## Page 1120
CTF特训营：技术详解、解题方法与
30.3UCTF2016决赛：Normandie
1120/1144
图30-25重新加载固件窗口
Functions window
口
Functionname
厂
sub_10064
sub_10194
sub_101D0
sub_10208
sub_1026C
+
sub_102A8
sub_102E8
sub_10318
+
sub_10350
sub_10388
sub_10424
sub_104A4
sub_10524
+
sub_10834
sub_11FE0
sub_12598
sub_125C4
sub_125E0
f
sub_12654
sub_1267C
sub_126A4
f
sub_126E4
sub_12700
sub_12768
sub 127F0