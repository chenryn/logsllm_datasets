2. Compendex (CPX)2
3. IEEE Xplore (IEEE)3
4. ACM Digital Library (ACM)4: this was searched partially to validate completeness of our
selected results.
These databases cover a majority of journal and conference papers published in the ﬁeld of
software engineering. Technical reports and other documents with no peer review assessment
were excluded from the study due to diﬃculty of assessing the results and to the large volume of
results obtained if these were to be included.
After performing the search, we removed and resolved the overlaps and duplicates from dif-
ferent sources manually. The ﬁrst three databases were fully searched while only 10% of results
from ACM digital library ranked as most relevant, by the database search engine, were searched
to check the completeness of the set of results.
If the results here would show a signiﬁcant
number of relevant results had not already been included, the search would be expanded.
3.3. Search Criteria
To search in the databases the following search criterion was used on title, abstract and key-
words ﬁelds:
((robust OR robustness) AND software)
It is a common practice and guideline to set a start date for systematic reviews [48, 155, 5].
We set 1990 as the start date since the formal deﬁnition of robustness in software engineering
introduced by the IEEE standard glossary of Software Engineering [1] was introduced in that
year. Another reason for selecting that date is that the important work in the ﬁeld published
1www.isiknowledge.com
2www.engineeringvillage2.com
3ieeexplore.ieee.org
4portal.acm.org
5
before this date, such as [76, 23], have been referenced and further developed and used in studies
published after 1990. Another criteria for the included studies was that only papers in English
were included.
Depending on the functionality provided by the databases search engines, we excluded the
results outside the ﬁeld of software and computers before the studies were further processed.
This was due to the wide use of the term robustness in other unrelated ﬁelds such as mechanics
and agriculture. Since the papers that are related to both software and one of these ﬁelds are
also sorted under the software category, excluding these results would not exclude any results of
interest for this study.
Applying these criteria on the three initial databases gave 9193 non-unique results. Due to
the large number of excluded papers based on titles, the results were exported to our reference
management program after the title exclusion step. Therefore, the number of unique initial results
is not known to us and we can only present the accumulative number of hits from the three
databases.
Search results in the databases were all sorted according to relevance of papers. According
to our observations, this criterion proved to be very accurate for our study since the number of
included results dropped very fast when they were classiﬁed as less relevant by the databases.
After sorting the results from the previous search engines, the ACM digital library was
searched and 3658 papers were found using the same search terms. In the top 350 most rele-
vant papers, no new papers with a relevant title were found that were not already included in our
ﬁnal database. This suggested that we have already covered the most relevant results in the ﬁeld.
3.4. Study Selection
For selection of studies we developed exclusion/inclusion criteria as described in this section.
The initial hits were ﬁltered and excluded in several steps which will be explained below.
Exclusion criteria based on title:
• The paper discusses a diﬀerent ﬁeld than software, i.e. the title does not suggest that there
is any focus on software in that study.
• Short papers under 5 pages were excluded.
• Robustness is used as an adjective to describe something unrelated to software and it is
clear from the title that software robustness is not discussed in this paper. e.g. “Robust Re-
source Management for meta computers” where robust is used as an adjective to describe
resource management rather than the software.
Exclusion criteria based on abstract:
• If robustness is used in another meaning or the paper just claims that the software, method
or contribution they have made is robust without any focus on how and why they have
made it robust, then the paper is excluded.
• If the paper has a completely diﬀerent focus than software robustness or software quality.
If this has not been detected during the title phase, then it is excluded in the abstract review
phase.
For instance, in some articles robustness describes the proposed method or a part of the devel-
opment process rather than the software itself. These cases were usually detected and excluded
6
during title or abstract phase. A common example was robust watermarks within software se-
curity that appeared very often but was out of the scope of our study although it had the word
robust and was in the ﬁeld of software.
Exclusion criteria based on full text were the same as criteria based on abstract. In some cases
the product is claimed to be robust and judging whether there is any focus on software robustness
is not possible from the abstract. These cases were handled on the full text level and studies were
only included if the process of achieved robustness was presented. However, if robustness was
claimed with no elaboration on how and why it was achieved, the paper was excluded from the
study on full-text level.
3.5. Data Extraction and Synthesis
As mentioned in Section 3.3 papers that were clearly not related to the ﬁeld of software
robustness, based on the title, were excluded. In total 753 studies were included. Any study that
has mentioned robustness and was in the ﬁeld of software in a meaningful way was included
after the ﬁrst selection phase. After the results from each search were completed, the papers that
had passed through the ﬁlter were moved to the ﬁnal database. The cumulative number of unique
results after each search in the ﬁnal database was 282, 561 and 601 which indicates the high
number of duplicates between the databases. These numbers are presented in Table 15.
Table 1: Initial search results for three databases and a control database
Database
ISI
CPX
IEEE
ACM
Total
Search date Total hits Title ﬁltering Cumul. unique
2010-12-31
2010-12-31
2010-12-31
2010-12-31
2010-12-31
2264
3976
2953
3645
9193
282
371
148
-
801
282
561
601
601
601
In the second phase of data extraction, the abstract of the 601 included studies was reviewed.
In this phase, 16 more papers were excluded based on title. These papers had passed through the
title exclusion although they should not have. Another 20 papers were excluded for being short
papers and 280 papers were excluded based on the abstracts.
The third phase of exclusion was done on full-text level and 134 more studies were excluded,
which left 144 studies for the next phase of the review. Statistics on how and when the studies
were excluded can be seen in Figure 1.
The ﬁnal 144 selected papers were then categorized based on the research questions. The
categories used for each research question are presented in Table 2. Some of the categories are
trivial, for the more complicated facets we were partly inspired by other systematic reviews and
mappings.
The phase focus facet is divided based on the most common phases of software development.
However, we considered design and implementation as the same category since many studies
with implementation guidelines and contribution had a main focus on design.
5From the 3645 results found in the ACM digital library, the top 350 after ranking by relevance (approximately 10%)
were analyzed and compared to the results from the previous databases. No new relevant studies that were not already
included could be found. This step was conducted to ensure the completeness of the search.
7
Figure 1: Statistics on data selection in diﬀerent phases on inclusion/exclusion
The categories in the system focus facet were developed as the studies were classiﬁed. The
category general includes the studies that do not have a certain system as focus and are applicable
to diﬀerent types of systems.
The research type categories were inspired by [130]. Here, we have combined the categories
Validation Research and Solution Proposal since the distinction is often not easy. We also re-
placed Opinion Papers with call for research, Investigation.
The contribution facet was also partly inspired by [130]. Here, we have introduced the cate-
gories review for studies that review a certain concept or part of the ﬁeld. We also added frame-
work to replace process since most of the studies with a process focus also introduce a tool,
method or model to help adopting the process and have a more generic view of the software ro-
bustness ﬁeld. The last category added was evaluation. This category includes papers that further
evaluate an already published concept and do not introduce any new concepts or solutions.
In the last facet, Evaluation, we categorized the studies based on the type of evaluation they
have provided for their results. The Academic lab/toy category includes studies where the results
have been evaluated on small systems developed as case studies for that speciﬁc project. Studies
in the large academic category are also evaluated in an academic setting but on larger and already
existing projects that are not speciﬁcally developed for a case study and are used more broadly.
The open source category includes studies evaluated on existing open source systems. The small
industrial category consists of small case studies developed for evaluation of that speciﬁc study
in an industrial setting. Finally, studies with large industrial evaluation include studies with
evaluation on a larger and existing industrial project.
3.5.1. Selection and Extraction Validity
Validity control I
From the 601 papers that had passed the initial title ﬁltering, 60 (10%) were randomly selected
and reviewed by author 2. This control was done on abstract level and the goal was to either
accept or reject based on the abstract. Full text ﬁltering, classiﬁcation and categorization of the
papers were left to the second validity control.
8
Table 2: Categories for the research questions
Phase Focus
System focus
Research type
Contribution fac.
Evaluation
distributed and network,
Requirement, design & implementation, evaluation, anal-
ysis, veriﬁcation and validation (V&V), general
Web application,
real-
time/safety critical, COTS, Operating systems, embedded
systems, general
Philosophical paper, solution proposal, evaluation paper,
experience report, review, investigation, call for research
Tool, method, framework evaluation, metrics, model, re-
view
Academic lab/toy, large academic, open source systems,
small industrial, industrial, no evaluation
In these 60 papers there were six deviations between the judgments of the two authors. After
studying these deviations two of the excluded papers in the initial selection which were included
by the control classiﬁcation were judged to be included. In the other four cases the initial se-
lection was judged to be correct. The two new papers were eventually excluded in the full text
ﬁltering step.
This control suggests that by studying 10% of the results, 10% irregularity was detected.