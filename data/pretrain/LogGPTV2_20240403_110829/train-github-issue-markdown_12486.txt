在设置 `JAVA_HOME` 并执行 Maven 构建时，遇到了编译错误。以下是具体的错误信息及上下文：

### 命令
```sh
JAVA_HOME="$(/usr/libexec/java_home -v 1.9)" mvn clean package
```

### 错误信息
```
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:compile (default-compile) on project java-util: Compilation failure
[ERROR] /Users/charles.allen/src/druid/java-util/src/main/java/io/druid/java/util/common/ByteBufferUtils.java:[22,16] cannot find symbol
[ERROR]   symbol:   class Cleaner
[ERROR]   location: package sun.misc
[ERROR] /Users/charles.allen/src/druid/java-util/src/main/java/io/druid/java/util/common/ByteBufferUtils.java:[57,11] cannot find symbol
[ERROR]   symbol:   class Cleaner
[ERROR]   location: class io.druid.java.util.common.ByteBufferUtils
```

### 分析
从错误信息来看，编译失败的原因是找不到 `sun.misc.Cleaner` 类。`sun.misc.Cleaner` 是 Java 内部的一个类，在 JDK 9 及更高版本中已被移除或替换。因此，使用 JDK 1.9（即 JDK 9）会导致这个编译错误。

### 解决方案
1. **升级代码**：将对 `sun.misc.Cleaner` 的引用改为使用标准 API，例如 `java.nio.ByteBuffer` 提供的 `cleaner()` 方法。
2. **降级 JDK 版本**：如果暂时无法修改代码，可以考虑使用 JDK 8 或更早的版本进行编译。

### 示例代码修改
假设 `ByteBufferUtils.java` 中的代码如下：
```java
import sun.misc.Cleaner;

public class ByteBufferUtils {
    // ...
    private static Cleaner createCleaner(ByteBuffer buffer) {
        Cleaner cleaner = ((DirectBuffer) buffer).cleaner();
        return cleaner;
    }
    // ...
}
```

可以修改为：
```java
public class ByteBufferUtils {
    // ...
    private static Cleaner createCleaner(ByteBuffer buffer) {
        if (buffer instanceof DirectBuffer) {
            Method cleanerMethod = null;
            try {
                cleanerMethod = buffer.getClass().getMethod("cleaner");
                cleanerMethod.setAccessible(true);
                return (Cleaner) cleanerMethod.invoke(buffer);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }
        return null;
    }
    // ...
}
```

这样可以避免直接依赖于 `sun.misc.Cleaner`，并确保代码在 JDK 9 及更高版本中也能正常编译和运行。