2020/7/27 精通PHP序列化与反序列化之"道"
精通PHP序列化与反序列化之"道"
原创 队员编号028 酒仙桥六号部队 6⽉30⽇
这是 酒仙桥六号部队 的第 28 篇⽂章。
全⽂共计3952个字，预计阅读时⻓12分钟。
什什什什什什什什什什什什什什什么么么么么么么么么么么么么么么是是是是是是是是是是是是是是是序序序序序序序序序序序序序序序列列列列列列列列列列列列列列列化化化化化化化化化化化化化化化和和和和和和和和和和和和和和和反反反反反反反反反反反反反反反序序序序序序序序序序序序序序序列列列列列列列列列列列列列列列化化化化化化化化化化化化化化化
序列化：将对象转换成⼀个字符串，PHP序列化函数是: serialize()
反序列化：将序列化后的字符串还原为⼀个对象，PHP反序列化函数是: unserialize()
在说反序列化漏洞之前我们先了解⼀下对象概念：
我们举个例⼦，如果把⽣物当成⼀个⼤类，那么就可以分为动物和植物两个类，⽽动物⼜可以
分为⻝草动物和杂⻝动物，那有⼈可能会问了，为什么这么分呢？
因为动物都有嘴，需要吃东⻄，植物都需要⼟空⽓和⽔，都会吸取养分，那么这些分类我们可
以看成php中的类，动物的嘴和植物需要的⼟空⽓⽔都可以当作属性，动物吃东⻄和植物吸取
养分都可以当作⽅法。世间的万物我们都可以看成是对象，因为他们都有各⾃的属性。⽐如：
⼈有身⾼，体重，年龄，性别等等这些属性，也可以唱歌，跳舞，跑步等等⾏为。如果把⼈看
成⼀个类的话，那么身⾼，体重，年龄，性别这些就是⼈这个类的属性，⽽唱歌，跳舞，跑步
就是⼈这个类的⾏为。
我们来创建⼀个⼈类看看，⾸先要考虑到这个⼈的姓名( zhangsan )，性别( 男 )，年龄( 50 )，
还有它会的技能( 会忽悠 )。
1 age;
4 // 换⾏
5 echo "\n\r";
6 // 看看它的技能
7 echo $belles->skill();
看看运⾏结果:
https://mp.weixin.qq.com/s/XvnSlGeb69XtAhgNuxYvOw 2/17
2020/7/27 精通PHP序列化与反序列化之"道"
这就是⼀个简单的对象了，那我们就将它序列化和反序列化⼀下。
1 $belles = new zhangsan();
2 echo serialize($belles);
3 echo "\n\r";
4 unserialize('O:8:"zhangsan":2:{s:3:"sex";s:3:"男";s:3:"age";s:2:"50";}');
5 // 看看它的年龄
6 echo $belles->age;
https://mp.weixin.qq.com/s/XvnSlGeb69XtAhgNuxYvOw 3/17
2020/7/27 精通PHP序列化与反序列化之"道"
我们可以看到实例化就是把对象转换成字符串，反序列化就是把字符串在变成对象，之后就可
以使⽤对象的功能了。
再来看看与PHP反序列化漏洞有关的魔法函数，这些函数不⽤创建，默认存在的。
1 __destruct() //对象被销毁时触发
2 __construct() //当⼀个对象创建时被调⽤
3 __wakeup() //使⽤unserialize时触发
4 __sleep() //使⽤serialize时触发
5 __toString() //把类当作字符串使⽤时触发
6 __get() //获取不存在的类属性时触发
7 __set() //设置不存在的类属性会触发
8 __isset() //在不可访问的属性上调⽤isset()或empty()触发
9 __unset() //在不可访问的属性上使⽤unset()时触发
https://mp.weixin.qq.com/s/XvnSlGeb69XtAhgNuxYvOw 4/17
2020/7/27 精通PHP序列化与反序列化之"道"
10 __invoke() //当脚本尝试将对象调⽤为函数时触发
魔术⽅法的触发条件：
1 age = '20';
18 echo $per; // 把对象当成字符串输出
19 $per->p1; // 获取类不存在的属性
20 $per->n = 'aa'; // 设置类不存在的属性
对象在 echo 的时候会把对象当成字符串就会触发 __toString ⽅法，获取类不存在的属性 p1 ，
触发 __get 魔术⽅法,设置类不存在的属性 n ，触发 __set 魔术⽅法。
https://mp.weixin.qq.com/s/XvnSlGeb69XtAhgNuxYvOw 7/17
2020/7/27 精通PHP序列化与反序列化之"道"
1 age = '20';
https://mp.weixin.qq.com/s/XvnSlGeb69XtAhgNuxYvOw 8/17
2020/7/27 精通PHP序列化与反序列化之"道"
19 isset($per->aaa); // 判断属性是否存在
20 unset($per->ages); // 删除不存在的属性
21 $per('111'); // 把对象当作函数
判断属性是否存在的时候触发 __isset 魔术⽅法,删除不存在的属性时候触发 __unset 魔术⽅
法,把对象当作函数的时候触发 __invoke 魔术⽅法。
ppppppppppppppphhhhhhhhhhhhhhhppppppppppppppp反反反反反反反反反反反反反反反序序序序序序序序序序序序序序序列列列列列列列列列列列列列列列化化化化化化化化化化化化化化化案案案案案案案案案案案案案案案例例例例例例例例例例例例例例例
⼩案例1
先修改值，然后序列化。
1 // demo1.php
2 name.'';
8 echo $this->name . ' delete';
9 unlink(dirname(__FILE__).'/'.$this->name);
10 }
11 }
12
13 // demo2.php
14 <?php
15 include 'demo1.php';
16 class per{
17 public $name = '';
18 public $age = '';
19 public function infos(){
20 echo '这⾥随便';
21 }
22 }
23 $pers = unserialize($_GET['id']);
分析⼀下上⾯的代码，可以看到直接获取 id ,这个参数可控，我们可以把这个参数输⼊成
delete类的实例化，并把delete类中的 $name 的参数进⾏修改成我们想要的，就可以造成⽂
件删除，下⾯来构造⼀下Exploit：
1 // 序列化 demo1.php
2 <?php
3 class delete{
4 public $name = 'error';
5 }
6 $del = new delete();