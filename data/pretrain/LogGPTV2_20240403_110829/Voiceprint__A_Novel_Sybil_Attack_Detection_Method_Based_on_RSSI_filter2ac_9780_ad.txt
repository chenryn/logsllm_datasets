where μ and σ are the mean and standard deviation of RSSIi
respectively. This normalization makes 99.7% values fall into
the range of (-1, 1). In this normalization, the whole shape
and structure of RSSI time series cannot be changed, but the
relative distances among Sybil nodes’ RSSI series by spoofed
transmission power are perfectly eliminated.
After data preprocessing, we compare each two RSSI time
series and measure the DTW distance. Then, we conduct a
postprocessing for obtained DTW distances to normalize all
values into the range of [0, 1] using min-max normalization:
(cid:2)
DT W i,j = DDT W i,j − DDT W min
DDT W max − DDT W min
D
Output:
(8)
where DDT W min and DDT W max are the minimum and
maximum values of all DTW distances respectively.
3) Conﬁrmation: In comparison process, each vehicle can
get a group of DTW distances for all neighboring vehicles.
Based on Observation 3, DTW distances among all Sybil
nodes should be very small that are closer to 0, while DTW
distances between Sybil nodes and normal nodes or among all
normal nodes should be much bigger. However, from extensive
simulations in Section V, we ﬁnd that DTW distances are
easily distinguishable in the low vehicle density, but have a
small overlap when the density increases. There are two rea-
sons for this phenomenon. First, when the trafﬁc gets jammed,
the average space between two vehicles is shorten, thus, the
RSSI time series of malicious node and some normal nodes
nearby are also very similar. Second, with the increasing trafﬁc
density, the number of nodes in VANETs is also increased.
This leads to severe channel collisions that cause a lot of
packet losses in the whole network. Thus, the similarity of
RSSI time series among all Sybil nodes is decreased. The
overlap will reduce the detection rate and increase the false
positive rate when the trafﬁc density increases if we set a
constant threshold. To deal with this problem, we just think
of the threshold as a function of density. And the determination
of the threshold can be transformed into a binary classiﬁcation
problem that ﬁnds the optimal decision boundary (actually a
line in the two-dimensional condition) in the density-DTW
distance plane. There are many methods such as perceptrons
algorithm, linear classiﬁer, logistic regression and support vec-
tor machines proposed to do classiﬁcation in machine learning.
In this paper, we use the Linear Discriminant Analysis (LDA)
to determine the threshold. For an estimated density den and
a measured DTW distance DDT W i,j between node i and node
j, if DDT W i,j ≤ k · den + b is satisﬁed, the nodes i and j
are detected as the Sybil nodes. Here k and b is the slope and
intercept of the decision boundary. These parameters can be
obtained by training based on our simulation or experiment
data. Each vehicle can estimate trafﬁc density by:
den = Nnormal
2Distmax
(9)
where Nnormal is the number of normal nodes it can hear
within the density estimation period (one vehicle can only
use the total number of received nodes in the ﬁrst estimation
since it cannot recognize the legitimate ones at the beginning).
Distmax is the maximum transmission range.
The procedure of Voiceprint is presented in Algorithm 1.
Algorithm 1 Voiceprint
Input:
RSSIn: RSSI time series
IDn: Corresponding IDs
den: Estimated trafﬁc density
k: Slope of the decision boundary
b: Intercept of the decision boundary
if i<j then
DDT W i,j ← FastDTW(RSSIi, RSSIj)
SybilIDs: Suspect IDs of Sybil nodes
end if
end for
RSSIi ← Z-score-normalization(RSSIi)
1: for i = 1 to n do
2:
3: end for
4: for i = 1 to n − 1 do
5:
for i = 2 to n do
6:
7:
8:
9:
10: end for
11: DDT W ← Min-max-normalization(DDT W )
12: for i = 1 to n − 1 do
13:
for i = 2 to n do
14:
15:
16:
17:
18:
19:
20: end for
21: return SybilIDs
if DDT W i,j ≤ k · den + b then
SybilIDs = AddingIDs(i, j)
end if
end if
end for
if i<j then
V. SIMULATION EVALUATION
In this section, we evaluate the performance of the proposed
Voiceprint by NS2 simulations.
A. Simulation Setup
We conduct our simulation in the NS-2.34 simulator and use
the empirical propagation model given in equation (1) [22].
To prove that Voiceprint does not depend on any predeﬁned
propagation model, we set a timer in NS2 and modify the
parameters of the propagation model periodically. The simu-
lation scenario is a 2km bi-directional highway with 2 lanes
in each direction as shown in Figure 10 (Lane width is 3.6m).
Vehicles re-enter the highway at the beginning of the other
direction when they arrive at the end of one direction. For
an individual simulation run, we randomly set 5% vehicles
as malicious nodes, and each one generates 3-6 Sybil nodes.
All nodes broadcast 10 packets per second on CCH, but the
malicious node should send 10n packets if it fabricates n
fake identities. The initial transmission power can be randomly
selected from 17-23dBm for each node, but remains constant
during the simulation.
We adopt a continuous-time stochastic mobility model to
simulate vehicle motion. In this model, each vehicles move-
ment is divided into a sequence of random time intervals
called mobility epochs. The epoch lengths are identically, in-
dependently distributed (i.i.d.) exponentially with mean 1/λe.
During each epoch, the vehicle moves at a constant speed
598
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:59:02 UTC from IEEE Xplore.  Restrictions apply. 
TABLE V: Default parameter settings
Parameter
Highway length
Lanes
Lane width
Density
Density estimate period
Vehicle number
Model change period
Frequency
Bandwidth
Transmission Power
Date rate
Packet size
Packet generation rate
Slot time
SIFS
Mobility epoch rate (λe)
Average speed (μv)
Standard deviation of the speed (σv)
Observation time
Detection period
Simulation time
Value
2km
4
3.6m
10-100 vhls/km
10s
20-200
30s
5.9GHz
10MHz
17-23dBm
3Mbps
500Bytes
10Hz
13μs
32μs
0.2s−1
25m/s
5m/s
20s
20s
100s
which is an i.i.d. normal distributed random variable with
mean μv and the standard deviation σv. The default parameters
are given in Table V.
B. Metrics and Threshold
1) Metrics: We consider two main metrics to evaluate
our scheme, i.e., detection rate (DR) and false positive rate
(F P R). For a single normal node and one detection period,
detection rate is the proportion of detected suspect nodes to the
total number of illegitimate nodes within all its neighboring
vehicles. False positive rate is the percent of normal nodes are
incorrectly detected as forged ones. For a single normal node
i, it receives multiple packets from Ni different nodes during
the observation time. Assume that in the kth detection period,
there are N n
i,k malicious nodes and N s
j
Sybil nodes generated by the jth malicious node. If it correctly
detects NT,k fabricated nodes and wrongly identiﬁes NF,k
normal nodes. Then, the detection rate and false positive rate
for node i in the kth detection period are deﬁned as follows:
i,k legitimate nodes, N m
DRi,k =
NT,k
N m
i,k(cid:8)
j=1
N m
i,k +
F P Ri,k = NF,k
N n
i,k
N s
j
(10)
(11)
Assume we have total Nn normal nodes and each normal
node detects K times during the simulation. Then, the average
detection rate and average false positive rate can be calculated
as follows:
Nn(cid:6)
Nn(cid:6)
i=1
K(cid:6)
K(cid:6)
k=1
1
NnK
1
DR =
F P R =
NnK
i=1
k=1
DRi,k
F P Ri,k
(12)
(13)
599
DDTW between Sybil node and normal node or among normal nodes
DDTW between Sybil nodes forged by the same malicious node
1
0.8
W
T
D
D
0.6
0.4
0.2
0
10
decision boundary
20
30
40
50
60
70
80
90
100
density(vhl/km)
Fig. 10: The optimal decision boundary determined by LDA
In the simulation, we use the average detection rate and
average false positive rate to evaluate the performance of
Voiceprint.
2) Threshold: In this paper, we leverage LDA to ﬁnd the
decision boundary, and then each node can tune the threshold
according to the estimated trafﬁc density. We ﬁrst conduct
several simulations for different trafﬁc densities (5 simulation
runs at each density) and record all measured DTW distances.
Then, we use these DTW distances as the training data to
compute the optimal decision boundary, i.e. to determine the
slope k and intercept b for the divider line. The results are
shown in Figure 10. The blue cycle denotes the DTW distance
between the Sybil node and the normal node or between two
normal nodes. The red dot is the DTW distance between two
Sybil nodes forged by the same malicious node. After training,
the parameters of k and b are set to be 0.00054 and 0.0483
respectively.
C. Comparison and Results Analysis
In our simulations, we compare the Voiceprint to the Co-
operative Position Veriﬁcation based Sybil Attack Detection
(CPVSAD) scheme proposed in [19]. The observation time of
CPVSAD is 10s, and the standard deviation of the predeﬁned
shadowing model is 3.9dB. The signiﬁcant level is set to be
0.05.
Figure 11a shows the detection rate and false positive rate of
two methods without propagation model change. The standard
deviation σ1 and σ2 are both set to be 3.9dB during the
simulation. From Figure 12a, we see that both Voiceprint and
CPVSAD can achieve to 90% level detection rate and low
false positive rate under 10%. The performance of CPVSAD
improves with the increasing vehicle density, while Voiceprint
has the opposite trend. This is because CPVSAD is the coop-
erative detection method. One vehicle conducts Sybil attack
detection which not only uses the RSSI values observed by its
own, but also adopts information received from neighboring
vehicles. With the increasing trafﬁc density, each vehicle could
collect more information from other vehicles nearby. However,
to ensure all information are correct, CPVSAD requires sup-
port of RSUs to establish trust relationship among neighboring
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:59:02 UTC from IEEE Xplore.  Restrictions apply. 
nodes. Since Voiceprint is the independent detection scheme,
one vehicle only uses RSSI time series observed locally.
Therefore, with the increasing trafﬁc density, the severe packet
losses lead to less information obtained by each vehicle, thus,
reduce the detection rate. Moreover, the dense trafﬁc means
the shorter average space among vehicles. This makes vehicle
cannot easily distinguish the malicious node from the normal
nodes nearby that results in the increasing false positive rate.
100
90
80
70
60
50
40
30
20
10
e
g
a
t
n
e
c
r
e
p
0
10
20
30
40
Detection rate (Voiceprint)
Detection rate (CPVSAD)
False positive rate (Voiceprint)
False positive rate (CPVSAD)
50
60
70
80
90
100
density (vhls/km)
(a) Without propagation model change
100
90
80
70
60
50
40
30
20
10
e
g
a
t
n
e
c
r
e