南大通用数据技术股份有限公司
1144
GBase 8s V8.8开发者手册
名称 类型 描述
id oid 对象的ID。
owner bigint 对象创建用户ID。
nspid oid 对象的模式ID。
name name 对象名。
type text 对象类型（procedure/function/package/package body）。
line integer 行号。
src text 对象创建的原始语句。
21 逻辑复制
21.1逻辑解码
21.1.1 逻辑解码概述
21.1.1.1 功能描述
GBase8s对数据复制能力的支持情况为：
支持通过数据迁移工具定期向异构数据库（如Oracle等）进行数据同步，不具备实时
数据复制能力。不足以支撑与异构数据库间并网运行实时数据同步的诉求。
GBase8s提供了逻辑解码功能，通过反解xlog的方式生成逻辑日志。目标数据库解析
逻辑日志以实时进行数据复制。具体如图21-1所示。逻辑复制降低了对目标数据库的形态
限制，支持异构数据库、同构异形数据库对数据的同步，支持目标库进行数据同步期间的数
据可读写，数据同步时延低。
南大通用数据技术股份有限公司
1145
GBase 8s V8.8开发者手册
图21-1 逻辑复制
逻辑复制由两部分组成：逻辑解码和数据复制。逻辑解码会输出以事务为单位组织的逻
辑日志。业务或数据库中间件将会对逻辑日志进行解析并最终实现数据复制。GBase8s当前
只提供逻辑解码功能，因此本章节只涉及逻辑解码的说明。
逻辑解码为逻辑复制提供事务解码的基础能力，GBase8s使用SQL函数接口进行逻辑
解码。此方法调用方便，不需使用工具，对接外部工具接口也比较清晰，不需要额外适配。
由于逻辑日志是以事务为单位的，在事务提交后才能输出，且逻辑解码是由用户驱动的；
因此为了防止事务开始时的xlog被系统回收，或所需的事务信息被VACUUM回收，GBase
8s新增了逻辑复制槽，用于阻塞xlog的回收。
一个逻辑复制槽表示一个更改流，这些更改可以在其它数据库中以它们在原数据库上产
生的顺序被重播。逻辑复制槽，由每个逻辑日志的获取者维护一个。
21.1.1.2 注意事项
 不支持DDL语句解码，在执行特定的DDL语句（例如普通表truncate或分区表exchange）
时，可能造成解码数据丢失。
 不支持列存、数据页复制的解码。
 不支持级联备机进行逻辑解码。
 当执行DDL语句（如altertable）后，该DDL语句前尚未解码的物理日志可能会丢失。
 单条元组大小不超过1GB，考虑解码结果可能大于插入数据，因此建议单条元组大小
不超过500MB。
 GBase8s支持解码的数据类型为：INTEGER、BIGINT、SMALLINT、TINYINT、SERIAL、
SMALLSERIAL、BIGSERIAL、FLOAT、DOUBLEPRECISION、DATE、TIME[WITHOUT
南大通用数据技术股份有限公司
1146
GBase 8s V8.8开发者手册
TIMEZONE]、TIMESTAMP[WITHOUTTIMEZONE]、CHAR(n)、VARCHAR(n)、TEXT。
 如果需要ssl连接需要保证前置设置GUC参数ssl=on。
 逻辑复制槽名称必须小于64个字符，且只包含小写字母、数字或者下划线中的一种或
几种。
 当前逻辑复制不支持MOT特性。
 当逻辑复制槽所在数据库被删除后，这些复制槽变为不可用状态，需要用户手动删除。
 仅支持utf-8字符集。
 对多库的解码需要分别在库内创建流复制槽并开始解码，每个库的解码都需要单独扫一
遍日志。
 不支持强起，强起后需要重新全量导出数据。
 备机解码时，switchover和failover时可能出现解码数据变多，需用户手动过滤。Qurem
协议下，switchover和failover选择升主的备机，需要与当前主机日志同步。
 不允许主备，多个备机同时使用同一个复制槽解码，否则会产生数据不一致。
 只支持主机创建删除复制槽。
 数据库故障重启或逻辑复制进程重启后，解码数据存在重复，用户需自己过滤。
 计算机内核故障后，解码存在乱码，需手动或自动过滤。
 当前备机逻辑解码，不支持开启极致RTO。
 请确保在创建逻辑复制槽过程中长事务未启动，启动长事务会阻塞逻辑复制槽的创建。
 不支持intervalpartition表复制。
 不支持全局临时表。
 在事务中执行DDL语句后，该DDL语句与之后的语句不会被解码。
 如需进行备机解码，需在对应主机上设置guc参数enable_slot_log=on。
 禁止在使用逻辑复制槽时在其他节点对该复制槽进行操作，删除复制槽进行操作的操作
南大通用数据技术股份有限公司
1147
GBase 8s V8.8开发者手册
需在该复制槽停止解码后执行。
21.1.2 使用 SQL 函数接口进行逻辑解码
GBase8s可以通过调用SQL函数，进行创建、删除、推进逻辑复制槽，获取解码后的
事务日志。
21.1.2.1 前提条件
 逻辑日志目前从主机节点中抽取，默认关闭SSL连接，如果进行逻辑复制，需要先上
配置GUC参数ssl=on。
说明： 为避免安全风险，请保证启用SSL连接。
 设置GUC参数wal_level=logical。
 设置GUC参数max_replication_slots>每个节点所需的（物理流复制槽数+逻辑复制槽数）。
物理流复制槽提供了一种自动化的方法来确保主节点在所有备节点或从备节点收到
xlog之前，xlog不会被移除。也就是说物理流复制槽用于支撑主备节点HA。数据库所需要
的物理流复制槽数为：备节点加从备的和与主节点之间的比例。例如，假设数据库的高可用
方案为1主、1备、1从备，则所需物理流复制槽数为2。
关于逻辑复制槽数，请按如下规则考虑。
 一个逻辑复制槽只能解码一个Database的修改，如果需要解码多个Database，则
需要创建多个逻辑复制槽。
 如果需要多路逻辑复制同步给多个目标数据库，在源端数据库需要创建多个逻辑复
制槽，每个逻辑复制槽对应一条逻辑复制链路。
 仅限初始用户和拥有REPLICATION权限的用户进行操作。三权分立关闭时数据库管理
员可进行逻辑复制操作，三权分立开启时不允许数据库管理员进行逻辑复制操作。
 目前默认不支持主备从部署模式。
南大通用数据技术股份有限公司
1148
GBase 8s V8.8开发者手册
21.1.2.2 操作步骤
1. 以数据库安装用户登录GBase8s数据库主节点。
2. 使用如下命令通过连接默认数据库postgres。
gsql-dpostgres-p16000-r
其中，16000为数据库端口号，用户可根据实际情况替换。
3. 创建名称为slot1的逻辑复制槽。
gbase=#SELECT*FROMpg_create_logical_replication_slot('slot1','mppdb_decoding');
slotname|xlog_position
----------+---------------
slot1 |0/601C150
(1row)
4. 在数据库中创建表t，并向表t中插入数据。
gbase=#CREATETABLEt(aintPRIMARYKEY,bint);
gbase=#INSERTINTOtVALUES(3,3);
5. 读取复制槽slot1解码结果，解码条数为4096。
gbase=#SELECT*FROMpg_logical_slot_peek_changes('slot1',NULL,4096);
location | xid |data
-----------+-------+-------------------------------------------------------------------------------------------
------------------------------------------------------
-------------------------------------------
0/601C188|1010023|BEGIN1010023
0/601ED60|1010023|COMMIT1010023CSN1010022
0/601ED60|1010024|BEGIN1010024
0/601ED60|1010024|
{"table_name":"public.t","op_type":"INSERT","columns_name":["a","b"],"columns_type":["integ
er","integer"],"columns_val":["3","3"],"old_keys_name":[],"old_keys_type":[],"old_keys_val":[]}
0/601EED8|1010024|COMMIT1010024CSN1010023
(5rows)
南大通用数据技术股份有限公司
1149
GBase 8s V8.8开发者手册
6. 删除逻辑复制槽slot1。
gbase=# SELECT*FROMpg_drop_replication_slot('slot1');
pg_drop_replication_slot
--------------------------
(1row)
21.2发布订阅
发布和订阅基于逻辑复制实现，其中有一个或者更多订阅者订阅一个发布者节点上的一
个或者更多发布。订阅者从它们所订阅的发布拉取数据。
发布者上的更改会被实时发送给订阅者。订阅者以与发布者相同的顺序应用那些数据，
这样在一个订阅中能够保证发布的事务一致性。这种数据复制的方法有时候也被称为事务性
复制。
发布订阅的典型用法是：
在一个数据库或者一个数据库的子集中发生更改时，把增量的改变发送给订阅者。
在更改到达订阅者时引发触发器。
把多个数据库联合到单一数据库中（例如用于分析目的）。
订阅者数据库的行为与任何其他GBase8s实例相同，并且可以被用作其他数据库的发
布者，只需要定义它自己的发布。当订阅者被应用当作只读时，单一的订阅中不会有冲突。
在另一方面，如果应用或者对相同表集合的订阅者执行了其他的写动作，冲突可能会发生。
21.2.1 发布
发布可以被定义在任何物理复制的主服务器上。定义有发布的节点被称为发布者。发布
是从一个表或者一组表生成的改变的集合，也可以被描述为更改集合或者复制集合。每个发
布都只存在于一个数据库中。
发布与模式不同，不会影响表的访问方式。如果需要，每个表都可以被加入到多个发布。
南大通用数据技术股份有限公司
1150
GBase 8s V8.8开发者手册
当前，发布只能包含表。对象必须被明确地加入到发布，除非发布是用ALLTABLES创建
的。
发布可以选择把它们产生的更改限制为INSERT、UPDATE、DELETE的任意组合，类
似于触发器如何被特定事件类型触发的方式。默认情况下，所有操作类型都会被复制。
为了能够复制UPDATE和DELETE操作，被发布的表必须配置有一个“复制标识”，这
样在订阅者那一端才能标识对于更新或删除合适的行。默认情况下，复制标识就是主键（如
果有主键）。也可以在复制标识上设置另一个唯一索引（有特定的额外要求）。如果表没有
合适的键，那么可以设置成复制标识“full”，它表示整个行都成为那个键。不过，这样做效
率很低，只有在没有其他方案的情况下才应该使用。如果在发布者端设置了“full”之外的复
制标识，在订阅者端也必须设置一个复制标识，它应该由相同的或者少一些的列组成。如何
设置复制标识的细节请参考REPLICAIDENTITY。如果在复制UPDATE或DELETE操作的
发布中加入了没有复制标识的表，那么订阅者上后续的UPDATE或DELETE操作将导致错
误。不管有没有复制标识，INSERT操作都能继续下去。
每一个发布都可以有多个订阅者。
Publication通过使用CREATEPUBLICATION命令创建并且可以在之后使用相应的命令
进行修改或者删除。
表可以使用 ALTER PUBLICATION 动态地增加或者移除。ADD TABLE 以及 DROP
TABLE操作都是事务性的，因此一旦该事务提交，该表将以正确的快照开始或者停止复制。
21.2.2 订阅
订阅是逻辑复制的下游端。订阅被定义在其中的节点被称为订阅者。一个订阅会定义到
另一个数据库的连接以及它想要订阅的发布集合（一个或者多个）。
订阅者数据库的行为与任何其他GBase8s实例相同，并且可以被用作其他数据库的发
布者，只需要定义它自己的发布。
如果需要，一个订阅者节点可以有多个订阅。可以在一对发布者-订阅者之间定义多个
南大通用数据技术股份有限公司
1151
GBase 8s V8.8开发者手册
订阅，在这种情况下要确保被订阅的发布对象不会重叠。
每一个订阅都将通过一个复制槽接收更改。预先存在的表的初始数据暂时不支持同步。
如果当前用户是一个具有SYSADMIN权限用户，则订阅会被gs_dump转储。否则订阅
会被跳过并且写出一个警告，因为不具有SYSADMIN权限用户不能从pg_subscription目录
中读取所有的订阅信息。
可以使用CREATESUBSCRIPTION增加订阅，并且使用ALTERSUBSCRIPTION在任
何时刻修改订阅，还可以使用DROPSUBSCRIPTION删除订阅。
在一个订阅被删除并且重建时，同步信息会丢失。这意味着数据必须被重新同步。
模式定义不会被复制，并且被发布的表必须在订阅者上存在。只有常规表可以成为复制
的目标。例如，不能复制视图。
表在发布者和订阅者之间使用完全限定的表名进行匹配。不支持复制到订阅者上命名不
同的表。
表的列也通过名称匹配。订阅表中的列顺序不需要与发布表中的顺序一样。 列的数据
类型也不需要一样，只要可以将数据的文本表示形式转换为目标类型即可。 例如，您可以
从integer类型的列复制到bigint类型的列。 目标表还可以具有发布表中不存在的额外列。
额外列都将使用目标表的定义中指定的默认值填充。
21.2.3 冲突处理
逻辑复制的行为类似于正常的DML操作，即便数据在订阅者节点本地被修改，逻辑复
制也会根据收到的更改来更新数据。如果流入的数据违背了任何约束，复制将停止。这种情
况被称为一个冲突。在复制UPDATE或DELETE操作时，缺失的数据将不会产生冲突并且
这类操作将被简单地跳过。
冲突将会产生错误并且停止复制，它必须由用户手工解决。在订阅者的服务器日志中可
以找到有关冲突的详细情况。
通过更改订阅者上的数据（这样它就不会与到来的数据发生冲突）或者跳过与已有数据
冲突的事务可以解决这种冲突。通过调用pg_replication_origin_advance()函数可以跳过该事
南大通用数据技术股份有限公司
1152
GBase 8s V8.8开发者手册
务，函数的参数是对应于该订阅名称的node_name以及一个位置。复制源头的当前位置可
以在pg_replication_origin_status系统视图中看到。
21.2.4 限制
发布订阅基于逻辑复制实现，继承所有逻辑复制的限制，同时发布订阅还有下列额外的
限制或者缺失的功能。
 数据库模式和DDL命令不会被复制。初始模式可以手工使用gs_dump–schema-only进
行拷贝。后续的模式改变需要手工保持同步。
 序列数据不被复制。后台由序列支撑的serial或者标识列中的数据当然将被作为表的一
部分复制，但是序列本身在订阅者上仍将显示开始值。如果订阅者被用作一个只读数据
库，那么这通常不会是什么问题。不过，如果订阅者数据库预期有某种转换或者容错，
那么序列需要被更新到最后的值，要么通过从发布者拷贝当前数据的防范（也许使用
gs_dump），要么从表本身决定一个足够高的值。
 只有表支持复制，包括分区表。试图复制其他类型的关系，例如视图、物化视图或外部
表，将会导致错误。
 同一数据库内的多个订阅不应当订阅内容重复的发布（指发布相同的表），否则会产生
数据重复或者主键冲突。
 如果被发布的表中包含不支持btree/hash索引的数据类型（如地理类型等），那么该表
需要有主键，才能成功的复制UPDATE/DELETE操作到订阅端。否则复制会失败，同
时订阅端会出现“FATAL:couldnotidentifyanequalityoperatorfortypexx”的日志。
 使用gs_probackup备份发布端时，由于gs_probackup工具本身不支持备份逻辑复制槽，
所以备份恢复后，会由于逻辑复制槽不存在，而使得原有的发布订阅关系无法正常建立。
建议使用gs_basebackup工具备份发布端。
21.2.5 架构
发布者上的更改会在它们发生时实时传送给订阅者。订阅者按照数据在发布者上被提交
南大通用数据技术股份有限公司
1153
GBase 8s V8.8开发者手册
的顺序应用数据，这样任意单一订阅中的发布的事务一致性才能得到保证。
逻辑复制被构建在一种类似于物理流复制的架构上。它由“walsender”和“apply”进程实现。
walsender进程开始对WAL的逻辑解码并且载入标准逻辑解码插件（pgoutput）。该插件把
从WAL中读取的更改转换成逻辑复制协议并且根据发布说明过滤数据。然后数据会被连续
地使用流复制协议传输到应用工作者，应用工作者会把数据映射到本地表并且以正确的事务
顺序应用它们接收到的更改
订阅者数据库上的应用进程总是将session_replication_role设置为replica运行，这会产
生触发器和约束上通常的效果。
逻辑复制应用进程当前仅会引发行触发器，而不会引发语句触发器。不过，初始的表同
步是以类似一个COPY命令的方式实现的，因此会引发INSERT的行触发器和语句触发器。
21.2.6 监控
因为逻辑复制是基于与物理流复制相似的架构的，一个发布节点上的监控也类似于对物
理复制主节点的监控。
有关订阅的监控信息在pg_stat_subscription中可以看到。 每一个订阅工作者在这个视
图都有一行。一个订阅能有零个或者多个活跃订阅工作者取决于它的状态。
通常，对于一个已启用的订阅会有单一的应用进程运行。一个被禁用的订阅或者崩溃的
订阅在这个视图中不会有行存在。如果有任何表的数据同步正在进行，对正在被同步的表会
有额外的工作者。
21.2.7 安全性
用于复制连接的角色必须具有REPLICATION属性(或者是具有SYSADMIN权限用户)。
如果角色缺少SUPERUSER 和 BYPASSRLS，发布者的行安全策略可以执行。 角色的访问
权限必须在pg_hba.conf中配置，并且必须具有LOGIN属性。
要创建发布，用户必须在数据库中有CREATE特权。
要把表加入到一个发布，用户必须在该表上有拥有权。要创建一个自动发布所有表的发
南大通用数据技术股份有限公司
1154
GBase 8s V8.8开发者手册
布，用户必须是一个具有SYSADMIN权限用户。
要创建订阅，用户必须是一个具有SYSADMIN权限用户。