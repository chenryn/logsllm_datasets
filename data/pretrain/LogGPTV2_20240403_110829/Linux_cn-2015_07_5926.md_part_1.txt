---
author: Avishek Kumar
category: 技术
comments_data:
- date: '2015-07-31 08:24:36'
  message: Linux中国出品，必属精品。
  postip: 210.36.46.238
  username: XYJK1002 [Chrome 42.0|Windows 7]
- date: '2015-08-01 21:26:05'
  message: 哇！太赞誉了，感谢本文译者 GOLinux ！欢迎更多的兄弟姐妹加入LCTT ： http://lctt.github.io/ ~
  postip: 114.245.8.240
  username: linux [Chrome 43.0|Mac 10.10]
- date: '2015-08-01 22:08:46'
  message: 谢谢分享，谢谢LC！
  postip: 171.8.201.207
  username: netb2c [Chrome 44.0|Fedora]
- date: '2015-08-04 17:56:01'
  message: 第一条命令应该是 systemctl --version 吧
  postip: 36.47.2.82
  username: 来自陕西西安的 Chrome 43.0|Windows 8.1 用户
- date: '2015-08-04 18:36:29'
  message: Linux中国出品，必属精品。
  postip: 223.64.63.72
  username: 夜域诡士 [Chrome 31.0|Windows 7]
- date: '2015-08-04 20:33:23'
  message: 您说的对，已经修改。
  postip: 123.120.50.14
  username: linux [Chrome 44.0|Mac 10.10]
- date: '2016-12-07 17:08:24'
  message: 希望增加 控制reboot时启动顺序等相关说明 谢谢！
  postip: 15.211.153.80
  username: 来自美国的 Chrome 54.0|Windows 7 用户
- date: '2017-01-11 11:17:33'
  message: 感谢楼主分享！
  postip: 36.47.163.188
  username: 来自陕西西安的 Chrome 55.0|Windows 7 用户
- date: '2017-06-15 12:29:08'
  message: 感谢楼主分享！
  postip: 125.69.124.51
  username: 来自四川成都的 Firefox 54.0|Windows 7 用户
- date: '2017-07-04 14:47:44'
  message: 感谢，学到了很多！
  postip: 211.138.190.245
  username: amwuje [Microsoft Edge 14.14393|Windows 10]
- date: '2019-06-08 06:12:41'
  message: "17. 列出所有系统挂载点\r\n\r\ntmp.mount&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;disabled\r\n\r\ntmp.mount&nbsp;&nbsp;是什么东西？怎么得来的？"
  postip: 116.231.19.31
  username: 来自上海的 Chrome 74.0|Windows 10 用户
- date: '2019-06-08 06:12:47'
  message: "17. 列出所有系统挂载点\r\n\r\ntmp.mount&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;disabled\r\n\r\ntmp.mount&nbsp;&nbsp;是什么东西？怎么得来的？"
  postip: 116.231.19.31
  username: 来自上海的 Chrome 74.0|Windows 10 用户
- date: '2019-06-08 06:12:49'
  message: "17. 列出所有系统挂载点\r\n\r\ntmp.mount&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;disabled\r\n\r\ntmp.mount&nbsp;&nbsp;是什么东西？怎么得来的？"
  postip: 116.231.19.31
  username: 来自上海的 Chrome 74.0|Windows 10 用户
- date: '2019-06-08 06:12:50'
  message: "17. 列出所有系统挂载点\r\n\r\ntmp.mount&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;disabled\r\n\r\ntmp.mount&nbsp;&nbsp;是什么东西？怎么得来的？"
  postip: 116.231.19.31
  username: 来自上海的 Chrome 74.0|Windows 10 用户
- date: '2019-06-08 06:14:09'
  message: "17. 列出所有系统挂载点\r\n\r\ntmp.mount&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;
    &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;disabled\r\n\r\n\r\ntmp.mount&nbsp;&nbsp;是什么东西？怎么得来的？"
  postip: 116.231.19.31
  username: 来自上海的 Chrome 74.0|Windows 10 用户
- date: '2020-06-24 15:49:00'
  message: 14、19、23中的 systemctl is-active 并不是用于激活，而是查询运行状态。和 systemctl enable、systemctl
    disable 配对的应该是 systemctl is-enabled
  postip: 110.184.114.34
  username: 来自四川成都的 Chrome 39.0|Windows 10 用户
- date: '2020-07-22 15:31:01'
  message: '66666'
  postip: 211.141.83.125
  username: 来自江西赣州的 Chrome 81.0|Windows 10 用户
- date: '2020-08-24 11:27:32'
  message: 学习了，很详细
  postip: 122.235.252.161
  username: 来自浙江杭州的 Chrome 69.0|Windows 7 用户
- date: '2021-03-19 17:36:53'
  message: 我是哪的用户？
  postip: 114.88.179.92
  username: 来自上海的 Chrome 86.0|Windows 10 用户
- date: '2021-03-22 15:36:31'
  message: 你是上海的用户
  postip: 114.88.179.92
  username: 来自上海的 Chrome 86.0|Windows 10 用户
- date: '2021-03-22 15:38:37'
  message: 'yes'
  postip: 114.88.179.92
  username: 来自上海的 Chrome 86.0|Windows 10 用户
- date: '2021-06-01 14:27:11'
  message: 我是哪里的？
  postip: 183.134.218.234
  username: 来自浙江宁波的 Chrome 78.0|Mac 10.16 用户
- date: '2022-08-17 14:24:39'
  message: '666'
  postip: 121.35.102.247
  username: 来自广东深圳的 Chrome 104.0|Windows 10 用户
- date: '2022-10-25 20:41:39'
  message: 不得不说，讲得清晰又不浮于表面，真好。
  postip: 120.199.32.90
  username: 来自浙江杭州的 Chrome 103.0|Windows 10 用户
- date: '2022-10-25 20:41:42'
  message: 不得不说，讲得清晰又不浮于表面，真好。
  postip: 120.199.32.90
  username: 来自浙江杭州的 Chrome 103.0|Windows 10 用户
- date: '2022-10-25 21:14:58'
  message: "w w w . c n b l o g s . c o m / i s m e - z j h / p / 1 1 6 8 5 2 3 3
    . h t m l\r\n这个更不错"
  postip: 120.199.32.90
  username: 来自浙江杭州的 Chrome 103.0|Windows 10 用户
- date: '2022-10-25 22:55:08'
  message: https://www.cnblogs.com/isme-zjh/p/11685233.html
  postip: 153.0.156.89
  username: linux [Chrome 106.0|Mac 10.15]
count:
  commentnum: 27
  favtimes: 31
  likes: 0
  sharetimes: 2
  viewnum: 188155
date: '2015-07-31 08:00:00'
editorchoice: false
excerpt: Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。 Systemd是一个系统管理守护进程、工具和库的集合，用于取代System
  V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。 在Linux生态系统中，Systemd被部署到了大多数的标准Linux发行版中，只有为数不多的几个发行版尚未部署。Systemd通常是所有其它守护进程的父进程，但并非总是如此。  使用Systemctl管理Linux服务
  本文旨在阐明在运行systemd的系统上如何控制系统和服务。 Systemd初体验和Systemctl基础 1. 首先检查你的系统中是否安装有systemd并确定当前安
fromurl: http://www.tecmint.com/manage-services-using-systemd-and-systemctl-in-linux/
id: 5926
islctt: true
largepic: /data/attachment/album/201507/30/210221zg6czg8yogegegay.jpg
permalink: /article-5926-1.html
pic: /data/attachment/album/201507/30/210221zg6czg8yogegegay.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。 Systemd是一个系统管理守护进程、工具和库的集合，用于取代System
  V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。 在Linux生态系统中，Systemd被部署到了大多数的标准Linux发行版中，只有为数不多的几个发行版尚未部署。Systemd通常是所有其它守护进程的父进程，但并非总是如此。  使用Systemctl管理Linux服务
  本文旨在阐明在运行systemd的系统上如何控制系统和服务。 Systemd初体验和Systemctl基础 1. 首先检查你的系统中是否安装有systemd并确定当前安
tags:
- systemd
- systemctl
thumb: false
title: systemctl 命令完全指南
titlepic: false
translator: GOLinux
updated: '2015-07-31 08:00:00'
---
Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。
Systemd是一个系统管理守护进程、工具和库的集合，用于取代System V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。
在Linux生态系统中，Systemd被部署到了大多数的标准Linux发行版中，只有为数不多的几个发行版尚未部署。Systemd通常是所有其它守护进程的父进程，但并非总是如此。
![Manage Linux Services Using Systemctl](/data/attachment/album/201507/30/210221zg6czg8yogegegay.jpg)
*使用Systemctl管理Linux服务*
本文旨在阐明在运行systemd的系统上“如何控制系统和服务”。
### Systemd初体验和Systemctl基础
#### 1. 首先检查你的系统中是否安装有systemd并确定当前安装的版本
```
# systemctl --version
systemd 215
+PAM +AUDIT +SELINUX +IMA +SYSVINIT +LIBCRYPTSETUP +GCRYPT +ACL +XZ -SECCOMP -APPARMOR
```
上例中很清楚地表明，我们安装了215版本的systemd。
#### 2. 检查systemd和systemctl的二进制文件和库文件的安装位置
```
# whereis systemd 
systemd: /usr/lib/systemd /etc/systemd /usr/share/systemd /usr/share/man/man1/systemd.1.gz
# whereis systemctl
systemctl: /usr/bin/systemctl /usr/share/man/man1/systemctl.1.gz
```
#### 3. 检查systemd是否运行
```
# ps -eaf | grep [s]ystemd
root         1     0  0 16:27 ?        00:00:00 /usr/lib/systemd/systemd --switched-root --system --deserialize 23
root       444     1  0 16:27 ?        00:00:00 /usr/lib/systemd/systemd-journald
root       469     1  0 16:27 ?        00:00:00 /usr/lib/systemd/systemd-udevd
root       555     1  0 16:27 ?        00:00:00 /usr/lib/systemd/systemd-logind
dbus       556     1  0 16:27 ?        00:00:00 /bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation
```
**注意**：systemd是作为父进程（PID=1）运行的。在上面带（-e）参数的ps命令输出中，选择所有进程，（-a）选择除会话前导外的所有进程，并使用（-f）参数输出完整格式列表（即 -eaf）。
也请注意上例中后随的方括号和例子中剩余部分。方括号表达式是grep的字符类表达式的一部分。
#### 4. 分析systemd启动进程
```
# systemd-analyze
Startup finished in 487ms (kernel) + 2.776s (initrd) + 20.229s (userspace) = 23.493s
```
#### 5. 分析启动时各个进程花费的时间
```
# systemd-analyze blame
8.565s mariadb.service
7.991s webmin.service
6.095s postfix.service
4.311s httpd.service
3.926s firewalld.service
3.780s kdump.service
3.238s tuned.service
1.712s network.service
1.394s lvm2-monitor.service
1.126s systemd-logind.service
....
```
#### 6. 分析启动时的关键链
```
# systemd-analyze critical-chain
The time after the unit is active or started is printed after the "@" character.
The time the unit takes to start is printed after the "+" character.
multi-user.target @20.222s
└─mariadb.service @11.657s +8.565s
  └─network.target @11.168s
    └─network.service @9.456s +1.712s
      └─NetworkManager.service @8.858s +596ms
        └─firewalld.service @4.931s +3.926s
          └─basic.target @4.916s
            └─sockets.target @4.916s
              └─dbus.socket @4.916s
                └─sysinit.target @4.905s
                  └─systemd-update-utmp.service @4.864s +39ms
                    └─auditd.service @4.563s +301ms
                      └─systemd-tmpfiles-setup.service @4.485s +69ms
                        └─rhel-import-state.service @4.342s +142ms
                          └─local-fs.target @4.324s
                            └─boot.mount @4.286s +31ms
                              └─systemd-fsck@dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d19608096
                                └─dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d196080964.device @4
```
**重要**：Systemctl接受服务（.service），挂载点（.mount），套接口（.socket）和设备（.device）作为单元。
#### 7. 列出所有可用单元
```
# systemctl list-unit-files
UNIT FILE                                   STATE   
proc-sys-fs-binfmt_misc.automount           static  
dev-hugepages.mount                         static  
dev-mqueue.mount                            static  
proc-sys-fs-binfmt_misc.mount               static  
sys-fs-fuse-connections.mount               static  
sys-kernel-config.mount                     static  
sys-kernel-debug.mount                      static  
tmp.mount                                   disabled
brandbot.path                               disabled
.....
```
#### 8. 列出所有运行中单元