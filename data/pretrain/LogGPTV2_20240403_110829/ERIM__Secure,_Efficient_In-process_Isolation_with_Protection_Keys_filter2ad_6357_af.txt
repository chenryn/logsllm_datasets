### USENIX Association
#### 28th USENIX Security Symposium

**Table 6: Domain Switch Rates and Overheads for Selected SPEC CPU Benchmarks**

| Benchmark | Switches/sec | ERIM-CPI Overhead (Relative to Original CPI) in % |
|-----------|--------------|--------------------------------------------------|
| 403.gcc   | 16,454,595   | 22.30%                                           |
| 445.gobmk | 1,074,716    | 1.77%                                            |
| 447.dealII| 1,277,645    | 0.56%                                            |
| 450.soplex| 410,649      | 0.60%                                            |
| 464.h264ref | 1,705,131  | 1.22%                                            |
| 471.omnetpp | 89,260,024 | 144.02%                                          |
| 482.sphinx3 | 1,158,495  | 0.84%                                            |
| 483.xalancbmk | 32,650,497 | 52.22%                                           |

**CPI Overheads:**
- The geometric means of the overheads (relative to no protection) for the original CPI and ERIM-CPI across all benchmarks are 4.7% and 5.3%, respectively.
- ERIM-CPI's relative overheads are low for most benchmarks, except for `gcc`, `omnetpp`, and `xalancbmk`.

**Switching Rates Analysis:**
- Table 6 shows the switching rates for benchmarks requiring more than 100,000 switches per second.
- High overheads in `gcc`, `omnetpp`, and `xalancbmk` are due to extremely high switching rates (between 1.6 × 10^7 and 8.9 × 10^7 per second).
- Further profiling indicates that tight loops with pointer updates (each update incurs a switch) are the cause. An optimization pass could hoist domain switches out of loops using direct control flow instructions and enforce store instructions to be bound to application memory, but this has not been implemented yet.

**ERIM-CPI Overhead:**
- Table 6 also shows the overhead of ERIM-CPI excluding binary inspection, relative to the original CPI over ASLR.
- The relative overhead ranges from 0.03% to 0.16% for 100,000 switches per second, or 7.8 to 41.6 cycles per switch.
- These results indicate that ERIM can support inlined reference monitors with switching rates up to 10^6 times a second with low overhead. Beyond this rate, the overhead becomes noticeable.

**CPS Overheads:**
- The results for CPS are similar to those for CPI, but the overheads are generally lower.
- Relative to the baseline without protection, the geometric means of the overheads for the original CPS and ERIM-CPS are 1.1% and 2.4%, respectively.
- ERIM-CPS’s overhead relative to the original CPS is within 2.5% on all benchmarks, except for `perlbench`, `omnetpp`, and `xalancbmk`, where it ranges up to 17.9%.

### Comparison to Existing Techniques

**Threat Models:**
- **Kernel Page Tables:** Similar threat model to ERIM, requiring trust in the OS kernel.
- **Hypervisor Extended Page Tables (VMFUNC):** Can afford a stronger threat model, where the OS kernel need not be trusted.
- **Software Fault Isolation (SFI) with Intel MPX:** Weaker threat model, requiring trust in the transform that adds bounds checks and potentially a control-flow integrity (CFI) mechanism.
- **Instrumentation for Full Memory Safety (WebAssembly):** Provides SFI-like protection and additional data protection, but requires trust in the instrumentation mechanism.

**Quantitative Comparisons:**
- **SFI using MPX:**
  - NGINX experiment: MPX-based instrumentation reduces throughput by 15-30%.
  - ERIM reduces overheads by no more than 3.5%.
  - Across all file sizes, MPX overheads are 4.2-8.5x those of ERIM.

- **Extended Page Tables (VMFUNC):**
  - NGINX protected with VMFUNC and emulated ERIM: VMFUNC induces an overhead of 7-15%, while emulated ERIM is 2.1-5.3%.
  - Overheads reduce as the switching rate decreases with increasing file size.

- **Kernel Page Tables (lwCs):**
  - NGINX experiment with two lwC contexts: Overheads are compared using emulation.
  - ERIM's overhead is consistently lower than lwCs.

**Experimental Setup:**
- All experiments were conducted on Dell OptiPlex 7040 machines with 4-core Intel Skylake i5-6500 CPUs (3.2 GHz), 16 GB memory, 10 Gbps Ethernet cards, and FreeBSD 11.

**Figures:**
- Figure 3a: ERIM vs. SFI using MPX
- Figure 3b: Emulated ERIM vs. VMFUNC
- Figure 3c: Emulated ERIM vs. LwC

These figures provide a visual comparison of NGINX throughput with different isolation techniques, highlighting the lower overhead of ERIM.