## Page 309
层的重组是必需的。
操作占用，例如网络操作，这可以看作是网络层攻击的信号，例如拒绝服务攻击。
源
很严重的问题。
作等任务不会如此耗费时间。如果过半的计算机操作时间用在内核中则可以肯定系统出现了
表明系统大量的进程时间都用于管理这些请求。
286
。
让我们通过最后一段日志研究一下数据包。应该注意在底层IP数据包进行分片，在IP
3.第三个包的日志
因为没有一个进程对计算机本身造成大量的资源占用，所以全部的CPU时间都被内核
在上面的信息中，最值得关注的是CPU 资源的分配。正常情况下，包的重组和网络操
这段信息表明了系统上正在运行的所有进程，以及它们消耗了多少CPU资源和内存资
下面是从top程序中提取的更完整的信息：
下面的信息是从上面的top 程序中提取出来的：
系统在最后1、5、15分钟内的负载2.19、1.98、2.05。
从这里可以得到如下信息：
下面再看一段top程序的输出。
UNIX/Linux网络日志分析与流量监控
6166829
5
）当前登录的用户数：1
正常运行时间：35 days
当前系统时间：3:11 am
root
root
00x
root
 3:1lam up 30 days, 1 user, load average: 2.19,1.98,2.05
Swap: 128516K av,
Mem:30532k av,21276K used, 9256K free,8036K shrd,1956K
CPU states:0.3%user,53.4% system,0.0% nice,46.6% idle
21 processes:19 sleeping,1 running,0 zombie,0 stopped
C
C
口
0.3
C
P
0
0
D
D
，因此，
0:0
，如果不进一步分析，tcpdump输出的数据没有多少是直接可用
used
0K used,128516Kfre
29879000
C
SRS
0
00
0:0
00
000
000
0
o0
0
o0o
00000000
0
00
06
222
2300000
33
45
10806
0
99
6
000
08
。运行的进程消耗了大量的资源，
ssh
14552K
COOkh
0
E085000.00
82282.70L0.E0
2P24.00180:60
A
00-0050
20:800
.0:20-80
OT
OT场
---
## Page 310
过上面日志分析可得知攻击过程中的事件序列可概括为如下3点：
如32970等）所显示的那样。当大量的碎片包注入到网络中时，报警系统没有发出警报。
包为例：
的。我们可以把同一序列的两个数据包组合在一起，形成一个完整的数据包。以下面的数据
201果口
苗。数据包被分成了许多小片，如日志中（frag x:16@0+x 是变量，表示 frag 后面的数字，
水
1）对内网的第一次端口扫描的意图很明显，其目的是测试该网络是否在向外发送E-mail。
这是一个来自源IP地址为10.2.0.1对其网络内的另一个主机（192.168.120.2）的端口扫
这时可从以上日志中得到如下信息：学2
03:10:54.00435110.2.0.1>192.168.120.2:(frag29591:4@16)
下面是第二个数据包的日志：
?
●到达时间
通过这两个包，
序列号/确认号N/A
TCP标志
目的TCP端口N/A
目的IP地址192.168.120.2
源TCP端口
源IP地址
03:10:54.004281truncated-tcp16(frag29591:16@0+)
03:10:54.00421410.2.0.1>192.168.120.2:(frag9068:4@16)
03:10:54.004160 truncated-tcp 16(frag 9068:16@0+)
03:10:53.684807 10.2.0.1>192.168.120.2:(fag 30429:4@16)
03:10:53.684739 truncated-tcp16(frag30429:16@0+)
03:10:53.684615truncated-tcp16(frag43013:16@0+)
03:10:53.38441210.2.0.1>192.168.120.2:frag 54769:4@16)
03:10:53.384344truncated-tcp16(frag54769:16@0+)
03:10:53.38427510.2.0.1>192.168.120.2:(frag 24040:4@16)
03:10:53.384224 truncated-tcp16(frag 24040:16@0+)
03:10:53.056987192.168.120.2.smtp>10.2.0.1.49052:R 0:0(0)ack 083618358win 0
03:10:53.05694910.2.0.1>192.168.120.2:(frag 27582:4@16)
03:10:53.056786truncated-tcp16（frag27582:16@0+)
03:10:53.056857192.168.120.2.www>10.2.0.1.49052:R 0:0(0) ack 40532387 win.0
03:10:53.05671810.2.0.1>192.168.120.2:(frag 37282:4@16)
03:10:53.056511 truncated-tcp16(frag29211:16@0+)
03:10:53.056441 10.2.0.1>192.168.120.2:(frag 32970:4@16)
03:10:53.056374 truncated-tcp 16 (frag 32970:16@0+)
03:10:53.056663192.168.120.2.telnet>10.2.0.1.49052:R 0:0(0)ack 036410064win 0
03:10:53.056309 10.2.0.1>192.168.120.2:(frag 46940:4@16)
03:10:53.056650truncated-tcp16(frag37282:16@0+)
03:10:53.056248 truncated-tcp16(frag 46940:16@0+)
N/A
03:10:53.056248
可以提取出如下信息：
N/A
一
10.2.0.1
第10章Snort系统部署及应用案例287
岛
前目#澳
器由器
意#
通
1
---
## Page 311
因。除此之外，还有更好的方法吗？
疑难问题
碎片而耗尽资源。为解决这一问题，NIDS 软件经过配置，已经实现了IP碎片重组的功能。
片、碎片重叠之类的技术仍然会带来安全隐患。
的碎片，就可能使那些缓存所有碎片的IDS消耗掉所有内存，即碎片超时。而且像极小碎
片保存到一个缓冲区里，待所有的碎片到达之后，再重组IP 分组。如果攻击者不送出所有
达到欺骗 IDS 的目的。即使网络入侵检测产品具有 IP 分片重组能力，IDS 也必须把 IP 碎
总是假设IP 碎片是按照顺序到达就会出现漏报的情况。攻击者可以打乱碎片的到达顺序，
片)。不过，IP碎片有可能不按照顺序到达，目标系统必须能够重组碎片。但是，如果IDS
片只有到达目的主机之后才可能汇总。
出来的小块就叫做碎片（fragmentation）。IP 分组可以独立地通过不同的路径转发，这使得碎
时，路由器必须将分组分成小块，使其长度能够满足这一网络对分组大小的限制，这些分割
存复制，从而耗费大量的CPU 周期。目前主流服务器网络接口都是1Gb/s，那么1500字节
接收端，需要对分片的报文重组。路由器需要耗费控制通路的资源来处理IP分片和重组。
度，那么IP层就要对数据报文进行分片操作，使每一片的长度都小于或等于MTU。在报文的
片），也就不会发出E-mail。
绕过了NIDS系统（但目前最新的智能包过滤设备将直接丢掉报头中未包含端口信息的分
了保护作用。
允许后续的分片通过，也就是说NIDS看不到一个完整的TCP头，所以面对这种攻击失去
分片使目的端口号位于第二个分片中，因此NIDS设备仅通过判断第一个分片，决定是否
碎片攻击。正常情况下NIDS通过判断目的端口号决定允许/禁止操作。但是由于通过恶意
度20字节，而TCP报头的剩余4字节包含在第二个分片中，具有这种特征的攻击叫做IP
统内核产生的高负载可以看作是系统的网络堆栈遭到攻击的信号，就像这起事件中的一样。
288
对于终端而言，IP分片和重组是由操作系统完成的，每个报文的处理都要产生中断和内
IP碎片通常会按照顺序到达目的地，最后的碎片的MF位置0（表示这是最后一个碎
这些分片在目标主机上进行重组之后将形成IP碎片攻击。攻击者也就是利用这种方法
1．在本案例中当小许发现问题后采取了积极应对措施，使用了一系列的工具来查明原
攻击者利用上述特征，将攻击流量进行分片后向攻击目标发送，导致目标主机因处理IP
经过上面的分析，能从分片大小得知：第一个分片大小为16字节，小于TCP报头长
2.本案例中小许发现系统被入侵，接下来是如何处理的？
当路由器准备将IP分组发送到网络上，而该网络又无法将这个IP分组一次全部发送
IP 碎片经常被用作 DoS 攻击，典型的例子便是 teardrop，其原理是利用发送异常的分
IP分组的理论长度可达64KB，如果IP层要发送的数据报文的长度超过了链路的MTU长
3）进程转储（Process Dump）表明，系统平均负载较高，却没有用户的进程运行。系
2）在第二次端口扫描中，攻击者试图发现NIDS系统的检测规则集。
注意：
UNIX/Linux网络日志分析与流量监控
---
## Page 312
机IP地址为192.168.1.188。下面是 Snort 的日志（/var/log/snort/alert）：
snort/alert里都能看到记录。本书作者使用192.168.1.114这台计算机发起端口扫描，IDS主
测试效果
通过 Guardian 与 iptables 防火墙联动的方案。安装过程这里不再讲解。
后审计。所以我们可以将两者的优点结合在一起发挥强强联合的作用。这里提供一个Snort
志，所以事后无法审计日志，而入侵检测系统把数据包内容完整地作为日志保留，可用于事
不能切断隐藏在正常数据包中的黑客攻击。在遭到攻击后，因防火墙不保留数据包内容的日
iptables 联动方式增强其安全性。
Snort与iptables联动
品而言，就需要人为制定相应策略。
设备一般会主动丢弃这种碎片，入侵检测设备也会发出碎片攻击的报警。但对早期的安全产
（碎片最小8B），而每个碎片中都没有足够的信息，从而能逃过检测。但是，现在的包过滤
弃被监视系统接受的数据，就可能遗漏攻击数据流量。极小碎片攻击的每个碎片只有8B
检测此类攻击。
小于60秒，就会漏掉某些攻击。因此，需要配置没有遗漏，现在的网络入侵检测系统能够
后丢弃不完整的碎片流（从收到第一个碎片开始计时）。如果入侵检测系统保存碎片的时间
时这种攻击依赖于入侵检测系统在丢弃碎片之前会保存多少时间。大多数系统会在60秒之
防范策略
他还应该大量查询安全审计日志找出确凿证据，并保存好。（
控，那么当出现这种故障时就能及时报警，提示管理员进一步处理。
问题解答
当我们对IDS主机发起端口扫描和发送大量65500bit大小的PING包时，在/var/log/
如果IDS接收被监视的主机丢弃的碎片流，就会被攻击者插入垃圾数据；如果IDS丢
iptables 防火墙只允许符合系统设定策略（IP地址，端口）的数据包通过。但这种方法
利用 iptables 防火墙功能可以防御针对 Snort 的 DoS 攻击，所以我们使用 Snort
1．其实小许的处理措施都是非常得当的，如果能提前部署使用OSSIM 系统对全网监
2.他对每一台服务器进行分析、测试对比配置，以确定没有被安装木马后门（rootkit)，
Prohibited [**]
[**] [1:486:5] ICMPDestination Unreachable Communication withDestinationHost isAdministratively
192.168.1.114:4912->192.168.1.188:7
**ORIGINALDATAGRAMDUMP:
Type:3Code:10DESTINATIONUNREACHABLE:ADMINISTRATIVELYPROHIBITEDHOSTFILTERED
ICMPTTL:255TOS:0xC0ID:44663IpLen:20DgmLen:88
01/14-16:37:25.616694192.168.1.188->192.168.1.114
[Classification:Misc activity][Priority:3]
rone
第10章Snort系统部署及应用案例289
明
PA
---
## Page 313
只检查ACL条目中的三层部分（协议号、源、目的）。
它们都将按正常的 ACL 进行控制。如果是分片数据包的后续分片（noninial fragment），则
（如果是未分片数据包（nonfragmented）或者分片数据包的第一个分片（initialfragment）
界路由器上利用扩展ACL即可对IP碎片攻击进行控制，命令如下：
式，而且碎片重组超时时间分别为 60s 和 30s，那么可以编写如下的 frag3配置：
192.168.120.0/24和192.168.2.0/24中的Windows客户机和Linux服务器采用重叠碎片重组方
片处理方式，消除上述两种IP碎片，逃避攻击。比如说NIDS 负责保护两个子网
件输入被保护目标碎片重组的相关信息，就可以使Snort和被保护目标服务器具有相同的碎
IP 碎片攻击的预防措施
290UNIX/Linux网络日志分析与流量监控
000
前面讨论了 IP 碎片攻击通过恶意操作，发送极小的分片来绕过包过滤系统。其实在边
2.调整防火墙ACL防止IP碎片攻击
fag3是 Snort 进行碎片处理的预处理程序，基于目标的 IP 分片重组，通过在其配置文
1.配置Snort抵御IP碎片攻击
a
Prohibited [**]
全
access-list 101permit/denyfragment
国
timeout30\
bind_to 192.168.2.0/24
preprocessor: