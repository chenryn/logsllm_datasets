一周是第一个包含星期一的周
一周是第一个多于3天的周
一周是第一个多于3天的周
→2012-08-2620:48:23
→'20:00:18
→2012-08-26
20:00:18.465
1196488800
1196488800
1328381580
，自MySQL5.6.4开始，可以
。在MySQL5.6.4之前，
含义
调
---
## Page 615
是1、3、5、5、7、9、9和NULL。
子句的情况）后得到的各个子集进行统计。具体请参考1.4.9.9节。
查询结果集进行统计，也可以对查询结果按某种规则进行分组（比如查询语句里使用了GROUP BY
中的非NULL值统计出来的，只有COUNT（*）函数例外，它将统计所有的行。汇总函数既可以对整个
C.2.6
本节的示例要用到一个下面这样的mytbl表：它有一个整数列mycol，各行在这个列的值依次
汇总（或“聚集”）函数的返回值是根据一组值计算出来的一个结果。这个结果是根据查询结果
mysql> SELECT mycol FROM mytbl;
 YEARWEEK( date[, mode]
YEAR(date)
mycol
WEEKOFYEAR(date)
WEEKDAY(date)
YEARWEEK('2008-01-01*)
WEEK('2008-01-01')
对于一年里的第一周或最后一周，结果里的年可能与参数里的年不相同。
汇总函数
YEARWEEK('2006-01-01',1)
YEARWEEK('2006-01-01',0)
YEARWEEK('2006-01-01')
果还给出了mode参数，其含义与wEEK（）函数里的相同。
返回一个CCYYMM格式的整数值以表明由date参数所给定的日期落在该年的第几周里。
YEAR(19741201)
YEAR(*1974-12-01')
返回日期值date所包含的年份。
此函数等同于WEEK（date,3）。
WEEKDAY('2002-12-00')
WEEKDAY('2002-12-16
DAYNAME('2002-12-08')
WEEKDAY(2002-12-08)
函数。
NULL。返回值的取值范围是0(对应于星期一)到6(对应于星期日）。另请参考DAYOFWEEK（）
返回一个整数值以表明由date参数所给定的日期是星期几；
DAYNAME('2006-01-01
DAYNAME('2005-01-01*)
WEEK(*2005-01-01')
日（星期日或星期一，视mode参数值而定）。
如果wEEK（）函数的返回值是0，则表明date参数所给出的日期早于该年的第一个星期起始
WEEK(*2003-12-08′,1)
WEEK('2003-12-08
WEEK(*2003-12-08')
如果mode参数值缺失，则此函数会使用系统变量default_week_format。
↑
↑
工
↑
200752
200552
200601
200601
1974
1974
NULL
'Monday
'Sunday
'Sunday
0
'Saturday'
0
6
6
如果无法确定，则返回
C.2
函数
595
---
## Page 616
596
 GROUP_CONCAT([DISTINCT]val_1ist[ORDER BY...][SEPARATOR Str])
cOUNT(expr)
口
 BIT_OR(expr)
AVG([DISTINCT]
此函数把字符串列表val_list中的所有非 NULL 值连接在一起并返回其结果。如果
的各不相同组合的总数。
如果给出了多个表达式，则COUNT（DISTINCT)的返回值是全体表达式非NULL值计算结果
SELECT COUNT(DISTINCT MOD(mycol,3））FROMmytb1
SELECT COUNT(DISTINCT mycol）FROM mytb1
使用DISTINCT，COUNT（）可以统计各种不同非NULL值的个数。
SELECT COUNT(*)FROMmytbl AS m1 INNER JOIN mytb1 AS m2
里的总行数。如果FROM子句指定了多个表，COUNT（*）将返回各表的总行数的乘积。
对于MyISAM表，不带WHERE子句的COUNT（*）将被优化成直接返回FROM子句所指定的表
回0。COUNT（*）将返回查询结果集里全体行（不管它们是不是NULL值）的个数。
有一个表达式参数时，返回查询结果集里的非NULL值的个数；如果没有非NULL值，则返
COUNT(DISTINCT eXpr1,expr2,...)
COUNT（*）
SELECT BIT_XOR(mycol)FROM mytbl
返回表达式expr计算结果的按位异或操作结果，涉及查询结果集里的全体非NULL值；如
BIT_XOR(expr)
SELECT COUNT(mycol）FROM mytbl
果没有非NULL值，则返回0。
SELECT BIT_OR(mycol) FROM mytbl
没有非NULL值，则返回0。
返回表达式expr计算结果的按位或操作结果，
SELECT BIT_AND(mycol) FROM mytbl
没有非NULL值，则返回~0。
返回表达式expr计算结果的按位与操作结果，涉及查询结果集里的全体非 NULL 值；如果
BIT_AND(expr)
DISTINCT子句可以让AVG（）返回各个expr值的平均值。
SELECT AVG(myco1*2）FROMmytbl
SELECT
SELECT AVG(mycol)FROM mytbl
NULL值，则返回NULL。
返回表达式expr计算结果的平均值，涉及查询结果集里的全体非 NULL值；如果没有非
NULL
附录C操作符与函数参考
66
T AVG（mycol）*2FROMmytb1
expr)
，涉及查询结果集里的全体非NULL值；如果
一3
+
5
11.1429
11.1429
5.5714
---
## Page 617
 STD(expr)
MIN([DISTINCT]
 MAX([DISTINCT]eXpr)
偏差；如果没有非NULL值，则返回NULL。
根据表达式expr 对被选中的行里的所有非 NULL 值进行计算，并返回计算结果的总体标准
STDDEV_POP(expr)
STDDEV(expr)
返回结果）
DISTINCT关键字将导致MIN（）函数在筛选最小值时剔除重复的expr值（这并不会改变
SELECT MIN(mycol)FROM mytbl
将返回词法意义上或时态意义上的最小值。
值。如果没有非NULL值，则返回NULL。MIN（）函数还可以用于字符串值或时态值，此时它
根据表达式expr对被选中的行里的所有非 NULL值进行计算，并返回计算结果中的最小
回结果）。
DISTINCT关键字将导致MAX（）函数在筛选最大值时剔除重复的expr值（这并不会改变返
SELECT MAX（mycol) FROM mytbl
将返回词法意义上或时态意义上的最大值。
值；如果没有非NULL值，则返回NULL。MAX（）函数还可以用于字符串值或时态值，此时它
根据表达式éxpr 对被选中的行里的所有非 NULL 值进行计算，并返回计算结果中的最大
更改这个变量，可以获得更长的连接结果。
GROUP_coNCAT（）函数返回值的最大长度受限于系统变量 group_concat_max_len。通过
mySql> SELECT GROUP_CONCAT(DISTINCT name ORDER BY name)FROM t;
mySql> SELECT GROUP_CONCAT(name ORDER BY name DESC) FROM t;
mySql> SELECT GROUP_CONCAT(name SEPARATOR':) FROM t;
mysql> INSERT
mysql> CREATE TABLE t (name CHAR(10));
况下，此函数不剔除重复值、不对结果排序，也不使用逗号分隔值。
符串，ORDER BY用于对结果进行排序，SEPARATOR 用于指定字符串之间的分隔符。默认情
cat,dog,rat
rat,rat,dog,dog,cat
GROUP_CONCAT(name ORDER BY name DESC)
GROUP_CONCAT(name SEPARATOR
val_list列表中没有非NULL值，则返回 NULL。其中，DISTINCT 用于剔除重复出现的字
GROUP_CONCAT(DISTINCT name ORDER BY name)
dog:cat:rat:dog:rat
dog,cat,rat,dog,rat
GROUP_CONCAT(name)
INTo tvALUEs（dog'）,(cat'),（rat'）,（dog'）,(rat'）;
expr)
→1
C.2函数
597
---
## Page 618
MySQL5.5.3之前（对于SHA2（），则是在MySQL5.5.6之前），返回二进制串。
函数包括：MD5（）、OLD_PASSWORD（）、PASSWORD（）、SHA（）、SHA1（)和 SHA2（）。这些函数在
如字符集转换或尾部空格截断。
据类型（如VARBINARY 或某种BLOB类型）的列。这样可以防止出现二进制串类型可能有的问题，
个密钥来进行解密；否则，解密结果将毫无价值。
个字符串来充当密钥或密码。要想在解密后得到原先的数据，就必须使用在加密它们时使用的同一
成对出现的，其中一个用来进行加密，另一个则用来解密。这些成对出现的函数通常都要使用同一
C.2.7
598
当使用会返回二进制串的加密函数时，如果想要将结果保存在数据库里，可以使用二进制串数
某些加密函数返回的是ASCII字符串，并且该返回值是一个连接字符集里的非二进制串。这些
这些函数用来完成各种与安全有关的操作，如字符串的加密或压缩。在这类函数中，有一些是
 COMPRESS (str)
 AES_ENCRYPT( str, key_str)
 AES_DECRYPT( str, key_str)
 VAR_SAMP(expr)
VARIANCE(eXpr)
 SUM([DISTINCT]expr)
 STDDEV_SAMP(expr)
密为原先的字符串。
有NULL值，则返回NULL。本函数的加密结果可以用AES_DECRYPT（）函数和同一个密钥解
采用高级加密标准（Advanced Encryption Standard，AES）以密钥字符串key_str对字符串
AES_DECRYPT(AES_ENCRYPT('seCret','sCramble'),'scramble')
对于已加密的通过调用AES_ENCRYPT（）获得的字符串 str，使用密钥字符串key_str进行
str进行加密，它使用的密钥长度是128位。返回的结果为一个二进制串；如果输入参数中
解密，返回结果字符串。如果其中一个参数为 NULL，则返回 NULL。
SELECT VAR_SAMP(mycol) FROM mytbl
差；如果没有非NULL值，则返回NULL。
根据表达式expr对被选中的行里的所有非 NULL值进行计算，并返回计算结果的样本方
SELECT VAR_POP(mycol) FROM mytbl
差；如果没有非NULL值，则返回NULL。
根据表达式expr 对被选中的行里的所有非NULL值进行计算，并返回计算结果的总体方
VAR_POP(expr)
DISTINCT关键字将导致 SUM（）函数在计算累加值时剔除重复的expr 值。
SELECT SUM(mycol) FROM mytbl
如果没有非NULL值，则返回NULL。
根据表达式exor 对被选中的行里的所有非 NULL 值进行计算，并返回计算结果的累加值；
SELECT STDDEV_SAMP(mycol)FROMmytbl
偏差：如果没有非NULL值，则返回NULL。
根据表达式expr 对被选中的行里的所有非 NULL 值进行计算，并返回计算结果的样本标准
SELECT STDDEV_POP(mycol) FROM mytb1
安全函数和压缩函数
附录C操作符与函数参考
→8.9524
→7.6735
→39
→2.9921
→2.7701
'secret'
---
## Page 619
口
 DES_ENCRYPT(str[,(key_num| key_str}])
 DES_DECRYPT(str[, key_str]
 DEcoDE(str,key_str)
用密钥字符串 key_str 对字符串 str 进行加密，返回一个二进制串的加密结果。本函数的
ENCODE(str,key_str)
密自己的信息，但只有那些有足够权限的用户才能对其解密。）
限才能使用来自DES密钥文件里的密钥。（任何人都可以使用DES 密钥文件里的密钥去加
与 DES_DECRYPT（）函数不同的是，DES_ENCRYPT（）函数并不要求用户必须拥有 SUPER权
出现。
每个key_num都是一个 0~9的数字，而key_str则是与之对应的加密密钥。key_num
key_numkey_str
式如下所示：
密钥文件由服务器启动时使用的--des-key-file选项指定。密钥在密钥文件里的存放格
对于使用密钥编号的加密操作，服务器会读取DES 密钥文件，查找相应的密钥字符串。该
结果字符串第一个字节的值就应该是255（即128+127）。