# Client-Controlled Cloud Encryption
**Author:** Florian Kerschbaum  
**Affiliation:** SAP, Karlsruhe, Germany  
**Email:** [EMAIL]

## Abstract
Cloud service customers demand control over their data due to various threats, including intellectual property risks, legal requirements, and data protection compliance. A common solution is to encrypt the data on the client side and retain the encryption key at the client. This tutorial will review:

- Available encryption methods, such as deterministic [2], order-preserving [1, 3, 4, 13], homomorphic [7, 11], searchable (functional) encryption [14, 5], and secure multi-party computation [15].
- Potential attacks on currently deployed systems, such as dictionary and frequency attacks.
- Architectures for integrating these solutions into SaaS and PaaS (DBaaS) applications.

Each encryption method offers a trade-off between security, performance, cost, and functionality. Market solutions often provide low security but high performance at minimal implementation cost. Research projects, on the other hand, offer better security but at a higher cost, often in terms of implementation and deployment effort. For example, fully homomorphic encryption is highly secure but extremely inefficient and does not support data sharing.

Understanding these trade-offs and implications is crucial for designing systems that effectively utilize encryption. By combining technologies intelligently, it is possible to create systems with breakthrough functionality or security. This tutorial will examine current market options and explore design choices suggested by the security research community.

### Permissions
Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage, and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). Copyright is held by the author/owner(s).

**Conference:** CCS'14, November 3–7, 2014, Scottsdale, Arizona, USA.  
**DOI:** http://dx.doi.org/10.1145/2660267.2660577

## Introduction
The most commonly deployed encryption schemes are deterministic, but they are vulnerable to simple attacks, such as dictionary and frequency attacks. Additionally, key management can be challenging, as re-keying in case of a compromise is difficult, and users often share a single key rather than having individual keys. Extended schemes like adjustable encryption (e.g., CryptDB) and searchable encryption (e.g., IARPA SPAR program) offer better security but require significant modifications to the database, necessitating different architectures for integration into existing systems.

When deploying these solutions, the integration should be as transparent as possible to minimize costs. Secure multi-party computation, as investigated in the European project PRAC-TICE, involves multiple languages, compilers, and frameworks, but requires distributing trust among a set of cloud service providers.

This tutorial will provide an overview of the encryption schemes, their functions, security models, and performance characteristics. It will compare the architectures for deploying and integrating these schemes and their implications on existing applications. The material will focus on system aspects, such as defining the right interfaces and addressing potential attacks, rather than cryptographic details. We will briefly discuss possible applications, such as benchmarking [8, 9] or supply chain management [6, 10, 12].

The tutorial is aimed at researchers and practitioners who want to gain an understanding of client-controlled cloud encryption approaches. It will compare different technologies and highlight open problems often overlooked in research projects, providing opportunities for researchers to discover new challenges and for practitioners to make informed decisions.

### Prerequisites
Prerequisites for the tutorial include fundamentals in computer security and software architecture. Specific knowledge about cryptography is helpful but not necessary.

## Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection—Cryptographic Controls

## Keywords
Tutorial, Encryption, Cloud

## References
[1] Rakesh Agrawal, Jerry Kiernan, Ramakrishnan Srikant, and Yirong Xu. Order preserving encryption for numeric data. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2004.

[2] Mihir Bellare, Alexandra Boldyreva, and Adam O’Neill. Deterministic and efficiently searchable encryption. In Advances in Cryptology, CRYPTO, 2007.

[3] Alexandra Boldyreva, Nathan Chenette, Younho Lee, and Adam O’Neill. Order-preserving symmetric encryption. In Proceedings of the 28th International Conference on Advances in Cryptology, EUROCRYPT, 2009.

[4] Alexandra Boldyreva, Nathan Chenette, and Adam O’Neill. Order-preserving encryption revisited: improved security analysis and alternative solutions. In Proceedings of the 31st International Conference on Advances in Cryptology, CRYPTO, 2011.

[5] Reza Curtmola, Juan Garay, Seny Kamara, and Rafail Ostrovsky. Searchable symmetric encryption: improved definitions and efficient constructions. Journal of Computer Security, 19(5), 2011.

[6] Jannik Dreier and Florian Kerschbaum. Practical privacy-preserving multiparty linear programming based on problem transformation. In Proceedings of the 3rd IEEE International Conference on Privacy, Security, Risk and Trust, PASSAT, 2011.

[7] Craig Gentry. Fully homomorphic encryption using ideal lattices. In Proceedings of the Symposium on Theory of Computing, STOC, 2009.

[8] Marek Jawurek and Florian Kerschbaum. Fault-tolerant privacy-preserving statistics. In Proceedings of the 12th International Symposium on Privacy Enhancing Technologies, PETS, 2012.

[9] Florian Kerschbaum. Building a privacy-preserving benchmarking enterprise system. Enterprise IS, 2(4):421–441, 2008.

[10] Florian Kerschbaum, Axel Schröpfer, Antonio Zilli, Richard Pibernik, Octavian Catrina, Sebastiaan de Hoogh, Berry Schoenmakers, Stelvio Cimato, and Ernesto Damiani. Secure collaborative supply-chain management. IEEE Computer, 44(9):38–43, 2011.

[11] Pascal Paillier. Public-key cryptosystems based on composite degree residuosity classes. In Proceedings of the 18th International Conference on Advances in Cryptology, EUROCRYPT, 1999.

[12] Richard Pibernik, Yingying Zhang, Florian Kerschbaum, and Axel Schröpfer. Secure collaborative supply chain planning and inverse optimization - the jels model. European Journal of Operational Research, 208(1):75–85, 2011.

[13] Raluca Ada Popa, Frank H. Li, and Nickolai Zeldovich. An ideal-security protocol for order-preserving encoding. In 34th IEEE Symposium on Security and Privacy, S&P, 2013.

[14] Dawn Xiaodong Song, David Wagner, and Adrian Perrig. Practical techniques for searches on encrypted data. In Proceedings of the 21st IEEE Symposium on Security and Privacy, S&P, 2000.

[15] Andrew Chi-Chih Yao. Protocols for secure computations (extended abstract). In FOCS, pages 160–164. IEEE Computer Society, 1982.