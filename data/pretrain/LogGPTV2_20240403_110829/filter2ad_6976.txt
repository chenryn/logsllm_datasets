title:Client-Controlled Cloud Encryption
author:Florian Kerschbaum
Client-Controlled Cloud Encryption
Florian Kerschbaum
SAP, Karlsruhe
Germany
ﬂPI:EMAIL
ABSTRACT
Customers of cloud service demand control over their data.
Next to threats to intellectual property, legal requirements
and risks, such as data protection compliance or the possi-
bility of a subpoena of the cloud service provider, also pose
restrictions. A commonly proposed and implemented solu-
tion is to encrypt the data on the client and retain the key
at the client. In this tutorial we will review
• the available encryption methods, such deterministic [2],
order-preserving [1, 3, 4, 13], homomorphic [7, 11],
searchable (functional) encryption [14, 5] and secure
multi-party computation [15],
• possible attacks on currently deployed systems like dic-
tionary and frequency attacks,
• architectures integrating these solutions into SaaS and
PaaS (DBaaS) applications.
Each possible solution oﬀers a trade-oﬀ between security,
performance or cost and functionality. Solutions existing
in the market provide rather low security, but high perfor-
mance at little implementation cost. There exist a number
of research projects that provide much better security, but
also at a higher cost – often realized in the eﬀort to imple-
ment and deploy the solution in existing landscapes. Con-
sider fully homomorphic encryption: it is highly secure, but
extremely ineﬃcient. Furthermore it does not support data
sharing.
It is important to understand the trade-oﬀs and impli-
cations provided by the diﬀerent encryption schemes in or-
der to be able to design systems that make the best use of
them. When combining technologies cleverly interesting sys-
tems design can arise that can provide even break-through
functionality or security. We will look at current options
available on the market, but more importantly explore de-
sign choices currently foreshadowed by the security research
community.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage, and that copies bear this notice and the full ci-
tation on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the owner/author(s). Copyright is held by the
author/owner(s).
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
ACM 978-1-4503-2957-6/14/11.
http://dx.doi.org/10.1145/2660267.2660577.
The most commonly deployed encryption schemes are de-
terministic, but they are susceptible to simple attacks, such
as a dictionary – a chosen plaintext – attack or a frequency
– a ciphertext only – attack. Furthermore, when deploying
these schemes operational issues arise in key management.
Neither is it easily possible to re-key in case of a compro-
mise nor has each user its individual key, but one key is
shared. Extended schemes such as adjustable encryption as
used in e.g. CryptDB or searchable encryption as developed
in the IARPA SPAR program oﬀer better security, but also
require slight to signiﬁcant modiﬁcations of the database.
Hence, these solutions require diﬀerent architectures when
deploying them in existing landscapes and applications.
When deploying these solutions the integration should be
as transparent as possible. The less an application needs
to change, the cheaper is integration. In secure multi-party
computation as investigated by the European project PRAC-
TICE a number of languages, compilers and frameworks ex-
ist. Nevertheless, secure computation requires the trust to
be distributed among a set of cloud service providers.
This tutorial will give an overview of the encryption schemes,
their functions, security models and approximate perfor-
mance characteristics. It will then compare the architectures
that exist for deploying and integrating these encryption
schemes and their implications on the existing applications.
The material will be technical, but not at the cryptographic
details. Rather we will look at system aspects of deﬁning the
right interfaces and look at possible attacks. We will brieﬂy
discuss possible applications, such as benchmarking [8, 9] or
supply chain management [6, 10, 12].
The tutorial is aimed at researchers – and maybe practi-
tioners – wanting to get an overview of approaches to client-
controlled cloud encryption.
It will compare the diﬀerent
technologies and highlight the open problems often over-
looked in research projects. It hence provides the opportu-
nity to researchers to discover new problems and to practi-
tioners make better informed decisions.
Prerequisites for the tutorial are fundamentals in com-
puter security and software architecture. Speciﬁc knowledge
about cryptography is helpful, but not necessary.
Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection—
Cryptographic Controls
Keywords
Tutorial; Encryption; Cloud
15421. REFERENCES
[1] Rakesh Agrawal, Jerry Kiernan, Ramakrishnan
Srikant, and Yirong Xu. Order preserving encryption
for numeric data. In Proceedings of the ACM
International Conference on Management of Data,
SIGMOD, 2004.
[2] Mihir Bellare, Alexandra Boldyreva, and Adam
O’Neill. Deterministic and eﬃciently searchable
encryption. In Advances in Cryptology, CRYPTO,
2007.
[3] Alexandra Boldyreva, Nathan Chenette, Younho Lee,
and Adam O’Neill. Order-preserving symmetric
encryption. In Proceedings of the 28th International
Conference on Advances in Cryptology,
EUROCRYPT, 2009.
[4] Alexandra Boldyreva, Nathan Chenette, and Adam
O’Neill. Order-preserving encryption revisited:
improved security analysis and alternative solutions.
In Proceedings of the 31st International Conference on
Advances in Cryptology, CRYPTO, 2011.
[5] Reza Curtmola, Juan Garay, Seny Kamara, and Rafail
Ostrovsky. Searchable symmetric encryption:
improved deﬁnitions and eﬃcient constructions.
Journal of Computer Security, 19(5), 2011.
[6] Jannik Dreier and Florian Kerschbaum. Practical
privacy-preserving multiparty linear programming
based on problem transformation. In Proceedings of
the 3rd IEEE International Conference on Privacy,
Security, Risk and Trust, PASSAT, 2011.
[7] Craig Gentry. Fully homomorphic encryption using
ideal lattices. In Proceedings of the Symposium on
Theory of Computing, STOC, 2009.
[8] Marek Jawurek and Florian Kerschbaum.
Fault-tolerant privacy-preserving statistics. In
Proceedings of the 12th International Symposium on
Privacy Enhancing Technologies, PETS, 2012.
[9] Florian Kerschbaum. Building a privacy-preserving
benchmarking enterprise system. Enterprise IS,
2(4):421–441, 2008.
[10] Florian Kerschbaum, Axel Schr¨opfer, Antonio Zilli,
Richard Pibernik, Octavian Catrina, Sebastiaan
de Hoogh, Berry Schoenmakers, Stelvio Cimato, and
Ernesto Damiani. Secure collaborative supply-chain
management. IEEE Computer, 44(9):38–43, 2011.
[11] Pascal Paillier. Public-key cryptosystems based on
composite degree residuosity classes. In Proceedings of
the 18th International Conference on Advances in
Cryptology, EUROCRYPT, 1999.
[12] Richard Pibernik, Yingying Zhang, Florian
Kerschbaum, and Axel Schr¨opfer. Secure collaborative
supply chain planning and inverse optimization - the
jels model. European Journal of Operational Research,
208(1):75–85, 2011.
[13] Raluca Ada Popa, Frank H. Li, and Nickolai
Zeldovich. An ideal-security protocol for
order-preserving encoding. In 34th IEEE Symposium
on Security and Privacy, S&P, 2013.
[14] Dawn Xiaodong Song, David Wagner, and Adrian
Perrig. Practical techniques for searches on encrypted
data. In Proceedings of the 21st IEEE Symposium on
Security and Privacy, S&P, 2000.
[15] Andrew Chi-Chih Yao. Protocols for secure
computations (extended abstract). In FOCS, pages
160–164. IEEE Computer Society, 1982.
1543