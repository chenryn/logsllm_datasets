    D:\code\msys64\home\Tony\julia\test>..\usr\bin\julia -e "versioninfo()"
    Julia Version 0.3.0-prerelease+2898
    Commit f2b3192* (2014-05-05 18:19 UTC)
    Platform Info:
      System: Windows (x86_64-w64-mingw32)
      CPU: Intel(R) Core(TM) i7-2630QM CPU @ 2.00GHz
      WORD_SIZE: 64
      BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY)
      LAPACK: libopenblas
      LIBM: libopenlibm
    blas_num_threads=8
    D:\code\msys64\home\Tony\julia\test>..\usr\bin\julia runtests.jl linalg2
         * linalg2
    LLVM ERROR: Program used external function 'ldexpf' which could not be resolved!
    Stack dump:
    0.      Running pass 'X86 Machine Code Emitter' on function '@julia_givensAlgori
    thm19933'
    blas_num_threads=8
According to bisect,
    f2b3192eb2e59dd34e1e2838036a13167410814f is the first bad commit
    commit f2b3192eb2e59dd34e1e2838036a13167410814f
    Author: Jeff Bezanson 
    Date:   Mon May 5 14:19:23 2014 -0400
        use pow, powf instead of powi. fixes #6506
        LLVM seems to be able to optimize small constant powers here too.
        the pow intrinsic had the same bug as powi.
Did working around one LLVM bug here expose another?