8We use a lower transaction fee rate of 15 Satoshi/byte (see
Table IV) for Tpuzzle and Tsolve because we are in less of hurry to
have them conÔ¨Årmed. SpeciÔ¨Åcally, if A refuses to sign Tcash(A,T ),
then T ends the Payment Phase with A early (even before the Cash-
Out Phase begins), and immediately posts Tpuzzle and then Tsolve to
the blockchain. See Section V-C.
TABLE II.
AVERAGE PERFORMANCE OF RSA-PUZZLE-SOLVER AND CLASSIC TUMBLER, IN SECONDS. (100 TRIALS).
RSA-puzzle-solving protocol
Classic Tumbler (in clear)
Classic Tumbler (B over Tor)
Classic Tumbler (Both over Tor)
Compute
Time
0.398
0.614
0.614
0.614
Running Time
(Boston-New York)
0.846
1.190
3.10
6.84
RTT
(Boston-New York)
0.007949
0.008036
0.0875
0.0875
Running Time
(Boston-Tokyo)
4.18
5.99
8.37
10.8
RTT
(Boston-Tokyo)
0.186
0.187
0.273
0.273
Bandwidth
269 KB
326 KB
342 KB
384 KB
TABLE III.
AVERAGE OFF-BLOCKCHAIN RUNNING TIMES OF
TUMBLEBIT‚ÄôS PHASES, IN SECONDS. (100 TRIALS)
Compute
Time
0.2052
0.3878
0.0046
Running Time
(Boston-New York-Toronto)
0.3303
1.1352
0.0069
Running Time
(Boston-Frankfurt-Tokyo)
1.5503
4.3455
0.0068
Escrow
Payment
Cash-Out
TABLE IV.
TRANSACTION SIZES AND FEES IN OUR TESTS.
Transaction
Tescr
Tcash
Trefund for Tescr
Tpuzzle
Tsolve
Trefund for Tpuzzle
Size
190B
447B
373B
447B
907B
651B
Satoshi/byte
30
30
30
15
15
20
Fee (in BTC)
0.000057
0.000134
0.000111
0.000067
0.000136
0.000130
This test completed in 23 blocks in total, with Escrow
Phase completing in 16 blocks, Payment Phase taking
1 block, and Cash-Out Phase completing in 6 blocks.
We note, however, that our protocol could also have
completed much faster, e.g., with 1 block for the Escrow
Phase, and 1 block for the Cash Out Phase. A Bitcoin
block can typically hold ‚âà 5260 of our 2-of-2 escrow
transactions Tescr and ‚âà 2440 of our cash-out transac-
tion Tcash. We could increase transaction fees to make
sure that our Escrow Phase and Cash-Out phase (each
conÔ¨Årming 2√ó800 transactions) occur within one block.
In our tests, we used fairly conservative transaction
fees (Table IV). As a classic Tumbler, we therefore
expect TumbleBit to have a higher denomination than
the 0.0000769 BTC we used for our test. For instance,
transaction fees of 60 Satoshi per Byte (0.0007644
BTC/user) are ‚âà 1/1000 of a denomination of 0.5 BTC.
Test with uncooperative behavior. Our second run of
only 10 users (5 payers and 5 payees) demonstrates
how fair exchange is enforced in the face of uncooper-
ative or malicious parties. Transactions Tescr(A,T ) and
Tpuzzle were timelocked for 10 blocks and Tescr(T ,B)
was timelocked for 15 blocks. All escrow transactions
Tescr(A,T ) are funded by TXID and all escrow trans-
actions Tescr(T ,B) are funded by TXID. Two payer-
payee pairs completed the protocol successfully. For the
remaining three pairs, some party aborted the protocol:
Case 1: The Tumbler T (or, equivalently, Alice A1)
refused to cooperate after the Escrow Phase. Alice A1
reclaims her bitcoins from escrow transaction Tescr(A,T )
via a refund transaction after the timelock expires.
The Tumbler T reclaims its bitcoins from his payment
channel with Bob B1 escrow transaction Tescr(T ,B) via
a refund transaction after the timelock expires.
Case 2: The Tumbler aborts the puzzle-solver protocol
by posting the transaction Tpuzzle but refusing to provide
the transaction Tsolve. No payment completes from A2
to B2. Instead, A2 reclaims her bitcoin from Tpuzzle via
Fig. 5. Timeline of test with uncooperative behavior, showing block
height when each transaction was conÔ¨Årmed.
a refund transaction after the timelock in Tpuzzle expires.
Tumbler reclaims its bitcoins from its payment channel
with Bob B2 via a refund transaction after the timelock
on the escrow transaction Tescr(T ,B) expires.
Case 3: The Tumbler provides Alice A3 the solution
to her puzzle in the puzzle-solver protocol, and the
Tumbler has an Tpuzzle signed by A (Section V-C).
However, Alice refuses to sign the cash-out transaction
Tcash(A,T ) to pay out from her escrow with the Tumbler.
Then, the Tumbler signs and posts the transaction Tpuzzle
and its fulÔ¨Ålling transaction Tsolve and claims its bitcoin.
Payment from A3 to B3 completes but the Tumbler has
to pay more in transaction fees. This is because the
Tumbler has to post both transactions Tpuzzle and Tsolve,
rather than just Tcash(A,T ); see Table IV.
Remark: Anonymity when parties are uncooperative.
Notice that in Case 1 and Case 2, the protocol aborted
without completing payment from Alice to Bob. k-
anonymity for this TumbleBit run was therefore k = 3.
By aborting, the Tumbler T learns that payers A1,A2
were trying to pay payees B1,B2. However, anonymity
of A1,A2, B1, B2 remains unharmed, since B1 and
B2 were using ephemeral Bitcoin addresses they now
discard to safeguard their anonymity (see Section IV-A).
ACKNOWLEDGEMENTS
We thank Ethan Donowitz for assistance with the
preliminary stages of this project, and Nicolas Dorier,
Adam Ficsor, Gregory Galperin, Omer Paneth, Dimitris
Papadopoulos, Leonid Reyzin, Ann Ming Samborski,
Sophia Yakoubov, the anonymous reviewers and many
members of the Bitcoin community for useful discus-
sions and suggestions. Foteini Baldimtsi and Alessandra
Scafuro performed this work while at Boston University.
This work was supported by NSF grants 1012910,
1414119, and 1350733.
14
425500425502Escrow PhaseTescr(ùìê, ùì£) & Tescr(ùì£, ùìë)425505425507{Case 2 & 3: TpuzzleCase 3: Tsolve425509425511Case 1: Tescr(ùìê, ùì£) RefundCase 2: Tpuzzle Refund  Block Height{{425514{ Case 1 & 2: Tescr(ùì£, ùìë) Refund 425527REFERENCES
[1] Bitcoin Fog. Wikipedia, 2016.
[2] Monero, https://getmonero.org/home. 2016.
[3] Gavin Andresen. BIP-0016: Pay to Script Hash. Bitcoin
Improvement Proposals, 2014.
[4] Marcin Andrychowicz, Stefan Dziembowski, Daniel Mali-
nowski, and Lukasz Mazurek. Secure multiparty computations
on bitcoin. In IEEE S&P, pages 443‚Äì458, 2014.
[5] A Back, G Maxwell, M Corallo, M Friedenbach, and L Dashjr.
Enabling blockchain innovations with pegged sidechains.
Blockstream, https://blockstream.com/sidechains.pdf , 2014.
[6] Wac≈Çaw Banasik, Stefan Dziembowski, and Daniel Malinowski.
EfÔ¨Åcient Zero-Knowledge Contingent Payments in Cryptocur-
rencies Without Scripts. Cryptology ePrint Archive, Report
2016/451, 2016.
[7] Eli Ben Sasson, Alessandro Chiesa, Christina Garman,
Matthew Green, Ian Miers, Eran Tromer, and Madars Virza.
Zerocash: Decentralized anonymous payments from Bitcoin.
In IEEE Security and Privacy (SP), pages 459‚Äì474, 2014.
[8] Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov.
Deanonymisation of Clients in Bitcoin P2P Network. In ACM-
CCS, pages 15‚Äì29, 2014.
[10]
[9] George Bissias, A Pinar Ozisik, Brian N Levine, and Marc
Liberatore. Sybil-resistant mixing for bitcoin. In Workshop on
Privacy in the Electronic Society, pages 149‚Äì158, 2014.
Jeremy Clark, Arvind
Joseph Bonneau, Andrew Miller,
Narayanan, Joshua A Kroll, and Edward W Felten. SoK:
Research Perspectives and Challenges for Bitcoin and Cryp-
tocurrencies. In IEEE - SP, 2015.
Joseph Bonneau, Arvind Narayanan, Andrew Miller, Jeremy
Clark, JoshuaA. Kroll, and EdwardW. Felten. Mixcoin:
Anonymity for bitcoin with accountable mixes.
In Financial
Cryptography and Data Security, 2014.
[11]
[12] David Chaum. Blind signature system. In CRYPTO, 1983.
[13] Christian Decker and Roger Wattenhofer. A fast and scalable
payment network with bitcoin duplex micropayment channels.
In Stabilization, Safety, and Security of Distributed Systems,
pages 3‚Äì18. Springer, 2015.
[14] Amos Fiat and Adi Shamir. How to prove yourself: Practical
solutions to identiÔ¨Åcation and signature problems. In CRYPTO,
1986.
[15] Srivatsava Ranjit Ganta, Shiva Prasad Kasiviswanathan, and
Adam Smith. Composition attacks and auxiliary information
in data privacy. In ACM SIGKDD, pages 265‚Äì273, 2008.
[16] O. Goldreich, S. Micali, and A. Wigderson. How to play any
mental game. In STOC. ACM, 1987.
[17] Grams.
Helixlight: Helix made
simple.
https:
//grams7enuÔ¨Å7jmdl.onion.to/helix/light.
[18] Matthew Green and Ian Miers. Bolt: Anonymous Payment
Channels for Decentralized Currencies. Cryptology ePrint
Archive 2016/701, 2016.
[19] Louis C. Guillou and Jean-Jacques Quisquater. A practical
zero-knowledge protocol Ô¨Åtted to security microprocessor min-
imizing both transmission and memory. In EUROCRYPT, 1988.
[20] Ethan Heilman, Leen Alshenibr, Foteini Baldimtsi, Alessandra
Scafuro, and Sharon Goldberg.
TumbleBit: An Untrusted
Bitcoin-Compatible Anonymous Payment Hub. Cryptology
ePrint Archive 2016/575, 2016.
[21] Ethan Heilman, Foteini Baldimtsi, and Sharon Goldberg.
Blindly Signed Contracts: Anonymous On-Blockchain and Off-
Blockchain Bitcoin Transactions. In Workshop on Bitcoin and
Blockchain Research at Financial Crypto, February 2016.
[22] Chainalysis Inc. Chainalysis: Blockchain analysis, 2016. https:
//www.chainalysis.com/.
[23] Tom Elvis Jedusor. Mimblewimble. 2016.
[24] Ranjit Kumaresan and Iddo Bentov. How to use bitcoin to
incentivize correct computations. In ACM-CCS, 2014.
[25] Ranjit Kumaresan, Tal Moran, and Iddo Bentov. How to use
bitcoin to play decentralized poker. In ACM-CCS, 2015.
[26] Elliptic Enterprises Limited. Elliptic: The global standard for
blockchain intelligence, 2016. https://www.elliptic.co/.
[27] Gregory Maxwell.
Bitcoin Wiki, 2011.
Zero Knowledge Contingent Payment.
[28] Gregory Maxwell. CoinJoin: Bitcoin privacy for the real world.
Bitcoin-talk, 2013.
[29] Gregory Maxwell. CoinSwap: transaction graph disjoint trust-
less trading. Bitcoin-talk, 2013.
[30] Gregory Maxwell. The Ô¨Årst successful Zero-Knowledge Con-
tingent Payment. Bitcoin Core, February 2016.
[31] S Meiklejohn, M Pomarole, G Jordan, K Levchenko,
GM Voelker, S Savage, and D McCoy. A Ô¨Åstful of bitcoins:
Characterizing payments among men with no names. In ACM-
SIGCOMM Internet Measurement Conference, IMC, 2013.
[32] Sarah Meiklejohn and Claudio Orlandi. Privacy-Enhancing
In Lecture Notes in Computer Science,
Overlays in Bitcoin.
volume 8976. Springer Berlin Heidelberg, 2015.
Ian Miers, Christina Garman, Matthew Green, and Aviel D
Rubin. Zerocoin: Anonymous distributed e-cash from bitcoin.
In IEEE Security and Privacy (SP), pages 397‚Äì411, 2013.
[33]
[34] Pedro Moreno-Sanchez, Tim RufÔ¨Ång, and Aniket Kate. P2P
Mixing and Unlinkable P2P Transactions. Draft, June 2016.
[35] Malte M¬®oser and Rainer B¬®ohme.
Join Me on a Market for
Anonymity. Workshop on Privacy in the Electronic Society,
2016.
[36] Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew
Miller, and Steven Goldfeder. Bitcoin and cryptocurrency
technologies. Princeton University Pres, 2016.
[37] Guevara Noubir and Amirali Sanatinia. Honey onions: Expos-
ing snooping tor hsdir relays. In DEF CON 24, 2016.
[38] Henning Pagnia and Felix C. Grtner. On the impossibility of
fair exchange without a trusted third party, 1999.
[39] Morgen Peck. DAO May Be Dead After $60 Million Theft.
IEEE Spectrum, Tech Talk Blog, 17 June 2016.
Joseph Poon and Thaddeus Dryja.
The bitcoin lightning
network: Scalable off-chain instant payments. Technical report,
Technical Report (draft). https://lightning. network, 2015.
[40]
[41] Certicom Research. Sec 2: Recommended elliptic curve domain
parameters, 2010.
[42] Dorit Ron and Adi Shamir. Quantitative analysis of the full
bitcoin transaction graph. In Financial Cryptography and Data
Security, pages 6‚Äì24. Springer, 2013.
[43] Tim RufÔ¨Ång, Pedro Moreno-Sanchez, and Aniket Kate. Coin-
In
shufÔ¨Çe: Practical decentralized coin mixing for bitcoin.
ESORICS, pages 345‚Äì364. Springer, 2014.
Jeff Stone. Evolution Downfall: Insider ‚ÄôExit Scam‚Äô Blamed
For Massive Drug Bazaar‚Äôs Sudden Disappearance.
interna-
tional business times, 2015.
the Internet Archive. Http Archive: Trends, 2015.
//httparchive.org/trends.php.
[44]
[45]
http:
[46] Peter Todd. BIP-0065: OP CHECKLOCKTIMEVERIFY. Bit-
coin Improvement Proposal, 2014.
[47] F. Tschorsch and B. Scheuermann. Bitcoin and Beyond: A
IEEE
Technical Survey on Decentralized Digital Currencies.
Communications Surveys Tutorials, PP(99), 2016.
[48] Luke Valenta and Brendan Rowan. Blindcoin: Blinded, ac-
countable mixes for bitcoin. In FC, 2015.
Jan Henrik Ziegeldorf, Fred Grossmann, Martin Henze, Nicolas
Inden, and Klaus Wehrle. Coinparty: Secure multi-party mixing
of bitcoins. In CODASPY, 2015.
[49]
15