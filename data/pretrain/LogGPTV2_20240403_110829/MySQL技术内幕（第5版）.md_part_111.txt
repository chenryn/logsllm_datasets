socket=/var/mysql/50606/mysql.sock
mysqld=/var/mysql/50606/bin/mysq1d_safe
datadir=/var/mysql/50606/data
basedir=/var/mysql/50606
[mysqld50606]
event_scheduler=ON
general_log
port=50525
mysqld=/var/mysql/50525/bin/mysqld_safe
datadir=/var/mysql/50525/data
[mysqla50525]
skip-innodb
例如：
log-bin=binlog
general_1og_file=qlog
log_error=log.err
user=mysql
basedir=/var/mysql/50525
可以在命令行调用mysqld_multi，同时将命令字 start 和
，它们分别对应于不同类型的日志、存储引擎等。
12.9
运行多个服务器
器
对
467
有
---
## Page 488
的共享内存名分别为MYSQL和mysqlsvc2，使用的数据目录与上一个示例的相同。可以像下面
两种情况里，服务器会读取哪些选项组呢？与之相关的规则请参考12.2.2.2节。）
MySQL 的名字，Windows会使用默认的服务名（即为MySQL)；否则，使用给定的名字。（在这
条命令中的任何一个，把mysqld安装为服务：
方
已的选项文件：
方法是把它创建成C：\mysql\data的一个副本。使用下列命令（在没有服务器运行的情况下）：
第二个服务器实例使用的数据目录位于c:\mysql\data2下。于是，各个选项文件的内容如下所示。
项文件。假设，MySQL安装在c：\mysql里，其数据目录位于c：\mysql\data下，而你想运行的
例如，要想运行处在不同数据目录，但使用相同程序二进制文件的两个服务器，可以创建两个选
个Windows服务。当然也可以将这两种方法混和使用。
12.9.5
468
方，则需要对这条命令里的路径名做出相应的修改。如果没有给出 service_name 参数或者
假设，你想要运行两个mysqld实例，它们使用的服务名分别为MySQL和mysqlsvc2，使用
要想手动启动多个服务器，需要为它们分别创建一个选项文件，用于列出它们各自的参数，
13.1.2.2节。
然后，在命令行启动各个服务器，用--defaults-file选项告知各个服务器读取特定于自
在Windows 里运行多个MySQL服务器的方法有两种：一是手动启动服务器；二是使用多
，如果将密码放在选项文件里，则一定要确保该文件不能被公开地读取！更多相关信息请参
datadir=C:/mysql/data
#默认的（“MySQL”）服务所对应的组
这里的--install命令使用了服务器程序的完整路径名。如果你的服务器安装在其他的地
C:\>
要想把MySQL安装为Windows服务，可以使用--instal1选项。例如，可以使用下面两
C:\>mysqld--defaults-file=C:\my.ini1
C:\>xcopyC:\mysql\dataC:\mysql\data2/E
在启动第二个服务器之前，相应的数据目录必须先存在。建立C：\mysql\data2的最简单
文件C:\my.ini2的内容：
datadir=C:/mysql/data
文件C:\my.ini1的内容：
basedir=C:/mysql
[mysqld]
C:\>
C:\>
port=3307
datadir=C:/mysql/data2
basedir=C:/mysql
port=3306
basedir=C:/mysql
[mysqld]
出于安全的考虑，更好的做法是把密码放在选项文件里，而不是让其暴露在命令行里。
mysqladmin=/usr/local/mysql/bin/mysqladmin
[mysqla]
password=multipass
user=leeloo
第12章MySQL的基本管理
C:\mysql\bin\mysqld--install
mysqld --defaults-file=C:\my.ini2
在Windows里运行多个服务器
这
---
## Page 489
12.10升级MySQL
的命令：
在监听50525端口的服务器，可以运行下面的命令：
到所想要的那个服务器。这里包括使用mysqladmin 来关闭服务器。例如，要想连接到某个正
12.9.6运行多个服务器的客户端
时所使用的那个服务名来删除每条服务。如果服务名为默认值（即MySQL)，就可以将其省略掉：
服务，需要先关闭它们（如果它们正在运行的话），然后通过指定--remove命令和在安装服务器
在每次启动时都使用它。服务器只会从该文件的[mysqld]组里读取各个选项。
的最后一个选项：
改服务器的路径)：
行的服务器。
改写[mysqld]选项组里的所有选项，而所用的值可以只适用于那个以mysqlsvc2服务方式运
[mysqlsvc2]。如果把[mysqlsvc2]选项组放在这个选项文件里的第二部分，就可以利用它来
选项组。但是，以非默认服务名mysqlsvc2 安装的服务器会同时读取两个选项组[mysqld]和
_在Windows 里，要想使用名为 mysqlsvc2 的共享内存方式连接到服务器，可以运行下面
当有多个服务器在运行时，要想使用客户端程序，在指定适当的连接参数之后便可以连接
可以使用命令 mysqladmin shutdown、net stop 或服务管理器来关闭服务器。要想卸载
如此一来，又多出了一种提供服务器相关选项的方式。服务器会记住那个文件名，并且会
C:\> C:\mysql\bin\mysqld --install service_name --defaults-file=file_name
如果你在创建服务时提供了服务名，那么你还可以将--defaults-file选项指定为命令行
要想创建和启动这些服务，可以使用下面这些命令（同样地，请根据你自己的实际情况修
MySQL的开发非常活跃，
%mysql--protocol=tcp--port=50525
C:\>
C:\>mysql--remove
C:\>net start mysqlsvc2
C:\>C:\mysql\bin\mysqld--install
这些选项组的先后顺序非常重要。以默认服务名 MySQL 安装的服务器只会读取[mysqld]
?
shared-memory-base-name=mysqlsvc2
shared-memory
port=3307
datadir=C:/mysql/data2
basedir=C:/mysql
[mysqlsvc2]
#“mysqlsvc2”服务所对应的组
shared-memory-base-name=MYsQL
shared-memory
port=3306
>
mysql--remove mysqlsvc2
C:\mysql\bin\mysqld --install mysqlsvc2
net start MySQL
，会定期进行升级。这便向管理员提出了一个问题：当新版本发行
12.10升级MySQL
469
---
## Page 490
MySQL开发不断向前发展的重要因素。
但是你可以在从服务器运行客户端程序，调用 SELECT语句，弄清它是如何处理它们的。
服
与复制数据库相关的指导请参考14.4节。
接)。更多详细内容请参考12.9节。
时需要保证某些参数的唯一性，如安装位置、数据目录和网络接口（服务器会基于它来监听连
的选择来对它进行配置。如果选择在同一主机上并行运行新服务器和已有服务器，那么在配置
新版本被使用得越充分。这样能提高找出 bug 的可能性，让这些 bug 得到修复。bug 报告是推动
服
器
在测试时，即
表，看看其他人对于该发行版本的情况报告。比如，升级有帮助吗？是否发现了错误或其他问题？
为肯定的，就可以考虑升级。不过，通常还可以等上几天，关注一个MySQL的一般讨论邮件列
与旧的发行版本不兼容，
值得你注意的重要问题，
也可以阅读 MySQL参考手册里与升级有关的部分，了解相关的发行情况。该部分会指明许多
情况的很不错的方法。（另一种方法是，自己查看MySQL的发行说明，了解更新情况。）另外，
mysql.com/。）每个通告都会包括一些最新修改注意项，因此这是一种保持不断获悉新版开发
通知的方法是，订阅 MySQL 的通告邮件列表。（具体的订阅方法，可以访问http：//lists.
大家对新版本进行测试，甚至还可以将它与你的生产数据副本一起使用。试用新版本的人越多，
时，
服务器，从而向测试服务器提供持续的输入流。主服务器不会发送任何检索语句到从服务器，
服务器，而将测试服务器设置为复制从服务器。这样，主服务器执行的那些更新会被发送到从
470
，那么两个服务器之
不管选择哪一种方式，你都可能会想要用现有数据库的数据副本来测试新的服务器。更多
将开发版本用于生产目的（如业务资产管理），并不是一种明智的做法。但是，本书还是鼓励
要想让测试服务器在执行时拥有不间断的语句源，
如果对所有这些问题的回答都是否定的，就没有必要进行升级。如果对其中某个问题的回答
在查看了发行说明和手册里的升级部分之后，你便可以问自己这样几个问题。
当新版本发行时，要做的第一件事情是，确定它与之前版本有何差异。确保获得新版发行
这
是否需要升级已安装的 MySQL。
口
口
口
口
果你仍然不能确定是否需要升级，那么可以独立于当前的服务器来对新服务器进行测试。
程序。例如，在升级MySQL之后，可能需要重新构建那些依赖MySQL的C语言客月
稳定系列中的发行版通常是用于修正错误，而不是为了添加新的功能。一般情况下，
里还有其他几个需要考虑的因素，它们能帮助你做出最终的决定。
系统内存需求会增加。
静态链接方式，而非动态链接，那么出现此问题的可能性就会大大降低。但是，你的
脚本，在升级MySQL之后开始出现内存转储现象时，这便预示着你需要重新构建它
端开发库的其他开发库或应用程序，才能链接到这个新的客户端开发库。（很多示例者
如果升级MySQL，可能还需要升级其他链接了MySQL的C语言客户端开发库的那些
用稳定版本来升级比用开发版本来升级带来的风险会更小。
对于你所使用的那些操作，新版本是否在性能上有所改进？
新版本是否有你想要的或需要的附加功能？
会
]。）如果你不想重新构建，那最好就不要升级MySQL。如果你使用的程序采用的
第12章MySQL的基本管理
会用到Perl的DBD:mysql模块或者PHP语言。当所有与MySQL相关的DBI脚本和PHP
既可以与生产服务器并行运行，也可以将其安装在不同机器上。如果使用不同的机
之间的独立性会更容易维护，因为你会有更大的自由空间，可以根据自
，那么这些信息就会变得尤为重要。
，L
以及升级时必须采取的特殊步骤。如果新的发行版本引入的某些行为
请试用开发版本！
。本节提供的各种指导将有助于你做出选择。
，可以考虑把生产服务器当作一个复制主
是
都
---
## Page 491
未经授权的访问。本章将会频繁使用到用于运行MySQL服务器和执行其他MySQL相关管理任
置，让其支持使用安全套接层（SSL）协议的连接。
对网络进行监视，并捕捉服务器和客户端之间的通信。为解决此问题，可以对MySQL进行设
供有效名字和密码的情况下才能访问服务器管理的那些数据库。另一种危险是，第三方可能会
防止未授权客户端对数据库内容进行访问。应该设置好MySQL的权限表，让客户端只有在提
客户端访问控制策略。
置得过于宽松，那么其他人便可以将所有与权限表相对应的文件替换掉，实施一套完全不同的
客户端，但是这些表的完整性依赖于合理的文件系统保护。如果对数据目录内容的访问权限设
例如，虽然你能确保已经按照权限表正确地设置了MySQL账户，控制了通过网络进行连接的
账户拥有和控制它。如果这一点无法得到保证，那么你在安全方面所做的其他努力也将白费。
他人的攻击。尤其是对于服务器的数据目录，应该只允许用于运行MySQL服务器的那个登录
题，你需要保护MySQL安装的各项内容，让其免遭那些在运行服务器的机器上拥有账户的其
他们有该主机的登录账户。一般情况下，内部安全与文件系统访问权限密切相关。为解决此问
行过程中的一部分被处理的。在本章中，我们将深入查看几个安全性方面的问题。
一个与安全性相关的话题，即为MySQL 账户设置密码的重要性。该话题当时是作为安装和运
安全性与访问控制
外部安全问题主要与源自网络的连接有关。必须保护MySQL服务器免受网络连接的攻击
本章将描述大家都应该认真对待的安全性问题，展示如何防止通过文件系统和网络进行的
内部安全问题主要与其他用户有关，这些用户能直接访问MySQL服务器主机，也就是说
口
口安全性为什么很重要，你必须要提防何种类型的攻击。
MySQL的用户账户。
你所面临的外部安全风险源自于通过网络连接到服务器的客户端，你需要管理好
好文件系统的访问权限。
你所面临的内部安全风险源自于服务器主机上拥有登录账户的其他用户，你需要管理
第
13章
---
## Page 492
怎么才能做到呢？这样做。
能够读到表的文件，那么就能很轻易地窃取这些文件，并让 MySQL 本身向你展示该表的内容。
限，因为他们可能会破坏状态文件或者数据库的表。但是直接读取访问权限同样很危险。如果
目录访问权限的情况。
在未授权的情况下通过网络对数据进行访问。不过，如果服务器主机上的其他用户可以直接访
置这些权限表的内容来允许或拒绝客户端对数据库的访问。这样做能够保障安全，防止客户端
户直接访问MySQL的数据目录。
13.1.1
影响其他用户连接服务器。
但不允许完全控制。例如，用户应该能通过套接字文件连接服务器，但是不能删除它，否则会
PASSWORD 的单词。
动作便可发现这些敏感性信息，例如，在这些日志文件上运行 grep 命令，查找类似 GRANT 或
的
文件相关的一个更为具体的安全问题是，它们可能包含敏感语句（包含有密码）的文本。MySQL
普遍关注的问是
据库的内容公开，而不是让其内容因对数据库目录的保护不力而遭泄露。
性地考虑如何
日志文件和Unix套接字文件。
市
选择将其作为安装之后的配置过程的一部分，由你自己来完成；也可以选择在服务器运行时，
以便其他用户可以运行它们—但对访问能力还是有所限制的，即不能修改或更换它们。
完全控制权，并且没有其他本地用户。