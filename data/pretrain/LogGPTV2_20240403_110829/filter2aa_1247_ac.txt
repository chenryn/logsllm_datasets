Interaction with DOM and Javascript
Crossdomain Access
If hosted on Microsoft Live:
The remotely hosted app can only communicate with the
web page through the key/value pairs passed in initParams
initParams are loaded during execution of the initalization
function, after load they are set to read-only
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Silverlight 2.0
Managed Code
Silverlight version of the .NET framework has been trimmed
down to expose only the functionality that Silverlight
developers deemed necessary:
Collections
LINQ to objects
LINQ to XML
Isolated Storage
Networking
Threading
XML DOM
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Transparency Model
Access to dangerous functions is goverend by the CoreCLR
There is no such thing as code access security (CAS) in
Silverlight
CAS has been replaced by a security model referred to as
the “transparency model”
Although namespaces retain same names, Silverlight code
can only reference libraries shipped with the Silverlight
version of the .NET framework
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Transparency Model
The transparency model breaks up code into three levels with
three security attributes:
1 SecurityTransparentAttribute
2 SecuritySafeCriticalAttribute
3 SecurityCriticalAttribute
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Security Attributes
SecurityTransparentAttribute
Same privelege level as code without a security attribute
deﬁned
Untrusted code that cannot call any functions or access
any ﬁelds that elevate the call stack.
This is the default privlege level of all application code
Can also be platform code
s t a t i c
I s o l a t e d S t o r a g e F i l e () ;
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Security Attributes
SecuritySafeCriticalAttribute
Partial trust code that acts as the gateway between
transparent code and full trust code.
This security attribute was intoduced with Silverlight 2.0
Assemblies containing code marked with
SecuritySafeCritical attribute must be signed with
Microsoft public key.
[ S e c u r i t y S a f e C r i t i c a l ]
p u b l i c
s t a t i c
I s o l a t e d S t o r a g e F i l e
G e t U s e r S t o r e F o r A p p l i c a t i o n () ;
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Security Attributes
SecurityCriticalAttribute
Full trust code that can access OS resources such as
ﬁlesystem
Assemblies containing code marked with
SecuritySafeCritical attribute must be signed with
Microsoft public key.
[ S e c u r i t y C r i t i c a l ]
p r i v a t e
s t a t i c
s t r i n g
FetchOrCreateStore ( s t r i n g
groupName ,
s t r i n g
storeName ,
I s o l a t e d S t o r a g e F i l e
i s f )
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Transparency Model
SecuritySafeCritical code acts as the gatekeeper of the sandbox
The CoreCLR only allows transparent code
(SecurityTransparent or SecuritySafeCritcal) to execute
SecuritySafeCritical code is the only code that can call
SecurityCritical methods
So can’t I make my own custom assemblies and deﬁne the
SecuritySafeCritical attribute?
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
CoreCLR Security Model
Transparency Model
Not if Microsoft can help it:
The CoreCLR prevents us from deﬁning anything in my
custom assemblies as SecuritySafeCritical
When code with the security attribute SecuritySafeCritical
attempts to execute in the CoreCLR:
The loading assembly is verﬁed with a Microsoft key
The path of the loading assembly is checked against the
Silverlight install directory
The CoreCLR eﬀectively ignores any attempts to call
unveriﬁed SecuritySafeCritical code
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with the Operating System
File System
File System
Isolated storage is available to the Silverlight application
through the System.IO.IsolatedStorage namespace
The default storage quota is 1 MB, and data is stored in
the local application settings folder of the user
When local storage is requested by an SL app,
identiﬁcation strings are generated, ids are based on
pathname of application
The same isolated storage directory will be accesible by
any SL app with the same application and group IDs
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with the Operating System
File System
Silverlight 2.0 ships with a Silverlight conﬁguration utility
Using the conﬁguration utility, the user has the option to
Disallow access to isolated storage completely,
Allow access to isolated storage on a site by site basis,
Conﬁgure the default storage quota
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with the Operating System
File System
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Interaction with the Operating System
Network Sockets
Network sockets are available to the Silverlight
applications through the System.Net.Sockets namespace
Currently only supports TCP sockets
Socket connections can only push data to the client
Socket connections can be initiated only between the
client and the site of origin of the SL app, unless there
exists a crossdomainpolicy.xml or clientaccesspolicy.xml in
the root directory of the remote path
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Networking
HTTP Requests
Silverlight 1.0 uses a Javascript object model similar to
XmlHttpRequest
Silverlight 2.0 uses WebClient
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Questions about Gears
Runs disconnected

Standalone app

Privileged OS access

Can launch itself

Local data storage

Has an installer

Raw network sockets

Cross-domain XHR

Dedicated session management

Can talk to the calling DOM
. . .
IPC mechanisms

Proper SSL security
. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Google Gears
Uses a homegrown API for synchronizing data
Local SQLite instance used for data storage
LocalServer hosts content locally for oﬄine access
Works oﬄine via SQL database, local assets, and a local
app server, LocalServer
LocalServer acts as a broker between the browser and
webserver
Changes behavior depending on online status
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Google Gears
Security mechanisms
Uses same origin to restrict access to site databases and
LocalServer resource capture
Provides for parameterized SQL
Opt-in user dialog
Gears 0.3 allows for “customization” of this dialog. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Google Gears
Win! j/k fail
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Google Gears
Here to stay?
Seen very limited adoption thus far
Most of the functionality is included in the HTML 5 spec
So, moving on. . .
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Quick Summary
Runs disconnected

Standalone app

Privileged OS access

Can launch itself

Local data storage

Has an installer

Raw network sockets

Cross-domain XHR

Dedicated session management

Can talk to the calling DOM

IPC mechanisms

Proper SSL security

Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Formerly WebRunner — wraps webapps to appear as
desktop apps
Standalone browser instance, restricted to one domain
External links open a regular browser
Separate user proﬁle
Certiﬁcate errors are a hard failure
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Consists of a webapp bundle with id, URI, CSS, scripting
and UI rules in an INI:
[ Parameters ]
i d=i s e c . s i t e @ i s e c p a r t n e r s . com
u r i=h t t p s ://www. i s e c p a r t n e r s . com/
i con=i s e c
s t a t u s=no
l o c a t i o n=no
s i d e b a r=no
n a v i g a t i o n=no
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Example bundles
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack
Scenarios
RIA vs OS
RIA vs the web
Mozilla Prism
Bundles
Javascript included with webapp bundles has full XPCOM
privs (but not content scripting privs)
Script in 3rd-party bundles allows modifying browser
behavior just like an extension
Unlike add-ons, no mechanism for signing or verifying
goodness of webapp bundles
Living in the
RIA World
Introduction
Who are we?
What’s a RIA?
Why use RIA?
Frameworks
Adobe AIR
MS Silverlight
Google Gears
Mozilla Prism
HTML 5
Attack