duration: 60 s  
number of transactions actually processed: 231898  
tps = 3864.904506 (including connections establishing)  
tps = 3871.202723 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 234955  
tps = 3915.837110 (including connections establishing)  
tps = 3924.836512 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 241359  
tps = 4022.581549 (including connections establishing)  
tps = 4032.042374 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 237272  
tps = 3954.495436 (including connections establishing)  
tps = 3960.789268 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 235486  
tps = 3924.681501 (including connections establishing)  
tps = 3933.783948 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 245445  
tps = 4090.663073 (including connections establishing)  
tps = 4097.263762 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 233128  
tps = 3885.425157 (including connections establishing)  
tps = 3889.080854 (excluding connections establishing)  
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 2  
number of threads: 1  
duration: 60 s  
number of transactions actually processed: 238585  
tps = 3976.336212 (including connections establishing)  
tps = 3982.943184 (excluding connections establishing)  
```  
合计比单个端口代理要高, 但是比直接使用ssl加密要低.  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/1638770402013324103828603/  
2\. http://blog.163.com/digoal@126/blog/static/16387704020134229431304/  
3\. http://blog.163.com/digoal@126/blog/static/163877040201342233131835/  
4\. man ssh  
```  
     -c cipher_spec  
             Selects the cipher specification for encrypting the session.  
             Protocol version 1 allows specification of a single cipher.  The supported values are “3des”, “blowfish”,  
             and “des”.  3des (triple-des) is an encrypt-decrypt-encrypt triple with three different keys.  It is  
             believed to be secure.  blowfish is a fast block cipher; it appears very secure and is much faster than  
             3des.  des is only supported in the ssh client for interoperability with legacy protocol 1 implementa-  
             tions that do not support the 3des cipher.  Its use is strongly discouraged due to cryptographic weak-  
             nesses.  The default is “3des”.  
             For protocol version 2, cipher_spec is a comma-separated list of ciphers listed in order of preference.  
             The supported ciphers are: 3des-cbc, aes128-cbc, aes192-cbc, aes256-cbc, aes128-ctr, aes192-ctr,  
             aes256-ctr, arcfour128, arcfour256, arcfour, blowfish-cbc, and cast128-cbc.  The default is:  
                   aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour128,  
                   arcfour256,arcfour,aes192-cbc,aes256-cbc,aes128-ctr,  
                   aes192-ctr,aes256-ctr  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")