      });
   }
   setTimeout(function(){
      $("#loading").hide();
      $("#container").show();
   }, 500);
};
function expand_and_collapse(anchor)
{
   var elem = $(anchor).siblings().filter(".description");
   if (elem.is(":visible"))
   {
      elem.slideUp();
   }
   else
   {
      elem.slideDown();
   }
};
function setViewMode()
{
   var vm = $("#view_mode").val();
   if (vm == "vm_with_desc")
   {
      $("#container dl.description").each(
         function()
         {
            var li = $(this).closest("li");
            var text = $(this).children("dd.description_content").text();
            if (text && text.length > 0)
            {
                text = text.trim();
                var text_lines = text.split('\n');
                if (text_lines.length > 0)
                {
                    text = text_lines[0];
                }
                if (text[text.length - 1] == ".")
                {
                    text = text.substring(0, text.length - 1);
                }
            }
            li.children("a:first").after("" + text + "");
         }
      );
   }
   else if (vm == "vm_summary")
   {
      $("#container div.desc").remove();
   }
};
function start()
{
   //$("#warning").hide();
   $("#filter_form").bind('submit', function(e)
   {
      filter();
      e.preventDefault();
      e.stopPropagation();
      return false;
   });
   $(".command").click(function(){expand_and_collapse(this)});
   $("#view_mode").change(function(){setViewMode();});
   setViewMode();
};
/*
 * See https://docs.microsoft.com/en-us/sharepoint/dev/general-development/sample-uri-for-excel-services-rest-api
 * URL will be similar to:
 * https://www.my_sharepoint.com/sites/MY_SITE/_vti_bin/ExcelRest.aspx/Shared%20Documents/Directory1/Directory2/SpreadSheet.xlsx/model/Tables('cheat_sheet')
 *
 */
function parse_data_from_sharepoint(data)
{
    var ret = [];
    var div = $("").html(data);
    var table = $(div).find("table:first"); 
    /*
    //get rid of styling from all elements  
    table.removeAttr("style").removeAttr("class").removeAttr("cellpadding").removeAttr("cellspacing").addClass("display");  
    $('tr', table).removeAttr("style").removeAttr("class");  
    $('td', table).removeAttr("style").removeAttr("class");  
    $('div', table).removeAttr("style").removeAttr("class");  
    */
    // Remove the blank first column and row  
    $('tr', table).first().remove();  
    $('tr td:first-child', table).remove();  
    $('tr', table).first().remove();  
    table.children('tbody:first').children("tr").each(function() 
    {
        var tds = $(this).children("td");
        var field_cat           = $(tds.get(0)).text().trim();
        var field_subcat        = $(tds.get(1)).text().trim();
        var field_weight        = 0;
        var field_is_starred    = $(tds.get(2)).text().trim().toLowerCase() == "yes" ? true : false;
        var field_command       = $(tds.get(3)).text();
        var field_desc          = $(tds.get(4)).children("div:first").html();
        var field_more_info     = $(tds.get(5)).text();
        var field_output        = $(tds.get(6)).children("div:first").html();
        if (field_desc)
        {
            field_desc = br2nl(field_desc.replace(/(\r\n|\n|\r)/gm,""));
        }
        if (field_output)
        {
            field_output = br2nl(field_output.replace(/(\r\n|\n|\r)/gm,""));//.replace(//g,'&gt;').replace(/&/g,'&amp;');
        }
        var csi = new CheatSheetItem(field_cat, field_subcat, field_weight, field_is_starred, 
                                    field_command, field_desc, field_more_info,
                                    field_output);
        ret.push(csi);
    });
    return ret;
};
/*
 * See https://stackoverflow.com/questions/30082277/accessing-a-new-style-public-google-sheet-as-json
 */
function parse_data_from_google_drive(data)
{
    var ret = [];
    if (!data || !data.values || !Array.isArray(data.values))
    {
        console.log("Error: Bad data", data);
        return;
    }
    $.each(data.values, function(index, value) 
    {
        if (index == 0) 
        {
            // Skip header
            return true; //continue
        }
        if (!Array.isArray(value) || value.length == 0) 
        {
            console.log("Bad length, skipping: ", value.length, value)
            return true; //continue
        }
        try
        {
            var field_cat           = value[0];
            var field_subcat        = value[1];
            var field_weight        = parseInt(value[2]);
            var field_is_starred    = value[3].trim().toLowerCase() == "yes" ? true : false;;
            var field_command       = value[4];
            var field_desc          = value[5];
            var field_more_info     = value[6] || "";
            var field_output        = value[7] || "";
            var csi = new CheatSheetItem(field_cat, field_subcat, field_weight, 
                                        field_is_starred, field_command, 
                                        field_desc, field_more_info, field_output);
            ret.push(csi);
        }
        catch(err)
        {
            console.log("Error: ", err.message, value);
            return true; //continue
        }
    });
    ret.sort(function(a, b) {
                if (a.cat != b.cat) { return a.cat.localeCompare(b.cat); }
                if (a.subcat != b.subcat) { return a.subcat.localeCompare(b.subcat); }
                return a.weight - b.weight;
            }
    );
    return ret;
};
// Make sure data returned by data_url is trusted, as HTML can be evaluated!
function populate_data(data_type, data_url, parse_func)
{
    jQuery.ajax({  
        type: "GET",  
        dataType: data_type,
        url: data_url,
        success: function (data) 
        {  
            $("#loading").hide();
            var container = $("#container");
            var date_parsed = parse_func(data);
            $.each(date_parsed, function(index, item) 
            {
                var category_id = encodeURIComponent(item.cat).replace(/\W/g, '');
                if (!category_id)
                {
                    return true; //continue;
                }
                category_id = "cat_" + category_id;
                var subcategory_id = encodeURIComponent(item.subcat).replace(/\W/g, '');
                if (!subcategory_id)
                {
                    return true; //continue;
                }
                subcategory_id = "subcat_" + subcategory_id;
                if ($("#" + category_id).length == 0)
                {
                    container.append('' + escapeHtml(item.cat) + '');
                }
                if ($("#" + subcategory_id).length == 0)
                {
                    var li_id = 'li_' + subcategory_id;
                    var WasInserted = false;
                    var newHtml = '' 
                                    + escapeHtml(item.subcat) + '';
                    $("#" + category_id + " > li").each(function(){
                        var otherLiId = $(this).attr("id");
                        if (otherLiId > li_id)
                        {
                            $(this).before(newHtml);
                            WasInserted = true;
                            return false; //break
                        }
                    });
                    if (!WasInserted)
                    {
                        $("#" + category_id).append(newHtml);
                    }
                }
                var command_class = "command";
                if (item.is_starred)
                {
                    command_class += " starred";
                }
                var newElement = '';
                newElement += '' + escapeHtml(item.command) + '';
                newElement += '';
                newElement += 'Command' + nl2br(escapeHtml(item.command)) + '';
                newElement += 'Description' + nl2br(escapeHtml(item.desc)) + '';
                newElement += 'More Information'
                if (item.more_info)
                {
                    if (item.more_info.toLowerCase().indexOf("http") >= 0)
                    {
                        var links = [];
                        var lines = item.more_info.split("\n");
                        $.each(lines, function(line_index, line_value) {
                            if (line_value.toLowerCase().indexOf("http") === 0)
                            {
                                links.push('Link');
                            }
                            else
                            {
                                links.push(line_value);
                            }
                        });
                        newElement += links.join(" | ");
                    }
                    else
                    {
                        newElement += escapeHtml(item.more_info);
                    }
                }
                else
                {
                    newElement += 'Unavailable';
                }
                newElement += '';
                if (item.output)
                {
                    newElement += 'Example Output' + escapeHtml(item.output) + '';
                    newElement += '';
                    newElement += '';
                    newElement += '';
                }
                $("#" + subcategory_id).append(newElement);
            });
            start();
        },  
        error: function (xhr, msg, e) {
            console.log(e);  
            document.write(e);
        }  
    });
};
var self_url = new URL(window.location.href);
var google_api_key = self_url.searchParams.get("google_api_key");
var data_url = "CheatSheet.json"
if (google_api_key != null)
{
    data_url = "https://sheets.googleapis.com/v4/spreadsheets/1sTNXImpgKf2CI0Shqx1FrEyoI0-gUUCgm6NjEg1Yg6w/values/CheatSheet?key=" + google_api_key;
}
$(document).ready(function () {
   $("#warning").hide();
   //populate_data('html', data_url + "?" + (new Date().getMilliseconds()), parse_data_from_sharepoint);
   populate_data("json", data_url, parse_data_from_google_drive);
});  