-   NFS 服务器本身无法挂载 NFSv3 文件系统。
:::
:::
::: section
::: titlepage
# []{#configuring-an-nfsv4-only-server_managing-file-systems.html#configuring-the-nfs-server-to-support-only-nfsv4_configuring-an-nfsv4-only-server}将 NFS 服务器配置为只支持 NFSv4 {.title}
:::
这个步骤描述了如何配置 NFS 服务器来支持 NFS 版本 4.0 及更新的版本。
::: orderedlist
**流程**
1.  通过在 `/etc/nfs.conf`{.literal} 配置文件的 `[nfsd]`{.literal}
    部分添加以下行来禁用 NFSv3：
    ``` screen
    [nfsd]
    vers3=no
    ```
2.  （可选）禁用对 `RPCBIND`{.literal}、`MOUNT`{.literal} 和
    `NSM`{.literal} 协议调用的监听，在仅使用 NFSv4
    情况下不需要这些调用。禁用相关服务：
    ``` screen
    # systemctl mask --now rpc-statd.service rpcbind.service rpcbind.socket
    ```
3.  重启 NFS 服务器：
    ``` screen
    # systemctl restart nfs-server
    ```
:::
一旦启动或重启 NFS 服务器，这些改变就会生效。
:::
::: section
::: titlepage
# []{#configuring-an-nfsv4-only-server_managing-file-systems.html#verifying-the-nfsv4-only-configuration_configuring-an-nfsv4-only-server}验证只读 NFSv4 配置 {.title}
:::
这个流程描述了如何使用 `netstat`{.literal} 工具来验证您的 NFS
服务器是否是在仅使用 NFSv4 模式下配置的。
::: itemizedlist
**流程**
-   使用 `netstat`{.literal} 工具列出侦听 TCP 和 UDP 协议的服务：
    ``` screen
    # netstat --listening --tcp --udp
    ```
    ::: example
    []{#configuring-an-nfsv4-only-server_managing-file-systems.html#idm139895612853904}
    **例 5.1. 仅使用 NFSv4 服务器上的输出**
    ::: example-contents
    以下是仅使用 NFSv4 服务器上 `netstat`{.literal}
    输出的示例；也禁用了对 `RPCBIND`{.literal}、`MOUNT`{.literal} 和
    `NSM`{.literal} 的侦听。这里，`nfs`{.literal} 是唯一侦听 NFS
    的服务：
    ``` screen
    # netstat --listening --tcp --udp
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address           Foreign Address         State
    tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN
    tcp        0      0 0.0.0.0:nfs             0.0.0.0:*               LISTEN
    tcp6       0      0 [::]:ssh                [::]:*                  LISTEN
    tcp6       0      0 [::]:nfs                [::]:*                  LISTEN
    udp        0      0 localhost.locald:bootpc 0.0.0.0:*
    ```
    :::
    :::
    ::: example
    []{#configuring-an-nfsv4-only-server_managing-file-systems.html#idm139895578097008}
    **例 5.2. 配置仅使用 NFSv4 服务器前的输出**
    ::: example-contents
    相比之下，在配置仅使用 NFSv4 服务器前，`netstat`{.literal}
    输出中包含 `sunrpc`{.literal} 和 `mountd`{.literal} 服务：
    ``` screen
    # netstat --listening --tcp --udp
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address           Foreign Address State
    tcp        0      0 0.0.0.0:ssh             0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:40189           0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:46813           0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:nfs             0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:mountd          0.0.0.0:*       LISTEN
    tcp6       0      0 [::]:ssh                [::]:*          LISTEN
    tcp6       0      0 [::]:51227              [::]:*          LISTEN
    tcp6       0      0 [::]:nfs                [::]:*          LISTEN
    tcp6       0      0 [::]:sunrpc             [::]:*          LISTEN
    tcp6       0      0 [::]:mountd             [::]:*          LISTEN
    tcp6       0      0 [::]:45043              [::]:*          LISTEN
    udp        0      0 localhost:1018          0.0.0.0:*
    udp        0      0 localhost.locald:bootpc 0.0.0.0:*
    udp        0      0 0.0.0.0:mountd          0.0.0.0:*
    udp        0      0 0.0.0.0:46672           0.0.0.0:*
    udp        0      0 0.0.0.0:sunrpc          0.0.0.0:*
    udp        0      0 0.0.0.0:33494           0.0.0.0:*
    udp6       0      0 [::]:33734              [::]:*
    udp6       0      0 [::]:mountd             [::]:*
    udp6       0      0 [::]:sunrpc             [::]:*
    udp6       0      0 [::]:40243              [::]:*
    ```
    :::
    :::
:::
:::
:::
[]{#securing-nfs_managing-file-systems.html}
::: chapter
::: titlepage
# []{#securing-nfs_managing-file-systems.html#securing-nfs_managing-file-systems}第 6 章 保护 NFS {.title}
:::
为最大程度地降低 NFS 安全风险并保护服务器上的数据，在服务器上导出 NFS
文件系统或将其挂载到客户端上时，请考虑以下部分：
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#nfs-security-with-auth_sys-and-export-controls_securing-nfs}带有 AUTH_SYS 和导出控制的 NFS 安全性 {.title}
:::
NFS 提供以下传统选项来控制对导出文件的访问：
::: itemizedlist
-   服务器限制哪些主机可以通过 IP 地址或主机名挂载哪些文件系统。
-   服务器对 NFS
    客户端上的用户强制执行文件系统权限的方式与对本地用户强制执行权限的方式相同。传统上，NFS
    使用 `AUTH_SYS`{.literal} 调用消息（也称为
    `AUTH_UNIX`{.literal}）来执行此操作，该消息依赖于客户端来声明用户的
    UID 和
    GID。请注意，这意味着恶意或者错误配置的客户端可能会轻松地利用这个问题，导致用户可以访问不应该被访问的文件。
:::
为限制潜在的风险，管理员通常将访问权限限制为只读或将用户权限挤压成普通用户和组
ID。不幸的是，这些解决方案会阻止 NFS 共享以最初预期的方式使用。
另外，如果攻击者获得了对导出 NFS 文件系统的系统所使用的 DNS
服务器的控制，它们可将与特定主机名或完全限定域名关联的系统指向未授权的机器。此时，未经授权的机器
[*是*]{.emphasis} 允许挂载 NFS
共享的系统，因为没有交换用户名或密码信息来为 NFS 挂载提供额外的安全。
在通过 NFS
导出目录时应谨慎使用通配符，因为通配符的范围可能包含比预期更多的系统。
::: itemizedlist
**其他资源**
-   要保护 NFS 和 `rpcbind`{.literal}，例如，可使用 `nftables`{.literal}
    和 `firewalld`{.literal}。
-   `nft(8)`{.literal} man page
-   `firewalld-cmd(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#nfs-security-with-auth_gss_securing-nfs}带有 `AUTH_GSS`{.literal} 的 NFS 安全性 {.title}
:::
NFS 的所有版本都支持 RPCSEC_GSS 和 Kerberos 机制。
与 AUTH_SYS 不同，使用 RPCSEC_GSS Kerberos
机制，服务器不依赖于客户端就可以正确地表示哪个用户正在访问文件。相反，加密用于向服务器验证用户的身份，这可防止恶意的客户端在没有用户的
Kerberos 凭据的情况下模拟该用户。使用 RPCSEC_GSS Kerberos
机制是保护挂载的最直接方法，因为配置了 Kerberos 后不需要额外的设置。
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#configuring-an-nfs-server-and-client-to-use-kerberos_securing-nfs}配置 NFS 服务器和客户端使用 Kerberos {.title}
:::
Kerberos
是一种网络身份验证系统，其允许客户端和服务器使用对称加密和信任的第三方
KDC 来互相进行身份验证。红帽建议使用身份管理(IdM)来设置 Kerberos。
::: itemizedlist
**先决条件**
-   Kerberos 密钥分发中心(`KDC`{.literal})已安装和配置 。
:::
::: orderedlist
**流程**
1.  ::: itemizedlist
    -   在 NFS 服务器端创建 `nfs/hostname.domain@REALM`{.literal} 主体。
    -   在服务器和客户端端创建 `host/hostname.domain@REALM`{.literal}
        主体。
    -   将对应的密钥添加到客户端和服务器的 keytab 中。
    :::
2.  在服务器端，使用 `sec=`{.literal}
    选项来启用所想要的安全类别。启用所有安全类型和非加密挂载：
    ``` screen
    /export *(sec=sys:krb5:krb5i:krb5p)
    ```
    与 `sec=`{.literal} 选项一起使用的有效安全类型为：
    ::: itemizedlist
    -   `sys`{.literal}: 无加密保护，默认值
    -   `krb5`{.literal} ：仅用于验证
    -   `krb5i`{.literal} ：完整性保护
        ::: itemizedlist
        -   使用 Kerberos V5 进行用户身份验证，并使用安全校验和执行 NFS
            操作的完整性检查，以防止数据篡改。
        :::
    -   `krb5p`{.literal} ：隐私保护
        ::: itemizedlist
        -   使用 Kerberos V5 进行用户身份验证、完整性检查及加密 NFS
            流量以防止流量嗅探。这是最安全的设置，但它也会涉及最大的性能开销。
        :::
    :::
3.  在客户端，将 `sec=krb5`{.literal} （或 `sec=krb5i`{.literal} 或
    `sec=krb5p`{.literal}，取决于设置 ）添加到挂载选项：
    ``` screen
    # mount -o sec=krb5 server:/export /mnt
    ```
:::
::: itemizedlist
**其他资源**
-   [在 krb5 保护的 NFS 上以 root
    用户身份创建文件](https://access.redhat.com/articles/4040141){.link}.不建议。
-   `exports(5)`{.literal} 手册页
-   `nfs(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#nfsv4-security-options_securing-nfs}NFSv4 安全选项 {.title}
:::
NFSv4 包括基于 Microsoft Windows NT 模型，而非 POSIX 模型的 ACL
支持，因为 Microsoft Windows NT 模型的功能和广泛的部署。
NFSv4 的另一个重要安全功能是，对挂载文件系统删除了 `MOUNT`{.literal}
协议的使用。`MOUNT`{.literal}
协议存在安全风险，因为协议处理文件句柄的方式。
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#file-permissions-on-mounted-nfs-exports_securing-nfs}挂载的 NFS 导出的文件权限 {.title}
:::
远程主机一旦将 NFS
文件系统挂载为读取或读写，则保护每个共享文件的唯一方法就是其权限。如果共享同一用户
ID 值的两个用户在不同的客户端系统上挂载相同的 NFS
文件系统，他们可以修改彼此的文件。此外，在客户端系统上以 root
身份登录的任何人都可以使用 `su -`{.literal} 命令来访问 NFS
共享的任何文件。
默认情况下，Red Hat Enterprise Linux 的 NFS
支持访问控制列表（ACL）。红帽建议启用此功能。
默认情况下，NFS 在导出文件系统时使用 [*root
压缩*]{.emphasis}。这会将本地机器上以 root 用户身份访问 NFS
共享的任何人的用户 ID 设为 `nobody`{.literal}。root 挤压由默认选项
`root_squash`{.literal} 控制；有关此选项的更多信息，请参阅 [NFS
服务器配置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_file_systems/exporting-nfs-shares_managing-file-systems#nfs-server-configuration_exporting-nfs-shares){.link}。
将 NFS 共享导出为只读时，请考虑使用 `all_squash`{.literal}
选项。这个选项使访问导出的文件系统的每个用户都使用 `nobody`{.literal}
用户的用户 ID。
:::
:::
[]{#enabling-pnfs-scsi-layouts-in-nfs_managing-file-systems.html}
::: chapter
::: titlepage
# []{#enabling-pnfs-scsi-layouts-in-nfs_managing-file-systems.html#enabling-pnfs-scsi-layouts-in-nfs_managing-file-systems}第 7 章 在 NFS 中启用 pNFS SCSI 布局 {.title}
:::
您可以将 NFS 服务器和客户端配置为使用 pNFS SCSI 布局访问数据。
::: itemizedlist
**先决条件**
-   客户端和服务器必须能够向同一个块设备发送 SCSI
    命令。就是说块设备必须位于共享的 SCSI 总线中。
-   块设备必须包含 XFS 文件系统。
-   SCSI 设备必须支持 SCSI Persistent Reservations，如 SCSI-3 Ppriary
    Commands 规格中所述。
:::
::: section
::: titlepage
# []{#enabling-pnfs-scsi-layouts-in-nfs_managing-file-systems.html#the-pnfs-technology_enabling-pnfs-scsi-layouts-in-nfs}pNFS 技术 {.title}
:::
pNFS 构架提高了 NFS 的可伸缩性。当服务器实现 pNFS
时，客户端可以同时通过多个服务器访问数据。这可提高性能。
pNFS 支持 RHEL 中的以下存储协议或布局：
::: itemizedlist
-   文件
-   Flexfiles
-   SCSI
:::
:::
::: section
::: titlepage
# []{#enabling-pnfs-scsi-layouts-in-nfs_managing-file-systems.html#pnfs-scsi-layouts_enabling-pnfs-scsi-layouts-in-nfs}pNFS SCSI 布局 {.title}