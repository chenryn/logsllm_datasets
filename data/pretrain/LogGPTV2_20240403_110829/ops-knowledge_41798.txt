Question: "A development team is implementing a password storage system for their high-traffic web application. Considering the concepts of secure password hashing, which of the following approaches should the team implement to ensure both the security of hashed passwords and efficient performance during user authentication?"
 "A": "Use a unique salt for each user's password hash and store it in plaintext along with the hash in the database to prevent amortized guessing attacks."
 "B": "Choose a cryptographic hash function that is inherently slow, such as SHA256, to ensure that offline password guessing is less efficient."
 "C": "Iteratively apply a fast cryptographic hash function a number of times to create a slow hash function, tuning the number of iterations for an optimal balance between security and performance."
 "D": "Increase the complexity of passwords required by users to include a mix of upper and lower case letters, numbers, and special characters, thereby making the password hashing process slow."
Answer: AC