资源（ch-publish.fm）有效的方法。
• DASL首部说明了在SEARCH方法中使用的查询语法的类型。在这个例子中，就
是sql。更多关于DASL首部的细节参见http://www.webdav.org。
19.2.15 WebDAV中的版本管理
这可能有点儿讽刺，尽管DAV这个名字中有V，但版本管理这个特性却不是开始
就有的。在多个作者的协作环境中，版本管理是至关重要的。实际上，为了完全解
决更新丢失的问题（图19-3中有展示），锁定和版本化都是必不可少的。和版本管
理相关的一些常见特征包括保存和访问以前的文档版本的能力、管理变更历史以及
与变更相关的注解以详细说明变更过程的能力。
在RFC 3253中为WebDAV加入了版本管理功能。
19.2.16 WebDAV的未来发展
WebDAV现在已经获得了良好的支持。可以工作的客户端实现包括IE 5.x及以上版
本，Windows系统的文件管理器以及微软的办公软件。在服务器端，可用的实现包
括IIS5.x及以上版本，Apache的mod_dav以及很多其他的系统。Windows XP和
Mac OS 10.x都提供了对WebDAV的原生支持。因此，为这些操作系统编写的任何
466 ｜ 第19章
应用程序天生都具备使用WebDAV的能力。
19.3 更多信息
参考下列网址以获取更多信息。
• http://officeupdate.microsoft.com/frontpage/wpp/serk/
微软FrontPage 2000服务器扩展资源包。
• http://www.ietf.org/rfc/rfc2518.txt?number=2518
“HTTP Extensions for Distributed Authoring—WEBDAV”（“HTTP的分布式写作
扩展—WEBDAV”），作者是Y. Goland、J. Whitehead、A. Faizi、S. Carter以及
D. Jensen。 446
• http://www.ietf.org/rfc/rfc3253.txt?number=3253
“Versioning Extensions to WebDAV”（“对WebDAV进行版本管理扩展”），作者
是G. Clemm、J. Amsden、T. Ellison、C. Kaler和J. Whitehead。
• http://www.ics.uci.edu/pub/ietf/Webdav/intro/Webdav_intro.pdf
“WEBDAV: IETF Standard for Collaborative Authoring on the Web”
（“WEBDAV：在Web上进行协同写作的IETF标准”），作者是J. Whitehead和
M. Wiggins。
• http://www.ics.uci.edu/~ejw/http-future/whitehead/http_pos_paper.html
“Lessons from WebDAV for the Next Generation Web Infrastructure”（“在下一代
Web的基础架构中借鉴WebDAV”），作者是J. Whitehead。
• http://www.microsoft.com/msj/0699/dav/davtop.htm
“Distributed Authoring and Versioning Extensions for HTTP Enable Team
Authoring”（“HTTP中为支持团队写作而做的分布式写作和版本管理扩展”），作
者是L. Braginski和M.Powell。
• http://www.webdav.org/dasl/protocol/draft-dasl-protocol-00.html
“DAV Searching & Locating”（“DAV中的搜索和定位”），作者是S. Reddy、D.
Lowry、S. Reddy、R. Henderson、J. Davis以及A. Babich。 447
发布系统 ｜ 467
第20章
重定向与负载均衡
469
HTTP并不是独自运行在网上的。很多协议都会在HTTP报文的传输过程中对其数
据进行管理。HTTP只关心旅程的端点（发送者和接收者），但在包含有镜像服务
器、Web代理和缓存的网络世界中，HTTP报文的目的地不一定是直接可达的。
本章介绍重定向技术，涉及网络工具、重定向技术细节以及判定HTTP报文最终目
的地的协议。重定向技术通常可以用来确定报文是否终结于某个代理、缓存或服务
器集群中某台特定的服务器。重定向技术可以将报文发送到客户端没有显式请求的
地方去。
本章，我们会学习下列重定向技术，它们是如何工作的以及它们的负载均衡能力如
何（如果有的话）：
• HTTP重定向；
• DNS重定向；
• 任播路由；
• 策略路由；
• IP MAC转发；
• IP地址转发；
• WCCP（Web缓存协调协议）；
• ICP（缓存间通信协议）；
• HTCP（超文本缓存协议）；
• NECP（网元控制协议）；
• CARP（缓存阵列路由协议）；
448 • WPAD（Web代理自动发现协议）。
20.1 为什么要重定向
由于HTTP应用程序总是要做下列3件事情，所以在现代网络中重定向是普遍存
在的：
• 可靠地执行HTTP事务；
• 最小化时延；
• 节约网络带宽。
出于这些原因，Web内容通常分布在很多地方。这么做是出于可靠性的考虑。这
样，如果一个位置出问题了，还有其他的可用；如果客户端能去访问较近的资源，
就可以更快地收到所请求的内容，以降低响应时间；将目标服务器分散，还可以减
少网络拥塞。可以将重定向当作一组有助于找到“最佳”分布式内容的技术。
470 ｜ 第20章
由于重定向和负载均衡是共存的，所以本章也涵盖了负载均衡的话题。大多数重定
向部署都包含了某些形式的负载均衡。也就是说，它们可以将输入报文的负载分摊
到一组服务器中去。反之，因为输入报文一定会在分担负荷的服务器之间进行某种
分布，所以任意形式的负载均衡中都包含了重定向。
20.2 重定向到何地
从客户端向目标发送HTTP请求，目标对其进行处理的角度来看，服务器、代理、
缓存和网关对客户端来说都是服务器。很多重定向技术都可用于服务器、代理、缓
存和网关，因为它们具有共同的，与服务器类似的特征。其他一些重定向技术是专
门为特定类型的端点设计的，没有通用性。本章稍后的小节会介绍一些通用及专用
的重定向技术。
Web服务器会根据每个IP来处理请求。将请求分摊到复制的服务器中去，就意味
着应该把对某特定URL的每条请求都发送到最佳的Web服务器上去（最靠近客户
端的、或负载最轻的或采用其他优化策略选择的服务器）。重定向到某台服务器就像
将所有需要给汽车加油的司机都送到最近的加油站去一样。
代理希望根据每个协议来处理请求。在理想情况下，某个代理附近的所有HTTP流
量都应该通过这个代理传输。比如，如果某代理缓存靠近各种不同的客户端，那么
理想情况下，所有请求都应流经这个代理缓存，因为代理缓存上会存储常用的文档，
可以直接提供，从而避免通过更长、更昂贵的路径连接到原始服务器。重定向到代
理就像从一条主要通路（无论它通往何处）上将流量分流到一条本地快捷路径上去 449
一样。
20.3 重定向协议概览
重定向的目标是尽快地将HTTP报文发送到可用的Web服务器上去。在穿过因特网
的路径上，HTTP报文传输的方向会受到HTTP应用程序和报文经由的路由设备的
影响，参见以下示例。
• 配置创建客户端报文的浏览器应用程序，使其将报文发送给代理服务器。
• DNS解析程序会选择用于报文寻址的IP地址。对不同物理地域的不同客户端来
说，这个IP地址可能不同。
• 报文经过网络传输时，会被划分为一些带有地址的分组；交换机和路由器会检查
分组中的TCP/IP地址，并据此来确定分组的发送路线。
• Web服务器可以通过HTTP重定向将请求反弹给不同的Web服务器。
重定向与负载均衡 ｜ 471
浏览器配置、DNS、TCP/IP路由以及HTTP都提供了重定向报文的机制。注意，有
些方法，比如浏览器配置，只有在将流量重定向到代理的时候才有意义，而其他一
些方法（比如DNS重定向），则可用于将流量发送给任意服务器。1
表20-1总结了用来将报文重定向到服务器的重定向方法，本章稍后逐一讨论每种
方法。
表20-1 通用的重定向方法
机 制 工作方式 重新路由的基础 局 限 性
HTTP重定向 最初，HTTP请求先到第一台 选择最短路径时可用的 可能会很慢——每个事
Web服务器，这台服务器会选 选项很多，包括轮转 务都包含了附加的重定
择一台“最佳”的Web服务器 （round-robin）负载均衡 向步骤。而且，第一台
为其提供内容。第一台Web服 和最小化时延等 服务器一定要能够处理
务器会向客户端发送一条到指 请求负载
定服务器的HTTP重定向。客
户端会将请求重新发送到选中
的服务器上
DNS重定向 DNS服务器决定在URL的主 选择最短路径时可用的 需要配置DNS服务器
机名中返回多个IP地址中的哪 选项很多，包括轮转
一个 （round-robin）负载均衡
和最小化时延等
任播寻址 几台服务器使用相同的IP地 路由器有内建的最短路径 需要拥有/配置路由器。
址。每台服务器都会伪装成一 路由功能 有地址冲突的风险。如
个骨干路由器。其他路由器会 果路由变化了，与已建
将共享IP地址分组发送给最近 立的TCP连接相关的分
的服务器（认为它们将分组发 组会被发送到其他的服
450
送给最近的路由器） 务器，可能会使TCP连
接断裂
IP MAC 转发 交换机或路由器这样的网元会 节省带宽，提高QOS。 服务器或代理的跳距必
读取分组的目的地址。如果应 负载均衡 须是1
该将分组重定向，交换机会将
服务器或代理的目标MAC地
址赋予分组
IP地址转发 第四层交换机会评估分组的目 节省带宽，提高QOS。 服务器或代理可能看不
的端口并将重定向分组的IP地 负载均衡 到真正的客户端IP地址
址改成代理或镜像服务器的IP
地址
注1： DNS也不能随便重定向，目标IP地址的服务器上没有托管所需的虚拟主机的话，就和浏览器代理配
错一样，毫无意义。（译者注）
472 ｜ 第20章
表20-2总结了将报文重定向到代理服务器的重定向方法。
表20-2 代理与缓存重定向技术
机 制 工作方式 重新路由的基础 局 限 性
显式浏览器配置 配置Web浏览器，使其将 节省带宽，提高 取决于配置浏览器的
HTTP报文发送给附近的一 QoS。负载均衡 能力
个代理，通常是缓存。可以
由终端用户或管理浏览器的
服务进行配置
代理自动配置（PAC） Web浏览器从配置服务器 节省带宽，提高 必须配置浏览器，使其
中解析出PAC文件。这个 QoS。负载均衡 去查询配置服务器
PAC文件会告诉浏览器为每
个URL使用什么代理
Web Proxy代理自动发现 Web浏览器向配置服务器查 配置服务器，将 只有部分浏览器支持
协议（WPAD） 询一个PAC文件的URL。 URL建立在客户 WPAD
与单独使用PAC不同，不 端HTTP请求首
需要将浏览器配置为使用特 部提供的信息之
定的配置服务器 上。负载均衡
Web缓存协调协议（WCCP） 路由器会评估一个分组的目 节省带宽，提高 必须使用支持WCCP的
的地址，并用代理或镜像服 QoS。负载均衡 路由器。有些拓扑结构
务器的IP地址将重定向分 方面的限制
组封装起来。可以与很多现
有路由器共同工作。可以将
分组封装起来，这样客户端
的IP地址就不会丢失了
因特网缓存协议（ICP） 代理缓存会在一组兄弟代理 从兄弟代理或父 请求内容时只使用了
缓存中查询所请求的内容。 代理缓存中获取 URL，所以会降低缓存
还支持缓存的分层结构 内容比从原始服 命中率
务器中获取更快
缓存分组路由协议（CARP） 一种代理缓存散列协议。允 从附近的对等高 CARP无法支持兄弟关
许缓存将请求转发给一个父 速缓存中获取内 系。所有CARP客户端
缓存。与ICP不同的是，高 容要比从原始服 都必须在配置上达成一
速缓存上的内容是不相交 务器上获取快 致；否则，不同的客户
的，这组缓存会像一个大型 端就会向不同的父代理
缓存那样工作 缓存发送相同的URI，
降低命中率 451
超文本缓存协议（HTCP） 参与的代理缓存可以向一组 从兄弟代理或父
兄弟缓存查询所请求的内 代理缓存中获取
容。 支 持HTTP 1.0和1.1 内容比从原始服
首部，以便精细地调整缓存 务器上获取快
查询
重定向与负载均衡 ｜ 473
20.4 通用的重定向方法
本节我们会深入介绍服务器和代理常用的各种重定向方法。可以通过这些技术将流
量重定向到不同的（可能更优的）服务器，或者通过代理来转发流量。具体来
说，我们会介绍 HTTP 重定向、DNS 重定向、任播寻址、IP MAC 转发以及 IP
地址转发。
20.4.1 HTTP重定向
Web服务器可以将短的重定向报文发回给客户端，告诉他们去其他地方试试。有些
Web站点会将HTTP重定向作为一种简单的负载均衡形式来使用。处理重定向的服
务器（重定向服务器）找到可用的负载最小的内容服务器，并将浏览器重定向到那
台服务器上去。对广泛分布的Web站点来说，确定“最佳”的可用服务器会更复杂
一些，不仅要考虑到服务器的负载，还要考虑到浏览器和服务器之间的因特网距离。
与其他一些形式的重定向相比，HTTP重定向的优点之一就是重定向服务器知道客
户端的IP地址；理论上来讲，它可以做出更合理的选择。
下面是HTTP重定向的工作过程。在图20-1a中，Alice向www.joes-hardware.com
发送了一条请求：