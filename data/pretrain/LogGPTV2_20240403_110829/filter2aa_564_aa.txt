Java 代码审计常用漏洞总结 
1.1 审计方法总结 
主要代码审计方法是跟踪用户输入数据和敏感函数参数回溯： 
跟踪用户的输入数据，判断数据进入的每一个代码逻辑是否有可利用的点，此处的代码逻辑
可以是一个函数，或者是条小小的条件判断语句。 
敏感函数参数回溯，根据敏感函数，逆向追踪参数传递的过程。这个方法是最高效，最常用
的方法。大多数漏洞的产生是因为函数的使用不当导致的，只要找到这些函数，就能够快速
挖掘想要的漏洞。 
以下是基于关键词审计技巧总结： 
在搜索时要注意是否为整个单词,以及小写敏感这些设置 
漏洞名称 
关键词 
密码硬编码、密码明文存储 
password 、pass、jdbc 
XSS 
getParamter、 fileItems = servletFileUpload.parseRequest(request); 
for (int i = 0; i < fileItems.size(); ++i) { 
FileItem fi = (FileItem) fileItems.get(i); 
String strFileName = fi.getName(); 
if (strFileName != null && !"".endsWith(strFileName)) { 
String fileName = opId + "_" + getTimeSequence() + "." 
+ getFileNameExtension(strFileName); 
String diskFileName = path + fileName; 
File file = new File(diskFileName); 
if (file.exists()) { 
file.delete(); 
} 
fi.write(new File(diskFileName)); 
resultArrayNode.add(fileName); 
...... 
private String getFileNameExtension(String fullFileName) { 
if (fullFileName == null) { 
return null; 
} 
int pos = fullFileName.lastIndexOf("."); 
if (pos != -1) { 
return 
fullFileName.substring(pos 
+ 