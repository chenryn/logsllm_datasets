title:POSTER: Address Authentication Based on Location History
author:Hosung Park and
Daeyong Kwon and
Seungsoo Nam and
Daeseon Choi
(cid:3)
A LOCATION AUTHENTICATION SCHEME BASED ON 
PROXIMITY TEST OF LOCATION TAGS 
Dai. Jiazhu*, Li. Zhilong* 
* School of Computer Engineering and Science, Shanghai University, Shanghai, China 
PI:EMAIL, PI:EMAIL 
Keywords:    Security, Location Cheating, Social Network. 
Abstract
In 
this  paper,  we  propose  a 
In  the  past  few  years,  location-based  mobile  social 
network services, such as Foursquare and Yelp developed 
rapidly. To attract more users, the mobile social network 
service providers provide virtual or real rewards to the user 
who  shares  his  or  her  location  information  in  a  specific 
position.  This  leads  some  dishonest  users  provide  fake 
location  information  to  the  social  network  to  get  the 
rewards. 
location 
authentication scheme based on proximity test of location 
tags to verify the authenticity of the location information 
submitted by the users. We generate the location tags by 
collecting  the  wireless  signals  information  of  the  users’ 
current  location  and  use  it  as  a  location  verification 
certificate  to  verify  the  authenticity  of  the  location 
information submitted by the users. By security analysis 
and  experimental  evaluation,  we  prove  this  scheme  is 
effective in preventing location cheating in mobile social 
networks. 
Introduction
1
With  the  rapid  development  of  smart  phones,  LBS 
(Location-Based Service) have been widely used. A large 
number of LBS social network sites have grown rapidly, 
such as Foursquare, Yelp, Google+ and so on. It is reported 
in January 2013 that Yelp has been visited more than 300 
million times per-day. Using the information users shared, 
social  network  site  provides  users  with  a  rich  user 
experience, including location-based search and location-
based  mobile  advertising.  To  attract  more  users,  the 
mobile social network service providers provide virtual or 
real  reward  to  the  user  who  shares  his  or  her  location 
information  in  a  specific  position  (e.g.  a  coffee  shop, 
restaurant,  shops  and  so  on).  Take  Foursquare  as  an 
example, a user who sharing a location the most, can get a 
virtual  title  of  "mayor",  a  free  coffee  or  a  free  parking 
space by local businesses.
As a user can benefit from sharing the location information, 
some  dishonest  users  have  a  motivation  to  cheat.  In  the 
current  mainstream 
social 
applications,  signals  of  GPS,  WIFI  or  Base-station  are 
used 
information. 
to  authenticate  a  user's 
location-based  mobile 
location 
However,  there  are  a  lot  of  ways  to  forge  location 
information  easily.  Taking  Android  (an  open  source 
operating  system  of  smart  phones)  as  an  example,  a 
malicious user can modify the localization-related API to 
achieve  location  cheating  easily.  On  the  other  hand,  in 
order to facilitate the applications’ development, Google 
and Apple provide some powerful simulators. A malicious 
user can install the applications in a simulator, and use the 
location functions of the simulator to submit false location 
information  easily.  Currently,  how  to  prevent  location 
cheating has become an important issue in social network 
security. 
In  this  paper,  to  verify  the  authenticity  of  the  location 
information submitted by the users, we propose a location 
verification scheme based on location tags proximity test. 
The location tags are constructed by wireless signals in the 
user current position, such as WIFI signals and base station 
signals.  WIFI  signals  and  the  base  station  signals  are 
various  among  different  space  environment,  so  it  has  a 
high degree of randomness. In addition, a timestamp or a 
random  number  is  included  in  the  frame  headers  of  the 
base station signal and WIFI signal, so the frames have a 
high degree of freshness. Due to these two characteristics, 
it’s difficult for a malicious user to forging a location tag. 
When a user uploads his/her location tags to the server, the 
server will compare the tags with the signals information 
of  the  real  world  stored  in  server.  If  they  are  similar 
enough, the location information submitted by the user is 
proved authentic. The scheme merely needs to capture the 
wireless signals in the current environment, it doesn’t need 
to upgrade and transform the current network, and so it has 
good  practicability  and  can  be  deployed  in  current 
environment easily. 
The  rest  of  the  paper  is  organized  as  follows:  Section  2 
gives a brief review of related work. Section 3 describes 
the characteristics of the location tags. Section 4 presents 
our system model. In section 5, we present the security and 
feasibility analysis of the scheme. In section 6, we present 
performance evaluation. Finally, we conclude in section 7. 
2 Related Works 
Currently, there are many research works on the location 
security,  but  all  of  them  have  some  limitations.  In  [2], 
Wenbo He, etc. introduce a method Foursquare used. After 
(cid:3)
users upload their location information, the server will use 
this information for data analysis. By analyzing the user's 
movement  trajectory  to  check  whether  the  location 
information is authentic. It can prevent a super-man attack 
(rapid transfer from one location to another location) and 
some other kinds of location cheatings with a continuous 
trajectory effectively, but it is ineffective to discrete time 
and position (a time at some place and a long time later at 
other place or the same place before). 
In [5], Stefan Saroiu, etc. present a method to verify the 
authenticity  of  user’s  location  information  by  using 
wireless  AP  (access  points)  signature.  The  advantage  of 
this  method  is  that  an  AP  signature  provides  a  proof  of 
user’s current location to prevent location cheating. And 
an  AP  signature  containing  user  identity  and  time 
information  can  effectively  prevent  collusion  and  replay 
attack. However, this method also has some limitations: (1) 
AP’s private key storage. In this method, an AP must be 
assigned  one  or  more  private  key 
to  sign  users’ 
information. How to store the private key safely is a great 
challenge.  (2)  DOS  (denial  of  service).  As  AP  needs  to 
respond timely to signature requests of the users, this will 
take up a lot of computing resources of the AP, resulting 
in congestion or even DOS at the AP. (3) in this method, 
the  AP  should  be  redesigned  to  have  the  ability  to  sign 
users’ information, which maybe expensive or infeasible 
under some situation. 
In  [4],  Yao  Zheng,  etc.  propose  a  location  verification 
strategy which uses location tags proximity test to verify 
the authenticity of user’s current location to ensure safety 
calls. However, this method is only used for specific users 
or  groups  instead  of  the  whole  social  network  service. 
Moreover,  the  method  only  compares  the  positions 
similarity, not verifies the authenticity of the position, it 
has some vulnerability. In this method, if two users want 
to  share  information  through  location  tags,  they  must 
generate  location  tags  at  the  same  time,  it’s  difficult  to 
ensure users acquiring location tags at the same time. The 
problem  of  synchronization  is  a  big  challenge  for  this 
method. In this paper, we also use location tags to verify 
the authenticity of user’s location, we require user submit 
her or his location information (latitude and longitude) and 
use  location  tags  to  verify  the  authenticity  of  location 
information,  our  scheme  is  used  for  all  the  users  in  the 
social network service, not for specific users or groups. In 
[4],  the  author  uses  the  location  tag  proximity  test  to 
ensure the safety calls, while in our paper we use location 
tag  proximity  test  to  verify  the  authenticity  of  location 
information  users  submitted.  And  we  use  some  methods 
solve the problem 
  of  synchronization,  which  makes  our  scheme  more 
effective. 
Location Tags
3
A  location  tag  can  be  regarded  as  a  token  of  proof 
associated with a point in space and time. It is a collection 
tags 
to 
location 
realize 
it 
of signals presented at a certain location at a certain time. 
A  good  location  tag  should  be  irreproducible  and 
randomness.  Irreproducibility  means  it  is  impossible  to 
generate the same location tags at the same location at two 
different times T1, T2. This can prevent a malicious user 
forging 
location  cheating 
effectively.  Randomness  means 
to 
is 
generate the same location tags in two different locations 
L1, L2 at the same time. These two characteristics need 
location tags has high entropy. In our scheme, we adopt 
two possible sources of location tags: (1) 802.11 frames in 
wireless  network.  (2)  Cell-phone  control  messages  from 
Base Station. We consider 802.11 frame headers as a good 
location tags sources, as it has high entropy. However, due 
to 802.11`s coverage is limited, in some locations there is 
no 802.11 signal, so we introduce the base station signals 
as a complement  to expand  the application scope of our 
scheme. 
impossible 
4    System Model 
We propose a location verification scheme, which is based 
on location tag proximity test, to verify the authenticity of 
the submitted location information. Our scheme consists 
of  three  participants,  as  shown  in  “Figure 1”:  1.  A  user 
(User) uses APP on his or her mobile terminal to send a 
location  request  to  the  social  network  service  provider 
(Server). 2. The Server verifies the identity of the user. If 
the verification is successful, the Server sends the user a 
signature contains the user’s identity and a timestamp. 3. 
After  receiving  the  response  from  server,  the  APP  on 
user’s mobile terminal begins to scan wireless signals in 
the user’s current position (including the 802.11 and cell-
mobile  control  messages  from  base  station)  to  generate 
location tags, and works out the position information such 
as  latitude  and  longitude  of  user  current  position,  then 
sends the signature getting from server, the location tags 
and  the  position  information  to  the  server. 4.  When  the 
server  receives 
the  position 
information,  the  server  will  validate  the  correctness  of 
signature  and  the  location  tags.  If  they  are  correct,  the 
server  will  answer  user`s  request,  otherwise  the  server 
regards this user as a dishonest user and not response to 
the user`s request. 
tags  and 
location 
the 
User
AP(cid:3)
Server
req(cid:3)
Frame(cid:3)
L,(cid:3)Tags,(cid:3)uid
S(cid:3)
Figure 1. This is the figure caption for an example figure 
showing the procedure of location verification. 
(cid:3)
4.1 Bloom Filter
In  our  scheme,  we  use  Bloom  filter  as  the  storage  of 
location  tags.  The  Bloom  filter  can  be  used  to  retrieve 
whether an element is in a collection. The best advantage 
of bloom filter is its space efficiency and query time is far 
better than other algorithms. Bloom filter is actually an m-
bit  binary  array,  and  it  uses  k  mutual  independent  hash 
()kH (cid:726)
functions 
(cid:94) (cid:96)
  to insert and query the data. In a Bloom 
1,0 (cid:111)(cid:13)
filter for the storage structure of the comparative tests, it 
maybe occur false positives, but not false negatives. 
()2H (cid:712) ()3H (cid:712) (cid:258) (cid:712)
()1H (cid:712)
(cid:94) (cid:96) mlog1,0
4.2 Location-based Services Request 
When  arriving  to  a  specific  location,  the  User  uses  the 
application  (App)  on  their  mobile  terminal  to  send  a 
location  request  (req)  to  the  Server.  The  req  contains 
User’s  identity (uid) and a nonce generated by  the App. 
After  receiving  the  request,  the  Server  will  verify  the 
identity  of  the  User.  If  the  validation  is  successful,  the 
Server  will  generate  a  timestamp  and  save  it.  Then  the 
()H   to  compute  the 
Server  use  secure  hash  function 
digital digest of the concatenation of the uid, nonce and 
timestamp.  Next,  the  Server  will  sign  the  digital  digest 
  to  generate  a 
with  the  Server’s  private  key 
signature  S.  After  that,  the  Server  sends  S  to  the  User. 
Some  malicious  user  could  tap  and  capture  a  correct 
uploading location tag and then replay it to social network 
server or the send it to other users to help them complete 
location  cheating.  In  our  scheme,  we  use  signature  S, 
which containing timestamp and the identity of the user, to 
prevent replay attacks and collusion attacks. 
(1)
(cid:96) server
)
req
(cid:94)
uidH
,
(cid:94)
uid
(cid:32)
nonce
,
serverK
(2)(cid:3)
(cid:32)
S
(
K
(cid:96)
nonce
,
timestamp
(cid:3)
4.3 Location Tags Generation 
When the User receives the Server`s respond, the App on 
User`s mobile terminal begins to scan and collect wireless 
signals  in  user`s  current  location  (including  the  802.11 
signals and cell-mobile control messages from base station) 
to generate location tags, and works out the latitude and 
longitude of the User’s current position. The details of the 
procedure are as follows: 
1. The  App  on  user`s  mobile  terminal  starts  to  scan 
wireless signals. 
into 
results 
(cid:96)nf
scan 
(cid:94)
f
,...,
1(cid:32)
2. When  the  App  finishes  scanning,  the  App  classifies 
collections 
  according to the signal type such as 
if   represent a collection of 
if
the 
f
WIFI, GSM, LTE, etc. 
one  signal  type.  For  example,  suppose  the 
different 
3. We use a set of hash function 
if
represents  the  signal  collection  of  802.11g, 
contain all the 802.11g frame headers the App scanned, 
(cid:94)
www
f
,
(cid:32)
where 
i.e.
i
1
3
iwi
m
(
,
)
,1
(cid:152)(cid:152)(cid:152)(cid:32)
  represent a WIFI frame headers the 
App collected. 
(cid:96)m
w
,...,
, 
,
2
setH   to construct a 
ifB .  The  Bloom  filter  can  be 
bloom  filter  bit  array
used to retrieve whether an element is in a collection. 
Its advantage is its space efficiency and query time is 
far  better  than  other  algorithms.  The  Bloom  filter 
actually is a one m-bit binary vector generated by a set 
of hash functions; it has the irreversible characteristics 
of the hash table. So we use it to prevent forgery and 
tampering. This hash function set is known only by the 
App and the Server. Take 802.11 as an example, the 
if
method  of  transforming 
ifB   is as follows(cid:726)
into 
Firstly, the App extracts BSSID (Basic Service Set 
Identifier, which is the unique MAC address of AP) 
from kw .  Then,  the  App  concatenates  it  and 
signature S from server together to generate a record
T
.  Next,  the  App  uses  hash 
k
ifB .  After 
function  set 
ifB
(cid:96)S
|
setH   to  insert 
generating  all  the  bit  arrays,  we  join  all 
together to generate a location tag. 
B
mw   from  collection 
kT   into
(cid:94)
BB
Tags
(cid:94)
w
k
,...,
  (3) 
BSSID
(cid:32)
(cid:32)
,
(cid:96)nf
f
f
2