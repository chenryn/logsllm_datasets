### Adding Services to Nagios for Remote Machine Monitoring

**Last Updated: May 1, 2007 | Page 10 of 18 | Copyright (c) 1999-2007 Ethan Galstad**

#### IV. Create Host and Service Definitions

To monitor a remote Linux/Unix machine, you need to create object definitions. These can be placed in a new file or added to an existing configuration file.

**Step 1: Create a New Template for Linux Boxes**

It is best practice to create a new template for each type of host you will be monitoring. Here is an example of a new template for Linux boxes:

```plaintext
define host{
    name                    linux-box ; Name of this template
    use                     generic-host ; Inherit default values
    check_period            24x7
    check_interval          5
    retry_interval          1
    max_check_attempts      10
    check_command           check-host-alive
    notification_period     24x7
    notification_interval   30
    notification_options    d,r
    contact_groups          admins
    register                0 ; DO NOT REGISTER THIS - IT IS A TEMPLATE
}
```

Note that the `linux-box` template inherits default values from the `generic-host` template, which is defined in the `localhost.cfg` sample file provided with the Nagios quickstart installation guide.

**Step 2: Define a New Host for the Remote Linux/Unix Box**

Next, define a new host that references the `linux-box` template:

```plaintext
define host{
    use                     linux-box ; Inherit default values from the template
    host_name               remotehost ; The name we're giving to this server
    alias                   Fedora Core 6 ; A longer name for the server
    address                 192.168.0.1 ; IP address of the server
}
```

**Step 3: Define Services for Monitoring the Remote Linux/Unix Box**

The following service definitions will use the sample commands defined in the `nrpe.cfg` file on the remote host.

- **CPU Load:**

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     CPU Load
    check_command           check_nrpe!check_load
}
```

- **Current Users:**

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     Current Users
    check_command           check_nrpe!check_users
}
```

- **Free Drive Space on /dev/hda1:**

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     /dev/hda1 Free Space
    check_command           check_nrpe!check_hda1
}
```

- **Total Processes:**

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     Total Processes
    check_command           check_nrpe!check_total_procs
}
```

- **Zombie Processes:**

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     Zombie Processes
    check_command           check_nrpe!check_zombie_procs
}
```

These are the basic service definitions for monitoring the remote host. For additional services, refer to the "Customizing Your Configuration" section starting on page 13.

**V. Restart Nagios**

At this point, you have installed the `check_nrpe` plugin and added host and service definitions for monitoring the remote Linux/Unix machine. Now, it's time to make these changes live.

1. Verify your Nagios configuration files:

```sh
/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
```

2. If there are errors, fix them. If everything is fine, restart Nagios:

```sh
service nagios restart
```

You should now see the host and service definitions you created in the Nagios web interface. Within a few minutes, Nagios should have the current status information for the remote Linux/Unix machine.

For more detailed monitoring, read the next section. Upgrading the version of NRPE is also straightforward; the initial installation is the most challenging part.

**IV. Customizing Your Configuration**

If you want to monitor additional services on the remote Linux/Unix box, follow these steps:

1. **Add a new command definition to the `nrpe.cfg` file on the remote host.**
2. **Add a new service definition to your Nagios configuration on the monitoring host.**

**Example: Monitoring Swap Usage**

**a) Remote Host Configuration**

1. Use the `check_swap` plugin to monitor swap usage. Ensure it is installed in `/usr/local/nagios/libexec`.
2. Log in as the `nagios` user on the remote host.
3. Run the `check_swap` plugin manually and tweak the command line options to set the desired warning and critical thresholds. For example, to set a critical alert if swap free space is less than 10% and a warning if free space is less than 20%:

```sh
/usr/local/nagios/libexec/check_swap -w 20% -c 10%
```

4. Open the `nrpe.cfg` file and add a new `check_swap` command definition:

```sh
vi /usr/local/nagios/etc/nrpe.cfg
```

Add the following line and save the file:

```plaintext
command[check_swap]=/usr/local/nagios/libexec/check_swap -w 20% -c 10%
```

5. If running the NRPE daemon as a standalone daemon, restart it. If running under `inetd/xinetd`, no further action is needed.

**b) Monitoring Host Configuration**

1. On the monitoring host, add a new service definition for monitoring the swap usage on the remote host:

```plaintext
define service{
    use                     generic-service
    host_name               remotehost
    service_description     Swap Usage
    check_command           check_nrpe!check_swap
}
```

2. Verify your Nagios configuration files and restart Nagios:

```sh
/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
service nagios restart
```

You are now monitoring a new service on the remote host using the NRPE addon.

**V. Upgrading NRPE**

**a) Monitoring Host Upgrade**

1. Log in as the `nagios` user and create a directory for storing downloads:

```sh
mkdir ~/downloads
cd ~/downloads
```

2. Download the latest NRPE source code tarball:

```sh
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
```

3. Extract the tarball and compile the NRPE addon:

```sh
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
./configure
make all
```

4. Install the NRPE plugin:

```sh
make install-plugin
```

You are done on the monitoring server!

**b) Remote Host Upgrades**

1. Log in as the `nagios` user and create a directory for storing downloads:

```sh
mkdir ~/downloads
cd ~/downloads
```

2. Download the latest NRPE source code tarball:

```sh
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
```

3. Extract the tarball and compile the NRPE addon:

```sh
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
./configure
make all
```

4. Install the NRPE daemon:

```sh
make install-daemon
```

5. If running the NRPE daemon as a standalone daemon, kill the old daemon process and start the new one.

You are done with the upgrade on the remote host!

**VI. Troubleshooting**

Here are some tips for troubleshooting common errors with the NRPE addon. For issues not covered here, send an email to the `nagios-users` mailing list. More information on the mailing lists can be found at: [http://www.nagios.org/support/](http://www.nagios.org/support/)

- **Error: "CHECK_NRPE: Socket timeout after 10 seconds" or "Connection refused or timed out"**

  - The command took longer than 10 seconds to execute. Increase the timeout with the `-t` option:
  
    ```sh
    /usr/local/nagios/check_nrpe -H localhost -c somecommand -t 30
    ```
  
  - The NRPE daemon is not installed or running. Verify with:
  
    ```sh
    ps axuw | grep nrpe
    netstat -at | grep nrpe
    ```
  
  - There is a firewall blocking communication. Check firewall rules (e.g., `iptables`) and ensure there are no physical firewalls between the hosts.

- **Error: "CHECK_NRPE: Received 0 bytes from daemon. Check the remote server logs for an error message."**

  - Check the remote server logs for an error message. This could indicate an SSL handshake issue. Verify OpenSSL versions and compatibility.

- **Error: "NRPE: Unable to read output"**

  - The command did not return any character output. Verify the command definition and run the command manually to ensure it returns text output.

- **Error: "NRPE: Command 'x' not defined"**

  - Add the command definition for `x` in the `nrpe.cfg` file on the remote host. If running the NRPE daemon as a standalone daemon, restart it.

- **Error: "NRPE: Command timed out after x seconds"**

  - Increase the command timeout by editing the `command_timeout` variable in the `nrpe.cfg` file. If running the NRPE daemon as a standalone daemon, restart it.

**Debugging Other Problems**

- Edit the `nrpe.cfg` file and change `debug=0` to `debug=1`. Restart the NRPE daemon if it is running as a standalone daemon. Check the log files for debugging information.

**Last Updated: May 1, 2007 | Page 18 of 18 | Copyright (c) 1999-2007 Ethan Galstad**