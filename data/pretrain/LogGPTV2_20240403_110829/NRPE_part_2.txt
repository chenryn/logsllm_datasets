You are now ready to start adding services that should be monitored on the remote machine to the Nagios
configuration...
Last Updated: May 1, 2007 Page 10 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
iv. Create host and service definitions
You'll need to create some object definitions in order to monitor the remote Linux/Unix machine. These definitions
can be placed in their own file or added to an already exiting object configuration file.
First, its best practice to create a new template for each different type of host you'll be monitoring. Let's create a
new template for linux boxes.
define host{
name linux-box ; Name of this template
use generic-host ; Inherit default values
check_period 24x7
check_interval 5
retry_interval 1
max_check_attempts 10
check_command check-host-alive
notification_period 24x7
notification_interval 30
notification_options d,r
contact_groups admins
register 0 ; DONT REGISTER THIS - ITS A TEMPLATE
}
Notice that the linux-box template definition is inheriting default values from the generic-host template, which is
defined in the sample localhost.cfg file that gets installed when you follow the Nagios quickstart installation guide.
Next, define a new host for the remote Linux/Unix box that references the newly created linux-box host template.
define host{
use linux-box ; Inherit default values from a template
host_name remotehost ; The name we're giving to this server
alias Fedora Core 6 ; A longer name for the server
address 192.168.0.1 ; IP address of the server
}
Next, define some services for monitoring the remote Linux/Unix box. These example service definitions will use
the sample commands that have been defined in the nrpe.cfg file on the remote host.
The following service will monitor the CPU load on the remote host. The "check_load" argument that is passed to
the check_nrpe command definition tells the NRPE daemon to run the "check_load" command as defined in the
nrpe.cfg file.
define service{
use generic-service
host_name remotehost
service_description CPU Load
check_command check_nrpe!check_load
}
The following service will monitor the the number of currently logged in users on the remote host.
define service{
use generic-service
host_name remotehost
service_description Current Users
check_command check_nrpe!check_users
}
The following service will monitor the free drive space on /dev/hda1 on the remote host.
define service{
use generic-service
host_name remotehost
service_description /dev/hda1 Free Space
check_command check_nrpe!check_hda1
}
Last Updated: May 1, 2007 Page 11 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
The following service will monitor the total number of processes on the remote host.
define service{
use generic-service
host_name remotehost
service_description Total Processes
check_command check_nrpe!check_total_procs
}
The following service will monitor the number of zombie processes on the remote host.
define service{
use generic-service
host_name remotehost
service_description Zombie Processes
check_command check_nrpe!check_zombie_procs
}
Those are the basic service definitions for monitoring the remote host. If you would like to add additional services
to be monitored, read the "Customizing Your Configuration" section starting on page 13.
v. Restart Nagios
At this point you've installed the check_nrpe plugin and addon host and service definitions for monitoring the
remote Linux/Unix machine. Now its time to make those changes live...
Verify your Nagios configuration files.
/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
If there are errors, fix them. If everything is fine, restart Nagios.
service nagios restart
That's it! You should see the host and service definitions you created in the Nagios web interface. In a few
minutes Nagios should have the current status information for the remote Linux/Unix machine.
Since you might want to monitor more services on the remote machine, I would suggest you read the next section
as well. :-)
Also, when it comes time to upgrade the version of NRPE you're running, its pretty easy to do. The initial
installation was the toughest, but upgrading is a snap.
Last Updated: May 1, 2007 Page 12 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
44.. CCUUSSTTOOMMIIZZIINNGG YYOOUURR CCOONNFFIIGGUURRAATTIIOONN
You'll might want to monitor more services on the remote Linux/Unix box than those that are described in this
documentation. This is easy to accomplish.
Anytime you want to monitor a new service on a remote host using the NRPE addon, you have to do two things:
1. Add a new command definition to the nrpe.cfg file on the remote host
2. Add a new service definition to your Nagios configuration on the monitoring host
Let's say you want to monitor the swap usage on the remote Linux/Unix host. Here are the steps you'd need to
follow...
a) Remote Host Configuration
You can use the check_swap plugin to monitor swap usage on the machine. Assuming you followed the
installation instructions in this document, the check_swap plugin should already be installed in
/usr/local/nagios/libexec.
Login as the nagios user on the remote host.
Run the check_swap plugin manually and tweak the command line options to specify the desired warning and
critical free swap space thresholds. Make sure the full command line returns the expected output you want from
the plugin. For this example, let's say you want a critical alert if swap free space is less than 10% and a warning if
free space is less than 20%. Here's the command line that would accomplish that:
/usr/local/nagios/libexec/check_swap -w 20% -c 10%
Now that you know the command line that should be execute, open the NRPE configuration file.
vi /usr/local/nagios/etc/nrpe.cfg
Add a new check_swap command definition that uses the command line from above and save the file.
command[check_swap]=/usr/local/nagios/libexec/check_swap -w 20% -c 10%
If you're running the NRPE daemon as a standalone daemon you'll need to restart it. If you're running it under the
inetd/xinetd superserver you don't need to do anything more.
Last Updated: May 1, 2007 Page 13 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
b) Monitoring Host Configuration
On the monitoring host, you need to define a new service for monitoring the swap usage on the remote host. Add
the following entry to one of your object configuration files.
define service{
use generic-service
host_name remotehost
service_description Swap Usage
check_command check_nrpe!check_swap
}
Notice that the check commands is passing "check_swap" to the check_nrpe command definition. This will cause
the NRPE daemon to run the check_swap command that was defined in the nrpe.cfg file on the remote host in the
previous step.
Next, verify your Nagios configuration files and restart Nagios.
/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
service nagios restart
That's it! You are now monitoring a new service on the remote host using the NRPE addon.
Last Updated: May 1, 2007 Page 14 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
55.. UUPPGGRRAADDIINNGG
At some point in time you'll want to upgrade the version of the NRPE addon that you're running. The upgrade
process is fairly pain free. Here are the details...
a) Monitoring Host Upgrade
On the monitoring host (the machine that runs Nagios), you only have to upgrade the check_nrpe plugin. Here's
how...
Login as the nagios user and create a directory for storing the downloads.
mkdir ~/downloads
cd ~/downloads
Download the source code tarball of the NRPE addon (visit http://www.nagios.org/download/ for links to the latest
versions). At the time of writing, the latest version of NRPE was 2.8.
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
Extract the NRPE source code tarball.
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
Compile the NRPE addon.
./configure
make all
Install the NRPE plugin.
make install-plugin
You're done on the monitoring server!
[ Continued on Next Page ]
Last Updated: May 1, 2007 Page 15 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
b) Remote Host Upgrades
You'll need to upgrade the NRPE daemons on all remote hosts that are being monitored using the NRPE addon.
Here's how...
Login as the nagios user and create a directory for storing the downloads.
mkdir ~/downloads
cd ~/downloads
Download the source code tarball of the NRPE addon (visit http://www.nagios.org/download/ for links to the latest
versions). At the time of writing, the latest version of NRPE was 2.8.
wget http://osdn.dl.sourceforge.net/sourceforge/nagios/nrpe-2.8.tar.gz
Extract the NRPE source code tarball.
tar xzf nrpe-2.8.tar.gz
cd nrpe-2.8
Compile the NRPE addon.
./configure
make all
Install the NRPE daemon.
make install-daemon
If you're running the NRPE daemon as a standalone daemon, first kill the old daemon process and then start the
(new) daemon up again.
You're done with the upgrade on the remote host!
Last Updated: May 1, 2007 Page 16 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
66.. TTRROOUUBBLLEESSHHOOOOTTIINNGG
Here are some tips for troubleshooting some of the more common errors with the NRPE addon. If you encounter
problems that aren't covered here, send an email to the nagios-users mailing list. More information on the mailing
lists can be found at: http://www.nagios.org/support/
The check_nrpe plugin returns "CHECK_NRPE: Socket timeout after 10 seconds" or "Connection refused
or timed out"
This error can indicate several things:
â€“ The command that the NRPE daemon was asked to run took longer than 10 seconds to execute. This is the
most likely cause if the error message was "CHECK_NRPE: Socket timeout after 10 seconds". Use the -t
command line option to specify a longer timeout for the check_nrpe plugin. The following example will
increase the timeout to 30 seconds:
/usr/local/nagios/check_nrpe -H localhost -c somecommand -t 30
â€“ The NRPE daemon is not installed or running on the remote host. Verify that the NRPE daemon is running as
a standalone daemon or under inetd/xinetd with one of the following commands:
ps axuw | grep nrpe
netstat -at | grep nrpe
â€“ There is a firewall that is blocking the communication between the monitoring host (which runs the check_nrpe
plugin) and the remote host (which runs the NRPE daemon). Verify that the firewall rules (e.g. iptables) that
are running on the remote host allow for communication and make sure there isn't a physical firewall that is
located between the monitoring host and the remote host.
The check_nrpe plugin returns "CHECK_NRPE: Received 0 bytes from daemon. Check the remote server
logs for an error message."
First thing you should do is check the remote server logs for an error message. Seriously. :-) This error could be
due to the following problem:
â€“ The check_nrpe plugin was unable to complete an SSL handshake with the NRPE daemon. An error
message in the logs should indicate whether or not this was the case. Check the versions of OpenSSL that
are installed on the monitoring host and remote host. If you're running a commercial version of SSL on the
remote host, there might be some compatibility problems.
The check_nrpe plugin returns "NRPE: Unable to read output"
This error indicates that the command that was run by the NRPE daemon did not return any character output.
This could be an indication of the following problems:
â€“ An incorrectly defined command line in the command definition. Verify that the command definition in your
NRPE configuration file is correct.
â€“ The plugin that is specified in the command line is malfunctioning. Run the command line manually to make
sure the plugin returns some kind of text output.
Last Updated: May 1, 2007 Page 17 of 18 Copyright (c) 1999-2007 Ethan Galstad
NNRRPPEE DDooccuummeennttaattiioonn
The check_nrpe plugin returns "NRPE: Command 'x' not defined"
This error means that you didn't define command x in the NRPE configuration file on the remote host. On the
remote host, add the command definition for x. See the existing command definitions in the NRPE configuration
file for more information on doing this. If you're running the NRPE daemon as a standalone daemon (and not
under inetd or xinetd), you'll need to restart it in order for the new command to be recognized.
The check_nrpe plugin returns "NRPE: Command timed out after x seconds"
This error indicates that the command that was run by the NRPE daemon did not finish executing within the
specified time. You can increase the timeout for commands by editing the NRPE configuration file and changing
the value of the command_timeout variable. If you're running the NRPE daemon as a standalone daemon (and
not under inetd or xinetd), you'll need to restart it in order for the new timeout to be recognized.
How to go about debugging other problems...
When debugging problems it may be useful to edit the NRPE configuration file and change the debug=0 entry to
debug=1. Once you do that, restart the NRPE daemon if it is running as a standalone daemon. After you try using
the check_nrpe plugin again, you should be able to see some debugging information in the log files of the remote
host. Check your logs carefully â€“ they should be able to help provide clues as to where the problem lies...
Last Updated: May 1, 2007 Page 18 of 18 Copyright (c) 1999-2007 Ethan Galstad