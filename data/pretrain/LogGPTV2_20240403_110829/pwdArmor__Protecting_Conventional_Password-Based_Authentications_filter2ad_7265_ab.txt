whereas the challenge in OTP is identity-dependent because
it contains the user’s seed and hash count.
In our target deployment scenarios both Type-0 and
Type-1 protocols rely on the following assumption:
Assumption 1 U and H assume that messages passed be-
tween them will not be observed, or modiﬁed, by an attacker.
The strength of this assumption is dictated by the sce-
In Sclear, this assumption equates to “security by
nario.
obscurity.” In practice, this is an acceptable risk for many
low-value sites and services. In Stunnel, this assumption is
only valid when the tunnel is correctly established with the
legitimate host. Recall that phishers regularly trick users
into negating this assumption.
Attacking Type-0/1 Protocols
If Assumption 1 holds
then PWD, LEAK, and MITM breaks cannot occur in
Type-0/1 protocols. If Assumption 1 does not hold, then the
following attacks are possible:
Type-0
E
M PWD, LEAK, MITM LEAK, MITM
PWD, LEAK
Type-1
LEAK
2.3 Why not just use Type-2?
pwdArmor augments Type-0/1 protocols with the prop-
erties of a Type-2 protocol. As both pwdArmor and Type-
2 protocols require new client-side software, what advan-
tages does pwdArmor offer over a Type-2 protocol? The
4In PAKE protocols password-equivalent and password-dependent are
called balanced and augmented, respectively.
445445
primary advantage is that pwdArmor can reuse existing
(legacy) password veriﬁer databases while maintaining their
password-dependence.
Current password-equivalent Type-2 protocols (e.g.,
EKE) can reuse existing veriﬁer databases, however, doing
so eliminates any password-dependent beneﬁts these veri-
ﬁers may have enjoyed with their original password proto-
col. Such a transition negates a signiﬁcant beneﬁt of the
original protocol, since the veriﬁer, if it is stolen, can now
immediately be used to impersonate the user.
Current password-dependent Type-2 protocols (e.g.,
SRP) require databases of their own specialized password
veriﬁers in order to preserve password-dependence. Rely-
ing on existing veriﬁers makes these protocols password-
equivalent, thus negating their password-dependent bene-
ﬁts. Requiring new veriﬁers introduces a signiﬁcant deploy-
ment overhead and potentially breaks compatibility with
legacy systems that require the old veriﬁer databases.
A second advantage is that pwdArmor provides optional
privacy protection to the identity of the user.
3 pwdArmor
Goals The primary mission of a password protocol is to
ensure that pwdU is required to impersonate U to H. In ad-
dition to this aim, pwdArmor is designed to meet the fol-
lowing goals:
1. Eliminate PWD breaks.
2. Limit the damage when Assumption 1 does not hold.
3. Detect MITM attacks.
4. Allow H to dictate the difﬁcultly of MITM breaks.
The ﬁrst goal is to limit the avenues for users to inadver-
tently disclose their passwords to phishers, eavesdroppers,
and other attackers.
The second goal is motivated by the effectiveness of
phishers in negating Assumption 1, even if H employs
server-authenticated, encrypted tunnels to strengthen this
assumption. As users can be easily tricked into negating
a tunnel’s beneﬁts, pwdArmor uses a secure tunnel, if avail-
able, in the following capacities: 1) Improved identiﬁcation
of H to detect potential MITM attacks before they happen
and to prevent LEAK breaks by M; 2) Protect, after a suc-
cessful authentication, the resulting session; and 3) Provide
privacy protection to IDU during the authentication.
The third goal is based in the observation that, in both
Sclear and Stunnel, it is possible to detect a MITM attack by
using information (e.g., domain names, network addresses,
digital certiﬁcates used in a tunnel’s creation) that is readily
accessible to each party. Adding, or strengthening as the
Figure 1. pwdArmor uses middleware to aug-
ment conventional password protocols. Both
the server-side pwdArmor and conventional
password modules require access to the ver-
iﬁer database. pwdArmor uses the veriﬁer
to secure the user’s authentication response,
while the conventional password protocol
uses it to verify the password.
case may be, server authentication also helps assure users
that they are communicating with the desired host and not
just a phisher that accepts any password and then tries to
elicit additional information from their victims.
The fourth goal captures the intuitive idea that H’s choice
of Stunnel instead of Sclear should complicate M’s ability
to successfully achieve a MITM break. This idea is not
reﬂected in existing tunnels (e.g., TLS, SSH) as they rely
solely on users to detect MITM attacks and, as such, hosts
have no say in the difﬁcultly of MITM breaks.
For the purposes of evaluating pwdArmor, E is consid-
ered successful if she obtains LEAK or PWD breaks with
a non-negligible advantage over online guessing. With re-
spect to M, LEAK breaks are acceptable and therefore she
is considered successful only if she obtains a non-negligible
advantage over ofﬂine guessing. Additionally, MITM
breaks are unacceptable, with the exception of the routing-
MITM attack when H uses Sclear as this attack in this sce-
nario is virtually undetectable.
High Level Approach pwdArmor leverages middleware
(see Figure 1) to wrap unmodiﬁed Type-0/1 protocols and
bind them to an external secure tunnel, if present. pwd-
Armor encrypts U’s authentication response RU to ensure
its conﬁdentiality and integrity. This encrypted message
also contains the identifying host information (as observed
by U), hereafter referred to as IDH, in order to facilitate
the detection, by H, of MITM attacks. As this information
is scenario-dependent, H can also detect if U is using pwd-
Armor in a different scenario than expected (e.g., H requires
logins in Stunnel, but M has tricked U into using Sclear).
U,H ) used to encrypt this message is composed
of two components: 1) κU,H, which is created using a Difﬁe-
The key (κenc
446446
U
. The use
Hellman (DH) key exchange [10]; and 2) pwdver
of κU,H ensures that E cannot be successful without compro-
mising the assumptions of DH. As DH is subject to a MITM
attack, M can force U and H to derive different values for
κU,H, each known to M. In this event, LEAK breaks are
U,H ensures
possible, however, the pwdver
that she cannot decrypt the message and obtain RU or mod-
ify IDH. Without modifying IDH, it is unlikely a MITM
break will be successful.
component of κenc
U
Once the authentication succeeds, then a separate key
derived from κU,H is suitable for use as a mutually-
authenticated key which provides forward secrecy.
3.1 Framework
The pwdArmor messages are illustrated below:
H
U
IDU, nU
gx, nH, α [, C]
−−−−−−−−−−→
←−−−−−−−−−−
−−−−−−−−−−→
←−−−−−−−−−−
U,H (IDH, IDU [, RH])
(IDU, IDH, RU)
gy, Eκenc
MACκmac
U,H
9>>=>>; Round One
9>>>=>>>; Round Two
Round One U begins by submitting her identiﬁer and a
nonce nU. H responds with its DH public parameter gx and
its own nonce nH. H’s response also includes α (how to
derive pwdver
from pwdU) as well as the challenge, if any,
supplied by the underlying password protocol.
U
Round Two Using the elements from H’s message, U de-
rives κenc
U,H . Speciﬁcally:
κU,H = P RFr(gxy); r = nUknH
, “enc”)
U,H = P RFκU,H(pwdver
κenc
U
U,H
where P RF is a family of pseudorandom functions (e.g.,
HMAC [25] is commonly used as a PRF). U then returns its
encrypted response, along with its own DH public parame-
(·) allows U to securely
ter gy, to H. Including IDU in Eκenc
assert her identiﬁer to H. As the original transmission of
IDU is sent without any cryptographic protection, M could
modify it so that the user logs into a different account (this
assumes that these accounts share the same password).
and κmac
U,H = P RFκU,H(pwdver
In the ﬁnal message H demonstrates to U that
it
,“mac”)
knows both pwdver
through the use of a message authentication code (MAC)
function (e.g., HMAC). This message must be sent only
if the user authentication succeeds, otherwise, it consti-
tutes a LEAK break as the initiator of an authentication
U,H =
knows κU,H. After U veriﬁes H’s message, the key κother
P RFκU,H(“other”) can be used by other applications as a
mutually authenticated key that provides forward secrecy.
U
U
Identifying H (IDH) The scenario determines IDH:
Sclear IDH = Network identiﬁers (e.g., domain name, net-
work address).
Stunnel IDH = H’s certiﬁcate and network identiﬁers.
Privacy Protection If Stunnel cannot be used by H, but
IDU must be kept secret from E, then IDU can be optionally
encrypted using κpriv
U,H = P RFκU,H(“priv”) before it is sent
to H (this is a well known approach to providing privacy
when DH is involved). There are two different situations to
consider:
Challenge and α are not Identity-dependent IDU is re-
moved from the ﬁrst message, encrypted using the
key κpriv
, and then added to the third message. The
encrypted IDU must be external to the contents of
is dependent on pwdver
,
Eκenc
U,H
which cannot be retrieved by H before IDU is known.
(·) as the key κenc
U,H
U,H
U
U,H
Challenge or α is Identity-dependent IDU is again en-
crypted with κpriv
, and as either C or α is identity-
dependent and may leak identifying information, both
of these values are also encrypted with κpriv
before
they are sent to U. Since H cannot know the correct
values for C and α before it learns IDU, an extra round
of messages is required since H’s ﬁrst response cannot
(·) until
include these values and U cannot send Eκenc
these values are received.
U,H
U,H
4 Security Analysis
Attacking pwdArmor As with conventional password
protocols, if Assumption 1 holds the PWD, LEAK, and
MITM breaks cannot occur in pwdArmor.
If Assump-
tion 1 does not hold, then the following attacks are possible
(note that both Type-0 and Type-1 protocols have the same
assurances when used with pwdArmor):
Sclear
None
E
M LEAK, MITM∗
∗ Only if M uses a routing-MITM attack
Stunnel
None
LEAK
The remainder of this section provides arguments which
justify the claims made above and explores the impact of
compromised session and long-term secrets.
Thwarting PWD breaks Neither E nor M can mount
successful PWD breaks as the conventional password pro-
tocol authentication response RU is encrypted using κenc
U,H ,
which is based, in part, on pwdver
. In effect, an attacker
must know the password veriﬁer before she can attack this
U
447447
protocol to obtain pwdU. Note that while obtaining pwdver
constitutes a LEAK break, a LEAK break does not neces-
sarily mean that the attacker has obtained pwdver
.