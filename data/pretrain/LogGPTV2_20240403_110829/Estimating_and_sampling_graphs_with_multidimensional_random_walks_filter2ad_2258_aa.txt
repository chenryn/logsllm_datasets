title:Estimating and sampling graphs with multidimensional random walks
author:Bruno F. Ribeiro and
Donald F. Towsley
Estimating and Sampling Graphs with
Multidimensional Random Walks
Bruno Ribeiro
Computer Science Department
Don Towsley
Computer Science Department
University of Massachusetts at Amherst
University of Massachusetts at Amherst
Amherst, MA, 01002
PI:EMAIL
Amherst, MA, 01002
PI:EMAIL
ABSTRACT
Estimating characteristics of large graphs via sampling is
a vital part of the study of complex networks. Current
sampling methods such as (independent) random vertex and
random walks are useful but have drawbacks. Random ver-
tex sampling may require too many resources (time, band-
width, or money). Random walks, which normally require
fewer resources per sample, can suﬀer from large estimation
errors in the presence of disconnected or loosely connected
graphs. In this work we propose a new m-dimensional ran-
dom walk that uses m dependent random walkers. We show
that the proposed sampling method, which we call Fron-
tier sampling, exhibits all of the nice sampling properties
of a regular random walk. At the same time, our simula-
tions over large real world graphs show that, in the presence
of disconnected or loosely connected components, Frontier
sampling exhibits lower estimation errors than regular ran-
dom walks. We also show that Frontier sampling is more
suitable than random vertex sampling to sample the tail of
the degree distribution of the graph.
Categories and Subject Descriptors
G.3 [Probability and Statistics]: Statistical computing
General Terms
Experimentation
Keywords
Frontier Sampling, Random Walks, MCMC, Estimates, Power
Laws, Assortativity, Global Clustering Coeﬃcient
1.
INTRODUCTION
A number of recent studies [7, 11, 15, 19, 20, 26, 30, 29,
36] (to cite a few) are dedicated to the characterization of
complex networks. A complex network is a network with
non-trivial topological features (features that do not occur
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
in simple networks such as lattices or random networks).
Examples of such networks include the Internet, the World
Wide Web, social, business, and biological networks [7, 28].
This work represents a complex network as a directed graph
with labeled vertices and edges. A label can be, for in-
stance, the degree of a vertex or, in a social network setting,
someone’s hometown. Examples of network characteristics
include the degree distribution, the fraction of HIV positive
individuals in a population [24], or the average number of
copies of a ﬁle in a peer-to-peer (P2P) network [16].
Characterizing the labels of a graph requires querying ver-
tices and/or edges; each query has an associated cost in re-
sources (time, bandwidth, money). Characterizing a large
graph by querying the whole graph is often too costly. As a
result, researchers have turned their attention to the estima-
tion of graph characteristics based on incomplete (sampled)
data. In this work we present a new tool, Frontier Sampling,
to characterize complex networks. In what follows random
vertex (edge) sampling refers to sampling vertices (edges) in-
dependently and uniformly at random (with replacement).
Distinct sampling strategies have diﬀerent resource re-
quirements depending on the network being sampled. For
instance, in a network where each vertex is assigned a unique
user-id (e.g., travelers and their passport numbers, Face-
book, MySpace, Flickr, and Livejournal) it is a widespread
practice to perform random vertex sampling by querying
randomly generated user-ids. This approach can be resource-
intensive if the user-id space is sparsely populated as the
hit-to-miss ratio is low (e.g., less than 10% of all MySpace
user-ids between the highest and lowest valid user-ids are
currently occupied [30]). Another way to sample a network
is by querying edges instead of vertices. Randomly sam-
pling edges can be harder than randomly sampling vertices
if edges are not be associated to unique IDs (or if edge IDs
cannot be randomly queried). We summarize some draw-
backs of random vertex and edge sampling:
• Random edge sampling may be impractical when edges
cannot be randomly queried (e.g., online social net-
works like Facebook [15], MySpace [30], and Twitter
or a P2P network like Bittorrent).
• Random vertex sampling may be undesirable when
user-ids are sparsely populated (low hit-to-miss ratio)
and queries are subject to resource constraints (e.g.,
queries are rate-limited in Flickr, Livejournal [26], and
Bittorrent [18]). In a P2P network like Bittorrent, a
client can randomly sample peers (vertices) by query-
ing a tracker (server); however, trackers may rate-limit
client queries [18].
390• Even when random vertex sampling is not severely
resource-constrained, some characteristics may be bet-
ter estimated with random edge sampling (e.g., the tail
of the degree distribution of a graph).
An alternative, and often cheaper, way to sample a network
is by means of a random walk (RW). A RW samples a graph
by moving a particle (walker) from a vertex to a neighboring
vertex (over an edge). By this process edges and vertices are
sampled. The probability by which the random walker se-
lects the next neighboring vertex determines the probability
by which vertices and edges are sampled. In this work we
are interested in random walks that sample edges uniformly.
The edges sampled by RW can then be used to obtain un-
biased estimates of a variety of graph characteristics (we
present two examples in Section 4).
In this work we assume that a random walker has the
ability to query a vertex to obtain all of its incoming and
outgoing edges (Section 4 details the reason behind this as-
sumption). This is possible for online networks such as Twit-
ter, LiveJournal [26], YouTube [26], Facebook [15], MyS-
pace [30], P2P networks [29], and the arXiv citations net-
work. We revisit the theory behind random walks in Sec-
tion 4.
Sampling graphs with random walks is not without draw-
backs. The accuracy of the estimates depends not only on
the graph structure but also on the characteristic being es-
timated. The graph structure can create distortions in the
estimates by “trapping” the random walker inside a sub-
graph. An extreme case happens when the graph consists
of two or more disconnected components (subgraphs). For
instance, wireless mobile social networks exhibit connection
graphs with multiple disconnected components [11]. But
even connected graphs can suﬀer from the same problem.
A random walker can get “temporarily trapped” and spend
most of its sampling budget exploring the local neighbor-
hood near where it got “trapped”. In the above scenarios
estimates may be inaccurate if the characteristics of the lo-
cal neighborhood diﬀer from the overall characteristic of the
graph. This problem is well documented (see [21]) and our
goal is to mitigate it.
Contributions
This work proposes a new m-dimensional random walk sam-
pling method (Frontier sampling) that, starting from a col-
lection of m randomly sampled vertices, preserves all of the
important statistical properties of a regular random walk
(e.g., vertices are visited with a probability proportional to
their degree). While the vertices are visited with a proba-
bility proportional to their degree, we show that the joint
steady state distribution of Frontier Sampling (the joint dis-
tribution of all m vertices) is closer to uniform (the starting
distribution) than that of m independent random walkers,
for any m > 0. This property has the potential to dramati-
cally reduce the transient of random walks.
In our simulations using real world graphs we see that
Frontier Sampling mitigates the large estimation errors caused
by disconnected or loosely connected components that can
“trap” a random walker and distort the estimated graph
characteristic, i.e., Frontier sampling (FS) estimates have
smaller Mean Squared Errors (MSEs) than estimates ob-
tained from regular random walkers (single and multiple in-
dependent walkers, reviewed in Section 4.4) in a variety of
scenarios.
We make two additional contributions: (1) we compare
random walk-based estimates to those obtained from ran-
dom vertex and random edge sampling. We show analyt-
ically that the tail of the degree distribution is better es-
timated using random edge sampling than random vertex
sampling. We observe from simulations over real world net-
works (in Section 6.4) that FS accuracy is comparable to
the accuracy of random edge sampling. These results help
explain recent empirical results [29]; (2) we present asymp-
totically unbiased estimators using the edges sampled by a
RW for the assortative mixing coeﬃcient (deﬁned in Sec-
tion 4.2.2) and the global clustering coeﬃcient (deﬁned in
Section 4.2.4).
Outline
The outline of this work is as follows. Section 2 presents
the notation used in this paper. Section 3 contrasts ran-
dom vertex with random edge sampling. Section 4 revisits
single and multiple independent random walk sampling and
estimation. Section 5 introduces Frontier Sampling (FS), a
sampling process that uses m dependent random walkers in
order to mitigate the high estimation errors caused by dis-
connected or loosely connected components. Section 5 also
shows that FS can be seen as an m-dimensional random
walk over the m-th Cartesian power of the graph (formally
deﬁned in Section 5). In Section 6 we see that FS outper-
forms both single and multiple independent random walkers
in a variety of scenarios. We also compare (independent)
random vertex and edge sampling with FS. Section 7 re-
views the relevant literature. Finally, Section 8 presents our
conclusions and future work.
2. DEFINITIONS
In what follows we present some deﬁnitions. Let Gd =
(V, Ed) be a labeled directed graph representing the (origi-
nal) network graph, where V is a set of vertices and Ed is a
set of ordered pairs of vertices (u, v) representing a connec-
tion from u to v (a.k.a. edges). We assume that each vertex
in Gd has at least one incoming or outgoing edge. The in-
degree of a vertex u in Gd is the number of distinct edges
(v1, u), . . . , (vi, u) into u, and its out-degree is the number
of distinct edges (u, v1), . . . , (u, vj) out of u. Some com-
plex networks can be modeled as undirected graphs. In this
case, when the original graph is undirected, we model Gd as
a symmetric directed graph, i.e., ∀(u, v) ∈ Ed, (v, u) ∈ Ed.
Let Lv and Le be a ﬁnite set of vertex and edge labels,
respectively. Each edge (u, v) ∈ Ed is associated with a set
of labels Le(u, v) ⊆ Le. For instance, the label of edge (u, v)
can be the in-degree of v in Gd. Similarly, we can associate a
set of labels to each vertex, Lv(v) ⊆ Lv, ∀v ∈ V . Some edges
and vertices may not have labels. If edge (u, v) is unlabeled
then Le(u, v) = ∅. Similarly, if vertex v is unlabeled then
Lv(v) = ∅.
When performing a random walk, we assume that a ran-
dom walker has the ability to retrieve incoming and outgoing
edges from a queried vertex (and vertices are distinguish-
able). With this assumption we are able to build (on-the-
ﬂy) a symmetric directed graph while walking over Gd. Let
G = (V, E) be the symmetric counterpart of Gd, i.e.,
E = [∀(u,v)∈Ed
{(u, v), (v, u)}.
391Note that G may not be connected. As G is symmetric, we
denote by deg(v) to be the in-degree or the out-degree of
V , denote the volume of the vertices in S.
v ∈ V as they are equal. Let vol(S) =P∀v∈S deg(v), ∀S ⊆
Let ˆθl be the estimated fraction of vertices with label l
obtained by some estimator. The two error metrics used in
most of our examples are the normalized root mean square
error of ˆθl, which is a normalized measure of the dispersion
of the estimates, deﬁned as
NMSE(l) = pE[( ˆθl − θl)2]
θl
.
(1)
and the normalized root mean square error of the Com-
plementary Cumulative Distribution Function (CCDF) γ =
{γl}, where γl =P∞
k=l+1 θk, deﬁned as
CNMSE(l) = pE[( ˆγl − γl)2]
γl
.
(2)
For the sake of simplicity, and unless stated otherwise, in
the remainder of this paper we assume that all queries of
edges and vertices have unitary cost and that we have a
ﬁxed sampling budget B.
3. VERTEX V.S. EDGE SAMPLING
We consider a straightforward estimation problem to il-
lustrate a tradeoﬀ between random edge and random ver-
tex sampling. Consider the problem of estimating the out-
degree distribution of Gd. Let θi be the fraction of vertices
with out-degree i > 0 and d be the average out-degree. Let
the label of vertex u, Lv(u), be the out-degree of u. We as-
sume that d is known; also assume that from an edge (u, v)
we can query Lv(u). In random edge sampling the proba-
bility of sampling a vertex with out-degree i is proportional
i: πi = i θi/d. On the other hand, random vertex sam-
pling samples a vertex with out-degree i with probability θi.
A straightforward calculation shows that the NMSE (equa-
tion (1)) of B randomly sampled edges with out-degree i
is
NMSE(i) =p(1/πi − 1)/B ,
Similarly, the NMSE(i) for random vertex sampling is
(4)
NMSE(i) =p(1/θi − 1)/B .
Now note that πi/θi = i/d, which means that πi > θi if
i > d and πi  d) while random vertex
sampling more accurately estimates degrees smaller than the
average (i  0.
(3)
4.1 Strong Law of Large Numbers
392Proof. Let
h(u, v) =(cid:26)1 if (u, v) ∈ E⋆ , and
0 otherwise.
As the RW is stationary (and edges are sampled uniformly)
,
lim
i=1 h(ui, vi)
i=1 f (ui, vi)h(ui, vi)
→ P∀(u,v)∈E f (u, v)h(u, v)
P∀(u,v)∈E h(u, v)
almost surely [25, Theorem 17.2.1]. The proof follows from
i=1 h(ui, vi) and that h(u, v) =
B→∞PB
PB
noting that B⋆(B) = PB
0, ∀(u, v) ∈ E\E⋆.
Theorem 4.1 allows us to construct estimators of graph char-
acteristics that converge to their true values as the number
of RW samples goes to inﬁnity (B → ∞).
If we are try-
ing to estimate vertex labels we set E⋆ = E and B⋆ = B.
In what follows we apply Theorem 4.1 to estimate graph
characteristics; we also present four examples of estimators.
4.2 Estimators
An estimator is a function that takes a sequence of obser-
vations (sampled data) as input and outputs an estimate of
a unknown population parameter (graph characteristic). In
this section we see how we can estimate graph characteristics
using the edges sampled by a RW.
We present estimators of the following four graph charac-
teristics: the edge label density (the fraction of edges with
a given label in the graph), the assortative mixing coeﬃ-
cient [27], the vertex label density, and the global clustering
coeﬃcient [34]. Designing these estimators is straightfor-
ward:
(2) then we replace E with the sequence of edges sampled
by a stationary RW.
In what follows we illustrate how to build an estimator of
the edge label density.
4.2.1 Edge Label Density
We seek to estimate the fraction of edges with label l ∈ Le
in Gd among all edges (u, v) that have labels, i.e., Le(u, v) 6=
∅. Edge labels can be anything, from social networking la-
bels to the amount of IP traﬃc over each link in a com-
puter network. An edge label can be, for instance, a tuple
(outdeg(u), indeg(v)) where outdeg(u) is the out-degree of u
and indeg(v) is the in-degree of v in the original graph Gd.
For now we assume that we know E. Let E⋆ be the non-
empty subset of E for which there are labels. Let pl denote
the fraction of edges in E⋆ with label l; it is clear that
pl = X∀(u,v)∈E⋆
1(l ∈ Le(u, v))
|E⋆|
,
where
1(l ∈ Le(u, v)) =(cid:26)1 if l ∈ Le(u, v) ,
0 otherwise.
Let B⋆(B) be the number of RW sampled edges that belong
to E⋆ and (ui, vi) be the i-th of such edges. Replacing E⋆
(1) First we ﬁnd a function f that computes the charac-
teristic of G using E;
where
with the edges in E⋆ sampled by a stationary RW gives the
following estimator
ˆpl ≡
B⋆ (B)
Xi=1
1(l ∈ Le(ui, vi))
B⋆(B)
.
(5)
It follows directly from Theorem 4.1 (with f (u, v) = 1(l ∈
a.s.
Le(u, v))) that limB→∞ ˆpl
→ pl. Moreover, from the lin-
earity of expectation, E[ˆpl] = pl for all values of B⋆(B) > 0.
4.2.2 Assortative Mixing Coefﬁcient
The assortative mixing coeﬃcient [27] is a measure of the
correlation of labels between two neighboring vertices. By
appropriately assigning edge labels derived from vertex la-
bels, we can use the density estimator of equation (5) to
derive an estimator of the assortative mixing coeﬃcient. In
order to simplify our exposition, we restrict our analysis to
the assortative mixing of vertex degrees in a directed graph
(equation (25) of [27]). It is trivial to extend our analysis
to other types of assortative mixing coeﬃcients, e.g., equa-
tions (21) and (23) of [27].
Let (outdeg(u), indeg(v)) denote the label of a directed
edge (u, v) in G that also exists in Gd; and let E⋆ be the set
of all such edges (E⋆ = Ed). Let pij denote the fraction of
labeled edges with label (i, j). Let Wout (Win) denote the
maximum observed out-degree (in-degree) of Gd in the RW.
The degree assortative mixing coeﬃcient [27] of a directed
graph can be estimated using
ˆr ≡
1
ˆσin ˆσout
Wout
Win
Xi=0
Xj=0
ij(ˆpij − ˆqout
i
ˆqin
j ) ,
ˆpij ≡
B⋆ (B)
Xk=1
1(outdeg(uk) = i , indeg(vk) = j)
B⋆(B)
;
Win
Wout
ˆpik
Wout
ˆqout
i ≡
Xk=0
ˆσin =vuut
Xi=0
ˆσout =vuut
Xi=0
Win
ˆpkj
;
;
Xk=0
ˆqin
j ≡
j − Wout
Xi=0
i − Win
Xi=0
j ˆqin
j !2
i !2
j2 ˆqin
; and
i2 ˆqin
iˆqout
j
(ˆqout
i , ˆqout
where ˆσin and ˆσout are the standard deviation of the distri-
bution ˆqin
). As the estimate ˆpij (equation (5)) asymp-
i
totically converges almost surely to its true value, it is trivial
to show that ˆqin
, ˆσin, and ˆσout also asymptotically con-
verge almost surely to their true values. Thus, ˆr asymptoti-
cally converges, almost surely, to the true assortative mixing
coeﬃcient of [27], as long as σin > 0 and σout > 0. This im-
plies that ˆr is an asymptotically unbiased estimator of the
assortative mixing coeﬃcient of Gd.
j
3934.2.3 Vertex Label Density
Let Lv(v) be the set of labels associated with vertex v, ∀v ∈
V . The fraction of vertices with label l in G, θl, is
where
θl =
1
|V | X∀(u,v)∈E
1(l ∈ Lv(v))
deg(v)
,
(6)
as G = (V, E) is directed and symmetric. By replacing E
with a sequence of edges sampled by a stationary RW (here
we have E⋆ = E and B⋆ = B) and renormalizing, we arrive
at the following estimator for θl
1
S B
B
Xi=1
1(l ∈ Lv(vi))
deg(vi)
,
(7)
ˆθl ≡
where S = 1/BPB
i=1 1/ deg(vi) . From Theorem 4.1 we have
limB→∞ S → |V |/|E|, almost surely. Using again Theo-
rem 4.1 we have
lim
B→∞
1
B
B
Xi=1
1(l ∈ Lv(vi))
deg(vi) →
1
|E| X∀(u,v)∈E
1(l ∈ Lv(v))
deg(v)
,
almost surely, which divided by |V |/|E| yields equation (6).
As S converges almost surely to |V |/|E|, we have limB→∞ ˆθl →
θl, almost surely. This also implies that ˆθl is an asymptoti-
cally unbiased estimator of θl.
4.2.4 Global Clustering Coefﬁcient
In the literature the term clustering coeﬃcient often refers
to the local clustering coeﬃcient [37].
In our example we
estimate a diﬀerent metric: the global clustering coeﬃcient.
In a social network the global clustering coeﬃcient, C, is
the probability that the friend of John’s friend is also John’s
friend [34]. Let V ⋆ be the set of vertices v ∈ V with deg(v) >
1. The global clustering coeﬃcient of an undirected graph
is deﬁned as [34]
where
1
C ≡
|V ⋆| X∀v∈V
c(v) =(cid:26)∆(v)/(cid:0)deg(v)
2 (cid:1)