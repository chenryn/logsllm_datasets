集群架构，最终将成百上千台主机有机地结合在一起，以满足当前大数据时代的海量访问负载。
器对外提供网络服务，那么在出现单点故障时，将导致整个网络服务中断。这时我们需要部署
服务的情况。另外，目前的网站多数是7×24小时提供不间断网络服务，如果仅采用单点服务
台服务器的负载又是有限的，这样就会导致服务器响应客户端请求的时间越长，甚至产生拒绝
8.1集群
集群及高可用
8.1.1LVS负载均衡简介
LVS（LinuxVirtual Server）即Linux虚拟服务器，是由章文嵩博士主导开发的开源负载均
随着互联网的发展，大量的客户端请求蜂拥而至，同时服务器的负载也越来越大，然而单
---
## Page 394
。
于真实服务器而言，LVS的外网IP又称为VIP（VirtualIPAddress），用户通过访问VIP，即可
eth0设置为私钥IP与内部网络通过交换设备相互连接，eth1设置为外网IP与外部网络联通。
VS/NAT工作模式拓扑结构如图8-2所示，LVS负载调度器使用两块网卡配置不同的IP地址，
位于企业内部的私有IP可以访问外网，以及外部用户可以访问位于公司内部的私有IP主机。
式、TUN模式以及DR模式。
真实服务器会选择不同的方式将用户需要的数据发送给终端用户，LVS工作模式分为NAT模
得到的服务内容都是一样的，整个集群对用户而言都是透明的。最后根据LVS工作模式的不同，
连接的是相同的存储，提供的服务也都是相同的服务，最终用户不管是访问哪台真实的服务器，
所有服务器，终端用户访问LVS调度器虽然会被转发到后端真实的服务器，但如果真实服务器
将该请求发送给后端的某台Web服务器，比如，轮询算法可以将外部的请求平均分发给后端的
负载均衡服务器，终端用户的Web请求会发送给LVS调度器，调度器根据自已预设的算法决定
据请求负载均衡调度方案，其体系结构如图8-1所示，终端互联网用户从外部访问公司的外部
衡项目，目前LVS已经被集成到Linux内核模块中。该项目在Linux内核中实现了基于IP的数
Linux运维之道
378
8.1.2基于NAT的LVS负载均衡
第一步，用户通过互联网DNS服务器解析到公司负载均衡设备上面的外网IP地址，相对
NAT（NetworkAddress Translation）即网络地址转换，其作用是通过数据报头的修改，使
Web服务器1
存储1
Web服务器2Web服务器3
eeeesee
存储2
"LVS负裁均衡结构图
图8-1
LVS负载均衡调度器
互联网用户
Internet
---
## Page 395
数据，所以LVS（TUN）的思路就是将请求与响应数据分离，让调度器仅处理数据请求，而让
知道，数据请求包往往远远小于响应数据包的大小。因为响应数据包中包含有客户需要的具体
调度器转发，如果后端服务器的数量大于10台，则调度器就会成为整个集群环境的瓶颈。我们
并根据该记录信息选出相同的真实服务器及端口信息。
当同一个连接的下一个数据包发送给调度器时，从该Hash表中可以直接找到之前的连接记录，
终端用户。另外，由于LVS调度器有一个连接Hash表，该表中会记录连接请求及转发信息，
源地址与源端口修改为VIP及调度器相应的端口，修改完成后，由调度器将响应数据包发送回
务器IP地址以及相应的端口。
LVS会修改数据包中的目标地址以及目标端口，目标地址与目标端口将被修改为选出的真实服
一台真实服务器（192.168.0.1~192.168.0.3），将数据请求包转发给真实服务器，并且在转发之前
务器到底在哪里、有多少台真实服务器。
就是真实的服务器，但他并不知道自己访问的VIP仅仅是一个调度器，也不清楚后端的真实服
连接后端的真实服务器（RealServer），而这一切对用户而言都是透明的，用户以为自己访问的
8.1.3基于TUN的LVS负载均衡
第三步，真实的服务器将响应数据包返回给LVS调度器，调度器在得到响应数据包后会将
在LVS（NAT）模式的集群环境中，由于所有的数据请求及响应的数据包都需要经过LVS
第二步，用户将数据请求发送至124.126.147.168，此时IVS将根据预设的算法选择后端的
Web3:192.168.0.3
Web2:192.168.0.2
Webl:192.168.0.1
LVS(NAT)模式
图8-2
LVS负载均衡调度器
互联网用户
Internet
第8章集群及高可用
·379
---
## Page 396
。
实服务器上的VIP），客户端是感觉不到后端服务器存在的。由于多台计算机都设置了同样一个
为客户端IP，这样客户端访问的是调度器的VIP地址，回应的源地址也依然是该VIP地址（真
务器间共享，因为最终的真实服务器给客户端回应数据包时需要设置源IP为VIP地址，目标IP
模式）要求调度器与后端服务器必须在一个局域网内，VIP地址需要在调度器与后端所有的服
后端真实服务器负责将响应数据包发送返回给客户端。与隧道模式不同的是，直接路由模式（DR
所示，该模式中LVS依然仅承担数据的入站请求以及根据算法选出合理的真实服务器，最终由
会增加服务器的负担。与LVS（TUN）类似，DR模式也叫直接路由模式，其体系结构如图8-4
收到请求数据包后直接给客户端主机响应数据。
地址及对应端口），LVS（TUN）模式要求真实服务器可以直接与外部网络连接，真实服务器在
包封装，并在其基础上添加新的数据包头（修改目标地址为调度器选择出来的真实服务器的IP
封装，通过隧道转发给后端的真实服务器（RealServer)，通过将客户端发往调度器的原始数据
包括新的源地址及端口、目标地址及端口），从而实现将一个目标为调度器VIP地址的数据包
IP隧道（IPtunning）是一种数据包封装技术，它可以将原始数据包封装并添加新的包头（内容
真实服务器将响应数据包直接返回给客户端。VS/TUN工作模式拓扑结构如图8-3所示。其中，
Linux运维之道
8.1.4基于 DR 的 LVS 负载均衡
380
在LVS（TUN）模式下，由于需要在LVS调度器与真实服务器之间创建隧道连接，这同样
Web3:124.126.147.113
Web2:124.126.147.112
Webl:124.126.147.111
N
IP隧道
IP隧道
LVS(TUN)模式
图8-3
LVS负载均衡调度器
Internet
124.126.147.168
VIP
2
互联网用户
Internet
---
## Page 397
度器进行调度的策略与算法都是LVS的核心技术，LVS在内核中主要实现了以下八种调度算法。
整个过程中，真实服务器的VIP不需要对外界可见。
据顿的MAC地址修改为选出的服务器的MAC地址，通过交换机将该数据帧转发给真实服务器。
设置为该VIP地址。调度器根据算法在选出真实服务器后，在不修改数据报文的情况下，将数
不可见的，但真实服务器却可以接收目标地址为VIP的网络请求，并在回应数据包时将源地址
也就是该网络设备并不会向外广播自己的MAC及对应的IP地址，真实服务器的VIP对外界是
据包发送到调度器主机，而所有的真实服务器的VIP地址必须配置在Non-ARP的网络设备上，
VIP地址，所以在直接路由模式中要求调度器的VIP地址是对外可见的，客户端需要将请求数
8.1.5
根据前面的介绍，我们了解了LVS 的三种模式，但不管实际环境中采用的是哪种模式，调
轮询调度
带复制的基于局部性最少连接
基于局部性最少的连接
加权最小连接调度
最小连接调度
加权轮询调度
LVS负载均衡调度算法
VIP:124.126.147.168
Web1:192.168.0.3
VIP:124.126.147.168
VIP:124.126.147.168
Web2:192.168.0.2
Web1:192.168.0.1
192.168.0.253
Switch
Router
图8-4
LVS(DR)模式
LVS负载均衡调度器
124.126.147.169
VIP:124.126.147.168
etho
CInternet
互联网用户
第8章集群及高可用
Internet
381
---
## Page 398
经自带，我们可以使用YUM方式安装ipvsadm，也可以自行去官方网站下载使用源码安装。
现算法传递给内核来实现。LVS的内核模块名称为ip_vs，命令行工具在CentOS6.3光盘中已
负责核心算法的实现，用户层需要安装ipvsadm工具，通过命令将管理员需要的工作模式与实
行静态分配固定的服务器资源。
映射关系，出现服务器不可用或负载过高的情况下，发往该目标IP的请求会固定发给该服务器。
连接记录，它会维护一个目标IP到一组服务器之间的映射关系，防止单点服务器负载过高。
服务器。带复制的基于局部性最少连接算法（Iblcr）记录的不是一个目标IP与一台服务器之间
可用，并且有能力处理该请求，调度器会尽量选择相同的服务器，否则会继续选择其他可行的
算法先根据请求的目标IP地址寻找最近该目标IP地址所使用的服务器，如果这台服务器依然
（WLC）则是给每个服务器一个权值，调度器会尽可能保持服务器连接数量与权值之间的平衡。
器调度到服务器B的请求会是服务器A的两倍。权值越高的服务器，处理的请求越多。
能，并给每台服务器添加一个权值，如果服务器A的权值为1，服务器B的权值为2，则调度
求平均分配给每个真实服务器。
就是实现简单。轮询算法假设所有的服务器处理请求的能力都是一样的，调度器会将所有的请
Linux运维之道
8.1.6部署LVS服务
源地址散列调度算法（SH）与目标地址散列调度算法类似，但它是根据源地址散列算法进
382
LVS现在已经集成在Linux内核模块中，但整个LVS环境又分为内核层与用户层，内核层
目标地址散列调度算法（DH）也是根据目标IP地址通过散列函数将目标IP与服务器建立
基于局部性的最少连接调度算法（Iblc）是请求数据包的目标IP地址的一种调度算法，该
最小连接调度算法（LC）将把请求调度到连接数量最小的服务器上，而加权最小连接算法
YUM安装需要确保本机可以连接YUM源，可以从YUM源中下载RPM格式软件包。
加权轮询算法（WRR）主要是对轮询算法的一种优化与补充，LVS会考虑每台服务器的性
轮询算法（RR）就是按依次循环的方式将请求调度到不同的服务器上，该算法最大的特点
[root@lvs ~]#yum -y installipvsadm
1.YUM安装
源地址散列调度
目标地址散列调度
---
## Page 399
要使用该命令来管理配置LVS虚拟服务器组和相应的调度算法。
下载，下载后使用标准的 make、make install，编译、安装即可。
ipvsadm命令的描述和用法如下。
源码安装软件前需要使用YUM安装相关的依赖软件包。Ipvsadm源码软件可以从官方网站
选项：
用法：
描述：Linux虚拟服务器管理工具。
无论使用哪种方式安装ipvsadm软件，安装完成后都会生成一个同名的命令工具，我们需
ipvsadm-1.26.tar.gz
[root@lvs ~]# wget http://www.linuxvirtualserver.org/software/kernel-2.6/
>libnl libnl-devel
2.
[root@lvs
[root@lvs
[root@lvs~]#cd/usr/src/ipvsadm-1.26/
源码安装
：ipvsadm选项
-A
R
D
ipvsadm选项
~]#make install
~]#
设置LVS工作模式为TUN隧道模式
设置LVS工作模式为DR直连路由模式
设置真实服务器IP地址与端口信息
指定LVS所采用的调度算法
使用UDP服务，该参数后需要跟主机与端口信息
使用TCP服务，该参数后需要跟主机与端口信息
显示虚拟服务列表
在虚拟服务中减少一台真实服务器
在虚拟服务中编辑一台真实服务器
在虚拟服务中添加一台真实服务器
保存虚拟服务规则至标准输出，输出的规则可以使用-R导入还原
从标准输入中还原虚拟服务规则
清空虚拟服务表
删除一个虚拟服务
编辑一个虚拟服务
添加一个虚拟服务，使用IP地址、端口号、协议来唯一定义一个虚拟服务
make
服务器地址-r 真实服务器地址[工作模式][权重].
服务器地址-s算法
第8章集群及高可用
383
---
## Page 400
三台主机的80端口：
80端口的请求，最终被调度器通过NAT模式转发给了192.168.0.1、192.168.0.2、192.168.0.3这
Linux运维之道
384
虚拟服务规则表备份与还原：
[root@1vs Desktop]# ipvsadm -d -t 124.126.126.147:80 -r 192.168.0.3
删除为虚拟服务提供Web功能的真实服务器192.168.0.3：
查看当前IPVS调度状态：
TCP
IP Virtual Server version 1.2.1 (size=4096)
查看LVS规则表：
[root@1vs ~]# ipvsadm -A -t 124.126.147.168:80 -s rr
添加一个虚拟服务，设置调度算法为轮询，所有使用的TCP协议访问124.126.147.168的
[root@lvs
[root@lvs
[root@lvs Desktop]# ipvsadm
TCP00:58
TCP00:57
IPVS connection entries
[root@lvs Desktop]# ipvsadm -Lnc
Prot
[root@lvs Desktop]# ipvsadm -Ln
该命令示例如下。
TCP
TCP
TCP
[root@lvs
root@lvs
[root@lvs
>
V
V
00:57
00:57
00:58
192.168.0.3:80
124.126.126.147:80 rr
RemoteAddress:Port
LocalAddress:Port Scheduler Flags
192.168.0.2:80
L
L
92.168.0.1:80
-n
B
Desktop]#
Desktop]#
~]#ipvsadm
~]#
~]#
SYN_RECV
SYN RECV
SYN RECV
SYNRECV
SYN RECV
数字格式输出
连接状态，需要配合-L使用
设置指定服务器的权重
设置LVS工作模式为NAT地址转换模式
ipvsadm
ipvsadm -a
ipvsadm
ipvsadm
172.16.0.253:52828
source
-a
172.16.0.253:52829
172.16.0.253:52827 192.168.0.111:80
172.16.0.253:52830 192.168.0.111:80
-a
172.16.0.253:52826
-t
124.126.147.168:80 -r 192.168.0.3:80-m
124.126.147.168:80
124.126.147.168:80
-R
-S
/tmp/ip_vs.bak
Forward Weight ActiveConn InActConn
Masq
Masq
Masq
virtual
192.168.0.111:80
192.168.0.111:80
9192.168.0.111:80
-r 192.168.0.2:80-m
-r192.168.0.1:80-m
O
#从文件还原
#清空规则表
#备份至文件
destination
0
0
0
10.0.0.3:80
10.0.0.3:80
10.0.0.2:80
10.0.0.2:80
10.0.0.3:80
---
## Page 401
两个网卡配置文件。
地址的方式配置网络，由于LVS调度器使用了两块网卡，这里需要修改ifcfg-etho以及ifcfg-eth1
表8-1
服务器上。
Ivs.example.com这台主机的VIP地址的80端口的请求数据包都将被均衡地调度到三台真实的
添加两台真实服务器，并为每台真实服务器设置权重：
web3.example.com
web2.example.com
web1.example.com
Ivs.example.com
8.1.7LVS负载均衡应用案例
[root@lvs ~]# vim /etc/sysconfig/network-scripts/ifcfg-etho
LVS负载均衡调度器设置。首先，需要为整个拓扑环境设置网络参数，案例中使用静态IP
IPADDR=192.168.0.254
基于NAT工作模式的负载均衡架构如图8-2所示，服务器IP地址设置见表8-1。所有访问
案例1：基于NAT工作模式的负载均衡
创建一个使用WRR算法的虚拟服务，工作模式为直接路由（DR）模式，在该虚拟服务上
DNS1=202.106.0.20
NETMASK=255.255.255.0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=Static
DEVICE=eth0