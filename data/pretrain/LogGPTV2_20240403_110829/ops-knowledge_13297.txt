User: 如何使用Docker搭建一个包含Web应用和MySQL数据库的容器化环境？
Assistant: 以下是使用Docker搭建一个包含Web应用和MySQL数据库的容器化环境的步骤：

1. 安装Docker和Docker Compose
安装Docker和Docker Compose，具体步骤可参考官方文档。

2. 创建Docker Compose文件
在项目根目录下创建一个名为docker-compose.yml的文件，示例文件如下：

```
version: '3'

services:
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: db
```

上述文件中，定义了两个服务：db和web。db使用MySQL 5.7镜像，设置了环境变量，包括root密码、数据库名称和用户信息。web使用当前目录下的Dockerfile文件构建镜像，设置了端口号、依赖的服务和环境变量。

3. 创建Dockerfile文件
在项目根目录下创建一个名为Dockerfile的文件，示例文件如下：

```
FROM python:3.7

COPY . /app
WORKDIR /app

RUN pip install -r requirements.txt

CMD python manage.py runserver 0.0.0.0:8000
```

上述文件中，定义了一个Python 3.7镜像，将当前目录下的所有文件复制到/app目录下，设置工作目录为/app，安装requirements.txt文件中的依赖，启动应用程序。

4. 构建和启动容器
在命令行中执行以下命令，构建和启动容器：

```
docker-compose up --build
```

以上命令将构建镜像，并启动容器。在启动时，将创建一个MySQL数据库服务实例和一个Web应用程序实例。应用程序将监听8000端口，可通过http://localhost:8000访问。

通过以上步骤，即可完成一个包含Web应用和MySQL数据库的容器化环境的搭建。