**九、Internet Explorer浏览器**
许多Web应用程序使用类似Citrix/远程服务/Kiosk平台之类的技术进行分发部署。因此，大多数情况下，这意味着用户需要Web浏览器才能访问这些应用程序。以老版本的Internet
Explorer（IE）浏览器为例，我们可以借助IE浏览器，使用多种方式完成我们的任务：
**9.1 对话框及菜单栏**
1、地址栏：我们可以使用地址栏，填入前文提到过的各种路径及环境变量。例如可以使用 “file://c:windowssystem32cmd.exe” 路径。
2、菜单栏：帮助菜单、打印菜单以及搜索菜单都包含某些链接及选项，可能指向并打开浏览器之外的外部资源（如Windows资源管理器）。
3、右键点击：右键菜单中包含某些非常有用的选项，比如“查看源码”（notepad）以及“保存图片为”菜单。
4、收藏菜单：打开收藏选项卡（ALT+C），将文件夹拖到浏览器窗口中，任意项目（如“MSN站点”）都可以。
**9.2 主页**
我们可以将浏览器主页设置为任意值（如“cmd.exe”）来访问任意文件，当然这是一种快速但略不文雅的方法。
**9.3 F12开发者工具**
在IE浏览器中，我们可以使用F12快捷键打开开发者工具。选择“文件（File）”菜单中的“自定义Internet
Explorer视图源”选项，我们有可能可以自主选择自定义程序。
根据我们的目的，我们可以选择“C:windowssystem32cmd.exe”作为视图源，这样cmd.exe就成为IE中默认的HTML源代码查看器。最后，我们可以在某个网页上点击右键，选择“查看源码（View
Source）”，开始探索旅途。
**9.4 证书导入**
载入IE设置，转到“内容（Content）”选项卡，然后选择“证书（Certificates）”按钮。点击“导入（Import）”选项，会弹出如下向导：
向导的下一步会要求我们填入证书路径，这将打开一个Windows资源管理器（或者文件浏览类型）对话框。我们可以使用“三、滥用对话框”这一部分中的技巧来打破受限环境及提升权限。
**9.5 浏览器附加组件/小程序/动态内容**
默认情况下，IE的设计初衷是提供界面友好且内容丰富的用户体验。我们可以利用这一点，通过浏览器自身功能实现与操作系统的交互。在IE浏览器不被限制的情况下，我们可以使用ActiveX附加组件、Flash应用、Java小程序以及类似技术完成这一任务。
**9.6 基于浏览器的漏洞利用**
如果系统没有及时打补丁，不同版本的IE浏览器可能存在许多漏洞，攻击者可以访问精心构造的某个链接来利用这些漏洞。典型的利用平台就是Metasploit平台。
当然我们也可以诱骗系统上的另一个用户点击我们精心构造的那个链接，这意味着恶意代码会以这些用户的身份运行，如果这些用户是高权限账户那再好不过。
**十、微软Office**
与IE浏览器类似，大多数环境中都提供Office套装以满足用户办公需求。同样，这也为我们提供了众多可利用的点。
**10.1 VBA（Visual Basic for Applications）脚本及宏**
我们可以使用msfencode/msfpayload轻松生成VBA代码，创建目标主机上的反弹型shell或Meterpreter
shell。这种方法很少会被反病毒软件阻止。虽然Meterpreter
shell非常有用，但以这种方式创建的shell会运行在当前文档用户的上下文环境中。当然我们可以根据目标系统的具体安全性设置，使用Meterpreter来提升权限。
**10.2 开发者工具**
所有的Office应用中都提供开发者工具，但这项功能默认情况下并没有被启用。不同版本启用开发者工具的方法有所不同，以Office
2010为例，该选项位于应用程序选项的“自定义功能区”选项卡中。开发者工具一旦启用，各种加载项就可以为我们提供丰富的功能。
开发者工具中包含大量与操作系统交互的ActiveX控件。如果IE浏览器被禁用，但Excel并没有被禁用，我们为什么不创建自己的Web浏览器呢？
**10.3 通过VBA运行命令**
通过宏或者VBA代码，我们只需要简单的三行代码就能启动外部应用程序：
    Sub OpenCMD()
    Shell “CMD /K C:windowssystem32cmd.exe”, vbNormalFocus
    End Sub
**10.4 MS SQL服务器（本地及远程）**
虽然这是条较为漫长的道路，但如果我们能够访问微软出品的SQL服务器（特别是老版本的服务器），这种方法还是值得一试的。我们可以检查SQL服务器是否启用了XP_CMDSHELL组件。如果服务器缺乏访问限制或者用户控制机制，我们有可能可以在该服务器上执行命令并最终远程控制它。
**10.5 对话框及快捷键**
这又是对话框的一种利用方式。我们可以在标准文档（如Word文档）中嵌入简单的指向文件系统的快捷方式（如file://）。
**十一、修改ICA文件**
Citrix的某些配置依赖.ICA（Independent Computing
Architecture，独立计算结构）文件来存放某个连接的配置信息。这些配置信息中包含许多明显的特征参数，比如服务器地址以及端口信息，当然还有许多更加有趣的参数可以为我们所用。
简单的ICA文件形式如下：
    [Encoding]
    InputEncoding=ISO8859_1[WFClient]
    Version=2
    username=username
    clearpassword=password
    [ApplicationServers]
    ApplicationName=
    [ApplicationName]
    Address=IPAddress
    InitialProgram=notepad.exe
    TWIMode=On
    TransportDriver=TCP/IP
    WinStationDriver=ICA 3.0
    BrowserProtocol=HTTPonTCP
如上所示，“InitialProgram”参数表明，连接建立后，系统应该创建一个Notepad实例。如果系统没有经过加固，我们只需要将该参数简单修改为“cmd.exe”就可以为“Explorer.exe”弹出命令提示符窗口：
    InitialProgram=cmd.exe
某些应用程序可能需要进一步的身份验证，当前的身份无法奏效。我们可以模糊测试（fuzz）“InitialProgram”这个参数，枚举潜在有效的可执行程序。
Nmap（使用citrix-enum-apps这个NSE插件）以及Metasploit（使用auxiliary/gather/citrix_published_applications）可以用来枚举已发布的应用程序，互联网中还有许多类似的公开脚本可以完成同样工作。
**十二、默认/弱凭证**
在任何环境中，挖掘探索默认的用户名/密码组合或者使用弱口令（如“password”）的账户显然是攻击行动中非常关键的一环。
如果可能的话，你在发起攻击前应尝试枚举获取可用的用户名列表。我们可以通过错误信息判断某个账户是否存在，比如“该用户名不存在”以及“密码错误”这类错误消息都能提供有用的信息。“忘记密码”功能通常也能告诉我们某个用户是否存在。
如果你已经通过验证，也能获取一个shell，你可以尝试使用“net users”以及“net users /domain”命令。
包括如下用户名在内的许多用户名总是值得尝试的。很多情况下，账户的密码有可能就是用户名：
    test
    citrixtest
    administrator
    admin
    guest
    backup
    default
**十三、目标中的文件传输**
我们会简单介绍一下目标环境中可以使用的某些方法：
1、FTP
2、HTTP服务器（WAMP/LAMP以及其他一些公开工具）
3、SMB客户端工具 \hackertools
4、SMB服务端工具 \serverc$
5、DNS隧道
6、电子邮件（私人或企业邮件）
7、剪贴板
8、基于用户输入的流数据
9、设备穿透技术（RS323/串口、火线接口）
以上某些方法需要在攻击环境中架设服务器，不过这并不麻烦，Kali Linux中已经集成了许多服务，我们可以直接使用。
**13.1 DNS隧道**
即使在高度受限的环境中，DNS查询请求还是有可能可以抵达外部互联网，这是非常有趣的一个事实。我们在另一篇文章中单独介绍了这个技术点。
**13.2 电子邮件**
如果Web浏览器可用，通常情况下电子邮件也是可用的，我们可以使用个人电子邮件账户（如Gmail）传输目标主机上的数据。根据目标环境具体的防火墙策略以及网络过滤规则，我们可以探索哪种邮件协议可用，如POP3、IMAP以及SMTP协议。
全功能桌面环境可能具备公司邮件系统的访问权限，我们也可以使用类似的方式利用这一点。需要注意的是，许多企业（特别是大型公司）的邮箱系统通常会采取基于附件的内容过滤机制，我们可以使用加密数据（如ZIP）附件绕过这一限制。
**13.3 剪贴板**
剪贴板也是传输数据的一种方法。二进制文件可以先经过BASE64编码，在远程系统上解码重构以便执行。此外，我们也可以使用剪贴板传输汇编语言代码，然后在远程主机上使用debug.exe执行这些代码。
**13.4 基于用户输入的流数据**
利用用户输入的标准接口（比如键盘及鼠标），我们可以创建一个模拟用户输入的自动脚本来发送数据，数据可以使用慢速流进行传输，在另一端重构即可。
例如Rubber Ducky之类的可重新编程的人机接口设备（Human Interface
Devices，HIDs）正是这类攻击的优良载体。我的一名同事，David Lodge，写了篇文章详细介绍了这类攻击。
**13.5 设备穿透**
根据目标所在的具体环境，我们有可能穿透本地硬件设备（如USB存储设备）到达远程主机。某些客户端，例如微软的远程桌面协议以及Citrix
Receiver实际上使用了自动化的设备穿透机制，当然这个功能可以根据需要手动进行修改。
对于微软的远程桌面应用而言，启动远程服务客户端（mstsc.exe），选择“本地资源”标签页，点击窗口底部的“更多”按钮，我们可以选择本地哪种设备及驱动会被传递到远程主机。
对Citrix Receiver来说操作类似，在连接建立之前，我们可以转到桌面查看器首选项，选择“设备（Devices）”标签页：
连接建立后，我们也可以使用状态栏重复类似操作：
**13.6 设备穿透（RS232/串口）**
如果类似串口之类的设备也能够通过设备穿透技术进行连接，那么主机及服务器之间传输数据就会更加便捷。可用的串口列表可以在本地主机枚举获得，流数据可以经过串口传输到服务器。在服务端，我们可以使用终端应用程序（如Windows
HyperTerminal或者使用debug.exe编译的自定义程序）来接受数据。
**13.7 设备穿透（火线接口）**
安全社区对火线接口的印象不佳，原因在于它们容易受到物理内存攻击的影响。这类攻击利用了火线中的某个“功能”，使连接火线的外部设备能够具备DMA（Direct
Memory Access，直接内存访问）能力。从理论上讲，支持DMA功能的某些模拟火线设备（例如Apple
iPod）也可能使用设备穿透功能，然后该设备就可能具备远程内存的完全读写权限。这将带来严重的问题，因为内存中很有可能包含敏感数据，比如用户凭证、加密密钥等。
**十四、实用的系统/管理工具**
当Windows系统经过加固后，某些内置的用于系统管理的默认工具可能会被管理员忘记加固，因此可以为攻击者所用。其中大部分工具可以使用前文介绍的方法来运行;
1、MMC.exe：微软管理控制台，允许我们使用“管理单元“控制许多系统功能。
2、Mstsc.exe：微软远程服务，用来连接到另一台主机。
3、Regedit.exe：注册表控制工具。
4、Taskmgr.exe：任务管理器。
5、Control.exe：控制面板快捷方式。
6、Rundll32.exe：利用该工具可以调用原生API访问隐藏的系统功能。
7、Dxdiag.exe：DirecX诊断工具，可以用来收集系统信息。
8、Msconfig.exe：系统配置工具，可以显示许多系统信息，包含指向系统工具的链接。
9、Eventvwr.exe：本地事件查看器。
10、Systeminfo.exe：系统信息收集器的命令行工具。
11、Msinfo32.exe：系统信息收集。
12、Osk.exe：虚拟键盘程序，在没有键盘的环境中十分有用。
13、At.exe：计划任务调度程序命令行版。
14、Taskschd.msc：计划任务调度程序界面版。
15、Explorer.exe：创建一个新的Windows资源管理器实例。
16、WMIC.exe
17、Qwinsta.exe：显示RDP会话相关信息。
18、Tasklist.exe /qprocess.exe：列出进程信息。
当然有时候枚举当前可用的本地或第三方可执行文件也是非常有用的：
    dir /s %WINDIR% *.exe
**14.1 Rundll32**
通过Rundll32，我们可以运行许多命令，常见的命令如下所示：
已保存的用户名及密码：
    RunDll32.exe keymgr.dll,KRShowKeyMgr
控制面板：
    RunDll32.exe shell32.dll,Control_RunDLL
日期及时间属性：
    RunDll32.exe shell32.dll,Control_RunDLL timedate.cpl
设备管理器：
    RunDll32.exe devmgr.dll DeviceManager_Execute
文件管理器属性：
    RunDll32.exe shell32.dll,Options_RunDLL 0
忘记密码向导：
    RunDll32.exe keymgr.dll,PRShowSaveWizardExW
键盘属性：
    RunDll32.exe shell32.dll,Control_RunDLL main.cpl @1
锁定屏幕：
    RunDll32.exe user32.dll,LockWorkStation
网络链接：
    RunDll32.exe shell32.dll,Control_RunDLL ncpa.cpl
弹出打开方式对话框：
    Rundll32 Shell32.dll,OpenAs_RunDLL FILE.ext
打印机用户界面：
    Rundll32 Printui.dll,PrintUIEntry /?
系统属性对话框：
    Rundll32 Shell32.dll,Control_RunDLL Sysdm.cpl,,3
Windows防火墙：
    RunDll32.exe shell32.dll,Control_RunDLL firewall.cpl
Windows关于对话框：