本节示意图显示了 `certmonger`{.literal} 从 Identity
Management(IdM)证书颁发机构(CA)服务器请求服务证书时发生的情况。序列由这些图表组成：
::: itemizedlist
-   [图 15.2
    "未加密的通信"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 15.2. 未加密的通信"){.xref}
-   [图 15.3 "Certmonger
    请求服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 15.3. Certmonger 请求服务证书"){.xref}
-   [图 15.4 "发布服务证书的 IdM
    CA"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 15.4. 发布服务证书的 IdM CA"){.xref}
-   [图 15.5 "Certmonger
    应用服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 15.5. Certmonger 应用服务证书"){.xref}
-   [图 15.6 "当旧证书即将过期时，Certmonger
    请求一个新证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 15.6. 当旧证书即将过期时，Certmonger 请求一个新证书"){.xref}
:::
在图中，`webserver-ca`{.literal} 子 CA 由通用 `IdM CA server`{.literal}
代表。
[图 15.2
"未加密的通信"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 15.2. 未加密的通信"){.xref}
显示初始情况：没有 HTTPS 证书，Web 服务器和浏览器之间的通信将未加密。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1}
**图 15.2. 未加密的通信**
::: figure-contents
::: mediaobject
![A diagram displaying an IdM client running an Apache web server and
the certmonger service. There are arrows between a browser and the
Apache webserver showing it is connecting over an unencrypted HTTP
connection. There is an inactive connection from the certmonger service
to an IdM CA server.](images/84_RHEL_IdM_0420_1.png)
:::
:::
:::
\
[图 15.3 "Certmonger
请求服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 15.3. Certmonger 请求服务证书"){.xref}
显示使用 `certmonger`{.literal} 的系统管理员为 Apache Web 服务器手动请求
HTTPS 证书。请注意，在请求 Web 服务器证书时，certmonger 不会直接与 CA
通信。它通过 IdM 代理。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2}
**图 15.3. Certmonger 请求服务证书**
::: figure-contents
::: mediaobject
![A diagram displaying an arrow between the certmonger service on the
IdM client and the IdM CA server to show it is connecting via an
ipa-getcert request.](images/84_RHEL_IdM_0420_2.png)
:::
:::
:::
\
[图 15.4 "发布服务证书的 IdM
CA"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 15.4. 发布服务证书的 IdM CA"){.xref}
显示为 Web 服务器发布 HTTPS 证书的 IdM CA。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3}
**图 15.4. 发布服务证书的 IdM CA**
::: figure-contents
::: mediaobject
![A diagram displaying an arrow between the IdM CA server and the
certmonger service on the IdM client - showing it is connecting and
sending an HTTPS certificate.](images/84_RHEL_IdM_0420_3.png)
:::
:::
:::
\
[图 15.5 "Certmonger
应用服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 15.5. Certmonger 应用服务证书"){.xref}
显示 `certmonger`{.literal} 将 HTTPS 证书放在 IdM
客户端的适当位置，并在收到指示时重启 `httpd`{.literal} 服务。随后 Apache
服务器使用 HTTPS 证书来加密自身和浏览器之间的流量。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4}
**图 15.5. Certmonger 应用服务证书**
::: figure-contents
::: mediaobject
![A diagram displaying an image of an HTTPS certificate assigned to the
Apache web server and one assigned to the certmonger service. There are
arrows between the browser and the Apache webserver showing that the
connection is now an encrypted HTTPS connection. The connection between
the certmonger service and the IdM CA server is
inactive.](images/84_RHEL_IdM_0420_4.png)
:::
:::
:::
\
[图 15.6 "当旧证书即将过期时，Certmonger
请求一个新证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 15.6. 当旧证书即将过期时，Certmonger 请求一个新证书"){.xref}
显示 `certmonger`{.literal} 在证书过期前自动从 IdM CA
请求服务证书续订。IdM CA 发布一个新证书。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5}
**图 15.6. 当旧证书即将过期时，Certmonger 请求一个新证书**
::: figure-contents
::: mediaobject
![A diagram displaying an arrow from the certmonger service on the IdM
client connecting to the IdM CA server to show it is performing an
ipa-getcert request. An arrow from the IdM CA server to the Certmonger
is labeled HTTPS certificate to show it is transferring an HTTPS
certificate to the certmonger service.](images/84_RHEL_IdM_0420_5.png)
:::
:::
:::
\
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}设置单实例 Apache HTTP 服务器 {.title}
:::
这部分论述了如何设置单实例 Apache HTTP 服务器来提供静态 HTML 内容。
如果 web
服务器应该为与服务器关联的所有域提供相同的内容，请按照本节中的步骤进行操作。如果要为不同的域提供不同的内容，请设置基于名称的虚拟主机。[详情请参阅配置基于
Apache
名称的虚拟主机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#configuring-apache-name-based-virtual-hosts_setting-apache-http-server){.link}。
::: orderedlist
**流程**
1.  安装 `httpd`{.literal} 软件包：
    ``` literallayout
    # yum install httpd
    ```
2.  在本地防火墙中打开 TCP 端口 `80`{.literal}：
    ``` literallayout
    # firewall-cmd --permanent --add-port=80/tcp
    # firewall-cmd --reload
    ```
3.  启用并启动 `httpd`{.literal} 服务：
    ``` literallayout
    # systemctl enable --now httpd
    ```
4.  可选：在 `/var/www/html/`{.literal} 目录中添加 HTML 文件。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    当向 `/var/www/html/`{.literal} 添加内容时，`httpd`{.literal}
    默认运行的用户必须可读取文件和目录。内容所有者可以是
    `root`{.literal} 用户和 `root`{.literal}
    用户组，也可以是管理员选择的其他用户或组。如果内容所有者是
    `root`{.literal} 用户和 `root`{.literal}
    用户组，则文件必须可以被其他用户读取。所有文件和目录的 SELinux
    上下文必须是 `httpd_sys_content_t`{.literal}，默认应用于
    `/var/www`{.literal} 目录中的所有内容。
    :::
:::
::: itemizedlist
**验证步骤**
-   使用 Web 浏览器连接到 `http://my_company.idm.example.com/`{.literal}
    或 `http://server_IP/`{.literal}。
    如果 `/var/www/html/`{.literal} 目录为空或者不包含
    `index.html`{.literal} 或 `index.htm`{.literal} 文件，Apache 会显示
    `Red Hat Enterprise Linux Test Page`{.literal}。如果
    `/var/www/html/`{.literal} 包含具有不同名称的 HTML
    文件，您可以通过输入该文件的 URL 来加载这些文件，如
    `http://server_IP/example.html`{.literal} 或
    `http://my_company.idm.example.com/example.html`{.literal}。
:::
::: itemizedlist
**其它资源**
-   有关配置 Apache 和将服务限制到您的环境的详情，请参考 Apache
    手册。[有关安装手动的详情，请参阅安装 Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
-   有关使用或调整 `httpd`{.literal} `systemd`{.literal}
    服务的详情，请查看 `httpd.service(8)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中添加 TLS 加密 {.title}
:::
这部分论述了如何在 `my_company.idm.example.com`{.literal} Apache HTTP
服务器中为 `idm.example.com`{.literal} 域启用 TLS 加密。
::: itemizedlist
**先决条件**
-   `my_company.idm.example.com`{.literal} Apache HTTP
    服务器已安装并在运行。
-   [**您已从webserver-ca**]{.strong} 子 CA 获取 TLS 证书，并将其存储在
    `/etc/pki/tls/certs/httpd.pem`{.literal} 文件中，如 ["使用
    certmonger 为服务获取 IdM
    证书"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#obtain-service-cert-with-certmonger_restricting-an-application-to-trust-a-subset-of-certs "使用 certmonger 为服务获取 IdM 证书"){.xref}
    所述。如果您使用其他路径，请调整该流程的对应步骤。
-   对应的私钥存储在 `/etc/pki/tls/private/httpd.key`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   [**webserver-ca**]{.strong} CA 证书保存在
    `/etc/pki/tls/private/sub-ca.crt`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   客户端和 [**my_company.idm.example.com**]{.strong} Web
    服务器将服务器的主机名解析为 Web 服务器的 IP 地址。
:::
::: orderedlist
**流程**
1.  安装 `mod_ssl`{.literal} 软件包：
    ``` literallayout
    # dnf install mod_ssl
    ```
2.  编辑 `/etc/httpd/conf.d/ssl.conf`{.literal} 文件并在
    ``{.literal} 指令中添加以下设置：
    ::: orderedlist
    1.  设置服务器名称：
        ``` literallayout
        ServerName my_company.idm.example.com
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        服务器名称必须与证书的 `Common Name`{.literal}
        字段中设置的条目匹配。
        :::
    2.  可选： 如果证书在 `Subject Alt Names`{.literal}
        (SAN)字段中包含额外主机名，您可以将 `mod_ssl`{.literal}
        配置为为这些主机名提供 TLS
        加密。要配置此功能，请使用对应名称添加 `ServerAliases`{.literal}
        参数：
        ``` literallayout
        ServerAlias www.my_company.idm.example.com server.my_company.idm.example.com
        ```
    3.  设置到私钥、服务器证书和 CA 证书的路径：
        ``` literallayout
        SSLCertificateKeyFile "/etc/pki/tls/private/httpd.key"
        SSLCertificateFile "/etc/pki/tls/certs/httpd.pem"
        SSLCACertificateFile "/etc/pki/tls/certs/ca.crt"
        ```
    :::
3.  出于安全考虑，请配置为只有 `root`{.literal} 用户可以访问私钥文件：
    ``` literallayout
    # chown root:root /etc/pki/tls/private/httpd.key
    # chmod 600 //etc/pki/tls/private/httpd.key
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果私钥被设置为可以被未授权的用户访问，则需要撤销证书，然后再创建一个新私钥并请求一个新证书。否则，TLS
    连接就不再安全。
    :::
4.  在本地防火墙中打开端口 `443`{.literal}：
    ``` literallayout
    # firewall-cmd --permanent --add-port=443/tcp
    # firewall-cmd --reload
    ```
5.  重启 `httpd`{.literal} 服务：
    ``` literallayout
    # systemctl restart httpd
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用密码保护私钥文件，每次 `httpd`{.literal}
    服务启动时都必须输入这个密码。
    :::
    ::: itemizedlist
    -   使用浏览器并连接到
        `https://my_company.idm.example.com`{.literal}
    :::
:::
::: itemizedlist
**其它资源**
-   有关配置 TLS 的详情，请参考 Apache 手册中的
    `SSL/TLS Encryption`{.literal} 文档。[有关安装手动的详情，请参阅安装
    Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_working-with-idm-certificates.html#setting-the-supported-tls-protocol-versions-on-an-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中设置支持的 TLS 协议版本 {.title}
:::