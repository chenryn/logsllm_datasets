### 字符设备文件与块设备文件

字符设备文件以字母 "c" 开头。当字符设备文件向设备传送数据时，一次只传送一个字符。典型的通过字符方式传输数据的设备包括打印机、绘图仪和调制解调器等。字符设备文件有时也被称作“raw”设备文件。

块设备文件则以字母 "b" 开头。在块设备文件向设备传送数据的过程中，首先从内存中的缓冲区读取或写入数据，而不是直接将数据传送到物理磁盘上。磁盘和 CD-ROM 既可以使用字符设备文件也可以使用块设备文件进行操作。

### 查看文件

#### 使用 `ls` 命令查看当前目录下的文件和目录
```bash
$ ls
bin  hosts  lib  res_03
ch07  hw1  pub  testresults
ch07_bak  hw2  res_01  users
docs  hw3  res_02  work
```

#### 获取更多文件信息
通过 `ls -l` 选项，可以获取更详细的文件信息：
```bash
$ ls -l
total 1962188
drwxrwxr-x 2 amrood amrood 4096 Dec 25 09:59 uml
-rw-rw-r-- 1 amrood amrood 5341 Dec 25 08:38 uml.jpg
drwxr-xr-x 2 amrood amrood 4096 Feb 15 2021 univ
drwxr-xr-x 2 root   root   4096 Dec  9 2021 urlspedia
...
```
每一列的具体含义如下：
- 第一列：文件类型及权限。
- 第二列：硬链接数（对于文件为1，对于目录则为其包含的子项数）。
- 第三列：文件所有者。
- 第四列：文件所属用户组。
- 第五列：文件大小（字节）。
- 第六列：最后修改时间。
- 第七列：文件名或目录名。

注意，每个目录都有指向自身的子目录 (`.`) 和指向其父目录的子目录 (`..`) ，因此即使是空目录，第二列也应显示为2。

表3-2展示了不同类型的文件及其对应的前缀字符：
| 前缀 | 描述 |
| --- | --- |
| `-` | 普通文件，如文本文件、二进制可执行文件、源代码等。|
| `b` | 块设备文件，硬盘可以使用此类文件。|
| `c` | 字符设备文件，硬盘同样可以通过这种方式访问。|
| `d` | 目录文件，能够容纳其他文件或子目录。|
| `l` | 符号链接（软链接），类似于Windows系统中的快捷方式。|
| `p` | 具名管道，用于进程间通信。|
| `s` | 套接字，主要用于进程间的数据交换。|

### 元字符

元字符具有特殊含义，例如 `*` 和 `?` 都是常用的通配符，其中 `*` 可以匹配任意数量的字符，而 `?` 则仅匹配单个字符。

**示例：**
```bash
$ ls ch*.doc
ch01-1.doc  ch010.doc  ch02.doc  ch03-2.doc
ch04-1.doc  ch040.doc  ch05.doc  ch06-2.doc
ch01-2.doc  ch02-1.doc
```

如果希望列出所有 `.doc` 文件，可以使用以下命令：
```bash
$ ls *.doc
```

### 隐藏文件

隐藏文件是指名称以点号(`.`)开头的文件。Linux及其shell通常使用这类文件来存储配置信息。常见的隐藏文件有：
- `.profile`：Bourne Shell (sh) 初始化脚本。
- `.kshrc`：Korn Shell (ksh) 初始化脚本。
- `.cshrc`：C Shell (csh) 初始化脚本。
- `.rhosts`：Remote Shell (rsh) 的配置文件。

要查看这些隐藏文件，需使用 `ls -a` 选项：
```bash
$ ls -a
.profile  docs  lib  testresults
.rhosts  hosts  pub  users
...
```

### 查看文件内容

利用 `cat` 命令可以查看文件内容。例如：
```bash
$ cat filename
This is a Linux file. I created it for the first time.
I'm going to save this content in this file.
```

若想同时显示行号，可以添加 `-b` 选项：
```bash
$ cat -b filename
     1	This is a Linux file. I created it for the first time.
     2	I'm going to save this content in this file.
```

### 统计单词数目

`wc` 命令可用于统计文件的行数、单词数以及字符数。示例如下：
```bash
$ wc filename
      2       19      103 filename
```
这里，第一列表示总行数，第二列为单词数，第三列则是文件大小（以字节为单位）。第四列为文件名。此命令亦支持同时处理多个文件。

### 复制文件

使用 `cp` 命令复制文件，基本语法如下：
```bash
$ cp sourcefile destinationfile
```
例如：
```bash
$ cp filename copyfile
```

### 重命名文件

`mv` 命令不仅可以移动文件还可以更改文件名，语法如下：
```bash
$ mv oldfile newfile
```
例如：
```bash
$ mv filename newfile
```

### 删除文件

`rm` 命令用于删除文件，格式为：
```bash
$ rm filename
```
建议结合 `-i` 选项确认删除操作，避免误删重要文件。

### Linux目录结构

在Linux中，目录也是一种文件类型，用于存放其他文件及其相关信息。无论是普通文件、设备文件还是目录本身，都保存于某个目录之下。

#### 主目录

登录后，默认进入用户的主目录（Home Directory）。切换到主目录或其他用户的主目录，可以分别使用以下命令：
```bash
$ cd
$ cd ~username
```

#### 绝对路径与相对路径

绝对路径总是从根目录 `/` 开始；相对路径则基于当前工作目录。获取当前所在目录的位置，可以使用 `pwd` 命令。

#### 创建目录

使用 `mkdir` 命令创建新目录，语法如下：
```bash
$ mkdir dirname
```
如果需要创建多级目录结构，则应加上 `-p` 选项：
```bash
$ mkdir -p tmp/amrood/test
```

以上即为优化后的文档内容。