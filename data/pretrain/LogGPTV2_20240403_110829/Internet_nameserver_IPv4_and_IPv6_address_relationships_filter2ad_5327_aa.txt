title:Internet nameserver IPv4 and IPv6 address relationships
author:Arthur W. Berger and
Nicholas Weaver and
Robert Beverly and
Larry Campbell
Inferring Internet Server IPv4 and IPv6 Address Relationships
Robert Beverly
Arthur Berger
Naval Postgraduate School
MIT CSAIL / Akamai
Nicholas Weaver
ICSI / UCSD
Abstract
While IPv6 is ﬁnally experiencing non-trivial deploy-
ment, IPv4 and IPv6 are expected to co-exist for the fore-
seeable future, implying dual-stacked devices, and pro-
tocol inter-dependence. We develop and deploy a sys-
tem for characterizing the association between IPv4 and
IPv6 addresses (”siblings”) within network server infras-
tructure, with speciﬁc focus on Internet DNS and web
servers. We develop novel active and passive techniques
for ﬁnding DNS resolver sibling groups, and ﬁnd only
14% are one-to-one, primarily due to complex deploy-
ment and inter-relationship between IPv4 and IPv6. We
then describe a targeted method to actively interrogate
candidate (IPv4, IPv6) pairs to determine if they are as-
signed to the same device. We ﬁnd that the IPv4 and IPv6
addresses of Internet servers frequently belong to differ-
ent interfaces, machines, and even autonomous systems.
Our results have important implications on network re-
silience, security, and performance measurement, as well
as the evolution of IPv6.
1
Introduction
After languishing for decades, IPv6 [11] is experiencing
renewed interest [15], in large part due to technical, eco-
nomic, and political reasons [9, 26]. However, IPv4 and
IPv6 are expected to co-exist for the foreseeable future.
For instance, transition strategies, practical constraints,
and inertia imply that portions of the IPv6 infrastructure
may depend on IPv4, where hosts and infrastructure are
commonly “dual-stacked.” Understanding the relation-
ship between, and inter-dependence of, IPv4 and IPv6 in-
frastructure, and its evolution over time, is an open prob-
lem important to network structure, resilience, security,
and performance measurement.
We examine the problem of associating infrastructure
IPv6 addresses with IPv4 addresses. Speciﬁcally, this
paper focuses on IPv4 and IPv6 address relationships
among Internet DNS and web servers. Previous mea-
surement research has explored IPv6 adoption and pen-
etration of the broader client population, for instance
via web instrumentation [37, 31]. However, less atten-
tion has been placed on characterizing IPv6 within Inter-
net server infrastructure. Several initiatives [16, 17] and
anecdotal evidence [32] suggest that IPv6 infrastructure
deployment is proceeding well in advance of client adop-
tion. For instance, large residential service provider net-
works [10], and content providers [1] fully support IPv6,
but are only conservative in making it publicly available.
We term the relationship of associated IPv4 and IPv6
addresses “siblings.” In the case of a client, the relation-
ship is typically straightforward, with a dual-stacked host
producing a 1-to-1 sibling relationship. However, server
infrastructure is signiﬁcantly more complex.
“Equiv-
alence classes” of IPv4 and IPv6 addresses can result
from e.g. a cluster of dual-stacked machines that perform
load-balancing. We therefore further distinguish a IPv4-
IPv6 association corresponding to a cluster or group of
cooperating machines, even if physically distributed, as
“equipment siblings.” IPv4 and IPv6 addresses that be-
long to a single physical machine are thus “machine sib-
lings.” Our measurement techniques allow us to differen-
tiate between equipment and machine siblings, revealing
important properties of the underlying web and DNS in-
frastructure and the manner in which IPv6 is employed.
We develop three novel measurement systems, both
active and passive, for characterizing Internet infrastruc-
ture IPv4 and IPv6 addresses:
i) passive DNS using a
two-level DNS hierarchy that encodes IPv4 addresses
within IPv6 nameserver records; ii) active DNS whereby
we probe resolvers to induce various lookup behaviors;
iii) targeted server (DNS and web) which measures TCP
timestamp clock skew to generate a physical device ﬁn-
gerprint.
Our passive technique for ﬁnding candidate siblings
of DNS resolvers provides a new method to character-
ize a critical portion of the Internet infrastructure. We
1
deploy the opportunistic system on a large commercial
Content Distribution Network (CDN) to gather approxi-
mately 674,000 (IPv4, IPv6) address pairs. We ﬁnd only
14% of the pairs map as a bijection, primarily due to
load-balancing and a small number of very large DNS
cluster resolvers as deployed by large providers. Over-
all, inter-relationship between IPv4 and IPv6 in this do-
main is particularly complex. To validate and better un-
derstand these passive results, we perform active DNS
measurements. We ﬁnd 75% of address 4-tuples discov-
ered via active probing also exist within our passive data
and are consistent with our inferred sibling groupings.
Lastly, our targeted method allows us to actively interro-
gate candidate IPv4, IPv6 server addresses to determine
if they correspond to machine siblings. We tie our pas-
sive and active DNS measurements by using the targeted
technique to reﬁne equipment sibling equivalence classes
to more precise machine sibling equivalence classes.
Finding infrastructure siblings has several important
motivations. First, as IPv6 deployment increases, the sib-
ling associations will evolve. Our sibling discovery sys-
tem can aid in tracking how the IPv6 network spreads,
where we expect, at least initially, it to largely overlap
with the IPv4 network, and with time, be increasingly
autonomous, and where the future state is unclear.
Second, the extent to which IPv4 infrastructure de-
pends on IPv6, and vice-versa, has security and critical
infrastructure protection implications that are currently
unknown. For example, an attack against the IPv6 ad-
dress of an Internet web or DNS server may or may not
impact that server’s IPv4 service. Further, siblings imply
the potential for correlated failures. Whether IPv6 infras-
tructure is deployed on the same equipment that supports
IPv4 is an important hypothesis we test in this work.
Finally, measurement research that aims to under-
stand various performance and topological aspects of the
IPv6 network, as compared to the existing IPv4 Inter-
net [31, 22], requires sibling discovery. Speciﬁcally, a
common measurement technique is to probe IPv4 and
IPv6 destinations that have the same DNS name, pre-
suming that those addresses correspond to the same end-
host. As shown in §3.5 however, a DNS name in com-
mon does not imply that the IPv4 and IPv6 addresses
are hosted on the same interface, machine, or even au-
tonomous system (AS). Among popular Alexa IPv6 web-
sites, we ﬁnd over 25% are not machine-siblings to their
IPv4 counterpart, and 43% of non-siblings reside in dif-
ferent ASes. Our targeted sibling detection can iden-
tify such cases, thereby preventing potentially erroneous
measurements intending to compare IPv4 and IPv6 per-
formance or paths.
Toward better understanding the relationship between
IPv4 and IPv6, we make four primary contributions:
1. A new passive technique for opportunistically pair-
ing IPv4 and IPv6 addresses of DNS resolvers.
2. A novel approach for active DNS resolver probing
to discover equipment siblings.
3. The ﬁrst method to test if targeted candidate IPv4,
IPv6 addresses are machine siblings.
4. Real-world deployment of the techniques to gather
DNS and website siblings and equivalence classes.
The remainder of this paper is organized as follows. Sec-
tion 2 describes the three measurement techniques com-
prising our system in detail as well as our deployment.
We present results in §3 and discuss ﬁndings in §4. Fi-
nally, we conclude in Section 5.
2 Methodology
Our system includes three novel measurement
tech-
niques. First, we develop an opportunistic method to
passively discover candidate siblings of DNS resolvers.
Second, we provide the ﬁrst reliable targeted sibling de-
tection technique, which can be run on-demand, by us-
ing physical device ﬁngerprinting. Third, we create a
custom DNS server that permits active measurement of
DNS resolvers. Our active DNS technique ties the ﬁrst
two techniques by permitting targeted ﬁngerprinting of
DNS resolvers to reﬁne equipment siblings into clusters
of machine siblings. This section describes each of our
system’s techniques in detail.
2.1 Opportunistic DNS Technique
We opportunistically ﬁnd candidate siblings of DNS re-
solvers by exploiting: 1) a two-level authoritative DNS
resolution, and 2) the ability to encode an IPv4 address
in the lower order bits of an IPv6 address.
Clients rely on local resolvers to perform DNS reso-
lution. We seek to ascertain the IPv4, IPv6 siblings of
dual-stacked DNS resolvers. Assume a recursive DNS
resolver servicing a local client requesting resolution of
www.a.example.com. As depicted in Figure 1, the re-
solver requests resolution (typically an A record) for this
domain from the ﬁrst-level authoritative nameserver via
an IPv4 DNS query. The ﬁrst-level nameserver responds
with the second-level NS, and corresponding “additional”
A and AAAA, records [25]. Crucially, the AAAA records of
the second-level DNS, as returned by our ﬁrst-level DNS,
are formed dynamically. The ﬁrst-level DNS encodes a
query’s IPv4 source address in the lower-order bits of the
response’s additional AAAA record.
For example, Figure 1 shows the ﬁrst-level DNS re-
sponding to a DNS resolver’s query with the authori-
tative NS record of the second-level DNS, including an
additional AAAA record for the second-level nameserver
2
DNS 
Resolver
IPv4
IPv6
  w w w .
A ?
c
.
e
e
.
a
x
a m p l
N S = 2 0 0 1 : 4 2 8 :
First−Level
Auth DNS
o m
I P v 4
:
Pairs
A? www.a.example.com Second−Level
src: IPv6, dst: 2001:428::IPv4
Auth DNS
(IPv4,IPv6)
Figure 1: DNS Resolver Siblings: A multi-level au-
thority returns second-level nameserver AAAA records
encoding a query’s IPv4 source in the lower-order
bits. The second-level nameserver opportunistically as-
sociates IPv6 sources with encoded IPv4 destinations.
that includes the querying resolver’s IPv4 source address
in the low-order bits. The recursive DNS resolver may
use either the A or AAAA address for the second-level res-
olution. When the latter is used and the second-level
DNS receives the query from the DNS resolver, it pairs
the IPv6 source address of that query with the IPv4 ad-
dress encoded in the IPv6 destination of the query. Note
that the dynamically generated AAAA nameserver record
is valid1.
We deploy this system within Akamai [30] to a selec-
tion of domains using its pre-existing multi-level DNS
hierarchy (whose primary purpose is to resolve do-
main names to addresses that can best serve the client).
Deployment on Akamai affords us a rich and diverse
dataset, however the general technique can be imple-
mented on any two authoritative nameservers under com-
mon control along the same DNS namespace hierarchy.
Note however that the technique could be imple-
mented even on a single box, with multiple addresses,
where the IPv4 glue address for the NS record for
example.com is distinct from the IPv4 and IPv6 glue
addresses for the NS record that causes the lookup to the
second level.
2.2 Targeted Fingerprinting Technique
Network ﬁngerprinting is a common technique that relies
on implementation and conﬁguration-speciﬁc character-
istics to identify devices. Fingerprinting may be active or
passive, and different techniques permit different ﬁnger-
print granularity. For instance, active operating system
ﬁngerprinting [23] may aid in eliminating false siblings,
but is unlikely to provide sufﬁcient granularity to gain
conﬁdence in a true sibling relationship as the set of pos-
sible operating systems is small relative to the set of pos-
sible interfaces.
Instead, we utilize previous work on physical device
ﬁngerprinting [20]. While this technique has been used
1The second-level DNS accepts queries from an entire preﬁx; we
use a /80 to encode IPv4 sources in 48 bits.
in the past, we apply it in a novel context to obtain ma-
chine siblings. Observe that any application or transport-
layer ﬁngerprint will be common to the lower level net-
work protocol, whether IPv4 or IPv6.
In particular,
we use evidence of clock skew, visible from TCP-layer
timestamps, to remotely identify devices. By actively
communicating with a pair of remote IPv4 and IPv6 end-
points over TCP, we infer whether they are siblings based
on the similarity of their clock skews.
Deﬁne a candidate pair as (I4, I6). We periodically
connect to a running TCP service on I4 and I6 and ne-
gotiate the TCP timestamp option [18]. We receive a
sequence of time-stamped packets along with their ar-
rival time relative to our prober. Let t4
i be the time at
which the prober observes the i’th IPv4 packet from I4
and t6
i be the observed time of the i’th IPv6 packet from
I6. Similarly, let T 4
i be the timestamp contained
in the TCP options of the i’th packet from I4 and I6 re-
spectively. Following the technique in [20], we compute
the observed offset of each packet over time.
i and T 6
Given a sequence of offsets, we adopt the linear pro-
gramming solution in [27] to determine a line that is con-
strained to be under the data points, but minimizes the
distance to the data points. We then obtain:
y4 = a 4x + b 4
and
y6 = a 6x + b 6
I.e., we determine two lines, one corresponding to the
interrogation of I4 and one to I6 that lower-bounds the
set of offset points observed. We determine the angle q
between the two lines.
q (a 4,a 6) = tan−1
a 4 − a 6
1 + a 4a 6
If q < t , then I4 and I6 are siblings, where t
is a thresh-
old. Empirically, we ﬁnd that t = 1.0 is sufﬁciently dis-
criminating.
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
Figures 2(a) and 2(b) graphically illustrate our ap-
proach using two hosts for which we know their ground-
truth interface addresses. Figure 2(a) displays the ob-
served skew from interrogating Host A’s IPv6 interface
as compared to Host B’s IPv4 interface. We observe not
only different skews, but see that the clocks on the re-
spective host are drifting in opposite directions and have
different resolutions. Hence, we infer that the IPv4 and
IPv6 interfaces interrogated are false siblings (q ≥ t ).
In contrast, Figure 2(b) displays a true sibling rela-
tionship.
In this experiment, we probe the same host
(A) via its IPv4 and IPv6 interfaces. We observe nearly
identical inferred skew (the linear programming solu-
tion determined as a 4 = −0.058253,b 4 = −1.178 and
a 6 = −0.058276,b 6 = −1.139; q = 1.3 × 10−3).
A limitation of our technique is that it is limited to
interfaces for which the prober can establish a TCP con-
3
)
c
e
s
m
(
t
e
s
f
f
o
d
e
v
r
e
s
b
o
 40
 30
 20
 10
 0
-10
-20
-30
-40
-50
-60
-70
Host A (IPv6)
Host B (IPv4)
a =0.029938 b =-3.519
a =-0.058276 b =-1.139
 0
 200
 400
 600
 800
 1000
measurement time(sec)
(a) False Siblings
)
c
e
s
m
(
t
e
s
f
f
o
d
e
v
r
e
s
b
o
 10
 0
-10
-20
-30
-40
-50
-60
-70
Host A (IPv6)
Host A (IPv4)
a =-0.058253 b =-1.178
a =-0.058276 b =-1.139
 0
 200
 400
 600
 800
 1000
measurement time(sec)
(b) True Siblings
Figure 2: Targeted machine-sibling detection via TCP timestamp skew inference.
nection, e.g. a remote web server or a remote DNS server
via our truncation method which we discuss next.
2.3 Active DNS Measurements