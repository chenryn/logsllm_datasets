protocol for the Anonymous Zether relation (1) presents a
number of challenges. Importantly, it entails facts not just
about two among a list of ciphertexts (namely, the sender’s and
receiver’s, which are required to encrypt opposite amounts) but
also about all of the rest (which are required to encrypt zero).
This very fact precludes an elementary application of Groth
and Kohlweiss’s one-out-of-many proofs [9], whose use [6]
suggests. The tempting approach whereby the prover conducts
[9] N times—“handing” to the veriﬁer, in each execution, a
distinct element of the list—would be inefﬁcient (incurring
super-linear communication and super-quadratic computation).
More subtly, it would prove nothing about how the N secret
indices relate to each other, and in particular whether they’re
distinct. Indeed,
the prover must deliver something like a
veriﬁable shufﬂe of the input ciphertexts (so that the veriﬁer
can perform checks on the shufﬂed ciphertexts).
Shufﬂe proofs too, however, fall short of our needs (we
again leave aside their inefﬁciency). Indeed, the adjustment
ciphertexts of the relation (1) are encrypted under the ring’s
members’ heterogeneous public keys, as are the ciphertexts
representing their post-adjustment balances. More subtly, shuf-
ﬂe proofs also deliver “more than we need”. While they allow
a prover to designate a full permutation of a list of ciphertexts,
our prover need only distinguish two among them (namely,
the sender’s and receiver’s); the veriﬁer may complete the
permutation arbitrarily. Our protocol fundamentally exploits
this insight.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:14:00 UTC from IEEE Xplore.  Restrictions apply. 
1801
mials Pi(X), i ∈ {0, . . . , N−1}, and the efﬁcient transmission
(i.e., using only O(log N ) communication) to the veriﬁer of
these polynomials’ evaluations pi := Pi(x) at a challenge x.
Importantly, each Pi(X) has “high degree” (i.e., m, where
m = log N) if and only if i = l, where l is a secret index
chosen by the prover.
The utility of the vector (pi)N−1
i=0 resides in its use as the ex-
ponent in a multi-exponentiation. Indeed multi-exponentiating
the public vector of commitments (c0, . . . , cN−1) by (pi)N−1
i=0
“picks out”, modulo lower-order terms, exactly that commit-
ment ci for which Pi(X) has high degree—namely, cl—while
nonetheless concealing the value of l. We provide a more
thorough overview in Subsection III-B below.
B. Idea of many-out-of-many proofs
Our ﬁrst core idea is that, having reconstructed the vector
(pi)N−1
i=0 of evaluations, the veriﬁer may “homomorphically
permute” this vector and re-use its components in successive
multi-exponentiations. In this way, the veriﬁer will pick out
secret elements among c0, . . . , cN−1 in a highly controlled
way (and without necessitating additional communication).
We ﬁx a permutation κ ∈ SN in what follows. Given
the vector (pi)N−1
i=0 , the veriﬁer may iteratively permute its
components, and so construct the sequence of vectors
(cid:0)pκ−j (i)
(cid:1)N−1
i=0
,
for j ∈ {0, . . . , o − 1} (where each κ−j ∈ SN is an “inverse
iterate” of κ and o denotes κ’s order in SN ).
i=0 cpi
Despite not knowing l, the veriﬁer nevertheless knows that
Pκ−j (i)(X) has high degree if and only if i = κj(l). In this
way, the veriﬁer iteratively applies κ to an unknown initial
element l ∈ {0, . . . , N − 1}. Under the additional condition
that (cid:104)κ(cid:105) ⊂ SN acts freely on {0, . . . , N − 1}, each sequence
(l, κ, κ2(l), . . . , κo−1(l)) is free of repetitions (i.e., regardless
of l), and these sequences never “double up”. Permutations κ
of this type thus represent a natural class for our purposes.
C. Correction terms and linear maps
i does not directly yield cxm
Of course, (cid:81)N−1
an analogous issue holds for each ej := (cid:81)N−1
(where
m = log N), but rather the sum of this element with lower-
order terms which must be “cancelled out”. More generally,
(for
j ∈ {0, . . . , o − 1}). Furthermore, there may be up to linearly
many such elements (if o = Θ(N )), and to send correction
terms for each would impose excessive communication costs.
Our compromise is to correct not each individual term ej,
but rather a “random linear combination” of these terms; this
recourse evokes that used (twice) in Bulletproofs [12, §4.1].
For additional ﬂexibility, we also interpose an arbitrary linear
transformation Ξ : Fo
q. The prover then sends correction
terms only for the single element
pκ−j (i)
i=0 c
i
q → Fs
l
(cid:2) 1
vs−1 (cid:3) ·(cid:2) Ξ (cid:3) ·
v
. . .
II. OVERVIEW OF OUR CONTRIBUTION
proofs,
introduced
by Groth
One-out-of-many
and
Kohlweiss [9], allow a prover to demonstrate knowledge of a
secret element among a public list of commitments, together
with an opening of this commitment to 0. This important
primitive has been used to construct ring signatures, zerocoin,
and proofs of set membership [9], along with “accountable
ring signatures” [10]; it has also been re-instantiated in the
setting of lattices [11].
By deﬁnition, these proofs bear upon only one (secret)
the others;
element of a list, and establish nothing about
indeed, in general the prover knows nothing about these other
elements. As we have seen, however, certain applications
require more ﬂexible assertions (which, in particular, pertain
to more than one element of the list). Informally, many-out-of-
many proofs allow a prover to efﬁciently prove knowledge of a
certain (ordered) subset of a ﬁxed list of commitments, as well
as that the elements of this subset satisfy certain properties.
We brieﬂy sketch a representative example. Given some list
c0, . . . , cN−1 of commitments, and having agreed upon some
pre-speciﬁed linear map Ξ : FN
q (say), a prover might
wish to demonstrate knowledge of a secret permutation K ∈
SN , as well as of openings to zero of the image points of
(cK(0), . . . , cK(N−1)) under Ξ. We show how this can be done,
given certain restrictions on K.
q → Fs
This technique is powerful, with an interesting combina-
torial ﬂavor. In fact, we situate the above-described proto-
col within a natural family of extensions to [9], themselves
parameterized by permutations κ ∈ SN of a certain form
(namely, those whose action partitions {0, 1, . . . , N − 1} into
equal-sized orbits). In this family, κ = id ∈ SN exactly
recovers [9], whereas the above example corresponds to κ an
N-cycle. Finally, κ = (0, 2, . . . , N − 2)(1, 3, . . . , N − 1) (for
N even, and for specially chosen Ξ, described below) is used
in the crucial step of Anonymous Zether (details are given in
Subsection V-C). We sketch further possible applications in
Subsection III-E. In each case, the prover proves knowledge
of exactly one “ordered orbit” of κ, as well as that
the
commitments represented by this orbit satisfy prescribed linear
equations.
Remarkably, our communication remains logarithmic (like
that of [9]). Moreover, under mild conditions on the linear
map Ξ (which hold in all of our applications), we add at most
a logarithmic multiplicative factor to both the prover’s and
veriﬁer’s computational complexity. We thus have (see Section
III below):
Theorem II.1. There exists a sound, honest veriﬁer zero-
knowledge protocol for the many-out-of-many relation R2 be-
low, which requires O(log N ) communication, and moreover
can be implemented in O(N log2 N ) time for the prover and
O(N log N ) time for the veriﬁer.
A. Review of one-out-of-many proofs
The central technique of one-out-of-many proofs [9] (see
also [10]) is the construction, by the prover, of certain polyno-
 ,
e0
e1
...
eo−1
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:14:00 UTC from IEEE Xplore.  Restrictions apply. 
1802
(cid:123)(cid:122)
0, . . . . . . . . . , 1, . . . . . . . . . . . . . . . , 0
1 only at index l
0, . . . . . . . . . . . . , 1, . . . . . . . . . . . . , 0
0, . . . . . . . . . . . . . . . , 1, . . . . . . . . . , 0
...
0, . . . , 1, . . . . . . . . . . . . . . . . . . . . . , 0
0, . . . . . . , 1, . . . . . . . . . . . . . . . . . . , 0
(cid:125)
(cid:125)
(cid:124)
(cid:124)
(a) “Prover’s view”.
(pi)N−1
i=0
(cid:123)(cid:122)
“1” at unknown index
(pi)N−1
i=0
(pi)N−1
i=0
(pi)N−1
i=0
...
(pi)N−1
i=0
(b) “Veriﬁer’s view”.
Fig. 2: Two views of the circular shift matrix.
where v is a random challenge chosen by the veriﬁer. By inter-
leaving v with the many-out-of-many process with appropriate
delicacy, we ensure that the resulting protocol is still sound.
D. A canonical example
To illustrate these ideas, we describe an example which
is essentially canonical: the case κ = (0, 1, . . . , N − 1) (we
describe reductions from general κ to this case below). Iterat-
ing this permutation corresponds exactly to circularly rotating
the vector (pi)N−1
i=0 ; this process in turn “homomorphically
increments” l modulo N. In this way, the prover sends the
top row of a secret circular shift matrix to the veriﬁer, who
constructs the rest locally. This process is depicted in Fig. 2.
The evaluation of the matrix multiplication of Fig. 2(b) by
the vector of curve points (ci)N−1
i=0 takes O(N 2) time, na¨ıvely.
Yet Fig. 2(b) is a circulant matrix, and this multiplication is a
circular convolution; the number-theoretic transform can thus
be applied (we discuss this further in Subsection II-E).
the permuted input vector (cκl(j))N−1
j=0 yields, modulo lower-
order terms,
j=0 , upon
which any linear transformation Ξ (as well as the “linear
combination trick”) can be homomorphically applied. Sup-
posing now, in addition, that the prover and veriﬁer have
q → Fq,
agreed in advance upon a linear functional Ξ : FN
our general protocol (in this case) thus yields a proof of
knowledge of a secret permutation K ∈ (cid:104)(0, 1, . . . , N − 1)(cid:105),
as well as of an opening to zero of the image under Ξ of the
permuted vector (cK(0), cK(1), . . . , cK(N−1)). Heuristically, it
asserts that the “messages” of c0, c1, . . . , cN−1 reside in some
ﬁxed hyperplane of FN
The resulting matrix product (ej)N−1
q , after being appropriately rotated.
Our communication complexity is still
logarithmic;
computational complexity becomes O(N log2 N ) for
prover and O(N log N ) for the veriﬁer.
the
the
E. Circular convolutions and the number-theoretic transform
i=0 ) with the vector of ﬁeld elements (pi)N−1
We remark further upon our use of Fourier-theoretic tech-
niques. While classical treatments (cf. e.g., Nussbaumer [13,
§8]) treat only the convolution of ﬁeld-element vectors, we
must convolve a vector of elliptic curve points (namely,
(ci)N−1
i=0 . Surpris-
ingly, the number-theoretic transform still works in this setting
(i.e., even when “ﬁeld multiplication” cannot be performed on
the right-hand vector’s domain). Indeed, the components of the
signal being transformed need only reside in a vector space
over a ﬁeld—and need not reside in the ﬁeld itself—for the
NTT to function.
III. MANY-OUT-OF-MANY PROOFS
We turn to our main results. We begin with preliminaries on
permutations, referring to Cohn [14] for further background.
The permutation group SN consists of bijections κ :
{0, . . . , N − 1} → {0, . . . , N − 1}, with a group law given
by composition. For a permutation κ ∈ SN of order o,
and some initial element l ∈ {0, . . . , N − 1}, we mean by
l’s ordered orbit under κ the ordered sequence of elements
(cid:0)l, κ(l), κ2(l), . . . , κo−1(l)(cid:1) of {0, . . . , N − 1}.
Deﬁnition III.1. We say that a permutation κ ∈ SN is free
if, for each l ∈ {0, . . . , N − 1}, the ordered orbit of l under
κ consists of distinct elements.
That κ is free essentially entails that each of its non-identity
iterates lacks ﬁxed points.
Example III.2. The identity permutation id ∈ SN is trivially
free, as each of its ordered orbits are singletons.
Example III.3. Each power of the N-cycle (0, 1, . . . , N−1) ∈
SN is free.
Example III.4. The permutation (0, 1, 2, 3)(4, 5)(6, 7) ∈ S8
(of order 4) is not free, as the ordered orbit of 4 (say) is
(4, 5, 4, 5).
Freeness is a natural group-theoretic property, with a num-
ber of equivalent characterizations. For example, κ is free if
and only if its cycle structure consists of equal-length cycles
(with no ﬁxed points). Alternatively, freeness captures the
property whereby the subgroup (cid:104)κ(cid:105) ⊂ SN induces a free
action on {0, . . . , N − 1}.
A. Commitments to bits
Our protocol uses as a subroutine the “bit commitment”
protocol of Bootle, Cerulli, Chaidos, Ghadaﬁ, Groth, and
Petit [10, Fig. 4], which we further specialize to the binary
case (i.e., n = 2). This protocol
improves the single-bit
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:14:00 UTC from IEEE Xplore.  Restrictions apply. 
1803
commitment procedure of [9, Fig. 1], and requires slightly
less communication. The relation is as follows:
(B; (b0, . . . , bm−1), rB) |
R1 =
(cid:110)
∀k, bk ∈ {0, 1} ∧ B = Com (b0, . . . , bm−1; rB)
(cid:111)
.
We now recall the protocol:
(cid:17)
k=0 ; rC
0, . . . , a2
(cid:16)
rA, rC , rD, a0, . . . , am−1 ←$ Fq