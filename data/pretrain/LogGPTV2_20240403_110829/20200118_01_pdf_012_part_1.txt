全文检索、中文分词
模糊查询、相似文本查询
阿里云
digoal
目录
• 全文检索原理
• 自定义分词
• rank排序
• 关键词分析
• gin索引
• rum索引
• 全文检索+附加过滤
• 模糊查询
• 单字模糊查询
• 双字模糊查询
• wchar模糊查询注意事项
• 相似文本查询
• 文本特征向量：tsvector
• 检索条件：tsquery
• 中文分词插件
• pg_scws
• pg_jieba
• zhparser
支持精排、
全文检索技术 微调
ranking
字符串 分词
table存储 INDEX倒排
index tree
token_type:dict(s) row1 token1:
mapping, To synomn
tsvector rowID?,...
in dict
...
parser 自定义
+
dictionary
to row2 token2
dictionary
token
tsvector rowID?,...
...
...
Convert
row3 token2
tsvector rowID?,...
lexemes
select * from tbl where ts @@ to_tsquery('pg & alibaba')
vector
order by ts_rank(ts, to_tsquery('pg & alibaba') );
-- order by ts_rank_cd(ts, to_tsquery('pg & alibaba') )
https://www.postgresql.org/docs/10/static/textsearch-controls.html#TEXTSEARCH-RANKING
全文检索技术 - 词距离条件
按距离范围搜索
自定义UDF，RANGE相交操作判断。
https://github.com/digoal/blog/blob/master/201801/20180123_01.md
全文检索技术 - 词距离条件
全文检索技术 - 内置ranking
支持4种weight：
标题、作者、摘要、
内容
内置ranking
算法
全文检索技术 - ranking掩码
Both ranking functions take an integernormalizationoption that specifies whether and how a document's length should impact its rank.
0 (the default) ignores the document length
1 divides the rank by 1 + the logarithm of the document length
2 divides the rank by the document length
4 divides the rank by the mean harmonic distance
between extents
(this is implemented only by ts_rank_cd)
8 divides the rank by the number of unique words
in document
16 divides the rank by 1 + the logarithm of the
number of unique words in document
32 divides the rank by itself + 1
内置ranking
算法
全文检索技术 - 内置ranking
全文检索技术 - 自定义ranking
ranking sort by index
• rum index am
CREATE EXTENSION rum;
CREATE INDEX rumidx ON test_rum USING rum (a rum_tsvector_ops);
rds pg zhparser自定义分词
https://help.aliyun.com/knowledge_detail/44451.html
create extension zhparser ;
CREATE TEXT SEARCH CONFIGURATION testzhcfg (PARSER = zhparser);
ALTER TEXT SEARCH CONFIGURATION testzhcfg ADD MAPPING FOR n,v,a,i,e,l WITH simple;
db1=> SELECT to_tsquery('testzhcfg', '保障房资金压力');
NOTICE: zhparser add dict : "/data/tsearch_data/dict_extra.xdb" failed!
to_tsquery
---------------------------------
'保障' & '房' & '资金' & '压力'
(1 row)
rds pg zhparser自定义分词
db1=> insert into pg_ts_custom_word values ('保障房资');
INSERT 0 1
db1=> select zhprs_sync_dict_xdb();
db1=> SELECT to_tsquery('testzhcfg', '保障房资金压力');
to_tsquery
---------------------
'保障房资' & '压力'
(1 row)
db1=> alter role all set zhparser.multi_short=on;
ALTER ROLE
db1=> SELECT to_tsquery('testzhcfg', '保障房资金压力');
to_tsquery
------------------------------
'保障房资' & '保障' & '压力'
(1 row)
关键词统计
• ts_stat
目录
• 全文检索原理
• 自定义分词
• rank排序
• 关键词分析
• gin索引
• rum索引
• 全文检索+附加过滤
• 模糊查询
• 单字模糊查询
• 双字模糊查询
• wchar模糊查询注意事项
• 相似文本查询
gin索引结构
• src/backend/access/gin/README
• 倒排结构
https://www.postgresql.org/docs/10/static/gin.html ctid(行号) ctid(行号)
• 多值类型 element tree
posting
• ctids (posting list or tree) posting list
tree
• 写入优化
• element pendinglist row1: array[key.....(s)]
• gin_pending_list_limit ...... posting list
• 大结果集查询优化 - fuzzy match
• gin_fuzzy_search_limit ...
metapage 倒排树
pending
list for
fast update
...
key,point key,point key,point
... ... ...
gin索引结构
• https://www.cybertec-postgresql.com/en/what-postgresql-full-text-search-has-to-do-with-vacuum/
• https://www.postgresql.org/docs/12/gin-implementation.html
gin索引结构
• https://www.cybertec-postgresql.com/en/what-postgresql-full-text-search-has-to-do-with-vacuum/
• https://www.postgresql.org/docs/12/gin-implementation.html
内窥GIN内容 https://www.postgresql.org/docs/11/pageinspect.html#id-
1.11.7.31.7
rum索引结构
• https://github.com/postgrespro/rum
• https://github.com/digoal/blog/blob/master/201907/20190706_01.md
额外信息（例如attach column's value, tsvector's 出现次数等）
rum-全文检索+附加属性查询
CREATE TABLE tsts (id int, t tsvector, d timestamp);
\copy tsts from 'rum/data/tsts.data'
CREATE INDEX tsts_idx ON tsts USING rum (t rum_tsvector_addon_ops, d)
WITH (attach = 'd', to = 't');
XPLAIN (costs off)
SELECT id, d, d  '2016-05-16 14:21:25' FROM tsts WHERE t @@ 'wr&qh' ORDER BY d  '2016-05-16 14:21:25' LIMIT 5;
QUERY PLAN
-----------------------------------------------------------------------------------
Limit
-> Index Scan using tsts_idx on tsts
Index Cond: (t @@ '''wr'' & ''qh'''::tsquery)
Order By: (d  'Mon May 16 14:21:25 2016'::timestamp without time zone)
(4 rows)
rum-全文检索+附加属性查询
SELECT id, d, d  '2016-05-16 14:21:25' FROM tsts WHERE t @@ 'wr&qh' ORDER BY d  '2016-05-16 14:21:25' LIMIT 5;
id | d | ?column?
-----+---------------------------------+---------------
355 | Mon May 16 14:21:22.326724 2016 | 2.673276
354 | Mon May 16 13:21:22.326724 2016 | 3602.673276
371 | Tue May 17 06:21:22.326724 2016 | 57597.326724
406 | Wed May 18 17:21:22.326724 2016 | 183597.326724
415 | Thu May 19 02:21:22.326724 2016 | 215997.326724
(5 rows)
目录