### CMSTP

**Description:**

Adversaries may exploit the Microsoft Connection Manager Profile Installer (CMSTP.exe) to execute malicious code. CMSTP.exe is a command-line utility designed to install service profiles for remote access connections by processing installation information files (INF). Adversaries can leverage this by providing INF files that contain malicious commands, similar to how Regsvr32 and "Squiblydoo" are abused. This technique allows them to load and execute DLLs or COM scriptlets (SCT) from remote servers, potentially bypassing security measures like AppLocker.

**Key Points:**
- **Execution Mechanism:** CMSTP.exe processes INF files, which can be crafted to include malicious commands.
- **Bypassing Defenses:** As a legitimate, signed binary, CMSTP.exe can evade application control defenses.
- **User Account Control (UAC) Bypass:** CMSTP.exe can also be used to bypass UAC and execute arbitrary commands through an auto-elevated COM interface.

**Detection:**
- **Process Monitoring:** Monitor and analyze the execution and arguments of CMSTP.exe. Compare recent invocations with known good arguments and loaded files to detect anomalies.
- **Sysmon Events:** Use Sysmon events to identify potential abuses, such as:
  - Event 1 (Process creation) where ParentImage contains CMSTP.exe.
  - Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.
  - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll.
  - Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe.

**References:**
- [Microsoft Connection Manager](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10))
- [Twitter CMSTP Usage Jan 2018](https://twitter.com/ItsReallyNick/status/958789644165894146)
- [MSitPros CMSTP Aug 2017](https://msitpros.com/?p=3960)
- [GitHub Ultimate AppLocker Bypass List](https://github.com/api0cradle/UltimateAppLockerByPassList)
- [Endurant CMSTP July 2018](http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/)
- [Twitter CMSTP Jan 2018](https://twitter.com/NickTyrer/status/958450014111633408)

---

### SSH Hijacking

**Description:**

Adversaries may hijack active SSH sessions to move laterally within a network. Secure Shell (SSH) is a standard protocol for secure remote access on Linux and macOS systems. It allows users to connect to other systems via an encrypted tunnel, typically using password, certificate, or asymmetric key pair authentication.

**Key Points:**
- **Lateral Movement:** By compromising SSH agent sockets or obtaining root access, adversaries can hijack existing SSH sessions to move between systems.
- **Difference from SSH:** SSH hijacking differs from standard SSH usage in that it leverages existing sessions rather than creating new ones with valid accounts.

**Detection:**
- **Monitor Logon Sessions:** Look for user accounts logged into systems they do not normally access or unusual access patterns over a short period.
- **SSH Agent Sockets:** Monitor for SSH-agent socket files being used by different users, which may indicate session hijacking.

**References:**
- [Slideshare Abusing SSH](https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219)
- [SSHjack Blackhat](https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf)
- [Clockwork SSH Agent Hijacking](https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking)
- [Breach Post-mortem SSH Hijack](https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident)

---

### Disable Windows Event Logging

**Description:**

Adversaries may disable Windows event logging to limit the data available for detection and auditing. Windows event logs record various system and user activities, such as login attempts and process creation, which are crucial for security monitoring.

**Key Points:**
- **EventLog Service:** The EventLog service manages event logs from system components and applications. It can be disabled or modified to prevent logging.
- **Audit Policy:** Security audit policies define which events are logged and can be changed using tools like secpol.msc or auditpol.exe.
- **Disabling Methods:** Adversaries can disable the EventLog service using commands like `Set-Service -Name EventLog -Status Stopped` or by modifying registry keys.

**Detection:**
- **Process and Command Monitoring:** Monitor for commands that disable logging, such as `auditpol`, `sc stop EventLog`, and use of offensive tools like Mimikatz.
- **Event Viewer:** Look for specific events indicating log clearing, such as Event ID 1102 under the "Security" log and Event ID 104 under the "System" log.
- **Registry Monitoring:** Watch for changes to registry keys related to event logging, such as `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog`.

**References:**
- [Disable_Win_Event_Logging](https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-techniques/defense-evasion/t1562-impair-defenses/disable-windows-event-logging)
- [def_ev_win_event_logging](https://www.hackingarticles.in/defense-evasion-windows-event-logging-t1562-002/)
- [EventLog_Core_Technologies](https://www.coretechnologies.com/blog/windows-services/eventlog/)
- [Audit_Policy_Microsoft](https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/audit-policy)
- [Windows Log Events](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/)
- [disable_win_evt_logging](https://ptylu.github.io/content/report/report.html?report=25)
- [auditpol](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/auditpol)
- [winser19_file_overwrite_bug_twitter](https://web.archive.org/web/20211107115646/https://twitter.com/klinix5/status/1457316029114327040)
- [T1562.002_redcanaryco](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.002/T1562.002.md)
- [Advanced_sec_audit_policy_settings](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/advanced-security-audit-policy-settings)
- [auditpol.exe_STRONTIC](https://strontic.github.io/xcyclopedia/library/auditpol.exe-214E0EA1F7F7C27C82D23F183F9D23F1.html)
- [evt_log_tampering](https://svch0st.medium.com/event-log-tampering-part-1-disrupting-the-eventlog-service-8d4b7d67335c)

---

### Scheduled Transfer

**Description:**

Adversaries may schedule data exfiltration to blend with normal traffic patterns or to ensure availability. This involves setting up data transfers at specific times or intervals.

**Key Points:**
- **Blending Traffic:** Scheduling exfiltration can help adversaries avoid detection by mimicking regular network activity.
- **Exfiltration Techniques:** Other techniques, such as Exfiltration Over C2 Channel or Exfiltration Over Alternative Protocol, are often used in conjunction with scheduled exfiltration.

**Detection:**
- **File Access and Network Behavior:** Monitor for unrecognized processes or scripts traversing file systems and sending network traffic.
- **Network Connections:** Look for consistent network connections to the same destination occurring at the same time of day over multiple days.

**References:**
- [MITRE ATT&CK T1029](https://attack.mitre.org/techniques/T1029)

---

### SMB/Windows Admin Shares

**Description:**

Adversaries may use valid accounts to interact with remote network shares via Server Message Block (SMB). This allows them to perform actions as the logged-on user and move laterally within the network.

**Key Points:**
- **SMB Protocol:** SMB is used for file, printer, and serial port sharing on Windows networks. Adversaries can use it to access hidden administrative shares like `C$`, `ADMIN$`, and `IPC$`.
- **Lateral Movement:** With valid credentials, adversaries can use SMB to transfer files and execute binaries on remote systems.

**Detection:**
- **Logon Session Monitoring:** Ensure proper logging of account logins and centrally collect this data.
- **Network Traffic Monitoring:** Monitor for remote login events and associated SMB activity, including file transfers and remote process execution.
- **Command Execution:** Monitor for tools and commands used to connect to remote shares, such as `Net`.

**References:**
- [Medium Detecting WMI Persistence](https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96)
- [TechNet RPC](https://technet.microsoft.com/en-us/library/cc787851.aspx)
- [Microsoft Admin Shares](http://support.microsoft.com/kb/314984)
- [Windows Event Forwarding Payne](https://docs.microsoft.com/en-us/archive/blogs/jepayne/monitoring-what-matters-windows-event-forwarding-for-everyone-even-if-you-already-have-a-siem)
- [Lateral Movement Payne](https://docs.microsoft.com/en-us/archive/blogs/jepayne/tracking-lateral-movement-part-one-special-groups-and-specific-service-accounts)
- [Wikipedia Server Message Block](https://en.wikipedia.org/wiki/Server_Message_Block)

---

### Implant Internal Image

**Description:**

Adversaries may implant cloud or container images with malicious code to establish persistence. This technique involves backdooring images in registries within the victim's environment, such as AWS AMIs, GCP Images, Azure Images, or Docker containers.

**Key Points:**
- **Persistence:** Backdoored images can provide persistent access if the infrastructure provisioning tool is configured to use the latest image.
- **Tools and Techniques:** Tools like the Cloud Container Attack Tool (CCAT) can facilitate the implantation of backdoors in cloud container images.

**Detection:**
- **Image Monitoring:** Monitor for anomalous additions or modifications to images and containers.
- **Docker Daemon Logs:** In containerized environments, monitor Docker daemon logs or Kubernetes audit logs for suspicious activity.

**References:**
- [Rhino Labs Cloud Image Backdoor Technique Sept 2019](https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/)
- [Rhino Labs Cloud Backdoor September 2019](https://github.com/RhinoSecurityLabs/ccat)

---

### Protocol Tunneling

**Description:**

Adversaries may tunnel network communications within another protocol to avoid detection and enable access to otherwise unreachable systems. This involves encapsulating one protocol within another, such as SSH tunneling or DNS over HTTPS (DoH).

**Key Points:**
- **Encapsulation:** Encapsulating protocols can conceal malicious traffic and provide an outer layer of encryption.
- **Bypassing Filters:** Tunneling can bypass network filters and allow access to blocked services.

**Detection:**
- **Network Monitoring:** Monitor for systems listening on ports commonly associated with tunneling, such as SSH (port 22).
- **Uncommon Data Flows:** Analyze network data for unusual data flows, such as a client sending significantly more data than it receives from a server.

**References:**
- [SSH Tunneling](https://www.ssh.com/ssh/tunneling)
- [BleepingComp Godlua JUL19](https://www.bleepingcomputer.com/news/security/new-godlua-malware-evades-traffic-monitoring-via-dns-over-https/)
- [University of Birmingham C2](https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf)

---

### Control Panel

**Description:**

Adversaries may abuse the Windows Control Panel (control.exe) to proxy the execution of malicious payloads. Control Panel items are utilities that allow users to view and adjust computer settings, and can be executed directly or programmatically.

**Key Points:**
- **Execution Mechanism:** Malicious Control Panel items (CPL files) can be delivered via phishing or multi-stage malware and can bypass application and file extension allow lists.
- **Bypassing Defenses:** Even non-compliant CPL files can be loaded and executed through their DllEntryPoint when the Control Panel is run.

**Detection:**
- **Process and API Monitoring:** Monitor and analyze activity related to CPL files, such as the use of control.exe and the Control_RunDLL and ControlRunDLLAsUser API functions in shell32.dll.
- **Inventory and Analysis:** Inventory Control Panel items and analyze new and existing items for malicious content.

**References:**
- [Microsoft Implementing CPL](https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx)
- [TrendMicro CPL Malware Jan 2014](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)
- [TrendMicro CPL Malware Dec 2013](https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/)
- [Palo Alto Reaver Nov 2017](https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/)
- [ESET InvisiMole June 2020](https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf)

---

### Network Address Translation Traversal

**Description:**

Adversaries may modify a network device's NAT configuration to bridge network boundaries and bypass restrictions on traffic routing. This can enable access to protected systems behind border devices.

**Key Points:**
- **NAT Configuration:** Modifying NAT configurations can allow adversaries to overcome inherent routing limitations and obscure their activities.
- **Custom NAT Mechanisms:** Adversaries may implement custom NAT mechanisms to further conceal their activities.

**Detection:**
- **Network Traffic Monitoring:** Monitor network traffic on both interfaces of border network devices for signs of NAT being implemented.
- **Configuration Monitoring:** Monitor the border network device's configuration for unauthorized NAT rules.

**References:**
- [RFC1918](https://tools.ietf.org/html/rfc1918)

---

### Upload Tool

**Description:**

Adversaries may upload tools to third-party or adversary-controlled infrastructure to make them accessible during targeting. These tools can be open-source, closed-source, free, or commercial and can be used for malicious purposes.

**Key Points:**
- **Infrastructure:** Tools can be placed on previously purchased/rented or compromised infrastructure.
- **Third-Party Hosting:** Adversaries can also use third-party hosting locations, such as GitHub, to host tools.

**Detection:**
- **Internet Scanning:** Conduct internet scanning to uncover when an adversary has staged tools.
- **Post-Compromise Detection:** Focus on detecting post-compromise phases, such as Ingress Tool Transfer.

**References:**
- [Dell TG-3390](https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage)
- [Malwarebytes Heroku Skimmers](https://www.malwarebytes.com/blog/news/2019/12/theres-an-app-for-that-web-skimmers-found-on-paas-heroku)
- [Dragos Heroku Watering Hole](https://www.dragos.com/blog/industry-news/a-new-water-watering-hole/)
- [Intezer App Service Phishing](https://www.intezer.com/blog/malware-analysis/kud-i-enter-your-server-new-vulnerabilities-in-microsoft-azure/)

---

### Security Support Provider

**Description:**

Adversaries may abuse Security Support Providers (SSPs) to execute DLLs when the system boots. SSP DLLs are loaded into the Local Security Authority (LSA) process, giving them access to sensitive information like plaintext passwords.

**Key Points:**
- **Registry Keys:** SSPs are configured in the Registry keys `HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages` and `HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages`.
- **Persistence and Privilege Escalation:** Adversaries can modify these keys to add new SSPs, which will be loaded on the next system boot or when the AddSecurityPackage API function is called.

**Detection:**
- **Registry Monitoring:** Monitor for changes to the SSP Registry keys.
- **LSA Process Monitoring:** Monitor the LSA process for DLL loads and set the Registry key `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe` with `AuditLevel = 8` to generate events for unsigned SSP DLLs.

**References:**
- [Graeber 2014](http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html)
- [Microsoft Configure LSA](https://technet.microsoft.com/en-us/library/dn408187.aspx)

---

### Winlogon Helper DLL

**Description:**

Winlogon.exe is a Windows component responsible for actions at logon/logoff and the secure attention sequence (SAS). Adversaries may modify Registry entries to load and execute malicious DLLs and executables.

**Key Points:**
- **Registry Entries:** Malicious modifications to the `Winlogon\Notify`, `Winlogon\Userinit`, and `Winlogon\Shell` subkeys can cause Winlogon to load and execute malicious code.
- **Persistence:** Adversaries may use these features to repeatedly execute malicious code and establish persistence.

**Detection:**
- **Registry Monitoring:** Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software or patch cycles.
- **Process Behavior:** Look for abnormal process behavior that may be due to a process loading a malicious DLL.

**References:**
- [Cylance Reg Persistence Sept 2013](https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order)
- [TechNet Autoruns](https://technet.microsoft.com/en-us/sysinternals/bb963902)

---

### Binary Padding

**Description:**

Adversaries can use binary padding to add junk data to malware, changing its on-disk representation without affecting functionality. This can help avoid hash-based blacklists and static anti-virus signatures.

**Key Points:**
- **Checksum Change:** Padding changes the checksum of the file, making it less likely to be detected by signature-based tools.
- **File Size Limitations:** Increasing the file size can reduce the effectiveness of certain tools and detection capabilities.

**Detection:**
- **Signature-Based Detection:** Use file-based signatures to detect padding.
- **Behavioral Indicators:** Look for behavior characteristics of the resulting process, such as system and network information discovery or lateral movement.

**References:**
- [ESET OceanLotus](https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/)
- [Securelist Malware Tricks April 2017](https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/)
- [VirusTotal FAQ](https://www.virustotal.com/en/faq/)

---

### Use Alternate Authentication Material

**Description:**

Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, to move laterally within an environment and bypass normal system access controls.

**Key Points:**
- **Authentication Factors:** Alternate authentication material is generated after a user or application successfully authenticates.
- **Bypassing Controls:** By stealing this material, adversaries can bypass system access controls and authenticate without knowing the plaintext password or additional factors.

**Detection:**
- **Account Activity Monitoring:** Configure robust, consistent account activity audit policies and look for suspicious account behavior.
- **Correlation with Other Systems:** Correlate login information with other security systems, such as physical access records or VPN logs.

**References:**
- [NIST Authentication](https://csrc.nist.gov/glossary/term/authentication)
- [NIST MFA](https://csrc.nist.gov/glossary/term/Multi_Factor-Authentication)
- [TechNet Audit Policy](https://technet.microsoft.com/en-us/library/dn487457.aspx)

---

### Remote Desktop Protocol

**Description:**

Remote Desktop Protocol (RDP) is a common feature in operating systems that allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Adversaries may use RDP to expand access if the service is enabled and allows access to accounts with known credentials.

**Key Points:**
- **Credential Access:** Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP.
- **Session Hijacking:** Adversaries may also perform RDP session hijacking to steal a legitimate user's remote session.

**Detection:**
- **Access Patterns:** Monitor for user accounts logged into systems they do not normally access or access patterns to multiple systems over a short period.
- **Service Creation Monitoring:** Set up process monitoring for tscon.exe usage and monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to prevent RDP session hijacking.

**References:**
- [TechNet Remote Desktop Services](https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx)
- [Alperovitch Malware](http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/)
- [RDP Hijacking Korznikov](http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html)
- [RDP Hijacking Medium](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6)
- [Kali Redsnarf](https://github.com/nccgroup/redsnarf)

---

### Threat Intel Vendors

**Description:**

Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that provide more detailed information than what is publicly reported.

**Key Points:**
- **Information Gathering:** Adversaries may seek information about their own campaigns and those conducted by other adversaries.
- **Opportunities for Reconnaissance:** Information from threat intelligence vendors can reveal opportunities for other forms of reconnaissance, establishing operational resources, and initial access.

**Detection:**
- **High Occurrence and False Positives:** Much of this activity may have a high occurrence and false positive rate, making detection difficult.
- **Related Stages of the Adversary Lifecycle:** Focus detection efforts on related stages, such as Initial Access.

**References:**
- [D3Secutrity CTI Feeds](https://d3security.com/blog/10-of-the-best-open-source-threat-intelligence-feeds/)

---

### Exfiltration Over Other Network Medium

**Description:**

Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. For example, if the command and control network is a wired Internet connection, the exfiltration may occur over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.

**Key Points:**
- **Alternative Channels:** Adversaries may choose alternative channels if they have sufficient access or proximity.
- **Security and Defense:** Alternative channels might not be as well-secured or defended as the primary Internet-connected channel.

**Detection:**
- **Network Monitoring:** Monitor for processes utilizing the network that do not normally have network communication or have never been seen before.
- **Host Adapter Settings:** Monitor for and investigate changes to host adapter settings, such as the addition and/or replication of communication interfaces.

**References:**
- [Itzik Kotler, SafeBreach](https://safebreach.com/)

---

### Network Device Configuration Dump

**Description:**

Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. Adversaries can inspect these files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.

**Key Points:**
- **Management Tools and Protocols:** Adversaries can use common management tools and protocols, such as SNMP and Smart Install (SMI), to access network configuration files.
- **Data Collection:** Configuration files can provide valuable information about the network and its devices.

**Detection:**
- **Network Traffic Monitoring:** Identify network traffic sent or received by untrusted hosts or networks.
- **Signature-Based Detection:** Configure signatures to identify strings that may be found in a network device configuration.

**References:**
- [US-CERT TA18-106A Network Infrastructure Devices 2018](https://us-cert.cisa.gov/ncas/alerts/TA18-106A)
- [Cisco Blog Legacy Device Attacks](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)
- [US-CERT TA18-068A 2018](https://www.us-cert.gov/ncas/alerts/TA18-086A)