The quality of `three.js` tagged questions on SO is horrible. Each question
that makes sense and is properly formatted is followed by 20 that are just
incomprehensible, RTFM, `i've no idea wtf im doing` sort of thing. At one
point I started getting frustrated, but for some reason, I can't stop looking
at them. I'm under the impression that some experts who used to frequent SO
have stopped doing so.
I'm still learning how SO works, so I posted this, and got some interesting
information, but i'm not sure what to make out of it:  
https://meta.stackoverflow.com/questions/357466/three-js-tag-has-really-bad-
questions
  1. 40% overall unanswered questions seem to be really bad, average is 29%, good is 10-15%. Sounds like it's **worse than one of the two worst tags,** almost as bad as the other.
  2. three.js seems to end up in the same spot as categories that attract many non-programmer types `3D graphics attracts a lot of beginners who neither have the math skills nor the programming skills to handle these APIs.`
Since people do get referred to SO from here:  
`If you need help, please use
[stackoverflow](http://stackoverflow.com/questions/tagged/three.js).`
I thought i'd share this.
I'm also under the impression that a few years ago, there were more good
quality questions overall. I've even seen links to West Langley's answers on
SO as a three learning reference, but it looks like those are coming in less
frequently.
I've heard that the resources and tutorials can be quite out of date. Three
moves quite quick, and often has major overhauls (?), which would explain
this. Maybe having more official tutorials that have to be fixed and working
the same way examples do could address this?
Maybe some strategy and effort could be put to clean up SO's [three.js] tag.
Perhaps rather than sending people to SO, we could send them to the docs, and
possibly some three agnostic literature on graphics, webgl, math etc.
Also might be worth having a discussion on who uses three, and how. It feels
that all the shortcuts that three offers work while someone is copy pasting
the code, as soon as some modification occurs, things start breaking up.
The current situation could be good for the experts though. The more people
dive into projects thinking it will be easy but get stuck, the more
consultancy gigs should come, maybe i just need to jump on that boat.