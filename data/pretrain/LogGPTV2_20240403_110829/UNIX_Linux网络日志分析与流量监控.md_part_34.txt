#mkdir/var/lib/aide/please-dont-call-aide-without-parameters
/etc/
AIDE,version 0.15.1
Ruenguate-aideinit
/resolvcont/run/resoiv,conf
1504
02-1210:51:54
图6-5AIDE开始检查文件
图6-4初始化AIDE数据库
interface
66654Feb
2018-02-1210:5613
21-0-12 10：5613
151
aide.
HOIIA
UIA
加密的指纹
---
## Page 198
有 Web 界面管理工具和仪表盘，不能输出pdf、html 等格式的报表，无法和现有审计系统整
工具，今后的管理依然是个不小的问题。开源的Tripwire不能批量输入，无法集中管理，没
和报告，因此不同的计算机必须使用不同的local密钥。
机具有相同的策略和配置的话，那么它们就可以使用相同的site密钥；后者用于保护数据库
两个密钥：site密钥和local密钥。其中，前者用于保护策略文件和配置文件，如果多台计算
个数据库，Tripwire可以很容易地发现系统细微的变化。
函数。入侵者如果对文件进行了修改，即使文件大小不变，
库，所谓特征码函数就是使用任意的文件作为输入，产生一个固定大小的数据（特征码）的
6.4.3Tripwire
aide.db.gz，操作命令如下：
项控制，需要几个加密项目就保留几个。
是使用NIST800-92（日志管理标准）。权威部门是认可SHA-1散列算法的。整
尽管开源的Tripwire工具有很多优点，但是一旦在成百上千台数据中心里部署这个开源
为了防止被篡改，Tripwire 对其自身的一些重要文件进行了加密和签名处理。这里涉及
AIDE 的配置文件是/etc/aide/aide.conf，计算文件加密项目由配置文件中Checksums=选
Tripwire首先使用特定的特征码函数为需要监视的系统文件和目录建立一个特征数据
3）AIDE系统日志位置：
这时系统会在/var/lib/aide目录下产生 aide.db.new.gz数据库文件，将这个文件复制为
，例如上面的检测就保留了 sha512和tiger 两项，具体配置命令行如下：
Tripwire可检测十多种UNIX文件系统属性和 20 多种NT 文件系统（包括注册表）属
在CentOS系统中安装AIDE和OSSIM系统稍有不同，比如初始化数据库命令为：
2）在CentOS系统中使用AIDE：
Oi
1）检查结果的含义：
在安装配置时需要注意如下几个问题：
atime：最后访问时间。
inode：节点号。
size：文件大小。
ctime：创建时间。
mtime：修改时间。
#/var/log/aide/aide.log
#aide--init
Checksums=sha512+tiger
#cp aide.db.new.gz aide.db.gz
#cd/var/lib/aide
建到全家
24L20
第6章UNIX后门与溢出案例分析175
也会破坏文件的特征码。利用这
XTMU
出
为驰全文业商育
a合宝
0
医茶
---
## Page 199
inetd的副本正在运行，如图6-6所示。
务器一直是他维护的，所以这个文件很可能是攻击者留下的。通过进程管理器还发现有3个
断定这台Solaris平台的邮件系统出现了故障。接着他就开始了抢修和取证的工作。
控系统的流量情况，发现在那段时间里流量直线下滑。这让他感到了有些不对劲，基本可以
后，张利匆匆来到公司机房，通过 Xmanager 进入系统检查，然后观察了一下 Cacti 流量监
出现了问题。张利听完具体描述，感觉这个周末的度假旅行算是泡汤了。简单吃了点东西
早晨，还在睡梦中的张利突然接到紧急电话，用户抱怨说一台Solaris服务器的电子邮件系统
人侵背景
的调查取证中又发现了大量登录失败的日志记录，系统中出现了什么异常情况呢？
一过程是对一个管理员在系统管理和网络安全管理方面的一次全面挑战。
实的案例，来讲解Solaris的后门查找过程，并利用计算机安全取证技术还原攻击的过程。这
自身必须对系统有深入的了解才能维护好系统安全。下面就以张利经历的安全事件，一个真
菲；另一方面，也是最关键的，即完全依靠外在的技术很难获得真正的网络安全，管理人员
有些商业安全解决方案，如防火墙、IDS/IPS等安全软件，但这些商业解决方案却费用不
用较广泛。但是很多管理员对它的安全问题并不够重视，带来了一些安全隐患。市场上虽然
商用UNIX操作系统，在各行业重要系统中都有应用，尤其是在电信、金融业及科研院校应
6.5案例六：围堵 Solaris 后门
合，没有完整的商业技术支持，遇到问题一般是通过开源社区和操作者的使用经验来解决。
176UNIX/Linux网络日志分析与流量监控
张利是某公司的系统管理员，管理公司的十几台UNIX 和Linux服务器。
他到系统敏感目录中检查了一下，发现在/tmp目录下多了一个need.tar 文件。由于服
管理员张利发现UNIX 系统中同时出现了多个 inetd 进程，这引起了他的警觉，在随后
他根据经验判断，这是绝对不应该出现的。于是他杀掉了其中的两个PID 较高的进程，
尽管Oracle 公司收购了 Sun，但 Solaris 操作系统目前仍是一个技术成熟、功能强大的
故事人物：张利（系统管理员）
关键日志：UNIX系统日志、脚本文件
难度系数：★★★★★
进程查看采样
inete
名字
属主
CPUN大小开始子
图6-6Solaris进程列表
32:54
3元进程
禁助
一个星期六的
用
---
## Page 200
分析脚本文件bd
很可疑。这个文件他从来没有见过。他心想，milk和 need.tar有什么关系？
含了四个文件：bd、doc、ps 和 update。同时/tmp 目录下还有个具有执行权限的 milk 文件,
打起了精神。这时，他把目光转移到/tmp/need.tar 上来，他解开 need.tar 文件，发现里面包
企业（信中没有说明其他有关入侵事件的信息），所以他们才给张利发了这封邮件。张利又
一台被攻破的系统中的日志文件包含其他被攻击系统的名字。其中许多名字包含了张利所在
时他发现在订阅的安全邮件中收到了从国家计算机应急响应组发来的电子邮件，信里说最近
，出去换换空气或许对他来说是个好主意。稍事休息之后，他回到座位接收电子邮件。
时张利似乎没有线索，也不知该如何继续查下去。
IT 经理并简短通了电话。那么到底是什么情况能导致系统里额外的 inetd 进程被启动呢？
其他两台系统上也有同样的问题。随后张利立即把遇到的情况和处理结果通过邮件上报给了
际上，其他的系统安全状况也不容乐观，张利把其他Solaris系统都检查了一遍，很快发现在
端口23和21的信息，他查了半天不正常的记录，好像只有这些。
地址来源分别是11.22.33.44。实际上，当前的消息文件中已有多条记录显示inetd无法绑定
手工清除的痕迹，但还是有一些蛛丝马迹存在。
并决定回头仔细检查一下/var/adm/messages 日志文件，结果发现在这些日志文件中都有一些
bromi
为了弄清真相，张利对need.tar里的脚本文件进行了研究。
bd脚本内容如图6-7所示，显示了此文件能在系统中做什么。
直觉告诉他，一台计算机有问题会不会殃及池鱼呢？也许这台计算机只是一个跳板？实
从上述记录可以看到，有可疑用户在试图猜测主机的口令。时间分别在24日11:26，IP
下面是messages的一部分内容。
Apr 24 11:28:24 UNIX.com sshd[7265]:abc(bogus) LOGIN FAILED [from 11.22.33.44]
Apr 24 11:27:23 UNIX.com sshd[7264]:mous (bogus) LOGIN FAILED [from 11.22.33.44]
Apr 24 11:26:25 UNIX.com sshd[7261]:anonymous (bogus)LOGIN FAILED [from 11.22.33.44]
SAVEHIST
图6-7查看脚本bd
第6章UNIX后门与溢出案例分析177
这
---
## Page 201
内容是 kil -9 {inetd process id)，又修改了文件许可使之能够执行，然后执行了这个文件。
的证明：bob 文件实际是这个 inetd 的配置文件。然后攻击者创建了一个名为 boo的文件，其
序。这个错误产生了一条日志消息，就是上面被张利发现的那条信息。
漏洞号和受影响平台见表6-1。
/tmp/bob文件作为命令行配置文件：
它使系统允许执行一条命令，因此，很可能正是那条命令启动了 inetd 的另一个副本，以
意思，因为在 need.tar 文件中没有找到它。我们已经知道，攻击者利用了“Tooltalk 漏洞”，
息的日志文件)，statd，以及 rpc.tdb（“Tooltal”二进制文件）。其中，/tmp/bob 文件很有
了所有权、用户组，以及文件的时间戳，这样这个新版本就不易被发现了。
能是一个带有“后门”的被修改过的 inetd）。之后他又为了让 doc 与原文件保持一致，修改
178UNIX/Linux网络日志分析与流量监控
6）攻击者很可能在进程表中找到了inetd和 bob的最初版本并修改过。下面提供了更多
4）攻击者删除了附带生成的日志文件以隐藏他的动作。
Tooltalk 数据库服务器是 rpc.ttd serverd，它随CDE一起发布，存在格式串溢出漏洞，其
3）攻击者删除了从need.tar中提取的doc，/tmp/bob，messages（为了删除含有攻击信
2）偷梁换柱：攻击者用 doc 这个文件覆盖了系统原来的二进制 inetd（这意味着 doc 可
5）攻击者启动了两个 inetd 进程。接着他试着 telnet 到本地主机，启动第三个 inetd 程
1）攻击者关闭了“历史文件”记录功能，因此他的动作没有被记录下来。期
下面来分析一下这个脚本到底要干些什么。
#/usr/sbin/inetd -s;
#rm-rf/var/log/messages/var/adm/sec*/var/adm/mail*/var/log/mail/var/adm/sec*
#/usr/sbin/inetd-s;
#telnet localhost;
#/usr/sbin/inetd-s;
in/bin/rpc.ttdb*/usr/dt/bin/rpc.ttdb*
#rm -rf doc/tmp/bob/var/adm/messages/usr/lib/nfs/statd/usr/openw
#touch0926000011/usr/sbin/inetd;
#chgrp root/usr/sbin/inetd;
#cp doc/usr/sbin/inetd;
unsetHISTFILE;unset SAVEHIST
#chownroot/usr/sbin/inetd;
CVE-2002-0391
CVE-2002-0677
CVE-2002-0679
CVE索引
表6-1Solaris的Rpc.ttdb serverd漏洞
Solaris9,AIX5.1
Solaris9,AIX5.1
受影响平台
Solaris9
---
## Page 202
一个系统的“后门”隐藏在这个新的 inetd 文件中，张利运行针对可执行文件的 strings 
/inetd.conf 配置文件。由于攻击者制造了这样一种启动程序的方法，同时可以确信必然有
分析脚本doc
能这个程序没有起作用。
文件一致。但这一动作实际上是没有用的，因为 ps 不能掩盖嗅探器和多个 inetd 的存在。可
件。攻击者还创建了一个能在系统启动时重启嗅探器的启动脚本，然后启动了嗅探器。认
二进制文件）。man目录可是隐藏文件的好地方，因为常规情况下很少有管理员查看man
务器出现问题的原因所在。
这样就删除了原始的 inetd文件。
8）攻击者在usr/man下建了一个目录，在里面放置了嗅探器及ps 文件（重新编译过的
经过分析可以看出，doc是一个inetd的替代品。它能正常运行，并使用标准的/etc
9）再次掉包：攻击者用植入木马的 ps 文件代替了原始的 ps，并修改它的时间戳和原始
O6
7）攻击者找到 statd 和 ttdb 程序，利用之后，用同样的方法删除了它们。这就是邮件服
10）然后攻击者又检查了一遍，确保一切都正常进行着。
#ps -ef| grep update
#ps-ef|grepstat|grep-vgrep
#ps -ef | grep bob | grep -v grep
#cd/
#touch0926000011/usr/bin/ps/usr/ucb/ps
#mvps/usr/bin/ps
#cpps /usr/ucb/ps
#./update-s-ooutput &.b
#echo 1\"/update-s-0 output\">/kernel/pssys
#cd/usr/man/tmp
#mvupdateps/usr/man/tmp
#mkdir/usr/man/tmp
#rm-rfboo
#./boo
#chmod700boo
#./boo
#chmod 700 boo
#./boo
#chmod700boo
o$ 6- ,qqdp d-s#
电际
第6章UNIX后门与溢出案例分析179
总代口
器个文
文本
ie.bdaeeul
本
手和
a.bo
---
## Page 203
第二个副本使用了命令行配置文件，而这个配置文件仅包含一行：启动端口1524 的监听
统做了什么。
注意目标端口：1524。总之，这个脚本显示了更多的证据，如最初的漏洞挖掘程序对目标系
区溢出漏洞。这个脚本采用了命令行参量，并利用管道将命令从bdpipe.sh 输送到telnet。请
了一个 IP 地址列表），并对每个地址执行bd.sh 脚本。部分内容如下：
统中恢复信息的脚本，随后将它们在一台受害系统上验证，证明了以下结论。
他接到了一位安全管理员的回信，从他那里得到了一些有关need.tar的脚本文件和用于被攻击系
的特定目标主机。
客世界里有很多工具可以扫描并发现各种UNIX/Linux系统，借助它们就可以发现含有漏洞
发现need.tar被植人系统
定的目标发送数据包。
分析脚本milk
IMAP上的用户名和密码。这些信息都被存储到命令行指定的日志文件中。
分析脚本 update（-
实际上并不能。
个 inetd 程序在运行着。张利原以为这个被替代了的 ps 能起到掩护攻击者自己的作用，但它
分析脚本文件 ps
用途究竟是什么。
令，并在文件中发现了/bin/sh。这就确认了“后门”的存在。但还不知道这个“后门”的
180UNIX/Linux网络日志分析与流量监控
：张利在分析了上面的脚本后一直在想：need.tar是怎么被植入到系统里的呢？其实在黑
随着调查的深入，张利向许多负责网络安全的朋友和论坛询问了有关 need.tar的信息。随后
这里，milk是另一
：这个嗅探器是一个 TCP嗅探器。