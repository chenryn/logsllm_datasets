## PostgreSQL 10 内置分区 vs pg_pathman perf profiling       
### 作者            
digoal            
### 日期             
2017-10-15            
### 标签            
PostgreSQL , 内置分区 , pg_pathman , perf , 性能 , 锁              
----                        
## 背景            
PostgreSQL 10内置分区的性能不如pg_pathman分区插件的性能。有非常大的优化空间，那么是什么导致了分区的性能问题呢？      
## 编译PostgreSQL 10.0      
1、编译、打开debug      
```      
CFLAGS="-g -ggdb -fno-omit-frame-pointer" ./configure --prefix=/home/digoal/pgsql10.0      
CFLAGS="-g -ggdb -fno-omit-frame-pointer" make world -j 128      
CFLAGS="-g -ggdb -fno-omit-frame-pointer" make install-world      
```      
2、初始化集群      
```      
initdb -D $PGDATA -U postgres -E SQL_ASCII --locale=C      
```      
3、配置postgresql.conf      
```      
listen_addresses = '0.0.0.0'      
port = 1921       
max_connections = 400      
superuser_reserved_connections = 3      
unix_socket_directories = '.'      
shared_buffers = 128GB      
work_mem = 1024MB      
maintenance_work_mem = 4GB      
dynamic_shared_memory_type = posix      
vacuum_cost_delay = 0      
bgwriter_delay = 10ms      
bgwriter_flush_after = 0      
max_worker_processes = 128      
max_parallel_workers_per_gather = 0      
max_parallel_workers = 128      
wal_level = minimal      
synchronous_commit = off      
full_page_writes = off      
wal_buffers = 1GB      
wal_writer_delay = 10ms      
wal_writer_flush_after = 0      
checkpoint_timeout = 55min      
max_wal_size = 128GB      
min_wal_size = 80MB      
checkpoint_completion_target = 0.01      
checkpoint_flush_after = 0      
max_wal_senders = 0      
parallel_tuple_cost = 0      
parallel_setup_cost = 0      
min_parallel_table_scan_size = 0      
min_parallel_index_scan_size = 0      
effective_cache_size = 400GB      
log_destination = 'csvlog'      
logging_collector = on      
log_truncate_on_rotation = on      
log_timezone = 'PRC'      
log_autovacuum_min_duration = 0      
datestyle = 'iso, mdy'      
timezone = 'PRC'      
lc_messages = 'C'      
lc_monetary = 'C'      
lc_numeric = 'C'      
lc_time = 'C'      
default_text_search_config = 'pg_catalog.english'      
```      
## 创建range和list分区，用于测试      
1\. range 分区表          
1\.1 主表         
```      
create table t_range(id int, info text, crt_time timestamp) partition by range (id);        
```      
1\.2 分区         
```      
do language plpgsql $$      
declare      
  i int;      
begin      
  for i in 0..127 loop      
    execute 'create table t_range_'||i||' partition of t_range for values from ('||i*100||') to ('||(i+1)*100||')';      
  end loop;      
end;      
$$;      
```      
2\. list 分区表          
2\.1 主表          
```        
create table t_list(id int, info text, crt_time timestamp) partition by list ( mod(hashtext(info), 128) );        
```        
2\.2 分区          
```        
do language plpgsql $$      
declare      
  i int;      
begin      
  for i in 0..127 loop      
    execute 'create table t_list_'||i||' partition of t_list for values in ('||i||')';      
  end loop;      
end;      
$$;      
```       
## 创建测试脚本      
1、测试范围分区      
```      
vi test1.sql      
\set id random(0,12799)      
insert into t_range values (:id, 'test', now());      
```      
2、测试LIST分区      
```      
vi test2.sql      
\set id random(0,127)      
insert into t_list values (:id, 'test', now());      
```      
## 压测      
```      
pgbench -M prepared -n -r -P 1 -f ./test1.sql -c 64 -j 64 -T 12800      
pgbench -M prepared -n -r -P 1 -f ./test2.sql -c 64 -j 64 -T 12800      
```      
```    
progress: 14.0 s, 21361.0 tps, lat 2.996 ms stddev 0.848    
progress: 15.0 s, 21302.0 tps, lat 3.004 ms stddev 0.868    
progress: 16.0 s, 21349.0 tps, lat 2.998 ms stddev 0.852    
progress: 17.0 s, 21366.9 tps, lat 2.996 ms stddev 0.858    
progress: 18.0 s, 21346.0 tps, lat 2.998 ms stddev 0.856    
```    
## 收集profiling      
```      
perf record -ag      
```      
## 生成perf报告      
1、      
```      
perf report -g      
```      
结果      
```      
Samples: 1M of event 'cycles', Event count (approx.): 662397686992            
  Children      Self  Command          Shared Object              Symbol          
+   88.63%     0.00%  postgres         libc-2.17.so               [.] __libc_start_main                      
+   88.63%     0.00%  postgres         postgres                   [.] startup_hacks                          
+   88.63%     0.00%  postgres         postgres                   [.] PostmasterMain                         
+   88.49%     0.00%  postgres         postgres                   [.] ServerLoop                             
+   88.49%     0.00%  postgres         postgres                   [.] BackendStartup                         
+   88.47%     0.00%  postgres         postgres                   [.] ExitPostmaster                         
+   88.42%     0.04%  postgres         postgres                   [.] PostgresMain                           
+   74.92%     0.02%  postgres         postgres                   [.] exec_execute_message                   
+   74.77%     0.01%  postgres         postgres                   [.] PortalRun                              
+   74.75%     0.02%  postgres         postgres                   [.] PortalRunMulti                         
+   74.57%     0.01%  postgres         postgres                   [.] ProcessQuery                           
+   71.56%     0.01%  postgres         postgres                   [.] ExecutorStart                          
+   71.54%     0.01%  postgres         postgres                   [.] standard_ExecutorStart                 
+   71.46%     0.02%  postgres         postgres                   [.] InitPlan                               
+   71.26%     0.02%  postgres         postgres                   [.] ExecInitNode                           
+   71.23%     0.05%  postgres         postgres                   [.] ExecInitModifyTable                    
+   70.34%     0.23%  postgres         postgres                   [.] ExecSetupPartitionTupleRouting         
+   45.89%     0.23%  postgres         postgres                   [.] find_all_inheritors                    
+   42.42%     0.28%  postgres         postgres                   [.] find_inheritance_children              
+   23.59%     0.08%  postgres         postgres                   [.] LockRelationOid                        
+   23.33%     0.04%  postgres         postgres                   [.] LockAcquire                            
+   22.88%     0.79%  postgres         postgres                   [.] LockAcquireExtended                    
+   12.59%     1.07%  postgres         postgres                   [.] InitResultRelInfo                      
+   12.10%     0.26%  postgres         postgres                   [.] LWLockAcquire                          
+   11.50%     0.08%  postgres         postgres                   [.] RelationGetPartitionQual               
+   10.99%     0.01%  postgres         postgres                   [.] CommitTransaction                      
+   10.89%     1.14%  postgres         postgres                   [.] _copyList                              
+   10.58%     0.05%  postgres         postgres                   [.] systable_getnext                       
+   10.51%     0.05%  postgres         postgres                   [.] index_getnext                          
+   10.50%     6.88%  postgres         postgres                   [.] hash_search_with_hash_value            
+   10.35%     0.01%  postgres         postgres                   [.] ResourceOwnerRelease                   
+   10.34%     0.03%  postgres         postgres                   [.] ResourceOwnerReleaseInternal           
+   10.29%     0.01%  postgres         postgres                   [.] ProcReleaseLocks                       
+   10.22%     1.84%  postgres         postgres                   [.] LockReleaseAll                         
+    9.46%     0.52%  postgres         postgres                   [.] LWLockRelease                          
+    9.00%     0.21%  postgres         postgres                   [.] index_fetch_heap                       
+    8.60%     0.01%  postgres         [kernel.kallsyms]          [k] system_call_fastpath                   
+    8.34%     0.23%  postgres         postgres                   [.] SearchSysCache                         
+    7.98%     0.27%  swapper          [kernel.kallsyms]          [k] cpu_startup_entry                      
+    7.86%     0.00%  swapper          [kernel.kallsyms]          [k] start_secondary                        
+    7.73%     0.04%  postgres         [kernel.kallsyms]          [k] sys_futex                              
+    7.68%     0.05%  postgres         [kernel.kallsyms]          [k] do_futex                               
+    7.43%     5.59%  postgres         postgres                   [.] AllocSetAlloc                          
+    7.27%     3.52%  postgres         postgres                   [.] SearchCatCache                         
+    7.03%     0.22%  postgres         postgres                   [.] _copyOpExpr                            
+    6.15%     0.36%  postgres         postgres                   [.] LWLockWakeup                           
+    5.93%     0.38%  postgres         postgres                   [.] RelationGetPartitionDispatchInfo       
+    5.62%     0.14%  postgres         postgres                   [.] LockBuffer                             
+    5.50%     0.28%  postgres         postgres                   [.] hash_search                            
```      
2、      
```      
perf report --stdio -g     
```      
结果      
```      
    45.89%     0.23%  postgres         postgres                   [.] find_all_inheritors                    
                   |      
                   ---find_all_inheritors      
                      |                
                      |--99.99%-- ExecSetupPartitionTupleRouting      
                      |          ExecInitModifyTable      
    42.42%     0.28%  postgres         postgres                   [.] find_inheritance_children              
                   |      
                   ---find_inheritance_children      
                      |                
                      |--99.97%-- find_all_inheritors      
                      |          ExecSetupPartitionTupleRouting      
                      |          ExecInitModifyTable      
                      |          ExecInitNode      
    23.59%     0.08%  postgres         postgres                   [.] LockRelationOid                        
                   |      
                   ---LockRelationOid      
                      |                
                      |--98.67%-- find_inheritance_children      
                      |          find_all_inheritors      
                      |          ExecSetupPartitionTupleRouting      
                      |          ExecInitModifyTable      
    23.33%     0.04%  postgres         postgres                   [.] LockAcquire                            
                   |      
                   ---LockAcquire      
                      |                
                      |--98.59%-- LockRelationOid      
                      |          |                
                      |          |--98.82%-- find_inheritance_children      
                      |          |          find_all_inheritors      
                      |          |          ExecSetupPartitionTupleRouting      
                      |          |          ExecInitModifyTable      
                      |          |          ExecInitNode      
    11.50%     0.08%  postgres         postgres                   [.] RelationGetPartitionQual               
                   |      
                   ---RelationGetPartitionQual      
                      |                
                      |--99.75%-- InitResultRelInfo      
                      |          |                
                      |          |--99.99%-- ExecSetupPartitionTupleRouting      
                      |          |          ExecInitModifyTable      
                      |          |          ExecInitNode      
                      |          |          InitPlan      
                      |          |          standard_ExecutorStart      
                      |          |          ExecutorStart      
    11.42%     0.07%  postgres         postgres                   [.] generate_partition_qual                
                   |      
                   ---generate_partition_qual      
                      |                
                      |--99.90%-- RelationGetPartitionQual      
                      |          InitResultRelInfo      
                      |          ExecSetupPartitionTupleRouting      
                      |          ExecInitModifyTable      
                      |          ExecInitNode      
                      |          InitPlan      
                      |          standard_ExecutorStart      
                      |          ExecutorStart      
```      
## pg_pathman perf profiling    
```    
postgres=# CREATE EXTENSION pg_pathman;    
CREATE EXTENSION    
postgres=# create table tbl_range(id int not null, info text, crt_time timestamp);    
CREATE TABLE    
postgres=# select create_range_partitions('tbl_range', 'id', 0, 100, 128);    
 create_range_partitions     