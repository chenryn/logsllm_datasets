17.3方法
我们有两种方法可以对Web浏览器进行模糊测试。首先我们必须要确定一种方法来控制模
糊测试，然后我们还要确定所要重点关注的浏览器的那些部分。由于Web浏览器的功能在不断
增加，因此获得完整的代码覆盖可能会成为一项艰巨的工作。我们期望使用多种工具和方法来
执行一个完整的审核。
17.3.1测试方法
当对Web浏览器进行模糊测试时，有一些基本的方法可供我们选用，并且所用的单个方法
要依赖于被进行模期测试的浏览器的部分，通常情况下，下面的方法是可用的：
·刷新HTML页。在这种场景下，被模糊的Web页由一个Web服务器所生成，它也包含一种
http:/browserfun.blogspot.com/
Z[=d/8oq/uoqpaso/od
③http://www.uninformed.org/?vw4&a=5&t=sumry
---
## Page 201
186
第二部分目标和自动化
方法使得Web页在正则区间内被刷新。可以通过使用不同的方法来实现这一点，如刷新
HTTP-EQUIVMETA标签或某些客户端脚本。当Web页被刷新之后，一个包含有新的模糊
内容的Web页的新版本将会出现。Mangleme是一个模糊测试工具，被设计为用来发现
Web浏览器中的HTML解析缺陷，例如，包括如下的在每个模糊化Web页的HEAD部分中
的行：
这个标签将导致mangleme页立即被更新，并重定向到mangle.cgi，在那里有一个新的被破
坏的页正在等待Web浏览器。下面的客户端JavaScript可以用来实现一个类似的目标，即在
2000毫秒之后刷新一个Web页：
目S
[Faye Cuntent]
·加载Web页。模糊测试可以只在客户端进行，方法是通过直接将一个模糊页加载到Web浏
览器中。使用命令行选项，可以指示一个目标Web浏览器打开存在于本地机器上的一个
模糊化Web页，下面的命令将直接在lnternetExplorer中打开文件fuzz.html：E
C:\>“C:\Progran Fi1es\Internet Explorer^1explore.exe”C:\temp^fuzz.htm]
·目标单个浏览器对象。在特定条件下，根本不部署浏览器而执行基于淘览器的模糊测试
是可能的，当我们的目标是一个浏览器对象，并且浏览器只是访问该对象的一个工具时，
就可以实现这一点，例如，我们可以对一个ActiveX控件进行模糊测试，如果该对象被标
记为“脚本安全”，那么就可以通过一个恶意的Web站点来远程访问该控件。在这种情况
下，就不需要从浏览器内部启动ActiveX控件来确定它是否包含漏涧。DavidZimmer设计
的COMRaider就是使用这个方法来对ActiveX控件进行模糊测试的。
17.3.2输入
相对于其他的测试目标，对Web浏览器进行模糊测试要求我们识别不同类型的用户输人。
http:/fresheat.net/projects/mangleme/
 http://labs.idefense.com/software/fuzzing.phpfmore_COMRaider
---
## Page 202
第17章Web测览器模糊测试187
同样，我们必须要跳出以前关于输入的组成部分的思考圈子。在Web浏览器的情形下，攻击者
是Web服务器，它所传输的内容接着被Web浏览器所解释。因此，Web服务器所发送的所有内
容构成了输人，而不只是HTML代码。
HTML头
Web浏览器所接收的第一个数据片段就是HTML头。尽管它不被测览器直接显示，但是该
头包含有重要的信息可以影响Web浏览器的行为，以及它显示后续内容的方式。
这种类型漏洞的一个例子可以在微软的安全公告MS03-015所包含的CVE-2003-0113°中
看到，JoukoPynnOnen发现它是由于urlmon.dll中的不正确边界检查而引起的，内容类型以及
内容编码头中的长值可以导致一个基于栈的缓冲区溢出。已经发现InternetExplorer5.x和6.x
的许多版本都易于受到这种类型的攻击。
HTML标签
Web页本身的内容以一系列HTML标签的形式发送给Web浏览器。从技术上来说，一个浏
览器可以显示不同类型的标记语言如HTML、XML以及XHTML，但为了实现我们的目的，这
里将Web页的内容简单地作为HTML。
HTML由于其不断扩展的功能，使其变成了一个日渐复杂的标准。另外，许多私有标签被
特定的Web浏览器所使用，并且Web浏览器可以解释多种类型的标记语言，当设计一个Web测
览器时你开始看到有许多产生异常的机会。这些编程错误进而可以通过模糊测试来加以识别。
HTML具有相对简单的结构。有一些HTML标准确定了Web页应当遵循的适当的标准，一
始。例如，下面的DTD将告知浏览器Web页应当遵循HTML4.01标准：
当我们考虑HTML时，我们通常认为标签定义了文档的内容。这些标签被认为是元素，并
且通常包含起始和结束标签。除了这些标签本身之外，元素也可以包含属性和内容。下面的
HTML元素说明了一个字体元素：
Fuzz
在这个特殊的元素中，color代表了font元素的一个属性，而Fuzz是该元素的内容。尽管
这是一个非常基础的例子，但是需要指出的很重要的一点是HTML代码的所有部分都可以成为
模糊测试的合理目标。Web浏览器被设计用来解析和解释HTML代码，如果代码处于一种非预
期的格式，那么开发者可能不会针对一个异常的HTML代码片段提供适当的错误处理机制。
mangleme被设计为通过Web浏览器解释病态HTML标签来发现漏洞，它导致了在微软安全
V
http:/www.microsoft.com/technet/security/bulletin/MS03-015.mspx
http://eve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0113
③ http:/downloads.securityfocus.com/vulnerabilities/exploits/urlmon-ex.pl
---
## Page 203
第二部分目标和自动化
公告MS04-040°中所提到的CVE-2004-1050°的发现。Ned和Berend-JanWever使用mangleme
发现了在IFRAME，FRAME和EMBED中的超长SRC或NAME属性，而这些超长属性可能会导致一个基
于堆的缓冲区溢出。然后，他们就发布了针对该问题的完整的公共利用代码。其他被设计为
在Web浏览器中对HTML结构进行模糊测试的工具包括由H.D.Moore和AvivRaff所开发的DOM-
Hanoi和Hamachi工具。
XML标签
XML是源自于标准通用标记语言（StandardizedGeneralMarkupLanguage,SGML）的一个
通用标记语言，并且通常被用来通过HTTP协议来传输数据。XML的标准实现被开发为定义了
成百上千个数据格式，如RSS、应用程序漏洞描述语言（ApplicationVulnerabilityDescription
Language,AVDL）以及可升级的向量图形（ScalableVectorGraphics,SVG）等等。通过使用
HTML，现代的Web浏览器可以解析并解释XML元素及其相关的属性和内容。同样，如果当浏
览器在解释元素时遇到了非预期的数据，那么可能就会导致一个未处理的异常。向量标记语言
（VectorMarkupLanguage，VML）是一个用来定义向量图形的XML规范。已经在Internet
Explorer和Outlook所使用的库中发现了漏洞，该漏洞是由于无法处理特定的病态VML标签而导
致的。2006年9月19日，微软发布了925568号安全建议?，详细描述了在向量图形展现引擎
（vgx.dl）中的一个基于栈的缓冲区溢出，该溢出可以导致远程代码的执行。该建议发布之后，
就出现了对该漏洞的大量利用，这就迫使微软在7天之后发布了一个周期之外的补丁，在同
一个库中的整数溢出漏洞于2007年被发现并打上了补丁?。
ActiveX控件
ActiveX控件代表了构建在微软COM上的一个私有的微软技术，用来提供可重用的软件
构件。Web开发者通常嵌入ActiveX控件以允许对功能进行扩展，而这对于一个典型的
Web应用来说可能是不允许的。使用ActiveX控件的一个主要缺点是它们所具有的私有特性
限制了它们在InternetExplorerWeb浏览器和Windows操作系统中的使用。然面，它们在许
多Web站点上被广泛使用。ActiveX控件的功能非常强大，并且一且它们得到信任，就可以
对操作系统进行完全的访问，因此除非它们来自于一个可信的渠道，否则不要运行ActiveX
控件。
http:/ww.microsoft.com/technet/security/bulletin/ms04-040.mspx
htg//eve.mitr.org/cgi-bin/cvemame.cgi7name=CAN-2004-1050
③htp:/owloadsscurityfcuscm/vuerbilite/xploits/teetxplote.t
@http:/metasploit.com/users/hdm/tools/domhanoi/domhanoi.html
③http://metasploit.com/users/hdm/tools/hamachi/hamachi.html
③http://www.microsoft.com/technet/security/advisory/925568.mspx
 http:/www.microsoft.com/technet/security/Bulltin/MS06-055.mspx
@http:/abs.idefense.com/intelligence/vulnerabilities/display.php?id=462
 hp/len.wikipedia.org.wiki/ActiveX_Control
---
## Page 204
第17章Web测览器模期测试
189
在包含在Windows操作系统或第三方软件包中的ActiveX控件中已经发现了大量的漏洞。如
务器来访问，因此就可以被利用来危及目标机器的安全。这就造成了一个危险的情形，因为
用户可能会从一个可信的渠道来初始化安装一个ActiveX控件，但如果它后来被发现包含有一
个漏洞如缓冲区溢出，那么同样可信的控件将被一个恶意的Web站点所利用。
COMRaider是一个非常优秀的示例驱动的模糊测试工具，可以用来识别目标系统上
ActiveX控件中的潜在漏洞。另外，它还可以过滤模糊化的ActiveX控件，而只针对那些可以被
一个恶意Web服务器访问的ActiveX控件，因为这些控件极大地增加了一个漏洞所带来的风险。
COMRaider对于在一个给定的系统中的所有ActiveX控件执行完整的审核是非常有用的。它将
会首先识别所有的ActiveX控件及其相关的方法和输人，然后，它将会连续的对所选择的
ActiveX控件进行模糊化。COMRaider包含一个内嵌的调试器，因此它可以识别已处理和未处
理的异常，COMRaider同时还具有分布式审核的功能，允许一个团队将其以前的审核结果进行
共享。图17-1显示了COMRaider在对一个完整系统中标记为脚本安全的所有ActiveX控件执行
完审核之后所生成的一个列表。
ICE
LABS
Pa
RohTomaCores
CDe
图17-1COMRaider
AxMan是另外一个免费可用的ActiveX模糊器。AxMan是由H.D.Moore设计的，被用来发
 http:/msdn.microsoft.com/workshop/componets/activex/safety.asp
 http://metasploit.com/users/hdm/tools/axman/
---
## Page 205
第二部分目标和自动化
现在2006年7月浏览器错误发布月所发布的大部分ActiveX漏洞°。
层叠排列类型表单
CSSDIE是H.D.Moore,MattMurphy,AvivRaff和rThierryZoller所创建的个CSS模期器，
被用来在浏览器错误发布月中发现Opera浏览器中的一个内存破坏问题。它发现将一个
DHTML元素的CSS背景属性设置为一个超长的URL将会导致一个客户端DoS，进而导致浏览器
崩潢。
其他基于CSS的问题都导致了不同的漏洞，如MS06-021中的CVE-2005-4089，该漏洞
允许一个攻击者绕过lnternetExplorer中的跨域限制。这种情况是可能发生的，因为站点可以
使用eimport命令从其他不正确的CSS文件域中下载文件。hacker.coil的MatanGillon说明了如
何利用该漏洞来窥探某些人的Google桌面搜索（GoogleDesktopSearch，GDS）结果尽管
Google针对这个问题做了更改，使得该攻击不再有效，但它仍然是一个非常好的例子，说明了
一个简单的InternetExplorer漏洞如何能够同其他应用程序（在这里是GDS）的功能相结合，
来执行一个相对来说更为复杂的攻击。在一个CSS中，一个特定元素的格式被定义在一组花括
号中，其中的属性和值用冒号隔开。例如，一个anchor标签可以被定义为lcolor：white）。如
果使用eimport命令将一个CSS之外的一个文件导人，那么InternetExplorer将试图把该文件作
为一个CSS来解释，并且该文件中位于一个左开花括号后面的任何内容将被使用cssText属性
来检索。Matan可以利用这个攻击来为一个访问Web页的用户窃取唯一的GDS密钥，方法是通
过首先将Google新闻页作为一个CsS文件来导人，并带有一个“）（”查询，这就导致了查询
结果被包含在cssText属性中，而从该属性中可以得到用户唯一的GDS密钥。这样，攻击者就
可能使用另外一个eimport命令将结果从用户的本地GDS中导人，这一次就能够窥探本地
GDS索引。
客户端脚本
Web浏览器利用不同的客户端脚本语言来创建一个Web页中的动态内容。尽管JavaScript
是最常用的客户端脚本语言，但还有许多其他的客户端脚本语言，如VBScript，Jscript以
及ECMAScript，客户端脚本语言大多是属于近亲繁殖，因为许多语言都从另外一种语言
发展而来的。例如，ECMAScript只是JavaScript的一个标识版本，而Jscript则只是
JavaScript的一个微软的实现。这些脚本语言为Web站点提供了强大的功能，但同时也导致
了许多安全问题。