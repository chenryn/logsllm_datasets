(cid:1)
(cid:24)
(cid:25)
(cid:20)
(cid:29)
(cid:13)
(cid:16)
(cid:20)
(cid:22)
(cid:13)
(cid:12)
(cid:40)(cid:39)(cid:39)
(cid:48)(cid:39)
(cid:47)(cid:39)
(cid:46)(cid:39)
(cid:45)(cid:39)
(cid:44)(cid:39)
(cid:43)(cid:39)
(cid:42)(cid:39)
(cid:41)(cid:39)
(cid:40)(cid:39)
(cid:39)
(cid:10)
(cid:5)
(cid:5)
(cid:11)
(cid:6)
(cid:22)
(cid:17)
(cid:14)
(cid:25)
(cid:9)
(cid:17)
(cid:18)
(cid:13)
(cid:27)
(cid:17)
(cid:30)
(cid:2)
(cid:28)
(cid:24)
(cid:25)
(cid:20)
(cid:29)
(cid:26)
(cid:13)
(cid:31)
(cid:9)
(cid:28)
(cid:17)
(cid:22)
(cid:25)
(cid:19)
(cid:15)
(cid:28)
(cid:21)
(cid:15)
(cid:13)
(cid:22)
(cid:3)
(cid:35)(cid:13)(cid:36)(cid:1)(cid:1)(cid:4)(cid:25)(cid:24)(cid:29)(cid:27)(cid:25)(cid:22)
(cid:10)
(cid:5)
(cid:5)
(cid:11)
(cid:6)
(cid:22)
(cid:17)
(cid:14)
(cid:25)
(cid:9)
(cid:17)
(cid:18)
(cid:13)
(cid:27)
(cid:17)
(cid:30)
(cid:2)
(cid:28)
(cid:24)
(cid:25)
(cid:20)
(cid:29)
(cid:26)
(cid:13)
(cid:31)
(cid:9)
(cid:28)
(cid:17)
(cid:22)
(cid:25)
(cid:19)
(cid:15)
(cid:28)
(cid:21)
(cid:15)
(cid:13)
(cid:22)
(cid:3)
(cid:35)(cid:14)(cid:36)(cid:1)(cid:1)(cid:9)(cid:29)(cid:25)(cid:27)(cid:17)
(cid:10)
(cid:5)
(cid:5)
(cid:11)
(cid:6)
(cid:22)
(cid:17)
(cid:14)
(cid:25)
(cid:9)
(cid:17)
(cid:18)
(cid:13)
(cid:27)
(cid:17)
(cid:30)
(cid:2)
(cid:28)
(cid:24)
(cid:25)
(cid:20)
(cid:29)
(cid:26)
(cid:13)
(cid:31)
(cid:9)
(cid:28)
(cid:17)
(cid:22)
(cid:25)
(cid:19)
(cid:15)
(cid:28)
(cid:21)
(cid:15)
(cid:13)
(cid:22)
(cid:3)
(cid:35)(cid:15)(cid:36)(cid:1)(cid:1)(cid:4)(cid:25)(cid:23)(cid:14)(cid:20)(cid:24)(cid:17)(cid:16)
Fig. 3. gem5-Approxilyzer validation for (a) control equivalence, (b) store
equivalence, and (c) combined (control + store) equivalence.
and approximation characteristics of the same workloads for
two different ISAs.
A. Pruning effectiveness
V. RESULTS
The last column of Table I shows the percentage of
error sites pruned by gem5-Approxilyzer using the control-
equivalence (C), store-equivalence (S), and known-outcome (K)
pruning techniques. At 56.77%, Blackscholes has the smallest
total (C+S+K) pruning. Blackscholes is a small application,
which coupled with our choice of a small input leads to a very
small execution footprint (as can be seen by the small number
of total error sites).This translates to few dynamic instructions
per static PC which leads to very small equivalence classes.
The average size of the equivalence class in Blackscholes is
just 1.96. Since the amount of pruning is directly proportional
to the size of the equivalence class, it is not surprising that
the pruning effectiveness for Blackscholes is limited. The
maximum pruning is achieved in Sobel, at 99.65%. Apart
from Blackscholes, all the other applications see a one to
two orders of magnitude reduction in the number of error
injections needed to comprehensively analyze them. Thus we
show that these pruning techniques are also effective for x86.
B. gem5-Approxilyzer Validation
Figures 3(a), 3(b), and 3(c) show the validation accuracy
for the control equivalence, store equivalence and their
combination respectively. On average, both control and store
equivalence techniques show high accuracy (>92%) for Res
and Approx with a ﬂexible quality parameter δ =2 that uses
2% for Blackscholes, FFT, LU, and Sobel, while for the
ﬁnancial applications, Blackscholes and Swaptions, uses the
absolute difference in the dollar value set to $0.01 (difference
of 1 cent or less). In brief, gem5-Approxilyzer is able to
correctly predict the output quality of the x86 application error
sites with very ﬁne granularity (2% or within a single cent).
Swaptions (> 94%), LU (> 98.5%), and Sobel (> 99.9%)
show very high validation accuracy across the board.
shows
While still
relatively high, Blackscholes
the
poorest validation accuracy for both control (Resδ =2 = 87%,
Approxδ =2 = 86%) and store (Resδ =2 = 78%, Approxδ =2
219
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:56:27 UTC from IEEE Xplore.  Restrictions apply. 
(cid:9)(cid:15)(cid:30)(cid:23)(cid:19)(cid:18)
(cid:12)(cid:5)(cid:4)(cid:36)(cid:7)(cid:27)(cid:27)(cid:18)
(cid:12)(cid:5)(cid:4)(cid:36)(cid:9)(cid:15)(cid:35)(cid:16)(cid:19)
(cid:12)(cid:5)(cid:4)(cid:36)(cid:3)(cid:15)(cid:18)
(cid:5)(cid:5)(cid:4)
(cid:5)(cid:19)(cid:31)(cid:19)(cid:17)(cid:31)(cid:19)(cid:18)
(cid:30)(cid:42)(cid:40)
(cid:9)(cid:7)(cid:2)(cid:8)(cid:4)
(cid:30)
(cid:19)
(cid:25)
(cid:27)
(cid:17)
(cid:31)
(cid:32)
(cid:27)
(cid:1)
(cid:29)
(cid:27)
(cid:29)
(cid:29)
(cid:19)
(cid:1)
(cid:20)
(cid:27)
(cid:26)
(cid:27)
(cid:22)
(cid:31)
(cid:32)
(cid:16)
(cid:22)
(cid:29)
(cid:31)
(cid:30)
(cid:22)
(cid:5)
(cid:1)
(cid:40)(cid:39)(cid:39)(cid:51)
(cid:48)(cid:39)(cid:51)
(cid:47)(cid:39)(cid:51)
(cid:46)(cid:39)(cid:51)
(cid:45)(cid:39)(cid:51)
(cid:44)(cid:39)(cid:51)
(cid:43)(cid:39)(cid:51)
(cid:42)(cid:39)(cid:51)
(cid:41)(cid:39)(cid:51)
(cid:40)(cid:39)(cid:51)
(cid:39)(cid:51)
(cid:34)(cid:47)(cid:45)
(cid:12)(cid:10)(cid:2)(cid:11)(cid:4)
(cid:3)(cid:24)(cid:15)(cid:17)(cid:23)(cid:30)(cid:17)(cid:21)(cid:27)(cid:24)(cid:19)(cid:30)
(cid:34)(cid:47)(cid:45)
(cid:12)(cid:10)(cid:2)(cid:11)(cid:4)
(cid:6)(cid:6)(cid:13)
(cid:34)(cid:47)(cid:45)
(cid:12)(cid:10)(cid:2)(cid:11)(cid:4)
(cid:8)(cid:14)
(cid:12)(cid:10)(cid:2)(cid:11)(cid:4)
(cid:34)(cid:47)(cid:45)
(cid:12)(cid:33)(cid:15)(cid:28)(cid:31)(cid:22)(cid:27)(cid:26)(cid:30)
(cid:34)(cid:47)(cid:45)
(cid:12)(cid:10)(cid:2)(cid:11)(cid:4)
(cid:12)(cid:27)(cid:16)(cid:19)(cid:24)
Fig. 4. Distribution of error outcome categories for the applications studied
using the x86 and SPARC ISAs.
= 79%). As mentioned before, Blackscholes has small
equivalence classes which can lead to poor prediction accuracy
even if a single error site is predicted incorrectly.
We observe that
the pilots that have low prediction
accuracy in Blackscholes and FFT (and a few in Swaptions)
predominantly belong to two categories:
(a) pilots are
SDC-Maybe and the populations also produce SDC-Maybe
but with quality degradations that have a wider range than
allowed by the δ and (b) pilots of equivalence classes that
have a mix of outcomes at the border of either SDC-Bad
and DDC or SDC-Maybe and SDC-Bad. More sophisticated
heuristics that combine control and data ﬂow might capture