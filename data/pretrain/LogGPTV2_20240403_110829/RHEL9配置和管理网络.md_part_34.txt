    center](images/IPv4-static-route-in-control-center.png)]{.inlinemediaobject}
4.  点[应用]{.guibutton}。
5.  返回到 `Network`{.literal} 窗口，通过将连接的按钮切换为
    [Off]{.guibutton} 并返回 [On]{.guibutton}
    来禁用并重新启用连接，以使更改生效。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    重启连接会破坏那个接口的连接。
    :::
6.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-nm-connection-editor_configuring-static-routes}使用 nm-connection-editor 配置静态路由 {.title}
:::
您可以使用 `nm-connection-editor`{.literal}
应用程序在网络连接配置中添加静态路由。
本节中的步骤论述了如何将路由添加到 `192.0.2.0/24`{.literal}
网络，该网络使用 `198.51.100.1`{.literal} 上运行的网关，该网关可在
`示例`{.literal} 连接中访问。
::: itemizedlist
**先决条件**
-   网络已配置。
-   静态路由的网关必须在接口上直接访问。
:::
::: orderedlist
**步骤**
1.  打开终端窗口并输入 `nm-connection-editor`{.literal} ：
    ``` literallayout
    $ nm-connection-editor
    ```
2.  选择 `示例`{.literal} 连接并点击 gear wheel 图标编辑现有连接。
3.  打开 `IPv4`{.literal} 选项卡。
4.  点击 [路由]{.guibutton} 按钮。
5.  点击 [添加]{.guibutton}
    按钮并输入地址、子网掩码、网关以及可选的指标值。
    [![IPv4 static route in nm connection
    editor](images/IPv4-static-route-in-nm-connection-editor.png)]{.inlinemediaobject}
6.  点击 [确定]{.guibutton}。
7.  点击 [Save]{.guibutton}。
8.  重启网络连接以使更改生效。例如，要使用命令行重启 `示例`{.literal}
    连接：
    ``` literallayout
    $ sudo nmcli connection up example
    ```
9.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-the-nmcli-interactive-mode_configuring-static-routes}使用 nmcli 互动模式配置静态路由 {.title}
:::
您可以使用 `nmcli`{.literal}
实用程序的互动模式，将静态路由添加到网络连接配置中。
本节中的步骤论述了如何将路由添加到 `192.0.2.0/24`{.literal}
网络，该网络使用 `198.51.100.1`{.literal} 上运行的网关，该网关可在
`示例`{.literal} 连接中访问。
::: itemizedlist
**先决条件**
-   网络已配置
-   静态路由的网关必须在接口上直接访问。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，命令需要
    `root`{.literal} 权限。
:::
::: orderedlist
**步骤**
1.  为 `示例`{.literal} 连接打开 `nmcli`{.literal} 互动模式：
    ``` literallayout
    $ sudo nmcli connection edit example
    ```
2.  添加静态路由：
    ``` literallayout
    nmcli> set ipv4.routes 192.0.2.0/24 198.51.100.1
    ```
3.  （可选）验证路由是否已正确添加到配置中：
    ``` literallayout
    nmcli> print
    ...
    ipv4.routes:        { ip = 192.0.2.1/24, nh = 198.51.100.1 }
    ...
    ```
    `ip`{.literal} 属性显示要路由的网络，以及网关（下一跳）的
    `nh`{.literal} 属性。
4.  保存配置：
    ``` literallayout
    nmcli> save persistent
    ```
5.  重启网络连接：
    ``` literallayout
    nmcli> activate example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    当您重启连接时，所有当前使用这个连接的连接将会被暂时中断。
    :::
6.  保留 `nmcli`{.literal} 互动模式：
    ``` literallayout
    nmcli> quit
    ```
7.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#proc_configuring-a-static-route-using-nmstatectl_configuring-static-routes}使用 nmstatectl 配置静态路由 {.title}
:::
您可以使用 `nmstatectl`{.literal} 程序在网络连接配置中添加静态路由。
本节中的步骤论述了如何将路由添加到 `192.0.2.0/24`{.literal}
网络，该网络使用在 `198.51.100.1`{.literal} 上运行的网关，该网关可通过
`enp1s0`{.literal} 接口访问。
::: itemizedlist
**先决条件**
-   `enp1s0`{.literal} 网络接口已配置。
-   静态路由的网关必须在接口上直接访问。
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  创建一个 YAML 文件，如
    `~/add-static-route-to-enp1s0.yml`{.literal}，其内容如下：
    ``` literallayout
    ---
    routes:
      config:
      - destination: 192.0.2.0/24
        next-hop-address: 198.51.100.1
        next-hop-interface: enp1s0
    ```
2.  将设置应用到系统：
    ``` literallayout
    # nmstatectl apply ~/add-static-route-to-enp1s0.yml
    ```
:::
::: itemizedlist
**其他资源**
-   `nmstatectl(8)`{.literal} man page
-   `/usr/share/doc/nmstate/examples/`{.literal}
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#proc_configuring-a-static-route-using-rhel-system-roles_configuring-static-routes}使用 RHEL 系统角色配置静态路由 {.title}
:::
您可以使用网络 RHEL 系统角色配置静态路由。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的完整配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp7s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 IPv4 地址 -
    `198.51.100.20`{.literal}，子网掩码为`/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   静态路由：
    ::: itemizedlist
    -   `192.0.2.0/24`{.literal}，网关为 `198.51.100.1`{.literal}
    -   `203.0.113.0/24`{.literal}，网关为 `198.51.100.2`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 root
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/add-static-routes.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with static IP and additional routes
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
                route:
                  - network: 192.0.2.0
                    prefix: 24
                    gateway: 198.51.100.1
                  - network: 203.0.113.0
                    prefix: 24
                    gateway: 198.51.100.2
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/add-static-routes.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/add-static-routes.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**验证步骤**
-   显示路由表：
    ``` literallayout
    # ip -4 route
    default via 198.51.100.254 dev enp7s0 proto static metric 100
    192.0.2.0/24 via 198.51.100.1 dev enp7s0 proto static metric 100
    203.0.113.0/24 via 198.51.100.2 dev enp7s0 proto static metric 100
    ...
    ```
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
:::
[]{#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html}
::: chapter
::: titlepage