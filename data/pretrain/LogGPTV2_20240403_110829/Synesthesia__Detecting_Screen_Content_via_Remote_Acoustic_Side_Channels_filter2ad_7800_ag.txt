correlation of the following chunk is the highest. If the master’s
correlation with the obtained chunk is above T , it is added
to the chunk collection. Otherwise, it is discarded and the
algorithm goes into sync mode.
In sync mode, the next chunk’s size can be between S and
S + 6000 samples. Again, the algorithm ﬁnds the size that
maximizes correlation with the following chunk. As long as
the algorithm is in sync mode, it does not add new chunks to
the collection. The algorithm exits sync mode once it found a
size such that the following chunk has correlation  T then
chunks[0] ← signal[: j] // master chunk
signal ← signal[j :]
signal ← signal[1 :]
next_len ← G //normal mode
state ← "normal"
sync_count ← 0
while len(signal) > len(chunks[0]) + max{next_len} do
1: procedure CHOPSIGNAL(array signal, size S, allowed drift d, threshold T )
2: init:
3:
4:
5:
6:
7: ﬁnd_ﬁrst, master_chunk:
8:
9:
10:
11:
12:
13:
14:
15: loop:
16:
17:
18:
19:
20:
21:
22:
23:
24:
25:
26:
27:
28:
j ← argmaxj∈next_len
c ← corr(chunks[0], signal[j : c_len])
if corr(chunks[0], signal[: j]) > T and state = "normal" then
{corr(chunks[0], signal[j : c_len])}
chunks.append(signal[: j]) // master chunk
if c  3 then
return "error"
state ← "normal"
next_len ← G
signal ← signal[j :]
else
29:
30:
31:
32:
33:
34:
35: outlier rejection:
36:
37:
outlier_reject(chunks)
return chunks
2) Comparing against a natural baseline: Figure A.1 com-
pares our method with the baseline, correlation-based one
outlined in Section II-D1, for processing a particularly noisy
Zebra signal recorded using a parabolic mic directed at a
Soyo screen. This naive approach comprises of (1) chunking
according to the the exact de-facto refresh rate (59.9019 in this
case), (2) rotationally shifting chunks according to maximal
correlation, and (3) performing outlier rejection, removing
chunks whose correlation is less than 0.05.
B. Neural Network Architectures
1) On-screen keyboard snooping: For the experiment in
Section IV-B, we used a convolutional layer with window size
12, 16 ﬁlters, and stride 1, followed by another convolutional
layer with the same parameters but 32 ﬁlters, followed by a
max-pooling layer with pool size 4, and one fully-connected
layer with output size 512. The convolutional and FC layers
have ReLU activations. The last layer is a softmax. We used an
Adadelta optimizer with a categorical crossentropy loss, and
a batch size of 64. We trained each network for 200 epochs.
Each epoch takes around 3 s. The model was evaluated on the
validation set after every epoch; the best-performing model
was saved for testing.
3) Website distinguishing: For the experiment
2) Text extraction: For the experiment in Section V, we
used 1 convolutional layer with window size 12, 64 ﬁlters,
and stride 1, one max-pooling layer with size 2, and 1 fully-
connected layer with output size 2048. The convolutional and
FC layers have ReLU activations. The last layer is softmax.
We used an SGD optimizer with learning rate of 0.01, norm-
clipped at 1. We used a batch size of 16, and trained for 1000
epochs. After every epoch the model was evaluated on the
validation set; the best-performing model was saved for testing.
in Sec-
tion VI-A, we used 6 convolutional layers, with a max-pooling
layer after every 2. All convolutions are of window size 24
and stride 1. For the ﬁrst and second layer, we have 16 and
32 ﬁlters respectively, and 64 for the other four convolutional
layers. The 10th layer is a fully connected layer with 512
outputs, followed by a 0.9 dropout layer. The ﬁrst 10 layers
have ReLU activations. The last layer is an FC layer with
softmax activations. We used an SGD optimizer with a 0.01
learning rate, 0.1 gradient clipping, a categorical crossentropy
loss, and batch size of 64. We trained each network for 800
epochs (about 4 s per epoch).
For the experiment in Section VI-B, we used 3 convo-
lutional layers with kernel size 12, stride 1 and 16 ﬁlters,
followed by a max-pooling layer with pool size 8, followed
by a fully connected (FC) layer with output 512, followed by
a Dropout 0.5 layer, followed by a softmax output layer. Con-
volutional, FC, and max-pooling layers have ReLU activations.
We used an Adadelta optimizer with categorical crossentropy
and batch size 16. We trained for 100 epochs. Each epoch took
about 7 s.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:34 UTC from IEEE Xplore.  Restrictions apply. 
Model
Apple Cinema A1316
BenQ q20ws
ViewSonic VA903b
Samsung 920NW
Dell 2208WFPt
Dell 2208WFPf
Dell 3011
Dell U2713H
HP ZR30w
Philips 170S4
Soyo DYLM2086
Soyo DYLM2248
Eyoyo S801C
Eyoyo 808H
Lenovo Carbon X1
3rd Gen laptop screen
Size
27"
20.1"
19"
19"
22"
22"
30"
27"
30"
17"
20"
22"
8"
8"
14"
Resolution
2560 × 1440
1680 × 1050
1280 × 1024
1440 × 900
1680 × 1050
1680 × 1050
2560 × 1600
2560 × 1440
2560 × 1600
1280 × 1024
1440 × 900
1680 × 1050
1024 × 768
1024 × 768
2650 × 1440
Backlight Qty
1
1
2
1
8
2
5
2
5
1
1
2
1
1
1
LED
CCFL
CCFL
CCFL
CCFL
CCFL
CCFL
LED
CCFL
CCFL
CCFL
CCFL
LED
LED
LED
(a) Output of the naive approach.
(b) Output of our approach, using S = 2306, T =
0.05, d = 3.
(c) Output of “ground truth” chunking, using the
trigger signal obtained via the vsync probe to accu-
rately segment the trace.
Fig. A.1: Comparing the outputs of the two chunking approaches on a Zebra of 30 periods, recorded using a parabolic mic (see
Section III-A). The naive approach produces a signal whose amplitude is erratic and bears less resemblance to the one of the
ground truth, even though it is using as input the exact refresh rate (up to 0.0001 s), and even though this rate is entirely stable
across this particular recording (there are no abnormally sized cycles).
C. List of Screens Used
We specify the screen models used in the experiments
reported in this paper. Similar effects were observed during
opportunistic ad-hoc tests on additional screens.
(a) For various distances, the averages of modulated signal segments
corresponding with refresh periods.
D. The effect of microphone distance
We investigate the effect of microphone proximity to the
screen on the leakage signal. We used the setup in Section II-A
to record a Dell 2208WFPt screen from various distances.
The microphone was placed near the screen’s top and then
moved away along a straight line, pitch 40 degrees up, while
maintaining the microphone’s orientation towards the screen
coaxially. We recorded traces of a Punctured Zebra from
a distance of 1cm, 2cm, 5cm, 10cm, 20cm, 50cm, 100cm,
200cm, 300cm, and 500cm. Then, to measure the signal quality
at a given distance, we performed the correlation test from
Section II-D and Figure II.6: we demodulated and “chopped”
the signal into chunks (each corresponding with a refresh
period) using the vsync probe. We then measured the average
Pearson correlation of the chunks from the average of chunks.
Figure A.2a shows the resulting chopped-and-averaged
trace for each distance. Especially for small distances, one
can readily observe the regular patterns corresponding to
Zebra stipes, as well as the ﬂatter region corresponding to
the puncturing (black rectangle) in the middle. Figure A.2b
shows the correlation values for the various distances. Even at
a distance of 3 meters, we see nontrivial correlation value.
Note the discernible shifts between the traces in Fig-
ure A.2a, as distance increases. These occur since the signal is
869
(b) Signal quality (average correlation value) as a function of
microphone distance.
Fig. A.2:
For recordings of a black hole from various
distances, we quantitatively and qualitatively characterize the
relationship between microphone distance and signal quality.
captured acoustically but triggered electronically. At a 60 kHz
refresh rate, the speed of sound (343 m/s) causes a delay of
17.5% of the refresh cycle per meter of distance — consistently
with the observed signal. Had the signal source been electro-
magnetic (conducted or emanated), the delay would have been
induced by the speed of light in the relevant medium (metal
or air), and thus smaller by 6 orders of magnitude.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:47:34 UTC from IEEE Xplore.  Restrictions apply.