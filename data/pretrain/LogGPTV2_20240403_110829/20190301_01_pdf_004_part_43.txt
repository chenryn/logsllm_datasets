acctg=# SELECT partition_name, subpartition_name, high_value FROM
ALL_TAB_SUBPARTITIONS;
partition_name | subpartition_name | high_value
------------------+-------------------+-----------------------------------
FIRST_HALF_2012 | P1_AMERICAS | FOR VALUES IN ('US', 'CANADA')
FIRST_HALF_2012 | P1_EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
SECOND_HALF_2012 | P2_AMERICAS | FOR VALUES IN ('US', 'CANADA')
SECOND_HALF_2012 | P2_EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
(4 rows)
The following command adds rows to each subpartition:
INSERT INTO sales VALUES
(10, '4519b', 'FRANCE', '17-Jan-2012', '45000'),
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 377
Database Compatibility for Oracle® Developers Guide
(30, '7588b', 'CANADA', '14-Dec-2012', '50000'),
(30, '9519b', 'CANADA', '01-Feb-2012', '75000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2012', '4950'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(10, '9519a', 'FRANCE', '18-Aug-2012', '650000'),
(10, '9519b', 'FRANCE', '18-Aug-2012', '650000'),
(40, '4788a', 'US', '23-Sept-2012', '4950'),
(40, '4788b', 'US', '09-Oct-2012', '15000');
A SELECT statement confirms that the rows are correctly distributed amongst the
subpartitions:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
-------------------+---------+---------+---------+--------------------+--------
sales_p1_americas | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_p1_americas | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_p1_americas | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_p1_americas | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_p1_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_p2_americas | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_p2_americas | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_p2_americas | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_p2_americas | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_p2_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_p2_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_p2_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
(12 rows)
The following command splits the p2_americas subpartition into two new
subpartitions, and redistributes the contents:
ALTER TABLE sales SPLIT SUBPARTITION p2_americas
VALUES ('US')
INTO
(
SUBPARTITION p2_us,
SUBPARTITION p2_canada
);
After invoking the command, the p2_americas subpartition has been deleted; in its
place, the server has created two new subpartitions (p2_us and p2_canada):
acctg=# SELECT partition_name, subpartition_name, high_value FROM
ALL_TAB_SUBPARTITIONS;
partition_name | subpartition_name | high_value
------------------+-------------------+-----------------------------------
FIRST_HALF_2012 | P1_AMERICAS | FOR VALUES IN ('US', 'CANADA')
FIRST_HALF_2012 | P1_EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
SECOND_HALF_2012 | P2_CANADA | FOR VALUES IN ('CANADA')
SECOND_HALF_2012 | P2_US | FOR VALUES IN ('US')
SECOND_HALF_2012 | P2_EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
(5 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 378
Database Compatibility for Oracle® Developers Guide
Querying the sales table demonstrates that the content of the p2_americas
subpartition has been redistributed:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date |amount
-------------------+---------+---------+---------+--------------------+------
sales_p1_americas | 40 | 9519b | US | 12-APR-12 00:00:00 |145000
sales_p1_americas | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_p1_americas | 30 | 4519b | CANADA | 08-APR-12 00:00:00 |120000
sales_p1_americas | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_p1_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_p2_canada | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_p2_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_p2_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 |650000
sales_p2_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 |650000
sales_p2_us | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_p2_us | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_p2_us | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
(12 rows)
10.3.5.2 Example - Splitting a RANGE Subpartition
The following example splits a range subpartition, redistributing the subpartition's
contents between two new subpartitions. The sample table (sales) was created with the
command:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
SUBPARTITION BY RANGE(date)
(
PARTITION europe VALUES('FRANCE', 'ITALY')
(
SUBPARTITION europe_2011
VALUES LESS THAN('2012-Jan-01'),
SUBPARTITION europe_2012
VALUES LESS THAN('2013-Jan-01')
),
PARTITION asia VALUES('INDIA', 'PAKISTAN')
(
SUBPARTITION asia_2011
VALUES LESS THAN('2012-Jan-01'),
SUBPARTITION asia_2012
VALUES LESS THAN('2013-Jan-01')
),
PARTITION americas VALUES('US', 'CANADA')
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 379
Database Compatibility for Oracle® Developers Guide
(
SUBPARTITION americas_2011
VALUES LESS THAN('2012-Jan-01'),
SUBPARTITION americas_2012
VALUES LESS THAN('2013-Jan-01')
)
);
The sales table has three partitions (europe, asia, and americas). Each partition
has two range-defined subpartitions that sort the partitions contents into subpartitions by
the value of the date column:
acctg=# SELECT partition_name, subpartition_name, high_value FROM
ALL_TAB_SUBPARTITIONS;
partition_name | subpartition_name | high_value
----------------+-------------------+------------------------------------------------
EUROPE | EUROPE_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
EUROPE | EUROPE_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
ASIA | ASIA_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
ASIA | ASIA_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
AMERICAS | AMERICAS_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
AMERICAS | AMERICAS_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
(6 rows)
The following command adds rows to each subpartition:
INSERT INTO sales VALUES
(10, '4519b', 'FRANCE', '17-Jan-2012', '45000'),
(20, '3788a', 'INDIA', '01-Mar-2012', '75000'),
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(20, '3788a', 'PAKISTAN', '04-Jun-2012', '37500'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
(30, '7588b', 'CANADA', '14-Dec-2012', '50000'),
(30, '9519b', 'CANADA', '01-Feb-2012', '75000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2012', '4950'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(10, '9519a', 'FRANCE', '18-Aug-2012', '650000'),
(10, '9519b', 'FRANCE', '18-Aug-2012', '650000'),
(20, '3788b', 'INDIA', '21-Sept-2012', '5090'),
(40, '4788a', 'US', '23-Sept-2012', '4950'),
(40, '4788b', 'US', '09-Oct-2012', '15000'),
(20, '4519a', 'INDIA', '18-Oct-2012', '650000'),
(20, '4519b', 'INDIA', '2-Dec-2012', '5090');
A SELECT statement confirms that the rows are distributed amongst the subpartitions:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
---------------------+---------+---------+----------+--------------------+--------
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 380
Database Compatibility for Oracle® Developers Guide
sales_americas_2012 | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_americas_2012 | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas_2012 | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_americas_2012 | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_americas_2012 | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas_2012 | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_americas_2012 | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_americas_2012 | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_europe_2012 | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe_2012 | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe_2012 | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe_2012 | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia_2012 | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia_2012 | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia_2012 | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia_2012 | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia_2012 | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(17 rows)
The following command splits the americas_2012 subpartition into two new
subpartitions, and redistributes the contents:
ALTER TABLE sales
SPLIT SUBPARTITION americas_2012
AT('2012-Jun-01')
INTO
(
SUBPARTITION americas_p1_2012,
SUBPARTITION americas_p2_2012
);
After invoking the command, the americas_2012 subpartition has been deleted; in its
place, the server has created two new subpartitions (americas_p1_2012 and
americas_p2_2012):
acctg=# SELECT partition_name, subpartition_name, high_value FROM
ALL_TAB_SUBPARTITIONS;
partition_name | subpartition_name | high_value
----------------+-------------------+--------------------------------------------------
EUROPE | EUROPE_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
EUROPE | EUROPE_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
ASIA | ASIA_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
ASIA | ASIA_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
AMERICAS | AMERICAS_2011 | FOR VALUES FROM (MINVALUE) TO ('01-JAN-12
00:00:00')
AMERICAS | AMERICAS_P1_2012 | FOR VALUES FROM ('01-JAN-12 00:00:00') TO ('01-
JUN-12 00:00:00')
AMERICAS | AMERICAS_P2_2012 | FOR VALUES FROM ('01-JUN-12 00:00:00') TO ('01-
JAN-13 00:00:00')
(7 rows)
Querying the sales table demonstrates that the subpartition's contents are redistributed:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
------------------------+---------+---------+----------+--------------------+--------
sales_americas_p1_2012 | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 381
Database Compatibility for Oracle® Developers Guide
sales_americas_p1_2012 | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_americas_p1_2012 | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas_p1_2012 | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_americas_p2_2012 | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas_p2_2012 | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_americas_p2_2012 | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_americas_p2_2012 | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_europe_2012 | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe_2012 | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe_2012 | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe_2012 | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia_2012 | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia_2012 | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia_2012 | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia_2012 | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia_2012 | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(17 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 382
Database Compatibility for Oracle® Developers Guide
10.3.6 ALTER TABLE… EXCHANGE PARTITION
The ALTER TABLE…EXCHANGE PARTITION command swaps an existing table with a
partition. If you plan to add a large quantity of data to a partitioned table, you can use the
ALTER TABLE… EXCHANGE PARTITION command to implement a bulk load. You can
also use the ALTER TABLE… EXCHANGE PARTITION command to remove old or
unneeded data for storage.
The command syntax is available in two forms.
The first form swaps a table for a partition:
ALTER TABLE target_table
EXCHANGE PARTITION target_partition
WITH TABLE source_table
[(INCLUDING | EXCLUDING) INDEXES]
[(WITH | WITHOUT) VALIDATION];
The second form swaps a table for a subpartition:
ALTER TABLE target_table
EXCHANGE SUBPARTITION target_subpartition
WITH TABLE source_table
[(INCLUDING | EXCLUDING) INDEXES]
[(WITH | WITHOUT) VALIDATION];
Description
When the ALTER TABLE… EXCHANGE PARTITION command completes, the data
originally located in the target_partition will be located in the source_table,
and the data originally located in the source_table will be located in the
target_partition.
The ALTER TABLE… EXCHANGE PARTITION command can exchange partitions in a
LIST, RANGE or HASH partitioned table. The structure of the source_table must
match the structure of the target_table (both tables must have matching columns and
data types), and the data contained within the table must adhere to the partitioning
constraints.
If the INCLUDING INDEXES clause is specified with EXCHANGE PARTITION, then
matching indexes in the target_partition and source_table are swapped. Indexes
in the target_partition with no match in the source_table are rebuilt and vice
versa (that is, indexes in the source_table with no match in the target_partition
are also rebuilt).
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 383
Database Compatibility for Oracle® Developers Guide
If the EXCLUDING INDEXES clause is specified with EXCHANGE PARTITION, then
matching indexes in the target_partition and source_table are swapped, but the
target_partition indexes with no match in the source_table are marked as
invalid and vice versa (that is, indexes in the source_table with no match in the
target_partition are also marked as invalid).
The previously used matching index term refers to indexes that have the same attributes
such as the collation order, ascending or descending direction, ordering of nulls first or
nulls last, and so forth as determined by the CREATE INDEX command.
If both INCLUDING INDEXES and EXCLUDING INDEXES are omitted, then the default
action is the EXCLUDING INDEXES behavior.
The same behavior as previously described applies for the target_subpartition used
with the EXCHANGE SUBPARTITION clause.
You must own a table to invoke ALTER TABLE… EXCHANGE PARTITION or ALTER
TABLE… EXCHANGE SUBPARTITION against that table.
Parameters:
target_table
The name (optionally schema-qualified) of the table in which the partition or
subpartition resides.
target_partition
The name of the partition to be replaced.
target_subpartition
The name of the subpartition to be replaced.
source_table
The name of the table that will replace the target_partition or
target_subpartition.
10.3.6.1 Example - Exchanging a Table for a Partition
The example that follows demonstrates swapping a table for a partition (americas) of
the sales table. You can create the sales table with the following command:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 384
Database Compatibility for Oracle® Developers Guide
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
(
PARTITION europe VALUES('FRANCE', 'ITALY'),
PARTITION asia VALUES('INDIA', 'PAKISTAN'),
PARTITION americas VALUES('US', 'CANADA')
);
Use the following command to add sample data to the sales table:
INSERT INTO sales VALUES
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(10, '4519b', 'FRANCE', '17-Jan-2012', '45000'),
(20, '3788a', 'INDIA', '01-Mar-2012', '75000'),
(20, '3788a', 'PAKISTAN', '04-Jun-2012', '37500'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(10, '9519a', 'FRANCE', '18-Aug-2012', '650000'),
(10, '9519b', 'FRANCE', '18-Aug-2012', '650000'),
(20, '3788b', 'INDIA', '21-Sept-2012', '5090'),
(20, '4519a', 'INDIA', '18-Oct-2012', '650000'),
(20, '4519b', 'INDIA', '2-Dec-2012', '5090');
Querying the sales table shows that only one row resides in the americas partition:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
----------------+---------+---------+----------+--------------------+--------
sales_americas | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090