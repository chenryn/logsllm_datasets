User: 请提供一个能够有效避免SQL注入的解决方案。
Assistant: 使用参数化查询（Prepared statement）可以有效避免SQL注入攻击。 参数化查询是通过将SQL查询语句和参数值分开，保证参数值不会被解释为代码，避免了SQL注入的风险。具体实现中, 可以使用数据库提供的PreparedStatement

比如以下例子：

```
PreparedStatement statement = connection.prepareStatement("SELECT * FROM users WHERE username = ? AND password = ?");
statement.setString(1, username);
statement.setString(2, password);
ResultSet result = statement.executeQuery();
```

在这个例子中，将用户名和密码作为参数传递给了PreparedStatement。通过设置不同的参数值，可以执行不同的查询操作，而不必担心SQL注入的攻击和漏洞问题。