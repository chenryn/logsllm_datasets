original app. Unfortunately, none of these approaches address
the inherent ﬂaw of app recognition, namely the inability to
recognize previously unseen apps.
Real-time ﬁngerprint generation. Related approaches on
real-time ﬁngerprint generation for the detection of apps either
require decrypted network trafﬁc, or focus on detecting the
application-layer instead of the mobile app itself. Bernaille et
al. [13] stressed the importance of fast recognition of apps
in network trafﬁc and suggested the clustering of TCP ﬂows
based on their ﬁrst ﬁve messages. Their approach recognizes
the application-layer protocol, which might be sufﬁcient for
detecting desktop apps. In contrast, since mobile apps mostly
communicate over either HTTPS or QUIC, this method is
insufﬁcient in our setting. DECANTeR [15] builds desktop
app ﬁngerprints from the headers of HTTP messages without
requiring prior knowledge of apps. However, this approach also
relies on decrypted trafﬁc for ﬁngerprint generation.
TLS ﬁngerprinting. In addition to app ﬁngerprinting, TLS ﬁn-
gerprinting techniques are often used to track communicating
processes [6, 8, 41, 42]. These techniques leverage the diversity
of ﬁelds in ClientHello messages generated by different
TLS implementations to create ﬁngerprints. However, they
do not work well in the homogeneous mobile setting where
many apps use the same SSL/TLS implementation provided
by the underlying OS. Consequently, different apps produce
the same TLS ﬁngerprints making impractical to recognize
apps or discover previously unseen apps. This property is
even exploited by tools [29] to bypass censorship systems.
TLS ﬁngerprinting may also be applied on the ServerHello
message as done by JA3S [6]. In this setting, it is not the app
that is ﬁngerprinted but rather the destination communicating
with the app. This technique can potentially be used to improve
our destination clustering step, but is not directly applicable to
ﬁngerprinting mobile apps. In general, destination-based TLS
ﬁngerprinting techniques that focus on desktop applications do
not work well when directly applied to mobile apps because,
as shown in Section V-E, mobile apps often share destination-
based clusters (e.g., advertisement networks).
Malware detection. We showed the value of our approach
in the setting of unseen app detection, where we treat new
apps as potentially malicious. This decision can be made by
complementing techniques that focus speciﬁcally on classify-
ing malicious trafﬁc [7, 9]. These approaches are not capable
of discriminating between individual apps, but rather make a
decision on whether trafﬁc contains malicious patterns. Hence,
our approach complements these techniques by providing more
insights into the individual apps active on the network.
VIII. CONCLUSION
In this work we proposed FLOWPRINT, a novel approach
for creating real-time app ﬁngerprints from the encrypted
network trafﬁc of mobile devices. Unlike existing approaches,
our approach does not rely on any prior knowledge about apps
that are active in a certain network. Therefore, the strength
of FLOWPRINT lies in its ability to detect previously unseen
16
apps in encrypted network trafﬁc. This allows us to deal with
evolving sets of apps, opening many security applications for
which ﬁngerprinting was previously unsuitable.
In our evaluation, FLOWPRINT achieved an accuracy of
89.2% for recognizing apps, outperforming the supervised
state-of-the-art approach. Furthermore, we showed that our
approach is able to detect previously unseen apps with a
precision of 93.5%. These results demonstrate the capabilities
of semi-supervised approaches when dealing with evolving
systems, such as mobile apps, even in the presence of largely
homogeneous trafﬁc due to third-party libraries and services.
ACKNOWLEDGEMENTS
We would like to thank our reviewers for their valuable
comments, which signiﬁcantly improved our paper. This work
was partially supported by the Netherlands Organisation for
Scientiﬁc Research (NWO) in the context of the SeReNity
project and grants from DHS S&T (contract FA8750-17-2-
0145), NSF award CNS-1909020, the Data Transparency Lab,
and Comcast Innovation Fund. Some of the analysis in the
work was also supported by a Farsight Research Grant. The
research leading to these results has further received funding
from SBA Research (SBA-K1), which is funded within the
framework of COMET Competence Centers for Excellent
Technologies by BMVIT, BMDW, and the federal state of
Vienna, managed by the FFG. The ﬁnancial support by the
Christian Doppler Research Association, the Austrian Federal
Ministry for Digital and Economic Affairs and the National
Foundation for Research, Technology and Development is also
gratefully acknowledged.
REFERENCES
[1] Abbas Acar, Hossein Fereidooni, Tigist Abera, Amit Kumar Sikder,
Markus Miettinen, Hidayet Aksu, Mauro Conti, Ahmad-Reza Sadeghi,
and A. Selcuk Uluagac. Peek-a-Boo: I see your smart home activities,
even encrypted! arXiv preprint arXiv:1808.02741, 2018.
[2] Giuseppe Aceto, Domenico Ciuonzo, Antonio Montieri, and Antonio
Pescap´e. Multi-Classiﬁcation Approaches for Classifying Mobile App
Trafﬁc. Journal of Network and Computer Applications, 2018.
Jagdish Prasad Achara, Gergely Acs, and Claude Castelluccia. On the
Unicity of Smartphone Applications. In Proc. of the ACM Workshop
on Privacy in the Electronic Society (WPES), 2015.
[3]
[4] Khaled Al-Naami, Swarup Chandra, Ahmad Mustafa, Latifur Khan,
Zhiqiang Lin, Kevin Hamlen, and Bhavani Thuraisingham. Adaptive
Encrypted Trafﬁc Fingerprinting With Bi-Directional Dependence. In
Proc. of the Annual Computer Security Applications Conference (AC-
SAC), 2016.
[5] Hasan Faik Alan and Jasleen Kaur. Can Android Applications Be
Identiﬁed Using Only TCP/IP Headers of Their Launch Time Trafﬁc?
In Proc. of the ACM Conference on Security & Privacy in Wireless and
Mobile Networks (WiSec), 2016.
John B. Althouse, Jeff Atkinson, and Josh Atkins. JA3 - A method
for proﬁling SSL/TLS Clients. https://github.com/salesforce/ja3, June
2017.
[6]
[7] Blake Anderson and David McGrew. Identifying Encrypted Malware
Trafﬁc with Contextual Flow Data. In Proc. of the ACM Workshop on
Artiﬁcial Intelligence and Security (AISec), 2016.
[8] Blake Anderson and David McGrew.
TLS Beyond the Browser:
Combining End Host and Network Data to Understand Application
Behavior. In Proc. of the ACM Internet Measurement Conference (IMC),
2019.
[9] Blake Anderson, Subharthi Paul, and David McGrew. Deciphering
Journal of Computer
Malware’s use of TLS (without Decryption).
Virology and Hacking Techniques, 2018.
[10] AppAnnie. The State of Mobile in 2019. https://www.appannie.com/
de/insights/market-data/the-state-of-mobile-2019/, January 2019.
[11] Michael Backes, Sven Bugiel, and Erik Derr. Reliable Third-Party
Library Detection in Android and its Security Applications. In Proc.
of the ACM Conference on Computer and Communications Security
(CCS), 2016.
[12] Taimur Bakhshi and Bogdan Ghita. On Internet Trafﬁc Classiﬁcation:
Journal of Computer
A Two-Phased Machine Learning Approach.
Networks and Communications, 2016.
[13] Laurent Bernaille, Renata Teixeira, Ismael Akodkenou, Augustin Soule,
ACM
Trafﬁc Classiﬁcation On The Fly.
and Kave Salamatian.
SIGCOMM Computer Communication Review, 2006.
[14] Matthias B¨ohmer, Brent Hecht, Johannes Sch¨oning, Antonio Kr¨uger,
and Gernot Bauer. Falling Asleep with Angry Birds, Facebook and
Kindle – A Large Scale Study on Mobile Application Usage. In Proc.
of the International Conference on Human-Computer Interaction with
Mobile Devices and Services (MobileHCI), 2011.
[15] Riccardo Bortolameotti, Thijs van Ede, Marco Caselli, Maarten H
Everts, Pieter Hartel, Rick Hofstede, Willem Jonker, and Andreas Peter.
DECANTeR: DEteCtion of Anomalous outbouNd HTTP TRafﬁc by
Passive Application Fingerprinting. In Proc. of the Annual Computer
Security Applications Conference (ACSAC), 2017.
[16] Riccardo Bortolameotti, Thijs van Ede, Andrea Continella, Thomas
Hupperich, Maarten Everts, Reza Rafati, Willem Jonker, Pieter Hartel,
and Andreas Peter. HeadPrint: Detecting Anomalous Communications
through Header-based Application Fingerprinting. In Proc. of the ACM
Symposium on Applied Computing (SAC), 2020.
[17] Yi Chen, Wei You, Yeonjoon Lee, Kai Chen, XiaoFeng Wang, and Wei
Zou. Mass Discovery of Android Trafﬁc Imprints through Instantiated
Partial Execution. In Proc. of the ACM Conference on Computer and
Communications Security (CCS), 2017.
[18] Yi-Chao Chen, Yong Liao, Mario Baldi, Sung-Ju Lee, and Lili Qiu. OS
Fingerprinting and Tethering Detection in Mobile Networks. In Proc.
of the ACM Internet Measurement Conference (IMC), 2014.
[19] Zhengyang Chen, Bowen Yu, Yu Zhang, Jianzhong Zhang, and
Automatic Mobile Application Trafﬁc Identiﬁca-
In Proc. of IEEE Trust-
Jingdong Xu.
tion by Convolutional Neural Networks.
com/BigDataSE/ISPA, 2016.
[20] Yeongrak Choi, Jae Yoon Chung, Byungchul Park, and James Won-Ki
Hong. Automated classiﬁer generation for application- level mobile
In Proc. of the IEEE/IFIP Network Operations
trafﬁc identiﬁcation.
and Management Symposium (NOMS), 2012.
[21] Cisco. SNORT Users Manual. https://www.snort.org/documents/snort-
users-manual, 2018.
[22] Stefano Comino, Fabio M. Manenti, and Franco Mariuzzo. Updates
Management in Mobile Applications. iTunes vs Google Play. Journal
of Economics & Management Strategy, 2018.
[23] Mauro Conti, Luigi V. Mancini, Riccardo Spolaor, and Nino Vincenzo
Verde. Can’t You Hear Me Knocking: Identiﬁcation of User Actions
on Android Apps via Trafﬁc Analysis. In Proc. of the ACM Conference
on Data and Application Security and Privacy (CODASPY), 2015.
[24] Andrea Continella, Yanick Fratantonio, Martina Lindorfer, Alessan-
dro Puccetti, Ali Zand, Christopher Kruegel, and Giovanni Vigna.
Obfuscation-Resilient Privacy Leak Detection for Mobile Apps Through
Differential Analysis. In Proc. of the ISOC Network and Distributed
System Security Symposium (NDSS), 2017.
[25] Shuaifu Dai, Alok Tongaonkar, Xiaoyin Wang, Antonio Nucci, and
Dawn Song. NetworkProﬁler: Towards Automatic Fingerprinting of
In Proc. of the IEEE International Conference on
Android Apps.
Computer Communications (INFOCOM), 2013.
[26] Trinh Minh Tri Do and Daniel Gatica-Perez. Where and What: Using
Smartphones to Predict Next Locations and Applications in Daily Life.
Pervasive and Mobile Computing, 2014.
[27] Zakir Durumeric, Zane Ma, Drew Springall, Richard Barnes, Nick
Sullivan, Elie Bursztein, Michael Bailey, J Alex Halderman, and Vern
Paxson. The Security Impact of HTTPS Interception. In Proc. of the
ISOC Network and Distributed System Security Symposium (NDSS),
2017.
[28] David Formby, Preethi Srinivasan, Andrew Leonard, Jonathan Rogers,
and Raheem Beyah. Who’s in Control of Your Control System? Device
17
Fingerprinting for Cyber-Physical Systems.
Network and Distributed System Security Symposium (NDSS), 2016.
In Proc. of
the ISOC
[29] Frolov, Sergey and Wustrow, Eric. The use of TLS in Censorship
Circumvention. In Proc. of the ISOC Network and Distributed System
Security Symposium (NDSS), 2019.
Julien Gamba, Mohammed Rashed, Abbas Razaghpanah, Juan Tapiador,
and Narseo Vallina-Rodriguez. An Analysis of Pre-installed Android
In Proc. of the IEEE Symposium on Security and Privacy
Software.
(S&P), 2020.
[30]
[31] Google.
An
Update
on
Android
TLS
Adoption.
https://security.googleblog.com/2019/12/an-update-on-android-tls-
adoption.html, December 2019.
[32] Cyril Goutte and Eric Gaussier. A Probabilistic Interpretation of
Precision, Recall and F-Score, with Implication for Evaluation. In Proc.
of the European Conference on Information Retrieval (ECIR), 2005.
[33] Aric Hagberg, Daniel Schult, and Pieter Swart. Exploring Network
In Proc. of the
Structure, Dynamics, and Function using NetworkX.
Python in Science Conference (SciPy), 2008.
[34] Tin Kam Ho. Random Decision Forests. In Proc. of IEEE International
Conference on Document Analysis and Recognition (ICDAR), 1995.
[35] Paul Jaccard. The Distribution of the Flora of the Alpine Zone. New
Phytologist, 1912.
[36] Martin Lastovicka, Tomas Jirsik, Pavel Celeda, Stanislav Spacek, and
Daniel Filakovsky. Passive OS Fingerprinting Methods in the Jungle
of Wireless Networks. In Proc. of the IEEE/IFIP Network Operations
and Management Symposium (NOMS), 2018.
[37] Fangfan Li, Arian Akhavan Niaki, David Choffnes, Phillipa Gill, and
Alan Mislove. A Large-Scale Analysis of Deployed Trafﬁc Differenti-
ation Practices. In Proc. of the ACM Special Interest Group on Data
Communication (SIGCOMM), 2019.
[38] Li Li, Daoyuan Li, Tegawend´e F. Bissyand´e, Jacques Klein, Yves Le
Traon, David Lo, and Lorenzo Cavallaro. Understanding Android App
Piggybacking: A Systematic Study of Malicious Code Grafting. IEEE
Transactions on Information Forensics and Security, 2017.
[39] Marc Liberatore and Brian Neil Levine.
Encrypted HTTP Connections.
Computer and Communications Security (CCS), 2006.
Inferring the Source of
In Proc. of the ACM Conference on
[40] Martina Lindorfer, Matthias Neugschwandtner, Lukas Weichselbaum,
Yanick Fratantonio, Victor Van Der Veen, and Christian Platzer. An-
drubis - 1,000,000 Apps Later: A View on Current Android Malware
Behaviors. In Proc. of the IEEE International Workshop on Building
Analysis Datasets and Gathering Experience Returns for Security
(BADGERS), 2014.
[41] David McGrew, Blake Anderson, Philip Perricone, and Bill Hudson.
JOY. https://github.com/cisco/joy/, February 2017.
[42] David McGrew, Brandon Enright, Blake Anderson, Shekhar Acharya,
and Adam Weller. Mercury. https://github.com/cisco/mercury, August
2019.
[43] Wes McKinney et al. Data Structures for Statistical Computing in
Python. In Proc. of the Python in Science Conference (SciPy), 2010.
[44] Stanislav Miskovic, Gene Moo Lee, Yong Liao, and Mario Baldi.
AppPrint: Automatic Fingerprinting of Mobile Applications in Network
Trafﬁc. In Proc. of the International Conference on Passive and Active
Network Measurement (PAM), 2015.
[45] Travis E. Oliphant. A Guide to NumPy. Trelgol Publishing, 2006.
[46]
Ioannis Papapanagiotou, Erich M Nahum, and Vasileios Pappas. Con-
In Proc. of the ACM
ﬁguring DHCP Leases in the Smartphone Era.
Internet Measurement Conference (IMC), 2012.
[47] Fabian Pedregosa et al. Scikit-learn: Machine Learning in Python.
Journal of Machine Learning Research, 2011.
[48] Emanuele Petagna, Giuseppe Laurenza, Claudio Ciccotelli, and
Leonardo Querzoni. Peel the Onion: Recognition of Android Apps
Behind the Tor Network. In Proc. of the International Conference on
Information Security Practice and Experience (ISPEC), 2019.
[49] Lawrence R. Rabiner and Bernard Gold. Theory and Application of
Digital Signal Processing. Prentice Hall, 1975.
[50] Abbas Razaghpanah, Arian Akhavan Niaki, Narseo Vallina-Rodriguez,
Srikanth Sundaresan, Johanna Amann, and Phillipa Gill. Studying TLS
Usage in Android Apps. In Proc. of the ACM International Conference
18
[51]
[52]
[53]
on emerging Networking EXperiments and Technologies (CoNEXT),
2017.
Jingjing Ren, Daniel J. Dubois, and David Choffnes. An International
View of Privacy Risks for Mobile Apps, 2019.
Jingjing Ren, Martina Lindorfer, Daniel Dubois, Ashwin Rao, David
Choffnes, and Narseo Vallina-Rodriguez. Bug Fixes, Improvements, ...
and Privacy Leaks – A Longitudinal Study of PII Leaks Across Android
App Versions. In Proc. of the ISOC Network and Distributed System
Security Symposium (NDSS), 2018.
Jingjing Ren, Ashwin Rao, Martina Lindorfer, Arnaud Legout, and
David Choffnes. ReCon: Revealing and Controlling PII Leaks in Mobile
Network Trafﬁc. In Proc. of the International Conference on Mobile
Systems, Applications and Services (MobiSys), 2016.
[54] Andrew Rosenberg and Julia Hirschberg. V-Measure: A Conditional
In Proc. of the
Entropy-Based External Cluster Evaluation Measure.
Joint Conference on Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learning (EMNLP-CoNLL),
2007.
[55] Brendan Saltaformaggio, Hongjun Choi, Kristen Johnson, Yonghwi
Kwon, Qi Zhang, Xiangyu Zhang, Dongyan Xu, and John Qian.
Eavesdropping on Fine-Grained User Activities Within Smartphone
the USENIX
Apps Over Encrypted Network Trafﬁc.
Workshop on Offensive Technologies (WOOT), 2016.
Newly Observed Domains.
[56] Farsight Security.
https://www.
In Proc. of
farsightsecurity.com, January 2020.
[57] Asaf Shabtai, Uri Kanonov, Yuval Elovici, Chanan Glezer, and Yael
Weiss. “Andromaly”: a behavioral malware detection framework for
Android devices. Journal of Intelligent Information Systems, 2012.
[58] Ravi Sharma. Android Q will let you run multiple apps simultaneously
with Multi Resume feature. https://www.91mobiles.com/hub/android-
q-multi-resume-feature-how-to-use-2-android-apps-at-same-time,
November 2018.
[59] Statcounter. Mobile Browser Market Share Worldwide.
https://
gs.statcounter.com/browser-market-share/mobile/worldwide. Accessed:
February 2019.
[60] Statista. Number of Apps Available in Leading App Stores as of
2nd Quarter 2019. https://www.statista.com/statistics/276623/number-
of-apps-available-in-leading-app-stores/, August 2019.
[61] Tim St¨ober, Mario Frank, Jens Schmitt, and Ivan Martinovic. Who
do you sync you are? Smartphone Fingerprinting via Application
Behaviour. In Proc. of the ACM Conference on Security and Privacy
in Wireless and Mobile Networks (WiSec), 2013.
[62] Vincent F. Taylor, Riccardo Spolaor, Mauro Conti, and Ivan Martinovic.
AppScanner: Automatic Fingerprinting of Smartphone Apps from En-
crypted Network Trafﬁc. In Proc. of the IEEE European Symposium
on Security and Privacy (EuroS&P), 2016.
[63] Vincent F Taylor, Riccardo Spolaor, Mauro Conti, and Ivan Martinovic.
Robust Smartphone App Identiﬁcation via Encrypted Network Trafﬁc
IEEE Transactions on Information Forensics and Security,
Analysis.
2018.
[64] Eline Vanrykel, Gunes Acar, Michael Herrmann, and Claudia Diaz.
Leaky Birds: Exploiting Mobile Application Trafﬁc for Surveillance.
In Proc. of the International Conference on Financial Cryptography
and Data Security (FC), 2016.
[65] Antoine Vastel, Pierre Laperdrix, Walter Rudametkin, and Romain
Rouvoy. FP-STALKER: Tracking Browser Fingerprint Evolutions. In
Proc. of the IEEE Symposium on Security and Privacy (S&P), 2018.
[66] Nguyen Xuan Vinh, Julien Epps, and James Bailey.
Information
Theoretic Measures for Clusterings Comparison: Variants, Properties,
Normalization and Correction for Chance. Journal of Machine Learning
Research, 2010.
[67] Yong Wang, Jinpeng Wei, and Karthik Vangury. Bring Your Own
Device Security Issues and Challenges. In Proc. of the IEEE Consumer
Communications and Networking Conference (CCNC), 2014.
[68] Hongyi Yao, Gyan Ranjan, Alok Tongaonkar, Yong Liao, and Zhuo-
qing Morley Mao. SAMPLES: Self Adaptive Mining of Persistent
LExical Snippets for Classifying Mobile Application Trafﬁc. In Proc.
of the ACM Annual International Conference on Mobile Computing and
Networking (MobiCom), 2015.