FOCS, IEEE Computer Society Press, Nov. 1994,
pp. 436–453. D O I: 10.1109/SFCS.1994.365746.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:30:49 UTC from IEEE Xplore.  Restrictions apply. 
950
[31] R. Gennaro, C. Gentry, B. Parno, and M. Raykova,
“Quadratic span programs and succinct NIZKs without
PCPs,” in EUROCRYPT 2013, T. Johansson and P. Q.
Nguyen, Eds., ser. LNCS, vol. 7881, Springer, Heidelberg,
May 2013, pp. 626–645. D O I: 10.1007/978- 3- 642-
38348-9_37.
[32] S. Dziembowski, L. Eckey, S. Faust, and D. Malinowski,
“Perun: Virtual payment hubs over cryptocurrencies,” in
2019 IEEE Symposium on Security and Privacy, IEEE
Computer Society Press, May 2019, pp. 106–123. D O I:
10.1109/SP.2019.00020.
[33] S. Dziembowski, S. Faust, and K. Hostáková, “General
state channel networks,” in ACM CCS 2018, D. Lie, M.
Mannan, M. Backes, and X. Wang, Eds., ACM Press, Oct.
2018, pp. 949–966. D O I: 10.1145/3243734.3243856.
[34] A. Miller, I. Bentov, S. Bakshi, R. Kumaresan, and P.
McCorry, “Sprites and state channels: Payment networks
that go faster than lightning,” in FC 2019, I. Goldberg
and T. Moore, Eds., ser. LNCS, vol. 11598, Springer,
Heidelberg, Feb. 2019, pp. 508–526. D O I: 10.1007/978-
3-030-32101-7_30.
[35] L. Eckey, S. Faust, K. Hostáková, and S. Roos, Splitting
payments locally while routing interdimensionally, Cryp-
tology ePrint Archive, Report 2020/555, https://eprint.
iacr.org/2020/555, 2020.
[36] L. Aumayr, O. Ersoy, A. Erwig, S. Faust, K. Hostakova,
M. Maffei, P. Moreno-Sanchez, and S. Riahi, “General-
ized bitcoin-compatible channels.,” IACR Cryptol. ePrint
Arch., vol. 2020, p. 476, 2020.
[37] S. Dziembowski, L. Eckey, S. Faust, J. Hesse, and
K. Hostáková, “Multi-party virtual state channels,” in
EUROCRYPT 2019, Part I, Y. Ishai and V. Rijmen, Eds.,
ser. LNCS, vol. 11476, Springer, Heidelberg, May 2019,
pp. 625–656. D O I: 10.1007/978-3-030-17653-2_21.
[38] D. Boneh, C. Gentry, B. Lynn, and H. Shacham, “Ag-
gregate and veriﬁably encrypted signatures from bilinear
maps,” in EUROCRYPT 2003, E. Biham, Ed., ser. LNCS,
vol. 2656, Springer, Heidelberg, May 2003, pp. 416–432.
D O I: 10.1007/3-540-39200-9_26.
[39] Rogue key attacks, https://medium.com/@coolcottontail/
rogue - key - attack - in - bls - signature - and - harmony -
security-eac1ea2370ee.
[40] R. Canetti, “Universally composable security: A new
paradigm for cryptographic protocols,” in Proceedings
42nd IEEE Symposium on Foundations of Computer
Science, IEEE, 2001, pp. 136–145.
[41] R. Canetti, Y. Dodis, R. Pass, and S. Walﬁsh, “Universally
composable security with global setup,” in TCC 2007,
S. P. Vadhan, Ed., ser. LNCS, vol. 4392, Springer,
Heidelberg, Feb. 2007, pp. 61–85. D O I: 10.1007/978-3-
540-70936-7_4.
[42] S. Goldwasser, S. Micali, and R. L. Rivest, “A digital sig-
nature scheme secure against adaptive chosen-message
attacks,” SIAM Journal on Computing, vol. 17, no. 2,
pp. 281–308, Apr. 1988.
[43] M. Backes and D. Hofheinz, “How to break and repair
a universally composable signature functionality,” in
ISC 2004, K. Zhang and Y. Zheng, Eds., ser. LNCS,
vol. 3225, Springer, Heidelberg, Sep. 2004, pp. 61–72.
[44] A. De Santis, S. Micali, and G. Persiano, “Non-interactive
zero-knowledge proof systems,” in Conference on the
Theory and Application of Cryptographic Techniques,
Springer, 1987, pp. 52–72.
J. Camenisch, S. Krenn, and V. Shoup, “A framework
for practical universally composable zero-knowledge
protocols,” in ASIACRYPT 2011, D. H. Lee and X. Wang,
Eds., ser. LNCS, vol. 7073, Springer, Heidelberg, Dec.
2011, pp. 449–467. D O I: 10.1007/978-3-642-25385-
0_24.
[45]
[47]
[48]
[46] R. Canetti, “Security and composition of multiparty
cryptographic protocols,” Journal of Cryptology, vol. 13,
no. 1, pp. 143–202, Jan. 2000. D O I: 10 . 1007 /
s001459910006.
I. Damgård, V. Pastro, N. P. Smart, and S. Zakarias,
“Multiparty computation from somewhat homomorphic
encryption,” in CRYPTO 2012, R. Safavi-Naini and R.
Canetti, Eds., ser. LNCS, vol. 7417, Springer, Heidelberg,
Aug. 2012, pp. 643–662. D O I: 10.1007/978- 3- 642-
32009-5_38.
J. Katz, U. Maurer, B. Tackmann, and V. Zikas, “Uni-
versally composable synchronous computation,” in
TCC 2013, A. Sahai, Ed., ser. LNCS, vol. 7785, Springer,
Heidelberg, Mar. 2013, pp. 477–498. D O I: 10.1007/978-
3-642-36594-2_27.
J.-S. Coron and D. Naccache, “Boneh et al.’s k-element
aggregate extraction assumption is equivalent to the
Difﬁe-Hellman assumption,” in ASIACRYPT 2003, C.-S.
Laih, Ed., ser. LNCS, vol. 2894, Springer, Heidelberg,
2003, pp. 392–397. D O I: 10.1007/978-3-540-40061-
5_25.
[49]
[50] O. Goldreich and L. A. Levin, “A hard-core predicate for
all one-way functions,” in 21st ACM STOC, ACM Press,
May 1989, pp. 25–32. D O I: 10.1145/73007.73010.
“Personal communication,” To appear at CCS 2020,
[51]
[52] R. L. Rivest, A. Shamir, and D. A. Wagner, “Time-
lock puzzles and timed-release crypto,” Cambridge, MA,
USA, Tech. Rep., 1996.
[53] C.-P. Schnorr, “Efﬁcient identiﬁcation and signatures
for smart cards,” in CRYPTO’89, G. Brassard, Ed.,
ser. LNCS, vol. 435, Springer, Heidelberg, Aug. 1990,
pp. 239–252. D O I: 10.1007/0-387-34805-0_22.
[54] A. Fiat and A. Shamir, “How to prove yourself: Practical
solutions to identiﬁcation and signature problems,” in
CRYPTO’86, A. M. Odlyzko, Ed., ser. LNCS, vol. 263,
Springer, Heidelberg, Aug. 1987, pp. 186–194. D O I:
10.1007/3-540-47721-7_12.
[55] D. Pointcheval and J. Stern, “Security proofs for signature
schemes,” in EUROCRYPT’96, U. M. Maurer, Ed.,
ser. LNCS, vol. 1070, Springer, Heidelberg, May 1996,
pp. 387–398. D O I: 10.1007/3-540-68339-9_33.
[56] Charm, https://jhuisi.github.io/charm/index.html.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:30:49 UTC from IEEE Xplore.  Restrictions apply. 
951
EWHi-CMAA,LS(λ)
Q := ˜Q := ∅
(pk , sk ) ← ΠDS .KGen(1λ)
( ˜pk , ˜sk ) ← ΠDS .KGen(1λ)
O := {SignO(sk , ·)SignO( ˜sk , ·)}
(m, ˜m, state) ← AO
(cid:96)k ← Lock(sk , m, ˜sk , ˜m)
∗ ← AO
σ
∗
b0 := ΠDS .Vf(pk , m, σ
b1 := (m /∈ Q ∧ ˜m /∈ ˜Q)
return b0 ∧ b1
(pk , ˜pk )
(state, (cid:96)k )
) = 1
SignO(sk , m)
σ ← ΠDS .Sign(sk , m)
Q := Q ∪ {m}
return σ
SignO( ˜sk , ˜m)
˜σ ← ΠDS .Sign( ˜sk , ˜m)
˜Q := ˜Q ∪ { ˜m}
return ˜σ
Fig. 8: Experiment for weak hiding of lockable signatures
[57] Chia-network/bls-signatures, https://github.com/Chia-
Network/bls-signatures/tree/master/python-bindings.
[58] L. Cavallaro, J. Kinder, X. Wang, and J. Katz, Eds., ACM
CCS 2019, ACM Press, Nov. 2019.
[59] B. M. Thuraisingham, D. Evans, T. Malkin, and D. Xu,
Eds., ACM CCS 2017, ACM Press, 2017.
A P P E N D I X
A. More Formal Deﬁnitions - Lockable Signatures
We deﬁne a weaker version of the hiding property, which is
useful for one of our schemes. Such a property ensures that an
adversary, who is given a correctly generated lock, cannot output
the locked signature without knowing the locking signature.
This is formally captured in the experiment in Figure 8 which
is identical to EHi-CMA except now the adversary is always
given the correctly generated lock and has to output a valid
locked signature to win the experiment. The formal deﬁnition
is given in the following.
Deﬁnition 7 (Weak Hiding): A lockable signature LS is
weakly hiding if there exists a negligible function negl such
that for all λ ∈ N and for all PPT adversaries A it holds that
Pr[EWHi-CMAA,LS(λ) = 1] ≤ negl(λ)
where the experiment EHi-CMA is deﬁned in Figure 8.
B. More Proofs - Theorem 3.1
We recall the aggregate extraction assumption from [38]
(Deﬁnition 4.3).
Deﬁnition 8 (Aggregate Extraction problem): The aggregate
extraction problem for a bilinear pairing group G0, G1, Gt
of order q is said to be hard if there exists a negligible
function negl, for all λ, k ∈ N such that k = poly(λ) for some
polynomial poly, and all PPT adversaries A, the following
holds,
Pr(cid:2)ExpAgExtA,G0,G1,Gt(1λ) = 1(cid:3) ≤ negl(λ)
where ExpAgExt is deﬁned in Figure 10.
Proof 2 (Proof of Theorem 3.1): We will prove that the
hardness of aggregate extraction assumption holds if and only
if the hardness of chained aggregate extraction assumption
holds.
952
Only if. We ﬁrst show that "only if" condition holds. That
is, aggregate extraction assumption for k = 2 implies the
chained aggregate extraction assumption. Assume towards the
contrary that chained aggregate extraction assumption does not
hold. This means there exists a PPT adversary A that wins
the ExpChAgExt experiment with non-negligible probability.
We construct a reduction algorithm R that participates in the
ExpAgExt experiment while making use of A as a sub-routine.
The reduction R gets as input ({Gi, Hi}i∈[2], σ). It sets
σ1 := σ and does the following,
(cid:1)s
−1
(cid:96)+1
for (cid:96) ∈ [2, n − 1] do
q
r(cid:96)+1, s(cid:96)+1 ← Z∗
G(cid:96)+1 :=(cid:0)G(cid:96)−1 · gr(cid:96)+1
1
H(cid:96)+1 := (H(cid:96)−1)s(cid:96)+1
σ(cid:96) := σ(cid:96)−1 · H r(cid:96)+1
(cid:96)−1
the
adversary
A
receives
1
a
It
It
invokes
If j∗
with
(σ∗, j∗)
is even, reduction R ﬁrst computes F
inputs
({Gi, Hi}i∈[n],{σi}i∈[n−1]).
as
output from A. Reduction R checks if j∗ ∈ [n], if not it
aborts.
If j∗ is odd, reduction R ﬁrst computes computes F :=
H (r3+s3r5+···+sj∗−2rj∗ )
. The reduction R outputs (σ∗/F, 1)
as its output to its own challenger.
H (r4+s4r6+···+sj∗−2rj∗ )
as its output to its own challenger.
:=
. The reduction R outputs (σ∗/F, 2)
To see why the view of A is correctly simulated, notice that
(r3, s3, r4, s4, . . . , rn, sn) are chosen uniformly at random from
p, the values ({Gi, Hi}i∈[n]) are uniformly distributed. By
Z∗
induction, we have the base case G1 := gx1
0 , G2 :=
1 , H2 := gy2
gx2
. By induction hypothesis,
we have Gi := gxi
0 , σi−1 := gxiyi+xi−1yi−1
1 , H1 := gy1
.
2
0
0
0 , σ1 := gx1y1+x2y2
(cid:16) xi−1+ri+1
1 , Hi := gyi
(cid:17)
:= gxi+1
1
, where xi+1 :=
xi−1 + ri+1
si+1
si+1
Gi+1 := g
1
Hi+1 := gyi−1si+1
0
σi := σi−1 · H ri+1
0
, where yi+1 := yi−1si+1
:= gyi+1
i−1 := gxiyi+xi−1yi−1+yi−1ri+1
(cid:16) xi−1+ri+1
0
(cid:17)
si+1
:= gxiyi+yi+1xi+1
0
xiyi+yi−1si+1
:= g
0
(cid:17)
(cid:17)
i=5 si−2ri
y1
σj∗ := g
0
σ∗ := g
By induction, we can see that the simulation by the reduction
R is faithful to the execution in the experiment ExpChAgExt.
Let us analyse the case for j∗ is odd (the even case of
analogous) why the reduction R’s output wins the experiment
ExpAgExt. Notice that,
(cid:16)
x2+r4+(cid:80)j∗−1
(cid:16)
r3+(cid:80)j∗
(cid:17)
(cid:16)
x1+r3+(cid:80)j∗
(cid:16)
x1+r3+(cid:80)j∗
(cid:16)
r3+(cid:80)j∗
. Therefore (σ∗/F, 1) is a winning output
Thus, σ∗/F := gy1x1
from R with respect to ExpAgExt.
Clearly R is efﬁcient. Therefore, given our initial assump-
tion that A outputs a winning (σ∗, j∗) with non-negligible