Facility codes
auth
4
auth-priv
10
cron
9
daemon
3
kern
0
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
330
|
Chapter 10: System Log Management and Monitoring
lpr
6
mail
2
mark
N/A
news
7
syslog
5
user
1
uucp
8
local{0-7}
16-23
* (“any facility”)
N/A
Table 10-2. syslog.conf’s priorities
Priorities (in increasing order)
Priority codes
none
N/A
debug
7
info
6
notice
5
warning
4
err
3
crit
2
alert
1
emerg
0
* (“any priority”)
N/A
Table 10-3. Use of “!” and “=” as prefixes with priorities
Prefix
Description
*.notice (no prefix)
any event with priority of ‘notice’ or higher
*.!notice
no event with priority of ‘notice’ or higher
*.=notice
only events with priority ‘notice’
*.!=notice
no events with priority of ‘notice’
Table 10-4. Types of actions in syslog.conf
Action
Description
/some/file
Log to specified file
-/some/file
Log to specified file but don’t sync afterwards
/some/pipe
Log to specified pipe
/dev/some/tty_or_console
Log to specified console
@remote.hostname.or.IP
Log to specified remote host
Table 10-1. syslog.conf’s allowed facilities (continued)
Facilities
Facility codes
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
syslog
|
331
Running syslogd
Just as the default syslog.conf may or may not meet your needs, the default startup
mode of syslogd may need tweaking as well. Table 10-5 and subsequent paragraphs
touch on some syslogd startup flags that are particularly relevant to security. For a
complete list, you should refer to the manpage sysklogd (8).
In addition, note that when you’re changing and testing syslog’s configuration and
startup options, it usually makes sense to start and stop syslogd and klogd in tandem
(see the “What About klogd?” sidebar at the beginning of this chapter if you don’t
know what klogd is). Since it also makes sense to start and stop these the same way
your system does, I recommend that you use your system’s syslog/klogd startup
script.
On most Linux systems, both facilities are controlled by the same startup script,
named either /etc/init.d/syslog or /etc/init.d/sysklog (“sysklog” is shorthand for “sys-
log and klogd”). See Table 10-5 for a list of some of syslogd’s flags.
The first syslogd flag we’ll discuss is the only one used by default in Red Hat 7.x in its
/etc/init.d/syslog script. This flag is -m 0, which disables mark messages. mark mes-
sages contain only a timestamp and the string --MARK--, which some people find use-
ful for navigating lengthy log files. Others find them distracting and redundant, given
that each message has its own timestamp anyhow.
To turn mark messages on, specify a positive nonzero value after -m that tells syslogd
how many minutes should pass before it sends itself a mark message. Remember that
mark has its own facility (called, predictably, “mark”) and that you must specify at
least one selector that matches mark messages (such as mark.*, which matches all
messages sent to the mark facility, or *.*, which matches all messages in all facilities).
username1, username2, etc.
Log to these users’ screens
*
Log to all users’ screens
Table 10-5. Some useful syslogd flags
Flag
Description
-m minutes_btwn_marks
Minutes between “mark” messages (timestamp-only mes-
sages that, depending on your viewpoint, either clarify or
clutter logs. A value of 0 signifies “no marks”).
-a /additional/socket
Usedtospecifyadditionalsockets,besides/dev/log,onwhich
syslogd should listen for messages.
-f /path/to/syslog.conf
Used to provide the path/name of syslog.conf, if different
than /etc/syslog.conf.
-r
Listens for syslog messages from remote hosts.
Table 10-4. Types of actions in syslog.conf (continued)
Action
Description
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
332
|
Chapter 10: System Log Management and Monitoring
For example, to make syslogd generate mark messages every 30 minutes and record
them in /var/log/messages, you would first add a line to /etc/syslog.conf similar to
Example 10-6.
You would then need to start syslogd, as shown in Example 10-7.
Another useful syslogd flag is -a [socket]. This allows you to specify one or more
sockets (in addition to /dev/log for syslogd) from which to accept messages.
In Chapter 6, we used this flag to allow a chrooted named process to bounce its mes-
sages off of a dev/log socket (device-file) in the chroot jail to the nonchrooted syslogd
process. In that example, BIND was running in a “padded cell” (subset of the full
filesystem) and had its own log socket, /var/named/dev/log. We therefore changed a
line in /etc/init.d/syslog that read as shown in Example 10-8.
(Note that the “daemon” function at the beginning of this line is unique to Red Hat’s
init script functions; the important part here is syslogd -m 0 -a /var/named/dev/log.)
More than one -a flag may be specified (Example 10-9).
Continuing down the list of flags in Table 10-5, suppose you need to test a new sys-
log configuration file named syslog.conf.test, but you prefer not to overwrite /etc/
syslog.conf, which is where syslogd looks for its configuration file by default. Use the
-f flag to tell syslogd to use your new configuration file (Example 10-10).
We’ve already covered use of the -r flag, which tells syslogd to accept log messages
from remote hosts, but we haven’t talked about the security ramifications of this. On
the one hand, security is clearly enhanced when you use a centralized log server or
do anything else that makes it easier for you to manage and monitor your logs.
Example 10-6. syslog.conf selector for mark-messages
mark.*                            -/var/log/messages
Example 10-7. Invoking syslogd with 30-minute marks
mylinuxbox:/etc/init.d# ./syslogd -m 30
Example 10-8. init.d/syslog line invoking syslogd to read messages from a chroot jail
daemon syslogd -m 0 -a /var/named/dev/log
Example 10-9. Invoking syslogd with multiple “additional log device” directives
syslogd -a /var/named/dev/log -a /var/otherchroot/dev/log -a /additional/dev/log
Example 10-10. Specifying the path to syslogd’s configuration file
mylinuxbox:/etc/init.d# ./syslogd -f ./syslog.conf.test
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
Syslog-ng
|
333
On the other hand, you must take different threat models into account. Are your logs
sensitive? If log messages traverse untrusted networks and if the inner workings of
the servers that send those messages are best kept secret, then the risks may out-
weigh the benefit (at least, the specific benefit of syslogd’s unauthenticated clear-text
remote logging mechanism).
If this is the case for you, skip to this chapter’s section on Syslog-ng. Syslog-ng can
send remote messages via the TCP protocol and can therefore be used in conjunc-
tion with stunnel, ssh, and other tools that greatly enhance its security. Since syslog
uses only the connectionless UDP protocol for remote logging and therefore can’t
“tunnel” its messages though stunnel or ssh, syslog is inherently less securable than
Syslog-ng.
If your log messages aren’t sensitive (at least the ones you send to a remote logger),
then there’s still the problem of Denial of Service and message forgery attacks. If you
invoke syslogd with the -r flag, it will accept all remote messages without performing
any checks whatsoever on the validity of the messages themselves or on their senders.
Again, this risk is most effectively mitigated by using Syslog-ng.
But one tool you can use with syslog to partially mitigate the risk of invalid remote
messages is TCPwrappers. Specifically, TCPwrappers’ “hosts access” authentication
mechanism provides a simple means of defining which hosts may connect and via
which protocols they may connect to your log server. Hosts-access authentication is
easily tricked by source-IP-spoofing (especially since syslog transactions are strictly
one way), but it’s better than nothing, and it’s probably sufficient to prevent mischie-
vous but lazy attackers from interfering with syslog.
If you’re willing to bet that it is, obtain and install TCPwrappers and refer to its
hosts_access(5) manpage for details. Note that despite its name, TCPwrappers’ hosts
access can be used to control UDP-based applications.
Syslog-ng
As useful and ubiquitous as syslog is, it’s beginning to show its age. Modern Unix
and Unix-like systems are considerably more complex than they were when syslog
was invented, and they have outgrown both syslog’s limited facilities and its primi-
tive network-forwarding functionality.
Syslog-ng (“syslog new generation”) is an attempt to increase syslog’s flexibility by
adding better message filtering, better forwarding, and eventually (though not quite
yet), message integrity and encryption. In addition, Syslog-ng supports remote log-
ging over both the TCP and UDP protocols. Syslog-ng is the brainchild of and is pri-
marily developed and maintained by Balazs (“Bazsi”) Scheidler.
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
334
|
Chapter 10: System Log Management and Monitoring
Lest you think Syslog-ng is untested or untrusted, it’s already been incorporated into
Debian GNU/Linux 2.2 “Potato” as a binary package (in the “admin” section). Sys-
log-ng is in fact both stable and popular. Furthermore, even though its advanced
security features are still works in progress, Syslog-ng can be used in conjunction
with TCP “tunneling” tools such as stunnel and ssh to authenticate or encrypt log
messages sent to remote hosts.
Compiling and Installing Syslog-ng from Source Code
The non-Debian users among you may not wish to wait for your distribution of
choice to follow suit with its own binary package of Syslog-ng. Let’s start, then, with
a brief description of how to compile and install Syslog-ng from source.
First, you need to obtain the latest Syslog-ng source code. As of this writing, there are
two concurrent branches of Syslog-ng development. Syslog-ng Version 1.4 is the sta-
ble branch, so I recommend you use the latest release of Syslog-ng 1.4.
Version 1.5 is the experimental branch, and although it’s officially disclaimed as
unstable, some people use it on production systems due to its new “field expansion”
feature, which allows you to write messages in your own custom formats. If you
decide this functionality is worth the risk of running experimental code, be sure to
subscribe to the Syslog-ng mailing list (see http://lists.balabit.hu/mailman/listinfo/
syslog-ng to subscribe).
Speaking of which, it probably behooves you to browse the archives of this mailing
list periodically even if you stick to the stable branch of Syslog-ng. Bazsi Scheidler
tends to prioritize bug fixes over documentation, so Syslog-ng documentation tends
to be incomplete and even out of date.
But Bazsi not only maintains the mailing list, he also very actively participates in it,
as do other very knowledgeable and helpful Syslog-ng users and contributors. Thus
the mailing list is an excellent source of Syslog-ng assistance. Before posting a ques-
tion, you may wish to see if anyone else has asked it first. See the Syslog-ng mailing
list archives at http://lists.balabit.hu/pipermail/syslog-ng/.
Syslog-ng can be downloaded either directly from Bazsi Scheidler’s web site at http://
www.balabit.hu or from its Freshmeat project site at http://freshmeat.net/projects/
syslog-ng/. In addition to Syslog-ng itself, you’ll need the source code for libol, Sys-
log-ng’s support library.
Unzip and untar both archives. Compile and install libol first, then Syslog-ng. For
both packages the procedure is the same:
1. Change the working directory to the source’s root:
cd packagename
2. Run the source’s configure script:
./configure
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
Syslog-ng
|
335
3. Build the package:
./make
4. Install the package:
./make install
This will install everything in the default locations, which for both libol and Sylog-ng
are subdirectories of /usr/local (e.g., /usr/local/lib, /usr/local/sbin, etc.). If you wish to
install either package somewhere else—e.g., your home directory (which is not a bad
place to test new software)—then in Step 2, pass that directory to configure with the
--prefix= flag as in Example 10-11.
After both libol and Syslog-ng have been compiled and installed, you need to set up a
few things in Syslog-ng’s operating environment. First, create the directory /etc/
syslog-ng. Next, copy one or more of the example syslog-ng.conf files into this direc-
tory from the source-distribution’s contrib/ and doc/ directories (unless you intend to
create your syslog-ng.conf completely from scratch).
Finally, you need to create a startup script for syslog-ng in /etc/init.d and symbolic
links to it in the appropriate runlevel directories (for most Linux distributions, /etc/
rc2.d, /etc/rc3.d, and /etc/rc5.d). Sample syslog-ng init scripts for several Linux distri-
butions are provided in the Syslog-ng source distribution’s contrib/ directory. If you
don’t find one there that works for you, it’s a simple matter to make a copy of your
old syslog or sysklogd init-script and hack it to start syslog-ng rather than syslogd.
Running syslog-ng
It’s premature to start syslog-ng before you’ve created a configuration file. However,
since syslog-ng has so few startup flags, I’ll mention them in brief and spend the
remainder of this section on syslog-ng.conf use.
The only flags supported by the syslog-ng daemon are listed in Table 10-6.
Example 10-11. Telling configure where to install the package
mylinuxbox:/usr/src/libol-0.2.23# ./configure --prefix=/your/dir/here
Table 10-6. syslog-ng startup flags
Flag
Description
-d
Print debugging messages
-v
Print even more debugging messages
-f filename
Use filename as the configuration file (default=/etc/syslog-ng/syslog-ng.conf)
-V
Print version number
-p pidfilename
Name process-ID-file pidfilename (default=/var/run/syslog-ng.pid)
This is the Title of the Book, eMatter Edition
Copyright © 2002 O’Reilly & Associates, Inc. All rights reserved.
336