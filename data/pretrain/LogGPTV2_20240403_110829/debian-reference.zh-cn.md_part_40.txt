回环设备或设备映射设备上使用类似的操作，在这些设备按第 9.7.3 节挂载后,你能够使用parted(8)或fdisk(8)
对这个磁盘映像”disk.img”进行分区，能够使用mkfs.ext4(8),mkswap(8)在上面创建文件系统等.
Debian参考手册 163/233
9.7.6 制作 ISO9660 镜像文件
” 源目录”下的目录树可以通过如下所示的cdrkit提供的genisoimage(1)命令来制作ISO9660镜像文件，”cd.iso”。
# genisoimage -r -J -T -V volume_id -o cd.iso source_directory
类似的，可引导的ISO9660镜像文件，”cdboot.iso”,能够从debian-installer类似目录树”source_directory”
制作，方式如下。
# genisoimage -r -o cdboot.iso -V volume_id \
-b isolinux/isolinux.bin -c isolinux/boot.cat \
-no-emul-boot -boot-load-size 4 -boot-info-table source_directory
这里的Isolinuxbootloader(参见第 3.1.2 节)是用于启动的.
按下面的方式，你可以直接从光驱设备计算md5sum值，并制作ISO9660镜像。
$ isoinfo -d -i /dev/cdrom
CD-ROM is in ISO 9660 format
...
Logical block size is: 2048
Volume size is: 23150592
...
# dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror | md5sum
# dd if=/dev/cdrom bs=2048 count=23150592 conv=notrunc,noerror > cd.iso
警告
为了得到正确结果，你必须小心避免LinuxISO9600文件系统预读bug。
9.7.7 直接写入文件到 CD/DVD-R/RW
提示
对于由cdrkit提供的wodim(1)来讲，DVD仅仅是一个大的CD。
你能够通过如下所示的命令找到可用的设备。
# wodim --devices
然后将空的CD-R插入CD驱动器并且把ISO9660镜像文件，”cd.iso”写入到设备中，例如用如下所示的wodim(1)
将数据写入到”/dev/hda”设备。
# wodim -v -eject dev=/dev/hda cd.iso
如果用CD-RW代替CD-R，用如下所示的命令来替代。
# wodim -v -eject blank=fast dev=/dev/hda cd.iso
提示
如果你的桌面系统自动挂载CDs，在使用wodim(1)之前在终端里面用”sudo umount /dev/hda”卸载它。
Debian参考手册 164/233
9.7.8 挂载 ISO9660 镜像文件
如果”cd.iso”包含一个ISO9660镜像,下面的命令手工挂载这个文件到”/cdrom”.
# mount -t iso9660 -o ro,loop cd.iso /cdrom
提示
现代桌面系统能够自动挂载可移动介质，如按ISO9660格式化的CD(参见第 10.1.7 节).
9.8 二进制数据
这里，我们讨论直接操作存储介质上的二进制数据。
9.8.1 查看和编辑二进制数据
最基础的查看二进制数据的方法是使用”od -t x1”命令。
软件包 流行度 大小 说明
coreutils V:883,I:999 18306 基础软件包，有od(1)来导出文件(HEX,ASCII,OCTAL,…)
bsdmainutils V:13,I:345 17 工具软件包，有hd(1)来导出文件(HEX,ASCII,OCTAL,…)
hexedit V:0,I:9 73 二进制浏览和编辑器(HEX,ASCII)
bless V:0,I:2 924 全功能的十六进制编辑器(GNOME)
okteta V:1,I:12 1584 全功能的十六进制编辑器(KDE4)
ncurses-hexedit
V:0,I:1 130 二进制浏览和编辑器(HEX,ASCII,EBCDIC)
beav V:0,I:0 137 二进制浏览和编辑器(HEX,ASCII,EBCDIC,OCTAL,...)
Table9.21: 查看和修改二进制数据的软件包列表
提示
HEX是十六进制英文hexadecimal首字母缩略词，基数radix是16。OCTAL是八进制英文octal首字母缩略词，基
数 radix是 8。ASCII 是美国信息交换标准代码 American Standard Code for Information Interchange 的英文缩写，
即正常的英语文本代码。EBCDIC 是扩展二进制编码十进制交换码 Extended Binary Coded Decimal Interchange
Code的英文缩写，在IBM大型机操作系统上使用。
9.8.2 不挂载磁盘操作文件
有工具可以在没有挂载磁盘的情况下读写文件。
软件包 流行度 大小 说明
mtools V:8,I:64 390 不挂载磁盘的MSDOS文件工具
hfsutils V:0,I:5 184 不挂载磁盘的HFS和HFS+文件工具
Table9.22: 不挂载磁盘操作文件的软件包列表
Debian参考手册 165/233
9.8.3 数据冗余
Linux内核所提供的RAID软件系统提供内核文件系统级别的数据冗余来实现高水平的存储可靠性。
有在应用程序级别增加数据冗余来实现高水平存储可靠性的工具。
软件包 流行度 大小 说明
par2 V:9,I:89 268 奇偶校验档案卷设置，用于检查和修复文件
dvdisaster V:0,I:1 1422 CD/DVD媒体数据损失/划伤/老化的保护
dvbackup V:0,I:0 413 使用MiniDV便携式摄像机的备份工具(提供rsbep(1))
Table9.23: 向文件添加数据冗余的工具列表
9.8.4 数据文件恢复和诊断分析
有用于数据文件恢复和诊断分析的工具。
软件包 流行度 大小 说明
testdisk V:2,I:29 1413 分区扫描和磁盘恢复的实用程序
通过查找幻数magic字节来恢复文件的工具（译注：请manfile
magicrescue V:0,I:2 255
来了解幻数）
scalpel V:0,I:3 88 简洁、高性能的文件提取
myrescue V:0,I:2 83 恢复损坏硬盘中的数据
extundelete V:0,I:8 147 恢复删除ext3/4文件系统上的文件的实用程序
ext4magic V:0,I:4 233 恢复删除ext3/4文件系统上的文件的实用程序
ext3grep V:0,I:2 293 帮助恢复ext3文件系统上删除的文件的工具
scrounge-ntfs V:0,I:2 50 NTFS文件系统的数据恢复程序
gzrt V:0,I:0 33 gzip恢复工具包
sleuthkit V:3,I:24 1611 诊断分析工具(Sleuthkit)
autopsy V:0,I:1 1027 SleuthKit的图形化界面
foremost V:0,I:5 102 恢复数据的诊断程序
guymager V:0,I:0 1021 基于Qt的诊断图像工具
dcfldd V:0,I:3 114 增强版的dd，用于诊断和安全
Table9.24: 数据文件恢复和诊断分析软件包列表
提示
在e2fsprogs软件包里有debugfs(8)命令，使用该命令里的list_deleted_inodes和undel指令，你能够
恢复ext2文件系统上删除的文件。
9.8.5 把大文件分成多个小文件
当一个文件太大而不能备份的时候，你应该在备份之前先把它分割为多个小于2000MiB的小文件，稍后再把这些小文
件合并为初始的文件。
$ split -b 2000m large_file
$ cat x* >large_file
小心
为了防止文件名冲突，请确保没有任何以”x”开头的文件。
Debian参考手册 166/233
9.8.6 清空文件内容
为了清除诸如日志文件之类的文件的内容，不要用rm(1)命令去删除文件然后创建新的空文件，因为这个文件可能在
命令执行的期间还在被使用。以下是清除文件内容的正确方法。
$ :>file_to_be_cleared
9.8.7 样子文件
下面的命令创建样子文件或空文件。
$ dd if=/dev/zero of=5kb.file bs=1k count=5
$ dd if=/dev/urandom of=7mb.file bs=1M count=7
$ touch zero.file
$ : > alwayszero.file
你将发现下列文件。
• ”5kb.file”是5KB的全零数据。
• ”7mb.file”是7MB随机数据。
• ”zero.file”也许是一个0字节的文件。如果这个文件之前就存在，则它的mtime会被更新，而它的内容和长度
保持不变。
• ”alwayszero.file”一定是一个0字节文件。如果这个文件之前存在，则它的mtime会被更新，而它的内容会被
清零。
9.8.8 擦除整块硬盘
有几种方法来完全擦除设备上整个硬盘上数据，比如说，在”/dev/sda”上的USB内存盘。
小心
在执行这里的命令之前，你应该用mount(8)命令来查看USB记忆棒的挂载位置。”/dev/sda”指向的设备
可能是装有整个系统的SCSI硬盘或者serial-ATA硬盘。
如下所示是通过数据归0的方式来擦除硬盘上所有数据的。
# dd if=/dev/zero of=/dev/sda
如下是用随机数据重写的方式来擦除所有数据的。
# dd if=/dev/urandom of=/dev/sda
如下是用随机数据重写的方式来高效擦除所有数据。
# shred -v -n 1 /dev/sda
你或者可以使用badblocks(8)加上-t random选项。
因为dd(1)命令在许多可引导的LinuxCDs(例如Debian安装光盘)上的shell环境下都是可用的，你能够在装有系统的
硬盘上，例如”/dev/hda”,”/dev/sda”等等设备上运行擦除命令来完全清除已经安装的系统。
Debian参考手册 167/233
9.8.9 擦除硬盘上的未使用的区域
硬盘（或USB记忆棒）上未使用的区域，例如“/dev/sdb1”可能仍然包含可被擦除的数据，因为他们本身只是解
除了从文件系统的链接，这些可以通过重写来清除。
# mount -t auto /dev/sdb1 /mnt/foo
# cd /mnt/foo
# dd if=/dev/zero of=junk
dd: writing to ‘junk’: No space left on device
...
# sync
# umount /dev/sdb1
警告
这对您的USB记忆棒来说通常已经足够好了，但这还不完美。大部分已擦除的文件名和它们的属性可能隐
藏并留在文件系统中。
9.8.10 恢复已经删除但仍然被打开的文件
即使你不小心删除了某个文件，只要这个文件仍然被一些应用程序所使用（读或者写），恢复此文件是可能的。
尝试下列例子
$ echo foo > bar
$ less bar
$ ps aux | grep ’ less[ ]’
bozo 4775 0.0 0.0 92200 884 pts/8 S+ 00:18 0:00 less bar
$ rm bar
$ ls -l /proc/4775/fd | grep bar
lr-x------ 1 bozo bozo 64 2008-05-09 00:19 4 -> /home/bozo/bar (deleted)
$ cat /proc/4775/fd/4 >bar
$ ls -l
-rw-r--r-- 1 bozo bozo 4 2008-05-09 00:25 bar
$ cat bar
foo
当你安装了lsof软件包的时候，在另外一个终端执行如下命令。
$ ls -li bar
2228329 -rw-r--r-- 1 bozo bozo 4 2008-05-11 11:02 bar
$ lsof |grep bar|grep less
less 4775 bozo 4r REG 8,3 4 2228329 /home/bozo/bar
$ rm bar
$ lsof |grep bar|grep less