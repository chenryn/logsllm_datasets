server to the client. First, we compute the shortest possible
extension:
extF = min
D(A, F, B)
avg[S(A, F ), S(F, B)]
,
(8)
(cid:26)
(cid:27)
where D(A, F, B) denotes the great circle distance D from
a node A over the forbidden area to the next hop B. As
we cannot know the exact propagation speed for the ex-
tension to the forbidden area F and nodes A, B, we ap-
proximate the extension using the average empirical speed
avg[S(A, F ), S(F, B)] of all RTT measurements between the
respective countries that summarizes the propagation speeds to
S(A, F ) and from S(F, B) the forbidden area. If for example
the shortest extension takes place between an entry relay in NL
and a middle relay in FR with UK as forbidden area, then we
use the average propagation speeds of NL→UK and UK→FR
and apply it to the extension distance. Accordingly, we receive
an empirical result for the extension time to F on the shortest
possible trip for a circuit. We use the approximate extension
8
time to now deﬁne the decision threshold:
Rest = extF + est(c, s \ extF ) + est(e, s),
(9)
where extF is the shortest possible extension (Eq. 8), est(c, s\
extF ) are the estimates of all hops except those involved in the
extension, and est(s, e) summarizes all estimates for hops on
the way back from the server to the client. In other words, we
take a detour to the forbidden area on the trip from the client
to the server and have two nodes of the circuit involved in
this extension. These two nodes represent the fastest possible
option to reach the forbidden area, whereas all other nodes use
direct connections. Consequently, we make lookups on the hop
estimates for all pairs of nodes not involved in the extension
to receive the transmission time from the client to the server.
On the way back, we follow the asymmetry assumption and
now use the estimates for lookups of all hops in the circuit.
We receive the transmission time from server to client and can
add up all components to the decision threshold Rest.
In the decision process, we relate the measured time Re2e
to our estimated time Rest, which we deﬁne as our time
ratio ∆:
∆ =
Rest
Re2e
.
(10)
The reject/accept decision can now be performed directly
against this time ratio. A time ratio of 1 marks the equality
of our estimated threshold and the round-trip measurement. A
lower ∆ is calculated when the measured RTT exceeds the
estimation and indicates insecure circuits. On the other hand,
a higher ∆ results from measurements faster than the estimate.
To account for a trade-off between security and performance,
we can shift the decision threshold to either end. This allows
to establish higher security guarantees or to keep more circuits
for the sake of performance. Furthermore, we follow the lower
bound threshold of 2/3 c for use cases where provable avoidance
is preferred over an empirical decision.
3) System Components: We build our empirical avoidance
concept from the above decision mechanism and apply the
design goals and solutions introduced with the assessment
of challenges in Section III. Our avoidance concept consists
of two organizational units,
i. e., on the network side we
conduct distributed measurements as an information input for
the avoidance decision. This includes the ICMP reference
measurements for verifying relay locations through trilateration
(§III-B1), and the TCP measurements for the computation
of pairwise hop estimates (Eq. 6). On the client side, we
conduct the circuit measurements where repeated TCP probes
through an established circuit reveal the RTT Re2e of the
connection. We compare this measured RTT with the empirical
threshold Rest, which leads to the time ratio between the
measured and predicted transmission time (Eq. 10). The ﬁnal
avoidance decision uses this time ratio to rate the current
circuit and, eventually, reject or accept its usage. All network
side measurements are conducted ofﬂine; we discuss realistic
ways to realize this following the example of Tor’s consensus
along with the proposal of the prototype (§V). Client-side
measurements must be conducted before an established circuit
transmits user data.
Fig. 2. High level overview of the empirical avoidance concept. Network-side
components provide ofﬂine information, client-side computes the time ratio
from the measured time Re2e and the threshold Rest.
B. Experimental Evaluation
We compare our empirical avoidance concept with two
other approaches that we distinguish by their consideration
of the design challenges in the classes of network diversity
and ground truth (a detailed evaluation of the requirements
of a real-world deployment follows in § V). We address the
original version of DeTor that assumes symmetric paths and
static transmission characteristics (Eq. 3); we refer to this as
symmetric avoidance concept. Furthermore, we compare this
to an updated version of DeTor, referred to as asymmetric
concept, which functions in the exact same way but assumes
asymmetric routes to correct the logical ﬂaw of DeTor (Eq. 4).
Both static concepts use unveriﬁed GeoIP information. Fi-
nally, we introduce a novel empirical concept that uses hop-
individual estimates and veriﬁed GeoIP locations. For the sake
of comparability, we apply the decision mechanisms to full
circuits from client to server that were measured by active
TCP probing. We are interested in the detection capabilities of
two static (symmetric, asymmetric) and one novel empirical
avoidance concept. Our evaluation ﬁrst focuses on the general
performance concerning the number of rejected circuits and
the avoided advertised bandwidth.
1) Measurement Setup: Our experiments are based upon
empirical RTT measurements from the live Tor network, i. e.,
we use actual transmission characteristics for the computation
of hop estimates and use the RTTs of full circuits to simulate
avoidance decisions for all three concepts.
Test Set. We perform RTT measurements from eight server in-
stances (CA,NL,US,IN,SG,GB,DE,BR) that send 20 TCP
ping messages of 100 B length through an established Tor
circuit. After each message, we wait 1 s until the next 100 B
are sent to avoid any interaction. In case a reply was not
received within the timeout limit of 2 min, we assume a failed
connection. From 1,670 entries, 2,712 middles, and 735 exits,
we build a total of 70,081 individual circuits and perform
275,509 measurements; the selection of relays is randomized
and biased towards higher bandwidth nodes that provide
12.564 MB/s advertised bandwidth on average (16.513 MB/s
in entries, 2.735 MB/s in middles, 18.445 MB/s in exits).
To ensure that our artiﬁcial circuits resemble similar
transmission characteristics as weighted standard circuits, we
build 135,924 additional weighted circuits using the NEWNYM
command from the same remote server instances and compare
their characteristics to those of the artiﬁcial circuits. The results
of a Kolmogorov-Smirnov (KS) test of the probability distri-
butions of both circuit lengths show that artiﬁcial (NA,EU),
(NA,NA) circuits tend to be shorter than the measured Tor
standard circuits, while we ﬁnd a higher similarity for the other
combinations (EU,EU), (EU,NA), (EU,AS), (NA,AS).
Simulation Methodology. We use the RTT measurements
of all artiﬁcial circuits and compare the detection mech-
anisms of
the three avoidance concepts. For each cir-
cuit, we iterate the top nine relay-providing countries
(DE,US,FR,UA,RU,NL,GB,SE,CA) as hypothetical forbidden ar-
eas, using the following simulation methodology:
1) For all circuits, we identify the shortest possible extension
to the current forbidden country F , compute the extension
time, and identify its position in the circuit.
2) For the empirical approach, we perform a lookup on
the estimated RTT for each hop in the current circuit
and approximate the transmission time for the extension
hop to the forbidden area F . Using this information, we
compute the RTT threshold Rest (Eq. 9) and the time
ratio ∆ (Eq. 10) of the circuit.
3) For the symmetric and asymmetric decision, we follow
the detection mechanism proposed in DeTor and compute
the time consumption of each hop using the great circle
distance between relays and a static speed of 2/3c. We
estimate the RTT threshold for a circuit following the
deﬁnitions of Eq. 2 for the symmetric approach and Eq. 4
for the asymmetric approach. Again, we derive the time
ratio ∆ for the circuit.
4) We apply a decision threshold of ∆ ≥ 1 to accept a circuit
and handle all other time ratios as a reject decision.
C. Results
To evaluate our results, we analyze the relative number of
circuits an avoidance concept rejects for a forbidden area F .
Furthermore, we estimate the loss in advertised bandwidth that
results from the avoidance decision.
1) Detection Capabilities: The reject and accept rates of
a system indicate the restrictions in the choice of circuits
when avoiding a speciﬁc geographical area. Table V (top)
summarizes the reject rates, i. e., the relative number of circuits
that were rejected because the measured RTT exceeded the
respective threshold. When comparing the symmetric and
asymmetric approaches, we see only minor differences for
forbidden countries within Europe (DE,FR,UA,NL,GB,SE),
but a signiﬁcantly increased reject rate for the asymmetric
approach for US and CA. This is caused by the higher extension
distance to North America, i. e., remote forbidden areas empha-
size the overestimation of DeTor’s symmetric approach (Eq. 5).
In comparison, with the hop-individual decision we reject
overall approximately 22.64 % fewer circuits, as a result of the
individual consideration of hop RTTs to be less conservative
with the comparison threshold.
2) Performance Impairments: Being too conservative with
the reject decision can cause severe performance impairments,
especially in cases where large user groups decide to circum-
vent a certain area. The empirical approach manages to reject
fewer circuits and can maintain on average 27 MB/s more
(advertised) bandwidth per circuit. Table V (bottom) summa-
rizes the relative bandwidth loss in a worst-case scenario, in
which 100 % of users avoid a certain country. Example: As
9
Distributed MeasurementsICMP Relay VeriﬁcationTCP Hop EstimationCircuit EvaluationCompute Time RatioCircuit MeasurementEXMCDistribute as ConsensusICMP: Update Outliers (§IV-B)TCP  : Periodic Update (§V-A)Decide per CircuitCompute Time Delta(Equation 10)Active TCP ProbingClient SideNetwork SideRepeatedly send 100B TCP packetfrom client to server through circuit.Avoidance DecisionSTABLE V.
LOSS [%] OF AVAILABLE CIRCUITS AND BANDWIDTH
Relative Reject
Circuits
Bandwidth
System
Symmetric
Asymmetric
Empirical
Symmetric
Asymmetric
Empirical
DE
89.80
90.22
70.86
85.73
86.10
74.21
US
61.08
73.39
59.78
60.16
73.05
63.01
FR
93.64
93.75
76.22
91.66
91.74
76.03
UA
88.71
90.83
48.52
85.41
87.09
42.80
RU
88.02
86.46
55.83
83.58
84.86
51.47
NL
92.66
92.82
79.10
88.84
88.99
79.57
GB
94.25
94.35
72.51
91.79
91.93
65.24
SE
92.27
92.53
60.35
89.06
89.38
56.39
CA
65.99
79.02
-
66.06
77.54
-
Average
85.17
88.04
65.40
82.48
85.63
63.59
we know from the usage statistics [2], approximately 45 %
of Tor’s advertised bandwidth is consumed on a daily basis.
If we take the 13 % average daily users of the United States
as an example [3] and assume UA as the forbidden region,
this translates into an overall load factor of 50.56 % for the
individual decision (56.1 % for the symmetric, 56.32 % for
the asymmetric decision). Even though our results predict
a worst-case scenario, it is likely that a majority of users
is motivated to avoid the same country due to censorship
activities. Losing bandwidth in the range of 85 % brings us
close to an overloaded situation and is unacceptable.
3) Collateral Damage: Conservative reject decisions not
only result in performance impairments for a user, but can
also cause collateral damage to the entire network. While
highly sensitive use cases should maintain a restrictive lower
bound threshold, less demanding cases allow for a tradeoff
between detection capability and performance. We can adjust
the security of the individual implementation by reducing the
original decision threshold of 1 for lower time ratios. This
increases the chances of routing through the forbidden area,
but helps to reduce the reject rates drastically. We have a close
look on the potential of using alternative decision threshold in
the prototype evaluation (§V).
Summary. Utilizing an empirical decision allows to incor-
porate hop-individual timings. This reduces the error of a
static lower bound threshold that can only represent best
case propagation speeds and neglects the varying transmission
characteristics of real-world connections. Using an empirical
threshold allows to tradeoff performance and security while
reducing the collateral damage through overly restrictive deci-
sions. Our results indicate that such collateral damage has an
enormous impact on Tor’s performance that affects all users
and, therefore, cannot be an acceptable trade for security.
V. PROTOTYPE IMPLEMENTATION: TrilateraTor
TrilateraTor is the prototype implementation of an empiri-
cal avoidance system that takes all three classes of challenges
(§III) into account. In particular, we extend the empirical
avoidance concept (§IV) by features that satisfy the conditions
of a practical deployment scenario. In the following, we detail
the system model, improve the security of the circuit RTT
measurement technique, and provide an experimental analysis
of the prototype’s performance. Finally, we discuss the possible
ways to realize the deployment of TrilateraTor.
A. System Model
TrilateraTor’s geographical avoidance consists of the same
organizationl units as the previously introduced empirical
concept (cf. Fig. 2). The network-side measurements are
Fig. 3. When building a new circuit, the client performs three handshakes
with the entry, middle, and exit relay of the circuit. We are interested in the
offset between the create and finish messages (red bar) that summarizes
the RTT for a message to be transmitted from client to exit and back.
conducted in case of changes in the consensus (update ICMP
veriﬁcation) or on a periodical basis (TCP hop estimates). We
discuss options to share the information of the Distributed
Measurements among Tor users in §VI-A and suggest an
infrastructure with Tor’s bandwidth authority. The ﬁrst adap-
tion to a real-world deployment takes place on the client side,
where we apply a novel measurement technique to recover the
end-to-end RTT Re2e of a circuit. In contrast to the generic
empirical concept, where we sent TCP ping probes to the
entire connection, we now limit our measurements to the Tor
nodes in the circuit, i. e., the connection from the client to the
exit relay. Again, we compare the measured RTT Re2e to the
predicted time Rest and derive the time ratio ∆. The time ratio