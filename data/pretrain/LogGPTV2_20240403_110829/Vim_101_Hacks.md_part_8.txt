directory, window size customization, mksession will save all those things.
To open a saved session, do the following.
$ vim -S Session.vim
Session Command Description
:mksession Creates a new session with the default file name
Session.vim in the current working directory.
:mksession filename Saves the session in the specified filename in the
current working directory.
$ vim –S Opens the default saved session. i.e., Opens
Session.vim in the current directory.
$ vim –S filename Opens a session using the session filename in the
current directory.
:source Session.vim applies all session settings from a particular
session file after you are already in the Vim
editor
115
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Hack 78. Execute Unix Shell Command Inside Vim
To execute a Unix shell command from inside the Vim editor, do the
following.
:!unix-command
:!ls
:!date
You can also pass the current file name as a parameter to the Unix command
using the following methods.
Let us assume that you are running all the following commands when you
have /etc/sysctl.conf file open in the Vim editor:
Command Description
:!echo % % will pass the current file name to the Unix
command.
sysctl.conf
For example, :!ls –l % -- This will execute ls –l on
the current file in Vim editor
:!echo %:p %:p will pass the full path name of the file to the
Unix command
/etc/sysctl.conf
:!echo %:e %:e will pass the extension of the file to the Unix
command
conf
116
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Hack 79. Review the Differences between Files using
Vimdiff
Similar to the Unix diff command, vimdiff is used to show the difference
between files. Unlike the Unix diff command, vimdiff is more colorful and
user-friendly.
Unix diff command text output:
$ diff employee.txt new-employee.txt
1c1
 100 Jason Smith Senior Developer
4a5,7
> 500 King James Manager
> 600 Raj Patel Team Lead
> 700 Emily Jacob HR
Vimdiff visual output:
In the following example, it is very easy to visually see what was changed and
added between the two files.
$ vimdiff employee.txt new-employee.txt
Fig: vimdiff showing visual diff
117
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Vimdiff Command Description
$ vimdiff file1 file2 Show the diff using a vertical window split
$ vim –d file1 file2
$ vimdiff –o file1 file2 Show the diff using a horizontal window split
$ vim –d –o file1 file2
$ vim file1 If you are already inside a file, use :diffsplit to
launch horizontal diff
:diffsplit file2
$ vim file1 If you are already inside a file, use :vert
diffsplit to launch vertical diff
:vert diffsplit file2
[c Go to the next change inside vimdiff
]c Go to the previous change inside vimdiff
Hack 80. Vim Map Command
Using the Vim Map feature, you can map a key to a particular job that you
perform repeatedly.
118
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Create a Map in Vim
In the following example, anytime you type :write , it will compile the
current open *.c program file and execute the ./a.out, if the compilation is
successful.
:map :write :!cc % && ./a.out
Fig: Create a map
• :map – Vim command to create the map
• :write – Name of the map (map-name)
• :!cc % & ./a.out – The command that should be executed when the
map-name is called.
Execute the map
To execute the map, call the name of the map. In the example shown above,
:write is the name of the map.
119
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
When you type :write, this will be replaced with :!cc % & ./a.out and then
Vim will use $SHELL to compile the C program and execute the a.out.
Additional Map Examples
You can map the :w command to the :up command as shown below.
map :w :up
You can map the :q command to :confirm q as shown below.
:map :q :confirm q
Display Defined maps
Type :map to display all the defined maps as shown below.
:map
:write :!cc % & ./a.out
120
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Hack 81. Make Bash Shell work like Vim Editor
Once you’ve become familiar with Vim shortcuts, you may want to use the
same from your Unix command prompt.
By default the bash command line editing is done with emacs keystrokes.
To use Vim keystrokes for command line editing, set the following.
$ set -o vi
After you perform set -o vi , bash will act virtually like it is in insert mode.
Press ESC to go to command mode. From here you can execute most Vi
commands to perform command line editing.
Make this change permanent by setting this option in your .bashrc.
$ cat ~/.bashrc
set -o vi
Execute the following to disable Vim mode and go back to emacs mode.
$ set -o emacs
121
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Hack 82. Set Vim Options
There are lots of set options available in Vim editor. The following are some
of the key options.
Option Description
:set nu Show line numbers
:set ic Ignore case when searching
:set ro Disable writing of files by Vim
:set wm=n Set right-most margin column, after which Vim will
wrap words as best it can
:set ai Turn on auto indentation
:set all Display all settings of your Vim session
:set list Displays invisible characters. For example, ^I for
tab, $ for end of line.
:set hlsearch Highlight matched patterns
:set incsearch Activates Incremental search mode
Hack 83. Unset Vim Options
Add the prefix "no" before an option to unset it. Do the following to turn off a
particular option.
122
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
:set no
To display line numbers,
:set nu
To unset the display line number option.
:set nonu
Hack 84. Default registers and their uses
Anytime the text is deleted, copied, or substituted, it will be available in a
register which you can access.
There are default registers that store information as explained below.
Register Name Description
% Name of the current file
# Name of the alternate file
: Most recent executed command line
/ Last search pattern
“ Last used registers
123
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
To paste the content from the register, execute the following.
“p
For example, to paste the name of the file as text inside the file, do the
following in normal mode.
“%p
Hack 85. Numeric Registers and Recovering Deletes
The following are a few important points about registers.
• There are 10 registers available that are numbered from 0 through 9
• Most recent yank (copy) is stored in register 0
• Most recent deletion is stored in register 1
With each deletion, Vim shifts the previous content from 1 to 2, 2 to 3 and so
on.
Hack 86. Vim Directory Operation
You can use Vim editor as a file manager to navigate the filesystem and
perform various operations as explained in this hack.
# vim DIRNAME
124
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
The following command will show a list of all directories and files in the /etc/
directory inside vim.
# vim /etc/
" =====================================================
" Netrw Directory Listing (netrw v125)
" /etc
" Sorted by name
" Sort sequence:
" Quick Help:
“ =====================================================
../
NetworkManager/
X11/
acpi/
alchemist/
alsa/
alternatives/
audisp/
audit/
...
You can perform the following actions within the Vim file explorer.
Key Description
 Open the file under the cursor
Go to the directory under the cursor
D Delete the file under the cursor
R Rename the file under the cursor
X Execute the file under the cursor
125
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
o Open a horizontal split window
You can also launch the Vim file explorer from within Vim using any one of
the following methods.
Key Description
:Ex (mnemonic: Open current directory in Vim file explorer
Explore)
:Ex ~/etc/ Open a specific directory in Vim file explorer
:Sex Open current directory in Vim file explorer in
horizontal split windows
:Vex Open current directory in Vim file explorer in
Vertical split windows
:Tex Open current directory in Vim explorer in a new
Tab
126
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Chapter 13: Power of Search
Hack 87. Navigation by Search
Execute /search-term to search for the first occurrence of keyword from the
current position.
Navigation Key Description
/ Search forward (also used as Find next)
? Search backward (also used as Find previous)
When you do /search-term , it will search for the first occurrence of search-
term from the current position. After that, you only need to type n or N to
search for the same search-term again. These are similar to ‘Find Next’ and
‘Find Previous’ in many applications.
Navigation Key Description
n Go to the next occurrence (Find Next)
N Go to the previous occurrence (Find Previous)
// (or) ?? Repeat previous forward or reverse search
127
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Hack 88. Go to Next / Previous Occurrence of the
Current Word
Sometimes you may want to search for the next occurrences of the keyword
where your cursor is located.
Navigation Key Description
* Go to the next occurrence of current word under
the cursor.
# Go to the previous occurrence of current word
under the cursor.
Tip: This is a little different from the previous hack. You don’t need to first
search for the word and then do n or N. Instead you can type * or # without
first searching for the word where the cursor is located.
You can also do a partial search for the word that is currently under the
cursor.
Navigation Key Description
g* Go to the partial match of next occurrence of
current word under the cursor.
For example, if current word is ‘top’, g* will also
match next ‘stop’, ‘laptop’.
g# Go to the partial match of previous occurrence of
current word under the cursor.
128
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
To list all the occurrences of the word under the cursor, use [I (upper-case i)
[I
Hack 89. Search for a Character within a Line
Use the following keys to navigate within a line.
Navigation
Description
Key
fX Go to character X within a line in forward direction
FX Go to character X within a line in reverse direction
tX Go to one character before character X within a line in
forward direction
TX Go to one character before character X within a line in
forward direction
; Repeat latest f, F, t or T in forward direction
, Repeat latest f, F, t or T in backward direction
Hack 90. 12 Powerful Find and Replace Examples
In this hack, let us review how to perform both basic and advanced text and
pattern substitution features in the Vim Editor. These features are explained
using 12 very practical and powerful text substitution examples.
Syntax of the text substitution command inside the Vim editor:
129
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
:[range]s[ubstitute]/{pattern}/{string}/[flags] [count]
The following are three possible substitution flags.
• [c] Confirm each substitution.
• [g] Replace all occurrences in the line.
• [i] Ignore case for the pattern.
Example 1: Substitute all occurrences of a text with another text in
the whole file
This is a very common usage of the text substitution feature inside Vim. When
you want a specific text to be replaced with another text everywhere in the
entire file then you can use the following sequence.
:%s/old-text/new-text/g
• %s – specifies all lines. Specifying the range as ‘%’ means do
substitution in the entire file.
• g – specifies all occurrences in the line. If this ‘g’ flag is not used then
only first occurrence in the line only will be substituted.
Example 2: Substitution of a text with another text within a single
line
Lack of range specification means do substitution on the current line only.
With the ‘i’ flag, you specify case insensitive searching.
:s/helo/Hello/gi
130
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Example 3. Substitution of a text with another text within a range
of lines