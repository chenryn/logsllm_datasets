你当然也可以用白板。不过那多少有点浪费。可能的话，还是把白
板省下来画设计草图，用没有挂白板的墙做任务板。
注意——如果你用贴纸来记录任务，别忘了用真正的胶带把它们粘
好，否则有一天你会发现所有的贴纸都在地上堆成一堆。
我们怎样编写 SPRINT BACKLOG| 47 
任务板怎样发挥作用
当然，你也可以另外添上许多列，比如“等待集成测试”，或者“已当然，你也可以另外添上许多列，比如“等待集成测试”，或者“已
取消”。但是在把这一切搞复杂之前，请试着仔细考虑考虑，你要
添上去的那一列真的，真的是没它不行吗？
我发现在处理这种类型的事情时，“简单性”会发挥极大的作用；
所以除非不这样做会付出极大代价，我才愿意让事情变得更加复
杂。
例 1 ——首次每日 scrum 之后
在首次每日例会以后，任务板可能会变成这样：
48 | 硝烟中的 SCRUM 和 XP
你可以看到，有三个任务已经被“checked out”，团队今天将处理
这些条目的工作。
在大团队中，有时某个任务会一直停留在“checked out”状态，因
为已经没人记得是谁认领了这个任务。要是这种情况一再发生，他
们就会在任务上加上标签，记录谁 check out 了这个任务。
我们怎样编写 SPRINT BACKLOG| 49 
例 2 ——几天以后我们怎样编写 SPRINT BACKLOG| 49 
例 2 ——几天以后
几天以后，任务板可能会变成这样：
你可以看到，我们已经完成了“DEPOSIT”这个故事（它已经被签 入了源代码仓库，经过了测试、重构等等步骤）。“MIGRATION TOOL”只完成了一部分，“BACKOFFICE LOGIN”刚刚开始，“BACKOFFICE USER ADMIN”还没有开始。
我们有 3 个未经过计划的条目，放在任务板的右下角。进行 sprint
回顾的时候应当记住这一点。
下图是一个真实的 sprint backlog。这里 sprint 已经接近结尾。在 sprint 的进展中，这张表变得相当乱，不过因为这个状态很短，所 以没太大关系。每个新的 sprint 启动后，我们都会创建一个全新的、干净的 sprint backlog。
50 | 硝烟中的 SCRUM 和 XP50 | 硝烟中的 SCRUM 和 XP
我们怎样编写 SPRINT BACKLOG| 51 
燃尽图如何发挥作用
让我们把目光投向燃尽图：
这张图包含的信息有：
 Sprint 的第一天，8 月 1 号，团队估算出剩下 70 个故事点 要完成。这实际上就是整个 sprint 的估算生产率。
在 8 月 16 号，团队估算出还剩下 15 个故事点的任务要做。
跟表示趋势的虚线相对比，团队的工作状态还是差不多沿 着正轨的。按照这个速度，他们能在 sprint 结束时完成所 有任务。
我们没把周末放到表示时间的 x 轴上，因为很少有人会在周末干活 儿。我们曾经把周末也算了进来，但是这两天的曲线是平的，看上 去就像警告 sprint 中出现了问题，这就让人看着不爽了。
52 | 硝烟中的 SCRUM 和 XP
任务板警示标记52 | 硝烟中的 SCRUM 和 XP
任务板警示标记
在任务板上匆匆一瞥，就可以大致了解到 sprint 的进展状态。Scrum master 应当确保团队会对这些警示标记做出反应：
我们怎样编写 SPRINT BACKLOG| 53 
54 | 硝烟中的 SCRUM 和 XP
我们怎样编写 SPRINT BACKLOG| 55 
嘿，该怎样进行跟踪呢？
在这种模型中，如果必须跟踪的话，那我能提供的最佳方式，就是
每天给任务板拍一张数码照片。我有时也这样干，但一直没用到这
些照片。
如果你确实需要跟踪任务进度，任务板这种解决方案可能就不太适
合你。
不过我建议你应该试着去评估一下，对 sprint 进行细节跟踪能带给 你多大价值。Sprint 完成以后，可以工作的代码已被交付，文档也 被 check in，那还有谁会真的关心 sprint 的第 5 天完成了多少故事 呢？又有谁会真的关心“为 Deposit 编写失败测试”曾经的估算量是多少？
天数估算 vs. 小时估算
在讲述 Scrum 的书和文章中，大多数都是用小时而不是天数来估算 时间。我们也这样干过。我们的通用方程为 1 个有效的人-天=6 个 有效的人-小时。
现在我们已经不这么干了，至少在大部分团队中如此。原因在于：
	人-小时的粒度太细了，它会导致太多小到 1-2 个小时的任
务出现，然后就会引发微观管理。
 最后发现实际上每个人还是按照人-天的方式来思考，只是 在填写数据时把它乘 6 就得到了人-小时。“嗯……这个任 务要花一天。哦对，我要写小时数，那我就写 6 小时好了。”两种不同的单位会导致混乱。“这个估算的单位是啥？人-天还是人-小时？”
所以现在我们用人-天作为所有时间估算的基础（虽然我们也把它 叫做故事点）。它的最小值是 0.5，也就是说小于 0.5 的任务要么 被移除，要么跟其他任务合并，要么就干脆给它 0.5 的估算值（稍稍超出估算不会带来很大影响）。干净利落。
7 
我们怎样布置团队房间
设计角
我曾发现这样一个事实：大多数最有趣最有价值的设计讨论，都是
在任务板前面自然而然地发生的。
所以我们试着把这个区域布置成一个明显的“设计角”。
我们怎样布置团队房间| 57 
这着实很有用。要得到系统概况，不妨站到设计角前面看看墙上的 文字和图表，然后回到计算机前面用最近一次的系统构建结果尝试 一下，还有什么方式能比这更有效呢？（如果你运气不错、拥有持 续构建的话。参见“我们怎样合并 Scrum 和 XP”）。
“设计墙”只是一块大白板，上面画着最重要的设计草图，还有打 印出来的、最重要的设计文档（顺序图，GUI 原型，领域模型等等）
上图为在上述角落中进行的每日例会。
嗯……这个燃尽图看起来太干净了，线条也很直，不过这个团队坚持说它是 真实情况的反映:o) 
58 | 硝烟中的 SCRUM 和 XP58 | 硝烟中的 SCRUM 和 XP
让团队坐在一起！
在安排座位、布置桌椅这方面，有一件事情怎么强调也不为过。
让团队坐在一起！
说的更清楚一点，我说的是
让团队坐在一起！ 
大家都懒的动。至少我工作的地方是这样的。他们不想收拾起自己 的零碎儿、拔下计算机电源、把东西都挪到新的电脑桌上，然后把 一切再插回去。挪的距离越短，这种抵触情绪就越强烈。“老大，干嘛呢，动这 5 米有啥用？”
但是为了把 Scrum 团队弄得上档次一些，在这方面没有其它选择。一定要让他们坐到一起。即使你不得不私下里威胁每一个人，给他 们清理零碎，把老位子收拾利索。如果空间不够，那就找个地方创 造空间。就算把团队搬到地下室里面去也在所不惜。把桌子拼到一 起，贿赂办公室管理员，竭尽所能。只要能让他们坐到一起。
只要让他们坐到一起，就会有立竿见影的成效。过上一个 sprint，团队就会认为挪到一起是绝妙的主意（从我的个人经验来看，你的 团队也有可能会固执地不承认这一点）。那怎么才算坐到“一起”？桌子该怎么摆？呃，我在这方面没太多 建议。而且就算我有，恐怕大多数团队也没有奢侈到可以决定怎么 摆放桌子。工作空间中总是有太多物理限制——隔壁的团队、厕所 的门、屋子中间的大型自动售货机，等等。