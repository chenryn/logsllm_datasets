This can be done in nodejs.
This is not possible in deno.
    import { serve } from "https://deno.land/std@0.144.0/http/mod.ts";
    import { assertEquals } from "https://deno.land/std@0.144.0/testing/asserts.ts";
    Deno.test("websocket-host", async () => {
        const ac = new AbortController();
        const { signal } = ac;
        const p = serve(
            function (req) {
                console.log("request", req);
                const { socket, response } = Deno.upgradeWebSocket(req);
                socket.addEventListener("open", () => {
                    socket.send(req.url);
                    socket.close();
                });
                return response;
            },
            {
                signal,
                port: 5000,
            }
        );
        const socket = new WebSocketStream("ws://127.0.0.1:5000/", {
            headers: { host: "localhost.hello.world:9900" },
        });
        const connection = await socket.connection;
        const reader = connection.readable.getReader();
        let text = "";
        while (true) {
            const result = await reader.read();
            if (result.done) {
                break;
            } else {
                text = text + result.value;
            }
        }
        assertEquals(text, "http://localhost.hello.world:9900/");
        ac.abort();
        await p;
    });
    websocket-host => ./test.ts:26:6
    error: AssertionError: Values are not equal:
        [Diff] Actual / Expected
    -   http://127.0.0.1:5000/
    +   http://localhost.hello.world:9900/
      throw new AssertionError(message);
            ^
        at assertEquals (https://deno.land/std@0.144.0/testing/asserts.ts:176:9)
        at file:///C:/Documents/test/test.ts:62:5
     FAILURES
    websocket-host => ./test.ts:26:6