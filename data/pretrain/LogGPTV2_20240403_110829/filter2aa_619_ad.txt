### Table 10-10: Supported Filename Macros
Refer to Table 10-10 for a complete list of supported filename macros.

### Table 10-9: Supported Destination Drivers in `syslog-ng.conf`
| Driver | Description |
|--------|-------------|
| `file("filename[$MACROS]")` | Writes messages to a standard ASCII-text log file. If the file does not exist, `syslog-ng` will create it. Macros can be used within or as the entire filename, allowing dynamic naming (see Table 10-10). |
| `tcp("address" [port(#);])` | Transmits messages via TCP to the specified port (default: 514) on the given IP address or hostname. You must specify an address or name. |
| `udp("address" [port(#);])` | Transmits messages via UDP to the specified port (default: 514) on the given IP address or hostname. You must specify an address or name. |
| `pipe("pipename")` | Sends messages to a named pipe, such as `/dev/xconsole`. |
| `unix_stream("filename" [options])` | Sends messages in connection-oriented stream mode to a Unix socket, such as `/dev/log`. |
| `unix_dgram("filename" [options])` | Sends messages in connectionless datagram mode to a Unix socket, such as `/dev/log`. |
| `usertty(username)` | Sends messages to the console of the specified user. |
| `program("/path/to/program")` | Sends messages to the standard input of the specified program with the given options. |

### Table 10-10: Macros Supported in `file()` Destinations
| Macro | Expands To |
|-------|------------|
| `PROGRAM` | The name of the program that sent the message. |
| `HOST` | The name of the host that originated the message. |
| `FACILITY` | The facility to which the message was logged. |
| `PRIORITY` or `LEVEL` (synonyms) | The designated priority level. |
| `YEAR` | The current year. |
| `MONTH` | The current month. |
| `DAY` | The current day. |
| `WEEKDAY` | The current dayâ€™s name (e.g., Monday, etc.). |
| `HOUR` | The current hour. |
| `MIN` | The current minute. |
| `SEC` | The current second. |

**Note:** If the global option `use_time_recvd()` is set to `yes`, the macro values will be taken from the local system time when the message was received. Otherwise, for messages from remote hosts, the timestamp contained in the message will be used.

### File Creation and Options in `syslog-ng`
If a file specified in a `file()` destination does not exist, `syslog-ng` will create it. Unlike `syslog`, `syslog-ng` offers several options that can be implemented both globally and on a per-log-file basis. Global settings are overridden by per-log-file settings, allowing you to create general rules with exceptions.

For example, whether and how `syslog-ng` creates new directories for its log files is controlled via the options `create_dirs()`, `dir_owner()`, `dir_group()`, and `dir_perm()`. Example 10-16 illustrates the use of these options within a `destination{}` statement.

#### Example 10-16: Controlling Directory-Creating Behavior
```bash
destination d_mylog {
    file("/var/log/ngfiles/mylog" create_dirs(yes) dir_owner(root) dir_group(root) dir_perm(0700));
};
```

Other global/file-specific options can be used to set characteristics of the log file itself, such as `owner()`, `group()`, and `perm()`, which default to `root`, `root`, and `0600`, respectively. Example 10-17 shows a destination definition that includes these options.

#### Example 10-17: Options Affecting File Properties
```bash
destination d_micklog {
    file("/var/log/micklog" owner(mick) group(wheel) perm(0640));
};
```

The `sync()` option can be used to limit the frequency with which log files are synchronized. This is similar to `syslog`'s `"-"` prefix but more granular. By default, `sync()` is set to zero, meaning "synchronize after each message." In high-volume scenarios, higher `sync()` values may be necessary to reduce the number of filesystem operations.

### Filters in `syslog-ng`
Filters allow you to route messages based on various criteria, including priority/level, facility, program name, host name, regular expressions, and other filters. A `filter{}` statement consists of a label and one or more criteria connected by operators (`and`, `or`, `not`).

#### Table 10-11: `filter{}` Functions
| Function (Criterion) | Description |
|----------------------|-------------|
| `facility(facility-name)` | Facility to which the message was logged. |
| `priority(priority-name)` | Priority assigned to the message. Multiple priorities can be specified, or a range can be expressed. |
| `level(priority-name)` | Same as `priority()`. |
| `program(program-name)` | Program that created the message. |
| `host(hostname)` | Host from which the message was received. |
| `match(regular-expression)` | Regular expression to evaluate against the message's body. |
| `filter(filter-name)` | Other filter to evaluate. |

#### Example 10-18: Filters
```bash
filter f_mail { facility(mail); };
filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info .. warn) and not facility(auth, authpriv, cron, daemon, mail, news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };
```

### Log Statements
Log statements combine sources, filters, and destinations. Each `log{}` statement consists of a semicolon-delimited list of `source()`, `destination()`, and optionally `filter()` references.

#### Example 10-19: Sample `syslog-ng.conf` File
```bash
source s_loc { unix-stream("/dev/log"); internal(); };
source s_tcpmessages { tcp(ip(192.168.190.190); port(10514)); };
destination d_dailylog { file("/var/log/messages.$WEEKDAY"); };
destination d_micklog { file("/var/log/micklog" owner(mick) perm(0600)); };
filter f_mail { facility(mail); };
log { source(s_tcpmessages); destination(d_micklog); };
log { source(s_loc); filter(f_mail); destination(d_micklog); };
log { source(s_loc); filter(f_messages); destination(d_dailylog); };
```

### Advanced Configurations
Example 10-20 shows an advanced configuration that uses `syslog-ng` to watch for login failures and access denials by matching messages against a regular expression and then sending the messages to a shell script.

#### Example 10-20: Using `syslog-ng` as a Log Watcher
```bash
# WARNING: This syslog-ng.conf file is for illustrative purposes only; entire categories of messages are ignored!
source s_local { unix_stream("/dev/log"); internal(); };
filter f_denials { match("[Dd]enied|[Ff]ail"); };
destination d_mailtomick { program("/usr/local/sbin/mailtomick.sh"); };
log { source(s_local); filter(f_denials); destination(d_mailtomick); };
```

#### Example 10-21: Script for Emailing Log Messages
```bash
#!/bin/bash
# mailtomick.sh
# Script which listens for standard input and emails each line to mick
while read line; do
    echo "$line" | mail -s "Weirdness on that Linux box" mick@pinheads-on-ice.net
done
```

### Testing System Logging with `logger`
`logger` is a command-line tool that sends messages to the system logger. It is useful for testing new configurations and adding logging functionality to shell scripts.

#### Example 10-22: Sending a Test Message with `logger`
```bash
logger -p daemon.warn "This is only a test."
```

#### Example 10-23: Generating Test Messages from a Bash Prompt
```bash
for i in {debug,info,notice,warning,err,crit,alert,emerg}; do
    logger -p daemon.$i "Test daemon message, level $i"
done
```

#### Example 10-24: Script for Generating Test Messages for All Facilities
```bash
#!/bin/bash
facilities=("auth" "authpriv" "cron" "daemon" "ftp" "kern" "local0" "local1" "local2" "local3" "local4" "local5" "local6" "local7" "lpr" "mail" "news" "syslog" "user" "uucp")
priorities=("debug" "info" "notice" "warning" "err" "crit" "alert" "emerg")

for facility in "${facilities[@]}"; do
    for priority in "${priorities[@]}"; do
        logger -p $facility.$priority "Test message for $facility at $priority level"
    done
done
```

### Additional Resources
- **Syslog-ng Reference Manual**: Available in PostScript, SGML, HTML, and ASCII text formats in the `/doc` directory of the `syslog-ng` source-code distribution.
- **Syslog-ng Mailing List and Archives**: For advanced or unaddressed issues, see [http://lists.balabit.hu/mailman/listinfo/syslog-ng](http://lists.balabit.hu/mailman/listinfo/syslog-ng) for subscription information and archives.