addresses, it might be the most complete solution, as it fully elim-
inates use-after-free. For instance, Google and rambler.ru do not
release resource identifiers after users delete their accounts (i.e.,
free the resource). Instead, the resource identifier remains invalid,
making it impossible for attackers to use it for use-after-free at-
tacks. Hence, our most important recommendation is that providers
should follow this example and keep once-registered email aliases
marked unavailable forever.
In a different direction, services could introduce mechanisms to
block Use-After-FreeMail attacks. First, password recovery is sig-
nificantly more difficult if the attacker also needs to know the user
ID or user name. This would also confine the extent of automation
that our current implementation has. Second, services could pro-
vide the option of two-factor authentication and encourage users
to use it. Many of the attacks we performed in the exploitation
phase (cf. Section 7), would not have been possible with two-factor
authentication. Still, two-factor authentication is also not a com-
plete solution, as for communication purposes the outdated email
address might still be used by someone.
However, in all variants, a remaining problem is that free-mail
providers may go out of business, selling their domains and thus
deleting all email aliases. The problem also remains for private and
mail servers where the domain expired. In this case, the attacker
can still mount an attack as illustrated in Section 5.
A different approach to secure users against use-after-free is to
verify the existence of a user’s email address regularly, similar to the
regular checks for dangling pointers Caballero et al. [10] proposed.
For this purpose, web services could use the same techniques as we
did in this paper (cf. Section 4), or alternatively use regular emails
sent to the user, e.g., newsletters, invoices. If an email account
is expired, emails cannot be delivered successfully, but instead a
bounce reply is generated. As an immediate step, web services and
providers should take more care when receiving a bounce reply.
Bounce replies can be automatically parsed to detect whether an
email address has become invalid. Once an email address becomes
invalid, it is not the original authentication factor anymore. Hence,
password or account recovery through this email address should
not be allowed anymore. A similar approach is also pursued by the
Certified Senders Alliance [11].
Another approach is to track user activity through unique user-
identifying links included in sent emails, e.g., newsletters, invoices.
Whenever a user clicks on such a link, the server learns that the
user still uses the email account. If there is no user activity through
these links over a certain amount of time, an additional verification
email could be sent to re-validate the email address.
8.3 Recommendations for Users
Some users of our case study let their free-mail addresses expire or
actively deleted them as a reaction to a database leak. They were not
aware that this increases their own attack surface. Users should try
to keep unused free-mail addresses, to prevent this class of attacks.
Additionally, some users were unaware that their former free-mail
address was still used by some web services. We recommend users
to review and check all web services they registered with, to update
their email address to a new email address. However, this is prone
to human error, forgetting a few web services and thus remaining
susceptible to use-after-free.
Enabling two-factor authentication can already contribute sig-
nificantly to account security. However, as discussed in Section 8.2,
this requires support by the web service provider.
8.4 Use-After-FreeMail on Non-Public
Providers
Naturally, Use-After-FreeMail is not limited to free or public mail
providers, but it also exists for non-public providers. During our
early investigations, we found one incident where the official Twit-
ter account of a national political party sitting in several councils at
that time was referencing an invalid email address on a non-public
mail host. This case may have been exploitable by registering as
a new party member and choosing this email alias. However, the
problem was quickly resolved after we informed the party.
8.5 Ethical Considerations
Working with sensitive user data raises ethical concerns, and while
our institution does not have an ethics board, we tried to address
ethical concerns throughout our study. First of all, for ethical rea-
sons, we did not perform any of the experiments on email addresses
we learned from leaks, but only for persons voluntarily participat-
ing in our study. Second, the personal (and potentially sensitive)
data gathered in the experiments was only visible for two of the
authors, while the other authors only had access to blinded infor-
mation. All non-anonymized data was deleted when the study was
completed. Third, the participants of our study provided their data
voluntarily and explicitly gave permission to perform the study. The
participants were informed that they had the option to revoke this
permission and leave the study at any time. In this case, the personal
data gathered would have been deleted immediately. Any security
or privacy issues we found, especially concerning accounts we com-
promised, were immediately discussed with the study participants,
helping them to change their passwords, remove the outdated in-
formation and protect their accounts more thoroughly. In several
cases, we recommended the study participants to enable two-factor
authentication as a protection mechanism and to review and check
any web service registration to see where the email address should
be updated. In all cases, the study participants were thankful for
our recommendations and the help in protecting their accounts. At
the end of the study, any personal data we gathered was destroyed.
Another consideration is that publishing our insights will allow
users to assess the risks of outdated information in their online
accounts. Consequently, users can update their information and
stay safe from these attacks even when data breaches occur.
Gathering information about individuals accessing dating portals
is usually highly sensitive information (e.g., the Ashley Madison
leak). For the 5-day case study on datingeurope.net, we took care
not to gather any data that would violate the privacy of visitors or
11
former users. We avoided gathering personal and sensitive informa-
tion by setting up the web server in a way that it only logs accesses
to a static page, but does not accept or log any data transmitted
by the visitor. Our mail server rejected any attempt of sending or
receiving emails, i.e., no email subject, headers, or body were trans-
mitted to our server. The mail server logged only time, IP address
and sender and recipient email address, as well as the login name
for login attempts. After completion of our study, we deleted any
digital non-anonymized data gathered in these 5 days.
8.6 Responsible Disclosure
We initiated responsible disclosure with 5 free-mail providers to
eliminate the problem through the fixes we proposed in Section 8.2.
We also initiated responsible disclosure with 5 websites where we
expect, based on our observations in the user case studies, hardening
of password-recovery procedures to help preventing exploitation of
use-after-free. All parties quickly responded and acknowledged the
general problem. We grouped the answers into different categories:
Helpful. The national automobile club we contacted, responded
that they will integrate some of the countermeasures we proposed.
Informative. Yahoo, Amazon, and DropBox promptly responded
that they are aware of the problem and are continuously working
on improving the protection of their interfaces.
Irrelevant. Mail.ru stated that they only release email addresses
after 6 years and hence, consider these attacks irrelevant. Microsoft
responded that it is the (former) users responsibility to update any
dangling references, not theirs. We received similar comments from
other parties.
9 CONCLUSION
In this paper, we showed that use-after-free is a more general and
widespread phenomenon than it was known. We introduced a new
generalization of use-after-free and showed that this generalization
allows to determine whether a system or environment enables use-
after-free. We demonstrate our generalization with the specific case
of Use-After-FreeMail attacks, which gather free-mail addresses
from online database leaks. In a fully-automated quantitative anal-
ysis, we found that 33.5% of all free-mail addresses we tested, were
not valid anymore. In two user studies with 100 and 31 participants
we found that 11–19% of users are affected by our attack. In case
studies we were able to recover payment information and to obtain
access to actively used accounts of the user. We showed the con-
nection between research on use-after-free mitigation in different
areas and provide a concise list of recommendations of immediate
and long-term actions to mail providers, web service providers, and
users to prevent the exploitation of use-after-free.
ACKNOWLEDGMENTS
We would like to thank our anonymous reviewers for their valuable
feedback. We also would like to thank the volunteers of our user
study. This work has been supported by the Austrian Research
Promotion Agency (FFG), the Styrian Business Promotion Agency
(SFG), the Carinthian Economic Promotion Fund (KWF) under grant
number 862235 (DeSSnet).
REFERENCES
[1] 2018.
Authentication-Results-Python.
(2018).
https://launchpad.net/
authentication-results-python Retrieved on March 06, 2018.
[2] 2018. Popularity contest statistics for authres. (2018). https://qa.debian.org/
popcon.php?package=authres Retrieved on March 06, 2018.
[3] 2018. Popularity contest statistics for postfix.
(2018). https://qa.debian.org/
popcon.php?package=postfix Retrieved on March 06, 2018.
[4] Jonathan Afek and Adi Sharabani. 2007. Dangling pointer: Smashing the pointer
for fun and profit. In Black Hat 2007 Briefings.
[5] Pieter Agten, Wouter Joosen, Frank Piessens, and Nick Nikiforakis. 2015. Seven
months’ worth of mistakes: A longitudinal study of typosquatting abuse. In
NDSS’15.
[6] DM Berry, L Chirica, JB Johnston, DF Martin, and A Sorkin. 1973. On the time
required for retention. ACM Sigplan Notices 8, 11 (1973), 165–178.
[7] Joseph Bonneau and Sören Preibusch. 2010. The Password Thicket: Technical
and Market Failures in Human Authentication on the Web.. In The 9th Workshop
on the Economics of Information Security.
[8] Kevin Borgolte, Tobias Fiebig, Shuang Hao, Christopher Kruegel, and Giovanni
Vigna. 2018. Cloud Strife: Mitigating the Security Risks of Domain-Validated
Certificates. In NDSS’18.
[9] Matthew Bryant. 2017.
The .io Error – Taking Control of All .io Do-
mains With a Targeted Registration. (July 2017). https://thehackerblog.com/
the-io-error-taking-control-of-all-io-domains-with-a-targeted-registration/
[10] Juan Caballero, Gustavo Grieco, Mark Marron, and Antonio Nappa. 2012. Un-
dangle: early detection of dangling pointers in use-after-free and double-free
vulnerabilities. In Proceedings of the 2012 International Symposium on Software
Testing and Analysis. ACM, 133–143.
[11] Certified Senders Alliance (CSA). 2016.
Admission Criteria - Pertain-
ing to the Participation of Bulk Mailers in the Certified Senders Alliance
(CSA). (2016). https://certified-senders.org/wp-content/uploads/2017/07/CSA_
Admission_Criteria.pdf
[12] LM Chirica, TA Dreisbach, DF Martin, JG Peetz, and A Sorkin. 1973. Two PARAL-
LEL EULER run time models: The dangling reference, impostor environment, and
label problems. In Proceedings of a symposium on High-level-language computer
architecture. ACM, 141–151.
[13] Na Dai, Brian D Davison, and Xiaoguang Qi. 2009. Looking into the past to better
classify web spam. In Proceedings of the 5th international workshop on adversarial
information retrieval on the web.
[14] Anupam Das, Joseph Bonneau, Matthew Caesar, Nikita Borisov, and XiaoFeng
Wang. 2014. The Tangled Web of Password Reuse.. In NDSS’14.
[15] Dinakar Dhurjati and Vikram Adve. 2006. Efficiently detecting all dangling
pointer uses in production servers. In Dependable Systems and Networks, 2006.
DSN 2006. International Conference on. IEEE, 269–280.
[16] Artem Dinaburg. 2011. Bitsquatting: DNS hijacking without exploitation. In
Black Hat 2011 Briefings. https://media.blackhat.com/bh-us-11/Dinaburg/BH_
US_11_Dinaburg_Bitsquatting_WP.pdf
[17] Igor Dobrovitski. 2003. Exploit for CVS double free () for linux pserver. (2003).
[18] Benjamin Edelman. 2003. Large-scale registration of domains with typographical
(2003). https://cyber.harvard.edu/archived_content/people/edelman/
errors.
typo-domains/
[19] Charles N. Fischer and Richard J. LeBlanc. 1980. The implementation of run-
time diagnostics in Pascal. IEEE Transactions on Software Engineering 4 (1980),
313–319.
[20] G Gee and P Kim. 2011. Doppelganger Domains. Technical Report. Godai Group.
[21] Dara B Gilwit. 2003. The Latest Cybersquatting Trend: Typosquatters, Their
Changing Tactics, and How to Prevent Public Deception and Trademark Infringe-
ment. Washington University Journal of Law & Policy 11, 1 (2003), 267–294.
[22] GMX. 2017. Deleting an Account. (2017). https://support.gmx.com/account/
managing/delete.html
cgi/g.fcgi/products/mail/agb
accounts/answer/6236295
56256
[25] Google. 2017. User Agreement. (2017). https://support.google.com/mail/answer/
[26] Catherine Grevet, David Choi, Debra Kumar, and Eric Gilbert. 2014. Overload is
overloaded: email in the age of Gmail. In Proceedings of the SIGCHI Conference on
Human Factors in Computing Systems.
[27] Miniwatts Marketing Group. 2017. World Internet Users Statistics and 2017
World Population Stats. (2017). http://www.internetworldstats.com/stats.htm
[28] Zoltan Gyongyi and Hector Garcia-Molina. 2005. Web spam taxonomy. In First
international workshop on adversarial information retrieval on the web (AIRWeb
2005).
[29] Shuang Hao, Matthew Thomas, Vern Paxson, Nick Feamster, Christian Kreibich,
Chris Grier, and Scott Hollenbeck. 2013. Understanding the domain registra-
tion behavior of spammers. In Proceedings of the 2013 conference on Internet
measurement conference.
[30] John B Horrigan. 2008.
services.
use-of-cloud-computing-applications-and-services/
2008).
(Sept.
Use of cloud computing applications and
http://www.pewinternet.org/2008/09/12/
[31] Troy Hunt. 2017. Have I been pwned? Check if your email has been compromised
in a data breach. (2017). https://haveibeenpwned.com
[32] ICANN - Internet Corporation for Assigned Names and Numbers. 2017. Life
Cycle of a Typical gTLD Domain Name. (2017). https://www.icann.org/resources/
pages/gtld-lifecycle-2012-02-25-en
[33] Iulia Ion, Niharika Sachdeva, Ponnurangam Kumaraguru, and Srdjan Čapkun.
2011. Home is safer than the cloud!: privacy concerns for consumer cloud storage.
In Proceedings of the Seventh Symposium on Usable Privacy and Security.
[34] Andrew J Kalafut, Minaxi Gupta, Christopher A Cole, Lei Chen, and Nathan E
Myers. 2010. An empirical study of orphan DNS servers in the internet. In
Proceedings of the 10th ACM SIGCOMM conference on Internet measurement.
[35] Mohammad Taha Khan, Xiang Huo, Zhou Li, and Chris Kanich. 2015. Every
second counts: Quantifying the negative externalities of cybercrime via typosquat-
ting. In S&P’15.
[36] Georgios Kontaxis, Elias Athanasopoulos, Georgios Portokalidis, and Angelos D
Keromytis. 2013. SAuth: protecting user accounts from password database leaks.
In CCS’13.
[37] Byoungyoung Lee, Chengyu Song, Yeongjin Jang, Tielei Wang, Taesoo Kim, Long
Lu, and Wenke Lee. 2015. Preventing Use-after-free with Dangling Pointers
Nullification.. In NDSS’15.
[38] Chaz Lever, Robert Walls, Yacin Nadji, David Dagon, Patrick McDaniel, and Manos
Antonakakis. 2016. Domain-Z: 28 registrations later measuring the exploitation
of residual trust in domains. In S&P’16.
[39] Daiping Liu, Shuai Hao, and Haining Wang. 2016. All Your DNS Records Point
to Us: Understanding the Security Threats of Dangling DNS Records. In CCS’16.
[40] Lycos. 2017. Lycos Mail Terms of Service. (2017). http://info.lycos.com/resources/
[41] Mail.ru. 2017. Deleting your account. (2017). https://help.mail.ru/engmail-help/
terms-of-service/mail/
registration/delete
[42] Mail.ru. 2017. User Agreement. (2017). https://help.mail.ru/engmail-help/UA
[43] Enrico Mariconti, Jeremiah Onaolapo, Syed Sharique Ahmad, Nicolas Nikiforou,
Manuel Egele, Nick Nikiforakis, and Gianluca Stringhini. 2017. What’s in a
Name?: Understanding Profile Name Reuse on Twitter. In WWW’17.
[44] James Martindale. 2017.