mented directly.
Also, a set of costs cannot be eliminated due to the core
nature of the protocol, including:
• Symmetric key encryption:
two symmetric key en-
cryptions, one approximately the size of the transac-
tion description, and the ﬁxed size commit of around
100 bytes. Additionally, the corresponding decryp-
tions on each client.
• Hash function computations, for MACs and hash
chains: the overall quantity of data hashed per trans-
actions per client is the size of the transaction descrip-
tion, plus a small amount around 100 bytes.
• Two asynchronous TCP round trips: latency will not
affect the throughput of asynchronous (conﬂict-free)
clients. The network bandwidth consumed per trans-
action is slightly higher than in MySQL, since we send
transactions back out to all clients.
• Proxy costs: organizing hash chains, ordering and
transmitting incoming transactions. This program
overhead however, is likely always smaller then the ac-
tual transaction application times.
• Conﬂict detection cost: the time required to determine
if the order of two transactions affects the outcome.
This is an application speciﬁc cost – a function of the
conﬂict deﬁnition.
• Clients running each individual transaction descrip-
tion: This cost is incurred at the server in a MySQL-
only scenario.
Ultimately, in an industry-level prototype, we estimate
throughputs of roughly the same order of magnitude as an
un-secured MySQL server.
8 Conclusions
In this paper, we introduced a novel paradigm for secure
outsourcing of data management primitives, speciﬁcally
durability and availability with assurances of data conﬁden-
tiality and access privacy. We designed, implemented, and
evaluated a strawman implementation that validates the fea-
sibility of the new paradigm, running at tens of queries per
second. We identiﬁed key efﬁciency bottlenecks that can be
eliminated in an industry-level prototype to achieve orders
of magnitude higher throughputs.
9 Acknowledgments
We would like to thank our anonymous reviewers, who of-
fered helpful insights. We would also like to thank Smitha
Thomas for assistance with the implementation.
References
[1] Amazon Elastic Compute Cloud. Online at http:
//aws.amazon.com/ec2.
[17] D. Boneh, C. Gentry, B. Lynn, and H. Shacham. Ag-
gregate and veriﬁably encrypted signatures from bilin-
ear maps. In EuroCrypt, 2003.
[2] Amazon Simple Storage Service. Online at http:
//aws.amazon.com/s3.
[3] Amazon Web Services. Online at http://aws.
amazon.com.
[4] Google App Engine. Online at http://code.
google.com/.
[5] IBM Data Center Outsourcing Services. Online at
http://www-1.ibm.com/services/.
[6] Inetu.net Managed Database Hosting. Online at
http://www.inetu.net.
[7] MySQL. Online at http://www.mysql.com/.
[8] Opendb.com Web Database Hosting.
Online at
http://www.opendb.com.
[18] R. Brinkman, J. Doumen, and W. Jonker. Using se-
cret sharing for searching in encrypted data. In Secure
Data Management, 2004.
[19] G. Cattaneo, L. Catuogno, A. Del Sorbo, and P. Per-
siano. The Design and Implementation of a Trans-
parent Cryptographic Filesystem for UNIX. In Pro-
ceedings of the Annual USENIX Technical Confer-
ence, FREENIX Track, pages 245–252, Boston, MA,
June 2001.
[20] Y. Chang and M. Mitzenmacher. Privacy preserving
keyword searches on remote encrypted data. Cryptol-
ogy ePrint Archive, Report 2004/051, 2004. http:
//eprint.iacr.org/.
[21] CNN. Feds seek Google records in porn probe. Online
at http://www.cnn.com, January 2006.
[9] Sun Utility Computing. Online at http://www.
sun.com/service/sungrid/index.jsp.
[22] CNN. YouTube ordered to reveal its viewers. Online
at http://www.cnn.com, July 2008.
[10] Yahoo Briefcase. Online at http://briefcase.
yahoo.com.
[11] Atul Adya and Barbara Liskov. Generalized isolation
level deﬁnitions. In Proceedings of the IEEE Interna-
tional Conference on Data Engineering (ICDE), pages
67–78, 2000.
[12] American National Standard for Information Systems,
1819 L Street, NW, Washington, DC 20036, USA.
ANSI X3.135-1992 – Database Language SQL, 1992.
[13] Yair Amir and Ciprian Tutu. From total order to
In IEEE International Con-
database replication.
ference on Distributed Computing Systems (ICDCS),
2000.
[14] M. Blaze. A Cryptographic File System for Unix. In
Proceedings of the ﬁrst ACM Conference on Computer
and Communications Security, pages 9–16, Fairfax,
VA, 1993. ACM.
[15] B. H. Bloom. Space/time trade-offs in hash coding
with allowable errors. Commun. ACM, 13(7):422–
426, 1970.
[16] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and G. Per-
siano. Public key encryption with keyword search.
In Proceedings of Eurocrypt 2004, pages 506–522.
LNCS 3027, 2004.
[23] Premkumar T. Devanbu, Michael Gertz, April Kwong,
Chip Martel, G. Nuckolls, and Stuart G. Stubblebine.
Flexible authentication of XML documents. In ACM
Conference on Computer and Communications Secu-
rity, pages 136–145, 2001.
[24] Premkumar T. Devanbu, Michael Gertz, Chip Martel,
and Stuart G. Stubblebine. Authentic third-party data
publication. In IFIP Workshop on Database Security,
pages 101–112, 2000.
[25] Einar Mykletun and Maithili Narasimha and Gene
Tsudik. Signature Bouquets: Immutability for Aggre-
gated/Condensed Signatures.
In Proceedings of the
European Symposium on Research in Computer Secu-
rity ESORICS, pages 160–176, 2004.
[26] Gartner, Inc.
Server Storage and RAID World-
wide. Technical report, Gartner Group/Dataquest,
1999. www.gartner.com.
[27] S. Ghemawat, H. Gobioff, and S. T. Leung. The
In Proceedings of the 19th
Google File System.
ACM Symposium on Operating Systems Principles
(SOSP ’03), pages 29–43, Bolton Landing, NY, Oc-
tober 2003. ACM SIGOPS.
[28] E. Goh. Secure indexes. Cryptology ePrint Archive,
Report 2003/216, 2003. http://eprint.iacr.
org/2003/216/.
[29] O. Goldreich. Foundations of Cryptography. Cam-
bridge University Press, 2001.
[30] P. Golle, J. Staddon, and B. Waters. Secure conjunc-
tive keyword search over encrypted data. In Proceed-
ings of ACNS, pages 31–45. Springer-Verlag; Lecture
Notes in Computer Science 3089, 2004.
[31] Philippe Golle and Ilya Mironov. Uncheatable dis-
In Proceedings of the 2001
tributed computations.
Conference on Topics in Cryptology, pages 425–440.
Springer-Verlag, 2001.
[32] P. C. Gutmann.
DOS/Windows.
˜pgut001/sfs/index.html, 1994.
Secure ﬁlesystem (SFS)
for
www.cs.auckland.ac.nz/
[33] H. Hacigumus, B. Iyer, C. Li, and S. Mehrotra. Ex-
ecuting SQL over encrypted data in the database-
service-provider model. In Proceedings of the ACM
SIGMOD international conference on Management of
data, pages 216–227. ACM Press, 2002.
[34] H. Hacigumus, B. R. Iyer, and S. Mehrotra. Providing
database as a service. In IEEE International Confer-
ence on Data Engineering (ICDE), 2002.
[35] J. S. Heidemann and G. J. Popek. File system devel-
opment with stackable layers. ACM Transactions on
Computer Systems, 12(1):58–89, February 1994.
[36] Stephen Hemminger.
with netem (lca 2005).
//developer.osdl.org/shemminger/
netem/LCA2005_paper.pdf, April 2005.
Network
emulation
Online at http:
[37] B. Hore, S. Mehrotra, and G. Tsudik. A privacy-
preserving index for range queries. In Proceedings of
ACM SIGMOD, 2004.
[38] HweeHwa Pang and Arpit Jain and Krithi Ramam-
ritham and Kian-Lee Tan. Verifying Completeness of
Relational Query Results in Data Publishing. In Pro-
ceedings of ACM SIGMOD, 2005.
[39] Jetico, Inc. BestCrypt software home page. www.
jetico.com, 2002.
[40] A. Kashyap, S. Patil, G. Sivathanu, and E. Zadok.
I3FS: An In-Kernel Integrity Checker and Intrusion
Detection File System.
In Proceedings of the 18th
USENIX Large Installation System Administration
Conference (LISA 2004), pages 69–79, Atlanta, GA,
November 2004. USENIX Association.
[41] Bettina Kemme and Gustavo Alonso. Don’t be lazy,
be consistent: Postgres-r, a new way to implement
In Proceedings of the 26th In-
database replication.
ternational Conference on Very Large Data Bases
(VLDB), pages 134–143, 2000.
[42] G. Kim and E. Spafford. Experiences with Trip-
wire: Using Integrity Checkers for Intrusion Detec-
tion. In Proceedings of the Usenix System Administra-
tion, Networking and Security (SANS III), 1994.
[43] G. Kim and E. Spafford. The Design and Implementa-
tion of Tripwire: A File System Integrity Checker. In
Proceedings of the 2nd ACM Conference on Computer
Commuications and Society (CCS), November 1994.
[44] Jan Kneschke, Lenz Grimmer, Martin Brown,
Giuseppe Maxia, and Kay R¨opke. Mysql proxy
- mysql forge wiki. Online at http://forge.
mysql.com/wiki/MySQL_Proxy, 2008.
[45] Kyriacos Pavlou and Richard T. Snodgrass. Forensic
Analysis of Database Tampering. In Proceedings of
ACM SIGMOD, 2006.
[46] M. Sullivan and M. Stonebraker. Using Write Pro-
tected Data Structures to Improve Software Fault Tol-
erance in Highly Available Database Management
Systems. In Proceedings of VLDB, 1991.
[47] Maithili Narasimha and Gene Tsudik. DSAC: in-
tegrity for outsourced databases with signature aggre-
gation and chaining. Technical report, 2005.
[48] Maithili Narasimha and Gene Tsudik. Authentication
of Outsourced Databases using Signature Aggregation
and Chaining. In Proceedings of DASFAA, 2006.
[49] C. Martel, G. Nuckolls, P. Devanbu, M. Gertz,
A. Kwong, and S. Stubblebine. A general model for
authenticated data structures. Technical report, 2001.
[50] Charles Martel, Glen Nuckolls, Premkumar Devanbu,
Michael Gertz, April Kwong, and Stuart G. Stub-
blebine. A general model for authenticated data struc-
tures. Algorithmica, 39(1):21–41, 2004.
[51] David Mazi`eres and Dennis Shasha. Building secure
ﬁle systems out of byzantine storage. In PODC ’02:
Proceedings of the 21st Annual Symposium on Princi-
ples of Distributed Computing, pages 108–117, New
York, NY, USA, 2002. ACM Press.
[52] A. D. McDonald and M. G. Kuhn. StegFS: A Stegano-
graphic File System for Linux. In Information Hiding,
pages 462–477, 1999.
[53] R. Merkle. Protocols for public key cryptosystems.
In IEEE Symposium on Research in Security and Pri-
vacy, 1980.
[65] G. Sivathanu, C. P. Wright, and E. Zadok.
En-
hancing File System Integrity Through Check-
sums.
Technical Report FSL-04-04, Computer
Science Department, Stony Brook University, May
2004.
www.fsl.cs.sunysb.edu/docs/
nc-checksum-tr/nc-checksum.pdf.
[66] D. Xiaodong Song, D. Wagner, and A. Perrig. Practi-
cal techniques for searches on encrypted data. In SP
’00: Proceedings of the 2000 IEEE Symposium on Se-
curity and Privacy (S&P 2000). IEEE Computer So-
ciety, 2000.
[67] Tingjian Ge and Stan Zdonik. Answering aggregation
queries in a secure system model. In VLDB ’07: Pro-
ceedings of the 33rd international conference on Very
large data bases, pages 519–530. VLDB Endowment,
2007.
[68] Peter Williams and Radu Sion. Usable PIR. In Pro-
ceedings of the 2008 Network and Distributed System
Security (NDSS) Symposium, 2008.
[69] C. P. Wright, M. Martino, and E. Zadok. NCryptfs:
A Secure and Convenient Cryptographic File System.
In Proceedings of the Annual USENIX Technical Con-
ference, pages 197–210, San Antonio, TX, June 2003.
USENIX Association.
[54] Microsoft Research.
Encrypting File System for
Windows 2000. Technical report, Microsoft Cor-
poration, July 1999.
www.microsoft.com/
windows2000/techinfo/howitworks/
security/encrypt.asp.
[55] E. Mykletun, M. Narasimha, and G. Tsudik. Authenti-
cation and integrity in outsourced databases. In ISOC
Symposium on Network and Distributed Systems Se-
curity NDSS, 2004.
[56] E. Mykletun, M. Narasimha, and G. Tsudik. Authen-
tication and integrity in outsourced databases. In Pro-
ceedings of Network and Distributed System Security
(NDSS), 2004.
[57] E. Mykletun, M. Narasimha, and G. Tsudik. Signature
bouquets: Immutability for aggregated/condensed sig-
natures.
In Computer Security - ESORICS 2004,
volume 3193 of Lecture Notes in Computer Science,
pages 160–176. Springer, 2004.
[58] P. Paillier. Public-key cryptosystems based on com-
In Proceedings of
posite degree residuosity classes.
EuroCrypt, 1999.
[59] Pascal Paillier. A trapdoor permutation equivalent to
factoring. In PKC ’99: Proceedings of the Second In-
ternational Workshop on Practice and Theory in Pub-
lic Key Cryptography, pages 219–222, London, UK,
1999. Springer-Verlag.
[60] HweeHwa Pang and Kian-Lee Tan. Authenticating
query results in edge computing. In ICDE ’04: Pro-
ceedings of the 20th International Conference on Data
Engineering, page 560, Washington, DC, USA, 2004.
IEEE Computer Society.
[61] Philip Bohannon and Rajeev Rastogi and S. Seshadri
and Avi Silberschatz and S. Sudarshan. Using Code-
words to Protect Database Data from a Class of Soft-
ware Errors. In Proceedings of ICDE, 1999.
[62] S. Quinlan and S. Dorward. Venti: a new approach to
archival storage. In Proceedings of the First USENIX
Conference on File and Storage Technologies (FAST
2002), pages 89–101, Monterey, CA, January 2002.
USENIX Association.
[63] Richard T. Snodgrass and Stanley Yao and Christian
Collberg. Tamper Detection in Audit Logs. In Pro-
ceedings of VLDB, 2004.
[64] Radu Sion. Query execution assurance for out-
sourced databases. In Proceedings of the Very Large
Databases Conference VLDB, 2005.