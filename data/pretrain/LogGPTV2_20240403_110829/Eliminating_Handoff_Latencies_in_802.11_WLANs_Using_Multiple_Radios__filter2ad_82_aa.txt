title:Eliminating Handoff Latencies in 802.11 WLANs Using Multiple Radios:
Applications, Experience, and Evaluation
author:Vladimir Brik and
Arunesh Mishra and
Suman Banerjee
Eliminating handoff latencies in 802.11 WLANs using Multiple Radios:
Applications, Experience, and Evaluation
Vladimir Brik, Arunesh Mishra, Suman Banerjee ∗
Abstract
Deployment of Voice-over IP (VoIP) and other real-time
streaming applications has been somewhat limited in wire-
less LANs today, partially because of the high handoff la-
tencies experienced by mobile users. Our goal in this work
is to eliminate handoff latency by exploiting the potential
of multiple radios in WLAN devices. Our proposed ap-
proach, called MultiScan, is implemented entirely on the
client-side, and, unlike prior work, MultiScan requires nei-
ther changing the Access Points (APs), nor having knowl-
edge of wireless network topology. MultiScan nodes rely
on using their (potentially idle) second wireless interface to
opportunistically scan and pre-associate with alternate APs
and eventually seamlessly handoff ongoing connections. In
this paper we describe our implementation of MultiScan,
present detailed evaluations of its effect on handoff latency
and evaluate performance gains for MultiScan-enhanced
wireless clients running Skype, a popular commercial VoIP
application.
1 Introduction
IEEE 802.11 [1] based wireless LAN (WLAN) technolo-
gies have been experiencing an unprecedented growth in
the recent years fueled partly by decreasing costs and in-
creasing data rates available through them. From the users’
perspective, the key advantage of such networks is unteth-
ered access: users can freely move within their area of cov-
erage and stay connected.
In 802.11 WLANs clients connect to the Internet via Ac-
cess Points (APs). Due to design choices and requirements
of the 802.11 standard, the communication range of 802.11
devices is rather limited, and it is not uncommon for an
AP to have an effective communication range of less than
60 meters indoors. Consequently, WLAN coverage over a
large geographic area is provided using multiple APs, and
a wireless client moving through such area is likely to pass
from the coverage area of one AP to that of another. In or-
der to maintain continuous connectivity, the mobile client
has to switch between APs in a process known as a handoff.
For mobile clients handoffs can occur very often because of
the short range of APs.
∗V. Brik and S. Banerjee are with the Department of Computer
Sciences, University of Wisconsin-Madison, WI 53706, USA. Email:
{vladimir,suman}@cs.wisc.edu. A. Mishra is with the Department of
Computer Science, University of Maryland, College Park, MD 20742,
USA. Email: PI:EMAIL
The 802.11 standard does not completely specify the
handoff procedure. Depending on the hardware and the
vendor, it may take between 60 ms and 400 ms (about 260
ms on average) to complete a handoff, and in some cases
a node may experience a connectivity gap of up to a sec-
ond [7, 11]. Such high handoff latencies are adequate for
discrete mobility scenarios where a client (typically a lap-
top user) uses the network while stationary, then moves
to a different location but does not use the network dur-
ing the move, and resumes network usage when stationary
again. However, such handoff performance is highly in-
adequate for continuous mobility scenarios, where a client
needs to use the network while mobile through a sequence
of handoffs. Continuous mobility scenarios are of great sig-
niﬁcance in real-time latency-sensitive applications, e.g.,
Voice-over-IP (VoIP) and other synchronous multimedia
applications. Poor handoff performance is one of the major
hindrances to deployment of VoIP applications in WLANs.
The goal of this paper is to address the need for seamless
mobility in WLANs, thereby meeting the needs of VoIP
and other latency-sensitive applications. We propose a so-
lution called MultiScan that uses two 802.11 network in-
terfaces on the same device (e.g. an 802.11-based wireless
phone or a PDA). Our experimental results demonstrate
that MultiScan is capable of completely eliminating hand-
off latencies, and to our knowledge, it is the only existing
practical approach that can eliminate handoff latency.
Why do we need two radios?
We believe that a two-radio interface solution is both prac-
tical and feasible, and is the only mechanism that can elim-
inate handoff latencies in WLANs. While two physically
separate radio interfaces in a single device may seem im-
practical (especially in a small form factor), it turns out
that multiple commercial vendors are coming out with
multi-band chipsets that allow communication on two or
more channels, e.g., EN-3001 intelligent wideband WLAN
chipset for 802.11 networks (see http://www.engim.com/).
Hence, we believe that approaches to handoffs that are
based on using two radio interfaces are both practical and
timely, and can jumpstart the process of efﬁcient deploy-
ment of VoIP applications in WLANs.
Minimization of handoff latency for single-radio WLAN
clients has been examined in prior research, e.g., Neighbor
Graphs [3] and SyncScan [2]. In the Neighbor Graphs ap-
proach, extra functionality is implemented at both clients
USENIX Association
Internet Measurement Conference 2005  
299
)
s
m
(
T
T
R
 35
 30
 25
 20
 15
 10
 5
 0
Two interfaces simultaneously
Single interface
 200
 400
 600
 800
 1000
Packet number
Figure 1: Performance of two radios used simultaneously.
and APs that is used to infer WLAN topology and reduce
handoff overhead to around 30-40 ms.
In the SyncScan
approach, all clients and all APs in the network require
time synchronization. While SyncScan potentially reduces
the latency of a handoff to a few milliseconds, it requires
regular suspension of communication for roughly twice the
amount of time it takes a wireless interface to change chan-
nel, which, depending on hardware, could exceed 10 ms.
An important advantage of MultiScan is that it requires
changes only at the wireless client. In particular, we have
implemented all the necessary functionality in a (Linux)
client as a kernel module that controls the handoff process
and (re)association decisions. The MultiScan module re-
lies only on the standard Linux kernel API and does not
depend on device drivers. Therefore, MultiScan is com-
pletely compatible with any wireless card. Finally, Mul-
tiScan’s operation takes place only in the link layer and
hence is transparent to the applications. MultiScan mod-
ule will be made publically available shortly.
In this paper we present the design of MultiScan, its pro-
totype implementation, and demonstrate the usefulness of
our approach for seamless handoffs in 802.11 WLANs. In
particular, we evaluate the performance of MultiScan using
trafﬁc ﬂoods and a popular commercial VoIP application
Skype [15].
Exploiting multiple radios
Wireless nodes with multiple radios have more resources
at their disposal than their single-radio counterparts. How-
ever, naive use of these additional resources could signiﬁ-
cantly hurt performance. This was demonstrated in a work
by Adya et al. [8] in the context of multi-radio mesh net-
works, where wireless nodes are equipped with multiple
radio interfaces and trafﬁc takes multi-hop wireless paths
through them. A possible use of two radio interfaces is to
use them simultaneously, i.e., on every wireless hop, each
node will use its two radios to form two wireless links with
its neighboring node (also equipped with two radios) oper-
ating on different channels with data trafﬁc striped across
the two links. Adya et al. showed that when two such links
between a pair of nodes are used simultaneously, TCP-
based applications perform poorly due to re-ordering ef-
fects, unless the loads of the two links are well balanced.
In our work we have found that using two radio inter-
faces simultaneously in a single device, especially those
with small form factors (such as a PDA or a handset), leads
to signiﬁcant loss of performance due to cross-interference
between the radios. This is true even if the two interfaces
are operating on different 802.11 wireless channels and oc-
cur due to the physical proximity of transceiver circuitry of
these interfaces. We demonstrate this in an experiment (see
Figure 1) where we equipped a single node with two radio
interfaces conﬁgured to non-interfering channels 1 and 11.
We ran two experiments — a two interface case, where
both interfaces were active, and a single interface case,
where one of the interfaces was disabled.
In each ex-
periment, the active interface(s) performed a “ping ﬂood”,
where ICMP Echo Request packets were transmitted about
every 10 ms. The average ping round-trip time (RTT)
was around 1.7 ms.
In Figure 1 we plot the tail of the
RTT distribution, i.e., the round-trip times for packets with
RTT greater than 5 ms.
It is instructive to see that the
packets in the two-interface simultaneous transfer exper-
iment experienced higher interference, despite being on
non-overlapping channels, as illustrated by the signiﬁcantly
higher number of pings with high RTTs (154 packets for
two simultaneous interfaces versus 10 for single interface).
Based on these observations, the design of MultiScan
makes use of one radio interface as the primary data trans-
fer interface, while the other (secondary) interface is used
to facilitate a fast ‘make-before-break’ handoff as and when
necessary, for example, if the performance of the primary
interface is deteriorating.
In the rest of this paper we will present design details
of MultiScan and a detailed evaluation of the multi-radio
handoff approach, as conducted in our wireless testbed. In
particular, we will look at how it helps to eliminate handoff
latencies and thus improve performance for VoIP applica-
tions like Skype.
2 Background
A typical WLAN consists of a number of APs. In order
to reduce interference, neighboring APs operate on inde-
pendent (non-interfering) channels. Different 802.11 stan-
dards have different number of such channels available, for
example, in the US, IEEE 802.11b operates on 3 such chan-
nels: 1, 6, 11. A client moving from the coverage area of
one AP to another in a WLAN needs to change its associ-
ation accordingly in order to stay connected. The ensuing
handoff process consists of the following stages:
1. Scanning: In this stage clients discover available APs
by observing beacon frames that are periodically broadcast
by APs. Scanning can be either passive, where a client
simply waits for beacons, or active, where a client actively
300
Internet Measurement Conference 2005
USENIX Association
Card A
(primary)
Card B
(secondary)
APold
APnew
Figure 2: Multi-radio handoff scenario in MultiScan.
solicits beacons. An AP typically operates in one of many
channels (e.g., 11 channels in 802.11b/g) and therefore a
scanning client attempts to ﬁnd APs in each channel.
2. Authentication: Access to 802.11 networks can be
restricted by using such mechanisms as WPA. In these
WLANs clients are required to exchange authentication
messages with the AP identiﬁed for association.
3. Association: In this stage the client associates with
the new AP by sending an Association Request and receiv-
ing an association ID. If Inter Access Point Protocol [12]
is implemented, the new AP will inform the old AP that
the client’s association has changed, and obtain frames
buffered at the old AP that are destined for the client.
In the scanning stage the interface has to switch between
channels, and hence cannot be used for communication.
Prior work has shown that over 90% of the time in the hand-
off process is spent in the scanning stage [7]. Because of
this, work in optimizing handoffs has focused on making
scanning more efﬁcient [7, 2]. In the next section we show
that such optimizations are not critical (though still useful)
to network nodes with multiple network interfaces, since
the second interface can be used to perform all association-
related tasks with a new AP.
3 Handoffs in MultiScan
In the multi-radio scenario, we assume that a node has two
interfaces: the primary interface and the secondary inter-
face. Suppose that the primary interface is associated with
APold and is used for communication, while the secondary
interface is available to perform other tasks (see Figure 2).
Clearly, such multi-radio node will have an advantage since
it will be able to communicate normally and perform man-
agement operations simultaneously.
In a naive approach, the secondary interface could per-
form the scanning stage (which is the most time consuming
stage of a handoff), while the primary interface is commu-
nicating normally with its AP. Once the secondary interface
determines an AP to which the node needs to connect next,
the primary interface could start the handoff process skip-
ping the scanning stage. This optimized handoff can be
performed in less than 5 ms. Besides the delay due to the
last two stages of handoff, just switching the card to a dif-
ferent channel may require as much 20 ms [7], depending
on chipset, which is signiﬁcant for real-time applications.
Although not the best we can do with multiple interfaces,
this naive approach vastly reduces latency due to handoff
and is absolutely safe, since from the AP infrastructure’s
point of view, the node does not do anything unexpected, it
simply appears as if the node knows which AP to connect
to without a scan.
In a more aggressive approach, we can eliminate handoff
latency if the secondary interface proceeds to associate with
APnew while the primary interface is transfering data using
APold. Once the secondary interface has ﬁnished its associ-
ation process, the roles of the two interfaces are swapped,
i.e., the secondary interface starts functioning as the pri-
mary interface and the previously primary interface disso-
ciates with APold and starts operating as the secondary in-
terface. This is our approach:
1. Normal operation: Communication is performed us-
ing the primary interface that is associated to APold, while
the secondary interface is performing other tasks, possibly
including scanning the channels.
2. Re-association: If it is determined that it would be
beneﬁcial to switch to a new AP, the second interface com-
mences association with the new AP while the primary card
is still used for data transfer with the old AP.
3. Interface Switch: As soon as the secondary interface
is associated with the new AP, all of the node’s outgoing
trafﬁc is sent via the secondary interface. The primary in-
terface effectively becomes invisible, but stays up for some
time to receive packets that may arrive delayed from APold
because of buffering or a slow bridging tables update.
4. Completion: Primary and secondary interfaces switch
roles: the formerly secondary interface becomes primary
and is used for communication, and the formerly primary
interface is freed to be used for other tasks.
Clearly, such approach potentially completely eliminates
handoff latency (i.e. latency due to both the handoff pro-
cess and switching the wireless interface to a different
channel). Still, under certain conditions, connectivity dur-
ing a MiltiScan handoff can be negatively impacted due to
lost packets (though to a much lesser degree than during
a single-interface vanilla handoff). Packets queued on the
primary interface will be lost if APold learns that the node
is associated with a different AP and will no longer accept
node’s packets. This is can happen if the channel of the
primary interface is much more congested than the channel
of the secondary interface.
Address management
An explicit goal of MultiScan is to require no changes in
the APs or the wired infrastructure. In order to facilitate
this goal, we require that both interfaces use the same IP
and MAC addresses. Standard utilities (e.g., ifconﬁg) al-
low clients to set MAC addresses of individual interfaces as
desired. Therefore, from the point of view of the infrastruc-
ture, a MultiScan handoff appears as if a single-radio wire-
less client just re-associated with a different AP (with zero
USENIX Association
Internet Measurement Conference 2005  
301
)
s
m
(
T
T
R
 4
 3.5
 3
 2.5
 2
 1.5
 1
 0.5
 0
0
MultiScan
 4
 3.5
 3
 2.5
 2
 1.5
 1
 0.5
)
s
m
(
T
T
R
MultiScan
 4
 3.5
 3
 2.5
 2
 1.5
 1
 0.5
)
s
m
(
T
T
R
Single Interface
6
12
18
24
30
36
42
48
54
60
Time (s)
 0
53
53.5
54
54.5
Time (s)
55
55.5
56
 0
 53
 53.5
 54
 54.5
Time (s)
 55
 55.5
 56
Figure 3: Ping RTTs with periodic
handoffs for MultiScan client.
Figure 4: Zooming in on Figure 3 for a
single handoff instant.
Figure 5: A handoff by a single inter-
face client (see Figure 4).
latency). Note that when a handoff occurs, i.e., a secondary
interface associates with a new AP, that AP automatically
broadcasts a gratuitous ARP in the LAN announcing the
new association. This updates cached ARP entries in dif-
ferent network devices.
4 Experimental Evaluation
In our evaluation of MultiScan, we used comput-
ers running Gentoo Linux 2005.0, equipped with two
Atheros AR5212-based wireless cards, operating on non-
overlapping 802.11b channels (one on channel 1, another
on 11). Antennae were separated so as not to cause inter-
ference as in Figure 1. Two independent APs were set up
on one of the hosts (each one using its own wireless in-
terface). A single computer hosted both APs so that the
same clock was used for all measurements. Data gathered
in experiments where each AP ran on a separate computer
were no different than data presented here. There were no
802.11 networks in the vicinity of the testbed.
A MultiScan module installed at the client controlled
handoffs and interface switchting. MultiScan can trigger a
handoff in a ﬂexible manner, e.g., when the signal strength
observed by the primary interface weakens. We performed
both signal strength based handoffs as well as intention-
ally triggered handoffs — the latter gave us more control
and allowed to stress-test the performance of MultiScan.
tcpdump traces were obtained at both the APs and the
client and were used to measure latency and other relevant
parameters.
To test the performance of VoIP with MultiScan, we used
a popular commercial software, Skype v1.0.0.20. In this
section, in the interest of space we report only on some of
the interesting results from our experiments that illustrate
the key performance aspects of MultiScan.