# Windows凭证机制浅析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 前言
在实际渗透中，我们大部分时间都在于对Windows主机系统进行对抗，主机凭证获取是我们横向移动过程中不可或缺的一部分，除了使用凭证抓取工具以外，理论部分的学习将加深我们对凭证获取的理解。本文将从Windows凭证机制原理部分开始一步步进行讲解。
## 0x01 原理解析
###  一、Windows用户相关知识：
1.Windows内置账户：
  * Administrators 组内的用户，都具备系统管理员的权限，他们拥有对这台计算机最大的控制权，可以执行整台计算机的管理人无。内置的系统管理员账号Administrator就是本地组的成员，而且无法将他从组删除，如果这台计算机已加入域，则域的Domain Admins会自动地加入到该计算机的Administrators组内，也就是说，域上的系统管理员在这台计算机上也具备着系统管理员的权限。
  * Guests 组是提供给没有用户账户但是需要访问本地计算机内资源的用户使用（Guests账户激活），该组的成员无法永久地改变其桌面的工作环境。该组最长远的默认成员为用户账号Guest。
  * Power Users 组内的用户具备比Users组更多的权利，但是比Administrators组拥有的权利更少一些，例如可以：创建、删除、更改本地用户账户；创建、删除、管理本地计算机内的共享文件夹与共享打印机；自定义系统设置，例如更改计算机时间、关闭计算机等。但是不可以更改Administrators，无法多去文件的所有权、无法备份与还原文件、无法安装删除与删除设备驱动程序、无法管理安全与审查日志。
  * Users 组内的成员只拥有一些基本的权利，例如运行应用程序，但是他们不能修改操作系统的设置、不能更改其他用户的数据、不能关闭服务器级的计算机。所有添加到本地用户账户者自动属于Users组。如果这台计算机已经加入域。则域的Domain Users会自动加入到该计算机的Users组内
  * Remote Desktop Users 组内成员拥有远程桌面登陆的权限。默认Administrators组内的成员都拥有远程桌面的权利。
2.Windows内置组：
  * Administrators
  * Guests
  * Power Users
  * Users
  * Remote Desktop Users
3.UAC 用户账户控制(User Account Control)：
  * 特征：完整性级别被设置为中
  * 命令：`whoami /priv` 或者 `whoami /all`
4.安全描述符(Security descriptor)：
当一个对象被创建时，系统将为其分配安全描述符，安全描述符包含了该对象的属主对该对象 **所配置的一些安全属性和策略**
，安全描述分为四部分组成，我们的着重关注这个 **SID** ,下面会详细讲解。
  * SID（表示该对象拥有的SID）
  * DACL（该对象的访问控制策略）
  * SACL（该对象的访问行为的审计策略）
  * Flag（其他标志信息）
下图的图表示当某程序试图访问某个安全对象时，系统是如何检测的：系统会检测Object的DACL列表，
根据当前进程的Token，判断当前进程（线程）是否允许访问该Object。
###  二、Windwos session、Windows Station解析：
1.Session：
  * 本地登录
  * 远程登陆
从Windows XP开始每次登录终端才会创建一个Session，Windows Vista后所有的服务程序都运行在Session
0，其他终端会依次运行在Session 1，Session 2。
2.Logon Session：
包含System登陆、网络登陆以及活动登陆（139、445登陆）
3.Windows Station：
  * Windows Station：每个Windows Station对应一个Logon Session，也就是说通过Windows Station把不同的账号进行隔离，防止他们相互影响。 **一个终端登录Session可以有多个Windows Station ，但只能有一个可交互的活动Windows Station，也就是Winsta0** 。
  * Desktop：每个Windows Station可以创建多个Desktop，我们平时和3个Desktop打交道比较多(Winlogon，Disconnect，Default)，他们分别代表登录桌面，屏保桌面和我们工作的桌面。
下面的图表示了Session，Windows Station和Desktop的关系
###  三、Windows Token、Windows Acess Token、SID解析：
1.Windows Token:
  * Windows安全模型中，有两个角色，一个是访问者（进程），一个是被访问者（资源）
  * 所谓的资源可以是文件，目录，注册表，管道，命名句柄，进程线程
  * 每个资源都有一个安全描述符，安全描述符当中包含了ACL（ACE）（访问控制列表）
  * 访问控制列表中每条规则（ACE）都对应记录着一个SID被允许和拒绝的操作（读、写、执行）
  * 访问者为了访问某一个资源，显然也需要一个身份的认证
2.Windows Access Token：
Windows Access Token（访问令牌，）他是一个描述进程或者线程安全上下文的一个对象。 **不同的用户登录计算机后，都会生成一个Access
Token**
，这个Token在用户创建进程或者线程时会被使用，不断的拷贝，这就解释了A用户创建一个进程而该进程没有B用户的权限。当用户注释后，系统将会使主令牌切换为模拟令牌，不会将令牌清除，只会在重启机器后才会清除。
Access Token分为两种(主令牌、模拟令牌)
  * 授权令牌(Delegation token)：交互式会话登陆(例：本地用户登陆、用户桌面等….)
  * 模拟令牌(lmpersonation token)：非交互式登陆(例：net user、访问共享文件)
  * 用户双击运行一个程序都会拷贝“explorer.exe”的Access Token
  * 用户注销后系统将会使主令牌切换到模拟令牌，不会将令牌清除，只会在重启机器后才会清除
3.Windows Access Token分类：
  * 交互式登陆（console、RDP、Psexec）
  * 网络登陆（Wmi、Winrm）
4.Windows Acess Token组成:
  * 用户账户的安全标识符(SID)
  * 用户所属的组的SID
  * 用户标识当前登录会话的登陆SID
  * 用户或用户组锁拥有的权限列表
  * 所有者SID
  * 主要组的SID
  * 访问控制列表(DACL中的ACE)
  * 访问令牌的来源
  * 令牌是主要令牌还是模拟令牌
  * 限制SID的可选列表
  * 目前的模拟等级
  * 其他统计数据
5.SID(安全标识符)
安全标识符是一个唯一的字符串，用户标识该用户账号以及所属的用户组。 **系统在用户请求访问某些对象时，通过提供的访问令牌来确认是否具有对应的访问权限** 。
通常他还有一个SID固定列表，SID表现形式：
  * 域SID——用户ID
  * 计算机SID——用户ID
6.常见的SID：
  * 500（Administrator）
  * 501（Guest）
  * 502（Krbtgt）
  * 512（Domain Admins）
  * 513（Domain Users）
  * 515（Domain Computers）
  * 516（Domain Controllers）
  * 519（Enterprise Admins）
7.Windows Access Token产生过程：
Token和进程相关联，每个进程创建时都会根据Logon Session权限由LSA（Local Security
Authority）分配一个Token(如果CreateProcess时自己指定了Token，LSA会用该Token，否则就用父进程Token的一份拷贝，由于大部分进程都是由Explorer.exe创建，所以我们大部分时候都复制了explorer.exe的Token），里面含有该进程的安全信息，包括用户账号，组信息，权限信息和默认安全描述符(Security
Descriptor)。
###  四、SAM解析：
1.注册表解析：
  * HKLM\SAM： 包含用户密码的NTLMv2哈希值
  * HKLM\security:包含缓存的域记录LSA secrets/LSA密钥
  * HKLM\system-aka SYSKEY：包含可用于加密LSA secret和SAM数据库的密钥
2.syskey解析：
syskey的由来：  
读取注册表项HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa下的键值JD、Skew1、GBG和Data中的内容，然后拼接成syskey
syskey的作用：  
Syskey中的加密的是账号数据库，也就是位于%SystemRoot%\system32\config的SAM文件
3.SAM文件
SAM(安全账户管理器)，SAM用来存储Windows操作系统密码的数据库文件，为了避免明文密码泄露，SAM文件中保存的是明文密码经过一系列算法处理过的Hash值，被保存的Hash分为
**LM Hash（现已废弃）、NTLMHash（长度32bit由字母数字组成）**
。在用户在本地或者远程登陆系统时，会将Hash值与SAM文件中保存的Hash值进行对比。在后期的Windows系统中，SAM文件中被保存的密码Hash都被密钥SYSKEY加密。
  * SAM文件在磁盘中的位置在：C:\windows\system32\config\sam
  * SAM文件在Windows系统启动后被系统锁定，无法进行移动和复制
  * SAM就是用来存放用户密码、Internet Explorer密码，服务账号密码、SQL密码、系统账户密码、配置的计划任务账户密码。
###  五、Lsass进程解析：
本地安全管理局子系统服务(LSASS)是Microsoft
Windows操作系统中的一个进程，负责在系统上强制执行安全策略。它验证用户登录到Windows计算机或服务器、处理密码更改、创建访问令牌等。我们常说的dump
lsass 就是对转存Lsass进程中的明文登陆密码。
###  六、SSP解析：
  * 安全支持提供程序(SSP)
  * 安全支持提供程序接口(SSPI) 应用程序和底层API交互
SSP是Windows定义的一套接口，此接口定义了与安全有关的功能函数，用来获取验证、信息完整性、信息隐私等安全功能，就是定义了一套接口函数用来身份验证，签名等，SSP（Security
Support Provider）包含：
  * Kerberos Security Support Provider
  * NTML Security Support Provider
  * Digest Security Support Provider
  * Schannel Security Support Provider
  * Negotiate Security Support Provider
  * Credential Security Support Provider
  * Negotiate Extensions Security Support Provider
  * PKU2U Secruity Support Provider
如下图：
  * MSV（Terminal Server认证（RDSH））
  * tspkg（NTML认证）
  * **wdigest（摘要认证） 用的比较多提取明文密码**
  * Kerberos（Kerberos认证）
###  七、LM Hash和NTLM hash简述：
Windows系统为了保证用户明文密码不会被泄漏，将密码转换为HASH值进行身份验证，被保存在SAM或者ntds.dit中（可以使用 mimitakz
抓取），域中的所有账号密码存放在Ntds.dit，如果拿到，相当于拿到整个域权限.Windows Hash 又分为LM Hash 和 NTLM
Hash，这里我们着重说一下 **NTLM Hash** 。
1.LM Hash（已弃用）：
LM hash 因为区分大小写，密码最长为14位，使用DES进行加密，加密强度较弱，如果是14位密码，可被分开破解，所以LM Hash被弃用，NTLM
_Hash_ 被用来进行 _Windows_ 本地及远程身份验证的凭据。
2.NTLM Hash：
NTLM Hash生成原理的三步骤：
  * hex（16进制编码）
  * Unicode编码（ASCII转Unicode）
  * MD4加密得到NTLM Hash
3.示例：
Windows系统下的hash密码格式为：用户名称:RID:LM-HASH值:NT-HASH值，例如：
Administrator:500:C8825DB10F2590EAAAD3B435B51404EE:683020925C5D8569C23AA724774CE6CC
用户名称为：Administrator