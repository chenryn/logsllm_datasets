四次握手，组密钥握手和CCMP协议都正式被分析和证明是安全的
**2.2 身份验证和连接**
当客户端要连接WiFi网络，自动开始（互相）身份验证和连接。图2描述了连接阶段的握手。但是当第一次连接到网络时，是没有实际的身份验证。相反，使用了开放系统身份验证，对客户端进行身份验证。实际身份验证在四次握手中使用。但真正的身份认证仅在两个采用fast
BSS transition握手协议的相同网络AP之间漫游时使用。
在开放式身份验证之后，客户端连接到网络中。通过客户端向AP发送一个连接请求完成。这条消息包含客户端希望使用的成对的密码组。AP回复一个连接响应，通知客户端连接是否被成功建立。
图1
图2
**2.3 四次握手**
四次握手提供相互身份验证，基于共享密钥技术，这种技术称为成对的主密钥Pairwise Master
Key(PMK)，并协商一个新的会话秘钥PairWiseTransient Key（PTK）。在这次握手中，
**客户端称为supplicant，而AP称为authenticator**
，PMK由个人网络中的预共享密码生成，在企业网络中使用802.1x身份验证来进行协商。PTK由PMK，Authenticator Nonce
(ANonce), Supplicant Nonce
(SNonce)和supplicant和authenticator使用的MAC地址派生而来。一旦生成，PTK被分割成确认key(KCK),加密Key(KEK)，和临时Key(TK)，确认Key和加密Key使用来保护握手消息，TK和数据机密性协议是用来保护正常数据帧，如果使用了WPA2，四次握手协议也传输现在的Group
Temporal Key组临时密钥（GTK）到supplicant。
四次握手中的每一条消息都是使用EAPOL帧格式。（如图1）对字段进行介绍
首先，消息的头部定义了所代表的消息类型，我们将使用message n和MsgN来代表四次握手中第n段消息。
Replay count（重放计数器）字段用于检测重放的数据帧：authenticator在发送一个帧之后会自增长，当supplicant对
authenticator发送的EAPOL帧做出应答时，它使用相同的replay count。
Nonce字段是一个随机的nones值，这个随机值是supplicant和authenticator在生成新的会话秘钥这一步骤产生的。
接下来，如果EAPOL帧传输一个组密钥，RSC（接受序列）包含了key起始包号。
组密钥是存储在Key Data字段，使用加密Key(KEK)加密。
最后，使用消息确认Key(KCK)来进行完整性校验. MIC（MessageIntegrity Check）
图2表示了四次握手时消息的传输格式。我们使用一下的符号标记
**MsgN(r,Nonce; GTK)**
表示：四次握手中的第N条消息，重放计数器 replay count 为r，给定的nonce,在’;’之后的参数都存储在数据域中，也就是说会使用KEK加密。
（1）Authenticator 通过发送message 1来初始化四次握手。包含ANonce，是唯一一个没有MIC(完整性校验) EAPOL 格式消息。
（2）当收到消息时，suplicant 生成一个 SNonce
而且导出PTK，suplicant发送message2给authenticator，message2包含了（SNonce）。
（3）authenticator收到SNonce，也会导出PTK。并且发送组密钥GTK给supplicant。
（4）supplicant在安装PTK和GTK 之后回复message4，
authenticator收到message4之后也会安装PTK，其中GTK在AP启动时就已经安装。
1,2条消息使用来传输nonces，最后两条消息是用来传输组密钥 而且使用抵御降级攻击
注意：在已经存在的连接中，PTK可以被刷新通过初始化新的四次握手。在密钥重载的过程中，所有的四次握手消息都是使用PTK完成数据机密性加密的。
**2.4 机密性和完整性协议**
802.11i修正协议定义了两个数据级机密性协议，第一个是TKIP（Temporal Key Integrity
Protocol）暂时完整性协议。现在因为安全考虑TKIP被弃用。第二个是（AES-）CCMP，CCMP是目前最广泛使用来保证数据机密性的协议，在2012年，802.11修正协议中增加了新的数据机密性协议Galios/Count
Mode Protocol（GCMP）。这个修正协议也增加了在60GHz带宽的short-range信息交互，这需要一个能够快速计算的密码（fast
cipher），比如GCM。
现在802.11ad修正协议在WirelessGigabit（WiGig）中推广，而且预期在接下来几年被更快速广泛的采用。最后，802.11ac修正协议通过加入256位的key更佳的拓展了GCMP
当TKIP使用的时候，PTK的一部分：TK（暂时密钥）被分隔称为一个128位加密密钥，两个64位的MIC消息完整性检测key。第一个MIC使用在无线网热点对终端方向的消息发送，第二个则相反。这个加密使用了RC4，每个包密钥都是独特的，通过128位加密秘钥，发送者的MAC地址，和增长的48位nonce。Nonce每发送一个帧都会自动增长，用做重放计数器，当安装TK时会重置为1。通过Michael
算法来确认消息的权威性，但是Michael算法是可逆的，给一个明文和MIC值，就可以有效的恢复MIC密钥。
CCMP协议是基于AES在CCM模式下的加密方式（CBC-MAC的计数器模式）。这是一种身份验证加密，使用了Associated
Data（AEAD）算法，只要特定的Key中没有重复的初始化向量就是安全的。在CCMP中，这个初始化向量是发送者MAC地址，48位nonce和一些传输帧中额外flags的组合。这个nonce也会被用作接受者的重传计数器，每次发送后都会增加1，再TK重新安装则会被初始化为0.这样可以保证初始化向量不会重复。另外的，这个构造允许TK可以被直接做为信道两个方向交互的key。
GCMP协议是基于AES-GCM，意味着使用了同样的加密计数器模式，得到的密文使用GHASH功能进行验证。和CCMP相同，是一个AEAD加密，只要在特定的key中初始化向量没有重复就可以保证安全，在GCMP中nonce作用也一样，在安装TK之后会被置为0.通常保证初始化向量只使用一次，TK可以作为交互双方的密钥，两个消息传递方向使用TK作为key。一旦nonce被重复了，就有可能重构GHASH功能使用的验证密钥。
为了表示数据帧是通过数据机密性协议加密而且验证的，使用下面的符号标记
n
表示nonce（也就是重放计数器）。参数k表示key，表示单播流量中的PTK。为了向组地址发送流量：比如广播和组播帧，使用GTK（组密钥）。最后使用两个标记符
Data(payload) 表示向单一地址发送
GroupData(payload) 向多个地址（组地址发送）
**2.5 组密钥握手**
Authenticator
周期性刷新组密钥，而且向所有的客户端发送组密钥，使用这些组密钥来进行握手。这些握手环节被证明是安全的，在图2的最后阶段。Authenticator
初始化所有的握手通过发送组消息 message1 给所有的客户端。Supplicant通过回复组message
2来确认收了了新的组密钥。取决于实现，Authenticator安装GTK可以在发送group