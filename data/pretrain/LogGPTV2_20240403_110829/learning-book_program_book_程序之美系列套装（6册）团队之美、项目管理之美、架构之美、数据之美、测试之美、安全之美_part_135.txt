项目后期，所有工作项目都完成后，编码管道会继续发挥作用。改
变的是，不是工作项目而是管道填满了需要解决的Bug/缺陷。在第
15章，我们谈论Bug分类时一—关于如何处理Bug的决策制定流程
一会谈到这些问题。
追踪进度
追踪中盘进度最简单的记分板就是工作项目列表：直到完成每一项
进度表里的工作项目（达到适当的质量水平），中盘时段才结束
（见图14-5）。所有的中盘战略都涉及了解项目的状态，让团队保
持在正确的轨道上，并为成功的终盘阶段安排好所有的工作。已完
成工作项目的分数，是制定这些决策的重要数据。
工作项目
已完成
A
是
B
是
C
没有
D
没有
3
没有
图14-5：完成每一项进度表里的工作项目，中盘时段才结束。那
时，终盘阶段才开始。不会影响工作项目完成率的任何事情，绝不
应该比那些有影响的事情拥有优先级
我建议从简单的角度来看待项目，就像图14-5所示，让团队尽量看
到（对较大的项目，要分区表示工作项目完成的百分比）。如果有
团队内网或者万维网，就要明显展示工作项目进度摘要，并且每日
更新。为团队在重要的走廊里摆上一块大白板，在那里也放一个相
748
---
## Page 750
似的图表。每周进展状况会议或者大型团队会议，并始都要快速查
看整个大的团队的工作状况。因为工作项目应该在1-3天内完成，像
14-5那样的图表就要差不多以天为单位显示进度。应该鼓励众人利
用它来了解最近签入了哪些工作，接下来又要签入什么。
对于工作状态的次级数据，如每项工作的剩余天数，每个程序员还
有的工作天数等等，当然都要追踪。但是，不要让那些数据掩盖了
简单的观点。在中盘阶段，给团队提供方法以拥有对项目进展状况
的整体感觉，这点非常重要。个人通常会只对自已的局部区域，或
者每大工作接触的区域有一定的感觉。
在有效追踪进度上，当然还有更多的事情需要了解。我会在下一章
深入探讨这一点，那里Bug和趋势会显得非常重要。
击中移动中的目标
“没有战争是根据计划而胜利的，但是没有计划，战争也无法胜
利。”
Dwight D.Eisenhower
XP开发方法和其他方法之所以采用短循环的有力证据之一，就是方
向随时改变。使用短期并发循环，项目就能响应重大的方向变化
而不会失去工作的平衡，任何规划和设计能力都可以聚焦在切实的
短期需求。我认为这些都有合理性，致力于一致的短期胜利的根本
态度也是这样。但是，还另有真相：较长期的计划，即使很粗糙，
也倾向于让短期和中期改变更容易一些。
原因在于当变化发生时，原有的计划很少会被完全抛弃，改变（也
就是deltas）是相对于项目发展成什么样的一些根本思想来做的。原
有的计划越精确，即使是粗糙的计划，参考时就越有力，并使得这
些调整能够加快进行。这就是说，对抗事情改变的最有用的保险，
就是从并始就做个可以随着项目进展随时调整的计划。
“就我的观点，战争从未按计划进展。计划只是改变的共同基础。
每个人都应该知道计划，这样才能轻易地改变它，这点非常重
要......现代战争变化莫测，你必须尽快做出决策一而多数不是根
据计划。但至少，每个人都知道你的决策从何而来，然后也知道你
的决策将走向何方，或多或少是这样。”
749
---
## Page 751
DanLaner少将，以色列国防军司令官
对于希望达成目标的计划，应用它的技巧，就是绝不长期遵从而不
更新它。如果你找到合适的时间间隔，移动的目标就不会一次跑得
太远一一它们会在特定的时间，以特定的速度，朝特定的方向前
进。如果你的项目有多个里程碑或者阶段（见第2章），这些就是
你做调整的自然时间间隔（如果每个阶段都有计划好的更新设计时
间，你可以重新查看在第一个里程碑里完成但是又需要改变的事
项）即使是在三或六周的里程碑，你也可以找出一或两个中间点，
重新评价与目标和或需求有关的、可能改变的项目轨迹。因此，里
程碑的长度应该对应于变动性：方向越容易改变，里程碑的长度就
越短。
图14-6是一个简单的实例，表明做出调整以朝向移动中的目标。项
目从A开始，并且应该以B结束。如果项目做了两周之后（也许完成
了一个短期的里程碑），团队领导同意B的目标已经改变，项目必
须调整以继续朝向B。又过了两周，需要更多的调整，因此，就出
现新的更正行动。有的工作需要放弃，但是，尽早调整方向比起后
来调整会放弃很少的工作。如果这些移动和里程碑的终点/起点一
致，团队就有时间做些设计工作来弥补这些改变，增加工作项目以
修正之前的工作，然后，大踏步做出调整。
第1天
第15天
第30天
B
B
B
不
不
1
1
1
1
1
1
A)
A
A
图14-6：目标、需求和限制条件都会改变，但是如果理解改变的速
度和方向，采用中间步骤去追踪这些改变，那么，就可以管理改变
750
---
## Page 752
即使里程碑的突变不合理，编码管道仍然可以协助并发团队制定一
些可控的中期调整。因为这些中期的改变就发生在程序设计团队面
前的管道上，所以就会有缓冲。管道领先的时间越长（见图14
7），缓冲就越大。当然，假设有人（PM或者首席程序员）有时间
去管理管道，团队就不要完全停下里使方向发生改变。管道中只要
有足够的工作量（对的）就可以了。
实际的移动
可能支持的移动
B
B
覆盖的
区域
A
A
图14-7：每个计划都有一个范围，覆盖它所能支撑的变化。计划越
深或者越有洞察力（可预测可能的变化），覆盖的范围就越广
然而，这确实是假设变动没有从根本上偏离最初的规划；给定的规
划成果只能提供一定的移动能力（见图14-7）。如果新的需求或目
标跨过某个点，就必须做些新的重要设计工作和探索，不管编码管
道能支持多长的领先时间（或者，在某些情况下，不管下个里程碑
计划了多少设计时间）。例如，如果最初的计划是造面包烤箱，中
盘时可能会调整项目，造中型烤箱，但不会去造粒子加速器或油罐
车。
图14-7是一个粗糙的模型，显示项目有多少变化；某个区域代表变
动的空间，团队所付出的规划努力就是要把它找出来，以避免产生
新的重要工作。每个工作项目都可以在细微层次上面画出类似的图
表。根据程序员所采取的方法，他的计划可能会涵盖不同的层次，
以考虑对工作项目带来的需求/设计变动。
图147中有件不是很重要的蠢事。图中垂直方向表示时间的前后顺
序，这意味着涵盖的区域随着时间变化，提供了更多的移动机会，
751
---
## Page 753
但事实并非如此。考虑涵盖区域的更为准确的方式是，它会随着项
目并展而变动，根据项目所处的状态成长或萎缩。一般而言，涵盖
的区域会随时间的进展、项目的完成而萎缩。但是，每次的移动都
会改变有效的规划，并伴随着未来移动的可能范围。
处理神秘的管理
对健康组织中运转正常的项目而言，多数高层次的变动都会跟着项
目的里程碑（还是因为各个里程碑的长度，租略符合项目或组织的
变动性）。管理要有耐心并且成熟，在道使团队重新并始和重新调
整之前，一定要等到某个阶段完成才行。但即使在这些健康的组织
中，还是会有一些管理指令追使团队在中途发生变动，让他们连发
火的时间也没有。
通常，由于管理、客户或竞争因素等而要做过程的更正，要比因实
际决策变动而改变过程情况要多。有时，是在你的权力范围内召并
会议改变方向，而有时，你只能等待他人进行决策。无论是何种情
况，你在思索时，要考虑一个粗略的计划，思考如果具有威胁性的
变动成真时，你该做什么。在管理阶层做出重大决策之前，或者竞
争者做了正确的改变之前，你会发现墙上所写的某些东西，通常都
已提前几关或几周被想到一—如果你看了的话。你得依靠你的人际
关系和政治技巧，去取得你需要的信息，以避免你的项目受到破
坏。这无法永远避并，但时有时却可以。
利用你有的信息，定期对方向可能向哪移动，做最好的推测（要支
持特定技术吗？还是新的功能？或者新的目标？），然后初步拟定
你实现它要做哪些调整。这可以是非常粗略的一—例如，和首席程
序员进行简短的对话，谈论谁会牵涉其中：“Fred，除了我们已经用
的那些以外，要支持2.0API的话，还要做些什么？”你的目标并不是
新的战斗计划，而是对你和你的团队要采取的路线有个整体的感
觉。重新检查你对工作项目所排的优先级列表（请参阅第13章），
了解你是否已经考虑了你可能要做的新工作。
探讨变动的影响
如果变动的机率变得更高，你可以调整编码管道中的工作，让你准
备好面对变动。在国际象棋战略中，计划走每一步棋至少有两种不
同的方法：
752
---
## Page 754
保守的。寻找那些能让你在将来有很多延伸和选择的棋步。
积极的。完全执行你看得清的战略，并迫使对手变得被动。
对于项目，或者国际象棋，当你觉得比对手强时（例如，拥有神秘
的绝招或更有竞争性），就要采取积极进攻的方式。当你处于劣势
时，则保守倾向于是最好的办法。告知你的团队要保守行动，可能
会让他们的工作节奏慢下来，但那就是你买保险的代价。有时，积
极进取会道使其他人做出决策，同时，如果你对结果漠不关心，只
管有个快速的决策，那么积极的决策会有助于你，即使你的政治形
势处于劣势。
但是要注意，考虑调整并不需要额外的开发时间。或许有一种可替
代的算法，不仅在某个重要方面非常可靠，还更加灵活。只要问问
程序员或团队：“注意了，我担心客户八P要逼道我们去支持另一种