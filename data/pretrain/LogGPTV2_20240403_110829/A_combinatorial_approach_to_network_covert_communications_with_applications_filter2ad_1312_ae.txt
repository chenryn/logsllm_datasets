evade the detection based on the ﬁrst four ﬁlters according to
the discussion of Web Tap’s vulnerabilities in [15], we only
examine the delay time ﬁlter in our experiment.
From the web logs captured by ﬁve IRCache servers be-
tween 07/Aug/2006 to 03/Sep/2006, we obtain IRD series of
legitimate HTTP requests for a speciﬁc web site (according
to their domain names) for each particular source IP address,
resulting in an aggregate series of around n = 52 million IRDs
for all the source IP addresses. Similar to [15], we obtain
a subset of √n = 7155 elements in the aggregate series to
compute the derivative of IRDs and the running average of
the derivative.
After that, we instruct WebLeaks to mimic the subset of
IRDs and measure the resultant IRD for every pair of HTTP
requests injected by WebLeaks using method pair (,|) and
R = 10. To reduce the processing time, we consider only
those IRDs smaller than 120 seconds, which cover 82% of
the subset. Figure 11 shows the CDF of the derivative of
IRDs from IRCache’s HTTP traces and that from WebLeaks. It
shows clearly that WebLeaks can strictly mimic normal HTTP
IRDs and evade the detection.
0
10
l
)
e
a
c
s
g
o
l
,
s
d
n
o
c
e
s
(
D
R
I
f
o
e
v
i
t
a
v
i
r
e
D
−2
10
−4
10
−6
10
Derivative of IRD (IRCache)
Derivative of IRD (HTTPLeak−R)
Running average (IRCache)
0
10
1
10
IRD (seconds, log scale)
2
10
Fig. 11: CDFs of the IRDs’ derivatives.
WebLeaks, as a cross-layer covert channel to embed partial
information into TCP ﬂows, can also evade detection methods
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
483based on the TCP-layer IPDs due to two main reasons. First,
based on the measurement of 143, 333 HTTP requests from the
top 2000 web sites ranked by www.alexa.com, we found
that the sizes of more than 99% HTTP requests are less than
the default TCP MSS (i.e., 1460 bytes) [37]. That is, almost
all requests can be transmitted in one packet. Therefore, a
successful mimicking of IRDs implies a successful mimicking
of IPDs. Second, even if some requests are sent in more than
one packet, WebLeaks will not cause abnormal IPDs, because
it does not alter the packets’ timing information.
the Regularity test
[17], ǫ-similarity test
To evaluate ACKLeaks’s camouﬂage capability, we im-
plement
[17],
Kolmogorov-Smirnov (KS) test [18], EN test [8] and CCE
test [8], and applied them to the ACKLeaks traces. Following
the parameter settings in their original papers, we let the
Regularity test’s non-overlapping window size ω be 100 [17]
and ǫ-similarity test’s ǫ be 0.01 [17]. For the KS test, the
normal distribution of the inter-ACK packet delays (IADs) is
built from a set of around 10, 000, 000 IADs obtained from
10, 000 HTTP ﬂows randomly selected from the WIDE data
set [35], following what Gianvecchio et al. did in [18].
We use the traces of downloading a 10-MB ﬁle 100 times
from the Planeload node in Japan as normal HTTP samples.
Since ACKLeaks only affects TCP ACK packets in a TCP
ﬂow, we use each method to compute a score based on
the IADs in individual normal HTTP ﬂow. We then start
ACKLeaks when downloading the same ﬁle 100 times and
save the traces as ACKLeaks samples.
Cabuk et al. [17] classify a ﬂow as a covert channel if it
has a score smaller than a threshold in the Regularity test or
a score larger than another threshold in the ǫ-similarity test
[17]. Gianvecchio et al., on the other hand, classify a ﬂow as
a covert channel if its KS test score is larger than a threshold.
They also found that a covert timing channel has a score less
than a threshold in the EN test or a score that is either lower
or higher than thresholds in the CCE test [8].
Following these suggestions in their original papers, we
select the threshold of each detection algorithm by letting its
false positive rate be no more than 0.01. As shown in Table
III, the detection rates for ACKLeaks are very low (less than
0.03). In other words, ACKLeaks can successfully evade these
detection methods.
TABLE III: Detection rates on ACK packets per ﬂow.
Normal HTTP
ACKLeaks
Tests
False Positive
Detection Rate
Regularity ≤ 0.271
ǫ-similarity ≥ 88.97
KSTEST ≥ 0.481
EN ≤ 6.388
CCE ≥ 1.417
0.01
0.01
0.01
0.01
0.01
0
0.03
0
0.02
0
VI. RELATED WORK
Most storage channels use speciﬁcation-based approaches
to locate possible covers [38], [39]. Existing literature and
tools on storage channels have already covered many popular
protocols (e.g., IP [10], [39], TCP [10], [36], [40], SSH [41],
and HTTP [6]) and applications (e.g., Web counter [29],
VoIP [42]).
Existing timing channels employ either the absolute time
interval as the timing reference [17], or a single packet or
a group of packets as the timing reference [18]–[20], [43],
[44]. For example, the IP timing channel delivers bit 1 by
sending one packet during a predeﬁned time interval and
bit 0 by keeping silent [17]. Jitterbug encodes messages
into the inter-arrival time between two consecutive packets
[19]. Through mimicking TCP’s burstiness, TCPScript leaks
information through the number of back-to-back packets in
each burst [20].
Infranet lets an encoder select one out of K URLs to deliver
log2 K-bit information [5]. There are two major differences
between Infranet and WebLeaks. First, Infranet considers
neither the order of URLs nor the combinations of URLs and
web pages, thus having much lower capacity than WebLeaks.
Second, Infranet does not exploit TCP layer information to
increase capacity. Interested reader may refer to [45] for a
more thorough survey on covert channels.
To detect hidden data in protocols, models have been built to
capture anomalies in the statistical features of packet headers
[36] and the timing information of packets [8], [17], [18].
Detection schemes against HTTP-based covert channels scru-
tinize the content and timing information of HTTP requests
[15], [16], [28]. Borders and Prakash propose a framework to
quantify information leaks due to HTTP-based covert channels
[28]. Besides detection, another approach is to neutralize
covert channels by performing active operations on the trafﬁc,
for example, the protocol scrubbers [21].
Quantifying the capacities of nine methods is motivated
by the Twelvefold Way problem in the ﬁeld of Enumerative
Combinatorics [24] and its extension [46]. They refer to a
number of counting problems that count all the possible ways
of putting balls into urns and their results. We select the
cases that can be employed to design network covert channels
instead of applying all cases in [24], [46]. Moreover, we
design new ranking and unranking algorithm to realize the
transforming between combinations and their index.
Port knocking can also beneﬁt from our combinatorial
approach. More precisely, since the original port knocking
method needs to select a sequence of packets as the secret
for user authentication [47], it can have a much larger secret
space by adopting our combinatorial method.
VII. CONCLUSIONS
Unlike most existing network covert channels that consider
only individual network objects, we proposed a general combi-
natorial approach that exploits the relationship among network
objects to devise a wide spectrum of covert channels. Based
on two fundamental features of network objects, our approach
provides nine main methods and two generalization principles
for network covert communications. To illustrate our approach,
we applied it to the design of two novel covert channels:
WebLeaks and ACKLeaks. Both of them can leak information
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
484without modifying any network object. We implemented them
and conducted extensive experiments to evaluate their perfor-
mance and applied the state-of-the-art detection algorithms to
evaluate their camouﬂage capability. The experiment results
show that the combinatorial approach boosted up their data
rates and helped them evade the detection.
ACKNOWLEDGMENTS
We appreciate the anonymous reviewers for their quality
reviews. We thank Duane Wessels for allowing us to access
the NLANR traces. This work is partially supported by grants
GU-G386 and G-U669 from The Hong Kong Polytechnic
University. This material is based upon work supported in part
by the National Science Foundation under grant no. 0831300,
the Department of Homeland Security under contract no.
FA8750-08-2-0141, the Ofﬁce of Naval Research under grants
no. N000140710907 and no. N000140911042. Any opinions,
ﬁndings, and conclusions or recommendations expressed in
this material are those of the authors and do not necessarily
reﬂect
the views of the National Science Foundation, the
Department of Homeland Security, or the Ofﬁce of Naval
Research.
REFERENCES
[1] A. Young and M. Yung, “Deniable password snatching: on the possibility
of evasive electronic espionage,” in Proc. IEEE Symp. Security and
Privacy, 1997.
[2] NISCC Monthly Bulletin, “Phishing trojan plays ping-pong with cap-
tured data,” www.niscc.gov.uk/niscc/docs/re-20060831-00629.pdf, Au-
gust 2006.
[3] P. Henry, “Covert channels provided hackers the opportunity and the
means for the current distributed denial of service attacks,” CyberGuard
Corporation, 2000.
[4] F. Freiling, T. Holz, and G. Wicherski, “Botnet tracking: Exploring a
root-cause methodology to prevent distributed denial-of-service attacks,”
in Proc. ESORICS, 2005.
[5] N. Feamster, M. Balazinska, G. Harfst, H. Balakrishnan, and D. Karger,
“Infranet: Circumventing censorship and surveillance,” in Proc. USENIX
Security, 2002.
[6] M. Bauer, “New covert channels in HTTP: Adding unwitting Web
browsers to anonymity sets,” in Proc. ACM WPES, 2003.
[7] S. Burnett, N. Feamster, and S. Vempala, “Chipping away at censorship
with user-generated content,” in Proc. USENIX Security, 2010.
[8] S. Gianvecchio and H. Wang, “Detecting covert timing channels: An
entropy-based approach,” in Proc. ACM CCS, 2007.
[9] D. Figueiredo, B. Liu, V. Misra, and D. Towsley, “On the autocorrelation
structure of TCP trafﬁc,” Computer Networks, no. 3, 2002.
[10] K. Ahsan and D. Kundur, “Practical data hiding in TCP/IP,” in Proc.
ACM Workshop on Multimedia Security, 2002.
[11] R. Chakinala, A. Kumarasubramanian, R. Manokaran, G. Noubir,
C. Pandu Rangan, and R. Sundaram, “Steganographic communication
in ordered channels,” in Proc. Inform. Hiding, 2006.
[12] A. El-Atawy and E. Al-Shaer, “Building covert channels over the packet
reordering phenomenon,” in Proc. IEEE INFOCOM, 2009.
[13] X. Luo and R. Chang, “Novel approaches to end-to-end packet reorder-
ing measurement,” in Proc. ACM/USENIX IMC, 2005.
[14] X. Luo, E. Chan, and R. Chang, “Cloak: A ten-fold way for reliable
covert communications,” in Proc. ESORICS, 2007.
[15] K. Borders and A. Prakash, “Web Tap: Detecting covert Web trafﬁc,”
in Proc. ACM CCS, 2004.
[16] N. Schear, C. Kintana, Q. Zhang, and A. Vahdat, “Glavlit: Preventing
exﬁltration at wire speed,” in Proc. ACM HotNets-V, 2006.
[17] S. Cabuk, C. Brodley, and C. Shields, “IP covert timing channels: Design
and detection,” in Proc. ACM CCS, 2004.
[18] S. Gianvecchio, H. Wang, D. Wijesekera, and S. Jajodia, “Model-based
covert timing channels: Automated modeling and evasion,” in Proc.
RAID, 2008.
[19] G. Shah, A. Molina, and M. Blaze, “Keyboards and covert channels,”
in Proc. USENIX Security, 2006.
[20] X. Luo, E. Chan, and R. Chang, “TCP covert timing channels: Design
and detection,” in Proc. IFIP/IEEE DSN, 2008.
[21] D. Watson, M. Smart, G. Malan, and F. Jahanian, “Protocol scrubbing:
Network security through transparent ﬂow modiﬁcation,” IEEE/ACM
Trans. Net., 2004.
[22] T. Cover and J. Thomas, Elements of Information Theory, 2nd ed.
Wiley-Interscience, 2006.
[23] X. Luo, P. Zhou, E. Chan, R. Chang, and W. Lee, “A combinatorial ap-
proach to network covert communications with applications in web leak-
s (full version),” http://www.comp.polyu.edu.hk/∼csrchang/Leak11.pdf,
2011.
[24] C. Charalambides, Enumerative Combinatorics. Chapman Hall CRC,
2002.
[25] W. Myrvold and F. Ruskey, “Ranking and unranking permutations in
linear time,” Information Processing Letters, vol. 79, pp. 281–284, 2001.
[26] D. Kreher and D. Stinson, Combinatorial Algorithms: Generation,
Enumeration and Search. CRC press, 1998.
[27] H. Wilf,
“East
combinatorial
Side, West
families
to
Maple
http://www.cis.upenn.edu/˜wilf/lecnotes.html, 2002.
with
Side:
An
introduction
programming,”
[28] K. Borders and A. Prakash, “Quantifying information leaks in outbound
web trafﬁc,” in Proc. IEEE Symp. Security and Privacy, 2009.
[29] X. Luo, E. Chan, and R. Chang, “Crafting web counters into covert
channels,” in Proc. IFIP SEC, 2007.
[30] H. Lee, E. Chang, and M. Chan, “Pervasive random beacon in the
Internet for covert coordination,” in Proc. Inform. Hiding, 2005.
[31] NLANR, “Web caching project,” http://www.ircache.net.
[32] X. Luo, E. Chan, and R. Chang, “CLACK: A network covert channel
based on partial acknowledgment encoding,” in Proc. IEEE ICC, 2009.
[33] E. Zehavi and J. Wolf, “On runlength codes,” IEEE Trans. Inform.
Theory, vol. 34, 1988.
[34] T. Moon, Error correction coding: Mathematical methods and algo-
rithms.
John Wiley & Sons, 2005.
[35] WIDE data set, http://tracer.csl.sony.co.jp/mawi/.
[36] S. Murdoch and S. Lewis, “Embedding covert channels into TCP/IP,”
in Proc. Inform. Hiding, 2005.
[37] X. Luo, P. Zhou, E. Chan, W. Lee, R. Chang, and R. Perdisci, “HTTPOS:
Sealing information leaks with browser-side obfuscation of encrypted
ﬂows,” in Proc. ISOC NDSS, 2011.
[38] G. Fisk, M. Fisk, C. Papadopoulos, and J. Neil, “Eliminating steganog-
raphy in Internet trafﬁc with active wardens,” in Proc. Inform. Hiding,
2002.
[39] N. Lucena, G. Lewandowski, and S. Chapin, “Covert channels in IPv6,”
in Proc. PET Workshop, 2005.
[40] J. Giffen, R. Greenstadt, P. Litwack, and R. Tibbetts, “Covert messaging
through TCP timestamps,” in Proc. PET Workshop, 2002.
[41] N. Lucena, J. Pease, P. Yadollahpour, and S. Chapin, “Syntax and
semantics-preserving application-layer protocol steganography,” in Proc.
Inform. Hiding, 2004.
[42] T. Takahashi and W. Lee, “An assessment of VoIP covert channel
threats,” in Proc. SecureComm, 2007.
[43] V. Berk, A. Giani, and G. Cybenko, “Detection of covert channel
encoding in network packet delays,” Dartmouth College, Tech. Rep.
TR2005536, 2005.
[44] S. Sellke, C. Wang, S. Bagchi, and N. Shroff, “Covert TCP/IP timing
channels: Theory to implementation,” in Proc. IEEE INFOCOM, 2009.
[45] S. Zander, G. Armitage, and P. Branch, “A survey of covert channels
and countermeasures in computer network protocols,” IEEE Communi-
cations Surveys and Tutorials, March 2007.
[46] R. Proctor, “Let’s expand Rota’s twelvefold way for counting partitions,”
http://www.math.unc.edu/Faculty/rap/30FoldWay.pdf, June 2006.
[47] M. Krzywinski, “Port knocking: Network authentication across closed
ports,” SysAdmin Magazine, vol. 12, 2003.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
485