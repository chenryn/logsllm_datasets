### Security of the Group as a Whole

The security of a group is only as strong as its weakest link. If one subgroup uses a weak algorithm, the overall security of the group is compromised. Worse yet, members of that subgroup may be unaware of the use of the weak algorithm.

### Session Rekeying in Peer Communication

Session rekeying in peer communication is well-defined. Both endpoints actively participate in an exchange, resulting in the acceptance of a new key. Since both participants assert their acceptance, the subsequent use of the key is unambiguous. The issues, design, and vulnerabilities of peer key exchanges have been thoroughly researched and are well understood.

### Session Rekeying in Group Communication

Session rekeying in group communication is inherently more challenging. According to the group threat model, rekeying is triggered by security-relevant events, such as when a session key's lifetime is reached, following member joins and leaves, or to recover from the compromise of a group member. However, knowledge of these events is not always universally available.

Rekeying of the group must be synchronized. An arbitrary number of endpoints must agree on the new secret key and synchronize its subsequent use. For example, if a group has recently distributed a new session key, a member receiving a message encrypted under an old session key faces a dilemma: the message could either represent delayed delivery or be generated by an adversary who has gained access to the previous key.

### Synchronization and Distributed Consensus

Rekeying and the synchronization of policy are instances of distributed consensus. Agreement on the new session key or policy is achieved through group protocols. However, in general, distributed consensus algorithms are complex and resource-intensive. Many existing group systems attempt to avoid these costs by relaxing synchronization requirements.

One way to relax key synchronization requirements is to allow multiple session keys to be simultaneously valid. For instance, suspending data transmission during rekeying in a video conference is highly undesirable. Thus, a group may continue to use old session keys until consensus on the new key is reached. A policy supporting this environment should specify the amount of time an old session key may be used, thereby ensuring the minimal freshness of received messages. This approach and other relaxations to the key transition problem are discussed in [21].

### Synchronizing Policy

Policy synchronization is also essential. At any point during the session, the policy enforced by a group member must be identical to the one intended by the controller. If the enforced policy is not fresh and correct, the member may diverge from the session specification, potentially introducing vulnerabilities.

Synchronization requires that all received policies be fresh, authentic, and unmodified. The method for assessing policy freshness must conform to a predefined policy. For example, group members could verify that a policy revision number increases monotonically, and they would never accept a policy update with an unexpected revision number.

Group members must also verify that the policy has not been modified during dissemination, ensuring the integrity of received policies. This reduces to a requirement that each member can verify that a policy originated from the group controller. Any policy must contain evidence of its authenticity, such as a keyed message authentication code (HMAC) [18] or a digital signature [9].

### Principle 2: Only Authorized Entities Can Affect the Security Posture of the Group

Authorization in peer communication can be inferred from knowledge of the session key. In group communication, a more complex authorization model is required due to the various roles members may perform.

Groups commonly designate one or more entities as authorities. For example, an entity wishing to join the group communicates with an authorized admittance authority. Once the authority verifies the potential member's credentials, it allows the member into the group. Unless otherwise specified by policy, the admitted member should not have the authority to admit other members. The new group, including the new member, represents a new security context, with the new member trusted with the group key.

As identified in Table 1, many actions affect the group security context. Each of these actions must be associated with the set of entities authorized to perform them. Allowing an unauthorized entity to perform security-relevant actions can lead to vulnerabilities, such as:

- **Policy Creation**: An unauthorized entity can modify the policy, leading to insecure group operations.
- **Key Dissemination**: An unauthorized group controller can create a false group.
- **Initiate Rekey**: An unauthorized entity can perform a denial-of-service attack by continually rekeying the group.
- **Group Destruction**: An unauthorized destruction command can disband the group prematurely, representing a serious denial-of-service attack.

### Principle 3: Group Content Must Be Protected

Data security mechanisms provide confidentiality, authenticity, and integrity protection through cryptographic algorithms applied to session keys. The security of the group depends on the processes restricting access to session keys.

Access to session keys must be restricted to authorized entities. The access control policy is defined as part of the larger group policy. For example, a group policy might require a member to prove possession of a company-issued certificate before being admitted. The access control policy would then state that the entity must possess the private key of the certificate, the certificate must state that the organization is the desired company, and the certificate must be issued by the company’s certificate authority.

An admittance authority enforces the access control policy by verifying the certificate's organization and issuer fields, validating the signature, and checking the certificate revocation list. If successful, the member receives and uses the session key to communicate with the group.

If the group policy is enforced correctly and the underlying cryptographic algorithms are secure, group content protection is ensured. However, incorrect enforcement of authorization, access control, or data security policies can compromise the entire group's security.

### Principle 4: Groups Must Be Capable of Recovery from Security-Relevant Failures to a Secure State

Groups must be able to recover to a secure operating state when a subset of its membership is found to be untrustworthy. A policy must specify how compromise is detected and the mechanisms used for recovery.

Early systems disbanded immediately following compromise. More recent systems employ sophisticated rekeying approaches to recover from member compromise, excluding compromised members from the rekey process. Groups may also need to recover from non-compromise failures, such as network partitions, process crashes, and other issues. The mechanisms used for failure detection and recovery have unique security requirements, such as requiring authentic heartbeats for failure detection.

### Policy Specification and Enforcement in GSAKMP

#### Description

The Group Secure Association Key Management Protocol (GSAKMP) manages the security of a communications group throughout its lifecycle: initiation, maintenance, compromise recovery, and deletion. Policy is defined in the policy token data structure, which is distributed and enforced over specified protocol exchanges. Group content is protected by appropriate security mechanisms and session keys known only to current members.

In GSAKMP, group responsibilities are decomposed into authorized roles: Group Owner, Group Controller, Subgroup Controller, and Member. The rights attributed to these roles are presented in Table 2. The authorization criteria and verification mechanisms are defined in the policy token. In one instantiation of GSAKMP, security-relevant messages must be signed by the authorized entity.

The policy token, signed by the Group Owner, contains authorization, key management, and data protection rules, and defines the mechanisms used for verification. Potential group members receiving a token verify its authenticity, freshness, and integrity. Once verified, the token directs the member's behavior.

Groups are formed by multiple individual (peer) admittances. In the GSAKMP join exchange, the Group Controller presents the group’s token and verifies the potential member’s credentials. If accepted, the current group keys are securely downloaded to the newly accepted member, who inspects the token to ensure the group policy is appropriate for the information they wish to share.

Compromise recovery methods, such as the Logical Key Hierarchy (LKH), allow GSAKMP to securely and rapidly eject compromised members. The GSAKMP specifications are nearing maturity, with two IETF drafts submitted [15, 14], and a license-free reference architecture and documentation available at:
```
ftp://ftp.sparta.com/pub/columbia/gsakmp
```

#### Analysis

GSAKMP adheres to the group policy principles discussed in the previous section:

- **Principle 1: Consistent Enforcement of Group Policy**
  - GSAKMP enforces the use of equivalent mechanisms, with allowable cryptographic and key management techniques specified in the policy token.
  - GSAKMP provides methods for key and policy synchronization. Each joining member receives the keys needed for their assigned roles, and keying due to stale session keys or compromise recovery is accomplished using a single rekey message.
  - Members receive the most current policy token, and subordinate group controllers providing stale tokens are ejected, ensuring the group only accepts the most current token.

- **Principle 2: Only Authorized Entities Can Affect the Security Posture of the Group**
  - The policy token is verified as coming from a trusted source and is authentic.
  - Authorized entities are identified in the policy token.
  - Messages affecting the security posture must be issued by an authorized entity.
  - Each member can verify that the message was freshly signed and intended for them.
  - Therefore, the group will only act on fresh messages from authorized sources.

- **Principle 3: Group Content Must Be Protected**
  - Access to session keys is restricted to authorized entities, and the access control policy is defined as part of the larger group policy.
  - If the group policy is enforced correctly and the underlying cryptographic algorithms are secure, group content protection is ensured.

- **Principle 4: Recovery from Security-Relevant Failures**
  - GSAKMP specifies a group security policy through the policy token, which is passed to each group member and verified.
  - Compromise recovery methods, such as LKH, allow GSAKMP to securely and rapidly eject compromised members, ensuring the group can recover to a secure state.