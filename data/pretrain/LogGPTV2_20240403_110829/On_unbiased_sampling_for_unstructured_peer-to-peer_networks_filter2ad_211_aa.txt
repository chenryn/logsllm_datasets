# Unbiased Sampling for Unstructured Peer-to-Peer Networks

**Authors:**
- Daniel Stutzbach
- Reza Rejaie
- Nick G. Duffield
- Subhabrata Sen
- Walter Willinger

**Affiliations:**
- University of Oregon
- AT&T Labs—Research

## Abstract
This paper addresses the challenging problem of selecting representative samples of peer properties (e.g., degree, link bandwidth, number of files shared) in unstructured peer-to-peer (P2P) systems. Due to the large size and dynamic nature of these systems, measuring the quantities of interest on every peer is often prohibitively expensive, while sampling provides a natural means for estimating system-wide behavior efficiently. However, commonly-used sampling techniques for P2P systems tend to introduce considerable bias for two main reasons: the dynamic nature of peers can bias results towards short-lived peers, and the heterogeneous nature of the overlay topology can lead to bias towards high-degree peers.

We present a detailed examination of the ways that the behavior of P2P systems can introduce bias and suggest the Metropolized Random Walk with Backtracking (MRWB) as a viable and promising technique for collecting nearly unbiased samples. We conduct an extensive simulation study to demonstrate that the proposed technique works well under a wide variety of common P2P network conditions. Using the Gnutella network, we empirically show that our implementation of the MRWB technique yields more accurate samples than relying on commonly-used sampling techniques. Furthermore, we provide insights into the causes of the observed differences. The tool we have developed, ion-sampler, selects peer addresses uniformly at random using the MRWB technique. These addresses may then be used as input to another measurement tool to collect data on a particular property.

## Categories and Subject Descriptors
- C.2.4 [Computer–Communication Networks]: Distributed Systems—Distributed applications
- G.3 [Probability and Statistics]: Probabilistic algorithms
- C.2.3 [Computer–Communication Networks]: Network Operations—Network monitoring

## General Terms
- Algorithms, Experimentation, Measurement, Verification

## Keywords
- Peer-to-peer, Sampling

## 1. Introduction
The popularity and widespread use of P2P systems have motivated numerous empirical studies aimed at providing a better understanding of the temporal and topological properties of deployed P2P systems. However, due to the large scale and highly dynamic nature of many of these systems, directly measuring their global behavior is extremely challenging. Sampling is a natural approach for learning about these systems using lightweight data collection.

A basic objective is to devise an unbiased sampling method, i.e., one which selects any of the present peers with equal probability. Fulfilling this objective becomes highly non-trivial when the structure of the P2P system changes during the measurements. First-generation measurement studies of P2P systems typically relied on ad-hoc sampling techniques and provided valuable information concerning basic system behavior. However, lacking any critical assessment of the quality of these sampling techniques, the measurements resulting from these studies may be biased, leading to incorrect or misleading conclusions.

In this paper, we primarily consider the challenging problem of obtaining unbiased samples from unstructured P2.P systems, where peers select neighbors through a predominantly random process. Most popular P2P systems in use today belong to this unstructured category. For structured P2P systems such as Chord and CAN, knowledge of the structure significantly facilitates unbiased sampling, as discussed in Section 7.

The main contributions of this paper are:
1. A detailed examination of the ways that the topological and temporal qualities of P2P systems can introduce bias.
2. An in-depth exploration of the applicability of the Metropolized Random Walk with Backtracking (MRWB), a variation of the Metropolis–Hastings method. Our study indicates that MRWB results in nearly unbiased samples under a wide variety of commonly encountered P2P network conditions. The technique assumes that the P2P system provides some mechanism to query a peer for a list of its neighbors, a capability provided by most widely deployed P2P systems.

We implemented the proposed sampling technique into a tool called ion-sampler. Our evaluations show that MRWB yields more accurate samples than previously considered sampling techniques. We quantify the observed differences, explore underlying causes, and discuss the implications on accurate inference of P2P properties and high-fidelity modeling of P2P systems. While our focus is on P2P networks, many of our results apply to any large, dynamic, undirected graph where nodes may be queried for a list of their neighbors.

Building on our earlier formulation, the basic problem in sampling P2P networks concerns the selection of representative samples of peer properties such as peer degree, link bandwidth, or the number of files shared. To measure peer properties, any sampling technique needs to locate a set of peers in the overlay and then gather data about the desired properties.

An unbiased sampling technique will select any of the peers present with equal probability. While relatively straightforward in a static and known environment, this objective poses considerable problems in a highly dynamic setting like P2P systems, which can easily lead to significant measurement bias for two reasons. The first cause of sampling bias derives from the temporal dynamics of these systems, whereby new peers can arrive and existing peers can depart at any time. Locating a set of peers and measuring their properties takes time, and during that time the peer constituency is likely to change. In Section 3, we show how this often leads to bias towards short-lived peers and explain how to overcome this difficulty. The second significant cause of bias has to do with the connectivity structure of P2P systems. As a sampling program explores a given topological structure, each traversed link is in general more likely to lead to a high-degree peer than a low-degree peer, significantly biasing peer selection towards high-degree peers. We describe and evaluate different techniques for traversing static overlays to select peers in Section 4 and find that the Metropolized Random Walk (MRW) collects unbiased samples. In Section 5, we adapt MRW for dynamic overlays by adding backtracking and demonstrate its viability and effectiveness when the causes for both temporal and topological bias are present. We show via simulations that the MRWB technique works well and produces nearly unbiased samples under a variety of circumstances commonly encountered in actual P2P systems.

Finally, in Section 6, we describe the implementation of the ion-sampler tool based on MRWB and empirically evaluate its accuracy through comparison with complete snapshots of Gnutella taken with Cruiser, as well as compare it with results from previously used, more ad-hoc, sampling techniques. Section 7 discusses important questions such as how many samples to collect, when sampling with a known bias may be desirable, and outlines a practical solution to obtaining unbiased samples for structured P2P systems. Section 8 concludes the paper with a summary of our findings and plans for future work.

## 2. Related Work
The phrase "graph sampling" has different meanings in different contexts. We provide an overview of some of the different meanings of graph sampling to place our work in the context of other research on sampling graphs. Sampling from a class of graphs has been well studied in the graph theory literature, where the main objective is to prove that for a class of graphs sharing some property (e.g., same node degree distribution), a given random algorithm is capable of generating all graphs in the class. Cooper et al. used this approach to show that their algorithm for overlay construction generates graphs with good properties. Our objective is quite different; instead of sampling a graph from a class of graphs, our concern is sampling peers (i.e., vertices) from a largely unknown and dynamically changing graph.

Others have used sampling to extract information about graphs (e.g., selecting representative subgraphs from a large, intractable graph) while maintaining properties of the original structure. Sampling is also frequently used as a component of efficient, randomized algorithms. However, these studies assume complete knowledge of the graphs in question. Our problem is quite different in that we do not know the graphs in advance.

A closely related problem to ours is sampling Internet routers by running traceroute from a few hosts to many destinations for the purpose of discovering the Internet's router-level topology. Using simulation and analysis, research has shown that traceroute measurements can result in measurement bias, supporting the inference of power law-type degree distributions irrespective of the true nature of the underlying degree distribution. A common feature of our work and the study of the traceroute technique is that both efforts require an evaluation of sampling techniques without complete knowledge of the true nature of the underlying connectivity structure. However, exploring the router topology and P2P topologies differ in their basic operations for graph exploration. In the case of traceroute, the basic operation is "What is the path to this destination?". In P2P, the basic operation is "What are the neighbors of this peer?". Additionally, the Internet's router-level topology changes at a much slower rate than the overlay topology of P2P networks.

Another closely related problem is selecting Web pages uniformly at random from the set of all Web pages. Web pages naturally form a graph, with hyperlinks forming edges between pages. Unlike P2P networks, the Web graph is directed and only outgoing links are easily discovered. Much of the work on sampling Web pages therefore focuses on estimating the number of incoming links to facilitate degree correction. Unlike peers in P2P systems, not much is known about the temporal stability of Web pages, and temporal causes of sampling bias have received little attention in past measurement studies of the Web.

Several properties of random walks on graphs have been extensively studied analytically, such as the access time, cover time, and mixing time. While these properties have many useful applications, they are only well-defined for static graphs. To our knowledge, the application of random walks as a method of selecting nodes uniformly at random from a dynamically changing graph has not been studied.

A number of papers have made use of random walks as a basis for searching unstructured P2P networks. However, searching simply requires locating a certain piece of data anywhere along the walk and is not particularly concerned if some nodes are preferred over others. Some studies additionally use random walks as a component of their overlay-construction algorithm.

Recent work by Leskovec et al. discusses the evolution of graphs over time and focuses on empirically observed properties such as densification (i.e., networks become denser over time) and shrinking diameter (i.e., as networks grow, their diameter decreases) and on new graph generators that account for these properties. However, the changes they observe occur on the timescale of years, while we are concerned with short timescale events (e.g., minutes). Additionally, the graphs they examine are not P2P networks and their properties are by and large inconsistent with the design and usage of actual P2P networks. Hence, the graph models proposed in their work are not appropriate for our purpose.

Awan et al. also address the problem of gathering uniform samples from P2P networks. They examine several techniques, including the Metropolis–Hastings method, but only evaluate the techniques over static power-law graphs. Their formulation of the Metropolis–Hastings method, as well as the Random Weight Distribution method which they advocate, require special underlying support from the P2P application. We implement Metropolis–Hastings in such a way that it relies only on being able to discover a peer's neighbors, a simple primitive operation commonly found in existing P2P networks, and introduce backtracking to cope with departed peers. We also conduct a much more extensive evaluation of the proposed MRWB method. In particular, we generalize our formulation reported in [40] by evaluating MRWB over dynamically changing graphs with a variety of topological properties. We also perform empirical validations over an actual P2P network.

## 3. Sampling with Dynamics
We develop a formal and general model of a P2P system as follows. If we take an instantaneous snapshot of the system at time \( t \), we can view the overlay as a graph \( G(V, E) \) with the peers as vertices and connections between the peers as edges. Extending this notion, we incorporate the dynamic aspect by viewing the system as an infinite set of time-indexed graphs, \( G_t = G(V_t, E_t) \). The most common approach for sampling from this set of graphs is to define a measurement window, \([t_0, t_0 + \Delta]\), and select peers uniformly at random from the set: \( V_{t_0, t_0 + \Delta} = \bigcup_{t=t_0}^{t_0 + \Delta} V_t \). Thus, we do not distinguish between occurrences of the same peer at different times.

This formulation is appropriate if peer session lengths are exponentially distributed (i.e., memoryless). However, existing measurement studies show session lengths are heavily skewed, with many peers being present for just a short time (a few minutes) while other peers remain in the system for a very long time (i.e., longer than \(\Delta\)). As a consequence, as \(\Delta\) increases, the set \( V_{t_0, t_0 + \Delta} \) includes an increasingly large fraction of short-lived peers.

A simple example may be illustrative. Suppose we wish to observe the number of files shared by peers. In this example system, half the peers are up all the time and have many files, while the other peers remain for around 1 minute and are immediately replaced by new short-lived peers who have few files. The technique used by most studies would observe the system for a long time (\(\Delta\)) and incorrectly conclude that most of the peers in the system have very few files. Moreover, their results will depend on how long they observe the system. The longer the measurement window, the larger the fraction of observed peers with few files.

One fundamental problem of this approach is that it focuses on sampling peers instead of peer properties. It selects each sampled vertex at most once. However, the property at the vertex may change with time. Our goal should not be to select a vertex \( v_i \in V_{t_0, t_0 + \Delta} \), but rather to sample the property at \( v_i \) at a particular instant \( t \). Thus, we distinguish between occurrences of the same peer at different times: samples \( v_i, t \) and \( v_i, t' \) gathered at distinct times \( t \neq t' \) are viewed as distinct, even when they come from the same peer. The key difference is that it must be possible to sample from the same peer more than once, at different points in time. Using the formulation \( v_i, t \in V_t, t \in [t_0, t_0 + \Delta] \), the sampling technique will not be biased by the dynamics of peer behavior, because the sample set is decoupled from peer session lengths. To our knowledge, no prior P2P measurement studies relying on sampling make this distinction.

Returning to our simple example, our approach will correctly select long-lived peers half the time and short-lived peers half the time. When the samples are examined, they will show that half of the peers in the system at any given moment have many files while half of the peers have few files, which is exactly correct.

Another problem is that using a large \(\Delta\) captures the average behavior of the system, which may not reflect the true state of the system at any particular moment. In particular, it precludes the study of how the system as a whole evolves, such as due to the time-of-day effect or a flash crowd. A better approach would be to gather several series of measurements, each over some short \(\Delta\), then compare them. If \(\Delta\) is sufficiently small, such that the distribution of the property under consideration does not change significantly during the measurement window, then we may relax the constraint of choosing \( t \) uniformly at random from \([t_0, t_0 + \Delta]\).

We still have the significant problem of selecting a peer uniformly at random from those present at a particular time. We begin to address this problem in the next section.

## 4. Sampling from Static Graphs
We now turn our attention to topological causes of bias. Towards this end, we momentarily set aside the temporal issues by assuming a static, unchanging graph. The selection process begins with knowledge of one peer (vertex) and progressively queries peers for a list of neighbors. The goal is to select peers uniformly at random. In any graph-exploration problem, we have a set of visited peers (vertices) and a front of unexplored neighboring peers. There are two ways in which algorithms differ: (i) how to choose the next peer to explore, and (ii) which subset of the explored peers to select as samples. Prior studies use simple breadth-first or depth-first approaches to explore the graph and select all explored peers. These approaches suffer from several problems:
- The discovered peers are correlated by their neighbor relationships.
- Peers with higher degree are more likely to be selected.
- Because they never visit the same peer twice, they will introduce bias when used in a dynamic setting as described in Section 3.

**Random Walks:** A better candidate solution is the random walk, which has been extensively studied in the graph theory literature. We briefly summarize the key terminology and results relevant to sampling. The transition matrix \( P(x, y) \) describes the probability of transitioning to peer \( y \) if the walk is currently at peer \( x \):

\[ P(x, y) = 
\begin{cases} 
\frac{1}{\text{degree}(x)} & \text{if } y \text{ is a neighbor of } x, \\
0 & \text{otherwise}
\end{cases}
\]

If the vector \( v \) describes the probability of currently being at each peer, then the vector \( v' = vP \) describes the probability after taking one additional step. Likewise, \( vP^r \) describes the probability after taking \( r \) steps. As long as the graph is connected and not bipartite, the probability of being at any particular node, \( x \), converges to a stationary distribution:

\[ \pi(x) = \lim_{r \to \infty} (vP^r)(x) = \frac{\text{degree}(x)}{2 \cdot |E|} \]

In other words, if we select a peer as a sample every \( r \) steps, for sufficiently large \( r \), we have the following good properties:
- The information stored in the starting vector, \( v \), is lost, through the repeated selection of random neighbors.
- The probability of selecting any peer converges to the stationary distribution, which is proportional to the degree of the peer.

Table 1 shows the Kolmogorov-Smirnov test statistic for various techniques over static graphs. Values above \( 1.07 \times 10^{-4} \) lie in the rejection region at the 5% level, indicating that the random walk and Metropolis–Hastings methods perform significantly better in terms of producing unbiased samples compared to breadth-first search and other simple methods.

| Technique | Erdös–Rényi | Watts–Strogatz | Barabási–Albert |
|-----------|-------------|----------------|-----------------|
| Breadth-First Search | 4.54 × 10^-4 | 2.73 × 10^-3 | 2.77 × 10^-3 |
| Random Walk | 3.18 × 10^-4 | 1.57 × 10^-3 | 2.84 × 10^-3 |
| Metropolis–Hastings | 5.97 × 10^-5 | 5.79 × 10^-5 | 5.22 × 10^-5 |

In the next sections, we will extend these ideas to dynamic graphs and introduce the Metropolized Random Walk with Backtracking (MRWB) as a robust and effective sampling technique for unstructured P2P networks.