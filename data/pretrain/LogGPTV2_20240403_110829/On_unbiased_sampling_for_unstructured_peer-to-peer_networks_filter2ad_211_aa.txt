title:On unbiased sampling for unstructured peer-to-peer networks
author:Daniel Stutzbach and
Reza Rejaie and
Nick G. Duffield and
Subhabrata Sen and
Walter Willinger
On Unbiased Sampling for Unstructured Peer-to-Peer
Networks
Daniel Stutzbach, Reza Rejaie
{agthorr,reza}@cs.uoregon.edu
University of Oregon
ABSTRACT
This paper addresses the diﬃcult problem of selecting repre-
sentative samples of peer properties (e.g., degree, link band-
width, number of ﬁles shared) in unstructured peer-to-peer
systems. Due to the large size and dynamic nature of these
systems, measuring the quantities of interest on every peer is
often prohibitively expensive, while sampling provides a nat-
ural means for estimating system-wide behavior eﬃciently.
However, commonly-used sampling techniques for measur-
ing peer-to-peer systems tend to introduce considerable bias
for two reasons. First, the dynamic nature of peers can bias
results towards short-lived peers, much as naively sampling
ﬂows in a router can lead to bias towards short-lived ﬂows.
Second, the heterogeneous nature of the overlay topology
can lead to bias towards high-degree peers.
We present a detailed examination of the ways that the
behavior of peer-to-peer systems can introduce bias and
suggest the Metropolized Random Walk with Backtracking
(MRWB) as a viable and promising technique for collecting
nearly unbiased samples. We conduct an extensive simu-
lation study to demonstrate that the proposed technique
works well for a wide variety of common peer-to-peer net-
work conditions. Using the Gnutella network, we empiri-
cally show that our implementation of the MRWB technique
yields more accurate samples than relying on commonly-
used sampling techniques. Furthermore, we provide insights
into the causes of the observed diﬀerences. The tool we have
developed, ion-sampler, selects peer addresses uniformly at
random using the MRWB technique. These addresses may
then be used as input to another measurement tool to collect
data on a particular property.
Categories and Subject Descriptors
C.2.4 [Computer–Communication Networks]: Distri-
buted Systems—Distributed applications; G.3 [Probability
and Statistics]: Probabilistic algorithms; C.2.3 [Compu-
ter–Communication Networks]: Network Operations—
Network monitoring
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’06, October 25–27, 2006, Rio de Janeiro, Brazil.
Copyright 2006 ACM 1-59593-561-4/06/0010 ...$5.00.
Nick Dufﬁeld, Subhabrata Sen,
{dufﬁeld,sen,walter}@research.att.com
Walter Willinger
AT&T Labs—Research
General Terms
Algorithms, Experimentation, Measurement, Veriﬁcation
Keywords
Peer-to-peer, Sampling
1 Introduction
The popularity and wide-spread use of peer-to-peer systems
has motivated numerous empirical studies aimed at provid-
ing a better understanding of the temporal and topological
properties of deployed peer-to-peer systems. However, due
to the large scale and highly dynamic nature of many of
these systems, directly measuring their global behavior is
extremely challenging. Sampling is a natural approach for
learning about these systems using light-weight data collec-
tion.
A basic objective is to devise an unbiased sampling method,
i.e., one which selects any of the present peers with equal
probability. Fulﬁlling this objective becomes highly non-
trivial when the structure of the peer-to-peer system changes
underneath the measurements. First-generation measure-
ment studies of P2P systems typically relied on ad-hoc sam-
pling techniques (e.g., [4, 33]) and provided valuable infor-
mation concerning basic system behavior. However, lacking
any critical assessment of the quality of these sampling tech-
niques, the measurements resulting from these studies may
be biased and consequently our understanding of P2P sys-
tems may be based on incorrect or misleading conclusions.
In this paper we primarily consider the challenging prob-
lem of obtaining unbiased samples from unstructured P2P
systems, where peers select neighbors through a predomi-
nantly random process. Most popular P2P systems in use
today belong to this unstructured category. For structured
P2P systems such as Chord [35] and CAN [30], knowledge
of the structure signiﬁcantly facilitates unbiased sampling
as we discuss in Section 7.
The main contributions of this paper are (i) a detailed
examination of the ways that the topological and temporal
qualities of peer-to-peer systems can introduce bias and (ii)
an in-depth exploration of the applicability of a sampling
technique called the Metropolized Random Walk with Back-
tracking (MRWB), representing a variation of the Metropolis–
Hastings method [8,14,28]. Our study indicates that MRWB
results in nearly unbiased samples under a wide variety of
commonly encountered peer-to-peer network conditions. The
technique assumes that the P2P system provides some mech-
anism to query a peer for a list of its neighbors: a capability
provided by most widely deployed P2P systems. We also
implemented the proposed sampling technique into a tool
called ion-sampler. Our evaluations show that MRWB
yields more accurate samples than previously considered
sampling techniques. We quantify the observed diﬀerences,
explore underlying causes, and discuss the implications on
accurate inference of P2P properties and high-ﬁdelity mod-
eling of P2P systems. While our focus is on P2P networks,
many of our results apply to any large, dynamic, undirected
graph where nodes may be queried for a list of their neigh-
bors.
Building on our earlier formulation in [40], the basic prob-
lem in sampling P2P networks concerns the selection of rep-
resentative samples of peer properties such as peer degree,
link bandwidth, or the number of ﬁles shared. To measure
peer properties, any sampling technique needs to locate a
set of peers in the overlay and then gather data about the
desired properties.
An unbiased sampling technique will select any of the
peers present with equal probability. While relatively straight-
forward in a static and known environment, this objective
poses considerable problems in a highly dynamic setting
like P2P systems, which can easily lead to signiﬁcant mea-
surement bias for two reasons. The ﬁrst cause of sampling
bias derives from the temporal dynamics of these systems,
whereby new peers can arrive and existing peers can depart
at any time. Locating a set of peers and measuring their
properties takes time, and during that time the peer con-
stituency is likely to change. In Section 3, we show how this
often leads to bias towards short-lived peers and explain how
to overcome this diﬃculty. The second signiﬁcant cause of
bias has to do with the connectivity structure of P2P sys-
tems. As a sampling program explores a given topologi-
cal structure, each traversed link is in general more likely
to lead to a high-degree peer than a low-degree peer, sig-
niﬁcantly biasing peer selection towards high-degree peers.
We describe and evaluate diﬀerent techniques for traversing
static overlays to select peers in Section 4 and ﬁnd that the
Metropolized Random Walk (MRW) collects unbiased sam-
ples. In Section 5, we adapt MRW for dynamic overlays by
adding backtracking and demonstrate its viability and eﬀec-
tiveness when the causes for both temporal and topological
bias are present. We show via simulations that the MRWB
technique works well and produces nearly unbiased samples
under a variety of circumstances commonly encountered in
actual P2P systems.
Finally, in Section 6 we describe the implementation of the
ion-sampler tool based on MRWB and empirically evaluate
its accuracy through comparison with complete snapshots
of Gnutella taken with Cruiser [37], as well as compare it
with results from previously used, more ad-hoc, sampling
techniques. Section 7 discusses some important questions
such as how many samples to collect, when sampling with a
known bias may be desirable, and outlines a practical solu-
tion to obtaining unbiased samples for structured P2P sys-
tems. Section 8 concludes the paper with a summary of our
ﬁndings and plans for future work.
2 Related Work
The phrase “graph sampling” means diﬀerent things in dif-
ferent contexts. We provide an overview of some of the
diﬀerent meanings of graph sampling to place our work in
the context of other research on sampling graphs. Sampling
from a class of graphs has been well studied in the graph the-
ory literature [5, 17], where the main objective is to prove
that for a class of graphs sharing some property (e.g., same
node degree distribution), a given random algorithm is ca-
pable of generating all graphs in the class. Cooper et al. [9]
used this approach to show that their algorithm for overlay
construction generates graphs with good properties. Our
objective is quite diﬀerent; instead of sampling a graph from
a class of graphs our concern is sampling peers (i.e., vertices)
from a largely unknown and dynamically changing graph.
Others have used sampling to extract information about
graphs (e.g., selecting representative subgraphs from a large,
intractable graph) while maintaining properties of the origi-
nal structure [19,20,36]. Sampling is also frequently used as
a component of eﬃcient, randomized algorithms [42]. How-
ever, these studies assume complete knowledge of the graphs
in question. Our problem is quite diﬀerent in that we do not
know the graphs in advance.
A closely related problem to ours is sampling Internet
routers by running traceroute from a few hosts to many
destinations for the purpose of discovering the Internet’s
router-level topology. Using simulation [21] and analysis [1],
research has shown that traceroute measurements can result
in measurement bias in the sense that the obtained samples
support the inference of power law-type degree distributions
irrespective of the true nature of the underlying degree dis-
tribution. A common feature of our work and the study
of the traceroute technique [1, 21] is that both eﬀorts re-
quire an evaluation of sampling techniques without complete
knowledge of the true nature of the underlying connectiv-
ity structure. However, exploring the router topology and
P2P topologies diﬀer in their basic operations for graph-
exploration. In the case of traceroute, the basic operation is
“What is the path to this destination?”. In P2P, the basic
operation is “What are the neighbors of this peer?”. In addi-
tion, the Internet’s router-level topology changes at a much
slower rate than the overlay topology of P2P networks.
Another closely related problem is selecting Web pages
uniformly at random from the set of all Web pages [3,15,32].
Web pages naturally form a graph, with hyper-links form-
ing edges between pages. Unlike peer-to-peer networks, the
Web graph is directed and only outgoing links are easily dis-
covered. Much of the work on sampling Web pages there-
fore focuses on estimating the number of incoming links,
to facilitate degree correction. Unlike peers in peer-to-peer
systems, not much is known about the temporal stability
of Web pages, and temporal causes of sampling bias have
received little attention in past measurement studies of the
Web.
Several properties of random walks on graphs have been
extensively studied analytically [26], such as the access time,
cover time, and mixing time. While these properties have
many useful applications, they are only well-deﬁned for static
graphs. To our knowledge the application of random walks
as a method of selecting nodes uniformly at random from a
dynamically changing graph has not been studied.
A number of papers [7,11,27,43] have made use of random
walks as a basis for searching unstructured P2P networks.
However, searching simply requires locating a certain piece
of data anywhere along the walk, and is not particularly
concerned if some nodes are preferred over others. Some
studies [11, 43] additionally use random walks as a compo-
nent of their overlay-construction algorithm.
Recent work by Leskovec et al. [23] discusses the evo-
lution of graphs over time and focuses on empirically ob-
served properties such as densiﬁcation (i.e., networks be-
come denser over time) and shrinking diameter (i.e., as net-
works grow, their diameter decreases) and on new graph
generators that account for these properties. However, the
changes they observe occur on the time-scale of years, while
we are concerned with short time-scale events (e.g., min-
utes). Additionally, the graphs they examine are not P2P
networks and their properties are by and large inconsistent
with the design and usage of actual P2P networks. Hence,
the graph models proposed in [23] are not appropriate for
our purpose.
Awan et al. [2] also address the problem of gathering
uniform samples from peer-to-peer networks. They exam-
ine several techniques, including the Metropolis–Hastings
method, but only evaluate the techniques over static power-
law graphs. Their formulation of the Metropolis–Hastings
method, as well as the Random Weight Distribution method
which they advocate, require special underlying support from
the peer-to-peer application. We implement Metropolis–
Hastings in such a way that it relies only on being able
to discover a peer’s neighbors, a simple primitive operation
commonly found in existing peer-to-peer networks, and in-
troduce backtracking to cope with departed peers. We also
conduct a much more extensive evaluation of the proposed
MRWB method. In particular, we generalize our formula-
tion reported in [40] by evaluating MRWB over dynamically
changing graphs with a variety of topological properties. We
also perform empirical validations over an actual P2P net-
work.
3 Sampling with Dynamics
We develop a formal and general model of a P2P system
as follows. If we take an instantaneous snapshot of the sys-
tem at time t, we can view the overlay as a graph G(V, E)
with the peers as vertices and connections between the peers
as edges. Extending this notion, we incorporate the dy-
namic aspect by viewing the system as an inﬁnite set of
time-indexed graphs, Gt = G(Vt, Et). The most common
approach for sampling from this set of graphs is to deﬁne
a measurement window, [t0, t0 + Δ], and select peers uni-
Vt. Thus,
formly at random from the set: Vt0,t0+Δ =
we do not distinguish between occurrences of the same peer
at diﬀerent times.
St0+Δ
t=t0
This formulation is appropriate if peer session lengths
are exponentially distributed (i.e., memoryless). However,
existing measurement studies [16, 29, 33, 39] show session
lengths are heavily skewed, with many peers being present
for just a short time (a few minutes) while other peers re-
main in the system for a very long time (i.e., longer than Δ).
As a consequence, as Δ increases, the set Vt0,t0+Δ includes
an increasingly large fraction of short-lived peers.
A simple example may be illustrative. Suppose we wish to
observe the number of ﬁles shared by peers. In this example
system, half the peers are up all the time and have many
ﬁles, while the other peers remain for around 1 minute and
are immediately replaced by new short-lived peers who have
few ﬁles. The technique used by most studies would observe
the system for a long time (Δ) and incorrectly conclude
that most of the peers in the system have very few ﬁles.
Moreover, their results will depend on how long they observe
the system. The longer the measurement window, the larger
the fraction of observed peers with few ﬁles.
t=t0
be to select a vertex vi ∈ St0+Δ
One fundamental problem of this approach is that it fo-
cuses on sampling peers instead of peer properties. It selects
each sampled vertex at most once. However, the property
at the vertex may change with time. Our goal should not
Vt, but rather to sample
the property at vi at a particular instant t. Thus, we dis-
tinguish between occurrences of the same peer at diﬀerent
times: samples vi,t and vi,t(cid:2) gathered at distinct times t (cid:3)= t(cid:2)
are viewed as distinct, even when they come from the same
peer. The key diﬀerence is that it must be possible to sam-
ple from the same peer more than once, at diﬀerent points
in time. Using the formulation vi,t ∈ Vt, t ∈ [t0, t0 + Δ],
the sampling technique will not be biased by the dynamics
of peer behavior, because the sample set is decoupled from
peer session lengths. To our knowledge, no prior P2P mea-
surement studies relying on sampling make this distinction.
Returning to our simple example, our approach will cor-
rectly select long-lived peers half the time and short-lived
peers half the time. When the samples are examined, they
will show that half of the peers in the system at any given
moment have many ﬁles while half of the peers have few
ﬁles, which is exactly correct.
Another problem is that using a large Δ captures the av-
erage behavior of the system, which may not reﬂect the true
state of the system at any particular moment. In particu-
lar, it precludes study of how the system as a whole evolves,
such as due to the time-of-day eﬀect or a ﬂash crowd. A bet-
ter approach would be to gather several series of measure-
ments, each over some short Δ, then compare them. If Δ is
suﬃciently small, such that the distribution of the property
under consideration does not change signiﬁcantly during the
measurement window, then we may relax the constraint of
choosing t uniformly at random from [t0, t0 + Δ].
We still have the signiﬁcant problem of selecting a peer
uniformly at random from those present at a particular time.
We begin to address this problem in the next section.
4 Sampling from Static Graphs
We now turn our attention to topological causes of bias. To-
wards this end, we momentarily set aside the temporal is-
sues by assuming a static, unchanging graph. The selection
process begins with knowledge of one peer (vertex) and pro-
gressively queries peers for a list of neighbors. The goal is to
select peers uniformly at random. In any graph-exploration
problem, we have a set of visited peers (vertices) and a front
of unexplored neighboring peers. There are two ways in
which algorithms diﬀer: (i) how to chose the next peer to
explore, and (ii) which subset of the explored peers to select
as samples. Prior studies use simple breadth-ﬁrst or depth-
ﬁrst approaches to explore the graph and select all explored
peers. These approaches suﬀer from several problems:
• The discovered peers are correlated by their neighbor
• Peers with higher degree are more likely to be selected.
• Because they never visit the same peer twice, they
will introduce bias when used in a dynamic setting as
described in Section 3.
relationship.
Random Walks: A better candidate solution is the ran-
dom walk, which has been extensively studied in the graph
theory literature (for an excellent survey see [26]). We brieﬂy
summarize the key terminology and results relevant to sam-
pling. The transition matrix P (x, y) describes the probabil-
Breadth-First Search
Random Walk
Metropolis–Hastings
Erd¨os–R´enyi
4.54 · 10
−4
3.18 · 10
−4
5.97 · 10
−5
Gnutella Watts–Strogatz Barab´asi–Albert
2.73 · 10
1.57 · 10
5.79 · 10
2.77 · 10
2.84 · 10
5.22 · 10
4.73
7.64
6.08
−3
−3
−5
−3
−5
−5
−3
−3
−5
Table 1: Kolmogorov-Smirnov test statistic for techniques over static graphs. Values above 1.07 · 10
−4 lie in the rejection region at the 5% level.
j
ity of transitioning to peer y if the walk is currently at peer
x:
P (x, y) =
1
degree(x)
0
y is a neighbor of x,
otherwise
If the vector v describes the probability of currently being
at each peer, then the vector v(cid:2)
= vP describes the probabil-
ity after taking one additional step. Likewise, vP r describes
the probability after taking r steps. As long as the graph is
connected and not bipartite, the probability of being at any
particular node, x, converges to a stationary distribution:
π(x) = lim
r→∞(vP r
)(x) =
degree(x)
2 · |E|
In other words, if we select a peer as a sample every r steps,
for suﬃciently large r, we have the following good properties:
• The information stored in the starting vector, v, is
lost, through the repeated selection of random neigh-