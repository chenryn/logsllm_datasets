# 加密方式
windows中hash结构一般为`username:RID:LM-hsah:NTLM-hash`，windwos 2000之后LM-hash都为空，因为很容易破解一般被禁用。NTLM密码hash保存在`%SystemRoot%\System32\config\SAM`，在域中，用户信息保存在`C:\Windows\NTDS\NTDS.dit`中
windows中密码格式：`Username:RID:LM-Hash:NT-Hash`，在LM禁用的版本中为空值。
## LM-hash
windows7默认禁用LM-hash加密，本地安全策略-》本地策略-》安全选项，将不储存LAN管理器哈希值改为禁用。
特点：
  1. 口令不区分大小写
  2. 口令长度最多为14字节，如果没有超过7字节后面8字节是固定的
  3. DES算法强度不够（字符串 “KGS!@#$%”为Key）
## NTLM hash
在渗透测试中，通常可从Windows系统中的SAM文件和域控的NTDS.dit文件中获得所有用户的hash，通过Mimikatz读取lsass.exe进程能获得已登录用户的NTLM
hash
  1. 加密流程：先转换为16进制，unicode转换，MD4加密
### Net-NTLM Hash
指网络环境下的NTLM认证中的Hash
在NTLM协议中，NTLM响应就分为NTLM v1，NTLMv2，NTLM session v2三种协议，不同协议使用不同格式的Challenge和加密算法
所以也就存在不同协议的Net-NTLM hash，即Net-NTLM v1 hash，Net-NTLM v2 hash
就是NTLM协议中，客户端获取challenge后使用自己的NTLM hash对其进行加密的结果。（就是Response）
这一类hash不能用于PTH，但是能够暴力破解出密码
自Windows Vista/Server2008开始，系统默认禁用Net-NTLMv1，使用Net-NTLMv2
v1格式：`username::hostname:LM response:NTLM response:challenge`
v2格式：`username::domain:challenge:HMAC-MD5:blob`
### Net-NTLMv1加密利用思路
修改注册表开启v1：
    reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa\ /v lmcompatibilitylevel /t REG_DWORD /d 2 /f
    reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0\ /v NtlmMinClientSec /t REG_DWORD /d 536870912 /f
    reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0\ /v RestrictSendingNTLMTraffic /t REG_DWORD /d 0 /f
加密流程
    服务端返回8位challenge
    客户端收到challenge后，使用用户密码Hash加密challenge，作为response（加密算法为3DES）
利用思路
    在控制challenge后在短时间内通过彩虹表还原出用户的NTLM Hash
利用工具：
NTLM破解工具：
### Net-NTLMv2
与v1不同的是 challenge有16位，加密算法是HMAC-MD5
## windwos认证流程
winlogon.exe -》用户输入 -》 lsass.exe -》 认证
用户输入密码后交给lsass.exe进程，它会先保存一份明文密码，将明文密码加密为NTLM Hash，与SAM数据库进行比较。
# 相关协议
## LM
早期SMB协议在网络上传输明文口令。后来出现 LAN Manager Challenge/Response
验证机制，简称LM，它是如此简单以至很容易就被破解，现在又有了NTLM以及Kerberos。
  1. A向B发起请求
  2. B返回A一个8字节的响应码
  3. A将自己的LM Hash分成三部分，每组7字节，每组都使用响应码对其进行加密，然后发送给B。
  4. 然后B也执行和A相同的操做，不过LM Hash是储存在服务器中的A的LM Hsah。
  5. 如果比对一样则通过验证。
## NTLM
NTLM是一种认证协议，NTLM采用质询/应答(Challenge/Response)的消息交换模式，在域中优先使用Kerberos协议，但是也可以使用NTLM
  1. 用户输入账号密码登录Windows，客户端缓存输入密码的hash值。
  2. 客户端向服务器发送请求，请求包括明文表示的用户名。
  3. 服务端判断用户名是否存在，存在则生成16位challenge保存并返回给客户端。
  4. 客户端收到challenge后使用密码hash进行加密，然后发送给服务器（发送的就是Response）。
  5. 服务器收到后利用自己数据库中的密码hash加密challenge，然后进行比较
  6. 在域中第5步则是：
  7.     1. 在域中服务器会发送给DC，包括客户端用户名，客户端密码hash值加密的challenge，原始challenge
    2. DC根据用户名在数据库中查找密码hash。对challenge进行加密比对，然后将结果返回给客户端。
**明文并没有在两者之间传输，使用的是NTLM Hash，如果攻击者获得了NTLM Hash，就可以进行Hash传递攻击（Pass The Hash）**
## Kerberos
Kerberos是一种网络认证协议，在网络上传输的数据包可以被任意地读取，修改，和插入数据时，Kerberos任然被认为是一种可信任的第三方服务
参与角色：客户端，服务器，KDC（密钥分发中心）= DC
### AD目录
AD储存关于网络对象的信息，使管理员能够轻松查找这些信息
网络对象划分为：用户，用户组，计算机，域，组织单位，安全策略
### KDC组成
AD：储存所有客户白名单，只有在白名单中的客户端才可以申请TGT
AS：为客户端生成TGT的服务
TGS：为客户端生成某个服务的ticket
从物理层面看AD域KDC都是域控
### Kerberos认证流程
**一。客户端认证（Client-AS** ）
**AS-REQ** ：Hash传递攻击，域外用户枚举，密码喷洒攻击，pass the hash with remote
desktop，KB22871997
  1. 客户端向服务端发送客户端信息和相应的请求（消息1）
  2.     1. 用户的标识和请求的服务
    2. 预认证数据，Hash加密的时戳
**AS-REP** ：黄金票据，AS-REP Roasting攻击
  1. kerberos检查该用户是否在本地数据库中，解密时间戳，然后返回两条信息（消息2）
  2.     1. Client/TGS会话密钥（Client/TGS Session key）， 用于客户端与TGS之间的通信，使用客户端的NTLM Hash加密（消息2a）
    2. 票据授权票据（Ticket Granting Ticket），包含Client/TGS会话密钥，用户ID，用户网址，消息2有效期，通过TGS密钥进行加密。（消息2b）
  3. 客户端收到消息后，使用自己的NTLM Hash解密消息2a，得到TGS会话密钥。
**二。服务授权（Client-TGS）**
  1. 客户端想要申请服务的时候，向TGS发送两条消息：
  2.     1. 消息2b（就是TGT），想要获取的服务ID。
    2. 认证符（Authenticator），包含用户ID和时间戳，使用Client/TGS会话密钥进行加密。
  3. Kerberos收到客户端的消息后，TGS先在KDC中查找服务ID是否存在，然后使用自己的TGS密钥解密消息客户端发送过来的消息2b，得到Client/TGS会话密钥
**TGS-REP** ：SPN，Kerberosast攻击，白银票据
  1. 使用Client/TGS会话密钥解密消息4b，核对完成后向客户端发送：
  2.     1. 客户端-服务器票据（Client-Server-Ticket），包含Client/SS会话密钥（Client/Server Session key），用户ID，用户网址，票据有效日期。使用服务器密钥加密。
    2. Client/SS会话密钥，使用Client/TGS密钥加密。
  3. 客户端收到消息后使用2a解密得到的Client/TGS密钥解密消息6b，得到Client/SS会话密钥。
**三。服务请求**
  1. 客户端向服务发起请求：
  2.     1. 发送消息6a。
    2. 新的Authentication（用户ID，时间戳），使用Client/SS会话密钥加密。
  3. 服务器收到消息后，使用自己的服务器密钥解密接收到的消息6a，得到Client/SS密钥，在使用Client/SS密钥解密消息8b，获取Authentication，获取用户ID和时间戳。此时服务器就可以给客户端提供服务了，向服务端发送一条消息：
  4.     1. 新的时间戳，使用Client/SS加密
四。客户端与服务沟通
  1. 客户端拿到消息9a后，使用Client/SS解密，验证时间戳，确认服务器身份，然后开始请求。
五。Kerberos的缺点
  1. 如果Kerberos挂了，就无法请求服务。
  2. 时间需要统一，因为票据具有时效性，时间不能超过10分钟
  3. DC被控，整个域就完了
  4. 客户端防御差，用户密码Hash也会被拿走
# 横向移动
根据Kerberos的不同流程，可以造成不同的攻击。
## 抓取密码
### Wdigest Auth
[https://baijiahao.baidu.com/s?id=1611387816169124711&wfr=spider&for=pc](https://baijiahao.baidu.com/s?id=1611387816169124711&wfr=spider&for=pc)
mimikatz能导出明文的原因是因为wdigest SSP保存了可逆的密码密文。
在KB2871997之前有其他的SSP也能保存明文，windwos在安装KB2871997补丁或者版本大于Windows 10和Windows Server
2012时，禁止在内存中保存明文密码，但可以通过修改注册表读取。
KB2871997补丁默认禁用了Wdigest Auth，lsass不保存明文密码，但是某些服务需要用Wdigest Auth，所以还能手动开启。
#### Wdigest作用
与NTLM一样是一种挑战认证协议，只能用于域账户认证，只要用于IIS和LDAP。它的出现主要是为了代替HTTP BASIC，HTTP