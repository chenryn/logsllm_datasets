/*+SeqScan() */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near " "  
DETAIL:  SeqScan hint requires a relation.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
SeqScan()  
 ?column?   
----------  
        1  
(1 row)  
/*+SeqScan(t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
INFO:  pg_hint_plan: hint syntax error at or near ""  
DETAIL:  SeqScan hint accepts only one relation.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
SeqScan(t1 t2)  
              QUERY PLAN                
--------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  
   ->  Index Scan using t2_pkey on t2  
(4 rows)  
/*+SeqScan(t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
SeqScan(t1)  
not used hint:  
duplication hint:  
error hint:  
          QUERY PLAN            
------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Seq Scan on t2  
(5 rows)  
/*+SeqScan(t1)IndexScan(t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
SeqScan(t1)  
IndexScan(t2)  
not used hint:  
duplication hint:  
error hint:  
                 QUERY PLAN                   
--------------------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Index Scan using t2_pkey on t2  
(5 rows)  
/*+BitmapScan(t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
BitmapScan(t2)  
not used hint:  
duplication hint:  
error hint:  
                QUERY PLAN                  
------------------------------------------  
 Nested Loop  
   ->  Seq Scan on t1  
   ->  Bitmap Heap Scan on t2  
         Recheck Cond: (id = t1.id)  
         ->  Bitmap Index Scan on t2_pkey  
               Index Cond: (id = t1.id)  
(6 rows)  
/*+BitmapScan(t2)NoSeqScan(t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
NoSeqScan(t1)  
BitmapScan(t2)  
not used hint:  
duplication hint:  
error hint:  
                QUERY PLAN                  
------------------------------------------  
 Nested Loop  
   ->  Index Scan using t1_pkey on t1  
   ->  Bitmap Heap Scan on t2  
         Recheck Cond: (id = t1.id)  
         ->  Bitmap Index Scan on t2_pkey  
               Index Cond: (id = t1.id)  
(6 rows)  
/*+NoIndexScan(t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
NoIndexScan(t1)  
not used hint:  
duplication hint:  
error hint:  
          QUERY PLAN            
------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Seq Scan on t2  
(5 rows)  
/*+NoBitmapScan(t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val   Seq Scan on t1  
         Filter: (val   Materialize  
         ->  Seq Scan on t4  
(5 rows)  
/*+TidScan(t4)*/  
EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';  
LOG:  pg_hint_plan:  
used hint:  
TidScan(t4)  
not used hint:  
duplication hint:  
error hint:  
                  QUERY PLAN                     
-----------------------------------------------  
 Merge Join  
   Merge Cond: (t3.id = t4.id)  
   ->  Index Scan using t3_pkey on t3  
   ->  Sort  
         Sort Key: t4.id  
         ->  Tid Scan on t4  
               TID Cond: (ctid = '(1,1)'::tid)  
(7 rows)  
/*+NoTidScan(t1)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';  
LOG:  pg_hint_plan:  
used hint:  
NoTidScan(t1)  
not used hint:  
duplication hint:  
error hint:  
              QUERY PLAN                 
---------------------------------------  
 Nested Loop  
   ->  Seq Scan on t1  
         Filter: (ctid = '(1,1)'::tid)  
   ->  Index Scan using t2_pkey on t2  
         Index Cond: (id = t1.id)  
(5 rows)  
/*+ NestLoop() */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near " "  
DETAIL:  NestLoop hint requires at least two relations.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
NestLoop()  
 ?column?   
----------  
        1  
(1 row)  
/*+ NestLoop(x) */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near " "  
DETAIL:  NestLoop hint requires at least two relations.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
NestLoop(x)  
 ?column?   
----------  
        1  
(1 row)  
/*+HashJoin(t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(t1 t2)  
not used hint:  
duplication hint:  
error hint:  
          QUERY PLAN            
------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Seq Scan on t2  
(5 rows)  
/*+NestLoop(t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
NestLoop(t1 t2)  
not used hint:  
duplication hint:  
error hint:  
              QUERY PLAN                
--------------------------------------  
 Nested Loop  
   ->  Seq Scan on t2  
   ->  Index Scan using t1_pkey on t1  
         Index Cond: (id = t2.id)  
(4 rows)  
/*+NoMergeJoin(t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;  
LOG:  pg_hint_plan:  
used hint:  
NoMergeJoin(t1 t2)  
not used hint:  
duplication hint:  
error hint:  
          QUERY PLAN            
------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   ->  Seq Scan on t1  
   ->  Hash  
         ->  Seq Scan on t2  
(5 rows)  
/*+MergeJoin(t1 t3)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;  
LOG:  pg_hint_plan:  
used hint:  
MergeJoin(t1 t3)  
not used hint:  
duplication hint:  
error hint:  
             QUERY PLAN                
-------------------------------------  
 Merge Join  
   Merge Cond: (t1.val = t3.val)  
   ->  Index Scan using t1_val on t1  
   ->  Sort  
         Sort Key: t3.val  
         ->  Seq Scan on t3  
(6 rows)  
/*+NestLoop(t1 t3)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;  
LOG:  pg_hint_plan:  
used hint:  
NestLoop(t1 t3)  
not used hint:  
duplication hint:  
error hint:  
             QUERY PLAN                
-------------------------------------  
 Nested Loop  
   ->  Seq Scan on t3  
   ->  Index Scan using t1_val on t1  
         Index Cond: (val = t3.val)  
(4 rows)  
/*+NoHashJoin(t1 t3)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;  
LOG:  pg_hint_plan:  
used hint:  
NoHashJoin(t1 t3)  
not used hint:  
duplication hint:  
error hint:  
             QUERY PLAN                
-------------------------------------  
 Nested Loop  
   ->  Seq Scan on t3  
   ->  Index Scan using t1_val on t1  
         Index Cond: (val = t3.val)  
(4 rows)  
/*+MergeJoin(t4 t1 t2 t3)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
MergeJoin(t1 t2 t3 t4)  
not used hint:  
duplication hint:  
error hint:  
                    QUERY PLAN                      
--------------------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
         ->  Index Scan using t2_pkey on t2  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
(13 rows)  
/*+HashJoin(t3 t4 t1 t2)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(t1 t2 t3 t4)  
not used hint:  
duplication hint:  