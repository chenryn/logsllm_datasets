请求一个新证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 60.6. 当旧证书即将过期时，Certmonger 请求一个新证书"){.xref}
显示在 `证书过期前，certmonger 会自动从 IdM CA 请求`{.literal}
服务证书续订。IdM CA 发布一个新证书。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5}
**图 60.6. 当旧证书即将过期时，Certmonger 请求一个新证书**
::: figure-contents
::: mediaobject
![显示一个图表，显示 IdM 客户端上 certmonger 服务中连接 IdM CA
服务器的箭头，以显示它正在执行 ipa-getcert 请求。IdM CA 服务器到
Certmonger 的箭头被标记为 HTTPS 证书，以显示它正在将 HTTPS 证书传输到
certmonger 服务。](images/84_RHEL_IdM_0420_5.png)
:::
:::
:::
\
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}设置单实例 Apache HTTP 服务器 {.title}
:::
这部分论述了如何设置单实例 Apache HTTP 服务器来提供静态 HTML 内容。
如果 web
服务器应该为与服务器关联的所有域提供相同的内容，请按照本节中的步骤进行操作。如果要为不同的域提供不同的内容，请设置基于名称的虚拟主机。[详情请参阅配置基于
Apache
名称的虚拟主机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#configuring-apache-name-based-virtual-hosts_setting-apache-http-server){.link}。
::: orderedlist
**流程**
1.  安装 `httpd`{.literal} 软件包：
    ``` literallayout
    # yum install httpd
    ```
2.  在本地防火墙中打开 TCP 端口 `80`{.literal}:
    ``` literallayout
    # firewall-cmd --permanent --add-port=80/tcp
    # firewall-cmd --reload
    ```
3.  启用并启动 `httpd`{.literal} 服务：
    ``` literallayout
    # systemctl enable --now httpd
    ```
4.  可选：将 HTML 文件添加到 `/var/www/html/`{.literal} 目录中。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在 向`/var/www/html/`{.literal}
    添加内容时，在`httpd`{.literal}默认运行的情况下，文件和目录必须可被用户读取。内容所有者可以是
    `root`{.literal}用户和`root`{.literal}用户组，也可以是管理员所选择的其他用户或组。如果内容所有者是
    `root`{.literal} 用户和 `root`{.literal}
    用户组，则文件必须可被其他用户读取。所有文件和目录的 SELinux
    上下文必须为 `httpd_sys_content_t`{.literal}，其默认应用于
    `/var/www`{.literal} 目录中的所有内容。
    :::
:::
::: itemizedlist
**验证步骤**
-   使用 Web 浏览器连接到
    `http://my_company.idm.example.com/ 或`{.literal}
    `http://server_IP/`{.literal}。
    如果 `/var/www/html/`{.literal} 目录为空，或者不包含
    `index.html`{.literal}或`index.htm`{.literal}文件，则 Apache 会显示
    `Red Hat Enterprise Linux 测试页面`{.literal}。如果
    `/var/www/html/`{.literal} 包含具有不同名称的 HTML
    文件，您可以通过在该文件中输入 URL 来加载这些文件，如
    `http://server_IP/example.html`{.literal} 或
    `http://my_company.idm.example.com/example.html`{.literal}。
:::
::: itemizedlist
**其它资源**
-   有关配置 Apache 和将服务限制到您的环境的详情，请参考 Apache
    手册。有关安装手动的详情，请参阅 [安装 Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
-   有关使用或调整 `httpd`{.literal} `systemd`{.literal}
    服务的详情，请查看 `httpd.service(8)`{.literal}手册页。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中添加 TLS 加密 {.title}
:::
这部分论述了如何在 `idm.example.com 域的`{.literal}
`my_company.idm.example.com`{.literal} Apache HTTP 服务器中启用 TLS
加密。
::: itemizedlist
**先决条件**
-   `my_company.idm.example.com`{.literal} Apache HTTP
    服务器已安装并在运行。
-   您已从 [**webserver-ca**]{.strong} 子 CA 获取 TLS 证书，并将其存储在
    `/etc/pki/tls/certs/httpd.pem`{.literal} 文件中，如 ["使用
    certmonger 为服务获取 IdM
    证书"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#obtain-service-cert-with-certmonger_restricting-an-application-to-trust-a-subset-of-certs "使用 certmonger 为服务获取 IdM 证书"){.xref}
    所述。如果您使用其他路径，请调整该流程的对应步骤。
-   对应的私钥存储在 `/etc/pki/tls/private/httpd.key`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   [**webserver-ca**]{.strong} CA 证书存储在
    `/etc/pki/tls/private/sub-ca.crt`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   客户端和 [**my_company.idm.example.com**]{.strong} Web
    服务器将服务器的主机名解析为 Web 服务器的 IP 地址。
:::
::: orderedlist
**流程**
1.  安装 `mod_ssl`{.literal} 软件包：
    ``` literallayout
    # dnf install mod_ssl
    ```
2.  编辑`/etc/httpd/conf.d/ssl.conf`{.literal}文件，并将以下设置添加到
    ``{.literal}指令中：
    ::: orderedlist
    1.  设置服务器名称：
        ``` literallayout
        ServerName my_company.idm.example.com
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        服务器名称必须与证书的
        `Common Name`{.literal}字段中设置的条目匹配。
        :::
    2.  可选：如果证书在 `Subject Alt Names`{.literal}
        (SAN)字段中包含额外的主机名，您可以
        配置`mod_ssl`{.literal}来为这些主机名提供 TLS
        加密。要配置此功能，请添加具有对应名称的`ServerAliases`{.literal}参数：
        ``` literallayout
        ServerAlias www.my_company.idm.example.com server.my_company.idm.example.com
        ```
    3.  设置到私钥、服务器证书和 CA 证书的路径：
        ``` literallayout
        SSLCertificateKeyFile "/etc/pki/tls/private/httpd.key"
        SSLCertificateFile "/etc/pki/tls/certs/httpd.pem"
        SSLCACertificateFile "/etc/pki/tls/certs/ca.crt"
        ```
    :::
3.  出于安全考虑，配置成只有 `root`{.literal} 用户才可以访问私钥文件：
    ``` literallayout
    # chown root:root /etc/pki/tls/private/httpd.key
    # chmod 600 //etc/pki/tls/private/httpd.key
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果私钥被设置为可以被未授权的用户访问，则需要撤销证书，然后再创建一个新私钥并请求一个新证书。否则，TLS
    连接就不再安全。
    :::
4.  在本地防火墙中打开端口 `443`{.literal}:
    ``` literallayout
    # firewall-cmd --permanent --add-port=443/tcp
    # firewall-cmd --reload
    ```
5.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用密码来保护私钥文件，则必须在每次
    `httpd`{.literal}服务启动时都输入此密码。
    :::
    ::: itemizedlist
    -   使用浏览器并连接到
        `https://my_company.idm.example.com`{.literal} 。
    :::
:::
::: itemizedlist
**其它资源**
-   有关配置 TLS 的详情，请参考 Apache 手册中的
    `SSL/TLS Encryption`{.literal}文档。有关安装手动的详情，请参阅 [安装
    Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#setting-the-supported-tls-protocol-versions-on-an-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中设置支持的 TLS 协议版本 {.title}
:::
默认情况下，RHEL 8 上的 Apache HTTP
服务器使用系统范围的加密策略来定义安全默认值，这些默认值与当前的浏览器兼容。例如，`DEFAULT`{.literal}策略定义了在
apache 中只启用 `TLSv1.2`{.literal}和`TLSv1.3`{.literal}协议版本。
本节论述了如何手动配置您的 [**my_company.idm.example.com**]{.strong}
Apache HTTP 服务器支持的 TLS 协议版本。如果您的环境只需要启用特定的 TLS
协议版本，请按照以下步骤操作，例如：
::: itemizedlist
-   如果您的环境要求客户端也可以使用弱 `TLS1`{.literal}
    (TLSv1.0)或`TLS1.1`{.literal}协议。
-   如果你想将 Apache
    配置为只支持`TLSv1.2`{.literal}或`TLSv1.3`{.literal}协议。
:::
::: itemizedlist
**先决条件**
-   在 [**my_company.idm.example.com**]{.strong} 服务器上启用了 TLS
    加密，如 ["在 Apache HTTP 服务器中添加 TLS
    加密"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.xref}
    所述。
:::
::: orderedlist
**流程**
1.  编辑 `/etc/httpd/conf/httpd.conf`{.literal}
    文件，并将以下设置添加到您要为其设置 TLS
    协议版本的``{.literal}指令中。例如，只启用`TLSv1.3`{.literal}协议：
    ``` literallayout
    SSLProtocol -All TLSv1.3
    ```
2.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
:::
::: orderedlist
**验证步骤**
1.  使用以下命令来验证服务器是否支持`TLSv1.3`{.literal}:
    ``` literallayout
    # openssl s_client -connect example.com:443 -tls1_3
    ```
2.  使用以下命令来验证服务器是否不支持`TLSv1.2`{.literal} ：
    ``` literallayout
    # openssl s_client -connect example.com:443 -tls1_2
    ```
    如果服务器不支持该协议，命令会返回一个错误：
    ``` literallayout
    140111600609088:error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version:ssl/record/rec_layer_s3.c:1543:SSL alert number 70
    ```
3.  可选：重复用于其他 TLS 协议版本的命令。
:::
::: itemizedlist
**其它资源**
-   有关系统范围的加密策略的详情，请查看`update-crypto-policies(8)`{.literal}手册页和[使用系统范围的加密策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening){.link}。
-   有关`SSLProtocol`{.literal}参数的详情，请参阅 Apache
    手册中的`mod_ssl`{.literal}文档。有关安装手动的详情，请参阅 [安装
    Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#setting-the-supported-ciphers-on-an-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中设置支持的密码 {.title}
:::
默认情况下，RHEL 8 上的 Apache HTTP
服务器使用系统范围的加密策略来定义安全默认值，这些默认值与当前的浏览器兼容。有关系统范围加密允许的密码列表，请查看`/etc/crypto-policies/back-ends/openssl.config`{.literal}
文件。
这部分论述了如何手动配置 [**my_company.idm.example.com**]{.strong}
Apache HTTP
服务器支持的密码。如果您的环境需要特定的加密系统，请按照以下步骤操作。
::: itemizedlist
**先决条件**
-   在 [**my_company.idm.example.com**]{.strong} 服务器上启用了 TLS
    加密，如 ["在 Apache HTTP 服务器中添加 TLS
    加密"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.xref}
    所述。
:::
::: orderedlist
**流程**
1.  编辑`/etc/httpd/conf/httpd.conf`{.literal}文件，并将`SSLCipherSuite`{.literal}参数添加到您要为其设置
    TLS 密码的``{.literal}指令中：
    ``` literallayout
    SSLCipherSuite "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!SHA1:!SHA256"
    ```
    这个示例只启用
    `EECDH+AESGCM`{.literal}、`EDH+AESGCM`{.literal}、`AES256+EECDH`{.literal}
    和
    `AES256+EDH`{.literal}密码，并禁用所有使用`SHA1`{.literal}和`SHA256`{.literal}消息身份验证码(MAC)的密码。
2.  重启`httpd`{.literal}服务：
    ``` literallayout