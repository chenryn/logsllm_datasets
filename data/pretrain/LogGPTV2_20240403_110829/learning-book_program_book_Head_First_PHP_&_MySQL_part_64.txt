### 使用 `explode()` 函数将字符串分解为子串数组

`explode()` 函数可以将一个字符串按照指定的分隔符（也称为定界符）分解成多个子串，并返回这些子串组成的数组。以下是一个示例：

```php
$search_words = explode(' ', 'Tipper Cow');
```

在这个例子中，`$search_words` 变量现在存储了通过空格分隔的两个子串：`'Tipper'` 和 `'Cow'`。

#### 参数说明
- **第一个参数**：这是定界符，用于指定在何处进行字符串分割。它可以是一个或多个字符。在这个例子中，我们使用了一个空格作为定界符。
- **第二个参数**：这是要被分解的原始字符串。在这个例子中，原始字符串是 `'Tipper Cow'`。

#### 定界符的作用
定界符本身不会包含在最终生成的子串数组中。例如，对于上述代码，`$search_words` 将包含：
```php
array(2) {
  [0] => "Tipper"
  [1] => "Cow"
}
```

### 结合 `RiskyJobs` 应用

为了将分解后的搜索项结合到 `RiskyJobs` 应用中，我们需要对数据库运行查询之前增加一行代码。假设用户在搜索框中输入 `"TipperCow"`，我们可以使用 `explode()` 函数将其分解为两个单词，并将它们存储在一个数组中。

```php
$user_search = $_GET['usersearch'];
$search_words = explode(' ', $user_search);
```

这样，`$search_words` 数组将包含分解后的每个单词。

### 构建 SQL 查询

为了将分解后的搜索项结合到 `RiskyJobs` 应用中，我们需要将各个搜索项插入到一个使用 `LIKE` 和 `OR` 的 SQL `SELECT` 查询中。例如，对于 Ernesto 之前关于 `"BullFighterMatador"` 的搜索，查询可能如下所示：

```sql
SELECT * FROM riskyjobs WHERE description LIKE '%Bull%' OR description LIKE '%Fighter%' OR description LIKE '%Matador%'
```

假设我们使用以下 PHP 代码来组装这个查询：

```php
$where_clause = '';
$user_search = $_GET['usersearch'];
$search_words = explode(' ', $user_search);

foreach ($search_words as $word) {
    if (!empty($where_clause)) {
        $where_clause .= " OR ";
    }
    $where_clause .= "description LIKE '%$word%'";
}

if (!empty($where_clause)) {
    $search_query = "SELECT * FROM riskyjobs WHERE $where_clause";
}
```

### 问题和改进

如果 Ernesto 输入 `"BullFighterMatador"` 作为搜索项，上述代码生成的 SQL 查询将是：

```sql
SELECT * FROM riskyjobs WHERE description LIKE '%Bull%' OR description LIKE '%Fighter%' OR description LIKE '%Matador%'
```

但是，如果用户输入 `"tightrope,walker,circus"`，则会生成错误的查询：

```sql
SELECT * FROM riskyjobs WHERE description LIKE '%tightrope,%' OR description LIKE '%walker,%' OR description LIKE '%circus%'
```

这里的问题在于逗号也被视为搜索项的一部分。解决这个问题的一种方法是在调用 `explode()` 之前对搜索串进行预处理，移除不需要的字符。

#### 预处理搜索串

我们可以使用 `str_replace()` 函数将逗号替换为空格，然后再调用 `explode()` 函数：

```php
$user_search = str_replace(',', ' ', $_GET['usersearch']);
$search_words = explode(' ', $user_search);
```

这样，`$search_words` 数组将正确地包含 `"tightrope"`, `"walker"`, 和 `"circus"`。

### 使用 `implode()` 函数

另一种更简洁的方法是使用 `implode()` 函数来构造 `WHERE` 子句。`implode()` 函数可以将数组中的元素连接成一个字符串，并在每个元素之间插入指定的定界符。

```php
$where_list = array();
foreach ($search_words as $word) {
    $where_list[] = "description LIKE '%$word%'";
}

$where_clause = implode(' OR ', $where_list);

if (!empty($where_clause)) {
    $search_query = "SELECT * FROM riskyjobs WHERE $where_clause";
}
```

这样，`$search_query` 将正确地包含所有搜索项，并且不会有多余的 `OR` 操作符。

### 总结

通过预处理搜索串并使用 `implode()` 函数，我们可以更简洁、高效地构建 SQL 查询，从而提高代码的可读性和维护性。