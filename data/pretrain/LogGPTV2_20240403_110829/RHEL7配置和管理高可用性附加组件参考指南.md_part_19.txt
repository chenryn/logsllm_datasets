:::
将虚拟机或 LXC 资源配置为充当客户机节点时，您可以创建一个
`VirtualDomain`{.literal} 资源来管理虚拟机。有关您可以为
`VirtualDomain`{.literal} 资源设置的选项描述，请参阅 [表 9.3
"虚拟域资源资源选项"](#ch-advancedresource-HAAR.html#tb-virtdomain-options-HAAR "表 9.3. 虚拟域资源资源选项"){.xref}。
除了 `VirtualDomain`{.literal}
资源选项外，元数据选项将资源定义为客户机节点，再定义连接参数。从 Red Hat
Enterprise Linux 7.4 开始，您应使用 [**pcs cluster node
add-guest**]{.command} 命令设置这些资源选项。在早于 7.4
的版本中，您可以在创建资源时设置这些选项。[表 9.4 "将 KVM/LXC
资源配置为远程节点的元数据选项"](#ch-advancedresource-HAAR.html#tb-remoteklm-options-HAAR "表 9.4. 将 KVM/LXC 资源配置为远程节点的元数据选项"){.xref}
描述这些元数据选项。
::: table
[]{#ch-advancedresource-HAAR.html#tb-remoteklm-options-HAAR}
**表 9.4. 将 KVM/LXC 资源配置为远程节点的元数据选项**
::: table-contents
  项                                   默认值                                 描述
  ------------------------------------ -------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------
  `remote-node`{.literal}              \                               此资源定义的客户机节点的名称。这可让资源作为客户机节点启用，并定义用于识别客户端节点的唯一名称。[*WARNING*]{.emphasis}：这个值不能与任何资源或节点 ID 重叠。
  `remote-port`{.literal}              3121                                   配置用于 guest 连接 `pacemaker_remote`{.literal}的自定义端口
  `remote-addr`{.literal}              `remote-node`{.literal} 值用作主机名   如果远程节点的名称不是客户机的主机名，则要连接的 IP 地址或主机名
  `remote-connect-timeout`{.literal}   60s                                    待处理的客户端连接超时前的时间
:::
:::
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#remote_node_options}远程节点资源选项 {.title}
:::
远程节点定义为将 `ocf:pacemaker:remote 用作`{.literal}
资源代理的集群资源。在 Red Hat Enterprise Linux 7.4 中，您应该使用
[**pcs cluster node add-remote**]{.command} 命令创建此资源。在早于 7.4
的版本中，您可以使用 [**pcs resource create
命令创建此资源**]{.command}。[表 9.5
"远程节点的资源选项"](#ch-advancedresource-HAAR.html#tb-remotenode-options-HAAR "表 9.5. 远程节点的资源选项"){.xref}
描述您可以为 `远程`{.literal} 资源配置的资源选项。
::: table
[]{#ch-advancedresource-HAAR.html#tb-remotenode-options-HAAR}
**表 9.5. 远程节点的资源选项**
::: table-contents
  项                               默认值   描述
  -------------------------------- -------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `reconnect_interval`{.literal}   0        在到远程节点活跃连接断开后，在尝试重新连接到远程节点前等待的时间（以秒为单位）。这个等待是重复的。如果在等待时间过后重新连接失败，会在观察等待时间后进行一个新的重新连接尝试。当使用这个选项时，Pacemaker 会在每次等待的时间段内一直尝试退出并连接到远程节点。
  `server`{.literal}                        要连接的服务器位置。这可以是 IP 地址或主机名。
  `port`{.literal}                          要连接的 TCP 端口。
:::
:::
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#pacemakerremote_defaults}更改默认端口位置 {.title}
:::
如果您需要更改 Pacemaker 或 `pacemaker_remote`{.literal}
的默认端口位置，您可以设置影响这两个守护进程的
`PCMK_remote_port`{.literal} 环境变量。可以通过将变量放在
`/etc/sysconfig/pacemaker`{.filename} 文件中来启用该变量，如下所示：
``` screen
#==#==# Pacemaker Remote
...
#
# Specify a custom port for Pacemaker Remote connections
PCMK_remote_port=3121
```
当更改特定客户机节点或远程节点使用的默认端口时，必须在该节点的
`/etc/sysconfig/pacemaker`{.filename} 文件中设置
`PCMK_remote_port`{.literal}
变量，创建客户机节点或远程节点连接的群集资源也必须使用相同的端口号（对客户机节点使用
`remote-port`{.literal} 元数据选项，或远程节点的 `port`{.literal}
选项）。
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#guestnode_config}配置概述：KVM 客户机节点 {.title}
:::
本节概述了使用 `libvirt`{.literal} 和 KVM 虚拟机执行 Pacemaker
启动虚拟机并将该虚拟机整合为客户机节点的步骤。
::: orderedlist
1.  配置 `VirtualDomain`{.literal} 资源，如
    ["将虚拟域配置为资源"一节](#ch-advancedresource-HAAR.html#virtualnoderesource "将虚拟域配置为资源"){.xref}
    所述。
2.  在运行 Red Hat Enterprise Linux 7.3
    及更早版本的系统上，按照以下步骤将路径
    `/etc/pacemaker/authkey`{.filename}
    放置到每个集群节点和虚拟机上。这可保护远程通信和身份验证。
    ::: orderedlist
    1.  `在每个节点上输入以下一组命令，以创建具有安全权限的 authkey`{.filename}
        目录。
        ``` screen
        # mkdir -p --mode=0750 /etc/pacemaker
        # chgrp haclient /etc/pacemaker
        ```
    2.  以下命令显示了创建加密密钥的一种方法：您应该仅创建一次密钥，然后将它复制到所有节点。
        ``` screen
        # dd if=/dev/urandom of=/etc/pacemaker/authkey bs=4096 count=1
        ```
    :::
3.  对于 Red Hat Enterprise Linux 7.4，在每个虚拟机上输入以下命令来安装
    `pacemaker_remote`{.literal} 软件包，启动 `pcsd`{.literal}
    服务并启用它在启动时运行，并通过防火墙允许 TCP 端口 3121。
    ``` screen
    # yum install pacemaker-remote resource-agents pcs
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    # firewall-cmd --add-port 3121/tcp --permanent
    # firewall-cmd --add-port 2224/tcp --permanent
    # firewall-cmd --reload
    ```
    对于 Red Hat Enterprise Linux 7.3
    和更早版本，在每个虚拟机上运行以下命令，以安装
    `pacemaker_remote`{.literal} 软件包、启动
    `pacemaker_remote`{.literal} 服务并使其在启动时运行，并允许 TCP 端口
    3121 通过防火墙。
    ``` screen
    # yum install pacemaker-remote resource-agents pcs
    # systemctl start pacemaker_remote.service
    # systemctl enable pacemaker_remote.service
    # firewall-cmd --add-port 3121/tcp --permanent
    # firewall-cmd --add-port 2224/tcp --permanent
    # firewall-cmd --reload
    ```
4.  为每个虚拟机分配一个静态网络地址和唯一主机名，适用于所有节点。有关为客户机虚拟机设置静态
    IP 地址的详情，请参考 *虚拟化部署和管理指南*。
5.  对于 Red Hat Enterprise Linux 7.4 及更高版本，请使用以下命令将现有
    `VirtualDomain`{.literal}
    资源转换为客户机节点。这个命令必须在集群节点中运行，而不必在要添加的客户端节点中运行。除了转换资源外，这个命令会将
    `/etc/pacemaker/authkey`{.filename}
    复制到客户机节点，并在客户机节点上启动并启用
    `pacemaker_remote`{.literal} 守护进程。
    ``` screen
    pcs cluster node add-guest hostname resource_id [options]
    ```
    对于 Red Hat Enterprise Linux 7.3 及更早版本，使用以下命令将现有的
    `VirtualDomain`{.literal}
    资源转换为客户机节点。这个命令必须在集群节点中运行，而不必在要添加的客户端节点中运行。
    ``` screen
    pcs cluster remote-node add hostname resource_id [options]
    ```
6.  创建 `VirtualDomain`{.literal}
    资源后，您可以像在集群中的任何其他节点一样对待客户机节点。例如，您可以创建资源并在客户机节点中运行的资源上放置资源约束，如下命令可在集群节点中运行。从
    Red Hat Enterprise Linux 7.3
    开始，您可以在组中包括客户机节点，它们允许您对存储设备、文件系统和虚拟机进行分组。
    ``` screen
    # pcs resource create webserver apache configfile=/etc/httpd/conf/httpd.conf op monitor interval=30s
    # pcs constraint location webserver prefers guest1
    ```
:::
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#remotenode_config-7.4}配置概述：远程节点（红帽企业 Linux 7.4） {.title}
:::
本节概述了配置 Pacemaker 远程节点并将该节点集成到 Red Hat Enterprise
Linux 7.4 的现有 Pacemaker 集群环境中的步骤。
::: orderedlist
1.  在您要配置为远程节点的节点上，允许通过本地防火墙与集群相关的服务。
    ``` screen
    # firewall-cmd --permanent --add-service=high-availability
    success
    # firewall-cmd --reload
    success
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您直接使用 `iptables`{.literal}，或者 `firewalld`{.literal}
    之外的其他防火墙解决方案，只需打开以下端口： TCP 端口 2224 和 3121。
    :::
2.  在远程节点上安装 [**pacemaker_remote**]{.command} 守护进程。
    ``` screen
    # yum install -y pacemaker-remote resource-agents pcs
    ```
3.  在远程节点上启动并启用 `pcsd`{.literal}。
    ``` screen
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
4.  如果您还没有这样做，请在要添加为远程节点的节点中验证
    `pcs`{.literal}。
    ``` screen
    # pcs cluster auth remote1
    ```
5.  使用以下命令在集群中添加远程节点资源。此命令还会将所有相关配置文件同步到新节点，启动节点，并将其配置为在引导时启动
    `pacemaker_remote`{.literal}。这个命令必须运行在集群节点中，而不必在要添加的远程节点中运行。
    ``` screen
    # pcs cluster node add-remote remote1
    ```
6.  在集群中添加 `远程`{.literal}
    资源后，您可以像在集群中的任何其他节点一样对待远程节点。例如，您可以创建资源并在远程节点中运行的资源上放置资源约束，如下命令可在集群节点中运行。
    ``` screen
    # pcs resource create webserver apache configfile=/etc/httpd/conf/httpd.conf op monitor interval=30s
    # pcs constraint location webserver prefers remote1
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    资源组、colocation 约束或顺序约束中永远不会涉及远程节点连接资源。
    :::
7.  为远程节点配置保护资源。远程节点的隔离方式与集群节点相同。配置保护资源，以便使用与集群节点相同的远程节点。但请注意，远程节点永远不会启动隔离操作。只有群集节点能够真正对另一节点执行隔离操作。
:::
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#remotenode_config-7.3}配置概述：远程节点（红帽企业 Linux 7.3 及更早版本） {.title}
:::
本节概述了配置 Pacemaker 远程节点以及将该节点集成到 Red Hat Enterprise
Linux 7.3（及更早）系统中的现有 Pacemaker 集群环境中的步骤。
::: orderedlist
1.  在您要配置为远程节点的节点上，允许通过本地防火墙与集群相关的服务。
    ``` screen
    # firewall-cmd --permanent --add-service=high-availability
    success
    # firewall-cmd --reload
    success
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您直接使用 `iptables`{.literal}，或者 `firewalld`{.literal}
    之外的其他防火墙解决方案，只需打开以下端口： TCP 端口 2224 和 3121。
    :::
2.  在远程节点上安装 [**pacemaker_remote**]{.command} 守护进程。
    ``` screen
    # yum install -y pacemaker-remote resource-agents pcs
    ```
3.  所有节点（集群节点和远程节点）必须安装相同的身份验证密钥才能使通信正常工作。如果您在现有节点上已有密钥，请使用该密钥并将其复制到远程节点。否则，在远程节点上创建新密钥。
    在远程节点上输入以下一组命令，为具有安全权限的身份验证密钥创建目录。
    ``` screen
    # mkdir -p --mode=0750 /etc/pacemaker
    # chgrp haclient /etc/pacemaker
    ```
    以下命令显示一种在远程节点上创建加密密钥的方法。
    ``` screen
    # dd if=/dev/urandom of=/etc/pacemaker/authkey bs=4096 count=1
    ```
4.  在远程节点上启动并启用 [**pacemaker_remote**]{.command} 守护进程。
    ``` screen
    # systemctl enable pacemaker_remote.service
    # systemctl start pacemaker_remote.service
    ```
5.  在集群节点中，使用与远程节点上的身份验证密钥相同的路径为共享身份验证密钥创建一个位置，并将密钥复制到该目录中。在本例中，密钥从创建密钥的远程节点复制。
    ``` screen
    # mkdir -p --mode=0750 /etc/pacemaker
    # chgrp haclient /etc/pacemaker
    # scp remote1:/etc/pacemaker/authkey /etc/pacemaker/authkey
    ```
6.  在集群节点中输入以下命令来创建 `远程`{.literal}
    资源。在本例中，远程节点是 `remote1`{.literal}。
    ``` screen
    # pcs resource create remote1 ocf:pacemaker:remote
    ```
7.  创建 `远程`{.literal}
    资源后，您可以像在集群中的任何其他节点一样对待远程节点。例如，您可以创建资源并在远程节点中运行的资源上放置资源约束，如下命令可在集群节点中运行。
    ``` screen
    # pcs resource create webserver apache configfile=/etc/httpd/conf/httpd.conf op monitor interval=30s
    # pcs constraint location webserver prefers remote1
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    资源组、colocation 约束或顺序约束中永远不会涉及远程节点连接资源。
    :::
8.  为远程节点配置保护资源。远程节点的隔离方式与集群节点相同。配置保护资源，以便使用与集群节点相同的远程节点。但请注意，远程节点永远不会启动隔离操作。只有群集节点能够真正对另一节点执行隔离操作。
:::
:::