# 关键概念
> 原文：
*   关系数据库用于数据存储。即使是文件也可以用来存储数据，但是关系数据库的设计有特定的目标:
    *   效率
    *   易于访问和管理
    *   组织
    *   处理数据之间的关系(表示为表格)
*   事务:一个工作单元，可以包含多个一起执行的语句
*   酸性
    保证数据库事务数据完整性的一组属性
    *   原子性:每个事务都是原子性的(成功或完全失败)
    *   一致性:事务只产生有效状态(包括规则、约束、触发器等)。)
    *   隔离:在并发系统中，每个事务都独立于其他事务安全地执行
    *   持久性:已完成的事务不会因为任何后来的失败而丢失
    下面举几个例子来说明上述性质。
    *   账户 a 的余额为₹200，账户 b 的余额为₹400.账户 a 将₹100 转移到账户 b。该交易从发送方扣除，并在接收方的余额中增加。如果第一个操作成功通过，而第二个失败，a 的余额将是₹100，而 b 将拥有₹400 而不是₹500.DB 中的原子性确保部分失败的事务被回滚。
    *   如果上面的第二个操作失败，它会使 DB 不一致(操作前后的帐户余额总和不相同)。**一致性**确保这种情况不会发生。
    *   有三个操作，一个是为 a 的账户计算利息，另一个是将利息加到 a 的账户，然后将₹100 从 b 转移到 a。在没有**隔离**保证的情况下，同时执行这三个操作每次都可能导致不同的结果。
    *   如果系统在事务写入磁盘之前崩溃，会发生什么情况？**耐久性**确保在恢复期间正确应用更改。
    *   关系数据
    *   表格代表关系
    *   列(字段)代表属性
    *   行是单独的记录
    *   模式描述了数据库的结构
    *   结构化查询语言
    一种用于交互和管理数据的查询语言。
    [CRUD 操作](https://stackify.com/what-are-crud-operations/) -创建、读取、更新、删除查询
    管理操作-创建数据库/表/索引等，备份，导入/导出，用户，访问控制
    练习:将以下查询分为四种类型- DDL(定义)、DML(操作)、DCL(控制)和 TCL(事务),并详细解释。
    ```sh
    insert, create, drop, delete, update, commit, rollback, truncate, alter, grant, revoke 
    ```
    您可以在[实验室部分](https://linkedin.github.io/school-of-sre/level101/databases_sql/lab/)练习这些。
*   限制
    可以存储的数据的规则。如果违反表中定义的任何一项，查询将失败。
    主键:包含唯一值的一列或多列，不能包含空值。一个表只能有一个主键。默认情况下会创建一个索引。
    外键:将两个表链接在一起。其值与另一个表中的主键匹配\ Not null:不允许空值\ Unique:列的值在所有行中必须是唯一的\ Default:如果在插入期间没有指定任何值，则为列提供默认值
    检查:仅允许特定值(如余额> = 0)
*   [指标](https://datageek.blog/en/2018/06/05/rdbms-basics-indexes-and-clustered-indexes/)
    大多数索引使用 B+树结构。
    为什么使用它们:加速查询(在只获取几行的大型表中，最小/最大查询，通过排除考虑行等)
    索引类型:唯一、主键、全文、次要
    写负载繁重，主要是全表扫描或访问大量行等。不从索引中受益
*   [加入](https://www.sqlservertutorial.net/sql-server-basics/sql-server-joins/)
    允许您从多个表中获取相关数据，用一些公共字段将它们链接在一起。功能强大，但也是资源密集型的，并使数据库难以扩展。这是大规模运行时许多查询执行缓慢的原因，解决方案几乎总是寻找减少连接的方法。
*   [访问控制](https://dev.mysql.com/doc/refman/8.0/en/access-control.html)
    数据库拥有用于管理任务的特权帐户，以及用于客户端的普通帐户。对哪些操作(DDL、DML 等)有细粒度的控制。前面讨论过的)被允许用于这些帐户。
    DB 首先验证用户凭证(身份验证)，然后通过在一些内部表中查找这些信息来检查是否允许该用户执行请求(授权)。
    其他控制包括允许检查用户操作历史的活动审计，以及定义查询、连接等数量的资源限制。允许。
### 流行数据库
商业、封闭源代码——Oracle、Microsoft SQL Server、IBM DB2
带有可选付费支持的开源软件——MySQL、MariaDB、PostgreSQL
由于商业软件的巨大成本，个人和小公司总是更喜欢开源数据库。
最近，即使是大型组织也已经从商业软件转向开源软件，因为它具有灵活性和成本节约。
缺少支持不再是一个问题，因为开发者和第三方可以提供付费支持。
MySQL 是使用最广泛的开源数据库，它得到了主机提供商的广泛支持，任何人都可以轻松使用。它是流行的 Linux-Apache-MySQL-PHP([LAMP](https://en.wikipedia.org/wiki/LAMP_(software_bundle)))栈的一部分，该栈在 21 世纪开始流行。对于编程语言，我们有更多的选择，但是堆栈的其余部分仍然被广泛使用。