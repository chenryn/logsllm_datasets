If you're planning to script a mini-application for both macOS and Windows terminals, the choice between Ruby and Python largely depends on your personal preference. However, there are a few factors that might influence your decision:

1. **Popularity and Community Support**: Python is generally more popular and has a larger community, which means you'll find more resources, libraries, and support. This can be particularly helpful if you're new to scripting or need to solve specific problems.

2. **Maturity and Ecosystem**: Python has a more mature ecosystem with a wide range of libraries and frameworks, making it a versatile choice for various tasks. This maturity also extends to its cross-platform capabilities, ensuring better compatibility and fewer issues when running your scripts on different operating systems.

3. **Availability**:
   - **macOS**: Both Python and Ruby come pre-installed on macOS, so you won't need to install anything extra.
   - **Windows**: Neither Python nor Ruby is installed by default on Windows. You will need to download and install them manually. However, Python's installation process is straightforward and well-documented, making it a bit easier to set up.

Given these points, Python might be a slightly better choice due to its broader adoption and robust ecosystem. However, if you have a specific reason to prefer Ruby (e.g., familiarity, project requirements, or team preferences), it is also a capable and powerful language for scripting.

In summary, while both languages are suitable for scripting, Python's popularity and extensive support make it a strong candidate. Ultimately, the choice comes down to your personal preference and the specific needs of your project.

Thank you for considering these points!