Query Optimization Techniques for Partitioned Tables
Herodotos Herodotou Nedyalko Borisov Shivnath Babu∗
DukeUniversity DukeUniversity DukeUniversity
Durham,NorthCarolina,USA Durham,NorthCarolina,USA Durham,NorthCarolina,USA
PI:EMAIL PI:EMAIL PI:EMAIL
ABSTRACT
UsesofTablePartitioninginDatabaseSystems
Table partitioning splits a table into smaller parts that can be ac- Efficientpruningofunneededdataduringqueryprocessing
cessed,stored,andmaintainedindependentofoneanother. From Paralleldataaccess(partitionedparallelism)duringqueryprocessing
theirtraditionaluseinimprovingqueryperformance,partitioning Reducing data contention during query processing and administrative
strategieshaveevolvedintoapowerfulmechanismtoimprovethe tasks.Fasterdataloading,archival,andbackup
overallmanageabilityofdatabasesystems. Tablepartitioningsim- Efficientstatisticsmaintenanceinresponsetoinsert,delete,andupdate
rates.Bettercardinalityestimationforsubplansthataccessfewpartitions
plifiesadministrativetaskslikedataloading,removal,backup,statis-
Prioritizeddatastorageonfaster/slowerdisksbasedonaccesspatterns
ticsmaintenance,andstorageprovisioning.Querylanguageexten-
Fine-grainedcontroloverphysicaldesignfordatabasetuning
sionsnowenableapplicationsanduserqueriestospecifyhowtheir
Efficientandonlinetableandindexdefragmentationatthepartitionlevel
resultsshouldbepartitionedforfurtheruse. However,queryopti-
Table1:Usesoftablepartitioningindatabasesystems
mizationtechniqueshavenotkeptpacewiththerapidadvancesin
usageandusercontroloftablepartitioning. Weaddressthisgap anotherpartitionmaycontainallsalesrecordsforFebruary,andso
bydevelopingnewtechniquestogenerateefficientplansforSQL on. A table can also be partitioned vertically with each partition
queriesinvolvingmultiwayjoinsoverpartitionedtables.Ourtech- containingasubsetofcolumnsinthetable.Hierarchicalcombina-
niques are designed for easy incorporation into bottom-up query tionsofhorizontalandverticalpartitioningmayalsobeused.
optimizers that are in wide use today. We have prototyped these Thetrendofrapidlygrowingdatasizeshasamplifiedtheusage
techniquesinthePostgreSQLoptimizer. Anextensiveevaluation ofpartitionedtablesindatabasesystems.Table1listsvarioususes
shows that our partition-aware optimization techniques, with low of table partitioning. Apart from giving major performance im-
optimizationoverhead,generateplansthatcanbeanorderofmag- provements,partitioningsimplifiesanumberofcommonadminis-
nitudebetterthanplansproducedbycurrentoptimizers. trativetasksindatabasesystems. Inthispaper,wefocusonhori-
zontaltablepartitioningincentralizedrow-storedatabasesystems
CategoriesandSubjectDescriptors such as those sold by major database vendors as well as popular
open-sourcesystemslikeMySQLandPostgreSQL.Theusesofta-
H.2.4[DatabaseManagement]:Systems—queryprocessing
blepartitioninginthesesystemshavebeenstudied[2,24].
Thegrowingusageoftablepartitioninghasbeenaccompanied
GeneralTerms byeffortstogiveapplicationsanduserstheabilitytospecifyparti-
tioningconditionsfortablesthattheyderivefrombasedata. SQL
Algorithms
extensions from database vendors now enable queries to specify
howderivedtablesarepartitioned(e.g., [11]). Givensuchexten-
Keywords
sions, Database Administrators (DBAs) may not be able to con-
queryoptimization,partitioning trolorrestricthowtablesaccessedinaqueryarepartitioned. Fur-
thermore,multipleobjectives—e.g.,gettingfastdataloadingalong
1. INTRODUCTION withgoodqueryperformance—andconstraints—e.g.,onthemax-
Tablepartitioningisastandardfeatureindatabasesystemstoday imumsizeornumberofpartitionspertable—mayneedtobemet
[13,15,20,21]. Forexample,asalesrecordstablemaybeparti- whilechoosinghoweachtableinthedatabaseispartitioned.
tionedhorizontallybasedonvaluerangesofadatecolumn. One 1.1 QueryOptimizationforPartitionedTables
partition may contain all sales records for the month of January, Queryoptimizationtechnologyhasnotkeptpacewiththegrow-
∗SupportedbyNSFgrants0964560and0917062 ingusageandusercontroloftablepartitioning. Previously,query
optimizershadtoconsideronlytherestrictedpartitioningschemes
specified by the DBA on base tables. Today, the optimizer faces
a diverse mix of partitioning schemes that expand on traditional
Permissiontomakedigitalorhardcopiesofallorpartofthisworkfor schemes like hash and equi-range partitioning. Hierarchical (or
personalorclassroomuseisgrantedwithoutfeeprovidedthatcopiesare multidimensional)partitioningisonesuchschemetodealwithmul-
notmadeordistributedforprofitorcommercialadvantageandthatcopies tiplegranularitiesorhierarchiesinthedata[4].Atableisfirstpar-
bearthisnoticeandthefullcitationonthefirstpage.Tocopyotherwise,to titionedononeattribute. Eachpartitionisfurtherpartitionedona
republish,topostonserversortoredistributetolists,requirespriorspecific
differentattribute;andsoonfortwoormorelevels.
permissionand/orafee.
Figure1showsanexamplehierarchicalpartitioningforatable
SIGMOD’11,June12–16,2011,Athens,Greece.
S(a,b)whereattributeaisanintegerandattributebisadate. S
Copyright2011ACM978-1-4503-0661-4/11/06...$10.00.
Figure1:AhierarchicalpartitioningoftableS
isequi-partitionedonrangesofaintofourpartitionsS -S ,each
1 4
ofwhichisfurtherpartitionedonrangesofb. Figure2showshow
thehierarchicalpartitioningoftableScanbeinterpretedasatwo-
dimensionalpartitioning. Thefigurealsoshowspartitionsforta- Figure2: PartitioningoftablesR,S,T,U. Dottedlinesshow
bles R(a), T(a), and U(b). R, S, and T are all partitioned on partitionswithpotentiallyjoiningrecords
a—typicalformultiplerelateddatasourcesorevenstar/snowflake
S andT . Thus,thefullR S T joincanbebrokenup
23 3
schemas—butwithdifferentrangesduetodatapropertiesandstor-
intosmallerandmoreefficientpartition-wisejoins.
ageconsiderations.Forexample,ifthenumberofrecordswiththe
• ThebestjoinorderforR  (S ∪S )  (T ∪T )can
1 12 13 1 2
samevalueofaislargeinT (e.g.,userclicks),thensmallerranges
bedifferentfromthatforR (S ∪S )T .Onelikely
2 22 23 3
willgivemoremanageablepartitions.
reasonischangeinthedatapropertiesoftablesS andT over
TableU ispartitionedusingnonequirangesonbfordataload- time,causingvariationsinstatisticsacrosspartitions.1
ingandarchivalefficiencyaswellasworkloadperformance.Daily
• The best choice of join operators for R  (S ∪S ) 
1 12 13
partitionsfordailyloadsareanattractiveoptionsinceitisfasterto
(T ∪T )maydifferfromthatforR (S ∪S )T ,e.g.,
1 2 2 22 23 3
loadanentirepartitionatatime.However,maintenanceoverheads
duetostorageorphysicaldesigndifferencesacrosspartitions
anddatabaselimitationsonthemaximumnumberofpartitionscan
(e.g.,indexcreatedononepartitionbutnotonanother).
preventthecreationofdailypartitions. Hence,10-dayrangesare
LetusnowconsiderqueryQ tofurtherunderstandthechallenges
used for recent partitions of U. Older data is accessed less fre- 2
andopportunitiesarisingwhileoptimizingqueriesoverpartitioned
quently,soolder10-daypartitionsaremergedintomonthlyonesto
tables.Q isatypicalqueryintraditionalstarschemaswhereafact
improvequeryperformanceandarchivalefficiency. 2
tableisjoinedwithseveraldimensiontablesondifferentattributes.
Theflexiblenatureandrisingcomplexityofpartitioningschemes
posenewchallengesandopportunitiesduringtheoptimizationof Q 2: Select *
queriesoverpartitionedtables.ConsideranexamplequeryQ over From R,S,U
1
thepartitionedtablesR,S,andT inFigure2. Where R.a=S.aandS.b=U.b
andU.b≥02-15-10andR.a<25;
Q : Select *
1 PlanQ P fromFigure3showstheplanthatsimplyappendsthe
From R,S,T 2 1
unprunedpartitionsbeforeperformingthejoins.Giventhejoinand
Where R.a=S.aandS.a=T.a
partitioningconditionsforRandS,theoptimizerhastheoptionof
andS.b≥02-15-10andT.a<25;
creating the partition-wise joins R  (S ∪S ) and R 
1 12 13 2
Useoffilterconditionsforpartitionpruning: Anoptimization (S ∪S ). Theoutputofthesejoinsislogicallypartitionedon
22 23
that many current optimizers apply to Q 1 is to prune partitions attribute a—which does not affect the later join with table U—
T 4-T 8 and S 11, S 21, S 31, S 41 from consideration because it is leadingtotheplanQ 2P 2 inFigure3. Alternatively,theoptimizer
clear from the partitioning conditions that records in these parti- has the option of creating partition-wise joins between S and U
tions will not satisfy the filter conditions. Partition pruning can first,generatingtheplanQ P .
2 3
speed up query performance drastically by eliminating unneces-
1.2 ChallengesandContributions
sarytableandindexscansaswellasreducingmemoryneeds,disk
Theaboveexamplesillustratetheoptimizationpossibilitiesfor
spills,andcontention-relatedoverheads.
SQLqueriesoverpartitionedtables,whichenlargetheplanspace
Useofjoinconditionsforpartitionpruning: Basedonatransi- drastically. To our knowledge, no current optimizer (commercial
tiveclosureofthefilterandjoinconditions,partitionpruningcan orresearchprototype)takesthisspaceintoaccounttofindefficient
alsoeliminatepartitionsS 32,S 33,S 42,S 43,R 3,R 4,andU 1. planswithlowoptimizationoverhead. Weaddressthislimitation
Mostcurrentoptimizerswillstophereasfarasexploitingpar- bydevelopinganovelpartition-awareSQLqueryoptimizer:
titionsduringtheoptimizationofQ isconcerned;andgeneratea
1 Dealing with plan space explosion: A nontrivial challenge we
planlikeQ P showninFigure3.InaplanlikeQ P ,theleafop-
1 1 1 1 have to address in a partition-aware optimizer is to keep the ad-
eratorslogicallyappendtogether(i.e.,UNIONALL)theunpruned
ditionalcomputationalandmemoryoverheadsoftheoptimization
partitionsforeachtable.Eachunprunedpartitionisaccessedusing
processincheckwhileenablinggoodplanstobefound.
regular table or index scans. The appended partitions are joined
usingoperatorslikehash,merge,and(index)nested-loopjoins. Incorporation into state-of-the-art optimizers: The new tech-
niquesweproposearedesignedforeasyincorporationintobottom-
Partition-awarejoinpathselection:Dependingonthedataprop-
upqueryoptimizers(liketheseminalSystemRoptimizer[19])that
erties,physicaldesign,andstoragecharacteristicsinthedatabase
areinwideusetoday.Withthisdesign,weleveragedecadesofpast
system,aplanlikeQ P showninFigure3cansignificantlyout-
1 2 investmentaswellaspotentialfutureenhancementstotheseopti-
performplanQ P . Q P exploitsanumberofpropertiesarising
1 1 1 2 mizers (e.g., new rewrite rules, new join operators, and improve-
frompartitioninginthegivensetting:
mentsinstatisticsandcardinalityestimation).
• RecordsinpartitionR canjoinonlywithS ∪S andT ∪
1 12 13 1
T . Similarly,recordsinpartitionR canjoinonlywithS ∪ 1Mostenterpriseskeep6-24monthsofhistoricaldataonline.
2 2 22
Figure3:Q P andQ P areplansgeneratedbycurrentoptimizersforourexamplequeriesQ andQ respectively.Q P ,Q P ,
1 1 2 1 1 2 1 2 2 2
andQ P areplansgeneratedbyourpartition-awareoptimizer.ISandTSarerespectivelyindexandtablescanoperators.HJ,MJ,
2 3
andINLJarerespectivelyhash,merge,andindex-nested-loopjoinoperators.Unionisabagunionoperator
Partitions as physical or logical properties? The conventional UNION ALL views are a useful construct that can be used to
wisdominthedatabaseliteratureaswellasimplementationincom- support table partitioning [27]. The techniques proposed in this
mercialbottom-upqueryoptimizerstreatpartitionsasphysicalprop- paper are related closely to pushing joins down through UNION
erties[18]. Weshowthattreatingpartitionsonlyasphysicalprop- ALLviews. Forexample,whenaUNIONALLviewrepresenting
ertiesfallswellshortofmakingthebestuseofpartitionedtables. apartitionedtableR=R ∪...∪R isjoinedwithatableS,IBM
1 n
Ouroptimizerconsiderspartitionsefficientlyatboththelogicaland DB2’squeryoptimizerconsiderspushingthejoindowntogener-
physicallevelstogetthebestoftwoworlds: (a)generatingplans ateaUNIONofbase-tablejoins(R S)∪...∪(R S)[27].
1 n
like Q P , Q P , and Q P in Figure 3, and (b) preserving in- However, unlikeourtechniques, thejoinpushdownisconsidered
1 2 2 2 2 3
terestingpartitions[18]thatmaybenefitoperators(e.g.,group-by) inthequery-rewritephase. Astheauthorsof[27]pointout, this
higher-upintheplan. stepcanincreasethetimeandmemoryoverheadsofoptimization
Supportingpracticalpartitioningconditions:Inadditiontocon- significantlybecauseofthelargenumberofjoinsgenerated(espe-
ventionalDBA-specifiedpartitioningconditionsonbasetables,our cially,ifmultipleUNIONALLviewsarejoinedlikeinourexam-
optimizersupportsawiderangeofuser-specifiedpartitioningcon- plequeriesinFigure3).Thetechniquesweproposearedesignedto
ditions including multidimensional partitions, multi-level hierar- keeptheseoverheadsincheck—eveninthepresenceofhundreds
chical partitions, and irregular ranges. The challenge here is to ofpartitions—whileensuringthatgoodplanscanbefound.
deal with complex join graphs arising at the partition level (like PartitioninginParallel/DistributedDBMSs:Whilewefocuson
Figure 2) from the combination of the filter, join, and table-level centralized DBMSs, the partition-aware optimization techniques
partitioningconditionsforaSQLquery. we propose are related closely to data localization in distributed
Improvingcardinalityestimates:Anonobviouseffectarisesfrom DBMSs [16]. Data localization is a query-rewrite phase where
thefactthatmostdatabasesystemskeepstatistics(e.g.,numberof heuristicruleslikefilterpushdownareusedtoprunepartitionsand