account. This is done by filling out information about the business,
merchant, and bank details. The business information includes
name, address, and category (e.g., retail, services, beauty, wellness,
etc.). However, the important information to verify a business such
as company registration number, VAT ID (Value Added Tax Identifi-
cation Number), proof of address and business, and legal identifica-
tion documents is optional. This is to allow any individual to set up
an mPoS terminal. The merchant information includes name, date
of birth, and address. Finally, the bank details include the sort code
and account number. These are needed to deposit payouts after the
transaction fee is deducted from the transaction amount (e.g. 1.69%
for contactless transactions using a Sumup device).
When the Sumup online account is set up, the merchant needs
to install the Sumup app on their mobile phone and pair it with
the terminal via Bluetooth. The mobile phone would serve as an
intermediary that connects the mPoS terminal to the acquirer bank.
To initiate a payment, the merchant first specifies an amount on
the mPoS device, up to a spending limit. The user then pays for the
amount, either using contactless payment or inserting a chip-and-
PIN card. The transaction data will be sent from the mPoS terminal
to the mobile phone via Bluetooth, and then further relayed to the
payment network via the Internet. When a chip-and-PIN card is
inserted, a PIN is also required. However, in the case of contactless
payment, no PIN is required. This is particularly risky for many
users since the payment can be made contactlessly without their
cooperation or even awareness. To test the feasibility of this passive
377ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Mahshid Mehr Nezhad and Feng Hao
3.1 Overview
Fig. 2 shows an overview of the architectural design of our system.
In OPay, both the payment device and the mPoS terminal collect
readings from the accelerometer and gyroscope sensors to inde-
pendently calculate the orientations. The mPoS terminal sends a
challenge to the card to initiate the NFC communication and to
request a contactless payment. The card responds with signed trans-
action data, generated with Message Authentication Code (MAC),
e.g., using HMAC [28] and a MAC key k derived from the shared key
between the card and the issuer bank. Then, the terminal forwards
the transaction data to an issuer bank via a payment network. MAC
protects the transaction data from being modified by the terminal or
any entity in the transmission path. This follows the existing data
flow in the EMV specification [6]. OPay does not change this flow
but adds an encrypted blob of the card’s orientation data, Ori(c), e.g.,
using AES-CBC [28] and a symmetric encryption key derived from
the shared key between the card and the issuer bank [10]. The card’s
secret key shared with the bank is protected by the tamper-resistant
chip, and hence cannot be accessed by the attacker (otherwise the
bank cards can be cloned).
As we will explain later, the orientation data consist of 4 float
numbers (float-16), hence are only 8 bytes. Accordingly, the mPoS
terminal sends its own orientation measurement to the bank. If the
difference between the two orientations is smaller than a threshold,
the bank approves the transactions; otherwise, the transaction is
denied, and the user needs to try again.
This solution preserves the existing usage model as a user makes
a payment naturally as normal. However, to an attacker, it raises
the bar for a successful attack. Without OPay, a passive attacker can
steal money with 100% success on the first attempt. However, with
OPay, as we will show, while legitimate users can still normally
make a successful payment on the first attempt, an attacker will
need to make multiple attempts, which can significantly increase
the chance of attack detection. For example, if the contactless pay-
ment fails consecutively three times due to the misalignment of
the orientations, it will trigger an alert at the issuer bank, which
in turn can send an SMS message to the user’s phone to inform a
suspicious activity.
3.2 Threat model
We consider an mPoS-based passive (MP) attack as the main threat.
As compared to the PR attack, the attacker owns a PoS terminal
and can carry out the attack much more easily. Previous solutions
to prevent the PR attacks, based on distance bounding and ambient
environments, no longer work, since the card and the real terminal
are actually in the same location during the MP attack. In our threat
model, the mPoS terminal holder is malicious and aims to steal
money from the user by getting close to their payment device. It is
called passive because the attack can be done without the user’s
knowledge. The malicious terminal reads the victim’s card passively
to make a contactless transaction. The amount of the payment is a
variable up to the spending limit (£100 in the UK from the end of
2021). This attack can be performed in crowded places such as bus
and train stations, a shopping mall, or a concert.
Random Guessing Attack: In this scenario, the attacker has
no knowledge of the card’s orientation, e.g., when the card is kept
Figure 2: Architecture of OPay
inside the user’s bag. The attacker randomly chooses an orientation
angle in the 3D space and rotates it until they succeed in aligning
the two devices. In a random guessing attack, the attacker has a
limited chance of success in each try and therefore needs to make
several tries until the transaction is approved. Consecutively failed
attempts will substantially increase the chance of detection by the
bank.
Targeted Guessing Attack: We also consider the scenario that
the attacker has partial knowledge of the card’s orientation, e.g.,
when the card is kept in a wallet in the user’s pocket. Depending on
the visibility of the pocket, the attacker knows that the orientation
of the card may be limited to a certain range and hence can have a
higher chance of success in guessing the card’s orientation. How-
ever, our solution still raises the bar for the attacker significantly.
As opposed to merely approaching the victim’s card within the
NFC range (typically 10 cm) from any direction in any angle to
make a contactless deduction, the attacker now needs to place the
mPoS device near the victim’s pocket with parallel alignment to
the card’s orientation. This significantly increases the chance of
the exposure of the attack to the user and the nearby people.
Attacks Beyond Scope: The malicious mPoS terminal holder
may be equipped with a portable x-ray scanner and be able to see
through opaque objects (e.g., bags) to analyze the orientation of
the card. OPay is vulnerable to this kind of attack. However, the
constant use of x-ray will present a health threat to the attacker,
which can serve as a deterrence. It can also raise suspicion when
used in public places. We note that certain cameras (e.g., OnePlus
8 Pro) claim to have an “x-ray vision”, but they merely adjust the
color filter lens to let through infrared light, hence cannot see
through opaque objects as x-ray does [4]. OPay is also vulnerable
to Denial-of-Service (DoS) attacks when an attacker intends to
disrupt or manipulate the communication channel. As the malicious
mPoS terminal holder intends to communicate with the payment
device to steal money, they do not have the intention to disrupt
378OPay: an Orientation-based Contactless Payment Solution Against Passive Attacks
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
moves. We use the latter to describe the orientation. Therefore,
orientation is a rotation that takes a quantity in a parent refer-
ence frame to a child reference frame. We consider the geodetic
coordinate system (earth) as the reference frame (parent), and the
North-East-Down (NED) coordinate system as the coordinate frame
(child) where the positive x-axis points north, y-axis points east,
and the z-axis points downward. To define three-dimensional frame
rotation (axis of rotation), we rotate sequentially about the z, y, x
axes respectively.
Orientation is usually represented as a quaternion, rotation ma-
trix, a set of Euler angles, or rotation vector [21]. We use unit
quaternions to represent orientation as they are more compact [7].
A quaternion is defined as a four-part hyper-complex number used
in a four-dimensional vector space over the real numbers R4. It is
represented in the form of the following:
(1)
where a, b, c, and d are real numbers, and i, j, and k are the basis
elements, satisfying the equation:
q = a + bi + cj + dk
i2 = j2 = k2 = ijk = −1
q = cos (θ/2) + sin (θ/2)(bi + cj + dk)
(2)
Every element of q has a unique representation based on a linear
combination of the basis elements i, j, and k. We define an axis of
rotation and an angle of rotation for each rotation (orientation) as
below:
(3)
where θ is the angle of rotation and (bi + cj + dk) is the axis of
rotation.
3.4 Similarity Comparison
There are multiple ways to measure distances between unit quater-
nions. Polar forms, dot product, and L2 distance are the most pop-
ular forms [21]. Although these representations are in different
forms, they are functionally equivalent. For simplicity, we choose
dot-product of the two quaternions for comparing and measuring
the angle between them. Having the qt = at + bt i + ct j + dt k as
the orientation of the mPoS terminal and qc = ac + bc i + cc j + dc k
representing the orientation of the card, the dot-product between
them is defined as:
qt · qc = at ac + bt bc + ct cc + dt dc
(4)
The result of the dot-product is a scalar within the range −1 ⩽
qt · qc ⩽ +1. Considering Equation (3) and using the absolute value
of the dot product in Equation (4), we can calculate the angle (in
range of 0 and 90 degrees) between the two devices as follows.
θ = cos−1(|qt · qc|)
(5)
To show the correlation of the angle between the dot-product,
we collected data for different orientation sets between the card and
the terminal, with a varying angle from 0 to 180 degrees. As one
of the devices (the mPoS terminal) is fixed on the table, we rotated
the other device (payment device/card) from 0 to 180 degrees. Fig. 4
shows the results where the x-axis is the degree of rotation and the
y-axis is the dot-product in the range of 0 and 1. It can be seen from
the diagram that the card and the terminal are in perfect alignment
(i.e., |qt · qc| = 1) when the angle is at 0 and 180 degrees and are
perpendicular to each other (i.e., |qt · qc| = 0) when the angle is at
(a) Fusing accelerometer, gyroscope and magnetometer
(b) Fusing accelerometer and gyroscope
Figure 3: Display of the orientation alignments between two
aligned devices
the communication channel. Therefore, DoS attacks are out of the
scope of this paper.
3.3 Orientation Estimation
For orientation estimation, three types of sensors are commonly
used: accelerometer, gyroscope, and magnetometer. They measure
acceleration, angular velocity, and local magnetic field respectively.
It is expected that combining all three sensors may give the best
result. To verify whether this combination is suitable in the con-
text of our application, we chose an MPU-9250 Multi-Chip Module
(MCM) which has all these sensors. The MPU-9250 is a 9-axis Mo-
tion Tracking device that combines a 3-axis gyroscope, a 3-axis
accelerometer, and a 3-axis magnetometer. In our prototype, this
module was embedded in an Arduino board, connected to a laptop
for data collection. When we put the two Arduino boards together
in close proximity to simulate a contactless payment process, we
found fusing all three sensors gave a misalignment but fusing only
accelerometer and gyroscope data gave the expected alignment (see
Figure 3). This is because when the two devices are placed in close
proximity, the magnetometer measurements will be distorted due
to the co-presence of a nearby magnetometer. Therefore, in our pro-
totype, we only use the accelerometer and gyroscope data, which
are fused by applying the six-axis Kalman filter algorithm [21] to
estimate orientation.
We consider the definition of orientation as an angular displace-
ment that can be described in terms of point or frame rotation. In
point rotation, the coordinate system is static and the point moves.
In frame rotation, the point is static and the coordinate system
379ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Mahshid Mehr Nezhad and Feng Hao
Figure 4: The Correlation between the angle of rotation and
dot-product of quaternions
the 90 degrees. In our design, we consider the situation that a user
may make a transaction by either placing the front or back of their
card on the PoS terminal. We treat them as being equivalent, hence,
the angles of 0 and 180 degrees are both considered as aligned. In
other applications, they can be treated differently if the user can
distinguish the front and back of a card/device. In Figure 4, the
values of the dot product are not completely symmetric according
to the 90 degrees. This is because we embed the motion sensors on
one side of the Arduino board, and the prototype of the card is not
completely symmetric with reference to the board plane.
3.5 Threshold Calculation
To either accept or reject a transaction, the bank needs to make a
decision based on comparing the orientation angles between the
two devices. To calculate the threshold for the comparison, we use
the False Acceptance Rate (FAR) and False Rejection Rate (FRR). FAR
is the percentage of instances in which unauthorized transactions
are incorrectly accepted. FRR is the percentage of instances in
which authorized transactions are incorrectly rejected. The chosen
threshold should give an appropriate trade-off between the security
of the system and the usability experienced by users. In Section 4.3,
we conduct a user study to determine the threshold and report the
corresponding system performance.
4 SYSTEM PROTOTYPE AND EVALUATION
We implemented a proof-of-concept prototype for the OPay system
and conducted a user study to evaluate the system performance.
4.1 Implementation
In the prototype, we developed two Arduino boards, one for the
mPoS terminal and one for the card (payment device). On each
of these boards, we used an MPU-9250 sensor for capturing the
accelerometer and gyroscope data and a PN-532 NFC RFID module
(version 3) for establishing the NFC communication between the
two boards. Arduino Uno microcontrollers were used for program-
ming these sensors. We used the P2P NFC communication between
the two PN-532 modules in an Inter-integrated Circuit (I2C) mode,
Figure 5: A prototype of the proposed solution. The orienta-
tions of the two devices are derived from the accelerometer
and gyroscope data and are displayed in a simulated contact-
less payment.
programming one NFC module as the initiator (acting as an mPoS
terminal), and the other as the target (acting a payment card).
When the user holds the card near the NFC field of the mPoS
terminal to make a simulated contactless payment, the NFC sensor
embedded on the terminal detects the presence of another NFC sen-
sor in close proximity, and hence initiates the NFC communication
between the two devices. The motion sensors embedded on the two
Arduino boards independently record the accelerometer and gyro-
scope measurements. In our proof-of-concept implementation, the
collected sensor data on each board are transmitted via a serial port
cable to a laptop for further processing. The orientations of the two
Arduino boards which represent the card and the terminal respec-
tively are derived based on Section 3.3 and then compared. Based
on the similarity, the transaction is either approved or rejected. The
implemented prototype is shown in Fig. 5.
4.2 User study
Our user study involved 20 volunteers of different backgrounds
from within and outside the university. Table 1 summarizes the
demographics of the participants. Our user study was ethically
approved by our university scientific research ethics committee. We
also followed the UK government guideline on COVID-19 to assure
the safety of our participants. While wearing face-covering during
all times of the study, we provided hand sanitizers, antibacterial
wipes, and face masks to all of our participants and sanitized all
surfaces after each user experiment.
In our user study, each of the participants performed three exper-
iments, and in each experiment, the data collection was repeated
five times. In the first experiment, we fixed the terminal board on
the table, and asked users to hold the card board to make a simu-
lated contactless payment as they normally do in real life (see Fig. 6
a). In the second and third experiments, we asked the participants
380OPay: an Orientation-based Contactless Payment Solution Against Passive Attacks
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Demographic
Gender
Male
Female
Age
18-25