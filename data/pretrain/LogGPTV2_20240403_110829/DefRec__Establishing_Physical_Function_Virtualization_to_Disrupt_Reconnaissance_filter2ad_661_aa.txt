title:DefRec: Establishing Physical Function Virtualization to Disrupt Reconnaissance
of Power Grids' Cyber-Physical Infrastructures
author:Hui Lin and
Jianing Zhuang and
Yih-Chun Hu and
Huayu Zhou
DefRec: Establishing Physical Function
Virtualization to Disrupt Reconnaissance of Power
Grids’ Cyber-Physical Infrastructures
Hui Lin
Jianing Zhuang
University of Nevada, Reno
{hlin2, jzhuang}@{unr, nevada.unr}.edu
Yih-Chun Hu
Huayu Zhou
University of Illinois, Urbana-Champaign
University of Nevada, Reno
PI:EMAIL
PI:EMAIL
Abstract—Reconnaissance is critical for adversaries to prepare
attacks causing physical damage in industrial control systems
(ICS)
like smart power grids. Disrupting reconnaissance is
challenging. The state-of-the-art moving target defense (MTD)
techniques based on mimicking and simulating system behaviors
do not consider the physical infrastructure of power grids and
can be easily identiﬁed.
To overcome these challenges, we propose physical function
virtualization (PFV) that “hooks” network interactions with real
physical devices and uses these real devices to build lightweight
virtual nodes that follow the actual implementation of network
stacks, system invariants, and physical state variations in the
real devices. On top of PFV, we propose DefRec, a defense
mechanism that signiﬁcantly increases the effort required for an
adversary to infer the knowledge of power grids’ cyber-physical
infrastructures. By randomizing communications and crafting
decoy data for virtual nodes, DefRec can mislead adversaries
into designing damage-free attacks. We implement PFV and
DefRec in the ONOS network operating system and evaluate
them in a cyber-physical testbed, using real devices from different
vendors and HP physical switches to simulate six power grids.
The experimental results show that with negligible overhead, PFV
can accurately follow the behavior of real devices. DefRec can
delay adversaries’ reconnaissance for more than 100 years by
adding a number of virtual nodes less than or equal to 20% of
the number of real devices.
I.
INTRODUCTION
Reconnaissance is crucial to an adversary’s preparation
for an attack on industrial control systems like smart power
grids (ICS) [77]. By obtaining in-depth knowledge of physical
processes, adversaries can determine “attack-concept” opera-
tions to cause devastating physical disruptions without raising
alarms [10], [17]. For the attack on a Ukrainian power plant
that caused a blackout affecting 225,000 residents [37], [38],
security analysis directly indicates that “the strongest capabil-
ity of the attackers was ... to perform reconnaissance operations
required to learn the environment.” Reconnaissance allows
adversaries to design attack strategies that cause physical
damage (e.g., compromising measurement data or maliciously
turning off switches).
Network and Distributed Systems Security (NDSS) Symposium 2020
23-26 February 2020, San Diego, CA, USA
ISBN 1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24365
www.ndss-symposium.org
Compared to passive intrusion detection systems (IDS),
which detect attacks after malicious activities, preemptive
approaches that can disrupt reconnaissance before an adversary
starts to inﬂict physical damage are highly desirable. First, by
preventing reconnaissance on a critical set of physical data, we
can cover a wide spectrum of attacks, including unknown ones.
Although adversaries may exploit different vulnerabilities and
perform diverse malicious activities to cause different types of
physical damage, they rely on the same physical processes
from the target system to plan effective attack strategies.
Second, we can detect and mislead attacks before adversaries
execute their strategies and inﬂict damage. Detecting attacks
at this early stage enables us to remove potential threats and
prevent damage.
Despite all these beneﬁts, there exists a big research gap to
design practical and efﬁcient anti-reconnaissance approaches.
Current research, such as moving target defense (MTD) tech-
niques, relies on mimicking and simulation of system behav-
iors and thus, has critical drawbacks. First, mimicking system
behaviors can be easily detected [25] because it often poorly
follows a complete system speciﬁcation and lacks interactions
with environments. Second, simulations of network infrastruc-
ture, often used in honeypots or honeynets [6], [11], [72], are
based on a static speciﬁcation. Even if the implementation is
perfectly consistent with a protocol speciﬁcation, it can still
be different from the actual implementation of a real system,
e.g., one with proprietary implementation in a real utility envi-
ronment. Last, those state-of-the-art honeypot projects for ICS
do not model physical processes and system-level behaviors,
e.g., latencies of executing control commands and variations
of physical states, which can vary at different locations and
times. Adversaries can exploit those state variations to identify
the simulation [18].
A. Contributions
To overcome the drawbacks of mimicking and simulations,
we propose the design of physical function virtualization
(PFV) to build lightweight virtual nodes that follow the actual
implementation of network stacks, physical state variations,
and system invariants of real physical devices in power
grids. PFV leverages a network control application based
on software-deﬁned networking (SDN) to “hook” network
interactions with real devices and use them as network ﬂows
of virtual nodes (as shown in Figure 1).
PFV’s Role. We position PFV as a complementary service
for power grids, the design concept can be extended to other
ICSs. By adding parsers and encoders of protocols used in
different ICS networks and proﬁling characteristics reﬂecting
system invariants in those environments, PFV can monitor
and manipulate network interactions with real devices without
any proprietary instrumentation. Based on those adjustments
in PFV, the ﬁrst security policy in DefRec that randomizes
communications with virtual nodes is also extensible. The
second security policy relies on the control theoretical model of
power grids. By using the model of physical processes in other
ICSs, we can also implement the security policy for different
utility environments.
The main contributions of the paper are:
•
• To the best of our knowledge, this is the ﬁrst work to
propose the concept of PFV (physical function virtual-
ization) that builds virtual nodes following the actual
implementation of network stacks, system invariants, and
physical state variations of real physical devices.
• To the best of our knowledge, DefRec is also the ﬁrst work
that aims at increasing the difﬁculty for an adversary’s re-
connaissance to infer the knowledge of power grids’ cyber-
physical infrastructures, by randomizing communications
and crafting decoy data for virtual nodes.
For evaluation, we used real devices to implement both
cyber and physical infrastructures of power grids: (i) real
intelligent electronic devices (IED) from three different
vendors, (ii) ﬁve HP SDN-compatible switches to build six
communication networks containing up to 124 nodes, and
(iii) simulations of six real-world power grids containing
up to 1,000 substations.
Our experimental results show that DefRec, together with
PFV, is highly effective at disrupting reconnaissance while
introducing negligible performance overhead:
•
PFV can build virtual nodes closely following the im-
plementation of real devices, including complete network
stacks, system invariants such as latencies of executing
commands, and runtime variations of physical states.
• DefRec can signiﬁcantly increase the reconnaissance ef-
forts to identify real devices, e.g., delaying adversaries for
at least 100 years by adding a number of virtual nodes
less than or equal to 20% of the number of real devices.
• DefRec can craft decoy data to further increase adver-
saries’ reconnaissance on power grids’ physical infrastruc-
ture, with less than 0.5% false negatives.
Performance overhead is negligible: (i) PFV can efﬁ-
ciently construct virtual nodes with the goodput of at
least 1.5 Mbps (sufﬁcient for a power grid with 30,000
measurements), and (ii) DefRec introduces less than 3%
overhead on existing network communications and power
grid operations.
•
II. DESIGN OBJECTIVES
In this section, we ﬁrst present background information on
power grids. Then we describe our design principles based on
the threat model considered in this work.
A. Power Grid Basics
A power grid is an ICS, in which generators supply power
to load demands over a wide geographical area. The generators
•
to identify anomalies;
Fig. 1: Design principle of PFV: using SDN to interact with
adversaries on behalf of virtual nodes based on interactions of real
physical devices.
to existing security functionality, including IDSs and honey-
pots. Virtual nodes built by PFV cannot perfectly follow every
aspect of physical devices from a large variety of vendors
without formal coverage analysis (which we leave to future
work). However, based on a concept completely different from
network mimicking and simulation, PFV achieves lightweight
virtualization on network interactions of physical devices,
providing additional protection to complement passive IDSs:
• Considering practical threats with partial compromise.
IDSs, especially anomaly-based ones, rely on a correct
system model
they require that
no compromises occur while building system models.
These assumptions are unrealistic and even dangerous
in practice [65]. PFV considers a strong threat model
in which adversaries have already compromised power
grids’ networks and no trust is needed on complicated
SCADA (supervisory control and data acquisition) systems
or substation conﬁgurations. PFV can potentially extend
future IDSs to ﬁght against practical and realistic threats.
Increasing reconnaissance efforts. Virtual nodes follow
the behavior of real devices at a ﬁne-grained level that
makes it computationally expensive, if not impossible, for
adversaries to efﬁciently distinguish real devices from vir-
tual nodes. Consequently, we expect PFV can signiﬁcantly
increase adversaries’ reconnaissance efforts. Compared to
high false detection rates in anomaly-based IDSs [65],
PFV can help to reduce the rate of successful reconnais-
sance by at least three orders of magnitude (as shown in
Section VII-A).
• Regaining computational advantages for defense mech-
anisms. Network packets from virtual nodes provide
additional misleading information for adversaries, while
defense mechanisms can leverage accurate system infor-
mation. In Section V, we show that PFV can even make
vulnerable state estimation used in conventional SCADA
systems robust against stealthy cyberattacks.
Based on PFV, we present DefRec, a speciﬁc defense
mechanism to signiﬁcantly increase the reconnaissance efforts
required to infer the knowledge of power grids’ cyber-physical
infrastructures without affecting legitimate applications that
already know the actual power grid conﬁgurations (e.g., the
identities of real physical devices). DefRec speciﬁes and im-
plements two security policies: (i) obfuscate communications
by adding random interactions with virtual nodes, introducing
signiﬁcant overhead for adversaries to identify real devices;
and (ii) mix decoy data (from virtual nodes) with real data
(from physical devices), based on which adversaries would
design ineffective and easy-to-detect attacks (e.g., activities
that access virtual nodes).
Even though we present the design of DefRec (and PFV)
2
and load demands are connected by transmission lines in a
complex topology, often referred to as a transmission network.
In the graphical representation of a transmission network (e.g.,
in Figure 3), we use a bus to represent a substation, where
generators or load demands are deployed. In each bus and
transmission line, we can have physical measurement data,
including voltage, current, power consumption, and generation.
Fig. 2: Hierarchical network infrastructure of power grids.
In Figure 2, we show a hierarchical communication net-
work used by power grids. A control center uses an IP-
based control network to retrieve data from substation devices
periodically; this process is also known as data acquisition.
the control center uses state
Based on the retrieved data,
estimation to determine the physical state of power grids
(details in Section V-A1).
For further discussion, we use the following deﬁnitions:
Deﬁnition 1. End Devices: Intelligent electronic devices
(IED) located at the end of a communication path connecting
the control center and substations.
End devices connect to sensors or circuit breakers through
hardwired connections in their downstream communications.
In their upstream communications, multiple end devices con-
nect to a higher-level IED, e.g., RTUs (remote terminal units),
which forwards information (e.g., aggregated measurements or
commands) to/from the control center.
Deﬁnition 2. Edge Switches: Network switches located at the
ﬁrst or the last hop of a communication path that connects the
control center and end devices.
B. Design Objective & Threat Model
Assumptions on Adversaries’ Capability. We assume
that adversaries penetrating a control network have limited
knowledge of network conﬁgurations and physical data. We
assume that adversaries can compromise any computing de-
vices connected to the control network; however, they are not
able to obtain knowledge of a whole power grid based on data
collected by those compromised devices. Unlike previous IDS
designs [5], [9], [41], we do not require the trust of SCADA
systems in a control center and end devices in substations
(except a few devices used by PFV, see following paragraphs).
Compared to external adversaries learning power grids
through coarse-grained publicly available data, these “insider”
adversaries are a more signiﬁcant threat. For example, even
though external adversaries can know the basic connection
of substations through satellite pictures, they are not able to
obtain connections of physical devices and measurements these
devices collect, which reﬂect a much more complicated graph
required to design effective attacks [75]. The insider adver-
saries can perform reconnaissance in such ﬁne granularity,
which can only be obtained through internal control networks
(as seen in real attack incidents [37], [38]).
3
For clarity, we classify adversaries’ attack capabilities into
three types. Passive attacks monitor network trafﬁc to obtain
the knowledge of power grids’ cyber-physical infrastructures.
Proactive attacks achieve the same goal by using probing mes-
sages to trigger responses from real devices or virtual nodes.
Active attacks directly manipulate network trafﬁc, including
dropping, delaying, compromising existing network packets,
or injecting new packets. Passive and proactive attacks are
common techniques used by adversaries to perform reconnais-
sance, while active attacks are used to issue attack-concept
operations to cause physical damage.
• RO3:
DefRec’s Objective. DefRec’s objective is to disrupt and
mislead adversaries’ reconnaissance based on passive and
proactive attacks, such that their active attacks become ineffec-
tive. Reconnaissance is a necessary step for “targeted attacks”
in ICSs [8], [39], which are more frequently appearing in real
utilities [17], [37], [38] and are becoming a critical and damag-
ing threat for ICSs, including power grids. In previous targeted
attacks, adversaries have used in-depth knowledge of the
target systems (obtained through reconnaissance) to stealthily
deliver malicious attacks. We specify our anti-reconnaissance
objectives (RO) as follows:
• RO1: for passive attacks on a control network, we aim at
signiﬁcantly lengthening the time required by adversaries to
successfully learn the knowledge of the control network.
• RO2: for proactive attacks on a control network, we aim
at revealing adversaries’ existence with a high probability
and isolating the compromised devices from the network.
for physical knowledge obtained by passive or
proactive attacks, we aim at leveraging intelligently crafted
decoy data to mislead adversaries into designing ineffective
attacks.
To achieve these objectives, we add only the components of
PFV in the trusted computing base (TCB, highlighted in Fig-
ure 3), which includes lightweight SDN controller applications,
network switches to which the SDN controller is attached,
a few real physical devices (referred to as “seed” devices)