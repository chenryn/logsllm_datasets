# Deciding Security of Protocols against Off-line Guessing Attacks

**Author:** Mathieu Baudet  
**Affiliation:** LSV – CNRS & INRIA Futurs Projet SECSI & ENS Cachan, 61, avenue du Président Wilson, 94235 Cachan Cedex, France  
**Email:** [PI:EMAIL]

## Abstract
We present an effective procedure for determining the existence of off-line guessing attacks on security protocols, considering a bounded number of sessions. The procedure involves a constraint-solving algorithm to determine the satisfiability and equivalence of a class of second-order E-unification problems, where the equational theory \( E \) is defined by a convergent subterm rewriting system. To our knowledge, this is the first decidability result that uses the generic definition of off-line guessing attacks proposed by Corin et al., based on static equivalence in the applied pi calculus.

**Categories and Subject Descriptors:**
- C.2.2 [Network Protocol]: Protocol Verification
- D.2.4 [Software/Program Verification]: Formal Methods
- F.4.2 [Grammars and Other Rewriting Systems]: Decision Problems

**General Terms:**
- Security, Theory, Verification

**Keywords:**
- Security Protocols, Formal Methods, Guessing Attacks, Second-Order E-Unification

## 1. Introduction
Guessing attacks, also known as dictionary or brute-force attacks, occur in cryptography when an attacker attempts to guess a secret by trying every possible value. This is feasible only if the number of possible values (the "dictionary") is small, such as \( 2^{32} \) for a weak password or fewer for a vote in an election protocol. However, not all weak secrets can be broken. As pointed out by Lowe, the attacker must still be able to test whether a guess is correct, typically by exploiting redundancy between messages.

Off-line guessing attacks are those in which the attacker does not need to participate in any communication during the guessing phase, though they may have interacted with honest agents beforehand. When the dictionary size is significant, off-line guessing attacks are more practical than on-line ones, making their detection crucial. On-line guessing attacks may require sending as many requests to the network as the size of the dictionary.

Several attempts have been made to characterize off-line guessing attacks from a logical perspective and derive formal methods for detecting them. The current best definition, provided by Corin et al., uses the notion of static equivalence from the applied pi calculus. However, no automatic procedure was given, and the examples dealt only with passive adversaries.

In this paper, we address whether the general definition by Corin et al. is suitable for automatic reasoning. We show that finding off-line guessing attacks is decidable for a bounded number of sessions, where the set of primitives is described by a convergent subterm rewriting system. Our class of protocols includes the initial Dolev-Yao model and subsequent extensions with symmetric encryption, ciphers, compound keys, signatures, and hashes.

Our algorithm is based on solving a class of second-order E-unification problems. We demonstrate that the satisfiability and equivalence of these constraint systems are decidable. These constraint systems represent symbolic traces of protocols, and we use the equivalence to specify the absence of off-line guessing attacks by ensuring the intruder cannot distinguish between two versions of the same symbolic trace: one corresponding to a correct guess and the other to an incorrect guess.

To our knowledge, this is the first decision procedure for finding such off-line guessing attacks. While recent releases of Blanchet's tool Proverif support off-line guessing attacks based on Corin et al.'s definition, our concern is to provide an exact answer using a terminating algorithm for a bounded number of sessions.

### Further Related Work
Delaune and Jacquemard give an NP procedure for verifying trace properties for a bounded number of sessions on protocols with explicit destructors. Our algorithm deals with a more general class of security properties, including resistance to off-line guessing attacks, and relaxes the syntactic conditions on the equational theory.

Abadi and Cortier present an algorithm for deciding static equivalence between closed frames in polynomial time, given a convergent subterm rewriting system. This work corresponds to passive adversaries, while our procedure extends it to active adversaries.

### Outline of the Paper
- **Section 2:** Preliminary definitions and description of our class of constraint systems.
- **Section 3:** Application of the main theorem to decide trace properties and the existence of off-line guessing attacks for a bounded number of sessions.
- **Section 4:** Proof of the main theorem, including a sound and complete set of transformation rules and a terminating strategy.
- **Section 5:** Conclusion.

## 2. Preliminaries

### 2.1 Syntax and Basic Definitions
A signature is a set of symbols \( F \) with non-negative arities. Given a set of variables \( X \), we write \( T(F, X) \) for the set of first-order terms built from \( X \) using symbols in \( F \).

We assume a set of symbols \( F \) partitioned into public symbols \( F_{\text{pub}} \) and private symbols \( F_{\text{priv}} \). We also use an additional set of constants, called parameters \( W = \{w_1, w_2, \ldots, w_k, \ldots\} \).

We fix a set of variables \( X \) partitioned into first-order variables \( X_1 \) and second-order variables \( X_2 \). Second-order variables \( X \) are given with arities, denoted \( \text{ar}(X) \). We assume an infinite number of public constants, first-order variables, and second-order variables of each arity.

Elements of \( T(F, X_1) \) are called first-order terms, and elements of \( T(F_{\text{pub}} \cup W, X_2) \) are called second-order terms. A term is closed if it has no variables, and public if it uses no private symbols. Our second-order terms are always public.

Substitutions are written \( \sigma = \{v_1 \mapsto T_1, \ldots, v_n \mapsto T_n\} \) where \( \text{dom}(\sigma) = \{v_1, \ldots, v_n\} \subseteq X \) and \( \forall i, v_i \neq T_i \). We write \( T\sigma \) for the application of \( \sigma \) to \( T \), and \( \sigma\mu \) for the composition of substitutions. A substitution is closed if all \( T_i \) are closed terms, and idempotent if \( \sigma\sigma = \sigma \).

For each pair of terms \( (t_1, t_2) \), \( \text{mgu}(t_1, t_2) \) denotes a most general unifier of \( t_1 \) and \( t_2 \).

### 2.2 Intruder Constraint Systems
Constraint solving is a standard method for deciding reachability properties in cryptographic protocols for a finite number of sessions. We extend this method to compare the behavior of two systems from the intruder's point of view.

**Definition 1.** Let \( R \) be a rewriting system and \( Y \) a set of \( m \) pairwise distinct second-order variables \( X_1, \ldots, X_m \). Define \( a_i = \text{ar}(X_i) \) and assume \( 0 \leq a_1 \leq a_2 \leq \ldots \leq a_m \). An \( (R, Y) \)-intruder constraint system is a system of equations \( \Sigma \) of the form:

\[
\begin{cases}
X_1[t_1, \ldots, t_{a_1}] =? x_1 \\
\vdots \\
X_m[t_1, \ldots, t_{a_m}] =? x_m \\
s_1 =?_R s_0^1 \\
\vdots \\
s_n =?_R s_0^n
\end{cases}
\]

where the following regularity conditions hold:
1. \( \text{var}(s_1, \ldots, s_n, s_0^1, \ldots, s_0^n) \subseteq \{x_1, \ldots, x_m\} \).
2. For all \( 1 \leq i \leq m \) and \( 1 \leq j \leq a_i \), \( \text{var}(t_j) \subseteq \{x_1, \ldots, x_{i-1}\} \).

A solution to \( \Sigma \) is a closed well-formed substitution \( \theta \) with domain \( \text{dom}(\theta) = \{X_1, \ldots, X_m\} \) such that there exists a closed well-formed substitution \( \theta_0 \) with domain \( \text{dom}(\theta_0) = \{x_1, \ldots, x_m\} \) satisfying:
- For all \( 1 \leq i \leq m \), \( (X_i \theta)[t_1 \theta_0, \ldots, t_{a_i} \theta_0] = x_i \theta_0 \).
- For all \( 1 \leq j \leq n \), \( s_j \theta_0 =_R s_0^j \theta_0 \).

The regularity condition (2) ensures that for each closed substitution \( \theta \) with domain \( \{X_1, \ldots, X_m\} \), there is a unique way to extend it to a closed substitution \( \theta_0 \) with domain \( \{x_1, \ldots, x_m\} \).