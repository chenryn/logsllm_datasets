title:High-Fidelity Modeling of Computer Network Worms
author:Kalyan S. Perumalla and
Srikanth Sundaragopalan
High-Fidelity Modeling of Computer Network Worms 
Kalyan S. Perumalla 
PI:EMAIL 
            Srikanth Sundaragopalan 
                 PI:EMAIL
College of Computing, Georgia Institute of Technology, Atlanta, Georgia 
Abstract
to  capture 
the  general  method  of  choice 
Abstract  modeling,  such as using  epidemic models, 
has  been 
for 
understanding  and  analyzing  the  high-level  effects  of 
worms.  However, high-fidelity models, such as packet-
level  models,  are  indispensable  for  moving  beyond 
aggregate  effects, 
finer  nuances  and 
complexities  associated  with  known  and  future  worms 
in  realistic  network  environments.    Here,  we  first 
identify  the  spectrum  of  available  alternatives  for 
worm  modeling,  and  classify  them  according  to  their 
scalability  and  fidelity.    Among  them,  we  focus  on 
three  high-fidelity  methods  for  modeling  worms,  and 
study  their  effectiveness  with  respect  to  scalability.  
Employing  these  methods,  we  are  then  able  to, 
respectively,  achieve  some  of  the  largest  packet-level 
simulations  of  worm  models  to  date;  implant  and 
attack  actual  worm  monitoring/defense  installations 
inside 
identify  a 
that 
workaround 
fundamentally  constrains  worm  modeling  at 
the 
highest fidelity levels. 
large  simulated  networks;  and 
requirement 
real-time 
for 
1
Introduction 
Abstract  models  such  as  epidemic  models  have  so 
far  been  the  general  means  of  choice  for  modeling 
worm  propagation.    However,  such  models  possess 
limitations due to their many simplifying assumptions.  
They  are  useful  for  certain  studies,  such  as  post 
mortem  analysis,  but  otherwise  poor  in  versatility.  
This 
to 
accommodate complex scenarios, such as sophisticated 
worms,  elaborate  defense  mechanisms,  rich  network 
topologies and variety in background traffic. 
is  especially 
inability 
their 
true 
in 
An  effective  alternative  is  packet-level  modeling, 
which  is  capable  of  capturing  many  fine  details  and 
scenario  variants.    However,  packet-level  simulations 
have so far been considered computationally expensive 
and  hence  prohibitive.    Few  packet-level  models  have 
been  employed  for  large-scale  simulation  studies  of 
worms.    A  reason  behind  the  limited  use  of  packet-
level  models  is  that,  until  recently,  it  has  been 
parallel 
support 
systems 
constrained  by  sequential  execution.    Lately,  with  the 
advent  of  effective  parallel/distributed  processing 
techniques,  packet-level  network  simulations  are 
enabling  the  execution  of  very  large-scale  network 
models  (a  few  millions  of  nodes)  at  packet-level.  
These 
large-scale 
configurations  of  detailed  software  models  of  routers 
and  links  of  the  network,  loaded  by  synthetic  traffic 
introduced  at  end-host  models.    By  utilizing  such 
scalable  packet-level  simulation  environments,  it  is 
now  possible  to  effectively  simulate  and  analyze  the 
propagation  (and  other)  behaviors  associated  with 
worms,  under  realistic  large-scale  phenomena  such  as 
network  congestion,  feedback  and  rich  topological 
layouts.    Moreover,  these  packet-level  environments 
can  be  incrementally  augmented  on  demand,  with 
additional  models,  such  as  of  defense/quarantining 
mechanisms at end-hosts and/or gateway/core routers. 
By exercising this new level of packet-level fidelity 
the  state-of-the-art  parallel  network 
enabled  by 
simulators,  we  undertake  worm  modeling  at  a  large-
scale,  and  explore  the  current  (quantitative)  limits  of 
those environments.  The issues, challenges and results 
in  the  development  of  these  large-scale,  packet-level
worm  models  constitute  the  first  component  in  our 
contributions. 
In our second component, we explore the possibility 
of  further  increasing  the  fidelity  afforded  by  the 
packet-level  models,  by  focusing  on  substituting  parts 
of  the  large-scale  network  with  real,  operational 
subsystems.    In  particular,  we  look  at  the  issue  of 
incorporating  live  monitoring/defense  systems  into  a 
large  simulated  network.    A  honeypot  system  is 
immersed  in  the  virtual  network,  yet  it  is  made 
oblivious to the fact that it is operating within a virtual 
world.  We describe issues and challenges in enabling 
such  a  capability,  which  we  call  constructive 
emulation.  As will be described in greater detail later, 
this differs from traditional network emulation systems 
in a significant way. 
Finally, in our third component, we present a novel 
architecture,  namely,  full  system  virtualization,  which 
is designed to resolve the scalability problems inherent 
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 11:36:04 UTC from IEEE Xplore.  Restrictions apply. 
in methods  in  which  virtual  models  interact  with  real
systems.    While  almost  all high-fidelity  systems  are
limited  at  one  scale  or  another  by  real  time  execution
constraint, this fully virtualized system is free from the
constraint  (hence  arbitrarily  scalable  in  theory),  albeit
at some cost of degraded computational efficiency.
The  rest  of  the  document  is  organized  as  follows.
Section 2  presents  the  spectrum  of worm  modeling
alternatives  and  motivates  the  need  for high-fidelity
worm modeling. Issues,  challenges  and  results  from
large-scale  packet-level  worm modeling  are  described
in  Section 3. 
its
application  to  honeypot  emulation  are  presented  in
Section 4.   The  full  system virtualization approach  is
outlined  in  Section  5.    Finally,  conclusions  and  future
work are presented in Section 6. 
  Constructive  emulation  and 
2 Modeling Alternatives 
Slower-than
Real-Time
Fully Virtualized 
System
Hardware
Testbed
Emulation
System
y
t
i
l
e
d
F
i
Packet-level Simulation
Real-Time
or Faster
Mixed Abstraction 
Simulation
Epidemic
Models
102
103
104
105
106
107
108
Scalability
Figure 1: Range of computer worm modeling
alternatives.  Scalability ranges are based on current day
capabilities of testbeds and tools reported in literature.
Figure 1
The  spectrum of  alternatives  for  worm modeling  is 
shown  in
. These  alternatives roughly mimic
the  alternatives  for  network modeling  in  general.    For 
example,  hardware 
testbeds  developed  for  broad
network research can be applied for studying worms as 
well,  since  worms  only  represent  a  special  case  of 
network applications.
Scalability  of a  method  is defined  as  a  limit  on  the
number of  network nodes modeled  by  that  method.
Network nodes include end-hosts and routers.  Fidelity
in  general  is  hard  to define, but  it  is  possible  to
compare  two methods with  respect  to  their  relative
fidelity.    Fidelity  could  be  based  on  the  amount  of
detail  accounted  for  in  the  network  (e.g.,  routing, 
network  congestion,  etc.), or  in  end-hosts (e.g.,  stack
processing, operating system overheads, etc.).
Hardware  testbeds  have  improved  in  scale  with
recent advancements, with network testbeds scaling to
hundreds or  more  nodes  (e.g.,  EmuLab[1,  2]).
However,  hardware  testbeds  cannot  by  themselves
sustain fidelity with increasing scale. In fact, hardware
testbeds  resort  to  some  form  of  network  simulation
underneath 
virtual
configurations  exceed  physical  resources  in  size  (e.g.,
to emulate link delays or losses).
fidelity  when
improve 
to 
The next level of scalability is achieved via network
emulation.    Emulation  systems  for  network  security
analysis have also scaled in size, with recent emulators
capable  of  sustaining  a  few thousand  nodes  (e.g.,
NetLab[2]  and  ModelNet[3]),  and  are  being  used  in
major network  security  studies  (e.g.,  the  DETER
project[4]).
Both hardware  testbeds  as  well  as
emulation  systems  are  by definition  executed  in real-
time.
The
next 
network 
  Historically, 
logical  alternative 
is  packet-level
simulation.
simulation
experiments have always been done on small scale and
the results of such experiments have been extrapolated
to  derive  conclusion  on large  scale simulations.
However, results on small scale are hard to extrapolate
to  larger  configurations  and hence  can  be  misleading.
Large  scale  network  simulations  are  thus  required for
detailed  and realistic  simulations,  where  individual
network  parameters might  produce 
significant
difference in  the  behavior  of experiments.  A  key
impediment  in  running  large  scale  simulations  is  the
scalability  of the  network  simulators.
Packet-level
simulation  has  lately  seen great  advances,  especially 
due  to  parallel/distributed execution  capabilities  of 
network  simulators (e.g.,  PDNS  and GTNetS[5],  and
Genesis[6]).  Scales of up to a few million nodes have
been reported 
large  TCP/IP
networks[7, 8].
for  simulation  of 
Hybrid  simulations, using  a  combination of fluid
and  packet  level  models  have been used  to  scale
network  simulations by  at  least  another  order of
magnitude[9,  10],  but 
largely
constrained  in  generality  (e.g.,  limited  accounting  for
feedback  effects).    Further, they  are  restricted  to  core
network  segments  (backbone  links  and  routers),  and
are  difficult  to  extend  to  worm  application  traffic  at
end-hosts.
they  have  been 
Use of simplified epidemic models, such as the SIR
model,  is  quite  widespread  in  the  literature  (e.g.,  see
[11]).  They are the most scalable as they simply use a
system  of  (differential)  equations, but  also  exhibit  the
least  fidelity  due  to  their simplifying  assumptions
about network and traffic dynamics.  Mixed abstraction
simulations  have  also been  designed  that  aim  to
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 11:36:04 UTC from IEEE Xplore.  Restrictions apply. 
combine  the  fidelity  of packet-level  worm  models  (in 
subnets of  interest), with  the  scalability  of  aggregate
epidemic models[12,  13]  (in  other uninteresting
portions of the network).
As can be seen, packet-level simulation exhibits the 
best tradeoff between scalability and fidelity, and holds
potential  to  sustain  Internet-scale  experiments  without
great loss  of  flexibility  or  accuracy.    Complex  worms
can be easily modeled in terms of their TCP/IP packet
exchange behavior,  and 
the  simulation  can  be
enhanced as  needed if/when  new  defense  mechanisms
or new worm types are explored (e.g., worms based on
header  spoofing,  or  defenses based on  packet  header
analysis[14]).   For  these  reasons,  we  focus  on  packet-
level models as a replacement for large-scale networks
in worm modeling (Section 3).
We  also  explore ways  to  immerse  actual  defense
installations into such replaced, virtual networks to test
such  installations under  controlled,  repeatable  attack
scenarios, as  described in  Section  4.
  High-fidelity
modeling enables constructive emulation, which in turn
can obviate the development of models for operational
defense/monitoring installations such as honeypots[15]
or other early warning apparatus[15].
At  sufficiently  large  levels  of  scale  (e.g., hundreds
of  thousands of  nodes or  larger),  most  high-fidelity
systems break down, because of their inability to keep
up with  real-time  for  their  “real-system”  components.
For such  large  scales,  we  propose  a  fully  virtualized
system to overcome their inherent real-time constraint,
without  sacrificing  fidelity.    The  fully  virtualized
system  has  the  potential  for  achieving  the  highest
fidelity among all approaches, even higher than that of
a  general  hardware  testbed.    Theoretically  it  is  not
limited  in  scalability,  but  it  is  only  limited  practically
by  the  amount  of  computation power  available. This
approach is described in greater detail in Section 5.
3
Packet-level Modeling & Execution
3.1
Simulators
To  develop  packet-level worm models,  we  chose
two parallel network simulators that represent the state-
of-the-art:  PDNS  and  GTNetS.    The  Parallel  and