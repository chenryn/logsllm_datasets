# High-Fidelity Modeling of Computer Network Worms

**Authors:**
- Kalyan S. Perumalla, College of Computing, Georgia Institute of Technology, Atlanta, Georgia, USA
- Srikanth Sundaragopalan, College of Computing, Georgia Institute of Technology, Atlanta, Georgia, USA

**Abstract:**
High-level effects of computer network worms have often been analyzed using abstract models, such as epidemic models. However, to understand the finer nuances and complexities associated with known and future worms in realistic network environments, high-fidelity models, such as packet-level models, are essential. This paper first identifies and classifies various worm modeling alternatives based on their scalability and fidelity. We then focus on three high-fidelity methods for worm modeling, evaluating their effectiveness in terms of scalability. Using these methods, we achieve some of the largest packet-level simulations of worm models to date, implant and attack actual worm monitoring/defense installations within large simulated networks, and identify a fundamental constraint that limits worm modeling at the highest fidelity levels.

**1. Introduction:**
Abstract models, such as epidemic models, have traditionally been used to model worm propagation. While useful for certain studies, such as post-mortem analysis, these models are limited by simplifying assumptions and lack versatility in handling complex scenarios, including sophisticated worms, elaborate defense mechanisms, rich network topologies, and varied background traffic.

Packet-level modeling is an effective alternative, capable of capturing fine details and scenario variants. However, packet-level simulations have historically been computationally expensive and thus prohibitive. Until recently, packet-level models were constrained by sequential execution. With the advent of parallel and distributed processing techniques, it is now feasible to execute very large-scale network models (a few million nodes) at the packet level. These simulations can incorporate detailed software models of routers and links, loaded with synthetic traffic introduced at end-host models. By leveraging scalable packet-level simulation environments, it is possible to simulate and analyze worm behaviors under realistic conditions, such as network congestion, feedback, and rich topological layouts. Additionally, these environments can be incrementally augmented with models of defense and quarantining mechanisms at end-hosts and core routers.

Using state-of-the-art parallel network simulators, we undertake large-scale worm modeling and explore the current quantitative limits of these environments. The issues, challenges, and results in developing these large-scale, packet-level worm models constitute the first component of our contributions.

In the second component, we explore the possibility of further increasing the fidelity of packet-level models by incorporating real, operational subsystems into the large-scale network. Specifically, we examine the integration of live monitoring/defense systems into a large simulated network. A honeypot system is immersed in the virtual network, unaware that it is operating in a virtual environment. We describe the issues and challenges in enabling this capability, which we call constructive emulation. This approach differs significantly from traditional network emulation systems.

Finally, in the third component, we present a novel architecture, full system virtualization, designed to resolve the scalability problems inherent in methods where virtual models interact with real systems. While most high-fidelity systems are limited by real-time execution constraints, this fully virtualized system is theoretically arbitrarily scalable, albeit at the cost of reduced computational efficiency.

**2. Modeling Alternatives:**

Figure 1 illustrates the spectrum of alternatives for worm modeling, ranging from hardware testbeds to fully virtualized systems. Scalability is defined as the limit on the number of network nodes modeled by a method, while fidelity is based on the amount of detail accounted for in the network and end-hosts.

Hardware testbeds, such as EmuLab, have scaled to hundreds of nodes but cannot sustain high fidelity as scale increases. Network emulation systems, like NetLab and ModelNet, can sustain a few thousand nodes and are used in major security studies, such as the DETER project. Both hardware testbeds and emulation systems operate in real-time.

Packet-level simulation, which has seen significant advances due to parallel and distributed execution capabilities, can now simulate up to a few million nodes. Hybrid simulations combining fluid and packet-level models have also been used to scale network simulations, but they are limited in generality and applicability to end-hosts.

Simplified epidemic models, such as the SIR model, are highly scalable but exhibit low fidelity due to their simplifying assumptions. Mixed abstraction simulations aim to combine the fidelity of packet-level models with the scalability of aggregate epidemic models.

Packet-level simulation offers the best tradeoff between scalability and fidelity, making it suitable for Internet-scale experiments without significant loss of flexibility or accuracy. For these reasons, we focus on packet-level models for large-scale worm modeling.

**3. Packet-level Modeling & Execution:**

To develop packet-level worm models, we chose two state-of-the-art parallel network simulators: PDNS and GTNetS. These simulators enable us to conduct large-scale, high-fidelity simulations of worm propagation and behavior.

**3.1 Simulators:**
- **PDNS (Parallel Discrete-Event Network Simulator):** This simulator is designed for high-performance, scalable, and accurate network simulations.
- **GTNetS (Georgia Tech Network Simulator):** This simulator is known for its ability to handle large-scale, detailed network simulations.

By employing these simulators, we can achieve large-scale, high-fidelity simulations of worm behavior, providing valuable insights into the propagation and impact of worms in realistic network environments.