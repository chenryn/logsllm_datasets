title:Managing heterogeneous network environments using an extensible policy
framework
author:Lawrence Teo and
Gail-Joon Ahn
Managing Heterogeneous Network Environments Using an
Extensible Policy Framework
University of North Carolina at Charlotte
College of Computing and Informatics
University of North Carolina at Charlotte
College of Computing and Informatics
Gail-Joon Ahn †
PI:EMAIL
Lawrence Teo
PI:EMAIL
ABSTRACT
Security policy management is critical to meet organiza-
tional needs and reduce potential risks because almost ev-
ery organization depends on computer networks and the In-
ternet for their daily operations. It is therefore important
to specify and enforce security policies eﬀectively. How-
ever, as organizations grow, so do their networks increas-
ing the diﬃculty of deploying a security policy, especially
across heterogeneous systems. In this paper, we introduce
a policy framework called Chameleos-x which is designed to
enforce security policies consistently across security-aware
systems with network services–primarily operating systems,
ﬁrewalls, and intrusion detection systems. Throughout this
paper, we focus on the design and architecture of Chameleos-
x and demonstrate how our policy framework helps organi-
zations implement security policies in changing, diversity-
rich environments. We also describe our experimentation of
Chameleos-x to demonstrate the feasibility of the proposed
approach.
1.
INTRODUCTION
Businesses and organizations depend heavily on computer
networks and information systems for their daily operations.
Due to this ever-increasing reliance on computer systems, it
is critical for organizations to implement a carefully-designed
security policy for their networks and information systems.
When organizations grow, so do their computer networks
and information systems. This growth tends to introduce
diversity and heterogeneity into the network, especially as
new operating systems, network devices, and security tech-
nologies are adopted. As the number and types of systems
increase, the security of the organizational networks is af-
fected in two major ways: (1) the diﬃculty of designing and
†All correspondence should be addressed to: Dr. Gail-Joon
Ahn, Software and Information Systems Department, Col-
lege of Computing and Informatics, University of North Car-
olina at Charlotte, 9201 University City Blvd., Charlotte,
NC 28223; email:gahn@uncc.edu.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’07, March 20-22, 2007, Singapore.
Copyright 2007 ACM 1-59593-574-6/07/0003.
enforcing a security policy that works consistently across
diﬀerent systems is signiﬁcantly multiplied; and (2) the abil-
ity to maintain the consistency of the policy in the face of
changing organizational requirements
In this paper, we argue that a practical, system-driven
approach should be used to address the problem of enforc-
ing security policies consistently in a changing, diversity-
rich environment. We propose a solution in the form of a
system-driven policy framework called Chameleos-x, which
consists of both a policy speciﬁcation language and a pol-
icy enforcement architecture. The Chameleos-x framework
is specially designed to facilitate the management of consis-
tent security policies in heterogeneous environments. The
objective of Chameleos-x is to enforce security policies con-
sistently on diﬀerent security-aware systems as well as op-
erating systems. In this paper, security-aware systems in-
clude operating systems, ﬁrewalls, and intrusion detection
systems (IDSs) – those are responsible for enforcing any part
of the organizational security policy. Our prior works clearly
demonstrated how we could develop a policy language to
specify access control policies across diﬀerent operating sys-
tems [4, 5].
This paper is organized as follows. Section 2 presents the
objectives, design, and architecture of Chameleos-x followed
by a discussion of our experiments and results in Section 3.
Section 4 concludes the paper including our ongoing and
future work.
2. POLICY FRAMEWORK: Chameleos-x
The Chameleos-x policy framework has two major com-
ponents: a policy speciﬁcation language and a policy en-
forcement architecture. As a family of languages and archi-
tectures, Chameleos-x supports diﬀerent kinds of systems
– currently it works with operating systems, ﬁrewalls, and
IDSs (Figure 1). The advantages of implementing a sin-
gle language for many security-aware systems are manifold.
Having a single language would provide a common syntax
for administrators to implement various policies. There is
no need to relearn the syntax for diﬀerent systems, thus
presenting a convenient way for the administrator to specify
multiple system policies. This is especially true when the
evaluation of diﬀerent systems is taking place. Also, if there
are similar systems, we do not need to convert the policies
from one system to the other.
2.1 Approach
We ﬁrst discuss the approach that was used to design
the Chameleos-x policy framework. We present the two key
362
Figure 1: The Chameleos-x framework.
Figure 2: The Chameleos-x architecture.
decisions that we made in the design of the language, and
how they aﬀected the development of our framework.
Firstly, we have to decide whether to develop an exten-
sion of an existing similar policy framework or develop a new
framework altogether. Unlike other frameworks, a key diﬀer-
entiator in the Chameleos-x is that it integrates with a risk-
based network management architecture [6], thus it uses a
diﬀerent paradigm compared to other frameworks. This dif-
ference alone warrants the necessity to design a new frame-
work. Another beneﬁt of creating the framework afresh is
that it helps us design all the components in our policy
framework while achieving completeness and consistency of
our approach.
Secondly, some have suggested that the bottom-up ap-
proach results in an inﬂexible framework that is too speciﬁc
to the underlying systems; for Chameleos-x, however, we
believe that developing for actual systems (the bottom-up
approach) would be more beneﬁcial. We must reiterate that
Chameleos-x is designed to be used in the real world and
is not merely a theoretical exercise. In that vein, the lan-
guage component in Chameleos-x is comparable to program-
ming languages like C and C++. Like Chameleos-x, those
programming languages were designed using the bottom-up
evolutionary approach. Though their design may not be
very elegant, they are proven to be ﬂexible, where they have
been used to implement many kinds of solutions. Thus, they
enjoyed widespread use in industry for decades.
These decisions led us to adopt an evolutionary design
model for Chameleos-x. Using this evolutionary model, we
believe we are able to support the speciﬁc features of each
system more eﬀectively.
2.2 Language and Architecture
The Chameleos-x policy framework includes a language
It is in-
component that is used for policy speciﬁcation.
tended to cover many notions that are used to specify poli-
cies, including basic access control concepts. We have de-
veloped the basic grammar of the Chameleos-x language in
Extended BNF (EBNF). Due to space limitations, we omit
the EBNF grammar speciﬁcation in this paper.
The three major components of the Chameleos-x archi-
tecture are the Management Console, Translator, and En-
forcement Monitor. The Management Console is a central
management interface operated by the evaluator. It is used
to “push” Chameleos-x policies to various hosts that are run-
ning the Chameleos-x Enforcement Monitor. The Manage-
ment Console also speciﬁes which operation mode should be
used in each session. The Chameleos-x Enforcement Mon-