# Title: Managing Heterogeneous Network Environments Using an Extensible Policy Framework

## Authors
- Lawrence Teo
- Gail-Joon Ahn

## Abstract
Effective security policy management is crucial for organizations, as they increasingly rely on computer networks and the Internet for their daily operations. As organizations grow, so do their networks, making it more challenging to deploy and enforce consistent security policies, especially across heterogeneous systems. This paper introduces Chameleos-x, a policy framework designed to enforce security policies consistently across various security-aware systems, including operating systems, firewalls, and intrusion detection systems. We focus on the design and architecture of Chameleos-x, demonstrating its effectiveness in diverse and changing environments. Experimental results are also presented to validate the feasibility of our approach.

## 1. Introduction
Organizations heavily depend on computer networks and information systems for their daily operations. As this reliance grows, it becomes critical to implement well-designed security policies for these networks and systems. Organizational growth often introduces diversity and heterogeneity into the network, with the adoption of new operating systems, network devices, and security technologies. This diversity impacts the security of organizational networks in two significant ways:
1. The difficulty of designing and enforcing a security policy that works consistently across different systems increases.
2. Maintaining policy consistency in the face of changing organizational requirements becomes more challenging.

In this paper, we propose a practical, system-driven approach to address the problem of enforcing consistent security policies in dynamic, diverse environments. Our solution, Chameleos-x, is a system-driven policy framework that includes both a policy specification language and a policy enforcement architecture. Chameleos-x is designed to manage consistent security policies in heterogeneous environments, ensuring that security policies are enforced consistently across different security-aware systems such as operating systems, firewalls, and intrusion detection systems (IDSs).

This paper is organized as follows:
- Section 2 presents the objectives, design, and architecture of Chameleos-x.
- Section 3 discusses our experiments and results.
- Section 4 concludes the paper, including ongoing and future work.

## 2. Policy Framework: Chameleos-x
Chameleos-x consists of two major components: a policy specification language and a policy enforcement architecture. It supports different kinds of systems, including operating systems, firewalls, and IDSs (Figure 1). Implementing a single language for multiple security-aware systems offers several advantages, such as a common syntax for administrators and the ability to specify and enforce policies without relearning different syntaxes.

### 2.1 Approach
The design of Chameleos-x was guided by two key decisions:
1. **Framework Development**: We decided to develop a new framework rather than extend an existing one. Chameleos-x integrates with a risk-based network management architecture, which sets it apart from other frameworks. This integration necessitated a new framework to ensure completeness and consistency.
2. **Bottom-Up Design**: We adopted a bottom-up approach, focusing on actual systems. This approach, similar to the evolution of programming languages like C and C++, ensures flexibility and real-world applicability. While the design may not be elegant, it is proven to be flexible and widely used in industry.

These decisions led us to adopt an evolutionary design model for Chameleos-x, allowing us to support specific features of each system more effectively.

### 2.2 Language and Architecture
The Chameleos-x policy framework includes a language component for policy specification. The basic grammar of the Chameleos-x language is defined in Extended BNF (EBNF), though the EBNF grammar specification is omitted due to space limitations.

The Chameleos-x architecture comprises three major components:
- **Management Console**: A central management interface operated by the evaluator. It pushes Chameleos-x policies to hosts running the Chameleos-x Enforcement Monitor and specifies the operation mode for each session.
- **Translator**: Converts high-level policy specifications into low-level configurations for different systems.
- **Enforcement Monitor**: Ensures that the specified policies are enforced on the target systems.

(Figures 1 and 2 illustrate the Chameleos-x framework and architecture.)

## 3. Experiments and Results
(Section 3 will detail the experimental setup, results, and analysis, validating the feasibility of the Chameleos-x approach.)

## 4. Conclusion
(Section 4 will summarize the key findings, discuss ongoing work, and outline future research directions.)

---

**Correspondence**
All correspondence should be addressed to:
- Dr. Gail-Joon Ahn
- Software and Information Systems Department
- College of Computing and Informatics
- University of North Carolina at Charlotte
- 9201 University City Blvd., Charlotte, NC 28223
- Email: gahn@uncc.edu

**Permissions**
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee.

**Conference Details**
ASIACCSâ€™07, March 20-22, 2007, Singapore.
Copyright 2007 ACM 1-59593-574-6/07/0003.