# PostgreSQL 源码目录结构及安装指南

## 源码目录结构

### `src` 目录结构 (部分)

```bash
pg93@db-172-16-3-150-> ll src
drwxrwxrwx 25 1107 1107 4.0K Dec 3 05:10 backend -- 后台进程相关的源码（包括postmaster, optimizer, replication, checkpoint, access等）
drwxrwxrwx 12 1107 1107 4.0K Dec 3 05:10 bin -- 客户端进程的源码（例如initdb, psql, pg_dump等）
drwxrwxrwx 27 1107 1107 4.0K Dec 3 05:12 include -- 头文件
drwxrwxrwx 4 1107 1107 4.0K Dec 3 05:10 interfaces -- 交互接口的源码（例如ecpg, libpq）
drwxrwxrwx 6 1107 1107 4.0K Dec 3 05:10 pl -- 过程语言的源码（例如plperl, plpgsql, plpython, pltcl）
drwxrwxrwx 2 1107 1107 4.0K Dec 3 05:09 template -- 不同OS平台下的编译器选项模板
drwxrwxrwx 9 1107 1107 4.0K Dec 3 05:09 test -- 测试相关的源码
drwxrwxrwx 4 1107 1107 4.0K Dec 3 05:10 timezone -- （从http://www.iana.org/time-zones同步的时区库）
drwxrwxrwx 10 1107 1107 4.0K Dec 3 05:10 tools -- 编译过程中用到的一些命令行工具
drwxrwxrwx 2 1107 1107 4.0K Dec 3 05:10 tutorial -- 包含基本的SQL教程脚本
```

### 新增服务和插件

- **worker_spi** (新增的服务端worker编程范例)
- **xml2** (XML相关插件)

## 源码安装PostgreSQL

### 详细说明

请参考 `INSTALL` 文件。

### 简明安装步骤

```bash
./configure --prefix=/opt/pgsql9.3.2 --with-pgport=1921 --with-perl --with-tcl --with-python --with-openssl --with-pam --without-ldap --with-libxml --with-libxslt --enable-thread-safety --with-wal-blocksize=16 --with-blocksize=16 --enable-dtrace --enable-debug
gmake world
gmake check-world  # 可选，耗时较长
gmake install-world
```

如果遇到依赖的动态库缺失，需要提前安装。

### 配置环境

#### 创建用户并配置环境变量

```bash
useradd postgres
su - postgres
vi ~/.bash_profile

# 添加以下内容
export PGPORT=1921
export PGDATA=/pgdata/pg_root
export LANG=en_US.utf8
export PGHOME=/home/pg93/pgsql
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
export DATE=`date +"%Y%m%d%H%M"`
export PATH=$PGHOME/bin:$PATH:.
export MANPATH=$PGHOME/share/man:$MANPATH
export PGUSER=postgres
export PGHOST=$PGDATA
alias rm='rm -i'
alias ll='ls -lh'
export PGDATABASE=digoal
```

#### 测试安装

```bash
su - postgres
psql -V
```

### 创建数据库集群

#### 创建目录

```bash
mkdir -p /pgdata/pg_root
chown -R postgres:postgres /pgdata/pg_root
```

#### 初始化集群

```bash
su - postgres
initdb -D $PGDATA -E UTF8 --locale=C -U postgres -W
```

#### 修改配置文件

- **pg_hba.conf**: 用于配置控制访问数据库的来源。
- **postgresql.conf**: 数据库的主配置文件，最好也调整一下Linux内核参数。

#### 启动和停止数据库

```bash
pg_ctl start -D $PGDATA
pg_ctl stop -m fast|smart|immediate -D $PGDATA
```

### Linux内核参数调整

编辑 `/etc/sysctl.conf` 和 `/etc/security/limits.conf`，添加以下内容：

```bash
# /etc/sysctl.conf
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.shmmni = 4096
kernel.sem = 50100 64128000 50100 1280
fs.file-max = 7672460
net.ipv4.ip_local_port_range = 9000 65000
net.core.rmem_default = 1048576
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576

# /etc/security/limits.conf
* soft nofile 131072
* hard nofile 131072
* soft nproc 131072
* hard nproc 131072
* soft core unlimited
* hard core unlimited
* soft memlock 50000000
* hard memlock 50000000
```

### 数据库结构介绍

```bash
ll $PGDATA
drwx------. 12 pg93 pg93 4.0K Nov 22 16:41 base -- 对应pg_default表空间
drwx------. 2 pg93 pg93 4.0K Nov 26 22:02 global -- 对应pg_global表空间，存放集群中的共享对象
drwx------. 2 pg93 pg93 4.0K Nov 21 13:50 pg_clog -- 存储事务提交状态数据
-rw------- 1 pg93 pg93 4.6K Nov 22 17:22 pg_hba.conf -- 数据库访问控制文件
drwx------. 2 pg93 pg93 20K Dec 7 00:00 pg_log -- 数据库日志目录
drwx------. 4 pg93 pg93 4.0K Sep 27 08:10 pg_multixact -- 共享行锁的事务状态数据
drwx------. 2 pg93 pg93 4.0K Nov 26 22:01 pg_notify -- 异步消息相关的状态数据
drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_serial -- 串行隔离级别的事务状态数据
drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_snapshots -- 存储执行了事务snapshot导出的状态数据
drwx------. 2 pg93 pg93 4.0K Dec 7 15:57 pg_stat_tmp -- 统计信息的临时文件
drwx------. 2 pg93 pg93 4.0K Nov 22 14:16 pg_subtrans -- 子事务状态数据
drwx------. 2 pg93 pg93 4.0K Oct 28 09:16 pg_tblspc -- 表空间的软链接目录
drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_twophase -- 二阶事务的状态数据
-rw-------. 1 pg93 pg93 4 Sep 27 08:10 PG_VERSION -- 数据库版本
lrwxrwxrwx 1 pg93 pg93 18 Nov 15 11:17 pg_xlog -> /ssd1/pg93/pg_xlog -- 存储WAL文件
-rw------- 1 pg93 pg93 20K Nov 26 13:50 postgresql.conf -- 配置文件
-rw-------. 1 pg93 pg93 35 Nov 26 22:01 postmaster.opts -- 记录数据库启动时的命令行选项
-rw------- 1 pg93 pg93 71 Nov 26 22:01 postmaster.pid -- 数据库启动的主进程信息文件
```

### 插件安装

#### 内部插件

如果编译数据库时使用了 `gmake world` 和 `gmake install-world`，所有插件都会被安装。否则，可以手动安装插件：

```bash
cd contrib/pg_freespacemap
export PATH=/opt/pgsql/bin:$PATH
gmake clean
gmake
gmake install
create extension pg_freespacemap;
```

#### 第三方插件

根据第三方插件提供的安装说明进行安装。通用的安装方法如下：

1. 把第三方插件的源码目录拷贝到 `contrib` 目录中。
2. 把 `pg_config` 加入到 `PATH` 中。
3. 执行 `gmake clean; gmake; gmake install`。
4. 在数据库中以超级用户执行 `create extension xxx;`。

### 练习

- 源码安装PostgreSQL
- 内部插件的安装和使用
- 第三方插件的安装和使用
- 可到 `git.postgresql.org` 下载第三方插件源码
- PostgreSQL 特性的测试可以参照PostgreSQL源码中提供的测试脚本进行测试 (`src/test/regress/sql`)

### PostgreSQL 体系结构

#### 系统表

系统表之间基本上都是以 `oid` 关联。例如 `pg_attrdef.adrelid` 关联 `pg_class.oid`。

```sql
SELECT relkind, relname FROM pg_class WHERE relnamespace = (SELECT oid FROM pg_namespace WHERE nspname='pg_catalog') AND relkind='r' ORDER BY 1,2;
```

- `pg_aggregate`: 聚合函数信息
- `pg_am`: 系统支持的索引访问方法
- `pg_amop`: 存储每个索引访问方法操作符家族中的详细操作符信息
- `pg_amproc`: 存储每个索引访问方法操作符家族支持的函数信息
- `pg_attrdef`: 存储数据表列的默认值
- `pg_attribute`: 存储数据表列的详细信息
- `pg_auth_members`: 数据库用户的成员关系信息
- `pg_authid`: 存储数据库用户的详细信息
- `pg_cast`: 数据库的显性类型转换路径信息
- `pg_class`: 几乎包括了数据库的所有对象信息
- `pg_collation`: 集信息
- `pg_constraint`: 存储列上定义的约束信息
- `pg_conversion`: 字符集之间的转换的相关信息
- `pg_database`: 集群中的数据库信息
- `pg_db_role_setting`: 基于角色和数据库组合的定制参数信息
- `pg_default_acl`: 存储新建对象的初始权限信息
- `pg_depend`: 数据库对象之间的依赖信息
- `pg_description`: 数据库对象的描述信息
- `pg_enum`: 枚举类型信息
- `pg_event_trigger`: 事件触发器信息
- `pg_extension`: 扩展插件信息
- `pg_foreign_data_wrapper`: FDW信息
- `pg_foreign_server`: 外部服务器信息
- `pg_foreign_table`: 外部表信息
- `pg_index`: 索引信息
- `pg_inherits`: 继承表的继承关系信息
- `pg_language`: 过程语言信息
- `pg_largeobject`: 大对象的切片后的真实数据存储在这个表里
- `pg_largeobject_metadata`: 大对象的元信息
- `pg_namespace`: 数据库中的schema信息
- `pg_opclass`: 索引访问方法的操作符分类信息
- `pg_operator`: 操作符信息
- `pg_opfamily`: 操作符家族信息
- `pg_pltemplate`: 过程语言的模板信息
- `pg_proc`: 数据库服务端函数信息
- `pg_range`: 范围类型信息
- `pg_rewrite`: 表和视图的重写规则信息
- `pg_seclabel`: 安全标签信息
- `pg_shdepend`: 数据库中的对象之间或者集群中的共享对象之间的依赖关系
- `pg_shdescription`: 共享对象的描述信息
- `pg_shseclabel`: 共享对象的安全标签信息
- `pg_statistic`: analyze生成的统计信息
- `pg_tablespace`: 表空间相关信息
- `pg_trigger`: 表上的触发器信息
- `pg_ts_config`: 全文检索的配置信息
- `pg_ts_config_map`: 全文检索配置映射信息
- `pg_ts_dict`: 全文检索字典信息
- `pg_ts_parser`: 全文检索解析器信息
- `pg_ts_template`: 全文检索模板信息
- `pg_type`: 数据库中的类型信息
- `pg_user_mapping`: foreign server的用户配置信息

#### 系统视图

```sql
SELECT relkind, relname FROM pg_class WHERE relnamespace = (SELECT oid FROM pg_namespace WHERE nspname='pg_catalog') AND relkind='v' ORDER BY 1,2;
```

- `pg_available_extension_versions`: 显示当前系统已经编译的扩展插件的版本信息
- `pg_available_extensions`: 显示当前系统已经编译的扩展插件信息
- `pg_cursors`: 当前可用的游标
- `pg_group`: 用户组信息
- `pg_indexes`: 索引信息
- `pg_locks`: 锁信息
- `pg_matviews`: 物化视图信息
- `pg_prepared_statements`: 当前会话中使用prepare语法写的预处理SQL信息
- `pg_prepared_xacts`: 二阶事务信息
- `pg_roles`: 数据库角色信息
- `pg_rules`: 数据库中使用create rule创建的规则信息

希望这些优化后的文本能够帮助你更好地理解和使用PostgreSQL。