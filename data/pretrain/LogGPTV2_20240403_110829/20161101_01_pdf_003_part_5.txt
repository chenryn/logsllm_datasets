 drwxrwxrwx 2 1107 1107 4096 Dec 3 05:09 worker_spi -- 9.3新增的服务端worker编程范例
 drwxrwxrwx 4 1107 1107 4096 Dec 3 05:09 xml2 -- xml相关插件
PostgreSQL源码目录结构简介
 src目录结构 (截取部分)
 pg93@db-172-16-3-150-> ll src
 drwxrwxrwx 25 1107 1107 4.0K Dec 3 05:10 backend -- 后台进程相关的源码(包括postmaster, optimizer, replication,
checkpoint, access,... 等等)
 drwxrwxrwx 12 1107 1107 4.0K Dec 3 05:10 bin -- 客户端进程的源码(例如initdb, psql, pg_dump等等)
 drwxrwxrwx 27 1107 1107 4.0K Dec 3 05:12 include -- 头文件
 drwxrwxrwx 4 1107 1107 4.0K Dec 3 05:10 interfaces -- 交互接口的源码(例如ecpg, libpq)
 drwxrwxrwx 6 1107 1107 4.0K Dec 3 05:10 pl -- 过程语言的源码(例如plperl, plpgsql, plpython, pltcl)
 drwxrwxrwx 2 1107 1107 4.0K Dec 3 05:09 template -- 不同OS平台下的编译器选项模板
 drwxrwxrwx 9 1107 1107 4.0K Dec 3 05:09 test -- 测试相关的源码
 drwxrwxrwx 4 1107 1107 4.0K Dec 3 05:10 timezone -- (从http://www.iana.org/time-zones同步的时区库)
 drwxrwxrwx 10 1107 1107 4.0K Dec 3 05:10 tools -- 编译过程中用到的一些命令行工具
 drwxrwxrwx 2 1107 1107 4.0K Dec 3 05:10 tutorial -- 包含基本的SQL教程脚本
源码安装PostgreSQL
 详细说明参考INSTALL文件
 简明安装步骤
 ./configure --prefix=/opt/pgsql9.3.2 --with-pgport=1921 --with-perl --with-tcl --with-python --with-openssl --with-pam --
without-ldap --with-libxml --with-libxslt --enable-thread-safety --with-wal-blocksize=16 --with-blocksize=16 --enable-dtrace --
enable-debug
 gmake world
 gmake check-world -- (这个需要使用普通用户执行. 可选, 耗时较长)
 gmake install-world
 如果遇到依赖的动态库缺失, 需要提前安装即可.
 gmake world安装包含了文档,所有的contrib.
源码安装PostgreSQL
 软件安装好后, 在操作系统中创建一个普通用户, 用于初始化数据库, 开启和关闭数据库.
 首先把安装好的软件链接到一个常用的目录
 ln -s /opt/pgsql9.3.2 /opt/pgsql
 创建用户, 并修改它的profile
 useradd postgres
 su - postgres
 vi ~/.bash_profile
 # add
 export PGPORT=1921
 export PGDATA=/pgdata/pg_root
 export LANG=en_US.utf8
 export PGHOME=/home/pg93/pgsql
 export
LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
源码安装PostgreSQL
 export DATE=`date +"%Y%m%d%H%M"`
 export PATH=$PGHOME/bin:$PATH:.
 export MANPATH=$PGHOME/share/man:$MANPATH
 export PGUSER=postgres
 export PGHOST=$PGDATA
 alias rm='rm -i'
 alias ll='ls -lh'
 export PGDATABASE=digoal
 测试一下
 su - postgres
 $ psql -V
 psql (PostgreSQL) 9.3.2
源码安装PostgreSQL
 创建数据库集群
 首先要创建数据库集群的目录
 mkdir -p /pgdata/pg_root
 chown -R postgres:postgres /pgdata/pg_root
 初始化集群
 su - postgres
 initdb -D $PGDATA -E UTF8 --locale=C -U postgres -W
 启动数据库前修改一下pg_hba.conf和postgresql.conf
 pg_hba.conf用于配置控制访问数据库的来源
 postgresql.conf是数据库的主配置文件, 最好也调整一下Linux内核参数.
 启动数据库
 pg_ctl start -D $PGDATA
 停库
 pg_ctl stop -m fast|smart|immediate -D $PGDATA
源码安装PostgreSQL
 Linux内核相关参数调整
 vi /etc/sysctl.conf
 kernel.shmmax = 68719476736 (默认)
 kernel.shmall = 4294967296 (默认)
 kernel.shmmni = 4096
 kernel.sem = 50100 64128000 50100 1280
 fs.file-max = 7672460
 net.ipv4.ip_local_port_range = 9000 65000
 net.core.rmem_default = 1048576
 net.core.rmem_max = 4194304
 net.core.wmem_default = 262144
 net.core.wmem_max = 1048576
源码安装PostgreSQL
 vi /etc/security/limits.conf  vi /etc/sysconfig/iptables
 * soft nofile 131072  -A RH-Firewall-1-INPUT -i lo -j ACCEPT
 * hard nofile 131072  # 允许源IP
 * soft nproc 131072  -A RH-Firewall-1-INPUT -s 192.168.0.0/16 -j ACCEPT
 * hard nproc 131072  # 允许源IP访问目标端口
 * soft core unlimited  # -A RH-Firewall-1-INPUT -s 192.168.1.0/24 -m state --state
NEW -m tcp -p tcp --dport 1921 -j ACCEPT
 * hard core unlimited
 * soft memlock 50000000  # 允许任意IP访问目标端口
 * hard memlock 50000000  # -A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m
tcp --dport 5432 -j ACCEPT
PostgreSQL数据库结构介绍
 ll $PGDATA
 drwx------. 12 pg93 pg93 4.0K Nov 22 16:41 base -- 这个目录对应pg_default表空间
 drwx------. 2 pg93 pg93 4.0K Nov 26 22:02 global --这个目录对应pg_global表空间, 存放集群中的共享对象例pg_database
表, (select relkind,relname from pg_class where reltablespace = (select oid from pg_tablespace where spcname=‘pg_global’)
order by 1) , 包含控制文件等.
 drwx------. 2 pg93 pg93 4.0K Nov 21 13:50 pg_clog -- 存储事务提交状态数据
 -rw------- 1 pg93 pg93 4.6K Nov 22 17:22 pg_hba.conf -- 数据库访问控制文件
 drwx------. 2 pg93 pg93 20K Dec 7 00:00 pg_log -- 数据库日志目录(根据配置定义, 可能没有这个目录)
 drwx------. 4 pg93 pg93 4.0K Sep 27 08:10 pg_multixact -- 共享行锁的事务状态数据
 drwx------. 2 pg93 pg93 4.0K Nov 26 22:01 pg_notify -- 异步消息相关的状态数据
 drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_serial -- 串行隔离级别的事务状态数据
 drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_snapshots -- 存储执行了事务snapshot导出的状态数据
 drwx------. 2 pg93 pg93 4.0K Dec 7 15:57 pg_stat_tmp -- 统计信息的临时文件
 drwx------. 2 pg93 pg93 4.0K Nov 22 14:16 pg_subtrans -- 子事务状态数据
PostgreSQL数据库结构介绍
 drwx------. 2 pg93 pg93 4.0K Oct 28 09:16 pg_tblspc -- 表空间的软链接目录
 drwx------. 2 pg93 pg93 4.0K Sep 27 08:10 pg_twophase -- 二阶事务的状态数据
 -rw-------. 1 pg93 pg93 4 Sep 27 08:10 PG_VERSION -- 数据库版本
 lrwxrwxrwx 1 pg93 pg93 18 Nov 15 11:17 pg_xlog -> /ssd1/pg93/pg_xlog -- 存储WAL文件
 -rw------- 1 pg93 pg93 20K Nov 26 13:50 postgresql.conf -- 配置文件
 -rw-------. 1 pg93 pg93 35 Nov 26 22:01 postmaster.opts -- 记录数据库启动时的命令行选项
 -rw------- 1 pg93 pg93 71 Nov 26 22:01 postmaster.pid -- 数据库启动的主进程信息文件(包括$PGDATA目录, 数据库启动
时间, 监听端口ipc信息等)
PostgreSQL源码包中的插件安装
 如果编译数据库时使用了gmake world和gmake install-world, 所有的插件都会被安装, 那么 就不需要再次安装了.
 插件目录
 contrib
 进入要安装的插件目录, 例如
 cd contrib/pg_freespacemap
 把pg_config命令加入到默认路径中
 export PATH=/opt/pgsql/bin:$PATH
 gmake clean
 gmake
 gmake install -- 这一步会将生成的动态库文件拷贝到pgsql的lib目录, 同时拷贝生成的扩展文件到
$PGHOME/share/extension中.
 安装完后, 到数据库中以超级用户执行create extension
 create extension pg_freespacemap;
PostgreSQL第三方插件安装
 根据第三方插件提供的安装说明进行安装
 通用的安装方法
 1. 把第三方插件的源码目录拷贝到contrib目录中
 2. 把pg_config加入到PATH中
 3. gmake clean; gmake; gmake install
 4. create extension xxx; 对于一些老版本的插件, 可能没有改成扩展插件的安装模式. 那么需要到对应的库中直接执行SQL.
练习
 源码安装PostgreSQL
 内部插件的安装和使用
 第三方插件的安装和使用
 可到git.postgresql.org下载第三方插件源码
 PostgreSQL 特性的测试可以参照PostgreSQL源码中提供的测试脚本进行测试
 src/test/regress/sql
PostgreSQL 体系结构
 体系结构
 目标:
 了解系统表以及系统表之间的关系, 系统视图, 管理函数等
 了解PG进程结构
 了解PG物理结构
PostgreSQL 系统表介绍
 系统表, 系统表之间基本上都是以oid关联. 例如pg_attrdef.adrelid 关联 pg_class.oid
 select relkind,relname from pg_class where relnamespace = (select oid from pg_namespace where nspname='pg_catalog') and
relkind='r' order by 1,2;
 r | pg_aggregate -- 聚合函数信息, 包括聚合函数的中间函数, 中间函数的初始值, 最终函数等.
 r | pg_am -- 系统支持的索引访问方法. (如btree, hash, gist, gin , spgist)
 r | pg_amop -- 存储每个索引访问方法操作符家族(pg_opfamily)中的详细操作符信息
 r | pg_amproc -- 存储每个索引访问方法操作符家族(pg_opfamily)支持的函数信息.
 r | pg_attrdef -- 存储数据表列的默认值(例如创建表时指定了列的default值).
 r | pg_attribute -- 存储数据表列的详细信息. 包括隐含的列(ctid, cmin, cmax, xmin, xmax)
 r | pg_auth_members -- 数据库用户的成员关系信息.
 r | pg_authid -- 存储数据库用户的详细信息(包括是否超级用户, 是否允许登陆, 密码(加密与否和创建用户时是否指定
encrypted有关), 密码失效时间等)
 r | pg_cast -- 数据库的显性类型转换路径信息, 包括内建的和自定义的.
 r | pg_class -- 几乎包括了数据库的所有对象信息(r = ordinary table, i = index, S = sequence, v = view, m = materialized
view, c = composite type, t = TOAST table, f = foreign table)
 r | pg_collation -- 集信息, 包括encoding, collate, ctype等.
PostgreSQL 系统表介绍
 r | pg_constraint -- 存储列上定义的约束信息(例如PK, FK, UK, 排他约束, check约束, 但是不包括非空约束)
 r | pg_conversion -- 字符集之间的转换的相关信息
 r | pg_database -- 集群中的数据库信息
 r | pg_db_role_setting -- 基于角色和数据库组合的定制参数信息. (alter role set ...)
 r | pg_default_acl -- 存储新建对象的初始权限信息
 r | pg_depend -- 数据库对象之间的依赖信息.
 r | pg_description -- 数据库对象的描述信息
 r | pg_enum -- 枚举类型信息
 r | pg_event_trigger -- 事件触发器信息
 r | pg_extension -- 扩展插件信息
 r | pg_foreign_data_wrapper -- FDW信息
 r | pg_foreign_server -- 外部服务器信息
 r | pg_foreign_table -- 外部表信息.
 r | pg_index -- 索引信息
PostgreSQL 系统表介绍
 r | pg_inherits -- 继承表的继承关系信息
 r | pg_language -- 过程语言信息
 r | pg_largeobject -- 大对象的切片后的真实数据存储在这个表里
 r | pg_largeobject_metadata -- 大对象的元信息, 包括大对象的owner, 访问权限.
 r | pg_namespace -- 数据库中的schema信息(pg中称为namespace)
 r | pg_opclass -- 索引访问方法的操作符分类信息.
 r | pg_operator -- 操作符信息
 r | pg_opfamily -- 操作符家族信息
 r | pg_pltemplate -- 过程语言的模板信息
 r | pg_proc -- 数据库服务端函数信息
 r | pg_range -- 范围类型信息
 r | pg_rewrite -- 表和视图的重写规则信息
PostgreSQL 系统表介绍
 r | pg_seclabel -- 安全标签信息(SELinux)
 r | pg_shdepend -- 数据库中的对象之间或者集群中的共享对象之间的依赖关系
 r | pg_shdescription -- 共享对象的描述信息
 r | pg_shseclabel -- 共享对象的安全标签信息(SELinux)
 r | pg_statistic -- analyze生成的统计信息, 用于查询计划器计算成本.
 r | pg_tablespace -- 表空间相关的信息.
 r | pg_trigger -- 表上的触发器信息
 r | pg_ts_config -- 全文检索的配置信息
 r | pg_ts_config_map -- 全文检索配置映射信息
 r | pg_ts_dict -- 全文检索字典信息
 r | pg_ts_parser -- 全文检索解析器信息
 r | pg_ts_template -- 全文检索模板信息
 r | pg_type -- 数据库中的类型信息
 r | pg_user_mapping -- foreign server的用户配置信息.
PostgreSQL 系统视图介绍
 系统视图
 select relkind,relname from pg_class where relnamespace = (select oid from pg_namespace where nspname='pg_catalog') and
relkind='v' order by 1,2;
 v | pg_available_extension_versions -- 显示当前系统已经编译的扩展插件的版本信息
 v | pg_available_extensions --显示当前系统已经编译的扩展插件信息
 v | pg_cursors -- 当前可用的游标
 v | pg_group -- 用户组信息
 v | pg_indexes -- 索引信息
 v | pg_locks -- 锁信息
 v | pg_matviews -- 物化视图信息
 v | pg_prepared_statements -- 当前会话中使用prepare语法写的预处理SQL信息.
 v | pg_prepared_xacts -- 二阶事务信息
 v | pg_roles -- 数据库角色信息
 v | pg_rules -- 数据库中使用create rule创建的规则信息.
PostgreSQL 系统视图介绍