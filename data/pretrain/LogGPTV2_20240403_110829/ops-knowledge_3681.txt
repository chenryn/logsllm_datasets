Certainly! Here's a more polished and professional version of the response:

---

**User:**
I want to execute `os.system('ls')` in Python. The return value of this statement is an error code integer, but I would like to get the contents of the present directory as a string. How can I accomplish this?

**Assistant:**
In Python, there are built-in functions such as `os.listdir()` or `os.walk()` that you can use to list the contents of a directory. Using `os.system('ls')` is not recommended because it is less flexible and harder to control.

To get the contents of the current directory as a string, you can use the `subprocess` module, which provides more flexibility for interacting with external commands. Hereâ€™s how you can do it:

```python
import subprocess

# Run the 'ls' command and capture its output
result = subprocess.run(['ls'], capture_output=True, text=True)

# Get the output as a string
directory_contents = result.stdout

print(directory_contents)
```

Alternatively, if you prefer to use the `os` module, you can achieve the same result with `os.listdir()` and then join the results into a single string:

```python
import os

# List the contents of the current directory
contents = os.listdir('.')

# Join the contents into a single string
directory_contents = '\n'.join(contents)

print(directory_contents)
```

Both methods will give you the contents of the current directory as a string, but using `os.listdir()` is generally more Pythonic and efficient.