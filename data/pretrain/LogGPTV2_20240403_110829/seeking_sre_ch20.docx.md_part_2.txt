参与者分成两个小组（代表两班，欧洲/中东/亚洲\[EMEA\]和美国，为遭受故障的服务进行轮值）来出牌。牌卡丰富了游戏的结构，这是*不幸之轮*会话所缺乏的。它们还提供有关事件管理过程的有用提示，即它们的真正目的。另外还增加了与实际生产事件一样的事件管理流程上的干扰机制。
有四种类型的牌：基本规则、角色、保管人和操作，所有这些都[显示在#cards_from_the_incident_manager_game](#cards_from_the_incident_manager_game)中。
![事件管理器游戏中的卡片](media/rId32.png){width="4.816053149606299in"
height="4.127089895013123in"}
事件管理器游戏中的卡片
以下是基本规则：
-   你的团队正在协作解决事件，主持人将对此进行说明。
-   负责轮值的事件指挥官（最接近当前故障位置的那一位）首先出牌。
-   如果轮到出牌的玩家手上没有牌，他们就画两张牌。
-   每个玩家每回合可以出一张牌。画了"立即出牌"的牌时，玩家必须出这张牌。
每个玩家获得一个角色卡，在游戏期间保留该卡片。与实际事件管理情况一样，角色具有责任和特殊权力。每个角色卡都属于
EMEA
或美国班次。游戏主管根据需要从桌上移除响应卡，以确保每个班次都有关键的主角配备人员。
以下是角色：
事件指挥官（IC）
:   IC 是所有决策的最终权威。可以否决其他玩家采取的任何操作。
    IC 每轮可采取自己选择的一项操作，但须经主持人批准（无需操作卡）。
规划主管
:   规划主管跟踪事件的状态，包括已采取的行动、正在开展的工作以及以后可能需要执行的任何操作（例如，撤消缓解工作）。
    你可以检查并重新排序在桌上每回合接下来的五张牌。
运维主管
:   运维主管协调响应者，确保工作不重复。
    你可以检查每圈任何一个监视或记录（无需操作卡）。
通信主管
:   你负责向任何受影响的团队或外部用户更新此事件的状态。
    你可以与用户通信，或在内部向其他团队或业务所有者上报（无需操作卡）。
应答
:   响应者没有特殊能力。
    你角色的只是贡献的努力，你按照卡允许的，也是 IC 认为最好的来出牌。
与现实生活中一样，事件指挥官应启动一个事件文档，描述解决"事件"的进展情况（这可能是共享文档或白板/挂图）。
如基本规则所述，在主动班次上的每个玩家都会转一圈。他们画动作牌------其中一些可以保留，但有些必须立即出牌。这些操作是在事件期间可能发生的，其中一些是有帮助的，有些则不是。
下面是一些操作示例：
-   检查监控系统
-   查询正在运行的进程
-   查询某个系统的日志
-   回滚进程
-   修改负载平衡配置
-   开发一个新的实用程序或脚本（主持人决定需要多少回合，而出这个牌的玩家将在游戏中离开相应的回合数）
-   修改某个系统（更改标志、实例数等）
-   错误修复、精心测试并发布更新，同样需要由主持人决定这需要离开游戏几轮
-   上报给开发人员（由主持人出牌）玩家需要在多轮之后回到游戏，具体轮次取决于主持人对
    SRE 团队在调查情况方面（上报之前）表现的考量
-   上报给业务所有者（了解任何影响用户的决策的后果）
下面是一些立刻出牌的例子：
-   班次变化：当前班次失去所有牌；由另一个班次接管
-   一个未知的可怕事情发生（游戏主管决定）
-   嘈杂的警报：针对不相关的小问题进行报警，失去一个回合
-   管理干扰：通信主管错过了下一轮处理（同样规划领导也可以错过）
-   无法参与事件响应的工程师会使监控失职：丢失所有监控检查卡
这个游戏教事件管理技能快速，而且不会让然感到沉闷（真的比坐在一堆幻灯片的面前更有趣）。在这里，人们可以实际使用该过程，时间和资源的限制，好像在处理真实的事件一样。通过游戏可以建立信心，人们可以在压力下使用事件管理过程。这些卡片强化了事件管理中出现的实际问题（例如，如果沟通不好，干扰的主管可能会来干预。或者，如果运营主管不协调谁在处理不同工作，则监控者会因而失去专注力）。
这个游戏需要准备才能正常运作。如果人数超过 12
个以上，则游戏将无法正常运作。团队还需要对游戏所基于的系统有共同的理解，要么针对的是他们实际运维的系统，要么是通过描述来了解。就像*《不幸之轮》*游戏一样，它需要游戏主管仔细准备场景，这样游戏主管就可以回答玩家会问的关于系统行为的问题。还应提前准备好道具，如共享的事件文档。   
## 活动学习示例：SRE 教室
  SRE 课堂不是游戏。这是一个研讨会，自 2012 年以来，许多 Google
SRE（包括我）都在教授。我们在许多公开会议上教授它（包括 [USENIX
LISA](https://www.usenix.org/blog/non-abstract-large-system-design-sysadmins)，USENIX
SREcon，O\'Reilly Velocity 和 FLOSS
UK），我们还受邀在谷歌办公室教授这个课程。它有两种形式：半天，只有设计练习，或者一整天，包括一些谈话。
SRE
课堂旨在教人们如何进行实用的分布式系统设计和基本容量规划。这是一个相当雄心勃勃的事情；这是一个复杂的实践领域，参与者完全可能有不同的经验水平。
在这个课程中，我是为数不多的体验过教师和学生两种角色的 SRE
之一。在我加入谷歌之前，我参加了这个研讨会的最早版本之一，那是 2012