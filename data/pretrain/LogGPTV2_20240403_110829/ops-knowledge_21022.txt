User: 请解答这个和日志有关的问题nGinx Redirecting to https:// on all URL I am trying to get the following to work so that no matter what you type in the URL bar you always go to "https://www.". So far www. does not go to https://www. and https:// does not go to https://www.  

Below is my code. What needs to be done? 

server { 
        listen  80;
        server_name  example.com;
        rewrite ^(.*) https://www.example.com$1 permanent;
}

    server {
        listen       80;
        server_name  www.example.com;
        #rewrite ^(.*) https://www.example.com$1 permanent;
        root /home/knownsrv/public_html;

        listen       443 ssl;
        #server_name  example.com www.example.com;
        #root /home/knownsrv/public_html;
        ssl_certificate      /root/knownsrv.crt;
        ssl_certificate_key  /root/knownsrv.key;
        #ssl_client_certificate /root/chain.cer;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /home/knownsrv/public_html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
location ~ \.php$ {
            root           /home/knownsrv/public_html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
}
}

Assistant: You are way overcomplicating this....

To redirect HTTP with or without www to HTTPS with www:

server {
        listen 80;
        server_name www.example.com example.com;
        return 301 https://www.example.com$request_uri;
}


That leaves only the situation of HTTPS without www, which can be addressed like so:

server {
    listen 443 ssl;
    server_name example.com;
    return 301 https://www.example.com$request_uri;
    ssl_certificate /root/knownsrv.crt;
    ssl_certificate_key /root/knownsrv.key;
}


Then just add your ssl vhost for www.example.com. Everything else (ie, missing www, and/or non-ssl) will be redirected to it. No need for if (which can seriously degrade nginx performance).