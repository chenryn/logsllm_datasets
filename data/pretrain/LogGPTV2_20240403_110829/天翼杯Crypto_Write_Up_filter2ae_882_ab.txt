    from Crypto.Util.number import *
    from gmpy2 import invert
    import os
    from secret import flag
    p = getPrime(510)
    q = getPrime(510)
    r = getPrime(510)
    e = 7
    m = bytes_to_long(os.urandom(30)+flag)
    n = p*q*r
    d = invert(e,(p-1)*(q-1)*(r-1))
    c = pow(m,e,n)
    print n/p
    print p
    print c
    print hex(d%(1 = ZZ[]
    n = 61
    q = 5039
    p = 11
    def mul(f,g):
        return (f * g) % (x^n-1)
    def bal_mod(f,q):
        g = list(((int(f[i]) + q//2) % q) - q//2 for i in range(n))
        return Zx(g)
    def inv_mod_prime(f,p):
        T = Zx.change_ring(Integers(p)).quotient(x^n-1)
        return Zx(lift(1 / T(f)))
    def decrypt(c,key):
        f,f3 = key
        a = bal_mod(mul(c,f),q)
        a = bal_mod(a , p)
        return bal_mod(mul(a,f3),p)
    if __name__ == "__main__":
        c = [[221, 4761, 791, 4565, 163, 2959, 2174, 2402, 3083, 4464, 340, 752, 4898, 709, 3085, 4393, 156, 3680, 600, 2074, 3058, 4331, 1621, 2977, 2420, 891, 429, 4304, 3811, 2672, 3615, 3592, 1069, 561, 3183, 1197, 931, 1625, 89, 4118, 1214, 2147, 3542, 3305, 1192, 2768, 4519, 2672, 1548, 2598, 4075, 1667, 577, 924, 810, 1239, 4033, 2198, 2742, 4197, 2069], [1249, 2762, 483, 3324, 449, 1647, 1024, 3292, 285, 83, 1144, 1818, 2323, 2215, 1157, 2370, 3735, 1712, 3278, 1118, 3073, 4803, 783, 4765, 3120, 4709, 3304, 199, 987, 4939, 3969, 1749, 1045, 450, 40, 1644, 1143, 2642, 1464, 3462, 1990, 1235, 4756, 2240, 2808, 4728, 3874, 3746, 2106, 926, 778, 1071, 3488, 3469, 926, 4497, 2220, 1425, 4549, 3130, 4937], [4287, 3659, 4672, 521, 3387, 1631, 674, 1739, 1927, 1655, 4653, 4772, 245, 216, 845, 3161, 2756, 1752, 2562, 2893, 443, 1195, 2430, 2438, 152, 4567, 965, 1200, 1709, 1109, 3349, 2988, 147, 3214, 4391, 2726, 1531, 251, 2685, 1624, 2963, 2385, 4992, 4995, 3296, 3262, 4337, 1002, 63, 959, 2631, 315, 4114, 1292, 3588, 1867, 3349, 3928, 3886, 1258, 2783], [834, 3120, 1420, 3534, 3926, 2862, 1840, 1083, 3258, 3146, 1080, 145, 119, 3348, 4115, 1551, 3426, 2077, 3493, 4002, 3008, 1321, 2182, 4197, 3047, 3349, 1555, 709, 2803, 63, 2792, 538, 4943, 1081, 2204, 2993, 4398, 1007, 3623, 4243, 2276, 2332, 2287, 363, 3920, 2229, 3078, 1438, 1152, 297, 3425, 4381, 3651, 3818, 2970, 159, 3726, 1190, 1645, 632, 2697]]
        f = [12, 0, 5028, 0, 11, 0, 5028, 11, 5028, 11, 11, 5028, 0, 5028, 11, 0, 0, 0, 0, 5028, 5028, 0, 5028, 11, 0, 0, 0, 11, 0, 5028, 0, 0, 5028, 0, 11, 0, 5028, 5028, 0, 0, 0, 11, 0, 11, 0, 0, 5028, 0, 11, 5028, 0, 0, 0, 11, 0, 5028, 11, 0, 0, 5028, 5028]
        f = bal_mod(Zx(f) , q)
        f_p = inv_mod_prime(f , p)
        flag = b''
        for i in range(len(c)):
            tmp = list(decrypt(Zx(c[i]),(f , f_p)))
            print(tmp)
            res = 0
            for j in range(len(tmp)):
                res += (tmp[j]+1) * (3 ^ j)
            flag += long_to_bytes(res)
        print(flag)