你现在的位置
483
---
## Page 520
（互补）配对逻辑
爱是一个数字游戏
应该记得，互补配对响应在mismatch_response表中存储为数字，
mismatch_response
其中0、1和2对于特定的响应有特殊的含义。
response_idO
2
response
user_id 
Unknown =0
Hate
topic_id 
这就是计算两个用户之间的互补配对所使用的数据，具体来讲，我
这些行中的第二列是响应，可
，√一是，一量，一
以是0（未回答）、（（喜欢）
一个“喜欢”。换句话说，要查找这样的响应行：response列分别
或2（讨厌）。
是“1”和“2”，或者“2”和“1”。
配对！
28
20
278
11
29
1
1
279
11
30
1
1
配对！
280
1
11
5
31
281
②0
1
5
11
7
对于相同的主题（真人秀），如果一
个“喜欢”（1）对应一个“讨厌”（2）.则
得到一个互补配对。
还缺少一个方便的方法利用PHP代码确定两个响应之间何时出现一个
互补配对。当然可以利用一组if-else语句来检查是否有一个“1”
和一个“2”，不过还有更好的解决方案。不论哪一种情形（一
个“1”和一个“2”，或者一个“2”和一个“1”），将两个响应结
果相加都会得到值为3。所以可以使用一个简单的公式来检测两个响
应之间是否存在互补配对。
如果ResponseA+ResponseB二3，则得到一个互补配对！
算。以上解决了比较单个匹配的具体问题，不过还有一个更大的问题
没有解决，即如何具体构建MyMismatch脚本。
484
第8章
---
## Page 521
控制你的数据，世界在你手中
成功找到互补配对的5大步骤
要找到最佳的互补配对，并不只是需要比较响应行。MyMismatch脚
本必须遵循一组精心设计的步骤才能成功地建立互补配对。这些步骤
非常重要，在此基础上才能最终让用户满意，使用户的问卷响应真正
体现价值。
从mismatch_response表获取用户的响应，确
保主题名与结果联接。
初始化互补配对搜索结果，包括跟踪“最佳配对”
的变量。
循环处理用户表，将其他人的响应与用户响应比较。这
需要将数据库中每个人的响应与该用户相应的响应进行
比较。利用一个“得分”来跟踪该用户与其他人分别有
多少个相反的响应。
每次循环之后，查看当前互补配对是否优于目前为止的
最佳配对。如果是这样，则把这个互补配对存储为新
的“最佳配对”，并确保同时存储互补配对的主题。
确保已经找到“最佳配对”，然后查询得到有关该互补
配对用户的更多信息，并显示结果。
PDG
你现在的位置》
485
---
## Page 522
得到用户响应并初始化搜索结果
准备互补配对搜索
第1步我们很熟悉，因为前面已经写了一些查询，可以完成与此类似
的联接。不过我们还需要存储用户的响应，以便以后在脚本中（第3
步）将这些响应与其他用户的响应进行比较。下面的代码建立了一个
这个奎询使用一个30N送
择用户的所有响应。
数组$user_responses，其中包含了登录用户的响应。
AS topic_name "
"FROM mismatch_response AS mr "
"INNER JOIN mismatch_topic AS mt "
"USING (topic_id)".
"WHERE mr.user_id='".$_SESSION['user_id'].""";
使用一个while稀环处理查询结果
$data =mysqli_query($dbc,$query);
中的各行，这个过程中会建立一
Suser_responses = array();
个用户响应数组。
while ($row = mysqli_fetch_array($data))(
完成
array_push($user_responses, $row);
从mismatch_response表获取用户的响应，确
这个继环结束时，Suser_
K
保主题名与结果联接。
tesponses数组将包含用
户的所有响应。
MyMismatch脚本构建过程的第2步需要创建一些变量，这些变量将包含
互补配对搜索的结果。在整个MyMismatch脚本中完成最佳配对搜索时
会使用这些变量：
这个变量包含两个用户之间的互
$mismatch_score=0;
补配对挥分，最终最高分将给出
>$mismatch_user_id=-1;
一个最佳互补配对。
这是所检壹的互补配对候选人
$mismatch_topics = array();
如果搜索之后这个变量仍设置为一1.说
的用户J.……搜索结束时，这
明不存在互补配对，对此只有一种情
个变量将包含最佳配对的30。
这个数组包含两个用户间互补配对
况，即所有其他用户都没有回答问卷
的主题。
但这是不太可能的。
完成
初始化互补配对搜索结果，包括跟踪“最佳配对”
2
的变量。
486
第8章
---
## Page 523
控制你的数据，世界在你手中
比较用户得到“互补配对度”
建立互补配对的下一步需要循环处理每一个用户，将他们的响应与当
前登录用户的响应进行比较。换句话说，我们将针对登录用户即配对者
（例如，Sidney），遍历整个用户表，将该用户的响应与各个配对候选人
的响应进行比较。我们要找出与配对者有最多相反响应的候选人。
从哪里开始呢？先完成一个循环逐一处理$user_responses数组（配
对者响应）怎么样？在这个循环中，我们将各个元素的值与另一个数组
（其中包含配对候选人的响应）中的相应元素进行比较。下面称第二个
数组为$mismatch_responses。
这个数组包含数据库中另一个用
这个数组包含登录用户（即配对
户（即配对候送人）的响应。
老）的响应。
Suser_responses
Smismatch_responses
Hate
配对老与不同的配对候选
ove
Taltoos
Hate
Gold
77
人比较过程中，这个数组
2
Love
Gold chains
Hate
Body
rcings
78
Body piercings
金股变。
Love
Love
boots
79
Love
Cowboyboots
Love
hair
80
Love
Long hair
Love
Re
TV
81
Hate
Reality TV
7
7
Hate
Profession
vrestling
82
Profmssi
8
8
Hate
Horror
83
需要同时继环处理这两个数组，比较对相
同主题的响应，来壹看响应是否相同。
这里的难题在于，我们需要这样一个循环：它实际上要同时循环处理
两个数组，将各个元素逐一地进行比较。foreach循环无法达到这个
目的，因为它只能循环处理一个数组，而我们需要同时循环处理两个
数组。while循环是可行的，不过必须创建一个计数器变量，并在每
次循环中手工地将其递增。理想情况下，我们需要一个能自动管理计
数器变量的循环，从而能够用它来访问各个数组中的元素。
oreach(..)
while(...)
K
不可行！
可行，但是不太理想。
你现在的位置
487
---
## Page 524
引入for循环
我们需要一个FOR循环
PHP还提供了另一类循环，它恰好能提供Mismatch响应比较所需的功
能。这称为for循环，这种循环非常适合将某个工作循环指定次数。
例如，for循环很适用于计数任务，如计数减至0，或者计数增加到某
个值。以下是for循环的结构，由此可以看出如何构造循环利用一个
循环计数器变量（$i）选代处理一个数组。
测试条件
只有当测试条件计算为true
初始化
更新
时才完成下一次循环，即$i小
继环开始前，将
计数器$i初始为0，
将循环计数器更新
继环计数器初始
由此开始循环。
于用户响应数时才会继续循环。
为$i加1。
化为某个值。
for
（$i=O;$iSscote+=1
array_push($topics,
$user_responses[$i]['topic_name']);
个
互补配对包括一个“喜
欢”（1）对应一个“讨
各个互补配对的主疑金
厌”（2），所以如果存在
继环计数器用于逐步
增加到一个数组中，提
互补配对，将响应相加总
处理各个用户响应。
供互补配对结果时可以
能得到一个3。
向用户显示这些主题。
宗成
循环处理用户表，将其他人的响应与用户响应比
较。
490
第8章
---
## Page 527
控制你的数据，世界在你手中
完成互补配对
这个脚本可以找到一个
这个计算互补配对得分的全新循环属于一个更大的脚本（mymismatch，
用户的理想配对！