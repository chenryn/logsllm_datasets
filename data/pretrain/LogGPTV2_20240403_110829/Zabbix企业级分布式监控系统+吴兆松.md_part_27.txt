Add
图9-9
Zabbix-Server在接收到Zabbix-Agent的注册请求时，如果没有收到IP地址的
值，则使用Zabbix-Agent和Zabbix-Server建立TCP连接时使用的IP地址。如果
没有收到Port的值，则默认使用10050作为端口。
9.3.2主动方式自动注册的配置
1．配置Agent
shell#vim /etc/zabbix/zabbix_agentd.conf
ServerActive=10.0.0.1
Hostname=webl.itnihao.com
在Agent 端配置主动模式，即配置ServerActive 参数。注意，如果没有设置
215
---
## Page 232
Zabbix企业级分布式监控系统
Hostname，将会使用默认的主机名，在Linux中使用Hostname命令获取到的主机
名（即使用HostnameItem=system.hostname这个Key来发现Hostname）。
2.Web前端配置自动注册功能
下面的例子是在代理的方式下实现自动注册功能，主要步骤如下。
①在Web 前端单击菜单项Configuration→Actions，在event source 中选择
Auto registration，单击Create action。
②在Action选项中配置名称等信息。
③选择Conditions选项，在Newcondition下拉框中选择Proxy，选择代理的
主机，单击Add按钮。
④选择Operations 选项，选择相关的条件操作，如'Add host、‘Add tohost
groups'、Link to templates'等。
3．配置过程
下面详细介绍如何配置Proxy的自动注册功能。
依次选择菜单栏Configuration→Actions→Create action→Autoregistration，
如图9-10所示。
History
Operatio
Status
图9-10
在Action选项中输入Name的名称，如图9-11所示。
ZABBIX
Nameautoregistration
Default subjectAutoregistration:(HOST.HOST)
Default message
Host name(HOST.HOST)
Enabled
Delete
图9-11
216
---
## Page 233
第9章Zabbix与自动化运维
在Conditions中选择条件为Proxy，如图9-12所示。
Name
Action
司
select
Adc
图9-12
选择我们之前创建的代理，如图9-13所示。
Action
Select
图9-13
单击“Add”按钮添加，如图9-14所示。
Conditions
Label
Name
Actior
Newcondito
图9-14
添加好的界面如图9-15所示。
JRATIOROFACT
ActienConditionsOperations
ConditonsLabelName
Action
(A)
Prox
elect
Add
图9-15
动作、条件都设置好后，下面就是开始操作了，如图9-16所示。
在操作中选择添加主机、主机组和模板等，如图9-17所示。
添加好的内容如图9-18所示（读者会看到这里的模板不是标准名称，而是
TemplateOSLinux-active，由于自带的模板是被动方式，所以这里修改了模板，设
置为主动模式。关于主动模式，请参考第8章）。
217
---
## Page 234
Zabbix企业级分布式监控系统
CONFIGURATION OFACTIONS
Actionoperations
Detajl5
Action
New
图9-16
Details
Action
No operations defined
AddCance!
图9-17
Operation
Details
Action
Add host
Edt Remove
Add to host groups:Templates
Edit Remeve
Link to templates:Template OSs Linux-active
Edit Remove
图9-18
单击“Save”按钮保存，保存时间大约5分钟，即可完成所有网段主机的自
动发现。完成后查看这里的主机发现，如图9-19所示。
ZABBIX
lurisg
GraphsScreensap
Search
Discovered device
Monltoredhost
proxy.ltnihao.com(40 devices)
192168.151.1
01:11:39
192.168.151.5
192.168.151.11
02:10:26
192.168.151.17
00:10:44
192.168,151.15
00:10:29
192.169.151.17
00:10:18
192.168,151.132
01:58:31
192.168.151-173
00:55:21
192.168,151.180
00:54:42
192.168.151.181
(01:54:23)
01:54/13
192.168/151.105
192.169.151.192
00:53:44
图9-19
到，如图9-20所示，从图9-21中可看到已经添加监控完毕。
218
---
## Page 235
第9章Zabbix与自动化运维
192.168.151.200(devops.tniha0.com）
devops.itnihao.con
02:10:24
图9-20
ZABBIX
Help
losts
1to3of3.founc
YFiter
Applications
Items
Triggers
Graphs
DiscoveryWebInterface
Templates
itniha
Applications(1) Items(3） Triqgers(3） Graphs (0)
Discovery(0) Web (0) 192.168.151.200:10050Iemplatg.OS Linux-active
:devops.itnihao.
likations(1）Items (3）Iriqqers (3）Graphs (0）
Discovery(0)Web(0)127.0.0.1:10050
1soaledda
图9-21
9.3.3使用Hostmetadata
Hostmetadata是Zabbix2.2新增加的功能，该功能在Zabbix-Agent端可以自
定义条件，在选择自动注册的时候，Zabbix-Server端可以根据Host metadata来选
择条件，从而实现更多的条件筛选。在Zabbix2.2之前的版本中，在网络发现中
有如图9-22所示的条件可以使用。
Newcondition
HostIP
servie Pe
Save
Discovery
check
Cal
Discovery
Newcondition
Hostname
like
Uptime/Downtime
Hostname
Receivedvalue
Proxy
Proxy
图9-22
在Zabbix2.2以前的版本中，在自动注册选项中只有两个条件可供选择，一
个是Host name，另一个是Proxy，如图9-22所示，在实际的生产环境中并不能
满足需求，如果在机器名称无法区分的情况下（比如，在云环境中，主机名通
常没有规律可循，几乎是随机生成的字符串），定义以主机名为条件，会出现很
多问题，例如：不同的操作系统如何添加对应的模板。而在Zabbix2.2中给出了
新的解决方案，即Host metadata。
在zabbix_agentd.conf中，新增了以下两个配置参数。
●HostMetadata=字符串：长度范围为0～255。
·HostMetadataItem=item：用于Item获取数据。这里的Item可以设置为system.
uname，或者是其他获取到的字符串，长度限制为0～255。
下面分别对这两个参数（HostMetadata和HostMetadataItem）进行详解。
219
---
## Page 236
Zabbix企业级分布式监控系统
1．使用HostMetadataltem的配置参数
在Zabbix-Agent端配置，语句如下：
shell# vim /etc/zabbix/zabbix_agentd.conf
HostMetadataItem=system.uname
如果是Linux系统，那么在自动注册的时候，Hostmetadata数据中将会包含
Linux字符串。
Linux proxy.itnihao.com 2.6.32-358.el6.x86_64 #1 SMP Fri Feb 22 00:
31:26 UTC 2013 x86 _64
如果是Windows系统，那么在自动注册的时候，Host metadata数据中将会包
含Windows字符串。
Windows pc 6.1.7601 Microsoft Windows 7 ultimate Edition Service P
ack 1 x64
前面我们讨论了Zabbix-Agent端的配置，下面在Zabbix-Server的Web前端
进行配置。
1）对Linux系统的规则添加，如图9-23所示。
COM-TCURATTON OF ACTIONS
Action ConditionsOperations
ConditionsLabel
Name
Action
No conditions defined
Newcondition
Host metadata ike Linud 
CloneDeleteCancel
图9-23
名字: Linux host autoregistration
条件: Host metadata like Linux
操作：Link to templates：Template Os Linux
2）对Windows系统的模板添加。
如果HostMetadataItem=System.uname检测出来的值Windows的机器，则在前
端Web的配置如下:
名字：Windows host autoregistration
条件：Host metadata like Windows
操作：Link to templates：Template Os Windows
2.使用HostMetadata的配置参数
如果在Zabbix-Agent端选择使用HostMetadata这个配置参数，在
Zabbix-Server的Web前端配置方法与上面的步骤1）和2）类似，则在Zabbix-
220
---
## Page 237
第9章Zabbix与自动化运维
Agent端配置如下：
shell#vim /etc/zabbix/zabbix_agentd.conf
HostMetadata=Linux
linux host
在Windows下的客户端修改为：
/etc/zabbix/zabbix_agentd.conf
HostMetadata=Windows
Windows host
在Web前端设置规则为：在选择条件的时候，可以选择两个（Linux和
linux_host、Windows和Windowshost）同时成立，如图9-24和图9-25所示。
ActionConditionsoperations
Type ofcaloulatio
AND
(A and B)
Conditions
Label Name
Action
(A)
Hostmetadata like
Remove
(6)
Hostmetadata likeLinu
Remove
Host metadatalike
Add
Delet
图9-24
Action
Conditions
Operations
Type of calculation
AND
(AandB)
Conditions
Label Name
Action
(A)
HostmetadatalikeWindowshost
Remove.
(B)
Host metadatalikeWindows
Remove
New condition  Host metadata ike
Add
图9-25
从上面的例子可以看到，基于Host metadata在自动注册中，我们同样可以有
效地设置机器的分组、机器模板的添加等功能。
9.3.4关于自动注册的注意事项
从前面的内容可知，自动发现的功能非常强大，能进一步减轻监控的工作量。
若大批量的机器需要添加监控项，利用自动发现功能就可以实现。
zabbix_proxy.conf默认只是最基本的配置，因此要调整为生产环境适用的参数。
对于zabbix_proxy.conf，请关注以下参数。
ProxyLocalBuffer
ProxyofflineBuffer
HeartbeatFrequency
221
---
## Page 238
Zabbix企业级分布式监控系统
ConfigFrequency
StartPollers
StartIPMIPollers
StartPollersUnreachable
StartTrappers
StartPingers
StartDiscoverers
关于这部分参数的调整原则，请读者参考第12章。
9.4Low level discovery功能
在配置Items 的过程中，有时需要对类似的Items 进行添加，这些Items具有
一些共同的特性，表现为某些特定的参数是变量，而其他设置都是一样的。例如，
一个程序有多个端口，需要对端口配置Items。再如，磁盘分区、网卡的名称等，
由于具有不确定性，故配置固定的Items会出现无法通用的问题，因而在Zabbix2.0
以后的版本中增加了Lowleveldiscovery功能。
Lowlevel discovery的Key可以对网卡、文件系统、SNMPOIDS进行自动发
现。除此之外，还支持自定义功能。
Lowleveldiscovery的使用过程分以下两步。
·自动发现特定变量的名称。
·添加对变量的Items。
Zabbix中Lowleveldiscovery的Key返回值是一个JSON格式（如果是自定
义的规则，可以通过网站验证获取到的值是否为正确的JSON格式数据），自带的
Key如表9-1所示。
表9-1
Key名称
适用监控方式类型
返回数据格式
{"data":[
"(#FSNAME)":"
"{#FSTYPE)":""
vfs.fs.discovery
Zabbix Agent
"(#FSNAME)":",
"{#FSTYPE)":""
），
222
---
## Page 239
第9章Zabbix与自动化运维
续表
Key名称
适用监控方式类型
返回数据格式
{"data":[
"(#IFNAME)":""
net.if.discovery
Zabbix Agent
[#IFNAME}"
{"data":[
snmp.discovery
SNMP(v1,v2 orv3)agent
"{#SNMPINDEX}":"",
"{#SNMPVALUE)":""
"(XNINS#
snmp.discovery
SNMP（v1,v2orv3)agent
"(#SNMPVALUE}":"
{"data":[
<>·o#
"{#CUSTOM2)":""
custom.discovery
any
"{#CUSTOM1}"
"'
"{#CUSTOM2}":""
用Zabbix-Get来查看Key获取到的数据，如图9-26所示。
对于SNMP，不能通过Zabbix-Get来验证，只能在Web页面中进行配置使用，
如图9-27所示。
223
---
## Page 240
Zabbix企业级分布式监控系统
ootazabbix~]#zabbix_get
]:.eaep.
"{#IFNAME}”:"10”}，
"{#IFNAME}”:"eth2"}，
"{#IFNAME}”:"ethO"}，
"{#IFNAME}":"ethI"}]}
[rootazabbix~]#zabbixget-s 127.0.0.1-kvfs.fs.discovery
"data":[
"[#FSNAME}"·"V"
FSNAME
ESTYRI
"/dev\/shm",
[#FSNAMe}":"Vproc\/bus\/usb"
{#FSTYPE"
/fsbinfmt_misc"
图9-26
CONFIGURATION OF JIEM PROTOTYPES
Itemprototypesot Net
Displaying1 to8of 8found
Template istTemplate:Iemplate SNMp OsLinuxDiscoyery listDisco
erv:NetworknterfacesItem prototypes(8)Inqger prototynes(1)
Graph prototynes（1）Host prot
Name
Key
IntervalHistoryIrendsIyee
Temolate SNMP Interfaces:Admin status of interface
ifnErors[{SNMPVALUE}]
60.
365
SNMPV2agent
7
Template SNMPInterfaces:Incominq traffconinterfase(SNMPvALUE}
ifInOctets[{=SNMPVALUE)]
60
365
SNMPV2agent
60
365
SNMPv2agent