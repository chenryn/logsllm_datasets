### Description
Hello team - First of all, not sure if this is a bug.
I'm having trouble setting up Python logging with Jax without running into log
spam issues.
The following code works as expected:
    import logging
    logging.basicConfig(level=logging.INFO, format='%(asctime)s [%(levelname)-5.5s] [%(name)-12.12s]: %(message)s')
    logger = logging.getLogger(__name__)
    logger.info('hello world')
Output
    2022-11-24 21:26:11,974 [INFO ] [__main__    ]: hello world
But not when also importing jax
    import logging
    import jax
    logging.basicConfig(level=logging.INFO, format='%(asctime)s [%(levelname)-5.5s] [%(name)-12.12s]: %(message)s')
    logger = logging.getLogger(__name__)
    logger.info('hello world')  # no visible output
It only works if one passes the `force=True` flag to the logging config
    import logging
    import jax
    logging.basicConfig(level=logging.INFO, format='%(asctime)s [%(levelname)-5.5s] [%(name)-12.12s]: %(message)s', force=True)
    logger = logging.getLogger(__name__)
    logger.info('hello world')  # works as expected now
However, if one checks the loggers, this overwrote now the config of all
previous loggers
    print(logging.root.manager.loggerDict)
    # {'urllib3.util.retry': , 'urllib3.util': , 'urllib3': , 'urllib3.connection': , 'urllib3.response': , 'urllib3.connectionpool': , 'urllib3.poolmanager': , 'charset_normalizer': , 'requests': , 'jaxlib.tpu_client': , 'jaxlib': , 'jax._src.config': , 'jax._src': , 'jax'
    : , 'jax._src.util': , 'jax._src.clusters.cluster': , 'jax._src.clusters': , 'jax._src.distributed': , 'jax._src.lib.xla_bridge': , 'jax._src.lib': , 'jax._src.profiler': , 'jax._src.path': , 'concurrent.futures': , 'concurrent': , 'asyncio': , 'jax._src.dispatch': , 'jax.interpreters.pxla': , 'jax.interpreters': , 'rich': , '__main__': }
This means that certain loggers (e.g.
`'jax.experimental.compilation_cache.compilation_cache': `) will now throw
a lot of log spam Ã  la
    2022-11-24 20:58:53,231 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.32s)
    2022-11-24 20:58:53,247 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.01s)
    2022-11-24 20:58:53,321 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.07s)
    2022-11-24 20:58:53,360 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_true_divide' because it took < 1.00 seconds to compile (0.03s)
    2022-11-24 20:58:53,840 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.47s)
    2022-11-24 20:58:53,889 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.04s)
    2022-11-24 20:58:54,514 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.62s)
    2022-11-24 20:58:55,159 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.63s)
    2022-11-24 20:58:55,950 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.76s)
    2022-11-24 20:58:56,251 [INFO ] [root        ]: Not writing persistent cache entry for 'jit_prim_fun' because it took < 1.00 seconds to compile (0.26s)
because their config has changed. Any solutions to this?
I could reduce log spam when jax was using abseil logging, e.g. with
    logging.getLogger('absl').setLevel(logging.WARNING)
but this has no effect now (I assume jax switched to Python logging).
Thanks for your help on this!
### What jax/jaxlib version are you using?
jax==0.3.25 jaxlib==0.3.25
### Which accelerator(s) are you using?
TPU
### Additional system info
Linux
### NVIDIA GPU info
_No response_