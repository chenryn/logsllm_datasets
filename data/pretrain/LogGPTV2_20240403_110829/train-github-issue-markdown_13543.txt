I found that the example code for the histogram2d has an issue when adapted.
The code below works for a symmetric amount of bins. But if one changes the
number of bins (e.g. removing a bin on line 655 ` xedges = [0, 1, 1.5, 3])` in
only one dimensions, the example raises an exception:
`TypeError: Axes don't match array shape`
My understanding of this error: This is due to the fact that `
im.set_data(xcenters, ycenters, H)` on line 696 is erroneous. The `set_data`
functions behaves counter-intuitive and sets data in screen coordinates and
not in plot coordinates, see theses lines in matplotlib. The fix for this is
to invert the xedges, yedges order in the `set_data` call. With that
adjustment the code works fine for an asymmetric number of bins. Although, I
don't understand why the data is displayed correctly in the symmetric bin
number case.
I am happy to fix this (by inverting the order), but am unsure about how to
move on. Is it OK to just go along, fix it, and create a pull request? Can
anyone guide me along?
numpy/numpy/lib/twodim_base.py
Lines 689 to 702 in 4092a9e
|  NonUniformImage displays exact bin edges with interpolation:  
---|---  
|  
|  >>> ax = fig.add_subplot(133)  
|  >>> ax.set_title('NonUniformImage: interpolated')  
|  >>> im = mpl.image.NonUniformImage(ax, interpolation='bilinear')  
|  >>> xcenters = xedges[:-1] + 0.5 * (xedges[1:] - xedges[:-1])  
|  >>> ycenters = yedges[:-1] + 0.5 * (yedges[1:] - yedges[:-1])  
|  >>> im.set_data(xcenters, ycenters, H)  
|  >>> ax.images.append(im)  
|  >>> ax.set_xlim(xedges[0], xedges[-1])  
|  >>> ax.set_ylim(yedges[0], yedges[-1])  
|  >>> ax.set_aspect('equal')  
|  >>> plt.show()  
|