#  Crypto
> 文章作者 [RyuZU](https://github.com/RyuZUSUNC) & [r0fus0d](https://github.com/No-Github)
> 注 : 笔记中拓扑图 drawio 源文件在其图片目录下
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
## 大纲
* **常见编码**
    * [ASCII](#ascii)
    * [Base](#base)
        * [Base64](#base64)
        * [Base16](#base16)
        * [Base32](#base32)
        * [Base58](#base58)
        * [Base62](#base62)
        * [Base85](#base85)
        * [Base91](#base91)
        * [base92](#base92)
        * [Base100](#base100)
    * [Escape/Unescape](#escapeunescape)
    * [HtmlEncode](#htmlencode)
    * [Punycode](#punycode)
    * [Quoted-printable](#quoted-printable)
    * [shellcode](#shellcode)
    * [Unicode](#unicode)
    * [URL](#url)
    * [UTF](#utf)
        * [UTF-8](#utf-8)
        * [UTF-7](#utf-7)
        * [UTF-16](#utf-16)
    * [UUencode](#uuencode)
    * [XXencode](#xxencode)
    * [进制](#进制)
    * [敲击码](#敲击码)
    * [曼彻斯特编码](#曼彻斯特编码)
    * [图片码](#图片码)
        * [线性条形码](#线性条形码)
        * [二维码](#二维码)
            * [PDF147](#pdf147)
            * [汉信码](#汉信码)
* **哈希 & 摘要 & 散列**
    * [BCrypt](#bcrypt)
    * [MD5](#md5)
    * [RIPEMD](#ripemd)
        * [RIPEMD-160](#ripemd-160)
    * [SHA](#sha)
* **现代加密**
    * [对称性加密算法](#对称性加密算法)
        * [AES](#aes)
        * [DES](#des)
            * [3DES](#3des)
        * [RC4](#rc4)
        * [TEA](#tem)
        * [Xtea](#xtea)
        * [Serpent](#serpent)
        * [BlowFish](#blowfish)
    * [非对称性加密算法](#非对称性加密算法)
        * [RSA](#rsa)
    * [国密](#国密)
        * [SM1](#sm1)
        * [SM2](#sm2)
        * [SM3](#sm3)
        * [SM4](#sm4)
        * [SM9](#sm9)
* **古典加密**
    * [换位加密](#换位加密)
        * [栅栏密码](#栅栏密码)
        * [曲路密码](#曲路密码)
        * [列移位密码](#列移位密码)
    * [替换加密](#替换加密)
        * [ADFGX](#adfgx)
        * [Bazeries](#bazeries)
        * [Digrafid](#digrafid)
        * [Porta](#porta)
        * [ROT](#rot)
        * [埃特巴什码](#埃特巴什码)
        * [查尔斯加密](#查尔斯加密)
        * [凯撒密码](#凯撒密码)
        * [摩斯电码](#摩斯电码)
        * [简单替换密码](#简单替换密码)
        * [希尔密码](#希尔密码)
        * [波利比奥斯方阵密码](#波利比奥斯方阵密码)
        * [夏多密码](#夏多密码)
        * [普莱菲尔密码](#普莱菲尔密码)
        * [自动密钥密码](#自动密钥密码)
        * [博福特密码](#博福特密码)
        * [滚动密钥密码](#滚动密钥密码)
        * [同音替换密码](#同音替换密码)
        * [仿射密码](#仿射密码)
        * [培根密码](#培根密码)
        * [双密码](#双密码)
        * [三分密码](#三分密码)
        * [四方密码](#四方密码)
        * [棋盘密码](#棋盘密码)
        * [跨棋盘密码](#跨棋盘密码)
        * [分组摩尔斯替换密码](#分组摩尔斯替换密码)
        * [格朗普雷密码](#格朗普雷密码)
        * [比尔密码](#比尔密码)
        * [键盘密码](#键盘密码)
            * [手机键盘密码](#手机键盘密码)
            * [电脑键盘棋盘](#电脑键盘棋盘)
            * [电脑键盘坐标](#电脑键盘坐标)
            * [电脑键盘QWE](#电脑键盘qwe)
        * [01248密码](#01248密码)
        * [恩尼格玛密码](#恩尼格玛密码)
        * [维吉尼亚密码](#维吉尼亚密码)
        * [猪圈密码](#猪圈密码)
        * [跳舞小人加密](#跳舞小人加密)
* **其他编码**
    * [Brainfuck/Ook](#brainfuck/ook)
    * [JSfuck](#jsfuck)
    * [JJEncode](#JJEncode)
    * [PPEncode](#PPEncode)
    * [AAEncode/颜文字加密](#AAEncode/颜文字加密)
    * [与佛论禅](#与佛论禅)
    * [文本加密为汉字](#文本加密为汉字)
    * [随机密码生成](#随机密码生成)
    * [核心价值观加密](#核心价值观加密)
    * [蝌蚪文](#蝌蚪文)
    * [whitespace](#whitespace)
    * [音符加密](#音符加密)
    * [盲文对照](#盲文对照)
    * [五笔编码](#五笔编码)
    * [中文电码](#中文电码)
    * [LOGO语言](#LOGO语言)
    * [Dissection Font](#Dissection-Font)
---
**教程资源**
- http://www.practicalcryptography.com/
- https://cryptopals.com/
- https://ctf-wiki.github.io/ctf-wiki/crypto/introduction/
- https://intensecrypto.org/public/
- https://cryptohack.org/
**相关工具**
- [ffffffff0x/BerylEnigma](https://github.com/ffffffff0x/BerylEnigma) - 一个为渗透测试与CTF而制作的工具集，主要实现一些加解密的功能。
- [gchq/CyberChef](https://github.com/gchq/CyberChef) - 一个用于加密、编码、压缩和数据分析的网络应用
    - https://gchq.github.io/CyberChef/
- [Snowming04/Cipher_Encryption_Type_Identification:.](https://github.com/Snowming04/Cipher_Encryption_Type_Identification) - 对密文的加密类型进行判断的命令行工具
- [guyoung/CaptfEncoder](https://github.com/guyoung/CaptfEncoder) - 一款跨平台网络安全工具套件
- [lockedbyte/cryptovenom](https://github.com/lockedbyte/cryptovenom) - 密码学的瑞士军刀
- [Acmesec/CTFCrackTools](https://github.com/Acmesec/CTFCrackTools) - CTF工具框架
- [Ciphey/Ciphey](https://github.com/Ciphey/Ciphey) - 使用自然语言处理和人工智能以及一些全自动解密/解码/破解工具
    ```bash
    python3 -m pip install ciphey --upgrade
    文件输入 ciphey -f encrypted.txt
    不合格输入 ciphey -- "Encrypted input"
    正常方式 ciphey -t "Encrypted input"
    ```
- hash-identifier - kali 自带的 hash 识别工具
- [L-codes/pwcrack-framework](https://github.com/L-codes/pwcrack-framework) - 一个用Ruby编写的密码自动破解框架
- [hellman/xortool](https://github.com/hellman/xortool)
    ```bash
    pip3 install xortool
    xortool -c 20 file
    ```
- [dhondta/python-codext](https://github.com/dhondta/python-codext) - Python codecs extension featuring CLI tools for encoding/decoding anything
    ```bash
    pip3 install codext
    echo -en "test" | codext encode morse
    echo -en "test" | codext encode braille
    echo -en "test" | codext encode base100
    ```
**在线工具**
- http://tool.bugku.com/
- http://ctf.ssleye.com/
- https://ctftools.com/down/
- https://gchq.github.io/CyberChef/
- https://www.sojson.com/encrypt/
- https://cryptii.com/
- https://www.ssleye.com/
- https://www.jisuan.mobi/index.php?catid=70
**相关文章**
- [为什么要在密码里加点"盐" | Libuchao's blog](https://libuchao.com/2013/07/05/password-salt)
- [CTF中那些脑洞大开的编码和加密 - jack_Meng](https://www.cnblogs.com/mq0036/p/6544055.html)
- [How we recovered over $300K of Bitcoin](https://reperiendi.wordpress.com/2020/04/03/how-i-recovered-over-300k-of-bitcoin/)
- [椭圆曲线加密与NSA后门考古](https://mp.weixin.qq.com/s/BMXzOZ3yxhfl2JOe61EnNA)
- [All About Crypto - CTF竞赛密码学方向指南](https://mp.weixin.qq.com/s/yfsEpgJJNNVgETm2SydsTg)
**CTF writup**
- [IDF实验室-特殊的日子](https://blog.csdn.net/ab748998806/article/details/46382017) - 知识点 : CRC
- [曼切斯特与差分曼切斯特](https://skysec.top/2017/07/10/%E6%9B%BC%E5%88%87%E6%96%AF%E7%89%B9%E4%B8%8E%E5%B7%AE%E5%88%86%E6%9B%BC%E5%88%87%E6%96%AF%E7%89%B9/) - 知识点 : 曼切斯特编码与差分曼切斯特编码
- [BUUCTF平台Crytpo部分Writeup](https://www.anquanke.com/post/id/217151)
---
## 简介
密码学(Cryptography)一般可分为古典密码学和现代密码学.
其中,古典密码学,作为一种实用性艺术存在,其编码和破译通常依赖于设计者和敌手的创造力与技巧,并没有对密码学原件进行清晰的定义.古典密码学主要包含以下几个方面:
- 单表替换加密(Monoalphabetic Cipher)
- 多表替换加密(Polyalphabetic Cipher)
- 奇奇怪怪的加密方式
而现代密码学则起源于 20 世纪中后期出现的大量相关理论,1949 年香农(C. E. Shannon)发表了题为《保密系统的通信理论》的经典论文标志着现代密码学的开始.现代密码学主要包含以下几个方面:
- 对称加密(Symmetric Cryptography),以 DES,AES,RC4 为代表.
- 非对称加密(Asymmetric Cryptography),以 RSA,ElGamal,椭圆曲线加密为代表.
- 哈希函数(Hash Function),以 MD5,SHA-1,SHA-512 等为代表.
- 数字签名(Digital Signature),以 RSA 签名,ElGamal 签名,DSA 签名为代表.
其中,对称加密体制主要分为两种方式:
- 分组密码(Block Cipher),又称为块密码.
- 序列密码(Stream Cipher),又称为流密码.
一般来说,密码设计者的根本目标是保障信息及信息系统的
- 机密性(Confidentiality)
- 完整性(Integrity)
- 可用性(Availability)
- 认证性(Authentication)
- 不可否认性(Non-repudiation)
其中,前三者被称为信息安全的 CIA 三要素 .
而对于密码破解者来说,一般是要想办法识别出密码算法,然后进行暴力破解,或者利用密码体制的漏洞进行破解.当然,也有可能通过构造虚假的哈希值或者数字签名来绕过相应的检测.
攻击类型	|   说明
- | -
唯密文攻击	|   只拥有密文
已知明文攻击 |	拥有密文与对应的明文
选择明文攻击 |	拥有加密权限,能够对明文加密后获得相应密文
选择密文攻击 |	拥有解密权限,能够对密文解密后获得相应明文
---