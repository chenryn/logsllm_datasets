# VDOO 披露 Axis 摄像头多个漏洞
|
##### 译文声明
本文是翻译文章，文章来源：blog.vdoo.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
在过去的几个月里，VDOO 安全研究团队一直在物联网安防领域进行广泛的安全研究。在大多数情况下，为了提高效率和透明度，研究是和设备供应商一起进行的。
作为研究的一部分，VDOO 研究团队在多个供应商的设备中发现了 0day 漏洞。根据漏洞披露原则，这些漏洞首先向厂商披露，随后会逐步公开。
我们发现来自 Axis 的摄像头是最容易受到攻击的设备之一。我们团队在 Axis 安全摄像头中发现了一个关键漏洞链。攻击者在获得 ip
地址后利用这些漏洞能够远程控制这些摄像头（通过LAN 或者 互联网）。总的来说，VDOO 向 Axis 安全团队公开了 7 个漏洞。
这些漏洞的 CVE编号分别是： [CVE-2018-10658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10658),
[CVE-2018-10659](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10659),
[CVE-2018-10660](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10660),
[CVE-2018-10661](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10661),
[CVE-2018-10662](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10662),
[CVE-2018-10663](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10663) 以及
[CVE-2018-10664](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10664)。
将报告中 3 个漏洞结合，未授权用户只要能够访问到登录页面，就能够完全控制这些受影响的摄像头。攻击者可以执行的操作有：
  * 访问摄像头视频流
  * 冻结摄像头视频流
  * 控制摄像头 – 将镜头移动到需要的位置，开启/关闭 运动检测
  * 将此摄像头纳入僵尸网络中
  * 替换摄像头的软件
  * 使用摄像头作为网络的渗透点（进行横向移动）
  * 渲染无用的摄像头
  * 使用摄像头执行其他恶意的任务（如 DDOS 攻击，挖矿等）
390
多个型号的摄像头受到这些漏洞影响。受影响设备清单在[这里](https://www.axis.com/files/sales/ACV-128401_Affected_Product_List.pdf)可以找到。Axis
使用 AC-128401 来标识我们发现的这些漏洞。
据我们所知，这些漏洞还没有被在野利用。因此，也就没有对 Axis 用户造成任何具体的隐私侵犯或安全威胁。
我们强烈推荐没有更新固件 Axis 用户立即更新固件或通过其他方法减低风险。请参阅下面
[FAQ](https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/#FAQ) 部分的说明。
我们也推荐其他摄像头供应商遵循文末我们的[推荐](https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/#Recommendation)来避免和缓和类似的漏洞。
## 关于 VDOO
VDOO 是一个家致力于改变无保护联网设备现状的技术驱动公司。VDOO
正在构建一系列产品，以支持制造商在开发阶段将安全性嵌入到他们的联网设备中，并支持开发后的安全。
除了开发产品和服务外，VDOO 还为联网设备广泛研究投入大量的精力。安全摄像头是本研究的一个重点领域。
VDOO 研究目标是提供知识和工具来降低风险，同时激励设备制造商在他们的产品中实现正确的安全性。我们在 VDOO
认为，适当地实现安全要点将极大地减少设备漏洞被利用的机会。
这是我们在安防领域的第二份报告。
第一份关于 Foscan 摄像头的报告，发布在[这里](https://blog.vdoo.com/2018/06/06/vdoo-has-found-major-vulnerabilities-in-foscam-cameras/)。有关我们所采用的研究方法的更多细节，在[这里](https://blog.vdoo.com/2018/06/06/behind-the-research-glass-an-insight-into-our-approach/)可以找到。
## 技术概要
摄像头运行的是 Linux 系统，中间件采用了 **Apache httpd** ，Axis 开发了专有模块。web 服务器根目录的文件访问由 Axis
自定义的授权代码控制，这段授权代码在模块 **mod_authz_axisgroupfile.so** 中。通过使用专有模块 **mod_trax.so**
,web 服务器将某些请求转发给其他进程，这些请求使用 Apache 配置文件中的特殊指令（如 **TransferMine** ）来处理。例如，以
**.shtm** 、 **.shtml** 、 **.srv** 为后缀的文件请求会转发给 /bin/ **ssid** 进程。 **ssid** 进程以
root 权限运行，处理 **.src** 的文件与 **.shtm** 和 **.shtml** 的请求不同，只有已授权的用户才能请求 **.srv**
文件。系统的一些守护进程通信是通过使用 [dbus](https://www.freedesktop.org/wiki/Software/dbus/)
进程间通信机制来实现的。此外，摄像头中有一个专用系统来管理内部参数。进程 /bin/ **parhand**
（参数处理程序）负责存储、获取、更新参数。例如，当用户通过 web 界面设置一个参数是，相关的 CGI 脚本（param.cgi）将 set-parameter 请求转发给 **parhand** 进程，该进程验证访问权限，并将参数的值存储在相应的配置文件中。一些参数以 shell
变量赋值的格式保存在配置文件末尾，然后在一些服务的启动脚本中导入（执行）。另一个有趣的进程是 /usr/sbin/
**policykit_parhand** ，它提供了policykitparhand dbus-interface，还包括有设置 **parhand**
-parameters 值的函数。  
攻击者以特殊顺序利用最新发现的 7 个漏洞中的 3 个能够获取到 root 权限的 shell。
攻击流程如下：
  * 第一步：攻击者使用 **授权绕过漏洞（CVE-2018-10661）** 。利用这个漏洞攻击者可以发送未授权 HTTP 请求·到 /bin/ **ssid** 中的 **.srv** 功能（处理 .srv 请求）。在正常情况下，只有授权的用户才能访问该功能。
  * 第二步：攻击者使用一个不受限制（ **CVE-2018-10662** ）的接口向设备总线发送任意 dbus 消息。这个接口可从 /bin/ **ssid** 的 **.srv** 中获得。由于 /bin/ **ssid** 以 root 权限运行，这些已授权的 dbus 消息将调用系统 dbus-services 接口（否则会受到严格的授权策略的约束）。攻击者选择发送 dbus 消息到这一类的 dbus-services 接口，例如 **PoclicyKitParhand** 。它提供一个可以修改 **parhand** 参数的函数。现在攻击者具备了控制设备的 **parhand** 的参数值的能力了（见下一个漏洞）。
  * 第三步：利用命令执行漏洞（ **CVE-2018-10660** ）。一些参数以 shell 变量(“Shell-Mounted”)赋值的格式保存在配置文件末尾，然后在一些服务的启动脚本中以 root 权限执行。正是由于第二步，攻击者才可以发送未授权的请求来设置参数 **parhand** 的值。通过这样做，攻击者使用带有特殊字符的参数值触发命令注入漏洞，并 root 权限执行命令。
## 技术深究
本节提供了整个攻击流程中的每个漏洞的细节。
###  CVE-2018-10661 —— 认证旁路漏洞
此漏洞允许攻击者发送未通过身份验证的请求到 /bin/ **ssid** 的 **.srv** 功能来绕过 web 服务器的授权机制，而无需提供用户凭证。
漏洞出现在供应商编写的 Apache **httpd** 授权模块 **mod_authz_axisgroupfile.so** 。
正如上文提到的，摄像头使用的是 Apache httpd 服务器，以及访问 web 根目录以内的文件需要得到
**mod_authz_axisgroupfile.so** 授权模块授权。
文件根目录下只有唯一一个 **.srv** 文件 **/sm/sm.srv**
(相对路径)。授权代码用于验证经过身份验证的用户是否有足够的权限才能通过。在获得授权后，web 服务器被配置为使用特定程序处理以 **.srv** 拓展（
**.srv 处理代码** ）结束的路径请求。
问题总结，在发送请求时，如果后面接上反斜杠并以 **.srv** 后缀(例如 
)，那么授权程序会认为是向 index.html 发送的标准请求，因此获得授权许可。而请求也会被视为对 **.srv** 路径的合法请求，因此会被
**.srv** 处理程序同时处理。
这是由于 web 服务器的一个特性，web 服务器处理跟随在实际的文件名后面的路径字符串（称为
PATH_INFO）。