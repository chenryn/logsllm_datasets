### Optimized Text

#### Equation Analysis
For equation (3):
\[ p_{ki}^{B_0(f_i)} \cdot g_{si}^{f_i} \cdot g_b \]

For equation (4):
\[ g_{J(m^*)} = g_{J(m^*)} \]

Note that:
\[ \prod_{u=1}^k \sum_{j=1}^2 m_j^* = g_{F(m^*)} \]
and
\[ \sum_{i=1}^k x_i m_i^* = \mu_k \]
Also, since \( z_1 \in G_q \):
\[ \left( p_{ki}^{B_0(f_i)} z_1^{r'} \right) = p_{ki}^{B_0(f_i)} \]

From equation (4), we can see that:
\[ S^* = S_1^* \cdot \left( S_2^* \right)^{-J(m^*)} \cdot \left( g_a \right)^{s_i f_i} \]

Therefore, B can output:
\[ A = \left( S_1^* \left( S_2^* \right)^{-J(m^*) - s_i f_i} \right) \]
as the solution to the CDH problem.

#### Probability Analysis
Following the probability analysis of the Waters signature, the probability of \( F(m) \neq 0 \mod N \) during signing oracle queries is:
\[ \frac{8(k+1)q_s}{N} \]

The probability of not asking \( pk_{\lambda} \) in the corruption oracle is:
\[ 1 - \frac{q_c}{n} \]

The probability of \( f_{\lambda} = 1 \) in the output phase is:
\[ \frac{n^*}{n} \]

Therefore, B solves the CDH problem with probability:
\[ \epsilon \geq \frac{1}{d} \cdot \frac{8(k+1)q_s n^*}{N} \cdot \left( 1 - \frac{q_c}{n} \right) \]
where \( q_s \), \( q_c \), and \( n \) are the number of SO, CO, and JO queries, respectively.

### Theorem 2
**Theorem 2.** The threshold ring signature scheme is anonymous against full key exposure if the subgroup hiding assumption holds.

**Proof.**
- **Setup:** The simulator B is given the subgroup decision problem instance \((N, G, G_T, \hat{e}, g, h)\). B is asked to determine whether \( h \in G \) or \( h \in G_q \). B randomly picks generators \( u, u_1, \ldots, u_k, B_0 \in G \) and \( \alpha \in Z_N \). B sets:
  \[ h_2 = h^{\alpha} \]
  Finally, B randomly chooses a collision-resistant hash function \( H: N \times G^* \times \{0, 1\}^* \to \{0, 1\}^k \). Then B gives the public parameters:
  \[ (N, G, G_T, \hat{e}, g_1, g_2, B_0, h_1, h_2, u, u_1, \ldots, u_k, H) \]
  to the adversary A.
  
- **Key Generation:** For \( i = 1, \ldots, n \), B picks random \( s_i \in Z_N \) and sets:
  \[ pk_i = g_1^{s_i}, \quad sk_i = g_2^{s_i} \]
  B stores the set of public keys and secret keys \(\{pk_i, sk_i\}_{i=1}^n\).

- **Oracle Simulation:**
  - **JO:** On the i-th query, B returns \( pk_i \).
  - **CO(pk_i):** B returns \( g_2^{s_i} \).
  - **SO(n, d, Y, V, M):** B answers by running the Sign algorithm honestly.

- **Challenge:** At some point, A outputs a message \( M^* \), a set \( Y^* \) of public keys, and a threshold \( d^* \). B picks a random subset \( V^* \subseteq Y^* \) such that \( |V^*| = d^* \) and \( V^* \) is not contained in any query to CO. B uses the secret keys of \( V^* \) to run the Sign algorithm to obtain the signature \( \sigma^* \) and gives it to A.

- **Output:** If A can correctly guess the index \( \pi \), then B outputs \( h \in G_q \). Otherwise, B outputs \( h \in G \).

- **Analysis:** Suppose the challenge signature is \((S_1^*, \{C_i^*\}_{i=1}^{n^*})\). If \( h_1 \) is a generator of \( G \), there exist \( x_i, \tilde{x}_i \in Z_N \) such that \( C_i^* = h_1^{\tilde{x}_i} \). Then \( x_i, \tilde{x}_i \) correspond to the case \( f_i = 0 \) or \( f_i = 1 \), respectively. Denote by \( \pi_i \) the value of \( \pi \) when \( f_i \) is set to \( b \in \{0, 1\} \). Therefore:
  \[ \pi_i = \begin{cases}
  \left( \frac{pk_i}{B_0} \right)^{x_i} & \text{if } f_i = 0 \\
  \left( \frac{pk_i}{B_0} \right)^{\tilde{x}_i} & \text{if } f_i = 1
  \end{cases} \]

  Hence, \(\{C_i^*, \pi_i\}_{i=1}^{n^*}\) has no information about the real signer if \( h \in G \).

  On the other hand, \( S_2^* \) is computed using random numbers only and does not have information about the real signer. Finally, \( S_1^* \) is determined by the verification equation:
  \[ \prod_{i=1}^{n^*} \hat{e}(S_2^*, u^{m_j}) \cdot \hat{e}(g_2, B_0^{d^*}) \cdot \hat{e}(S_1^*, g_1) = \hat{e}(C_i^*) \]
  Hence, it leaks no useful information about the set \( V^* \). Therefore, if A wins the game, B outputs \( h \in G_q \).

### Insider Security for Anonymity
From the above security proof of anonymity, we can see that the adversary cannot win the game even if it is given all user secret keys (which is known as the full key exposure attack [5]). According to the security model, the challenge signature \( \sigma^* \) is solely generated by the simulator and the adversary does not obtain any internal information during the generation of \( \sigma^* \).

However, our security model does not consider the insider security during the generation of threshold ring signatures. The adversary may use the information transferred between different signers to break the anonymity. In our construction, \( S_{1;i} \) and \( S_{2;i} \) are sent from user \( i \) to a central signer who runs step 1 and step 3 of the Sign algorithm. If any \( S_{1;i} \) and \( S_{2;i} \) are eavesdropped, or the (malicious) central signer releases the \( S_{1;i} \) and \( S_{2;i} \), then the anonymity of user \( i \) is lost. Therefore, our current security model for anonymity assumes that the communication channel between signers is secure, and all signers are trusted during the generation of the threshold ring signatures. However, our anonymity model still captures the case that a signer loses his secret key to the adversary before or after the generation of \( \sigma^* \). We just do not allow the adversary to actively participate in the generation of the threshold ring signature.

### Efficiency Analysis
When comparing our scheme with the 1-out-of-n SW ring signature scheme, the size of our signature is exactly the same as the SW scheme. In terms of computation cost, the overall signing process only increases by some elliptic curve addition operations. However, if measured per signer, each signer actually requires less computation compared to the SW scheme. The verification algorithm only requires one more exponentiation compared to the SW scheme.

### Conclusion
In this paper, we presented an efficient construction of a threshold ring signature without random oracles. Our scheme is a non-trivial extension of the Shacham-Waters (SW) signature [26]. Interestingly, we obtained the same signature size as the Shacham-Waters signature, while only a tiny computation cost is added. We note that our technique has been specifically customized to achieve a threshold ring signature in the standard model.

### References
[1] M. Abe, M. Ohkubo, and K. Suzuki. 1-out-of-n signatures from a variety of keys. In ASIACRYPT 2002, volume 2501 of Lecture Notes in Computer Science, pages 415-432. Springer, 2002.
...
[32] F. Zhang and K. Kim. ID-based blind signature and ring signature from pairings. In ASIACRYPT 2002, volume 2501 of Lecture Notes in Computer Science, pages 533-547. Springer, 2002.