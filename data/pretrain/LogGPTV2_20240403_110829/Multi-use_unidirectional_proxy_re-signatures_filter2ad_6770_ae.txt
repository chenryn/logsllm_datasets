j , X
˜s
j ).
(10)
Verify(1, m, σ(1), pki): accept σ(1) if e(σ(1), g) = e(H(m), Xi).
Verify(2, m, σ(2), pki): accept σ(2) = (σ0, σ1, σ2, σ3) w.r.t.
pki = (Xi, Yi) if the following relations hold.
e(σ0, g) = e(σ1, H(m))
e(σ2, Xi) = e(g, σ1) · e(Yi, σ3)
The above scheme features a comparable eﬃciency to the
one of section 4 with signatures that are only slightly longer
at level 2. We were unfortunately unable to turn it into a
multi-hop system.
From a security standpoint, we also need fewer assump-
tions in the proofs since the 1-Flexible Diﬃe-Hellman as-
sumption suﬃces.
Theorem 6.1. The single-hop scheme is secure in the
chosen-key model under the 1-FlexDH assumption.
Proof. We can prove the result without resorting to the
modiﬁed CDH assumption and using only the 1-Flexible
Diﬃe-Hellman problem. Let (g, A = ga, B = gb) be a given
instance of the latter.
External security and limited proxy security. For these
notions, the proofs work out almost exactly as in the proof
of theorem 4.1. The only diﬀerence is in the generation of
users’ public keys pki = (Xi, Yi): the ﬁrst component Xi
is chosen as in the proof of theorem 4.1 whilst Yi is set as
∗
Yi = X yi
p. When
i
the adversary eventually outputs a forgery
for randomly drawn exponents yi
R← Z
(σ(cid:2)
0 , σ(cid:2)
1 , σ(cid:2)
2 , σ(cid:2)
3 ) = (H(m(cid:2))axt, X t, gt · Y r, X r),
to a honest user’s public key (X = Ax, Y = X y)
w.r.t.
(where x, y ∈ Z
∗
p are random exponents initially chosen by
y) and use
the simulator), one can compute (σ(cid:2)
it as a forgery against our scheme of section 4. Namely, if
and X = Ax for known values x, μ(cid:2) ∈ Z
∗
H(m(cid:2)) = Bμ(cid:2)
p,
the simulator obtains a triple
2 /σ(cid:2)
3
0 , σ(cid:2)
1 , σ(cid:2)
(C ab, C a, C) =
σ(cid:2)
0 , σ(cid:2)
1
(cid:12)
(cid:13)
,
μ(cid:2)
, (
σ(cid:2)
2
σ(cid:2)
3
y )xμ(cid:2)
which solves the problem instance.
Delegatee security. The proof is as in theorem 4.1 but the
adversary is given a single honest user’s public key.
Delegator security. From an adversary A with advantage
ε and making qs signing queries, we build an algorithm B
that ﬁnds gab with probability O(ε/qs).
System parameters: A is provided with public parame-
ters {G, GT , g,OH} where OH is the random oracle.
Key generation: the delegator’s public key is deﬁned as
pk0 = (X0, Y0) = (A, gy0) for a random y0
R← Z
∗
p.
Oracle queries:
• A’s random oracle queries and signing queries are
handled using Coron’s technique [15] as in the
proof of theorem 4.1 (we have thus again a degra-
dation factor of O(qs) in the reduction).
• Delegation queries: at any time A can supply a
public key pk = (X, Y ) (without having to reveal
the underlying secret) and ask oracle Odlg(.) to
generate a re-signature key on behalf of the del-
egator 0 using pk as the delegatee’s public key.
Since we have (X0 = A, Y0 = gy0) for a known
exponent y0, B picks r R← Z
(R1, R2) = (gry0, X r
∗
p and returns
0 · X
−1/y0 ).
(11)
If we deﬁne ˜r = r − x/(ay0), where x = logg(X),
we see that (R1, R2) has the correct shape since
1/a · Y
X
˜r
0 = X
1/a · Y r
0 · (gy0 )
− x
ay0 = gry0
− x
0 · A
0 = X r
−1/y0 . We observe
and X ˜r
that B can compute both parts of (11) without
knowing x = logg(X) or y = logg(Y ).
ay0 = X r
0 · X
After a number of queries, A comes up with a ﬁrst level
forgery that allows computing gab as in the proof of theorem
4.1. Unlike what happens in the latter, B does not need g1/a
at any time during the simulation and we only need the 1-
Flexible Diﬃe-Hellman assumption.
7. CAN ONE ACHIEVE CONSTANT-SIZE
MULTI-HOP SIGNATURES?
While highly desirable, unidirectional multi-hop PRS with
constant-size signatures turn out to be very hard to con-
struct. We give arguments explaining why they seem out of
reach with the current state of knowledge.
Trivially, if the Re-Sign algorithm increases the size of
signatures (even by a single bit), then we inevitably end
up with a linear size in the number of delegations.
Intu-
itively, multi-hop unidirectional systems therefore provide
either constant or linear sizes. It seems very unlikely that
one will be able to come up with logarithmic-size signatures
for instance. This apparently indicates that, regardless of
how many times signatures get translated, they should re-
main in the same signature space (which sounds hardly com-
patible with the pursued unidirectionality). Nonetheless,
not all unidirectional schemes do lengthen signatures upon
translation:
if implemented with appropriate parameters,
the ﬁrst proposal of [5] features the same signature size at
both levels (though signatures have diﬀerent shapes). How-
ever, it does not lend itself to a multi-use extension: to
translate a signature, the proxy uses a piece of it as an ex-
ponent to exponentiate the re-signature key, which hampers
length-preserving re-iterations of the process.
Up to now, all known unidirectional proxy re-cryptography
primitives make use of bilinear maps. Unfortunately, those
tools still fall short of reaching the aforementioned purpose.
Pairing-based schemes often let proxies replace a component
of the original ciphertext or signature by its pairing with the
proxy key. Multiple hops are impossible if we leave the re-
sulting pairing value inside the re-signature since no bilinear
map is deﬁned over the target group GT . To circumvent this
issue, our approach postpones the computation of the pair-
ing until the veriﬁcation by blinding its arguments and in-
troducing them into transformed signatures. Unfortunately,
this inevitably increases their length at each conversion.
We are not claiming that constant signature sizes are im-
possible to obtain. But it turns out that new ideas and
techniques should be developed to reach this goal.
8. GENERIC HARDNESS OF (cid:2)-FLEXDH IN
BILINEAR GROUPS
To provide more conﬁdence in the (cid:2)-FlexDH assumption
we give a lower bound on the computational complexity of
the (cid:2)-FlexDH problem for generic groups equipped with bi-
linear maps. In [23], Kunz-Jacques and Pointcheval deﬁne a
family of computational problems that enables to study vari-
ants of the CDH problem in the generic group model. Let A
be an adversary in this model and ϕ(X1, . . . , Xk, Y1, . . . , Y(cid:3))
be a multivariate polynomial whose coeﬃcients might de-
pend on A’s behavior. For values of x1, . . . , xk chosen by
the simulator, and knowing their encodings, the goal of A is
to compute the encodings of y1, . . . , y(cid:3) such that
ϕ(x1, . . . , xk, y1, . . . , y(cid:3)) = 0.
All elements manipulated by A are linear polynomials in
x1, . . . , xk and some new random elements introduced via
the group oracle. Let us denote Pi the polynomial corre-
sponding to yi (it is a random variable), Kunz-Jacques and
Pointcheval proved the following result.
Theorem 8.1
([23]). Let d = deg(ϕ) and Pm be an up-
per bound for the probability
Pr[ϕ(X1, . . . , Xk, P1(X1, . . . , Xk), . . . , P(cid:3)(X1, . . . , Xk)) = 0]
Then the probability that A wins after qG queries satisﬁes
Succ(qG) ≤ Pm +
(3qG + k + 2)
2p
+
d
p
.
The choice φ(X1, X2, Y1, . . . , Y(cid:3)+1) = Y(cid:3)+1 − X1X2Y1 . . . Y(cid:3)
implies the generic hardness of the (cid:2)-FlexDH problem.
It
is almost straightforward to prove that the Kunz-Jacques-
Pointcheval result also holds in generic bilinear groups where
the (cid:2)-FlexDH problem thus remains intractable. The details
are given in the full version of the paper.
Theorem 8.2. Let d = deg(ϕ) and Pm be an upper bound
for the probability
Pr[ϕ(X1, . . . , Xk, P1(X1, . . . , Xk), . . . , P(cid:3)(X1, . . . , Xk)) = 0]
Then the probability that A wins after qG oracle queries to
the group operations in G, GT to the bilinear map e satisﬁes
Succ(qG) ≤ Pm +
(3qG + k + 2)
p
+
d
p
.
9. CONCLUSIONS AND OPEN PROBLEMS
We described the ﬁrst multi-use unidirectional proxy re-
signatures, which solves a problem left open at CCS 2005.
Our random-oracle-based proposal also oﬀers eﬃciency im-
provements over existing solutions at the ﬁrst level. The
other scheme additionally happens to be the ﬁrst unidirec-
tional PRS in the standard model. We ﬁnally showed how
to construct single-hop schemes in the chosen-key model.
Two major open problems remain. First, it would be in-
teresting to see if multi-level unidirectional PRS have eﬃ-
cient realizations under more classical intractability assump-
tions. A perhaps more challenging task would be to ﬁnd out
implementations – if they exist at all – of such primitives
where the size of signatures and the veriﬁcation cost do not
grow linearly with the number of translations.
Acknowledgements
The authors thank Mark Manulis and the anonymous refer-
ees for their comments. The ﬁrst author acknowledges the
support of the Belgian National Fund for Scientiﬁc Research
(F.R.S.-F.N.R.S.). The second author is supported by the
European Commission through the IST Program under Con-
tract IST-2002-507932 ECRYPT and by the French Agence
Nationale de la Recherche through the PACE project.
10. REFERENCES
[1] M. Abe, S. Fehr. Perfect NIZK with Adaptive Soundness. In
TCC, pp. 118–136, 2007.
[2] J.-H. An, Y. Dodis, and T. Rabin. On the security of joint
signature and encryption. In EUROCRYPT, pp. 83–107, 2002.
[3] G. Ateniese, K. Fu, M. Green, S. Hohenberger. Improved
Proxy Re-Encryption Schemes with Applications to Secure
Distributed Storage. In NDSS, 2005.
[4] G. Ateniese, K. Fu, M. Green, S. Hohenberger. Improved
Proxy Re-Encryption Schemes with Applications to Secure
Distributed Storage. In ACM TISSEC , 9(1): pp. 1–30, 2006.
[5] G. Ateniese, S. Hohenberger. Proxy re-signatures: new
deﬁnitions, algorithms, and applications. In ACM CCS’05, pp.
310–319, 2005.
[6] M. Bellare, G. Neven. Multi-signatures in the plain public-Key
model and a general forking lemma. In ACM CCS, 2006.
[7] M. Bellare, A. Palacio. The knowledge-of-exponent
assumptions and 3-round zero-knowledge protocols. In
CRYPTO, pp. 273–289, 2004.
[8] M. Bellare, A. Palacio. Towards Plaintext-Aware Public-Key
Encryption Without Random Oracles. In ASIACRYPT, pp.
48–62, 2004.
[9] M. Bellare, P. Rogaway. Random oracles are practical: A
paradigm for designing eﬃcient protocols. In ACM CCS, pp.
62–73, 1993.
[10] M. Blaze, G. Bleumer, M. Strauss. Divertible Protocols and
Atomic Proxy Cryptography. In EUROCRYPT, pp. 127–144,
1998.
[11] A. Boldyreva. Eﬃcient Threshold Signature, Multisignature
and Blind Signature Schemes Based on the
Gap-Diﬃe-Hellman-group Signature Scheme. In PKC, pp.
31–46, 2003.
[12] D. Boneh, X. Boyen. Eﬃcient selective-ID secure identity
based encryption without random oracles. In EUROCRYPT,
pp. 223–238, 2004.
[13] D. Boneh, B. Lynn, H. Shacham. Short signatures from the
Weil pairing. In ASIACRYPT, pp. 514–532, 2002.
[14] R. Canetti, S. Hohenberger. Chosen-Ciphertext Secure Proxy
Re-Encryption. In ACM CCS, pp. 185–194, 2007.
[15] J.-S. Coron. On the exact security of Full Domain Hash. In
CRYPTO, pp. 229–235, 2000.
[16] I. Damg˚ard: Towards Practical Public Key Systems Secure
Against Chosen Ciphertext Attacks. In CRYPTO, pp.
445–456, 1991.
[17] A. Dent. The Hardness of the DHK Problem in the Generic
Group Model. Cryptology ePrint Archive: report 2006/156.
[18] Y. Dodis, A.-A. Ivan. Proxy Cryptography Revisited. In
NDSS’03, 2003.
[19] R. Granger, N. P. Smart. On Computing Products of Pairings.
Cryptology ePrint Archive: Report 2006/172, 2006.
[20] M. Green, G. Ateniese. Identity-Based Proxy Re-encryption. In
ACNS, pp. 288–306, 2007.
[21] S. Hohenberger. Advances in Signatures, Encryption, and
E-Cash from Bilinear Groups. Ph.D. Thesis, MIT, May 2006.
[22] S. Hohenberger, G. N. Rothblum, a. shelat,
V. Vaikuntanathan. Securely Obfuscating Re-encryption. In
TCC, pp. 233–252, 2007.
[23] S. Kunz-Jacques, D. Pointcheval. About the Security of
MTI/C0 and MQV. In SCN, pp. 156–172, 2006.
[24] B. Libert, D. Vergnaud. Multi-Use Unidirectional Proxy
Re-Signatures. In Computing Research Repository. Available
from http://arxiv.org/abs/0802.1113.
[25] S. Lu, R. Ostrovsky, A. Sahai, H. Shacham, B. Waters.
Sequential Aggregate Signatures and Multisignatures Without
Random Oracles. In EUROCRYPT, pp. 465–485, 2006.
[26] M. Mambo, K. Usuda, E. Okamoto. Proxy Signatures for
Delegating Signing Operation. In ACM CCS, pp. 48–57, 1996.
[27] M. Naor. On Cryptographic Assumptions and Challenges. In
CRYPTO, pp. 96–109, 2003.
[28] T. Ristenpart, S. Yilek. The Power of Proofs of Possession:
Securing Multiparty Signatures Against Rogue Key Attacks. In
EUROCRYPT, pp. 246–263, 2007.
[29] J. Shao, Z. Cao, L. Wang, X. Liang. Proxy Re-Signature
Schemes without Random Oracles. In INDOCRYPT, pp.
197–209, 2007.
[30] C. P. Schnorr. Eﬃcient identiﬁcation and signatures for smart
cards. In CRYPTO, pp. 239–252, 1989.
[31] B. Waters. Eﬃcient Identity-Based Encryption Without
Random Oracles. In EUROCRYPT, pp. 114–127, 2005.