values:  NotificationOff, 
NotificationLastIP, or 
NotificationStaticIP.
If this field is missing, 
NotificationOff is assumed.
kNotificationState
NotificationOff
NotificationStaticIP
Value
An optional IP address, in bracketed, 
dotted decimal format 
([xxx.xxx.xxx.xxx]). 
If this field is missing, 
NotificationState is 
interpreted as 
NotificationLastIP. 
The field is used only when 
NotificationState has the 
value NotificationStaticIP.
kNotificationStatic
IPValue
[1.2.3.4]
SeparateInboxState
An optional case-insensitive keyword 
indicating whether the user manages 
POP and IMAP mail using different 
inboxes. If provided, it must be set to 
one of these values:  OneInbox or 
DualInbox.
If this value is missing, the value 
OneInbox is assumed.
kSeparateInboxState
OneInbox
ShowPOP3InboxInIMAP
An optional case-insensitive keyword 
indicating whether POP messages are 
displayed in the user’s IMAP folder list. 
If provided, it must be set to one of 
these values:  ShowPOP3Inbox or 
HidePOP3Inbox.
If this field is missing, the value 
ShowPOP3Inbox is assumed.
kShowPOP3InboxInIMAP
HidePOP3Inbox
MailAttribute field
Description
Sample values
LL2354.book  Page 61  Monday, October 20, 2003  9:47 AM
62
Chapter 7    Working With Users and Groups
Checking a Server User’s Name, UID, or Password
You can use the following commands to check the name, UID, or password of a user in 
the server’s local directory.
Note:  These tasks only apply to the local directory on the server.
To see if a full name is already in use:
$ serversetup -verifyRealName "longname"
The command displays a 1 if the name is already in the directory, 0 if it isn’t.
To see if a short name is already in use:
$ serversetup -verifyName shortname
The command displays a 1 if the name is already in the directory, 0 if it isn’t.
To see if a UID is already in use:
$ serversetup -verifyUID userid
The command displays a 1 if the UID is already in the directory, 0 if it isn’t.
To test a user’s password:
$ serversetup -verifyNamePassword shortname password
The command displays a 1 if the password is good, 0 if it isn’t.
To view the names associated with a UID:
$ serversetup -getNamesByID userid
No response means UID not valid.
To generate the default UNIX short name for a user long name:
$ serversetup -getUNIXName "longname"
LL2354.book  Page 62  Monday, October 20, 2003  9:47 AM
Chapter 7    Working With Users and Groups
63
Creating a User’s Home Directory
Normally, you can create a user's home directory by clicking the Create Home Now 
button on the Homes pane of Workgroup Manager. You can also create home directory 
folders using the createhomedir tool. Otherwise, Mac OS X Server creates the user’s 
home directory when the user logs in for the first time.
You can use createhomedir to create
• A home directory for a particular user (-u option)
• Home directories for all users in a directory domain (-n or -l option)
• Home directories for all users in all domains in the directory search path (-a option)
For more information, type man createhomedir to view the man page.
In all cases, the home directories are created on the server where you run the tool.
To create a home directory for a particular user:
$ createhomedir [(-a|-l|-n domain)] -u userid
To create a home directory for users in the local domain:
$ createhomedir -l
To create a home directory for users in the local domain:
$ createhomedir [(-a|-l|-n domain)] -u userid
You can also create a user’s home directory using the serversetup tool.
To create a home directory for a particular user:
$ serversetup -createHomedir userid
The command displays a 1 if the user ID you specify doesn’t exist.
Mounting a User’s Home Directory
You can use the mnthome command to mount a user’s home directory. For more 
information, see the man page.
Creating a Group Folder
You can use the CreateGroupFolder command to set up group folders. For more 
information see the man page.
Checking a User’s Administrator Privileges
To see if a user is a server administrator:
$ serversetup -isAdministrator shortname
The command displays a 0 if the user has administrator privileges, 0 if the user doesn’t.
LL2354.book  Page 63  Monday, October 20, 2003  9:47 AM
LL2354.book  Page 64  Monday, October 20, 2003  9:47 AM
8
65
8 Working With File Services
Commands you can use to create share points and 
manage AFP, NFS, Windows (SMB), and FTP services in 
Mac OS X Server.
Share Points
You can use the sharing tool to list, create, and modify share points.
Listing Share Points
To list existing share points:
$ sharing -l
In the resulting list, there’s a section of properties similar to the following for each share 
point defined on the server. (1 = yes, true, or enabled. 0 = false, no, or disabled.)
name:           Share1
path:           /Volumes/100GB
        afp:    {
                name:   Share1
                shared: 1
                guest access:   0
                inherit perms:  0
        }
        ftp:    {
                name:   Share1
                shared: 1
                guest access:   1
        }
        smb:    {
                name:   Share1
                shared: 1
                guest access:   1
                inherit perms:  0
                oplocks:        0
                strict locking: 0
                directory mask: 493
                create mask:    420 }
LL2354.book  Page 65  Monday, October 20, 2003  9:47 AM
66
Chapter 8    Working With File Services
Creating a Share Point
To create a share point:
$ sharing -a path [-n customname] [-A afpname] [-F ftpname] 
[-S smbname] [-s shareflags] [-g guestflags] [-i inheritflags] 
[-c creationmask] [-d directorymask] [-o oplockflag] 
[-t strictlockingflag]
Examples
$ sharing -a /Volumes/100GB/Art
Creates a share point named Art, shared using AFP, FTP, and SMB, and using the name 
Art for all three types of clients.
$ sharing -a /Volumes/100GB/Windows\ Docs -n WinDocs -S Documents -s 
001 -o 1
Parameter
Description
path
The full path to the directory you want to share.
customname
The name of the share point. If you don’t specify this custom name, 
it’s set to the name of the directory, the last name in path.
afpname
The share point name shown to and used by AFP clients. This name 
is separate from the share point name.
ftpname
The share point name shown to and used by FTP clients.
smbname
The share point name shown to and used by SMB clients.
shareflags
A three-digit binary number indicating which protocols are used to 
share the directory. The digits represent, from left to right, AFP, FTP, 
and SMB. 1=shared, 0=not shared.
guestflags
A group of three flags indicating which protocols allow guest 
access. The flags are written as a three-digit binary number with 
the digits representing, from left to right, AFP, FTP, and SMB. 
1=guests allowed, 0=guests not allowed.
inheritflags
A group of two flags indicating whether new items in AFP or SMB 
share points inherit the ownership and access permissions of the 
parent folder. The flags are written as a two-digit binary number 
with the digits representing, from left to right, AFP and SMB. 
1=inherit, 0=don’t inherit.
creationmask
The SMB creation mask. Default=0644.
directorymask
The SMB directory mask. Default=0755.
oplockflag
Specifies whether opportunistic locking is allowed for an SMB 
share point. 1=enable oplocks, 0=disable oplocks. For more 
information on oplocks, see the file services administration guide.
strictlockingflag
Specifies whether strict locking is used on an SMB share point. 
1=enable strict locking, 0=disable. For more information on strict 
locking, see the file services administration guide.
LL2354.book  Page 66  Monday, October 20, 2003  9:47 AM
Chapter 8    Working With File Services
67
Shares the directory named Windows Docs on the disk 100GB. The share point is 
named WinDocs for server management purposes, but SMB users see it as Documents. 
It’s shared using only the SMB protocol with oplocks enabled.
Modifying a Share Point
To change share point settings:
$ sharing -e sharepointname [-n customname] [-A afpname] [-F ftpname] 
[-S smbname] [-s shareflags] [-g guestflags] [-i inheritflags] 
[-c creationmask] [-d directorymask] [-o oplockflag] 
[-t strictlockingflag]
Disabling a Share Point
To disable a share point:
$ sharing -r sharepointname
AFP Service
Starting and Stopping AFP Service
To start AFP service:
$ sudo serveradmin start afp
To stop AFP service:
$ sudo serveradmin stop afp
Checking AFP Service Status
To see if AFP service is running:
$ sudo serveradmin status afp
To see complete AFP status:
$ sudo serveradmin fullstatus afp
Viewing AFP Settings
To list all AFP service settings:
$ sudo serveradmin settings afp
Parameter
Description
sharepointname
The current name of the share point.
Other parameters
See the parameter descriptions under “Creating a Share Point” on 
page 66.
Parameter
Description
sharepointname
The current name of the share point.
LL2354.book  Page 67  Monday, October 20, 2003  9:47 AM
68
Chapter 8    Working With File Services
To list a particular setting:
$ sudo serveradmin settings afp:setting
To list a group of settings:
You can list a group of settings that have part of their names in common by typing 
only as much of the name as you want, stopping at a colon (:), and typing an asterisk 
(*) as a wildcard for the remaining parts of the name. For example,
$ sudo serveradmin settings afp:loggingAttributes:*
Changing AFP Settings
You can change AFP service settings using the serveradmin command.
To change a setting:
$ sudo serveradmin settings afp:setting = value
To change several settings:
$ sudo serveradmin settings
afp:setting = value
afp:setting = value
afp:setting = value
[...]
Control-D
List of AFP Settings
The following table lists AFP settings as they appear using serveradmin.
Parameter
Description
setting
Any of the AFP service settings. For a complete list of settings, type
serveradmin settings afp
or see “List of AFP Settings” on this page.
Parameter
Description
setting
An AFP service setting. To see a list of available settings, type
$ sudo serveradmin settings afp
or see “List of AFP Settings” on this page.
value
An appropriate value for the setting. Enclose text strings in double 
quotes (for example, "text string").
Parameter (afp:)
Description
activityLog
Turn activity logging on or off.
Default = no
activityLogPath
Location of the activity log file.
Default = /Library/Logs/AppleFileService/
AppleFileServiceAccess.log
LL2354.book  Page 68  Monday, October 20, 2003  9:47 AM
Chapter 8    Working With File Services
69
activityLogSize
Rollover size (in kilobytes) for the activity log. Only used if 
activityLogTime isn’t specified.
Default = 1000
activityLogTime
Rollover time (in days) for the activity log.
Default = 7
admin31GetsSp
Set to true to force administrative users on Mac OS X to see 
share points instead of all volumes.
Default = yes
adminGetsSp
Set to true to force administrative users on Mac OS 9 to see 
share points instead of all volumes. Default = no
afpServerEncoding
Encoding used with Mac OS 9 clients.
Default = 0
afpTCPPort
TCP port used by AFP on server.
Default = 548
allowRootLogin
Allow user to log in as root.
Default = no
attemptAdminAuth
Allow an administrator user to masquerade as another user.
Default = yes
authenticationMode
Authentication mode. Can be:
standard
kerberos
standard_and_kerberos
Default = "standard_and_kerberos"
autoRestart
Whether the AFP service should restart automatically when 
abnormally terminated.
Default = yes
clientSleepOnOff
Allow client computers to sleep.
Default = yes
clientSleepTime
Time (in hours) that clients are allowed to sleep.
Default = 24
createHomeDir
Create home directories.
Default = yes
errorLogPath
The location of the error log.
Default = /Library/Logs/AppleFileService/
AppleFileServiceError.log
errorLogSize
Rollover size (in kilobytes) for the error log. Only used if 
errorLogTime isn’t specified.
Default = 1000
errorLogTime
Rollover time (in days) for the error log.
Default = 0
Parameter (afp:)
Description
LL2354.book  Page 69  Monday, October 20, 2003  9:47 AM
70
Chapter 8    Working With File Services
guestAccess
Allow guest users access to the server.
Default = yes
idleDisconnectFlag:
  adminUsers
Enforce idle disconnect for administrative users.
Default = yes
idleDisconnectFlag:
  guestUsers
Enforce idle disconnect for guest users.
Default = yes
idleDisconnectFlag:
  registeredUsers
Enforce idle disconnect for registered users.
Default = yes
idleDisconnectFlag:
  usersWithOpenFiles
Enforce idle disconnect for users with open files.
Default = yes
idleDisconnectMsg
The idle disconnect message.
Default = ""
idleDisconnectOnOff
Enable idle disconnect.
Default = no
idleDisconnectTime
Idle time (in minutes) allowed before disconnect.
Default = 10
kerberosPrincipal
Kerberos server principal name.
Default = "afpserver"
loggingAttributes:
  logCreateDir
Record directory creations in the activity log.
Default = yes
loggingAttributes:
  logCreateFile
Record file creations in the activity log.
Default = yes
loggingAttributes:
  logDelete
Record file deletions in the activity log.
Default = yes
loggingAttributes:
  logLogin
Record user logins in the activity log.
Default = yes
loggingAttributes:
  logLogout
Log user logouts in the activity log.
Default = yes
loggingAttributes:
  logOpenFork
Log file opens in the activity log.
Default = yes
loginGreeting
The login greeting message.
Default = ""
loginGreetingTime
The last time the login greeting was set or updated.
maxConnections
Maximum number of simultaneous user sessions allowed by 
the server.
Default = -1 (unlimited)
maxGuests
Maximum number of simultaneous guest users allowed.
Default = -1 (unlimited)
Parameter (afp:)
Description
LL2354.book  Page 70  Monday, October 20, 2003  9:47 AM
Chapter 8    Working With File Services
71
maxThreads
Maximum number of AFP threads. (Must be specified at 
startup.)
Default = 40
noNetworkUsers
Indication to client that all users are users on the server.
Default = no
permissionsModel
How permissions are enforced. Can be set to:
classic_permissions
unix_with_classic_admin_permissions
unix_permissions
Default = "classic_permissions"
recon1SrvrKeyTTLHrs
Time-to-live (in hours) for the server key used to generate 
reconnect tokens.
Default = 168
recon1TokenTTLMins
Time-to-live (in minutes) for a reconnect token.
Default = 10080
reconnectFlag
Allow reconnect options. Can be set to:
none
all
no_admin_kills
Default = "all"
reconnectTTLInMin
Time-to-live (in minutes) for a disconnected session waiting 
reconnection.
Default = 1440
registerAppleTalk
Advertise the server using AppleTalk NBP.
Default = yes
registerNSL
Advertise the server using Rendezvous.
Default = yes
sendGreetingOnce
Send the login greeting only once.
Default = no
shutdownThreshold
Don’t modify. Internal use only.
specialAdminPrivs
Grant administrative users super user read/write privileges.
Default = no
SSHTunnel
Allow SSH tunneling.
Default = yes
TCPQuantum
TCP message quantum.
Default = 262144
tickleTime
Frequency of tickles sent to client.
Default = 30
updateHomeDirQuota
Enforce quotas on the users volume.
Default = yes