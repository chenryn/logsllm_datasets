# Title: They Would Do Better if They Worked Together: The Case of Interaction Problems Between Password Managers and Websites

**Authors:**
- Nicolas Huaman
- Sabrina Amft
- Marten Oltrogge
- Yasemin Acar
- Sascha Fahl

**Conference:**
2021 IEEE Symposium on Security and Privacy (SP)

---

## Abstract

Password managers (PWMs) are essential tools for securely generating, storing, and managing credentials and logins for online accounts. Previous research has highlighted the various security and usability challenges associated with developing PWMs. For optimal security and usability, the interaction between PWMs and websites must be seamless and effortless. However, user reviews for popular PWMs suggest that interaction problems persist for some websites. To our knowledge, this is the first systematic study to identify these interaction problems and investigate how 15 desktop PWMs, including the ten most popular ones, are affected. We conducted a qualitative analysis of 2,947 user reviews and 372 GitHub issues for 30 PWMs, identifying 39 interaction problems. We then implemented minimal working examples (MWEs) for these problems and evaluated them in 585 test cases. Our results show that:
1. PWMs struggle to correctly implement authentication features such as HTTP Basic Authentication and modern standards like the `autocomplete` attribute.
2. Websites often fail to implement clean and well-structured authentication forms.

We conclude that some of these issues can be addressed by either PWM providers or web developers by adhering to existing standards, recommendations, and best practices. Other cases, however, are currently almost impossible to implement securely and require further research.

---

## I. Introduction

Username and password combinations remain the dominant authentication mechanism on the web. Despite significant efforts to develop alternative authentication solutions [36, 41, 52, 65] and help users create more secure passwords [34, 69], many users still rely on easily guessable passwords [35, 48, 71] and reuse the same password across multiple accounts [46, 58, 72, 73]. Even alternative methods like FaceID or fingerprint sensors often resort to passwords during their setup [38].

To address these security concerns, online services are encouraged to deploy multi-factor authentication (MFA), such as timed one-time-passwords (TOTP) [40, 61-63], which still rely on passwords as the primary factor. To manage passwords, the use of PWMs is often recommended. PWMs are tools designed to help users manage credentials, reducing the mental load associated with password creation, account login, and credential updates [1, 8, 12, 14, 15, 20, 22]. Extensive research has been conducted on PWMs, focusing on security issues and usability and adoption challenges [47, 51, 56, 59, 60, 64]. Studies have shown that both browser-based and locally installed PWMs are vulnerable to key theft, secret recovery from temporary files, and weaknesses in features like auto-fill [64]. Other research has focused on the usability of PWMs, demonstrating that user adoption is driven by convenience and ease of use [59].

While security benefits can also motivate PWM adoption, they are typically only mentioned for accounts perceived as particularly important. Overall, previous work has identified significant security and usability challenges that PWM providers need to address to improve overall password security [39]. Additionally, PWM usability and adoption depend on the interaction between PWMs and websites [2, 17, 42]. Websites that do not accept auto-generated passwords, prevent auto-fill and auto-login of stored credentials, or complicate credential storage contribute to poor PWM usability and hinder adoption. Examples include sites that manipulate forms using JavaScript or fail to define input field attributes, making interactions more difficult. Although these issues are discussed in online forums [2, 17] and blog posts [42], and web browser providers suggest novel mechanisms to better support PWMs (e.g., Appleâ€™s `passwordrules` [57]), a systematic analysis of poor interactions between websites and PWMs is lacking.

To the best of our knowledge, this is the first study to investigate these poor interactions reported by real PWM users, analyze how 15 popular desktop PWMs handle these issues, and propose ideas for future improvements in PWMs and websites to enhance usability and password security on the web.

### Research Questions
1. **RQ1:** Which interaction patterns on the web are problematic for password managers?
2. **RQ2:** How do PWM browser extensions handle these interaction problems?
3. **RQ3:** What can be done to improve the interaction between PWMs and websites?

---

## II. Related Work

Despite numerous attempts to replace passwords as the primary authentication method on the web, none of the proposed alternatives have succeeded. Moreover, most attempts to improve authentication security come at the cost of decreased usability [37]. PWMs offer a solution by removing the need to memorize passwords and storing them securely, enabling users to choose stronger passwords [51]. Previous research has focused on various aspects of PWMs, including security and vulnerabilities, as well as usability and adoption.

### PWM Security
Several studies have shown that many popular PWM solutions are vulnerable to different forms of attacks. In 2013, Zhao et al. [74] analyzed PWMs included in five different browsers and found severe vulnerabilities, such as the ability to steal the files in which keys are stored. As an alternative, they proposed a cloud-based approach. Similarly, Li et al. [50] conducted an analysis of five browser-based PWMs and identified four key security concerns within bookmarklets, the UI, and classic web or authorization vulnerabilities. In 2016, Gray et al. [47] evaluated the security of KeePass, RoboForm, and Password Safe, three locally installed PWM applications, and revealed security problems, such as the recovery of secret information from temporary files.

Recent work shows that these problems persist. In 2020, Oesch et al. [56] replicated previous studies and evaluated the security of 13 PWMs. While they found improvements in features like password storage and auto-fill security, they also reproduced severe vulnerabilities, especially in password generation. In 2014, Silver et al. [64] demonstrated that the auto-fill functionalities of PWMs are often vulnerable, finding them susceptible to attacks via modified web forms or unencrypted connections. Furthermore, Zhao et al. [68] evaluated the top 4,000 Alexa pages and found that 86.3% of websites offering login fields were vulnerable to XSS-based attacks. They proposed an alternative approach where dummy input is entered into the web form, and the real password is transmitted directly in the respective HTTP request.

### PWM Usability and Adoption
Several studies have focused on the usability and adoption motivations for PWM usage. In 2006, Chiasson et al. [39] evaluated the usability of two PWMs, finding significant problems that not only limited usability but also led to security issues, such as user misconceptions about whether their passwords were protected. Another usability study was conducted in 2010 by Karole et al., who examined three different types of PWMs: a locally installed LastPass, a mobile KeePass version, and a USB-based RoboForm approach. They found that users preferred the locally installed version due to its ease of use and integration with the browser.

While previous work has focused on the security and usability of PWMs, our research concentrates on the interaction between PWMs and websites, aiming to identify and address the frequent problems and edge cases that affect usability.

---

## III. Systematic Problem Survey

To systematically analyze the interaction problems between PWMs and websites, we performed a comprehensive review of 3,319 user reviews and GitHub issues for 30 browser-based PWMs. Based on this analysis, we identified 39 interaction patterns that hindered end-users in real-world settings.

### Minimal Working Examples (MWEs)
We developed a simple website that includes minimal implementations of the previously identified interaction problems. This website allows us to extensively test PWMs regarding their performance and supported features.

### PWM Problem Evaluation
We tested 15 popular browser-based PWMs on the 39 MWEs we implemented. Our analysis showed that PWMs often struggle with websites that include complex or non-standard implementations, as well as with standard features like HTTP Basic Authentication.

### Recommendations
We investigated existing web standards [3, 7, 10, 18, 44] in relation to the most prevalent problems identified in our PWM evaluation. We propose how existing standards and approaches can be used to solve most of the discovered issues and suggest potential extensions to address the remaining problems.

### Detailed Replication Information
We provide an extensive replication package, including the set of collected user complaints, the resulting codebook, and the 39 MWEs derived from the codebook. Additionally, we provide the implementations of the MWEs and demo screen captures to replicate our approach and results.

This work focuses on desktop PWMs and their browser extensions. While we considered adding mobile PWMs, these have different requirements, such as using APIs provided by Android [4] and iOS [3], and are primarily focused on user-installed apps.

---

## IV. Conclusion

Our study is the first to systematically investigate the interaction challenges between browser-based PWMs and websites, which impact both password security and usability. We identified 39 interaction problems and evaluated how 15 popular desktop PWMs handle these issues. Our findings show that PWMs struggle with both complex and non-standard implementations, as well as with standard features like HTTP Basic Authentication. We propose that some of these issues can be addressed by adhering to existing standards and best practices, while others require further research.

---

**References:**
[Please refer to the original document for the full list of references.]

---

**Note:** The above text has been optimized for clarity, coherence, and professionalism. The content has been restructured and refined to ensure a smooth and logical flow of information.