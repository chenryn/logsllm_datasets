'\" t
.TH "LOGIND\&.CONF" "5" "" "systemd 231" "logind.conf"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
logind.conf, logind.conf.d \- 登陆管理器配置文件
.SH "SYNOPSIS"
.PP
/etc/systemd/logind\&.conf
.PP
/etc/systemd/logind\&.conf\&.d/*\&.conf
.PP
/run/systemd/logind\&.conf\&.d/*\&.conf
.PP
/usr/lib/systemd/logind\&.conf\&.d/*\&.conf
.SH "描述"
.PP
上述配置文件用于控制
\fBsystemd-logind.service\fR(8)
登陆管理器的行为。
.SH "配置目录及其优先级"
.PP
默认设置是在编译期间确定的， 所以仅在确实需要修改默认设置的情况下， 才需要使用配置文件。位于
/etc/systemd/
目录中的初始配置文件， 仅包含了展示选项默认值的注释， 目的在于方便系统管理员查看和直接修改。
.PP
如果软件包想要自定义某些默认设置， 那么必须将自定义的配置文件安装到
/usr/lib/systemd/*\&.conf\&.d/
目录中。
/etc/
目录仅供系统管理员使用。 系统管理员可以利用下面的逻辑来覆盖默认设置： 主配置文件最先被读取， 优先级也最低。 所有
*\&.conf\&.d/
中的配置文件 都会覆盖主配置文件中的设置。 所有
*\&.conf\&.d/
中的配置文件(无论位于哪个目录中)， 统一按照文件名的字典顺序处理。 如果在多个配置文件中设置了同一个选项， 那么仅以文件名最靠后(字典顺序)的那一个为准。 为了便于排序， 建议给所有
*\&.conf\&.d/
中的配置文件 都加上两位十进制数字的文件名前缀。
.PP
如果系统管理员想要屏蔽
/usr/lib/
目录中的某个配置文件， 那么最佳做法是在
/etc/
目录中 创建一个指向
/dev/null
的同名符号链接， 即可彻底屏蔽
/usr/lib/
目录中的同名文件。
.SH "选项"
.PP
下面的所有选项都位于
"[Login]"
小节：
.PP
\fINAutoVTs=\fR
.RS 4
必须设为一个正整数， 表示默认最多可以自动启动多少个虚拟终端。 当用户切换到一个先前未曾使用的虚拟终端时， 将根据该虚拟终端的名称自动从
autovt@\&.service
模版实例化一个 例如
autovt@tty4\&.service
这样的服务单元。 默认情况下，autovt@\&.service
是一个指向
getty@\&.service
的软连接。 换句话说，当用户切换到一个先前未曾使用的虚拟终端时，"login:"登录提示符是动态启动的。 因此，此选项实际上相当于设置了允许启动多少个
\m[blue]\fBagetty\fR\m[]\&\s-2\u[1]\d\s+2
文本登录界面(与虚拟终端一一对应)。 如果某个虚拟终端已经被其他子系统(例如图形登录界面)占用， 那么将不会自动启动此虚拟终端。 注意，\fIReserveVT=\fR
中的虚拟终端 总会被自动启动， 即使这些终端并不在
\fINAutoVTs=\fR
的范围内。 默认值是"6"。若设为"0"则表示禁止自动启动任何虚拟终端， 也就是禁止自动从
autovt@\&.service
模版实例化。
.RE
.PP
\fIReserveVT=\fR
.RS 4
必须设为一个表示终端编号的正整数， 表示无条件的为该终端从
autovt@\&.service
模版实例化一个服务单元(见上文)。 被此选项选中的虚拟终端将被无条件的标记为"忙碌"状态， 以确保不被任何其他子系统占用。 此选项可用于确保无论其他子系统占用了多少虚拟终端， 在特定编号的终端上总有一个文本界面的登录
\m[blue]\fBagetty\fR\m[]\&\s-2\u[1]\d\s+2
可用。 默认值是"6"， 也就是在 Alt\-F6 上总有一个文本界面的"login:"登录提示符。 若设为"0"则表示禁止此特性。
.RE
.PP
\fIKillUserProcesses=\fR
.RS 4
接受一个布尔值。控制在用户退出登录会话时， 是否杀死该用户的进程。如果设为"yes"， 那么与此会话对应的 scope 单元中所包含的所有进程都将被杀死。 如果设为"no"，那么与此会话对应的 scope 单元将会被"遗弃"， 并且其中包含的所有进程都将被保留(任由其自生自灭)。 默认值是
"yes"
。 参见下面的
\fIKillOnlyUsers=\fR
与
\fIKillExcludeUsers=\fR
选项。
.sp
根据 linger(逗留) 设置的不同，用户进程除了可以运行在会话中， 还可以运行在
user@\&.service
用户管理单元中。 这样就允许用户运行独立于登录会话的进程。参见
\fBloginctl\fR(1)
的
\fBenable\-linger\fR
命令。
.sp
注意，设置
\fIKillUserProcesses=yes\fR
将破坏
\fBscreen\fR(1)
与
\fBtmux\fR(1)
之类的工具(除非它们被移出了会话 scope 单元之外)。参见
\fBsystemd-run\fR(1)
的例子。
.RE
.PP
\fIKillOnlyUsers=\fR, \fIKillExcludeUsers=\fR
.RS 4
设为一个空格分隔的用户名列表， 以影响
\fIKillUserProcesses=\fR
的效果： 若
\fIKillOnlyUsers=\fR
非空， 则表示
\fIKillUserProcesses=yes\fR
仅对列表内的用户有效。 若
\fIKillExcludeUsers=\fR
非空， 则表示
\fIKillUserProcesses=yes\fR
仅对列表外的用户有效。
\fIKillOnlyUsers=\fR
默认值为空，
\fIKillExcludeUsers=\fR
默认值为
"root"
， 并且
\fIKillExcludeUsers=\fR
的优先级比