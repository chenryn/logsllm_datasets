### Challenges in Parallelizing Secure Communication Protocols

Ensuring that two users can submit messages to different "islands" (processing nodes) and still communicate with perfect correctness, while leaking no information, is inherently difficult to parallelize. In our approach, we prioritize maintaining the highest possible privacy standards. Consequently, in our parallelized version of MCMix, we have relaxed our Quality of Service (QoS) guarantees. Specifically, in each round, a small, adjustable number of requests that would have been served by the algorithm in Figure 5 will fail, requiring affected users to resend their messages. The probability of this occurrence can be made arbitrarily small, but at the cost of performance, as detailed in the full version.

### Algorithmic Functionality and Parallelization

The core functionality of our protocols involves matching equal values in pairs and performing a swap action on these pairs. Our parallelizable technique leverages the fact that the values (dead drops) output by a hash function (modeled as a random oracle) are uniformly distributed. 

In our approach, requests are obliviously split between MPC islands based on the assumption that equal dead drop values are likely to be located at similar indexes in different arrays after sorting. For simplicity, consider the case of two islands:

1. **Sorting**: Requests in each island are sorted according to their dead drop values.
2. **Splitting**: One island collects the lower half of both islands' sorted requests, and the other island collects the upper half.
3. **Swapping**: A swap operation, identical to the one in the initial conversation protocol, is performed.
4. **Resorting**: Requests are then sorted according to their wire IDs.
5. **Merging**: Each island merges the array of requests it received with the one it kept, based on their wire IDs.

The final order of requests corresponds to the order in which they were initially received. Requests with the same dead drop that end up on the same island during the swap phase represent successful instances of the conversation protocol.

### Performance Analysis of the Parallelized Conversation Protocol

Given limited access to physical machines, we ran the parallelized Conversation protocol on a single island for various user numbers and extrapolated the results to predict performance in a multi-island setting. We measured the running time of the MPC and added the communication time, assuming commodity 100 Mbps connections between the islands. In the parallelized setting, each party sends and receives \( \frac{n}{m} \cdot \frac{m-1}{m} \) elements to/from other parties, where \( n \) is the number of messages and \( m \) is the number of islands. We did not add overhead for symmetric encryption, as even a commodity laptop can handle 100 Mbps encryption and decryption rates.

From the results presented in Figure 10, deploying the system over two islands does not provide significant performance gains due to a constant overhead of approximately a factor of 2. However, using four or more islands significantly improves performance. With eight islands, the system can support an anonymity set of 500,000 users with a latency of 60 seconds. This trend is expected to continue with more than eight islands, enabling even larger anonymity sets.

### Acknowledgements

Alexopoulos, Kiayias, and Zacharias were supported by the Horizon 2020 PANORAMIX project (Grant Agreement No. 653497). Alexopoulos was also supported by the DFG as part of project S1 within the CRC 1119 CROSSING. Talviste was supported by the Estonian Research Council (Grant No. IUT27-1). The authors would like to thank Tim Grube and Chris Campbell for their comments on a previous version of this paper.

### References

[1] AJTAI, M., KOML ´OS, J., AND SZEMER ´EDI, E. An O(n log n) sorting network. In ACM STOC (1983), pp. 1–9.
...
[53] ZHANG, Y., STEELE, A., AND BLANTON, M. Picco: a general-purpose compiler for private distributed computation. In ACM CCS (2013), pp. 813–826.

---

This revised text aims to be more clear, coherent, and professional, with improved structure and flow.