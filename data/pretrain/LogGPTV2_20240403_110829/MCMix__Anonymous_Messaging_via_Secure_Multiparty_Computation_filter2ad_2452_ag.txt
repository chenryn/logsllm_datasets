where two users may submit their messages to different
islands and still expect to communicate with perfect cor-
rectness, while leaking no information at all, is hard to
be parallelized. In our approach, we choose to maintain
the strongest possible privacy standards. As a result, in
our parallelized version of MCMix, we relax our qual-
ity of service (qos) guarantees. That is, in each round,
an adjustable small number of requests that would have
been served when using the algorithm of Fig. 5, will fail
to do so, and affected users will have to resend their mes-
sages. The probability of this phenomenon can be made
arbitrarily small in the expense of performance, which is
shown in the full version.
As evident by the algorithmic representation of our
two protocols, the integral part of their function is match-
ing equal values in pairs and performing a swap action on
these pairs. Our parallelizable technique for performing
this action beneﬁts from the fact that the values in ques-
tion (dead drops) output by a hash function (modeled as
a random oracle) are uniformly distributed.
In our approach, requests are split obliviously between
MPC islands based on the fact that equal dead drop val-
ues are likely to be located at roughly the same indexes
of different arrays after sorting, considering these values
are uniformly distributed. In summary, and in the sim-
ple case of 2 islands, the procedure is as follows. As
a ﬁrst step, requests in each island are sorted according
to their dead drop values. Then, one island collects the
lower half of both islands’ sorted requests, and the sec-
ond island the upper half. A swap operation, identical to
the one of the initial conversation protocol, is performed
as a next step, followed by a sort according to the wire
IDs of the requests. Assuming the ﬁrst island assigns
strictly smaller wire ID values to the incoming requests,
1232    26th USENIX Security Symposium
USENIX Association
exactly the bottom /upper half of the requests held by
each island belongs to the ﬁrst/second one. These halves
are sent to their respective islands. Finally, each island
merges the array of requests it received, with the one it
kept, according to their wire IDs. The ﬁnal order of re-
quests corresponds to the order in which they were ini-
tially received, and the requests with the same dead drop
that found themselves on the same island during the swap
phase, represent successful instances of the conversation
protocol.
Performance of the parallelized Conversation protocol.
Considering the fact that we did not have access to a great
number of physical machines, in order to run the par-
allelized Conversation protocol with a variety of island
numbers, we ran the parallel algorithm on a single island
for different user numbers and then extrapolated to give
predictions for a real multi-island implementation. Ex-
cept from the running time of the MPC that we measured,
we also added the communication time calculated by as-
suming commodity 100 Mbps connections between the
islands. In the parallelised setting, in both inter-island
communication rounds, each party sends and receives
in total n/m· (m− 1)/m elements to/from other parties,
where n is the number of messages and m is the number
of islands. In our benchmarks, we have not added any
overhead for symmetric encryption between the islands,
as even a commodity laptop can keep up with encrypt-
ing and decrypting data at a rate of 100 Mbps. Thus, we
expect that the results presented in Fig. 10 realistically
highlight the scalability of the system. From the results
1 island
2 islands
4 islands
8 islands
103
102
]
s
c
e
s
[
e
m
i
t
g
n
i
n
n
u
R
lands does not provide any performance gain. This is due
to a constant overhead, roughly of a factor of 2, that fol-
lows from the description of the parallelized algorithm
(cf. full version for details). However, when using 4 or
more islands, our parallelization technique gets very re-
warding. In the case of 8 islands, the system can support
an anonymity set of 500,000 users with a latency of 60
seconds. We expect this trend to continue for even more
than 8 islands, thus enabling even larger anonymity sets.
Acknowledgements
Alexopoulos, Kiayias and Zacharias were supported by
the Horizon 2020 PANORAMIX project (Grant Agree-
ment No. 653497). Alexopoulos was also supported
by the DFG as part of project S1 within the CRC 1119
CROSSING. Talviste was supported by the Estonian Re-
search Council (Grant No. IUT27-1). The authors would
like to thank Tim Grube and Chris Campbell for their
comments on a previous version of this paper.
References
[1] AJTAI, M., KOML ´OS, J., AND SZEMER ´EDI, E. An O(n log n)
sorting network. In ACM STOC (1983), pp. 1–9.
[2] AKINYELE, J. A., GARMAN, C., AND HOHENBERGER, S. Au-
tomating fast and secure translations from type-I to type-III pair-
ing schemes. In ACM CCS (2015), pp. 1370–1381.
[3] ANGEL, S., AND SETTY, S. Unobservable communication over
fully untrusted infrastructure. In OSDI (2016), pp. 551–569.
[4] ARAKI, T., BARAK, A., FURUKAWA, J., LICHTER, T., LIN-
DELL, Y., NOF, A., OHARA, K., WATZMAN, A., AND WEIN-
STEIN, O. Optimized Honest-Majority MPC for Malicious Ad-
versaries – Breaking the 1 Billion-Gate Per Second Barrier. In
IEEE Symposium on Security and Privacy (2017), pp. 843–862.
[5] ARAKI, T., FURUKAWA, J., LINDELL, Y., NOF, A., AND
OHARA, K. High-throughput semi-honest secure three-party
In ACM CCS (2016),
computation with an honest majority.
pp. 805–817.
[6] BATCHER, K. E. Sorting networks and their applications.
In
Proceedings of the April 30–May 2, 1968, spring joint computer
conference (1968), ACM, pp. 307–314.
[7] BEAVER, D. Commodity-based cryptography.
(1997), pp. 446–455.
In ACM STOC
[8] BEIMEL, A., GABIZON, A., ISHAI, Y., AND KUSHILEVITZ, E.
Distribution design. In ITCS (2016), pp. 81–92.
105
No. of users
106
[9] BELLARE, M., AND YEE, B. S. Forward-security in private-key
cryptography. In CT-RSA (2003), pp. 1–18.
Figure 10: Running time in secs of the Conversation pro-
tocol implemented in 1,2,4,8 island setting. The bench-
marks were run with no latency, 1 Gbps network band-
width (intra-island) and 64 bit message size. Bandwidth
between the islands was modeled at 100 Mbps.
of Fig. 10, we can see deploying our system over 2 is-
[10] BEN-DAVID, A., NISAN, N., AND PINKAS, B. Fairplaymp: a
system for secure multi-party computation. In ACM CCS (2008),
pp. 257–266.
[11] BOGDANOV, D. Sharemind: programmable secure computa-
tions with practical applications. PhD thesis, University of Tartu,
2013.
[12] BOGDANOV, D., LAUD, P., AND RANDMETS, J. Domain-
polymorphic programming of privacy-preserving applications. In
PLAS (2014), pp. 53–65.
USENIX Association
26th USENIX Security Symposium    1233
[13] BOGDANOV, D., LAUR, S., AND TALVISTE, R. A Practical
Analysis of Oblivious Sorting Algorithms for Secure Multi-party
Computation. In Proceedings of the 19th Nordic Conference on
Secure IT Systems, NordSec 2014, vol. 8788 of LNCS. Springer,
2014, pp. 59–74.
[14] CHAUM, D. The dining cryptographers problem: Unconditional
sender and recipient untraceability. Journal of cryptology 1, 1
(1988), 65–75.
[15] CHAUM, D.,
JAVANI, F., KATE, A., KRASNOVA, A.,
DE RUITER, J., AND SHERMAN, A. T. cMix: Anonymization
by high-performance scalable mixing. IACR Cryptology ePrint
Archive (2016).
[16] CHAUM, D. L. Untraceable electronic mail, return addresses,
and digital pseudonyms. Communications of the ACM 24, 2
(1981), 84–90.
[17] CHEN, L., CHENG, Z., AND SMART, N. P. Identity-based key
agreement protocols from pairings. Int. J. Inf. Sec. 6, 4 (2007),
213–241.
[18] CHEN, L., AND KUDLA, C.
Identity based authenticated key
agreement protocols from pairings. In CSFW-16 (2003), pp. 219–
233.
[19] CHOR, B., KUSHILEVITZ, E., GOLDREICH, O., AND SUDAN,
M. Private information retrieval. Journal of the ACM (JACM) 45,
6 (1998), 965–981.
[20] CLARKE, I., SANDBERG, O., WILEY, B., AND HONG, T. W.
Freenet: A distributed anonymous information storage and re-
In Designing Privacy Enhancing Technologies
trieval system.
(2001), Springer, pp. 46–66.
[21] CORRIGAN-GIBBS, H., BONEH, D., AND MAZI `ERES, D. Ri-
poste: An anonymous messaging system handling millions of
In IEEE Symposium on Security and Privacy (2015),
users.
pp. 321–338.
[22] CORRIGAN-GIBBS, H., AND FORD, B. Dissent: accountable
anonymous group messaging. In ACM CCS (2010), pp. 340–350.
I., GEISLER, M., KRØIGAARD, M., AND
NIELSEN, J. B. Asynchronous multiparty computation: Theory
and implementation. In PKC (2009), pp. 160–179.
[23] DAMG ˚ARD,
[24] DAMG ˚ARD, I., PASTRO, V., SMART, N., AND ZAKARIAS, S.
Multiparty computation from somewhat homomorphic encryp-
tion. In CRYPTO (2012), pp. 643–662.
[25] DANEZIS, G., DINGLEDINE, R., AND MATHEWSON, N.
Mixminion: Design of a type III anonymous remailer protocol.
In IEEE Symposium on Security and Privacy (2003), pp. 2–15.
[26] DINGLEDINE, R., AND MATHEWSON, N. Anonymity loves
company: Usability and the network effect. In WEIS (2006).
[27] DINGLEDINE, R., MATHEWSON, N., AND SYVERSON, P. Tor:
The second-generation onion router. Tech. rep., DTIC Document,
2004.
[28] DWORK, C. Differential privacy. In Automata, languages and
programming. Springer, 2006, pp. 1–12.
[29] FIORE, D., AND GENNARO, R.
Identity-based key exchange
protocols without pairings. Trans. Computational Science 10
(2010), 42–77.
[30] FURUKAWA, J., LINDELL, Y., NOF, A., AND WEINSTEIN, O.
High-throughput secure three-party computation for malicious
In EUROCRYPT (2017),
adversaries and an honest majority.
pp. 225–255.
[31] GOLDREICH, O., MICALI, S., AND WIGDERSON, A. How to
play any mental game. In ACM STOC (1987), pp. 218–229.
[32] G ¨UNTHER, C. G. An identity-based key-exchange protocol. In
EUROCRYPT (1989), pp. 29–37.
[33] HAMADA, K., KIKUCHI, R., IKARASHI, D., CHIDA, K., AND
TAKAHASHI, K. Practically efﬁcient multi-party sorting proto-
In Information Security
cols from comparison sort algorithms.
and Cryptology–ICISC 2012. Springer, 2012, pp. 202–216.
[34] JOHNSON, A., WACEK, C., JANSEN, R., SHERR, M., AND
SYVERSON, P. Users get routed: Trafﬁc correlation on tor by
realistic adversaries. In ACM CCS (2013), pp. 337–348.
CHATZISOFRONIOU, G.,
[35] KOTZANIKOLAOU,
BURMESTER, M.
scalable real-time anonymous communication.
16, 3 (2017), 313–326.
P.,
AND
Broadcast anonymous routing (BAR):
Int. J. Inf. Sec.
[36] KWON, A., LAZAR, D., DEVADAS, S., AND FORD, B. Rif-
ﬂe: An efﬁcient communication system with strong anonymity.
PoPETS 2016, 2 (2015), 115–134.
[37] LANGLEY, A. Pond (v0.1.1). https://github.com/agl/
pond, 2015.
[38] LAUD, P., AND PETTAI, M. Secure multiparty sorting protocols
with covert privacy. In NordSec (2016), pp. 216–231.
[39] LAZAR, D., AND ZELDOVICH, N. Alpenhorn: Bootstrap-
ping secure communication without leaking metadata. In OSDI
(2016), pp. 571–586.
[40] LIU, C., WANG, X. S., NAYAK, K., HUANG, Y., AND SHI, E.
Oblivm: A programming framework for secure computation. In
IEEE Symposium on Security and Privacy (2015), pp. 359–376.
[41] MOVAHEDI, M., SAIA, J., AND ZAMANI, M. Shufﬂe to bafﬂe:
In
Towards scalable protocols for secure multi-party shufﬂing.
ICDCS (2015), pp. 800–801.
[42] PATERSON, K. G., AND SRINIVASAN, S. On the relations be-
tween non-interactive key distribution, identity-based encryption
and trapdoor discrete log groups. Des. Codes Cryptography 52,
2 (2009), 219–241.
[43] PETTAI, M., AND LAUD, P. Automatic proofs of privacy of
secure multi-party computation protocols against active adver-
saries. In CSF (2015), pp. 75–89.
[44] SAKAI, R., KASAHARA, M., AND OGHISHI, K. Cryptosystems
based on pairing. SCIS, Okinawa, Japan, 2000.
[45] SHAMIR, A.
Identity-based cryptosystems and signature
schemes. In CRYPTO (1984), pp. 47–53.
[46] SHELL, D. L. A high-speed sorting procedure. Communications
of the ACM 2, 7 (1959), 30–32.
[47] SMART, N. P. An identity based authenticated key agreement
IACR Cryptology ePrint
protocol based on the weil pairing.
Archive (2001).
[48] SYVERSON, P. F., GOLDSCHLAG, D. M., AND REED, M. G.
Anonymous connections and onion routing. In IEEE Symposium
on Security and Privacy (1997), pp. 44–54.
[49] VAN DEN HOOFF, J., LAZAR, D., ZAHARIA, M., AND ZEL-
DOVICH, N. Vuvuzela: Scalable private messaging resistant to
trafﬁc analysis. In SOSP (2015), pp. 137–152.
[50] WANG, Y. Efﬁcient identity-based and authenticated key agree-
ment protocol. Trans. Computational Science 17 (2013), 172–
197.
[51] WOLINSKY, D. I., CORRIGAN-GIBBS, H., FORD, B., AND
JOHNSON, A. Dissent in numbers: Making strong anonymity
scale. In OSDI (2012), pp. 179–182.
[52] YUAN, Q., AND LI, S. A new efﬁcient id-based authenticated
key agreement protocol. IACR Cryptology ePrint Archive (2005).
[53] ZHANG, Y., STEELE, A., AND BLANTON, M. Picco: a general-
In ACM
purpose compiler for private distributed computation.
CCS (2013), pp. 813–826.
1234    26th USENIX Security Symposium
USENIX Association