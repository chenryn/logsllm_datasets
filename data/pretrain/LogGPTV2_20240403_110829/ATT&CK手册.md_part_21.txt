### 权限提升技术

#### 通过服务模拟管理员帐户
如果服务以高权限用户（如管理员）身份运行，或允许用户通过Windows身份验证进行连接（例如SQL Server），则攻击者可以通过模拟管理员账户的令牌来升级权限。对于以管理员身份运行的Apache服务，可以使用以下工具和技术：

- **Metasploit**：利用其功能实现权限提升。
- **MWR Infosecurity工具**：下载并使用`incognito2`。
- **PowerSploit**：使用`Invoke-TokenManipulation`功能。

更多详细步骤，请参阅参考资料中的“Token操作”。

#### 不安全的注册表权限
在Windows中，向系统注册服务时会在注册表中创建包含二进制路径的新键。默认情况下，只有管理员才具有修改这些注册表项的权限。然而，在渗透测试中不应忽视这种配置缺陷。攻击者可以利用不安全的注册表权限将权限提升至系统级别。

**示例**：
1. 查找服务注册表项：
   ```
   HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services
   ```
2. 如果标准用户有权修改`ImagePath`，则可以将其更改为恶意负载的位置。例如：
   ```cmd
   C:\Users\pentestlab\Desktop>reg add "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Apache" /t REG_EXPAND_SZ /v ImagePath /d "C:\xampp\pentestlab2.exe" /f
   ```

3. 重启服务以触发恶意负载，从而以系统权限返回Meterpreter会话。

更多详细信息，请参阅参考资料中的“不安全的注册表权限”。

#### 利用SYSRET漏洞
由于AMD和Intel处理器之间的实现差异，SYSRET漏洞允许攻击者在内核模式下执行代码（ring0）。这尤其影响在Intel芯片上运行的64位版本的Windows 2008和Windows 7。

**利用步骤**：
1. 在Meterpreter会话中上传`sysret`二进制文件。
2. 使用`execute -H -f sysret.exe -a "-pid 2348"`命令执行权限提升。

或者，如果用户具有物理访问权限或通过RDP，可以使用以下过程提升权限：
1. 获取正在运行的进程及其PID列表：
   ```cmd
   whoami
   tasklist
   ```
2. 选择一个合适的进程（例如`explorer.exe`）。
3. 运行`sysret.exe -pid 1596`以绕过内核代码签名并将shellcode注入内核。

更多详细信息，请参阅参考资料中的“SYSRET”和“英特尔SYSRET”。

#### Windows权限提升基础
- **安全对象**：文件、目录、服务、注册表项、命名管道。
- **DACL（自主访问控制列表）** 和ACE（访问控制条目）。
- **访问令牌**：包含用户的安全信息，如SID、组、特权等。
- **强制完整性控制**：分配流程完整性级别，表示对象的可信度。
- **Windows完整性等级**：S-1-16-0x1000（十进制为4096）。

**示例**：
- **弱服务权限**：使用`Accesschk.exe`查找可写的服务配置，并尝试修改其二进制路径。
- **弱文件权限**：寻找可写的文件，并利用它们进行权限提升。
- **AlwaysInstallElevated**：检查注册表设置，并利用该配置安装恶意MSI包。

**其他工具**：
- **Powerup**
- **windows-privesc-check**
- **Sysinternals Suite**

更多详细信息，请参阅参考资料中的“实用的Windows权限提升”。

### 参考资料
- 磁盘Image: <https://en.wikipedia.org/wiki/Disk_image>
- 不安全的注册表权限: <https://pentestlab.blog/2017/03/31/insecure-registry-permissions/>
- SYSRET: <https://github.com/shjalayeri/sysret>
- 英特尔SYSRET: <https://pentestlab.blog/2017/06/14/intel-sysret/>
- 实用的Windows权限提升: <https://www.youtube.com/watch?v=PC_iMqiuIRQ>
- Windows操作系统中众所周知的安全标识符: <https://support.microsoft.com/en-us/help/243330/well-known-security-identifiers-in-windows-operating-systems>
- 什么是Exchange Online Protection (EOP): <https://docs.microsoft.com/en-us/office365/securitycompliance/eop/what-is-eop>

### 防御逃避
防御逃避包括对手可能用来逃避侦查或避免其他防御的技术。有时，这些行为与其他类别的技术相同或不同，但具有颠覆特定防御或缓解的额外好处。LOLBAS（Living Off The Land Binaries and Scripts）主要利用Microsoft签名的文件，包括操作系统的本机文件和Microsoft提供的脚本。

希望这些优化后的文本能帮助你更好地理解和应用这些技术。