## 从天津滨海新区大爆炸、危化品监管聊聊 IT人背负的社会责任感        
##### [TAG 15](../class/15.md)
### 作者                                                                                 
digoal                                                                                  
### 日期                                                                                
2016-12-28                                                                                  
### 标签                                                                                
PostgreSQL , 天津滨海新区大爆炸 , 危险品 , 危化品监管 , RDKit , 化学插件 , 社会关系分析 , 毒品分析 , 化学反应 , 机器学习 , 地理位置 , PostGIS                         
----                                                                                
## 背景        
缘分所致，前几天与一些来自ING行业的企业做了一次深入的交流，有感而发，写下本文。      
其实技术和业务相互依赖，相互推动着各自的发展。哪一个发明不是从自嗨开始的呢，作为IT人不应该故步自封，敞开胸怀，承担更多的社会责任，一起来推动社会变革吧。        
![pic](20161228_01_pic_001.jpg)          
天津滨海大爆炸只是危化品事故的其中之一，看看事故后的一片狼藉，危化品一旦发生事故，破坏力非常的惊人。        
危化品的种类繁多。包括如常见的易爆、易燃、放射、腐蚀、剧毒、等等。         
![pic](20161228_01_pic_002.jpg)         
![pic](20161228_01_pic_003.jpg)         
由于危化品的危害极大，所以监管显得尤为重要，那么作为IT人，一起来思考一下，能利用哪些技术手段来帮助相关部门对危化品的监管呢？        
## 如何做到风险可控      
要做到风险的可控，需要从危化品的生产源头、销售、仓促、运输、消耗、应急响应等环节入手，形成一个闭环的管理。         
## 生产环节      
传统的手段，除了例行的设备检查、监督、排放检查；颁发生产许可等。其实没有太多的监管手段。         
你总不能每个工厂安排几号公务员连续24小时轮岗监管吧，而且很容易被利益熏心，最后估计也达不到监管效果。        
随着物联网的发展，生成的设备本身，生成的过程，都有很多的指标，而且这些指标可以被实时的监控。       
这些监控的数据实时的传送到云端或者本地建立的流处理平台，一旦指标异常，可以立即触发定义好的响应机制。        
比如生产危化品的锅炉里面，可能就有成千上万的传感器，每个传感器根据监控指标的敏感度，例如每隔几十毫秒上报一次采集的数据。        
假设某个传感器上传的 温度、液位 或其他什么指标异常，会造成安全隐患的话，根据定义好的规则触发应急机制（例如减少加煤量，或者结合其他的传感器指标触发应急机制，等等）      
由于传感器的数量很多（一个工厂通常上万或者上百万的传感器），传感器上传数据的频率高，上传的数据关联度高、数据类型繁多（如数字，文本，位置，甚至有声波、图感等），所以对流处理产品的要求也非常高。      
pipelineDB是一个非常优秀的开源流处理数据库产品，具有开发效率高，处理高效，功能丰富，扩展能力强，支持的数据类型多，检索效率高，生态完整诸多的优势。      
细节可以参考如下文章，内有详细的用法和场景DEMO。      
[《流计算风云再起 - PostgreSQL携PipelineDB力挺IoT》](./20161220_01.md)         
小结一下，将各个原来人工监控的环节数字化，使用 传感器、流计算、规则（可以设置为动态的规则） 代替人的监管和经验。         
## 销售环节      
通常危化品的生成、中间商、以及最终的用户圈子是很小的，同时由于危化品的危害大，容易被不法分子利用。      
销售环节的监管非常重要，可以发现虚假销售（如骗银行贷款、骗保险的）、发掘不法分子。      
例如      
1\. 发掘不法分子：      
涉及到买卖双方的背景调查（社会关系学分析），例如不法分子找到一位远房亲戚，代为购买。       
通过社会关系学分析，可以找到不法分子，从而降低犯罪率，降低社会危害。       
关于社会关系学分析的IT系统构建详情，可以参考如下文章，在很多场景可以使用        
[《金融风控、公安刑侦、社会关系、人脉分析等需求分析与数据库实现 - PostgreSQL图数据库场景应用》](./20161213_01.md)         
2\. 虚假交易，骗保、骗贷   
![pic](20161228_01_pic_013.jpg)    
订单生成后的货物运输的跟踪，涉及到货物、货车的位置跟踪。      
这一块除了要用到普通的数据库功能，还需要用到对地理位置信息处理的数据库能力，可以使用PostgreSQL的PostGIS插件，这个插件在军方、民用、科研都有着极为广泛的应用，也是OSGeo开源组织的默认数据库组件。        
有两篇文档可以参考一下      
[《PostGIS 在 O2O应用中的优势》](https://yq.aliyun.com/articles/50922)          
[《PostgreSQL 百亿地理位置数据 近邻查询性能》](https://yq.aliyun.com/articles/2999)       
http://www.osgeo.org/      
http://postgis.net/      
小结一下，利用社会关系分析，在销售环节挖掘不法分子。利用地理位置跟踪，掌控整个交易的货物运输过程。      
## 仓储环节      
危化品的危害大，在生产、存储、运输、消耗的环节都需要监控。      
特别是仓储，量大，一旦发生事故，危害更大（就比如天津的爆炸事件）。      
同样需要用到传感器，监控货物存储的关键指标、位置、属性、化学反应、应急机制、等。      
注意这里引入了对危化品本身的属性的监管，包括它会和什么发生化学反应，需要什么样的应急机制。      
正如我们购买的很多化工产品，后面可能都会温馨提示，如不慎进入眼睛、不慎喝下，需要怎么处理。      
![pic](20161228_01_pic_009.png)        
危化品仓储需要哪些手段进行监管呢？      
1\. 传感器、流计算、(流规则)应急响应机制      
2\. 危化品本身的成分存储，会与哪些物质发生化学反应      
这里可以用到PostgreSQL的化学插件，它可以存储化学分子式数据，同时不同的化学分子式的化学反应后的合成物等。      
例如我们可以使用PG的排他约束，利用技术手段，做到对一些会发生化学反应的产品强制隔离存储。        
排他约束参考（Exclusion Constraints）      
https://www.postgresql.org/docs/9.6/static/ddl-constraints.html#DDL-CONSTRAINTS-CHECK-CONSTRAINTS      
RDKit在化学行业应用非常广泛。目前阿里云RDS PostgreSQL已经支持了这个插件。      
![pic](20161228_01_pic_008.jpg)      
具体可参考      
http://www.rdkit.org/docs/Overview.html#functionality-overview      
```      
Open source toolkit for cheminformatics      
Business-friendly BSD license      
Core data structures and algorithms in C++      
Python (2.x and 3.x) wrapper generated using Boost.Python      
Java and C# wrappers generated with SWIG      
2D and 3D molecular operations      
Descriptor generation for machine learning      
Molecular database cartridge for PostgreSQL      
Cheminformatics nodes for KNIME (distributed from the KNIME community site: http://tech.knime.org/community/rdkit)      
```      
如果你是从上化学行业的，可能会对以下比较感兴趣      
基本功能      
```      
Input/Output: SMILES/SMARTS, SDF, TDT, SLN 1, Corina mol2 1, PDB, sequence notation, FASTA (peptides only), HELM (peptides only)      
Substructure searching      
Canonical SMILES      
Chirality support (i.e. R/S or E/Z labeling)      
Chemical transformations (e.g. remove matching substructures)      
Chemical reactions      
Molecular serialization (e.g. mol  text)      
2D depiction, including constrained depiction      
Fingerprinting: Daylight-like, atom pairs, topological torsions, Morgan algorithm, “MACCS keys”, extended reduced graphs, etc.      
Similarity/diversity picking      
Gasteiger-Marsili charges      
Bemis and Murcko scaffold determination      
Salt stripping      
Functional-group filters      
```      
2D功能      
```      
2D pharmacophores      
Hierarchical subgraph/fragment analysis      
RECAP and BRICS implementations      
Multi-molecule maximum common substructure      
Enumeration of molecular resonance structures      
Molecular descriptor library:      
Topological (κ3, Balaban J, etc.)      
Compositional (Number of Rings, Number of Aromatic Heterocycles, etc.)      
Electrotopological state (Estate)      
clogP, MR (Wildman and Crippen approach)      
“MOE like” VSA descriptors      
MQN      
Similarity Maps      
Machine Learning:      
Clustering (hierarchical, Butina)      
Information theory (Shannon entropy, information gain, etc.)      
Tight integration with the Jupyter notebook (formerly the IPython notebook) and Pandas.      
```      
3D功能      