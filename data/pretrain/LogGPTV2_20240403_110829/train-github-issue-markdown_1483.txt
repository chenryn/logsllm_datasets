This is fastapi http side:
           from fastapi import Request
           import aiofiles
           @app.post('/upload')
            async def upload(request: Request):
                try:
                    filename = request.headers['filename']
                    async with aiofiles.open(filename, 'wb') as f:
                        async for chunk in request.stream():
                            await f.write(chunk)
                except Exception:
                    return {"message": "There was an error uploading the file"}
                return {"message": f"Successfuly uploaded {filename}"}
this is the request side:
        def gen_file_stream():
            with open(file_name, "rb") as f:
                while True:
                    data = f.read(1024*1024)
                    if not data:
                        break
                    yield data
              resp=requests.post(url,data=gen_file_stream())
when I check the size of the chunk its 64k and not 1MB (as Im trying to send
here).  
If I use TestClient from fastapi it is working, I mean Im able to send a chunk
of 1MB, so it seems to me requests package is dividing the size of the chunk
internally to 64KB.  
is there any way I can make request.post to send a chunk of 1MB?