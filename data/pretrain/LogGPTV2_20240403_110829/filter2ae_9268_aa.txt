# 前言
这是一个由卡耐基梅隆大学主办的CTF比赛，整体难度偏简单，适合新手入门。但是……这个比赛的主要面向人群是初中生和高中生，本菜鸡实在是自愧不如orz，还是直接看题吧=-=。
# Inspect Me
## Question
> Inpect this code!
> [http://2018shell1.picoctf.com:53213](http://2018shell1.picoctf.com:53213/)
> ([link](http://2018shell1.picoctf.com:53213/))
### Hint
> How do you inspect a website's code on a browser?
>
> Check all the website code.
## Solution
基础入门，查看源代码即可。
flag:`picoCTF{ur_4_real_1nspect0r_g4dget_098df0d0}`
# Client Side is Still Bad
## Question
> I forgot my password again, but this time there doesn't seem to be a reset,
> can you help me? ([link](http://2018shell1.picoctf.com:55790/))
### Hint
> Client Side really is a bad way to do it.
## Solution
本地js验证登录，把每一个小段的字符串拼接起来就是flag。
flag:`picoCTF{client_is_bad_3bd366}`
# Logon
## Question
> I made a website so now you can log on to! I don't seem to have the admin
> password. See if you can't get to the flag.
> ([link](http://2018shell1.picoctf.com:37861/))
### Hint
> Hmm it doesn't seem to check anyone's password, except for admins?
>
> How does check the admin's password?
## Solution
随便构造一个除了`admin`之外的用户名登录，会重定向至/flag，且返回头有Set-Cookie。
在cookie中将`admin`设为True。
再访问/flag，得到flag。
flag:`picoCTF{l0g1ns_ar3nt_r34l_a280e12c}`
# Irish Name Repo
## Question
> There is a website running at
> [http://2018shell1.picoctf.com:59464](http://2018shell1.picoctf.com:59464/)
> ([link](http://2018shell1.picoctf.com:59464/)) . Do you think you can log us
> in? Try to see if you can login!
### Hint
> There doesn't seem to be many ways to interact with this, I wonder if the
> users are kept in a database?
## Solution
没有任何过滤的注入，直接到/admin登录页面，使用万能密码`admin' or '1'='1`登录即可
flag:`picoCTF{con4n_r3411y_1snt_1r1sh_d121ca0b}`
# Mr. Robots
## Question
> Do you see the same things I see? The glimpses of the flag hidden away?
> ([link](http://2018shell1.picoctf.com:10157/))
### Hint
> What part of the website could tell you where the creator doesn't want you
> to look?
## Solution
访问/robots.txt，返回
    User-agent: *
    Disallow: /143ce.html
再访问/143ce.html
flag:`picoCTF{th3_w0rld_1s_4_danger0us_pl4c3_3lli0t_143ce}`
# No Login
## Question
> Looks like someone started making a website but never got around to making a
> login, but I heard there was a flag if you were the admin.
> [http://2018shell1.picoctf.com:33889](http://2018shell1.picoctf.com:33889/)
> ([link](http://2018shell1.picoctf.com:33889/))
### Hint
> What is it actually looking for in the cookie?
## Solution
session里有jwt。
解码一下。
和前面那题一样cookie加入`admin=1`即可。
flag:`picoCTF{n0l0g0n_n0_pr0bl3m_26b0181a}`
# Secret Agent
## Question
> Here's a little website that hasn't fully been finished. But I heard google
> gets all your info anyway.
> [http://2018shell1.picoctf.com:53383](http://2018shell1.picoctf.com:53383/)
> ([link](http://2018shell1.picoctf.com:53383/))
### Hint
> How can your browser pretend to be something else?
## Solution
访问页面显示`You're not google! Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100
Safari/537.36`。需要伪造UA，一开始以为是改chrome，一寻思不对啊，我用的不就是chrome吗= =……。后来再琢磨了一下，`You're
not google`不是`You're not chrome`，所以应该是伪造成Google爬虫。
    ~
    ❯ curl -s http://2018shell1.picoctf.com:53383/flag --user-agent "googlebot" |grep pico
                Flag: picoCTF{s3cr3t_ag3nt_m4n_134ecd62}
flag:`picoCTF{s3cr3t_ag3nt_m4n_134ecd62}`
# Buttons
## Question
> There is a website running at
> [http://2018shell1.picoctf.com:21579](http://2018shell1.picoctf.com:21579/)
> ([link](http://2018shell1.picoctf.com:21579/)). Try to see if you can push
> their buttons.
### Hint
> What's different about the two buttons?
## Solution
两个按钮，第一个会触发`POST`发送表单，而第二个则会触发一个`GET`请求。
    ...
    ...
    ...
    You did it! Try the next button: Button2
    ...
通过POST访问第二个页面就可以了。
    ~
    ❯ curl -X POST 2018shell1.picoctf.com:21579/button2.php
    Well done, your flag is: picoCTF{button_button_whose_got_the_button_ed306c10}%
flag:`picoCTF{button_button_whose_got_the_button_ed306c10}`
# The Vault
## Question
> There is a website running at
> [http://2018shell1.picoctf.com:56537](http://2018shell1.picoctf.com:56537/)
> ([link](http://2018shell1.picoctf.com:56537/)). Try to see if you can login!
### Hint
No Hints.
## Solution
题目给了源码
    ";
        echo "username: ", htmlspecialchars($username), "\n";
        echo "password: ", htmlspecialchars($password), "\n";
        echo "SQL query: ", htmlspecialchars($query), "\n";
        echo "";
      }
      //validation check
      $pattern ="/.*['\"].*OR.*/i";
      $user_match = preg_match($pattern, $username);
      $password_match = preg_match($pattern, $username);
      if($user_match + $password_match > 0)  {
        echo "SQLi detected.";
      }
      else {
        $result = $con->query($query);
        $row = $result->fetchArray();
        if ($row) {
          echo "Logged in!";
          echo "Your flag is: $FLAG";
        } else {
          echo "Login failed.";
        }
      }
    ?>
可以看到过滤了关键词`OR`，其他都和Irish Name Repo类似，改用`like`注入。
flag:`picoCTF{w3lc0m3_t0_th3_vau1t_c09f30a0}`
# Artisinal Handcrafted HTTP 3
## Question
> We found a hidden flag server hiding behind a proxy, but the proxy has
> some... _interesting_ ideas of what qualifies someone to make HTTP requests.
> Looks like you'll have to do this one by hand. Try connecting via `nc
> 2018shell1.picoctf.com 42496`, and use the proxy to send HTTP requests to
> `flag.local`. We've also recovered a username and a password for you to use
> on the login page: `realbusinessuser`/`potoooooooo`.
### Hint
> _Be the browser._ When you navigate to a page, how does your browser send
> HTTP requests? How does this change when you submit a form?
## Solution
大概意思就是要向名为`flag.local`的主机，手动构造并发送`HTTP`请求。先请求`/`试试。
    # 请求
    GET / HTTP/1.1
    Host: flag.local
    # 返回
    HTTP/1.1 200 OK
    x-powered-by: Express
    content-type: text/html; charset=utf-8
    content-length: 321
    etag: W/"141-LuTf9ny9p1l454tuA3Un+gDFLWo"
    date: Mon, 15 Oct 2018 17:04:13 GMT
    connection: close
                        Real Business Internal Flag Server
                        Login
                        You need to log in before you can see today's flag.
            %
跟进请求`/login`。
    # 请求
    GET /login HTTP/1.1