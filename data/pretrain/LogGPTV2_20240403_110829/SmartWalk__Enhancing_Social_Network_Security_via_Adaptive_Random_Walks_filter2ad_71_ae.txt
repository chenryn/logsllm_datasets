is O(Γ(k)), where Γ(k) is the number of k-hop neighbors.
We benchmark the computational overhead on a machine
running a Linux 2.6.32 kernel with a 2.5 GHz Intel Xeon
core. The average computational time for 3-hop features
is about 100 milliseconds using Facebook1, 30 milliseconds
using Facebook2 and 170 miliseconds using Twitter. For
distributed systems and a given node i, its k-hop features
can approximated by performing a suﬃciently large number
of k-hop random walks from i and obtaining the frequency
of diﬀerent terminus nodes.
Random walks are naturally resilient to Sybil attacks [51,
52], since the Sybil users have limited power in corrupting
the close neighborhood of honest users. However, the ef-
fect of poisoning attacks [26] on the probe method is still
an interesting research question. Possible defenses against
poisoning attacks are to provide more robust training node
5101520Average walk length0.40.50.60.70.80.91Fairnessnormal walkadaptive walk5101520Average walk length0.40.50.60.70.80.91Fairnessnormal walkadaptive walk10203040Average walk length0.40.50.60.70.80.91Fairnessnormal walkadaptive walkLink privacy00.20.40.60.81CDF00.10.20.30.40.50.60.70.80.91fixed t=2fixed t=4fixed t=6fixed t=8node adaptive E(t)≈ 8path adaptive E(t)≈ 8Transient random walk length102030405060Mean utility00.10.20.30.40.50.60.70.80.91fixed t=2fixed t=4fixed t=6fixed t=8node adaptive E[t]≈ 8path adaptive E[t]≈ 8Transient random walk length102030405060Max utility00.10.20.30.40.50.60.70.80.91fixed t=2fixed t=4fixed t=6fixed t=8node adaptive E[t]≈ 8path adaptive E[t]≈ 8selection by performing short random walks from prior trust
seeds, or to develop detection methods for nodes to examine
potentially poisoned features and labels. We will leave the
safe adoption of machine learning techniques in adversarial
settings to future work.
8. RELATED WORK
Random Walks in Security Systems. Danezis et al.
[12] proposed Drac, a decentralized protocol for anonymous
communications that leverages users’ social links. Random
walks are used in the circuit creation process. Mittal et al.
[33] presented a random walk based perturbation algorithm,
which anonymizes the social trust relationships by replac-
ing real edges with edges between initial and terminal nodes
of random walks. Many Sybil defense mechanisms leverage
random walks to detect Sybil users from benign users, such
as SybilLimit [51], SybilGuard [52], SybilRank [8], SybilInfer
[13] and Criminal account Inference Algorithm [49]. Integro
[5] changes the transition probabilities associated with ran-
dom walks, but still uses ﬁxed-length random walks. Using
multiple real world social network datasets, we experimen-
tally verify the applicability of adaptive random walk models
in Sybil defense, anonymous systems and link privacy pre-
serving systems. We show that our proposal has the poten-
tial to improve the security and privacy of these applications
by an order of magnitude. We note that our approach has
broad potential to impact security-performance trade-oﬀs
in applications even outside the context of social networks;
this includes graph-theoretic detection mechanisms for P2P
botnets [38], spamming botnets [53], malicious online com-
munities [42], and malware [22].
Random Walks in Networked Systems. Lov´asz et
al. [29] describes the connection of mixing time to the sec-
ond largest eigenvalue modulus (SLEM) of graphs. A lot of
works have studied the impact of network topology on the
mixing times of random walks experimentally [11, 37, 36].
To the best of our knowledge, all previous works use uniform
length random walks, and our work is the ﬁrst to adapt the
random walk length depending on structural characteristics
of nodes, and apply the concept to improve system security
and privacy. Even though our analysis was presented from
the perspective of undirected graphs, our idea can be ex-
tended to both weighted and directed networks, and such a
quantitative study would be an interesting direction of fu-
ture work.
9. CONCLUSIONS
In this paper, we observe that in various social topologies,
the walk length required to converge to stationarity has a
heterogeneous and long-tail property across nodes. Using a
set of supervised machine learning techniques, we show that
the walk length for a speciﬁc node can be well predicted
given the local characteristics and limited knowledge for a
small set of training nodes. Based on the heterogeneous
property and prediction algorithm, we propose two usage
models of random walks that can adaptively change the ran-
dom walk length, i.e., node-adaptive and path-adaptive ran-
dom walks. Finally, we present experimental results using
two usage models in real world social network based secu-
rity applications, and show up to two orders of magnitude
improvement in performance.
10. ACKNOWLEDGMENTS
This work was supported in part by NSF awards num-
ber CNS-1409415, CNS-1423139, CNS-1553437, and CNS-
1617286, and by CCF-Tencent Open Research Fund.
11. REFERENCES
[1] Google unveils uproxy, an anti-censorship browser
extension. http://thetechjournal.com/internet/google-
unveils-uproxy.xhtml.
[2] Lantern - open internet for everyone.
http://www.getlantern.org.
[3] D. Aldous. Random walks of ﬁnite groups and rapidly
mixing Markov chains. In J. Az´ema and M. Yor,
editors, S´eminaire de Probabilit´es XVII 1981/82,
volume 986 of Lecture Notes in Mathematics, pages
243–297. Springer-Verlag, 1983.
[4] A. Awan, R. A. Ferreira, S. Jagannathan, and
A. Grama. Distributed uniform sampling in
unstructured peer-to-peer networks. In HICSS 2006.
IEEE Computer Society.
[5] Y. Boshmaf, D. Logothetis, G. Siganos, J. Ler´ıa,
J. Lorenzo, M. Ripeanu, and K. Beznosov. Integro:
Leveraging victim prediction for robust fake account
detection in osns. In NDSS, 2015.
[6] S. Boyd, P. Diaconis, and L. Xiao. Fastest mixing
Markov chain on a graph. SIAM Review, problems and
techniques section, 46(4):667–689, Dec. 2004.
[7] L. Breiman. Random forests. Machine Learning, 2001.
[8] Q. Cao, M. Sirivianos, X. Yang, and T. Pregueiro.
Aiding the detection of fake accounts in large scale
social online services. In NSDI 2012, pages 197–210.
[9] R. Caruana. Multitask learning. Machine Learning,
1997.
[10] S.-H. Cha. Comprehensive survey on
distance/similarity measures between probability
density functions, 2007.
[11] M. Chen. Mixing time of random walks on graphs.
Master’s thesis, University of York, 2004.
[12] G. Danezis, C. Diaz, C. Troncoso, and B. Laurie.
Drac: An architecture for anonymous low-volume
communications. PET, 2010.
[13] G. Danezis and P. Mittal. Sybilinfer: Detecting sybil
nodes using social networks. In NDSS, 2009.
[14] P. Diaconis and D. Stroock. Geometric bounds for
eigenvalues of Markov chains. The Annals of Applied
Probability, 1:36–61, 1991.
[15] R. Dingledine, N. Mathewson, and P. Tor: The
second-generation onion router. USENIX, 2004.
[16] E. Gilbert and K. Karahalios. Predicting tie strength
with social media. CHI, 2009.
[17] D. Gkorou, T. Vinko, J. Pouwelse, and D. Epema.
Leveraging node properties in random walks for
robust reputations in decentralized networks. In
Peer-to-Peer Computing (P2P), 2013 IEEE
Thirteenth International Conference on, 2013.
[18] S. J. Hardiman and L. Katzir. Estimating clustering
coeﬃcients and size of social networks via random
walk. In WWW, 2013.
[19] M. Hay, G. Miklau, D. Jensen, D. Towsley, and C. Li.
Resisting structural re-identiﬁcation in anonymized
social networks. the International Journal on Very
Large Data Bases, 2008.
large networks using random walks. In Computer and
Information Sciences-ISCIS 2005. Springer, 2005.
[20] M. Hay, G. Miklau, D. Jensen, P. Weis, and
[41] Y. Sovran, J. Li, and L. Subramanian. Unblocking the
S. Srivastava. Anonymizing social networks. the
International Journal on Very Large Data Bases, 2007.
[21] R. Jain, D.-M. Chiu, and W. Hawe. A quantitative
measure of fairness and discrimination for resource
allocation in shared computer systems. 1998.
[22] B. J. Kwon, J. Mondal, J. Jang, L. Bilge, and
T. Dumitras. The dropper eﬀect: Insights into
malware distribution with downloader graph analytics.
In ACM SIGSAC, pages 1118–1129. ACM, 2015.
internet: Social networks foil censors.
[42] G. Stringhini, P. Mourlanne, G. Jacob, M. Egele,
C. Kruegel, and G. Vigna. Evilcohort: detecting
communities of malicious accounts on online services.
In USENIX, pages 563–578, 2015.
[43] N. Tran, J. Li, L. Subramanian, and S. S. M. Chow.
Optimal sybil-resilient node admission control. IEEE
INFOCOM, 2011.
[44] N. Tran, B. Min, J. Li, and L. Subramanian.
[23] J. Leskovec and A. Krevl. SNAP Datasets: Stanford
Sybil-resilient online content voting. NSDI, 2009.
large network dataset collection.
http://snap.stanford.edu/data, June 2014.
[24] C. Lesniewski-Laas and M. F. Kaashoek. Whanau: A
sybil-proof distributed hash table. NSDI, 2012.
[25] D. A. Levin, Y. Peres, and E. L. Wilmer. Markov
chains and mixing times. American Mathematical
Society, 2009.
[26] C. Liu, P. Gao, M. Wright, and P. Mittal. Exploiting
temporal dynamics in sybil defenses. In ACM
SIGSAC, 2015.
[27] C. Liu and P. Mittal. Linkmirage: Enabling
privacy-preserving analytics on social relationships.
2016.
[28] W. Liu and L. Lu. Link prediction based on local
random walk. Epl, 2010.
[29] L. Lov ˜A (cid:44)asz. Random Walks on Graphs: A Survey,
volume 2. J´anos Bolyai Mathematical Society, 1996.
[30] J. Lu and D. Li. Sampling online social networks by
random walk. In ACM IWHTISNR, 2012.
[31] S. Marti, P. Ganesan, and H. Garcia-Molina. Sprout:
P2P Routing with Social Networks. Springer Berlin
Heidelberg, 2004.
[32] P. Mittal, M. Caesar, and N. Borisov. X-vine: Secure
and pseudonymous routing using social networks.
Network and Distributed System Security Symposium,
2012.
[33] P. Mittal, C. Papamanthou, and D. Song. Preserving
link privacy in social network based systems. In
NDSS, 2013.
[34] P. Mittal, M. Wright, and N. Borisov. Pisces:
Anonymous communication using social networks.
NDSS, 2013.
[35] A. Mohaisen, N. Hopper, and Y. Kim. Keep your
friends close: Incorporating trust into social
network-based sybil defenses. In INFOCOM, 2011.
[36] A. Mohaisen, A. Yun, and Y. Kim. Measuring the
mixing time of social graphs. In Proceedings of the
10th ACM SIGCOMM conference on Internet
measurement, 2010.
[37] S. Nagaraja. Anonymity in the wild: Mixes on
unstructured networks. PET, 2007.
[38] S. Nagaraja, P. Mittal, C.-Y. Hong, M. Caesar, and
N. Borisov. Botgrep: Finding p2p bots with structured
graph analysis. In USENIX, pages 95–110, 2010.
[39] M. E. J. Newman. A measure of betweenness
centrality based on random walks. Social Networks,
2005.
[40] P. Pons and M. Latapy. Computing communities in
[45] B. Viswanath, A. Mislove, M. Cha, and K. P.
Gummadi. On the evolution of user interaction in
facebook. In WOSN, 2009.
[46] V. V. Williams. Multiplying matrices faster than
coppersmith-winograd. In STOC, 2012.
[47] C. Wilson, B. Boe, A. Sala, K. P. N. Puttaswamy, and
B. Y. Zhao. User interactions in social networks and
their implications. Acm Eurosys, 2009.
[48] Y. Xie, Z. Chen, A. Agrawal, A. Choudhary, and
L. Liu. Random walk-based graphical sampling in
unbalanced heterogeneous bipartite social graphs. In
Proceedings of the 22nd ACM international conference
on Conference on information &#38; knowledge
management, 2013.
[49] C. Yang, R. Harkreader, J. Zhang, S. Shin, and
G. Gu. Analyzing spammers’ social networks for fun
and proﬁt: a case study of cyber criminal ecosystem
on twitter. In WWW, pages 71–80. ACM, 2012.
[50] X. Ying and X. Wu. Randomizing social networks: a
spectrum preserving approach. SDM, 2008.
[51] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao.
Sybillimit: A near-optimal social network defense
against sybil attacks. In IEEE SP, 2008.
[52] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman.
Sybilguard: Defending against sybil attacks via social
networks. In ACM SIGCOMM, 2006.
[53] Y. Zhao, Y. Xie, F. Yu, Q. Ke, Y. Yu, Y. Chen, and
E. Gillum. Botgraph: Large scale spamming botnet
detection. In USENIX, NSDI’09, pages 321–334, 2009.
[54] E. Zheleva and L. Getoor. Preserving the privacy of
sensitive relationships in graph data. In PinKDD,
2007.
APPENDIX
A. PROOF OF INEQUALITY
(cid:80)
(cid:80)
1
deg(i)
deg(i)
1
Proof. Given node i, the probability distribution at time
t is given by πi(t) = πi(0)P t. Assume t > 1. πi(t) =
j∈N (i) πj(0)P t−1. Let Tmax = maxj∈N (i) Tj(). De-
deg(i)
note the total variation distance to stationarity at time t
as ∆i(t). Then for any neighbouring node j of node i,
∆j(Tmax) < . Thus, we have ∆i(Tmax + 1) = |π−
≤ 1
j∈N (i) ∆j(Tmax) < . Since ∆i(Tmax + 1) < , the
local mixing time of node i must not exceed Tmax + 1. The
proof is completed.
(cid:80)
j∈N (i) πj(0)P Tmax|1 = |
(cid:80)
j∈N (i) (π − πj(0)P Tmax )|1
1
deg(i)