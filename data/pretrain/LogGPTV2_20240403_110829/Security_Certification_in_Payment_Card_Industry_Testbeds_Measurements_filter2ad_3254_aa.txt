title:Security Certification in Payment Card Industry: Testbeds, Measurements,
and Recommendations
author:Sazzadur Rahaman and
Gang Wang and
Danfeng Daphne Yao
Security Certification in Payment Card Industry:
Testbeds, Measurements, and Recommendations
Sazzadur Rahaman1, Gang Wang2, Danfeng (Daphne) Yao1
1Computer Science, Virginia Tech, Blacksburg, VA
2Computer Science, University of Illinois at Urbana-Champaign, Urbana, IL
PI:EMAIL,PI:EMAIL,PI:EMAIL
Abstract
The massive payment card industry (PCI) involves various entities
such as merchants, issuer banks, acquirer banks, and card brands.
Ensuring security for all entities that process payment card infor-
mation is a challenging task. The PCI Security Standards Council
requires all entities to be compliant with the PCI Data Security
Standard (DSS), which specifies a series of security requirements.
However, little is known regarding how well PCI DSS is enforced in
practice. In this paper, we take a measurement approach to system-
atically evaluate the PCI DSS certification process for e-commerce
websites. We develop an e-commerce web application testbed, Bug-
gyCart, which can flexibly add or remove 35 PCI DSS related
vulnerabilities. Then we use the testbed to examine the capability
and limitations of PCI scanners and the rigor of the certification
process. We find that there is an alarming gap between the security
standard and its real-world enforcement. None of the 6 PCI scanners
we tested are fully compliant with the PCI scanning guidelines, issu-
ing certificates to merchants that still have major vulnerabilities. To
further examine the compliance status of real-world e-commerce
websites, we build a new lightweight scanning tool named Pci-
CheckerLite and scan 1,203 e-commerce websites across various
business sectors. The results confirm that 86% of the websites have
at least one PCI DSS violation that should have disqualified them
as non-compliant. Our in-depth accuracy analysis also shows that
PciCheckerLite’s output is more precise than w3af. We reached
out to the PCI Security Council to share our research results to
improve the enforcement in practice.
CCS Concepts
• Security and privacy → Web application security; Web pro-
tocol security.
Keywords
Payment Card Industry; Data Security Standard; Internet Measure-
ment; Website Scanning; Data Breach; Web Security; Testbed; E-
commerce;
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6747-9/19/11...$15.00
https://doi.org/10.1145/3319535.3363195
ACM Reference Format:
Sazzadur Rahaman, Gang Wang, Danfeng (Daphne) Yao. 2019. Security
Certification in Payment Card Industry: Testbeds, Measurements, and Rec-
ommendations. In 2019 ACM SIGSAC Conference on Computer & Commu-
nications Security (CCS’19), November 11–15, 2019, London, UK. ACM, New
York, NY, USA, 18 pages. https://doi.org/10.1145/3319535.3363195
1 Introduction
Payment systems are critical targets that attract financially driven
attacks. Major card brands (including Visa, MasterCard, American
Express, Discover, and JCB) formed an alliance named Payment
Card Industry Security Standards Council (PCI SSC) to standardize
the security requirements of the ecosystem at a global scale. The PCI
Security Standards Council maintains, updates, and promotes Data
Security Standard (DSS) [27] that defines a comprehensive set of
security requirements for payment systems. PCI DSS certification
has established itself as a global trademark for secure payment
systems. According to PCI DSS [27],
“PCI DSS applies to all entities involved in payment card process-
ing – including merchants, processors, acquirers, issuers, and service
providers. PCI DSS also applies to all other entities that store, process,
or transmit cardholder data and/or sensitive authentication data.”
The PCI Security Standards Council plays a major role in eval-
uating the security and compliance status of the payment card
industry participants and supervises a set of entities that are re-
sponsible to perform compliance assessments such as Qualified
security assessors (QSA) and Approved scanning vendors (ASV).
All entities in the PCI ecosystem, including merchants, issuers, and
acquirers, need to comply with the standards. PCI standards specify
that entities need to obtain their compliance reports from the PCI
authorized entities (e.g., QSA and ASV) and periodically submit
the reports in order to maintain their status. For example, a mer-
chant needs to submit its compliance report to the acquirer bank
to keep its business account active within the bank. Similarly, card
issuer and acquirer banks need to submit their compliance reports
to the payment brands (e.g., Visa, MasterCard, American Express,
Discover, and JCB) to maintain their membership status [27].
However, several recent high-profile data breaches [14, 72] have
raised concerns about the security of the payment card ecosystem,
specially for e-commerce merchants1. A research report from Gem-
ini Advisory [21] shows that 60 million US payment cards have
been compromised in 2018 alone. Among the merchants that ex-
perienced data breaches, many were known to be compliant with
the PCI data security standards (PCI DSS). For example, in 2013,
Target leaked 40 million payment card information due to insecure
1Merchants that allow online payment card transactions for selling products and
services are referred to as “e-commerce merchants”.
practices within its internal networks [72], despite that Target was
marked as PCI DSS compliant. These incidents raise important
questions about how PCI DSS is enforced in practice.
In this paper, we ask: how well are the PCI data security standards
enforced in practice? Do real-world e-commerce websites live up to the
PCI data security standards? These questions have not been exper-
imentally addressed before. We first design and develop testbeds
and tools to quantitatively measure the degree of PCI DSS compli-
ance of PCI scanners and e-commerce merchants. PCI scanners are
commercial security services that perform external security scans
on merchants’ servers and issue certificates to those who pass the
scan. By setting up our testbed, i.e., an e-commerce website with
configurable vulnerabilities, we empirically measure the capability
of PCI scanners and the rigor of the certification process.
Our results show that the detection capabilities of PCI scanners
vary significantly, where even PCI-approved scanners fail to re-
port serious vulnerabilities in the testbed. For 5 of the 6 scanners
evaluated, the reports are not compliant with the PCI scanning
guidelines [19]. All 6 scanners issued certificates to web servers
that still have major vulnerabilities (e.g., sending sensitive informa-
tion over HTTP). Even if major vulnerabilities are detected (e.g.,
remotely accessible MySQL), which should warrant an “automatic
failure” according to the guideline [19], some PCI scanners still
proceed with certification regardless.
Given the weak scanner performance, it is possible that real-
world e-commerce websites still have major vulnerabilities. For
validation, we build a new lightweight scanning tool and perform
empirical measurements on 1,203 real-world e-commerce websites.
Note that for independent researchers or third-parties, scanning in
the PCI context imposes a new technical challenge, namely the non-
intrusive low-interaction constraint. The low interaction constraint,
necessary for testing live production sites, makes it difficult to test
certain vulnerabilities externally. Traditional penetration testing
(pentest) tools are not suitable to test live websites in production
environments. For example, pentest tools such as w3af [4] have
brute-force based tests which require intense URL fuzzing (e.g.,
prerequisite for SQL injection, XSS) or sending disruptive payload.
The feedback from the PCI Security Council during our disclosure
(Section 6) also confirmed this challenge.
Our technical contributions and findings are summarized below.
• We design and develop an e-commerce web application testbed
called BuggyCart, where we implant 35 PCI-related vulner-
abilities such as server misconfiguration (e.g., SSL/TLS and
HTTPS misconfigurations), programming errors (e.g., CSRF,
XSS, SQL Injection), and noncompliant practices (e.g., storing
plaintext passwords, PAN, and CVV). BuggyCart allows us to
flexibly configure vulnerabilities in the testbed for measuring
the capabilities and limitations of PCI scanners. We are in the
process of open-sourcing BuggyCart and sharing it with the
PCI security council (Section 3).
• Using BuggyCart, we evaluated 6 PCI scanning services, rang-
ing from more expensive scanners (e.g., $2,995/Year) to low-end
scanners (e.g., $250/Year). The results showed an alarming gap
between the specifications of the PCI data security standard
and its real-world enforcement. For example, most of the scan-
ners choose to certify websites with serious SSL/TLS and server
Figure 1: Overview of the payment card ecosystem.
to assess
misconfigurations. None of the PCI-approved scanning vendors
detect SQL injection, XSS, and CSRF. 5 out of the 6 scanners are
not compliant with the ASV scanning guidelines (Section 4).
• We further evaluated 4 generic web scanners (not designed for
PCI DSS), including two commercial scanners and two open-
source academic solutions (w3af [4], ZAP [2]). We examine
whether they can detect the web-application vulnerabilities
missed by PCI scanners. Unfortunately, most of these vulnera-
bilities still remain undetected. (Section 4).
• We conducted empirical measurements
the
(in)security of real-world e-commerce websites. We carefully
designed and built a lightweight vulnerability scanner
called PciCheckerLite. Our solution to addressing the non-
intrusiveness challenge is centered at minimizing the number
of requests that PciCheckerLite issues per test case, while
maximizing the test case coverage. It also involves a collection
of lightweight heuristics that merge multiple security tests
into one request. Using PciCheckerLite, we evaluated 1,203
e-commerce website across various business categories. We
showed that 94% of the websites have at least one PCI DSS
violation, and 86% of them contains violations that should have
disqualified them as non-compliant (Section 5). Our in-depth
accuracy analysis also showed that PciCheckerLite’s outputs
have fewer false positives than the w3af counterpart (Table 6).
Based on our results, we further discuss how various PCI stake-
holders, including the PCI council, scanning providers, banks, and
merchants, as well as security researchers, can collectively improve
the security of the payment card ecosystem (Section 6).
2 Background on PCI and DSS
We start by describing the background for the security practices,
workflow, and standards of the current PCI ecosystem that involves
banks, store-front and e-commerce vendors, and software providers.
Then, we focus on how merchants obtain security certifications
and establish trust with the banks. We discuss how the certification
process is regulated and executed.
2.1 Payment Card Ecosystem
The Payment Card Industry (PCI) has established a working sys-
tem that allows merchants to accept user payment via payment
UserE-CommerceAcquirer Bank1Merchant POSAcquirer POSIssuer Bank2356784910MerchantPayment GatewayPayment Networkcards, and complete the transactions with the banks in the back-
end. Figure 1 shows the relationships between the key players in
the ecosystem, including users, merchants, and banks. The user
and the merchant may use different banks. The issuer bank issues
payment cards to the user and manages the user’s credit or debit
card accounts (step ❶). Users use the payment card at various types
of merchants (steps ❷, ❺, and ❼). The acquirer bank manages an
account for the merchant to receive and route the transaction infor-
mation (steps ❹, ❻, and ❽). The acquirer bank ensures that funds
are deposited into the merchant’s account once the transaction is
complete via the payment network (steps ❾ and ❿). The payment
network, also known as the card brands (e.g., Visa, MasterCard),
bridges between the acquirer and the issuer banks.
There are different types of merchants. For merchants that run
an e-commerce service (i.e., all transactions are made online), they
usually interact with the acquirer bank via a payment gateway (e.g.,
Stripe, Square), which eases the payment processing and integration
(❸). For merchants that have a physical storefront, they use point-
of-sale (POS) devices, i.e., payment terminals, to collect and transfer
user card information to the acquirer bank. They can use either the
acquirer bank’s POS (❼) or their own POS (❺). The key difference is
that acquirer POS directly transfers the card information to the bank
without storing the information within the merchant. Merchant
POS, however, may store the card information.
Due to the fact that e-commerce websites and merchant POSes
need to store card information, the merchants need to prove to
the bank that they are qualified to securely handle the information
processing. The acquirer bank requires these merchants to obtain
PCI security certifications in order to maintain accounts with the
bank [11]. Next, we introduce the security certification process.
2.2 PCI Council and Data Security Standard
Payment Card Industry Security Standards Council manages a num-
ber of specifications to ensure data security across the extremely
complex payment ecosystem. Among all the specifications, only
the Data Security Standard (DSS) and Card Production and Pro-
visioning (CPP) are required. All the other specifications (shown
in Table 8 in the Appendix) are recommended (i.e., optional). CPP
is designed to regulate card issuers and manufactures. The Data
Security Standard (DSS) is the most important specification that
is required to be complied by issuer banks, acquirer banks, and
all types of merchants and e-commerce sites, i.e., all systems that
process payment cards. Our work is focused on the DSS compliance.
In the PCI Data Security Standard specifications [27], there are
12 requirements that an organization must follow to protect user
payment card data. These requirements cover various aspects rang-
ing from network security to data protection policies, vulnerability
management, access control, testing, and personnel management.
In total, there are 79 more detailed items under the 12 high-level
requirements. We summarize them in the Appendix (Table 9).
DSS applies to all players in the ecosystem, including all mer-
chants and acquirer/issuer banks. For merchants, they need to ap-
prove their compliance to the acquirer bank to open an account for
their business. For acquirer and issuer banks, they need to prove
their compliance to the card brands (e.g., Visa, MasterCard) for the
eligibility of membership.
Table 1: PCI Compliance levels and their evaluation criteria.
Level
Transactions
Self-report
Per Year
with SAQ
Quarterly
Level 1 Over 6M
Quarterly
1M – 6M
Level 2
20K – 1M
Level 3
Quarterly
Less than 20K Quarterly
Level 4
Compliance Requirements
Sec Audits
by QSA
Required
Required/Optional
Sec Scans
by ASV
Quarterly
Quarterly
Quarterly Not Required
Quarterly Not Required
We use the merchant as an example to illustrate how DSS com-
pliance is assessed. First, the PCI security standard council provides
the specifications and self-assessment questionnaires (SAQ) [11].
Merchants self-assess their DSS compliance and attach the question-
naires in their reports. Second, the merchant must pass the security
tests and audits from external entities such as Approved Scanning
Vendors (ASV) and the Qualified Security Assessors (QSA). The PCI
council approves a list of ASV and QSA [20] for the assessment.
Security scanning is conducted by certified scanners (Approved
Scanning Vendors or ASVs) on card processing entities. Security
scanning is performed remotely without the need for on-site au-
diting. Not all the requirements can be automatically verified by
the remote scanning (see Table 8 in the Appendix). The PCI council
provides an ASV scanning guideline [19], which details the respon-
sibilities of the scanners (see Table 7 in the Appendix).
Self-assessment questionnaires (SAQs) allow an organization
to self-evaluate its security compliance [29]. In SAQs, all the ques-
tions are close ended. More SAQ analysis is presented in Section 6.
Security audit is carried out by Qualified Security Assessors
(QSAs). It requires on-site auditing (e.g., checking network and
database configurations, examining software patches, and inter-
viewing employees). As security scanning cannot verify all of the
DSS properties, on-site audits are to cover those missing aspects.
Level of compliance varies for different organizations. The com-
pliance level is usually determined by the number of annual fi-
nancial transactions handled by the organization. Each acquirer
bank (or card brand) has its own program for compliance and val-
idation levels. In Table 1, we show the tentative compliance lev-
els that roughly match most of the payment brands [11, 23]. The
self-assessment questionnaires (SAQs) and security scanning are
required quarterly regardless of the compliance levels. Only large
organizations that handle over 1 million transactions a year are
required to have the on-site audit (by a QSA). The majority of
merchants are small businesses, (e.g., 85% of merchants all over the
world have less than 1 million USD web sale [15]). Thus, most online
merchants rely on ASV scanners and self-reported questionnaires
for compliance assessment.
2.3 Our Threat Model and Method Overview
Threat Model. The certification process is designed as an enforce-
ment mechanism for merchants to hold a high-security standard
to protect user data from external adversaries. If the certification
process is not well executed, it would allow merchants with security
vulnerabilities to store payment card data and interact with banks.
In addition, such security certification may also create a false sense
of security for merchants. We primarily focus on the automatic
server screening by PCI scanners given that all merchants need
to pass the scanning. We also briefly analyze the Self-assessment
Questionnaire (SAQs). Our analysis does not cover on-site audits,
because i) on-site audit is not required for the vast majority of the
merchants and ii) it is impossible to conduct analysis experiments
on on-site audits without partnerships with service providers.
Methodology Overview. To systematically measure and compare
the rigor of the compliance assessment process, our methodology
is to build a semi-functional e-commerce website as a testbed and
order commercial PCI scanning services to screen and certify the
website. The testbed allows us to easily configure website instances
by adding or removing key security vulnerabilities that PCI DSS
specifies. We leverage this testbed to perform controlled measure-
ments on the certification process of a number of PCI scanners. In
addition to the controlled experiments, we also empirically measure
the security compliance of real-world e-commerce websites with a
focus on a selected set of DSS requirements. In the following, we
describe our detailed measurement methodologies and findings.
3 Measurement Methodology
In this section, we describe our measurement methodology for
understanding how PCI scanners perform data security standard
(DSS) compliance assessment and issue certificates to merchants.
The core idea is to build a re-configurable testbed where we can
add or remove key security vulnerabilities related to DSS and gen-
erate testing cases. By ordering PCI scanning services to scan the
testbed, we collect incoming network traffic as well as the security
compliance reports from the scanning vendors. In the following, we
first describe the list of vulnerabilities that our testbed covers, and
then introduce the key steps to set up the e-commerce frontend.
3.1 Security Test Cases
The testbed contains a total of 35 test cases, where each test case
represents a type of security vulnerabilities. Running a PCI scanner
to scan the testbed could reveal vulnerabilities that the scanner can
detect, as well as those that the scanner fails to report. We categorize
the 35 security test cases i1–i35 into four categories, namely network
security, system security, application security, and secure storage.
Note that there are 29 test cases in the first three categories are
within the scope of ASV scanners (i.e., ASV testable cases). The
other 6 cases under “secure storage” cannot be remotely verified.
We include these cases to illustrate the limits of ASV scanners.
(1) Network security (14 test cases). These testing cases are
related to network security properties, including firewall status,
(i1), the access to critical software from network (i2–i4), default
passwords (i5–i6), the usage of HTTP to transmit sensitive data
(e.g., customer or admin login information) (i7), and SSL/TLS
misconfigurations (i12–i18).
(2) System security (7 test cases). These test cases are related to
system vulnerabilities, including vulnerable software (i19–i20),
server misconfigurations (i29–i32), and HTTP security headers
(i33).
(3) Web Application security (8 test cases). These test cases are
related to application-level problems including SQL injections
(i21–i22), not following secure password guidelines (i23–i24),
the integrity of Javascripts from external sources (i25), revealing
crash reports (i26), XSS (i27) and CSRF (i28).
(4) Secure storage (6 test cases). Secure storage is impossible to
verify through external scans. Thus, DSS does not require PCI
scanners to test these properties, such as storing sensitive user
information (i8), storing and showing PAN in plaintext (i9–i11),
and insecure ways of storing passwords (i34–i35). In PCI DSS,
merchants need to fill out the self-assessment questionnaire
about how they handle sensitive data internally. We choose to
include these vulnerabilities in the testbed for highlighting the
fundamental limitations of external scans on some important
aspects of server security.
Must-fix Vulnerabilities. These test cases are designed following
the official ASV scanning guideline [19] and the PCI data security
standard (DSS) [27]. Among the 35 cases, 29 are within the scope
(responsibility) of ASV scanners that can be remotely tested. After
vulnerabilities are detected, website owners are required to fix any
vulnerabilities that have a CVSS score ≥ 4.0, and any vulnerabil-
ities that are marked as mandatory in PCI DSS. CVSS (Common
Vulnerability Scoring System) measures the severity of a vulner-
ability (score 0 to 10). The CVSS scores in Table 3 are calculated
using CVSSv3.0 calculator [1]. Vulnerabilities that have no CVSS
score are marked as “N/A”. If the website owner fails to resolve the
“must-fix” vulnerabilities, a scanner should not issue the compliance
certification. As shown in Table 3, 26 out of the 29 testable cases are
required to be fixed. Three cases (vulnerability 3, 4, and 18) are not
mandatory to fix. For example, exposing OpenSSH to the Internet
(case-3) does not mean immediate danger as long as the access is
well protected by strong passwords or SSH keys.
Completeness and Excluded Cases. When building our Buggy-
Cart testbed and the PciCheckerLite prototype, we exclude five
mandatory ASV scanning cases: i) backdoors or malware, ii) DNS
server vulnerabilities, e.g., unrestricted DNS zone transfer, iii) vul-
nerabilities in mail servers, iv) vulnerabilities in hypervisor and
virtualization components, and v) vulnerabilities in wireless access
points. Most of them (namely, ii, iii, iv, and v) are not relevant, as
they involve servers or devices outside our testbed or an applica-
tion server. In the first category, it is difficult to design a generic
network-based testing case. We also exclude the non-mandatory
cases (shown in the last 4 rows of Table 7 in the Appendix).
Note that ASV testable cases only represent a subset of PCI DSS
specifications [27] because some specifications are not remotely
verifiable. There are specifications related to organization policies,
which are impossible to verify externally, e.g., “restricting physical
access to cardholder data” (DSS req. 9), and “documenting the key
management process” (DSS req. 3.6). They can only be assessed
by onsite audits, which unfortunately are not applicable to the
majority of e-commerce websites and small businesses (see Table 1).
We will discuss this further in Section 6.
Our PciCheckerLite prototype in Section 5 scans 17 test cases
in Table 5, which are a subset of the 29 externally scannable rules in
Table 3. When scanning live production websites, we have to elimi-
nate cases that require intrusive operations such as web crawling,
URL fuzzing, or port scanning.
3.2 Testbed Architecture and Implementations
A key challenge of measuring PCI scanners is to interact with PCI
scanners like a real e-commerce website does, in order to obtain
reliable results. This requires the testbed to incorporate most (if not
all) of the e-commerce functionality to interact with PCI scanners
and reflect the scanners’ true performance. For this reason, we
choose the OpenCart [26] as the base to build our testbed. OpenCart
is a popular open source PHP-based e-commerce solution used
by real-world merchants to build their websites. This allows us
to interact with PCI scanners in a realistic manner to ensure the
validity of measurement results.
Testbed Frontend. The frontend of our testbed supports core e-
commerce functionality, such as account registration, shopping cart
management, and checkout and making payment with credit cards.