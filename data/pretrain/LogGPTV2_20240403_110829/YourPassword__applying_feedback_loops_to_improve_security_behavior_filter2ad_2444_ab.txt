### 5.4 General Observations

We observed that participants had a fundamental understanding of security principles, enabling them to create secure passwords individually. For example, all participants adhered to their own password policies when creating new passwords and suggested updating passwords that lacked numbers, uppercase characters, or symbols. However, in the absence of proper feedback, participants in the CC (Control Condition) and MC (Microsoft Password Checker) conditions reused the same password across multiple websites, whereas participants in the YC (YourPassword) condition proposed unique passwords during the experiment.

In the CC and MC conditions, some participants reused the same or similar passwords for services that are linked for usage. For instance, two participants, one from each condition, used the same or similar passwords for services dealing with banking or credit card information (e.g., Amazon, American Express, Bank of Oklahoma, and PayPal). Additionally, one participant in the MC condition mentioned reusing the same password for Amazon, Facebook, and Gmail because she logs into these services using the same email address.

Some participants did not fully trust the strength measurement provided by Microsoft’s password checker, as they believed their own password policies would generate secure passwords. An interesting observation was that several participants used the initials of the services to create new passwords, enhancing memorability. These participants generated passwords that were meaningful to them and linked to the specific services, thereby tying individual passwords to the corresponding services.

Participants in the YC condition immediately began to update the same or similar passwords after examining the feedback interface. On average, participants made 1.8 attempts (σ = 0.71, max = 9) to update the passwords for the accounts they wished to change. All participants tried hard to increase both individual password scores and overall scores but gave up after multiple attempts if the scores did not improve significantly.

### 5.5 Results

The results of an ANOVA test support the hypothesis that the feedback-based YourPassword interface (YC) improved participants’ password behavior compared to the commercial individual password checker (MC) or no feedback (CC). There were no significant effects of participants' education level, major field of study, occupation, age, or gender.

As shown in Table 2, participants' overall security level, use of unique passwords, and dissimilar passwords were significantly higher when they used the YourPassword application. The CC and MC conditions did not differ significantly.

During the post-test, we measured how many final passwords participants could remember correctly. Memorability is an important issue because users may avoid passwords that are difficult to recall. We did not find statistically significant differences in the number of final passwords remembered across different conditions.

We also administered a 5-point Likert scale question to measure the perceived usefulness of the applications. Participants found both YourPassword and the commercial password checker somewhat useful, but their usefulness scores were not significantly different. For the YC condition, we asked participants to rate the usefulness of each feature in YourPassword. On average, participants using YourPassword found the following features at least somewhat helpful:
- Individual score (µ = 4.58, σ = 0.56)
- Password similarity indicators (µ = 4.19, σ = 0.56)
- Grouping of the reused passwords (µ = 3.75, σ = 0.88)
- Placing passwords along the y-axis based on their scores (µ = 4.59, σ = 0.37)

Finally, we asked participants in the MC and YC studies how likely it was that they would use the application to analyze their own password behavior. Participants were statistically significantly more likely to use YourPassword compared with the commercial password checker.

At the end of the study, we asked participants to share their strategies for remembering complex passwords. They mentioned writing passwords on paper, sending themselves emails or text messages with passwords or password hints, and enabling their browsers to remember their passwords. Only a few participants said they would avoid storing passwords for sensitive websites, such as banks or credit cards.

Our evaluation suggests that participants had sufficient security knowledge to create secure passwords individually. All participants followed their own password policies to create new passwords. Several participants used the initials of the services to create new passwords for memorability. Participants also proposed updating passwords that did not include a number, an uppercase character, or a symbol. However, without feedback, all participants in the CC and MC conditions reused the same password on multiple websites, whereas all participants in the YC condition proposed distinct passwords during our experiment. Because YourPassword suggests avoiding password reuse, this feature may be especially valuable.

### 6. Discussion

Regardless of its usability, any password manager must be inherently secure. Like other password managers, YourPassword's current implementation stores encrypted passwords in a database to accurately measure the similarity between new and old passwords. Unlike commercial password managers that require users to generate a master encryption key, YourPassword uses a randomly generated string that is difficult for an attacker to break, and the user does not need to remember the key. Thus, the current implementation of YourPassword provides a better level of security, as the passwords are protected using a full-length random secret key that is hard to break even if the encrypted passwords are leaked.

YourPassword can further enhance security by storing the encryption key in sealed storage using trusted computing technology. However, neither password managers nor YourPassword can defend against a strong adversary capable of stealing the encryption key.

To minimize the attack surface, YourPassword could store the hashes of the passwords instead of the encrypted passwords. Two types of hash functions could be used: a cryptographic hash function (e.g., SHA256) for exact matching, and a Locality Sensitive Hashing (LSH) function for fuzzy matching. Exact matching is needed to detect password reuse, while fuzzy matching is needed to evaluate the similarity between passwords. Using multiple LSH hashes with different threshold values, we can estimate the distance between two passwords. Since LSH is probabilistic, this modified version of YourPassword would eliminate the risk of master key leakage at the cost of score accuracy. However, LSH algorithms may suffer from preimage attacks, where the attacker recovers the input from the hash value in a short time. We leave it as future work to formally investigate the trade-offs between security and score accuracy.

### 7. Related Work

**Feedback Loops:**
Websites provide password strength meters to offer real-time feedback on the strength of a password as a user types. Such meters encourage users to create longer passwords [8, 20]. YourPassword differs from this previous work in two aspects: it visualizes the relationship among all the user’s passwords and provides feedback on the use of similar passwords.

**Password Vulnerabilities:**
Compromising less sensitive sites to attack high-security sites has been observed in websites using email addresses as user identifiers [3]. Several researchers have analyzed the actual deployment of such attacks [15, 21], and many schemes have been developed to evaluate password strength based on attack resistance [4–7, 14, 23, 24]. A recent study revealed that long passwords with no other restrictions provide resistance to guessing attacks, and that dictionary checks rely heavily on the choice of dictionary [13]. Our password strength checking algorithms incorporate findings from these previous studies.

**Human Factors for Password Mechanisms:**
Adams and Sasse emphasized the importance of considering human factors when designing security mechanisms, including passwords [1]. They noted the importance of making system security visible to users, such as providing feedback during the password construction process. Users experience difficulties in creating and remembering attack-resistant passwords under strict policies [12, 16–19, 22]. Rather than aiming to replace passwords, our goal is to help users become aware of their password behavior based on feedback loops and encourage them to improve their password behavior.

Prior studies indicate that the majority of users reuse their passwords across multiple websites [9, 10]. A large-scale password study also revealed that strong passwords are used at fewer sites on average compared to weak passwords [9]. Based on these findings, YourPassword aims to help users avoid sharing the same password on multiple websites by visualizing such information.

A recent proposal uses stories and pictures to help users create memorable passwords [2]. Such a scheme can be combined with YourPassword to help users create secure, unique, and memorable passwords.

### 8. Conclusion

People want to improve their password management behavior but need assistance to do so. Although various password managers have been developed to help users manage multiple, possibly unique passwords for various websites, they face security vulnerabilities and may not adequately change user behavior. Our solution is to apply feedback loops, the effectiveness of which has been demonstrated in the past, such as in speed-limit control systems [11]. By providing a non-invasive reminder about users’ overall password behavior, they become more aware of their current actions and are encouraged to update weak and reused passwords to improve their security. The results of our experimental evaluation suggest further research to help users improve their own password behavior without relying on complex and potentially vulnerable external management tools.

### 9. Acknowledgments

We gratefully thank Payas Gupta, Ruogu Kang, Peter Kinnard, Adrian Perrig, and Akshay Udiavar for their insightful feedback and help with the interface design and implementation. We also thank anonymous reviewers for their valuable comments. This research was supported by NSF under awards CNS-1040801 and CNS-1221006.

### 10. References

[1] A. Adams and M. A. Sasse. Users are not the Enemy. Communications of the ACM, December 1999.
[2] J. Blocki, M. Blum, and A. Datta. Naturally Rehearsing Passwords. In Proceedings of ASIACRYPT, 2013.
[3] J. Bonneau and S. Preibusch. The Password Thicket: Technical and Market Failures in Human Authentication on the Web. In Proceedings of WEIS, 2010.
[4] W. E. Burr, D. F. Dodson, and W. T. Polk. Electronic Authentication Guideline. Technical report, NIST, 2006.
[5] C. Castelluccia, M. Durmuth, and D. Perito. Adaptive Password-Strength Meters from Markov Models. In Proceedings of NDSS, 2012.
[6] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang. The Tangled Web of Password Reuse. In Proceedings of NDSS, 2014.
[7] M. Dell’Amico, P. Michiardi, and Y. Roudier. Password Strength: An Empirical Analysis. In Proceedings of INFOCOM, 2010.
[8] S. Egelman, A. Sotirakopoulos, I. Muslukhov, K. Beznosov, and C. Herley. Does My Password Go up to Eleven? The Impact of Password Meters on Password Selection. In Proceedings of CHI, 2013.
[9] D. Florencio and C. Herley. A Large-Scale Study of Web Password Habits. In Proceedings of WWW, 2007.