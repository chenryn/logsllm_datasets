nal passwords for all eight accounts, including the passwords
they did not suggest changing. We also asked participants
whether they applied a policy to secure Robin’s accounts,
and what strategy they would use to remember the pass-
words they observed or created during the study.
5.4 General Observations
We observed that participants had fundamental security
knowledge to create secure passwords individually. For ex-
6https://www.microsoft.com/security/
pc-security/password-checker.aspx
ample, all participants followed their own password policies
to create a new password and proposed to update passwords
that did not include a number, an uppercase character, or
a symbol. However, without proper feedback, all partici-
pants in CC and MC conditions reused the same password
on multiple websites, whereas all participants in YC pro-
posed distinct passwords during our experiment.
Some participants in CC and MC conditions reused the
same or similar passwords for services that are linked for
usage. For example, two participants, one in CC and one in
MC, reused the same or similar passwords for those services
dealing with banking or credit card information (i.e., Ama-
zon, American Express, Bank of Oklahoma, and PayPal).
Also, one participant in MC mentioned that she would reuse
the same password for Amazon, Facebook, and Gmail, since
she logs into these services using the same email address.
Some participants did not trust the strength measure-
ment using Microsoft’s password checker, because they be-
lieved that their password policies would generate secure
passwords. An interesting observation was that a number
of participants used the initials of the services to create
new passwords for memorability: not only these participants
generated passwords that are meaningful to them but also
linked with the services to tie individual passwords to the
corresponding services.
Participants in YC immediately started to update the
same or similar passwords after examining the feedback in-
terface. On average, participants made 1.8 attempts (σ =
0.71, max = 9) to update the passwords for the accounts
they wished to update. All participants tried hard to in-
crease both individual password scores and overall score.
However, they gave up after multiple attempts if the scores
did not increase signiﬁcantly.
5.5 Results
The results of an ANOVA test support the hypothesis
that the feedback-based YourPassword interface (YC) im-
proved participants’ password behavior as compared with re-
sponse to the commercial individual password checker (MC)
or getting no feedback (CC). There were no eﬀects of par-
ticipants’ education level, major ﬁeld of study, occupation,
age, or gender.
As shown in Table 2, participants’ overall security level,
use of unique passwords, and dissimilar passwords were sig-
niﬁcantly higher when they used the YourPassword ap-
plication. The CC and MC conditions did not diﬀer.
During the post-test, we measured how many ﬁnal pass-
words participants could remember correctly. Memorabil-
ity is an important issue because users may avoid pass-
words that are diﬃcult to recall. We did not ﬁnd statis-
tically signiﬁcant diﬀerences in the number of ﬁnal pass-
words that participants remembered in diﬀerent conditions.
We also gave a 5-point Likert scale question to measure
how useful participants found the application. Participants
found both YourPassword and the commercial password
checker somewhat useful but their usefulness scores were
not signiﬁcantly diﬀerent. For the YC condition, we also
asked how useful each feature in YourPassword was to
the participants. On average, participants using Your-
Password found the following features at least somewhat
helpful:
individual
score (µ = 4.58, σ = .56), passwords similarity indicators
(µ = 4.19, σ = .56), grouping of the reused passwords (µ =
the total score (µ = 3.75, σ = .88),
①
②
✓
✓
②
①
Table 2: Summary of ANOVA test results for overall security, password uniqueness, similarity, memorability, usefulness, and likeliness
to use to analyze the efﬁcacy of YourPassword (YC) compared to individual password checker (MC) and no feedback (CC) (N = 48).
The higher mean that is statistically signiﬁcant from the others is highlighted in bold.
Overall
Uniqueness
Similarity
min: 0, max: 100
min: 0, max: 8
min: 0, max: 1
Memorability
min: 0, max: 8
Usefulness
min:1, max:5
µ
77.83
44.38
44.46
σ ¯X
1.75
6.96
8.54
µ
8.00
6.71
5.60
σ ¯X
.00
.49
.68
µ
.97
.73
.71
σ ¯X
.01
.06
.08
µ
2.44
4.06
2.93
σ ¯X
.70
.68
.71
µ
4.28
3.97
σ
.63
1.11
Likeliness
min:1, max:5
µ
σ
4.31
3.00
.66
1.31
F (2, 45) = 9.17
F (2, 45) = 6.18
F (2, 45) = 5.74
F (2, 45) = 1.48
F (1, 31) = .96
F (1, 31) = 12.97
p < .0005
p = .004
p = .006
p = .239
p = .34
p = .001
YC
MC
CC
Results
µ: mean, σ ¯X : standard error, σ: standard deviation
4.59, σ = .91), and placing passwords along the y-axis based
on their scores (µ = 4.59, σ = .37). Finally we asked par-
ticipants in the MC and YC studies how likely it was that
they would use the application to analyze their own pass-
word behavior. Participants were statistically signiﬁcantly
more likely to use YourPassword compared with the com-
mercial password checker.
At the end of the study, we asked participants to share
their strategies for remembering complex passwords. They
mentioned writing passwords on paper, and sending them-
selves emails or text messages with passwords or password
hints. Twenty participants said that they enable their browsers
to remember their passwords. Just a few participants said
that they would avoid storing their passwords for sensitive
websites, such as banks or credit cards.
Our evaluation suggests that participants had suﬃcient
security knowledge to create secure passwords individually.
All participants followed their own password policies to cre-
ate a new password. Several participants used the initials of
the services to create new passwords for memorability. Par-
ticipants also proposed updating passwords that did not in-
clude a number, an uppercase character, or a symbol. How-
ever, without feedback, all participants in the CC and MC
conditions reused the same password on multiple websites,
whereas all participants in YC proposed distinct passwords
during our experiment. Because YourPassword suggests
that users avoid reusing passwords, and our participants just
did that, this feature may be especially valuable.
6. DISCUSSION
Regardless of its usability, any password manager must
itself be safe. As is true of other password managers, Your-
Password’s current implementation stores encrypted pass-
words in a database so that YourPassword can accurately
measure the similarity between a new password and old pass-
words. Unlike commercial password managers that ask users
to generate a master encryption key, YourPassword’s en-
cryption key is a randomly generated string that is diﬃ-
cult for an attacker to break, and the user does not need
to remember the key. Thus, the current implementation
of YourPassword provides a better level of security com-
pared with other password managers in the sense that the
passwords are protected using a full-length random secret
key that is hard to break even if the encrypted passwords
are leaked. YourPassword can further increase the level
of protection by storing the encryption key in sealed storage
using the trusted computing technology. However, neither
password managers nor YourPassword can defend against
a strong adversary capable of stealing the encryption key.
We might further minimize the attack surface of Your-
Password by storing the hashes of the passwords instead
of storing the encrypted passwords. We can use two types of
hash functions: a cryptographic hash function (e.g., SHA256)
for exact matching, and a Locality Sensitive Hashing (LSH)
function for fuzzy matching. Exact matching is needed to
detect password reuse, whereas fuzzy matching is needed to
evaluate the similarity between passwords. We can obtain
an estimate of the distance between two passwords by using
multiple LSH hashes with diﬀerent threshold values. Since
LSH is probabilistic, this modiﬁed version of YourPass-
word would eliminate the risk of master key leakage at the
cost of the accuracy of a score. However, in contrast to cryp-
tographic hash algorithms, LSH algorithms may suﬀer from
preimage attacks – the attacker recovers the input from the
hash value in short time (e.g., much fewer than 2L attempts,
where L is the hash length) – due to the additional distance
information leaked to the attacker. We leave it as future
work to formally investigate the trade-oﬀs between security
and score accuracy.
7. RELATED WORK
Feedback loops. Websites provide password strength
meters to provide real-time feedback on the strength of a
password as a user types. Such meters encourage users to
create longer passwords [8, 20]. YourPassword is diﬀerent
from this previous work in two aspects: YourPassword
visualizes the relationship among all the user’s passwords
and provides feedback on the use of similar passwords.
Password vulnerabilities. Compromising less sensitive
sites in order to attack sites with high security has been
observed in websites using email addresses as user identi-
ﬁers [3]. Several researchers have analyzed the actual deploy-
ment of such an attack [15,21], and many schemes have been
developed to evaluate password strength based on attack re-
sistance [4–7, 14, 23, 24]. A recent study revealed that long
passwords with no other restrictions provide resistance to
guessing attacks, and that the dictionary check relies heavily
on the choice of dictionary [13]. We designed our password
strength checking algorithms to incorporate ﬁndings from
these previous studies.
Human factors for password mechanism.
Adams
and Sasse emphasized the importance of considering human
factors when designing security mechanisms, including pass-
words [1]. They noted the importance of making system
security visible to users, such as providing feedback during
password construction process. Users experience diﬃculties
in creating and remembering attack-resistant passwords un-
der strict policies [12, 16–19, 22]. Rather than aiming to
replace passwords, our goal is to help users become aware
of their password behavior based on feedback loops and en-
courage them to improve their password behavior.
Prior studies indicate that the majority of users reuse
[10] S. Gaw and E. W. Felten. Password Management Strategies
for Online Accounts. In Proceedings of SOUPS, 2006.
[11] T. Goetz. Harnessing the Power of Feedback Loops. Wired
Magazine, June 2011.
[12] P. Inglesant and M. A. Sasse. The True Cost of Unusable
Password Policies: Password Use in the Wild. In
Proceedings of CHI, 2010.
[13] P. G. Kelley, S. Komanduri, M. L. Mazurek, R. Shay,
T. Vidas, L. Bauer, N. Christin, L. F. Cranor, and J. Lopez.
Guess again (and again and again): Measuring password
strength by simulating password-cracking alrogithms. In
Proceedings of the IEEE Symposium on Security and
Privacy, 2012.
[14] A. Narayanan and V. Shmatikov. Fast Dictionary Attacks on
Passwords Using Time-Space Tradeoff. In Proceedings of
CCS, 2005.
[15] B. Prince. Twitter Details Phishing Attacks Behind Password
Reset. eWeek, January 2010.
[16] R. W. Proctor, M.-C. Lien, K.-P. L. Vu, E. E. Schultz, and
G. Salvendy. Improving Computer Security for
Authentication of Users: Inﬂuence of Proactive Password
Restrictions. Behavior Research Methods, Instruments,
& Computers, 2002.
[17] R. Shay and E. Bertino. A Comprehensive Simulation Tool
for the Analysis of Password Policies. International
journal of Information Security, 2009.
[18] R. Shay, A. Bhargav-Spantzel, and E. Bertino. Password
Policy Simulation and Analysis. In Proceedings of ACM
Workshop on Digital Identity Management, 2007.
[19] J. M. Stanton, K. R. Stam, P. Mastrangelo, and J. Jolton.
Analysis of End User Security Behaviors. Computer &
Security, 2005.
[20] B. Ur, P. Kelley, S. Komanduri, J. Lee, M. Maass, M. L.
Mazurek, T. Passaro, R. Shay, T. Vidas, L. Bauer,
N. Christin, and L. F. Cranor. How Does Your Password
Measure Up? The Effect of Strength Meters on Password
Creation. In Proceedings of USENIX, 2012.
[21] A. Vance. If your Password is 123456, Just Make It HackMe.
The New York Times, January 2010.
[22] K.-P. L. Vu, R. W. Proctor, A. Bhargav-Spantzel, B.-L. B.
Tai, J. Cook, and E. E. Schultz. Improving Password Security
and Memorability to Protect Personal and Organizational
Information. International Journal of Human-Computer
Studies, 2007.
[23] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek.
Password Cracking using Probablistic Context-Free
Grammars. In Proceedings of IEEE Symposium on
Security and Privacy, 2009.
[24] Y. Zhang, F. Monrose, and M. K. Reiter. The Security of
Modern Password Expiration: An Algorithmic Framework
and Empirical Analysis. In Proceedings of CCS, 2010.
their passwords across multiple websites [9, 10]. A large-
scale password study also revealed that strong passwords
are used at fewer sites on average compared to weak pass-
words [9]. Based on these ﬁndings, YourPassword aims
to help users avoid sharing the same password on multiple
websites by visualizing such information.
A recent proposal uses stories and pictures to help users
create memorable passwords [2]. Such a scheme can be
combined with YourPassword to help users create secure,
unique, and memorable passwords.
8. CONCLUSION
People want to improve their password management be-
havior but they need help in doing so. Although various
password managers have been developed to help users man-
age multiple, possibly unique passwords for various websites,
they face security vulnerabilities and may not adequately
change user behavior. Our solution is to apply feedback
loops, the eﬀectiveness of which has been demonstrated in
the past, such as in speed-limit control systems [11]. By pro-
viding a non-invasive reminder about users’ overall password
behavior, they become more aware of their current actions
and are encouraged to update weak and reused passwords to
improve their security. The results of our experimental eval-
uation suggest further research to help users improve their
own password behavior without relying on complex and pos-
sibly vulnerable external management tools.
9. ACKNOWLEDGMENTS
We gratefully thank Payas Gupta, Ruogu Kang, Peter
Kinnard, Adrian Perrig, and Akshay Udiavar for their in-
sightful feedback and help with the interface design and im-
plementation. We also thank anonymous reviewers for their
valuable comments. This research was supported by NSF
under awards CNS-1040801 and CNS-1221006.
10. REFERENCES
[1] A. Adams and M. A. Sasse. Users are not the Enemy.
Communications of the ACM, December 1999.
[2] J. Blocki, M. Blum, and A. Datta. Naturally Rehearsing
Passwords. In Proceedings of ASIACRYPT, 2013.
[3] J. Bonneau and S. Preibusch. The Password Thicket:
Technical and Market Failures in Human Authentication on
the Web. In Proceedings of WEIS, 2010.
[4] W. E. Burr, D. F. Dodson, and W. T. Polk. Electronic
Authentication Guideline. Technical report, NIST, 2006.
[5] C. Castelluccia, M. Durmuth, and D. Perito. Adaptive
Password-Strength Meters from Markov Models. In
Proceedings of NDSS, 2012.
[6] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang.
The Tangled Web of Password Reuse. In Proceedings of
NDSS, 2014.
[7] M. Dell’Amico, P. Michiardi, and Y. Roudier. Password
Strength: An Empirical Analysis. In Proceedings of
INFOCOM, 2010.
[8] S. Egelman, A. Sotirakopoulos, I. Muslukhov, K. Beznosov,
and C. Herley. Does My Password Go up to Eleven? The
Impact of Password Meters on Password Selection. In
Proceedings of CHI, 2013.
[9] D. Florencio and C. Herley. A Large-Scale Study of Web
Password Habits. In Proceedings of WWW, 2007.