CREATE EXTENSION  
```  
创建用户标签表  
```  
create table users (  
  id int primary key,  
  nick text,  
  tags int[]  -- 假设使用int数组来表示用户拥有的标签  
);  
```  
生成10万用户和随机标签  
```  
-- 生成随机标签的函数  
create or replace function gen_rand_arr (tags int, tags_catacity int) returns int[] as $$  
  select array(select ceil(random() * tags_catacity)::int from generate_series(1, tags));  
$$ language sql strict;  
postgres=# select gen_rand_arr(10,1000);  
               gen_rand_arr                  
-------------------------------------------  
 {280,703,893,376,153,753,458,119,141,133}  
(1 row)  
-- 假设每人10-100个标签, 标签总数1000个.  
insert into users select generate_series(1,100000), md5(random()::text), gen_rand_arr(9 + ceil(random()*91)::int, 1000) ;  
```  
根据某个标签圈选10个目标用户   
```  
postgres=# select show_smlar_limit();  
 show_smlar_limit   
------------------  
              0.6  
(1 row)  
postgres=# show smlar.type;    
 smlar.type   
------------  
 cosine  
(1 row)  
postgres=# \do+  
                                   List of operators  
 Schema | Name | Left arg type | Right arg type | Result type | Function | Description   
--------+------+---------------+----------------+-------------+----------+-------------  
 public | %    | anyarray      | anyarray       | boolean     | smlar_op |   
(1 row)  
postgres=# select ''''||tags::text||'''' as v1 from users where id=1 \gset  
postgres=# \echo :v1  
'{74,668,277,6,673,238,400,611,573,737,559,615,266,502,114,401,223,393,104,116,768,257,869,226,375,9,358,752,413,166,481,486,833,758,491,506,996,891,116,568,628,675,183,893,177,296,294,400,688,398,516,456,654,384,681,29,392,39,780,805,204,261,290,37,19,781,542,14,672,658,581,299,332,763,192,508,59,485,908,747,883,423,202}'  
postgres=# select id, smlar(tags, :v1), tags % :v1 from users where tags % :v1 limit 10;  
 id | smlar | ?column?   
----+-------+----------  
  1 |     1 | t  
(1 row)  
Time: 454.579 ms  
-- 修改相似度阈值, 超过20% 相似的就返回  
postgres=# select set_smlar_limit(0.2);  
 set_smlar_limit   
-----------------  
             0.2  
(1 row)  
postgres=# select id, smlar(tags, :v1), tags % :v1 from users where tags % :v1 limit 10;  
  id   |  smlar   | ?column?   
-------+----------+----------  
     1 |        1 | t  
 13805 | 0.226335 | t  
 21515 | 0.209751 | t  
 32683 | 0.221305 | t  
 74386 | 0.208514 | t  
 81936 | 0.211684 | t  
 95575 | 0.200222 | t  
(7 rows)  
Time: 480.429 ms  
```  
创建标签字段索引  
```  
create index on users using gin (tags _int4_sml_ops);  
```  
使用索引加速根据某个标签圈选10个目标用户  
```  
postgres=# select set_smlar_limit(0.6);  
 set_smlar_limit   
-----------------  
             0.6  
(1 row)  
postgres=# select id, smlar(tags, :v1), tags % :v1 from users where tags % :v1 limit 10;  
 id | smlar | ?column?   
----+-------+----------  
  1 |     1 | t  
(1 row)  
```  
### 4、地理信息搜索插件: PostGIS  
开源项目地址: https://postgis.net/  
PostGIS是地理信息、时空数据库, 包括空间类型、轨迹等类型, 基于这些类型的索引, 操作符等. 应用广泛, 例如地图、基于地理位置的社交、共享出行、外卖等应用.    
用法举例.   
创建插件  
```  
postgres=# create extension postgis;  
CREATE EXTENSION  
```  
创建POI表, 表示地图上的餐饮店位置  
```  
create table tbl_poi (  
  id int primary key,  
  info text,  
  pos geometry  
);  
```  
生成10万条记录, 经纬度圈定在一个范围内随机生成   
```  
insert into tbl_poi select generate_series(1,100000), md5(random()::text),   
  ST_SetSRID(ST_MakePoint(120+random(), 35+random()),4326);  
```  
输入一个经纬度, 由近到远排序输出10条记录  
```  
select id,info,pos  ST_SetSRID(ST_MakePoint(120, 35),4326) as distance   
  from tbl_poi order by pos  ST_SetSRID(ST_MakePoint(120, 35),4326) limit 10;  
  id   |               info               |      distance         
-------+----------------------------------+---------------------  
 87207 | 6c3be5ba80405c1bcbc41ddeabe4845e | 0.00380898314902217  
  2395 | bea776d9ea01fe71aa7217588ca0e340 | 0.00475504602701775  
 83860 | 3346ea9e673776bef89e8bfb90176e5f | 0.00476231353857793  
 20391 | 4b6188e5b45e96b299d2bbdf0dfccc88 |  0.0051285288529832  
 65722 | 75cb60337e72d23e27590ee36b6d8553 | 0.00679551058653407  
 70932 | e5203b78d0294740e036106f70b2e58b | 0.00869448513564811  
 42792 | 9aba360479ba28c8a98107af6f45cb62 | 0.00936264324089115  
 38434 | 3c2565401c1b4e1d010d9326c6913e07 | 0.00937400159588758  
 30599 | 2d5d0ce802bffb2a269312338532def2 | 0.00991881579948414  
 80021 | 018dbf83a82342e4fa02fa9b50301fca |  0.0110926771171926  
(10 rows)  
Time: 62.047 ms    
```  
创建索引  
```  
create index on tbl_poi using gist (pos);  
```  
使用索引加速, 输入一个经纬度, 由近到远排序输出10条记录  
```  
  id   |               info               |      distance         
-------+----------------------------------+---------------------  
 87207 | 6c3be5ba80405c1bcbc41ddeabe4845e | 0.00380898314902217  
  2395 | bea776d9ea01fe71aa7217588ca0e340 | 0.00475504602701775  
 83860 | 3346ea9e673776bef89e8bfb90176e5f | 0.00476231353857793  
 20391 | 4b6188e5b45e96b299d2bbdf0dfccc88 |  0.0051285288529832  
 65722 | 75cb60337e72d23e27590ee36b6d8553 | 0.00679551058653407  
 70932 | e5203b78d0294740e036106f70b2e58b | 0.00869448513564811  
 42792 | 9aba360479ba28c8a98107af6f45cb62 | 0.00936264324089115  
 38434 | 3c2565401c1b4e1d010d9326c6913e07 | 0.00937400159588758  
 30599 | 2d5d0ce802bffb2a269312338532def2 | 0.00991881579948414  
 80021 | 018dbf83a82342e4fa02fa9b50301fca |  0.0110926771171926  
(10 rows)  
Time: 6.205 ms  
```  
### 5、中文分词插件: pg_jieba 
开源项目地址: https://github.com/jaiminpan/pg_jieba  
中文分词, 顾名思义是将中文文本切分为有意义的词语, 用户就可以通过词语矢量进行中文匹配检索.    
用法举例.  
编译pg_jieba    
```    
git clone --depth=1 https://github.com/jaiminpan/pg_jieba    
cd pg_jieba    
# initilized sub-project    
git submodule update --init --recursive    
mkdir build    
cd build    
cmake -DCMAKE_PREFIX_PATH=/home/postgres/tmp_basedir_polardb_pg_1100_bld ..    
make    
make install    
```    
安装pg_jieba插件  
```    
create extension pg_jieba ;    
```    
测试中文分词  
```    
select * from to_tsquery('jiebacfg', '是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。');    
select * from to_tsvector('jiebacfg', '是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。');    
select * from ts_token_type('jieba');    
select * from ts_debug('jiebacfg', '是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。');    
```  
```  
postgres=# create extension pg_jieba ;    
CREATE EXTENSION    
postgres=# select * from to_tsquery('jiebacfg', '是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。');    
                                                            to_tsquery                                                                
----------------------------------------------------------------------------------------------------------------------------------    
 '拖拉机' & '学院' & '手扶拖拉机' & '专业' & '不用' & '多久' & '会' & '升职' & '加薪' & '当上' & 'ceo' & '走上' & '人生' & '巅峰'    
(1 row)    
postgres=# select * from to_tsvector('jiebacfg', '是拖拉机学院手扶拖拉机专业的。不用多久，我就会升职加薪，当上CEO，走上人生巅峰。');    
                                                                to_tsvector                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------    
 'ceo':18 '不用':8 '专业':5 '人生':21 '会':13 '加薪':15 '升职':14 '多久':9 '学院':3 '巅峰':22 '当上':17 '手扶拖拉机':4 '拖拉机':2 '走上':20    
(1 row)    
postgres=# select * from ts_token_type('jieba');    