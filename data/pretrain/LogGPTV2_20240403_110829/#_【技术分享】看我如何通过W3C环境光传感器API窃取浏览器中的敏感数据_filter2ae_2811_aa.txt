# 【技术分享】看我如何通过W3C环境光传感器API窃取浏览器中的敏感数据
|
##### 译文声明
本文是翻译文章，文章来源：lukaszolejnik.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
翻译：[360代码卫士](http://bobao.360.cn/member/contribute?uid=2873043487)
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言**
本文会说明并演示如何巧妙地通过一款让人称奇的工具提取浏览器中的敏感信息。这款工具就是智能手机或笔记本电脑的环境光传感器。
**（1） 我们提供了关于光传感器API的背景信息和当前的相关讨论情况，将其暴露给更多网站。**
**（2）
我们说明了用户设备屏幕的颜色如何能够影响到传感器读数，并解释了它会带来严重的安全和隐私后果。我们主要关注从跨域框架中提取浏览历史和窃取数据，它可能会让攻击者发现敏感文档和图像内容（如账户恢复的QR码）。**
****
**（3） 我们讨论了浏览器厂商和标准维护者们可缓解该风险的应对措施。** **** ****
这种攻击在火狐和Chrome的当前版本（实验结果）、在带有光传感器的安卓和桌面设备如MacBook Pro中均起作用。
本文是作者以及[@LukOlejnik](https://twitter.com/lukOlejnik/)和[@arturjanc](https://twitter.com/arturjanc/)的合作成果。
**背景：智能手机中的光传感器**
如今，所有智能手机和很多现代笔记本电脑都配有一个环境光传感器。这种传感器会放置在设备顶端的位置，通常挨近前端的摄像头位置。智能手机一直都利用环境光读数来调整显示两度以节约用电量，或者进行近感探测。光条件信息可用于设计响应式智能手机应用程序或者配置硬件本身。多少有点毫不让人惊讶的是，光传感器读数可能非常敏感。
环境光传感器返回的数据非常精确。光线强度用照明单位勒克司来标示，输出数据范围是0（黑暗）到好几万（勒克司）传感器的读数频率相对较高，介于100到200毫秒。
为了提高跟原生app的竞争力，网站不久之后或许能够访问环境光读数。一个W3C设备和传感器工作组目前正在讨论是否允许网站在不要求用户许可的情况下读取光传感器。Chrome和火狐浏览器最新版本都有API实现。
**传感器隐私**
这项研究源于最近W3C关于通用传感器API的讨论，其中一种提案认为读取某些传感器数据不应当要求请求获取用户许可。作为回应，我们决定调查一下环境光传感器（ALS）背后可能存在的恶意意图；此前我已经分析了ALS的安全和隐私问题，它可能会引入数据追踪、分析和泄露的新方法：其中一个示例讨论了“检测两个人同时位于同一房间内”，另外一个例子分析了发现银行PIN码的可能性。
本文将会把这些担忧放在一边，主要考虑传感器读数如何帮助活跃攻击者从用户浏览器中提取隐私数据。
现在，我们来重点讨论真实的攻击。
**使用光传感器提取信息**
到底如何通过环境光传感器提取私人数据？我们的攻击基于如下两个观察结果：
**用户屏幕的颜色能携带有用信息，而网站出于安全原因的考虑无法直接获取。**
**攻击者能通过光传感器读数区分出不同的屏幕颜色。**
我们随后会对第二点进行更详细的解读，但一言以蔽之，来自屏幕的光能对光传感器读数产生巨大影响，网站从而能够判断出用户屏幕的颜色（或者在最简单的情况下，能够区别黑屏和白屏）。
以上提到的第一点可能更让人惊讶；毕竟，所有的网站都能控制自己在用户屏幕上所展示的信息，那么为何这种数据会很有意思呢？在两种情况下网站无法直接获取用户部分屏幕的颜色：
**已访问链接的颜色。出于隐私原因的考虑，浏览器会在页面所展示链接的颜色上对开发人员说谎；否则恶意开发人员就能够应用:visited
的多种style并检测到用户历史中出现了哪些网站。**
**跨域资源。同源策略阻止evil.com直接访问来自victim.com的资源。然而，虽然站点无法检查来自其它来源的框架或图像，他们能够在屏幕上做出展示并更改如何对用户呈现，包括任意缩放比例并更改颜色等。**
我们的攻击依赖于将此类资源展示在屏幕上并检测到它们的颜色，每次都泄露一点信息。如下是这种攻击如何在实际中起作用（使用我们早前冗长的展示）：
**检测访问过的链接**
由于网站能够在已访问和未访问链接中应用不同的style，但无法检测到这些链接是如何展示给用户的，因此，我们使用传感器来识别出它的真实颜色。
（1） 设置链接的style：已访问过的（白色），未访问过的（黑色）。
（2） 校准：展示一个白色背景，然后跟上黑色背景从而识别出用户环境中的光级别；这也有可能实现但更难，如果传感器读数波动幅度大的话。
（3） 循环访问链接清单，一个链接一个链接地访问，然后将它们像一个大长方形那样展示出来，填满整个屏幕。已访问过的链接会显示为白色，未访问的显示为黑色。
（4） 记录光级别作为展示每个链接的响应方式，识别出链接的颜色。由于我们在第二步已经校准了屏幕，因此我们就能知道每个读数所代表的颜色。
最后，攻击者会获取屏幕是白色的链接清单，并且知道用户之前已经访问过给定的页面。
虽然在PoC演示中，我们依靠的是假定光条件不会在提取阶段发生变化，但在处理这些情况中使用这些演示也应该没问题。在第一个演示中，我们想要强调的是光读数会发生变化。然而，在现实中不难克服这个障碍。
**窃取跨域资源**