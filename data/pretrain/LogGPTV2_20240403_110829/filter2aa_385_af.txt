it.
Youcanusethisexactsameloopinglogicwithmapsas
welltoreturneachkey/valuepair.
Concurrency
Muchlikethecontrolstructuresalreadyreviewed,Gohasa
muchsimplerconcurrencymodelthanotherlanguages.To
executecodeconcurrently,youcanusegoroutines,whichare
functionsormethodsthatcanrunsimultaneously.Theseare
oftendescribedaslightweightthreadsbecausethecostof
creatingthemisminimalwhencomparedtoactualthreads.
Tocreateagoroutine,usethegokeywordbeforethecallto
amethodorfunctionyouwishtorunconcurrently:
❶funcf(){
fmt.Println("ffunction")
}
funcmain(){
❷gof()
time.Sleep(1*time.Second)
fmt.Println("mainfunction")
}
Inthisexample,youdefineafunction,f()❶,thatyoucall
inyourmain()function,theprogram’sentrypoint.Youpreface
thecallwiththekeywordgo❷,meaningthattheprogramwill
runfunctionf()concurrently;inotherwords,theexecutionof
yourmain()functionwillcontinuewithoutwaitingforf()to
complete.Youthenuseatime.Sleep(1*time.Second)toforcethe
main()functiontopausetemporarilysothatf()cancomplete.If
youdidn’tpausethemain()function,theprogramwouldlikely
exitpriortothecompletionoffunctionf(),andyouwould
neverseeitsresultsdisplayedtostdout.Donecorrectly,you’ll
seemessagesprintedtostdoutindicatingthatyou’vefinished
executingboththef()andmain()functions.
Gocontainsadatatypecalledchannelsthatprovidea
mechanismthroughwhichgoroutinescansynchronizetheir
executionandcommunicatewithoneanother.Let’slookatan
examplethatuseschannelstodisplaythelengthofdifferent
stringsandtheirsumsimultaneously:
❶funcstrlen(sstring,cchanint){
❷cchild"`
Bazstring`xml:"parent>child"`
}
Thestringvalues,wrappedinbackticksandfollowingthe
structfields,arefieldtags.Fieldtagsalwaysbeginwiththe
tagname(xmlinthiscase),followedbyacolonandthe
directiveenclosedindoublequotes.Thedirectivedefineshow
thefieldsshouldbehandled.Inthiscase,youaresupplying
directivesthatdeclarethatBarshouldbetreatedasanattribute
namedid,notanelement,andthatBazshouldbefoundina
subelementofparent,namedchild.Ifyoumodifytheprevious
JSONexampletonowencodethestructureasXML,you
wouldseethefollowingresult:
HelloShabado
TheXMLencoderreflectivelydeterminesthenamesof
elements,usingthetagdirectives,soeachfieldishandled
accordingtoyourneeds.
Throughoutthisbook,you’llseethesefieldtagsusedfor
dealingwithotherdataserializationformats,includingASN.1
andMessagePack.We’llalsodiscusssomerelevantexamples
ofdefiningyourowncustomtags,specificallywhenyoulearn
howtohandletheServerMessageBlock(SMB)Protocol.
SUMMARY
Inthischapter,yousetupyourGoenvironmentandlearned
aboutthefundamentalaspectsoftheGolanguage.Thisisnot
anexhaustivelistofallGo’scharacteristics;thelanguageis
fartoonuancedandlargeforustocramitallintoasingle
chapter.Instead,weincludedtheaspectsthatwillbemost
usefulinthechaptersthatfollow.We’llnowturnourattention
topracticalapplicationsofthelanguageforsecurity
practitionersandhackers.HereweGo!
2
TCP,SCANNERS,ANDPROXIES
Let’sbeginourpracticalapplicationofGowiththe
TransmissionControlProtocol(TCP),thepredominant
standardforconnection-oriented,reliablecommunicationsand
thefoundationofmodernnetworking.TCPiseverywhere,and
ithaswell-documentedlibraries,codesamples,andgenerally
easy-to-understandpacketflows.YoumustunderstandTCPto
fullyevaluate,analyze,query,andmanipulatenetworktraffic.
Asanattacker,youshouldunderstandhowTCPworksand
beabletodevelopusableTCPconstructssothatyoucan
identifyopen/closedports,recognizepotentiallyerrantresults
suchasfalse-positives—forexample,syn-floodprotections—
andbypassegressrestrictionsthroughportforwarding.Inthis
chapter,you’lllearnbasicTCPcommunicationsinGo;builda
concurrent,properlythrottledportscanner;createaTCPproxy
thatcanbeusedforportforwarding;andre-createNetcat’s
“gapingsecurityhole”feature.
Entiretextbookshavebeenwrittentodiscusseverynuance
ofTCP,includingpacketstructureandflow,reliability,
communicationreassembly,andmore.Thislevelofdetailis
beyondthescopeofthisbook.Formoredetails,youshould
readTheTCP/IPGuidebyCharlesM.Kozierok(NoStarch
Press,2005).
UNDERSTANDINGTHETCP
HANDSHAKE
Forthosewhoneedarefresher,let’sreviewthebasics.Figure
2-1showshowTCPusesahandshakeprocesswhenquerying
aporttodeterminewhethertheportisopen,closed,or
filtered.
Figure2-1:TCPhandshakefundamentals
Iftheportisopen,athree-wayhandshaketakesplace.
First,theclientsendsasynpacket,whichsignalsthe
beginningofacommunication.Theserverthenrespondswith
asyn-ack,oracknowledgmentofthesynpacketitreceived,
promptingtheclienttofinishwithanack,oracknowledgment
oftheserver’sresponse.Thetransferofdatacanthenoccur.If
theportisclosed,theserverrespondswitharstpacketinstead
ofasyn-ack.Ifthetrafficisbeingfilteredbyafirewall,the
clientwilltypicallyreceivenoresponsefromtheserver.
Theseresponsesareimportanttounderstandwhenwriting
network-basedtools.Correlatingtheoutputofyourtoolsto
theselow-levelpacketflowswillhelpyouvalidatethatyou’ve
properlyestablishedanetworkconnectionandtroubleshoot
potentialproblems.Asyou’llseelaterinthischapter,youcan
easilyintroducebugsintoyourcodeifyoufailtoallowfull
client-serverTCPconnectionhandshakestocomplete,
resultingininaccurateormisleadingresults.
BYPASSINGFIREWALLSWITH
PORTFORWARDING
Peoplecanconfigurefirewallstopreventaclientfrom
connectingtocertainserversandports,whileallowingaccess
toothers.Insomecases,youcancircumventtheserestrictions
byusinganintermediarysystemtoproxytheconnection
aroundorthroughafirewall,atechniqueknownasport
forwarding.
Manyenterprisenetworksrestrictinternalassetsfrom
establishingHTTPconnectionstomalicioussites.Forthis
example,imagineanefarioussitecalledevil.com.Ifan
employeeattemptstobrowseevil.comdirectly,afirewall
blockstherequest.However,shouldanemployeeownan
externalsystemthat’sallowedthroughthefirewall(for
example,stacktitan.com),thatemployeecanleveragethe
alloweddomaintobounceconnectionstoevil.com.Figure2-2
illustratesthisconcept.
Figure2-1:ATCPproxy
Aclientconnects,throughafirewall,tothedestinationhost
stacktitan.com.Thishostisconfiguredtoforwardconnections
tothehostevil.com.Whileafirewallforbidsdirect
connectionstoevil.com,aconfigurationsuchastheoneshown
herecouldallowaclienttocircumventthisprotection
mechanismandaccessevil.com.
Youcanuseportforwardingtoexploitseveralrestrictive
networkconfigurations.Forexample,youcouldforward
trafficthroughajumpboxtoaccessasegmentednetworkor
accessportsboundtorestrictiveinterfaces.
WRITINGATCPSCANNER
OneeffectivewaytoconceptualizetheinteractionofTCP
portsisbyimplementingaportscanner.Bywritingone,you’ll
observethestepsthatoccurinaTCPhandshake,alongwith
theeffectsofencounteredstatechanges,whichallowyouto
determinewhetheraTCPportisavailableorwhetherit
respondswithaclosedorfilteredstate.
Onceyou’vewrittenabasicscanner,you’llwriteonethat’s
faster.Aportscannermayscanseveralportsbyusingasingle
contiguousmethod;however,thiscanbecometime-
consumingwhenyourgoalistoscanall65,535ports.You’ll
explorehowtouseconcurrencytomakeaninefficientport
scannermoresuitableforlargerport-scanningtasks.
You’llalsobeabletoapplytheconcurrencypatternsthat
you’lllearninthissectioninmanyotherscenarios,bothinthis
bookandbeyond.
TestingforPortAvailability
Thefirststepincreatingtheportscannerisunderstandinghow
toinitiateaconnectionfromaclienttoaserver.Throughout
thisexample,you’llbeconnectingtoandscanning
scanme.nmap.org,aservicerunbytheNmapproject. Todo
this,you’lluseGo’snetpackage:net.Dial(network,addressstring).
Thefirstargumentisastringthatidentifiesthekindof
connectiontoinitiate.ThisisbecauseDialisn’tjustforTCP;it
canbeusedforcreatingconnectionsthatuseUnixsockets,
UDP,andLayer4protocolsthatexistonlyinyourhead(the
authorshavebeendownthisroad,andsufficeittosay,TCPis
verygood).Thereareafewstringsyoucanprovide,butfor
thesakeofbrevity,you’llusethestringtcp.
ThesecondargumenttellsDial(network,addressstring)thehost
towhichyouwishtoconnect.Noticeit’sasinglestring,nota
stringandanint.ForIPv4/TCPconnections,thisstringwilltake
theformofhost:port.Forexample,ifyouwantedtoconnectto
scanme.nmap.orgonTCPport80,youwouldsupply
scanme.nmap.org:80.
Nowyouknowhowtocreateaconnection,buthowwill
1
youknowiftheconnectionissuccessful?You’lldothis
througherrorchecking:Dial(network,addressstring)returnsConnand
error,anderrorwillbeniliftheconnectionissuccessful.So,to
verifyyourconnection,youjustcheckwhethererrorequalsnil.
Younowhaveallthepiecesneededtobuildasingleport
scanner,albeitanimpoliteone.Listing2-1showshowtoputit
together.(Allthecodelistingsattherootlocationof/exist
undertheprovidedgithubrepohttps://github.com/blackhat-
go/bhg/.)
packagemain
import(
"fmt"
"net"
)
funcmain(){
_,err:=net.Dial("tcp","scanme.nmap.org:80")
iferr==nil{
fmt.Println("Connectionsuccessful")
}
}
Listing2-1:Abasicportscannerthatscansonlyoneport(/ch-2/dial/main.go)
Runthiscode.YoushouldseeConnectionsuccessful,provided
youhaveaccesstothegreatinformationsuperhighway.
PerformingNonconcurrentScanning
Scanningasingleportatatimeisn’tuseful,anditcertainly
isn’tefficient.TCPportsrangefrom1to65535;butfor
testing,let’sscanports1to1024.Todothis,youcanuseafor
loop:
fori:=1;i<=1024;i++{
fori:=1;i<=1024;i++{
}
Nowyouhaveanint,butremember,youneedastringas
thesecondargumenttoDial(network,addressstring).Thereareat
leasttwowaystoconverttheintegerintoastring.Onewayis
tousethestringconversionpackage,strconv.Theotherwayis
touseSprintf(formatstring,a...interface{})fromthefmtpackage,
which(similartoitsCsibling)returnsastringgeneratedfroma
formatstring.
CreateanewfilewiththecodeinListing2-2andensure
thatbothyourloopandstringgenerationwork.Runningthis
codeshouldprint1024lines,butdon’tfeelobligatedtocount
them.
packagemain
import(
"fmt"
)
funcmain(){
fori:=1;i<=1024;i++{
address:=fmt.Sprintf("scanme.nmap.org:%d",i)
fmt.Println(address)
}
}
Listing2-2:Scanning1024portsofscanme.nmap.org(/ch-2/tcp-scanner-