title:A First Analysis of Multipath TCP on Smartphones
author:Quentin De Coninck and
Matthieu Baerts and
Benjamin Hesmans and
Olivier Bonaventure
A First Analysis of Multipath TCP
on Smartphones
Quentin De Coninck1(B), Matthieu Baerts2, Benjamin Hesmans1,
and Olivier Bonaventure1
1 Universit´e catholique de Louvain, Louvain-la-Neuve, Belgium
{quentin.deconinck,benjamin.hesmans,olivier.bonaventure}@uclouvain.be
2 Tessares SA, Louvain-la-Neuve, Belgium
PI:EMAIL
http://smartphone.multipath-tcp.org
Abstract. Multipath TCP is a recent TCP extension that enables mul-
tihomed hosts like smartphones to send and receive data over multiple
interfaces. Despite the growing interest in this new TCP extension, little
is known about its behavior with real applications in wireless networks.
This paper analyzes a trace from a SOCKS proxy serving smartphones
using Multipath TCP. This ﬁrst detailed study of real Multipath TCP
smartphone traﬃc reveals several interesting points about its behavior in
the wild. It conﬁrms the heterogeneity of wireless and cellular networks
which inﬂuences the scheduling of Multipath TCP. The analysis shows
that most of the additional subﬂows are never used to send data. The
amount of reinjections is also quantiﬁed and shows that they are not a
major issue for the deployment of Multipath TCP. With our method-
ology to detect handovers, around a quarter of the connections using
several subﬂows experience data handovers.
1 Introduction
TCP is the dominant transport protocol, both on the wired Internet and in
wireless networks. Over the years, TCP has evolved and included various opti-
mizations. Multipath TCP is the last major extension to TCP [9,20]. It enables a
multihomed host to exchange data for a single connection over diﬀerent interfaces.
Multipath TCP was standardized in early 2013. Although the extension is still
young, it is already used to support several commercial services. In September
2013, Apple has deployed Multipath TCP on hundreds of millions of smart-
phones and tablets to improve the user experience for the Siri voice recognition
application. In July 2015, Korean Telecom announced that they have enabled
Multipath TCP on Android smartphones to bond WiFi and LTE together. These
smartphones reach download speeds of 800 Mbps and more. In September 2015,
OVH, a French ISP and hosting provider, announced their OverTheBox ser-
vice that uses Multipath TCP to enable SMEs to bond several DSL over cable
links together. Other use cases are being explored and it can be expected that
Multipath TCP traﬃc will grow in the coming years.
c(cid:2) Springer International Publishing Switzerland 2016
T. Karagiannis and X. Dimitropoulos (Eds.): PAM 2016, LNCS 9631, pp. 57–69, 2016.
DOI: 10.1007/978-3-319-30505-9 5
58
Q. De Coninck et al.
Despite the important role that Multipath TCP could play on smartphones,
little is known about its behavior with real applications. Most of the articles on
Multipath TCP performance relied on lab measurements [15,19] or were carried
out with test applications [1,7,8].
This paper provides the ﬁrst detailed analysis of the operation of Multi-
path TCP on smartphones used by real users. Since Multipath TCP is not yet
deployed on Internet and cloud servers, installing a Multipath TCP kernel is
not suﬃcient to automatically generate Multipath TCP traﬃc. To beneﬁt from
Multipath TCP, a SOCKS proxy had to be installed on a server supporting Mul-
tipath TCP and the smartphones were conﬁgured to use the SOCKS server as
their relay for all connections. This is the same setup as KT’s commercial deploy-
ment. By sharing the studied trace, the measurement tools and the analysis, this
paper improves our understanding of the dynamics of this new protocol.
This paper is organized as follows. It ﬁrst provides a brief overview of Multi-
path TCP and discusses related work in Sect. 2. It describes the collected dataset
in Sect. 3 and gives ﬁrst characteristics in Sect. 4. In Sect. 5, it takes a closer look at
the performances of Multipath TCP. It concludes in Sect. 6 with the main lessons
that we learned from this ﬁrst detailed analysis of Multipath TCP packet traces.
2 Multipath TCP and Related Work
Multipath TCP is a recent TCP extension that enables the transmission of the
data belonging to one connection over diﬀerent paths or interfaces [9]. A Multi-
path TCP connection is a logical association that provides a bytestream service.
To understand its operation, let us see brieﬂy an example on how a smartphone
could use Multipath TCP. To request the utilization of Multipath TCP, the
smartphone adds the MP CAPABLE option in SYN segment sent over its cellular
interface. This option contains some ﬂags and a key [9]. If the server supports
Multipath TCP, it includes its key in the MP CAPABLE option sent in the SYN+ACK.
According to the Multipath TCP terminology, this TCP connection is called the
initial subﬂow [9]. The smartphone can use it to exchange data over the cel-
lular interface. If the smartphone wants to also send data for this connection
over its WiFi interface, it sends a new SYN segment with the MP JOIN option
over this interface. This option contains a token derived from the key announced
by the server in the MP CAPABLE option. This token identiﬁes the Multipath
TCP connection on the server side. The server replies with a SYN+ACK contain-
ing the MP JOIN option and the second subﬂow is established. At this stage,
the Multipath TCP connection contains two subﬂows, but this number is not
ﬁxed. The WiFi subﬂow can stop when the smartphone goes away from access
point. At this point, the smartphone can advertise the proxy that it lost one
address through a REMOVE ADDR sent unreliably in TCP options. Another sub-
ﬂow can be created when another IP address is learned from a diﬀerent access
point. Multipath TCP sends data over any of the available subﬂows. Two levels
of sequence numbers are used by Multipath TCP : the regular TCP sequence
number and the Data Sequence Number (DSN). The DSN corresponds to the
A First Analysis of Multipath TCP on Smartphones
59
Multipath TCP bytestream and when data is sent over a subﬂow, its DSN is
mapped to the regular sequence numbers with the DSS option that also contains
DSN acknowledgements. When losses occur, Multipath TCP can retransmit data
over a diﬀerent subﬂow. This operation is called a reinjection [20].
The operation of a Multipath TCP implementation depends on several algo-
rithms that are not standardized by the IETF. First, the path manager deﬁnes
the strategy used to create and delete subﬂows. The smartphones use the
full-mesh path manager that creates one subﬂow over each pair of interfaces as
soon as the initial subﬂow has been fully established or as soon as a new address
has been learned. Second, the packet scheduler [16] selects, among the active
subﬂows that have an open congestion window, the subﬂow that will be used to
send the data. The smartphones and the proxy used the default Multipath TCP
scheduler in the Linux kernel that prefers the subﬂow with the smallest RTT.
Third, the congestion controller. Here, the standard one (LIA) was used.
Various researchers have analyzed the performance of Multipath TCP
through measurements. Raiciu et al. [19] discuss how Multipath TCP can be
used to support mobile devices and provide early measurement results. Paasch
et al. [15] propose three modes for the operation of Multipath TCP in wireless
networks and analyse measurements of handovers. Chen et al. [1] analyze the
performance of Multipath TCP in WiFi/cellular networks by using bulk transfer
applications running on laptops. Ferlin et al. [8] analyze how Multipath TCP
reacts to buﬀerbloat and propose a mitigation technique. As of this writing, this
mitigation technique has not been included in the Linux Multipath TCP imple-
mentation. Ferlin et al. [7] propose a probing technique to detect low performing
paths and evaluates it in wireless networks. Deng et al. [4] compare the perfor-
mance of single-path TCP over WiFi and LTE networks with Multipath TCP on
multi-homed devices by using active measurements and replaying HTTP traf-
ﬁc observed on mobile applications. They show that Multipath TCP provides
beneﬁts for long ﬂows but not for short ones, for which the selection of inter-
face for the initial subﬂow is important from a performance viewpoint. Hesmans
et al. [11] analyze a one week-long server trace supporting Multipath TCP.
3 Dataset
Although Multipath TCP is already used by hundred of millions of Apple smart-
phones to support the Siri voice recognition application, it is diﬃcult to collect
both WiFi and cellular traces without cooperation from an ISP. Instead, a Multi-
path TCP capable SOCKS proxy was set up (like KT) and this analysis focuses on
the Multipath TCP implementation in the Linux kernel [14]. This implementation
is distributed from http://multipath-tcp.org and can be integrated in Android.
The dataset covers the traﬃc produced by a dozen of users using Nexus 5
smartphones running Android 4.4 with a modiﬁed Linux kernel that includes
Multipath TCP v0.89.5. These users were either professors, PhD or Master stu-
dents at Universit´e catholique de Louvain. While some of them used their device
to go only on the Internet, others are still using them as their main phone.
60
Q. De Coninck et al.
However, installing Multipath TCP on the smartphones is not suﬃcient to use
it for all connections established by applications. As of this writing, there are
probably only a few dozens of Multipath TCP enabled servers on the Internet
and these are rarely accessed by real smartphone applications. To force these
applications to use Multipath TCP, ShadowSocks1 was installed on each smart-
phone and conﬁgured to use a SOCKS server that supports Multipath TCP for
all TCP connections. Note that since ShadowSocks does not support IPv6, this
trace only contains IPv4 packets. The smartphones thus use Multipath TCP over
their WiFi and cellular interfaces to reach the SOCKS server and this server uses
regular TCP to interact with the ﬁnal destinations. From the server side, all the
connections from the dozen smartphones appear as coming from the SOCKS
server. This implies that the external (cellular or WiFi) IP address of the smart-
phone is not visible to the servers that it contacts. This might aﬀect the operation
of some servers that adapt their behavior (e.g. the initial congestion window) in
function of the client IP address. Moreover, note that the ShadowSocks client
sends DNS requests over TCP.
A special Android application [3] managing the utilization of the cellular
and WiFi interfaces was also installed on each smartphone. Smartphones with
Android 4.4 assume that only one wireless interface is active at a time. When such
a smartphone switches from cellular to WiFi, it automatically resets all existing
TCP connections by using Android speciﬁc functions. This application enables
the cellular and WiFi interfaces simultaneously. It also controls the routing tables
and updates the policy routes that are required for Multipath TCP every time
the smartphone connects to a wireless network. Thanks to this application, the
modiﬁed Nexus 5 can be used by any user since it does not require any networking
knowledge.
The SOCKS proxy ran tcpdump to collect all the packets exchanged with
the smartphones. Measurements were performed in Belgium from March 8th to
April 28th 2015. Over this period of 7 weeks, more than 71 millions Multipath
TCP packets were collected for a total of 25.4 GBytes over 390,782 Multipath
TCP connections.2 To our knowledge, there is no equivalent public dataset. The
analysis scripts are also open-sourced [2,3].
4 Characterization of the Trace
The main characteristics of the Multipath TCP connections in the dataset are
ﬁrst analyzed. The destination ports of the captured packets are not suﬃcient to
identify the application level protocol. Since the smartphone connects through
a SOCKS proxy, all the packets are sent towards the destination port used by
the proxy (443 to prevent middlebox interferences). The real destination port
is extracted from the SOCKS command sent by the ShadowSocks client at the
beginning of each connection. As shown on Table 1, most of the connections and
data bytes are related to Web traﬃc. Since ShadowSocks sends DNS requests
1 Available at http://shadowsocks.org.
2 Anonymized traces available: http://crawdad.org/uclouvain/mptcp smartphone.
A First Analysis of Multipath TCP on Smartphones
61
Table 1. Statistics about destination port fetched by smartphones.
Port
# connections % connections Bytes
% bytes
< 0.1
53
80
443
4070
5228
8009
107,012
103,597
104,223
571
10,602
10,765
Others
54,012
27.4
26.5
26.7
0.1
2.7
2.8
13.8
17.4 MB
14,943 MB 58.8
9,253 MB 36.4
91.7 MB
0.4
27.3 MB
0.97 MB
0.1
< 0.1
1,090 MB 4.3
over TCP, it is expected to have a large fraction of the connections using port
53. Among other popular port numbers, there are ports 4070 — e.g., used by
Spotify —, Google Services (5228) and Google Chromecast (8009).
65 % of the observed connections last less than 10 s. In particular, 4.3 % are
failed connections, i.e. the ﬁrst SYN was received and answered by the proxy,
but the third ACK was lost (or a RST occurred). 20.8 % of the connections last
more than 100 s. Six of them last for more than one entire day (up to nearly two
days).
Looking at the bytes carried by each connection, most (86.9 %) of them carry
less than 10 KBytes. In particular, 3.1 % of the connections carry between 9 and
11 bytes. Actually, those are empty connections, since the SOCKS command are
7 bytes long, two bytes are consumed by the SYNs and the use of the remaining
two bytes depend on how the connections were closed (RST or FIN). The longest