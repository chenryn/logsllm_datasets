5．分组0是整个匹配，分组1包含第一组括号，分组2包含第二组括号。
6．句号和括号可以用反斜杠转义：\.、\（和\）。
7．如果正则表达式没有分组，就返回字符串的列表。如果正则表达式有分组，
就返回字符串的元组的列表。
8．| 字符表示匹配两个组中的“任何一个”。
9．? 字符可以表示“匹配前面分组0次或1次”，或用于表示非贪心匹配。
10．+匹配1次或多次。*匹配0次或多次。
11．{3}匹配前面分组的精确3次实例。{3, 5} 匹配3至5次实例。
12．缩写字符分类\d、\w和\s分别匹配一个数字、单词或空白字符。
13．缩写字符分类\D、\W 和\S 分别匹配一个字符，它不是数字、单词或空白
字符。
14．将re.I或re.IGNORECASE作为第二个参数传入re.compile()，让匹配不区
分大小写。
15．字符.通常匹配任何字符，换行符除外。如果将 re.DOTALL 作为第二个参
数传入re.compile()，那么点也会匹配换行符。
16．.*执行贪心匹配，.*?执行非贪心匹配。
17．[0-9a-z]或[a-z0-9]
18．'X drummers, X pipers, five rings, X hens'
19．re.VERBOSE 参数允许为传入 re.compile() 的字符串添加空格和注释。
20．re.compile（r'^\d{1,3}(,{3})*$'）将创建这个正则表达式，但其他正则表达
式字符串可以生成类似的正则表达式。
21．re.compile(r'[A-Z][a-z]*\sNakamoto')
22 ． re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\ s(apples|cats|baseballs)\.',
re.IGNORECASE)
第 8 章
1．相对路径是相对于当前工作目录。
2．绝对路径从根文件夹开始，诸如/或C:\。
3．os.getcwd() 函数返回当前工作目录。os.chdir() 函数改变当前工作目录。
4．文件夹. 是当前文件夹，.. 是父文件夹。
5．C:\bacon\eggs是目录名，而spam.txt是基本名称。
6．字符串 'r' 对应读模式，'w' 对应写模式，'a' 对应添加模式。
7．已有的文件用写模式打开，原有内容会被删除并完全覆写。
8．read() 方法将文件的全部内容作为一个字符串返回。readlines() 返回一个字
符串列表，其中每个字符串是文件内容中的一行。
386 Python编程快速上手——让繁琐工作自动化
9．shelf值类似字典值，它有键和值，以及keys() 和values() 方法，类似于同名
的字典方法。
第 9 章
1．shutil.copy() 函数将拷贝一个文件，而shutil.copytree() 将拷贝整个文件夹，
以及它的所有内容。
2．shutil.move() 函数用于重命名文件，以及文件移动。
3．send2trash 函数将一个文件或文件夹移到回收站，而 shutil 函数将永久地删
除文件和文件夹。
4．zipfile.ZipFile() 函数等价于open() 函数，第一个参数是文件名，第二个参数
是打开ZIP文件的模式（读、写或添加）。
第 10 章
1．assert(spam >= 10, 'The spam variable is less than 10.')
2．assert(eggs.lower() != bacon.lower(), 'The eggs and bacon variables are the same!')
或assert(eggs.upper() != bacon.upper(), 'The eggs and bacon variables are the same!')
3．assert(False, 'This assertion always triggers.')
4．为了能调用logging.debug()，必须在程序开始时加入以下两行：
import logging
logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s -
%(levelname)s - %(message)s')
5．为了能利用logging.debug() 将日志消息发送到文件programLog.txt中，必须
在程序开始时加入以下两行：
import logging
>>> logging.basicConfig(filename='programLog.txt', level=logging.DEBUG,
format=' %(asctime)s - %(levelname)s - %(message)s')
6．DEBUG、INFO、WARNING、ERROR和CRITICAL
7．logging.disable (logging.CRITICAL)
8．可以禁用日志消息，不必删除日志函数调用。可以选择禁用低级别日志消
息。可以创建日志消息。日志消息提供了时间戳。
9．Step 按扭让调试器进入函数调用。Over 按钮将快速执行函数调用，不会单
步进入其中。Out按钮将快速执行余下的代码，直到走出当前所处的函数。
10．在点击Go后，调试器将在程序末尾或断点处停止。
11．断点设在一行代码上，在程序执到到达该行时，它导致调试器暂停。
附录C 习题答案 387
12．要在 IDLE 中设置断点，就在代码行上单击右键，从弹出菜单中选择 Set
Breakpoint。
第 11 章
1．webbrowser模块有一个open() 方法，它启动web浏览器，打开指定的URL，就
这样。Requests模块可以从网上下载文件和页面。BeautifulSoup模块解析HTML。
最后，selenium模块可以启动并控制浏览器。
2．requests.get() 函数返回一个 Response 对象，它有一个 text 属性，包含下载
内容的字符串。
3．如果下载有问题，raise_for_status() 方法将抛出异常，如果下载成功，什么也不做。
4．Response对象的status_code属性包含了HTTP状态码。
5．以'wb'，即“写二进制”模式在你的计算机上打开新文件后，利用一个 for
循环迭代遍历Response对象的iter_content() 方法，将各段写入该文件。下面是例子：
saveFile = open('filename.html', 'wb')
for chunk in res.iter_content(100000):
saveFile.write(chunk)
6．F12在Chrome中打开开发者工具。按下Ctrl-Shift-C（在Windows和Linux上）
或 -Option-C（在OS X），在Firefox中打开开发者工具。
7．右键点击页面上的元素，并从菜单中选择Inspect Element。
8．'#main'
9．'.highlight'
10．'div div'
11．'button[value="favorite"]'
12．spam.getText()
13．linkElem.attrs
14．selenium模块是通过from selenium import webdriver导入的。
15．find_element_* 方法将第一个匹配的元素返回，作为一个 WebElement对象。
find_elements_* 方法返回所有匹配的元素，作为一个WebElement对象列表。
16．click() 和send_keys() 方法分别模拟鼠标点击和键盘按键。
17．对表单中的任意对象调用submit() 方法将提交该表单。
18．forward()、back() 和refresh() 等WebDriver对象方法模拟了这些浏览器按钮。
第 12 章
1．openpyxl.load_workbook() 函数返回一个Workbook对象。
388 Python编程快速上手——让繁琐工作自动化
2．get_sheet_names() 方法返回一个Worksheet对象。
3．调用wb.get_sheet_by_name('Sheet1')。
4．调用wb.get_active_sheet()。
5．sheet['C5'].value或sheet.cell(row=5, column=3).value
6．sheet['C5'] = 'Hello'或sheet.cell(row=5, column=3).value = 'Hello'
7．cell.row和cell.column。
8．它们分别返回表中最高列和最高行的整数值。
9．openpyxl.cell.column_index_from_string('M')
10．openpyxl.cell.get_column_letter(14)
11．sheet['A1':'F1']
12．wb.save('example.xlsx')
13．公式的设置和值一样。将单元格的 value 属性设置为公式文本的字符串。
记住公式以=号开始。
14．在调用load_workbook() 时，传入True作为data_only关键字参数。
15．sheet.row_dimensions[5].height = 100
16．sheet.column_dimensions['C'].hidden = True
17．OpenPyXL 2.0.5不会加载冻结窗格、打印标题、图像或图表。
18．冻结窗格就是总是会出现在屏幕上的行和列。它们作为表头是很有用的。
19．openpyxl.charts.Reference()、openpyxl.charts.Series()、openpyxl.charts. BarChart()、
chartObj.append(seriesObj)和add_chart()。
第 13 章
1．File对象由open() 返回。
2．对PdfFileReader() 用读二进制（'rb'），对PdfFileWriter() 用写二进制（'wb'）。
3．调用getPage(4)将返回第5页的Page对象，因为0页就是第1页。
4．在PdfFileReader对象中，numPages变量保存了页数的整数。
5．调用decrypt('swordfish')。
6．rotateClockwise() 和rotateCounterClockwise() 方法。旋转度数作为整数参数传入。
7．docx.Document('demo.docx')
8．文档包含多个段落。段落从一个新行开始，包含多个 Run 对象。Run 对象
是段落内连续的字符分组。
9．使用doc.paragraphs。
10．Run对象有这些变量（不是Paragraph）。
11．True 总是让 Run 对象成为粗体，False 让它总是不是粗体，不论样式的粗
体设置是什么。None让Run对象使用该样式的粗体设置。
附录C 习题答案 389
12．调用docx.Document() 函数。
13．doc.add_paragraph('Hello there!')
14．整数0、1、2、3和4。
第 14 章
1．在Excel中，电子表格的值可以是字符串以外的数据类型，单元格可以有不
同的字体、大小或颜色设置，单元格可以有不同的宽度和高度，相邻的单元格可以
合并，可以嵌入图像和图表。
2．传入一个File对象，通过调用open() 获得。
3．对于 Reader 对象，File 对象需要以读二进制模式（'rb'）打开，对于 Writer
对象，需要以写二进制模式（'wb'）打开。
4．writerow() 方法。
5．delimiter参数改变了分隔一行中单元格所用的字符串。lineterminator参数改
变了分隔行的字符串。
6．json.loads()
7．json.dumps()
第 15 章
1．许多日期和时间程序使用的一个参考时刻。该时刻是1970年1月1日，UTC。
2．time.time()
3．time.sleep(5)
4．返回与传入参数最近的整数。例如，round（2.4）返回2。
5．datetime对象表示一个特定的时刻。timedelta对象表示一段时间。
6．threadObj = threading.Thread(target=spam)
7．threadObj.start()
8．确保在一个线程中执行的代码不会和另一个线程中的代码读写相同的变量。
9．subprocess.Popen('c:\\Windows\\System32\\calc.exe')
第 16 章
1．分别是SMTP和IMAP。
2．smtplib.SMTP()、smtpObj.ehlo()、smptObj.starttls()和smtpObj.login()。
3．imapclient.IMAPClient() and imapObj.login()
4．IMAP关键字的字符串列表，例如'BEFORE '、'FROM '或'SEEN'。
390 Python编程快速上手——让繁琐工作自动化
5．将变量imaplib._MAXLINE赋值为一个大整数，例如10000000。
6．pyzmail模块读取下载的邮件。
7．你需要Twilio账户的SID号、认证标识号，以及你的Twilio电话号码。
第 17 章
1．RGBA值是4个整数的元组，每个整数的范围是0至255。4个整数对应于
颜色的红、绿、蓝和alpha值（透明度）。
2．函数调用 ImageColor.getcolor（'CornflowerBlue'，'RGBA'）将返回（100，
149，237，255），该颜色的RGBA值。
3．矩形元组是 4 个整数的元组：分别是左边的 x 坐标，顶边的 y 坐标，宽度
和高度。
4．Image.open（'zophie.png'）
5．imageObj.size是两个整数的元组，宽度和高度。
6．imageObj.crop((0, 50, 50, 50))。请注意，传入crop() 的是一个矩形元组，不
是4个独立的整数参数。
7．调用Image对象的imageObj.save（'new_filename.png'）方法。
8．ImageDraw模块包含在图像上绘画的代码。
9．ImageDraw对象有一些绘制形状的方法，例如point() 、line() 或rectangle()。
这些对象是将Image对象传入ImageDraw.Draw() 函数后返回的。
第 18 章
1．将鼠标移到屏幕的左上角，即坐标（0，0）。
2．pyautogui.size() 返回2个整数的元组，表示屏幕的宽和高。
3．pyautogui.position() 返回2个整数的元组，表示鼠标的x和y坐标。
4．moveTo() 函数将鼠标移到屏幕的绝对坐标处，而 moveRel() 函数相对于鼠
标的当前位置来移动鼠标。
5．pyautogui.dragTo() 和pyautogui.dragRel()。
6．pyautogui.typewrite('Hello world!')
7．要么向pyautogui.typewrite() 输入键盘键字符串的列表（例如'left'），要么向
pyautogui.press() 输入单个键盘键字符串。
8．pyautogui.screenshot('screenshot.png')
9．pyautogui.PAUSE = 2
附录C 习题答案 391
资深Python程序员力作 带你快速掌握Python高效编程
PPyytthhoonn编编程程快快速速上上手手
Python
—— 让让繁繁琐琐工工作作自自动动化化
编
如果你曾经花几个小时重命名文件或更新数百个电子表格的单元格，就知道这样的任务有多繁琐了。但是，如果你
程
可以让计算机替你完成呢？
快
在本书中，你将学习利用Python编程，在几分钟内完成手工需要几小时的工作，而事先却无需具备编程经验。一 速
[美] Al Sweigart 著 王海鹏 译
旦掌握了编程的基础知识，你就可以毫不费力地创建Python程序，完成高效的自动化工作，包括： 上
手
● 在一个文件或多个文件中搜索文本；
● 创建、更新、移动和重命名文件和文件夹； —
● 搜索网页和下载的在线内容；
让
● 在任意大小的Excel电子表格中更新和格式化数据；
繁
● 拆分、合并PDF文件，以及如何加水印和加密； 琐
● 发送提醒邮件和文本通知； 工
● 填写在线表格。 作
自
本书一步一步地引导你完成每个程序，每章末尾的实践项目启发你来改进这些程序，并用你的新技能来让类似的任
动
务自动化。你不用再浪费时间去做任何可以自动化的工作。即使你从未写过一行代码，也可以让计算机来做繁重的工作，
化
本书告诉你如何做。
作者简介
Al Sweigart是一名软件开发者，还教小孩和成人编程。他为初学者写了几本Python书籍，包括《Python密码学
编程》、《Python游戏编程快速上手》和《Python和Pygame游戏开发指南》。
美术编辑：董志桢
分类建议：计算机／程序设计／Python
人民邮电出版社网址：www.ptpress.com.cn
FM42269Python编程快速上手——让繁琐工作自动化.indd 1-3 16-6-22 上午8:37
|---|--------------------------------------------------|
| 0 | 资深Python程序员力作  带你快速掌握Python高效编程 |
| 1 | Python编程快速上手
— 让繁琐工作自动化                                                  |
| 2 | [美]  Al Sweigart  著 
  王海鹏  译                                                  |
| 3 |                                                  |