associatedwitheachlockfromtheSequencer.
TheScheduler determinesthedistributionofeachoftheoperations amongthedatabaseservers.
Write operations (inserts, updates, deletes) are sent to all database servers along with their
associatedlocksandsequencenumbers.
For read operations, the Scheduler determines the database server best capable of handling the
read. This determination is based on the current server loads, the power of the servers (if
heterogeneous servers are used), and the communication latency (i.e., the distance) of the
servers from the GSS. The read request is sent to the preferred database server. However, a
virtual form of the read request is sent to all other database servers so that they may apply the
appropriatereadlock totheircopiesoftheroworrecordforthedurationofthetransaction.Inthis
way,thesystemqueryloadisbalancedamongallofthedatabaseserversinthevirtualizedpool.
Should a read operation fail due to a server problem or a network problem, the GSS can submit
thereadrequesttoanotherdatabaseserver.
5
©2008SombersAssociates,Inc.,andW.H.Highleyman

The Scheduler tracks the responses from the various database servers and determines when a
response is to be returned to the application. For reads, the result is returned as soon as the
Schedulerreceivestheresponsefromtheselecteddatabaseserver.
For writes, completion is returned to the application as soon as one of the database servers has
reported a successful write to the Sequencer. Similarly, for transactions, the commit response is
returned to the application as soon as one database server has reported a successful commit to
the Scheduler. In the event that all servers return an error, an error status is returned to the
application.
TheSchedulerhasthreetablesthatitusestoexecuteitsfunctions:
 The Scheduler Table tracks the results of database operations. An entry is made into the
Scheduler Table for each operation received bythe Scheduler. Among other information,
atable entrycontains the operation, the operation’s sequence number,andtheresponse
totheoperationbyeachofthedatabaseservers.
The response field contains success/fail responses from each database server. It may
also include other information such as status, warnings, and parameter return
information. It is the Scheduler Table response field that determines when the Scheduler
can respond to the application. A read operation is complete when the read data is
returned from the selected database server. A write operation or a transaction commit is
completewhenthefirstsuccessresponseisreceivedfromadatabaseserver.
Onceanoperationhasbeencommittedorrolledback byalldatabaseservers,its entryis
deletedfromtheSchedulerTable.
 The Server Load Table tracks the current load on each database server. This load
informationisreturnedtotheSchedulertypicallywitheachoperationandmayincludethe
number of operations waiting to be performed at the database server, the processing
speedoftheserver,andthedistanceseparatingtheserverfrom theGSS.ItistheServer
Load Table that the Scheduler consults to determine to which database server to send a
readrequest.
 The Log Table contains an entry for every committed operation (it is a standard
transactionlogasfoundinmosttransactionmanagers).Theoperationsassociatedwitha
transactionarewrittentotheLogTablebeforethetransactioniscommitted.
The Log Table is used to recover a database server that has left the database pool for
any reason – planned or unplanned (a crash) – when that server is to be returned to
service.
If the Scheduler finds that one database server has failed to complete an operation that was
successfulatallother databaseservers, itcanevictthatserver from thedatabaseserver poolfor
analysisandrepair.
RewriterModule
The Rewriter Module analyzes the SQL statements contained within a transaction and stores the
template represented by that transaction in the module’s cache memory. This is the standard
SQL prepare function. If a later SQL statement that matches this template is received, then only
the values in each field need to be sent to the database servers rather than the lengthy SQL text
statement.
Inaddition,theRewriterModulelooksforanyfieldsthatarenondeterministic.Thatis,thevalueof
suchafieldreceivedfrom thevariousdatabaseserversmaybedifferent.Examplesofsuchfields
6
©2008SombersAssociates,Inc.,andW.H.Highleyman

arerandom numbers andtimestamps.TheRewriter Module willreplacethesefields withspecific
valuessothattheywillbedeterministicacrossthepoolofdatabaseservers.
BatchModule
The Batch Module determines whether a set of operations in a single transaction can be sent as
a batch to the database servers. An example of a set of operations that can be batched is a
sequenceofinsertoperations.
DatabaseConnectors
A Connector accepts sequenced operations from the GSS and manages their executions by the
database server. A Connector has available to it a Session Queue for each client session and a
RecordQueueforeachroworrecordinthedatabase.
Asingleoperationcanaffectseveraldatabaserows operation
or records. When an operation is received, it is
placedintheappropriateSessionQueuealongwith
all of its locks and sequence numbers. Lock and
sequence number entries are also entered into the
Record Queues for each record that is affected by
this operation. The queues are ordered by
sequencenumber.
The operation can be executed when all of its
components - the Session Queue entry and all
Record Queue entries - are at the head of their
respective queues. Upon completion, the
completion status and data, if any, are returned to
theSchedulerintheGSS.
Session RecordQueues
Queue
The Connector can detect potential deadlocks. If it
doesso,oneoftheconflictingoperationsisaborted.
Forrecoverypurposes,theConnectorstoresthelasttransactionthatitsuccessfullycompleted.
Networking
All communication between the GSS and its clients and database connectors is over high-speed
TCP/IP links using the GRIDSCALE Database Routing Communication Protocol (DRCP). These
linksmaybeencrypted.
Continuous Availability
GRIDSCALEprovidesmanyhigh-availabilityandcontinuous-availabilityfeatures.
Active/ActiveDatabaseServers
All database servers are running in an active/active pool. Therefore, not only can the query load
be distributed among all servers, but the loss of anyserver is transparent to clients. A server can
be evicted from the server pool because its heartbeat is lost, because it does not respond, or
becauseitgivesanerroneousresult.
In the event of a server eviction, transaction load is simply redistributed to the remaining
databaseservers.
7
©2008SombersAssociates,Inc.,andW.H.Highleyman

DatabaseServerRecovery
Whenadatabaseserverthathadbeenremovedfromtheserverpoolistobereinstated,theGSS
can queryit to determine the last transaction that the database server committed.Using this as a
marker, the GSS can then replay all subsequent transactions to the recovering database server
from the GSS Log Table, thus bringing the database server back into synchronization with the
databaseserverpool.
DisasterTolerance
One or more of the database servers can be located at a data-center site remote from the data
center at which the GSS is located. This provides tolerance to a disaster that takes out the local
site. In the event of an outage of the local site, the application servers can reconnect to the
remotedatabaseserverandcancontinueoperation.
applications
active backup
GRIDSCALE GRIDSCALE
local local
Connector Connector
database database
remote
server server
Connector
database
server
data data
base base
data
base
EliminatingPlannedDowntime
Via GRIDSCALE’s management console, a database server can be frozen. This action removes
itfromtheserverpoolbutmaintainstheGSSconnectiontothatdatabaseserver.
Thefrozendatabaseservermaythenbeupgradedormaintained.Whenitisreadytobereturned
to service, it is unfrozen. The queue of transactions that had occurred while it was frozen is
drainedtoitfromtheLogTable,andthedatabaseserverisreturnedtoservice.
Inthisway,upgradesmayberolledthroughthedatabasepoolonenodeatatime.
GRIDSCALEServerCrash
The GSS is the heart of the GRIDSCALE environment. Should it be lost, the virtual database
would be down. To protect against this, the GSS can be configured as a primary/backup pair. In
this case, the memory-resident Scheduler Table and the Load Table are replicated to the backup
system upon each update. In that way, the backup GSS is prepared to take over instantly.
8
©2008SombersAssociates,Inc.,andW.H.Highleyman

Takeoverissubsecondonceaprimaryfailureis detected.Failoverdetectiontypicallytakesabout
fiveseconds(lossoffiveone-secondheartbeats).
Toprovidecontinuedsupportfordatabaseserverrecovery,theLogTableisalsoreplicatedtothe
backup system. The completion of a transaction is noted in both the primary and backup Log
Tablesbeforethetransactionisreportedtotheapplicationascommitted.
Should the site containing the GSS be taken out by a disaster of some sort, operations can
continuewitharemotedatacenterifonehasbeenprovided.
Management
GRIDSCALE provides a web interface and a command-line interface to configure and manage
thevirtualdatabaseenvironment.Viathisinterface,databaseadministratorscanaddandremove
database servers, freeze and unfreeze database servers, monitor the performance of database
servers, view alerts generated by GRIDSCALE for detected faults or anticipated problems, and
generateperformancereports.
Administrators can issue DDL commands to reconfigure the database. These commands will be
sentsynchronouslytoalldatabaseserversforsimultaneousexecution.
Graphical dashboards are provided to show the relative performance of each database server,
serverworkloads,transactionrates,andothersystemparameters.
Performance
The GRIDSCALE virtual database is easily scalable by adding additional nodes on-the-fly. One
test run by an xkoto customer showed the capability for a four-node system to process 15,000
readspersecond.
GRIDSCALE virtualization does add some minor overhead to database processing. However,
testshaveshownanearlylinearscalability,witheachdatabaseserverafterthefirstaddingabout
85% of its capacity to the virtual database. This has been demonstrated for systems up to eight
nodesandisprojectedtocontinueforuptothirtynodes.
xkoto
xkotoisafairlynewventure.ItisaprivatelyheldcompanyfoundedinCanadain2005,anditfirst
delivered product in 2006. It now has installations throughout North America and Europe in the
fieldsoffinancialservices,healthcare,travel,telecommunications,andretail.
ItspartnersincludeIBM,Microsoft,VMware,Citrix,SunMicrosystems,andHP.TheGRIDSCALE
product has been thoroughly tested by IBM for the DB2 database, and IBM currently provides
productsupportforGRIDSCALE.
Where did the name “xkoto” come from? It is reportedly a transliteration of two Greek words
looselytranslatedas“outofdarkness,outofchaos.”
Summary
GRIDSCALE brings virtualization for its supported databases to the final tier of today’s popular
three-tier architecture. Entire data centers now can be virtualized pools of servers providing their
respectivefunctions withactive/activeload-sharingandcontinuousavailabilitywithnofailover.As
with the presentation and application tiers, the database tier is readily scalable by adding
databaseserverstothedatabasepools.
9
©2008SombersAssociates,Inc.,andW.H.Highleyman

