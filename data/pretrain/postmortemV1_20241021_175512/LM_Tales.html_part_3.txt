| soon as any function takes longer than the time it is allocated.      |
+-----------------------------------------------------------------------+
| Instead, Laning envisioned a system in which software functions were  |
| allocated among various \"jobs\" that could be of any size and shape, |
| as determined by the nature of their function. Each job was assigned  |
| a priority. The operating system always executed the job with the     |
| highest priority. Thus, if a low-priority job was executing and a     |
| high-priority job was scheduled, the low-priority job was suspended   |
| while the higher-priority job executed. This system gave the illusion |
| that jobs ran simultaneously, although of course they merely took     |
| turns. Such a system was not deterministic in the sense that what     |
| executed when could be determined *a priori*, but its operation could |
| be sufficiently understood and verified that in sum it enhanced       |
| reliability, safety, flexibility of use, and especially ease of       |
| development.                                                          |
+-----------------------------------------------------------------------+
| In such a design the Executive function that orchestrated the         |
| execution of jobs had to provide each job with a set of registers in  |
| which its status could be saved if it was suspended during the        |
| execution of a higher priority job. The LGC contained an array of     |
| eight such \"core sets\" of 12 registers each, each register having   |
| 15 bits. A core set of this size was sufficient for many jobs, but    |
| jobs that used the Interpretive language to do vector and matrix      |
| computations required more space. For such jobs an additional area of |
| 43 registers was allocated for the storage of intermediate results.   |
| There were five such \"Vector Accumulator (VAC) areas\" in the LGC.   |
+-----------------------------------------------------------------------+
| With a limited number of core sets and VAC areas, the allocation of   |
| functions to jobs had to be done thoughtfully. Functions that had a   |
| sequential relationship with each other were grouped into the same    |
| job. Thus the large SERVICER job that was active during the lunar     |
| landing (and other powered flight modes) first performed average-G    |
| navigation, then guidance equations, then throttle and attitude       |
| output, and then the updating of displays --- each part using the     |
| outputs of the ones preceding.                                        |
+-----------------------------------------------------------------------+
| The availability of core sets and VAC areas limited the number of     |
| jobs that could be in the queue at any time to eight, of which up to  |
| five could require VAC areas. In normal steady-state operation, the   |
| number of jobs executed equaled the number being scheduled and        |
| therefore the average usage of core sets and VAC areas was more of    |
| less steady, although jobs that occurred on a one-shot or             |
| asynchronous basis might cause the usage to fluctuate.                |
+-----------------------------------------------------------------------+
| However, if more jobs were being scheduled than were being finished,  |
| the number of core sets and VAC areas in use must rise. If the debit  |
| continued long enough, the resources would be exhausted. The next job |
| request could not be fulfilled.                                       |
+-----------------------------------------------------------------------+
| Cut to a time about a year before Apollo 11, when we software         |
| engineers, who thought we already had enough to do, were requested to |
| write the lunar landing software in such a way that the computer      |
| could literally be turned off and back on without interrupting the    |
| landing or any other vital maneuver! This was called \"restart        |
| protection\". Other factors than power transients also caused         |
| restarts. A restart was triggered if the hardware thought the         |
| software was in an endless loop, or if there were a parity failure    |
| when reading fixed memory, or for several other reasons.              |
+-----------------------------------------------------------------------+
| Restart protection was done by registering waypoints at suitable      |
| points during the operation of the software such that if processing   |
| happened to jump back to the last waypoint, no error would be         |
| introduced, as in the following example:                              |
+-----------------------------------------------------------------------+
| NEW_X = X + 1\                                                        |
| register waypoint\                                                    |
| X = NEW_X                                                             |
+-----------------------------------------------------------------------+
| It is evident that without the waypoint, going through this code a    |
| second time would cause X to be incremented twice.                    |
+-----------------------------------------------------------------------+
| Following a restart, such computations could be reconstructed. For    |
| each job, processing would commence at the last registered waypoint.  |
| If multiple copies of the same job were in the queue, only the most   |
| recent was restarted. Certain other computations that were not        |
| considered vital were not restart-protected. These would simply       |
| disappear if there were a restart.                                    |
+-----------------------------------------------------------------------+
| Restart protection worked very well. On the control panel of our      |
| real-time \"hybrid\" simulator in Cambridge was a pushbutton that     |
| caused the AGC to restart. During simulations we sometimes pushed the |
| button randomly, almost hoping for a failure that might lead us to    |
| one more bug. Invariably, once we got the restart protection working, |
| operation continued seamlessly.                                       |
+-----------------------------------------------------------------------+
| (The hybrid simulator combined SDS 9300 digital and Beckmann analog   |
| computers with a real AGC and realistic LM and CM cockpits.)          |
+-----------------------------------------------------------------------+
| Restart protection was prompted by the possibility that the hardware  |
| could cause a restart, but the software could also initiate a restart |
| if it reached a point where it did not know how to continue. This was |
| done by transferring control to the tag BAILOUT in the Alarms and     |
| Aborts software. An error code accompanied this call.                 |
+-----------------------------------------------------------------------+
| This was the action taken by the Executive program if its resources   |
| were exceeded. If a job could not be scheduled because no \"core      |
| sets\" were available, the Executive called BAILOUT with alarm code   |
| 1202. If no \"VAC areas\" were available, BAILOUT was called with     |
| alarm code 1201.                                                      |
+-----------------------------------------------------------------------+
| Not all the functions executed in the LGC were \"jobs\". There was    |
| also a system of hardware interrupts, which could break in at any     |
| point (when not explicitly inhibited) to perform high priority        |
| functions. Interrupts were dedicated to particular functions          |
| including the digital autopilot, uplink and downlink, and keyboard    |
| operation.                                                            |
+-----------------------------------------------------------------------+
| Another interrupt could be used to execute any piece of code that had |
| to be executed at a given time. Such functions, called \"tasks\",     |
| were scheduled by calling a subroutine called WAITLIST. A task had to |
| be of very short duration.                                            |
+-----------------------------------------------------------------------+
| Whereas jobs were scheduled to execute immediately at a given         |
| *priority*, tasks were scheduled to run at a given *time*. Tasks and  |
| jobs were often used together. A task might be scheduled to capture   |
| sensor data that needed to be read at a definite time, and the task   |
| in turn might schedule a job at an appropriate priority to perform    |
| processing based on the measurement.                                  |
+-----------------------------------------------------------------------+
| When Hal Laning designed the Executive and Waitlist system in the mid |
| 1960\'s, he made it up from whole cloth with no examples to guide     |
| him. The design is still valid today. The allocation of functions     |
| among a sensible number of asynchronous processes, under control of a |
| rate- and priority-driven preemptive executive, still represents the  |
| state of the art in real-time GN&C computers for spacecraft.          |
+-----------------------------------------------------------------------+
| \*       \*      \*                                                   |
+-----------------------------------------------------------------------+
| To understand the root cause of the alarms on Apollo 11 during the    |
| powered descent, one must first look ahead to the rendezvous with the |
| Command Module that followed the LM\'s ascent to lunar orbit. Just as |
| it needed the landing radar to measure altitude and velocity with     |
| respect to the lunar surface during the landing, the LM, as the       |
| active vehicle during rendezvous with the CM in lunar orbit, needed   |
| the rendezvous radar (RR) to measure the range, range-rate, and       |
| direction of the other spacecraft.                                    |
+-----------------------------------------------------------------------+
| The RR had several modes of operation, determined by the setting of   |
| its mode switch. As flown on Apollo 11, the available RR modes were   |
| SLEW, AUTO, and LGC. In SLEW and AUTO modes the radar operated under  |
| the control of the crew, independently of the LGC. This was the       |
| method that would be used during ascent and rendezvous if the primary |
| guidance system failed. In SLEW mode the rendezvous radar antenna     |
| could be steered manually, but otherwise was stationary. Once the     |
| antenna was pointed near the target, the AUTO (automatic tracking)    |
| mode could be used to acquire and track the target. In these cases    |
| the RR range and range-rate, and the shaft and trunnion angles that   |
| defined where the RR antenna was pointing, were made available for    |
| display on cockpit cross-pointers and tape meters. Range and          |
| range-rate were also made available to the abort guidance system      |
| (AGS), a computer with only 6144 words of memory that was provided by |
| TRW as a backup for use if the PGNS failed during lunar descent or    |
| ascent.                                                               |
+-----------------------------------------------------------------------+
| (The naming of the three rendezvous radar modes has been a source of  |
| confusion for some commentators. Based on crew input the designations |
| were changed between LM-1 and the lunar landing missions. The mode    |
| called LGC on Apollo 11 was formerly called AUTO. The mode called     |
| AUTO on Apollo 11 was formerly MANUAL. SLEW was unchanged. Although   |
| it in no way contributed to the problem on Apollo 11, LUMINARY\'s     |
| internal documentation at this time still referred to the discrete in |
| Channel 33 that indicated that the rendezvous radar was powered up in |
| LGC mode as RR AUTO-POWER ON.)                                        |
+-----------------------------------------------------------------------+
| If the PGNS was healthy (as it always was) the radar was controlled   |
| by the LGC, and in this case the RR mode switch was set to LGC. The   |
| RR interface electronics made available to the software the target    |
| range and range-rate measured by the radar, and the angles of the RR  |
| antenna\'s shaft and trunnion, from which the direction to the target |
| could be determined. Programs running in the LGC used this            |
| information to guide the LM to a favorable rendezvous.                |
+-----------------------------------------------------------------------+
| It turned out that the rendezvous radar could also be operated during |
| the powered descent, and this was done during Apollo 11. Crew         |
| procedures called for the RR to be switched on just before P63 was    |
| selected, and to be kept in SLEW or AUTO mode throughout the landing  |
| maneuver.                                                             |
+-----------------------------------------------------------------------+
| Many explanations have been offered for why the RR was configured in  |
| this way for the lunar landing. For example, a fanciful scheme for    |
| monitoring the landing by comparing RR data to a chart of expected    |
| readings may have been considered by some people in Houston. However, |
| a simpler explanation is sufficient to explain the facts: The RR was  |
| on for no other purpose than to be warmed up if there were an abort,  |
| and it was in AUTO (while the LM was in a position to track the CM)   |
| or in SLEW (at other times), simply to keep the antenna from moving   |
| uselessly.                                                            |
+-----------------------------------------------------------------------+
| ![Figure 7: Interfaces Among PGNS, ATCA and the Rendezvous            |
| Radar](RRIF@311x450.jpg){style="border-width: 0" height="311"         |
| width="450"}                                                          |
+-----------------------------------------------------------------------+
| Figure 7: Interfaces Among PGNS, ATCA and the Rendezvous Radar        |
+-----------------------------------------------------------------------+
| The problem has also been attributed (including by the author         |
| previously) to a \"checklist error\". This formulation is no more     |
| accurate than calling the delta-V monitor\'s premature shutdown of    |
| the engine on LM-1 a \"computer error\", when it was actually caused  |
| by faulty documentation. In fact, the RR switch settings on Apollo 11 |
| should not have caused any problem. That they did so can be traced to |
| another case of\... faulty documentation.                             |
+-----------------------------------------------------------------------+
| Years previously, an interface control document (ICD) had been        |
| written to define the electrical interface between the PGNS and an    |
| electronic assembly called the attitude and translation control       |
| assembly (ATCA) that was provided by Grumman Aerospace, the builder   |
| of the Moon lander. The ICD specified that the 28-volt 800-Hz         |
| voltages in the two systems be \"frequency locked\", but did *not*    |
| say, \"phase synchronized\". As built, the two voltages were locked   |
| in frequency by a \"frequency sync\" signal sent by the LGC. They     |
| were also locked into a constant phase relationship. However, the     |
| phase angle between the two signals was completely random, depending  |
| on the instant at which the LGC, which was always powered up *after*  |
| the ATCA, began sending the first frequency sync signal. These        |
| interfaces are pictured in Figure 7.                                  |
+-----------------------------------------------------------------------+
| The 800-Hz phasing problem was detected during launch site testing of |
| LM-3 and documented --- but it was never corrected. As a result, when |
| the RR mode switch was in AUTO or SLEW, the shaft and trunnion        |
| resolvers were being excited by an 800-Hz signal from the ATCA that   |
| was very likely to be out of phase with the 800-Hz waveform used as a |
| reference by the coupling data units (CDUs) whose job was to make     |
| sense of the resolver signals, and in turn increment (or decrement)   |
| the counters inside the computer that told the software how the       |
| antenna was pointed.                                                  |
+-----------------------------------------------------------------------+
| On Apollo 11, however, the CDUs were being asked to comprehend a      |
| contradiction. Because they were based on a separately controlled     |
| excitation voltage, the resolver signals as received by the CDUs      |
| indicated no known angle. The discomfiture of the CDUs was at its     |
| worst when the phase angle between the two 800-Hz waveforms was near  |
| 90 or 270 degrees --- and Apollo 11 evidently hit one of these sweet  |
| spots. The response of the CDUs was to increment or decrement the     |
| counters in the LGC, nearly constantly, at the maximum rate of 6400   |
| pulses per seconds for each angle. This phenomenon occurred whenever  |
| the RR mode was in SLEW or AUTO, regardless of whether the rendezvous |
| radar itself was powered up.                                          |
