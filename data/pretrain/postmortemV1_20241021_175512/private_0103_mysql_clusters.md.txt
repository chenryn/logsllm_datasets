MySQL Clusters Go Active/Active
December2006
Introduction
MySQL (www.mysql.com) is without a doubt the most popular open
source database in use today. Developed by MySQL AB of Sweden and
Cupertino, California, it boasts over 4,000,000 installations around the
world.
MySQL has recently entered the continuous processing arena with its introduction of the MySQL
Cluster. Based on technology acquired from Alzato, a small venture capital company, MySQL
clusterwasintroducedinlate2004.Itisavailableunderanopensourcelicensingagreementasa
plug-inmoduleforthestandardMySQLenvironment.
It incorporates an active/active NDB storage engine to achieve availabilities in the five 9s range.
A unique characteristic of a MySQL Cluster is that the database is totally memory-resident.
Therefore, it offers very high performance with database operations measured in just a few
milliseconds.1
Though all nodes in a MySQL Cluster must be collocated, disaster tolerance can be provided by
connecting multiple geographically-dispersed MySQL Clusters in a distributed active/active
networkusingasynchronousreplication.
Architecture
MySQLCluster employs a multinode shared-nothingarchitecture to achieveits highavailabilities.
A node is a process running on a host computer. A host is any commodity computer that can
supportMySQL.2
A host can support multiple nodes. The allocation of nodes to hosts provides a level of
“redundancy tailoring” to meet the specific availability needs of an application. The greatest
availabilityisachievedbyhavingeachnoderesideonitsownhostcomputer.However,important
availability/costtradeoffscanbeachievedbyallocatingmultiplenodestoasinglehost.
There are three types of nodes in a MySQL Cluster – storage nodes, server nodes, and
managementnodes.Aclustercancontainupto64nodes,48ofwhichcanbestoragenodes.
1AGuidetoHighAvailabilityClustering,MySQLBusinessWhitePaper;June,2004.
2Ronström,M.,Thalmann,L.,MySQLClusterArchitectureOverview,MySQLTechnicalWhitePaper,April,
2004.
1
©2006SombersAssociates,Inc.,andW.H.Highleyman

StorageNodes
Thestorage nodes form theheartof a MySQLCluster.Therecan be up to 48 storage nodes ina
cluster. These nodes are organized into node groups of up to four storage nodes each. A node
group is a single logical storage unit. The set of node groups in a MySQL Cluster forms its highly
reliableNDBstorageengine.
Each storage node stores its database in main
memory. Therefore, access is very fast, with
response times measured in a few milliseconds.
applications Periodic asynchronous checkpoints of the database
are made to disk to support recovery. However,
main-memorystoragemeansthattheamountofdata
that a node group can store is limited by the amount
ofavailablememoryinitsstoragenodehosts.
MySQL
server To alleviate this problem, large tables can be
partitioned across multiple node groups. Partitioning
may be user-specified or may be done by hashing
provided by MySQL. Furthermore, though MySQL
Clusters support multiple storage nodes on a single
host, it is usual to assign each storage node its own
storage storage host computer because of the memory limitation
node node NDB problem
storage
engine
A node group typically contains two storage nodes.
This provides standard mirroring of storage devices.
storage storage However, node groups can contain one to four
node node
storage nodes. If there is only one storage node in a
nodegroup node group, that node group is not fault-tolerant.
More than two storage nodes in a node group
MGM provide extreme availabilities for that node group
MySQLCluster (uptimes measured perhaps in centuries).
Alternatively, more than two storage nodes in a node
group removes the maintenance pressure to
immediatelyrepairafailedstoragenodeandstillachievehighavailability.
The storage nodes within a node group are kept in synchronism via synchronous replication. All
updates to a transaction are sent to all nodes during the execution of the transaction. When the
transaction is ready to be committed, a standard two-phase commit protocol is used. First, all
nodesareaskediftheyarereadytocommit.Iftheyallagree,thetransactioniscommittedacross
allstoragenodes.Otherwise,itisaborted.
Sinceallupdatesaresynchronouslyappliedtoallnodes,eachnodewillpresentthesameviewof
the database at any given time. Furthermore, the database is always in a consistent state. Since
updates are either made to all nodes or not made at all, there is no data loss following a node
failure(therecoverypointobjective,orRPO,iszero).
Anode group is a form of anactive/active localnetwork.Anyuser (which we will seeis a MySQL
server node) can access data via any of the nodes in the application network (the storage nodes
in this case). Should one node in the application network go down, there are others to
immediatelytakeitsplace.Failoverisfastandismeasuredinsubseconds.
2
©2006SombersAssociates,Inc.,andW.H.Highleyman

As with anysynchronous active/activenetwork,there exists achancefor deadlocks.Itis possible
that two different MySQL servers will lock the same data item in two different nodes at the same
time, and neither can then complete the commit of their transaction across the node group
network.Toavoidthis,onestoragenodeinanodegroupisdesignatedtobetheprimarypartition
for each table or table partition. All updates are routed to that node. Should the storage node
hosting the primary partition for a table fail, MySQL Cluster automatically designates another
storagenodetofulfillthatrole.
ServerNodes
As wehaveseen,the“users” of thestorageengine aretheMySQLserver nodes. Theyprovidea
SQLinterfacetothestorageengineforthebenefitoftheapplications.
Each server node is connected to each node group. It therefore has access to the data held by
each node group even in the presence of storage node failures so long as there is at least one
functioningstoragenodeinanodegroup.
Aserver node/node group connection is implemented as adirectconnectiontoa specific storage
node in the node group. Should that storage node fail, the server node automatically reconnects
toanotherstoragenodeinthenodegroup.
There is typically a number of MySQL server nodes configured in a MySQL Cluster. The number
of server nodes is dependent upon the anticipated load and the availability requirements. If load
balancing is an issue, there can be multiple server nodes contained on one host since a server
node will be paused while waiting for responses from the storage engine. However, if availability
is the issue, then server nodes must be on separate hosts. Resulting configurations are typically
amixsatisfyingtheseissues.
The MySQL servers provide an SQL interface to the applications. An application can connect to
any server node. However, for load balancing purposes, applications are typically assigned to
servernodesforthedurationofatransactiononaround-robinbasis.
ManagementNodes
A management node (an MGM node in Cluster-speak) is needed only for startup configuration
and for any subsequent reconfiguration. Otherwise, the Cluster can run properly without an
operationalmanagementnode.
When the system is started, all nodes communicate with the MGM to obtain their respective
configuration information. Thereafter, should a node fail and be restarted (either automatically or
afterrepair),thatnodewillobtainitsconfigurationinformationfromtheMGM.
Because of its central role in failure recovery, not only should an MGM always be functional (you
never know when you will need it), but there should be more than one MGM running on different
hosts. In this case, one MGM is designated as the active management node. Should its host fail,
MySQLClusterwilldesignateasurvivingMGMtobetheactivemanagementnode.
ViatheMGM,nodesandhostscanbeaddedandremovedwithnoClusterdowntime.
Node Failure and Recovery
MySQLClusterprovidesautomaticfaultdetectionandrecoveryforanyofitsnodes.
3
©2006SombersAssociates,Inc.,andW.H.Highleyman

StorageNodeFailure
The storage nodes within a node group monitor each other to determine node-group health. This
is done by confirming connections and by heartbeats. If a storage node loses its connection to
anotherstoragenodeinitsnodegroup,itassumesthatthenodeisdown.
However, there are storage node failures that do not result in connection loss, such as an
overloaded processor, a disk problem or a memory problem. To detect these conditions,
heartbeats are sent among the storage nodes in a circular fashion. Each storage node sends a
heartbeat to the next storage node in the ring. It the sending storage node does not get a
responseinthreeattempts,itdeclaresthatnodedown.
When a storage node detects a node failure, it notifies the other hb
storage nodes in the node group. Together they verify that the storage storage
node node
node is, in fact, down. It is possible that a communication fault
has nottakendown anode buthas isolatedthatnode (or nodes)
fromtheothernodesinthenodegroup. hb hb
In this case, to avoid split-brain operation, in which two sets of
storage storage
nodes in the node group are independently processing
node hb node
transactions, a network partitioning protocol is invoked to
determine which segmented node group is the largest. The
Heartbeats
nodes in the other segment are stopped. They will automatically
restartandattempttojointhenodegroup.
If the two node-group segments are of equal size, an arbitrator decides which node segment to
stop. The arbitrator can be configured on anyserver node or anymanagement node and maybe
backedupbyanotherarbitrator.
Should a storage node be taken out of service, it is automatically restarted. If this is successful,
the node will get its configuration from the MGM and will then request that its memory-resident
database be reloaded from one of the other storage nodes. Since this is a memory-to-memory
transfer, it is very fast. Reconfiguration following a storage node failure typically takes less than
onesecond.
ServerNodeFailure
Shouldaservernodefail,itissimplyremovedfromtheMySQLServerpool.Nofurtherrequests
areroutedtoit.
Itisrestartedautomatically,ifpossible.Ifthisissuccessful,itrejoinstheserverpool.
ManagementNodeFailure
If a management node fails, there is no immediate problem since it is not needed unless another
node should fail while it is down. It is restarted, if possible. If there is a backup MGM configured,
thebackupispromotedtobetheactivemanagementnode.
System Failure and Recovery
Shouldallstoragenodesinanodegroupfail,theClusterisdown.Sincethedatabaseismemory-
resident,ithasbeenlostandmustberecovered.
4
©2006SombersAssociates,Inc.,andW.H.Highleyman

Tosupportrecovery,alogfileofalldatabaseupdateactivityismaintainedinthememoryofeach
storagenode.Thislogfileisperiodicallyflushedtodisk.
If no other action were taken, the log file could grow arbitrarily large. To control this, an
asynchronous snapshot is taken of the memory-resident database by replaying the log file
against the previous copy of this snapshot. The snapshot is brought up to the latest transaction-
consistent state, and the superfluous log file tail is truncated. Thus, the disk snapshot represents
aconsistentsnapshotofthememory-residentdatabaseatthetimeofthesnapshot.
Shouldthenodegroupfail,uponrestartthedatabaseineachnodecanbereconstructedfromthe
disksnapshotandthelogfile.Ifthememory-residentlogfileisstillavailable,thennotransactions
are lost. Otherwise, the database can be reconstructed up to the last complete transaction
containedinthelogfile.Transactionsprocessedsincethelogfilewaslastwrittentodiskarelost.
Disaster Tolerance
Though the MySQL Cluster uses an active/active architecture to attain a very high availability,
protection against a node failure is strictly local. If a disaster of some sort should take out the
Cluster site, there is no backup. This situation can be corrected by building at geographically
dispersed sites two or more Clusters synchronized by data replication so that if one site goes
down,thereisabackupsitetouse.
asynchronous
replication
MMyySSQQLL MMyySSQQLL
sseerrvveerr sseerrvveerr
ssttoorraaggee ssttoorraaggee ssttoorraaggee ssttoorraaggee
nnooddee nnooddee nnooddee nnooddee
ssttoorraaggee ssttoorraaggee ssttoorraaggee ssttoorraaggee
nnooddee nnooddee nnooddee nnooddee
nnooddeeggrroouupp nnooddeeggrroouupp
MasterMySQLCluster SlaveMySQLCluster
Disaster Tolerance
MySQL provides an asynchronous replication facility to keep two or more Clusters synchronized.
This replication guarantees transaction consistency at the target database. It can replicate SQL
statementsorchangedrows.
However, this replication engine is limited in that it cannot detect or resolve data collisions.
Therefore,ifbidirectionalreplicationshouldbeused,twousersmakingchangestothesamedata
item at two different clusters within the replication latency time of the replication engine will find
that their change will overwrite that made in the remote node. In turn, the remote node change
willoverwritetheirchange.
5
©2006SombersAssociates,Inc.,andW.H.Highleyman

Therefore, multiple Clusters interconnected by MySQL’s replication engine are typically
configured to operate in a master/slave configuration. One Cluster is designated the master, and
all other Clusters are slaves. All updates are made only to the master and are replicated to the
slaves.Shouldamasterfail,aslavecanbepromotedtobethenewmaster.
Therefore,theslavescanonlybeusedashotbackupsorforqueries.Havingmultipleslavequery
nodes can be advantageous for load balancing, to provide data localityto remote communities of
users,andfortesting.
It is possible to configure bidirectional replication in which each Cluster is both a master and a
slave, but the application shoulders the entire responsibility for data collision detection and
resolution. However, there are some applications, such as insert-only applications, that do not
suffer from data collisions and can benefit from this configuration. Also, it may be possible to
partition the database across Clusters, with each Cluster acting as the master for one set of
partitionsandasaslavebackupforotherpartitions.
In addition to data collisions, another problem with MySQL replication is that it is relatively slow.
Each slave must query its master periodically for changes, read those changes, and apply them
to its database. As a result, the target database could be several seconds behind the master
database.Shouldthemasterfail,allofthetransactionsthatarestillinthismultisecondreplication
pipelinewillbelost.
Licensing
MySQL Cluster is available from MySQL AB under dual licensing. It can be licensed as open
source using the GPL (GNU General Public License). Alternatively, it can be obtained under a
traditionallicenseforinclusioninproprietaryproducts.
Summary
MySQL Clusters provide a highly available database (five 9s is claimed) using a localized
active/active configuration. Failure detection and recovery is automatic and generally will be
completedinsubsecondtimeframes.
Itisamemory-residentdatabase.Therefore,itcanbeveryfast,withresponsetimesmeasuredin
milliseconds. The memory-resident database is supported by asynchronous disk-resident
checkpointsforsystemrecovery.
However, because the database is memory-resident, its size is limited. The database can be
distributed among several node groups, each being a configuration of one to four storage nodes.
Up to 48 storage nodes can be included in one Cluster. In addition, there is a limit of 1,600
metadataobjects(tables,indices,etc.).
Disastertolerancecanbeachievedbyconnectingtwoormoregeographicallydispersednodes in
an active/active configuration with MySQL’s asynchronous data replication engine. However, this
replicationenginecangenerallybeusedonlyinamaster/slaveconfiguration,relegatingtheslave
nodestohotstandbyorquerypurposes.
An excellent reference for further study is the MySQL 5.1 Reference Manual
(http://dev.mysql.com/doc/)
MySQL Cluster is available from MySQL AB either under a GPL open source license or under a
traditionallicenseforproprietaryuse.
6
©2006SombersAssociates,Inc.,andW.H.Highleyman
