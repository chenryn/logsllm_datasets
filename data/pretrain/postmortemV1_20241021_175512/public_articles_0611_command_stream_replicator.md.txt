FileSync and CSR Synchronize NonStop Systems
Part 2 – Command Stream Replicator
November2011
Failover to a backup system often fails because the backup system’s software configuration is different
fromthatbeingrunbytheproductionsystem.Wecallthisconfigurationdrift.
For HP NonStop systems, NonStop RDF (Remote Data Facility) and third-party data replication engines
can synchronize database contents. FileSync from TANDsoft can synchronize files. However, what is left
isconfigurationchangesenteredviaavarietyofutilities.
Command Stream Replicator (CSR) from TANDsoft fills in the last piece of the configuration
synchronization puzzle. CSR replicates specified operator commands entered on the production system
tothebackupsystemortoothertargetsystemsinordertokeeptheconfigurationssynchronized.
Fighting Configuration Drift
Configurationdriftcancausefailover problems,for instance, if versions of the applications are different,if
scripts aremissing,or if thedatabasestructure has changed. Theresult is that it mightnot be possible to
bring up the backup system, or that the applications will not run properly. As an example, an up-to-date
versionofanapplicationmaynotbeabletoprocesstransactionsagainstanearlierversionofadatabase
whosestructurehasbeenchanged.
In order to ensure that failover will work properly, it must be tested regularly. Failover testing is often a
complex, lengthy, and riskytask that requires taking down application services until the backup system is
up and running. The testing task is only further complicated and extended if version conflicts must be
detected and resolved. For these reasons, full failover testing is often not performed periodically or not
performedatall.Theorganizationwouldratherrelyonfaithandhopethatthebackupwillcomeup.
Therefore, it is imperative to maintain the software configuration of the production system and its backup
in synchronism to avoid failover faults. Tools are available to periodically compare software on the two
systemsandtoreportdiscrepanciessothattheycanbecorrected.
However, a better solution is tohave afacilitythat not onlywill detect version errors but will automatically
correct them. Such a facility for HP NonStop servers is FileSync from TANDsoft (www.tandsoft.com).
FileSync, described in Part 1 of this series,1 compares file versions of files on a production system to
those on its backup system and automatically replicates updated file versions to the backup system.
Validated files can include database files, source programs, executables, configuration files, scripts, and
others.
1FileSyncandCSRSynchronizeNonStopSystems:Part1–FileSync,AvailabilityDigest;October2011.
http://www.availabilitydigest.com/public_articles/0610/filesync.pdf.
1
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Maintaining file versions is only part of the synchronization problem. The other part is the impact on a
system by operator commands entered via various utilities. With these, an operator can modify the
configuration of a system. He can change the structure of an Enscribe, SQL/MP, or SQL/MX database,
he can change configuration parameters for Pathway, and he can change the configuration of
communication lines, to mention just a few. These configuration parameters are often not included in
configuration files that are replicated by FileSync. Rather, if nothing else is done, the same operator
commandsmustbeenteredatbothsystems.Thisisanerror-pronemanualprocedurethatleadstomany
failoverfaults.
Command Stream Replicator (CSR) from TANDsoft corrects this deficiency. CSR replicates specified
operator commands entered on the production system to the backup system to keep the configurations
synchronized.
Synchronizing the Backup System
As pointed out in the first part of this series, there are three classes of objects involved in system
synchronizationtoensureproperfailover:
 Audited Databases: HP’s RDF and several third-party products from vendors such as Gravic,
Network Technologies, Attunity, and GoldenGate replicate changes made to a NonStop audited
database. These products are typically used to keep SQL or audited Enscribe databases in
synchronism.
 Unaudited Files: FileSync ensures synchronization of NonStop unaudited files by replicating the
newversionofanentirefileorbyreplicatingonlychangesmadetoafile.
 Configuration Changes: Various NonStop utilities such as FUP, SQLCI, MXCI, and PATHCOM
areusedtochangetheconfigurationof asystem.Itis theroleof CSR toreplicate thesechanges
fromaproductionsystemtoitsbackup.
Coupled with a database replicator, TANDsoft’s FileSync and CSR provide all the facilities needed to
ensure that the software configurations of two systems are synchronized. In addition to active/backup
configurations, these capabilities are useful for active/active networks,for system migration, and for other
multisystemtasks.
Command Stream Replicator
Database and file replication utilities do not replicate system configuration changes. Consequently,
configurationchanges mustbemadetoeachsystem individually.This oftenrequires takingbothsystems
offlineuntiltheconfigurationsofbothsystemshavebeensynchronized.
The Command Stream Replicator fills this void. CSR is the final piece in the puzzle to keep NonStop
systems synchronized. It replicates everything that database and file replicators do not, such as changes
to database structures, system configuration changes, and other NonStop utility operations. CSR
replication requires no system downtime or other operator intervention. It therefore enables reliable
failover to a backup system as well as continuous processing for active/active systems. It is compatible
withallNonStopdata-replicationproductsincludingHP’sRDFandotherthird-partyreplicators.
DatabaseStructures
Database structures are defined by the Data Definition Language (DDL). Modifications to a database’s
DDLareoftenmadetoincreasethefunctionalityofthedatabase.
2
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Many DDL operations, such as SQL CREATE and ALTER, are not inserted into the audit trail by
NonStop’s transaction monitor, TMF (Transaction Monitoring Facility). Therefore, these operations are
notreplicatedbydatabasereplicationenginesthatarekeepingthedatabasessynchronized.
CSR captures SQL/MP, SQL/MX, and Enscribe DDL operations and replicates them to the backup
database automatically without stopping or suspending applications, TMF, or the database replicator
products.It does sobylinking into theutilities that updatethe DDL definition of databases, including FUP
forEnscribe,SQLCIforSQL/MP,andMXCIforSQL/MX.
Before executing a DDL command on the target system, CSR will stop any database updaters that are
modifying the target database. Once the target database has quiesced, the DDL command is executed
againstthedatabase;andtheupdatersarethenrestarted.
.
OtherUtilities
In addition to the DDL utilities, CSR supports TACL, PATHCOM, SAFECOM, SCF, and other FUP
commands. TANDsoft is in the continual process of updating this list and will instrument other utilities
uponrequest.Otherutilitiescanevenincludecustomutilitieswrittenbyanorganization.
OperationalModes
CSRhasseveralmodesofoperationthathavedifferentcharacteristics:
 Non-Sequenced Asynchronous Mode intercepts selected utility commands and stores them in a
localCommandFile.Periodically,theCommandfileis replicatedasabatchtothetargetsystems
thatmustbekeptinsynchronization;andthecommandsareexecutedlocallyonthosesystems.
 Sequenced Asynchronous Mode intercepts selected utility commands and stores them in a local
audited Command File. The Command File is accessed directly over Expand or is replicated in
near-realtimebyadatareplicationenginetothetargetsystemsandthecommandsareexecuted
locallyoneachsystem.
 Interactive Synchronous Mode intercepts selected utilitycommands and sends each immediately
to one or more target systems for execution. Command responses are returned to the source
system.
 Serialized Mode intercepts selected DDL commands and writes them to the TMF Audit File with
the DML commands that are currently being executed. At the target, replicated DDL commands
areexecutedastheyarereceived,serializedproperlywiththeDMLcommands.
CSR Architecture
Configuration
The commands that CSR must replicate are defined in a Configuration file. The Configuration file defines
the CSR environment such as the licensing information, the Command File, and, most importantly, the
specificationofthecommandstoreplicate.
The command filter specifies the utilities whose commands are to be replicated. For each utility, the
specificcommandstobereplicatedarelisted;andtheuserswhoseactionsforthisutilitywillbereplicated
are specified. Wild cards may be used. Multiple filters can be specified for CSR. For instance, certain
commands in a utility may be replicated if entered by certain users, and other commands may be
replicatedforotherusers.
3
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Non-SequencedAsynchronousMode
When using the asynchronous modes, CSR captures and stores commands in the Command File, from
wheretheyaretransmittedtothetargetsystemforexecution.
Capture
TheCommandStream Replicator is started viaa TACL(theNonStop scripting language) either manually
orviaabatchscript.OnceTACLisrunning,autilitysuchasFUPorSQLCIisinvokedfromtheTACL.
As commands are entered into the utility, CSR captures them and compares them to the command filter.
Itthecommandisnottobereplicated,itispassedtothesourcesystemforexecution.
Ifthecommandistobereplicated,itisexecutedonthesourcesystem.Whenthecommandcompletes,it
is written to the Command File along with its response, the user ID, and the user’s environment
(volume/subvolume).
Replicate
In Non-Sequenced Asynchronous Mode, the Command File is sent periodically to the target system via
FileSync over TCP/IP or Expand. Once it is resident on the target system, the Applier can read the
CommandFilecontents.
Apply
It is the responsibility of the Applier on the target system to execute the commands captured by CSR on
the source system. The Applier will read commands from the Command File and execute them on the
targetsystem.
With FileSync, a trigger can be used to modify node-specific names and to inform the Applier that a new
setofcommandsisreadyfortargetprocessing.
Log
During operation, in addition to the EMS messages that CSR generates, all errors are logged to a local
CSRLogfile.
4
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

SequencedAsynchronousMode
CSR’s Non-Sequenced Asynchronous Mode replicates commands periodically, typically every few
minutes. Therefore, there can be a significant delay from when the command is executed on the source
systemtowhenitisexecutedonthetargetsystem.
TheSequencedAsynchronousModecansignificantlyshrink thisdelay.Forinstance,itis importantthata
DDL operation be executed on the target system before a DML operation that depends upon the DDL
change(forinstance,aCREATETABLEDDLcommandfollowedbyaninsertDMLoperation).
In this mode, the CSR Command File is TMF-audited and is sent to the target system via Expand or a
data replication engine. If Expand is used, the CSR Applier accesses the audited Command File on the
source system directly. If a data replication engine is used, it replicates data changes to a target-side
CommandFilethatisaccessiblebytheApplier.
In this way, commands executed on the source system will be available to the target system in near-real
time.Thereplicationdelayisreducedfromminutestotypicallyseconds.
sourcesystem
targetsystem
EMS
EMS
messages
TACL>RUNCSR Expand messages
CSRTACL>SQLCI
CSR
NonStop Command Applier
database CSR
utility File
replicator Command
CSR audited File CSR
Log Log
Config
CSRArchitecture
SequencedAsynchronousMode
InteractiveSynchronousMode
In CSR’s asynchronous modes, commands are executed at some time (seconds or minutes) after they
areexecutedonthesourcesystem.Theonlywaytodeterminetheresultsofacommandexecutedonthe
targetsystemistoviewthetargetsystem’sLogfile.
CSR’s Interactive Synchronous Mode executes a command on the target system simultaneously with
executing it on the source system. The results of the target execution are returned to the source system.
ThetargetandsourcesystemsmustbeconnectedviaanExpandnetwork.
In this configuration, commands are intercepted as they are in CSR’s asynchronous modes. However,
rather than being buffered in a Command File, theyare sent directlyover the Expand link to the NonStop
utility on the target system. The NonStop utility on the target system will execute the command
immediately and return the response to the source system. There the target command and its response
willbedisplayedalongwiththelocalresponse.
5
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Serialized Mode
Usingtheasynchronousarchitectures,CSR willnotreplicatecommandsinsequencewithother database
operations that are being simultaneously replicated in real time by a database replication engine. This is
because CSR buffers commands in the Command File and either sends them to the target only
periodicallyviaFileSyncor replicatesthem viaadatareplicationenginewhichhas somelatency.Insome
cases, synchronizing the DDL commands being replicated by CSR with the DML commands (data
manipulation language – inserts, updates, and deletes) being replicated by a database replicator is
imperative.
For instance, if a DDL command is issued by SQLCI to CREATE a table, and an insert into that table is
subsequentlyissued,itisimportantthattheCREATETablecommandbeexecutedatthetargetdatabase
beforetheinsertcommand.Otherwise,thetargetdatabasewillrejecttheinsertcommand,andthesource
and target databases will be out of synchronization. Though a window of a few seconds may serve most
needs,ittimingisreallycritical,stricterserializationmayberequired.
TANDsofthaspartneredwithGravic,Inc,tosolvethisproblem.GravicprovidesanAPIinitsShadowbase
replication engine that is used by CSR to pass intercepted commands. Shadowbase will insert these
commands into the TMF audit trail so that they are replicated by Shadowbase properly sequenced with
otherDMLcommandsthatitiscurrentlyreplicating.
targetsystem
NonStop
utility
CSRlibrary Audit Shadowbase Shadowbase target
S/BAPI Trail Applier database
Config
CSRArchitecture
SerializedMode
6
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

In this case, command interception is different than in the other architectures previously described. The
utilitymustfirstbepreparedbyCSR.CSR’s PREPAREutilityprocesses theutility’s objectfileandinserts
an intercept software layer – the TANDsoft CSR runtime library – between the utility and the NonStop
Kernel operating system. Since PREPARE impacts only the utility’s object code, CSR does not require
accesstotheutility’ssourcecode.
The runtime library intercepts and filters commands and feeds commands to be replicated to an API
providedbyGravic.TheGravicAPIinsertsthecommandintotheTMFAuditTrailinpropersequencewith
otherDMLcommandscurrentlybeingexecuted.
Gravic’s Shadowbase replication engine replicates the Audit Trail contents to the target system, where
the Shadowbase Applier applies the DDL and DML commands in proper sequence to the target
database. As with the CSR Applier, the Shadowbase Applier will stop the database updaters while it is
applyingaDDLcommand.
Summary
The Command Stream Replicator replicates everything that other replicators don’t. It provides the final
link required to keep NonStop system configurations synchronized. No operator action is required at the
target system to execute a command that has been entered at the source system. CSR requires no
applicationmodifications,nordoesitrequireaccesstotheutilitysourcecode.
CSR improves failover reliabilitytoa backupsystem byensuringthatthe productionand backupsystems
are uniformly configured. It supports replicating configuration changes to all systems in an active/active
configuration. The result is reliable failovers and a significant simplification of NonStop system
administrationproceduresinamultisystemenvironment.
7
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com