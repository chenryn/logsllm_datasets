
Atlassian Micros (PaaS)
开发人员通过内部开发的 平台即服务 来调配这些服务，该平台即服务
可自动协调共享服务、基础架构、数据存储及其管理功能的部署，包括安全性和合规性控制要求
1 Atlassian “ ” Micros
（见上图 ）。通常， 产品由多个 容器化 服务组成，这些服务通过 部署在
AWS Atlassian 2
上。 产品使用的核心平台功能（见下图 ）包括请求路由、二进制对象存储、
/ (UGC)
身份验证 授权、事务性用户生成内容 和实体关系存储、数据湖、通用日志、请求跟踪、
可观察性和分析服务。这些微服务通过经批准的平台级标准化技术堆栈构建：
图 2：Atlassian 微服务概述。
多租户架构
基于我们的云基础架构，我们构建并运行了一个多租户微服务架构，并带有一个支持我们产品的
共享平台。在多租户架构中，单个服务可服务多个客户，包括运行我们的云产品所需的数据库和
- 3
计算实例。每个分片（本质上是一个容器 见下图 ）均包含多个租户的数据，但每个租户的数
据都是相互隔离的，对其他租户不可见。
8

3
图 ：我们如何在多租户架构中存储数据。
租户调配和生命周期
调配新客户后，很多事件都会触发分布式服务的编排和数据存储的调配。这些事件通常可映射到
生命周期中的七个步骤之一：
商务系统会立即更新相应客户的最新元数据和访问控制信息，然后调配编排系统会通过各
“ ”
种租户和产品事件让 已调配资源的状态 与许可状态保持一致。
租户事件 产品事件
•
这些事件会影响到整个租户， 激活：激活许可产品或第三方应用后
•
具体影响可能是： 停用：停用特定产品或应用后
• •
创建：创建租户并用 暂停：在暂停给定的现有产品后，从而收回其对
于全新站点 所拥有站点的访问权限
• •
销毁：删除整个租户 取消暂停：在取消暂停给定的现有产品后，
从而授予其对所拥有站点的访问权限
许可更新：包含关于给定产品许可席位数及其状态
/
（活动 非活动）的信息
9

创建客户地点并为客户激活正确的产品集。站点的概念是指许可给特定客户的多种产品的
<site-name>.atlassian.net Confluence Jira Software
容器。（例如面向 的 和 ）。这点
4
（见下图 ）对理解本报告上下文至关重要，因为本次事件中删除的就是站点容器，
并且本文档自始至终都在讨论站点的概念。
4
图 ：站点容器概述。
在指定区域的客户站点内调配产品。
调配产品后，其大部分内容都将托管到靠近用户访问地的位置。为了优化产品性能，
我们不会限制在全球托管的数据的移动，我们可能会根据需要在区域之间移动数据。
对于我们的一些产品，我们还会提供数据驻留功能。通过数据驻留功能，客户可以选择将
产品数据分布到全球，或者保存在我们指定的地理区域。
创建并存储客户站点和产品核心元数据和配置。
创建和存储站点和产品标识数据，如用户、组、权限等。
10

Jira Confluence Compass Atlas
在站点内调配产品数据库，例如 系列产品， 、 、 。
调配产品许可应用。
5
图 ：概述如何在我们的分布式架构中调配客户站点。
5
上图 展示了客户站点在我们的分布式架构中（而不仅仅是在单个数据库或存储中）的部署
方式。其中包括存储元数据、配置数据、产品数据、平台数据和其他相关站点信息的多个物
理和逻辑位置。
灾难恢复计划
(DR)
我们的灾难恢复 计划涵盖我们为灵活抵御基础架构故障和从备份恢复服务存储的所有付出。
要了解灾难恢复计划，先来看看这两个重要概念：
• (RTO)
恢复时间目标 ：如何在灾难期间快速恢复数据并返还给客户？
• (RPO)
恢复点目标 ：从备份中恢复的数据是否为最新数据？自上次备份以来，
将会丢失多少数据？
(RTO) (RPO)
在这起事件中，我们没能达到恢复时间目标 ，但是达到了恢复点目标 。
11

弹性
AWS
我们会为基础架构级别故障做好准备；例如，丢失整个数据库、服务或 可用区域。
此项准备工作包括跨多个可用区域复制数据和服务，以及定期进行故障转移测试。
服务存储可恢复性
我们还准备为因勒索软件、不良行为者、软件缺陷和操作错误等风险造成服务存储数据损坏的情
况提供恢复服务。此项准备包括设置不可变备份和服务存储备份恢复测试。我们能够获取任意单
个数据存储，并将其恢复到之前的时间点。
多站点、多产品自动恢复能力
此次事件发生时，我们还不具备选择大量客户站点，并将其所有互联产品从备份恢复到之前时间
点的能力。
我们的能力都集中在了基础架构、数据损坏、单个服务事件或单站点删除上。过去，我们必须要
处理并测试这类故障。站点级删除没有可快速自动化的运行手册，而此次事件的规模需要以协调
的方式对所有产品和服务进行工具化和自动化。
Atlassian
下面的章节将更深入地介绍这种复杂性，以及我们在 中为发展和优化大规模维护这一
架构的能力而采取的行动。
12

情况说明、时间线和恢复
情况说明
2021 Jira Service Management Jira Software Atlassian
年，我们完成了对适用于 和 的独立
“Insight – Asset Management” Jira Service
应用（名为 ）的集成。随后，该独立应用成为
Management Jira Software
中的原生功能，不再适用于 。因此，我们需要删除客户站点上安装
的旧版独立应用。我们的工程团队使用了现有脚本和程序来删除此独立应用的实例。
但由此引发了两个重大问题：
•
沟通缺失。请求删除的团队与运行删除的团队之间缺乏沟通。团队没有提供标记为删除的
ID ID
目标应用的 ，而是提供了待删除应用所在整个云站点的 。
• API ID
系统警示不足。用于执行删除的 同时接受了站点和应用 ，并假定输入正确，这意
ID ID
味着，如果传递的是站点 ，将会删除站点；如果传递的是应用 ，则将删除应用。
没有提供警示信号来确定请求删除的类型（是站点还是应用）。
所执行的脚本遵循了我们的标准同行审查程序，该程序主要关注具体调用了哪个端点以及如何
ID
调用，但没有反复核对所提供的云站点 ，没有验证其对应的是应用还是整个站点。我们根据
Staging ID
标准变更管理流程，在 中对脚本进行了测试，却发现其不会检测到输入的 是不正
ID Staging
确的，因为 在 环境中不存在。
30 30
在生产环境中运行时，该脚本最初针对 个站点运行。首次生产运行非常成功，删除了 个站
Insight 30 ID
点的 应用，且没有产生副作用。但是，这 个站点的 是在沟通不畅事件之前获得的，
Insight ID
其中包含正确的 应用 。
ID Insight ID 883
后续生产运行的脚本包含站点 ，替换了 应用 ，并针对一组 个站点执行。
4 5 07:38 08:01
该脚本于世界标准时间 月 日 开始运行，并于世界标准时间 完成。脚本根据输入
07:38
列表按顺序删除了站点，因此在世界标准时间 脚本开始运行后不久，就删除了第一个客户
883
站点。由此造成 站点很快被删除，并且没有向我们的工程团队发布警示信号。
13

Atlassian Jira Confluence Atlassian Access
受影响的客户无法使用以下 产品： 系列产品、 、 、
Opsgenie Statuspage
和 。
得知事件发生后，我们的团队第一时间开始帮助受影响客户恢复服务。当时，我们估计受影响站
700 883 Atlassian
点数约为 个（实际共计有 个站点受到影响，但我们减去了 的自有站点）。
700
在 个帐户中，有很大一部分是活跃用户数量较少的非活跃帐户、免费帐户或小型帐户。
400
基于此，我们最初估计受影响的客户大约为 人。
Atlassian
现在，我们对具体情况有了更准确的了解，为了根据 的官方客户准则做到公开透明，
775 400
共有 个客户受到了中断影响，大部分用户都属于最初估计的 个客户。其中部分客户的中
14 4 8 4 18
断时间长达 天， 月 日为首批客户恢复了服务， 月 日为所有客户恢复了服务。
我们如何协调
4 5 07:46
第一张支持请求单由一个受影响客户于世界标准时间 月 日 创建。我们的内部监控没有
08:17
检测到问题，因为这些站点都是通过标准工作流删除的。在世界标准时间 ，我们启动了重
7 08:24
大事件管理流程，组建了一支跨职能事件管理团队， 分钟后，即世界标准时间 ，事件严
08:53
重程度上升到危急。在世界标准时间 ，我们的团队确认客户支持请求单和脚本运行相关。
12:38
我们意识到恢复复杂性后，随即于世界标准时间 将事件严重程度标注为最严重。
Atlassian
事件管理团队由来自 多个团队的人员组成，包括工程、客户支持、项目管理、
通信等团队。在事件发生期间，这支核心团队每三个小时开一次会，直至所有站点都完成恢复、
验证并返还给客户。
Jira SITE
为管理恢复进度，我们创建了一个新的 项目 和一个工作流程，用于跨多个团队
（工程、项目管理、支持等）逐个站点跟踪恢复情况。这种方法让所有团队都能轻松识别和跟踪
在单个站点恢复过程中遇到的问题。
4 8 03:30
事件发生期间，我们于世界标准时间 月 日 对所有工程实施了代码冻结。这样我们能够
专注于客户恢复，消除变化导致客户数据不一致的风险，将其他中断风险降至最低，并减少因无
关变化而影响团队关注恢复的可能性。
14

事件时间线
6
图 ：事件时间线和关键恢复节点。
恢复工作流的高级概述
恢复运行分为检测、早期恢复和加速这三个主要工作流。尽管下文针对每个工作流进行了
单独介绍，但在恢复期间，所有工作流是并行发生的。
15

1
工作流 ：检测、开始恢复并确定我们的方式
1-2 4 5 6
时间戳：第 天（ 月 日至 日）
4 5 08:53 Insight
世界标准时间 月 日 ，我们发现 应用脚本造成站点被删除。我们确认这一
情况不是由内部恶意行为或网络攻击造成。并立即召集相关产品和平台基础架构团队共同解
决这一事件。
事件开始时，我们意识到：
•
恢复数百个被删除的站点涉及非常复杂的多步骤流程（详见上文架构部分），
需要很多团队奋战多天才能顺利完成。
•
对我们来说，恢复单个站点没有问题，但是要恢复大批量的站点，
我们还不具备相关能力和流程。
