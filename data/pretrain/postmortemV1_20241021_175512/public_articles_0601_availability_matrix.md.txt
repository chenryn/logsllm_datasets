The Availability Matrix
January2011
Companies need to minimize the number of technologies in which their data-center personnel
must be knowledgeable. On the other hand, the myriad applications that data-center system
administrators must support depend upon a wide range of technologies to meet the differing
availabilitySLAs(servicelevelagreements).
Depending upon the application, SLA requirements can range from seconds to days for recovery
times and for the allowable risk of lost data. The faster the recovery-time requirement and the
greater the degree of data protection, the more costly is the support infrastructure required to
meettheSLA.
Recovery time objectives (RTOs) and data-loss recovery point objectives (RPOs) do not come in
handy pairs. One application may require a recovery time of four hours but cannot lose more
than two minutes of data. Another application may require a recovery time of two minutes but
cannot lose more than four hours of data. Numerous combinations can occur, each being
satisfied by a different system configuration. Must all of the configurations be supported by the
datacenter?
Fortunately, the technologies required to meet various RTOs and RPOs are independent.
Therefore, the choice of technologies required to satisfya given SLA can be reduced to a simple
matrix – the Availability Matrix – in which one axis represents RTO solutions and the other axis
represents RPO solutions. The intersections represent availability technologies supported by the
datacenter.
Before we look at an example Availability Matrix, we review general RTO and RPO technologies
thatrepresentvariouscompromisesbetweenperformanceandcost.
RTO Technologies
AvarietyofarchitecturessatisfyRTOsrangingfromsecondstodays.
Active/ActiveSystems
An active/active system1 contains two or more processing nodes, each with its own copy of the
application database and each cooperating with the other nodes in a common application. The
nodes can be geographically separated so that the application network can survive any common
disaster.
1WhatisActive/Active?,AvailabilityDigest;October2006.
http://www.availabilitydigest.com/public_articles/0101/what_is_active-active.pdf
1
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Any transaction can be sent to any node in the application network, and it will be processed in
exactlythesameway.Toaccomplishthis,eachnodemusthaveacurrentcopyoftheapplication
database.
Thisisaccomplishedviadatareplication.Whenever
node1
a node makes a change to its local database, that
appl data
change is replicated in real time to all of the other A base
nodal databases in the application network. Thus, active
node3
each processing node has the same view of the
replicatiion data appl
applicationstateasdotheothernodes. network base A
active
Should a node fail, all that needs to be done is to
node2
reroute transactions to one or more surviving
nodes. Thus, RTOs measured in seconds can be ap Apl bd aa sta
e
achieved.
active
Active/StandbySystems
An active/standby system is a redundant pair of
processing nodes, each with its own copy of the application database. One node is actively
processing transactions; and the other node is standing by, ready to take over should the active
node fail. The nodes can be geographically separated to achieve the desired degree of disaster
tolerance.
The database of the standby node is kept
in synchronism with the active node via
data replication. Therefore, if it should
have to take over processing, it can do so
rapidly.
Thereareseveralavailabilitylevelsofactive/standbysystems:
 Warm standby – In order to take over processing, the applications must be loaded; and
they must mount the database. The network must be switched and the system tested.
Failoveristypicallymeasuredinhours.
 Hot Standby – The applications are already loaded. In order to take over processing, the
applications must mount the database, the network must be switched, and the system
tested.Failovercanbeaccomplishedinminutes.
 Sizzling-Hot Standby – The applications are loaded and have mounted the database.
Since the standby is ready to process transactions, it can be continuously tested by
sending it test transactions. All that must be done to take over operations is to reroute
transactions to it. Failover can be
accomplishedinseconds. public
active standby
node1 node2
Clusters data
private appl base private
A cluster2 comprises a set of processing nodes,
heartbeat
all with a connection to a common application
database. Generally, only one node can have virtualIP
the database mounted. Therefore, the address
2Active/ActiveVersusClusters,AvailabilityDigest;May2007.
http://www.availabilitydigest.com/private/0205/clusters.pdf
2
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

application can onlyrun on one of the nodes. All users access that node via a common virtual IP
address. To the users, the cluster presents a single system image. The users have no indication
thattheyarebeingservedbyaredundantarchitecture.
Should a node that is processing an application fail, the application is started in another node.
The new application instance mounts the database and assumes the virtual IP address.
Thereafter,trafficfromtheusersisroutedtothenewnode.
Typical failover times for clusters are measured in minutes. All cluster nodes must be collocated
because they must all connect to a common data store. The cluster provides operational
recovery,notdisasterrecovery.Inordertobeabletorecoverfromadisaster,astandbyclusterat
a remote location must be provided. The database at the standby site is kept synchronized with
theactivedatabaseviadatareplication.
ColdStandbySystems
A cold standby system comprises the hardware required to run an application, but it is not
otherwise configured to run the application. It does not contain the application database, nor is
theapplicationrunningonthesystem.
In order to put a cold standby into service, several things must happen. First, the database must
be loaded onto the node. Then the application has to be brought up and the network switched so
thatitreceivesusertraffic.Theapplicationshavetomountthedatabase,andthesystemmustbe
testedbeforeputtingitintoservice.
The major task in bringing up a cold standby is the loading of the database. This assumes, of
course, that a backup copy of the production database is available. There are two primary
methodsforprovidingabackupcopy–magnetictapeandvirtualtape.
MagneticTapeBackup
Magnetic tape is the classic backupmethod, going
back decades to the early days of computing.
Periodically, the entire production database is
written to magnetic tape. Following that, according
tosomeschedule,incrementalbackups of onlythe
changesmadetothedatabasesincethelastfullor
incremental backup are written to tape. At some
point, a full backup is once again taken; and the
cyclewithincrementalbackupsisrepeated.
Full or incremental backups are typically made daily. Should the standby system need to be
broughtup,thelastfullbackuptapemustbeloaded,followedbyeachoftheensuingincremental
backuptapes.Forlargedatabases,recoverytimescanbemeasuredindays.
VirtualTapeBackup
Virtual-tape backup is the modern form of magnetic-
tape backup. Rather than writing to magnetic tape,
tape images are written to disk on a system that is
usually remotely located. Should a cold standby have
to be brought up, its database is loaded from the tape
imagesondiskratherthanfrommagnetictape.
3
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Loadingfromdiskismuchfasterandmorereliablethanusingmagnetictape.Recoverytimescan
bereducedtohoursinmanycases.
RPO Technologies
The recovery solutions described above can be used to satisfy various RTOs. Equally important
is satisfying the SLA’s RPO, which specifies the maximum amount of data that can be lost.
Allowabledatalosscanbeexpressedeitherastimeorasanumberofdataobjects.Forinstance,
if a system is processing 100 transactions per second, an RPO specification of 100 milliseconds
is equivalenttoanRPO specificationof 10transactions.Wewill useRPOs expressedinterms of
timeinthefollowingdiscussions.
Thereareseveraldata-protectionmethodsthatcansatisfyabroadrangeofRPOs.
LogicalDataReplication
The technique that results in minimal data loss is logical data replication. With this method, a
changetotheactivedatabaseisimmediatelyreplicatedtothetargetdatabase.
There are two types of logical data replication – asynchronous replication and synchronous
replication.
AsynchronousReplication
With asynchronous replication,3 changes are sent from the active database to the standby
database“underthecovers.”Theapplicationisunawarethatreplicationistakingplace.
Asynchronous replication depends
upon the existence of a change queue
into which each database change is
inserted as it is made to the active, or
source, database. The asynchronous
replication engine follows the change
queue and sends each change to the
standby, or target, database. There is a
delay from when the change is made to the source database and when it is applied to the target
database.Thisdelayiscalledreplicationlatency.
Should the source node fail, any transactions in the replication pipeline will be lost. As a general
statement, the amount of data that will be lost is roughly equal to the replication latency of the
replicationengine.Real-timeasynchronousreplicationenginescanlimitdatalosstoseconds.
SynchronousReplication
Synchronous replication4 provides zero data loss. It can
satisfySLAswithanRPOspecificationofzero.
With synchronous replication, all database copies are
included within the scope of a transaction. As an update is
made, locks must first be acquired on all copies of the data
3AsynchronousReplicationEngines,AvailabilityDigest;November2006.
http://www.availabilitydigest.com/private/0102/asynchronous_replication.pdf
4SynchronousReplication,AvailabilityDigest;December2006.
http://www.availabilitydigest.com/private/0103/synchronous_replication.pdf
4
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

objecttobemodifiedacrosstheapplicationnetwork.Onlythencanthedataobjectbemodified.If
locksonallcopiesofthedataobjectcannotbeobtained,theupdatecannotbemade.
However, synchronous replication comes with its own problem. Because the application must
wait while locks are acquired and data objects are modified across the network, its performance
is slowed. Synchronous replication typicallylimits the distance that nodes can be separated, thus
compromising the degree of disaster tolerance that can be achieved. Synchronous replication is
typicallyusedincampusormetroenvironments.
Synchronous replication guarantees that either all copies of a data object are updated or that
noneare.Therefore,thereisnodatalostshouldtheactivenodefail.
BlockDataReplication
Most storage area networks (SANs) provide data replication at the hardware level. As a disk
blockiswrittenfromtheSANcachetophysicaldisk,theblockisreplicatedtothestandbydisk.
A characteristic of block data
replication is that the standby disk is application
essentially in a corrupted state and
cannot be used as is. This is because
the consistent image of the database
includes the recent updates made to it
that are still resident in the cache of
the active SAN. Since the standby
cache cache
SAN has only a replicate of the active
physical disk and not the entire
database, it does not reflect a blockreplication
source target
consistent copy of the database.
data data
Therefore, it cannot be opened by any
base base
application for query or reporting
purposes as can database replicates activeSAN standbySAN
createdwithlogicaldatareplication.
As with logical data replication, SAN replication can be asynchronous or synchronous.
Asynchronous replication is typically scheduled every several minutes or more. Thus, RPOs
measuredinminutescanbesatisfied.
With synchronous replication, no change can be made to the source disk unless it can also be
made to the standby disk. Synchronous SAN replication significantly minimizes data loss but
does notreduceRPO to zerosinceanydatastill inthe activeSAN’s cache willbe lostshouldthe
activeSANfail.
SomeSANimplementationsprovideanoptiontosynchronizeatthecachelevelratherthanatthe
disk level.Inthesecases,thestandbydatabase is consistent.If synchronous cachereplicationis
used,thereisnodatalossfollowingaproduction-nodefailure.
The Availability Matrix
Is there some relationship between these RTO and RPO solutions of which we ought to be
aware?Theanswer is no. ThesolutiontoRTO is completelyindependentof the solutiontoRPO.
RTO has its own set of solutions to meet different requirements, and RPO has its own set of
solutions.ThisleadstotheAvailabilityMatrix,anexampleofwhichisshowninFigure1.Itcanbe
usedtovisualizethesolutiontoanRTO/RPOspecification.
5
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

The vertical axis shows solutions for increasing RPO. The horizontal axis shows solutions for
increasing RTO. By picking an RPO/RTO point that meets an SLA, the pertinent solution is
determined.
Some points on this matrix may not exist because they do not make sense or because they are
notsupported.Forinstance,onewouldnotuseblockreplicationinanactive/activesolution.
However, given a set of supported solutions, the solutions can be easily mapped with the
AvailabilityMatrixintotheRTOsandRPOsthattheydosupport.
OPRgnivorpmI
For instance, using Figure 1 as an example, if the SLA calls for an RTO of eight hours and an
RPO of five minutes, the technical staff might recommend a cold standby system with a SAN
synchronized with the primary SAN via asynchronous replication. If this solution is too expensive
fortheapplication,theSLAwillhavetoberelaxedtoapointthatiswithinbudget.
Availability
Availability is a third parameter specified by the SLA. It is often specified as a number of 9s. An
availabilityofthree9smeansthatthesystem willbeup99.9%ofthetime.Thatis,itcanbedown
abouteighthours per year. Asystem withanavailabilityof five9s (99.999% uptime)willbedown
nomorethanaboutfiveminutesperyear.
Availabilityis independentof theRTO andRPO specifications.AsmallRTO does notnecessarily
mean a high availability. Rather, the two specify the system’s failure rate. If a system has a
recoverytime of one hour and an availabilityof three 9s, it can fail eight times per year and meet
6
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

theSLArequirements.Conversely,ifasystem hasarecoverytimeofonehourandanavailability
requirementoffive9s,itcanfailontheaverageonlyonceeverytwelveyears.
Availability is, in effect, a third dimension of the availability matrix but not a simple one. The
availability of a system is dependent upon many factors, including the availability of its
components (servers, storage devices, networks, power and air conditioning, and so forth) and
the extent of redundancy used in the architecture. A straightforward way to analyze the
availability of a complex solution is given in the Availability Digest article entitled Calculating
Availability–HeterogeneousSystemsPart3.5
Summary
A typical data center is a mix of technologies, and there is understandable reluctance to expand
the technology base. The staff will require additional training and may have more difficulty
managingtheexpandedtechnologybase.
With the Availability Matrix, the staff can easily present its existing capabilities to the user
communityto choose the appropriate availabilitysolution. If an application requires an availability
not yet supported by the data center, the Availability Matrix provides a useful method for
determiningthebestadditionaltechnologiestoincorporateintothedata-centertechnologymix.
5CalculatingAvailability–HeterogeneousSystemsPart3,AvailabilityDigest;June2008.
http://www.availabilitydigest.com/public_articles/0306/calculating_availability_heterogeneous_syst.pdf
7
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com