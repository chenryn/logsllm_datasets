Why Back Up?
April2009
The blogging platform JournalSpace suddenly went out of business when it lost its database that
was not backed up and could not be recovered. Thousands of bloggers lost years of their work.
Howcouldthishavehappened?
JournalSpace
Startedin 2003,JournalSpacewas apopular and growing blog-hostingservice.Itwas primarilya
freeservicesupportedbyadvertising,butitofferedanupgraded“professionalservice”forafee.
JournalSpace is perhaps best known as the site of the “Queen of Sky” blog by Ellen Simonetti,
who was fired in 2004 from her job as an airline flight attendant by Delta Airlines.1 Delta deemed
some of her blog content, including photographs, to be inappropriate. The national coverage of
thiseventraisedaninternationaloutcryagainst“employerblogbacklash.”
Ellen’s continuing blog was wiped out along with thousands of others on December 18, 2008,
whenJournalSpacelostits entire databaseand was unabletorecover.This was thesecondtime
in its history that it had lost its database, the first time being a warning that evidently went
unheeded.
Threeweeks later,theJournalSpacedomain was purchased byathird partywho resurrectedthe
sitebutnotthedata.Six yearsofmemorieswereerasedformanyofthesite’sbloggers.
What Happened to JournalSpace’s Database?
Apparently, the database’s demise was the malicious act of a disgruntled employee – even
worse, the IT manager. JournalSpace claims that it had caught the IT manager stealing from the
company. They summarily fired him, but he did a slash-and-burn on his way out, overwriting the
entiredatabasewithgarbage.
This should havebeen onlya minor irritant becauseall that was needed to curetheproblem was
torestorethedatabasefromthebackupcopy.Theproblem?Nobackupcopy!
It was, of course, the IT manager’s responsibility to ensure that a backup copy was periodically
taken and preserved. However, though he dutifully backed up the HTML code for the site on a
remote server, his backup strategy for the blog database was to use a RAID 2 mirrored disk. If
onediskfailed,thedatabasewasstillavailableonthemirror.
1Wikipedia:EllenSimonetti
1
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Unfortunately, upper management should have known that this was not a backup strategy at all.
True, it protected against a hard-disk failure. But it did not protect against a site disaster – or a
maliciousact.
JournalSpace’smanagementdescribedtheincidentasfollows:
“It was the guy handling the IT (and, yes, the same guy who I caught stealing from the
company, and who did a slash-and-burn on some servers on his way out) who made the
choice to rely on RAID as the only backup mechanism for the SQL server. He had set up
automated backups for the HTTP server which contains the PHP code, but, inscrutably, had
no backup system in place for the SQL data. The ironic thing here is that one of his hobbies
wastellingeverybodyhowsmarthewas.”
Soundslikehemayhavebeensmarterthanthemanagement.
The Attempt At Recovery
In a panic, the JournalSpace management sent the hard disks to DriveSavers, a service known
for recoveringdata from burnt,drowned,andcrushed hard drives.On Saturday, thedayafter the
disaster,JournalSpacepostedthefollowingmessageonitsblog:
“What happened is that both disk drives which hold the databases have failed. On Monday,
we’ll be sending then to DriveSavers for recovery. Because of postal transit times and the
holidays,JournalSpacewilllikelybedownformostorallofChristmasweek.We’reverysorry
forthisinconvenience.”
OnSunday,itsaid:
“The drives will be on their way to DriveSavers in the morning. Its estimated charge for a full
datarecoveryisroughlyequaltotheamountofmoneyJournalSpacemadeinthepastyear.”
Later,itadded:
This is daythreeof DriveSavers’5to7dayturnaroundtime.Someprogress hasbeenmade,
buttheycannotgivea“yes”or“no”answeronfullrecovery.
Unfortunately, the answer was ultimately “no.” The disks were unrecoverable. They had been
overwrittenwithrandomdata,obliteratingtheoriginaldata.
JournalSpacecloseditsdoors.
The Aftermath
Other bloggers entered the fray with criticism, support, and ideas. One blogger (Andrew Heart)
found that he could recover manyof the blog pages from Google’s cache. He suggested doing a
Google search on <username>.journalspace.com, which recovered many pages. However, any
pagesthattheownerhadmarkedas“private”werenotcachedbyGoogleandwerelostforever.
OnJanuary11,2009,theJournalSpacedomainnamewassold;andthenewownersresurrected
the site but not the data. They promised to back up their data every night to an offsite backup
facility and to take local backups every hour. In this way, bloggers should never lose more than
anhour’sworthofdata.
The original JournalSpace operators are now trying to make their blogging platform open source
underanewname.
2
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Lessons Learned
Theobviouslessonfromthiscatastropheissimple–backup!
Butit’snotquiteassimpleasthat.Backupshouldoccurateverylevel.Weshouldknowtodothis
with personal data on our PC (whether we back up or not).We often believe that our data will be
protected when we use online hosting services for our blogs, our online retail stores, or SaaS
(softwareasaservice)offerings.Butmanybadexperiencestellusotherwise.
At the highest level, the hosting service must periodically back up its database. The backup
shouldbetoaremotesitetoprotectagainstasitedisastersuchasatornado,earthquake,fire,or
flood. The hosting service should disclose its backup policy and should include it in a service-
levelagreement.Itshouldalsodisclosetheanticipatedrecoverytimefollowingadatabaseloss.
Furthermore, the backup storage should be durable and preclude deletion or modification. This
protects against malfeasance such as occurred with JournalSpace. Magnetic tape satisfies this
latest criterion but has its own problems. Database recovery from tape can take days if the
database is large, and what happens if a tape proves to be unreadable? Online storage services
suchasCarbonite(www.carbonite.com)offeranothersolution.
But the most exhaustive backup strategies can still fail. Therefore, it is incumbent on the user,
whether he be a blogger, a retailer, or a business using the new technology of cloud computing,
to ensure that critical data is backed up independently of the online service. For a blogger, this
maysimplymeanthatheperiodicallybacksuphisownPCfilesonaremovablemedium oronan
online backupsite.For applications in which the datais createdbythehostingservice,such as a
retail store, the user should determine the facilities provided by the hosting service that will allow
thatdatatobeindependentlybackedupbytheuser.
Our procedures here at the Availability Digest attest to that practice. Our hosting service gathers
all of our subscriber information. It is placed in a file on its servers (which we hope are backed
up), but this file is available for us to download. We periodically download a copy of the current
subscriberlistandsaveitonourlocalserver.Inthebackground,weuseCarbonitetobackupthe
HTML for our web site and to back up our subscriber list. Carbonite, our hosting service, and our
server will all have to be destroyed in order for us to lose our data. Though this is always
possible,wefeelconfidentinthelongevityofourdatabase.Doyou?
References
Information for this article was taken from the January, 2009, issues of Techcrunch,Word Press,
geek.com,QuickOnlineTips,andtheJournalSpaceblog.
3
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com