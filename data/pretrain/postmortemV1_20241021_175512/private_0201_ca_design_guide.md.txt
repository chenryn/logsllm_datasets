Continuous Availability Systems Design Guide
January2007
The Continuous Availability Systems Design Guide1 is an excellent coverage of issues that
confront an organization interested in moving from a classical computing environment to a
continuousavailabilityenvironment.
Itis not a“bestpractices” book for ensuringcontinuous availability,though itdoes touchonmany
of thesetopics.Rather,itdeals withthedecision-makingprocess indetermining howtoapproach
thedesignandevaluationofacontinuousavailabilitysolution.
Thoughdated(itwaspublishedin1998),itsapproachisstillcurrent.Infact,eventhoughtheterm
“active/active”wasnotevencoinedthen,itdealsfrequentlywithactive/activesolutions.
What is Continuous Availability?
Thisbookdefinesthreelevelsofavailability:
High Availability means that the system is operational during its intended hours of
service.Highavailabilityisimportantifthecostofdowntimeissevere.
Continuous Processing means that the system provides services full-time 24 hours per
day,365daysayear.
Continuous Availability is high availability plus continuous processing. The system
providesservicesallofthetimewithahighdegreeofavailability.
Continuous availability generally implies that there are redundant systems and that outages are
shortenoughsoasnottobeseenasoutagesbytheusers.
There is a definitive compromise between cost, recoveryspeed, and outage coverage. Improving
anyoneofthesewillhaveanegativeimpactononeorbothoftheothers.
Six activities requiredfor theplanningandimplementationof acontinuous recoverycapabilityare
described:
 Determinewhatthebusinessrequires.
 Definethedataprocessingrequirements.
 Designthecontinuousavailabilitysolution:
o System
1
ContinuousAvailabilitySystemsDesignGuide,ITSORedbooksSG24-2085;1998.
1
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

o Applications
 Selectproductstomatchthedesign.
 Implementthecontinuousavailabilitysolution.
 Keepthesolutionup-to-date.
The book is less an exercise in system design than it is a comprehensive discussion of planning
considerations pertaining to continuous availability. Continuous availability is a corporate issue,
notadataprocessingissue.Assuch,itrequires
- amajorinvestment.
- ananalysisofbusinessprocessprioritiesandimportance.
- majorchangesinthecorporatedataprocessingculture.
- anacceptanceoftheresidualrisksnotcoveredbythesolution.
- aboveall,amanagementcommitment.
Determine What the Business Requires
Continuousavailabilitybringswithittwomajoradvantages:
 Itreducestheimpactofdowntimesinceoutagesarerareandbrief.
 Itallowsextendedperiodsofservice.
A set of service level objectives must be established for each business process. These service
levelobjectivesdocument,amongotherthings,
- therequiredhoursofservice.
- themaximumnumberofoutagesallowedpertimeinterval.
- themaximumallowablerecoverytimefromanoutage.
The maximum number of outages per time interval defines the average time between outages. If
thistimeistooshort,criticalfunctionssuchasbatchprocessingmightbefrequentlyinterrupted.
The maximum allowable recovery time is important since an extended recovery time would deny
usersserviceduringthistimeandcouldseriouslyimpactthebusiness.
Determine the Data Processing Requirements
Nowthatservicelevelobjectives havebeendefined,itis importanttounderstandwhythecurrent
systemisnotmeetingtheserequirements.
The first step is to understand the availability performance of the current system. This is
accomplished via a Past Outages Analysis. This analysis uses whatever data is available to
determine the reasons for periods of past unavailability (hardware, software, etc.), whether each
outage was avoidable (such as an operator error), the root cause of each outage (i.e., that
problem which, if corrected, would have prevented the outage), and what the recovery
procedureswere.
This analysis leads to a Component Failure Impact Analysis. For each component in the system
(such as processors, disk subsystems, channels, networks, workstations), a determination is
made of the impact of that component’s failure on the system operation. Will it take down the
entire system, will it affect only a set of users or functions, or will it have no impact (such as a
2
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

redundant component). The method for detecting each component failure, the failure detection
time,andthefailurefrequencyisalsodocumented.
In addition to unplanned outages, there are requirements for planned downtime. These include
batch processing, database backups, database reorganization, and replication of the database to
othersystems.Thesemustbedeterminedanddocumented.
With this current operational data available, the service level objectives determined in the
previous step must now be converted to data processing availability requirements. Providing a
levelofavailabilitytoabusinessprocessmeansimposingcorrespondingavailabilityrequirements
on the data processing components – the applications and data sets - that support it. Thus, the
availabilityofeachapplicationanddatasetcanbespecified:
- Itshoursofoperation.
- Itsavailability(itspercentageofuptimeduringitsservicetime).
- Itsmaximumacceptabledowntime.
If a component is shared by several business processes, it must support the availability
requirementsofthemostcriticalbusinessprocess.
The sum of this information is called the application inventory. Based on this inventory, a Service
LevelAgreement(SLA)canbestructured.Thiswillbethedefiningdocumentforthedesignofthe
continuousavailabilitysolution.
Design the Continuous Availability Solution
Thebulkofthisbookdealswiththedesignofacontinuouslyavailablesystem.
Redundancy
The heart of a continuously available system is redundancy. If failover is to be virtually
instantaneous so far as the user is concerned, there must be another system that is immediately
availabletotakeovertheroleofafailedsystem.
Environment
Environmentalfactorsincludepower,cooling,buildingfacilities,andnetworkaccess.
The primary power source should be backed by an uninterrupted power system (UPS) or be
availablefromindependentsuppliers.
The cooling system should be redundant, with each side powered from an independent source.
Automatictemperatureandhumiditymonitoringmustbeprovided.
Thebuildingfacilitiescouldbedamagedbyfire,earthquake,aircraftimpact,flood,malicious acts,
or social unrest (riots). In addition, the building might become unavailable for an extended period
oftimeduetopower,water,orothermaintenanceactivities.Alternatefacilitiesmustbeplanned.2
Access to the external network should be accessible from two different points, with a fast, non-
disruptiveswitchover.
2
SeeFireintheComputerRoom,WhatNow?,ITSORedbooks,SG24-4211;1997.
3
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

Hardware
Processors –Singleprocessors cancontainagreatdealof redundancy,rangingfrom dualpower
supplies to symmetric multiprocessors accessing a common memory. However, ideally two or
more processors will be a provided in a redundant configuration. They could be arranged in an
active/backupconfigurationorinanactive/activeconfiguration.
Channels – There should be at least two I/O channels connecting each storage device and any
otherperipheralsthatarecriticaltosystemoperation.
Storage – RAID (random arrays of independent disks) is an economical and common way to
provide storage redundancy. A RAID array comprises a set of disks with one or more disks than
are needed to provide the desired capacity. Data is striped across the disks in such a way that it
can be recreated even in the event of a disk failure. There are several configurations of RAID
arrays, from RAID 1 to RAID 6. RAID 3 and RAID 5 are the ones in common use today. RAID 6
providesprotectionagainstdualdiskfailures.
Network
Aredundantnetworkbackboneshouldbeprovidedsothatcommunicationpathscanbererouted
aroundfailedcomponents.Eachhostshouldhavemultiplegatewaystothenetwork.Forlocal
areanetworks,eachusershouldhaveredundantattachpoints.
OperatingSystem
An operating system can fail for several reasons, including hardware failure, corrupted files, or
programming error. If the system cannot provide a fast reload following such a failure, the only
protection against an operating system failure is to have a backup standing by, ready to take
over.
The backup can be put to good use for operating system patches and upgrades. New patches
and upgrades can be applied to the backup system first and thoroughly tested. The roles of the
active and backup systems can then be interchanged until the next patch or upgrade is to be
installed.
Applications
Recovery from application failures can be done by running the applications in an active/active or
active/hot standby configuration. If the application is well tested, failures are typically due to an
unusual sequence of events or to race conditions. It is unlikely that the same error will occur at
the same time in multiple instances of the application, so routing subsequent transactions to an
alternateinstanceshouldallowcontinuedsystemoperation.
Iftheapplicationisdesignedforfastrestart,itmaybesatisfactorytosimplyrestartit.
OperationalFocalPoint
Theoperationalfocalpointistheareainwhichallsystemmaintenanceconsolesandsystem
operatorsarelocated.Theremustbeprovisiontoreplaceafailedconsoleortoallowitsfunctions
tobetakenoverbyanotherconsole.
4
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

IntegrationandIsolation
An integrated system is one in which a small number of well-managed, well-maintained systems
provide application services. A small number of large systems will have failure rates less than
thoseofalargenumberofsmallersystems.3
Isolationisachievedbyrunningdifferentapplicationsintheirownspacesothattheycannotaffect
or corrupt other applications. Isolation can be obtained by running applications in their own
systems. Isolation can also be obtained on a single system by providing private address space,
multipleoperatingsystemimages,anddedicateddiskpools.
Active/activesystemsprovidebothintegrationandisolation.
Automation
Operatorerrorscompriseamajorsourceofsystem failures.Therefore,itisimportanttoautomate
as much of the system operations as possible. This includes active system monitoring, automatic
faultrecovery,networkrecovery,andfailovertoabackupsystem.
Totheextentpossible,thereshouldbeonefocalpointformultiplesystems.
Concurrent MaintenanceandRepair
Scheduled downtime must be minimized. The system must be maintainable while it is still
running. This includes hardware repair and reconfiguration, operating system upgrades, and
subsystemmaintenance.
System changes must be thoroughly tested before being put into service. However, one must be
preparedtofallbacktoaknownworkingconfigurationifnecessary.
Design Applications Towards Continuous Availability
ApplicationCharacteristics
Applicationssuitableforcontinuousavailabilitymusthavethefollowingcharacteristics:
- Correctness–Itiserrorfreeandperformsthespecifiedfunctions.
- Robustness–Ithandlesunanticipatedevents.
- Extendibility–Itiseasilyextendedtonewfunctions.
- Reusability–Provencorrectsoftwarecanbeusedinnewapplications.
DesignforFaultTolerance
Applications should be designed so that they can determine that a problem has occurred, can
isolate the failed component, can report the problem, and can quicklyrecover from or bypass the
problem.
3
SeeCan10,000ChickensReplaceYourTractor?,AvailabilityDigest;December,2006.
5
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

DesignforFailureResistance
Isolation is the key to failure resistance. The application should be isolated from any problems
experienced by other applications. Applications should communicate with each other via
messagingtoensureisolation.
Data isolation is equally necessary. Using logical database definitions and partitioning are ways
to provide data isolation. The users should be able to provide a subset of services should access
topartofthedatabasebecompromised.
Finally,recoveryfromanyfailureshouldbefast.
AvailabilityManagement
A comprehensive application monitoring and failure reporting system must be provided.
Transaction volumes and response times should be measured to anticipate growing problems.
The impact of outages should be recorded. Audit trails should be maintained to improve the
recoveryofdata.
DesignforNondisruptiveChangesand Maintenance
Adding or changing users, terminals, or global parameters should be possible without system
interruption. To provide nondisruptive maintenance, the system should allow coexistence of
different versions of applications. Providing a backup system or an active/active configuration
yieldsanenvironmentconducivetotestinganddeployingnewapplicationversions.
DesignforContinuousApplications
Planned outages should be eliminated. This includes batch processing and database backup,
reorganization,andreplication.
All critical data must be stored in persistent storage such as disk. This storage should be
redundant, such as RAID arrays. Auditing of data changes should be provided to facilitate data
recoverytoaknownandconsistentstate.
SystemsManagement
A problem management facility should be provided to recognize, report, and resolve or bypass
problems.
Changes are essential for the stability of the system. A change management facility should
collect, prioritize, and schedule changes. Provisions must be made to test changes and to fall
backtoaknownworkingconfigurationifnecessary.
Availability must be managed as described above and evaluated against the Service Level
Agreement.
Select Products to Match the Design
Oncethedesignhasbeencompleted(orevenasthedesignproceeds),productsmustbechosen
to implement certain of the system requirements. For those requirements for which no product
exists,in-houseimplementationisrequired.
6
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

Products should be chosen first based on the required functionality, then on product quality.
Product quality may be inferred from the reputation of the supplier, the support level provided,
andthematurityoftheproduct.
Once products have been chosen and the in-house development requirements understood, an
estimated cost for the solution can be determined. This should include hardware, software,
networks,services,implementation,andmaintenance.
This costcannowbecomparedtotheperceivedadvantages of acontinuous availabilitysolution.
These benefits are primarily the reduced cost of downtime and the benefits of extended service
hours.
Implement the Continuous Availability Solution
The hardware and software products and in-house implementations must be installed,
customized and tested. Automation, recovery, rollback, and failover procedures must be
developed.
Recovery procedures start with the isolation of a failed component and continue with the
replacement or repair of that component. The component and perhaps the affected subsystem
mustberestartedandreturnedtoservice.
Redundantprocessorscanbeconfiguredasanactive/backuppair,asanactive/activesystem,or
as a duplicate-processing pair in which both processors perform identical processing functions
andcomparetheiroutputs.
Keep the Solution Up-to-Date
The continuous availability solution must be maintained as new applications are installed, the
hardware is reconfigured, the network changes, the organizational structure changes, and so on.
Changemanagementisthekeytothisactivity.
Thesystem proceduresmustbecontinuallytestedtoensurethattheyareup-to-dateandtokeep
the staff trained. Test scenarios should include processor workload reallocation, disk volume
relocation, disk volume reconstruction, processor reconfiguration, RAID or other disk recovery,
channelpathswitching,andnetworkreconfiguration.
Summary
The Continuous Availability Systems Design Guide is written from the mainframe user’s
viewpoint. As such, it is a rather complete description of the issues which a mainframe shop will
face should they desire to move to continuous availability. However, the issues are applicable to
any data processing organization seeking to improve its availability, whether it be an industry-
standardservershoporoneusingfault-tolerantcomputers.
Written by IBM, the Guide includes an appendix which describes many of IBM’s continuous
availabilityproducts.
7
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman
