Tour Operator Optimizes Look-to-Book Processing
August2011
A large, international packaged-tour operator found that its booking system was being overloaded with
rafts of customer queries before the customers made final transactions. A typical customer investigates
several travel arrangements, such as airfares, hotels, and car rentals, before making a booking decision.
Thisactivityiscalledthelook-to-bookratio.
The tour operator solved its problem bymoving to an asymmetric active/active configuration that allowed
it to process queries efficiently on Windows systems while dedicating its large NonStop transaction-
processing systems to the execution of the final booking transactions. Not only did the tour operator
improve the efficiency of its booking system, but it is now able to easily and economically expand its
querycapacityasdemandincreases.
In addition, the booking and query nodes can interchange roles to eliminate planned downtime and to
provide continuous availability and disaster tolerance in the event of a system fault or a data-center
failure.1
The Company
The tour operator specializes in organizing tours that can be marketed by its customer travel-booking
agencies. Its tours cover North America, Central America, the Caribbean, Europe, Hawaii, Asia, and
manypopularskiareas.Morethan1,100destinationsworldwideareservicedbyitstours.
Italsocaterscustomizedtourstoindividualsandtogroups.
Founded in the 1970s, the company employs 1,500 people in 15 offices worldwide. It was the first tour
operatortomakeleisuretravelavailablethroughanairlinereservationsystem.Manyofitstourstodayare
plannedinconjunctionwithseveralmajorairlines.
It also was the first tour operator to dynamically package, market, and sell vacations via a variety of
distribution channels. It currently markets over a dozen-and-a-half tour brands, each specializing in a
particulartourvenue.
In addition to its own tours, the tour operator provides reservation services for many independent travel
agencies.
Its customer-care and customer-quality centers are open twenty-four hours a day throughout the year.
The tour operator finds it imperative that its systems are always up. It therefore turned to Tandem
Computers(nowHPNonStop)systemstoprovideround-the-clockavailabilityforbookingservices.
1
ThisarticleisrepublishedfromtheJuly/AugustissueoftheConnection,withpermissionoftheConnection.
1
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

The Look-To-Book Problem
A characteristic of travel-reservation systems is that a customer makes a lot of queries in the search for
availability and rate comparisons for airline seats, hotels, cars, and other services needed to complete a
vacation.Onlyafteragreatdealofsearchingdoesthecustomermakeadecisionandbookreservations.
Theratioofqueriestotheactualbookingtransactionisknownasthelook-to-book ratio.Beforetheageof
the Internet, when travel agents were doing booking, the booking activity involved 80% to 90% complex
queries and 10% to 20% booking transactions. The Internet changed all that. Now users search many
sites to find the best deals before booking. Even worse, in response to a single user query, travel
aggregation sites query many travel sites to find the best deal for the user. The look-to-book ratio has
dramaticallyclimbedtoperhaps500queriesormoreforeverybooking.
ThecompanyinstalleditsTandemsystemtoprovidetheseservicesbeforetheadventoftheInternet,and
for years the system performed its functions flawlessly. As the company’s business grew, so did the load
on its booking system. Then came the Internet with its exploding look-to-book ratios. The problem was
particularly aggravated around the holidays when query processing caused the query activity to increase
hundredsoftimesthenormalquery-processingload.
This load ultimatelygrew to the point at which the booking system was in peril of running out of capacity.
The tour operator faced the problem of expanding the booking system’s capacity beyond the capabilities
ofasinglesystem.
The Move to Asymmetric Capacity Expansion
The company decided to move to a multinode, distributed system by placing the query processing and
the actual booking transaction processing onto different systems. Its plan was to have one master
booking system that handled all booking transactions. This system maintained the master booking
database, which was to be replicated to multiple read-only query systems that would handle the heavy
queryload.
Architecture
The tour operator chose HP NonStop for its master system. The booking database is maintained on the
master system by HP’s NonStop SQL/MP. A single HP NonStop system can easily handle all of the
bookingtransactionssolongasitdoesnotalsohavetofieldamassivenumberofqueries.
The master system’s booking database is replicated to the query systems via the Shadowbase data
replication engine from Gravic, Inc. (www.gravic.com). In this way, the heavy query load can be
distributedacrossmanysystems.
To provide the reliability that the tour operator needs, some of the query nodes are also NonStop
systems. In this way, if the master NonStop system fails, one of the NonStop query nodes can be
promoted to be the new master. After all, each query node has a full copy of the database available to it.
However, for economy purposes, most of the query systems are Windows systems using Microsoft SQL
Server (MS SQL). Shadowbase provides the heterogeneous replication between NonStop SQL/MP and
theWindowsMSSQLServerdatabases.
To maximize performance, the key structure of the master database is different from the key structure of
the query nodes. The master database uses a key structure optimized for OLTP transaction processing
(“skinny” keys). This allows it to post booking transactions with a minimum of processing load. The query
databasesusekeysoptimizedforOLQPqueryprocessing(“fat”keys).Thisallowsqueriestobeexecuted
asquicklyaspossible.
2
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

r
e
pli
c
ati
o
n
CapacityExpansion
Using this architecture to support asymmetric capacity expansion, all that needs to be done as the tour
operator’s business increases is to add Windows or NonStop query nodes. No system needs to be
replaced with a larger system, although this is always an option. No changes to any applications need to
bemade.Capacityexpansionissimpleandeconomic.
TotalCostofOwnership
The tour operator’s new architecture significantly reduces its total cost of ownership (TCO). It now can
expand to meet increased query demands bysimply adding inexpensive commodityWindows servers as
additionalquerynodes.
Availability
Thearchitecturehasmanyadvantagesfrom anavailabilityviewpoint.Infact,itsavailabilitycharacteristics
areverysimilartothoseofactive/activesystems.2Itprovides,ineffect,continuousavailability.
First of all, the distributed architecture allows the nodes to be geographically separated for disaster
tolerance.
If a query node fails, all that needs to be done is to reroute the queries normally handled by that query
system to other surviving querynodes, whether theybeWindows nodes or NonStop server nodes. Thus,
recovery time following a query-node failure is fast enough that it may not even be noticeable to a travel
agentmakingaquery.Intheworstcase,heorshewillsimplyhavetorepeatthequery.
2WhatisActive/Active?,AvailabilityDigest;October2006.
3
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

When a failed query node is returned to service, all that needs to be done is to synchronize its database
withthemasternodeandthenredirecttheappropriatequeriestoit.
A similar procedure is used for a master-node failure. The query nodes each contain an up-to-date copy
of the master database. Should the NonStop master node fail, a NonStop query node can be rapidly
promoted to be the new master node. All that needs to be done is to reroute transactions to the new
masternodeandtoredirectthereplicationconfigurationtopointtothenewmasternode.
Since the new master node (a query node in its former life) has the entire booking database, it can
immediately begin processing booking transactions. True, the new master node will be applying
transactions using the less efficient “fat” keys; but it will nonetheless process transactions properly. The
longer transaction-processing time is a fair tradeoff for continuous availability in the unlikely event of a
master-systemfailure.
The promoted node can continue to handle its original query load as well as the transaction-processing
load.Alternatively,queriesnormallydirectedtoitcannowbedirectedtootherquerynodes.
When the original NonStop master system is ready to be put back into service, its booking database is
synchronized with the current master system. The original master system is then returned to service by
routingnewtransactionstoitandreconfiguringthereplicationengines.Thequerysystem thatstoodinfor
thefailedmastersystemreturnstoquery-onlyservice.
EliminatingPlannedDowntime
This architecture can also be used to eliminate planned downtime. To upgrade a query node, queries
directed to it are directed to other query nodes. The query node is then taken down, upgraded, and
returned to service. Its queries are now redirected to it. In this way, an update can be rolled through all
querynodesonenodeatatime.
ThemasternodeisupgradedbyfirstpromotingaNonStopquerynodetobethenewmaster.Theoriginal
master node is then taken down, upgraded, and returned to service. At this point, all transactions are
redirectedtoit,freeingupthepromotednodetoreturntodedicatedqueryprocessing.
DataLocality
Anotheradvantagethatthis distributedarchitectureprovidesisthatquerysystemscanbelocatedineach
of the tour operator’s fifteen worldwide offices. Providing this level of data locality significantly decreases
theresponsetimeofqueriesandreducescommunicationcosts.
ApplicationIntegration
The tour operator took advantage of the new system’s data-replication facilities to integrate an
Operational Data Store (ODS). Shadowbase replicates data from the master booking node to Windows
servers running MS SQL. The servers support a large ODS application used to improve the quality and
appealoftheoperator’stours.
Summary
By expanding its original NonStop system to a multinode, heterogeneous distributed system, the tour
operatorhasbeenabletogainmanyadvantages.Thenewsystem providescontinuousavailabilityinthat
the failure of any node will have a negligible impact on the operator’s travel-agent customers. This
availability advantage extends to disaster tolerance since the destruction of any one processing site is
immediatelyrecoveredbyreroutingtraffictoanothersite.
4
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Availability is further improved by the elimination of planned downtime. Upgrades can be rolled through
thesystemonenodeatatimewithoutdenyingservicestoanyuser.
Equally important is that the system is now easily expandable by adding Windows query nodes.
Expandabilityissimpleandeconomic.
Performance is improved by structuring query nodes to efficiently process queries (complex read-only
transactions) and by structuring the master node to efficiently process booking transactions (update
transactions). One system does not need to do both (except during a master-node failure). Furthermore,
since query systems can be deployed in the vicinity of clusters of clients, query response time is
improved.
Finally, by incorporating data replication, other applications can be integrated with the major booking
applicationbyreplicatingbookingdatatothemortoadatabaselocaltotheapplicationsbeingintegrated.
5
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com