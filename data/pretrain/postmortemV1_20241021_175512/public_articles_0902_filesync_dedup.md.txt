TANDsoft FileSync Adds Deduplication
February2014
FileSync1 is a file-replication utility from TANDsoft, Inc. (www.tandsoft.com). FileSync
ensures that the configurations of two HP NonStop data-processing systems are kept
synchronized by replicating Enscribe and OSS file changes between them. FileSync is useful to keep a
backupsystem synchronized withits productionsystem,topropagate upgrades betweensystems,andto
migrateapplicationsfromonesystemtoanother.
In this article, we look at how data deduplication enhances FileSync’s role in keeping a backup system
synchronized with its production system. With deduplication, only changes to a file need to be replicated
to the backup system rather than the entire file, thus dramatically reducing time and bandwidth
requirements.
Active/Backup Systems for High Availability
A common technique for guaranteeing system availability is to configure a backup system that can take
overprocessingshouldaproductionsystemfail.
ConfigurationDriftCausesFailoverFaults
A major hurdle to achieving high availability with active/backup architectures is configuration drift. If the
software versions of programs, scripts, and configuration files resident on the backup system are not up-
to-date, version conflicts may prevent the backup system from operating properly. Failing over to the
backup system following a production system failure may be unsuccessful, resulting in a failover fault.
Equally important, testing failover is made much more complex if version errors must be tracked down
andcorrectedinordertosuccessfullypassatest.
To ensure that a failover will be successful, it is important that all versions of software running on the
backup system match that of the properly operating production system. Tools are available to compare
the production system software modules to those on the backup system to detect version errors. If such
errorsarefound,operationsstaffmusttakestepstocorrectthem.
A more advanced solution is to have a facility that not only will detect version errors on the backup
system but that also will automaticallycorrect such errors. Such a facility is FileSync from TANDsoft, Inc.
CoupledwithTANDsoft’sCommandStream Replicator,FileSyncrelievestheoperationsstafffromhaving
tocontinuallymonitorandcorrectbackupsoftwareversions.
1FileSyncandCSRSynchronizeNonStopSystems:Part1–FileSync,AvailabilityDigest;October2011.
http://www.availabilitydigest.com/public_articles/0610/filesync.pdf
1
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

SynchronizingtheBackupSystem
Threeclassesofobjectsareinvolvedinsystemsynchronizationtoensureproperfailover:
 Audited Databases: Several products are available for replicating changes in real timemade to a
NonStop audited database, whether it be Enscribe or SQL. They include RDF from HP,
Shadowbase from Gravic, Inc., DRNet from Network Technologies, Replicate from Attunity, and
GoldenGate from Oracle. These products read changes from the TMF source audit trail and
replicatethemtothetargetdatabase.
 Unaudited Files: The primaryfunction of FileSync is to synchronize unaudited files. An unaudited
file may contain several types of data, such as program source code and executables, scripts,
configuration files, or application data. Prior to version 3.1, FileSync ensured synchronization of
unauditedfiles byreplicatinginits entiretyeachfilethathadchanged. As of version3.1,FileSync
uses datadeduplicationtoreplicateonlythechanges tothesefiles.This dramaticallyreduces the
timeandthebandwidthrequiredforunauditedfilesynchronization.
 Configuration Changes: Various NonStop utilities, such as FUP and SQLCI, are provided to
change the configuration of the processing environment. These configuration changes must be
madetothebackupsystemaswell.ThisisthejobofTANDsoft’sCommandStreamReplicator.2
FileSync
FileSync synchronizes application environments and unaudited files across one or more NonStop
servers. The target servers may be disaster-recovery systems or other production systems (for instance,
serversinanactive/activenetwork).Bidirectionalreplicationinanactive/activeenvironmentispossibleby
configuringaFileSyncsubsystemforeachdirection.
FileSync can replicate any Guardian or OSS files on a NonStop system. FileSync can replicate files
across either Expand or TCP/IP links, though the use of Expand is the more efficient option. However,
TCP/IPisrequiredifthenodenamesofthesourceandtargetserversarethesame.
FileSyncreplicationisbatched.Thefollowingschedulealternativesaresupported:
 Periodic: Files maybe replicated at fixed intervals in increments of minutes. The shortest interval
isoneminute.
 SpecifiedTimes:Replicationcanoccuratspecifiedtimesthroughouttheday.
 Interactive:AnoperatorcaninitiateFileSyncreplicationatanytimebyinvokingaTACLscript.
 Event: Replication can be invoked by a trigger generated upon the completion of some external
event.
Files to be replicated are specified in qualified file lists. A qualified file list specifies a set of objects and
files to synchronize. They optionally include clauses that restrict the objects and files based on their
attributes. As an example, to specify all source-code files (filecode 101) on $DATA, the qualified file list
wouldbe“$DATA*.*wherefilecode=101.”
A file list contains all files that have the same replication options specified. A file will be replicated if its
source time stamp is greater than the time stamp of the target file (that is, the source file has been
modifiedsubsequenttoitslastreplicationtothetarget).Filesthatdonotexistonthetargetsystem orthat
aremarkedascorruptedonthetargetsystemarealsoreplicated.
2FileSyncandCSRSynchronizeNonStopSystems:Part2–CommandStreamReplicator,AvailabilityDigest;November2011.
http://www.availabilitydigest.com/public_articles/0611/command_stream_replicator.pdf
2
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Should a system or network failure interrupt a FileSync replication job, the current FileSync job is
terminated.Filesthatwere intheprocessofbeingreplicatedaremarkedasbeingcorruptedonthetarget
system. The remaining files and any corrupted files will be replicated on the next invocation of the
FileSyncjob.
In addition to replicating files, FileSync can list all files that are in sync, out of sync, or designated for
purging.
Deduplication Increases FileSync Efficiency
Prior to FileSync Version 3.1, FileSync replicated an entire file when something – even one byte – was
changed. This is appropriate for small files that seldom change, such as configuration files. However,
somefilescanbeverylargeandveryactive.Replicationofthesefilesintheirentiretycanbeprohibitive.
DataDeduplication
FileSync Version 3.1 adds the option of data deduplication to file transfers. With FileSync Dedup, only
blocks that have changed since the last time that the Guardian or OSS file was replicated are sent to the
target system. Consequently, the time and the bandwidth required to replicate files is substantially
reduced because a multi-megabyte file can now be updated by sending just the few blocks that have
changedratherthanhavingtosendtheentirefileoverthecommunicationchannel.
Deduplication proceeds as follows. If a file does not exist on the target system, it is replicated in its
entirety as in the earlier versions of FileSync. In addition, each 4K block in the file is hashed, and the
hash values are stored in a Hash File. Thus, the Hash File represents the file as a sequence of hash
valuesratherthandatablocks.TheMD5128-bithashingalgorithmisusedbyFileSyncDedup.
Furthermore,anentryforthenewfilenameismadeinanIndexFile.TheIndexFileisaregistryofallfiles
that are being replicated. For each entry, the characteristics of the file are maintained as a file label
(similar to amagnetic tape label).For instance, the currenttimestampfor thefile is recorded in its Index-
Filelabelentry.
Subsequently, if FileSync determines that a file has changed based on the file’s timestamps in its source
and target versions, FileSync repeats hashing the entire file and compares the new hash values to those
stored in the Hash File. It stores any changes in a Data File by block number. For instance, if a block is
added,thenew block datais storedalong withtheblock number thatitnowfollows.If ablock is updated,
the new data is stored along with the block number of the block that is being changed. If a block is
deleted,itsblocknumberisstored.
When the parsing of the file changes has been completed, FileSync inserts the file’s Index File entry into
an Update File. The Data File with all of the block changes and the Update File with the file’s new label
informationissenttothetargetsystem,wherethechangesareappliedtothetargetfile.
Deduplication is specified as an option for each file list. Therefore, files are deduplicated only if it is
desiredtodoso.
FileSyncDeduplicationArchitecture
ThesoftwarearchitectureforFileSyncDedupisshowninFigure1.FileSynccanbeinvokedfrom aTACL
command or according to a schedule, as described earlier. FileSync is given a file list that contains the
namesofthefilestobereplicatedalongwithreplicationoptions.
If “dedup” is not specified for the file list, the file list is senttothe originalFileSync utility. Thearchitecture
of this utility is described in Reference 1 above. To transfer Guardian files (including SQL/MP), the
3
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

NonStop backup/restore and the utilities PAK and UNPAK are used. To transfer OSS files and SQL/MX
files,NonStopBR2(backup/restore)andutilitiesPAK2andUNPAK2areused.
However,if“dedup” isspecifiedasanoption,thefilelistissenttotheDedupeprocessinFileSync Dedup
instead.IfFileSyncdoesnothaveafileinitsregistry,itwilladdittoitsIndexFile.
The Dedupe process will check each file in the file list to see if it needs to be replicated. If a file does not
exist on the target database or is marked as corrupted, it is replicated in its entirety to the target
database. The blocks comprising the file are hashed and added to the Hash File, and the file’s label
informationisinsertedorupdatedintheIndexFile.
If afile is to be replicated because it has changed, the Dedupe process parses the file and calculates the
hash values for each block. It compares these hash values to the current hash values for the file as
stored in the Hash File to determine what has changed. The block changes are added to the Data File,
and the Hash File is updated with the new file contents. The registry information for the file is read from
the Index File and stored in the Update File. If the replication channel is TCP/IP, the Data File and the
Update File are sent to the target system where they are stored on the target-side. If replication is being
doneoverExpand,thetargetsystemreadstheDataFileandUpdateFileonthesourcesystem.
sourcesystem
FileSyncDedup
Index sHouarsche
File Ffiillee
targetsystem
Expand
Data& TCP/IP Data&
Log Dedupe Update Update Dedupde
Files Files
TACL
RUNFILESYNC dedup
From... source target
To… files files
Options(dedup)
Expand
EMS PAK TCP/IP UNPAK
FileSync FileSync
warnings PAK2 UNPAK2
errors
completion FileSync
Figure1:FileSyncDataDeduplication Architecture
At the target system, the Dedupde process reads the changes from the Data and Update
Files and updates the target database with the changed blocks. Therefore, the only data that has to be
sent from the source system to the target system to update the target files are the changed blocks. Any
blockthathadnotchangedisnotreplicated.
4
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Summary
Configuration drift is a major problem leading to failover faults when a production system fails and its
backup won’t come into service. FileSync is a major utility to help prevent configuration drift. It
automatically keeps Guardian and OSS files on the target system synchronized with the source system
by replicating files that have changed, that have become corrupted, or that do not exist on the target
system.
With Version 3.1, FileSync adds data deduplication. This greatly increases the efficiency of FileSync
because only changed data must be sent to the target system rather than entire files. If a file does not
existonthetargetsystem,itisfirstreplicatedtothetargetsystem initsentirety.Thereafter,onlychanges
tothesourcefileneedtobesenttokeepthetargetfilesynchronizedwiththesourcefile.
5
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com