U.S. Bank Critiques Active/Active
May2009
U.S. Bank manages its ATM network with a two-node, HP NonStop active/active system running
ACI’sBASE24.Havingsuccessfullygonethroughthis implementation,thebank offersadviceand
encouragementforotherslookingforcontinuousavailabilityintheirmission-criticalsystems.
U.S. Bank
Minneapolis-basedU.S.Bancorp(NYSE:USB),with$264billioninassets,istheparentcompany
of U.S. Bank, the 6th largest commercial bank in the United States. The company operates over
2,800 banking offices and over 5,000 ATMs. It provides a full line of banking, brokerage,
insurance,investment,mortgage,trustand paymentservices products toconsumers,businesses
andinstitutions.
People around the world depend on ATMs for their banking needs anytime, anywhere. The
availability of ATM networks is crucial to today’s functioning society. In fact, as shown by recent
incidents in this time of financial uncertainly, a brief failure in a bank’s ATM network can trigger a
runonthebankasdepositorsfearthebank’scollapse.
Because of the importance of its ATMs, the availability of U.S. Bank’s ATM network is crucial. A
major focus within the bank’s IT operations is to ensure continuous availability of this valuable
service.
Continuous Availability for the Bank’s ATM network
To meet this goal, the bank has migrated from its earlier active/passive architecture using a pair
of HP NonStop servers to a full active/active configuration. Along the way, it learned many
valuablelessons.Weviewthebank’smigrationpathandthelessonsitlearnedinthisarticle.
TheBank’sEarlyHigh-AvailabilitySystem
The bank’s earlyATM system comprised a pair of geographicallyseparated HP NonStop servers
configured as an active/passive pair. One server acted as the server actively processing ATM
transactions; and the other server acted as a passive standby server, ready to take over should
theactiveserverfail.1
1RichRosales,TheRoadtoActive/Active, Community-Connect Europepresentation;November,
2008. www.communityconnecteurope.org/education/Rich_Rosales_USBank.ppt
1
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

The ATMs were managed by BASE24 from ACI (www.aciworldwide.com). BASE24 provides a
broad range of financial-services management functions, including managing ATM transaction
routing and authorization. The BASE24 database on the passive node was kept synchronized
with the active BASE24 database via log-based replication using the GoldenGate Transactional
DataManagement(TDM)replicationengine(www.goldengate.com).
BASE24 managed the links to the various national authorization networks such as PLUS,
CIRRUS, and VISA. It also connected to an IBM authorization switch running CSC’s Hogan Core
BankingSystem.
ATMs
switches NonStop NonStop switches
BASE24 BASE24
Hogan Hogan
Active Passive
log log
GoldenGate
file file
U.S.Bank’sEarlyActive/PassiveATMSystem
This configuration had its limitations. For one, the backup server’s primary function was for
disaster recovery in that it was prepared to take over transaction processing should the active
serverfail.Todoso,itassumedcontroloftheswitchandATMcommunicationlinksandactivated
itscopyofBASE24.Itcouldalsoswitchroleswiththeactiveserversothattheactiveservercould
be upgraded with new hardware or software. Consequently, it was not available to share the
transactionload.Ineffect,thebankhadpurchasedtwomachinestodotheworkofone.
A major problem was that even though the backup server’s database was synchronized with the
active server’s database, it still took anywhere from a half-hour to two hours to switch over. The
active applications had to be taken down (if they had not failed), the communication links had to
be moved to the backup server, the applications had to be restarted on the backup server, and
theproper operationof the backupserver hadtobe testedand verifiedbeforeitcouldbe putinto
service. If the verification process uncovered problems, they had to be corrected, increasing the
switchovertimeevenmore.
Switchover to the backup server was not only time-consuming, during which the ATM network
was down, but was risky as any unforeseen problem would only extend the outage. As a result,
the bank was reluctant to make upgrades to the system. Perhaps even worse, the bank avoided
testing disaster recovery because of the indeterminate ATM downtime that the system would
impose.
Through an acquisition, the bank then acquired another ATM application that did not interact with
its current network. The bank took advantage of this to put its passive server to work. The new
ATM application was installed on what was the backup server, using what was the active server
asitsbackup.Nowbothserverswereprocessingtransactionsforindependentapplications,using
theotherserver asabackup.Evenbetter,ifoneserverlostaccesstoanauthorizationnetwork,it
2
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

could regain that access by sending its authorization traffic over the NonStop Expand
interconnecttothenetworkconnectiononitsbackupserver.
BASE24bATM
BASE24aATM
transactions
transactions
ATMs
switches BA AS ctE iv2 e4a fil lo eg GoldenGate fil lo eg B PA aS sE si2 v4 ea switches
a a
Hogan BASE24b BASE24b Hogan
log GoldenGate log
Passive fileb fileb Active
ExpandingtoTwoInstancesofBASE24
Still, if one server failed, it took the same half-hour to two hours or more to recover by switching
the failed application to its backup. Competitive and regulatory pressures were growing to
eliminate this downtime. New regulatory requirements dictated that disaster-recovery procedures
be tested several times per year. Customers demanded 100% availability and enhanced
functionalityofthebank’sATMservices.Continuousavailabilitywasneeded.
MovingtoContinuousAvailability
How does a bank implement a sound disaster-tolerance strategy for mission-critical banking
systems and achieve zero downtime – planned or unplanned? U.S. Bank decided to reconfigure
itstwoNonStopserversasanactive/activesystemtomeetthisneed.
In an active/active system, all nodes in the application network are actively processing
transactions for the same application. Each node has available to it a copy of the application
database. The copies are kept synchronized via data replication. When one node makes a
changetoitsdatabase,thatchangeisreplicatedtotheotherdatabasecopiesinnearreal-time.
Unplanned failovers or planned switchovers for maintenance require only that users be rerouted
to a surviving node, a process that generally can be accomplished in a few seconds. Therefore,
failover or switchover can beaccomplished quickly,resulting inalmostimperceptible downtimeto
customersatthebank’sATMs.
Furthermore, failover is reliable since it is known that the other node is working – after all, it is
currently processing transactions. Therefore, the risk of a failover or switchover fault is virtually
eliminated. This allows the bank to feel comfortable making the upgrades necessary to keep up
withcustomerservicesaswellastofrequentlytestdisaster-recoveryfailover.
Thus, by moving to an active/active configuration, the bank achieved its continuously available
goals:
 Itimplementedasounddisaster-recoverycapabilitywithlowdowntimefortesting.
 Itwasfreetomakefrequentupdatestomeetcompetitivepressures.
 It ensured that the BASE24 applications stayed continuously available during any
plannedorunplanneddowntimeofeitherofthesystem’sNonStopservers.
3
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

The resulting active/active system runs each BASE24 instance actively on both nodes.
GoldenGate’s bidirectional replication engine is used to keep the two databases synchronized.
Therefore, an ATM transaction can be routed to either node for processing, thus balancing the
load on the system. In fact, many of the national switches - VISA, for instance - round-robin
transactionsbetweenthenodesforloadbalancing.
ATMs
switches NonStop NonStop switches
BASE24 BASE24
Hogan Hogan
Active Active
data data
GoldenGate
base base
U.S.Bank’sActive/ActiveATMSystem
In addition to disaster tolerance and continuous availability during planned and unplanned
downtime, an added advantage of the bank’s active/active system is scalability. The bank
currently processes one billion transactions annually, or about three million transactions per day.
Should this load increase to the point that the system becomes too heavily loaded, additional
nodescanbeaddedtothesystemtoscaleittothecapacityneeded.
The Biggest Issue – Data Collisions
The benefits of the bank’s active/active approach to its ATM network management are
impressive.Butwhatarethechallengesinthisimplementation?
Rich Rosales, BASE24 Development Manager for U.S. Bancorp, points out that data collisions
are the most complex challenge. Unless the database can be partitioned so that only one node
canupdateanygiven partition, datacollisions willoccur andmustbedealt with. Such is thecase
inthisapplication.
Adata collision occurs whenthetwonodes update the samedata item atroughly thesametime.
Each will update its local copy of the data item and will then replicate that change to the other
node. The replicated changes will overwrite the original change made by each node. Now both
nodeshaveadifferentvalueforthatdataitem,andbotharewrong.
U.S. Bank’s approach to solving this problem was to categorize the many files in the system as
dynamic or static (though its categorization was somewhat more complex than this). Dynamic
files have to be maintained in real-time synchronization. An example of dynamic data is
withdrawals so that up-to-date balances can be maintained. It is important that the application in
each node know the current balance in an account so that it can properlyauthorize a withdrawal.
Thesedatabaseupdatesmustbereplicatedasquicklyaspossible(desirablyinsubseconds).
4
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

On the other hand, updates to card status (lost, stolen, inactive), PIN changes, and card limits
can be replicated in a more relaxed way. The typical way to replicate these changes is to apply
them as a batch run. Each node will process its own log files in a batch run, replicating its
changestothedatabaseoftheothernode.
The bank soon determined that a batch run and replication of the approximately three million
static updates per day terribly slowed down replication during the batch processing, significantly
increasing the chance of dynamic data collisions during the batch run. Furthermore, the batch
latencyincreasedthechancefordatacollisionsinthestaticupdates.
To solve this problem, the bank implemented a procedure that it calls data targeting. Rather than
replicatingindividualchangesorentiretransactions,atransactionisbrokendownintoitsdynamic
and static data. The dynamic data is deemed high priority, and the static data is deemed to be
lower priority. A transaction’s related dynamic data is replicated in real time as an event to the
remote node. There it is applied to the remote database via user exits supported by the
GoldenGate data-replicationengine.Theuser exits implemented bythe bank emulatetheupdate
businessfunctionsoftheBASE24applications.
The static data is batched and sent less frequently, for instance, every five minutes. In this way,
thebatchupdatesarenotlargeenoughtoslowdownreplicationsignificantly;andthelowerbatch
latencysignificantlyreducesthechancefordatacollisionsinthereplicatedbatchupdates.
Date collisions in both the dynamic data and the batch data can still occur and must to be
detected and resolved. Data-collision detection is performed by the GoldenGate replication
engine. Collision resolution is resolved in some cases via standard methods provided by the
replication engine or in other cases via specialized user exits provided by the bank. Depending
uponthetypeofcollision,oneofseveralresolutionmethodsareapplied.Forinstance:
 The latest change is accepted. Examples of these collisions include card status and PIN
changes. One requirement if time is to be used to resolve collisions is that both nodes
must be synchronized with the same time. Otherwise, each can make a different
decision; and the databases will be out of synchronization. That is, database corruption
has occurred.Toensureproper timesynchronization, one of the bank’s NonStop servers
has an atomic clock; and the NonStop time-synchronization facility is used to time-
synchronizetheotherserver.
 In some cases, GoldenGate’s deltas capability is used. This capability allows an
operation to be replicated rather than the end result. For instance, if one node wants to
add 5 to a data item, and the other node wants to subtract 3, the +5 and -3 operations
arereplicated,resultinginachangeof+2atbothnodeswithnodatacollision.
 The resolution of many collisions is complex. To handle these situations, U.S. Bank
developed their own in-house conflict resolution algorithms and embedded them as user
exitsintothedata-replicationengine.
Inanyevent,alldatacollisionsareloggedforlatermanualreview.
Database Verification
An important activitythat is often overlooked is database verification. No matter how carefullythe
system is implemented and data collisions are resolved, database-update errors will occur.
Though these errors may be quite infrequent, they lead to a contaminated database. The results
ofatransactionmaythenbedifferentifexecutedondifferentnodes.
5
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Update anomalies may occur because of administration errors, operating-system faults, subtle
race conditions, or other faults. For instance, if data collisions are to be resolved according to
time, it must be recognized that no matter how tightly the nodes in an active/active system are
time-synchronized, synchronization is never perfect. Therefore, there is a small chance that two
nodes will make a different decision as to which update to accept, resulting in database
corruption.
Therefore, it is imperative that the databases be periodically verified by comparing them.
Differences should be flagged and administrators notified so that they can take corrective action.
This process is complicated by the fact that the databases are being actively updated during the
verification process. There will be some differences that occur because of changes in flight and
thereforedonotrepresentdatabasecorruption.
InU.S.Bank’searlyactive/passivesystem,therewasnoemphasisondatabaseverification.Inits
active/active implementation, the bank uses GoldenGate’s Veridata facility to periodically verify
thedatabases.
Additional Advice
U.S. Bank makes the following observations for those contemplating a move to an active/active
architecture:2
 Make sure that the application owners are involved early in the process. They can be a
majorhelpinidentifyingpotentialdatacollisionsandcraftingthestrategytoresolvethem.
 Learnthedifferenceinactive/activearchitectures.3
 Conductafilecategorizationtodeterminetheproperwaystoreplicateeachfile.
 Developastrategyforout-of-syncdetection,andtesttheresynchronizationstrategy.
 Review the network architecture with a goal of maximizing the effectiveness of that
architecture.
 Determinethestrategytohandledatacollisions.
 Implementtheprojectincrementally,onefunctionatatimesofaraspossible.
To this we would add a detailed review of the application to find the “gotchas” that will cause the
application to misbehave in a shared environment. Be prepared to modify the application where
necessary.4
Summary
RichRosalessummarizeshisactive/activejourneynicely:
”With this active/active system in place, there is no longer any need for us to take databases
or software offline and deny service to our users during a system upgrade. Additionally, fast
replication means fewer data collisions and less data loss, thereby allowing customers to
experiencethebestservicepossiblearoundtheclock–whichhasalwaysbeenourgoalhere
at U.S. Bank. … Since the implementation, our customers have experienced no downtime,
whichhelpsuskeepcustomersatisfactionandloyaltyhigh.”
Hegoesontosay:
2IfIKnewThenWhatIKnowNow:ImplementinganActive-ActiveSystemintheNoDowntimeWorldofBanking,Rich
Rosales,TheConnection;January/February2009.
3
SeethecontinuousavailabilityseminarsavailablefromtheAvailabilityDigest:
http://www.availabilitydigest.com/seminars.htm.
4WernerAlexi,AppendixA,AConsultant’sCritique,BreakingtheAvailabilityBarrierIII:Active/ActiveSystemsinPractice,
AuthorHouse;2007.
6
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

“Active/active implementation can seem like a daunting task, but this should not discourage
youfrompursuingsuchasolutionbecausethebenefitsaretremendous.”
WehereattheAvailabilityDigestheartilyendorsethatobservation.
7
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com