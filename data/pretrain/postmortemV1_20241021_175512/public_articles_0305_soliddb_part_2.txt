transaction is not completed until it is at least safe-stored on the backup system. Therefore, no
data is lost following a database failure. Several options described later are provided for the
degree of safe storage. These options provide compromises between performance and recovery
time.
Because the primary database has to wait for the backup database to indicate that it has the
transaction, communication latency between the systems must be minimal. Therefore, primary
4
©2008SombersAssociates,Inc.,andW.H.Highleyman

and backup systems must be collocated. They must either be in separate servers located near
each other or be in blades in a blade cabinet. solidDB communicates with the standby database
at the TCP/IP level and uses whatever underlying communication channel is provided between
theprimaryandbackupsystems.
AsynchronousReplication
solidDB’s Smartflow asynchronous replication engine is used to synchronize replicate databases
with a master database. SmartFlow uses a publish/subscribe mechanism to replicate updates to
the replicas. It buffers updates and distributes them periodically to a replica upon request from
that replica. The replication engine can be configured to optionally notify each replica when a
changeinwhichitisinterestedisavailable.
The replication period is configurable and typically is measured in seconds to minutes. As an
option, the asynchronous replication engine can be configured to replicate everytransaction as it
occurs.Theseconfigurationoptionsoffercompromisesbetweenlostdataandperformance.
With asynchronous replication, the performance of the master database is not impacted by the
replication activity. Asynchronous replication proceeds independently of the application.
Therefore,replicasmaybeanydistancefrom themasterdatabase.
MobileApplications
A primary goal of solidDB is to support mobile applications. In these applications, a mobile
device, typically with an in-memory database, is occasionally connected to the master system.
Furthermore,theconnectionmaybearelativelylow-speedorpoorqualityconnection.
While the mobile device is not in communication with the master, updates may be made
independently both to the mobile device and to the master database. Upon connection,
SmartFlow provides bidirectional asynchronous replication to exchange updates between the two
databases.Dataconflictsaredetectedandtypicallyresolvedmanually.
Disaster Recovery
Recovery from a site disaster that takes down the primary database and its local backup can be
achieved by providing a replica at a location separated from the primary site location by an
appropriatedistance.Inadditiontosynchronouslyreplicatingtransactions to its localstandby,the
primary system asynchronously replicates transactions via SmartFlow to its remote replica using
tight asynchronous replication (such as replicating each transaction as it completes). Should the
primary site be lost, the replica can be promoted to master and can continue the processing
function.
Anydataintheasynchronousreplicationpipelineatthetimeofthesiteoutagewillbelost,butthe
replicatedatabaseisotherwiseconsistentandcanbeusedtocontinueoperations.
Availability Configuration Options
The extreme availability of solidDB is achieved by synchronously backing up the primary
database with a hot standby. However, synchronous replication can have a significant impact on
performance.
solidDB offers several levels of replication to provide compromises between performance,
durability,andrecoverytime.
5
©2008SombersAssociates,Inc.,andW.H.Highleyman

SafeDurable
Toachievethehighestlevelofavailability,theprimary’stransactioncommitmustwaitforboththe
primary and standby databases to be updated and for the transaction to be written to the
respective logs. Using this level of replication, no transactions will be lost following the failure of
theprimarydatabaseoreventhefailureofbothdatabases.
SafeVisible
At the next level of data protection, the primary transaction waits for the transaction to be written
to the standby database; but it does not wait for the log record to be recorded by the standby.
Should the primary fail, the standby database loses no transactions; and the results of all
committed transactions are immediately visible to the applications running on the standby.
However, failover following a primary fault is not complete until all transactions have been
recordedinthelog.
SafeReceived
The lowest level of synchronous replication is for the transaction to complete as soon as the
standby has acknowledged that it has received the transaction but before it has updated its
database or has logged the transaction. In this case, following the failure of the primary system,
failoverisnotcompleteuntilthestandbysystem hasappliedallpendingtransactions.
SmartFlowAsynchronousReplication
Finally, if performance is truly more important than data loss, asynchronous replication can be
used. In this case, any transactions in the replication pipe line are lost should the primary fail.
However,transactioncommitsattheprimarydonothavetowaitforthestandbydatabasetotake
anyaction.
AdaptiveLogging
solidDB can be configured to change its synchronization strategy based on circumstance. For
instance, in a primary/standby configuration, it is common to configure solidDB for “relaxed
logging.” In this mode, transaction logs are not written as part of the transaction at the primary
system.However,oneofthesafesynchronizationoptionsisusedatthestandbysystem.solidDB
dependsuponacurrentcopyofthedatabaseatthestandbysystemtoprovidedurability.
However, should the standby system fail (or should the primary system fail and the standby
become a standalone primary), the surviving system reverts to “strict logging.” To provide
durability,itwilllogeachtransactiontodiskbeforecommittingthetransaction.
DurabilityFlexibility
The use of these availability configuration options is quite flexible. The level of synchronization
canbespecifiedatthesystem,session,ortransactionlevel.
Availability
With solidDB running in a primary/standby configuration with synchronous replication, failover
from a primary database failure can be achieved within tens of milliseconds. There is no loss of
database connections, prepared SQL statements, or session attributes. solidDB can support an
availabilityoffive9s.
How is this claim substantiated? Since most of the installations of solidDB are in embedded
systems deployed by its customers, the company cannot obtain meaningful field statistics.
6
©2008SombersAssociates,Inc.,andW.H.Highleyman

However, it does know failover time. If failover time is, say, fifty milliseconds, then a five-9s
availability would allow some 6,000 failures per year per database (five minutes per year). It is
easytodeterminethatthisfailurerateisnotthecase.
Solid Information Technology also points to a Japanese customer that has been running solidDB
fortwo-and-a-halfyearswithnofailure.
Scalability
The scalability of solidDB is multidimensional. First, it is scalable across multiple cores in a
processor. Tests described below indicate that solidDB can not only handle thousands of
transactionspersecondpercorebutthatitislinearlyscalableuptoatleasteightcores.
Inaddition,newdatabaseinstancescanbeinitiatedondemand.Theycanthenactasreplicasfor
themasterdatabasetoprovideon-demandscalingofread-onlyapplications.
solidDB Performance
Solid Information Technology uses the TM1 benchmark to measure the performance of
solidDB. The TM1 (Telecom One) benchmark is a widely recognized benchmark in the
telecommunications industry and is used to provide a comparative measure of performance
in telecommunications applications. It is used by companies such as Sun, IBM, Intel, Nokia,
andAMDforthispurpose.TM1isavailableasopensourcefromwww.soliddb.com.
TM1 emulates typical telecommunication transactions such as those used in home location
registers that are characterized byshort, predominantly read-only transactions. It comprises
seven different transactions that exercise read, insert, update, and delete operations with a
read/writeratioof80/20.
TM1’s metric is Mean Qualified Throughput (MQTh). MQTh is essentially a measure of
transactionspersecondhandledbythesystem.However,asopposedtoOLTPbenchmarks
suchasTPC-C,itcountsbothcommittedtransactionsandabortedtransactions.
TM1 is run at a speed to saturate the target server. In a test with 32 concurrent clients and
100,000subscribersrunningondual-coreAMDOpteronprocessors with64-bitSUSELinux,
solidDBshowedthefollowingTM1performance:
twocore 6,518tps
fourcore 18,449tps
sixcore 36,533tps
eightcore 66,910tps
In another TM1 test, updates made to an IBM DB2 database were replicated to four
instances of solidDB, each running in its own T HS20 blade. The DB2 database alone
supported a transaction rate of 1,476 tps. Each solidDB blade supported a transaction rate
of 15,000 tps per blade for a total of 60,000 tps. Response time to TM1 transactions was
lessthanonemillisecond.
Platform Support
solidDB runs on Linux, Windows, AIX, and HP-UX platforms. It is integrated with several
popular availability managers, including HP Openview, HP Serviceguard, Sun Netra, and
GoAheadSelfReliant.
7
©2008SombersAssociates,Inc.,andW.H.Highleyman

Utilities
solidDBprovidesseveralimportantutilityfunctions,including:
 SolidSpeedLoader,abulkloadingutilityforinitiallypopulatingadatabase.
 Online backup, which uses snapshots to provide a consistent copy of the database
whileitisinfulloperation.
 SolidExport,autilityforfastexportingofconsistentviewsofthedatabase.
Solid Information Technology
Solid Information Technology was founded in Helsinki, Finland, in 1992. Its first product release
was adisk-residentdatabasein 1994.Inthelate 1990s,thecompanyrecognized the needinthe
telecommunications industryfor high-speed,highlyreliable,in-memorydatabases andintroduced
solidDB. solidDB currently has over 3,000,000 deployments made by hundreds of customers,
including Alcatel, Cisco, EMC2 Nokia, HP, and Siemens. Applications include
,
telecommunications, retail, finance, healthcare, online shopping, and mobile access to central
data.
Solid Information Technology has its corporate offices in Cupertino, California, and regional
officesinAmerica,Europe,andAsia.
In December, 2007, Solid Information Technology was acquired by IBM. It will be integrated into
IBM’sInformationManagementSoftwareDivision.
8
©2008SombersAssociates,Inc.,andW.H.Highleyman

