Configuring to Meet a Performance SLA – Part 1:
Single Server Response Times
December2008
If the performance of a data-processing system has degraded to the point that it is no longer
useful to its users, the system is, for all practical purposes, down. It is, therefore, common to
specifyaperformancerequirementintheServiceLevelAgreement(SLA)forthesystem.
The performance requirement is often expressed as a probability that the system’s transaction
response time will be less than a given interval. For instance, “98% of all transactions must
completewithin500milliseconds.”
Thenormalqueuingrelationshipwithwhichweareallprobablyfamiliar,
T
T  s , (1)
r (1L)
gives only the average response time, T, to be expected if a system with a service time, T , is
r s
carrying a load of L. For instance, if the system under zero load gives a response time of 250
milliseconds (its service time), its average response time when occupied 75% of the time will be
1,000 milliseconds [250/(1 – 0.75)]. That is, 50% of all transactions will complete in less than one
second.
Thissimplerelationshiptellsusnothingaboutthedistributionofresponsetimes,whichiswhatwe
need to know in order to determine what percentage of response times will be in excess of some
value, as specified by an SLA. If we knew this transaction-response time distribution, we could
determine the transaction-processing power required of the system in order to meet an SLA
specification. For instance, in the first example above, the question to be answered is what
service time is required of our system in order that 98% of all transactions will complete in less
than500milliseconds.
In this series of five articles, we will explore the solution to this question. The solution is not
straightforward. We therefore will spend some time talking about performance calculations in the
contextofqueuingtheory.Ourfivesectionswillcoverthefollowingmaterial:
 Part 1 reviews basic queuing theory. The simple queuing equation for a single server is
derived so that the assumptions underlying this important relationship are understood.
We will see that the well-known response-time formula as expressed by Equation (1)
aboveisjustonecaseofthisrelationship.
 Part2 expands thesimplequeuingrelationshipfrom thecase of asingleserver tothatof
multiple servers, such as the multiple processes in a server class managed by a
transaction-monitoringfacilitysuchasTuxedoorHP’sNonStopPathway.
1
©2008SombersAssociates,Inc.,andW.H.Highleyman

 Part3answerstheSLAconfigurationquestionforservers withexponentialservicetimes.
It provides charts and an Excel spread sheet to determine the probability that the
responsewillnotexceedaspecifiedvalue.
 Part4 introduces the Gammadistribution and shows withcharts anda spread sheet how
to use it to answer the SLA configuration question for servers with arbitrary response
times.
 Part 5 concludes with an example of determining the probability/maximum response time
curveforacomplexseriesofserverswithdifferingservicetimedistributions.
In all cases, we provide a simple Excel spreadsheet that can be used to make performance
calculations.
The Basic Queuing Relationship
Asasystem becomesloaded,itsresponsetimegetslongerbecauseanewtransactionmustwait
inlinebehindother transactions thatarrivedbeforeit.Its responsetimeis thetimethat ittakes to
process all earlier transactions waiting to be processed plus its own service time. As the server
getsbusier(i.e.,asitbecomesmoreloaded),thequeueofwaitingtransactionsgrowslonger;and
transactionresponsetimesincrease.
Tounderstandthis better,consider aserver servicingtransactions on afirst-in,first-outbasis.On
the average, it takes a time of T to service a transaction. Some transactions take less time,
s
others take more time; but the average service time is T . We will call T the service time of the
s s
server.
Q
W k
server
r
Ts
Tq
Tr
r=transactionarrivalrate
W=numberoftransactionswaitingforservice
Q=numberoftransactionsinthesystem
Ts=serverservicetime
k=portionofcurrenttransactionservicetimeremaining
Tq=timeatransactionwaitstobeserviced(queuingdelay)
Tr=totaltransactionservicetime(transaction-responsetime)
The average number of transactions in the system, which we will call the queue length, is
denoted by Q. This comprises W transactions that are waiting for service plus that portion, k, of
thecurrenttransactionthatremainstobeserviced.
Transactionsarearrivingatarateofrtransactionspersecond.Therefore,theserveriscarryinga
load,L,of
LrT (2)
s
2
©2008SombersAssociates,Inc.,andW.H.Highleyman

That is, if transactions are arriving at an average rate of one per second, and if the average
service time for a transaction is 0.5 seconds, the server is busy 50% of the time. It is carrying a
loadof0.5.
When a transaction arrives to be serviced, it will find W transactions waiting in front of it. In
addition, withprobabilityL, there will beatransaction intheprocess of beingserviced(remember
that L is the probabilitythat the server is busy– that is, it is currentlyservicing a transaction). If a
transactioniscurrentlybeingserviced,thenonlykT timeislefttocompleteitsservicing.
s
Thenewlyarrivedtransactionmustwaitwhilethecurrenttransactioniscompleted(kT secondsL
s
of the time) and then for the W transactions in front of it to be serviced (WT seconds). Thus, it
s
mustwaitforatimeT (thequeuingdelay)of
q
T  WTLkT (3)
q s
beforeitsservicingcanbestarted.
From thetimethatatransactionarrives in linetothetimethatits servicebegins (atimeof T ),an
q
average of W other transactions must have arrived at the server in order to maintain the average
queuelength.Sincetransactionsarearrivingatarateofrtransactionspersecond,then
W Tr
q
or
T  W/r (4)
q
UsingEquations(2),(3)and(4)tosolveforthewaitinglinelength,W,gives
kLrT kL2
W  s  (5)
1rT 1L
s
The total length of the queue, Q, as seen by an arriving transaction is the waiting time, W, plus a
transactionbeingservicedLofthetime:
kL2 L
Q WL L  [1(1k)L] (6)
1L 1L
The response time, T, is determined in a similar manner. It is the total amount of time that the
r
transaction must wait in order to complete its servicing – its waiting time plus its service time.
Duringthistime,Qnewtransactionsmustarrivetomaintainthesteadystate:
QTr TL/T (7)
r r s
SettingEquations(6)and(7)equalandsolvingforT,wehave
r
T
T  s [1(1k)L] (8)
r 1L
Equation (8) is the result we are looking for. It is known as the Khintchine-Pollaczek formula and
relates response time, T, to the server’s service time and the server load, T and L. It is a very
r s
generalresultanddependsonlyuponsomesimplecharacteristicsofthesystem:
 Thereisonlyasingleserver.
3
©2008SombersAssociates,Inc.,andW.H.Highleyman

 Nolimitisimposedonthelengthofthequeue.
 Transactionstobeservicedarriveindependently.
 Serviceorderisfirst-in,first-out.
 Thequeueisinasteady-statecondition.
In particular, Equation (8) makes no assumption about the distribution of the server’s service
time.Rather,Equation(8) incorporates anadditionalfactorof k.kis afunctionoftheservice-time
distribution, since it defines the portion of the current transaction service time remaining when a
transactionfirstentersthequeue.Wecallktheservice-timedistributioncoefficient.
Note that if k = 1, Equation (8) reduces to our familiar Equation (1).We now take a closer look at
k.
The Service-Time Distribution Coefficient
The parameter k is a function of the service-time distribution. It is the average amount of service
time that is left to be expended on the current transaction being serviced when a new transaction
arrives.Letuslookatkforcertainimportantcasesofservice-timedistributions.
ExponentialServiceTimes
Exponential distributions describe processes that are random. That is, the probability that an
event will happen in the next very small time interval1 is always the same and is not affected by
the previous history of event arrivals. It therefore has no memory. Many events in data-
processing systems are characterized fairly closely by the exponential distribution. In particular,
the arrival of transactions at the server has been assumed to be random. Their interarrival times
areexponentiallydistributed.
In our case, the events in which we are interested are service completions. It can be shown that
for random service-time completions, the probability that the remaining service time will be
greater than a given amount, t, is given by (e-at). The exponential distribution has the
characteristic that the remaining service time after any arbitrary delay, assuming that servicing is
stillinprogress,isstillexponential.Thatis,ithasnomemory.2
Thus, one has the following interesting situation. If the average service time is T , and if the
s
server is currently busy processing a transaction (no matter for how long), one is still going to
havetowaitanaveragetimeofT fortheservicingofthattransactiontocomplete.
s
Since k is the proportion of servicing time remaining when a new transaction enters the queue,
thenk=1inthiscase.Equations(6)and(8)become
L
Q
1L
T
T  s
r 1L
forexponentially-distributed(i.e.,random)servicetimes.
1Atimeintervalsmallenoughsothatexactlyoneorzeroeventscanhappeninthatinterval.
2Randomdistributions,exponentialdistributions,andPoissondistributionsalldescribethesamephenomenaindifferent
ways.ThePoissondistributiongivestheprobabilitythatneventswilloccurinsometimet.Allarerelated,andonecanbe
derivedfromanother.SeeChapter4,BasicPerformanceConcepts:Queues–AnIntroduction,PerformanceAnalysisof
TransactionProcessingSystems,byW.H.Highleyman,publishedbyPrentice-Hallin1989.
4
©2008SombersAssociates,Inc.,andW.H.Highleyman

ConstantServiceTimes
If the service time is a constant, on the average, half of the service time will remain when a new
transactionentersthequeue.Therefore,k=1/2;andEquations(6)and(8)become
L
Q 1L/2
1L
T
T  s 1L/2
r 1L
UniformServiceTimes
A service time that can range from zero to s seconds with equal probability is a uniform
distribution. Disk-head seek time is a good example of this distribution. It can be shown that k =
2/3forthiscase,and
L
Q 1L/3
1L
T
T  s 1L/3
r 1L
GeneralDistributions
KhintchineandPollaczekhaveshowningeneralthatforarbitrarydistributions,kisgivenby
1E(T2)
k  s (9)
2 T2
s
where
E(T2) isthesecondmomentoftheservice-timedistribution.
s
DiscreteServiceTimes
Often, the service time will be one of a set of constant times, each with a duration of T and a
si
probabilityofp.Equation(9)canbeextendedtocoverthiscase:
i
pT2
1 i si
k  i
2 2
pT
 i si
 
i
ResponseTimeChart
The response times for exponential service-time distributions (k = 1), uniform service-time
distributions (k = 2/3), and constant service-time distributions are shown in the following chart.
This chart shows the response time, T, relative to the service time, T , (that is, T/T ) as a
r s r s
functionofserverload.
Note that the response time curve is flatter for those distributions with lower values of k. As the
servicetimebecomeslessrandom,theserverisabletocarryadditionalload.
5
©2008SombersAssociates,Inc.,andW.H.Highleyman

Little’s Law
Equation(7)givesanadditionalinsightintoqueuingsystems.KnownasLittle’sLaw,itstatesthat
QTr (10)
r
That is, the number of transactions in a system is equal to the product of the transaction rate, r,
and the transaction response time, T. T can be interpreted as the lifetime of the transaction in
r r
thesystem.
For instance, if the transaction rate is 100 transactions per second, and the transaction response
time is 50 milliseconds (0.05 second), then on the average there will be five transactions (100 x
0.05)inthesystematanyonetime.
Thiscanbeveryimportantiftherearesystemlimitsthatconstrainthenumberoftransactionsthat
canbecurrentlyprocessedsimultaneously.
Summary
TheKhintchine-PollaczekEquation(8)characterizestransaction-responsetimesinaverygeneral
manner. It is valid across many more queuing disciplines than the simple first-in, first-out
discipline discussed above. It can be shown that the processing order of transactions is not
important so long as a transaction is not selected for service based on its characteristics. For
instance,thisrelationshipappliesequallywelltoaround-robinor polling-servicealgorithm butnot
toaserviceprocedurethatgivesprioritytoshortmessagesoverlongmessages.
An Excel spread sheet that is useful in making many of these response time calculations can be
foundathttp://www.availabilitydigest.com/public_articles/0312/performance_sla_1.xls.
Equation (8) can also be extended to multiserver systems in which multiple servers cooperate to
service a common queue. This architecture models many real-world systems, from Web server
farms toserver classes managedbytransaction-managementfacilities suchas Tuxedo and HP’s
NonStop Pathway. This is thesubject of our nextarticle,Configuring to Meeta PerformanceSLA
–Part2:MultiserverResponseTimes.
6
©2008SombersAssociates,Inc.,andW.H.Highleyman
