Choosing a Business Continuity Solution
Part 3 – High Availability Architectures
September2011
In the previous two parts of this series,1 we defined a variety of availability metrics and pointed
out that data replication was fundamental to providing the data redundancy needed to achieve
highandcontinuousavailability.Weexploredvarious datareplicationtechnologiesanddescribed
theirstrengthsandweaknesses.
Of particular interest are unidirectional and bidirectional asynchronous and synchronous
replication engines. In Part 3, we look at a variety of highly available system architectures that
usethesedatareplicationtechnologiestoachieveawiderangeofavailabilitycharacteristics.
Data Replication Provides High and Continuous Availability
We distinguish here between high availability and continuous availability. A system that provides
highavailabilitycanrecover from anoutagequicklyenoughsothatnoserious damageis doneto
the enterprise. The required recovery time is a function of the criticality of an application.
Recovery time measured in minutes is typically sufficient to provide high availability to critical
applications.
A system provides continuous availability if it recovers so quickly that no one is aware that there
has been an outage or at least is not inconvenienced by the outage. Recovery time in seconds
generallyqualifiesforcontinuousavailability.
Data replication not only satisfies the five fundamental requirements of availability, described
earlier and summarized below, but it also can satisfy very small RTOs and very small or zero
RPOs.
Redundancy
Since the intent of datareplication is tocopydatafrom asourcedatabase toatargetdatabase,it
inherentlysupportsredundancy.Therewillbeatleasttwosynchronizedcopiesofthedatabasein
theapplicationnetwork.
Furthermore, since the replication engine can be configured to maintain the target database as a
complete and consistent copy of the source database, the target database can be used for
application processing as well. Thus, replication not only supports data redundancy, but it also
supportsprocessingredundancy.
1ThisseriesofarticlesisareprintofaGravic,Inc.,whitepaperandispublishedwiththepermissionofGravic.Seethe
Gravic websitefortheirotherwhitepapers.
1
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Isolation
A redundant system based on data replication ensures isolation of the redundant components.
Since the two (or more) data-processing sites interact only via data replication, a problem at one
sitewillnotaffecttheothersites.
Furthermore, since the sites are loosely coupled and stand on their own, they do not have to be
identical. They can use different hardware, different application and operating-system versions,
and even different database schemas.2 It is only necessary that each site be a fully operational
siteinitsownright.
Dispersion
Data replication inherently supports geographic dispersion. The sites can be hundreds or
thousands of miles apart. However, the farther apart the systems are, the greater will be the
replication latency. Therefore, it is important to select replication architectures that minimize any
latencythattheyaddtoreplicationprocessing.
Failover
One site can automatically detect a fault in another site by monitoring the data flow in the
replication channel. For instance, during idle times, the source system can send heartbeat,
status, or “I’m alive” messages to the target system. If the target system detects a lack of
replicationorheartbeattraffic,itcaninitiatethefailoverprocess.
If the target system is also actively processing transactions, or if it is kept in a ready state to do
so, failover is simply a matter of switching users from the failed site to the operational site. It is
knownthatthesurvivingsiteisoperational.Thereisnodecisiontimeinvolved–justdoit.
Testing
Compared to active/passive systems, testing failover is much simplified with active/active
systems. Testing an active/passive architecture is difficult and risky and requires an application
outage as failover is tested. Bringing up the backup system requires loading (if magnetic tape
backup or virtual tape backup is used) or activating the backup database, starting the
applications, switching the networks, and testing the system. It is expensive since critical
personnelmustbeon-siteoron-callincasesomethinggoeswrong.
Active/passive failover testing can take hours, during which the application is down. And it is
risky. What if the failover doesn’t work? What if the maintenance window is exceeded? What if
the primarysystem doesn’t come back up? As a result, full failover testing is often not done. The
driving factor when a failure does occur and the backup must be brought online is often faith. No
wondermanagementisoftenreluctanttomakethecalltofailover.
In an active/active system, the backup is always operational. Testing it only requires periodically
sending test or verification messages to the backup system. Alternatively, a subset of users can
be periodically switched over to the known good backup system, a process that typically can be
done in seconds or subseconds. Thus, failover testing can be performed often and with little risk.
Of course, if all nodes are actively processing transactions, it is always known that all nodes are
performingproperly.Everytransactionis,ineffect,atestmessage.
2 If this capability is important in your application, be sure that your data-replication vendor supports heterogeneous
replicationbetweenthesystemsanddatabasesthatyouhave.
2
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

RTO
As can be seen bythe failover description above, data replication allows recovery from a system
fault to be accomplished in seconds or less. Recovery is simply a matter of rerouting user or
transaction requests to a surviving node in the application network.3 Therefore, RTOs measured
insubsecondsorsecondscanbeachieved.
RPO
If asynchronous replication is used,RPOs intheorder of tens or hundreds ofmilliseconds canbe
achieved. If synchronous replication is used, no data is lost following a source-node failure. An
RPOofzeroisachieved.
However, it should be noted that whereas synchronous replication will lose no data, there is a
window of uncertainty following a source-node failure. Since a synchronous replication engine
typically safe-stores or tentatively applies the transaction changes on the target system before
voting to commit, there is a brief window during which a source-node failure will leave the target
transaction in doubt as to whether it was committed or aborted on the source system. Upon
takeover, the target system will not know what to do with the transaction. This is a hung
transactionandmustberesolvedmanuallyorbybusinessrules.4
The Business Continuity Continuum
BusinessContinuity–aSummary
The various business continuity approaches that we have described earlier are summarized in
Figure 1. This diagram plots RPO versus RTO and shows where each methodology fits. The
horizontal axis shows improving RTO as it trends toward zero (or unnoticeable) recovery time,
and the vertical axis shows improving RPO as it trends toward zero data loss following a node
failure.Systemcontinuityincreasesasyoumoveupandtotheright.
Hence,mostavailabilityimplementationsareintheupperrightquadrantofthefigureusingoneof
the data-replication architectures. Best practices are pushing implementations from
active/passive to active/active and (assuming the appropriate technology exists) from
asynchronousreplicationtosynchronousreplication.5
Though the figure reflects the full range of business continuity strategies, we are only concerned
in this white paper with the data-replication architectures that can provide RTOs measured in
minutes to subseconds and RPOs measured in seconds to zero. They reflect the trends that are
occurring in the marketplace as companies realize that they need even those services once
deemedancillary,suchasemailandInternetaccess,tobealwaysavailable.
A broad range of techniques exists for minimizing data loss and unplanned downtime, from tape
backupstoactive/activesystems.Webrieflyreviewthemnexttoplacetheminperspective.
3Userscanbeswitchedusinguserredirection,networkredirection,orserverredirection.SeeAchievingFastFailoverin
Active/ActiveSystems,Parts1and2,AvailabilityDigest;AugustandSeptember,2009.
4Asapracticalmatter,ifthetargetsystemknowsthatallI/Oeventsweresuccessfullyappliedtothesourcedatabase,it
canassumethatthesourcesystem issuedthecommitanddothesame.Coordinated-commitreplicationenginesknow
thisinformation.
5Verifytherangeofsupportwithyourreplication-enginevendor.
3
©2011SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

zero
nodataloss sync sync
unidirectional active/active*
msec. async async
unidirectional active/active*
seconds. * includes
increasing
sizzling-hot
continuity
standby
hours virtual data-replicationarchitectures
tape
virttuaaplebackupstrategies
(assumingthereisasystem
mmaaggnneetitcic towhichtorecover)
ttaappee
days
high continuous
availability availability
betterRTO(fasterrecovery)
Figure1:TheBusinessContinuityContinuum
DisasterRecovery
Disasterrecoveryistheabilitytorecoverfromadisaster,evenifittakeshoursordays.
TapeBackup
