> "reasonably designed."  If they didn't think they were reasonably
> designed, they wouldn't be finished with it until they did think it
> was.* ]
>
> [*Some of those systems will fail. Most will not. Many of them will
> fail in ways that are safe and anticipated. Some will will not, and
> surprise everyone. *]
>
> [*Systems Safety researcher Erik Hollnagel has had related
> thoughts:*]
>
> [*We must strive to understand that accidents don't happen because
> people gamble and lose.*]
>
> [*Accidents happen because the person believes
> that:*]\
> [ *...what is about to happen is not
> possible,*]\
> [ *...or what is about to happen has no connection to what they are
> doing,*]\
> [ *...or that the possibility of getting the intended outcome is well
> worth whatever risk there is.*]

8\. Subsection (e) of Rule 15c3-5 requires brokers or dealers with
market access to establish, document, and maintain a system for
[regularly reviewing the
effectiveness]{style="background-color: #ffff00;"} of their risk
management controls and supervisory procedures. This sub-section also
requires that the Chief Executive Officer ("CEO") review and certify
that the controls and procedures comply with subsections (b) and (c) of
the rule. These requirements are intended to assure compliance on an
ongoing basis, in part by charging senior management with responsibility
to regularly review and certify the effectiveness of the controls.

> [*Note: This takes into consideration that systems are not indeed
> static, and it implies that they need to evolve over time. This is
> important to remember for some notes later
> on.*]

9\. Beginning no later than July 14, 2011, and continuing through at
least August 1, 2012, Knight's system of risk management controls and
supervisory procedures was not reasonably designed to manage the risk of
its market access. In addition, Knight's internal reviews were
[inadequate]{style="background-color: #ffff00;"}, its annual CEO
certification for 2012 was defective, and its written description of its
risk management controls was
[insufficient]{style="background-color: #ffff00;"}. Accordingly, Knight
violated Rule 15c3-5. In particular:

1.  Knight [did not have controls
    ]{style="background-color: #ffff00;"}[reasonably
    designed]{style="background-color: #ffff00;"} to prevent the entry
    of erroneous orders at a point immediately prior to the submission
    of orders to the market by one of Knight's equity order routers, as
    required under Rule 15c3-5(c)(1)(ii);
2.  Knight [did not have controls
    ]{style="background-color: #ffff00;"}[reasonably
    designed]{style="background-color: #ffff00;"} to prevent it from
    entering orders for equity securities that exceeded pre-set capital
    thresholds for the firm, in the aggregate, as required under Rule
    15c3-5(c)(1)(i). In particular, Knight failed to link accounts to
    firm-wide capital thresholds, and Knight relied on financial risk
    controls that were not capable of preventing the entry of orders;
3.  Knight [did not have an
    ]{style="background-color: #ffff00;"}[adequate]{style="background-color: #ffff00;"}
    written description of its risk management controls as part of its
    books and records in a manner consistent with Rule 17a-4(e)(7) of
    the Exchange Act, as required by Rule 15c3-5(b);
4.  Knight also violated the requirements of Rule 15c3-5(b) because
    Knight [did not have]{style="background-color: #ffff00;"} technology
    governance controls and supervisory procedures
    [sufficient]{style="background-color: #ffff00;"} to ensure the
    orderly deployment of new code or to prevent the activation of code
    no longer intended for use in Knight's current operations but left
    on its servers that were accessing the market; and Knight [did not
    have]{style="background-color: #ffff00;"} controls and supervisory
    procedures [reasonably designed]{style="background-color: #ffff00;"}
    to guide employees' responses to significant technological and
    compliance incidents;
5.  Knight [did not
    ]{style="background-color: #ffff00;"}[adequately]{style="background-color: #ffff00;"}
    review its business activity in connection with its market access to
    assure the overall effectiveness of its risk management controls and
    supervisory procedures, as required by Rule 15c3-5(e)(1); and
6.  Knight's 2012 annual CEO certification was
    [defective]{style="background-color: #ffff00;"} because [it did not
    certify]{style="background-color: #ffff00;"} that Knight's risk
    management controls and supervisory procedures complied with
    paragraphs (b) and (c) of Rule 15c3-5, as required by Rule
    15c3-5(e)(2).

> [*Note: It's a counterfactual party! The question remains: are
> conditions **sufficient, reasonably designed, or adequate** if they
> don't result in an accident like this one? Which comes first: these
> characterizations, or the accident? Knight Capital did believe these
> things were sufficient, reasonably designed, and adequate **enough**.
> Otherwise, they would have addressed them. One question necessary to
> answer for prevention is: "What were the sources of confidence that
> Knight Capital drew upon as they designed their systems?" Because
> improvement lies there.*]

10\. As a result of these failures, Knight did not have a system of risk
management controls and supervisory procedures [reasonably
designed]{style="background-color: #ffff00;"} to manage the financial,
regulatory, and other risks of market access on August 1, 2012, when it
experienced a significant operational failure that affected SMARS, one
of the primary systems Knight uses to send orders to the market. While
Knight's technology staff worked to identify and resolve the issue,
Knight remained connected to the markets and continued to send orders in
certain listed securities. Knight's failures resulted in it accumulating
an unintended multi-billion dollar portfolio of securities in
approximately forty-five minutes on August 1 and, ultimately, Knight
lost more than \$460 million, experienced net capital problems, and
violated Rules 200(g) and 203(b) of Regulation SHO.

<div>

<div>

A. Respondent

</div>

</div>

<div>

<div>

FACTS

</div>

</div>

<div>

11\. Knight Capital Americas LLC ("Knight") is a U.S.-based
broker-dealer and a wholly-owned subsidiary of KCG Holdings, Inc. Knight
was owned by Knight Capital Group, Inc. until July 1, 2013, when that
entity and GETCO Holding Company, LLC combined to form KCG Holdings,
Inc. Knight is registered with the Commission pursuant to Section 15 of
the Exchange Act and is a Financial Industry Regulatory Authority
("FINRA") member. Knight has its principal business operations in Jersey
City, New Jersey. Throughout 2011 and 2012, Knight's aggregate trading
(both for itself and for its customers) generally represented
approximately ten percent of all trading in listed U.S. equity
securities. SMARS generally represented approximately one percent or
more of all trading in listed U.S. equity securities.

B. August 1, 2012 and Related Events

Preparation for NYSE Retail Liquidity Program

12\. To enable its customers' participation in the Retail Liquidity
Program ("RLP") at the New York Stock Exchange, which was scheduled to
commence on August 1, 2012, Knight made a number of changes to its
systems and software code related to its order handling processes. These
changes included developing and deploying new software code in SMARS.
SMARS is an automated, high speed, algorithmic router that sends orders
into the market for execution. A core function of SMARS is to receive
orders passed from other components of Knight's trading platform
("parent" orders) and then, as needed based on the available liquidity,
send one or more representative (or "child") orders to external venues
for execution.

13\. Upon deployment, the new RLP code in SMARS was
[intended]{style="background-color: #ffff00;"} to replace unused code in
the relevant portion of the order router. This unused code previously
had been used for functionality called "Power Peg," which Knight had
discontinued using many years earlier. Despite the lack of use, the
Power Peg functionality remained present and callable at the time of the
RLP deployment. The new RLP code also repurposed a flag that was
formerly used to activate the Power Peg code. Knight intended to delete
the Power Peg code so that when this flag was set to "yes," the new RLP
functionality--rather than Power Peg--would be engaged.

> [*Note: Noting the intention is important in gaining understanding,
> because it shows effort to get into the mindset of the individual or
> groups involved in the work. If this introspection continued
> throughout the document, it would get a little closer to something
> like a postmortem.*]
>
> [*Raise your hand if you can definitively state **all** of the active
> and inactive code execution paths in your application right now.
> Right.*]

14\. When Knight used the Power Peg code previously, as child orders
were executed, a cumulative quantity function counted the number of
shares of the parent order that had been executed. This feature
instructed the code to stop routing child orders after the parent order
had been filled completely. In 2003, Knight ceased using the Power Peg
functionality. In 2005, Knight [moved the tracking of cumulative shares
function in the Power Peg code to an earlier point in the SMARS code
sequence]{style="background-color: #ffff00;"}. Knight did not retest the
Power Peg code after moving the cumulative quantity function to
determine whether Power Peg would still function correctly if called.

> [*Note: On the surface, this looks like some technical meat to bite
> into. There is a some detail surrounding a fault-tolerance guardrail
> here, something to fail "closed" in the presence of specific criteria.
> What's missing? Any dialogue about why the move of the function from
> one place (in Power Peg) to another (earlier in SMARS) -- this is
> important, because in my experience, engineers don't make effort in
> that sort of thing without motivation. If that motivation was
> explored, then we'd get a better sense of where the organization drew
> its confidence from, previous to the accident. This helps us
> understand their local rationality. But: we don't get that from this
> document.*]

15\. Beginning on July 27, 2012, Knight deployed the new RLP code in
SMARS in stages by placing it on a limited number of servers in SMARS on
successive days. During the deployment of the new code, however, one of
Knight's technicians did not copy the new code to one of the eight SMARS
computer servers. [Knight did not have a second technician review this
deployment]{style="background-color: #ffff00;"} and no one at Knight
realized that the Power Peg code had not been removed from the eighth
server, nor the new RLP code added. Knight had no written procedures
that required such a review.

> [*Note: Code and deployment review is a fine thing to have. But is it
> sufficient? [[Dr. Nancy Leveson explained when she was invited to
> speak at the SEC's "Technology
> Roundtable"]](http://www.kitchensoap.com/2013/05/31/prevention-versus-governance-versus-adaptive-capacities/ "Nancy Leveson"){target="_blank"
> rel="noopener"} in October of last year that in 1992, she chaired a
> committee to review the code that was deployed on the Space Shuttle.
> She said that NASA was spending \$100 million a year to maintain the
> code, was employing the smartest engineers in the world, and there
> were still found to be gaps of concern. She repeats that there is no
> such thing as perfect software, no matter how much effort an
> individual or organization makes to produce such a
> thing.*]
>
> [*Do written procedures requiring a review of code or deployment
> guarantee safety? Of course not. But ensuring safety isn't what the
> SEC is expected to do in this document. Again: they are only pointing
> out the differences between regulation and
> practice.*]

Events of August 1, 2012

16\. On August 1, Knight received orders from broker-dealers whose
customers were eligible to participate in the RLP. The seven servers
that received the new code processed these orders correctly. However,
orders sent with the repurposed flag to the eighth server triggered the
defective Power Peg code still present on that server. As a result, this
server began sending child orders to certain trading centers for
execution. [Because the cumulative quantity function had been
moved]{style="background-color: #ffff00;"}, this server continuously
sent child orders, in rapid sequence, for each incoming parent order
without regard to the number of share executions Knight had already
received from trading centers. Although one part of Knight's order
handling system recognized that the parent orders had been filled, this
information was not communicated to SMARS.

> [*Note: So the guardrail/fail-closed mechanism wasn't in the same
> place it was before, and the eighth server was allowed to continue on.
> As Leveson said in her testimony: " It's not necessarily just
> individual component failure. In a lot of these accidents each
> individual component **worked exactly the way it was expected to
> work.** It surprised everyone in the interactions among the
> components."*]

17\. [The consequences of the failures were
substantial]{style="background-color: #ffff00;"}. For the 212 incoming
parent orders that were processed by the defective Power Peg code, SMARS
sent millions of child orders, resulting in 4 million executions in 154
stocks for more than 397 million shares in approximately 45 minutes.
Knight inadvertently assumed an approximately \$3.5 billion net long
position in 80 stocks and an approximately \$3.15 billion net short
position in 74 stocks. Ultimately, Knight realized a \$460 million loss
on these positions.

> [*Note: Just in case you forgot, this accident was sooooo bad. These
> numbers are so big. Keep that in mind, dear reader, because I want to
> you remember that when you think about the engineer who thought he had
> deployed the code to the eighth server. *]

18\. The millions of erroneous executions influenced share prices during
the 45 minute period. For example, for 75 of the stocks, Knight's
executions comprised more than 20 percent of the trading volume and
contributed to price moves of greater than five percent. As to 37 of
those stocks, the price moved by greater than ten percent, and Knight's
executions constituted more than 50 percent of the trading volume. These
share price movements affected other market participants, with some
participants receiving less favorable prices than they would have in the
absence of these executions and others receiving more favorable prices.

BNET Reject E-mail Messages

19\. On August 1, Knight also received orders eligible for the RLP but
that were designated for pre-market trading. SMARS processed these
orders and, beginning at approximately 8:01 a.m. ET, an internal system
at Knight generated automated e-mail messages (called "BNET rejects")
that referenced SMARS and identified an error described as "Power Peg
disabled." Knight's system sent 97 of these e-mail messages to a group
of Knight personnel before the 9:30 a.m. market open. [Knight did not
design these types of messages to be system alerts, and Knight personnel
generally did not review them when they were
received.]{style="background-color: #ffff00;"} However, these messages
were sent in real time, were caused by the code deployment failure, and
provided Knight with a potential opportunity to identify and fix the
coding issue prior to the market open. These notifications were not
acted upon before the market opened and were not used to diagnose the
problem after the open.

> [*Note: Translated, this says that systems-generated warnings/alerts
> that were sent via email weren't noticed. Signals sent by automated
> systems (synchronously -- as in "alerts" or asynchronously -- as in
> "email") aimed at perfectly detecting or preventing anomalies **[[is
> not a solved
> problem]](http://www.kitchensoap.com/2013/07/22/owning-attention-considerations-for-alert-design/ "Alert Design"){target="_blank"
> rel="noopener"}**. Show me an outage, any outage, and I'll show you
> warning signs that humans didn't pick up on. The document doesn't give
> any detail on why those type of messages were sent via email (as
> opposed to paging-style alerts), what the distribution list was for
> them, how those messages get generated, or any other details.\
> *]
