The High Availability Design Spectrum – Part 1
Dr.TerryCritchley
December2016
[Editor’s Note: In his book “High Availability IT Services,” Dr. Terry Critchley lists
twenty-threeareas thatcan haveanimpactontheavailabilityof IT business services.
In this multipart series, and with his permission, we publish his observations. Part 1 of this series reviews
hisfirstfourreflectionsinhisPartsAthroughD.]
Dr.TerryCritchley:MostofthedocumentationonHA/DRIhavecomeacrossmajorsonhardware,mainly
redundant or fault tolerant, and, to some extent, software. My thesis is that the spectrum of activity
needed to design, implement and maintain a high availability business IT system and recover from
failures small and large (DR) is much, much greater. Below, I have listed 23 areas (A to W) which can
have an impact on the availability of business services which are IT-based. I am sure it will be evident
that these areas can have a significant impact on the availability and non-availability of any service or
system.
Remember, focusing on availability and focusing on avoidance of non-availability are not the same thing,
ifyouthinkaboutit.
Thebookandchapterreferencesfollowingreferto'HighAvailabilityITServices':
https://www.crcpress.com/High-Availability-IT-Services/Critchley/9781482255904.
A. Availability by Systems Design/Modification
Highly available systems need to be designed or existing systems modified to meet the needs of crucial
applications. The design stage with the tools and techniques which can help in this area are covered in
Chapter 7. The design stage can be aided by judicious use of Reliability Block Diagrams (RBDs) and
some of the techniques and methods outlined in Chapter 7. Where feasible, relevant calculations should
beemployedanddocumented.
B. Availability by Engineering Design
This area lies directly with the hardware and software engineering functions within the hardware vendor
organization but will cover things like ECC, R.A.I.D., hot swap devices, automatic software recovery
(shadow) and so on (essentiallyRAS). Nowadays, these features are offered bymost hardware vendors
whowanttostayinbusiness.
You can't really influence or use these features - it's just nice to know they are there. Software
'engineering' is the responsibility of the vendors of commercial off-the-shelf software and middleware; the
responsibilityforin-housesoftwarereliabilitylieswiththeorganizationitself.
1
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

SelfHealingHardwareandSoftware
A useful (but marketing) article by IBM gives us the following information about self healing, generally
talked about as part of ‘autonomic computing’. In a nutshell, self healing hardware applied to ‘chips’ often
meansthatbuilt-inconductingmaterialisbuiltinandusedto‘seal’gapsinbrokencircuitry.
“Autonomic computing will help customers reduce the cost and complexity of their e-business
infrastructures and overcome the challenges of systems management using systems that self-
optimize, self-configure, self-heal and self-protect. System z plays a major role in the IBM autonomic
computinginitiative,sinceself-managementcapabilitiesavailableforSystem zwillfunctionasamodel
for other IBM servers. z/OS provides ... functions to address the goals of the IBM autonomic
computinginitiative".
Autonomic Computing Areas
Adapt Dynamically to Discover, diagnose
Changing & act to prevent
Environments disruptions
Self- Self-
Configuring Healing
Self- Self-
Optimising Protecting
Anticipate, correct,
Tune resources &
identify and protect
balance workloads
against attacks
Figure1: AutonomicComputingAreas(TheGoal)
Self-HealingandOtherItems
In an article1 from nearly 20 years ago, Jim Gray stated 'Administration and maintenance people are
doing a better job than we have reason to expect ....The only hope is to simplify and reduce human
interventionintheseaspectsofthesystem.' Washeanautonomiccomputingsage?
Although a level of operations automation is available today, full autonomic computing is still a goal with
thefollowingrequirements,amongstothers:
 Detection of various faults and even automatic switching to backups where available (Chipkill
memory,ECCcache,CentralProcessor,ServiceProcessor,systembus,MultipathI/O,etc.).
 PlugandPlayandHotswapI/O
 CapacityUpgradeonDemand
 IntrusionDetectionServices
 System Automation It provides policy-based self-healing of applications, system and sysplex
resources
1 WhyDoComputersStopandWhatCanBeDoneAboutIt?TANDEMTechnicalReport85.7June1984PN87614(JimGray)
2
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

 SecurityfeaturessuchasLDAP,Kerberos,SSL,digitalcertificates,andencryption
Inaself-healingsoftwaresystem2,thesystemmonitorsitselfforanomalousbehavior(afterthe‘norm’has
been established). When behavior is detected, the system enters a self-diagnosis mode that aims to
identify the fault and extract as much information as possible as to its cause, symptoms and impact on
the system (not the service, which it does not understand). Once these are identified, the system tries to
adaptitselfbygeneratingcandidate‘fixes’,whicharetested(assessed)tofindthebestcandidatestate.
The nearest we get to autonomic computing today is automation of various functions and some human
interventioninothers.
C. Availability by Application Design
It is possible to increase the availability of systems by judicious application design. Two examples are
shownbelow-usingmessagequeuingandimplementinglocalspooling(andpossiblyerrorchecking)ina
client/server environment. Although the server part of the application is not available, recovery can be
effectedfasterwhenitdoesbecomeavailable-nore-entryoftransactiondataandsoon.
PoorApplicationDesign
Conventional Programs: For internally developed systems, the design and coding obviously have a
bearingonthecorrectfunctionalityandavailabilityof theapplications supportingbusiness services based
on IT systems. This is in the province of software availability and QoS (quality of service), covered in
Chapter6,under'SoftwareReliability'.
In general, experienced users will try to avoid poorly designed systems, which are sometimes developed
without their input in terms of functions and usability. I have seen such users revert to manual methods
wherepossibletoavoidtryingtousetheunusable.
ApplicationAvailability Design Schematic: Options
Option 1
MSGQ System
Message
Queue
Server
Normal Option
DB
Option 2
Main
Local editing, processing
DB
and spooling to local DB
Figure2: AvailabilitybyDesign-TwoSampleOptions
2 A.D.Keromytis, http://www.cs.columbia.edu/~angelos/Papers/2007/self-heal.pdf
3
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Web Applications: An illuminating article3 lists 10 faults designed ‘to drive away your readers’ from a
customer-facingwebsite(Aug2012):
1. Useimpossiblenavigationonyoursite(seenextdiagram)
2. Putupmoreadvertisementsthancontent
3. Donotmaintainyoursite[referclientstoother,non-existentsites]
4. Require[askfor]toomuchinformation
5. Betoocuttingedge[requireclientstoberocketscientistsorPhiladelphialawyers]
6. Crashyourcustomers’browsers
7. Usesoundonabusinesssite[exceptasavalid,requestedwebinarforexample]
8. Putuptoomanyimages
9. Embedtoomanytables
10. Paynoattentiontoyourreaders'[needs/feedback]
These ‘failures’ can cause a logical outage or, at the least, a partial outage by sending some or all
potential customers (or internal staff) away from your site. One such site, guaranteed to lose a company
business,andpossiblythedesignerhisjob,isillustratedbelowinallitsover-the-topglory.
The Unusable Web Site (or Application): Down
Server Site
Clickhere
Ad
Clickthere 100% Up
Done? Ad
Next?
Ad
Internet
Pardon?
Browser
!%=+?*
^|!
User (c. a few seconds patience)
Figure3: Non-availability:TheUnusableWebSiteorApplication
I am a recognised authority on unusable and irritating web sites which are, for all intents and purposes,
‘down’ because theyare notdeliveringtheservicetheyweredesignedfor and possiblydivertmetoother
sitestotransactmybusiness.
This 'poor design' thesis is supported bythe 2012 report 'How to Stop Webpage Speed from Killing Your
Marketing' by Limelight Networks, Inc., which indicates that when web site page loading is slow, 62% of
mobile device users abandon their sessions; and nearly one third of them never return. Not good for
business.Whatdoesthatsuggesttous?
3
webdesign.about.com/od/webdesignbasics/tp/aa122101a.htm
4
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Later Research: The 7 second 'patience limit' in the diagram above may be too optimistic. In 2009, a
study by Forrester Research found that online shoppers expected pages to load in two seconds or fewer
—andatthreeseconds,alargeshareabandonthesite.Onlythree yearsearlier asimilarForresterstudy
foundtheaverageexpectationsforpageloadtimeswerefoursecondsorfewer.SeetheNYTimesarticle
belowwhereittalksabout250millisecondsbeingthe'patiencelimit':
http://www.nytimes.com/2012/03/01/technology/impatient-web-users-flee-slow-loading-
sites.html?pagewanted=all&_r=1&
Monitoring performance and user experience at the sharp end of things should be mandatory for
designers and operators of web sites. Marketing people, too, have a major part to play in this as well,
althoughyoumayhavetoadvisethemsincetheyareunlikelytohavereadthisbook.
D. Availability by Configuration
Hardware
Some of the ways that the availability of vendor servers, associated hardware and databases can be
improvedinclude:
 hardwareredundancy,forexampleRAID,memorymirroring
 puttingCPUsondifferentboardswhereverpossible
 puttingmemoryondifferentboardswhereverpossible
 puttingI/Ocardsondifferentsystemboardswhereverpossible
 connectingredundantresourcestodifferentpowersupplies
 hotswap/plugfacilitiesforcardsandperipherals
 redundantoperatingsystembootdisks
 duplicateconsoles
 failoversoftware(operatingsystem,middleware,applications)
 clustering4
 employingfault-toleranthardwareandassociatedsoftware
 useofmonitoringsoftwareindependentofthesystembeingmonitored
 otherredundant'ecosystem'devices(fans,sprinklersetc.)
The availability from basic hardware RAS to full fault tolerant features come at a cost as shown
schematically in the next diagram. It may be that the level of availability aimed for in an enterprise
depends on the final TCO. This diagram does not emphasize the other factors, both physical and logical,
whichcanaffecttheusers'viewoftheusableavailabilityofaservicewhichisgovernedbyanSLA.
Data
 using R.A.I.D techniques, weighing safety against recovery times and operational update times
(thisaffectsresponsetimesoftransactions)
 diskmirroring-localorremote(geographic)
 tablelayout,forexamplepartitioning,asinOracle,forexample
 duplicatedlogsandrecoveryfilesonseparatedrives
 backup/archivesoftware,partofDR
 database'image'copysoftware(local,remote)
4 Therearevariousformsofclusteringusedhere:active/cold,active/warm,active/hotandactive/active/standbyaswediscussed
earlier.
5
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

 redundantbackuphardware
 worstcasescenario-keyitinagainfromthebeginning!
Networks
 redundancy
 ISDNbackup
 alternate/virtualrouting
OperatingSystem
 recoveryfeatures(shadowOS,OLTP)
 fastrebootafterfailure
 automaticrestart
 journalfilesystem
 liveOSmaintenancefacilities
 logging,backup,recoveryutilities
 postdumpanalysis
Environment
 UPS(UninterruptiblePowerSupplies,sometimesamassofbatteries)
 separateelectricitysupplyfromutilityorowngenerators
 over-configuredcooling,firesprinklers,Halongas,etc.
 machineenvironmentcleanliness
 As outlined before, it is not good economics to configure a system and network for availability
where the costs of doing so outweigh the benefits. In most situations, high availability solutions
will be designed and managed on a financial 'need' basis, taking account of the criticality of the
applicationstothebusinessandtheconsequencesoftheirfailing.
Cost vs. Required Availability
Fault Tolerance
100
HACluster
With Failover
Cost
Data Integrity &
Availability
10
Reliable SW
Reliable HW
0
99.999 99.99 99.9 99.5
High Desired Availability Sub-
Optimal
Figure4: CostsofReliable/AvailableConfigurations
The schematic above (based on an IBM Redbook diagram) shows the cost effects of opting for
configurations yielding higher and higher availability, but not to scale, just indicative of possible steep
6
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

increases in cost for little availability return. It is opportune at this stage to emphasize that spending vast
amounts of money on hardware and software high availability will be to no avail if the service provided is
unavailableornotperformingaccordingtorequirementsforotherreasons.
By all means focus on the hardware/software area but not at the expense of other areas as outlined ad
nauseaminthisbook.
7
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com