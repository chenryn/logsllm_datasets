+-----------------------------------------------------------------------+
| The CDU interface counters in the LGC were incremented or decremented |
| by means of external commands that were processed inside the computer |
| as increment or decrement *operations* with names like PINC and MINC. |
| Like the LGC\'s programmable operations, these took time, in this     |
| case one memory cycle of 11.7 microseconds, each. Moving at their     |
| maximum rate, the RR CDU counters consumed approximately 15% of the   |
| available computation time. At the time, conservatively, we assumed   |
| the time drain (called TLOSS) was about 13%, which was consistent     |
| with the behavior that was observed.                                  |
+-----------------------------------------------------------------------+
| Following Apollo 11 Grumman engineers conducted tests in an attempt   |
| to duplicate the flight experience. They confirmed that even in the   |
| worst case the RR CDUs would, for brief periods, not count at their   |
| maximum rate. They arrived at a figure of 13.36% for the maximum      |
| TLOSS that could occur. Simulations at that rate experienced alarms   |
| similar to those that occurred in flight. This number is the best     |
| documentable estimate for the amount of TLOSS experienced by Apollo   |
| 11. \[Clint Tillman, \"Simulating the RR-CDU Interface When the RR is |
| in the SLEW or AUTO (not LGC) Mode in the FMES/FCI Laboratory,\"      |
| August 9, 1969\]                                                      |
+-----------------------------------------------------------------------+
| I am indebted to LM guidance systems expert George Silver for his     |
| patient explanations of the rendezvous radar interface. Silver\'s     |
| role was pivotal during the Apollo 11 mission. He was at Cape         |
| Canaveral for the launch, then flew to Boston to get ready for an     |
| assignment to monitor the lunar ascent in Cambridge. On July 20 he    |
| watched the lunar landing at home on television. He heard the alarms, |
| grasped that something was stealing CPU time, and remembered the case |
| he had seen during LM-3 systems testing in which the rendezvous radar |
| interface had caused wild counter activity. After some additional     |
| analysis by the team monitoring the mission in Cambridge, Silver      |
| finally got through to the MIT representatives in Houston, on the     |
| morning of July 21, less than one hour before lunar liftoff.          |
+-----------------------------------------------------------------------+
| \*       \*      \*                                                   |
+-----------------------------------------------------------------------+
| The lunar landing was the busiest mission phase on Apollo. Landing    |
| guidance had to hit targets that were defined in position, velocity,  |
| acceleration (so the LM would stay right side up), jerk (the rate of  |
| change of acceleration), and one dimension of \"snap\" --- as Klumpp  |
| was pleased to dub the rate of change of jerk (pointing to            |
| \"crackle\" and \"pop\" for the next two derivatives). During the     |
| visibility phase the software permitted the crew to redesignate the   |
| landing site. The throttle had to be controlled continuously.         |
| Navigation had to incorporate landing radar measurements. (Figure 8   |
| shows the typical duty-cycle profile between the selection of P63 and |
| touchdown.)                                                           |
+-----------------------------------------------------------------------+
| ![Figure 8: Duty Cycle During Powered                                 |
| Descent](dutycycle@146x450.jpg){style="border-width: 0" height="146"  |
| width="450"}                                                          |
+-----------------------------------------------------------------------+
| Figure 8: Duty Cycle During Powered Descent (Simulation Data)         |
+-----------------------------------------------------------------------+
| Even so, we had tried to make our programs fast enough to preserve    |
| some margin against TLOSS from an unknown source. The chief           |
| constraint was the two-second period that was built into the          |
| average-G navigation used during powered-flight. This was the         |
| frequency at which the READACCS *task* read the accelerometers and    |
| scheduled the big SERVICER *job* that used those readings as the      |
| starting point for a new round of navigation, guidance, throttle,     |
| attitude-command, and display. During the lunar descent, duty-cycle   |
| simply describes how much time was used in aggregate by jobs, tasks,  |
| and interrupts, during each 2-second period.                          |
+-----------------------------------------------------------------------+
| During the braking phase, up to the time the landing radar locked     |
| onto the surface, the duty-cycle margin was over 15%. After the radar |
| acquired, the extra computations involved in converting the           |
| body-referenced radar data to the navigation coordinate system        |
| lowered the margin to perhaps 13%. When a monitor display such as     |
| Verb 16 Noun 68 was added, the margin shrank again, to 10% or less.   |
| Buzz Aldrin was perceptive when he said after the second 1202 alarm,  |
| \"It appears to come up when we have a 1668 up\"\[16\].               |
+-----------------------------------------------------------------------+
| With a 10% margin and a 13% drain, the LGC simply did not have enough |
| CPU time to perform all the functions that were required. Thanks to   |
| the flexibility of the Executive design --- and quite unlike what     |
| would have happened with a boxcar structure --- there was no          |
| collapse.                                                             |
+-----------------------------------------------------------------------+
| ![Table 1: Jobs Active During the Lunar                               |
| Landing](jobs@255x450.jpg){style="border-width: 0" height="255"       |
| width="450"}                                                          |
+-----------------------------------------------------------------------+
| Table 1: Jobs Active During the Lunar Landing                         |
+-----------------------------------------------------------------------+
| Table 1 lists the jobs that were active during the Apollo 11 powered  |
| descent. SERVICER carried the lowest priority, but was also by far    |
| the longest. The higher-priority jobs that could break in on SERVICER |
| were all of relatively short duration.                                |
+-----------------------------------------------------------------------+
| Having a relatively low priority because of its size, SERVICER got    |
| last crack at the available computation time. With a negative time    |
| margin it was SERVICER that had not yet reached its conclusion when   |
| the next READACCS, running punctually, scheduled SERVICER again.      |
| Because it had not reached its end, the earlier SERVICER had not      |
| released its core set and VAC area --- so the next time READACCS      |
| called FINDVAC to schedule SERVICER the Executive assigned a new core |
| set and VAC area. That SERVICER also did not finish. After a short    |
| span of such operation the Executive exhausted its supply of core     |
| sets and/or VAC areas. When the next request was made the Executive,  |
| unable to comply, called BAILOUT with a 1201 or 1202 alarm code.      |
+-----------------------------------------------------------------------+
| ![Figure 9: SERVICER Operation, With and Without                      |
| TLOSS](servicer@167x450.jpg){style="border-width: 0" height="167"     |
| width="450"}                                                          |
+-----------------------------------------------------------------------+
| Figure 9: SERVICER Operation, With and Without TLOSS                  |
+-----------------------------------------------------------------------+
| Figure 9 illustrates how SERVICER behaves in the presence of severe   |
| TLOSS, and Figure 10 compares plots of core set and VAC area usage    |
| for a normal case, and a high TLOSS case in which restarts occur.     |
+-----------------------------------------------------------------------+
| ![Figure 10: Effect of TLOSS on Executive and Waitlist                |
| Resources](execplots@200x450.jpg){style="border-width: 0"             |
| height="207" width="450"}                                             |
+-----------------------------------------------------------------------+
| Figure 10: Effect of TLOSS on Executive and Waitlist Resources During |
| Lunar Descent\                                                        |
| (Simulation data, starting in P63 before acquisition of radar         |
| velocity data,\                                                       |
| ending at touchdown\[17\].)                                           |
+-----------------------------------------------------------------------+
| The interesting effect of this train of events, during P63, was that  |
| the problem fixed itself. The software restart reconstructed only the |
| most recent incarnation of the SERVICER job, and flushed the          |
| uncompleted SERVICER \"stubs\" that had accumulated. In addition, it  |
| terminated functions that had not been restart protected because they |
| were not deemed critical --- including the DELTAH monitor Verb 16     |
| Noun 68. This is why, following the two alarms in P63, the display    |
| returned from Noun 68 to Noun 63.                                     |
+-----------------------------------------------------------------------+
| Here a system of restart protection that was primarily motivated by   |
| the possibility of hardware glitches synergistically provided a means |
| to shed computational load in response to a software logjam caused by |
| TLOSS. We had devised a real-time control system that under certain   |
| conditions was \"fault tolerant\".                                    |
+-----------------------------------------------------------------------+
| During P64 the situation was different. Added to the regular guidance |
| equations was new processing that provided the capability to          |
| redesignate the landing site. With this addition, the essential       |
| software by itself left a duty-cycle margin of less than 10%. The     |
| alarms kept coming. There were three 1201 and 1202 alarms within 40   |
| seconds. Each time, the software restart flushed the Executive queue  |
| but could not shed load.                                              |
+-----------------------------------------------------------------------+
| At MET 102:43:08, forestalling the next alarm, Armstrong switched the |
| autopilot from AUTO to ATT HOLD mode, easing the computational        |
| burden, and then entered semi-manual mode P66, where the burden was   |
| still lighter. After 2 minutes and 20 seconds spent maneuvering in    |
| P66 without alarms, the LM landed.                                    |
+-----------------------------------------------------------------------+
| \*       \*      \*                                                   |
+-----------------------------------------------------------------------+
| Five months later Apollo 12 survived a lightning strike during boost  |
| and landed on the Moon. Thanks in part to a new noun (69) that we had |
| defined to allow the crew to make position corrections based on       |
| ground tracking data during the braking phase, astronauts Pete Conrad |
| and Alan Bean were able to land the LM within an easy walk of an      |
| unmanned Surveyor spacecraft that had landed on the Moon in April,    |
| 1967. Apollo 12\'s pinpoint landing paved the way for landings in     |
| more difficult terrain.                                               |
+-----------------------------------------------------------------------+
| It was only after Apollo 12 that we began to understand the other     |
| serious problem.                                                      |
+-----------------------------------------------------------------------+
| It started when Clint Tillman of Grumman Aerospace (the builder of    |
| the Lunar Module) noticed throttle oscillations during simulations of |
| the final descent, on the order of 5% of the DPS thrust. This         |
| prompted Tillman to examine telemetry data from Apollo 11 and 12,     |
| where he noticed throttle oscillations during the final landing       |
| phases that were on the order of 25% peak to peak. (See Figure 12.)   |
| This was the period when the Commander was simultaneously using the   |
| ROD switch to control altitude-rate and the joystick to maneuver the  |
| vehicle. Because plots of this data resembled the battlements and     |
| turrets of a castle (or a castellated nut) this problem got to be     |
| known as \"throttle castellation\".                                   |
+-----------------------------------------------------------------------+
| ![Figure 11: First Report of Throttle                                 |
| Castellations](castellations@365x450.jpg){style="border-width: 0"     |
| height="365" width="450"}                                             |
+-----------------------------------------------------------------------+
| Figure 11: First Report of Throttle Castellations                     |
+-----------------------------------------------------------------------+
| Klumpp, in Cambridge, traced the excitation that caused the           |
| oscillations to a previously unrecognized phenomenon that came to be  |
| called \"IMU bob\"\[18\]. The IMU was located above, and about four   |
| feet in front of, the center-of-mass of the vehicle. Small but rapid  |
| pitch maneuvers, such as those required during final descent, slung   |
| the IMU in a way that was interpreted by the accelerometers as a      |
| change in the vertical velocity of the *vehicle*. This in turn        |
| affected the calculations of altitude-rate, and the estimate of       |
| thrust.                                                               |
+-----------------------------------------------------------------------+
| But this theory only partially explained the throttle behavior        |
| observed in the flight data.                                          |
+-----------------------------------------------------------------------+
| Rocket engines that can be throttled were and still are unusual, but  |
| a throttleable engine was a necessity for making a soft landing on    |
| the Moon. A fixed-thrust engine and a very simple guidance equation   |
| could put a spacecraft *through* a spot on the lunar surface. But to  |
| get there right side up, moving slowly, with visibility and the       |
| ability to hover while choosing a landing area, required an engne     |
| that could balance lunar gravity while varying its thrust as the      |
| vehicle\'s mass decreased, as the vertical component of the thrust    |
| vector changed during attitude maneuvers, and as the astronaut        |
| requested changes in the descent rate.                                |
+-----------------------------------------------------------------------+
| The guidance equations determined what acceleration was required,     |
| both in magnitude and direction. The autopilot maneuvered the vehicle |
| to satisfy the thrust direction commanded by guidance. It was up to   |
| the throttle-control program to control the magnitude.                |
| Throttle-control started by computing the LM\'s mass. Knowing mass,   |
| it determined the magnitude of the thrust correction required to      |
| change vehicle acceleration from that measured by the accelerometers  |
| to that commanded by the guidance equations, converted this to the    |
| units used by the throttle assembly (about 2.8 pounds per pulse), and |
| sent it to the hardware.                                              |
+-----------------------------------------------------------------------+
| The accelerometers in the IMU did not really measure acceleration;    |
| they merely counted velocity increments since the last reading.       |
| Because a throttle change commanded on the previous guidance pass     |
| occurred at some time between the accelerometer readings, the         |
| measured delta-V did not show the full effect of the most recent      |
| adjustment.                                                           |
+-----------------------------------------------------------------------+
| ![Figure 12: Throttle Excursions During Apollo 12                     |
| P66](throtoscil@264x450.jpg){style="border-width: 0" height="264"     |
| width="450"}                                                          |
+-----------------------------------------------------------------------+
| Figure 12: Throttle Excursions During Apollo 12 P66\[19\]             |
+-----------------------------------------------------------------------+
| Throttle control had to compensate for this effect. The amount of     |
| compensation depended on when during the guidance period throttle     |
| commands were issued, and it also depended upon the rapidity with     |
| which the engine followed the throttle command. The applicable ICD    |
