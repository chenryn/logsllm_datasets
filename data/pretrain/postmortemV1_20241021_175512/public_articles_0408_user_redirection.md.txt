Achieving Fast Failover in Active/Active Systems - Part 1
August2009
Active/active systems1 provide continuous availability not because they avoid faults but because
theycanrecoverfromfaultssoquicklythatusersdon’tnoticethattherehasbeenanoutage.This
capabilityrequiresnotonlythatfailovertoabackupcomponentberapidbutthatitbereliable.
As shown in Figure 1, an active/active system comprises two or more geographically separated
processing nodes that cooperate in a
node1
common application. A transaction can be
routed to any node in the application appl data
network and be processed just as it would A base
beifitwereroutedtosomeothernode.
active
node3
This requires that each node has access to
replication data appl
a local copy of the application database. cloud base A
The databases are kept synchronized via
active
data replication. Whenever a processing
node makes a change to its copy of the
application database, that update is node3
immediately replicated to the other appl data
databasecopiesintheapplicationnetwork. A base
active
Should a node fail, all that is required to
recover from the fault is to move the users AnActive/ActiveSystem
or to reroute transactions to one or more Figure1
surviving nodes. Failover can be
accomplished in seconds or even in
subseconds. Furthermore, failover is risk-free and reliable because it is known that the surviving
nodesareoperational.Afterall,theyareactivelyprocessingtransactions.
But how can users or transactions be moved so quickly between processing nodes? That is the
subjectofthisarticle.
Transaction Redirection
We take the easiest case first. An active/active system can be structured so that users are not
associated with any particular node. Rather, they submit their transactions to an intelligent router
ortoaloadbalancerthataccordingtoconfiguredrulesroutesthetransactiontosomenodeinthe
application network (Figure 2). For instance, a transaction might be routed to the nearest
1WhatisActive/Active?,AvailabilityDigest;October,2006.
1
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

available node or to the least loaded node. Alternatively, transactions might simply be round-
robinedtoasetofnodes.
Needless to say, the routing mechanism must be redundant and geographically distributed so
thatnosingleeventcanblockagroupofusersfromtheapplicationnetwork.
Should a node fail, the routing facility will detect
that no response is being received from the h
transactions being sent to that node and will mark
the node out of service. Based on its routing rules,
theroutingfacilitywillbeginforwardingtransactions
that normallywouldhave gone to the failed nodeto
intelligent intelligent
somesurvivingnode
router router
There must be some mechanism to return the
failed node to service. For instance, the router
might periodically ping the failed node or, better
still, send the failed node an application-level query
node1 node2 node3
message. When the router receives a response, it
appl appl appl
can once again begin routing transactions to the
A A A
recoverednode.
active active active
Achieving continuous availability requires only that
a fault be rapidly detected. Rapid fault detection
data data data
can easily be attained by immediately rerouting a base base base
failed transaction to another processing node. If a
series of transactions to a node fail, the router can
declare the node down and monitor it for recovery.
replication
If succeeding transactions are successful, the node
network
has sufferedonlya transientfault(or an application
bug) and can be reinstated as an active node
participatingintheapplication. TransactionRouting
Figure2
Thus, fault recovery is no different from that of
normalapplicationprocessingfollowingatransactionfailure.Eitherthetransactionisresubmitted,
oritisaborted.Anodefaulthasnomoreimpactontheusersthananapplicationfault.
User Redirection
In many active/active systems, users are assigned to a primary node. Should that node fail, the
usersmustbeswitchedovertosomesurvivingnode.Thisisuserredirection.
Just as with transaction redirection, the failover of users from a failed node to a surviving node
must be fast and reliable. There are four ways that we will describe for switching users between
nodes:
 clientredirection
 networkredirection
 serverredirection
 DNSredirection
InPart 1of this article, we willdiscuss clientandnetwork redirection. Server and DNSredirection
willbecoveredinPart2.
2
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

ClientRedirection
Client redirection is perhaps the simplest method for switching users. However, it depends upon
the ability to build some intelligence into the client, whether it be a browser, an ATM, or some
otherdevice.
Client redirection depends upon the client’s ability to know at least two routes, each one to
independentprocessingnodes.TheseroutesmaybeknowntotheclientasIPaddresses,orthey
maybe URLs.Oneroute is totheclient’s primaryprocessing node,andthe other is to its backup
node.
The client normally sends traffic to its primary node (Figure 3). However, if it should find that its
primary node is nonresponsive, it shifts its traffic to its backup processing node. It should then
periodically query its primary node with a ping or an application-level message. When it
determinesthatitsprimarynodehasrecovered,itcanonceagainsenditstraffictothatnode.
repl. repl. repl.
IP1 IP2 IP1 IP2 IP1 IP2
X
I’mhappy Thisisn’tgood Happyagain
Client Redirection
Figure 3
This procedure is similar to the technique described above for transaction redirection. The client
can be implemented to retry a failed transaction a configured number of times, or it can simply
switchto its backupnode onthefirsttransaction failure.If the failure weretransientinnature,the
client will determine that upon the next query of its primary node and will return to using that
node. The failover time imposes nomore of an impacton the user than a transaction retryduring
normalprocessing.
If the active/active system is a multinode architecture with more than two processing nodes, a
client can be given a list of backup nodes in priority order. In this way, multiple node failures can
beaccommodatedprovidedthatthesurvivingnodescancarrythesystemload.
An alternative strategy is to have a client round-robin its transactions to each node, one node
after theother.Should itfailtoreceivearesponsefrom anode,theclientremoves thenodefrom
its round-robin list. It then begins to query the failed node periodically to detect the node’s return
toservice,atwhichtimethenodeisreturnedtotheround-robinlist.
It is a good practice to also allow the client to switch processing nodes upon an external
command. This provision can be useful to take nodes out of service for maintenance or to load-
balancetheapplicationnetwork.
3
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Client redirection can also be useful in conjunction with transaction redirection, described in the
previoussection,toallowaclienttoconnecttoabackuptransactionrouterifnecessary.
NetworkRedirection
With network redirection, the switching of users from one node to another is the responsibility of
thenetwork.Atypicalconfigurationforanactive/activenetwork isshowninFigure4.Itcomprises
two nodes, Node A and Node B. The nodes are geographically separated, and all components
arereplicatedwithabackupcomponentsothatthereisnosinglepointoffailure.
Thedatabases of thetwonodes arekeptinsynchronizationviadatareplicationover adual-WAN
network.ClientsareconnectedtoduallocalroutersviadualLANs,andtheroutersareconnected
toeach’slocalserverviadualLANsfeedingdualNetworkInterfaceCards(NICs).Theroutersare
also connected to routers at the remote node over a bridged WAN. Thus, there is a backup path
foranysinglefailureintheapplicationnetwork.
NodeA NodeB
dualreplication
network
NIC1a NIC1b NIC2a NIC2b
Router1a Router1b Router2a Router2b
A Two-Node Active/Active System
Figure4
During normal operation, clients at the Node A site connect to their server via Router 1b using
one rail of the client LAN. Router 1b passes traffic to NIC 1b of Node A via one rail of the server
LAN. Clients at the Node B site connect to their server in a similar fashion, using Router 2b to
connecttoNIC2b.
Let us now see what happens if Node A should fail, as shown in Figure 5. Router 1b finds that it
cannolongertalk toNIC1bonNodeA.Lookinginits routingtable,itfindsthatitsalternateroute
in this case is to Router 2a in Node B.2 Therefore, it passes all further traffic from its clients over
the bridged WAN to Router 2a, which passes the traffic to NIC 2a. All users have now been
switchedfromNodeAtoNodeB.
Any other component fault is recovered in essentially the same way via alternate routing. Should
a NIC or a server-side LAN rail fail, the router can get to the other NIC on the server via the
alternate server-side LAN rail. Should a client-side LAN rail fail or should a router fail, clients can
2Alternatively,Router1bcouldfirsttrytocommunicatewithNIC1aovertheotherserver-sideLANrailbeforedeciding
thattheserverisdownandthattheneedexiststoroutetraffictoNodeBviaRouter2a.
4
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

reach the other router via the alternate client-side rail. Thus, no single subnet fault will take down
anode.
Of course, in order to support a client-side, dual-rail LAN, some intelligence is required in the
clienttoallowittochooseaLANrailonwhichtocommunicate.Insomecases,itmaybedecided
not to use dual-rail LANS if the client does not have this capability or if the reliability of a single
LAN is deemed to be compatible with the availability requirements of the application. The same
considerationcanbeappliedtothedual-railserver-sideLAN.
NodeA NodeB
dualreplication
network
NIC1a NIC1b NIC2a NIC2b
Router1a Router1b Router2a Router2b
RouterRedirection
Figure5
Theclientcanuseavirtual IPaddressthatistranslatedbytheroutersothattheclientneedhave
noknowledgeofwhereitstrafficisultimatelybeingdirected.
ConnectionandSessionLoss
One problem with user redirection when switching to another node is that in the typical
configuration,anodeknowsnothingabouttheconnectionandsessioncontextofaclientthathas
just been switched to it. If no other provision is made, the client will get notification of the
connectionandsessionlossandwillhavetoreestablishthem.
If the client is a browser or a PC application of some sort, and if connection/session
reestablishment must be done manually by the user, then the user is certainly aware of the
outage, short though it may be. However, if the client has the intelligence to automatically detect
this condition and to reestablish the connection and the session, the user will be unaware of the
outage;andtruecontinuousavailabilityhasbeenachieved.
What’s Next?
In Part 1 of this article, we have described how rapid and reliable failover can be achieved by
rerouting transactions or by switching users to surviving nodes via client redirection or network
redirection.
In Part 2, we will discuss switching users via server redirection and DNS redirection.We will find
thatserverredirectioncanbecomplexandthatDNSredirectioncanexhibitlongfailovertimes.
5
©2009SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com