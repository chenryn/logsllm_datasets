Console Command Takes Down Active/Active System
December2006
A Successful Active/Active System
A European company had been running a two-node NonStop active/active system for several
years withoutanoutage.Infact,thesystem hadgonethroughmanyhardware,operatingsystem,
and application upgrades without ever having to take any planned downtime. This is what
active/activeisallabout.
Thecapacityof eachnode was sufficienttocarrytheentireapplication load.Therefore,upgrades
could be rolled across the two nodes one at a time without affecting any of the system’s users.
This was done by taking down one node, upgrading it, returning it to service, and repeating that
procedureforthesecondnode.
Zero Planned Downtime
Taking down a node for an upgrade was very straightforward. The upgrade started with Node A.
Its users would first be switched over to Node B. The applications on Node A would then be shut
downinanorderlymanner,andthenodewouldbestopped.
There was no big rush to upgrade the downed node. Since the system was configured to run in
an active/active environment, and since each node could handle the entire application load, the
upgrade could be accomplished in a very controlled and orderly manner. More importantly, there
was plenty of time to test the node thoroughly before it was reintroduced into the network, to
synchronizeitsdatabasewiththeoperationalsystem,andtoreturnitscomplementofuserstoit.
Following the return to service of Node A, Node B would be taken down and upgraded using an
identicalprocedure.
The switchover and recovery procedures were properly documented. These procedures were
used frequentlyenough so that the operational staff was satisfied that the upgrade plan was kept
current and that the people involved were well practiced. Node upgrades had become almost
secondnature.
Until One Day …
And therein lay the problem – complacency. Fingers could fly across the keyboard with little
connectiontothebrain.
The upgrade in question started normally. The operations staff moved the users off of Node A in
preparation for upgrading it. Once satisfied that all users were now being properly handled by
Node B, the system manager brought up the RMI console (the Remote Maintenance Interface
1
©2006SombersAssociates,Inc.,andW.H.Highleyman

usedtocontrolasystem)forNodeAonhisPC,andthecommandtostoptheNodeAprocessors
wasentered.
To the system manager’s his horror, the entire system suddenly shut down. As it turned out, he
had not brought up the RMI console for Node A. He had brought up the RMI console for Node B.
Consequently,hehadstoppedtheoperationalsystem.
NodeA NodeB NodeA NodeB
replication
apps apps apps
NormalOperation Step1:IsolateNodeA
RMI RMI
NodeA NodeB NodeA NodeB
apps apps
Step2:BringUpRMIConsole Step3: StopNodeA
Oops!!
Now the brain suddenly became engaged. As we well know, when things go wrong, people get
stupider. But the system manager managed to rise above this syndrome and had Node A
returned to service within a very short time. (Fortunately, a database resynchronization was not
required.) Afterwards Node B was brought back into service and the action restarted from the
beginningandthistimeeverythingwentwell.
2
©2006SombersAssociates,Inc.,andW.H.Highleyman

Lessons Learned
Subsequentanalysisofthis incidentfoundthattherewasnopasswordprotectionprovidedforthe
RMI/RCP consoles. Therefore, the use of the wrong console could easily go unnoticed.
Distinguishingpasswords wereimmediatelyaddedso thatatleastasecondthoughtprocess was
required before shutting down a node. And brains are now more fully engaged in what might
otherwiseappeartoberoteactions.
A recent survey by The Standish Group found that 26% of all system faults were caused by
operatorerror.1Thesefaultsrepresented7%ofalldowntime(obviously,whentheoperatorbrings
downasystem,heisquicktobringitbackupagainsinceheknowsexactlywhathappened).
ThisNeverAgainstoryexemplifiesTheStandishGroupfindings.Itemphasizestheneedforgood
documentation and checklists for common or critical tasks. Memorizing a checklist is not good
enough;theymustbereadandfollowedduringtheirpertinentprocedure.
Fortunately, the perpetrator of this action did not receive a Darwin award.2 Rather, he has gone
on to become a very respected figure in the active/active community; and the system has since
runforyearswithoutasingleoutage.Afterall,ifyounevermakeamistake,youneverlearn.
1TheStandishGroup,TheOtherSideofFailure,paperMEA-22-Upresentedatthe2006ITUGSummit;October,2006..
2TheDarwinAwardsareawardedbypopularvoteto“salutetheimprovementofthehumangenomebyhonoringthose
whoremovethemselvesfromit.”OurfavoriteDarwinawardwasgiventotheterroristwhosemailbombwasreturnedfor
insufficientpostage.Hewasblownawaywhenheopenedit.Seewww.darwinawards.com.
3
©2006SombersAssociates,Inc.,andW.H.Highleyman
