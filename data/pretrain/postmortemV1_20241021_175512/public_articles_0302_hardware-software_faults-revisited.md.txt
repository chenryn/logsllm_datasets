Failure State Diagrams - Hardware/Software Faults Revisited
February2008
The Three Rs – AReview
Inanearlier articleentitledCalculatingAvailability–TheThreeRs,publishedinDecember,2006,
wedefinedthreedifferenttypesof“r”s:
r = repair–Thefaultthatcausedthenodetofailmustberepaired.Thisusuallyentailsa
h
hardwarereplacement.
r’= recovery – Once the node is repaired, it must be recovered. This might require that
the software environment be reloaded, the applications started, and the databases
be opened, among other tasks. Upon the completion of node recovery, system
restorationcanbegin.
R= restore – Once one of the failed nodes is fully recovered, the system has the node
complement that it needs to be put back into service. In some cases, service can be
restored to the users at this time. However, this may not always be true. For
example, the failed node’s database will often have to be resynchronized with the
surviving databases. In some cases, a backlog of manually-completed transactions
mayhavetobeenteredbeforesystem operationcanbeconsideredtoberestoredto
itsnormalstate.
There is actually a fourth “r,” and that is the time to return a node or the system to service. We
representthisfourth“r”asfollows:
 mtr is the mean time to return a failed node to service. It is the nodal repair time plus the
recoverytime.Wewilldenotethisasr:
mtr r r r'
h
 MTR is themeantimetoreturnafailedsystem toservice.It is the timerequiredtoreturn
afailednodetoserviceplusthesystemrestoretime.Assumingparallelrepair:
MTRmtr/2R
In the article referenced above, we derived the failure probability of a system that must undergo
repair, recovery, and restore operations. For an n node singly-spared system undergoing parallel
repair withother failed nodes,the probabilityof system failure was shown to be [seeEquation(6)
inthatpaper]1
r/2Rn(n1) mtr/2R
F (1a)2  f(1a)2 (1)
r/2 2 mtr/2
1SeealsoFailureStateDiagrams–RecoveryFollowingRepair,AvailabilityDigest;December,2007.
1
©2008SombersAssociates,Inc.,andW.H.Highleyman

where
F= theprobabilityofsystemfailure.
a= theavailabilityofanode.
f= The number of ways that two nodes could fail and take the system down (if
therearennodes,fcanbeaslargeasn(n-1)/2).
Hardware/Software Faults – An Intuitive Approach
In that article, we assumed as indicated above that the mtr for a node involved both node repair
and node recovery. However, a node only requires repair if there has been a hardware failure.
Many system failures are caused by node failures induced by software bugs, operator errors, or
environmentalfaults.Thesesortsoffailuresrequireonlyarecovery.
This issue was addressed in our article entitled Calculating Availability – Hardware/Software
Faults,publishedinJanuary,2007.Inthatarticle,wedefined
h=probabilitythatanodefailurewascausedbyahardwarefault.
Onlyhofthenodefailuresrequiredrepair(r),butallnodefailuresrequiredrecovery(r’).Thus,
mtr=hr +r’=hr+(1-h)r’ (2)
h
andEquation(1)canberewrittenas
[hr(1h)r']/2R
F f(1a)2 (3)
[hr(1h)r']/2
Thisseemstobeaverysimpleandintuitivesolutiontothehardware/softwareproblem;butaswe
shallsee,thissolutionindicatestheoccasionalpitfallsofintuitivesolutions.
Hardware/Software Faults – AFormal Approach
As we have shown in our series on failure state diagrams,2 these diagrams can be used to
formally derive many of the relationships that we have intuitively derived. In most cases, our
intuitivederivationhelduptoformalanalysis.
Letusapplythesediagramstothehardware/softwareproblem.Thefirststepistocreateafailure
state diagram showing the change in system state leading to dual hardware faults, dual software
faults, a hardware fault followed by a software fault, and a software fault followed by a hardware
fault.Asitturnsout,thisfailurestatediagramissocomplexthatitprecludesmanualsolution.
However, we can take a simplified approach. Given that h is the probability of a node failure due
toahardwarefault,
 theprobabilityofadualhardwarefailureish2.
 the probability of a node failure due to a software fault is (1-h). Therefore, the probability
ofadualsoftwarefailureis(1-h)2.
2
CalculatingAvailability–FailureStateDiagrams,AvailabilityDigest;September,2007.
FailureStateDiagrams–RepairStrategies,AvailabilityDigest;October,2007.
FailureStateDiagrams–RecoveryFollowingRepair,AvailabilityDigest;December,2007.
2
©2008SombersAssociates,Inc.,andW.H.Highleyman

 theprobabilityofahardwarefaultfollowedbyasoftwarefaultish(1-h).
 theprobabilityofasoftwarefaultfollowedbyahardwarefaultis(1-h)h.
These probabilities add up to 1, as expected. Note that the probability of a hardware and a
softwarefaultinanyorderis2h(1-h).
We know the probability of a dual hardware fault and a dual software fault from our previous
analyses:
r/2R
F h2 f(1a)2 (dualhardwarefault)
hh r/2
(4)
r'/2R
F (1h)2 f(1a')2 (dualsoftwarefault)
ss r'/2
whereEquation(1)isusedand
F = theprobabilitythatthesystemwillfailduetoadualhardwarefault.
hh
F = theprobabilitythatthesystemwillfailduetoadualsoftwarefault.
ss
a= theavailabilityofanodeduetohardwarefaults.
a’= theavailabilityofanodeduetosoftwarefaults.
For later reference, note that availability, A, mean time between failure, MTBF, and mean time to
returntoservice,MTRarerelatedby
MTBF MTR MTR
(1A)1   ifMTBF>>MTR
MTBFMTR MTBFMTR MTBF
Thus,wecanwrite
r
(1a)
mtbf
(5)
r'
(1a')
mtbf
where
mtbf=thenodalmeantimebetweenfailures.
Now comes the fun part. What about hardware/software failures? To determine the probability of
a hardware fault followed by a software fault and the probability of a software fault followed by a
hardwarefault,weresorttofailurestatediagrams.Westartwiththestatediagramforahardware
faultfollowedbyasoftwarefault.
In this diagram, n is the number of nodes in the system; and the other terms are as defined
previously.Thestatesinthisdiagramare
S –allnodesareoperational.
0
S –onenodeisdownduetoahardwarefault.
h
S –onenodeisdownduetoasoftwarefault
s
S – two nodes are down, the first due to a hardware fault and the second due to a
r
softwarefault.Thesystemisdown.
3
©2008SombersAssociates,Inc.,andW.H.Highleyman

nh/mtbf S (n1)(1h)/mtbf
h
1 1
S 0 r r'R S r
1 S 1
r' s rR
HardwareFaultFollowedbySoftwareFault
Starting with State S , a node could fail either due to a hardware fault or due to a software fault.
0
In this example, we consider only initial hardware faults. Hardware faults occur at a rate of
nh/mtbf. That is, each node will fail at a rate of 1/mtbf. There are n nodes that can fail, and h of
these failures will be due to a hardware fault. Should a hardware fault occur, State S is entered;
h
andthesystemisstilloperational.
AtransitionfromStateS canoccurfortworeasons:
h
 The node is returned to service. This will occur at a rate of 1/r. The system returns to
StateS .
0
 A software fault occurs. This will occur at a rate of (n-1)(1-h)/mtbf. State S is entered for
r
systemrepairandrecovery,andthesystemisdown.
While in State S, one of the two nodes will be repaired; and the system will be recovered and
r
returnedtoservice.Therearetwowaysthatthisrepaircanbemade:
 The node with the software problem can be repaired and the system recovered, in
which case the system returns to State S (single hardware failure). This will require
h
ameantimeofr’+Randwilloccuratarateof1/(r’+R).
 The node with the hardware problem can be repaired and the system restored, in
which case the system enters State S (single software failure). This will require a
s
meantimeofr+Randwilloccuratarateof1/(r+R).
WheninStateS ,onenodehasasoftwarefailure.StateS isenteredafterarecoverytimer’.
s 0
The solution of this failure state diagram yields the following for the probability of system failure
duetoahardwarefaultfollowedbyasoftwarefault,F :3
hs
r'RrR
  
n(n1) r'  r 
F h(1h) (1a)(1a') (6)
hs 2 r R
 
 r 
where
rr'
r  (7)
2
3Ifyouwanthelpsolvingthisfailurestatediagram,contacteditorest.com.
4
©2008SombersAssociates,Inc.,andW.H.Highleyman

Following this procedure, the probability of a software fault followed by a hardware fault, F ,
sh
yieldsthesameresult.Thus,
r'Rr R
  
n(n1) r'  r 
F F  2h(1h) (1a)(1a') (8)
hs sh 2 r R
 
 r 
This can be interpreted as the probability of a hardware failure and a software failure in any
order that will occur with a probability of 2h(1-h), each failure requiring a single repair, as
describedabove.However,theequationfordualfaults hasonlyoneterm oftheform (r+R)/2;and
this relationship has two. Therefore, one term has to be divided out; and this is done by dividing
byasimilartermrepresentinganaveragerepairtime.
Thisequationisintuitivelysatisfying.Italsomeetssomelimitingconsiderations.IfR=0,then
n(n1)
F F 2h(1h) (1a)(1a')
hs sh
2
asonewouldexpect.Also,ifr=r’,thisreducesto
n(n1)rR
F F 2h((1h) (1a)(1a')
hs sh
2 r
asonewouldexpect.
Thus, the probability of system failure due to any pair of hardware or software faults in any order
is
F F F F F
hh hs sh ss
2 r/2R n(n1) 2
h (1a) (hardware) (9)
r/2 2
r'RrR
  
n(n1) r'  r 
+2h(1h) (1a)(1a') (hardware/software)
2 r R
r
2 r'/2R n(n1) 2
+(1h) (1a') (software)
r'/2 2
Themeantimetorestorethesystem,MTR,is(assumingparallelrepair)
MTR [hr(1h)r'R]/2 (10)
Themeantimebetweenfailuresforthesystemis
MTBF MTR/F (11)
5
©2008SombersAssociates,Inc.,andW.H.Highleyman

Comparison of the Intuitive Approach to the Formal Approach
The formal result given by Equation (9) is markedly different from the intuitive approach given by
Equation(3).Isthereanyrelationshipbetweenthesetwoapproaches?
It turns out that these two equations are identical for a restore time, R, of zero. This can be seen
by using Equations (2) and (5) in Equations (3) and (9) and setting R to zero.We also substitute
themoregeneralvaluefforthenumberoffailuremodes,n(n-1)/2.
UsingEquations(2)and(5),Equation(3)becomes
hr(1h)r'2 f
Ff  [h2r2 2h(1h)rr'(1h)2r'2] (3’)
  mtbf   mtbf2
UsingEquations(5),Equation(9)becomes
 r2 rr' r'2  f
Ffh2 2h(1h) (1h)2   [h2r2 2h(1h)rr'(1h)2r'2] (9’)
mtbf2 mtbf2 mtbf2 mtbf2
 
Therefore, to the extent that the system restore time, R, is small compared to the node return-to-
service times r and r’, the intuitive approach holds; and the simpler Equation (3) can be used. If
systemrestoretimeislarge,Equation(9)shouldbeusedtocalculatesystemavailability.
But just how inaccurate is Equation (3)? Let’s look at some examples.We take some reasonable
valuesasfollows:
r =hardwarerepairtime=24hours
h
r’=noderecoverytime=nodereturn-to-servicetimeforasoftwarefault=2hours
r=nodereturn-to-servicetimeforahardwarefault=r +r’=26hours
h
h=probabilityofahardwarefailure=0.1
n=numberofnodes=8
mtbf=nodalmeantimetofailure=4,000hours
TheresultantintuitiveerrorsforvariousvaluesofRaregiveninthefollowingtable:
R(hours) IntuitiveFx105 FormalFx105 Error(%)
0 3.39 3.39 0
0.25 3.77 3.74 0.8
0.5 4.16 4.09 1.7
1 4.93 4.79 2.9
2 6.47 6.15 5.1
4 9.46 8.79 7.5
8 15.7 13.8 13.6
r’=2hours,r =24hours,r=26hours
h
AccuracyofIntuitiveHardware/SoftwareFailureRelationship[Equation(3)]
Note that the error percent is independent of the number of nodes in the system and the nodal
mtbf[seeEquations(3’)and(9’)].
6
©2008SombersAssociates,Inc.,andW.H.Highleyman

Summary
Over a wide range of reasonable values, the intuitive approach is not only conservative, but it is
within 10% of the correct value. Unless R is very much larger than either r or r’, the intuitive
approachrepresentedbyEquation(3)isareasonableapproachtotake.
However, if R is large compared to either r or r’,the moreaccurateexpression of Equation(9) for
theprobabilityoffailureinthepresenceofhardwareandsoftwarefaultsshouldbeused.
7
©2008SombersAssociates,Inc.,andW.H.Highleyman
