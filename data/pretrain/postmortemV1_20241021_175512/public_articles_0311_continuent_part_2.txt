communication protocol that is used for communicating between
the controllers ensures that the controllers agree upon the controller
execution order of two update queries received at the same time
JDBCinterface
byeachcontroller.3
request
All queries (read and update) are sent to the Load Balancer scheduler
for execution. However, they may first be modified for
request recovery
performance purposes based on the contents of the Request cache log
Cache. load
balancer
RequestCache
JDBC JDBC
Attributes from the results of queries may optionally be driver driver
cached in the controller. They can be used to modify queries to
improve performance. The Request Cache provides three types
ofcaching: MySQL
databaseservers
 The Metadata Cache caches metadata such as column uni/clusterController
namesanddatatypesthatareusedtobuildresultsets.
 The Parsing Cache stores parsing results such as table names extracted for locking and
cachingpurposes.Thiscacheisespeciallyusefulwithpreparedstatements.
 The Query Result Cache remembers the result sets of read queries. If a query is
executedseveraltimes,itonlyneedstobesenttoadatabaseserveronce.
LoadBalancer
The Load Balancer is the execution engine of a uni/cluster. It is responsible for appropriate
routingofqueriesforexecutionandforthereturningofresultsbacktotheclients.
Load-BalancedReadQueries
Areadqueryis executedbythecontroller thathas receivedthequeryandis senttoonlyone
database server. If the controller has multiple database servers connected to it, it chooses the
database server to which the query is to be sent based on one of three algorithms selected at
configurationtime:
 Least Server Queue – The database server with the shortest queue of outstanding query
requestsischosen.
3 For a discussion of distributed event ordering, see Time Synchronization in Distributed Systems – Part 3,
AvailabilityDigest;February,2008.
5
©2008SombersAssociates,Inc.,andW.H.Highleyman

 Round-Robin–Thequeryissenttothenextdatabaseserverinsequence.
 Weighted Round-Robin – Each database server is assigned a weight at configuration
time. The weight determines the proportion of queries that the database server will
execute.Queriesareotherwisedistributedinaround-robinfashion.
When the response to a query is received, it is returned to the client. Should a database
server be unresponsive to a query, that database server is taken out of service; and the query is
resubmitted to another database server. If all of the database servers on a controller fail (for
instance, if a controller only has one database server), the controller is taken out of service, its
clientsreconnecttotheothercontroller,andthequeryisresubmitted.
SynchronousReplicationofUpdateQueries
Anupdatequeryissenttoallofthecontroller’s databaseserversforexecution.Itis alsosent
to the other controller for execution on all of its database servers. The queryidentifiers described
above ensure that all transactions are executed in the same order on each controller.
Consequently, an update query is applied synchronously to all database copies in the cluster so
thatalldatabasecopiesarekeptinsynchronism.
When all database servers have executed the update query successfully, the response is
returnedtotheclient.
If a database server fails to execute an update query, it is taken out of service. The only
exception to this is if all database servers fail to execute the query. In this case, the query is
rejected;andalldatabaseserversremaininservice.
RecoveryLog
All update queries are written into the controller’s recovery log. A pointer to the last database
snapshot is also written to the recovery log. The recovery log is used to return a failed database
servertoservice.Serverrecoveryisdescribedinmoredetaillater.
MySQLDatabaseServers
Any standard MySQL database server may be used in a uni/cluster. No modifications are
required.Eachdatabaseserverisconnectedtoonlyonecontroller.
There must be enough database servers connected to each controller to ensure that
application queryrates can be sustained should a controller fail and remove its database servers
fromthevirtualcluster.
Network
The cluster network includes the connections between clients and controllers, between
controllers and database servers, and between the controller pair. The controller-controller link is
usedonlytoexchangeupdatequeriesandforthecommit/rollbackcommandsforthosequeries.
All communication uses TCP/IP. Excerpt for client connections,WANs are not supported for
performance reasons. The communication latency over these channels should be less than a
millisecond or two. Therefore, the uni/cluster controllers and the database servers must be
collocatedandmustcommunicateoverLANs.
Failure Recovery
Alluni/clustercomponentsaremonitoredandareautomaticallyrecoveredshouldtheyfail.
6
©2008SombersAssociates,Inc.,andW.H.Highleyman

Client-ControllerConnection
The client driver continually monitors its connection to its controller via pings. Should the
connection or the controller fail, the driver transparently reconnects to the other controller in the
uni/cluster. The client is unaffected by this failover. Connection state and transaction state are
preservedbytheclientdriver,andpendingrequestsareresubmittedtothenewcontroller.
Controller
Acontroller failureis handledthesamewayas aclientconnectionfailure.Clients switchover
tothealternatecontroller,andpendingrequestsareretriedbytheclientdriver.
In this case, the database servers connected to the controller are also down and must be
recovered following the controller recovery, as described next. However, in this case, the
controller to whichtheyare connected does nothave anup-to-date RecoveryLog.Therefore,the
Recovery Log of the surviving controller is used to recover the database servers on the failed
controller.
DatabaseServer
Adatabaseserver maybe takenoutof serviceintentionally, for instance,to do a snapshot or
forothermaintenancepurposes.Itmayalsobetakenoutofservicebyafailure.
If it is removed from service intentionally, a timestampindicating this action is written into the
controller’s RecoveryLog. Whentheserver is readytobereturned toservice,its databaseis first
synchronized with the uni/cluster virtual database by replaying the update queries that have
accumulatedintheRecoveryLogsincetheout-of-servicetimestamp.
Adatabaseserverisdeemedtohavefailedifitisunresponsivetoqueriesorifitcannotapply
an update query that was successfully applied by at least one other database server. If a
databaseserver fails, beforeitcanbe restored toservice,the lastsnapshotmustbeloadedtoits
database. All update queries that occurred after the snapshot are replayed to bring its database
intosynchronism.Itcanthenbereturnedtoservice.
Network
Client-controllernetworkfailureshavebeendiscussedabove.
Should a controller-database server connection fail, the database is deemed to have failed
andisrevived,aspreviouslydescribed.
Should the controller-controller connection fail, split-brain operation must be avoided. This
occurs if the two controllers continue to execute update queries without being able to inform the
other. This condition is detected by the group communication protocol used between the
controllers. In this case, one of the controllers is taken down. The controller to be taken down is
specifiedatconfigurationtime.
Snapshots
A point-in-time snapshot of the database is required to revive a failed database server or to
add a new server. Upon recovery or installation, the server’s database is first loaded with the
snapshot;andthenallsubsequentupdatequeriesarereplayedfromaRecoveryLog.
To provide a consistent snapshot of the dynamicallychanging virtual database without taking
down the cluster, one database server in the cluster must be taken out of service. Its database
7
©2008SombersAssociates,Inc.,andW.H.Highleyman

contents are copied to a snapshot file, and a pointer to that file is placed in the Recovery Logs of
bothcontrollers.Thedatabaseserver isthenreturnedtoservicebyrevivingitsdatabasefrom the
RecoveryLog.4
Adding Capacity
Adding capacity to the uni/cluster is simply a matter of providing an additional database
server and connecting it to one of the controllers. Its database is then synchronized with the
cluster database by loading the last snapshot and by replaying all subsequent update queries. It
can then be put into service. It will participate in further read queries via the uni/cluster’s load
balancingmechanism.
Management
The Continuent uni/cluster provides utilities for configuring the uni/cluster, monitoring its
operation,andissuingerroralerts.Theseutilitiesinclude:
 clusteradmintodebugandadministerthecluster.
 clustersqltoissueregularSQLstatementsagainstthecluster.
In addition, the uni/cluster provides the facilities for creating backup snapshots of the
database, for removing database servers or a controller for maintenance, and for recovering
downed or failed database servers and controllers. Clients can be added to the cluster without
impact.
SNMPisnotyetsupportedbyuni/cluster,thoughitmaybeinthefuture.
Master/Slave
Continuent also supports a Master/Slave configuration in which changes made to the master
database are replicated asynchronously to one or more slave databases using log-based
replication.Thecontentoftheslavedatabasesareslightlybehindthemasterdatabaseduetothe
replication latency of the replication mechanism. Should a master fail, one of the slaves is
promotedtobethenewmaster.
The Master/Slave configuration currently supports either MySQL or Oracle databases in
eitherrole.
Both uni/cluster and Master/Slave provide scale-out functionality that allows the cluster to
scalegracefullyasapplicationtransactionratesgrow.Thevariouscomponentsforuni/clusterand
Master/SlaveareorganizedintoaScale-OutStack calledTungsten.Tungstenenhancesreuseof
thevariousContinuentcomponentsinscalableclusters.
uni/cluster’s Open-Source Roots
uni/cluster started as the open-source project C-JDBC under the Object Web umbrella. As
the core developers of the project joined Continuent, the project transformed into Sequoia, which
is the currently-maintained open-source version. Sequoia is the reference middleware
4Notethatauni/clusterwithonlyonedatabaseserverpercontrollerwillhavetwosinglepointsoffailureduringthe
snapshotinterval–theremainingcontrollerandtheremainingdatabaseserver.Thissituationcanbeavoidedbyhavinga
minimumofthreedatabaseservers,twoononecontrollerandoneontheother.Theredundantdatabaseserveronthe
one controller can be taken offline for the snapshot, still leaving a redundant system with two controllers, each with a
databaseserver.
8
©2008SombersAssociates,Inc.,andW.H.Highleyman

implementation of the GORDA specification. GORDA is a research project supported by the
EuropeanCommunityandaimsatdatabase-replicationstandardization.
Continuent uni/cluster for MySQL and Continuent uni/cluster for PostgreSQL are the
commercializedversionsofSequoia.TheyaresupportedfullybyContinuent.
There is no need to license MySQL or PostgreSQL for use in the uni/cluster. However, for
critical applications, it is recommended that commercially supported versions of MySQL and
PostgreSQLbeused.
Continuent
Continuentis aprivately-fundedcompanywithastrongNordic heritage.Its corporateofficeis
inSanJose,California.IthassalesofficesinEspoo,Finland,andinHongKong.
Continuentproductsareusedbysuchcompaniesas Capgemini,Telstra,Sanoma,Thomson,
La-Z-Boy,Alcatel-Lucent,CNETNetworks,andNOAA.
9
©2008SombersAssociates,Inc.,andW.H.Highleyman

