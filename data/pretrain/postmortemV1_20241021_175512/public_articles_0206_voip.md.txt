VoIP PBX Succumbs to Overconfiguration
June2007
A software product development firm specializing in high-availability solutions received a real-life
lesson in the very principles which it teaches. A fundamental precept of high-availability systems
is that the bigger they are, the easier they break. The firm’s new Voice over Internet (VoIP) PBX
wasoverconfiguredbythePBXvendor.Theresult–anearlyfailurethatdidn’tneedtohappen.1
The VoIP PBX System
ThefirmchosetheopensourceAsteriskIPPBXsoftwaretoprovideitscorporatephoneservices.
Asterisk supports Voice over IP (VoIP), in which telephone conversations are carried over the
Internet. Asterisk runs on a variety of operating systems, including Linux, Mac OS, OpenBSD,
FreeBSD, and Sun Solaris. It can interoperate with most standards-based telephony equipment
usingrelativelyinexpensivehardwaresuchasindustrystandardblades.
Asterisk is supportedbytheAsterisk Community,a worldwide group of volunteer developers.Itis
releasedas opensource under theGNU General Public License(GPL) and is available as afree
download.
Thefirm usedatelecommunicationsvendortodesignandimplementitsPBX.ADellserverblade
was chosen to be the phone server which runs Asterisk. The server is front-ended with a
ShoreWallfirewall.
TwoT1linesconnectthePBXserverwiththeoutsideworld:
 A T1 line provided by Siemens provides IP access to the PBX over the Internet using
VoIP.RemotecorporateVoIPofficephonesusethisconnectiontogetintothesystem.
 A T1 line from Verizon connects the PBX to the local telephone system. This connection
providestwenty-threevoicechannelstotheoutsideworld.
Local office VoIP phones connect to the server via Power over Ethernet (PoE) switches, which
supply power to these phones. In this way, the phones are powered by a single local power
supply.
The system is currently supporting 40 office phones and ten remote phones. All corporate VoIP
telephones,bothlocalandremote,usethesamecorporatenetwork.
All telephone traffic is routed through the Asterisk server. Incoming calls may come from local
office VoIP phones via the PoE switches, from remote corporate VoIP phones via the Internet
1ThisNeverAgainstorywascontributedbyTristanHoffmann.
1
©2007SombersAssociates,Inc.,andW.H.Highleyman

connection provided by the Siemens T1 link, or from the telephone network via the Verizon PRI
T1link.
Each incoming call is routed bythe server to the appropriate outgoing channel. Calls to the office
phones are routed through the PoE switches. Calls to remote corporate phones are routed over
the Siemens T1 Internet channel. Calls to external telephones are routed to Verizon via the
VerizonPRIT1channel.
remote
phones
localnetwork
phonedrops
Verizon
T1 connector
block
PoEswitches
20voice
channels
DellSwitch
-admin
-voicemailnotification
VoIP
Data
Internet
Dellserver Siemens
AsteriskPBX T1
The Asterisk Phone Server
The Asterisk PBX software runs on a Dell industry standard server in a blade configuration. The
Dell server is configured with two 3-gigahertz dual-core Xeon 64-bit processors, one gigabyte of
RAMperprocessor,amirroredpairof73gigabytediskdrives,andaredundantpowersupply.
Since the server comprises two dual-core processors, it has available for processing a total of
four CPUs. The various Asterisk processes are distributed among these four processors for load
sharing.
The server runs the Linux operating system. It has no other third-party software except for
QueueMetrics,aprogramtotrackinformationregardingcallqueues.
AsteriskcanbeconfiguredthroughaWebInterface.
With multiple CPUs, mirrored disks, and redundant power supplies, the system is configured to
behighlyavailable.Right?Wrong!
2
©2007SombersAssociates,Inc.,andW.H.Highleyman

The Crash
Just months after the initial installation of the PBX, the phones went dead. Nothing worked.
Incomingcalls wereblocked.No outgoingcalls could bemade.The firm’s phones couldnoteven
calleachotherovertheinternalIPnetwork.
Aquick investigationshowedthattheLCDdisplayonthefrontoftheserverwasscrollinganerror
message. Researching the error message, the firm’s technical staff determined that one of the
server CPUs was having an issue. A diagnostic monitor was connected to the server to get more
detailedinformation.ThispointedtoafailureofCPU4.
The staff first tried powering off the server and rebooting it, but the processor failure persisted.
They then called the vendor technical support line and were authorized to remove the second
dual-core processor from the server’s motherboard (the one with the bad cpu in it). This time,
after the system was rebooted, the server performed properly and continued to do so until after
theweekendwhenareplacementprocessorwasreceivedandinstalled.
Post-Crash Analysis
Upon analyzing the crash, it became clear that the Asterisk PBX software and system BIOS
made full use of all processors in the server. Its various processes were distributed among these
processorstoachieveloadsharingandmaximumcapacity.Unfortunately,Asteriskwasincapable
of redistributing its processing load to the set of surviving processors in the event of a processor
failure. Therefore, the processes assigned to the failed processor could not run and caused the
crashoftheserver.
Interestingly,thefirmfoundthatthePBXranfineonjustonedual-coreprocessor–provingthata
“split system” configuration would be ideal if only the software and hardware supported that type
of configuration. Theserver had been greatlyoverconfigured for the load which it was required to
handle. Byoverconfiguring theserver withtwodual-coreprocessors,both of which were usedfor
system operation when only one was needed, the vendor had not-so-cleverly increased the
probabilityof system failure byafactor of two(becauseit doubledthenumber offailuremodes in
thesystem).Thesystemwasonlyhalfasreliableasitcouldhavebeen.
An obvious correction is to run with only one dual-core processor in the server. The server
capacity is more than sufficient, and the server reliability will be doubled. Unfortunately, this
violatesthetermsofthewarranty;andthefirm isprecludedfrom doingthis.Thewarranteduseof
thisconfigurationiscurrentlybeingnegotiated.
Lessons Learned
Thereareimportantlessonstobelearnedfromthisexperience.
1. Don’t overconfigure your system with optional components that are in critical roles for
operation but which do not add any meaningful function. In this case, two dual-core
processors were used when one would have been just fine. Since the system made use
of all processors available and was unable to configure around a failed processor, there
were now two processor failure modes. The system would fail if either of the dual-core
processors failed, thus doubling the system failure rate over that which would have been
achievedifonlyasingledual-coreprocessorhadbeenused.
2. The firm was fortunate in that it is a software development firm and had on-site the skills
toperformfirst-linemaintenance.Asaresult,thesystemwasdownforjustanhouranda
half. If these skills were not available, the firm would have had to wait until a service
3
©2007SombersAssociates,Inc.,andW.H.Highleyman

technician could be dispatched by the vendor. This would have taken an estimated eight
hoursormorebeforethePBXwasonceagainfunctional.
Systemavailabilityistheproportionoftimethatthesystemisup:
uptime MTBFMTR MTR
Availability   1
totaltime MTBF MTBF
where MTBF is the mean time between failures and MTR is the mean time to repair, or the
average downtime of the system following a failure. The term MTR/MTBF is the probability of
systemfailure;itistheproportionoftimethatthesystemisdown.
In this case, the system MTBF was half of what it could have been because of the use of
unnecessary components in critical roles. However, the system MTR was greatly reduced by the
on-sitepresenceofskilledpersonnel.
Thebestuseoftheseconddual-coreprocessor would betoletitsitontheshelfas asparetobe
immediately available should the operational processor fail. This would not only reduce the
probability of system failure, but it would also significantly reduce the time required to correct the
failuresincetherewouldbenodelaywaitingforareplacementprocessortobedelivered.
4
©2007SombersAssociates,Inc.,andW.H.Highleyman
