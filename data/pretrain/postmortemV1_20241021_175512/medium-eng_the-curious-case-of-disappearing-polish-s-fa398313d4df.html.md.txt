# The curious case of the disappearing Polish S 

## One keyboard bug three decades in the making 

A few weeks ago, someone reported this to us at Medium:

> "I just started an article in Polish. I can type in every letter,
> except Ś. When I press the key for Ś, the letter just doesn't appear.
> It only happens on Medium."

This was odd. We don't really special-case any language in any way, and
even if we did... out of 32 Polish characters, why would [this random
one](http://en.wikipedia.org/wiki/%C5%9A) be the only one causing
problems?

Turns out, it wasn't so random. This is a story of how four incidental
ingredients spanning decades (if not centuries) came together to cause
the most curious of bugs, and how we fixed it.

# Ingredient 1 of 4: Polish language 

Polish is the second most-used Slavic language, right after Russian, and
before Ukrainian. Contrary to those two, however, and similar to Western
European languages such as German or French, Polish uses the
English/Latin alphabet with a few customizations.

This is the base English alphabet, largely the same as a classic
Latin/Roman alphabet:


Original Polish words never contain Q, V or X, although we keep them for
Latin and other borrowed words:


In exchange for those three, however, Polish adds nine additional
diacritics using Latin characters as their base, all in relatively
common use:


Starting in the early 20th century, typewriters needed to accommodate
the extra 9 letters. If you compare an American typewriter with a Polish
one:



...and look at the right side of the keyboard, you can see two of the
diacritics --- Ł and Ż --- promoted to separate keys, and the rest
sharing keys with other symbols. (Typists were encouraged to assemble
uppercase versions of seven remaining letters by typing a Latin
character, backspacing, and then overwriting an accent to "simulate" the
proper letter. This was not uncommon during typewriter times.)

To find room for the extra letters, typewriters needed to dispense with
some punctuation, most notably semicolons (comma + backspace + colon),
and parentheses (replaced in common use by slashes).

# Ingredient 2 of 4: Communism 

For someone interested in the early personal computing in the 1980s,
Communism in Poland meant a few things:

-   [not a lot of disposable income,]
-   [forbidden commercial importing of computers from the West
    (individual importing was still possible, assuming you had enough
    foreign currency and some means of acquiring it).]

I grew up in Poland. My first computer --- the glorious Atari
800XL---was an original 1979 technology, repackaged in 1983. We got it
in 1986. Used.

This wasn't uncommon. Technology was delayed on that side of the Iron
Curtain; most computers were imported from the West. Prohibited
commercial importing meant that for the longest time there was no
commercial entity that could prepare computers for use in Poland.
Foreign computers arrived with original instructions, untranslated
software, and American keyboards like this one:


While France, Germany, and other countries got their early PCs with
customized keyboards whose layouts mirrored closely the typewriters that
came before...



Early IBM PC keyboards with French AZERTY and German QWERTZ layouts

...in Poland, we had to find another way of inputting the extra 9
diacritics unique to our language.

Our extra characters might look very much like Latin equivalents, and
amount to only about 8% of letter distribution (you will [hate them
playing
Scrabble](http://en.wikipedia.org/wiki/Scrabble_letter_distributions#Polish)), but they are
important. You can't just swap them around. Consider these two similar
words:


Perfectly interchangeable, right? Well, not quite:


There are more examples like that. As it happens, in those early PC
days, I was happy that my full name, Marcin Kazimierz Wichary, did not
come with any diacritics... and used to make fun of some of my less
"lucky" friends. I was a mean nerd.

Surely, there's something that can be done, though? Back to the
keyboard:


We cannot modify it in any way since that'd require messing with
hardware, but we can still try to find a clever solution. There are two
modifier keys --- Ctrl (where today's Caps Lock is), and Alt. Ctrl was
already used as a common shortcut key, even before Ctrl+C and Ctrl+V
became typical for copy and paste. But Alt was relatively uncommon. And
thus, a *de facto* standard was born, assigning each of our diacritics
to its Latin counterpart:


People started calling the older layout *typist's keyboard layout,* and
the new invention *programmer's layout,* either because early PC users
were mostly programmers, or because it preserved all the punctuation
symbols that were often used in programming.

The new layout was an ergonomic nightmare --- look at how many of those
letters are very close to the Left Alt and need to be pressed using the
same hand --- but it was easy to understand and did not require any
expensive hardware modifications or even cheap ones (for example
stickers). It stuck. A few other nearby countries (Romania,
then-Czechoslovakia) came up with similar schemes.

The setup was so successful that even when, a decade later, proper
typist's keyboards started appearing, practically no one would switch to
them, mirroring the ascendancy of the inferior QWERTY some 80 years
before.



Contemporary typist's layout vs. contemporary programmer's layout (or,
American keyboard)


# Ingredient 3 of 4: Old habits dying hard 

Autosaving, common today, needed to wait for the right moment.
Especially in the 1980s, and even 1990s, saving your document was
lengthy (powering up that floppy drive and writing to the disk took some
time), would slowly wear out whatever medium you were using, and
sometimes occupy CPU so much it couldn't be used for anything else.

Saving by hand was then what backing up is today: a habit you needed to
learn for your own good. The unlucky ones figured it out the hard way,
writing for hours on a computer that had a tendency to crash cruelly and
often, only to realize *they never saved what you were typing.*

I was one of them. And we all learned to press Command+S or Ctrl+S
whenever we paused for breath. Sometimes it was after every chapter.
Often, every paragraph. Later on, even a sentence. Ctrl+S became a
keystroke buried in people's muscle memory, a habit that was an
intrinsic part of writing.



Then that habit turned on them. If you write in any Web-based editor,
the default thing that happens after pressing the save key combination,
is a browser window --- giving you a completely useless option to save
the current website's HTML code, often announcing itself *via* a slow,
annoying animation.

The same was true for Medium, a long time ago:


However, at some point we added a little bit of code to our editor to
make the save dialog go away:


It translates to: if S happens to be pressed with Command (*metaKey,*
used by Macintoshes) or Ctrl (used by Windows or Linux PCs), first:
prompt our editor to save what it's doing (even though we'd autosave it
soon anyway), and second: prevent anything else that would normally
happen... in this case the annoying browser save dialog.

Which is the right thing to do. (You can still get to the save dialog
from the menu, if you want.)


Now, this should ring all sorts of alarms in your head if you remember
the bug report mentioned at the beginning:

> "I just started an article in Polish. I can type in every letter,
> except Ś. When I press the key for Ś, the letter just doesn't appear.
> It only happens on Medium."

Something doesn't compute, though. Medium is blocking Command+S and
Ctrl+S, but you get to Ś by keying in... Alt+S.

For these two worlds to collide, we need just one more ingredient.


# Ingredient 4 of 4: Microsoft Windows 

Both Windows 3.x and 95 had terrific keyboard support. The menu items
and dialogs had controls that could be accessed easily by mouse... but
also much quicker by pressing Alt and the underlined letter:


Most of Microsoft Windows UI could be turned into a sequence of keyboard
shortcuts, which was incredibly powerful (and something Mac could still
learn from). In Poland, however, Alt was already commonly used to enter
the extra diacritics. That presented a conflict.

Fortunately, by then, keyboards evolved to have extra modifier keys,
including a secondary Alt key on the other side of the spacebar.


So, what if we kept the Left Alt key for Windows shortcuts, but used the
Right Alt key for Polish diacritics? That would solve all the problems
(although the short-lived victory of better ergonomics through two
modifier keys would be nullified again... this time one-handed Right
Alt+O, Right Alt+L, and Right Alt+N being RSI fodder).


For reasons having to do with the older keyboards without the Right Alt
(and more modern notebook keyboards that might skip that key for space
reasons), Right Alt in Windows was internally mapped as a rarely-used
combination of [Ctrl and Alt pressed
together](http://blogs.msdn.com/b/oldnewthing/archive/2004/03/29/101121.aspx).

Which meant that, from the system perspective, all of the above
shortcuts looked like this:


And there's something oddly uncomfortable with this picture. That
Ctrl+Alt+S is starting to look very familiar now, doesn't it? In fact,
*incredibly* familiar to Ctrl+S that we once started blocking to improve
saving.


# The fix 

Putting all of this together, the reason for the bug becomes obvious:

1.  [Through historical circumstance, people in Poland use Right Alt+S
    to type in Ś.]
2.  [Because of an obscure technical decision, Right Alt+S is mapped
    internally to Ctrl+Alt+S.]
3.  [Through habit, people might occasionally want to press Ctrl+S to
    save a document.]
4.  [Medium was overriding whatever default action happened when you
    pressed Ctrl+S, thinking it's just a browser save dialog it was
    canceling... and never realizing it could be something else: *a
    letter Ś.*]

And so, typing Ś became impossible.


Once I figured it out, the patch was trivial. Instead of blindly
blocking Ctrl+S, we could block Ctrl+S *only if Alt key was not
pressed.*


We fixed this last week, and it wasn't a lot of work. After seeing the
Medium bug reports filed in, and having remembered once asking to change
what happens when you press Ctrl+S, I figured it out without much
trouble.

But I happen to be Polish, and I went through all of the above ---
learning to touch type on my mom's typewriter, owning early PCs with
American keyboards, rewiring my muscle memory for the Left Alt first,
and the Right Alt second... and in the same muscle memory, putting
Ctrl+S early on, and then replacing it with Command+S as I switched to
Macs.

Much has changed in Poland since the 1980s. In 1989, Communism fell.
Computers are now imported legally by individuals and companies alike.
Today's Windows and Mac machines in Poland are bought new, fully support
Polish, and the operating systems themselves are properly localized. If
you open up system preferences, though, you will still see the
programmer's layout there, and it's still the most commonly used of the
two.



The few lines of code above might be, to me, one of the most curious in
Medium's codebase, the result of an arbitrary set of circumstances...
today copiously commented so that people coming after me understand the
one opaque conditional statement.

As we see Medium being used in more and more countries, we will be
dealing with those kind of thick, arbitrary internationalization and
localization issues over and over again. With a big exception, though:
no one will be there to give us a backstory, to unfold the opaque, to
explain any of this to us the way I could explain the above.

This bug is a harbinger of very scary, and very exciting times.


*If you've read so far, maybe you want to help us out here at Medium?
We're looking for ambassadors in different countries --- people knowing
their language, caring about typography, wanting stories on Medium to
look and behave most properly for where they are.*

*Let us know at*
[*languages@medium.com*](mailto:languages@medium.com)*. Thank you!*

*Also, thanks to Michal Cierniak, Sommer Panage, Jamie Talbot, and Dan
Pupius for reviewing this article.*

