Redundant Load Balancing for High Availability
July2013
A large data center can comprise hundreds or thousands of servers. These servers must not only be
interconnected, but they also must connect to local users and to the Internet. Today’s internal networks
use Internet technology and are called Intranets. A company’s Intranet must not represent a single point
offailureifitssystemsaretoprovidehighavailability.Therearemanystoriesofcriticalsystemsthathave
beentakendownbyIntranetfailures.1
The Need for High Availability in the Load Balancer
A data center is no good to anyone if it cannot be accessed by its users. To provide high capacity,
performance, and availability, the customer-facing systems are often pools of servers. A request can be
routedtoanyserver inthe poolsothattheloadcanbesharedbymultipleservers.Furthermore,shoulda
serverfail,itissimplyremovedfromthepoolandthesurvivingserverscontinuetoprocessrequests.
Loadbalancersareusedtodistributeincomingtraffictotheservers inthepool.However,aloadbalancer
can represent a single point of failure in this critical portion of a company’s Intranet. If the load balancer
fails,thecompany’spublicservicesaredown.
Load balancers from Loadbalancer.org (www.loadbalancer.org) solve this
problem. Their load balancers are configured in active/passive pairs with
instant failover so that customer-facing services are not interrupted should the
active load balancer fail. The passive load balancer immediately takes over
andcontinuesservicetotheInternet.
The Need for Stateless Servers
Load balancing works bestif the servers in the load-balanced pool are stateless. That is, there is no data
that the servers must maintain between requests. For instance, a server pool that serves static web
pages satisfies this requirement. In this case, a request may be routed to any server in the pool and be
processedproperly.
If servers must remember state, then failover to a backup load balancer is not transparent to the user.
The user will in all likelihood lose his session and must re-logon. He might even lose his entire shopping
cartandhavetostartover.
For stateful systems, it is important that session state data be maintained in a highly available database
that is accessible to all servers rather than maintained in the servers themselves. For instance, the
shared database may contain the shopping carts being filled by users. Any server can access the
database to add to or modifythe contents of a user’s shopping cart. The shared database can also store
1Help!MyDataCenterisDown–Part4:IntranetOutages,AvailabilityDigest;January2012.
http://www.availabilitydigest.com/public_articles/0701/data_center_outages-intranet.pdf
1
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

sessionparameters sothat currentuser sessions will betransferredtoanother server should aserver fail
withouttheusersneedingtore-logontotheapplicationagain.
A typical structure of a shared database is a pair of
database servers, one acting as the active database
server and the other acting as a backup database
server.Allserversinthepoolroutetheirrequeststothe
active database server, which makes all updates to the
database. Should it fail, the backup database server
takes over and continues database services for the
serverpool.
This configuration requires that both database servers
haveaccess tothesamedatabase.Thedatabase itself
must also be redundant so that it does not represent a
single point of failure. This can be accomplished by
using a single RAID database that will survive any
single disk or controller failure. Alternatively, each
database server can have its own disk subsystem with
updates made to the primary disk replicated to the
backupdisk.
High Availability from Loadbalancer.org
Load balancers from Loadbalancer.org can be configured as a clustered master/slave pair to provide a
highlyavailableandresilientloadbalancingsolution. Theloadbalancingcluster is addressedvia avirtual
IP (VIP) address and converts incoming packets to the real IP address
(RIP) of a selected server. Themaster and slave load balancers share a
floating IP address. The network knows that the master controls the
floating IP address, and all traffic will be sent to this address. If the
master fails, the slave will take over the floating IP address and will
seamlesslyhandletheloadbalancingfortheapplicationcluster.
All settings related to load balanced services are replicated from the master to the slave. This ensures
thatshouldthemasternodefail,theslavenodeisalreadyconfiguredtorunthesameservices.
The pair communicates via a heartbeat to ensure that both the master and slave load balancers are
performingproperly. Shouldthemaster nodefail,the slaveimmediatelytakes over allresources currently
hostedonthesharedfloatingIPaddress.
Supported Loadbalancer.org Configurations
The primary configurations (though not the only ones) supported by loadbalancer.org include Direct
Routing(DR),Network AddressTranslation(NAT),andSourceNetwork Translation(SNAT).Eachhas its
distinctiveuse.
DirectRoutingDR)
The Direct Routing mode is a high-performance solution that requires little change to existing
infrastructure. It is a “one-armed” infrastructure in that it need only connect to one subnet. It works at IP
Level 4 (the Transport Layer) by changing the MAC (Media Access Control) address of the incoming
packettothatoftherealservertowhichthepacketistoberouted.
The real server must own both the VIP and its own RIP. However, it must not respond to ARP requests
(AddressResolutionProtocol–whatistheMACaddressforthisIPaddress?)fortheVIP.
2
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Therealserversmustbeonthesamelogicalnetwork.However,theycanbeondifferentsubnets solong
as there are no router hops between the subnets. If multiple subnets are used, an IP address in each
subnetmustbedefinedintheloadbalancer.
Port translation (having a different RIP port than the VIP port) is not possible in DR mode. DR mode is
transparent in that the real server will see the source IP address of the client. Administration of the load
balancerisviaanyactiveIPaddressonport9080viaHTTPoronport9443viaHPPTS.
NetworkAddressTranslation(NAT)
DR mode cannot be used if the application cannot bind to the RIP and VIP at the same time or if the
operating system cannot be modified to handle the ARP problem. In this case, the Network Address
Translation mode can be configured. This is also a high-performance solution that operates at IP Level 4
butrequiresa“two-armed”infrastructurewithaninternalandexternalsubnettocarryoutthetranslation.
3
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

In the two-armed mode, the load balancer translates all requests from the external VIP address to the
internal RIP addresses. The virtual services and the real servers should be configured on different
subnets within the same logical network (i.e., no router hops); and the load balancer should have an IP
addressineachsubnet.
The NAT mode is transparent in that the real server will see the source IP address of the client. Port
translation is allowed in NAT mode (i.e., VIP:80  RIP:8080). Administration of the load balancer can be
donewithanyIPaddressonport9080viaHTTPoronport9443viaHPPTS.
SourceNetworkAddressTranslation(SNAT)
If an application requires that the load balancer handle cookie insertion, then the SNAT configuration
must be used. This mode works at Level 7 of the IP stack and is used with applications such as
Microsoft’sExchange,SharePoint,andLync.
This mode requires only a one-arm configuration and does not require any changes to the application
servers. The load balancer proxies the application traffic to the servers so that the source of all traffic
becomes the load balancer. However, since the load balancer is acting as a full proxy, this method does
nothavethesamethroughputastheLayer4methods.
Because SNAT is a full proxy, any server in the application cluster can be on any accessible subnet
includingacrosstheInternetoraWAN.
SNATisnottransparent.TherealserverswillnotseethesourceIPaddressoftheclient.Rather,theywill
seetheloadbalancer’sIPaddress.
Load Balancing Algorithms
TheLoadbalancer.orgloadbalancersprovideseveralloaddistributionoptions:
 RoundRobin–packetsaredistributedtoserversoneafteranother.
4
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

 Weighted Round Robin – packets are distributed to servers based on their weight. Typically,
serverswithgreatercapacitycarryagreaterweightandwillreceivemorepacketstoprocess.
 LeastConnection–theserverswiththeleastconnectionswillgetthenextpackets.
 Weighted Least Connection (the default method) – packets are distributed to the servers with the
leastconnectionsandthegreatestweights.
 DestinationHashing–Jobs areassignedtoserversbylookingupastaticallyassignedhashtable
bytheirIPaddresses.
 RealServerAgent–Permitstheroutingalgorithmtobemodifiedbythestateoftherealservers.
Supported Protocols and Applications
Except for their virtual load balancers (see below), the Loadbalancer.org’s load balancers are Intel
servers running the Linux operating system with a custom kernel modified for load balancing. Full root
accessisprovidedtoallowcontrolofallsettings.
TheloadbalancerssupportbothIPv4andIPv6.
The Layer 4 configurations (DR, NAT) make routing decisions based only upon the UDP and TCP
protocols, usingportnumbers andIPaddresses.TheLayer 7configuration(SNAT)canmakedistribution
decisionsbasedonupperlevelprotocolssuchasFTP,HTTP,HTTPS,DNS,RTP,etc.
Loadbalancer.org’sloadbalancerssupportmanyapplicationsincluding:
MicrosoftExchange MicrosoftOfficeCommunications StreamingMedia
Apache/ILSWebServers WebProxies/Filters VoiceoverIP(VoIP)
WindowsTerminalServices VMware Oracle
SharePoint Hyper-V MicrosoftDynamics
Lync AmazonWebServices
Theloadbalancersdonotsupport:
 Linkbalancing
 WANbalancing
 Firewallbalancing
 GlobalServerLoadBalancing(GSLB)
Persistence
Persistence is the ability to ensure that a specific client connects back to the same server within a given
period of time. It is normally required when session state is stored in the real server rather than in a
shareddatabase.
In the Level 4 configurations (DR, NAT), Source Persistence is the only option. However, the client will
loseitsconnectionintheeventofarealserverfailure.
At Level 7 (SNAT), cookies may be used to preserve persistence across real server failures. Microsoft
ConnectionBrokermayalsobeused.
5
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Loadbalancer.org Load Balancers
Loadbalancer.orgprovidesaseriesofloadbalancersofferingdifferentcharacteristics.Allmaybeusedas
asingleloadbalancerorconfiguredasahigh-availability,clusteredpair:
 Enterprise–1.5gbpsthroughputwith3millionconcurrentsessions.
 Enterprise R16 – Same as Enterprise but licensed only for four application clusters, each with
fourbackendservers.
 EnterpriseMAX–3gbpsthroughputwith7millionconcurrentsessions.
 Enterprise10G–Morethan10gbpsthroughputwith7millionconcurrentsessions.
 EnterpriseVA–RunonanyhardwareunderVMwareorMicrosoftHyper-Vhypervisors.
 Enterprise VA R16 – Same as Enterprise VA but licensed only for four application clusters, each
withfourbackendservers.
 Enterprise EC2 - Distribute traffic across Amazon EC2 instances in a single Availability Zone or
acrossmultipleAvailabilityZones
Summary
TheLoadbalancer.org load balancer configurations provide a widerange of load balancing options tosuit
most networks. They are certified for many applications and support several load balancing algorithms.
They are offered as appliances with a wide range of performance capabilities from 1.5 gbps to 10 gbps
throughput and up to 7 million concurrent connections. They are also offered as virtual load balancers
runningunderVMwareorHyper-V.
Most importantly, they can be configured as master/slave clusters with automatic failover for high
availability.Theywillnotbeasinglepointoffailureinanetwork.
Loadbalancer.org offers worldwide services through its offices in the U.S., Canada, the U.K., and
Germany.
Excellent descriptions of theLoadbalancer.org loadbalancers maybefoundinits Quick StartGuide2and
initsAdministrationManual.3
2Loadbalancer.orgApplianceQuickStartGuidev7.5
http://pdfs.loadbalancer.org/quickstartguideLBv7.pdf
3Loadbalancer.orgApplianceAdministrationManualv7.5
http://pdfs.loadbalancer.org/loadbalanceradministrationv7.pdf
6
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com