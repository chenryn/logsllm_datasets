Leslie Lamport Wins Turing Award for Distributed Computing
March2014
Leslie Lamport, a Principal Researcher at Microsoft Research, has been named the recipient
of the 2013 ACM A. M. Turing Award for his contributions to the reliability of distributed
computing systems. He contributed to the theory and practice of building distributed
computingsystemsthatworkasintended.
ACM (Association for Computing Machinery – www.acm.org) is widely recognized as the premier
organization for computing professionals, delivering a broad array of resources that
advance the disciplines of computing and information technology. The A.M. Turing
Award, the ACM's most prestigious technical award, has been given annuallysince 1966
for major contributions of lasting importance to computing. The award is accompanied by
a cash prize of $250,000, which in recent years has been underwritten by Intel Corporation and Google,
Inc.
The award is named after Alan M. Turing. Turing (1912 - 1954) is widely considered to be the father of
modern-day computer science. During World War II, he worked for the British code-breaking center and
wasresponsibleforbreakingGermanciphers,asubstantialaidtotheAlliedwareffort.1
Lamport’sawardcitationreadsasfollows:
Forfundamentalcontributionstothetheoryandpracticeofdistributedandconcurrent
systems, notably the invention of concepts such as causality and logical clocks,
safety and liveness, replicated state machines, and sequential consistency. Along
with others, he invented the notion of Byzantine failure and algorithms for reaching
agreement despite such failures. He contributed to the development and
understanding of proof methods for concurrent systems, notably by introducing the
notionsofsafetyandlivenessasthepropergeneralizationsofpartialcorrectnessand
terminationtotheconcurrentsetting."
His research has imposed a well-defined coherence on the seemingly chaotic behavior of distributed
computing systems, in which several autonomous computers communicate with each other by passing
messages. His algorithms and formal modeling and verification techniques improve the quality of real
distributedsystems.
SafetyandLiveness
Fundamental to his contributions to distributed computing are the concepts of safety and liveness. The
property of safety requires that “something bad will never happen.” The property of liveness means that
1 In a devastating blow to information technology, Turing was convicted of homosexuality in 1952 and chemically castrated. He
committed suicide in 1954. The British government has recently apologized, and the Queen gave him a posthumous pardon in
2013.
1
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

“something good eventually happens.” Eventual consistency is an example, in which a distributed
computing system will ultimatelyreach a consistent state without passing through inconsistent states that
couldbeharmful.
LogicalClocks
A logical clock is a mechanism for capturing the chronology of causal relationships in a distributed
system.Itkeepsaccuratetimeindependentofanyprecisereferencetime.
Many distributed transaction processing systems depend upon all nodes seeing the same time so that
they may properly order events (for instance, which transaction occurred first?). However, if there are no
critical ties with other independent systems, then the absolute time of these events may not be terribly
importantsolongasthetimestampsareproperlyordered.
Lamport’s logical clocks solve this problem with a simple algorithm.2 As with any clock, a logical clock
keeps track of time via clock ticks. The greater the value of the clock tick, the later the time. Lamport’s
algorithmdependsonlyupontwoobviousrules:
Rule1: Withinasystem,thereisaminimumofoneclocktickbetweenanytwoevents.
Rule2: IfNodeAsendsamessagetoNodeB,NodeBreceivesthatmessageafterNodeA
sentit.
ReplicatedStateMachines
Distributed systems are often structured in terms of clients and services. Each service comprises one or
more servers that export operations that clients invoke by making requests. If fault tolerance is required,
multiple servers that fail independently must be used. State machine replication is a method for
implementing a fault-tolerant service by replicating servers and coordinating client interactions with the
serverreplicas.
Replicas of a single server are executed on separate processors of a distributed system, and protocols
areusedtocoordinate clientinteractions withthese replicas.Logical clocks areusedtokeepthe multiple
serverstime-synchronized.
SequentialConsistency
Sequentialconsistencyis a propertythatrequires that theresult of the execution of anyseries of steps in
a distributed processing system in which the servers are executing concurrently be in the same
sequential order on all systems. The system provides sequential consistency if every node of the system
sees the (write) operations on the same memory part (page, virtual object, cell, etc.) in the same order,
althoughtheordermaybedifferentfromtheorderinwhichtheoperationswereissued.
Sequential consistency in multicore processors is a particularly difficult problem, since a given execution
sequence may be assigned to different cores in various processors.3 Therefore, the sequence of
instructionexecutionisindeterminate.
2TimeSynchronizationinDistributedSystems–Part3,AvailabilityDigest;February2008.
http://www.availabilitydigest.com/public_articles/0302/time_sync_3.pdf
Time,Clocks,andtheOrderingofEventsinaDistributedSystem,L.Lamport,CommunicationsoftheACM;July,1978.
http://www.stanford.edu/class/cs240/readings/lamport.pdf
3ThisisaseriousproblemthathadtobesolvedbyStratus.ItsftServerfault-tolerantsystemsusetwoprocessorsrunninginlock-
step,andtheexecutionsequenceineachmustbedeterministic.
2
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

ByzantineFaultTolerance
The award citation went on to give credit to Lamport for inventing the notion of Byzantine failure and the
algorithmsforreachingagreementinadistributedsystem despitesuchfailures.AByzantinefailureisone
in which the components of a distributed system fail in arbitrary ways – not only by crashing but by
incorrectly processing requests and generating what seems to be logical results. A system that appears
tobeproperlyworkingbutwhichisgeneratingerroneousoutputsisatraitor(theByzantineEmpire’sarmy
wasplaguedbytreacheryatthehighestlevels).
If adistributedsystem has severaltraitors, whatis the correctoperation?UsingLamport’s algorithms,the
correctsystemserviceswillbeprovidedsolongastherearenottoomanytraitors.Thenumberofservers
inthedistributedsystemmustbeatleastthreetimesthemaximumnumberoftraitors,plusone.4
TLA+
TLA+(Terminal Logic of Actions) is a system specification language devisedbyLamport.Itdescribes the
specifications for a system via simple mathematics. It is especially well-suited for writing high-level
specifications of concurrent distributed systems. It couples with PlusCal, an algorithmic language that
translatesintoaTLA+specification,towhichTLA+toolscanbeapplied.
TheprincipalTLA+toolsincludeamodelcheckerandaproofsystem.
Lamport also developed LaTeX (pronounced la-tek), a documentation system and markup language.
LaTeXisnowthedefactostandardforthepublicationofscientificdocumentsinseveralfields.
Leslie Lamport
Leslie Lamport holds a B.S. degree in mathematics from Massachusetts Institute of Technology as well
as M.S. and Ph.D. degrees in mathematics from Brandeis University. Prior to his current position at
Microsoft Research, he held tenures at SRI International and Digital Equipment Corporation (later
CompaqCorporationandnowHP).
The author or co-author of nearly 150 publications on concurrent and distributed computing and their
applications, he is also the author of the book Specifying Systems: The TLA+ Language and Tools for
HardwareandSoftwareEngineers,publishedbyAddison-WesleyPublications.
Lamporthasbeenrecognizedinmanyotherways.HereceivedtheIEEEEmanuelR.PioreAwardforhis
contributionstothetheoryandpracticeofconcurrentprogrammingandfault-tolerantcomputing. Hewas
alsoawardedtheEdsgerW.DijkstraPrizeinDistributedComputingforhispaper“ReachingAgreement
inthePresenceofFaults.”HewontheIEEEJohnvonNeumannMedalandwasalsoelectedtotheU.S.
NationalAcademyofEngineeringandtheU.S.NationalAcademyofSciences.
The Award Presentation
ACMwillpresentthe2013A.M.TuringAwardtoLeslieLamportatitsannualAwardsBanquetonJune21
inSanFrancisco,CA.
Summary
The theory and practice of concurrent distributed systems has been significantly advanced by Lamport’s
work.Thesesystems,onceimpractical,arenowcommondayandworkingwell.
4ReachingAgreementinthePresenceofFaults,M.Pease,R.Shostak,L.Lamport.
http://research.microsoft.com/en-us/um/people/lamport/pubs/reaching.pdf
3
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Acknowledgement
Ourthankstooursubscriber,BruceHolenstein,forbringingthistopictoourattention.
4
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com