#  Case Study 4: The \$440 Million Software Error at Knight Capital

Knight Capital Group was an American global financial services firm
engaging in market making, electronic execution, and institutional sales
and trading. In 2012 Knight was the largest trader in U.S. equities with
a market share of around 17 percent on the New York Stock Exchange
(NYSE) as well as on the Nasdaq Stock Market. Knight's Electronic
Trading Group (ETG) managed an average daily trading volume of more than
3.3 billion trades, trading over \$21 billion ... daily.\
\
It took 17 years of dedicated work to build Knight Capital Group into
one of the leading trading houses on Wall Street. And it all nearly
ended in less than one hour.\
\
What happened to Knight on the morning of August 1, 2012, is every CEO's
nightmare: A simple human error, easily spotted with hindsight but
nearly impossible to predict in advance, threatened to end the firm.\
\
At Knight, some new trading software contained a flaw that became
apparent only after the software was activated when the New York Stock
Exchange (NYSE) opened that day. The errant software sent Knight on a
buying spree, snapping up 150 different stocks at a total cost of around
\$7 billion, all in the first hour of trading.\
\
Under stock exchange rules, Knight would have been required to pay for
those shares three days later. However, there was no way it could pay,
since the trades were unintentional and had no source of funds behind
them. The only alternatives were to try to have the trades canceled, or
to sell the newly acquired shares the same day.\
\
Knight tried to get the trades canceled. Securities and Exchange
Commission (SEC) chairman Mary Schapiro refused to allow this for most
of the stocks in question, and this seems to have been the right
decision. Rules were established after the "flash crash" of May 2010 to
govern when trades should be canceled. Knight's buying binge did not
drive up the price of the purchased stocks by more than 30 percent, the
cancellation threshold, except for six stocks. Those transactions were
reversed. In the other cases, the trades stood.\
\
This was very bad news for Knight but was only fair to its trading
partners, who sold their shares to Knight's computers in good faith.
Knight's trades were not like those of the flash crash, when stocks of
some of the world's largest companies suddenly began trading for as
little as a penny and no buyer could credibly claim the transaction
price reflected the correct market value.\
\
Once it was clear that the trades would stand, Knight had no choice but
to sell off the stocks it had bought. Just as the morning's buying
rampage had driven up the price of those shares, a massive sale into the
market would likely have forced down the price, possibly to a point so
low that Knight would not have been able to cover the losses.\
\
Goldman Sachs stepped in to buy Knight's entire unwanted position at a
price that cost Knight \$440 million -- a staggering blow, but one the
firm might be able to absorb. And if Knight failed, the only injured
party, apart from Knight's shareholders (including Goldman), would have
been Goldman itself.\
\
Disposing of the accidentally purchased shares was only the first step
in Knight CEO Thomas Joyce's battle to save his company. The trades had
sapped the firm's capital, which would have forced it to greatly cut
back its business, or maybe to stop operating altogether, without a cash
infusion. And as word spread about the software debacle, customers were
liable to abandon the company if they did not trust its financial and
operational capacities.\
\
A week later, Knight received a \$400 million cash infusion from a group
of investors, and by the next summer, it was acquired by a rival, Getco
LLC. This case study will discuss the events leading up to this
catastrophe, what went wrong, and how this could be prevented.\

**If you want to make sure your business critical project is off to a
great start instead of on its way on my list with project failures? Then
a [New Project
Audit](https://www.henricodolfing.com/p/new-project-audit.html) is what
you are looking for.\
\
If you want to know where you are standing with that large, multi-year,
strategic project? Or you think one of your key projects is in trouble?
Then a [Project
Review](https://www.henricodolfing.com/p/project-review.html) is what
you are looking for.\
\
If you just want to read more project failure case studies? Then have a
look at the overview of all case studies I have written
[here](https://www.henricodolfing.com/p/project-failure-case-studies.html).**

## Timeline of Events

Some of Knight's biggest customers were the discount brokers and online
brokerages such as TD Ameritrade, E\*Trade, Scottrade, and Vanguard.
Knight also competed for business with financial services giants like
Citigroup, UBS, and Citadel. However, these larger competitors could
internalize increasingly larger amounts of trading away from the public
eye in their own exclusive markets or shared private markets, so-called
dark pools. Since 2008, the portion of all stock trades in the U.S.
taking place away from public markets has risen from 15 percent to more
than 40 percent.\
\
In October 2011, the NYSE proposed a dark pool of its own, called the
Retail Liquidity Program (RLP). The RLP would create a private market of
traders within the NYSE that could anonymously transact shares for
fractions of pennies more or less than the displayed bid and offer
prices, respectively. The RLP was controversial even within NYSE
Euronext, the parent company of the NYSE; its CEO, Duncan Niederauer,
had written a public letter in the Financial Times criticizing dark
pools for shifting "more and more information... outside the public view
and excluded from the price discovery process."\
\
The SEC decision benefited large institutional investors who could now
buy or sell large blocks of shares with relative anonymity and without
moving the public markets; however, it came again at the expense of
market makers. During the months of debate, Joyce had not given the RLP
much chance for approval, saying in one interview, "Frankly, I don't see
how the SEC can be possibly OK it." In early June 2012, the NYSE
received SEC approval of its RLP, and it quickly announced the RLP would
go live on August 1, 2012, giving market makers just over 30 days to
prepare. Joyce insisted on participating in the RLP because giving up
the order flow without a fight would have further dented profits in its
best line of business.\

## What Went Wrong

With only a month between the RLP's approval and its go-live, Knight's
software development team worked feverishly to make the necessary
changes to its trade execution systems -- including SMARS, its
algorithmic, high-speed order router. SMARS stands for Smart Market
Access Routing System.\
\
SMARS was able to execute thousands of orders per second and could
compare prices between dozens of different trading venues within
fractions of a second.\
\
A core feature of SMARS is to receive orders from other upstream
components in Knight's trading platform ("parent" orders) and then, as
needed based on the available liquidity and price, sends one or more
representative ("child") orders to downstream, external venues for
execution.\
\
**Power Peg**\
\
The new RLP code in SMARS replaced some unused code in the relevant
portion of the order router; the old code previously had been used for
an order algorithm called "Power Peg," which Knight had stopped using
since 2003. Power Peg was a test program that bought high and sold low;
it was specifically designed to move stock prices higher and lower in
order to verify the behavior of its other proprietary trading algorithms
in a controlled environment. It was not to be used in the live,
production environment.\
\
There were grave problems with Power Peg in the current context. First,
the Power Peg code remained present and executable at the time of the
RLP deployment despite its lack of use. Keeping such "dead code" is bad
practice, but common in large software systems maintained for years.
Second, the new RLP code had repurposed a flag that was formerly used to
activate the Power Peg code; the intent was that when the flag was set
to "yes," the new RLP component -- not Power Peg --  would be activated.
Such repurposing often creates confusion, had no substantial benefit,
and was a major mistake, as we shall see shortly.\
\
**Code refactoring**\
\
There had been substantial code refactorings in SMARS over the years
without thorough regression testing; in 2005, Knight changed the
cumulative quantity function that counted the number of shares of the
parent order that had been executed and filled to decide whether to
route another child order. The cumulative quantity function was now
invoked earlier in the SMARS workflow, which in theory was a good idea
to prevent excess system activity; in practice, it was now disconnected
from Power Peg (which used to call it directly), could no longer
throttle the algorithm when orders were filled, and Knight never
retested Power Peg after this change.\
\
**Manual deployment**\
\
In the week before go-live, a Knight engineer manually deployed the new
RLP code in SMARS to its eight servers. However, the engineer made a
mistake and did not copy the new code to one of the servers. Knight did
not have a second engineer review the deployment, and neither was there
an automated system to alert anyone to the discrepancy. Knight also had
no written procedures requiring a supervisory review, all facts we shall
return to later.\
\
**The crash**\
\
On August 1, 8:01 a.m. EST, an internal system called BNET generated 97
email messages that referenced SMARS and identified an error described
as "Power Peg disabled." These obscure, internal messages were sent to
Knight personnel, but their channel was not designated for high-priority
alerts and the staff generally did not review them in real-time;
however, they were the proverbial smoke of the smoldering code and
deployment bits about to burn, and it was a missed opportunity to
identify and fix the DevOps issue prior to market open.\
\
At 9:30 a.m. EST, Knight began receiving RLP orders from broker-dealers,
and SMARS distributed the incoming work to its servers. The seven
servers that had the new RLP code processed the orders correctly.
However, orders sent to the eighth server with the defective Power Peg
code activated by the repurposed flag soon triggered the fault line of a
financial tectonic plate. This server began to continuously send child
orders for each incoming parent order without regard to the number of
confirmed executions Knight had already received from other trading
venues.\
\
The results were immediately catastrophic. For the 212 incoming parent
orders processed by the defective Power Peg code, SMARS sent thousands
of child orders per second that would buy high and sell low, resulting
in 4 million executions in 154 stocks for more than 397 million shares
in approximately 45 minutes. For 75 of these stocks, Knight's executions
jostled prices more than 5% and comprised more than 20% of trading
volume; for 37 stocks, prices lurched more than 10% and Knight's
executions constituted more than 50% of trading volume.\
\
Following the flash crash of May 6, 2010, in which the Dow Jones
Industrial Average (DJIA) lost over 1000 points in minutes, the SEC
announced several new rules to regulate securities trading.\
\
**1)** Circuit breakers were required to stop trading if the market
experienced what was labeled as "significant price fluctuations" of more
than 10 percent during a five-minute period.\
\
**2)** The SEC required more specific conditions governing the
cancellation of trades. For events involving between five and 20 stocks,
trades could be cancelled if they were at least 10 percent away from the
"reference price," the last sale before pricing was disrupted; for
events involving more than 20 stocks, trades could be cancelled if they
deviated more than 30 percent from the reference price.\
