
This discussion has illustrated how there is value in adopting a tiered availability classification for
business applications. The assignment of applications to the tiers requires business participation,
working together with the applications development team and architects, just as for any other set of
businessrequirements.Havingamutuallyunderstandableclassificationterminologyfacilitatesthateffort.
Analyze the technology capabilities, methodologies and costs
There are many technological solutions that can be applied to availability requirements. At an intuitive
level, all processes and data could be duplicated (NASA at one point implemented triple redundant
systemswithaprocessforvotingonthe‘truth’forspacemissions).This‘onesizefitsall’approachisboth
expensive and unsatisfactory.It is expensivesincethe basic costis doubled for system components. It is
unsatisfactory since having more complexity adds to the probability of error and outages of some key
components without guaranteeing basic integrity of the results. Furthermore, if an error occurs, the
duplicateddatawouldalsocontainthesameerrorleavingthe‘back-up’asuselessasthemainsystem!
A certain level of system component redundancy is vital to maintaining availability, and this can be
adjusted to provide the tiered availability as discussed above. In addition, data back-up strategies,
applicationdevelopmentpatterns,softwarelayering,andmonitoringsystemscanbedeployedaswell.
The table in Figure 4 provides some implementation examples corresponding to the sample availability
classes outlined in the previous section. Each strategy carries an investment, not only for capital
hardware and software, but also for ongoing support and operations. In general, the highest availability
class (here AC-1) has the largest number of implementation strategies and can be supported at different
investmentlevelsandfordifferenttechnicalenvironments.
AvailabilityImplementations
Availability Maximum MaximumData
Class outageper Loss(RPO) SampleImplementations
incident(RTO)
 Distributedcluster
 Active-Activemulti-siteavailability
 Dedicatedspecialtyplatforms
Minimaltonone
 ReplicatedVirtualization
AC-1 4hours (possibleminutes
 Hot/coldstandbyservers
ofdatalost)
 Subsystemorsoftwaremirroring
 Databasereplication
 Networklevelmirroring
 Allocatedhardware
Mostrecent24
 Backupdatarestore
AC-2 24hours hoursofdatamay
 Restoreapplicationanddatafromnear-line
belost
backup
Besteffort,no  Restoreapplicationanddatafromnear-line
AC-3 n/a(besteffort)
guarantee backup
Figure4: Availabilityimplementationexamples
While the table looks like a ‘Chinese restaurant menu’, where the architect can select solutions at
random, a better approach is to align the applications and infrastructure platforms. Aligning the layers of
the architecture can help avoid design and operational errors that result from unfulfilled assumptions.
Having a consistent set of platforms reduces the application development complexity and learning curve,
aswell.
6
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

It is not necessarily the case that the higher investment for an AC-1 is ‘wasted money’ even without the
availabilityprotection. Consider that an active-active environment can be used to support faster response
times or higher throughput volumes when not required for availability. Similarly, database replication can
enable secondary use of the data at a back-up site, for example, reporting or query activity. Agreement
would be needed that these secondary uses will not be provided during recoveries. A higher availability
environment will cost more due to more expensive components and higher design costs. There is no
‘freelunch’,eventhoughthedifferentialcostforhighavailabilitymaynotbeassignificantasinthepast.
It is also possible, if implementing a ‘green field’ environment, to set the entire application development
and system support approach in a high availability framework. There exist special purpose systems that
embody both the infrastructure elements and the programming model (e.g., Tandem/NonStop) required,
but a similar effect can be achieved with a custom designed technical architecture, especially using
modernvirtualizationandresilient(web)softwarecomponentsandmonitors.
Estimate relative cost
The table in Figure 5 presents high-level application cost estimates corresponding to each of the
availability classes that were defined above. The calculations used are fairly simple and transparent, but
experiencehas shownthattheycorrespond well with moredetailedandrigorous analyses. Thecostwas
calculatedasthesum ofthemajorimplementationcomponentsthatprovidetheavailabilitycharacteristics
in that class. The model of availability used for this calculation assumes maximum back-up via
duplicationofresources,includingdisasterrecovery(DR).
AvailabilityCostEstimate
Availability Abstractcost Assumed
Class estimate implementation Discussion
components
 Duplicatedservers&dataforavailability
Servers:4x  Duplicatedback-upofdata
AC-1 13.5 Data:8x  DuplicateenvironmentforDR
DataCenter:1.5x  Additionaloperations,networking
 MostresilientDataCenter(TierIV)
 Duplicatedresourcesforlocalavailability
Servers:2x  DRresourcessharedwith‘stoppable’
AC-2 7.5 Data:4x activities,e.g.Applicationdevelopment
DataCenter:1.5x  Additionaloperations,networking
 ResilientDataCenter(TierII/III)
 Besteffortswithnoexplicitduplication
Servers:1x
 NoexplicitDRrecoverycapacity
AC-3 2.5 Data:1x
 Standardoperations,networking
DataCenter:.5x
 StandardDataCenter(TierII)
Figure5: Availabilitycostingmodel
Regardless of the precision of the model, certain reasonable implications can be drawn from the
estimates in the table. There is certainly a large multiplier effect between the availability support options
foragivenapplication. Inthetable,AC-1isroughly5timesmoreexpensivethanAC-3,and,nearlytwice
as expensive as AC-2. This is intuitively reasonable, but gets additional force from being quantified.
Business and application organizations are likely to consider a cost differential of that scale when
decidingontheavailabilityrequirementfortheirprojects.
7
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Another implication from this table might be that complete duplication of resources is a very expensive
approach to providing high availability and disaster recovery. While such strategies are generally the
simplest to implement, we discussed above that they may not securely provide the availability desired,
despite the expense. A more detailed risk-benefit analysis could compare other alternatives, including
N+1 based availability (providing spare capacity that could be applied as needed), and, active-active
environments (temporarily reducing capacity following a failure). Alternative availability architectures
bring additional complexities and costs of their own to an organization, but they could be less expensive
whenviewedfromtheenterpriseperspective.
Adding a quantitative measure to the availability discussion both increases the impact of a risk based
availabilityanalysisandpermitsthebusinesstounderstandtheriskandrewardequationbetter.
Plan the evolution
The architecture approach advocated here for aligning business risk with technology capabilities uses an
analysis that enables implementation. Ultimately, the goal of the entire approach is to reduce cost while
continuing to provide appropriate support for the business. After selecting appropriate availability
categorieswithassociatedimplementationtechnologiesandinvestments,theexecutionstepsare:
 businessclassification,
 technicalarchitectureanddesign,and,
 operationalprocessandtechnologyimplementation.
The implementation of business classification requires that business owners assign the availability
classes to their applications so that technical requirements can be appropriately formulated. The
assignment of availability classes can potentially uncover unrelated issues, such as project/technology
ownership uncertainty (multiple business owners, no business owners) and missing application
component inventory tracking or control. This can be viewed as either an opportunity or a distraction! In
any case, the ability to provide a high-level cost model for different possible availability scenarios can
enable the business to appropriately judge the risk it is prepared to accept. The technology teams would
participate in this activity to ensure that reasonable expectations are being agreed upon throughout the
classificationexercise,especiallyinconjunctionwiththeotherapplicationrequirementsandtimeframes.
Technical architecture and design involves the application-level, infrastructure, and operations
organizations. Planning and architecture is key, both to avoid costly multiplication of methods and
technologies, but also, to enable application design to be aware of, and to take advantage of, these
capabilities. Technical capabilities for availability must be incorporated into an organization’s overall
technology roadmap. For example, availability is only one of many drivers of a database platform
strategy; server virtualization and cloud can also include provisions for availability support and disaster
recovery. Applications and the development process should be aware of availability requirements. For
example, a web portal could include automated re-routing of failed messages; a store-and-forward
message bus could incorporate an out-of-band restart of target servers in addition to re-delivery of
messages;atransactionmonitorcouldstartadditionalorremoteserversandredirecttraffic.
Operational processes should take account of the differentiated availability classifications. Data-center
wide back-ups mayprove to be less useful tools as compared to transactional replication of audit logs for
selected applications. Archival and hierarchical storage concepts could also be employed. In addition,
prioritization of application support may be required to reduce costs while providing agreed upon service
levels. Access for personnel to facilities, as well as command and control capabilities for both
infrastructureelementsandapplications,needtobeplanned.
Technology implementation can face a ‘chicken and egg’ situation, where the infrastructure
components are out of step with the applications or operations in regards to availability implementation.
Specific strategic investments and programs may be needed to overcome this gap. For example, an
8
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

infrastructure capability might be implemented (prior to application users requiring it) in order to be the
standardsupportfornewapplicationswiththeappropriateavailabilityrequirement.
Conclusion
Architected availabilityand disaster recoveryare undoubtedlysignificant aspects of the compute strategy
in any large enterprise. A risk-based analysis of the requirements and potential solutions can result in
differentiated implementations, resulting in significant cost savings over simple replication-centered
implementations, while providing better levels of support for the organization’s actual needs.
Understanding availability implications enables business and technical communities to define and fulfill
appropriateapplicationand infrastructurerequirements.Architecturalmethods,includingcategorizationof
availability requirements, analysis of relevant technology and attendant costs, and planning processes
and implementations, are the main steps in achieving the appropriately balanced solution, as depicted in
Figure6.
Figure6:Thegoalofarisk-basedavailabilityanalysis
A reasonably balanced, well architected availability environment can be achieved and can be a valuable
partoftheoverallenterpriseITportfolio.
Author’s Biography
Arvin Levine has been involved in architecting high availability and disaster recovery solutions for large
enterprises, originally as part of the Tandem (aka HP NonStop) pre-sales organization, and, later as a
senior infrastructure architect at Credit Suisse. This article draws on insights from many engagements,
and, especially, from working with former colleagues and SME’s, too numerous to name, who have
“drunkthekool-aid”ofarchitectureandavailabilityandarecommittedtobringmoreofbothintotheworld.
Arvincanbereachedatarvinlevine@gmail.com.
iArelatedpaperwaspresentedatCEWIT2011as“DefiningaRisk-basedApproachtotheDesignandTechnologyUsageof
SystemstoAttainITAvailabilityandRecoverabilityRequirements“,byMichaelAzzopardi,ArvinLevineandJohnLamb,November
3,2011.
ii Businesscontinuitystatistics:wheremythmeetsfact.,MelGoslingandAndrewHiles,ContinuityCentral.24April2009.Retrieved
3August2012. AlsoseeAvoidingtheCNNMoment,J.Williams,ITProfessional,Volume3Issue2,March2001,Page72,68-70
EEEEducationalActivitiesDepartmentPiscataway,NJ,USAdoi>10.1109/6294.918228,and,BreakingtheAvailabilityBarrier(3
volumes),BruceHolenstein,BillHighleymanandPaulJ.Holenstein.AuthorHouse(2003,2007,2007).ISBN978-1410792327,
978-1434316042,978-1434316073
iiiIndeed,thesetermsoftenconfusepractitioners,aswell. Forexample,MTBFanduptimewereconflatedinanearlierdraft. They
arerelated:Uptime(orannualavailability)istheproportionoftimethatthesystemisavailable,usuallyexpressedin9s.Asystem
withanMTBFofsixmonthsandarecoverytime(RTO)offourhourshasanuptimeofthree9s-itisdowneighthoursperyear.
9
©2013SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com
