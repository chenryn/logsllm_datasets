Digest Managing Editor Speaks About Staggered Systems
December2016
Dr. Bill Highleyman, the Managing Editor of the Availability Digest, presented two
papers at the 2016 NonStop Technical Boot Camp, which was held at the Fairmont
Hotel in San Jose, California, U.S.A. from November 13th through November 17th. The Boot Camp was
managed by Connect Worldwide, the HPE Technology User Community, and was sponsored by several
NonStop vendors. The conference was a resounding success with over 450 attendees. The program
featuredalmost100breakoutsessionsgivenbyHPE,customers,andvendors.
One paper presented by Dr. Bill was entitled “Staggered Systems for Improving Mission-Critical System
Availability.” This paper was coauthored with Dr. Bruce Holenstein, President of Gravic, Inc. The other
paperwas“WhyDoesMyToasterRequireHighSecurity?”
“StaggeredSystems”exploredtheimprovementsthatstaggeringsystemstarttimesinredundantsystems
can have on overall system availability. The paper began with an exposure of a fallacy in standard
availabilitytheory. It is usual to talk about the MTBF (Mean TimeBetween Failure) and MTR (MeanTime
toRepair)todescribetheavailabilityofasystem.Asystem’savailabilityis(MTBF–MTR)/MTBF,andits
probability of failure is MTR/MTBF. However, these parameters are ‘random’ variables.’ This means they
have no memory. If MTBF is 1,000 hours, and the system has been in service for 500 hours, its average
timetothe nextfailure is still 1,000hours.If MTR is four hours,andthesystem has beenunder repair for
twohours,theaveragetimefortherepairtocompleteisstillfourhours.
A better measure for availability is Mean Time to Failure (MTTF). The “Staggered Systems” paper points
outthatMTTF is afunctionof theprobabilitydistributionof failureas of thecurrenttime.As timegoes by,
the peak of the failure probability distribution becomes closer; and MTTF becomes smaller – that is, the
probabilitythatthesystemwillfailatsomepointinthefuturebecomesgreater,aswouldbeexpected.
Highlyavailable andcontinuouslyavailablesystems oftenuseactive/backupor active/activesystems ina
redundant pair so that should one system fail, operations can continue with the other system. The
databasesofthetwosystemsarekeptsynchronizedviadatareplication.
In an active/backup system, only the active system is processing transactions. Active/backup systems
use unidirectional data replication to keep the passive backup system’s database synchronized with the
active system’s database. As database changes are made to the database of the active system, those
changesarereplicatedviaunidirectionaldatabasereplicationtothepassivebackupsystem.
In an active/active system, both systems are processing transactions. Active/active systems use
bidirectional data replication. Whenever a change is made to one database, that change is replicated to
the other database. Provision must be made to prevent ping-ponging (sending a change back to the
system that initiated it) and data collisions. A data collision occurs if applications in both systems change
a common data object at the same time. Those changes are then replicated to the opposite system,
wheretheyoverwritetheoriginalchanges.Nowbothdatabasesaredifferent,andbotharewrong.
1
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Itis standard practiceinaredundantactive/backupor active/activepair tostartbothsystems atthesame
time. However, this means that the probability of failure distributions of the two systems are aligned.
When the probability of failure is high for one system, it is equally high for the other system. This
enhances the chances of a dual system failure in which both systems of the redundant pair fail
simultaneously.
By staggering the starting times of the two systems, their probability distributions can be misaligned so
that there is little correlation between the failure of one system and the failure of the other system. Thus,
when one system is likely to fail, the other system in unlikely to fail, thus improving system availability
significantly.
The theory of system staggering was presented in the “Staggered Systems” paper. Though it contains a
lot of mathematics, it can be read and easily understood by the mathematically challenged, since the
concepts are clearly explained without mathematics. This paper is being published in The Connection as
atwo-partseries.TheConnectionisajournalfortheHPEbusinesstechnologycommunity.
The other paper presented by Dr. Bill, “Why Does My Toaster Require High Security, or The Day the
Internet Died,” deals with the security issues of the Internet of Things (IoT). ‘Things’ are typically simple
sensors with a small amount of compute capability. The computer supporting a ‘thing’ manages the
‘thing’s’ sensing capability and transmits its data to a data collection device of some sort. There is little
capacity left over for other functions such as security. Therefore, a ‘thing’ can be easily infected with
malware.
This was brought to light on Friday, October 21, 2016, when the Internet suddenly died over a large
portion of the United States. The internet was down for two hours in the morning, and then died for a
coupleofhoursatnoontimeandagainintheafternoon.Majorwebsites wentoffline,andmanyusershad
noInternetaccessatall.
The problem was a DDoS (Distributed Denial of Service) attack against a major DNS (Domain Name
System) server, Dyn. A DNS server is like a telephone book. It converts the URLs that users use to
specify web sites to the IP addresses needed to actually communicate with the web sites. The attack
prevented Dyn from providing DNS services to any web site which used it and to any users which
depended upon it. Since Dyn serviced many major web sites such as NetFlix and CNN, a major part of
theInternetwasdown.
Wheredid the DDoS attack comefrom?Itturned outthatthe assaultcamefrom abotnetmadeupof IoT
devicesinfectedbytheMiraimalware.MiraiisasophisticatedpieceofmalwarethatsearchestheInternet
for ‘things’ that still use default passwords (most do, it appears). It infects these ‘things’ and creates a
botnet of ‘things.’ Evidently, a botnet comprising hundreds of thousands of things was created in this
fashion. The botnet director then commanded the ‘things’ botnet to attack Dyn, thus taking down a major
partoftheinternet.
AnarticleonthisattackwillbepublishedinalaterissueofTheConnection.
Dr. Bill has spoken at every NonStop Boot Camp and its predecessors. Look for his sessions at Boot
Campstocome.
2
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com