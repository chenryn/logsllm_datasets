Failsafe
August2016
Irecentlywatchedthe1964moviethriller“Failsafe.”Back then,theUnitedStates kept
multiple strategic bombers armed with nuclear bombs in the air at all times to deter a
nuclearattackfrom theSovietUnion.Ifasuspectedenemyincursionwasdetectedbyradar,thebombers
wouldallheadforRussiauntiltheyarrivedatthe“failsafe”point.Ifatthatpointtheywerenotcalledback,
they would continue to Russia to drop their nuclear weapons. Once past the failsafe point, they were to
ignoreanyothermessagesinordertopreventtheSovietUnionfromfakingrecallmessages.
Duringonesuchsuspectedincursion,theStrategicAir Commanddeterminedthattheradartargetwasan
airliner that had been blown off course by high tail winds and a failed engine. The U.S. bombers were
calledback,butonebombergroupdidnotreceivetherecalldirective.Therecalldirectivewasjammedby
theSovietUnioninatestofanewcapabilityithadrecentlydeveloped.Thebombergroupcontinuedona
coursetoMoscow.Themoviefocusesontheefforts,allunsuccessful,torecalltheerrantbombergroup.
During the attempts to recall the bomber, at minute 54 in the movie, a Mr. Knapp of Amalgamated
Electronicsmakesthestatement:
“Themorecomplexanelectronicsystem gets,themoreaccidentproneitis.Soonerorlater,itbreaks
down. Machines we make are so fast, so accurate, and the mistakes they make are so subtle, very
oftenhumansjustcan’tknowwhetherthemachineislyingortellingthetruth.”
Fifty years later, this is still true, though now we incorporate redundant systems in an attempt to ensure
thatweare“gettingthetruth.”Backin1964,computersweretoobigandtooexpensiveforredundancy.
This takesmeback tomyearlydays in computer development.As I was goingfor myMaster’s degree in
ElectricalEngineeringatMIT,thecollegewasusingWhirlwind,avacuum-tubecomputerithaddeveloped
to compute projectile trajectories. Programs could take hours or even days to run. However, Whirlwind’s
MTBF was about eight hours, so each program had to store its results every few hours so that it could
restartfollowingafailure.
As an MIT research assistant, I was assigned to Lincoln Laboratories, which was developing the first
transistorized computer, the TX0, for the U.S. Air Force. We would design a major component of the
computer, such as a register, and lay out a full circuit board for it (often measuring a foot or more). The
circuit board frequently did not work, and a new one would be created and tested. Progress was very
slow. Furthermore, transistors came as a single package, were very expensive, and were very sensitive.
It was easy to burn one out. Whenever that happened, we had to write a complete report on how the
destructionofthetransistorhappened.
Thesupervisorofmygroupcameupwithagreatidea.Ratherthanlayingoutcircuitboardsthatcouldnot
be changed easily, he developed a set of plug-in modules for different types of logic units. The modules
looked like small vacuum tubes and each held a flip-flop, a gate, or some other logical unit. The modules
1
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

plugged into a chassis much like vacuum tubes, and they were wired into circuits using a simple wire-
wrap tool on the back of the chassis. Suddenly, it was easy to design and build a major computer
component.Transistorswerenotdestroyed.ProgressonTX0increasedsignificantly.
Asanaside,mysupervisordecidedtostartacompanybuildingcomputerswiththistechnology.Hisname
wasKenOlsen,andhiscompanywasDigitalEquipmentCorp.HislineofcomputerswasthePDPseries,
and they ran on the company’s VMS operating system (which later became the OpenVMS operating
system).Thelogicmoduleswereconvertedtoprinted-circuitcardscalled“flipchips.”
Digital ultimately was bought by Compaq, which was acquired by HP. HP spun off the Digital computer
system, now known as OpenVMS, to a new company that was set up specifically to market Digital
computers. The company, VMS Software, Inc., actively develops, markets, and supports OpenVMS
systems.
Myfavorite computer was the PDP-8. In terms of numbers sold, it was the most successfulminicomputer
of its time, with over 50,000 systems sold byDigital. It used a twelve-
bit word size, and the basic system came with 4K of memory(yes, K,
not G). Why a twelve-bit word size? Eight-bit bytes had not been
inventedyet,andcharacterswererepresentedbysix-bitcodes.
The PDP-8 came with no operating system except for device drivers.
I implemented a COBOL-like language for it called SAIBOL-8 (SAI
Business-Oriented language for the PDP-8 – my company was
Sombers Associates, Inc., or SAI). Using SAIBOL-8, I developed a
payroll package that could process the payrolls of up to 50 small
companiesatthesametime.
I started a payroll company called MiniData to process payrolls for
small companies. Our billboards read, “You pay us $10. We’ll pay
15,” implying that we would do a fifteen-person payroll for $10. My
“data center” (a small room) held two PDP-8s for redundancy. Each
had 8K of memory, 32 K of disk, and small Digital magnetic tape
units. The lower 4K of memory was used to hold SAIBOL-8 and the device drivers. Application programs
were paged into the upper 4K of memoryas needed. Can you imagine today creating any kind of usable
softwarepackageonamachinewithonly8Kofmemory?
OurfirstpayrollsprovedMr.Knapp’sprediction.Thepayrollchecksweretotallywrong–themachinewas
definitely lying. Our software was loaded with bugs. For a week, we did payrolls by hand until we got the
programscorrect.Themachinethenbegantellingthetruth.
MiniDatatook offlikeashot.Wedidpayrollsforhundredsofcompanies,andseveralyearslaterMiniData
wasacquiredfor$5million.
But Mr. Knapp’s statement still held. Could you ever know whether the machine was lying or telling the
truth?Computersarecomplexmachinesandcanmalfunctioneasilyinwaysthatarenotobvious.
In response to this problem, several companies were formed to design and market fault-tolerant
computers.1ThemainsurvivorswereTandemandStratussystems.
Tandem systems were born in the late 1970s. Each system contains from two to sixteen processors, and
each program running in one processor has a backup in another processor. Should a processor fail, the
backup program takes over in subsecond time and continues processing. Users are unaware of the
failure.
1TheDawnofFault-TolerantComputing,AvailabilityDigest;April2016.
http://www.availabilitydigest.com/public_articles/1104/survivable_systems.pdf
2
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

The Stratus system was not only fault-tolerant but also failsafe. It comprised two processors running in
lockstep. The processors compared their results before any memory write. If there was a mismatch, the
processors entered a fault-resolution mode and resolved the problem. Therefore, the results delivered by
the Stratus system were always guaranteed to be correct (at least, to the extent that the software was
correct).
If acomputer lies,it is mostlikelya softwareproblem.Software always has bugs that arefixed over time.
However,itislikelythatevenafterextendedtimes,leftinthesoftwarewillbelatentbugsthatcancauseit
to “lie.” We depend heavily in our daily lives on computers, and eliminating these bugs so that the
computerwillalwaystellthetruthisanongoingprocess.
Summary
It is certainly true that the more complex a system is, the more likely it is that it will provide erroneous
outputs. Computers are a major class of this sort of system. Because their actions are governed by the
humans who program them, and because humans are not fail-safe, neither are computers. Though the
movie “Failsafe” was not about computers (mid-1964 was too early for that), it emphasized the frailty of
humansincomplexsituations.
3
©2016SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com