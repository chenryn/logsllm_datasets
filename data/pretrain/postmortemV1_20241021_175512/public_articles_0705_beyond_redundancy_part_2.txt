single system, there are many internal checks to detect failures. In a georedundant system, failure
detection depends upon communication over network links to monitor the health of other components.
Thereareseveralarchitecturesformonitoringsystemhealth:
 Systemscanmonitorthemselvesandreportproblems.
 Heartbeatscanbeinterchangedbetweensystemstomonitorthehealthofremotesystems.
 Anindependentsystemcanmonitorthehealthofsystemsanddeterminerecoveryprocedures.
 Clientscandetectfailuresbythelackofresponsestotheirrequests.
The time from when a fault interrupts service to the time that the fault is detected is the Uncovered State
described aboveand determines thefailurecoverage parameter inthemodel.Oncedetected, the timeto
recover service to the users is the failover latency parameter described above. The probability that the
failoverwillbesuccessfulandnotrequiremanualinterventionisthefailoversuccessparameter.
4
©2012SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

AnalysisofGeoredundantApproaches
Given the above definitions, the authors use Markov models to calculate the availabilities of several
georedundantarchitectures:
 Simplexsystem(nogeoredundantbackupsite)
 Manualswitchovertoahotbackupsite–onceafailureisreportedbytheoperationalsystem,the
operatorsusemanualprocedurestoswitchtothebackupsite.
 System-driven switchover to a backup site – the system detects an outage, perhaps through
heartbeats or an independent monitoring system, and automatically switches over to the backup
site.
 Client-initiated failover to a backup site – the clients independently detect a system failure based
onreturnerrorcodesorlackofaresponseandredirecttheirrequeststothebackupsite.
Manualswitchovers andsystem-drivenswitchovers aretohotstandbys.Client-initiatedfailovers areused
inactive/activeconfigurations.
Using the parameters specified bythe authors, they calculate that a single site will have an availability of
99.9973% (almost five nines). Configuring this site for georedundancy, they calculate the following
availabilitiesfordifferentarchitectures:
Simplexsystem(nobackupsite) 99.9973% (almostfive9s)
Manualswitchovertohotbackupsite 99.9974% (almostfive9s)
System-drivenswitchovertohotbackupsite 99.9975% (almostfive9s)
Client-initiatedswitchovertoactivesite 99.9996% (almostsix9s)
At first glance, these results seem disturbing. As the authors conclude, having a backup site with manual
orsystem-drivenrecoveryisnobetterfrom anavailabilityviewpointthanasinglesimplexsystem.Sowhy
even bother with the cost and complexity of a backup site? The reason, of course, is for disaster
recovery.
UncoveredOutages
How do they come to this non-intuitive conclusion? The answer is in their assumptions about uncovered
outages.Thesearethe“silent” outages thatgounnoticeduntilsomefaultdetectionmechanism –manual
or automatic – alerts the operation staff to the fault so that recovery actions can begin. During the
uncoveredoutage,thesystemisdownandusersarenotbeingserviced.
In their parameters, the authors assumed that the primary system would fail four times per year. 10% of
these failures were silent failures that took an average of 30 minutes to be detected. Thus, the system
was down 4 x 0.1 x 30 = 12 minutes per year due to silent failures. This in itself led to an availability of
99.9977%. For simplex systems and manually and system-driven switchover configurations, uncovered
outages represented byfar the bulk of downtime. Having the ability to switch over to another system had
no impact on this failure mode, and because it represented by far the bulk of downtime (total downtime
per year from all causes was 13 to 14 seconds), switchover had minimum benefits from an availability
viewpoint.
Conversely, client-initiated failover does not depend upon an external fault detection mechanism. If a
clientcannotreceivea legitimateresponsefrom asiteafter asmallnumber of fasttimeouts and retries,it
simplysubmits its request to the other site. Failover time is measured in seconds, and uncovered outage
time is minimal.With the authors’ parameters, uncovered outage time for client-initiated switchover led to
0.4 minutes of downtime per year rather than 12 minutes. This is more than an order of magnitude less,
leadingtoanadditionalnineofavailability.
5
©2012SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Having said that, the authors’ calculations show a marked difference in recovery times. Using typical
parameters, manual switchover times are measured in hours. System-driven switchover, which is
generally accomplished automatically, is measured in minutes. Client-initiated switchover is measured in
seconds.
If one wants to evaluate these models for other values of uncovered downtime, the Markov models will
havetobesolvedforthesecases.
Client-InitiatedRecovery
Having made their point about the advantages of client-initiated recovery, the authors next focus on the
primary parameters governing the effectiveness of this technique. The key to this mode of
georedundancy is that the client can quickly detect a site failure and rapidly switch over to the alternate
site.Threeparametersareimportant:
 FaultDetection–Thisistheamountoftimethatittakesforaclienttodecidethatitisnotgoingto
get a valid response from its current site. Typically, a client will make a request and will then wait
for theresponse.If theresponseis notreceived withinacertainperiodof time,thentheclient will
retrythe request. After a certain number of retries, it will move to the alternate site and submit its
request to that site. The fault detection time is then the request timeout times the number of
retries. The time for a client to decide to switchover to a backup site should be fast enough to
meet the SLA, but not so fast that its current site does not have enough time to attempt its own
automaticrecovery.
 Site Monitoring – Using just request timeouts to determine a site failure means that the client will
notknowofasitefailureuntilitmakesitsnextrequest.Thiscanbeimprovedbyhavingtheclient
proactively monitor the health of the site by sending it periodic heartbeats. If it fails to receive
responses to a certain number of heartbeats, it can assume that the site is down; and it can
reconnect to the other site. When it desires to send its next request, it has already gone through
the recovery process and there is no downtime attributable to the primarysite failure. Successful
responses can be considered successful heartbeats. The more frequent the heartbeats, the less
likelythattheclientwilltrytomakearequestonaninoperablesite.
 Recovery – In order to recover, the client must reconnect to the alternate site. This will typically
require that the connection to the alternate site be established and a new session initiated – a
process that can be time consuming. There are several techniques for minimizing this time. The
client could maintain simultaneous sessions with both sites. Session parameters could be
replicated to the backup site so that it is ready to continue the session transparently. Session
parameterscouldbemaintainedontheclient,suchasviacookiesinabrowser.Ifrecoveryisfast
enough, the fault may not be counted as an availability failure according to the SLA. However, if
the session is lost, the outage will be counted as a reliability failure since the request was not
successfullyprocessed.
CaseStudies
Using the techniques presented in Part 2, the authors present two detailed case studies. One analyses
theavailabilityofapoolofDNSserversusingclient-initiatedrecovery.
The other is a complex of applications representative of a typical site. In this study, a client interfaces the
system via a front-end server, which uses a database server to satisfy client requests. Several systems
support these elements including an authentication server; a provisioning system; a backup system; a
usage database for functions such as billing, compliance, and performance monitoring; and a system
management facility. The authors introduce the concept of failing over single functions rather than the
entiresiteforcertainfacilities.Thecriticalityassociatedwitheachfunctioninthisexampleisasfollows:
6
©2012SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Enduser efficiencycritical
Otherenterprisesystemsorsoftware efficiencycritical
Legal/regulatorycompliancesupportsystems efficiencycritical
Maintenanceengineers essential
Networkmanagement essential
Provisioning essential
Accountingandbilling routine
Performancemanagement routine
Databackup routine
This system is analyzed in detail in both Chapters 9 and 14 to demonstrate that the guidance provided in
thebookcanbeusedinareal-lifeexample.
Part 3: Recommendations
Theauthorsconcludethebook withaseriesofrecommendationscoveringsitelocationchoices,recovery
strategies,theuseofcloudcomputingforsitebackup,andtheissuesthatshouldbecoveredbyanSLA.
Theyfocusheavilyontesting.Theybreakredundancytestingdownintofourphases:
 Element testing, in which the recoverymechanism for each element of the final solution is tested
toensurethattheelementcanrecoversuccessfully.
 End-to-end testing, in which site failover of the entire system is tested in a laboratory
environment.
 Deployment testing, in which the redundant sites are tested in the production network
environment.
 Operational testing, in which the production system is periodically tested to ensure that the
documentation is kept up to date and that the staff is trained in fault detection and failover
procedures.
Summary
This book is notacasualread.Itis intendedfor theserious student who needs tounderstand the various
aspects of georedundant systems from an analytical as well as a practical viewpoint. As such, it serves
twopurposes:
 For those who are mathematically challenged, it is an excellent treatise on the concepts behind
georedundancy and the issues that must be considered in designing such systems. These
conceptsareeasilydigestedbybypassingtheMarkovmodeldiscussions.
 For those who want to be able to specifically analyze various configurations, it provides the
analyticaltoolstodosoviaitsMarkovmodels.
The book is biased on the importance of uncovered outages, concluding that manual and system-driven
switchovers to standby sites provide no availability improvement of consequence beyond disaster
recovery. While it is true that active/active systems with client-initiated failover will provide the best
availability by far of any of the georedundant configurations, the provision of good fault detection
mechanisms in the systems will certainly improve the availability of active/standby sites. The impact of
improved fault coverage can be determined by solving the book’s Markov models with modified
parameters.
7
©2012SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com
