Hardware Replication
January2007
A fundamental premise of active/active systems is that the database copies in the application
network must be kept in synchronism. In this article, we talk about database synchronization
using hardware data replication. In our two previous articles, we talked about using software-
based data replication to synchronize database copies. Before proceeding with a description of
hardwarereplication,itisusefultobrieflyreviewthosesoftwarereplicationtechniques.
A Review of Software Replication
Creatingacloneofadatabaseinreal-timeisusefulformanyreasons,including
 creatingabackupdatabaseforrecoverypurposesintheeventofasystemfailure.
 providingquerycopiestosupportlocalaccessandtooffloadtheprimarysystem.
 providingactive/activeprocessinginwhichalldatabasecopiesareactivelybeingused.
Creating adatabaseclone requires that updates madeto asource database be replicatedto one
or more target databases. In previous articles, we have discussed software-based asynchronous
replication1andsynchronousreplication2techniquestoprovidethisfunction.
These replication techniques replicate specific changes made to a source database and maintain
the sequence of these changes as they are applied to the target databases.3 Transaction
boundaries are maintained, as is the order of the events within the transactions.4 Therefore, the
target databases are always consistent and satisfy the requirements for referential integrity. As
such, they are suitable for query and report processing and can be used in active/active
architectures, in which all database copies are being actively updated by different instances of a
commonapplication.
Asynchronous replication is decoupled from the application and therefore imposes no
performancepenaltyonanapplication.However,the inherenttimefrom whenan updateis made
to a source database to the time that the update is applied to a target database (the replication
latency)opensupthepossibilityofdatalossfollowingasourcesystemfailure.Equallyofconcern
is that data collisions can occur when the same data item is updated at roughly the same time in
twodifferentdatabasecopies.
1
AsynchronousReplicationEngines,theAvailabilityDigest;Volume1,Issue2;November,2006.
2SynchronousReplication,theAvailabilityDigest;Volume1,Issue3;December,2006.
3
SeeChapter10,ReferentialIntegrity,BreakingtheAvailabilityBarrier;SurvivableSystemsforEnterpriseComputing,by
Dr.BillHighleyman,PaulJ.Holenstein,andDr.BruceHolenstein.
4
Somereplicationenginesevenmaintaintheinter-threadedorderofsimultaneoussourcetransactioneventsduringthe
transaction replay at the target. Although this strict ordering is not required for target database consistency, it does
improvetheoveralltargetsystemresourcelevelingtomatchthesource’sperformanceprofile.
1
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

Synchronous replication solves these problems but introduces one of its own. Since an
application must wait for a transaction to be committed across the network, its response time is
increased(theapplicationlatency).
There are other techniques for data replication. One is replication at the hardware level – the
topicofthisarticle.5
Hardware Replication
Hardwarereplicationis incommonusetodayinmanysystems.Itdiffersfrom softwarereplication
in that it replicates data at the physical block or sector level rather than at the logical transaction
level. Though it may usually be implemented as software somewhere in the I/O stack, it is
referred to as hardware replication because it happens not only beneath the application layer
(wheresoftwarereplicationhappens)butevenbelowtheoperatingsystemlayer.
Basically,wheneveradiskblockiswrittentothesourcedisk,itiswrittenimmediatelytothetarget
disk.Therefore,thetwodisks areinnear-real-timesynchronism.Byusingsynchronous hardware
replication(discussedbelow),thediskscanbekeptinexactsynchronism.
Hardware replication is generally much faster than software replication as no updates are made
tothetargetdatabase.Rather,onlyfullblock writes aremade.Inaddition,if replicationis doneat
the disk subsystem level (that is, at the physical layer – see the discussion below concerning the
I/Ostack),thereisnoprocessingloadimposedforreplication.
TheDatabaseConsistencyIssue
A fundamental hardware replication characteristic that must be understood is that it is the disks
thatare synchronized,notthedatabasecopies.If updates arecached,theup-to-datecopyof the
databaseisreflectedinthecontentsofthecache,notthecontentsofthedisk.
Datablocks areonlyflushedfrom cachetodisk whensomealgorithm sodictates.For instance,if
a data block is to be read from disk, room must be made in the cache for the new block. To
create this space, the oldest data block might be flushed to disk (if it has been modified since it
wasreadorlastflushed).Thisistheleastrecentlyused(LRU)algorithm.
Another case requiring flushing is a transaction commit. Typically, before a transaction can be
committed, the transaction change log must be flushed to disk. However, data blocks affected by
thetransactioncanremainincacheuntiltheyneedtobeflushedbyanLRUalgorithm.
Therefore, it is onlythe contents of cache that reflect the current state of the database. Since the
contentsofthesourcecachearenotbeingreplicated,thetargetdatabaseisnotconsistent.Index
entries may exist with no associated data blocks. Child data items may not have a parent. Block
splitsmaybeincomplete.
As a result, there is no concept of referential integrity and database consistency in a database
maintained by hardware replication. Therefore, while replication is active, the target database is
not suitable for use for functions such as query or report processing. It is definitely not useful in
5
Thevariousformsofreplicationareanalyzedinagreatdealmoredetailintheforthcomingbook,Breakingthe
AvailabilityBarrier:AchievingCenturyUptimeswithActive/ActiveSystems.
2
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

active/active architectures since every database copy must be consistent so that they can all
activelyparticipateinacommonapplication.6
A target database can be made useful only by pausing the application, waiting until the target
database has become synchronized, and then turning off replication. This technique can be used
to create a consistent database copy that can then be moved to tape in an offline backup
procedure.
However, hardware replication is quite suitable for creating a backup system that is almost ready
to take over from the primarysystem in the event of a primaryfailure. “Almost ready” is meant to
mean that the target database must first be recovered and made consistent. Because of certain
characteristics of hardware replication, this can be a complex and lengthy process. We explain
thislater.
TheI/OStack
HardwarereplicationcanoccuratanyoneofseveralplacesintheI/Ostack.7
ApplicationLayer
This layer corresponds to the application stack running on
a server. It includes not only the applications but also the
application
database manager, if any. It is the database manager that application
layer
provides transaction services. Replication products that run
at this layer are the transaction-oriented software
replicationenginesdescribedinourpreviousarticles.
file
FileSystemLayer system cache
layer
The file system provides the interface between the logical
I/Orequestsoftheapplicationandtheblock I/Oaddressing logical
of the disk storage system. It typically caches data blocks volume LVM
until they are ready to be written to disk. There are several manager
layer
software products that offer data block replication at this
layer.
device
device
driver
driver
LogicalVolumeManagerLayer layer
The LVM layer is a software layer that manages the disk
devices and decides to which physical storage device a physical
request should be routed. It is an optional layer and may layer disks
notexistinaparticularI/Ostack.Varioussoftwareproducts
providedatablockreplicationatthislayer.
DeviceDriverLayer
Device drivers are software components utilized by the operating system to interact with the
physicaldevice.Itislesscommonforthislayertoprovidehardwarereplication.
6
Ofcourse,ifcacheisturnedoff,everywritewillimmediatelybereflectedinthetargetdatabase;andthetargetdatabase
willbeconsistent.However,thispracticeisgenerallynotemployedforperformancereasons.
7
SelimDaoud,HardwareReplicationChallenges,SunBluePrintsOnLine;November,2003.
3
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

PhysicalLayer
The physical layer includes all of the storage hardware such as disk, RAID arrays, or SAN
switches.Replicationatthislayerishandledbythestoragedeviceitself.
Some Examples
The particular level in the I/O stack at which hardware replication is implemented depends upon
thesystemarchitectureasshowninthefollowingtwoexamples:
StorageAreaNetworks
A storage area network, or SAN, is isolated from the servers which use it by a communication
network. The SAN is a freestanding system that handles storage requests from any server
connectedtoitoverthenetwork.
Therefore, there is no full I/O stack running in a server that is associated with a SAN. Hardware
replication is a function of the SAN and is typically implemented at the physical layer. A primary
disk subsystem and a backup disk subsystem are provided. The primary disk arrays in the SAN
replicatedatablockstothebackupstoragedevicesasdatablocksarewrittentothem.
active standby active standby
Application Application Application Application
data data data data
cache cache cache hardware cache
replication
primary ..... mirror SAN data data
base base
hardware DirectAttachedStorage
replication
StorageAreaNetwork
DirectAttachedStorage
On the other hand, if direct attached storage is used, there is an I/O stack associated with each
setofstoragedevices.Inthisconfiguration,aprimaryserversystem andabackupserversystem
areprovided,eachwithitsowndatastorage.
Though hardware replication could be done at the physical level in this case, it is more common
to provide replication at the file system layer. It is this layer which maintains the storage cache.
Whenever a data block is flushed from the cache of the primary system, it is replicated to the
backupsystem’sfilelayer,whichwritesthatdatablockintoitsownstoragesystem.
4
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

Asynchronous and Synchronous Replication
Hardwarereplicationcaneither beasynchronous or synchronous.Withasynchronous replication,
as soon as a data block is flushed to disk on the source system, it is sent to the target system to
be applied to the target disk. The source system immediately continues processing. There is no
impactontheapplication.
With synchronous replication, as soon as a data block on the source system is flushed to disk,
the data block is also sent to the target system to be written to disk. However, in this case, the
source system’s write is not complete until the target system has responded that it has
successfullyreceivedandsafe-storedthedatablockorhaswrittenittodisk.
Synchronous replication guarantees that the two disks are always exactly synchronized (though
neither contains a consistent database, as explained previously). However, as with software-
based synchronous replication engines, this is done at the expense of performance. If the
application is awaiting a write completion, it will be delayed by network latency as the replication
writepropagatestothetargetsystemandasthetargetsystem’sresponseisreturned.
As a consequence, there is generally a distance limitation between the source and target disks if
synchronoushardwarereplicationistobeused.
There is also a compromise form of synchronous hardware replication. This can be thought of as
semisynchronous replication. With this technique, when a write to disk occurs, the block is
replicated asynchronously; but the next block’s write will not complete until the replication of the
previousblockhascompleted.
Recovery
We indicated earlier that recovery from a system failure can be complex and lengthy when using
hardware replication. This is because data blocks are not written to the disk in the same order
thattheyarewrittentothedatabaseduetocaching(unlesscachingisturnedoff).
Following a failure, there is no way to know how old the data on disk is. If there is a transaction
log, it will be reasonably up-to-date since no data can be committed until the transaction log has
beenflushedtodisk.However,justbecausethetransaction loghas beenflushed todisk,thereis
nowaytoknowwhich,ifany,ofthereferenceddatablockswereflushed.Muchofthisdataisstill
inthecacheofthesourcesystemandislost.
When attempting to recover these transactions from the transaction log, there is no way to know
how far back in the log one must go in order to recover all of the data that has yet to be flushed.
The result is a very complex and potentially very lengthy recovery process. This is in sharp
contrast to software replication, which guarantees that all changes have been applied to the
targetdatabasewhenatransactioniscommitted.
Advantages of Hardware Replication
Thereareseveraladvantagesassociatedwithhardwarereplication.
 Itcanreplicateanykindofdata,suchastransactiondataandlogs,configurationfiles,
controlfiles,sourcefiles,executables,andotherunstructureddata.
 Itimposesaminimalloadonthetargetdatabasesincewriteactivityisfullblockwrites
(whichisgenerallyveryefficient)ratherthanupdates.
 Thereisnoprocessoroverheadifreplicationisdoneatthephysicallayer.
5
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman

 Hardwarereplicationcanbeveryusefulforprovidingabackupdatabaseinan
active/backupconfiguration.
Disadvantages of Hardware Replication
Inherentinhardwarereplicationareseveraldisadvantages.
 The target database is inconsistent and cannot be used for any processing functions
suchasqueryprocessingorreporting.
 Eventhedatathatisstoredonthetargetdatabasecanbequitestale.
 The source and target systems must be identical. There can be no conversions to
differentformats,databasestructures,ordifferingdatabases.
 Should there be corruption in a source data block, this is replicated to the target system.
Thiscouldcreatetheinabilitytouseeithersetofdiskdata.
 Recoveryfromaprimarysystemfailurecanbequitelengthy,asdescribedabove.
 A greater load is imposed on the communication channel since entire blocks rather than
simplychangesarereplicated.
 Whenusing synchronous hardware replication,thesystemsmustgenerallybe fairlylocal
to each other and be connected by a high-speed communication network since the
communications latency can dramatically impact the source application’s write
performance.
As a result of database inconsistency, hardware replication is not appropriate for active/active
systemsinwhicheachdatabasecopymustbecurrentsothatitcanbeusedbylocalapplications
toparticipateinacommonapplication.
Summary
Hardware replication is a commonly available replication technique for maintaining a backup
database to protect against a system failure. Hardware replication products are offered by many
vendors,includingEMS,Legato,Sun,Veritas,andEVA.
However, hardwarereplicationsuffers from thefactthatthe targetdatabaseis not consistent and
cannot be used for processing functions. This precludes its use to synchronize databases in an
active/active application network. Software replication, including asynchronous replication,
synchronous replication, and transaction replication (to be discussed in our next article), must be
usedtosupportanactive/activeconfiguration.
6
Thisdocumentmaynotbedistributedinanywaybyelectronicmeans.
©2007SombersAssociates,Inc.,andW.H.Highleyman
