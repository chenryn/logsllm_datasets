|                 |                 | urther testing. |                 |
|                 |                 |                 |                 |
|                 |                 | Likel           |                 |
|                 |                 | y has potential |                 |
|                 |                 | ly been around  |                 |
|                 |                 | since:74697     |                 |
|                 |                 | 6a301ac9c9aa10d |                 |
|                 |                 | 7d42454f8d6cdad |                 |
|                 |                 | 8ff2b in v2.6.2 |                 |
|                 |                 | 2, as Ben Blum  |                 |
|                 |                 | a               |                 |
|                 |                 | nd Jan Ceuleers |                 |
|                 |                 |  already noted. |                 |
|                 |                 |                 |                 |
|                 |                 | With my         |                 |
|                 |                 |  fix to call cl |                 |
|                 |                 | ock_was_set whe |                 |
|                 |                 | n we apply a le |                 |
|                 |                 | apsecond, I no  |                 |
|                 |                 | longer          |                 |
|                 |                 |  see the issue. |                 |
|                 |                 |                 |                 |
|                 |                 | thanks          |                 |
|                 |                 | -john           |                 |
|                 |                 |                 |                 |
|                 |                 | /* Leap se      |                 |
|                 |                 | cond timer test |                 |
|                 |                 |  *              |                 |
|                 |                 |         by: joh |                 |
|                 |                 | n stultz (johns |                 |
|                 |                 | tul@us.ibm.com) |                 |
|                 |                 |  *              |                 |
|                 |                 |         (C) Cop |                 |
|                 |                 | yright IBM 2012 |                 |
|                 |                 |  *              |                 |
|                 |                 |         License |                 |
|                 |                 | d under the GPL |                 |
|                 |                 |  */             |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 | #in             |                 |
|                 |                 | clude <stdio.h> |                 |
|                 |                 | #i              |                 |
|                 |                 | nclude <time.h> |                 |
|                 |                 | #inclu          |                 |
|                 |                 | de <sys/time.h> |                 |
|                 |                 | #includ         |                 |
|                 |                 | e <sys/timex.h> |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 | #define CA      |                 |
|                 |                 | LLS_PER_LOOP 64 |                 |
|                 |                 | #def            |                 |
|                 |                 | ine NSEC_PER_SE |                 |
|                 |                 | C 1000000000ULL |                 |
|                 |                 |                 |                 |
|                 |                 | struct time     |                 |
|                 |                 | spec timespec_a |                 |
|                 |                 | dd(struct times |                 |
|                 |                 | pec ts, unsigne |                 |
|                 |                 | d long long ns) |                 |
|                 |                 | {               |                 |
|                 |                 |    ts           |                 |
|                 |                 | .tv_nsec += ns; |                 |
|                 |                 |  while          |                 |
|                 |                 | (ts.tv_nsec >=  |                 |
|                 |                 | NSEC_PER_SEC) { |                 |
|                 |                 |                 |                 |
|                 |                 |    ts.tv_nsec - |                 |
|                 |                 | = NSEC_PER_SEC; |                 |
|                 |                 |                 |                 |
|                 |                 |    ts.tv_sec++; |                 |
|                 |                 |   }             |                 |
|                 |                 |  return ts;     |                 |
|                 |                 | }               |                 |
|                 |                 |                 |                 |
|                 |                 | struct          |                 |
|                 |                 | timespec timesp |                 |
|                 |                 | ec_diff(struct  |                 |
|                 |                 | timespec a, str |                 |
|                 |                 | uct timespec b) |                 |
|                 |                 | {               |                 |
|                 |                 |                 |                 |
|                 |                 |   long long ns; |                 |
|                 |                 |  int neg = 0;   |                 |
|                 |                 |                 |                 |
|                 |                 |     ns = a.tv_  |                 |
|                 |                 | sec *NSEC_PER_S |                 |
|                 |                 | EC + a.tv_nsec; |                 |
|                 |                 |   ns -= b.tv_   |                 |
|                 |                 | sec *NSEC_PER_S |                 |
|                 |                 | EC + b.tv_nsec; |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 |   if (ns < 0) { |                 |
|                 |                 |       neg = 1;  |                 |
|                 |                 |       ns = -ns; |                 |
|                 |                 |  }              |                 |
|                 |                 |  a.tv_sec = n   |                 |
|                 |                 | s/NSEC_PER_SEC; |                 |
|                 |                 |                 |                 |
|                 |                 |   a.tv_nsec = n |                 |
|                 |                 | s%NSEC_PER_SEC; |                 |
|                 |                 |                 |                 |
|                 |                 |     if (neg) {  |                 |
|                 |                 |         a.tv_s  |                 |
|                 |                 | ec = -a.tv_sec; |                 |
|                 |                 |      a.tv_nse   |                 |
|                 |                 | c = -a.tv_nsec; |                 |
|                 |                 |    }            |                 |
|                 |                 |                 |                 |
|                 |                 |    return a;    |                 |
|                 |                 | }               |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 | int  main(void) |                 |
|                 |                 | {               |                 |
|                 |                 |   str           |                 |
|                 |                 | uct timeval tv; |                 |
|                 |                 |     s           |                 |
|                 |                 | truct timex tx; |                 |
|                 |                 |   int i         |                 |
|                 |                 | , inconsistent; |                 |
|                 |                 |                 |                 |
|                 |                 | long now, then; |                 |
|                 |                 |    stru         |                 |
|                 |                 | ct timespec ts; |                 |
|                 |                 |                 |                 |
|                 |                 |  int clo        |                 |
|                 |                 | ck_type      =  |                 |
|                 |                 | CLOCK_REALTIME; |                 |
|                 |                 |  in             |                 |
|                 |                 | t flag        = |                 |
|                 |                 |  TIMER_ABSTIME; |                 |
|                 |                 |   long lo       |                 |
|                 |                 | ng sleeptime =  |                 |
|                 |                 | NSEC_PER_SEC/2; |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 |  /* cle         |                 |
|                 |                 | ar TIME_WAIT */ |                 |
|                 |                 |  tx.mode        |                 |
|                 |                 | s = ADJ_STATUS; |                 |
|                 |                 |                 |                 |
|                 |                 |  tx.status = 0; |                 |
|                 |                 |                 |                 |
|                 |                 |  adjtimex(&tx); |                 |
|                 |                 |                 |                 |
|                 |                 |   sleep(2);     |                 |
|                 |                 |                 |                 |
|                 |                 |    /* Get the   |                 |
|                 |                 | current time */ |                 |
|                 |                 |     gettimeof   |                 |
|                 |                 | day(&tv, NULL); |                 |
|                 |                 |                 |                 |
|                 |                 |     /* Cal      |                 |
|                 |                 | culate the next |                 |
|                 |                 |  leap second */ |                 |
|                 |                 |   tv.tv_sec     |                 |
|                 |                 |  += 86400 - tv. |                 |
|                 |                 | tv_sec % 86400; |                 |
|                 |                 |                 |                 |
|                 |                 |  /* Se          |                 |
|                 |                 | t the time to b |                 |
|                 |                 | e 10 seconds fr |                 |
|                 |                 | om that time */ |                 |
|                 |                 |     t           |                 |
|                 |                 | v.tv_sec -= 10; |                 |
|                 |                 |   settimeof     |                 |
|                 |                 | day(&tv, NULL); |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 |   /* Set        |                 |
|                 |                 | the leap second |                 |
|                 |                 |  insert flag */ |                 |
|                 |                 |  tx.mode        |                 |
|                 |                 | s = ADJ_STATUS; |                 |
|                 |                 |     tx.st       |                 |
|                 |                 | atus = STA_INS; |                 |
|                 |                 |                 |                 |
|                 |                 |  adjtimex(&tx); |                 |
|                 |                 |                 |                 |
|                 |                 |   c             |                 |
|                 |                 | lock_gettime(cl |                 |
|                 |                 | ock_type, &ts); |                 |
|                 |                 |    now = th     |                 |
|                 |                 | en = ts.tv_sec; |                 |
|                 |                 |    while(no     |                 |
|                 |                 | w - then < 30){ |                 |
|                 |                 |         stru    |                 |
|                 |                 | ct timespec tar |                 |
|                 |                 | get, diff, rem; |                 |
|                 |                 |                 |                 |
|                 |                 | rem.tv_sec = 0; |                 |
|                 |                 |        r        |                 |
|                 |                 | em.tv_nsec = 0; |                 |
|                 |                 |                 |                 |
|                 |                 |                 |                 |
|                 |                 |     if (flag == |                 |
|                 |                 |  TIMER_ABSTIME) |                 |
|                 |                 |                 |                 |
|                 |                 |         target  |                 |
|                 |                 | = timespec_add( |                 |
|                 |                 | ts, sleeptime); |                 |
|                 |                 |      else       |                 |
|                 |                 |                 |                 |
|                 |                 |        target = |                 |
|                 |                 |  timespec_add(r |                 |
|                 |                 | em, sleeptime); |                 |
|                 |                 |                 |                 |
|                 |                 |       cloc      |                 |
|                 |                 | k_nanosleep(clo |                 |
|                 |                 | ck_type, flag,  |                 |
|                 |                 | &target, &rem); |                 |
|                 |                 |      c          |                 |
|                 |                 | lock_gettime(cl |                 |
|                 |                 | ock_type, &ts); |                 |
|                 |                 |                 |                 |
|                 |                 |      dif        |                 |
|                 |                 | f = timespec_di |                 |
|                 |                 | ff(ts, target); |                 |
|                 |                 |      printf(    |                 |
|                 |                 | "now: %ld:%ld   |                 |
|                 |                 | diff: %ld:%ld r |                 |
|                 |                 | em: %ld:%ld\n", |                 |
|                 |                 |                 |                 |
|                 |                 |         ts.tv_s |                 |
|                 |                 | ec, ts.tv_nsec, |                 |
|                 |                 |                 |                 |
|                 |                 |     diff.tv_sec |                 |
|                 |                 | , diff.tv_nsec, |                 |
|                 |                 |                 |                 |
|                 |                 |      rem.tv_sec |                 |
|                 |                 | , rem.tv_nsec); |                 |
|                 |                 |      n          |                 |
|                 |                 | ow = ts.tv_sec; |                 |
|                 |                 |   }             |                 |
|                 |                 |                 |                 |
|                 |                 |    /* cle       |                 |
|                 |                 | ar TIME_WAIT */ |                 |
|                 |                 |  tx.mode        |                 |
|                 |                 | s = ADJ_STATUS; |                 |
|                 |                 |                 |                 |
|                 |                 |  tx.status = 0; |                 |
|                 |                 |                 |                 |
|                 |                 |  adjtimex(&tx); |                 |
|                 |                 |                 |                 |
|                 |                 |   return 0;     |                 |
|                 |                 | }               |                 |
|                 |                 | ```             |                 |
|                 |                 |                 |                 |
|                 |                 | align="center"} |                 |
|                 |                 | {.shariff servi |                 |
|                 |                 | ces="[\"reddit\ |                 |
|                 |                 | "]" theme="grey |                 |
|                 |                 | " data-lang="en |                 |
|                 |                 | " backend-url=" |                 |
|                 |                 | //shariff.lkml. |                 |
|                 |                 | org/index.php"} |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 |                 |                 |                 |
+-----------------+-----------------+-----------------+-----------------+
|                 | ![\\](/i        |                 | ![/](/i         |
|                 | mages/bcornerl. |                 | mages/bcornerr. |
|                 | gif){width="32" |                 | gif){width="32" |
|                 | height="32"}    |                 | height="32"}    |
+-----------------+-----------------+-----------------+-----------------+
|                 |                 | Last update:    |                 |
|                 |                 | 2012-07-02      |                 |
|                 |                 | 00:41           |                 |
|                 |                 | \[W:0.021 /     |                 |
|                 |                 | U:1.740         |                 |
|                 |                 | seconds\]\      |                 |
|                 |                 | ©2003-2020      |                 |
|                 |                 | [[Jasper        |                 |
|                 |                 | Spaans]{itempr  |                 |
|                 |                 | op="editor"}](h |                 |
|                 |                 | ttp://blog.jasp |                 |
|                 |                 | er.es/)\|hosted |                 |
|                 |                 | at [Digital     |                 |
|                 |                 | Ocean](https:   |                 |
|                 |                 | //www.digitaloc |                 |
|                 |                 | ean.com/?refcod |                 |
|                 |                 | e=9a8e99d24cf9) |                 |
|                 |                 | and             |                 |
|                 |                 | [TransIP](h     |                 |
|                 |                 | ttps://www.tran |                 |
|                 |                 | sip.nl/)\|[Read |                 |
|                 |                 | the             |                 |
|                 |                 | blog]           |                 |
|                 |                 | (http://blog.ja |                 |
|                 |                 | sper.es/categor |                 |
|                 |                 | ies.html#lkml-r |                 |
|                 |                 | ef)\|[Advertise |                 |
|                 |                 | on this         |                 |
|                 |                 | si              |                 |
|                 |                 | te](https://buy |                 |
|                 |                 | sellads.com/buy |                 |
|                 |                 | /detail/244952) |                 |
+-----------------+-----------------+-----------------+-----------------+

