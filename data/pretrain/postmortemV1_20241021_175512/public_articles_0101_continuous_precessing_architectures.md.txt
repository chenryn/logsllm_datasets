All About Continuous Processing Architectures
October2006
Achieving 100% Uptime
It is becoming trite to say that today’s global economy and the enterprise’s absolute reliance on
computing technologymandates that critical IT services are never impaired – ever. However trite
itmaybe,this statementistrue.As AntonLessing,CTO ofBankServsaid,“Iamnotinterestedin
9s.Iaminterestedonlyin100%uptime.”
How can we achieve 100% uptime? Clearly, we can never know that we have achieved it –
something that we did not anticipate can always happen decades down the line. However, we
cancomearbitrarilyclosetothisgoal.
Of course, “arbitrarily close” translates to “arbitrarily expensive.” There is a limit to what we are
willing to spend for extreme availability. Our willingness to spend is often related to the cost of
downtime. Therefore, there is an omnipresent compromise between availability and cost.
Actually,tobemoreaccurate,onemustcompromisebetweenavailability,cost,andperformance.
Increasing availability will almost certainly have a negative impact on either cost or performance,
perhapsevenonboth.
The class of architectures that can provide these extremely high levels of availability are known
as continuous processing architectures (CPA)1. There are several ways in which such availability
canbeachievedthroughvariousCPAarchitectures,including
 active/activeapplicationnetworks,
 lock-steppedprocessors,and
 synchronizedprocesspairs.
Thesearchitecturesallhavesomecharacteristicsincommon:
 They are all redundant. Most uses today employ a single spare (dual modular
redundancy, or DMR), though some provide two levels of sparing (triple modular
redundancy,orTMR).
 Theyallprovidefastfailover,typicallyinthesubsecondtosecondrange.
CPA does not eliminate component failures. In fact, we must accept that processors, disks, and
networks willfail.WhatCPAdoes is toprovide fastfailover.If thedowntimeof asystem following
afailureissoshortthatitisnotnoticedbytheusers,ineffect,therehasbeennodowntime.
Eachofthesearchitecturesisdescribedbelow,alongwithexamplesoftheircurrentuses.
1Theterm“ContinuousProcessingArchitectures”wascoinedbyJimJohnsonofTheStandishGroup.
1
©2006SombersAssociates,Inc.,andW.H.Highleyman

Active/Active Application Networks
Anactive/activeapplicationnetwork comprisestwoor moreindependentnodes,eachrunningthe
sameapplication.Eachnodehas accesstoatleasttwocopiesoftheapplicationdatabaseovera
(hopefully) redundant network. Users can also communicate with any node over this network. To
the extent that the nodes are geographically distributed, the application network is disaster
tolerant,asaneventthatwouldtakeoutonenodewouldleavetheothersoperational.2
Should a node fail for any reason, the users of
datareplication that node can be switched to surviving nodes,
database database typically in a subsecond or second time frame.
Thus,theusersonthefailednodemaynoteven
be aware of the fault; and users on other nodes
are totally unaffected, except for perhaps a
slightly degraded response time due to the
increased loading on their respective systems
(dependinguponthecapacityofthenodes).
Thedatabasecopiesarekeptinsynchronismby
application application
replicating changes made to any one of the
databases to the other database copies in the
application network. There are several
techniquesforreplicatingthisdata:
 networktransactions
 asynchronousreplication
 synchronousreplication
Active/active architectures are the new guys on
Active/ActiveApplicationNetwork the block and have only come into use with the
commercial availability of high-speed data
replication products. However, there are now several instances of active/active application
networks, especially in large financial applications using NonStop systems (whose users, of
course,areparticularlyinterestedinmaximizingtheiruptimes).
Depending upon the type of system used for the nodes (i.e., high-availability or fault-tolerant),
active/active systems can provide six to eight nines of availability (an average of 5 to 500
millisecondsperyearofdowntime),whichtranslatesintouptimesmeasuredincenturies.
Active/activearchitecturesaremorefullydescribedinourarticleentitledWhatisActive/Active?
Lock-Stepped Processors
Lock-stepping involves keeping two processors in agreement by periodically comparing their
outputs. Should there be a disagreement, the processor pair is immediately shut down. This is
called fast fail. Fast fail has one significant advantage – it protects memory-resident structures or
databasesfromdatacorruptioncausedbyasickprocessor.
Comparison can be done at any of many logical levels. For instance, memory writes could be
compared.Ifoneprocessoristryingtowriteintomemorydatathatisdifferentthanwhattheother
processoristryingtowrite,somethingiswrong;andtheprocessorpairisshutdown.
2 See the book entitled Breaking the Availability Barrier: Survivable Systems for Enterprise Computing, by Dr. Bill
Highleyman,PaulJ.Holenstein,andDr.BruceHolenstein,publishedbyAuthorHouse;2004
2
©2006SombersAssociates,Inc.,andW.H.Highleyman

Let us call a lock-stepped processor pair a logical processor. Of course, if a logical processor
fails, there must be another logical processor to take its place in order for the system to continue
in operation. This might be done, as exemplified below, by running multiple processors in a
symmetric multiprocessing (SMP) environment or by keeping a companion processor
synchronized and ready to take over via synchronized process pairs, as described in the next
section.
Lock-stepping is probably one of the
oldest continuous processing
architectures. For instance, it was used by
the New York Racing Association at their =
Aqueduct, Belmont and Saratoga application application
racetracks toimplementintheearly1960s
what was the first computerized totalizator
system.Atotalizatoristhesystemusedby
race tracks to sell tickets, calculate odds
and payoffs,anddisplaytheresults onthe
I/OBus
large infield board and on other displays
around the race track. This system used a
pairofHoneywellH200computers.
Old as it may be, lock-stepping is in
current use today in commercially-
Lock-SteppedProcessorPair
available, fault-tolerant systems. Stratus
uses lock-stepped processor pairs in their ftServer series of fault-tolerant systems. These
processor pairs check each other at the memory-write level. ftServer systems run as a set of
SMPlogicalprocessors.Shouldalogicalprocessorfail,thereareothersthatwillpickuptheload.
HP uses lock-stepped processors in its fault-tolerant NonStop servers. In HP’s earlier K-series
and S-series systems, logical processors comprised a pair of processors coordinating at the
memory-access level. In that case, each critical process was backed up by maintaining
synchronization with a companion process in another logical processor. Should a logical
processor fail, the backup process took over immediately, with no impact on other processes
usingit.
In its new Integrity line of fault-tolerant systems, HP again uses lock-stepped processors as
logical processors. However, in this case, coordination between the two physical processors is
done at the message level. Whenever a processor is ready to send a message to the outside
world (done over ServerNet), it waits until the other processor is also ready to do so. The two
messages are compared. If they are the same, the message is released. Otherwise, the logical
processorisfailed;andthebackupprocessestakeover.
There is an added benefit to this looser level of lock-stepping. If one processor fails, and if this
failure is detected by the processor’s extensive internal error-checking logic, the processor will
take itself out of service. The other processor is then free to continue providing service. The only
thing that is lost is the guarantee of data integrity – the highly unlikely event that this processor
couldmakeanerrorandcontaminatememorydatastructuresorthedatabase.
HP not only offers DMR, as described above, but also a TMR configuration in its Integrity series.
In this case, each logical processor can contain three physical processors. Should a message
mismatch occur, the bad processor is voted out; and the logical processor continues on as a
DMR pair with full data integrity protection. With this configuration, HP has essentially removed
processorfailuresasafactorintheavailabilityequation.
3
©2006SombersAssociates,Inc.,andW.H.Highleyman

Synchronized Process Pairs
A synchronized process pair comprises a primary process (a program running in a processor)
and abackupprocess.Theprimaryprocess is providingallprocessingfunctions, andthe backup
processisidle.
Whenever the internal state of the
primary process changes, the new
state state is sent over a high-speed
application application
channel to the backup process,
which updates its state. Should the
state
application application primary process fail, the operating
system automatically routes all new
state requests to the backup process,
application application
which continues processing with no
interruptiontootherprocessesusing
monitor
thisprocesspair.
primary backup
Synchronized process pairs have
backbone
been used for all critical processes,
suchasthedisk andcommunication
processes, in NonStop systems
since the early days (when they
were Tandem systems). They
continue in use today to recover
SynchronizedProcessPairs
fromlogicalprocessorfailures.
Combined Technologies
Though many of these technologies are very old – lock-stepped processors date back over forty
years and synchronized process pairs over thirty years, they are still in active use today. In fact,
asdescribedabove,NonStopsystemsstillusebothtechnologies.
However, neither of these architectures is supported by off-the-shelf, commercially available
products. Consequently, they generally are not suitable for implementing user applications. They
arerelegatedtotheimportantfunctionofimplementingfault-tolerantsystems.
Enter active/active. To build an active/active system, all one needs is a high-speed data
replication engine. These are now available as off-the-shelf products from several vendors.
Though IBM provides data replication as part of its Parallel Sysplex systems,most other vendors
donot.Theydependupontheproductsofthirdparties.
Especially in the NonStop world, where such products are plentiful, active/active technology is
taking hold. Interestingly, in a NonStop active/active application network, all three of these
technologies are used. Lock-stepping is used in the logical processors, synchronized process
pairs are used to back up logical processors, and active/active nodes are used to obtain extreme
availabilities.
100% Uptime Achieved - Almost
As noted above, active/active systems can provide uptimes in the order of centuries; and that is
based on there being just one spare node. If there are two spare nodes, availabilities of nine to
twelve 9s can be achieved. This is as close to 100% uptime as we need to get with active/active
technology since other unanticipated factors are now more likely, such as the 2004 Northeast
blackoutinNorthAmerica.
4
©2006SombersAssociates,Inc.,andW.H.Highleyman
