Is Parallel Repair Really Better Than Sequential Repair?
April2008
We recently had a thought-provoking challenge from one of our readers questioning our
reasoning on parallel repair versus sequential repair.1 In previous articles in the Availability
Digest, we had argued that parallel repair would restore a downed system faster than sequential
repair.
Sequential and Parallel Repair
Under sequential repair, there is only one service technician. In a multinode system with one
spare, if a node fails, the technician begins repairing that node. Should a second node fail while
the first node is still under repair, the system fails. The service technician continues his repair of
the first node; and when he has returned that node to service, the system is restored to service.
Hethenbeginstherepairofthesecondfailednode.
Under parallel repair, there are two service technicians available. Should a first node fail, one of
the service technicians will start to repair that node. If a second node fails while the first node is
still being repaired, the system fails. However, as opposed to sequential repair, as soon as the
second node fails, a second service technician begins the repair of that node. The system is
returnedtoserviceassoonaseitheroneofthefailednodesisrepaired.
The Parallel Repair Advantage
We argued that the rate of repair of failed nodes under parallel repair would be twice as fast as
thatunder sequentialrepair becausethere weretwoservicetechnicians performingrepairs.If the
repair rate were twice as fast, the average time to repair the first node would take half as long.
Therefore, a failed system would be returned to service in half the time under parallel repair as
compared to its restore time under sequential repair. If mtr is the mean time to repair a single
node,andifRistheaveragesystemrestoretime,then
R=mtr forsequentialrepair
R=mtr/2 forparallelrepair
We extended this argument to a system with s spares and (s+1) repair technicians. In this case,
parallel repairs would occur at a rate that is (s+1) times faster than that of a single repair
technician;andtheaveragesystemrestoretimewouldbe
R=mtr/(s+1) forssparenodesandfullparallelrepair
1CalculatingAvailability–RepairStrategies,AvailabilityDigest;November,2006.
FailureStateDiagrams–RepairStrategies,AvailabilityDigest;October,2007.
1
©2008SombersAssociates,Inc.,andW.H.Highleyman

A Question for the Editor
Inresponsetothisreasoning,AlanfromNewZealandwrote:
“Hi Bill,The Availability Digest arrived at a most interesting time - the harddisk on my
machine has just died (literally) - and it raises interesting aspects of my own approach to
backupandavailability!
However, I have a question for you about your rules of repair. You state that if it takes a
repair crew four hours to repair a node, then they can repair two nodes per eight-hour
day.Twocrewscanrepairfournodesperday,sotheaveragetimetorepairanodebecomes
two hours. Now project management tells me this is not true.What is true is that the average
time of repair becomes two hours, but the elapsed time for the first repair remains at four
hours. So this adds a level of complexity to availability, does it not? I am unsure of the math
that follows, but I do know in project management terms that if I assume that the time to
effectarepair isfourhours, andIreducetheentireelapsedtimeforrepairingN nodestofour
hours total by adding N repair crews, my average time per repair becomes 4/N. However, if
all of the crews started at the same time, the first node still becomes available four hours
later,butIwouldgetNnodesavailableatthattime.IfIaddN/2crews,Igettherepairdonein
eight hours for all nodes. The average repair rate is 8/N/2, but the first node to be repaired is
stillfourhourslater.
This issue is the one that many people in project management make a mistake with - they
confuseresourceswithplannedtimetoeffectatask.ForexampleifIhavetodigtenholes,in
the plan I should allow the time for only one hole to be dug, but I need ten of them. The
resource allocation controls the time for the project to be completed, and I can shorten the
time for the project to be completed by adding more resources forthe tasks (in this case
addingmorehole-diggingcrews).
Somyquestion is how does this elapsed time affect the math in your availability measure? It
seems to me that availability is not improved, but yes, MTR average is improved. Yes,
myavailability is improved by increasing the number of repaircrews in that I get more failed
nodes available again within the elapsed time, but the actual time for repair remains four
hours in the example you gave. In a chaotic situation where nodes are failing randomly (the
real world, I guess), the average may apply as only one crew can work on a failed node so
they will start at the time of failure. The second node fails some time later, and the second
crew starts work, etc. On the basis that when nodes come back on line at about the same
time that another fails, there may only be, say, two nodes out at any one time and it would
appear thattheMTR is two hours, butthenode repair timedoes stayatfour hours.Butthere
issomeeffectofrateoffailureandrandomnessofthosefailuresonMTRasIseeit.”
MyresponsetoAlanfollows:
“Alan - I can see that you've really thought about this, and the point that you raise is quite
interesting. There is an answer to your quandary, and it is in the mathematics and has to do
withtheprobabilitydistributionofrepairtime.
If repair time is constant - always four hours in your case - then you are quite right. It will be
four hours until the first system is repaired. However, repair times aren't generally constant.
Some can be accomplished quite rapidly, and some might take some time. Ifthe failure
iscorrectable bysimply replacing a customer-replaceable component that you happen to
have on site, repairmight take just a few minutes (plus reboot time). To have to order a part
and install it when it arrives might take a dayor more. So if two nodes fail, it is likelythat one
will be afaster repair thantheother; andthat is the onethat will befixedfirstif parallelrepair
isused.
2
©2008SombersAssociates,Inc.,andW.H.Highleyman

So you have to assume some sort of probability distribution of repair times. The case that I
discuss (though I didn't say it and probably should have) is the simplest case mathematically
(short of a constant repair time), and that is that repair times are governed by an exponential
distribution.
Whether that is the case or not, parallel repair will be faster than sequential repair if repair
times are not constant.With sequential repair, the first node that failed is worked on first. If it
istheonethattakesthelongesttime,toobad.Thatwillbetherepairtime.
If parallel repair is used, then whichever node is repaired the fastest will be the one to come
upfirst.Thoughtheprecisenumbersmaychange,I think theconclusionthatparallelrepair is
fasterthansequentialrepairisavalidobservation.
Perhaps a better model for sequential repair would be one that, upon the failure of the
second node, repair stops on the first node; and the second failure is analyzed. Then
whichever repair is deemedtobetheshortestis undertaken.However, intheheatof acrisis,
this might not be feasible. Also, often times the analysis of the fault is what takes the most
time. The actual repair might be quite fast compared to the time that it takes to decide what
hadhappened.
In any event, I'm glad that you read the Digest and that it stirred some discussion and
thinking.Letmeknowwhatyouthinkabouttheaboveargument.“
Alanconcludesthisconversationwiththefollowing:
“Thanks,Bill- youarequite rightabouttheprobabilitydistributionandtheanalysis time.Ilike
the reply very much; and it is, of course, correct. The fault on my part was to read the article
literally and not think aboutthe actual failures, time to repair,ability to replace modules, the
parallelism that applies with multiple repair crews,etc., etc. (the normal chaotic systems we
workinallthetime-chaoticinthissense=unpredictable).
I do read (and enjoy) the Digest.It adds a higher dimension to the availability issues I deal
with in the small/medium (by USA standards very, very small) companies and situations in
NZ.For high availability solutions, I am usually dealing with paired machines that are not
always in lockstep for licensing reasons (sometimes people just won't spend money where
theyshould) so people accept anRPO oftwo tofive minutes with anRTO of up to six hours.
When it happens, however, they want the RTO to be MUCH shorter - next purchase round
we usually have a much simpler time ofhandling the budget! I also have to say that their
transaction rate is such that an RPO of twoto five minutes is realistic - coupled with their
abilitytorepeatanylosttransaction.”
Thanks,Alan.
So What Is the Real Story
Alan’scommentsgotmethinking.Whatreallyistherelationshipbetweenthedistributionofrepair
times and the average system restore time under parallel repair? So, with a little math (which is
detailedinthedocumentAnalysisofRepairStrategies,availableat
www.availabilitydigest.com/public_articles/0304/repair_strategy_analysis.pdf2), I was able to
makethefollowingobservation:
Asthedistributionofrepairtimesmorphsfromaconstantdistributiontoanexponential
distributionandbeyond,theadvantageofparallelrepairoversequentialrepairincreases.
2whichIrecommendonlyforhard-coremathnuts,
3
©2008SombersAssociates,Inc.,andW.H.Highleyman

Thisobservationisillustratedbelow.LetusdefinearepairadvantageA:
A=R /R
s p
where
R isthemeantimetorestorethesystemundersequentialrepair.
s
R isthemeantimetorestorethesystemunderparallelrepair.
p
Thatis,Aistheratioofimprovementinsystemrestoretimeofparallelrepairoversequential
repair.Asseeninthediagramsbelow,
 A=1forconstantrepairtimes(thereisnoadvantageofparallelrepairoversequential
repair–bothleadtothesameaveragesystemrestoretime).
 A=1.5forauniformdistributionofrepairtimes(thatis,itisequallylikelythattherepair
willbefinishedatanytimeuptoamaximumrepairtime).
 A=2foranexponentialrepairtimedistribution.
 Byinference,Aincreasesfurtherastherepairtimebecomesclosertoaconstantrepair
timeofzero(thisisnotverifiedbycalculation).
A=1 A=1.25
A=1.5
constantrepairtime increasingrepairtime uniformrepairtime
A=1.67 A=2 A>2
decreasingrepairtime exponentialrepairtime tightrepairtime
4
©2008SombersAssociates,Inc.,andW.H.Highleyman
