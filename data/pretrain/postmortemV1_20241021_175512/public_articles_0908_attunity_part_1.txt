Attunity Replicate
August2014
Attunity Replicate is a data replication engine that supports homogeneous and
heterogeneous databasereplication.ItreplacesAttunityStream.Replicatesupportsmost
relationalandnon-relationaldatabasesassourcesandmanyoftheseastargets.
Replicate provides initial target table creation using the source-database schema, full initial table load
while the source applications are running, and real-time DML (Data Manipulation Language) and DDL
(DataDefinitionLanguage)replication.
Replicate uses memory-resident streaming to achieve second and subsecond replication latency. It is
multithreadedforhighscalability.Itprovideswebinterfacesforconfigurationandmanagement.
If the database provides an external interface (such as ODBC or JDBC) to either the source or the target
database, no software agent need be installed on these systems. Rather, Replicate is installed on a
Windows or Linux Replication Server. Attunity calls this configuration its “zero-footprint” feature.
Alternatively, Replicate agents may be installed on the source and/or target systems. If Replicate agents
are installed on both the source and target systems, the intermediate Replication Server system is not
required.
Replicate Architecture
Replicateisorganizedintothreedomains:
 thesourcedatabase.
 theReplicationServer(ifrequired).
 thetargetdatabase.
1
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

ReplicationServer
Inits “zero-footprint” configuration withnoagents storedoneither thesourceor targetsystems,Replicate
uses a stand-alone Replication Server running Linux or Windows to read the change log of the source
system and to apply changes to the target system. Changes for a transaction are buffered in the
Replication Server and are applied to the target database only as completed transactions. Therefore, the
targetsystemalwaysprovidesdataintegrity.
The Replication Server can perform data transformations on the data as it replicates it. Web-based
interfaces are available to configure the replication (Click-2-Replicate Designer) and to manage the
replicationprocessinrealtime(AttunityReplicateConsole).
Multiple multithreaded Replication Servers can be configured to achieve whatever throughput is required.
A Replication Server can be configured in a bidirectional mode to support active/active architectures. To
dothis,tworeplicationthreadsarecreatedintheReplicationServer,oneforreplicationineachdirection.
TheReplicationServermayrunonanyofthefollowingplatforms:
LinuxRedHat
WindowsServer7x64
WindowsServer2008R2x64
WindowsServer2012and2012R2x64
Windows7x64
TheReplicationServerscanbeconfiguredasaredundantpairinordertoavoidasinglepointoffailurein
thereplicationchannel.
If thesourceandtargetReplicateagents are installed onthesourceandtargetsystems,theintermediate
Replication Server system is not needed. Replication proceeds directly via communication from the
Replicateagentonthesourcesystemtothereplicationagentonthetargetsystem.
BulkLoading
The first step in establishing replication with Replicate is to create copies of the source database
structures on the target system. The target database metadata is derived from the source database
metadata, with appropriate transformations defined by the user. The source data is then read from the
source-databasetablesandfiles viatheReplicateBulk Reader,andthesetables andfilesarecopiedinto
thetargetdatabaseviatheBulkLoader.
There is no need to stop the source applications during the load process. Rather, changes to the source
database during the load are buffered and are applied to the target database after the initial load has
completed. Therefore, the target database maybe inconsistent during the load but will be fullyconsistent
followingtheapplicationofallchangesthatoccurredduringtheload.
If changes cannotbeappliedto the targetdatabaseinareasonable time,theyarebuffereduntiltheycan
be applied. This avoids the roll-over problem in which the change log is archived and is no longer
availableonlinetoprovidechanges.
The bulk load can be interrupted at any time and then restarted. New tables can be added during the
load,andcolumnscanbeaddedordroppedwithouttheneedtoreload.
ChangeReplication
Replicate replicates both data (DML) changes and schema (DDL) changes in real time. All changes can
besubjecttotransformationasreplicationproceeds.
2
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

DataChanges
Replicate obtains a stream of data changes (DML changes – inserts, updates, deletes) from the source
system’schangelogs.Replicatebuffersthechangeswithinthescopeofatransactionuntilithasreceived
the complete transaction and then applies the transaction to the target system. In this way, the target
systemalwaysmaintainsdataintegrity.
The source system’s change logs are read by the Transaction Log Reader, which sends the changes to
the Change Data Capture (CDC) facility resident in the Replication Server. If the source system provides
a means for the Replication Server to read the change log, no Replicate agent need be present on the
source system. The Replication Server can read the changes directly. Otherwise, the Transaction Log
Reader is installed on the source system as a Replicate agent to read the change log and to feed the
changestotheCDCresidentontheReplicationServer.
When a complete transaction has been assembled in the Replication Server, it is loaded into the target
database via the Replicate Stream Loader. If the target database provides external access (for instance,
via ODBC or JDBC), the Replication Server updates the target database directly with no need for a
Replicate agent on the target system. Otherwise, a Replicate agent is installed on the target system to
applyreplicatedtransactionstothetargetdatabase.
The location of the last replicated transaction is maintained. This allows Replicate to recover rapidly from
interruptionsandfailuresandtoguaranteetransactiondelivery.
Replicatereplicates structured,semi-structured,andunstructureddatabases.If thesourcesystem usesa
non-relational database that does not create a change log, a Replicate agent is installed to capture
changestothedatabaseandtosendthemtotheReplicationServer.
Replicate provides homogeneous and heterogeneous replication. Data can be replicated from any
supportedsourcedatabase toanysupportedtargetdatabase.Thestream of events readfrom thesource
changelogscanbefilteredandtransformedtomeettheneedsofthetargetdatabase.
SchemaChanges
Replicate also replicates source database schema (DDL) changes to the target database. This includes
addingordeletingfilesortables,addingordeletingcolumns,andmakingchangestodataformats.
Schema replication is used initially to create the target database structures prior to a bulk load. Once the
target database has been loaded and is operational, schema replication continues to keep the target
databasestructuresynchronizedwiththatofthesourcedatabase.
Transformation
Replicateusesthesourcedatabasemetadataandthetargetdatabasemetadatatomapsourcedatabase
changes into appropriate target database changes. A subset of the tables and columns can be selected
forreplication.Content-basedrow-levelfilteringcanbedefinedtoavoidreplicatingunimportantdata.
According to user specifications entered via the Click-2-Replicate facility, data can be transformed
between the source and target systems. Tables and columns can be added, deleted, or renamed. The
datatypeorlengthofanycolumncanbechanged.
For transformations not supported by Replicate, there are currently no means provided for the user to
insert code for specialized transformations into the Replication Server’s transformation facility. However,
thisfeatureisonReplicate’sroadmap.
3
©2014SombersAssociates,Inc.,andW.H.Highleyman
Fordiscussion,contacteditorest.com

Zero-Footprint
As described above, if the source and target systems offer means for external access of their databases,
no Replicate agent need be installed on them. Rather, the replication functions (source and/or target) are
providedbytheReplicationServersystem.Attunitycallsthisits“zero-footprint”architecture.
The source system requires an interface that allows CDC to read the change logs directly. If no interface
is available, or if the vendor-supplied interface is insufficient or inefficient, Replicate installs an agent on
thesourcesystem tocapturechangesandtosendthem totheReplicationServer.Thisagentmaybethe
TransactionLogReader.
Likewise, if the target system is not provided with an interface for directly updating the target files or
tables, or if the vendor-supplied interface is insufficient or inefficient, Replicate will install an agent on the
target system to apply transactions to the target database. If a Replicate agent is installed on both the
sourceandtargetsystems,theReplicationServersystemmaynotberequired.
Examples of database access facilities that can be used by Replicate to directly access a database
includeJDBC(JavaDatabaseConnectivity),ODBC(OpenDatabaseConnectivity),andMicrosoft’s.Net.
Scalability
Replicate is designed to be highlyscalable. Change replication is via in-memorystreaming. There are no
intermediate disk-storage points, so replication latency (the time from when a transaction is committed to
the source system to the time that it is applied to the target database) is minimal. Attunity claims
replication-latencyintervalsinthesecondtosubsecondrange.
MultiplereplicationthreadscanbedeployedonthesameReplicationServerhardwareplatformtoprovide
additional replication capacity. Each replication thread is assigned specific tables or files to replicate. All
related tables or files must be replicated by a single replication thread since transactions flowing over
separate replication threads may be completed out of order at the target database. For instance, if a
parent table is replicated by a different replication thread than its child table, transactions adding a child
mayoccurbeforetheparentiscreated,resultinginaviolationofreferentialintegrity.
Multithreading can also be used to implement redundancy of the Replication Server hardware platforms.
Two Replication Servers can be provided – one replicating one set of tables and the other replicating the
other tables. Should a Replication Server fail, the surviving Replication Server takes over the replication
ofalltables.
The use of multiple threads in the same Replication Server or in multiple Replication Servers also
providesfastparallelloadingfordatawarehouses.
Replicate optimizes the communication of
changes over WAN networks. Attunity’s
TurboStream DX is a WAN transfer engine
that optimizes transfer speeds to target
databaseslocatedoff-premiseorinacloud.
Topologies
Replicatesupportsseveraltopologies:
