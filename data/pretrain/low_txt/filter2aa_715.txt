# DEFCON 2007 Presentation: Faster PwninG Assured: New Adventures with FPGAs

**Presenter: David Hulton**
- **Chairman, ToorCon**
- **Security R&D, Pico Computing, Inc.**
- **Researcher, The OpenCiphers Project**

## Overview
- **FPGAs: Quick Introduction**
- **New Cracking Tools (Since ShmooCon)**
  - **BTCrack: Bluetooth Authentication**
  - **WinZipCrack: WinZip AES Encryption**
- **New in 2007 (Since Last Defcon)**
  - **VileFault: Mac OS-X FileVault**
  - **jc-aircrack: WEP (FMS)**
- **Works in Progress**
- **Conclusions**

## FPGAs: Quick Introduction
- **General Purpose Logic Chip**
  - ANDs, ORs, XORs
  - FlipFlops (Registers)
  - BlockRAM (Cache)
  - DSP48s (ALUs)
  - DCMs (Clock Multipliers)
- **Example: Virtex-4 LX25**
  - IOBs (448)
  - Slices (10,752)
  - DCMs (8)
  - BlockRAMs (72)
  - DSP48s (48)
  - Programmable Routing Matrix (~18 layers)

## Bluetooth PIN Cracking
- **Similar to Wi-Fi Authentication**
- **Why Crack the Bluetooth PIN?**
  - Uses a modified version of SAFER+
  - SAFER+ inherently runs faster in hardware
  - Attack originally explained by Yaniv Shaked and Avishai Wool
  - Thierry Zoller demonstrated his implementation at hack.lu

### How It Works
- **Capture Bluetooth Authentication**
  - Requires an expensive protocol analyzer
- **Authentication Process**
  - Master sends a random nonce
  - Both sides create a key based on the PIN
  - Master sends a random number, slave hashes with E1 and replies
  - Slave sends a random number, master hashes with E1 and replies

### Implementation
- **Try a PIN and check if the hashes match the capture**
- **Key Space**: Extremely small (10^16) due to numeric PINs
- **Command Line Tool**: Works on all systems with or without FPGA(s)
- **FPGA Implementation**
  - Requires implementations of E21, E22, and E1
  - Uses a 16-stage pipeline version of SAFER+

### Performance Comparison
- **PC (btpincrack)**
  - 3.6GHz P4: ~40,000/sec
  - BTCrack: 3.6GHz P4: ~100,000/sec
  - 0.24 seconds to crack 4-digit PIN
  - 42 minutes to crack 8-digit PIN
- **FPGA (btpincrack)**
  - LX25: ~7,000,000/sec
  - 15 Cluster: ~105,000,000/sec
  - LX50: ~10,000,000/sec
  - 0.001 seconds to crack 4-digit PIN
  - 10 seconds to crack 8-digit PIN

## WinZip AES Encryption
- **Somewhat Proprietary Standard**
- **No Open Source Code Available (Until Now!)**
- **Format**
  - Standard ZIP format
  - New compression type (99)
  - PBKDF2 (1000 iterations) for key derivation
  - Supports 128/192/256-bit key lengths
  - 16-bit verification value for password verification
  - Uses a salt (prevents dictionary attacks)

### Cracking Algorithm
- **Scan ZIP file for encrypted files**
- **Get 16-bit password verification value**
- **Hash password with PBKDF2 and compare verification values**
- **Decrypt file and verify checksum if verification value matches**

### Performance Comparison
- **PC (winzipcrack)**
  - 800MHz P3: ~100/sec
  - 3.6GHz P4: ~180/sec
  - AMD Opteron: ~200/sec
  - 2.16GHz Intel Duo: ~200/sec
- **FPGA (winzipcrack)**
  - LX25: ~2,000/sec
  - LX50: ~6,000/sec
  - 15 Cluster: ~30,000/sec

## VileFault: Mac OS-X FileVault
- **FileVault encrypts home directory using AES-128**
- **DMG file is mounted at login**
- **Encryption in 4kByte chunks, CBC mode**
- **Keys are wrapped in the header using 3DES-EDE**
- **Two header formats (v1, v2)**
  - Version 2 supports RSA-encrypted headers

### Cracking Method
- **PBKDF2 for password hashing**
- **Modified WPA attack for FileVault**
- **Tools**
  - **vfdecrypt (Ralf-Philip Weinmann & Jacob Appelbaum)**
    - Decrypts DMG file and outputs unencrypted DMG
  - **vfcrack (David Hulton)**
    - Unwraps header and uses PBKDF2 with possible passphrases
    - Decrypts beginning of DMG file and verifies first sector

### Other Attacks
- **Swap File**: Key can be paged to disk
- **Hibernation**: Extract FileVault key from hibernation file
- **Ring-0 Code**: Can find key in memory
- **Weakest Link**: Login password is the same as FileVault password
- **Salted SHA-1 vs. PBKDF2**: Salted SHA-1 is faster to crack
- **RSA Key**: Easier to crack than PBKDF2

### Performance Comparison
- **PC (vfcrack)**
  - 800MHz P3: ~100/sec
  - 3.6GHz P4: ~180/sec
  - AMD Opteron: ~200/sec
  - 2.16GHz Intel Duo: ~200/sec
- **FPGA (vfcrack)**
  - LX25: ~2,000/sec
  - LX50: ~6,000/sec
  - 15 Cluster: ~30,000/sec

## jc-aircrack
- **Johnny Cache added FPGA support to jc-aircrack**
- **Uses standard aircrack statistical methods**
- **Helps with smaller capture files**
- **Offloads brute forcing of lower key byte possibilities to the FPGA**
- **Performance**
  - Typically gets about 30x speed increase when brute forcing

## Works in Progress
- **GSM A5/1**
  - Real working open-source implementation
  - Can capture GSM packets
  - Can break A5/1 using different methods
  - Check out the talk at CCCamp

## Conclusion
- **Get an FPGA and start cracking!**
- **Make use of your hardware to break crypto**
- **<64-bit keys just don't cut it anymore**
- **Choose bad passwords (please!)**

## Hardware Used
- **Pico E-12**
  - Compact Flash
  - 64 MB Flash
  - 128 MB SDRAM
  - Gigabit Ethernet
  - Optional 450MHz PowerPC 405
- **Pico E-12 Super Cluster**
  - 15 - E-12’s
  - 2 - 2.8GHz Pentium 4’s
  - 2 - 120GB HDD
  - 2 - DVD-RW
  - 550 Watt Power Supply

## Future Hardware
- **Pico E-16**
  - ExpressCard 34
  - Works in MacBook Pros
  - 2.5Gbps full-duplex
  - Virtex-5 LX50 (~2x faster)
  - 32MB SRAM
  - External ExpressCard Chip
  - Made for Crypto Cracking
  - More affordable

## Thanks
- **Johny Cache (airbase/jc-wepcrack/jc-aircrack)**
- **Jacob Appelbaum & Ralf-Philip Weinmann (FileVault)**
- **Thierry Zoller & Eric Sesterhenn (BTCrack)**
- **Viewers like you**

## Contact Information
- **David Hulton**
- **Email: PI:EMAIL**
- **Website: [OpenCiphers](http://openciphers.sf.net), [Pico Computing](http://www.picocomputing.com), [ToorCon](http://www.toorcon.org), [802.11mercenary](http://www.802.11mercenary.net)**

**Questions?**