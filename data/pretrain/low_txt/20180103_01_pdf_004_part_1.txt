# Collect Earth 1.1.1 User Manual

## A Guide to Monitoring Land Use Change and Deforestation with Free and Open-Source Software

### About the Publication
Copies of FAO-Open Foris Initiative publications can be requested from:
- **Food and Agriculture Organization of the United Nations**
- **Viale delle Terme di Caracalla, 00153 Rome, Italy**
- **E-mail:** [PI:EMAIL]
- **Website:** [www.openforis.org](http://www.openforis.org)

### Authors
- Adia Bey
- Alfonso Sanchez-Paus Diaz
- Anssi Pekkarinen
- Chiara Patriarca
- Danae Maniatis
- Daniel Weil
- Danilo Mollicone
- Giulio Marchi
- Juho Niskala
- Marcelo Rezende
- Stefano Ricci

**Forestry Department, Open Foris Initiative, Food and Agriculture Organization of the United Nations**

**June 2015**

---

## Acknowledgements

Collect Earth was developed under the National Forest Monitoring and Information Systems (NFMIS) project to promote transparent and truthful REDD+ processes. The authors would like to thank the following organizations for their generous support:

- **Food and Agriculture Organization of the United Nations**
- **German Federal Ministry for the Environment, Nature Conservation, and Nuclear Safety**
- **International Climate Initiative**

Through the NFMIS project, the authors partnered with eighteen countries to deploy Collect Earth to address their land use monitoring needs. Additionally, the United Nations Programme on Reducing Emissions from Deforestation and forest Degradation (UN-REDD) enabled three more countries to participate in the project. Early feedback from the Papua New Guinea Forest Authority and other countries was particularly useful for improving Collect Earth.

The authors also extend their gratitude to the following countries for their fruitful collaboration:
- Algeria
- Argentina
- Bhutan
- Brazil
- Chile
- Colombia
- Fiji
- Ghana
- Kyrgyzstan
- Lao People's Democratic Republic
- Mongolia
- Morocco
- Mozambique
- Peru
- Philippines
- South Africa
- Tajikistan
- Thailand
- Tunisia
- Uruguay
- Zambia

Collect Earth is a product within the Open Foris software suite. The authors are honored to be part of the Open Foris Initiative, launched by the FAO-Finland Technical Cooperation program to develop free and open-source tools for forest monitoring. The Open Foris and UN-REDD teams include experienced software developers, geospatial analysts, and foresters. Their insightful suggestions have been invaluable. The Collect Earth team would like to thank the following individuals, in particular, for their contributions: … [List of individuals]

---

## Acronyms

- **API**: Application Programming Interface
- **AVHRR**: Advanced Very High Resolution Radiometer
- **CGIAR-CSI**: Consultative Group on International Agricultural Research, Consortium for Spatial Information
- **EC**: European Commission
- **EVI**: Enhanced Vegetation Index
- **FAO**: Food and Agriculture Organization of the United Nations
- **GEE**: Google Earth Engine
- **GPS**: Global Positioning System
- **IDE**: Integrated Development Environment
- **IPCC**: Intergovernmental Panel on Climate Change
- **LAI**: Leaf Area Index
- **LUCAS**: European Commission’s Land Use/Cover Area Frame Survey
- **LULUCF**: Land Use, Land-Use Change, and Forestry
- **MODIS**: Moderate-Resolution Imaging Spectroradiometer
- **NASA**: National Aeronautics and Space Administration
- **NDVI**: Normalized Difference Vegetation Index
- **NDWI**: Normalized Difference Water Index
- **NOAA**: National Oceanic and Atmospheric Administration
- **PNG**: Papua New Guinea
- **REDD**: Reducing Emissions from Deforestation and Forest Degradation
- **RS**: Remote Sensing
- **SRTM**: Shuttle Radar Topography Mission
- **TOA**: Top of Atmosphere
- **UNEP**: United Nations Environment Programme
- **UNFCCC**: United Nations Framework Convention on Climate Change
- **USGS**: United States Geological Survey

---

## Contents

1. **Introduction to Collect Earth and its Supporting Software**
   - 1.1 Collect Earth System Architecture
   - 1.2 Collect Earth System Maintenance

2. **Getting Started**
   - 2.1 Installation and Setup of Collect Earth
   - 2.2 Setting Up Google Earth

3. **Assessing Land Use and Land Use Change**
   - 3.1 Land Use Sampling with Collect Earth
     - 3.1.1 Adding Collect Earth Data Files
     - 3.1.2 Entering Land Use Data
     - 3.1.3 Modifying the Plot Layout
     - 3.1.4 Exporting Collect Earth Data
     - 3.1.5 Backing Up Collect Earth Data
   - 3.2 Navigating and Organizing with Google Earth
     - 3.2.1 Optimizing the Data View
     - 3.2.2 Finding Plots
     - 3.2.3 Improving Navigation
     - 3.2.4 Measuring Distance
     - 3.2.5 Viewing Historical Imagery
     - 3.2.6 Exporting Images
     - 3.2.7 Adding Overlays
     - 3.2.8 Saving KMZ Files
   - 3.3 Exploring New Perspectives with Bing Maps
   - 3.4 Visualizing Imagery with Google Earth Engine

4. **Analyzing Data with Saiku Server**
   - 4.1 Data Visualization
   - 4.2 Filtering Data
   - 4.3 Saving and Opening Queries
   - 4.4 Export Options
   - 4.5 Sample Queries for LULUCF Monitoring

5. **Processing Geospatial Data with QGIS**
   - 5.1 Installation and Setup of QGIS
   - 5.2 Exporting Vector Files to Google Earth and Google Earth Engine
   - 5.3 Exporting Raster Files to Google Earth
   - 5.4 Creating a Sampling Grid for Collect Earth
     - 5.4.1 Identify the Spatial Extent for the Grid
     - 5.4.2 Create a Basic Grid with Round Numbers
     - 5.4.3 Reduce the Grid Layer to Only the Areas of Interest
     - 5.4.4 Add Coordinates to the Grid’s Attributes Table
     - 5.4.5 Acquire SRTM Digital Elevation Data
     - 5.4.6 Derive Slope and Aspect Data from Digital Elevation Data
     - 5.4.7 Add Elevation, Slope, and Aspect Data to the Grid
     - 5.4.8 Format the Grid as a CSV Compatible with Collect Earth

6. **Synergies Between the Collect Earth Sampling and Wall-to-Wall Mapping**
   - 6.1 Preparing Vector Data in Google Fusion Tables
     - 6.1.1 Importing Collect Earth Data into Google Fusion Tables
     - 6.1.2 Importing KMLs into Google Fusion Tables
   - 6.2 Getting Started with Google Earth Engine
   - 6.3 Google Earth Engine (GEE) API Playground
     - 6.3.1 Vegetation Indices
     - 6.3.2 Creating a Sampling Grid for Collect Earth Using GEE API Code Editor
   - 6.4 Collect Earth Data as Training Sites for Supervised Classification
     - 6.4.1 Add Collect Earth Vector Data
     - 6.4.2 Add Raster Data (Landsat and MODIS)
     - 6.4.3 Extract and Apply the Water Mask
     - 6.4.4 Extract the Area of Interest
     - 6.4.5 Train a Classifier
     - 6.4.6 Train a Classifier and Display Results
     - 6.4.7 Review Classification Results
     - 6.4.8 Exporting Results
     - 6.4.9 Saving and Sharing Results

7. **Advanced Collect Earth Functionalities**
   - 7.1 Application and Data Folder
   - 7.2 Importing a KML with Placemarks
     - 7.2.1 Creating a .kml File in Google Earth
     - 7.2.2 Importing a .kml File to Collect Earth
   - 7.3 Find Plots Not Yet Assessed
     - 7.3.1 Preparations
     - 7.3.2 Importing the Missing Plots into Collect Earth
   - 7.4 Printing Out the Application Log
   - 7.5 Updating Collect Earth
     - 7.5.1 Updating Automatically
     - 7.5.2 Updating Manually
   - 7.6 Updating Data on Plots Already Collected
   - 7.7 Setting Up a PostgreSQL Database
     - 7.7.1 Install PostgreSQL
     - 7.7.2 Configure the Database
     - 7.7.3 Set Up Collect Earth

---

## 1. Introduction to Collect Earth and its Supporting Software

### 1.1 Collect Earth System Architecture

Collect Earth is a user-friendly, Java-based tool that integrates with various software to facilitate data collection. This manual includes guidance on using Collect Earth and its supporting software. Additional information is available online and in video format at [www.openforis.org](http://www.openforis.org). Documentation on technical components, such as SQLite and PostgreSQL, is available on the Collect Earth GitHub page. Collect Earth runs on Windows, Mac, and Linux operating systems.

#### Collect Earth

Collect Earth uses a Google Earth interface and an HTML-based data entry form. Forms can be customized to align with country-specific classification schemes, consistent with guidelines from the IPCC, EC, FAO, and other international entities. The default form includes IPCC-consistent land use categories and sub-categories, along with land use subdivisions from the European Commission’s LUCAS. For guidance on customizing the data entry form, visit the Collect Earth GitHub page. Chapter 3 explains the process of reviewing satellite imagery, assessing land use and land use change, and assigning attributes to sampling points through the Collect Earth data form.

#### Google Earth, Bing Maps, and Google Earth Engine

Collect Earth facilitates the interpretation of high and medium spatial resolution imagery in Google Earth, Bing Maps, and Google Earth Engine. Google Earth’s virtual globe primarily consists of 15-meter resolution Landsat imagery, 2.5m SPOT imagery, and high-resolution imagery from various providers. Bing Maps presents imagery ranging from 3m to 30cm resolution. Google Earth Engine’s web-based platform provides access to 30m resolution Landsat imagery from the USGS. Collect Earth synchronizes the view of each sampling point across all three platforms.

The imagery in these platforms differs in both spatial and temporal resolution. Collect Earth allows users to enter data on current land use and historical land use changes. Users can determine the reference period most appropriate for their objectives. The IPCC recommends a reference period of at least 20 years based on the time needed for dead organic matter and soil carbon stocks to reach equilibrium after land-use conversion. Most imagery in Bing Maps and Google Earth has been acquired at irregular intervals over the past 10 years, while Google Earth Engine contains over 40 years of imagery acquired every 16 days. Chapter 3 provides guidance on navigating these repositories to develop a comprehensive understanding of land use, land use change, and forestry in a given site.

#### SQLite and PostgreSQL

Data entered in Collect Earth is automatically saved to a database. For single-user environments, a SQLite database is used, which is suitable for individual users or geographically dispersed teams. For multi-user environments, especially those working on a shared network, a PostgreSQL database is recommended. The PostgreSQL configuration facilitates collaborative work by allowing real-time updates and making it easier for administrators to review and control the quality of the data.

#### Saiku Server

Both types of databases automatically populate Saiku Server, an open-source, web-based software produced by Meteorite Consulting. A version of this software has been customized for visualizing and analyzing Collect Earth data. Countries using Collect Earth for national land use assessments may generate data for tens of thousands of points. Saiku organizes this information and enables users to run queries and view results in tabular format or as graphs. Chapter 4 explains how to use Saiku to identify trends and prepare inputs for LULUCF reporting to the UNFCCC and other entities.

#### Google Earth Engine (Image Processing and Analysis)

Collect Earth uses a sampling approach for land use assessment rather than wall-to-wall mapping. However, land use data generated with Collect Earth can be used as training sites for wall-to-wall image classifications. Chapter 6 reviews the procedure for using Collect Earth data to conduct supervised classifications in Google Earth Engine.

#### QGIS

QGIS is a free and open-source geographic information system that can process data to support land use classification. Users can convert existing land use or land cover data in spatial formats (vector and raster) into KML files for viewing in Google Earth during a land use classification with Collect Earth. KML files are also compatible with Google Fusion Tables and can be imported into Google Earth Engine. Chapter 5 provides instructions on converting spatial data and creating a sampling grid. A default, coarse (5km x 5km) grid of sampling points is available for download on the Collect Earth website. For a full and robust LULUCF assessment, a medium or fine-scale grid with more points is recommended. Chapter 5 explains the process of generating a sampling grid and populating its attributes table for compatibility with Collect Earth.

### 1.2 Collect Earth System Maintenance

Collect Earth is continuously being improved. The software and its components (Java, Google Earth, etc.) will need to be updated as new releases become available. The Collect Earth development team will notify users of future releases and recommended upgrades through the Collect Earth website, its GitHub page, and the Collect Earth users’ network. To subscribe to the network’s listserv, visit the Collect Earth website.

---

## 2. Getting Started

### 2.1 Installation and Setup of Collect Earth

Collect Earth and most of its supporting software (Java Runtime Environment, Java Development Kit, and Saiku Server) are bundled together in a single installer. A basic version of the software can be downloaded from the Collect Earth webpage.

1. Double-click the installer and follow the instructions to complete the installation.
2. English is the default language. Spanish and French versions are also available.
3. Accept the license agreement and click Next.
4. Click Next to install Collect Earth on your C drive, or browse to select an alternate location.
5. Click Next here and on the subsequent window to begin the installation.
6. When the installation is complete, click Finish.
7. If a security warning pops up due to your computer’s firewall settings, click Allow Access.
8. Once installed, click on the Collect Earth Launcher in the Windows Start Menu to launch the application.
9. In the main Collect Earth control window, start by setting up the Operator. An operator is a person who will enter or edit data in the Collect Earth system. Data can be filtered by operator name. Type an operator name between 6 and 50 characters long, then click Update.
10. Click on the Tools tab and select Properties.
11. Under the Advanced tab, ensure the boxes are checked to automatically back up the database, open Earth Engine zoomed into the plot area, and open Bing Maps.
12. Optional settings include selecting your preferred web browser and navigating to the browser’s executable file.
13. Language settings can also be adjusted under the Tools tab.

### 2.2 Setting Up Google Earth

1. Visit the Google Earth website to download the latest version.
2. Accept Google Earth’s privacy agreement and download the installer.
3. Double-click the file to install Google Earth.
4. Click on the Google Earth window to adjust the settings.
5. Click on the Tools tab and select Options.
6. Under the General tab, adjust the language settings. Google Earth is available in English, French, Spanish, and other languages.
7. Adjust the Fly-to-Speed and Navigation settings. Speeding up the Fly-to-Speed will reduce the time it takes to zoom to a plot. It is easier to view land use if Google Earth does not tilt when zooming to a plot.
8. Click OK to save the settings.

---

## 3. Assessing Land Use and Land Use Change

### 3.1 Land Use Sampling with Collect Earth

Land use classification schemes can vary greatly by country or program. Several country-specific versions of Collect Earth have been configured, as well as versions consistent with leading international guidelines (e.g., IPCC, FAO Forest Resources Assessment). This manual uses the Papua New Guinea Collect Earth version as an example to explore the basic functionality of the software and its supporting tools. To browse other available versions of Collect Earth and view the underlying land use classification scheme, visit the Collect Earth website.

1. Launch Collect Earth by navigating to the Collect Earth folder and double-clicking on the batch file entitled "Click_to_run_Collect_Earth."
2. In the main Collect Earth window, type in your operator name and click Update. Use a consistent operator name between 6 and 50 characters long.

---

This revised and structured version of the text should provide a clearer, more professional, and coherent guide for users.