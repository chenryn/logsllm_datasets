# Characterizing and Enforcing Consistency of Online Services

## Title: Characterizing the Consistency of Online Services (Practical Experience Report)

### Author: 
Filipe Freitas, João Leitão, Nuno M. Preguiça, Rodrigo Rodrigues

### Filipe Bastos de Freitas
**Master of Science**

**Thesis submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy in Computer Science**

**Adviser:**
- Rodrigo Seromenho Miragaia Rodrigues, Full Professor, Lisbon University

**Co-adviser:**
- João Carlos Antunes Leitão, Assistant Professor, Nova University of Lisbon

**Examination Committee:**
- **Chair:** José Augusto Legatheaux Martins
- **Rapporteurs:**
  - Etienne Rivière
  - João Nuno de Oliveira e Silva
- **Members:**
  - Rodrigo Seromenho Miragaia Rodrigues
  - José Augusto Legatheaux Martins
  - José Orlando Pereira
  - João Manuel dos Santos Lourenço

**March 2019**

---

## Abstract

While numerous proposals exist for specifying and implementing various consistency models, there is limited knowledge about the consistency currently offered by widely used online services. This information is crucial not only for setting appropriate user expectations and justifying observed behaviors but also for enhancing the development of applications that utilize these services' APIs and for creating tools to facilitate this process. To address this gap, the first part of this thesis presents a measurement study of the consistency of the APIs provided by four popular internet services: Facebook Feed, Facebook Groups, Blogger, and Google+. Our methodology involves a small set of tests designed to probe these services from a user's perspective, aiming to uncover consistency anomalies. The data collected over several weeks reveal that some of these services exhibit consistency anomalies, including behaviors that may seem counter-intuitive to users, such as the lack of session guarantees for write monotonicity. These findings highlight the need for developers to manage consistency anomalies to provide the necessary consistency guarantees.

In the second part of this thesis, we propose a middleware solution to enforce consistency guarantees on existing systems. This middleware, deployed between the application and the service, enables fine-grained control over the session guarantees that define the consistency semantics of these APIs, without requiring access to the underlying service's implementation. Our solution intercepts all client interactions with the online service and uses four different algorithms to enforce each session guarantee and their combinations. We evaluated our middleware using the Facebook public API and the Redis data store, demonstrating its ability to provide fine-grained control over consistency semantics with minimal local storage and modest latency overhead.

**Keywords:** Consistency, Distributed Computing, Middleware

---

## Resumo

Existem várias propostas para a implementação e especificação de modelos de consistência. No entanto, há pouca informação sobre a consistência oferecida por serviços online utilizados por milhões de usuários. Este conhecimento é importante não apenas para estabelecer expectativas corretas e justificar o comportamento observado pelos usuários, mas também para melhorar o desenvolvimento de aplicações que utilizam as APIs desses serviços e para criar ferramentas que facilitam esse processo. Para preencher essa lacuna, a primeira parte desta tese apresenta um estudo de medição da consistência das APIs fornecidas por quatro serviços populares na Internet: Facebook Feed, Facebook Groups, Blogger e Google+. O método empregado utiliza um conjunto pequeno de testes projetados para avaliar violações de garantias de consistência desses serviços do ponto de vista do usuário. Os dados coletados ao longo de várias semanas revelam que alguns desses serviços exibem anomalias de consistência, incluindo comportamentos que podem parecer contraintuitivos aos usuários, como a falta de garantias de sessão para escritas monotônicas. Esses resultados destacam a necessidade de os programadores lidarem com anomalias de consistência para fornecer as garantias de consistência necessárias.

Na segunda parte desta tese, propomos uma solução de middleware para impor garantias de consistência em sistemas existentes. Este middleware, implantado entre a aplicação e o serviço, permite controle granular sobre as garantias de sessão que compõem a semântica de consistência dessas APIs, sem a necessidade de acesso à implementação do serviço subjacente. Nossa solução intercepta todas as interações do cliente com o serviço online e utiliza quatro algoritmos diferentes para impor cada garantia de sessão e suas combinações. Avaliamos nosso middleware usando a API pública do Facebook e o serviço de dados Redis, demonstrando sua capacidade de fornecer controle granular sobre as garantias de consistência com custo de armazenamento mínimo e sobrecarga de latência moderada.

**Palavras-chave:** Consistência, Computação Distribuída, Middleware

---

## Contents

1. **Introduction**
   - 1.1 Contributions
   - 1.2 Publications
   - 1.3 Document Organization

2. **Background and Related Work**
   - 2.1 Online Services
   - 2.2 Consistency
   - 2.3 Replication and Consistency Anomalies
     - 2.3.1 Single-Master Replication
     - 2.3.2 Multi-Master Replication
   - 2.4 Consistency Studies
   - 2.5 Middleware Solutions for Enforcing Consistency

3. **Measurement Study**
   - 3.1 Operations
   - 3.2 Defining Consistency Anomalies
     - 3.2.1 Session Guarantees
     - 3.2.2 Divergence
     - 3.2.3 Quantitative Metrics
   - 3.3 Measurement Methodology
     - 3.3.1 Time Synchronization
     - 3.3.2 Tests
   - 3.4 Results
     - 3.4.1 Overall Results
     - 3.4.2 Session Guarantees
     - 3.4.3 Divergence
     - 3.4.4 Quantitative Metrics
   - 3.5 Comparison to Related Work
   - 3.6 Summary

4. **Fine-Grained Consistency for Online Services**
   - 4.1 Target Systems
   - 4.2 System Overview
     - 4.2.1 Architecture
     - 4.2.2 Overview
   - 4.3 Algorithms
     - 4.3.1 Read Your Writes
     - 4.3.2 Monotonic Reads
     - 4.3.3 Monotonic Writes
     - 4.3.4 Writes Follow Reads
     - 4.3.5 Combining Multiple Session Guarantees
     - 4.3.6 Corner Cases
     - 4.3.7 Progress
   - 4.4 Middleware Design
   - 4.5 Evaluation
     - 4.5.1 Facebook Results
     - 4.5.2 Redis Results
   - 4.6 Arguments of Correctness
     - 4.6.1 Read Your Writes
     - 4.6.2 Monotonic Reads
     - 4.6.3 Monotonic Writes
     - 4.6.4 Writes Follow Reads
     - 4.6.5 Combining Multiple Session Guarantees
   - 4.7 Comparison with Related Work
   - 4.8 Summary

5. **Conclusions**
   - 5.1 Future Work

**Bibliography**

**List of Figures**
- 2.1 Service Layers
- 2.2 Single-Master Replication
- 2.3 Single-Master Replication, Example with One Client
- 2.4 Single-Master Replication, Example with Two Clients
- 2.5 Multi-Master Replication
- 2.6 Multi-Master Replication, Example with One Client
- 2.7 Multi-Master Replication, Example with Two Clients
- 3.1 Measurement Study Method Overview
- 3.2 Timeline for Test 1 with Three Agents
- 3.3 Timeline for Test 2 with Three Agents
- 3.4 Content Divergence Where Computed Window is Zero
- 3.5 Agents Geographical Distribution
- 3.6 Percentage of Tests with Observations of Different Anomalies
- 3.7 Distribution of Read Your Writes Anomalies per Test
- 3.8 Distribution of Monotonic Writes Anomalies per Test

---