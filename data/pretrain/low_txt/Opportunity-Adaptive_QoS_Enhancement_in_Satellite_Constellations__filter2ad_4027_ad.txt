### 4.3 Evaluation Results

To analyze the QoS (Quality of Service) gains from using the OAQ (Opportunity-Adaptive Quality) algorithm, we also computed the measure for the basic fault-adaptive QoS enhancement (BAQ) scheme for comparison. The BAQ scheme involves a constellation equipped with in-orbit spares and protected by scheduled and threshold-triggered ground-spare deployment policies but does not employ the opportunity-adaptive algorithm. Under the BAQ scheme, when a signal is detected, a geolocation result is delivered after the initial computation based on either single or simultaneous coverage, implying that QoS level 2 is not applicable.

#### Constituent Measure P(Y = y | k)

We first evaluated the constituent measure \( P(Y = y | k) \) using Mathematica™, with the following parameter values: \(\tau = 5\), \(\mu = 0.5\), and \(\nu = 30\) (where \(\mu\) and \(\nu\) are the signal termination rate and iterative computation completion rate, respectively, and time is quantified in minutes). As described in Section 2, the values of \(\theta\) and \(T_c\) are 90 and 9, respectively, for the constellation in question.

The results show that the OAQ scheme can push the system's QoS toward the high end, ensuring the best possible quality even under severe structural degradation. Specifically, even when \(k = 12\) (indicating two more satellite failures after spare exhaustion and a total loss of 25% of nodes in the plane), there is a 0.44 probability that the constellation will still deliver a geolocation result rated at QoS level 3. In contrast, the evaluation reveals that the value of \(P(Y = 3 | 12)\) is only 0.20 with the BAQ scheme.

#### Constituent Measure P(k)

Next, we evaluated the other constituent measure \(P(k)\) using UltraSAN. The results are shown in Figure 7, where time is quantified in hours for \(\lambda\) (node failure rate) and \(\phi\) (time to scheduled ground-spare deployment), and \(\eta\) is the threshold for the number of operational satellites in a plane (meaning that ground-spare deployment will be triggered when \(k = \eta\)). From the curves, we observe that when protected by the scheduled and threshold-triggered ground-spare deployment policies, the full orbital-plane capacity (i.e., \(k = 14\)) will dominate when the node-failure rate \(\lambda\) is low. Conversely, the threshold capacity (i.e., \(k = \eta\)) tends to become dominant as the failure rate increases. For example, the value of \(P(10)\) in Figure 7 is very small when \(\lambda = 10^{-5}\), but it rapidly increases and becomes dominant as \(\lambda\) increases. This is because, as satellites become more vulnerable to failure, the capacity of an orbital plane is likely to drop toward the threshold sooner. However, the threshold-triggered ground-spare deployment policy prevents the scenario in which the plane’s capacity drops below the threshold, making the likelihood that the system operates at its threshold capacity dominant when \(\lambda\) is high.

#### Combined Measures P(Y = y) and P(Y ≥ y)

Using the results of the constituent measures and Equation (3), we evaluated \(P(Y = y)\) and \(P(Y \geq y)\). Figure 8 compares the probabilities that the OAQ and BAQ schemes will deliver a result rated at QoS level 3. For this evaluation, we set \(\eta\) to 12 and let \(\phi\) remain 30,000 hours (over 3 years). The curves show that under the OAQ scheme, the system will achieve level-3 QoS with a greater probability as the signal completion rate \(\mu\) decreases (i.e., mean signal duration increases). Specifically, when \(\mu\) decreases from 0.5 to 0.2, \(P(Y = 3)\) increases up to 38% over the domain of \(\lambda\) considered. In contrast, the same variation does not yield any differences in the behavior of the BAQ scheme. This exemplifies that the QoS gain from the use of the OAQ scheme is due to its awareness and exploitation of conditions that arise in the operational environment, while the BAQ scheme ignores potential opportunities.

Figure 9 displays the results of the QoS measure \(P(Y \geq y)\). The curves reveal that the OAQ scheme always makes the system significantly more likely to achieve higher levels of QoS than the BAQ scheme. For instance, when \(\lambda\) equals \(10^{-5}\), the OAQ scheme enables the system to achieve QoS level 2 or above with a probability of 0.75, while the BAQ scheme achieves this with a probability of only 0.33. When \(\lambda\) increases to \(10^{-4}\), the system will achieve a QoS level of 2 or above with a probability of 0.41 under the OAQ scheme, whereas the probability is reduced to 0.04 under the BAQ scheme. Nonetheless, the values of \(P(Y \geq 1)\) are always equal for both schemes (both are equal to 1 over the domain of \(\lambda\) we consider), meaning that OAQ and BAQ perform equally well with respect to guaranteeing the delivery of a result rated at QoS level 1 or above. These results confirm that the major advantage of the OAQ scheme is its ability to push a system’s performance to the high end of the QoS spectrum while ensuring the timely delivery of results with minimally acceptable quality.

#### QoS Measure as a Function of τ and Mean Signal Duration

We also evaluated the QoS measure as a function of \(\tau\). The results illustrate how the OAQ scheme achieves better QoS by taking full advantage of the "time allowance." Finally, when the QoS measure is evaluated as a function of the mean signal duration, we observe that the OAQ scheme is able to responsively treat a longer signal duration as an extended opportunity to achieve better geolocation quality.

### 5 Concluding Remarks

We have developed an approach to coordinated, progressive QoS optimization in satellite constellations. By allowing peer satellites to successively join the coordinated geolocation computation as they become ready to serve within the window of a dynamically determined opportunity, the OAQ algorithm can guarantee the timely delivery of geolocation results with the best possible quality.

The results of this effort are significant. First, the OAQ framework integrates satellite constellation and fault tolerance technologies. Although sequential localization has been studied and proven sound by the satellite research community, these techniques have not been considered as a solution for tolerating the loss of satellites in a constellation. The OAQ framework demonstrates a novel, yet practical application of this technology for fault tolerance in constellations that are vulnerable to structural degradation. Additionally, we exploit peer-to-peer message passing, commonly used for distributed fault tolerance, to enable dynamic, progressive peer-satellite coordination, eliminating the need for ground intervention.

Second, this effort shows that while the continuously changing readiness-to-serve of satellites creates many difficulties for fault tolerance, their mobile nature can indeed be exploited to enable novel utility of resource redundancy. More generally, from the perspective of fault tolerance in systems comprising large populations of mobile resources, our investigation demonstrates the feasibility of adapting, extending, and generalizing various existing fault tolerance concepts, such as analytic redundancy, data diversity, environment diversity, imprecise computation, and active/passive replication.

It is worth noting that the OAQ framework can be extended and generalized for many other applications. In particular, as researchers in the wireless networking area investigate advanced applications of TCP/IP and multicasting in satellite constellations, it will be feasible to extend the OAQ concept to adapt well-known fault tolerance schemes, including group membership protocols, for use in micro- and pico-satellite constellations. Accordingly, our current work is directed toward adapting group membership management techniques to the applications in the environments of distributed autonomous mobile computing.

### Acknowledgments

This work was performed in part by NASA’s Jet Propulsion Laboratory, California Institute of Technology, and was supported by DARPA/IXO. The authors are thankful to Vijay Raghavan of DARPA/IXO for his support and encouragement, to James Chase, David Collins, and Robert Shotwell of JPL for their untiring help and stimulating discussions, to Jenny Applequist of UIUC for her meticulous proofreading, and to anonymous reviewers for their valuable comments and suggestions.

### References

[1] J.-C. Laprie, editor, *Dependability: Basic Concepts and Terminology*, vol. 5 of *Dependable Computing and Fault-Tolerant Systems*. Vienna, Austria: Springer-Verlag, 1992.
[2] M. Gerla et al., “TCP/IP via satellite constellations,” in *Proceedings of the 4th European Workshop on Mobile/Personal Satcoms*, (London, UK), pp. 82–91, Sept. 2000.
[3] L. Wood, G. Pavlou, and B. Evans, “Managing diversity with handover to provide classes of service in satellite constellation networks,” in *Proceedings of the AIAA International Communication Satellite Systems Conference*, (Toulouse, France), pp. 17–20, Apr. 2001.
[4] N. Levanon, “Quick position determination using 1 or 2 LEO satellites,” *IEEE Transactions on Aerospace and Electronic Systems*, vol. 34, pp. 736–754, July 1998.
[5] Y. T. Chan and J. J. Towers, “Sequential localization of a radiating source by Doppler-shifted frequency measurements,” *IEEE Transactions on Aerospace and Electronic Systems*, vol. 28, pp. 1084–1090, Oct. 1992.
[6] P. E. Ammann and J. C. Knight, “Data diversity: An approach to software fault tolerance,” *IEEE Trans. Computers*, pp. 418–425, Apr. 1988.
[7] Y. Huang and C. Kintala, “Software implemented fault tolerance: Technologies and experience,” in *Digest of the 23rd Annual International Symposium on Fault-Tolerant Computing*, (Toulouse, France), pp. 2–9, June 1993.
[8] D. Collins, R. Shotwell, L. Alkalai, J. Chase, and T. George, “Conceptual design and analysis of two satellite constellations for the application of a FAST architecture,” D-25994, Jet Propulsion Laboratory, Pasadena, CA, Mar. 2003.
[9] J. W. S. Liu, K.-J. Lin, W.-K. Shih, A. C. Yu, J.-Y. Chung, and W. Zhao, “Algorithms for scheduling imprecise computation,” *IEEE Computer*, vol. 24, pp. 58–68, May 1991.
[10] R. Raman, M. Livny, and M. Solomon, “Matchmaking: Distributed resource management for high throughput computing,” in *Proceedings of the Seventh IEEE Symposium on High Performance Distributed Computing*, (Chicago, IL), pp. 140–146, July 1998.
[11] W. H. Sanders, W. D. Obal II, M. A. Qureshi, and F. K. Widjanarko, “The UltraSAN modeling environment,” *Performance Evaluation*, vol. 24, no. 1, pp. 89–115, 1995.
[12] S. A. Nozaki and S. M. Ross, “Approximations in finite-capacity multi-server queues with Poisson arrivals,” *Journal of Applied Probability*, vol. 15, pp. 826–834, 1978.
[13] L. Kleinrock, *Queueing Systems. Volume I: Theory*. New York: John Wiley & Sons, 1975.

*Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03)*  
0-7695-1959-8/03 $17.00 (c) 2003 IEEE