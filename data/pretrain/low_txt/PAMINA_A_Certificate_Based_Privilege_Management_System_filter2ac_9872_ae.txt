### Certificate and Delegation Trees in PAMINA

**Certificate 1:**
- **Serial Number:** 3
- **Privileges:** P2, P4
- **Delegation Tree:** [A, 1; B, 2]
- **Holder:** UA
- **Issuer:** D

**Certificate 2:**
- **Serial Number:** 4
- **Privileges:** P4
- **Delegation Tree:** [C, 3; [A, 1; B, 2]]
- **Holder:** UA
- **Issuer:** B

**Certificate 3:**
- **Serial Number:** 6
- **Privileges:** P5
- **Delegation Tree:** []
- **Holder:** UA
- **Issuer:** B

### Verification Process in PAMINA

1. **Policy Certificate Transmission:**
   - The user sends the policy certificate to the verifier.
   - If no policy certificate is stored in the PMAV’s I-CVT, the P-DB sends the certification path for the leaf that would contain the certificate and disconnects from V.
   - If the verifier does not receive this non-existence proof, it can assume that the P-DB was compromised.

2. **Request Identification:**
   - In subsequent requests to the P-DB, V sends the identifier (ID) of the user or an authenticated (e.g., signed) request of the client.

3. **Certificate Search:**
   - The P-DB searches for all certificates issued for the user by PMAs listed in the policy certificate of V.
   - For each certificate, a delegation tree consisting of certificate statements and certification paths is returned, where:
     - `issueri = holdersi+1` for each level i in the tree.
     - `holder0 = ID` and for some ACs, `issuer = PMAV`.
   - The P-DB also includes referenced role certificates.

4. **Non-Existent Certificate Proof:**
   - If a certificate is not found, the P-DB provides the certification path to the leaf that would contain the AC if it were in the I-CVT, proving the non-existence of the AC.

5. **AC Transmission:**
   - The P-DB sends the ACs to V over an encrypted channel.
   - It also sends certification paths from each I-CVT of PMAs listed in the verifier’s policy certificate, proving that the user with ID has no ACs issued by other PMAs.

### Verifier Responsibilities

Verifiers, typically integrated into application servers or gateways, are responsible for deciding if an authenticated user has access to a particular resource. The main tasks include:

- Establishing a secure, authenticated connection to the Privilege Database (P-DB).
- Requesting relevant certificates from the P-DB.
- Verifying each certificate.
- Evaluating delegation trees and roles to determine the set of privileges the user holds.
- Deciding if the approved privileges are sufficient.

### Privilege Database (P-DB) Concept

The P-DB stores all I-CVTs, which are periodically updated by PMAs. This solution allows verifiers to check delegation trees without connecting to different databases for certificates issued by different PMAs. PMAs must be registered with the P-DB and send their updated I-CVTs over an encrypted channel. The P-DB does not maintain older versions of I-CVTs, and PMAs can send complete updates or only changes since the last update.

### Protocol for Obtaining Access Certificates (ACs)

1. **Connection Establishment:**
   - Verifier V establishes a mutual authenticated connection with the P-DB, agreeing on a shared key for encryption.
   - SSL and external PKI services are used for this purpose.

2. **Owner PMA Name:**
   - V sends the name of its owner PMA (PMAV) to the P-DB.

3. **Certificate Validation:**
   - The P-DB verifies the existence of an I-CVT signed by PMAV and a valid policy certificate issued for V by PMAV.
   - If valid, the P-DB delivers all relevant ACs of the user, including attached roles and delegation trees.

### Algorithm for Validating Certification Paths

**Input:**
- Certificate identifier ID and certification path as specified in section 4.
- Certification path `cp = (l0, l1, ... , ln-1) + root signature`, where `li = ( (ki0, ki1, ... kit), (hi0, hi1, ... hi(t-1)) )`.

**Output:**
- Validity of the certification path for the certificate.

**Algorithm:**
1. Initialize variables: `i ← 0`, `k ← (ki0, ki1, ... kit)`, `h ← (hi0, hi1, ... hit)`, `min_id = min(minj(kij), id)`, `max_id = max(maxj(kij), id)`.
2. Compute `d ← hash(k||h)`.
3. Increment `i ← i + 1`.
4. While `i < n`:
   - Update `min_id` and `max_id`.
   - Insert `d` in `h` at position `pos`.
   - Recompute `d ← hash(k||h)`.
   - Increment `i ← i + 1`.
5. Output "Invalid certification path" if conditions are not met.
6. Output "Certificate ID is in I-CVT" if `ID` is found in `(ki0, ki1, ... kit)`.
7. Otherwise, output “Certificate ID is NOT in I-CVT”.

### Implementation Details

- **Prototype:** Implemented in Java for cross-platform compatibility.
- **PKI:** Uses Entrust/PKI v. 4.0 Developer Edition for PKC management and signature verification.
- **Storage:** Each AC is stored as an XML document due to its platform independence, availability of tools, and human-readable format.
- **Administration Framework:** Supports daily management tasks, including I-CVT operations and AC management.

### Conclusions and Future Work

PAMINA manages authorization certificates in distributed environments, utilizing I-CVTs for high performance and enhanced security. The system supports privilege delegation and integrates multiple I-CVTs managed by PMAs. Future work includes extending the system with key management functionality and implementing SDSI/SPKI-based authorization information management.

### Acknowledgments

This research was supported by the German Research Foundation (DFG). The authors thank Günther Augustin and David Garces for their valuable discussions and comments.

### References

1. Gassko, I., Gemmell, P. S., & MacKenzie, P. (2000). Efficient and Fresh Certification. Proceedings of the Conference Public Key Cryptography 2000, v. 1751 of LNCS, pp. 342–353, Springer.
2. Linn, J., & Nyström, M. (1999). Attribute Certification: An Enabling Technology for Delegation and Role-Based Controls in Distributed Environments. Proc. of the 4th ACM Workshop on RBAC, pp. 121-130, Fairfax, USA.
3. Housley, R., Ford, W., Polk, W., & Solo, D. (1999). Internet X.509 Public Key Infrastructure Certificate and CRL Profile. IETF Request for Comments 2459, January 1999.
4. ITU-T Recommendation X.509 (2001). Information Technology – Open Systems Interconnection – The directory: Public-Key and Attribute Certificate Frameworks.
5. Kocher, P. C. (1998). On Certificate Revocation and Validation. Proceedings of the 2nd International Conference Financial Cryptography, 1465 of LNCS, pp. 172-177, Springer.
6. Merkle, R. C. (1989). A Certified Digital Signature. Advances in Cryptology: CRYPTO '89, 0435 of LNCS, pp. 218-238, Springer.
7. Naor, M., & Nissim, K. (1998). Certificate Revocation and Certificate Update. Proceedings of the 7th USENIX Security Symposium, pp. 217-228, San Antonio, USA.
8. Myers, M., Ankney, R., Malpani, A., Galperin, S., & Adams, C. (1999). X.509 Internet Public Key Infrastructure On-line Certificate Status Protocol – OCSP. IETF Request for Comments 2560, June 1999.
9. Micali, S. (1996). Efficient Certificate Revocation. Technical Report, Massachusetts Institute of Technology.
10. Nestlerode, I. (2000). Implementing EFECT. Master Thesis, Massachusetts Institute of Technology.
11. Buldas, A., Laud, P., & Lipmaa, H. (2000). Accountable Certificate Management using Undeniable Attestations. Proceedings of the 7th ACM Conference on Computer and Communication Security, pp. 9-17, Athens, Greece.
12. Knuth, D. E. (1998). The Art Of Computer Programming, Volume 3, Sorting and Searching, Second Edition. Addison-Wesley.
13. Comer, D. (1979). The Ubiquitous B-Tree. Computing Surveys, Vol. 11., No 2., pp. 121-137, ACM, June 1979.
14. Osborn, S., R., & Munawer, Q. (2000). Configuring Role-Based Access Control to Enforce Mandatory and Discretionary Access Control Policies. ACM Transactions on Information and System Security, Vol. 3, No. 2, pp. 85–106, May 2000.