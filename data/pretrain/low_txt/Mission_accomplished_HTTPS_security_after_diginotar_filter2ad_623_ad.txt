### Inconsistent Settings in Domains

A small fraction (approximately 0.003%) of domains exhibit inconsistent settings, with over 65% of these cases caused by domains setting HSTS or HPKP headers on one set of IP addresses but not on another. Many of the remaining cases involve inconsistent HSTS max-age values or includeSubDomains settings; one domain even pins different HPKP keys. The number of inconsistent domains within individual scans is 6 for MUCv6, 25 for MUCv4, and 22 for SYDv4, which is a tiny fraction compared to the millions of scanned domains per vantage point. This group of inconsistent domains often includes globally distributed services under shared administration, such as pooled NTP and OpenPGP Key Servers. For the following analyses, we limit our focus to domains that are consistent within a single scan.

### Inter-Scan Consistency

We evaluate inter-scan consistency to determine whether headers remain consistent across multiple scans. Approximately 2% of HSTS/HPKP-enabled domains serve different headers across at least two scans, with the difference almost exclusively due to configurations serving HSTS in one scan but not in the other. Specifically, we find 15,000 domains inconsistent between the MUCv4 and SYDv4 scans, and 754 domains inconsistent between the MUCv4 and MUCv6 scans. From sample analysis, we identify three potential reasons for this behavior:
1. Timing differences between our scans.
2. Differently configured IP anycast services, revealed using speed-of-light constraints [63].
3. Load-balancers with inconsistently configured servers.

For the subsequent analyses, we focus on domains that serve consistent headers across all scans.

### Deployment

3.5% (984,000) of the domains with consistent and HTTP-200 headers support HSTS. 0.2% of HSTS-enabled domains send incorrect HSTS headers, typically due to typographical mistakes, such as missing the plural 's' in includeSubDomains. 41,000 domains do not use HSTS effectively, setting the max-age attribute to 0, resulting in a 'deregistration' from HSTS use (24,000 domains), to a non-numerical value (16,000 domains), or to an empty value (1,000 domains). For HPKP, only 6,181 out of all 28 million domains (0.02%) send the header. Of these, 29 do not send a valid max-age directive, and 12 do not contain any pins.

### Max-Age Attribute

The max-age attribute indicates the lifetime of HSTS and HPKP headers, which browsers will update on every domain visit. Figure 2 shows the distribution of max-age across all HSTS domains, HPKP’s max-age for the subset of domains that also support HSTS (HPKP|HSTS), and HSTS’s max-age for the subset of domains that also support HPKP (HSTS|HPKP). The intersecting sets generally have shorter durations, with the majority of HPKP max-age values being 10 minutes (33%), 30 days (22%), and 60 days (15%). HSTS domains that also send HPKP headers choose 5 minutes (32%), 1 year (26%), and 2 years (14%). The largest values are sent by the set of all HSTS domains, with 2 years (46%), 1 year (32%), and 6 months (10%). The median max-age for HSTS is one year, but only one month for HPKP. This suggests that operators exercise caution when using HPKP, which carries high availability risk through lock-out (cf. the Cryptocat lock-out [69]). We also note an extreme outlier setting an HSTS max-age of 49 million years, likely an accidental duplication of the string for half a year.

### includeSubDomains Attribute

56% of HSTS and 38% of HPKP domains use the includeSubDomains attribute. This attribute enables HSTS for all subdomains of the domain setting this attribute, providing many benefits, such as helping to avoid insecure cookies from subdomains. However, it may cause operational difficulties if subdomains do not actually support HTTPS. As some domains do not use subdomains, it is challenging to assess this percentage accurately.

### Preloading Lists

We investigate the HSTS preload list included in Chrome [14], which is also the base for Mozilla’s preloading list [48]. A domain can be added to the list by (a) setting the HSTS directive, (b) including the non-RFC preload parameter, and (c) opting in through sites such as Chromium’s hstspreload.org. Interestingly, we find a large fraction (379,000, 38%) of scanned domains include the preload directive, but only 23,000 domains are in the preload list of the current version of Chrome (58), with the intersection consisting of just 6,000 domains. Two possible explanations are that the inclusion process is slow to catch up, or operators do not follow all prescribed steps for inclusion, e.g., by simply copying directives from tutorials.

### Deployment Ranking

Figures 3 and 4 differentiate HSTS and HPKP usage for both dynamic and preloaded deployment across domain rank. Our 100% baseline is the fraction of Top 1M, Top 10k, and Top 1k domains answering with HTTP 200, amended by all preloaded domains. For both technologies, few domains in the base population deploy them. The rising share of dynamic and preloaded domains with domain popularity is encouraging, aligning with expectations that more popular domains have more resources to configure and maintain these security extensions. The share of preloading among top domains, especially for HPKP, is also encouraging.

### Comparison to Related Work

We compare our results to those by Kranch and Bonneau [42], who evaluated HSTS and HPKP extensively in 2014. Both technologies have gained much usage, in both dynamic and preloaded fashion: The HSTS preload list has grown from 1,258 domains in 2014 to 23,500 domains in 2017, and the number of dynamic HSTS domains in the Alexa Top 1M list has grown from 12,500 in 2014 to a lower bound of 18,000 in 2017. As HPKP was still in the standardization process in 2015, Kranch and Bonneau found only 18 domains supporting HPKP. This number has risen to about 6,000. We confirm many of the issues and oddities observed by Kranch and Bonneau, such as mistyped directives, mismatches between preloaded and dynamic HSTS domains, and redirections from top domains not covered under HSTS. We agree with their conclusion that forcing all operators to determine and configure a max-age is prone to mistakes and support their suggestion of a reasonable default setting.

### SCSV Downgrade Prevention

We evaluate SCSV downgrade prevention support [50]. SCSV is a pseudo ciphersuite value sent by the client when retrying to connect to a server with a lower TLS version after a first attempt failed (see Section 2). We distinguish between four outcomes:
1. The server correctly aborts connections sending the SCSV using an alert or some other message.
2. The connection fails due to a transient error (e.g., timeout).
3. The server incorrectly continues with the connection.
4. The server incorrectly tries to continue the connection but chooses parameters not supported by our local TLS client. This last case affects only 0.03% of domains, which we count as attempts to continue the connection.

Table 8 displays results for our active scan both per scan and for merged scans. The results show that >96% of HTTPS-responsive domains implement RFC 7507, despite it being relatively recent (April 2015). The Alexa Top 1M, 10k, and 1k domains have equally high coverage. This high percentage of support may stem from the inclusion in cryptographic libraries. Server operators do not need to change any settings but just use a recent cryptographic library, making deployment very easy. Five of the seven domains in the Alexa Top 100 list that do not support SCSV are from Microsoft and use IIS according to HTTP headers. While there is no official statement from Microsoft regarding SCSV support in IIS and SChannel, several blog posts [34, 45] indicate that SCSV support has been missing for a while. Given the 11% market share of IIS among HTTP servers [75], it seems reasonable that a large fraction of the non-supporting domains may be caused by the lack of SCSV support in IIS/SChannel.

We also evaluate whether SCSV is used in user-initiated connections by investigating our passive data. We count source and destination IP address tuples that use the SCSV pseudo-cipher at least once, and find 126,000 (0.2%) in Germany and 198,000 (0.1%) in the USA. This indicates that SCSV protection ciphers are used in the wild across many clients and servers.

### DNS-Based Systems

We investigate the use of CAA and DANE-TLSA (for TCP port 443) records for domains that yielded an A or AAAA record in our DNS resolution. As described in Section 2, CAA and DANE-TLSA are DNS records that help with certificate issuance and verification, respectively. We perform scans from Munich and Sydney roughly two weeks after our TLS scans. Even with this time difference, the majority of lookups was successful: less than 100 attempts at resolving records failed where previous attempts (A, AAAA) had succeeded.

Table 9 presents an overview of domains with at least one CAA/TLSA record and details if they are DNSSEC verifiable. Note that domains may have multiple CAA and TLSA records. TLSA mandates DNSSEC, CAA does not. Given the low rate of DNSSEC deployment [73], it is a good sign that 20-25% percent of CAA and around 75% of TLSA records use DNSSEC. While CAA/TLSA records differ slightly between Munich and Sydney, we do not encounter any divergence in DNSSEC verification. Slight differences are expected due to timing variation and nameservers using IP anycast to redirect to closer endpoints.

CAA has a larger deployment (340) in the Top 1M compared to TLSA (100). However, there are more signed TLSA domains (89 compared to 53). The preference among the higher-ranked domains may indicate that the record is viewed as beneficial.

### CAA Records

A CAA record consists of one or more properties, which are key-value pairs. The issue property specifies which CA may issue certificates; issuewild is the same but for wildcard domain certificates. The iodef property provides means to contact a domain owner in a standardized (machine-readable) way, e.g., when a CA receives a request to issue a certificate that violates the CAA policy.

We first analyze the top CAs for the issue property. It is important to note that there is currently no agreed mapping of human-readable strings to CAs. The results are consistent from both vantage points, so we report values from our Sydney scans. From the vantage point in Sydney, we find a total of 3,834 records containing the issue property. Unsurprisingly, most records are contributed by domains in the .com zone (1,742)—however, the second most common zone is .de (682), well ahead of the similarly-sized generic .org and .net (463 and 447, respectively). No other zone contributes more than 75 records.

The most common string is letsencrypt.org, in 2,270 records. Let’s Encrypt launched in 2016, is free and fully automated. Domain ownership is verified, and certificates are issued using the ACME protocol [9]. The next four strings, comodoca.com, symantec.com, digicert.com, and the Google CA pki.goog, all appear with similar numbers (246, 233, 195, and 195, respectively). However, Comodo also appears with the string comodo.com, and brands owned by other CAs appear with their own string (e.g., GeoTrust, owned by Symantec, or RapidSSL, owned by Comodo). We find a total of 55 combinations and spellings. In 63 cases, operators set a semicolon, signifying that no CA is allowed to issue certificates.

We find that the issuewild property is used less often than issue: only 1,088 such records exist (for 1,064 domains). They show an entirely different use pattern. 756 records are set to a semicolon, meaning that no CA may issue wildcard certificates. We find a few dozen domains that choose different settings for issue and issuewild. In the vast majority of these cases, issue is set to Let’s Encrypt (which does not yet issue wildcard certificates) and issuewild to another mainstream CA.

Finally, we find 1,145 iodef records, across 1,141 domains. The standard allows email and HTTP URLs for reporting. About 220 records violate this requirement; manual inspection shows that all are meant to be email addresses (mostly a missing mailto:). 908 domains use an email, and just 13 use an HTTP(S) URL. We find a total of 380 unique email addresses in the records. By attempting repeated SMTP dialogues and testing for responses for RCPT TO:, we find that only 63% of iodef email addresses actually exist.

We find only 9 unique HTTP(S) URLs. According to RFC 5070, a web service should reply with a 204 response to a POST with an empty key-value pair. In our tests, this was only the case for 2 URLs; 5 returned an error, and 2 served normal websites.

In conclusion, it seems that domain owners are conscious of security when choosing their CAA records. They mostly disallow wildcarded certificates and show a clear preference for Let’s Encrypt.

### TLSA Records

TLSA is a DNS-based form of certificate pinning. TLSA has been well studied; the SecSpider dashboard even tracks it for DNSSEC-secured zones [73, 82]. While SecSpider [73] and our domain sets are not congruent, SecSpider’s authors report 2,306 base domains with TLSA enabled for HTTPS as of August 23, 2017. We find...