### Analysis of Network Profiles and Bitrate Improvements

Across the 14 network profiles, the median improvement in average bitrate is 10.22%. For the three profiles with the lowest average bandwidth, the duration for which the lowest track is played reduces by more than 43.4% compared to the scenario where only the declared bitrate is used for track selection. For all profiles, we observe that the stall duration remains the same, with one exception: in one profile, the stall duration marginally increases from 10 seconds to 12 seconds. As shown in Figure 14, H3 encounters a stall soon after starting to play.

These results illustrate the potential benefits of using fine-grained segment size information. The development of superior HAS (HTTP Adaptive Streaming) adaptation schemes for VBR (Variable Bit Rate) to better balance video quality and stalls is a separate research topic.

In summary, we recommend that services should expose actual segment bitrate information to the adaptation logic, and that the adaptation logic should utilize this information to improve track selection.

### Improving Startup Logic

We find that some apps, such as H3, consistently experience stalls at the beginning of playback under certain network bandwidth profiles, while other apps do not. This suggests potential issues with the startup logic. As depicted in Figure 14, H3 initially selects a track with a bitrate around 1 Mbps, which is higher than the available network bandwidth. It starts playback after downloading the first segment. For the second segment, it continues to select the same track, possibly due to insufficient information about the actual network condition. Since the network bandwidth is lower than the selected bitrate, the buffer empties before the second segment is downloaded, leading to a stall.

Investigating the design differences between apps with and without QoE (Quality of Experience) problems can provide insights into potential causes and solutions. We find that H3 and H2 set similar startup buffer durations. However, H2 does not encounter stalls under the same network conditions, while H3 does. Further analysis reveals that each segment of H2 is only 2 seconds long, and it downloads four segments before starting playback. In contrast, the segment duration for H3 is 9 seconds, and it starts playback after downloading a single segment. Based on these observations, we hypothesize that the likelihood of initial stalls depends not only on the startup buffer duration in seconds but also on the number of segments in the buffer. Using just one segment as the startup buffer introduces a high risk of initial stalls.

To validate this hypothesis and identify improvements, we characterize the tradeoff between startup delay and stall likelihood at the beginning of a video session, and propose empirical methods for determining the optimal settings. We instrument ExoPlayer to set different startup buffer durations and play the Testcard stream, a publicly available DASH (Dynamic Adaptive Streaming over HTTP) stream [7], with varying segment durations. We also configure the player to use different startup track settings.

### Experimental Results

Figure 15 shows the average startup delay and the stall ratio (the ratio of runs with stalls) for 50 bandwidth profiles generated by dividing the lowest 5 10-minute bandwidth profiles. Our key observations are:

- The stall ratio depends on both the startup buffer duration and the segment duration. With the same startup buffer duration of 8 seconds, the stall ratio for 4-second segments is only 57.7% of the ratio for 8-second segments.
- Using 2 or 3 segments as the startup buffer significantly reduces the likelihood of stalls. In all video settings, the stall ratio for using 3 segments is less than 41.7% of the stall ratio for using 1 segment.
- Using a higher bitrate track as the startup track can significantly increase the likelihood of stalls, especially when the startup buffer is only 1 segment. When the startup buffer duration is set to 4 seconds, increasing the startup track bitrate from 0.5 Mbps to 1 Mbps increases the stall ratio from 60.0% to 91.1%.

Our findings suggest that apps should set the startup buffer duration to 2 to 3 segments. We checked the implementation of ExoPlayer and found that the startup buffer duration is a static value in seconds, which developers can configure. We recommend that the player should enforce the startup buffer threshold both in terms of duration and segment count. Additionally, the startup track bitrate should be relatively low to avoid stalls. Similar recommendations can be applied to the logic for recovering from stall events.

### Related Work

#### QoE Characterization of Commercial Video Streaming Systems

Several existing works have attempted to characterize the streaming QoE of video services. However, none of the existing methodologies can be generally applied to the mobile VOD (Video On Demand) services we study. Some studies [28, 31] extract bitrate information from request URLs based on specific URL patterns, but these patterns vary between services, and many services do not follow such patterns. For example, Netflix and Amazon do not directly include bitrate information in their URLs. Akhshabi et al. [17] estimate segment duration based on their sizes, but many video services use VBR encoding, making this approach less effective.

#### Proposal of Novel Adaptation Algorithms

Many prior works [27, 31, 33, 37, 39, 50, 52] have investigated opportunities for optimizing rate adaptation algorithms. Jiang et al. [31] proposed an adaptation algorithm to improve fairness between multiple video streaming applications. Li et al. [33] used a TCP-like probe approach to select video bitrates. PiStream [52] leverages physical layer information in LTE networks to predict network bandwidth and adapt video bitrates. Huang et al. [27] selected video bitrates based on buffer occupancy. These state-of-the-art algorithms can help improve video streaming performance. In this paper, we investigate the algorithms deployed in commercial mobile VOD systems in practice.

#### Diagnosis of QoE Issues in Video Streaming Systems

Prior efforts [23–26, 30, 32, 38, 42–44] have emphasized the importance and challenges of diagnosing performance problems in video streaming. Jiang et al. [30] proposed using clustering methods over client attributes to identify the root cause of video problems. A recent work [22] built a machine learning model to perform root cause analysis for poor video QoE based on network characteristics. These works focus on identifying problems caused by external factors, such as poor network conditions. We focus on characterizing the QoE impact of service design.

### Conclusion

We conducted a detailed measurement study of 12 popular mobile streaming VOD services to develop a comprehensive understanding of their design and performance. Using carefully crafted measurements, we identified important component designs across the end-to-end pipeline, including track settings, startup behavior, and track switching behavior. We also identified several QoE issues and their underlying causes. Through what-if analysis, we developed best-practice solutions to mitigate these challenges. By extending our understanding of how elements of service design impact QoE, our findings can help developers navigate the design space and build mobile HAS services with improved performance.

### Acknowledgements

We express our sincere gratitude to the anonymous reviewers who provided valuable feedback to improve this work, and to our shepherd, Heather Zheng, for guiding us through the revisions. This work was partially funded by the NSF under awards CCF-1629347, CCF-1438996, and CNS-1629894.

### References

[1] 2012. ISO/IEC 23009-1, Information technology - Dynamic adaptive streaming over HTTP (DASH). http://standards.iso.org/ittf/PubliclyAvailableStandards/c057623_ISO_IEC_23009-1_2012.zip. (2012).

[2] 2014. ExoPlayer: Adaptive video streaming on Android - YouTube. https://www.youtube.com/watch?v=6VjF638VObA. (2014).

[3] 2016. Choosing the Optimal Segment Duration. https://streaminglearningcenter.com/blogs/choosing-the-optimal-segment-duration.html. (2016).

[4] 2016. ExoPlayer 2 - Why, what and when? https://medium.com/google-exoplayer/exoplayer-2-x-why-what-and-when-74fd9cb139. (2016).

[5] 2016. ExoPlayer from the other side. https://medium.com/google-exoplayer/exoplayer-from-the-other-side-5909553abae2. (2016).

[6] 2016. WhatsApp For Android Devices. https://tech.blorge.com/2016/09/23/whatsapp-2-16-274-download-available/-android-devices-new-emojis/155538. (2016).

[7] 2017. BBC DASH Testcard Stream. http://rdmedia.bbc.co.uk/dash/ondemand/testcard/. (2017).

[8] 2017. Building Periscope for Android. http://nerds.airbnb.com/building-periscope-for-android/. (2017).

[9] 2017. CBR and VBR Encoding FAQ: What is The Difference? https://www.lifewire.com/difference-between-cbr-and-vbr-encoding-2438423. (2017).

[10] 2017. Cisco Visual Networking Index: Global Mobile Data Traffic Forecast Update, 2016-2021 White Paper. http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/mobile-white-paper-c11-520862.html. (2017).

[11] 2017. Curl: command line tool and library for transferring data with URLs. https://curl.haxx.se. (2017).

[12] 2017. Experience Shapes Mobile Customer Loyalty - Ericsson. https://www.ericsson.com/thinkingahead/consumerlab/consumer-insights/experience-shapes-mobile-customer-loyalty. (2017).

[13] 2017. How Xposed works. https://github.com/rovo89/XposedBridge/wiki/Development-tutorial. (2017).

[14] 2017. Sintel - Open Movie by Blender Foundation. https://durian.blender.org/download/. (2017).

[15] 2017. Smooth Streaming Protocol. https://msdn.microsoft.com/en-us/library/ff469518.aspx. (2017).

[16] 2017. Technical Note TN2224. https://developer.apple.com/library/content/technotes/tn2224/_index.html#//apple_ref/doc/uid/DTS40009745-CH1-BITRATERECOMMENDATIONS. (2017).

[17] Saamer Akhshabi, Ali C Begen, and Constantine Dovrolis. 2011. An experimental evaluation of rate-adaptation algorithms in adaptive streaming over HTTP. In Proceedings of the second annual ACM conference on Multimedia systems. ACM, 157–168.

[18] Qi Alfred Chen, Haokun Luo, Sanae Rosen, Z Morley Mao, Karthik Iyer, Jie Hui, Kranthi Sontineni, and Kevin Lau. 2014. Qoe doctor: Diagnosing mobile app qoe with automated ui control and cross-layer analysis. In Proceedings of the 2014 Conference on Internet Measurement Conference. ACM, 151–164.

[19] Luca De Cicco and Saverio Mascolo. 2010. An experimental investigation of the Akamai adaptive video streaming. In Symposium of the Austrian HCI and Usability Engineering Group. Springer, 447–464.

[20] Giorgos Dimopoulos, Pere Barlet-Ros, and Josep Sanjuas-Cuxart. 2013. Analysis of youtube user experience from passive measurements. In Proceedings of the 9th International Conference on Network and Service Management (CNSM 2013). IEEE, 260–267.

[21] Giorgos Dimopoulos, Ilias Leontiadis, Pere Barlet-Ros, and Konstantina Papagiannaki. 2016. Measuring Video QoE from Encrypted Traffic. In Proceedings of the 2016 ACM on Internet Measurement Conference. ACM, 513–526.

[22] Giorgos Dimopoulos, Ilias Leontiadis, Pere Barlet-Ros, Konstantina Papagiannaki, and Peter Steenkiste. 2015. Identifying the Root Cause of Video Streaming Issues on Mobile Devices. In Proceedings of the 2015 ACM International Conference on Emerging Networking Experiments and Technologies: 1-4 December, 2015: Heidelberg, Germany. Association for Computing Machinery (ACM).

[23] Mojgan Ghasemi, Partha Kanuparthy, Ahmed Mansy, Theophilus Benson, and Jennifer Rexford. 2016. Performance Characterization of a Commercial Video Streaming Service. In Proceedings of the 2016 ACM on Internet Measurement Conference. ACM.

[24] Yihua Guo, Ashkan Nikravesh, Z Morley Mao, Feng Qian, and Subhabrata Sen. 2017. Accelerating Multipath Transport Through Balanced Subflow Completion. In Proceedings of the 23th annual international conference on Mobile computing and networking. ACM.

[25] Yihua Guo, Feng Qian, Qi Alfred Chen, Zhuoqing Morley Mao, and Subhabrata Sen. 2016. Understanding on-device bufferbloat for cellular upload. In Proceedings of the 2016 ACM on Internet Measurement Conference. ACM, 303–317.

[26] Gonca Gürsun, Mark Crovella, and Ibrahim Matta. 2011. Describing and forecasting video access patterns. In INFOCOM, 2011 Proceedings IEEE. IEEE, 16–20.

[27] TY Huang, R Johari, N McKeown, M Trunnell, and M Watson. 2014. A buffer-based approach to rate adaptation. In Proc. 2014 ACM Conference on SIGCOMM, SIGCOMM, Vol. 14. 187–198.

[28] Te-Yuan Huang, Nikhil Handigol, Brandon Heller, Nick McKeown, and Ramesh Johari. 2012. Confused, timid, and unstable: picking a video streaming rate is hard. In Proceedings of the 2012 ACM conference on Internet measurement conference. ACM, 225–238.

[29] Yunhan Jack Jia, Qi Alfred Chen, Zhuoqing Morley Mao, Jie Hui, Kranthi Sontinei, Alex Yoon, Samson Kwong, and Kevin Lau. 2015. Performance characterization and call reliability diagnosis support for voice over lte. In Proceedings of the 21st Annual International Conference on Mobile Computing and Networking. ACM, 452–463.

[30] Junchen Jiang, Vyas Sekar, Ion Stoica, and Hui Zhang. 2013. Shedding light on the structure of internet video quality problems in the wild. In Proceedings of the ninth ACM conference on Emerging networking experiments and technologies. ACM, 357–368.

[31] Junchen Jiang, Vyas Sekar, and Hui Zhang. 2012. Improving fairness, efficiency, and stability in HTTP-based adaptive video streaming with festive. In Proceedings of the 8th international conference on Emerging networking experiments and technologies. ACM, 97–108.

[32] S Shunmuga Krishnan and Ramesh K Sitaraman. 2013. Video stream quality impacts viewer behavior: inferring causality using quasi-experimental designs. IEEE/ACM Transactions on Networking 21, 6 (2013), 2001–2014.

[33] Zhi Li, Xiaoqing Zhu, Joshua Gahm, Rong Pan, Hao Hu, Ali C Begen, and David Oran. 2014. Probe and adapt: Rate adaptation for HTTP video streaming at scale. IEEE Journal on Selected Areas in Communications 32, 4 (2014), 719–733.

[34] Chenghao Liu, Imed Bouazizi, and Moncef Gabbouj. 2011. Rate adaptation for adaptive HTTP streaming. In Proceedings of the second annual ACM conference on Multimedia systems. ACM, 169–174.

[35] Yao Liu, Sujit Dey, Fatih Ulupinar, Michael Luby, and Yinian Mao. 2015. Deriving and validating user experience model for DASH video streaming. IEEE Transactions on Broadcasting 61, 4 (2015), 651–665.

[36] Ahmed Mansy, Mostafa Ammar, Jaideep Chandrashekar, and Anmol Sheth. 2014. Characterizing client behavior of commercial mobile video streaming services. In Proceedings of Workshop on Mobile Video Delivery. ACM, 8.

[37] RKP Mok, EWW Chan, and RKC Chang. 2011. Improving TCP video streaming QoE by network QoS management. (2011).

[38] Ricky KP Mok, Edmond WW Chan, Xiapu Luo, and Rocky KC Chang. 2011. Inferring the QoE of HTTP video streaming from user-viewing activities. In Proceedings of the first ACM SIGCOMM workshop on Measurements up the stack. ACM, 31–36.

[39] Ricky KP Mok, Weichao Li, and Rocky KC Chang. 2016. IRate: Initial video bitrate selection system for HTTP streaming. IEEE Journal on Selected Areas in Communications 34, 6 (2016), 1914–1928.

[40] Hyunwoo Nam, Bong Ho Kim, Doru Calin, and Henning Schulzrinne. 2013. A mobile video traffic analysis: Badly designed video clients can waste network bandwidth. In Globecom Workshops (GC Wkshps), 2013 IEEE. IEEE, 506–511.

[41] Ana Nika, Yibo Zhu, Ning Ding, Abhilash Jindal, Y Charlie Hu, Xia Zhou, Ben Y Zhao, and Haitao Zheng. 2015. Energy and performance of smartphone radio bundling in outdoor environments. In Proceedings of the 24th International Conference on World Wide Web. ACM, 809–819.

[42] Ashkan Nikravesh, Yihua Guo, Feng Qian, Z Morley Mao, and Subhabrata Sen. 2016. An in-depth understanding of multipath TCP on mobile devices: Measurement and system design. In Proceedings of the 22nd Annual International Conference on Mobile Computing and Networking. ACM, 189–201.

[43] Ashkan Nikravesh, David Ke Hong, Qi Alfred Chen, Harsha V Madhyastha, and Zhuoqing Morley Mao. 2016. QoE Inference Without Application Control. In Internet-QoE@ SIGCOMM. 19–24.

[44] Ashkan Nikravesh, Hongyi Yao, Shichang Xu, David Choffnes, and Z Morley Mao. 2015. Mobilyzer: An open platform for controllable mobile network measurements. In Proceedings of the 13th Annual International Conference on Mobile Systems, Applications, and Services. ACM, 389–404.

[45] Roger Pantos and William May. 2016. HTTP live streaming. (2016).

[46] Raimund Schatz, Tobias Hoßfeld, and Pedro Casas. 2012. Passive YouTube QoE monitoring for ISPs. In Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS), 2012 Sixth International Conference on. IEEE, 358–364.

[47] Muhammad Zubair Shafiq, Jeffrey Erman, Lusheng Ji, Alex X Liu, Jeffrey Pang, and Jia Wang. 2014. Understanding the impact of network dynamics on mobile video user engagement. In ACM SIGMETRICS Performance Evaluation Review, Vol. 42. ACM, 367–379.

[48] Christian Sieber, Poul Heegaard, Tobias Hoßfeld, and Wolfgang Kellerer. 2016. Sacrificing efficiency for quality of experience: YouTube’s redundant traffic behavior. In IFIP Networking Conference (IFIP Networking) and Workshops, 2016. IEEE, 503–511.

[49] Matti Siekkinen, Enrico Masala, and Teemu Kämäräinen. 2016. A First Look at Quality of Mobile Live Streaming Experience: the Case of Periscope. In Proceedings of the 2016 ACM on Internet Measurement Conference. ACM, 477–483.

[50] Kevin Spiteri, Rahul Urgaonkar, and Ramesh K Sitaraman. 2016. BOLA: near-optimal bitrate adaptation for online videos. In Computer Communications, IEEE INFOCOM 2016-The 35th Annual IEEE International Conference on. IEEE, 1–9.

[51] Bolun Wang, Xinyi Zhang, Gang Wang, Haitao Zheng, and Ben Y Zhao. 2016. Anatomy of a personalized livestreaming system. In Proceedings of the 2016 ACM on Internet Measurement Conference. ACM, 485–498.

[52] Xiufeng Xie, Xinyu Zhang, Swarun Kumar, and Li Erran Li. 2015. piStream: Physical layer informed adaptive video streaming over LTE. In Proceedings of the 21st Annual International Conference on Mobile Computing and Networking. ACM, 413–425.

[53] Yang Xu, Chenguang Yu, Jingjiang Li, and Yong Liu. 2012. Video telephony for end-consumers: measurement study of Google+, iChat, and Skype. In Proceedings of the 2012 ACM conference on Internet measurement conference. ACM, 371–384.

[54] Tong Zhang, Fengyuan Ren, Wenxue Cheng, Xiaohui Luo, Ran Shu, and Xiaolan Liu. 2017. Modeling and Analyzing the Influence of Chunk Size Variation on Bitrate Adaptation in DASH. In Computer Communications, IEEE INFOCOM 2017-The 36th Annual IEEE International Conference on. IEEE.