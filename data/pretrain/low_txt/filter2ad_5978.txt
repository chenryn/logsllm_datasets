# Leveraging Locality of Reference for Certificate Revocation
**Authors:**
- Luke Dickinson, Sandia National Laboratories
- Trevor Smith, Brigham Young University
- Kent E. Seamons, Brigham Young University

**Conference:**
35th Annual Computer Security Applications Conference (ACSAC)  
Condado Plaza Hilton, San Juan, Puerto Rico  
December 9th – 13th, 2019

---

## X.509 Certificates
X.509 certificates are used to authenticate TLS (Transport Layer Security) communication between clients and servers.

**Example:**
- **Client:** Hi Bank
- **Server (Bank.com):** Hey, I am Bank.com. Please Login.

---

## Certificate Revocation
A malicious actor with access to the private key of a certificate can impersonate another party undetected. Compromised certificates can be revoked to help clients avoid these connections.

**Example:**
- **Client:** Hi Bank
- **Server (Bank.com):** Hey, I am Bank.com. Please Login.

---

## Seven Challenges Facing Certificate Revocation
Revocation is a complex problem that is often overlooked. We use these challenges to inform our design:

1. **Effectiveness During an Active Attack**
   - Soft-failing clients treat an inaccessible revocation status as good.
   - **Example:**
     - **Client:** Let me check if this certificate is revoked.
     - **OCSP Responder:** Unavailable.
     - **Client:** The OCSP responder is unavailable. I’ll default to trusting the certificate.
   - **Quote:** "Soft-fail revocation checks are like a seat-belt that snaps when you crash." (Langley 2012)

2. **Client Bandwidth Costs**
   - Many clients are dissuaded from participating due to high bandwidth costs. (Liu et al. 2015)

3. **Future Bandwidth Costs Due to Certificate Growth**
   - There has been a significant increase in live, trusted certificates from January 2017 to November 2019 (Censys.io).
   - **Statistics:**
     - From 30 million to 407 million live, trusted certificates globally.

4. **Mass Revocation Event Scalability**
   - The community needs to develop methods for scalable revocation that can handle mass revocation events, such as those seen after the Heartbleed vulnerability. (Durumeric et al. 2014)

5. **Revocation Timeliness**
   - Clients may not detect a certificate has been revoked until days after the revocation.
   - **Timeline:**
     1. A client downloads a CRL.
     2. A certificate is revoked.
     3. A client downloads the next CRL and learns of the revocation.
     4. This process can take several days.

6. **Exposure of Client Traffic Patterns**
   - Some revocation strategies share detailed client traffic patterns with third parties.

7. **Deployment Requirements and Incentives**
   - Deployment costs, incentives, and risks can slow or halt adoption.
   - **Parties Involved:**
     - Certificate Authorities
     - Website Administrators
     - End-clients
     - Other Third-parties

---

## Our Solution

### Taking Advantage of Certificate Working Sets
- A certificate working set \( W(t, \tau) \) of an organization is the collection of all certificates used by the organization over the period of time \( t - \tau \) to \( t \).
- We hypothesize that a majority of certificates in \( W(t + \alpha, \alpha) \) will reuse certificates seen in \( W(t, \tau) \), if \( \alpha \) is small.
- **Diagram:**
  - \( W(t, \tau) \): Past
  - \( W(t + \alpha, \alpha) \): Future

### Certificate Revocation Table (CRT)
- Contains an organization's certificate working set (both revoked and non-revoked).

### Design Parameters
- **Periodically-run Functions**
- **Space-efficient Data Structure**
- **For Clients:**
  - Client APIs

### Deploying a Certificate Revocation Table in a Private Organization
- A network gateway or IDS system that already has TLS usage information is a simple option.
- Other options are described in the paper.

---

## Measurement Study
- Obtained access to TLS logs from BYU from April to June 2018.
- **Statistics:**
  - BYU has over 33,000 students.
  - 4,144,404,123 TLS handshakes.
  - 112 revoked certificates seen in 228,427 (0.005%) TLS handshakes.
- Simulated a Certificate Revocation Table:
  - Several values of \( \tau \) (working set window length) were used.
  - \( \alpha = 24 \) hours (download cycle).
  - \( \beta = 24 \) hours (revocation rechecked).

### Experiment Results: BYU-shared CRT
- The revocation status is cached on the client.
- **All TLS Handshakes**
- **All Unique Certificates**
- **400,000 certificates = 0.11% of global space**
- **Decreasing due to delta updates**

### CRT Design Strengths
- CRT gives control, responsibility, and cost burdens to network administrators.
- The networks they administer benefit from CRT, aligning incentives.
- Design parameters (\( \tau, \beta, \alpha \)) provide flexibility to support different types of organizations and clients.

---

## Future Work
- Anticipating certificate renewal
- Early removal of irrelevant certificates
- Exploring design parameters \( \alpha \) and \( \beta \)
- Alternative deployment scenarios:
  - Single client
  - Home network
  - Larger regions (ISP)
  - Smart grid AMI network

---

## Comparison to Other Strategies
- **Seven Challenges Facing Certificate Revocation:**
  - Only revoked, means clients download CRS of only known revoked certificates instead of also including known good certificates.
  - Small bandwidth requirements (especially for only revoked).
  - Low barrier-to-entry requirements.

---

## Conclusion
Using an organization-shared CRT is competitive with or exceeds alternative state-of-the-art solutions for each of the seven challenges of certificate revocation. Our solution has the lowest deployment requirements today with:
- > 99% soft-fail protection
- Low client bandwidth costs
- 1-2 days revocation timeliness

---

**Questions?**