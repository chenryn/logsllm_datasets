### References

- **[Exp14]** “Experience”, Carnegie Mellon University Parallel Data Lab Technical Report CMU-PDL-14-102, 2014.
- **[San11]** N. Santos and A. Schiper, “Tuning Paxos for High-Throughput with Batching and Pipelining”, in 13th Int’l Conf. on Distributed Computing and Networking, 2012.
- **[Sar97]** N. B. Sarter, D. D. Woods, and C. E. Billings, “Automation Surprises”, in Handbook of Human Factors & Ergonomics, 2nd edition, G. Salvendy (ed.), Wiley, 1997.
- **[Sch14]** E. Schmidt, J. Rosenberg, and A. Eagle, *How Google Works*, Grand Central Publishing, 2014.
- **[Sch15]** B. Schwartz, “The Factors That Impact Availability, Visualized”, blog post, December 21, 2015.
- **[Sch90]** F. B. Schneider, “Implementing Fault-Tolerant Services Using the State Machine Approach: A Tutorial”, in ACM Computing Surveys, vol. 22, no. 4, 1990.
- **[Sec13]** Securities and Exchange Commission, “Order In the Matter of Knight Capital Americas LLC”, file 3-15570, 2013.
- **[Sha00]** G. Shao, F. Berman, and R. Wolski, “Master/Slave Computing on the Grid”, in Heterogeneous Computing Workshop, 2000.
- **[Shu13]** J. Shute et al., “F1: A Distributed SQL Database That Scales”, in Proc. VLDB 2013, 2013.
- **[Sig10]** B. H. Sigelman et al., “Dapper, a Large-Scale Distributed Systems Tracing Infrastructure”, Google Technical Report, 2010.
- **[Sin15]** A. Singh et al., “Jupiter Rising: A Decade of Clos Topologies and Centralized Control in Google’s Datacenter Network”, in SIGCOMM ’15.
- **[Skel13]** M. Skelton, “Operability can Improve if Developers Write a Draft Run Book”, blog post, October 16, 2013.
- **[Slo11]** B. Treynor Sloss, “Gmail back soon for everyone”, blog post, February 28, 2011.
- **[Tat99]** S. Tatham, “How to Report Bugs Effectively”, 1999.
- **[Ver15]** A. Verma, L. Pedrosa, M. R. Korupolu, D. Oppenheimer, E. Tune, and J. Wilkes, “Large-scale cluster management at Google with Borg”, in Proceedings of the European Conference on Computer Systems, 2015.
- **[Wal89]** D. R. Wallace and R. U. Fujii, “Software Verification and Validation: An Overview”, IEEE Software, vol. 6, no. 3 (May 1989), pp. 10, 17.
- **[War14]** R. Ward and B. Beyer, “BeyondCorp: A New Approach to Enterprise Security”, in ;login:, vol. 39, no. 6, December 2014.
- **[Whi12]** J. A. Whittaker, J. Arbon, and J. Carollo, *How Google Tests Software*, Addison-Wesley, 2012.
- **[Woo96]** A. Wood, “Predicting Software Reliability”, in Computer, vol. 29, no. 11, 1996.
- **[Wri12a]** H. K. Wright, “Release Engineering Processes, Their Faults and Failures” (section 7.2.2.2), PhD Thesis, University of Texas at Austin, 2012.
- **[Wri12b]** H. K. Wright and D. E. Perry, “Release Engineering Practices and Pitfalls”, in Proceedings of the 34th International Conference on Software Engineering (ICSE ’12). (IEEE, 2012), pp. 1281–1284.
- **[Wri13]** H. K. Wright, D. Jasper, M. Klimek, C. Carruth, Z. Wan, “Large-Scale Automated Refactoring Using ClangMR”, in Proceedings of the 29th International Conference on Software Maintenance (ICSM ’13), (IEEE, 2013), pp. 548–551.
- **[Zoo14]** ZooKeeper Project (Apache Foundation), “ZooKeeper Recipes and Solutions”, in ZooKeeper 3.4 documentation, 2014.

### Index

#### Symbols
- **Borg example**, 81
- **/varz HTTP handler**, 109
- **cross-industry lessons**, 467
- **database example**, 73-75
- **Diskerase example**, 85
- **focus on reliability**, 83
- **Google's approach to**, 70
- **hierarchy of automation classes**, 72
- **recommendations for enacting**, 84
- **specialized application of**, 79
- **use cases for**, 70-73

#### A
- **abusive client behavior**, 382
- **access control**, 89
- **ACID datastore semantics**, 287, 341
- **acknowledgments**, xxi-xxiv
- **adaptive throttling**, 250
- **Ads Database**, 73-75
- **AdSense**, 31
- **aggregate availability equation**, 27, 477
- **aggregation**, 114, 180
- **agility vs. stability**, 97
- **Alertmanager service**, 119
- **alerts**
  - **defined**, 56
  - **false-positive**, 180
  - **software for**, 18
- **anacron**, 316
- **Apache Mesos**, 15
- **App Engine**, 146
- **archives vs. backups**, 343
- **asynchronous distributed consensus**, 289
- **atomic broadcast systems**, 295
- **attribution policy**, xx
- **automation**
  - **for change management**, 10
  - **vs. autonomous systems**, 67
  - **benefits of**, 67-70
  - **best practices for change management**, 10
  - **role of release engineers in**, 88
- **autonomous systems**, 67

#### B
- **B4 network**, 15
- **backends, fake**, 204
- **backups (see data integrity)**
- **Bandwidth Enforcer (BwE)**, 17
- **barrier tools**, 193, 195, 293
- **best practices**
  - **capacity planning**, 482
  - **error budgets**, 481
  - **failures**, 479
  - **feedback**, 174
  - **for incident management**, 166
  - **monitoring**, 481
  - **postmortems**, 171-172, 482
  - **product launches and**, 376
  - **reward systems**, 174
  - **rollouts**, 480
  - **service level objectives**, 480
  - **team building**, 483
- **bibliography**, 501
- **Big Data**, 327
- **Bigtable**, 17, 31, 65
- **bimodal latency**, 273
- **black-box monitoring**, 55, 59, 120
- **blameless cultures**, 170
- **Blaze build tool**, 90
- **Blobstore**, 17, 342
- **Borg**, 14-16, 81-83, 329
- **Borg Naming Service (BNS)**, 16
- **Borgmon**, 108-123
  - **alerting**, 18, 118
  - **configuration**, 121
  - **rate() function**, 116
  - **rules**, 114-118
  - **sharding**, 119
  - **timeseries arena**, 111
  - **vectors**, 112-113
- **break-glass mechanisms**, 201
- **build environments**, 190
- **business continuity**, 337

#### C
- **CAP theorem**, 286
- **CAPA (corrective and preventative action)**, 465
- **capacity planning**
  - **approaches to**, 105
  - **best practices for**, 482
  - **case studies**, 432-439
  - **importance of**, 440
  - **further reading on**, 106
  - **intent-based (see intent-based capacity planning)**
  - **mandatory steps for**, 11
- **campuses**, 14
- **canarying**, 34, 155, 189, 380
- **cognitive flow state**, 409
- **colocation facilities (colos)**, 85
- **Colossus**, 16
- **command posts**, 164
- **communication and collaboration**
  - **blameless postmortems**, 171
  - **with Outalator**, 181
  - **outside SRE team**, 437
  - **position of SRE in Google**, 425
  - **production meetings (see production meetings)**
  - **within SRE team**, 430
- **company-wide resilience testing**, 106
- **compensation structure**, 128
- **computational optimization**, 209
- **configuration management**, 93, 153, 201, 277
- **configuration tests**, 188
- **consensus algorithms**
  - **Egalitarian Paxos**, 302
  - **Fast Paxos**, 301, 320
  - **Multi-Paxos**, 303
  - **Paxos**, 290, 303
  - **Raft**, 298, 302
  - **Zab**, 302
- **consistent hashing**, 227
- **constraints**, 208
- **Consul**, 291
- **consumer services, identifying risk tolerance of**, 28-31
- **continuous build and deployment**
  - **Blaze build tool**, 90
  - **branching**, 90
  - **build targets**, 90
  - **configuration management**, 93
  - **deployment**, 93
  - **packaging**, 91
  - **Rapid release system**, 90, 91
  - **testing**, 90
  - **typical release process**, 92
- **coroutines**, 327
- **corporate network security**, 106
- **correctness guarantees**, 335
- **correlation vs. causation**, 136
- **costs**
  - **availability targets and**, 30, 32
  - **direct**, 4
  - **of failing to embrace risk**, 25
  - **indirect**, 4
  - **of sysadmin management approach**, 4
- **CPU consumption**, 248, 262, 383
- **crash-fail vs. crash-recover algorithms**, 290
- **cron**
  - **at large scale**, 325
  - **building at Google**, 319-325
  - **effect of big data on**, 328
  - **monitoring problems**, 331-332
  - **origin of**, 327
  - **overview of**, 338
  - **pipeline depth**, 328
  - **simple vs. multiphase pipelines**, 328
  - **Workflow system**, 333, 335
- **cross-industry lessons**
  - **Apollo 8**, xvii
  - **comparative questions presented**, 459
  - **decision-making skills**, 469-470
  - **Google's application of**, 470
  - **industry leaders contributing**, 460
  - **key themes addressed**, 459
  - **postmortem culture**, 465-467
  - **preparedness and disaster testing**, 462-465
  - **repetitive work/operational overhead**, 467

#### D
- **D storage layer**, 16
- **dashboards**
  - **benefits of**, 57
  - **defined**, 55
  - **data analysis, with Outalator**, 181
- **data integrity**
  - **backups vs. archives**, 343
  - **case studies in**, 360-366
  - **conditions leading to failure**, 346
  - **defined**, 339
  - **expanded definition of**, 340
  - **failure modes**, 349
  - **from users’ perspective**, 345
  - **overview of**, 368
  - **selecting strategy for**, 341-343, 356
  - **SRE approach to**, 349-360
  - **SRE objectives for**, 344-349
  - **SRE principles applied to**, 367-368
  - **strict requirements**, 340
  - **technical challenges of**, 344
- **data processing pipelines**
  - **business continuity and**, 337
  - **challenges of uneven work distribution**, 328
  - **challenges to periodic pattern**, 328
  - **drawbacks of periodic**, 329-332
  - **effect of big data on**, 328
  - **monitoring problems**, 331-332
  - **origin of**, 327
  - **overview of**, 338
  - **pipeline depth**, 328
  - **simple vs. multiphase pipelines**, 328
  - **Workflow system**, 333, 335
- **data recovery**, 359
- **data validation**, 357
- **datacenters**
  - **backbone network for**, 15
  - **load balancing**, 231-246
  - **topology of**, 14
- **Decider**, 74
- **defense in depth, for data integrity**, 349, 361, 367
- **demand forecasting**, 11
- **dependency hierarchies**, 58, 263

This revised version provides a more organized and professional structure, ensuring clarity and coherence in the presentation of the references and index.