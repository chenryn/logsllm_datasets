### Distributed Environments and CUSTOS

In distributed environments, if a critical mass of correct hosts remains to detect misbehavior, traditional systems can only monitor network events and cannot provide insights into the internal state of hosts. In contrast, CUSTOS offers tamper-evidence over significantly larger audit streams, including system-level events. It is probabilistically guaranteed to detect compromised nodes engaging in anti-forensic activities.

### Conclusion

Despite the central importance of system logs in responding to modern security incidents, such as Advanced Persistent Threats (APTs), today's commodity operating systems fail to ensure log integrity beyond typical access controls. CUSTOS is the first tamper-evident logging solution that supports practical operating system constraints. It achieves this by decoupling event logging from cryptographic commitment, without compromising security, by leveraging features of Trusted Execution Environments (TEEs) available on current hardware.

We demonstrated that CUSTOS' log commitment protocol is three orders of magnitude faster than previous secure logging solutions and imposes only 2% to 7% runtime overhead on intensive workloads. Additionally, CUSTOS' auditing protocol can detect integrity violations with less than 3% network overhead. Thus, CUSTOS provides a realistic path forward for achieving practical tamper-evident auditing of operating systems.

### Acknowledgment

This work was co-funded by NSF awards #1657534, #1750024, #1909999, and an Intel ISRA award. We thank the anonymous reviewers for their valuable comments and suggestions. Special thanks to Omri Mor for his assistance in implementing CUSTOS during the initial stages of the project.

### References

[1] S. Arnautov, B. Trach, F. Gregor, T. Knauth, A. Martin, C. Priebe, J. Lind, D. Muthukumaran, D. O’Keeffe, M. L. Stillwell, D. Goltzsche, D. Eyers, R. Kapitza, P. Pietzuch, and C. Fetzer, “SCONE: Secure Linux containers with Intel SGX.” in Proc. of the USENIX conference on Operating Systems Design and Implementation (OSDI), 2016.
[2] P.-L. Aublin, F. Kelbert, D. O’Keeffe, D. Muthukumaran, C. Priebe, J. Lind, R. Krahn, C. Fetzer, D. Eyers, and P. Pietzuch, “LibSEAL: Revealing service integrity violations using trusted execution,” in Proc. of the EuroSys Conference (EuroSys), 2018.
[3] R. Bahmani, M. Barbosa, F. Brasser, B. Portela, A.-R. Sadeghi, G. Scerri, and B. Warinschi, “Secure multiparty computation from SGX,” in Proc. of the International Conference on Financial Cryptography and Data Security (FC), 2017.
[4] A. Bates, K. R. B. Butler, and T. Moyer, “Take only what you need: Leveraging mandatory access control policy to reduce provenance storage costs,” in Proc. of the USENIX Conference on Theory and Practice of Provenance (TaPP), 2015.
[5] A. Bates, W. U. Hassan, K. R. Butler, A. Dobra, B. Reaves, P. Cable, T. Moyer, and N. Schear, “Transparent web service auditing via network provenance functions,” in Proc. of the International World Wide Web Conference (WWW), 2017.
[6] A. Bates, B. Mood, M. Valafar, and K. Butler, “Towards secure provenance-based access control in cloud environments,” in Proc. of the ACM Conference on Data and Application Security and Privacy (CODASPY), 2013.
[7] A. Bates, D. Tian, K. R. Butler, and T. Moyer, “Trustworthy whole-system provenance for the Linux kernel,” in Proc. of the USENIX Security Symposium (USENIX), 2015.
[8] A. Baumann, M. Peinado, and G. Hunt, “Shielding applications from an untrusted cloud with Haven,” ACM Transactions on Computer Systems (TOCS), vol. 33, no. 3, 2015.
[9] G. Belding, “Ethical Hacking: Log Tampering 101,” InfoSec Institute, accessed 02-07-2020, https://resources.infosecinstitute.com/category/certifications-training/ethical-hacking/covering-tracks/log-tampering-101/.
[10] M. Bellare and B. Yee, “Forward integrity for secure audit logs,” Computer Science and Engineering Department, University of California at San Diego, Tech. Rep., 1997.
[11] K. Berlin, D. Slater, and J. Saxe, “Malicious behavior detection using Windows audit logs,” in Proc. of the ACM Workshop on Artificial Intelligence and Security (AISec), 2015.
[12] D. J. Bernstein, “Curve25519: new Diffie-Hellman speed records,” in Proc. of the International Workshop on Public Key Cryptography (PKC), 2006.
[13] G. Bolch, S. Greiner, H. De Meer, and K. S. Trivedi, Queueing networks and Markov chains: modeling and performance evaluation with computer science applications. John Wiley & Sons, 2006.
[14] F. Brasser, D. Gens, P. Jauernig, A.-R. Sadeghi, and E. Stapf, “SANCTUARY: ARMing TrustZone with user-space enclaves,” in Proc. of the Network and Distributed System Security Symposium (NDSS), 2019.
[15] S. Brenner, C. Wulf, D. Goltzsche, N. Weichbrodt, M. Lorenz, C. Fetzer, P. Pietzuch, and R. Kapitza, “SecureKeeper: Confidential ZooKeeper using Intel SGX,” in Proc. of the International Middleware Conference (Middleware), 2016.
[16] Carbon Black, “Global Incident Response Threat Report,” November 2018, accessed 04-20-2019, https://www.carbonblack.com/global-incident-response-threat-report/november-2018/.
[17] C. Cimpanu, “Hackers are increasingly destroying logs to hide attacks,” ZDNet, accessed 04-20-2019, https://www.zdnet.com/article/hackers-are-increasingly-destroying-logs-to-hide-attacks/.
[18] B. Coppens, I. Verbauwhede, K. De Bosschere, and B. De Sutter, “Practical mitigations for timing-based side-channel attacks on modern x86 processors,” in Proc. of the IEEE Symposium on Security and Privacy (S&P), 2009.
[19] V. Costan, I. Lebedev, and S. Devadas, “Sanctum: Minimal hardware extensions for strong software isolation,” in Proc. of the USENIX Security Symposium (USENIX), 2016.
[20] S. A. Crosby and D. S. Wallach, “Efficient data structures for tamper-evident logging.” in Proc. of the USENIX Security Symposium (USENIX), 2009.
[21] Dark Laboratory, “A better generation of log cleaners,” accessed 02-07-2020, https://web.archive.org/web/20070218231819/http://darklab.org/~jot/logclean-ng/logcleaner-ng-1.0-lib.html.
[22] T. T. A. Dinh, P. Saxena, E.-C. Chang, B. C. Ooi, and C. Zhang, “M2R: Enabling stronger privacy in MapReduce computation.” in Proc. of the USENIX Security Symposium (USENIX), 2015.
[23] M. Du, F. Li, G. Zheng, and V. Srikumar, “DeepLog: Anomaly detection and diagnosis from system logs through deep learning,” in Proc. of the ACM Conference on Computer and Communications Security (CCS), 2017.
[24] M. Dymshits, B. Myara, and D. Tolpin, “Process monitoring on sequences of system call count vectors,” in Proc. of the International Carnahan Conference on Security Technology (ICCST), 2017.
[25] European Parliament and of the Council, “Regulation (EU) 2016/679 on the protection of natural persons with regard to the processing of personal data and on the free movement of such data, and repealing directive 95/46/EC (General Data Protection Regulation),” Official Journal of the European Union, vol. L119, 2016.
[26] A. Ferraiuolo, A. Baumann, C. Hawblitzel, and B. Parno, “Komodo: Using verification to disentangle secure-enclave hardware from software,” in Proc. of the Symposium on Operating Systems Principles (SOSP), 2017.
[27] Fiehn Lab, “BLAST 2.7.1,” accessed 04-20-2019, http://fiehnlab.ucdavis.edu/staff/kind/collector/benchmark/blast-benchmark.
[28] B. Fisch, D. Vinayagamurthy, D. Boneh, and S. Gorbunov, “Iron: functional encryption using Intel SGX,” in Proc. of the ACM Conference on Computer and Communications Security (CCS), 2017.
[29] P. Gao, X. Xiao, D. Li, Z. Li, K. Jee, Z. Wu, C. H. Kim, S. R. Kulkarni, and P. Mittal, “SAQL: A stream-based query system for real-time abnormal system behavior detection,” in Proc. of the USENIX Security Symposium (USENIX), 2018.
[30] P. Gao, X. Xiao, Z. Li, F. Xu, S. R. Kulkarni, and P. Mittal, “AIQL: Enabling efficient attack investigation from system monitoring data,” in Proc. of the USENIX Security Symposium (USENIX), 2018.
[31] A. Gehani and D. Tariq, “SPADE: Support for provenance auditing in distributed environments,” in Proc. of the International Middleware Conference (Middleware), 2012.
[32] P. H. Gregory, CISSP Guide to Security Essentials, 2nd ed. Course Technology Press, 2015.
[33] R. A. Grimes, “Why it’s so hard to prosecute cyber criminals,” CSO Online, accessed 04-20-2019, https://www.csoonline.com/article/3147398/why-its-so-hard-to-prosecute-cyber-criminals.html.
[34] T. C. Group, “ISO/IEC 11889-1:2009 information technology – trusted platform module – part 1: Overview,” ISO, 2009, https://www.iso.org/standard/50970.html.
[35] Z. Gu, K. Pei, Q. Wang, L. Si, X. Zhang, and D. Xu, “LEAPS: Detecting camouflaged attacks with statistical learning guided by program analysis,” in Proc. of the Conference on Dependable Systems and Networks (DSN), 2015.
[36] A. Haeberlen, P. Kouznetsov, and P. Druschel, “PeerReview: Practical accountability for distributed systems,” in Proc. of the ACM Symposium on Operating Systems Principles (SOSP), 2007.
[37] S. Hales, “Last door log wiper,” Packet Storm Security, accessed 04-20-2019, https://packetstormsecurity.com/files/118922/LastDoor.tar.
[38] K. Haniradi, “mig-logcleaner-resurrected,” GitHub, accessed 02-07-2020, https://github.com/Kabot/mig-logcleaner-resurrected.
[39] T. D. Hanson, “tpl - a small binary serialization library for C,” GitHub, accessed 04-20-2019, https://github.com/troydhanson/tpl.
[40] G. Hartung, “Attacks on secure logging schemes,” in Proc. of the International Conference on Financial Cryptography and Data Security (FC), 2017.
[41] G. Hartung, B. Kaidel, A. Koch, J. Koch, and D. Hartmann, “Practical and robust secure logging from fault-tolerant sequential aggregate signatures,” in Proc. of the International Conference on Provable Security (ProvSec), 2017.
[42] W. U. Hassan, S. Guo, D. Li, Z. Chen, K. Jee, Z. Li, and A. Bates, “NoDoze: Combatting threat alert fatigue with automated provenance triage,” in Proc. of the Symposium on Network and Distributed System Security (NDSS), 2019.
[43] S. He, J. Zhu, P. He, and M. R. Lyu, “Experience report: System log analysis for anomaly detection,” in Proc. of IEEE International Symposium on Software Reliability Engineering (ISSRE), 2016.
[44] J. E. Holt, “Logcrypt: Forward security and public verification for secure audit logs,” in Proc. of the Australasian Information Security Workshop (AISW-NetSec), 2006.
[45] M. N. Hossain, S. M. Milajerdi, J. Wang, B. Eshete, R. Gjomemo, R. Sekar, S. Stoller, and V. Venkatakrishnan, “SLEUTH: Real-time 16
[46] T. Hunt, Z. Zhu, Y. Xu, S. Peter, and E. Witchel, “Ryoan: A distributed sandbox for untrusted computation on secret data.” in Proc. of the USENIX conference on Operating Systems Design and Implementation (OSDI), 2016.
[47] IBM Knowledge Center, “Storage and analysis of audit logs,” accessed 04-20-2019, https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.1.0/com.ibm.db2.luw.admin.sec.doc/doc/c0052328.html.
[48] Intel, “Intel SGX data protections now available for mainstream cloud platforms - IT peer network,” accessed 12-11-2019, https://itpeernetwork.intel.com/sgx-data-protection-cloud-platforms/.
[49] Intel Corporation, “Intel Software Guard Extensions (Intel SGX) SDK,” accessed 04-20-2019, https://software.intel.com/en-us/sgx-sdk.
[50] ——, “Intel Software Guard Extensions programming reference,” 2014, accessed 04-20-2019, https://software.intel.com/sites/default/files/managed/48/88/329298-002.pdf.
[51] (ISC)², “Cybersecurity certification - CISSP, certified information systems security professional,” accessed 04-20-2019, https://www.isc2.org/Certifications/CISSP.
[52] M. Jarrett, M. Bailie, E. Hagen, and E. Etringham, “Prosecuting computer crimes,” United States. Department of Justice. Office of Legal Education, 2010.
[53] M. Jarrett, M. Bailie, E. Hagen, and N. Judish, “Searching and seizing computers and obtaining electronic evidence in criminal investigations,” United States. Department of Justice. Office of Legal Education, 2009.
[54] Y. Ji, S. Lee, E. Downing, W. Wang, M. Fazzini, T. Kim, A. Orso, and W. Lee, “RAIN: Refinable attack investigation with on-demand inter-process information flow tracking,” in Proc. of the ACM Conference on Computer and Communications Security (CCS), 2017.
[55] Y. Ji, S. Lee, M. Fazzini, J. Allen, E. Downing, T. Kim, A. Orso, and W. Lee, “Enabling refinable cross-host attack investigation with efficient data flow tagging and tracking,” in Proc. of the USENIX Security Symposium (USENIX), 2018.
[56] JustLinux Forums, “Server hacked!! /var/log deleted. How can I trace hacker!?” accessed 04-20-2019, http://forums.justlinux.com/showthread.php?123851-server-hacked-var-log-deleted-how-can-i-trace-hacker.
[57] V. Karande, E. Bauman, Z. Lin, and L. Khan, “SGX-Log: Securing system logs with SGX,” in Proc. of the ACM Asia Conference on Computer and Communications Security (ASIA CCS), 2017.
[58] K. Karen and S. Murugiah, “NIST special publication 800-92, guide to computer security log management,” 2006.
[59] A. D. Keromytis, “Transparent computing engagement 3 data,” GitHub, 2018, accessed 12-12-2019, https://github.com/darpa-i2o/Transparent-Computing.
[60] Keystone, “An open framework for architecting TEEs,” accessed 04-20-2019, https://keystone-enclave.org/.
[61] S. Kim, J. Han, J. Ha, T. Kim, and D. Han, “Enhancing security and privacy of Tor’s ecosystem by using trusted execution environments,” in Proc. of the USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2017.
[62] T. Kim, X. Wang, N. Zeldovich, and M. F. Kaashoek, “Intrusion recovery using selective re-execution,” in Proc. of the USENIX Conference on Operating Systems Design and Implementation (OSDI), 2010.
[63] S. T. King and P. M. Chen, “Backtracking intrusions,” in Proc. of the ACM Symposium on Operating Systems Principles (SOSP), 2003.
[64] S. T. King, Z. M. Mao, D. G. Lucchetti, and P. M. Chen, “Enriching intrusion alerts through multi-host causality.” in Proc. of the Network