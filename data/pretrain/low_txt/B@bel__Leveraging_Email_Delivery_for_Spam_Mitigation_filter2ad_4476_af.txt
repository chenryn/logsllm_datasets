### Coverage Issues with Sender-Based Techniques

Previous research has demonstrated that IP blacklists often fail to detect a significant portion of IP addresses involved in spamming activities, particularly due to the highly dynamic nature of the machines (typically botnets) used for sending spam [32, 37, 38]. Our method introduces a novel, third approach that focuses on the manner in which messages are sent. This approach avoids the need for costly content analysis and does not require the design or implementation of a reputation metric or blacklist. Instead, we aim to recognize the SMTP dialect during the actual SMTP transaction. Our empirical results show that this method can effectively distinguish between spam and legitimate emails, complementing both pre-acceptance and post-acceptance approaches.

### Related Work

Beverly et al. [5] and Kakavelakis et al. [19] also explored this direction by leveraging the fact that spambots often have poor network connections, and they performed spam detection by analyzing TCP-level features such as retransmissions and connection resets. However, our system is more robust because it does not rely on assumptions about the network connectivity of the mail client.

### Protocol Analysis: Core Idea

The core idea behind our approach is to learn the SMTP dialect used by a particular client. This problem is closely related to automated protocol reverse-engineering, where an unknown protocol is analyzed to determine its structure and individual elements [6, 13]. Early work in this area focused on clustering network traces to group similar messages [14], while later methods extracted protocol information by analyzing program execution during network communication [10, 15, 24, 45, 47]. More sophisticated methods can handle multiple messages and recover the protocol's state machine. For example, Dispatcher is a tool capable of extracting the format of protocol messages when only one endpoint (the bot binary) is accessible [9]. Cho et al. leveraged the information extracted by Dispatcher to learn C&C protocols [11]. Brumley et al. studied how deviations in protocol implementations can be used to detect errors or generate fingerprints [7].

Our problem is related to previous work on protocol analysis, as we extract different SMTP protocol variations and use these variations to build fingerprints. However, we treat the protocol speaker (the bot) as a black box and do not perform code analysis or instrumentation to find protocol formats or deviations. This is important because malware is notoriously difficult to analyze, and we might not always have a malware sample available. Our technique allows us to build SMTP dialect state machines even when interacting with previously unknown spambots.

### Fingerprinting Protocols

There is also a line of research on fingerprinting protocols [12, 30, 49]. Initial work in this area relied on manual analysis, but there are now methods like FiG that automatically generate fingerprints for DNS servers [42]. The main difference between our work and FiG is that our dialects are stateful, while FiG operates on individual messages. This entirely avoids the need to merge and explore protocol state machines. However, as discussed previously, individual messages are typically insufficient to distinguish between SMTP engines.

### Conclusion

In this paper, we introduced a novel method to detect and mitigate spam emails that complements content- and sender-based analysis methods. We focus on how email messages are sent and derive methods to influence the spam delivery mechanism during SMTP transactions. On one hand, we show how small deviations in the SMTP implementation of different email agents (so-called SMTP dialects) allow us to detect spambots during the actual SMTP communication. On the other hand, we study how the feedback mechanism used by botnets can be poisoned, which can negatively impact the effectiveness of botnets.

Empirical results confirm that both aspects of our approach can be used to detect and mitigate spam emails. While spammers might adapt their practices in response to our findings, we argue that this reduces their performance and flexibility.

### Acknowledgments

This work was supported by the Office of Naval Research (ONR) under Grant N000140911042, the National Science Foundation (NSF) under grants CNS-0845559 and CNS-0905537, Secure Business Austria, and the German Federal Ministry of Education and Research under grant 01BY1111 / MoBE. We would like to thank our shepherd Alex Moshchuk, the anonymous reviewers for their valuable comments, and Andreas Boschke for his help in setting up some of our experiments.

### References

[1] RFC 821: Simple Mail Transfer Protocol. http://tools.ietf.org/html/rfc821.
[2] SURBL URI reputation data. http://www.surbl.org/.
[3] The Spamhaus Project. http://www.spamhaus.org.
[4] BAYER, U., MOSER, A., KRUEGEL, C., AND KIRDA, E. Dynamic analysis of malicious code. Journal in Computer Virology 2, 1 (2006), 67â€“77.
[5] BEVERLY, R., AND SOLLINS, K. Exploiting Transport-level Characteristics of Spam. In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2008).
[6] BORISOV, N., BRUMLEY, D., WANG, H. J., DUNAGAN, J., JOSHI, P., AND GUO, C. Generic Application-Level Protocol Analyzer and its Language. In Symposium on Network and Distributed System Security (NDSS) (2007).
[7] BRUMLEY, D., CABALLERO, J., LIANG, Z., NEWSOM, J., AND SONG, D. Towards Automatic Discovery of Deviations in Binary Implementations with Applications to Error Detection and Fingerprint Generation. In USENIX Security Symposium (2007).
[8] CABALLERO, J., GRIER, C., KREIBICH, C., AND PAXSON, V. Measuring Pay-per-Install: The Commoditization of Malware Distribution. In USENIX Security Symposium (2011).
[9] CABALLERO, J., POOSANKAM, P., KREIBICH, C., AND SONG, D. X. Dispatcher: Enabling Active Botnet Infiltration Using Automatic Protocol Reverse-Engineering. In ACM Conference on Computer and Communications Security (CCS) (2009).
[10] CABALLERO, J., YIN, H., LIANG, Z., AND SONG, D. X. Polyglot: Automatic Extraction of Protocol Message Format Using Dynamic Binary Analysis. In ACM Conference on Computer and Communications Security (CCS) (2007).
[11] CHO, C. BABIC, D. S. D. Inference and Analysis of Formal Models of Botnet Command and Control Protocols. In ACM Conference on Computer and Communications Security (CCS) (2010).
[12] COMER, D. E., AND LIN, J. C. Probing TCP Implementations. In USENIX Summer Technical Conference (1994).
[13] COMPARETTI, P. M., WONDRACEK, G., KRUEGEL, C., AND KIRDA, E. Prospex: Protocol Specification Extraction. In IEEE Symposium on Security and Privacy (2009).
[14] CUI, W., KANNAN, J., AND WANG, H. J. Discoverer: Automatic Protocol Reverse Engineering from Network Traces. In USENIX Security Symposium (2007).
[15] CUI, W., PEINADO, M., CHEN, K., WANG, H. J., AND IRUNBRIZ, L. Tupni: Automatic Reverse Engineering of Input Formats. In ACM Conference on Computer and Communications Security (CCS) (2008).
[16] DRUCKER, H., WU, D., AND VAPNIK, V. N. Support Vector Machines for Spam Categorization. In IEEE Transactions on Neural Networks (1999).
[17] HAO, S., SYED, N. A., FEAMSTER, N., GRAY, A. G., AND KRASSER, S. Detecting Spammers with SNARE: Spatio-temporal Network-level Automatic Reputation Engine. In USENIX Security Symposium (2009).
[18] JOHN, J. P., MOSHCHUK, A., GRIBBLE, S. D., AND KRISHNAMURTHY, A. Studying Spamming Botnets Using Botlab. In USENIX Symposium on Networked Systems Design and Implementation (NSDI) (2009).
[19] KAKAVELAKIS, G., BEVERLY, R., AND J., Y. Auto-learning of SMTP TCP Transport-Layer Features for Spam and Abusive Message Detection. In USENIX Large Installation System Administration Conference (2011).
[20] KANICH, C., WEAVER, N., MCCOY, D., HALVORSON, T., KREIBICH, C., LEVCHENKO, K., PAXSON, V., VOELKER, G., AND SAVAGE, S. Show Me the Money: Characterizing Spam-advertised Revenue. USENIX Security Symposium (2011).
[21] KASPERSKY LAB. Spam Report: April 2012. https://www.securelist.com/en/analysis/204792230/Spam_Report_April_2012, 2012.
[22] KREIBICH, C., KANICH, C., LEVCHENKO, K., ENRIGHT, B., VOELKER, G. M., PAXSON, V., AND SAVAGE, S. On the Spam Campaign Trail. In USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET) (2008).
[23] LEIBA, B. DomainKeys Identified Mail (DKIM): Using digital signatures for domain verification. In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2007).
[24] LIN, Z., JIANG, X., XU, D., AND ZHANG, X. Automatic Protocol Format Reverse Engineering through Context-Aware Monitored Execution. In Symposium on Network and Distributed System Security (NDSS) (2008).
[25] LOWD, D., AND MEEK, C. Good Word Attacks on Statistical Spam Filters. In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2005).
[26] M86 LABS. Security Labs Report. http://www.m86security.com/documents/pdfs/security_labs/m86_security_labs_report_2h2011.pdf, 2011.
[27] MEYER, T., AND WHATELEY, B. SpamBayes: Effective Open-source, Bayesian Based, Email Classification System. In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2004).
[28] NELSON, B., BARRENO, M., CHI, F. J., JOSEPH, A. D., RUBINSTEIN, B. I. P., SAINI, U., SUTTON, C., TYGAR, J. D., AND XIA, K. Exploiting Machine Learning to Subvert Your Spam Filter. In USENIX Symposium on Networked Systems Design and Implementation (NSDI) (2008).
[29] PATHAK, A., HU, Y. C., AND MAO, Z. M. Peeking into Spammer Behavior from a Unique Vantage Point. In USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET) (2008).
[30] PAXSON, V. Automated Packet Trace Analysis of TCP Implementations. In ACM SIGCOMM Conference (1997).
[31] PITSILLIDIS, A., LEVCHENKO, K., KREIBICH, C., KANICH, C., VOELKER, G. M., PAXSON, V., WEAVER, N., AND SAVAGE, S. Botnet Judo: Fighting Spam with Itself. In Symposium on Network and Distributed System Security (NDSS) (2010).
[32] RAMACHANDRAN, A., DAGON, D., AND FEAMSTER, N. Can DNS-based Blacklists Keep Up with Bots? In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2006).
[33] RAMACHANDRAN, A., AND FEAMSTER, N. Understanding the Network-level Behavior of Spammers. SIGCOMM Comput. Commun. Rev. 36 (August 2006).
[34] RAMACHANDRAN, A., FEAMSTER, N., AND VEMPALA, S. Filtering Spam with Behavioral Blacklisting. In ACM Conference on Computer and Communications Security (CCS) (2007).
[35] SAHAMI, M., DUMAIS, S., HECKERMANN, D., AND HORVITZ, E. A Bayesian Approach to Filtering Junk Email. Learning for Text Categorization (1998).
[36] SCULLEY, D., AND WACHMAN, G. M. Relaxed Online SVMs for Spam Filtering. In ACM SIGIR Conference on Research and Development in Information Retrieval (2007).
[37] SINHA, S., BAILEY, M., AND JAHANIAN, F. Shades of Grey: On the Effectiveness of Reputation-based "Blacklists." In International Conference on Malicious and Unwanted Software (2008).
[38] STONE-GROSS, B., HOLZ, T., STRINGHINI, G., AND VIGNA, G. The Underground Economy of Spam: A Botmasterâ€™s Perspective of Coordinating Large-Scale Spam Campaigns. In USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET) (2011).
[39] STRINGHINI, G., HOLZ, T., STONE-GROSS, B., KRUEGEL, C., AND VIGNA, G. BotMagnifier: Locating Spammers on the Internet. In USENIX Security Symposium (2011).
[40] SYMANTEC CORP. State of Spam & Phishing Report. http://www.symantec.com/business/theme.jsp?themeid=state_of_spam, 2010.
[41] TAYLOR, B. Sender Reputation in a Large Webmail Service. In Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference (CEAS) (2006).
[42] VENKATARAMAN, S., CABALLERO, J., POOSANKAM, P., KANG, M. G., AND SONG, D. X. FiG: Automatic Fingerprint Generation. In Symposium on Network and Distributed System Security (NDSS) (2007).
[43] VENKATARAMAN, S., SEN, S., SPATSCHECK, O., HAFFNER, P., AND SONG, D. Exploiting Network Structure for Proactive Spam Mitigation. In USENIX Security Symposium (2007).
[44] VIRUSTOTAL. Free Online Virus, Malware and URL Scanner. https://www.virustotal.com/.
[45] WANG, Z., JIANG, X., CUI, W., WANG, X., AND GRACE, M. ReFormat: Automatic Reverse Engineering of Encrypted Messages. In European Symposium on Research in Computer Security (ESORICS) (2009).
[46] WOLF, W. An Algorithm for Nearly-Minimal Collapsing of Finite-State Machine Networks. In IEEE International Conference on Computer-Aided Design (ICCAD) (1990).
[47] WONDRACEK, G., COMPARETTI, P. M., KRUEGEL, C., AND KIRDA, E. Automatic Network Protocol Analysis. In Symposium on Network and Distributed System Security (NDSS) (2008).
[48] XIE, Y., YU, F., ACHAN, K., PANIGRAHY, R., HULTEN, G., AND OSIPKOV, I. Spamming Botnets: Signatures and Characteristics. SIGCOMM Comput. Commun. Rev. 38 (August 2008).
[49] ZALEWSKI, M. p0f v3. http://lcamtuf.coredump.cx/p0f3/, 2012.
[50] ZHUANG, L., DUNAGAN, J., SIMON, D. R., WANG, H. J., AND TYGAR, J. D. Characterizing Botnets From Email Spam Records. In USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET) (2008).