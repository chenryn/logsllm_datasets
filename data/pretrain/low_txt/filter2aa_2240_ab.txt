### 80
### 100
### Latest Major Version within Browser Type

| Date       | Share of Latest Version (%) |
|------------|-----------------------------|
| 2007-01-01 | 83.3%                       |
| 2007-04-01 | 65.3%                       |
| 2007-07-01 | 56.1%                       |
| 2007-10-01 | 47.6%                       |
| 2008-01-01 | 16.7%                       |
| 2008-04-01 | 34.7%                       |
| 2008-07-01 | 43.9%                       |
| 2008-10-01 | 52.4%                       |

**Figure 2: Upgrade Dynamics of Major Versions of Internet Explorer (IE7), Firefox (FF2), Opera (OP9), and Safari (SF3)**
This figure illustrates the upgrade dynamics of major versions of Internet Explorer (IE7), Firefox (FF2), Opera (OP9), and Safari (SF3) from January 2007 to June 2008. The plot shows the usage share of the latest major version within each browser type.

### Share of Most Secure Browser Versions

| Browser    | Share of Most Secure Version (%) |
|------------|----------------------------------|
| Firefox    | 83.3%                            |
| Safari     | 65.3%                            |
| Opera      | 56.1%                            |
| Internet Explorer | 47.6%                |

**Figure 3: Maximum Share of Users Surfing the Web with the Most Secure Versions of Firefox, Safari, Opera, and Internet Explorer in June 2008 as Seen on Google Websites.**
Except for Apple’s Safari SF3, which surpassed a 60% share within three months of its release—likely influenced by Apple’s controversial inclusion of the new Web browser in the auto-updates of other popular Apple software products [22].

### 3.3 Browser Insecurity Iceberg

Just as a floating iceberg only exhibits part of its mass above the waterline, we believe that our measurement of potentially insecure Web browsers based upon major and minor version information is smaller than the global number of users at risk. Insecure Web browsers (i.e., those with "built-in" vulnerabilities and security weaknesses) are a critical security problem, but vulnerable plug-ins that are accessible (and exploitable) through the Web browser extend the insecurity iceberg and form the part hidden below the water surface.

#### 3.3.1 Browsers with Built-in Vulnerabilities

We have estimated the global number of users with browsers having "built-in" vulnerabilities based upon our measurements and Secunia’s PSI study. Secunia [21] identified (for the month of May 2008) that 4.4% of IE7, 8.1% of Firefox, 14.3% of Safari (Windows only), and 15.2% of Opera users had not applied the most recent security patches available to them from the software vendor.

In comparison, our Web server log-based measurements discovered that 16.7% of Firefox, 34.7% of Safari (all OS), and 43.9% of Opera Web browser installations had not applied the most recent security patches. Our results for Firefox, Safari, and Opera were higher than those of Secunia’s, differing by a factor of 2.1 (Firefox), 2.4 (Safari), and 2.9 (Opera). We attribute this difference to a probable bias for more security-aware users to take advantage of Secunia’s security scanner PSI than the average global community.

To derive the global population of users with browsers vulnerable to built-in vulnerabilities, we used the results of our measurements for Firefox, Safari, and Opera. We chose to estimate the value for IE7 based on Secunia’s findings as shown in Table 3:

- **Estimate A:**
  - Firefox, Safari, and Opera shares are from our Google Web log measurements.
  - The IE7 share of 4.4% is from Secunia’s measurement [21]. This is a minimum estimate as Secunia’s measurement is likely biased towards more security-aware users.
  - IE6 is not considered a most secure Web browser version (independent of patch level) as per Microsoft’s upgrade recommendation in [19].

- **Estimate B:**
  - Correcting the bias of PSI (IE7 x 2.1).

**Table 3: Estimation of the Number of Users Not Using the Most Secure Version of Their Browser.**

| Browser Type | Share of Browsers in Daily Use (%) | Browsers in Daily Use Worldwide (Million) | Estimate A: Share of Not Most Secure Browser Versions (%) | Not Most Secure Browser Versions (Million) | Estimate B: Share of Not Most Secure Browser Versions (%) | Not Most Secure Browser Versions (Million) |
|--------------|------------------------------------|-------------------------------------------|-------------------------------------------------------------|--------------------------------------------|-------------------------------------------------------------|--------------------------------------------|
| IE w/o IE7   | 37.2%                              | 523.8                                     | 100.0%                                                      | 524                                        | 100.0%                                                      | 524                                        |
| IE7          | 41.1%                              | 578.7                                     | 4.4%                                                        | 25                                         | 9.2%                                                        | 53                                         |
| FF           | 16.1%                              | 226.7                                     | 16.7%                                                       | 38                                         | 16.7%                                                       | 38                                         |
| SF           | 3.4%                               | 47.9                                      | 34.7%                                                       | 17                                         | 34.7%                                                       | 17                                         |
| OP           | 0.8%                               | 11.3                                      | 43.9%                                                       | 5                                          | 43.9%                                                       | 5                                          |
| Total        | 98.6%                              | 1388.3                                    | 43.3%                                                       | 609                                        | 45.2%                                                       | 637                                        |

We apply the factor 2.1 to the IE7 share (2.1 x 4.4% = 9.2%) to correct for the bias of Secunia’s measurement within a security-aware user population. The factor was found when comparing Firefox, Safari, and Opera data from Google log files with Secunia’s data.

Our estimate B shows that at least 45.2%, or 637 million users, were not using the most secure Web browser version on any working day from January 2007 to June 2008. These browsers are an easy target for drive-by download attacks as they are potentially vulnerable to known exploits. This represents the tip of the Browser Insecurity Iceberg in Figure 1.

### Browsers with Plug-in Vulnerabilities

Because our data sources were limited to the data logged by Google’s Web servers and the USER-AGENT fields for major and minor Web browser version information, and as plug-in version information is not typically stored in this data field, we were not able to directly measure the number of users having out-of-date and vulnerable Web browser plug-ins. However, there is public evidence that this number adds to the number of users with browsers having "built-in" vulnerabilities:

- **Fully Patched Browsers at Risk:** Through vulnerable plug-ins, even hosts running the latest most secure browser version are at risk.
- **Cross-browser and Cross-platform Plug-ins:** Most plug-ins are compatible with multiple popular Web browser technologies and operating systems. Therefore, a larger population of users are exposed if a common plug-in is found to be vulnerable.
- **Multiple Popular Plug-ins per Browser:** A typical Web browser has more than one plug-in application installed. Media players and other plug-ins are ubiquitous, with individual usage shares frequently exceeding 80% [2].
- **Plug-in Patching Discipline:** Considering our analysis of insecure Web browser usage, we deem it unlikely that the same users achieve higher patch levels for multiple plug-ins installed; with each plug-in relying on different patching and updating mechanisms. For example, Secunia’s numbers state that 18.7% of all WinAMP 5 installations miss important security updates, and 21.7% of all Quicktime 7 installations are out of date [17].

Users with browsers having plug-in vulnerabilities and those found to have browsers with built-in vulnerabilities are not mutually exclusive. While we can estimate the tip of the Browser Insecurity Iceberg based on global measurements, additional users at risk are hidden below the water line as shown in Figure 1.

**Table 4: Usage Shares of Some Widely Used Plug-ins.**

| Plug-In            | Vendor   | Share   | Support   |
|--------------------|----------|---------|-----------|
| Flash Player       | Adobe    | 98.8%   | All       |
| Java               | Sun      | 84.0%   | All       |
| Media Player       | Microsoft| 82.2%   | IE only   |
| QuickTime Player   | Apple    | 66.8%   | All       |
| Shockwave Player   | Adobe    | 55.6%   | All       |
| RealOne Player     | Real Networks | 47.1% | All       |
| Acrobat PDF Reader | Adobe    | >80%    | All       |

### 4. Towards a Safer Browsing Experience

#### 4.1 Existing Technology Solutions

There exist today a number of technologies that have already been proven to offer some degree of protection against threats that target insecure and vulnerable Web browsers. While none of these technologies are currently capable of providing full protection against the threats, wherever possible, we recommend that enterprises and vendors deploy or implement them as part of their defense-in-depth strategy to help reduce the surface area of potential attacks.

##### 4.1.1 Auto-update

Although Web browser users wish for perfect software that will never have any exploitable software vulnerabilities, the nearest they can realistically hope for is that any vulnerabilities are promptly fixed by the software vendors and instantly applied to their browser. Critical to this instantaneous patching process is the mechanism of "auto-update." Our measurement confirmed that Web browsers which implement an internal auto-update patching mechanism do much better in terms of faster update adoption rates than those without.

Our comparison of the update dynamics between Firefox and Opera identified that auto-update mechanisms are crucial for timely patching. Firefox’s auto-update was found to be way more effective than Opera’s manual update download reminder strategy.

In our measurement period from January 2007 to June 2008, most users updated to a new version of Firefox within three days of a new public release, resulting in up to 83% of users having the most current and secure Firefox version installed. It took users of the Opera Web browser an average of 11 days before reaching an update saturation at a level of up to 56% of the users running the most current and secure Opera version. While Firefox and Opera check for updates when the browser is used, Safari relies on an external Apple-updater that appears to only poll for new updates at scheduled regular intervals, while Internet Explorer gets updated as part of the monthly distributed Windows patches.

Regarding speed for upgrading to the next major browser version, Firefox, Safari, and Opera users clearly outperformed Internet Explorer users (see Figure 2). Considering that Microsoft offers Internet Explorer 7 as an auto-upgrade from Internet Explorer 6 as part of the monthly Windows updates and that it requires a manual patch to prevent upgrading to version 7, it is rather surprising to see how slow the migration to the most secure version has been.

We believe the auto-update mechanism as implemented within Firefox to be the most efficient patching mechanism of the Web browsers studied. Firefox’s mechanism regularly polls an online authority to verify whether a new version of the Web browser is available and typically prompts the user to update if a new version exists. With a single click (assuming that the user has administrative rights on the host), the update is downloaded and installed. Just as importantly, Firefox also checks for many of the currently installed Firefox plug-ins if they are similarly up to date, and, if not, will prompt the user to update them. Opera’s update mechanism is essentially the same procedure as a manual download and re-installation of the browser.

While Microsoft’s operating system auto-update functionality encompasses the Internet Explorer update mechanism even if the browser is not in use, the fact that patch updates (for both Internet Explorer 6 and 7) are typically only made available on a monthly basis means that updates are released less frequently (when compared to Firefox), which can result in a lower short-term patching effectiveness.

Based upon our findings, we strongly recommend that software vendors embrace auto-update mechanisms within their products that are capable of identifying the availability of new patches and installing security updates as quickly and efficiently as possible—ideally enabled by default and causing minimal disruption to the user. We also recommend that these same auto-update mechanisms are capable of alerting the user of any plug-ins currently exposed through the Web browser that have newer and more secure versions available.

##### 4.1.2 Perimeter URL Filtering

In light of mass-defacements and the organized "seeding" of Web sites for the purpose of drive-by download attacks, current URL filtering technologies can help to mitigate a fraction of the threat. When URL filtering technologies are deployed at the perimeter of a business network, and all corporate users proxy their Internet page requests through it, vulnerable hosts can usually be protected from Web sites known to be hosting malicious content designed to compromise vulnerable Web browsers.

If a Web site or particular URL is known to be malicious, it is a trivial process to prevent Web browser users from navigating to the site and accessing the malicious content. However, a limitation of this protection is the extent of the URL database. If a malicious URL is not listed within the filtering database, no filtering protection is typically applied.

Major vendors that offer URL filtering solutions tend to have extensive coverage of well-known and previously identified malicious Web sites and are quick to incorporate new URL filters once additional malicious Web sites are reported. As such, URL filtering technologies have proven to perform well against most current-generation mass-defacement iframe manifestations, largely due to the fact that the iframes injected into vulnerable Web sites during the mass-defacements tend to point to only a limited set of URLs that host the malicious infection code. However, there is an expectation that the criminals behind these attacks will soon adopt new techniques designed to bypass less agile URL filtering technologies.

We believe that URL filtering technologies are a valuable protection for reducing vulnerable Web browser exploitation. Given the success of this class of protection technology in helping to mitigate the drive-by download threat, we encourage its use beyond just protecting corporate environments. Some Internet Service Providers (ISPs) already offer URL filtering services to their customers, and several popular search engine providers have also begun to issue visible alerts to users for URLs known to be malicious or fraudulent. We encourage vendors to collaborate and share information on newly identified malicious URLs (in the same vein as the malware research community already shares malware and analysis results) so that the most current and exhaustive filtering lists are available for the protection of all.

#### 4.2 Proposed Technology Solutions

While the previously discussed protection technologies provide a level of defense against current Web browser exploitation, they are not sufficient to address the full spectrum of threats. We propose the following additional technology solutions to further enhance the security of Web browsing experiences.