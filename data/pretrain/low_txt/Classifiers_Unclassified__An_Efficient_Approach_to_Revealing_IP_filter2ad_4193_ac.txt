### 3.3 Priority Rules

We analyzed how the device classifies a flow when multiple rules match a single flow. These "tie-breaker" cases, which we found to be consistent over time, provide additional insight into the accuracy of the classifier and its resilience to subversion.

To determine the prioritization of matching fields, we tested all combinations of text in these fields for HTTP traffic. Figure 2 illustrates the decision process based on our observations. The device first examines the content in the GET request. If no match is found, it then checks the Content-Type headers from the server response.

Notably, the device follows a "match-and-forget" policy, where an entire flow is classified by the highest priority matching rule, even if subsequent packets match a different, potentially more accurate rule. For example, if the URI contains `/user/youtube` and the Host contains `facebook.com`, the flow is classified as YouTube rather than Facebook. The priority of different matching rules in the GET request depends on both the field and the content.

For instance, a FrankenFlow with `Host: www.hulu.com` and `User-Agent: Pandora` is classified based on which header appears first in the GET request (i.e., if Hulu appears first, it is classified as Hulu). In contrast, a FrankenFlow with `Host: facebook.com` and `User-Agent: Pandora` is always classified as Pandora, regardless of the order of headers in the GET request.

Our results for classification-rule priorities for all 87 matching keywords in HTTP traffic are summarized in Table 3. We identified six distinct priority groups, with only two groups containing more than one service. For example, if the URI matches NBC Sports, the classifier will label the entire flow as NBC Sports, even if strings for YouTube, Netflix, or iPlayer also appear in the flow.

When multiple matching strings from the third priority group appear in the same flow, the device uses another set of tie-breaking priorities, listed in Table 4. For example, if Netflix and Facebook appear in the Host header, the flow is classified as Netflix, regardless of the position of the string `netflix` in the host field (because Netflix is in a higher priority group). For matching rules in the same tie-breaking group, such as Netflix and LinkedIn, the flow is classified as the first keyword to appear in the Host string. We found no particular reason for the priority order used by the device.

The device classifies HTTPS traffic with multiple matching rules similarly to HTTP. For example, after matching on a TLS Client Hello packet, the device ignores matching rules in the server response.

### 4. Additional Case Studies

We also tested our methodology against two other traffic shaping devices: a carrier-grade IPS device in our possession and a deployed device in T-Mobile’s network.

#### Carrier-Grade IPS Device (Testbed)

Our IPS device uses coarse-grained classification, identifying "streaming video" traffic without specifying applications. We tested all our recorded streaming video traces against the device and found that it only classified a Netflix trace from 2014 as video traffic (newer Netflix traces were not classified). The device matched on the string `ftypmp4` (presumably matching "file type mp4") in the HTTP payload. This is the only case where the device inspected packet content beyond HTTP headers. We suspect the poor matching results are due to outdated rules and the device's primary focus on detecting security threats rather than applications.

#### T-Mobile’s Binge On Service

T-Mobile’s "Binge On" service allows opt-in subscribers to stream video content from participating providers without counting those bytes against their data plan (i.e., zero-rated content). Previous work by Molavi et al. [8] showed that T-Mobile identifies Binge-On-eligible content by inspecting values in HTTP Content-Type and Host headers, as well as some fields of the TLS handshake. The ground truth signal that traffic is classified as Binge On is that its data is zero-rated (based on our account’s data-usage counter).

Using this information and the methodology in Section 2, we revisited Binge On. Our analysis revealed that Netflix, previously identified using HTTP traffic, has since moved to HTTPS connections. The T-Mobile classifier now checks the SNI field for the string `nflx` and the contents of the Common Name in the server certificate in the TLS handshake for the value `nflxvideo.net`. These highly specific matching fields are surprising, as domain names often change and require significant manual maintenance.

Interestingly, unlike the packet-shaping device in our testbed, T-Mobile’s classifier parses the TLS handshake and will not properly detect HTTPS traffic if the TLS packets are malformed or the value is not in a matching field (SNI or Common Name).

We also investigated priorities when a packet matches multiple applications and found that T-Mobile matches only on the last Host header if multiple are present. This leads to zero-rated traffic if the last header matches a BingeOn participant, even if other headers do not. For example, if the first header is a Google App Engine domain, website content is returned without error, even though there are multiple Host headers. This provides a way to zero-rate arbitrary HTTP traffic beyond what was previously found [8].

### 5. Discussion and Conclusion

In this paper, we presented an efficient approach for identifying the matching rules used in traffic shapers for applying policies such as packet shaping, security, and zero-rating. Using existing application traffic, we demonstrated that our approach facilitates efficient and reliable discovery of matching rules. We applied this approach to several devices and found that their approach to classifying the applications we tested was surprisingly simple and generally based on matching text in a small number of HTTP and HTTPS fields.

Our work on revealing matching rules provides a solid framework for researchers and regulators to audit implementations of policies in today’s middlebox deployments, understand their impact on issues such as network performance and net neutrality, and assess security implications. As part of our future work, we are investigating other deployments and extending our analysis to UDP traffic. We expect to further refine our methodology as we encounter new policies and classifier implementations not covered by our current approach.

### Acknowledgements

We thank the anonymous reviewers and our shepherd Renata Teixeira for their helpful feedback. This work is supported in part by a Google Research Award and NSF awards CNS-1617728, CNS-1350720, and CNS-1518845.

### References

[1] Complete MIME types list. http://www.freeformatter.com/mime-types-list.html.
[2] Neubot – the network neutrality bot. http://www.neubot.org.
[3] T-Mobile BingeOn. http://www.t-mobile.com/offer/binge-on-streaming-video.html.
[4] Global DPI market 2014-2018: Key vendors are Allot Communications, Cisco, Procera Networks, and Sandvine. http://www.prnewswire.com/news-releases/global-dpi-market-2014-2018-key-vendors-are-allot-communications-cisco-procera-networks-and-sandvine-275106991.html, September 2014.
[5] V. Bashko, N. Melnikov, A. Sehgal, and J. Schonwalder. Bonafide: A traffic shaping detection tool for mobile networks. In IFIP/IEEE International Symposium on Integrated Network Management (IM2013), 2013.
[6] M. Dischinger, M. Marcon, S. Guha, K. P. Gummadi, R. Mahajan, and S. Saroiu. Glasnost: Enabling end users to detect traffic differentiation. In Proc. of USENIX NSDI, 2010.
[7] FCC announces “Measuring Mobile America” program. http://www.fcc.gov/document/fcc-announces-measuring-mobile-america-program.
[8] A. M. Kakhki, F. Li, D. R. Choffnes, E. Katz-Bassett, and A. Mislove. BingeOn under the microscope: Understanding T-Mobile’s zero-rating implementation. In Proc. of SIGCOMM Workshop on Internet QoE, 2016.
[9] A. M. Kakhki, A. Razaghpanah, A. Li, H. Koo, R. Golani, D. R. Choffnes, P. Gill, and A. Mislove. Identifying traffic differentiation in mobile networks. In Proc. of IMC, 2015.
[10] P. Kanuparthy and C. Dovrolis. ShaperProbe: End-to-end detection of ISP traffic shaping using active methods. In Proc. of IMC, 2011.
[11] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson. Netalyzr: Illuminating the edge network. In Proc. of IMC, 2010.
[12] R. Mahajan, M. Zhang, L. Poole, and V. Pai. Uncovering performance differences among backbone ISPs with Netdiff. In Proc. of USENIX NSDI, 2008.
[13] Measurement Lab Consortium. ISP interconnection and its impact on consumer internet performance. http://www.measurementlab.net/blog/2014_interconnection_report, October 2014.
[14] A. Nikravesh, H. Yao, S. Xu, D. R. Choffnes, and Z. M. Mao. Mobilyzer: An open platform for controllable mobile network measurements. In Proc. of MobiSys, 2015.
[15] J. Ren, A. Rao, M. Lindorfer, A. Legout, and D. R. Choffnes. ReCon: Revealing and controlling privacy leaks in mobile network traffic. In Proc. of MobiSys, 2016.
[16] Switzerland network testing tool. https://www.eff.org/pages/switzerland-network-testing-tool.
[17] M. B. Tariq, M. Motiwala, N. Feamster, and M. Ammar. Detecting network neutrality violations with causal inference. In CoNEXT, 2009.
[18] N. Weaver, C. Kreibich, M. Dam, and V. Paxson. Here Be Web Proxies. In Proc. PAM, 2014.
[19] N. Weaver, R. Sommer, and V. Paxson. Detecting forged TCP reset packets. In Proc. of NDSS, 2009.
[20] X. Xu, Y. Jiang, T. Flach, E. Katz-Bassett, D. Choffnes, and R. Govindan. Investigating transparent web proxies in cellular networks. In Proc. PAM, 2015.
[21] Y. Zhang, Z. M. Mao, and M. Zhang. Detecting Traffic Differentiation in Backbone ISPs with NetPolice. In Proc. of IMC, 2009.
[22] Z. Zhang, O. Mara, and K. Argyraki. Network neutrality inference. In Proc. of ACM SIGCOMM, 2014.