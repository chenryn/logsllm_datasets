### Optimized Text

**Initial Exchange:**
- **COOKIE0 = {HoA, CN, C0}** is sent to the Correspondent Node (CN).
- In response, CN generates a nonce `n1` and a cookie `C1`, then sends **COOKIE1 = {CN, HoA, C0, C1, n1}** to the Mobile Node (MN).
- The destination address in **COOKIE1** is MN’s home address (HoA), causing the message to be delivered to MN’s home link and intercepted by the Home Agent (HA) using IPv6 Neighbor Discovery.

**Home Agent's Response:**
- After receiving **COOKIE1**, HA verifies the validity of `C0`, generates a nonce `n2` and a Diffie-Hellman secret value `x < p`, computes its Diffie-Hellman public value `gx`, and creates a signature:
  \[
  SIGH = SH(HoA | CN | gx | n1 | n2 | TS)
  \]
  where `TS` is a timestamp. This timestamp is not checked by the recipient during the message exchange but is used for tracing back malicious nodes in case of an attack.
- HA then replies to CN with:
  \[
  EXCH0 = {HoA, CN, C0, C1, n1, n2, gx, TS, SIGH, CertH}
  \]
  where `CertH = {HL, PH, VI, SIGCA}` is the public key certificate of the home link. The values of `n1` and `n2` are included in the signature `SIGH` to prevent replay attacks and chosen-message attacks.

**Correspondent Node's Validation:**
- Upon receiving **EXCH0**, CN validates the cookies, the home link’s public key certificate `CertH`, the signature, and checks for equality of the home link subnet prefix strings embedded in both `CertH` and `HoA`.
- If all validations are positive, CN can be confident that the home address `HoA` of MN is authorized by its home link and that the Diffie-Hellman public value `gx` is freshly generated by MN’s home link.
- CN then generates its Diffie-Hellman secret value `y < p`, computes its Diffie-Hellman public value `gy`, the Diffie-Hellman key `kDH = (gx)^y`, a session key:
  \[
  kBU = prf(kDH, n1 | n2)
  \]
  and a MAC:
  \[
  MAC1 = prf(kBU, gy | EXCH0)
  \]
- CN sends **EXCH1 = {CN, HoA, C0, C1, gy, MAC1}** to MN. This message is intercepted by HA, which first validates the cookies, calculates the Diffie-Hellman key `kDH = (gy)^x` and the session key `kBU = prf(kDH, n1 | n2)`.
- HA then computes:
  \[
  MAC2 = prf(kBU, EXCH1)
  \]
  and sends **CONFIRM = {HoA, CN, MAC2}** to CN. CN checks the validity of `MAC2` and, if valid, creates a cache entry for `HoA` and the session key `kBU`, which will be used for authenticating binding update messages from MN.
- Upon positive verification of `MAC1`, HA also sends **REP = {CN, HoA, n0, kBU}** to MN through a secure IPsec ESP protected tunnel. After receiving `REP`, MN checks that `n0` is the same as the one it sent in `REQ`. If so, MN proceeds to send binding update messages to CN, protected using `kBU`.

**Discussion:**
- The protocol performs strong one-way authentication of MN/HoA to CN and provides CN with confidence that it shares a secret session key with MN.
- The most critical message is **EXCH0**. After receiving **EXCH0**, CN checks the equality of the home link subnet prefix contained in both `CertH` and `HoA`, which is crucial for detecting man-in-the-middle attacks.
- The signature `SIGH` serves two purposes: it certifies that the Diffie-Hellman value `gx` was originated by MN’s home agent HA on behalf of MN, and it testifies that `HoA` is under HA’s jurisdiction, thus authenticating `HoA` to CN.
- A successful completion of the protocol allows CN to authenticate MN’s `HoA` and set up a secret session key for securing binding updates, preventing session hijacking attacks.
- The protocol does not completely prevent malicious mobile node flooding attacks, but it provides a way to trace back the culprit using the timestamp `TS` in the signature `SIGH`.

**Public Key Cryptographic Operations:**
- In the protocol, mobile nodes are not required to perform any public key cryptographic operations, but correspondent nodes are.
- Public key cryptographic operations may not be a significant concern if the correspondent node is a server machine. However, if the correspondent node is a mobile node with limited computational power and battery life, these operations can be offloaded to its home agent.
- This scenario is depicted in Figure 6, where `HAMN` and `HACN` are the home agents of MN and CN, respectively. Since in MIPv6, it is assumed that a mobile node has a pre-established security association with its home agent, it is natural for `HAMN` and `HACN` to perform public key cryptographic operations on behalf of MN and CN, respectively.
- Due to the symmetric arrangement of the entities, it is possible to perform mutual authenticated key-exchange between MN and CN and establish session keys to secure binding update messages in both directions.

**Advantages:**
- The protocol uses strong cryptosystems, allowing the secret session key `kBU` to be used for a long period of time, unlike the RR protocol, which must be executed at least every 420 seconds even if the mobile node stays at the same foreign location.

**Concluding Remarks:**
- Mobile IP allows seamless communication when mobile nodes change their point of attachment in the Internet. However, mobility introduces new security issues, including redirect attacks.
- Redirect attacks are classified into two types: Session Hijacking attacks and Malicious Mobile Node Flooding attacks.
- The paper reviews and analyzes the RR and CGA protocols, showing that both can be easily broken and are not effective against redirect attacks.
- A new protocol is proposed to guard against redirect attacks, using a digital signature scheme and the Diffie-Hellman key exchange algorithm. The protocol issues public key certificates for home links based on home link subnet prefixes, making certificate management more practical.
- The protocol offloads public key cryptographic operations from mobile nodes to their home agents, ensuring security and efficiency.
- The protocol is secure against session hijacking attacks and can provide evidence to trace back culprits in case of malicious mobile node flooding attacks.

**References:**
- [1] C. Perkins, “IP Mobility Support”, IETF RFC 2002, October 1996.
- [2] D. Johnson, C. Perkins, and J. Arkko, “Mobility Support in IPv6”, IETF draft-ietf-mobileip-ipv6-18.txt, 1 June 2002.
- [3] A. Mankin et al., “Threat Models Introduced by Mobile Ipv6 and Requirements for Security in Mobile Ipv6”, IETF draft-ietf-mipv6-scrty-reqts-02.txt, May 2001.
- [4] S. Thomas and T. Narten, “IPv6 Stateless Address Autoconfiguration”, IETF RFC 2462, December 1998.
- [5] J. Bound et al., “Dynamic Host Configuration Protocol for IPv6 (DHCPv6)”, IETF draft-ietf-dhc-dhcpv6-23.txt, 22 April 2002.
- [6] S. Deering and R. Hinden, “Internet Protocol, Version 6 (IPv6) Specifications”, IETF RFC 2460, December 1998.
- [7] S. Kent and R. Atkinson, “IP Encapsulating Security Payload (ESP)”, IETF RFC 2406, November 1998.
- [8] R. Rivest, “The MD5 Message Digest Algorithms”, IETF RFC 1321, April 1992.
- [9] NIST, “Secure Hash Standard”, NIST FIPS PUB 180, May 1993.
- [10] H. Krawczyk, M. Bellare, and R. Canetti, “HMAC: Keyed-Hashing for Messaging Authentication”, IETF RFC 2104, February 1997.
- [11] R. Rivest, A. Shamir, and L. Adleman, “A Method for Obtaining Digital Signatures and Public-Key Cryptosystems”, Commun. ACM, Vol. 21, February 1978, pp. 120-126.
- [12] NIST, “Digital Signature Standard”, NIST FIPS PUB 186, May 1994.
- [13] Security Group, DoCoMo USA Labs, “Mobile IP – Making it Secure and Practical”, Proceedings of the RSA Conference 2002, February 18-22, 2002, San Jose.
- [14] G. O’Shea and M. Roe, “Child-Proof Authentication for MIPv6 (CAM)”, Computer Communications Review, April 2001.
- [15] E. Rescorla, SSL and TLS: Designing and Building Secure Systems, Addison-Wesley, 2001.
- [16] T. Narten and R. Draves, “Privacy Extensions for Stateless Address Autoconfiguration in IPv6”, IETF draft-ietf-ipngwg-temp-addresses-v2-00.txt, July 2001.
- [17] P. Karn and W. Simpson, “Photuris: Session-Key Management Protocol”, IETF RFC 2522, 1999.
- [18] T. Narten, E. Nordmark, and W. Simpson, “Neighbor Discovery for IP Version 6 (IPv6)”, IETF RFC 2461, December 1998.