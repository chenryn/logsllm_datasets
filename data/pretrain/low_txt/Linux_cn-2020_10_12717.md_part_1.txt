---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4953
date: '2020-10-14 12:09:06'
editorchoice: false
excerpt: 无服务器（Serverless）到底意味着什么？尽管构建网络的基本架构不变，但在将服务器运维交给一小部分人之后，开发者们又会经历哪些变化呢？
fromurl: https://www.redhat.com/en/command-line-heroes/season-2/at-your-serverless
id: 12717
islctt: true
largepic: /data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg
permalink: /article-12717-1.html
pic: /data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12744
reviewer: acyanbird, wxy
selector: bestony
summary: 无服务器（Serverless）到底意味着什么？尽管构建网络的基本架构不变，但在将服务器运维交给一小部分人之后，开发者们又会经历哪些变化呢？
tags:
- 代码英雄
thumb: false
title: 《代码英雄》第二季（7）：无服务器
titlepic: true
translator: JonnieWayy
updated: '2020-10-14 12:09:06'
---

> 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。

### 什么是《代码英雄》

《代码英雄》（Command Line Heroes）是世界领先的企业开源软件解决方案供应商红帽（Red Hat）精心制作的原创音频播客。该节目邀请了来自谷歌、NASA等重量级企业的众多技术大牛，共同讲述开源、操作系统、容器、DevOps、混合云等发展过程中的动人故事。

![](/data/attachment/album/202010/14/120736ncp1z5aaooxknua3.jpg)

本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[第二季（7）：无服务器](https://www.redhat.com/en/command-line-heroes/season-2/at-your-serverless)的[音频](https://dts.podtrac.com/redirect.mp3/audio.simplecast.com/aebc2c45.mp3)脚本。

**导语**：无服务器（Serverless）到底意味着什么？尽管构建网络的基本架构不变，但在将服务器运维交给一小部分人之后，开发者们又会经历哪些变化呢？

无服务器编程使初学者能够更轻松地部署应用程序，提高工作效率。Andrea Passwater 分享了抽象底层架构带来的便利。然而，无服务器化也存在一些问题。Rodric Rabbah 解释了无服务器意味着你将失去对部署和响应问题的控制权——这就是他帮助创建 Apache OpenWhisk 的原因。Himanshu Pant 也分享了他对何时应使用无服务器服务的看法。

无服务器编程应为开发者赋能。我们也应关注全局场景，即使我们简化了工具箱。

**00:00:03 - Al Gore 档案**：
现如今，在全美乃至全世界，互联网正在彻底改变我们的生活。

**00:00:13 - Saron Yitbarek**：
那是1998年。Google刚刚雇佣了第一名员工，副总统Al Gore在接受媒体采访。

**00:00:22 - Al Gore 档案**：
这项技术还处于起步阶段。当我和Bill Clinton总统入主白宫时，只有50个网站。现在看看，我在生日那天收到了一束虚拟鲜花。

**00:00:37 - Saron Yitbarek**：
好的。我已经感觉到你的眉毛皱起了。为什么我要向你展示20年前的互联网史？因为我想提醒你，互联网的基础仍然是相同的。

当然，现在不止50个站点了，但我们仍在发送虚拟鲜花。从开发者的角度来看，无论有多少进步，核心依然是“客户端-服务器”（C/S）模型。如今，开发者谈论了很多关于无服务器（Serverless）的话题，这听起来像是要废弃Al Gore提到的C/S模型。如果我们不小心，可能会过度抽象基础架构，以至于忘记仍然有服务器在工作。

**00:01:37**：
但无服务器真的意味着没有服务器吗？还是开发者与服务器之间的关系正在发生变化？在这一集中，我们将与世界各地的人们交谈，探索这种被称为“无服务器”的东西。

**00:01:54**：
我是Saron Yitbarek，这里是《代码英雄》，一档来自红帽的原创播客节目。

**00:02:03 - Andrea Passwater**：
你知道无线网络在某些地方还有线缆吗？

**00:02:06 - Saron Yitbarek**：
Andrea Passwater 在一家名为“无服务器”的公司工作。他们创建了一个流行的开源框架来开发无服务器应用程序。Andrea 注意到，许多组织渴望通过“无服务器”这个词所传达的抽象基础设施的方法。

**00:02:28 - Andrea Passwater**：
我认为这个术语主要是为了传达这样一个事实：如果你是从事无服务器应用的开发者，你不必考虑那些服务器。你只需要写代码并将代码部署到云提供商，而不必担心管理。这就是无服务器的真正含义。

**00:02:49 - Saron Yitbarek**：
对于Andrea来说，无服务器的吸引力很明显。

**00:02:53 - Andrea Passwater**：
如果你以无服务器的方式开发应用程序，你可以不必考虑部署和维护应用程序的日常工作。这意味着你可以专注于其商业价值和创造力。

**00:03:12 - Saron Yitbarek**：
另一个好处是，你不太可能发现自己在重复造轮子。

**00:03:18 - Andrea Passwater**：
当有像Auth0这样可以直接使用的服务存在时，为什么要创建自己的身份验证方法呢？归根结底，无服务器为开发者提供了机会，使他们能够更轻松、快速地构建应用程序。

**00:03:41 - Saron Yitbarek**：
我明白了！

**00:03:51**：
想象一下，你拿着满手的东西，正跌跌撞撞地走向一扇门。这扇门滑开了，以简单、友好的方式。这就是无服务器。它为你打开了大门，使开发工作不再那么繁琐。随着组织趋向于混合云环境和无服务器运动的发展，开发的障碍正在消失。

**00:04:09**：
Andrea 听说过很多有关非开发人员进行开发的话题。

**00:04:15 - Andrea Passwater**：
这是传统上认为自己写不了代码，而由于无服务器得以投身软件工程的人的故事。他们可以开发自动化工具，无论他们的职业是什么。

**00:04:31**：
你在工作中要做的一些事情是如此的呆板无聊，比如你每天都在做的例行事情，和那些你会想“难道计算机不能为我做这件事吗？”的事情。当我开始有了这种感觉的时候，我碰巧在一家名为“无服务器”的公司工作，他们说：“你意识到我们制作的产品可以帮你，对吗？”

**00:04:50 - Saron Yitbarek**：
Andrea 认为，不久之后，许多从未将自己视为开发人员的人将意识到他们能够自己构建简单的应用程序，基本上免费。

**00:05:02 - Andrea Passwater**：
借助Lambda，我从不需要为自己制作的任何小型应用程序付费。我可以让这些机器人为我做一部分工作，我可以提高工作效率，同时不再做那些无聊的工作。我可以做些更有趣的事情。

**00:05:17 - Saron Yitbarek**：
即使是对于专业开发人员来说，这种自动门效果在满手杂物的世界里也很诱人。

**00:05:25 - Andrea Passwater**：
我认为人们对于能够让一两个人的团队在短时间内让原型工作起来很感兴趣。在几天内，他们就可以启动并运行原型。这使得人们开始意识到，他们可以专注于驱动他们的应用、产品和公司的商业价值。这非常令人兴奋。

**00:05:54 - Saron Yitbarek**：
我要再抛出一个术语给你。准备好了吗？功能即服务（FaaS）。就像AWS Lambda或Apache OpenWhisk这样的无服务器产品。“功能即服务”意味着只有在被触发时程序才会执行某个功能，这效率更高。

此外，这让我对计算能力和运行时间的担忧少了很多。最终，无服务器可能会成为一个相当不错的基础配置。事实上，有些人甚至开始怀疑，我们是否要完全使用无服务器？它可以替代容器吗？

**00:06:35 - Michael Hausenblas**：
我理解这种想法。

**00:06:41 - Saron Yitbarek**：
Michael Hausenblas 是 Red Hat OpenShift 团队的开发倡导者。

**00:06:41 - Michael Hausenblas**：
如果你看一下我们现在拥有的这些东西，包括OpenShift和Cloud Foundry以及其他一些东西，你实质上就拥有了抽象化。基本上，Heroku或多或少倾向于这个想法。对吗？这是一种非常简单的方式，无需担心程序如何运行，只需给我们代码，我们来处理剩下的工作。

**00:07:03 - Saron Yitbarek**：
听起来不错。这听起来有点像梦想中的“无运维”环境，一切都自动化且抽象化了，就像是开发者版本的极简主义室内设计。很棒、很干净的界面。

**00:07:21**：
但是，Michael想要让你了解一些现实情况。

**00:07:25 - Michael Hausenblas**：