# Containment and Detection of Malicious Web Content

Several containment strategies, such as those in [3, 15, 34], have been proposed to mitigate the risks associated with drive-by downloads. Other approaches focus on detecting these threats by leveraging the properties of HTTP redirections to identify malicious behavior [38, 45]. Dynamic analysis techniques have also been employed to detect drive-by downloads and web-hosted malware [11, 12, 36]. Li et al. [31] investigated the advertisement delivery process to automatically generate detection rules for malvertising. Reis et al. [43] introduced web tripwires to detect in-flight page changes, which are often used by ISPs to inject advertisements.

## 6.2 Browser Extension Security

Browser extension security has recently gained significant attention. The Chromium extension framework significantly improved users' ability to limit the privileges granted to potentially vulnerable extensions [7], and subsequent research has evaluated the effectiveness of this approach [18, 33]. Other studies have examined malicious extensions that exfiltrate sensitive user data [32, 35]. For example, Arjun et al. [21] demonstrated that many Chrome Web Store extensions request more permissions than necessary for their intended functionality.

Recent research has focused on the problem of ad injection via browser extensions. Thomas et al. [46] proposed a detection methodology that uses prior knowledge of legitimate DOM structures to identify potential ad injections. However, this approach requires cooperation from content publishers. Expector [48] inspects browser extensions to determine if they inject advertisements into websites. Hulk [28] is a dynamic analysis system that automatically detects Chrome extensions engaging in malicious behaviors, including ad injection. WebEval [26] is an automated system that evaluates an extension's behavior, code, and author reputation to identify malicious extensions distributed through the Chrome Web Store.

In contrast, our work does not aim to automatically classify content-modifying extensions as malicious or benign. Instead, it focuses on enabling users to make informed decisions about whether the behavior of extensions is desirable.

## 6.3 Provenance Tracking

A considerable body of work has explored the use of provenance in various contexts. For instance, some research has studied the collection of provenance information for generic applications and entire systems [19, 24, 42]. However, to our knowledge, no existing system considers the provenance of fine-grained web content comprising the DOM. Provenance tracking is related to information flow control (IFC), which has been extensively studied at the operating system level [16, 29, 49], language level [9, 40], and in web environments [20, 25]. Unlike IFC, which focuses on enforcing security guarantees for new applications, our work aims to track and indicate data provenance for existing applications.

Dynamic taint analysis, a concept related to provenance, has been explored in numerous systems. Some prior work [8, 17] focuses on tracking information flow within the browser. Sabre [14] detects whether extensions access sensitive information, and DSI enforcement [41] defends against XSS attacks by preserving document structure integrity. While there is overlap between dynamic taint analysis and provenance, taint analysis typically focuses on simple reachability between sources and sinks, whereas provenance tracks the principals that influence data.

Finally, some research has examined provenance on the web. Prior work [22, 23, 39] has developed coarse-grained ontologies for describing the origins of web data but does not consider fine-grained provenance within the browser. ESCUDO [27] only considers principals controlled by web applications and does not handle plugins and browser extensions. LeakTracker [47] performs principal-based tracking on web pages to study privacy violations related to JavaScript libraries, but it only tracks script injections and does not provide provenance information for other DOM elements. Excision [6] is the closest work to ours, tracking the inclusion of different resources in web pages and blocking malicious inclusions. Although the techniques are similar, Excision discards non-remote content injections and does not track modifications to DOM elements. In contrast, OriginTracer identifies all types of DOM modifications and highlights them in the context of the web page.

## 7 Conclusion

In this paper, we introduced fine-grained web content provenance tracking and demonstrated its use in identifying unwanted third-party content, such as injected advertisements. We evaluated a prototype implementation, called OriginTracer, through a user study that showed a statistically significant improvement in users' ability to identify unwanted content. Our performance evaluation indicated a modest overhead on a large sample of popular websites, while user experiments suggested that users are willing to accept a slight decrease in performance for better insight into the sources of web content. We also conducted a comprehensive study on the content modifications performed by ad-injecting extensions in the wild.

In future work, we plan to explore other applications of provenance on the web. Given the interconnected nature of the web and the often obscure trust relationships, we believe that surfacing this information can lead to safer and more informed browsing. Finally, we intend to open-source our prototype implementation to benefit the broader research community.

## References

1. The ad injection economy. http://googleonlinesecurity.blogspot.com/2015/05/new-research-ad-injection-economy.html
2. Adblock Plus. https://adblockplus.org/
3. ADsafe. http://www.adsafe.org/
4. Ghostery. https://www.ghostery.com/en/
5. SLOCCount. http://www.dwheeler.com/sloccount/
6. Arshad, S., Kharraz, A., Robertson, W.: Include me out: in-browser detection of malicious third-party content inclusions. In: Financial Cryptography and Data Security (FC) (2016)
7. Barth, A., Jackson, C., Reis, C.: The security architecture of the Chromium browser. Technical report (2008). The Google Chrome Team
8. Bauer, L., Cai, S., Jia, L., Passaro, T., Stroucken, M., Tian, Y.: Run-time monitoring and formal analysis of information flows in Chromium. In: Network and Distributed System Security Symposium (NDSS) (2015)
9. Chong, S., Vikram, K., Myers, A.C.: SIF: enforcing confidentiality and integrity in web applications. In: USENIX Security Symposium (2007)
10. Coldewey, D.: Marriott puts an end to shady ad injection service (2012). http://techcrunch.com/2012/04/09/marriott-puts-an-end-to-shady-ad-injection-service/
11. Cova, M., Kruegel, C., Vigna, G.: Detection and analysis of drive-by-download attacks and malicious JavaScript code. In: International World Wide Web Conference (WWW) (2010)
12. Dewald, A., Holz, T., Freiling, F.C.: ADSandbox: sandboxing JavaScript to fight malicious websites. In: Symposium on Applied Computing (SAC) (2010)
13. Rachna Dhamija, J.D., Tygar, M.H.: Why phishing works. In: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI) (2006)
14. Dhawan, M., Ganapathy, V.: Analyzing information flow in JavaScript-based browser extensions. In: Annual Computer Security Applications Conference (ACSAC) (2009)
15. Dong, X., Tran, M., Liang, Z., Jiang, X.: AdSentry: comprehensive and flexible confinement of JavaScript-based advertisements. In: Annual Computer Security Applications Conference (ACSAC) (2011)
16. Efstathopoulos, P., Krohn, M., VanDeBogart, S., Frey, C., Ziegler, D., Kohler, E., Mazieres, D., Kaashoek, F., Morris, R.: Labels and event processes in the Asbestos operating system. In: ACM Symposium on Operating Systems Principles (SOSP) (2005)
17. Egele, M., Kruegel, C., Kirda, E., Yin, H., Song, D.: Dynamic spyware analysis. In: USENIX Annual Technical Conference (ATC) (2007)
18. Felt, A.P., Greenwood, K., Wagner, D.: The effectiveness of application permissions. In: USENIX Conference on Web Application Development (WebApps) (2011)
19. Gehani, A., Tariq, D.: SPADE: support for provenance auditing in distributed environments. In: Narasimhan, P., Triantafillou, P. (eds.) Middleware 2012. LNCS, vol. 7662, pp. 101–120. Springer, Heidelberg (2012)
20. Giffin, D.B., Levy, A., Stefan, D., Terei, D., Mazieres, D., Mitchell, J.C., Russo, A.: Hails: protecting data privacy in untrusted web applications. In: USENIX Symposium on Operating Systems Design and Implementation (OSDI) (2012)
21. Guha, A., Fredrikson, M., Livshits, B., Swamy, N.: Verified security for browser extensions. In: IEEE Symposium on Security and Privacy (Oakland) (2011)
22. Harth, A., Polleres, A., Decker, S.: Towards a social provenance model for the web. In: Workshop on Principles of Provenance (PrOPr) (2007)
23. Hartig, O.: Provenance information in the web of data. In: Workshop on Linked Data on the Web (LDOW) (2009)
24. Hasan, R., Sion, R., Winslett, M.: SPROV 2.0: a highly configurable platform-independent library for secure provenance. In: ACM Conference on Computer and Communications Security (CCS) (2009)
25. Hicks, B., Rueda, S., King, D., Moyer, T., Schiffman, J., Sreenivasan, Y., McDaniel, P., Jaeger, T.: An architecture for enforcing end-to-end access control over web applications. In: ACM Symposium on Access Control Models and Technologies (SACMAT) (2010)
26. Jagpal, N., Dingle, E., Gravel, J.P., Mavrommatis, P., Provos, N., Rajab, M.A., Thomas, K.: Trends and lessons from three years fighting malicious extensions. In: USENIX Security Symposium (2015)
27. Jayaraman, K., Du, W., Rajagopalan, B., Chapin, S.J.: ESCUDO: a fine-grained protection model for web browsers. In: 30th IEEE International Conference on Distributed Computing Systems (ICDCS) (2010)
28. Kapravelos, A., Grier, C., Chachra, N., Kruegel, C., Vigna, G., Paxson, V.: Hulk: eliciting malicious behavior in browser extensions. In: USENIX Security Symposium (2014)
29. Krohn, M., Yip, A., Brodsky, M., Natan Cliffer, M., Kaashoek, F., Kohler, E., Morris, R.: Information flow control for standard OS abstractions. In: Symposium on Operating Systems Principles (SOSP) (2007)
30. Kumparak, G.: Real evil: ISP inserted advertising. http://techcrunch.com/2007/06/23/real-evil-isp-inserted-advertising/ (2007)
31. Li, Z., Zhang, K., Xie, Y., Yu, F., Wang, X.: Knowing your enemy: understanding and detecting malicious web advertising. In: ACM Conference on Computer and Communications Security (CCS) (2012)
32. Li, Z., Wang, X.-F., Choi, J.Y.: SpyShield: preserving privacy from spy add-ons. In: Kruegel, C., Lippmann, R., Clark, A. (eds.) RAID 2007. LNCS, vol. 4637, pp. 296–316. Springer, Heidelberg (2007)
33. Liu, L., Zhang, X., Yan, G., Chen, S.: Chrome extensions: threat analysis and countermeasures. In: Network and Distributed System Security Symposium (NDSS) (2012)
34. Ter Louw, M., Ganesh, K.T., Venkatakrishnan, V.N.: AdJail: practical enforcement of confidentiality and integrity policies on web advertisements. In: USENIX Security Symposium (2010)
35. Ter Louw, M., Lim, J.S., Venkatakrishnan, V.N.: Enhancing web browser security against malware extensions. J. Comput. Virol. 4(3), 179–195 (2008)
36. Lu, L., Yegneswaran, V., Porras, P., Lee, W.: BLADE: An attack-agnostic approach for preventing drive-by malware infections. In: ACM Conference on Computer and Communications Security (CCS) (2010)
37. Marvin, G.: Google study exposes “tangled web” of companies profiting from ad injection (2015). http://marketingland.com/ad-injector-study-google-127738
38. Mekky, H., Torres, R., Zhang, Z.L., Saha, S., Nucci, A.: Detecting malicious HTTP redirections using trees of user browsing activity. In: Annual IEEE International Conference on Computer Communications (INFOCOM) (2014)
39. Moreau, L.: The foundations for provenance on the web. Found. Trends Web Sci. 2(2–3), 99–241 (2010)
40. Myers, A.C.: JFlow: practical mostly-static information flow control. In: Symposium on Principles of Programming Languages (POPL) (1999)
41. Nadji, Y., Saxena, P., Song, D.: Document structure integrity: a robust basis for cross-site scripting defense. In: Network and Distributed System Security Symposium (NDSS) (2009)
42. Pohly, D.J., McLaughlin, S., Butler, K.: Hi-Fi: collecting high-fidelity whole-system provenance. In: Annual Computer Security Applications Conference (ACSAC) (2012)
43. Reis, C., Gribble, S.D., Kohno, T., Weaver, N.C.: Detecting in-flight page changes with web Tripwires. In: USENIX Symposium on Networked Systems Design and Implementation (NSDI) (2008)
44. Selenium Contributors. Selenium: Web browser automation. http://www.seleniumhq.org/
45. Stringhini, G., Kruegel, C., Vigna, G.: Shady paths: leveraging surfing crowds to detect malicious web pages. In: ACM Conference on Computer and Communications Security (CCS) (2013)
46. Thomas, K., Bursztein, E., Grier, C., Ho, G., Jagpal, N., Kapravelos, A., McCoy, D., Nappa, A., Paxson, V., Pearce, P., Provos, N., Rajab, M.A.: Ad injection at scale: assessing deceptive advertisement modifications. In: IEEE Symposium on Security and Privacy. IEEE, Oakland (2015)
47. Tran, M., Dong, X., Liang, Z., Jiang, X.: Tracking the trackers: fast and scalable dynamic analysis of web content for privacy violations. In: Bao, F., Samarati, P., Zhou, J. (eds.) ACNS 2012. LNCS, vol. 7341, pp. 418–435. Springer, Heidelberg (2012)
48. Xing, X., Meng, W., Weinsberg, U., Sheth, A., Lee, B., Perdisci, R., Lee, W.: Unraveling the relationship between ad-injecting browser extensions and malvertising. In: International World Wide Web Conference (WWW) (2015)
49. Zeldovich, N., Boyd-Wickizer, S., Mazieres, D.: Security distributed systems with information flow control. In: USENIX Symposium on Networked Systems Design and Implementation (NSDI) (2008)