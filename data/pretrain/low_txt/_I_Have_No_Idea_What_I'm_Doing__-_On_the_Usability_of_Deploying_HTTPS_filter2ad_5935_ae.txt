### Cipher Suites and Basic Concepts

The results indicate a significant demand for better default configurations and/or enhanced tool support to prevent administrators from dealing with mechanisms they do not fully understand. For instance, many administrators struggle with understanding the role of certificates and cipher suites.

### Evaluation Criteria

As mentioned in Section 4.1, our evaluation criteria were based on Qualys' SSL Test. While these metrics are considered a good benchmark for assessing TLS configurations, they may not be feasible for every real-world scenario. For example, HTTP Public Key Pinning (HPKP) is theoretically a mechanism to mitigate Man-in-the-Middle (MITM) attacks using fraudulent certificates. However, it poses additional risks and challenges in practice, such as the difficulty of key management for long-tail websites. Possible solutions include pinning the CA certificate, using a backup key, or employing Certification Authority Authorization (CAA) DNS records to specify which CAs are allowed to issue certificates for a domain.

During our lab experiments, two participants attempted to deploy HPKP. However, it was unclear from the collected data whether these participants were fully aware of the key management challenges associated with HPKP.

### Let's Encrypt Initiative

In December 2015, Let's Encrypt launched its non-profit Certificate Authority (CA), providing free domain-validated X.509 certificates and software to facilitate their installation and maintenance. This initiative significantly changed the TLS market, issuing over 27 million active certificates for more than 12 million registered domains by February 2017. Despite being often referred to as the largest CA, the impact on the TLS ecosystem is still debated, as many certificates are used for less popular websites [4, 5].

Let's Encrypt primarily improves the process of certificate issuance but does not directly enhance TLS configurations. Some plugins, such as those for Apache integration, automatically set certain TLS configuration parameters (e.g., protocol version, cipher suites) to a balanced configuration in terms of security and backward compatibility. However, they do not cover other parameters like HTTP Strict Transport Security (HSTS) or Diffie-Hellman (DH) prime configuration. Therefore, configurations with Let's Encrypt-issued certificates are not generically comparable to others, though they present an opportunity to improve and automate the configuration process in the future.

Let's Encrypt aims to simplify the creation of a Certificate Signing Request (CSR) and interaction with the CA. However, it still requires initial configuration. Tools like ACME can assist, but the extent to which they reduce the initial effort in configuring an Apache web server remains to be seen.

### Expert Insights

According to our security experts, some servers allow users to make less secure configurations if desired, rather than providing no security by default and forcing users to implement security themselves. They also highlight the need for more user-friendly interfaces for configuration, which aligns with the findings of Fahl et al. [19]. Our results suggest that even expert users often struggle to decide on the appropriate level of security, underscoring the need for cross-organizational guidelines and policies.

### Complexity of TLS Configuration

Creating a basic TLS configuration involves complex decisions, such as choosing the appropriate key length. This complexity makes it difficult for administrators to maintain or correct errors and wrong decisions. Both the lab study and expert interviews emphasize the need to simplify the deployment process and narrow the gap between a basic correct configuration and a secure one. We recommend that newly designed servers and supportive tools should merge the setup and hardening phases, resulting in a best-case working configuration that can be downgraded if necessary.

### Limitations of the Lab Study

A significant limitation of our lab study is that it only examined the initial deployment process and did not account for long-term maintenance effects, such as certificate renewal and responses to newly discovered vulnerabilities. Studying long-term effects in a lab setting is challenging. In the future, we plan to conduct a case study in a corporate environment to observe long-term effects over several years.

Additionally, our participants, recruited from computer science students, did not have a deep background in the notional company they were administering. To mitigate this, we selected top students who had completed security courses with good grades and passed an initial assessment test. Many participants had experience managing servers, and some had worked as system administrators in companies and other organizations. The expert interviews with security auditors validate our findings and suggest that configurations found in the wild are often less secure than those generated in our lab study.

### Ethical Considerations

Our university, located in central Europe, does not have an ethics board but follows a set of guidelines. We aligned our methodology with related studies that address similar ethical challenges [35, 40, 44]. A fundamental requirement is to preserve participants' privacy and limit the collection of personal data. Each participant was assigned an ID, and all signed consent forms explaining the research goals, expectations, and data usage. Consent forms were stored separately without linking them to the IDs to ensure anonymity.

We avoided video-recording participants during the study, as pre-study feedback indicated that being filmed made them uncomfortable and negatively impacted their performance.

### Conclusion

We conducted a lab study with 29 participants to explore usability challenges in the TLS deployment process that lead to insecure configurations. Compared to related work, our study focused on expert users, specifically administrators responsible for securing servers. Additionally, we conducted seven expert interviews with penetration testers and security auditors who frequently encounter poorly secured servers during audits.

Our findings indicate that the TLS deployment process consists of multiple critical steps, and incorrect execution can lead to insecure communications, putting Internet users at risk for MITM attacks. Even educated computer scientists need additional support to make informed security decisions and lack a deep understanding of cryptographic fundamentals. Expert users also struggle with the configuration file structure of Apache web servers and must put significant effort into securing default configurations. Our expert interviews validate the ecological validity of the lab study results and highlight the weaknesses of TLS configurations found in the wild. According to our security auditors, the main concern regarding TLS is interoperability, and server infrastructures are often configured with poor defaults and are poorly maintained.

### Acknowledgements

We thank the reviewers for their constructive feedback and our shepherd, Serge Egelman, for his valuable suggestions. This research was partially funded by COMET K1 and grant 846028 (TLSiP) from the Austrian Research Promotion Agency (FFG).

### References

[1] 2016 Web Server Survey. Online at https://news.netcraft.com/archives/2016/02/22/february-2016-web-server-survey.html.

[2] SSL Labs Server Rating Guide. Online at https://www.ssllabs.com/downloads/SSL_Server_Rating_Guide.pdf.

[3] The Heartbleed Bug. Online at https://heartbleed.com, 2014.

[4] Is Let’s Encrypt the Largest Certificate Authority on the Web? Online at https://www.eff.org/deeplinks/2016/10/lets-encrypt-largest-certificate-authority-web, 2016.

[5] Let’s Encrypt Stats. Online at https://letsencrypt.org/stats/, 2016.

[6] Survey of the SSL Implementation of the Most Popular Web Sites. Online at https://www.trustworthyinternet.org/ssl-pulse/, 2016.

[7] Usage statistics and market share of Apache for websites. Online at https://w3techs.com/technologies/details/ws-apache/all/all, 2016.

[8] Y. Acar, M. Backes, S. Fahl, D. Kim, M. L. Mazurek, and C. Stransky. You Get Where You’re Looking for: The Impact of Information Sources on Code Security. In 2016 IEEE Symposium on Security and Privacy (SP), pages 289–305, May 2016.

[9] D. Akhawe and A. P. Felt. Alice in Warningland: A Large-Scale Field Study of Browser Security Warning Effectiveness. In USENIX Security Symposium, pages 257–272. USENIX Association, 2013.

[10] N. J. AlFardan, D. J. Bernstein, K. G. Paterson, B. Poettering, and J. C. Schuldt. On the Security of RC4 in TLS. In USENIX Security Symposium. USENIX Association, 2013.

[11] N. Aviram, S. Schinzel, J. Somorovsky, N. Heninger, M. Dankel, J. Steube, L. Valenta, D. Adrian, J. A. Halderman, V. Dukhovni, et al. DROWN: Breaking TLS using SSLv2. In USENIX Security Symposium. USENIX Association, 2016.

[12] W. Breyha, D. Durvaux, T. Dussa, L. A. Kaplan, F. Mendel, C. Mock, M. Koschuch, A. Kriegisch, U. Pöschl, R. Sabet, B. San, R. Schlatterbeck, et al.

[13] J. Clark and P. C. van Oorschot. SoK: SSL and HTTPS: Revisiting past challenges and evaluating certificate trust model enhancements. In 2013 IEEE Symposium on Security and Privacy (SP), pages 511–525. IEEE, 2013.

[14] T. Dierks and E. Rescorla. The Transport Layer Security (TLS) Protocol Version 1.2. RFC 5246 (Proposed Standard), Aug. 2008. Updated by RFCs 5746, 5878, 6176.

[15] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and J. A. Halderman. A search engine backed by Internet-wide scanning. In Conference on Computer and Communications Security, pages 542–553. ACM, 2015.

[16] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman. Analysis of the HTTPS Certificate Ecosystem. In Internet Measurement Conference, pages 291–304. ACM, Oct. 2013.

[17] P. Eckersley and J. Burns. An Observatory for the SSLiverse. DEF CON 18 https://www.eff.org/files/defconssliverse.pdf, July 2010.

[18] C. Evans, C. Palmer, and R. Sleevi. Public key pinning extension for HTTP (HPKP). RFC 7469, 2015.

[19] S. Fahl, Y. Acar, H. Perl, and M. Smith. Why Eve and Mallory (Also) Love Webmasters: A Study on the Root Causes of SSL Misconfigurations. In Proceedings of the 9th ACM symposium on Information, Computer and Communications Security, ASIA CCS '14, pages 507–512, New York, NY, USA, 2014. ACM.

[20] A. P. Felt, A. Ainslie, R. W. Reeder, S. Consolvo, S. Thyagaraja, A. Bettes, H. Harris, and J. Grimes. Improving SSL warnings: comprehension and adherence. In Conference on Human Factors in Computing Systems, pages 2893–2902. ACM, 2015.

[21] A. P. Felt, R. W. Reeder, H. Almuhimedi, and S. Consolvo. Experimenting at Scale with Google Chrome’s SSL Warning. In Conference on Human Factors in Computing Systems, pages 2667–2670. ACM, 2014.

[22] M. Harbach, S. Fahl, P. Yakovleva, and M. Smith. Sorry, I don’t get it: An analysis of warning message texts. In Financial Cryptography and Data Security, pages 94–111. Springer, 2013.

[23] J. Hodges, C. Jackson, and A. Barth. RFC 6797: HTTP Strict Transport Security (HSTS), 2012.

[24] R. Holz, J. Amann, O. Mehani, M. Wachs, and M. A. Kaafar. TLS in the wild: an Internet-wide analysis of TLS-based protocols for electronic communication. In Network and Distributed System Security Symposium. Internet Society, Feb. 2016.

[25] R. Holz, L. Braun, N. Kammenhuber, and G. Carle. The SSL landscape: a thorough analysis of the x.509 PKI using active and passive measurements. In Internet Measurement Conference, pages 427–444. ACM, 2011.

[26] L.-S. Huang, S. Adhikarla, D. Boneh, and C. Jackson. An Experimental Study of TLS Forward Secrecy Deployments. Internet Computing, IEEE, 18(6):43–51, 2014.

[27] R. Kang, L. Dabbish, N. Fruchter, and S. Kiesler. “My Data Just Goes Everywhere:” User Mental Models of the Internet and Implications for Privacy and Security. In Symposium On Usable Privacy and Security (SOUPS), pages 39–52. USENIX Association, July 2015.

[28] M. Kranch and J. Bonneau. Upgrading HTTPS in Mid-Air: An Empirical Study of Strict Transport Security and Key Pinning. In Network and Distributed System Security Symposium. Internet Society, Feb. 2015.

[29] H. K. Lee, T. Malkin, and E. Nahum. Cryptographic Strength of SSL/TLS Servers: Current and Recent Practices. In Internet Measurement Conference, pages 83–92. ACM, Oct. 2007.

[30] G. F. Lyon. Nmap network scanning: The official Nmap project guide to network discovery and security scanning. Insecure, 2009.

[31] W. Mayer, A. Zauner, M. Schmiedecker, and M. Huber. No Need for Black Chambers: Testing TLS in the E-mail Ecosystem at Large. In 11th International Conference on Availability, Reliability and Security (ARES), pages 1–8. IEEE, 2016.