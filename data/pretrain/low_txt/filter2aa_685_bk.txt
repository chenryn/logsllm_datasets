### Index

- **notInjected variable**: 259
- **number variable**: 30–31
- **numbers sequence**: 38
- **numbers variable**: 112
- **O**
  - **-o flag**: 62
  - **object keyword**: 49
  - **object types**
    - **generating**: 270–274
    - **overview**: 49–50
  - **OCaml**: 36
  - **octal notation**: 27
  - **of branch**: 44
  - **oldBufferLen**: 171
  - **one-to-one communication**: 58
  - **online documentation**: 108–109
  - **OOP (Object-Oriented Programming)**: 7, 16–17
  - **open procedure**: 177, 192
  - **openAsync procedure**: 87
  - **OpenSSL library**: 225
  - **operator**: 51, 74–75, 124
  - **ORDER BY keyword**: 198
  - **os module**: 63, 118–120, 127
  - **osinfo package**: 121
  - **osproc module**: 120–121
  - **OSs (Operating Systems), interfacing with**: 117–122
    - **executing external processes**: 120–121
    - **generic operating system services**: 122
    - **working with filesystems**: 118–120
  - **overloading procedures**: 37–38

- **P**
  - **packages**
    - **creating in Nimble package manager**: 139–144
      - **choosing names**: 139
      - **Nimble package directory layout**: 140–141
      - **specifying dependencies**: 141–144
      - **writing .nimble files**: 141–144
    - **defined**: 131–134
    - **developing in Nimble package manager**: 147–148
      - **giving meaning to version numbers**: 147
      - **storing different versions of a single package**: 147–148
    - **directory layout of**: 140–141
    - **installing in Nimble package manager**: 135–139
    - **publishing with Nimble package manager**: 145–146
    - **storing different versions of**: 147–148
  - **Pageview API, Wikipedia**: 160
  - **pairs iterator**: 46
  - **Par node**: 264
  - **parallel_counts, execution time of**: 172–173
  - **parallelism**
    - **concurrency vs. parallelism**: 151–152
    - **dealing with race conditions**: 173–178
      - **preventing with guards**: 174–176
      - **preventing with locks**: 174–176
      - **sending and receiving messages between threads using channels**: 176–178
  - **parsers**: 168–173
    - **execution time of parallel_counts**: 172–173
    - **measuring execution time of sequential_counts**: 168
    - **parallel readPageCounts procedure**: 171–172
    - **parallelizing sequential_counts**: 168–169
    - **parse procedure**: 169
    - **parseChunk procedure**: 170
    - **type definitions**: 169
  - **parsing data**: 159–167
    - **parsing Wikipedia page-counts format**: 161–164
    - **processing each line of Wikipedia page-counts files**: 164–167
    - **understanding Wikipedia page-counts format**: 160–161
    - **sequential_counts**: 168–169
    - **using threads in Nim**: 153–159
      - **exceptions in threads**: 159
      - **GC (garbage collector) safety**: 153–156
      - **thread pools**: 156–159
      - **threads modules**: 153–156
  - **param1 variable**: 123
  - **paramCount procedure**: 64, 100
  - **parameters**
    - **command-line parameters**: 63–65
    - **procedures parameters**: 36
    - **substitution in templates**: 257–258
  - **paramStr() procedure**: 63, 100, 122
  - **parentDir procedure**: 119
  - **parentheses**: 116
  - **parse procedure**: 166, 169
  - **parseChunk procedure**: 169–170
  - **parseJson procedure**: 74
  - **parseMessage procedure**: 72, 79
  - **parseopt module**: 64, 125
  - **parsers, parallelizing**: 168–173
    - **execution time of parallel_counts**: 172–173
    - **measuring execution time of sequential_counts**: 168
    - **parallel readPageCounts procedure**: 171–172
    - **parallelizing sequential_counts**: 168–169
    - **parse procedure**: 169
    - **parseChunk procedure**: 170
    - **type definitions**: 169
  - **parseutils module**
    - **manually parsing data with**: 163–164
    - **overview**: 125
  - **parsing**
    - **command-line arguments**: 122–126
    - **data**: 159–167
      - **in Wikipedia page-counts format**: 161–164
      - **manually using parseutils module**: 163–164
      - **manually using split procedure**: 162–163
      - **processing each line of Wikipedia page-counts files**: 164–167
      - **understanding Wikipedia page-counts format**: 160–161
      - **using regular expressions**: 161–162
    - **each line in files**: 165–166
    - **JSON**: 72–78
  - **parsingex application**: 123
  - **PascalCase**: 33
  - **PATH variable**
    - **adding Nim programming language to**: 286
    - **overview**: 289
  - **path-manipulation procedures**: 118
  - **PCRE library**: 108
  - **peer-to-peer networking**: 59
  - **ping messages**: 99
  - **PNG library, Python**: 105
  - **pointer arithmetic**: 9
  - **points array**: 240
  - **points parameter**: 239
  - **poll procedure**: 88, 90, 97, 159
  - **pollEvent procedure**: 239
  - **pop pragma**: 238
  - **printf prototype**: 229
  - **private keyword**: 72
  - **proc keyword**: 33, 39, 53
  - **procedural macros**: 261
  - **procedural programming**: 21
  - **procedures**
    - **anonymous procedures**: 38–39
    - **constructor, generating**: 274–275
    - **generic procedures**: 251
    - **load, generating**: 275–277
    - **overloading procedures**: 37–38
    - **parameters of procedures**: 36
    - **returning values from procedures**: 35–36
    - **wrapping**
      - **in C programming language**: 228–230
      - **in SDL (Simple DirectMedia Layer)**: 238–240
  - **processMessages procedure**: 93–94
  - **programming languages, differentiating**: 8
  - **protocol module**: 72–73, 79, 103, 139
  - **protocols, implementing**: 70–79
    - **generating JSON**: 78–79
    - **modules**: 71–72
    - **parsing JSON**: 72–78
  - **ptr type**: 9
  - **public keyword**: 72
  - **publishing packages, with Nimble package manager**: 145–146
  - **pull request**: 146
  - **pure modules**: 107–108
  - **pure pragma**: 52
  - **push pragma**: 238
  - **Python programming language, features of**: 19

- **Q**
  - **queues module**: 111
  - **quit procedure**: 64, 110
  - **quote procedure**: 276

- **R**
  - **-r option**: 287
  - **race conditions**: 173–178
    - **sending and receiving messages between threads**: 176–178
    - **using guards to prevent**: 174–176
    - **using locks to prevent**: 174–176
  - **raise keyword**: 47
  - **raise statement**: 159
  - **randomNumber variable**: 106
  - **re module**: 108, 161
  - **readability, of Nim programming language**: 13–14
  - **readAll procedure**: 87
  - **readChars procedure**: 171
  - **readFile function**: 87
  - **reading data, from standard input streams**: 66–68
  - **readLine procedure**: 68, 97
  - **readPageCounts procedure**
    - **overview**: 165
    - **parallel version of**: 170–172
  - **real-time communication, to get help**: 280
  - **receiving messages, between threads using channels**: 176–178
  - **recv procedure**: 82, 177
  - **recvLine procedure**: 96
  - **redirect procedure**: 218
  - **Redis**: 190
  - **ref keyword**: 49
  - **ref object**: 246
  - **ref types**: 50
  - **regular expressions, parsing data with**: 161–162
  - **renderer.clear statement**: 241
  - **renderLogin procedure**: 207
  - **renderMain procedure**: 185, 207
  - **renderMessages procedure**: 205
  - **renderTimeline procedure**: 207–208, 214
  - **renderUser procedure**: 185, 201, 204–205
  - **repeat template**: 257
  - **repository**: 134
  - **repr procedure**: 110
  - **result variable**: 36, 53, 170, 273
  - **resultChan channel**: 178
  - **resultVar procedure**: 36
  - **resultVar2 procedure**: 36
  - **resultVar3 procedure**: 36
  - **retrieving**
    - **command-line parameters supplied by users**: 63–65
    - **data from databases**: 194–198
    - **input in client components**: 63–70
      - **reading data from standard input streams**: 66–68
      - **using spawn to avoid blocking input/output**: 68–70
  - **return values from FlowVar types**: 158–159
  - **return keyword**: 35
  - **returning values, from procedures**: 35–36
  - **reverse procedure**: 116
  - **reverse proxy, setting up**: 219–221
  - **root node**: 263
  - **root variable**: 262
  - **route**
    - **extending**: 214
    - **overview**: 183, 210
  - **routes block**: 217
  - **Rumpf, Andreas**: 4, 20
  - **Rune type**: 28
  - **runForever procedure**: 87, 89
  - **runtime errors**: 23
  - **Rust programming language, features of**: 19

- **S**
  - **sayHello procedure**: 177
  - **SDL (Simple DirectMedia Layer)**: 234
    - **libraries**
      - **creating wrappers for**: 235–236
      - **downloading**: 235
      - **using wrappers**: 240–242
      - **wrapping procedures**: 238–239
      - **wrapping types**: 237–238
  - **sdl module**: 236
  - **SdlEvent type**: 239
  - **SDL_INIT_VIDEO flag**: 240
  - **SdlRenderer**: 238–239
  - **SdlRendererPtr**: 239
  - **SdlWindow**: 238–239
  - **SdlWindowPtr**: 239
  - **search command**: 134–135
  - **seconds variable**: 234
  - **semicolon**: 24, 286
  - **send procedure**: 82, 177
  - **sending messages**
    - **between threads using channels**: 176–178
    - **to clients**: 95
  - **seq type**: 41
  - **sequence type**: 41–42
  - **sequential_counts**
    - **measuring execution time of**: 168
    - **parallelizing**: 168–169
  - **sequtils module**: 42
  - **server component**: 60
  - **server module**: 79
  - **Server type**: 80
  - **serverAddr variable**: 64
  - **servers**
    - **components of**: 60–61
    - **testing without clients**: 91–92
  - **set type**: 42–43
  - **Set-Cookie header**: 213
  - **setLen**: 166
  - **sets module**: 111, 114–115
  - **setup procedure**: 198
  - **shared library files**: 236
  - **sharing memory**: 173
  - **shortcomings of Nim**: 20
  - **showData thread**: 154
  - **showNumber procedure**: 9
  - **Simple DirectMedia Layer. See SDL**
  - **Sinatra**: 183
  - **Slack**: 58
  - **Slice object**: 124
  - **SMT (simultaneous multithreading) technology**: 152
  - **smtp module**: 126
  - **snake_case**: 8
  - **socket variable**: 96
  - **sockets**
    - **defined**: 82–83
    - **transferring data with**: 79–99
      - **asynchronous I/O**: 83–91
      - **asynchronously**: 91–99
  - **sort procedure**: 115
  - **sorted procedure**: 116
  - **spawn**
    - **using to avoid blocking input/output**: 68–70
    - **using with threadpool modules**: 157–158
  - **split procedure**
    - **manually parsing data with**: 161–163
    - **overview**: 124
  - **splitFile procedure**: 119
  - **splitLines iterator**: 170
  - **splitPath procedure**: 119
  - **sql procedure**: 193
  - **SQLite library**: 102
  - **square brackets**: 69, 159
  - **src directory**: 186
  - **standard library**
    - **algorithms**: 111–117
    - **core modules**: 110–111
    - **data structures**: 111–117
    - **modules**: 117
      - **sets module**: 114–115
      - **tables module**: 112–114
    - **for networking**: 126–127
    - **interfacing with OSs**: 117–122
      - **executing external processes**: 120–121
      - **generic operating system services**: 122
      - **working with filesystems**: 118–120
    - **manipulating data**: 122–126
    - **modules**: 103–107
    - **overview**: 107–109
      - **impure modules**: 108
      - **online documentation**: 108–109
      - **pure modules**: 107–108
      - **wrappers**: 108
    - **understanding data**: 122–126
  - **startsWith integer**: 124
  - **statements identifier**: 256

---

This index is now more organized, clear, and professional. Each entry is properly formatted and grouped logically.