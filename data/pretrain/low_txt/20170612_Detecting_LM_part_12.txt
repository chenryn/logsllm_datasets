### Tool: Event ID/Item Name

#### Example
- **Field Name:** Presumed Tool Use
- **Field Value:** This tool is used to create accounts or additional sessions on the infected machine, or to communicate with other hosts.

#### Usage During an Attack
- **Authority Required:** Administrator
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Communication Protocol:** 
  - *With domain administrator privileges, accounts can also be created on the Domain Controller.
- **Service:** N/A
- **Standard Settings:**
  - The creation of a new user is logged in the event log.
- **Acquired Information:**
  - A username and password specified by the `net user` command are recorded (Sysmon).

#### Evidence That Can Be Confirmed
- **Event ID 4720** (A user account was created) is recorded in the "Security" event log if a new user is added.

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created):**
    - **Process Information:**
      - **Process Name:** `C:\Windows\System32\net.exe` or `C:\Windows\System32\net1.exe`
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
          - *It is type 1 or 2 because administrator rights are required.
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 4656 (SAM - A handle to an object was requested):**
    - **Process Information:**
      - **Process Name:** `C:\Windows\System32\lsass.exe`
      - **Object Type:** "SAM_DOMAIN"
      - **Confirmable Information:**
        - Handle ID: Object -> Handle ID
        - Requested Access: Access Request Information -> Access ("ReadPasswordParameters", "CreateUser", "LookupIDs")
        - Success or Failure: Keywords ("Audit Success")
  - **Event ID 4720 (A user account was created):**
    - **New Account:**
      - **Account Name:** A username specified by the `net user` command
      - **Confirmable Information:**
        - User Group: Attribute -> Primary Group ID
        - *Depending on the details of the process executed, different events (such as 4722, 4724, 4726, 4737, and 4738) may be recorded.
  - **Event ID 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `C:\Windows\System32\net.exe` or `C:\Windows\System32\net1.exe`
    - **Confirmable Information:**
      - Process Start/End Time and Date (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId
      - *The fact that a user was added (user /add) and the username and password (if passed as arguments) are recorded in the argument.

#### Remarks
- Additional event logs that can be output if further actions like group addition or other operations were performed. These access histories will be recorded.

---

### Tool: net use

#### Basic Information
- **Tool Name:** net Command (net use)
- **Category:** File Sharing - Acquirable
- **Tool Overview:** Connects to shared folders that are publicly available on the network.

#### Usage During an Attack
- **Source Host:** The host where the `net` command is executed.
- **Destination Host:** The machine accessed by the `net` command.
- **Authority Required:** Standard user
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Communication Protocol:** 445/tcp
- **Service:**
  - **Destination Host:** Server
  - **Source Host:** Workstation
- **Standard Settings:**
  - Source host: Execution history (Sysmon / audit policy)
- **Acquired Information:**
  - Destination host: Although a record of using Windows Filtering Platform remains, audit policy for read data is required to confirm the specific access path.
  - *If a write is made to a shared point, it is recorded in the audit policy of write data.

#### Evidence That Can Be Confirmed
- **Source Host:**
  - If the following log is in the event log, it is possible that file sharing occurred.
  - **Event ID 4689 (A process has exited):** `net.exe` was recorded in the "Security" event log with the execution result (return value) of "0x0".

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created) and 4689 (A process has exited):**
    - **Process Information:**
      - **Process Name:** `C:\Windows\System32\net.exe`
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 5156 (The Windows Filtering Platform has allowed a connection):**
    - **Network Information:**
      - **Direction:** "Outbound"
      - **Destination Address:** [Host Specified as a Shared Folder]
      - **Destination Port/Protocol:** 445/TCP
      - **Confirmable Information:**
        - Source Port: Network Information -> Source Port
  - **Event ID 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `C:\Windows\System32\net.exe`
    - **Confirmable Information:**
      - Process Start/End Time and Date (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId
      - *The destination host and share path are recorded.

#### Remarks
- Additional event logs that can be output if read data is enabled in the audit policy, the connected share path is recorded in event 5140 (file sharing).
- If write access is made to a share point, it is recorded in the audit of object access.

---

### Tool: net share

#### Basic Information
- **Tool Name:** net Command (net share)
- **Category:** File Sharing - Acquirable
- **Tool Overview:** Shares particular folders so that they are available via the network.

#### Usage During an Attack
- **Authority Required:** Administrator
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Condition:**
  - *Although a shared path is used via the network, adding a shared folder with `net share` is completed on the machine.
- **Service:** Server
- **Standard Settings:**
  - Information on a share path may be left on the registry. *The value will be cleared when the shared folder is disabled.
- **Acquired Information:**
  - Execution history (Sysmon / audit policy) *The shared path and used share name are recorded.

#### Evidence That Can Be Confirmed
- If the following log is in the event log, it can be deemed that a shared folder was created.
- **Event ID 5142 (A network share object was added)** is recorded in the "Security" event log.

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created) and 4689 (A process has exited):**
    - **Process Information:**
      - **Process Name:** `C:\Windows\System32\net.exe` or `C:\Windows\System32\net1.exe`
      - *After `net.exe` is executed, `net1.exe` is executed as a child process.
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
          - *It is type 1 or 2 because administrator rights are required.
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 5142 (A network share object was added):**
    - **Confirmable Information:**
      - Share Name: Shared Information -> Share Name
      - Folder Used for Sharing: Share Path
  - **Event IDs 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `C:\Windows\System32\net.exe` or `C:\Windows\System32\net1.exe`
    - **Confirmable Information:**
      - Process Start/End Time and Date (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId
      - *The share name and folder used for sharing are recorded in the argument.

#### Registry Entry:
- **HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer\Shares\Security\[Share Name]$
  - *The entry is created when the shared folder is enabled (when it is disabled, the value is cleared).

#### Remarks
- Since the value is cleared when sharing is disabled, it is difficult to detect an attack unless there is a system for always monitoring the registry.

---

### Tool: icacls

#### Basic Information
- **Tool Name:** icacls
- **Category:** File Sharing - Acquirable
- **Tool Overview:** Changes the file access rights.

#### Usage During an Attack
- **Authority Required:** Standard user
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Condition:**
  - *When the Access Control List (ACL) has been changed, appropriate rights for the relevant files are required.
- **Standard Settings:**
  - Execution history (Prefetch)
- **Acquired Information:**
  - Execution history (Sysmon / audit policy)

#### Evidence That Can Be Confirmed
- If the following log is in the event log, it is considered that file access rights were changed.
- **Event IDs 4688 and 4689 on icacls.exe** are recorded in the "Security" event log, and the Exit Status in the event ID 4689 is set to "0x0".
- *Since it is not possible to determine the target files from the Event IDs 4688 and 4689, it is necessary to additionally check the command line of icacls.exe from the event ID 1 of Sysmon.

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created) and 4689 (A process has exited):**
    - **Process Information:**
      - **Process Name:** `C:\Windows\System32\icacls.exe`
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `C:\Windows\System32\icacls.exe`
    - **Confirmable Information:**
      - Process Start/End Date and Time (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId
      - *The target file and set rights are recorded in the argument.

#### File Name:
- **Execution History:**
  - `C:\Windows\Prefetch\ICACLS.EXE-CCAC2A58.pf`
- **Confirmable Information (using WinPrefetchView):**
  - Last Executed Time and Date: Last Execution Time

#### Remarks
- Additional event logs that can be output.

---

### Tool: sdelete

#### Basic Information
- **Tool Name:** sdelete
- **Category:** Deleting Evidence - Acquirable
- **Tool Overview:** Deletes a file after overwriting it several times.

#### Usage During an Attack
- **Authority Required:** Standard user
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Condition:**
  - *N/A
- **Standard Settings:**
  - A statement to the effect that a license agreement on the use of sdelete was consented is recorded in the registry. *If the tool was used in the past, it cannot be confirmed from the information obtained under the standard setting.
- **Acquired Information:**
  - Execution history (Sysmon / audit policy)
  - A record of deleting and overwriting the file to be deleted during the audit of object access

#### Evidence That Can Be Confirmed
- A file with its name similar to the following was repeatedly deleted.
- **Example:**
  - `sdeleAAAAAAAAAAAAAAAAAAAA.AAA`, `sdeleZZZZZZZZZZZZZZZZZZZZ.ZZZ` when the target to be deleted is `sdelete.txt`.

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created) and 4689 (A process has exited):**
    - **Process Information:**
      - **Process Name:** `[File Name (sdelete.exe)]`
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 4656 (A handle to an object was requested), 4663 (An attempt was made to access an object), and 4658 (The handle to an object was closed):**
    - **Process Information:**
      - **Process Name:** `[File Name (sdelete.exe)]`
      - **Confirmable Information:**
        - File to be Deleted: Object -> Object Name
        - *In the course of deleting a file by overwriting it, sdelete creates a file with its name consisting of a combination of the name of the file to be deleted and some letters, and repeats the delete operation.
        - Process Details: Access Request Information -> Access
        - For the same object, "DELETE" or "WriteData or AddFile" is repeated.
        - Success or Failure: Keywords ("Audit Success")
  - **Event ID 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `[File Name (sdelete.exe)]`
    - **Confirmable Information:**
      - Process Start/End Time and Date (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId
      - *In addition to the executable file, the number of overwriting operations and other options passed to sdelete.exe can be found.

#### File Name:
- **Execution History:**
  - `C:\Windows\Prefetch\[File Name (SDELETE.EXE)]-[RANDOM].pf`
- **Confirmable Information (using WinPrefetchView):**
  - Last Execution Time and Date: Last Execution Time

#### Registry Entry:
- **HKEY_USERS\[SID]\Software\Sysinternals\Sdelete:**
  - When the tool is used for the first time, the effect that the license agreement was consented is recorded in EulaAccepted.
  - *If sdelete was used on the machine in the past, it is not possible to determine its use by the attacker.

#### Remarks
- Additional event logs that can be output.

---

### Tool: timestomp

#### Basic Information
- **Tool Name:** timestomp
- **Category:** Deleting Evidence - Acquirable
- **Tool Overview:** Changes the file timestamp.

#### Usage During an Attack
- **Authority Required:** Standard user
- **Targeted OS:** Windows
- **Operating Domain:** Not required
- **Condition:**
  - *For a file whose timestamp has changed as a result of the use by the attacker, this tool is used to conceal the access to the file by restoring the timestamp.

#### Points to be Confirmed
- **Log Generation:**
  - **Event ID 4688 (A new process has been created) and 4689 (A process has exited):**
    - **Process Information:**
      - **Process Name:** `[File Name (timestomp.exe)]`
      - **Confirmable Information:**
        - Process Start/End Time and Date: Log Date
        - Name of User Who Executed the Process: Subject -> Account Name
        - Domain of User Who Executed the Process: Subject -> Account Domain
        - Presence of Privilege Escalation at Process Execution: Process Information -> Token Escalation Type
        - Process Return Value: Process Information -> Exit Status
  - **Event ID 1 (Process Create) and 5 (Process Terminated):**
    - **Image:** `[File Name (timestomp.exe)]`
    - **Confirmable Information:**
      - Process Start/End Time and Date (UTC): UtcTime
      - Process Command Line: CommandLine
      - User Name: User
      - Process ID: ProcessId

#### File Name:
- **Execution History:**
  - `C:\Windows\Prefetch\[File Name (TIMESTOMP.EXE)]-[RANDOM].pf`
- **Confirmable Information (using WinPrefetchView):**
  - Last Execution Time and Date: Last Execution Time

#### Registry Entry:
- **HKEY_USERS\[SID]\Software\Sysinternals\Timestomp:**
  - When the tool is used for the first time, the effect that the license agreement was consented is recorded in EulaAccepted.
  - *If timestomp was used on the machine in the past, it is not possible to determine its use by the attacker.

#### Remarks
- Additional event logs that can be output.