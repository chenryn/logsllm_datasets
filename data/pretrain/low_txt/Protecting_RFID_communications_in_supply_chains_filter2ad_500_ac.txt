### Prior Knowledge of Tag Serial Numbers

In some cases, there may be prior knowledge of the range of serial numbers for a batch of tags in delivery. In such scenarios, the database \( D_i \) can be partitioned into \( m \) sets of records corresponding to \( m \) batches. This allows for batch pre-processing and real-time searching over \( n/m \) records for each batch. The batch pre-processing will incur \( n/m \) hashing computations and \( O(n/m \log(n/m)) \) sorting operations. Consequently, the average complexity of authenticating each tag in real-time searching is reduced to \( \frac{m}{n} \log\left(\frac{n}{m}\right)! = O(\log(n/m)) \) matching operations.

### Balancing Security and Performance

While batch processing reduces the reader's computational cost, it also opens a window for clone or replay attacks. An attacker can use their own reader and an intercepted nonce to probe a tag that has not yet been read by the legitimate reader, and then replay the tag's response to the legitimate reader (while potentially removing the tagged item). However, cloning attacks are only effective within the targeted batch because nonces for other batches are different. Therefore, the parameter \( m \) can be chosen to balance the efficiency of tag authentication and the resistance to tag cloning attacks. A smaller \( m \) means fewer hash computations but a longer time window for batch authentication, giving attackers more time to intercept the nonce and clone tags.

In supply chain practice, items in the same batch typically arrive at the processing site simultaneously. When the first tag interacts with a legitimate reader, all other tags in the batch should be within close proximity, making it difficult for an attacker to remove a tagged item. Even if a cloning attack is launched, it can be easily detected if the same tag is read more than once.

### Unlinkability and Supply Chain Visibility

Unlinkability and supply chain visibility, as defined in Section 2, may seem contradictory. The key to resolving this apparent dilemma is to differentiate between two types of RFID readers: legitimate readers of supply chain partners and unauthorized readers of non-partners (e.g., in industrial espionage). While supply chain partners should have visibility, unauthorized readers should be prevented from understanding any tag's content or tracking material flow.

**Statement 4.4:** Given a response \( t_1 \) from a tag before being processed by partner \( P_i \) and a response \( t_2 \) after being processed by \( P_i \), it is infeasible for a rogue reader to determine whether \( t_1 \) and \( t_2 \) are from the same tag. In other words, the tags are unlinkable for unauthorized readers.

**Proof Sketch:** Let \( t_1 = H(r \oplus c_1 \oplus k) \) and \( t_2 = H(r \oplus c_2 \oplus k') \), where \( k \neq k' \), and \( c_1 \) and \( c_2 \) are the serial numbers of the tags. The challenge for the adversary is to determine whether \( c_1 = c_2 \). Without the knowledge of \( k \) and \( k' \), no reader can link the two responses.

**Corollary 4.5:** Without knowledge of the access key, no reader can obtain a tag's identity.

**Corollary 4.6:** Without knowledge of the access key, no reader can determine whether two tags belong to the same material flow, i.e., using the same access key.

**Caveat:** Unlinkability in the supply chain context is different from traditional unlinkability, which requires no linkage between any two read operations. Our protocol does not provide the stronger form of unlinkability, which is typically required when user privacy is at stake. In supply chains, protecting the privacy of the supply chain structure is more important.

### Eavesdropper and Insider Attacks

Previous discussions focused on the interrogation of tags by rogue readers. Now, we consider eavesdropping attacks. A passive adversary can sniff all communications between a reader and RFID tags if equipped with a capable antenna. For the Read protocol, an eavesdropper has little advantage since the nonce used is a random number with no secret information. Thus, the Read protocol is secure against eavesdroppers.

For the Write protocol, an eavesdropper within \( P_i \)'s vicinity can obtain \( a = k_i \oplus k_{i+1} \) and several authenticators for individual tags. Since \( a \) is a one-time pad encryption, without knowledge of either key, the adversary cannot acquire any information about the other key. Therefore, the Write protocol is secure against external eavesdroppers.

However, in the supply chain context, malicious partners must be considered. If \( P_{i-1} \) eavesdrops on Write protocol executions at \( P_i \)'s site, they can derive the new access key \( k_{i+1} \). This allows \( P_{i-1} \) to impersonate \( P_{i+1} \) and read or write updated tags, potentially stealing all downstream access keys. Alternatively, a dishonest partner's reader may interrogate all tags and guess the access key by exhaustively checking all tag serial numbers.

**Insider Attack Mitigation:** Under certain circumstances, \( P_{i-1} \) gains little from this attack. First, \( P_{i-1} \) has already read the tags successfully at their site, so re-reading them provides no value. Second, if all partners are entitled to know the entire chain structure, tracking tags along the material flow does not provide additional knowledge. To prevent insider attacks, a trusted third party (TTP) can be introduced to establish a secret shared key between the current partner and tags. Each tag has a unique secret key shared with the TTP, used to generate session keys. However, this approach is not efficient, and designing efficient protocols secure against insider attacks remains an open question.

### Performance Analysis

The adoption of RFID technology in supply chains demands that Read/Write protocols be both secure and efficient. We analyze our proposed protocols by evaluating storage and computation costs.

**Storage Cost:** An RFID tag in our system stores \( \alpha = c \oplus k \), which has the same size as its serial number. Since a tag already has permanent storage for its serial number, our protocol incurs no extra storage cost. The required memory space for computation and communication is limited, involving only XOR operations and hash functions.

**Computation Load:** The computation load for tags is lightweight, requiring only one hash function and one XOR operation for both Read and Write protocols. The RFID reader takes most of the computation load, performing exhaustive searches. Assuming a 128-bit serial number, the maximum time for real-time searching is about 800 ns, which is negligible compared to communication delay. The pre-processing time per batch is about 1.06 s, including 220 ms for hashing and 840 ms for sorting. This cost is also negligible, given the typical time gap between processing batches.

### Conclusion

This paper studies the security issues of using RFID tags in supply chain models. We identify security requirements including authoritative access, authenticity of tags, unlinkability, and supply chain visibility. Our proposed RFID system, comprising both read and write protocols, satisfies these requirements with affordable computation and storage costs. This solution represents a valuable first step toward more advanced solutions for protecting RFID communications in supply chains.

### References

[1] G. Ateniese, J. Camenisch, and B. de Medeiros. Untraceable RFID tags via insubvertible encryption. In ACM Conference on Computer and Communications Security, pages 92–101, 2005.
[2] G. Avoine and P. Oechslin. RFID traceability: A multilayer problem. In Financial Cryptography, pages 125–140, 2005.
[3] M. Bellare, R. Canetti, and H. Krawczyk. Keying hash functions for message authentication. In Crypto’96, pages 1–15.
[4] S. C. Bono, M. Green, A. Stubblefield, A. Juels, A. D. Rubin, and M. Szydlo. Security analysis of a cryptographically-enabled RFID device. In USENIX Security Symposium, pages 1–16, 2005.
[5] K. P. Fishkin and S. Roy. Enhancing RFID privacy via antenna energy analysis. tech. memo IRS-TR-03-012, Intel Research Seattle, 2003.
[6] S. Garfinkel. An RFID bill of rights. Technology Review, page 35, October 2002.
[7] S. L. Garfinkel, A. Juels, and R. Pappu. RFID privacy: An overview of problems and proposed solutions. IEEE Security & Privacy, 3(3):34–43, 2005.
[8] P. Golle, M. Jakobsson, A. Juels, and P. F. Syverson. Universal re-encryption for mixnets. In CT-RSA, pages 163–178, 2004.
[9] A. Juels. Minimalist cryptography for low-cost RFID tags. In SCN, pages 149–164, 2004.
[10] A. Juels and R. Pappu. Squealing Euros: Privacy protection in RFID-enabled banknotes. In Financial Cryptography, pages 103–121, 2003.
[11] A. Juels, R. L. Rivest, and M. Szydlo. The blocker tag: selective blocking of RFID tags for consumer privacy. In ACM Conference on Computer and Communications Security, pages 103–111, 2003.
[12] A. Juels, P. Syverson, and D. Bailey. High-power proxies for enhancing RFID privacy and utility. In Privacy Enhancing Technologies, pages 210–226, 2005.
[13] E. Liu and A. Kumar. Leveraging information sharing to increase supply chain configurability. In Twenty-Fourth International Conference on Information Systems, pages 523–537, 2003.
[14] D. Menasce. Security performance. IEEE Internet Computing, pages 84–87, May 2003.
[15] A. J. Menezes, P. C. van Oorschot, and S. A. Vanstone. Handbook of applied cryptography. CRC Press, 1997. ISBN 0-8493-8523-7.
[16] D. Molnar, A. Soppera, and D. Wagner. A scalable, delegatable pseudonym protocol enabling ownership transfer of RFID tags. In Selected Areas in Cryptography, pages 276–290, 2005.
[17] D. Molnar and D. Wagner. Privacy and security in library RFID: issues, practices, and architectures. In ACM Conference on Computer and Communications Security, pages 210–219, 2004.
[18] M. Ohkubo, K. Suzuki, and S. Kinoshita. RFID privacy issues and technical challenges. ACM Communications, 48(9):66–71, 2005.
[19] M. R. Rieback, B. Crispo, and A. S. Tanenbaum. RFID guardian: A battery-powered mobile device for RFID privacy management. In ACISP, pages 184–194, 2005.
[20] S. Sarma, S. Weis, and D. Engels. White paper: RFID systems, security and privacy implications. Technical Report MIT-AUTOID-WH-014, Auto-ID Center, MIT, November 2002.
[21] S. Weigart. Physical security devices for computer subsystems: A survey of attacks and defenses. In Workshop on Cryptographic Hardware and Embedded Systems, pages 302–317, 2000.
[22] S. A. Weis, S. E. Sarma, R. L. Rivest, and D. W. Engels. Security and privacy aspects of low-cost radio frequency identification systems. In SPC, pages 201–212, 2003.
[23] L. Xiao, X. Zhang, and S. A. Kubricht. Improving memory performance of sorting algorithms. ACM Journal of Experimental Algorithmics, 5(3), 2000.
[24] X. Zhang and B. King. Integrity improvements to an RFID privacy protection protocol for anti-counterfeiting. In ISC, pages 474–481, 2005.