# Nu1L Team Handbook for CTFers

## Page 1
**Title:**
Nu1L Team  
Handbook for CTFers  
中国工信出版集团  
电子工业出版社  
Springer

---

## Page 2
**Title:**
Handbook for CTFers

---

## Page 3
**Title:**
Nu1L Team  
Handbook for CTFers  
Springer  
中国工信出版集团

---

## Page 4
**Title:**
Nu1L Team  
Shanghai, China

**ISBN:**
- Print: 978-981-19-0335-9
- eBook: 978-981-19-0336-6

**DOI:**
https://doi.org/10.1007/978-981-19-40336-6

**Publisher:**
Jointly published with Publishing House of Electronics Industry, Beijing, P.R. China.

**Note:**
The print edition is not for sale in China (Mainland). Customers from China (Mainland) should order from the Publishing House of Electronics Industry.

**Copyright:**
© Publishing House of Electronics Industry 2022

**License:**
This work is subject to copyright. All rights are solely and exclusively licensed by the Publisher, whether for recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission in whole or part of the material. Specifically, the rights of reprinting, reuse of illustrations, computer software, or similar or dissimilar methodologies now known or hereafter developed are reserved.

**Disclaimer:**
The use of general descriptive names, registered names, trademarks, service marks, etc., in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use.

**Legal Notice:**
The publishers, authors, and editors assume no responsibility for the advice and information in this book. The publishers remain neutral with regard to jurisdictional claims in published maps and institutional affiliations.

**Company Information:**
This Springer imprint is published by the registered company Springer Nature Singapore Pte Ltd.  
Registered Company Address: 152 Beach Road, #21-01/04 Gateway East, Singapore 189721, Singapore

---

## Page 5
**Preface**

In 2017, we had the idea of writing a book for CTF beginners, but the project was put on hold due to the limited number of team members at the time. By the end of 2018, our team, Nu1L, had grown to nearly 40 members, and the idea of writing a book was rekindled. After consulting with many team members and reaching a consensus, we began writing the book.

After preliminary discussions, we decided to cover as many aspects of CTF competitions as possible, aiming to create a systematic textbook for CTF beginners. To avoid the book becoming a mere compendium of system security fundamentals, we also included problem-solving tricks and personal experiences, allowing readers to better integrate and apply the techniques.

The purpose of this book is to help more people enjoy and understand CTF competitions, and to improve their skills through the content provided.

---

## Page 6
**Structure of the Book**

This book is divided into two parts: online jeopardy-style CTF and CTF finals. In addition to the content related to CTF competitions, we also share some real-world vulnerability mining experiences with the readers.

### Part 1: Online Jeopardy-Style CTF
This part consists of ten chapters, covering topics such as Web, PWN, Reverse, APK, Misc, Crypto, Blockchain, and code auditing. These chapters include example challenges and solutions, enabling readers to fully understand and learn the corresponding techniques. The content can also serve as a reference during CTF competitions.

### Part 2: CTF Finals
This part consists of two chapters: AWD and penetration testing. The AWD chapter provides an in-depth introduction to related tricks and flow analysis. The penetration testing chapter is closer to real-world scenarios, allowing readers to combine it with practical experience and gain valuable insights.

---

## Page 7
**Description**

CTF involves a wide variety of professional knowledge. Therefore, 29 members of the Nu1L team contributed to this book, each responsible for writing different chapters. Although we tried to standardize the writing style, individual styles may vary, leading to some differences in the chapters.

The contributors to this book are first-time writers, so while we cannot guarantee that the book is exhaustive, it aims to cover the appropriate aspects of CTF competitions in as much detail as possible. This book is primarily for CTF beginners, and if written in detail, each part could fill a book. Therefore, we have filtered the content to cover common CTF techniques. For example, the SQL injection section in the Web chapter includes various types of SQL injection, such as NoSQL.

We hope the readers will understand and appreciate our efforts.

---

## Page 8
**About the Nu1L Team**

Nu1L is a CTF team founded in 2015, with its name derived from the word "NULL." Nu1L is one of the top CTF teams in China, with over 70 members. The official website is https://nu1l.com.

Nu1L has competed in numerous CTF competitions around the world with excellent results, including:
- DEFCON CHINA & BCTF 2018 Champion
- Ranked 1st locally, 4th globally in the 0CTF/TCTF 2018 Finals
- Ranked 1st globally in the LCTF & SCTF for three consecutive years
- 2019 XCTF Finals Champion
- Ranked 7th in the DEFCON CTF 2021 Finals
- Organizer of N1CTF (https://ctftime.org/ctf/240), an international CTF

Some team members are speakers at security conferences such as Blackhat, HITCON, and KCON, and participate in professional hacking competitions like PWN2OWN and GEEKPWN. Some core team members also work for Tea Deliverers and eee teams.

---

## Page 9
**Acknowledgments**

Given the broad range of professional knowledge involved in CTF, the preparation of this book has gathered articles from many security researchers, as well as published books and research works.

We would like to thank the 29 members of the Nu1L team who contributed to this book. Finally, we extend our gratitude to all those who have believed in, supported, and helped Nu1L over the years.

August 2020  
Nu1L Team

---

## Page 10
**Contents**

1. **Introduction to the Web**
   - 1.1 Information Gathering
     - 1.1.1 Classification of Information Collection
     - 1.1.2 Techniques for Information Gathering
   - 1.2 SQL Injection in CTF
     - 1.2.1 SQL Injection Basics
     - 1.2.2 Injection Points
     - 1.2.3 Injection and Defense
     - 1.2.4 Impacts of Injection
     - 1.2.5 SQL Injection Summary
   - 1.3 Arbitrary File Read Vulnerability
     - 1.3.1 Common Trigger Points for File Read Vulnerabilities
     - 1.3.2 Common Read Paths for File Read Vulnerabilities
     - 1.3.3 File Read Vulnerability Example
   - 1.4 Summary
   - 1.5 Advanced Web
     - 2.1 SSRF Vulnerabilities
       - 2.1.1 SSRF Principle Analysis
       - 2.1.2 SSRF Vulnerability Finding and Testing
       - 2.1.3 SSRF Vulnerability Attack Modes
       - 2.1.4 SSRF in the CTF
     - 2.2 Command Execution Vulnerabilities
       - 2.2.1 Principles of Command Execution and Test Methods
       - 2.2.2 Command Execution Bypasses and Tricks
       - 2.2.3 Real-life Command Execution Challenges and Answers
     - 2.3 The Magic of XSS
       - 2.3.1 XSS Types
       - 2.3.2 XSS Tricks
       - 2.3.3 XSS Filtering and Bypass
       - 2.3.4 XSS Bypass Case
     - 2.4 File Upload Vulnerability
       - 2.4.1 Basic File Upload Vulnerability
       - 2.4.2 Truncate to Bypass Upload Restrictions
       - 2.4.3 File Suffix Blacklist Verification Bypass
       - 2.4.4 File Suffix Whitelist Verification Bypass
       - 2.4.5 File Access Forbidden Bypass
       - 2.4.6 Bypass Image Check to Achieve Code Execution
       - 2.4.7 Exploit with Upload the Generated Temporary File
       - 2.4.8 Use `file_put_contents` to Upload Files
       - 2.4.9 Upload Problems Caused by ZIP File Upload

2. **Deserialization Vulnerabilities**
   - 3.1 Deserialization Vulnerabilities
     - 3.1.1 Introduction to Deserialization
     - 3.1.2 Case Studies
   - 3.2 Template Injection
     - 3.2.1 PHP Template Injection
     - 3.2.2 Python Template Injection
     - 3.2.3 Deserialization in Python
     - 3.2.4 Python XXE
     - 3.2.5 `sys.audit`
     - 3.2.6 CTF Python Cases
   - 3.3 Cryptography and Reverse Engineering
     - 3.3.1 Cryptography Knowledge
     - 3.3.2 Reverse Engineering in the Web
   - 3.4 Logic Flaws
     - 3.4.1 Common Logic Flaws
     - 3.4.2 Logic Flaws in CTFs
     - 3.4.3 Summary of Logical Flaws
   - 3.5 Summary

3. **APK**
   - 4.1 Fundamentals of Android Development
     - 4.1.1 The Four Android Components
     - 4.1.2 APK File Structure
     - 4.1.3 DEX File Format
     - 4.1.4 Android API
     - 4.1.5 Android Sample Code
   - 4.2 APK Reverse Tools
     - 4.2.1 JEB
     - 4.2.2 IDA
     - 4.2.3 Xposed Hook
     - 4.2.4 Frida Hook
   - 4.3 APK Unpacking
   - 4.4 APK Anti-debugging
     - 4.4.1 Injecting Process and Dumping Memory
     - 4.4.2 Modifying the Source
     - 4.4.3 Class Overloading and DEX Reconstruction
   - 4.5 APK in CTFs
     - 4.5.1 OLLVM Obfuscated Native App Reverse (NJCTF 2017)
     - 4.5.2 Anti-debugging and Anti-VM (XDCTF 2016)
   - 4.6 Summary

4. **Reverse Engineering**
   - 5.1 Basics of Reverse Engineering

---

## Page 12
**Contents (Continued)**

4. **APK**
   - 4.1 Fundamentals of Android Development
     - 4.1.1 The Four Android Components
     - 4.1.2 APK File Structure
     - 4.1.3 DEX File Format
     - 4.1.4 Android API
     - 4.1.5 Android Sample Code
   - 4.2 APK Reverse Tools
     - 4.2.1 JEB
     - 4.2.2 IDA
     - 4.2.3 Xposed Hook
     - 4.2.4 Frida Hook
   - 4.3 APK Unpacking
   - 4.4 APK Anti-debugging
     - 4.4.1 Injecting Process and Dumping Memory
     - 4.4.2 Modifying the Source
     - 4.4.3 Class Overloading and DEX Reconstruction
   - 4.5 APK in CTFs
     - 4.5.1 OLLVM Obfuscated Native App Reverse (NJCTF 2017)
     - 4.5.2 Anti-debugging and Anti-VM (XDCTF 2016)
   - 4.6 Summary

5. **Reverse Engineering**
   - 5.1 Basics of Reverse Engineering