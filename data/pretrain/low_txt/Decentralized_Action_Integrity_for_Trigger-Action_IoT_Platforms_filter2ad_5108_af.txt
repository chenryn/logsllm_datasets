### Not Focused on Rule Correctness

Poirot identifies vulnerabilities that arise from discrepancies in abstractions [33]. The authors applied Poirot to IFTTT and discovered a CSRF attack. In contrast, our approach assumes that the trigger-action platform is already compromised and designs a decentralized platform to ensure that an attacker cannot arbitrarily invoke actions. Instead, an attacker can only invoke actions if they can prove the occurrence of a specific trigger.

### Decentralized Trust Management

Blaze, Feigenbaum, and Lacy introduced PolicyMaker [20], which exhibits local control in managing trust relationships. Our DTAP protocol supports a similar decentralized verification of trigger-action rules. Additionally, our concept of an OAuth token associated with constraints and the notion of signed trigger blobs are inspired by PolicyMaker's approach of binding keys to predicates that determine the actions for which those keys are trusted.

### Kerberos TGT

The concept of XTokens generating recipe-specific tokens is similar to the Kerberos single sign-on protocol, where "ticket granting tickets" (TGTs) are used to acquire "service tickets" to authenticate users to other services without prompting them. However, the Kerberos protocol relies on a trusted server to hold TGTs and is typically used in scenarios where the user, trusted server, and connecting services are all within the same organization.

### OAuth Security Analyses

Since the Open standard for Authorization (OAuth) was introduced in 2007 [31], numerous studies have identified flaws in the protocol and its implementations [25, 12, 27, 28, 40, 41, 44, 48, 49, 50]. Despite these issues, OAuth remains popular and is widely used in mobile applications. Initially designed for web sites, some aspects of the protocol were left to developer interpretation when adapted for mobile applications. Recent work has scrutinized OAuth implementations in Android mobile applications [21, 47, 42], revealing that many deployments are vulnerable [21, 47].

Our work contributes to the growing body of research on OAuth vulnerabilities in trigger-action platforms. We aim to understand how incorrect OAuth deployments affect the security properties of these platforms. As with previous findings, if OAuth tokens are leaked, attackers can use them freely. In the context of trigger-action platforms, this means that tokens guarding access to digital and physical resources for millions of users are at risk of being stolen and misused.

Fett et al. conducted a formal security analysis of the OAuth 2.0 standard and discovered new vulnerabilities [26]. They proposed fixes and proved the security of the protocol in an expressive web model. While their contributions are orthogonal to ours, our work will benefit from their improvements to the OAuth protocol.

### Cloud Platform Compromise

In addition to OAuth implementation vulnerabilities, other attacks on trigger-action platforms can expose user data. Massive data leaks, such as those at Equifax [2], Target [16], and the US voters database [1], highlight the need for robust security measures. Our work introduces the first decentralized trigger-action platform design, which ensures that even if the platform is compromised, attackers can only execute specific user rules.

### IoT Security

Fernandes et al. analyzed the security of SmartThings and conducted attacks using stolen OAuth tokens [23], underscoring the need to secure IoT platforms that use OAuth. We introduce extensions to the OAuth protocol to support rule-specific tokens. Fernandes et al. also introduced flow tracking properties for IoT apps using FlowFence [24], focusing on confidentiality in a centralized setting. Our work, however, focuses on action integrity in a decentralized setting.

### Conclusion

Trigger-Action platforms integrate various online services to achieve useful automation by gaining privileges to access user data and devices through OAuth tokens. However, the monolithic designs of current trigger-action platforms pose a significant security risk: if the platform is compromised, attackers can leak OAuth tokens for all users and misuse them. A case study of the IFTTT platform revealed that OAuth tokens are overprivileged, allowing attackers to cause extensive damage.

To address this risk, we introduced Decentralized Action Integrity, a security mechanism that ensures that even if OAuth tokens are stolen, attackers cannot misuse them. Instead, attackers can only invoke action services if they can prove that the triggering condition was true for a given rule. We designed and implemented the Decentralized Trigger-Action Platform (DTAP), the first platform to support Decentralized Action Integrity. DTAP takes a decentralized approach, introducing the notion of XTokens, rule-specific tokens, and a cryptographic extension to the OAuth 2.0 protocol. We implemented this design as a Python library that can be easily integrated into existing services (with a one-line addition). Performance tests indicate modest overhead (a 15ms latency increase and a 2.5% throughput drop).

### Acknowledgements

We thank the anonymous reviewers and our shepherd, Limin Jia, for their insightful feedback. We also thank Tadayoshi Kohno for his valuable input. This work is supported in part by the National Science Foundation under Grant No. 1646392 and 1740897, the UW Tech Policy Lab, and the MacArthur Foundation.

### References

[1] 191 Million US Voter Registration Records Leaked In Mystery Database, http://www.forbes.com/sites/thomasbrewster/2015/12/28/us-voter-database-leak/.

[2] A Brief History of Equifax Security Fails, https://www.forbes.com/sites/thomasbrewster/2017/09/08/equifax-data-breach-history/#3829d1f4677c.

[3] ApacheBench, http://httpd.apache.org/docs/2.4/programs/ab.html.

[4] Apiant, https://apiant.com/.

[5] Automate Processes + Tasks— Microsoft Flow, https://flow.microsoft.com/en-us/.

[6] automate.io, https://automate.io/ifttt-alternative.

[7] CloudWork, https://cloudwork.com/.

[8] Data Breaches Exposed 707 Million Records During 2015, http://news.softpedia.com/news/data-breaches-exposed-707-million-records-during-2015-501116.shtml.

[9] Hack Brief: 4-Year-Old Dropbox Hack Exposed 68 Million People’s Data, https://www.wired.com/2016/08/hack-brief-four-year-old-dropbox-hack-exposed-68-million-peoples-data/.

[10] If This Then That, https://ifttt.com/.

[11] IFTTT- Learn More, https://ifttt.com/wtf.

[12] OAuth Security Advisory: 2009.1, https://oauth.net/advisories/2009-1/.

[13] oauthlib 2.0.0, https://pypi.python.org/pypi/oauthlib.

[14] ProVerif, http://prosecco.gforge.inria.fr/personal/bblanche/proverif/.

[15] Stringify, https://www.stringify.com/.

[16] Target Expects 148 Million Loss from Data Breach, http://time.com/3086359/target-data-breach-loss/.

[17] Wireshark, https://www.wireshark.org/.

[18] Zapier, https://zapier.com/.

[19] Apple Inc., “iOS Security - iOS 9.3 or later,” 2016.

[20] M. Blaze, J. Feigenbaum, and J. Lacy, “Decentralized trust management,” in Proceedings of the 1996 IEEE Symposium on Security and Privacy, ser. SP ’96. Washington, DC, USA: IEEE Computer Society, 1996, pp. 164–. [Online]. Available: http://dl.acm.org/citation.cfm?id=525080.884248

[21] E. Y. Chen, Y. Pei, S. Chen, Y. Tian, R. Kotcher, and P. Tague, “OAuth demystified for mobile application developers,” in Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security, ser. CCS ’14. New York, NY, USA: ACM, 2014, pp. 892–903. [Online]. Available: http://doi.acm.org/10.1145/2660267.2660323

[22] G. Cooking, If your smoke alarm detects an emergency, then turn off your oven, http://tinyurl.com/gv4q3hq.

[23] E. Fernandes, J. Jung, and A. Prakash, “Security Analysis of Emerging Smart Home Applications,” in IEEE Symposium on Security and Privacy (S&P), 2016.

[24] E. Fernandes, J. Paupore, A. Rahmati, D. Simionato, M. Conti, and A. Prakash, “FlowFence: Practical Data Protection for Emerging IoT Application Frameworks,” in Proceedings of the 25th USENIX Security Symposium, 2016.

[25] D. Fett, R. Kusters, and G. Schmitz, “A Comprehensive Formal Security Analysis of OAuth 2.0,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, ser. CCS ’16, 2016.

[26] D. Fett, R. Kusters, and G. Schmitz, “A comprehensive formal security analysis of oauth 2.0,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, ser. CCS ’16. New York, NY, USA: ACM, 2016, pp. 1204–1215. [Online]. Available: http://doi.acm.org/10.1145/2976749.2978385

[27] E. Homakov, How we hacked Facebook with OAuth2 and Chrome, http://homakov.blogspot.ca/2013/02/hacking-facebook-with-oauth2-and-chrome.html.

[28] E. Homakov, OAuth1, OAuth2, OAuth...?, http://homakov.blogspot.ca/2013/03/oauth1-oauth2-oauth.html.

[29] IFTTT, IFTTT Platform Size Metrics, https://platform.ifttt.com/pricing.

[30] IFTTT, https://ifttt.com/.

[31] Internet Engineering Task Force, RFC5849 - The OAuth 1.0 Protocol, 2010.

[32] ——, RFC6749 - The OAuth 2.0 Authorization Framework, 2012.

[33] E. Kang, A. Milicevic, and D. Jackson, “Multi-representational security analysis,” in Proceedings of the 2016 ACM International Symposium on the Foundations of Software Engineering, ser. FSE ’16, 2016.

[34] Hardware-backed Keystore, https://source.android.com/security/keystore/.

[35] R. P. Kim Laine, Hao Chen, “Simple Encrypted Arithmetic Library - SEAL (v2.1),” Tech. Rep., September 2016. [Online]. Available: https://www.microsoft.com/en-us/research/publication/simple-encrypted-arithmetic-library-seal-v2-1/

[36] M. Mimoso, 1 million phishing Gmail attack, users impacted by Google Docs, https://threatpost.com/1-million-gmail-users-impacted-by-google-docs-phishing-attack/125436/.

[37] C. Nandi and M. D. Ernst, “Automatic trigger generation for rule-based smart homes,” in PLAS 2016: ACM SIGPLAN Workshop on Programming Languages and Analysis for Security, Vienna, Austria, October 24, 2016.

[38] F. Roesner, T. Kohno, A. Moshchuk, B. Parno, H. J. Wang, and C. Cowan, “User-driven access control: Rethinking permission granting in modern operating systems,” in Proceedings of the 2012 IEEE Symposium on Security and Privacy, ser. SP ’12. Washington, DC, USA: IEEE Computer Society, 2012, pp. 224–238. [Online]. Available: http://dx.doi.org/10.1109/SP.2012.24

[39] J. H. Saltzer, D. P. Reed, and D. D. Clark, “End-to-end arguments in system design,” ACM Trans. Comput. Syst., vol. 2, no. 4, pp. 277–288, Nov. 1984. [Online]. Available: http://doi.acm.org/10.1145/357401.357402

[40] B. Security, How I Hacked Any Facebook Account...again!, http://www.breaksec.com/?p=5753.

[41] ——, How I Hacked Facebook OAuth to Get Full Permission on Any Facebook Account (Without App “Allow” Interaction), http://www.breaksec.com/?p=5734.

[42] M. Shehab and F. Mohsen, “Towards Enhancing the Security of OAuth Implementations in Smart Phones,” in International Conference on Mobile Services, 2014.

[43] J. Sherry, C. Lan, R. A. Popa, and S. Ratnasamy, “Blindbox: Deep packet inspection over encrypted traffic,” in Proceedings of the 2015 ACM Conference on Special Interest Group on Data Communication, ser. SIGCOMM ’15. New York, NY, USA: ACM, 2015, pp. 213–226. [Online]. Available: http://doi.acm.org/10.1145/2785956.2787502

[44] S.-T. Sun and K. Beznosov, “The devil is in the (implementation) details: An empirical analysis of OAuth SSO systems,” in CCS, 2012.

[45] M. Surbatovich, J. Aljuraidan, L. Bauer, A. Das, and L. Jia, “Some recipes can do more than spoil your appetite: Analyzing the security and privacy risks of ifttt recipes,” in Proceedings of the 26th International Conference on World Wide Web, ser. WWW ’17. Republic and Canton of Geneva, Switzerland: International World Wide Web Conferences Steering Committee, 2017, pp. 1501–1510. [Online]. Available: https://doi.org/10.1145/3038912.3052709

[46] B. Ur, M. P. Y. Ho, S. Brawner, J. Lee, S. Mennicken, N. Picard, D. Schulze, and M. L. Littman, “Trigger-Action Programming in the Wild: An Analysis of 200,000 IFTTT Recipes,” in CHI, 2016.

[47] H. Wang, Y. Zhang, J. Li, H. Liu, W. Yang, B. Li, and D. Gu, “Vulnerability Assessment of OAuth Implementations in Android Applications,” in ACSAC, 2015.

[48] R. Wang, S. Chen, and X. Wang, “Signing Me onto Your Accounts through Facebook and Google: A Traffic-Guided Security Study of Commercially Deployed Single-Sign-On Web Services,” in IEEE Symposium on Security and Privacy (S&P), 2012.

[49] R. Wang, X. Wang, L. Xing, and S. Chen, “Unauthorized Origin Crossing on Mobile Platforms: Threats and Mitigation,” in CCS, 2013.

[50] R. Wang, Y. Zhou, S. Chen, S. Qadeer, D. Evans, and Y. Gurevich, “Explicating SDKs: Uncovering assumptions underlying secure authentication and authorization,” in USENIX Security, 2014.

[51] R. Yang, W. C. Lau, and T. Liu, “Signing into one billion mobile app accounts effortlessly with oauth2.0,” in BlackHat, 2016.