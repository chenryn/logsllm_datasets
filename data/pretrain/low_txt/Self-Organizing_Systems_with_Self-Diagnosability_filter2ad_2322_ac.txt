### Robotic System "CEBOT" and Related Concepts

Kokaji [12] and Murata, Kurokawa, and Kokaji [15] developed self-reorganizing mechanical units called "Fractal Machine" and "Fractum," respectively, based on a similar concept. They discussed dynamic reconfiguration using a set of local rules. Recently, Tomita et al. [24] proposed a self-assembly and self-repair method for a homogeneous distributed mechanical system, utilizing the Fractum concept. However, these systems assume that faulty units have already been identified, necessitating fault identification algorithms.

We propose applying the recursive procedure described in Section 2 to make the system fault-tolerant. In this section, we demonstrate the application of this method to a robotic system that forms a circle. Simulation results show the effectiveness of the proposed method.

### 4.1 Decentralized Self-Organizing Autonomous Robotic System for Circle Formation

The system consists of \( n \) units (robots) moving on a plane. Each unit's objective is to adjust its distance from the furthest unit to a given value (diameter) and move away from the nearest unit. This process results in a circle with a specified diameter, where units are evenly spaced along the circumference. The system operates under the following assumptions:

**Assumption 1:** Each unit knows the circle's diameter.

**Assumption 2:** Each unit can obtain the distance information to all other \( n-1 \) units at any time.

Each unit follows the "Circle" algorithm [22], [23] to form a circle without centralized control. The algorithm's outline is as follows:

**Algorithm: Circle**
- **Input:** Diameter \( D \)
- **Output:** Circumference \( C \) consisting of \( n \) units
  1. A unit \( u \) obtains the distances to the other units and identifies the furthest unit \( u_f \) and the nearest unit \( u_n \).
  2. If the distance between \( u \) and \( u_f \) is greater than \( D \), \( u \) moves slightly towards \( u_f \).
  3. If the distance between \( u \) and \( u_f \) is less than \( D \), \( u \) moves slightly away from \( u_f \).
  4. If the distance between \( u \) and \( u_f \) is approximately equal to \( D \), \( u \) moves slightly away from \( u_f \).
  5. Repeat steps 1 through 4.

### 4.2 Summary of the Simulation and Its Results

A simulator window image shows each unit represented by a small disk with an ID number. A black point within each disk indicates the unit's direction of movement. In Figure 7, a circle is formed correctly when all units are fault-free.

To make the system fault-tolerant, allowing up to two permanently faulty units, we implemented an optimal highly structured 7-unit 2-OD system with no mutual tests, as shown in Figure 8. We restricted faults to the following case:

**Assumption 3:** Faults occur only on the circle's diameter, causing it to change to an abnormally larger value (1.5 times the given diameter \( D \)).

Faulty units are treated as follows:

**Assumption 4:** Faulty units are ignored, meaning their distances are not used in the Circle algorithm.

In the simulation, we made units \( v_2 \) and \( v_3 \) faulty. The 7-unit 2-OD system identified the faulty units, and the remaining fault-free units reconstructed the circle. When units \( v_2 \), \( v_3 \), and \( v_5 \) were faulty, the system could not identify the faulty units correctly, leading to a breakdown of the circle, as shown in Figures 9 and 10.

To address this, we added two fault-free units \( v_8 \) and \( v_9 \) to the system, constructing a 9-unit 3-OD system (Figure 11). This allowed the correct identification of the three faulty units, and the remaining units automatically reconstructed the circle (Figure 12).

Simulation results demonstrate that the system can be restored by sequentially adding fault-free units according to Method 1. This method is useful for reconfiguring self-organizing systems composed of homogeneous units [12], [15].

### 5. Conclusion

The highly structured self-diagnosable system has an \( O(|E|) \) fault-identification algorithm, enabling independent, local, and randomly ordered diagnosis of each unit. By applying the theory of highly structured t-OD systems to a simple example, we introduced a fault-tolerance mechanism into a self-organizing system, allowing \( t \) permanent faulty units without centralized control. Using the recursive procedure for optimally designing highly structured t-OD systems, we reconfigured the system even when the number of faulty units exceeded the assumed bound \( t \). Simulation results confirm the effectiveness of the proposed method in making the system fault-tolerant.

### References

[1] A.T. Dahbura, G.M. Masson, and C.L. Yang, “Self-Implicating Structures for Diagnosable Systems,” IEEE Transactions on Computers, vol. C-34, no. 8, pp. 718–723, Aug. 1985.

[2] E.P. Duarte Jr. and T. Nanya, “A Hierarchical Adaptive Distributed System-Level Diagnosis Algorithm,” IEEE Transactions on Computers, vol. 47, no. 1, pp. 34–45, Jan. 1998.

[3] T. Fukuda and S. Nakagawa, “Approach to the Dynamically Reconfigurable Robot Systems,” Journal of Intelligent and Robotics Systems, vol. 1, pp. 55–72, 1988.

[4] S.L. Hakimi and A.T. Amin, “Characterization of Connection Assignment of Diagnosable Systems,” IEEE Transactions on Computers, vol. C-23, no. 1, pp. 86–88, Jan. 1974.

[5] ITU-T Recommendation X.509 (1997 E): Information Technology – Open Systems Interconnection – The Directory: Authentication Framework, June 1997.

[6] G. Jeon and Y. Cho, “A System-Level Diagnosis for Internet-based Virtual Private Networks,” in Proceedings of the 29th International Symposium on Fault-Tolerant Computings (FTCS-29), pp. 27-28, Fast Abstracts, Madison, June 1999.

[7] Y. Kawauchi, M. Inaba, and T. Fukuda, “A Principle of Decision Making of Cellular Robotic System (CEBOT),” in Proceedings of the IEEE International Conference on Robotics and Automation, Los Alamitos, CA, pp. 833-838, 1993.

[8] T. Kohda, “On Sequentially Diagnosable Systems Containing at Most t Faulty Units,” IEICE Transactions, vol. 61-D, no. 9, pp. 688–694, Sept. 1978 (in Japanese); English translation published in Systems · Computers · Controls, vol. 9, no. 5, pp. 30–37, 1978.

[9] T. Kohda and H. Mitsuoka, “An Optimal Design of One-Step t-Fault Diagnosable System with an O(|E|) Fault Identification Algorithm,” IEICE Transactions, vol. 69-D, no. 11, pp. 1547–1555, Nov. 1986 (in Japanese).

[10] T. Kohda, “Hybrid Fault Diagnosable Systems under a Restriction on the Intermittent Nature of Faults,” IEICE Transactions, vol. E73, no. 8, pp. 1270–1277, Aug. 1990.

[11] T. Kohda, “A Simple Discriminator for Identifying Faults in Highly Structured Diagnosable Systems,” Journal of Circuits, Systems, and Computers, vol. 4, no. 3, pp. 255–277, Sept. 1994.

[12] S. Kokaji, “A Fractal Mechanism and a Decentralized Control Method,” in Proceedings of the USA-Japan Symposium on Flexible Automation, Minneapolis, MN, pp. 1129-1134, 1988.

[13] S. Mallela and G.M. Masson, “Diagnosable Systems for Intermittent Faults,” IEEE Transactions on Computers, vol. C-27, no. 6, pp. 560–566, June 1978.

[14] S. Mallela and G.M. Masson, “Diagnosis without Repair for Hybrid Fault Situations,” IEEE Transactions on Computers, vol. C-29, no. 6, pp. 461–470, June 1980.

[15] S. Murata, H. Kurokawa, and S. Kokaji, “Self-Assembling Machine,” in Proceedings of the IEEE International Conference on Robotics and Automation, San Diego, CA, pp. 441-448, 1994.

[16] D.K. Pradhan and M.R. Samatham, “A Fault-Tolerant Communication Architecture for Distributed Systems,” IEEE Transactions on Computers, vol. 31, no. 9, pp. 863–870, Sept. 1982.

[17] F.P. Preparata, G. Metze, and R.T. Chien, “On the Connection Assignment Problem of Diagnosable Systems,” IEEE Transactions on Electronic Computers, vol. EC-16, no. 6, pp. 848–854, Dec. 1967.

[18] B. Randell, “Fault Tolerance in Decentralized Systems,” IEICE Transactions on Communications, vol. E83-B, no. 5, pp. 903–907, May 2000.

[19] RFC 2459: Internet X.509 Public Key Infrastructure – Certificate and CRL Profile, Jan. 1999.

[20] S.J. Russell and P. Norvig, Artificial Intelligence: A Modern Approach, Prentice Hall, 1995.

[21] K. Saleh and K. Al-Saqabi, “Error Detection and Diagnosis for Fault Tolerance in Distributed Systems,” Information and Software Technology, vol. 39, no. 14-15, pp. 975–983, 1998.

[22] K. Sugihara and I. Suzuki, “Distributed Motion Coordination of Multiple Mobile Robots,” in Proceedings IEEE International Symposium on Intelligence and Control, Philadelphia, PA, pp. 138–143, 1990.

[23] I. Suzuki and M. Yamashita, “Distributed Anonymous Mobile Robots: Formation of Geometric Patterns,” SIAM Journal on Computing, vol. 28, no. 4, pp. 1347–1363, 1999.

[24] K. Tomita, S. Murata, H. Kurokawa, E. Yoshida, and S. Kokaji, “Self-Assembly and Self-Repair Method for a Distributed Mechanical System,” IEEE Transactions on Robotics and Automation, vol. 15, no. 6, pp. 1035 -1045, Dec. 1999.

[25] C.L. Yang and G.M. Masson, “A New Measure for Hybrid Fault Diagnosability,” IEEE Transactions on Computers, vol. C-36, no. 3, pp. 378–383, March 1987.