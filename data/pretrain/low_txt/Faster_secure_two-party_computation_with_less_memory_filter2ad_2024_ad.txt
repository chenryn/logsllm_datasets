### Memory Consumption Analysis for Circuit Implementations

For circuits that can be divided into many small sub-circuits, such as AES or PRESENT, the memory consumption of both our implementation and FastGC is nearly identical. However, the memory efficiency advantage of our implementation becomes more pronounced with larger circuits. Specifically, compared to FastGC, our implementation reduces memory consumption by a factor of 5 for Fast Multiplication and by a factor of 8 for the Minimum function (approach c). This significant reduction is achieved by reusing sub-circuits and keeping only the working set in memory. As a result, we can evaluate the Minimum circuit, which contains almost 140 million gates, using just 21.5 MB of memory.

### Acknowledgments

The authors would like to thank René Peralta for his valuable discussions on efficient circuit constructions. The first author was supported by the Australian Research Council grant DP0984063, an Adelaide Scholarship International, and a Supplementary Scholarship from the Defence Systems Innovation Centre. The second author was supported by the German Federal Ministry of Education and Research (BMBF) within EC SPRIDE and by the Hessian LOEWE excellence initiative within CASED.

### References

- **[Bea95]** D. Beaver. "Precomputing oblivious transfer." In *Advances in Cryptology – CRYPTO’95*, volume 963 of LNCS, pages 97–109. Springer, 1995.
- **[BG11]** M. Blanton and P. Gasti. "Secure and efficient protocols for iris and fingerprint identification." In *European Symposium on Research in Computer Security (ESORICS’11)*, volume 6879 of LNCS, pages 190–209. Springer, 2011.
- **[BNP08]** A. Ben-David, N. Nisan, and B. Pinkas. "FairplayMP: a system for secure multi-party computation." In *ACM Conference on Computer and Communications Security (CCS’08)*, pages 257–266. ACM, 2008.
- **[BNSS11]** S. Bugiel, S. Nürnberger, A.-R. Sadeghi, and T. Schneider. "Twin Clouds: Secure cloud computing with low latency." In *Communications and Multimedia Security Conference (CMS’11)*, volume 7025 of LNCS, pages 32–44. Springer, 2011.
- **[BP06]** J. Boyar and R. Peralta. "Concrete multiplicative complexity of symmetric functions." In *Mathematical Foundations of Computer Science (MFCS’06)*, volume 4162 of LNCS, pages 179–189. Springer, 2006.
- **[BP10]** J. Boyar and R. Peralta. "A new combinational logic minimization technique with applications to cryptology." In *Symposium on Experimental Algorithms (SEA’10)*, volume 6049 of LNCS, pages 178–189. Springer, 2010.
- **[CHM11]** N. T. Courtois, D. Hulme, and T. Mourouzis. "Solving circuit optimisation problems in cryptography and cryptanalysis." In *2nd IMA Conference Mathematics in Defence*, 2011.
- **[CHM12]** N. T. Courtois, D. Hulme, and T. Mourouzis. "Solving circuit optimisation problems in cryptography and cryptanalysis." In *Special-purpose Hardware for Attacking Cryptographic Systems (SHARCS’12)*, pages 179–191, 2012.
- **[FIPR05]** M. J. Freedman, Y. Ishai, B. Pinkas, and O. Reingold. "Keyword search and oblivious pseudorandom functions." In *Theory of Cryptography Conference (TCC’05)*, volume 3378 of LNCS, pages 303–324. Springer, 2005.
- **[HCE11a]** Y. Huang, P. Chapman, and D. Evans. "Privacy-preserving applications on smartphones." In *USENIX Workshop on Hot Topics in Security (HotSec’11)*, 2011.
- **[HCE11b]** Y. Huang, P. Chapman, and D. Evans. "Secure computation on mobile devices, 2011." Poster at IEEE Symposium on Security and Privacy.
- **[HEK12]** Y. Huang, D. Evans, and J. Katz. "Private set intersection: Are garbled circuits better than custom protocols?" In *Network and Distributed Security Symposium (NDSS’12)*. The Internet Society, 2012.
- **[HEKM11]** Y. Huang, D. Evans, J. Katz, and L. Malka. "Faster secure two-party computation using garbled circuits." In *USENIX Security Symposium (Security’11)*, pages 539–554. USENIX, 2011.
- **[HFKV12]** A. Holzer, M. Franz, S. Katzenbeisser, and H. Veith. "Secure two-party computations in ANSI C." In *ACM Conference on Computer and Communications Security (CCS’12)*, pages 772–783. ACM, 2012.
- **[HKE12]** Y. Huang, J. Katz, and D. Evans. "Quid-pro-quo-tocols: Strengthening semi-honest protocols with dual execution." In *IEEE Symposium on Security and Privacy*. IEEE, 2012.
- **[HKS+10]** W. Henecka, S. Kögl, A.-R. Sadeghi, T. Schneider, and I. Wehrenberg. "TASTY: Tool for Automating Secure Two-partY computations." In *ACM Conference on Computer and Communications Security (CCS’10)*, pages 451–462. ACM, 2010.
- **[HMEK11]** Y. Huang, L. Malka, D. Evans, and J. Katz. "Efficient privacy-preserving biometric identification." In *Network and Distributed System Security (NDSS’11)*. The Internet Society, 2011.
- **[IKNP03]** Y. Ishai, J. Kilian, K. Nissim, and E. Petrank. "Extending oblivious transfers efficiently." In *Advances in Cryptology – CRYPTO’03*, volume 2729 of LNCS, pages 145–161. Springer, 2003.
- **[JKSS10a]** K. Järvinen, V. Kolesnikov, A.-R. Sadeghi, and T. Schneider. "Embedded SFE: Offloading server and network using hardware tokens." In *Financial Cryptography and Data Security (FC’10)*, volume 6052 of LNCS, pages 207–221. Springer, 2010.
- **[JKSS10b]** K. Järvinen, V. Kolesnikov, A.-R. Sadeghi, and T. Schneider. "Garbled circuits for leakage-resilience: Hardware implementation and evaluation of one-time programs." In *Cryptographic Hardware and Embedded Systems (CHES’10)*, volume 6225 of LNCS, pages 383–397. Springer, 2010.
- **[JL09]** S. Jarecki and X. Liu. "Efficient oblivious pseudorandom function with applications to adaptive OT and secure computation of set intersection." In *Theory of Cryptography Conference (TCC’09)*, volume 5444 of LNCS, pages 577–594. Springer, 2009.
- **[Ker11]** F. Kerschbaum. "Automatically optimizing secure computation." In *ACM Computer and Communications Security (CCS’11)*, pages 703–714. ACM, 2011.
- **[KO62]** A. A. Karatsuba and Y. Ofman. "Multiplication of many-digital numbers by automatic computers." SSSR Academy of Sciences, 145:293–294, 1962.
- **[KS08]** V. Kolesnikov and T. Schneider. "Improved garbled circuit: Free XOR gates and applications." In *International Colloquium on Automata, Languages and Programming (ICALP’08)*, volume 5126 of LNCS, pages 486–498. Springer, 2008.
- **[KSS09]** V. Kolesnikov, A.-R. Sadeghi, and T. Schneider. "Improved garbled circuit building blocks and applications to auctions and computing minima." In *Cryptology and Network Security (CANS’09)*, LNCS. Springer, 2009.
- **[KSS12]** B. Kreuter, A. Shelat, and C.-H. Shen. "Billion-gate secure computation with malicious adversaries." In *USENIX Security Symposium (Security’12)*. USENIX, 2012.
- **[LP09a]** Y. Lindell and B. Pinkas. "A proof of Yao’s protocol for secure two-party computation." *Journal of Cryptology*, 22(2):161–188, 2009.
- **[LP09b]** Y. Lindell and B. Pinkas. "Secure multiparty computation for privacy-preserving data mining." *Journal of Privacy and Confidentiality*, 1(1):59–98, 2009.
- **[Mal11]** L. Malka. "VMCrypt - modular software architecture for scalable secure computation." In *ACM Conference on Computer and Communications Security (CCS’11)*, pages 715–724. ACM, 2011.
- **[MLB12]** B. Mood, L. Letaw, and K. Butler. "Memory-efficient garbled circuit generation for mobile devices." In *Financial Cryptography and Data Security (FC’12)*, LNCS. Springer, 2012.
- **[MNPS04]** D. Malkhi, N. Nisan, B. Pinkas, and Y. Sella. "Fairplay — a secure two-party computation system." In *USENIX Security Symposium*, pages 287–302. USENIX, 2004.
- **[MZE12]** W. Melicher, S. Zahur, and D. Evans. "An intermediate language for garbled circuits." Poster at *IEEE Symposium on Security and Privacy*, 2012.
- **[NNOB12]** J. B. Nielsen, P. S. Nordholt, C. Orlandi, and S. S. Burra. "A new approach to practical active-secure two-party computation." In *Advances in Cryptology – CRYPTO’12*, volume 7417 of LNCS, pages 681–700. Springer, 2012.
- **[NP01]** M. Naor and B. Pinkas. "Efficient oblivious transfer protocols." In *ACM-SIAM Symposium On Discrete Algorithms (SODA’01)*, pages 448–457. Society for Industrial and Applied Mathematics, 2001.
- **[NPS99]** M. Naor, B. Pinkas, and R. Sumner. "Privacy preserving auctions and mechanism design." In *ACM Conference on Electronic Commerce*, pages 129–139. ACM, 1999.
- **[OPJM10]** M. Osadchy, B. Pinkas, A. Jarrous, and B. Moskovich. "SCiFI - a system for secure face identification." In *IEEE Symposium on Security and Privacy*, pages 239–254. IEEE, 2010.
- **[PSS09]** A. Paus, A.-R. Sadeghi, and T. Schneider. "Practical secure evaluation of semi-private functions." In *Applied Cryptography and Network Security (ACNS’09)*, volume 5536 of LNCS, pages 89–106. Springer, 2009.
- **[PSSW09]** B. Pinkas, T. Schneider, Nigel P. Smart, and Stephen C. Williams. "Secure two-party computation is practical." In *Advances in Cryptology – ASIACRYPT 2009*, volume 5912 of LNCS, pages 250–267. Springer, 2009.
- **[Sch12]** T. Schneider. *Engineering Secure Two-Party Computation Protocols: Design, Optimization, and Applications of Efficient Secure Function Evaluation*. Springer, 2012.
- **[Yao86]** A. C. Yao. "How to generate and exchange secrets." In *Foundations of Computer Science (FOCS’86)*, pages 162–167. IEEE, 1986.

### Table 4: Comparison of Memory Consumption

| Circuit              | Total Number of Gates | Gates in Memory | Working Set | FastGC [HEKM11] | Our Implementation |
|----------------------|-----------------------|-----------------|-------------|-----------------|--------------------|
| Original Hamming     | 7,163                 | 7,163           | 1,800       | 28.5 MB         | 17 MB              |
| Improved Hamming     | 5,362                 | 5,362           | 1,800       | 26 MB           | 17 MB              |
| Original AES         | 36,720                | 878             | 256         | 20.3 MB         | 16.9 MB            |
| Improved AES         | 24,720                | 803             | 256         | 20.2 MB         | 18.7 MB            |
| PRESENT              | 8,496                 | 77              | 128         | 18.9 MB         | 18.6 MB            |
| Fast Multiplication  | 57,072                | 57,072          | 1,074       | 74.4 MB         | 15 MB              |
| Minimum              | 137,999,862           | 137,999,862     | 20,000,002  | 189 MB          | 799.7 MB           |
|                      |                       |                 |             |                 | 21.5 MB (c)        |

This table provides a detailed comparison of the memory consumption for different circuit implementations, highlighting the significant memory savings achieved by our approach, especially for large circuits.