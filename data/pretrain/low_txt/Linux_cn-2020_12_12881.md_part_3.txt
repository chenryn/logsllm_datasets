**00:19:07 - Saron Yitbarek**：
根据Elizabeth的说法，在这14年间，Perl 6的开发经历了多次尝试。这些尝试漫长而艰难，开发者们感到疲惫不堪，项目也一度陷入僵局。直到2015年圣诞节，Perl 6终于问世。然而此时，技术领域已经发生了许多新的变化。值得注意的是，Perl 6并没有被设计成一种革命性的新语言来对抗Python，而是对原版进行了深思熟虑的重新设计。

**00:19:43 - Elizabeth Mattijsen**：
Larry Wall在他的“State of the Onion”演讲中使用了一个非常恰当的比喻：他将Perl 5比作《霍比特人》，而将Perl 6比作《指环王》。如果你仔细观察这两部作品，你会发现它们本质上讲述的是同一个故事。但《霍比特人》规模更小，情节上也有一些漏洞，并没有《指环王》那样宏大的背景设定。我认为这个比喻很好地描述了Perl 5与Perl 6之间的关系。它们基于相同的核心思想和环境，只是后者是经过重新构思的版本。
 
**00:20:26 - Saron Yitbarek**：
Elizabeth Mattijsen是Perl 6的核心贡献者之一。

**00:20:32**：
如今，Perl可能已不在最常用的20种编程语言之列。由于外部竞争激烈以及内部进展缓慢，它尚未赢得大多数新开发者的青睐。但这引出了一个重要的问题：我们是否应该仅仅依据一种语言的流行度来评判其价值？或者说，还有其他更重要的评判标准？当曾经的明星语言逐渐淡出主流视野时，这意味着什么呢？

**00:21:06**：
在世纪之交互联网泡沫破裂期间，Perl的地位开始下滑。当时，Larry Wall发表了一番颇有见地的观点。他认为尽管Perl可能永远不会成为世界上最流行的编程语言，但它可以在特定领域内保持领先地位。正如他所说：“SUV永远无法与赛车竞争。”

**00:21:38 - Saron Yitbarek**：
我想进一步探讨这一观点，深入了解在某一细分市场占据主导地位对于一种编程语言究竟意味着什么。

**00:21:48 - John Siracusa**：
大家好，我是John Siracusa，一名程序员兼播客主持人。

**00:21:53 - Saron Yitbarek**：
John实际上主持了三个播客节目：《Accidental Tech Podcast》、《Reconcilable Differences》和《Robot or Not?》。刚才我们讨论了Perl在当今编程领域的地位。

**00:22:06**：
那么，Perl在当今世界中的排名如何？它仍然是最佳的计算机语言吗？

**00:22:10 - John Siracusa**：
Perl 6拥有一些其他语言所不具备的独特特性，我认为这些特性值得其他语言借鉴。例如，它的语法提供了一种处理常见任务的有效方式，相较于现有的工具，使用这种方法解决问题更加直观、简洁且高效。

**00:22:31**：
此外，Perl 6的对象系统有许多看似微不足道但实际上非常有用的特性，我预计未来会有更多语言采纳这些特性，就像很多语言从Perl 5那里汲取灵感一样。因此，我认为Perl 6在很多方面都表现出色。遗憾的是，很少有人有机会真正体验到这一点。

**00:22:52 - Saron Yitbarek**：
你认为Perl 6社区需要做些什么才能吸引更多人参与进来？

**00:23:00 - John Siracusa**：
这有点像Perl 6的故事，一直在寻找那个完美的实现。这是所谓的“第二系统综合症”的一部分……人们试图解决所有的问题，其中之一就是运行时环境。传统的Perl 5和早期版本是基于大量C代码构建的，这使得理解起来相当困难。

**00:23:12 - John Siracusa**：
而Perl 6的想法则是摒弃这种做法，不再依赖庞大的C代码库，转而采用虚拟机（VM）方案。虽然当时有很多关于如何实现这一目标的好主意，但最终只得到了几个性能平平的虚拟机实现版本，而且彼此之间还存在竞争，没有一个能够达到实际应用所需的性能、稳定性和功能水平。

**00:24:01 - Saron Yitbarek**：
那么，现在Perl到底处于什么状态呢？

**00:24:06 - John Siracusa**：
Perl 5似乎正在走下坡路，因为同时代的其他语言已经吸收了许多Perl的优点并获得了更多的支持。然而，由于它曾长期占据主导地位，仍有大量的Perl 5代码在支撑着一些大型重要网站的运行，这些代码仍需维护和扩展。

**00:24:29**：
这种情况不会很快改变。看看COBOL就知道了，即使到现在仍然有公司在招聘COBOL程序员进行系统维护工作。

**00:24:35 - Saron Yitbarek**：
确实如此。

**00:24:36 - John Siracusa**：
你问到Perl是否会成为一门垂死的语言。我提到了COBOL，听起来似乎并不乐观。至于Perl 6能否成为主流语言，可能性不大。目前人们对其他语言的关注度非常高，如果Perl 6至今还没有引起足够的关注，我不确定还需要发生什么才能让它变得流行起来。

**00:24:54 - Saron Yitbarek**：
那么，你对Perl有什么期望？无论是Perl 5还是Perl 6，你希望看到哪些改进和发展方向？

**00:25:04 - John Siracusa**：
我希望人们不要忽视Perl 5的价值，因为在某些场景下，它依然是解决问题的最佳选择之一。特别是在处理胶水型任务时，编写正确的Perl脚本往往比写shell脚本来得更容易。

**00:25:40 - Saron Yitbarek**：
我认为Perl可能不再是初学者的最佳入门语言，但对于经验丰富的多语言开发者来说，它仍然是一个不可或缺的小工具箱里的利器，能够在特定情况下大显身手。

**00:25:58 - John Siracusa**：
有时我会为Perl 6感到遗憾，担心它可能不会有太大进展；但有时我又会想，“好吧，这是一个不错的小社区”。每个社区都不必追求统治整个行业或成为全球最受欢迎的语言。也许Perl 6可以就这样一直发展下去，这就是开源精神的魅力所在——没有人能阻止你继续改进和完善它。

**00:26:27 - Saron Yitbarek**：
John Siracusa是一名程序员及多个科技播客节目的联合主持人。

**00:26:34**：
每种语言都有其生命周期。随着新技术的出现，像Perl这样的老面孔可能会逐渐退居幕后，但这并不一定是一件坏事。我们的编程语言应当随着需求的变化而调整自己的定位。回顾互联网发展的早期历史，Perl曾扮演过至关重要的角色，它以各种形式与我们紧密相连。只要回顾一下这段历程，就能感受到它的存在意义。

**00:27:11**：
在下一集《代码英雄》中，我们将探讨：是什么让一种语言成为标准？在云计算时代，新的标准又将如何形成？

**00:27:26**：
《代码英雄》是由红帽公司制作的一档原创播客节目。如果您想深入了解Perl的故事或其他我们在第三季中讨论过的编程语言，请访问[redhat.com/commandlineheroes](file:///Users/xingyuwang/develop/LCRH-wxy/translated/redhat.com/commandlineheroes)。我们的网站上有许多精彩内容等待您的探索。

**00:27:49**：
我是Saron Yitbarek。让我们相约下期节目之前，继续愉快地编码吧！

> **什么是LCTT SIG 和 LCTT LCRH SIG**
>
> LCTT SIG 是 Linux 中国特别兴趣小组 (Special Interest Group) 的简称，专注于特定领域或主题的翻译工作。成员遵循LCTT流程和规范参与翻译，并获得相应奖励。LCRH SIG 是由Linux中国与红帽公司合作发起的一个SIG，当前主要任务是将《代码英雄》系列播客的剧本汉化。已有数十位贡献者加入此项目。敬请期待每周三、周五发布的精心翻译、校对后的文章。
>
> 欢迎[加入 LCRH SIG](/article-12436-1.html)，共同参与贡献，并领取红帽公司与我们联合颁发的专属贡献者证书。
>
> 本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出
>
> via: [Red Hat](https://www.redhat.com/en/command-line-heroes)
>
> 作者：[Red Hat](https://www.redhat.com/en/command-line-heroes)
>
> 选题：[bestony](https://github.com/bestony)
>
> 译者：[Mikedkmilk](https://github.com/Mikedkmilk)
>
> 校对：[Northurland](https://github.com/Northurland), [wxy](https://github.com/wxy)