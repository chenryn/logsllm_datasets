# Copyright (c) 1993 Michael Haardt (PI:EMAIL), Fri Apr 2 11:32:09 MET DST 1993
# and Andries Brouwer (PI:EMAIL), Fri Feb 14 21:47:50 1997.
#
# This is free documentation; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# The GNU General Public License's references to "object code"
# and "executables" are to be interpreted as the output of any
# document formatting or typesetting system, including
# intermediate and printed output.
#
# This manual is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this manual; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
# USA.
# Chinese Version Copyright mhss, www.linuxforum.net, 2000
#
# Modified Sun Jul 25 10:45:30 1993 by Rik Faith (PI:EMAIL)
# Modified Sun Jul 21 21:25:26 1996 by Andries Brouwer (PI:EMAIL)
# Modified Mon Oct 21 17:47:19 1996 by Eric S. Raymond (PI:EMAIL)
# Modified Wed Aug 27 20:28:58 1997 by Nicolás Lichtmaier
# Modified Mon Sep 21 00:00:26 1998 by Andries Brouwer (PI:EMAIL)

.TH ENVIRON 7 1998-09-21 "Linux Programmer's Manual"

.SH NAME
environ \- 用户环境变量

.SH SYNOPSIS
.ad l
.nf 
extern char **environ;
.br
.fi
.ad b

.SH DESCRIPTION
`environ` 变量指向一个字符串数组，称为“环境”（此变量必须在用户程序中声明，但在使用 libc4 或 libc5 以及定义了 `_GNU_SOURCE` 的 glibc 情况下，它是在头文件 `unistd.h` 中声明的）。对于一个进程，这个字符串数组通过开始进程的 `exec(3)` 调用来获取。这些字符串通常采用 `name=value` 格式。常见的例子包括：

.TP
.B USER
登录用户名（某些从 BSD 派生的程序使用）。

.TP
.B LOGNAME
登录用户名（某些从 System-V 派生的程序使用）。

.TP
.B HOME
用户的主目录，由 `login(1)` 根据 `/etc/passwd` 设置。

.TP
.B LANG
当未被 `LC_ALL` 或更具体的环境变量覆盖时，用于指定区域设置的语言名称。

.TP
.B PATH
预先设定的目录前缀序列，`sh(1)` 和许多其他程序可借此查找路径名不完全的文件。前缀由冒号 `:` 分隔。（类似地，一些 shell 使用 `CDPATH` 查找位于不同目录的命令，或使用 `MANPATH` 查找手册页等。）

.TP
.B PWD
当前工作目录。由一些 shell 设置。

.TP
.B SHELL
用户的登录 shell 的文件名。

.TP
.B TERM
用于准备输出的终端类型。

.TP
.B PAGER
用户指定的文本文件查看工具。

.TP
.B EDITOR/VISUAL
用户指定的文本编辑器。

.PP
更多的环境变量可以通过 `sh(1)` 中的 `export` 命令或 `csh(1)` 中的 `setenv` 命令设置。参数也可以在执行 `exec(2)` 时放置在环境中。C 程序可以使用 `getenv(3)`、`putenv(3)`、`setenv(3)` 和 `unsetenv(3)` 函数来操作自身的环境。

注意，许多程序和库例程的行为受特定环境变量的存在和值的影响。例如：

.LP
`LANG`、`LANGUAGE`、`NLSPATH`、`LOCPATH`、`LC_ALL`、`LC_MESSAGES` 等变量影响区域处理。

.LP
`TMPDIR` 影响 `tmpnam(3)` 生成的路径名前缀以及其他一些例程，如 `sort(1)` 和其他程序使用的临时文件目录。

.LP
`LD_LIBRARY_PATH`、`LD_PRELOAD` 及其他 `LD_*` 变量影响动态链接器/加载器的行为。

.LP
`POSIXLY_CORRECT` 使某些程序和库例程遵循 POSIX 规定。

.LP
`MALLOC_*` 变量影响 `malloc(3)` 的行为。

.LP
`HOSTALIASES` 变量给出包含 `gethostbyname(3)` 使用的别名的文件名。

.LP
`TZ` 和 `TZDIR` 提供时区信息。

.LP
`TERMCAP` 给出给定终端的窗口大小或包含此类信息的文件名。

等等，还有很多。

这里存在明显的安全风险。不止一个系统命令曾因用户设置了非常规的 `IFS` 或 `LD_LIBRARY_PATH` 变量而受到攻击。

.SH SEE ALSO
.BR login(1),
.BR sh(1),
.BR bash(1),
.BR csh(1),
.BR tcsh(1),
.BR execve(2),
.BR exec(3), 
.BR getenv(3),
.BR putenv(3),
.BR setenv(3),
.BR unsetenv(3).

.SH "[中文版维护人]"
.B mhss

.SH "[中文版最新更新]"
.B 2000/11/26

.SH "《中国linux论坛man手册页翻译计划》:"
.BI http://cmpp.linuxforum.net