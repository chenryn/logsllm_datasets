### Load-Balanced Elasticity and State Migration in Virtual Middleboxes

The Split/Merge technique achieves load-balanced elasticity of virtual middleboxes by distributing the internal states of network functions (NFs) among multiple virtual middlebox replicas and re-routing traffic. However, both Pico Replication and Split/Merge fail to ensure loss-free state migration during NF state transitions. OpenNF, on the other hand, provides fine-grained control over the transfer of internal NF states from one instance to another, enabling loss-free and order-preserving state migration. While these control systems aim to support a wide range of virtualized network functions, semantic consistency, particularly for virtual firewalls, remains an unsolved challenge. Additionally, existing control systems do not address the issues of correct flow updates or optimal scaling. Most, including OpenNF, use centralized buffers at the controller to buffer in-flight traffic, which consumes valuable bandwidth between the controller and virtualized functions and lacks an effective mechanism to prevent buffer overflow. In contrast, VFW Controller is specifically designed to tackle the challenges of virtual firewall scaling, focusing on semantic consistency, correct flow updates, buffer overflow avoidance, and optimal scaling.

### NFV and SDN in DDoS Defense

Network Function Virtualization (NFV) and Software-Defined Networking (SDN) have been recently employed to overcome the inflexibility and inelasticity limitations of hardware-based DDoS defense appliances. For example, Fayaz et al. [25] introduced Bohatei, a flexible and elastic virtual DDoS defense system. Our work, however, addresses the unique challenges posed by hardware-based firewalls, leveraging the features provided by NFV and SDN.

### SDN Firewalls and Policy Updates

Hu et al. [30] proposed FlowGuard, a framework for building SDN firewalls to protect OpenFlow-based networks. FlowGuard addresses the challenges in designing SDN firewall applications. In contrast, our paper investigates solutions for the safe and efficient management of virtual firewalls within the context of both NFV and SDN. Zhang et al. [50] highlighted that careless policy updates can lead to security violations and presented safe and efficient algorithms for firewall policy updates. However, their algorithms are limited to single firewalls, whereas the rule migration mechanism in VFW Controller coordinates firewall rules across multiple firewalls.

### Conclusion and Future Work

Hardware-based firewalls are constrained by their fixed capacity and deployment locations. We observed that NFV and SDN offer opportunities to address these limitations by implementing firewall functions as virtual firewalls. In this paper, we propose VFW Controller, a virtual firewall controller that enables safe, efficient, and optimal virtual firewall scaling. To demonstrate the feasibility of our approach, we implemented the core components of VFW Controller on ClickOS. In the future, we plan to implement VFW Controller on other popular open-source NFV platforms such as OPNFV [7] and CORD [1]. We also intend to generalize the buffer cost analysis and optimal scaling approaches introduced in this paper and integrate them with other existing NF control systems, such as OpenNF. Furthermore, we will explore solutions for specific challenges in the elastic scaling of other network security functions, such as addressing data and control dependencies in virtual intrusion detection systems [21].

### Acknowledgment

This work was partially supported by grants from the National Science Foundation (NSF-ACI-1642143, NSF-ACI-1642031, NSF-IIS-1527421, and NSF-CNS-1537924).

### References

[1] Central Office Re-architected as a Datacenter (CORD). http://opencord.org/.

[2] Check Point virtual appliance for AWS. https://aws.amazon.com/marketplace/pp/B00CWNBJOY.

[3] CloudLab. http://www.cloudlab.us/.

[4] Header Space Library (Hassel). http://stanford.edu/∼kazemian/hassel.tar.gz.

[5] LBNL/ICSI Enterprise Tracing Project. http://www.icir.org/enterprise-tracing/.

[6] Network Function Virtualisation - Introductory White Paper. https://portal.etsi.org/nfv/nfv_white_paper.pdf.

[7] OPENFV. https://www.opnfv.org/.

[8] Project Floodlight. http://www.projectfloodlight.org/projects/.

[9] Scalable Firewall Services with Virtual Systems. https://www.paloaltonetworks.com/products/features/virtual-systems.html.

[10] Xen Toolstack. http://wiki.xen.org/wiki/XL.

[11] Overview of virtual firewalls on VBLOCKTM infrastructure platforms. http://www.vce.com/asset/documents/virtual-firewall-whitepaper.pdf, 2012.

[12] AT&T Vision Alignment Challenge Technology Survey. http://www.att.com/Common/about_us/pdf/AT&TDomain2.0VisionWhitePaper.pdf, 2013.

[13] How SDN enabled innovations will impact AT&T’s plans to transform its infrastructure. https://www.youtube.com/watch?v=tLshR-BkIas, 2014.

[14] http://www.prweb.com/releases/opennetsummit/20150217/prweb12592239.htm, 2015.

[15] OpenFlow Switch Specification Version 1.5.1. https://www.opennetworking.org/images/stories/downloads/sdn-resources/onf-specifications/openflow/openflow-switch-v1.5.1.pdf, 2015.

[16] The CAIDA UCSD Anonymized Internet Traces 2016-0406. http://www.caida.org/data/passive/passive_2016_dataset.xml, 2016.

[17] T. Benson, A. Akella, and D. A. Maltz. Network traffic characteristics of data centers in the wild. In Proceedings of the 10th ACM SIGCOMM conference on Internet measurement, pages 267–280. ACM, 2010.

[18] T. Benson, A. Anand, A. Akella, and M. Zhang. Understanding data center traffic characteristics. In Proceeding of SIGCOMM Workshop on Research on Enterprise Networking, Barcelona, Spain, 2009.

[19] P. Bernier. Google implements NFV, SDN as part of its Andromeda Effort. http://www.nfvzone.com/topics/nfv/articles/376827-google-implements-nfv-sdn-as-part-its-andromeda.htm, 2014.

[20] P. Busschbach. Network functions virtualization: challenges and solutions. http://www.tmcnet.com/tmc/whitepapers/documents/whitepapers/2013/9377-network-functions-virtualization-challenges-solutions.pdf, 2013.

[21] L. D. Carli, R. Sommer, and S. Jha. Beyond pattern matching: A concurrency model for stateful deep packet inspection. In Proceeding of the 2014 ACM SIGSAC Conference on Computer and Communications Security, Scottsdale, AZ, 2014.

[22] M. Chapel. Firewall rules are meant to be managed, not broken. http://www.biztechmagazine.com/article/2012/08/firewall-rule-management-key-network-security, 2012.

[23] A. R. Curtis, J. C. Mogul, J. Tourrilhes, P. Yalagandula, P. Sharma, and S. Banerjee. DevoFlow: scaling flow management for high-performance networks. In ACM SIGCOMM Computer Communication Review, volume 41, pages 254–265. ACM, 2011.

[24] Q. Duan and E. S. Al-Shaer. Traffic-aware dynamic firewall policy management: techniques and applications. IEEE Communications Magazine, 51:73–79, 2013.

[25] S. Fayaz, Y. Tobioka, and V. Sekar. Bohatei: flexible and elastic DDoS defense. In Proceedings of the 24th USENIX Conference on Security Symposium, 2015.

[26] O. N. Foundation. OpenFlow-enabled SDN and network functions virtualisation. https://www.opennetworking.org/images/stories/downloads/sdn-resources/solution-briefs/sb-sdn-nvf-solution.pdf, 2014.

[27] A. Gember-Jacobson and A. Akella. Improving the safety, scalability, and efficiency of network function state transfers. In ACM SIGCOMM Workshop on Hot Topics in Middleboxes and Network Function Virtualization, 2015.

[28] A. Gember-Jacobson, R. Viswanathan, C. Prakash, R. Grandl, J. Khalid, S. Das, and A. Akella. OpenNF: Enabling innovation in network function control. In Proceedings of the 2014 ACM Conference on SIGCOMM, pages 163–174, 2014.

[29] H. Hu, G.-J. Ahn, and K. Kulkarni. Detecting and Resolving Firewall Policy Anomalies. IEEE Transactions on Dependable & Secure Computing, 9(3):318–331, 2012.

[30] H. Hu, W. Han, G.-J. Ahn, and Z. Zhao. FlowGuard: building robust firewalls for software-defined networks. In Proceedings of the 3rd ACM SIGCOMM workshop on Hot Topics in Software Defined Networking (HotSDN’14), pages 97–102. ACM, 2014.

[31] P. Kazemian, G. Varghese, and N. McKeown. Header Space Analysis: Static Checking For Networks. In Proceedings of the 9th USENIX conference on Networked Systems Design and Implementation, 2012.

[32] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey. VeriFlow: Verifying network-wide invariants in real time. In Proceedings of the 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI’13), pages 15–27, 2013.

[33] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F. Kaashoek. The Click modular router. ACM Trans. Comput. Syst., 18(3):263–297, 2000.

[34] D. Kreutz, F. M. V. Ramos, P. Verissimo, C. E. Rothenberg, S. Azodolmolky, and S. Uhlig. Software-defined networking: a comprehensive survey. Proceedings of the IEEE, 13:14–76, 2015.

[35] A. X. Liu and M. G. Gouda. Complete Redundancy Removal for Packet Classifiers in TCAMs. IEEE Transactions on Parallel & Distributed Systems, 21(4):424–437, 2010.

[36] A. X. Liu, E. Torng, and C. R. Meiners. Firewall Compressor: An Algorithm for Minimizing Firewall Policies. In Proceedings of the 27th Conference on Computer Communications (INFOCOM’08), pages 176–180, 2008.

[37] R. Maddipudi. vCloud Networking and Security 5.1 App Firewall. http://blogs.vmware.com/vsphere/2013/04/vcloud-networking-and-security-5-1-app-firewall-part-1.html, 2013.

[38] J. Martins, M. Ahmed, C. Raiciu, V. Olteanu, M. Honda, R. Bifulco, and F. Huici. ClickOS and the art of network function virtualization. In Proceedings of the 11th USENIX Conference on Networked Systems Design and Implementation (NSDI’15), pages 459–473, 2014.

[39] N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, S. Shenker, and J. Turner. OpenFlow: enabling innovation in campus networks. ACM SIGCOMM Computer Communication Review, 38(2):69–74, 2010.

[40] G. Misherghi, L. Yuan, Z. Su, C.-N. Chuah, and H. Chen. A general framework for benchmarking firewall optimization techniques. IEEE Transactions on Network & Service Management, 5(4):227–238, 2008.

[41] A. Nunes, M. Mendonca, X. Nguyen, and K. Obraczka. A survey of software-defined networking: past, present, and future of programmable networks. IEEE Communications Surveys & Tutorials, 16(3):1617–1634, 2014.

[42] R. Ozdag. The day Amazon ended the hardware-defined network. http://www.cyaninc.com/blog/2013/11/26/the-day-amazon-ended-the-hardware-defined-network#.VbehsxNViko, 2013.

[43] S. Rajagopalan, D. Williams, and H. Jamjoom. Pico Replication: A high availability framework for middleboxes. In Proceedings of the 4th annual Symposium on Cloud Computing, page 1. ACM, 2013.

[44] S. Rajagopalan, D. Williams, H. Jamjoom, and A. Warfield. Split/Merge: System support for elastic execution in virtual middleboxes. In Proceedings of the 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI’13), pages 227–240, 2013.

[45] S. K. N. Rao. SDN and its Use-Cases-NV and NFV. http://www.nectechnologies.in/en_TI/pdf/NTI_whitepaper_SDN_NFV.pdf, 2014.

[46] I. Survey indicates NFV/SDN deployments in 2015. http://www.telecomtv.com/articles/sdn/survey-indicates-nfv-sdn-deployments-in-2015-11062/, 2015.

[47] J. Sherry, S. Hasan, C. Scott, A. Krishnamurthy, S. Ratnasamy, and V. Sekar. Making middleboxes someone else’s problem: network processing as a cloud service. ACM SIGCOMM Computer Communication Review, 42(4):13–24, 2012.

[48] J. Sherry and S. Ratnasamy. A survey of enterprise middlebox deployment. In Technical Report UCB/EECS-2012-24. EECS Department, University of California, Berkeley, 2012.

[49] L. Yuan, H. Chen, J. Mai, C.-N. Chuah, Z. Su, and P. Mohapatra. Fireman: A toolkit for firewall modeling and analysis. In 2006 IEEE Symposium on Security and Privacy (S&P’06), pages 15–pp. IEEE, 2006.

[50] C. C. Zhang, M. Winslett, and C. A. Gunter. On the safety and efficiency of firewall policy deployment. In 2007 IEEE Symposium on Security and Privacy (S&P’07), pages 33–50. IEEE, 2007.