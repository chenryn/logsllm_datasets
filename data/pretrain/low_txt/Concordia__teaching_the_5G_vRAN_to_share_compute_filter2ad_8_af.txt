以下是优化后的参考文献列表，使其更加清晰、连贯和专业：

1. Jayaraman, M., and Qureshi, N. M. F. (2019). An optimal multitier resource allocation of cloud RAN in 5G using machine learning. *Transactions on Emerging Telecommunications Technologies* 30(8), e3627.

2. Bastug, E., Bennis, M., and Debbah, M. (2014). Living on the edge: The role of proactive caching in 5G wireless networks. *IEEE Communications Magazine* 52(8), 82–89.

3. Bega, D., Banchs, A., Gramaglia, M., Costa-Pérez, X., and Rost, P. (2018). CARES: Computation-aware scheduling in virtualized radio access networks. *IEEE Transactions on Wireless Communications* 17(12), 7993–8006.

4. Belay, A., Prekas, G., Klimovic, A., Grossman, S., Kozyrakis, C., and Bugnion, E. (2014). {IX}: A protected dataplane operating system for high throughput and low latency. In *11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 14)*, pp. 49–65.

5. Benmimoune, M., Driouch, E., Ajib, W., and Massicotte, D. (2015). Joint transmit antenna selection and user scheduling for massive MIMO systems. In *2015 IEEE Wireless Communications and Networking Conference (WCNC)*, pp. 381–386.

6. Bhaumik, S., Chandrabose, S. P., Jataprolu, M. K., Kumar, G., Muralidhar, A., Polakos, P., Srinivasan, V., and Woo, T. (2012). CloudIQ: A framework for processing base stations in a data center. In *Proceedings of the 18th Annual International Conference on Mobile Computing and Networking*, pp. 125–136.

7. Bui, N., and Widmer, J. (2016). OWL: A reliable online watcher for LTE control channel measurements. In *Proceedings of the 5th Workshop on All Things Cellular: Operations, Applications and Challenges*, pp. 25–30.

8. Burns, A., and Davis, R. I. (2017). A survey of research into mixed criticality systems. *ACM Computing Surveys (CSUR)* 50(6), 1–37.

9. Cazorla, F. J., Kosmidis, L., Mezzetti, E., Hernandez, C., Abella, J., and Vardanega, T. (2019). Probabilistic worst-case timing analysis: Taxonomy and comprehensive survey. *ACM Computing Surveys (CSUR)* 52(1), 1–35.

10. SDX Central. (2020). Rakuten Mobile Delivers Its Virtualized Reality. Retrieved June 21, 2021, from https://www.sdxcentral.com/articles/news/rakuten-mobile-delivers-its-virtualized-reality/2020/04/

11. Checko, A., Christiansen, H. L., Yan, Y., Scolari, L., Kardaras, G., Berger, M. S., and Dittmann, L. (2014). Cloud RAN for mobile networks: A technology overview. *IEEE Communications Surveys & Tutorials* 17(1), 405–426.

12. Intel Corporation. (2020). OpenNESS Radio Access Network configuration. Retrieved June 2, 2020, from https://github.com/open-ness/specs/blob/master/doc/ran/opennessran.md

13. Costa, M. (1983). Writing on dirty paper (corresp.). *IEEE Transactions on Information Theory* 29(3), 439–441.

14. Cucu-Grosjean, L., Santinelli, L., Houston, M., Lo, C., Vardanega, T., Kosmidis, L., Abella, J., Mezzetti, E., Quiñones, E., and Cazorla, F. J. (2012). Measurement-based probabilistic timing analysis for multi-path programs. In *2012 24th Euromicro Conference on Real-Time Systems*, pp. 91–101.

15. Davis, R. I., and Burns, A. (2011). A survey of hard real-time scheduling for multiprocessor systems. *ACM Computing Surveys (CSUR)* 43(4), 1–44.

16. Carvalho de Melo, A. (2010). The new Linux ‘perf’ tools. In *Slides from Linux Kongress, Vol. 18*, pp. 1–42.

17. Delimitrou, C., and Kozyrakis, C. (2013). QoS-aware scheduling in heterogeneous datacenters with paragon. *ACM Transactions on Computer Systems (TOCS)* 31(4), 1–34.

18. Delimitrou, C., and Kozyrakis, C. (2014). Quasar: Resource-efficient and QoS-aware cluster management. *ACM SIGPLAN Notices* 49(4), 127–144.

19. Ding, J., Doost-Mohammady, R., Kalia, A., and Zhong, L. (2020). Agora: Real-time massive MIMO baseband processing in software. In *Proceedings of the 16th International Conference on Emerging Networking Experiments and Technologies*, pp. 232–244.

20. Ericsson. (2016). How cloud and networks achieve 99.999% availability in different ways. Retrieved January 21, 2021, from https://www.ericsson.com/en/blog/2016/9/how-cloud-and-networks-achieve-99.999-availability-in-different-ways

21. Ericsson. (2019). Critical capabilities for private 5G networks. Retrieved June 4, 2021, from https://www.ericsson.com/en/reports-and-papers/white-papers/private-5g-networks

22. Ericsson. (2020). 5G private network operations: What do you need to know? Retrieved June 4, 2021, from https://www.ericsson.com/en/blog/2020/7/5g-private-network-operations

23. ETSI TR. (2018). 138 913 V15.0.0 (2018-09) 5G, "Study on scenarios and requirements for next generation access technologies (3GPP TR 38.913 version 15.0.0 Release 15)".

24. Falkenberg, R., and Wietfeld, C. (2019). FALCON: An accurate real-time monitor for client-based mobile network data analytics. In *2019 IEEE Global Communications Conference (GLOBECOM)*, Waikoloa, Hawaii, USA. DOI: 10.1109/GLOBECOM38437.2019.9014096. arXiv:1907.10110.

25. Fierce Wireless. (2020). Dish names Intel as vRAN network supplier. Retrieved June 4, 2021, from https://www.fiercewireless.com/operators/dish-names-intel-as-vran-network-supplier

26. Fish, A., Gurevich, S., Hadani, R., Sayeed, A. M., and Schwartz, O. (2013). Delay-Doppler channel estimation in almost linear complexity. *IEEE Transactions on Information Theory* 59(11), 7632–7644.

27. Foukas, X., Marina, M. K., and Kontovasilis, K. (2017). Orion: RAN slicing for a flexible and cost-effective multi-service mobile network architecture. In *Proceedings of the 23rd Annual International Conference on Mobile Computing and Networking*, pp. 127–140.

28. Foukas, X., Marina, M. K., and Kontovasilis, K. (2019). Iris: Deep reinforcement learning driven shared spectrum access architecture for indoor neutral-host small cells. *IEEE Journal on Selected Areas in Communications* 37(8), 1820–1837.

29. Foukas, X., Nikaein, N., Kassem, M. M., Marina, M. K., and Kontovasilis, K. (2016). FlexRAN: A flexible and programmable platform for software-defined radio access networks. In *Proceedings of the 12th International Conference on Emerging Networking Experiments and Technologies*, pp. 427–441.

30. Garcia-Saavedra, A., Costa-Perez, X., Leith, D. J., and Iosifidis, G. (2018). FluidRAN: Optimized vRAN/MEC orchestration. In *IEEE INFOCOM 2018 - IEEE Conference on Computer Communications*, pp. 2366–2374.

31. Garikipati, K. C., Fawaz, K., and Shin, K. G. (2016). RT-OPEX: Flexible scheduling for cloud-RAN processing. In *Proceedings of the 12th International Conference on Emerging Networking Experiments and Technologies*, pp. 267–280.

32. Govindan, S., Liu, J., Kansal, A., and Sivasubramaniam, A. (2011). Cuanta: Quantifying effects of shared on-chip resource interference for consolidated virtual machines. In *Proceedings of the 2nd ACM Symposium on Cloud Computing*, pp. 1–14.

33. GSMA. (2019). Vodafone starts trials of OpenRAN in Europe and Africa. Retrieved July 14, 2020, from https://www.gsma.com/futurenetworks/digest/vodafone-starts-trials-of-openran-in-europe-and-africa

34. Han, W. T., and Knopp, R. (2018). OpenAirInterface: A pipeline structure for 5G. In *2018 IEEE 23rd International Conference on Digital Signal Processing (DSP)*, pp. 1–4.

35. Hanzo, L., Liew, T. H., and Yeap, B. L. (2002). Turbo coding, turbo equalisation, and space-time coding. Wiley Online Library.

36. He, K., Zhang, X., Ren, S., and Sun, J. (2016). Deep residual learning for image recognition. In *Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition*, pp. 770–778.

37. He, K., Zhang, X., Ren, S., and Sun, J. (2016). Identity mappings in deep residual networks. In *European Conference on Computer Vision*. Springer, pp. 630–645.

38. China Mobile Research Institute. (2011). C-RAN: The road towards green RAN.

39. Intel. (2018). An Overview of FlexRAN Software Wireless Access Solutions. Retrieved July 15, 2020, from https://software.intel.com/content/www/us/en/develop/videos/an-overview-of-flexran-sw-wireless-access-solutions.html

40. Intel. (2020). FlexRAN. Retrieved September 3, 2020, from https://github.com/intel/FlexRAN

41. Jiang, X., Guan, N., Liu, D., and Liu, W. (2019). Analyzing GEDF scheduling for parallel real-time tasks with arbitrary deadlines. In *2019 Design, Automation & Test in Europe Conference & Exhibition (DATE)*, pp. 1537–1542.

42. Kaffes, K., Chong, T., Humphries, J. T., Belay, A., Mazières, D., and Kozyrakis, C. (2019). Shinjuku: Preemptive scheduling for μsecond-scale tail latency. In *16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19)*, pp. 345–360.

43. Kaltenberger, F., Silva, A. P., Gosain, A., Wang, L., and Nguyen, T. T. (2020). OpenAirInterface: Democratizing innovation in the 5G era. *Computer Networks* 172, 107284.

44. Kumar, S., Hamed, E., Katabi, D., and Li, L. E. (2014). LTE radio analytics made easy and accessible. *ACM SIGCOMM Computer Communication Review* 44(4), 211–222.

45. Altice Labs. (2021). Towards autonomous private 5G networks. White Paper.

46. Lai, Z., Hu, Y. C., Cui, Y., Sun, L., Dai, N., and Lee, H. S. (2019). Furion: Engineering high-quality immersive virtual reality on today’s mobile devices. *IEEE Transactions on Mobile Computing* 19(7), 1586–1602.

47. Leverich, J., and Kozyrakis, C. (2014). Reconciling high server utilization and sub-millisecond quality-of-service. In *Proceedings of the Ninth European Conference on Computer Systems*, pp. 1–14.

48. Lewis, R. J. (2000). An introduction to classification and regression tree (CART) analysis. In *Annual Meeting of the Society for Academic Emergency Medicine in San Francisco, California, Vol. 14*.

49. Li, H., Ota, K., and Dong, M. (2018). Learning IoT in edge: Deep learning for the Internet of Things with edge computing. *IEEE Network* 32(1), 96–101.

50. Li, J., Agrawal, K., Lu, C., and Gill, C. (2013). Outstanding paper award: Analysis of global EDF for parallel tasks. In *2013 25th Euromicro Conference on Real-Time Systems*, pp. 3–13.

51. Li, J., Chen, J. J., Agrawal, K., Lu, C., Gill, C., and Saifullah, A. (2014). Analysis of federated and global scheduling for parallel real-time tasks. In *2014 26th Euromicro Conference on Real-Time Systems*, pp. 85–96.

52. Li, J., Ferry, D., Ahuja, S., Agrawal, K., Gill, C., and Lu, C. (2017). Mixed-criticality federated scheduling for parallel real-time tasks. *Real-Time Systems* 53(5), 760–811.

53. Intel Corporation. (2019). 5G L2 SW Architecture Best Practice on IA. White Paper.

54. Li, Z., He, F., Huang, P., Li, M., Ruan, L., and Dong, Y. (2018). [Title not provided].

55. Linux. (2015). BCC: Dynamic Tracing Tools for Linux. Retrieved August 5, 2020, from https://iovisor.github.io/bcc/

56. Madden, M. M. (2019). Challenges Using Linux as a Real-Time Operating System. In *AIAA Scitech 2019 Forum*, 0502.

57. Liu, L., Li, H., and Gruteser, M. (2019). Edge-assisted real-time object detection for mobile augmented reality. In *The 25th Annual International Conference on Mobile Computing and Networking*, pp. 1–16.

58. Lo, D., Cheng, L., Govindaraju, R., Ranganathan, P., and Kozyrakis, C. (2015). Heracles: Improving resource efficiency at scale. In *Proceedings of the 42nd Annual International Symposium on Computer Architecture*, pp. 450–462.

59. Manousis, A., Sharma, R. A., Sekar, V., and Sherry, J. (2020). Contention-aware performance prediction for virtualized network functions. In *Proceedings of the Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication*, pp. 270–282.

60. Marty, M., de Kruijf, M., Adriaens, J., Alfeld, C., Bauer, S., Contavalli, C., Dalton, M., Dukkipati, N., Evans, W. C., Gribble, S., et al. (2019). Snap: A microkernel approach to host networking. In *Proceedings of the 27th ACM Symposium on Operating Systems Principles*, pp. 399–413.

61. Massey, F. J. (1951). The Kolmogorov-Smirnov test for goodness of fit. *Journal of the American Statistical Association* 46(253), 68–78.

62. Meinshausen, N. (2006). Quantile regression forests. *Journal of Machine Learning Research* 7, 983–999.

63. RRCWireless News. (2019). Rakuten to deploy 4,000 edge servers for virtualized mobile network. Retrieved July 14, 2020, from https://www.rcrwireless.com/20190806/5g/rakuten-deploy-4000-edge-servers-virtualized-mobile-network-report

64. Nikaein, N. (2015). Processing radio access network functions in the cloud: Critical issues and modeling. In *Proceedings of the 6th International Workshop on Mobile Cloud Computing and Services*, pp. 36–43.

65. ONF. (2020). SD-RAN: ONF’s Software-Defined RAN Platform Consistent with the O-RAN Architecture. White Paper.

66. OpenNESS. (2020). Open Network Edge Services Software. Retrieved June 2, 2020, from https://www.openness.org/

67. Ousterhout, A., Fried, J., Behrens, J., Belay, A., and Balakrishnan, H. (2019). Shenango: Achieving high CPU efficiency for latency-sensitive datacenter workloads. In *16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19)*, pp. 361–378.

68. Pandas. (2019). pandas - Python Data Analysis Library. Retrieved July 27, 2020, from https://pandas.pydata.org/

69. STL Partners. (2020). Building Telco Edge Infrastructure: MEC, Private LTE & vRAN. Technical Report. Executive Briefing.

70. Patounas, G., Foukas, X., Elmokashfi, A., and Marina, M. K. (2020). Characterization and identification of cloudified mobile network performance bottlenecks. *IEEE Transactions on Network and Service Management* 17(4), 2567–2583.

71. Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., et al. (2011). Scikit-learn: Machine learning in Python. *The Journal of Machine Learning Research* 12, 2825–2830.

72. Percona. (2008). TPCC benchmark. Retrieved August 5, 2020, from https://github.com/Percona-Lab/tpcc-mysql

73. Prekas, G., Kogias, M., and Bugnion, E. (2017). Zygos: Achieving low tail latency for microsecond-scale networked tasks. In *Proceedings of the 26th Symposium on Operating Systems Principles*, pp. 325–341.

74. Qamhieh, M., Fauberteau, F., George, L., and Midonnet, S. (2013). Global EDF scheduling of directed acyclic graphs on multiprocessor systems. In *Proceedings of the 21st International Conference on Real-Time Networks and Systems*, pp. 287–296.

75. Qin, H., Li, Q., Speiser, J., Kraft, P., and Ousterhout, J. (2018). Arachne: Core-aware thread management. In *13th USENIX Symposium on Operating Systems Design and Implementation (OSDI 18)*, pp. 145–160.

76. Rakuten. (2019). Rakuten Mobile and NEC to build open vRAN architecture in Japan. Retrieved July 14, 2020, from https://global.rakuten.com/corp/news/press/2019/060501.html

77. Fujitsu. (2019). New Transport Network Architectures for 5G RAN. White Paper.

78. Reddi, V. J., Cheng, C., Kanter, D., Mattson, P., Schmuelling, G., Wu, C. J., Anderson, B., Breughe, M., Charlebois, M., Chou, W., et al. (2020). MLPerf inference benchmark. In *2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)*, pp. 446–459.

79. Redis. (2019). How fast is Redis? Retrieved August 5, 2020, from https://redis.io/topics/benchmarks

80. Reghenzani, F., Massari, G., and Fornaciari, W. (2019). The real-time Linux kernel: A survey on preempt_rt. *ACM Computing Surveys (CSUR)* 52(1), 1–36.

81. Rost, P., Talarico, S., and Valenti, M. C. (2015). The complexity–rate tradeoff of centralized radio access networks. *IEEE Transactions on Wireless Communications* 14(11), 6164–6176.

82. Ryan, W. E., et al. (2004). An introduction to LDPC codes, 23 pages.

83. Saifullah, A., Li, J., Agrawal, K., Lu, C., and Gill, C. (2017). Mixed-criticality federated scheduling for parallel real-time tasks. *Real-Time Systems* 53(5), 760–811.

希望这些改进对你有帮助！如果需要进一步调整，请告诉我。