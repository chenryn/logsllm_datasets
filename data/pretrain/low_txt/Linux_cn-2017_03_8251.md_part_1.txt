---
author: Steve Emms
category: 分享
comments_data:
- date: '2017-03-03 10:38:50'
  message: 没有《代码大全》吗？
  postip: 202.0.86.4
  username: 来自澳大利亚的 Chrome 56.0|Windows 10 用户
- date: '2017-03-03 21:13:28'
  message: 这里列出的是“开源”的书籍——即免费获取的，但不包括盗版。
  postip: 114.253.19.244
  username: linux [Chrome 56.0|Mac 10.11]
- date: '2017-03-04 16:43:05'
  message: 开源书籍的质量通常都很高！
  postip: 113.56.202.40
  username: POCMON [QQ Browser 9.5|Windows 10]
- date: '2017-08-03 12:08:34'
  message: 《编写你自己的Lisp》，这本书非常棒，可惜我没看完就放弃了。
  postip: 61.133.215.190
  username: 来自宁夏银川的 Chrome 59.0|Windows 7 用户
count:
  commentnum: 4
  favtimes: 9
  likes: 0
  sharetimes: 0
  viewnum: 17334
date: '2017-03-02 10:30:00'
editorchoice: false
excerpt: 我精心挑选了一些我最喜欢的C语言书籍，并从中选出了九本对我影响最大的书籍。
fromurl: https://www.ossblog.org/learn-c-programming-with-9-excellent-open-source-books/
id: 8251
islctt: true
largepic: /data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg
permalink: /article-8251-1.html
pic: /data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我精心挑选了一些我最喜欢的C语言书籍，并从中选出了九本对我影响最大的书籍。
tags:
- 编程
- 书籍
thumb: false
title: 通过这九本开源好书学习 C 语言
titlepic: true
translator: 艾凌风
updated: '2017-03-02 10:30:00'
---

书籍是个人化的选择，编程书籍也不例外。我们通过阅读书籍来掌握一门语言的基础知识，然后进一步深入探索其灵活性。本文中，我精心挑选了一些我最喜欢的C语言书籍，并从中选出了九本对我影响最大的书籍。

![](/data/attachment/album/201703/01/120456tz267vsi56w6hd6t.jpg)

C语言是一种通用的、面向过程的高级编程语言，也是最具流行度和影响力的编程语言之一。该语言设计时考虑了编译器的编译需求，以便进行底层内存操作、高效执行机器指令，并在运行时仅需最小的支持。许多编程语言都受到C语言的影响，可以说C语言是编程界的通用语言。

C语言易于理解，允许程序员以清晰、简单且符合逻辑的方式组织程序。它具有很高的灵活性和实用性，语法简洁易懂。用C语言编写的代码运行速度快，可以轻松地操作计算机的底层设施。通过编译器的指令，我们可以为不同架构的设备生成同一版本的程序。

C语言是自由的，因此学习C语言的书籍也体现了这种自由精神。以下是我推荐的一些开源书籍，希望你能找到适合你的那一本。

### 《The C Book》
![The C Book](/data/attachment/album/201703/01/120757rc0d7zxcccecgxyr.png)

《The C Book》适用于已经具备现代高级面向过程编程语言基础的程序员。本书重点介绍C语言特有的特性及其使用方式。作者：Mike Banahan, Declan Brady 和 Mark Doran，共350页。

包含以下章节：
- 变量及运算法则介绍 – 包括关键字和标识符、变量声明、实数类型、整型、表达式和运算法则以及常量
- 控制流及逻辑表达式 – 介绍了C语言中的控制流方法、逻辑表达式及特殊运算符
- 函数 – 函数类型、递归、参数传递及链接
- 数组和指针 – 数组、指针、字符处理、`sizeof` 及存储空间分配、函数指针、包含指针的表达式、数组、`&` 运算符及函数声明
- 结构体数据类型 – 结构体、联合体、位字段、枚举类型、限定符、派生类型及初始化
- 预处理器 – 预处理器的工作原理及相关指令
- C语言中的特定内容 – 声明、定义、`typedef`、`const` 和 `volatile` 以及序列点
- 库 – 诊断、字符处理、本地化、实现相关的限制、数学函数、非局部跳转、信号处理、可变参数、输入输出、格式化I/O、字符I/O、无格式I/O、随机访问函数、通用函数、字符串处理、日期和时间
- C语言编写的完整程序 – 综合以上内容，`main`函数的参数、解析程序参数、模式匹配程序及一个更复杂的程序

作者允许读者自由使用本书，只需注明作者和版权。经Mike Banahan确认，本书通过知识共享协议发布。

### 《C Elements of Style》
![C Elements of Style](/data/attachment/album/201703/01/120757ugl8jikm1s8e1qbs.jpg)

作者Steve Oualline，共265页。

《C Elements of Style》是一本实用的编程风格指南，指导C和C++程序员如何编写可读性良好、易于维护的程序。无论你是学生还是专业程序员，都能从书中提供的技巧和技术中受益，构建优雅可靠的代码。

本书旨在展示如何将良好的代码风格融入到程序中。机器只处理代码，而人类关注注释。良好的编程风格与这两部分都有关。

最终目标是构建设计良好、编写良好的代码，对计算机来说高效，同时包含精心编写的注释帮助人类理解程序。这样一来，调试、维护和增强程序变得更加容易，从而提高代码的可读性、简洁性、可靠性和可维护性。

在本书中，你可以找到关于编写注释、程序头、变量命名、语句格式化、语句细节、预处理器命令、目录组织和创建makefile的指南。

本书通过知识共享协议发布。

### 《Build Your Own Lisp》
![Build Your Own Lisp](/data/attachment/album/201703/01/120758nyoj1gwfo18w8j8m.jpg)

作者Daniel Holden，共212页。

在学习C语言的同时，学习如何创造自己的编程语言——一个简化的Lisp（仅用不到1000行代码）。

《Build Your Own Lisp》这本书适用于两种人：一种是想要学习C语言的人，另一种是想要了解如何创建一门语言的人。本书不适合初学者，因为需要一定的编程经验才能读懂其内容。

本书基于[知识共享署名-非商业性使用-3.0未本地化版本](https://creativecommons.org/licenses/by-nc/3.0/)协议发布。

纸质版可以在Amazon上购买。

### 《The GNU C Reference Manual》
![The GNU C Reference Manual](/data/attachment/album/201703/01/120758ftil8ik66td936ot.png)

作者Trevis Rothwell, James Youngman，共91页。

《The GNU C Reference Manual》是一本C语言参考手册，详细说明了C89、C99标准以及当前GNU对标准C语言的扩展情况。本书不适合新手阅读。

包含以下章节：
- 词法元素 – 描述了预编译后的C语言代码的词法元素，包括关键字、标识符、常量、操作符和分隔符
- 数据类型 – 研究基本数据类型、枚举、联合体、结构体、数组、指针、不完全类型、类型修饰符、存储类型修饰符及重命名类型
- 表达式和操作符 – 介绍了自增/自减、算术操作符、复共轭、比较操作符、逻辑运算符、位移、位运算符、指针运算符、`sizeof`、类型转换等
- 语句 – 标签、表达式、`if`语句、`switch`语句、`while`语句、`do`语句、`for`语句、代码块、`null`语句、`goto`语句、`break`语句、`continue`语句、`return`语句及`typedef`语句
- 函数 – 学习函数声明、函数定义、函数调用、参数、变长参数列表、通过指针调用函数、`main`函数、递归函数等
- 程序结构和定义域 – 从宏观角度审视程序
- 一个例程 – 一个完整的C语言程序示例，包含源文件和头文件。这个程序是一个典型的“Hello World”程序的扩展版，展示了在GNU FSF项目中C语言的使用。

希望这些书籍能帮助你在C语言的学习之路上取得进步。