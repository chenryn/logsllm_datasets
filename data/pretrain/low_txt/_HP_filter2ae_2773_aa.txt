# 【技术分享】从安全公告到任意代码执行：揭秘HP打印机漏洞

## 译文声明
本文为翻译文章，原文来源：tenable.com  
原文链接：[请提供原始链接]  
译文仅供参考，具体内容以原文为准。

> **严正声明**：本文仅供技术讨论与学术研究使用，严禁用于非法用途（如未经授权的攻击等）。任何不当行为后果自负，与作者及平台无关。如有不妥之处，请及时联系作者或平台。
>
> 译者：ForrestX386  
> 预估稿费：200 RMB  
> 投稿方式：发送邮件至 linwei#360.cn 或通过网页版在线投稿

## 0x00. 前言
打印机是一种常见且普遍的设备，在大公司、小企业、学校乃至普通家庭中随处可见。然而，你是否意识到打印机可能带来的安全威胁？你上一次更新打印机固件是什么时候？你知道你的打印机可能面临多个已公开的漏洞吗？

例如，今年4月初，HP发布了一则安全公告，指出某些HP PageWide系列打印机和OfficeJet Pro系列打印机存在任意代码执行漏洞。公告的部分内容如下：

“我们确认了某些HP打印机设备中存在的潜在安全问题，这些问题可能导致任意代码执行漏洞。”

由于公告中使用了“潜在”一词，许多人并未给予足够重视。此外，CVE组织对这个漏洞的描述和处理态度也让人觉得该漏洞并不紧急。截至本文撰写时，HP的安全公告已经发布了两个月，但CVE组织对该漏洞的描述仍然空白，状态仍为“RESERVED”。CVSSv2组织对该漏洞的评分高达9.8，这引起了Tenable公司逆向工程师们的极大兴趣。

他们购买了两台HP OfficeJet Pro 8210系列打印机进行测试（如图1所示），希望这些设备含有未修复的漏洞。幸运的是，这两台新买的打印机固件确实存在漏洞，并且自动更新功能被禁用（如图2所示）。

尽管HP在安全公告中建议用户前往http://www.hp.com/support下载固件更新补丁，但在HP支持网站上并未找到针对OfficeJet Pro 8210系列打印机的固件更新补丁。不过，我们仍然可以通过Web界面手动更新固件。

至此，我们拥有了一台已打补丁的打印机和一台未修复的打印机，可以开始我们的漏洞挖掘之旅。

![图1：用于测试的HP OfficeJet Pro 8210 打印机](图1)

![图2：Web界面上查看到的关于设备固件的详细信息](图2)

## 0x01. 漏洞挖掘

首先，我们使用Nmap扫描未打补丁的打印机开放端口，结果如图3所示：

- HTTP服务运行在80, 43, 8080端口
- 行式打印进程（IPD）监听515端口
- 网络打印协议（IPP）监听631端口
- 9100端口标记为“jetdirect”，支持PCL, PostScript和PJL语言的原生打印

![图3：Nmap扫描结果](图3)

HP认为基于9100端口的原生打印技术是其专利。Jens Müller在其研究报告《渗透网络打印机：关于激光打印机和多功能设备中的安全缺陷》中详细描述了多个常见的打印机漏洞，包括目录遍历漏洞。图4展示了利用PJL语言通过9100端口获取打印机设备信息的例子。

![图4](图4)

图5展示了一个利用PJL指令获取远程打印机目录信息的例子。可以看到，指令参数中列出的目录名为“0:/"，而打印机响应的信息中包含两个子目录tmp/ 和 csr_misc/。如果尝试使用“../”切换目录，会发生什么？例如，将指令参数name设置为“0:/../../”，打印机响应了一串新的目录列表（如图6所示）。

![图5](图5)

![图6](图6)

这些测试表明打印机可能存在目录遍历漏洞。在打了补丁的打印机上执行相同命令时，得到一个错误信息（如图7所示），说明HP已在补丁版本中修复了该漏洞。

![图7](图7)

接下来，我们开始挖掘公告中提到的任意代码执行漏洞。虽然目录遍历漏洞对我们复现任意代码执行漏洞帮助不大，但我们发现了一些类似Linux文件系统的结构信息。为了进一步探索，我们尝试了其他PJL指令，如FSQUERY, FSUPLOAD和FSDOWNLOAD。

图9展示了如何利用FSQUERY和FSUPLOAD指令结合目录遍历漏洞读取/etc/passwd文件。

![图9](图9)

我们不仅想实现任意文件读取，还想对打印机文件系统进行写操作。但由于FSDOWNLOAD指令需要发送ESC字符，Netcat工具不太适用，因此我们编写了一个Python脚本进行测试（如图10所示）。

![图10](图10)

遗憾的是，脚本未能成功写入文件，可能是PJL解释器进程没有写权限。这对我们复现任意代码执行漏洞是一个打击。我们唯一的希望是“0:/"文件系统可写，可以在该目录下写入自定义文件并通过某种方式运行。

在进一步测试中，我们注意到打印机系统中存在类似于传统Linux系统的profile.d/目录（0:/../../rw/var/etc/profile.d/），并开始了相关测试（如图11所示）。

![图11](图11)