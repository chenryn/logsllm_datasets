### Service Operation and Semantic Annotation

Service operations are annotated using an ontology, which enhances the data semantics. This enriched semantic information facilitates the matching of the input/output data semantics of a Web service with the corresponding requirements.

The Meteor-S Web Service Annotation Framework (MWSAF) [13] provides a framework and tools for both automatic and semi-automatic annotation of web services using ontologies. Figure 3 illustrates a solution for annotating WSDL interfaces with semantic metadata based on relevant ontologies [14]. A Web service invocation specifies an input interface that defines the required input parameters and an output interface that details the output parameters for transferring the results to other services.

**Fig. 3. Semantic Annotation of a Web Service Specified with WSDL**

### 3.2 Semantic Web Service Advertisement

Once a service is developed and annotated, it must be advertised to facilitate discovery. The UDDI registry aims to leverage the power of the Internet to promote service-oriented computing. However, the current UDDI-based discovery mechanism is inefficient, often retrieving inadequate services due to low precision (many irrelevant services) and low recall (missing relevant services). To address this, Web service search engines and automated discovery algorithms need to be developed, incorporating machine-processable semantics into Web service profiles.

### 3.3 Semantic Web Service Discovery

This stage involves discovering appropriate services before selecting and binding them to a Web process [15]. The search for Web services in e-commerce applications differs from traditional processes, primarily due to the vast number of available Web services. Efficiently discovering Web services is a significant challenge [10].

Key considerations for Web service discovery include:
- **Precision**: The search should be based on syntactic, data, functional, and QoS semantics.
- **Integration Degree**: Automatically determining the integration level of discovered Web services with the host process.
- **Schema Integration**: The integration and interoperation of Web services differ from schema integration due to the polarity of the schemas [10].

Typically, a cluster of Web services that match initial requirements is constructed. In the next phase, the most suitable service is selected from this cluster. The list of other matching services is maintained for potential use in case of failure or contract breach.

### 3.4 Semantic Web Service Selection

Web service selection is as critical as service discovery. After identifying services with matching semantics, the next step is to select the most suitable one. Each service may have different quality aspects, so selection involves finding the service that best meets the quality criteria.

Service selection is also vital in Web service composition [10], requiring the management of QoS metrics. Web services in different domains can have domain-specific and domain-independent QoS metrics. Shared semantics for these metrics can be achieved using an ontology similar to those used for data semantics.

### 3.5 Semantic Process Composition

The full potential of Web services is realized when they are efficiently composed into Web processes, requiring high interoperability. Interoperability is crucial in e-commerce, where business-to-customer and business-to-business links are increasingly common. Automating inter-organizational processes across supply chains presents significant challenges [16].

Compared to traditional tasks, Web services are highly autonomous and heterogeneous, necessitating sophisticated methods for composition. Semantics can enhance interoperability among Web services. This stage involves creating a representation of Web processes using languages like BPEL4WS [17], BPML [18], and WSCI [19]. Four types of semantics must be considered: functional, data, QoS, and execution.

### 3.6 Execution of Web Processes

Web services and Web processes address infrastructure challenges such as data, application, and process integration. Workflow management systems (WfMSs) are essential for supporting, managing, enacting, and orchestrating Web processes [21].

Execution semantics encompass message sequences, conversation patterns, action flows, preconditions, and effects of Web service invocations. Traditional formal models, concurrency formalisms, and simulation techniques can represent these semantics. Formal modeling for workflow scheduling and execution is also relevant [26]. Using execution semantics, processes can dynamically bind to component Web services based on functional and data semantics, while QoS semantics help select the most appropriate service.

### 3.7 Semantic Web Process QoS

E-commerce requires specifying QoS metrics such as delivery deadlines, product quality, and service cost. Research is needed to develop mechanisms for semantically specifying, computing, monitoring, and controlling QoS [10, 27].

In e-commerce and e-business Web processes, suppliers and customers define binding agreements specifying QoS items. Managing QoS metrics directly impacts the success of organizations. A comprehensive QoS model that describes Web process components from a QoS perspective has been developed [28], including dimensions like time, cost, and reliability. An algorithm (the SWR algorithm [28]) automatically computes the overall QoS of Web processes.

### 4. Ongoing Work

Research on semantic Web services depends on the ongoing development of open standards ensuring interoperability. Initiatives like the Semantic Web Services Initiative (SWSI) [31] aim to combine Semantic Web and Web Services to enable automation. SWSI will further evolve OWL-S [32] and work towards its convergence with WSMO/WSML/WSMX [33, 34, 35].

WSMO is a complete ontology for defining Semantic Web Services, following the WSMF vision. WSML is a family of languages for formally defining Semantic Web Services, and WSMX provides a standard architecture for their execution.

Other projects, such as the METEOR-S project [36] in the US and the DERI SWWS project [37] in Europe, focus on using semantics throughout the lifecycle of Web processes, including annotation, discovery, composition, and execution.

### 5. Conclusions

Systems and infrastructures are being developed to support Web services, encapsulating organizational functionality within appropriate interfaces. While Web services can be used in isolation, they are often integrated into Web processes. The heterogeneity, autonomy, and distribution of the Web make it challenging to develop valuable Web processes solely with current technologies.

For example, the travel industry requires dynamic composition of travel packages from distributed Web services, which XML-based specifications alone cannot achieve. Ontologies can overcome semantic issues arising from the autonomy, heterogeneity, and distribution of Web services.

Researchers agree that Web services must be machine-understandable to support all phases of the Web process lifecycle. This paper has presented the challenges and how applying semantics to each step can address critical issues in reuse, integration, and scalability.

### References

[1] Sheth, A.P., W.v.d. Aalst, and I.B. Arpinar, Processes Driving the Networked Economy. IEEE Concurrency, 1999. 7(3): p. 18-31.

[2] W3C, W3C Semantic Web Activity. http://www.w3.org/2001/sw/. 2004.

[3] Uschold, M. and M. Gruninger, Ontologies: Principles, methods and applications. Knowledge Engineering Review, 1996. 11(2): p. 93-155.

[4] Gruber, T.R., Toward principles for the design of ontologies used for knowledge sharing. International Journal of Human-Computer Studies, 1995. 43(5-6): p. 907-928.

[5] OTA, OpenTravel Alliance. www.opentravel.org, 2004.

[6] OWL, Web Ontology Language (OWL). http://www.w3.org/2004/OWL/, 2004, World Wide Web Consortium (W3C).

[7] Cardoso, J. and A.P. Sheth. Semantic Web Processes: Semantics Enabled Annotation, Discovery, Composition and Orchestration of Web Scale Processes. in Fourth International Conference on Web Information Systems Engineering (WISE'03). 2003. Roma, Italy.

[8] Sivashanmugam, K., et al., Metadata and Semantics for Web Services and Processes, in Datenbanken und Informationssysteme (Databases and Information Systems). Festschrift zum 60. Geburtstag von Gunter Schlageter, W. Benn, et al., Editors. 2003: Hagen, Germany. p. 245-271.

[9] Paolucci, M., et al. Importing the Semantic Web in UDDI. in Proceedings Web Services, E-Business and Semantic Web Workshop, CAiSE 2002. 2002. Toronto, Canada.

[10] Cardoso, J. and A. Sheth, Semantic e-Workflow Composition. Journal of Intelligent Information Systems (JIIS). 2003. 21(3): p. 191-225.

[11] Graham, S., et al., Building Web Services with Java: Making Sense of XML, SOAP, WSDL, and UDDI. 2002: SAMS.

[12] Christensen, E., et al., W3C Web Services Description Language (WSDL). http://www.w3c.org/TR/wsdl, 2001.

[13] Patil, A., et al. MWSAF - METEOR-S Web Service Annotation Framework. in 13th Conference on World Wide Web. 2004. New York City, USA.

[14] Cardoso, J., F. Curbera, and A. Sheth. Tutorial: Service Oriented Architectures and Semantic Web Processes. in The Thirteenth International World Wide Web Conference (WWW2004). 2004. New York, USA.

[15] Verma, K., et al., METEOR-S WSDI: A Scalable Infrastructure of Registries for Semantic Publication and Discovery of Web Services. Journal of Information Technology and Management (in print), 2004.

[16] Stohr, E.A. and J.L. Zhao, Workflow Automation: Overview and Research Issues. Information Systems Frontiers, 2001. 3(3): p. 281-196.

[17] BPEL4WS, Web Services. http://www-106.ibm.com/developerworks/webservices/, 2002, IBM.

[18] BPML, Business Process Modeling Language. http://www.bpmi.org/, 2004.

[19] WSCI, Web Service Choreography Interface (WSCI) 1.0. http://www.w3.org/TR/wsci/, 2002, World Wide Web Consortium (W3C).

[20] Aalst, W.M.P.v.d., et al. Advanced Workflow Patterns. in Seventh IFCIS International Conference on Cooperative Information Systems. 2000.

[21] Fensel, D. and C. Bussler, The Web Service Modeling Framework. http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf, 2002, Vrije Universiteit Amsterdam (VU) and Oracle Corporation.

[22] Bergstra, J.A., A. Ponse, and S.A. Smolka, Handbook of Process Algebra. 2001: Elsevier.

[23] Aalst, W.M.P.v.d., The Application of Petri Nets to Workflow Management. The Journal of Circuits, Systems and Computers, 1998. 8(1): p. 21-66.

[24] Hopcroft, J.E., R. Motwani, and J.D. Ullman, Introduction to Automata Theory, Languages, and Computation. 2000, Mass.: Addison-Wesley Publishing Company.

[25] Bosilj, V., M. Stemberger, and J. Jaklic, Simulation Modelling Toward E-Business Models Development. International Journal of Simulation Systems, Science & Technology, Special Issue on: Business Process Modelling, 2001. 2(2): p. 16-29.

[26] Attie, P., et al. Specifying and Enforcing Intertask Dependencies. in Proceedings 19th International Conference on Very Large Data Bases. 1993. Dublin, Ireland: Morgan Kaufman.

[27] Cardoso, J., A. Sheth, and J. Miller. Workflow Quality of Service. in International Conference on Enterprise Integration and Modeling Technology and International Enterprise Modeling Conference (ICEIMT/IEMC’02). 2002. Valencia, Spain: Kluwer Publishers.

[28] Cardoso, J., et al., Quality of service for workflows and web service processes. Web Semantics: Science, Services and Agents on the World Wide Web Journal, 2004. 1(3): p. 281-308.

[29] SOAP, Simple Object Access Protocol 1.1. http://www.w3.org/TR/SOAP/, 2002.

[30] UDDI, Universal Description, Discovery, and Integration. http://www.uddi.org/, 2002.

[31] SWSI, Semantic Web Services Initiative (SWSI). http://www.swsi.org/, 2004.

[32] OWL-S, OWL-based Web Service Ontology. http://www.daml.org/services/owl-s/, 2004.

[33] WSMO, Web Services Modeling Ontology (WSMO). http://www.wsmo.org/, 2004.

[34] WSML, Web Service Modeling Language (WSML). http://www.wsmo.org/wsml/index.html, 2004.

[35] WSMX, Web Services Execution Environment (WSMX). http://www.wsmx.org/, 2004.

[36] LSDIS, METEOR-S: Semantic Web Services and Processes. http://lsdis.cs.uga.edu/Projects/METEOR-S/index.php, 2004.

[37] SWWS, Semantic Web Enabled Web Service. http://swws.semanticweb.org/, 2004, Digital Enterprise Research Institute (DERI).

[38] DERI, Digital Enterprise Research Institute (DERI). http://www.deri.ie/, 2004.