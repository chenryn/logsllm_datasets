### 优化后的文本

---

#### VII. 实时流量分析

我们采用这种方法对3月份的数据进行了聚类，共形成了23个集群。其中，有747个客户端被分组到这些集群中，每个集群包含两个或更多的客户端。图11展示了每个集群中的样本数据。

在所有客户端中出现的字体是那些在所有客户端中都出现过的。最大的集群中生成了最多的AGDs（算法生成域名）。较小的字体表示生成的AGDs较少。四个集群包含了59个与已知的88个机器人相关的AGDs。

为了进一步展示我们的技术的实用性，我们在主机上部署了一个在线版本。此设置用于监控校园网络边界处的DNS流量。对于实时测试，我们使用了一块Endace 9.2X2（DAG）卡，连接到一台具有2.53 GHz Intel Xeon处理器和16GB内存的主机。

DAG卡以线速捕获DNS数据包，并将其放置在一个共享内存缓冲区中，而无需依赖CPU处理。当DNS数据包到达DAG卡时，它们会被分配给特定的核心进行初始解析。每个核心负责特定的任务，这使得系统可以轻松地通过动态分配任务来扩展多核处理器的能力。如果数据包需要进一步处理，它会在核心之间传递，形成一个流水线处理模式。这种设计允许我们充分利用多核架构，从而实现在线网络分析。

为了获取更多关于僵尸网络家族的信息，我们查询了公开可用的网站，并对这些集群中的域名进行了反查（例如，使用dig命令）。四个集群中有三个被确认为sink-holed（即已被接管），第四个集群则包含已知的Cridex AGDs（例如，aecgrgbjgaofrilwyg.ru）。其余的29个僵尸网络（在已知真值中）没有聚类在一起，但生成了一些结构类似的域名。

---

#### VIII. 结论

本文研究了当前可用于检测恶意域生成算法的技术。虽然现有的技术能够检测到恶意域的存在，但它们通常会产生较高的误报率，并且需要长时间的观察才能进行分类。我们提出了一种基于序列假设检验的方法，利用了僵尸网络在寻找命令与控制服务器时会生成大量唯一NX响应的特点。通过广泛的实证评估，我们证明了可以在较短的时间内（平均而言）对主机进行分类。此外，我们的方法轻量且适用于实际部署。

---

#### IX. 致谢

感谢Stan Waddell、Alex Bil Murray Anderegg、Michael Bailey、Kevin Snow、Andrew White以及匿名审稿人提供的宝贵意见。本研究部分由美国国家科学基金会（NSF）资助，项目编号0831245和1127361，以及加拿大自然科学与工程研究委员会（NSERC）的支持。

---

#### 参考文献

[1] M. Antonakakis, R. Perdisci, N. Feamster. A Dynamic Reputation System for DNS. In USENIX Security Symposium, 2010.

[2] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and N. Vasiloglou. Detecting Malware Domains at the Upper DNS Hierarchy. In USENIX Security Symposium, 2011.

[3] M. Antonakakis, R. Perdisci, Y. Nadji, N. Vasiloglou, W. Lee, and D. Dagon. From Throw-Away Traffic to Bots: Detecting the Rise of DGA-based Malware. In USENIX Security Symposium, 2012.

[4] L. Bilge, E. Kirda, C. Kruegel, S. Abu-Nimeh, and M. Balduzzi. EXPOSURE: Finding Malicious Domains using Passive DNS Analysis. In Symposium on Network and Distributed System Security, Feb. 2011.

[5] K. Born and D. Gustafson. Detecting DNS Tunnels Using Character Frequency Analysis. In Proceedings of the Annual Computer Security Conference, 2010.

[6] J. Dilley, B. Maggs, J. Parikh, H. Prokop, and B. Weihl. Globally distributed content delivery. IEEE Internet Computing, 6(5), Sept. 2002.

[7] A. Eckelberry. Massive italian typosquatting ring foists malware on users. http://goo.gl/4ZzMI, 2007.

[8] B. Everitt, S. Landau, M. Leese, and D. Stahl. Cluster Analysis. Wiley Series in Probability and Statistics. Wiley, 2011.

[9] M. Felegyhazi, C. Kreibich, and V. Paxson. On the potential of proactive domain blacklisting. In USENIX Conference on Large-Scale Exploits and Emergent Threats, 2010.

[10] S. Golovanov and I. Soumenkov. TDL4 Top Bot. See http://goo.gl/23BaA, 2011.

[11] S. Hao, N. Feamster, and R. Pandrangi. Initial Monitoring of Malicious DNS Behavior. In ACM SIGCOMM Internet Measurement Conference, 2011.

[12] J.-W. Ho, M. Wright, and S. Das. Fast detection of mobile replica node attacks in wireless sensor networks using sequential hypothesis testing. IEEE Transactions on Mobile Computing, 10(6):767-782, June 2011.

[13] ISC. Google Chrome and (weird) DNS Requests. http://goo.gl/j4SCA, 2011.

[14] N. Jiang, J. Cao, Y. Jin, L. E. Li, and Z.-L. Zhang. Identifying suspicious activities through dns failure graph analysis. In International Conference on Network Protocols, pages 144-153, 2010.

[15] J. Jung, V. Paxson, A. W. Berger, and H. Balakrishnan. Fast Portscan Detection Using Sequential Hypothesis Testing. In IEEE Symposium on Security and Privacy, May 2004.

[16] J. Jung, R. Milito, and V. Paxson. On the adaptive detection of fast-propagating network worms. Journal of Computer Virology, 4:197-210, 2005.

[17] D. Kaminsky. Black ops 2005-its the end of the cache as we know it. Black Hat USA, 2005.

[18] S. Kullback and R. Leibler. On information and sufficiency. The Annals of Mathematical Statistics, 22(1):79-86, 1951.

[19] P. H. R.O. Duda and D. Stork. Pattern Classification. John Wiley & Sons, Inc., Secaucus, NJ, USA, 2007.

[20] S. E. Schechter, J. Jung, and A. W. Berger. Fast detection of scanning worm infections. In Symposium on Recent Advances in Intrusion Detection, pages 59-71, 2004.

[21] R. Sommer, V. Paxson, and N. Weaver. An architecture for exploiting multi-core processors to parallelize network intrusion prevention. Concurrency and Computation: Practice & Experience, 21(10):1255-1279, July 2009.

[22] S. Son and V. Shmatikov. The Hitchhiker's Guide to DNS Cache Poisoning. In International Conference on Security and Privacy in Communication Networks, Sept. 2010.

[23] Sophos Inc. Exploring the blackhole exploit kit. http://goo.gl/ZhLvp, 2012.

[24] B. Stone-Gross, M. Cova, L. Cavallaro, R. Kemmerer, C. Kruegel, B. Gilbert, and G. Vigna. Your botnet is my botnet: analysis of a botnet takeover. Communications of the ACM, 53(10):635-647, 2010.

[25] Unmask Parasites. Runforestrun and pseudo random domains. http://goo.gl/xRWtw, 2012.

[26] J. Valois. Implementing lock-free queues. In International Conference on Parallel and Distributed Computing Systems, pages 64-69, 1994.

[27] R. Villamizar-Salomn and I. Brustoloni. Identifying botnets using anomaly detection techniques applied to DNS traffic. In IEEE Consumer Communications and Networking Conference (CCNC), 2005.

[28] A. Waldo. Sequential Analysis. John Wiley & Sons, Inc., 1947.

[29] N. Weaver, S. Staniford, and V. Paxson. Very fast containment of scanning worms. In Malware Detection, pages 113-145, 2007.

[30] A. White, S. Krishnan, M. Bailey, F. Monrose, and P. Parros. Opaque Traffic and its Security Implications for the Future. In Symposium on Network and Distributed System Security, Feb. 2013.

[31] S. Yadav and A. N. Reddy. Winning with DNS Failures: Strategies for Faster Botnet Detection. In International Conference on Security and Privacy in Communication Networks, 2011.

[32] S. Yadav, A. K. K. Reddy, A. N. Reddy, and S. Ranjan. Detecting algorithmically generated malicious domain names. In ACM Internet Measurement Conference, pages 48-61, 2010.

---

希望这些修改能使文本更加清晰、连贯和专业。如果有任何进一步的修改需求，请随时告知。