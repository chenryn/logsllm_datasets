### 3.2.1 Transition and State Update Mechanisms

The transition from state \((i-1, 1)\) to state \((i, 0)\) is achieved through retransmission only, with the transition rate given by:

\[
\lambda_{(i-1,1), (i,0)} = \frac{1}{R} \left(1 - \beta \right)
\]

where \(R\) is the retransmission interval and \(\beta\) is the probability of a false removal.

As in the single-hop system, false removals at each receiver are modeled as independent Poisson processes with rate \(\lambda_w\). Consequently, the system transitions from a slow path state to the recovery state \((\phi)\) with rate \(\lambda_w\).

When a failure (e.g., link failure) occurs, the affected receiver is notified by an external signal. This receiver then sends messages to inform other receivers and the sender about the failure. Upon receiving such a message, other receivers remove their associated states. If the sender receives the message, it sends a trigger signaling message to re-install the state. We model this transition from the \(\phi\) state to the \((0, 0)\) state with rate \(\frac{2}{D}\), which approximates the expected latency for the sender to initiate the recovery process. For more details on the multi-hop model, see [11].

### 3.2.2 Multi-hop Model Solution and Results

The solution to the multi-hop model is similar to that of the single-hop model. Due to space constraints, we omit the detailed solution; interested readers can refer to [11]. Instead, we focus on the results, particularly the inconsistency ratio and signaling message overhead of the three multi-hop signaling approaches. We use the process of reserving bandwidth along a multi-hop path as an example. The default parameters are: \(\alpha = 20\), \(\beta = 0.02\), \(D = 30\) ms, \(1/\lambda_r = 60\) ms, \(T = 5\) ms, \(X = 3T\), \(R = 4D\), and \(\lambda_w = 0.03\).

#### Markov Models

**Figure 11: Markov Model for End-to-End Soft-State Approach**

\[
\begin{array}{cccccc}
\text{State update at sender} & \rightarrow & (0, 0) & (1, 0) & (2, 0) & \ldots & (\alpha-2, 0) & (\alpha-1, 0) \\
& & \downarrow & \downarrow & \downarrow & & \downarrow & \downarrow \\
\text{False removal} & \rightarrow & (0, 1) & (1, 1) & (2, 1) & \ldots & (\alpha-2, 1) & (\alpha-1, 1) \\
\end{array}
\]

**Figure 12: Markov Model for Hard-State Signaling Approach**

\[
\begin{array}{cccccc}
\text{State update at sender} & \rightarrow & (0, 0) & (1, 0) & (2, 0) & \ldots & (\alpha-2, 0) & (\alpha-1, 0) \\
& & \downarrow & \downarrow & \downarrow & & \downarrow & \downarrow \\
\text{False removal} & \rightarrow & (0, 1) & (1, 1) & (2, 1) & \ldots & (\alpha-2, 1) & (\alpha-1, 1) \\
& & \uparrow & & & & & \downarrow \\
\text{Recovery from fault} & \rightarrow & \phi & & & & & (0, 0) \\
\end{array}
\]

#### Inconsistency and Overhead Analysis

**Figure 13: Fraction of Time the i-th Hop is Inconsistent**

In Figure 13, we plot the fraction of time that the i-th hop is inconsistent, where the total number of hops is 20. We observe that the inconsistency increases as the hop is further away from the signaling sender, following an approximately linear trend for all signaling approaches. Combining hop-by-hop reliable triggers with the end-to-end soft-state approach significantly improves consistency at all signaling hops, with the consistency of SS+RT being comparable to that of the hard-state approach. In our evaluation, the hard-state (HS) approach has slightly higher consistency than SS+RT, due to the effect of a state being falsely removed upon the expiration of a state timeout timer in the SS+RT approach.

**Figure 14: Inconsistency Ratio and Signaling Message Rate Against Total Number of Hops**

Figure 14 plots both the inconsistency rate (on the left) and the signaling message rate (on the right) as a function of the number of hops in the multi-hop system. Both inconsistency and signaling message overhead monotonically increase with an increasing number of hops. Comparing the hard-state approach (HS) and the soft-state with reliable trigger approach (SS+RT) indicates that the consistency of the pure soft-state approach (SS) is more sensitive to an increase in the number of hops. Adding a reliable trigger to the end-to-end soft-state approach significantly improves consistency while introducing little additional signaling overhead. This benefit increases as the number of signaling hops increases.

We also evaluated the impact of other parameters on the performance of multi-hop signaling approaches. Since the results are similar to those from the single-hop model evaluation, we omit them here. See [11] for details.

### 4. Related Work

The most closely related work to our present study is [16], which was the first effort to develop analytic models of soft-state protocols and aimed to provide a more principled understanding of these protocols. The model in [16] considered link loss and state deletion probability, and introduced the metric of inconsistency that we have adopted here. There are several important differences between our work and [16]. The two protocols considered in [16] correspond closely to our SS and SS+RT protocols. Here, we consider a broader range of protocols, including those that adopt hard-state features (such as SS+ER and HS). Our aim is not just to understand soft-state protocols but to compare and contrast a variety of signaling approaches and their mechanisms, ranging from a “pure” soft state to a “pure” hard-state approach.

Our model is more detailed, allowing us to quantify the performance impact of various system and protocol parameters. By adopting an absorbing state, our model avoids a counterintuitive result in [16]—that as the capacity of the signaling channel increases, the degree of inconsistency also increases. Finally, while [16] considers only state setup, we consider state installation, updates, and removal as integral parts of a spectrum of signaling protocols.

Two works that have addressed narrower aspects of soft-state protocol operation include [17], which investigated techniques to dynamically set soft-state timer values, and [13], which explored using different soft-state timers for trigger and refresh messages.

### 5. Conclusion and Future Work

In this paper, we compared and contrasted the performance of various signaling approaches, ranging from a “pure” soft-state approach to a “pure” hard-state approach. Our goal was not to argue whether a hard-state or a soft-state approach was better in an absolute sense but to understand how the mechanisms included in various hard-state and soft-state signaling protocols can best be used in given situations. We defined a set of generic protocols that lie at various points along the hard-state/soft-state spectrum and developed a unified parameterized analytic model to study their performance. Our results indicate that among the class of soft-state approaches, a soft-state approach coupled with explicit removal substantially improves state consistency while introducing little additional signaling message overhead. The addition of reliable explicit setup/update/removal further allows the soft-state approach to achieve comparable (and sometimes better) consistency than the hard-state approach.

Our focus in this paper has been primarily quantitative and performance-oriented. We are currently exploring ways to quantify the non-performance-oriented complexity of various signaling approaches, considering architectural issues such as the coupling of signaling with other system components.

### 6. References

[1] L. Berger, D. Gan, G. Swallow, P. Pan, F. Tommasi, and S. Molendini. RSVP refresh overhead reduction extensions. RFC 2961, April 2001.
[2] B. Cain, S. Deering, B. Fenner, and A. Thyagarajan. Internet group management protocol, version 3, Oct. 2002. RFC 3376.
[3] D. D. Clark. The design philosophy of the DARPA internet protocols. In Proceeding of SIGCOMM, Stanford, CA, Aug 1988.
[4] S. Deering. Host extensions for IP multicasting, August 1989. RFC 1112.
[5] S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, and L. Wei. The PIM architecture for wide-area multicast routing. ACM Transactions on Networks, April 1996.
[6] S. Deering, D. Estrin, D. Faranacci, V. Jacobson, C. Liu, and L. Wei. The PIM architecture for wide area multicasting. IEEE/ACM Tran. Networking, 4(2), Apr. 1996.
[7] D. Estrin, D. Farinacci, A. Helmy, D. Thaler, S. Deering, M. Handley, V. Jacobson, C. Liu, P. Sharma, and L. Wei. Protocol Independent Multicast-Sparse Mode (PIM-SM): Protocol specification, June 1998. RFC2362, http://www.faqs.org/rfcs/rfc2362.html.
[8] W. Fenner. Internet group management protocol, version 2, Nov. 1997. RFC 2236.
[9] S. Floyd, V. Jacobson, C. Liu, S. McCanne, and L. Zhang. A reliable multicast framework for light-weight sessions and application level framing. IEEE/ACM Tran. Networking, 5(6), December 1997.
[10] M. Handley, H. Schulzrinne, E. Schooler, and J. Rosenberg. SIP: Session initiation protocol, Mar. 1999. RFC 2543.
[11] P. Ji, Z. Ge, J. Kurose, and D. Towsley. A comparison of soft-state versus hard-state signaling. Technical report, University of Massachusetts at Amherst, 2003.
[12] Kazaa file sharing network, 2002. http://www.cazaa.com/.
[13] P. Pan and H. Schulzrinne. Staged refresh timers for RSVP. In 2nd Global Internet Conference, Phoenix, AZ, 1997.
[14] C. Partridge and S. Pink. An Implementation of the Revised Internet Stream Protocol (ST-2). Journal of Internetworking: Research and Experience, 3(1), March 1992.
[15] Q2931. ITU-T Recommendation.
[16] S. Raman and S. McCanne. A model, analysis, and protocol framework for soft state-based communication. In Proceeding of SIGCOMM, Boston, MA, 1999.
[17] P. Sharma, D. Estrin, S. Floyd, and V. Jacobson. Scalable timers for soft state protocols. In Proc. of IEEE INFOCOM, Kobe, Japan, 1997.
[18] C. Topolcic. Experimental Internet Stream Protocol: Version 2 (ST-II), October 1990. Internet RFC 1190.
[19] S. Zabele, M. Dorsch, Z. Ge, P. Ji, M. Keaton, J. Kurose, J. Shapiro, and D. Towsley. SANDS: Specialized active networking for distributed simulation. In DARPA Active Networks Conference and Exposition (DANCE), San Francisco, California, USA, May 2002.
[20] L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: A new resource reservation protocol. IEEE Network, September 1993.