# Figures and Captions

## Figure 6: Measurement Error and Inter-FPGA Variation
- **Histograms**:
  - `bob.easystats.hist_1_4`
  - `cat.easystats.hist_1_4`
  - `dog.easystats.hist_1_4`

- **X-axis (Measurement Error)**:
  - 0, 180,000, 182,000, 184,000, 186,000, 188,000, 190,000, 192,000

- **Y-axis (Probability Density)**:
  - 0, 0.985, 0.9855, 0.986, 0.9865, 0.987, 0.9875, 0.988

- **Subplots**:
  - (a) Uncompensated
  - (b) Compensated

- **Description**: These histograms illustrate the relationship between measurement error (width of a peak) and inter-FPGA variation (each peak represents a different FPGA), with and without compensation. The data clearly shows that information about the FPGA's identity can be extracted from these measurements.

## Figure 7: Temperature Variation Experiment
- **Histograms**:
  - `bob.heat.hist1`
  - `ana.heat.hist1`
  - `bob.heat.hist1_4`
  - `ana.heat.hist1_4`

- **X-axis (Temperature in Kelvin)**:
  - 0, 56,500, 57,000, 57,500, 58,000, 58,500, 59,000, 59,500

- **Y-axis (Probability Density)**:
  - 0, 1.0122, 1.0123, 1.0124, 1.0125, 1.0126, 1.0127, 1.0128, 1.0129

- **Subplots**:
  - (a) Uncompensated
  - (b) Compensated

- **Time Series Plots**:
  - `bob.heat` every 50 using 0:1
  - `ana.heat` every 50 using 0:1
  - `bob.heat` every 20 using 0:($1/$4)
  - `ana.heat` every 20 using 0:($1/$4)

- **X-axis (Time in Half-Second Intervals)**:
  - 0, 500, 1,000, 1,500, 2,000, 2,500, 3,000, 3,500, 4,000, 4,500

- **Y-axis (Measurement Value)**:
  - 0, 1.0122, 1.0123, 1.0124, 1.0125, 1.0126, 1.0127, 1.0128, 1.0129

- **Subplots**:
  - (c) Uncompensated
  - (d) Compensated

- **Description**: These graphs show the results of an experiment where two FPGAs had their ambient temperature vary between 25°C and 50°C. The bottom plots display the measurement value versus time (in half-second sampling intervals). Note that the two FPGAs did not undergo the same temperature changes at the same time. The top plots are histograms of the respective plots on the bottom.

## Figure 8: Demultiplexer Circuit
- **Diagram**:
  - Input: `inp1`, `inp2`, ..., `inpN`
  - Output: `out1`, `out2`, ..., `outM`

- **Description**: The demultiplexer circuit is used to test the feasibility of additive delay modeling of a PUF circuit.

## Figure 9: Compensated Delay versus Input Challenges
- **Data Sets**:
  - `fulldata.ana3.mean`
  - `fulldata.bob.means`

- **X-axis (Input Challenge Index)**:
  - 0, 500, 1,000, 1,500, 2,000, 2,500, 3,000, 3,500, 4,000, 4,500

- **Y-axis (Compensated Delay)**:
  - 0, 0.975, 0.98, 0.985, 0.99, 0.995, 1, 1.005, 1.01, 1.015, 1.02, 1.025

- **Subplots**:
  - (a) FPGA 1
  - (b) FPGA 2

- **Description**: These plots show the compensated delay versus input challenges for the demultiplexer circuit on two different FPGAs. The large-scale structure is identical due to differences in routing of paths on a given circuit. The difference between the FPGAs appears at a much smaller scale and can be seen as a difference in texture between the two plots.

# Discussion and Future Work

### Pseudo-Random Function (PRF) as PUF
One approach we are considering is to use a known pseudo-random function (PRF) out of its normal operating conditions as the PUF circuit. This could potentially relate the security of the PUF to the security of the PRF.

### Improved Measurement Techniques
Better methods for measuring physical characteristics of the chip are needed. Directly measuring delays instead of using self-oscillating circuits would allow the silicon PUF to operate much faster, making it suitable for protocols that require a large number of uses. Improved measurement techniques might also enable the reliable extraction of information from circuits with glitches, which would be harder to simulate, thus increasing the difficulty for adversaries. In the case of Controlled PUFs, differential power analysis techniques could be used on self-oscillating circuits to read challenges off the PUF against its will. Direct delay measurement should greatly reduce the signature of the delay measurement on the IC’s power supply.

### Using Complex Circuits as SPUFs
Another significant improvement would be to find a way to use any sufficiently complex and suitably instrumented circuit as a Silicon Physical Unclonable Function (SPUF). This would make the cost of adding PUF support to a circuit very low and ensure that the PUF is inseparable from the circuit it accompanies, which is particularly important for Controlled PUFs.

### Physical Attack Analysis
A detailed study of the physical attacks that an adversary can carry out is necessary. It is important to determine if probing the PUF circuitry using advanced non-invasive techniques can help build a simulation model of the PUF. If so, physical barriers must be considered to prevent such probing.

# Conclusion
We have described the concept of a Physical Unclonable Function (PUF) and demonstrated that a silicon PUF can be created. The primary application of a silicon PUF is authentication, which must be carried out reliably to minimize false positives and negatives. We proposed a circuit architecture for a PUF where delays are measured relative to other delays, providing robustness. Preliminary experiments indicate that authentication can be performed reliably under significant environmental variations. To be robust against more significant environmental variations, careful circuit and package design are required. The VLSI design community is already addressing these problems in high-performance circuit design. A manufacturing process that produces high variations in device delays will result in higher signal-to-noise ratios and improved reliability.

The most plausible attack on a PUF is the model-building attack, where an adversary has access to the packaged IC containing the PUF and can apply arbitrary challenges and monitor the resulting response. Our preliminary analysis and experiments indicate that model-building is difficult due to precision requirements, but more work is needed in both analysis and experimentation.

While many challenges remain to make PUFs useful and practical, we believe this is a promising low-cost approach to improving the physical security of devices, especially when combined with the ideas on controlled PUFs.

# References
1. R. J. Anderson. *Security Engineering: A Guide to Building Dependable Distributed Systems*. John Wiley and Sons, 2001.
2. R. J. Anderson and M. G. Kuhn. *Tamper Resistance: A Cautionary Note*. In Proceedings of Second Usenix Workshop on Electronic Commerce, pages 1-11, 1996.
3. R. J. Anderson and M. G. Kuhn. *Low Cost Attacks on Tamper Resistant Devices*. In Proceedings of the 5th Security Protocols Workshop, Lecture Notes in Computer Science 1361, pages 125-136. Springer-Verlag, Berlin, 1998.
4. P. Antognetti and G. Massobrio. *Semiconductor Device Modeling with SPICE*. McGraw Hill, 1988.
5. K. Bernstein. *High Speed CMOS Design Styles*. Kluwer Academic Publishers, 1998.
6. D. S. Boning and S. Nassif. *Models of Process Variations in Device and Interconnect*. In A. Chandrakasan, W. Bowhill, and F. Fox, editors, *Design of High Performance Microprocessor Circuits*, chapter 6. IEEE Press, 2000.
7. D. Chinnery and K. Keutzer. *Closing the Gap Between ASIC & Custom*. Kluwer Academic Publishers, 2002.
8. F. Dartu and L. T. Pileggi. *Calculating worst-case gate delays due to dominant capacitance coupling*. In Proceedings of the 34th annual conference on Design automation conference, pages 46-51. ACM Press, 1997.
9. S. Devadas, A. Ghosh, and K. Keutzer. *Logic Synthesis*. McGraw Hill, New York, NY, 1994.
10. B. Gassend, D. Clarke, M. van Dijk, and S. Devadas. *Controlled Physical Random Functions*. In Proceedings of the 18th Annual Computer Security Conference, December 2002.
11. K. Lofstrom, W. R. Daasch, and D. Taylor. *IC Identification Circuit Using Device Mismatch*. In Proceedings of ISSCC 2000, pages 372-373, February 2000.
12. P. S. Ravikanth. *Physical One-Way Functions*. PhD thesis, Massachusetts Institute of Technology, 2001.
13. S. W. Smith and S. H. Weingart. *Building a High-Performance, Programmable Secure Coprocessor*. In Computer Networks (Special Issue on Computer Network Security), volume 31, pages 831-860, April 1999.
14. N. Weste and K. Eshraghian. *Principles of CMOS VLSI Design: A Systems Perspective*. Addison Wesley, 1985.
15. H. Wong and Y. Taur. *Three-dimensional atomistic simulation of discrete random dopant distribution effects in sub-0.1 um MOSFETs*. In IEDM Technical Digest, pages 705-708, 1993.
16. B. S. Yee. *Using Secure Coprocessors*. PhD thesis, Carnegie Mellon University, 1994.