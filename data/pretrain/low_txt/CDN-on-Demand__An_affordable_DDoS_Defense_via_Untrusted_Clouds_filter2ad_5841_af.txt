# Secure Storage and Distribution

Several proposals have been made to enable secure websites to utilize Content Delivery Networks (CDNs) without sharing their private keys. One such proposal is SSL-Splitting, which separates the encryption and authentication of SSL records. In this method, the CDN stores objects in plain text, while the content origin performs the SSL handshake with the client and provides only the negotiated encryption key to the CDN. For each SSL record, the CDN encrypts the data, and the content origin provides the authentication code, preventing the CDN from modifying the content. However, SSL-Splitting keeps the content origin involved throughout the connection, making it vulnerable to clogging Denial-of-Service (DoS) attacks.

SINE (Secure Integrity for the Web) addresses this issue by having the content origin compute an authentication tag for web pages rather than SSL records. The client retrieves the tags from the content origin over a secure (HTTPS) connection and the web pages from the CDN. In SINE, the content origin is only involved at the beginning of the connection for sending authentication tags. HTTPi (HTTP with Integrity) attaches authentication tags to web objects, allowing object caching while securing transmissions over HTTP. Choi et al. propose an alternative protocol to HTTPS that provides only authentication and requires changes to current Internet caching mechanisms.

All these proposals [9], [13], [36], [23] require modifications to clients (web browsers) for parsing and verifying the authentication tags before presenting web content. Such changes typically involve significant deployment efforts and force websites to support legacy clients even after the changes are accepted by major browsers.

Recent work on Information-Centric Networking (ICN) ties security to objects. Specifically, the Named Data Networking (NDN) paradigm, part of ICN efforts, suggests that the sender signs all web objects it sends. However, supporting ICN requires major changes to Internet infrastructure. In contrast, the clientless secure-objects mechanism establishes a trusted JavaScript agent (the RootJS), avoiding any changes to clients' browsers or CDN/cloud infrastructure. As shown in experiments, clientless secure-objects provide a practical and lightweight implementation for some ICN paradigms.

Liang et al. studied the current practices of supporting HTTPS websites in CDNs [24]. They found that most CDNs use the website's private key to handle HTTPS clients. To address these issues, they suggest using DANE (DNS-Based Authentication of Named Entities), a recently proposed DNS extension that relies on DNSSEC and requires changes to the clients' certificate validation mechanisms. These changes present formidable obstacles.

# CDN-like DoS Defenses Using Clouds

CDN-on-Demand leverages low-cost, untrusted Infrastructure-as-a-Service (IaaS) clouds to protect websites against DoS attacks. Broberg et al. [8] proposed using storage clouds as a lower-cost alternative to basic CDN services, providing services using multiple machines located closer to the clients. However, they did not address DoS attacks or other security challenges. Their cost savings reflect the high premium of CDN providers at the time. In contrast, CDN-on-Demand allows significant cost savings by using cloud resources only when necessary, to handle DoS attacks or flash crowds.

Several works have proposed using clouds to provide scalable DoS-prevention services, focusing on filtering different types of DoS traffic. Some, like [20], take a different approach by permanently migrating the service to the cloud and reassigning tasks to different cloud nodes to deal with DoS attacks. CDN-on-Demand takes an on-demand approach, focusing on ensuring content security via untrusted providers and mitigating bandwidth-DoS (clogging) attacks on the communication with the content origin.

Many proposals and commercial products exist for mitigating bandwidth-DoS attacks, a fundamental challenge in ensuring Internet availability. CDN-on-Demand mechanisms for ensuring connectivity to the content origin build on some of these ideas. First, we facilitate DoS defenses by routing via cloud nodes, creating an overlay network. This is related to many works on mitigating DoS attacks using overlay routing, e.g., [22]. Second, we use efficient port-based filtering of spoofed traffic, extending the technique in [6].

# Conclusions and Future Work

Website operators face numerous challenges in ensuring efficient, low-latency, high-availability, and secure service to globally dispersed users. Network conditions can change rapidly due to flash crowds and DoS attacks. CDNs typically meet these challenges by offering automated and scalable content distribution. However, many sites cannot afford CDN services and prefer to use one or several self-managed servers or cloud machines, which offer reduced costs under normal conditions but do not address DoS attacks.

To tackle this challenge, we presented CDN-on-Demand, an automated system allowing websites, even small ones, to mitigate powerful DoS attacks with minimal operational costs and easy, automated deployment. CDN-on-Demand uses IaaS cloud services to deploy proxy servers, but only when required. It does not require trusting the IaaS providers with long-term keys and secrets and mitigates attacks targeting the essential communication between the content origin and the cloud nodes.

**Future Work:**
1. Extending the clientless secure-objects to mitigate traffic analysis attacks where proxies learn the set of users sharing a private object or when they access it.
2. Improving the performance of public object decapsulation, e.g., by encapsulating several objects on the same page under one signature.
3. Implementing a kernel module for the loss-resilient tunnel application at the origin-gateway to improve performance under saturating conditions.

# Acknowledgments

This work was supported by grant 1354/11 from the Israeli Science Foundation (ISF) and grants from the Check Point Institute for Information and Security (CPIIS) and the Ministry of Science, Technology, and Space, Israel.

# References

[1] ADVANCED NETWORK ARCHITECTURE GROUP. Spoofer Project. http://spoofer.csail.mit.edu, May 2015.
[2] AFERGAN, M., ELLIS, A., SUNDARAM, R., AND RAHUL, H. Method and System for Protecting Web Sites from Public Internet Threats, Aug. 21 2007. US Patent 7,260,639.
[3] AHLGREN, B., DANNEWITZ, C., IMBRENDA, C., KUTSCHER, D., AND OHLMAN, B. A Survey of Information-Centric Networking. IEEE Communications Magazine 50, 7 (2012), 26–36.
[4] AHN, L. V., BLUM, M., HOPPER, N. J., AND LANGFORD, J. CAPTCHA: Using Hard AI Problems for Security. In EUROCRYPT (2003), Springer-Verlag, pp. 294–311.
[5] ALEXA WEB INFORMATION COMPANY. Top Sites. http://www.alexa.com/topsites, 2015.
[6] BADISHI, G., HERZBERG, A., AND KEIDAR, I. Keeping Denial-of-Service Attackers in the Dark. IEEE Transactions on Dependable and Secure Computing 4, 3 (2007), 191–204.
[7] BEVERLY, R., KOGA, R., AND CLAFFY, K. Initial Longitudinal Analysis of IP Source Spoofing Capability on the Internet. Internet Society Article, July 2013.
[8] BROBERG, J., BUYYA, R., AND TARI, Z. MetaCDN: Harnessing Storage Clouds for High Performance Content Delivery. Journal of Network and Computer Applications 32, 5 (2009), 1012–1022.
[9] CHOI, T., AND GOUDA, M. G. HTTPI: An HTTP with Integrity. In Computer Communications and Networks (ICCCN) (2011), IEEE, pp. 1–6.
[10] CLOUDFLARE INC. CloudFlare Advanced DDoS Protection. https://www.cloudflare.com/ddos.
EASTDAKOTA. How Much Traffic is Too Much Traffic For CloudFlare? Online at Hacker News, Jan 2013.
[11]
[12] FU, K., KAASHOEK, M. F., AND MAZIERES, D. Fast and Secure Distributed Read-only File System. In Symposium on Operating System Design & Implementation (2000), USENIX Association, pp. 13–34.
[13] GASPARD, C., GOLDBERG, S., ITANI, W., BERTINO, E., AND NITA-ROTARU, C. SINE: Cache-Friendly Integrity for the Web. In Workshop on Secure Network Protocols (2009), IEEE, pp. 7 – 12.
[14] GEVA, M., HERZBERG, A., AND GEV, Y. Bandwidth distributed denial of service: Attacks and defenses. IEEE Security & Privacy 12, 1 (2014), 54–61.
[15] GHALI, C., TSUDIK, G., AND UZUN, E. Network-Layer Trust in Named-Data Networking. Computer Communication Review 44, 5 (2014), 12–19.
[16] GHODSI, A., SHENKER, S., KOPONEN, T., SINGLA, A., RAGHAVAN, B., AND WILCOX, J. Information-Centric Networking: Seeing the Forest for the Trees. In HotNets (2011), ACM, pp. 1–6.
[17] GILAD, Y., AND HERZBERG, A. LOT: A Defense Against IP Spoofing and Flooding Attacks. ACM Transactions on Information and System Security 15, 2 (July 2012), 6:1–6:30.
[18] HOFFMAN, P., AND SCHLYTER, J. The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA. RFC 6698 (Proposed Standard), Aug. 2012.
[19] HOSTGATORHOST. Cloudflare Free Plan. Web Hosting Talk, Mar 2014.
[20] JIA, Q., WANG, H., FLECK, D., LI, F., STAVROU, A., AND POWELL, W. Catch Me If You Can: A Cloud-Enabled DDoS Defense. In International Conference on Dependable Systems and Networks (June 2014), pp. 264–275.
[21] KANG, M. S., LEE, S. B., AND GLIGOR, V. D. The Crossfire Attack. In IEEE Symposium on Security and Privacy (2013), IEEE Computer Society, pp. 127–141.
[22] KEROMYTIS, A. D., MISRA, V., AND RUBENSTEIN, D. SOS: Secure Overlay Services. In SIGCOMM (2002), vol. 32, 4 of Computer Communication Review, ACM Press, pp. 61–72.
[23] LESNIEWSKI-LAAS, C., AND KAASHOEK, M. F. SSL Splitting: Securely Serving Data from Untrusted Caches. Computer Networks 48, 5 (2005), 763–779.
[24] LIANG, J., JIANG, J., DUAN, H., LI, K., WAN, T., AND WU, J. When HTTPS Meets CDN: A Case of Authentication in Delegated Service. In IEEE Symposium on Security and Privacy (2014).
[25] LIU, X., YANG, X., AND LU, Y. To Filter or to Authorize: Network-Layer DoS Defense Against Multimillion-Node Botnets. In SIGCOMM (2008), ACM, pp. 195–206.
[26] MIU, T. T., HUI, A. K., LEE, W., LUO, D. X., CHUNG, A. K., AND WONG, J. W. Universal DDoS Mitigation Bypass. Black Hat USA (2013).
[27] NEUSTAR. State of DDoS Protection, 2012.
[28] PARNO, B., WENDLANDT, D., SHI, E., PERRIG, A., MAGGS, B. M., AND HU, Y.-C. Portcullis: Protecting Connection Setup from Denial-of-Capability Attacks. In SIGCOMM (2007), J. Murai and K. Cho, Eds., ACM, pp. 289–300.
[29] PAXSON, V. An Analysis of Using Reflectors for Distributed Denial-of-Service Attacks. Computer Communication Review 31, 3 (2001), 38–47.
[30] Planet-lab. http://www.planet-lab.org/.
[31] PRINCE, M. The DDoS That Almost Broke the Internet. CloudFlare Blog, April 2013.
[32] RABIN, M. O. Efficient Dispersal of Information for Security, Load Balancing, and Fault Tolerance. Journal of the ACM 36, 2 (1989), 335–348.
[33] RESCORLA, E., AND SCHIFFMAN, A. The Secure HyperText Transfer Protocol. RFC 2660 (Experimental), Aug. 1999.
[34] RISTENPART, T., TROMER, E., SHACHAM, H., AND SAVAGE, S. Hey, You, Get Off of My Cloud: Exploring Information Leakage in Third-Party Compute Clouds. In Computer and Communications Security (2009), ACM, pp. 199–212.
[35] ROSSOW, C. Amplification Hell: Revisiting Network Protocols for DDoS Abuse. In NDSS (February 2014).
[36] SINGH, K., WANG, H. J., MOSHCHUK, A., JACKSON, C., AND LEE, W. Practical End-to-End Web Content Integrity. In WWW (2012), ACM, pp. 659–668.
[37] SITARAMAN, R. K., KASBEKAR, M., LICHTENSTEIN, W., AND JAIN, M. Overlay Networks: An Akamai Perspective. In Advanced Content Delivery, Streaming, and Cloud Services. John Wiley and Sons, 2014.
[38] STUDER, A., AND PERRIG, A. The Coremelt Attack. In ESORICS (2009), vol. 5789 of LNCS, Springer, pp. 37–52.
[39] TRIUKOSE, S., AL-QUDAH, Z., AND RABINOVICH, M. Content Delivery Networks: Protection or Threat? In ESORICS (2009), vol. 5789 of LNCS, Springer, pp. 371–389.
[40] VISSERS, T., GOETHEM, T. V., JOOSEN, W., AND NIKIFORAKIS, N. Maneuvering Around Clouds: Bypassing Cloud-based Security Providers. In CCS (2015), ACM.
[41] VON AHN, L., MAURER, B., MCMILLEN, C., ABRAHAM, D., AND BLUM, M. reCAPTCHA: Human-based Character Recognition via Web Security Measures. Science 321, 5895 (2008), 1465–1468.
[42] YU, S. Distributed Denial of Service Attack and Defense. Briefs in Computer Science. Springer, 2014.
[43] ZHANG, L., ESTRIN, D., BURKE, J., JACOBSON, V., THORNTON, J. D., SMETTERS, D. K., ZHANG, B., TSUDIK, G., MASSEY, D., PAPADOPOULOS, C., ET AL. Named Data Networking (NDN) Project, 2010.
[44] ZHANG, Y., JUELS, A., REITER, M. K., AND RISTENPART, T. Cross-VM Side Channels and Their Use to Extract Private Keys. In CCS (2012), ACM, pp. 305–316.