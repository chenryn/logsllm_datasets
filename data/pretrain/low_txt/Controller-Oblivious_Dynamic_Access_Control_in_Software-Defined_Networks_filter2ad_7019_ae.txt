### Security and Defense in SDN Systems

Several studies have explored the security of Software-Defined Networking (SDN) systems, or have utilized the dynamic capabilities of SDNs to implement new defenses. For instance, AVANT-GUARD [49] introduces access control mechanisms to mitigate control-plane saturation attacks. TopoGuard [23] and SPHINX [24] focus on attacks that exploit the binding between an endpoint's MAC address and its network location. SecureBinder [25] leverages SDN's global network view to address other types of identifier binding attacks. Programmable BYOD Security [50] uses SDN for mobile-device access control. Security-Mode ONOS (SM-ONOS) [51] develops a permission system for SDN applications on top of the ONOS platform. ConGuard [52] identifies Time of Check to Time of Use (TOCTTOU) bugs in SDN controllers. Finally, DELTA [53], NICE [54], and BEADS [55] provide frameworks for automated testing of SDN systems.

### Conclusion

Existing network access-control approaches are often static and coarse-grained. In this work, we developed DFI, a system that supports event-driven, fine-grained dynamic access control policies using SDN. DFI is implemented for OpenFlow networks and effectively manages consistency issues arising from frequent policy rule changes. It also provides high-level policy specification by resolving hostnames and usernames to identifiers visible in network traffic. Additionally, DFI’s access control is independent of the SDN controller and does not require the use of a specific OpenFlow controller or trust in its integrity.

Our evaluation of DFI shows that it increases the time-to-first-byte latency for data transiting an SDN by 17.8ms under no load, which rises to 86.7ms at 700 flows/sec when the system becomes saturated. This latency can be reduced by running some control-plane components in parallel. We also experimentally evaluated a threat scenario using an authentication-triggered access control policy, uniquely enabled by DFI, and found a significant decrease in both the infection rate and the total number of infected machines from a NotPetya-like worm. These findings suggest that using DFI to enforce event-driven access control policies can enhance network security compared to static approaches.

### References

[1] P. Congdon, B. Aboba, A. Smith, G. Zorn, and J. Roese, "IEEE 802.1X Remote Authentication Dial In User Service (RADIUS) Usage Guidelines," RFC 3580, 2003.

[2] S. Hurley and K. Sood, "NotPetya Technical Analysis: Triple Threat - File Encryption, MFT Encryption, Credential Theft," CrowdStrike, 2017. [Online]. Available: https://www.crowdstrike.com/blog/petrwrap-ransomware-technical-analysis-triple-threat-file-encryption-mft-encryption-credential-theft/

[3] A. Greenberg, "The Untold Story of NotPetya, the Most Devastating Cyberattack in History," Wired, 2018. [Online]. Available: https://www.wired.com/story/notpetya-cyberattack-ukraine-russia-code-crashed-the-world/

[4] S. Hurley and K. Sood, "NotPetya Technical Analysis Part II: Further Findings and Potential for MBR Recovery," CrowdStrike, 2017. [Online]. Available: https://www.crowdstrike.com/blog/petrwrap-technical-analysis-part-2-further-findings-and-potential-for-mbr-recovery/

[5] Risk Based Security, "Equifax Breach: A Wrap-Up," 2018. [Online]. Available: https://www.riskbasedsecurity.com/2017/10/equifax-breach-a-wrap-up/

[6] Illusive Networks, "Attack Brief: Bangladesh Bank SWIFT Attack," 2016. [Online]. Available: http://cdn2.hubspot.net/hubfs/725085/Fact Sheets/2016-09-ILL-1376--w-Attackerbrief-BangladeshSWIFT.pdf

[7] R. Altamini, N. Arora, and A. Kadi, "Anthem Hack," Anthem, 2015. [Online]. Available: https://www.cs.bu.edu/~goldbe/teaching/HW55815/presos/anthem.pdf

[8] A. Jeng, "Minimizing Damage from JP Morgan’s Data Breach," SANS Institute, Tech. Rep., 2015.

[9] K. Jarvis and J. Milletary, "Inside a Targeted Point-of-Sale Data Breach," Dell SecureWorks Counter Threat Unit, Tech. Rep., 2014.

[10] Trend Micro, "Countering the Advanced Persistent Threat Challenge with Deep Discovery," Trend Micro, Tech. Rep. 10, 2013.

[11] SophosLabs, "SophosLabs 2018 Malware Forecast," Sophos, 2018. [Online]. Available: https://media.scmagazine.com/documents/321/sophos-2018-malware-forecast-80124.pdf

[12] R. Ward and B. Beyer, "BeyondCorp: A New Approach to Enterprise Security," login, vol. 39, pp. 5–11, 2014.

[13] "CVE-2009-1925," MITRE, 2015. [Online]. Available: http://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2009-1925

[14] "Project Floodlight." [Online]. Available: http://www.projectfloodlight.org/floodlight/

[15] P. Berde, M. Gerola, J. Hart, Y. Higuchi, M. Kobayashi, T. Koide, B. Lantz, B. O’Connor, P. Radoslavov, W. Snow et al., "ONOS: Towards an Open, Distributed SDN OS," in Proceedings of the Third Workshop on Hot Topics in Software Defined Networking, ACM, 2014, pp. 1–6.

[16] J. Medved, R. Varga, A. Tkacik, and K. Gray, "OpenDaylight: Towards a Model-Driven SDN Controller Architecture," in International Symposium on "A World of Wireless, Mobile and Multimedia Networks" (WoWMoM), June 2014, pp. 1–6.

[17] J. Amann and R. Sommer, "Providing Dynamic Control to Passive Network Security Monitoring," in International Workshop on Recent Advances in Intrusion Detection (RAID), Springer, 2015, pp. 133–152.

[18] H. Kim, J. Reich, A. Gupta, M. Shahbaz, N. Feamster, and R. J. Clark, "Kinetic: Verifiable Dynamic Network Control," in NSDI, 2015, pp. 59–72.

[19] Dell, Inc., "Dell OpenFlow Deployment and User Guide 3.0," 2015. [Online]. Available: http://topics-cdn.dell.com/pdf/force10-sw-defined-ntw-deployment-guide-3-en-us.pdf

[20] Shamus McGillicuddy, "Pica8 Doubles Flow Rule Capacity in Its New OpenFlow 1.3 Switch," 2017. [Online]. Available: http://searchsdn.techtarget.com/news/2240214709/Pica8-doubles-flow-rule-capacity-in-its-new-OpenFlow-13-switch

[21] Centec Networks, "Centec Networks - SDN/OpenFlow Switch - v330," 2017. [Online]. Available: http://www.centecnetworks.com/en/SolutionList.asp?ID=42

[22] Hewlett-Packard Development Company, L.P., "HP Switch Software OpenFlow v1.3 Administrator Guide K/KA/WB 15.17," 2015. [Online]. Available: http://h20566.www2.hpe.com/hpsc/doc/public/display?sp4ts.oid=5354494&docLocale=en_US&docId=emr_na-c04656675

[23] S. Hong, L. Xu, H. Wang, and G. Gu, "Poisoning Network Visibility in Software-Defined Networks: New Attacks and Countermeasures," in NDSS, 2015.

[24] M. Dhawan, R. Poddar, K. Mahajan, and V. Mann, "SPHINX: Detecting Security Attacks in Software-Defined Networks," in NDSS, 2015.

[25] S. Jero, W. Koch, R. Skowyra, H. Okhravi, C. Nita-Rotaru, and D. Bigelow, "Identifier Binding Attacks and Defenses in Software-Defined Networks," in 26th USENIX Security Symposium (USENIX Security 17), USENIX Association, 2017, pp. 415–432.

[26] B. E. Ujcich, S. Jero, A. Edmundson, Q. Wang, R. Skowyra, J. Landry, A. Bates, W. H. Sanders, C. Nita-Rotaru, and H. Okhravi, "Cross-App Poisoning in Software-Defined Networking," in Conference on Computer and Communications Security (CCS18), 2018, pp. 648–663.

[27] B. Yan, Y. Xu, and H. J. Chao, "Adaptive Wildcard Rule Cache Management for Software-Defined Networks," IEEE/ACM Transactions on Networking, vol. 26, no. 2, pp. 962–975, April 2018.

[28] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey, "VeriFlow: Verifying Network-Wide Invariants in Real Time," in NSDI, USENIX, 2013.

[29] R. Sherwood, G. Gibb, K.-K. Yap, G. Appenzeller, M. Casado, N. McKeown, and G. M. Parulkar, "Can the Production Network Be the Testbed?" in 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI), 2010, pp. 365–378.

[30] P. Kazemian, M. Chan, H. Zeng, G. Varghese, N. McKeown, and S. Whyte, "Real-Time Network Policy Checking Using Header Space Analysis," in NSDI, 2013, pp. 1–13.

[31] R. Durairajan, J. Sommers, and P. Barford, "Controller-Agnostic SDN Debugging," in CoNEXT, 2014.

[32] X. Jin, J. Gossels, J. Rexford, and D. Walker, "CoVisor: A Compositional Hypervisor for Software-Defined Networks," in Proceedings of the 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2015, pp. 87–101.

[33] Google Developers, "Protocol Buffers Version 3 Language Specification," 2018. [Online]. Available: https://developers.google.com/protocol-buffers/docs/reference/proto3-spec

[34] Mininet Project, "cbench," GitHub repository, 2013. [Online]. Available: https://github.com/mininet/oflops/tree/master/cbench

[35] R. Pang, M. Allman, M. Bennett, J. Lee, V. Paxson, and B. Tierney, "A First Look at Modern Enterprise Traffic," in Proceedings of the 5th ACM SIGCOMM Conference on Internet Measurement, USENIX Association, 2005, pp. 2–2.

[36] H. Wang, G. Yang, P. Chinprutthiwong, L. Xu, Y. Zhang, and G. Gu, "Towards Fine-Grained Network Security Forensics and Diagnosis in the SDN Era," in Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, ACM, 2018, pp. 3–16.

[37] Carbon Black, "Research: Technical Analysis of Petya/NotPetya Ransomware," 2017. [Online]. Available: https://www.carbonblack.com/2017/06/28/carbon-black-threat-research-technical-analysis-petya-notpetya-ransomware/

[38] J. Gajek, "A Closer Look at Petya’s/NotPetya’s Network Spreading Code," eSentire, 2017. [Online]. Available: https://www.esentire.com/blog/a-closer-look-at-petyasnotpetyas-network-spreading-code/

[39] Symantec, "Patch Management Best Practices," 2010. [Online]. Available: https://support.symantec.com/en_US/article.HOWTO3124.html

[40] BigFix Client Compliance, "Cisco NAC," BigFix, Inc., April 2005.

[41] Microsoft, "Microsoft Network Access Protection (NAP)," 2005. [Online]. Available: http://www.microsoft.com/windowsserver2003/technologies/networking/nap/default.mspx

[42] Cloud Security Alliance, "Software Defined Perimeter," Tech. Rep., December 2013.

[43] Waverley Labs, "Software Defined Perimeter (SDP) Implementation," 2017. [Online]. Available: http://www.waverleylabs.com/services/software-defined-perimeter/

[44] Vidder, "Software Defined Perimeter," 2017. [Online]. Available: https://www.vidder.com/software-defined-perimeter/

[45] M. Casado, M. J. Freedman, J. Pettit, J. Luo, N. McKeown, and S. Shenker, "Ethane: Taking Control of the Enterprise," in Proceedings of the 2007 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, ser. SIGCOMM '07, ACM, 2007, pp. 1–12.

[46] H. Hu, W. Han, G.-J. Ahn, and Z. Zhao, "FLOWGUARD: Building Robust Firewalls for Software-Defined Networks," in Proceedings of the Third Workshop on Hot Topics in Software Defined Networking, ser. HotSDN '14, ACM, 2014, pp. 97–102.

[47] T. Yu, S. K. Fayaz, M. Collins, V. Sekar, and S. Seshan, "PSI: Precise Security Instrumentation for Enterprise Networks," in Proc. NDSS, 2017.

[48] T. O'Connor, W. Enck, W. M. Petullo, and A. Verma, "Pivotwall: SDN-Based Information Flow Control," in Proceedings of the Symposium on SDN Research, ACM, 2018, p. 3.

[49] S. Shin, V. Yegneswaran, P. Porras, and G. Gu, "AVANT-GUARD: Scalable and Vigilant Switch Flow Management in Software-Defined Networks," in Proceedings of the ACM CCS, ser. CCS '13, ACM, 2013, pp. 413–424.

[50] S. Hong, R. Baykov, L. Xu, S. Nadimpalli, and G. Gu, "Towards SDN-Defined Programmable BYOD (Bring Your Own Device) Security," NDSS'16, 2016.

[51] C. Yoon, S. Shin, P. Porras, V. Yegneswaran, H. Kang, M. Fong, B. O'Connor, and T. Vachuska, "A Security-Mode for Carrier-Grade SDN Controllers," in Proceedings of the 33rd Annual Computer Security Applications Conference, ACM, 2017, pp. 461–473.

[52] L. Xu, J. Huang, S. Hong, J. Zhang, and G. Gu, "Attacking the Brain: Races in the SDN Control Plane," in 26th USENIX Security Symposium (USENIX Security 17), USENIX Association, 2017, pp. 451–468.

[53] S. Lee, C. Yoon, C. Lee, S. Shin, V. Yegneswaran, and P. Porras, "DELTA: A Security Assessment Framework for Software-Defined Networks," in Proceedings of NDSS, vol. 17, 2017.

[54] M. Canini, D. Venzano, P. Peresini, D. Kostic, J. Rexford et al., "A NICE Way to Test OpenFlow Applications," in NSDI, vol. 12, no. 2012, 2012, pp. 127–140.

[55] S. Jero, X. Bu, C. Nita-Rotaru, H. Okhravi, R. Skowyra, and S. Fahmy, "BEADS: Automated Attack Discovery in OpenFlow-Based SDN Systems," in Proc. of RAID'17, 2017.