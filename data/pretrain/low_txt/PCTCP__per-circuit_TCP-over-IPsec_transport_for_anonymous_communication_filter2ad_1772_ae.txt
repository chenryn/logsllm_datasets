### 6.6 Future Work

One important area for future investigation is the implementation and performance comparison of other transport proposals, such as TCP-over-DTLS and UDP-OR, with PCTCP in large-scale network emulations. The upcoming transport abstraction layer in Tor [32] should greatly facilitate this task.

Another area for future work is to explore an alternative queuing design for Tor that reduces the number of times data cells are copied. Our current design eliminates the need for circuit queues, as each input buffer directly corresponds to a single output buffer. This means that data can be immediately copied from the input buffer to the output buffer after encryption or decryption, thereby reducing overhead and improving efficiency.

### 7. Conclusion

In this work, we recognize the importance of the Tor network as a privacy-preserving tool and aim to enhance its performance for interactive applications. To achieve this, we propose PCTCP, a new anonymous communication transport design for Tor that allows each circuit to use a separate kernel-level TCP connection protected by IPsec. Our design is easily deployable and requires minimal changes to routers. PCTCP avoids the deployability and performance issues associated with TCP-over-DTLS, which uses a user-level TCP stack. Experimental evaluations show significant performance improvements, with response times improved by more than 60% and download times by approximately 30% compared to standard Tor, while maintaining the same threat model.

### Acknowledgements

We thank the anonymous reviewers for their valuable comments and suggestions. We also acknowledge the financial support provided by NSERC, ORF, and The Tor Project, Inc.

### 8. References

[1] iPlane: Data. http://iplane.cs.washington.edu/data/data.html. Accessed Feb. 2013.
[2] Net Index Dataset. http://www.netindex.com/source-data/. Accessed Feb. 2013.
[3] OpenSwan. https://www.openswan.org/projects/openswan/. Accessed Feb. 2013.
[4] M. Akhoondi, C. Yu, and H. V. Madhyastha. LASTor: A Low-Latency AS-Aware Tor Client. In Proceedings of the 2012 IEEE Symposium on Security and Privacy, SP '12, pages 476–490, Washington, DC, USA, 2012. IEEE Computer Society.
[5] M. AlSabah, K. Bauer, and I. Goldberg. Enhancing Tor's Performance Using Real-Time Traffic Classification. In Proceedings of the 2012 ACM Conference on Computer and Communications Security, CCS '12, pages 73–84. ACM, 2012.
[6] M. AlSabah, K. Bauer, I. Goldberg, D. Grunwald, D. McCoy, S. Savage, and G. M. Voelker. DefenestraTor: Throwing Out Windows in Tor. In 11th Privacy Enhancing Technologies Symposium, pages 134–154, July 2011.
[7] J. Appelbaum. Tor and NAT Devices: Increasing Bridge & Relay Reachability or Enabling the Use of NATâ ˘A¸SPMP and UPnP by Defaults. https://trac.torproject.org/projects/tor/attachment/ticket/4960/tor-nat-plan.pdf, August 2012. Accessed Feb. 2013.
[8] K. Bauer, M. Sherr, D. McCoy, and D. Grunwald. ExperimenTor: A Testbed for Safe and Realistic Tor Experimentation. In Proceedings of the 4th USENIX Workshop on Cyber Security Experimentation and Test (CSET), pages 51–59, August 2011.
[9] P. Boucher, A. Shostack, and I. Goldberg. Freedom Systems 2.0 Architecture. White paper, Zero Knowledge Systems, Inc., December 2000.
[10] T. Braun, C. Diot, A. Hoglander, and V. Roca. An Experimental User-Level Implementation of TCP. Technical Report RR-2650, INRIA, Sept. 1995.
[11] Z. Brown. Pragmatic IP Anonymity. http://www.cypherspace.org/cebolla/cebolla.pdf, June 2002. Accessed Feb. 2013.
[12] T. Dierks and E. Rescorla. RFC 5246—The Transport Layer Security (TLS) Protocol Version 1.2. http://www.ietf.org/rfc/rfc5246.txt, August 2008.
[13] R. Dingledine. Tor and Circumvention: Lessons Learned. In Proceedings of the 31st Annual Conference on Advances in Cryptology (CRYPTO), pages 485–486, August 2011.
[14] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The Second-Generation Onion Router. In Proceedings of the 13th USENIX Security Symposium, pages 303–320, August 2004.
[15] R. Dingledine and S. Murdoch. Performance Improvements on Tor or, Why Tor is Slow and What We’re Going to Do about It. http://www.torproject.org/press/presskit/2009-03-11-performance.pdf, March 2009.
[16] A. Edwards and S. Muir. Experiences Implementing a High-Performance TCP in User-Space. In Proceedings of the Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication, SIGCOMM '95, pages 196–205. ACM, 1995.
[17] D. Gopal and N. Heninger. Torchestra: Reducing Interactive Traffic Delays over Tor. In Proceedings of the 2012 ACM Workshop on Privacy in the Electronic Society (WPES 2012), pages 31–42. ACM, 2012.
[18] R. Jansen, K. Bauer, N. Hopper, and R. Dingledine. Methodically Modeling the Tor Network. In Proceedings of the USENIX Workshop on Cyber Security Experimentation and Test (CSET 2012), August 2012.
[19] R. Jansen and N. Hopper. Shadow: Running Tor in a Box for Accurate and Efficient Experimentation. In Proceedings of the 19th Network and Distributed Security Symposium, February 2012.
[20] R. Jansen, N. Hopper, and Y. Kim. Recruiting New Tor Relays with BRAIDS. In Proceedings of the 17th ACM Conference on Computer and Communications Security, CCS '10, pages 319–328. ACM, 2010.
[21] R. Jansen, P. Syverson, and N. Hopper. Throttling Tor Bandwidth Parasites. In 21st USENIX Security Symposium, August 2012.
[22] S. Kent and R. Atkinson. RFC 2401—Security Architecture for the Internet Protocol. http://www.ietf.org/rfcs/rfc2401.txt, November 1998.
[23] T. Kohno, A. Broido, and K. C. Claffy. Remote Physical Device Fingerprinting. IEEE Trans. Dependable Secur. Comput., 2(2):93–108, Apr. 2005.
[24] D. McCoy, K. Bauer, D. Grunwald, T. Kohno, and D. Sicker. Shining Light in Dark Places: Understanding the Tor Network. In Proceedings of the 8th Privacy Enhancing Technologies Symposium, pages 63–76, July 2008.
[25] J. McLachlan, A. Tran, N. Hopper, and Y. Kim. Scalable Onion Routing with Torsk. In Proceedings of the 16th ACM Conference on Computer and Communications Security, CCS '09, pages 590–599. ACM, 2009.
[26] P. Mittal, F. Olumoﬁn, C. Troncoso, N. Borisov, and I. Goldberg. PIR-Tor: Scalable Anonymous Communication Using Private Information Retrieval. In Proceedings of the 20th USENIX Security Symposium, August 2011.
[27] W. B. Moore, C. Wacek, and M. Sherr. Exploring the Potential Benefits of Expanded Rate Limiting in Tor: Slow and Steady Wins the Race with Tortoise. In Proceedings of the 27th Annual Computer Security Applications Conference (ACSAC), pages 207–216, December 2011.
[28] S. J. Murdoch. Comparison of Tor Datagram Designs. Tor Project Technical Report, November 2011.
[29] T.-W. J. Ngan, R. Dingledine, and D. S. Wallach. Building Incentives into Tor. In Proceedings of Financial Cryptography, pages 238–256, January 2010.
[30] J. Padhye, V. Firoiu, D. Towsley, and J. Kurose. Modeling TCP Throughput: A Simple Model and Its Empirical Validation. In Proceedings of the ACM SIGCOMM '98 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication, SIGCOMM '98, pages 303–314. ACM, 1998.
[31] J. Reardon and I. Goldberg. Improving Tor Using a TCP-over-DTLS Tunnel. In Proceedings of the 18th USENIX Security Symposium, August 2009.
[32] A. Shepard. Build Abstraction Layer Around TLS. https://trac.torproject.org/projects/tor/ticket/6465. Accessed Feb. 2013.
[33] M. Sherr, M. Blaze, and B. T. Loo. Scalable Link-Based Relay Selection for Anonymous Routing. In PETS '09: Proceedings of the 9th International Symposium on Privacy Enhancing Technologies, pages 73–93, Berlin, Heidelberg, 2009. Springer-Verlag.
[34] C. Shue, Y. Shin, M. Gupta, and J. Y. Choi. Analysis of IPSec Overheads for VPN Servers. In Proceedings of the First International Conference on Secure Network Protocols, NPSEC'05, pages 25–30, Washington, DC, USA, 2005. IEEE Computer Society.
[35] R. Snader and N. Borisov. A Tune-up for Tor: Improving Security and Performance in the Tor Network. In Proceedings of the Network and Distributed Security Symposium (NDSS), February 2008.
[36] A. H. T. Kivinen, B. Swander, and V. Volpe. RFC 3947—Negotiation of NAT-Traversal in the IKE. http://www.ietf.org/rfc/rfc3947.txt, January 2005.
[37] C. Tang and I. Goldberg. An Improved Algorithm for Tor Circuit Scheduling. In Proceedings of the 17th ACM Conference on Computer and Communications Security (CCS), pages 329–339, October 2010.
[38] The Tor Project. Tor Metrics Portal: Data. https://metrics.torproject.org/data.html#performance. Accessed Feb. 2013.
[39] The Tor Project. Tor Metrics Portal: Network. http://metrics.torproject.org/network.html. Accessed Feb. 2013.
[40] F. Tschorsch and B. Scheurmann. How (Not) to Build a Transport Layer for Anonymity Overlays. In Proceedings of the ACM Sigmetrics/Performance Workshop on Privacy and Anonymity for the Digital Economy, June 2012.
[41] A. Vahdat, K. Yocum, K. Walsh, P. Mahadevan, D. Kosti´c, J. Chase, and D. Becker. Scalability and Accuracy in a Large-Scale Network Emulator. SIGOPS Oper. Syst. Rev., 36(SI):271–284, Dec. 2002.
[42] C. Viecco. UDP-OR: A Fair Onion Transport Design. http://www.petsymposium.org/2008/hotpets/udp-tor.pdf, 2008. Accessed Feb. 2013.
[43] T. Wang, K. Bauer, C. Forero, and I. Goldberg. Congestion-Aware Path Selection for Tor. In Proceedings of Financial Cryptography and Data Security (FC'12), February 2012.

### Appendix A: Large-Scale Experiments Using a Higher-Bandwidth Topology

To observe the effect of PCTCP in a potential future Tor network with more available bandwidth, we conducted experiments using ExperimenTor with a higher-bandwidth underlying Modelnet network topology. Our overlay Tor network is a scaled-down version, running 400 clients and 20 Tor routers. The routers (ORs) are assigned bandwidth capabilities sampled from the distribution of live Tor network ORs. We tested the performance of PCTCP in this topology under two traffic loads: a light load with a 39:1 web-to-bulk client ratio and a high load with a 9:1 web-to-bulk client ratio.

Figure 8 shows the download time and time-to-first-byte comparisons for Tor and PCTCP under different traffic loads for both web and bulk clients. The figures indicate that, as the traffic load increases (by decreasing the web-to-bulk client ratio), the performance degradation is more pronounced in Tor clients compared to PCTCP clients. For example, for web clients, the median time-to-first-byte remains at 0.9 seconds for PCTCP under both low and high traffic loads, whereas it degrades by approximately 20% for Tor. Similarly, the median download time for PCTCP remains consistent, though the 4th quartile is slightly degraded, while the median download time for Tor clients degrades by more than 30%.

![Performance of Web and Bulk Clients in a High-Bandwidth Network](figure_8.png)

- **(a) Web Clients - Download Time**
- **(b) Web Clients - Time to First Byte**
- **(c) Bulk Clients - Download Time**
- **(d) Bulk Clients - Time to First Byte**