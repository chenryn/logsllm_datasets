### Information Leakage and Security Analysis

**Behavioral Analysis:**
The behavior of the system does not leak any information about the input parameters. This is illustrated by the dashed line in Figure 3, which aligns with the guessing entropy for a key without side-channel information, given by \(0.5(2^w + 1)\).

**Timing Attacks on Exponentiation in \(F_{2^w}\):**
We analyzed a Gezel implementation of the finite-field exponentiation algorithm from [14]. The algorithm takes two arguments: a base \(m\) and an exponent \(k\), and computes \(m^k\) in \(F_{2^w}\). The algorithm is based on similar expansions as the integer multiplication algorithm in the previous example but is more complex due to nested loops. To interpret Figure 4, note that \(\hat{\theta}_w(1) = \theta_w(1)\) and \(\hat{\theta}_w \approx \theta_w\) follow from Proposition 4. We conclude that one timing measurement reveals a quantity of information larger than that contained in the Hamming weight, but it does not completely determine the key. A second measurement, however, can reveal all remaining key information.

**Power Attacks on Multiplication in \(F_{2^w}\):**
We analyzed the power leakage of the finite-field multiplication circuit from the Gezel package. The circuit runs in constant time, and we analyzed the power traces by counting bit transitions, as previously explained. As in the case of integer multiplication, we chose one operand to be secret and one to be public. Figure 5 shows that the entire secret parameter is determined by one power trace. A silicon implementation with similar power consumption will thus be vulnerable to power attacks.

**Scaling-Up:**
The algorithms presented in Section 4 rely on the complete enumeration of the keyspace and therefore do not scale. However, our data exhibits regularity, allowing us to successfully extrapolate to larger bit-widths. Under the assumption that this regularity reflects the structural similarity of the parameterized algorithms, we conclude that the interpretations given for each algorithm hold regardless of the implementation's bit-width.

In all three examples, the number of attack steps performed is surprisingly low compared to the sample size used in many published attacks, e.g., [6, 8, 18, 19]. This is due to the fact that noise is typically dealt with by increasing the number of measurements made. Template attacks [10] use noise models to extract the maximum information from every measurement and demonstrate that key recovery from only a few measurements is indeed possible.

### Related Work

There has been substantial work in information-flow security on detecting or quantifying information leaks, but the results are only partially applicable to the problem of analyzing how much information an adaptive side-channel attacker can extract from a system. Early approaches focused on quantifying the capacity of covert channels between processes in multi-user systems [26, 39, 16]. These models predate the first published side-channel attack against cryptography [18] and are so general that it is unclear whether and how they could be instantiated to address the problem at hand.

Di Pierro et al. [29] show how to quantify the number of statistical tests an observer needs to perform to distinguish two processes in a probabilistic concurrent language. Lowe [21] quantifies information flow in a possibilistic process algebra by counting the number of distinguishable behaviors. Clarkson et al. [12] develop a model for reasoning about an adaptive attacker’s beliefs about the secret, which may also be incorrect.

The information measures proposed by Clark et al. [11] are closest to ours. The authors relate observational equivalence to random variables and use Shannon entropy to quantify the information flow. However, their measure captures the information gain of a passive observer instead of an active attacker: the public input to the system is chosen with respect to a probability distribution and is not under the attacker’s control.

Several approaches in language-based security use security type systems to detect timing side-channels in both sequential and multithreaded settings, see [1, 2, 17] and [36, 32], respectively. A successful type check implies that an attacker cannot gain any information about the secret, even if he exhaustively queries the system. However, such strong guarantees are of unclear significance in the absence of realistic timing models for high-level languages. Information-flow analyses at the hardware level [38, 20] are based on more realistic assumptions about the system but do not model adaptive attackers.

There is a large body of work on side-channel cryptanalysis, particularly on attacks and countermeasures. However, models and theoretical bounds on what side-channel attackers can achieve are only now emerging. Chari et al. [9] are the first to present methods for proving hardware implementations secure. They propose a generic countermeasure for power attacks and prove that it resists a given number of side-channel measurements. Schindler et al. [34] propose a stochastic model for improving the efficiency of key extraction. However, they do not give bounds on what can, in principle, be achieved by their techniques. Micali et al. [25] propose physically observable cryptography, a mathematical model that aims to provide provably secure cryptography on hardware that is only partially shielded. Their model has recently been specialized by Standaert et al. [37], who show how assumptions on the computational capabilities of an attacker can be combined with leakage functions that measure the information revealed by the system’s side-channels. Our model could be used to solve the open problem of instantiating these leakage functions. A detailed investigation of this is the subject of future work.

### Conclusions and Future Work

We have presented a quantitative model for reasoning about adaptive side-channel attacks. It allows us to express an attacker’s remaining uncertainty about a secret as a function of the number of his side-channel measurements. This function provides a relevant metric for assessing a system’s vulnerability to side-channel attacks.

On the theoretical side, our model of adaptive attacks provides a connection between information-theoretic notions of security and physical models of hardware. Its simplicity is reflected in the three-line program (see Section 4.3) that implements this connection. On the practical side, we have applied our model to automatically derive meaningful assertions about the resistance of hardware implementations to adaptive side-channel attacks.

As ongoing work, we are extending our model with statistical techniques for entropy estimation [3, 4]. This allows us to approximate \(\theta\) for larger bit-widths. Our initial experiments are encouraging: we are able to confirm that the presented integer multiplication algorithm reveals one operand’s Hamming weight for implementations with 100 bits per operand and with an error of less than 1%. However, the existing confidence intervals for this estimation are too large for practical use, and as future work, we hope to improve them.

### References

[1] J. Agat. Transforming out Timing Leaks. In Proc. POPL ’00, pages 40-53. ACM.
[2] G. Barthe, T. Rezk, and M. Warnier. Preventing Timing Leaks Through Transactional Branching Instructions. In Proc. QAPL ’05, ENTCS, pages 33-55. Elsevier.
[3] G. Basharin. On a Statistical Estimate for the Entropy of a Sequence of Independent Random Variables. Theory Probab. Appl., 47:333-336, 1959.
[4] T. Batu, S. Dasgupta, R. Kumar, and R. Rubinfeld. The complexity of approximating entropy. In Proc. STOC ’02, pages 678-687. ACM, 2002.
[5] R. Bird. Introduction to Functional Programming using Haskell. Prentice Hall, second edition, 1998.
[6] D. Boneh and D. Brumley. Remote Timing Attacks are Practical. In Proc. USENIX Security Symposium ’03.
[7] C. Cachin. Entropy Measures and Unconditional Security in Cryptography. PhD thesis, ETH Zürich, 1997.
[8] J. Cathalo, F. Koeune, and J.-J. Quisquater. A New Type of Timing Attack: Application to GPS. In Proc. CARDIS ’03, LNCS 2779, pages 291-303. Springer.
[9] S. Chari, C. S. Jutla, J. R. Rao, and P. Rohatgi. Towards Sound Approaches to Counteract Power-Analysis Attacks. In Proc. CRYPTO ’99, LNCS 1666, pages 398-412. Springer.
[10] S. Chari, J. R. Rao, and P. Rohatgi. Template Attacks. In Proc. CHES ’02, LNCS 2523, pages 13-28. Springer.
[11] D. Clark, S. Hunt, and P. Malacaria. Quantitative Information Flow, Relations and Polymorphic Types. J. Log. Comput., 18(2):181-199, 2005.
[12] M. Clarkson, A. Myers, and F. Schneider. Belief in Information Flow. In Proc. CSFW ’05, pages 31-45. IEEE.
[13] T. H. Cormen, C. Stein, R. L. Rivest, and C. E. Leiserson. Introduction to Algorithms. McGraw-Hill Higher Education, second edition, 2001.
[14] M. Davio, J. P. Deschamps, and A. Thayse. Digital Systems with Algorithm Implementation. John Wiley & Sons, Inc., 1983.
[15] K. Gandolfi, C. Mourtel, and F. Olivier. Electromagnetic analysis: Concrete results. In Proc. CHES ’01, LNCS 2162, pages 251-261. Springer.
[16] J. W. Gray. Toward a Mathematical Foundation for Information Flow Security. JCS, 1(3-4):255-294, 1992.
[17] D. Hedin and D. Sands. Timing Aware Information Flow Security for a JavaCard-like Bytecode. In BYTECODE ’05, ENTCS. Elsevier.
[18] P. Kocher. Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems. In Proc. CRYPTO ’96, LNCS 1109, pages 104-113. Springer.
[19] P. Kocher, J. Jaffe, and B. Jun. Differential Power Analysis. In Proc. CRYPTO ’99, LNCS 1666, pages 388-397. Springer.
[20] B. Köpf and D. Basin. Timing-Sensitive Information Flow Analysis for Synchronous Systems. In Proc. ESORICS ’06, LNCS 4189, pages 243-262. Springer.
[21] G. Lowe. Quantifying Information Flow. In Proc. CSFW ’02, pages 18-31. IEEE.
[22] J. L. Massey. Guessing and Entropy. In Proc. IEEE Int. Symp. on Info. Th. ’94, page 204. IEEE.
[23] A. Menezes, P. van Oorschot, and S. Vanstone. Handbook of Applied Cryptography. CRC Press, 1996.
[24] T. S. Messerges, E. A. Dabbish, and R. H. Sloan. Power Analysis Attacks of Modular Exponentiation in Smartcards. In Proc. CHES ’99, LNCS 1717, pages 144-157. Springer.
[25] S. Micali and L. Reyzin. Physically Observable Cryptography (Extended Abstract). In Proc. TCC ’04, LNCS 2951, pages 278-296. Springer.
[26] J. K. Millen. Covert Channel Capacity. In Proc. IEEE Symp. on Security and Privacy ’87, pages 60-66. IEEE.
[27] F. N. Najm. A Survey of Power Estimation Techniques in VLSI Circuits. IEEE Transactions on VLSI Systems, 2(4):446-455, 1994.
[28] D. A. Osvik, A. Shamir, and E. Tromer. Cache Attacks and Countermeasures: the Case of AES. In Proc. CT-RSA ’06, LNCS 3860, pages 1-20. Springer.
[29] A. D. Pierro, C. Hankin, and H. Wiklicky. Approximate Non-Interference. In Proc. CSFW ’02, pages 3-17. IEEE.
[30] J. O. Pliam. On the Incomparability of Entropy and Marginal Guesswork in Brute-Force Attacks. In Proc. INDOCRYPT ’00, LNCS 1977, pages 67-79. Springer.
[31] J.-J. Quisquater and D. Samyde. ElectroMagnetic Analysis (EMA): Measures and Counter-Measures for Smart Cards. In Proc. E-smart ’01, LNCS 2140, pages 200-210. Springer.
[32] A. Sabelfeld and D. Sands. Probabilistic Noninterference for Multi-threaded Programs. In Proc. POPL ’98, pages 355-364. ACM.
[33] P. Schaumont, D. Ching, and I. Verbauwhede. An Interactive Codesign Environment for Domain-Specific Coprocessors. ACM Transactions on Design Automation for Electronic Systems, 11(1):70-87, 2006.
[34] W. Schindler, K. Lemke, and C. Paar. A Stochastic Model for Differential Side-Channel Cryptanalysis. In Proc. CHES ’05, LNCS 3659, pages 30-46. Springer.
[35] C. Shannon. A Mathematical Theory of Communication. Bell System Technical Journal, 27:379-423 and 623-656, July and October 1948.
[36] G. Smith and D. Volpano. Secure Information Flow in a Multi-Threaded Imperative Language. In Proc. POPL ’98, pages 355-364. ACM.
[37] F.-X. Standaert, E. Peeters, C. Archambeau, and J.-J. Quisquater. Towards Security Limits in Side-Channel Attacks. In Proc. CHES ’06, LNCS 4249, pages 30-45. Springer.
[38] T. Tolstrup. Language-based Security for VHDL. PhD thesis, Technical University of Denmark, 2007.
[39] J. Wittbold and D. Johnson. Information flow in nondeterministic systems. In Proc. IEEE Symp. on Security and Privacy ’90, pages 144-161. IEEE.
[40] L. Zhong, S. Ravi, A. Raghunathan, and N. Jha. Power Estimation Techniques for Cycle-Accurate Functional Descriptions of Hardware. In Proc. ICCAD ’04, pages 668-675. ACM.