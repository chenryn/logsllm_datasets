### 5.2. Cumulative Authentication

In this section, we present a cumulative authentication mechanism that allows a message to be authenticated with a single Message Authentication Code (MAC) and an ordered list of nodes traversed by the packet.

#### 5.2.1. Cumulative Authentication Mechanism

We first describe the cumulative authentication mechanism in the context where private keys are shared between the authenticating node and each node on the path. Each packet authenticated in this manner maintains a path authenticator and an address list. As the packet traverses a node, the node appends its address to the address list and updates the path authenticator. Specifically, the node replaces the existing path authenticator with a new MAC computed over the received path authenticator and the packet’s immutable fields.

Consider the example in Figure 11, where a packet \( p \) is being authenticated along a path from node A to node E, with the final destination being node T. The MACs at each node are computed as follows:
- \( h_a = \text{MAC}_{TA}(0 \| p) \)
- \( h_b = \text{MAC}_{TB}(h_a \| p) \)
- \( h_c = \text{MAC}_{TC}(h_b \| p) \)
- \( h_d = \text{MAC}_{TD}(h_c \| p) \)
- \( h_e = \text{MAC}_{TE}(h_d \| p) \)

When the packet reaches the receiver, if the path authenticator was initially set to a well-known value (such as 0), the receiver can reconstruct the expected final path authenticator value given the address list. If the reconstructed value matches the received value, the packet is deemed authentic and is confirmed to have traversed each node in the address list.

#### 5.2.2. Security Properties

Cumulative authentication also resists the removal of previous nodes from the address list. For instance, if an attacker C wishes to remove B from the address list in Figure 11, it must obtain \( h_a \) to derive a valid \( h_c = \text{MAC}_{TC}(h_a \| p) \). Since inverting B’s MAC is infeasible, the attacker generally needs the cooperation of the node immediately before the node to be removed. This mechanism does not prevent the second node from removing the first node, but since the first node is the source node, this is equivalent to the second node dropping the original packet and originating a new packet of the same type to the destination.

#### 5.2.3. Use with TESLA Broadcast Authentication

Instead of using private, shared keys for authentication, our cumulative authentication mechanism can also be used with the TESLA broadcast authentication protocol [34, 35]. The authentication can be performed either by the sender of the packet or by each recipient. In the case of a proactive routing protocol like BGP, each node along the path verifies the TESLA "security condition" (that the TESLA keys have not yet been released) and updates the address list and path authenticator using its current TESLA key. The node then buffers the packet for verification. Later, the sender transmits the key required for the verification of its authentication to each node to which the sender transmitted the original routing packet. Each node receiving such an authentication packet verifies the authentication information, appends its previous TESLA key to the authentication packet, and transmits the new authentication packet to each neighbor to which it sent the original routing packet.

In an on-demand protocol, such as Ariadne [14], an initiator floods a route request packet when it needs a route to a destination. Each node along the path updates the address list and path authenticator as described above. When the packet reaches the destination, the destination verifies the TESLA security condition. Alternatively, the destination can include a timestamp, allowing the source to verify the security condition. The destination then adds an authenticator to the path authenticator and address list (and possibly the timestamp) and sends the packet back along the reverse of the route. Each node receiving such a packet includes a key that allows the original authenticator to be reconstructed. If end-to-end authentication is also performed using TESLA, the TESLA key used by the destination for authenticating the path authenticator, address list, and timestamp must be sent to the original sender.

### 5.3. Performance Evaluation

To evaluate the performance of cumulative authentication, we examined the overhead reduction resulting from using cumulative authentication together with Ariadne [14]. We performed 140 simulations, each running over 900 simulated seconds, and examined the number of bytes of overhead transmitted within control packets. When Ariadne was run without cumulative authentication, the total overhead across 50 nodes and 126,000 simulated seconds was 1,997 megabytes, whereas with cumulative authentication, the same total overhead was 1,491 megabytes. This result represents a 25% reduction in routing overhead.

### 6. Conclusion

In this paper, we presented four new mechanisms as building blocks for creating secure distance vector and path vector routing protocols. These mechanisms not only protect the routing protocol against standard routing attacks but are also based on highly efficient symmetric cryptographic techniques, thus helping to protect the routing protocol against denial-of-service attacks. For securing distance vector protocols, our hash tree chain mechanism forces a router to increase the distance (metric) when forwarding a routing table entry. To provide authentication of a received routing update in bounded time, we presented a new mechanism, similar to hash chains, called tree-authenticated one-way chains. For cases where the maximum metric is large, we introduced skiplists, which provide more efficient initial computation cost and more efficient element verification; this mechanism is based on a new cryptographic mechanism called MW-chains. For securing path vector protocols, our cumulative authentication mechanism authenticates the list of routers on the path in a routing update, preventing the removal or reordering of router addresses in the list, using only a single authenticator in the routing update rather than one per router address.

As our economy and critical infrastructure increasingly rely on the Internet, securing routing protocols becomes of critical importance. The routing security mechanisms we have described can be applied to conventional routing protocols, such as those in use in the Internet today, as well as to specialized routing protocols designed for new environments such as multihop wireless ad hoc networking. Our mechanisms provide a foundation on which efficient secure routing protocols can be designed, and we leave the development of such protocols to future work.

### 7. Acknowledgments

We would like to thank Dawn Song for her important feedback on our work. We would also like to thank the anonymous reviewers for their valuable comments on an earlier draft of this paper and for encouraging us to include an evaluation of our proposed security mechanisms.

### References

[1] Stefano Basagni, Kris Herrin, Emilia Rosti, and Danilo Bruschi. Secure Pebblenets. In Proceedings of the Second Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc 2001), pages 156–163, October 2001.

[2] Steven Cheung. An Efficient Message Authentication Scheme for Link State Routing. In Proceedings of the 13th Annual Computer Security Applications Conference, pages 90–98, 1997.

[3] Don Coppersmith and Markus Jakobsson. Almost Optimal Hash Sequence Traversal. In Proceedings of the Sixth International Conference on Financial Cryptography (FC 2002), Lecture Notes in Computer Science. Springer, 2002.

[4] Joan Daemen and Vincent Rijmen. AES Proposal: Rijndael, March 1999.

[5] Bridget Dahill, Kimaya Sanzgiri, Brian Neil Levine, Elizabeth Royer, and Clay Shields. A Secure Routing Protocol for Ad hoc Networks. In Proceedings of the 10th IEEE International Conference on Network Protocols (ICNP ’02), November 2002.

[6] Whitfield Diffie and Martin Hellman. New Directions in Cryptography. IEEE Transactions on Information Theory, IT-22:644–654, November 1976.

[7] Shimon Even, Oded Goldreich, and Silvio Micali. On-Line/Off-Line Digital Signatures. In Advances in Cryptology - Crypto ’89, edited by Gilles Brassard, volume 435 of Lecture Notes in Computer Science, pages 263–277. Springer-Verlag, 1989.

[8] Gregory Finn. Reducing the Vulnerability of Dynamic Computer Networks. Technical Report ISI-RR-88-201, USC/Information Sciences Institute, June 1988.

[9] Brian Gladman. Cryptography Technology: Implementations of AES (Rijndael) in C/C++ and Assembler, June 2002. Available at http://fp.gladman.plus.com/cryptography_technology/rijndael/.

[10] Ralf Hauser, Antoni Przygienda, and Gene Tsudik. Reducing the Cost of Security in Link State Routing. In Proceedings of the 1997 Symposium on Network and Distributed Systems Security (NDSS ’97), pages 93–99, February 1997.

[11] C. Hedrick. Routing Information Protocol. RFC 1058, June 1988.

[12] Andy Heffernan. Protection of BGP Sessions via the TCP MD5 Signature Option. RFC 2385, August 1998.

[13] Yih-Chun Hu, David B. Johnson, and Adrian Perrig. Secure Efficient Distance Vector Routing in Mobile Wireless Ad Hoc Networks. In Fourth IEEE Workshop on Mobile Computing Systems and Applications (WMCSA ’02), pages 3–13, June 2002.

[14] Yih-Chun Hu, Adrian Perrig, and David B. Johnson. Ariadne: A Secure On-Demand Routing Protocol for Wireless Ad Hoc Networks. In Proceedings of the Eighth ACM International Conference on Mobile Computing and Networking (MobiCom 2002), September 2002.

[15] Yih-Chun Hu, Adrian Perrig, and David B. Johnson. Packet Leashes: A Defense against Wormhole Attacks in Wireless Ad Hoc Networks. In Proceedings of IEEE Infocomm 2003, April 2003.

[16] Markus Jakobsson. Fractal Hash Sequence Representation and Traversal. In Proceedings of the 2002 IEEE International Symposium on Information Theory (ISIT ’02), pages 437–444, July 2002.

[17] John Jubin and Janet D. Tornow. The DARPA Packet Radio Network Protocols. Proceedings of the IEEE, 75(1):21–32, January 1987.

[18] Stephen Kent, Charles Lynn, Joanne Mikkelson, and Karen Seo. Secure Border Gateway Protocol (S-BGP) – Real World Performance and Deployment Issues. In Proceedings of the 2000 Symposium on Network and Distributed Systems Security (NDSS ’00), pages 103–116, February 2000.

[19] Jiejun Kong, Petros Zerfos, Haiyun Luo, Songwu Lu, and Lixia Zhang. Providing Robust and Ubiquitous Security Support for Mobile Ad-Hoc Networks. In Proceedings of the Ninth International Conference on Network Protocols (ICNP ’01), pages 251–260, November 2001.

[20] Brijesh Kumar. Integration of Security in Network Routing Protocols. SIGSAC Review, 11(2):18–25, 1993.

[21] Brijesh Kumar and Jon Crowcroft. Integrating Security in Inter Domain Routing Protocols. Computer Communication Review, 23(5):36–51, October 1993.

[22] Ratul Mahajan, David Wetherall, and Tom Anderson. Understanding BGP Misconfiguration. In Proceedings of the SIGCOMM ’02 Conference on Communications Architectures, Protocols and Applications, August 2002.

[23] Gary Malkin. RIP Version 2. RFC 2453, November 1998.

[24] Stephen Matyas, Carl Meyer, and Jonathan Oseas. Generating Strong One-Way Functions with Cryptographic Algorithm. IBM Technical Disclosure Bulletin, 27:5658–5659, 1985.

[25] Ralph C. Merkle. Protocols for Public Key Cryptosystems. In Proceedings of the 1980 IEEE Symposium on Security and Privacy, 1980.

[26] Ralph C. Merkle. A Digital Signature Based on a Conventional Encryption Function. In Advances in Cryptology - Crypto ’87, edited by Carl Pomerance, volume 293 of Lecture Notes in Computer Science, pages 369–378. Springer-Verlag, 1987.

[27] Ralph C. Merkle. A Certified Digital Signature. In Advances in Cryptology - Crypto ’89, edited by Gilles Brassard, volume 435 of Lecture Notes in Computer Science, pages 218–238. Springer-Verlag, 1989.

[28] Sandra Murphy. BGP Security Vulnerabilities Analysis. Internet-Draft, draft-murphy-bgp-vuln-01.txt, October 2002.

[29] OpenSSL Project team. OpenSSL, May 2000. http://www.openssl.org/.

[30] Charles E. Perkins and Pravin Bhagwat. Highly Dynamic Destination-Sequenced Distance-Vector Routing (DSDV) for Mobile Computers. In Proceedings of the SIGCOMM ’94 Conference on Communications Architectures, Protocols and Applications, pages 234–244, August 1994.

[31] Charles E. Perkins and Elizabeth M. Royer. Ad-Hoc On-Demand Distance Vector Routing. In Proceedings of the Second IEEE Workshop on Mobile Computing Systems and Applications (WMCSA’99), pages 90–100, February 1999.

[32] Radia Perlman. Interconnections: Bridges and Routers. Addison-Wesley, 1992.

[33] Adrian Perrig. The BiBa One-Time Signature and Broadcast Authentication Protocol. In Proceedings of the Eighth ACM Conference on Computer and Communications Security (CCS-8), pages 28–37, November 2001.

[34] Adrian Perrig, Ran Canetti, Dawn Song, and J. D. Tygar. Efficient and Secure Source Authentication for Multicast. In Proceedings of the 2001 Network and Distributed System Security Symposium, NDSS ’01, pages 35–46, February 2001.

[35] Adrian Perrig, Ran Canetti, J. D. Tygar, and Dawn Song. The TESLA Broadcast Authentication Protocol. RSA CryptoBytes, 5 (Summer), 2002.

[36] Yakov Rekhter and Tony Li. A Border Gateway Protocol 4 (BGP-4). RFC 1771, March 1995.

[37] Pankaj Rohatgi. A Compact and Fast Hybrid Signature Scheme for Multicast Packet Authentication. In Proceedings of the 6th ACM Conference on Computer and Communications Security, November 1999.

[38] Karen E. Sirois and Stephen T. Kent. Securing the Nimrod Routing Architecture. In Proceedings of the 1997 Symposium on Network and Distributed Systems Security (NDSS ’97), February 1997.

[39] Bradley R. Smith and J.J. Garcia-Luna-Aceves. Securing the Border Gateway Routing Protocol. In Proceedings of Global Internet’96, pages 81–85, November 1996.

[40] Bradley R. Smith, Shree Murthy, and J.J. Garcia-Luna-Aceves. Securing Distance Vector Routing Protocols. In Proceedings of the 1997 Symposium on Network and Distributed Systems Security (NDSS ’97), pages 85–92, February 1997.

[41] Manel Guerrero Zapata and N. Asokan. Securing Ad Hoc Routing Protocols. In Proceedings of the ACM Workshop on Wireless Security (WiSe 2002), September 2002.

[42] Kan Zhang. Efficient Protocols for Signing Routing Messages. In Proceedings of the Symposium on Network and Distributed Systems Security (NDSS ’98), March 1998.

[43] Lidong Zhou and Zygmunt J. Haas. Securing Ad Hoc Networks. IEEE Network Magazine, 13(6):24–30, November/December 1999.