### Expected Time Period and Packet Reception

The maximum expected time period between the first and the last packet of a message is \( N_J \) sender hops (refer to Section 5.4). During this interval, an expected number of packets, less than \( N_J \), will be received. Specifically, the number of additional packets received is given by:

\[
\sum_{i=0}^{c-1} \min\left\{ \frac{c_t}{c - i}, 1 \right\} \leq N_J
\]

To illustrate, consider the following example: For a typical packet length of \( |m_i| = 40 \) bytes, fragmented into \( l = 10 \) packets, with \( c = 200 \) channels, \( c_m = c_n = 1 \) channel for sending and receiving, \( c_t = 50 \) attacker channels for insertion, and a jamming probability of 80%, we find that \( N_J \approx 30,000 \) packets are transmitted by the sender (see Figure 11(b)). This results in the reception of approximately 7,500 packets, requiring a storage capacity of about 290 kbytes on the receiver side. We argue that such storage is readily available on modern notebook or handheld devices.

### Signature Verification

The expected number of packets an attacker must send to insert a message successfully received by the receiver is \( N(p_t) \), where:

\[
p_t = 1 - \prod_{i=0}^{c-1} \min\left\{ \frac{c_t}{c - i}, 1 \right\}
\]

is the probability that a packet inserted by the attacker is successfully received. The expected number of additional messages the attacker can insert during the transfer of a regular message is \( \frac{N_J}{N(p_t)} \), resulting in a total of \( \frac{N_J}{N(p_t)} + 1 \) signature verifications per message transfer. Using the parameters from the above example, this results in approximately 160 signature verifications. Modern hardware can handle this efficiently; for instance, it takes only about 6 seconds to verify 160 ECDSA-256 bit signatures on a typical handheld device with a 206 MHz StrongARM CPU, and less than a second on a notebook-class device [17].

### Comparison of Coordinated and Uncoordinated Frequency Hopping

Let \( f_H \) be the hopping frequency of a given transceiver, and let \( |m^*_i| \propto \frac{1}{f_H} \) be the resulting packet length for a coordinated frequency hopping scheme. \( |M^*_i| \) then denotes the fragment length sent per packet in that scheme. If the fragment length is large enough to include the shortest possible fragment of our UFH scheme (i.e., \( |M^*_i| \geq 1 + |h(·)| \)), our UFH message transfer protocol enables anti-jamming communication without a shared key and achieves the same jamming robustness as the coordinated scheme, albeit with lower throughput and increased storage consumption. More precisely, using the same coding scheme and packet length (i.e., \( |m_i| = |m^*_i| \)) results in the same probability that a packet gets jammed for both coordinated and uncoordinated frequency hopping. However, the hash value added in the UFH scheme reduces the payload per packet to \( |M_i| = |M^*_i| - |h(·)| \), increasing the number of packets per message to \( l = \lceil \frac{|M|}{|M_i|} \rceil > l^* = \lceil \frac{|M|}{|M^*_i|} \rceil \). The relative throughput of the presented UFH protocol compared to coordinated frequency hopping is thus \( \Phi_J = \frac{N_J}{N^*_J} \), where \( N^*_J = N(1 - p_j) \) with \( l = l^* \) (see Figure 12(b)).

### Illustrative Example

We demonstrate the feasibility of the proposed jamming-resistant key establishment protocol by showing a possible implementation for a Bluetooth-like transceiver. Although Bluetooth was not designed to resist advanced jamming attacks, it serves as a representative example for what can be achieved with low-cost hardware. Assuming a sender (receiver) hopping frequency of 1.6 kHz (160 Hz) and a symbol rate of 1 Mbit/s, and 200 frequency channels, we follow current NIST recommendations [4] and advocate a mid-term security level of 128 bits for keys and signatures, and a short-term security level of 112 bits for hash links. Thus, we use 256-bit prime fields for elliptic curves (with \( |Sig(·)| = |PK_X| = 512 \) bits) and a hash size of 112 bits for the hash links. Identities and timestamps are encoded with 64-bit integers. The size of the exchanged messages is \( |M| = 2176 \) bits = 272 bytes (Figure 7). A packet \( m_i \) consists of a message ID (34 bits), a frame ID (6 bits), the payload \( M_i \) (168 bits), and the hash value of the next packet (112 bits). We assume the application of a Reed-Solomon error-correcting code that encodes 8-bit blocks into 15-bit blocks, achieving a jamming ratio of 20% [13]. The length of an encoded packet is thus \( 320 \times \frac{15}{8} = 600 \) bits, fitting well within a hopping slot of \( \frac{1}{1600} \text{ Hz} \times 1 \text{ Mbit/s} = 625 \) bits. The number of packets per message is \( l = \lceil \frac{272}{21} \rceil = 13 \) for uncoordinated and \( l^* = \lceil \frac{272}{35} \rceil = 8 \) for coordinated frequency hopping. The resulting duration for key establishment and the achievable throughput with respect to coordinated frequency hopping are depicted in Figures 12(a) and 12(b), respectively. Even under harsh conditions where 80% of all packets are jammed, the expected duration to establish a key is well below one minute.

### Related Work

Wireless communication jammers have been widely analyzed and categorized based on their capabilities (e.g., broadband or narrowband) and behavior (e.g., constant, random, responsive, sweep) [12, 16, 25]. The jammer models used in prior works [12, 16, 21, 24, 25] cover signal jamming and dummy packet/preamble insertions. Our work extends these models to include protocol-specific DoS attacks, capturing signal jamming, overshadowing, message modification, and insertion.

Spread-spectrum techniques such as DSSS, chirp [2], and frequency hopping [1, 16] achieve frequency diversity over the communication channel. Specific coding strategies [13] can further strengthen jamming resistance by increasing the fraction of the packet that the attacker needs to interfere with to prevent successful decoding at the receiver.

Recent research in sensor networks has focused on detecting and localizing jammers to avoid jammed regions [12, 23, 25] or frequencies [24] during further communications. In [21], the authors note that wired sensor pairs and coordinated and uncoordinated (random) channel hopping can be used for timely delivery of short warning messages in sensor networks. However, these solutions are specific to sensor networking applications and cannot solve the key establishment problem addressed in this paper.

Pre-establishing keys between devices in ad-hoc networks for subsequent frequency hopping communication faces scalability and network dynamics issues. Key-establishment approaches that rely on device proximity [19, 15, 10, 22, 9] can be used but require nodes to be physically close and use non-jammed communication channels (e.g., infrared, wire, or visual). Unlike these approaches, the proposed UFH scheme enables key establishment over longer ranges using radio communication channels.

Bootstrapping coordinated frequency hopping from uncoordinated hopping resembles privacy amplification [5], where secret shared information is distilled from a larger body of partially secret information. To the best of our knowledge, no prior work addresses the anti-jamming/key establishment circular dependency problem in the described setting or proposes a solution to this problem. Additionally, no solutions prior to our UFH scheme enable the transfer of messages of arbitrary length across a jammed channel in the absence of a shared secret.

### Conclusion

In this paper, we address the problem of establishing a shared secret key over a wireless radio channel in the presence of a communication jammer. We tackle the cyclic dependency between anti-jamming spread-spectrum communication and key establishment, proposing Uncoordinated Frequency Hopping (UFH) as a solution. We present a UFH message transfer protocol and illustrate its use in an authenticated Diffie-Hellman protocol. Our detailed analysis shows the feasibility of UFH in terms of execution time and resource requirements, despite lower communication throughput and higher storage and processing costs. UFH achieves the same level of anti-jamming protection as coordinated frequency hopping. An example demonstrates that UFH key establishment can be executed using current technology with a running time well below one minute, even with an 80% jamming probability. We hope our work encourages further research to improve the design and provide more efficient and reliable solutions under a refined threat model.

### Acknowledgment

The authors thank the anonymous reviewers for their thorough reviews and helpful suggestions. This work was supported (in part) by the Swiss National Science Foundation under Grant 200021-116444.

### References

[1] Specification of the Bluetooth system (version 1.2), November 2003.
[2] D. Adamy. A First Course in Electronic Warfare. Artech House, 2001.
[3] ANSI. X9.63-2001: Key Agreement and Key Transport Using Elliptical Curve Cryptography. Technical report, American National Standards Institute, 2001.
[4] E. Barker, W. Barker, W. Burr, W. Polk, and M. Smid. Recommendation for Key Management. NIST Special Publication 800-57, revised, 2006.
[5] C. H. Bennett, G. Brassard, C. Crépeau, and U. Maurer. Generalized Privacy Amplification. IEEE Transactions on Information Theory, 41(6):1915–1923, Nov. 1995.
[6] D. Boneh and X. Boyen. Short Signatures Without Random Oracles. In EUROCRYPT 2004, Springer LNCS 3027.
[7] D. Boneh and M. Franklin. Identity-Based Encryption from the Weil Pairing. SIAM Journal on Computing, 32(3):586–615, 2003.
[8] C. Boyd and A. Mathuria. Protocols for Authentication and Key Establishment. Springer Verlag, 2003.
[9] C. Gehrmann, C. J. Mitchell, and K. Nyberg. Manual Authentication for Wireless Devices. RSA Cryptobytes, 7(1), 2004.
[10] M. T. Goodrich, M. Sirivianos, J. Solis, G. Tsudik, and E. Uzun. Loud and Clear: Human-Verifiable Authentication Based on Audio. In Proceedings of the IEEE International Conference on Distributed Computing Systems, 2006.
[11] C. Karlof, N. Sastry, Y. Li, A. Perrig, and D. Tygar. Distillation Codes and Applications to DoS Resistant Multicast Authentication. In Proceedings of the Network and Distributed Systems Security Symposium (NDSS), 2004.
[12] M. Li, I. Koutsopoulos, and R. Poovendran. Optimal Jamming Attacks and Network Defense Policies in Wireless Sensor Networks. In IEEE International Conference on Computer Communications (INFOCOM), 2007.
[13] G. Lin and G. Noubir. On Link Layer Denial of Service in Data Wireless LANs: Research Articles. Wireless Communications & Mobile Computing, 5(3), 2005.
[14] M. Luby. LT Codes. In Proceedings of the IEEE Symposium on Foundations of Computer Science (FOCS), 2002.
[15] J. M. McCune, A. Perrig, and M. K. Reiter. Seeing-is-Believing: Using Camera Phones for Human-Verifiable Authentication. In Proceedings of the IEEE Symposium on Security and Privacy, 2005.
[16] R. A. Poisel. Modern Communications Jamming Principles and Techniques. Artech House Publishers, 2006.
[17] I. Riedel. Protocols and Elliptic Curve Cryptography on an Embedded Platform. Master’s thesis, Ruhr-Universität Bochum, Germany, 2003.
[18] L. Rizzo. Effective Erasure Codes for Reliable Computer Communication Protocols. ACM SIGCOMM Comput. Commun. Rev., 27(2), 1997.
[19] F. Stajano and R. J. Anderson. The Resurrecting Duckling: Security Issues for Ad-Hoc Wireless Networks. In Proceedings of the 7th International Workshop on Security Protocols, pages 172–194, London, UK, 2000. Springer-Verlag.
[20] Symantec. Securing Enterprise Wireless Networks. White Paper, 2003.
[21] M. Čagalj, S. Čapkun, and J.-P. Hubaux. Wormhole-Based Anti-Jamming Techniques in Sensor Networks. IEEE Transactions on Mobile Computing, 2007.
[22] S. Čapkun and M. Čagalj. Integrity Regions: Authentication Through Presence in Wireless Networks. In WiSe '06: Proceedings of the 5th ACM Workshop on Wireless Security, pages 1–10, New York, NY, USA, 2006. ACM.
[23] A. D. Wood and J. A. Stankovic. Denial of Service in Sensor Networks. IEEE Computer, 35(10):54–62, Oct. 2002.
[24] W. Xu, W. Trappe, and Y. Zhang. Channel Surfing: Defending Wireless Sensor Networks from Jamming and Interference. In ACM Conference on Embedded Networked Sensor Systems (SenSys), 2006.
[25] W. Xu, W. Trappe, Y. Zhang, and T. Wood. The Feasibility of Launching and Detecting Jamming Attacks in Wireless Networks. In ACM International Symposium on Mobile Ad Hoc Networking and Computing (MobiHoc), 2005.