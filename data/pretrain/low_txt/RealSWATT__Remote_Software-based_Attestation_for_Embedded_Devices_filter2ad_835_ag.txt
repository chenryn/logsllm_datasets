### Power Consumption Analysis of the Chip's Operating Modes

The power consumption of the chip is primarily influenced by the wireless communication module, which exhibits varying power usage depending on its transmission mode. Specifically, Bluetooth communication consumes between 95 mA and 130 mA for receiving and transmitting data, while Wi-Fi (IEEE 802.11b/g/n) consumes up to 100 mA for receiving and 240 mA for transmitting. It is important to note that these power levels are only present during active send and receive intervals, and thus should be considered as peak power consumption.

### CPU Power Consumption

The power consumption of the CPU is dependent on its operating frequency and overall usage. For our testing, the syringe pump was configured to operate at the full CPU clock speed of 240 MHz. At this frequency, the power consumption ranges from 30 mA with no CPU usage to 68 mA under full CPU usage. A naive assumption might suggest a 50% CPU usage for attestation, leading to a significantly higher power consumption. However, our implementation utilized the integrated hardware hashing unit, which is more power-efficient than software-based hash calculations.

### Network Traffic Impact

We observed that the additional network traffic required for attestation is negligible for devices that already communicate regularly. In our case study, the syringe pump provides a remote command interface, meaning the wireless communication module is already in use. Therefore, sending and receiving attestation messages only slightly increases the overall power consumption.

### Acknowledgments

This work has been partially funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation)—SFB 1119—236615297 within project S2. Additional support was provided by the DFG Priority Program SPP 2253 Nano Security (Project RAINCOAT—Number: 440059533). Part of this work was conducted within the Huawei Open Lab for Sustainable Security and Safety (OpenS3Lab) at the Technical University Darmstadt. We extend our gratitude to the anonymous reviewers for their valuable feedback.

### References

[1] Martín Abadi, Mihai Budiu, Úlfar Erlingsson, and Jay Ligatti. 2009. Control-Flow Integrity Principles, Implementations, and Applications. ACM Transactions on Information and System Security (TISSEC) 13, 1 (2009). https://doi.org/10.1145/1609956.1609960

[2] Tigist Abera, N. Asokan, Lucas Davi, Jan-Erik Ekberg, Thomas Nyman, Andrew Paverd, Ahmad-Reza Sadeghi, and Gene Tsudik. 2016. C-FLAT: Control-Flow Attestation for Embedded Systems Software. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM. https://doi.org/10.1145/2976749.2978358

[3] Samer Al-Kiswany, Abdullah Gharaibeh, Elizeu Santos-Neto, George Yuan, and Matei Ripeanu. 2008. StoreGPU: Exploiting Graphics Processing Units to Accelerate Distributed Storage Systems. In Proceedings of the 17th International Symposium on High-Performance Distributed Computing (HPDC-17 2008). ACM. https://doi.org/10.1145/1383422.1383443

[4] Omar Alrawi, Chaz Lever, Manos Antonakakis, and Fabian Monrose. 2019. SoK: Security Evaluation of Home-Based IoT Deployments. In IEEE Symposium on Security and Privacy (SP). IEEE. https://doi.org/10.1109/SP.2019.00013

[5] Anna-senpai. 2017. GitHub - Mirai Source Code. Retrieved 2021-04-09 from https://github.com/jgamblin/Mirai-Source-Code

[6] ARM Limited. 2009. Security Technology Building a Secure System Using TrustZone Technology (White Paper).

[7] Frederik Armknecht, Ahmad-Reza Sadeghi, Steffen Schulz, and Christian Wachsmann. 2013. A Security Framework for the Analysis and Design of Software Attestation. In 2013 ACM SIGSAC Conference on Computer and Communications Security, CCS’13. ACM. https://doi.org/10.1145/2508859.2516650

[8] AspenCore. 2019. 2019 Embedded Markets Study. Retrieved 2021-05-07 from https://www.embedded.com/wp-content/uploads/2019/11/EETimes_Embedded_2019_Embedded_Markets_Study.pdf

[9] Kaitlin Boeckl, Michael Fagan, William Fisher, Naomi Lefkovitz, Katerina Megas, Ellen Nadeau, Benjamin Piccarreta, Danna O’Rourke, and Karen Scarfone. 2019. Considerations for Managing Internet of Things (IoT) Cybersecurity and Privacy Risks. https://doi.org/10.6028/NIST.IR.8228

[10] Ferdinand Brasser, Brahim El Mahjoub, Ahmad-Reza Sadeghi, Christian Wachsmann, and Patrick Koeberl. 2015. TyTAN: Tiny Trust Anchor for Tiny Devices. In Proceedings of the 52nd Annual Design Automation Conference. ACM. https://doi.org/10.1145/2744769.2744922

[11] Ferdinand Brasser, Kasper Bonne Rasmussen, Ahmad-Reza Sadeghi, and Gene Tsudik. 2016. Remote Attestation for Low-End Embedded Devices: The Prover’s Perspective. In Proceedings of the 53rd Annual Design Automation Conference, DAC 2016. ACM. https://doi.org/10.1145/2897937.2898083

[12] Claude Castelluccia, Aurélien Francillon, Daniele Perito, and Claudio Soriente. 2009. On the Difficulty of Software-Based Attestation of Embedded Devices. In Proceedings of the 2009 ACM Conference on Computer and Communications Security, CCS 2009. ACM. https://doi.org/10.1145/1653662.1653711

[13] Chien-Ying Chen, Monowar Hasan, and Sibin Mohan. 2018. Securing Real-Time Internet-of-Things. Sensors 18, 12 (2018). https://doi.org/10.3390/s18124356

[14] Boheung Chung, Jeongyeo Kim, and Youngsung Jeon. 2016. On-Demand Security Configuration for IoT Devices. In 2016 International Conference on Information and Communication Technology Convergence (ICTC). IEEE.

[15] Mauro Conti, Nicola Dragoni, and Viktor Lesyk. 2016. A Survey of Man In The Middle Attacks. IEEE Communications Surveys & Tutorials 18, 3 (2016). https://doi.org/10.1109/COMST.2016.2548426

[16] Victor Costan and Srinivas Devadas. 2016. Intel SGX Explained. IACR Cryptol. ePrint Arch. (2016). http://eprint.iacr.org/2016/086

[17] Sanjeev Das, Wei Zhang, and Yang Liu. 2016. A Fine-Grained Control Flow Integrity Approach Against Runtime Memory Attacks for Embedded Systems. IEEE Transactions on Very Large Scale Integration (VLSI) Systems 24, 11 (2016). https://doi.org/10.1109/TVLSI.2016.2548561

[18] Robert I. Davis and Alan Burns. 2011. A Survey of Hard Real-Time Scheduling for Multiprocessor Systems. Comput. Surveys 43, 4 (2011). https://doi.org/10.1145/1978802.1978814

[19] Ghada Dessouky, Tigist Abera, Ahmad Ibrahim, and Ahmad-Reza Sadeghi. 2018. LiteHAX: Lightweight Hardware-Assisted Attestation of Program Execution. In Proceedings of the International Conference on Computer-Aided Design, ICCAD 2018. ACM. https://doi.org/10.1145/3240765.3240821

[20] Karim Eldefrawy, Gene Tsudik, Aurélien Francillon, and Daniele Perito. 2012. SMART: Secure and Minimal Architecture for (Establishing Dynamic) Root of Trust. In 19th Annual Network and Distributed System Security Symposium, NDSS 2012. The Internet Society. https://www.ndss-symposium.org/ndss2012/smart-secure-and-minimal-architecture-establishing-dynamic-root-trust

[21] elm-tech. 2021. GD25Q32 Datasheet. Retrieved 2021-07-26 from https://chipmaster.pro/wp-content/uploads/2019/04/GD25Q32.pdf

[22] elm-tech. 2021. GD25Q32C Datasheet. Retrieved 2021-07-26 from http://www.elm-tech.com/en/products/spi-flash-memory/gd25q32/gd25q32.pdf

[23] Mohammed Faisal Elrawy, Ali Ismail Awad, and Hesham F. A. Hamed. 2018. Intrusion Detection Systems for IoT-Based Smart Environments: A Survey. Journal of Cloud Computing 7 (2018). https://doi.org/10.1186/s13677-018-0123-6

[24] Espressif Systems. 2018. Espressif Achieves the 100-Million Target for IoT Chip Shipments. Online. Retrieved 2021-05-07 from https://www.espressif.com/en/news/Espressif_Achieves_the_Hundredmillion_Target_for_IoT_Chip_Shipments

[25] Espressif Systems. 2020. ESP32 Technical Reference Manual. Online. Retrieved 2021-05-07 from https://www.espressif.com/sites/default/files/documentation/esp32_technical_reference_manual_en.pdf

[26] Espressif Systems. 2021. ESP32 Series Datasheet. Online. Retrieved 2021-05-03 from https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf

[27] Espressif Systems. 2021. Memory Capabilities. Retrieved 2021-07-06 from https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/mem_alloc.html

[28] Espressif Systems. 2021. Over The Air Updates (OTA). Online. Retrieved 2021-05-06 from https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/ota.html

[29] Espressif Systems. 2021. Partition Tables. Online. Retrieved 2021-05-06 from https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/partition-tables.html

[30] FreeRTOS. 2021. GitHub - FreeRTOS. Retrieved 2021-05-07 from https://github.com/FreeRTOS/FreeRTOS/tree/master

[31] David Geer. 2005. Industry Trends: Chip Makers Turn to Multicore Processors. Computer 38, 5 (2005). https://doi.org/10.1109/MC.2005.160

[32] Dan Goodin. 2016. Brace Yourselves—Source Code Powering Potent IoT DDoSes Just Went Public. Retrieved 2021-04-09 from http://arstechnica.com/security/2016/10/brace-yourselves-source-code-powering-potent-iot-ddoses-just-went-public/

[33] ITU-T. 2012. Overview of the Internet of Things. Recommendation Y.2060. International Telecommunication Union.

[34] Patrick Koeberl, Steffen Schulz, Ahmad-Reza Sadeghi, and Vijay Varadharajan. 2014. TrustLite: A Security Architecture for Tiny Embedded Devices. In Ninth Eurosys Conference 2014, EuroSys 2014. ACM. https://doi.org/10.1145/2592798.2592824

[35] Karl Koscher, Alexei Czeskis, Franziska Roesner, Shwetak N. Patel, Tadayoshi Kohno, Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, and Stefan Savage. 2010. Experimental Security Analysis of a Modern Automobile. In IEEE Symposium on Security and Privacy (SP). IEEE. https://doi.org/10.1109/SP.2010.34

[36] Ralph Charles Merkle. 1979. Secrecy, Authentication, and Public Key Systems. Stanford University.

[37] National Institute of Standards and Technology. 2008. Secure Hash Standard (FIPS 180-3). Retrieved 2021-09-14 from https://csrc.nist.gov/publications/detail/fips/180/3/archive/2008-10-31

[38] National Institute of Standards and Technology. 2015. Secure Hash Standard (SHS). Retrieved 2021-09-12 from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf

[39] Christian Niesler, Sebastian Surminski, and Lucas Davi. 2021. HERA: Hotpatching of Embedded Real-time Applications. In 28th Annual Network and Distributed System Security Symposium, NDSS 2021. The Internet Society. https://www.ndss-symposium.org/ndss-paper/hera-hotpatching-of-embedded-real-time-applications/

[40] Ivan De Oliveira Nunes, Karim Eldefrawy, Norrathep Rattanavipanon, Michael Steiner, and Gene Tsudik. 2019. VRASED: A Verified Hardware/Software Co-Design for Remote Attestation. In 28th USENIX Security Symposium, USENIX Security 2019. USENIX Association.

[41] Ivan De Oliveira Nunes, Karim Eldefrawy, Norrathep Rattanavipanon, and Gene Tsudik. 2019. PURE: Using Verified Remote Attestation to Obtain Proofs of Update, Reset, and Erasure in Low-End Embedded Systems. In Proceedings of the International Conference on Computer-Aided Design, ICCAD 2019. ACM. https://doi.org/10.1109/ICCAD45719.2019.8942118

[42] Ivan De Oliveira Nunes, Karim Eldefrawy, Norrathep Rattanavipanon, and Gene Tsudik. 2020. APEX: A Verified Architecture for Proofs of Execution on Remote Devices Under Full Software Compromise. In 29th USENIX Security Symposium, USENIX Security 2020. USENIX Association. https://www.usenix.org/conference/usenixsecurity20/presentation/nunes

[43] OWASP. 2018. Internet of Things (IoT) Top 10 2018. Retrieved 2021-05-06 from https://owasp.org/www-pdf-archive/OWASP-IoT-Top-10-2018-final.pdf

[44] Davide Quarta, Marcello Pogliani, Mario Polino, Federico Maggi, Andrea Maria Zanchettin, and Stefano Zanero. 2017. An Experimental Security Analysis of an Industrial Robot Controller. In IEEE Symposium on Security and Privacy (SP). IEEE. https://doi.org/10.1109/SP.2017.20

[45] Selma Saidi, Rolf Ernst, Sascha Uhrig, Henrik Theiling, and Benoît Dupont de Dinechin. 2015. The Shift to Multicores in Real-Time and Safety-Critical Systems. In 2015 International Conference on Hardware/Software Codesign and System Synthesis, CODES+ISSS 2015. IEEE. https://doi.org/10.1109/CODESISSS.2015.7331385

[46] Arvind Seshadri, Adrian Perrig, Leendert van Doorn, and Pradeep K. Khosla. 2004. SWATT: SoftWare-based ATTestation for Embedded Devices. In 2004 IEEE Symposium on Security and Privacy (S&P 2004). IEEE Computer Society. https://doi.org/10.1109/SECPRI.2004.1301329

[47] Weidong Shi, Hsien-Hsin S. Lee, Laura Falk, and Mrinmoy Ghosh. 2006. An Integrated Framework for Dependable and Revivable Architectures Using Multicore Processors. (2006). https://doi.org/10.1109/ISCA.2006.8

[48] Devu Manikantan Shila, Penghe Geng, and Teems Lovett. 2016. I Can Detect You: Using Intrusion Checkers to Resist Malicious Firmware Attacks. In 2016 IEEE Symposium on Technologies for Homeland Security (HST). IEEE.

[49] Kang G. Shin and Parameswaran Ramanathan. 1994. Real-Time Computing: A New Discipline of Computer Science and Engineering. In Proceedings of IEEE, Special Issue on Real-Time Systems. IEEE.

[50] Spectra Industrie-PC und Automation. 2021. Embedded Configuration Manager (ECM). Retrieved 2021-07-13 from https://www.spectra.de/cms/splash/embedded-configuration-manager/

[51] Embedded Staff. 2006. Catching the Z-Wave. Retrieved 2021-04-28 from https://www.embedded.com/catching-the-z-wave/

[52] John A. Stankovic and Raj Rajkumar. 2004. Real-Time Operating Systems. Real Time Systems 28, 2-3 (2004). https://doi.org/10.1023/B:TIME.0000045319.20260.73

[53] Rodrigo Vieira Steiner and Emil Lupu. 2016. Attestation in Wireless Sensor Networks: A Survey. ACM Computing Surveys (CSUR) 49, 3 (2016). https://doi.org/10.1145/2988546

[54] Keith Stouffer, Victoria Pillitteri, Suzanne Lightman, Marshall Abrams, and Adam Hahn. 2015. Guide to Industrial Control Systems (ICS) Security. https://doi.org/10.6028/NIST.SP.800-82r2

[55] Victor van der Veen, Dennis Andriesse, Enes Göktas, Ben Gras, Lionel Sambuc, Asia Slowinska, Herbert Bos, and Cristiano Giuffrida. 2015. Practical Context-Sensitive CFI. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security. ACM. https://doi.org/10.1145/2810103.2813673

[56] Bas Wijnen, Emily J Hunt, Gerald C Anzalone, and Joshua M Pearce. 2014. Open-Source Syringe Pump Library. PloS one 9, 9 (2014).

[57] Reinhard Wilhelm and Jan Reineke. 2012. Embedded Systems: Many Cores—Many Problems. In 7th IEEE International Symposium on Industrial Embedded Systems, SIES 2012. IEEE. https://doi.org/10.1109/SIES.2012.6356583

[58] Ally Winning. 2019. Number of Automotive ECUs Continues to Rise. Online. Retrieved 2021-05-03 from https://www.eenewsautomotive.com/news/number-automotive-ecus-continues-rise

[59] Yi Yang, Xinran Wang, Sencun Zhu, and Guohong Cao. 2007. Distributed Software-Based Attestation for Node Compromise Detection in Sensor Networks. In 26th IEEE Symposium on Reliable Distributed Systems (SRDS 2007). IEEE Computer Society. https://doi.org/10.1109/SRDS.2007.31

[60] Man-Ki Yoon, Sibin Mohan, Jaesik Choi, Mihai Christodorescu, and Lui Sha. 2017. Learning Execution Contexts from System Call Distribution for Anomaly Detection in Smart Embedded Systems. In Proceedings of the Second International Conference on Internet-of-Things Design and Implementation (IoTDI). ACM. https://doi.org/10.1145/3054977.3054999

[61] Man-Ki Yoon, Sibin Mohan, Jaesik Choi, Jung-Eun Kim, and Lui Sha. 2013. SecureCore: A Multicore-Based Intrusion Detection Architecture for Real-Time Embedded Systems. In 19th IEEE Real-Time and Embedded Technology and Applications Symposium, RTAS 2013. IEEE Computer Society. https://doi.org/10.1109/RTAS.2013.6531076

[62] Man-Ki Yoon, Lui Sha, Sibin Mohan, and Jaesik Choi. 2015. Memory Heat Map: Anomaly Detection in Real-Time Embedded Systems Using Memory Behavior. In Proceedings of the 52nd Annual Design Automation Conference. ACM. https://doi.org/10.1145/2744769.2744869

[63] Bruno Bogaz Zarpelão, Rodrigo Sanches Miani, Cláudio Toshio Kawakani, and Sean Carlisto de Alvarenga. 2017. A Survey of Intrusion Detection in Internet of Things. Journal of Network and Computer Applications 84 (2017). https://doi.org/10.1016/j.jnca.2017.02.009

[64] Shaza Zeitouni, Ghada Dessouky, Orlando Arias, Dean Sullivan, Ahmad Ibrahim, Yier Jin, and Ahmad-Reza Sadeghi. 2017. ATRIUM: Runtime Attestation Resilient Under Memory Attacks. In 2017 IEEE/ACM International Conference on Computer-Aided Design, ICCAD 2017. IEEE. https://doi.org/10.1109/ICCAD.2017.8203803

[65] Kim Zetter. 2015. A Cyberattack Has Caused Confirmed Physical Damage for the Second Time Ever. Retrieved 2021-04-09 from https://www.wired.com/2015/01/german-steel-mill-hack-destruction/

---

**Session 11A: Attestation and Firmware Security**
CCS '21, November 15–19, 2021, Virtual Event, Republic of Korea