以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

[1] J. Alwen, Y. Dodis, and D. Wichs, “泄漏恢复与有界检索模型的调查,” in 2010年第4届信息理论安全国际会议 (ICITS), pp. 1–18.

[2] C. Arnaud and P.-A. Fouque, “针对PolarSSL中受保护的RSA-CRT实现的时间攻击,” in 2013年密码学主题 - CT-RSA, pp. 18–33.

[3] M. Becher, M. Dornseif, and C. Klein, “Firewire: 所有内存都属于我们,” in 2005年第6届CanSecWest年度会议.

[4] D. Bernstein, “AES的缓存时间攻击,” 2004, http://cr.yp.to/antiforgery/cachetiming-20041111.pdf.

[5] A. Birgisson, M. Dhawan, U. Erlingsson et al., “使用事务内存内省强制执行授权策略,” in 2008年第15届ACM计算机与通信安全会议 (CCS), pp. 223–234.

[6] A. Birgisson and U. Erlingsson, “Haskell中的事务内存内省实现和语义,” in 2009年第4届ACM编程语言和分析安全研讨会 (PLAS), pp. 87–99.

[7] E.-O. Blass and W. Robertson, “TRESOR-HUNT: 攻击CPU绑定加密,” in 2012年第28届年度计算机安全应用会议 (ACSAC), pp. 71–78.

[8] B. Bock, “基于Firewire的Windows 7、EFS和BitLocker物理安全攻击,” 2009.

[9] J. Bonneau and I. Mironov, “针对AES的缓存碰撞时间攻击,” in 2006年第8届密码硬件和嵌入式系统研讨会 (CHES), pp. 201–215.

[10] P. Broadwell, M. Harren, and N. Sastry, “Scrash: 生成安全崩溃信息的系统,” in 2003年第12届USENIX安全研讨会.

[11] D. Brumley and D. Boneh, “远程时间攻击是可行的,” Computer Networks, vol. 48, no. 5, pp. 701–716, 2005.

[12] B. Carlstrom, A. McDonald, H. Chaﬁ et al., “Atomos事务编程语言,” in 2006年ACM SIGPLAN编程语言设计与实现会议 (PLDI), pp. 1–13.

[13] J. Chow, B. Pfaff, T. Garﬁnkel et al., “通过全系统模拟理解数据生命周期,” in 2004年第13届USENIX安全研讨会.

[14] J. Chow, B. Pfaff, T. Garﬁnkel, and M. Rosenblum, “碎纸机：通过安全释放减少数据生命周期,” in 2005年第14届USENIX安全研讨会.

[15] S. Chow, P. Eisen, H. Johnson, and P. van Oorschot, “用于DRM应用的白盒DES实现,” in 2002年第2届ACM数字版权管理研讨会 (DRM), pp. 1–15.

[16] ——, “白盒密码学和AES实现,” in 2002年第9届选定区域密码学国际研讨会 (SAC), pp. 250–270.

[17] J. Chung, M. Dalton, H. Kannan, and C. Kozyrakis, “使用事务内存的线程安全动态二进制翻译,” in 2008年第14届IEEE高性能计算机架构研讨会 (HPCA), pp. 279–289.

[18] C. Cowan, C. Pu, D. Maier et al., “StackGuard: 自动自适应检测和防止缓冲区溢出攻击,” in 1998年第7届USENIX安全研讨会.

[19] C. Cowan, S. Beattie, J. Johansen, and P. Wagle, “PointGuardTM: 保护指针免受缓冲区溢出漏洞的影响,” in 2003年第12届USENIX安全研讨会.

[20] CVE Details, “Linux内核漏洞统计,” http://www.cvedetails.com/product/47/Linux-Linux-Kernel.html, 2014.

[21] P. Damron, A. Fedorova, Y. Lev et al., “混合事务内存,” in 2006年第12届编程语言和操作系统架构支持国际会议 (ASPLOS), pp. 336–346.

[22] Y. Desmedt and Y. Frankel, “阈值密码系统,” in 1989年密码学进展 - CRYPTO, pp. 307–315.

[23] D. Dice, Y. Lev, M. Moir et al., “商业硬件事务内存实现的早期经验,” in 2009年第14届编程语言和操作系统架构支持国际会议 (ASPLOS), pp. 157–168.

[24] A. Dunn, M. Lee, S. Jana et al., “无瑕机器的永恒阳光：使用短暂通道保护隐私,” in 2012年第10届USENIX操作系统设计与实现会议 (OSDI), pp. 61–75.

[25] B. Garmany and T. M¨uller, “PRIME: 私有RSA基础设施用于无RAM加密,” in 2013年第29届年度计算机安全应用会议 (ACSAC).

[26] L. Guan, J. Lin, B. Luo, and J. Jing, “Copker: 在没有RAM的情况下使用私钥进行计算,” in 2014年第21届ISOC网络和分布式系统安全研讨会 (NDSS).

[27] G. Guninski, “Linux内核2.6的乐趣, Windoze是个笑话,” 2005, http://www.guninski.com/where do you want billg to go today 3.html.

[28] J. Halderman, S. Schoen, N. Heninger et al., “让我们记住：冷启动攻击对加密密钥的影响,” in 2008年第17届USENIX安全研讨会.

[29] L. Hammond, V. Wong, M. Chen et al., “事务内存一致性和一致性,” in 2004年ACM SIGARCH计算机体系结构新闻, vol. 32, p. 102.

[30] T. Harris, S. Marlow, S. Peyton-Jones, and M. Herlihy, “可组合的内存事务,” in 2005年第10届ACM并行编程原理与实践研讨会 (PPoPP), pp. 48–60.

[31] K. Harrison and S. Xu, “保护加密密钥免受内存泄露攻击,” in 2007年第37届IEEE/IFIP依赖系统和网络国际会议 (DSN), pp. 137–143.

[32] N. Heninger and A. Feldman, “AESKeyFinder,” https://citp.princeton.edu/research/memory/code/.

[33] M. Herlihy and J. Moss, “事务内存: 锁自由数据结构的架构支持,” in 1993年第20届国际计算机体系结构研讨会 (ISCA), pp. 289–300.

[34] O. Hofmann, A. Dunn, S. Kim et al., “使用OSck确保操作系统内核完整性,” in 2011年第16届编程语言和操作系统架构支持国际会议 (ASPLOS), pp. 279–290.

[35] Intel Corporation, “Intel 64和IA-32架构优化参考手册.”

[36] ——, “第8章: Intel事务内存同步扩展,” in Intel架构指令集扩展编程参考, 2012.

[37] ——, “Intel高级加密标准 (AES) 新指令集 (修订版3.01),” 2012.

[38] ——, “桌面第4代Intel Core处理器家族, 规格更新,” 2014.

[39] ——, “Intel Core M-5Y71处理器, 4M缓存, 最高可达2.90 GHz,” 2014, http://ark.intel.com/products/84672/Intel-Core-M-5Y71-Processor-4M-Cache-up-to-2.90-GHz.

[40] ——, “Intel软件保护扩展编程参考,” 2014, https://software.intel.com/sites/default/files/managed/48/88/329298-002.pdf.

[41] C. Jacobi, T. Slegel, and D. Greiner, “IBM System Z的事务内存架构和实现,” in 2012年第45届年度IEEE/ACM微架构国际研讨会 (MICRO), pp. 25–36.

[42] T. Karnagel, R. Dementiev, R. Rajwar et al., “使用Intel事务同步扩展改进内存数据库索引性能,” in 2014年第20届IEEE高性能计算机架构研讨会 (HPCA), pp. 476–487.

[43] V. Kemerlis, G. Portokalidis, and A. Keromyti, “k-Guard: 轻量级内核保护抵御返回用户攻击,” in 2012年第21届USENIX安全研讨会.

[44] V. Kolontsov, “WU-FTPD核心转储漏洞 (旧补丁不起作用),” 1997, http://insecure.org/sploits/ftpd.pasv.html.

[45] S. Kumar, M. Chu, C. Hughes et al., “混合事务内存,” in 2006年第11届ACM并行编程原理与实践研讨会 (PPoPP), pp. 209–220.

[46] M. Lafon and R. Francoise, “CAN-2005-0400: Linux内核ext2实现中的信息泄露,” 2005, http://www.securiteam.com.

[47] Y. Li, J. McCune, and A. Perrig, “VIPER: 验证外设固件的完整性,” in 2011年第18届ACM计算机和通信安全会议 (CCS), pp. 3–16.

[48] Y. Liu, Y. Xia, H. Guan et al., “使用硬件事务内存进行并发且一致的虚拟机内省,” in 2014年第20届IEEE高性能计算机架构研讨会 (HPCA), pp. 416–427.

[49] D. Lupei, B. Simion, D. Pinto et al., “事务内存支持多人游戏的可扩展和透明并行化,” in 2010年第5届欧洲计算机系统会议 (EuroSys), pp. 41–54.

[50] K. Moore, J. Bobba, M. Moravan et al., “LogTM: 基于日志的事务内存,” in 2006年第12届IEEE高性能计算机架构研讨会 (HPCA), pp. 254–265.

[51] T. M¨uller, A. Dewald, and F. Freiling, “AESSE: 抗冷启动的AES实现,” in 2010年第3届欧洲系统安全研讨会 (EuroSec), pp. 42–47.

[52] T. M¨uller, F. Freiling, and A. Dewald, “TRESOR在RAM之外安全运行加密,” in 2011年第20届USENIX安全研讨会.

[53] National Vulnerability Database, “CVE-2014-0069,” http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0069.

[54] ——, “CVE-2014-0160,” http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0160.

[55] ——, “CVE-2014-4653,” http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-4653.

[56] Y. Ni, A. Welc, A.-R. Adl-Tabatabai et al., “C/C++的事务构造设计与实现,” in 2008年第23届ACM面向对象编程系统语言和应用程序会议 (OOPSLA), pp. 195–212.

[57] T. Parker and S. Xu, “一种从内存泄露攻击中安全保管加密密钥的方法,” in 2010年第1届可信系统国际会议 (INTRUST), pp. 39–59.

[58] E. Pattuk, M. Kantarcioglu, Z. Lin, and H. Ulusoy, “防止云虚拟机中的加密密钥泄露,” in 2014年第23届USENIX安全研讨会.

[59] B. Payne, M. Carbone, M. Sharif, and W. Lee, “Lares: 使用虚拟化进行安全主动监控的架构,” in 2008年第29届IEEE安全与隐私研讨会 (S&P), pp. 233–247.

[60] N. Petroni and M. Hicks, “持久内核控制流攻击的自动检测,” in 2007年第14届ACM计算机和通信安全会议 (CCS), pp. 103–115.

[61] T. Pettersson, “从Linux内存转储中恢复加密密钥,” in 2007年混沌通信营地.

[62] Primate Labs, “Geekbench 3,” http://www.primatelabs.com/geekbench/.

[63] Roberto A. Vitillo, “使用性能计数器进行Linux剖析,” https://perf.wiki.kernel.org/index.php/Main_Page.

[64] D. Samyde, S. Skorobogatov, R. Anderson, and J.-J. Quisquater, “读取内存数据的新方法,” in 2002年第1届IEEE存储安全研讨会, pp. 65–69.

[65] M. Seltzer, Y. Endo, C. Small, and K. Smith, “应对灾难: 应对行为不当的内核扩展,” in 1996年第2届USENIX操作系统设计与实现研讨会 (OSDI), pp. 213–227.

[66] A. Seshadri, M. Luk, N. Qu, and A. Perrig, “SecVisor: 为商品操作系统提供终身内核代码完整性的微型管理程序,” in 2007年ACM操作系统原理研讨会 (SOSP), pp. 335–350.

[67] N. Shavit and D. Touitou, “软件事务内存,” Distributed Computing, vol. 10, no. 2, pp. 99–116, 1997.

[68] S. Sidiroglou and A. Keromytis, “防御软件故障的执行事务: 使用和评估,” International Journal of Information Security, vol. 5, no. 2, pp. 77–91, 2006.

[69] P. Simmons, “通过遗忘来实现安全性: 对磁盘加密的冷启动攻击的软件解决方案,” in 2011年第27届年度计算机安全应用会议 (ACSAC), pp. 73–82.

[70] sp00n, “Security Dynamics FTP服务器核心问题,” http://insecure.org/sploits/solaris.secdynamics.core.html, 1997.

[71] P. Stewin, “一种原始方法揭示针对计算平台主内存的隐蔽外设攻击,” in 2013年第16届研究攻击、入侵和防御国际研讨会 (RAID), pp. 1–20.

[72] P. Stewin and I. Bystrov, “理解DMA恶意软件,” in 2013年第9届入侵检测和恶意软件及漏洞评估会议 (DIMVA), pp. 21–41.

[73] The MITRE Corporation, “CWE-212: 敏感数据跨边界清除不当,” 2013, https://cwe.mitre.org/data/definitions/212.html.

[74] ——, “CWE-226: 未清除的敏感信息,” 2013, https://cwe.mitre.org/data/definitions/226.html.

[75] Unknown author, “Solaris (及其他) ftpd核心转储漏洞,” 1996, http://insecure.org/sploits/ftpd.pasv.html.

[76] P. van Dijk, “Slackware 3.4中的imapd和ipop3d核心转储漏洞,” 1998, http://www.insecure.org/sploits/slackware.ipop.imap.core.html.

[77] G. Vasiliadis, E. Athanasopoulos, M. Polychronakis, and S. Ioannidis, “PixelVault: 使用GPU保护加密操作,” in 2014年第21届ACM计算机和通信安全会议 (CCS), pp. 1131–1142.

[78] A. Wang, M. Gaudet, P. Wu et al., “Blue Gene/Q硬件支持事务内存的评估,” in 2012年第21届并行架构和编译技术国际会议 (PACT), pp. 127–136.

[79] R. Wartell, V. Mohan, K. Hamlen, and Z. Lin, “二进制搅拌: 自随机化x86二进制代码的指令地址,” in 2012年第19届ACM计算机和通信安全会议 (CCS), pp. 157–168.

[80] R. Yoo, C. Hughes, K. Lai, and R. Rajwar, “Intel事务同步扩展在高性能计算中的性能评估,” in 2013年国际高性能计算、网络、存储和分析会议 (SC).

[81] F. Zhang, “IOCheck: 一个增强I/O设备运行时安全性的框架,” in 2013年国际研讨会, 结合第43届IEEE/IFIP依赖系统和网络会议 (DSN), pp. 1–4.

[82] Y. Zhang, A. Juels, M. Reiter, and T. Ristenpart, “跨VM侧信道及其在提取私钥中的应用,” in 2012年第19届ACM计算机和通信安全会议 (CCS), pp. 305–316.

[83] F. Zyulkyarov, V. Gajinov, O. Unsal et al., “Atomic Quake: 在交互式多人游戏服务器中使用事务内存,” in 2009年第14届ACM并行编程原理与实践研讨会 (PPoPP), pp. 25–34.

---

希望这些优化能够使您的文档更加清晰、连贯和专业。如果需要进一步修改或添加内容，请随时告诉我。