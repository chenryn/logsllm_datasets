# API Security in Action

## By Neil Madden
### M A N N I N G
### SHELTER ISLAND

---

**Publisher:**
Manning Publications Co.  
20 Baldwin Road, PO Box 761  
Shelter Island, NY 11964  
Email: [PI:EMAIL]  
Website: [www.manning.com](http://www.manning.com)

**Copyright:**
© 2020 by Manning Publications Co. All rights reserved. No part of this publication may be reproduced, stored in a retrieval system, or transmitted, in any form or by means electronic, mechanical, photocopying, or otherwise, without prior written permission of the publisher.

**Trademark Notice:**
Many of the designations used by manufacturers and sellers to distinguish their products are claimed as trademarks. Where those designations appear in the book, and Manning Publications was aware of a trademark claim, the designations have been printed in initial caps or all caps.

**Environmental Policy:**
Manning books are printed on acid-free paper, and we exert our best efforts to ensure that at least 15 percent of the paper is recycled and processed without the use of elemental chlorine.

**Development Team:**
- Development Editor: Toni Arritola
- Technical Development Editor: Joshua White
- Review Editor: Ivan Martinovic´
- Production Editor: Deirdre S. Hiam
- Copy Editor: Katie Petito
- Proofreader: Keri Hales
- Technical Proofreader: Ubaldo Pescatore
- Typesetter: Dennis Dalinnik
- Cover Designer: Marija Tudor

**ISBN:**
9781617296024

**Printed in the United States of America**

**Dedication:**
In memory of Susan Elizabeth Madden, 1950–2018.

---

## Contents

### Preface
- **Preface:** xi
- **Acknowledgments:** xiii
- **About This Book:** xv
- **About the Author:** xix
- **About the Cover Illustration:** xx

### Part 1: Foundations
#### Chapter 1: What is API Security?
- **Introduction:** 3
  - An analogy: Taking your driving test: 4
  - What is an API?: 6
    - API styles: 7
  - API security in context: 8
    - A typical API deployment: 10
  - Elements of API security: 12
    - Assets: 13
    - Security goals: 14
    - Environments and threat models: 16
  - Security mechanisms: 19
    - Encryption: 20
    - Identification and authentication: 21
    - Access control and authorization: 22
    - Audit logging: 23
    - Rate-limiting: 24

#### Chapter 2: Secure API Development
- **The Natter API:** 27
  - Overview of the Natter API: 28
  - Implementation overview: 29
  - Setting up the project: 30
  - Initializing the database: 32
- **Developing the REST API:** 34
  - Creating a new space: 34
- **Wiring up the REST endpoints:** 36
  - Trying it out: 38
- **Injection attacks:** 39
  - Preventing injection attacks: 43
  - Mitigating SQL injection with permissions: 45
- **Input validation:** 47
- **Producing safe output:** 53
  - Exploiting XSS Attacks: 54
  - Preventing XSS: 57
  - Implementing the protections: 58

#### Chapter 3: Securing the Natter API
- **Addressing threats with security controls:** 62
- **Rate-limiting for availability:** 64
  - Rate-limiting with Guava: 66
- **Authentication to prevent spoofing:** 70
  - HTTP Basic authentication: 71
  - Secure password storage with Scrypt: 72
  - Creating the password database: 72
  - Registering users in the Natter API: 74
  - Authenticating users: 75
- **Using encryption to keep data private:** 78
  - Enabling HTTPS: 80
  - Strict transport security: 82
- **Audit logging for accountability:** 82
- **Access control:** 87
  - Enforcing authentication: 89
  - Access control lists: 90
  - Enforcing access control in Natter: 92
  - Adding new members to a Natter space: 94
  - Avoiding privilege escalation attacks: 95

### Part 2: Token-Based Authentication
#### Chapter 4: Session Cookie Authentication
- **Authentication in web browsers:** 101
  - Calling the Natter API from JavaScript: 102
  - Intercepting form submission: 104
  - Serving the HTML from the same origin: 105
  - Drawbacks of HTTP authentication: 108
- **Token-based authentication:** 109
  - A token store abstraction: 111
  - Implementing token-based login: 112
- **Session cookies:** 115
  - Avoiding session fixation attacks: 119
  - Cookie security attributes: 121
  - Validating session cookies: 123
- **Preventing Cross-Site Request Forgery (CSRF) attacks:** 125
  - SameSite cookies: 127
  - Hash-based double-submit cookies: 129
  - Double-submit cookies for the Natter API: 133
- **Building the Natter login UI:** 138
  - Calling the login API from JavaScript: 140
- **Implementing logout:** 143

#### Chapter 5: Modern Token-Based Authentication
- **Allowing cross-domain requests with CORS:** 146
  - Preflight requests: 148
  - CORS headers: 150
  - Adding CORS headers to the Natter API: 151
- **Tokens without cookies:** 154
  - Storing token state in a database: 155
  - The Bearer authentication scheme: 160
  - Deleting expired tokens: 162
  - Storing tokens in Web Storage: 163
  - Updating the CORS filter: 166
  - XSS attacks on Web Storage: 167
- **Hardening database token storage:** 170
  - Hashing database tokens: 170
  - Authenticating tokens with HMAC: 172
  - Protecting sensitive attributes: 177

#### Chapter 6: Self-Contained Tokens and JWTs
- **Storing token state on the client:** 181
  - Protecting JSON tokens with HMAC: 183
- **JSON Web Tokens (JWTs):** 185
  - The standard JWT claims: 187
  - The JOSE header: 188
  - Generating standard JWTs: 190
  - Validating a signed JWT: 193
- **Encrypting sensitive attributes:** 195
  - Authenticated encryption: 197
  - Authenticated encryption with NaCl: 198
  - Encrypted JWTs: 200
  - Using a JWT library: 203
- **Using types for secure API design:** 206
- **Handling token revocation:** 209
  - Implementing hybrid tokens: 210

### Part 3: Authorization
#### Chapter 7: OAuth2 and OpenID Connect
- **Introduction:** 217

---

This revised table of contents and introductory material provide a clear and professional structure for the book, making it easier for readers to navigate and understand the content.