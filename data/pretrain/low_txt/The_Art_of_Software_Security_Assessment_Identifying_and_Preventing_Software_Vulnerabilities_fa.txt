### Configuration for Authentication and Authorization in ASP.NET

```xml
<authentication mode="Forms">
    <forms protection="All" timeout="1200" path="/" />
</authentication>
```

The above configuration ensures that any request from an unauthenticated user is redirected to `login.aspx`. This login page can then process the authentication, and upon successful login, the user can be redirected back to the original URL.

### Examining the Login Page

In an ASP.NET application, the login page is often the first area to examine. Developers may include backdoor mechanisms for testing purposes or to facilitate Web service requests. Additionally, the login page itself may have its own vulnerabilities.

### Authorization in web.config

The authorization section of the `web.config` file can be used to restrict access based on roles, users, and groups. Typically, you will see a small number of roles to differentiate between normal and administrative users. Here’s an example of an authorization section for a Web application's administrative interface:

```xml
<location path="Admin">
    <system.web>
        <authorization>
            <allow roles="Administrators" />
            <deny users="*" />
        </authorization>
    </system.web>
</location>
```

The `<location>` tag can be used to limit the scope of the authorization rules. For instance, you can wrap the authorization rules within a `<location>` tag that includes only the administrative pages or directories.

### AppSettings in web.config

The `appSettings` section of the `web.config` file is used to provide application-specific parameters. These parameters are passed as simple key-value pairs and can be retrieved using `ConfigurationManager.AppSettings()`. These settings can be critical to the application's functionality, so it is important to note them and understand where they are used in the code. Database and middleware connection information is often stored in this section. Here’s an example:

```xml
<appSettings>
    <add key="DatabaseConnectionString" value="Data Source=myServerAddress;Initial Catalog=myDataBase;User Id=myUsername;Password=myPassword;" />
    <add key="MiddlewareURL" value="http://middleware.example.com" />
</appsettings>
```

### Summary

This chapter provides an overview of current Web technologies and details about common platforms. Use this information as a starting point for reviewing Web applications. However, keep in mind that these platforms are complex, and a detailed exploration of their security aspects could fill an entire book. Supplement this chapter with detailed information from platform developers and other security resources.

### Bibliography

- Berners-Lee, T., Fielding, R., and Frystyk, H. "Request for Comments (RFC) 1945: Hypertext Transfer Protocol HTTP/1.0." Internet Engineering Task Force (IETF), 1996.
- Bishop, M. *Computer Security: Art & Science*. Addison-Wesley, 2003.
- Brown, K. *Programming Windows Security*. Addison-Wesley, 2000.
- Brown, K. *The .NET Developer's Guide to Windows Security*. Addison-Wesley, 2005.
- Chen, H., Wagner, D., and Dean, D. "Setuid Demystified." In Proceedings of the Eleventh Usenix Security Symposium. San Francisco, 2002.
- Eddon, G. and Eddon, H. *Inside Distributed COM*. Microsoft Press, 1998.
- Ferguson, N. and Schneier, B. *Practical Cryptography*. Wiley Publishing, Inc., 2003.
- Fielding, R., et al. (1999). "Request for Comments (RFC) 2616: Hypertext Transfer Protocol HTTP/1.1." Internet Engineering Task Force (IETF), 1999.
- Hart, J. *Windows System Programming, Third Edition*. Addison-Wesley, 2005.
- Hoglund, G. and McGraw, G. *Exploiting Software*. Addison-Wesley Professional, 2004.
- Howard, M. and LeBlanc, D. *Writing Secure Code, Second Edition*. Microsoft Press, 2002.
- Howard, M., LeBlanc, D., and Viega, J. *19 Deadly Sins of Software Security*. McGraw-Hill Osborne Media, 2005.
- ISO/IEC. *ISO/IEC International Standard 9899-1999: Programming Languages C*. International Organization for Standardization (ISO), 1999.
- ITU-T. *Recommendation X.690, ISO/IEC 8825-1, ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) & Distinguished Encoding Rules (DER)*. International Organization for Standardization (ISO), 2002.
- ITU-T. *Recommendation X.691, ISO/IEC 8825-2, ASN.1 encoding rules: Specification of Packed Encoding Rules (PER)*. International Organization for Standardization (ISO), 2003.
- ITU-T. *Recommendation X.693, ISO/IEC 8825-4, ASN.1 encoding rules: XML Encoding Rules (XER)*. International Organization for Standardization (ISO), 2004.
- Kernighan, B. W. and Ritchie, D. M. *The C Programming Language, 2nd Edition*. Prentice Hall, 1988.
- Koziol, J., et al. *The Shellcoder's Handbook: Discovering & Exploiting Security Holes*. Wiley Publishing, Inc., 2004.
- Lopatic, T., McDonald, J., and Song, D. *A Stateful Inspection of FireWall-1*. Blackhat Briefings, 2000.
- Maughan, D., et al. "Request for Comments (RFC) 2408: Internet Security Association & Key Management Protocol (ISAKMP)." Internet Engineering Task Force (IETF), 1998.
- McConnell, S. *Code Complete: A Practical Handbook of Software Construction*. Microsoft Press, 2004.
- Menezes, A., van Oorschot, P., and Vanstone, S. *Handbook of Applied Cryptography*. CRC Press, 2000.
- Microsoft Developer Network (MSDN) Library. [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/), 2006.
- Mockapetris, P. "Request for Comments (RFC) 1035: Domain Names—Implementation & Specification." Internet Engineering Task Force (IETF), 1987.
- Moore, B. "Shattering By Example." Security-Assessment.com. [http://blackhat.com/presentations/bh-usa-04/bh-us-04-moore/bh-us-04-moore-whitepaper.pdf](http://blackhat.com/presentations/bh-usa-04/bh-us-04-moore/bh-us-04-moore-whitepaper.pdf), 2003.
- NGSSoftware Insight Security Research Papers. Next Generation Security Software. [http://www.nextgenss.com/research/papers/](http://www.nextgenss.com/research/papers/).
- OpenBSD Project. OpenBSD Manual. [www.openbsd.org/cgi-bin/man.cgi](www.openbsd.org/cgi-bin/man.cgi), 2006.
- Paxon, V. Personal Web site. [www.icir.org/vern/](www.icir.org/vern/).
- Postel, J. "Request for Comments (RFC) 0768: User Datagram Protocol." Internet Engineering Task Force (IETF), 1980.
- Postel, J. "Request for Comments (RFC) 0791: Internet Protocol." Internet Engineering Task Force (IETF), 1981.
- Postel, J. "Request for Comments (RFC) 0793: Transmission Control Protocol." Internet Engineering Task Force (IETF), 1981.
- Quinlan, D., Russell, P. R., and Yeoh, C. "Filesystem Hierarchy Standard." [www.pathname.com/fhs/](www.pathname.com/fhs/), 2004.
- Ranum, M. Personal Web site. [www.ranum.com/](www.ranum.com/).
- Russinovich, M. and Cogswell, B. Sysinternals. [www.sysinternals.com/](www.sysinternals.com/).
- Russinovich, M. and Solomon, D. *Microsoft Windows Internals: Microsoft Windows Server 2003, Windows XP, & Windows 2000, Fourth Edition*. Microsoft Press, 2005.
- Schneier, B. *Applied Cryptography: Protocols, Algorithms, & Source Code in C, Second Edition*. Wiley Publishing, Inc., 1995.
- Schrieber, S. *Undocumented Windows 2000 Secrets: A Programmer's Cookbook*. Addison-Wesley, 2001.
- Sommerville, I. *Software Engineering, Seventh Edition*. Addison-Wesley, 2004.
- SPI Labs Whitepapers. SPI Dynamics. [www.spidynamics.com/spilabs/education/whitepapers.html](www.spidynamics.com/spilabs/education/whitepapers.html).
- St. Johns, M. "Request for Comments (RFC) 1413: Identification Protocol." Internet Engineering Task Force (IETF), 1993.
- Stevens, W. R. *Advanced Programming in the UNIX™ Environment*. Addison-Wesley, 1992.
- Stevens, W. R. *TCP/IP Illustrated, Volume 1: The Protocols*. Addison-Wesley, 1994.
- Stewart, R. and Dalal, M. *Improving TCP's Robustness to Blind In-Window Attacks*. Internet Engineering Task Force (IETF), 2006.
- Swiderski, F. and Snyder, W. *Threat Modeling*. Microsoft Press, 2004.
- The Open Group. *The Single UNIX Specification*. The Austin Group. [www.unix.org/version3/](www.unix.org/version3/), 2004.
- van der Linden, P. *Expert C Programming*. Prentice-Hall, 1994.
- Wheeler, D. A. *Secure Programming for Linux and Unix HOWTO*. [www.dwheeler.com/secure-programs](www.dwheeler.com/secure-programs), 2003.
- Zalewski, M. "Delivering Signals for Fun & Profit." Symantec (BindView publication, acquired by Symantec; [www.bindview.com/Services/Razor/Papers/2001/signals.cfm](www.bindview.com/Services/Razor/Papers/2001/signals.cfm)), 2001.
- Zalewski, M. Personal Web site. [http://lcamtuf.coredump.cx/](http://lcamtuf.coredump.cx/).

### Index

- **SYMBOL**
  - /bin directory (UNIX)
  - /etc directory (UNIX)
  - /home directory (UNIX)
  - /sbin directory (UNIX)
  - /var directory (UNIX)

- **A**
  - AASP (Active Server Pages)
  - Abstract Syntax Notation (ASN.1)
  - Abstraction, software design
  - ACC (allocation-check-copy) logs
  - Accept header field (HTTP)
  - Accept-Charset header field (HTTP)
  - Accept-Encoding header field (HTTP)
  - Accept-Language header field (HTTP)
  - Accept-Ranges header field (HTTP)
  - Access control
  - Access control entries (ACEs)
  - Access control policy
  - Access masks, Windows NT, security descriptors
  - Access tokens, Windows NT sessions
  - Accuracy, software design
  - ACEs (access control entries)
  - ACFs (application configuration files), RPCs (Remote Procedure Calls)
  - ACLs (access control lists)
  - Activation records, runtime stack
  - Activation, DCOM objects
  - Active FTP
  - Active Server Pages (ASP)
  - ActiveX controls
  - ActiveX Data Objects (ADO)
  - Address space layout randomization (ASLR)
  - Addresses
    - IP addresses
    - Subnet addresses
  - AdjustTokenGroups( ) function
  - AdjustTokenPrivileges( ) function
  - ADT (abstract data type), stacks
  - Age header field (HTTP)
  - Aitel, Dave
  - AIX
  - AJAX (Asynchronous JavaScript and XML)
  - Algorithms
    - Analyzing, CC (code comprehension)
    - Encryption
      - Block ciphers
      - Common vulnerabilities
      - Exchange algorithms
      - IV (initialization vector)
      - Stream ciphers
    - Hashing algorithms
    - Software design
  - Alloc( ) function
  - Allocating 0 bytes
  - Allocation functions, auditing
  - Allocation-check-copy (ACC) logs
  - Allocator scorecards
  - Allocator with Header Data Structure listing (7-39)
  - Allocator-Rounding Vulnerability listing (7-38)
  - Allow header field (HTTP)
  - Allowed header field (HTTP)
  - Analysis phase, code review
  - Analyzing
    - Algorithms, CC (code comprehension)
    - Classes, CC (code comprehension)
    - Modules, CC (code comprehension)
    - Objects, CC (code comprehension)
  - Anderson, J.S.
  - Anonymous pipes, Windows NT
  - Antimalware applications
  - Antisniff tool, vulnerabilities
  - Antisniff v1.0 Vulnerability listing (6-8)
  - Antisniff v1.1 Vulnerability listing (6-9)
  - Antisniff v1.1.1 Vulnerability listing (6-10)
  - Antisniff v1.1.2 Vulnerability listing (6-11)
  - Apache 1.3.29/2.X mod_rewrite Off-by-one Vulnerability listing (7-19)
  - Apache API
  - Apache mod_dav CDATA Parsing Vulnerability listing (7-1)
  - Apache mod_php Nonterminating Buffer Vulnerability listing (7-18)
  - Apache, Struts framework
  - APCs (asynchronous procedure calls)
  - APIs (application programming interfaces)
    - Apache API
    - ISAPI (Internet Server Application Programming Interface)
    - NSAPI (Netscape Server Application Programming Interface)
  - Appel, Andrew W.
  - AppID keys
  - Application access, categories
  - Application architecture modeling
  - Application identity, DCOM (Distributed Component Object Model)
  - Application IDs, COM (Component Object Model)
  - Application layer, network segmentation
  - Application manifests
  - Application protocols
    - ASN.1 (Abstract Syntax Notation)
      - BER (Basic Encoding Rules)
      - CER (Canonical Encoding Rules)
      - DER (Distinguished Encoding Rules)
      - PER (Packed Encoding Rules)
      - XER (XML Encoding Rules)
    - Auditing
      - Data type matching
      - Data verification
      - Documentation collection
      - Identifying elements
      - System resource access
    - DNS (Domain Name System)
      - Headers
      - Length variables
      - Name servers
      - Names
      - Packets
      - Question structure
      - Request traffic
      - Resolvers
      - Resource records
      - Spoofing
      - Zones
    - HTTP (Hypertext Transfer Protocol)
      - Header parsing
      - Posting data
      - Resource access
      - Utility functions
    - ISAKMP (Internet Security Association and Key Management Protocol)
      - Encryption vulnerabilities
      - Headers
      - Payloads
  - Application review
    - Application review phase
      - Bottom-up approach
      - Hybrid approach
      - Iterative process
      - Peer reviews
      - Planning

This revised version organizes the content more clearly, making it easier to read and understand. It also corrects some formatting issues and improves the overall flow of the text.