### 4.2 Robustness of Presentation Techniques

To study the robustness of various presentation techniques, we displayed our spamtrap addresses using a set of different presentation and obfuscation methods. For each spamtrap address that received spam, we present the relative share of spammed addresses for the used presentation methods in Figure 6.

As expected, a significant portion of spam was received by addresses presented in easily parsable plain text or as `mailto:` links. While some of the plain text obfuscated addresses (OBF) were harvested, none of the addresses presented using JavaScript code received any spam. Concerning addresses advertised to search engine bots, the majority of the spammed addresses were presented using MTO (60.7%) and TXT (38.4%). Bots using the Java user agent only parsed addresses presented using MTO and TXT. These findings suggest that simple obfuscation methods, particularly JavaScript, are still quite effective in protecting addresses from being harvested.

### 4.5 Efficiency of Blacklisting and Usage of Anonymity Services

We queried the IP-based spam blacklist provided by Project Honeypot for each page request to our monitored sites at the time of the visit. Blacklist data has been collected over a period of 13 months since July 2011, aiming to evaluate the efficiency of blacklisting for blocking harvester bots. During this period, we received visits from 318 hosts classified as harvesting spam bots, with 26% of these visiting hosts marked by Project Honeypot as harvesters.

Additionally, we investigated whether harvesters use anonymity services, such as Tor, to hide their identity. While the default configuration of Tor exit nodes blocks traffic to port 25 (used to send spam), access to port 80 (used to retrieve email addresses from the web) is not prohibited by default. This could make Tor more attractive to harvesters than to spammers. To check if requests originated from the Tor network, we queried the list of Tor exit nodes when a page was requested. Tor usage statistics were collected over a period of five months starting in 2012. In this period, only 0.03% of the total requests to our websites originated from the Tor network. However, we did not receive any request using Tor that was classified as harvesting activity.

We note that the short evaluation time may bias these observations, but it suggests that harvesters do not make an effort to conceal their identity.

### 4.6 Are Comment Spammers Harvesters?

Comment spam [1, 17, 26, 21, 15] exploits the existence of web forms designed to let users upload content. Examples of legitimate use include:
- Commenting on blogs, discussion boards, or YouTube videos.
- Messaging to webmasters.
- Uploading files such as videos or images.

Crawlers that traverse the web, download, and parse web pages are needed for both activities: comment spamming and address harvesting. Given the required effort, it would be efficient to simultaneously run both activities, i.e., harvesting addresses while sending comment spam. But do spammers make a business out of both harvesting addresses and delivering comment spam?

To test this hypothesis, we included trap web forms in addition to spamtrap addresses in web pages. Like the spamtrap addresses, our trap forms are not rendered by the browser and are thus invisible to normal users. We assume any data sent over trap forms to be sent by bots. As these forms can have any structure, we replicated forms used for placing comments by the WordPress software, which is frequently used to run blogs and websites. Over a period of more than two years, we received 89,158 comment spams from 9,312 distinct IP addresses. From July 2010 to May 2011, five harvester hosts originating from four different countries submitted empty forms in which they could have technically sent comment spam. These hosts submitted five different user agent strings, including the Java user agent discussed earlier. However, none of the email addresses issued to comment spam bots was spammed. This suggests that comment spam bots do not harvest email addresses.

To further study the differences between comment spam bots and harvesting bots, we repeated the analysis presented in § 4.1 - § 4.5 for the comment spam dataset (not shown here). Our findings suggest that harvesting and comment spamming are uncorrelated activities, run using different software, and are most likely run by different entities. Thus, comment spammers do not (yet?) exploit the feasibility of simultaneously extracting and selling email addresses on the market.

### 4.7 Role of Search Engines in Harvesting

We now address the role of search engines in the context of address harvesting. Surprisingly, we received spam to spamtrap addresses advertised only to major search engine bots, i.e., Google, Microsoft, and Yahoo. Specifically, 0.5% of the spamtrap addresses delivered only to search engines received 0.2% of the total spam. We define visits by search engines as requests made by crawlers originating from the Google, Microsoft, and Yahoo ASes. All of the visits originating from those ASes used the proper user agent of the respective search engine bot. Concretely, 13% of the hosts classified as harvesters originated from the Google AS, 3.7% from the Microsoft AS, and 1.2% from the Yahoo AS. We observe this behavior across all sites over the entire measurement period (cf. Figure 2(b) for the Google bot).

While the impact of harvesting techniques on the overall spam volume and the number of harvested addresses is relatively small, the very existence of this phenomenon is a surprising result that has not been previously reported. It suggests that harvesters use search engines as a proxy to either (i) hide their own identity or (ii) optimize the harvesting process itself. Since harvesters did not try to hide their identities by using anonymity services or by masquerading as legitimate browsers by sending common user agent strings, option (ii) seems more likely. In fact, we found harvesting software that offers the functionality of querying search engines. For example, ECrawl v2.63 [18] states: "Access to the Google cache (VERY fast harvesting)." The Fast Email Harvester 1.2 "collector supports all major search engines, such as Google, Yahoo, MSN" [4]. This finding suggests that website operators should not advertise email addresses to search engine bots and calls for a further systematic investigation.

### 5. Conclusions

We have presented a longitudinal study of address harvesting based on a large-scale dataset, providing an up-to-date view on spam origins. We show that some aspects of harvesting are fairly stable over time, such as the persistence of certain user agents and the poor performance of harvesting software in breaking obfuscation methods. One interpretation of our results suggests that only a few harvesting parties are active, each causing different spam volumes. We also find that new aspects arise in the harvesting process, such as the emerging trend of using legitimate search engines as proxies for address harvesting. Other observations point to the decline of harvesting activity on our sites and the existence of only a small set of hosts responsible for a major fraction of the received spam.

Our findings reveal several guidelines for webmasters:
- Continue using obfuscation methods for displaying email addresses on the web, e.g., by using JavaScript code.
- Restrict embedding email addresses in websites sent to legitimate browsers, and in particular, not to search engine bots.
- Rely on blacklists, e.g., provided by Project Honeypot, to limit the likelihood of address harvesting.

### 6. Acknowledgements

We thank Bernhard Ager, Gregor Maier, Enric Pujol, and Nadi Sarrar for their insightful comments. We also thank the webmasters for including our scripts. Additionally, we thank the anonymous IMC reviewers and our shepherd Vern Paxson for their valuable comments and suggestions to improve this manuscript. Last but not least, we thank all the anonymous spammers and harvesters for making this study possible.

### 7. References

[1] S. Abu-Nimeh and T. Chen. Proliferation and detection of blog spam. IEEE Security and Privacy, 8(5):42–47, Sept. 2010.
[2] I. Androutsopoulos, J. Koutsias, K. V. Chandrinos, G. Paliouras, and C. D. Spyropoulos. An evaluation of Naive Bayesian anti-spam filtering. In Workshop on Machine Learning in the New Information Age, pages 9–17, 2000.
[3] A. Antonopoulos, K. Stefanidis, and A. Voyiatzis. Fighting spammers with spam. In International Symposium on Autonomous Decentralized Systems, 2009.
[4] eMarkSofts. Fast email harvester 1.2. http://fast-email-harvester.smartcode.com/info.html, 2009.
[5] L. H. Gomes, C. Cazita, J. M. Almeida, V. Almeida, and W. Meira, Jr. Characterizing a spam traffic. In ACM IMC, pages 356–369, 2004.
[6] G. Gu, J. Zhang, and W. Lee. BotSniffer: Detecting botnet command and control channels in network traffic. In Network and Distributed System Security Symposium, 2008.
[7] S. Hao, N. A. Syed, N. Feamster, A. G. Gray, and S. Krasser. Detecting spammers with SNARE: spatio-temporal network-level automatic reputation engine. In USENIX security symposium, pages 101–118, 2009.
[8] O. Hohlfeld. IMC 2012 address harvesting dataset. http://www.net.t-labs.tu-berlin.de/~oliver/harvesting/, 2012.
[9] T. Holz, C. Gorecki, K. Rieck, and F. C. Freiling. Measuring and detecting fast-flux service networks. In Network and Distributed System Security Symposium, 2008.
[10] X. Hu, M. Knysz, and K. G. Shin. Measurement and analysis of global IP-usage patterns of fast-flux botnets. In IEEE INFOCOM, pages 2633–2641, 2011.
[11] J. P. John, A. Moshchuk, S. D. Gribble, and A. Krishnamurthy. Studying spamming botnets using Botlab. In USENIX NSDI, pages 291–306, 2009.
[12] C. Kanich, C. Kreibich, K. Levchenko, B. Enright, G. M. Voelker, V. Paxson, and S. Savage. Spamalytics: An empirical analysis of spam marketing conversion. In ACM Conference on Computer and Communications Security, pages 3–14, 2008.
[13] J. Kim, K. Chung, and K. Choi. Spam filtering with dynamically updated URL statistics. IEEE Security and Privacy, 5(4):33–39, July 2007.
[14] M. Knysz, X. Hu, and K. G. Shin. Good guys vs. bot guise: Mimicry attacks against fast-flux detection systems. In IEEE INFOCOM, pages 1844–1852, 2011.
[15] P. Kolari, A. Java, and A. Joshi. Spam in Blogs and Social Media, Tutorial. In International Conference on Weblogs and Social Media, 2007.
[16] C. Kreibich, C. Kanich, K. Levchenko, B. Enright, G. M. Voelker, V. Paxson, and S. Savage. Spamcraft: an inside look at spam campaign orchestration. In USENIX LEET, 2009.
[17] Y. Niu, H. Chen, F. Hsu, Y.-M. Wang, and M. Ma. A quantitative study of forum spamming using context-based analysis. In Network and Distributed System Security Symposium, 2007.
[18] Northworks Solutions Ltd. Ecrawl v2.63. http://www.northworks.biz/software.html, 2012.
[19] A. Pathak, F. Qian, Y. C. Hu, Z. M. Mao, and S. Ranjan. Botnet spam campaigns can be long lasting: evidence, implications, and analysis. In ACM SIGMETRICS, pages 13–24, 2009.
[20] M. B. Prince, B. M. Dahl, L. Holloway, A. M. Keller, and E. Langheinrich. Understanding how spammers steal your email address: An analysis of the first six months of data from Project Honey Pot. In Collaboration, Electronic messaging, Anti-Abuse and Spam Conference, 2005.
[21] A. Rajadesingan and A. Mahendran. Comment spam classification in blogs through comment analysis and comment-blog post relationships. In Computational Linguistics and Intelligent Text Processing, pages 490–501, 2012.
[22] A. Ramachandran and N. Feamster. Understanding the network-level behavior of spammers. In ACM SIGCOMM, pages 291–302, 2006.
[23] S. Roy, A. Pathak, and Y. C. Hu. Mitigating the impact of spams by internet content pollution. In ACM SIGCOMM Poster, 2007.
[24] G. Schryen. An email honeypot addressing spammers' behavior in collecting and applying addresses. In IEEE Information Assurance Workshop, 2005.
[25] C. A. Shue, M. Gupta, J. J. Lubia, C. H. Kong, and A. Yuksel. Spamology: A study of spam origins. In Collaboration, Electronic messaging, Anti-Abuse and Spam Conference, 2009.
[26] A. Thomason. Blog spam: A review. In Collaboration, Electronic messaging, Anti-Abuse and Spam Conference, 2007.
[27] Y. Xie, F. Yu, K. Achan, R. Panigrahy, G. Hulten, and I. Osipkov. Spamming botnets: signatures and characteristics. ACM CCR, 38(4):171–182, Oct. 2008.
[28] K. S. Xu, M. Kliger, Y. Chen, P. J. Woolf, and A. O. Hero. Revealing social networks of spammers through spectral clustering. In IEEE ICC, 2009.
[29] L. Zhang, J. Zhu, and T. Yao. An evaluation of statistical spam filtering techniques. ACM Transactions on Asian Language Information Processing, 3(4):243–269, Dec. 2004.
[30] Y. Zhao, Y. Xie, F. Yu, Q. Ke, Y. Yu, Y. Chen, and E. Gillum. Botgraph: Large scale spamming botnet detection. In USENIX NSDI, pages 321–334, 2009.
[31] L. Zhuang, J. Dunagan, D. R. Simon, H. J. Wang, and J. D. Tygar. Characterizing botnets from email spam records. In USENIX LEET, 2008.