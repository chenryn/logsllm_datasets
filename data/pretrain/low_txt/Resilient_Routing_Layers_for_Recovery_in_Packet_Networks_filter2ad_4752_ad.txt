### Awareness of LSPs Passing Through Failed Links or Nodes

In the context of network failures, it is essential to be aware of which Label Switched Paths (LSPs) are originally passing through a failed link or node. For global recovery, the ingress node redirects traffic to backup LSPs. The ingress node can be informed about all nodes in an LSP using, for example, the Record Route Object in RSVP (as specified in [2]).

### 5.1 MPLS Algorithms

LSPs for different layers can be created in several ways. A straightforward approach is to set up an LSP from each node to each candidate egress node for each layer. This method provides protection for both existing and dynamically created LSPs and allows any node in the network to switch layers. However, this approach may result in an excessive number of protection LSPs.

An alternative approach is to operate similarly to the standard MPLS operation mode, providing protection for existing MPLS paths. In the following, we present an algorithm for calculating both global and local protection LSPs.

#### Algorithm for Calculating Protection LSPs

Given a network topology \( G = (V, E) \), a set of primary LSPs \( P = \{p_1, p_2, \ldots, p_n\} \), and a set of safe layers \( L \), where each \( p_i \) is represented by the ordered set \( \{n_{i,1}, n_{i,2}, \ldots, n_{i,m_i}\} \) with \( m_i \) being the length of LSP \( p_i \):

1. **Global Backup LSPs:**
   - For each primary LSP \( p_i \in P \):
     - For each layer \( l \in L \):
       - Create a global backup LSP \( g_l^i \) by finding the shortest path between the end points:
         \[
         g_l^i = sp(n_{i,1}, n_{i,m_i}, L)
         \]

2. **Local Backup LSPs:**
   - For each primary LSP \( p_i \in P \):
     - For each node \( j \) from 2 to \( m_i - 2 \):
       - Create a local backup LSP \( q_j^i \) from the repair point \( n_{i,j} \) in the safe layer of the upstream node \( n_{i,j+1} \).

3. **Special Case Handling:**
   - If a link failure occurs on a link connected to an egress node:
     - Check if there exists a link to the egress node that is included in the safe layer of the egress node.
     - If the link is also included in the safe layer of the detecting node, create an LSP from the detecting node but use a deflection node as the forced next hop.
     - If the link is not in the safe layer of the egress node, handle it accordingly.

### Traffic Redirection

In the event of a failure, either the node detecting the failure or the ingress node of the primary LSP must redirect traffic from the original LSPs to the backup LSPs.

### Comparison with Standard MPLS Recovery

- **Global Recovery:** 
  - Standard MPLS requires one backup LSP per primary LSP.
  - RRL MPLS requires \( |P| \cdot |L| \) backup LSPs.

- **Local Recovery:**
  - Both methods require \( \sum_{i=1}^{m_i - 2} \) backup LSPs.

### Merging Local Backup Paths

Some MPLS applications recommend that the local backup path merge with the primary path as soon as possible after bypassing the failure, even if it is not the shortest path. This is because the primary path is configured to meet all service requirements, which may not be the case for the backup path. RRL supports this approach by establishing a backup LSP according to the safe layer of the failed node or link, ending at the first merge point with the primary LSP. In case of failure, the detecting node moves the traffic to the correct layer and stacks the corresponding header to the packets, which is then popped at the merge point.

### Conclusion and Future Work

In this paper, we have introduced a novel method for handling recovery in packet networks called Resilient Routing Layers (RRL). RRL builds simple and intuitive recovery abstractions, offering many optimization choices. Despite its algorithmic support, RRL is sufficiently simple for a network engineer to implement manually for reasonably sized networks.

Compared to other recovery schemes, RRL is a strong candidate for packet network recovery, performing comparably in terms of path lengths and additional state information. It is scalable, covering very large networks with just five layers and providing a solid foundation for creating MPLS backup LSPs.

Future work will focus on optimizing RRL for handling link failures and fast local protection in connectionless networks like IP and Ethernet. We will also explore network traffic management, including packet reordering, packet loss, load balancing, and recovery differentiation.

### References

[1] http://www.cs.washington.edu/research/networking/rocketfuel/
[2] D. Awduche et al. RSVP-TE: Extensions to RSVP for LSP tunnels. In IETF, RFC 3209, Dec. 2001.
[3] R. Bartos and M. Raman. A scheme for fast restoration in MPLS networks. In Proc. of the Twelfth IASTED International Conference on Parallel and Distributed Computing and Systems (PDCS), pages 488–493, 2000.
[4] R. Bartos and M. Raman. A heuristic approach to service restoration in MPLS networks. In Proc. ICC, pages 117–121, June 2001.
[5] A. Bremler-Barr, Y. Afek, H. Kaplan, E. Cohen, and M. Merritt. Restoration by path concatenation: Fast recovery of MPLS paths. In Proc. ACM Symposium on Principles of Distributed Computing, pages 43–52, 2001.
[6] T. Bu and D. Towsley. On distinguishing between internet power law topology generators. In IEEE INFOCOM, pages 638–647, New York, June 2002.
[7] T. Cicic, A. Kvalbein, A. F. Hansen, and S. Gjessing. Resilient Routing Layers and p-Cycles: Tradeoffs in Network Fault Tolerance. In to appear at High Performance Switching and Routing (HPSR2005), Hong Kong, May 2005.
[8] W. D. Grover and D. Stamatelakis. Cycle-oriented distributed preconfiguration: Ring-like speed with mesh-like capacity for self-planning network restoration. In Proc. ICC, volume 1, pages 537–543, June 1998.
[9] W. D. Grover and D. Stamatelakis. Self-organizing closed path configuration of restoration capacity in broadband mesh transport networks. In Proc. CCBR’98, 1998.
[10] H. Huang and J. Copeland. A series of Hamiltonian cycle-based solutions to provide simple and scalable mesh optical network resilience. IEEE Communications Magazine, 40:46 –51, Nov. 2002.
[11] A. Itai and M. Rodeh. The multi-tree approach to reliability in distributed networks. Inform. Computation, 79:43–59, 1988.
[12] C. Labovitz, A. Ahuja, A. Bose, and F. Jahanian. Delayed Internet routing convergence. IEEE/ACM Transactions on Networking, 9(3):293–306, June 2001.
[13] C. Labovitz et al. Origins of Internet routing instability. In Proceedings of IEEE/INFOCOM, Mar. 1999.
[14] M. H. Macgregor and W. Groover. Optimized k-shortest-paths algorithm for facility restoration. Software-practice and experience, 24(9):823–834, 1994.
[15] M. Medard, S. G. Finn, and R. A. Barry. Redundant trees for preplanned recovery in arbitrary vertex-redundant or edge-redundant graphs. IEEE/ACM Transactions on Networking, 7(5):641–652, Oct. 1999.
[16] A. Medina, A. Lakhina, I. Matta, and J. Byers. BRITE: An approach to universal topology generation. In IEEE MASCOTS, pages 346–353, Aug. 2001.
[17] K. Menger. Zur allgemeinen kurventheorie. Fund. Math., 10:95–115, 1927.
[18] F. Otel. On fast computing bypass tunnel routes in MPLS-based local restoration. In Proceedings of 5th IEEE International Conference on High Speed Networks and Multimedia Communications, pages 234–238, Jeju, Korea, 2002.
[19] P. Pan et al. Fast reroute extensions to RSVP-TE for LSP tunnels. In IETF, Internet Draft, Aug. 2004.
[20] E. Rosen et al. Multiprotocol label switching architecture. In IETF, RFC 3031, Jan. 2001.
[21] A. Sack and W. D. Grover. Hamiltonian p-cycles for fiber-level protection in homogeneous and semi-homogeneous optical networks. IEEE Network, 18:49–56, Mar. 2004.
[22] V. Sharma and F. Hellstrand. Framework for multi-protocol label switching (MPLS)-based recovery. In IETF, RFC 3469, Feb. 2003.
[23] D. Stamatelakis and W. D. Grover. Rapid span or node restoration in IP networks using virtual protection cycles. In Proc. CCBR’99, Ottawa, Nov. 1999.
[24] D. Stamatelakis and W. D. Grover. IP layer restoration and network planning based on virtual protection cycles. IEEE Journal on selected areas in communications, 18(10), Oct. 2000.
[25] J. W. Suurballe. Disjoint paths in a network. Networks, pages 125–145, 1974.
[26] J. W. Suurballe and R. E. Tarjan. A quick method for finding shortest pairs of disjoint paths. Networks, 14:325–336, 1984.
[27] I. Theiss and O. Lysne. FROOTS - fault handling in up*/down* routed networks with multiple roots. In Proceedings of the International Conference on High Performance Computing (HiPC 2003), 2003.
[28] B. M. Waxman. Routing of multipoint connections. IEEE Journal on Selected Areas in Communications, 6(9):1617–1622, Dec. 1988.
[29] M. A. Weiss. Data Structures and Algorithm Analysis. Benjamin/Cummings, 1992.
[30] J. S. Whalen and J. Kenney. Finding maximal link disjoint paths in a multigraph. In Proc. IEEE GLOBECOM ’90, 1990.
[31] G. Xue et al. Delay reduction in redundant trees for preplanned protection against single link/node failure in 2-connected graphs. In IEEE GLOBECOM2002: (Optical Networking Symposium), pages 2691–2695, 2002.