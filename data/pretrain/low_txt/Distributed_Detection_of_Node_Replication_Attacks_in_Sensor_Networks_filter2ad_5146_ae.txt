### Overview of Public Values and Hash Tree Authentication

The root node, derived from all public values, can be utilized to authenticate any one-time signature within the tree. For signature verification, a node must include all necessary values from the hash tree, allowing the verifier to recompute the root node. For a tree with \( n \) nodes, this approach requires an additional \( \ln n \) values. Using the parameters suggested by Rohatgi [31] for the Merkle-Winternitz signature, a signature is 230 bytes in size, and the additional verification values would require an additional 100 bytes. This is substantial for a sensor network, so we recommend using asymmetric cryptography to achieve smaller messages, despite the higher verification cost. Since message transmission accounts for the majority of energy consumption, sending smaller messages, even at the cost of higher computational overhead, can help conserve energy.

### Pseudo-Neighbors and Masked-Replication Attacks

Pseudo-neighbors are used to counteract masked-replication attacks. For example, in the Randomized Multicast, a node (β) will forward the location claim to a randomly selected set of witness nodes. If the masked nodes fail to send out location claims, the closest legitimate nodes will have a higher probability of appointing themselves as pseudo-neighbors. If the replicated nodes do not respond to requests from the pseudo-nodes, the legitimate nodes will cut off communication. By requiring all nodes to provide location claims, the resiliency of our detection algorithm can be relied upon to revoke replicated nodes.

### Resiliency and Emergent Properties

In our discussion of the resiliency of various protocols, we assumed that each node has at least one legitimate neighbor. Without this assumption, the protocols may fail to detect node replication. If an adversary compromises all of a node's (α) neighbors, they can create a replica of α without fear of detection, as the compromised nodes will not send out location claims for the original α. To create a second replica, the adversary must also compromise the nodes surrounding the first replica, thus requiring the compromise of an additional \( d \) nodes for each replica. However, if the compromised nodes mask the replicated nodes, the adversary can enhance their influence in the network. For instance, if the adversary compromises nodes \( \mu_1, \mu_2, \ldots, \mu_k \), they can assign replicas of \( \{\mu_1, \mu_2, \ldots, \mu_{i-1}, \mu_{i+1}, \ldots, \mu_k\} \) as neighbors of \( \mu_i \). This gives the adversary the influence of \( k^2 \) nodes after compromising \( k \) nodes.

As a concrete example, if the adversary compromises nodes \( \mu_1 \) and \( \mu_2 \), they can create replicas \( \mu_1' \) and \( \mu_2' \). By assigning \( \mu_1' \) as \( \mu_2 \)'s only neighbor and \( \mu_2' \) as \( \mu_1 \)'s only neighbor, the compromised nodes can mask the replicas. None of the discussed protocols will detect these replicas, as they rely on the replicated node's neighbors to propagate the replica's location claims.

To thwart this attack, each node \( \beta \) maintains a list of the \( m \) nodes from which it has seen the most traffic. For each node \( \alpha \) on the list, \( \beta \) appoints itself a pseudo-neighbor of \( \alpha \) with a probability proportional to the ratio of traffic from \( \alpha \) to the number of location claims concerning \( \alpha \):

\[ P_{\text{pseudo}} \propto \frac{\text{traffic}_\alpha}{\text{claims}_\alpha} \]

If \( \alpha \) fails to respond, \( \beta \) ceases to forward traffic from \( \alpha \). If \( \alpha \) responds, \( \beta \) follows the protocol-dependent behavior.

### Distributed Detection Algorithms

Our primary algorithms, Randomized Multicast and Line-Selected Multicast, achieve distributed detection of global events with low overhead and high resiliency. These strong properties stem from their emergent nature. Emergent algorithms leverage the collective efforts of multiple sensor nodes to provide capabilities beyond those of individual nodes. After initial deployment, a topology emerges as nodes exchange neighbor information and establish a routing infrastructure. Emergent algorithms, being distributed, are highly robust against individual node failures and avoid the problems inherent in centralized solutions. These properties make them ideal for security applications, especially in unpredictable environments. Our protocols represent the first application of emergent algorithms to the problem of security in sensor networks, and we believe that additional research will continue to favor distributed solutions. Furthermore, emergent algorithms can be applied more generally to security in other classes of networks, such as peer-to-peer and ad-hoc wireless networks, where individual nodes are vulnerable to compromise.

### Related Work

Eschenauer and Gligor [13] propose centralized node revocation in sensor networks, where the base station broadcasts a revocation message upon detecting a misbehaving node. Chan, Perrig, and Song [6] propose a localized mechanism for sensor network node revocation, where nodes can revoke their neighbors. Neither paper discusses a distributed approach for detecting distributed intrusions.

In broadcast encryption, key revocation has been an important mechanism to recover from compromised keys [2, 3, 15, 16, 21, 26], but these approaches do not provide duplicate node detection in sensor networks. Similarly, key revocation in the context of multicast content distribution [35, 37] does not apply here.

The Sybil attack, where a malicious node gains an unfair advantage by claiming multiple identities [10], is related to the node replication attack. Douceur presents countermeasures for peer-to-peer networks involving resource verification [10]. Newsome et al. present techniques to defend against the Sybil attack in sensor networks [27], including wireless network testing, key space verification, and central node registration. Only their centralized node registration technique, similar to the one we describe in Section 3.1, can detect a node replication attack, but it is brittle in the face of node compromise and has high overhead.

Bawa et al. [1] propose an algorithm for counting the number of members in a peer-to-peer network using a random sampling approach based on the birthday paradox. Our Randomized Multicast also relies on the birthday paradox.

### Future Work

In our future work, we aim to explore additional mechanisms to ensure that our protocols function even in the presence of misbehaving nodes. For example, McCune et al. [23] describe a technique using secure implicit sampling to detect nodes that suppress or drop messages. We could also use some of the techniques described in Section 8.2 to periodically sweep the network for replicas, preventing the adversary from establishing a significant foothold.

### Conclusion

We have discussed various approaches to detect node replication. Centralized approaches place excessive trust in the base station and load on nearby nodes, while local voting schemes are ill-equipped to detect distributed node replication. In contrast, our schemes enable distributed detection of distributed events. The final scheme, Line-Selected Multicast, provides excellent resiliency with near-optimal communication overhead and modest memory requirements. Both of our primary schemes illustrate the power of emergent properties in sensor networks. Given the typical adversary model in sensor networks, we argue that the security of such networks will increasingly depend on emergent algorithms. Cost considerations and unattended deployment leave individual sensors vulnerable to compromise. Since we cannot predict the exact nature or number of targets, the network must collectively resist, report, and revoke compromised nodes in a manner that goes beyond traditional intrusion detection systems. We expect that emergent algorithms will ultimately provide the best defense against these insidious attacks.

### Acknowledgements

The authors would like to thank Haowen Chen and Dawn Song for their insightful comments and suggestions. Diana Seymour provided discerning observations and invaluable help editing the paper. We also thank the anonymous reviewers for their helpful suggestions.

### References

[1] M. Bawa, H. Garcia-Molina, A. Gionis, and R. Motwani. Estimating aggregates on a peer-to-peer network. Technical report, Stanford University, 2003.
[2] C. Blundo and A. Cresti. Space requirements for broadcast encryption. In Advances in Cryptology (EUROCRYPT), 1995.
[3] C. Blundo, L. Mattos, and D. Stinson. Trade-offs between communication and storage in unconditionally secure schemes for broadcast encryption and interactive key distribution. In Advances in Cryptology (CRYPTO), 1996.
[4] D. Braginsky and D. Estrin. Rumor routing algorithm for sensor networks. In Proceedings of ACM Workshop on Wireless Sensor Networks and Applications, 2002.
[5] N. Bulusu, J. Heidemann, and D. Estrin. GPS-less low-cost outdoor localization for very small devices. IEEE Personal Communications Magazine, October 2000.
[6] H. Chan, A. Perrig, and D. Song. Random key predistribution schemes for sensor networks. In Proceedings of IEEE Symposium on Security and Privacy, May 2003.
[7] T. Cormen, C. Leiserson, R. Rivest, and C. Stein. Introduction to Algorithms. MIT Press, 2001.
[8] L. Doherty, K. S. J. Pister, and L. E. Ghaoui. Convex position estimation in wireless sensor networks. In Proceedings of IEEE Infocom, 2001.
[9] D. Dolev and A. C. Yao. On the security of public key protocols. IEEE Transactions on Information Theory, 1983.
[10] J. R. Douceur. The Sybil attack. In Proceedings of Workshop on Peer-to-Peer Systems (IPTPS), Mar. 2002.
[11] J. Dyer, M. Lindemann, R. Perez, R. Sailer, L. van Doorn, S. W. Smith, and S. Weingart. Building the IBM 4758 Secure Coprocessor. IEEE Computer, 2001.
[12] J. Elson, L. Girod, and D. Estrin. Fine-grained network time synchronization using reference broadcasts. SIGOPS Oper. Syst. Rev., 2002.
[31] P. Rohatgi. A compact and fast hybrid signature scheme for multicast packet. In Proceedings of ACM Conference on Computer and Communications Security (CCS), Nov. 1999.
[32] A. Seshadri, A. Perrig, L. van Doorn, and P. Khosla. Swatt: Software-based attestation for embedded devices. In Proceedings of IEEE Symposium on Security and Privacy, May 2004.
[33] S. W. Smith and S. Weingart. Building a high-performance, programmable secure coprocessor. Computer Networks, Apr. 1999. Special Issue on Computer Network Security.
[34] H. Solomon. Geometric Probability. Society for Industrial and Applied Mathematics (SIAM), 1978.
[35] D. Wallner, E. Harder, and R. Agee. Key management for multicast: Issues and architectures. Internet Request for Comment RFC 2627, Internet Engineering Task Force, June 1999.
[36] S. Weingart. Physical security devices for computer subsystems: A survey of attacks and defenses. In Cryptographic Hardware and Embedded Systems (CHES), Aug. 2000.
[37] C. Wong, M. Gouda, and S. Lam. Secure group communications using key graphs. In Proceedings of ACM SIGCOMM, 1998.
[13] L. Eschenauer and V. Gligor. A key-management scheme for distributed sensor networks. In Proceedings of the ACM Conference on Computer and Communication Security (CCS), Nov. 2002.
[14] D. Estrin, R. Govindan, J. S. Heidemann, and S. Kumar. Next century challenges: Scalable coordination in sensor networks. In Mobile Computing and Networking, 1999.
[15] A. Fiat and M. Naor. Broadcast encryption. In Advances in Cryptology (CRYPTO), 1994.
[16] J. Garay, J. Staddon, and A. Wool. Long-lived broadcast encryption. In Advances in Cryptology (CRYPTO), 2000.
[17] V. D. Gligor. Security of emergent properties in ad-hoc networks. In Proceedings of International Workshop on Security Protocols, Apr. 2004.
[18] A. Hu and S. D. Servetto. Asymptotically optimal time synchronization in dense sensor networks. In Proceedings of ACM International Conference on Wireless Sensor Networks and Applications, 2003.
[19] B. Karp and H. T. Kung. GPSR: Greedy perimeter stateless routing for wireless networks. In Proceedings of Conference on Mobile Computing and Networking (MobiCom), Aug. 2000.
[20] D. Liu and P. Ning. Efficient distribution of key chain commitments for broadcast authentication in distributed sensor networks. In Proceedings of Network and Distributed System Security Symposium (NDSS), Feb. 2003.
[21] M. Luby and J. Staddon. Combinatorial bounds for broadcast encryption. In Advances in Cryptology (EUROCRYPT), 1998.
[22] D. Malan, M. Welsh, and M. Smith. A public-key infrastructure for key distribution in TinyOS based on elliptic curve cryptography. In Proceedings of IEEE Conference on Sensor and Ad hoc Communications and Networks (SECON), Oct. 2004.
[23] J. M. McCune, E. Shi, A. Perrig, and M. K. Reiter. Detection of denial-of-message attacks on sensor network broadcasts. In Proceedings of IEEE Symposium on Security and Privacy, May 2005.
[24] R. Merkle. Protocols for public key cryptosystems. In Proceedings of the IEEE Symposium on Research in Security and Privacy, Apr. 1980.
[25] R. Merkle. A digital signature based on a conventional encryption function. In Advances in Cryptology (CRYPTO), 1988.
[26] D. Naor, M. Naor, and J. Lotspiech. Revocation and tracing schemes for stateless receivers. In Advances in Cryptology (CRYPTO), 2001.
[27] J. Newsome, E. Shi, D. Song, and A. Perrig. The Sybil attack in sensor networks: Analysis and defenses. In Proceedings of IEEE Conference on Information Processing in Sensor Networks (IPSN), Apr. 2004.
[28] J. Newsome and D. Song. GEM: Graph embedding for routing and data-centric storage in sensor networks without geographic information. In ACM Conference on Embedded Networked Sensor Systems (SenSys), Nov. 2003.
[29] A. Perrig, R. Szewczyk, V. Wen, D. Culler, and J. D. Tygar. SPINS: Security protocols for sensor networks. In ACM Conference on Mobile Computing and Networks (MobiCom), July 2001.
[30] S. Ratnasamy, B. Karp, L. Yin, F. Yu, D. Estrin, R. Govindan, and S. Shenker. GHT: A geographic hash table for data-centric storage. In Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05), 1081-6011/05 $ 20.00 IEEE.

### Network Topologies

We tested the Line-Selected Multicast protocol with a variety of network topologies. Samples of each are shown below. Dots represent nodes, and lines represent connections between neighbors.

(a) Thin H
(b) Thin Cross
(c) S
(d) Large Cross
(e) L
(f) Large H

Figure 4. Assorted Network Topologies

Proceedings of the 2005 IEEE Symposium on Security and Privacy (S&P’05) 
1081-6011/05 $ 20.00 IEEE