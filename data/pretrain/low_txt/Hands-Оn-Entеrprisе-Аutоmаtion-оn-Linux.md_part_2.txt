# Table of Contents

## Chapter 11: Database Management
- **Summary**: 288
- **Questions**: 289
- **Further Reading**: 289

## Chapter 11: Database Management (Continued)
- **Technical Requirements**: 290
- **Installing Databases with Ansible**: 291
  - **Installing MariaDB Server with Ansible**: 291
  - **Installing PostgreSQL Server with Ansible**: 300
- **Importing and Exporting Data**: 306
  - **Automating MariaDB Data Loading with Ansible**: 306
- **Performing Routine Maintenance**: 318
  - **Routine Maintenance on PostgreSQL with Ansible**: 318
- **Summary**: 322
- **Questions**: 322
- **Further Reading**: 323

## Chapter 12: Performing Routine Maintenance with Ansible
- **Technical Requirements**: 324
- **Tidying Up Disk Space**: 325
- **Monitoring for Configuration Drift**: 331
- **Understanding Process Management with Ansible**: 337
- **Rolling Updates with Ansible**: 342
- **Summary**: 346
- **Questions**: 346
- **Further Reading**: 347

## Section 4: Securing Your Linux Servers

### Chapter 13: Using CIS Benchmarks
- **Technical Requirements**: 349
- **Understanding CIS Benchmarks**: 350
  - **What is a CIS Benchmark?**: 350
  - **Exploring CIS Benchmarks in Detail**: 352
- **Applying Security Policy Wisely**: 355
  - **Applying the SELinux Security Policy**: 356
  - **Mounting of Filesystems**: 356
  - **Installing Advanced Intrusion Detection Environment (AIDE)**: 357
- **Understanding CIS Service Benchmarks**: 358
  - **X Windows**: 358
  - **Allowing Hosts by Network**: 358
  - **Local Firewalls**: 359
- **Overall Guidance on Scoring**: 359
- **Scripted Deployment of Server Hardening**: 360
  - **Ensuring SSH Root Login is Disabled**: 360
  - **Ensuring Packet Redirect Sending is Disabled**: 365
  - **Running CIS Benchmark Scripts from a Remote Location**: 368
- **Summary**: 371
- **Questions**: 371
- **Further Reading**: 372

### Chapter 14: CIS Hardening with Ansible
- **Technical Requirements**: 373
- **Writing Ansible Security Policies**: 374
  - **Ensuring Remote Root Login is Disabled**: 375
  - **Building Up Security Policies in Ansible**: 378
  - **Implementing More Complex Security Benchmarks in Ansible**: 385
  - **Making Appropriate Decisions in Your Playbook Design**: 388
  - **Application of Enterprise-Wide Policies with Ansible**: 390
  - **Testing Security Policies with Ansible**: 394
- **Summary**: 397
- **Questions**: 397
- **Further Reading**: 398

### Chapter 15: Auditing Security Policy with OpenSCAP
- **Technical Requirements**: 399
- **Installing Your OpenSCAP Server**: 400
- **Running OpenSCAP Base**: 401
- **Installing the OpenSCAP Daemon**: 402
- **Running SCAP Workbench**: 403
- **Considering Other OpenSCAP Tools**: 404
- **Evaluating and Selecting Policies**: 405
- **Installing SCAP Security Guide**: 406
- **Understanding the Purpose of XCCDF and OVAL Policies**: 408
- **Installing Other OpenSCAP Policies**: 410
- **Scanning the Enterprise with OpenSCAP**: 412
  - **Scanning the Linux Infrastructure with OSCAP**: 412
  - **Running Regular Scans with the OpenSCAP Daemon**: 422
  - **Scanning with SCAP Workbench**: 426
- **Interpreting Results**: 428
- **Summary**: 432
- **Questions**: 432
- **Further Reading**: 433

### Chapter 16: Tips and Tricks
- **Technical Requirements**: 434
- **Version Control for Your Scripts**: 435
- **Integrating Ansible with Git**: 436
- **Organizing Your Version Control Repositories Effectively**: 438
- **Version Control of Roles in Ansible**: 440
- **Inventories – Maintaining a Single Source of Truth**: 444
- **Working with Ansible Dynamic Inventories**: 445
  - **Example – Working with the Cobbler Dynamic Inventory**: 448
- **Running One-Off Tasks with Ansible**: 452
- **Summary**: 457
- **Questions**: 457
- **Further Reading**: 458

## Assessments
- **Assessments**: 459

## Other Books You May Enjoy
- **Other Books You May Enjoy**: 472

## Index
- **Index**: 475

---

# Preface

Welcome to "Hands-On Enterprise Automation on Linux," your comprehensive guide to streamlining and efficiently managing Linux deployments at enterprise scale. This book will equip you with the knowledge and skills needed to standardize your Linux environment and manage it effectively using open-source tools such as Ansible, AWX (Ansible Tower), Pulp, Katello, and OpenSCAP. You will learn how to create and maintain standard operating environments, and apply security hardening standards like CIS Benchmarks. Practical, hands-on examples are provided throughout the book to help you build and test your own code.

## Who This Book Is For

This book is designed for professionals who design, implement, and manage Linux environments. It caters to a wide range of open-source professionals, from infrastructure architects to system administrators, including C-level executives. A basic understanding of Linux server implementation and maintenance is assumed, though prior knowledge of Ansible and other automation tools is not essential but can be beneficial.

## What This Book Covers

### Chapter 1: Building a Standard Operating Environment on Linux
- **Overview**: Detailed introduction to standardized operating environments, a core concept that will be referenced throughout the book.
- **Content**: Definitions, benefits, and pitfalls of SOEs, setting the groundwork for the rest of the book.

### Chapter 2: Automating Your IT Infrastructure with Ansible
- **Overview**: Hands-on breakdown of Ansible playbooks, including inventories, roles, variables, and best practices.
- **Content**: A crash course to get you started with Ansible automation.

### Chapter 3: Streamlining Infrastructure Management with AWX
- **Overview**: Installation and utilization of AWX (also available as Ansible Tower) to build robust business processes around your Ansible automation.
- **Content**: Practical examples to help you integrate AWX into your workflow.

### Chapter 4: Deployment Methodologies
- **Overview**: Understanding and leveraging various deployment methods for large-scale Linux environments.
- **Content**: Best practices for large-scale deployments to benefit your enterprise.

### Chapter 5: Using Ansible to Build Virtual Machine Templates for Deployment
- **Overview**: Best practices for deploying Linux by building virtual machine templates.
- **Content**: Practical, hands-on guidance on creating and deploying VM templates.

### Chapter 6: Custom Builds with PXE Booting
- **Overview**: Process of PXE booting for custom server builds.
- **Content**: Scripting and network-based image creation for standard server images.

### Chapter 7: Configuration Management with Ansible
- **Overview**: Managing and maintaining consistency in your Linux builds.
- **Content**: Practical examples to ensure consistent and innovative configurations.

### Chapter 8: Enterprise Repository Management with Pulp
- **Overview**: Controlled patching to prevent inconsistencies in standardized environments.
- **Content**: Using Pulp to manage repositories and patches.

### Chapter 9: Patching with Katello
- **Overview**: Introduction to Katello for enhanced repository management.
- **Content**: User-friendly GUI and advanced control over repositories.

### Chapter 10: Managing Users on Linux
- **Overview**: User account management using Ansible and centralized authentication systems like LDAP.
- **Content**: Detailed look at user management and integration with Ansible.

### Chapter 11: Database Management
- **Overview**: Automating database deployments and routine tasks with Ansible.
- **Content**: Installing and managing databases on Linux servers.

### Chapter 12: Performing Routine Maintenance with Ansible
- **Overview**: Advanced ongoing maintenance tasks with Ansible.
- **Content**: Practical examples for maintaining your Linux server estate.

### Chapter 13: Using CIS Benchmarks
- **Overview**: In-depth examination of CIS server hardening benchmarks.
- **Content**: Applying CIS Benchmarks on Linux servers.

### Chapter 14: CIS Hardening with Ansible
- **Overview**: Efficient and reproducible rollout of security hardening policies across Linux servers.
- **Content**: Writing and implementing security policies with Ansible.

### Chapter 15: Auditing Security Policy with OpenSCAP
- **Overview**: Installation and use of OpenSCAP for continuous security auditing.
- **Content**: Practical guidance on installing and using OpenSCAP for policy compliance.

### Chapter 16: Tips and Tricks
- **Overview**: Tips and tricks for maintaining smooth Linux automation processes.
- **Content**: Best practices and practical advice for handling changing enterprise demands.

## To Get the Most Out of This Book

To follow the examples in this book, it is recommended that you have access to at least two Linux machines for testing, either physical or virtual. Some chapters, such as Chapter 5, require specific hardware or hypervisor support. Be aware that some examples may be disruptive to other services on your network; it is advisable to try them in an isolated test environment.

The book primarily focuses on CentOS 7.6 and Ubuntu Server 18.04, and all test machines were built from official ISO images using minimal installation profiles. Additional software installations, such as AWX, Pulp, Katello, and OpenSCAP, are covered step-by-step. The only exception is FreeIPA, which is mentioned but not covered in detail due to its complexity.

Ansible can be run on any machine with Python 2.7 or Python 3 (versions 3.5 and higher). The book uses Ansible 2.8.x.x, with some examples specific to Ansible 2.9.x.x. Installation instructions can be found at [Ansible Documentation](https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html).

## Download the Example Code Files

You can download the example code files for this book from your account at [Packt Publishing](https://www.packtpub.com). If you purchased the book elsewhere, visit [Packt Support](https://www.packtpub.com/support) to register and have the files emailed to you. The code bundle is also hosted on [GitHub](https://github.com/PacktPublishing/Hands-On-Enterprise-Automation-on-Linux).

## Download the Color Images

Color images of the screenshots and diagrams used in this book are available as a PDF file. You can download it from [Packt CDN](https://static.packt-cdn.com/downloads/9781789131611_ColorImages.pdf).

## Conventions Used

- **CodeInText**: Indicates code words, filenames, file extensions, and user input. Example: "To start with, let's create a role called loadmariadb."
- **Block of Code**:
  ```yaml
  - name: Ensure PostgreSQL service is installed and started at boot time
    service:
      name: postgresql
      state: started
      enabled: yes
  ```
- **Command-Line Input/Output**:
  ```bash
  $ mkdir /var/lib/tftpboot/EFIx64/centos7
  ```
- **Bold**: Indicates new terms, important words, or words seen on screen. Example: "Select System info from the Administration panel."
- **Warnings/Important Notes**: Highlighted warnings or important notes.
- **Tips and Tricks**: Helpful tips and tricks.

## Get in Touch

- **General Feedback**: Email us at [customercare@packtpub.com](mailto:customercare@packtpub.com).
- **Errata**: Report mistakes at [Packt Errata Submission Form](https://www.packtpub.com/support/errata).
- **Piracy**: Report illegal copies of our works at [PI:EMAIL](mailto:PI:EMAIL).
- **Author Opportunities**: Visit [Packt Authors](https://authors.packtpub.com) if you are interested in writing or contributing to a book.

## Reviews

Please leave a review after reading and using this book. Your feedback helps potential readers make informed decisions and provides valuable insights for us and the authors. Thank you!

For more information about Packt, please visit [Packt Publishing](https://www.packtpub.com).

---

# Section 1: Core Concepts

The objective of this section is to cover the fundamental systems administration concepts and techniques that will be explored in the book. We will start with a hands-on introduction to Ansible, the primary tool used for automation and advanced systems administration.

### Chapters in This Section
- **Chapter 1: Building a Standard Operating Environment on Linux**
- **Chapter 2: Automating Your IT Infrastructure with Ansible**
- **Chapter 3: Streamlining Infrastructure Management with AWX**

## Chapter 1: Building a Standard Operating Environment on Linux

This chapter delves into the concept of a Standard Operating Environment (SOE) in Linux. An SOE is an environment where everything is created and modified in a standardized way, making management easier and reducing workload. Although this chapter is theoretical, it sets the foundation for the rest of the book.

- **Definition of SOE**: Fundamental definition and importance.
- **Desirability of SOE**: Why creating an SOE is beneficial.
- **Pitfalls of SOE**: Common challenges and how to maintain balance.

By understanding these concepts, you will be well-prepared to create and manage a standardized Linux environment.