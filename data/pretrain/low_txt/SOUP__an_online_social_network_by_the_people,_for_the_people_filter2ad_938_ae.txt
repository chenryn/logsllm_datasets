### Observations on User Data Traffic

During the data collection period, we observed that messaging and simple profile requests do not consume significant bandwidth and are nearly indistinguishable from an idle connection. More intensive activities, such as browsing through a photo album, also do not significantly impact a regular user's bandwidth, as users typically take their time to view the images. The data traffic generated by content consumption in SOUP is comparable to that in centralized Online Social Networks (OSNs), as users still need to download the data in both systems. However, additional traffic is generated when producing or mirroring content. Produced data must be distributed to mirrors, and when a user acts as a mirror, their uplink is utilized. As shown in Figure 14b, the link is most heavily used during the creation of a photo album. Similar to centralized OSNs, mobile users on a data plan should delay such uploads until they can access a WiFi connection. Based on these observations, our Android implementation disables mirroring on the device while allowing concurrent mirroring on stationary devices. Users can opt to contribute their Android device as a mirror, especially if it is frequently connected to WiFi.

### Stability of Mirror Sets

The mirror sets in SOUP are stable, with minimal changes between selection rounds, as illustrated in Figure 14c. After the initial rounds, most mirror changes involve the addition of a random node, as described in Section 3. Each round, only a few nodes change their additional mirrors. Consequently, the entire dataset of a user does not need to be transmitted frequently, keeping the communication overhead modest.

### Cryptographic Overhead

Our cryptographic operations, implemented using Attribute-Based Encryption (ABE), are approximately 10% faster than existing Java implementations. For example, encrypting a key with four attributes (processing time grows linearly with the number of attributes, independent of the data size [21, 30]) took 262ms at the 90th percentile, while decryption was four times faster, taking 61ms per data item. As improved encryption libraries become available, SOUP can incorporate them into a new version of the Security Manager.

### Scalability and Performance

To test SOUP's limits, we used data from real-world OSNs, specifically Facebook, where we obtained access to the profiles of 20 users. These profiles included detailed information, such as photos and videos, which are often not publicly accessible. The average profile size was approximately 10 MB, with the largest profile containing hundreds of photos in 27 albums and one video, totaling 60 MB. Overall, the data disclosed 2035 unique items, with more than 35% of the items being less than 10 KB in size and 93% (including most images) being less than 100 KB. The total data summed to 206 MB. We selected one mirror to host all the data, noting that storing these 20 profiles is three times the amount that 90% of SOUP nodes would typically store. We then requested text, photo, and video data from the mirror according to the request probabilities for each data type [23]. As shown in Figure 15, the average bandwidth consumption remained well below 600 KB/s, even with 20 requests per second. Spikes in measurements occurred due to frequent requests for large items, potentially causing timeouts if a mirror becomes overloaded, especially for nodes mirroring popular data. Unlike other approaches, SOUP adapts to this situation by dynamically adjusting mirror sets.

### Discussion and Future Work

#### Use of Social Relations

In SOUP, social relations not only provide incentives for data storage but also play a role in mirror selection, data dropping decisions, and filtering out malicious users. However, the trustworthiness of social relations within OSNs is questionable. Recent studies have explored more expressive models of social relations [32, 33], suggesting that friend relations are multi-faceted and that the existence of a relation alone does not indicate its strength. By incorporating more precise relation models, SOUP could further improve its performance, stability, and resiliency. For instance, during mirror selection, SOUP could prefer closely related users with strong ties, valuing their experience sets more than those of mere acquaintances. This could reduce the impact of manipulated experience sets and enhance security for closer friends' data.

#### Handling Large Profiles

While the current storage and communication overhead in SOUP is manageable, future challenges may arise if users share much larger data items or generate extremely large profiles. One potential solution is the use of network coding to distribute large profiles among mirror nodes. Network coding, originally proposed to improve network throughput [34], can also be applied to decentralized data storage [35]. By splitting a file into k equally sized pieces and encoding them into n fragments, it is possible to reconstruct the complete information from any k encoded fragments. This approach can prevent overloading a single node and increase data availability, as only k fragments need to be available for reconstruction.

#### Extended Recommendations

SOUP's current recommendations focus on the availability of data from mirrors. An extension could include reporting the available bandwidth at mirrors, which would be considered during mirror selection. This could lead to better quality of service for users requesting data from mirrors.

### Conclusion

In this paper, we presented SOUP, a decentralized online social network (DOSN) that addresses privacy concerns in centralized OSNs by returning control over data access to users. SOUP securely encrypts user data according to fine-grained access policies and introduces a new approach to storing user data in a large-scale DOSN. It achieves high data availability with minimal overhead, maintains synchronized mirror sets, and is robust against adverse situations. SOUP leverages social relations and altruistically provided resources, distinguishing it as a full-featured DOSN. Our comprehensive implementation and real-world deployment validate SOUP's practicability, including its support for mobile users.

### Acknowledgements

We thank the anonymous reviewers for their valuable feedback, and Joshua Stein, Skyler Berg, and Nicole Marsaglia for their proofreading efforts. This work was partially supported by the EU FP7 CleanSky ITN (grant no. 607584), the National Science Foundation (grants CNS-0644434 and CNS-1118101), the Lindemann Foundation, and the Simulation Science Center, sponsored by the Volkswagen Foundation and the State of Lower Saxony, Germany. The opinions, findings, and conclusions expressed in this material are those of the authors and do not necessarily reflect the views of the supporters.

### References

[1] B. Debatin, J. P. Lovejoy et al., “Facebook and Online Privacy: Attitudes, Behaviors, and Unintended Consequences,” Journal of Computer-Mediated Communication, vol. 15, pp. 83–108, 2009.
[2] http://linkd.in/1jaSeJK (all URLs checked 31/08/2014).
[3] C. Dwyer, “Privacy in the Age of Google and Facebook,” Technology and Society Magazine, IEEE, vol. 30, no. 3, pp. 58 –63, 2011.
[4] “The Diaspora Project,” https://joindiaspora.com/.
[5] A. Shakimov, H. Lim et al., “Vis-a-Vis: Privacy-preserving online social networking via Virtual Individual Servers,” in COMSNETS’11.
[6] D. Liu, A. Shakimov et al., “Conﬁdant: Protecting OSN Data without Locking it Up,” in Middleware ’11.
[7] R. Sharma and A. Datta, “SuperNova: Super-peers based Architecture for Decentralized Online Social Networks,” in COMSNETS’12.
[8] R. Baden, A. Bender et al., “Persona: An Online Social Network with User-deﬁned Privacy,” in SIGCOMM ’09.
[9] K. Rzadca, A. Datta et al., “Replica Placement in P2P Storage: Complexity and Game Theoretic Analyses,” in ICDCS ’10.
[10] S. Nilizadeh, S. Jahid et al., “Cachet: A Decentralized Architecture for Privacy Preserving Social Networking with Caching,” in CoNEXT’12.
[11] L. Cutillo, R. Molva et al., “Safebook: A Privacy-Preserving Online Social Network Leveraging on Real-life Trust,” Com. Mag., IEEE, vol. 47, no. 12, pp. 94–101, 2009.
[12] A. Mahdian, R. Han et al., “Results from a Practical Deployment of the MyZone Decentralized P2P Social Network,” CoRR, 2013.
[13] S. Biedermann, N. P. Karvelas et al., “ProofBook: An Online Social Network Based on Proof-of-Work and Friend-Propagation,” in SOFSEM’2014: Theory and Practice of Computer Science. Springer, 2014, pp. 114–125.
[14] T. Isdal, M. Piatek et al., “Privacy-preserving P2P Data Sharing with OneSwarm,” in SIGCOMM’10.
[15] S. Androutsellis-Theotokis and D. Spinellis, “A Survey of Peer-to-Peer Content Distribution Technologies,” ACM Comput. Surv., vol. 36, pp. 335–371, 2004.
[16] A. Pace, V. Quema et al., “Exploiting Node Connection Regularity for DHT Replication,” in SRDS’11.
[17] S. L. Blond, F. L. Fessant et al., “Choosing Partners Based on Availability in P2P Networks,” ACM TAAS, vol. 7, no. 2, p. 25, 2012.
[18] L. Gyarmati and T. Trinh, “Measuring User Behavior in Online Social Networks,” IEEE Network, vol. 24, no. 5, pp. 26 –31, 2010.
[19] F. Benevenuto, T. Rodrigues et al., “Characterizing User Behavior in Online Social Networks,” in IMC ’09.
[20] A. Mislove, M. Marcon et al., “Measurement and Analysis of Online Social Networks,” in IMC ’07.
[21] J. Bethencourt, A. Sahai et al., “Ciphertext-Policy Attribute-Based Encryption,” in IEEE SP ’07.
[22] C. Wilson, B. Boe et al., “User Interactions in Social Networks and their Implications,” in EuroSys’09.
[23] F. Schneider, A. Feldmann et al., “Understanding Online Social Network Usage from a Network Perspective,” in IMC’09.
[24] B. Viswanath, A. Post et al., “An Analysis of Social Network-based Sybil Defenses,” in SIGCOMM’10.
[25] B. Viswanath, A. Mislove et al., “On the Evolution of User Interaction in Facebook,” in WOSN’09.
[26] “Stanford Large Network Dataset Collection,” http://snap.stanford.edu/data/.
[27] J. Jiang, C. Wilson et al., “Understanding Latent Interactions in Online Social Networks,” in IMC’10.
[28] A. Verde, “Facebook Demographics,” http://www.slideshare.net/amover/facebook-demographics-2011.
[29] A. I. T. Rowstron and P. Druschel, “Pastry: Scalable, Decentralized Object Location, and Routing for Large-Scale Peer-to-Peer Systems,” in Middleware ’01.
[30] O. Bodriagov and S. Buchegger, “Encryption for Peer-to-Peer Social Networks,” in Security and Privacy in Social Networks. Springer, 2013, pp. 47–65.
[31] D. Koll, J. Li et al., “On the State of OSN-based Sybil Defenses,” in NETWORKING’14.
[32] S. Tang, J. Yuan et al., “Relationship Classification in Large Scale Online Social Networks and its Impact on Information Propagation,” in INFOCOM’11.
[33] E. Gilbert and K. Karahalios, “Predicting Tie Strength with Social Media,” in CHI’09.
[34] S.-Y. Li, R. Yeung et al., “Linear Network Coding,” Inform. Theory, IEEE Trans. on, vol. 49, no. 2, pp. 371 –381, 2003.
[35] A. Dimakis, P. Godfrey et al., “Network Coding for Distributed Storage Systems,” Information Theory, IEEE Trans. on, vol. 56, no. 9, pp. 4539 –4551, 2010.