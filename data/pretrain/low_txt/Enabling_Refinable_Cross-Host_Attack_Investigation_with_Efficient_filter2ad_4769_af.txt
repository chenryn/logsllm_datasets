### Arnold and Related Solutions

Arnold [25] provides efficient runtime performance due to its kernel-based solution, which can effectively record non-deterministic events. In contrast, Aftersight [23] and PANDA [27] are hypervisor-based solutions. Aftersight leverages the VMware hypervisor for recording and QEMU for replay, while PANDA is entirely based on QEMU. Similar to RAIN [35], RTAG utilizes Arnold for efficient recording, but RTAG's goals and functionalities are distinct from Arnold and could be implemented on other systems.

### Conclusion

When investigating information flow-based cross-host attacks, analysts must manually analyze the information flow generated by processes running on multiple hosts. This task is time-consuming, error-prone, and challenging due to the high number of processes and associated flows. To assist analysts, we propose RTAG, a system designed for accurate and efficient information flow analysis, making cross-host attack investigation more practical. We have implemented and empirically evaluated RTAG using it to analyze real-world attacks, including GitPwnd, a state-of-the-art cross-host data infiltration attack. Our results show that RTAG provides accurate results while reducing memory consumption by 90% and decreasing time consumption by 60-90% compared to related work. We plan to release the source code of RTAG.

### Future Work

We foresee several directions for future work. First, we aim to make hosts running RTAG interoperable with hosts not running the system. To achieve this, we plan to embed tag information in an optional field of the UDP header. Second, we will identify information flow techniques that are resilient to the fact that RTAG might not be running on every host in a given network. Third, we intend to integrate in-process parallel DIFT (Dynamic Information Flow Tracking) techniques into RTAG to further optimize the analysis time. Fourth, we will reduce the storage requirements for non-deterministic inputs by investigating ways to optimize the storage of similar executions across different hosts. Finally, we plan to extend the queries supported by RTAG to enable the comparison of information flow associated with different executions of the same program, thereby pinpointing when and where a program was compromised.

### Acknowledgments

We thank the anonymous reviewers for their helpful feedback. This research was supported in part by NSF under awards CNS-0831300, CNS-1017265, CCF-1548856, CNS-1563848, CRI-1629851, CNS-1704701, and CNS-1749711; ONR under grants N000140911042, N000141512162, N000141612710, and N000141712895; DARPA TC (No. DARPA FA8650-15-C-7556); NRF-2017R1A6A3A03002506; ETRI IITP/KEIT [2014-0-00035]; and gifts from Facebook, Mozilla, and Intel.

### References

[1] Ssh 1.2.x - crc-32 compensation attack detector, Feb. 2001. https://www.exploit-db.com/exploits/20617.
[2] Openssh 3.x - challenge-response buffer overflow, 2002. https://www.exploit-db.com/exploits/21578.
[3] Postgresql, Oct. 2014. https://www.postgresql.org.
[4] x86 machine code statistics, Oct. 2014. https://www.strchr.com/x86_machine_code_statistics.
[5] Peer-to-peer peril: How peer-to-peer sharing impacts vendor risk security benchmarking, Dec. 2015. https://info.bitsighttech.com/how-peer-to-peer-file-sharing-impacts-vendor-risk-security-benchmarking.
[6] Event tracing for windows, Oct. 2017. https://docs.microsoft.com/en-us/dotnet/framework/wcf/samples/etw-tracing.
[7] Gtk-gnutella, Oct. 2017. http://gtk-gnutella.sourceforge.net.
[8] Linux audit, Oct. 2017. https://linux.die.net/man/8/auditd.
[9] Mozilla rr, Oct. 2017. http://rr-project.org.
[10] Neo4j graph database, Oct. 2017. http://neo4j.com.
[11] Git: a free and open source distributed version control system, Feb. 2018. https://git-scm.com/.
[12] Gitolite, Feb. 2018. https://www.gitolite.com.
[13] iperf3, Feb. 2018. https://iperf.fr.
[14] Kernel-based virtual machine, Oct. 2018. https://www.linux-kvm.org.
[15] Linux network file system, Oct. 2018. http://nfs.sourceforge.net/.
[16] Taintgrind: a valgrind taint analysis tool, Feb. 2018. https://github.com/wmkhoo/taintgrind.
[17] BACON, D. F., AND GOLDSTEIN, S. C. Hardware-assisted replay of multiprocessor programs. Santa Cruz, CA, 1991.
[18] BATES, A., BUTLER, K., HAEBERLEN, A., SHERR, M., AND ZHOU, W. Let sdn be your eyes: Secure forensics in data center networks. In 2014 NDSS Workshop on Security of Emerging Network Technologies (SENT) (2014).
[19] BATES, A., TIAN, D. J., BUTLER, K. R., AND MOYER, T. Trustworthy whole-system provenance for the Linux kernel. In Proceedings of the 24th USENIX Security Symposium (Security) (Washington, DC, Aug. 2015).
[20] BURTSEV, A., JOHNSON, D., HIBLER, M., EIDE, E., AND REGEHR, J. Abstractions for practical virtual machine replay. In Proceedings of the 12th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (Atlanta, GA, 2016).
[21] CHEN, A., MOORE, W. B., XIAO, H., HAEBERLEN, A., PHAN, L. T. X., SHERR, M., AND ZHOU, W. Detecting covert timing channels with time-deterministic replay. In Proceedings of the 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Broomfield, Colorado, Oct. 2014).
[22] CHEN, P., DESMET, L., AND HUYGENS, C. A study on advanced persistent threats. In IFIP International Conference on Communications and Multimedia Security (2014), Springer, pp. 63–72.
[23] CHOW, J., GARFINKEL, T., AND CHEN, P. M. Decoupling dynamic program analysis from execution in virtual environments. In Proceedings of the 2008 USENIX Annual Technical Conference (ATC) (Boston, MA, June 2008).
[24] CLAUSE, J., LI, W., AND ORSO, A. Dytan: a generic dynamic taint analysis framework. In Proceedings of the International Symposium on Software Testing and Analysis (ISSTA) (London, UK, July 2007).
[25] DEVECSERY, D., CHOW, M., DOU, X., FLINN, J., AND CHEN, P. M. Eidetic systems. In Proceedings of the 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Broomfield, Colorado, Oct. 2014).
[26] DEVIETTI, J., LUCIA, B., CEZE, L., AND OSKIN, M. Dmp: deterministic shared memory multiprocessing. In ACM SIGARCH Computer Architecture News (New York, NY, 2009), ACM.
[27] DOLAN-GAVITT, B., HODOSH, J., HULIN, P., LEEK, T., AND WHELAN, R. Repeatable reverse engineering with PANDA. In Proceedings of the 5th Program Protection and Reverse Engineering Workshop (PPREW) (2015).
[28] DOLAN-GAVITT, B., LEEK, T., HODOSH, J., AND LEE, W. Tappan zee (north) bridge: mining memory accesses for introspection. In Proceedings of the 20th ACM Conference on Computer and Communications Security (CCS) (Berlin, Germany, Oct. 2013).
[29] ENCK, W., GILBERT, P., CHUN, B.-G., COX, L. P., JUNG, J., MCDANIEL, P., AND SHETH, A. N. TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones. In Proceedings of the 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Vancouver, Canada, Oct. 2010).
[30] GANAI, M., LEE, D., AND GUPTA, A. Dtam: dynamic taint analysis of multi-threaded programs for relevancy. In Proceedings of the 20th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE) (Cary, NC, Nov. 2012).
[31] GEHANI, A., AND TARIQ, D. SPADE: support for provenance auditing in distributed environments. In Proceedings of the 13th International Middleware Conference (Middleware) (2012).
[32] GIBLER, C., AND BEDDOME, N. Gitpwnd, Oct. 2017. https://github.com/nccgroup/gitpwnd.
[33] GOMEZ, L., NEAMTIU, I., AZIM, T., AND MILLSTEIN, T. Reran: Timing-and touch-sensitive record and replay for android. In Software Engineering (ICSE), 2013 35th International Conference on (2013).
[34] JEE, K., KEMERLIS, V. P., KEROMYTIS, A. D., AND PORTOKALIDIS, G. ShadowReplica: efficient parallelization of dynamic data flow tracking. In Proceedings of the 20th ACM Conference on Computer and Communications Security (CCS) (Berlin, Germany, Oct. 2013).
[35] JI, Y., LEE, S., DOWNING, E., WANG, W., FAZZINI, M., KIM, T., ORSO, A., AND LEE, W. Rain: Refinable attack investigation with on-demand inter-process information flow tracking. In Proceedings of the 24rd ACM Conference on Computer and Communications Security (CCS) (Dallas, Texas, Oct. 2017).
[36] JI, Y., LEE, S., AND LEE, W. RecProv: Towards provenance-aware user space record and replay. In Proceedings of the 5th International Provenance and Annotation Workshop (IPAW) (Mclean, VA, 2016).
[37] KEMERLIS, V. P., PORTOKALIDIS, G., JEE, K., AND KEROMYTIS, A. D. libdft: Practical dynamic data flow tracking for commodity systems. In Proceedings of the 8th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (London, UK, 2012).
[38] KIM, T., CHANDRA, R., AND ZELDOVICH, N. Recovering from intrusions in distributed systems with DARE. In Proceedings of the 3rd Asia-Pacific Workshop on Systems (APSys) (Seoul, South Korea, July 2012).
[39] KWON, Y., KIM, D., SUMNER, W. N., KIM, K., SALTAFORMAGGIO, B., ZHANG, X., AND XU, D. LDX: Causality inference by lightweight dual execution. In Proceedings of the 21st ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS) (Atlanta, GA, Apr. 2016).
[40] KWON, Y., WANG, F., WANG, W., LEE, K. H., LEE, W.-C., MA, S., ZHANG, X., XU, D., JHA, S., CIOCARLIE, G., ET AL. Mci: Modeling-based causality inference in audit logging for attack investigation. In Proceedings of the 2018 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2018).
[41] LAADAN, O., VIENNOT, N., AND NIEH, J. Transparent, lightweight application execution replay on commodity multiprocessor operating systems. In Proceedings of the ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems (2010), SIGMETRICS ’10.
[42] LEE, K. H., ZHANG, X., AND XU, D. High accuracy attack provenance via binary-based execution partition. In Proceedings of the 20th Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2013).
[43] LONG, F., SIDIROGLOU-DOUSKOS, S., AND RINARD, M. Automatic runtime error repair and containment via recovery shepherding. In ACM SIGPLAN Notices (2014), vol. 49, ACM, pp. 227–238.
[44] LUK, C.-K., COHN, R., MUTH, R., PATIL, H., KLAUSER, A., LOWNEY, G., WALLACE, S., REDDI, V. J., AND HAZELWOOD, K. Pin: building customized program analysis tools with dynamic instrumentation.
[45] MA, S., ZHANG, X., AND XU, D. ProTracer: towards practical provenance tracing by alternating between logging and tainting. In Proceedings of the 2016 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2016).
[46] MING, J., WU, D., WANG, J., XIAO, G., AND LIU, P. Straight-Taint: decoupled offline symbolic taint analysis. In Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering (ASE) (Singapore, Sept. 2016).
[47] MING, J., WU, D., XIAO, G., WANG, J., AND LIU, P. TaintPipe: pipelined symbolic taint analysis. In Proceedings of the 24th USENIX Security Symposium (Security) (Washington, DC, Aug. 2015).
[48] MUNISWAMY-REDDY, K.-K., HOLLAND, D. A., BRAUN, U., AND SELTZER, M. Provenance-aware storage systems. In Proceedings of the 2006 USENIX Annual Technical Conference (ATC) (Boston, MA, May–June 2006).
[49] NEWSOME, J., AND SONG, D. Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software. In Proceedings of the 12th Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2005).
[50] PAPPAS, V., KEMERLIS, V. P., ZAVOU, A., POLYCHRONAKIS, M., AND KEROMYTIS, A. D. Cloudfence: Data flow tracking as a cloud service. In Proceedings of the 16th International Symposium on Research in Attacks, Intrusions and Defenses (RAID) (Saint Lucia, Oct. 2013).
[51] PATIL, H., PEREIRA, C., STALLCUP, M., LUECK, G., AND COWNIE, J. PinPlay: A framework for deterministic replay and reproducible analysis of parallel programs. In Proceedings of the 8th Annual IEEE/ACM International Symposium on Code Generation and Optimization (CGO) (2010).
[52] POHLY, D. J., MCLAUGHLIN, S., MCDANIEL, P., AND BUTLER, K. Hi-fi: collecting high-fidelity whole-system provenance. In Proceedings of the Annual Computer Security Applications Conference (ACSAC) (2012), pp. 259–268.
[53] POSTEL, J. User datagram protocol.
[54] POSTEL, J. Transmission control protocol.
[55] QUINN, A., DEVECSERY, D., CHEN, P. M., AND FLINN, J. Jet-Stream: Cluster-scale parallelization of information flow queries. In Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Savannah, GA, Nov. 2016).
[56] REN, S., TAN, L., LI, C., XIAO, Z., AND SONG, W. Samsara: Efficient deterministic replay in multiprocessor environments with hardware virtualization extensions. In Proceedings of the 2016 USENIX Annual Technical Conference (ATC) (Denver, CO, June 2016).
[57] RUWASE, O., GIBBONS, P. B., MOWRY, T. C., RAMACHANDRAN, V., CHEN, S., KOZUCH, M., AND RYAN, M. Parallelizing dynamic information flow tracking.
[58] SAITO, Y. Jockey: a user-space library for record-replay debugging. In Proceedings of the sixth international symposium on Automated analysis-driven debugging (2005).
[59] SEN, K., KALASAPUR, S., BRUTCH, T., AND GIBBS, S. Jalangi: a selective record-replay and dynamic analysis framework for javascript. In Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering (2013).
[60] SIMMHAN, Y. L., PLALE, B., AND GANNON, D. A survey of data provenance in e-science. ACM Sigmod Record 34, 3 (June 2005), 31–36.
[61] STAMATOGIANNAKIS, M., GROTH, P., AND BOS, H. Looking inside the black-box: capturing data provenance using dynamic instrumentation. In Proceedings of the 5th International Provenance and Annotation Workshop (IPAW) (Cologne, Germany, 2014).
[62] SUN, M., WEI, T., AND LUI, J. Taintart: A practical multi-level information-flow tracking system for android runtime. In Proceedings of the 23rd ACM Conference on Computer and Communications Security (CCS) (Vienna, Austria, Oct. 2016), ACM, pp. 331–342.
[63] WANG, Q., HASSAN, W. U., BATES, A., AND GUNTER, C. Fear and logging in the internet of things. In Proceedings of the 2018 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2018).
[64] WU, Y., ZHAO, M., HAEBERLEN, A., ZHOU, W., AND LOO, B. T. Diagnosing missing events in distributed systems with negative provenance. In ACM SIGCOMM Computer Communication Review (Snowbird, Utah, USA, June 2014), vol. 44, pp. 383–394.
[65] YAN, M., SHALABI, Y., AND TORRELLAS, J. ReplayConfusion: Detecting cache-based covert channel attacks using record and replay. In Proceedings of the 49th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO) (Taipei, Taiwan, Oct. 2016).
[66] YIN, H., SONG, D., EGELE, M., KRUEGEL, C., AND KIRDA, E. Panorama: capturing system-wide information flow for malware detection and analysis. In Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS) (Alexandria, VA, Oct.–Nov. 2007).
[67] ZAVOU, A., PORTOKALIDIS, G., AND KEROMYTIS, A. Taint-exchange: a generic system for cross-process and cross-host taint tracking. In Advances in Information and Computer Security (2011), Springer, pp. 113–128.
[68] ZHOU, W., FEI, Q., NARAYAN, A., HAEBERLEN, A., LOO, B. T., AND SHERR, M. Secure network provenance. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP) (Cascais, Portugal, Oct. 2011).
[69] ZHOU, W., SHERR, M., TAO, T., LI, X., LOO, B. T., AND MAO, Y. Efficient querying and maintenance of network provenance at internet-scale. In Proceedings of the 2010 ACM SIGMOD/PODS Conference (Indianapolis, IN, June 2010), ACM, pp. 615–626.