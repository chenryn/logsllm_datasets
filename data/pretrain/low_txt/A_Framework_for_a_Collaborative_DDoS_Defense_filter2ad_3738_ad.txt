### Figure Descriptions and Experimental Results

**Figure 4: Partial Deployment Experiments**
- **(a) Throughput in ML1**
- **(b) Throughput in ML2**

**Figure 5: Experiment with Malicious Classifiers and Rate Limiters on Routers R2.3 and R2.4**
- **(a) Throughput in ML3**
- **(b) Throughput in ML4**

**Figure 6: Experiment with Malicious Classifiers and Rate Limiters on All Level-2 Routers**

### Impact of Malicious Classifiers and Rate Limiters

If Net3 and Net4 include legitimate users, attack machines, and a compromised classifier, their traffic would also be penalized. While this is unfortunate, a compromised classifier is ultimately an issue that should be managed by local security administrators.

In the final experiment, we demonstrate the impact of deploying rate limiters at level-2, specifically at routers R2.3 and R2.4. In experiment ML3, active testing is disabled, while in experiment ML4, it is enabled. The throughput results are shown in Figure 6. As attack traffic passes through more DefCOM nodes, it is better controlled and competes less with legitimate traffic. Even without active testing, the service for legitimate traffic is significantly improved compared to experiment ML1. In ML4, malicious sources are quickly identified, and legitimate traffic is protected.

### Deployment and Operational Costs

We measured the attack detection time from the start of the attack to the issuance of the first ALRM message, and the attack response time from the first ALRM message to the first dropped attack packet. For the experiments described in this paper, the attack detection time ranged from 1.58 to 2.45 seconds, and the attack response time ranged from 1.78 to 2.93 seconds. Note that these experiments used a very simple attack detection mechanism.

The number of messages exchanged by a DefCOM node depends on the number of its peers and the settings of DefCOM parameters (Tr, Tend, Trto, Tchange, and pJOIN). In our large-scale experiments, each node exchanged approximately 5 messages per second, and this number did not increase during attacks. We also tested robustness to message loss by deliberately dropping a certain percentage of DefCOM control messages. Our experiments indicate that DefCOM can tolerate up to 20% message loss, but its performance degrades rapidly with higher loss rates.

DefCOM’s packet processing time on an 850 MHz Pentium III was around 0.5 µs without an attack and increased to 1.3 µs during an attack when using a rate limiter and a classifier. Additionally, the rate limiter's packet processing time includes the cost of the WFSA, which took around 50 µs per packet, primarily due to custom-written code for exponentiation (since this function is not implemented in the Linux kernel) needed for rate estimation. In a real-world implementation, these operations would be performed by a much faster, hardware-based fair queuing module in commercial routers.

### Deployment Motivation

End-network defenses benefit from DefCOM by achieving broader observation and policing perimeters. Distributed defenses also benefit, as illustrated by integrating the distributed TVA [18] defense with DefCOM. TVA uses server-issued capabilities to differentiate between legitimate and suspicious traffic. Routers help create capabilities, rate limit new capability requests, and prioritize capability-carrying traffic, followed by request traffic and finally legacy traffic. TVA can handle all attacks as well as DefCOM and outperforms DefCOM in flash-crowd attacks. However, TVA is always active and incurs high processing and memory costs. DefCOM can reduce TVA’s costs by:
1. Using attack alerts as power-on signals for TVA, so processing costs are only incurred during attacks.
2. Marking capability-carrying traffic with a HIGH-priority mark; DefCOM would pass legitimate packets to TVA for finer, more expensive checks only if total HIGH-marked traffic exceeds the rate limit.

DefCOM has a strong economic model for all deploying networks. Alert generators provide victim-end networks with means to request help in handling DDoS attacks. Classifiers ensure good service to legitimate traffic during attacks, directly benefiting the deploying network. ISPs can deploy rate limiters as a service they can sell to their customers. Since customers typically seek their ISP’s help during DDoS attacks, deploying a DefCOM rate limiter streamlines these requests, making responses faster and more accurate. Our experiments indicate that DefCOM can be very effective even in partial deployment. However, robustness against malicious classifiers and the ability to provide good service to legitimate traffic from legacy networks improve with wider deployment. We believe that a strong economic model and the ability to integrate diverse defense systems with DefCOM will naturally motivate wide deployment of this framework.

### Related Work

We review approaches that provide some form of cooperative defense between different nodes or share strong similarities with DefCOM. We omit TVA [18] as it was discussed in the previous section.

- **SOS [6]**: Uses access points (SOAPs) near source networks to verify legitimate users and send their traffic over an overlay to secret servlets, which tunnel it to a distributed firewall protecting the victim. SOS offers good protection but introduces significant delays due to overlay routing. Mayday [1] generalizes the SOS approach with various authentication and overlay routing mechanisms but suffers from similar drawbacks.
- **Pushback [5]**: Enables routers to identify high-bandwidth aggregates contributing to congestion and rate-limit them. If the congested router cannot control the aggregate, it requests upstream neighbors’ help. Pushback performs well when attackers are on a separate path from legitimate traffic but otherwise causes collateral damage. It also cannot work in non-contiguous deployment and cannot detect attacks that do not congest core routers.
- **Active Security System (ASSYST) [3]**: Supports distributed response with non-contiguous deployment, with classifier-like nodes deployed only at edge networks. COSSACK [10] forms a multicast group of defense nodes at source and victim networks, cooperating in filtering attacks. Both [3] and [10] cannot handle attacks from legacy networks that do not deploy their defense mechanisms.
- **Parameter-Based Defense [14]**: Constructs a multicast group at an ISP to rate-limit attacks from one of its customer networks. It requires wide deployment and does not perform well in non-contiguous deployment. Yau et al. propose a router throttle mechanism [19] installed near the victim, incorporating only victim-end and core defense mechanisms, causing collateral damage to legitimate traffic.
- **Router-Based Solution [13]**: Consists of an overlay of routers with added functionality to trace and stop attacks near the source, using signatures assigned to each source network. This approach also causes collateral damage to legitimate users sharing a network with an attacker.

### Conclusion

DefCOM is an innovative and scalable distributed defense framework that facilitates collaboration among diverse DDoS defense systems through secure messages exchanged via an overlay network. DefCOM enables each node to perform functions it can do best, complementing its weaknesses with the strengths of others. Victim networks are protected against DDoS attacks, source networks are assured that their legitimate traffic will reach the victim, and Internet backbones can contribute to DDoS mitigation by selling this extra service. DefCOM provides a strong economic model for all involved parties, which should naturally lead to wide deployment. Our extensive testing across various network scenarios confirms that DefCOM offers excellent protection to legitimate traffic during DDoS attacks.

### References

[1] D. G. Andersen. Mayday: Distributed Filtering for Internet Services. In 4th Usenix Symposium on Internet Technologies and Systems, Seattle, WA, March 2003.

[2] T. Benzel, B. Braden, D. Kim, C. Neuman, A. Joseph, K. Sklower, R. Ostrenga, and S. Schwab. Experience with DETER: A testbed for security research. In Proceedings of TRIDENTCOM, March 2006.

[6] A. Keromytis, V. Misra, and D. Rubenstein. SOS: An Architecture for Mitigating DDoS Attacks. IEEE Journal on Selected Areas in Communications, 22(1), January 2004.

[7] J. Mirkovic. D-WARD: Source-end defense against distributed denial-of-service attacks. PhD thesis, UCLA, 2003.

[8] J. Mirkovic, G. Prier, and P. L. Reiher. Attacking DDoS at the Source. In Proceedings of the International Conference on Network Protocols, pages 312–321, 2002.

[9] J. Mirkovic, M. Robinson, and P. Reiher. Alliance formation for DDoS defense. In Proceedings of the New Security Paradigms Workshop, pages 11–18, New York, NY, USA, 2003. ACM Press.

[3] R. Canonico, D. Cotroneo, L. Peluso, S. P. Romano, and G. Ventre. Programming routers to improve network security. In OPENSIG 2001 Workshop Next Generation Network Programming, September 2001.

[4] P. Ferguson and D. Senie. Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing. RFC 2267, 2000.

[5] J. Ioannidis and S. M. Bellovin. Implementing Pushback: Router Based Defense Against DDoS Attacks. In ISOC Symposium on Network and Distributed System Security, February 2002.

[10] C. Papadopoulos, R. Lindell, J. Mehringer, A. Hussain, and R. Govindan. COSSACK: Coordinated Suppression of Simultaneous Attacks. In Proceedings of DISCEX, pages 2–13, 2003.

[11] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Practical network support for IP traceback. In Proceedings of the ACM SIGCOMM, pages 295–306, 2000.

[12] S. Shin, K. Kim, and J. Jang. D-SAT: Detecting SYN Flooding Attack by Two-Stage Statistical Approach. In SAINT Symposium, pages 430–436, 2005.

[13] Z. Shu and P. Dasgupta. Denying Denial-of-Service Attacks: A Router Based Solution. In International Conference on Internet Computing, pages 301–307, 2003.

[14] Q. Song. Perimeter-Based Defense against High Bandwidth DDoS Attacks. IEEE Transactions on Parallel and Distributed Systems, 16(6):526–537, 2005.

[15] I. Stoica, S. Shenker, and H. Zhang. Core-stateless fair queueing: a scalable architecture to approximate fair bandwidth allocations in high-speed networks. IEEE/ACM Transactions on Networking, 11(1):33–46, 2003.

[16] H. Wang and K. G. Shin. Transport-aware IP routers: A built-in protection mechanism to counter DDoS attacks. IEEE Transactions on Parallel and Distributed Systems, 14(9):873–884, 2003.

[17] B. White, J. Lepreau, L. Stoller, R. Ricci, S. Guruprasad, M. Newbold, M. Hibler, C. Barb, and A. Joglekar. An integrated experimental environment for distributed systems and networks. In Proceedings of the Operating System Design and Implementation, pages 255–270, 2002.

[18] X. Yang, D. Wetherall, and T. Anderson. A DoS-limiting network architecture. In Proceedings of ACM SIGCOMM, pages 241–252, 2005.

[19] D. K. Y. Yau, J. C. S. Lui, F. Liang, and Y. Yam. Defending against distributed denial-of-service attacks with max-min fair server-centric router throttles. IEEE/ACM Transactions on Networking, 13(1):29–42, 2005.