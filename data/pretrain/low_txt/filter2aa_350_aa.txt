### PEB和TEB详解

#### 进程环境块 (PEB)
进程环境块（Process Environment Block, PEB）是一个数据结构，存储了诸如映像加载程序、堆管理器以及其他Windows组件从用户模式访问所需的信息。为了更好地理解PEB，我们首先需要了解Windows进程的内部结构。

每个Windows进程都可以用一个执行体进程（EPROCESS）来表示。EPROCESS及其大部分相关数据结构都位于系统地址空间中，唯一的例外是PEB，它位于用户地址空间中。对于每个运行中的Windows程序进程，Windows子系统进程（Csrss）维护了一个名为CSR_PROCESS的并行结构。此外，Windows子系统的内核模式部分（win32k.sys）还为每个进程维护了一个名为W32PROCESS的数据结构，该结构在首次调用Windows并在内核模式中实现USER或GUI函数时创建。这一操作通常在加载User32.dll库时执行，常见的加载函数包括CreateWindow和GetMessage。

##### 查看EPROCESS结构
在Windbg中，可以使用以下命令查看EPROCESS结构：
```windbg
dt nt!_eprocess
```
以下是EPROCESS结构的部分内容：
```c
+0x000 Pcb              : _KPROCESS
+0x438 ProcessLock      : _EX_PUSH_LOCK
+0x440 UniqueProcessId  : Ptr64 Void
+0x448 ActiveProcessLinks : _LIST_ENTRY
+0x458 RundownProtect   : _EX_RUNDOWN_REF
+0x460 Flags2           : Uint4B
+0x468 CreateTime       : _LARGE_INTEGER
+0x470 ProcessQuotaUsage : [2] Uint8B
+0x480 ProcessQuotaPeak : [2] Uint8B
+0x490 PeakVirtualSize  : Uint8B
+0x498 VirtualSize      : Uint8B
+0x4a0 SessionProcessLinks : _LIST_ENTRY
+0x4b0 ExceptionPortData : Ptr64 Void
+0x4b8 Token            : _EX_FAST_REF
+0x4c0 MmReserved       : Uint8B
+0x4c8 AddressCreationLock : _EX_PUSH_LOCK
+0x4d0 PageTableCommitmentLock : _EX_PUSH_LOCK
+0x4d8 RotateInProgress : Ptr64 _ETHREAD
+0x4e0 ForkInProgress   : Ptr64 _ETHREAD
+0x4e8 CommitChargeJob  : Ptr64 _EJOB
+0x4f0 CloneRoot        : _RTL_AVL_TREE
+0x4f8 NumberOfPrivatePages : Uint8B
+0x500 NumberOfLockedPages : Uint8B
+0x508 Win32Process     : Ptr64 Void
+0x510 Job              : Ptr64 _EJOB
+0x518 SectionObject    : Ptr64 Void
+0x520 SectionBaseAddress : Ptr64 Void
+0x528 Cookie           : Uint4B
+0x530 WorkingSetWatch  : Ptr64 _PAGEFAULT_HISTORY
+0x538 Win32WindowStation : Ptr64 Void
+0x540 InheritedFromUniqueProcessId : Ptr64 Void
+0x548 OwnerProcessId   : Uint8B
+0x550 Peb              : Ptr64 _PEB
+0x558 Session          : Ptr64 _MM_SESSION_SPACE
+0x560 Spare1           : Ptr64 Void
+0x568 QuotaBlock       : Ptr64 _EPROCESS_QUOTA_BLOCK
+0x570 ObjectTable      : Ptr64 _HANDLE_TABLE
+0x578 DebugPort        : Ptr64 Void
+0x580 WoW64Process     : Ptr64 _EWOW64PROCESS
+0x588 DeviceMap        : Ptr64 Void
+0x590 EtwDataSource    : Ptr64 Void
+0x598 PageDirectoryPte : Uint8B
+0x5a0 ImageFilePointer : Ptr64 _FILE_OBJECT
+0x5a8 ImageFileName    : [15] UChar
+0x5b7 PriorityClass    : UChar
+0x5b8 SecurityPort     : Ptr64 Void
+0x5c0 SeAuditProcessCreationInfo : _SE_AUDIT_PROCESS_CREATION_INFO
+0x5c8 JobLinks         : _LIST_ENTRY
+0x5d8 HighestUserAddress : Ptr64 Void
+0x5e0 ThreadListHead   : _LIST_ENTRY
+0x5f0 ActiveThreads    : Uint4B
+0x5f4 ImagePathHash    : Uint4B
+0x5f8 DefaultHardErrorProcessing : Uint4B
+0x5fc LastThreadExitStatus : Int4B
+0x600 PrefetchTrace    : _EX_FAST_REF
+0x608 LockedPagesList  : Ptr64 Void
+0x610 ReadOperationCount : _LARGE_INTEGER
+0x618 WriteOperationCount : _LARGE_INTEGER
+0x620 OtherOperationCount : _LARGE_INTEGER
+0x628 ReadTransferCount : _LARGE_INTEGER
+0x630 WriteTransferCount : _LARGE_INTEGER
+0x638 OtherTransferCount : _LARGE_INTEGER
+0x640 CommitChargeLimit : Uint8B
+0x648 CommitCharge     : Uint8B
+0x650 CommitChargePeak : Uint8B
+0x680 Vm               : _MMSUPPORT_FULL
+0x7c0 MmProcessLinks   : _LIST_ENTRY
+0x7d0 ModifiedPageCount : Uint4B
+0x7d4 ExitStatus       : Int4B
+0x7d8 VadRoot          : _RTL_AVL_TREE
+0x7e0 VadHint          : Ptr64 Void
+0x7e8 VadCount         : Uint8B
+0x7f0 VadPhysicalPages : Uint8B
+0x7f8 VadPhysicalPagesLimit : Uint8B
+0x800 AlpcContext      : _ALPC_PROCESS_CONTEXT
+0x820 TimerResolutionLink : _LIST_ENTRY
+0x830 TimerResolutionStackRecord : Ptr64 _PO_DIAG_STACK_RECORD
+0x838 RequestedTimerResolution : Uint4B
+0x83c SmallestTimerResolution : Uint4B
+0x840 ExitTime         : _LARGE_INTEGER
+0x848 InvertedFunctionTable : Ptr64 _INVERTED_FUNCTION_TABLE
+0x850 InvertedFunctionTableLock : _EX_PUSH_LOCK
+0x858 ActiveThreadsHighWatermark : Uint4B
+0x85c LargePrivateVadCount : Uint4B
+0x860 ThreadListLock   : _EX_PUSH_LOCK
+0x868 WnfContext       : Ptr64 Void
+0x870 ServerSilo       : Ptr64 _EJOB
+0x878 SignatureLevel   : UChar
+0x879 SectionSignatureLevel : UChar
+0x87a Protection       : _PS_PROTECTION
+0x87b HangCount        : Pos 0, 3 Bits
+0x87b GhostCount       : Pos 3, 3 Bits
+0x87b PrefilterException : Pos 6, 1 Bit
+0x87c Flags3           : Uint4B
+0x880 DeviceAsid       : Int4B
+0x888 SvmData          : Ptr64 Void
+0x890 SvmProcessLock   : _EX_PUSH_LOCK
+0x898 SvmLock          : Uint8B
+0x8a0 SvmProcessDeviceListHead : _LIST_ENTRY
+0x8b0 LastFreezeInterruptTime : Uint8B
+0x8b8 DiskCounters     : Ptr64 _PROCESS_DISK_COUNTERS
+0x8c0 PicoContext      : Ptr64 Void
+0x8c8 EnclaveTable     : Ptr64 Void
+0x8d0 EnclaveNumber    : Uint8B
+0x8d8 EnclaveLock      : _EX_PUSH_LOCK
+0x8e0 HighPriorityFaultsAllowed : Uint4B
+0x8e8 EnergyContext    : Ptr64 _PO_PROCESS_ENERGY_CONTEXT
+0x8f0 VmContext        : Ptr64 Void
+0x8f8 SequenceNumber   : Uint8B
+0x900 CreateInterruptTime : Uint8B
+0x908 CreateUnbiasedInterruptTime : Uint8B
+0x910 TotalUnbiasedFrozenTime : Uint8B
+0x918 LastAppStateUpdateTime : Uint8B
+0x920 LastAppStateUptime : Pos 0, 61 Bits
+0x920 LastAppState     : Pos 61, 3 Bits
+0x928 SharedCommitCharge : Uint8B
+0x930 SharedCommitLock : _EX_PUSH_LOCK
+0x938 SharedCommitLinks : _LIST_ENTRY
+0x948 AllowedCpuSets   : Uint8B
+0x950 DefaultCpuSets   : Uint8B
+0x948 AllowedCpuSetsIndirect : Ptr64 Uint8B
+0x950 DefaultCpuSetsIndirect : Ptr64 Uint8B
+0x958 DiskIoAttribution : Ptr64 Void
+0x960 DxgProcess       : Ptr64 Void
+0x968 Win32KFilterSet  : Uint4B
+0x970 ProcessTimerDelay : _PS_INTERLOCKED_TIMER_DELAY_VALUES
+0x978 KTimerSets       : Uint4B
+0x97c KTimer2Sets      : Uint4B
+0x980 ThreadTimerSets  : Uint4B
+0x988 VirtualTimerListLock : Uint8B
+0x990 VirtualTimerListHead : _LIST_ENTRY
+0x9a0 WakeChannel      : _WNF_STATE_NAME
+0x9a0 WakeInfo         : _PS_PROCESS_WAKE_INFORMATION
```

可以看到，第一个成员`Pcb`是一个`KPROCESS`结构，用于调度器、中断时间等。

#### 线程环境块 (TEB)
线程环境块（Thread Environment Block, TEB）是与每个线程相关的数据结构，存储了线程的上下文信息。TEB位于用户地址空间中，并且每个线程都有一个对应的TEB。TEB包含了诸如线程局部存储（TLS）、异常处理链表、线程ID等信息。

通过上述介绍，我们可以更好地理解PEB和TEB在Windows进程和线程管理中的作用。这些数据结构提供了必要的信息，使得操作系统能够有效地管理和控制进程及线程的运行。