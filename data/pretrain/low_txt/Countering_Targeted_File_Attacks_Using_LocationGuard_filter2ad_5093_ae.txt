# Figures and Tables

**Figure 4: Probability of a Target File Attack for N = 1024 nodes and R = 7 using DoS Attack**

- **Corruption Threshold (cr):** 0, 0.2, 0.4, 0.6, 0.8, 1
- **ρ Values:** 1.1, 1.2, 1.5, 3.0
- **Fraction of Good Nodes Compromised:** 0, 0.2, 0.4, 0.6, 0.8, 1

**Figure 5: Probability of a Target File Attack for N = 1024 nodes and R = 7 using Host Compromise Attack (with no token collection)**

- **Corruption Threshold (cr):** 0, 0.2, 0.4, 0.6, 0.8, 1
- **ρ Values:** 1.1, 1.2, 1.5, 3.0
- **Fraction of Good Nodes Compromised:** 0, 0.2, 0.4, 0.6, 0.8, 1

**Figure 6: Probability of a Target File Attack for N = 1024 nodes and R = 7 using Host Compromise Attack with token collection from compromised nodes**

- **Corruption Threshold (cr):** 0, 0.2, 0.4, 0.6, 0.8, 1
- **ρ Values:** 1.1, 1.2, 1.5, 3.0
- **Fraction of Good Nodes Compromised:** 0, 0.2, 0.4, 0.6, 0.8, 1

**Table 2: Mean Fraction of Good Nodes in Uncompromised State (G₀)**
| ρ | G₀ |
|---|----|
| 0.5 | 0 |
| 1.0 | 0 |
| 1.1 | 0.05 |
| 1.2 | 0.44 |
| 1.5 | 0.77 |
| 3.0 | 0.96 |

**Table 3: Time Interval between Location Re-Keying (normalized by 1/λ time units)**
| ρ | Re-keying Interval |
|---|------------------|
| 0.5 | 0 |
| 1.0 | 0 |
| 1.1 | 0.43 |
| 1.2 | 1.8 |
| 1.5 | 4.5 |
| 3.0 | 6.6 |

# Analysis and Discussion

The probability of a targeted file attack is analyzed under different conditions, including the use of DoS attacks, host compromise attacks with and without token collection. The figures illustrate the relationship between the corruption threshold (cr) and the fraction of good nodes that need to be compromised for the attack to succeed, given different values of ρ.

In the absence of location keys, an adversary needs to compromise at most R good nodes to succeed in a targeted file attack. However, location key-based techniques significantly increase the required effort. For example, when ρ = 3, an adversary must compromise 70% of the good nodes to achieve a nominal attack probability of 0.1, even if the adversary collects file capabilities from compromised nodes.

To protect the file system from such attacks, we proposed location re-keying in Section 7.3. The exact period for re-keying can be derived from Figure 6. For instance, when ρ = 3, if a user wants to keep the attack probability below 0.1, the re-keying interval should equal the time it takes for an adversary to compromise 70% of the good nodes.

**Lookup Guard Experiments:**
- **Effect of Obfuscation Range on Safe Obfuscation Probability:** A safe range for identifier obfuscation is very large, even for high values of sq.
- **Number of Lookup Retries:** Almost zero, seldom exceeding one.
- **Size of Sieved Range (Range Sieving Attack):** Too large for a brute force attack, even with a full year of file access logs.

These experimental results closely match the analytical results shown in Table 1. For more details, refer to our technical report [23].

# Related Work

Serverless distributed file systems like CFS [7], Farsite [1], OceanStore [15], and SiRiUS [10] have gained significant attention. These systems store files on untrusted nodes in an overlay network, using cryptographic techniques for data confidentiality and integrity. However, these techniques do not protect against DoS or host compromise attacks. LocationGuard presents low-overhead, highly effective techniques to guard against such attacks.

**Secure Overlay Services (SOS) [13]:** This architecture proactively prevents DoS attacks using secure overlay tunneling and routing via consistent hashing. SOS introduces randomness and anonymity into the overlay network, making it difficult for malicious nodes to target specific applications. In contrast, LocationGuard uses location key-based hashing and lookup-based file identifier obfuscation to protect the system.

**Hydra OS [6, 22]:** Proposed a capability-based file access control mechanism. LocationGuard can be seen as an implementation of this on a wide-area network, with the challenge of keeping file capabilities secret while allowing lookups.

**Indirect Attacks:** Techniques such as compromising cryptographic keys, fault attacks, and inference attacks are common. LocationGuard is designed to resist these, though detailed location inference guards are not covered here due to space constraints. For more information, see our technical report [23].

# Conclusion

LocationGuard secures wide-area serverless file sharing systems from targeted file attacks. It hides the location of files on an overlay network, retains traditional cryptographic guarantees, and adds minimal performance and storage overhead. Our experimental results demonstrate its effectiveness against targeted file attacks, making it possible to build simple and secure wide-area network file systems.

# Acknowledgements

This research is partially supported by NSF CNS, NSF ITR, IBM SUR grant, and HP Equipment Grant. Opinions, findings, and recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the sponsors.

# References

[1] A. Adya, W. Bolosky, M. Castro, G. Cermak, R. Chaiken, J. R. Douceur, J. Howell, J. R. Lorch, M. Theimer, and R. P. Wattenhofer. Farsite: Federated, available and reliable storage for an incompletely trusted environment. In Proceedings of the 5th International Symposium on OSDI, 2002.

[2] I. R. Archives. RFC 2131: Dynamic Host Configuration Protocol. http://www.faqs.org/rfcs/rfc2131.html.

[3] J. K. B. Zhao and A. Joseph. Tapestry: An infrastructure for fault-tolerance wide-area location and routing. Technical Report UCB/CSD-01-1141, University of California, Berkeley, 2001.

[4] E. Biham. How to decrypt or even substitute DES-encrypted messages in 228 steps. Information Processing Letters, 84, 2002.

[5] D. Boneh and D. Brumley. Remote timing attacks are practical. In Proceedings of the 12th USENIX Security Symposium, 2003.

[6] E. Cohen and D. Jefferson. Protection in the Hydra operating system. In Proceeding of the ACM Symposium on Operating Systems Principles, 1975.

[7] F. Dabek, M. F. Kaashoek, D. Karger, R. Morris, and I. Stoica. Wide-area cooperative storage with CFS. In Proceedings of the 18th ACM SOSP, October 2001.

[8] FIPS. Data encryption standard (DES). http://www.itl.nist.gov/fipspubs/fip46-2.htm.

[9] Gnutella. The Gnutella home page. http://gnutella.wego.com/.

[10] E. J. Goh, H. Shacham, N. Modadugu, and D. Boneh. SiRiUS: Securing remote untrusted storage. In Proceedings of NDSS, 2003.

[11] H. Harney and C. Muckenhirn. Group Key Management Protocol (GKMP) Architecture. http://www.rfc-archive.org/getrfc.php?rfc=2094.

[12] T. Jaeger and A. D. Rubin. Preserving integrity in remote file location and retrieval. In Proceedings of NDSS, 1996.

[13] A. Keromytis, V. Misra, and D. Rubenstein. Secure overlay services. In Proceedings of the ACM SIGCOMM, 2002.

[14] H. M. Bellare, Krawczyk, and R. Canetti. RFC 2104 - HMAC: Keyed-Hashing for Message Authentication. http://www.faqs.org/rfcs/rfc2104.html.

[15] J. Kubiatowicz, D. Bindel, Y. Chen, S. Czerwinski, P. Eaton, D. Geels, R. Gummadi, S. Rhea, H. Weatherspoon, W. Weimer, C. Wells, and B. Zhao. OceanStore: An architecture for global-scale persistent storage. In Proceedings of the 9th International Conference on Architectural Support for Programming Languages and Operating Systems, November 2000.

[16] NIST. AES: Advanced encryption standard. http://csrc.nist.gov/CryptoToolkit/aes/.

[17] OpenSSL. OpenSSL: The open source toolkit for SSL/TLS. http://www.openssl.org/.

[18] PGP. Pretty good privacy. http://www.pgp.com/.

[19] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker. A scalable content-addressable network. In Proceedings of SIGCOMM Annual Conference on Data Communication, Aug 2001.

[20] A. Rowstron and P. Druschel. Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems. In Proceedings of the 18th IFIP/ACM International Conference on Distributed Systems Platforms (Middleware 2001), Nov 2001.

[21] RSA. RSA cryptography key standards - public-key security (PKCS). http://www.rsasecurity.com/rsalabs/pkcs/.

[22] J. S. Shapiro, J. M. Smith, and D. J. Farber. EROS: A fast capability system. In Proceedings of 17th ACM Symposium on Operating Systems Principles, 1999.

[23] M. Srivatsa and L. Liu. Countering targeted file attacks using location keys. Technical Report GIT-CERCS-04-31, Georgia Institute of Technology, 2004.

[24] M. Srivatsa and L. Liu. Vulnerabilities and security issues in structured overlay networks: A quantitative analysis. In Proceedings of the Annual Computer Security Applications Conference (ACSAC), 2004.

[25] I. Stoica, R. Morris, D. Karger, M. Kaashoek, and H. Balakrishnan. Chord: A scalable peer-to-peer lookup service for internet applications. In Proceedings of SIGCOMM Annual Conference on Data Communication, August 2001.

[26] M. World. The Caesar cipher. http://www.mathworld.com.

[27] L. Xiong and L. Liu. PeerTrust: Supporting reputation-based trust for peer-to-peer electronic communities. In Proceedings of IEEE TKDE, Vol. 16, No. 7, 2004.

---

This revised text provides a clear, coherent, and professional presentation of the figures, analysis, related work, and references.