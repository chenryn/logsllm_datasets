### Power Over Ethernet (Optional)
- **Power Supply:** Provided via IEEE 802.3af/at or Cisco Inline Power (ILP).
- **Signaling Protocols:** ITU-T H.323, designed for multimedia transmission over ISDN, and widely supported for peer-to-peer call control.

### VLANs Learned via CDP or LLDP
- **VLAN Communication:** Voice and data VLANs are communicated via CDP/LLDP.
- **Original Design:** Initially designed for multimedia transmission over ISDN, now mature and widely used.

### IP Assignment via DHCP
- **DHCP Request:** The phone sends a DHCP request in the voice VLAN.
- **Response:** The response includes an IP address and DHCP option 150.
- **Session Initiation Protocol (SIP):** A text-based protocol similar to HTTP, defined in RFC 3261, and supports peer-to-peer call control.

### Configuration Retrieved via TFTP
- **TFTP Retrieval:** The phone retrieves its configuration from one of the TFTP servers specified in the DHCP option.
- **Media Gateway Control Protocol (MGCP):** Employs centralized call control, defined in RFC 3661.

### Registration
- **Skinny Client Control Protocol (SCCP):** The phone registers with the call server(s) specified in its configuration.
- **Cisco-proprietary:** Limited support on gateways; provides centralized control.

### Calculating Required Bandwidth
- **Access Switch Port Configuration:**
  - **G.711/Ethernet Example:**
    ```plaintext
    interface FastEthernet0/1
    ! Configure data and voice access VLANs
    switchport access vlan <data_vlan>
    switchport voice vlan <voice_vlan>
    ! Trust ingress QoS markings
    mls qos trust cos
    ! Optionally pre-allocate power for the port
    power inline static [max ]
    ```
- **Codec Payload:**
  - **Bitrate × Sample Size:** 64 Kbps × 20 msec = 160 B
  - **L2 Overhead:** Ethernet (18) + 802.1Q (4) + 22 B
  - **L3 Overhead:** IP (20) + 20 B
  - **L4 Overhead:** UDP (8) + RTP (12) + 20 B
  - **Packets per Second:** 1000 msec / 20 msec × 50 pps
  - **Total Bandwidth:** 88.8 Kbps

### IEEE 802.11 WLAN
- **IEEE Standards:**
  - **802.11a:** 5 GHz, OFDM, 54 Mbps, 21/19 channels, ratified in 1999.
  - **802.11b:** 2.4 GHz, DSSS, 11 Mbps, 11/13 channels, ratified in 1999.
  - **802.11g:** 2.4 GHz, DSSS/OFDM, 54 Mbps, 11/13 channels, ratified in 2003.
  - **802.11n:** 2.4/5 GHz, OFDM, 300 Mbps, 32/32 channels, ratified in 2009.

- **WLAN Types:**
  - **Ad Hoc (IBSS):** A WLAN between isolated stations with no central point of control.
  - **Infrastructure (BSS/ESS):** A WLAN attached to a wired network via an access point.

- **Frame Types:**
  - **Management:** Association, Authentication, Probe, Beacon
  - **Control:** Request to Send (RTS), Clear to Send (CTS), Acknowledgment (ACK)
  - **Data:** Data frames

- **Measuring RF Signal Strength:**
  - **Decibel (dB):** An expression of signal strength compared to a reference signal, calculated as 10log10 (signal/reference).
  - **dBm:** Signal strength compared to a 1 milliwatt signal.
  - **dBw:** Signal strength compared to a 1 watt signal.
  - **dBi:** Compares forward antenna gain to that of an isotropic antenna.

- **Modulations:**
  - **DBPSK:** 1 Mbps
  - **DQPSK:** 2 Mbps
  - **CCK:** 5.5/11 Mbps
  - **BPSK:** 6/9 Mbps
  - **QPSK:** 12/18 Mbps
  - **16-QAM:** 24/36 Mbps
  - **64-QAM:** 48/54 Mbps

- **Client Authentication:**
  - **Open:** No authentication is used.
  - **Pre-shared Encryption Keys:** Manually distributed among clients and APs.
  - **Lightweight EAP (LEAP):** Cisco-proprietary EAP method for dynamic keying for WEP (deprecated).
  - **EAP-TLS:** Employs Transport Layer Security (TLS); PKI certificates required on the AP and clients.
  - **EAP-TTLS:** Clients authenticate the AP via PKI, then form a secure tunnel inside which the client authentication takes place (clients do not need PKI certificates).
  - **Protected EAP (PEAP):** A proposal by Cisco, Microsoft, and RSA which employs a secure tunnel for client authentication like EAP-TTLS.
  - **EAP-FAST:** Developed by Cisco to replace LEAP; establishes a secure tunnel using a Protected Access Credential (PAC) in the absence of PKI certificates.

- **Encryption Schemes:**
  - **Wired Equivalent Privacy (WEP):** Flawed RC4 implementation using a 40- or 104-bit pre-shared encryption key (deprecated).
  - **Wi-Fi Protected Access (WPA):** Implements the improved RC4-based encryption Temporal Key Integrity Protocol (TKIP) which can operate on WEP-capable hardware.
  - **IEEE 802.11i (WPA2):** Requires a new generation of hardware to implement significantly stronger AES-based CCMP encryption.

- **Quality of Service Markings:**
  - **WMM 802.11e 802.1p:**
    - **Platinum:** 7/6 6/5
    - **Gold:** 5/4 4/3
    - **Silver:** 3/0 0
    - **Bronze:** 2/1 2/1

- **Antenna Types:**
  - **Directional:** Radiates power in one focused direction.
  - **Omnidirectional:** Radiates power uniformly across a plane.
  - **Isotropic:** A theoretical antenna referenced when measuring effective radiated power.

### Document Outline Lists Objects
- **Version of (X)HTML:**
  - **Ordered List:**
  - **Unordered List:**
  - **Definition List:**
  - **List Item:**

- **Empty Elements:**
  - **Comments:**
  - **Forms:**
  - **Form Legend:**
  - **Input Label:**
  - **Form Input:**
  - **Drop-down Box:**
  - **Group of Options:**
  - **Note:** Core Attributes may not be used in base, head, html, meta, param, script, style, or title elements.

- **Page Information:**
  - **Collection of Fields:**
  - **Base URL:**
  - **Meta Data:**
  - **Title:**
  - **Relevant Resource:**
  - **Style Resource:**
  - **Script Resource:**
  - **Large Text Input:**
  - **Button:**

- **Document Structure:**
  - **Language Attributes:**
  - **Heading:**
  - **Inline Section:**
  - **Paragraph:**
  - **Line Break:**
  - **Horizontal Rule:**
  - **Table:**
  - **Caption:**
  - **Table Header:**
  - **Table Body:**
  - **Table Footer:**
  - **Column Group:**
  - **Column:**
  - **Table Row:**
  - **Header Cell:**
  - **Table Cell:**

- **Keyboard Attributes:**
  - **Accesskey:**
  - **Tabindex:**

- **Window Events:**
  - **onLoad:**
  - **onUnload:**

- **Form Events:**
  - **onBlur:**
  - **onReset:**
  - **onChange:**
  - **onSelect:**

- **Keyboard Events:**
  - **onKeypress:**

- **Mouse Events:**
  - **onClick:**
  - **onMouseout:**
  - **onDblclick:**
  - **onMouseover:**
  - **onMousedown:**
  - **onMouseup:**
  - **onMousemove:**

- **Date Formatting:**
  - **Y:** 4-digit year (2008)
  - **y:** 2-digit year (08)
  - **F:** Long month (January)
  - **M:** Short month (Jan)
  - **m:** Month (01 to 12)
  - **n:** Month (1 to 12)
  - **D:** Short day name (Mon)
  - **l:** Long day name (Monday) (lowercase L)
  - **d:** Day (01 to 31)
  - **j:** Day (1 to 31)
  - **H:** 24-hour format (00 to 23)
  - **h:** 12-hour format (01 to 12)
  - **g:** 12-hour format (1 to 12)
  - **i:** Minutes (00 to 59)
  - **s:** Seconds (00 to 59)
  - **w:** Day of week (0 to 6)
  - **z:** Day of year (0 to 365)
  - **W:** Week of year (1 to 53)
  - **t:** Days in month (28 to 31)
  - **a:** am or pm
  - **A:** AM or PM
  - **B:** Swatch Internet Time (000 to 999)
  - **S:** Ordinal suffix (st, nd, rd, th)
  - **T:** Timezone of machine (GMT)
  - **Z:** Timezone offset (seconds)
  - **O:** Difference to GMT (hours) (e.g., +0200)
  - **I:** Daylight saving (1 or 0)
  - **L:** Leap year (1 or 0)
  - **U:** Seconds since Epoch

- **Filesystem Functions:**
  - **clearstatcache():**
  - **copy(source, dest):**
  - **fclose(handle):**
  - **fgets(handle, len):**
  - **file(file):**

- **Array Functions:**
  - **array_diff(arr1, arr2 ...):**
  - **array_filter(arr, function):**
  - **array_flip(arr):**
  - **array_intersect(arr1, arr2 ...):**
  - **array_merge(arr1, arr2 ...):**
  - **array_pop(arr):**
  - **array_push(arr, var1, var2 ...):**
  - **array_reverse(arr):**
  - **array_search(needle, arr):**
  - **array_walk(arr, function):**

- **Regular Expression Functions:**
  - **ereg(pattern, str):**
  - **split(pattern, str):**
  - **ereg_replace(pattern, replace, str):**
  - **preg_grep(pattern, arr):**
  - **preg_match(pattern, str):**
  - **preg_match_all(pattern, str, arr):**
  - **preg_replace(pattern, replace, str):**
  - **preg_split(pattern, str):**

- **String Functions:**
  - **crypt(str, salt):**
  - **explode(sep, str):**
  - **implode(glue, arr):**
  - **nl2br(str):**
  - **sprintf(frmt, args):**
  - **strip_tags(str, allowed_tags):**
  - **str_replace(search, replace, str):**
  - **strpos(str, needle):**
  - **strrev(str):**
  - **strstr(str, needle):**
  - **strtolower(str):**
  - **strtoupper(str):**
  - **substr(string, start, len):**

- **Regular Expressions Syntax:**
  - **^:** Start of string
  - **$:** End of string
  - **.:** Any single character
  - **(a|b):** a or b
  - **(...):** Group section
  - **[abc]:** Item in range (a, b, or c)
  - **[^abc]:** Not in range (not a, b, or c)
  - **\s:** White space
  - **a?:** Zero or one of a
  - **a*:** Zero or more of a
  - **a*?:** Zero or more of a, ungreedy
  - **a+:** One or more of a
  - **a+?:** One or more of a, ungreedy
  - **a{3}:** Exactly 3 of a
  - **a{3,}:** 3 or more of a
  - **a{,6}:** Up to 6 of a
  - **a{3,6}:** 3 to 6 of a
  - **a{3,6}?:** 3 to 6 of a, ungreedy
  - **\:** Escape character
  - **[:punct:]:** Any punctuation symbol
  - **[:space:]:** Any space character
  - **[:blank:]:** Space or tab

- **PCRE Modifiers:**
  - **c:** ISO 8601 (PHP 5)

This document is available free from AddedBytes.com.