### Private Set Intersection Protocol Based on Homomorphic Encryption

For the special case where each party's input is a singleton set, this protocol achieves O(1) modular exponentiations and communication of a constant number of field elements, assuming Paillier encryption is used. Several other papers have explored private set intersection, including [10, 18, 9, 7, 21, 22, 8, 19]. Juels and Sudan introduced "fuzzy vaults," which are related to our construction [24].

### Cryptography and Social Networking

The intersection of cryptography and social networking is not well-studied in the academic literature. One notable work in this area is Persona [3], a system that allows users fine-grained control over privacy policies using attribute-based encryption.

FaceTrust [45] is a system for users to prove their identity and attributes in a peer-to-peer manner, similar to the Web of Trust paradigm [1]. This system can complement SocialKeys, as user trust in their friends' online identities is crucial in the absence of a certificate infrastructure.

A Facebook application called My Public Key [29] enables users to associate a public key with their Facebook account. However, interoperability is limited to Facebook users who also install this application.

There is a draft specification for OpenID key discovery [31], though it is not yet finalized and lacks vendor support.

### Conclusion

Location privacy is an increasingly important concern in today's world. Even seemingly simple problems like privacy-aware proximity testing can be surprisingly complex. Unlike previous work, we have studied this problem on a firm theoretical foundation and presented a variety of cryptographic protocols optimized for practical constraints. While we have developed a prototype implementation, it remains to be seen whether any vendors of location-based services will deploy these cryptographic systems in the market.

Several of the techniques we developed may be of independent interest. Asymmetric private equality testing is a versatile primitive, and in Sections 3.1 and 3.2, we provided new protocols and improvements over previous work. Finally, SocialKeys, our approach to managing user public keys via a social network, has potential applications beyond location privacy.

### Acknowledgments

Special thanks to Di Qiu for discussions about location tags and Elie Bursztein for pointing out issues with protocols where the server learns the result of proximity testing. Frank Wang and Kina Winoto provided invaluable help with the implementation. We are also grateful to Andrew Bortz, Aaron Johnson, Ann Kilzer, Ananth Raghunathan, Nitesh Saxena, and the anonymous reviewers for their comments on the draft, and to Eric Lam, David Molnar, Hart Montgomery, Ram Ravichandran, Elaine Shi, and Vinod Vaikuntanathan for useful discussions.

### References

[1] A. Abdul-Rahman and S. Halles. A distributed trust model. In New Security Paradigms, pages 48–60. ACM, 1997.
[2] M. J. Atallah and W. Du. Secure multi-party computational geometry. In International Workshop on Algorithms and Data Structures, pages 165–179. Springer-Verlag, 2001.
[3] R. Baden, A. Bender, N. Spring, B. Bhattacharjee, and D. Starin. Persona: An online social network with user-defined privacy. SIGCOMM Comput. Commun. Rev., 39(4):135–146, 2009.
[4] A. R. Beresford and F. Stajano. Location privacy in pervasive computing. IEEE Pervasive Computing, 2(1):46–55, 2003.
[5] A. J. Blumberg and P. Eckersley. On locational privacy, and how to avoid losing it forever. http://www.eff.org/wp/locational-privacy.
[6] F. Boudot, B. Schoenmakers, and J. Traore. A fair and efficient solution to the socialist millionaires’ problem. Discrete Applied Mathematics, 111:23–36, 2001.
[7] J. Camenisch and G. Zaverucha. Private intersection of certified sets. In Proc. of Financial Crypto 2009, volume 5628 of LNCS, pages 108–127, 2009.
[8] E. D. Cristofaro and G. Tsudik. Practical set intersection protocols with linear complexity. In Proc. of Financial Crypto 2010, volume 6052 of LNCS, pages 143–159, 2010.
[9] D. Dachman-Soled, T. Malkin, M. Raykova, and M. Yung. Efficient robust private set intersection. In Applied Cryptography and Network Security (ACNS), pages 125–142, 2009.
[10] L. K. Dawn and D. Song. Privacy-preserving set operations. In Proc. of Crypto, pages 241–257. Springer, 2005.
[11] N. Eagle, A. S. Pentland, and D. Lazer. Inferring friendship network structure by using mobile phone data. Proceedings of the National Academy of Sciences, 106(36):15274–15278, August 2009.
[12] R. Fagin, M. Naor, and P. Winkler. Comparing information without leaking it. Comm. of the ACM, 39:77–85, 1996.
[13] M. Freedman, K. Nissim, and B. Pinkas. Efficient private matching and set intersection. In Proc. of Eurocrypt’04, pages 1–19. Springer-Verlag, 2004.
[14] G. Friedland and R. Sommer. Cybercasing the joint: On the privacy implications of geotagging. In Proceedings of the Fifth USENIX Workshop on Hot Topics in Security (HotSec 10), 2010.
[15] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi, and K.-L. Tan. Private queries in location-based services: anonymizers are not necessary. In SIGMOD Conference, pages 121–132, 2008.
[16] P. Golle and K. Partridge. On the anonymity of home, work location pairs. In Proceedings of the 7th International Conference on Pervasive Computing, pages 390–397. Springer, 2009.
[17] M. Gruteser and D. Grunwald. Anonymous usage of location-based services through spatial and temporal cloaking. In MobiSys ’03, pages 31–42. ACM, 2003.
[18] C. Hazay and Y. Lindell. Efficient protocols for set intersection and pattern matching with security against malicious and covert adversaries. In Theory of Cryptography (TCC), pages 155–175, 2008.
[19] C. Hazay and K. Nissim. Efficient set operations in the presence of malicious adversaries. In Proc. of Public Key Crypto (PKC), volume 6056 of LNCS, pages 312–331, 2010.
[20] R. Honicky, E. A. Brewer, E. Paulos, and R. White. N-smarts: Networked suite of mobile atmospheric real-time sensors. In NSDR ’08, pages 25–30. ACM, 2008.
[21] S. Jarecki and X. Liu. Efficient oblivious pseudorandom function with applications to adaptive OT and secure computation of set intersection. In Proc. of Theory of Cryptography, pages 577–594, 2009.
[22] S. Jarecki and X. Liu. Fast secure computation of set intersection. In Proc. of Security and Cryptography for Networks (SCN’10), volume 6280 of LNCS, pages 418–435, 2010.
[23] T. Jiang, H. J. Wang, and Y.-C. Hu. Preserving location privacy in wireless LANs. In MobiSys ’07: Proceedings of the 5th International Conference on Mobile Systems, Applications, and Services, pages 246–257, New York, NY, USA, 2007. ACM.
[24] A. Juels and M. Sudan. A fuzzy vault scheme. Designs, Codes and Cryptography, 38(2):237–257, 2006.
[25] B. Kaliski. PKCS 5: Password-based cryptography specification. http://www.apps.ietf.org/rfc/rfc2898.html.
[26] H. Lipmaa. Verifiable homomorphic oblivious transfer and private equality test. In Proc. of Asiacrypt, pages 416–433, 2003.
[27] S. Lo, D. D. Loenzo, P. Enge, and P. Bradley. Signal authentication: A secure civil GNSS for today. Inside GNSS Magazine, 4(5), October 2009. www.insidegnss.com/node/1633.
[28] J. Manweiler, R. Scudellari, Z. Cancio, and L. P. Cox. We saw each other on the subway: Secure, anonymous proximity-based missed connections. In HotMobile ’09: Proceedings of the 10th Workshop on Mobile Computing Systems and Applications, pages 1–6, New York, NY, USA, 2009. ACM.
[29] R. McGeehan. My public key (Facebook application). http://www.facebook.com/apps/application.php?id=7923770364.
[30] A. Menezes, P. van Oorschot, and S. Vanstone. Handbook of Applied Cryptography. CRC, 1996.
[31] G. Monroe and C. Howells. OpenID key discovery 1.0 draft. http://openid.net/specs/openid-service-key-discovery-1_0-01.html, 2006.
[32] M. Naor and B. Pinkas. Oblivious transfer and polynomial evaluation. In Proc. of Symposium on the Theory of Computing (STOC), pages 245–254, 1999.
[33] A. Narayanan and V. Shmatikov. De-anonymizing social networks. In IEEE Security and Privacy, pages 173–187, 2009.
[34] D. Pescovitz. Cell phone as sensor. http://coe.berkeley.edu/labnotes/0805/honicky.html.
[35] R. A. Popa, H. Balakrishnan, and A. Blumberg. VPriv: Protecting privacy in location-based vehicular services. In 18th USENIX Security Symposium, Montreal, Canada, August 2009.
[36] D. Qiu, D. Boneh, S. Lo, and P. Enge. Robust location tag generation from noisy location data for security applications. In The Institute of Navigation International Technical Meeting, 2009.
[37] D. Qiu, S. Lo, P. Enge, D. Boneh, and B. Peterson. Geoencryption using LORAN. In The Institute of Navigation International Technical Meeting, 2007.
[38] R. Ravichandran, M. Benisch, P. G. Kelley, and N. M. Sadeh. Capturing social networking privacy preferences: Can default policies help alleviate tradeoffs between expressiveness and user burden? In PETS, pages 1–18, 2009.
[39] M. Raya and J.-P. Hubaux. The security of vehicular ad hoc networks. In SASN ’05: Proceedings of the 3rd ACM Workshop on Security of Ad Hoc and Sensor Networks, pages 11–21. ACM Press, 2005.
[40] P. F. Riley. The tolls of privacy: An underestimated roadblock for electronic toll collection usage. Computer Law and Security Report, 24(6):521–528, 2008.
[41] N. Sastry, U. Shankar, and D. Wagner. Secure verification of location claims. In WiSe ’03: Proceedings of the 2nd ACM Workshop on Wireless Security, pages 1–10. ACM, 2003.
[42] J. Scheck. Stalkers Exploit Cellphone GPS, 2010. Wall Street Journal.
[43] L. Scott and D. E. Denning. A location-based encryption technique and some of its applications. In Institute of Navigation National Technical Meeting, pages 734–740, 2003.
[44] P. Shankar, V. Ganapathy, and L. Iftode. Privately querying location-based services with Sybil-query. In UbiComp’09: 11th International Conference on Ubiquitous Computing, pages 31–40, Orlando, Florida, September/October 2009. ACM Press, New York, NY, USA. http://doi.acm.org/10.1145/1620545.1620550.
[45] M. Sirivianos, K. Kim, and X. Yang. FaceTrust: Assessing the credibility of online personas via social networks. In Usenix HotSec, 2009.
[46] R. Thomas. Getting in Bed with Robin Sage, 2010. Black Hat.
[47] L. Šikšnys, J. R. Thomsen, S. Šaltenis, M. L. Yiu, and O. Andersen. A location privacy aware friend locator. In SSTD ’09, pages 405–410. Springer-Verlag, 2009.
[48] A. Whitten and J. D. Tygar. Why Johnny can’t encrypt: A usability evaluation of PGP 5.0. In 8th USENIX Security Symposium, 1999.
[49] A. C.-C. Yao. How to generate and exchange secrets. In Proc. of Foundations of Computer Science (FOCS), pages 162–167, 1986.
[50] M. E. Zarki, S. Mehrotra, G. Tsudik, and N. Venkatasubramanian. Security issues in a future vehicular network. In European Wireless, pages 270–274, 2002.
[51] G. Zhong, I. Goldberg, and U. Hengartner. Louis, Lester, and Pierre: Three protocols for location privacy. In Privacy Enhancing Technologies, pages 62–76, 2007.
[52] K. Zickuhr and A. Smith. 4% of online Americans use location-based services, 2010. Pew Research Center Survey.

### Asynchronous Variant of Protocol 1 Using an Oblivious Server

In Section 3.1, we presented a synchronous private equality test using an additively homomorphic encryption scheme such as ElGamal. This protocol requires both Alice and Bob to be online simultaneously. Here, we present an asynchronous variant of the protocol using a trusted server. The server learns nothing at the end of the protocol, assuming the server does not collude with Alice.

Let (G, E, D) be a public-key additively homomorphic encryption scheme over a group of size p. We assume Alice has the secret key sk, and Bob and the server have the public key pk. The protocol works as follows:

- **Bob's message**: At any time, Bob sends E(pk, b) to the server.
- **Alice queries the server**: At any time, Alice sends E(pk, a) to the server. The server generates a random r ∈ Zp and sends C ← E(pk, r(a - b)) back to Alice. The server constructs C using the additive property of encryption, as described in Section 3.1.

**Security**: The security of this protocol is maintained as long as Alice does not collude with the server. The advantage of this protocol over the synchronous version is that there is only one round of communication between Alice and the server, as there is no need for a counter. However, the computational and bandwidth requirements are increased compared to the synchronous version.