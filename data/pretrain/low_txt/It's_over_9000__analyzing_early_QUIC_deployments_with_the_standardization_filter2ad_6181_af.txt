### Extensive Deployment by Large Network Providers

Stateful scans conducted with QScanner reveal that the Transport Layer Security (TLS) configurations for QUIC and TLS over TCP stacks are largely consistent for the same target. In contrast, there is significant variability in implementations and configurations across the Internet, with 45 distinct transport parameter sets identified. A comprehensive analysis of these differences and their impact on network communications, particularly on user experience, is essential to improve the Internet, support the long-term deployment of QUIC, and evaluate design decisions from the protocol specification.

### The Dominance of CDNs

Similar to the findings of Rüth et al. [39], a small group of providers dominates the deployment of QUIC. While Rüth et al. reported in 2018 that a majority of QUIC deployments were associated with Google, our current work shows that Cloudflare now leads in the deployment of IETF QUIC. Google remains highly involved in QUIC development but deploys its own version of the protocol. The dominance of large providers during the early stages of IETF draft deployments has also been noted by Holz et al. [19]. Cloudflare, Google, Akamai, and Mozilla have been key drivers in the rapid adoption of TLS 1.3 on the Internet.

Our research indicates that QUIC-capable hosts can be found in more than 4,700 Autonomous Systems (ASes), and successful connections can be established with targets in 4,400 ASes. However, the analysis of transport parameters and HTTP Server Header values suggests that many of these deployments are orchestrated by large Content Delivery Networks (CDNs) as edge Points of Presence (POPs), similar to the findings of Gigis et al. [16]. This centralization must be carefully considered in future research, as measurement studies can be biased towards these major providers. Operators cannot be solely identified based on ASes and may be responsible for distributed deployments. Despite this, it is evident that even before the final standardization of the QUIC draft, individuals and organizations are adopting the new protocol, even though prominent HTTP servers like NGINX [35] only provide QUIC support on specific branches. As QUIC standardization and deployment increase, its status will need further evaluation.

### Fingerprinting QUIC

Based on our results, we argue that the integration of multiple layers of the network stack into a single protocol increases the potential for fingerprinting specific implementations. With many QUIC stacks implementing transport functionality, necessary TLS adaptations, and HTTP servers individually, the number of parameters pointing to a specific implementation is higher compared to traditional HTTP servers with interchangeable TLS libraries built on top of an independent TCP stack. As shown in Section 5, we identified 45 sets of QUIC parameters, some of which are closely related to specific providers. By adding TLS properties and HTTP results, we were able to identify edge POP deployments of specific providers. Future research should evaluate whether this trend persists or if standardization leads to a separation of functionality, such as with TLS-specific libraries adapting to new requirements.

### Acknowledgments

The authors would like to thank the anonymous reviewers and our shepherd Steve Uhlig for their valuable feedback. This work was partially funded by the German Federal Ministry of Education and Research under the project PRIMEnet, grant 16KIS1370, and the German-French Academy for the Industry of the Future.

### Definitions

- **RFC 6066**: Transport Layer Security (TLS) Extensions: Extension

### References

[1] Donald E. Eastlake 3rd. 2011. Transport Layer Security (TLS) Extensions: Extension
[2] Alexa. 2021. Top 1M sites. https://www.alexa.com/topsites
[3] Johanna Amann, Oliver Gasser, Quirin Scheitle, Lexi Brent, Georg Carle, and Ralph Holz. 2017. Mission Accomplished? HTTPS Security after Diginotar. In Proceedings of the 2017 Internet Measurement Conference (IMC ’17). Association for Computing Machinery, New York, NY, USA, 325–340.
[4] Mike Bishop. 2021. Hypertext Transfer Protocol Version 3 (HTTP/3). Internet-Draft draft-ietf-quic-http-34. Internet Engineering Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-http-34 Work in Progress.
[5] Cisco. 2021. Umbrella Top 1M List. https://umbrella.cisco.com/blog/cisco-umbrella-1-million
[6] crt.sh. 2021. Certificates for Google Video in CT Log. Retrieved 2021-05-27 from https://crt.sh/?q=googlevideo.com https://web.archive.org/web/20210526164544/https://crt.sh/?q=googlevideo.com.
[7] Dragana Damjanovic. 2021. QUIC and HTTP/3 Support now in Firefox Nightly and Beta. Retrieved 2021-09-27 from https://hacks.mozilla.org/2021/04/quic-and-http-3-support-now-in-firefox-nightly-and-beta/
[8] David Schinazi and Fan Yang and Ian Swett. 2020. Chrome is deploying HTTP/3 and IETF QUIC. Retrieved 2021-09-27 from https://blog.chromium.org/2020/10/chrome-is-deploying-http3-and-ietf-quic.html
[9] David Dittrich, Erin Kenneally, et al. 2012. The Menlo Report: Ethical principles guiding information and communication technology research. US Department of Homeland Security (2012).
[10] Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. 2013. ZMap: Fast Internet-wide Scanning and Its Security Applications. In Proc. USENIX Security Symposium. Washington, D.C., USA.
[11] Facebook. 2021. mvfst. https://github.com/facebookincubator/mvfst
[12] Facebook. 2021. Proxygen: Facebook’s C++ HTTP Libraries. https://github.com/facebook/proxygen
[13] Marc Fischlin and Felix Günther. 2014. Multi-Stage Key Exchange and the Case of Google’s QUIC Protocol. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS ’14). Association for Computing Machinery, New York, NY, USA, 1193–1204.
[14] Oliver Gasser, Quirin Scheitle, Pawel Foremski, Qasim Lone, Maciej Korczyński, Stephen D. Strowes, Luuk Hendriks, and Georg Carle. 2018. Clusters in the Expanse: Understanding and Unbiasing IPv6 Hitlists. In Proceedings of the Internet Measurement Conference 2018 (IMC ’18). Association for Computing Machinery, New York, NY, USA, 364–378.
[15] Alessandro Ghedini. October 17, 2019. Experiment with HTTP/3 using NGINX and quiche. https://blog.cloudflare.com/experiment-with-http-3-using-nginx-and-quiche/
[16] Petros Gigis, Matt Calder, Lefteris Manassakis, George Nomikos, Vasileios Kotronis, Xenofontas Dimitropoulos, Ethan Katz-Bassett, and Georgios Smaragdakis. 2021. Seven Years in the Life of Hypergiants’ off-Nets. In Proceedings of the 2021 ACM SIGCOMM 2021 Conference (SIGCOMM ’21). Association for Computing Machinery, New York, NY, USA, 516–533.
[17] IETF QUIC Working Group. 2021. Implementations. https://github.com/quicwg/
[18] IETF QUIC Working Group. 2021. QUIC Versions. https://github.com/quicwg/base-drafts/wiki/Implementations
[19] Ralph Holz, Jens Hiller, Johanna Amann, Abbas Razaghpanah, Thomas Jost, Narseo Vallina-Rodriguez, and Oliver Hohlfeld. 2020. Tracking the Deployment of TLS 1.3 on the Web: A Story of Experimentation and Centralization. SIGCOMM Comput. Commun. Rev. 50, 3 (July 2020), 3–15.
[20] ICANN. 2021. Centralized Zone Data Service. https://czds.icann.org/home
[21] Jana Iyengar and Martin Thomson. 2021. QUIC: A UDP-Based Multiplexed and Secure Transport. RFC 9000. https://doi.org/10.17487/RFC9000
[22] Jana Iyengar and Martin Thomson. 2021. QUIC: A UDP-Based Multiplexed and Secure Transport. Internet-Draft draft-ietf-quic-transport-34. Internet Engineering Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-transport-34 Work in Progress.
[23] Jim Roskind. June 27, 2013. Experimenting with QUIC. https://blog.chromium.org/2013/06/experimenting-with-quic.html
[24] Matt Joras and Yang Chi. 2020. How Facebook is bringing QUIC to billions. Retrieved 2021-09-27 from https://engineering.fb.com/2020/10/21/networking-traffic/how-facebook-is-bringing-quic-to-billions/
[25] Arash Molavi Kakhki, Samuel Jero, David Choffnes, Cristina Nita-Rotaru, and Alan Mislove. 2017. Taking a Long Look at QUIC: An Approach for Rigorous Evaluation of Rapidly Evolving Transport Protocols. In Proceedings of the 2017 Internet Measurement Conference (IMC ’17). Association for Computing Machinery, New York, NY, USA, 290–303.
[26] Arash Molavi Kakhki, Samuel Jero, David Choffnes, Cristina Nita-Rotaru, and Alan Mislove. 2019. Taking a Long Look at QUIC: An Approach for Rigorous Evaluation of Rapidly Evolving Transport Protocols. Commun. ACM 62, 7 (June 2019), 86–94.
[27] Hyojeong Kim and James Hongyi Zeng. August 21, 2017. Steering oceans of content to the world. https://research.fb.com/steering-oceans-of-content-to-the-world/
[28] Platon Kotzias, Abbas Razaghpanah, Johanna Amann, Kenneth G. Paterson, Narseo Vallina-Rodriguez, and Juan Caballero. 2018. Coming of Age: A Longitudinal Study of TLS Deployment. In Proceedings of the Internet Measurement Conference 2018 (IMC ’18). Association for Computing Machinery, New York, NY, USA, 415–428.
[29] Adam Langley, Alistair Riddoch, Alyssa Wilk, Antonio Vicente, Charles Krasic, Dan Zhang, Fan Yang, Fedor Kouranov, Ian Swett, Janardhan Iyengar, Jeff Bailey, Jeremy Dorfman, Jim Roskind, Joanna Kulik, Patrik Westin, Raman Tenneti, Robbie Shade, Ryan Hamilton, Victor Vasiliev, Wan-Teh Chang, and Zhongyi Shi. 2017. The QUIC Transport Protocol: Design and Internet-Scale Deployment. In Proceedings of the Conference of the ACM Special Interest Group on Data Communication (SIGCOMM ’17). Association for Computing Machinery, New York, NY, USA, 183–196.
[30] LiteSpeed QUIC Team. 2021. LiteSpeed QUIC (LSQUIC) Library. https://github.com/litespeedtech/lsquic
[31] Robert Lychev, Samuel Jero, Alexandra Boldyreva, and Cristina Nita-Rotaru. 2015. How Secure and Quick is QUIC? Provable Security and Performance Analyses. In 2015 IEEE Symposium on Security and Privacy. 214–231.
[32] Majestic. 2021. The Majestic Million. https://majestic.com/reports/majestic-million/
[33] Robin Marx, Joris Herbots, Wim Lamotte, and Peter Quax. 2020. Same Standards, Different Decisions: A Study of QUIC and HTTP/3 Implementation Diversity. In Proceedings of the Workshop on the Evolution, Performance, and Interoperability of QUIC (EPIQ ’20). Association for Computing Machinery, New York, NY, USA, 14–20.
[34] Késsia Nepomuceno, Igor Nogueira de Oliveira, Rafael Roque Aschoff, Daniel Bezerra, Maria Silvia Ito, Wesley Melo, Djamel Sadok, and Géza Szabó. 2018. QUIC and TCP: A Performance Evaluation. In 2018 IEEE Symposium on Computers and Communications (ISCC). 00045–00051.
[35] NGINX QUIC. 2021. Welcome to the demo site for nginx-quic. https://quic.nginx.org/
[36] Mark Nottingham, Patrick McManus, and Julian Reschke. 2016. HTTP Alternative Services. RFC 7838.
[37] Craig Partridge and Mark Allman. 2016. Addressing Ethical Considerations in Network Measurement Papers. Commun. ACM 59, 10 (Oct. 2016).
[38] Maxime Piraux, Quentin De Coninck, and Olivier Bonaventure. 2018. Observing the Evolution of QUIC Implementations. In Proceedings of the Workshop on the Evolution, Performance, and Interoperability of QUIC (EPIQ’18). Association for Computing Machinery, New York, NY, USA, 8–14.
[39] Jan Rüth, Ingmar Poese, Christoph Dietzel, and Oliver Hohlfeld. 2018. A First Look at QUIC in the Wild. In Passive and Active Measurement. Springer International Publishing, 255–268.
[40] David Schinazi and Eric Rescorla. 2021. Compatible Version Negotiation for QUIC. Internet-Draft draft-ietf-quic-version-negotiation-03. Internet Engineering Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-version-negotiation-03 Work in Progress.
[41] Benjamin M. Schwartz, Mike Bishop, and Erik Nygren. 2021. Service binding and parameter specification via the DNS (DNS SVCB and HTTPS RRs). Internet-Draft draft-ietf-dnsop-svcb-https-05. Internet Engineering Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-05 Work in Progress.
[42] Marten Seemann and Jana Iyengar. 2020. Automating QUIC Interoperability Testing. In Proceedings of the Workshop on the Evolution, Performance, and Interoperability of QUIC (EPIQ ’20). Association for Computing Machinery, New York, NY, USA, 8–13.
[43] Martin Thomson and Sean Turner. 2021. Using TLS to Secure QUIC. RFC 9001. https://doi.org/10.17487/RFC9001
[44] Martin Thomson and Sean Turner. 2021. Using TLS to Secure QUIC. Internet-Draft draft-ietf-quic-tls-34. Internet Engineering Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-tls-34 Work in Progress.
[45] Martino Trevisan, Danilo Giordano, Idilio Drago, and Ali Safari Khatouni. 2021. Measuring HTTP/3: Adoption and Performance. CoRR abs/2102.12358 (2021). arXiv:2102.12358 https://arxiv.org/abs/2102.12358
[46] Konrad Wolsing, Jan Rüth, Klaus Wehrle, and Oliver Hohlfeld. 2019. A Performance Perspective on Web Optimized Protocol Stacks: TCP+TLS+HTTP/2 vs. QUIC. In Proceedings of the Applied Networking Research Workshop (ANRW ’19). Association for Computing Machinery, New York, NY, USA, 1–7.

### Important AS Names

Table 7 provides a summary of important ASes and their corresponding names.

**Table 7: Important ASes and Corresponding Names**

| Name | AS |
| --- | --- |
| GTS Telecom SRL | AS5606 |
| 1&1 IONOS SE | AS8560 |
| Cloudflare, Inc. | AS13335 |
| DigitalOcean, LLC | AS14061 |
| Google LLC | AS15169 |
| OVH SAS | AS16276 |
| Amazon.com, Inc. | AS16509 |
| Akamai International B.V. | AS20940 |
| SYNERGY WHOLESALE PTY LTD | AS45638 |
| Hostinger International Limited | AS47583 |
| Fastly | AS54113 |
| A2 Hosting, Inc. | AS55293 |
| Reliance Jio Infocomm Limited | AS55836 |
| PrivateSystems Networks | AS63410 |
| Linode, LLC | AS63949 |
| Cloudflare London, LLC | AS209242 |
| EuroByte LLC | AS210079 |

### Ethics

All our scans are conducted based on a set of ethical measures we strictly follow. These measures are primarily based on informed consent [9] and well-known best practices [37]. Our study does not involve users, their information, or sensitive data but focuses on publicly reachable and available services. To avoid causing harm to any infrastructure, we apply measures described by Durumeric et al. [10]. We limit the rate of our scans and use a collective blocklist based on requests to be excluded from our scans. We are directly registered as abuse contact for our scan infrastructure and respond quickly to all requests. Additionally, we host websites on all IP addresses used for scanning to inform about our research and provide contact information for further details or scan exclusion.

As explained in Section 2, initial packets need to be at least 1200 bytes. This increases the overall traffic from our scans compared to most TCP ZMap scans but mainly impacts our own uplink to the Internet. Due to the randomization of scanned targets, we argue that the impact on servers is still minimal. Furthermore, we limit the number of scanned domains per IP address to reduce the load on hosting services and providers.