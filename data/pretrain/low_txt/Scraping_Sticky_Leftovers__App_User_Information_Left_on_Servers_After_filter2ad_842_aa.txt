### Title: Scraping Sticky Leftovers: App User Information Left on Servers After Account Deletion

### Authors: Preethi Santhanam, Hoang Dang, Zhiyong Shan, and Iulian Neamtiu

**Publication Details:**
- **Conference:** 2022 IEEE Symposium on Security and Privacy (SP)
- **DOI:** 10.1109/SP46214.2022.00020
- **Copyright:** © 2022, Preethi Santhanam. Under license to IEEE.
- **Downloaded on:** August 07, 2022 at 13:00:26 UTC from IEEE Xplore.
- **Authorized Use:** Limited to Tsinghua University.

### Abstract

Sixty-five percent of mobile apps require user accounts for full functionality. These accounts often contain private data such as addresses, phone numbers, and credit card information. A significant concern is the retention of "leftover" account data on servers after account deletion, which can lead to privacy violations. We analyzed 1,435 popular apps from Google Play (and 771 associated websites), of which 678 have their own sign-up process, to address questions like: Can accounts be deleted? Does user data remain on servers post-deletion? If so, for how long? Do apps honor their promises to remove data?

Addressing these questions is challenging due to the private nature of server data and the distributed nature of the data across both the app and its website. We developed a novel, reverse-engineering approach to infer leftover data from app–server communication. Our end-to-end solution includes static analysis, dynamic analysis, and natural language processing. Our toolchain checks for account deletion support, data retention policies, and whether accounts are left on servers after deletion or the specified retention period. It also automatically cleans up leftover accounts.

Key findings include:
- 64.45% of apps do not offer any means for users to delete accounts.
- 2.5% of apps still keep account data on servers even after deletion.
- Only 5% of apps specify a retention period, with some violating their own policies by retaining data for months after the period ends.
- Our approach is effective, with an F-measure > 88%, and efficient, with a typical analysis time of 279 seconds per app/website.

### 1. Introduction

A substantial percentage (65%) of mobile apps require user accounts, which involve providing private information such as email addresses, phone numbers, and billing details. Unfortunately, only 35.55% of these apps offer users the option to delete their accounts. Some companies make this process difficult, requiring users to visit the company's website to delete a mobile-created account. Others retain information even after users request account deletion.

We define Leftover Account Information (LAI) as the account information retained on servers after account deletion. LAI poses two main problems: it represents a security risk due to potential data leaks, and it violates users' trust, as they reasonably expect their information to be deleted when they delete their accounts.

In Figure 1, we present several LAI examples:
- Figure 1(a) shows the PiniOn mobile app requiring personal information during sign-up.
- Figure 1(b) shows the app claiming the account will be "irreversibly" erased.
- Figure 1(c) shows that the app still retains account details on the backend servers after deletion.
- Figure 1(d) shows an anonymized eBay account still retained on servers after the 30-day retention period.

Only 22.71% of the examined apps provide in-app 'Delete Account' options, while 12.83% require users to delete accounts via the website. Many apps (437, including 384 with over 1M installs) do not offer any account deletion functionality. Additionally, only 5% of apps specify a retention period, ranging from 30 minutes to 5 years, typically 30 days.

### 2. Challenges and Approach

To our knowledge, there has been no prior effort to study and address LAI. The primary challenge is that data is stored privately on servers, making it inaccessible to outsiders. We devised a novel reverse-engineering approach to infer leftover data from app–server communication. Another challenge is the extensive scope of the analysis, which involves both the app and its website. We address these challenges with a four-tool chain:
- **LeftoverAccountAnalyzer**: Infers leftover data from app–server communication.
- **AccountDeletionAnalyzer**: Determines if an app has account deletion functionality.
- **RetentionPeriodAnalyzer**: Extracts the app's retention period.
- **LeftoverAccountCleaner**: Automatically cleans up leftover accounts for a given Google user.

We made the tool implementations, datasets, and analysis results available on GitHub.

### 3. Evaluation and Study

We evaluated our approach using 1,435 Android apps and 771 corresponding websites. While 938 apps (65.4%) require account sign-up, 260 use third-party sign-in, leaving 678 "own sign-in" apps as the focus of our study.

Our toolchain is effective:
- **LeftoverAccountAnalyzer** found that 254 apps (37.46%) leave LAI after uninstallation, and 17 apps (2.5%) leave LAI after account deletion.
- **LeftoverAccountCleaner** successfully cleaned up accounts in 214 out of 245 uninstalled apps (87.34%).
- The median per-app analysis time for our tools was 163 to 276 seconds, demonstrating efficiency.

### 4. Contributions

- **Exposition and study** of the LAI problem.
- **Novel, reverse engineering-based approach** (LeftoverAccountAnalyzer) to infer leftover account information.
- **AccountDeletionAnalyzer** tool to determine account deletion functionality.
- **RetentionPeriodAnalyzer** tool to extract app retention periods.
- **LeftoverAccountCleaner** tool to clean up leftover accounts.
- **Evaluation** of these tools on popular apps from Google Play.

### 5. Leftover Accounts: Problem Definition

The lifecycle of an account involves installation, sign-up, and eventual deletion. Users should reasonably expect:
- **Account deletion functionality** in the app or on the website.
- A **retention policy** specifying how long data will be retained after deletion.
- **Removal of account information** from the server after deletion.

### Conclusion

Our study highlights the significant issue of leftover account information and provides a comprehensive solution to address it. Future work will focus on further refining our tools and expanding the scope of the analysis to include more apps and platforms.