### 6.5 Cipher Suites

The security of the TLS protocol fundamentally depends on the use of strong cipher suites. However, servers and clients often have to balance security with compatibility. During a TLS handshake, ZGrab offers the cipher suites implemented by the Golang TLS library and logs the chosen cipher suite, which is then exported to Censys. Using Censys, we generated the distribution of selected cipher suites by all HTTPS hosts by querying for HTTPS hosts and aggregating on the `443.https.cipher_suite.name` field. Censys completed this query in 212ms. These distributions are shown in Figure 5. Even from these basic distributions, we can gain insights into cipher suite selection in the wild.

- **Key Exchange Preferences**: The Alexa Top 1M domains prefer ECDHE key exchange, while IPv4 hosts generally prefer RSA key exchange.
- **Cipher Suite Preferences**: Hosts without trusted certificates are more likely to use RC4 rather than AES. Overall, not only are RC4 and AES preferred over 3DES, but 3DES ciphers are chosen by less than 1% of hosts.

### 7. RELATED WORK

Over the past several years, numerous research studies have been based on Internet-wide scanning [1, 7–11, 13, 14, 18, 19, 24–29, 38], which motivated us to develop Censys. Censys further enables such studies and lowers the barriers to entry for utilizing Internet-wide scan data.

#### 7.1 Scan Driven Search Engines

The closest work to Censys is Shodan, which provides a text search of banners, primarily on FTP, SSH, Telnet, and HTTP [30]. Banners are searchable as plaintext, and searches can be filtered by CIDR range and location. While Censys and Shodan aim to fulfill similar goals, they take different approaches, offer varying functionality, and serve different needs.

**Comparison with Shodan**:
- **Banner Grabbing**: It is unclear how Shodan performs banner grabs, where, and how frequently. To compare Shodan's coverage with Censys, we compared the result sets for three academic institutions on three shared protocols: FTP, HTTP, and HTTPS.
- **Data Freshness**: Shodan does not expire results, making it difficult to compare with our most recent scans. However, Shodan includes a last-seen-at timestamp on records, allowing us to compare Censys against any hosts Shodan has seen in the past month. Censys only presents records from the latest scan.
- **Coverage Comparison**: On average, Censys found 598% more FTP hosts, 222% more HTTP hosts, and 808% more HTTPS hosts than Shodan. Spot-checks confirmed that these additional hosts were not false positives but rather hosts not recently found or missing from Shodan.
- **Scan Frequency**: To measure how frequently Shodan scans the Internet, we provisioned a publicly available FTP server with a unique banner and queried the Shodan search API every 10 minutes for the banner. Shodan did not respond with our FTP host in its result set until 25 days after provisioning our server. In comparison, the host was present in Censys’s public interface within 48 hours. Additionally, during this experiment, Shodan timed out for 2% of queries and returned an "Invalid Query" error for 1%.
- **Search Interface and API**: Shodan's search interface and API differ from Censys. Censys supports query statements on parsed fields, while Shodan only allows simple full-text searches against the raw text of a host’s banner. Shodan limits anonymous users to 10 hosts per search and registered users to 50 hosts per search. All API calls require creating an account, and access to larger result sets and HTTPS requires purchasing an account (a minimum of $50 USD). Any results from the API and results in the web interface beyond the 50 hosts per search require purchasing "query credits." Credits can be purchased at $2.50/credit, or $500/month for unlimited credits. In contrast, Censys publicly provides a fully featured query interface to parsed application handshake data and API results in paginated sets of 5k hosts. We also post all raw and parsed data from Censys on the Internet-Wide Scan Data Repository at https://scans.io.

While Shodan has been used to show the existence of vulnerable systems, its lack of timeliness, coverage, and transparency prevents it from being a trusted tool by researchers. In contrast, Censys is designed to be a fully transparent, community-driven project. All code is available on GitHub, all results are publicly available, and we support a query syntax and API tailored to researchers.

### 8. CONCLUSION

Until now, there has been a gap between the technical ability to perform host discovery scans on the IPv4 address space and answering meaningful research questions. In this paper, we introduced Censys, a public query engine and data processing facility backed by data collected from ongoing Internet-wide scans. Designed to help researchers answer security-related questions, Censys collects structured data about the IPv4 address space and supports querying fields derived from scans and generating statistical reports. We explored several security applications of Censys and showed how it can be used to easily answer questions from recent studies. We hope that Censys enables researchers to easily answer questions about the Internet that previously required extensive effort, while simultaneously reducing duplicate effort and total scan traffic.

### Acknowledgments

The authors thank Ben Burgess, Alishah Chator, Henry Fanson, and Harsha Gotur for their help building Censys. We also thank the exceptional sysadmins at the University of Michigan for their help and support throughout this project, including Chris Brenner, Kevin Cheek, Laura Fink, Dan Maletta, Jeff Richardson, Donald Welch, Don Winsor, and others from ITS, CAEN, and DCO. We are extremely grateful to Elie Bursztein and the Google Anti-abuse team for their support and advice, without whose help this project would not have been possible. We also thank Brad Campbell, Aleksander Durumeric, James Kasten, Kyle Lady, Adam Langley, HD Moore, Pat Pannuto, Paul Pearce, Niels Provos, Mark Schloesser, Eric Wustrow, our anonymous reviewers for valuable feedback, and the many contributors to the ZMap and ZGrab open source projects. This material is based upon work supported by the National Science Foundation under grants CNS-1111699, CNS-1255153, CNS-1345254, CNS-1409505, CNS-1409758, and CNS-1518741, by the Google Ph.D. Fellowship in Computer Security, by the Morris Wellman Faculty Development Assistant Professorship, and by an Alfred P. Sloan Foundation Research Fellowship.

### 9. REFERENCES

[References listed as provided, with no changes needed for clarity or coherence.]

This optimized version of the text aims to improve clarity, coherence, and professionalism, ensuring that the information is presented in a more structured and readable format.