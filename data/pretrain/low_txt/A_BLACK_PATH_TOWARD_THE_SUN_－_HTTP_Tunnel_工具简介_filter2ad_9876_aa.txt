# A Black Path Toward the Sun - HTTP Tunnel 工具简介

## 译文声明
本文为翻译文章，原文来源：同程安全应急响应中心。译文仅供参考，具体内容及含义以原文为准。

## 第一部分 - 简介
NCC Group 是一家老牌的代码安全审计机构，在 OpenSSL HeartBleed（心脏出血漏洞）爆发后，为 OpenSSL 提供了代码安全性审计服务。此外，他们还在 GitHub 上提供了许多开源工具和解决方案。在 NCC Group 的主页上，可以看到多个超过 100+ star 的项目。最近，在 Black Hat US 的 Arsenal 展区，他们展示了一个新的开源项目 [A Black Path Toward The Sun (ABPTTS)](https://github.com/nccgroup/ABPTTS)。这是一款用于在复杂网络环境下通过被控制的 Web 应用服务器建立 HTTP 隧道连接的工具。

在 ABPTTS 出现之前，已经存在诸如 [netcat](http://netcat.sourceforge.net/)（TCP 端口转发）、[httptunnel](http://http-tunnel.sourceforge.net/)（TCP-over-HTTP）、[tunna](https://github.com/SECFORCE/Tunna)（HTTP Tunnel）和 [reGeorg](https://github.com/sensepost/reGeorg)（Socks5）等类似的网络工具。NCC Group 开发 ABPTTS 的目的是将这些工具的优点结合起来，并简化为一个工具。ABPTTS 主要适用于以下两种情况：
1. 渗透者（下文简称 A）无法与 Web 服务器建立除 HTTP 之外的其他类型连接。例如，A 从应用层控制了 Web 服务器，可以访问 Web 服务器的 TCP 443 端口并建立连接，但其他类型的连接不能通过防火墙。
2. A 可以对被控制的 Web 服务器发起非 HTTP 协议请求，并且这些请求可能可以通过防火墙到达 Web 服务器。但是，Web 服务器向外发起的只有 HTTP 连接可以直接通过防火墙。例如，A 想通过 SSH 登录目标服务器，但该 SSH 协议需要通过网络中部署的 TLS-Inspector，而 TLS-Inspector 会拒绝其他协议试图建立隧道的请求。因此，A 无法直接建立起与 Web 服务器之间的 SSH 隧道。

## 第二部分 - 示例场景
假设一个真实的场景如下：
- A 发现了一个可以直接 Getshell 并进行任意文件上传的目标 Web 服务器，使用的是 Apache Tomcat。
- Web 服务器位于公网，A 可以直接访问，但除了 HTTP 连接外的其他连接都被防火墙、路由器 ACL 表和负载均衡器过滤。
- Web 服务器的所有协议请求都需要经过上述防火墙、路由器 ACL 表等过滤，无法与外网建立任何直接连接。
- Web 服务器不会向外部 DNS 服务器发起 DNS 查询。

由于第二点，A 无法向目标服务器建立任何直连 Shell；第三点使得 A 无法与目标服务器建立反向 Shell；第四点则使 A 无法与目标服务器建立 DNS 隧道。

在这样的复杂网络环境下，如果不建立 HTTP 隧道，A 只能通过 Webshell 获得的非交互式或半交互式 Shell 来逐条执行命令，这非常不便且许多需要交互的软件无法运行，更不用说将 Web 服务器作为跳板使用 RDP 连接到内网其他主机了。

此时，A 可以通过 ABPTTS 建立一个 HTTP 隧道。通过这个 HTTP 隧道，攻击者可以直接访问目标服务器所能访问的内容，因为 A 与目标服务器之间的通信是通过符合防火墙策略的 HTTP 隧道进行的，能够通过防火墙等的过滤。

使用 ABPTTS 建立 HTTP 隧道需要在客户端和服务端进行特定操作：
- A 在本地运行一个 Python 脚本，将发往目标服务器的 TCP 报文转换成特定格式的 HTTP 请求，然后发送给目标服务器。
- A 在目标服务器上传一个 JSP 脚本文件（当前环境为 Tomcat），该脚本文件可以将 A 发起的 HTTP 请求还原成原始 TCP 报文，并根据报文建立连接，将连接产生的响应 TCP 报文重新转换成 HTTP 响应并通过 Web 应用返回给 A。

具体步骤如下：
1. A 在本地执行 `python abpttsfactory.py -o tomcat_walkthrough`，将会看到如下输出：

```plaintext
[2016-08-10 10:53:34.839592] ---===[[[ A Black Path Toward The Sun ]]]===---
[2016-08-10 10:53:34.839674]    --==[[        -  Factory  -        ]]==--
[2016-08-10 10:53:34.839706]             Ben Lincoln, NCC Group
[2016-08-10 10:53:34.839721]            Version 1.0 - 2016-07-30
[2016-08-10 10:53:34.841099] Output files will be created in "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough"
[2016-08-10 10:53:34.841121] Client-side configuration file will be written as "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/config.txt"
[2016-08-10 10:53:34.841137] Using "~/Desktop/Pentest/Python/ABPTTS/data/american-english-lowercase-4-64.txt" as a wordlist file
[2016-08-10 10:53:34.849013] Created client configuration file "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/config.txt"
[2016-08-10 10:53:34.851994] Created server file "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/abptts.jsp"
[2016-08-10 10:53:34.853073] Created server file "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/abptts.aspx"
[2016-08-10 10:53:34.853882] Created server file "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/war/WEB-INF/web.xml"
[2016-08-10 10:53:34.854348] Created server file "~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/war/META-INF/MANIFEST.MF"
[2016-08-10 10:53:34.855520] Prebuilt JSP WAR file: ~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/DroopyWhimsical.war
[2016-08-10 10:53:34.855541] Unpacked WAR file contents: ~/Desktop/Pentest/Python/ABPTTS/tomcat_walthrough/war
```

可以看到在当前目录下生成了一个 `tomcat_walkthrough` 文件夹，其中包含所有 ABPTTS 支持的服务端脚本（JSP、WAR、ASPX 等，但暂不支持 PHP）和对应的配置文件。