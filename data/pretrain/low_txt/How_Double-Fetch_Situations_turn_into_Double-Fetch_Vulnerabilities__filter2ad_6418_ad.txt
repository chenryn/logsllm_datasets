### Further Analysis of Double-Fetch Bugs

**Summary of Findings:**
- Out of the 90 candidates, 57 (63%) were related to Linux drivers. Among these, 22 (73%) were size checking-related, 9 (82%) were type selection-related, and 19 (61%) were shallow copy-related.

**Table 1: Basic Double Fetch Analysis Results**

| Category         | Size Checking | Type Selection | Shallow Copy | Other | Total |
|------------------|---------------|----------------|--------------|-------|-------|
| True Bugs        | 30            | 11             | 31           | 18    | 90    |
| In Drivers       | 73%           | 82%            | 61%          | 39%   | 63%   |
| Kernel Reported  | 22 (33%)      | 9 (12%)        | 19 (34%)     | 7 (20%) | 57 (100%) |

**Table 2: Refined Double-Fetch Bug Detection Results**

| Type | Linux 4.5 | Android 6.0.1 | FreeBSD | Total |
|------|-----------|---------------|---------|-------|
| Files | 39,906    | 35,313        | 32,830  | -     |
| True Bugs | 5         | 3             | 0       | -     |
| Files | 53        | 48            | 16      | -     |
| Size Check. | 23       | 18            | 8       | -     |
| Type Sel. | 6        | 6             | 3       | -     |

**Key Observations:**
- We identified five previously unknown double-fetch bugs, including four size checking scenarios and one shallow copy scenario, which also falls under the size checking category. Three of these are exploitable vulnerabilities.
- The five bugs have been reported, confirmed by developers, and fixed.
- 57 out of 90 (63%) candidates were driver-related. Specifically, 22 out of 30 (73%) size checking cases, 9 out of 11 (82%) type selection cases, and 19 out of 31 (61%) shallow copy cases occurred in drivers.
- 4 out of 5 (80%) double-fetch bugs found in drivers belong to the size checking category.

**Conclusion:**
- Most double fetches do not cause double-fetch bugs, but they are more likely to occur in drivers.
- Developers must be cautious with size checking, as four out of 22 size checking scenarios in drivers turned out to be double-fetch bugs.

### Analysis of Three Open Source Kernels

We refined our double-fetch pattern and developed a new detection analysis using the Coccinelle engine. We analyzed three popular open source kernels: Linux, Android, and FreeBSD. The results are summarized below.

**Linux Kernel (Version 4.5):**
- Analysis took about 10 minutes and reported 53 candidate files.
- Five true double-fetch bugs were identified, all of which were also found in previous manual analysis.
- 23 candidates were size checking-related, and 6 were type selection-related.

**Android (Version 6.0.1, based on Linux 3.18):**
- Analysis took about 9 minutes and reported 48 candidate files, including 7 that were not in the original Linux kernel reports.
- Three true double-fetch bugs were identified, two of which were shared with the Linux 4.5 report, and one was unique to Android.
- 18 candidates were size checking-related, and 6 were type selection-related.

**FreeBSD:**
- We modified the transfer functions `copy_from_user()` and `__copy_from_user()` to `copyin()` and `copyin_nofault()`.
- Analysis took about 2 minutes and reported 16 files, but none were vulnerable double-fetch bugs.
- 8 candidates were size checking-related, and 3 were type selection-related.
- 5 out of 16 files were benign double fetches, indicating that FreeBSD developers are more aware of and actively prevent double-fetch bugs.

**Comparison:**
- For Linux, only 5 out of the 53 reports were protected by additional checking schemes.
- Our approach focuses on size checking and type selection cases, as the refined pattern matching discards shallow copy cases that cannot cause double-fetch bugs.

### Discussion

**Detected Bugs and Vulnerabilities:**
- We found six double-fetch bugs in total, five of which are previously unknown (CVE-2016-5728, -6130, -6136, -6156, -6480).
- The sixth bug (CVE-2015-1420) is present in the newest Android (version 6.0.1) based on an older Linux kernel (version 3.18), which has been fixed in the mainline Linux kernel since version 4.1.
- Three of the five new bugs are exploitable vulnerabilities (CVE-2016-5728, -6136, -6480).
- Four of the five bugs are in drivers (CVE-2016-5728, -6130, -6156, -6480).
- All bugs have been reported to the Linux kernel maintainers and fixed as of Linux 4.8.

**Comparison with Bochspwn:**
- Bochspwn [14, 13] is the only similar approach for comparison.
- An analysis of Linux 3.5.0 with Bochspwn did not find any double-fetch bugs but generated up to 200KB of double-fetch logs.
- Our approach identified 3 out of the 6 double-fetch bugs (the other 3 were in files not present in Linux 3.5.0).
- Bochspwn's instruction coverage was only 28%, while our approach statically analyzes the complete source code.
- Our approach is more efficient, taking only a few minutes to analyze the entire Linux kernel, compared to Bochspwn's severe runtime overhead.

**Double-Fetch Bug Prevention:**
- **Avoid Header Duplication:** Ensure the second fetch copies only the message body, not the header.
- **Use Consistent Data:** Use data from only one fetch operation to avoid issues.
- **Overwrite Data:** Overwrite the header from the second fetch with the first fetched header.
- **Compare Data:** Compare data from the first and second fetches before use.
- **Synchronize Fetches:** Use synchronization approaches to ensure atomicity.

**Implementation:**
- We implemented the "Compare Data" approach in Coccinelle as an automatic patch, which can detect and fix most size checking double-fetch bugs.