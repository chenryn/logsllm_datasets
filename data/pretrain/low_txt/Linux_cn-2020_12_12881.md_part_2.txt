随着 20 世纪 90 年代的到来，Perl 成为一种适应早期互联网发展潜力的语言。Larry Wall 创造的 Perl 深刻理解了 Web 的本质。

**00:08:40 - Mike Bursell**：
在互联网上，你可以随意搜索并随时创建网页。这是一个全新的美丽世界，让你能够随时随地做这些事情。
**00:08:52 - Saron Yitbarek**：
这位是红帽公司的首席安全架构师 Mike Bursell。Mike 是 90 年代中期发现和使用 Perl 的黑客之一。
**00:09:00 - Mike Bursell**：
对于 Web 开发来说，Perl 是许多人的起点。当时 Java™ 语言尚处于早期阶段，在文本输入输出方面表现不佳。如果你想进行查询并生成页面，Perl 是人们的首选工具。
**00:09:22**：
Perl 非常适合 Web 开发，因为它擅长处理文本，并能利用文本完成其他任务，而这正是 Web 所需要的。
**00:09:31 - Saron Yitbarek**：
值得一提的是，Larry Wall 具有语言学背景，这解释了为什么 Perl 在文本解析方面如此强大。正如 Mike Bursell 所提到的，这一点在早期尤为重要，因为那时 Web 主要是一种基于文本的媒介，人们还没有足够的带宽来处理图像。
**00:09:51 - Mike Bursell**：
Perl 易于使用且易于复制。人们乐于分享，其输出速度也很快，这些都是非常重要的优势。
**00:10:02**：
此外，它还支持管道操作，这让许多人感到熟悉，并且非常容易测试，即使是在离线状态下也是如此。
**00:10:13 - Saron Yitbarek**：
这对那些希望在 Web 世界中重新规划自己生活的系统管理员尤其有用。
**00:10:21 - Mike Bursell**：
Perl 对系统管理员来说是一份真正的礼物。即使在那个年代，如果你执行某些操作，会产生大量日志。管理、分解、搜索这些日志，并以不同方式展示它们，或处理任何大型文本语料库（主要是日志），甚至调试它们，都变得非常方便。除非你愿意在命令行中使用 `grep`、`sed` 和 `ed` 等工具，否则你会感到非常痛苦。而 Perl 正好可以很好地处理这些问题。
**00:10:55 - Saron Yitbarek**：
到 90 年代后期，Perl 5 已经拥有了一个庞大的用户群体。与 Fortran 和 C 这些依赖于庞大且昂贵硬件的老语言不同，Perl 更具生命力，也更容易移植。在一个硬件成本急剧下降的世界里，Perl 的设计使其蓬勃发展，使新程序员能够快速轻松地工作。这是因为 Larry Wall 通过牺牲 CPU 和内存的需求，使得 Perl 语法更加人性化。所有这些因素结合在一起，使 Perl 成为新开发社区非常受欢迎的语言。
**00:11:36 - Mike Bursell**：
在一个不断壮大的社区中，你可以与其他人交流讨论。PerlMonks 论坛就是一个很好的例子，那里是一个了解最新动态的好地方。
**00:11:50 - Saron Yitbarek**：
这个社区确实拥有 Web 能提供的最好资源。他们发现了一个巨大的软件模块库——CPAN，这是系统管理员非常喜欢的一个存储库。它给 Perl 带来了更多的灵活性，让许多人可以部署少数编程大师编写的代码。
**00:12:15 - Mike Bursell**：
CPAN 提供了大量的库，几乎可以满足你所有的需求。如果你找不到所需的库，只需提出请求，就会有人帮你编写。
**00:12:21 - Saron Yitbarek**：
Mike Bursell 是红帽公司的首席安全架构师。
**00:12:28 - Saron Yitbarek**：
由于 Perl 是免费的，得到了不断增长的模块库的支持，具有可移植性，并且拥有一个蓬勃发展的社区，一切看起来都非常美好。Perl 在 90 年代末期的 Web 开发中占据了主导地位。然而，就在 90 年代即将结束的时候，互联网的发展前景再次发生了变化，时代迎来了一个重大转折。
**00:12:57 - Alan Greenspan**：
但我们如何知道非理性繁荣何时已经过度推高了资产价值，从而导致意料之外的长期经济收缩？
**00:13:12 - Saron Yitbarek**：
“非理性繁荣”是时任美联储主席 Alan Greenspan 在 1996 年对美国企业协会发表的讲话。他这句话是对 90 年代网络泡沫的警告。所有早期使用 Perl 的 Web 开发人员都在这个泡沫中乘风破浪，但正如 Greenspan 所预测的那样，泡沫在 2000 年破裂了。
**00:14:11 - Conor Myhrvold**:
大家好，我是 Conor Myhrvold。我从事编程已有五六年的时间，目前在 Uber 工作。
**00:14:20 - Saron Yitbarek**：
在 2000 年代初，当 Conor 还在高中时，Perl 仍然非常重要。但他逐渐意识到另一种竞争语言——Python。
**00:14:31 - Conor Myhrvold**：
Python 旨在成为一种更结构化的语言，每种任务都有明确的实现方式。相比之下，Perl 喜欢提供多种方法来完成同一件事，这让很多初学者感到困惑。
**00:14:49 - Saron Yitbarek**：
Perl 有一句座右铭：“实现它的方法不止一种。”而 Python 的理念则相反，它为每个问题提供一个明确的解决方案，这意味着查看别人的 Python 代码很容易；而查看其他人的 Perl 代码可能会令人困惑。Perl 适合作为第三或第四门语言学习，特别是作为一种脚本语言，它是互联网连接的基础。
**00:15:23**：
然而，Python 是一种新手也能深入研究的语言。尽管 Perl 在搜索文本和生物信息学等领域有特定的优势，但 Python 是一种简单通用的语言。Python 逐渐获得了更多信任，成为人们首先想学的语言，这是一件大事。
**00:15:47 - Conor Myhrvold**：
越来越多的人开始上网并学习编程。特别是在与 Perl 相比的情况下，Python 因其结构化特性而受益匪浅。结果是，在一个快速增长的世界里，如果一种语言能获得更多用户的青睐，那么最终将会有更多的教程和资源可供使用。
**00:16:10 - Saron Yitbarek**：
之前提到的 CPAN 是 Perl 用户可以使用的强大中央存储库。这在 90 年代是一大亮点，但 CPAN 的价值也在发生变化。
**00:16:24 - Conor Myhrvold**：
CPAN 不能真正帮助你学习一门语言，因为你只是在“复制粘贴”，并用最少的方式替换你需要的东西。从长远来看，这是一种劣势，因为如果你让人们通过自己进行原始开发来学习如何使用一种编程语言，即使这需要花费更长的时间，他们也会觉得自己投入了更多，并且会更清楚其中的过程。
**00:16:48 - Saron Yitbarek**：
Python 没有像 CPAN 那样的集中式存储库，但对于新千年的开发者来说，在互联网搜索功能如此强大的情况下，这种存储库的价值并不如以前那么重要。
**00:17:05 - Saron Yitbarek**：
最终，Python 拥有了大量的教程，并且现在还有像 GitHub 这样的平台。
**00:17:13 - Conor Myhrvold**：
最终发生的事情是，Perl 拥有的许多优势来自于一个已经过时的时代的网络效应。
**00:17:24 - Saron Yitbarek**：
Conor Myhrvold 是 Uber 的一名工程师。
**00:17:30 - Saron Yitbarek**：
然而，语言的兴衰很少仅由外部力量决定。Perl 的内部问题在于，它在发展过程中似乎遇到了障碍。Python 以有序的方式发布新的迭代版本，而正如我们在本季度第一集中所了解到的，Perl 在 2000 年互联网泡沫破裂之时，开始失去新开发者的青睐。
**00:17:59 - Saron Yitbarek**：
大家都期待着 Perl 6 的发布，人们都很兴奋。他们等啊，等啊，等啊……他们等了 14 年。
**00:18:15 - Elizabeth Mattijsen**：
人们对 Perl 6 提出了大约 300 多项功能需求，其中许多需求实际上是相互排斥的。
**00:18:26 - Saron Yitbarek**：
这是 Elizabeth Mattijsen，她是 Perl 6 的核心开发人员。2000 年，Elizabeth 参加了在蒙特雷举办的 Perl 会议。那时开发者认为 Perl 已经停滞不前，因此 Perl 6 是必要的。Larry Wall 同意了，但他希望 Perl 6 由社区来重写。由于团队合作可能需要更长时间，甚至用了 14 年，这对于开发者来说是一条漫长而艰难的道路。
**00:19:01 - Elizabeth Mattijsen**：
可以说，当前实施的 Perl 6 项目实际上是第三次尝试。