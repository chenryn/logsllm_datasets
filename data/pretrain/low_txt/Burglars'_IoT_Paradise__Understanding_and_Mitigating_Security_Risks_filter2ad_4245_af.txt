以下是经过优化的参考文献列表，使其更加清晰、连贯和专业：

---

**参考文献**

[1] "智能家庭技术"，<https://learnairbnb.com/smart-home-technology/>，2018年，访问日期：2019-01。

[2] "撤销发布和订阅权限"，<https://issues.oasis-open.org/projects/MQTT/issues/MQTT-536?filter=allopenissues>，访问日期：2019-01。

[3] "物联网漏洞利用演示"，<https://sites.google.com/view/attackdemos/>，访问日期：2019-01。

[4] R. A. Light, "Mosquitto: MQTT协议的服务器和客户端实现", *Journal of Open Source Software*，第2卷，第13期，2017年。

[5] "缓解措施演示"，<https://github.com/user-online/mosquitto-defense/tree/master>，访问日期：2019-01。

[6] AWS, "物联网客户成功案例"，<https://aws.amazon.com/solutions/case-studies/iot/>，访问日期：2019-01。

[7] T. Inc., "我们已经为93,000多家制造商和品牌提供了一站式物联网服务"，<https://en.tuya.com/cooperation>，访问日期：2019-01。

[8] "发布-订阅模式"，<https://en.wikipedia.org/wiki/Publish-subscribe_pattern>，访问日期：2019-07。

[9] OASIS, "MQTT版本5.0 - 候选OASIS标准01"，<https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html>，2018年，访问日期：2019-01。

[10] "OSI模型"，<https://en.wikipedia.org/wiki/OSI_model>，访问日期：2019-07。

[11] IETF, "WebSocket协议"，<https://tools.ietf.org/html/rfc6455>，2011年，访问日期：2019-01。

[12] "传输层安全"，<https://en.wikipedia.org/wiki/Transport_Layer_Security>，访问日期：2019-07。

[13] "单点登录"，<https://en.wikipedia.org/wiki/Single_sign-on>，访问日期：2019-07。

[14] "Amazon Cognito"，<https://aws.amazon.com/cognito/>，访问日期：2019-05。

[15] "客户端认证的TLS握手"，<https://en.wikipedia.org/wiki/Transport_Layer_Security#Client-authenticated_TLS_handshake>，访问日期：2019-01。

[16] "百度在中国公共云服务提供商排名中升至前五"，<https://www.bloomberg.com/press-releases/2019-05-08/baidu-rises-to-top-5-in-idc-ranking-of-public-cloud-services-providers-in-china>，访问日期：2019-07。

[17] "全球前500个网站"，<https://www.alexa.com/topsites>，访问日期：2019-07。

[18] "Eclipse Mosquitto - 开源MQTT代理"，<https://github.com/eclipse/mosquitto/>，访问日期：2019-07。

[19] "Home Assistant MQTT代理"，<https://www.home-assistant.io/docs/mqtt/broker#embedded-broker/>，访问日期：2019-06。

[20] "MQTT 2.x架构"，<https://www.openhab.org/blog/2018-12-16-mqtt-arrives-in-the-modern-openhab-2-x-architecture.html>，访问日期：2019-06。

[21] W. Zhou, Y. Jia, Y. Yao, L. Zhu, L. Guan, Y. Mao, P. Liu, and Y. Zhang, "发现并理解智能家居平台上的物联网设备、移动应用和云端交互中的安全风险"，*28th USENIX Security Symposium (USENIX Security 19)*，Santa Clara, CA: USENIX Association, Aug. 2019, pp. 1133–1150。在线可访问：<https://www.usenix.org/conference/usenixsecurity19/presentation/zhou>

[22] J. Chen, C. Zuo, W. Diao, S. Dong, Q. Zhao, M. Sun, Z. Lin, Y. Zhang, and K. Zhang, "你的物联网并不属于我：关于物联网设备与用户的远程绑定"，*2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)*，IEEE, 2019, pp. 222–233。

[23] IFTTT, "IFTTT"，<https://ifttt.com/>，访问日期：2019-01。

[24] "涂鸦智能"，<https://en.tuya.com/company>，访问日期：2019-01。

[25] "MQTT客户端标识符"，<https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.1.0/com.ibm.mq.doc/tt60310.htm>，访问日期：2019-06。

[26] "MQTT安全基础：高级身份验证机制"，<https://www.hivemq.com/blog/mqtt-security-fundamentals-advanced-authentication-mechanisms/>，访问日期：2019-06。

[27] "使用MQTT进行设备集成"，<https://cumulocity.com/guides/device-sdk/mqtt/>，访问日期：2019-06。

[28] "序列号"，<https://en.wikipedia.org/wiki/Serial_number#Applications_of_serial_numbering>，访问日期：2019-06。

[29] "解码苹果序列号背后的含义"，<https://beetstech.com/blog/decode-meaning-behind-apple-serial-number>，访问日期：2019-06。

[30] "苏宁在CES上展示"，<https://news.suning.com/wtoutiao/witem21548553411.html>，访问日期：2019-07。

[31] "财富全球500强"，<https://fortune.com/global500/suning-commerce-group/>，访问日期：2019-07。

[32] "苏宁智能家居"，<https://smarthome.suning.com/shop_index.html>，访问日期：2019-01。

[33] "了解MQTT"，<https://developer.ibm.com/articles/iot-mqtt-why-good-for-iot>，访问日期：2019-01。

[34] "2018年物联网平台供应商比较"，<https://iot-analytics.com/product/iot-platforms-vendor-comparison-2018>，访问日期：2019-01。

[35] M. Antonakakis, T. April, M. Bailey, M. Bernhard, E. Bursztein, J. Cochran, Z. Durumeric, J. A. Halderman, L. Invernizzi, M. Kallitsis, D. Kumar, C. Lever, Z. Ma, J. Mason, D. Menscher, C. Seaman, N. Sullivan, K. Thomas, and Y. Zhou, "理解Mirai僵尸网络"，*26th USENIX Security Symposium (USENIX Security 17)*，Vancouver, BC: USENIX Association, 2017, pp. 1093–1110。在线可访问：<https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/antonakakis>

[36] "IBM物联网平台"，<https://www.ibm.com/internet-of-things/solutions/iot-platform>，访问日期：2019-01。

[37] "阿里云物联网平台"，<https://www.alibabacloud.com/product/iot>，访问日期：2019-01。

[38] "AWS IoT策略"，<https://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html>，访问日期：2019-07。

[39] X. Bai, L. Xing, N. Zhang, X. Wang, X. Liao, T. Li, and S.-M. Hu, "保持安全且未准备好：理解和缓解Apple Zeroconf的安全风险"，2016年。

[40] "OAuth"，<https://en.wikipedia.org/wiki/OAuth>。

[41] J. Park and R. Sandhu, "UCON ABC使用控制模型"，*ACM Transactions on Information and System Security (TISSEC)*，第7卷，第1期，pp. 128–174，2004年。

[42] "统一资源标识符"，<https://en.wikipedia.org/wiki/Uniform_Resource_Identifier>，访问日期：2019-01。

[43] "mosquitto.conf手册页"，<https://mosquitto.org/man/mosquitto-conf-5.html>，访问日期：2019-05。

[44] "开始使用ARTIK云服务"，<https://developer.artik.cloud/>，访问日期：2019-01。

[45] "受限应用协议（CoAP）"，<https://tools.ietf.org/html/rfc7252/>，访问日期：2019-01。

[46] "高级消息队列协议"，<https://www.amqp.org/>，访问日期：2019-01。

[47] H. Liu, C. Li, X. Jin, J. Li, Y. Zhang, and D. Gu, "智能解决方案，薄弱保护：开发和部署智能家居设备中的安全和隐私问题的经验研究"，*2017 Workshop on Internet of Things Security and Privacy*，New York, NY, USA: ACM, 2017, pp. 13–18。在线可访问：<http://doi.acm.org/10.1145/3139937.3139948>

[48] "通过Alink协议通信"，<https://www.alibabacloud.com/help/doc-detail/90459.htm>，访问日期：2019-01。

[49] Y. Chen, L. Xing, Y. Qin, X. Liao, X. Wang, K. Chen, and W. Zou, "指导中的魔鬼：通过自动文档分析预测支付联合服务中的逻辑漏洞"，*28th USENIX Security Symposium (USENIX Security 19)*，Santa Clara, CA: USENIX Association, Aug. 2019, pp. 747–764。在线可访问：<https://www.usenix.org/conference/usenixsecurity19/presentation/chen-yi>

[50] "线性时序逻辑"，<https://en.wikipedia.org/wiki/Linear_temporal_logic>。

[51] "符号分析实验室"，<http://sal.csl.sri.com/>。

[52] L. Lundgren, "通过MQTT接管世界——后续"，<https://www.blackhat.com/docs/us-17/thursday/us-17-Lundgren-Taking-Over-The-World-Through-Mqtt-Aftermath.pdf>，2017年，访问日期：2019-01。

[53] D. Q. Federico Maggi, Rainer Vosseler, "工业物联网数据骨干的脆弱性：MQTT和CoAP协议中的安全和隐私问题"，<https://documents.trendmicro.com/assets/white_papers/wp-the-fragility-of-industrial-IoTs-data-backbone.pdf?v1>，2018年，访问日期：2019-01。

[54] A. Rizzardi, S. Sicari, D. Miorandi, and A. Coen-Porisini, "AUPS：一种用于物联网的开源认证发布/订阅系统"，*Information Systems*，第62卷，pp. 29–41，2016年。

[55] R. Neisse, G. Steri, and G. Baldini, "物联网安全策略规则的执行"，*Wireless and Mobile Computing, Networking and Communications (WiMob), 2014 IEEE 10th International Conference on*，IEEE, 2014, pp. 165–172。

[56] A. La Marra, F. Martinelli, P. Mori, A. Rizos, and A. Saracino, "在MQTT中引入使用控制"，*Computer Security*，Springer, 2017, pp. 35–43。

[57] A. Niruntasukrat, C. Issariyapat, P. Pongpaibool, K. Meesublak, P. Aiumsupucgul, and A. Panya, "基于MQTT的物联网授权机制"，*Communications Workshops (ICC), 2016 IEEE International Conference on*，IEEE, 2016, pp. 290–295。

[58] Z. B. Celik, G. Tan, and P. D. McDaniel, "IoTGuard：商品化物联网中的安全和安全策略动态执行"，*NDSS*，2019年。

[59] I. Bastys, M. Balliu, and A. Sabelfeld, "如果这样，那么会怎样？：控制物联网应用程序中的流"，*Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security*，ACM, 2018, pp. 1102–1119。

[60] Z. B. Celik, L. Babun, A. K. Sikder, H. Aksu, G. Tan, P. McDaniel, and A. S. Uluagac, "商品化物联网中的敏感信息跟踪"，arXiv预印本arXiv:1802.08307，2018年。

[61] E. Fernandes, J. Jung, and A. Prakash, "新兴智能家居应用程序的安全分析"，*2016 IEEE Symposium on Security and Privacy (SP)*，IEEE, 2016, pp. 636–654。

[62] M. Ambrosin, M. Conti, A. Ibrahim, A.-R. Sadeghi, and M. Schunter, "SCIoT：一种安全且可扩展的端到端物联网设备管理框架"，*European Symposium on Research in Computer Security*，Springer, 2018, pp. 595–617。

[63] W. Zhang, Y. Meng, Y. Liu, X. Zhang, Y. Zhang, and H. Zhu, "Homonit：从加密流量中监控智能家居应用"，*Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security*，ACM, 2018, pp. 1074–1088。

[64] E. Fernandes, A. Rahmati, J. Jung, and A. Prakash, "去中心化的触发动作完整性"，*Proc. Network and Distributed Systems Symposium (NDSS)*，2018, pp. 18–21。

[65] Y. Tian, N. Zhang, Y.-H. Lin, X. Wang, B. Ur, X. Guo, and P. Tague, "SmartAuth：以用户为中心的物联网授权"，*26th USENIX Security Symposium (USENIX Security 17)*，Vancouver, BC: USENIX Association, 2017, pp. 361–378。在线可访问：<https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/tian>

[66] Y. J. Jia, Q. A. Chen, S. Wang, A. Rahmati, E. Fernandes, Z. M. Mao, A. Prakash, and S. J. University, "Contexlot：为应用化的物联网平台提供上下文完整性"，*NDSS*，2017年。

[67] E. Fernandes, J. Paupore, A. Rahmati, D. Simionato, M. Conti, and A. Prakash, "FlowFence：适用于新兴物联网应用框架的实际数据保护"，*USENIX Security Symposium*，2016, pp. 531–548。

[68] Q. Wang, W. U. Hassan, A. Bates, and C. Gunter, "互联网上的恐惧和日志"，*ISOC NDSS*，2018年。

[69] AWS, "非IP设备的物联网"，<https://aws.amazon.com/blogs/iot/iot-for-non-ip-devices-2/>，访问日期：2019-01。

[70] "GitHub"，<https://github.com/>，访问日期：2019-01。

[71] AWS, "IAM和STS条件键"，<https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition_keys.html>，访问日期：2019-01。

---

**附录**

**A. 从泄露的MQTT消息推断用户日常行为**

图5显示了空调三周的状态，其中红色点表示空调加热的时间。从图表中可以看出，潜在攻击者可以推断出该空调通常在工作日早上6:45左右启动，在周末早上7:45左右启动，并在晚上10点到午夜之间停止运行，这可能表明用户大致起床和睡觉的时间。此外，有趣的是，用户在大多数日子里似乎都在家，除了第二周的星期四以及从第一个星期六到第二个星期五之间的中午12点到下午4点——在这段时间内空调没有运行。

**图5. 用户空调的真实状态**

**B. 误导性的开发指南**

在AWS IoT上，设备制造商可以自定义AWS IoT策略（一个安全策略模板，在运行时填充并分配给每个客户端），以限制客户端的ClientId，从而缓解我们的基于ClientId的攻击（见第III-C节）。然而，由于我们在AWS开发者文档和其他流行的物联网开发指南中发现推荐的安全策略示例也容易受到我们的攻击，因此设备制造商不清楚如何安全地做到这一点。此外，我们在GitHub上找到的大部分由开发者创建的AWS IoT安全策略也容易受到我们的攻击，如下所述。

通过手动检查AWS的官方开发者指南和博客，我们收集了AWS提供的38个示例/最佳实践AWS IoT策略。不幸的是，AWS从未建议限制ClientId，而且我们发现的38个推荐策略中有26个是易受攻击的。例如，清单1展示了来自AWS官方博客[78]的一个IoT策略，其中Resource字段指定了允许客户端连接时使用的ClientId。在这个模板式的策略中，变量`${iot:ClientId}`将在运行时被填充为客户端实际声称的ClientId。此模板功能可以帮助设备制造商避免在其IoT策略中硬编码特定的ClientId，从而可以在运行时应用于广泛的客户端。然而，这种策略并未限制客户端可以使用的ClientId，因此易受我们的攻击。我们将这些误导性和不安全的IoT策略报告给了AWS，他们承认了这个问题。

为了了解AWS提供的有问题的策略示例是否确实误导了野外的IoT开发者，我们在GitHub[79]上找到了89个包含AWS IoT策略的开源项目，并评估了它们的安全质量。不幸的是，85.4%（76/89）的项目包含了一个易受我们攻击的IoT策略。

**清单1. 易受攻击的AWS IoT策略示例**

```json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": ["iot:Connect"],
      "Resource": ["arn:aws:iot:us-east-1:000000000000:client/${iot:ClientId}"]
    }
  ]
}
```

进一步，虽然AWS IoT策略支持指定客户端允许的ClientId，但在实践中，如何正确定义一个安全的策略对设备制造商和开发者来说仍然不清楚。在我们的研究中，我们彻底检查了AWS开发者指南，并构建了一个允许制造商缓解我们攻击的IoT策略，如清单2所示。具体来说，当这个策略在运行时被填充时，其变量`${cognito-identity.amazonaws.com:sub}`将被实例化为客户的身份——客户的平台层身份。实际上，这限制了客户端的ClientId必须与其经过身份验证的平台层身份相同，从而挫败了我们的攻击。然而，这个策略有一个可用性问题，很可能会阻止其广泛采用。具体来说，一个物联网用户往往有多个客户端（例如，在她的手机、平板电脑和笔记本电脑上等），所有这些客户端都必须呈现相同的ClientId——用户的Cognito ID——因此会导致彼此离线（见第III-C节中的冲突ClientId）。为了有效缓解AWS IoT上的安全风险，我们设想了一个符合第V-A节的解决方案：客户端可以使用的ClientId必须以其平台层身份开头（带有一个后缀来区分不同的合法客户端）。

**清单2. 安全的AWS IoT策略示例**

```json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "iot:Connect"
      ],
      "Resource": [
        "arn:aws:iot:*:*:client/${cognito-identity.amazonaws.com:sub}"
      ]
    }
  ]
}
```

---

希望这些修改能使您的参考文献列表更加清晰、连贯和专业。如果有任何其他需求或进一步的修改，请随时告知。