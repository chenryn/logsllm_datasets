### References

1. **Giuseppe Ateniese, Randal Burns, Reza Curtmola, Joseph Herring, Lea Kissner, Zachary Peterson, and Dawn Song. 2007. Provable Data Possession at Untrusted Stores. In Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS).**

2. **Alysson Neves Bessani, Miguel P. Correia, Bruno Quaresma, Fernando André, and Paulo Sousa. 2011. DepSky: Dependable and Secure Storage in a Cloud-of-Clouds. In Proceedings of the 6th European Conference on Computer Systems (EuroSys).**

3. **Kevin D. Bowers, Ari Juels, and Alina Oprea. 2009. HAIL: A High-Availability and Integrity Layer for Cloud Storage. In Proceedings of the 16th ACM Conference on Computer and Communications Security (CCS).**

4. **Kevin R.B. Butler, Stephen McLaughlin, and Patrick D. McDaniel. 2008. Rootkit-Resistant Disks. In Proceedings of the 15th ACM Conference on Computer and Communications Security (CCS).**

5. **Brad Calder, Ju Wang, Aaron Ogus, Niranjan Nilakantan, Arild Skjolsvold, Sam McKelvie, Yikang Xu, Shashwat Srivastav, Jiesheng Wu, Huseyin Simitci, Jaidev Haridas, Chakravarthy Uddaraju, Hemal Khatri, Andrew Edwards, Vaman Bedekar, Shane Mainali, Rafay Abbasi, Arpit Agarwal, Mian Fahim ul Haq, Muhammad Ikram ul Haq, Deepali Bhardwaj, Sowmya Dayanand, Anitha Adusumilli, Marvin McNett, Sriram Sankaran, Kavitha Manivannan, and Leonidas Rigas. 2011. Windows Azure Storage: A Highly Available Cloud Storage Service with Strong Consistency. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP).**

6. **Andrea Continella, Alessandro Guagnelli, Giovanni Zingaro, Giulio De Pasquale, Alessandro Barenghi, Stefano Zanero, and Federico Maggi. 2016. ShieldFS: A Self-Healing, Ransomware-Aware Filesystem. In Proceedings of the 32nd Annual Conference on Computer Security Applications (ACSAC).**

7. **Ariel J. Feldman, William P. Zeller, Michael J. Freedman, and Edward W. Felten. 2010. SPORC: Group Collaboration Using Untrusted Cloud Resources. In Proceedings of the 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI).**

8. **Scott Ferguson and Doug Olenick. 2021. FBI: DarkSide Ransomware Used in Colonial Pipeline Attack. https://www.bankinfosecurity.com/fbi-darkside-ransomware-used-in-colonial-pipeline-attack-a-16555 (last accessed: 06/18/2021).**

9. **A. Gheorghe, C. Crecana, C. Negru, F. Pop, and C. Dobre. 2019. Decentralized Storage System for Edge Computing. In Proceedings of the 18th International Symposium on Parallel and Distributed Computing (ISPDC).**

10. **Eu-Jin Goh, Hovav Shacham, Nagendra Modadugu, and Dan Boneh. 2003. SiRiUS: Securing Remote Untrusted Storage. In Proceedings of the 10th Symposium on Network and Distributed System Security (NDSS).**

11. **José Antonio Gómez-Hernández, L. Álvarez-González, and Pedro García-Teodoro. 2018. R-Locker: Thwarting Ransomware Action Through a Honeyfile-Based Approach. Computer Security 73 (2018), 389–398.**

12. **Jonathan Greig. 2020. Ukrainian Police Partner with US, South Korea for Raid on Clop Ransomware Members. https://www.zdnet.com/article/ukranian-police-partner-with-us-south-korea-for-raid-on-clop-ransomware-members/ (last accessed: 06/18/2021).**

13. **Harshit Gupta and Umakishore Ramachandran. 2018. FogStore: A Geo-Distributed Key-Value Store Guaranteeing Low Latency for Strongly Consistent Access. In Proceedings of the 12th ACM International Conference on Distributed and Event-Based Systems (DEBS).**

14. **Manabu Hirano and Ryotaro Kobayashi. 2019. Machine Learning Based Ransomware Detection Using Storage Access Patterns Obtained From Live-Forensic Hypervisor. In Proceedings of the 6th International Conference on Internet of Things: Systems, Management and Security (IOTSMS).**

15. **Jian Huang, Jun Xu, Xinyu Xing, Peng Liu, and Moinuddin K. Qureshi. 2017. FlashGuard: Leveraging Intrinsic Flash Properties to Defend Against Encryption Ransomware. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security (CCS).**

16. **Ari Juels and Burton S. Kaliski Jr. 2007. PORs: Proofs of Retrievability for Large Files. In Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS).**

17. **Mahesh Kallahalla, Erik Riedel, Ram Swaminathan, Qian Wang, and Kevin Fu. 2003. Plutus: Scalable Secure File Sharing on Untrusted Storage. In Proceedings of the 2nd USENIX Conference on File and Storage Technologies (FAST).**

18. **Amin Kharraz, Sajjad Arshad, Collin Mulliner, William Robertson, and Engin Kirda. 2016. UNVEIL: A Large-Scale, Automated Approach to Detecting Ransomware. In Proceedings of the 25th USENIX Conference on Security Symposium (SEC).**

19. **Amin Kharraz and E. Kirda. 2017. Redemption: Real-Time Protection Against Ransomware at End-Hosts. In Proceedings of the 20th International Symposium on Research in Attacks, Intrusions, and Defenses (RAID).**

20. **Eugene Kolodenker, William Koch, Gianluca Stringhini, and Manuel Egele. 2017. PayBreak: Defense Against Cryptographic Ransomware. In Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security (ASIACCS).**

21. **Michael Kozuch and M. Satyanarayanan. 2002. Internet Suspend/Resume. In Proceedings of the 4th IEEE Workshop on Mobile Computing Systems and Applications (WMCSA).**

22. **Robert Krahn, Bohdan Trach, Anjo Vahldiek-Oberwagner, Thomas Knauth, Pramod Bhatotia, and Christof Fetzer. 2018. Pesos: Policy Enhanced Secure Object Store. In Proceedings of the 13th European Conference on Computer Systems (EuroSys).**

23. **Jinyuan Li, Maxwell Krohn, David Mazières, and Dennis Shasha. 2004. Secure Untrusted Data Repository (SUNDR). In Proceedings of the 6th USENIX Symposium on Operating Systems Design and Implementation (OSDI).**

24. **Prince Mahajan, Srinath T. V. Setty, Sangmin Lee, Allen Clement, Lorenzo Alvisi, Michael Dahlin, and Michael Walfish. 2010. Depot: Cloud Storage with Minimal Trust. In Proceedings of the 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI).**

25. **Fior Markets. 2021. Global Virtual Desktop Infrastructure Market Is Expected to Reach USD 38.41 Billion by 2027: Fior Markets. https://www.globenewswire.com/news-release/2021/02/05/2170486/0/en/Global-Virtual-Desktop-Infrastructure-Market-Is-Expected-to-Reach-USD-38-41-billion-by-2027-Fior-Markets.html (last accessed: 06/18/2021).**

26. **Shagufta Mehnaz, Anand Mudgerikar, and Elisa Bertino. 2018. RWGuard: A Real-Time Detection System Against Cryptographic Ransomware. In Proceedings of the 21st International Symposium on Research in Attacks, Intrusions, and Defenses (RAID).**

27. **Daniel Morato, Eduardo Berrueta, Eduardo Magaña, and Mikel Izal. 2018. Ransomware Early Detection by the Analysis of File Sharing Traffic. Journal of Network and Computer Applications 124 (2018), 14–32.**

28. **Constantine Sapuntzakis, David Brumley, Ramesh Chandra, Nickolai Zeldovich, Jim Chow, Monica S. Lam, and Mendel Rosenblum. 2003. Virtual Appliances for Deploying and Maintaining Software. In Proceedings of the 16th Large Installation Systems Administration Conference (LISA).**

29. **Mahadev Satyanarayanan, Thomas Eiszler, Jan Harkes, Haithem Turki, and Ziqiang Feng. 2020. Edge Computing for Legacy Applications. IEEE Pervasive Computing 19, 4 (2020), 19–28.**

30. **Nolen Scaife, Henry Carter, Patrick Traynor, and Kevin R. B. Butler. 2016. CryptoLock (and Drop It): Stopping Ransomware Attacks on User Data. In Proceedings of the 36th International Conference on Distributed Computing Systems (ICDCS).**

31. **Help Net Security. 2020. The Ransomware Plague Cost the World Over $1 Billion. https://www.helpnetsecurity.com/2020/11/26/ransomware-cost-2020/ (last accessed: 06/18/2021).**

32. **Daniele Sgandurra, Luis Muñoz-González, Rabih Mohsen, and Emil C. Lupu. 2016. Automated Dynamic Analysis of Ransomware: Benefits, Limitations and Use for Detection. CoRR abs/1609.03020 (2016).**

33. **SNIR BEN SHIMOL. 2021. How Dropbox Sacrifices User Privacy for Cost Savings. https://www.varonis.com/blog/darkside-ransomware/ (last accessed: 06/18/2021).**

34. **Alexander Shraer, Christian Cachin, Asaf Cidon, Idit Keidar, Yan Michalevsky, and Dani Shaket. 2010. Venus: Verification for Untrusted Cloud Storage. In Proceedings of the 2010 ACM Workshop on Cloud Computing Security Workshop (CCSW).**

35. **John D. Strunk, Garth R. Goodson, Michael L. Scheinholtz, Craig A. N. Soules, and Gregory R. Ganger. 2000. Self-Securing Storage: Protecting Data in Compromised Systems. In Proceedings of the 4th Conference on Symposium on Operating System Design and Implementation (OSDI).**

36. **Pedro Tavares. 2020. Ragnar Locker Malware: What It Is, How It Works and How to Prevent It | Malware Spotlight. https://resources.infosecinstitute.com/topic/ragnar-locker-malware-what-it-is-how-it-works-and-how-to-prevent-it-malware-spotlight/ (last accessed: 06/18/2021).**

37. **Animesh Trivedi, Lin Wang, Henri E. Bal, and Alexandru Iosup. 2020. Sharing and Caring of Data at the Edge. In Proceedings of the 3rd USENIX Workshop on Hot Topics in Edge Computing (HotEdge).**

38. **Marten van Dijk, Ari Juels, Alina Oprea, Ronald L. Rivest, Emil Stefanov, and Nikos Triandopoulos. 2012. Hourglass Schemes: How to Prove that Cloud Files Are Encrypted. In Proceedings of the 19th ACM Conference on Computer and Communications Security (CCS).**

39. **Yang Wang, Manos Kapritsos, Zuocheng Ren, Prince Mahajan, Jeevitha Kirubanandam, Lorenzo Alvisi, and Mike Dahlin. 2013. Robustness in the Salus Scalable Block Store. In Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation (NSDI).**

40. **A. Young and Moti Yung. 1996. Cryptovirology: Extortion-Based Security Threats and Countermeasures. In Proceedings of the 1996 IEEE Symposium on Security and Privacy.**

41. **Lianying Zhao and Mohammad Mannan. 2019. TEE-Aided Write Protection Against Privileged Data Tampering. CoRR abs/1905.10723 (2019).**

### Correctness Proof

**Definition:**
A block device is defined as coherent if and only if there exists a consistent, totally-ordered write sequence that transitions the state of the block device.

**Theorem 1:**
Under normal circumstances with no failures, Rocky maintains a coherent block device.

**Proof:**
By contradiction, suppose a Rocky block device, \( B \), is not coherent after applying a state mutation \( M_i \) where \( 0 < i < n \). Since \( B \) is not coherent after applying \( M_i \), \( M_i \) must contain a write sequence \( W_i \) that deviates from a consistent, totally-ordered write sequence \( W'_i \) contained in \( M'_i \). Step 2 of the Protocol for Mutation Snapshot Upload (PMSUP) ensures that \( o_i \) uploads \( M'_i \) to its Endpoint Backup Storage System (EBSS) and Cloud Backup Storage System (CBSS).

There are two possibilities for \( B \) to apply mutation snapshots:
1. At Step 4 of the Protocol for Periodic Pull (PPP), \( B \) downloads \( M'_i \) to its Recovery Backup Storage (RBS).
2. While \( B \) is the owner, it fetches blocks in \( M'_i \) from CBSS on demand.

By construction, for epoch \( e_i \), \( B \) always applies blocks written by \( W'_i \) but never by \( W_i \), which contradicts our assumption. Thus, there is no Rocky block device that is not coherent.
□

**Theorem 2:**
Assuming an anti-malware correctly pinpoints and notifies the epoch during which the tampering attack has first begun, Rocky can recover from tampering attacks by restoring a coherent block device that is not tampered.

**Proof:**
Let us call a Rocky block device \( B \) which has the initial state \( S_0 \). Suppose \( B \)'s state changes from \( S_{i-1} \) to \( S_i \) after applying the mutation snapshot \( M_i \) containing writes that tamper user data occurred during the epoch \( e_i \). The anti-malware then notifies Rocky endpoints with the epoch \( e_i \) to indicate when tampering attacks began. Rocky runs the tampering attack recovery procedure and rolls back \( B \)'s state to become \( S_{i-1} \).

By contradiction, suppose \( S_{i-1} \) is tampered. This means there must exist at least one mutation snapshot \( M_t \) that tampered the block device state from \( S_{t-1} \) to \( S_t \) for \( 0 \le t \le i - 1 \). This implies there was an epoch \( e_t \) earlier than \( e_i \) that the anti-malware should have notified as the first epoch when tampering attacks began. Therefore, it contradicts our assumption about the anti-malware.
□

**Theorem 3:**
Rocky can recover from failures with a coherent block device.

**Proof:**
By contradiction, suppose a Rocky block device, \( B \), becomes not coherent during the failure recovery right after applying a mutation snapshot \( M_i \). That is, \( W_1, \ldots, W_{i-1}, W_i \) applied to \( B \) is not a consistent, totally-ordered write sequence. At Step 2 of the Initial Recovery Procedure (IRP), \( l_2 \) uploads EBSS that contains a consistent, totally-ordered write sequence up to \( e_2 \) as a new CBSS to the cloud storage. Moreover, at Step 3 of the Failure Recovery Procedure (FRP), endpoints upload mutation snapshots which collectively contain a consistent, totally-ordered write sequence from \( e_2 + 1 \) to \( e_n \). This contradicts our assumption.
□

**Theorem 4:**
A recovered Rocky block device is the latest coherent block device recoverable with the given recovery committee.

**Proof:**
By contradiction, suppose \( e_x \) cannot be the maximum epoch in the longest prefix of epochs starting at \( e_2 \). However, Step 3 of the IRP ensures that every contiguous subsequent epoch starting at \( e_2 \) is in \( L \), contradicting our assumption.
□