### 6. Recommendations
We recommend setting the B-count to a value between 196 and 256, depending on the specific application context.

### 7. Limitations and Future Work
The P-scale used in this work is specifically designed for 1280×720 HD videos from commodity IoT cameras. Devices with larger or smaller frame sizes should use more or less intensive P-scales, respectively, to manage the privacy-video quality trade-off at their own resolution level. We plan to further investigate other resolution cases in future work.

Pinto currently supports only MJPEG format. Support for various formats can be achieved through additional conversions by devices or by a trusted server, which would decode and verify p_videos (not the original videos) on behalf of requesters and re-encode them for video sharing. We intend to explore the use of video sharing infrastructure for different video formats.

### 8. Related Work
Extensive research has been conducted on visual privacy protection and forgery detection/prevention (video authentication), but little work has focused on both, especially for low-end cameras.

Most prior works on visual privacy protection rely on specialized hardware or powerful back-end servers to process video streams from camera devices. For example, authors in [26, 31, 40, 50, 52, 54] demonstrate high-accuracy face detection at a frame rate of 16–30 fps (mostly on 640×480 frames) using dedicated, custom FPGA-based hardware. However, such robust object detection is not feasible for real-time operations in commodity devices [24]. Therefore, many researchers have turned to server-side processing. Respectful Cameras [60] use Panasonic's security cameras to transmit MJPEG streams to back-end servers (3.4 GHz CPUs) for real-time video processing. They also rely on visual markers for object tracking, requiring people to wear colored markers such as hats or vests, and their faces will be blurred. Cardea [61] uses Samsung Galaxy Note 4 as client cameras and connects them via WiFi to a server (3.60 GHz CPU) for real-time recognition.

Vigil [69] partitions video processing between edge computing nodes co-located with cameras and cloud servers via frame prioritization. While effective for real-time monitoring, its frame sampling approach is not suitable for real-time frame-by-frame blurring. ViewMap [46], originally designed for the privacy of users sharing videos, is one of the few systems that perform real-time blurring at the camera level, but their dashcam videos are only at 5–7 fps. Pinto complements ViewMap, enabling dashcams to produce both privacy-protected and high-frame-rate videos.

Existing forgery detection techniques aim to verify whether original images have been altered. These techniques can be broadly categorized into two types: reference-based analysis and post-analysis. Reference-based methods, such as digital watermarking [57, 65] and fingerprinting [47, 59], require prior image-processing results on original materials. The drawback of this approach, when applied to video surveillance, is that a watermark or fingerprint must be inserted at the time of recording, limiting its use to specially equipped, resourceful cameras. Post-analysis techniques include SVM classifiers [44, 45], pixel-based [30, 34], partition-based [66, 68], format-based [32, 49], and geometric-based analysis [42]. While these methods are adequate for detecting image alterations, their performance on post-processed, privacy-protected videos has not been proven. Additionally, they do not verify the time of recording. Conventional hash-based, time-stamped signatures upon recording become invalid after post-blurring.

Some research efforts aim to estimate the "time of day" of images without timestamps [43, 48] by leveraging shadows and sun positions. While creative, these methods are only applicable to outdoor, daytime videos.

### 9. Conclusion
Pinto is a video privacy solution for low-end IoT cameras. The key insights are: (i) performing fast, lightweight pixelation in real time while deferring CPU-intensive object detection until necessary for post-processing; and (ii) leveraging pixelation for both privacy protection and forgery prevention via streamlined block-level operations. We have integrated Pinto into security cams, dashcams, and drone cams, all of which successfully produce privacy-protected, forgery-proof videos at 17–24 fps. Pinto is widely applicable to various IoT cameras, such as wearable cams and sensing cams for self-driving cars. In a broader scope, our solution addresses the problem of privacy-invading, forgery-prone recordings, a key barrier to video sharing today, while maintaining video quality under limited device capabilities.

### Acknowledgments
We sincerely thank Dr. Brian S. Choi for his thoughtful discussions throughout the development of this work. We also thank the anonymous reviewers for their insightful comments and suggestions, which improved this paper. This work is supported by the National Research Foundation of Korea (Grant No.: NRF-2017R1C1B2010890) and by the Samsung Research Funding Center for Future Technology (Project No.: SRFC-IT1402-01).

### References
[References listed here]

This version of the text is more structured, clear, and professional, with improved coherence and flow.