### QoIA Adaptor and State Trustworthiness

The QoIA Adaptor is designed to map Quality of Intrusion Awareness (QoIA) requirements associated with services to a set of state trustworthiness requirements. Additionally, it maintains differential state trustworthiness. The adaptation operations performed by the QoIA Adaptor are determined based on the discrepancy between the inferred set of state trustworthiness measurements and the mapped set of state trustworthiness requirements derived from user QoIA requirements.

### Challenges in Developing Architecture V

Developing an Architecture V system presents several key challenges:

1. **Differential Delivery of QoIA Services:**
   - While QoIA requirements for a service can be straightforwardly specified based on the service's results and outputs, delivering a set of QoIA services differentially is challenging.
   - Our approach is to indirectly deliver QoIA services through differential state trustworthiness maintenance, mapping QoIA requirements to state trustworthiness requirements.
   - Although mapping one service’s QoIA requirements to a set of state trustworthiness requirements based on the service's function is relatively simple, resolving inconsistencies among the different state trustworthiness requirements for shared data objects can be complex.

2. **Maintaining Differential State Trustworthiness:**
   - To maintain differential state trustworthiness, we propose applying different intrusion tolerance controls to different parts of the database.
   - To ensure that one set of intrusion-tolerance controls does not interfere with another, careful design and isolation are necessary.

3. **Ensuring Mapped State Trustworthiness Requirements:**
   - Ensuring that the mapped state trustworthiness requirements on a part of the database can be satisfied in the face of attacks is another challenge.
   - Our solution involves QoIA-aware adaptations, where the set of intrusion-tolerance controls enforced on a part of the database can adapt to changing environments, ensuring that state trustworthiness requirements are met with minimal cost.
   - Accurate measurement of state trustworthiness is crucial but challenging due to incomplete or misleading observations, false negatives, false positives, and detection delays. New techniques, such as statistical approaches, may help infer the true trustworthiness of the database state.

### Conclusion

In this paper, we have presented five architectures for intrusion-tolerant database systems that can be built using Commercial Off-The-Shelf (COTS) components. These architectures highlight the following points:
- A multi-layer, defense-in-depth approach is generally more cost-effective than relying on a single or a few mechanisms like intrusion detection.
- Adaptive intrusion-tolerant mechanisms are usually more cost-effective than pre-programmed ones.
- Service-oriented, intrusion-tolerant database systems are typically more cost-effective than state-oriented ones.

### Future Research Directions

Several exciting future research directions could further improve these architectures:
- **Masking Malicious Transactions:**
  - Malicious transactions might be masked by partially replicated database servers, each executing only a subset of transactions. The key challenge is balancing security and data consistency.
- **Improving Intrusion Detection:**
  - The accuracy and latency of the Intrusion Detector significantly impact the overall cost-effectiveness of an intrusion-tolerant system. It is essential to determine the required performance metrics (false positive rate, false negative rate, and detection latency) to make the system cost-effective.
- **Integration of Intrusion-Tolerance Mechanisms:**
  - Seamless integration of OS-level and transaction-level intrusion-tolerance mechanisms is necessary to build multi-layer, intrusion-tolerant database systems. This requires a thorough study of the relationships between these layers, as transaction-level approaches can be useful for recovering from OS-level data corruptions.

### Acknowledgements

This work is supported by the Defense Advanced Research Projects Agency (DARPA) and Air Force Research Laboratory, Air Force Material Command, USAF, under agreement number F30602-00-2-0575, and by DARPA and AFRL, AFMC, USAF, under award number F20602-02-1-0216.

### References

[1] M. R. Adam. "Security-Control Methods for Statistical Database: A Comparative Study." ACM Computing Surveys, 21(4), 1989.

[2] P. Ammann, S. Jajodia, and P. Liu. "Recovery from malicious transactions." IEEE Transactions on Knowledge and Data Engineering, 15(5):1167–1185, 2002.

[3] P. Ammann, S. Jajodia, C. McCollum, and B. Blaustein. "Surviving information warfare attacks on databases." In Proceedings of the IEEE Symposium on Security and Privacy, pages 164–174, Oakland, CA, May 1997.

[4] V. Atluri, S. Jajodia, and B. George. "Multilevel Secure Transaction Processing." Kluwer Academic Publishers, 1999.

[5] D. Barbara, R. Goel, and S. Jajodia. "Using checksums to detect data corruption." In Proceedings of the 2000 International Conference on Extending Data Base Technology, Mar 2000.

[6] Carter and Katz. "Computer Crime: An Emerging Challenge for Law Enforcement." FBI Law Enforcement Bulletin, 1(8), Dec. 1996.

[7] C. Y. Chung, M. Gertz, and K. Levitt. "Demids: A misuse detection system for database systems." In 14th IFIP WG11.3 Working Conference on Database and Application Security, 2000.

[8] C. Cowan, C. Pu, D. Maier, H. Hinton, P. Bakke, S. Beattie, A. Grier, P. Wagle, and Q. Zhang. "Stackguard: Automatic adaptive detection and prevention of buffer-overﬂow attacks." In Proc. 7th USENIX Security Symposium, 1998.

[9] S. B. Davidson. "Optimism and consistency in partitioned distributed database systems." ACM Transactions on Database Systems, 9(3):456–581, September 1984.

[10] T. Garvey and T. Lunt. "Model-based intrusion detection." In Proceedings of the 14th National Computer Security Conference, Baltimore, MD, October 1991.

[11] K. Goseva-Popstojanova, F. Wang, R. Wang, G. Feng, K. Vaidyanathan, K. Trivedi, and B. Muthusamy. "Characterizing intrusion tolerant systems using a state transition model." In Proc. 2001 DARPA Information Survivability Conference (DISCEX), June 2001.

[12] R. Graubart, L. Schlipper, and C. McCollum. "Defending database management systems against information warfare attacks." Technical report, The MITRE Corporation, 1996.

[13] P. P. Grifﬁths and B. W. Wade. "An Authorization Mechanism for a Relational Database System." ACM Transactions on Database Systems, 1(3):242–255, Sept. 1976.

[14] K. Ilgun, R. Kemmerer, and P. Porras. "State transition analysis: A rule-based intrusion detection approach." IEEE Transactions on Software Engineering, 21(3):181–199, 1995.

[15] S. Ingsriswang and P. Liu. "Aaid: An application aware transaction-level database intrusion detection system." Technical report, Dept. of Information Systems, UMBC, 2001.

[16] S. Jajodia, P. Samarati, V. S. Subrahmanian, and E. Bertino. "A unified framework for enforcing multiple access control policies." In Proceedings of ACM SIGMOD International Conference on Management of Data, pages 474–485, May 1997.

[17] H. S. Javitz and A. Valdes. "The sri ides statistical anomaly detector." In Proceedings IEEE Computer Society Symposium on Security and Privacy, Oakland, CA, May 1991.

[18] J. Knight, K. Sullivan, M. Elder, and C. Wang. "Survivability architectures: Issues and approaches." In Proceedings of the 2000 DARPA Information Survivability Conference & Exposition, pages 157–171, CA, June 2000.

[19] W. Lee and D. Xiang. "Information-theoretic measures for anomaly detection." In Proc. 2001 IEEE Symposium on Security and Privacy, Oakland, CA, May 2001.

[20] P. Liu. "Dais: A real-time data attack isolation system for commercial database applications." In Proceedings of the 17th Annual Computer Security Applications Conference, 2001.

[21] P. Liu and S. Jajodia. "Multi-phase damage confinement in database systems for intrusion tolerance." In Proc. 14th IEEE Computer Security Foundations Workshop, Nova Scotia, Canada, June 2001.

[22] P. Liu, S. Jajodia, and C. McCollum. "Intrusion confinement by isolation in information systems." Journal of Computer Security, 8(4):243–279, 2000.

[23] P. Liu and Y. Wang. "The design and implementation of a multiphase database damage confinement system." In Proceedings of the 2002 IFIP WG 11.3 Working Conference on Data and Application Security, 2002.

[24] P. Luenam and P. Liu. "Odar: An on-the-fly damage assessment and repair system for commercial database applications." In Proceedings of the 2001 IFIP WG 11.3 Working Conference on Database and Application Security, 2001.

[25] P. Luenam and P. Liu. "The design of an adaptive intrusion tolerant database system." In Proc. IEEE Workshop on Intrusion Tolerant Systems, 2002.

[26] T. Lunt. "A Survey of Intrusion Detection Techniques." Computers & Security, 12(4):405–418, June 1993.

[27] U. Maheshwari, R. Vingralek, and W. Shapiro. "How to build a trusted database system on untrusted storage." In Proceedings of 4th Symposium on Operating System Design and Implementation, San Diego, CA, October 2000.

[28] D. Malkhi, M. Reiter, D. Tulone, and E. Ziskind. "Persistent objects in the fleet system." In Proc. 2001 DARPA Information Survivability Conference (DISCEX), June 2001.

[29] J. McDermott and D. Goldschlag. "Towards a model of storage jamming." In Proceedings of the IEEE Computer Security Foundations Workshop, pages 176–185, Kenmare, Ireland, June 1996.

[30] D. Medhi and D. Tipper. "Multi-layered network survivability - models, analysis, architecture, framework and implementation: An overview." In Proceedings of the 2000 DARPA Information Survivability Conference & Exposition, pages 173–186, CA, June 2000.

[31] B. Mukherjee, L. T. Heberlein, and K. Levitt. "Network intrusion detection." IEEE Network, pages 26–41, June 1994.

[32] G. C. Necula. "Proof-carrying code." In Proc. 24th ACM Symposium on Principles of Programming Languages, 1997.

[33] P. P. Pal, J. P. Loyall, R. E. Schantz, and J. A. Zinky. "Open implementation toolkit for building survivable applications." In Proc. 2000 DARPA Information Survivability Conference (DISCEX), June 2000.

[34] F. Rabitti, E. Bertino, W. Kim, and D. Woelk. "A model of authorization for next-generation database systems." ACM Transactions on Database Systems, 16(1):88–131, 1994.

[35] D. Samfat and R. Molva. "Idamn: An intrusion detection architecture for mobile networks." IEEE Journal of Selected Areas in Communications, 15(7):1373–1380, 1997.

[36] R. Sandhu and F. Chen. "The multilevel relational (mlr) data model." ACM Transactions on Information and Systems Security, 1(1), 1998.

[37] S. Sekar, M. Bendre, and P. Bollineni. "A fast automaton-based method for detecting anomalous program behaviors." In Proc. 2001 IEEE Symposium on Security and Privacy, Oakland, CA, May 2001.

[38] Z. Shao, B. Saha, and V. Trifonov. "A type system for certified binaries." In Proc. 29th ACM Symposium on Principles of Programming Languages, 2002.

[39] S. Smith, E. Palmer, and S. Weingart. "Using a high-performance, programmable secure coprocessor." In Proc. International Conference on Financial Cryptography, Anguilla, British West Indies, 1998.

[40] V. Stavridou. "Intrusion tolerant software architectures." In Proceedings of the 2001 DARPA Information Survivability Conference & Exposition, CA, June 2001.

[41] P. Stenstrom and et al. "Trends in shared memory multiprocessing." IEEE Computer, (12):44–50, Dec. 1997.

[42] S. Stolfo, D. Fan, and W. Lee. "Credit card fraud detection using meta-learning: Issues and initial results." In Proc. AAAI Workshop on AI Approaches to Fraud Detection and Risk Management, 1997.

[43] M. Tallis and R. Balzer. "Document integrity through mediated interfaces." In Proc. 2001 DARPA Information Survivability Conference (DISCEX), June 2001.

[44] C. Taylor. "Behind the hack attack." Time, (2):45–47, Feb. 2000.

[45] F. Webber, P. P. Pal, R. E. Schantz, and J. P. Loyall. "Defense-enabled applications." In Proc. 2001 DARPA Information Survivability Conference (DISCEX), June 2001.

[46] M. Winslett, K. Smith, and X. Qian. "Formal query languages for secure relational databases." ACM Transactions on Database Systems, 19(4):626–662, 1994.

[47] J. J. Wylie, M. W. Bigrigg, J. D. Strunk, G. R. Ganger, H. Kiliccote, and P. K. Khosla. "Survivable information storage systems." IEEE Computer, (8):61–68, August 2000.