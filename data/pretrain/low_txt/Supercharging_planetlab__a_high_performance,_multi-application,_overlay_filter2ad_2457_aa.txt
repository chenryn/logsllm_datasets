# Title: Supercharging PlanetLab: A High-Performance, Multi-Application, Overlay Network Platform

## Authors:
- Jonathan S. Turner
- Patrick Crowley
- John D. DeHart
- Amy Freestone
- Brandon Heller
- Fred Kuhns
- Sailesh Kumar
- John W. Lockwood
- Jing Lu
- Michael Wilson
- Charles Wiseman
- David Zar

### Contact Information:
- **Jon Turner**: Washington University, +1-314-935-8552, [EMAIL]
- **Patrick Crowley**: Washington University, +1-314-935-9186, [EMAIL]
- **John DeHart**: Washington University, +1-314-935-7329, [EMAIL]
- **Amy Freestone**: Washington University, +1-314-935-6160, [EMAIL]
- **Brandon Heller**: Washington University, +1-314-935-6160, [EMAIL]
- **Fred Kuhns**: Washington University, +1-314-935-6598, [EMAIL]
- **Sailesh Kumar**: Washington University, +1-314-935-6160, [EMAIL]
- **John Lockwood**: Washington University, +1-314-935-4460, [EMAIL]
- **Jing Lu**: Washington University, +1-314-935-4658, [EMAIL]
- **Michael Wilson**: Washington University, +1-314-935-6160, [EMAIL]
- **Charles Wiseman**: Washington University, +1-314-935-6160, [EMAIL]
- **David Zar**: Washington University, +1-314-935-4876, [EMAIL]

## Abstract
In recent years, overlay networks have become a crucial means for delivering Internet applications. These nodes are typically implemented using general-purpose servers or clusters. This paper explores the performance benefits of more integrated architectures that combine general-purpose servers with high-performance Network Processor (NP) subsystems. We focus on PlanetLab as our experimental context and report on the design and evaluation of an experimental PlanetLab platform capable of significantly higher performance than typical system configurations.

To facilitate the porting of applications, the system supports a fast path/slow path application structure, allowing the most performance-critical parts of an application to be mapped onto an NP subsystem while enabling more complex control and exception-handling in a programmer-friendly environment provided by conventional servers. We present implementations of two sample applications: an IPv4 router and a forwarding application for the Internet Indirection Infrastructure. Our results demonstrate an 80x improvement in packet processing rates and comparable reductions in latency.

This work is supported in part by NSF (grants 0520778 and 0626661). Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee, provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.

SIGCOMM'07, August 22-26, 2007, Kyoto, Japan. Copyright 2007 ACM 978-1-59593-713-1/07/0008...$5.00.

Categories and Subject Descriptors: C.2.1 [Computer-Communications Networks]: Network Architecture and Design – network communication

General Terms: Router architecture, Performance

Keywords: PlanetLab, overlay networks, network processors, Global Environment for Network Innovation (GENI)

## 1. Introduction
Overlay networks have become a popular tool for implementing Internet applications. While content-delivery networks provide the most prominent example of the commercial application of overlays, systems researchers have developed various experimental overlay applications, demonstrating that the overlay approach can effectively deploy a wide range of innovative systems. As traffic volumes in overlay networks increase, the performance of overlay nodes has become increasingly important.

Currently, overlay nodes are constructed using general-purpose servers, often organized into clusters with load-balancing switches. This paper explores an alternative approach that combines general-purpose server blades and high-performance Network Processor (NP) subsystems into an integrated architecture designed to support multiple applications concurrently.

To provide a concrete target for the research and to facilitate the system's deployment and use by others, we have chosen to focus on the design of a high-performance node for the PlanetLab overlay network testbed. In the roughly five years since its inception, PlanetLab has become a popular experimental platform and deployment vehicle for systems researchers in networking and distributed systems. PlanetLab nodes are implemented using conventional PCs running a modified version of Linux, providing a familiar implementation environment that is inexpensive and easy to deploy. However, this setup has significant performance limitations, especially as usage and traffic volumes have grown.

PlanetLab applications run as user-space processes, limiting their packet forwarding rates to under 50K packets per second, which translates to less than 100 Mb/s for average packet lengths of 250 bytes. Applications that perform significant packet processing can have even lower forwarding rates. Additionally, applications running in PlanetLab are subject to high latencies (tens of milliseconds per hop), high delay jitter, and poor performance isolation. These issues are caused by the coarse-grained time-slicing provided by the operating system and the lack of proper accounting for OS-level processing on behalf of different application processes.

To address these issues, we have developed an experimental system that can serve as a high-performance PlanetLab node. Our Supercharged PlanetLab Platform (SPP) integrates general-purpose server blades with performance-optimized NP subsystems, providing the flexibility and ease-of-use of a conventional PlanetLab implementation while delivering much higher levels of performance. By supporting a simple and familiar fast-path/slow-path application structure, we make it straightforward for researchers to map the high-volume parts of their applications (which are typically small) onto the NP resources, while enabling them to implement the more complex parts in the programmer-friendly environment offered by a general-purpose server.

We report on the implementation of two applications running in this environment, demonstrating packet forwarding rates of 4.8 million packets per second for a single NP subsystem, sufficient for throughputs of 5 Gb/s for average packet lengths of just 130 bytes. We also report latencies consistently below 200 μs. While we focus on PlanetLab as the implementation context, our broader objective is to understand the design of such platforms for more general contexts, such as future commercial overlay hosting services that may be far less resource-constrained than PlanetLab. Therefore, some aspects of the architecture exceed current PlanetLab requirements but are important in other settings.

Section 2 provides an overview of the system, setting the context for the more detailed presentation in later sections. Section 3 offers background on network processors generally and the IXP 2850 specifically. Section 4 describes the software framework that enables the fast path processing of multiple PlanetLab slices to co-exist within a single network processor. Section 5 briefly discusses our strategy for improving the performance of the general-purpose processor.