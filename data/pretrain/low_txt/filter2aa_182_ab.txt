### DefCon 17 - UCSniff and VideoJak

#### Sipera Confidential
- **Do not reproduce or distribute without express written consent.**
- **© 2008 Sipera Systems, Inc. All Rights Reserved.**

---

### UCSniff 2.1 GARP Research
**Credit: Harsh Kupwade**

We conducted research on how different IP phones respond to Gratuitous ARP (GARP) via the traditional method of unicast ARP reply packets. Successful ARP poisoning is the foundation for a Man-in-the-Middle (MitM) attack.

- **Cisco 7985 Video Phones:**
  - Cannot be ARP poisoned unless running UCSniff for 10 minutes.
  - A new method using spoofed unicast ARP requests allows immediate ARP poisoning with 100% effectiveness.

- **Avaya IP Phones:**
  - Do not respond to unicast GARP reply packets (traditional method).
  - Unicast ARP requests are 100% effective immediately.

- **Cisco Unified IP Phones:**
  - Feature a "GARP Disabled" security setting.
  - This was not addressed until UCSniff 3.0, which can now bypass it.

---

### UCSniff 3.0
**Release: August 2009 (tentative)**

- **GUI Creation:** Using JUCE libraries
- **Port to Windows OS:**
  - Windows VLAN support complete
- **Real-time Video Monitor:** (tentative)
- **Cisco UCM 7.0 and 7.1 Support:** For Skinny messaging
- **GARP Disablement Bypass Feature**
- **TFTP MitM Feature:** To modify IP phone settings

---

### UCSniff 3.0 GARP Disabled
**What is “GARP Disabled”?**
- A feature in Cisco Unified IP Phones.
- Default for all new CUCM installations.
- Prevents the IP phone from populating its ARP cache when an attacker sends spoofed, unicast ARP reply packets.

**Impact:**
- No successful ARP poisoning means no MitM condition.
- With GARP disabled, we cannot ARP poison the connection from IP Phone to Network, but we can poison the connection from Network to Phone.
- At best, we can only receive the ingress RTP media stream from the network inbound to the IP Phone.

**Observations:**
- When the IP phone boots, it sends an ARP request to communicate with the remote IP gateway for traffic to CUCM.
- It does not send an ARP request for the remote RTP peer until it receives the SCCP StartMediaTransmission message.

**Winning the Race Condition:**
- It is challenging to poison the ARP request that the phone sends as it boots up for the IP gateway.
- During an active call setup, we can predict when the IP phone will ARP for its remote RTP peer.

**GARP Disablement Bypass:**
- **Command:** `ucsniff –i eth0 --garpdb // //`
- **Process:**
  1. Intercept the 'StartMediaTransmission' message sent from UCM to the IP Phone.
  2. Learn the IP addresses of both RTP peers.
  3. Build a spoofed unicast ARP reply packet if the phone is on our source VLAN.
  4. Flood the IP phone with spoofed unicast ARP reply packets.
  5. The IP phone sends an ARP request for the valid remote RTP peer.
  6. The IP phone receives the spoofed unicast reply packet before the legitimate reply.
  7. Continue flooding for a threshold of microseconds after the legitimate reply.
  8. The IP phone populates its ARP entry with the spoofed entry.
  9. UCSniff wins the race condition, ARP poisoning the IP phone.

**Impact:**
- If both IP phones are in the same VLAN as the attacker, we can successfully ARP poison both IP phones and receive bi-directional RTP media.
- If the IP phone is communicating with an RTP peer in a remote network, we can only receive the RTP media stream from the remote peer inbound to the IP phone.

---

### UCSniff 3.0 GUI
- **JUCE Libraries:**
  - Website: [http://www.rawmaterialsoftware.com](http://www.rawmaterialsoftware.com)
  - Description: JUCE is a C++ class library for developing cross-platform applications, particularly good for creating specialized user interfaces and handling graphics and sound.
- **Features:**
  - Created a GUI application using the JUCER & Demo App.
  - Aimed for a cross-platform C/C++ application to ensure consistent appearance on Mac, Linux, and Windows.

---

### UCSniff Windows Port
- **MinGW (Minimalist GNU for Windows):**
  - Website: [http://www.mingw.org/](http://www.mingw.org/)
  - Used for porting GNU GCC and GNU Binutils for native Windows application development.
- **Voice VLAN Interface:**
  - Developed two drivers using WinDDK (Windows Driver Development Kit):
    - NDIS protocol driver
    - IM (Intermediate) driver
  - These drivers will be released as a separate package with UCSniff 3.0.

**NDIS Protocol Driver:**
- Sets and queries the 8021Q tag on the Ethernet interface.
- Sends and receives raw network packets on Windows.

**IM (Intermediate) Driver:**
- Creates a virtual interface for both wired and wireless interfaces, tagged with the Voice VLAN ID.

**Installation:**
- **Ndisprot:**
  - Use ProtInstall - NDISPROT Driver Installer.
  - Website: [http://www.ndis.com/papers/ndisinstall/programinstall.htm](http://www.ndis.com/papers/ndisinstall/programinstall.htm)
  - Execute `net start ndisprot` to start the service.
- **IM Driver:**
  - Added support for installing/uninstalling the IM driver using ProtInstall.

---

### Video Decoding Support
- **H.264 Content:**
  - Decodes H.264 content from RTP.
  - Compliant with RFC 3984 (RTP payload format for H.264 video codec).
  - Creates a raw H.264 video file, playable on VLC and Mplayer.
- **FFMpeg Libraries:**
  - AVI Container
  - Muxing audio and video

---

### UCSniff Overview
- **Diagram:**
  - PSTN, Internet, Enterprise, IP PBX, Voice VLAN, Data VLAN, UCSniff, ARP, Unplug, Plug, Call, Media

---

### UCSniff Live Demo
- **Targets:**
  - Two Cisco 7985 Video phones

---

### Agenda
- **Introduction**
- **Overview of UC**
- **Live demo of Video Eavesdropping**
- **Live demo of Video Replay and Video Hijack**
- **VideoJak Overview**
- **Requirements**
- **VideoJak Live Demo**
- **VoIP Pentesting Tricks**
- **Conclusion**

---

### VideoJak 1.0 – HiJacking IP Video
- **Released: February 2009**
- **Credit: Abhijeet Hatekar, Author**
- **Website: [http://videojak.sourceforge.net](http://videojak.sourceforge.net)**
- **Twitter: [http://twitter.com/videojak](http://twitter.com/videojak)**
- **First security assessment tool to support H.264 video codec.**
- **First version can run a targeted DoS against an IP video conversation using Cisco 7985 IP Phones.**

---

### VideoJak 1.1
- **Release: August 2009 (tentative)**
- **New Features:**
  - Video Replay in a continuous loop, using AVI file
  - Video DoS attack against a video endpoint, using AVI file
  - Can replay a previous IP video call conversation using raw H.264 container

---

### VideoJak Development
- **Finding a Valid H.264 RTP Stream:**
  - Easy to find if we can intercept the signaling (SIP/Skinny/RTSP/SDP) that negotiates the RTP port and other codec parameters.
  - Signaling and session negotiation occur only once and do not happen frequently.
  - In IP video surveillance, media could be streamed for days without signaling.
  - Module to intelligently detect an RTP stream based on:
    - IP and UDP parameters
    - RTP Version
    - Payload Type
    - SSRC
    - Monotonically increasing sequence number and timestamp

- **Sample Capture:**
  - Shows a session getting established between an IP video surveillance camera and a monitoring endpoint.

- **H.264 Payload Format and Fragmentation:**
  - Four types of H.264 RTP payload formats (Single NALU, FU, STAP, MTAP).
  - If the H.264 payload size exceeds the MTU, it gets fragmented at the H.264 level (FU-A or FU-B).
  - Some clients, like Cisco 7985, do not handle FU-A or FU-B H.264 payload formats.
  - VideoJak automatically converts FU type payloads to Single NALU and fragments them at the IP level.

- **FFMpeg Libraries:**
  - Convert AVI and raw H.264 files to RTP media streams.

---

This optimized text provides a clear, coherent, and professional overview of the UCSniff and VideoJak projects, including their features, development, and usage.