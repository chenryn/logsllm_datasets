# Journey to the Center of the HP28C/S

## By Travis Goodspeed
### Regarding the work of Paul Courbis and Sébastien Lalande

**Disclaimer:**
I am just the translator, and my French is not great.

---

### Part 1: Software

#### Introduction
- **Models:**
  - HP28C-1BB
  - HP28C-1CC
  - HP28S-2BB
- **Architecture:**
  - HP SATURN, similar to the HP 71b
- **Endianness:**
  - Nibble-wise Little Endian

#### Memory Layout

**HP 28C:**
- **Address Range:** 00000 - FFFFF
- **Memory Segments:**
  - 60000 - FFFFF: ROM
  - 40800 - 4F000: Screen
  - 52000 - 60000: Timer
  - 40000 - 40800: Void
  - 00000 - 40000: RAM
  - 4F000 - 52000: Void

**HP 28S:**
- **Address Range:** 00000 - FFFFF
- **Memory Segments:**
  - 50000 - FFFFF: Standard ROM
  - 40800 - 4F000: Screen
  - 52000 - 60000: Timer
  - 40000 - 40800: Void
  - 00000 - 40000: RAM
  - 4F000 - 52000: Void
  - C0000 - FFF800: Additional ROM
  - D0000 - E0000: Void
  - FF800 - FFFFF: Standard ROM

#### Registers
- **Output (12 bits)**
- **Input (16 bits)**
- **Carry (1 bit)**
- **I/O Status (4 bits)**
- **Hardware Status (16 bits)**
- **Status (P, 20 bits)**
- **D0, D1 (20 bits each)**
- **Program Counter (PC, 20 bits)**
- **Pointers (RSTK, 20 by 8 bits)**
- **R0 to R4 (64 bits each)**
- **Safeguard (A to D, 64 bits each)**
- **Working Nybbles (Quartets)**

#### Byte and Nibble
- **Byte:**
  - Range: 0x00 to 0xFF (0 to 255)
- **Nibble:**
  - Range: 0 to F (BCD: 0 to 9)

**Nybble Little Endian:**
- Example: #1234
  - Little Endian: 34 12
  - Big Endian: 12 34
  - HP 28: 3 4 1 2

#### Objects: List and Structure
- **Prologue:**
  - 5 nibbles
  - Specifies Type
- **Type:**
  - System or User
  - Implies Length

**Short Integer:**
- Example: #02911
  - Prologue: 5 nibbles
  - Number: 11920
  - 54321
  - 11920
  - 00000
  - 00000
  - 12345
  - 5
  - 5

**Real:**
- Example: #02933
  - Prologue: 5 nibbles
  - Exponent: 3
  - Mantissa: 12
  - Sign: 1
  - 33290
  - 500
  - 953562951413
  - 0
  - π*10^5

**Reverse Polish Notation (RPN):**
- **Stack Metaphor:**
  - Left to right.
  - If value: PUSH onto stack.
  - If operator: POP parameters, PUSH result.
  - No grouping symbols.
  - Easy to interpret.

**Example:**
- Input: 1 10 3 + *
- Stack:
  - +
  - 1
  - 10
  - 3
  - *
  - 10
  - 3
  - 30
  - 1
  - +
  - 31

**Algebraic:**
- Example: #02ADA
  - Prologue: 5 nibbles
  - Expression: π*10^5
  - π
  - 10
  - 5
  - *
  - ^
  - π
  - 10
  - 5
  - *
  - ^

#### I/O Zone
- **IR in/out**
- **Timers**
- **Contrast**
- **Screen/Indicators**
- **Speed (28S Only)**
- **Row Driver Waveform (28C Only)**
  - Maps logical lines to physical lines.
  - Scrolling: Swap line-mappings, not data.
  - Mirroring: Map the same logic line to many physical lines.
  - Initialized at boot.
  - Interpreted by software video driver.

#### RAM
- **Polling:**
  - Background processes watch RAM for I/O-like behavior.
- **Keyboard Buffer:**
  - Samples keys (not ASCII).
  - Clock
  - KEYSTART: Next key to be handled.
  - KEYEND: Next key to be sampled.

#### Accessing Machine Language
- **ML Program:**
  - Object Type (#02C96)
  - May not be created by the user.
- **Bootstrapping:**
  - ASS
  - LASS
- **LASS:**
  - Takes an ML string as input.
  - One character, one nybble.
  - Assembles ML String to ML Object.
  - Usage:
    - Push string to stack.
    - LASS
    - Store resultant object to variable.
  - Example: "76C2091C7..." LASS `INV.VID' STO

#### Further Discoveries
- **Search ROM:**
  - Strings Tables in Appendix
  - I/O or RAM addresses
- **Systematic Disassembly:**
  - Disassembler Program
  - Dump to a Workstation

#### Useful Routines
- **SAV.REG**
- **LOAD.REG**
- **RES.ROOM**
- **GARB.COLL** (Force Garbage Collection)
- **TFM** (Too Few Memory)
- **ERROR**
- **BEEP**

**Flowchart:**
- First Try?
  - LOAD.REG
  - TFM
    - carry=0: continue
    - carry=1: no

---

### Part 2: Hardware

#### Exterior Description
- **Electronics:**
  - Keyboard
- **Opening:**
  - No screws!
  - Break some pins.

#### Interior Description
- **Components:**
  - Keyboard
  - CD
  - STR
  - B0, B1, B2, B3
  - In, Out
  - GC
  - GND
  - DOUT
  - ILP3-0016
  - Buzzer
  - ROM A
  - ROM B

#### Transformations
- **External Power Feed**
- **Overclocking:**
  - **HP28C:**
    - Replace or remove a capacitor.
    - Replace an inductor.
  - **HP28S:**
    - Overclocking in software.
    - SPEED Program.
- **Memory Upgrade:**
  - **HP71B Memory Module:**
    - Cut traces of memory bus.
    - Patch in upgrade module.

#### I/O Ports
- **IR Cartridge**
- **Replacement Adapters:**
  - Apple ][e Joystick
  - HP to HP
  - RS232

#### HP28 Printer
- **HP82240B**

#### Ideas
- **Add a Joystick**
- **Telephone Composer:**
  - Photocoupler and relays.
  - Provides click of a rotary phone.
  - Dial by counting digits, then waiting.
- **Motor Control**
- **Robot**
- **Plotter**

---

### Part 3: Appendices

- **Machine Language**
- **SATURN Microprocessor**
- **SATURN Instructions**
- **Exhaustive List of Error Codes**
- **List of Objects and RPL Entry Points**
- **Library of Programs**

### Epilogue

#### HP28 Emulation
- **Christoph Giesselink**

#### HP48 Series
- **Memory Expansion**
- **IR I/O**
- **Serial Port**
- **Meta Kernel:**
  - Replacement OS

**Photo by Heretiq**

#### HP49 Series
- **SD Card Slot**
- **USB, IR, Serial**
- **ARM CPU:**
  - Emulates SATURN
- **HPGCC**
- **Meta Kernel:**
  - Official OS

**Photo by Nova dc**

#### TI Calculators
- **Next Step: TI Nspire**
  - No ML Programming
  - No Games
  - No ROM Dump

### Questions?
- **Contact:**
  - Travis Goodspeed
  - Email: [PI:EMAIL]
  - Phone: 865.300.0094