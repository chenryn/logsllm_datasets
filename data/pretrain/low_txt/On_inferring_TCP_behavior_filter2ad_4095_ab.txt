### 4. TCP Behavior of Web Servers

In this section, we describe some of the tests implemented in TBIT and present the results from examining the TCP behaviors of thousands of web servers. Each test is described in detail, along with the corresponding results.

#### 4.1 Initial Value of Congestion Window (ICW)

We conducted the ICW test on a list of 4550 unique web servers, each of which sends more than 3500 bytes of data when the base page is requested. This list was compiled from three sources: trace data from a web proxy [16], the list published at 100hot.com, and the list of web servers used in [17]. We used NMAP [13] to identify the operating systems running on these remote hosts, which provided guesses for 3225 of the web servers. The tests were run in May 2001.

**Test Setup:**
- MSS set to 100 bytes.
- Each server tested five times.
- Total tests: 4550 * 5 = 22750.

**Results:**
- 1012 tests terminated without returning a result due to various reasons:
  - No connection established (376 tests).
  - No data sent in response to the HTTP request (374 tests).
  - RST/FIN flag received before test completion (82 tests).
  - Large MSS (17 tests).
  - Packet loss detected (163 tests).

**Server Categorization:**
- **Category 1:** At least three tests returned the same result (4264 servers).
- **Category 2:** At least three tests returned different results (196 servers).
- **Category 3:** One or two tests returned the same result (41 servers).
- **Category 4:** One or two tests returned different results (2 servers).
- **Category 5:** None of the five tests returned a result (44 servers).

**Summary Results for Category 1:**
- ICW size of 1 segment: 409 servers.
- ICW size of 2 segments: 3638 servers.
- ICW size of 3 segments: 12 servers.
- ICW size of 4 segments: 62 servers.
- ICW size of 5 or more segments: 143 servers.

**Operating System Insights:**
- 24 out of 62 servers setting ICW to 4 packets were running a beta version of Solaris 8.
- 3 servers setting ICW to more than 8000 bytes were running older versions of Digital (Compaq) UNIX, likely research implementations.

#### 4.2 Congestion Control Algorithm (CCA)

Different TCP congestion control algorithms, such as Tahoe [15], Reno [5], NewReno [12], and SACK [19], have been deployed since 1988. To determine the congestion control behavior, we designed a test based on simulations described in [9].

**Test Setup:**
- Establish a connection with the remote web server.
- Set MSS to a small value (e.g., 100 bytes) to force multiple data packets.
- Declare a receiver window of 5*MSS.
- Request the base web page.
- Drop specific packets (e.g., packet 13 and packet 16) to elicit the desired behavior.
- Close the connection after receiving 25 data packets, including retransmissions.

**Behavior Classification:**
- **NewReno:** Fast Retransmit for packet 13, no additional Fast Retransmits or Retransmit Timeouts, no unnecessary retransmission of packet 17.
- **Reno:** Fast Retransmit for packet 13, Retransmit Timeout for packet 16, no unnecessary retransmission of packet 17.
- **Tahoe:** No Retransmit Timeout before retransmitting packet 13, unnecessary retransmission of packet 17.
- **TCP without Fast Retransmit:** Retransmit Timeout for packet 13, unnecessary retransmission of packet 17.
- **RenoPlus:** Variant of Reno with additional packets "off the top" between retransmissions of packets 13 and 16, no unnecessary retransmissions.

**Test Results:**
- 2672 tests terminated without returning results due to:
  - No connection (237 tests).
  - No data (205 tests).
  - RST/FIN (106 tests).
  - Large MSS (20 tests).
  - Packet drop (387 tests).
  - Packet reordering (1372 tests).
  - Buffer overflow (2 tests).
  - Uncategorized (343 tests).

**Server Categorization:**
- **Category 1:** At least three tests returned the same result (3728 servers).
- **Category 2:** At least three tests returned different results (483 servers).
- **Category 3:** One or two tests returned the same result (172 servers).
- **Category 4:** One or two tests returned different results (23 servers).
- **Category 5:** None of the five tests returned a result (144 servers).

**Summary Results for Category 1:**
- NewReno: 1571 servers.
- TCP without Fast Retransmit: 1010 servers.
- Reno: 667 servers.
- RenoPlus: 279 servers.
- Tahoe: 201 servers.

**Key Findings:**
- A significant number of web servers (1010) were categorized as using TCP without Fast Retransmit, which was unexpected given that Fast Retransmit has been in TCP implementations since 1988.
- These servers suffer a performance penalty due to the absence of Fast Retransmit, as shown in Figure 1(d).

This comprehensive analysis provides valuable insights into the TCP behaviors of web servers, highlighting the diversity and potential areas for improvement in TCP implementations.