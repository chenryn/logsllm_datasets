### 文献引用优化

以下是对文献引用部分的优化，使其更加清晰、连贯和专业：

1. **Maddern, W., Pascoe, G., Linegar, C., & Newman, P. (2017). 1 year, 1000 km: The Oxford RobotCar dataset. *The International Journal of Robotics Research, 36*(1), 3–15.**

2. **Martin, R., Demme, J., & Sethumadhavan, S. (2012). Time-Warp: Rethinking timekeeping and performance monitoring mechanisms to mitigate side-channel attacks. *ACM SIGARCH Computer Architecture News, 40*(3), 118–129.**

3. **Michalevsky, Y., Boneh, D., & Nakibly, G. (2014). Gyrophone: Recognizing speech from gyroscope signals. In *23rd USENIX Security Symposium* (pp. 1053–1067).**

4. **Michalevsky, Y., Schulman, A., Veerapandian, G. A., Boneh, D., & Nakibly, G. (2015). PowerSpy: Location tracking using mobile device power analysis. In *24th USENIX Security Symposium* (pp. 785–800).**

5. **Miller, I., & Campbell, M. (2008). Particle filtering for map-aided localization in sparse GPS environments. In *IEEE International Conference on Robotics and Automation (ICRA)* (pp. 1834–1841).**

6. **Miller, I., Campbell, M., Huttenlocher, D., Kline, F.-R., Nathan, A., Lupashin, S., Catlin, J., Schimpf, B., Moran, P., Zych, N., et al. (2008). Team Cornell’s Skynet: Robust perception and planning in an urban environment. *Journal of Field Robotics, 25*(8), 493–527.**

7. **Montemerlo, M., Becker, J., Bhat, S., Dahlkamp, H., Dolgov, D., Ettinger, S., Haehnel, D., Hilden, T., Hoffmann, G., Huhnke, B., et al. (2008). Junior: The Stanford entry in the urban challenge. *Journal of Field Robotics, 25*(9), 569–597.**

8. **Narváez, P., Siu, K.-Y., & Tzeng, H.-Y. (2000). New dynamic algorithms for shortest path tree computation. *IEEE/ACM Transactions On Networking, 8*(6), 734–746.**

9. **Oren, Y., Kemerlis, V. P., Sethumadhavan, S., & Keromytis, A. D. (2015). The spy in the sandbox: Practical cache attacks in JavaScript and their implications. In *22nd ACM SIGSAC Conference on Computer and Communications Security (CCS)* (pp. 1406–1418).**

10. **Sprabery, R., Evchenko, K., Raj, A., Bobba, R. B., Mohan, S., & Campbell, R. (2018). Scheduling, isolation, and cache allocation: A side-channel defense. In *IEEE International Conference on Cloud Engineering (IC2E)* (pp. 34–40).**

11. **Osvik, D. A., Shamir, A., & Tromer, E. (2006). Cache attacks and countermeasures: The case of AES. In *Cryptographers’ Track at the RSA Conference* (pp. 1–20). Springer.**

12. **Qureshi, M. K. (2018). CEASER: Mitigating conflict-based cache attacks via encrypted-address and remapping. In *51st Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)* (pp. 775–787).**

13. **Qureshi, M. K. (2019). New attacks and defense for encrypted-address cache. In *46th IEEE/ACM International Symposium on Computer Architecture (ISCA)* (pp. 360–371).**

14. **Redmon, J., & Farhadi, A. (2017). YOLO9000: Better, faster, stronger. In *IEEE Conference on Computer Vision and Pattern Recognition (CVPR)* (pp. 7263–7271).**

15. **Ren, S., He, K., Girshick, R., & Sun, J. (2015). Faster R-CNN: Towards real-time object detection with region proposal networks. In *Advances in Neural Information Processing Systems (NIPS)* (pp. 91–99).**

16. **Rohde, J., Jatzkowski, I., Mielenz, H., & Zöllner, J. M. (2016). Vehicle pose estimation in cluttered urban environments using multilayer adaptive Monte Carlo localization. In *19th International Conference on Information Fusion (FUSION)* (pp. 1774–1779).**

17. **Sakoe, H., Chiba, S., Waibel, A., & Lee, K. (1990). Dynamic programming algorithm optimization for spoken word recognition. *Readings in Speech Recognition, 159*, 224.**

18. **Seiffert, C., Khoshgoftaar, T. M., Van Hulse, J., & Napolitano, A. (2010). RUSBoost: A hybrid approach to alleviating class imbalance. *IEEE Transactions on Systems, Man, and Cybernetics-Part A: Systems and Humans, 40*(1), 185–197.**

19. **Shusterman, A., Kang, L., Haskal, Y., Meltser, Y., Mittal, P., Oren, Y., & Yarom, Y. (2019). Robust website fingerprinting through the cache occupancy channel. In *28th USENIX Security Symposium* (pp. 639–656).**

20. **Spangenberg, R., Goehring, D., & Rojas, R. (2016). Pole-based localization for autonomous vehicles in urban scenarios. In *IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)* (pp. 2161–2166).**

21. **Trilla, D., Hernandez, C., Abella, J., & Cazorla, F. J. (2018). Cache side-channel attacks and time-predictability in high-performance critical real-time systems. In *55th ACM/ESDA/IEEE Design Automation Conference (DAC)* (pp. 1–6).**

22. **Urmson, C., Anhalt, J., Bagnell, D., Baker, C., Bittner, R., Clark, M., Dolan, J., Duggins, D., Galatali, T., Geyer, C., et al. (2008). Autonomous driving in urban environments: Boss and the urban challenge. *Journal of Field Robotics, 25*(8), 425–466.**

23. **Varadarajan, V., Ristenpart, T., & Swift, M. M. (2014). Scheduler-based defenses against cross-VM side-channels. In *23rd USENIX Security Symposium* (pp. 687–702).**

24. **Wang, Z., & Lee, R. B. (2007). New cache designs for thwarting software cache-based side channel attacks. In *ACM SIGARCH Computer Architecture News, 35* (pp. 494–505).**

25. **Yan, M., Fletcher, C., & Torrellas, J. (2020). Cache telepathy: Leveraging shared resource attacks to learn DNN architectures. In *29th USENIX Security Symposium*.**

26. **Yarom, Y., & Falkner, K. (2014). FLUSH+RELOAD: A high resolution, low noise, L3 cache side-channel attack. In *23rd USENIX Security Symposium* (pp. 22–25).**

### 目的地选择对位置预测的影响

提出的分类算法无法预测不在训练集中的位置。我们的位置预测实验使用随机选择的目的地进行，其中训练集和验证集包含不同的目的地集合。因此，我们利用每个路径上的中间位置生成多个训练/验证样本。这些中间位置有助于在两个集合中创建更多具有相同位置标签的样本，即使整个路径的目的地不同。例如，一个长度为L的模拟运行到一个目的地有L-1个中间位置，并生成L个样本，每个样本有不同的目标位置以供预测。直观上，如果训练集和验证集中的模拟目的地在空间上接近，则两个集合之间将有更多的共同中间位置，从而导致更多的验证样本的目标位置存在于训练集中。

#### 目的地选择策略

以下是不同策略选择训练集和验证集的模拟目的地及其对预测准确性的影响的研究。

##### 相同目的地
在这种策略下，训练集和验证集具有相同的模拟目的地（图22）。我们选择了迷宫1中的所有256个位置。对于每个目的地，我们分别用于训练集和验证集各一次模拟运行，总共512次运行。

##### 交错目的地
在这种策略下，训练集和验证集的目的地呈棋盘模式交错分布（图23）。训练集和验证集之间没有重叠。我们选择“黑色”目的地用于训练，“白色”目的地用于验证。对于每个目的地，我们有两次运行，总共512次运行。交错策略导致训练集和验证集之间的目的地互斥，但验证集中的每个目的地在训练集中都有一个仅相隔一个网格的目的地。

##### 分离目的地
在这种策略下，训练集和验证集在空间上是分离的（图24）。我们使用迷宫1的下半部分作为训练集，上半部分作为验证集。对于每个目的地，我们有两次运行，总共512次运行。在这种策略下，训练集和验证集中的目的地不仅互斥，而且在相反的方向上相距较远。

#### 预测结果

表7比较了不同目的地选择策略下训练集和验证集之间重叠的目标位置数量。表中显示了上述三种策略以及第4.5.2节中描述的随机选择方案的结果。注意，表中的目标位置包括每次模拟运行中的中间位置。表中显示了验证集中唯一的目标位置总数，以及至少在一个训练集样本中出现的目标位置数量。样本表示验证集中用于获得预测准确性的单个样本；多个样本可能具有相同的目标位置。对于相同目的地策略，验证集中的100%目标位置被训练集覆盖。对于交错策略，88.8%的目标位置和99.4%的验证样本被训练集覆盖。然而，在分离策略中，只有47.2%的目标位置被训练集覆盖。未覆盖的目标位置具有训练集中未找到的位置标签，因此会导致相同数量的预测错误。因此，分离目的地的预测准确性较低。

表8比较了三种策略和随机目的地策略的预测结果。交错、相同和随机目的地的预测准确性相似，而分离目的地的准确性显著较低。这与分离目的地策略下训练集覆盖的目标位置百分比低一致。结果表明，训练集和验证集中的目的地的空间接近性，而不是训练集和验证集中的目的地的完全重叠，对于预测准确性更为重要。我们在第4章和第5章中使用的随机目的地策略保持了训练集和验证集之间目的地的空间接近性。因此，预测准确性与使用相同和交错目的地策略相似。

**表7：不同目的地选择策略下的目标位置和样本数量及百分比。**

| 策略 | 目标位置总数 | 训练集覆盖的目标位置数 | 百分比 | 样本总数 | 训练集覆盖的样本数 | 百分比 |
|------|--------------|------------------------|---------|----------|--------------------|---------|
| 相同 | 256          | 256                    | 100%    | 8,627    | 8,627              | 100%    |
| 交错 | 224          | 199                    | 88.8%   | 8,650    | 8,601              | 99.4%   |
| 分离 | 178          | 84                     | 47.2%   | 10,954   | 9,408              | 85.9%   |

**表8：使用不同策略选择训练集和验证集中的目的地的预测结果。**

| 策略 | 3-网格准确性 | 平均误差 |
|------|--------------|----------|
| 相同 | 75.9%        | 2.49     |
| 交错 | 77.3%        | 2.40     |
| 分离 | 50.7%        | 5.44     |
| 随机 | 74.6%        | 2.87     |

通过这些优化，文本变得更加清晰、连贯和专业。希望这些修改对你有所帮助！