### 5.79 μs and Independence from the ε Setting

The cost of 5.79 μs is independent of the ε setting. This overhead primarily stems from the invocation of the random number generation function, `get_random_bytes()`. It is important to note that this overhead is incurred in the scheduler when a job arrives, which is not equivalent to the context switch overhead. In EDF (and ε-Scheduler), the arrival of a job does not necessarily lead to a new scheduling event, such as a call to `pick_next_dl_entity()`.

### Power Consumption Analysis

We also measured the power consumption of the platform for each of the schedulers. When the scaling governor is set to `scaling_governor = performance`—a typical setting for Real-Time Systems (RTS) to maintain predictable execution time and behavior—the power consumption remains consistent across all schedulers. This is expected because the CPU runs at the highest frequency at all times under the performance setting. For comparison, we also measured power consumption with `scaling_governor = ondemand`, which lowers the CPU frequency (and thus reduces power consumption) when idling for a significant amount of time. The resulting power consumption aligns with our previous findings (e.g., lower context switch ratio in ε-Scheduler) and suggests that ε-Scheduler does not result in higher power consumption.

### Discussion and Conclusion

From the evaluation, both ε = 10³ and ε = 10 settings produce promising results for obscuring periodicity and diversifying the schedule. However, the QoS measurements show that ε = 10³ yields more reasonable variations in task frequencies. While ε-Scheduler offers less protection with ε = 10³, it may still be a suitable choice in many RTS. The same outcomes were observed in the evaluation using two real applications, where the system achieved a balance between performance and security with ε = 10³. On the other hand, with ε = 10, the performance impact varied significantly across different applications. For instance, the rover system performed with an acceptable error, while the video streaming service became unusable. Given that each application has a unique tolerance to variations, the ε value should be determined on a case-by-case basis in collaboration with system designers.

A possible improvement is to dynamically adjust the ε value based on the QoS and protection demand at runtime. In such a case, ε can serve as a security parameter integrated with a feedback control real-time scheduling algorithm (e.g., [43]).

### Acknowledgments

The authors would like to thank the anonymous reviewers and the shepherd, Prof. Kaveh Razavi, for their valuable feedback. We also extend our gratitude to Prof. Siddharth Garg (NYU) for his initial ideas. This work is supported by the National Science Foundation (NSF) grant SaTC-1718952. Any opinions, findings, and conclusions or recommendations expressed in this publication are those of the authors and do not necessarily reflect the views of NSF.

### References

[1] Fardin Abdi, Chien-Ying Chen, Monowar Hasan, Songran Liu, Sibin Mohan, and Marco Caccamo. 2018. Guaranteed physical security with restart-based design for cyber-physical systems. In Proceedings of the 9th ACM/IEEE International Conference on Cyber-Physical Systems. IEEE Press, 10–21.

[2] Fardin Abdi, Chien-Ying Chen, Monowar Hasan, Songran Liu, Sibin Mohan, and Marco Caccamo. 2018. Preserving Physical Safety Under Cyber Attacks. IEEE Internet of Things Journal (2018).

[3] Dakshi Agrawal, Bruce Archambeault, Josyula R Rao, and Pankaj Rohatgi. 2002. The EM side—channel (s). In International Workshop on Cryptographic Hardware and Embedded Systems. Springer, 29–45.

[4] Hyeongboo Baek and Chang Mook Kang. 2020. Scheduling Randomization Protocol to Improve Schedule Entropy for Multiprocessor Real-Time Systems. Symmetry 12, 5 (2020), 753.

[5] Hagai Bar-El, Hamid Choukri, David Naccache, Michael Tunstall, and Claire Whelan. 2006. The sorcerer’s apprentice guide to fault attacks. Proc. IEEE 94, 2 (2006), 370–382.

[6] Donald J Berndt and James Clifford. 1994. Using dynamic time warping to find patterns in time series. In KDD workshop, Vol. 10. Seattle, WA, USA: 359–370.

[7] Marko Bertogna and Sanjoy Baruah. 2010. Limited preemption EDF scheduling of sporadic task systems. IEEE Trans. on Ind. Info. 6, 4 (2010), 579–591.

[8] Enrico Bini and Giorgio C Buttazzo. 2005. Measuring the performance of schedulability tests. RTS Journal 30, 1-2 (2005), 129–154.

[9] Alan Burns and Stewart Edgar. 2000. Predicting computation time for advanced processor architectures. In Real-Time Systems, 2000. Euromicro RTS 2000. 12th Euromicro Conference on. IEEE, 89–96.

[10] Nathan Burow, Ryan Burrow, Roger Khazan, Howard Shrobe, and Bryan C Ward. 2020. Moving Target Defense Considerations in Real-Time Safety-and Mission-Critical Systems. In Proceedings of the 7th ACM Workshop on Moving Target Defense. 81–89.

[11] Defense Use Case. 2016. Analysis of the cyber attack on the Ukrainian power grid. Electricity Information Sharing and Analysis Center (E-ISAC) (2016).

[12] Francisco J Cazorla, Eduardo Quiñones, Tullio Vardanega, Liliana Cucu, Benoit Triquet, Guillem Bernat, Emery Berger, Jaume Abella, Franck Wartel, Michael Houston, et al. 2013. Proartis: Probabilistically analyzable real-time systems. ACM Transactions on Embedded Computing Systems (2013).

[13] Konstantinos Chatzikokolakis, Miguel E Andrés, Nicolás Emilio Bordenabe, and Catuscia Palamidessi. 2013. Broadening the scope of differential privacy using metrics. In International Symposium on Privacy Enhancing Technologies Symposium. Springer, 82–102.

[14] Chien-Ying Chen, Sibin Mohan, Rodolfo Pellizzoni, Rakesh B Bobba, and Negar Kiyavash. 2019. A Novel Side-Channel in Real-Time Schedulers. In 2019 IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS). IEEE, 90–102.

[15] Thomas M. Chen and Saeed Abu-Nimeh. 2011. Lessons from Stuxnet. Computer 44, 4 (April 2011), 91–93.

[16] Hoon Sung Chwa, Kang G Shin, and Jinkyu Lee. 2018. Closing the gap between stability and schedulability: a new task model for Cyber-Physical Systems. In 2018 IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS). IEEE, 327–337.

[17] Jorge Cortés, Geir E Dullerud, Shuo Han, Jerome Le Ny, Sayan Mitra, and George J Pappas. 2016. Differential privacy in control and network systems. In 2016 IEEE 55th Conference on Decision and Control (CDC). IEEE, 4252–4272.

[18] Cynthia Dwork. 2008. Differential privacy: A survey of results. In International conference on theory and applications of models of computation. Springer, 1–19.

[19] Cynthia Dwork, Aaron Roth, et al. 2014. The algorithmic foundations of differential privacy. Foundations and Trends® in Theoretical Computer Science 9, 3–4 (2014), 211–407.

[20] Iker Esnaola-Gonzalez, Meritxell Gómez-Omella, Susana Ferreiro, Izaskun Fernandez, Ignacio Lázaro, and Elena García. 2020. An IoT Platform towards the Enhancement of Poultry Production Chains. Sensors 20, 6 (2020), 1549.

[21] Dario Faggioli, Fabio Checconi, Michael Trimarchi, and Claudio Scordino. 2009. An EDF scheduling class for the Linux kernel. In Real-Time Linux Wkshp.

[22] A. Ghassami, X. Gong, and N. Kiyavash. 2015. Capacity limit of queueing timing channel in shared FCFS schedulers. In 2015 IEEE International Symposium on Information Theory (ISIT). 789–793. https://doi.org/10.1109/ISIT.2015.7282563

[23] Xun Gong and Negar Kiyavash. 2016. Quantifying the Information Leakage in Timing Side Channels in Deterministic Work-conserving Schedulers. IEEE/ACM Trans. Netw. 24, 3 (June 2016), 1841–1852. https://doi.org/10.1109/TNET.2015.2438860

[24] Miguel Grinberg. 2018. Flask web development: developing web applications with Python. O’Reilly Media, Inc.

[25] Jiaxi Gu, Jiliang Wang, Zhiwen Yu, and Kele Shen. 2019. Traffic-Based Side-Channel Attack in Video Streaming. IEEE/ACM Transactions on Networking 27, 3 (2019), 972–985.

[26] Jeffery Hansen, Scott A Hissam, and Gabriel A Moreno. 2009. Statistical-based WCET estimation and validation. In Proceedings of the 9th Intl. Workshop on Worst-Case Execution Time (WCET) Analysis.

[27] Monowar Hasan, Sibin Mohan, Rakesh B Bobba, and Rodolfo Pellizzoni. 2016. Exploring opportunistic execution for integrating security into legacy hard real-time systems. In 2016 IEEE Real-Time Systems Symposium (RTSS). IEEE, 123–134.

[28] Jianping He and Lin Cai. 2016. Differential private noise adding mechanism and its application on consensus. arXiv preprint arXiv:1611.08936 (2016).

[29] Naoise Holohan, Spiros Antonatos, Stefano Braghin, and Pól Mac Aonghusa. 2018. The bounded Laplace mechanism in differential privacy. arXiv preprint arXiv:1808.10410 (2018).

[30] Zhenqi Huang, Yu Wang, Sayan Mitra, and Geir E Dullerud. 2014. On the cost of differential privacy in distributed control systems. In Proceedings of the 3rd international conference on High confidence networked systems. 105–114.

[31] Aini Hussain, M. A. Hannan, Azah Mohamed, Hilmi Sanusi, and A. K. Ariffin. 2006. Vehicle crash analysis for airbag deployment decision. International Journal of Automotive Technology 7, 2 (2006), 179–185.

[32] Damir Isovic. 2001. Handling Sporadic Tasks in Real-time Systems: Combined Offline and Online Approach. Mälardalen University.

[33] Ke Jiang, L. Batina, P. Eles, and Zebo Peng. 2014. Robustness Analysis of Real-Time Scheduling Against Differential Power Analysis Attacks. In 2014 IEEE Computer Society Annual Symposium on VLSI (ISVLSI). 450–455. https://doi.org/10.1109/ISVLSI.2014.11

[34] S. Kadloor, N. Kiyavash, and P. Venkitasubramaniam. 2016. Mitigating Timing Side Channel in Shared Schedulers. IEEE/ACM Transactions on Networking 24, 3 (June 2016), 1562–1573. https://doi.org/10.1109/TNET.2015.2418194

[35] Karl Koscher, Alexei Czeskis, Franziska Roesner, Shwetak Patel, Tadayoshi Kohno, Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, and Stefan Savage. 2010. Experimental Security Analysis of a Modern Automobile. In Security and Privacy (SP), 2010 IEEE Symposium on. 447–462. https://doi.org/10.1109/SP.2010.34

[36] Kristin Krüger, Marcus Völp, and Gerhard Fohler. 2018. Vulnerability Analysis and Mitigation of Directed Timing Inference Based Attacks on Time-Triggered Systems. In 30th Euromicro Conference on Real-Time Systems (ECRTS). 22:1–22:17. https://doi.org/10.4230/LIPIcs.ECRTS.2018.22

[37] Ben Lickly, Isaac Liu, Sungjun Kim, Hiren D. Patel, Stephen A. Edwards, and Edward A. Lee. 2008. Predictable Programming on a Precision Timed Architecture. In Proceedings of the 2008 International Conference on Compilers, Architectures and Synthesis for Embedded Systems. 137–146.

[38] Bruno Monteiro Rocha Lima, Luiz Claudio Sampaio Ramos, Thiago Eustáquio Alves de Oliveira, Vinicius Prado da Fonseca, and Emil M Petriu. 2019. Heart Rate Detection Using a Multimodal Tactile Sensor and a Z-score Based Peak Detection Algorithm. CMBES Proceedings 42 (2019).

[39] C. L. Liu and J. W. Layland. 1973. Scheduling algorithms for multiprogramming in a hard real-time environment. J. ACM (1973).

[40] Fang Liu. 2016. Statistical Properties of Sanitized Results from Differentially Private Laplace Mechanism with Univariate Bounding Constraints. arXiv preprint arXiv:1607.08554 (2016).

[41] Fang Liu. 2018. Generalized Gaussian mechanism for differential privacy. IEEE Transactions on Knowledge and Data Engineering 31, 4 (2018), 747–756.

[42] Songran Liu, Nan Guan, Dong Ji, Weichen Liu, Xue Liu, and Wang Yi. 2019. Leaking your engine speed by spectrum analysis of real-Time scheduling sequences. Journal of Systems Architecture (2019).

[43] Chenyang Lu, John A Stankovic, Sang H Son, and Gang Tao. 2002. Feedback control real-time scheduling: Framework, modeling, and algorithms. Real-Time Systems 23, 1-2 (2002), 85–126.

[44] Pau Marti, Caixue Lin, Scott A Brandt, Manel Velasco, and Josep M Fuertes. 2004. Optimal state feedback based resource allocation for resource-constrained control tasks. In 25th IEEE International Real-Time Systems Symposium. IEEE, 161–172.

[45] Frank J Massey Jr. 1951. The Kolmogorov-Smirnov test for goodness of fit. Journal of the American statistical Association 46, 253 (1951), 68–78.

[46] Frank D McSherry. 2009. Privacy integrated queries: an extensible platform for privacy-preserving data analysis. In Proceedings of the 2009 ACM SIGMOD International Conference on Management of data. 19–30.

[47] Byungho Min and Vijay Varadharajan. 2014. Design and Analysis of Security Attacks against Critical Smart Grid Infrastructures. 2014 19th International Conference on Engineering of Complex Computer Systems 0 (2014), 59–68. https://doi.org/10.1109/ICECCS.2014.16

[48] Mitra Nasri, Thidapat Chantem, Gedare Bloom, and Ryan M Gerdes. 2019. On the Pitfalls and Vulnerabilities of Schedule Randomization against Schedule-Based Attacks. In 2019 IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS). IEEE, 103–116.

[49] R. Pellizzoni, N. Paryab, M. Yoon, S. Bak, S. Mohan, and R. B. Bobba. 2015. A generalized model for preventing information leakage in hard real-time systems. In 21st IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS). 271–282. https://doi.org/10.1109/RTAS.2015.7108450

[50] David Schneider. 2015. Jeep Hacking 101. IEEE Spectrum (Aug 2015). http://spectrum.ieee.org/cars-that-think/transportation/systems/jeep-hacking-101.

[51] Michael Schwarz, Moritz Lipp, Daniel Gruss, Samuel Weiser, Clémentine Maurice, Raphael Spreitzer, and Stefan Mangard. 2018. Keydrown: Eliminating software-based keystroke timing side-channel attacks. In Network and Distributed System Security Symposium. Internet Society.

[52] D. Shepard, J. Bhatti, and T. Humphreys. 2012. Drone Hack: Spoofing Attack Demonstration on a Civilian Unmanned Aerial Vehicle. GPS World (August 2012).

[53] Joon Son and Alves-Foss. 2006. Covert Timing Channel Analysis of Rate Monotonic Real-Time Scheduling Algorithm in MLS Systems. In 2006 IEEE Information Assurance Workshop. 361–368. https://doi.org/10.1109/IAW.2006.1652117

[54] Hugo Teso. 2013. Aircraft Hacking. In Fourth Annual HITB Security Conference in Europe.

[55] Nick Tsalis, Efstratios Vasilellis, Despina Mentzelioti, and Theodore Apostolopoulos. 2019. A Taxonomy of Side Channel Attacks on Critical Infrastructures and Relevant Systems. In Critical Infrastructure Security and Resilience. Springer, 283–313.

[56] Marcus Völp, Claude-Joachim Hamann, and Hermann Härtig. 2008. Avoiding Timing Channels in Fixed-priority Schedulers. In Proceedings of the 2008 ACM Symposium on Information, Computer and Communications Security (ASIACCS) (Tokyo, Japan). 44–55. https://doi.org/10.1145/1368310.1368320

[57] Nils Vreman, Richard Pates, Kristin Krüger, Gerhard Fohler, and Martina Maggio. 2019. Minimizing Side-Channel Attack Vulnerability via Schedule Randomization. In 2019 IEEE 58th Conference on Decision and Control (CDC). IEEE, 2928–2933.

[58] M. Völp, B. Engel, C. Hamann, and H. Härtig. 2013. On confidentiality-preserving real-time locking protocols. In 2013 IEEE 19th Real-Time and Embedded Technology and Applications Symposium (RTAS). 153–162. https://doi.org/10.1109/RTAS.2013.6531088

[59] Yu Wang, Zhenqi Huang, Sayan Mitra, and Geir E Dullerud. 2017. Differential