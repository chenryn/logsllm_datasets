**Cardoso, J., "Poseidon: A Framework to Assist Web Process Design Based on Business Cases," *International Journal of Cooperative Information Systems (IJCIS)*, World Scientific Publishing, Vol. 15, No. 1, pp. 23-55, March 2006.**

### Poseidon: A Framework to Assist Web Process Design Based on Business Cases

**Jorge Cardoso**
Department of Mathematics and Engineering
University of Madeira
9000-390 - Funchal
Email: [PI:EMAIL]

#### Abstract
Current systems and infrastructures supporting web services and web processes often rely on workflow technology for management and coordination. Over the past two decades, extensive research has been conducted on workflow management system architectures, language specifications, and workflow analysis techniques. However, the lifecycle of process application development remains an underexplored area. This study introduces the Poseidon framework, which aims to assist and guide process analysts and designers in their tasks. The framework includes both participative and analytical design methods. The participative phase begins with a clean-sheet approach, constructing a business case table to capture all the business cases represented by a process. The subsequent analytical design phase derives scheduling functions from the business case table to build the process structure.

### 1. Introduction

With the maturation of e-commerce infrastructures, organizations can now incorporate web services into their business processes. While some web services may operate independently, it is more common for them to be integrated into workflows (Fensel and Bussler, 2002). Workflow systems are essential for managing e-commerce applications that span multiple organizations, as they can integrate business objects to set up e-services quickly and cost-effectively (Shegalov et al., 2001).

A wide range of workflow system architectures has been developed to support various types of business processes. With minor modifications, these systems can also manage web processes. According to Cardoso et al. (2004), over 200 workflow products are available in the market. Most of these systems provide tools for designing workflows graphically and managing their execution.

Research in this field has primarily focused on three areas: workflow architectures, specification languages, and process analysis. Workflow architectures include fully distributed, database-oriented, web-based, message-based, and agent-based systems (Kochut et al., 1999; Ceri et al., 1997; Miller et al., 1998; Alonso et al., 1994; Jennings et al., 1996). Various specification languages, such as PIF, PSL, BPML, WPDL, WSFL, BPEL4WS, and DAML-S, have been developed to model processes. Additionally, significant work has been done on Petri-nets and simulation techniques to analyze process properties (Aalst, 1998; Chandrasekaran et al., 2002). Recent research has also focused on analyzing non-functional properties of processes (Eder et al., 1999; Sadiq et al., 2000; Son et al., 2001; Cardoso et al., 2002).

Despite the advancements in workflow architectures, specification languages, and process analysis, the lifecycle of process application development has been largely overlooked. Studies on the lifecycle of process development are scarce. Sheth et al. (1996) identified workflow and process modeling as a key research issue, and Casati et al. (2002) noted the lack of methodologies covering the phases of workflow application development.

The lifecycle of workflow application development is similar to that of software development (Sommerville, 2000), encompassing requirement identification, design, implementation, testing, and documentation. Adequate methodologies and specific tools are crucial for the success of any workflow project.

In this paper, we argue that better methodological support is necessary for the stepwise creation of web processes and workflows. The design of complex processes requires a methodology that ensures correctness and meets user needs. There is a need for frameworks and tools to assist process analysts and designers in managing the inherent complexity of web process applications.

Casati et al. (2002) proposed a comprehensive methodology for developing workflow applications, using UML and UML extensions for business process modeling. Reijers et al. (Reijers, 2003; Reijers et al., 2003) introduced a product-based approach for process design or redesign. Sadiq and Orlowska (1999) presented a layered framework for workflow modeling, but did not provide a detailed methodology for the structural modeling phase. Cardoso and Teixeira (1998) and Cardoso and Sheth (2003) focused on graphical process modeling and the composition of workflows using semantic web technologies.

Compared to these approaches, our work focuses on developing a framework, named Poseidon, to assist process analysts and designers in the requirement and design phases. The framework includes both participative and analytical design methods, driven by business cases rather than products.

This paper is structured as follows: Section 2 presents the requirements and methodology of the Poseidon framework. Section 3 describes the design analysis phase and the Poseidon framework. Section 4 provides an evaluation of the framework and outlines future work. Finally, Section 5 concludes the paper.

### 2. Poseidon: Requirements and Methodology

In organizations where business processes are repetitive and predictable, such as banking and insurance, workflow systems are becoming increasingly important. However, methods to support process development are still lacking. New techniques and methods are needed to enhance the quality of workflows and reduce the effort required for their production.

To address the lack of suitable tools for developing and deploying web processes and workflows, we have created the Poseidon framework. This framework is designed for use by process analysts and designers during the requirement gathering and design phases of the process development lifecycle.

#### 2.1 Framework Requirements

The Poseidon framework is a conceptual structure composed of steps, procedures, and algorithms that guide process design. The following requirements were considered in its development:

- **Simplicity and ease of use**: The methodology should be easily understood by process analysts, designers, and interviewees, including those without workflow expertise.
- **Business process size**: The framework should support the modeling of small and medium-sized business processes, with small workflows having up to 15 tasks and medium-sized workflows having approximately 30 tasks.
- **Business process structure**: The framework is better suited for production and administrative processes, which are more structured, predictable, and repetitive.
- **Degree of automation**: The framework aims to automate as many steps as possible to enable faster process development with lower costs.

#### 2.2 Methodology

This section provides an overview of the Poseidon framework, which constructs process graphs based on knowledge gathered from interviews, group brainstorming sessions, and meetings. The interviews involve process analysts and experts who understand the business logic of the processes.

The framework consists of four main phases:

1. **Construction of Business Case Table**: Through interviews, a business case table is built to capture the various cases represented by the process.
2. **Extraction of Scheduling Functions**: Scheduling functions are derived from the business case table. Each function is a Boolean function with parameters from the business case table, indicating whether a task is scheduled at runtime.
3. **Identification of Basic Block Structures**: Using the scheduling functions, sequential and parallel building blocks are identified, along with conditional blocks for non-deterministic routing.
4. **Cleaning and Implementation of the Process Graph**: The basic building blocks are integrated, and the process graph is cleaned and, if necessary, restructured for clarity.

### 3. Poseidon Framework

The Poseidon framework takes a set of task names as input and produces a process model or workflow as output. The process models include tasks or web services, transitions, control flow variables, and control flow conditions. The framework relies heavily on interviews to gather the necessary knowledge.

#### 3.1 Business Case Table

To capture all the cases represented in a process, we introduce the concept of a business case table. The table includes...