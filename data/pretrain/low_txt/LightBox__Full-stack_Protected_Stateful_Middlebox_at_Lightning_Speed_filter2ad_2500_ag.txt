以下是经过优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

1. Juhyeng Han, Seongmin Kim, Jaehyeong Ha, and Dongsu Han. 2017. SGX-Box: Enabling Visibility on Encrypted Traffic Using a Secure Middlebox Module. In Proc. of the First Asia-Pacific Workshop on Networking.

2. Tyler Hunt, Zhiting Zhu, Yuanzhong Xu, Simon Peter, and Emmett Witchel. 2016. Ryoan: A Distributed Sandbox for Untrusted Computation on Secret Data. In Proc. of USENIX OSDI.

3. Mohsen Imani, Mohammad Saidur Rahman, and Matthew Wright. 2018. Adversarial Traces for Website Fingerprinting Defense. In Proc. of ACM CCS.

4. Zscaler Inc. 2019. Encrypted Traffic Dashboard. Online at: https://www.zscaler.com/threatlabz/encrypted-traffic-dashboard.

5. Zscaler Inc. 2019. SSL Inspection. Online at: https://www.zscaler.com/products/ssl-inspection.

6. Zscaler Inc. 2019. Zscaler Architecture: Cloud from the Beginning. Online at: https://www.zscaler.com/products/cloud-architecture-security-as-a-service.

7. Intel. 2017. Data Plane Development Kit. Online at: http://www.dpdk.org.

8. Prerit Jain, Soham Desai, Seongmin Kim, Ming-Wei Shih, J Lee, Changho Choi, Youjung Shin, Taesoo Kim, Brent Byunghoon Kang, and Dongsu Han. 2016. OpenSGX: An Open Platform for SGX Research. In Proc. of NDSS.

9. Muhammad Asim Jamshed, Jihyung Lee, Sangwoo Moon, Insu Yun, Deokjin Kim, Sungryoul Lee, Yung Yi, and KyoungSoo Park. 2012. Kargus: A Highly-Scalable Software-Based Intrusion Detection System. In Proc. of ACM CCS.

10. Muhammad Asim Jamshed, YoungGyoun Moon, Donghwi Kim, Dongsu Han, and KyoungSoo Park. 2014. mOS: A Reusable Networking Stack for Flow Monitoring Middleboxes. In Proc. of USENIX NSDI.

11. Murad Kablan, Azzam Alsudais, Eric Keller, and Franck Le. 2017. Stateless Network Functions: Breaking the Tight Coupling of State and Processing. In Proc. of USENIX NSDI.

12. Junaid Khalid, Aaron Gember-Jacobson, Roney Michael, Anubhavnidhi Abhashkumar, and Aditya Akella. 2016. Paving the Way for NFV: Simplifying Middlebox Modifications Using StateAlyzr. In Proc. of USENIX NSDI.

13. Changhoon Kim, Matthew Caesar, Alexandre Gerber, and Jennifer Rexford. 2009. Revisiting Route Caching: The World Should Be Flat. In Proc. of International Conference on Passive and Active Network Measurement.

14. Eddie Kohler, Robert Morris, Benjie Chen, John Jannotti, and M Frans Kaashoek. 2000. The Click Modular Router. ACM Transactions on Computer Systems (TOCS) 18, 3 (2000), 263–297.

15. Leslie Lamport. 1977. Proving the Correctness of Multiprocess Programs. IEEE Transactions on Software Engineering 2 (1977), 125–143.

16. Chang Lan, Justine Sherry, Raluca Ada Popa, and Sylvia Ratnasamy. 2016. EMBArk: Securely Outsourcing Middleboxes to the Cloud. In Proc. of USENIX NSDI.

17. Patrick PC Lee, Tian Bu, and Girish Chandranmenon. 2010. A Lock-Free, Cache-Efficient Multi-Core Synchronization Mechanism for Line-Rate Network Traffic Monitoring. In Proc. of IEEE Parallel & Distributed Processing (IPDPS).

18. Paige Leskin. 2018. The 21 Scariest Data Breaches of 2018. Online at: https://www.businessinsider.com/data-hacks-breaches-biggest-of-2018-2018-12.

19. Hongda Li, Hongxin Hu, Guofei Gu, Gail-Joon Ahn, and Fuqiang Zhang. 2018. vNIDS: Towards Elastic Security with Safe and Efficient Virtualization of Network Intrusion Detection Systems. In Proc. of ACM CCS.

20. Joshua Lind, Christian Priebe, Divya Muthukumaran, Dan O’Keeffe, Pierre-Louis Aublin, Florian Kelbert, Tobias Reiher, David Goltzsche, David Eyers, Rüdiger Kapitza, et al. 2017. Glamdring: Automatic Application Partitioning for Intel SGX. In Proc. of USENIX ATC.

21. Frank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos V Rozas, Hisham Shah, Vedvyas Shanbhogue, and Uday R Savagaonkar. 2013. Innovative Instructions and Software Model for Isolated Execution. In Proc. of ACM HASP.

22. Luca Melis, Hassan Jameel Asghar, Emiliano De Cristofaro, and Mohamed Ali Kaafar. 2016. Private Processing of Outsourced Network Functions: Feasibility and Constructions. In Proc. of ACM SDN-NFV Security.

23. David Mills. 1985. Network Time Protocol. Online at: https://tools.ietf.org/html/rfc958.

24. P. Mishra, R. Poddar, J. Chen, A. Chiesa, and R. A. Popa. 2018. Oblix: An Efficient Oblivious Search Index. In Proc. of IEEE S&P.

25. Ahmad Moghimi, Gorka Irazoqui, and Thomas Eisenbarth. 2017. CacheZoom: How SGX Amplifies the Power of Cache Attacks. In Proc. of CHES.

26. Meni Orenbach, Pavel Lifshits, Marina Minkin, and Mark Silberstein. 2017. Eleos: ExitLess OS Services for SGX Enclaves. In Proc. of ACM Eurosys.

27. Aurojit Panda, Sangjin Han, Keon Jang, Melvin Walls, Sylvia Ratnasamy, and Scott Shenker. 2016. NetBricks: Taking the V out of NFV. In Proc. of USENIX OSDI.

28. Parveen Patel, Deepak Bansal, Lihua Yuan, Ashwin Murthy, Albert Greenberg, David A. Maltz, Randy Kern, Hemant Kumar, Marios Zikos, Hongyu Wu, Changhoon Kim, and Naveen Karri. 2013. Ananta: Cloud Scale Load Balancing. In Proc. of ACM SIGCOMM.

29. Rishabh Poddar, Chang Lan, Raluca Ada Popa, and Sylvia Ratnasamy. 2018. SafeBricks: Shielding Network Functions in the Cloud. In Proc. of USENIX NSDI.

30. HAProxy Project. 2018. The Reliable, High Performance TCP/HTTP Load Balancer. Online at: http://www.haproxy.org/.

31. Andrew Reed and Michael Kranch. 2017. Identifying HTTPS-Protected Netflix Videos in Real-Time. In Proc. of ACM CODASPY.

32. Luigi Rizzo. 2012. Netmap: A Novel Framework for Fast Packet I/O. In Proc. of USENIX ATC.

33. Alan Rusbridger. 2013. The Snowden Leaks and the Public. The New York Review of Books (2013).

34. Satori. 2017. Fast Multi-Core TCP and WebSockets Load Generator. Online at: https://github.com/machinezone/tcpkali.

35. Felix Schuster, Manuel Costa, Cédric Fournet, Christos Gkantsidis, Marcus Peinado, Gloria Mainar-Ruiz, and Mark Russinovich. 2015. VC3: Trustworthy Data Analytics in the Cloud Using SGX. In Proc. of IEEE S&P.

36. Vyas Sekar, Norbert Egi, Sylvia Ratnasamy, Michael K Reiter, and Guangyu Shi. 2012. Design and Implementation of a Consolidated Middlebox Architecture. In Proc. of USENIX NSDI.

37. Jaebaek Seo, Byounyoung Lee, Seongmin Kim, Ming-Wei Shih, Insik Shin, Dongsu Han, and Taesoo Kim. 2017. SGX-Shield: Enabling Address Space Layout Randomization for SGX Programs. In Proc. of NDSS.

38. Fahad Shaon, Murat Kantarcioglu, Zhiqiang Lin, and Latifur Khan. 2017. SGX-BigMatrix: A Practical Encrypted Data Analytic Framework With Trusted Processors. In Proc. of ACM CCS.

39. Justine Sherry, Shaddi Hasan, Colin Scott, Arvind Krishnamurthy, Sylvia Ratnasamy, and Vyas Sekar. 2012. Making Middleboxes Someone Else’s Problem: Network Processing as a Cloud Service. In Proc. of ACM SIGCOMM.

40. Justine Sherry, Chang Lan, Raluca Ada Popa, and Sylvia Ratnasamy. 2015. BlindBox: Deep Packet Inspection for Encrypted Traffic. In Proc. of ACM SIGCOMM.

41. Ming-Wei Shih, Mohan Kumar, Taesoo Kim, and Ada Gavrilovska. 2016. S-NFV: Securing NFV States by Using SGX. In Proc. of ACM SDN-NFV Security.

42. Shweta Shinde, Zheng Leong Chua, Viswesh Narayanan, and Prateek Saxena. 2016. Preventing Page Faults from Telling Your Secrets. In Proc. of AsiaCCS.

43. Payap Sirinam, Mohsen Imani, Marc Juarez, and Matthew Wright. 2018. Deep Fingerprinting: Undermining Website Fingerprinting Defenses with Deep Learning. In Proc. of ACM CCS.

44. Snort. 2018. Network Intrusion Detection & Prevention System. Online at: https://www.snort.org/.

45. Snort. 2018. Rule Subscriptions. Online at: https://www.snort.org/products#rule-subscriptions.

46. Chen Sun, Jun Bi, Zhilong Zheng, Heng Yu, and Hongxin Hu. 2017. NFP: Enabling Network Function Parallelism in NFV. In Proc. of ACM SIGCOMM.

47. Meysam Taassori, Ali Shafiee, and Rajeev Balasubramonian. 2018. VAULT: Reducing Paging Overheads in SGX with Efficient Integrity Verification Structures. In Proc. of ACM ASPLOS.

48. Chia-che Tsai, Donald E Porter, and Mona Vij. 2017. Graphene-SGX: A Practical Library OS for Unmodified Applications on SGX. In Proc. of USENIX ATC.

49. Nirvan Tyagi, Yossi Gilad, Derek Leung, Matei Zaharia, and Nickolai Zeldovich. 2017. Stadium: A Distributed Metadata-Private Messaging System. In Proc. of ACM SOSP.

50. Jelle Van Den Hooff, David Lazar, Matei Zaharia, and Nickolai Zeldovich. 2015. Vuvuzela: Scalable Private Messaging Resistant to Traffic Analysis. In Proc. of ACM SOSP.

51. Michael Walsh, Jeremy Stribling, Maxwell Krohn, Hari Balakrishnan, Robert Morris, and Scott Shenker. 2004. Middleboxes No Longer Considered Harmful. In Proc. of USENIX OSDI.

52. Tao Wang, Xiang Cai, Rishab Nithyanand, Rob Johnson, and Ian Goldberg. 2014. Effective Attacks and Provable Defenses for Website Fingerprinting. In Proc. of USENIX Security.

53. Tao Wang and Ian Goldberg. 2017. Walkie-Talkie: An Efficient Defense Against Passive Website Fingerprinting Attacks. In Proc. of USENIX Security.

54. Wenhao Wang, Guoxing Chen, Xiaorui Pan, Yinqian Zhang, XiaoFeng Wang, Vincent Bindschaedler, Haixu Tang, and Carl A Gunter. 2017. Leaky Cauldron on the Dark Land: Understanding Memory Side-Channel Hazards in SGX. In Proc. of ACM CCS.

55. Nico Weichbrodt, Anil Kurmus, Peter Pietzuch, and Rüdiger Kapitza. 2016. AsyncShock: Exploiting Synchronisation Bugs in Intel SGX Enclaves. In Proc. of ESORICS.

56. Orr Weisse, Valeria Bertacco, and Todd Austin. 2017. Regaining Lost Cycles with HotCalls: A Fast Interface for SGX Secure Enclaves. In Proc. of ACM ISCA.

57. Andrew M. White, Austin R. Matthews, Kevin Z. Snow, and Fabian Monrose. 2011. Phonotactic Reconstruction of Encrypted VoIP Conversations: Hookt on Fon-iks. In Proc. of IEEE S&P.

58. wolfSSL Inc. 2017. wolfSSL with Intel SGX. Online at: https://www.wolfssl.com/wolfssl-with-intel-sgx/.

59. Yuanzhong Xu, Weidong Cui, and Marcus Peinado. 2015. Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems. In Proc. of IEEE S&P.

60. Xingliang Yuan, Xinyu Wang, Jianxiong Lin, and Cong Wang. 2016. Privacy-Preserving Deep Packet Inspection in Outsourced Middleboxes. In Proc. of IEEE INFOCOM.

61. Fan Zhang. 2017. mbedtls-SGX. Online at: https://github.com/bl4ck5un/mbedtls-SGX.

62. Fan Zhang, Ethan Cecchetti, Kyle Croman, Ari Juels, and Elaine Shi. 2016. Town Crier: An Authenticated Data Feed for Smart Contracts. In Proc. of ACM CCS.

---

### 多线程支持

许多中间件利用多线程来实现高吞吐量 [22, 44, 45, 73]。它们使用的标准并行架构依赖于接收端扩展（RSS）或等效的软件方法，将流量分配到多个队列中。每个流由单个线程处理，不会影响其他线程。我们为etap配备了这种NIC功能的仿真，以支持多线程中间件。

通过仿真，etap将创建多个RX环，并且每个中间件线程绑定到一个RX环。核心驱动程序将使用五元组哈希来决定将数据包推送到哪个环，而轮询驱动程序只会读取绑定到调用线程的环中的数据包。随着环的数量增加，每个环的大小应保持较小，以避免过多的Enclave内存消耗。请注意，我们在第6节中讨论了实际的环大小。

**多线程状态管理**

RSS机制确保每个流与其他流隔离。对于多线程中间件，我们为每个线程分配一组独立的流缓存、查找表和流存储。这些集合之间没有交集，因此所有线程可以同时进行流跟踪而不会出现数据竞争。与单线程情况相比，这种分区方案在管理相同数量的流时不会改变内存使用情况。

### 服务模型扩展

为了清楚地展示LightBox的核心设计，迄今为止我们主要关注了一个基本的服务模型，即单一中间件和单一服务提供商托管中间件服务。现在我们讨论如何轻松支持一些其他典型场景。

**服务功能链**

有时多个逻辑中间件被链接在一起以处理网络流量，这通常被称为服务功能链 [43, 83]。最近两个用于安全中间件外包的系统也考虑了这种服务模型。SafeBricks [66] 在同一个Enclave内链接中间件，并通过对每个中间件实施最小特权来进行隔离。相比之下，ShieldBox [86] 通过不同的进程在同一物理机上运行不同的Enclave来链接中间件。然而，这两种设计都在单个物理机上运行，该机器具有有限的EPC大小，并未考虑资源密集型的状态中间件。在一个Enclave中执行单个状态中间件已经是一项非同小可的任务——这是本文努力实现的目标——更不用说在同一台机器上运行多个Enclave状态中间件，这几乎不可避免会导致严重的性能问题。

为此，我们建议在单独的物理机上使用一个LightBox实例来驱动链中的每个中间件。沿着链路，一个实例的etap将同时与前一个和下一个实例的etap（或网关处的etap-cli）对等。这样，链中的每个中间件都可以以线路速率访问数据包并全速运行。需要注意的是，安全引导应相应调整。特别是，网络管理员需要验证每个LightBox，并为其提供适当的对等信息。

**不相关的服务提供商**

中间件外包可能涉及不相关的一组服务提供商。主要的服务提供商可能提供网络和计算平台，而其他服务提供商（如专业的网络安全公司）可以提供定制的中间件功能和/或处理规则。这种服务市场的细分要求对安全服务组合进行更精细的控制。

SGX证明实用工具使联合服务的任何参与者都能在主要服务提供商的平台上验证Enclave。因此，他们可以将其专有代码/规则集安全地提供给受信任的引导Enclave。代码随后在引导Enclave中编译，并与规则一起提供给LightBox Enclave。这种在Enclave中即时编译私有代码的方法首先在[72]中描述。在[66]中，它被应用于使用不同网络功能供应商的引导安全中间件。感兴趣的读者可以参阅[66]以获取更多详细信息。

---

希望这些修改能够帮助您更好地理解和使用这些内容。如果有进一步的需求，请随时告知。