# Summary of Costs for Each Procedure (ms) for the Scheme Described in Section 7

| Security Level | KeyGen | ProbGen | Compute | Verify |
|---------------|--------|---------|---------|--------|
| 80-bit        | 0.5 + 9.6d | 10d | 9d | 18 |
| 128-bit       | 1.4 + 21.7d | 22d | 24d | 44 |

| Security Level | KeyGen | ProbGen | Compute | Verify |
|---------------|--------|---------|---------|--------|
| 80-bit        | 0.004 + 0.077d | 0.08d | 0.07d | 0.14 |
| 128-bit       | 0.007 + 0.111d | 0.11d | 0.12d | 0.23 |

| Security Level | KeyGen | ProbGen | Compute | Verify |
|---------------|--------|---------|---------|--------|
| 80-bit        | 5.35 | 5.35 | 10.53 | 4.41 |
| 128-bit       | 5.18 | 5.18 | 10.87 | 4.48 |

## On the Impact of Homomorphic Hashing

Our experiments demonstrated the significant improvement achieved by applying our technique of homomorphic hashing. We compared our ad-hoc protocols with some of the best possible instantiations of our generic scheme and observed a remarkable speedup. For instance, in the case of multivariate quadratic polynomials, one could use BV to encrypt and then apply a homomorphic MAC [7] to authenticate each of the 2n ciphertext entries. However, this would require authenticating larger circuits: for example, validating 2n additions over Z/qZ for the addition of two ciphertexts, and at least 4(n log n) multiplications and 5n additions over Z/qZ for a multiplication of ciphertexts (estimated assuming FFT multiplication; using a trivial method would lead to 4n² multiplications and 5n additions). In contrast, by applying our homomorphic hash, we can use the same original circuit, and the additional cost of computing the hash becomes negligible.

In Tables 7 and 8, we provide a list of ratios between the cost of the alternate approach (tagging without hashing) versus our approach (hashing and then tagging) for the schemes described in Sections 6 and 5, respectively.

### Table 7: Ratios Between the Costs of Tagging Each Single Ciphertext Entry Versus "Hashing and Tagging" for the Scheme in Section 6

| Security Level | KeyGen | Compute | Verify |
|---------------|--------|---------|--------|
| 80-bit        | 304 | 3223 | 762 |
| 128-bit       | 368 | 6641 | 951 |

### Table 8: Ratios Between the Costs of Tagging Each Single Ciphertext Entry Versus "Hashing and Tagging" for the Scheme in Section 5

| Security Level | ProbGen | Add1 | Add2 | Const. Mult. | Mult. (FFT) | Mult. (Trivial) | Verify |
|---------------|---------|------|------|-------------|-------------|-----------------|--------|
| 80-bit        | 774 | 2453 | 3680 | 4943 | 13632 | 73 · 10⁶ | 7929 |
| 128-bit       | 935 | 2555 | 3832 | 8144 | 18974 | 167 · 10⁶ | 8519 |

**Note:** Add1 represents the overhead of adding before multiplying, while Add2 represents the overhead of adding after multiplying.

## Acknowledgments

The research of Dario Fiore has been partially supported by the European Commission’s Seventh Framework Programme Marie Curie Cofund Action AMAROUT II (grant no. 291803), and by the Madrid Regional Government under project PROMETIDOS-CM (ref. S2009/TIC1465).

The research of Rosario Gennaro was sponsored by the U.S. Army Research Laboratory and the U.K. Ministry of Defense and was accomplished under Agreement Number W911NF-06-3-0001. The views and conclusions contained in this document are those of the author(s) and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Army Research Laboratory, the U.S. Government, the U.K. Ministry of Defence, or the U.K. Government. The U.S. and U.K. Governments are authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation hereon.

The research of Valerio Pastro was supported by NSF Grant No. 1017660.

## References

1. B. Applebaum, Y. Ishai, and E. Kushilevitz. From secrecy to soundness: Efficient verification via secure computation. In ICALP (1), pages 152–163, 2010.
2. S. Arora and S. Safra. Probabilistic checking of proofs; a new characterization of NP. In FOCS, pages 2–13. IEEE Computer Society, 1992.
3. L. Babai. Trading group theory for randomness. In R. Sedgewick, editor, STOC, pages 421–429. ACM, 1985.
4. L. Babai, L. Fortnow, L. A. Levin, and M. Szegedy. Checking computations in polylogarithmic time. In C. Koutsougeras and J. S. Vitter, editors, STOC, pages 21–31. ACM, 1991.
5. L. Babai, L. Fortnow, and C. Lund. Non-deterministic exponential time has two-prover interactive protocols. In FOCS, pages 16–25. IEEE Computer Society, 1990.
6. M. Backes, D. Fiore, and R. M. Reischuk. Verifiable delegation of computation on outsourced data. In 2013 ACM Conference on Computer and Communication Security. ACM Press, November 2013.
7. M. Bellare, V. T. Hoang, and S. Keelveedhi. Instantiating random oracles via UCEs. In Canetti and Garay [21], pages 398–415.
8. M. Bellare, V. T. Hoang, and P. Rogaway. Adaptively secure garbling with applications to one-time programs and secure outsourcing. In X. Wang and K. Sako, editors, ASIACRYPT, volume 7658 of Lecture Notes in Computer Science, pages 134–153. Springer, 2012.
9. M. Bellare, V. T. Hoang, and P. Rogaway. Foundations of garbled circuits. In ACM Conference on Computer and Communications Security, pages 784–796, 2012.
10. E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza. SNARKs for C: Verifying program executions succinctly and in zero knowledge. In CRYPTO, volume 8043 of Lecture Notes in Computer Science, pages 90–108. Springer, 2013.
11. S. Benabbas, R. Gennaro, and Y. Vahlis. Verifiable delegation of computation over large datasets. In Rogaway [53], pages 111–131.
12. N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer. From extractable collision resistance to succinct non-interactive arguments of knowledge, and back again. In Goldwasser [33], pages 326–349.
13. N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer. Recursive composition and bootstrapping for SNARKs and proof-carrying data. IACR Cryptology ePrint Archive, 2012. http://eprint.iacr.org/2012/095.
14. D. Boneh, X. Boyen, and E.-J. Goh. Hierarchical identity-based encryption with constant size ciphertext. In EUROCRYPT, volume 3494 of Lecture Notes in Computer Science, pages 440–456. Springer, 2005.
15. D. Boneh, X. Boyen, and H. Shacham. Short group signatures. In M. K. Franklin, editor, CRYPTO, volume 3152 of Lecture Notes in Computer Science, pages 41–55. Springer, 2004.
16. D. Boneh, A. Sahai, and B. Waters. Functional encryption: Definitions and challenges. In TCC, volume 6597 of Lecture Notes in Computer Science, pages 253–273. Springer, 2011.
17. Z. Brakerski. Fully homomorphic encryption without modulus switching from classical gapsvp. In R. Safavi-Naini and R. Canetti, editors, CRYPTO, volume 7417 of Lecture Notes in Computer Science, pages 868–886. Springer, 2012.
18. Z. Brakerski, C. Gentry, and V. Vaikuntanathan. (Leveled) fully homomorphic encryption without bootstrapping. In Goldwasser [33], pages 309–325.
19. Z. Brakerski and V. Vaikuntanathan. Fully homomorphic encryption from ring-LWE and security for key-dependent messages. In Rogaway [53], pages 505–524.
20. R. Canetti and J. A. Garay, editors. Advances in Cryptology - CRYPTO 2013 - 33rd Annual Cryptology Conference, Santa Barbara, CA, USA, August 18-22, 2013. Proceedings, Part II, volume 8043 of Lecture Notes in Computer Science. Springer, 2013.
21. D. Catalano, A. Marcedone, and O. Puglisi. Authenticating computation on groups: New homomorphic primitives and applications. Cryptology ePrint Archive, Report 2013/801, 2013. http://eprint.iacr.org/.
22. K.-M. Chung, Y. T. Kalai, and S. P. Vadhan. Improved delegation of computation using fully homomorphic encryption. In CRYPTO, volume 6223 of Lecture Notes in Computer Science, pages 483–501. Springer, 2010.
23. G. Cormode, M. Mitzenmacher, and J. Thaler. Practical verified computation with streaming interactive proofs. In Innovations in Theoretical Computer Science – ITCS, pages 90–112. ACM, 2012.
24. S. Garg, C. Gentry, S. Halevi, M. Raykova, A. Sahai, and B. Waters. Candidate indistinguishability obfuscation and functional encryption for all circuits. In FOCS, pages 40–49, 2013.
25. R. Gennaro, C. Gentry, and B. Parno. Non-interactive verifiable computing: Outsourcing computation to untrusted workers. In Rabin [51], pages 465–482.
26. R. Gennaro, C. Gentry, B. Parno, and M. Raykova. Quadratic span programs and succinct NIZKs without PCPs. In T. Johansson and P. Q. Nguyen, editors, EUROCRYPT, volume 7881 of Lecture Notes in Computer Science, pages 626–645. Springer, 2013.
27. R. Gennaro and D. Wichs. Fully homomorphic message authenticators. In ASIACRYPT (2), volume 8270 of Lecture Notes in Computer Science, pages 301–320. Springer, 2013.
28. C. Gentry. Fully homomorphic encryption using ideal lattices. In M. Mitzenmacher, editor, STOC, pages 169–178. ACM, 2009.
29. C. Gentry. Toward basing fully homomorphic encryption on worst-case hardness. In Rabin [51], pages 116–137.
30. C. Gentry and S. Halevi. Implementing Gentry’s fully-homomorphic encryption scheme. In K. G. Paterson, editor, EUROCRYPT, volume 6632 of Lecture Notes in Computer Science, pages 129–148. Springer, 2011.
31. C. Gentry, S. Halevi, and N. P. Smart. Fully homomorphic encryption with polylog overhead. In D. Pointcheval and T. Johansson, editors, EUROCRYPT, volume 7237 of Lecture Notes in Computer Science, pages 465–482. Springer, 2012.
32. S. Goldwasser, editor. Innovations in Theoretical Computer Science 2012, Cambridge, MA, USA, January 8-10, 2012. ACM, 2012.
33. S. Goldwasser, Y. T. Kalai, R. A. Popa, V. Vaikuntanathan, and N. Zeldovich. Reusable garbled circuits and succinct functional encryption. In STOC, pages 555–564, 2013.
34. S. Goldwasser, Y. T. Kalai, and G. N. Rothblum. Delegating computation: Interactive proofs for muggles. In C. Dwork, editor, STOC, pages 113–122. ACM, 2008.
35. S. Goldwasser, H. Lin, and A. Rubinstein. Delegation of computation without rejection problem from designated verifier CS-proofs. IACR Cryptology ePrint Archive, 2011:456, 2011.
36. S. Goldwasser, S. Micali, and C. Rackoff. The knowledge complexity of interactive proof systems. SIAM J. Comput., 18(1):186–208, 1989.
37. J. Groth. Short pairing-based non-interactive zero-knowledge arguments. In ASIACRYPT, pages 321–340, 2010.
38. S. Halevi and V. Shoup. HElib. https://github.com/shaih/HElib. Accessed: 2014-05-14.
39. C. Joo and A. Yun. Homomorphic authenticated encryption secure against chosen-ciphertext attack. IACR Cryptology ePrint Archive, 2013:726, 2013.
40. M. Joye and B. Libert. Efficient cryptosystems from 2k-th power residue symbols. In EUROCRYPT, volume 7881 of Lecture Notes in Computer Science, pages 72–92. Springer, 2013.
41. J. Kilian. A note on efficient zero-knowledge proofs and arguments (extended abstract). In S. R. Kosaraju, M. Fellows, A. Wigderson, and J. A. Ellis, editors, STOC, pages 723–732. ACM, 1992.
42. J. Kilian. Improved efficient arguments (preliminary version). In D. Coppersmith, editor, CRYPTO, volume 963 of Lecture Notes in Computer Science, pages 311–324. Springer, 1995.
43. B. Libert, T. Peters, M. Joye, and M. Yung. Linearly homomorphic structure-preserving signatures and their applications. In Canetti and Garay [21], pages 289–307.
44. H. Lipmaa. Progression-free sets and sublinear pairing-based non-interactive zero-knowledge arguments. In TCC, volume 7194 of Lecture Notes in Computer Science, pages 169–189. Springer, 2012.
45. B. Lynn. PBC library. http://crypto.stanford.edu/pbc/. Accessed: 2014-05-14.
46. V. Lyubashevsky, C. Peikert, and O. Regev. On ideal lattices and learning with errors over rings. In H. Gilbert, editor, EUROCRYPT, volume 6110 of Lecture Notes in Computer Science, pages 1–23. Springer, 2010.
47. S. Micali. CS proofs (extended abstracts). In FOCS, pages 436–453. IEEE Computer Society, 1994.
48. N/A, editor. 2013 IEEE Symposium on Security and Privacy, SP 2013, Berkeley, CA, USA, May 19-22, 2013. IEEE Computer Society, 2013.
49. B. Parno, J. Howell, C. Gentry, and M. Raykova. Pinocchio: Nearly practical verifiable computation. In N/A [1], pages 238–252.
50. B. Parno, M. Raykova, and V. Vaikuntanathan. How to delegate and verify in public: Verifiable computation from attribute-based encryption. In TCC, volume 7194 of Lecture Notes in Computer Science, pages 422–439. Springer, 2012.
51. T. Rabin, editor. Advances in Cryptology - CRYPTO 2010, 30th Annual Cryptology Conference, Santa Barbara, CA, USA, August 15-19, 2010. Proceedings, volume 6223 of Lecture Notes in Computer Science. Springer, 2010.
52. R. Rivest, L. Adleman, and M. Dertouzos. On data banks and privacy homomorphisms. Foundations of Secure Computation, pages 169–177, 1978.
53. P. Rogaway, editor. Advances in Cryptology - CRYPTO 2011 - 31st Annual Cryptology Conference, Santa Barbara, CA, USA, August 14-18, 2011. Proceedings, volume 6841 of Lecture Notes in Computer Science. Springer, 2011.
54. S. T. V. Setty, R. McPherson, A. J. Blumberg, and M. Walfish. Making argument systems for outsourced computation practical (sometimes). In NDSS, 2012.
55. S. T. V. Setty, V. Vu, N. Panpalia, B. Braun, A. J. Blumberg, and M. Walfish. Taking proof-based verified computation a few steps closer to practicality. In USENIX Security Symposium, pages 253–268, 2012.
56. V. Shoup. NTL library. http://www.shoup.net/ntl/. Accessed: 2014-05-14.
57. N. P. Smart and F. Vercauteren. Fully homomorphic encryption with relatively small key and ciphertext sizes. In P. Q. Nguyen and D. Pointcheval, editors, Public Key Cryptography, volume 6056 of Lecture Notes in Computer Science, pages 420–443. Springer, 2010.
58. N. P. Smart and F. Vercauteren. Fully homomorphic SIMD operations. IACR Cryptology ePrint Archive, 2011:133, 2011.
59. J. Thaler. Time-optimal interactive proofs for circuit evaluation. In CRYPTO, volume 8043 of Lecture Notes in Computer Science, pages 71–89. Springer, 2013.
60. V. Vu, S. Setty, A. Blumberg, and M. Walfish. A hybrid architecture for interactive verifiable computation. In N/A [1], pages 223–237.