### Transaction Fee Rates for Tpuzzle and Tsolve

We use a lower transaction fee rate of 15 Satoshi/byte for Tpuzzle and Tsolve (see Table IV) because we are not in a hurry to have these transactions confirmed. Specifically, if A refuses to sign Tcash(A, T), then the Payment Phase with A ends early (even before the Cash-Out Phase begins), and Tpuzzle and Tsolve are immediately posted to the blockchain. For more details, see Section V-C.

### Table II: Average Performance of RSA-Puzzle-Solver and Classic Tumbler (100 Trials)

| Protocol | Compute Time (s) | Running Time (Boston-New York) (s) | RTT (Boston-New York) (s) | Running Time (Boston-Tokyo) (s) | RTT (Boston-Tokyo) (s) | Bandwidth (KB) |
|----------|------------------|-----------------------------------|---------------------------|---------------------------------|------------------------|----------------|
| RSA-puzzle-solving protocol | 0.398 | 0.846 | 0.007949 | 4.18 | 0.186 | 269 |
| Classic Tumbler (in clear) | 0.614 | 1.190 | 0.008036 | 5.99 | 0.187 | 326 |
| Classic Tumbler (B over Tor) | 0.614 | 3.10 | 0.0875 | 8.37 | 0.273 | 342 |
| Classic Tumbler (Both over Tor) | 0.614 | 6.84 | 0.0875 | 10.8 | 0.273 | 384 |

### Table III: Average Off-Blockchain Running Times of TumbleBit’s Phases (100 Trials)

| Phase | Compute Time (s) | Running Time (Boston-New York-Toronto) (s) | Running Time (Boston-Frankfurt-Tokyo) (s) |
|-------|------------------|--------------------------------------------|-------------------------------------------|
| Escrow | 0.2052 | 0.3303 | 1.5503 |
| Payment | 0.3878 | 1.1352 | 4.3455 |
| Cash-Out | 0.0046 | 0.0069 | 0.0068 |

### Table IV: Transaction Sizes and Fees in Our Tests

| Transaction | Size (B) | Satoshi/byte | Fee (in BTC) |
|-------------|----------|--------------|--------------|
| Tescr | 190 | 30 | 0.000057 |
| Tcash | 447 | 30 | 0.000134 |
| Trefund for Tescr | 373 | 30 | 0.000111 |
| Tpuzzle | 447 | 15 | 0.000067 |
| Tsolve | 907 | 15 | 0.000136 |
| Trefund for Tpuzzle | 651 | 20 | 0.000130 |

### Test Completion Details

This test was completed in 23 blocks in total, with the Escrow Phase taking 16 blocks, the Payment Phase taking 1 block, and the Cash-Out Phase taking 6 blocks. However, our protocol could have completed much faster, e.g., with 1 block for the Escrow Phase and 1 block for the Cash Out Phase. A Bitcoin block can typically hold approximately 5260 of our 2-of-2 escrow transactions Tescr and approximately 2440 of our cash-out transactions Tcash. We could increase transaction fees to ensure that the Escrow Phase and Cash-Out phase (each confirming 2×800 transactions) occur within one block. In our tests, we used fairly conservative transaction fees (Table IV). As a classic Tumbler, we expect TumbleBit to have a higher denomination than the 0.0000769 BTC we used for our test. For instance, transaction fees of 60 Satoshi per Byte (0.0007644 BTC/user) are approximately 1/1000 of a denomination of 0.5 BTC.

### Test with Uncooperative Behavior

Our second run with only 10 users (5 payers and 5 payees) demonstrates how fair exchange is enforced in the face of uncooperative or malicious parties. Transactions Tescr(A, T) and Tpuzzle were timelocked for 10 blocks, and Tescr(T, B) was timelocked for 15 blocks. All escrow transactions Tescr(A, T) are funded by TXID, and all escrow transactions Tescr(T, B) are funded by TXID. Two payer-payee pairs completed the protocol successfully. For the remaining three pairs, some party aborted the protocol:

**Case 1:** The Tumbler T (or, equivalently, Alice A1) refused to cooperate after the Escrow Phase. Alice A1 reclaims her bitcoins from the escrow transaction Tescr(A, T) via a refund transaction after the timelock expires. The Tumbler T reclaims its bitcoins from the payment channel with Bob B1 (escrow transaction Tescr(T, B)) via a refund transaction after the timelock expires.

**Case 2:** The Tumbler aborts the puzzle-solver protocol by posting the transaction Tpuzzle but refusing to provide the transaction Tsolve. No payment completes from A2 to B2. Instead, A2 reclaims her bitcoin from Tpuzzle via a refund transaction after the timelock in Tpuzzle expires. The Tumbler reclaims its bitcoins from its payment channel with Bob B2 via a refund transaction after the timelock on the escrow transaction Tescr(T, B) expires.

**Case 3:** The Tumbler provides Alice A3 the solution to her puzzle in the puzzle-solver protocol, and the Tumbler has a Tpuzzle signed by A (Section V-C). However, Alice refuses to sign the cash-out transaction Tcash(A, T) to pay out from her escrow with the Tumbler. Then, the Tumbler signs and posts the transaction Tpuzzle and its fulfilling transaction Tsolve and claims its bitcoin. Payment from A3 to B3 completes, but the Tumbler has to pay more in transaction fees. This is because the Tumbler has to post both transactions Tpuzzle and Tsolve, rather than just Tcash(A, T); see Table IV.

### Remark: Anonymity When Parties Are Uncooperative

In Case 1 and Case 2, the protocol aborted without completing the payment from Alice to Bob. The k-anonymity for this TumbleBit run was therefore k = 3. By aborting, the Tumbler T learns that payers A1 and A2 were trying to pay payees B1 and B2. However, the anonymity of A1, A2, B1, and B2 remains unharmed, as B1 and B2 were using ephemeral Bitcoin addresses they now discard to safeguard their anonymity (see Section IV-A).

### Acknowledgements

We thank Ethan Donowitz for assistance with the preliminary stages of this project, and Nicolas Dorier, Adam Ficsor, Gregory Galperin, Omer Paneth, Dimitris Papadopoulos, Leonid Reyzin, Ann Ming Samborski, Sophia Yakoubov, the anonymous reviewers, and many members of the Bitcoin community for useful discussions and suggestions. Foteini Baldimtsi and Alessandra Scafuro performed this work while at Boston University. This work was supported by NSF grants 1012910, 1414119, and 1350733.

### References

[1] Bitcoin Fog. Wikipedia, 2016.
[2] Monero, https://getmonero.org/home. 2016.
[3] Gavin Andresen. BIP-0016: Pay to Script Hash. Bitcoin Improvement Proposals, 2014.
[4] Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, and Lukasz Mazurek. Secure multiparty computations on Bitcoin. In IEEE S&P, pages 443–458, 2014.
[5] A Back, G Maxwell, M Corallo, M Friedenbach, and L Dashjr. Enabling blockchain innovations with pegged sidechains. Blockstream, https://blockstream.com/sidechains.pdf, 2014.
[6] Wacław Banasik, Stefan Dziembowski, and Daniel Malinowski. Efficient Zero-Knowledge Contingent Payments in Cryptocurrencies Without Scripts. Cryptology ePrint Archive, Report 2016/451, 2016.
[7] Eli Ben Sasson, Alessandro Chiesa, Christina Garman, Matthew Green, Ian Miers, Eran Tromer, and Madars Virza. Zerocash: Decentralized anonymous payments from Bitcoin. In IEEE Security and Privacy (SP), pages 459–474, 2014.
[8] Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov. Deanonymisation of Clients in Bitcoin P2P Network. In ACM-CCS, pages 15–29, 2014.
[9] George Bissias, A Pinar Ozisik, Brian N Levine, and Marc Liberatore. Sybil-resistant mixing for Bitcoin. In Workshop on Privacy in the Electronic Society, pages 149–158, 2014.
[10] Jeremy Clark, Arvind Narayanan, Andrew Miller, Joseph Bonneau, Joshua A Kroll, and Edward W Felten. SoK: Research Perspectives and Challenges for Bitcoin and Cryptocurrencies. In IEEE - SP, 2015.
[11] Joseph Bonneau, Arvind Narayanan, Andrew Miller, Jeremy Clark, Joshua A Kroll, and Edward W Felten. Mixcoin: Anonymity for Bitcoin with Accountable Mixes. In Financial Cryptography and Data Security, 2014.
[12] David Chaum. Blind signature system. In CRYPTO, 1983.
[13] Christian Decker and Roger Wattenhofer. A fast and scalable payment network with Bitcoin duplex micropayment channels. In Stabilization, Safety, and Security of Distributed Systems, pages 3–18. Springer, 2015.
[14] Amos Fiat and Adi Shamir. How to prove yourself: Practical solutions to identification and signature problems. In CRYPTO, 1986.
[15] Srivatsava Ranjit Ganta, Shiva Prasad Kasiviswanathan, and Adam Smith. Composition attacks and auxiliary information in data privacy. In ACM SIGKDD, pages 265–273, 2008.
[16] O. Goldreich, S. Micali, and A. Wigderson. How to play any mental game. In STOC. ACM, 1987.
[17] Grams. Helixlight: Helix made simple. https://grams7enuﬁ7jmdl.onion.to/helix/light.
[18] Matthew Green and Ian Miers. Bolt: Anonymous Payment Channels for Decentralized Currencies. Cryptology ePrint Archive 2016/701, 2016.
[19] Louis C. Guillou and Jean-Jacques Quisquater. A practical zero-knowledge protocol fitted to security microprocessor minimizing both transmission and memory. In EUROCRYPT, 1988.
[20] Ethan Heilman, Leen Alshenibr, Foteini Baldimtsi, Alessandra Scafuro, and Sharon Goldberg. TumbleBit: An Untrusted Bitcoin-Compatible Anonymous Payment Hub. Cryptology ePrint Archive 2016/575, 2016.
[21] Ethan Heilman, Foteini Baldimtsi, and Sharon Goldberg. Blindly Signed Contracts: Anonymous On-Blockchain and Off-Blockchain Bitcoin Transactions. In Workshop on Bitcoin and Blockchain Research at Financial Crypto, February 2016.
[22] Chainalysis Inc. Chainalysis: Blockchain analysis, 2016. https://www.chainalysis.com/.
[23] Tom Elvis Jedusor. Mimblewimble. 2016.
[24] Ranjit Kumaresan and Iddo Bentov. How to use Bitcoin to incentivize correct computations. In ACM-CCS, 2014.
[25] Ranjit Kumaresan, Tal Moran, and Iddo Bentov. How to use Bitcoin to play decentralized poker. In ACM-CCS, 2015.
[26] Elliptic Enterprises Limited. Elliptic: The global standard for blockchain intelligence, 2016. https://www.elliptic.co/.
[27] Gregory Maxwell. Zero Knowledge Contingent Payment. Bitcoin Wiki, 2011.
[28] Gregory Maxwell. CoinJoin: Bitcoin privacy for the real world. Bitcoin-talk, 2013.
[29] Gregory Maxwell. CoinSwap: transaction graph disjoint trustless trading. Bitcoin-talk, 2013.
[30] Gregory Maxwell. The first successful Zero-Knowledge Contingent Payment. Bitcoin Core, February 2016.
[31] S Meiklejohn, M Pomarole, G Jordan, K Levchenko, GM Voelker, S Savage, and D McCoy. A fistful of bitcoins: Characterizing payments among men with no names. In ACM-SIGCOMM Internet Measurement Conference, IMC, 2013.
[32] Sarah Meiklejohn and Claudio Orlandi. Privacy-Enhancing Overlays in Bitcoin. In Lecture Notes in Computer Science, volume 8976. Springer Berlin Heidelberg, 2015.
[33] Ian Miers, Christina Garman, Matthew Green, and Aviel D Rubin. Zerocoin: Anonymous distributed e-cash from Bitcoin. In IEEE Security and Privacy (SP), pages 397–411, 2013.
[34] Pedro Moreno-Sanchez, Tim Rufﬁng, and Aniket Kate. P2P Mixing and Unlinkable P2P Transactions. Draft, June 2016.
[35] Malte M¨oser and Rainer B¨ohme. Join Me on a Market for Anonymity. Workshop on Privacy in the Electronic Society, 2016.
[36] Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, and Steven Goldfeder. Bitcoin and cryptocurrency technologies. Princeton University Press, 2016.
[37] Guevara Noubir and Amirali Sanatinia. Honey onions: Exposing snooping Tor HSdir relays. In DEF CON 24, 2016.
[38] Henning Pagnia and Felix C. Grtner. On the impossibility of fair exchange without a trusted third party, 1999.
[39] Morgen Peck. DAO May Be Dead After $60 Million Theft. IEEE Spectrum, Tech Talk Blog, 17 June 2016.
[40] Joseph Poon and Thaddeus Dryja. The Bitcoin Lightning Network: Scalable off-chain instant payments. Technical report, Technical Report (draft). https://lightning.network, 2015.
[41] Certicom Research. SEC 2: Recommended elliptic curve domain parameters, 2010.
[42] Dorit Ron and Adi Shamir. Quantitative analysis of the full Bitcoin transaction graph. In Financial Cryptography and Data Security, pages 6–24. Springer, 2013.
[43] Tim Rufﬁng, Pedro Moreno-Sanchez, and Aniket Kate. Coinshuffle: Practical decentralized coin mixing for Bitcoin. In ESORICS, pages 345–364. Springer, 2014.
[44] Jeff Stone. Evolution Downfall: Insider ‘Exit Scam’ Blamed For Massive Drug Bazaar’s Sudden Disappearance. International Business Times, 2015.
[45] The Internet Archive. HTTP Archive: Trends, 2015. https://httparchive.org/trends.php.
[46] Peter Todd. BIP-0065: OP CHECKLOCKTIMEVERIFY. Bitcoin Improvement Proposal, 2014.
[47] F. Tschorsch and B. Scheuermann. Bitcoin and Beyond: A Technical Survey on Decentralized Digital Currencies. IEEE Communications Surveys & Tutorials, PP(99), 2016.
[48] Luke Valenta and Brendan Rowan. Blindcoin: Blinded, accountable mixes for Bitcoin. In FC, 2015.
[49] Jan Henrik Ziegeldorf, Fred Grossmann, Martin Henze, Nicolas Inden, and Klaus Wehrle. Coinparty: Secure multi-party mixing of Bitcoins. In CODASPY, 2015.