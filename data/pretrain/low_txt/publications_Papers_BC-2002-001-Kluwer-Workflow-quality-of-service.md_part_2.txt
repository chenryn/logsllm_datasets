### Workflow Design Errors and QoS Metrics Computation

Workflows can contain design errors such as non-termination, deadlocks, and instance splits (Aalst 1999). To compute Quality of Service (QoS) metrics, we use a set of six distinct reduction rules: (1) sequential, (2) parallel, (3) conditional, (4) fault-tolerant, (5) loop, and (6) network. As an illustration, we will demonstrate how the reduction works for a sequence of tasks.

#### Reduction of a Sequential System

Two sequential service tasks \( t_i \) and \( t_j \) are reduced to a single task \( t_{ij} \). In this reduction, the incoming transitions of \( t_i \) and the outgoing transitions of \( t_j \) are transferred to task \( t_{ij} \).

In a sequential system, the probability \( p = 1 \). This reduction can only be applied if the following two rules are satisfied:
- \( t_i \) is not a XOR/AND split.
- \( t_j \) is not a XOR/AND join.

These rules prevent the reduction from being applied in parallel, conditional, and loop systems. The QoS metrics for the reduction are computed using the following formulas:

- **Time**: \( T(t_{ij}) = T(t_i) + T(t_j) \)
- **Cost**: \( C(t_{ij}) = C(t_i) + C(t_j) \)
- **Reliability**: \( R(t_{ij}) = R(t_i) \times R(t_j) \)

### Simulation Models

While analytical methods can be effectively used, another alternative is simulation analysis (Miller, Cardoso et al. 2002). Simulation plays a crucial role in tuning QoS metrics of workflows by exploring "what-if" scenarios. When the need to adapt or change a workflow is detected, deciding on the specific changes can be challenging. Before making any changes, their possible effects can be explored through simulation. For rapid feedback, the workflow system and simulation system must interoperate. Specifically, workflow specification documents need to be translated into simulation model specification documents so that the new model can be executed and animated on-the-fly.

In our project, these capabilities involve a loosely-coupled integration between the METEOR Workflow Management System (WfMS) and the JSIM simulation system (Nair, Miller et al. 1996; Miller, Nair et al. 1997; Miller, Seila et al. 2000). Workflows focus on scheduling and transformations within tasks, while simulation is concerned with system performance. For modeling purposes, a workflow can be abstractly represented using directed graphs (e.g., one for control flow and one for data flow, or a combined graph). Since both models are represented as directed graphs, interoperation is facilitated. To carry out a simulation, the appropriate workflow model is retrieved from the repository, translated into a JSIM simulation model specification, displayed graphically, and then executed/animated. Statistical results are collected and displayed, indicating the workflow's QoS.

### Workflow QoS Metrics of Interest

This section lists the QoS metrics of interest for workflows. These computations can be performed at design time, before the execution of instances, or at runtime.

#### Workflow Time

Workflow time analysis measures the total time instances spend in a workflow process. When a workflow is executed, instances enter the process, proceed through various tasks, and finally exit the process. The WfMS needs to constantly monitor and estimate the remaining time for instance termination. Four important measurements for workflow time-based execution are:

- **Workflow Response Time (T)**: The total amount of time a workflow instance spends in a workflow process before it finishes.
- **Workflow Delay Time (DT)**: The total amount of time a workflow instance spends in a workflow while not being processed by a task.
- **Minimum Workflow Response Time (T_min)**: The time required for a workflow instance to be processed without accounting for any task delay time.
- **Workflow Response Time Efficiency (E)**: The ratio of the minimum instance response time to the instance response time. This measurement provides an indication of the time an instance is delayed during its execution and indicates the degree to which a workflow process can be improved by reducing its response time.

#### Workflow Cost

Workflow cost (C) analysis measures the cost incurred with the execution of a workflow. A workflow has a cost equal to the sum of the costs of the tasks executed to complete the workflow. Cost-based workflows need to have their costs calculated to ensure operations remain within initial budgets.

#### Workflow Fidelity

Workflow fidelity (F) is computed based on the fidelity of the tasks in the workflow. The user defines a weighted function involving each task's fidelity. A fidelity function is also defined to represent how well a task is carrying out its execution.

#### Workflow Reliability

Workflow reliability (R) corresponds to the likelihood that a workflow will perform for its users when demanded.

### Related Work

The literature on QoS for WfMSs is limited. The Crossflow project (Klingemann, WÃ¤sch et al. 1999; Damen, Derks et al. 2000; Grefen, Aberer et al. 2000) has made a significant contribution. Their approach uses a continuous-time Markov chain (CTMC) to calculate the time and cost associated with workflow executions. While research on QoS for WfMSs is limited, research on time management, a subset of workflow QoS, has been more active and productive. Eder (1999) and Pozewaunig (1997) present an extension to Critical Path Method (CPM) and Program Evaluation and Review Technique (PERT) by annotating workflow graphs with time. At process build-time, instantiation-time, and runtime, the annotations are used to check the validity of time constraints. The major limitation of their approach is that only direct acyclic graphs (DAGs) can be modeled, which is a significant limitation since most workflows have cyclic graphs. Cycles are generally used to represent rework actions or repetitive activities within a workflow. Reichert (1998) and Dadam (2000) also recognize that time is an important aspect of workflow execution. With each workflow task, minimal and maximal durations may be specified. The system supports the specification and monitoring of deadlines, allowing notification of users when deadlines are about to be missed. It also checks if minimal and maximal time distances between tasks are followed according to initial specifications. Marjanovic and Orlowska (1999) describe a workflow model enriched with modeling constructs and algorithms for checking the consistency of workflow temporal constraints. Their work focuses on managing workflow changes while accounting for temporal constraints. Son (2001) presents a solution for the deadline allocation problem based on queuing networks. Their work also uses graph reduction techniques but applies them to queuing theory. Although the work on QoS for workflows is lacking, a significant amount of research on QoS has been done in the areas of networking (Cruz 1995; Georgiadis, Guerin et al. 1996), real-time applications (Clark, Shenker et al. 1992), and middleware (Zinky, Bakken et al. 1997; Frlund and Koistinen 1998; Hiltunen, Schlichting et al. 2000).

Recently, in the area of Web services, researchers have shown interest in QoS. The DAML-S (DAML-S 2001) specification allows the semantic description of business processes and includes constructs to specify QoS parameters such as quality guarantees, quality rating, and degree of quality. One current limitation of DAML-S' QoS model is that every composite process needs to have QoS metrics specified by the user.

### Future Work

The workflow QoS model presented in this paper can be extended in two additional dimensions, which can be useful for particular types of workflow systems. The first dimension is security. Workflow systems and applications face several security problems, and dedicated mechanisms need to be in place to increase the level of security (Fan 1999; Kang, Froscher et al. 1999; Miller, Fan et al. 1999). The second dimension is maintainability, which corresponds to the mean time to repair workflow failures and the average time spent maintaining the workflow in a condition where it can perform its intended function.

### Conclusions

We have highlighted the importance of QoS management in workflows and introduced the concept of workflow QoS. While QoS management is crucial for organizations, current WfMSs and workflow applications do not provide full solutions to support QoS. Research is necessary in four areas: specification, prediction algorithms and methods, monitoring tools, and mechanisms to control QoS. In this paper, we focus on workflow QoS specification and prediction. Based on the reviewed literature on QoS in other areas and accounting for the particularities of workflow systems and applications, we define a workflow QoS model that includes four dimensions: time, cost, fidelity, and reliability. The use of QoS increases the added value of workflow systems to organizations, as non-functional aspects of workflows can be described. The specification of QoS involves fundamentally the use of an adequate model and the creation of realistic QoS estimates for workflow tasks. Once tasks have their QoS estimated, QoS metrics can be computed for workflows. Since this computation needs to be automatic, we describe two methods for workflow QoS computation: analysis and simulation.

### References

- Aalst, W. M. P. v. d. (1999). Generic Workflow Models: How to Handle Dynamic Change and Capture Management Information. Proceedings of the Fourth IFCIS International Conference on Cooperative Information Systems (CoopIS'99), Edinburgh, Scotland.
- Anyanwu, K., A. P. Sheth, et al. (1999). Healthcare Enterprise Process Development and Integration. Technical Report. Athens, GA, LSDIS lab, Department of Computer Science, University of Georgia.
- Bussler, C. (1998). Workflow Instance Scheduling with Project Management Tools. 9th Workshop on Database and Expert Systems Applications DEXA'98, Vienna, Austria, IEEE Computer Society Press.
- CAPA (1997). Course Approval Process Automation (CAPA). Athens, GA, LSDIS Lab, Department of Computer Science, University of Georgia.
- Cardoso, J., J. Miller, et al. (2002). Workflow Quality of Service: its Specification and Computation. Athens, GA, LSDIS Lab, Computer Science Department, Univ. of Georgia.
- Clark, D., S. Shenker, et al. (1992). Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism. Proceedings of ACM SIGCOMM.
- Cruz, R. L. (1995). "Quality of service guarantees in virtual circuit switched networks." IEEE J. Select. Areas Commun. 13(6): 1048-1056.
- Dadam, P., M. Reichert, et al. (2000). Clinical workflows the killer application for process-oriented information systems. 4th International Conference on Business Information System (BIS 2000), Poznan, Poland.
- Damen, Z., W. Derks, et al. (2000). Business-to-business E-Commerce in a Logistics Domain. The CAiSE*00 Workshop on Infrastructures for Dynamic Business-to-Business Service Outsourcing, Stockholm.
- DAML-S (2001). Technical Overview - a white paper describing the key elements of DAML-S.
- Eder, J., E. Panagos, et al. (1999). Time Management in Workflow Systems. BIS'99 3rd International Conference on Business Information Systems, Poznan, Polen, Springer Verlag.
- Fan, M. (1999). Security for the METEOR Workflow Management System. Department of Computer Science. Athens, GA, University of Georgia.
- Frlund, S. and J. Koistinen (1998). "Quality-of-Service Specification in Distributed Object Systems." Distributed Systems Engineering Journal 5(4).
- Garvin, D. (1988). Managing Quality: The Strategic and Competitive Edge. New York:, Free Press.
- Georgiadis, L., R. Guerin, et al. (1996). Efficient network QoS provisioning based on per node traffic shaping. IEEE ACM Transactions on Networking.
- Grefen, P., K. Aberer, et al. (2000). "CrossFlow: Cross-Organizational Workflow Management in Dynamic Virtual Enterprises." International Journal of Computer Systems Science & Engineering 15(5): 227-290.
- Hall, D., J. A. Miller, et al. (2000). Using Workflow to Build an Information Management System for a Geographically Distributed Genome Sequence Initiative. Athens, GA, University of Georgia, Department of Computer Science, LSDIS Lab.
- Hiltunen, M. A., R. D. Schlichting, et al. (2000). Survivability through Customization and Adaptability: The Cactus Approach. DARPA Information Survivability Conference and Exposition (DISCEX 2000).
- ISO9000 (2002). ISO9000 - http://www.iso.ch/iso/en/iso9000-14000/iso9000/iso9000index.html.
- Kang, M. H., J. N. Froscher, et al. (1999). A Multilevel Secure Workflow Management System. Proceedings of the 11th Conference on Advanced Information Systems Engineering, Heidelberg, Germany.
- Kao, B. and H. GarciaMolina (1993). Deadline assignment in a distributed soft realtime system. Proceedings of the 13th International Conference on Distributed Computing Systems.
- Klingemann, J., J. WÃ¤sch, et al. (1999). Deriving Service Models in Cross-Organizational Workflows. Proceedings of RIDE - Information Technology for Virtual Enterprises (RIDE-VE '99), Sydney, Australia.
- Kobielus, J. G. (1997). Workflow Strategies, IDG Books Worldwide.
- Kochut, K. J., A. P. Sheth, et al. (1999). ORBWork: A CORBA-Based Fully Distributed, Scalable and Dynamic Workflow Enactment Service for METEOR. Athens, GA, Large Scale Distributed Information Systems Lab, Department of Computer Science, University of Georgia.
- Krishnakumar, N. and A. Sheth (1995). "Managing Heterogeneous Multi-system Tasks to Support Enterprise-wide Operations." Distributed and Parallel Databases Journal 3(2): 155-186.
- Luo, Z. (2000). Knowledge Sharing, Coordinated Exception Handling, and Intelligent Problem Solving to Support Cross-Organizational Business Processes. Department of Computer Science. Athens, GA, University of Georgia.
- Marjanovic, O. and M. Orlowska (1999). "On modeling and verification of temporal constraints in production workflows." Knowledge and Information Systems 1(2).
- Miller, J. A., J. S. Cardoso, et al. (2002). Using Simulation to Facilitate Effective Workflow Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego, California.
- Miller, J. A., M. Fan, et al. (1999). Security for the METEOR Workflow Management System. Athens, GA, Department of Computer Science, University of Georgia: 33.
- Miller, J. A., R. Nair, et al. (1997). JSIM: A Java-Based Simulation and Animation Environment. Proceedings of the 30th Annual Simulation Symposium, Atlanta, GA.
- Miller, J. A., D. Palaniswami, et al. (1998). "WebWork: METEOR2's Web-based Workflow Management System." Journal of Intelligence Information Management Systems: Integrating Artificial Intelligence and Database Technologies (JIIS) 10(2): 185-215.
- Miller, J. A., A. F. Seila, et al. (2000). "The JSIM Web-Based Simulation Environment." Future Generation Computer Systems: Special Issue on Web-Based Modeling and Simulation 17(2): 119-133.
- Nahrstedt, K. and J. M. Smith (1996). "Design, Implementation and Experiences of the OMEGA End-point Architecture." IEEE JSAC 14(7): 1263-1279.
- Nair, R., J. A. Miller, et al. (1996). A Java-Based Query Driven Simulation Environment. Proceedings of the 1996 Winter Simulation Conference, Colorado, CA.
- Nelson, E. C. (1973). A Statistical Basis for Software Reliability, TRW Software Series.
- Pozewaunig, H., J. Eder, et al. (1997). ePERT: Extending PERT for workflow management systems. First European Symposium in Advances in Databases and Information Systems (ADBIS), St. Petersburg, Russia.
- Reichert, M. and P. Dadam (1998). "ADEPTflex -- Supporting Dynamic Changes of Workflows Without Losing Control." Journal of Intelligent Information Systems - Special Issue on Workflow Managament 10(2): 93-129.
- Rommel, G. (1995). Simplicity wins: how Germany's mid-sized industrial companies succeed. Boston, Mass, Harvard Business School Press.
- Sadiq, S., O. Marjanovic, et al. (2000). "Managing Change and Time in Dynamic Workflow Processes." The International Journal of Cooperative Information Systems 9(1, 2).
- Son, J. H., J. H. Kim, et al. (2001). "Deadline Allocation in a Time-Constrained Workflow." International Journal of Cooperative Information Systems (IJCIS) 10(4).
- Stalk, G. and T. M. Hout (1990). Competing against time: how time-based competition is reshaping global markets. New York, Free Press.
- Weikum, G. (1999). Towards guaranteed quality and dependability of information systems. Proceedings of the Conference Datenbanksysteme in Buro, Technik und Wissenschaft, Freiburg, Germany.
- Zinky, J., D. Bakken, et al. (1997). "Architectural Support for Quality of Service for CORBA Objects." Theory and Practice of Object Systems 3(1): 1-20.