## IMPORTANT: DevOps Kit (AzSK) Sunset Notice
The Secure DevOps Kit for Azure (AzSK) will be sunset by the end of FY21. For more details, please refer to the [AzSK Sunset Notice](../ReleaseNotes/AzSKSunsetNotice.md).

### About AzSK
The Secure DevOps Kit for Azure (AzSK) was developed by the Core Services Engineering & Operations (CSEO) division at Microsoft to accelerate Microsoft IT's adoption of Azure. We have shared AzSK and its documentation with the community to provide guidance for rapidly scanning, deploying, and operationalizing cloud resources across different stages of DevOps, while maintaining controls on security and governance. Please note that AzSK is not an official Microsoft product but rather a means to share Microsoft CSEO's best practices with the community.

## Organization Policy Updates
This page provides updates for the Organization Policy with different AzSK versions. Before updating the Organization Policy with a specific AzSK version, follow the instructions and notes provided, especially if there are breaking changes in base configuration files such as policy file schemas or CA runbooks. For all updates related to AzSK versions, refer to the [release page](https://azsk.azurewebsites.net/ReleaseNotes/LatestReleaseNotes.html).

To update the Organization Policy with a specific AzSK version, run the `Update-AzSKOrganizationPolicy` command after installing the AzSK module in a new PowerShell session. This will update the `AzSK.Pre.json` file in the Organization Policy to the respective version. After the policy update, the Continuous Assurance (CA) will automatically upgrade to the latest Organization version. If application teams are using an older version (or any other version than the one mentioned in the Organization Policy), they will start receiving update warnings.

```PowerShell
# For Basic Setup
Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> `
   -OrgName "Contoso" `
   -DepartmentName "IT" `
   -PolicyFolderPath "D:\ContosoPolicies" -OverrideBaseConfig OrgAzSKVersion

# For Custom Resource Group Setup
Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> `
   -OrgName "Contoso-IT" `
   -ResourceGroupName "Contoso-IT-RG" `
   -StorageAccountName "contosoitsa" `
   -PolicyFolderPath "D:\ContosoPolicies" -OverrideBaseConfig OrgAzSKVersion
```

## Version-Specific Updates

### AzSK v4.11.0
- Added SVT for 'public IP address' as a service to optionally treat each public IP address as an individual resource. Organization policy administrators can enable this behavior by following [these steps](https://github.com/azsk/DevOpsKit-docs/tree/master/07-Customizing-AzSK-for-your-Org#How-can-we-treat-each-public-IP-address-as-an-individual-resource).

### AzSK v4.10.0
- Added support for configuring non-AAD identity providers for app services. Refer to [this guide](https://github.com/azsk/DevOpsKit-docs/tree/master/07-Customizing-AzSK-for-your-Org#how-to-configure-non-aad-identity-providers-for-appservice) for more information.
- Fixed an issue in the SVT extension framework where extended classes were not being correctly applied across resources of the same type.

### AzSK v4.4.0
- Added capabilities to set up AzSK to scan subscriptions across multiple tenants. Instructions are available [here](https://aka.ms/devopskit/crosstenant).

### AzSK v4.3.0
- Ported Organization policy cmdlets to PowerShell Core. After this change, users can perform all organization policy management operations from OS X/Linux, etc.
- Validated support for using a local folder on the client machine (as opposed to a storage-based blob) as the source for organization policy at AzSK runtime.

### AzSK v4.2.0
- Removed a check that was prohibiting the use of custom-generated SPNs in central-mode CA.

### AzSK v4.1.0
- Added support for AzSK-based telemetry (Log Analytics and Application Insights) features in Azure US Government and Azure China.
- Published documentation covering end-to-end organization policy scenarios with hands-on code examples in the organization policy section.
- Added support for organization policy debug mode to extend ARM Checker controls.

### AzSK v4.0.0
- Fixed an issue in the `Get-AzSKOrganizationPolicyStatus` cmdlet where, in local debugging mode, extension files were not being loaded.
- Fixed an issue in the `Get-AzSKOrganizationPolicyStatus` cmdlet checks that were failing after a fresh installation of the organization policy.
- Improved messages in the organization policy cmdlets (Install, Get, and Update).
- Introduced the `DisableOrgPolicyCheckForSession` flag in the `Set-AzSKPolicySettings` cmdlet to disable enforcement of the organization policy for the current PowerShell session. This helps in situations where an organization policy owner is working with multiple side-by-side policies.

### AzSK v3.14.0
- The `Install-AzSKContinuousAssurance` (ICA) cmdlet can now be run even without owner permissions at the subscription scope. The user who ran ICA must get the actual owners to configure RBAC for the AzSK_SPN on the subscription.
- Fixed a bug in the CA runbook where CA scans were ignoring resource groups (as specified in the resource groups parameter of ICA) and scanning everything in the subscription.
  **Note:** Update runbook files with the latest compatible version.
  ```PowerShell
  Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -OverrideBaseConfig CARunbooks
  ```
  If you have customized these files for your organization (e.g., adding `-UseBaselineControls` inside `RunbookScanAgent`), you will need to reapply the changes after running the update command.

### AzSK v3.13.0
- Support for segregating DevOps Kit alerts by mandatory vs. optional is now available for all customers. The default cmdlets (`Set-AzSKSubscriptionSecurity` and `Set-AzSKAlerts`) will only set up the 'mandatory' subset of activity alerts. (Please see previous sprint release notes for more.)
  **Note:** Breaking schema changes have been made for the alert policy file `Subscription.InsARMAlerts.json`. Refer to the path to get the latest schema and update the organization policy if this file is customized for your organization: `%userprofile%\Documents\WindowsPowerShell\Modules\AzSK\\Framework\Configurations\SubscriptionSecurity\Subscription.InsARMAlerts.json`.

### AzSK v3.12.0
- There is a significant change from release 3.11.0 related to the migration of the DevOps Kit from AzureRM to the new Az-* PowerShell libraries.
  **Note:** If you are upgrading from version 3.10.0 or below, follow these steps:
  1. The organization policy owner should download the latest AzSK module using the command: `Install-Module AzSK -Scope CurrentUser -AllowClobber -Force`.
  2. Import the latest AzSK module in a fresh PowerShell session and update your organization policy using the command: `Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -PolicyFolderPath <path> -OverrideBaseConfig All`.
  3. Run the iwr and update the CA by running the `Update-AzSKContinuousAssurance` command with the `-FixModules` switch.
  - Update all the AzureRM and Azure commands in your SVT extensions to their equivalents in the Az-* module.

### AzSK v3.11.0
- The major change in this release is the migration of the DevOps Kit from AzureRM to the new Az-* PowerShell libraries.
  **Note:** If you are upgrading from version 3.10.0 or below, follow these steps:
  1. The organization policy owner should download the latest AzSK module using the command: `Install-Module AzSK -Scope CurrentUser -AllowClobber -Force`.
  2. Import the latest AzSK module in a fresh PowerShell session and update your organization policy using the command: `Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -PolicyFolderPath <path> -OverrideBaseConfig All`.
  3. Run the iwr and update the CA by running the `Update-AzSKContinuousAssurance` command with the `-FixModules` switch.
  - Update all the AzureRM and Azure commands in your SVT extensions to their equivalents in the Az-* module.

### AzSK v3.9.0
- The ARM Checker task in the AzSK CICD Extension now respects organization policy, allowing organization policy owners to customize the behavior of the task. (Note that this was previously possible for the SVT task, but the ARM Checker task was missing this capability.)
- Ability to run CA in sovereign clouds and apply custom organization policy for SDL, CICD, and CA for such subscriptions. (Please review GitHub docs for the required steps.)

### AzSK v3.8.0
- Ability to run manual and CICD scans on sovereign clouds. Please review GitHub docs for the required steps.
- For central mode CA scanning, if the central subscription is used for logging, CA will no longer write to the target subscription storage account. (Previously, it still used the target subscription storage account for checkpoints and other metadata.) For new setups or new target subscriptions added to the configuration, the DevOps Kit will not create resources (or AzSKRG) in the target subscription.

### AzSK v3.7.0
- **Note:** If you are upgrading from version 3.5.0 or below, follow these steps:
  1. Update runbook files with the latest compatible version.
     ```PowerShell
     Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -OverrideBaseConfig CARunbooks
     ```
     If you have customized these files for your organization (e.g., adding `-UseBaselineControls` inside `RunbookScanAgent`), you will need to reapply the changes after running the update command.
  2. If the organization policy is customized with SecurityCenter configurations, update the policy with the latest `SecurityCenter.json` schema from 3.7.0.
- No specific updates for organization policy features.

### AzSK v3.6.1
- **Note:** If you are upgrading from version 3.5.0 or below, follow these steps:
  1. Update runbook files with the latest compatible version.
     ```PowerShell
     Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -OverrideBaseConfig CARunbooks
     ```
     If you have customized these files for your organization (e.g., adding `-UseBaselineControls` inside `RunbookScanAgent`), you will need to reapply the changes after running the update command.
  2. If the organization policy is customized with SecurityCenter configurations, update the policy with the latest `SecurityCenter.json` schema from 3.6.1.
- Fixed an issue related to the ASC API in the GSS command. Any subscription without security contact details set up caused the ASC API to throw an exception (InvalidOperation: The remote server returned an error: (404) Not Found).
- Fixed an issue for express route connected VMs (The property 'Tags' cannot be found on this object. Verify that the property exists).

### AzSK v3.6.0
- **Note:** AzSK 3.6.0 includes breaking changes for `RunbookCoreSetup` in custom organization policies. You will need to take the latest runbook files with the update organization policy command.
  ```PowerShell
  Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -OverrideBaseConfig CARunbooks
  ```
  If you have customized these files for your organization (e.g., adding `-UseBaselineControls` inside `RunbookScanAgent`), you will need to reapply the changes after running the update command.
- Ability to let customers control the default location where AzSK root resources will be created for subscriptions that are onboarded (for manual, CA, or CICD scanning).
- Fixed a bug where manual control settings were not being respected with the organization policy setup.

### AzSK v3.5.0
- **Note:** AzSK 3.5.0 has upgraded its dependency on AzureRM and now requires AzureRM version 6.x. It includes breaking changes for `RunbookCoreSetup` and `RunbookScanAgent` in custom organization policies. If you are upgrading the organization policy with AzSK version 3.5.0 using configurations (AzSK.Pre.Json), you will need to take the latest runbook files with the update organization policy command.
  ```PowerShell
  Update-AzSKOrganizationPolicy -SubscriptionId <subscription-id> -OrgName <org-name> -DepartmentName <department-name> -OverrideBaseConfig CARunbooks
  ```
  If you have customized these files for your organization (e.g., adding `-UseBaselineControls` inside `RunbookScanAgent`), you will need to reapply the changes after running the update command.
- Policy owners can now use a local folder to 'deploy' policy, significantly improving the debugging/troubleshooting experience. (Policy changes can be pre-tested locally, and there is no need to maintain a separate dev-test policy server endpoint.)
- Support for handling the expiry of SAS tokens in the policy URL in an automated manner in local setup and CA. (Only CICD extension scenarios will need explicit updates. Warnings will be displayed when expiry is coming up in the next 30 days.)
- Support for schema validation of organization policy config JSON via the `Get-AzSKOrganizationPolicyStatus` command, reducing the chances of errors due to oversight or copy-paste errors.
- Teams that extend the AzSK module can now also add custom listeners to receive scan events.

### AzSK v3.4.x
- A new cmdlet (`Get-AzSKOrganizationPolicyStatus`) to check the health and correctness of organization policy configuration for a given setup and to help remediate issues found.
- Provided an option to download existing policies from the policy server.
- If an organization is using a version of AzSK that is more than 2 releases old (current-2), a 'deprecated' warning will be shown to ensure that customers using organization policy stay up to date with the latest security controls.
- If a subscription is configured with a specific organization policy, scan commands run using some other (or OSS) policy will be disallowed with appropriate warnings.
- Organization policy customers can now generate a compliance dashboard based on a Power BI content pack and a CSV mapping subscription to organization details.