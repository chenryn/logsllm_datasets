# Windows Internals, Seventh Edition, Part 2

## Authors
- Andrea Allievi
- Alex Ionescu
- Mark E. Russinovich
- David A. Solomon

## Copyright Information
© Windows Internals, Seventh Edition, Part 2  
Published with the authorization of Microsoft Corporation by:  
Pearson Education, Inc.  
Copyright © 2022 by Pearson Education, Inc.  
All rights reserved. This publication is protected by copyright, and permission must be obtained from the publisher prior to any prohibited reproduction, storage in a retrieval system, or transmission in any form or by any means, electronic, mechanical, photocopying, recording, or otherwise. For information regarding permissions, request forms, and the appropriate contacts within the Pearson Education Global Rights & Permissions Department, please visit [www.pearson.com/permissions](http://www.pearson.com/permissions).

No patent liability is assumed with respect to the use of the information contained herein. Although every precaution has been taken in the preparation of this book, the publisher and authors assume no responsibility for errors or omissions. Nor is any liability assumed for damages resulting from the use of the information contained herein.

**ISBN-13:** 978-0-13-546240-9  
**ISBN-10:** 0-13-546240-1  
**Library of Congress Control Number:** 2021939878

## Trademarks
Microsoft and the trademarks listed at [http://www.microsoft.com](http://www.microsoft.com) on the “Trademarks” webpage are trademarks of the Microsoft group of companies. All other marks are property of their respective owners.

## Warning and Disclaimer
Every effort has been made to make this book as complete and as accurate as possible, but no warranty or fitness is implied. The information provided is on an "as is" basis. The authors, the publisher, and Microsoft Corporation shall have neither liability nor responsibility to any person or entity with respect to any loss or damages arising from the information contained in this book or from the use of the programs accompanying it.

## Special Sales
For information about buying this title in bulk quantities, or for special sales opportunities (which may include electronic versions, custom cover designs, and content tailored to your business, training goals, marketing focus, or branding interests), please contact our corporate sales department at PI:EMAIL or (800) 382-3419.  
For government sales inquiries, please contact governmentsales@pearsoned.com.  
For questions about sales outside the U.S., please contact intlcs@pearson.com.

## Editorial Team
- **Editor-in-Chief:** Brett Bartow
- **Development Editor:** Mark Renfrow
- **Managing Editor:** Sandra Schroeder
- **Senior Project Editor:** Tracey Croom
- **Executive Editor:** Loretta Yates
- **Production Editor:** Dan Foster
- **Copy Editor:** Charlotte Kughen
- **Indexer:** Valerie Haynes Perry
- **Proofreader:** Dan Foster
- **Technical Editor:** Christophe Nasarre
- **Editorial Assistant:** Cindy Teeters
- **Cover Designer:** Twist Creative, Seattle
- **Compositor:** Danielle Foster
- **Graphics:** Vived Graphics

## Dedication
- **Andrea Allievi:** To my parents, Gabriella and Danilo, and to my brother, Luca, who all always believed in me and pushed me to follow my dreams.
- **Alex Ionescu:** To my wife and daughter, who never give up on me and are a constant source of love and warmth. To my parents, for inspiring me to chase my dreams and making the sacrifices that gave me opportunities.

## Table of Contents
### About the Authors
### Foreword
### Introduction

#### Chapter 8: System Mechanisms
- Processor Execution Model
- Segmentation
- Task State Segments
- Hardware Side-Channel Vulnerabilities
- Out-of-Order Execution
- The CPU Branch Predictor
- The CPU Cache(s)
- Side-Channel Attacks
- Side-Channel Mitigations in Windows
- KVA Shadow
- Hardware Indirect Branch Controls (IBRS, IBPB, STIBP, SSBD)
- Retpoline and Import Optimization
- STIBP Pairing
- Trap Dispatching
- Interrupt Dispatching
- Line-Based vs. Message-Signaled Interrupts
- Timer Processing
- System Worker Threads
- Exception Dispatching
- System Service Handling
- WoW64 (Windows-on-Windows)
  - The WoW64 Core
  - File System Redirection
  - Registry Redirection
  - X86 Simulation on AMD64 Platforms
  - ARM
- Memory Models
  - ARM32 Simulation on ARM64 Platforms
  - X86 Simulation on ARM64 Platforms
- Object Manager
  - Executive Objects
  - Object Structure
  - Synchronization
    - High-IRQL Synchronization
    - Low-IRQL Synchronization
- Advanced Local Procedure Call
  - Connection Model
  - Message Model
  - Asynchronous Operation
  - Views, Regions, and Sections
  - Attributes
  - Blobs, Handles, and Resources
  - Handle Passing
  - Security
  - Performance
  - Power Management
  - ALPC Direct Event Attribute
- Debugging and Tracing
  - Windows Notification Facility
    - WNF Features
    - WNF Users
    - WNF State Names and Storage
    - WNF Event Aggregation
  - User-Mode Debugging
  - Kernel Support
  - Native Support
  - Windows Subsystem Support
  - Packaged Applications
    - UWP Applications
    - Centennial Applications
  - The Host Activity Manager
  - The State Repository
  - The Dependency Mini Repository
  - Background Tasks and the Broker Infrastructure
  - Packaged Applications Setup and Startup
  - Package Activation
  - Package Registration
- Conclusion

#### Chapter 9: Virtualization Technologies
- The Windows Hypervisor
  - Partitions, Processes, and Threads
  - The Hypervisor Startup
  - The Hypervisor Memory Manager
  - Hyper-V Schedulers
  - Hypercalls and the Hypervisor TLFS
  - Intercepts
  - The Synthetic Interrupt Controller (SynIC)
  - The Windows Hypervisor Platform API and EXO Partitions
  - Nested Virtualization
  - The Windows Hypervisor on ARM64
- The Virtualization Stack
  - Virtual Machine Manager Service and Worker Processes
  - The VID Driver and the Virtualization Stack Memory Manager
  - The Birth of a Virtual Machine (VM)
  - VMBus
  - Virtual Hardware Support
  - VA-Backed Virtual Machines
- Virtualization-Based Security (VBS)
  - Virtual Trust Levels (VTLs) and Virtual Secure Mode (VSM)
  - Services Provided by the VSM and Requirements
  - The Secure Kernel
  - Virtual Interrupts
  - Secure Intercepts
  - VSM System Calls
  - Secure Threads and Scheduling
  - Hypervisor Enforced Code Integrity
  - UEFI Runtime Virtualization
  - VSM Startup
  - The Secure Kernel Memory Manager
  - Hot Patching
  - Isolated User Mode
  - Trustlets Creation
  - Secure Devices
  - VBS-Based Enclaves
  - System Guard Runtime Attestation
- Conclusion

#### Chapter 10: Management, Diagnostics, and Tracing
- The Registry
  - Viewing and Changing the Registry
  - Registry Usage
  - Registry Data Types
  - Registry Logical Structure
  - Application Hives
  - Transactional Registry (TxR)
  - Monitoring Registry Activity
  - Process Monitor Internals
  - Registry Internals
  - Hive Reorganization
  - The Registry Namespace and Operation
  - Stable Storage
  - Registry Filtering
  - Registry Virtualization
  - Registry Optimizations
- Windows Services
  - Service Applications
  - Service Accounts
  - The Service Control Manager (SCM)
  - Service Control Programs
  - Autostart Services Startup
  - Delayed Autostart Services
  - Triggered-Start Services
  - Startup Errors
  - Accepting the Boot and Last Known Good
  - Service Failures
  - Service Shutdown
  - Shared Service Processes
  - Service Tags
  - User Services
  - Packaged Services
  - Protected Services
- Task Scheduling and UBPM
  - The Task Scheduler
  - Unified Background Process Manager (UBPM)
  - Task Scheduler COM Interfaces
- Windows Management Instrumentation (WMI)
  - WMI Architecture
  - WMI Providers
  - The Common Information Model and the Managed Object Format Language
  - Class Association
  - WMI Implementation
  - WMI Security
- Event Tracing for Windows (ETW)
  - ETW Initialization
  - ETW Sessions
  - ETW Providers
  - Providing Events
  - ETW Logger Thread
  - Consuming Events
  - System Loggers
  - ETW Security
- Dynamic Tracing (DTrace)
  - Internal Architecture
  - DTrace Type Library
- Windows Error Reporting (WER)
  - User Applications Crashes
  - Kernel-Mode (System) Crashes
  - Process Hang Detection
  - Global Flags
  - Kernel Shims
    - Shim Engine Initialization
    - The Shim Database
    - Driver Shims
    - Device Shims
- Conclusion

#### Chapter 11: Caching and File Systems
- Terminology
- Key Features of the Cache Manager
  - Single, Centralized System Cache
  - The Memory Manager
  - Cache Coherency
  - Virtual Block Caching
  - Stream-Based Caching
  - Recoverable File System Support
  - NTFS MFT Working Set Enhancements
  - Memory Partitions Support
  - Cache Virtual Memory Management
  - Cache Size
    - Cache Virtual Size
    - Cache Working Set Size
    - Cache Physical Size
  - Cache Data Structures
    - Systemwide Cache Data Structures
    - Per-File Cache Data Structures
- File System Interfaces
  - Copying to and from the Cache
  - Caching with the Mapping and Pinning Interfaces
  - Caching with the Direct Memory Access Interfaces
  - Fast I/O
  - Read-Ahead and Write-Behind
    - Intelligent Read-Ahead
    - Read-Ahead Enhancements
    - Write-Back Caching and Lazy Writing
    - Disabling Lazy Writing for a File
    - Forcing the Cache to Write Through to Disk
    - Flushing Mapped Files
    - Write Throttling
    - System Threads
    - Aggressive Write Behind and Low-Priority Lazy Writes
    - Dynamic Memory
    - Cache Manager Disk I/O Accounting
- File Systems
  - Windows File System Formats
    - CDFS
    - UDF
    - FAT12, FAT16, and FAT32
    - exFAT
    - NTFS
    - ReFS
  - File System Driver Architecture
    - Local FSDs
    - Remote FSDs
  - File System Operations
    - Explicit File I/O
    - Memory Manager’s Modified and Mapped Page Writer
    - Cache Manager’s Lazy Writer
    - Cache Manager’s Read-Ahead Thread
    - Memory Manager’s Page Fault Handler
    - File System Filter Drivers and Minifilters
    - Filtering Named Pipes and Mailslots
    - Controlling Reparse Point Behavior
    - Process Monitor
- The NT File System (NTFS)
  - High-End File System Requirements
  - Recoverability
  - Security
  - Data Redundancy and Fault Tolerance
  - Advanced Features of NTFS
    - Multiple Data Streams
    - Unicode-Based Names
    - General Indexing Facility
    - Dynamic Bad-Cluster Remapping
    - Hard Links
    - Symbolic (Soft) Links and Junctions
    - Compression and Sparse Files
    - Change Logging
    - Per-User Volume Quotas
    - Link Tracking
    - Encryption
    - POSIX-Style Delete Semantics
    - Defragmentation
    - Dynamic Partitioning
    - NTFS Support for Tiered Volumes
  - NTFS File System Driver
  - NTFS On-Disk Structure
    - Volumes
    - Clusters
    - Master File Table
    - File Record Numbers
    - File Records
    - File Names
    - Tunneling
    - Resident and Nonresident Attributes
    - Data Compression and Sparse Files
      - Compressing Sparse Data
      - Compressing Nonsparse Data
      - Sparse Files
    - The Change Journal File
    - Indexing
    - Object IDs
    - Quota Tracking
    - Consolidated Security
    - Reparse Points
    - Storage Reserves and NTFS Reservations
    - Transaction Support
      - Isolation
      - Transactional APIs
      - On-Disk Implementation
      - Logging Implementation

---

This optimized version ensures that the text is clear, professional, and well-organized, providing a comprehensive overview of the contents and structure of the book.