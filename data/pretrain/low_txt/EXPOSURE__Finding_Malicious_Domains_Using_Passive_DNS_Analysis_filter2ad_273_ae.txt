# Figure 5: First Query and Detection Times of Domains

```
1400
1200
1000
800
600
400
200
0
  0   2   4   6   8   10  12  14
Days
(b)
Figure 5: The first time a domain is queried and the first time it is detected
```

## 6.1 Detecting Malicious Domains Using Active DNS Probing

A second branch of study aims to detect malicious domains using active DNS probing methods [27, 36]. This involves repeatedly querying domains that are flagged as potentially malicious by various sources (e.g., spam emails) to detect abnormal behavior. The primary drawback of active DNS analysis is the risk of being detected by the malicious actors managing the domains under scrutiny. In contrast, passive DNS analysis is more stealthy due to its non-intrusive nature.

Ma et al. [27] use URL features extracted from spam emails to develop statistical methods for machine learning to classify websites. They analyze the lexical construction of spam URLs and the information contained in the host name part of the URL. To gather this information, they perform active probing to determine the number of IP addresses associated with the domain. Once they obtain the IP address list, they analyze the location of the IP address and the Autonomous System Number (ASN) it belongs to. The main limitation of this system is that it only analyzes domains included in spam emails, thus missing other types of malicious domains such as command and control servers.

Another approach leverages properties inherent to domain registrations and their appearance in DNS zone files [20]. This method associates the registration information and DNS zone properties of domains with the properties of known blacklisted domains for proactive domain blacklisting. However, it relies entirely on historical information, making it unable to detect domains without any registration information or DNS zone commonalities with known blacklisted domains. Our work, which does not require historical information, can detect such domains.

## 6.2 Identifying Infected Machines by Monitoring DNS Activities

In [16], the authors propose an anomaly-based botnet detection mechanism by monitoring group activities in the DNS traffic of a local network. They claim that there are distinguishing features to differentiate DNS traffic generated by botnets and benign clients. Similarly, [38] attempts to identify botnet DNS access behavior in a local network using a Bayesian algorithm. In comparison, our approach aims to identify malicious domains from DNS traffic in general, not just botnets.

## 6.3 Generic Identification of Malicious Domains Using Passive DNS Monitoring

To date, only one system, Notos, has been proposed for detecting malicious domains using passive DNS analysis [11]. Notos dynamically assigns reputation scores to domain names whose maliciousness has not yet been discovered. We compared EXPOSURE with Notos in Section 5.5.2 and found that EXPOSURE eliminates several shortcomings of Notos. It does not require a broad overview of malicious activities on the Internet, has a much shorter training time, and can classify domains that Notos would misclassify.

## 7 Limitations

A determined attacker who understands how EXPOSURE works and is aware of the features we look for in DNS traffic might attempt to evade detection. For example, an attacker could assign uniform Time-to-Live (TTL) values across all compromised machines, but this would mean the attacker could no longer distinguish between more reliable and less reliable hosts, reducing the reliability of their malicious infrastructure. Another evasion tactic could be to reduce the number of DNS lookups for a malicious domain, performing only a single lookup every hour. However, this is not trivial to implement, reduces the attack's impact, and requires a high degree of coordination. While it is possible for an attacker to stay below our detection radar by avoiding these features, doing so comes at a cost. Our system increases the difficulty for attackers, forces them to abandon useful features, and makes it more complex to manage their infrastructures.

Our detection rate also depends on the training set. We do not train for the family of malicious domains that constitute conceptually unknown attacks that have not been encountered before. However, as more malicious domains are fed into the system, our approach becomes more comprehensive over time. If the networks we monitor and train our system on are not infected, we will not see any malicious domains. We believe that having access to larger networks and more installations of EXPOSURE will improve our ability to detect more malicious attacks.

## 8 Conclusions

The Domain Name System (DNS) is a crucial component of the Internet, providing a two-way mapping between domain names and IP addresses. While DNS is essential for the functioning of benign Internet services, it has also become a key tool for malicious activities. For example, bots resolve DNS names to locate their command and control servers, and spam emails contain URLs that link to domains resolving to scam servers.

In this paper, we introduced EXPOSURE, a system that uses passive DNS analysis techniques to detect malicious domains. Our thesis is that monitoring the use of the DNS system on a large scale for signs of malicious operations is beneficial. Our experimental results show that our approach works well in practice and is useful for automatically identifying a wide range of malicious domains, including botnet command and control servers, phishing sites, and scam hosts. Compared to related work, our approach is generic and does not focus on a specific class of threat, such as Fast-Flux botnets.

We believe that EXPOSURE is a valuable system that can help security experts and organizations in their fight against cybercrime. As future work, we plan to release EXPOSURE to the public as a community service.

## 9 Acknowledgments

This research was funded by the European Union Seventh Framework Programme (FP7/2007-2013) under grant agreement no 257007. Additional support was provided by Secure Business Austria, the European Commission through project IST-216026-WOMBAT funded under the 7th framework program, the Office of Naval Research (ONR) under grant N000140911042, and the National Science Foundation (NSF) under grants CNS-0845559 and CNS-0905537. We thank the Internet Security Consortium Security Information Exchange project (ISC@SIE) for providing a portion of the DNS data used in our experiments. Additionally, we thank the University of Bergamo for providing access to their DNS traffic during the early phases of this work.

## References

[1] RFC 1794 - DNS Support for Load Balancing. http://tools.ietf.org/html/rfc1794, 1995.
[2] RFC1834 - Whois and Network Information Lookup Service, Whois++. http://www.faqs.org/rfcs/rfc1834.html, 1995.
[3] RFC 1912 - Common DNS Operational and Configuration Errors. http://www.faqs.org/rfcs/rfc1912.html, 1996.
[4] Alexa Web Information Company. http://www.alexa.com/topsites/, 2009.
[5] DNSBL - Spam Database Lookup. http://www.dnsbl.info/, 2010.
[6] Google Safe Browsing. http://www.google.com/tools/firefox/safebrowsing/, 2010.
[7] Internet Systems Consortium. https://sie.isc.org/, 2010.
[8] McAfee SiteAdvisor. http://www.siteadvisor.com/, 2010.
[9] Norton Safe Web. http://safeweb.norton.com/, 2010.
[10] B. Amini. Kraken Botnet Infiltration. http://dvlabs.tippingpoint.com/blog/2008/04/28/kraken-botnet-infiltration, 2008.
[11] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and N. Feamster. Building a Dynamic Reputation System for DNS. In 19th Usenix Security Symposium, 2010.
[12] Michle Basseville and Igor V. Nikiforov. Detection of Abrupt Changes - Theory and Application. Prentice-Hall, 1993.
[13] Ulrich Bayer, Christopher Kruegel, and Engin Kirda. TTAnalyze: A Tool for Analyzing Malware. In 15th EICAR Conference, Hamburg, Germany, 2006.
[14] Pavel Berkhin. Survey of clustering data mining techniques. Technical report, 2002.
[15] A. P. Bradley. The use of the area under the ROC curve in the evaluation of machine learning algorithms. In Pattern Recognition, volume 30, pages 1145–1159, 1997.
[16] H. Choi, H. Lee, and H. Kim. Botnet detection by monitoring group activities in DNS Traffic. In 7th IEEE International Conference on Computer and Information Technologies, 2007.
[17] Selina Chu, Eamonn Keogh, David Hart, Michael Pazzani, and Michael. Iterative deepening dynamic time warping for time series. In In Proc 2nd SIAM International Conference on Data Mining, 2002.
[18] M. Cova. Wepawet. http://wepawet.iseclab.org/.
[19] Malware Domains. Malware Domain Block List. http://www.malwaredomains.com/, 2009.
[20] Mark Felegyhazi, Christian Kreibich, and Vern Paxson. On the potential of proactive domain blacklisting. In Proceedings of the Third USENIX Workshop on Large-scale Exploits and Emergent Threats (LEET), San Jose, CA, USA, April 2010.
[21] F. Freiling, T. Holz, and G. Wicherski. Botnet Tracking: Exploring a Root-Cause Methodology to Prevent Distributed Denial-of-Service Attacks. In 10th European Symposium On Research In Computer Security, 2005.
[22] A. Karasaridis, B. Rexroad, and D. Hoeﬂin. Wide-scale Botnet Detection and Characterization. In Usenix Workshop on Hot Topics in Understanding Botnets, 2007.
[23] E. Keogh, K. Chakrabarti, M. Pazzani, and S. Mehrotra. Locally adaptive dimensionality reduction for indexing large time series databases. In ACM SIGMOD Conference on Management of Data, pages 151–162, 2001.
[24] M. Konte, N. Feamster, and J. Jung. Dynamics of online scam hosting infrastructure. In In Passive and Active Measurement Conference, 2009.
[25] Malware Domains List. Malware Domains List. http://www.malwaredomainlist.com/mdl.php, 2009.
[26] Zeus Block List. Zeus domain blocklist. https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist, 2009.
[27] Justin Ma, Lawrence K. Saul, Stefan Savage, and Geoffrey M. Voelker. Beyond blacklists: Learning to detect malicious web sites from suspicious URLs. In Proceedingsof theSIGKDD Conference. Paris, France, 2009.
[28] J. Nazario and T. Holz. As the net churns: Fast-Flux botnet observations. In International Conference on Malicious and Unwanted Software, 2008.
[29] E. Passerini, R. Paleari, L. Martignoni, and D. Bruschi. Fluxor: Detecting and monitoring fast-Flux service networks. In Detection of Intrusions and Malware, and Vulnerability Assessment, 2008.
[30] R. Perdisci, I. Corona, D. Dagon, and W. Lee. Detecting Malicious Flux Service Networks through Passive Analysis of Recursive DNS Traces. In 25th Annual Computer Security Applications Conference (ACSAC), 2009.
[31] Phishtank. Phishtank. http://www.phishtank.com/, 2009.
[32] P. Porras, H. Saidi, and V. Yegneswaran. A Foray into Conficker’s Logic and Rendezvous Points. In USENIX Workshop on Large-Scale Exploits and Emergent Threats, 2009.
[33] J.R. Quinlan. Learning with continuous classes. Proceedings of the 5th Australian joint Conference on Artificial Intelligence, Singapore: World Scientific:343 – 348, 1995.
[34] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szydlowski, R. Kemmerer, C. Kruegel, and G. Vigna. Your botnet is my botnet: Analysis of a botnet takeover. In ACM Conference on Computer and Communication Security (CCS), 2009.
[35] S. Theodoridis and K. Koutroumbas. Pattern Recognition. Academic Press, 2009.
[36] T. Holz, C. Gorecki, K. Rieck, and F.C. Freiling. Measuring and Detecting Fast-Flux Service Networks. In Annual Network and Distributed System Security Symposium (NDSS), 2008.
[39] F. Weimer. Passive DNS Replication. In FIRST Conference on Computer Security Incident, 2005.
[40] I.H. Witten and E. Frank. Data Mining: Practical Machine Learning Tools and Techniques. Morgan Kaufmann, 2005.
[41] J. Wolf. Technical details of Srizbi's domain generation algorithm. http://tinyurl.com/6mdasc, 2008.
[42] B. Zdrnja, N. Brownlee, and D. Wessels. Passive Monitoring of DNS anomalies. In DIMVA, 2007.
[37] D. Turaga, M. Vlachos, and O. Verscheure. On K-Means Cluster Preservation using Quantization Schemes. In IEEE International Conference on Data Mining, ICDM09, 2009.
[43] H. Zitouni, S. Sevil, D. Ozkan, and P. Duygulu. Re-ranking of Image Search Results using a Graph Algorithm. In 9th International Conference on Pattern Recognition, 2008.
[38] R. Villamarn-Salomn and J. C. Brustoloni. Bayesian bot detection based on DNS traffic similarity. In SAC’09: ACM symposium on Applied Computing, 2009.