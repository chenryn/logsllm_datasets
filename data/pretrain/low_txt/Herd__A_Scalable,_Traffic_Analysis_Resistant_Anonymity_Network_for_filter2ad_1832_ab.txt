### Single Voice Call and Link Utilization

In the context of a single voice call, the system operates irrespective of whether the client actively initiates the call. All other links carry traffic at a multiple of the base rate \( u \). The links connecting Service Providers (SPs) to mixes within a given zone have identical rates at any given time, and this rate can be adjusted simultaneously on all such links. Similarly, the rates on links connecting mixes within a zone and on links connecting mixes between a given pair of zones are also identical at any time and can only be changed simultaneously. Mixes periodically report their link utilization to a local, zone-specific directory, and rate adjustments are decided unilaterally for intrazone links or by the two corresponding directories for interzone links.

### Trust and Incentive Model

Each zone is bound by its local laws and authorities. Specifically, zone operators can be compelled by local authorities to release information available to the mixes in their zone. Clients and SPs trust the mix they attach to, and thus the authorities within the mix’s jurisdiction, with their partial call metadata (source IP address, destination mix, and call duration). Therefore, clients and SPs should select a mix operated by a provider of their choice within a zone whose jurisdiction meets their privacy needs.

A client may choose a mix in a different location and jurisdiction if they do not trust the local authorities with their partial call metadata. This assumes that local authorities do not systematically block network access to such mixes. To circumvent censorship, Herd could rely on SPs with unpublished IP addresses (like Tor bridges) and obfuscate client traffic. Applying obfuscation mechanisms like Tor’s obfsproxy [11] to Herd is a subject of future work. A key challenge is that appropriate cover traffic must sustain a minimum rate of one VoIP call at all times to provide effective obfuscation.

### Herd’s Architecture

Herd’s architecture comprises clients, mixes located in trust zones, and optionally, SPs (not shown in Figure 1). Herd employs both hop-by-hop and layered encryption to hide content, routing information, and circuit IDs. Mixes can also act as rendezvous points, enabling clients to receive incoming VoIP calls with zone anonymity. Optionally, a caller and callee can use an additional zone (e.g., A and B) to avoid depending on the same jurisdiction. In Herd’s trust model, the anonymity of a caller or callee depends only on their own choice of a trust zone, i.e., a provider within a jurisdiction. Callers and callees pick a trust zone independently and do not depend on the choices made by their call partner.

### System Model

Herd comprises clients, which originate and terminate traffic; mixes, which relay traffic; and optional untrusted superpeers (SPs), which can originate, terminate, and relay traffic. A client initiating a call is called the caller, and one accepting a call is the callee. All participants are connected by links that carry encrypted and padded traffic. A client connects to at least one mix, either directly (as shown in Figure 1) or via one or more SPs attached to the same mix. SPs connect to one mix. Links among the mixes form a fully connected network. Herd mixes are further partitioned into trust zones, with all mixes within a trust zone operated by a single provider under a single jurisdiction. Typically, the mixes of a trust zone are hosted in the same data center. To bootstrap, Herd needs at least one zone with one mix. A new zone requires a minimum set of clients before establishing calls, which can be achieved by requiring a minimal number of initial subscribers or by splitting an existing, large zone into several partitions.

### Overview

Herd adopts a hybrid of P2P and infrastructure-based architecture for performance and scalability reasons. A modest number of well-provisioned, dedicated mixes are connected to the core of the Internet around the world. A client may either connect to an SP or directly to a mix. We assume there is a business model to cover the cost of operating mixes and possibly to incentivize SP operators. For instance, mixes may charge their clients a subscription fee, possibly using a digital currency such as Bitcoin [42]. Since clients trust their mixes, the payment transaction need not be anonymous unless the client wishes to keep their identity hidden from the mix. The mix may in turn grant the operators of SPs free calls or pay them a fee as an incentive to relay calls from clients.

SPs learn the IP addresses of their connected clients but cannot detect when a client makes a call or with whom. We assume SPs act rationally, i.e., they perform in a way that will allow them to remain in good standing as an SP for their mix. Specifically, mixes monitor and reject SPs with insufficient availability or significant packet loss/jitter.

Clients connect to Herd continuously (modulo power or network outages), regardless of call activity. Given the low bitrate of VoIP relative to typical flat-rate broadband capacity, chaffing at a small multiple of that rate seems reasonable. Further, VoIP users tend to remain available to receive incoming calls. For example, prior work showed that half of Skype users are available more than 80% of the time [38].

### Threat Model

We assume an adversary who seeks to infer the IP addresses of the caller and callee of calls made via Herd, their time and duration, and their content. The adversary can observe the time series of encrypted traffic on all Herd links as part of a global, passive traffic analysis attack. Within a portion of the Internet controlled by the adversary, they can additionally compromise mixes and network components, change their behavior, and modify the time series of encrypted traffic as part of a local, active traffic analysis attack. These assumptions are reasonable because an active subversion with global reach is harder to achieve and maintain than a passive one. An active subversion is easier to detect and counteract by local authorities and typically requires a synchronous control loop. We make the common assumption that adversaries cannot break the cryptographic primitives or compromise the keys used by clients, SPs, or mixes they do not control.

We assume a Public Key Infrastructure (PKI) that provides a root of trust to authenticate legitimate mixes and zone directories. For instance, the root certificate can be embedded in the Herd client software, and a hash of the client software can be published periodically in several trusted outlets.

We assume that legitimate clients and SPs attach to mixes in a trust zone that is friendly to their cause. Clients and SPs can make their choice of a trust zone based on the zone’s location, jurisdiction, history, and operator.

### Anonymity Property

Under the threat model described above, Herd ensures zone anonymity for the caller and callee. That is, assuming a call is known to originate or terminate in a given zone, the communicating party is equally likely to be any of the users attached to the zone.

In the case of an inter-zone call (i.e., caller and callee attach to mixes in different zones), zone anonymity is independent for the caller and callee. Even if zone anonymity is violated for one participant due to a compromised mix, it continues to hold for the other. However, in the case of an intra-zone call (i.e., caller and callee attach to different mixes in the same zone), anonymity is lost for both the caller and callee if the zone is compromised. If this is undesirable, users can attach to mixes in two different zones; in this case, Herd ensures that only inter-zone calls are established.

### Roadmap

In the rest of this section, we discuss the components of Herd’s design. First, layered encryption ensures bitwise unlinkability and end-to-end confidentiality of VoIP packets. Second, Herd uses a rendezvous mechanism to establish low-delay circuits while maintaining anonymity for both caller and callee. Third, traffic obfuscation is used to thwart traffic analysis attacks, using appropriate mechanisms at clients, SPs, and mixes. Jointly, these components ensure that an adversary can learn only upper bounds on the volume of active calls between any given pair of zones, the volume of calls within a zone, and the maximum number of concurrently active calls among the clients attached to an SP.

Finally, superpeers can reduce a mix’s client-side bandwidth requirements from linear in the number of online clients to linear in the number of active callers. Herd relies on network coding to hide from the untrusted SPs which clients are making calls.

### Layered Encryption

Herd uses hop-by-hop and layered encryption over a sender-receiver mutually anonymous circuit as shown in Figure 1. Mixes maintain a Datagram TLS (DTLS) link to all other mixes, SPs maintain a DTLS link to the mix they are attached to, and clients maintain either one such link to a mix or a small number of links to SPs. All Herd traffic is transferred over these links.

As in Tor, mixes, SPs, and clients maintain a long-term identity key pair \( l \) used to sign DTLS certificates and their descriptors, and a short-term key pair \( s \) used to set up circuits and negotiate symmetric, ephemeral session keys \( e \). Descriptors containing public keys \( l \) and \( s \) of the zone participants are published in their directory, where they can be queried. Mixes and users communicate via DTLS links encrypted with ephemeral key \( e \), sealing the traffic with perfect forward secrecy. Finally, clients build circuits incrementally, negotiating a symmetric key with each mix on the circuit, one hop at a time, using \( s \) over DTLS links. We refer to the Herd specifications for more details [19].

Layered encryption provides bitwise unlinkability, and hides content and routing information from both individual mixes and eavesdroppers, while hop-by-hop encryption hides circuit IDs from the latter and provides perfect forward secrecy. (Circuit IDs are needed to look up the key used to peel off a layer of encryption, so they are transmitted outside of layered encryption.) Herd VoIP content is encrypted end-to-end between the caller and callee using a symmetric key negotiated over two circuits concatenated at rendezvous mixes (described below). A complete circuit has five hops (up to seven if optional SPs are used), with typically at least two intra-zone (and thus intra-data center) hops, and for interzone calls, at most three intercontinental hops (at most one if clients select a zone in their respective continent).

For security, simplicity, and future interoperability, Herd borrows most of its signaling and cryptographic protocol from Tor. This design decision enables Herd to build upon years of research and engineering from the Tor community.

### Security

Layered and hop-by-hop encryption maintain the following security invariants:
- **I1**: The encrypted content on successive links of a circuit is uncorrelated.
- **I2**: The interior mixes on a circuit know only the previous and next hop on the circuit.
- **I3**: The caller’s mix knows only the caller and the next mix on the circuit; the callee’s mix knows only the callee and the previous mix on the circuit.
- **I4**: A circuit includes two (not necessarily distinct) mixes in each of the caller and callee’s zone. Given I2, this implies that, from the perspective of a mix in the caller’s zone, the callee is equally likely to attach to any of the mixes in the callee’s zone, and vice versa.

### Rendezvous

The Herd rendezvous mechanism connects clients anonymously, independent of their trust zones. This mechanism comprises a per-zone directory server, at least one mix for each of the caller and callee, and for each such mix, a random and not necessarily distinct rendezvous mix in the same zone. The rendezvous mix is selected and trusted by the caller (resp. callee) to initiate/accept calls on her behalf. Each zone directory server stores the rendezvous mixes of all the clients attached to that zone (client’s public key and rendezvous mix IP address).

The Herd client software comes with a default list of zone directories and public keys used to locate and authenticate zones. Upon joining the system, a client obtains a signed certificate from a zone directory that contains a client ID and the zone’s signature. We assume that users exchange certificates prior to making calls using an out-of-band mechanism. We will discuss the join protocol in detail in Section 3.5.

A call is established using the rendezvous mechanism as follows. First, a hidden callee builds a circuit comprising a mix and rendezvous mix in her trust zone and uses it to publish her rendezvous mix in the zone directory. The caller follows the same procedure to select its mix and rendezvous mix. To make a call, a caller looks up the callee’s rendezvous mix in the directory of the zone contained in the callee’s certificate and initiates a handshake with the hidden callee. If the call is accepted, the two clients communicate via the rendezvous mixes, hence hiding the mixes to which they attach from each other, thus maintaining zone anonymity.

As discussed in Section 3.1 (anonymity property), zone anonymity is lost for the caller and callee if they both attach to the same, compromised zone. If they want to ensure that their anonymity does not depend on the same trust zone, they may use an alternative, pre-established circuit to a different zone to contact each other as shown in Figure 1. To do so, a caller whose certificate bears the same zone as the callee may choose a different trust zone to establish the call.

Rendezvous enables clients to receive VoIP calls while retaining zone anonymity by interposing a trusted local mix between the client’s mix and an untrusted zone. This is because the interposed mix hides the actual entry mix to which a client is attached (either directly or via an SP). Although our rendezvous mechanism is similar to Tor’s, Herd is the first system to combine it with traffic obfuscation (as we will describe below) in order to achieve zone anonymity.

### Security

Rendezvous maintains security invariant **I5**: Any mix in a client’s zone is equally likely to be the client’s rendezvous mix. Thus, knowledge of a client’s rendezvous mix does not reveal any information about which mix the client attaches to.

### Traffic-Analysis Resistance

Despite bitwise unlinkability, an adversary can observe and correlate the time series of encrypted packets on different links. Changes in call volume, payload rate (e.g., due to congestion), or manipulation of traffic by an active adversary can cause correlated changes in the time series of encrypted packets along a flow’s path. To defeat such traffic analysis, the anonymity network must craft the time series of packets on each (per-hop) link such that the adversary is unable to infer which clients are communicating. Herd does this by adding chaff traffic as needed to pad flows to a constant rate.

Herd uses different padding mechanisms on the clients, SPs, and mixes’ links. On the clients’ links, Herd simply maintains constant chaffing at a rate sufficient to carry a small number (possibly one) VoIP call(s). Chaff is then replaced with payload traffic when a call is made. On the links between SPs and mixes and among mixes, we use a dynamic chaffing strategy for traffic obfuscation, which can take advantage of temporal and spatial correlation among the payload traffic of groups of clients, in order to resist both short and long-term traffic analysis with low overhead. We describe both methods in more detail below.

#### Traffic Obfuscation on Client Links

Each client sends and receives at a constant rate equivalent to a small number of voice calls on their SP link(s). To do so, a constant number of encrypted packets equal to the size and rate of the VoIP codec’s packets is sent and received per time unit. Chaff packets, which include a sequence number, are substituted when no VoIP packets are to be sent. Both chaff and VoIP packets are encrypted with a symmetric key established between the client and mix when the client joined.

**Security**: Consider the security properties of clients exchanging bidirectional encrypted traffic at a fixed target rate with their SP. Due to congestion and packet loss, the achieved rate on a given link may differ from the target. However, the actual link rate reflects only the capacity and congestion state of the underlying network and reveals nothing about the payload it carries. Thus, the constant rate traffic is perfectly resistant to passive traffic analysis. Further, actively delaying or dropping traffic on a link does not leak useful information to a network observer because the downstream node’s outgoing stream rate will not be affected (it simply adds more chaff).

#### Traffic Obfuscation on SP Links

The links connecting SPs to their mixes carry bidirectional, encrypted, and padded traffic at a rate that is a multiple of the VoIP base rate. All links between the mixes of a zone and their SPs carry traffic at the same rate at any given time, but the rate can change over time to accommodate long-term changes in call volume (e.g., based on historical call volume information). Such changes take place at time scales of hours, e.g., to accommodate diurnal load patterns, but do not reveal individual call activity. Rate changes on SP links are orchestrated by the zone directory; mixes periodically report statistics about link utilization to their directory, which then signals them to ramp up/down the rate based on a utilization metric (e.g., average link utilization).

**Security**: The chaffing reveals no information about individual clients’ call activity. However, the sum of the rates on the mix-SP links of a zone reveals an upper bound on the maximal number of active calls originating or terminating in the zone at any given time. This is a deliberate design decision that significantly reduces the client-side bandwidth overhead of mixes, at the cost of revealing an upper bound on the per-zone call volume.

#### Traffic Obfuscation on Mix Links

The mixes are fully connected by a set of encrypted and padded links. The links connecting mixes within a given zone, as well as the links connecting mixes in a given pair of zones, respectively, carry traffic at the same rate at any given time. However, the rates within a zone and between any pair of zones may change over time to accommodate changes in the aggregate call rate. As above, these rate changes take place on time scales of hours and do not reveal individual call activity. Although rate changes on links spanning a single zone are orchestrated unilaterally by their directory (as for SPs), rate changes on links crossing zones require coordination.