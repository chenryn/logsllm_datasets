# DNS - Devious Name Services: Destroying Privacy & Anonymity Without Your Consent

## Presenter
Jim Nitterauer  
Senior Security Specialist

## Disclaimer
- The information in this presentation is intended to help improve your security and privacy posture and should not be used for unethical purposes.
- The concepts presented are not meant to imply original research on my part or on the part of my employer.
- Information is gathered from public and private sources, with proper references and credit provided where applicable.
- The views expressed in this talk are not necessarily those of my employer.

## Why Am I Here?
- To raise awareness about the potential privacy and anonymity risks associated with DNS and EDNS0.
- To provide tools and methods for detecting and mitigating these risks.

## Agenda
1. Review DNS, EDNS0 extensions, and Option Codes
2. Discuss the rationale for EDNS0 use
3. Examine EDNS Client Subnet (ECS)
4. Review DNS Resolver Support
5. Examine Tools & Procedures for Testing
6. Discuss Privacy Implications of EDNS0 OPT Codes
7. Discuss Potential for Abuse
8. Questions & Answers

## Goals for Today
- Understand the basics of EDNS OPT RRs
- Understand the potential threat to your privacy
- Have direction for detecting the use of EDNS OPTs
- Be able to better ensure your online privacy

## Brief History of DNS
- **Introduction**: Introduced in 1983 by Paul Mockapetris and Jon Postel at the Information Sciences Institute, USC.
- **RFCs**:
  - RFC 882 & RFC 883 (updated by RFC 973 in 1986)
  - Obsoleted by RFC 1034 (data structure and exchange) and RFC 1035 (record and infrastructure format) in 1987.
- **Main Components**:
  - Namespace
  - Resource Records (RRs)
  - Resolvers
  - Name Servers
- **Improvements**:
  - Master/Slave relationships
  - Notify
  - Incremental Zone Transfers (IXFR)
  - Dynamic Updates (RFC 2136)
  - Extension Mechanisms for DNS (EDNS0) - RFC 2671 & RFC 6891
  - Clarifications (RFC 2181)
  - Negative responses (RFC 2308)
  - DNS Security (DNSSEC) - RFC 2535 now RFC 6840
  - Use of EDNS OPT Codes

## EDNS RFC 2671 & 6891
- **Proposed by Paul Vixie in 1999**
- **Replaced by RFC 6891 in 2013**
- **Key Features**:
  - Overcomes 512-byte UDP packet size limit
  - Required for certain modern DNS features
  - Defines transport standards
  - Defines option format and assignments

## EDNS Option Codes
- **IANA Registry**: [https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11]
- **Current Status**:
  - 11 RFCs
  - 3 Drafts
  - Approximately 17 codes in use
  - 65,535 possible code assignments

### Key EDNS Option Codes
- **Code 0**: Reserved
- **Code 1**: LLQ (Long Lived Queries) - Apple
- **Code 2**: UL (Dynamic DNS Update Leases) - Apple
- **Code 3**: NSID (Name Server Identifier) - ISC
- **Code 5**: DAU (DNSSEC Algorithm Understood) - NIST
- **Code 6**: DHU (DS Hash Understood) - NIST
- **Code 7**: N3U (NSEC3 Hash Understood) - NIST
- **Code 8**: ECS (EDNS Client Subnet) - Google, Akamai
- **Code 9**: EDNS EXP (SOA Expire Identifier) - ISC
- **Code 10**: COOKIE (DNS Cookies) - ISC, Huawei
- **Code 11**: EDNS-TCP (TCP Keepalive) - Red Hat, Dyn, ISC
- **Code 12**: PADDING (Random Padding) - GmbH
- **Code 13**: CHAIN (CHAIN Query Requests) - Red Hat
- **Code 14**: EDNS KEY (DNSSEC) - Verisign, Google, ICANN
- **Code 26946**: DEVICEID (Umbrella Device ID) - Cisco

## EDNS Use Cases
- **DNSSEC Implementation (Codes 5, 6, & 7)**: 
  - Inform resolvers about supported cryptographic algorithms.
- **EDNS Client Subnet (ECS) (Code 8)**:
  - Enables Content Delivery Networks (CDNs) via DNS.
  - Provides IPv4 WAN or IPv6 address subnet of the requester.
- **DeviceID (Code 26946)**:
  - Used by Cisco Umbrella.
  - Sends organization ID, remote "internal" IP, and remote IPv6.
- **ISP Location in DNS Queries (Draft)**:
  - Proposed by CNNIC.
  - Claims to improve privacy by including country, area, and ISP data.
- **Client ID in Forwarded DNS Queries (Draft)**:
  - Proposed by Akamai.
  - Provides more precise client identity for parental control, domain access restriction, and compromise attribution.

## EDNS Client Subnet (ECS)
- **Development**:
  - Initial draft submitted on January 27, 2011, by C. Contavalli, W. van der Gaast, S. Leach, and D. Rodden.
  - Revised and resubmitted multiple times, with final RFC 7871 published in May 2016.
- **Patent**:
  - Patent application WO2013164007 A1 submitted by Jan Seedorf and Mayutan Arumaithurai.
  - U.S. Patent application US20150134730 A1.
- **Workflow**:
  - Client sends request to resolver.
  - Resolver packages sending IP into OPT RR Data if it supports ECS.
  - Authoritative server supplies a geo-appropriate answer.
  - Client receives the best route based on geolocation.

## Tools for Evaluating Use
- **No Registry for ECS Compliance**:
  - Check provider technical material or ask directly.
- **Testing Methods**:
  - `dig @8.8.8.8 +short -t txt edns-client-sub.net`
  - `dig @x.x.x.x –t ns avaliddomain.com +subnet=y.y.y.y`
  - Use Packetbeat to capture DNS traffic and forward to Graylog.
  - Use Nmap script `dns-client-subnet-scan.nse` for isolated testing.
  - Python scripts to query nameservers and supply ECS data.
- **DNS Packages Supporting EDNS OPT**:
  - .NET: ARSoft.Tools.Net
  - Python: Dnspython, Twisted Matrix, Getdns-python-bindings, Pydig
  - PHP: NET_DNS2
  - Scapy (limited support)

## Privacy & Security Implications
- **Leaks IP Information**:
  - To every DNS server touched.
  - First server may not honor subnet restrictions.
  - If /32, all DNS can be attributed to the source IP.
- **Leaks Other Data**:
  - Many OPTs are proprietary with no insight into sent data.
  - Could include MAC addresses, credentials, etc.
  - Anyone in the path could capture this data.
- **No Disclosure**:
  - Use not well-documented or advertised.
  - Implementers can track data without your knowledge.
  - No easy means of opting out.
- **Data Return**:
  - From any DNS server touched by the request.
  - Data returned might have unexpected impact.
  - Malware could use this for C&C traffic.
  - Data shared can be manipulated, leading to erroneous attribution.
- **Third-Party Data Recipients**:
  - Can buy info regarding your DNS habits.
  - Competitors and unethical hackers can also access this data.
  - Privacy as it relates to DNS is dead without extra measures.

## Defensive Options
- Know what’s normal.
- Route all DNS to known resolvers.
- Lock out non-validated DNS at the edge.
- Disable EDNS(0).
- Monitor DNS logs or full PCAP.
- Create IPS rules as needed.
- Enforce DNSSEC (some services may break).

## Offensive Options
- Create DNS with forged OPT data.
- Use a full VPN tunnel.
- Use Tor past a safe endpoint.
- Account for IPv6 traffic.
- Use TorGhost (only IPv4).
- Test with Wireshark or TCPDump.

## Summary
- **Useful Purposes**:
  - Enable CDNs via DNS.
  - Enable DNSSEC.
  - DNS responses can mitigate DDoS.
  - Signature of compromise can be attributed to a device.
- **Privacy Concerns**:
  - All servers in DNS can track data.
  - No standard for opting out.
  - Forwarding EDNS OPT compromises privacy.
  - No mechanism to verify OPT data accuracy.
- **Potential for Abuse**:
  - Data can be easily spoofed.
  - Data mining.
  - Botnet C&C.
  - Data exfiltration.

## Wrap Up
- **Questions & Answers**
- **Contact Info**:
  - Email: [PI:EMAIL]
  - Twitter: [@jnitterauer]
  - LinkedIn: [https://www.linkedin.com/in/jnitterauer]
  - Phone: 850-932-5338 ext. 6468