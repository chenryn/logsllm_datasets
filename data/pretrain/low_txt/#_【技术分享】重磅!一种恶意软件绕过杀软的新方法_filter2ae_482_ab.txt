尽管Bashware已经启用了WSL并进入开发者模式，但Linux实例仍然没有包含任何文件系统。因此，Bashware的下一步是从Microsoft服务器下载并解压缩Linux文件系统。正常情况下，用户可以使用“Lxrun”命令行程序下载Ubuntu 16.04 Linux文件系统，并通过/install选项将其安装到Windows PC上。Bashware利用Lxrun.exe从Microsoft服务器下载Linux文件系统并将其安装在Windows系统上，整个过程看似合法。根据我们的研究发现，这个安装过程在特定条件下容易受到网络攻击，这部分内容将在下文中详细阐述。

### 步骤4：Wine

现在，Bashware已经在Windows系统上建立了一个完整的Linux环境，并且能够在两个环境中执行任何操作。我们的最终目标是即使恶意软件不是跨平台的，也能从Linux程序中运行恶意软件以攻击Windows系统。经过分析和研究，我们发现Winehq项目是一个完美的解决方案。该项目是一个免费开源的兼容层，允许Microsoft Windows程序在类Unix操作系统上运行。对于那些不熟悉它的人来说，Wine不是一个模拟器，而是将Windows API调用转换为POSIX调用。这正是我们所需要的，因为使用Wine可以在WSL环境中静默运行Windows恶意软件。Bashware使用Winehq项目功能，并将优化后的Wine安装到WSL Linux环境中。

接下来，Wine对EXE格式的文件进行转换，将其NT系统调用转换为POSIX系统调用。之后，lxcore.sys驱动程序会将这些POSIX系统调用再转换回NT系统调用，并将lxcore作为实际调用者。这样一来，在Windows操作系统上运行的文件就可以在Linux操作系统中执行任何恶意软件的有效载荷，并绕过大多数安全产品的检测。

### 结论

随着Bashware完成上述四个步骤，它成为运行任意恶意软件并绕过常见防病毒安全产品、安全检测工具和调试工具的理想工具。基于我们的研究，Bashware并没有利用WSL设计中的任何逻辑或实现上的漏洞。事实上，WSL的功能设计得相当好。导致Bashware能够运行任意恶意软件的主要原因有两点：一是这项技术在Windows操作系统中相对新颖；二是各种安全厂商缺乏对该技术进行检测的意识。我们认为，安全厂商应该采取行动，在支持这项关键技术的同时，也要设法阻止类似Bashware这样的网络威胁。

微软已采取措施，协助安全厂商处理由WSL引入的新安全问题，例如提供了Pico APIs，这些API接口可由防病毒公司调用来监控此类进程。

### 进一步分析

在WSL的安装过程中，LxRun.exe程序负责从Microsoft服务器下载并解压缩Linux文件系统。之后，文件系统被命名为lxss.tar.gz，并保存在%APPDAT%目录下的隐藏文件夹中。获取到文件系统的压缩包后，LxRun.exe将其解压缩到同一目录中。解压后的文件夹包含了完整的Linux文件系统，WSL和Bash.exe稍后会使用该文件系统。

尽管微软已经努力保护Linux文件系统本身，例如防止Linux初始化被篡改，防范常见的注入技术等，但在文件系统本身的保护机制方面仍有不足。根据我们的研究和分析，Linux文件系统在安装过程中存在安全隐患。如果攻击者在下载后（在提取文件系统压缩包之前）修改文件系统的压缩包，由于系统不会验证文件系统的真实性，因此允许攻击者完全更改文件系统并加载任意Linux文件系统。

与实现此技术相关的主要问题是识别存档被解压的确切时间。幸运的是，微软为下载的文件系统计算了SHA256值，该值在下载过程完成后（解压文件之前）被保存到一个文件中。然而，这个SHA256散列值除了用于识别文件系统的压缩包何时被解压之外，并没有其他用途。

当用户希望使用WSL时，他们会运行“Bash.exe”，该程序在用户权限下执行。在每个运行的WSL中，NTFS分区会被自动挂载到Linux环境中的/mnt目录下，从而允许从WSL内读写和执行NTFS。如果网络攻击者利用管理员权限启动Bash.exe程序，那么Bash.exe及其子进程将以管理员权限执行，从而轻易绕过UAC。在Linux系统端，攻击者可以通过提取操作获得超级管理员权限。

### 参考文献

1. 官方微软关于WSL的博客和GitHub：
   - [https://blogs.msdn.microsoft.com/wsl](https://blogs.msdn.microsoft.com/wsl)
   - [https://github.com/Microsoft/BashOnWindows](https://github.com/Microsoft/BashOnWindows)

2. Alex Ionescu的GitHub仓库：
   - [https://github.com/ionescu007/lxss](https://github.com/ionescu007/lxss) – 致力于研究、代码和WSL的各种研究，为本项目提供了大量信息和灵感。

3. Wine项目 – 一个免费开源的兼容层，允许Microsoft Windows程序在类Unix操作系统上运行。
   - [https://en.wikipedia.org/wiki/Free_and_open-source_software](https://en.wikipedia.org/wiki/Free_and_open-source_software)
   - [https://en.wikipedia.org/wiki/Compatibility_layer](https://en.wikipedia.org/wiki/Compatibility_layer)
   - [https://en.wikipedia.org/wiki/Computer_program](https://en.wikipedia.org/wiki/Computer_program)
   - [https://en.wikipedia.org/wiki/Unix-like](https://en.wikipedia.org/wiki/Unix-like)
   - [https://en.wikipedia.org/wiki/Operating_system](https://en.wikipedia.org/wiki/Operating_system)