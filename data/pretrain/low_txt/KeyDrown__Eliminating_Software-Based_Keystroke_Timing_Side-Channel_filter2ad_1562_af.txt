以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

[7] L. Cai and H. Chen, “TouchLogger: Inferring Keystrokes on Touch Screen from Smartphone Motion,” in USENIX Workshop on Hot Topics in Security – HotSec, 2011.

[8] CSID, “Consumer Survey: Password Habits,” [Online]. Available: <http://www.csid.com/wp-content/uploads/2012/09/CS-PasswordSurvey-FullReport-FINAL.pdf>, 2012.

[9] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang, “The Tangled Web of Password Reuse,” in NDSS’14, 2014.

[10] W. Diao, X. Liu, Z. Li, and K. Zhang, “No Pardon for the Interruption: New Inference Attacks on Android Through Interrupt Timing Analysis,” in S&P’16, 2016.

[11] S. Gaw and E. W. Felten, “Password Management Strategies for Online Accounts,” in SOUPS’06, 2006.

[12] Q. Ge, Y. Yarom, D. Cock, and G. Heiser, “A Survey of Microarchitectural Timing Attacks and Countermeasures on Contemporary Hardware,” Journal of Cryptographic Engineering, pp. 1–27, 2016.

[13] N. Gondhia, “Samsung Galaxy S7 Battery Life Review,” 2016. [Online]. Available: <http://www.androidauthority.com/samsung-galaxy-s7-battery-life-review-683968/>

[14] Google, “Android O Prevents Access to /proc/stat,” Jun. 2017. [Online]. Available: <https://issuetracker.google.com/issues/37140047>

[15] D. Gruss, J. Lettner, F. Schuster, O. Ohrimenko, I. Haller, and M. Costa, “Strong and Efficient Cache Side-Channel Protection Using Hardware Transactional Memory,” in USENIX Security Symposium, 2017.

[16] D. Gruss, C. Maurice, K. Wagner, and S. Mangard, “Flush+Flush: A Fast and Stealthy Cache Attack,” in DIMVA’16, 2016.

[17] D. Gruss, R. Spreitzer, and S. Mangard, “Cache Template Attacks: Automating Attacks on Inclusive Last-Level Caches,” in USENIX Security Symposium, 2015.

[18] D. Gullasch, E. Bangerter, and S. Krenn, “Cache Games – Bringing Access-Based Cache Attacks on AES to Practice,” in S&P’11, 2011.

[45] Qualcomm, “Snapdragon Mobile Processors and Chipsets,” Jan. 2017. [Online]. Available: <https://www.qualcomm.com/products/snapdragon>

[19] S. Idrus, E. Cherrier, C. Rosenberger, and P. Bours, “Soft Biometrics for Keystroke Dynamics: Profiling Individuals While Typing Passwords,” Computers & Security, vol. 45, pp. 147–155, 2014.

[20] M. S. Inci, B. Gulmezoglu, G. Irazoqui, T. Eisenbarth, and B. Sunar, “Cache Attacks Enable Bulk Key Recovery on the Cloud,” in CHES’16, 2016.

[21] Intel, “82093AA I/O Advanced Programmable Interrupt Controller (IOAPIC),” 1996.

[22] ——, “Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 3 (3A, 3B & 3C): System Programming Guide,” 2014.

[23] S. Jana and V. Shmatikov, “Memento: Learning Secrets from Process Footprints,” in S&P’12, 2012.

[24] Y. Jang, S. Lee, and T. Kim, “Breaking Kernel Address Space Layout Randomization with Intel TSX,” in CCS’16, 2016.

[25] N. Kralevich, “Honey, I Shrunk the Attack Surface,” in Black Hat 2017 Briefings, 2017.

[26] D. G. B. Lab, “Global App Power Consumption Report 2016, H1,” 2016. [Online]. Available: <https://medium.com/@DU-Global-Battery-Lab/e7f9b845bed>

[27] P.-M. Lee, W.-H. Tsui, and T.-C. Hsiao, “The Influence of Emotion on Keyboard Typing: An Experimental Study Using Auditory Stimuli,” PLOS ONE, vol. 10, pp. 1–16, 2015.

[28] “ld.so(8) Linux Programmer’s Manual,” Linux man-pages project, 2016. [Online]. Available: <http://man7.org/linux/man-pages/man8/ld.so.8.html>

[29] M. Lipp, D. Gruss, M. Schwarz, D. Bidner, C. Maurice, and S. Mangard, “Practical Keystroke Timing Attacks in Sandboxed JavaScript,” in ESORICS’17, 2017, (to appear).

[30] M. Lipp, D. Gruss, R. Spreitzer, C. Maurice, and S. Mangard, “ARMageddon: Cache Attacks on Mobile Devices,” in USENIX Security Symposium, 2016.

[31] F. Liu, Y. Yarom, Q. Ge, G. Heiser, and R. B. Lee, “Last-Level Cache Side-Channel Attacks are Practical,” in S&P’15, 2015.

[32] LWN, “The High-Resolution Timer API,” Jan. 2006. [Online]. Available: <https://lwn.net/Articles/167897/>

[33] J. Ma, W. Yang, M. Luo, and N. Li, “A Study of Probabilistic Password Models,” in S&P’14, 2014.

[34] C. Maurice, N. Le Scouarnec, C. Neumann, O. Heen, and A. Francillon, “Reverse Engineering Intel Complex Addressing Using Performance Counters,” in RAID’15, 2015.

[35] L. W. McVoy, C. Staelin et al., “lmbench: Portable Tools for Performance Analysis,” in USENIX ATC’96, 1996.

[36] W. Melicher, B. Ur, S. M. Segreti, S. Komanduri, L. Bauer, N. Christin, and L. F. Cranor, “Fast, Lean, and Accurate: Modeling Password Guessability Using Neural Networks,” in USENIX Security Symposium, 2016.

[37] Microsoft, “ACPI System Description Tables,” Jul. 2016. [Online]. Available: <https://msdn.microsoft.com/en-us/windows/hardware/drivers/bringup/acpi-system-description-tables#madt>

[38] A. Narayanan and V. Shmatikov, “Fast Dictionary Attacks on Passwords Using Time-Space Tradeoff,” in CCS’05, 2005.

[39] P. Norvig, “English Letter Frequency Counts: Mayzner Revisited,” 2013. [Online]. Available: <http://norvig.com/mayzner.html>

[40] Y. Oren, V. P. Kemerlis, S. Sethumadhavan, and A. D. Keromytis, “The Spy in the Sandbox: Practical Cache Attacks in JavaScript and Their Implications,” in CCS’15, 2015.

[41] D. A. Osvik, A. Shamir, and E. Tromer, “Cache Attacks and Countermeasures: The Case of AES,” in CT-RSA, 2006.

[42] C. Percival, “Cache Missing for Fun and Profit,” in Proceedings of BSDCan, 2005.

[43] P. Pessl, D. Gruss, C. Maurice, M. Schwarz, and S. Mangard, “DRAMA: Exploiting DRAM Addressing for Cross-CPU Attacks,” in USENIX Security Symposium, 2016.

[44] S. Pinet, J. C. Ziegler, and F.-X. Alario, “Typing is Writing: Linguistic Properties Modulate Typing Execution,” Psychon Bull Rev, vol. 23, no. 6, pp. 1898–1906, Apr. 2016.

[46] T. Ristenpart, E. Tromer, H. Shacham, and S. Savage, “Hey, You, Get Off of My Cloud: Exploring Information Leakage in Third-Party Compute Clouds,” in CCS’09, 2009.

[47] R. Shay, S. Komanduri, P. G. Kelley, P. G. Leon, M. L. Mazurek, L. Bauer, N. Christin, and L. F. Cranor, “Encountering Stronger Password Requirements: User Attitudes and Behaviors,” in SOUPS’10, 2010.

[48] P. Shrestha, M. Mohamed, and N. Saxena, “Slogger: Smashing Motion-Based Touchstroke Logging with Transparent System Noise,” in WiSec’16, 2016.

[49] L. Simon, W. Xu, and R. Anderson, “Don’t Interrupt Me While I Type: Inferring Text Entered Through Gesture Typing on Android Keyboards,” Proceedings on Privacy Enhancing Technologies, 2016.

[50] D. X. Song, D. Wagner, and X. Tian, “Timing Analysis of Keystrokes and Timing Attacks on SSH,” in USENIX Security Symposium, 2001. [Online]. Available: <https://www.usenix.org/legacy/publications/library/proceedings/sec01/tech/song.html>

[51] The GTK+ Team, “GTK+ Features,” 2016. [Online]. Available: <https://www.gtk.org/features.php>

[52] R. Veras, C. Collins, and J. Thorpe, “On Semantic Patterns of Passwords and Their Security Impact,” in NDSS’14, 2014.

[53] P. Vila and B. Köpf, “Loophole: Timing Attacks on Shared Event Loops in Chrome,” in USENIX Security Symposium, 2017.

[54] R. Wash, R. Rader, R. Berman, and Z. Wellmer, “Understanding Password Choices: How Frequently Entered Passwords Are Re-Used Across Websites,” in SOUPS’16, 2016.

[55] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek, “Password Cracking Using Probabilistic Context-Free Grammars,” in S&P’09, 2009.

[56] M. Winnick and J. Mons, “Mobile Touches: A Study on Humans and Their Tech,” 2016. [Online]. Available: <https://blog.dscout.com/mobile-touches>

[57] X.org Foundation, “Xorg Documentation,” Oct. 2014. [Online]. Available: <https://www.x.org/wiki/Documentation/>

[58] Y. Yarom and K. Falkner, “Flush+Reload: A High Resolution, Low Noise, L3 Cache Side-Channel Attack,” in USENIX Security Symposium, 2014.

[59] Y. Yarom, Q. Ge, F. Liu, R. B. Lee, and G. Heiser, “Mapping the Intel Last-Level Cache,” Cryptology ePrint Archive, Report 2015/905, pp. 1–12, 2015.

[60] K. Zhang and X. Wang, “Peeping Tom in the Neighborhood: Keystroke Eavesdropping on Multi-User Systems,” in USENIX Security Symposium, 2009.

---

### 附录

我们比较了四种不同侧信道在启用和不启用KeyDrown情况下的准确性（procfs, rdtsc, Flush+Reload, 和Prime+Probe对最后一级缓存的攻击），测试平台包括三款不同的架构：Lenovo ThinkPad T460s（Intel Core i5-6200U）、LG Nexus 5（ARMv7）和OnePlus 3T（ARMv8）。表IV总结了所有攻击在启用和不启用KeyDrown情况下的F分数。当仅考虑单次跟踪攻击时，KeyDrown在所有情况下都能防止按键时间攻击。

**表IV. 启用和不启用KeyDrown状态下最先进的攻击的F分数**

| 设备          | ThinkPad T460s | LG Nexus 5 | OnePlus 3T |
|---------------|-----------------|------------|------------|
| **侧信道**    | procfs          | procfs     | procfs     |
| 未保护        | 1.00            | 1.00       | 1.00       |
| KeyDrown      | 0.15            | 0.15       | 0.15       |
| 中断计时 (rdtsc) | 0.94            | 0.94       | 0.99       |
| KeyDrown      | 0.14            | 0.14       | 0.15       |
| Flush+Reload  | 0.99            | 0.99       | 0.93       |
| KeyDrown      | 0.09            | 0.02       | 0.10       |
| LLC上的Prime+Probe | 0.81            | 0.80       | 0.89       |
| KeyDrown      | 0.11            | 0.11       | 0.07       |

**图13. Nexus 5上的procfs攻击**  
注入的按键（×）和真实事件（•）在启用KeyDrown之前（虚线前）无法区分。

**图14. Nexus 5上的基于时间的攻击**  
注入的按键（×）和真实事件（•）在启用KeyDrown之前（虚线前）无法区分。

我们在Nexus 5的触摸屏软键盘上进行了实验。启用KeyDrown后，精度降低到0.01，因此F分数为0.02，这意味着比总是预测为真的基准有≤-86.5%的优势。

**图15. Nexus 5上通过Multi-Prime+Probe攻击检测触摸中断处理程序的缓存活动**  
我们并行监控了5个缓存集以提高噪声鲁棒性。没有KeyDrown的情况下，精度为0.71，召回率为0.92，因为其他应用程序访问其中一个缓存集与触摸中断处理程序访问缓存集无法区分，导致了大量的假阳性。启用KeyDrown后，精度下降到0.06，因为攻击者还测量了注入按键产生的噪声。因此，F分数为0.11。

我们在OnePlus 3T的触摸屏软键盘上进行了实验。**图16. 对libflinger.so的Flush+Reload攻击**  
没有KeyDrown的情况下，精度为0.88，F分数为0.93。如果启用KeyDrown，精度降低到0.05，因此F分数为0.10，这意味着比总是预测为真的基准有≤-32.5%的优势。

**图17. OnePlus 3T上的procfs攻击**  
注入的按键（×）和真实事件（•）在启用KeyDrown之前（虚线前）无法区分。

**图18. OnePlus 3T上的基于时间的攻击**  
注入的按键（×）和真实事件（•）在启用KeyDrown之前（虚线前）无法区分。

该攻击的精度分别为1.00（F分数为1.00）和0.99（F分数为0.99）。启用KeyDrown后，精度分别降低到0.08（F分数为0.15）和0.07（F分数为0.15），这比总是预测为真的基准有0.0%的优势。

**图19. OnePlus 3T上通过Multi-Prime+Probe攻击检测触摸中断处理程序的缓存活动**  
我们并行监控了5个缓存集以提高噪声鲁棒性。没有KeyDrown的情况下，精度已经很低，为0.80，召回率为1.00，因为其他应用程序访问其中一个缓存集与触摸中断处理程序访问缓存集无法区分，导致了大量的假阳性。启用KeyDrown后，精度下降到0.10，因为攻击者还测量了注入按键产生的噪声。因此，F分数为0.07，这意味着比总是预测为真的基准有≤-52.7%的优势。

---

希望这些改进能够使你的文本更加清晰、连贯和专业。