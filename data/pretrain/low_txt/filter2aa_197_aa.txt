# Modern Initial Access and Evasion Tactics

## Red Teamer’s Delight
**Mariusz Banach**  
Red Team Operator at ING Tech Poland  
[@mariuszbit](https://twitter.com/mariuszbit), [github/mgeeky](https://github.com/mgeeky)

---

### Agenda
- A Few Phishing Tricks
- Initial Access in 2022
  - Typical Vectors
  - Rise of Containerized Malware
  - The Beauty of HTML Smuggling
- Evasion In-Depth
  - Delivery
  - Exploitation
  - Installation
  - Command & Control
  - Exfiltration

### Disclaimer
- The effectiveness of initial access and evasion tactics can vary significantly based on the company or vendor.
- It is challenging to maintain a 0% detection rate in mature, highly secured environments.
- This talk does not introduce any new, fancy tactics. For example: EC2 587/tcp Socat Redirector -> Gsuite -> Target.

## Phishing and Initial Access

### Initial Access
- **Phish to Persist**: Instead of just gaining access, aim for long-term persistence (Matt Hand @SpecterOps).
- **Delayed and Extended Execution**: Decouple file write and execution events to evade detection.
- **Use VBA/WSH to Drop DLL/XLL**:
  - COM Hijacking
  - DLL Side Loading / DLL Hijacking (e.g., `%LOCALAPPDATA%\Microsoft\Teams\version.dll`)
  - XLL Persistence
  - If dealing with CrowdStrike, drop CPL files.
- **Windows Script Host (WSH)**:
  - VBE, VBS - VBScript
  - JSE, JS – JScript
  - HTA – HTML Application
  - XSL - XML
  - WSF – Windows Script File
    - Language-agnostic file format
    - Allows multiple scripts (jobs) and combinations of languages within a single file
    - Generally well-detected

### Typical Vectors - WSH
- **WSF, VBS, JS, XSL**: These are commonly used but are generally well-detected unless dealing with CrowdStrike, which excludes CPL files from scanning.

### Typical Vectors - Executables
- **Executable Files**:
  - EXE
  - CPL – Control Panel Applet (DLL)
  - XLL – Excel Add-in (DLL)
  - SCR – Screensaver (EXE)
  - BAT, COM, PS1, SH
  - Well-detected, except for CPL files with CrowdStrike (100% success rate).

### Typical Vectors - LNKs
- **Shortcut Files (LNK)**:
  - Still popular in phishing campaigns
  - Often detected

### Typical Vectors - HTMLs
- **HTML in Attachments**:
  - Not commonly detected
  - Can contain HTML Smuggling payloads
  - Right-To-Left Override trick can be used (e.g., "My Resume.vbs" ➔ "My Resume sbv.html")

### Typical Vectors - COM Scriptlets
- **COM Scriptlets**:
  - SCT – COM Scriptlet
  - WSC – Windows Script Component
  - INF-SCT – CSMTP accepts INF which can execute COM Scriptlets
  - Used to instantiate COM objects via Regsvr32 or GetObject
  - Can be detected

### Typical Vectors - Maldocs
- **VBA Macros**:
  - Consider applying Defender ASR Bypasses
  - Prepend with an "Enable Macro" lure message + lure-removal automation
  - Effective weaponization strategies:
    - File Dropping-based
    - DotNetToJS
    - XSL
  - Documents that support Auto-Execution:
    - Word, Excel
    - Publisher (pub)
    - RTF (disguised Word document)
  - Macro-Enabled Office documents still prevalent

- **Documents without Auto-Exec**:
  - PowerPoint (ppt, ppsm, pptm)
  - Microsoft Access (accde, mdb)
  - Word via Template Injection (doc, docx)
  - Excel via CustomUI Injection (xls, xlsx)
  - Less detected

- **Other Uncommon Office Vectors**:
  - Visio (vdw, vsd, vsdm, vss, vssm, vstm, vst)
  - MS Project (mpd, mpp, mpt, mpw, mpx)
  - Not detected

### Rise of Containerized Malware
- **Microsoft Blocks VBA Macros**:
  - Starting February 7, 2022, Microsoft blocks VBA macros in documents downloaded from the internet.
  - Files downloaded from the internet have a Mark-of-the-Web (MOTW) taint flag.
  - Office documents with MOTW flags are VBA-blocked.

- **Evading MOTW**:
  - Some container file formats do not propagate the MOTW flag to inner files (as pointed out by Outflank):
    - ISO / IMG
    - 7zip*
    - CAB
    - VHD / VHDX
  - PDFs can contain URLs pointing to malware or attachments.
  - Attachments in PDFs can auto-open using JavaScript.
  - Customers often use PDFs with 10+ attached resources daily.

### The Beauty of HTML Smuggling
- **Effective Against Aggressive Web Proxies**:
  - Bypasses proxies, sandboxes, emulators, and email scanning.
  - Malicious file embedded in HTML using JavaScript.
  - Requires anti-sandbox/-headless and timing evasions.

- **Deadly Effective**:
  - Many ways to deliver malicious content (thanks Outflank!).
  - Extensions that pose a risk include:
    - docm, doc, docx, dot, dotm, rtf, xls, xlsm, xlam, xlsx, xla, xlt, xltm, slk, chm, scf, url, csproj, pub, ppa, ppam, pptm, ppsm, pot, potm, pps, pptx, vdw, vsd, vsdm, vss, vssm, vstm, vst, library-ms, settingscontent-ms, mpd, mpp, mpt, mpw, mpx, vbs, vbe, hta, sct, wsf, wsc, xsl, js, jse, html, zip, 7z, iso, img, cab, pdf, vhd, vhdx, exe, scr, cpl, xll, bat, ps1, cmd, sh, lnk, chm

### Summing Up on File Format Vectors
- **Word, Excel, Exotics, Visio, PowerPoint, MS Project, WSH, COM, HTML, Executables, Containers, Publisher, Evasion**

This comprehensive overview covers various techniques and vectors used in modern initial access and evasion tactics, providing insights into the evolving landscape of cybersecurity threats.