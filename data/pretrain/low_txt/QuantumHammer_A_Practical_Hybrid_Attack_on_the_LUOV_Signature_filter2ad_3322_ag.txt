### Structure of the Public Key \(Q_2\)

Leveraging Rowhammer and bit-tracing attacks, we extend our approach to fully recover all key bits. This is accomplished by transforming the Multivariate Quadratic (MQ) system into smaller, underdetermined MQ systems that maintain the same structure as the original. Rather than decomposing the matrix, we regroup the equations into a discrete set of variables. Without the amplification provided by fault attacks, solving these smaller, underdetermined MQ systems would be infeasible. In this context, our QuantumHammer attack represents a novel and effective method.

### Preventing Algebraic Collapse

QuantumHammer is enabled by the fact that the MQ equations in LUOV use only a small subset of the key bits. Consequently, recovering even a small fraction of the key bits via Rowhammer and bit-tracing attacks can collapse the MQ system into smaller, more tractable MQ systems. In many scenarios, side-channel attacks can also recover a small fraction of the key bits, making this a significant threat to real-world deployments. To prevent such collapse, it is advisable to verify the resulting MQ system's security during the design phase, assuming any fixed-size subset of the key bits may be compromised.

### Conclusion

Rowhammer attacks can have severe consequences by flipping bits in other processes and leaking key information. Post-quantum schemes are expected to replace existing public-key schemes in the near future. This research underscores the critical importance of both hardware and cryptographic security for cryptosystems. The LUOV signature scheme, currently in the second round of NIST’s PQC standardization process, is based on the well-known oil and vinegar scheme, which has withstood over two decades of cryptanalysis. Our analysis, both mathematical and implementation-wise, reveals weaknesses in both areas. The QuantumHammer attack combines these weaknesses to successfully recover the full secret key of the scheme. There is a need to evaluate the hardware and software implementations of cryptosystems in conjunction with their mathematical robustness.

### Acknowledgments

We thank our anonymous reviewers for their insightful comments, which significantly improved the quality of this paper. This work is supported by the U.S. Department of State, Bureau of Educational and Cultural Affairs’ Fulbright Program and by the National Science Foundation under grant CNS-1814406.

### References

[1] Gorjan Alagic, Jacob Alperin-Sheriff, Daniel Apon, David Cooper, Quynh Dang, Yi-Kai Liu, Carl Miller, Dustin Moody, Rene Peralta, et al. 2019. Status report on the first round of the NIST post-quantum cryptography standardization process. US Department of Commerce, National Institute of Standards and Technology.

[2] Ward Beullens and Bart Preneel. 2017. Field lifting for smaller UOV public keys. In International Conference on Cryptology in India. Springer, 227–246.

[3] Ward Beullens, Alan Szepieniec, Frederik Vercauteren, and Bart Preneel. 2017. LUOV: Signature scheme proposal for NIST PQC project. (2017).

[4] Nina Bindel, Johannes Buchmann, and Juliane Krämer. 2016. Lattice-based signature schemes and their sensitivity to fault attacks. In 2016 Workshop on Fault Diagnosis and Tolerance in Cryptography (FDTC). IEEE, 63–77.

[5] Dan Boneh, Richard A. DeMillo, and Richard J. Lipton. 1997. On the Importance of Checking Cryptographic Protocols for Faults. In Advances in Cryptology — EUROCRYPT '97, Walter Fumy (Ed.). Springer Berlin Heidelberg, Berlin, Heidelberg, 37–51.

[6] Jonathan Bootle, Claire Delaplace, Thomas Espitau, Pierre-Alain Fouque, and Mehdi Tibouchi. 2018. LWE without modular reduction and improved side-channel attacks against BLISS. In International Conference on the Theory and Application of Cryptology and Information Security. Springer, 494–524.

[7] Charles Bouillaguet, Hsieh-Chung Chen, Chen-Mou Cheng, Tung Chou, Ruben Niederhagen, Adi Shamir, and Bo-Yin Yang. 2010. Fast Exhaustive Search for Polynomial Systems in F2. In Cryptographic Hardware and Embedded Systems, CHES 2010, Stefan Mangard and François-Xavier Standaert (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 203–218.

[8] Leon Groot Bruinderink, Andreas Hülsing, Tanja Lange, and Yuval Yarom. 2016. Flush, Gauss, and Reload–a cache attack on the BLISS lattice-based signature scheme. In International Conference on Cryptographic Hardware and Embedded Systems. Springer, 323–345.

[9] Leon Groot Bruinderink and Peter Pessl. 2018. Differential fault attacks on deterministic lattice signatures. IACR Transactions on Cryptographic Hardware and Embedded Systems (2018), 21–43.

[10] Lucian Cojocar, Jeremie Kim, Minesh Patel, Lillian Tsai, Stefan Saroiu, Alec Wolman, and Onur Mutlu. 2020. Are We Susceptible to Rowhammer? An End-to-End Methodology for Cloud Providers. arXiv:2003.04498 [cs.CR]

[11] Lucian Cojocar, Kaveh Razavi, Cristiano Giuffrida, and Herbert Bos. 2019. Exploiting correcting codes: On the effectiveness of ECC memory against Rowhammer attacks. In 2019 IEEE Symposium on Security and Privacy (SP). IEEE, 55–71.

[12] Jan-Pieter D'Anvers, Marcel Tiepelt, Frederik Vercauteren, and Ingrid Verbauwhede. 2019. Timing attacks on Error Correcting Codes in Post-Quantum Secure Schemes. IACR Cryptology ePrint Archive 2019 (2019), 292.

[13] Jintai Ding, Joshua Deaton, Kurt Schmidt, Vishakha, and Zheng Zhang. 2019. Cryptanalysis of The Lifted Unbalanced Oil Vinegar Signature Scheme. Cryptology ePrint Archive, Report 2019/1490. https://eprint.iacr.org/2019/1490.

[14] Jintai Ding, Bo-Yin Yang, Chia-Hsin Owen Chen, Ming-Shing Chen, and Chen-Mou Cheng. 2008. New Differential-Algebraic Attacks and Reparametrization of Rainbow. In Applied Cryptography and Network Security, Steven M. Bellovin, Rosario Gennaro, Angelos Keromytis, and Moti Yung (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 242–257.

[15] Jintai Ding, Zheng Zhang, Joshua Deaton, Kurt Schmidt, and F Vishakha. 2019. New attacks on lifted unbalanced oil vinegar. In The 2nd NIST PQC Standardization Conference.

[16] T. Espitau, P. Fouque, B. Gérard, and M. Tibouchi. 2018. Loop-Abort Faults on Lattice-Based Signature Schemes and Key Exchange Protocols. IEEE Trans. Comput. 67, 11 (2018), 1535–1549.

[17] Thomas Espitau, Pierre-Alain Fouque, Benoît Gérard, and Mehdi Tibouchi. 2017. Side-channel attacks on BLISS lattice-based signatures: Exploiting branch tracing against strongswan and electromagnetic emanations in microcontrollers. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. 1857–1874.

[18] Pietro Frigo, Emanuele Vannacci, Hasan Hassan, Victor van der Veen, Onur Mutlu, Cristiano Giuffrida, Herbert Bos, and Kaveh Razavi. 2020. TRRespass: Exploiting the Many Sides of Target Row Refresh. In S&P. Paper=https://download.vusec.net/papers/trrespass_sp20.pdf Web=https://www.vusec.net/projects/trrespass Code=https://github.com/vusec/trrespass

[19] Aymeric Genêt, Matthias J Kannwischer, Hervé Pelletier, and Andrew McLauchlan. 2018. Practical Fault Injection Attacks on SPHINCS. IACR Cryptology ePrint Archive 2018 (2018), 674.

[20] Lov K Grover. 1996. A fast quantum mechanical algorithm for database search. arXiv preprint quant-ph/9605043 (1996).

[21] Daniel Gruss, Moritz Lipp, Michael Schwarz, Daniel Genkin, Jonas Juffinger, Sioli O'Connell, Wolfgang Schoechl, and Yuval Yarom. 2018. Another flip in the wall of Rowhammer defenses. In 2018 IEEE Symposium on Security and Privacy (SP). IEEE, 245–261.

[22] Daniel Gruss, Clémentine Maurice, and Stefan Mangard. 2016. Rowhammer.js: A remote software-induced fault attack in JavaScript. In International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, 300–321.

[23] Yasufumi Hashimoto, Tsuyoshi Takagi, and Kouichi Sakurai. 2011. General Fault Attacks on Multivariate Public Key Cryptosystems. In Post-Quantum Cryptography, Bo-Yin Yang (Ed.). Springer Berlin Heidelberg, Berlin, Heidelberg, 1–18.

[24] Saad Islam, Ahmad Moghimi, Ida Bruhns, Moritz Krebbel, Berk Gulmezoglu, Thomas Eisenbarth, and Berk Sunar. 2019. SPOILER: Speculative Load Hazards Boost Rowhammer and Cache Attacks. In 28th USENIX Security Symposium (USENIX Security 19). USENIX Association, Santa Clara, CA, 621–637. https://www.usenix.org/conference/usenixsecurity19/presentation/islam

[25] Angshuman Karmakar, Sujoy Sinha Roy, Oscar Reparaz, Frederik Vercauteren, and Ingrid Verbauwhede. 2018. Constant-time discrete Gaussian sampling. IEEE Trans. Comput. 67, 11 (2018), 1561–1571.

[26] Angshuman Karmakar, Sujoy Sinha Roy, Frederik Vercauteren, and Ingrid Verbauwhede. 2019. Pushing the speed limit of constant-time discrete Gaussian sampling. A case study on the Falcon signature scheme. In Proceedings of the 56th Annual Design Automation Conference 2019. ACM, 88.

[27] Yoongu Kim, Ross Daly, Jeremie Kim, Chris Fallin, Ji Hye Lee, Donghyuk Lee, Chris Wilkerson, Konrad Lai, and Onur Mutlu. 2014. Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors. In Proceeding of the 41st Annual International Symposium on Computer Architecture (Minneapolis, Minnesota, USA) (ISCA '14). IEEE Press, Piscataway, NJ, USA, 361–372. http://dl.acm.org/citation.cfm?id=2665671.2665726

[28] Aviad Kipnis, Jacques Patarin, and Louis Goubin. 1999. Unbalanced oil and vinegar signature schemes. In International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 206–222.

[29] Aviad Kipnis and Adi Shamir. 1998. Cryptanalysis of the oil and vinegar signature scheme. In Annual International Cryptology Conference. Springer, 257–266.

[30] Juliane Krämer and Mirjam Loiero. 2019. Fault Attacks on UOV and Rainbow. In Constructive Side-Channel Analysis and Secure Design, Ilia Polian and Marc Stöttinger (Eds.). Springer International Publishing, Cham, 193–214.

[31] Andrew Kwong, Daniel Genkin, Daniel Gruss, and Yuval Yarom. 2020. RAMBleed: Reading Bits in Memory Without Accessing Them. In 41st IEEE Symposium on Security and Privacy (S&P).

[32] Moritz Lipp, Misiker Tadesse Aga, Michael Schwarz, Daniel Gruss, Clémentine Maurice, Lukas Raab, and Lukas Lamster. 2018. Nethammer: Inducing Rowhammer faults through network requests. arXiv preprint arXiv:1805.04956 (2018).

[33] NIST. 2017. Post-Quantum Cryptography Standardization. https://csrc.nist.gov/projects/post-quantum-cryptography/post-quantum-cryptography-standardization.

[34] Aesun Park, Kyung-Ah Shim, Namhun Koo, and Dong-Guk Han. 2018. Side-Channel Attacks on Post-Quantum Signature Schemes based on Multivariate Quadratic Equations - Rainbow and UOV -. IACR Trans. Cryptogr. Hardw. Embed. Syst. 2018 (2018), 500–523.

[35] Jacques Patarin. 1997. The oil and vinegar signature scheme. In Dagstuhl Workshop on Cryptography September, 1997.

[36] Peter Pessl, Leon Groot Bruinderink, and Yuval Yarom. 2017. To BLISS-B or not to be: Attacking strongSwan’s Implementation of Post-Quantum Signatures. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. ACM, 1843–1855.

[37] Prasanna Ravi, Mahabir Prasad Jhanwar, James Howe, Anupam Chattopadhyay, and Shivam Bhasin. 2018. Side-channel Assisted Existential Forgery Attack on Dilithium-A NIST PQC candidate. IACR Cryptology ePrint Archive 2018 (2018), 821.

[38] Prasanna Ravi, Debapriya Basu Roy, Shivam Bhasin, Anupam Chattopadhyay, and Debdeep Mukhopadhyay. 2019. Number “Not Used” Once-Practical Fault Attack on pqm4 Implementations of NIST Candidates. In International Workshop on Constructive Side-Channel Analysis and Secure Design. Springer, 232–250.

[39] Mark Seaborn and Thomas Dullien. 2015. Exploiting the DRAM rowhammer bug to gain kernel privileges. Black Hat 15 (2015).

[40] K. Shim and N. Koo. 2020. Algebraic Fault Analysis of UOV and Rainbow with the Leakage of Random Vinegar Values. IEEE Transactions on Information Forensics and Security (2020), 1–1.

[41] Peter W Shor. 1999. Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer. SIAM review 41, 2 (1999), 303–332.

[42] Andrei Tatar, Radhesh Krishnan Konoth, Elias Athanasopoulos, Cristiano Giuffrida, Herbert Bos, and Kaveh Razavi. 2018. Throwhammer: Rowhammer attacks over the network and defenses. In 2018 {USENIX} Annual Technical Conference ({USENIX}{ATC} 18). 213–226.

[43] Victor Van Der Veen, Yanick Fratantonio, Martina Lindorfer, Daniel Gruss, Clementine Maurice, Giovanni Vigna, Herbert Bos, Kaveh Razavi, and Cristiano Giuffrida. 2016. Drammer: Deterministic Rowhammer attacks on mobile platforms. In Proceedings of the 2016 ACM SIGSAC conference on computer and communications security. ACM, 1675–1689.

[44] Beullens Ward, Preneel Bart, Szepieniec Alan, and Vercauteren Fréderik. 2020. LUOV - MQ signature scheme. https://www.esat.kuleuven.be/cosic/pqcrypto/luov/.

[45] Zane Weissman, Thore Tiemann, Daniel Moghimi, Evan Custodio, Thomas Eisenbarth, and Berk Sunar. 2019. JackHammer: Efficient Rowhammer on Heterogeneous FPGA-CPU Platforms. arXiv:1912.11523 [cs.CR]

[46] Yuan Xiao, Xiaokuan Zhang, Yinqian Zhang, and Radu Teodorescu. 2016. One bit flips, one cloud flops: Cross-VM Rowhammer attacks and privilege escalation. In 25th {USENIX} Security Symposium ({USENIX} Security 16). 19–35.

[47] Lai Xu, Rongwei Yu, Lina Wang, and Weijie Liu. 2019. MemWay: In-memory waylaying acceleration for practical Rowhammer attacks against binaries. Tsinghua Science and Technology 24, 5 (2019), 535–545.

[48] Takanori Yasuda, Xavier Dahan, Yun-Ju Huang, Tsuyoshi Takagi, and Kouichi Sakurai. 2015. MQ Challenge: Hardness Evaluation of Solving Multivariate Quadratic Problems. IACR Cryptology ePrint Archive 2015 (2015), 275.

[49] Raymond K Zhao, Ron Steinfeld, and Amin Sakzad. 2018. FACCT: FAst, Compact, and Constant-Time Discrete Gaussian Sampler over Integers. IACR Cryptology ePrint Archive 2018 (2018), 1234.

### Algorithm 9: LUOV - Build Augmented Matrix

**Input:** \(C, L, Q_1, T, h, v\)

**Output:** \(LHS || RHS = (A || b)\)

1. \(RHS \leftarrow h - C - Ls(v || 0)^T\)
2. \(LHS \leftarrow L\)
3. **for** \(k\) from 1 to \(m\) **do**
   1. \(P_{k1} \leftarrow f_{indPK1}(k, Q_1)\)
   2. \(P_{k2} \leftarrow f_{indPK2}(k, Q_1)\)
   3. \(RHS[k] \leftarrow RHS[k] - v^T P_{k1} v\)
   4. \(F_{k2} \leftarrow (P_{k1} + P_{k1}^T)T + P_{k2}\)
   5. \(LHS[k] \leftarrow LHS[k] + v F_{k2}\)
4. **end for**
5. **return** \(LHS || RHS\)