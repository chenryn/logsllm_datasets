### We are Legion: Penetration Testing with an Army of Low-Power, Low-Cost Devices
**Philip Polstra**  
Hacker in Residence, University of [University Name]  
[@ppolstra](http://polstra.org)

#### Overview
This talk will cover:
- Hacking and forensics using small, low-power devices.
- ARM-based Beagleboard and Beaglebone running a full suite of security and forensics tools.
- Porting tools to new platforms.
- Performing coordinated attacks with networks of devices.

#### About the Speaker
- Professor and Hacker in Residence at a private Midwestern university.
- Programming since age 8.
- Hardware hacking since age 12.
- Also known for flying and building airplanes.

#### Roadmap
- Choosing a Platform
- Selecting a Base OS
- Building a Base System
- Leveraging Repositories
- Building Tools
- Building Your Own Accessories
- Solo Demonstrations
- Networking with 802.15.4
- Attack Networks
- Future Directions

### Choosing a Platform
Key criteria for the platform:
- Small form factor
- Low power consumption
- Affordable
- Mature technology
- Built-in networking
- Good USB support
- Convenient input and output

**Selected Platform:**
- **Beagleboard-xM/BeagleBone Black**
  - Dimensions: 3.25” square (Beagleboard-xM) / 3.4” x 2.1” (BeagleBone Black)
  - Processor: ARMv7a

### Setting Up the Development Environment
**Method 1: Cross-Compilation**
1. Untar the toolchain: `tar -xf angstrom--armv7a-linux-gnueabi-toolchain.tar.bz2 -C /usr/local/angstrom/arm`
2. Set up the build environment: `. /usr/local/angstrom/arm/environment-setup`
3. Download the source code.
4. Configure the build: `./configure --host=arm-angstrom-linux-gnueabi --prefix=/home/...`
5. Build and install: `make && sudo make install`
6. Copy binaries to the Beagleboard-xM.
   - Note: Ensure there is no kernel mismatch between the setup and the installed kernel on the Beagleboard-xM.

**Method 2: Using Eclipse**
1. Install a toolchain as in Method 1.
2. Install Eclipse and C/C++ Development Tools.
3. Download the software.
4. Use a makefile to create an Eclipse project.
5. Create a Build Configuration in Eclipse.
6. Compile and move binaries to the Beagleboard-xM.

**Method 3: Remote Debugging with Eclipse**
- Follow Method 2 and add:
  - C/C++ DSF GDB Debugger Integration
  - C/C++ Remote Launch
  - Remote System Explorer End-User Runtime
  - Remote System Explorer User Actions
- Tutorial by Jan Axelson: [Link](http://lvr.com/eclipse1.htm)

### Building Your Own Hardware Accessories
**Powering Your Drones**
- Beagleboards use a standard 2.1 x 5.5 mm barrel connector.
- Battery voltage above 5V is wasted as heat.
- Bare boards can run for several days on standard batteries.
- LCD touchscreens require significant power.
- Leaching power from a target's USB port is ideal.
- Be cautious with WiFi and 802.15.4; set transmit power to minimum.
- Utilize sleep modes on 802.15.4 radios.

**Power Options and 802.15.4 Hardware**
- Containers
- Plantables
- Capes (Work in Progress)
  - Socket for Xbee radio
  - Network switch for inline installation
  - USB hub
  - Optional 802.11 wireless
  - Optional battery pack

### Demos
- **Demo 1: Hardware**
- **Demo 2: Our Favorite Exploit**
- **Demo 3: WiFi Cracking**
- **Demo 4: Password Cracking**
- **Demo 5: WPS Cracking**
- **Demo 6: Pwn Win7 Like It’s a Mac**
- **Demo 7: Clickiddiestm**

### 802.15.4 Networking
**Basics**
- Used in low-power embedded systems.
- Regular (100') and Pro (1 mi) versions.
- AT and API modes of operation.
- Low-speed (250 kbps max).
- Supports multiple network topologies: Peer to Peer, Star, Mesh.

**Xbee Hardware**
- Manufactured by Digi.
- Regular and Pro formats are interchangeable and interoperable.
- Uses 2 mm pin spacing (requires an adapter for most breadboards).
- Several antenna options.
- Avoid S2 or ZB series, which have the same dimensions but are not compatible.

**Xbee Adapters**
- UART (serial) adapters: Directly wired to Beagles using 4 wires.
- USB Adapters: More expensive but easier to set up.

**Configuring Xbee Modules**
1. Place the Xbee module in a USB adapter and connect it to a PC running X-CTU or IRON.
2. Select the correct USB port and set the baud rate (default is 9600).
3. From the Modem Configuration tab, select Read to get the current configuration.
4. Ensure the modem is XB24 and Function Set is XBEE 802.15.4.
5. Set the channel and PAN ID (e.g., 1337).
6. Pick a Destination Low and Destination High address for the other adapter (e.g., 2 and 0).
7. Set the My Address to a chosen value (e.g., 01).
8. Click Write to store the new configuration on the Xbee.
9. Repeat for the second Xbee, reversing the addresses.

**Wiring the Xbee to Beagles**
- For USB adapters, simply plug into a USB port.
- For UART interface:
  - Connect 4 wires: 3.3V, Ground, TX, RX.
  - Configure the Beagle multiplexer for proper operation.

**Setting Up a UART Interface**
- For BeagleBone UART2:
  - 3.3V & Ground: P9 pin 3 & 1, respectively.
  - TX: P9 pin 21 (to Xbee Din).
  - RX: P9 pin 22 (to Xbee Dout).
  - Configure BeagleBone: `echo 1 > /sys/kernel/debug/omap_mux/spi0_d0` and `echo 21 > /sys/kernel/debug/omap_mux/spi0_sclk`.
  - Test connection: `/dev/ttyO2`.

**Simple Case: Accessing a Single Drone**
- By default, Xbee adapters operate in transparent mode.
- Set up TTY on the drone and log in with a terminal program.

**Slightly Harder Case: Multiple Drones One at a Time**
- Configure drones with different MY addresses.
- Use a terminal program on the command console to connect to drones one at a time.
- Enter AT command mode to switch between drones.

**Multiple Drones Simultaneously**
- Use API mode instead of AT mode.
- Configure Xbee with X-CTU.
- Communication options: Java xbee-api, Python-xbee, raw commands to TTY device.

**True Mesh Network**
- Recommended for larger numbers of drones or when devices are too far apart.
- Requires Series 2 (ZB) Xbee adapters.
- No changes to scripts are required.

**Networked Attacks**
- Simplest case: 1 drone, peer-to-peer networking.
- Multiple drones: One process on the master monitors status updates from all drones.
- Interactive shell into each drone.
- Endless possibilities with each drone having a full version of The Deck.

### Future Directions
- Add useful packages as needed.
- Optimize some packages for BB-xM/BBB.
- Explore other output devices.
- Exploit USB OTG functionality.
- Make The Deck fly (literally) – September 12th.
- Hack over the Internet with an 802.15.4 gateway.

### Bibliography
- General BeagleBoard xM/BeagleBone: [Link](http://beagleboard.org)
- Installing Ubuntu on Beagles: [Link](http://elinux.org/BeagleBoardUbuntu)
- Cross-compiling for Beagles by Jan Axelson: [Link](http://www.lvr.com/eclipse1.htm)
- Instructions on how to build The Deck: [Link](http://www.instructables.com/id/The-Deck-Portable-Penetration-Testing-and-Forens/)
- Blog for updates: [Link](http://ppolstra.blogspot.com/2012/09/introducing-deck-complete-pentesting.html)
- Download link for The Deck (warning 6 GB): [Link](http://www.udcis.org/TheDeck/thedeck-v1.0-44con-ed.tar.gz)
- Getting Started with Xbee by Parallax: [Link](http://www.parallax.com/portals/0/downloads/docs/prod/book/122-32450-XBeeTutor)
- General information on Xbee modules from the manufacturer: [Link](http://digi.com)
- Moltosenso Network Manager IRON software: [Link](http://www.moltosenso.com/#/pc==/client/fe/download.php)

### Questions?
Feel free to visit me in the Q&A lounge after the session.