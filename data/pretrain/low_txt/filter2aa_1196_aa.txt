# The Adventures of AV and the Leaky Sandbox

**A SafeBreach Labs Research Paper by:**
- Amit Klein, VP Security Research, SafeBreach
- Itzik Kotler, Co-Founder and CTO, SafeBreach

**July 2017**

## Abstract
This paper introduces and demonstrates a novel technique for exfiltrating data from highly secure enterprises that employ strict egress filtering. In such environments, endpoints have no direct Internet connection or are restricted to specific hosts required by their installed software. Assuming the endpoint has a cloud-enhanced anti-virus (AV) product, we show that if the AV employs an Internet-connected sandbox as part of its cloud service, it can facilitate data exfiltration. We release the tool developed to implement this exfiltration technique and provide real-world results from several prominent AV products (Avira, ESET, Kaspersky, and Comodo). Our technique involves exfiltrating data within an executable file created on the endpoint, detected by the AV agent, uploaded to the cloud for further inspection, and executed in an Internet-connected sandbox. We also provide insights into the nature of these cloud-based sandboxes and generalize our findings to cover on-premise sandboxes, cloud-based scanning, and sample sharing. Finally, we discuss how to enhance the attack and how cloud-based AV vendors can mitigate it.

## Introduction
Exfiltrating sensitive data from a well-protected enterprise is a primary goal for cyber attackers. In our reference scenario, the enterprise's endpoints are either not allowed direct communication with the Internet or are only allowed connections to a limited set of external hosts (e.g., Microsoft update servers, AV update servers). Given the organization's security, it is likely to have mandatory AV software installed on every endpoint. Many AV vendors offer "cloud AV" solutions where the endpoint AV consults a cloud service about its local findings. Even for endpoints restricted from accessing the Internet, they can still send data over the internal network to an AV management server, which then connects to the AV cloud. This architecture is not truly air-gapped.

Various exfiltration techniques have been disclosed, including those detailed in our 2016 paper, "In Plain Sight: The Perfect Exfiltration." However, these techniques assume the endpoint can connect to arbitrary Internet hosts or that the enterprise has lax security. In this paper, we examine a case where these assumptions do not hold, and the direct Internet connection, if allowed, is limited to a small set of hosts. We demonstrate that even under these restrictions, it is possible to exfiltrate data to the outside world under certain conditions.

### Our Contribution:
1. **Innovative Technique:** We describe a method to exfiltrate data using cloud-based AV sandboxing, even if the endpoint is prevented from directly connecting to the Internet or can only connect to essential hosts.
2. **Open Source Tool:** We provide a free, open-source tool that implements our technique.
3. **Real-World Results:** We present test results against leading AV products.
4. **Insights into Cloud-Based AV Sandboxes:** We share insights into the nature of cloud-based AV sandboxes from leading vendors.
5. **Extensions to the Technique:** We describe potential extensions to our original technique to improve its success rate.

## Related Work
### Exfiltration in General
There is extensive research on exfiltration techniques, such as:
- "Covert Channels in TCP/IP Protocol Stack" by Aleksandra Mileva and Boris Panajotov
- "A Survey of Covert Channels and Countermeasures in Computer Network Protocols" by Sebastian Zander, Grenville Armitage, and Philip Branch
- "Covert Timing Channels Using HTTP Cache Headers" by Denis Kolegov, Oleg Broslavsky, and Nikita Oleksov

Our research differs by addressing the challenge of exfiltrating data from endpoints with no direct or very limited Internet access.

### Exfiltration from Disconnected Endpoints
Recent research has focused on exfiltrating data from endpoints over non-network media, such as:
- "LED-it-GO: Leaking Data from Air-Gapped Computers via the Hard Drive LED" by Mordechai Guri, Boris Zadov, Eran Atias, and Yuval Elovici
- "DiskFiltration: Data Exfiltration from Speakerless Air-Gapped Computers via Covert Hard Drive Noise" by Mordechai Guri, Yosef Solewicz, Andrey Daidakulov, and Yuval Elovici
- "BitWhisper: Covert Signaling Channel between Air-Gapped Computers Using Thermal Manipulations" by Mordechai Guri, Matan Monitz, Yisroel Mirski, and Yuval Elovici

These methods address truly isolated machines but often require physical proximity. Our research focuses on indirectly connected endpoints.

### Exfiltration via Third-Party Sites
IPID-based exfiltration, such as "Covert Communications Despite Traffic Data Retention" by George Danezis, can use allowed Internet hosts for exfiltration. However, this method is outdated due to modern OS changes. Other methods, like sending TCP SYN packets with source IP spoofing or using UDP, face challenges with IP egress filtering and NAT/PAT devices.

### Triggering AV Products
Ege Balci's "Art of Anti Detection 1 – Introduction to AV & Detection Techniques" provides a list of triggering behaviors for AV products. Our innovation lies in abusing the actions taken by AV products once triggered.

### Research on Sandboxes
- "AVLeak: Fingerprinting Antivirus Emulators Through Black-Box Testing" by Jeremy Blackthorne, Alexei Bulazel, Andrew Fasano, Patrick Biernat, and Bülent Yener
- Google's Project Zero entry "Comodo: Comodo Antivirus Forwards Emulated API Calls to the Real API During Scans" by Tavis Ormandy
- "Your Sandbox is Blinded: Impact of Decoy Injection to Public Malware Analysis Systems" by Katsunari Yoshioka, Yoshihiko Hosobuchi, Tatsunori Orii, and Tsutomu Matsumoto
- "Enter Sandbox – Part 8: All Those… Host Names… Will Be Lost, in Time, Like Tears… in… Rain" by Hexacorn Ltd.
- "Sandbox Detection: Leak, Abuse, Test" by Zoltan Balazs

Our research focuses on exfiltration through AV sandboxes, rather than just fingerprinting them.

## Background
We are interested in two network architectures found in highly secure organizations:

### Indirect Internet Access
- **Corporate Setup:** Cloud-based AV agents on all endpoints, a central AV management server that connects to the AV cloud, and a firewall/gateway that prevents other machines from accessing the Internet.
- **Challenge:** Regular network-based exfiltration methods are ineffective, but software on the endpoint can influence the AV management server to communicate with the AV cloud.

### Limited Direct Internet Access
- **Corporate Setup:** Cloud-based AV agents on all endpoints, with access to a closed set of hosts necessary for legitimate software.
- **Challenge:** Exfiltration via allowed hosts is impractical for non-state-sponsored attackers due to egress filtering and the need for eavesdropping.

### Triggering an AV Agent
AV products use behavioral rules to detect suspicious/malicious processes. Once triggered, the process file is marked as suspicious and may be sent to the cloud for further analysis.

### Cloud AV Sandboxing
Many AV vendors use cloud AV sandboxing to perform heavy-lifting security analysis. A process/file in a grey area is sent to the cloud, where it is executed in a sandbox. An Internet-connected sandbox allows the sample to run in a more natural environment, facilitating better detection.

### Exfiltration Methods from an Internet-Connected Machine
There are numerous ways to exfiltrate data from an Internet-connected machine, such as:
- Sending HTTP/HTTPS requests to an attacker’s host
- Forcing DNS resolution
- Sending emails to an attacker mailbox
- Sending IRC messages
- Pinging an attacker host
- Submitting comments in a web forum

## Exfiltration Through AV Cloud Sandboxes
We present a novel method of exfiltrating data from endpoints with limited or no direct Internet access. Our technique requires:
- An AV product that submits unknown/suspicious files to the AV cloud
- An Internet-connected sandbox in the AV cloud
- An attacker’s process running on the endpoint

### Details of the Technique
1. **Rocket and Satellite:**
   - The attacker’s process (Rocket) contains a secondary executable (Satellite) as part of its data.
   - The Satellite contains a placeholder for the payload to be exfiltrated.
   
2. **Attack Process:**
   - The Rocket collects the payload and embeds it in the Satellite.
   - The Rocket writes the Satellite to disk and spawns it as a child process.
   - The Satellite performs a suspicious action, such as persisting itself or writing a known malware file.
   - The AV product detects the suspicious action, quarantines the Satellite, and sends its file to the AV cloud.
   - The cloud AV executes the Satellite in an Internet-connected sandbox.
   - The Satellite uses Internet-based exfiltration methods to send the payload to the attacker.

### Results with Leading AV Products
In February-March 2017, we tested our technique against multiple AV products. The test setup involved creating unique Rocket-Satellite combinations, with the Satellite performing simple triggers and using DNS and HTTP for exfiltration. We provide details of the tests and results below.

#### Test Setup
- **Code:** Written in C/C++ and compiled in Microsoft VC 2015.
- **Triggers:**
  - Writing the EICAR file to disk
  - Moving the Satellite image file to the user’s startup folder
- **Exfiltration Methods:**
  - DNS-based exfiltration
  - HTTP-based exfiltration

#### Test Results
We tested 10 out of the top 11 AV products from OPSWAT’s “Antivirus and Compromised Device Report: January 2015.” The following table summarizes our results:

| Product | Version | Trigger | Exfiltration Method | Success |
|---------|---------|---------|---------------------|---------|
| Avast Free Antivirus | 12.3.2280 | - | - | - |
| Microsoft Windows Defender | Client v. 4.10.14393.0, Engine v. 1.1.13407.0 | - | - | - |
| AVG | Build 1.151.2.59606, Framework v. 1.162.2.59876 | - | - | - |
| Avira Antivirus Pro | 15.0.25.172 | Persistence | DNS, HTTP | Yes |
| Symantec Norton Security | 22.8.1.14 | - | - | - |
| McAfee Cloud AV | 0.5.235.1 | - | - | - |
| ESET NOD32 Antivirus | 10.0.390.0 | EICAR | DNS | Yes |
| Kaspersky Total Security 2017 | 17.0.0.611(c) | Persistence | DNS, HTTP | Yes |

## Conclusion
We have demonstrated a novel technique for exfiltrating data from highly secure enterprises with strict egress filtering. By leveraging cloud-based AV sandboxes, we can bypass these restrictions. We provide a tool and real-world results, and discuss potential enhancements and mitigations. Future work will focus on refining the technique and exploring additional exfiltration methods.

**Free Open-Source Code:**
- GitHub Repository: [https://github.com/safebreach-labs/spacebin](https://github.com/safebreach-labs/spacebin)