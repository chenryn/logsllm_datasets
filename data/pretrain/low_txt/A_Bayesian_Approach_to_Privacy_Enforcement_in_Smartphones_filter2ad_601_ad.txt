# 优化后的文本

## 休闲游戏
- `games/casual`
- `games/casual`
- `games/casual`
- `games/casual`
- `games/casual`

## 新闻
- `news`

## 数据概览
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `8`
- `(cid:31)`
- `1`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `13`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `(cid:31)`
- `4`
- `0`

## H-BD 和 T-BD 配置的警告
- **表 3：H-BD 和 T-BD BAYESDROID 配置在 54 款热门移动应用中的警告情况**
  - `number dev. ID location number dev. ID location`
  - `(cid:31)`
  - `(cid:31)`
  - `(cid:31)`
  - `(cid:31)`
  - `4`
  - `(cid:31)`
  - `(cid:31)`
  - `(cid:31)`
  - `(cid:31)`
  - `4`

## 警告示例
- **图 7：ios7lockscreen 应用中的抑制警告**
  - `source : private value`
  - `source : private value`
  - `GeoCoder.getFromLocation(...) : ...`
  - `Bearing: ...`
  - `Alt: ...`
  - `Long: ...`
  - `Settings $Secure.getString (...) : cdf15124ea4c7ad5`
  - `[ Lat: ..., IL ]`
  - `sink : arguments`
  - `WebView.loadUrl(...) : http://linux.appwiz.com/profile/72/72exitad.html?p1=RnVsbCtBbmRyb2lkK29uK0VtdWxhdG9y&p2=Y2RmMTUxMjRlYTRjN2FkNQ%3d%3d&... LOCATION=IL&... MOBILE COUNTRY CODE=& NETWORK=WIFI`

- **图 8：fruitninjafree 应用中的抑制警告**
  - `sink : arguments`
  - `FileOutputStream.write (...) : cdf15124ea4c`

## 系统稳定性与准确性
- **T-BD 变体引入了显著更多的不稳定性**，导致非法应用程序行为在 21 个案例中出现，而 H-BD 只有 12 个。
- 我们调查了 H-BD 和 T-BD 配置之间的巨大差距，包括反编译主题应用程序。我们的分析将大多数非法行为归因于 TaintDroid 对第三方库加载的限制。
- H-BD 能够检测更多泄漏的原因之一是它使用了高度优化和混淆的 mobileCore 模块。我们怀疑数据流跟踪在这个库中被中断，但未能完全确认。

- **H-BD 的准确性损失可以忽略不计**，如第 4.2 节所述。H-BD 仅触发一次误报，在 ios7lockscreen 上，这是由于无关值的重叠：
  - `LocationManager.getLastKnownLocation(...)` 返回的 `Location` 对象的额外信息
  - `ContextWrapper.startService(...)` 请求中传递的无关元数据

## 相关工作
- 大多数隐私监控研究基于污点传播方法。我们主要在此领域进行相关研究，并提及一些其他领域的特定研究。

- **实时技术**：最先进的实时隐私监控系统是 TaintDroid [4]。TaintDroid 具有约 10% 的可容忍运行时开销，并且可以跟踪变量、方法、文件和应用之间传递的消息的数据流。
- **定量方法**：不同的方法已被提出用于定量信息流分析，所有这些方法都统一认为数据泄露是一个定量而非布尔判断。
- **Web 应用保护技术**：存在许多静态和动态方法来防止对 Web 应用程序的攻击，例如 [23, 22, 7]。

## 结论与未来工作
- 在本文中，我们将移动系统中的隐私强制问题表述为分类问题。我们探索了一种基于统计推理的方法，该方法更有效地解决了泄漏判断中的固有模糊性。
- 我们的实验数据表明 BAYESDROID 的高准确性和其在现实世界移动应用中的适用性。
- 未来的工作目标包括扩展 BAYESDROID 的功能类型，并优化基于流的方法以检测相关值。

## 参考文献
- [1] M. Backes, B. Kopf, and A. Rybalchenko. Automatic discovery and quantification of information leaks. In S&P, pages 141–153, 2009.
- [2] A. Budi, D. Lo, L. Jiang, and Lucia. kb-anonymity: a model for anonymized behaviour-preserving test and debugging data. In PLDI, pages 447–457, 2011.
- [3] Charlie Curtsinger, Benjamin Livshits, Benjamin G. Zorn, and Christian Seifert. Zozzle: Fast and precise in-browser JavaScript malware detection. In USENIX Security, pages 33–48, 2011.
- [4] W. Enck, P. Gilbert, B. Chun, L. P. Cox, J. Jung, P. McDaniel, and A. N. Sheth. Taintdroid: an information-flow tracking system for realtime privacy monitoring on smartphones. In OSDI, pages 1–6, 2010.
- [5] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A study of Android application security. In USENIX Security, pages 21–21, 2011.
- [6] C. Fritz, S. Arzt, S. Rasthofer, E. Bodden, A. Bartel, J. Klein, Y. Traon, D. Octeau, and P. McDaniel. Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps, 2014.
- [7] S. Guarnieri, M. Pistoia, O. Tripp, J. Dolby, S. Teilhet, and R. Berg. Saving the world wide web from vulnerable JavaScript. In ISSTA, pages 177–187, 2011.
- [8] S. Holavanalli, D. Manuel, V. Nanjundaswamy, B. Rosenberg, F. Shen, S. Y. Ko, and L. Ziarek. Flow permissions for Android. In ASE, pages 652–657, 2013.
- [9] P. Hornyack, S. Han, J. Jung, S. E. Schechter, and D. Wetherall. These aren’t the droids you’re looking for: retrofitting Android to protect data from imperious applications. In CCS, pages 639–652, 2011.
- [10] J. Jung, S. Han, and D. Wetherall. Short paper: enhancing mobile application permissions with runtime feedback and constraints. In SPSM, pages 45–50, 2012.
- [11] B. Livshits and J. Jung. Automatic mediation of privacy-sensitive resource access in smartphone applications. In USENIX Security, pages 113–130, 2013.
- [12] G. Lowe. Quantifying information flow. In CSFW, pages 18–31, 2002.
- [13] S. McCamant and M. D. Ernst. Quantitative information flow as network flow capacity. In PLDI, pages 193–205, 2008.
- [14] J. Newsome, S. McCamant, and D. Song. Measuring channel capacity to distinguish undue influence. In PLAS, pages 73–85, 2009.
- [16] Riccardo Pelizzi and R. Sekar. Protection, usability and improvements in reflected XSS filters. In ASIACCS, pages 5–5, 2012.
- [17] J. Piskorski and M. Sydow. String distance metrics for reference matching and search query correction. In BIS, pages 353–365, 2007.
- [18] V. Rastogi, Y. Chen, and W. Enck. Appsplayground: automatic security analysis of smartphone applications. In CODAPSY, pages 209–220, 2013.
- [19] G. Sarwar, O. Mehani, R. Boreli, and M. A. Kafar. On the effectiveness of dynamic taint analysis for protecting against private information leaks on Android-based devices. In SECRYPT, pages 461–468, 2013.
- [20] D. Schreckling, J. K¨ostler, J. Posegga, and M. Schaff. Kynoid: real-time enforcement of fine-grained, user-defined, and data-centric security policies for Android. In WISTP, pages 208–223, 2012.
- [21] R. Sekar. An efficient black-box technique for defeating web application attacks. In NDSS, 2009.
- [22] O. Tripp, M. Pistoia, P. Cousot, R. Cousot, and S. Guarnieri. Andromeda: Accurate and scalable security analysis of web applications. In FASE, pages 210–225, 2013.
- [23] O. Tripp, M. Pistoia, S. J. Fink, M. Sridharan, and O. Weisman. Taj: effective taint analysis of web applications. In PLDI, pages 87–97, 2009.
- [24] R. A. Wagner and M. J. Fischer. The string-to-string correction problem. J. ACM, 21(1):168–173, 1974.
- [25] Bernard L Welch. The generalization of student’s problem when several different population variances are involved. Biometrika, 34(1–2):28–35, 1947.
- [26] D. Wetherall, D. Choffnes, B. Greenstein, S. Han, P. Hornyack, J. Jung, S. Schechter, and X. Wang. Privacy revelations for web and mobile apps. In HotOS, pages 21–21, 2011.
- [27] Z. Yang, M. Yang, Y. Zhang, G. Gu, P. Ning, and X. S. Wang. Appintent: analyzing sensitive data transmission in Android for privacy leakage detection. In CCS, pages 1043–1054, 2013.

---

通过上述优化，文本变得更加清晰、连贯和专业。希望这对你有所帮助！