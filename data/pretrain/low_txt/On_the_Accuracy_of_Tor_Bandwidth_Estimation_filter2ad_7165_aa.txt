# On the Accuracy of Tor Bandwidth Estimation

**Authors:** Rob Jansen and Aaron Johnson  
**Affiliation:** U.S. Naval Research Laboratory, Washington, D.C., USA  
**Emails:** {rob.g.jansen, aaron.m.johnson}@nrl.navy.mil

## Abstract
The Tor network estimates its relays' bandwidths using self-measurements of client traffic speeds. These estimates significantly influence how the existing traffic load is balanced across relays and are used to evaluate the network's capacity to handle future traffic increases. Therefore, their accuracy is crucial for optimizing Tor's performance and planning for growth. However, the accuracy of these estimates has not been previously measured. This paper investigates the accuracy of Tor's bandwidth estimation through an analysis of public network data and an active experiment conducted over the entire live network. Our results indicate that the bandwidth estimates understate the total network capacity by at least 50%, with larger errors observed for high-bandwidth and low-uptime relays. Our findings suggest that improving Tor's bandwidth measurement system could enhance the network's performance and better inform plans for future growth.

## 1. Introduction
Tor [12] is an anonymous communication overlay network comprising thousands of relays that forward over 220 Gbit/s of traffic for millions of daily users [3, 25], providing unlinkability between the source and destination of traffic flows.

To balance client traffic across relays, Tor relies on TorFlow to estimate the speed at which relays can forward traffic [30]. These forwarding capacity estimates are essential for both the performance and security of the network [5, 21, 22, 31]. A relay's capacity is derived from a self-measurement called "observed bandwidth," which is the highest throughput sustained over any ten-second period in the last five days (see Section 2). This measure is imprecise and may be inaccurate in several realistic scenarios:
- A new relay will have no traffic history and thus will be estimated to have a low capacity regardless of its actual resources.
- A relay with inconsistent usage may not sustain a high throughput long enough to produce an accurate capacity estimate.
- An underutilized relay will underestimate its capacity.

TorFlow uses these capacity estimates to drive more user traffic to higher-capacity relays [30]. Inaccurate capacity estimates can result in suboptimal load balancing, degrading user-perceived network performance and security [21].

Inaccurate capacity estimates also complicate the prioritization of research and development efforts for future network improvements [32]. For example, obtaining funding to improve Tor scalability is more challenging without a clear understanding of the current network limits [27]. Improper network management can also hinder relay recruitment and retention, and may discourage the development of incentive schemes [13, 14, 17–19, 26, 28].

In this paper, we explore the inconsistencies in Tor's estimated relay capacities using:
- Passive measurements collected by relays and published by Tor metrics [3].
- An active relay speed test measurement experiment.

In Section 3, we study the variability in relay capacity estimates, which we use as an indicator of inaccurate estimation. We find significant variation in relays' advertised bandwidths: 25% of relays vary by more than 41%, 10% vary by 71% or more, and some relays' estimates vary by more than 200%. Higher variation is associated with lower-capacity relays and those that are online less frequently.

In Section 4, we present an active speed test experiment, which reveals that:
- Tor underestimates its total capacity by about 50%.
- Most relays increased their capacity estimates following our experiment (some by a factor of 10 or more).
- Larger errors are associated with high-capacity relays, exit relays, and relays with lower uptimes.

Our results suggest that relay underutilization is a significant cause of error in capacity estimates. This work provides the first systematic exploration of the error in Tor's capacity estimation technique, and our findings suggest that improvements to these estimates could significantly enhance load balancing and network performance. Our research artifacts are available at https://torbwest-pam2021.github.io.

## 2. Background and Related Work

### The Tor Network
The Tor network consists of thousands of relays forwarding traffic for millions of clients [3, 25]. To balance client traffic, Tor assigns a weight to each relay based on an estimate of its available bandwidth. Relay information, including addresses, weights, and various flags, is published in a network consensus document [2, Sect. 3.4.1]. Clients download the consensus and compute selection probabilities from the weights. A circuit is built through typically three relays, with relays having the Exit flag serving in the exit position, Guard flag (but not Exit) in the entry position, and neither flag in the middle position [11]. Application data (e.g., web requests) is tunneled through the constructed circuit, rotating every 10 minutes or when browsing to new websites. Although circuits rotate frequently, clients generally use long-term entry Guard relays [9] to help prevent predecessor attacks [34]. To be a Guard, a relay must maintain high uptime, defined as the percentage of hours during which it is online.

### Relay Bandwidth
A relay's forwarding capacity is the maximum sustainable rate at which it can forward traffic through the network, useful for balancing traffic load. Relay operators do not directly report their true forwarding capacity, so Tor uses a heuristic to estimate it. Each relay calculates its observed bandwidth by tracking the highest throughput sustained over any 10-second period in the last five days [10, Sect. 2.1.1]. To bootstrap this calculation, a relay conducts a bandwidth self-test when it starts, creating four circuits through Tor and sending 125 KiB over each. If this process completes within 10 seconds, the relay starts with an observed bandwidth of 50 KiB/s (≈410 Kbits/s) [8]. Additional remote measurements are conducted by TorFlow [30], and the observed bandwidth is updated as the relay forwards client traffic. Relay operators can limit bandwidth consumption by configuring average and burst bandwidth options, which control the refill rate and size of an internal token bucket rate limiter. Every 18 hours, relays publish a server descriptor file [10, Sect. 2.1.1] containing their latest observed, average, and burst bandwidth values. A relay's advertised bandwidth is the minimum of the observed and average bandwidths, used as a basis for load balancing.

### Load Balancing
Tor uses TorFlow [30] to assist in balancing client traffic. TorFlow measures relay performance by creating two-hop circuits through each relay and downloading files ranging from 16 KiB to 64 MiB from a known server. TorFlow produces relay weights by:
- Computing the ratio of each relay's measurement speed to the mean measurement speed of all relays.
- Multiplying each relay’s ratio by its advertised bandwidth.

These weights are published in the consensus and used to compute relay selection probabilities.

### Related Work
Previous work has shown that TorFlow is insecure and vulnerable to manipulation, partly because a relay can detect when it is being measured [5, 21, 22, 33]. Alternative bandwidth measurement systems include SmarTor [4] and Simple Bandwidth Scanner [24], which suffer from similar limitations. EigenSpeed proposes peer measurement, producing per-flow throughput estimates rather than relay forwarding capacity [31]. PeerFlow is a passive peer measurement system that proposes secure aggregation inference techniques to produce relay capacity estimates [22]. TightRope suggests a centralized approach for optimal load balancing given accurate capacity weights [7], and Ting focuses on measuring latencies between relays [6].

Dingledine outlines the lifecycle of a new relay, explaining that it can take three days for a relay to be measured by TorFlow, several weeks to obtain the Guard flag, and even longer to reach steady state [8]. Dingledine motivates further analysis of Tor metrics data to better understand real-world relay operations. Using both passive and active measurements, our work provides the first systematic exploration of the error in Tor's capacity estimation technique. Greubel et al. analyze load distribution in Tor and find that relays with more forwarding capacity are associated with larger relay weights [15]. Although we focus on measuring the accuracy of forwarding capacity estimates rather than relay weights, the association established by Greubel et al. aids in explaining some of our results.

## 3. Analysis of Tor Metrics Data

To understand the accuracy of Tor's capacity-estimation heuristic, we analyze publicly available Tor metrics data [3]. Relays passively measure throughput and publish bandwidth information in their server descriptors [10, Sect. 2.1.1], while TorFlow-derived load-balancing weights are published in network consensus files [2, Sect. 3.4.1]. The Tor Project has collected these documents for over a decade [3], and we analyze the data published throughout the 52-week period starting on 2018-08-01.

### Relay Capacity Variation
A relay with a perfect capacity estimation algorithm would consistently report the same advertised bandwidth; thus, variation in advertised bandwidths indicates inaccurate capacity estimation. Let \( A(r, w) \) be the sequence of advertised bandwidths published by relay \( r \) during week \( w \). We quantify the variability in \( A(r, w) \) by computing the relative standard deviation (RSD) as:

\[
\text{RSD}(A(r, w)) = \frac{\text{stdev}(A(r, w))}{\text{mean}(A(r, w))}
\]

where \(\text{stdev}()\) and \(\text{mean}()\) compute the standard deviation and mean, respectively. Higher RSDs indicate more fluctuation and error in the estimation.

We summarize the variability in the estimated relay capacity for relay \( r \) by computing the mean of RSDs over all \( n \) weeks in which \( r \) published at least one valid server descriptor. We remove potential sources of bias by considering a server descriptor for \( r \) valid unless:
- It was published before \( r \) was measured (i.e., before \( r \) appeared in a consensus without the unmeasured flag).
- It was published during a week in which a change in \( r \)'s average or burst bandwidth options caused a reduction in the advertised bandwidth.

We call the mean of RSDs over all valid weeks the mean weekly RSD for relay \( r \). We compute mean weekly RSDs for only those relays that were not flagged as unmeasured in at least one consensus (to avoid potential bias from bootstrapping new relays).

### Analysis Results
We compute mean weekly RSDs for relays over \( n = 52 \) weeks, where \( w = 1 \) includes the seven days starting on 2018-08-01 and \( w = 52 \) includes the seven days starting on 2019-07-24. During this analysis period, 34,850 unique relays appeared across 8,736 consensus files. Of these, 11,296 (32%) were never measured, and an additional 1,503 (4.3%) were measured but did not publish a valid descriptor. We consider the remaining 22,051 relays (63%) as valid in our analysis and compute the mean weekly RSDs for these valid relays.

Figure 1 compares the distribution of the mean weekly RSD over all valid relays and distinct subsets separated by common relay characteristics (position, uptime, advertised bandwidth, and selection probability). Over all relays, we find that the reported advertised bandwidths exhibit significant variation. The mean over all relays of the mean weekly RSD is 27%, with 25% and 10% of the relays having a mean weekly RSD of 35% and 66% or more, respectively. Such variation is larger than expected if the true capacity does not change. We also find that the largest RSDs are associated with lower-capacity relays and those that are online less frequently.

- **Position**: A relay's position is where it serves most frequently. Figure 1a shows that guard relays exhibit significantly lower variation in their advertised bandwidths compared to exits and middles. Tor requires relays to be stable with high uptime to receive the Guard flag, which may explain this result.
- **Uptime**: A relay's uptime is the percentage of hours it is online. Figure 1b shows that relays with lower uptime are correlated with larger mean weekly RSDs. This suggests that relays that are less consistently available are underutilized by Tor clients and unable to observe enough traffic to reach their true capacity.
- **Advertised Bandwidth**: We compare mean weekly RSDs across relays with different ranges of mean advertised bandwidths. The mean is computed over the entire year, and we find that lower-capacity relays have higher RSDs.

## 4. Active Speed Test Experiment

To further investigate the accuracy of Tor's bandwidth estimation, we conducted an active speed test experiment over the entire live network. Our experiment involved:
- Measuring the actual forwarding capacity of a large number of relays.
- Comparing these measurements with the advertised bandwidths.

### Results
- **Underestimation of Total Capacity**: Our results indicate that Tor underestimates its total capacity by about 50%.
- **Capacity Estimate Increases**: Most relays increased their capacity estimates following our experiment, with some increasing by a factor of 10 or more.
- **Error Association**: Larger errors are associated with high-capacity relays, exit relays, and relays with lower uptimes.

These findings suggest that relay underutilization is a significant cause of error in capacity estimates. Improvements to Tor's bandwidth measurement system could significantly enhance load balancing and overall network performance.

## Conclusion
This work provides the first systematic exploration of the error in Tor's capacity estimation technique. Our results highlight the need for improved methods to accurately estimate relay capacities, which could lead to better load balancing and more efficient network performance. Future work should focus on developing and implementing these improved methods to support the continued growth and reliability of the Tor network.

**Acknowledgments:** We thank the Tor Project and the broader research community for their support and contributions.

**References:**
- [1] ...
- [2] ...
- [3] ...
- [4] ...
- [5] ...
- [6] ...
- [7] ...
- [8] ...
- [9] ...
- [10] ...
- [11] ...
- [12] ...
- [13] ...
- [14] ...
- [15] ...
- [16] ...
- [17] ...
- [18] ...
- [19] ...
- [20] ...
- [21] ...
- [22] ...
- [23] ...
- [24] ...
- [25] ...
- [26] ...
- [27] ...
- [28] ...
- [29] ...
- [30] ...
- [31] ...
- [32] ...
- [33] ...
- [34] ...

---

**Note:** The references listed above are placeholders and should be replaced with the actual citations from the original document.