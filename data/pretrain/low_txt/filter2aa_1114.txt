# Steganography in Commonly Used HF Radio Protocols

## Presenters
- **Paul (pdogg) / @pdogg77**
  - **Day Job**: Security Researcher at Confer Technologies Inc.
  - **Hobby**: Licensed amateur radio operator since 1986, ARRL Volunteer Examiner (VE)
  - **Experience**: Second trip to DEF CON

- **Brent (thedukezip) / @thedukezip**
  - **Day Job**: Software & Systems Engineer (RF)
  - **Hobby**: Licensed ham radio operator since 2006, ARRL VE

## Legal and Ethical Considerations
### Why You Shouldn't Do This and Why We Didn't Do It On the Air
- **FCC Regulations (Title 47 – Part 97)**
  - **§ 97.113 Prohibited transmissions.**
    - No amateur station shall transmit:
      - Music using a phone emission, except as specifically provided elsewhere.
      - Communications intended to facilitate a criminal act.
      - Messages encoded for the purpose of obscuring their meaning, except as otherwise provided.
      - Obscene or indecent words or language.
      - False or deceptive messages, signals, or identification.

## Project Background
- **Project Origin**
  - **Hackers + Drinks = Project**
  - **WANC - We are not cryptographers**
  - **Disclaimer**: We are not providing cryptographic advice. If you need such advice, consult a professional cryptographer.

- **Objective**
  - To demonstrate the feasibility (or infeasibility) of creating a:
    - Low-infrastructure
    - Long-range
    - Covert
    - Point-to-point, broadcast, or mesh
    - Short message protocol
  - Using existing consumer radio and computer equipment, leveraging a commonly used digital mode.

- **Motivation**
  - Avoid censorship and surveillance.
  - Uphold the right to communicate without interference.
  - Provide a method for communication that can be adapted by users.

## Amateur Radio and Existing Solutions
- **Amateur Radio**
  - Multiple frequency bands reserved for amateur radio operators.
  - Modes include voice chat and various digital modes.
  - Licensing requires passing a multiple-choice test.
  - **Reminder**: The rules prohibit the use of techniques we are demonstrating.

- **Existing Solutions**
  - **AirChat (Anonymous Lulzlabs)**
    - Encrypted communication in plain sight.
    - Breaks the rules and is not recommended for actual use.

## Good Steganography and OPSEC
- **Principles**
  - Hiding well in plain sight.
  - Invisible to normal users.
  - Plausible deniability.
  - Avoiding obvious and rule-breaking methods like spurious emissions.

- **Protocol Requirements**
  - Widespread common use.
  - Places to hide data.
  - Power efficiency.
  - No special hardware or closed software required.

## Popular Sound Card Digital Modes
- **RTTY**
  - In use since the 1920s.
  - Baudot code with 5-bit symbols and a stop and shift.
  - Amateurs typically use a 45 baud version with a 170 Hz carrier shift.
  - Limited character set.

- **PSK31**
  - Phase shift keying at 31 baud.
  - Developed by Peter Martinez G3PLX in 1998.
  - Uses a very tight protocol called "Varicode."

- **JT65**
  - Developed by Joe Taylor (K1JT) in 2005.
  - Designed for Earth-Moon-Earth communications.
  - Very power-efficient with a structured, low-data-rate protocol.
  - Open-source implementation available.

## Technical Details of JT65
- **Common HF Ham Frequencies**
  - 20m: 14.076 MHz
  - 15m: 21.076 MHz
  - 10m: 28.076 MHz
  - Upper Side Band (USB)

- **JT65 Packet Structure**
  - Sliced into 126 intervals of 0.372 seconds (47.8 seconds total).
  - 1270.5 Hz sync tone with a pseudo-random synchronization vector.
  - Symbols: 1270.5 + 2.6917(N+2)m Hz, where N is the integral symbol value (0 ≤ N ≤ 63) and m assumes values 1, 2, and 4 for JT65 sub-modes A, B, and C.

## Hiding in Reed-Solomon Codes
- **Exploiting Error Correction**
  - **Easy Mode**: Introduce static errors.
  - **Medium Mode**: Introduce errors with random cover.
  - **Hard Mode**: Encrypt and pack the message, then add Forward Error Correction (FEC).

- **Prior Work**
  - Peter Hanzlik, "Steganography in Reed-Solomon Codes," 2011.

## Encoding Steganography
- **Basic Example**
  - Steg: DEF CON 22
  - Key: pdogg thedukezip
  - Generate 20 'locations' based on SHA512.
  - Inject errors into the JT65 packet.

- **Encryption and Data Packing**
  - 72 bits available, which translates to 9 bytes.
  - Use a "packing" function to manage the data and status.

## Implementation
- **JT65 Base Layer**
  - `jt65 bin / lib`
- **Wrapper Layer**
  - `jt65wrapy.py`
- **Libraries**
  - `jt65stego.py`
  - `jt65sound.py`
  - `jt65tool.py`
  - `jt65analysis.py`

## Analysis and Detection
- **Defined Set of Legitimate JT65 Packets**
  - Known Cover Attack: Receive, decode, and re-encode packets.
  - Demodulator provides probability or confidence.
  - Theory: Packets suspected to contain steganography can be distinguished by quantitative measures.

- **Finding Steganography**
  - Easy to detect if not properly hidden.
  - Hard to detect if well-implemented.
  - Interesting patterns and warnings about distance and transmitter location.

## Effectiveness and Limitations
- **Worldwide Short Message Protocol**
  - Potential for analysis and detection, especially by well-equipped adversaries.
  - Vulnerabilities include message forgery and long-term cryptographic analysis.

## Next Steps and Further Study
- **Continued Detection and Counter-Detection Work**
- **Cryptographic Improvements**
- **Enhanced Amateur Applications**
- **Useful Protocols and Networks**

## Additional Information
- **Ham Exam Cram Session**
  - Crypto & Privacy Village: Sunday, 12 PM – 3 PM
  - Wireless Village: Sunday, 9 AM – 12 PM

## Thanks
- **@pdogg77**
- **@TheDukeZip**
- **GitHub Repository**: [https://www.github.com/pdogg/jt65stego/](https://www.github.com/pdogg/jt65stego/)
- **Special Thanks**: @masshackers

**Available on your conference DVD!**