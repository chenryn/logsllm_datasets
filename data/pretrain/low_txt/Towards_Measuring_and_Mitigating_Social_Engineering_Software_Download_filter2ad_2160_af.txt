### 8. Related Work

Social engineering (SE) primarily targets users rather than systems, leveraging principles from modern psychology, specifically the study of persuasion [13] and deception [41]. SE attacks have been explored in several studies [21, 27], but these works do not focus on SE download attacks. To our knowledge, the only systematic study on SE malware is [8], which discusses the psychological and technical tactics used by SE attacks and trends in SE malware. However, [8] focuses on malware spread via email and the tactics used to lure users into activating malicious code. The data analyzed in [8] is limited to malware case studies and statistics published in the VirusBulletin journal up to 2010. In contrast, our work focuses on web-based SE downloads and reconstructs how users are tricked into downloading malicious software. Our analysis is based on recent, real-world instances of successful SE attacks collected from a live network.

Several studies have examined malware downloads [11, 22, 34, 39]. For example, [34, 39] use a content-agnostic detection approach that computes a reputation score for domains/IPs serving malware. However, these systems are generic and do not provide insights into the origin of the attack; they only detect the side effects (i.e., the malware download itself). Other works focus on properties of malware droppers [11, 22], where already infected machines download updates or new malware strains. In contrast, we study how users fall victim to web-based SE download attacks and design a detection system that accurately identifies ad-driven SE downloads.

Researchers have also studied specific types of SE malware, such as FakeAVs [15, 16, 19, 25, 37]. Our work differs by proposing a general approach to studying, measuring, and classifying SE download attacks on the web. We do not limit ourselves to specific attack types like FakeAVs, making our work applicable to a broader range of SE download attacks, including those driven by generic ads.

Other studies have focused on traffic redirection chains to understand and detect malicious websites and attack delivery [23, 26, 38]. MadTracer [23] examines malicious advertisements, including ad chains that deliver malware. This is done by crawling popular websites and using a supervised classifier trained on data labeled with domain name blacklists (e.g., Google SafeBrowsing). While our ad-driven SE download detection system also leverages some properties of advertisement chains, we specifically focus on in-the-wild SE download attacks and can identify a wide variety of SE download attacks. For instance, [23] only reports fake anti-viruses (AVs) as malware delivered via ad-based scams, whereas our study finds many other types of SE-driven downloads using various deception and persuasion tactics. Our measurements show that fake AVs represent only a small fraction (less than 1%) of all SE attacks. Additionally, instead of actively searching for possible malware downloads on popular websites, we collect live SE attacks by directly observing successful attacks against users in a large academic network, allowing us to capture actual SE attacks rather than potential ones.

In our work, we use a combination of web traffic reconstruction and analysis to trace the origin of attacks, specifically the SE tactic that tricks users into downloading malicious software. Web traffic reconstruction has been studied in [12, 29, 30, 42]. Among these, WebWitness [30] is the closest to our work, as it aims to provide context to malicious downloads by reconstructing the user's path to downloading executable files. WebWitness can classify the cause of a malicious download as drive-by, social engineering, or update. However, [30] focuses on drive-by downloads and developing defenses against them, without studying SE attacks. WebWitness can separate drive-by downloads from SE downloads once an oracle identifies a download as malicious, but it cannot independently detect SE attacks. Although we utilize WebWitness' trace-back algorithm, our contributions differ significantly because we focus on the collection, analysis, and categorization of SE download attacks, as well as the detection and mitigation of ad-based SE-driven infections.

### 9. Conclusion

In this paper, we presented the first systematic study of social engineering (SE) attacks that trigger software downloads. We collected and reconstructed over two thousand examples of in-the-wild SE download attacks captured in a large academic network. We performed a detailed analysis and measurement of the collected data, developing a categorization system to identify and organize the tactics typically employed by attackers. By measuring the characteristics of the network infrastructure used to deliver SE attacks, we engineered features that can distinguish between SE and benign (or non-SE) software downloads with a true positive rate of 91% and a false positive rate of only 0.5%.

### References

[1] AdBlock Plus. https://adblockplus.org/.

[2] ReferrerPolicies. https://www.w3.org/TR/referrer-policy/#referrer-policy-origin. 2010.

[3] Protecting privacy with referrers, https://www.facebook.com/notes/facebook-engineering/protecting-privacy-with-referrers/392382738919/.

[4] The download.com debacle: What CNET needs to do to make it right, 2011. https://www.eff.org/deeplinks/2011/12/downloadcom-debacle-what-cnet-needs-do-make-it-right.

[5] Huge decline in fake AV following credit card processing shakeup, http://krebsonsecurity.com/2011/08/huge-decline-in-fake-av-following-credit-card-processing-shakeup/. 2011.

[6] Fake virus alert malware (FakeAV) information and what to do, 2013. http://helpdesk.princeton.edu/kb/display.plx?ID=1080.

[7] Here’s what happens when you install the top 10 Download.com apps, 2015. http://www.howtogeek.com/198622/heres-what-happens-when-you-install-the-top-10-download.com-apps/?PageSpeed=noscript.

[8] ABRAHAM, S., AND CHENGALUR-SMITH, I. An overview of social engineering malware: Trends, tactics, and implications. Technology in Society 32, 3 (2010), 183–196.

[9] BOTT, E. Social engineering in action: How web ads can lead to malware, 2011.

[10] BREIMAN, L. Random forests. Mach. Learn. 45, 1 (Oct. 2001).

[11] CABALLERO, J., GRIER, C., KREIBICH, C., AND PAXSON, V. Measuring pay-per-install: The commoditization of malware distribution. In Proceedings of the 20th USENIX Conference on Security (Berkeley, CA, USA, 2011), SEC’11, USENIX Association, pp. 13–13.

[12] CHEN, K. Z., GU, G., ZHUGE, J., NAZARIO, J., AND HAN, X. WebPatrol: Automated collection and replay of web-based malware scenarios. In Proceedings of the 6th ACM Symposium on Information, Computer and Communications Security (New York, NY, USA, 2011), ASIACCS ’11, ACM, pp. 186–195.

[13] CIALDINI, R. B. Influence: Science and Practice, 5th ed. Pearson Education, 2000.

[14] COVA, M., KRUEGEL, C., AND VIGNA, G. Detection and analysis of drive-by-download attacks and malicious JavaScript code. In Proceedings of the 19th International Conference on World Wide Web (New York, NY, USA, 2010), WWW ’10, ACM, pp. 281–290.

[15] DIETRICH, C. J., ROSSOW, C., AND POHLMANN, N. Exploiting visual appearance to cluster and detect rogue software. In Proceedings of the 28th Annual ACM Symposium on Applied Computing (New York, NY, USA, 2013), SAC ’13, ACM, pp. 1776–1783.

[16] DUMAN, S., ONARLIOGLU, K., ULUSOY, A. O., ROBERTSON, W., AND KIRDA, E. TrueClick: Automatically distinguishing trick banners from genuine download links. In Proceedings of the 30th Annual Computer Security Applications Conference (New York, NY, USA, 2014), ACSAC ’14, ACM, pp. 456–465.

[17] GRIER, C., BALLARD, L., CABALLERO, J., CHACHRA, N., DIETRICH, C. J., LEVCHENKO, K., MAVROMMATIS, P., MCCOY, D., NAPPA, A., PITSILLIDIS, A., PROVOS, N., RAFIQUE, M. Z., RAJAB, M. A., ROSSOW, C., THOMAS, K., PAXSON, V., SAVAGE, S., AND VOELKER, G. M. Manufacturing compromise: The emergence of exploit-as-a-service. In Proceedings of the 2012 ACM Conference on Computer and Communications Security (New York, NY, USA, 2012), CCS ’12, ACM, pp. 821–832.

[18] GRIER, C., TANG, S., AND KING, S. T. Secure web browsing with the OP web browser. In Proceedings of the 2008 IEEE Symposium on Security and Privacy (Washington, DC, USA, 2008), SP ’08, IEEE Computer Society, pp. 402–416.

[19] KIM, D. W., YAN, P., AND ZHANG, J. Detecting fake antivirus software distribution webpages. Comput. Secur. 49, C (Mar. 2015), 95–106.

[20] KOHAVI, R., AND JOHN, G. H. Wrappers for feature subset selection. Artificial Intelligence 97, 12 (1997), 273–324. Relevance.

[21] KROMBHOLZ, K., HOBEL, H., HUBER, M., AND WEIPPL, E. Advanced social engineering attacks. J. Inf. Secur. Appl. 22, C (June 2015), 113–122.

[22] KWON, B. J., MONDAL, J., JANG, J., BILGE, L., AND DUMITRAS, T. The dropper effect: Insights into malware distribution with downloader graph analytics. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (New York, NY, USA, 2015), CCS ’15, ACM, pp. 1118–1129.

[23] LI, Z., ZHANG, K., XIE, Y., YU, F., AND WANG, X. Knowing your enemy: Understanding and detecting malicious web advertising. In Proceedings of the 2012 ACM Conference on Computer and Communications Security (New York, NY, USA, 2012), CCS ’12, ACM, pp. 674–686.

[24] LU, L., YEGNESWARAN, V., PORRAS, P., AND LEE, W. BLADE: An attack-agnostic approach for preventing drive-by malware infections. In Proceedings of the 17th ACM Conference on Computer and Communications Security (New York, NY, USA, 2010), CCS ’10, ACM, pp. 440–450.

[25] MAVROMMATIS, P., BALLARD, L., PROVOS, N., INC, G., AND ZHAO, X. The nocebo effect on the web: An analysis of fake antivirus distribution. In In USENIX Workshop on Large-Scale Exploits and Emergent Threats (LEET 2010).

[26] MEKKY, H., TORRES, R., ZHANG, Z.-L., SAHA, S., AND NUCCI, A. Detecting malicious HTTP redirections using trees of user browsing activity. In INFOCOM, 2014 Proceedings IEEE (April 2014), pp. 1159–1167.

[27] MITNICK, K. D., AND SIMON, W. L. The Art of Deception: Controlling the Human Element of Security, 1st ed. John Wiley & Sons, Inc., New York, NY, USA, 2002.

[28] NAPPA, A., RAFIQUE, M. Z., AND CABALLERO, J. Driving in the cloud: An analysis of drive-by download operations and abuse reporting. In Proceedings of the 10th International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (Berlin, Heidelberg, 2013), DIMVA’13, Springer-Verlag, pp. 1–20.

[29] NEASBITT, C., PERDISCI, R., LI, K., AND NELMS, T. ClickMiner: Towards forensic reconstruction of user-browser interactions from network traces. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (New York, NY, USA, 2014), CCS ’14, ACM, pp. 1244–1255.

[30] NELMS, T., PERDISCI, R., ANTONAKAKIS, M., AND AHAMAD, M. WebWitness: Investigating, categorizing, and mitigating malware download paths. In Proceedings of the 24th USENIX Conference on Security Symposium (Berkeley, CA, USA, 2015), SEC’15, USENIX Association, pp. 1025–1040.

[31] POWER, R., AND FORTE, D. Social engineering: Attacks have evolved, but countermeasures have not. Computer Fraud and Security 2006, 10 (2006), 17–20.

[32] PROJECT, T. C. Out-of-process iframes (OOPIFs). https://www.chromium.org/developers/design-documents/oop-iframes.

[33] PROVOS, N., MCNAMEE, D., MAVROMMATIS, P., WANG, K., AND MODADUGU, N. The ghost in the browser: Analysis of web-based malware. In Proceedings of the First Conference on First Workshop on Hot Topics in Understanding Botnets (Berkeley, CA, USA, 2007), HotBots’07, USENIX Association, pp. 4–4.

[34] RAJAB, M. A., BALLARD, L., LUTZ, N., MAVROMMATIS, P., AND PROVOS, N. CAMP: Content-agnostic malware protection.

[35] RAJAB, M. A., BALLARD, L., MAVROMMATIS, P., PROVOS, N., AND ZHAO, X. The nocebo effect on the web: An analysis of fake antivirus distribution. In Proceedings of the 3rd USENIX Conference on Large-scale Exploits and Emergent Threats: Botnets, Spyware, Worms, and More (Berkeley, CA, USA, 2010), LEET’10, USENIX Association, pp. 3–3.

[36] REIS, C., AND GRIBBLE, S. D. Isolating web programs in modern browser architectures. In Proceedings of the 4th ACM European Conference on Computer Systems (New York, NY, USA, 2009), EuroSys ’09, ACM, pp. 219–232.

[37] STONE-GROSS, B., ABMAN, R., KEMMERER, R. A., KRUEGEL, C., STEIGERWALD, D. G., AND VIGNA, G. The underground economy of fake antivirus software. In In Proc. (online) WEIS 2011 (2011).

[38] STRINGHINI, G., KRUEGEL, C., AND VIGNA, G. Shady paths: Leveraging surfing crowds to detect malicious web pages. In Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security (New York, NY, USA, 2013), CCS ’13, ACM, pp. 133–144.

[39] VADREVU, P., RAHBARINIA, B., PERDISCI, R., LI, K., AND ANTONAKAKIS, M. Measuring and detecting malware downloads in live network traffic. In Computer Security ESORICS 2013, J. Crampton, S. Jajodia, and K. Mayes, Eds., vol. 8134 of Lecture Notes in Computer Science. Springer Berlin Heidelberg, 2013, pp. 556–573.

[40] WANG, H. J., GRIER, C., MOSHCHUK, A., KING, S. T., CHOUDHURY, P., AND VENTER, H. The multi-principal OS construction of the Gazelle web browser. In Proceedings of the 18th Conference on USENIX Security Symposium (Berkeley, CA, USA, 2009), SSYM’09, USENIX Association, pp. 417–432.

[41] WHALEY, B. Toward a general theory of deception, 1982. Military Deception and Strategic Surprise.

[42] XIE, G., ILIOFOTOU, M., KARAGIANNIS, T., FALOUTSOS, M., AND JIN, Y. RESURF: Reconstructing web-surfing activity from network traffic. In IFIP Networking Conference, 2013 (2013), IEEE, pp. 1–9.

[43] XING, X., MENG, W., LEE, B., WEINSBERG, U., SHETH, A., PERDISCI, R., AND LEE, W. Understanding malvertising through ad-injecting browser extensions. In Proceedings of the 24th International Conference on World Wide Web (New York, NY, USA, 2015), WWW ’15, ACM, pp. 1286–1295.