### 优化后的文本

**摘要：**
本文研究了路径最大传输单元（Path MTU, PMTU）发现机制在IPv4和IPv6网络中的行为。通过实验，我们发现至少80%的Web服务器能够正确处理PMTU消息。然而，一些系统由于操作系统或中间设备的问题导致PMTU失败。我们提出了一些策略来显著降低IPv4的失败率。

**1. 引言**
路径最大传输单元（PMTU）发现是一种简单但关键的网络协议，它依赖于路由器生成“包太大”（Packet Too Big, PTB）消息、中间设备转发这些消息以及终端主机正确响应。本文通过实验分析了Web服务器对PTB消息的处理情况，并提出了改进措施。

**2. 实验结果**

**2.1 包大小调整行为**
图5展示了在接收到PTB消息后，不同MTU测试值下段大小的变化情况。大多数Web服务器会将包大小调整到建议的值，但不会低于552字节。70%的服务器按预期调整包大小，而5%的服务器会进一步减少40字节以确保数据包顺利通过链路。对于MTU为256的情况，很少有服务器会将包大小降至552字节以下，而是清除DF位以允许分片。

**2.2 响应时间**
对于1280 MTU测试，2.7%的服务器将段大小减至576字节，其中91%还清除了DF位。这表明这些服务器使用了类似Windows的黑洞检测机制。图6显示了从发送第一个PTB消息到Web服务器传输可通过的数据包之间的延迟。91%的服务器在一秒钟内完成调整，94%的服务器在三秒内响应。然而，对于将包大小减至576字节的服务器，77%在首次发送PTB消息后至少20秒才进行调整，这些服务器很可能是Windows主机，并且74%对ping无响应。

**2.3 其他避免PMTUD失败的技术**
Linux实现了两种技术来避免PMTUD失败，但默认未启用。第一种技术是先发送大包，如果两次丢失且未收到PTB消息，则九秒后改为发送552字节的包并清除DF位。第二种技术是PLPMTUD [14]，默认发送552字节的包，在窗口大小增长到11个段时尝试发送1064字节的段并设置DF位。MacOS自10.6版本起也实现了类似的黑洞检测机制。我们在实验中未观察到这些技术的应用，除非中间设备丢弃了PTB消息。

**3. IPv6 PMTUD行为**
表3展示了IPv6实验的结果。对于1280字节的MTU，PMTUD失败率为2.4%，而IPv4服务器的失败率为4.4%。这可能是因为较少的Web服务器启用了IPv6防火墙。表4列出了最常见的MSS值及其对应的失败率。与IPv4一样，广告MSS为1380的系统更有可能失败。

**4. 结论**
PMTU发现是一个相对简单的算法，但其成功依赖于PTB消息的生成、转发及终端主机的正确响应。本文研究表明，至少80%的Web服务器能够正确处理PTB消息。我们提出了三种策略来显著降低IPv4的失败率：修改操作系统以在路径MTU低于阈值时不设置DF位；调试重写TCP MSS为1380字节的中间设备以确保正确转发PTB消息；教育系统管理员关于转发PTB消息的重要性。

**5. 致谢**
本研究得到了新西兰科学研究基金会（FRST）的支持。感谢Emile Aben（RIPE NCC）、Daniel Andersen（CAIDA）、Kenjiro Cho（IIJ）、Bill Owens（NYSERNet）和Bill Walker（SNAP Internet）提供的数据和访问支持。

**6. 参考文献**
[1] Alberto Medina, Mark Allman, and Sally Floyd. Measuring interactions between transport protocols and middleboxes. In IMC '04, pages 336–341, Taormina, Sicily, Italy, October 2004.
...
[24] RIPE Labs. Untunneling IPv6. http://labs.ripe.net/content/untunneling-ipv6.

---

通过以上优化，文本变得更加清晰、连贯和专业。希望这对您有所帮助！