### Impact of Caching in DNS Resolvers on Performance and Latency

Caching in DNS resolvers significantly affects DNS performance and the latency experienced by clients, as discussed in [10] and [11]. To optimize content distribution networks (CDNs), [12] conducted a study to associate DNS resolvers with their clients and designed methods to fingerprint the operating system or DNS software. However, these methods were not evaluated at an Internet-scale. This work was extended by [13], which fingerprinted a limited set of DNS software (Bind, Unbound, and Windows) in the wild. Both [12] and [13] used patterns in DNS queries to fingerprint DNS software, as illustrated in Fig. 8.

### Enumerating Caches: A Combinatorial Problem

The enumeration of caches can be seen as an extension of the combinatorial coupon collector problem [9], where one needs to collect all coupons to win a contest. Specifically, given an urn with \( n \) different coupons, collected equally likely and with replacement, what is the probability that more than \( t \) sample trials are needed to collect all \( n \) coupons? In our context, the urns represent caches, and the question is how many DNS queries are required to ensure all caches are covered?

Assume each cache out of \( n \) caches is equally likely to be selected for a given query. In each iteration, exactly one cache is probed, and the experiment is repeated until each of the \( n \) caches has been probed at least once. The cache selection is an independent random variable, and a cache \( i \) is selected with probability \( p_i = \frac{1}{n} \).

We then consider the following problem: What is the expected number of queries \( q \) needed to probe all \( n \) caches?

**Theorem 5.1:** Let \( X \) be the random number of queries required to probe all \( n \) caches, such that \( X = X_1 + \ldots + X_n \) and each \( X_i \) (\( \forall 0 < i \leq n \)) denotes the number of queries required to probe cache \( i \) after probing cache \( i-1 \). The expected number of queries \( q = E(X) \) to probe all \( n \) caches is:

\[
E(X) = E(X_1) + \ldots + E(X_n) = \frac{1}{p_n} + \ldots + \frac{1}{p_1} = n \times \left( \frac{1}{n} + \ldots + \frac{1}{1} \right) = n \times H_n = n \log n + O(n) = \Theta(n \log n)
\]

**Proof 5.2:** The first cache is probed with the first query, i.e., \( X_1 = 1 \). The probability to probe cache \( i + 1 \) is:

\[
P(\text{probe } i+1) = \frac{n - (i-1)}{n}
\]

Thus, the expected number of queries to probe all \( n \) caches is:

\[
E(X) = n \times \sum_{i=1}^{n} \frac{1}{i} = n \times H_n = n \log n + O(n) = \Theta(n \log n)
\]

### Role of Caches in Resolution Chains

Caches play a more significant role in resolution chains than ingress or egress resolvers. Ingress resolvers relay queries from clients to the caches without applying caching logic to the received records. They often use upstream caches like Google Public DNS, making the client see only the forwarder while the complex caching logic is performed by the upstream cache. During our Internet evaluations, we observed that multiple IP addresses are involved in a resolution chain of a domain name, leading to different IP addresses performing the resolution. For example, when resolving `www.foo.example`, the request to the parent domain `example` arrives from one egress IP address, and a subsequent request to `foo.example` arrives from a different egress IP address. Consequently, the DNS software running on an egress IP address does not reflect the inner workings of the caching.

### Previous Studies and Their Limitations

A study by [14] suggested removing DNS resolution platforms and leaving the resolution to end hosts, arguing that the overhead on existing end hosts would not be significant. [15] evaluated the impact of domain name features on the effectiveness of caching. Recently, Schomp et al. [16] measured the client side of the DNS infrastructure of open recursive resolvers to identify all actors in DNS resolution platforms. Their goal was to understand the actors involved in DNS resolution, but they did not cover the discovery and study of caches and the mappings between IP addresses and the caches hidden behind them. Our research extends client-side DNS infrastructure studies by designing and evaluating methodologies for inferring cache topologies and structures, and providing methodologies for inferring cache-to-IP address mappings and calculating the number of caches behind a given IP address of a DNS resolver.

### Security Implications of DNS Caching

DNS security typically refers to the correctness of DNS responses against DNS cache poisoning attacks and the privacy of clients and systems against censorship and monitoring. There is a long history of DNS cache poisoning, as documented in [21], [22], and [7]. Governments and cybercriminals have practiced DNS cache poisoning for censorship, surveillance, credentials theft, and malware distribution. In a DNS cache poisoning attack, the attacker provides spoofed records in DNS responses, which are cached and returned to clients, redirecting them to incorrect hosts. Recent vulnerabilities and evidence of DNS injections in the Internet have raised awareness, leading to several studies measuring DNS injections in the wild, such as [25], [17], and [26].

In our recent work [8], we analyzed the vulnerabilities of caches to different record injection methods. Another study [27] measured misconfigured domains with dangling records and showed attacks exploiting them.

### Conclusions

DNS has evolved into a complex infrastructure involving hosts receiving queries from clients, caches storing requested records, and hosts communicating with nameservers. We studied caches in popular networks in the Internet and developed tools for cache enumeration and mapping to ingress and egress IP addresses. Understanding and characterizing caches in networks is crucial for security. Multiple caches, along with an unpredictable cache selection strategy, can significantly raise the bar for DNS cache poisoning. Our study shows that IP addresses provide a visible aspect of DNS resolution platforms, but they expose little information about internal configurations. In most cases, multiple different egress IP addresses participate in the resolution of a given name, indicating that IP addresses have little meaning in terms of the underlying cache structure.

### Acknowledgements

This research was supported in part by the German Federal Ministry of Education and Research (BMBF) and the Hessian Ministry of Science and the Arts within CRISP (www.crisp-da.de/). It was also co-funded by the DFG as part of project S3 within the CRC 1119 CROSSING. We are grateful to the Microsoft Azure Research Award, which enabled us to host our infrastructure on the Azure platform.

### References

[1] A. Klein, “BIND 9 DNS cache poisoning,” Trusteer, Ltd., 3 Hayetzira Street, Ramat Gan 52521, Israel, Report, 2007.

[2] A. Herzberg and H. Shulman, “Security of patched DNS,” in Computer Security - ESORICS 2012 - 17th European Symposium on Research in Computer Security, Pisa, Italy, September 10-12, 2012. Proceedings, 2012, pp. 271–288.

[3] H. Shulman and M. Waidner, “Towards security of internet naming infrastructure,” in European Symposium on Research in Computer Security. Springer, 2015, pp. 3–22.

[4] ——, “Fragmentation Considered Leaking: Port Inference for DNS Poisoning,” in Applied Cryptography and Network Security (ACNS), Lausanne, Switzerland. Springer, 2014.

[5] A. Herzberg and H. Shulman, “Vulnerable delegation of DNS resolution,” in Computer Security - ESORICS 2013 - 18th European Symposium on Research in Computer Security, Egham, UK, September 9-13, 2013. Proceedings, 2013, pp. 219–236. [Online]. Available: http://dx.doi.org/10.1007/978-3-642-40203-6 13

[6] ——, “Socket Overloading for Fun and Cache Poisoning,” in ACM Annual Computer Security Applications Conference (ACM ACSAC), New Orleans, Louisiana, U.S., C. N. P. Jr., Ed., December 2013.

[7] ——, “Fragmentation Considered Poisonous: or one-domain-to-rule-them-all.org,” in IEEE CNS 2013. The Conference on Communications and Network Security, Washington, D.C., U.S. IEEE, 2013.

[8] A. Klein, H. Shulman, and M. Waidner, “Internet-Wide Study of DNS Cache Injections,” in INFOCOM, 2017.

[9] A. Boneh and M. Hofri, “The coupon-collector problem revisited: a survey of engineering problems and computational methods,” Stochastic Models, vol. 13, no. 1, pp. 39–66, 1997.

[10] J. Jung, E. Sit, H. Balakrishnan, and R. Morris, “DNS performance and the effectiveness of caching,” Networking, IEEE/ACM Transactions on, vol. 10, no. 5, pp. 589–603, 2002.

[11] D. Wessels, M. Fomenkov, N. Brownlee, and K. Claffy, “Measurements and laboratory simulations of the upper DNS hierarchy,” Passive and Active Network Measurement, pp. 147–157, 2004.

[12] C. A. Shue and A. J. Kalafut, “Resolvers revealed: Characterizing DNS resolvers and their clients,” ACM Transactions on Internet Technology (TOIT), vol. 12, no. 4, p. 14, 2013.

[13] R. Chitpranee and K. Fukuda, “Towards passive DNS software fingerprinting,” in Proceedings of the 9th Asian Internet Engineering Conference. ACM, 2013, pp. 9–16.

[14] K. Schomp, M. Allman, and M. Rabinovich, “DNS resolvers considered harmful,” in Proceedings of the 13th ACM Workshop on Hot Topics in Networks. ACM, 2014, p. 16.

[15] S. Hao and H. Wang, “Exploring domain name based features on the effectiveness of DNS caching,” ACM SIGCOMM Computer Communication Review, vol. 47, no. 1, pp. 36–42, 2017.

[16] K. Schomp, T. Callahan, M. Rabinovich, and M. Allman, “On measuring the client-side DNS infrastructure,” in Proceedings of the 2013 conference on Internet measurement conference. ACM, 2013, pp. 77–90.

[17] ——, “Assessing DNS vulnerability to record injection,” in Passive and Active Measurement. Springer, 2014, pp. 214–223.

[18] M. Kührer, T. Hupperich, J. Bushart, C. Rossow, and T. Holz, “Going wild: Large-scale classification of open DNS resolvers,” in Proceedings of the 2015 ACM Conference on Internet Measurement Conference. ACM, 2015, pp. 355–368.

[19] D. Dagon, N. Provos, C. P. Lee, and W. Lee, “Corrupted DNS resolution paths: The rise of a malicious resolution authority.” in NDSS, 2008.

[20] J. Zhang, Z. Durumeric, M. Bailey, M. Liu, and M. Karir, “On the mismanagement and maliciousness of networks,” in to appear) Proceedings of the 21st Annual Network & Distributed System Security Symposium (NDSS14), San Diego, California, USA, 2014.

[21] J. Stewart, “DNS cache poisoning–the next generation,” 2003.

[22] D. Kaminsky, “It’s the End of the Cache As We Know It,” in Black Hat conference, August 2008, http://www.blackhat.com/presentations/bh-jp-08/bh-jp-08-Kaminsky/BlackHat-Japan-08-Kaminsky-DNS08-BlackOps.pdf.

[23] D. Anderson, “Splinternet behind the great firewall of China,” Queue, vol. 10, no. 11, p. 40, 2012.

[24] M. Hu, “Taxonomy of the Snowden Disclosures,” Wash & Lee L. Rev., vol. 72, pp. 1679–1989, 2015.

[25] P. Levis, “The collateral damage of internet censorship by DNS injection,” ACM SIGCOMM Computer Communication Review, vol. 42, no. 3, 2012.

[26] M. Wander, C. Boelmann, L. Schwittmann, and T. Weis, “Measurement of globally visible DNS injection,” Access, IEEE, vol. 2, pp. 526–536, 2014.

[27] D. Liu, S. Hao, and H. Wang, “All your DNS records point to us: Understanding the security threats of dangling DNS records,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, Vienna, Austria, October 24-28, 2016, 2016, pp. 1414–1425.

[28] H. Shulman and M. Waidner, “One Key to Sign Them All Considered Vulnerable: Evaluation of DNSSEC in Signed Domains,” in The 14th USENIX Symposium on Networked Systems Design and Implementation (NSDI). USENIX, 2017.