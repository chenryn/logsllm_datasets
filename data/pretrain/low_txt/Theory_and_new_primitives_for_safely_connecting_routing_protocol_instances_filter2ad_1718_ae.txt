### Primitives and Shortest Path Routing Between Different Protocol Instances

Traditional routing primitives do not support router-level shortest path routing between instances of different protocol types, such as OSPF and RIP. In such scenarios, the cost of a redistributed route is set to a value that has no relation to the original route's cost. Consequently, the cost information to the destination is lost at the first redistribution point. Even when redistributing routes between OSPF instances, the existing procedure has limitations. The cost can only be set to an arbitrary value independent of the initial cost or to its original value. The current redistribution process does not allow for the modification of the cost of redistributed routes through a function. This is problematic in operational networks where OSPF costs may reflect physical distances between routers. If different units are used in each instance (e.g., miles versus meters), router-level shortest path routing becomes impossible.

### New Design with Conversion Functions

In contrast, the new design allows operators to specify their own conversion functions. The new primitives enable router-level shortest path routing between any pair of IGP instances. We implemented this in a network consisting of two routing protocol instances: OSPF and RIP. Their routing metrics represent physical distances in different units (e.g., meters and miles, respectively). The conversion functions at the border routers (B, D) allow for geographical shortest path routing across the instances, even when different units are used in each domain. By modifying the costs of different links, the shortest path (e.g., between A and C) was consistently selected.

### Traffic Engineering Across Multiple Routing Instances

Current traffic engineering techniques are only applicable within a single IGP routing protocol instance [12] or between BGP domains [26]. Our new primitives, with their support for router-level shortest path routing, naturally extend traffic engineering across multiple routing instances without requiring additional coordination between them.

To illustrate the existing limitations and newly supported capabilities, consider the example network in Figure 11. The network consists of three routing protocol instances (OSPF 10, RIP, OSPF 20). Network operators frequently adjust IGP weights to minimize congestion by redirecting traffic over less congested links. However, this technique is currently only applicable within a single routing protocol instance. For instance, if the link B-C is congested, its weight can be increased. The goal is for senders (e.g., S) to select less resource-constrained paths (e.g., S-X-Y-Z-D). However, because redistributed routes are assigned static metric values (e.g., at B, Y, A, and X), the initial weight information is lost, and senders may still select the congested paths (e.g., S-A-B-C-D). Although the metrics of redistributed routes could be updated at the border routers B and Y during congestion, the operators of OSPF 10 may have no control over the border routers A and X, leading to persistent congestion. In comparison, our implementation eliminates this limitation.

We implemented the network in Figure 11 without modifying the default conversions at the border routers. With the cost of B-C set to 50, S received two paths to D: D-C-B-A-S with a cost of 276, and D-Z-Y-X-S with a cost of 655. S selected the first path due to its lower cost. After increasing the cost of B-C to 400, the cost of the route redistributed by A into OSPF was updated to 1296. Consequently, S switched to the second path to forward its traffic to D.

### Virtual Private Networks (VPNs)

Section 5.1 introduces a limitation to BGP: routes cannot be redistributed from BGP into an IGP. An important question is whether this new restriction prevents existing design objectives from being achieved. Empirical studies [21] have shown that networks often inject routes from BGP into an IGP, especially in VPN deployments. As illustrated in Figure 12, a company (e.g., XYZ) may have multiple sites (e.g., Site 1, Site 2) with their own routing protocols (e.g., RIP, OSPF). To allow connectivity between the sites, the company relies on a service provider backbone. Routes from one site (e.g., OSPF routes from Site 1) are first redistributed into the backbone (i.e., BGP cloud) at a provider edge (PE) router (e.g., PE 1). The routes are propagated through the BGP backbone and then redistributed from BGP into the IGP of each remote site (e.g., RIP from Site 2) at the connecting PEs (e.g., PE 2).

The fact that the new primitives prevent this type of redistribution may be a serious impediment to their adoption. However, the same objective can be achieved without any redistribution from BGP into IGP. For simple scenarios, a customer edge (CE) router (e.g., CE 1) can originate a default route in the respective site’s IGP (e.g., Site 1’s OSPF) and be configured with a static route pointing to the connecting PE (e.g., PE 1) for the default route (0.0.0.0/0). Alternatively, BGP can be deployed in the company’s sites, and operators can redistribute the IGP routes into BGP at each site, controlling the route propagation through BGP policies. In future work, we will seek to further understand the full impact of the OSPF and BGP restrictions stipulated in our design on network operations.

### Strict Preference Policy

The current route selection allows routers to strictly prefer routes from one protocol instance over another, e.g., "Always prefer OSPF routes to RIP routes." This policy might be useful for implementing blackholes (e.g., in the event of DDoS). This section illustrates how our design can be extended to support such strict preference policies. Every non-BGP routing protocol instance is modeled as a 3-ary routing algebra: {protocol, type, cost}. The new protocol attribute is considered first when comparing non-BGP routes. It has an integer range from 1 to 255 in the universal metric space, with 255 corresponding to the prohibited path. EIGRP, OSPF, RIP, and static routes are defined to be of protocol type "EIGRP," "OSPF," "RIP," and "static," respectively. Table 3 presents the additional default conversion functions. All protocols are equally preferred by default. This design extension supports strict preference policies in addition to the previously presented objectives. To specify a strict preference for a protocol instance, simply override that instance’s conversion function in the protocol dimension at all its border routers, e.g., from "OSPF → 254" to "OSPF → 10." Doing so will not result in routing anomalies as long as the new set of conversion functions conforms to Condition 1.

### Related Work

A significant body of work exists on the correctness of routing, but most prior work focused on specific protocols. For RIP, the focus was on solving the "count to infinity" problem. For OSPF, special attention was given to stability issues [4, 27]. For BGP, various causes for potential routing anomalies have been identified, followed by the development of thorough analytical models and solutions. These insights led researchers to explore design principles for creating a safer inter-domain protocol [16, 19, 10, 11] and more abstractly, develop unifying algebraic frameworks identifying fundamental properties a vector or link-state routing protocol must satisfy to ensure correct behaviors [29, 17].

Prior to these results, researchers had already started adopting an algebraic approach to routing [7, 13, 14]. However, these algebraic structures may abstract away too many routing protocol-specific dynamics and possess properties that are not realistic for contemporary routing protocols. For example, neither IGRP nor BGP satisfies the distributivity property required by dioids.

For routing across multiple routing protocol instances, several analytical models were recently introduced [22, 23], enabling a rigorous analysis of the current design of connecting primitives and exposing its deficiencies. These models also made the formulation of practical configuration guidelines possible [20]. However, this approach is inherently backward-looking, applying only to existing solutions and further restricting the expressiveness of the already rigid current primitives. Recently, two researchers [6] proposed a new algebraic approach based on idempotent semirings to model routing, including the case across multiple routing instances. While the approach is general and promising, it models only route redistribution, not AD, nor the interaction of route redistribution and AD, which was left as future work.

The closest related work to our proposal is the "metric transformations" introduced by Mills and Braun in 1987 [25]. This concept is similar to our notion of "conversion functions" as it permits exchanging routes between routing instances and deriving the metric of the newly redistributed routes. Understandably, Mills and Braun focused on routing protocols with only a single metric (e.g., RIP) and with a distance vector mode of computation between the routing instances. In comparison, our formal framework applies to routing protocols with multiple criteria, allows a link-state mode of redistribution across the routing instances, and identifies sufficient conditions for routing safety and optimal paths.

### Discussion

Several important questions still need to be investigated. On the theory front, can we find safety conditions without requiring all border routers of the same routing instance to use identical conversion functions? As the fine-grained effects of different path computation algorithms on routing correctness are better understood [30], can we weaken the sufficient conditions for the conversion functions? Additionally, while the notion of conversion functions is general and can model existing mechanisms, our theory concentrates on routing protocols that rank routes based on a lexical product of multiple attributes. All existing routing protocols fall into this category. However, if new routing protocols with different ways of ranking routes emerge, new sufficient conditions may need to be derived.

On the design front, there may be important operational requirements that are little known outside the selected operational communities. How do we collect them if this is indeed the case? Furthermore, how can we anticipate requirements that may arise in the future?

### Conclusion

We have presented a new theory to reason about the safety of routing across multiple routing instances. Additionally, we identify a set of conditions for the connecting primitives to guarantee correct routing and optimal paths. The second part of the paper describes an application of the theory to create a new set of connecting primitives that are much safer and more flexible than the currently deployed version. We assumed no changes to the specifications of the existing routing protocols and demonstrated that with very minimal changes to how they should be configured, the new primitives can not only support existing operational objectives but also enable new functions that are important but not feasible today, all while guaranteeing routing safety. In the big picture, our effort can be viewed as another example that underscores the importance and feasibility of principled design, which we believe can help all phases of network operations.

### Acknowledgements

We thank the SIGCOMM TPC and Joao Sobrinho for their constructive comments on early drafts of the work. Yi Zhuang and Aditya Bhave contributed to the XORP implementation. This research was partially supported by the NSF under the 100x100 project [1] (ANI-0331653), the 4D project [2] (ANI-0520187 & ANI-0520210), grant CNS-0721574, and a graduate research fellowship. Views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of NSF or the U.S. government.

### References

[1] 100x100 Clean Slate Project. www.100x100network.org.
[2] 4D Project. www.cs.cmu.edu/∼4D.
[3] XORP: eXtensible Open source Routing Platform. www.xorp.org.
[4] A. Basu and J. G. Riecke. Stability Issues in OSPF Routing. In ACM SIGCOMM, 2001.
[5] T. Benson, A. Akella, and D. Maltz. Unraveling the Complexity of Network Management. In USENIX NSDI, 2009.
[6] J. N. Billings and T. G. Griffin. A Model of Internet Routing Using Semi-modules. In International Conference on Relational Methods in Computer Science, 2009.
[7] B. Carré. Graphs and Networks. Oxford University Press, 1979.
[8] Cisco. OSPF Redistribution Among Different OSPF Processes, 2006.
[9] Cisco. What Is Administrative Distance?, March 2006.
[10] N. Feamster, H. Balakrishnan, and J. Rexford. Some Foundational Problems in Interdomain Routing. In HotNets, 2004.
[11] N. Feamster, R. Johari, and H. Balakrishnan. Implications of Autonomy for the Expressiveness of Policy Routing. In ACM SIGCOMM, 2005.
[12] B. Fortz, J. Rexford, and M. Thorup. Traffic Engineering With Traditional IP Routing Protocols. In IEEE Communication Magazine, 2002.
[13] M. Gondran and M. Minoux. Graphs and Algorithms. Wiley, 1984.
[14] M. Gondran and M. Minoux. Graphs, Dioids, and Semirings: New Models and Algorithms. Springer, 2008.
[15] M. G. Gouda and M. Schneider. Maximizable Routing Metrics. In IEEE ICNP, 1998.
[16] T. G. Griffin, A. D. Jaggard, and V. Ramachandran. Design Principles of Policy Languages for Path Vector Protocols. In ACM SIGCOMM, 2003.
[17] T. G. Griffin and J. L. Sobrinho. Metarouting. In ACM SIGCOMM, 2005.
[18] A. Gurney and T. G. Griffin. Lexicographic Products in Metarouting. In ICNP, 2007.
[19] A. D. Jaggard and V. Ramachandran. Robustness of Class-Based Path-Vector Systems. In IEEE ICNP, 2004.
[20] F. Le and G. Xie. On Guidelines for Safe Route Redistributions. In ACM INM Workshop, 2007.
[21] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding Light on the Glue Logic of the Internet Routing Architecture. In ACM SIGCOMM, 2008.
[22] F. Le, G. Xie, and H. Zhang. Understanding Route Redistribution. In IEEE ICNP, 2007.
[23] F. Le, G. Xie, and H. Zhang. Instability Free Routing: Beyond One Protocol Instance. In ACM CoNEXT, 2008.
[24] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjalmtysson, and A. Greenberg. Routing Design in Operational Networks: A Look from the Inside. In ACM SIGCOMM, 2004.
[25] D. Mills and H. Braun. The NSFNET Backbone Network. In ACM SIGCOMM, 1987.
[26] B. Quoitin, C. Pelsser, L. Swinnen, O. Bonaventure, and S. Uhlig. Interdomain Traffic Engineering with BGP. In IEEE Communication Magazine, 2003.
[27] A. Shaikh, C. Isett, A. Greenberg, M. Roughan, and J. Gottlieb. A Case Study of OSPF Behavior in a Large Enterprise Network. In IMW, 2002.
[28] J. Sobrinho. Algebra and Algorithms for QoS Path Computation and Hop-by-Hop Routing in the Internet. In IEEE INFOCOM, 2001.
[29] J. L. Sobrinho. Network Routing With Path Vector Protocols: Theory and Applications. In ACM SIGCOMM, 2003.
[30] J. L. Sobrinho and T. G. Griffin. Routing in Equilibrium. In Mathematical Theory of Networks and System, 2010.