### Cross-Site Scripting (XSS) Vulnerabilities

More than 68% of websites using WordPress are running vulnerable versions. Analyzing the distribution of WordPress major versions from September 30, 2013, to December 31, 2013, we found that WordPress 3.5.* (with an average of 6.5K installations) and 3.6.* (with an average of 5K installations) were the most commonly used versions. One month after the release of WordPress 3.7.* (on October 14, 2013) and 3.8.* (on December 12, 2013), approximately 3,500 and 2,500 webpages, respectively, adopted these new versions. However, 3.5.* and 3.6.* remained the most popular releases.

### Third-Party Trackers

Many third-party trackers operate by having site owners embed specific JavaScript, known as tracking code, into their webpages. We can identify if a website uses a particular tracker by searching for the corresponding tracking code in the page’s HTML content. This method may miss dynamically loaded trackers or those with modified code. Tracking code typically includes a unique URL, which serves as a fingerprint. Using MySQL regular expressions to search for these fingerprints in the WhoWas database provides a lower bound on the number of websites using a given tracker. For example, to detect the tracker associated with `scorecardresearch.com`, we construct a query string to search for `http://b.scorecardresearch.com` in the JavaScript section of a page.

We searched for the use of trackers previously identified by Mayer et al. [42]. Table 20 shows the top 10 trackers used by websites in EC2 and Azure on December 31, 2013, during our final round of measurements. In both cloud environments, Google Analytics, Facebook and Twitter sharing widgets, and DoubleClick were the most widely used third-party trackers.

### Google Analytics Usage

Google Analytics is the most popular tracker used in both EC2-hosted and Azure-hosted websites. In EC2, an average of 55,000 clusters use this service. To use the service, users must apply for a Google Analytics ID and include it in their tracking code. We extracted a total of 71,363 unique IDs from 275,513 unique IPs in EC2, which belong to 106,871 top-level clusters and 111,696 webpage clusters. In Azure, we collected 6,254 IDs from 11,840 IPs, with 166 IDs appearing in both clouds. According to Google [43], a Google Analytics ID can be split into two parts: a user account and a profile identifier. For instance, in an ID like "UA-0000-*", "0000" is the user ID. Users might use "UA-0000-01", "UA-0000-02", etc., for different websites or applications. By analyzing these IDs, we can estimate the number of unique websites and the number of websites belonging to the same user. In EC2, the collected IDs belong to 64,716 user accounts, with 93.5% using only one profile, 4.8% using two profiles, 1.6% using 3-11 profiles, and the remaining 0.1% using 14-35 profiles. In Azure, the IDs belong to 5,794 user accounts, with 94.4% using one profile and 3.9% using two profiles. The maximum number of profiles associated with a single account in Azure is 13.

### Tracker Adoption

We observed that 77% of tracker-using webpages in EC2 use a single tracker, 16% use two trackers, and 6% use three trackers. In Azure, 81% of tracker-using webpages use a single tracker, 15% use two trackers, and 3.8% use three trackers.

### Conclusion

The increasing number of web services hosted on public IaaS clouds, such as EC2 and Azure, has led to a growing interest in understanding how different tenants utilize these platforms. These cloud providers offer features like elastic scalability and pay-as-you-go models, which can inform various aspects of workload modeling, data center provisioning, and security. However, there is limited knowledge about prevalent usage patterns and their evolution over time.

To address this, we designed a measurement platform called WhoWas, which uses carefully designed active probes to measure what web services are running on cloud-associated IP addresses. This data can be used for lookups on specific IP addresses or web services and to retrieve a history of their activities over the measurement period.

This paper presents the design of WhoWas and reports on its use to conduct the first-of-its-kind measurement studies of usage patterns over time in EC2 and Azure, the efficacy of blacklists for malicious activities in clouds, and the adoption of new web software by cloud customers.

### Future Work

Future work may include expanding WhoWas to analyze non-web services, evaluating improved clustering heuristics, providing more rigorous estimates of clustering error, performing deeper crawling of websites by following links in HTML, and correlating WhoWas data with other sources such as passive or active DNS interrogation. To facilitate this, we have made the software underlying WhoWas publicly available and open-source [3].

### Acknowledgements

We would like to thank the system administrators at the University of Wisconsin for their assistance in ensuring the experiments ran smoothly. This work was supported in part by the National Science Foundation under grants CNS-1253870 and CNS-1330308, and partially supported by the Spanish Government through Grant TIN2012-39391-C04-01 and a Juan de la Cierva Fellowship for Juan Caballero. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the sponsors.

### References

[1] Alexa. Alexa. http://alexa.com/, 2014.
[2] Keqiang He, Alexis Fisher, Liang Wang, Aaron Gember, Aditya Akella, and Thomas Ristenpart. Next stop, the cloud: understanding modern web service deployment in EC2 and Azure. In IMC 2013, pages 177–190. ACM, 2013.
[3] Whowas project. http://www.cloudwhowas.org/.
[4] Amazon. Amazon EC2 instance IP addressing. http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#MultipleIP, 2013.
[5] Farsight Security. Passive DNS data. https://www.dnsdb.info/, 2014.
[6] Wayback machine. http://archive.org/web/.
[7] Douglas E. Comer and John C. Lin. Probing TCP implementations. In USENIX Summer Technical Conference, Boston, MA, June 1994.
[8] Niels Provos and Peter Honeyman. Scanssh - scanning the internet for ssh servers. Technical Report CITI TR 01-13, University of Michigan, October 2001.
[9] Darcy Benoit and André Trudel. World’s first web census. International Journal of Web Information System, 3, 2007.
[10] David Dagon, Chris Lee, Wenke Lee, and Niels Provos. Corrupted DNS resolution paths: The rise of a malicious resolution authority. In Network and Distributed System Security Symposium, 2008.
[11] Nadia Heninger, Zagir Durumeric, Eric Wustrow, and J.Alex Halderman. Mining your ps and qs: Detection of widespread weak keys in network devices. In USENIX Security Symposium, 2012.
[12] Antonio Nappa, Zhaoyan Xu, M. Zubair Raﬁque, Juan Caballero, and Guofei Gu. Cyberprobe: Towards internet-scale active detection of malicious servers. In Network and Distributed System Security Symposium, 2014.
[13] Zhaoyan Xu, Antonio Nappa, Robert Baykov, Guangliang Yang, Juan Caballero, and Guofei Gu. AutoProbe: Towards Automatic Active Malicious Server Probing Using Dynamic Binary Analysis. In Proceedings of the 21st ACM Conference on Computer and Communication Security, Scottsdale, AZ, November 2014.
[14] Zhaoyan Xu, Lingfen Chen, Guofei Gu, and Christopher Kruegel. Peerpress: Utilizing enemies’ p2p strength against them. In ACM Conference on Computer and Communications Security, 2012.
[15] Stuart Staniford, Vern Paxson, and Nicholas Weaver. How to 0wn the internet in your spare time. In USENIX Security Symposium, San Francisco, CA, August 2002.
[16] Luigi Rizzo. Netmap: A novel framework for fast packet i/o. In usenixatc, 2012.
[17] Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. ZMap: Fast Internet-wide scanning and its security applications. In Proceedings of the 22nd USENIX Security Symposium, August 2013.
[18] D. Leonard and D. Loguinov. Demystifying service discovery: Implementing an internet-wide scanner. In Internet Measurement Conference. ACM, 2010.
[19] M. Allman, V. Paxson, and J. Terrell. A brief history of scanning. In Internet Measurement Conference. ACM, 2007.
[20] Marco Balduzzi, Jonas Zaddach, Davide Balzarotti, Engin Kirda, and Sergio Loureiro. A security analysis of amazon’s elastic compute cloud service. In Proceedings of the 27th Annual ACM Symposium on Applied Computing, pages 1427–1434. ACM, 2012.
[21] Davide Canali, Davide Balzarotti, and Aurelien Francillon. The Role of Web Hosting Providers in Detecting Compromised Websites. In Proceedings of the 22nd World Wide Web Conference, 2013.
[22] Antonio Nappa, M. Zubair Raﬁque, and Juan Caballero. Driving in the cloud: An analysis of drive-by download operations and abuse reporting. In SIG SIDAR Conference on Detection of Intrusions and Malware & Vulnerability Assessment, 2013.
[23] Amazon. Amazon EC2 public IP ranges. https://forums.aws.amazon.com/ann.jspa?annID=1701, 2013.
[24] Microsoft. Azure datacenter IP ranges. http://msdn.microsoft.com/en-us/library/azure/dn175718.aspx, 2013.
[25] Kenneth Reitz. Requests: Http for humans. http://docs.python-requests.org/en/latest/, 2014.
[26] Moses S Charikar. Similarity estimation techniques from rounding algorithms. In Proceedings of the thiry-fourth annual ACM symposium on Theory of computing, pages 380–388. ACM, 2002.
[27] Monika Henzinger. Finding near-duplicate web pages: a large-scale evaluation of algorithms. In Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval, pages 284–291. ACM, 2006.
[28] Mat Kelcey. The simhash algorithm. http://matpalm.com/resemblance/simhash/, 2013.
[29] Robert Tibshirani, Guenther Walther, and Trevor Hastie. Estimating the number of clusters in a data set via the gap statistic. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 63(2):411–423, 2001.
[30] Gurmeet Singh Manku, Arvind Jain, and Anish Das Sarma. Detecting near-duplicates for web crawling. In WWW 2007, pages 141–150. ACM, 2007.
[31] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. Hey, you, get off of my cloud: exploring information leakage in third-party compute clouds. In CCS 2009, pages 199–212. ACM, 2009.
[32] Amazon. Public IP addresses and external DNS hostnames. http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html, 2014.
[33] Huan Liu. Amazon data center size. http://huanliu.wordpress.com/2012/03/13/amazon-data-center-size/, 2012.
[34] Robot exclusion. http://www.robotstxt.org/faq/prevent.html.
[35] Anonymization tools taxonomy. http://www.caida.org/tools/taxonomy/anonymization.xml.
[36] Eamonn Keogh, Kaushik Chakrabarti, Michael Pazzani, and Sharad Mehrotra. Dimensionality reduction for fast similarity search in large time series databases. Knowledge and information Systems, 3(3):263–286, 2001.
[37] Zhou Li, Sumayah Alrwais, Yinglian Xie, Fang Yu, and XiaoFeng Wang. Finding the linchpins of the dark web: a study on topologically dedicated hosts on malicious web infrastructures. In S&P 2013, pages 112–126. IEEE, 2013.
[38] Fraser Howard. Blackhole exploit kit analysis. http://nakedsecurity.sophos.com/exploring-the-blackhole-exploit-kit/, 2012.
[39] tr.im. tr.im. http://tr.im, 2013.
[40] SERT. Sert quarterly threat intelligence report q4 2013. Technical report, Solutionary Security Engineering Research Team, 2013.
[41] CVE. Cve-2013-4338. http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4338, 2013.
[42] Jonathan R Mayer and John C Mitchell. Third-party web tracking: Policy and technology. In Security and Privacy (SP), 2012 IEEE Symposium on, pages 413–427. IEEE, 2012.
[43] Google. Accounts and views. https://developers.google.com/analytics/resources/concepts/gaConceptsAccounts, 2013.