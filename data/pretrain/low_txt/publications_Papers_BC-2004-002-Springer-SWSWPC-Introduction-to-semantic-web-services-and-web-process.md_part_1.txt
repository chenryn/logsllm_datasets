### Cardoso, J. and Amit P. Sheth, "Introduction to Semantic Web Services and Web Process Composition", Semantic Web Process: Powering the Next Generation of Processes with Semantics and Web Services, LNCS, Springer-Verlag Heidelberg, Vol. 3387, pp. 1-13, 2005. ISBN: 3-540-24328-3.

**Title: Introduction to Semantic Web Services and Web Process Composition**

**Authors:**
- Jorge Cardoso<sup>1</sup>
- Amit Sheth<sup>2</sup>

**Affiliations:**
1. Department of Mathematics and Engineering, University of Madeira, Funchal, Portugal
   - Email: [PI:EMAIL]
2. Large Scale Distributed Information Systems (LSDIS) Lab, Department of Computer Science, University of Georgia, GA, USA
   - Email: [PI:EMAIL]

**Abstract:**
Systems and infrastructures are currently being developed to support Web services. The primary goal is to encapsulate an organization’s functionality within a suitable interface and advertise it as Web services. While some Web services may be used in isolation, it is more common for them to be integrated into Web processes. There is a growing consensus that Web services alone will not suffice to develop valuable Web processes due to the heterogeneity, autonomy, and distribution of the Web. Researchers agree that Web services must be machine-understandable to support all phases of the Web process lifecycle. This paper explores two key areas of research and technology associated with the Web—Web services and the Semantic Web—and demonstrates how applying semantics to each step in the Semantic Web Process lifecycle can address critical issues in reuse, integration, and scalability.

**1. Introduction**
E-commerce and e-services have experienced rapid growth. The Web, combined with e-commerce and e-services, is enabling a new networked economy. The scope of activities covered by processes has expanded from intra-enterprise workflows and predefined inter-enterprise and business-to-business processes to dynamically defined Web processes among cooperating organizations. Electronic interactions can eliminate geographical barriers, bringing buyers and sellers together. As the Internet and e-commerce grow, there is a shift from traditional off-line distribution based on organizational catalogs to online services. This shift is driven by the promise of increased profit margins and reduced commission values. Consequently, organizations face the challenge of managing e-business systems, e-commerce applications, Web services, Web processes, and semantics. Web services promise universal interoperability and integration, but achieving this requires efficient discovery and composition of appropriate Web services to build complex processes. This section begins by explaining what semantics are and their role and relationship with ontologies, followed by an explanation of the purpose of each phase in the Web process lifecycle.

**2. Semantic Web Process Lifecycle**
Semantic Web services enable semi-automatic and automatic annotation, advertisement, discovery, selection, composition, and execution of inter-organization business logic, making the Internet a global platform for communication and value-added services. To fully leverage Web services, their functionalities must be combined to create Web processes, which represent complex interactions among organizations. Semantics play a crucial role in all stages of the Web process lifecycle, as illustrated in Figure 1.

**Fig. 1. Web process lifecycle and semantics.**

The lifecycle of semantic Web processes includes:
- Description/annotation
- Advertisement
- Discovery
- Selection
- Composition of Web services
- Execution of Web processes

All these stages are essential for the success of the Web process lifecycle.

**2.1 Semantics and Ontologies**
There is a growing consensus that Web services alone are insufficient for developing sophisticated Web processes due to the heterogeneity, autonomy, and distribution of the Web. Machine-understandable Web services are essential for supporting all phases of the Web process lifecycle. The vision of the “Semantic Web” has gained traction, and researchers and companies recognize its benefits. Ontologies are the building blocks of the Semantic Web, allowing machine-supported data interpretation and reducing human involvement in data and process integration.

An ontology is a formal, explicit specification of a shared conceptualization. It includes:
- **Conceptualization**: An abstract model of phenomena in the world.
- **Explicit**: Clearly defined types of concepts and constraints on their use.
- **Formal**: Machine-readable.
- **Shared**: Consensual knowledge accepted by communities.

When domain knowledge is represented in a declarative language, the set of objects that can be represented is called the universe of discourse. An ontology can be described by defining a set of representational terms, associating names with human-readable text and formal axioms.

Web services that share the same ontology can communicate about a domain of discourse. A Web service commits to an ontology if its observable actions are consistent with the definitions in the ontology.

**Example: Benefits of Ontologies for the Travel Industry**
The Web has transformed the creation of travel packages. Consumers can now acquire packages from various websites, including online agencies and airlines. Dynamic packaging is a new technology in the leisure travel industry, enhancing the online vacation planning experience. The travel industry is developing open specifications messages based on XML, such as the OpenTravel Alliance (OTA) schema, to ensure interoperability between industry segments. However, these XML-based specifications are not sufficiently expressive for automatic exchange and processing of information. Developing a suitable ontology for the tourism industry is indispensable, serving as a common language and promoting seamless information exchange across all travel industry segments.

Such an ontology can integrate autonomous and heterogeneous Web services, Web processes, applications, data, and components in distributed environments. Semantics allow rich descriptions of Web services and Web processes, enabling automatic processing in various tourism-related applications. The deployment of ontologies supports a well-defined set of common data elements or vocabulary, facilitating communication across multiple channels and meeting travel industry and customer needs.

For the travel industry, constructing an ontology involves retrieving rich semantic interrelationships from the data and terminology present in the XML-based OTA specifications. This process is illustrated in Figure 2.

**Fig. 2. Ontology for the travel industry.**

One possible language for constructing such an ontology is the Web Ontology Language (OWL), designed by the World Wide Web Consortium (W3C). OWL is intended for applications that need to process the content of information, providing additional vocabulary and formal semantics to enhance machine interpretability. OWL is suitable for developing an ontology for the travel industry, as it is designed for situations where the information used by Web services needs to be processed by applications.

Developing such an ontology can foster cross-industry consensus and establish widely used specifications for electronic business data exchange in the travel industry. This effort represents the potential of combining Web services and the Semantic Web, as recognized at the Thirteenth International World Wide Conference (2004) and in the industry press. The intelligent combination of Web services and the Semantic Web can drive a technological revolution, leading to a new generation of Web-based applications for the travel industry.

**2.2 Semantics for Web Services**
In the Web services domain, semantics can be classified into:
- **Functional Semantics**
- **Data Semantics**
- **QoS Semantics**
- **Execution Semantics**

These different types of semantics can represent the capabilities, requirements, effects, and execution of a Web service.

**Functional Semantics:** The power of Web services is realized when appropriate services are discovered based on functional requirements. Many semantic Web service discovery algorithms assume that the functionality of services is characterized by their inputs and outputs. However, matching only the inputs and outputs may not always retrieve the most relevant services. For example, two services with the same input/output signature can perform entirely different functions. To improve discovery and selection, Web services can be annotated with functional semantics using a Functional Ontology, where each concept/class represents a well-defined functionality.

**Data Semantics:** All Web services take a set of inputs and produce a set of outputs, represented in the operation signatures of a WSDL file. However, these signatures provide only syntactic and structural details. To effectively discover services, the semantics of the input/output data must be considered. Annotating the data involved in Web service operations using an ontology can enhance the matching of the semantics of the input/output data of the Web service with the semantics of the input/output data of the requirements.

**QoS Semantics:** After discovering Web services whose semantics match the requirements, the next step is to select the most suitable service. Each service can have different quality aspects, and service selection involves finding the service that best matches the quality criteria. Managing QoS metrics for Web services is crucial, as it allows organizations to design Web processes according to QoS metrics, select and execute Web processes based on QoS, monitor Web processes, and evaluate alternative strategies when adaptation is necessary.

**Execution Semantics:** Execution semantics encompass the message sequence, conversation pattern, flow of actions, preconditions, and effects of Web service invocation. These details may vary depending on the organization and the application. Before executing or invoking a service, the execution semantics or requirements should be verified. Issues and solutions related to execution semantics are inherited from traditional workflow technologies, but the globalization of Web services and processes introduces additional challenges. In e-commerce, execution semantics can help in dynamically finding partners that match both functional and operational requirements, such as long-running interactions and complex conversations.

**3. Phases of the Web Process Lifecycle**
As previously stated, the lifecycle of semantic Web processes includes:
- Description/annotation
- Advertisement
- Discovery
- Selection of Web services
- Composition of Web services
- Execution of Web processes

In this section, we discuss the characteristics of each of these stages.

**3.1 Semantic Web Service Annotation**
Today, Web service specifications are based on standards that define only syntactic characteristics, which is insufficient for achieving interoperability. One solution is to add meaning to methods and data, enabling applications to understand them. Tools are available to create Web services, primarily from programs written in Java or other object-oriented languages. During Web service development, it is essential to specify the data, functional, and QoS semantics of the service. The signature of an operation in a WSDL file provides only syntactic and structural details of the input/output data. To effectively perform operations like service discovery, the semantics of the input/output data must be considered. Annotating the data involved in Web service operations using an ontology can enhance the matching of the semantics of the input/output data of the Web service with the semantics of the input/output data of the requirements.