Certainly! Here is the optimized and refined version of your text:

---

**Acknowledgments:**
We would like to extend our gratitude to the anonymous reviewers for their valuable feedback during the writing of this paper.

**References:**

1. A Capability Based Client: The DarpaBrowser.  
   <http://www.combex.com/papers/darpa-report/html/>

2. O. Arden, M. D. George, J. Liu, K. Vikram, A. Askarov, and A. C. Myers. Sharing Mobile Code Securely with Information Flow Control. In *Proceedings of the IEEE Symposium on Security and Privacy*, 2012.

3. D. Barrera, H. G. Kayacik, P. C. van Oorshot, and A. Somayaji. A Methodology for Empirical Analysis of Permission-Based Security Models and its Application to Android. In *Proceedings of the ACM Conference on Computer and Communications Security*, October 2010.

4. D. E. Bell and L. J. LaPadula. Secure Computer Systems: Mathematical Foundations. Technical Report MTR-2547, Vol. 1, MITRE Corp., Bedford, MA, 1973.

5. K. J. Biba. Integrity Considerations for Secure Computer Systems. Technical Report MTR-3153, MITRE, April 1977.

6. S. Bugiel, L. Davi, A. Dmitrienko, T. Fischer, A.-R. Sadeghi, and B. Shastry. Toward Taming Privilege-Escalation Attacks on Android. In *Proceedings of the Network and Distributed System Security Symposium*, 2012.

7. M. Conti, V. T. N. Nguyen, and B. Crispo. CRePE: Context-Related Policy Enforcement for Android. In *Proceedings of the Information Security Conference*, 2010.

8. P. T. Cummings, D. A. Fullam, M. J. Goldstein, M. J. Gosselin, J. Picciotto, J. P. Woodward, and J. Wynn. Compartmented Mode Workstation: Results Through Prototyping. In *IEEE Symposium on Security and Privacy*. IEEE, 1987.

9. L. Davi, A. Dmitrienko, A.-R. Sadeghi, and M. Winandy. Privilege Escalation Attacks on Android. In *Proceedings of the 13th Information Security Conference (ISC)*, October 2010.

10. D. E. Denning. A Lattice Model of Secure Information Flow. *Communications of the ACM*, 19(5):236–243, May 1976.

11. M. Dietz, S. Shekhar, Y. Pisetsky, A. Shu, and D. S. Wallach. Quire: Lightweight Provenance for Smartphone Operating Systems. In *Proceedings of the 20th USENIX Security Symposium*, August 2011.

12. E and CapDesk. <http://www.combex.com/tech/edesk.html>

13. W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung, P. McDaniel, and A. N. Sheth. TaintDroid: An Information-Flow Tracking System for Real-Time Privacy Monitoring on Smartphones. In *Proceedings of the 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI)*, October 2010.

14. W. Enck, P. McDaniel, and T. Jaeger. PinUP: Pinning User Files to Known Applications. In *Proceedings of the Annual Computer Security Applications Conference*, 2008.

15. W. Enck, M. Ongtang, and P. McDaniel. On Lightweight Mobile Phone Application Certification. In *Proceedings of the 16th ACM Conference on Computer and Communications Security (CCS)*, November 2009.

16. A. P. Felt, K. Greenwood, and D. Wagner. The Effectiveness of Application Permissions. In *Proceedings of the USENIX Conference on Web Application Development (WebApps)*, 2011.

17. A. P. Felt, E. Ha, S. Egelman, A. Haney, E. Chin, and D. Wagner. Android Permissions: User Attention, Comprehension, and Behavior. In *Proceedings of the Symposium on Usable Privacy and Security*, 2012.

18. A. P. Felt, H. J. Wang, A. Moshchuk, S. Hanna, and E. Chin. Permission Re-Delegation: Attacks and Defenses. In *Proceedings of the USENIX Security Symposium*, 2011.

19. I. Goldberg, D. Wagner, R. Thomas, and E. Brewer. A Secure Environment for Untrusted Helper Applications: Confining the Wily Hacker. In *Proceedings of the USENIX Security Symposium*, 1996.

20. M. Grace, Y. Zhou, Z. Wang, and X. Jiang. Systematic Detection of Capability Leaks in Stock Android Smartphones. In *Proceedings of the Network and Distributed System Security Symposium*, February 2012.

21. P. Hornyack, S. Han, J. Jung, S. Schechter, and D. Wetherall. These Aren’t the Droids You’re Looking For: Retrofitting Android to Protect Data from Imperious Applications. In *Proceedings of the ACM Conference on Computer and Communications Security (CCS)*, 2011.

22. S. Ioannidis, S. Bellovin, and J. Smith. Sub-Operating Systems: A New Approach to Application Security. In *Proceedings of the ACM SIGOPS European Workshop*, 2002.

23. P. F. Klemperer, Y. Liang, M. L. Mazurek, M. Sleeper, B. Ur, L. Baur, L. F. Cranor, N. Gupta, and M. K. Reiter. Tag, You Can See It! Using Tags for Access Control in Photo Sharing. In *Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems (CHI)*, 2012.

24. M. Krohn and E. Tromer. Noninterference for a Practical DIFC-Based Operating System. In *Proceedings of the IEEE Symposium on Security and Privacy*, 2009.

25. M. Krohn, A. Yip, M. Brodsky, N. Cliffer, M. F. Kaashoek, E. Kohler, and R. Morris. Information Flow Control for Standard OS Abstractions. In *Proceedings of the ACM Symposium on Operating Systems Principles*, 2007.

26. J. Liu, M. D. George, K. Vikram, X. Qi, L. Waye, and A. C. Myers. Fabric: A Platform for Secure Distributed Computation and Storage. In *Proceedings of the ACM Symposium on Operating Systems Principles (SOSP)*, 2009.

27. A. C. Myers and B. Liskov. A Decentralized Model for Information Flow Control. In *Proceedings of the ACM Symposium on Operating Systems Principles*, 1997.

28. M. Nauman, S. Khan, and X. Zhang. Apex: Extending Android Permission Model and Enforcement with User-Defined Runtime Constraints. In *Proceedings of ASIACCS*, 2010.

29. M. Ongtang, S. McLaughlin, W. Enck, and P. McDaniel. Semantically Rich Application-Centric Security in Android. In *Proceedings of the 25th Annual Computer Security Applications Conference*, 2009.

30. Payment Card Industry (PCI). Data Security Standard: Requirements and Security Assessment Procedures, Version 2.0, October 2010. Available at <https://www.pcisecuritystandards.org/security_standards/documents.php>.

31. J. Picciotto. Towards Trusted Cut and Paste in the X Window System. In *Proceedings of the Seventh Annual Computer Security Applications Conference*. IEEE, 1991.

32. F. Roesner, T. Kohno, A. Moshchuk, B. Parno, H. J. Wang, and C. Cowan. User-Driven Access Control: Rethinking Permission Granting in Modern Operating Systems. In *Proceedings of the IEEE Symposium on Security and Privacy*, 2012.

33. I. Roy, D. E. Porter, M. D. Bond, K. S. McKinley, and E. Witchel. Laminar: Practical Fine-Grained Decentralized Information Flow Control. In *Proceedings of the Conference on Programming Language Design and Implementation*, 2009.

34. J. S. Shapiro, J. Vanderburgh, E. Northup, and D. Chizmadia. Design of the EROS Trusted Window System. In *Proceedings of the USENIX Security Symposium*, 2004.

35. P. Snowberger and D. Thain. Sub-Identities: Towards Operating System Support for Distributed System Security. Technical Report 2005-18, University of Notre Dame, Department of Computer Science and Engineering, 2005.

36. D. Stefan, A. Russo, D. Mazieres, and J. C. Mitchell. Disjunctive Category Labels. In *Proceedings of NordSec*, 2011.

37. Y. Tang, P. Ames, S. Bhamidipati, A. Bijlani, R. Geambasu, and N. Sarda. CleanOS: Limiting Mobile Data Exposure with Idle Eviction. In *Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI)*, 2012.

38. US Congress. Gramm-Leach-Bliley Act, Financial Privacy Rule. 15 USC §6801-§6809, November 1999. Available at <http://www.law.cornell.edu/uscode/usc_sup_01_15_10_94_20_I.html>.

39. US Congress. Health Insurance Portability and Accountability Act of 1996, Privacy Rule. 45 CFR 164, August 2002. Available at <http://www.access.gpo.gov/nara/cfr/waisidx_07/45cfr164_07.html>.

40. US Internal Revenue Service (IRS). Publication 1075: Safeguards for Protecting Federal Tax Returns and Return Information, 2010. Available at <http://www.irs.gov/pub/irs-pdf/p1075.pdf>.

41. S. Vandebogart, P. Efstathopoulos, E. Kohler, M. Krohn, C. Frey, D. Ziegler, F. Kaashoek, R. Morris, and D. Mazières. Labels and Event Processes in the Asbestos Operating System. *ACM Transactions on Computer Systems (TOCS)*, 25(4), December 2007.

42. H. J. Wang, X. Fan, J. Howell, and C. Jackson. Protection and Communication Abstractions for Web Browsers in MashupOS. In *Proceedings of the ACM Symposium on Operating Systems Principles (SOSP)*, 2007.

43. H. J. Wang, C. Grier, A. Moshchuk, S. T. King, P. Choudhury, and H. Venter. The Multi-Principle OS Construction of the Gazelle Web Browser. In *Proceedings of the USENIX Security Symposium*, 2009.

44. B. Week. Company Overview of Liquid Machines, Inc. <http://investing.businessweek.com/research/stocks/private/snapshot.asp?privcapId=3079632>.

45. D. Wichers, D. Cook, R. Olsson, J. Crossley, P. Kerchen, K. Levitt, and R. Lo. PACL’s: An Access Control List Approach to Anti-Viral Security. In *Proceedings of the 13th National Computer Security Conference*, 1990.

46. A. Yip, X. Wang, N. Zeldovich, and M. F. Kaashoek. Improving Application Security with Data Flow Assertions. In *Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles*, 2009.

47. N. Zeldovich, S. Boyd-Wickizer, E. Kohler, and D. Mazières. Making Information Flow Explicit in HiStar. In *Proceedings of the 7th Symposium on Operating Systems Design and Implementation (OSDI)*, pages 263–278, 2006.

48. N. Zeldovich, S. Boyd-Wickizer, and D. Mazières. Securing Distributed Systems with Information Flow Control. In *Proceedings of the USENIX Symposium on Networked Systems Design and Implementation*, 2008.

**Appendix: Aquifer Policy Safety Proof**

We now prove the safety of the join operation in the Aquifer policy logic. Before proving that the join operation ensures policy restriction, we must define a restriction relation. We do this in two parts. First, we define an effective restriction relation that ensures the evaluated policy is more restrictive. Then, we define an owner restriction relation that ensures all of an owner's restrictions are maintained. This is important because while \( L_2 \) may be effectively more restrictive than \( L_1 \), an individual owner's restrictions may change at a later time by another owner such that \( L_2 \) is no longer more restrictive than \( L_1 \). With these two definitions, we can define an overall restriction relation needed to prove the safety of Aquifer.

**Definition 9 (Effective Restriction Relation \( \mathrel{\vdash_e} \)):**
Let \( L_1 \) and \( L_2 \) be workflow labels with effective export lists, required lists, and workflow filters \( E_{1e}, E_{2e}, R_{1e}, R_{2e}, F_{1e}, \) and \( F_{2e} \), respectively. \( L_2 \) is effectively more restrictive than \( L_1 \), denoted \( L_1 \mathrel{\vdash_e} L_2 \), if and only if:
- \( E_{1e} \supseteq E_{2e} \)
- \( R_{1e} \subseteq R_{2e} \)
- \( \text{actions}(F_{1e}) \subseteq \text{actions}(F_{2e}) \)
- \( \forall s \in \text{actions}(F_{1e}), \text{targets}(F_{1e}, s) \supseteq \text{targets}(F_{2e}, s) \)

**Proof:**
We prove the safety of the Aquifer policy language by construction. Let \( L_1 \) and \( L_2 \) be workflow labels. Workflow policy propagation creates a new label \( L_1 \sqcup L_2 \). We must show that \( L_1 \vdash L_1 \sqcup L_2 \) and \( L_2 \vdash L_1 \sqcup L_2 \).

Based on Definition 11, \( L_1 \vdash L_1 \sqcup L_2 \) if and only if:
- (a) For all \( O \in \text{owners}(L_1) \), \( L_1 \vdash_O L_1 \sqcup L_2 \)
- (b) \( L_1 \mathrel{\vdash_e} L_1 \sqcup L_2 \)

Condition (a) satisfies Definition 10 by expanding \( L_1 \sqcup L_2 \) using Definition 8, as follows. For all owners \( O \in \text{owners}(L_1) \), let \( F_1 = \text{filters}(L_1, O) \) and \( F_2 = \text{filters}(L_2, O) \), then:
- \( \text{exports}(L_1, O) \supseteq \text{exports}(L_1, O) \cap \text{exports}(L_2, O) \)
- \( \text{requires}(L_1, O) \subseteq \text{requires}(L_1, O) \cup \text{requires}(L_2, O) \)
- \( \text{actions}(F_1) \subseteq \text{actions}(F_1) \cup \text{actions}(F_2) \)
- \( \forall s \in \text{actions}(F_1), \text{targets}(F_1, s) \supseteq \text{targets}(F_1, s) \cap \text{targets}(F_2, s) \)

Condition (b) satisfies Definition 9 by expanding \( L_1 \sqcup L_2 \) using Definition 8 and applying Definitions 5-6 to determine the effective policy.

- **Export List:** For \( L_1 \), \( E_{1e} = \bigcap \text{exports}(L_1, O) \) for all \( O \in \text{owners}(L_1) \). For \( L_1 \sqcup L_2 \), \( E_{12e} = \bigcap (\text{exports}(L_1, O) \cap \text{exports}(L_2, O)) \) for all \( O \in (\text{owners}(L_1) \cup \text{owners}(L_2)) \). To satisfy Definition 9, we must show \( E_{1e} \supseteq E_{12e} \). If an export list exists for an owner \( O_i \) in \( L_2 \) but not \( L_1 \), \( \text{exports}(L_1, O) \) will return the set of all applications (see Section 4) and the intermediate stage will be \( \text{exports}(L_2, O) \). However, if this contains an application that was not in \( E_{1e} \), it will be removed in the outer intersection. Therefore, \( E_{1e} \supseteq E_{12e} \).

- **Required List:** For \( L_1 \), \( R_{1e} = \bigcup \text{requires}(L_1, O) \) for all \( O \in \text{owners}(L_1) \). For \( L_1 \sqcup L_2 \), \( R_{12e} = \bigcup (\text{requires}(L_1, O) \cup \text{requires}(L_2, O)) \) for all \( O \in (\text{owners}(L_1) \cup \text{owners}(L_2)) \). Clearly, \( R_{1e} \subseteq R_{12e} \), which satisfies Definition 9.

- **Workflow Filters:** For \( L_1 \),
  \[
  F_{1e} = \{(s, T) \mid s \in \bigcup \text{actions}(F) \text{ and } T = \bigcap \text{targets}(F, s), \forall F \in \text{filters}(L_1, O), \forall O \in \text{owners}(L_1)\}
  \]
  For \( L_1 \sqcup L_2 \),
  \[
  F_{12e} = \{(s, T) \mid s \in \bigcup (\text{actions}(F_1) \cup \text{actions}(F_2)) \text{ and } T = \bigcap (\text{targets}(F_1, s) \cap \text{targets}(F_2, s)), \forall F_1 \in \text{filters}(L_1, O), \forall F_2 \in \text{filters}(L_2, O), \forall O \in (\text{owners}(L_1) \cup \text{owners}(L_2))\}
  \]

Conceptually, Definition 9 ensures that:
1. \( L_2 \) has fewer exporters than \( L_1 \).
2. \( L_2 \) has more required apps on the workflow than \( L_1 \).
3. Any workflow filters in \( L_1 \) are enforced by \( L_2 \) with targets that are more restrictive (less than) those in \( L_1 \).

**Definition 10 (Owner Restriction Relation \( \vdash_O \)):**
Let \( L_1 \) and \( L_2 \) be workflow labels, \( O \) be the owner for which the relation is evaluated, \( F_1 = \text{filters}(L_1, O) \), and \( F_2 = \text{filters}(L_2, O) \). \( L_2 \) is more restrictive than \( L_1 \) for owner \( O \), denoted \( L_1 \vdash_O L_2 \), if and only if:
- \( \text{exports}(L_1, O) \supseteq \text{exports}(L_2, O) \)
- \( \text{requires}(L_1, O) \subseteq \text{requires}(L_2, O) \)
- \( \text{actions}(F_1) \subseteq \text{actions}(F_2) \)
- \( \forall s \in \text{actions}(F_1), \text{targets}(F_1, s) \supseteq \text{targets}(F_2, s) \)

Conceptually, Definition 10 ensures the same properties as Definition 9, but with respect to owner \( O \).

**Definition 11 (Restriction Relation \( \vdash \)):**
Let \( L_1 \) and \( L_2 \) be workflow labels. \( L_2 \) is more restrictive than \( L_1 \), denoted \( L_1 \vdash L_2 \), if and only if \( L_1 \mathrel{\vdash_e} L_2 \) and \( \forall O \in \text{owners}(L_1), L_1 \vdash_O L_2 \).

**Theorem 1: The Aquifer Policy Language is Safe.**

---

This version should be clearer, more coherent, and professionally formatted.