### References

1. R. Nath and D. Tullsen, “The CRISP Performance Model for Dynamic Voltage and Frequency Scaling in a GPGPU,” in *Proceedings of the 48th International Symposium on Microarchitecture (MICRO)*, 2015, pp. 281–293.

2. A. Nazari, N. Sehatbakhsh, M. Alam, A. Zajic, and M. Prvulovic, “EDDIE: EM-Based Detection of Deviations in Program Execution,” in *Proceedings of the 44th Annual International Symposium on Computer Architecture (ISCA)*, 2017, pp. 333–346.

3. Newegg, “Best Selling Computer Cases,” https://www.newegg.com/d/Best-Sellers/Computer-Cases/s/ID-7.

4. Y. Oren, V. P. Kemerlis, S. Sethumadhavan, and A. D. Keromytis, “The Spy in the Sandbox: Practical Cache Attacks in JavaScript and Their Implications,” in *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS)*, 2015, pp. 1406–1418.

5. P. Perera and V. M. Patel, “Deep Transfer Learning for Multiple Class Novelty Detection,” in *Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)*, June 2019.

6. R. D. Pietro, F. Lombardi, and A. Villani, “CUDA Leaks: A Detailed Hack for CUDA and a (Partial) Fix,” *ACM Transactions on Embedded Computing Systems*, vol. 15, no. 1, Jan. 2016.

7. M. Prvulovic, A. Zajić, R. L. Callan, and C. J. Wang, “A Method for Finding Frequency-Modulated and Amplitude-Modulated Electromagnetic Emanations in Computer Systems,” *IEEE Transactions on Electromagnetic Compatibility*, vol. 59, no. 1, pp. 34–42, 2017.

8. L. Ruff, R. A. Vandermeulen, N. Görnitz, L. Deecke, S. A. Siddiqui, A. Binder, E. Müller, and M. Kloft, “Deep One-Class Classification,” in *Proceedings of the 35th International Conference on Machine Learning (ICML)*, vol. 80, 2018, pp. 4393–4402.

9. N. Sehatbakhsh, M. Alam, A. Nazari, A. Zajic, and M. Prvulovic, “Syndrome: Spectral Analysis for Anomaly Detection on Medical IoT and Embedded Devices,” in *2018 IEEE International Symposium on Hardware Oriented Security and Trust (HOST)*, 2018, pp. 1–8.

10. N. Sehatbakhsh, B. B. Yilmaz, A. Zajic, and M. Prvulovic, “A New Side-Channel Vulnerability on Modern Computers by Exploiting Electromagnetic Emanations from the Power Management Unit,” in *2020 IEEE International Symposium on High Performance Computer Architecture (HPCA)*, 2020, pp. 123–138.

11. C. Shen, T. Liu, J. Huang, and R. Tan, “When LoRa Meets EMR: Electromagnetic Covert Channels Can Be Super Resilient,” in *Proceedings of the 2021 IEEE Symposium on Security and Privacy (S&P)*, 2021.

12. A. Shusterman, L. Kang, Y. Haskal, Y. Meltser, P. Mittal, Y. Oren, and Y. Yarom, “Robust Website Fingerprinting Through the Cache Occupancy Channel,” in *28th USENIX Security Symposium (USENIX Security 19)*, Aug. 2019, pp. 639–656.

13. D. X. Song, D. Wagner, and X. Tian, “Timing Analysis of Keystrokes and Timing Attacks on SSH,” in *USENIX Security Symposium (USENIX Security 01)*, 2001.

14. O. Starov and N. Nikiforakis, “Xhound: Quantifying the Fingerprintability of Browser Extensions,” in *Proceedings of the 2017 IEEE Symposium on Security and Privacy (S&P)*, 2017, pp. 941–956.

15. G. Vasiliadis, M. Polychronakis, and S. Ioannidis, “GPU-Assisted Malware,” *International Journal of Information Security*, vol. 14, no. 3, pp. 289–297, Jun. 2015.

16. P. Vila and B. Kopf, “Loophole: Timing Attacks on Shared Event Loops in Chrome,” in *26th USENIX Security Symposium (USENIX Security 17)*, Aug. 2017, pp. 849–864.

17. R. Wang, H. Wang, and E. Dubrova, “Far Field EM Side-Channel Attack on AES Using Deep Learning,” in *Proceedings of the 4th ACM Workshop on Attacks and Solutions in Hardware Security (ASHES)*, 2020, pp. 35–44.

18. Z. Wang, W. Yan, and T. Oates, “Time Series Classification from Scratch with Deep Neural Networks: A Strong Baseline,” in *2017 International Joint Conference on Neural Networks (IJCNN)*, 2017, pp. 1578–1585.

19. M. Weiser, B. Welch, A. Demers, and S. Shenker, “Scheduling for Reduced CPU Energy,” in *USENIX Symposium on Operating Systems Design and Implementation (OSDI)*, 1994.

20. Z. Zhan, Z. Zhang, and X. Koutsoukos, “BitJabber: The World’s Fastest Electromagnetic Covert Channel,” in *2020 IEEE International Symposium on Hardware Oriented Security and Trust (HOST)*, 2020.

21. K. Zhang and X. Wang, “Peeping Tom in the Neighborhood: Keystroke Eavesdropping on Multi-User Systems,” in *USENIX Security Symposium (USENIX Security 09)*, 2009, pp. 17–32.

22. Z. Zhang, S. Liang, F. Yao, and X. Gao, “Red Alert for Power Leakage: Exploiting Intel RAPL-Induced Side Channels,” in *Proceedings of the 2021 ACM Asia Conference on Computer and Communications Security (ASIA CCS)*, 2021, pp. 162–175.

23. Z. Zhang, Z. Zhan, D. Balasubramanian, B. Li, P. Volgyesi, and X. Kousoukos, “Leveraging EM Side-Channel Information to Detect Rowhammer Attacks,” in *Proceedings of the 2020 IEEE Symposium on Security and Privacy (S&P)*, May 2020.

24. Z. Zhou, W. Diao, X. Liu, Z. Li, K. Zhang, and R. Liu, “Vulnerable GPU Memory Management: Towards Recovering Raw Data from GPU,” *Proceedings on Privacy Enhancing Technologies (PETS)*, vol. 2017, no. 2, pp. 57–73, 2017.

25. Z. Zhu, S. Kim, Y. Rozhanski, Y. Hu, E. Witchel, and M. Silberstein, “Understanding the Security of Discrete GPUs,” in *Proceedings of the General Purpose GPUs (GPGPU)*, 2017, pp. 1–11.

### Appendix A: Experimental Setup

In this paper, all experiments were conducted using a Software-Defined Radio (SDR) device, USRP B210, and an ultra-wideband directional antenna, RFSPACE UWB-3. As shown in Figure 15, the antenna is directly connected to the SDR device via a coaxial cable without any additional amplifiers or filters. The required bandwidth is 25 MHz, and the USRP B210 provides 56 MHz of instantaneous bandwidth in the frequency range of 70 MHz to 6 GHz, which is more than sufficient for our needs. The GNU Radio framework was used to capture and process the signals of interest.

**Modern-Looking Computer Case:**
- **Case:** AeroCool Cylon RGB Mid Tower
- **Monitor:** HP VH240A
- **Motherboard:** ASUS PRIME Z270-P
- **CPU:** Intel i5-6500T
- **Power Supply Unit (PSU):** Apevia ATX-JP1000 Jupiter 1000W

**All-Metal Computer Case:**
- **Case:** Thermaltake Versa H22 Mid Tower
- **Monitor:** HP VH240A
- **Motherboard:** ASRock Z270 Killer SLI
- **CPU:** Intel i3-6100
- **PSU:** Thermaltake Smart 700W

For the experiments reported in Section IV-C, we used the AMD GPU driver for Linux (AMDGPU 20.20) to set the performance level to the second lowest. However, the NVIDIA GPU driver does not allow fixing the GPU to a specific performance level except for the highest one. To ensure the appearance of the signals of interest, we played YouTube videos to frequently bump the performance level to the second lowest.

### Appendix B: Overcoming Low SNR

To demonstrate the effectiveness of the techniques described in Section V in overcoming the relatively low Signal-to-Noise Ratio (SNR) issue, we use an example with an AMD RX 5700 and Linux OS.

**Setup:**
- **GPU:** AMD RX 5700
- **Case:** All-metal computer case
- **Antenna Distance:** Approximately 6 meters

We created a script that uses the AMD GPU driver to periodically switch the performance level between the lowest and the second lowest. Figure 16 shows the corresponding spectrogram, where no visible patterns of stripe appearance can be observed. If such spectrograms were used for attacks like website fingerprinting, the likelihood of success would be very low.

By contrast, Figure 17 shows the time series derived using the techniques described in Section V. The periodic peak appearance pattern is clearly visible, demonstrating the effectiveness of the method.

### Appendix C: Handling Disturbing Signals

Given a target GPU, there may be other nearby GPUs with the same second lowest WCK frequency. In such scenarios, an attacker can avoid picking up disturbing signals by appropriately positioning the directional antenna. We experimentally verified this setup:

- **Target Setup:**
  - Two RX 580 machines placed less than 1 meter apart
  - One machine has a cursor blinking in the Google search box
  - The other machine plays a YouTube video
  - Directional antenna placed 3 meters away from both machines

We confirmed that several appropriate placements could pick up only the signals of interest from the target, as shown in Figure 18 (A).

However, if the attacker cannot arbitrarily position the antenna, the signals from nearby GPUs may contaminate the spectrum. Figure 18 (B) shows the spectrogram where signals from both RX 580 GPUs are picked up, making the desired pattern hard to recognize.

Interestingly, the time series derivation technique described in Section V-A can help separate signals generated by multiple identical or similar GPUs. Due to oscillator imperfections, the fc of a GPU is nearly unique and often differs from another by several kHz. In our example, the two fc's are separated by 12.6 kHz (126 bins given 100 Hz resolution), and the signals can be fully separated, as shown in the bottom part of Figure 18 (B).

### Appendix D: Time Series Classification

For classifying time series data in our website fingerprinting attack, we used the residual network (ResNet) model proposed in [59]. The architecture of the ResNet model is shown in Figure 19. For more details about the model, refer to [59] and its code repository (https://github.com/cauchyturing/UCR-Time-Series-Classification-Deep-Learning-Baseline).

![ResNet Architecture](path_to_figure_19)

---

This revised version ensures that the text is clear, coherent, and professionally formatted.