### 8.3 Evading Fraud Detection

Recent research in adversarial machine learning [25, 40] has demonstrated that machine learning-based systems can be evaded by manipulating their inputs [18]. In the context of our fraud detection approach, fraudsters can evade detection by making their orders less similar to one another. This would prevent RecAgglo from grouping together fraudulent orders from the same campaign. RecAgglo quantifies the similarity between orders by computing the Hamming distance. If two attributes have different values, the distance between the orders increases, and their similarity decreases. Since our attributes are represented as strings, a single character modification in one attribute (e.g., a typo in a street address) can reduce the similarity between orders without affecting the success of the fraudulent activity. An adversary can modify order attributes input to RecAgglo to evade fraud detection.

To address this limitation, we can use only attributes that are resilient to adversarial manipulations in RecAgglo [32]. Resilient attributes are those for which any manipulation inherently defeats the fraudulent purpose. For example, a small change in a credit card number will make the payment information inconsistent, leading to the rejection of the payment and the order. The credit card number is an attribute resilient to adversarial manipulations. Alternatively, we can use a more fine-grained metric than binary equality for string comparison, such as the edit distance. The edit distance accurately quantifies the similarity between two strings and can accommodate small adversarial modifications. An adversary would need to make significant changes to reduce the similarity between two orders, making evasion more difficult. However, the edit distance is computationally expensive and would increase the running time of RecAgglo clustering.

### 9. Related Work

#### 9.1 Categorical Clustering

Categorical clustering faces two main challenges: scalability and guarantee of convergence. Generic algorithms such as K-modes [22], ROCK [20], CACTUS [15] (greedy hierarchical grouping of tuples), and CLICKS [50] (representing the dataset as a graph and finding disjoint vertices) provide good guarantees of convergence. Many recent clustering algorithms [6, 16] are built upon these techniques.

Alternative approaches use information-theoretic criteria to assess the quality of the clustering. For instance, COOLCAT [5] searches locally to find clusters with the lowest entropy, while LIMBO [4] produces a hierarchical summary of the data that preserves as much information as possible. Although these algorithms are generalizable to any kind of categorical data, they have high computational complexity and do not scale well to large datasets.

To improve scalability, the data can be partitioned into chunks that are clustered individually and then combined into global clusters [6], or it can be transformed into representations that make processing faster, such as Merkle trees [28]. These approaches are typically problem-specific (e.g., images [28], streamed data [19]) and are not applicable to categorical data. A more generic solution involves producing several clusterings using subsets of features and aggregating the results to obtain global clusters [16]. Similarly, low-dimensional clusters can be generated using dissimilarity matrices and then combined using an ensemble method to get the final clustering [3]. These methods use sampling, as we do, but they take a local approach, trying to reduce the dimension of the input space to improve scalability.

#### 9.2 Fraud Detection

Fraud detection is a broad subject relevant to many domains, including credit card fraud [10, 17], tax evasion [7], online dating [46], erotic content [23], and advertising [36]. Despite efforts to systematize it [8, 37, 43], there is no commonly accepted means of comparing different detection techniques or application scenarios.

Many solutions attempt to detect frauds in isolation using supervised classifiers such as neural networks [2, 9, 17, 29] and ensembles of decision trees [10]. Improvements have been proposed to incorporate the time component in the process of eCommerce fraud detection by identifying changes in the underlying distribution of orders (also known as concept drift) [31]. Additionally, one can analyze the temporal activity of users from a small set of features to predict possible account take-overs [21]. These solutions analyze orders in isolation or in a group related to a specific user and are not suitable for identifying organized fraud involving many users. They also require labeled data, which is often unavailable for fraud campaigns.

Graph-based methods can be used to take a global view of the fraud detection problem [1, 34, 44, 47]. Social network analysis methods [1, 47], the PageRank algorithm [44], and sets of graph-derived features [34] have been used to spot frauds in the payment network and identify key links between frauds. However, these methods require access to (or constructing) a graph with a well-defined notion of vertices and edges (e.g., credit card and merchant vertices and interactions as edges). In our case, we do not have a proper link between orders to build a graph. Instead, we try to identify similarities through clustering. Moreover, building a graph with static assumptions could hinder the performance of the graph analysis method if the nature of fraud changes over time.

A few works have also proposed using clustering to identify fraudulent activity, as we do. However, these methods either use only numerical features as input [48] or do not scale to data of our size (100,000s samples) [26].

### 10. Conclusion

We introduced a novel clustering solution, RecAgglo, to detect organized fraud and evaluated it on 6 million real-world orders placed on the Zalando website. We showed that RecAgglo can process 100,000s of orders in a few hours and groups over 40% of fraudulent orders together. The algorithm can be deployed and used to efficiently prioritize screening (A1). We further proposed a simple technique called label propagation, which uses our generated clusters to automatically detect 26.2% of fraud while raising false alarms for only 0.1% of legitimate orders. Despite its high accuracy, label propagation incorrectly identifies many legitimate orders as fraud (35% precision). According to our definition of "fraud," label propagation cannot be used for automated fraud cancellation (A2). Nevertheless, we observed that 95% of the legitimate orders incorrectly identified as fraud by label propagation are either returned, partly unpaid, or canceled orders.

Canceling legitimate orders from good customers can cause significant harm to a business [12]. It generates a bad customer experience, negatively impacting customer satisfaction and customer lifetime value, which may ultimately decrease the profitability of an online retail service. The definition of "fraud" is subjective and varies among different online retailers. The effectiveness and deployability of a fraud detection system are evaluated according to this definition. Therefore, the suitability of our solution to prioritize screening (A1) and automatically cancel fraud (A2) depends on the categorization of returned (fully/partly), unpaid (fully/partly), and canceled orders for a given online retailer.

### Acknowledgments

This research was funded by a research donation from Zalando Payments GmbH and supported by the Academy of Finland through the SELIoT Project (Grant 309994). We thank Zalando employees and N. Asokan for interesting discussions and valuable feedback.

### References

[1] Leman Akoglu, Mary McGlohon, and Christos Faloutsos. 2009. Anomaly detection in large graphs (CMU-CS-09-173). Technical Report.

[2] E. Aleskerov, B. Freisleben, and B. Rao. 1997. CARDWATCH: a neural network-based database mining system for credit card fraud detection. In Proceedings of the IEEE/IAFE Computational Intelligence for Financial Engineering (CIFEr). 220–226.

[3] Saeid Amiri, Bertrand S. Clarke, and Jennifer L. Clarke. 2018. Clustering Categorical Data via Ensembling Dissimilarity Matrices. Journal of Computational and Graphical Statistics 27, 1 (2018), 195–208.

[4] Periklis Andritsos, Panayiotis Tsaparas, Renee J. Miller, and Kenneth C. Sevcik. 2004. LIMBO: Scalable clustering of categorical data. In 9th International Conference on Extending Database Technology. 123–146.

[5] Daniel Barbará, Yi Li, and Julia Couto. 2002. COOLCAT: An Entropy-based Algorithm for Categorical Clustering. In Proceedings of the Eleventh International Conference on Information and Knowledge Management. 582–589.

[6] Malika Bendechache, Nhien-An Le-Khac, and M. Tahar Kechadi. 2016. Efficient Large Scale Clustering Based on Data Partitioning. 2016 IEEE International Conference on Data Science and Advanced Analytics (DSAA) (2016), 612–621.

[7] Dan Bogdanov, Marko Jõemets, Sander Siim, and Meril Vaht. 2015. How the Estonian Tax and Customs Board evaluated a tax fraud detection system based on secure multi-party computation. In International Conference on Financial Cryptography and Data Security. Springer, 227–234.

[8] Richard J. Bolton and David J. Hand. 2002. Statistical Fraud Detection: A Review. Statist. Sci. 17, 3 (08 2002), 235–255.

[9] R. Brause, T. Langsdorf, and M. Hepp. 1999. Neural Data Mining for Credit Card Fraud Detection. In Proceedings of the 11th IEEE International Conference on Tools with Artificial Intelligence. IEEE Computer Society, 103–106.

[10] Fabrizio Carcillo, Andrea Dal Pozzolo, Yann-Aël Le Borgne, Olivier Caelen, Yannis Mazzer, and Gianluca Bontempi. 2018. SCARFF: a scalable framework for streaming credit card fraud detection with Spark. Information Fusion 41 (2018), 182–194.

[11] Thomas Chmielewski and Denise James. 2009. Mortgage fraud detection systems and methods. US Patent 7,546,271.

[12] Clearsale. 2017. Are False Declines Hurting Your Online Reputation? Last accessed June 3, 2019. https://blog.clear.sale/false-declines-hurting-your-online-reputation

[13] A. Dal Pozzolo, G. Boracchi, O. Caelen, C. Alippi, and G. Bontempi. 2018. Credit Card Fraud Detection: A Realistic Modeling and a Novel Learning Strategy. IEEE Transactions on Neural Networks and Learning Systems 29, 8 (2018), 3784–3797.

[14] Europol. 2018. 95 e-commerce fraudsters arrested in international operation. Last accessed June 3, 2019. https://www.europol.europa.eu/newsroom/news/95-e-commerce-fraudsters-arrested-in-international-operation

[15] Venkatesh Ganti, Johannes Gehrke, and Raghu Ramakrishnan. 1999. CACTUS—Clustering Categorical Data Using Summaries. In Proceedings of the Fifth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD '99). 73–83.

[16] Aristides Gionis, Heikki Mannila, and Panayiotis Tsaparas. 2007. Clustering Aggregation. ACM Trans. Knowl. Discov. Data 1, 1, Article 4 (March 2007).

[17] Jon Ander Gomez, Juan Arvalo, Roberto Paredes, and Jordi Nin. 2018. End-to-end Neural Network Architecture for Fraud Scoring in Card Payments. Pattern Recogn. Lett. 105, C (April 2018), 175–181.

[18] Ian J. Goodfellow, Jonathon Shlens, and Christian Szegedy. 2014. Explaining and harnessing adversarial examples. arXiv preprint arXiv:1412.6572 (2014).

[19] Sudipto Guha, Adam Meyerson, Nina Mishra, Rajeev Motwani, and Liadan O'Callaghan. 2003. Clustering Data Streams: Theory and Practice. IEEE Trans. on Knowl. and Data Eng. 15, 3 (2003), 515–528.

[20] Sudipto Guha, Rajeev Rastogi, and Kyuseok Shim. 2000. ROCK: A robust clustering algorithm for categorical attributes. Information Systems 25, 5 (2000), 345–366.

[21] Hassan Halawa, Matei Ripeanu, Konstantin Beznosov, Baris Coskun, and Meizhu Liu. 2018. Forecasting Suspicious Account Activity at Large-Scale Online Service Providers. CoRR abs/1801.08629 (2018). arXiv:1801.08629

[22] Zhexue Huang. 1998. Extensions to the k-means algorithm for clustering large data sets with categorical values. Data Mining and Knowledge Discovery 2, 3 (1998), 283–304.

[23] Alice Hutchings and Sergio Pastrana. 2019. Understanding eWhoring. arXiv (2019). arXiv:cs.CR/1905.04576

[24] Lou Jost. 2006. Entropy and diversity. Oikos 113, 2 (2006), 363–375.

[25] Mika Juuti, Sebastian Szyller, Samuel Marchal, and N. Asokan. 2019. PRADA: protecting against DNN model stealing attacks. In 2019 IEEE European Symposium on Security and Privacy (EuroS&P). IEEE, 512–527.

[26] Marie-Jeanne Lesot and Adrien Revault d’Allonnes. 2012. Credit-Card Fraud Profiling Using a Hybrid Incremental Clustering Methodology. In Scalable Uncertainty Management, Eyke Hüllermeier, Sebastian Link, Thomas Fober, and Bernhard Seeger (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 325–336.

[27] Michael Levi. 2008. Organized fraud and organizing frauds: Unpacking research on networks and organization. Criminology & Criminal Justice 8, 4 (2008), 389–419.

[28] Ting Liu, Charles Rosenberg, and Henry A. Rowley. 2007. Clustering billions of images with large-scale nearest neighbor search. In 2007 IEEE Workshop on Applications of Computer Vision. 28–28.

[29] Sam Maes, Karl Tuyls, Bram Vanschoenwinkel, and Bernard Manderick. 2002. Credit Card Fraud Detection Using Bayesian and Neural Networks. (08 2002), 261–270.

[30] Oded Maimon and Lior Rokach. 2005. Data Mining and Knowledge Discovery Handbook. Springer.

[31] Huiying Mao, Yung-wen Liu, Yuting Jia, and Jay Nanduri. 2018. Adaptive Fraud Detection System Using Dynamic Risk Features. arXiv preprint arXiv:1810.04654 (2018).

[32] Samuel Marchal, Giovanni Armano, Tommi Gröndahl, Kalle Saari, Nidhi Singh, and N. Asokan. 2017. Off-the-hook: An efficient and usable client-side phishing prevention application. IEEE Trans. Comput. 66, 10 (2017), 1717–1733.

[33] Samuel Marchal and Sebastian Szyller. 2019. Recursive Agglomerative Clustering (RecAgglo) for categorical data. Last accessed August 30, 2019. https://github.com/SSGAalto/recagglo

[34] Ian Molloy, Suresh Chari, Ulrich Finkler, Mark Wiggerman, Coen Jonker, Ted Habeck, Youngja Park, Frank Jordens, and Ron van Schaik. 2017. Graph Analytics for Real-Time Scoring of Cross-Channel Transactional Fraud. In Financial Cryptography and Data Security. 22–40.

[35] David Montague. 2014. The Fraud Practice. Last accessed June 3, 2019. http://fraudpractice.com/gl-manual.html

[36] Shishir Nagaraja and Ryan Shah. 2019. Clicktok: Click Fraud Detection Using Traffic Analysis. In Proceedings of the 12th Conference on Security and Privacy in Wireless and Mobile Networks (WiSec '19). 105–116.

[37] Xuetong Niu, Li Wang, and Xulei Yang. 2019. A Comparison Study of Credit Card Fraud Detection: Supervised versus Unsupervised. arXiv (2019). arXiv:cs.LG/1904.10604

[38] Andrei Novikov. 2019. PyClustering: Data Mining Library. Journal of Open Source Software 4, 36 (apr 2019), 1230–1230. https://doi.org/10.21105/joss.01230

[39] Aaron Orendorf. 2019. What Is the Future of eCommerce? 10 Insights on the Evolution of an Industry. Last accessed May 25, 2019. https://www.shopify.com/enterprise/the-future-of-ecommerce

[40] Nicolas Papernot, Patrick McDaniel, Arunesh Sinha, and Michael P. Wellman. 2018. SoK: Security and privacy in machine learning. In 2018 IEEE European Symposium on Security and Privacy (EuroS&P). IEEE, 399–414.

[41] Signifyd & PYMNTS.com. 2017. Global Fraud Index. Technical Report. PYMNTS.com.

[42] PyPi. 2019. Kmodes clustering. https://pypi.org/project/kmodes/

[43] Andrei Sorin Sabau. 2012. Survey of Clustering based Financial Fraud Detection Research. Informatica Economica 16, 1 (2012), 110–122.

[44] Alex Sangers, Maran van Heesch, Thomas Attema, Thijs Veugen, Mark Wiggerman, Jan Veldsink, Oscar Bloemen, and Daniël Worm. 2018. Secure multiparty PageRank algorithm for collaborative fraud detection. IACR Cryptology ePrint Archive 2018 (2018), 917.

[45] Edward H. Simpson. 1949. Measurement of diversity. Nature 163, 4148 (1949), 688.

[46] Guillermo Suarez-Tangil, Matthew Edwards, Claudia Peersman, Gianluca Stringhini, Awais Rashid, and Monica Whitty. 2019. Automatically Dismantling Online Dating Fraud. (05 2019).

[47] Lei Tang, Geoffrey Barbier, Huan Liu, and Jianping Zhang. 2010. A social network analysis approach to detecting suspicious online financial activities. In International Conference on Social Computing, Behavioral Modeling, and Prediction. Springer, 390–397.

[48] Sutapat Thiprungsri and Miklos A. Vasarhelyi. 2011. Cluster Analysis for Anomaly Detection in Accounting Data: An Audit Approach. International Journal of Digital Accounting Research 11 (2011), 69–84.

[49] Zalando website. 2019. Last accessed June 3, 2019. https://www.zalando.com

[50] Mohammed J. Zaki, Markus Peters, Ira Assent, and Thomas Seidl. 2005. CLICKS: An Effective Algorithm for Mining Subspace Clusters in Categorical Datasets. In Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge Discovery in Data Mining. ACM, 736–742.

[51] Zalando. 2015. Half-year report January–June 2015. Last accessed August 16, 2019. https://corporate.zalando.com/sites/default/files/media-download/zalando_se_half-year_report_2015_e_s.pdf

[52] Zalando. 2019. Annual Report 2018 - Key figures. Technical Report. Zalando. https://corporate.zalando.com/en/investor-relations/key-figures-2018

### A. Clustering Algorithm Details

#### A.1 Agglomerative Clustering

The agglomerative clustering algorithm is detailed in Algorithm 2. The `DistanceMatrix` function computes a |ci| × |cj| matrix of the distances between elements of ci and cj. Commonly used methods for measuring the distance of categorical data include the Hamming distance and the Jaccard Index [30]. We select the Hamming distance because it is fast to compute. It counts the number of different attribute values between two elements u and v (cf. Eq. 1).

The linkage matrix computed using `LinkageMatrix` describes the successive cluster fusions to go from singletons to a single cluster (dendrogram). Cluster fusion is done according to the distance between two clusters, which is defined by a linkage method. Single linkage uses the minimum distance between any two points in each cluster. Complete linkage takes the maximum distance between any two points from each cluster. Ward linkage [30] takes the increase in the sum of squares obtained by merging two clusters rather than keeping them separate. We use the single linkage method here. We compute the final clustering using `Cluster` based on the linkage matrix and the 'distance' criterion parameterized by dmax.

#### A.2 Agglomerative Clustering with Sampling

The algorithm for agglomerative clustering with sampling is presented in Algorithm 3. We modify the basic sampling algorithm to create a maximum number of clusters. Rather than initially clustering sampled elements, we use each of them as the basis for a new cluster (no initial clustering). Our sampling algorithm randomly selects elements to form the initial clusters.