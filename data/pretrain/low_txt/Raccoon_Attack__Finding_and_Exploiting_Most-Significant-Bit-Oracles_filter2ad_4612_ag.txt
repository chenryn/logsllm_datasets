### References

1. **USENIX Association.**
   - Baltimore, MD, 2018.

2. **Boneh, D., & Venkatesan, R.**
   - "Hardness of computing the most significant bits of secret keys in Diffie-Hellman and related schemes."
   - In *Advances in Cryptology — CRYPTO '96*, pages 129–142. Springer Berlin Heidelberg, 1996.

3. **Breitner, J., & Heninger, N.**
   - "Biased nonce sense: Lattice attacks against weak ECDSA signatures in cryptocurrencies."
   - In *Financial Cryptography and Data Security*, pages 3–20. Springer International Publishing, 2019.

4. **Brumley, B. B., & Tuveri, N.**
   - "Remote timing attacks are still practical."
   - In *Computer Security - ESORICS 2011 - 16th European Symposium on Research in Computer Security*, Leuven, Belgium, September 12-14, 2011. Proceedings, volume 6879 of *Lecture Notes in Computer Science*, pages 355–371. Springer, 2011.

5. **Brumley, D., & Boneh, D.**
   - "Remote timing attacks are practical."
   - In *USENIX Security 2003: 12th USENIX Security Symposium*, Washington, DC, USA, August 4–8, 2003. USENIX Association.

6. **Chen, Y., & Nguyen, P. Q.**
   - "BKZ 2.0: Better lattice security estimates."
   - In *Advances in Cryptology - ASIACRYPT 2011 - 17th International Conference on the Theory and Application of Cryptology and Information Security*, Seoul, South Korea, December 4-8, 2011. Proceedings, volume 7073 of *Lecture Notes in Computer Science*, pages 1–20. Springer, 2011.

7. **Crosby, S. A., Wallach, D. S., & Riedi, R. H.**
   - "Opportunities and limits of remote timing attacks."
   - *ACM Trans. Inf. Syst. Secur.*, 12(3):17:1–17:29, January 2009.

8. **Dall, F., De Micheli, G., Eisenbarth, T., Genkin, D., Heninger, N., Moghimi, A., & Yarom, Y.**
   - "CacheQuote: Efficiently recovering long-term secrets of SGX EPID via cache attacks."
   - *IACR Transactions on Cryptographic Hardware and Embedded Systems*, Volume 2018:Issue 2–, 2018.

9. **Damgård, I.**
   - "A design principle for hash functions."
   - In *Advances in Cryptology – CRYPTO’89*, volume 435 of *Lecture Notes in Computer Science*, pages 416–427, Santa Barbara, CA, USA, August 20–24, 1990. Springer, Heidelberg, Germany.

10. **The FPLLL development team.**
    - "fplll, a lattice reduction library."
    - Available at https://github.com/fplll/fplll, 2016.

11. **Dierks, T., & Allen, C.**
    - "The TLS Protocol Version 1.0."
    - RFC 2246 (Proposed Standard), January 1999. Obsoleted by RFC 4346, updated by RFCs 3546, 5746, 6176, 7465, 7507, 7919.

12. **Dierks, T., & Rescorla, E.**
    - "The Transport Layer Security (TLS) Protocol Version 1.1."
    - RFC 4346 (Proposed Standard), April 2006. Obsoleted by RFC 5246, updated by RFCs 4366, 4680, 4681, 5746, 6176, 7465, 7507, 7919.

13. **Dierks, T., & Rescorla, E.**
    - "The Transport Layer Security (TLS) Protocol Version 1.2."
    - RFC 5246 (Proposed Standard), August 2008. Obsoleted by RFC 8446, updated by RFCs 5746, 5878, 6176, 7465, 7507, 7568, 7627, 7685, 7905, 7919, 8447.

14. **Dorey, K., Chang-Fong, N., & Essex, A.**
    - "Indiscreet logs: Diffie-Hellman backdoors in TLS."
    - In *24th Annual Network and Distributed System Security Symposium (NDSS 2017)*, San Diego, California, USA, February 26 - March 1, 2017. The Internet Society, 2017.

15. **Eastlake, D., Reagle, J., Hirsch, F., Roessler, T., Imamura, T., Dillaway, B., Simon, E., Yiu, K., & Nyström, M.**
    - "XML Encryption Syntax and Processing 1.1."
    - W3C Candidate Recommendation, 2012. http://www.w3.org/TR/2012/WD-xmlenc-core1-20121018.

16. **Eronen, P. (Ed.) & Tschofenig, H. (Ed.).**
    - "Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)."
    - RFC 4279 (Proposed Standard), December 2005.

17. **Fisher, R. A.**
    - "On the interpretation of χ² from contingency tables, and the calculation of p."
    - *Journal of the Royal Statistical Society*, 85(1):87–94, 1922.

18. **Pearson, K. F.R.S.**
    - "X. On the criterion that a given system of deviations from the probable in the case of a correlated system of variables is such that it can be reasonably supposed to have arisen from random sampling."
    - *The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science*, 50(302):157–175, 1900.

19. **Howgrave-Graham, N., & Smart, N. P.**
    - "Lattice attacks on digital signature schemes."
    - *Des. Codes Cryptogr.*, 23(3):283–290, 2001.

20. **Jager, T., Kohlar, F., Schäge, S., & Schwenk, J.**
    - "On the security of TLS-DHE in the standard model."
    - *Cryptology ePrint Archive*, Report 2011/219, 2011. http://eprint.iacr.org/2011/219.

21. **Jager, T., Kohlar, F., Schäge, S., & Schwenk, J.**
    - "On the security of TLS-DHE in the standard model."
    - In *Advances in Cryptology – CRYPTO 2012*, volume 7417 of *Lecture Notes in Computer Science*, pages 273–293, Santa Barbara, CA, USA, August 19–23, 2012. Springer, Heidelberg, Germany.

22. **Jao, D., Jetchev, D., & Venkatesan, R.**
    - "On the bits of elliptic curve Diffie-Hellman keys."
    - In *Progress in Cryptology - INDOCRYPT 2007: 8th International Conference in Cryptology in India*, volume 4859 of *Lecture Notes in Computer Science*, pages 33–47, Chennai, India, December 9–13, 2007. Springer, Heidelberg, Germany.

23. **Jones, M., & Hildebrand, J.**
    - "JSON Web Encryption (JWE)."
    - RFC 7516 (Proposed Standard), May 2015.

24. **Kaufman, C., Hoffman, P., Nir, Y., & Eronen, P.**
    - "Internet Key Exchange Protocol Version 2 (IKEv2)."
    - RFC 5996 (Proposed Standard), September 2010. Obsoleted by RFC 7296, updated by RFCs 5998, 6989.

25. **Klíma, V., Pokorný, O., & Rosa, T.**
    - "Attacking RSA-based sessions in SSL/TLS."
    - In *Cryptographic Hardware and Embedded Systems – CHES 2003*, volume 2779 of *Lecture Notes in Computer Science*, pages 426–440, Cologne, Germany, September 8–10, 2003. Springer, Heidelberg, Germany.

26. **Krawczyk, H., Bellare, M., & Canetti, R.**
    - "HMAC: Keyed-Hashing for Message Authentication."
    - RFC 2104 (Informational), February 1997. Updated by RFC 6151.

27. **Krawczyk, H., Paterson, K. G., & Wee, H.**
    - "On the security of the TLS protocol: A systematic analysis."
    - In *Advances in Cryptology – CRYPTO 2013, Part I*, volume 8042 of *Lecture Notes in Computer Science*, pages 429–448, Santa Barbara, CA, USA, August 18–22, 2013. Springer, Heidelberg, Germany.

28. **Langley, A., Modadugu, N., & Moeller, B.**
    - "Transport Layer Security (TLS) False Start."
    - RFC 7918 (Informational), August 2016.

29. **Mann, H. B., & Whitney, D. R.**
    - "On a test of whether one of two random variables is stochastically larger than the other."
    - *Ann. Math. Statist.*, 18(1):50–60, 03 1947.

30. **Merget, R., Somorovsky, J., Aviram, N., Young, C., Fliegenschmidt, J., Schwenk, J., & Shavitt, Y.**
    - "Scalable scanning and automatic classification of TLS padding oracle vulnerabilities."
    - In *USENIX Security 2019: 28th USENIX Security Symposium*, pages 1029–1046, Santa Clara, CA, USA, August 14–16, 2019. USENIX Association.

31. **Meyer, C., Somorovsky, J., Weiss, E., Schwenk, J., Schinzel, S., & Tews, E.**
    - "Revisiting SSL/TLS implementations: New Bleichenbacher side channels and attacks."
    - In *USENIX Security 2014: 23rd USENIX Security Symposium*, pages 733–748, San Diego, CA, USA, August 20–22, 2014. USENIX Association.

32. **De Mulder, E., Hutter, M., Marson, M. E., & Pearson, P.**
    - "Using Bleichenbacher’s solution to the hidden number problem to attack nonce leaks in 384-bit ECDSA."
    - In *Cryptographic Hardware and Embedded Systems – CHES 2013*, volume 8086 of *Lecture Notes in Computer Science*, pages 435–452, Santa Barbara, CA, USA, August 20–23, 2013. Springer, Heidelberg, Germany.

33. **De Mulder, E., Hutter, M., Marson, M. E., & Pearson, P.**
    - "Using Bleichenbacher’s solution to the hidden number problem to attack nonce leaks in 384-bit ECDSA: extended version."
    - *Journal of Cryptographic Engineering*, 4(1):33–45, February 2014.

34. **Nguyen, P. Q.**
    - "The dark side of the hidden number problem: Lattice attacks on DSA."
    - In *Cryptography and Computational Number Theory*, pages 321–330. Birkhäuser Basel, 2001.

35. **Nguyen, P. Q., & Shparlinski, I. E.**
    - "The insecurity of the digital signature algorithm with partially known nonces."
    - *Journal of Cryptology*, 15(3):151–176, June 2002.

36. **Nguyen, P. Q., & Shparlinski, I. E.**
    - "The insecurity of the elliptic curve digital signature algorithm with partially known nonces."
    - *Des. Codes Cryptogr.*, 30(2):201–217, 2003.

37. **NIST.**
    - "Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography."
    - Special Publication 800-56A Rev. 3, April 2018.

38. **Pornin, T.**
    - "BearSSL, a small SSL/TLS library."
    - https://bearssl.org.

39. **Rescorla, E., & Modadugu, N.**
    - "Datagram Transport Layer Security Version 1.2."
    - RFC 6347 (Proposed Standard), January 2012. Updated by RFCs 7507, 7905.

40. **Rescorla, E.**
    - "The Transport Layer Security (TLS) Protocol Version 1.3."
    - RFC 8446, 2018.

41. **Ronen, E., Gillham, R., Genkin, D., Shamir, A., Wong, D., & Yarom, Y.**
    - "The 9 lives of Bleichenbacher’s CAT: New cache ATtacks on TLS implementations."
    - In *2019 IEEE Symposium on Security and Privacy*, pages 435–452, San Francisco, CA, USA, May 19–23, 2019. IEEE Computer Society Press.

42. **Ronen, E., Paterson, K. G., & Shamir, A.**
    - "Pseudo constant time implementations of TLS are only pseudo secure."
    - In *ACM CCS 2018: 25th Conference on Computer and Communications Security*, pages 1397–1414, Toronto, ON, Canada, October 15–19, 2018. ACM Press.

43. **Schnorr, C. P.**
    - "A hierarchy of polynomial time lattice basis reduction algorithms."
    - *Theoretical Computer Science*, 53(2-3):201–224, 1987.

44. **ETSI Technical Committee Cyber Security.**
    - "ETSI TS 103 523-3 V1.2.1."
    - https://www.etsi.org/deliver/etsi_ts/103500_103599/10352303/01.02.01_60/ts_10352303v010201p.pdf.

45. **Somorovsky, J.**
    - "Systematic fuzzing and testing of TLS libraries."
    - In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security*, pages 1492–1504. ACM, 2016.

46. **Springall, D., Durumeric, Z., & Halderman, J. A.**
    - "Measuring the security harm of TLS crypto shortcuts."
    - In *Proceedings of the 2016 Internet Measurement Conference, IMC '16*, page 33–47, New York, NY, USA, 2016. Association for Computing Machinery.

47. **Takahashi, A., Tibouchi, M., & Abe, M.**
    - "New Bleichenbacher records: Fault attacks on qDSA signatures."
    - *IACR Transactions on Cryptographic Hardware and Embedded Systems*, Volume 2018:Issue 3–, 2018.

48. **The Sage Developers.**
    - "SageMath, the Sage Mathematics Software (Version 9.1)."
    - https://www.sagemath.org, 2020.

49. **Valenta, L., Adrian, D., Sanso, A., Cohney, S., Fried, J., Hastings, M., Halderman, J. A., & Heninger, N.**
    - "Measuring small subgroup attacks against Diffie-Hellman."
    - In *ISOC Network and Distributed System Security Symposium – NDSS 2017*, San Diego, CA, USA, February 26 – March 1, 2017. The Internet Society.

### Appendix: Exploiting OP

Following Subsection 6.1 (see Figure 3), we now discuss mounting the attack using OP, the Key Padding Oracle. To recap: The computation time of HMAC-SHA256 exhibits small "steps" when the input key length is 128·k−i, where 1 ≤ i ≤ 8. Specifically, when using a 1024-bit (128 bytes) DH modulus, there is a measurable timing difference when the most significant bit (MSB) is zero. Unlike previous oracles discussed in this work, this oracle allows attacking commonly-used modulus sizes, albeit at a much greater cost due to the smaller timing difference.

Our closer analysis revealed that this timing difference stems from the "finalize" function of the hash implementation. Figure 4 presents the (median) running time of this function for each input length. For inputs which are slightly shorter than a full block, the call to "finalize" must execute an additional internal call to the hash compression function. This contrasts with Figure 5, which shows the running time of the "update" function. Figure 3 shows the total running time for computing HMAC-SHA-256, which includes both functions as internal calls, and therefore exhibits both step-like behaviors.

We repeated the calculation from Subsection 6.1 for this smaller side channel. With 1,000 samples per case (2,000 measurements overall) and a 20% false positive rate, the false negative rate is 7.72%. Increasing the number of measurements to 20,000 achieved a false positive rate of 0.004170% and a false negative rate of 0.012530%. Repeating the same calculation from Subsection 6.1, the attack requires roughly 302 million handshakes with the target server in total (compared to 22 million handshakes when exploiting the easier case of OH, as described in Subsection 6.1). These numbers are not necessarily optimal.

- **Note 1:** As before, we estimated these rates using 200,000 experiments.
- **Note 2:** We estimate these rates using 10 million sets of randomly-sampled 20,000 measurements. We further note that we configured the test with a false positive rate of 0.01%, but obtained a lower false positive rate. This could be an artifact of the approximations the test uses internally.