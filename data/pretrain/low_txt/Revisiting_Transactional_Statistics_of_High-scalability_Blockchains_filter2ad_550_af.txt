以下是优化后的参考文献和附录部分，使其更加清晰、连贯和专业：

---

### 参考文献

1. AtoZ Markets. (2019). Binance facing XRP withdrawal issues. Retrieved from: <https://atozmarkets.com/news/binance-facing-xrp-withdrawal-issues/>

2. Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov. (2014). Deanonymisation of Clients in Bitcoin P2P Network. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (Scottsdale, Arizona, USA) (CCS '14). Association for Computing Machinery, New York, NY, USA, 15–29. DOI: <https://doi.org/10.1145/2660267.2660379>

3. Bitshares. (2018). Delegated Proof of Stake (DPOS). Retrieved from: <https://github.com/bitshares/how.bitshares.works/blob/master/docs/technology/dpos.rst>

4. block.one. (2018). EOS.IO Technical White Paper v2. Retrieved from: <https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md>

5. BTG Pactual and Dalma Capital. (2019). BTG Pactual and Dalma Capital to utilize Tezos Blockchain for Security Token Offerings (STOs). Retrieved from: <https://www.prnewswire.co.uk/news-releases/btg-pactual-and-dalma-capital-to-utilize-tezos-blockchain-for-security-token-offerings-stos--880726956.html>

6. Vitalik Buterin, Eric Conner, Rick Dudley, Matthew Slipper, and Ian Norden. (2019). EIP-1559: Fee market change for ETH 1.0 chain. Retrieved from: <https://eips.ethereum.org/EIPS/eip-1559>

7. Brad Chase and Ethan Macbrough. (2018). Analysis of the XRP Ledger Consensus Protocol. Technical Report. Ripple Labs, Inc. Retrieved from: <http://arxiv.org/abs/1802.07242>

8. CoinMarketCap. (2020). Tezos (XTZ) price, charts, market cap, and other metrics. Retrieved from: <https://coinmarketcap.com/currencies/tezos/>

9. Cryptium Labs. (2019). Babylon 2.0 (PsBABY5HQ). Retrieved from: <https://www.tezosagora.org/proposal/5>

10. Blockwatch Data. (2020). Cryptium Labs Payouts. Retrieved from: <https://tzstats.com/tz1cNARmnRRrvZgspPr2rSTUWq5xtGTuKuHY>

11. Damiano Di Francesco Maesa, Andrea Marino, and Laura Ricci. (2017). An analysis of the Bitcoin users graph: inferring unusual behaviours. In Complex Networks & Their Applications V, Hocine Cherifi, Sabrina Gaito, Walter Quattrociocchi, and Alessandra Sala (Eds.). Springer International Publishing, Cham, 749–760.

12. EarnBet. (2019). EOS 30 Day Notice.

13. enumivo. (2019). Get Free EIDOS. Retrieved from: <https://enumivo.org/get-free-eidos>

14. EOSDocs.io. (2020). API endpoints. Retrieved from: <https://www.eosdocs.io/>

15. EOSIO. (2019). About System Contracts. Retrieved from: <https://eosio.github.io/resources/apiendpoints/eosio.contracts/latest/index>

16. EOSIO. (2020). EOSIO Resource Allocation Proposal. Retrieved from: <https://eos.io/news/eosio-resource-allocation-proposal/>

17. EOSIO. (2020). eosio.contracts. Retrieved from: <https://github.com/EOSIO/eosio.contracts/blob/master/README.md>

18. EOSIO. (2020). RPC API Guide. Retrieved from: <https://developers.eos.io/eosio-nodeos/reference#get_account>

19. A. Gaihre, S. Pandey, and H. Liu. (2019). Deanonymizing Cryptocurrency With Graph Learning: The Promises and Challenges. In 2019 IEEE Conference on Communications and Network Security (CNS), 1–3. DOI: <https://doi.org/10.1109/CNS.2019.8802640>

20. L. M. Goodman. (2014). Tezos—a self-amending crypto-ledger White paper. Technical Report.

21. Lewis Gudgeon, Sam M Werner, Daniel Perez, and William J Knottenbelt. (2020). DeFi Protocols for Loanable Funds: Interest Rates, Liquidity and Market Efficiency. arXiv preprint arXiv:2006.13922.

22. HashBaby. (2019). Mark’s HBS, from dapp “vulgar rights” to Defi “industry foundation”. Retrieved from: <https://bit.ly/hashbaby-closing>

23. Yuheng Huang, Haoyu Wang, Lei Wu, Gareth Tyson, Xiapu Luo, Run Zhang, Xuanzhe Liu, Gang Huang, and Xuxian Jiang. (2020). Characterizing EOSIO Blockchain. arXiv:2002.05369 [cs.CR]

24. Josh Kauffman. (2019). What Are EOSIO System Accounts and What Do They Each Do? Retrieved from: <https://www.eoscanada.com/en/what-are-eosio-system-accounts-and-what-do-they-each-do>

25. Dániel Kondor, Márton Pósfai, István Csabai, and Gábor Vattay. (2014). Do the Rich Get Richer? An Empirical Analysis of the Bitcoin Transaction Network. PLOS ONE 9, 2 (2014), 1–10. DOI: <https://doi.org/10.1371/journal.pone.0086197>

26. Melanie Kramer and Michael O’Sullivan. (2019). Could EOSIO be the Foundation of a Blockchain Future. Retrieved from: <https://bywire.news/articles/could-eosio-be-the-foundation-of-a-blockchain-future>

27. Cryptium Labs. (2020). backerei — Automated reward payment & account management for Tezos bakers. Retrieved from: <https://github.com/cryptiumlabs/backerei>

28. Obsidian Labs. (2019). eosio.token. Retrieved from: <https://docs.eosstudio.io/contracts/eosio-token.html>

29. Robert Anthony Love, Lantanya Neale Mauriello, Nesta Valerie Reckord-Yarde, Susan Lynne Robertson, Robert Williams, and Donald E. Nelson. (2013). Value tracking and reporting of automated clearing house transactions. Retrieved from: <https://patentimages.storage.googleapis.com/03/e3/98/0cfb0fe7ee16e9/US8543477.pdf>

30. Dan McGinn, David Birch, David Akroyd, Miguel Molina-Solana, Yike Guo, and William J Knottenbelt. (2016). Visualizing dynamic bitcoin transaction patterns. Big data 4, 2 (2016), 109–119.

31. P. Monamo, V. Marivate, and B. Twala. (2016). Unsupervised learning for robust Bitcoin fraud detection. In 2016 Information Security for South Africa (ISSA), 129–134. DOI: <https://doi.org/10.1109/ISSA.2016.7802939>

32. Nomadic Labs. (2018). Delegating your coins. Retrieved from: <https://tezos.gitlab.io/introduction/howtorun.html#delegating-your-coins>

33. Nomadic Labs. (2018). Delegation. Retrieved from: <http://tezos.gitlab.io/whitedoc/proof_of_stake.html#delegation>

34. Nomadic Labs. (2018). Michelson: the language of Smart Contracts in Tezos. Retrieved from: <https://tezos.gitlab.io/whitedoc/michelson.html>

35. Nomadic Labs. (2018). Originated accounts and contracts. Retrieved from: <https://tezos.gitlab.io/introduction/howtouse.html>

36. ObsidianSys. (2019). Summary of Ledger Support for the Babylon Protocol. Retrieved from: <https://www.reddit.com/r/tezos/comments/dj7g9y/summary_of_ledger_support_for_the_babylon_protocol/>

37. Marcel Pechman. (2020). Record Ethereum Network use and Gas Fees Pose Risk to DeFi Expansion. Retrieved from: <https://cointelegraph.com/news/record-ethereum-network-use-and-gas-fees-pose-risk-to-defi-expansion>

38. Daniel Pérez and Benjamin Livshits. (2020). Broken Metre: Attacking Resource Metering in EVM. In 27th Annual Network and Distributed System Security Symposium, NDSS 2020, San Diego, California, USA, February 23-26, 2020. The Internet Society. Retrieved from: <https://www.ndss-symposium.org/ndss-paper/broken-metre-attacking-resource-metering-in-evm/>

39. Stephen Ranshous, Cliff A Joslyn, Sean Kreyling, Kathleen Nowak, Nagiza F Samatova, Curtis L West, and Samuel Winters. (2017). Exchange Pattern Mining in the Bitcoin Transaction Directed Hypergraph. In Financial Cryptography and Data Security, Michael Brenner, Kurt Rohloff, Joseph Bonneau, Andrew Miller, Peter Y A Ryan, Vanessa Teague, Andrea Bracciali, Massimiliano Sala, Federico Pintore, and Markus Jakobsson (Eds.). Springer International Publishing, Cham, 248–263.

40. Ripple. (2020). Benefits of XRP in Payments. Retrieved from: <https://ripple.com/>

41. Dorit Ron and Adi Shamir. (2013). Quantitative Analysis of the Full Bitcoin Transaction Graph. In Financial Cryptography and Data Security, Ahmad-Reza Sadeghi (Ed.). Springer Berlin Heidelberg, Berlin, Heidelberg, 6–24.

42. EIDOS Team. (2019). YAS Network. Retrieved from: <https://enumivo.org/blog/2019/11/24/yas-network>

43. Team Ripple. (2020). Q4 2019 XRP Markets Report. Retrieved from: <https://ripple.com/insights/q4-2019-xrp-markets-report/>

44. Scrambled Egg Technologies. (2020). XRP Scan | Ripple XRP ledger explorer. Retrieved from: <https://xrpscan.com/>

45. Tezos. (2018). Proof-of-stake in Tezos. 6 pages. Retrieved from: <https://tezos.gitlab.io/whitedoc/proof_of_stake.html>

46. Tezos Agora. (2019). Tezos Brest A amendment. Retrieved from: <https://www.tezosagora.org/period/15>

47. Tezos Foundation. (2020). Tezos Foundation’s Faucet. Retrieved from: <https://faucet.tezos.com/>

48. K. Toyoda, T. Ohtsuki, and P. T. Mathiopoulos. (2017). Identification of High Yielding Investment Programs in Bitcoin via Transactions Pattern Analysis. In GLOBECOM 2017 - 2017 IEEE Global Communications Conference, 1–6. DOI: <https://doi.org/10.1109/GLOCOM.2017.8254420>

49. tulo. (2019). Spam? suspect BTC payments on XRPL. Retrieved from: <https://www.xrpchat.com/topic/33284-spam-suspect-btc-payments-on-xrpl/?do=findComment&comment=793048>

50. Tezos Ukraine. (2020). Tezos Ukraine Infrastructure. Retrieved from: <https://api.tezos.org.ua/>

51. Visa. (2020). Visa Fact Sheet. Retrieved from: <https://usa.visa.com/dam/VCOM/download/corporate/media/visanet-technology/aboutvisafactsheet.pdf>

52. Will Warren and Amir Bandeali. (2017). 0x: An open protocol for decentralized exchange on the Ethereum blockchain. (2017).

53. WhaleEx. (2020). WhaleEx - #1 DEX. Retrieved from: <https://www.whaleex.com/>

54. Wietse Wind. (2020). XRP ledger full history cluster. Retrieved from: <https://rippled.xrptipbot.com/>

55. Gavin Wood. (2019). Ethereum: a secure decentralised generalised transaction ledger. Technical Report. 1–32 pages. DOI: <https://doi.org/10.1017/CBO9781107415324.004>

56. Junfeng Xie, F. Richard Yu, Tao Huang, Renchao Xie, Jiang Liu, and Yunjie Liu. (2019). A Survey on the Scalability of Blockchain Systems. IEEE Network 33, 5 (2019), 166–173. DOI: <https://doi.org/10.1109/MNET.001.1800290>

57. XRP Ledger. (2019). Accounts. Retrieved from: <https://xrpl.org/accounts.html#special-addresses>

58. XRP Ledger. (2019). Fast, Efficient Consensus Algorithm. Retrieved from: <https://xrpl.org/xrp-ledger-overview.html#fast-efficient-consensus-algorithm>

59. XRP Ledger. (2020). Get Exchange Rates. Retrieved from: <https://xrpl.org/data-api.html#get-exchange-rates>

60. XRP Ledger. (2020). Source and Destination Tags. Retrieved from: <https://xrpl.org/source-and-destination-tags.html>

61. XRP Ledger. (2020). Trust Lines and Issuing. Retrieved from: <https://xrpl.org/trust-lines-and-issuing.html>

62. XRP Ledger Project. (2019). Fee Voting. Retrieved from: <https://xrpl.org/fee-voting.html>

---

### 附录：测量框架

我们实现了一个可扩展且可重用的测量框架，以促进未来与交易分析相关的研究。该框架目前支持本文中分析的三个区块链（Tezos、EOSIO 和 XRPL），但可以轻松扩展以支持其他区块链。核心软件是用 Go 语言编写的，设计为在具有多个核心的单个机器上运行良好。框架前端提供了一个跨平台的静态二进制命令行工具。

虽然框架负责处理大量数据并进行处理，但我们还提供了一个用 Python 实现的配套工具，用于从框架生成的数据中生成图表和表格。

#### 数据获取

框架目前允许使用 HTTP 或 Websocket 进行 RPC 数据获取。Tezos 和 EOSIO 都使用 HTTP 适配器来检索数据，而 XRPL 使用 Websocket 接口。数据是从公开可用的存档节点中检索的，但框架也可以配置为使用其他节点。检索到的数据以压缩的 JSON Lines 格式存储，其中每一行对应一个区块。区块按每文件 n 个区块的方式存储——n 可以配置——从而使并行处理变得简单。获取图 2 中展示的所有数据耗时不到两天。

```json
{
  "Pattern": "/data/eos_blocks-*.jsonl.gz",
  "StartBlock": 82152667,
  "EndBlock": 118286375,
  "Processors": [
    {
      "Name": "TransactionsCount",
      "Type": "count-transactions"
    },
    {
      "Name": "GroupedActionsOverTime",
      "Type": "group-actions-over-time",
      "Params": {
        "By": "receiver",
        "Duration": "6h"
      }
    },
    {
      "Name": "ActionsByName",
      "Type": "group-actions",
      "Params": {
        "By": "name"
      }
    }
  ]
}
```

**图 11：我们的测量框架的配置文件示例**

#### 数据处理

框架提供了几个处理器，主要用于按时间或某些属性（如交易发送者）对数据进行聚合。框架通过一个 JSON 文件进行配置，包含要处理的数据的配置以及应从数据集中收集的统计信息的规范。我们在图 11 中展示了示例配置文件。此配置从第 82,152,667 块到第 118,286,375 块计算三种统计数据，使用所有匹配 `/data/eos_blocks-*.jsonl.gz` 的文件中的数据。框架将计算总交易数、按接收者分组并在 6 小时内分组的动作数量，以及最终按名称分组的动作总数。上述所有统计数据都可以用于所有区块链，但框架也支持特定于区块链的统计信息。通过实现通用接口，可以轻松地向框架添加新的统计数据。

我们的框架能够在不到 4 小时的时间内分析数据并输出本文所需的所有统计数据，使用的是一台强大的 48 核机器。

```go
type Blockchain interface {
  FetchData(filepath string, start, end uint64) error
  ParseBlock(rawLine []byte) (Block, error)
  EmptyBlock() Block
}

type Block interface {
  Number() uint64
  TransactionsCount() int
  Time() time.Time
  ListActions() []Action
}

type Action interface {
  Sender() string
  Receiver() string
  Name() string
}
```

**图 12：我们的测量框架的主要接口**

#### 扩展到其他区块链

该框架尽可能通用，以便集成其他区块链以进行类似类型的分析。特别是，框架包含三个主要接口，如图 12 所示。FetchData 方法可以通过重用框架提供的 HTTP 或 Websocket 适配器来实现，而 Block 和 Action 接口通常涉及定义所实现区块链的区块或动作模式。在我们的实现中，添加一个新的区块链平均需要 105 行新的 Go 代码（不包括测试）。

---