### When Receiving an HTTP Request

When an exit node receives an HTTP request, it sends a DNS request to its resolver and then issues the HTTP/S request. This process allows us to measure the behavior of the resolver. For more details on using Luminati for network and DNS measurements, refer to Chung et al. [27, 28].

### 3.3 Ethical Considerations

The measurement data collected at the root of the DNS includes aggregate data (RSSAC002), telemetry signals (RFC 8145), DNSKEY queries, and aggregates of popular queries for telemetry sources identified as showing non-standard behavior. In rare cases, we identify specific resolver operators (not end users) to contact them and gain an understanding of unexpected resolver behavior (cf. Section 4.3.2).

Most of our active measurements leverage well-established public measurement platforms, such as RIPE Atlas, which have strict guidelines. The exception is our Luminati measurements. To use the Luminati service, we paid the operators for access and strictly followed their License Agreement [29]. The owners of exit nodes agreed to route Luminati traffic through their hosts. We ensured that all traffic only flowed toward domains under the authors’ control, which serve empty web pages. Since we are only interested in information about the RFC 8509 behavior of DNS resolvers, we discard any end-user IP addresses from our logs.

### 4. Analysis

The following sections discuss the most relevant events of the rollover (I – VI in Fig. 2), starting before the rollover (I – III) in Section 4.1, followed by the rollover itself (IV) in Section 4.2, and ending after the rollover (V – VI) in Section 4.3.

#### 4.1 Before the Roll

##### 4.1.1 Early RFC 8145 Data

RFC 8145, published in April 2017, was quickly adopted by open-source resolver implementers. BIND supported it from mid-2016 with the functionality enabled by default, Unbound since April 2017 (enabled by default in October 2017), and Knot since November 2017 (also enabled by default).

We began looking for evidence of RFC 8145 signals in A/J Root data from May 2017. By September 2017, we observed trust anchor signals from approximately 1,300 unique source IPs per day. Figure 4 shows these early trust anchor signals. The KSK-2010 line indicates the old trust anchor, while the KSK-2017 line shows the new trust anchor. These signals are independent; a single source may send signals for both KSK-2010 and KSK-2017.

Initially, almost all sources had only KSK-2010. There was a slight increase in the uptake of KSK-2017 starting in June, before it was published in the root zone. This can be attributed to installations that received the new trust anchor as part of a software update or manual additions by administrators. For example, ISC added the new key to BIND’s code repository on the same day it was made operational and published by IANA (February 2nd, 2017).

When KSK-2017 was published in the root zone on July 11th, 2017, validators implementing RFC 5011 began the process of accepting the new key. After seeing the key published (and correctly signed) for 30 continuous days (the RFC 5011 Add Hold-Down Time), a validator adds the new key to its trust anchor set. Thus, from August 10th, we observed a rapid rise in signalers reporting KSK-2017 over the two days after the hold-down period ends. Because the TTL of the DNSKEY record set is 48 hours, the shift is not immediate.

After the 30-day hold-down ends, about 8% of signalers still do not report having KSK-2017. This population remained at this level through the end of September, leading ICANN to postpone the rollover on September 27th, 2017 [4]. As late as August 2019, around 1% of signalers still reported only having KSK-2010.

##### 4.1.2 Unusual KSK-2010 RFC 8145 Signalers

During continued monitoring of the RFC 8145 signals, ICANN observed two unusual artifacts: (i) a large fraction of resolvers failed to pick up and trust KSK-2017, as measured by resolvers sending only RFC 8145 KSK-2010 signals (Fig. 6), and (ii) many data points came from IP addresses sending only small numbers of queries (Fig. 5). The fraction of resolvers not trusting KSK-2017 actually worsened between the end of Fig. 4 and the beginning of Fig. 6.

To address this, we compared the RFC 8145 signal data from ICANN to all DNS queries arriving at B Root over a four-week period from March 1st–29th, 2018. We focused on B Root because, unlike ICANN data, we have full access to all queries received. We narrowed the data to addresses that sent a single signal for KSK-2010 to B Root and only 1–9 other queries in the period covered (Table 4).

To test for commonality in other query names sent by these sources, we extracted and correlated the top query names (Table 5). Beyond the RFC 8145 signals and queries for root-zone data, the next highest requested names were a Virtual Private Network (VPN) provider’s primary and secondary domain (anonymized in Table 5). This commonality strongly indicated a likely cause of KSK-2010 signals from sources sending otherwise low-volume traffic. Searching the VPN provider’s software revealed an embedded “root.key” file containing only KSK-2010 and not KSK-2017. The embedded libraries also matched the Unbound project [30], a popular DNSSEC-validating resolver.

We contacted the VPN provider on April 17th, 2018. They confirmed our findings and indicated that multiple products were affected. Subsequently, they released updated versions of their product to address the issue, as marked in Fig. 6. The desktop software update had the most dramatic impact, significantly decreasing the number of KSK-2010 signals seen at the root. The first mobile update with the new key set also showed a small dip in KSK-2010 signals, though the second mobile update exhibited a less visible impact.

**Key Takeaway Before the Roll:** A single application can significantly influence trust anchor signaling, and the fact that it was an end-user application is largely responsible for the high number of signals. Given that DNSSEC validation in end-user applications will become more common in the future, this needs to be considered for future rollovers.

#### 4.2 During the Roll

As KSK-2010 signals returned to the 8% range by mid-2018, ICANN revised its plans for the rollover [31]. After community feedback, ICANN proceeded with the rollover [32]. On October 11th, 2018, at 16:00h UTC, the KSK was rolled (event IV). From then on, root servers returned a DNSKEY RRset signed with KSK-2017.

In this section, we show how resolvers picked up the new RRset and examine what happens to resolvers that do not have KSK-2017 as a trust anchor, and how operators solve the problems this causes.

##### 4.2.1 The Key Transition

To measure the transition from the old to the new RRset, we used RIPE Atlas probes (see Section 3.2) to send DNSKEY queries and analyzed the results. Figure 7 shows when resolvers drop the old RRset from their cache and query the root for the new one. Right after the new key is published, resolvers begin showing cached signatures from KSK-2017. Within the first hour, 7% of the resolvers have the new RRset. Sixteen hours later, over 50% of resolvers have the new RRset. At 48 hours after the roll, the old RRset should have been removed from the caches of all resolvers; 99.5% of our vantage points return KSK-2017 signatures at that point. After 11 more days, the last "lagging" vantage points pick up the new RRset (not shown in Fig. 7).

Because the root DNSKEY RRset has a TTL of 48 hours, we expected half of the vantage points to have the new RRset after 24 hours. However, as Fig. 7 shows, this point was reached after just 16 hours. In Fig. 8, we plot the TTLs for the root DNSKEY RRset as reported by each vantage point when it receives the new RRset for the first time. More than 20% of vantage points report a TTL lower than 1 day, and around 10% even report a TTL lower than three hours. This indicates that some resolvers cut the TTL to a value lower than 48 hours, explaining why the new RRset was picked up earlier than expected. This also means that if a failure occurred during the rollover, we would likely have seen it sooner than intuitively expected, which is important to consider for future rollovers.

Another notable feature in Fig. 7 is the sudden "jumps" in the adoption of KSK-2017 (marked ①–③). We correlate these jumps with adoption at resolvers often used by RIPE Atlas probes in Fig. 9. The jumps correspond to the adoption of the new RRset by Cloudflare (①), a German ISP (②), and Google (③). Operators of the Cloudflare resolvers publicly commented that someone used their web interface to purge the DNSKEY RRset of the root from the cache right after the rollover [34]. This explains why the resolvers fetched the new RRset soon after the roll. This prompted us to check if other operators purposely flushed their caches before or after the rollover to either keep the old status for as long as possible or force the new situation as soon as possible. To find evidence, we looked for vantage points that report a TTL close to 48 hours just before or after the rollover. We found three resolvers that fetched the keyset just before the roll (effectively locking in the old situation for almost 48 hours). A large European ISP privately confirmed they did this to avoid problems right after the rollover, allowing them to monitor the news from other operators after the roll [35].

**Impact on Validating Resolvers:** Now that we know how resolvers picked up the new RRset, we check if they experienced any problems once they had the new RRset. For resolvers that experienced problems, we expect them to either fail validating signatures (become bogus) or turn off validation altogether (become insecure).