### Share Implementation and Measurement Time

In our share implementation, it took 24 hours to capture snapshots of all registers in 12 clock cycles, as detailed in Section VI-D. The time required for a single Logic Array Block (LAB) containing 16 registers is approximately 2.67 minutes. It is important to note that autofocus and drift correction significantly contribute to this time. However, the actual snapshot creation using Laser Light Scattering Imaging (LLSI) takes only around 65 seconds. Therefore, with a more stable optical setup, the acquisition time could potentially be reduced by up to 60%.

Furthermore, the registers on the FPGA are spread out with considerable space between them. In an ASIC implementation, the registers are likely to be placed closer together, reducing the area that needs to be imaged by LLSI. Despite this, we do not consider the measurement time to be a significant barrier for an attacker, as the measurements are fully automated and can run unsupervised without the presence of an operator. Thus, we believe that, in terms of measurement time, our approach is practically feasible in a real-world scenario.

### Cost Estimation

While laser scanning microscopes are more expensive than typical oscilloscopes used for power or electromagnetic (EM) analysis, they are common failure analysis (FA) equipment. They can be rented for about $300 per hour, including an operator, from various FA labs. The cost of such attacks can be estimated based on the number of shares and the size of the die. For example, the estimated cost to perform LLSI for known layouts of 3-share and 5-share masked AES implementations would be $325 (65 minutes) and $540 (108 minutes), respectively. For an unknown layout, the cost would increase linearly with the number of registers on the chip. The estimated cost to mount an LLSI attack against an unknown layout with a 2-share masked AES implementation would be $7,200 (24 hours).

### Optical Resolution and Register Size

In the FA community, optical probing has been shown to be applicable even to the 10 nm technology node using a Solid Immersion Lens (SIL), achieving an optical resolution of around 200 nm [40], [76]. For smaller technology nodes, higher resolutions can be achieved in the visible light regime [77], [78]. In our experiments, we did not use an SIL, resulting in a resolution of approximately 1 µm due to the wavelength of the laser. This resolution might seem low for a device manufactured in a 60 nm technology. However, unlike IC failure analysis, security evaluations do not require targeting individual transistors, so the optical resolution requirements can be relaxed to some extent.

The assumption that optical probing is not possible for small technology sizes is often misleading. This has been disproven in [48], where the extraction of the bitstream from a 28 nm FPGA was demonstrated.

For our DUT, the area used to extract the logic state of one register is approximately 7 µm × 9 µm. This area contains multiple transistors. Traditional optical probing techniques, such as Emission Optical Probing (EOP), require critical distances between transistors to extract waveforms from a single transistor. However, for LLSI, it is not crucial whether the laser spot covers multiple transistors at once, as long as different signatures for different logic states can be observed in the LLSI measurements.

### Chip Preparation and Silicon Access

For our attack, we had to depackage the target chip and mount it upside-down on a customized PCB to access the silicon backside. This makes the attack semi-invasive, and one might argue that the effort for chip preparation is too high. However, modern chips are increasingly manufactured in flip-chip packages due to performance, size, cost, and environmental compatibility reasons [79]. In these cases, the silicon backside is directly exposed, and no chip preparation is necessary. Therefore, depending on the chip packaging, our attack can also be non-invasive, as demonstrated in [48].

### Theory vs. Practice

It is tempting to claim that our results rule out the application of the t-probing model as presented in [5]. We highlight two main points. First, our attack only partially fits within that framework, as it requires that the t probes should not move within a time period. Second, and more importantly, our results show that some assumptions made in [5] do not always hold in reality. Specifically, in [5] and its follow-up studies, the cost of a probing attack is associated with the value t, which is ineffective for our attack. For a practically feasible, yet more powerful adversary mounting our proposed attack, the spatial coverage and/or the resolution of the probe play a much more vital role.

Moreover, it is claimed in [5] that, even with a fully adaptive adversary moving the probes within a clock cycle, security is guaranteed as long as the total number of probes does not exceed t. Conversely, we present a powerful new attacker who is not limited by the number of probes, as long as she can manipulate the usual functionality of the clock, which is very likely and has been practically demonstrated by us. This suggests that the model presented in [5] should be revisited. While the cost for such powerful attackers is higher than that for a classical side-channel attack (SCA), there is certainly a trade-off between the cost and the gain, depending on the value of the secrets stored in the device.

### Potential Countermeasures

Our attack consists of four main steps: i) accessing the IC backside, ii) modulating the power supply, iii) scanning with a thermal laser, and iv) localizing the key/state registers. Possible countermeasures can be designed and integrated into the chip to prevent each step.

#### Package-Level Countermeasures

Optical access to the backside of the chip can be prevented during fabrication and packaging. For instance, active backside coatings [80] can make the backside opaque to laser scanning microscopy. These coatings interact with the transistors and can detect any tampering attempts. Unfortunately, passive coating layers are not effective, as they can be removed mechanically without consequences.

#### Device-Level Countermeasures

To take a snapshot of the hardware, the core voltage of the device needs to be modulated with a specific frequency during laser irradiation. To prevent this, internal voltage regulators can be integrated into the circuit to isolate the supply voltage of secure cores from the outside and keep the core voltage constant. Such regulators have already been proposed to defeat power and EM SCAs [81]. Additionally, distributed temperature sensors can be deployed on the die to detect local temperature variations resulting from the laser beam. However, these sensors must operate independently from the main system clock; otherwise, they will be deactivated by halting the clock. Since the wavelength of the thermal lasers is larger than the bandgap of silicon, conventional silicon-based light sensors do not trigger. Temperature sensors can be realized using timing-sensitive circuits (e.g., ring-oscillators [82]) or specific materials with longer bandgap wavelengths.

#### Circuit-Level Countermeasures

A possible way to defeat our proposed attack is to dynamically change the location of registers. This cannot be done physically but can be achieved logically. Suppose each bit is allowed to be stored in a set of k registers. For n bits, k × n register cells are required. A mechanism is needed to assign one of these k register cells to a single-bit value, dynamically selected at every clock cycle, independent of other single-bit values. This randomization of register locations is independent of any masking scheme used to defeat classical SCA attacks. Realizing this might be possible through a form of reconfigurability. To the best of our knowledge, no such scheme is known in the hardware security community, and it is among our planned future works.

### Conclusion

Masking is the most effective protection for cryptographic implementations against (passive) SCA attacks. The mathematical proof of the probing security models assumes a limited number of probes available to the attacker. This assumption holds for virtually all practically feasible SCA attacks reported so far. We introduced a new optical attack approach that can capture hardware snapshots of the IC's entire logic state. It is a single-trace technique offering a number of probes that is only bounded by the number of transistors on the chip. We showed that extracting keys from 2-, 3-, and 5-share AES-128 implementations is practically feasible, even when the exact register locations are not known to the attacker. Due to the practically unlimited number of probes in our attack, implementations with higher protection orders (i.e., with a high number of shares) are also vulnerable. The complexity of the attack depends on the design architecture, the number of shares, and the adversary's knowledge of the underlying implementation. Our results confirm that cryptography should not rely on the complexity of physical attacks. Moreover, assumptions made in theoretical models can be invalidated through more advanced FA techniques, and thus, one should not underestimate them. We believe that integrating countermeasures to defeat our attack is not a trivial task. Nevertheless, we provided an overview of potential countermeasures at different levels of abstraction.

### Acknowledgment

The work described in this paper has been supported in part by the Einstein Foundation in the form of an Einstein professorship - EP-2018-480, and in part by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy - EXC 2092 CASA - 390781972. The authors would also like to acknowledge Hamamatsu Photonics K.K. Japan and Germany for their help and support on the PHEMOS system. The authors declare no other financial and non-financial competing interests.

### References

[1] P. C. Kocher, “Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems,” in CRYPTO '96, ser. LNCS, vol. 1109. Springer, 1996, pp. 104–113.
[2] P. C. Kocher, J. Jaffe, and B. Jun, “Differential Power Analysis,” in CRYPTO '99, ser. LNCS, vol. 1666. Springer, 1999, pp. 388–397.
[3] D. Agrawal, B. Archambeault, J. R. Rao, and P. Rohatgi, “The EM Side-Channel(s),” in CHES 2002, ser. LNCS, vol. 2523. Springer, 2002, pp. 29–45.
[4] J. Ferrigno and M. Hlaváč, “When AES blinks: introducing optical side channel,” IET Information Security, vol. 2, no. 3, pp. 94–98, 2008.
[5] Y. Ishai, A. Sahai, and D. A. Wagner, “Private Circuits: Securing Hardware against Probing Attacks,” in CRYPTO 2003, ser. LNCS. Springer, 2003, vol. 2729, pp. 463–481.
[6] Kleindiek Nanotechnik GmbH. (2020) Prober Shuttle (PS8). [Online]. Available: https://www.nanotechnik.com/ps8.html
[7] R. Specht, V. Immler, F. Unterstein, J. Heyszl, and G. Sigl, “Dividing the threshold: Multi-probe localized EM analysis on threshold implementations,” in HOST 2018. IEEE Computer Society, 2018, pp. 33–40.
[8] A. Duc, S. Dziembowski, and S. Faust, “Unifying Leakage Models: From Probing Attacks to Noisy Leakage,” J. Cryptology, vol. 32, no. 1, pp. 151–177, 2019.
[9] E. Prouff, M. Rivain, and R. Bevan, “Statistical Analysis of Second Order Differential Power Analysis,” IEEE Trans. Computers, vol. 58, no. 6, pp. 799–811, 2009.
[10] E. Carmon, J.-P. Seifert, and A. Wool, “Photonic Side Channel Attacks Against RSA,” in 2017 IEEE International Symposium on Hardware Oriented Security and Trust (HOST). IEEE, 2017, pp. 74–78.
[11] R. Primas, P. Pessl, and S. Mangard, “Single-Trace Side-Channel Attacks on Masked Lattice-Based Encryption,” in CHES 2017, ser. LNCS, vol. 10529. Springer, 2017, pp. 513–533.
[12] K. Järvinen and J. Balasch, “Single-Trace Side-Channel Attacks on Scalar Multiplications with Precomputations,” in CARDIS 2016, ser. LNCS, vol. 10146. Springer, 2016, pp. 137–155.
[13] M. Alam, H. A. Khan, M. Dey, N. Sinha, R. L. Callan, A. G. Zajic, and M. Prvulovic, “One&done: A single-decryption EM-based attack on OpenSSL’s constant-time blinded RSA,” in USENIX Security 2018. USENIX Association, 2018, pp. 585–602.
[14] L. Lerman, R. Poussier, G. Bontempi, O. Markowitch, and F. Standaert, “Template Attacks vs. Machine Learning Revisited (and the Curse of Dimensionality in Side-Channel Analysis),” in COSADE 2015, ser. LNCS, vol. 9064. Springer, 2015, pp. 20–33.
[15] S. Chari, C. S. Jutla, J. R. Rao, and P. Rohatgi, “Towards Sound Approaches to Counteract Power-Analysis Attacks,” in CRYPTO '99, ser. LNCS, vol. 1666. Springer, 1999, pp. 398–412.
[16] B. Barak, O. Goldreich, R. Impagliazzo, S. Rudich, A. Sahai, S. P. Vadhan, and K. Yang, “On the (Im)possibility of Obfuscating Programs,” in CRYPTO 2001, ser. LNCS, vol. 2139. Springer, 2001, pp. 1–18.
[17] A. Duc, S. Dziembowski, and S. Faust, “Unifying Leakage Models: From Probing Attacks to Noisy Leakage,” in EUROCRYPT 2014, ser. LNCS, vol. 8441. Springer, 2014, pp. 423–440.
[18] S. Nikova, V. Rijmen, and M. Schläffer, “Secure Hardware Implementation of Nonlinear Functions in the Presence of Glitches,” J. Cryptology, vol. 24, no. 2, pp. 292–321, 2011.
[19] B. Bilgin, B. Gierlichs, S. Nikova, V. Nikov, and V. Rijmen, “Higher-Order Threshold Implementations,” in ASIACRYPT 2014, ser. LNCS, vol. 8874. Springer, 2014, pp. 326–343.
[20] O. Reparaz, B. Bilgin, S. Nikova, B. Gierlichs, and I. Verbauwhede, “Consolidating Masking Schemes,” in CRYPTO 2015, ser. LNCS, vol. 9215. Springer, 2015, pp. 764–783.
[21] J. Balasch, S. Faust, and B. Gierlichs, “Inner Product Masking Revisited,” in EUROCRYPT 2015, ser. LNCS, vol. 9056. Springer, 2015, pp. 486–510.
[22] H. Groß and S. Mangard, “A unified masking approach,” J. Cryptographic Engineering, vol. 8, no. 2, pp. 109–124, 2018.
[23] H. Groß, R. Iusupov, and R. Bloem, “Generic Low-Latency Masking in Hardware,” IACR Trans. Cryptogr. Hardw. Embed. Syst., vol. 2018, no. 2, pp. 1–21, 2018.
[24] A. Duc, S. Faust, and F. Standaert, “Making Masking Security Proofs Concrete - Or How to Evaluate the Security of Any Leaking Device,” in EUROCRYPT 2015, ser. LNCS, vol. 9056. Springer, 2015, pp. 401–429.
[25] S. Dziembowski, S. Faust, and M. Skorski, “Noisy Leakage Revisited,” in EUROCRYPT 2015, ser. LNCS, vol. 9057. Springer, 2015, pp. 159–188.
[26] G. Barthe, F. Dupressoir, S. Faust, B. Grégoire, F. Standaert, and P. Strub, “Parallel Implementations of Masking Schemes and the Bounded Moment Leakage Model,” in EUROCRYPT 2017, ser. LNCS, vol. 10210, 2017, pp. 535–566.
[27] O. Bronchain, J. M. Hendrickx, C. Massart, A. Olshevsky, and F. Standaert, “Leakage Certification Revisited: Bounding Model Errors in Side-Channel Security Evaluations,” in CRYPTO 2019, ser. LNCS, vol. 11692. Springer, 2019, pp. 713–737.
[28] G. Barthe, S. Belaïd, F. Dupressoir, P. Fouque, B. Grégoire, and P. Strub, “Verified Proofs of Higher-Order Masking,” in EUROCRYPT 2015, ser. LNCS, vol. 9056. Springer, 2015, pp. 457–485.
[29] G. Barthe, S. Belaïd, F. Dupressoir, P. Fouque, B. Grégoire, P. Strub, and R. Zucchini, “Strong Non-Interference and Type-Directed Higher-Order Masking,” in CCS 2016. ACM, 2016, pp. 116–129.
[30] R. Bloem, H. Groß, R. Iusupov, B. Könighofer, S. Mangard, and J. Winter, “Formal Verification of Masked Hardware Implementations in the Presence of Glitches,” in EUROCRYPT 2018, ser. LNCS, vol. 10821. Springer, 2018, pp. 321–353.
[31] V. Arribas, S. Nikova, and V. Rijmen, “VerMI: Verification Tool for Masked Implementations,” in ICECS 2018. IEEE, 2018, pp. 381–384.
[32] G. Barthe, S. Belaïd, G. Cassiers, P. Fouque, B. Grégoire, and F. Standaert, “maskVerif: Automated Verification of Higher-Order Masking in Presence of Physical Defaults,” in ESORICS 2019, ser. LNCS, vol. 11735. Springer, 2019, pp. 300–318.
[33] T. D. Cnudde, O. Reparaz, B. Bilgin, S. Nikova, V. Nikov, and V. Rijmen, “Masking AES with d+1 Shares in Hardware,” in CHES 2016, ser. LNCS, vol. 9813. Springer, 2016, pp. 194–212.
[34] B. Bilgin, B. Gierlichs, S. Nikova, V. Nikov, and V. Rijmen, “Trade-Offs for Threshold Implementations Illustrated on AES,” IEEE Trans. on CAD of Integrated Circuits and Systems, vol. 34, no. 7, pp. 1188–1200, 2015.
[35] F. Wegener and A. Moradi, “A First-Order SCA Resistant AES Without Fresh Randomness,” in COSADE 2018, ser. LNCS, vol. 10815. Springer, 2018, pp. 245–262.
[36] L. De Meyer, A. Moradi, and F. Wegener, “Spin Me Right Round: Rotational Symmetry for FPGA-Specific AES,” IACR Trans. Cryptogr. Hardw. Embed. Syst., vol. 2018, no. 3, pp. 596–626, 2018.
[37] A. Poschmann, A. Moradi, K. Khoo, C. Lim, H. Wang, and S. Ling, “Side-Channel Resistant Crypto for Less than 2,300 GE,” J. Cryptology, vol. 24, no. 2, pp. 322–345, 2011.
[38] A. Moradi, A. Poschmann, S. Ling, C. Paar, and H. Wang, “Pushing the Limits: A Very Compact and a Threshold Implementation of AES,” in EUROCRYPT 2011, ser. LNCS, vol. 6632. Springer, 2011, pp. 69–88.
[39] H. Groß, S. Mangard, and T. Korak, “An Efficient Side-Channel Protected AES Implementation with Arbitrary Protection Order,” in CT-RSA 2017, ser. LNCS, vol. 10159. Springer, 2017, pp. 95–112.
[40] C. Boit, S. Tajik, P. Scholz, E. Amini, A. Beyreuther, H. Lohrke, and J.-P. Seifert, “From IC Debug to Hardware Security Risk: The Power of Backside Access and Optical Interaction,” in 2016 IEEE 23rd International Symposium on the Physical and Failure Analysis of Integrated Circuits (IPFA). IEEE, 2016, pp. 365–369.