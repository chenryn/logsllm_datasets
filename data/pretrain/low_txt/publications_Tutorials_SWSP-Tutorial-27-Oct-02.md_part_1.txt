# Semantic Web Services and Processes: Semantic Composition and Quality of Service

**Authors:**
- Jorge Cardoso¹, Christoph Bussler², Amit Sheth¹,⁴, Dieter Fensel³
- ¹LSDIS Lab, Computer Science, University of Georgia
- ²Oracle Corporation
- ³Universität Innsbruck
- ⁴Semagix, Inc.

**Tutorial at Federated Conferences:**
- On the Move to Meaningful Internet Computing and Ubiquitous Computing 2002, Irvine, CA, October 2002.

**Web Resource for this Tutorial:**
- [http://lsdis.cs.uga.edu/lib/presentations/SWSP-tutorial/resource.htm](http://lsdis.cs.uga.edu/lib/presentations/SWSP-tutorial/resource.htm)

## Big Challenges

The next generation of the Web relies critically on semantics. The key contribution of the "Semantic Web" is its ability to represent and process descriptions of every resource on the Web. These descriptions, often referred to as the "semantics" of a resource, include information that can be used by machines for various applications, not just for display purposes.

## The Vision

### Current State of the Web
- **Users:** Over 500 million
- **Pages:** More than 1 billion
- **Technologies:** URI, HTML, HTTP
- **Challenges:**
  - Finding information
  - Extracting data
  - Representing data
  - Interpreting data
  - Maintaining data

### Future State: Semantic Web
- **Technologies:** RDF, RDF(S), OWL
- **Benefits:**
  - Enhanced discovery
  - Improved interoperability
  - Better representation and interpretation of data

## Current Affairs

### Web Services
- **Purpose:** Bringing computation back to the web
- **Technologies:** UDDI, WSDL, SOAP
- **Dynamic Capabilities:**
  - Discovery
  - Integration
  - Quality of Service (QoS)

### Intelligent Web Services
- **Technologies:** RDF, RDF(S), OWL
- **Potential:**
  - Full web potential
  - Dynamic and intelligent services

## Components of a Solution

This tutorial focuses on two main issues:
1. **Semantic Web Services:**
   - Web Services with formal descriptions (semantics) that enhance discovery, selection, composition, monitoring, and interoperability.
2. **Processes:**
   - Next steps in carrying out core business activities like e-commerce and e-services, created from the composition of Web Services or other components.

## Our Focus

In summary, this tutorial is about associating semantics with Web Services and leveraging them in process composition. We will cover:
- **Frameworks and Standards:**
  - Functional perspective: Process composition involving Web Service discovery and semantic heterogeneity handling.
  - Operational perspective: Research on QoS specification for Web Services and processes.

## Outline

1. **Web Services: A Working Technology**
   - Definition and overview
   - Attributes and state of the art
2. **Web Service Composition**
   - Introduction
   - Discovery and integration
   - Quality of Service
3. **Conclusions**

## Web Services: A Working Technology

**Definition:**
- Self-contained, self-describing, modular applications that can be published, located, and invoked across the web.
- Perform functions ranging from simple requests to complex business processes.
- Once deployed, other applications and Web services can discover and invoke the service.

**Attributes:**
- **Web-based Protocols:** Designed to work over the public internet using HTTP.
- **Interoperability:** SOAP allows different systems to interoperate.
- **XML-based:** Standard framework for creating machine-readable documents.

**State of the Art:**
- **UDDI:** Mechanism for clients to find web services.
- **WSDL:** Defines services as collections of network endpoints or ports.
- **SOAP:** Message layout specification for passing XML-encoded data.

## How Web Services Work

### Simple Web Service Invocation
1. **Service Requestor:** Writes client code and looks up the Web service.
2. **Repository:** Provides the WSDL file.
3. **Remote Web Service:** Receives the SOAP request and sends a response.
4. **Publish Web Service:** Makes the service available.

### Web Service Description
- **Why Describe Web Services?**
  - To provide necessary information for service requestors.
  - Languages: WSDL, DAML-S, RDF.
  - WSDL: Describes syntactic information.
  - DAML-S and RDF: Describe both syntactic and semantic information.

### UDDI (Universal Description, Discovery, and Integration)
- **Purpose:** Acts as a registry for businesses and services.
- **APIs:**
  - **Publication API:** Allows organizations to publish businesses, services, and service type specifications.
  - **Inquiry API:** Allows users to extract information from the UDDI registry.
- **Classification:**
  - White Pages: Business name, description, contact info.
  - Yellow Pages: Classification information.
  - Green Pages: Information on how to invoke services.
  - TModels: Reusable, abstract definitions of services.

### Services Aspect of Web Services
- **Modular:** Reusable and composable.
- **Available:** Exposed outside their original system.
- **Described:** Machine-readable descriptions.
- **Implementation-independent:** Interface independent of implementation.
- **Published:** Descriptions available in a repository.

### Why Web Services?
- **Advantages:**
  - Data model: SOAP message exchange.
  - Loose coupling.
  - Pass by value.
  - Stateless (can be stateful with Web processes).
  - Uses HTTP port 80 for firewall traversal.
  - UDDI for service discovery.

## Truth & Vision

### Web Services (SOAP, UDDI, WSDL)
- **Data Exchange:** XML format.
- **Syntactic Level:** Infrastructure does not access data content.
- **Invocation Models:**
  - One-way invocation.
  - Request/Reply invocation.
  - Solicit/Response invocation.

### Web Services Interoperability
- **WS-I Organization:**
  - Defines interoperable standards.
  - Provides tools for interoperability testing.

### Missing Concepts in Web Services
- **Data Definition:**
  - XML Schema for input and output messages.
  - No domain-specific data definitions.
- **Invocation Behavior:**
  - No operation sequence definition.
  - All operations are equal in behavior.
- **Mediation:**
  - No mediation of data or behavior.
- **Composition:**
  - No concepts for composition.
  - No trading partner management.
  - No service level agreements.

### Emerging Work
- **Web Services Security:**
  - [IBM DeveloperWorks: Web Services Security](http://www-106.ibm.com/developerworks/library/ws-secure)
- **Business Transaction (OASIS):**
  - [OASIS Business Transactions Committee](http://www.oasis-open.org/committees/business-transactions)

### Web Services Modeling Framework (WSMF)
- **Addressing Deficiencies:**
  - Provides a complete set of concepts to address the deficiencies in web services.

### Related Work
- **Data Definition:**
  - Ongoing research and development to enhance data definition capabilities in web services.

---

This optimized version aims to make the text more structured, coherent, and professional, while retaining all the essential information.