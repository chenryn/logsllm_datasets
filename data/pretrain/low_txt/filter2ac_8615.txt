### Title: A Decade After Bleichenbacher '06: RSA Signature Forgery Still Viable

In 2006, at the CRYPTO rump session, Daniel Bleichenbacher presented a method to exploit implementation flaws in RSA signature verification, enabling forgery attacks on key pairs with small public exponents. The success of his attack stemmed from the failure of some implementations to enforce the necessary verification checks required by the PKCS#1 v1.5 signature scheme. Specifically, the original Bleichenbacher '06 attack exploited the fact that some implementations did not require the PKCS#1 payload to be right-justified with adequate padding.

In 2008, Kuehn et al. introduced new and more efficient variants of the Bleichenbacher '06 attack, exploiting different flaws where certain middle parts of the PKCS#1 payload were ignored by the signature verifier. Further research by Intel Security in 2014 revealed that Firefox and Google Chrome (both using Mozilla NSS at the time) were vulnerable to similar forgery attacks. In 2016, Valsorda also identified similar issues in Python-RSA.

The legacy of Bleichenbacher '06 has persisted, and more than a decade after the initial attack, we have revisited the problem of PKCS#1 v1.5 signature verification. Our investigation uncovered additional flaws in the code used by popular IPSec software, as well as TLS and cryptographic libraries, enabling new variants of the attack. These flaws not only facilitate signature forgery but can also be exploited by attackers to launch denial-of-service (DoS) attacks on the signature verifier.

Our research employed dynamic symbolic execution to systematically analyze the signature verification logic in various implementations. We have released our toolchain and relevant artifacts to the public. This work has led to the assignment of six new Common Vulnerabilities and Exposures (CVEs), three of which are classified as high severity and three as medium severity. Affected vendors have been notified to strengthen their signature verification code.

This briefing will conclude with a discussion on the root causes of these flaws and strategies to prevent similar vulnerabilities in the future.