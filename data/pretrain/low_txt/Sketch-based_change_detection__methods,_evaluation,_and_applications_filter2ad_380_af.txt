### 4. Exploring Sampling Techniques for Scalability

To enhance the scalability of our approach, we are investigating the integration of sampling techniques. By combining these methods, we aim to improve the efficiency and performance of our system.

### 5. Guidelines for Parameter Selection

Given the wide range of parameters in our system, it is essential to provide clear guidelines for selecting appropriate and justifiable values. The full factorial method from statistical experimental design [5] can help reduce the number of levels (or "versions") for various variables. We are exploring such techniques to identify which parameters are independent of each other and to determine reasonable values based on their similarity. For example, parameter \( H \) has an overall impact independent of other parameters. Additionally, the use of Yates' algorithm [5] can help reduce the tedium associated with multiple runs.

### 7. Summary

In this paper, we present a sketch-based change detection technique motivated by applications in anomaly detection and other areas that benefit from quick and efficient change detection mechanisms. Our method is capable of detecting significant changes in massive data streams with a large number of network time series. As part of our technique, we designed a variant of the sketch data structure called k-ary sketch, which uses a constant, small amount of memory and has constant per-record update and reconstruction costs. We implemented various time series forecast models (e.g., ARIMA, Holt-Winters) on top of these summaries and detected significant changes by identifying flows with large forecast errors. We also presented heuristics for automatically configuring the forecast model parameters.

Using a large amount of real Internet traffic data, we demonstrated that our sketch-based change detection method is highly accurate compared to per-flow analysis and can be implemented with low computational and memory costs. Our preliminary results are promising and suggest the potential of using our technique as a building block for network anomaly detection and traffic measurement in large networks.

### 8. References

[1] N. Alon, Y. Matias, and M. Szegedy. The space complexity of approximating the frequency moments. *Journal of Computer and System Sciences*, 58(1):137–147, 1999.

[2] H. Arsham. Time series analysis and forecasting techniques. http://obelia.jde.aca.mmu.ac.uk/resdesgn/arsham/opre330Forecast.htm.

[3] P. Barford, J. Kline, D. Plonka, and A. Ron. A signal analysis of network traffic anomalies. In *Proceedings of the ACM SIGCOMM Internet Measurement Workshop*, Marseille, France, November 2002.

[4] P. Barford and D. Plonka. Characteristics of network traffic flow anomalies. In *Proceedings of the ACM SIGCOMM Internet Measurement Workshop*, San Francisco, CA, November 2001.

[5] G. E. P. Box, W. G. Hunter, and J. S. Hunter. *Statistics for Experimenters*. John Wiley, 1978.

[6] G. E. P. Box and G. M. Jenkins. *Time Series Analysis, Forecasting and Control*. Holden-Day, 1976.

[7] G. E. P. Box, G. M. Jenkins, and G. C. Reinsel. *Time Series Analysis, Forecasting and Control*. Prentice-Hall, Englewood Cliffs, 1994.

[8] P. Brockwell and R. Davis. *Introduction to Time Series and Forecasting*. Springer, 1996.

[9] J. Brutlag. Aberrant behavior detection in time series for network monitoring. In *Proc. USENIX LISA XIV*, New Orleans, LA, December 2000. http://www.usenix.org/events/lisa2000/full_papers/brutlag/brutlag_html/index.html.

[10] J. Carter and M. Wegman. Universal classes of hash functions. *Journal of Computer and System Sciences*, 18:143–154, 1979.

[11] M. Charikar, K. Chen, and M. Farach-Colton. Finding frequent items in data streams. In *Proc. of ICALP 2002*, pages 693–703, 2002. http://www.cs.princeton.edu/~moses/papers/frequent.ps.

[12] C. Chen and L.-M. Liu. Forecasting time series with outliers. *Journal of Forecasting*, 12:13–35, 1993.

[13] C. Chen and L.-M. Liu. Joint estimation of model parameters and outlier effects in time series. *Journal of the American Statistical Association*, 88:284–297, 1993.

[14] G. Cormode and S. Muthukrishnan. What’s hot and what’s not: Tracking most frequent items dynamically. In *Proc. ACM PODC '2003*, July 2003.

[15] M. Datar and S. Muthukrishnan. Estimating rarity and similarity over data stream windows. *Technical Report 2001-21, DIMACS Technical Report*, November 2001.

[16] N. Devillard. Fast median search: an ANSI C implementation, July 1998. http://ndevilla.free.fr/median/median.pdf.

[17] C. Estan and G. Varghese. New directions in traffic measurement and accounting. In *Proc. ACM SIGCOMM '2002*, Pittsburgh, PA, August 2002.

[18] F. Feather, D. Siewiorek, and R. Maxion. Fault detection in an Ethernet network using anomaly signature matching. In *Proc. ACM SIGCOMM '93*, 1993.

[19] S. Floyd, M. Handley, J. Padhye, and J. Widmer. Equation-based congestion control for unicast applications. In *Proc. ACM SIGCOMM '00*, August 2000.

[20] K. Fox, R. Henning, J. Reed, and R. Simonian. A neural network approach towards intrusion detection. *Technical Report, Harris Corporation*, July 1990.

[21] A. C. Gilbert, S. Guha, P. Indyk, S. Muthukrishnan, and M. J. Strauss. Quicksand: Quick summary and analysis of network data. *Technical Report 2001-43, DIMACS Technical Report*, November 2001.

[22] C. Hood and C. Ji. Proactive network fault detection. In *Proc. IEEE INFOCOM '97*, Kobe, Japan, April 1997.

[23] K. J. Houle, G. M. Weaver, N. Long, and R. Thomas. Trends in Denial of Service Attack Technology. http://www.cert.org/archive/pdf/DoS_trends.pdf.

[24] P. Indyk. Stable distributions, pseudorandom generators, embeddings and data stream computation. In *Proc. of the 41st Symposium on Foundations of Computer Science*, 2000.

[25] J. Jung, B. Krishnamurthy, and M. Rabinovich. Flash Crowds and Denial of Service Attacks: Characterization and Implications for CDNs and Web Sites. In *Proceedings of the World Wide Web Conference*, Honolulu, Hawaii, May 2002. http://www.research.att.com/~bala/papers/www02-fc.html.

[26] I. Katzela and M. Schwartz. Schemes for fault identification in communication networks. *IEEE/ACM Transactions on Networking*, 3(6):753–764, December 1995.

[27] M. J. Lebo and W. H. Moore. Foreign policy behavior and fractional integration. *Journal of Conflict Resolution*, 1(47):13–32, February 2003. http://garnet.acns.fsu.edu/~whmoore/research/Lebo&Moore2003.pdf.

[28] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and N. Weaver. The Spread of the Sapphire/Slammer Worm. *Technical report, Technical Report*, February 2003. http://www.cs.berkeley.edu/~nweaver/sapphire/.

[29] D. Moore, G. Voelker, and S. Savage. Inferring Internet Denial of Service Activity. In *Proc. of the USENIX Security Symposium*, Washington D.C., August 2001. http://www.cs.ucsd.edu/~savage/papers/UsenixSec01.pdf.

[30] S. Muthukrishnan. Data streams: Algorithms and applications, 2003. Manuscript based on invited talk from 14th SODA. Available from http://www.cs.rutgers.edu/~muthu/stream-1-1.ps.

[31] V. Paxson. Bro: A System for Detecting Network Intruders in Real-Time. *Computer Networks*, 31(23–24):2435–2463, December 1999. ftp://ftp.ee.lbl.gov/papers/bro-CN99.ps.gz.

[32] M. Roesch. Snort – Lightweight Intrusion Detection for Networks. In *Proc. USENIX Lisa '99*, Seattle, WA, November 1999.

[33] M. Thorup and Y. Zhang. Tabulation based 4-universal hashing with applications to second moment estimation, 2003. Under submission. Available from http://www.research.att.com/~yzhang/papers/hash-tm03.ps.

[34] J. Toelle and O. Niggemann. Supporting intrusion detection by graph clustering and graph drawing. In *Proc. RAID '2000*, Toulouse, France, October 2000.

[35] R. S. Tsay. Time series model specification in the presence of outliers. *Journal of the American Statistical Association*, 81:132–141, 1986.

[36] R. S. Tsay. Outliers, level shifts, and variance changes in time series. *Journal of Forecasting*, 7:1–20, 1988.

[37] T.S. Huang, G. J. Yang, and G. Y. Tang. A fast two-dimensional median filtering algorithm. *IEEE transactions on acoustics, speech and signal processing*, 27(1), February 1979.

[38] A. Ward, P. Glynn, and K. Richardson. Internet service performance failure detection. *Performance Evaluation Review*, August 1998.

[39] M. Wegman and J. Carter. New hash functions and their use in authentication and set equality. *Journal of Computer and System Sciences*, 22:265–279, 1981.

[40] N. Ye. A Markov chain model of temporal behavior for anomaly detection. In *Workshop on Information Assurance and Security*, West Point, NY, June 2000.

### Appendix

#### Notation
For any \( a, b \in [u] \), let \( a \sim b \) denote \( h(a) = h(b) \), and \( a \not\sim b \) denote \( h(a) \neq h(b) \).

#### A. Analysis for VA Estimation

**Accuracy of \( v_{hi} \)**

The following theorem states that each \( v_{hi} \) (for \( i \in [H] \)) is an unbiased estimator of \( v_a \) with variance inversely proportional to \( (K - 1) \).

**Theorem 1.**
\[ E[v_{hi}] = v_a \]
\[ \text{Var}(v_{hi}) \leq \frac{F_2}{K - 1} \]

**Proof.** For any \( h \in \{h_0, ..., h_{H-1}\} \), we have:
\[ v_h = \sum_{b \sim a} v_b - \frac{1}{K} \sum_{b \not\sim a} v_b \]
\[ = v_a + \sum_{b \sim a \land b \neq a} v_b - \frac{1}{K - 1} \sum_{b \not\sim a} v_b \]

Define:
\[ X_{a,b} = \begin{cases} 
1 & \text{if } b \sim a \\
-\frac{1}{K-1} & \text{otherwise}
\end{cases} \]

Then:
\[ v_h = v_a + \sum_{b \neq a} v_b X_{a,b} \]

Since \( h \) is 4-universal, for any distinct \( a, b \in [u] \), we have:
\[ E[X_{a,b}] = 0 \]
\[ E[X_{a,b}^2] = \frac{1}{K - 1} \]

Additionally, for any distinct \( a, b, c \in [u] \), we have:
\[ E[X_{a,b} X_{a,c}] = 0 \]

Now we are ready to prove the theorem:
\[ E[v_h] = v_a + \sum_{b \neq a} v_b E[X_{a,b}] = v_a \]
\[ \text{Var}(v_h) = E[(v_h - E[v_h])^2] = E\left[\left(\sum_{b \neq a} v_b X_{a,b}\right)^2\right] \]
\[ = \sum_{b \neq a} v_b^2 E[X_{a,b}^2] + \sum_{a, b, c \text{ distinct}} v_b v_c E[X_{a,b} X_{a,c}] \]
\[ = \frac{1}{K - 1} \sum_{b \neq a} v_b^2 \leq \frac{F_2}{K - 1} \]

**Accuracy of \( v_{est} \)**

Further improving accuracy by avoiding extreme estimates, Theorem 2 and 3 summarize the accuracy guarantee of \( v_{est} \).

**Theorem 2.** For any \( a \in [u] \), \( T \in (0, 1) \), and \( \alpha \in [1, \infty) \), if \( |v_a| \geq \alpha \sqrt{T F_2} \), then:
\[ \Pr\left[|v_{est}| \leq T \sqrt{F_2}\right] \leq \left(\frac{1}{2}\right)^{H/2} \frac{1}{(K - 1)(\alpha - 1)^2 T^2} \]

**Proof.** For any \( h \in \{h_0, ..., h_{H-1}\} \), by the Chebyshev inequality, we have:
\[ \Pr\left[|v_h - v_a| \geq (\alpha - 1) T \sqrt{F_2}\right] \leq \frac{\text{Var}(v_h)}{(\alpha - 1)^2 T^2 F_2} \leq \frac{F_2 / (K - 1)}{(\alpha - 1)^2 T^2 F_2} = \frac{1}{(K - 1)(\alpha - 1)^2 T^2} \]

Since \( v_{est} \) is obtained by taking the median of \( H \) copies of \( v_h \), by the Chernoff inequality, we immediately have the result.

**Theorem 3.** For any \( a \in [u] \), \( T \in (0, 1) \), and \( \beta \in [0, 1] \), if \( |v_a| \leq \beta \sqrt{T F_2} \), then:
\[ \Pr\left[|v_{est}| \geq T \sqrt{F_2}\right] \leq \left(\frac{1}{2}\right)^{H/2} \frac{1}{(K - 1)(1 - \beta)^2 T^2} \]

**Proof.** The proof is almost identical and is omitted here for brevity.

**Example:**
Let \( K = 2^{16} \), \( \lambda = 0.05 \), and \( H = 20 \). Theorem 5 states that the probability that our estimate \( F_{est} \) is 5% off its real value \( F_2 \) is below \( 7.7 \times 10^{-14} \).

**Theorem 4.** For any \( \lambda > 0 \), we have:
\[ \Pr\left[|F_{est} - F_2| > \lambda F_2\right] \leq \left(\frac{1}{2}\right)^{H/2} \frac{1}{(K - 1)\lambda^2} \]

**Proof.** By Theorem 4 and the Chebyshev inequality:
\[ \Pr\left[|F_{hi} - F_2| > \lambda F_2\right] \leq \frac{\text{Var}(F_{hi})}{(\lambda F_2)^2} \leq \frac{F_2 / (K - 1)}{(\lambda F_2)^2} = \frac{1}{(K - 1)\lambda^2} \]

Since \( F_{est} \) is the median of \( H \) copies of \( F_{hi} \), by the Chernoff inequality, we immediately obtain the result.