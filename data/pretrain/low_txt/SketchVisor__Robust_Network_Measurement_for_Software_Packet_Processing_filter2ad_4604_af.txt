以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

1. **Centers in the Wild.** 在IMC 2010年会议论文集中。
2. **改进的计数布隆过滤器构建方法。** 在ESA 2006年会议论文集中。
3. **passive/passive 2015 dataset.xml.**
4. F. Bonomi, M. Mitzenmacher, R. Panigrahy, S. Singh, 和 G. Varghese. **An Improved Construction for Counting Bloom Filters.** 在ESA 2006年会议论文集中。
5. **CAIDA匿名互联网追踪数据集2015 DCaida.** http://www.caida.org/data/
6. E. Candes, J. Romberg, 和 T. Tao. **稳健不确定性原理：从高度不完整频率信息中精确重建信号。** IEEE信息论汇刊, 52(2):489-509, 2006.
7. Y.-C. Chen, L. Qiu, Y. Zhang, G. Xue, 和 Z. Hu. **鲁棒网络压缩感知流。** 理论计算机科学, 312(1):3-15, 2004.
8. **Cisco Nexus 1000V交换机。** http://www.cisco.com/c/en/us/products/switches/nexus-1000v-switch-vmware-vsphere/index.html
9. E. Candes 和 T. Tao. **从随机投影中近似最优信号恢复：通用编码策略？** IEEE信息论汇刊, 52(12):5406-5425, 2006.
10. M. Charikar, K. Chen, 和 M. Farach-Colton. **在数据流中查找频繁项。** 在VLDB 2005年会议论文集中。
11. G. Cormode 和 M. Garofalakis. **通过网络的数据流草图绘制：分布式近似查询跟踪。** 在VLDB 2005年会议论文集中。
12. G. Cormode 和 S. Muthukrishnan. **数据流中的显著差异发现。** 在IEEE INFOCOM 2004年会议论文集中。
13. G. Cormode 和 S. Muthukrishnan. **改进的数据流摘要：Count-Min Sketch及其应用。** 算法杂志, 55(1):58-75, 2005.
14. X. Dimitropoulos, P. Hurley, 和 A. Kind. **概率损失计数：一种高效的重击者发现算法。** ACM SIGCOMM计算机通信评论, 38(1):5-5, 2008.
15. M. Dobrescu, N. Egi, K. Argyraki, B.-g. Chun, K. Fall, G. Iannaccone, A. Knies, M. Manesh, 和 S. Ratnasamy. **RouteBricks：利用并行性扩展软件路由器。** 在SOSP 2009年会议论文集中。
16. **DPDK.** http://dpdk.org/
17. C. Eckart 和 G. Young. **一个矩阵被另一个低秩矩阵逼近。** 心理测量学, 1(3):211-218, 1936.
18. C. Estan 和 G. Varghese. **流量测量和计费的新方向：关注大象，忽略老鼠。** ACM计算机系统汇刊, 21(3):270-313, 2003.
19. P. Flajolet 和 G. Nigel Martin. **数据库应用的概率计数算法。** 计算机与系统科学杂志, 31(2):182-209, 1985.
20. N. Handigol, B. Heller, V. Jeyakumar, D. Mazières, 和 N. McKeown. **我知道你的数据包上一跳做了什么：使用数据包历史记录来排除网络故障。** 在NSDI 2014年会议论文集中。
21. Q. Huang 和 P. P. C. Lee. **用于准确且可扩展的网络数据流重击者检测的混合本地和分布式草图设计。** 计算机网络, 91:298-315, 2015.
22. L. Jose, M. Yu, 和 J. Rexford. **在商用交换机上的大规模流量聚合在线测量。** 在USENIX HotICE 2011年会议论文集中。
23. T. Koponen, K. Amidon, P. Balland, M. Casado, A. Chanda, B. Fulton, I. Ganichev, J. Gross, P. Ingram, E. Jackson, A. Lambeth, R. Lenglet, S.-H. Li, A. Padmanabhan, J. Pettit, B. Pfaff, R. Ramanathan, S. Shenker, A. Shieh, J. Stribling, P. Thakkar, D. Wendlandt, A. Yip, 和 R. Zhang. **多租户数据中心的网络虚拟化。** 在NSDI 2014年会议论文集中。
24. A. Kumar, M. Sung, J. J. Xu, 和 J. Wang. **高效准确估计流大小分布的数据流算法。** 在SIGMETRICS 2004年会议论文集中。
25. P. P. C. Lee, T. Bu, 和 G. Chandranmenon. **无锁、缓存高效的多核同步机制，用于线速网络流量监控。** 在IPDPS 2010年会议论文集中。
26. Z. Liu, A. Manousis, G. Vorsanger, V. Sekar, 和 V. Braverman. **一个统领所有草图：重新思考UnivMon的网络流监控。** 在SIGCOMM 2016年会议论文集中。
27. N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, S. Shenker, 和 J. Turner. **OpenFlow：启用校园网络创新。** ACM SIGCOMM计算机通信评论, 38(2):69, 2008.
28. Microsoft Hyper-V虚拟交换机。https://technet.microsoft.com/en-us/library/hh831823.aspx
29. J. Misra 和 D. Gries. **查找重复元素。** 计算机编程科学, 2(2):143-152, 1982.
30. Y. Li, R. Miao, C. Kim, 和 M. Yu. **FlowRadar：更好的数据中心NetFlow。** 在NSDI 2013年会议论文集中。
31. X. Liu, M. Shirazipour, M. Yu, 和 Y. Zhang. **MOZART：时间协调的触发器在数据中心的应用。** 在NSDI 2016年会议论文集中。
32. M. Mitzenmacher. **压缩布隆过滤器。** 在PODC 2001年会议论文集中。
33. M. Mitzenmacher, R. Pagh, 和 N. Pham. **使用奇数草图进行高相似度的有效估计。** 在WWW 2014年会议论文集中。
34. M. Moshref, M. Yu, R. Govindan, 和 A. Vahdat. **DREAM：软件定义测量的动态资源分配。** 在SIGCOMM 2014年会议论文集中。
35. M. Moshref, M. Yu, R. Govindan, 和 A. Vahdat. **SCREAM：软件定义测量的草图资源分配。** 在CoNEXT 2015年会议论文集中。
36. M. Moshref, M. Yu, R. Govindan, 和 A. Vahdat. **Trumpet：及时且精确的触发器在数据中心的应用。** 在SIGCOMM 2016年会议论文集中。
37. S. Narayana, M. T. Arashloo, J. Rexford, 和 D. Walker. **编译路径查询。** 在SIGCOMM 2016年会议论文集中。
38. NetFlow. https://www.ietf.org/rfc/rfc3954.txt
39. OpenvSwitch. http://openvswitch.org
40. perf. http://perf.wiki.kernel.org
41. J. Rasley, B. Stephens, C. Dixon, E. Rozner, W. Felter, K. Agarwal, J. Carter, 和 R. Fonseca. **Planck：毫秒级的商品网络监控和控制。** 在SIGCOMM 2014年会议论文集中。
42. B. Recht, M. Fazel, 和 P. A. Parrilo. **通过核范数最小化保证线性矩阵方程的最小秩解。** SIAM综述, 52(3):471-501, 2010.
43. L. Rizzo. **Netmap：一种新型的快速数据包I/O框架。** 在ATC 2012年会议论文集中。
44. R. Schweller, Z. Li, Y. Chen, Y. Gao, A. Gupta, Y. Zhang, P. Dinda, M. Y. Kao, 和 G. Memik. **可逆草图：支持高速数据流的监控和分析。** IEEE/ACM网络事务, 15(5):1059-1072, 2007.
45. V. Sekar, M. K. Reiter, W. Willinger, H. Zhang, R. R. Kompella, 和 D. G. Andersen. **cSAMP：一个全网流监控系统。** 在USENIX NSDI 2008年会议论文集中。
46. V. Sekar, M. K. Reiter, 和 H. Zhang. **重新审视网络流监控的极简主义方法。** 在IMC 2010年会议论文集中。
47. sFlow. http://www.sflow.org/
48. Snort. https://www.snort.org
49. SPAN. http://www.cisco.com/c/en/us/tech/lan-switching/switched-port-analyzer-span/index.html
50. J. Suh, T. T. Kwon, C. Dixon, W. Felter, 和 J. Carter. **OpenSample：一个低延迟、基于采样的商品SDN测量平台。** 在ICDCS 2014年会议论文集中。
51. svdcomp. http://www.public.iastate.edu/~dicook/JSS/paper/code/svd.c
52. K. Thompson, G. J. Miller, 和 R. Wilder. **广域互联网流量模式和特征。** IEEE网络, 11:10-23, 1997.
53. K.-Y. Whang, B. T. Vander-Zanden, 和 H. M. Taylor. **数据库应用的线性时间概率计数算法。** ACM数据库系统汇刊, 15(2):208-229, 1990.
54. M. Yu, L. Jose, 和 R. Miao. **使用OpenSketch进行软件定义的流量测量。** 在NSDI 2013年会议论文集中。
55. L. Yuan, C.-N. Chuah, 和 P. Mohapatra. **ProgME：迈向可编程网络测量。** 在SIGCOMM 2007年会议论文集中。
56. ZeroMQ. http://zeromq.org
57. Y. Zhang, L. Breslau, V. Paxson, 和 S. Shenker. **关于互联网流速率的特征和起源。** 在ACM SIGCOMM 2002年会议论文集中。
58. Y. Zhang, M. Roughan, N. Duffield, 和 A. Greenberg. **从链路负载快速准确地计算大规模IP流量矩阵。** 在SIGMETRICS 2003年会议论文集中。
59. Y. Zhang, M. Roughan, W. Willinger, 和 L. Qiu. **时空压缩感知和互联网流量矩阵。** 在SIGCOMM 2009年会议论文集中。
60. Y. Zhu, N. Kang, J. Cao, A. Greenberg, G. Lu, R. Mahajan, D. Maltz, L. Yuan, M. Zhang, B. Y. Zhao, 和 H. Zheng. **大型数据中心网络中的数据包级遥测。** 在SIGCOMM 2015年会议论文集中。

### 附录A：θ和e的推导

我们推导出Algorithm 1中ComputeThresh部分的θ和e。不失一般性，我们将输入的k+1个值表示为a1, a2, ..., ak+1，其中a1 ≥ a2 ≥ ... ≥ ak+1。我们将这些输入拟合到幂律分布；即对于某个随机变量Y，我们有Pr{Y > y} = λy^θ，其中λ ≤ 1且θ > 0。

假设：
- Pr{Y > (a1 - 1)} = λ(a1 - 1)^θ ≈ 1
- Pr{Y > (a2 - 1)} = λ(a2 - 1)^θ ≈ 2/n

通过将第一个方程除以第二个方程，我们得到：
\[ \frac{(a1-1)^\theta}{(a2-1)^\theta} = \frac{1}{2/n} \]
令 b = (a1-1)/(a2-1)，则有：
\[ b^\theta = \frac{n}{2} \]
因此：
\[ \theta = \log_b \left( \frac{n}{2} \right) \]

为了计算e，我们需要确保它大于最小值ak+1，以便始终能够踢出k+1个输入（即哈希表H中的前k个流和新流）中的最小流；另一方面，它不能太大，以避免踢出较大的流。因此，我们计算e，使得踢出任何大于ak+1的流的概率不大于某个小参数δ（例如，我们可以设置δ = 0.05）。该概率计算如下：
\[ \text{Pr}\{Y > e | Y > a_{k+1}\} = \frac{\text{Pr}\{Y > a_{k+1}\} - \text{Pr}\{Y > e\}}{\text{Pr}\{Y > a_{k+1}\}} \]
\[ = \frac{\lambda a_{k+1}^\theta - \lambda e^\theta}{\lambda a_{k+1}^\theta} \]
\[ = 1 - \left( \frac{e}{a_{k+1}} \right)^\theta \]

将右侧设为δ，我们得到：
\[ e = a_{k+1} \cdot \left( \frac{1}{1 - \delta} \right)^{1/\theta} \]

### 附录B：引理4.1的证明

我们证明引理4.1的三个性质（见第4节）。

(i) 如果流f的大小vf > E，则它必须在H中被跟踪。
我们的快速路径算法在所有流踢出操作后最多减少E（Algorithm 1中的第14-17行）。对于任何大小vf > E的流f，其残余计数rf至少为vf - E。由于只有当残余字节数达到零时才踢出流，因此该流必须在H中被跟踪。

(ii) 如果f ∈ H，则rf + df ≤ vf ≤ rf + df + ef。
第一个不等式成立是因为rf + df是f插入H后的精确字节数。另一方面，在f插入之前缺失的字节数最多为ef。因此，总字节数vf（包括f插入前和插入后的字节数）最多为rf + df + ef。

(iii) 对于任何流，其最大可能误差有界为O(V/k)。
流f的误差小于ef ≤ E。因此，我们只需要证明E是有界的。我们的证明假设参数估计得到相同的参数θ，尽管实际估计的θ可能会略有不同。

我们在踢出操作中计算减去的字节数。由于我们选择的阈值e大于最小值ak+1，实际减去的字节数必须大于ak+1。如果我们使用ak+1作为阈值，则总的减去的字节数正好是(k + 1)ak+1 = (k + 1)V/(k + 1)。这意味着实际减去的字节数至少为(k + 1)ak+1 = (k + 1)V/(k + 1)。

另一方面，所有踢出操作中的总减去字节数不应超过总字节数V。因此，我们有：
\[ E \leq \theta \sqrt{\frac{1 - \delta}{e}} \cdot \frac{V}{k + 1} \]

结果表明，我们top-k算法中任何流的最大可能误差最多为θ√(1 - δ)V/(k + 1)。注意这略大于Misra-Gries算法的最坏情况误差V/(k + 1)。然而，在Misra-Gries算法中，所有流共享最坏情况误差V/(k + 1)。相比之下，我们的算法通过三个计数器估计每个流的下界和上界，最大误差为ef，这在不同的流之间变化。实验表明，我们的top-k算法在实践中可以实现比Misra-Gries算法更小的每流误差界限（§7.5）。我们将平均误差的理论分析留作未来的工作。

---