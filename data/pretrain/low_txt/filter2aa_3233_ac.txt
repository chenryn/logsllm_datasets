### Continuous Evaluation of Assets and Subjects
Continuous evaluation should be maintained for the duration of the session. Enterprise-owned devices may have artifacts that enable authentication and provide a higher confidence level compared to requests from non-enterprise-owned devices. Subject credentials alone are insufficient for device authentication to an enterprise resource.

### Enterprise Resources and Infrastructure
Not all enterprise resources reside on enterprise-owned infrastructure. These resources include remote enterprise subjects and cloud services. Enterprise-owned or managed assets may need to use local (i.e., non-enterprise) networks for basic connectivity and network services, such as DNS resolution.

### Trust in Local Network Connections
Remote enterprise subjects and assets should not fully trust their local network connections. Remote subjects should assume that the local (i.e., non-enterprise-owned) network is hostile. Assets should assume that all traffic is being monitored and potentially modified. All connection requests should be authenticated and authorized, and all communications should be conducted in the most secure manner possible, providing confidentiality, integrity protection, and source authentication. Refer to the principles of Zero Trust Architecture (ZTA) for more details.

### Consistent Security Policy and Posture
Assets and workflows moving between enterprise and non-enterprise infrastructure should maintain a consistent security policy and posture. This includes devices moving from enterprise networks to non-enterprise networks (e.g., remote users) and workloads migrating from on-premises data centers to non-enterprise cloud instances.

### Logical Components of Zero Trust Architecture
A ZTA deployment in an enterprise comprises several logical components, which can be operated as on-premises services or through cloud-based services. The conceptual framework model in Figure 2 illustrates the basic relationships and interactions between these components. Note that this is an ideal model showing logical components and their interactions. From Figure 1, the Policy Decision Point (PDP) is divided into two logical components: the Policy Engine (PE) and the Policy Administrator (PA).

#### Core Zero Trust Logical Components
- **Policy Engine (PE):** This component is responsible for the final decision to grant access to a resource for a given subject. The PE uses enterprise policy and input from external sources (e.g., Continuous Diagnostics and Mitigation (CDM) systems, threat intelligence services) to make decisions. It is paired with the Policy Administrator (PA), which executes the decision.
- **Policy Administrator (PA):** This component establishes and/or shuts down the communication path between a subject and a resource. It generates session-specific authentication tokens or credentials used by clients to access enterprise resources. The PA communicates with the Policy Enforcement Point (PEP) via the control plane.
- **Policy Enforcement Point (PEP):** This system enables, monitors, and terminates connections between a subject and an enterprise resource. The PEP communicates with the PA to forward requests and receive policy updates. It can be a single logical component or split into client and resource-side components.

### Data Sources for Access Decisions
In addition to the core components, several data sources provide input and policy rules used by the policy engine when making access decisions:
- **Continuous Diagnostics and Mitigation (CDM) System:** Gathers information about the current state of enterprise assets and applies updates to configurations and software components.
- **Industry Compliance System:** Ensures the enterprise remains compliant with regulatory requirements.
- **Threat Intelligence Feeds:** Provides information from internal and external sources to help the policy engine make access decisions.
- **Network and System Activity Logs:** Aggregates asset logs, network traffic, and resource access actions to provide real-time feedback on the security posture.
- **Data Access Policies:** Define the attributes, rules, and policies for access to enterprise resources.
- **Enterprise Public Key Infrastructure (PKI):** Generates and logs certificates issued by the enterprise to resources, subjects, services, and applications.
- **Identity Management System:** Creates, stores, and manages enterprise user accounts and identity records.
- **Security Information and Event Management (SIEM) System:** Collects security-centric information for analysis and refinement of policies.

### Variations of Zero Trust Architecture Approaches
There are several ways an enterprise can implement a ZTA, each varying in the components used and the main source of policy rules. These approaches include enhanced identity governance, logical micro-segmentation, and network-based segmentation.

#### Enhanced Identity Governance
This approach uses the identity of actors as the key component of policy creation. Access policies are based on identity and assigned attributes, with other factors like device status and environmental factors influencing the final access decision.

#### Micro-Segmentation
This approach involves placing individual or groups of resources on unique network segments protected by gateway security components. The PEPs dynamically grant access to individual requests, and the approach requires an identity governance program to function effectively.

#### Network Infrastructure and Software-Defined Perimeters
This approach uses the network infrastructure to implement a ZTA, often using overlay networks and concepts from Software-Defined Networks (SDN) and Intent-Based Networking (IBN). The PA acts as the network controller, setting up and reconfiguring the network based on the PE's decisions.

### Deployed Variations of the Abstract Architecture
The logical components of ZTA do not necessarily need to be unique systems. A single asset may perform multiple roles, and a logical component may consist of multiple hardware or software elements. There are several deployment models, including:

#### Device Agent/Gateway-Based Deployment
In this model, the PEP is divided into two components: a device agent and a gateway. The agent coordinates connections, and the gateway acts as a proxy for the resource, communicating with the policy administrator to allow only approved communication paths.

#### Enclave-Based Deployment
This model is a variation of the device agent/gateway model, where the gateway components reside at the boundary of a resource enclave. This is useful for enterprises with legacy applications or on-premises data centers that cannot have individual gateways in place.

#### Resource Portal-Based Deployment
In this model, the PEP is a single component acting as a gateway for subject requests. The gateway portal can be for an individual resource or a secure enclave for a collection of resources used for a single business function.

For more detailed information, refer to NIST SP 800-207, available free of charge from: [https://doi.org/10.6028/NIST.SP.800-207](https://doi.org/10.6028/NIST.SP.800-207).