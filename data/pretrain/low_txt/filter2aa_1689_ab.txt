# Large Integers and Precision Loss

Large integers may not noticeably be affected by the loss of small amounts. 

## Demo

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Profit with Loss of Precision on Large Integers

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Random Numbers

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Random Numbers
- **Present in Server-Side Processors**
- **Not all random number generators are suitable for cryptographic purposes.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Random Numbers in XSLT
- **It is a function from EXSLT (an extension to XSLT).**
- **The `math:random()` function returns a random number between 0 and 1.**
- **A random number is defined as a number that lacks any discernible pattern.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Random Numbers in XSLT (Continued)
- **We use pseudo-random numbers for simple tasks (e.g., `random.random()` in Python).**
- **For sensitive applications, we rely on cryptographically secure pseudo-random numbers (e.g., `random.SystemRandom()` in Python).**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Pseudo-Random Number Generators in XSLT Implementations
- **libxslt, xalan-c, xalan-j, saxon: All use pseudo-random number generators.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Only Pseudo-Random Numbers for XSLT
- **`rand()`, `srand()`, `java.lang.Math.Random()`: These implementations return only pseudo-random values.**
- **According to the man page of `rand()` and `srand()`, these are described as "bad random number generators."**
- **These values should not be used for cryptographic purposes.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Initialization Vector

### What Happens if There is No Initialization Vector?

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Initialization Vector (Continued)
- **Without an initialization vector, you may predict the generated values.**
- **Random functions require an initial value to produce random numbers.**
- **Let's examine which random functions use an initialization vector.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Initialization Vectors in XSLT Implementations
- **libxslt: Without IV**
- **xalan-c, xalan-j, saxon: With IV**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Output of `random()` in libxslt
- **Create a simple XSLT to observe the output of `math:random()`.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Output of `random()` in libxslt (Continued)
- **True randomness means no discernible pattern. Can you identify a pattern in the following two executions of libxslt?**
- **They produce the same output!**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Comparison: Python `random.random()` vs. libxslt `Math:random()`
- **libxslt: Execution #1, Execution #2**
- **Python: Execution #1, Execution #2**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### No Initialization Vector for libxslt
- **Without an external seed value (such as time), a pseudo-random generator will produce the same sequence of numbers every time it is initiated.**
- **If `math:random()` in libxslt is used for sensitive information, it may be easy to deduce the original plaintext value.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Summary of Random Number Generators
| Type | IV | Implementation |
|------|----|----------------|
| Server | xalan-c (Apache) | Pseudo-random | Yes |
| Server | xalan-j (Apache) | Pseudo-random | Yes |
| Server | saxon | Pseudo-random | Yes |
| Server | xsltproc | Pseudo-random | No |
| Server | PHP | Pseudo-random | No |
| Server | Python | Pseudo-random | No |
| Server | Perl | Pseudo-random | No |
| Server | Ruby | Pseudo-random | No |

**TL;DR: Values may be predictable.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Violating the Same-Origin Policy

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Violating the Same-Origin Policy
- **Present in client-side processors (web browsers).**
- **The Same-Origin Policy restricts web pages from reading information from a different origin.**
- **Let's temporarily ignore this policy.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### What is the Same-Origin Policy?
- **An origin is defined by the scheme, host, and port of a URL.**
- **Documents from different origins are isolated from each other.**
- **JavaScript is commonly used in the DOM, but not exclusively.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Valid Same-Origin Policy Scenarios
- **http://example.com:80/foo**
- **http://example.com:80/private/ or http://example.com:80/images/**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Invalid Same-Origin Policy Scenarios
- **Different Scheme: https://example.com:80**
- **Different Hostname: http://evil.com:80**
- **Different Port: http://example.com:8080**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### XSLT Functions for Reading XML
- **`document()`: Allows access to XML documents other than the main source document.**
- **`copy-of`: Copies a node-set to the result tree without converting it to a string.**
- **`value-of`: Creates a text node in the result tree and converts it to a string.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Accessing Private Information on Bing.com
- **Bing.com uses XHTML, and I am logged in.**
- **How can I access private information?**
- **DOM element containing the name is called "id_n".**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Putting It All Together

**Demo!**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Summary of Violating the Same-Origin Policy
- **Safari allows cross-origin information.**
- **Internet Explorer shows a warning message, retrieves data, but there is no private information.**
- **Chrome, Firefox, and Opera do not retrieve data.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Information Disclosure and File Reading through Errors

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Information Disclosure and File Reading through Errors
- **Present in both server-side and client-side processors.**
- **Focus on server-side processors because they have file access.**
- **XSLT v1.0 does not have functions to read plain text files.**
- **W3C states this is not possible, but what if...**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### XSLT Functions to Read Files
- **Read other XML documents: `document()`**
- **Read other XSLT documents: `include()`, `import()`**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Creating a Simple Text File
```bash
$ echo -e "line 1\nline 2\nline 3" > testfile
$ cat testfile
line 1
line 2
line 3
```

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Reading the Text File Using `document()`
- **"If there is an error retrieving the resource, the XSLT processor may signal an error; if it does not, it must return an empty node-set."**
- **Expected Behavior: Xalan-C, Xalan-J, and Saxon output: "Content is not allowed in prolog."**
- **Ruby returns an empty node-set.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Reading the Text File Using `document()` (Continued)
- **Unexpected Behavior: libxslt, xsltproc, PHP, and Perl output the first line of the test file.**
- **Example:**
  ```xml
  testfile:1: parser error : Start tag expected, '<' not found
  line 1
  ^ 
  ```

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Maximizing Results with One Line
- **These processors expose the first line of the test file.**
- **Which files have interesting first lines?**
  - **/etc/passwd: Linux root password**
  - **/etc/shadow: Linux root password**
  - **.htpasswd: Apache password**
  - **.pgpass: PostgreSQL password**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### XML Document Generation... Failed
- **Reading /etc/passwd using xsltproc:**
- **Reading .htpasswd using PHP:**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Got Root? Grab /etc/shadow
- **Reading /etc/shadow using Ruby:**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

### Summary of Reading Files
| Function | `document()` | `import()` | `include()` |
|----------|--------------|------------|-------------|
| Server   | xalan-c (Apache) | No | No | No |
| Server   | xalan-j (Apache) | No | No | No |
| Server   | saxon | No | No | No |
| Server   | xsltproc | Yes | Yes | Yes |
| Server   | PHP | Yes | Yes | Yes |
| Server   | Python | No | No | No |
| Server   | Perl | Yes | Yes | Yes |
| Server   | Ruby | No | Yes | Yes |

**TL;DR: You can read the first line of a non-XML file through errors.**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Conclusions
- **When the attacker controls either the XML or the XSLT, they may compromise the system's security.**
- **Confidentiality and integrity can also be affected without controlling either document.**
- **Review your code (or someone else's code).**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Questions?

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**

## Thank You
- **Alejandro Hernandez**
- **Ariel Sanchez**
- **Carlos Hollman**
- **Cesar Cerrudo**
- **Chris Valasek**
- **Diego Madero**
- **Elizabeth Weese**
- **Jennifer Steffens**
- **Joseph Tartaro**
- **Lucas Apa**
- **Mariano Nogueira**
- **Matias Blanco**
- **Sofiane Talmat**
- **Yudell Rojas**

**IOActive, Inc. Copyright ©2015. All Rights Reserved.**