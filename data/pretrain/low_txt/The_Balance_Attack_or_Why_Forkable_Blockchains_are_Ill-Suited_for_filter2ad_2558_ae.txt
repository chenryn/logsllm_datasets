### Distributed Service Consistency, Availability, and Partition Tolerance

A distributed service must ensure (i) **consistency**: providing the correct response to a request; (ii) **availability**: responding to each request; and (iii) **partition tolerance**: handling message delays and losses. Intuitively, it seems natural for a distributed system to cease functioning when communication between its participants is disrupted. However, the consequences of delayed communication are less clear. In the context of forkable blockchains, such delays can lead to asset losses.

### Solutions in Distributed Computing

The literature on distributed computing offers numerous solutions that prioritize consistency over availability. For consortium and private blockchains, which typically involve a known number \( n \) of participants, Byzantine consensus algorithms can be employed to mitigate balance attacks, provided that fewer than \( \frac{n}{3} \) processes are under adversarial control. Several blockchains, including Hyperledger, Tendermint, and Corda, have attempted to implement the classic Byzantine fault-tolerant (BFT) algorithm, PBFT [8]. However, PBFT's performance degrades with an increasing number of participants [10].

Hierarchical approaches have been proposed to enhance PBFT's performance [26], but they assume synchronous communication. Another attempt [29] improved performance by leveraging a more recent BFT algorithm [30], although this algorithm is probabilistic [31]. A new deterministic BFT algorithm specifically designed for blockchains has recently been introduced [9]. While this algorithm appears efficient and is guaranteed to terminate, it has not yet been empirically evaluated to our knowledge.

### Related Work

Traditional attacks on Bitcoin often involve waiting for external actions, such as the shipment of goods, in response to a transaction. Discarding a committed transaction in Bitcoin without a quarter of the mining power requires additional control, such as over the network. It is well-established that delaying network messages can impact Bitcoin [11, 37, 39, 20, 36]. Decker and Wattenhofer observed that Bitcoin suffers from block propagation delays [11]. Godel et al. [20] analyzed the effect of these delays using a Markov process. Garay et al. [17] investigated Bitcoin in a synchronous communication setting, though this setting is often considered too restrictive [7].

Pass et al. extended the analysis to scenarios where the bound on message delivery is unknown, demonstrating that Bitcoin's cryptographic difficulty must be adjusted based on the communication delay bounds [37]. These studies highlight a critical limitation of Bitcoin: delayed block propagation can waste the computational effort of honest nodes by causing them to mine unnecessary blocks at the same index in the chain. In such cases, an attacker does not need more mining power than the honest miners; they simply need to grow their local blockchain faster than the longest branch of the honest blockchain.

Ethereum introduced the GHOST protocol to address this issue [39]. The GHOST protocol accounts for blocks proposed by honest miners across multiple branches of the blockchain to select the main branch. As a result, merely growing a branch quickly is insufficient for an Ethereum attacker to double-spend. Despite differences in propagation strategies between Ethereum and Bitcoin, some network attacks against Bitcoin could also affect Ethereum. In the Eclipse attack [22], an attacker forces the victim to connect to eight malicious identities. An Ethereum adaptation would require forging three times as many identities and forcing as many connections, given the default number of clients is 25. Apostolaki et al. [1] proposed a BGP hijacking attack, showing that the number of Internet prefixes needed for a successful attack depends on the distribution of mining power. BGP-hijacking typically requires control of network operators but is independent of Bitcoin and could potentially be exploited to delay network messages and execute a Balance attack in Ethereum.

### Conclusion

In this paper, we introduce the Balance attack, a new method that combines mining power with communication delay to compromise prominent forkable blockchain protocols like Ethereum and Bitcoin. This attack involves convincing honest nodes to disregard specific proposed blocks, leading to double-spending. We analyze the trade-off in Ethereum between communication delay and mining power, confirming that forkable designs are unsuitable for consortium and private blockchains.

Future work could extend this research in several ways. First, the current context assumes medium-scale settings where participant statistics are easily collected. It would be interesting to explore scenarios where the mining power of participants is unknown. Second, the success of the Balance attack despite low mining power relies on communication delays between subgraphs. Comparing denial-of-service and man-in-the-middle attacks to evaluate their effectiveness in introducing such delays is a potential next step.

### Acknowledgements

We thank the R3 consortium for sharing information about their Ethereum testnet and Seth Gilbert and Tim Swanson for their comments on an earlier version of this paper.

### References

[1] M. Apostolaki, A. Zohar, and L. Vanbever, “Hijacking Bitcoin: Large-scale network attacks on cryptocurrencies,” arXiv, Tech. Rep. 1605.07524, 2016.

[2] T. Bamert, C. Decker, L. Elsen, R. Wattenhofer, and S. Welten, “Have a snack, pay with bitcoins,” in 13th IEEE International Conference on Peer-to-Peer Computing, IEEE P2P 2013, Trento, Italy, September 9-11, 2013, Proceedings, 2013, pp. 1–5.

[3] A. Black, “Hashcash - a denial of service counter-measure,” Cypherspace, Tech. Rep., 2002. [Online]. Available: http://www.hashcash.org/papers/hashcash.pdf

[4] E. Brewer, “Towards robust distributed systems,” in Proc. 19th ACM Symposium on Principles of Distributed Computing (PODC), July 2000.

[5] R. G. Brown, J. Carlyle, I. Grigg, and M. Hearn, “Corda: An introduction,” 2016.

[6] V. Buterin, “Ethereum 2.0 mauve paper,” in Ethereum Developer Conference 2, September 2016.

[7] C. Cachin, “Distributing trust on the internet,” in Proceedings of the International Conference on Dependable Systems and Networks (DSN), 2001, pp. 183–192.

[8] M. Castro and B. Liskov, “Practical byzantine fault tolerance and proactive recovery,” ACM Trans. Comput. Syst., vol. 20, no. 4, pp. 398–461, 2002.

[9] T. Crain, V. Gramoli, M. Larrea, and M. Raynal, “(leader/randomization/signature)-free byzantine consensus for consortium blockchains,” arXiv, Tech. Rep. 1702.03068, 2017.

[10] K. Croman, C. Decker, I. Eyal, A. E. Gencer, A. Juels, A. Kosba, A. Miller, P. Saxena, E. Shi, E. G. Sirer, D. Song, and R. Wattenhofer, “On scaling decentralized blockchains,” in 3rd Workshop on Bitcoin Research (BITCOIN), Barbados, February 2016.

[11] C. Decker and R. Wattenhofer, “Information propagation in the Bitcoin network,” in Proc. of the IEEE International Conference on Peer-to-Peer Computing, 2013.

[12] C. Dwork, N. Lynch, and L. Stockmeyer, “Consensus in the presence of partial synchrony,” J. ACM, vol. 35, no. 2, Apr. 1988.

[13] I. Eyal, A. E. Gencer, E. G. Sirer, and R. van Renesse, “Bitcoin-NG: A scalable blockchain protocol,” in 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2016.

[14] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is vulnerable,” in Proceedings of the 18th Int’l Conference Financial Cryptography and Data Security (FC), 2014, pp. 436–454.

[29] A. Miller, Y. Xia, K. Croman, E. Shi, and D. Song, “The honey badger of BFT protocols,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2016, pp. 31–42.

[15] H. Finney, “Finney’s attack,” February 2011. [Online]. Available: https://bitcointalk.org/index.php?topic=3441.msg48384#msg48384

[16] M. J. Fischer, N. A. Lynch, and M. S. Paterson, “Impossibility of distributed consensus with one faulty process,” J. ACM, vol. 32, no. 2, pp. 374–382, Apr. 1985.

[17] J. A. Garay, A. Kiayias, and N. Leonardos, “The Bitcoin backbone protocol: Analysis and applications,” in 34th Annual Int’l Conf. on the Theory and Applications of Crypto. Techniques, 2015, pp. 281–310.

[18] A. Gervais, G. O. Karame, K. Wüst, V. Glykantzis, H. Ritzdorf, and S. Capkun, “On the security and performance of proof of work blockchains,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2016, pp. 3–16.

[19] S. Gilbert and N. Lynch, “Brewer’s conjecture and the feasibility of consistent, available, partition-tolerant web services,” ACM SIGACT News, vol. 33, pp. 51–59, 2002.

[20] J. Göbel, H. Keeler, A. Krzesinski, and P. Taylor, “Bitcoin blockchain dynamics: The selfish-mine strategy in the presence of propagation delay,” Performance Evaluation, July 2016.

[21] V. Gramoli, “On the danger of private blockchains,” in Workshop on Distributed Cryptocurrencies and Consensus Ledgers (DCCL’16), 2016.

[30] A. Mostéfaoui, H. Moumen, and M. Raynal, “Signature-free asynchronous byzantine consensus with T < N/3 and O(N^2) messages,” in Proceedings of the 2014 ACM Symposium on Principles of Distributed Computing, ser. PODC ’14. New York, NY, USA: ACM, 2014, pp. 2–9. [Online]. Available: http://doi.acm.org/10.1145/2611462.2611468

[31] ——, “Signature-free asynchronous binary byzantine consensus with T < N/3, O(N^2) messages, and O(1) expected time,” J. ACM, vol. 62, no. 4, pp. 31:1–31:21, Sep. 2015.

[32] R. Motwani and P. Raghavan, Randomized Algorithms. Cambridge University Press, 1995.

[33] S. Nakamoto, “Bitcoin: a peer-to-peer electronic cash system,” 2008, http://www.bitcoin.org.

[34] C. Natoli and V. Gramoli, “The balance attack against proof-of-work blockchains: The R3 testbed as an example,” arXiv, Tech. Rep. 1612.09426, 2016.

[35] ——, “The blockchain anomaly,” in Proceedings of the 15th IEEE International Symposium on Network Computing and Applications (NCA’16), Oct 2016.

[36] K. Nayak, S. Kumar, A. Miller, and E. Shi, “Stubborn mining: Generalizing selfish mining and combining with an eclipse attack,” in IEEE European Symposium on Security and Privacy, EuroS&P 2016, Saarbrücken, Germany, March 21-24, 2016, 2016, pp. 305–320.

[22] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse attacks on Bitcoin’s peer-to-peer network,” in 24th USENIX Security Symposium, 2015, pp. 129–144.

[37] R. Pass, L. Seeman, and A. Shelat, “Analysis of the blockchain protocol in asynchronous networks,” Cryptology ePrint Archive, Tech. Rep. 454, 2016.

[23] K. J., “Tendermint: Consensus without mining v.0.7,” 2016.

[24] G. Karame, E. Androulaki, and S. Capkun, “Two bitcoins at the price of one? double-spending attacks on fast payments in Bitcoin,” IACR Cryptology ePrint Archive, vol. 2012, p. 248, 2012.

[25] P. J. and Litke, “BGP hijacking for cryptocurrency profit,” August 2014. [Online]. Available: https://www.secureworks.com/research/bgp-hijacking-for-cryptocurrency-profit

[26] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Saxena, “A secure sharding protocol for open blockchains,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, 2016, pp. 17–30.

[27] S. Micali, “Algorand: The efficient and democratic ledger. corr abs/1607.01341,” arXiv, Tech. Rep. 1607.01341, 2016.

[28] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring, and B. Bhattacharjee, “Discovering Bitcoin’s network topology and influential nodes,” University of Maryland, Tech. Rep., 2015.

[38] M. Rosenfeld, “Analysis of hashrate-based double-spending,” 2012.

[39] Y. Sompolinsky and A. Zohar, “Secure high-rate transaction processing in Bitcoin,” in Financial Cryptography and Data Security - 19th International Conference, FC 2015, San Juan, Puerto Rico, January 26-30, 2015, Revised Selected Papers, 2015, pp. 507–527.

[40] vector76, “The vector76 attack,” August 2011. [Online]. Available: https://bitcointalk.org/index.php?topic=36788.msg463391#msg463391

[41] G. Wood, “Ethereum: A secure decentralised generalised transaction ledger,” 2015, yellow paper.