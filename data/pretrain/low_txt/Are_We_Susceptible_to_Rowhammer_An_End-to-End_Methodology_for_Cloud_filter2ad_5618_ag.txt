以下是优化后的参考文献列表，使其更加清晰、连贯和专业：

1. H. Gomez, A. Amaya, and E. Roa, “DRAM Row-hammer Attack Reduction Using Dummy Cells,” in NORCAS, 2016.
2. S.-L. Gong, “Memory Protection Techniques for DRAM Scaling-Induced Errors,” Ph.D. dissertation, University of Texas at Austin, 2018.
3. D. Goodin, “Once Thought Safe, DDR4 Memory Shown to be Vulnerable to Rowhammer,” *Ars Technica*, 2016. [Online]. Available: https://arstechnica.com/information-technology/2016/03/once-thought-safe-ddr4-memory-shown-to-be-vulnerable-to-rowhammer/
4. Google Project Zero, “Exploiting the DRAM Rowhammer Bug to Gain Kernel Privileges,” 2015. [Online]. Available: https://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html
5. M. Greenberg, “Row Hammering: What It Is and How Hackers Could Use It to Gain Access to Your System,” *Synopsys Blogs*, 2015. [Online]. Available: https://blogs.synopsys.com/committedtomemory/2015/03/09/row-hammering-what-it-is-and-how-hackers-could-use-it-to-gain-access-to-your-system/
6. Z. Greenfield, K. S. Bains, S. Theodore, C. Mozak, and J. B. Halbert, “Row Hammer Condition Monitoring,” US Patent 8,938,573, 2015.
7. D. Gruss, “Rowhammer Attacks: An Extended Walkthrough Guide,” 2017. [Online]. Available: https://gruss.cc/files/sba.pdf
8. D. Gruss, M. Lipp, M. Schwarz, D. Genkin, J. Juffinger, S. O’Connell, W. Schoechl, and Y. Yarom, “Another Flip in the Wall of Rowhammer Defenses,” in IEEE S&P, 2018.
9. D. Gruss, C. Maurice, and S. Mangard, “Rowhammer.js: A Remote Software-Induced Fault Attack in JavaScript,” in DIMVA, 2016.
10. H. Hassan et al., “SoftMC: A Flexible and Practical Open-Source Infrastructure for Enabling Experimental DRAM Studies,” in HPCA, 2017.
11. Hewlett-Packard Enterprise, “HP Moonshot Component Pack Version 2015.05.0,” 2015. [Online]. Available: http://h17007.www1.hp.com/us/en/enterprise/servers/products/moonshot/component-pack/index.aspx
12. C.-S. Hou, Y.-X. Chen, J.-F. Li, C.-Y. Lo, D.-M. Kwai, and Y.-F. Chou, “A Built-in Self-Repair Scheme for DRAMs with Spare Rows, Columns, and Bits,” in ITC, 2016.
13. Intel, “5th Generation Intel Core Processor Family Datasheet,” 2015. [Online]. Available: https://www.intel.com/content/www/us/en/products/docs/processors/core/5th-gen-core-family-datasheet-vol-1.html
14. ——, “6th Generation Intel Core Processor Family Datasheet,” 2015. [Online]. Available: http://www.intel.com/content/www/us/en/processors/core/desktop-6th-gen-core-family-datasheet-vol-1.html
15. ——, “8th Generation Intel Core Processor Families,” Vol. 1, pp. 21–22, 2018.
16. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2B, pp. 4–92, 2018.
17. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2A, pp. 3–469, 2018.
18. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2C, pp. 5–568, 2018.
19. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2A, pp. 4–22, 2018.
20. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2A, pp. 3–529, 2018.
21. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2A, pp. 4–599, 2018.
22. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” Vol. 2A, pp. 3–141, 2018.
23. ——, “Intel 64 and IA-32 Architectures Optimization Reference Manual,” 2019. [Online]. Available: https://software.intel.com/en-us/forums/software-tuning-performance-optimization-platform-monitoring/topic/712498
24. ——, “Intel 64 and IA-32 Architectures Software Developer’s Manual,” pp. 11–8, 2019.
25. ——, “Memory Error Injection (MEI) Test Card and Utility,” 2019. [Online]. Available: https://designintools.intel.com/MEI Test Card and Utility p/stlgrn61.htm
26. Intel Developer Zone, “My Summary of clflush and clflushopt,” 2017. [Online]. Available: https://software.intel.com/en-us/forums/software-tuning-performance-optimization-platform-monitoring/topic/712498
27. G. Irazoqui, T. Eisenbarth, and B. Sunar, “Systematic Reverse Engineering of Cache Slice Selection in Intel Processors,” in DSD, 2015.
28. G. Irazoqui, T. Eisenbarth, and B. Sunar, “MASCAT: Stopping Microarchitectural Attacks Before Execution,” IACR, 2016.
29. S. Islam, A. Moghimi, I. Bruhns, M. Krebbel, B. Gulmezoglu, T. Eisenbarth, and B. Sunar, “SPOILER: Speculative Load Hazards Boost Rowhammer and Cache Attacks,” arxiv.org, 2019.
30. N. Izzo, “Reliably Achieving and Efficiently Preventing Rowhammer Attacks,” Ph.D. dissertation, Politecnico Milano, 2017.
31. Y. Jang, J. Lee, S. Lee, and T. Kim, “SGX-Bomb: Locking Down the Processor via Rowhammer Attack,” in SysTEX, 2017.
32. JEDEC, “Double Data Rate 3 (DDR3) SDRAM Standard,” 2012.
33. ——, “Double Data Rate 4 (DDR4) SDRAM Standard,” 2012.
34. S. Ji, Y. Ko, S. Oh, and J. Kim, “Pinpoint Rowhammer: Suppressing Unwanted Bit Flips on Rowhammer Attacks,” in Asia CCS, 2019.
35. A. K. Jones, R. Melhem, and D. Kline, “Holistic Energy Efficient Crosstalk Mitigation in DRAM,” in IGSC, 2017.
36. M. Jung, C. C. Rheinländer, C. Weis, and N. Wehn, “Reverse Engineering of DRAMs: Row Hammer with Crosshair,” in MEMSYS, 2016.
37. D. Kaseridis, J. Stuecheli, and L. Kurian John, “Minimalist Open-page: A DRAM Page-mode Scheduling Policy for the Many-core Era,” in MICRO, 2011.
38. S. Khan, D. Lee, and O. Mutlu, “PARBOR: An Efficient System-Level Technique to Detect Data-Dependent Failures in DRAM,” in DSN, 2016.
39. D.-H. Kim et al., “Architectural Support for Mitigating Row Hammering in DRAM Memories,” CAL, 2015.
40. J. S. Kim, M. Patel, H. Hassan, and O. Mutlu, “Solar-DRAM: Reducing DRAM Access Latency by Exploiting the Variation in Local Bitlines,” in ICCD, 2018.
41. Y. Kim, R. Daly, J. Kim, C. Fallin, J. H. Lee, D. Lee, C. Wilkerson, K. Lai, and O. Mutlu, “Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors,” in ISCA, 2014.
42. Y. Kim, D. Han, O. Mutlu, and M. Harchol-Balter, “ATLAS: A Scalable and High-Performance Scheduling Algorithm for Multiple Memory Controllers,” in HPCA, 2010.
43. Y. Kim, V. Seshadri, D. Lee, J. Liu, and O. Mutlu, “A Case for Exploiting Subarray-level Parallelism (SALP) in DRAM,” in ISCA, 2012.
44. Y. Kim, W. Yang, and O. Mutlu, “Ramulator: A Fast and Extensible DRAM Simulator,” in CAL, 2016.
45. D. Kline, R. Melhem, and A. K. Jones, “Sustainable Fault Management and Error Correction for Next-Generation Main Memories,” in IGSC, 2017.
46. R. K. Konoth, M. Oliverio, A. Tatar, D. Andriesse, H. Bos, C. Giuffrida, and K. Razavi, “ZebRAM: Comprehensive and Compatible Software Protection Against Rowhammer Attacks,” in OSDI, 2018.
47. K. Kraft, C. Sudarshan, D. M. Mathew, C. Weis, N. Wehn, and M. Jung, “Improving the Error Behavior of DRAM by Exploiting Its Z-Channel Property,” in DATE, 2018.
48. A. Kwong, D. Genkin, D. Gruss, and Y. Yarom, “RAMBleed: Reading Bits in Memory Without Accessing Them,” in IEEE S&P, 2020.
49. M. Lanteigne, “How Rowhammer Could Be Used to Exploit Weaknesses in Computer Hardware,” 2016. [Online]. Available: http://www.thirdio.com/rowhammer.pdf
50. D. Lee, S. Khan, L. Subramanian, S. Ghose, R. Ausavarungnirun, G. Pekhimenko, V. Seshadri, and O. Mutlu, “Design-Induced Latency Variation in Modern DRAM Chips: Characterization, Analysis, and Latency Reduction Mechanisms,” in SIGMETRICS, 2017.
51. D. Lee, Y. Kim, V. Seshadri, J. Liu, L. Subramanian, and O. Mutlu, “Tiered-Latency DRAM: A Low Latency and Low Cost DRAM Architecture,” in HPCA, 2013.
52. E. Lee, S. Lee, G. E. Suh, and J. H. Ahn, “TWiCe: Time Window Counter Based Row Refresh to Prevent Row-Hammering,” CAL, 2018.
53. J.-B. Lee, “Green Memory Solution,” 2014. [Online]. Available: http://aod.teletogether.com/sec/20140519/SAMSUNG Investors Forum 2014 session 1.pdf
54. Lenovo, “Row Hammer Privilege Escalation,” March 2015. [Online]. Available: https://support.lenovo.com/us/en/product-security/row-hammer
55. M. Lipp, M. T. Aga, M. Schwarz, D. Gruss, C. Maurice, L. Raab, and L. Lamster, “Nethammer: Inducing Rowhammer Faults through Network Requests,” arxiv.org, 2018.
56. J. Liu, B. Jaiyen, Y. Kim, C. Wilkerson, and O. Mutlu, “An Experimental Study of Data Retention Behavior in Modern DRAM Devices: Implications for Retention Time Profiling Mechanisms,” in ISCA, 2013.
57. J. Liu, B. Jaiyen, R. Veras, and O. Mutlu, “RAIDR: Retention-Aware Intelligent DRAM Refresh,” in ISCA, 2012.
58. J. D. McCalpin, “Topology and Cache Coherence in Knights Landing and Skylake Xeon Processors,” 2018. [Online]. Available: Slides presented at IXPUG Workshop (see Slide 7).
59. P. Mosalikanti, C. Mozak, and N. Kurd, “High Performance DDR Architecture in Intel Core Processors Using 32nm CMOS High-K Metal-Gate Process,” in IEEE VLSI-DAT, 2011.
60. O. Mutlu, “The RowHammer Problem and Other Issues We May Face as Memory Becomes Denser,” in DATE, 2017.
61. O. Mutlu and J. S. Kim, “RowHammer: A Retrospective,” *TCAD*, vol. Special Issue on Top Picks in Hardware and Embedded Security, 2019.
62. O. Mutlu and T. Moscibroda, “Parallelism-Aware Batch Scheduling: Enhancing Both Performance and Fairness of Shared DRAM Systems,” in ISCA, 2008.
63. K. Park, C. Lim, D. Yun, and S. Baeg, “Experiments and Root Cause Analysis for Active-Precharge Hammering Fault in DDR3 SDRAM Under 3× nm Technology,” *Microelectronics Reliability*, 2016.
64. K. Park, D. Yun, and S. Baeg, “Statistical Distributions of Row-Hammering Induced Failures in DDR3 Components,” *Microelectronics Reliability*, 2016.
65. PassMark Software, “MemTest86: The Standard Memory Diagnostic Utility,” 2015. [Online]. Available: http://www.memtest86.com/troubleshooting.htm
66. P. Pessl, D. Gruss, C. Maurice, M. Schwarz, and S. Mangard, “DRAMA: Exploiting DRAM Addressing for Cross-CPU Attacks,” in USENIX Sec., 2016.
67. D. Poddebniak, J. Somorovsky, S. Schinzel, M. Lochter, and P. Rösler, “Attacking Deterministic Signature Schemes Using Fault Attacks,” in IEEE S&P, 2018.
68. R. Qiao and M. Seaborn, “A New Approach for Rowhammer Attacks,” in HOST, 2016.
69. K. Razavi, B. Gras, E. Bosman, B. Preneel, C. Giuffrida, and H. Bos, “Flip Feng Shui: Hammering a Needle in the Software Stack,” in USENIX Sec., 2016.
70. S.-W. Ryu, K. Min, J. Shin, H. Kwon, D. Nam, T. Oh, T.-S. Jang, M. Yoo, Y. Kim, and S. Hong, “Overcoming the Reliability Limitation in the Ultimately Scaled DRAM Using Silicon Migration Technique by Hydrogen Annealing,” in IEDM, 2017.
71. R. Schilling, M. Werner, P. Nasahl, and S. Mangard, “Pointing in the Right Direction—Securing Memory Accesses in a Faulty World,” in ACSAC, 2018.
72. M. Schwarz, “DRAMA: Exploiting DRAM Buffers for Fun and Profit,” Master’s Thesis, Graz University of Technology, 2016.
73. M. Seaborn and T. Dullien, “Exploiting the DRAM Rowhammer Bug to Gain Kernel Privileges,” 2016. [Online]. Available: Slides presented at BlackHat.
74. S. M. Seyedzadeh, A. K. Jones, and R. Melhem, “Counter-Based Tree Structure for Row Hammering Mitigation in DRAM,” CAL, 2017.
75. SoftMC Source Code, 2017. [Online]. Available: https://github.com/CMU-SAFARI/SoftMC
76. M. Son, H. Park, J. Ahn, and S. Yoo, “Making DRAM Stronger Against Row Hammering,” in DAC, 2017.
77. A. Tatar, C. Giuffrida, H. Bos, and K. Razavi, “Defeating Software Mitigations Against Rowhammer: A Surgical Precision Hammer,” in RAID, 2018.
78. A. Tatar, R. Krishnan, E. Athanasopoulos, C. Giuffrida, H. Bos, and K. Razavi, “Throwhammer: Rowhammer Attacks over the Network and Defenses,” in USENIX ATC, 2018.
79. Unified EFI Forum, “Unified Extensible Firmware Interface Specification,” 2017. [Online]. Available: https://uefi.org/specifications
80. ——, “Advanced Configuration and Power Interface (ACPI) Specification (ver. 6.3),” 2019. [Online]. Available: https://uefi.org/sites/default/files/resources/ACPI_6_3_final_Jan30.pdf
81. H. Usui, L. Subramanian, K. K. Chang, and O. Mutlu, “DASH: Deadline-Aware High-Performance Memory Scheduler for Heterogeneous Systems with Hardware Accelerators,” in TACO, 2016.
82. V. Van Der Veen, Y. Fratantonio, M. Lindorfer, D. Gruss, C. Maurice, G. Vigna, H. Bos, K. Razavi, and C. Giuffrida, “Drammer: Deterministic Rowhammer Attacks on Mobile Platforms,” in CCS, 2016.
83. V. Van Der Veen, M. Lindorfer, Y. Fratantonio, H. P. Pillai, G. Vigna, C. Kruegel, H. Bos, and K. Razavi, “GuardION: Practical Mitigation of DMA-Based Rowhammer Attacks on ARM,” in DIMVA, 2018.
84. Wikipedia, “DDR4 Command Encoding,” 2019. [Online]. Available: https://en.wikipedia.org/wiki/DDR4_SDRAM#Command_encoding
85. Y. Xiao, X. Zhang, Y. Zhang, and R. Teodorescu, “One Bit Flips, One Cloud Flops: Cross-VM Row Hammer Attacks and Privilege Escalation,” in USENIX Sec., 2016.
86. T. Yang and X.-W. Lin, “Trap-Assisted DRAM Row Hammer Effect,” 2016. [Online]. Available: EDL
87. K. S. Yim, “The Rowhammer Attack Injection Methodology,” in SRDS, 2016.
88. D. Yun, M. Park, C. Lim, and S. Baeg, “Study of TID Effects on One Row Hammering Using Gamma in DDR4 SDRAMs,” in IRPS, 2018.
89. Z. Zhang, Z. Zhan, D. Balasubramanian, X. Koutsoukos, and G. Karsai, “Triggering Rowhammer Hardware Faults on ARM: A Revisit,” in ASHES, 2018.

这样优化后，参考文献列表更加规范和易于阅读。