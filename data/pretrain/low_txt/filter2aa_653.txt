### Kerberos and Delegation in Cybersecurity

#### Key Characteristics of Vulnerabilities
- **Relatively Easy to Exploit**: Many vulnerabilities can be exploited with minimal effort.
- **Easily Automated**: Automation tools can be used to exploit these vulnerabilities.
- **Usually Not Monitored**: These vulnerabilities often go undetected due to a lack of monitoring.

#### Kerberos and Delegation
- **Kerberos**: A ticket-based authentication protocol.
- **Kerberos Delegation**: Allows an application to reuse user credentials, such as a web server accessing a SQL database.
  - **Why?**: To enable applications to perform actions on behalf of the user.
  - **How?**: By requesting tickets on behalf of the user.
  - **Example**:
    - User1 authenticates to the Domain Controller (DC).
    - The Web Server requests a ticket on behalf of User1.
    - The Web Server uses the ticket to access the SQL Server.

#### Types of Delegation
- **Delegation to Any Service**: Using Kerberos Only (S4U2Proxy) or Protocol Transition (S4U2Self + S4U2Proxy).

#### Attack Vectors
- **High Privilege Accounts**: Accounts with permanent high privileges are valuable targets for attackers.
- **Just-In-Time (JIT) Administration**: 
  - **Purpose**: To reduce the attack surface by granting high privileges for a limited time.
  - **Process**:
    - Get administrative access for a limited time.
    - Perform necessary operations.
    - Revoke high privileges when the time period expires.
- **Malicious JIT Administration**:
  - **Steps**:
    - Gain temporary administrative access.
    - Perform malicious operations.
    - Remove traces to avoid detection.

#### Delegation Scenarios
- **AdminSDHolder Scenarios**:
  - **Scenario 1**: Add a new machine account and set the owner to a malicious account. The owner can then edit the ACL of the object.
  - **Scenario 2**: Modify the Discretionary Access Control List (DACL) to add 'GenericAll' ACE for a malicious user on the new machine.

#### Group Policy Object (GPO) Tampering
- **Enable Accounts to Be Trusted for Delegation**: This GPO can be tampered with to allow delegation to the 'krbtgt' service and request an 'Administrator' TGT.

#### DACL Modification
- **DACL Structure**:
  - **User SID**
  - **Security Group SIDs**
  - **User Rights**
  - **Access Token**
  - **Deny ACEs**
  - **Allow ACEs**
  - **Inherited Deny ACEs**
  - **Inherited Allow ACEs**
- **LSA Matches SIDs from the Access Token with SIDs in the ACEs**.

#### Persistence Techniques
- **ACL Modification**:
  - **Target**: Privileged groups like 'Domain Admins'.
  - **Problem**: AdminSDHolder protection.
  - **Solution**:
    - Exclude certain groups from AdminSDHolder protection.
    - Add ACEs to excluded groups to maintain persistence.
- **Excluded Groups**:
  - **Account Operators**
  - **Server Operators**
  - **Print Operators**
  - **Backup Operators**

#### AdminSDHolder Protection
- **SDProp**: Periodically overrides the ACLs of protected groups and users with the AdminSDHolder ACL.
- **Protected Accounts**:
  - **Enterprise Admins**
  - **Domain Admins**
  - **Administrators**

#### Bypassing AdminSDHolder
- **Change Owner of AdminSDHolder Object**: Still not allowed to modify group memberships.
- **Add Malicious User to AdminSDHolder ACL**: Just before SDProp is scheduled to run.
- **Automated Operation**:
  - Add malicious_user to the 'Domain Admins' group.
  - Obtain an administrative TGT.
  - Revert changes to erase footprints.
  - Force SDProp to run to remove malicious ACEs from protected groups.
  - Remove malicious_user from the 'Domain Admins' group.

#### Detection and Prevention
- **Monitor Accounts Trusted for Delegation**:
  - **GPO**: 'Enable accounts to be trusted for delegation'.
  - **Attributes**: 'AllowedToDelegateTo', 'Account is sensitive and cannot be delegated'.
- **ACL Monitoring**:
  - **Owner**
  - **Excluded Groups**

By understanding and addressing these vulnerabilities and attack vectors, organizations can better protect their systems and data from malicious activities.