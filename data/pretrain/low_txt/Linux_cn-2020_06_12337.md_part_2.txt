### 节省点击的每一秒：Shortcut Bar
![](/data/attachment/album/202006/22/005218qqf9xxzqy7hedovc.jpg)

Shortcut Bar 是一款便捷的 Mac App Store 工具，能够捕捉快速项目并从 Mac 的菜单栏访问它们。我主要用它为正在开发的各种网站创建管理页面和用户页面的[快捷方式](https://fiplab.com/apps/shortcut-bar-for-mac)。这样，我不必切换到浏览器窗口再调用书签，只需在菜单中选择所需项，即可直接打开浏览器。

尽管这看似微不足道，但在每天频繁切换 IDE 和浏览器的情况下，这些节省下来的鼠标动作累积起来相当可观。由于 Shortcut Bar 支持分组功能，我还将其用于整理本地和远程服务器测试位置的链接。

### 在 Mac 上运行 Windows 和 Linux：Parallels Desktop
![](/data/attachment/album/202006/22/005218k37lmxkwmwb2yle7.jpg)

作为一名 Web 开发者，我需要在基于 Windows 的浏览器上检查代码，这意味着要启动 Windows 10 来测试新的 Edge、Chrome、Firefox 以及 IE11（尽管有些遗憾，但仍有人使用 IE11）。

我在本文开头提到了 [Parallels Desktop](https://www.anrdoezrs.net/links/9041660/type/dlg/sid/zd-14bdfb9dd2c448eda3bc07eae0b3691c---/https://www.parallels.com/products/desktop/)。我发现能够在同一台机器上同时运行 Windows、Mac 和 Linux 非常有用。我的主要 Windows 环境是在楼上办公室的 Mac Mini 上运行的，这是性能最强的一台设备，也用于视频制作。

我的主要开发机器则位于楼下客厅，靠近沙发。这一安排始于狗狗还小的时候，当时它经常感到孤独和害怕。现在，我工作时它可以舒服地趴在我的腿上。我已经在这里建立了一个完整的工作站，可以让我坐在客厅里，与键盘和狗共享我的膝盖。

这台机器是一台 2013 年的 i7 iMac，配备 32GB 内存，非常适合开发工作，但其处理能力不足以应对多个 4K 视频流或托管 Windows 桌面的需求。

### 远程连接：屏幕共享和微软远程桌面
![](/data/attachment/album/202006/22/005219f0niaejb3fn2qqjz.jpg)

尽管我的开发机器在楼下，而视频制作机器在楼上，但我无论身处何处都能在这两台机器上工作。只需使用 MacOS 内置的“屏幕共享”应用即可连接到远程机器。

当需要从楼下的开发机器连接到 Windows 时，我使用“[微软远程桌面](https://apps.apple.com/us/app/microsoft-remote-desktop/id1295203466?mt=12)”。这是一个免费的 Mac OS 应用商店下载项，提供了完整的 Windows 10 机器远程界面。请注意，使用“微软远程桌面”需运行 Windows 10 Pro，因为 Windows Home 不支持远程访问。

你可能注意到这套环境似乎没有适用于移动环境或咖啡店编程的部分。这是因为当前的大流行病迫使所有编码工作都在家中完成。因此，我将开发工作整合到了一台性能良好的固定机器上，并优化了千兆以太网连接。如果回到“旧常态”，我会更倾向于云中心化的解决方案。我很怀念咖啡店。

### 管理 MySQL 数据的整洁界面：Sequel Pro
![](/data/attachment/album/202006/22/005220czimgaema7yzhuoz.jpg)

我的代码涉及大量 SQL 操作，因此我需要一个工具来查看数据库中的内容。对我来说，最简单、最快捷的方法不是 PhpMyAdmin，而是名为 [Sequel Pro](https://www.sequelpro.com/) 的 Mac 本地应用（它的图标巧妙地结合了煎饼和数据存储）。

我通常会打开一个数据库表，搜索 “value contains” 或 “option\_name contains”，然后查找结果。这个过程非常迅速，并且允许我在开发过程中轻松操作数据。虽然 PhpStorm 也有一个数据库浏览器，但我发现 Sequel Pro 更加高效。

### 简洁的 SFTP 客户端：Forklift
![](/data/attachment/album/202006/22/005309ei22v3ubnshiv7bi.jpg)

我花了很长时间才改掉通过命令行和 SSH 隧道使用 SFTP 的习惯。而 [Forklift](https://binarynights.com/) 则是一个很好的替代品。它保存了一组网站和登录信息，支持加密，并提供了一个传统的拖放界面来批量移动文件。

### 强大的应用自动化：Keyboard Maestro
![](/data/attachment/album/202006/22/005222ce44nzjloccdbjbb.jpg)

[Keyboard Maestro](https://www.keyboardmaestro.com/main/) 是让我继续使用 Mac 的关键软件之一。自 2011 年首次购买以来，我一直用它编写各种专业脚本。

它是一款功能强大且易于使用的跨应用程序脚本工具。我经常编写特殊用途的脚本来执行原本耗时的任务。一些脚本可以在多个应用程序之间运行，其他如截图所示的 Stripe 填充测试脚本，则专注于单一任务。

例如，在开发捐赠插件的 Stripe 支付网关时，我必须发起上千次测试支付。每次测试都需要填写相同的信用卡字段，这非常繁琐。借助 Keyboard Maestro 中的一个简单脚本，我可以自动完成这些重复性工作，大大提高了效率。

### 特定用途的快速搜索：Alfred
![](/data/attachment/album/202006/22/005222eyvjak24ghybg89k.jpg)

[Alfred](https://www.alfredapp.com/) 是我最近加入的生产力工具。它类似于 Spotlight，但功能更为丰富。你可以创建工作流来完成复杂的任务，但我目前主要用它进行四个自定义搜索。按下 `Alt-Space` 后，Alfred 的输入栏就会出现。

键入 “codex” 可在 WordPress 开发者文档站点 codex 上搜索相关内容；键入 “plugin” 则会在 WordPress 插件库中搜索；键入 “zdme” 会在我写过的 ZDNet 文章中搜索包含特定字符串的文章。这些功能虽简单，却能显著减少鼠标移动和按键次数。例如，如果我需要查看某个 WordPress 函数的定义，只需轻点几下键盘即可获得，无需动用鼠标。

### 你觉得怎么样？

以上就是我常用的开发工具，帮助我提高工作效率。那么你呢？如果你是程序员，哪些软件工具能帮助你提升生产力？请在下方评论区分享你的经验。

---
via: https://www.zdnet.com/article/one-developers-favorite-mac-coding-tools-for-php-and-web-development/
作者：[David Gewirtz](https://www.zdnet.com/meet-the-team/us/david-gewirtz/)  
译者：[wxy](https://github.com/wxy)  
校对：[wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](/article-12326-1.html) 荣誉推出