Certainly! Below is the optimized version of your text, with a focus on clarity, coherence, and professionalism:

---

### Application Exhaustion Flood (T1499.003)

**Description:**
Adversaries may target resource-intensive features of applications to cause a denial of service (DoS), thereby denying access to those applications. For example, specific features in web applications may be highly resource-intensive. Repeated requests to these features can exhaust system resources and deny access to the application or the server itself.

**External References:**
- [MITRE ATT&CK T1499.003](https://attack.mitre.org/techniques/T1499/003)
- [Arbor Annual DoS Report Jan 2018](https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf)
- [Cisco: Detecting and Analyzing Network Threats With NetFlow](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf)

**Detection:**
Detection of Endpoint DoS can sometimes be achieved before significant impact, but this typically requires aggressive monitoring and responsiveness. Tools such as netflow, SNMP, and custom scripts can detect sudden increases in circuit utilization. Real-time, automated, and qualitative network traffic analysis can identify surges in specific protocols, aiding in early detection. Additionally, endpoint logging and instrumentation, particularly for web applications, can provide valuable logs from web, application, and database servers, helping to identify attacks before they significantly impact availability.

**Platforms:**
- Windows
- Azure AD
- Office 365
- SaaS
- IaaS
- Linux
- macOS
- Google Workspace

**Impact Type:**
- Availability

---

### Rc.common (T1163) - Revoked

**Description:**
During the boot process, macOS executes `/etc/rc.common`, a shell script containing various utility functions. This file also defines routines for processing command-line arguments and gathering system settings, making it a common inclusion in Startup Item Scripts. Although this technique is deprecated in favor of launch agents and daemons, it is still used in some cases.

Adversaries can use the `rc.common` file to hide code for persistence, which will execute on each reboot as the root user.

**External References:**
- [MITRE ATT&CK T1163](https://attack.mitre.org/techniques/T1163)
- [Apple: Startup Items](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)
- [Methods of Mac Malware Persistence](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)

**Detection:**
Monitor the `/etc/rc.common` file for changes from company policy. Monitor processes executed by the `rc.common` script for unusual or unknown applications or behavior.

**Permissions Required:**
- root

**Platform:**
- macOS

**Note:**
This technique has been revoked and is no longer considered valid.

---

### Compromise Software Dependencies and Development Tools (T1195.001)

**Description:**
Adversaries may manipulate software dependencies and development tools before they reach the final consumer, aiming to compromise data or systems. Applications often rely on external software, and popular open-source projects used as dependencies may be targeted to inject malicious code.

Targeting can be specific to a desired victim set or distributed broadly, with additional tactics employed only against specific victims.

**External References:**
- [MITRE ATT&CK T1195.001](https://attack.mitre.org/techniques/T1195/001)
- [Trendmicro: Hacker Infects Node.js Package to Steal from Bitcoin Wallets](https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets)

**Detection:**
Use verification of distributed binaries through hash checking or other integrity mechanisms. Scan downloads for malicious signatures and test software and updates before deployment, noting any suspicious activity.

**Platforms:**
- Linux
- macOS
- Windows

---

### Digital Certificates (T1588.004)

**Description:**
Adversaries may buy or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic or enabling Adversary-in-the-Middle attacks if the certificate is trusted. They may use a front organization or stolen information to validate to a certificate provider. Adversaries may also steal certificate materials directly from a compromised third-party, including certificate authorities.

Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.

After obtaining a digital certificate, an adversary may install it on infrastructure under their control.

**External References:**
- [MITRE ATT&CK T1588.004](https://attack.mitre.org/techniques/T1588/004)
- [Final Report on DigiNotar Hack Shows Total Compromise of CA Servers](https://threatpost.com/final-report-diginotar-hack-shows-total-compromise-ca-servers-103112/77170/)
- [Let's Encrypt FAQ](https://letsencrypt.org/docs/faq/)
- [Tall Tales of Hunting with TLS/SSL Certificates](https://www.splunk.com/en_us/blog/security/tall-tales-of-hunting-with-tls-ssl-certificates.html)
- [A Multi-Method Approach to Identifying Rogue Cobalt Strike Servers](https://www.recordedfuture.com/cobalt-strike-servers/)

**Detection:**
Use services to track newly issued certificates and/or certificates in use on sites across the Internet. Focus detection efforts on related behaviors such as Web Protocols, Asymmetric Cryptography, and Install Root Certificate.

**Platform:**
- PRE

---

### DNS Server (T1583.002)

**Description:**
Adversaries may set up their own Domain Name System (DNS) servers to support post-compromise activities, such as Command and Control (C2). By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic, configure DNS applications to provide conditional responses to malware, and generally have more flexibility in the structure of the DNS-based C2 channel.

**External References:**
- [MITRE ATT&CK T1583.002](https://attack.mitre.org/techniques/T1583/002)
- [Unit42: DNS Tunneling: How DNS Can Be (Ab)used by Malicious Actors](https://unit42.paloaltonetworks.com/dns-tunneling-how-dns-can-be-abused-by-malicious-actors/)

**Detection:**
Much of this activity occurs outside the visibility of the target organization, making detection challenging. Detection efforts may focus on related stages of the adversary lifecycle, such as during Command and Control.

**Platform:**
- PRE

---

### Disk Wipe (T1561)

**Description:**
Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data, including the master boot record (MBR). A complete wipe of all disk sectors may be attempted.

To maximize impact, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.

On network devices, adversaries may wipe configuration files and other data using commands like `erase`.

**External References:**
- [MITRE ATT&CK T1561](https://attack.mitre.org/techniques/T1561)
- [Cisco: erase - Cisco IOS Configuration Fundamentals Command Reference](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/D_through_E.html#wp3557227463)
- [Operation Blockbuster: Destructive Malware Report](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)
- [Microsoft Sysmon v6.20](https://docs.microsoft.com/sysinternals/downloads/sysmon)

**Detection:**
Look for attempts to read/write to sensitive locations like the partition boot sector, MBR, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the `\\.\` notation. Monitor for unusual kernel driver installation activity.

**Platforms:**
- Linux
- macOS
- Windows
- Network

**Impact Type:**
- Availability

---

### DNS (T1071.004)

**Description:**
Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection and blend in with existing traffic. Commands to the remote system, and often the results of those commands, are embedded within the protocol traffic between the client and server.

DNS traffic is common in environments and may be allowed even before network authentication. DNS packets contain many fields and headers where data can be concealed. Known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control while mimicking normal, expected traffic.

**External References:**
- [MITRE ATT&CK T1071.004](https://attack.mitre.org/techniques/T1071/004)
- [Learn how easy it is to bypass firewalls using DNS tunneling (and also how to block it)](https://medium.com/@galolbardes/learn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000)
- [Command & Control: Understanding, Denying and Detecting](https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf)
- [What Is DNS Tunneling?](https://www.paloaltonetworks.com/cyberpedia/what-is-dns-tunneling)

**Detection:**
Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from a server. Processes with unusual network communication should be monitored. Analyze packet contents to detect non-standard protocol usage. Monitor for DNS traffic to/from known-bad or suspicious domains.

**Platforms:**
- Linux
- macOS
- Windows

---

### Cloud Instance Metadata API (T1552.005)

**Description:**
Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data. Most cloud service providers support a Cloud Instance Metadata API, which provides information about the running virtual instance, including name, security group, and additional metadata such as credentials and UserData scripts.

If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials. They may also exploit a Server-Side Request Forgery (SSRF) vulnerability in a public-facing web proxy to gain access to sensitive information via the Instance Metadata API.

The de facto standard across cloud service providers is to host the Instance Metadata API at `http://169.254.169.254`.

**External References:**
- [MITRE ATT&CK T1552.005](https://attack.mitre.org/techniques/T1552/005)
- [AWS: Instance Metadata and User Data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
- [Instance Metadata API: A Modern Day Trojan Horse](https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse)
- [What We Can Learn from the Capital One Hack](https://krebsonsecurity.com/2019/08/what-we-can-learn-from-the-capital-one-hack/)

**Detection:**
Monitor access to the Instance Metadata API and look for anomalous queries. It may be possible to detect adversary use of credentials, such as in Valid Accounts.

**Platform:**
- IaaS

---

### Securityd Memory (T1555.002)

**Description:**
An adversary with root access can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.

In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached. Apple’s `securityd` utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Once the master key is found, an adversary need only iterate over the other values to unlock the final password.

**External References:**
- [MITRE ATT&CK T1555.002](https://attack.mitre.org/techniques/T1555/002)
- [Breaking into the OS X keychain](http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain)
- [New OSX/Keydnap malware is hungry for credentials](https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/)
- [External to DA, the OS X Way](http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way)

**Detection:**
Monitor processes and command-line arguments for activity related to searching for credentials or using automated tools to scan memory for passwords.

**Permissions Required:**
- root

**Platforms:**
- Linux
- macOS

---

### Group Policy Discovery (T1615)

**Description:**
Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD).

Adversaries may use commands such as `gpresult` or PowerShell functions like `Get-DomainGPO` and `Get-DomainGPOLocalGroup` to gather information on Group Policy settings. This information can shape follow-on behaviors, including determining potential attack paths within the target network and opportunities to manipulate Group Policy settings for their benefit.

**External References:**
- [MITRE ATT&CK T1615](https://attack.mitre.org/techniques/T1615)
- [Sneaky Active Directory Persistence #17: Group Policy](https://adsecurity.org/?p=2716)
- [Microsoft: gpresult](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult)
- [Github: PowerShellEmpire](https://github.com/PowerShellEmpire/Empire)
- [Group Policy Basics – Part 1: Understanding the Structure of a Group Policy Object](https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/)

**Detection:**
Monitor for suspicious use of `gpresult` and PowerShell functions like `Get-DomainGPO` and `Get-DomainGPOLocalGroup`. Monitor for abnormal LDAP queries with filters for `groupPolicyContainer` and high volumes of LDAP traffic to domain controllers. Use Windows Event ID 4661 to detect when a directory service has been accessed.

**Platform:**
- Windows

---

### Bootkit (T1542.003)

**Description:**
Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.

A bootkit modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). The MBR is the section of the disk first loaded after hardware initialization by the BIOS, and it is the location of the boot loader. An adversary with raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.

The MBR passes control of the boot process to the VBR. Similarly, an adversary with raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.

**External References:**
- [MITRE ATT&CK T1542.003](https://attack.mitre.org/techniques/T1542/003)
- [Mandiant M-Trends 2016](https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf)
- [Are MBR Infections Back in Fashion? (Infographic)](http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion)

**Detection:**
Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare them against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.

**Permissions Required:**
- Administrator
- SYSTEM

**Platforms:**
- Linux
- Windows

**Defense Bypassed:**
- Host intrusion prevention systems
- Anti-virus
- File monitoring

---

### Data from Removable Media (T1025)

**Description:**
Adversaries may search connected removable media on compromised computers to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to exfiltration. Interactive command shells may be in use, and common functionality within `cmd` may be used to gather information.

Some adversaries may also use Automated Collection on removable media.

**External References:**
- [MITRE ATT&CK T1025](https://attack.mitre.org/techniques/T1025)

**Detection:**
Monitor processes and command-line arguments for actions that could be taken to collect files from a system’s connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.

**System Requirements:**
- Privileges to access removable media drive and files

**Platforms:**
- Linux
- macOS
- Windows

---

### Code Signing (T1116) - Revoked

**Description:**
Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. The certificates used during an operation may be created, forged, or stolen by the adversary.

Code signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform.

Code signing certificates may be used to bypass security policies that require signed code to execute on a system.

**External References:**
- [MITRE ATT&CK T1116](https://attack.mitre.org/techniques/T1116)
- [Wikipedia: Code Signing](https://en.wikipedia.org/wiki/Code_signing)
- [New signed malware called Janicab](http://www.thesafemac.com/new-signed-malware-called-janicab/)
- [Why You Shouldn’t Completely Trust Files Signed with Digital Certificates](https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/)
- [How Attackers Steal Private Keys from Digital Certificates](http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates)

**Detection:**
Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.

**Defense Bypassed:**
- Windows User Account Control

**Platforms:**
- macOS
- Windows

**Note:**
This technique has been revoked and is no longer considered valid.

---

### Mavinject (T1218.013)

**Description:**
Adversaries may abuse `mavinject.exe` to proxy execution of malicious code. `mavinject.exe` is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).

Adversaries may abuse `mavinject.exe` to inject malicious DLLs into running processes, allowing for arbitrary code execution. Since `mavinject.exe` may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process.

In addition to Dynamic-link Library Injection, `mavinject.exe` can also be abused to perform import descriptor injection via its `/HMODULE` command-line parameter.

**External References:**
- [MITRE ATT&CK T1218.013](https://attack.mitre.org/techniques/T1218/013)
- [Lazarus campaign TTPs and evolution](https://cybersecurity.att.com/blogs/labs-research/lazarus-campaign-ttps-and-evolution)
- [LOLBAS: Mavinject.exe](https://lolbas-project.github.io/lolbas/Binaries/Mavinject/)
- [mavinject.exe Functionality Deconstructed](https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e)
- [From False Positive to True Positive: the story of Mavinject.exe, the Microsoft Injector](https://reaqta.com/2017/12/mavinject-microsoft-injector/)

**Detection:**
Monitor the execution and arguments of `mavinject.exe`. Compare recent invocations with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity. Adversaries may rename abusable binaries to evade detections, but the argument `INJECTRUNNING` is required for `mavinject.exe` to perform Dynamic-link Library Injection and may therefore be monitored to alert malicious activity.

**Platforms:**
- Windows

---

### Local Data Staging (T1074.001)

**Description:**
Adversaries may stage collected data in a central location or directory on the local system prior to exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within `cmd` and `bash` may be used to copy data into a staging location.

Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.

**External References:**
- [MITRE ATT&CK T1074.001](https://attack.mitre.org/techniques/T1074/001)
- [DarkWatchman: A new evolution in fileless techniques](https://www.prevailion.com/darkwatchman-new-fileless-techniques/)

**Detection:**
Processes that appear to be reading files from disparate locations and writing them to the same directory or file may indicate data staging, especially if they are suspected of performing encryption or compression. Monitor publicly writable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.

Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.

**Platforms:**
- Linux
- macOS
- Windows

---

I hope this helps! Let me know if you need any further assistance.