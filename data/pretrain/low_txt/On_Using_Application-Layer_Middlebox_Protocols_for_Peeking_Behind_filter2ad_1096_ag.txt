### Abstract
This paper examines the open proxy system from the perspective of the maliciousness of the services offered. It is the first to explicitly discuss HTTP CONNECT and SOCKS proxies in this context. Unlike previous studies, we report not only on responsive proxies (i.e., hosts that responded to a TCP SYN) but also introduce a new category, "proxy," to report on hosts responding using a proxy protocol (i.e., SOCKS error or 407 for HTTP proxies requesting authentication). This approach provides a more comprehensive view of both closed and open proxies on the Internet.

### Introduction
The study of open proxy systems has gained significant attention due to their potential for misuse. Previous research has primarily focused on the responsiveness of proxies, but this paper aims to provide a more holistic view by including detailed analysis of proxy protocols and their configurations.

### Related Work
#### Internet-wide Scans
- **ACSAC’18 [47]**: Focused on specific ports and provided detailed data.
- **NDSS’18 [69]**: Conducted extensive scans but did not report on all port details.
- **WWW’18 [57]**: Examined a wide range of ports and provided comprehensive data.
- **CCC’15 [61]**: Reported on a subset of ports with detailed findings.

#### Duration and Scope
- **This Paper**: 2 weeks (Jan–Feb'19)
- **ACSAC’18 [47]**: 50 days (Apr–May'18)
- **NDSS’18 [69]**: 2 months (Apr–Jun'17)
- **WWW’18 [57]**: 10 months (Jan–Oct'17)

### Data Summary
| Port | Total | Responsive | Proxies | SOCKS any | SOCKS4 | SOCKS5 | Working | GET | CONNECT | SOCKS4 | SOCKS5 |
|------|-------|------------|---------|-----------|--------|--------|---------|-----|---------|--------|--------|
| 3128 | 33,968,960 | 10,470,875 | 688,112 (890,425 ‡) | 34,216 | 31,706 | 19,932 | 16,358 (218,671 ‡) | 14,389 | 11,869 | 1,518 | 1,429 |
| 8080 | 29,100,000 | 6,450,000 | - | - | - | - | 2,518 | - | - | - | - |
| 8118 | 2,133,646 † | - | 28,608 † | - | - | 1,880 † | - | - | - | - |

**Notes:**
- † The paper reports details only for port 3128.
- ‡ When not ignoring the accidentally open proxies as described in Section IV-D6.
- †† Only daily median reported.

### Malicious Use of Proxy Protocols
In 2004, Pai et al. [55] reported on various malicious activities conducted through open proxies, including spam. In 2005, Andreolini et al. [3] described a honeypot system to track spam activities via proxies but did not report any findings. In 2008, Steding-Jessen et al. [66] analyzed the spam ecosystem using a low-interaction honeypot implementing HTTP CONNECT and SOCKS proxies. During their year-long study, they collected over 500 million spams, noting that most connection attempts targeted SMTP services hosted elsewhere. SOCKS has been used by malware, such as SpyEye [64], to offer connect-back features.

### Peeking into Internal Networks
WebSockets have been shown to allow attackers to probe arbitrary ports of internal devices in specific situations. Tools like JSrecon [40] and sonar.js [10] demonstrate the practical feasibility of scanning devices hidden behind NAT gateways. In 2013, Grover et al. [29] used custom firmware installed in over a hundred routers worldwide, finding that an average household has seven connected devices. Huang et al. [33] reported in 2017 that 7% (695) of the autonomous systems they investigated with Luminati were behind middleboxes. Unfortunately, the dataset was not publicly available, and the authors did not respond to contact attempts. Mi et al. [49] analyzed residential proxies provided by actors like Luminati, using the same mechanism introduced in this paper to fingerprint proxy hosts by accessing the localhost.

### Discussion and Limitations
#### Ethical Considerations
Given that we are studying live systems on the Internet, we aim to prevent or minimize potential harm by avoiding changes to these systems. We follow standard-conforming querying functionality and RFC guidance. For example, RFC 6887 [71, Section 11.6] recommends using short-lived forwards for obtaining external addresses for PCP, and we craft our payloads accordingly. All requests conform to respective standards, and we do not exploit vulnerabilities.

We use a user-agent string indicating research purposes and include our contact information. Our scanning server hosts a website explaining our activities and contact information for exclusion from future scans. The reverse DNS record of the scanning host indicates its use for research, and the whois information includes our abuse email address. We promptly respond to automated emails and exclude networks upon request.

Before conducting Internet-wide scans, we tested our system extensively in a laboratory environment to ensure no unexpected side effects. For proxy protocols, we limit actions to connecting and performing single requests. To obtain evidence of misconfigurations, we target non-routable addresses (localhost and “192.168.0.1”) to avoid accessing networked devices.

All collected data is stored on secured servers, accessible only to authorized persons. We do not collect personal data, and our university does not require IRB approval for this type of network scan.

#### Potential Remediations
For UPnP, the mitigation would be patching vulnerable devices. However, given the history of misuse for amplification attacks, manufacturers may not provide fixes. The current recommendation is to filter the discovery port 1900. For Internet proxies, access controls should be implemented to disable unwanted network accesses.

#### Limitations
Other relaying protocols, such as Traversal Using Relay NAT (TURN), could be susceptible to misuse. However, their population is restricted to service providers, and access requires authentication. There is also a recent IETF draft for a non-backwards compatible SOCKS6 [53] aimed at modern protocol designs, but no public implementations exist yet.

### Conclusion
Internet-wide scans help understand the Internet, but many hosts remain invisible due to NAT gateways. We investigated application-layer middlebox protocols that attackers could use to scan such hosts. We found a large number of potentially vulnerable hosts and empirical evidence of active abuse. Our holistic approach to understanding the proxy ecosystem is a useful contribution to guide future work. The source code of our honeypot is available at https://github.com/RUB-SysSec/MiddleboxProtocolStudy/ to enable further research. We have contributed a patch to fix ZMap’s behavior to detect UPnP devices using non-standard source ports.

### Acknowledgment
We thank the anonymous reviewers, Adam Bates, the Shadowserver Foundation, Chad Seaman, and Nils Wagner for their contributions. This work was supported by the German Research Foundation (DFG) and the European Union’s Horizon 2020 research and innovation programme under grant agreement No 786669 (ReAct).

### References
[1] Akamai, “UPnProxy: Blackhat Proxies via NAT Injections,” Akamai, Tech. Rep., 2018. [Online]. Available: https://www.akamai.com/us/en/multimedia/documents/white-paper/upnproxy-blackhat-proxies-via-nat-injections-white-paper.pdf

[2] M. Allman, V. Paxson, and J. Terrell, “A brief history of scanning,” in ACM SIGCOMM Conference on Internet Measurement, 2007.

[3] M. Andreolini, A. Bulgarelli, M. Colajanni, and F. Mazzoni, “HoneySpam: Honeypots Fighting Spam at the Source.” SRUTI, vol. 5, 2005.

[4] Ari Luotonen, “Tunneling TCP based protocols through Web proxy servers,” IETF Secretariat, Internet-Draft draft-luotonen-web-proxy-tunneling-01, 1999. [Online]. Available: https://tools.ietf.org/html/draft-luotonen-web-proxy-tunneling-01

[5] R. Arrouas, “Vulnerability disclosure – Cisco Meeting Server (CMS) arbitrary TCP relaying,” ImmunIT, Tech. Rep., 2018. [Online]. Available: https://www.immunit.ch/en/blog/2018/06/12/vulnerability-disclosure-cisco-meeting-server-arbitrary-tcp-relaying-2/

[6] AT&T, “AT&T Network Practices,” AT&T, Tech. Rep., n.d. [Online]. Available: https://about.att.com/sites/broadband/network

[7] M. Bailey, D. Dittrich, E. Kenneally, and D. Maughan, “The Menlo Report,” IEEE Security & Privacy, vol. 10, no. 2, 2012.

[8] T. Bernard, “MiniUPnP Project HomePage,” 2017. [Online]. Available: http://miniupnp.free.fr

[9] M. Boucadair, R. Penno, and D. Wing, “RFC 6970: Universal Plug and Play (UPnP) Internet Gateway Device - Port Control Protocol Interworking Function (IGD-PCP IWF),” RFC Editor, Tech. Rep., 2013.

[10] M. Bryant, “sonar.js – A Framework for Scanning and Exploiting Internal Hosts With a Webpage,” 2015. [Online]. Available: https://thehackerblog.com/sonar-a-framework-for-scanning-and-exploiting-internal-hosts-with-a-webpage/index.html

[11] S. Cheshire and M. Krochmal, “RFC 6886: NAT Port Mapping Protocol (NAT-PMP),” RFC Editor, Tech. Rep., 2013.

[12] S. Cheshire, M. Krochmal, and K. Sekar, “NAT Port Mapping Protocol (NAT-PMP),” IETF Secretariat, Internet-Draft, 2005. [Online]. Available: http://www.ietf.org/internet-drafts/draft-cheshire-nat-pmp-00

[13] Comcast, “Blocked Internet Ports List,” Comcast Xfinity, Tech. Rep., n.d. [Online]. Available: https://www.xfinity.com/support/articles/list-of-blocked-ports

[14] Cox, “Internet Ports Blocked or Restricted by Cox,” Cox, Tech. Rep., [Online]. Available: https://www.cox.com/residential/support/n.d./internet-ports-blocked-or-restricted-by-cox.html