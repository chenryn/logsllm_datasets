# Evaluating Network Security with Two-Layer Attack Graphs

**Authors:**
- Anmin Xie
- Zhuhua Cai
- Cong Tang
- Jianbin Hu
- Zhong Chen

**Affiliations:**
- Key Laboratory of High Confidence Software Technologies, Ministry of Education, China
- Institute of Software, School of EECS, Peking University, China
- Rice University, USA

**Contact:**
- Email: {xieam, tangcong, hjbin, chen}@infosec.pku.edu.cn
- Corresponding author: Zhuhua Cai

## Abstract
Attack graphs are crucial for analyzing network security vulnerabilities. Previous studies have provided valuable insights into the generation and security measurement of attack graphs. However, understanding large-scale attack graphs remains challenging, and few solutions exist to prevent insider attacks. This paper introduces a novel approach to generate and describe attack graphs using a two-layer model. The upper layer represents a hosts access graph, while the lower layer consists of detailed host-pair attack graphs. Our model simplifies the structure and achieves an optimal computational cost of O(N^2). We also employ adjacency matrices to efficiently evaluate network security, presenting results as grayscale images. By applying prospective damage and importance weights to key hosts, we create prioritized lists of potential threats and stepping stones, aiding network administrators in enhancing security. The computational cost of our methodology is O(N^3), which can be executed in real-time. Practical examples demonstrate the application of our methods.

**Index Terms:** network security, attack graphs, adjacency matrix, prioritized list

## 1. Introduction
Attack graphs, which depict attack scenarios, play a vital role in analyzing network vulnerabilities. Many previous works on attack graphs [1] [2] have been used to evaluate network security, and various models and metrics [3][4][5][6][7] have been developed. Despite these contributions, several challenges remain:

1. **Scalability**: Previous approaches struggle with generating attack graphs for large networks due to exponential growth.
2. **Single Target Focus**: Most existing attack graphs are designed for a single target, making it difficult to evaluate the overall security of a network with multiple targets.
3. **Insider Threats**: While external threats are well-documented, there are limited suggestions for preventing insider attacks.

To address these issues, we propose a new generation model and a measurement methodology. Our two-layer attack graph model reduces complexity, and our adjacency matrix-based evaluation provides a clear and efficient way to assess network security. The computational cost of our method is O(N^2) for generation and O(N^3) for evaluation, both of which can be completed in real-time.

## 2. Related Work
Various methods have been proposed for generating attack graphs. Early approaches, such as those by Phillips and Swiler [1], use attack templates but result in large, unmanageable graphs. Ortalo [18] uses privilege graphs, but they also become too complex. Sheyner et al. [2] use a modified model checker, NuSMV, but face scalability issues. Ammann et al. [8] introduce monotonicity assumptions to reduce computational costs, and Jajodia et al. [9] develop TVA, a tool based on this work.

Recent studies [19][12][10] focus on host-based attack graphs to improve scalability. Lippmann et al. [19][20] introduce NetSPA, which shows attack progression and generates defense recommendations. Ammann et al. [12] generate host-based access graphs, but their approach only captures worst-case exploits. Hewett and Kijsanayothin [10] also use a host-centric model, reducing time complexity to O(N^2).

Visualization techniques [21][22][23] help in understanding attack graphs. Noel and Jajodia [21] use adjacency matrices, Oâ€™Hare et al. [22] visualize large-scale graphs, and Homer et al. [23] improve visualization by trimming and grouping.

Quantitative security evaluations based on attack graphs [1][4][6][3][5][7] have also been explored. Phillips and Swiler [1] suggest assigning probabilities, Noel et al. [4] use symbolic equations, and Pamula et al. [6] measure security based on minimal initial attributes. Wang et al. [3][5] provide a metric framework, and Frigault et al. [7] interpret attack graphs as Dynamic Bayesian networks.

Building on these works, our approach offers vivid analysis, multi-target processing, and identification of insider threats.

## 3. Model

### 3.1 Generation Model
Our model assumes monotonicity, meaning preconditions for exploits do not change from satisfied to unsatisfied. We also assume that attackers can exploit all detected vulnerabilities with user-level access. In practice, attackers compromise hosts step-by-step, and our host-compromised model reduces computational costs.

#### 3.1.1 Two-Layer Model
We propose a two-layer model:
- **Lower Layer**: Host-pair attack graphs detail attack sequences between each host pair.
- **Upper Layer**: Hosts access graph shows direct access relationships among hosts.

#### 3.1.2 Generation of Host-Pair Attack Graphs
Each host-pair attack graph describes attack sequences from one source host to one target host, showing how attackers obtain user or root privileges. For N hosts, there are at most N^2 host-pair attack graphs. We use existing generation methods [1][2][8] to create these graphs quickly.

#### 3.1.3 Generation of the Hosts Access Graph
The hosts access graph represents privilege transitions between hosts. Nodes represent hosts, and directed edges show access relationships. The graph is built based on the results of host-pair attack graphs. If a host-pair attack graph indicates that an attacker can obtain user or root privileges, a directed edge is added to the hosts access graph, labeled with the corresponding privileges.

**Figure 1: Sample Attack Graph for a Simple Network**

- **Hosts**: H0 (attacker's host), H1, H2, H3, H4
- **Edges**: Labeled with (HPAGID, USER, ROOT)
  - Example: Edge (H0, H1) labeled (HPAG1, user, root) means an attacker can obtain user and root privileges in H1 from H0.
  - Another example: Edge (H3, H4) labeled (HPAG5, user, -) means an attacker can obtain user privilege in H4 from H3 but not root.

**Optimizations:**
- **Common Environments**: Host-pair attack graphs for similar environments can be reused.
- **Omitting Rings**: We exclude self-loops for privilege elevation within the same host.

## 4. Examples
We provide practical examples to illustrate the application of our model, demonstrating how to generate and use the two-layer attack graphs to enhance network security.

## 5. Conclusion
This paper introduces a novel two-layer attack graph model and an efficient measurement methodology to evaluate network security. Our approach simplifies the structure, reduces computational costs, and provides clear visual and quantitative assessments. The model and methodology can be applied in real-time, helping network administrators to better understand and enhance network security.

**References:**
[1] C. Phillips and S. Swiler, "A graph-based system for network-vulnerability analysis," in Proceedings of the 1998 Workshop on New Security Paradigms, 1998.
[2] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. M. Wing, "Automated generation and analysis of attack graphs," in Proceedings of the 2002 IEEE Symposium on Security and Privacy, 2002.
[3] Y. Wang, W. Zhou, and X. Li, "A simple security metric framework for network security," in Proceedings of the 2006 International Conference on Dependable Systems and Networks, 2006.
[4] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[5] Y. Wang, W. Zhou, and X. Li, "A security metric for network security based on attack graphs," in Proceedings of the 2007 IEEE International Conference on Communications, 2007.
[6] J. Pamula, S. Noel, and S. Jajodia, "Measuring the security of a network using minimal sets of required initial attributes," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[7] M. Frigault, L. Wang, and T. Shigenaka, "A probabilistic approach to vulnerability assessment," in Proceedings of the 2008 ACM Symposium on Information, Computer and Communications Security, 2008.
[8] P. Ammann, D. Wijesekera, and S. Kaushik, "Scalable, graph-based network vulnerability analysis," in Proceedings of the 2002 ACM Symposium on Applied Computing, 2002.
[9] S. Jajodia, S. Noel, and B. O'Berry, "Topological analysis of network attack surfaces," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[10] R. Hewett and P. Kijsanayothin, "A scalable approach to generating attack graphs," in Proceedings of the 2007 IEEE Symposium on Security and Privacy, 2007.
[11] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[12] P. Ammann, D. Wijesekera, and S. Kaushik, "Scalable, graph-based network vulnerability analysis," in Proceedings of the 2002 ACM Symposium on Applied Computing, 2002.
[13] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[14] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[15] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[16] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[17] S. Noel, S. Jajodia, B. O'Berry, and M. Jacobs, "Efficient minimum-cost network hardening via exploit dependency graph," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[18] R. Ortalo, "A formalization of the vulnerability management problem," in Proceedings of the 2003 ACM Symposium on Applied Computing, 2003.
[19] R. Lippmann, K. Ingols, C. Scott, K. Piwowarski, and A. Russell, "Practical network support for IP traceback," in Proceedings of the 2000 ACM SIGCOMM Conference, 2000.
[20] R. Lippmann, K. Ingols, C. Scott, K. Piwowarski, and A. Russell, "Practical network support for IP traceback," in Proceedings of the 2000 ACM SIGCOMM Conference, 2000.
[21] S. Noel and S. Jajodia, "Visualizing attack graphs," in Proceedings of the 2004 ACM Symposium on Applied Computing, 2004.
[22] S. O'Hare, S. Noel, and S. Jajodia, "Visualization of large-scale attack graphs," in Proceedings of the 2005 ACM Symposium on Applied Computing, 2005.
[23] J. Homer, S. Noel, and S. Jajodia, "Improving the visualization of attack graphs," in Proceedings of the 2006 ACM Symposium on Applied Computing, 2006.