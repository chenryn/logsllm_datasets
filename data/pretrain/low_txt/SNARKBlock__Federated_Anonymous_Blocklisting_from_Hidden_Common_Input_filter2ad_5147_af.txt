Certainly! Here is a more organized and professional version of the provided references and content:

### References

- **[RB17]** Random Beacon Model. *Cryptology ePrint Archive*, Report 2017/1050, 2017. [Link](https://eprint.iacr.org/2017/1050)
- **[BKSV20]** Karim Baghery, Markulf Kohlweiss, Janno Siim, and Mikhail Volkhov. Another Look at Extraction and Randomization of Groth’s zk-SNARK. *Cryptology ePrint Archive*, Report 2020/811, 2020. [Link](https://eprint.iacr.org/2020/811)
- **[BMM+20]** Benedikt Bünz, Mary Maller, Pratyush Mishra, Nirvan Tyagi, and Psi Vesely. Proofs for Inner Pairing Products and Applications. *Cryptology ePrint Archive*, Report 2019/1177, 2020. [Link](https://eprint.iacr.org/2019/1177)
- **[BMW03]** Mihir Bellare, Daniele Micciancio, and Bogdan Warinschi. Foundations of Group Signatures: Formal Definitions, Simplified Requirements, and a Construction Based on General Assumptions. In *EUROCRYPT 2003*, volume 2656 of LNCS, pages 614–629. Springer, Heidelberg, May 2003.
- **[Bow17]** Sean Bowe. BLS12-381: New zk-SNARK Elliptic Curve Construction, 2017. [Link](https://electriccoin.co/blog/new-snark-curve/)
- **[CCDW20]** Weikeng Chen, Alessandro Chiesa, Emma Dauterman, and Nicholas P. Ward. Reducing Participation Costs via Incremental Verification for Ledger Systems. *Cryptology ePrint Archive*, Report 2020/1522, 2020. [Link](https://ia.cr/2020/1522)
- **[Cha85]** David Chaum. Security without Identification: Transaction Systems to Make Big Brother Obsolete. *Commun. ACM*, 28(10):1030–1044, 1985.
- **[CL02]** Jan Camenisch and Anna Lysyanskaya. Dynamic Accumulators and Application to Efficient Revocation of Anonymous Credentials. In *CRYPTO 2002*, volume 2442 of LNCS, pages 61–76. Springer, Heidelberg, August 2002.
- **[CS97]** Jan Camenisch and Markus Stadler. Proof Systems for General Statements about Discrete Logarithms. Technical report, 1997.
- **[CS03]** Jan Camenisch and Victor Shoup. Practical Verifiable Encryption and Decryption of Discrete Logarithms. In *CRYPTO 2003*, volume 2729 of LNCS, pages 126–144. Springer, Heidelberg, August 2003.
- **[CV91]** David Chaum and Eugène van Heyst. Group Signatures. In *EUROCRYPT'91*, volume 547 of LNCS, pages 257–265. Springer, Heidelberg, April 1991.
- **[FAC]** Facebook. Help Center - What Names Are Allowed on Facebook? [Link](https://www.facebook.com/help/112146705538576) (Accessed on Nov. 26, 2021)
- **[FCC20]** FCC. Internet Access Services: Status as of December 31, 2018. [Link](https://docs.fcc.gov/public/attachments/DOC-366980A1.pdf), 2020.
- **[FKL18]** Georg Fuchsbauer, Eike Kiltz, and Julian Loss. The Algebraic Group Model and Its Applications. In *CRYPTO 2018*, Part II, volume 10992 of LNCS, pages 33–62. Springer, Heidelberg, August 2018.
- **[Fuc17]** Georg Fuchsbauer. Subversion-Zero-Knowledge SNARKs. *Cryptology ePrint Archive*, Report 2017/587, 2017. [Link](https://eprint.iacr.org/2017/587)
- **[FS87]** Amos Fiat and Adi Shamir. How to Prove Yourself: Practical Solutions to Identification and Signature Problems. In *CRYPTO'86*, volume 263 of LNCS, pages 186–194. Springer, Heidelberg, August 1987.
- **[GKK+19]** Lorenzo Grassi, Daniel Kales, Dmitry Khovratovich, Arnab Roy, Christian Rechberger, and Markus Schofnegger. Starkad and Poseidon: New Hash Functions for Zero Knowledge Proof Systems. *Cryptology ePrint Archive*, Report 2019/458, 2019. [Link](https://eprint.iacr.org/2019/458)
- **[Gro16]** Jens Groth. On the Size of Pairing-Based Non-Interactive Arguments. In *EUROCRYPT 2016*, Part II, volume 9666 of LNCS, pages 305–326. Springer, Heidelberg, May 2016.
- **[HG11]** Ryan Henry and Ian Goldberg. Formalizing Anonymous Blacklisting Systems. In *2011 IEEE Symposium on Security and Privacy*, pages 81–95. IEEE Computer Society Press, May 2011.
- **[HKR19]** Max Hoffmann, Michael Klooß, and Andy Rupp. Efficient Zero-Knowledge Arguments in the Discrete Log Setting, Revisited. In *ACM CCS 2019*, pages 2093–2110. ACM Press, November 2019.
- **[JKTS07]** Peter C. Johnson, Apu Kapadia, Patrick P. Tsang, and Sean W. Smith. Nymble: Anonymous IP-Address Blocking. In *PET 2007*, volume 4776 of LNCS, pages 113–133. Springer, Heidelberg, June 2007.
- **[KST21]** Abhiram Kothapalli, Srinath T. V. Setty, and Ioanna Tzialla. Nova: Recursive Zero-Knowledge Arguments from Folding Schemes. *Cryptology ePrint Archive*, Report 2021/370, 2021. [Link](https://eprint.iacr.org/2021/370)
- **[LH10]** Zi Lin and Nicholas Hopper. Jack: Scalable Accumulator-Based Nymble System. Pages 53–62, 2010.
- **[LLX07]** Jiangtao Li, Ninghui Li, and Rui Xue. Universal Accumulators with Efficient Nonmembership Proofs. In *ACNS 07*, volume 4521 of LNCS, pages 253–269. Springer, Heidelberg, June 2007.
- **[Lyn]** Ben Lynn. PBC Library - Pairing-Based Cryptography - About.
- **[MP21]** Tal Malkin and Chris Peikert, editors. *CRYPTO 2021*, Part I, volume 12825 of LNCS, Virtual Event, August 2021. Springer, Heidelberg.
- **[Rad21]** Radiolab. The Ceremony, 2021. [Link](https://www.wnycstudios.org/podcasts/radiolab/articles/ceremony)
- **[Red20]** Reddit Staff. Reddit in 2020. [Link](https://old.reddit.com/r/blog/comments/k967mm/reddit_in_2020/), 2020.
- **[Sal19]** Sara Salinas. Facebook Pays the Reviewers Filtering Porn and Murder a Tiny Fraction of Its Median Salary, Explosive Report Says. [Link](https://www.cnbc.com/2019/02/25/facebook-pays-content-moderators-a-fraction-of-median-salary-report.html), Feb 2019.
- **[TAKS08]** Patrick P. Tsang, Man Ho Au, Apu Kapadia, and Sean W. Smith. PEREA: Towards Practical TTP-Free Revocation in Anonymous Authentication. In *ACM CCS 2008*, pages 333–344. ACM Press, October 2008.
- **[TAKS10]** Patrick P. Tsang, Man Ho Au, Apu Kapadia, and Sean W. Smith. BLAC: Revoking Repeatedly Misbehaving Anonymous Users without Relying on TTPs. *ACM Transactions on Information and System Security*, 13(4):1–33, December 2010.
- **[TKCS11]** P. P. Tsang, A. Kapadia, C. Cornelius, and S. W. Smith. Nymble: Blocking Misbehaving Users in Anonymizing Networks. *IEEE Transactions on Dependable and Secure Computing*, 8(2):256–269, 2011.
- **[VB20]** Giuseppe Vitto and Alex Biryukov. Dynamic Universal Accumulator with Batch Update over Bilinear Groups. *Cryptology ePrint Archive*, Report 2020/777, 2020. [Link](https://eprint.iacr.org/2020/777)
- **[Wik]** Wikipedia. [Link](https://stats.wikimedia.org/#/en.wikipedia.org/contributing/edits/normal|bar|2020-11-04∼2021-11-24|∼total|monthly)
- **[WZC+18]** Howard Wu, Wenting Zheng, Alessandro Chiesa, Raluca Ada Popa, and Ion Stoica. DIZK: A Distributed Zero Knowledge Proof System. In *USENIX Security 2018*, pages 675–692. USENIX Association, August 2018.
- **[ZCa19]** ZCash. What is Jubjub? [Link](https://z.cash/technology/jubjub/), 2019.

### Appendix

#### A. Cryptographic Definitions
We leave the full definitions of the cryptographic assumptions we rely on for the extended version of this paper [RMM21]. We will use the definition of the Discrete Log (DL) assumption from [FKL18] and the definitions of the q-ASDBP and q-SDH assumptions from [BMM+20].

We will use the definitions of computation knowledge soundness and perfect honest-verifier zero-knowledge (HVZK) from [BMM+20] in the following proofs of soundness and zero-knowledge.

#### B. Deferred Proofs
**Recall RHMIPP** is a zero-knowledge ("hiding") version of the RMIPP−k relation. Both relations are detailed in Figure 1, and their proof systems are given in [BMM+20]. We defer the proof of knowledge soundness to the extended version of this paper [RMM21].

**Lemma 4.** The HMIPP protocol (Lemma 5 in [BMM+20])

**Lemma 5 (HMIPP Computational Knowledge Soundness).** HMIPP on n elements is computationally knowledge sound against algebraic adversaries under the n-ASDBP and 2n-SDH assumptions.

**is perfect HVZK.**

**Recall RHWW** is the proof of hidden wire well-formedness described in Section VI. We state its theorems of soundness and zero-knowledge below, and defer the proofs and full description of the algorithms to the extended version of this paper.

**Lemma 6.** HWW is Perfect HVZK.

**Lemma 7.** HWW is statistically knowledge-sound.

**Theorem 1 (SNARKBLOCK Security).** SNARKBLOCK described in Figure 3 is blocklistable, anonymous, and non-frameable provided that Groth16 and HICIAP proofs are knowledge-sound and subversion zero-knowledge; Schnorr signatures are unforgeable; Prf is pseudorandom; and Com is binding and hiding.

**Proof Sketch.**
- **Blocklistability:** Let A be an adversary that breaks blocklistability. Then A generates a verifying attestation (πzkbl, tag, nonce). Either an extractor can output k such that tag = Prfk(n); or ˆπtag is a forgery for HICIAP and we cannot extract a verifying Groth16 statement and proof k, πtag breaking knowledge soundness; or πtag is a forgery for Groth16 and tag ≠ Prfk(nonce) breaking knowledge soundness.
- **Non-Frameability:** If an adversarial identity provider prevents an honest user from authenticating, they must get some (nonce, tag) added to L such that tag = Prfk(nonce) for an honest user’s k. By the pseudorandomness of Prf and the anonymity of SNARKBLOCK, the probability that they guess any such tag is negligible.
- **Anonymity:** We claim that the transcript between an honest user and any number of identity providers and service providers is uncorrelated. By the hiding of Com, com reveals no information about k (and uses distinct r each registration). By the zero-knowledge of HICIAP, πzkbl reveals no information (even to the identity providers). nonce is chosen uniformly at random for each session associated with k. By the pseudorandomness of Prf, tag is indistinguishable from random for users that don’t know k and thus reveals no information about k. Thus, the scheme is anonymous.

**Theorem 2 (HICIAP Soundness).** HICIAP on n − 2 proofs has witness-extended emulation against algebraic adversaries under the DL, n-ASDBP, and 2n-SDH assumptions.

**Proof.**
We wish to show that there exists an expected polynomial time HICIAP extractor EP∗ which outputs a witness (a0, A', B', C') such that for all i = 1, ..., n−2, Groth16.Vfy(crs, (A'i), (a0, ˆSi)).

By Theorem 3 of [BMM+20], there is an expected polynomial time extractor ETIPP for (A, B) TIPP(comA, comB, aggAB, r) which extracts such that comA = A * ck1, comB = ck2 * B, and aggAB = Ar * B. By Theorem 6 of [BMM+20], there is an expected polynomial time extractor EMIPP−k for MIPPk(comin, aggin, r') which extracts ˆS' such that ˆS' * ck1,[:n−2] = comin and (ˆS')r' = aggin. By Lemma 5, there is an expected polynomial time extractor EHMIPP for HMIPP(comC, aggC, r) which extracts (C, z4) such that Cr = aggC and comC = e(z4G, ck3) + (C * ck1). By Lemma 7, there is an expected polynomial time extractor EHWW(coma0, W, P1, P2, P3, G1, G2) for HWW which extracts (a0, z1, z3) such that coma0 = a0P1 + z1P2 + z3P3 and W = a0G1 + z1G2.

Let P* be a probabilistic prover with fixed randomness and unknown probability ε of producing an argument that accepts. We define an extractor EP∗HICIAP(ck, crs, ˆS), which extracts the witness (a0, A, B, C), as follows.

First, run HICIAP with a random r ← F, and run all the subprotocols honestly. Note that, by the definition of the extractor, it should be able to extract the required witness.