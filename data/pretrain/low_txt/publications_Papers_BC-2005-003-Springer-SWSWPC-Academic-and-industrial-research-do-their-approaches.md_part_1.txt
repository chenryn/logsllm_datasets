### Academic and Industrial Research: Do Their Approaches Differ in Adding Semantics to Web Services?

**Authors:**
- Jorge Cardoso¹
- John Miller²
- Jianwen Su³
- Jeff Pollock⁴

**Affiliations:**
1. Department of Mathematics and Engineering, University of Madeira, 9100-390 Funchal, Portugal. **Email:** [PI:EMAIL]
2. Department of Computer Science, University of Georgia, 415 Graduate Studies Research Center, Athens, GA 30602-7404, USA. **Email:** [PI:EMAIL]
3. Department of Computer Science, University of California, Santa Barbara, CA 93106-5110, USA. **Email:** [PI:EMAIL]
4. Network Inference, 5900 La Place Ct., Suite 250, Carlsbad, CA 92008, USA. **Email:** [PI:EMAIL]

**Abstract:**
Since the introduction of the terms "Semantic Web" and "Web services," researchers have followed two distinct paths. Academia has focused on developing new languages to enable the automation of Web services execution and integration based on the Semantic Web. In contrast, industry has led the development of technologies and infrastructures to support Web services and Web processes, often without significant attention to semantics until recently. It is crucial to analyze the trends in the "Semantic Web" and "Web services." This paper, based on a panel discussion at an international conference, addresses two key questions: "Do the approaches taken by academia and industry differ in how they add semantics to Web services?" and "Are their efforts converging or diverging?"

**1. Introduction**

In July 2004, a panel was convened to discuss the convergence or divergence between academic and industrial approaches to adding semantics to Web service and/or Web process descriptions. There is a consensus that more semantics (or meaning) should be added to Web service descriptions. However, differences arise in the methods and extent of semantic addition. Should a Web service operation be given a full semantic specification using operational semantics, or would a functional classification suffice? How machine-processable or understandable should the semantics be on the formality vs. informality scale? A complete and formal semantic specification can be challenging for humans to create or understand, while a simpler, agreement-based approach using standard interfaces (e.g., port types) may be more practical in the short term. Another approach is to map parts of a port type to a common ontology, which has proven successful in database integration.

Given the importance and complexity of adding semantics, it is reasonable that academic and industrial approaches differ. The industrial approach tends to be near-term, practical, and with a high probability of success, while academia can afford to be long-term, ambitious, and speculative. However, too much divergence may lead to a situation where industry settles for minimal semantics and academia designs sophisticated solutions that are never adopted.

This paper surveys the current research and development in academia and industry on Semantic Web Services (SWS). The panel included researchers from both sectors, and the paper aims to provide a balanced treatment, highlighting the strengths of both approaches, analyzing their differences, and seeking common ground for future work.

**2. Academic Research on SWS**

Academic research into Semantic Web Services began with the DAML-S group, which aimed to use a formal language to precisely define what a Web service does. The Web Service Description Language (WSDL) provides a basic description, but it is shallow and focuses on operational aspects, making it inadequate for automated discovery or composition of Web services. Richer and deeper machine-processable descriptions are required. The DAML-S (now OWL-S) group added profile, process, and grounding descriptions. A profile describes the Web service's functionality in terms of input (I), output (O), precondition (P), and result (R). The process describes how the service is built out of components, and the grounding maps these to WSDL files. Much of the semantics is captured in the IOPR specifications.

A Web service, as a software component, has one or more operations that can be invoked and its own state. An operation can be described by its input and output types, preconditions, and results. This goal of specifying what an operation does has a long tradition in Computer Science, including work in program methodology, formal programming language semantics, software engineering, and software agents. The problems are complex, but the potential benefits are significant.

Besides the major OWL-S project, there are ongoing projects in the US and Europe, such as the LSDIS METEOR-S project and the DERI SWWS project.

The METEOR-S project focuses on using semantics throughout the lifecycle of semantic Web processes, which represent complex interactions between semantic Web services. The project targets four areas: annotation, discovery, composition, and execution. For each stage, a framework, infrastructure, or environment has been developed. The METEOR-S Web Service Annotation Framework (MWSAF) semi-automatically marks up Web service descriptions with ontologies. The METEOR-S Web Service Discovery Infrastructure (MWSDI) uses an ontology-based approach to organize registries, enabling semantic classification of Web services based on domains. The METEOR-S Web Service Composition Framework (MWSCF) enhances current Web process composition techniques using Semantic Templates. The METEOR-S Web Service Dynamic Process Manager (MWSDPM) allows deployment-time and run-time binding of Web services to an abstract process based on business and process constraints.

DERI is working on the Semantic Web-enabled Web Services (SWWS) project, recognizing that to fully utilize Web services and related technologies, semantics are indispensable. The SWWS initiative aims to provide a richer framework for Web service description and discovery, as well as scalable Web service mediation middleware. Mediation is applied based on semantic data and process ontologies.

In addition to functional descriptions, there is also research on behavioral descriptions. The behavior signature of a service describes how it can interact with other services, which is critical for service composition. A tool called WSAT has been developed for analyzing conversations and Web service behaviors.

**3. Industrial Research and Development on SWS**

Industrial research on semantic Web services depends on the ongoing development of open standards that ensure interoperability between different implementations. Several initiatives aim to provide platforms and languages for easy integration of heterogeneous systems. Standardization efforts include Simple Object Access Protocol (SOAP), Web Services Description Language (WSDL), Universal Description, Discovery, and Integration (UDDI), and process description languages. Various process description languages have been proposed and studied, including W3C WS Choreography Group, BPEL (from Microsoft, IBM, BEA), WSCL (from HP), BPML (from Microsoft), WSCI (from SUN, BEA, Yahoo, and others), XLANG (from Microsoft), and WSFL (from IBM).

WSDL is a well-established specification for describing networked XML-based services, providing a simple way for service providers to describe the basic format of requests to their systems, regardless of the underlying protocol. It is a key part of the UDDI initiative to provide directories and descriptions of online services.