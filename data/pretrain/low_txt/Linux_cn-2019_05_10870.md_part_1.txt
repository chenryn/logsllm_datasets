---
author: Brent
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 7747
date: '2019-05-18 18:32:00'
editorchoice: true
excerpt: 您仍然可以自由地批评 PHP。然而，您可能会对过去几年中 PHP 所做的改进感到惊讶。
fromurl: https://stitcher.io/blog/php-in-2019
id: 10870
islctt: true
largepic: /data/attachment/album/201905/18/183202tdg7r7g5kl3du7ms.jpg
permalink: /article-10870-1.html
pic: /data/attachment/album/201905/18/183202tdg7r7g5kl3du7ms.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 您仍然可以自由地批评 PHP。然而，您可能会对过去几年中 PHP 所做的改进感到惊讶。
tags:
- PHP
thumb: false
title: 2019年的PHP
titlepic: true
translator: wxy
updated: '2019-05-18 18:32:00'
---

![](/data/attachment/album/201905/18/183202tdg7r7g5kl3du7ms.jpg)

你还记得那篇广为流传的博客文章《[PHP：设计糟糕的分形](https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/)》吗？当我第一次读到这篇文章时，我正在一个充斥着遗留 PHP 项目的糟糕环境中工作。这篇文章除了让我怀疑自己是否应该放弃编程转行之外，别无他用。

幸运的是，我很快就换了一份新工作，并且更重要的是，自 PHP 5.x 版本以来，PHP 已经取得了长足的进步。今天，我想向那些不再使用 PHP 编程或深陷于遗留项目中的人们致意。

剧透警告：尽管如此，有些事情仍然不尽如人意。就像几乎所有编程语言都有其怪癖一样，PHP 也不例外。许多核心功能仍存在不一致的调用方式，一些配置设置令人困惑，而且依然有许多开发人员在编写低质量的代码——或是出于必要，或是因为他们不知道更好的方法。

今天，我想聚焦于积极的一面：让我们来看看 PHP 已经发生了哪些变化，以及如何编写出既干净又可维护的 PHP 代码。在此之前，请暂时放下任何偏见。

然后，您可以继续像往常一样吐槽 PHP。但是，您可能会对 PHP 在过去几年中的某些改进感到惊讶。（LCTT 译注：说实话，我也真的感到吃惊）

### 提前看结论

* PHP 正在积极开发中，每年都会发布新版本。
* 自 PHP 5 时代以来，性能已经翻倍甚至三倍。
* 存在一个非常活跃的框架、包和平台生态系统。
* 过去几年中，PHP 添加了许多新特性，并且这种语言一直在不断发展。
* 像静态分析这样的工具在过去几年中已经成熟，并且一直保持增长。

**更新**：有人要求我展示一些实际的代码示例。我觉得这没问题！这是我的一个业余项目的[源代码](https://github.com/brendt/aggregate.stitcher.io)，它使用 PHP 和 Laravel 编写；[这里](https://spatie.be/open-source/packages)列出了我们在办公室维护的数百个开源软件包。这两个例子都是现代 PHP 项目的良好范例。

那么，让我们开始吧。

### 历史回顾

为了更好地衡量现状，我们快速回顾一下 PHP 的当前发布周期。目前的 PHP 版本是 7.3，预计 2019 年底会发布 7.4。PHP 8.0 将是 7.4 之后的下一个主要版本。

自 5.x 时代以来，核心团队一直试图保持每年发布一个新版本的节奏，并且在过去四年中他们成功做到了这一点。

通常情况下，每个新版本都会获得两年的积极支持，并再获得一年以上的“安全修复”。这样做的目的是鼓励 PHP 开发者尽可能保持最新状态：例如，每年进行小规模升级比从 5.4 直接跳到 7.0 要容易得多。

您可以在 [这里](https://www.php.net/supported-versions.php) 查找 PHP 时间线的活动概述。

![](/data/attachment/album/201905/18/182816searmxew6rmq692a.jpg)

最后，PHP 5.6 是最新的 5.x 版本，而 8.0 是当前的下一个大版本。如果您想知道 PHP 6 发生了什么，可以听听 [PHP Roundtable 播客](https://www.phproundtable.com/episode/what-happened-to-php-6)。

了解了这些背景后，让我们来揭穿一些关于现代 PHP 的常见误解。

### PHP 的性能

在 5.x 时代，PHP 的性能可以说是……平庸。但在 7.0 版本中，PHP 重新编写了核心部分，导致性能提升了两到三倍！

但光说不练假把式。让我们来看看基准测试。幸运的是，人们花了很多时间对 PHP 性能进行了基准测试。我发现 [Kinsta](https://kinsta.com/blog/php-benchmarks/) 有一个很好的更新后的测试列表。

自 7.0 升级以来，性能一直在提升，从未退步。PHP Web 应用程序的性能可以与其他语言中的 Web 框架相媲美，甚至在某些情况下更好。您可以查看这个[广泛的基准测试套件](https://github.com/the-benchmarker/web-frameworks)。

当然，PHP 框架不会胜过 C 或 Rust，但它们比 Rails 或 Django 表现更好，并且与 ExpressJS 相当。

### 框架和生态系统

说到框架：PHP 不仅仅只有 WordPress。让我告诉您——某些专业的 PHP 开发人员：WordPress 绝不代表当代的 PHP 生态系统。

---