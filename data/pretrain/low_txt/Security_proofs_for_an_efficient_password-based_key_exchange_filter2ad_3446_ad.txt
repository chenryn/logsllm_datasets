# Optimized Text

## 4.3 Instantiating the Encryption Function

It is evident that a simple block cipher cannot replace the ideal cipher required for security. Permutations over the group \( G \) are necessary for all secret keys; otherwise, partition attacks can be mounted [10].

In specific cases where the encoding of elements is compact, one can use an iterative technique [1]: encrypt the element and re-encrypt the result until it falls within the group \( G \). Decryption follows the same process. With well-chosen elliptic curves, the average number of iterations can be limited to 2, and the block size can be less than 256 bits. However, careful implementation is essential to prevent timing attacks.

A promising approach is to instantiate the encryption primitive as the product of a Diffie-Hellman value with a hash of the password, as suggested in AuthA [4]. Preliminary investigations indicate that this multiplicative function leads to a password-based key exchange scheme secure in the random-oracle model only [14].

## 5. Conclusion

The reductions presented in this paper, while not optimal, aim to provide easy-to-read, understand, and meaningful proofs rather than highly efficient ones. We believe the terms \( \frac{3qs}{2N} \) or \( \frac{3qs}{N} \) can be improved to \( \frac{qs}{N} \), but the proof would then become more complex.

For technical reasons, the hash function \( H_1 \) used to build the authenticator must be collision-resistant in our proofs. However, the authors of AuthA [4] suggest using a 64-bit authenticator, which may be sufficient in practice but would require modifying the proof. It is also inadvisable to use the same hash function \( H \) everywhere in AuthA.

## Acknowledgments

The second author was supported by the Director, Office of Science, Office of Advanced Scientific Computing Research, Mathematical Information and Computing Sciences Division, of the U.S. Department of Energy under Contract No. DE-AC03-76SF00098. This document is report LBNL-51868. Disclaimer available at http://www-library.lbl.gov/disclaimer.

As a result, one can claim the same security results for this scheme as those stated in Theorems 1 and 2. More details can be found in the full version [13].

## 4.2 The AuthA Modes of Operation

When selecting a password-based key exchange scheme, engineers consider its security, computational and communication efficiency, and ease of integration. Since they face different computing environments, they may want to operate the AuthA protocol in various ways, such as encrypting both flows of the basic Diffie-Hellman key exchange.

## 6. References

[1] M. Bellare, A. Boldyreva, A. Desai, and D. Pointcheval. Key-Privacy in Public-Key Encryption. In Asiacrypt '01, LNCS 2248, pages 566–582. Springer-Verlag, Berlin, 2001.
[2] M. Bellare, T. Kohno, and C. Namprempre. Authenticated Encryption in SSH: Provably Fixing the SSH Binary Packet Protocol. In Proc. of the 9th CCS. ACM Press, New York, 2002.
[3] M. Bellare, D. Pointcheval, and P. Rogaway. Authenticated Key Exchange Secure Against Dictionary Attacks. In Eurocrypt '00, LNCS 1807, pages 139–155. Springer-Verlag, Berlin, 2000.
[4] M. Bellare and P. Rogaway. The AuthA Protocol for Password-Based Authenticated Key Exchange. Contributions to IEEE P1363. March 2000. Available from http://grouper.ieee.org/groups/1363/.
[5] M. Bellare and P. Rogaway. Random Oracles Are Practical: a Paradigm for Designing Efficient Protocols. In Proc. of the 1st CCS, pages 62–73. ACM Press, New York, 1993.
[6] S. M. Bellovin and M. Merritt. Encrypted Key Exchange: Password-Based Protocols Secure against Dictionary Attacks. In Proc. of the Symposium on Security and Privacy, pages 72–84. IEEE, 1992.
[7] S. M. Bellovin and M. Merritt. Augmented Encrypted Key Exchange: A Password-Based Protocol Secure against Dictionary Attacks and Password File Compromise. In Proc. of the 1st CCS, pages 244–250. ACM Press, New York, 1993.
[8] S. Blake-Wilson, V. Gupta, C. Hawk, and B. Moeller. ECC Cipher Suites for TLS, February 2002. IEEE RFC 20296.
[9] N. Borisov, I. Goldberg, and D. Wagner. Intercepting Mobile Communications: The Insecurity of 802.11. In Proc. of ACM International Conference on Mobile Computing and Networking (MobiCom'01), 2001.
[10] C. Boyd, P. Montague, and K. Nguyen. Elliptic Curve Based Password Authenticated Key Exchange Protocols. In ACISP '01, LNCS 2119, pages 487–501. Springer-Verlag, Berlin, 2001.
[11] V. Boyko, P. MacKenzie, and S. Patel. Provably Secure Password Authenticated Key Exchange Using Diffie-Hellman. In Eurocrypt '00, LNCS 1807, pages 156–171. Springer-Verlag, Berlin, 2000.
[12] E. Bresson, O. Chevassut, and D. Pointcheval. Group Diffie-Hellman Key Exchange Secure against Dictionary Attacks. In Asiacrypt '02, LNCS 2501, pages 497–514. Springer-Verlag, Berlin, 2002.
[13] E. Bresson, O. Chevassut, and D. Pointcheval. Security Proofs for an Efficient Password-Based Key Exchange. In Proc. of the 10th CCS. ACM Press, New York, 2003. Full version available at http://www.di.ens.fr/users/pointche.
[14] E. Bresson, O. Chevassut, and D. Pointcheval. Encrypted Key Exchange using Mask Generation Function. Work in progress.
[15] R. Cramer and V. Shoup. A Practical Public Key Cryptosystem Provably Secure against Adaptive Chosen Ciphertext Attack. In Crypto '98, LNCS 1462, pages 13–25. Springer-Verlag, Berlin, 1998.
[16] O. Goldreich and Y. Lindell. Session-Key Generation Using Human Passwords Only. In Crypto '01, LNCS 2139, pages 408–432. Springer-Verlag, Berlin, 2001.
[17] J. Katz, R. Ostrovsky, and M. Yung. Efficient Password-Authenticated Key Exchange Using Human-Memorizable Passwords. In Eurocrypt '01, LNCS 2045, pages 475–494. Springer-Verlag, Berlin, 2001.
[18] J. Katz, R. Ostrovsky, and M. Yung. Forward Secrecy in Password-only Key Exchange Protocols. In Proc. of SCN '02, 2002.
[19] M. Steiner, P. Buhler, T. Eirich, and M. Waidner. Secure Password-Based Cipher Suite for TLS. ACM Transactions on Information and System Security (TISSEC), 4(2):134–157, 2001.
[20] D. Taylor. Using SRP for TLS Authentication, November 2002. Internet Draft.
[21] IEEE Standard 1363–2000. Standard Specifications for Public Key Cryptography. IEEE. Available from http://grouper.ieee.org/groups/1363, August 2000.
[22] IEEE Standard 1363.2 Study Group. Password-Based Public-Key Cryptography. Available from http://grouper.ieee.org/groups/1363/passwdPK.
[23] Wireless Application Protocol. Wireless Transport Layer Security Specification, February 2000. WAP TLS, WAP-199 WTLS.

## Appendix

### A. Proof of Lemma 1

**Game G7**: In this game, we compute the authenticator \( sk_U \) and the session key \( sk_S \) using the private oracles \( H_2 \) and \( H_3 \) on \( X \) and \( Y' \) only. This allows us to avoid computing \( Y \), \( K_U \), and \( K_S \) during the simulation, and instead compute them at the end with the actual value of \( pw \) for defining the events \( Encrypt7 \) and \( Auth1_7 \).

Rules \( U2(7) \), \( S1(7) \), and \( S2(7) \) do not need the password during the simulation but only at the end. Thus, they are not useful for the simulation but are necessary to determine whether events \( Encrypt7 \) or \( Auth1_7 \) occurred. They can be postponed until the adversary has asked \( q_s \) queries or the time limit has expired. At this point, the password \( pw \) is not used until these rules are processed, allowing the simulation to run without any password and choosing it before processing these rules.

Let \( R(U) \) denote the set of \( Y' \) received by a client instance, and \( R(S) \) the set of \( (H, Y') \) used by a server instance. From an information-theoretical perspective, since we have avoided collisions in Game G3:

\[ \Pr[Encrypt7] = \Pr \left[ \exists Y' \in R(U), (pw, *, \bot, E, Y') \in \Lambda_E \right] \leq \frac{\#R(U)}{N} \]

\[ \Pr[Auth1_7] = \Pr \left[ \exists (H, Y') \in R(S), Y \leftarrow D_{pw}(Y'), (1, U||S||X||Y||*, H) \in \Lambda_A \right] \leq \frac{\#R(S)}{N} \]

By definition of the sets \( R(U) \) and \( R(S) \), since \( Y' \) is received in the second query to the user and \( H \) in the second query to the server, the cardinalities are both upper-bounded by \( \frac{q_s}{2} \).

### B. Conclusion of the Proof

By summing up all the relations, one completes the proof. From Equations (1), (2), (3), (4), and (5):

\[ \left| \Pr[S4] - \Pr[S0] \right| \leq \frac{q^2_E}{N} + \frac{2(q-1)q_S q_E}{N(q-1)} + \frac{2q^2_E + q^2_S}{2N(q-1)} + \frac{q^2}{h} \left( 2^{l+1} + \Pr[Encrypt4] \right) \]

\[ \leq \frac{(2q_E + q_S)^2}{2N(q-1)} + \frac{q^2}{h} \left( 2^{l+1} + \Pr[Encrypt4] \right) \]

From Equations (6–8), \( \left| \Pr[Encrypt7] - \Pr[Encrypt4] \right| \) and \( \left| \Pr[S7] - \Pr[S4] \right| \) are both upper-bounded by:

\[ \Pr[AskH7] + \frac{q_s}{2} \left( 2^{l+1} + \Pr[Auth1_7] \right) \leq \frac{q_s}{N} + \Pr[AskH7] \]

Then,

\[ \left| \Pr[S7] - \Pr[S0] \right| \leq \frac{(2q_E + q_S)^2}{2N(q-1)} + \frac{q^2}{h} \left( 2^{l+1} + \Pr[Encrypt7] \right) + 2 \Pr[Auth1_7] + 4 \Pr[AskH7] \]

From Equations (9), (10), and (11):

\[ \Pr[Encrypt7] \leq \frac{q_s}{2N}, \quad \Pr[Auth1_7] \leq \frac{q_s}{2N}, \quad \Pr[AskH7] \leq q_h \cdot Succ_{cdh}^G(t) \]

This concludes the proof.