### Acknowledgments

We would like to express our gratitude to the reviewers for their insightful comments. Special thanks go to Krste Asanović and Martin Maas for sharing their valuable ideas. Jeongseok Son from UC Berkeley also made significant contributions during the early stages of the project. We are particularly grateful to SK Hynix, especially Dongha Jung, Taeksang Song, and Yongtak Song, for providing the facilities for DRAM signal analysis, collecting physical experiment data, and explaining the technical details of DRAM. This work was supported in part by NSF grants CNS-1228839, CNS-1405641, CNS-1700512, and NSF CISE Expeditions Award CCF-1730628, as well as gifts from the Sloan Foundation, Alibaba, Amazon Web Services, Ant Financial, ARM, Capital One, Ericsson, Facebook, Google, Intel, Microsoft, Scotiabank, Splunk, and VMware.

### References

1. **Intel Software Guard Extensions**.  
   URL: https://software.intel.com/sgx.  
   Last accessed: December 2, 2019.

2. **Frank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos V. Rozas, Hisham Shaﬁ, Vedvyas Shanbhogue, and Uday R. Savagaonkar**.  
   *Innovative Instructions and Software Model for Isolated Execution*.  
   In HASP, 2013.

3. **David Lie, Chandramohan A Thekkath, and Mark Horowitz**.  
   *Implementing an Untrusted Operating System on Trusted Hardware*.  
   ACM SIGOPS Operating Systems Review, 37(5):178–192, 2003.

4. **Iddo Bentov, Yan Ji, Fan Zhang, Yunqi Li, Xueyuan Zhao, Lorenz Breidenbach, Philip Daian, and Ari Juels**.  
   *Tesseract: Real-Time Cryptocurrency Exchange using Trusted Hardware*.  
   In CCS, 2017.

5. **Dayeol Lee, David Kohlbrenner, Shweta Shinde, Dawn Song, and Krste Asanović**.  
   *Keystone: A Framework for Architecting TEEs*.  
   arXiv preprint arXiv:1907.10119, 2019.

6. **Victor Costan, Ilia A Lebedev, and Srinivas Devadas**.  
   *Sanctum: Minimal Hardware Extensions for Strong Software Isolation*.  
   In USENIX Security, 2016.

7. **J. Alex Halderman, Seth D. Schoen, Nadia Heninger, William Clarkson, William Paul, Joseph A. Calandrino, Ariel J. Feldman, Jacob Appelbaum, and Edward W. Felten**.  
   *Lest We Remember: Cold-Boot Attacks on Encryption Keys*.  
   Communications of the ACM, 2009.

8. **Christian Priebe, Kapil Vaswani, and Manuel Costa**.  
   *EnclaveDB - A Secure Database Using SGX*.  
   In IEEE S&P, 2018.

9. **Felix Schuster, Manuel Costa, Cedric Fournet, Christos Gkantsidis, Marcus Peinado, Gloria Mainar-Ruiz, and Mark Russinovich**.  
   *VC3: Trustworthy Data Analytics in the Cloud*.  
   In IEEE S&P, 2015.

10. **Tien Tuan Anh Dinh, Prateek Saxena, Ee-Chien Chang, Beng Chin Ooi, and Chunwang Zhang**.  
    *M2R: Enabling Stronger Privacy in MapReduce Computation*.  
    In USENIX Security, 2015.

11. **Stefan Brenner, Colin Wulf, David Goltzsche, Nico Weichbrodt, Matthias Lorenz, Christof Fetzer, Peter Pietzuch, and Rüdiger Kapitza**.  
    *SecureKeeper: Confidential ZooKeeper Using Intel SGX*.  
    In Middleware, 2016.

12. **Joshua Lind, Oded Naor, Ittay Eyal, Florian Kelbert, Emin Gün Sirer, and Peter Pietzuch**.  
    *Teechain: A Secure Payment Network with Asynchronous Blockchain Access*.  
    In SOSP, 2019.

13. **Mitar Milutinovic, Warren He, Howard Wu, and Maxinder Kanwal**.  
    *Proof of Luck: An Efficient Blockchain Consensus Protocol*.  
    In SysTEX, 2016.

14. **Fan Zhang, Ethan Cecchetti, Kyle Croman, Ari Juels, and Elaine Shi**.  
    *Town Crier: An Authenticated Data Feed for Smart Contracts*.  
    In CCS, 2016.

15. **R. Cheng, F. Zhang, J. Kos, W. He, N. Hynes, N. Johnson, A. Juels, A. Miller, and D. Song**.  
    *Ekiden: A Platform for Confidentiality-Preserving, Trustworthy, and Performant Smart Contracts*.  
    In EuroS&P, 2019.

16. **Olga Ohrimenko, Felix Schuster, Cedric Fournet, Aastha Mehta, Sebastian Nowozin, Kapil Vaswani, and Manuel Costa**.  
    *Oblivious Multi-Party Machine Learning on Trusted Processors*.  
    In USENIX Security, 2016.

17. **Shruti Tople, Karan Grover, Shweta Shinde, Ranjita Bhagwan, and Ramachandran Ramjee**.  
    *Privado: Practical and Secure DNN Inference*.  
    ArXiv, 2018.

18. **Jo Van Bulck, Marina Minkin, Ofer Weisse, Daniel Genkin, Baris Kasikci, Frank Piessens, Mark Silberstein, Thomas F. Wenisch, Yuval Yarom, and Raoul Strackx**.  
    *Foreshadow: Extracting the Keys to the Intel SGX Kingdom with Transient Out-of-Order Execution*.  
    In USENIX Security, 2018.

19. **Wenhao Wang, Guoxing Chen, Xiaorui Pan, Yinqian Zhang, XiaoFeng Wang, Vincent Bindschaedler, Haixu Tang, and Carl A. Gunter**.  
    *Leaky Cauldron on the Dark Land: Understanding Memory Side-Channel Hazards in SGX*.  
    In CCS, 2017.

20. **Ferdinand Brasser, Urs Müller, Alexandra Dmitrienko, Kari Kostiainen, Srdjan Capkun, and Ahmad-Reza Sadeghi**.  
    *Software Grand Exposure: SGX Cache Attacks Are Practical*.  
    In WOOT, 2017.

21. **Michael Schwarz, Samuel Weiser, Daniel Gruss, Clémentine Maurice, and Stefan Mangard**.  
    *Malware Guard Extension: Using SGX to Conceal Cache Attacks*.  
    In DIMVA, 2017.

22. **Ahmad Moghimi, Gorka Irazoqui, and Thomas Eisenbarth**.  
    *CacheZoom: How SGX Amplifies the Power of Cache Attacks*.  
    In CHES, pages 69–90. Springer, 2017.

23. **Jo Van Bulck, Nico Weichbrodt, Rüdiger Kapitza, Frank Piessens, and Raoul Strackx**.  
    *Telling Your Secrets Without Page Faults: Stealthy Page Table-Based Attacks on Enclaved Execution*.  
    In USENIX Security, 2017.

24. **Yuanzhong Xu, Weidong Cui, and Marcus Peinado**.  
    *Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems*.  
    In S&P, 2015.

25. **Martin Maas, Eric Love, Emil Stefanov, Mohit Tiwari, Elaine Shi, Krste Asanovic, John Kubiatowicz, and Dawn Song**.  
    *PHANTOM: Practical Oblivious Computation in a Secure Processor*.  
    In CCS, 2013.

26. **Victor Costan and Srinivas Devadas**.  
    *Intel SGX Explained*.  
    Cryptology ePrint Archive, Report 2016/086, 2016.  
    URL: http://eprint.iacr.org/2016/086.  
    Last accessed: December 2, 2019.

27. **Andrew Huang**.  
    *Keeping Secrets in Hardware: The Microsoft XboxTM Case Study*.  
    In CHES, 2003.

28. **Oleksii Oleksenko, Bohdan Trach, Robert Krahn, Andre Martin, Christof Fetzer, and Mark Silberstein**.  
    *Varys: Protecting SGX Enclaves from Practical Side-Channel Attacks*.  
    In USENIX ATC, 2018.

29. **Guoxing Chen, Wenhao Wang, Tianyu Chen, Sanchuan Chen, Yinqian Zhang, XiaoFeng Wang, Ten-Hwang Lai, and Dongdai Lin**.  
    *Racing in Hyperspace: Closing Hyper-Threading Side Channels on SGX with Contrived Data Races*.  
    In S&P, 2018.

30. **Daniel Gruss, Julian Lettner, Felix Schuster, Olya Ohrimenko, Istvan Haller, and Manuel Costa**.  
    *Strong and Efficient Cache Side-Channel Protection Using Hardware Transactional Memory*.  
    In USENIX Security, 2017.

31. **Ming-Wei Shih, Sangho Lee, Taesoo Kim, and Marcus Peinado**.  
    *T-SGX: Eradicating Controlled-Channel Attacks Against Enclave Programs*.  
    In NDSS, 2017.

32. **Sanchuan Chen, Xiaokuan Zhang, Michael K. Reiter, and Yinqian Zhang**.  
    *Detecting Privileged Side-Channel Attacks in Shielded Execution with Déjà Vu*.  
    In AsiaCCS, 2017.

33. **Xiao Shaun Wang, Kartik Nayak, Chang Liu, T.-H. Hubert Chan, Elaine Shi, Emil Stefanov, and Yan Huang**.  
    *Oblivious Data Structures*.  
    In CCS, 2014.

34. **Emil Stefanov, Marten van Dijk, Elaine Shi, Christopher Fletcher, Ling Ren, Xiangyao Yu, and Srinivas Devadas**.  
    *Path ORAM: An Extremely Simple Oblivious RAM Protocol*.  
    In CCS, 2013.

35. **Pratyush Mishra, Rishabh Poddar, Jerry Chen, Alessandro Chiesa, and Raluca Ada Popa**.  
    *Oblix: An Efficient Oblivious Search Index*.  
    In S&P, 2018.

36. **Shaizeen Aga and Satish Narayanasamy**.  
    *InvisiMem: Smart Memory Defenses for Memory Bus Side Channel*.  
    In ISCA, 2017.

37. **Amro Awad, Yipeng Wang, Deborah Shands, and Yan Solihin**.  
    *ObfusMem: A Low-Overhead Access Obfuscation for Trusted Memories*.  
    In ISCA, 2017.

38. **QEMU: the FAST! processor emulator**.  
    URL: https://www.qemu.org/.  
    Last accessed: December 2, 2019.

39. **Intel Software Guard Extensions Programming Reference**.  
    URL: https://software.intel.com/sites/default/files/managed/48/88/329298-002.pdf.  
    Last accessed: December 2, 2019.

40. **Andrew Ferraiuolo, Andrew Baumann, Chris Hawblitzel, and Bryan Parno**.  
    *Komodo: Using Verification to Disentangle Secure-Enclave Hardware from Software*.  
    In SOSP, 2017.

41. **ARM Security IP CryptoIsland Family**.  
    URL: https://www.arm.com/products/silicon-ip-security/cryptoisland.  
    Last accessed: December 2, 2019.

42. **AMD Secure Encrypted Virtualization**.  
    URL: https://developer.amd.com/amd-secure-memory-encryption-sme-amd-secure-encrypted-virtualization-sev/.  
    Last accessed: December 2, 2019.

43. **Dag Arne Osvik, Adi Shamir, and Eran Tromer**.  
    *Cache Attacks and Countermeasures: The Case of AES*.  
    In CT-RSA, 2006.

44. **Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee**.  
    *Last-Level Cache Side-Channel Attacks Are Practical*.  
    In S&P, 2015.

45. **Yuval Yarom and Katrina Falkner**.  
    *FLUSH+RELOAD: A High Resolution, Low Noise, L3 Cache Side-Channel Attack*.  
    In USENIX Security, 2014.

46. **Daniel Gruss, Clémentine Maurice, Klaus Wagner, and Stefan Mangard**.  
    *Flush+Flush: A Fast and Stealthy Cache Attack*.  
    In DIMVA, 2016.

47. **Michael Schwarz, Moritz Lipp, Daniel Moghimi, Jo Van Bulck, Julian Stecklina, Thomas Prescher, and Daniel Gruss**.  
    *ZombieLoad: Cross-Privilege-Boundary Data Sampling*.  
    In CCS, 2019.

48. **Sangho Lee, Ming-Wei Shih, Prasun Gera, Taesoo Kim, Hyesoon Kim, and Marcus Peinado**.  
    *Inferring Fine-Grained Control Flow Inside SGX Enclaves with Branch Shadowing*.  
    In USENIX Security, 2017.

49. **Yeongjin Jang, Jaehyuk Lee, Sangho Lee, and Taesoo Kim**.  
    *SGX-Bomb: Locking Down the Processor via Rowhammer Attack*.  
    In SysTEX, 2017.

50. **Victor van der Veen, Yanick Fratantonio, Martina Lindorfer, Daniel Gruss, Clementine Maurice, Giovanni Vigna, Herbert Bos, Kaveh Razavi, and Cristiano Giuffrida**.  
    *Drammer: Deterministic Rowhammer Attacks on Mobile Platforms*.  
    In CCS, 2016.

51. **Marcus Brandenburger, Christian Cachin, Matthias Lorenz, and Rüdiger Kapitza**.  
    *Rollback and Forking Detection for Trusted Execution Environments Using Lightweight Collective Memory*.  
    In DSN, 2017.

52. **Sinisa Matetic, Mansoor Ahmed, Kari Kostiainen, Aritra Dhar, David Sommer, Arthur Gervais, Ari Juels, and Srdjan Capkun**.  
    *ROTE: Rollback Protection for Trusted Execution*.  
    In USENIX Security, 2017.

53. **Peter Pessl, Daniel Gruss, Clémentine Maurice, Michael Schwarz, and Stefan Mangard**.  
    *DRAMA: Exploiting DRAM Addressing for Cross-CPU Attacks*.  
    In USENIX Security, 2016.

54. **Chia-che Tsai, Donald E. Porter, and Mona Vij**.  
    *Graphene-SGX: A Practical Library OS for Unmodified Applications on SGX*.  
    In ATC, 2017.

55. **JKI Inc. JLA320A**.  
    URL: https://www.jkic.co.kr/ddr4-protocol-analyzer.  
    Last accessed: December 2, 2019.

56. **Kibra 480 Analyzer**.  
    URL: http://cdn.teledynelecroy.com/files/pdf/lecroy_kibra480_datasheet.pdf.  
    Last accessed: December 2, 2019.

57. **Nexus Technology MA4100**.  
    URL: https://www.nexustechnology.com/products/memory-analyzers/ma4100-series-memory-analyzer/.  
    Last accessed: December 2, 2019.

58. **Hunspell**.  
    URL: http://hunspell.github.io/.  
    Last accessed: December 2, 2019.

59. **Brad Fitzpatrick**.  
    *Distributed Caching with Memcached*.  
    Linux Journal, 2004(124):5, 2004.

60. **Rajesh Nishtala, Hans Fugal, Steven Grimm, Marc Kwiatkowski, Herman Lee, Harry C. Li, Ryan McElroy, Mike Paleczny, Daniel Peek, Paul Saab, David Stafford, Tony Tung, and Venkateshwaran Venkataramani**.  
    *Scaling Memcache at Facebook*.  
    In NSDI, 2013.

61. **James Langston**.  
    *Enhancing the Scalability of Memcached*.  
    URL: https://software.intel.com/en-us/articles/enhancing-the-scalability-of-memcached.  
    Last accessed: December 2, 2019.

62. **Yupeng Zhang, Jonathan Katz, and Charalampos Papamanthou**.  
    *All Your Queries Are Belong to Us: The Power of File-Injection Attacks on Searchable Encryption*.  
    In USENIX Security, 2016.

63. **Intel 64 and IA-32 Architectures Software Developer’s Manual Volume 3A: System Programming Guide, Part 1**.  
    URL: https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf.  
    Last accessed: December 2, 2019.

64. **Mengjia Yan, Read Sprabery, Bhargava Gopireddy, Christopher Fletcher, Roy Campbell, and Josep Torrellas**.  
    *Attack Directories, Not Caches: Side-Channel Attacks in a Non-Inclusive World*.  
    In S&P, 2019.

65. **Khang T. Nguyen**.  
    *Introduction to Cache Allocation Technology in the Intel® Xeon® Processor E5 v4 Family*.  
    URL: https://software.intel.com/en-us/articles/introduction-to-cache-allocation-technology, February 2016.

66. **Sergei Arnautov, Bohdan Trach, Franz Gregor, Thomas Knauth, Andre Martin, Christian Priebe, Joshua Lind, Divya Muthukumaran, Daniel O’Keeffe, Mark L. Stillwell, David Goltzsche, Dave Eyers, Rüdiger Kapitza, Peter Pietzuch, and Christof Fetzer**.  
    *SCONE: Secure Linux Containers with Intel SGX*.  
    In OSDI, 2016.

67. **Software Guard Extension (SGX) SDK for Linux**.  
    URL: https://github.com/intel/linux-sgx.  
    Last accessed: December 2, 2019.

68. **RISC-V ISA Simulator**.  
    URL: https://riscv.org/software-tools/risc-v-isa-simulator/.  
    Last accessed: December 2, 2019.

69. **Spell Checker Oriented Word Lists**.  
    URL: http://wordlist.aspell.net/.  
    Last accessed: December 2, 2019.

70. **Enron Email Dataset**.  
    URL: https://www.cs.cmu.edu/~./enron/.  
    Last accessed: December 2, 2019.

71. **NLTK Data 3.4.5 Documentation**.  
    URL: https://www.nltk.org/data.html.  
    Last accessed: December 2, 2019.

72. **GNU Privacy Guard**.  
    URL: http://www.gnupg.org.  
    Last accessed: December 2, 2019.

73. **Sajin Sasy, Sergey Gorbunov, and Christopher W. Fletcher**.  
    *ZeroTrace: Oblivious Memory Primitives from Intel SGX*.  
    In NDSS, 2017.

74. **J. Thomas Pawlowski**.  
    *Hybrid Memory Cube (HMC)*.  
    In 2011 IEEE Hot Chips 23 Symposium (HCS), 2011.

75. **Oliver Kömmerling and Markus G. Kuhn**.  
    *Design Principles for Tamper-Resistant Smartcard Processors*.  
    In Smartcard, 1999.