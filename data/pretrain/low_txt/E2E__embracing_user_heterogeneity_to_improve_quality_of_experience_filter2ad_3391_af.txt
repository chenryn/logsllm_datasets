### References

1. **From Passive Network Measurements.** In *Proceedings of the 15th Workshop on Mobile Computing Systems and Applications*, page 18, 2014.

2. **Athula Balachandran, Vaneet Aggarwal, Emir Halepovic, Jeffrey Pang, Srinivasan Seshan, Shobha Venkataraman, and He Yan.** *Modeling Web Quality-of-Experience on Cellular Networks.* In *Proceedings of the 20th Annual International Conference on Mobile Computing and Networking*, pages 213–224, 2014.

3. **Athula Balachandran, Vyas Sekar, Aditya Akella, Srinivasan Seshan, Ion Stoica, and Hui Zhang.** *Developing a Predictive Model of Quality of Experience for Internet Video.* In *ACM SIGCOMM Computer Communication Review*, volume 43, pages 339–350. ACM, 2013.

4. **Daniel S Berger, Benjamin Berg, Timothy Zhu, Siddhartha Sen, and Mor Harchol-Balter.** *Robinhood: Tail Latency Aware Caching—Dynamic Reallocation from Cache-Rich to Cache-Poor.* In *13th USENIX Symposium on Operating Systems Design and Implementation (OSDI 18)*, pages 195–212, 2018.

5. **Daniel S Berger, Ramesh K Sitaraman, and Mor Harchol-Balter.** *AdaptSize: Orchestrating the Hot Object Memory Cache in a Content Delivery Network.* In *NSDI*, pages 483–498, 2017.

6. **Enrico Bocchi, Luca De Cicco, and Dario Rossi.** *Measuring the Quality of Experience of Web Users.* *ACM SIGCOMM Computer Communication Review*, 46(4):8–13, 2016.

7. **Mike Burrows.** *The Chubby Lock Service for Loosely-Coupled Distributed Systems.* In *OSDI*, 2006.

8. **Michael Butkiewicz, Daimeng Wang, Zhe Wu, Harsha V Madhyastha, and Vyas Sekar.** *Klotski: Reprioritizing Web Content to Improve User Experience on Mobile Devices.* In *NSDI*, volume 1, pages 2–3, 2015.

9. **Matt Calder, Manuel Schröder, Ryan Stewart Ryan Gao, Jitendra Padhye, Ratul Mahajan, Ganesh Ananthanarayanan, and Ethan Katz-Bassett.** *Odin: Microsoft’s Scalable Fault-Tolerant CDN Measurement System.* In *15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18)*, 2018.

10. **Fangfei Chen, Ramesh K Sitaraman, and Marcelo Torres.** *End-User Mapping: Next Generation Request Routing for Content Delivery.* In *ACM SIGCOMM Computer Communication Review*, volume 45, pages 167–181. ACM, 2015.

11. **Yingying Chen, Ratul Mahajan, Baskar Sridharan, and Zhi-Li Zhang.** *A Provider-Side View of Web Search Response Time.* In *ACM SIGCOMM Computer Communication Review*, volume 43, pages 243–254, 2013.

12. **Michael Chow, David Meisner, Jason Flinn, Daniel Peek, and Thomas F Wenisch.** *The Mystery Machine: End-to-End Performance Analysis of Large-Scale Internet Services.* In *OSDI*, pages 217–231, 2014.

13. **Michael Chow, Kaushik Veeraraghavan, Michael J Cafarella, and Jason Flinn.** *DQBarge: Improving Data-Quality Tradeoffs in Large-Scale Internet Services.* In *OSDI*, pages 771–786, 2016.

14. **Diego Neves da Hora, Alemnew Sheferaw Asrese, Vassilis Christophides, Renata Teixeira, and Dario Rossi.** *Narrowing the Gap Between QoS Metrics and Web QoE Using Above-the-Fold Metrics.* In *International Conference on Passive and Active Network Measurement*, pages 31–43. Springer, 2018.

15. **Florin Dobrian, Vyas Sekar, Asad Awan, Ion Stoica, Dilip Joseph, Aditya Ganjam, Jibin Zhan, and Hui Zhang.** *Understanding the Impact of Video Quality on User Engagement.* In *ACM SIGCOMM Computer Communication Review*, volume 41, pages 362–373, 2011.

16. **Michael L Fredman and Robert Endre Tarjan.** *Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms.* *Journal of the ACM (JACM)*, 34(3):596–615, 1987.

17. **Qingzhu Gao, Prasenjit Dey, and Parvez Ahammad.** *Perceived Performance of Top Retail Webpages in the Wild: Insights from Large-Scale Crowdsourcing of Above-the-Fold QoE.* In *Proceedings of the Workshop on QoE-Based Analysis and Management of Data Communication Networks*, pages 13–18, 2017.

18. **Mingzhe Hao, Huaicheng Li, Michael Hao Tong, Chrisma Pakha, Riza O Suminto, Cesar A Stuardo, Andrew A Chien, and Haryadi S Gunawi.** *MittOS: Supporting Millisecond Tail Tolerance with Fast Rejecting SLO-Aware OS Interface.* In *Proceedings of the 26th Symposium on Operating Systems Principles*, pages 168–183. ACM, 2017.

19. **Patrick Hunt, Mahadev Konar, Flavio Paiva Junqueira, and Benjamin Reed.** *Zookeeper: Wait-Free Coordination for Internet-Scale Systems.* In *USENIX ATC*, 2010.

20. **Virajith Jalaparti, Peter Bodik, Srikanth Kandula, Ishai Menache, Mikhail Rybalkin, and Chenyu Yan.** *Speeding Up Distributed Request-Response Workflows.* In *ACM SIGCOMM Computer Communication Review*, volume 43, pages 219–230, 2013.

21. **Junchen Jiang, Xi Liu, Vyas Sekar, Ion Stoica, and Hui Zhang.** *Eona: Experience-Oriented Network Architecture.* In *Proceedings of the 13th ACM Workshop on Hot Topics in Networks*, page 11. ACM, 2014.

22. **Roy Jonker and Anton Volgenant.** *A Shortest Augmenting Path Algorithm for Dense and Sparse Linear Assignment Problems.* *Computing*, 38(4):325–340, 1987.

23. **Rupa Krishnan, Harsha V Madhyastha, Sridhar Srinivasan, Sushant Jain, Arvind Krishnamurthy, Thomas Anderson, and Jie Gao.** *Moving Beyond End-to-End Path Information to Optimize CDN Performance.* In *Proceedings of the 9th ACM SIGCOMM Conference on Internet Measurement*, pages 190–201. ACM, 2009.

24. **Gautam Kumar, Ganesh Ananthanarayanan, Sylvia Ratnasamy, and Ion Stoica.** *Hold’em or Fold’em?: Aggregation Queries Under Performance Variations.* In *Proceedings of the Eleventh European Conference on Computer Systems*, page 7, 2016.

25. **Peng Li, Binoy Ravindran, and E Douglas Jensen.** *Utility Accrual Resource Access Protocols with Assured Timeliness Behavior for Real-Time Embedded Systems.* In *ACM SIGPLAN/SIGBED Conference on Languages, Compilers, and Tools for Embedded Systems*, 2005.

26. **Peng Li, Haisang Wu, Binoy Ravindran, and E Douglas Jensen.** *A Utility Accrual Scheduling Algorithm for Real-Time Activities with Mutual Exclusion Resource Constraints.* *IEEE Transactions on Computers*, 55(4):454–469, 2006.

27. **Hongqiang Harry Liu, Raajay Viswanathan, Matt Calder, Aditya Akella, Ratul Mahajan, Jitendra Padhye, and Ming Zhang.** *Efficiently Delivering Online Services Over Integrated Infrastructure.* In *NSDI*, volume 1, page 1, 2016.

28. **Xi Liu, Florin Dobrian, Henry Milner, Junchen Jiang, Vyas Sekar, Ion Stoica, and Hui Zhang.** *A Case for a Coordinated Internet Video Control Plane.* *ACM SIGCOMM Computer Communication Review*, 42(4):359–370, 2012.

29. **Christopher D Manning, Christopher D Manning, and Hinrich Schütze.** *Foundations of Statistical Natural Language Processing.* MIT Press, 1999.

30. **Ravi Netravali, Ameesh Goyal, James Mickens, and Hari Balakrishnan.** *Polaris: Faster Page Loads Using Fine-Grained Dependency Tracking.* In *NSDI*, pages 123–136, 2016.

31. **Ravi Netravali, Vikram Nathan, James Mickens, and Hari Balakrishnan.** *Vesper: Measuring Time-to-Interactivity for Web Pages.* In *15th USENIX Symposium on Networked Systems Design and Implementation (NSDI)*, 2018.

32. **Lenin Ravindranath, Jitendra Padhye, Sharad Agarwal, Ratul Mahajan, Ian Obermiller, and Shahin Shayandeh.** *AppInsight: Mobile App Performance Monitoring in the Wild.* In *OSDI*, volume 12, pages 107–120, 2012.

33. **Lenin Ravindranath, Jitendra Padhye, Ratul Mahajan, and Hari Balakrishnan.** *Timecard: Controlling User-Perceived Delays in Server-Based Mobile Applications.* In *Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles*, pages 85–100, 2013.

34. **Sanae Rosen, Bo Han, Shuai Hao, Z Morley Mao, and Feng Qian.** *Push or Request: An Investigation of HTTP/2 Server Push for Improving Mobile Performance.* In *Proceedings of the 26th International Conference on World Wide Web*, pages 459–468. International World Wide Web Conferences Steering Committee, 2017.

35. **Vaspol Ruamviboonsuk, Ravi Netravali, Muhammed Uluyol, and Harsha V Madhyastha.** *Vroom: Accelerating the Mobile Web with Server-Aided Dependency Resolution.* In *Proceedings of the Conference of the ACM Special Interest Group on Data Communication*, pages 390–403. ACM, 2017.

36. **Brandon Schlinker, Hyojeong Kim, Timothy Cui, Ethan Katz-Bassett, Harsha V Madhyastha, Italo Cunha, James Quinn, Saif Hasan, Petr Lapukhov, and Hongyi Zeng.** *Engineering Egress with Edge Fabric: Steering Oceans of Content to the World.* In *Proceedings of the Conference of the ACM Special Interest Group on Data Communication*, pages 418–431. ACM, 2017.

37. **P Lalith Suresh, Marco Canini, Stefan Schmid, and Anja Feldmann.** *C3: Cutting Tail Latency in Cloud Data Stores via Adaptive Replica Selection.* In *12th USENIX Symposium on Networked Systems Design and Implementation*, pages 513–527, 2015.

38. **Madeleine Udell and Stephen Boyd.** *Maximizing a Sum of Sigmoids.* *Optimization and Engineering*, 2013.

39. **Balajee Vamanan, Jahangir Hasan, and TN Vijaykumar.** *Deadline-Aware Datacenter TCP (D2TCP).* *ACM SIGCOMM Computer Communication Review*, 42(4):115–126, 2012.

40. **Matteo Varvello, Jeremy Blackburn, David Naylor, and Konstantina Papagiannaki.** *Eyeorg: A Platform for Crowdsourcing Web Quality of Experience Measurements.* In *Proceedings of the 12th International Conference on Emerging Networking EXperiments and Technologies*, pages 399–412, 2016.

41. **Zhe Wu, Curtis Yu, and Harsha V Madhyastha.** *CostLo: Cost-Effective Redundancy for Lower Latency Variance on Cloud Storage Services.* In *NSDI*, pages 543–557, 2015.

42. **Kok-Kiong Yap, Murtaza Motiwala, Jeremy Rahe, Steve Padgett, Matthew Holliman, Gary Baldus, Marcus Hines, Taeeun Kim, Ashok Narayanan, Ankur Jain, Victor Lin, Colin Rice, Brian Rogan, Arjun Singh, Bert Tanaka, Manish Verma, Puneet Sood, Mukarram Tariq, Matt Tierney, Dzevad Trumic, Vytautas Valancius, Calvin Ying, Mahesh Kallahalla, Bikash Koley, and Amin Vahdat.** *Taking the Edge Off with Espresso: Scale, Reliability, and Programmability for Global Internet Peering.* In *Proceedings of the Conference of the ACM Special Interest Group on Data Communication*, pages 432–445. ACM, 2017.

43. **Minlan Yu, Wenjie Jiang, Haoyuan Li, and Ion Stoica.** *Tradeoffs in CDN Designs for Throughput Oriented Traffic.* In *Proceedings of the 8th International Conference on Emerging Networking Experiments and Technologies*, pages 145–156. ACM, 2012.

### Appendices

#### A. Incentive to Improve Latency

We show that it is impossible to improve a group of users' Quality of Experience (QoE) without reducing at least some of their external delays. Formally, this can be expressed by the following theorem.

**Theorem 1.** For \( n \) requests \( r_1, \ldots, r_n \), suppose \( S \) and \( S' \) are the server-side delay vectors when the external delay vector is \( C \) and \( C' \), respectively. If \( S \) is better than \( S' \) given \( C \) (i.e., \( \sum_{i=1}^n Q(c_i + s_i) < \sum_{i=1}^n Q(c'_i + s'_i) \)), then there must exist an \( r_i \) such that \( c'_i > c_i \) and \( Q(c'_i + s'_i) > Q(c_i + s_i) \).

*Proof:* Assume for contradiction that \( S \) is better than \( S' \) given \( C \) and \( c'_i \leq c_i \) for all \( i \). Since \( Q \) is monotonic, \( Q(c'_i + s'_i) \leq Q(c_i + s_i) \) for all \( i \). This implies \( \sum_{i=1}^n Q(c'_i + s'_i) \leq \sum_{i=1}^n Q(c_i + s_i) \), which contradicts the assumption that \( S \) is better than \( S' \) given \( C \). Therefore, there must be at least one \( r_i \) such that \( c'_i > c_i \) and \( Q(c'_i + s'_i) > Q(c_i + s_i) \). \(\blacksquare\)

#### B. User Study on Web Quality of Experience

We provide more details about our user study, which measures the relationship between page load time (PLT) and quality of user experience. We conduct this study on participants hired through Amazon Mechanical Turk (MTurk), a crowdsourcing marketplace.

**Test Procedure:**
- Before entering the study, participants fill out a questionnaire about their basic information, such as age group, nationality, gender, time spent online per day, and primary use of the internet.
- Each participant is asked to rate their experience of the same web page when it is loaded with different PLTs.
- To ensure consistent PLTs, we show each participant a video recording of the web page being loaded at a certain speed, rather than letting them load the web page themselves.
- The videos of different PLTs are played in a random order.
- After watching a video, participants rate the video with a score ranging from 1 to 5 (with 1 being the least satisfactory and 5 being the most satisfactory). This score is regarded as the QoE for the PLT shown in the video.

**Video Recording:**
- To avoid uncontrollable WAN and server-side delays, we first download all web page content on a local machine and then load the pages on this machine.
- This reduces the factors affecting PLT to (1) the browser rendering time on the machine, which is a function of system configuration but remains fixed, and (2) the web data packet arrival rate.
- We achieve the desired PLT by tuning the per-packet delay using a Chrome developer tool called NoThrottling. This allows us to load each web page at the desired PLT and record a video of the loading process. These videos are then shown to the participants during the study.

**Results:**
- We ran the user study on three page types in our traces (Table 1) and four other web pages: a Google search results page and the homepages of Amazon, CNN News, and YouTube.
- For each page, we used 50 MTurk participants.
- Figure 22 shows the results for the four web pages. Although the websites have different PLT sensitivities, a sigmoid-like relationship between QoE and PLT exists for all of them.

**Figure 22: The Relationship Between Page Load Time and User Rating in Different Websites.**

**Response Validation:**
- A common problem in crowdsourcing is the validation of participants' responses. We filtered invalid responses in two ways:
  - **Engagement:** Spending too long or too short on a video may indicate that the participant is distracted or unengaged. We set time thresholds for identifying such participants and remove any response that takes more than 35 seconds or less than 2 seconds.
  - **Outliers:** We view the average of all responses as the "ground truth." We drop responses from participants whose ratings consistently deviate from the ground truth by 3, across all videos.

**Figures:**
- **(a) Amazon: Grade vs. Page Load Time (sec.)**
- **(b) CNN: Grade vs. Page Load Time (sec.)**
- **(c) Google: Grade vs. Page Load Time (sec.)**
- **(d) YouTube: Grade vs. Page Load Time (sec.)**

Each figure shows the mean grade and error bars for the respective website.