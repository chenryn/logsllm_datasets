### Figure 8: Single IP Behavior with Respect to Blacklisting

An application should aim to use a minimal set of dimensions to effectively represent and classify its data.

### 6.3 Case Studies

Two case studies illustrate the types of spam behavior that can evade traditional blacklists but are captured by PreSTA. 

**Case Study 1: Temporal Sending Patterns of a Single IP Address**

Figure 8 shows the temporal sending patterns of a single spamming IP address. This IP was blacklisted twice during the study (indicated by shaded regions), with a short interval (approximately 2 days) between listings. The controller of this IP likely employed blacklist counter-intelligence [22] to increase the likelihood of successful spam delivery. Notice that no spam was observed when the IP was actively listed, but 150 spam emails were received at other times.

Traditional blacklists are reactive and binary, not taking historical behavior into account. During the intermittent period between listings, the blacklist considers the spamming IP as innocent. However, as shown in Figure 8, the IP-level reputation metric accumulates prior evidence. If PreSTA had been in use, the intermittent influx of email would have been identified as spam.

**Case Study 2: AS-Level Analysis with Spatial and Temporal Dimensions**

Figure 9 visualizes a case study at the AS-level, utilizing both spatial and temporal dimensions. In the early stages of data collection, anomalous activity was detected at a specific AS (AS#12743). Even compared to the other four worst-performing ASes during the time block, ASN-12743's drop in reputation was significant. Nearly all of its 4,500 addresses were blacklisted over several days, likely indicating an aggressive botnet-based spam campaign. After this, the reputation increased exponentially, eventually returning to innocent levels.

With traditional blacklists, an IP must send spam before it can be blacklisted. In the ASN-12743 case, this means all 4,500 IPs had a window in which to freely send spam. As the IPs were listed en masse, the AS's reputation dropped dramatically, losing more than 50% of its value. If PreSTA had been implemented, the AS's (and its blocks') low reputation would have classified emails from the remaining addresses as spam, mitigating the bulk of the attack.

### 6.4 Implementation Performance

An important aspect of PreSTA is its scalability. To evaluate this, our PreSTA simulation mimicked the normal processing of a mail server. The blacklist history and cached reputation scores were managed to ensure only the knowledge available at the time of email arrival was used for evaluation. PreSTA requires a warm-up period to gather sufficient temporal knowledge; thus, historical blacklist storage began three months before the first email was scored.

The effectiveness of caching and system latency are also key. Caching is highly effective: 56.8% of block-level calculations and 43.1% of IP-level calculations are avoided (all AS-level calculations are performed offline and then cached). The reputation of incoming emails is calculated in near real-time, with the average email processed in fractions of a second. Under typical conditions, over 500,000 emails can be scored per hour using commodity hardware.

Re-training classifiers and rebuilding the AS-cache are the most time-consuming activities. Fortunately, training new classifiers takes only minutes for a 10,000-email training set and needs to be done every 4 days. Re-training is done offline and does not affect current scoring. Rebuilding the AS reputation cache must be done every 30 minutes once new blacklist data is available, but it does not delay current scoring as previous AS-level reputations remain relevant (at most 30 minutes old).

### 6.5 Spam Mitigation Performance

PreSTA's spam detection capabilities are summarized in Figure 10. On average, 93% of spam emails are identified when used in conjunction with traditional blacklists. While this may seem like a nominal increase, the inset of Figure 10 provides a clearer picture: PreSTA blocks between 20% and 50% of emails that pass the Spamhaus blacklists, with an average of 25.7% (identical to the top line of Figure 7). If PreSTA had been implemented on our university mail server during the study, it would have caught 650,000 spam emails that evaded the Spamhaus blacklists.

Most interestingly, PreSTA provides consistent and steady-state detection. For example, consider the significant variations in blacklist performance seen throughout the study (e.g., in late August 2009 and mid-November 2009). PreSTA remains nearly unaffected during these periods and can serve as a useful stop-gap during fluctuations in blacklist accuracy. While blacklist blockage rates fluctuated by 18% over the course of the study, PreSTA exhibited just 5% variance.

### 7. Evasion and Gamesmanship

To be effective, PreSTA must be robust against evasion and gamesmanship. An entity should not be able to surreptitiously influence its own reputation. Given the use of IP blacklists as a feedback source, the most effective way to avoid PreSTA is to avoid getting blacklisted. However, this technique is not fail-safe; a single evasive entity may still have a poor reputation at a broader granularity. When negative feedback exists and an IP is blacklisted, the best recourse is patience. Over time, the weight of the listing decays. Thus, there is no way to evade PreSTA in the temporal dimension.

Spammers are migratory, and the spatial dimension offers greater opportunities. While IP and block magnitudes are fixed, an AS controls the number of IPs it broadcasts. An actively evasive AS would ensure its entire allocation is broadcasted. More maliciously, a spammer may briefly hijack IP space they were not allocated to send spam from stolen IPs. Such spectrum agility has been shown to be an emergent spamming technique [21]. Fortunately, if the hijacked IP space was not broadcasted (i.e., unallocated), emails from these IPs would map to the special grouping "no AS," whose reputation is zero (per Section 5.5). However, if the hijacked space was broadcasted by a reputable AS, evasion may be possible. Fortunately, the use of unallocated space is most prevalent [21].

This scenario can be described as a sizing attack, which is of most concern to PreSTA. Entities being evaluated should not be able to affect the size of their spatial groupings. However, this attack is only effective when the group size is non-singular, and a simple mitigation technique is to always include a grouping function defining singular groups. Further, an implementation should assign persistent identifiers to entities. When identifiers are non-persistent, PreSTA could fall victim to a Sybil attack [10], as an entity could evade negative feedback by changing identifiers.

### 8. Conclusions

In this paper, we introduced PreSTA, a novel reputation model that combines the rich historical information of blacklists and the spatial relationships of spamming IPs. We demonstrated that PreSTA reputations are an effective measure for classifying spam, identifying up to 50% of spam not caught by blacklists alone. Our preliminary implementation, which combines PreSTA with blacklists, mitigates 93% of spam on average and is stable, reducing the effects of blacklist fluctuations. Finally, PreSTA is scalable and can efficiently handle production email workloads, processing over 500,000 emails per hour.

Having demonstrated PreSTA's proficiency in spam detection, one must consider how this capability is best utilized. Although we do not claim it can or should replace content-based filtering, PreSTA could be applied as an initial filter or grey-listing mechanism. Alternatively, the system could be used to prioritize the processing of incoming email in high-volume situations. Since it is based on centralized blacklist information, PreSTA could be installed as a parallel service provided by blacklist providers.

Furthermore, PreSTA's applicability extends beyond email spam. It has already proven effective in detecting Wikipedia vandalism [30] and shows promise in other domains, such as prioritizing BGP announcements and providing reputation for web-based service mash-ups. Any service requiring dynamic decision-making and access to historical feedback records is a candidate. Ultimately, PreSTA reputations may be utilized as an effective means of performing dynamic access control and mitigating malicious behavior, two extremely relevant issues as service paradigms shift to more distributed architectures.

### 9. Acknowledgments

The authors would like to thank Wenke Lee and David Dagon of Georgia Tech for their initial guidance on this project. Additional thanks go to Charles 'Chip' Buchholtz of UPenn-CETS, who performed mail dumps and aided us in obtaining permission to process those logs.

### References

[1] Apache SpamAssassin. http://spamassassin.apache.org/.

[2] CAIDA. http://www.caida.org/.

[3] DNSBL.info: Blacklists. http://www.dnsbl.info/dnsbl-list.php.

[4] Internet Assigned Numbers Authority. http://www.iana.org/.

[5] MessageLabs Intelligence. http://www.messagelabs.com/.

[6] Proofpoint, Inc. http://www.proofpoint.com/.

[7] Spamhaus Project. http://www.spamhaus.org/.

[8] Univ. of Oregon Route Views. http://www.routeviews.org/.

[9] M. Blaze, S. Kannan, A. D. Keromytis, I. Lee, W. Lee, O. Sokolsky, and J. M. Smith. Dynamic trust management. IEEE Computer (Special Issue on Trust Management), 2009.

[10] J. Douceur. The Sybil attack. In 1st IPTPS, March 2002.

[11] S. Hao, N. A. Syed, N. Feamster, A. G. Gray, and S. Krasser. Detecting spammers with SNARE: Spatio-temporal network-level automated reputation engine. In USENIX Security Sym., 2009.

[12] IronPort Systems Inc. Reputation-based mail flow control. White Paper, 2002. (SenderBase).

[13] T. Joachims. Advances in Kernel Methods - Support Vector Learning, chapter Making Large-scale SVM Learning Practical, pages 169â184. MIT Press, Cambridge, MA, 1999.

[14] A. JÃ¸sang, R. Hayward, and S. Pope. Trust network analysis with subjective logic. In Proceedings of the 29th Australasian Computer Science Conference, 2006.

[15] J. Jung and E. Sit. An empirical study of spam traffic and the use of DNS black lists. In Proc. of the 4th ACM SIGCOMM Conference on Internet Measurement, pages 370â375, 2004.

[16] S. D. Kamvar, M. T. Schlosser, and H. Garcia-Molina. The EigenTrust algorithm for reputation management in P2P networks. In Proc. of the Twelfth WWW Conference, May 2003.

[17] B. Krebs. Host of Internet spam groups is cut off. http://www.washingtonpost.com/wp-dyn/content/article/2008/11/12/AR2008111200658.html, November 2008. (McColo).

[18] B. Krebs. FTC sues, shuts down N. Calif. web hosting firm. http://voices.washingtonpost.com/securityfix/2009/06/ftc_sues_shuts_down_n_calif_we.html, June 2009. (3FN).

[19] Z. Qian, Z. Mao, Y. Xie, and F. Yu. On network-level clusters for spam detection. In Proceedings of the 17th Annual Network and Distributed System Security Symposium (NDSS), 2010.

[20] A. Ramachandran, D. Dagon, and N. Feamster. Can DNSBLs keep up with bots? In Proc. of the 3rd CEAS, 2006.

[21] A. Ramachandran and N. Feamster. Understanding the network-level behavior of spammers. In Proc. of SIGCOMM 2006, 2006.

[22] A. Ramachandran, N. Feamster, and D. Dagon. Revealing botnet membership using DNSBL counter-intelligence. In USENIX: Steps to Reducing Unwanted Traffic on the Internet, 2006.

[23] A. Ramachandran, N. Feamster, and S. Vempala. Filtering spam with behavioral blacklisting. In Proc. of Computer and Communications Security (CCS â07), pages 342â351, 2007.

[24] M. Sahami, S. Dumais, D. Heckerman, and E. Horvitz. A Bayesian approach to filtering junk e-mail. In AAAI-98 Workshop on Learning for Text Categorization, 1998.

[25] S. Sinha, M. Bailey, and F. Jahanian. Improving spam blacklisting through dynamic thresholding and speculative aggregation. In Proceedings of the 17th NDSS, 2010.

[26] Symantec Corporation. IP reputation investigation. http://ipremoval.sms.symantec.com/.

[27] S. Venkataraman, A. Blum, D. Song, S. Sen, and O. Spatscheck. Tracking dynamic sources of malicious activity at internet scale. In Neural Information Processing Systems â09, 2009.

[28] S. Venkataraman, S. Sen, O. Spatscheck, P. Haaffner, and D. Song. Exploiting network structure for proactive spam mitigation. In 16th USENIX Security Symposium, pages 149â166, 2007.

[29] A. G. West, A. J. Aviv, J. Chang, V. S. Prabhu, M. Blaze, S. Kannan, I. Lee, J. M. Smith, and O. Sokolsky. QuanTM: A quantitative trust management system. In EUROSEC 2009, pages 28â35, March 2009.

[30] A. G. West, S. Kannan, and I. Lee. Detecting Wikipedia vandalism via spatio-temporal analysis of revision metadata. In EUROSEC â10, pages 22â28, Paris, France, 2010.

[31] Y. Xie, F. Yu, K. Achan, E. Gillum, M. Goldszmidt, and T. Wobber. How dynamic are IP addresses? In SIGCOMM â07, 2007.