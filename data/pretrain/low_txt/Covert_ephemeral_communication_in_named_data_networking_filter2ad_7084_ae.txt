### 9. Related Work

We categorize the relevant related work into two main classes: covert communication and ephemeral communication.

#### Covert Communication

The primary goal of a covert channel is to conceal the existence of a covert message by transmitting it through legitimate channels [17].

**Jitterbug (Shah et al., 2006)**
- **Description**: Jitterbug is a hardware device and communication protocol that covertly transmits content by introducing small, measurable variations in the timing of keyboard events.
- **Implementation**: A small hardware pass-through device introduces these variations, which can be detected by a receiver monitoring the host’s network traffic when the user runs an interactive communication protocol (e.g., SSH, instant messaging).
- **Performance**: According to experimental results, Jitterbug offers a bandwidth of approximately 500 bps over 14 network hops with an 8.9% error rate. In contrast, our technique provides a bit rate of about 15,000 bps in a similar scenario with a comparable error rate.
- **Differences**: Jitterbug requires the receiver to intercept network traffic, whereas our approach can be used by any unprivileged user.

**CoCo (Houmansadr et al., 2011)**
- **Description**: CoCo is a framework for establishing covert channels via inter-packet delays. The sender generates a traffic flow directed to the receiver, manipulating the flow based on the covert message and a shared key.
- **Robustness**: The coding algorithm used in CoCo ensures robustness against perturbations, and the authors provide statistical evidence of the undetectability of the communication channel.
- **Differences**: CoCo requires direct communication between the sender and receiver, which does not meet our requirements.

**TCP Fields (Murdoch et al., 2005)**
- **Description**: Murdoch et al. investigate covert channels implemented by embedding information in random-looking TCP fields.
- **Detection**: Naive approaches, such as embedding ciphertext in the initial sequence number (ISN) field, are easily detectable. They discuss how to implement networking stack-specific covert channels that are provably undetectable.
- **Differences**: Similar to CoCo, the main difference is that the sender and receiver must exchange packets directly, which is not required in our approach.

#### Ephemeral Communication

**Vanish (Geambasu et al., 2009)**
- **Description**: Vanish allows users to publish ephemeral messages by encrypting them with a random symmetric key and publishing shares of the key in a distributed hash table (DHT).
- **Key Deletion**: Since data on DHTs is automatically deleted over time, the key shares eventually disappear, making the encrypted message inaccessible.
- **Vulnerabilities**: Wolchok et al. (2010) showed that Vanish can be defeated using low-cost Sybil attacks on the DHT. Although countermeasures have been proposed, they only slightly raise the bar against existing attacks [5].
- **Differences**: Our approach makes monitoring all routers' caches infeasible, unlike Vanish, which assumes DHTs are resistant to crawling.

**EphPub (Castelluccia et al., 2011)**
- **Description**: EphPub is a DNS-based ephemeral communication technique where the publisher encrypts and distributes a message, and the decryption key is distributed through DNS resolvers.
- **Key Distribution**: For each key bit set to 1, the publisher uses a DNS resolver to answer recursive DNS queries for a specific domain. Receivers can then issue non-recursive queries to retrieve the key before cache entries expire.
- **Differences**: 
  - EphPub relies on an application-layer service (DNS resolver), while our techniques leverage routers' PITs and caches, which are part of the routing architecture.
  - EphPub can be blocked by forcing users to use a local DNS server with no cache, whereas our PIT-based technique allows two parties to exchange CEMs even if routers do not provide content caching.
  - Wide adoption of EphPub could impose excessive load on DNS servers, while our approach does not increase the load on routers.
  - EphPub does not provide covert communication, as the behavior of users communicating via EphPub is difficult to conceal.

**Ephemerizer (Perlman, 2005)**
- **Description**: Ephemerizer is a centralized approach to secure data deletion, where users encrypt their data and delegate key storage to a trusted third party. This third party destroys cryptographic keys when they "expire," making the original data inaccessible.
- **Differences**: Unlike our approach and other decentralized methods, Ephemerizer requires an always-on, trusted third party.

### 10. Conclusions

In this paper, we present the first evaluation of covert ephemeral communication in NDN. Our techniques do not require the sender (Snd) and receiver (Rcv) to exchange any packets directly. Instead, they rely on user-driven state on routers to publish and retrieve covert messages. Messages published with our approach are ephemeral, meaning they are automatically deleted from the network after a certain amount of time without requiring any action from Snd or Rcv. Additionally, our delay-based techniques ensure that messages expire immediately after being retrieved.

Our techniques are based on fundamental components of NDN and do not require the abuse of application-layer protocols. In practice, Snd and Rcv only need access to non-popular content. We performed experiments on a prototype implementation of our protocols, measuring the bandwidth and robustness of our approaches on both a local (LAN) setup and a geographically distributed environment (the official NDN testbed). Our experiments confirm that the techniques proposed in this paper provide high bandwidth and a low error rate.

### 11. Acknowledgements

We would like to thank Christos Papadopoulos, Steve DiBenedetto, Jeff Burke, and Alex Horn for providing access to the NDN routers hosted at their respective institutions.

### 12. References

[1] G. Acs, M. Conti, P. Gasti, C. Ghali, and G. Tsudik. Cache privacy in named-data networking. In the 33rd International Conference on Distributed Computing Systems (ICDCS), pages 41–51, 2013.

[2] A. Afanasyev, P. Mahadevan, I. Moiseenko, E. Uzun, and L. Zhang. Interest flooding attack and countermeasures in Named Data Networking. In IFIP Networking, pages 1–9, 2013.

[3] Akamai. http://www.akamai.com.

[4] S. Cabuk, C. E. Brodley, and C. Shields. IP covert timing channels: Design and detection. In the 11th ACM Conference on Computer and Communications Security (CCS), pages 178–187, 2004.

[5] C. Castelluccia, E. D. Cristofaro, A. Francillon, and M. A. Kˆaafar. Ephpub: Toward robust ephemeral publishing. In the IEEE International Conference on Network Protocols (ICNP), pages 165–175, 2011.

[6] Content centric networking (CCNx) project. http://www.ccnx.org.

[7] CCNx Interest Message. http://www.ccnx.org/releases/latest/doc/technical/InterestMessage.html.

[8] CCNx Node Model. http://www.ccnx.org/releases/latest/doc/technical/CCNxProtocol.html.

[9] A. Compagno, M. Conti, P. Gasti, and G. Tsudik. Poseidon: Mitigating interest flooding DDoS attacks in Named Data Networking. In the IEEE Conference on Local Computer Networks (LCN), 2013.

[10] M. Conti, P. Gasti, and M. Teoli. A lightweight mechanism for detection of cache pollution attacks in Named Data Networking. Computer Networks: The International Journal of Computer and Telecommunications Networking, 57(16):3178–3191, Nov. 2013.

[11] S. DiBenedetto, P. Gasti, G. Tsudik, and E. Uzun. Andana: Anonymous named data networking application. In the Network and Distributed System Security Symposium (NDSS), 2012.

[12] Facebook. http://www.facebook.com.

[13] P. Gasti, G. Tsudik, E. Uzun, and L. Zhang. DoS & DDoS in named-data networking. In the International Conference on Computer Communications and Networks (ICCCN), pages 1–7, 2013.

[14] R. Geambasu, J. Falkner, P. Gardner, T. Kohno, and K. Krishnamurthy. Experiences building security applications on DHTs. Technical report, UW-CSE-09-09-01, University of Washington, 2009.

[15] R. Geambasu, T. Kohno, A. A. Levy, and H. M. Levy. Vanish: Increasing data privacy with self-destructing data. In USENIX Security Symposium, pages 299–316, 2009.

[16] Google global cache. https://peering.google.com/about/ggc.html.

[17] A. Houmansadr and N. Borisov. CoCo: Coding-Based Covert Timing Channels for Network Flows. In the 13th Information Hiding Conference (IH), pages 314–328, 2011.

[18] Apple iTunes. http://itunes.apple.com.

[19] W. Mazurczyk, K. Szczypiorski, and J. Lubacz. Four ways to smuggle messages through internet services. Spectrum, IEEE, 50(11):42–45, 2013.

[20] S. J. Murdoch and S. Lewis. Embedding covert channels into TCP/IP. In Information Hiding: 7th International Workshop, pages 247–261, 2005.

[21] Named Data Networking project (NDN). http://named-data.org.

[22] NDN Testbed. http://www.named-data.net/testbed.html.

[23] R. Perlman and R. Perlman. The ephemerizer: Making data disappear. Journal of Information System Security, 1:51–68, 2005.

[24] I. S. Reed and G. Solomon. Polynomial codes over certain finite fields. Journal of the Society for Industrial and Applied Mathematics, 8:300–304, 1960.

[25] R. L. Rivest, A. Shamir, and Y. Tauman. How to share a secret. Communications of the ACM, 22(22):612–613, 1979.

[26] G. Shah, A. Molina, and M. Blaze. Keyboards and covert channels. In USENIX Security Symposium, pages 59–75, 2006.

[27] GPS clock synchronization. http://www.spectracomcorp.com/Solutions/Applications/GPSClockSynchronization/tabid/100/Default.aspx.

[28] Google serves 25 percent of North American Internet traffic. http://www.wired.com/wiredenterprise/2013/07/google-internet-traffic/.

[29] M. W¨ahlisch, T. C. Schmidt, and M. Vahlenkamp. Backscatter from the data plane - threats to stability and security in information-centric networking. Computer Networks: The International Journal of Computer and Telecommunications Networking, 57(16):3192–3206, Nov. 2013.

[30] S. Wolchok, O. S. Hofmann, N. Heninger, E. W. Felten, J. A. Halderman, C. J. Rossbach, B. Waters, and E. Witchel. Defeating vanish with low-cost Sybil attacks against large DHTs. In the Network and Distributed System Security Symposium (NDSS), 2010.

[31] M. Xie, I. Widjaja, and H. Wang. Enhancing cache robustness for content-centric networks. In the IEEE International Conference on Computer Communications (INFOCOM), pages 2426–2434, 2012.

[32] YouTube. http://www.youtube.com.