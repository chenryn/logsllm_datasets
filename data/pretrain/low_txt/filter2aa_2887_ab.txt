### System Settings
For both firmware versions, an alternative option is to root the device. In this case, Orbot will automatically transparently proxy all TCP traffic. Development on this port is progressing well, but a trusted, secure browser is still missing. However, there is an ongoing effort to port Mozilla Fennec to this operating system [18]. This will pave the way for a mobile version of TorButton [19], which could bring the first secure mobile browser for anonymous communications to the community.

### MobileTor: Tor on the iPhone and iPod Touch Platforms
iPhone and iPod Touch devices are excellent mobile platforms, offering substantial computing power, high-quality multimedia hardware, and a responsive operating system, all in a compact, portable form factor [20] [21]. It's no surprise that these devices are capturing a larger share of the growing mobile market.

The growth and diffusion of these products are also due to the availability of a continuously expanding application marketplace, the App Store [22], and an active, underground development community built around Cydia [23] [24].

Choosing between the official route using the Apple iPhone SDK [25] or the open-source development toolchain [26] [27] is not straightforward, as both options have their pros and cons. When I began developing a port of Tor for the iPhone, I opted for the open-source route. This decision was partly driven by the stringent rules for app submissions to the App Store, which prohibit new daemons. Therefore, for initial testing and development, the open-source toolchain was the better choice.

The first port of Tor to the iPhone platform was done by cjacker huang in December 2007 [28]. He patched the program to build and run on the early versions of the iPhone firmware, along with a working port of Privoxy, and provided iTor.app, a graphical controller application. Unfortunately, some time later, he disappeared, taking the source code and binaries of iTor.app with him. Only his patches, which were accepted and merged into the Tor source tree, survived. In February 2010, I started from where he left off, refining his patches and offering an up-to-date, functional Tor port for the iPhone.

My current setup includes a Slackware Linux 13.0 64-bit open-source toolchain built against iPhone OS version 3.1.2 and a local Telesphoreo [29] checkout. Packages are built following Jay Freeman's packaging conventions for Cydia and are hosted at my online repository, available at http://sid77.slackware.it/iphone/.

The first phase of the project is now complete, with a fully functional command-line version of Tor running on iPhone and iPod Touch devices. The program can be used as an entry point for the Tor network, as a traffic relaying node over wireless or cellular data networks, and as a host for hidden services.

The second phase of development is underway. Although the port is functioning well, it currently requires an SSH connection from a computer or direct use on the device via MobileTerminal [30], which is impractical for most users. A graphical controller application for Tor on the iPhone is needed. One approach is to implement an SBSettings [31] switch, allowing users to start and stop Tor with a tap on an icon, without needing the command line interface. This program, called Tor Toggle, is ready and will soon be available in my repository. A more comprehensive solution would be a Vidalia-like [17] application, which is the best option for controlling and managing Tor on these devices. However, this is still under heavy development and not yet ready for release.

Despite the progress, several areas need further attention. First, there is a lack of a Tor-secure browser. The iPhone and iPod Touch currently run Mobile Safari or WebKit-based browsers, and tests need to be conducted to ensure a secure, anonymous browsing experience. Another issue is the inability to set a SOCKS proxy from the wireless preference panel; only HTTP proxies are supported. While this can be bypassed with a working Polipo port, using Tor as a plain SOCKS proxy would be beneficial. Lastly, setting a proxy for the cellular network is not possible, and the only workaround is to use a VPN, which is not ideal. These problems are platform-specific but significantly impact the adoption of Tor on these mobile devices.

### Conclusions
On the mobile front, Tor has been ported to various platforms, including the Chumby One, Nokia N900, and Android-based devices. My work has focused on getting Tor running on the iPhone and iPod Touch, and it is currently functioning well. What is still needed is a good, secure browser for anonymous communications on these platforms, which could be achieved by securing existing browsers or developing a new one. Additionally, a graphical controller application needs to be developed to aid in the adoption and diffusion of Tor on these devices.

### References
[1] The Tor Project. https://www.torproject.org/.
[2] Running a Tor relay. https://www.torproject.org/docs/tor-doc-relay.html.en.
[3] Chris Paget, Karsten Nohl. GSM: SRSLY? http://events.ccc.de/congress/2009/Fahrplan/events/3654.en.html.
[4] Fabio Pietrosanti. Mobile Security. Security Summit, 2010.
[5] BlackBerry Help Center. Encryption. http://docs.blackberry.com/en/smartphone-users/deliverables/1487/Encryption-34117-11.jsp.
[6] BlackBerry Help Center. About content protection. http://docs.blackberry.com/en/smartphone-users/deliverables/1487/About-content-protection-29009-11.jsp.
[7] bunnie:studios. Tor Bridge on chumby One. http://www.bunniestudios.com/blog/?p=800.
[8] Jacob Appelbaum. Chumby One and running a bridge. http://archives.seul.org/or/talk/Feb-2010/msg00261.html.
[9] Jacob Appelbaum. Tor on the Nokia N900 (Maemo) GSM telephone. https://blog.torproject.org/blog/tor-nokia-n900-maemo-gsm-telephone.
[10] The Tor Project. Tor: N900 Instructions. https://www.torproject.org/docs/N900.html.
[11] Jacob Appelbaum. Tor on Android. https://blog.torproject.org/blog/tor-android.
[12] The Tor Project. Tor: Android Instructions. https://www.torproject.org/docs/android.html.
[13] The Tor Project. Chumby Tor sources. https://svn.torproject.org/svn/projects/chumby/.
[14] bunnie:studios. Make Your Own 3G Router. http://www.bunniestudios.com/blog/?p=1076.
[15] Maemo Community. Tor. http://maemo.org/packages/view/tor/.
[16] Maemo Community. Extras-devel. http://wiki.maemo.org/Extras-devel.
[17] The Tor Project. Vidalia. http://www.torproject.org/vidalia/.
[18] Mozilla Wiki. Android. https://wiki.mozilla.org/Android.
[19] TorButton. https://www.torproject.org/torbutton/.
[20] Apple. Apple - iPhone - Technical Specifications. http://www.apple.com/iphone/specs.html.
[21] Apple. Apple - iPod Touch - Technical Specifications for iPod Touch. http://www.apple.com/ipodtouch/specs.html.
[22] Apple. Apple - iPhone - Download thousands of iPhone applications. http://www.apple.com/iphone/apps-for-iphone/.
[23] Jay Freeman (saurik). Cydia. http://cydia.saurik.com/.
[24] Jay Freeman (saurik). Bringing Debian APT to the iPhone. http://www.saurik.com/id/1.
[25] Apple. iPhone SDK. http://developer.apple.com/iphone/.
[26] Jay Freeman (saurik). Upgrading the iPhone Toolchain. http://www.saurik.com/id/4.
[27] iphonedevonlinux. http://code.google.com/p/iphonedevonlinux/.
[28] cjacker huang. Tor and Privoxy had been ported to iPhone and works very well. http://archives.seul.org/or/dev/Dec-2007/msg00023.html.
[29] Jay Freeman (saurik). Telesphoreo Tangelo. http://www.telesphoreo.org/.
[30] Mobile Terminal. http://code.google.com/p/mobileterminal/.
[31] BigBoss. The Future of BossPrefs. http://thebigboss.org/2008/10/19/the-future-of-bossprefs/.