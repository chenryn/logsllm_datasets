### Influence of Activity Size on Detectability

In general, focusing on the intrinsic properties of a threat, rather than attempting to fully model its characteristics, is a more promising approach. For instance, the activities targeting port 2967 were detected by shellcode heuristics for both rulesets under examination. However, these detectors highlighted the limitations of signature-based methods: only a few activity types were successfully identified, and due to the limited invariants in packed shellcode (most signatures search for very short byte patterns in the entire payload), they are prone to false positives or even squealing attacks [57]. Only sophisticated—and costly—dynamic approaches such as nemu and libemu have proven to be robust against the challenges posed by the evolving threat landscape.

### Conclusion

This paper provides a comprehensive overview of the threat landscape related to server-side code injection attacks. We leveraged a privileged observation point, a distributed honeypot deployment that has monitored various networks across the IP space over five years. The collected data, available to any interested institution, allows us to provide a historical perspective on the characteristics of attacks and the performance of state-of-the-art detection tools. Our experimental data substantiates several key observations that should guide future research and development in threat monitoring and intrusion detection:

1. **Full Visibility on Internet Threats**: Achieving full visibility on internet threats is challenging. Malicious activities vary over time and across the IP space. Different networks observe attacks of varying complexity, and many threats appear as highly targeted, short-lived activities that are particularly difficult and costly to identify.

2. **Threat Persistence**: In addition to targeted, short-lived activities, we can clearly identify long-lived activities associated with well-known worms and botnets in the dataset. Despite these threats being old and well understood, there is no significant decrease in their attack volume over five years. This highlights an important divergence between state-of-the-art practices and the poor security hygiene observed in certain user populations. Simple, known threats persist undisturbed over the years.

3. **Limitations of Knowledge-Based Approaches**: Knowledge-based intrusion detection approaches have shown clear limitations. Achieving acceptable visibility on the threat landscape is possible but requires a substantial investment in resources to create a comprehensive perspective on current threats. Even then, generating robust signatures for detecting threats remains difficult. Server-side exploits are likely to be used increasingly in targeted, long-term intrusions to propagate within target environments. The challenges observed in this work are likely to be amplified in these contexts. More generic—but costly—approaches seem to be the only promising direction for detecting these threats.

### Acknowledgements

This work was partially supported by the European Commission through projects FP7-SEC-285477-CRISALIS and FP7-PEOPLE-254116-MALCODE, funded by the 7th Framework Program. Michalis Polychronakis is also affiliated with FORTH-ICS. We also thank EmergingThreats for granting us free access to the ETPro ruleset.

### References

1. Symantec: W32.Stuxnet Dossier version 1.4. [Online]. Available: <http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf> (February 2011) [last downloaded October 2012].
2. Symantec: W32.Duqu The precursor to the next Stuxnet. [Online]. Available: <http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_duqu_the_precursor_to_the_next_stuxnet_research.pdf> (November 2011) [last downloaded October 2012].
3. Dacier, M., Pouget, F., Debar, H.: Honeypots: Practical means to validate malicious fault assumptions. In: Proceedings of the 10th IEEE Pacific Rim International Symposium on Dependable Computing, IEEE (2004) 383–388.
4. Cooke, E., Bailey, M., Mao, Z., Watson, D., Jahanian, F., McPherson, D.: Toward understanding distributed blackhole placement. In: Proceedings of the 2004 ACM Workshop on Rapid Malcode, ACM (2004) 54–64.
5. Leita, C., Dacier, M.: SGNET: A worldwide deployable framework to support the analysis of malware threat models. In: 7th European Dependable Computing Conference (EDCC 2008). (May 2008).
6. Song, Y., Locasto, M.E., Stavrou, A., Keromytis, A.D., Stolfo, S.J.: On the infeasibility of modeling polymorphic shellcode. In: Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS). (2007) 541–551.
7. Shacham, H.: The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86). In: Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS). (2007).
8. Bennett, J., Lin, Y., Haq, T.: The Number of the Beast (2013). [Online]. Available: <http://blog.fireeye.com/research/2013/02/the-number-of-the-beast.html>.
9. Roesch, M.: Snort: Lightweight intrusion detection for networks. In: Proceedings of USENIX LISA '99. (November 1999) (software available from <http://www.snort.org/>).
10. Paxson, V.: Bro: A system for detecting network intruders in real-time. In: Proceedings of the 7th USENIX Security Symposium. (January 1998).
11. honeynet.org: Sebek (2012). [Online]. Available: <https://projects.honeynet.org/sebek/>.
12. Tang, Y., Chen, S.: Defending against internet worms: A signature-based approach. In: INFOCOM 2005. 24th Annual Joint Conference of the IEEE Computer and Communications Societies. Proceedings IEEE. Volume 2., IEEE (2005) 1384–1394.
13. Zhuge, J., Holz, T., Han, X., Song, C., Zou, W.: Collecting autonomous spreading malware using high-interaction honeypots. Information and Communications Security (2007) 438–451.
14. Vrable, M., Ma, J., Chen, J., Moore, D., Vandekieft, E., Snoeren, A.C., Voelker, G.M., Savage, S.: Scalability, fidelity, and containment in the Potemkin virtual honeyfarm. In: Proceedings of the Twentieth ACM Symposium on Operating Systems Principles (SOSP). (2005) 148–162.
15. Jiang, X., Xu, D.: Collapsar: A VM-based architecture for network attack detention center. In: Proceedings of the 13th USENIX Security Symposium. (2004).
16. Dagon, D., Qin, X., Gu, G., Lee, W., Grizzard, J., Levine, J., Owen, H.: Honeystat: Local worm detection using honeypots. In: Recent Advances in Intrusion Detection, Springer (2004) 39–58.
17. Portokalidis, G., Slowinska, A., Bos, H.: Argos: An emulator for fingerprinting zero-day attacks for advertised honeypots with automatic signature generation. SIGOPS Oper. Syst. Rev. 40(4) (2006) 15–27.
18. Anagnostakis, K.G., Sidiroglou, S., Akritidis, P., Xinidis, K., Markatos, E.P., Keromytis, A.D.: Detecting Targeted Attacks Using Shadow Honeypots. In: Proceedings of the 14th USENIX Security Symposium. (August 2005) 129–144.
19. Provos, N.: Honeyd: A virtual honeypot daemon. In: 10th DFN-CERT Workshop, Hamburg, Germany. Volume 2. (2003).
20. Baecher, P., Koetter, M., Holz, T., Dornseif, M., Freiling, F.C.: The Nepenthes platform: An efficient approach to collect malware. In: Proceedings of the 9th International Symposium on Recent Advanced in Intrusion Detection (RAID). (2006).
21. Amun: Python honeypot (2009). [Online]. Available: <http://amunhoney.sourceforge.net/>.
22. Dionaea: Catches bugs (2012). [Online]. Available: <http://dionaea.carnivore.it/>.
23. Baecher, P., Koetter, M.: Libemu (2009). [Online]. Available: <http://libemu.carnivore.it/>.
24. Kreibich, C., Weaver, N., Kanich, C., Cui, W., Paxson, V.: [gq]: Practical containment for measuring modern malware systems. In: Proceedings of the ACM Internet Measurement Conference (IMC), Berlin, Germany (November 2011).
25. Leita, C.: SGNET: Automated protocol learning for the observation of malicious threats. PhD thesis, University of Nice-Sophia Antipolis (December 2008).
26. K2: ADMmutate (2001). [Online]. Available: <http://www.ktwo.ca/ADMmutate-0.8.4.tar.gz>.
27. Detristan, T., Ulenspiegel, T., Malcom, Y., Underduk, M.: Polymorphic shellcode engine using spectrum analysis. Phrack 11(61) (August 2003).
28. Obscou: Building IA32 'unicode-proof' shellcodes. Phrack 11(61) (August 2003).
29. Rix: Writing IA32 alphanumeric shellcodes. Phrack 11(57) (August 2001).
30. Mason, J., Small, S., Monrose, F., MacManus, G.: English shellcode. In: Proceedings of the 16th ACM Conference on Computer and Communications Security (CCS). (2009).
31. Kreibich, C., Crowcroft, J.: Honeycomb – creating intrusion detection signatures using honeypots. In: Proceedings of the Second Workshop on Hot Topics in Networks (HotNets-II). (November 2003).
32. Kim, H.A., Karp, B.: Autograph: Toward automated, distributed worm signature detection. In: Proceedings of the 13th USENIX Security Symposium. (2004) 271–286.
33. Singh, S., Estan, C., Varghese, G., Savage, S.: Automated worm fingerprinting. In: Proceedings of the 6th Symposium on Operating Systems Design & Implementation (OSDI). (December 2004).
34. Kolesnikov, O., Dagon, D., Lee, W.: Advanced polymorphic worms: Evading IDS by blending in with normal traffic (2004). [Online]. Available: <http://www.cc.gatech.edu/~ok/w/ok_pw.pdf>.
35. Newsome, J., Karp, B., Song, D.: Polygraph: Automatically Generating Signatures for Polymorphic Worms. In: Proceedings of the IEEE Symposium on Security & Privacy. (May 2005) 226–241.
36. Wang, K., Stolfo, S.J.: Anomalous payload-based network intrusion detection. In: Proceedings of the 7th International Symposium on Recent Advanced in Intrusion Detection (RAID). (September 2004) 201–222.
37. Li, Z., Sanghi, M., Chen, Y., Kao, M.Y., Chavez, B.: Hamsa: Fast signature generation for zero-day polymorphic worms with provable attack resilience. In: Proceedings of the IEEE Symposium on Security & Privacy. (2006) 32–47.
38. Newsome, J., Karp, B., Song, D.: Paragraph: Thwarting signature learning by training maliciously. In: Proceedings of the 9th International Symposium on Recent Advances in Intrusion Detection (RAID). (September 2006).
39. Fogla, P., Sharif, M., Perdisci, R., Kolesnikov, O., Lee, W.: Polymorphic blending attacks. In: Proceedings of the 15th USENIX Security Symposium. (2006).
40. Wang, H.J., Guo, C., Simon, D.R., Zugenmaier, A.: Shield: Vulnerability-driven network filters for preventing known vulnerability exploits. In: Proceedings of the ACM SIGCOMM Conference. (August 2004) 193–204.
41. Brumley, D., Newsome, J., Song, D., Wang, H., Jha, S.: Towards automatic generation of vulnerability-based signatures. In: Proceedings of the IEEE Symposium on Security and Privacy. (2006).
42. Toth, T., Kruegel, C.: Accurate Buffer Overflow Detection via Abstract Payload Execution. In: Proceedings of the 5th Symposium on Recent Advances in Intrusion Detection (RAID). (October 2002).
43. Akritidis, P., Markatos, E.P., Polychronakis, M., Anagnostakis, K.: STRIDE: Polymorphic sled detection through instruction sequence analysis. In: Proceedings of the 20th IFIP International Information Security Conference (IFIP/SEC). (June 2005).
44. Andersson, S., Clark, A., Mohay, G.: Network-based buffer overflow detection by exploit code analysis. In: Proceedings of the Asia Pacific Information Technology Security Conference (AusCERT). (2004).
45. Kruegel, C., Kirda, E., Mutz, D., Robertson, W., Vigna, G.: Polymorphic worm detection using structural information of executables. In: Proceedings of the International Symposium on Recent Advances in Intrusion Detection (RAID). (September 2005).
46. Payer, U., Teufl, P., Lamberger, M.: Hybrid engine for polymorphic shellcode detection. In: Proceedings of the Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA). (July 2005) 19–31.
47. Chinchani, R., Berg, E.V.D.: A fast static analysis approach to detect exploit code inside network flows. In: Proceedings of the International Symposium on Recent Advances in Intrusion Detection (RAID). (September 2005).
48. Wang, X., Pan, C.C., Liu, P., Zhu, S.: Sigfree: A signature-free buffer overflow attack blocker. In: Proceedings of the USENIX Security Symposium. (August 2006).
49. Polychronakis, M., Markatos, E.P., Anagnostakis, K.G.: Network-level polymorphic shellcode detection using emulation. In: Proceedings of the Third Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA). (July 2006) 54–73.
50. Polychronakis, M., Markatos, E.P., Anagnostakis, K.G.: Emulation-based detection of non-self-contained polymorphic shellcode. In: Proceedings of the 10th International Symposium on Recent Advances in Intrusion Detection (RAID). (September 2007).
51. Polychronakis, M., Anagnostakis, K.G., Markatos, E.P.: Comprehensive shellcode detection using runtime heuristics. In: Proceedings of the 26th Annual Computer Security Applications Conference (ACSAC). (December 2010).
52. Snow, K.Z., Krishnan, S., Monrose, F., Provos, N.: ShellOS: Enabling fast detection and forensic analysis of code injection attacks. In: Proceedings of the 20th USENIX Security Symposium. (2011).
53. Leita, C., Mermoud, K., Dacier, M.: Scriptgen: An automated script generation tool for Honeyd. In: 21st Annual Computer Security Applications Conference. (December 2005).
54. Leita, C., Dacier, M., Massicotte, F.: Automatic handling of protocol dependencies and reaction to 0-day attacks with ScriptGen based honeypots. In: 9th International Symposium on Recent Advances in Intrusion Detection (RAID). (September 2006).
55. Polychronakis, M., Anagnostakis, K.G., Markatos, E.P.: An empirical study of real-world polymorphic code injection attacks. In: Proceedings of the 2nd USENIX Workshop on Large-scale Exploits and Emergent Threats (LEET). (April 2009).
56. Polychronakis, M., Keromytis, A.D.: ROP payload detection using speculative code execution. In: Proceedings of the 6th International Conference on Malicious and Unwanted Software (MALWARE). (October 2011) 58–65.
57. Patton, S., Yurcik, W., Doss, D.: An Achilles heel in signature-based IDS: Squealing false positives in Snort. Proceedings of RAID 2001 (2001).