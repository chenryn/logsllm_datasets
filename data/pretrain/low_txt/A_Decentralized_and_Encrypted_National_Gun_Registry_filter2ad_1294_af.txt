### References

1. In *Proceedings on Privacy Enhancing Technologies* (PoPETS '19), 2019.
2. Jones Bater, Gregory Elliott, Craig Eggen, Satyender Goel, Abel Kho, and Jennie Rogers. "SMCQL: Secure Querying for Federated Databases." *Proceedings of the VLDB Endowment*, 10(6):673–684, February 2017.
3. M. Bellare, A. Desai, E. Jokipii, and P. Rogaway. "A Concrete Security Treatment of Symmetric Encryption." In *Symposium on Foundations of Computer Science (FOCS '97)*, pages 394–405. IEEE Computer Society, 1997.
4. Laura Blackstone, Seny Kamara, and Tarik Moataz. "Revisiting Leakage Abuse Attacks." In *Network and Distributed System Security Symposium (NDSS '20)*, 2020.
5. Bolt Labs. *emp-sh2pc*, January 2020.
6. R. Bost. "Sophos - Forward Secure Searchable Encryption." In *ACM Conference on Computer and Communications Security (CCS '16)*, 2016.
7. R. Bost, B. Minaud, and O. Ohrimenko. "Forward and Backward Private Searchable Encryption from Constrained Cryptographic Primitives." In *ACM Conference on Computer and Communications Security (CCS '17)*, 2017.
8. Bureau of Alcohol, Tobacco, Firearms and Explosives. *ATF Form 4473 - Firearms Transaction Record Revisions*, August 2020.
9. R. Canetti. "Security and Composition of Multi-Party Cryptographic Protocols." *Journal of Cryptology*, 13(1), 2000.
10. R. Canetti. "Universally Composable Security: A New Paradigm for Cryptographic Protocols." In *IEEE 42nd Annual Symposium on the Foundations of Computer Science (FOCS 2001)*, pages 111–126. IEEE, 2001.
11. D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M. Rosu, and M. Steiner. "Highly-Scalable Searchable Symmetric Encryption with Support for Boolean Queries." In *Advances in Cryptology - CRYPTO '13*. Springer, 2013.
12. D. Cash and S. Tessaro. "The Locality of Searchable Symmetric Encryption." In *Advances in Cryptology - EUROCRYPT 2014*, 2014.
13. David Cash, Joseph Jaeger, Stanislaw Jarecki, Charanjit Jutla, Hugo Krawczyk, Marcel Rosu, and Michael Steiner. "Dynamic Searchable Encryption in Very-Large Databases: Data Structures and Implementation." In *Network and Distributed System Security Symposium (NDSS '14)*, 2014.
14. Giffords Law Center. *Giffords Law Center to Prevent Gun Violence*, 2018.
15. Giffords Law Center. *Registration*, 2018.
16. M. Chase and S. Kamara. "Structured Encryption and Controlled Disclosure." In *Advances in Cryptology - ASIACRYPT '10*, volume 6477 of *Lecture Notes in Computer Science*, pages 577–594. Springer, 2010.
17. Clare Garvie, Alvaro M. Bedoya, and Jonathan Frankle. *The Perpetual Line-Up*. Technical report, Center on Privacy & Technology at Georgetown Law, Georgetown, Washington D.C., October 2016.
18. R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky. "Searchable Symmetric Encryption: Improved Definitions and Efficient Constructions." In *ACM Conference on Computer and Communications Security (CCS '06)*, pages 79–88. ACM, 2006.
19. Kinan Dak Albab, Rawane Issa, Andrei Lapets, Peter Flockhart, Lucy Qin, and Ira Globus-Harris. "Tutorial: Deploying Secure Multi-Party Computation on the Web Using JIFF." In *2019 IEEE Cybersecurity Development (SecDev)*, pages 3–3, Tysons Corner, VA, USA, September 2019. IEEE.
20. Mohammad Etemad, Alptekin Küpçü, Charalampos Papamanthou, and David Evans. "Efficient Dynamic Searchable Encryption with Forward Privacy." *PoPETs*, 2018(1):5–20, 2018.
21. David Evans, Vladimir Kolesnikov, and Mike Rosulek. *A Pragmatic Introduction to Secure Multi-Party Computation*, volume 2. *Foundations and Trends in Privacy and Security*, 2017.
22. Dan Friedman. *The ATF’s Nonsensical Non-Searchable Gun Databases, Explained*. The Trace, August 2016.
23. S. Garg, P. Mohassel, and C. Papamanthou. "TWORAM: Efficient Oblivious RAM in Two Rounds with Applications to Searchable Encryption." In *Advances in Cryptology - CRYPTO 2016*, pages 563–592, 2016.
24. O. Goldreich, S. Micali, and A. Wigderson. "How to Play ANY Mental Game." In *ACM Symposium on the Theory of Computation (STOC '87)*, pages 218–229. ACM, 1987.
25. S. Jarecki, C. Jutla, H. Krawczyk, M. Rosu, and M. Steiner. "Outsourced Symmetric Private Information Retrieval." In *ACM Conference on Computer and Communications Security (CCS '13)*, pages 875–888, 2013.
26. S. Kamara and T. Moataz. "Boolean Searchable Symmetric Encryption with Worst-Case Sub-Linear Complexity." In *Advances in Cryptology - EUROCRYPT '17*, 2017.
27. S. Kamara and T. Moataz. "Computationally Volume-Hiding Structured Encryption." In *Advances in Cryptology - Eurocrypt '19*, 2019.
28. S. Kamara and C. Papamanthou. "Parallel and Dynamic Searchable Symmetric Encryption." In *Financial Cryptography and Data Security (FC '13)*, 2013.
29. S. Kamara, C. Papamanthou, and T. Roeder. "Dynamic Searchable Symmetric Encryption." In *ACM Conference on Computer and Communications Security (CCS '12)*. ACM Press, 2012.
30. Seny Kamara, Tarik Moataz, and Olya Ohrimenko. "Structured Encryption and Leakage Suppression." In *Advances in Cryptology - CRYPTO '18*, 2018.
31. J. Katz and Y. Lindell. *Introduction to Modern Cryptography*. Chapman & Hall/CRC, 2008.
32. Jeanne Laskas. *Inside the Federal Bureau Of Way Too Many Guns*. GQ, August 2016.
33. James McClure. *Firearms Owners’ Protection Act*, May 1986.
34. McKenzie Funk. *How ICE Picks Its Targets in the Surveillance Age*. New York Times Magazine, October 2019.
35. Metropolitan Police Department. *Application for Firearms Registration Certificate (PD-219)*, August 2020.
36. T. Moataz and S. Kamara. *Clusion*. <https://github.com/encryptedsystems/Clusion>.
37. New York State Police. *Pistol Revolver License Recertification*.
38. V. Pappas, F. Krell, B. Vo, V. Kolesnikov, T. Malkin, S.-G. Choi, W. George, A. Keromytis, and S. Bellovin. "Blind Seer: A Scalable Private DBMS." In *Security and Privacy (SP), 2014 IEEE Symposium on*, pages 359–374. IEEE, 2014.
39. S. Patel, G. Persiano, and K. Yeo. "Symmetric Searchable Encryption with Sharing and Unsharing." *Cryptology ePrint Archive*, Report 2017/973, 2017. <http://eprint.iacr.org/2017/973>.
40. Sarvar Patel, Giuseppe Persiano, Kevin Yeo, and Moti Yung. "Mitigating Leakage in Secure Cloud-Hosted Data Structures: Volume-Hiding for Multi-Maps via Hashing." In *Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security (CCS '19)*, London, UK, November 11-15, 2019, pages 79–93. ACM, 2019.
41. A. Shamir. "How to Share a Secret." *Communications of the ACM*, 22(11):612–613, 1979.
42. D. Song, D. Wagner, and A. Perrig. "Practical Techniques for Searching on Encrypted Data." In *IEEE Symposium on Research in Security and Privacy*, pages 44–55. IEEE Computer Society, 2000.
43. E. Stefanov, C. Papamanthou, and E. Shi. "Practical Dynamic Searchable Encryption with Small Leakage." In *Network and Distributed System Security Symposium (NDSS '14)*, 2014.
44. United States Census Bureau. *2019 National and State Population Estimates*, December 2019.
45. Nikolaj Volgushev, Malte Schwarzkopf, Ben Getchell, Mayank Varia, Andrei Lapets, and Azer Bestavros. "Conclave: Secure Multi-Party Computation on Big Data." In *Proceedings of the Fourteenth EuroSys Conference 2019 - EuroSys '19*, pages 1–18, Dresden, Germany, 2019. ACM Press.
46. Xiao Wang, Alex J. Malozemoff, and Jonathan Katz. *EMP-toolkit: Efficient Multi-Party Computation Toolkit*, 2016.
47. A. Yao. "Protocols for Secure Computations." In *IEEE Symposium on Foundations of Computer Science (FOCS '82)*, pages 160–164. IEEE Computer Society, 1982.
48. A. Yao. "How to Generate and Exchange Secrets." In *IEEE Symposium on Foundations of Computer Science (FOCS '86)*, pages 162–167. IEEE Computer Society, 1986.

### Appendix A: Encrypted Document Databases

We recall the standard approach to designing an encrypted document database using a symmetric key encryption scheme \( \text{SKE} = (\text{Gen}, \text{Enc}, \text{Dec}) \) and a multi-map encryption scheme \( \Sigma_{\text{MM}} = (\text{Init}, \text{Token}, \text{Query}, \text{AddToken}, \text{Add}, \text{Resolve}) \). This is equivalent to the index-based approach to designing SSE schemes from Curtmola et al. [22].

Let \( \text{Index} \) be an algorithm that takes as input a record and outputs label/tuple pairs. Let \( \Sigma_{\text{DB}} = (\text{Init}, \text{Token}, \text{Query}, \text{AddToken}, \text{Add}, \text{Resolve}) \) be a (document) database encryption scheme that works as follows:

- **Init(\(1^k\))**: Takes as input a security parameter \(1^k\) and computes \((K_1, \text{EMM}) \leftarrow \Sigma_{\text{MM}}.\text{Init}(1^k)\) and \(K_2 \leftarrow \text{SKE}.\text{Gen}(1^k)\). It sets \(K = (K_1, K_2)\) and \(\text{EDB} = \text{EMM}\) and outputs \((K, \text{EDB})\).
- **Token(\(K, q\))**: Takes as input a key \(K\) and a query \(q\). It parses \(K\) as \((K_1, K_2)\) and outputs \(tk \leftarrow \Sigma_{\text{MM}}.\text{Token}(K_1, q)\).
- **Query(\(\text{EDB}, tk\))**: Takes as input an encrypted database \(\text{EDB}\) and a token \(tk\). It parses \(\text{EDB}\) as \((\text{EMM}, ct_1, \ldots, ct_n)\) and computes \(I \leftarrow \Sigma_{\text{MM}}.\text{Query}(\text{EMM}, tk)\) and outputs \(\{ct_i\}_{i \in I}\).
- **AddToken(\(K, r\))**: Takes as input a secret key \(K\) and a record \(r\). It parses \(K\) as \((K_1, K_2)\) and computes \(\{((l_1, v_1), \ldots, (l_m, v_m)) \leftarrow \text{Index}(r)\). Then, for all \(1 \leq i \leq m\), it computes \(atk_i \leftarrow \Sigma_{\text{MM}}.\text{AddToken}(K_1, (l_i, v_i))\). Finally, it outputs \(atk = (atk_1, \ldots, atk_m, ct)\), where \(ct \leftarrow \text{SKE}.\text{Enc}(K_2, r)\).
- **Add(\(\text{EDB}, atk\))**: Takes as input an encrypted database \(\text{EDB}\) and an add token \(atk\). It parses \(\text{EDB}\) as \((\text{EMM}_0, ct_1, \ldots, ct_n)\) and \(atk\) as \((atk_1, \ldots, atk_m, ct)\). For all \(1 \leq i \leq m\), it computes \(\text{EMM}_i \leftarrow \Sigma_{\text{MM}}.\text{Add}(\text{EMM}_{i-1}, atk_i)\). It outputs \(\text{EDB} = (\text{EMM}_m, ct_1, \ldots, ct_n, ct)\).
- **Resolve(\(K, ct\))**: Takes as input a secret key \(K\) and a set of ciphertexts \(ct\). It parses \(K\) as \((K_1, K_2)\) and \(ct\) as \((ct_1, \ldots, ct_t)\). For all \(1 \leq i \leq t\), it computes \(r_i \leftarrow \text{SKE}.\text{Dec}(K_2, ct_i)\).

**Concrete Instantiations:**
In this work, we instantiate \(\Sigma_{\text{MM}}\) with the BIEX-2Lev construction of [30]. The indexing algorithm we use takes a record \(r\) as input and, for every field/value pair \(f:v\) in \(r\), outputs a label/value pair \((f \parallel v, r.id)\). To search for all records with \(f = v\), it then suffices to query for \(q = f \parallel v\).

We now describe the leakage profile of BIEX-2Lev. Let
\[
\phi = \left( (w_{1,1} \lor \cdots \lor w_{1,q}) \land \cdots \land (w_{\ell,1} \lor \cdots \lor w_{\ell,q}) \right)
\]
where \(w_{i,j} = f_{i,j} \parallel v_{i,j}\). Then the query leakage of BIEX-2Lev is
\[
L_{\text{biex}}^Q(\text{DB}, \phi) = \left( \left( \left( qeq_g(w_{1,i}), \text{trsize}(L_{\text{MM}1,i}), qeq_d(w_{1,i}), qeq_{1,i}(w_{1,i+1}), \ldots, qeq_{1,i}(w_{1,q}), \text{tag}_{1,i}(w_{1,1}, \ldots, w_{1,q}) \right) \right)_{1 \leq i \leq q-1}, \left( qeq_{1,1}(w_{j,i}), \ldots, qeq_{1,q}(w_{j,i}), \text{tag}_{j,i}(w_{1,i}, \ldots, w_{1,q}) \right)_{2 \leq j \leq \ell, 1 \leq i \leq q} \right)
\]
where \(\text{tag}_{i,j}(w_1, \ldots, w_q) = (f_{i,j}(w_1), \ldots, f_{i,j}(w_1))\) with \(f_{i,j}\) a random function, \(\text{trsize}(\text{MM})\) is a stateful leakage pattern that reveals the size of the multi-map \(\text{MM}\), and \(qeq_X(w)\) is a stateful leakage pattern that reveals if and when \(w\) was queried in the past. Note that \(qeq_X\) and \(qeq_Y\) for \(X \neq Y\) are not correlated in the sense that given \(qeq_X(w)\) and \(qeq_Y(w)\) one cannot tell that the leakages are for the same \(w\). The leakage profile of BIEX-2Lev is complex and can be difficult to understand, but we note that, currently, BIEX is the boolean scheme with the smallest leakage profile. To achieve a better leakage profile, one could use the leakage suppression techniques of [34].

### Appendix B: Semi-Dynamic Encrypted Multi-Maps

As described in Section V, our protocol relies on a semi-dynamic database encryption scheme. Using the approach described in Appendix A, one can construct such a scheme from a semi-dynamic multi-map encryption scheme and symmetric key encryption. Since, in our setting, we want support for boolean queries, we need the multi-map encryption scheme to also support boolean queries. As far as we know, there are three sub-linear boolean multi-map encryption schemes: the scheme that underlies the Blind Seer construction [42], the boolean variant of OXT [15], and the BIEX construction of [30]. The latter is the most efficient but is only static, so we describe here how to make it semi-dynamic using a technique described in [22]. More precisely, given a static multi-map encryption scheme \(\Sigma_{\text{MM}} = (\text{Setup}, \text{Token}, \text{Query})\), we define a semi-dynamic multi-map encryption scheme \(\Sigma_{\text{SDMM}} = (\text{Setup}, \text{Token}, \text{Query}, \text{Update})\) as follows:

- **Setup(\(1^k\))**: Same as \(\Sigma_{\text{MM}}.\text{Setup}(1^k)\).
- **Token(\(K, q\))**: Same as \(\Sigma_{\text{MM}}.\text{Token}(K, q)\).
- **Query(\(\text{EMM}, tk\))**: Same as \(\Sigma_{\text{MM}}.\text{Query}(\text{EMM}, tk)\).
- **Update(\(\text{EMM}, \text{upd}\))**: Takes as input an encrypted multi-map \(\text{EMM}\) and an update \(\text{upd}\). It updates \(\text{EMM}\) according to \(\text{upd}\) and returns the updated \(\text{EMM}\).

This approach allows us to extend the static BIEX-2Lev construction to a semi-dynamic one, supporting both boolean queries and updates.