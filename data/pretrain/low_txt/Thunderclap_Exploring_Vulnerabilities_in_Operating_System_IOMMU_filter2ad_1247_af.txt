### XII. FUTURE WORK

The vulnerability landscape when the IOMMU is enabled is more extensive than initially anticipated, suggesting a wide array of potential attacks. One significant concern is that operating systems (OSs) inadvertently expose data structures with rich semantic content to peripherals. Exploring these structures for further vulnerabilities and exploit techniques is likely to be a fruitful area of research.

Additionally, device behaviors are complex, and the IOMMU's exposure is highly dependent on these behaviors. New vulnerabilities may arise when a device opens new access windows, extends existing ones, or keeps them open longer than necessary.

A natural extension of our work would be to consider mobile and system-on-chip (SoC) platforms. An SoC comprises a complex mesh of components, many of which have access to memory, but only some are labeled as processors. A control compromise in one part (e.g., an LTE radio, audio controller, or vision processing unit) can affect the safe operation of another (e.g., engine management or vehicle navigation). The IOMMU is designed to keep these components isolated, but in this space, the OS, driver, and device stack are quite different and have received little scrutiny.

### XIII. CONCLUSION

We have demonstrated that the vulnerability space exposed to malicious peripherals is both broad and nuanced. While commodity operating systems have recognized the threat and use the IOMMU to protect against DMA attacks, simply isolating device memory, as implemented by macOS in 2012 and now Windows 10 1803, is insufficient. Devices interact deeply with device drivers and other parts of the operating system, and like user processes using the system-call interface, device implementations communicating over the IOMMU-kernel shared-memory interface can stimulate complex and vulnerable behavior. Malicious devices can also tailor their attacks to target the weakest software interfaces.

The threat models of operating-system vendors have not fully accounted for these complexities. Enabling basic IOMMU protections in the PCIe bus framework is not enough; deeper layers such as communication stacks and memory allocators must also be hardened against malicious devices. Our findings show that there is no defense in depth, and close engagement with multiple OS vendors has led to significant improvements in IOMMU security and vulnerability mitigation through now-deployed software updates.

In a world where computers are smaller and more devices are externally pluggable (especially with the ubiquity of USB-C), malicious peripherals can be powerful adversaries.

### ACKNOWLEDGMENT

The authors would like to thank Herbert Bos, Chris Dalton, Matt Evans, Antonio Galvan, Cristiano Giuffrida, Mark Hayter, Xeno Kovah, Greg Kroah-Hartman, Markus Kuhn, Ben Laurie, Steven Murdoch, Chris Riggs, Timothy Roscoe, and Benjamin Serebrin for their feedback and suggestions. This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) and the Air Force Research Laboratory (AFRL) under contracts FA8750-10-C-0237 (“CTSRD”) and HR0011-18-C-0016 (“ECATS”). The views, opinions, and/or findings contained in this report are those of the authors and should not be interpreted as representing the official views or policies of the Department of Defense or the U.S. Government. This work was also supported by EPSRC EP/R012458/1 (“IOSEC”). We also acknowledge Arm Limited and Google Inc. for their support.

### REFERENCES

[1] R. P. Abbott, J. S. Chin, J. E. Donnelley, W. L. Konigsford, S. Tokubo, and D. A. Webb, “Security analysis and enhancements of computer operating systems,” NIST, Tech. Rep. NBSIR 76-1041, Apr. 1976.

[2] Advanced Micro Devices, “AMD I/O virtualization technology: (IOMMU) specification,” Feb. 2015. [Online]. Available: http://support.amd.com/TechDocs/48882 IOMMU.pdf

[3] N. Amit, M. Ben-Yehuda, and B.-A. Yassour, “IOMMU: Strategies for mitigating the IOTLB bottleneck,” in 6th Annual Workshop on the Interaction between Operating Systems and Computer Architecture (WIOSCA), Jun. 2010.

[4] ARM Limited, “ARM System Memory Management Unit architecture specification,” Jun. 2016.

[5] N. Artenstein, “Broadpwn: Remotely compromising Android and iOS via a bug in Broadcom’s Wi-Fi chipsets,” Jul. 2017. [Online]. Available: https://blog.exodusintel.com/2017/07/26/broadpwn/

[6] D. Aumaitre and C. Devine, “Subverting Windows 7 x64 kernel with DMA attacks,” HITBSecConf Amsterdam, 2010.

[7] M. Becher, M. Dornseif, and C. N. Klein, “FireWire: all your memory are belong to us,” Proceedings of CanSecWest, 2005.

[8] F. Bellard, “QEMU, a fast and portable dynamic translator,” in Proceedings of the USENIX Annual Technical Conference. Berkeley, CA, USA: USENIX Association, 2005, pp. 41–46.

[9] M. Ben-Yehuda, J. Xenidis, M. Ostrowski, K. Rister, A. Bruemmer, and L. van Doorn, “The price of safety: Evaluating IOMMU performance,” in OLS ’07: The 2007 Ottawa Linux Symposium, July 2007, pp. 9–20.

[10] G. Beniamini, “Over the air – vol. 2, pt. 3: Exploiting the Wi-Fi stack on Apple devices,” Oct. 2017. [Online]. Available: https://googleprojectzero.blogspot.co.uk/2017/10/over-air-vol-2-pt-3-exploiting-wi-ﬁ.html

[11] ——, “Over the air: Exploiting Broadcom’s Wi-Fi stack,” Apr. 2017. [Online]. Available: https://googleprojectzero.blogspot.co.uk/2017/04/over-air-exploiting-broadcoms-wi-ﬁ-4.html

[12] A. Boileau, “Hit by a bus: Physical access attacks with Firewire,” in Ruxcon 2006, May 2006.

[13] R. Breuk and A. Spruyt, “Integrating DMA attacks in exploitation frameworks,” University of Amsterdam, Tech. Rep., 2012. [Online]. Available: http://www.delaat.net/rp/2011-2012/p14/report.pdf

[14] D. D. Clark, “An input/output architecture for virtual memory computer systems,” Ph.D. dissertation, Massachusetts Inst. of Technology, 1974.

[15] J.-C. Delaunay, “Practical DMA attack on Windows 10,” May 2018. [Online]. Available: https://www.synacktiv.com/posts/pentest/practical-dma-attack-on-windows-10.html

[16] M. Dornseif, “0wn3d by an iPod: Firewire/1394 Issues,” in Proceedings of PacSec Applied Security Conference 2004, 2004. [Online]. Available: https://pacsec.jp/psj04/psj04-dornseif-e.ppt

[17] L. Duflot, Y.-A. Perez, and B. Morin, “What if you can’t trust your network card?” in Recent Advances in Intrusion Detection. Springer, 2011, pp. 378–397.

[18] L. Duflot, Y.-A. Perez, G. Valadon, and O. Levillain, “Can you still trust your network card?” CanSecWest/core10, pp. 24–26, 2010.

[19] J. Fitzpatrick and M. Crabill, “Stupid PCIe tricks, featuring the NSA Playset,” in Proceedings of DEFCON 22, 2014.

[20] U. Frisk, “Direct memory attack the kernel,” in Proceedings of DEFCON’24, Las Vegas, USA, Aug. 2016.

[21] ——, “DMA 3: Attacking over USB-C and Thunderbolt,” Oct. 2016. [Online]. Available: http://blog.frizk.net/2016/10/dma-attacking-over-usb-c-and.html

[22] ——, “Public FPGA-based DMA attacking,” in 34c3, 2017.

[23] H.-C. Fu, P.-H. Wang, and C.-L. Yang, “Active forwarding: Eliminate IOMMU address translation for accelerator-rich architectures,” in 55th Annual Design Automation Conference, 2018.

[24] S. Gallagher, “New WikiLeaks dump: The CIA built Thunderbolt implants to target Macs,” Mar. 2017. [Online]. Available: https://arstechnica.com/security/2017/03/new-wikileaks-dump-the-cia-built-thunderbolt-exploit-implants-to-target-macs/

[25] T. Garfinkel, “Traps and pitfalls: Practical problems in system call interposition based security tools,” in NDSS 2003.

[26] Y. Hao, Z. Fang, G. Reinman, and J. Cong, “Supporting address translation for accelerator-centric architectures,” in High Performance Computer Architecture (HPCA), Feb 2017.

[27] T. Hudson and L. Rudolph, “Thunderstrike: EFI firmware bootkits for Apple MacBooks,” in Proceedings of the 8th ACM International Systems and Storage Conference. ACM, 2015, p. 15.

[28] Intel Corporation, “Thunderbolt technology: Technology brief,” 2012.

[29] ——, “Intel Virtualization Technology for Directed I/O Architecture Specification,” 2014.

[30] ——, “Thunderbolt 3 – USB-C does it all,” May 2015. [Online]. Available: https://thunderbolttechnology.net/blog/thunderbolt-3-usb-c-does-it-all

[31] A. Ionescu, “Getting physical with USB Type-C,” in Recon 2017, Brussels, 2017. [Online]. Available: http://alex-ionescu.com/publications/Recon/recon2017-bru.pdf

[32] S. S. John, “Thundergate.” [Online]. Available: http://thundergate.io/

[33] D. Kaplan, J. Powell, and T. Woller, “AMD memory encryption,” Apr. 2016. [Online]. Available: http://amd-dev.wpengine.netdna-cdn.com/wordpress/media/2013/12/AMD-Memory-Encryption-Whitepaper-v7-Public.pdf

[34] G. Kupfer, “IOMMU-resistant DMA attacks,” Master’s thesis, Technion - Israel Institute of Technology, May 2018.

[35] M. Larabel and M. Tippett, “Phoronix Test Suite v8.0.0.” [Online]. Available: https://www.phoronix-test-suite.com/

[36] Linux kernel development community, “The Linux kernel user’s and administrator’s guide: Thunderbolt.” [Online]. Available: https://www.kernel.org/doc/html/v4.13/admin-guide/thunderbolt.html

[37] F. Lone Sang, E. Lacombe, V. Nicomette, and Y. Deswarte, “Exploiting an I/OMMU vulnerability,” in 5th International Conference on Malicious and Unwanted Software (MALWARE), 2010.

[38] F. Lone Sang, V. Nicomette, and Y. Deswarte, “A tool to analyze potential I/O attacks against PCs,” IEEE Security & Privacy, vol. 12, no. 2, pp. 60–66, Mar 2014.

[39] C. Maartmann-Moe, “Inception.” [Online]. Available: https://github.com/carmaa/inception

[40] M. Malka, N. Amit, M. Ben-Yehuda, and D. Tsafrir, “rIOMMU: Efficient IOMMU for I/O devices that employ ring buffers,” in 20th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2015.

[41] M. Malka, N. Amit, and D. Tsafrir, “Efficient intra-operating system protection against harmful DMAs,” in 13th USENIX Conference on File and Storage Technologies (FAST 15), 2015.

[42] A. Markuze, A. Morrison, and D. Tsafrir, “True IOMMU protection from DMA attacks: When copy is faster than zero copy,” in 21st International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2016.

[43] A. Markuze, I. Smolyar, A. Morrison, and D. Tsafrir, “DAMN: Overhead-free IOMMU protection for networking,” in 23rd International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2018.

[44] Microsoft, “Kernel DMA protection for Thunderbolt 3,” Oct. 2018. [Online]. Available: https://docs.microsoft.com/en-us/windows/security/information-protection/kernel-dma-protection-for-thunderbolt

[45] R. Monroe, “Map of the Internet,” 2006. [Online]. Available: https://xkcd.com/195/

[46] B. Morgan, É. Alata, V. Nicomette, and M. Kaaniche, “Bypassing IOMMU protection against I/O attacks,” in 2016 Seventh Latin-American Symposium on Dependable Computing (LADC), Oct 2016, pp. 145–150.

[47] B. Morgan, É. Alata, V. Nicomette, and M. Kaaniche, “IOMMU protection against I/O attacks: a vulnerability and a proof of concept,” J. Brazilian Computer Society, vol. 24, no. 1, p. 2, Jan 2018.

[48] R. Neugebauer, G. Antichi, J. F. Zazo, Y. Audzevich, S. López-Buedo, and A. W. Moore, “Understanding PCIe performance for end host networking,” in SIGCOMM 2018, Aug. 2018.

[49] K. Nohl, S. Krissler, and J. Lell, “BadUSB – on accessories that turn evil,” in BlackHat U.S. 2014.

[50] D. Oleksiuk, “Dmytro’s rogue PCI-E device,” Apr. 2017. [Online]. Available: https://firmwaresecurity.com/2017/04/07/dmytros-rogue-pci-e-device/

[51] PCI-SIG, “PCI Express base specification revision 3.0,” Nov. 2010.

[52] G. Pék, A. Lanzi et al., “On the feasibility of software attacks on commodity virtual machine monitors via direct device assignment,” in 9th ACM Symposium on Information, Computer and Communications Security (ASIA CCS ’14), 2014.

[53] O. Peleg, A. Morrison, B. Serebrin, and D. Tsafrir, “Utilizing the IOMMU scalably,” in 2015 USENIX Annual Technical Conference (USENIX ATC 15), Jul. 2015.

[54] V. Prasad, W. Cohen, F. Eigler, M. Hunt, J. Keniston, and J. Chen, “Locating system problems using dynamic instrumentation,” in 2005 Ottawa Linux Symposium, 2005, pp. 49–64.

[55] Red Hat Inc., “Red Hat achieves Common Criteria Security certification for Red Hat Enterprise Linux 7,” Oct. 2016. [Online]. Available: https://www.redhat.com/en/about/press-releases/red-hat-achieves-common-criteria-security-certification-red-hat-enterprise-linux-7

[56] R. Sevinsky, “Funderbolt: Adventures in Thunderbolt DMA attacks,” in BlackHat USA, 2013.

[57] O. Shwartz, A. Cohen, A. Shabtai, and Y. Oren, “Shattered trust: When replacement smartphone components attack,” in WOOT’17, 2017.

[58] Snare and Rzn, “Thunderbolts and Lightning – very, very frightening,” in Proceedings of SyScan Singapore 2014, Apr. 2014.

[59] S. St. John, “Thunderbolt: Exposure and mitigation,” Fall 2013. [Online]. Available: http://www.thundergate.io

[60] P. Stewin and I. Bystrov, “Understanding DMA malware,” in 9th International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA’12), 2013.

[61] A. Trikalinou and D. Lake, “Taking DMA attacks to the next level,” in BlackHat USA, Jul. 2017.

[62] A. Triulzi, “Project Maux Mk. II, I 0wn the NIC, now I want a shell,” in Proceedings of PacSec 2008, 2008.

[63] ——, “The Jedi Packet Trick takes over the Deathstar,” in Central Area Networking and Security (CANSEC 2010), Mar. 2010.

[64] USB Implementers Forum, “USB Type-C cable and connector specification,” Jul. 2017.

[65] R. N. M. Watson, “Exploiting concurrency vulnerabilities in system call wrappers,” in Proceedings of the First USENIX Workshop on Offensive Technologies, ser. WOOT ’07, 2007.

[66] P. Willmann, S. Rixner, and A. L. Cox, “Protection strategies for direct access to virtualized I/O devices,” in USENIX 2008 Annual Technical Conference, 2008.

[67] R. Wojtczuk and J. Rutkowska, “Following the White Rabbit: Software attacks against Intel VT-d technology,” 2011. [Online]. Available: http://www.invisiblethingslab.com/resources/2011/Software%20Attacks%20on%20Intel%20VT-d.pdf

[68] R. Wojtczuk, J. Rutkowska, and A. Tereshkin, “Another way to circumvent Intel Trusted Execution Technology,” 2009.

[69] J. Yao, V. J. Zimmer, and S. Zeng, “A tour beyond BIOS: Using IOMMU for DMA protection in UEFI firmware,” 2017. [Online]. Available: https://firmware.intel.com/sites/default/files/Intel-WhitePaper-Using-IOMMU-for-DMA-Protection-in-UEFI.pdf

[70] Z. Zhu, S. Kim, Y. Rozhanski, Y. Hu, E. Witchel, and M. Silberstein, “Understanding the security of discrete GPUs,” in Proceedings of the General Purpose GPUs, ser. GPGPU-10, 2017.