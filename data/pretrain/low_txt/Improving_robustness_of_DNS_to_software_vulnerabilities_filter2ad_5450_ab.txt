### 5.4.3 Attack Costs
Page: 91

### 5.5 Results
Page: 92

#### 5.5.1 Choosing Hyperparameters
Page: 93

#### 5.5.2 Targeted Noise Injection
Page: 95

#### 5.5.3 Small Community
Page: 100

### 5.6 Defense
Page: 110

#### 5.6.1 Training Classifier with Noise
Page: 111

#### 5.6.2 Improving Hyperparameter Selection
Page: 112

### 5.7 Summary
Page: 114

## Chapter 6: Conclusion and Future Work
Page: 115

### 6.1 Overall Contribution and Summary
Page: 115

### 6.2 Future Work
Page: 115

## Appendix A: DGA Detection
Page: 119

### A.1 Unique Domains Queried by Hosts
Page: 119

### A.2 Labeled DGA Families
Page: 119

### A.3 Reimplementing Pleiades
Page: 119

### A.4 Current DGA Landscape
Page: 123

## References
Page: 136

---

## List of Tables

### Table 3.1
**Summary of Datasets**
Page: 29

### Table 3.2
**Categories of Newly Detected Ad-Abuse Domains**
- **Note**: There are only three non-TDSS/TDL4 domains based on manual analysis. The email addresses are obfuscated.
Page: 38

### Table 3.3
**Top 7 Countries Where C&C Infrastructure Has Been Identified**
- **Note**: These countries account for 71% of the IP addresses.
Page: 41

### Table 3.4
**Financial Breakdown Approximation Among Entities in the Online Ad Ecosystem (in Millions of Dollars)**
Page: 43

### Table 3.5
**Extent to Which TDSS/TDL4 Has Affected the Internet**
- **Note**: The table is limited to the top 6 observations. Ad networks and publishers' domain names have been aggregated to their owner companies.
Page: 44

### Table 4.1
**Summary of All Datasets**
Page: 52

### Table 4.2
**Top Six Countries and Autonomous System Names for Hashed Client IP Addresses**
- **4.2a**: Top six countries for 66.75% of hashed client IP addresses.
- **4.2b**: Top six Autonomous System Names for 17.66% of hashed client IP addresses.
Page: 59

### Table 5.1
**Summary of Datasets and Their Availability to Minimal, Moderate, and Perfect Knowledge Attackers**
Page: 89

### Table 5.2
**Anomaly Cost as Percentile of the Distinct Number of NXDOMAINs Queried by Hosts, Before and After the Attack**
- **Note**: Only 9.12% of infected hosts become more suspicious, while the rest remain the same.
Page: 99

### Table 5.3
**Agility Cost of Small Community Attacks Under Different Hyperparameter Configurations**
Page: 107

### Table 5.4
**False Positive Rate for Four DGA Families Before Retraining and After Retraining with Three Types of Noise**
Page: 111

### Table A.1
**DGA Families Contained Within Our Ground Truth Dataset**
Page: 121

---

## List of Figures

### Figure 2.1
**A Brief Overview of the Online Advertising Ecosystem**
Page: 12

### Figure 3.1
**High-Level Overview of DNS Resolution, Sinkholing Processes, and Points Where Ad-Abuse Can Be Observed**
Page: 17

### Figure 3.2
**Overview of the Ad-Abuse Analysis System (A2S)**
Page: 20

### Figure 3.3
**Association Matrix for Domain, RDATA, and Host**
Page: 25

### Figure 3.4
**Number of Requests Received by the DNS and HTTP Sinkholes Over 10 Months**
Page: 28

### Figure 3.5
**Sensor Availability for the NXDOMAIN Dataset Over Four Years**
- **Note**: 247 out of 1,542 days are missing.
Page: 31

### Figure 3.6
**Victim Population of the Botnet Sample and Number of Sinkholed Domains**
- **Top**: Line plot shows the victim population, and area plot shows the number of sinkholed domains.
- **Bottom**: Percent change.
Page: 32

### Figure 3.7
**Cumulative Distribution Functions (CDFs) for Various Metrics**
- **3.7a**: Infection duration based on infection ID and IP address.
- **3.7b**: Number of related historical domain names per IP from initial ground truth (D$).
- **3.7c**: Number of domains queried by internal hosts (H).
- **3.7d**: Host overlaps for TDSS/TDL4 ground truth domains.
Page: 34

### Figure 3.8
**Evolution of TDSS/TDL4 Domains and Their IP Infrastructure**
- **Note**: The number of active domain names daily increased from 2010, reaching a maximum of 333 on 4/9/2012. None of the domains resolved to any active IP after 10/15/2013.
Page: 37

### Figure 3.9
**Ad-Abuse C&C Domains Lifetime**
Page: 40

### Figure 3.10
**Daily and Cumulative Financial Loss for Advertisers Due to Ad-Abuse by TDSS/TDL4**
- **Note**: Less than 15% of the botnet population is estimated to have been involved in ad fraud that cost at least $346 million from 1/1/2011 to 10/15/2013.
Page: 41

### Figure 4.1
**Simplified View of the Real-Time Bidding Process**
Page: 52

### Figure 4.2
**Number of Daily Bid Requests from Ad Exchanges Seen in the DSP**
Page: 53

### Figure 4.3
**Number of Daily Publisher Domains from Ad Exchanges Seen in the DSP**
Page: 54

### Figure 4.4
**Examples of Blacklisted Publisher Domains Seen in the DSP Traffic**
Page: 56

### Figure 4.5
**Distributions of Client IP Address Locations**
Page: 59

### Figure 4.6
**Density Plots of First and Last Seen Dates on PBL and DSP**
- **4.6a**: First seen date on PBL - first date seen from DSP.
- **4.6b**: Last seen date on PBL - last date seen from DSP.
Page: 61

### Figure 4.7
**Scatter Plot of First Date Seen on PBL and First Date Seen from DSP for All DSP Domains That Were on PBL**
Page: 62

### Figure 4.8
**PBL and Md5 Plots, and CDF for Number of Publisher Domains Forming Components on 12/10/2014**
- **4.8a to 4.8d**: PBL plots.
- **4.8e to 4.8h**: Md5 plots.
- **4.8i**: CDF for number of publisher domains forming components on 12/10/2014.
Page: 64

### Figure 4.9
**Scores for Components, Number of Components in Ad Campaigns, and Ad Campaign Scores on 12/10/2014**
- **4.9a**: Three scores for components.
- **4.9b**: Number of components in ad campaigns.
- **4.9c**: Ad campaign scores.
Page: 65

### Figure 4.10
**Number of Vertices, Edges, and Density Values for the Graph Every Day**
Page: 68

### Figure 4.11
**Publisher Domain Examples**
Page: 72

### Figure 4.12
**Malware Site Example**
Page: 74

### Figure 5.1
**Example of Targeted Noise Injection Attacks on a Graph**
Page: 83

### Figure 5.2
**Example of Small Community Attacks on a Graph**
Page: 86

### Figure 5.3
**Overview of the DGA Detection System**
Page: 89

### Figure 5.4
**Scree Plot of Eigenvalues of SVD**
Page: 93

### Figure 5.5
**Using Cluster Validity Metrics to Choose Walk Length**
Page: 94

### Figure 5.6
**Predicted Class Probabilities Before and After Targeted Noise Injection Attacks**
- **5.6a**: Predicted class probabilities before and after two variants of the targeted noise injection attack in minimal, moderate, and perfect knowledge.
- **5.6b**: Predicted class probabilities before and after the targeted noise injection attacks for community discovery and node2vec.
- **5.6c**: Predicted class probabilities under different attacks after retraining, including the “Minimal Benign DGA 1” clusters.
Page: 97

### Figure 5.7
**Different Number of Eigenvalues**
Page: 102

### Figure 5.8
**Success Area for Joining the Death Star of the Surrogate Dataset in the Moderate Knowledge Case**
- **Note**: All successful attack configurations worked in the ground truth network.
Page: 103

### Figure 5.9
**Success Area of Small Community Attacks with Different Context Size**
Page: 104

### Figure 5.10
**Different Sizes of the Network Dataset**
Page: 106

### Figure 5.11
**Success Area of Small Community Attacks with Different Number of Walks**
Page: 108

### Figure 5.12
**Success Area of Small Community Attacks with Different Walk Length**
Page: 109

### Figure 5.13
**Using the Small Community Attack to Choose Parameters for SVD and Node2vec**
- **5.13a**: Using the small community attack to choose the number of eigenvalues for SVD.
- **5.13b**: Using the small community attack to choose the length of walk for node2vec.
Page: 112

### Figure 5.14
**Using the Small Community Attack to Choose Parameters for Node2vec**
- **5.14a**: Using the small community attack to choose the number of walks per node for node2vec.
- **5.14b**: Using the small community attack to choose the neighborhood size for node2vec.
Page: 113

### Figure A.1
**Cumulative Distribution of Distinct Number of NXDOMAINs Queried by Each Host on 12/18/2016**
Page: 120

### Figure A.2
**ROC Curves for 16 Malware DGA Classes and One Benign Class**
Page: 122

### Figure A.3
**Micro and Macro ROC Curves**
Page: 122

### Figure A.4
**Newly Found DGAs**
Page: 123

---

## Summary

Clustering is often the first step performed to assist in finding structure within unlabeled datasets. Given a small set of labels, clustering also enables us to propagate these labels by discovering groups of objects that are similar to each other. The ever-growing amount of data being collected over a long period of time brings many challenging opportunities to conduct clustering. Analyzing such long-term datasets allows us to solve evolving security problems such as botnet forensic analysis, early warning of new threats, and the evolution of security phenomena. However, the analysis also faces the challenge presented by noise in the data.

This thesis improves the robustness of clustering against noise by focusing on DNS graphs. Noise can be either inherent in the dataset or injected by adversaries. The first goal of the thesis is to mitigate the effect of inherent noise in the data. To achieve this, we perform measurement studies from two different vantage points in the online advertising ecosystem. As a multi-billion dollar industry, the online ad ecosystem naturally attracts ad abuse from miscreants. We propose a new clustering technique to automatically analyze the costs of impression fraud to advertisers generated by the botnet TDSS/TDL4 over four years. Additionally, our measurement results show statistically significant differences between blacklisted publishers and those that were never blacklisted, from the vantage point of a Demand Side Platform provider.

The second goal of the thesis is to increase the robustness of clustering against adversarial noise. Little work has been done in adversarial clustering to understand the weaknesses of clustering systems. We propose two novel attacks: one that injects noise into existing clusters and one that moves data points to noisy clusters. After analyzing the effectiveness and cost of these attacks, we present defense techniques that improve the robustness of clustering algorithms.