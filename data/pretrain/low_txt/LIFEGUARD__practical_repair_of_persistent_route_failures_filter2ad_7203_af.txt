### Optimized Text

**Reachability and Failure Analysis**

During the failure, alternative paths still existed that could reach Wisconsin. These measurements established a reachability horizon with UUNET and the Autonomous Systems (ASes) preceding it. During the failure, all routers along the academic path from the divergence point to Wisconsin remained responsive to pings, indicating they had a route to the University of Wisconsin. However, hops within UUNET no longer responded to probes. In fact, manual inspection of traceroutes from the PlanetLab node to Wisconsin revealed that, at 8:15 PM, the path had switched to go via UUNET, and the traceroutes were terminating within UUNET.

Since the hops on the academic route had viable paths to Wisconsin, it was a likely alternative to the broken path. We used LIFEGUARD to poison UUNET. For a brief period after LIFEGUARD announced the poison, test traffic was caught in a convergence loop. After convergence, the test traffic and a traceroute from Taiwan successfully reached the production prefix via academic networks. Traceroutes to the sentinel prefix continued to fail in UUNET until just after 4 AM on October 4, when the path through UUNET began to work again.

In summary, LIFEGUARD isolated the outage and used poisoning to re-establish connectivity until the outage was resolved. Once the issue was repaired, the poison was no longer necessary, and LIFEGUARD reverted to the baseline unpoisoned announcement.

**Discussion**

**7.1 Poisoning Anomalies**

Certain poisonings can cause anomalous behavior. Some networks disable loop detection, accepting paths even if they contain their own AS. Other networks do not accept an update from a customer if the path contains a peer of the network. We discuss these two issues below.

**Loop Detection Disabling**

Some networks with multiple remote sites communicate between sites across the public Internet, using the same AS number across sites. One approach is to disable BGP’s loop prevention to exchange prefixes from the remote sites, even though they share an origin AS. The paths for these prefixes allow the remote sites to route to each other using BGP. Best practices mandate that, instead of disabling loop detection altogether, networks should set the maximum occurrences of their AS number in the path. For example, AS286 accepts updates if it is already in the AS path. Inserting AS286 twice into the AS path, however, causes it to drop the update, thus enabling the use of poisoning. We expect ASes that use the public Internet to communicate between remote sites to be stubs (meaning they have no customers). We use poisoning to bypass faulty transit networks, so there is no need to poison stubs.

**Peer Filtering**

Some networks do not accept an update from a customer if the path contains one of the network’s peers. For instance, Cogent will not accept an update that includes one of its Tier-1 peers in the path, meaning that announcements poisoning one of these ASes via Georgia Tech did not propagate widely. However, we could poison them via BGP-Mux instances at universities that were not Cogent customers, and 76% of route collector peers were able to find a path that avoided a poisoned AS through which they had previously been routing. While this filtering reduced the coverage of our poisoning studies and will prevent poisoning from rerouting around some failures, it is likely not a significant limitation. First, most failures occur outside of large networks (such as Cogent and Tier-1s) [32, 36]. Second, we used poisoning to experiment with AS avoidance, but most of the techniques and principles still apply to other implementations, such as a modification of BGP to include a new signed AVOID_PROBLEM(X,P) notification.

**7.2 Address Use by the Sentinel Prefix**

We proposed using a less-specific prefix with an unused sub-prefix as a sentinel. We discuss the trade-offs of three alternative approaches:

1. **No Sentinel**: Without a sentinel, it is unclear how to check for failure recovery or provide a backup unpoisoned route.
2. **Unused Non-Adjacent Prefix**: If an AS has an unused prefix that is not adjacent to the production prefix, it can use the unused prefix as a sentinel, even though it may lack a super-prefix that covers both prefixes. This allows the AS to check when the failed route is repaired. However, this scheme does not provide a “backup” route to the production prefix for networks captive behind the poisoned AS.
3. **Less-Specific Prefix**: If an AS lacks unused address space to serve as a sentinel, a less-specific prefix will ensure that the poisoned AS and ASes captive behind it still have a route, even though the less-specific prefix does not include an unused sub-prefix. Pings to the poisoned AS and its captives will return via routes to the unpoisoned less-specific prefix, and so they can be used to check for repairs.

Alternatively, a provider with multiple prefixes hosting the same service can use DNS redirection to test when a problem has resolved, without using additional addresses. Such providers often use DNS to direct a client to a nearby data prefix. Our scheme relies on clients using the same route to reach all prefixes in the absence of poison. To establish that this property holds, at least for Google, we resolved a Google hostname at 20 PlanetLab sites around the world, yielding a set of Google IP addresses from various data centers. We then issued traceroutes from the PlanetLab sites to the set of IP addresses. Each PlanetLab site used a consistent path to reach Google’s network for all IP addresses. Google then routed the traffic to a particular data center. With this consistent routing, if a provider discovers a routing problem affecting a set of clients C, it could poison the prefix P1 serving those clients. It need not poison its prefix P2 that serves other clients (possibly from a different data center). Periodically, the provider’s DNS resolvers could give a client from C an address from P2 and an address from P1, with P1 serving as a failover. By checking server logs, the provider could discern if the client was able to reach P2. When clients can reach P2, the provider can remove the poison on P1.

**8. Related Work**

**Failure Isolation**

Hubble [20] informs our failure isolation approach. LIFEGUARD makes heavy use of reverse traceroute [19]. Feamster et al. measured failures between vantage points using pings and traceroutes [13]. Upon detecting a problem, PlanetSeer triggered measurements from multiple vantage points [36]. However, after identifying partial outages, all further probes and analysis focused only on local measurements.

Feldman et al. located the cause of BGP updates by assuming it was on the old path or the new path. They could pinpoint the likely cause of a BGP update to one or two ASes [14]. iSpy [39] identified prefix hijacking using a technique similar to LIFEGUARD’s reachability horizon, but assumed that paths were symmetric. LIFEGUARD uses reverse traceroute and spoofed probes to more accurately determine the reachability horizon.

**Failure Avoidance**

Previous research used poisoning as a means to uncover network topology [10] and default routes [8]. While inspired by that work, we propose using poisoning operationally to improve availability. In the absence of a solution to long-lasting, partial outages, researchers and companies have proposed systems to detour traffic around outages using overlay paths [2, 6, 16]. These approaches provide a great alternative when no other solutions exist. In contrast to detouring, our poisoning approach does not require the expense of an overlay and can carry traffic at core Internet data rates along policy-compliant BGP paths that avoid the identified problem.

Entact used overlapping BGP prefixes to simultaneously measure alternative paths [38]. Bush et al. used an anchor prefix to determine whether a test prefix should be reachable [8]. Similarly, LIFEGUARD uses a sentinel prefix to test for repairs along the failing path while rerouting traffic to a path avoiding the outage.

MIRO proposed to enable AS avoidance and other functionality by allowing ASes to advertise and use multiple inter-domain paths [34]. The proposal retains much of the quintessence of BGP and routing policies but requires modifications to protocols and routers, meaning it faces a slow path to adoption. Our deployable solutions and results on failure avoidance could perhaps present some of the arguments for the adoption of MIRO-like modifications.

**9. Conclusion**

Increasingly, Internet and cloud-based services expect the Internet to deliver high availability. Nevertheless, partial outages that last for hours occur frequently, accounting for a large portion of the Internet’s overall end-to-end downtime. Such an outage can occur when an ISP advertises a BGP route but fails to deliver packets on the route. To address these problems, we introduce LIFEGUARD, a system that locates the AS at fault and routes around it. Using multiple vantage points and spoofed probes, we show that LIFEGUARD can identify the failing AS in the wild. We show that we can use BGP poisoning to cause routes to avoid an AS without disrupting working routes. An ISP can deploy our approach unilaterally today. LIFEGUARD enables experiments that we hope will motivate the need for and design of new route control mechanisms.

**Acknowledgments**

We gratefully acknowledge our shepherd Craig Labovitz and the SIGCOMM reviewers. The BGP-Mux system would not be available without the help of researchers and network administrators at the sites: Scott Friedrich, Michael Blodgett, Jeff Fitzwater, Jennifer Rexford, Larry Billado, Kit Patterson, and Schyler Batey. This work was partially funded by Google, Cisco, FAPEMIG, NSF (CNS-0905568 and CNS-1040663), and the NSF/CRA Computing Innovation Fellowship program. We are thankful for their support.

**10. References**

[1] Abilene Internet2 network. http://www.internet2.edu/network/.
[2] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris. Resilient overlay networks. In SOSP, 2001.
[3] R. Austein, S. Bellovin, R. Bush, R. Housley, M. Lepinski, S. Kent, W. Kumari, D. Montgomery, K. Sriram, and S. Weiler. BGPSEC protocol. http://tools.ietf.org/html/draft-ietf-sidr-bgpsec-protocol.
[4] The BGP Instability Report. http://bgpupdates.potaroo.net/instability/bgpupd.html.
[5] BGPMux Transit Portal. http://tp.gtnoise.net/.
[6] C. Bornstein, T. Canfield, and G. Miller. Akarouting: A better way to go. In MIT OpenCourseWare 18.996, 2002.
[7] M. A. Brown, C. Hepner, and A. C. Popescu. Internet captivity and the de-peering menace. In NANOG, 2009.
[8] R. Bush, O. Maennel, M. Roughan, and S. Uhlig. Internet optometry: assessing the broken glasses in Internet reachability. In IMC, 2009.
[9] K. Chen, D. R. Choffnes, R. Potharaju, Y. Chen, F. E. Bustamante, D. Pei, and Y. Zhao. Where the sidewalk ends: Extending the Internet AS graph using traceroutes from P2P users. In CoNEXT, 2009.
[10] L. Colitti. Internet Topology Discovery Using Active Probing. PhD thesis, University di "Roma Tre", 2006.
[11] I. Cunha, R. Teixeira, and C. Diot. Predicting and tracking Internet path changes. In SIGCOMM, 2011.
[12] B. Donnet, P. Raoult, T. Friedman, and M. Crovella. Efficient algorithms for large-scale topology discovery. In SIGMETRICS, 2005.
[13] N. Feamster, D. G. Andersen, H. Balakrishnan, and M. F. Kaashoek. Measuring the effects of internet path faults on reactive routing. In SIGMETRICS, 2003.
[14] A. Feldmann, O. Maennel, Z. M. Mao, A. Berger, and B. Maggs. Locating Internet routing instabilities. In SIGCOMM, 2004.
[15] L. Gao. On inferring autonomous system relationships in the Internet. IEEE/ACM TON, 2001.
[16] K. P. Gummadi, H. V. Madhyastha, S. D. Gribble, H. M. Levy, and D. Wetherall. Improving the reliability of Internet paths with one-hop source routing. In OSDI, 2004.
[17] iPlane. http://iplane.cs.washington.edu.
[18] J. P. John, E. Katz-Bassett, A. Krishnamurthy, T. Anderson, and A. Venkataramani. Consensus routing: The Internet as a distributed system. In NSDI, 2008.
[19] E. Katz-Bassett, H. V. Madhyastha, V. K. Adhikari, C. Scott, J. Sherry, P. van Wesep, A. Krishnamurthy, and T. Anderson. Reverse traceroute. In NSDI, 2010.
[20] E. Katz-Bassett, H. V. Madhyastha, J. P. John, A. Krishnamurthy, D. Wetherall, and T. Anderson. Studying black holes in the Internet with Hubble. In NSDI, 2008.
[21] R. R. Kompella, J. Yates, A. Greenberg, and A. C. Snoeren. Detection and localization of network black holes. In INFOCOM, 2007.
[22] N. Kushman, S. Kandula, and D. Katabi. R-BGP: Staying connected in a connected world. In NSDI, 2007.
[23] C. Labovitz, A. Ahuja, A. Bose, and F. Jahanian. Delayed Internet routing convergence. In SIGCOMM, 2000.
[24] K. K. Lakshminarayanan, M. C. Caesar, M. Rangan, T. Anderson, S. Shenker, and I. Stoica. Achieving convergence-free routing using failure-carrying packets. In SIGCOMM, 2007.
[25] H. Madhyastha, E. Katz-Bassett, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane Nano: Path Prediction for Peer-to-Peer Applications. In NSDI, 2009.
[26] D. Meyer. RouteViews. http://www.routeviews.org.
[27] P. Mohapatra, J. Scudder, D. Ward, R. Bush, and R. Austein. BGP prefix origin validation. http://tools.ietf.org/html/draft-ietf-sidr-pfx-validate.
[28] Outages mailing list. http://isotf.org/mailman/listinfo/outages.
[29] Packet clearing house. http://www.pch.net/home/index.php.
[30] B. Quoitin and O. Bonaventure. A survey of the utilization of the BGP community attribute. Internet draft, draft-quoitin-bgp-comm-survey-00, 2002.
[31] RIPE RIS. http://www.ripe.net/ris/.
[32] C. Scott. LIFEGUARD: Locating Internet Failures Effectively and Generating Usable Alternate Routes Dynamically. Technical report, Univ. of Washington, 2012.
[33] UCLA Internet topology. http://irl.cs.ucla.edu/topology/.
[34] W. Xu and J. Rexford. MIRO: Multi-path Interdomain ROuting. In SIGCOMM, 2006.
[35] J. Yates and Z. Ge. Network Management: Fault Management, Performance Management and Planned Maintenance. Technical report, AT&T Labs, 2009.
[36] M. Zhang, C. Zhang, V. Pai, L. Peterson, and R. Wang. PlanetSeer: Internet path failure monitoring and characterization in wide-area services. In OSDI, 2004.
[37] Y. Zhang, V. Paxson, and S. Shenker. The stationarity of Internet path properties: Routing, loss, and throughput. ACIRI Technical Report, 2000.
[38] Z. Zhang, M. Zhang, A. Greenberg, Y. C. Hu, R. Mahajan, and B. Christian. Optimizing cost and performance in online service provider networks. In NSDI, 2010.
[39] Z. Zhang, Y. Zhang, Y. C. Hu, Z. M. Mao, and R. Bush. iSpy: detecting IP prefix hijacking on my own. In SIGCOMM, 2008.