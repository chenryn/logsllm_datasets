# Title: Dragonblood is Still Leaking: Practical Cache-based Side-Channel in the Wild

## Authors
Daniel de Almeida Braga, Pierre-Alain Fouque, Mohamed Sabt

## Citation
Daniel de Almeida Braga, Pierre-Alain Fouque, and Mohamed Sabt. "Dragonblood is Still Leaking: Practical Cache-based Side-Channel in the Wild." In Annual Computer Security Applications Conference (ACSAC 2020), December 7–11, 2020, Austin, USA. ACM, New York, NY, USA, 12 pages. https://doi.org/10.1145/3427228.3427295.

## Abstract
Recently, the Dragonblood attacks have reignited interest in the security of WPA3 implementations, particularly in the Dragonfly code used in many open-source libraries. One attack targets the protection of user passwords during authentication. In the Password Authentication Key Exchange (PAKE) protocol called Dragonfly, the password is mapped to an elliptic curve point, a sensitive operation that must be resistant to side-channel attacks. Despite initial patches, we demonstrate that these are insufficient. Using state-of-the-art techniques, we extend the original attack, recovering the password with only a third of the measurements needed in the original Dragonblood attack. We apply our attack to two open-source projects: iwd (iNet Wireless Daemon) and FreeRADIUS, both widely deployed and well-maintained. We provide a full Proof of Concept and actively participated in patching the vulnerable code. For backward compatibility, we recommend a branch-free implementation as a mitigation technique, similar to what was used in hostapd.

## CCS Concepts
- **Security and Privacy**: Security protocols; Mobile and wireless security
- **Networks**: Wireless access points, base stations, and infrastructure

## Keywords
Dragonfly, PAKE, WPA3, Wi-Fi, cache attack

## 1. Introduction

### 1.1 Context and Motivation
Fourteen years after the introduction of WPA2, the Wi-Fi Alliance introduced WPA3 in early January 2018. This new protocol aims to improve authentication and encryption, replacing Pre-Shared Key (PSK) authentication with WPA3-SAE (Simultaneous Authentication of Equals). SAE, a variant of the Dragonfly handshake, resists offline dictionary attacks by ensuring that each trial reveals only one password, thus requiring online attacks that can be mitigated by limiting authentication attempts. However, researchers have raised concerns about the security guarantees of SAE and Dragonfly [21, 22, 24, 29].

In 2019, Vanhoef and Ronen identified several vulnerabilities in WPA3 implementations, particularly in the password-encoding method [35]. They presented a collection of attacks, including timing and cache side-channels, and provided appropriate mitigations. The disclosure of Dragonblood highlighted weaknesses in the Wi-Fi Alliance's recent update, but did not deter vendors from adopting WPA3. The Wi-Fi Alliance responded by publishing implementation guidance [5] to ensure secure, backward-compatible WPA3 implementations. However, the authors in [35] questioned the feasibility of some backward-compatible side-channel defenses, especially for resource-constrained devices, due to their high overhead.

In this paper, we focus on the recommendations related to Cache-Based Elliptic Curve Side-Channels in [5], which address mitigations to the set of Dragonblood vulnerabilities. Two key mitigations are recommended: (i) performing extra dummy iterations on random data, and (ii) blinding the calculation of the quadratic residue test. The RFC 7664 [16] suggests executing 40 iterations even if the password is successfully encoded in fewer iterations. For the second mitigation, a blinding scheme is suggested for the function determining whether a value is a quadratic residue modulo a prime.

### 1.2 Our Contribution
We show that these countermeasures are insufficient to defend against cache-based side-channel attacks. These measures only prevent a part of the Dragonblood attacks and do not address the cache attack leveraging a password-dependent control-flow loop in the try-and-increment conversion function. We aim to raise awareness about this specific attack and demonstrate that it can be extended to gain additional information with fewer measurements.

We identify several implementations where certain code is executed only during the iteration where the password is correctly converted. We show how an attacker can use cache attacks to leak information about the password. We stress that the original Dragonblood attacks are still applicable, but our work leverages state-of-the-art techniques to improve attack performance without changing the underlying threat model.

Using an unprivileged spyware, we demonstrate that attackers can learn the exact iteration where the first successful conversion occurred with high probability. We achieve this by monitoring well-chosen memory lines with a Flush+Reload attack [38] and combining it with a Performance Degradation Attack (PDA) [4]. This leakage allows attackers to significantly reduce the number of measurements needed to recover the password. For example, only 160 measurements are required to discard all wrong passwords using the Rockyou dictionary [25], compared to 580 measurements in the original Dragonblood attack.

We apply our findings to the wireless daemon iwd (iNet Wireless Daemon), which aims to replace wpa_supplicant. Ironically, iwd, written by Intel, has vulnerabilities caused by Intel's cache design. Version 1.0 was released in October 2019 and is already adopted by Arch Linux and Gentoo. We also extend our work to FreeRADIUS, a widely deployed project used by millions of users. We communicated our findings to the maintainers of these projects and helped them patch the vulnerable code.

The technical details are similar for both iwd and FreeRADIUS. For clarity and brevity, we detail the iwd case in the main text and discuss the FreeRADIUS case in Appendix C. Our main contributions are:
- Extending the original Dragonblood attack to recover the iteration yielding a successful conversion.
- Estimating the theoretical complexity of our attack.
- Implementing a Proof of Concept of our attack.
- Implementing mitigations and evaluating the overhead.

## References
[1] IEEE 802.11-2016 Standard.
[2] Vanhoef, M., & Ronen, E. (2019). Dragonblood: Analyzing the Security of WPA3’s SAE Handshake. arXiv preprint arXiv:1905.02883.
[3] Wi-Fi Alliance. (2019). WPA3 Security White Paper.
[4] Lipp, M., et al. (2018). Meltdown: Reading Kernel Memory from User Space. arXiv preprint arXiv:1801.01207.
[5] Wi-Fi Alliance. (2019). Implementation Guidance for WPA3.
[16] RFC 7664: The Dragonfly Key Exchange.
[21] Paterson, K. G., & Sibborn, J. L. (2011). A weak message authentication vulnerability in the Galois/Counter Mode of Operation. In International Workshop on Fast Software Encryption (pp. 343-358). Springer, Berlin, Heidelberg.
[22] Vanhoef, M., & Piessens, F. (2013). Practical verification of WPA-TKIP vulnerabilities. In Proceedings of the 18th ACM conference on Computer and communications security (pp. 97-108).
[24] Vanhoef, M., & Piessens, F. (2014). All your biases belong to us: Breaking RC4 in WPA-TKIP and TLS. In 23rd USENIX Security Symposium (USENIX Security 14) (pp. 97-112).
[25] RockYou Dictionary.
[29] Vanhoef, M., & Piessens, F. (2015). Predictable fragmentation identifiers: Defeating WPA-TKIP and IPsec. In 24th USENIX Security Symposium (USENIX Security 15) (pp. 129-144).
[34] Vanhoef, M., & Piessens, F. (2017). Key reinstallation attacks: Forcing nonce reuse in WPA2. In 26th USENIX Security Symposium (USENIX Security 17) (pp. 131-146).
[35] Vanhoef, M., & Ronen, E. (2019). Dragonblood: Analyzing the Security of WPA3’s SAE Handshake. arXiv preprint arXiv:1905.02883.
[38] Yarom, Y., & Falkner, K. (2014). FLUSH+RELOAD: A High Resolution, Low Noise, L3 Cache Side-Channel Attack. In 23rd USENIX Security Symposium (USENIX Security 14) (pp. 719-732).

## Acknowledgments
We thank the maintainers of iwd and FreeRADIUS for their collaboration in addressing the vulnerabilities.