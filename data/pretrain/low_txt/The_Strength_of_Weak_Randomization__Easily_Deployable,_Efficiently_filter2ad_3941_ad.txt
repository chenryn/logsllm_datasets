### Practical Impact of Performance Slowdown
The practical impact of the 9x slowdown is not particularly significant for most applications. We also believe that with some effort, the performance of our un-optimized implementation could be significantly improved.

### Query Runtime
We performed two variations of each SPARTA-generated query. The first variation takes the form `SELECT ID FROM main WHERE ...`. Since the `ID` column is the primary key, these queries only require the database management system (DBMS) to scan the indexes to find the list of matching records. The second variation takes the form `SELECT * FROM main WHERE ...`, which selects the entire record, necessitating the retrieval of encrypted records from storage and their transfer across the network. The time shown for each query includes the time to compute the encrypted query.

### Caching and Database Performance
Caching can significantly impact database performance. Therefore, we ran each set of queries under two scenarios:
1. **Cold Cache**: In this scenario, we cleared the caches in both the operating system (OS) and the Postgres database before running each query. To clear the Postgres cache, we restarted the Postgres service. To clear the OS cache, we executed the following command:
   ```bash
   echo 3 > /proc/sys/vm/drop_caches
   ```
2. **Warm Cache**: In this scenario, the cache was left as is.

Figures 4 and 5 display the results of tests run with a cold cache, while Figures 6 and 7 show the results of the warm cache tests.

### Experimental Results
The results of these experiments indicate that the WRE schemes achieve query response times within 27% of plaintext database response times on equality queries using our Poisson Random Frequency construction. As expected, the query response time increases with the number of unique search tags. Across all experimental configurations, the Fixed Salt scheme with 1000 salts is slower than the Poisson construction with λ = 1000. Similarly, the Poisson construction with λ = 1000 performs slightly slower than the one with λ = 100. This result is not surprising, as the Fixed Salt technique generates 1000 tags for each plaintext, while the Poisson construction with λ = 1000 results in λ + |M| tags for the entire column.

### Bucketized Poisson False Positives
In Section V-C1, we mentioned that the Bucketized Poisson algorithm may introduce false positives in the search results. Figures 8 and 9 illustrate the false positives introduced by the SPARTA queries used in our performance evaluation. The X-axis shows the number of records returned for each query with Poisson salt allocation, which does not introduce false positives. The Y-axis shows the number of records returned for the same queries with the bucketized version of the algorithm.

With lower values of λ, the Bucketized Poisson algorithm appears to mask the true number of return results. In Figure 9, with λ = 10,000, there is some correlation between the number of matching records in the database and the number of ciphertext records that match the bucketized query. However, in Figure 8 with λ = 1000, the relationship is much weaker. In the future, this masking might be leveraged to prevent reconstruction attacks [35], [38], where an adversary uses access pattern leakage to recover the contents of the database.

### Acknowledgements
This material is based upon work supported by the Defense Advanced Research Projects Agency (DARPA) and Space and Naval Warfare Systems Center, Pacific (SSC Pacific) under Contract No. N66001-15-C-4070. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of DARPA or SSC Pacific.

### References
[1] “Always encrypted (database engine),” https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/always-encrypted-database-engine, accessed: 2017-10-31.
[2] “A graduate course in applied cryptography,” http://toc.cryptobook.us/, accessed: 2018-5-1.
[3] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu, “Order preserving encryption for numeric data,” in SIGMOD, 2004, pp. 563–574.
[4] G. Amanatidis, A. Boldyreva, and A. O’Neill, “Provably-Secure Schemes for Basic Query Support in Outsourced Databases,” in DBSec, ser. Lecture Notes in Computer Science, S. Barker and G.-J. Ahn, Eds., vol. 4602, Springer, 2007, pp. 14–30.
[5] G. Asharov, M. Naor, G. Segev, and I. Shahaf, “Searchable symmetric encryption: Optimal locality in linear space via two-dimensional balanced allocations,” in Proceedings of the forty-eighth annual ACM symposium on Theory of Computing, ACM, 2016, pp. 1101–1114.
[6] M. Bellare, A. Boldyreva, and A. O’Neill, “Deterministic and Efficiently Searchable Encryption,” in CRYPTO, 2007, pp. 535–552.
[7] T. Boelter, R. Poddar, and R. A. Popa, “A secure one-roundtrip index for range queries,” Cryptology ePrint Archive, Report 2016/568, 2016, https://eprint.iacr.org/2016/568.
[8] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill, “Order-preserving symmetric encryption,” in EUROCRYPT, 2009, pp. 224–241.
[9] A. Boldyreva, N. Chenette, and A. O’Neill, “Order-preserving encryption revisited: Improved security analysis and alternative solutions,” in CRYPTO, 2011, pp. 578–595.
[10] D. Boneh, K. Lewi, M. Raykova, A. Sahai, M. Zhandry, and J. Zimmerman, “Semantically secure order-revealing encryption: Multi-input functional encryption without obfuscation,” in EUROCRYPT (2), ser. Lecture Notes in Computer Science, E. Oswald and M. Fischlin, Eds., vol. 9057, Springer, 2015, pp. 563–594.
[11] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart, “Leakage-Abuse Attacks Against Searchable Encryption,” in ACM Conference on Computer and Communications Security, I. Ray, N. Li, and C. Kruegel, Eds., ACM, 2015, pp. 668–679.
[12] D. Cash, J. Jaeger, S. Jarecki, C. S. Jutla, H. Krawczyk, M.-C. Rosu, and M. Steiner, “Dynamic Searchable Encryption in Very-Large Databases: Data Structures and Implementation,” in NDSS, The Internet Society, 2014.
[13] C. Chekuri and S. Khanna, “A polynomial time approximation scheme for the multiple knapsack problem,” SIAM Journal on Computing, vol. 35, no. 3, pp. 713–728, 2005.
[14] N. Chenette, K. Lewi, S. A. Weis, and D. J. Wu, “Practical order-revealing encryption with limited leakage,” in International Conference on Fast Software Encryption, Springer, 2016, pp. 474–493.
[15] R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky, “Searchable Symmetric Encryption: Improved Definitions and Efficient Constructions,” in CCS, 2006, pp. 79–88.
[16] I. Demertzis, S. Papadopoulos, O. Papapetrou, A. Deligiannakis, and M. Garofalakis, “Practical private range search revisited,” in Proceedings of the 2016 International Conference on Management of Data, ACM, 2016, pp. 185–198.
[17] I. Demertzis and C. Papamanthou, “Fast searchable encryption with tunable locality,” in Proceedings of the 2017 ACM International Conference on Management of Data, ACM, 2017, pp. 1053–1067.
[18] F. B. Durak, T. M. DuBuisson, and D. Cash, “What else is revealed by order-revealing encryption?” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, ser. CCS ’16, New York, NY, USA: ACM, 2016, pp. 1155–1166.
[19] S. Faber, S. Jarecki, H. Krawczyk, Q. Nguyen, M.-C. Rosu, and M. Steiner, “Rich queries on encrypted data: Beyond exact matches,” 2015, pp. 123–145.
[20] B. Fuhry, R. Bahmani, F. Brasser, F. Hahn, F. Kerschbaum, and A.-R. Sadeghi, “HardIDX: Practical and secure index with SGX,” in IFIP Annual Conference on Data and Applications Security and Privacy, Springer, 2017, pp. 386–408.
[21] C. Gentry, “Fully homomorphic encryption using ideal lattices,” in STOC, 2009, pp. 169–169.
[22] E.-J. Goh, “Secure Indexes,” IACR Cryptology ePrint Archive, vol. 2003, p. 216, 2003.
[23] O. Goldreich, “Towards a theory of software protection and simulation by oblivious RAMs,” in STOC, A. V. Aho, Ed., ACM, 1987, pp. 182–194.
[24] S. Goldwasser and S. Micali, “Probabilistic encryption,” Journal of computer and system sciences, vol. 28, no. 2, pp. 270–299, 1984.
[25] P. Grofig, M. Hrterich, I. Hang, F. Kerschbaum, M. Kohler, A. Schaad, A. Schrpfer, and W. Tighzert, “Experiences and observations on the industrial implementation of a system to search over outsourced encrypted data,” in Sicherheit, ser. LNI, S. Katzenbeisser, V. Lotz, and E. R. Weippl, Eds., vol. 228, GI, 2014, pp. 115–125.
[26] P. Grubbs, “On deploying property-preserving encryption,” 2016, [Online]. Available: https://drive.google.com/file/d/0Bzm4XrWnl5zWndfZTVsRkpyWm8/view
[27] P. Grubbs, R. McPherson, M. Naveed, T. Ristenpart, and V. Shmatikov, “Breaking web applications built on top of encrypted data,” IACR Cryptology ePrint Archive, vol. 2016, p. 920, 2016.
[28] P. Grubbs, T. Ristenpart, and V. Shmatikov, “Why your encrypted database is not secure,” Cryptology ePrint Archive, Report 2017/468, 2017, http://eprint.iacr.org/2017/468.
[29] P. Grubbs, K. Sekniqi, V. Bindschaedler, M. Naveed, and T. Ristenpart, “Leakage-abuse attacks against order-revealing encryption,” in 2017 IEEE Symposium on Security and Privacy, SP 2017, San Jose, CA, USA, May 22-26, 2017, 2017, pp. 655–672.
[30] F. Hahn and F. Kerschbaum, “Poly-logarithmic range queries on encrypted data with small leakage,” in Proceedings of the 2016 ACM on Cloud Computing Security Workshop, ACM, 2016, pp. 23–34.
[31] W. He, D. Akhawe, S. Jain, E. Shi, and D. X. Song, “ShadowCrypt: Encrypted Web Applications for Everyone,” in ACM Conference on Computer and Communications Security, G.-J. Ahn, M. Yung, and N. Li, Eds., ACM, 2014, pp. 1028–1039.
[32] B. Hore, S. Mehrotra, M. Canim, and M. Kantarcioglu, “Secure multidimensional range queries over outsourced data,” The VLDB Journal—The International Journal on Very Large Data Bases, vol. 21, no. 3, pp. 333–358, 2012.
[33] B. Hore, S. Mehrotra, and G. Tsudik, “A privacy-preserving index for range queries,” in Proceedings of the Thirtieth international conference on Very large data bases—Volume 30, VLDB Endowment, 2004, pp. 720–731.
[34] S. Kamara, “Encrypted search,” ACM Crossroads, vol. 21, no. 3, pp. 30–34, 2015.
[35] G. Kellaris, G. Kollios, K. Nissim, and A. O’Neill, “Generic Attacks on Secure Outsourced Databases,” in ACM Conference on Computer and Communications Security, E. R. Weippl, S. Katzenbeisser, C. Kruegel, A. C. Myers, and S. Halevi, Eds., ACM, 2016, pp. 1329–1340.
[36] F. Kerschbaum and A. Tueno, “An efficiently searchable encrypted data structure for range queries,” arXiv preprint arXiv:1709.09314, 2017.
[37] M.-S. Lacharite and K. G. Paterson, “Frequency-smoothing encryption: Preventing snapshot attacks on deterministically-encrypted data,” Cryptology ePrint Archive, Report 2017/1068, 2017, https://eprint.iacr.org/2017/1068.
[38] M. Lacharit, B. Minaud, and K. G. Paterson, “Improved reconstruction attacks on encrypted data using range query leakage,” in 2018 IEEE Symposium on Security and Privacy (SP), May 2018, pp. 297–314.
[39] B. Lau, S. P. Chung, C. Song, Y. Jang, W. Lee, and A. Boldyreva, “Mimesis Aegis: A Mimicry Privacy Shield—A System’s Approach to Data Privacy on Public Cloud,” in USENIX Security Symposium, K. Fu and J. Jung, Eds., USENIX Association, 2014, pp. 33–48.
[40] K. Lewi and D. J. Wu, “Order-Revealing Encryption: New Constructions, Applications, and Lower Bounds,” in ACM Conference on Computer and Communications Security, E. R. Weippl, S. Katzenbeisser, C. Kruegel, A. C. Myers, and S. Halevi, Eds., ACM, 2016, pp. 1167–1178.
[41] M. Naveed, S. Kamara, and C. V. Wright, “Inference Attacks on Property-Preserving Encrypted Databases,” in ACM Conference on Computer and Communications Security, I. Ray, N. Li, and C. Kruegel, Eds., ACM, 2015, pp. 644–655.
[42] O. Pandey and Y. Rouselakis, “Property preserving symmetric encryption,” in EUROCRYPT, ser. Lecture Notes in Computer Science, D. Pointcheval and T. Johansson, Eds., vol. 7237, Springer, 2012, pp. 375–391.
[43] K. Paterson and M.-S. Lacharite, Personal communication, December 2017.
[44] R. A. Popa, C. M. S. Redfield, N. Zeldovich, and H. Balakrishnan, “CryptDB: Protecting confidentiality with encrypted query processing,” in SOSP, T. Wobber and P. Druschel, Eds., ACM, 2011, pp. 85–100.
[45] D. Pouliot, “The Shadow Nemesis: Inference Attacks on Efficiently Deployable, Efficiently Searchable Encryption,” in ACM Conference on Computer and Communications Security, E. R. Weippl, S. Katzenbeisser, C. Kruegel, A. C. Myers, S. Halevi, and C. V. Wright, Eds., ACM, 2016, pp. 1341–1352.
[46] D. Song, D. Wagner, and A. Perrig, “Practical Techniques for Searching on Encrypted Data,” in S&P, 2000, pp. 44–55.
[47] E. Stefanov and E. Shi, “Oblivistore: High performance oblivious cloud storage,” in IEEE Symposium on Security and Privacy, IEEE Computer Society, 2013, pp. 253–267.
[48] M. Varia, B. Price, N. Hwang, A. Hamlin, J. Herzog, J. Poland, M. Reschly, S. Yakoubov, and R. K. Cunningham, “Automated Assessment of Secure Search Systems,” SIGOPS Oper. Syst. Rev., vol. 49, no. 1, pp. 22–30, Jan. 2015.
[49] J. Wang and X. Du, “A secure multi-dimensional partition based index in DAS,” in APWeb, ser. Lecture Notes in Computer Science, Y. Zhang, G. Yu, E. Bertino, and G. Xu, Eds., vol. 4976, Springer, 2008, pp. 319–330.
[50] L. Wang, P. Grubbs, J. Lu, V. Bindschaedler, D. Cash, and T. Ristenpart, “Side-channel attacks on shared search indexes,” in IEEE Symposium on Security and Privacy, IEEE Computer Society, 2017, pp. 673–692.
[51] C. V. Wright and D. Pouliot, “Early detection and analysis of leakage abuse vulnerabilities,” Cryptology ePrint Archive, Report 2017/1052, 2017, http://eprint.iacr.org/2017/1052.