### TIVs and Prediction Ratio

Time Inconsistency Violations (TIVs) are highly likely to have a low prediction ratio. Since harmful faked delays cause severe TIVs, we can use the prediction ratio metric to detect them. Figure 11(a) illustrates the prediction ratio distributions of good nodes and delay attackers, where the delay attackers randomly inflate their delays by up to 300ms (with 30% of the nodes being delay attackers). This graph demonstrates that the prediction ratio metric has a reasonable ability to differentiate between good nodes and delay attackers. The faked delays in this attack result in more severe TIVs.

### TIV Detection Technique

Using the prediction ratio metric, we can design a simple TIV detection technique to defend against the delay attack. At each embedding step, a node A checks one of its neighbors B. If the prediction ratio of edge AB is below a threshold, the neighbor is deemed malicious. We empirically set the detection threshold to 0.9. To evaluate the performance of TIV detection, we tested it against systems with 10%, 20%, 30%, and 50% of malicious nodes performing the delay attack. Figure 11(b) shows the fraction of malicious nodes in the neighbor sets during the experiment. As seen, for all cases, the TIV detection mechanism effectively identifies and removes 90% of the malicious nodes from the neighbor sets. However, 10% of the malicious nodes remain undetected. These remaining malicious nodes do not cause severe TIVs, leading to a high false negative rate. Nevertheless, our coordinates accuracy results show that these few remaining malicious nodes do not significantly impact the accuracy of the coordinates. Figure 11(c) illustrates the accuracy of good nodes' coordinates, demonstrating that without any protection mechanism, the delay attackers can significantly degrade the accuracy of good nodes' coordinates. The TIV detection mechanism effectively protects good nodes' coordinates by removing most of the malicious nodes. Even with 50% of malicious nodes, the good nodes' coordinates maintain a high accuracy, close to the Vivaldi coordinates when no malicious nodes are present.

### Integrating Stability and Security Algorithms

In previous sections, we introduced several algorithms to address the stability and security issues in network coordinates. Here, we illustrate a simple way to integrate these stability and security algorithms in a decentralized network coordinates system. As shown in Figure 12, when a node joins the system, it first registers with a membership server. The membership server assigns the node a set of neighbors to compute coordinates with and a set of witnesses to audit the node's behavior. PeerReview is used to protect coordinates computation, ensuring that any faked coordinates are detected. If a node is detected or suspected by a witness, it is removed from the system.

The TIV detection mechanism is employed to protect good nodes against faked delays. After a node starts computing its coordinates, it chooses a random TIV detection period. During this period, the node focuses on checking its neighbors and detecting faked delays that could harm their coordinates' accuracy. The node’s neighbor set is dynamically changing during the TIV detection procedure, preventing coordinate stabilization. After the detection period, the node can stabilize its coordinates using the error elimination algorithm. During the coordinates stabilization procedure, nodes cannot change their neighbor sets. Finally, the node's coordinates are stabilized.

There is a potential attack where malicious nodes may pretend to frequently experience propagation delay changes to cause unnecessary coordinates recomputation. However, since true propagation delay changes require routing changes, which are infrequent, if a node observes that a neighbor’s delay is changing rapidly and frequently, it will remove this neighbor.

Figure 13 presents the experimental results for using the integrated algorithm to protect and stabilize Vivaldi coordinates with 30% delay attackers in the system. Each node randomly chooses a detection period from [200sec, 500sec]. From Figure 13(a), we can see that, during the detection period, nodes effectively remove most of the malicious nodes from their neighbor sets. Figures 13(b) and (c) show that after the detection procedure, the error elimination algorithm stabilizes the coordinates, resulting in good accuracy, similar to the dynamic Vivaldi coordinates with no malicious nodes.

### Related Work

Since the concept of network coordinates was first introduced in GNP [21], significant work has been done on building network coordinates systems, focusing on various aspects of the problem.

**Architectures**: Due to the scalability issues in GNP's centralized architecture, several papers have proposed different architectures to build scalable coordinates systems. NPS [22] and PIC [4] extend GNP into a hierarchical architecture. Lighthouse [23], Virtual Landmarks [32], and Vivaldi [5] explore methods to build fully decentralized network coordinates systems.

**Models**: In addition to the popular Euclidean model [21, 5, 22, 25, 4], other models for approximating Internet delays have been explored. Some Euclidean space extension models, such as LAT [15] and Height [5], slightly modify the Euclidean space to incorporate Internet delay features. Other metric models, like the Hyperbolic model in [26], have also been examined. However, all metric space models suffer from the triangle inequality violation effect of Internet delays. Therefore, numerical optimization models, such as PCA in [16] and [32], and the SVD, NMF models in the IDES system [19], have been proposed. These models, however, do not outperform the Euclidean space model significantly.

**Optimization Algorithms**: Two types of optimization algorithms have been proposed to compute the coordinates in network coordinates systems: multi-dimensional scaling algorithms and simulation-based algorithms. An example of a multi-dimensional scaling algorithm is the Downhill Simplex algorithm used in GNP [21] and NPS [22]. Simulation-based algorithms, such as the Big-Bang Simulation algorithm [25] and the Spring algorithm [5], model the delay prediction errors by a force system and seek to reduce the forces among all pairs of nodes.

**System Optimization**: Several mechanisms have been proposed to improve the performance of coordinates systems. In addition to the techniques mentioned for improving coordinates stability and security, a recent study [27] proposes Veracity, a security mechanism where each node is associated with a set of verifying nodes, and the node’s coordinates are tested based on its error to the verifying nodes. If a node’s coordinates have large errors in predicting the delays to most verifying nodes, the node is deemed malicious, and its coordinates are not used by other nodes. Fundamentally, Veracity is another outlier detection mechanism that uses statistical detection techniques to handle various types of faked coordinates and faked delays. Zhang et al. [37] propose hierarchical coordinates to improve the accuracy of network coordinates. Wang et al. [33] introduce a TIV alert mechanism to reduce the impact of TIV on network coordinates systems.

**Theoretical Analysis**: Theoretical studies [30, 28, 29] have addressed why network coordinates systems can succeed at predicting Internet delays. The results show that without triangle inequality violations, network coordinates systems based on a small number of landmarks or distributed neighbors can achieve good accuracy.

**Performance Analysis**: Previous work has also studied the performance of network coordinates systems at the application level. In [38] and [17], the authors quantified the imprecision of using network coordinates in applications such as nearest neighbor selection and overlay multicast. Lee et al. [15] pointed out that triangle inequality violations are an important cause of coordinates inaccuracy.

**Applications**: Many previous studies have applied network coordinates to solve a wide range of problems, including overlay construction [20, 18], compact Internet routing [1, 13, 8], network modeling [36], and security [2].

### Conclusions

In this paper, we presented new algorithms to solve the stability and security problems in decentralized network coordinates systems. We found a new error elimination model that achieves coordinates stability without sacrificing accuracy and designed an effective algorithm based on this model. We also recognized that solving the security problem with a single statistical mechanism is challenging. We demonstrated that coordinates computation can be secured by proven Byzantine Fault Tolerance (BFD) techniques, and a customized BFD algorithm can be applied. Furthermore, we showed that the remaining delay measurement part can be sufficiently secured by TIV detection. By integrating these new algorithms, decentralized network coordinates systems can finally be scalable, stable, and secure simultaneously.

### Acknowledgment

We would like to thank our shepherd Jia Wang and the anonymous reviewers for their valuable feedback on earlier versions of this paper.

### References

[1] I. Abraham and D. Malkhi. Compact routing on euclidean metrics. In Proceedings of PODC 2004, July 2004.
[2] R.A. Bazzi and G. Konjevod. On the establishment of distinct identities in overlay networks. In Proceedings of ACM PODC’05, July 2005.
[3] M. Castro and B. Liskov. Practical byzantine fault tolerance. In Proceedings of ACM OSDI, February 1999.
[4] M. Costa, M. Castro, A. Rowstron, and P. Key. PIC: Practical Internet coordinates for distance estimation. Technical Report MSR-TR-2003-53, Microsoft Research, September 2003.
[5] F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: A decentralized network coordinate system. In Proceeding of ACM SIGCOMM, August 2004.
[6] C. de Launois, S. Uhlig, and O. Bonaventure. A stable and distributed network coordinate system. In Technical report, University Catholique de Louvain, December 2004.
[7] K. P. Gummadi, S. Saroiu, and S. D. Gribble. King: Estimating latency between arbitrary internet end hosts. In Proceedings of the SIGCOMM IMW, Marseille, France, November 2002.
[8] R. Gummadi, N. Kothari, Y.J. Kim, R. Govindan, B. Karp, and S. Shenker. Reduced state routing in the internet. In Proceedings of HotNets III, November 2004.
[9] Andreas Haeberlen, Petr Kuznetsov, and Peter Druschel. PeerReview: Practical accountability for distributed systems. In Proceedings of the 21st ACM Symposium on Operating Systems Principles (SOSP’07), Oct 2007.
[10] M.A. Kaafar, L. Mathy, C. Barakat, K. Salamatian, T. Turletti, and W. Dabbous. Securing internet coordinate embedding systems. In Proceeding of SIGCOMM’07, August 2007.
[11] M.A. Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Virtual networks under attack: Disrupting internet coordinate systems. In Proceeding of CoNext’06, December 2006.
[12] J. Ledlie, P. Gardner, and M. Seltzer. Network coordinates in the wild. In Proceeding of USENIX NSDI’07, April 2007.
[13] J. Ledlie, P. Pietzuch, M. Mitzenmacher, and M. Seltzer. Wired geometric routing. In Proceedings of IPTPS 2007, February 2007.
[14] J. Ledlie, P. Pietzuch, and M. Seltzer. Stable and accurate network coordinates. In Proceeding of International Conference on Distributed Computing Systems, July 2006.
[15] Sanghwan Lee, Zhi-Li Zhang, Sambit Sahu, and Debanjan Saha. On suitability of Euclidean embedding of Internet hosts. In Proc. SIGMETRICS 2006, June 2006.
[16] H. Lim, J. Hou, and C.-H. Choi. Constructing internet coordinate system based on delay measurement. In Proceedings of IMC, Miami, FL, October 2003.
[17] Eng Keong Lua, Timothy Griffin, Marcelo Pias, Han Zheng, and Jon Crowcroft. On the accuracy of embeddings for internet coordinate systems. In Proceedings of IMC, Berkeley, CA, October 2005.
[18] C. Lumezanu, D. Levin, and N. Spring. Peer-wise discovery and negotiation of faster path. In Proceedings of HotNets-VI, November 2007.
[19] Y. Mao and L. K. Saul. Modeling distances in large-scale networks by matrix factorization. In Proceedings of Internet Measurement Conference, Sicily, Italy, October 2004.
[20] Animesh Nandi, Aditya Ganjam, Peter Druschel, T. S. Eugene Ng, Ion Stoica, and Hui Zhang. A reusable control plane for overlay multicast. In Proceedings of USENIX NSDI’07, April 2007.
[21] T. S. E. Ng and H. Zhang. Predicting Internet networking distance with coordinates-based approaches. In Proceedings of IEEE INFOCOM, June 2002.
[22] T. S. E. Ng and H. Zhang. A network positioning system for the internet. In Proceedings of USENIX Annual Technical Conference, June 2004.
[23] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti. Lighthouses for scalable distributed location. In Proceedings of IPTPS, 2003.
[24] P. Pietzuch, J. Ledlie, and M. Seltzer. Supporting network coordinates on PlanetLab. In Proceeding of the Second Workshop on Real Large Distributed Systems (WORLDS’05), December 2005.
[25] Y. Shavitt and T. Tankel. Big-bang simulation for embedding network distances in Euclidean space. In Proceedings of IEEE INFOCOM, San Francisco, CA, March 2003.
[26] Y. Shavitt and T. Tankel. On the curvature of the Internet and its usage for overlay construction and distance estimation. In Proceedings of IEEE INFOCOM, April 2004.
[27] M. Sherr, B. T. Loo, and M. Blaze. Veracity: A fully decentralized service for securing network coordinate systems. In Proceedings of IPTPS’08, 2008.
[28] A. Slivkins. Distributed Approaches to Triangulation and Embedding. In Proceedings 16th ACM-SIAM Symposium on Discrete Algorithms (SODA), 2004.
[29] A. Slivkins. Network Distance Estimation with Guarantees for All Node Pairs. Technical report, Cornell University, 2006.
[30] A. Slivkins, J. Kleinberg, and T. Wexler. Triangulation and Embedding using Small Sets of Beacons. In Proceedings of FOCS, 2004.
[31] M. Szymaniak, D. Presotto, G. Pierre, and M. van Steen. Practical large-scale latency estimation. Elsevier’s Computer Networks, 52(7), 2008.
[32] L. Tang and M. Crovella. Virtual landmarks for the internet. In Proceedings of IMC, Miami, FL, October 2003.
[33] G. Wang, B. Zhang, and E. Ng. Towards network triangle inequality violations aware distributed systems. In Proceedings of the ACM/USENIX Internet Measurement Conference (IMC’07), Oct 2007.
[34] Guohui Wang. On the design principles of network coordinates systems. April 2008. Master’s thesis, Rice University.
[35] D. Zage and C. Nita-Rotaru. On the accuracy of decentralized network coordinate systems in adversarial networks. In Proceeding of ACM CCS’07, October 2007.
[36] B. Zhang, T.S.Eugene Ng, A.Nandi, R.Riedi, P.Druschel, and G.Wang. Measurement-based analysis, modeling, and synthesis of the internet delay space. In Proceedings of ACM SIGCOMM/USENIX Internet Measurement Conference (IMC), October 2006.
[37] R. Zhang, Y. Hu, X. Lin, and S. Fahmy. A hierarchical approach to internet distance prediction. In Proceedings of IEEE ICDCS, Lisboa, Portugal, 2006.
[38] R. Zhang, C. Tang, Y. Hu, S. Fahmy, and X. Lin. Impact of the inaccuracy of distance prediction algorithms on internet applications: an analytical and comparative study. In Proceedings of IEEE INFOCOM, Barcelona, Spain, April 2006.