### Packet Fragmentation and Reassembly

The IP Identification (IPID) field is primarily used for packet fragmentation and reassembly [40, 50]. However, it has been widely exploited for off-path attacks due to its vulnerable assignment methods. Ensafi et al. [17] performed idle port scans and network protocol analysis by leveraging the side channel of global IPID counters. They also suggested that these counters can be used to detect intentional packet drops [16]. Pearce et al. [37, 38] utilized the same side channel to measure the reachability between any two Internet locations without needing a measurement vantage point. Jeffrey et al. [29] demonstrated that per-destination IPID counters are also vulnerable, allowing attackers to infer the number of packets between two machines using UDP and ICMP, and even detect the presence of a TCP connection through off-path attacks. Alexander et al. [3] detected TCP connections via IPID hash collisions, using the IPID of triggered RST packets to determine the presence of a victim TCP connection. Their method, however, could only detect TCP connections and not hijack them. The vulnerabilities they exploited have since been fixed in Linux kernel version 4.18 and later. In this paper, we identify a new vulnerability in IPID assignment that can be exploited by off-path attackers to perform TCP hijacking attacks.

### TCP Hijacking Attacks

Cao et al. [9, 10] discovered that an off-path attacker can infer whether two arbitrary hosts on the Internet are communicating via a TCP connection by exploiting a side channel in the challenge ACK mechanism. This allows the attacker to identify the sequence and acknowledgment numbers of the connection and subsequently hijack it. This side channel vulnerability was mitigated by setting a random challenge ACK count limit. A timing side channel in half-duplex IEEE 802.11 (Wi-Fi) technology has also been uncovered, enabling off-path attackers to inject data into a TCP connection and force browsers to cache malicious objects [12]. Gilad et al. [20, 21, 23, 24] leveraged the global IPID counter, previously adopted by Linux and Windows systems, to infer if two hosts have established a TCP connection and then launch off-path TCP injection attacks to poison HTTP and Tor traffic. Additionally, unprivileged applications or sandboxed scripts controlled by attackers (referred to as "puppets") can be used to perform off-path TCP attacks [22, 42, 43]. Qian et al. [42] showed that firewall middleboxes can be abused to perform TCP sequence number inference attacks, and they conducted a collaborative TCP sequence number inference attack by exploiting packet counter side channels [43]. Gilad et al. [22] identified that restricted scripts in user browser sandboxes can be used to conduct web cache poisoning attacks. Unlike these attacks, our off-path TCP attack does not require any assistance from puppets and exploits a new side channel vulnerability in the interactions among IP, ICMP, and TCP, which cannot be detected by principled methods [11].

### TCP Denial of Service (DoS) Attacks

TCP SYN flooding is a significant threat that is difficult to detect due to its similarity to legitimate TCP connection establishment [1, 5, 15, 51]. Other typical TCP DoS attacks include TCP FIN flooding, TCP RST flooding, TCP ACK flooding, TCP URG flooding, and TCP Null flooding [2, 28], all aimed at causing resource exhaustion. Beyond brute-force attacks, more sophisticated and stealthy DoS attacks against the TCP protocol have been developed, such as low-rate TCP-targeted DoS attacks [26, 30, 31, 46] or attacks that congest intermediate links [36, 47].

### Conclusion

In this paper, we uncover a new off-path TCP hijacking attack that exploits a subtle side channel in the mixed IPID assignment method introduced in Linux kernel version 4.18 and later. We find that a pure off-path attacker can downgrade the IPID assignment for TCP packets from a more secure per-socket-based policy to a hash-based policy, thus creating a shared IPID counter that can be observed to detect the presence of victim TCP connections and infer their sequence and acknowledgment numbers. We evaluate the impact of this new off-path TCP exploit on the Internet and implement the exploit under various scenarios. Our experiments show that off-path attackers can perform various attacks, such as resetting SSH connections, manipulating web traffic, and poisoning BGP routing tables. We propose a countermeasure to eliminate the root cause of the exploit by repairing the IPID assignment for TCP packets in Linux. We implement our countermeasure and confirm its effectiveness in practice.

### Acknowledgments

We thank the anonymous reviewers for their insightful comments. We are grateful to our shepherd Paul Pearce for his guidance in improving our work. This research is supported by the National Key R&D Program of China (No. 2018YFB1800402), the National Science Foundation for Distinguished Young Scholars of China (No. 61825204), the National Natural Science Foundation of China (Nos. 61932016, U1736209, and 61572278), the Beijing Outstanding Young Scientist Program (No. BJJWZYJH01201910003011), U.S. ONR grants (N00014-16-1-3214 and N00014-18-2893), U.S. ARO grant (W911NF-17-1-0447), and the project "PCL Future Greater-Bay Area Network Facilities for Largescale Experiments and Applications (LZC0019)". Ke Xu is the corresponding author of this paper.

### References

[1] Abdulaziz Aborujilah, Mohd Nazri Ismail, and Shahrulniza Musa. 2014. Detecting TCP SYN Based Flooding Attacks by Analyzing CPU and Network Resources Performance. In 2014 3rd International Conference on Advanced Computer Science Applications and Technologies. IEEE, 157–161.

[2] Saket Acharya and Namita Tiwari. 2016. Survey of DDoS Attacks Based on IOSR Journal of Computer Engineering 18, 3 (2016), 68–76.

[3] Geoffrey Alexander, Antonio M Espinoza, and Jedidiah R Crandall. 2019. Detecting TCP/IP Connections via IPID Hash Collisions. Proceedings on Privacy Enhancing Technologies 2019, 4 (2019), 311–328.

[4] Fred Baker. 1995. Requirements for IP Version 4 Routers. RFC 1812. Internet Engineering Task Force. 1–175 pages. http://www.rfc-editor.org/rfc/rfc1812.txt

[5] R Bani-Hani and Zaid Al-Ali. 2013. SYN Flooding Attacks and Countermeasures: A Survey. In Proceedings of International Conference on Information and Communication Systems. 149–155.

[6] Mike Belshe, Roberto Peon, and Martin Thomson. 2015. Hypertext Transfer Protocol Version 2 (HTTP/2). RFC 7540. Internet Engineering Task Force. 1–97 pages. http://www.rfc-editor.org/rfc/rfc7540.txt

[7] Bootlin. 2020. IPID assignment in Linux Kernel. https://elixir.bootlin.com/linux/latest/source/include/net/ip.h.

[8] David Borman, Bob Braden, and V Jacobson. 2014. TCP Extensions for High Performance. RFC 7323. Internet Engineering Task Force. 1–49 pages. http://www.rfc-editor.org/rfc/rfc7323.txt

[9] Yue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V Krishnamurthy, and Lisa M Marvel. 2016. Off-Path TCP Exploits: Global Rate Limit Considered Dangerous. In 25th USENIX Security Symposium (USENIX Security 16). 209–225.

[10] Yue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V Krishnamurthy, and Lisa M Marvel. 2018. Off-Path TCP Exploits of the Challenge ACK Global Rate Limit. IEEE/ACM Transactions on Networking 26, 2 (2018), 765–778.

[11] Yue Cao, Zhongjie Wang, Zhiyun Qian, Chengyu Song, Srikanth V Krishnamurthy, and Paul Yu. 2019. Principled Unearthing of TCP Side Channel Vulnerabilities. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security. 211–224.

[12] Weiteng Chen and Zhiyun Qian. 2018. Off-Path TCP Exploit: How Wireless Routers Can Jeopardize Your Secrets. In 27th USENIX Security Symposium (USENIX Security 18). 1581–1598.

[13] Martin Duke, Robert Braden, W Eddy, Ethan Blanton, and Alexander Zimmermann. 2015. A Roadmap for Transmission Control Protocol (TCP) Specification Documents. RFC 7414. Internet Engineering Task Force. 1–57 pages. http://www.rfc-editor.org/rfc/rfc7414.txt

[14] Eric Dumazet. 2014. inetpeer: get rid of ip_id_count. https://lore.kernel.org/patchwork/patch/490770/.

[15] Wesley Eddy. 2007. TCP SYN Flooding Attacks and Common Mitigations. RFC 4987. Internet Engineering Task Force. 1–19 pages. http://www.rfc-editor.org/rfc/rfc4987.txt

[16] Roya Ensafi, Jeffrey Knockel, Geoffrey Alexander, and Jedidiah R Crandall. 2014. Detecting Intentional Packet Drops on the Internet via TCP/IP Side Channels. In International Conference on Passive and Active Network Measurement. Springer, 109–118.

[17] Roya Ensafi, Jong Chun Park, Deepak Kapur, and Jedidiah R Crandall. 2010. Idle Port Scanning and Non-interference Analysis of Network Protocol Stacks Using Model Checking. In USENIX Security Symposium. 257–272.

[18] Dino Farinacci, Tony Li, Stan Hanks, David Meyer, and Paul Traina. 2000. Generic Routing Encapsulation (GRE). RFC 2784. Internet Engineering Task Force. 1–9 pages. http://www.rfc-editor.org/rfc/rfc2784.txt

[19] Roy Fielding, Jim Gettys, Jeffrey Mogul, Henrik Frystyk, Larry Masinter, Paul Leach, and Tim Berners-Lee. 1999. Hypertext Transfer Protocol – HTTP/1.1. RFC 2616. Internet Engineering Task Force. 1–176 pages. http://www.rfc-editor.org/rfc/rfc2616.txt

[20] Yossi Gilad and Amir Herzberg. 2012. Off-Path Attacking the Web. In WOOT.

[21] Yossi Gilad and Amir Herzberg. 2012. Spying in the dark: TCP and Tor traffic analysis. In International symposium on privacy enhancing technologies symposium. Springer, 100–119.

[22] Yossi Gilad and Amir Herzberg. 2013. When Tolerance Causes Weakness: The Case of Injection-Friendly Browsers. In Proceedings of the 22nd international conference on World Wide Web. ACM, 435–446.

[23] Yossi Gilad and Amir Herzberg. 2014. Off-path TCP Injection Attacks. ACM Transactions on Information and System Security (TISSEC) 16, 4 (2014), 13.

[24] Yossi Gilad, Amir Herzberg, and Haya Shulman. 2013. Off-path hacking: The illusion of challenge-response authentication. IEEE Security & Privacy 12, 5 (2013), 68–77.

[25] Fernando Gont and Steven Bellovin. 2012. Defending against Sequence Number Attacks. RFC 6528. Internet Engineering Task Force. 1–12 pages. http://www.rfc-editor.org/rfc/rfc6528.txt

[26] Amir Herzberg and Haya Shulman. 2010. Stealth DoS Attacks on Secure Channels. In NDSS. 41–52.

[27] Kunihiro Ishiguro. 2020. Quagga Routing Suite. https://www.quagga.net/.

[28] JAVAPIPE. 2020. 35 Types of DDoS Attacks Explained. https://javapipe.com/blog/ddos-types/.

[29] Knockel Jeffrey and Crandall Jedidiah, R. 2014. Counting Packets Sent between Arbitrary Internet Hosts. In Proceedings of the 4th USENIX Workshop on Free and Open Communications on the Internet (FOCI’14). USENIX Association.

[30] Samuel Jero, Md Endadul Hoque, David R Choffnes, Alan Mislove, and Cristina Nita-Rotaru. 2018. Automated Attack Discovery in TCP Congestion Control Using a Model-guided Approach. In NDSS.

[31] Aleksandar Kuzmanovic and Edward W Knightly. 2003. Low-Rate TCP-Targeted Denial of Service Attacks: The Shrew vs. the Mice and Elephants. In Proceedings of the 2003 conference on Applications, technologies, architectures, and protocols for computer communications. ACM, 75–86.

[32] Michael Larsen and Fernando Gont. 2011. Recommendations for Transport-Protocol Port Randomization. RFC 6056. Internet Engineering Task Force. 1–29 pages. http://www.rfc-editor.org/rfc/rfc6056.txt

[33] Matthew Luckie, Robert Beverly, Ryan Koga, Ken Keys, Joshua A Kroll, and k claffy. 2019. Network Hygiene, Incentives, and Regulation: Deployment of Source Address Validation in the Internet. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security. 465–480.

[34] Jack McCann, Steve Deering, and Jeffrey Mogul. 1996. Path MTU Discovery for IP version 6. RFC 1981. Internet Engineering Task Force. 1–15 pages. http://www.rfc-editor.org/rfc/rfc1981.txt

[35] Jeffrey Mogul and Steve Deering. 1990. Path MTU discovery. RFC 1191. Internet Engineering Task Force. 1–19 pages. http://www.rfc-editor.org/rfc/rfc1191.txt

[36] Tran Muoi, Kang Min, Suk, Hsiao Hsu-Chun, Chiang Wei-Hsuan, Tung Shu-Po, and Wang Yu-Su. 2019. On the Feasibility of Rerouting-Based DDoS Defenses. In 2019 IEEE Symposium on Security and Privacy (SP). IEEE, 798–813.

[37] Paul Pearce, Roya Ensafi, Frank Li, Nick Feamster, and Vern Paxson. 2017. Augur: Internet-wide detection of connectivity disruptions. In 2017 IEEE Symposium on Security and Privacy (SP). IEEE, 427–443.

[38] Paul Pearce, Roya Ensafi, Frank Li, Nick Feamster, and Vern Paxson. 2018. Toward continual measurement of global network-level censorship. IEEE Security & Privacy 16, 1 (2018), 24–33.

[39] Jon Postel. 1981. Internet Control Message Protocol. RFC 792. Internet Engineering Task Force. 1–21 pages. http://www.rfc-editor.org/rfc/rfc792.txt

[40] Jon Postel. 1981. Internet Protocol. RFC 791. Internet Engineering Task Force. 1–45 pages. http://www.rfc-editor.org/rfc/rfc791.txt

[41] Jon Postel. 1981. Transmission Control Protocol. RFC 793. Internet Engineering Task Force. 1–85 pages. http://www.rfc-editor.org/rfc/rfc793.txt

[42] Zhiyun Qian and Z Morley Mao. 2012. Off-Path TCP Sequence Number Inference Attack: How Firewall Middleboxes Reduce Security. In 2012 IEEE Symposium on Security and Privacy. IEEE, 347–361.

[43] Zhiyun Qian, Z Morley Mao, and Yinglian Xie. 2012. Collaborative TCP Sequence Number Inference Attack: How to Crack Sequence Number under a Second. In Proceedings of the 2012 ACM conference on Computer and communications security. ACM, 593–604.

[44] Anantha Ramaiah, R Stewart, and Mitesh Dalal. 2010. Improving TCP’s Robustness to Blind In-Window Attacks. RFC 5961. Internet Engineering Task Force. 1–19 pages. http://www.rfc-editor.org/rfc/rfc5961.txt

[45] Rocket.Chat. 2020. Web Application. https://rocket.chat/.

[46] Amey Shevtekar, Karunakar Anantharam, and Nirwan Ansari. 2005. Low Rate TCP Denial-of-Service Attack Detection at Edge Routers. IEEE Communications Letters 9, 4 (2005), 363–365.

[47] Jared M Smith and Max Schuchard. 2018. Routing Around Congestion: Defeating DDoS Attacks and Adverse Network Conditions via Reactive BGP Routing. In 2018 IEEE Symposium on Security and Privacy (SP). IEEE, 599–617.

[48] Pyda Srisuresh and Matt Holdrege. 1999. IP Network Address Translator (NAT) Terminology and Considerations. RFC 2663. Internet Engineering Task Force. 1–30 pages. http://www.rfc-editor.org/rfc/rfc2663.txt

[49] Joe Touch. 2007. Defending TCP Against Spoofing Attacks. RFC 4953. Internet Engineering Task Force. 1–28 pages. http://www.rfc-editor.org/rfc/rfc4953.txt

[50] Joe Touch. 2013. Updated Specification of the IPv4 ID Field. RFC 6864. Internet Engineering Task Force. 1–19 pages. http://www.rfc-editor.org/rfc/rfc6864.txt

[51] Haining Wang, Danlu Zhang, and Kang G Shin. 2002. Detecting SYN Flooding Attacks. In Proceedings. Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies, Vol. 3. IEEE, 1530–1539.

[52] Bo Wu, Ke Xu, Qi Li, Zhuotao Liu, Yih-Chun Hu, Martin J Reed, Meng Shen, and Fan Yang. 2018. Enabling efficient source and path verification via probabilistic packet marking. In 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS). IEEE, 1–10.

[53] Xu Zhang, Jeffrey Knockel, and Jedidiah R Crandall. 2018. ONIS: Inferring TCP/IP-based Trust Relationships Completely Off-Path. In IEEE INFOCOM 2018-IEEE Conference on Computer Communications. IEEE, 2069–2077.