### 优化后的文本

#### 图3：每个节点创建的债务链接平均数量
#### 图4：每个债务链接使用的平均次数
#### 图5：安全网保证示例

**债务链接创建情况**

首先，我们分析了每个节点创建的债务链接数量。随着实验进行，曲线增长较为缓慢，最终保持在1200以下。平均每轮每个节点建立0.67个债务链接。这种开销相对较小，仅涉及0.67×Dlink个垃圾块，而每个节点每轮发送/接收的多播块数量为50个。因此，垃圾块带来的相对开销大约为0.67×Dlink/50，即在3.35%到6.03%之间（根据实验参数）。

**债务链接使用情况**

接下来，我们研究了DCast中债务链接的使用次数（记作times_used）和支付成功率（定义如下）。这两个量反映了定理2背后的两个关键假设。定理2的证明假设只要与债务链接相关的两个节点愿意在机会出现时使用该链接，则债务链接会被无限次使用。然而，由于总轮数有限，使用次数也不会是无限的。如果times_used过小，发行或中继doin所累积的收益可能无法抵消债务链接的建立成本。图4显示，在一小时的多播会话中，平均每个债务链接被使用超过20次。这个值远远大于抵消初始债务链接建立成本所需的次数：从A到B建立一个债务链接需要Dpay+0.5个垃圾块，每次使用债务链接时，A发送一个多播块，并相应地接收Dpay个多播块（如果A发行doin）或消除Dpay个债务块（如果A中继doin）。因此，为了使定理2的证明成立，times_used只需满足以下不等式：(times_used + Dlink) × max(1, σ) < times_used × Dpay。例如，当σ = 1且Dpay = 2时，times_used只需达到2.5即可抵消债务链接的建立成本。

**支付成功率**

支付成功率（记作pay_succ_rate）是指在多播会话结束时已支付的到期doin的比例。虽然理性节点总是有支付的动力，但如果它没有多余的多播块提供给doin发行人，支付成功率仍可能低于100%。如果pay_succ_rate如此之低以至于pay_succ_rate × Dpay < max(1, σ)，那么节点可能不再有动力发行doin。我们在所有实验中观察到的pay_succ_rate均高于99.95%，这显然是足够的，只要我们在Dpay和max(1, σ)之间留出一个小的额外差距。

**无偏离者情况下的结果**

迄今为止，我们关于links_established、times_used和pay_succ_rate的结果仅适用于无偏离者的情况。对于times_used和pay_succ_rate，较大的值对所有节点都有利。因此，偏离者实际上有动机进一步增加这些数值，如果可能的话。至少，我们不期望偏离者的行为会导致这些数值显著降低。另一方面，如果有偏离者，links_established和社会成本可能会增加，如我们在后续的安全网保证实验中所见。

**存在偏离者的情况**

在这些实验中，债务链接建立成本将直接反映在非偏离者的效用中（即从中扣除）。我们通过改变偏离者数量从0到n-1来说明DCast在一种示例共谋策略下的安全网保证，其中Dpay = 2。我们的实验方法并不旨在穷尽所有共谋策略——实验方法本质上无法覆盖所有共谋策略。考虑“代表性”共谋策略也没有意义，因为人类攻击者很聪明，可能会设计出我们今天意想不到的新共谋策略。最终，安全网保证必须得到证明，正如我们在定理2中所做的那样。这里的实验纯粹作为示例。

在这一示例共谋策略中，偏离者永远不会从非偏离者那里拉取数据，以避免建立债务链接、接收doin和支付doin。偏离者通过相互拉取数据，不受债务链接和doin的约束，从而更快地传播多播块并减少开销。由于发行doin是有利可图的，偏离者仍然会向非偏离者发行doin并接受doin支付。我们的实验改变了偏离者的数量从0到n-1，其中n是节点总数。对于每个非偏离者，我们记录了发送/接收的成本比特总数与接收到的多播比特总数之间的比率——这个比率基本上就是安全网效用中的Ψ参数。请注意，由于我们观察到的delivery_rate接近100%，非偏离者几乎总能在每轮中接收到足够的多播块以解码视频帧。图5绘制了非偏离者中Ψ的平均值和最大值，始终低于Droot，与定理2一致。即使在极端情况下，即n-1个偏离者，运行DCast的单个非偏离者仍然可以享受超过99.95%的delivery_rate，同时为每个接收到的多播比特支付约2个成本比特。在多播中，获取数据（例如观看电影）通常比减少带宽消耗（即减少成本比特）更为重要。

**模拟器验证**

为了验证模拟器的准确性，我们在Emulab测试平台上运行了我们的DCast原型，使用180个节点和Dpay = 2。尽管我们的协议是一个覆盖多播协议，但我们无法模拟网络拓扑，因为这需要模拟每对节点之间的所有路由器。相反，我们通过将每个节点映射到King Internet延迟数据集[7]中的随机节点，并使用那里的延迟值来人为添加现实的广域通信延迟。

表1比较了使用原型进行半小时多播会话的结果与在同一设置下模拟器的结果。两种情况下times_used的值相当相似。尽管Emulab上的delivery_rate和pay_succ_rate略低于模拟值，但其绝对值仍然很高。差异主要是由一些Emulab节点上意外的延迟造成的，这是我们的模拟器无法捕捉到的。最后，Emulab实验建立的债务链接比模拟实验多约25%。这是由于某些Emulab节点上的处理延迟，导致节点建立更多的债务链接以确保及时获取多播块。由于债务链接建立对Ψ的贡献很小（例如，0.056占1.077），我们认为模拟中观察到的安全网效用仍然是相当准确的。

### 结论

当前的覆盖多播技术在安全性方面相对较弱。本文旨在解决现有覆盖多播协议中的一个关键漏洞——针对理性用户共谋和Sybil/白洗攻击的脆弱性。为此，我们首先引入了一个新颖的概念——安全网保证，重点保护非偏离者的效用。然后，我们提出了DCast多播协议，该协议使用了一种新的机制，通过预先建立的债务链接循环债务。该机制使我们能够克服理性共谋引入的两个基本挑战。我们正式证明了该协议提供了安全网保证，并通过原型和模拟进一步展示了该设计在实践中的可行性和安全网保证。

### 致谢

感谢Binbin Chen和CCS匿名审稿人的宝贵反馈。本研究部分由新加坡国立大学FRC基金R-252-000-406-112支持，部分由英特尔科学和技术中心云计算（ISTC-CC）支持。

### 参考文献

[1] E. Adar and B. Huberman. Free riding on Gnutella. First Monday, 5(10), 2000.
[2] C. Aperjis, M. Freedman, and R. Johari. Peer-assisted content distribution with prices. In CoNext, 2008.
[3] L. P. Cox and B. D. Noble. Samsara: Honor among thieves in peer-to-peer storage. In SOSP, 2003.
[4] J. Douceur. The Sybil attack. In IPTPS, 2002.
[5] J. Feigenbaum and S. Shenker. Distributed algorithmic mechanism design: Recent results and future directions. In DIALM, 2002.
[6] Y. Fu, J. Chase, B. Chun, S. Schwab, and A. Vahdat. SHARP: An architecture for secure resource peering. In SOSP, 2003.
[7] K. Gummadi, S. Saroiu, and S. Gribble. King: Estimating latency between arbitrary internet end hosts. In SIGCOMM, 2002.
[8] A. Hayrapetyan, E. Tardos, and T. Wexler. The effect of collusion in congestion games. In STOC, 2006.
[9] I. Keidar, R. Melamed, and A. Orda. EquiCast: Scalable multicast with selfish users. In PODC, 2006.
[10] S. Kremer, O. Markowitch, and J. Zhou. An Intensive Survey of Fair Non-Repudiation Protocols. Computer Comm., 25(17), 2002.
[11] R. Landa, D. Griffin, R. Clegg, E. Mykoniati, and M. Rio. A sybilproof indirect reciprocity mechanism for peer-to-peer networks. In INFOCOM, 2009.
[12] D. Levin, K. LaCurts, N. Spring, and B. Bhattacharjee. BitTorrent is an Auction: Analyzing and Improving BitTorrent’s Incentives. In SIGCOMM, 2008.
[13] D. Levin, R. Sherwood, and B. Bhattacharjee. Fair File Swarming with FOX. In IPTPS, 2006.
[14] H. C. Li, A. Clement, M. Marchetti, M. Kapritsos, L. Robison, L. Alvisi, and M. Dahlin. Flightpath: Obedience vs. choice in cooperative services. In OSDI, 2008.
[15] H. C. Li, A. Clement, E. L. Wong, J. Napper, I. Roy, L. Alvisi, and M. Dahlin. BAR Gossip. In OSDI, 2006.
[16] G. J. Mailath and L. Samuelson. Repeated Games and Reputations. Oxford University Press, 2006.
[17] A. Nandi, T.-W. J. Ngan, A. Singh, P. Druschel, and D. S. Wallach. Scrivener: Providing incentives in cooperative content distribution systems. In Middleware, 2005.
[18] T.-W. J. Ngan, D. S. Wallach, and P. Druschel. Incentives-compatible peer-to-peer multicast. In P2P Econ, 2004.
[19] N. Nisan, T. Roughgarden, E. Tardos, and V. V. Vazirani. Algorithmic Game Theory. Cambridge University Press, 2007.
[20] M. Piatek, T. Isdal, T. Anderson, A. Krishnamurthy, and A. Venkataramani. Do incentives build robustness in BitTorrent. In NSDI, 2007.
[21] M. Piatek, T. Isdal, A. Krishnamurthy, and T. Anderson. One hop reputations for peer to peer file sharing workloads. In NSDI, 2008.

希望这些修改能使文本更加清晰、连贯和专业。