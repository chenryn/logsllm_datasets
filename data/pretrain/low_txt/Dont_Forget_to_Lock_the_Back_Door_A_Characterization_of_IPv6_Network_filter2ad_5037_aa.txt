# Title: Don't Forget to Lock the Back Door! A Characterization of IPv6 Network Security Policy

## Authors
- Jakub Czyz, University of Michigan and QuadMetrics, Inc.; Email: [EMAIL]
- Matthew J. Luckie, University of Waikato; Email: [EMAIL]
- Mark Allman, International Computer Science Institute; Email: [EMAIL]
- Michael Bailey, University of Illinois at Urbana-Champaign; Email: [EMAIL]

## Abstract
As the operational awareness of challenges in securing IPv6 networks grows, we conducted a measurement study of 520,000 dual-stack servers and 25,000 dual-stack routers to assess the extent to which security policies established for IPv4 have been implemented in IPv6. Our findings reveal several high-value target applications with more open security policies in IPv6, including:
- SSH, Telnet, and SNMP, which are more than twice as open on routers in IPv6 compared to IPv4.
- Nearly half of the routers with BGP open were only accessible via IPv6.
- In the server dataset, SNMP was twice as open in IPv6 as in IPv4.

We conducted a detailed analysis of where port blocking policies are applied and found that discrepancies in protocol openness are consistent within network boundaries, indicating a systemic failure in deploying consistent security policies. We communicated our findings to twelve network operators, all of whom confirmed that the relative openness was unintentional. Ten out of the twelve immediately moved to implement a congruent IPv6 security policy, reflecting real operational concern.

Finally, we revisited the belief that the security impact of this comparative openness in IPv6 is mitigated by the infeasibility of IPv6 network-wide scanning. We found that, for both datasets, host addressing practices make it feasible to discover these high-value hosts through scanning alone. To assist operators in accurately measuring their own IPv6 security posture, we have made our probing system publicly available.

## 1. Introduction
Historically, IPv4 has dominated IPv6 in terms of adoption, and security issues in IPv6 have often been considered minor. However, the landscape is changing. For example, Google reports that 8% of its users accessed services over IPv6 in mid-2015, a statistic that has doubled each year for the past five years. Additionally, many large networks now report double-digit IPv6 deployment percentages (e.g., Comcast 39%, AT&T 52%, Deutsche Telekom 28%). This growing adoption means that any threats posed by IPv6 are significant, and the community should aim to understand and mitigate these threats early in the adoption process.

### Permission to Reproduce
Permission to freely reproduce all or part of this paper for noncommercial purposes is granted provided that copies bear this notice and the full citation on the first page. Reproduction for commercial purposes is strictly prohibited without the prior written consent of the Internet Society, the first-named author (for reproduction of an entire paper only), and the author’s employer if the paper was prepared within the scope of employment.

**NDSS '16, 21-24 February 2016, San Diego, CA, USA**
**Copyright 2016 Internet Society, ISBN 1-891562-41-X**
**http://dx.doi.org/10.14722/ndss.2016.23047**

### Security Issues in IPv6
With IPv6 connectivity come two types of security issues:
1. **New Vulnerabilities**: These stem from changes and features in the IPv6 protocol, such as flexibility in header chains and fragmentation issues. Simple stateless firewalls, which may suffice for IPv4, are not suitable for IPv6. While standards documents address some of these issues, it will take time for compatible hardware and practices to become widespread.
2. **Dual-Stack Security**: The second type of issue arises from the dual-stack nature of IPv6 adoption. According to IETF IPv6 operational guidance, dual-stack networks have twice the exposure, requiring protection for both protocols. Often, IPv6 traffic is enabled without the typical access control mechanisms, leading to potential vulnerabilities.

In this paper, we focus on the second type of security issue, examining how well-known operating system, protocol, and application weaknesses may be exploited via the IPv6 network due to the neglect of IPv4 security policies in IPv6.

### Hypothesis and Findings
Our expectation is that operators intend to maintain parity between IPv4 and IPv6 security policies in dual-stack settings. However, we hypothesize that there will be discrepancies due to:
- Lack of a full suite of tools and software for IPv6.
- Less operator experience with IPv6.
- The ability of IPv6 nodes to auto-configure without end-user intervention.

In our experiments, we find that ports are blocked less frequently when accessed via IPv6 compared to IPv4. Specifically:
- IPv6 is more open than IPv4. Ports in IPv6 are nearly always more open than the same ports in IPv4, particularly for routers.
- When policy variances exist, they tend to be consistent within autonomous systems and routed prefixes.
- Differences in policy mechanisms also exist, with more active responses over IPv6 when ports are closed.
- Existing IPv6 open services can be easily discovered through scanning.

We contacted various network providers to confirm our results, and the twelve operators we reached confirmed our findings, with ten immediately making changes to correct the errors. To assist operators, we have made our scanning tool (sc_filterpolicy) publicly available.

### Paper Structure
The remainder of this paper is organized as follows:
- **Section 2: Methodology**: Describes our approach to developing target lists and identifying dual-stack hosts.
- **Section 3: Dual-Stack Identification Effectiveness**: Evaluates the effectiveness of our dual-stack identification method.
- **Section 4: Policy Discrepancies**: Determines whether and to what extent IPv4 and IPv6 policy differences exist.
- **Section 5: Consistency of Policy Differences**: Explores whether these policy differences are applied consistently within a network.
- **Section 6: Protocol Version Differences**: Discusses differences in how policy mechanisms are applied between IPv4 and IPv6.
- **Section 7: Confirmation with Network Providers**: Confirms our results through contacts with network providers.
- **Section 8: Scanning Feasibility and Related Work**: Revisits the idea that the impact of increased attack surface is mitigated by the infeasibility of IPv6 network-wide scanning and discusses related work.
- **Section 9: Conclusion**: Concludes the paper and summarizes the key findings.

## 2. Methodology

### 2.1 Developing Target Lists
To explore potential policy discrepancies between IPv4 and IPv6, we first needed to identify dual-stack hosts. Our strategy involves using DNS names as the connective tissue between hostnames, IPv4 addresses, and IPv6 addresses. Each host \( H_x \) in our dataset contains three sets of labels:
- \( H_x^N \): Set of names
- \( H_x^4 \): Set of IPv4 addresses
- \( H_x^6 \): Set of IPv6 addresses

We compare hosts pairwise to detect common elements and merge them into a single host if there is overlap. Finally, we prune hosts that do not have at least one valid and routable IPv4 and IPv6 address.

#### Concerns and Validations
- **Multiple Machines**: Using DNS as the connective tissue could lead to multiple distinct machines being grouped as a single dual-stack machine. We obtain host signatures (e.g., SSH host keys) and find that in roughly 3% of hosts, multiple signatures are detected across different host labels. This indicates that our process predominantly identifies dual-stack hosts.
- **DNS Bias**: Starting from hosts with DNS presence may exclude hosts without complete record sets. However, we believe this bias would result in an underestimation of the core policy misalignment, as maintaining all three record types (A, AAAA, and PTR) is generally a sign of correctly operating an Internet-facing service interface.

### 2.2 Target Lists
- **Router List**: Derived from router interface IP addresses found in Internet-wide traceroute data taken by CAIDA’s Ark measurement platform. We extracted source IP addresses of ICMP hop-limit responses and performed reverse DNS lookups to obtain names.
- **Server List**: Initialized with the Rapid7 DNS ANY datasets, which include DNS ANY queries for hostnames gathered from various sources. We use the Rapid7 DNS consumer hostname filter to remove automatically-generated hostnames for consumer Internet endpoints.

By validating the IPv4 addresses associated with each host against known consumer network blocks, we ensure that our list primarily includes dual-stacked servers and routers.

---

This revised version aims to provide a clear, coherent, and professional presentation of the research, with improved structure and clarity.