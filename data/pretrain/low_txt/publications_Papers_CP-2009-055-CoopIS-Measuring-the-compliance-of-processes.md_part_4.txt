### 5.5 Feasibility Study

The sequence-based compliance algorithm relies on the generation of sets of firing sequences to describe the behavior of a process model. However, the size of these sets can grow exponentially with the number of activities in the Workflow Net (WF-net). This section evaluates the practical applicability of our algorithm despite its exponential complexity.

To assess the feasibility, we followed the approach of Dijkman [8] and used a sample of Event-Driven Process Chains (EPCs) from the SAP reference model. The SAP reference model, described in [20,10], is widely referenced in research literature and covers over 600 business processes, making it a comprehensive and representative example.

We applied the sequence-based compliance algorithm to a subset of 126 pairs of EPCs from the SAP reference model, which were converted to WF-nets. These pairs were selected based on their similarity, calculated using the ProM plugin "EPC Similarity Calculator," with a similarity threshold of greater than 50%.

**Results:**
- **Computation Time:** Figure 6 shows the percentage of model pairs for which compliance can be computed within a given number of milliseconds on a regular desktop computer. Ninety percent of the process models analyzed with our compliance algorithm took less than 62 milliseconds. The average runtime was 50.5 milliseconds with a standard deviation of 9.3 milliseconds.
- **Runtime vs. Number of Activities:** Figure 7 illustrates the relationship between the runtime and the number of activities in the processes of a model pair. The average number of activities in these processes is 16. We found only a weak correlation between runtime and the number of activities, suggesting that the algorithm's performance is not significantly affected by the number of activities within the range observed in the SAP reference models.

**Conclusion:**
Despite the theoretical exponential complexity, the algorithm is practical for the number of activities typically found in real-world process models. The natural boundaries of the number of activities per process model make the algorithm applicable in practice.

### Alternative Approaches to Address Complexity

An alternative approach to managing the complexity of the algorithm is to use the state space of a WF-net to capture the behavior of a model. The state space corresponds to the set of reachable markings of a WF-net, and the resulting graph is known as the reachability graph. Buchholz et al. [5] present a method for optimizing the generation of the reachability graph of large Petri nets by decomposing the net, generating reachability graphs for the parts, and then combining them.

Additionally, various techniques for state space reduction [8] can be employed to improve the efficiency of the sequence-based compliance algorithm. These techniques, referred to as reduction rules, aim to reduce the size of the state space by minimizing the number of places and transitions while preserving relevant information for analysis. For instance, transitions that are rarely executed can be abstracted or encapsulated. Verbeek et al. [28] argue that generating reachability graphs is often feasible for systems with up to 100 transitions.

### 6 Related Work

Our work intersects with several research areas, including process discovery and verification, process integration, and behavior inheritance.

**Process Discovery and Verification:**
- **Process Mining:** Our work is related to process mining, which aims to discover process models based on log files [17,1]. Compliance measurement can be seen as a specific form of log-based verification, where the fit between a model and a log file is verified.
- **Inter-Model Verification:** In the context of inter-model verification, van der Aalst introduces delta analysis, which compares the actual behavior of an Information System (IS) with the expected behavior (e.g., a reference model) [23]. Various equivalence notions, such as trace equivalence [27], bisimulation [27], and behavioral equivalence [24], have been developed. However, these classical notions yield binary results (yes or no) and do not provide a degree of equivalence.

**Process Integration and Behavior Inheritance:**
- **Process Integration:** Comparing two process models to measure compliance implies identifying distinctions. Common integration approaches show how these distinctions can be harmonized, for example, after an organizational merger [14].
- **Behavioral Inheritance:** Basten and van der Aalst [3] introduced the concept of behavioral inheritance, which can be used to identify commonalities and differences in process models. This approach is motivated by improving the reusability and adaptivity of process models and is based on labeled transition systems and branching bisimulation.

### 7 Conclusion and Future Work

Reference models provide valuable guidelines for implementing business processes, but methods to determine how these guidelines are implemented in practice are lacking. Traditional algorithms for evaluating process equivalence are insufficient for measuring compliance, as they ignore many factors and characteristics related to compliance.

In this paper, we investigated the characteristics of compliance and developed a generic approach to analyze the compliance of process models with reference models. Our main contribution is the sequence-based compliance algorithm, which recognizes that process models can have different structures yet still be compliant.

**Validation:**
- **Case Study:** We validated our approach by measuring the compliance of a complaint handling process at a German passenger airline. The airline used process mining to gain transparency into its current customer support processes and then determined the extent to which these processes aligned with the ITIL reference model.
- **Comparison with Existing Approaches:** We compared our methodology with two existing approaches and found that the sequence-based compliance algorithm provides more insightful values.

**Future Work:**
- **Application to Other Domains:** We plan to apply our approach to other business and industry domains.
- **Customization and Traceability:** We aim to study additional types of customization of reference models and incorporate traceability into compliance analysis to help organizations quickly identify problematic parts of their running processes.

### References

1. Alves de Medeiros, A.K., Weijters, A.J.M.M., van der Aalst, W.M.P.: Genetic Process Mining: A Basic Approach and its Challenges. In: Bussler, C.J., Haller, A. (eds.) BPM 2005. LNCS, vol. 3812, pp. 203–215. Springer, Heidelberg (2006)
2. APQC, American Productivity & Quality Center, http://www.apqc.org/pcf
3. Basten, T., van der Aalst, W.M.P.: Inheritance of Behavior. Journal of Logic and Algebraic Programming 47(2), 47–145 (2001)
4. Bergroth, L., Hakonen, H., Raita, T.: A Survey of Longest Common Subsequence Algorithms. In: 7th IEEE Intl. Symposium on String Processing Information Retrieval, pp. 39–48. IEEE Press, Los Alamitos (2000)
5. Buchholz, P., Kemper, P.: Hierarchical Reachability Graph Generation for Petri Nets. Form. Methods Syst. Des. 21(3), 281–315 (2002)
6. CMMI, Software Engineering Institute, http://www.sei.cmu.edu/cmmi
7. Cook, J.E., He, C., Ma, C.: Measuring Behavioral Correspondence to a Timed Concurrent Model. In: 17th IEEE Intl. Conf. on Software Maintenance, p. 332. IEEE Press, Los Alamitos (2001)
8. Dijkman, R.: Diagnosing Differences between Business Process Models. In: Dumas, M., Reichert, M., Shan, M.-C. (eds.) BPM 2008. LNCS, vol. 5240, pp. 261–277. Springer, Heidelberg (2008)
9. Ehrig, M., Koschmider, A., Oberweis, A.: Measuring Similarity between Semantic Business Process Models. In: 4th Asia-Pacific Conf. on Conceptual Modeling, pp. 71–80 (2007)
10. Teufel, T., Keller, G.: SAP R/3 Process-Oriented Implementation: Iterative Process Prototyping. Addison-Wesley, Reading (1998)
11. Gerke, K., Tamm, G.: Continuous Quality Improvement of IT Processes Based on Reference Models and Process Mining. In: 15th Americas Conf. on Information Systems (2009)
12. IDS Scheer AG, http://www.ids-scheer.com
13. Juan, Y.C.: A String Comparison Approach to Process Logic Differences between Process Models. In: 9th Joint Conference on Information Sciences (2006)
14. Mendling, J., Simon, C.: Business Process Design by View Integration. In: Eder, J., Dustdar, S. (eds.) BPM Workshops 2006. LNCS, vol. 4103, pp. 55–64. Springer, Heidelberg (2006)
15. Official Introduction to the ITIL Service Lifecycle. Stationery Office Books, London (2007)
16. ProM, http://www.processmining.org
17. Rozinat, A., Veloso, M., van der Aalst, W.M.P.: Evaluating the Quality of Discovered Process Models. In: Bridewell, W., et al. (eds.) 2nd Intl. Workshop on the Induction of Process Models, Antwerp, Belgium, pp. 45–52 (2008)
18. SAP AG, http://www.sap.com
19. Supply-Chain Council, Supply Chain Operations Reference Model, SCOR (2006)
20. Ladd, A., Curran, T., Keller, G.: SAP R/3 Business Blueprint: Understanding the Business Process Reference Model. Prentice Hall PTR Enterprise Resource Planning Series, Upper Saddle River (1997)
21. The IT Governance Institute, COBIT 4.1 (2007)
22. van der Aalst, W.M.P.: Verification of Workflow Nets. In: Azéma, P., Balbo, G. (eds.) ICATPN 1997. LNCS, vol. 1248, pp. 407–426. Springer, Heidelberg (1997)
23. van der Aalst, W.M.P.: Business Alignment: Using Process Mining as a Tool for Delta Analysis and Conformance Testing. Requir. Eng. 10(3), 198–211 (2005)
24. van der Aalst, W.M.P., Alves de Medeiros, A.K., Weijters, A.J.M.M.: Process Equivalence: Comparing Two Process Models Based on Observed Behavior. In: Dustdar, S., Fiadeiro, J.L., Sheth, A.P. (eds.) BPM 2006. LNCS, vol. 4102, pp. 129–144. Springer, Heidelberg (2006)
25. van der Aalst, W.M.P., Dreiling, A., Gottschalk, F., Rosemann, M., Jansen-Vullers, M.: Configurable Process Models as a Basis for Reference Modeling. In: Bussler, C.J., Haller, A. (eds.) BPM 2005. LNCS, vol. 3812, pp. 512–518. Springer, Heidelberg (2006)
26. van Dongen, B.F., Dikman, R., Mendling, J.: Measuring Similarity between Business Process Models. In: Bellahsène, Z., Léonard, M. (eds.) CAiSE 2008. LNCS, vol. 5074, pp. 450–464. Springer, Heidelberg (2008)
27. van Glabbeek, R.J., Peter Weijland, W.: Branching Time and Abstraction in Bisimulation Semantics. Communications of the ACM 43(3), 555–600 (1996)
28. Verbeek, H.M.W.: Verification and Enactment of Workflow Management Systems. PhD thesis, University of Technology, Eindhoven, The Netherlands (2004)