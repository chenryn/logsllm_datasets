# Metasploit vSploit Modules

## Authors
- Marcus J. Carey
- David “bannedit” Rude
- Will Vandevanter

## Outline
- Objective of vSploit Modules
- Metasploit Framework Architecture
- What are Metasploit Modules?
- vSploit Modules
- vSploit and Intrusion Kill Chains
- Writing Metasploit Modules
- Live Demo

## Introduction to Metasploit
- **Founded in 2003**
- **Open Source Penetration Testing Platform**: Over 1 million downloads in the past year.
- **Acquisition by Rapid7 in 2009**: HD Moore joined as Chief Security Officer and Chief Architect of Metasploit.
- **Community Commitment**: Rapid7 remains dedicated to the community.
- **Commercial Editions**: Metasploit Express and Metasploit Pro are built on the Metasploit Framework.

## Metasploit Framework Architecture
- **Libraries**: Rex, MSF Core
- **Interfaces**: Console, CLI
- **Tools**: Various utilities
- **Modules**:
  - **Payloads**: Arbitrary code executed during an exploit.
  - **Encoders**: Add entropy to payloads and remove bad characters.
  - **NOP**: Create sophisticated NOP sleds.
  - **Auxiliary**: Like exploit modules but without a payload; often underappreciated.
- **Plugins**: RPC, Exploit
- **GUI & Armitage**: Graphical user interfaces for Metasploit.

## What are Metasploit Modules?
- **More than Just Exploits**:
  - **Payloads**: The "arbitrary code" mentioned in advisories.
  - **Encoders**: Add entropy to payloads and remove bad characters.
  - **NOP**: Create sophisticated NOP sleds.
  - **Auxiliary**: Similar to exploit modules but without a payload; often underappreciated.

## Introducing: vSploit Modules
- **New Spin on Auxiliary Modules**:
  - **Focus on Attack Response Emulation**: Not intended for exploitation.
  - **Continues Metasploit's Roots**: As a security testing and validation framework.
  - **Stand-alone Compatibility**: No exploitation used; possible to remove exploit modules if necessary.
- **Purpose**:
  - Evaluate devices on their own merit.
  - Minimal traffic evasion.
  - Trigger alerts on purpose.
  - Ensure proper network device placement.
  - Test and train security staff.
  - Test security architecture without exploits.

## vSploit: Interesting Traffic
- **Network-Based Security Devices**:
  - IDS (Intrusion Detection Systems)
  - IPS (Intrusion Prevention Systems)
  - DLP (Data Loss Prevention)
  - Firewalls
  - Network Intelligence Devices
- **Security Monitoring**:
  - **ESIM (Enterprise Security Information Management)**: Collects system logs, provides correlation and reporting.
  - **Netflow Collectors and Log Correlation Devices**: Such as Splunk.
  - **Network-Based Vulnerability Analysis Devices**: Identify and analyze vulnerabilities.

## vSploit: Simulating Malicious DNS Queries
- **Client Sends Request for Interesting Traffic and Designated Port**.
- **Metasploit Sends Out DNS Query to Internal DNS (e.g., Domain Controller)**.
- **Example Domains**: foo.ru, foo.cn, foo.kp.
- **ESIM Logs**: Capture and log the simulated malicious queries.

## Intrusion Kill Chains
- **Phases**:
  - **Reconnaissance**: Web analytics, firewall ACLs.
  - **Weaponization**: NIDS, NIPS.
  - **Delivery**: Vigilant users, proxy filters, in-line AV, queuing.
  - **Exploitation**: HIDS, patching, DEP.
  - **Installation**: HIDS, *chroot* jail, AV.
  - **C2 (Command and Control)**: NIDS, firewall ACLs, NIPS, tarpit, DNS redirect.
  - **Actions on Objectives**: Audit log, quality of service, honeypot.

## vSploit Testing Detection Capabilities
- **Source**: Hutchins, Cloppert, Amin – Lockheed Martin.
- **Phases**:
  - **Detect**: Web analytics, NIDS, HIDS.
  - **Deny**: Firewall ACLs, proxy filters.
  - **Disrupt**: Queuing, tarpit.
  - **Degrade**: DEP, *chroot* jail.
  - **Deceive**: DNS redirect, honeypot.
  - **Destroy**: Quality of service, audit log.

## vSploit Modules Screen Shots
- **Web PII Module Configuration and In Action**.
- **HTTP File Download Server**.
- **Web Beaconing Configuration and In Action**.
- **DNS Beaconing Wireshark Analysis**.
- **Vulnerable Headers and PCAP Analysis**.

## Writing Metasploit Modules
- **Resources**:
  - [Learn to Program](http://pine.fm/LearnToProgram/)
  - [The Little Book of Ruby](http://r-7.co/iNmOBt)
  - [Humble Little Book of Ruby](http://r-7.co/iNmOBt)
  - [Metasploit Repository Documentation](http://r-7.co/iNmOBt)

## Auxiliary Module Basics
- **Simple Code Examples**.
- **Using IRB in Metasploit**.
- **Exploit Written in Python and Converted to Metasploit**.

## Where to Put It
- **Official Modules**: Located in `msf3/modules/` with subdirectories organized by module type (exploit/, auxiliary/, post/).
- **User Modules**: Located in `~/.msf3/modules/` with the same structure, loaded at startup if it exists.
- **vSploit Modules**: Located in `~/.msf3/modules/auxiliary/vsploit`.

## Quick Demos
- **vSploit Documentation**: Available in the Rapid7 Community.
- **Link**: [Rapid7 Community](https://community.rapid7.com)

## Questions?
- **Contact Information**:
  - Marcus J. Carey: @iFail
  - David “bannedit” Rude: @msfbannedit
  - Will Vandevanter: @willis__ (two underscores)