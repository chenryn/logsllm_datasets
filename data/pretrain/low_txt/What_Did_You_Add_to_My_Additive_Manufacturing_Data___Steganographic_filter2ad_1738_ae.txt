### Optimization of Secret Data Encoding in STL Files

Up to 46,076 bytes of secret data can be encoded in a carrier STL file, with four bytes reserved for the size field. This capacity is sufficient for the selected example. The console output of the encoding process is shown in Figure 9c. Using the specified carrier file and payload, the total encoding time was 9 seconds, and the decoding time was 5 seconds. To ensure lossless extraction of the data, we calculated and displayed the MD5 cryptographic hash sum of the encoded secret on the console. We also calculated the checksum of the secret extracted from the carrier STL file. The MD5 value of the decoded secret matched exactly, confirming that the hidden binary file can be retrieved without any loss.

### Verification of Detection Avoidance

We verified the ability of our proposed approach to avoid detection by loading models into two different slicers (Cura and CatalystEx) and 3D printing both the original design and the carrier file with the encoded secret on two different 3D printers: Lulzbot Taz 6 and Stratasys Dimension Elite 5. Neither slicer nor printer showed any indicators of manipulation from the embedded payload. Screenshots and photos for side-by-side comparison are provided in Appendix A.2.

## Discussion

### Steganography with Engineering Designs

There is extensive literature on both theoretical and practical steganography (see Section 3.2 for a brief overview). The novelty of our approach lies in its application to engineering design files, as opposed to traditional steganographic techniques used for digital audio, video, image, or text documents. In any steganographic method, the encoded information should not interfere with the proper processing of the file. For audio, video, and textual formats, this means maintaining the ability to represent the content to an end-user. In our case, the modifications introduced in the digital design file should not affect the 3D printing process. As demonstrated in Section 6, our approach does not interfere with 3D printing.

**Note:** The equipment and software mentioned in this paper do not imply recommendation or endorsement by the authors or their organizations.

### Implications for AM Security

The presented attack has significant implications for the Additive Manufacturing (AM) security field. Until now, only three security threat categories have been identified: theft of technical data, sabotage attacks, and illegal part manufacturing [66]. The theft of technical data is often a prerequisite for illegal part manufacturing and targeted sabotage attacks [24]. Our work introduces a new threat category: Data In-/Exfiltration (see Figure 10).

### Use Cases and Threats

The introduced steganographic communication channel can be used for various malicious actions, such as exfiltrating stolen information, infiltrating malicious software, or storing illegal content. In the context of AM security, this channel can serve as an additional communication route for exfiltrating stolen AM technical data, thereby acting as a precursor to other threat categories.

### Distinguishability and Robustness

#### Three Contexts of Distinguishability

1. **Weak Attack Distinguishability**: In a weak attack, it is crucial to determine whether parts of the carrier STL file containing the subliminal message can be distinguished from those that do not. This distinction would allow for the extraction and analysis of the embedded message. The behavior of the CAD program using the modified STL file is key. If the vertex order is fully random, the weak attack could be distinguishable because the encoded content is not distributed pseudo-randomly. If the CAD program exhibits deterministic behavior, the altered distribution in a weak attack and the pseudo-random distribution in a regular attack might stand out if the encoded file does not exhaust the encoding capacity of the carrier STL.

2. **Strong Attack Distinguishability**: In a strong attack, every single bit is encoded with either the secret message or a random pad, ensuring that the distribution of vertex order within STL files with an encoded message is always pseudo-random. However, a second distinguishability context arises between STL files that contain a fully-encrypted steganographically encoded message and those that do not. To address this, we propose encoding a random bit stream even when no real message is embedded in the STL.

3. **System Distinguishability**: The third context involves distinguishing between compromised systems on the corporate network that encode messages (either real or random) in all STL files and those that are benign. Currently, there is no way for an attacker to address this kind of distinguishability, which can be used by defenders to identify compromised systems.

#### Robustness Against STL File Sanitation

Countermeasures to the proposed attack can fall into different categories, similar to ransomware countermeasures [5, 38]. One simple and effective method is to overwrite all facets in the STL file with either the same value (0 or 1) or a completely random value. Due to the semantic equivalency of vertex cyclical rotation, this should not affect the described 3D object geometry. However, this assumption needs empirical verification, which we plan to conduct in future work. Alternatively, incoming and outgoing STL files can be read into a CAD program and re-saved, assuming this step will remove all steganographically encoded information. However, if the CAD program is trojanized, it can be used by a malicious actor for encoding secret information instead of removing it.

## Conclusion

In this paper, we demonstrated that engineering design files, specifically STL files, can be used as steganographic channels. While the ability to encode information is not surprising, the constraints on such files are significantly tighter than for user-facing audio, video, and text data formats. In the context of Additive Manufacturing, encoding must not disrupt the ability to manufacture the part, and even slight distortions can be unacceptable for functional parts.

We focused on the most popular digital design format in 3D printing, STL, and identified several sources of entropy for encoding individual bits of information. By choosing the order in which vertices are listed, we defined a raw steganographic channel and introduced a strong attack that fully encrypts the channel. We verified that our approach does not interfere with printability and does not introduce visually noticeable distortions by encoding and recovering several design files for the Liberator printed pistol.

In future work, we plan to develop an automatic distinguisher for the sources of entropy we identified. We intend to use it to study the actual distribution of STL files produced by various CAD programs and to explore all three contexts of distinguishability. We also believe that the steganographic channel could be used to integrate watermarks in STL files, thus protecting intellectual property in Additive Manufacturing.

---

**References**

[1] Stanford 3D Scanning Repository. (2014). http://graphics.stanford.edu/data/3Dscanrep/

[2] 3D Printing Business Directory. (2018). https://www.3dprintingbusiness.directory

[3] Watermark3D. (2019). https://www.watermark3d.com

[4] Agrikola, T., Couteau, G., Ishai, Y., Jarecki, S., & Sahai, A. (2020). On pseudorandom encodings. In Theory of Cryptography Conference. Springer, 639–669.

[5] Al-rimy, B. A. S., Maarof, M. A., & Mohd Shaid, S. Z. (2018). Ransomware threat success factors, taxonomy, and countermeasures: A survey and research directions. Computers & Security, 74, 144–166.

[6] Anderson, R. J., & Petitcolas, F. A. P. (1998). On the limits of steganography. IEEE Journal on Selected Areas in Communications, 16(4), 474–481.

[7] Belikovetsky, S., Yampolskiy, M., Toh, J., Gatlin, J., & Elovici, Y. (2017). dr0wned – Cyber-Physical Attack with Additive Manufacturing. In 11th USENIX Workshop on Offensive Technologies (WOOT 17). USENIX Association, Vancouver, BC. https://www.usenix.org/conference/woot17/workshop-program/presentation/belikovetsky

[8] Bishop, M., Engle, S., Frincke, D. A., Gates, C., Greitzer, F. L., Peisert, S., & Whalen, S. (2010). A risk management approach to the “insider threat”. In Insider threats in cyber security. Springer, 115–137.

[9] Bryans, D. (2015). Unlocked and loaded: government censorship of 3D-printed firearms and a proposal for more reasonable regulation of 3D-printed goods. Ind. LJ, 90, 901.

[10] Cachin, C. (2024). An information-theoretic model for steganography. Inf. Comp., 41–56.

[11] Cayre, F., & Macq, B. (2003). Data hiding on 3-D triangle meshes. IEEE Transactions on Signal Processing, 51(4), 939–949.

[12] CBS. (2020). Austin-based company attempting to distribute 3D gun blueprints online hits legal setback. (Jan 2020). https://cbsaustin.com/news/local/austin-based-company-attempting-to-distribute-3d-gun-blueprints-online-hits-legal-setback

[13] Cheddad, A., Condell, J., Curran, K., & Mc Kevitt, P. (2010). Digital image steganography: Survey and analysis of current methods. Signal Processing, 90(3), 727–752.

[14] Chen, F., Luo, Y., Tsoutsos, N. G., Maniatakos, M., Shahin, K., & Gupta, N. (2019). Embedding tracking codes in additive manufactured parts for product authentication. Advanced Engineering Materials, 21(4), 1800495.

[15] Chen, F., Mac, G., & Gupta, N. (2017). Security features embedded in computer aided design (CAD) solid models for additive manufacturing. Materials & Design, 128, 182–194.

[16] Chen, F., Yu, J. H., & Gupta, N. (2019). Obfuscation of embedded codes in additive manufactured components for product authentication. Advanced Engineering Materials, 21(8), 1900146.

[17] Cox, I., Miller, M., Bloom, J., Fridrich, J., & Kalker, T. (2007). Digital watermarking and steganography. Morgan Kaufmann.

[18] Bourell, D. L., Frazier, W., Seifi, M., & Kuhn, H. (2020). ASM Handbook Volume 24 – Additive Manufacturing Processes. ASM International.

[19] Dedić, N., Itkis, G., Reyzin, L., & Russell, S. (2009). Upper and lower bounds on black-box steganography. Journal of Cryptology, 22(3), 365–394.

[20] Delmotte, A., Tanaka, K., Kubo, H., Funatomi, T., & Mukaigawa, Y. (2019). Blind Watermarking for 3D Printed Objects by Locally Modifying Layer Thickness. IEEE Transactions on Multimedia.

[21] Fifield, D., Lan, C., Hynes, R., Wegmann, P., & Paxson, V. (2015). Blocking-resistant communication through domain fronting. Proceedings on Privacy Enhancing Technologies, 2015(2), 46–64.

[22] Franzen, C. (2014). 3D-printed gun maker in Japan sentenced to two years in prison. https://www.theverge.com/2014/10/20/7022809/3d-printed-gun-maker-in-japan-sentenced-2-years

[23] Goehrke, S. (2019). A Look Ahead in 3D Printing with Gartner’s Pete Bailiere. https://www.fabbaloo.com/blog/2019/1/10/a-look-ahead-in-3d-printing-with-gartners-pete-basiliere

[24] Graves, L. M. G., Lubell, J., King, W., & Yampolskiy, M. (2019). Characteristic Aspects of Additive Manufacturing Security From Security Awareness Perspectives. IEEE Access, 7, 103833–103853.

[25] Greenburg, A. (2013). 3D-Printed Gun’s Blueprints Downloaded 100,000 Times in Two Days “(With Some Help From Kim Dotcom)”. https://www.forbes.com/sites/andygreenberg/2013/05/08/3d-printed-guns-blueprints-downloaded-100000-times-in-two-days-with-some-help-from-kim-dotcom/#86151c710b88

[26] Hartung, F., & Kutter, M. (1999). Multimedia watermarking techniques. Proc. IEEE, 87(7), 1079–1107.

[27] Heung-Kyu, L., Hou, J.-U., Choi, H.-Y., Hyun-Ji, S., Do-Gon, K., & Han-Ul, J. (2019). Watermark embedding apparatus and method, and watermark detecting apparatus and method for 3D printing environment. (Oct. 2019).

[28] Hipolite, W. (2015). 3D printable files for Cody Wilson’s Liberator Gun are Now Available to All on 3DShare. (Jun 2015). https://3dprint.com/73842/download-3d-printed-gun/

[29] Homoliak, I., Toffalini, F., Guarnizo, J., Elovici, Y., & Ochoa, M.