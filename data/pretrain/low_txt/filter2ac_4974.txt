**Title: Monocerus: Dynamic Analysis for Smart Contracts at Black Hat Asia 2019**

Smart contracts, which store and execute programs on the blockchain, have become a cornerstone of the Fintech revolution. However, like traditional code, smart contracts can be riddled with vulnerabilities that may lead to significant economic consequences. To identify and mitigate these vulnerabilities, we rely on security tools. Currently, most available tools employ either symbolic execution or static analysis techniques. Traditional dynamic analysis tools, however, are notably absent due to the lack of support on blockchain platforms.

This research introduces **Monocerus**, a lightweight, multi-platform framework designed for the dynamic analysis of Ethereum smart contracts. Monocerus offers several key features:

- **Bytecode Emulation**: It emulates smart contract bytecode without requiring the source code.
- **Multi-Platform Support**: Native builds for Windows and *nix (including Mac OS X, Linux, and *BSD) are provided.
- **Blockchain-Neutral API**: A clean, simple, lightweight, and intuitive API that is blockchain-agnostic.
- **Pure C Implementation**: Written in pure C with bindings for Python.
- **Fine-Grained Instrumentation**: Allows for user-customized callbacks for detailed instrumentation.
- **Thread-Safe Design**: Built to be inherently thread-safe.
- **Open Source**: Released under a permissive open-source license.

The goal of this work is to establish a foundation for dynamic analysis on the Ethereum blockchain. To showcase its capabilities, we have developed a new toolset on top of Monocerus, including a bytecode debugger, code tracer/profiler, and an advanced fuzzer. Join us for our talk to see some exciting and innovative demonstrations.