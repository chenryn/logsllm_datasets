### Incorrect Window Positions and User Awareness

Incorrect window positions should be apparent to the user, with the trusted banner continuing to indicate the current context. Domains can also have very small or thin windows where no content is visible, yet the active domain banner will still be displayed. Additionally, domains can render their own cursors, which may confuse users if multiple cursors are shown on the screen. Hardware mitigations might include uniquely identifying the CDDC-rendered cursor, for example, by making it flash a specific color when requested.

These covert channels and cognitive issues are not unique to the CDDC but need to be carefully considered in any implementation and subsequent deployment. Mitigations include proper user training and awareness, along with careful consideration of policy-based mechanisms.

### Integrated Applications

The coarse-grained, window-level composition provided by the CDDC offers a useful converged MLS (Multi-Level Security) desktop interface. Through finer-grained composition, we can create converged MLS-like applications. In this scenario, sub-elements of an application are provided by each domain, and the composition creates a single MLS-looking application on the desktop. While the individual elements of the application remain single-level secure and respond at the appropriate level to keyboard and mouse interactions, the user perceives the individual domain elements as a cohesive whole, interacting as if it were a true MLS application without mixing the underlying data.

A simple example is shown in Figure 11, where each domain renders part of an email client. When the CDDC composites these regions, the user is presented with an MLS-like email client that allows them to check emails from all their isolated domains in a "single" application.

**Figure 11: Simple MLS-like Email Composition**

The benefit of this approach is that we do not need to construct, evaluate, and accredit a true MLS application. Instead, we can use untrusted email clients at the appropriate level on each domain. We only need to trust the CDDC to correctly composite the identified windows. This aligns with the principle of usable security, achieving a high degree of the desired functionality of an MLS application without the burden of verifying the security of a true MLS application.

This approach to MLS application construction is similar in philosophy to the Annex PRISM architecture introduced by Owen et al. [14]. The authors replicated single-level secure applications and, in conjunction with a small TCB, created integrated MLS-like applications. These applications provided a consistent user interface, such as through Microsoft Word for underlying MLS documents. The authors termed this Multiple Integrated Levels of Security (MiLS), which also aptly describes the MLS-like applications achieved through our fine-grained composition. MiLS applications could be constructed for multi-level database interfaces, logistics clients, service catalogs, and web browsers.

We prototyped a MiLS RSS Reader application on the hardware-based CDDC, where news feeds from multiple security domains are integrated. The user interface and composited construction are shown in Figure 12.

**Figure 12: MiLS RSS Reader**

The security of the composition remains the same as the coarse-grained converged desktop. The user is alerted to the context via the trusted banner, and the keyboard and mouse are appropriately switched between domains. The composition is a carefully arranged geometric arrangement of application fragments. Correctly arranging these elements is key to providing a convincing MLS-like interface for the user. The news feeds on the left composite together for an integrated view, while the main story is composited over the top of each other, with the active domain content displayed. In these simple examples, the composition keeps all elements from the untrusted domain software in the same position. A more complex example is presented in Appendix B.

### Managed Information Flows

Visually, the converged desktop provides a convenient user interface. In practice, it would be advantageous to overlay some desktop functionality across the domains, albeit in a limited manner. The CDDC has the capability, and we have demonstrated the ability to provide managed (deliberate) information flows between domains. To copy and paste information from one domain to another, data can be sent in-band within the video stream and pasted to another domain in-band in the USB stream, i.e., injecting characters into the USB keyboard stream.

Combining this managed information flow channel with MiLS applications can provide a powerful user interface. Further, taking advantage of existing accredited information flow devices (e.g., data diodes and security gateways) can increase functionality and cross-domain integration of our MiLS applications. An extended example is described in Appendix B.

### Future Research

Current and future research around the CDDC includes increasing the flexibility of the CDDC hardware and software ecosystem, enhancing usability, and examining how this can be controlled through sensible policies. We are also experimenting with MiLS applications and managed information flows to construct more tightly integrated applications.

We are investigating a supervisory processor to control aspects of the composition and aid with the orchestration of managed information flows and MiLS applications. By embedding zero-client functionality into the CDDC and using remote desktop connections, the CDDC could provide a converged endpoint ready for connection to existing network infrastructure. The domain-side software already operates over remote desktop links via thin-client endpoints.

CDDC policy could include: the shape of the cursor over a specific domain; operation without decoration (e.g., SCADA environments); view-only domains (e.g., financial environments); keyboard broadcasting (e.g., lock screen); mouse broadcasting (e.g., multi-domain application launching); and mouse hover over non-active domain (e.g., switch mouse to another domain and not the keyboard).

The policy and hardware mechanisms surrounding managed information flows and the implementation of copy and paste are ongoing research. MiLS applications with controlled information flows, such as MiLS wikis with cross-domain hyper-linking, are also promising research areas. Human factors analysis plays an important role in the use and adoption of an MLS user interface technology. We have started investigating the workflow and cognitive threats associated with using the CDDC.

### Concluding Remarks

True MLS user interfaces and even constrained implementations rely heavily on trusting large amounts of underlying infrastructure, whether software or hardware, making it difficult to evaluate and accredit these solutions for use in high-assurance environments.

The CDDC provides a very small trusted computing base and functionality built upon the simple premise of hardware-based composition and trustworthy keyboard and mouse switching. The simplicity makes the system amenable to formal analysis, allowing us to reason about the security properties of the device, specifically the non-interference properties. The approach removes most of the semantic information before handling multi-level data, yet still provides most of the benefits of more integrated solutions.

The CDDC does not provide perfect security, but most useful systems will not have perfect security. What it does provide is usable security with strong guarantees for certain security properties and known information channels that can be mitigated by policy. The CDDC can be configured to provide a balance between security and usability suitable for the deployed environment.

The CDDC can be built upon to provide unique, converged MLS-like applications without the need to trust the construction of the applications to the level of traditional MLS software. The notion of MiLS applications is powerful from both a user and security perspective, allowing us to keep data at the appropriate level and have a user operate on that data at the correct level, adding carefully managed information flows when required.

### References

[1] Air Force Research Laboratory AFRL/RIEB. SecureView overview. http://www.ainfosec.com/wp-content/uploads/2013/10/SecureView-Overview-Master-PA-Cleared-7Oct13.pdf, October 2013.

[2] P. Barham, B. Dragovic, K. Fraser, S. Hand, T. Harris, A. Ho, R. Neugebauer, I. Pratt, and A. Warfield. Xen and the art of virtualization. ACM SIGOPS Operating Systems Review, 37(5):164–177, 2003.

[3] Common Criteria Sponsoring Organisations. Common Criteria for Information Technology Security Evaluation, Part 3: Security assurance components, Version 3.1 Rev 4. http://www.commoncriteriaportal.org/cc/, Sept. 2012.

[4] J. Epstein, J. McHugh, R. Pascale, H. Orman, G. Benson, C. Martin, A. Marmor-Squires, B. Danner, and M. Branstad. A prototype B3 trusted X Window System. In Computer Security Applications Conference, 1991. Proceedings., Seventh Annual, pages 44–55. IEEE, 1991.

[5] N. Feske and C. Helmuth. A Nitpicker’s guide to a minimal-complexity secure GUI. In Computer Security Applications Conference, 21st Annual, pages 85–94. IEEE, 2005.

[6] General Dynamics, C4 Systems. Secure virtualisation: Today’s reality, 2009. WP-TVE-1-0409.

[7] J. Goguen and J. Meseguer. Security policies and security models. In Security and Privacy (SP), 1982 IEEE Symposium on, pages 11–20, Oakland, California, USA, 1982.

[8] D. Hardin, R. Richards, and M. Wilding. High assurance guard for security applications utilizing authentication and authorization services for sources of network data, Nov. 4 2014. US Patent 8,881,260.

[9] M. Kang, A. Moore, and I. Moskowitz. Design and assurance strategy for the NRL Pump. In High-Assurance Systems Engineering Workshop, 1997., Proceedings, pages 64–71, Aug 1997.

[10] R. Kerber and B. Globe. Cost of data breach at TJX soars to $256 m. Boston Globe, http://www.boston.com/business/globe/articles/2007/08/15/cost-of-data-breach-at-tjx-soars-to-256m, 2007.

[11] T. Murray, D. Matichuk, M. Brassil, P. Gammie, and G. Klein. Noninterference for operating system kernels. In Chris Hawblitzel and Dale Miller, editor, The Second International Conference on Certified Programs and Proofs, pages 126–142, Kyoto, Dec. 2012.

[12] T. Nipkow, L. Paulson, and M. Wenzel. Isabelle/HOL: A Proof Assistant for Higher-Order Logic. In Lecture Notes in Computer Science, volume 2283. Springer-Verlag, Germany, 2002.

[13] H. Okhravi and D. Nicol. TrustGraph: Trusted graphics subsystem for high assurance systems. In Computer Security Applications Conference, 2009. ACSAC ’09. Annual, pages 254–265, Dec 2009.

[14] C. Owen, D. Grove, T. Newby, A. Murray, C. North, and M. Pope. PRISM: Program replication and integration for seamless MILS. In Security and Privacy (SP), 2011 IEEE Symposium on, pages 281–296. IEEE, 2011.

[15] R. Quinn and B. Kerrigan. Facilitating user interaction with multiple domains while preventing cross-domain transfer of data, Mar. 13 2013. US Patent App. 13/800,262.

[16] Raytheon Company. Raytheon Trusted Thin Client (rtn 216411.pdf), 2014. http://www.raytheoncyber.com.

[17] J. Rutkowska and R. Wojtczuk. Qubes OS architecture. Invisible Things Lab Tech Rep, page 54, 2010.

[18] R. H. Sherman, G. W. Dinolt, and F. Hubbard. Multilevel secure workstation, Dec. 24 1991. US Patent 5,075,884.

[19] Smart Security Labs. K424F-SH Brochure. http://www.smartavi.com/assets/files/b-K424F-Brochure.pdf.

[20] A. Soffer and O. Vaisband. Secure KVM device ensuring isolation of host computers, July 1 2014. US Patent 8,769,172.

[21] G. Stoneburner. Developer-focused assurance requirements [Evaluation Assurance Level and Common Criteria for IT system evaluation]. Computer, 38(7):91–93, July 2005.

[22] M. Tehranipoor and F. Koushanfar. A survey of hardware trojan taxonomy and detection. Design Test of Computers, IEEE, 27(1):10–25, Jan 2010.

[23] J. M. Wing. A symbiotic relationship between formal methods and security. In Computer Security, Dependability and Assurance: From Needs to Solutions, 1998. Proceedings, pages 26–38. IEEE, 1998.

[24] Y. Yeh. Triple-triple redundant 777 primary flight computer. In Aerospace Applications Conference, 1996. Proceedings., 1996 IEEE, volume 1, pages 293–307 vol.1, Feb 1996.

### Appendix

#### A. Decoration Algorithm

The decoration algorithm is crucial. It allows the hardware, an FPGA in our prototype, to quickly determine if a specific pixel should be decorated with a border, left undecorated, or have no content at all. This needs to be performed in real-time for each pixel location and based solely on the windowing information provided in-band from each domain.

- **Window Region**: \( w = (x, y, w, h) \)
- **Input Pixel**: \( p = (x_1, y_1) \)
- **List of Windows**: \( wl = [w_1, w_2, ..., w_n] \) where \( w_k \) is in front of \( w_{k-1} \)

Apply the function `extend` to create a decoration region:
- **List of Decoration Regions**: \( dl = [d_1, d_2, ..., d_n] \)

Apply the function `include(p, w)` returning 0 or 1 to check if a pixel is within the window or decoration:
- **In Windows List**: \( in\_windowsl = [b_1, b_2, ..., b_n] \)
- **In Decorations List**: \( in\_decorationsl = [b_1, b_2, ..., b_n] \)

The output pixel \( p_o \) is then calculated as:
- If \( in\_decorationsl = in\_windowsl = 0 \) then \( p_{decorated} = \text{no content} \)
- Else if \( in\_decorationsl > in\_windowsl \) then \( p_{decorated} = \text{decoration} \)
- Else \( p_{decorated} = \text{window content} \)

#### B. Extended MILS Application

Incorporating a frame buffer in the CDDC would allow input windows to be rearranged, enabling the construction of more intertwined and cognitively integrated applications. We have prototyped a fine-grained composition email client on our software emulator. The emulator was used as it allowed for quick implementations of the buffering and rearranging functions. A screenshot is shown in Figure 13. In this instance, the window decoration has been replaced with a decoration color blob next to the inbox items.

**Figure 13: More Complex MiLS Email Composition**

The notion of fine-grained MiLS composition is not limited to the CDDC and could be usefully applied to existing secure user interfaces, such as Qubes OS [17] or Nitpicker [5]. Introducing managed information flows between domains can increase the integration of these applications. We prototyped replying to and forwarding emails on different domains. This functionality was implemented through CDDC-rendered MLS buttons (Figure 14) and external data diodes (Figure 15), allowing, for example, an email on DOMAIN 1 to be replied to on DOMAIN 2 by first sending the email from DOMAIN 1 to DOMAIN 2 over the data diode and then displaying the email on DOMAIN 2. Having all user interaction occur within a single MiLS composited application provides the integrated feel of a true MLS email application.

**Figure 14: MiLS Email Composition - Reply Buttons**

**Figure 15: MiLS Email Composition - External Data Diodes**

Using the CDDC to help orchestrate the MiLS applications can increase their complexity. Examples include keyboard broadcasting, which allows a user to search across all domains at once, or mouse broadcasting to concurrently launch multiple applications across different domains.

Untrusted software is relied upon to send, receive, and marshal the data required on each separate security domain. If this software acts maliciously, we are presented with the same cognitive threats discussed in Section 7, as well as any at-level attacks the software could normally perform against a single-level secure system.