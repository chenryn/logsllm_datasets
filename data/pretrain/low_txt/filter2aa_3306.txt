# Pwning Your Azure Environment

## Presenter
**Dirk-jan Mollema / @_dirkjan**
- Based in The Netherlands
- Hacker, Red Teamer, and Researcher at Fox-IT since 2016
- Author of several Active Directory tools:
  - Mitm6
  - ldapdomaindump
  - BloodHound.py
  - aclpwn.py
- Co-author of ntlmrelayx
- Recognized as one of the MSRC Most Valuable Security Researchers in 2018/2019
- Blogs on dirkjanm.io
- Notable research: PrivExchange
- Tweets security insights on @_dirkjan

## Overview
This talk will cover various aspects of Azure AD, including its structure, roles, applications, and service principals. We will also explore how to interact with Azure AD, the complexities of its permission system, and potential security vulnerabilities.

### Whoami
- **Azure AD**: What it is and how to interact with it.
- **Azure AD Roles, Applications, and Service Principals**: Understanding their roles and permissions.
- **Fun with MFA**: Exploiting Multi-Factor Authentication.
- **Linking Up Cloud and On-Premise**: Integrating cloud and on-premise environments.
- **Azure Resource Manager and Azure AD**: Managing resources and roles.
- **Azure Integrations – Azure DevOps**: Securing DevOps pipelines.

## Azure AD: An Introduction
- **Definition**: Azure Active Directory (Azure AD) is Microsoft’s cloud-based identity and access management service.
- **Usage**: It serves as the authentication source for Office 365, Azure Resource Manager, and other integrated services.

### Azure AD vs. (Windows Server) Active Directory
| Feature                  | (Windows Server) Active Directory | Azure Active Directory |
|--------------------------|-----------------------------------|------------------------|
| Protocol                 | LDAP                              | REST API's             |
| Authentication           | NTLM/Kerberos                     | OAuth/SAML/OpenID/etc  |
| Structure                | Structured directory (OU tree)    | Flat structure         |
| Group Policy Objects     | GPOs                              | No GPOs                |
| Access Controls          | Super fine-tuned access controls  | Predefined roles       |
| Organizational Unit      | Domain/forest                     | Tenant                 |
| Trust Relationships      | Trusts                            | Guests                 |

### Interacting with Azure AD
- **Portal**: User-friendly but lacks depth for understanding underlying mechanisms.
- **PowerShell Modules**:
  - **MSOnline**: Focused on Office 365.
  - **AzureAD**: General Azure AD management.
  - **Azure CLI / Az PowerShell Module**: Emphasizes Azure Resource Manager.
- **APIs**:
  - **Azure AD Graph**: Deprecated but still used.
  - **Microsoft Graph**: Comprehensive and modern.
  - **Exchange Provisioning Service**: Specific to Exchange.

### Confusion and Limitations
- **Non-Uniform Interaction**: Multiple ways to interact with Azure AD, each with its own limitations and unique features.
- **Documentation**: Often unclear and inconsistent across different platforms.
- **Terminology**: Varies between documentation, APIs, and the Azure portal.

## Azure AD – Roles, Applications, and Service Principals
- **Principals**:
  - Users
  - Devices
  - Applications
- **Roles**:
  - **RBAC Roles**: Used for Azure Resource Manager.
  - **Office 365 Administrator Roles**: Fixed and specific to Office 365.
- **Permissions**:
  - **Delegated Permissions**: Require a signed-in user.
  - **Application Permissions**: Assigned to the application and can be used at any time.

### Application Privileges
- **OAuth2 Permissions**: Delegated permissions.
- **Application Roles**: Application-specific permissions.
- **Resource Access**: Permissions required by an application.
- **API Permissions**: Permissions defined in app registration.

### Hiding in Plain Sight
- **Admin Roles**: Some admin roles allow managing all applications, including assigning credentials.
- **Backdooring Azure AD**: Possible if you control an application with more privileges than your current role.
- **MFA for Service Principals**: Not supported, allowing for privilege escalation.

## Fun with MFA
- **MFA Methods**:
  - Authenticator App
  - Notification
  - One-Time Code
  - Text Message
  - Voice Call
- **Abuse Scenario**:
  - Break into someone’s voicemail.
  - Change the welcome message to a # tone.
  - Ensure the phone is occupied.
  - Sign in using the password.
  - Azure AD will redirect to the voicemail, authenticating the user.

## Linking Up Cloud and On-Premise
- **Azure AD Connect**: Tool that syncs AD data to Azure AD.
- **Sync Account Privileges**: High privileges, especially if Password Hash Synchronization (PHS) is enabled.
- **Exploitation**:
  - **Adconnectdump**: Tools to dump the sync account password.
  - **Privilege Escalation**: Control on-premise and cloud assets.

## Azure Resource Manager and Azure AD
- **RBAC Roles**: Can be assigned to service principals.
- **High-Privilege Applications**: May require an account, such as Terraform.
- **Escalation**: Pwn the on-premise sync account and assign credentials to service principals.

## Azure Integrations – Azure DevOps
- **Features**:
  - Source code management
  - Build pipelines
  - Automatic deployment
- **Security Considerations**:
  - **Pipeline Definitions**: Can be edited by anyone with commit privileges.
  - **Secrets Management**: Ensure secrets are not exposed in public repositories.
  - **Vulnerabilities**: Reported and fixed in the latest version of DevOps.

## Conclusions
- **Cloud Security**: Essential to secure cloud environments, especially with MFA.
- **SaaS Benefits**: Always up-to-date with the latest patches and features.
- **Trust in Vendor**: Full trust in the vendor is implied, but vigilance is necessary.

---

For more information, visit [fox-it.com](https://fox-it.com).