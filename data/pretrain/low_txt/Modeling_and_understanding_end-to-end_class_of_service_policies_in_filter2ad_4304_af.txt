### Redundancy and Cost Considerations in CER Sites

Sites such as CER1, CER2, and CER3, which correspond to voice centers or gateway sites, often justify the costs of redundancy setups due to their critical nature.

### Asymmetric Classes in CER Pairs

One notable observation in some enterprise VPNs is the presence of asymmetric classes between CER pairs. For example, a pair of CERs may be able to communicate in class C1 in one direction but not in the reverse direction. While we cannot confirm the exact reasons behind this, we hypothesize two possible scenarios:
1. **Unidirectional Traffic**: This could be due to streaming video traffic or other types of traffic that are typically unidirectional.
2. **Intentional Design**: It is possible that the two sites are not intended to exchange C1 traffic in practice. To verify this, we would need to combine actual traffic data exchanged between sites with our CoS model.

### Non-Standard Flow Treatments

Our model and tool can detect whether various application flows are treated correctly and identify any non-standard flow treatments that deviate from best practices. We used our tool to collect a list of standard flow-treatment patterns and confirmed them with network designers. These patterns ensure consistent treatment of flows throughout the marking, policing, and queuing stages of the CERs. Here, we highlight three significant and interesting patterns, denoted by P1, P2, and P3:

1. **P1: Consistent Marking and Re-marking**
   - **Expected Behavior**: Flows marked as belonging to a data class (e.g., C1) by the marking stage should be re-marked by the policing stage as conformant or non-conformant within the same class.
   - **Departure**: A departure occurs when a flow marked as belonging to a data class (e.g., C1) is re-marked by the policing stage as corresponding to a different data class (e.g., C2).

2. **P2: Proper Queue Assignment**
   - **Expected Behavior**: Flows leaving the policing stage marked as a particular data class should go to the corresponding queue.
   - **Departure**: A departure occurs if a flow does not go into any defined queue and instead enters a default queue. The behavior of default queues is vendor and model-specific, leading to non-deterministic and likely degraded performance.

3. **P3: Explicit Marking on Exit**
   - **Expected Behavior**: Flows exiting the CER should be explicitly marked by the CER.
   - **Departure**: A departure is a concern because the treatment of the flow is not deterministic and depends on how the flow was marked prior to entering the CER.

### Detection and Analysis of Non-Standard Flow Treatments

In detecting non-standard flow treatments for CERs, we considered cases where such treatments could occur for:
- Flows corresponding to the address space of the CER.
- The universal flowset (see ยง5 and Table 1).

For brevity, we present results only for the address space of the CER. Figure 17 shows the deviation from standard flow treatments across all enterprises, considering the address space of each CER. Each curve corresponds to a specific standard flow treatment condition that was violated. The X-axis shows the number of routers in an enterprise for which such deviation exists, and a point (X, Y) indicates that Y% of the enterprises have at most X CERs with non-standard treatment. For all three patterns, nearly 80% of the enterprises show no deviation from standard treatment, and at most 5 routers for 95% of the enterprises. This result suggests that while non-standard flow treatments are not widespread, they do exist in a small set of routers in a few enterprises.

### Insights from Further Analysis

We further analyzed the cases involving deviations from standard treatments and discussed these with designers and operators. Key insights include:

- **Configuration Practices and Legacy Routers**:
  - **Pattern P1 Departures**: These correspond to cases where flows traversing a CER could be marked on the input interface as belonging to a particular data class and then re-marked on the output interface as belonging to a different data class. This was unexpected, as the standard expected flow treatments involved each CER marking the flow only once or re-marking it as conformant or non-conformant for the same data class. Operators revealed that this departure was potentially due to changes in configuration practices and the handling of legacy routers. Earlier practices configured marking policies on the input interfaces, while newer practices configure them on the output interfaces. Legacy routers were not typically modified unless a policy change was necessary, in which case changes were made on the output interfaces, consistent with newer practices. The legacy configuration in the input interface was left behind, though best practice would have been to remove it.

- **Misconfiguration of Probe Traffic**:
  - **Pattern P2 Departures**: These correspond to cases where traffic corresponding to SLA probes from some CERs was incorrectly queued. SLA probes monitor the performance of each traffic class to ensure compliance with requirements. Incorrect configuration of SLA traffic does not impact the application's performance but can affect monitoring results. In this scenario, SLA probes were incorrectly assigned to the default queue, which receives lower priority than other queues, resulting in underestimation of performance.

- **Pre-marked Customer Traffic**:
  - **Pattern P3 Departures**: We found examples where flows traversing a CER were not marked at all (neither at the policing nor marking stage), departing from pattern P3. Operators indicated that these scenarios likely corresponded to cases where an explicit agreement with the customer stipulated that the customer would properly mark all traffic before it reached the CER. While best practice would have been for the CERs to explicitly re-mark the traffic, the net treatment received by correctly pre-marked flows would not be affected.

### Related Work

Recent research has focused on modeling and understanding network designs and detecting errors through configuration analysis. Studies have covered routing designs, route redistribution policies, reachability analysis, BGP policies, and intra-domain traffic engineering. Industry-driven efforts have aimed to simplify configuration through templates and vendor-neutral languages. Our focus, however, is on CoS policies in enterprise networks, an area that has received little attention. The CoS domain presents challenges such as highly intertwined and nested configurations, policies instantiated over multiple routers, and the use of large ACLs. Managing CoS configurations involves tuning class memberships and policies at the granularity of individual flows, and misconfigurations can lead to SLA violations and adverse consequences.

### Discussion and Open Issues

- **Scalability of Ruleset Composition**: Our current tool implementation focuses on the configuration of CERs and PERs, requiring relatively few rulesets despite each router having multiple root rulesets. We believe this is reasonable in MPLS VPN settings, given the heterogeneity and frequent changes in CoS policies in CERs and PERs. An important question is the scalability of our approach with the number of rulesets. The use of BDDs helps ensure better scaling properties, and the computational complexity depends on the number of distinct flow treatments and the types of flow transformations.

- **Combining with Routing Information**: Future work could involve automatically determining the entire set of routers on a path using routing table information, enabling the tool to be used in "hub-and-spoke" VPNs where traffic may traverse intermediate PERs and CERs.

- **Extension to Other Vendors**: Our tool is currently based on Cisco IOS. Extending our approach to support other vendors like Juniper and Alcatel is an interesting future direction. Preliminary inspections suggest that our modeling approach is relevant, and the primary effort will be developing language-specific parsers.

- **Visualizing CoS Matrix**: Developing better visualization techniques for compactly showing CoS designs for large-scale VPNs is a ripe avenue for future work. One heuristic involves collapsing sites that exchange the same set of classes into a single instance.

### Conclusion

In this paper, we presented a method to model CoS policies from low-level device configurations using a formal representation called rulesets. Our tool can trace end-to-end CoS treatments of arbitrary flows and has computation times in the order of seconds on real datasets. Using our tool, we conducted the first study on CoS designs of operational networks, analyzing 150 different enterprise VPNs. Our results show the prevalence of CoS usage, significant diversity in CoS designs, and the importance of our model in assisting operators with network-wide CoS operations. Future work includes extending our tool to other vendor configurations and incorporating models of routing design, control and data plane reachability, and traffic data.

### Acknowledgments

We thank Jennifer Rexford for her helpful comments on an earlier version of the paper. We also thank the anonymous reviewers and Gianluca Iannaccone for their suggestions. This work was supported by NSF grant CNS-0721488.

### References

[1] Cisco IP solution center. http://www.cisco.com/en/US/products/sw/netmgtsw/ps4748/index.html.
[2] DSL forum TR-069. http://www.broadband-forum.org/technical/download/TR-069.pdf.
[3] Intelliden. http://www.intelliden.com/.
[4] C. Alaettinoglu, C. Villamizar, E. Gerich, D. Kessensand, D. Meyer, T. Bates, D. Karrenberg, and M. Terpstra. Routing policy specification language (RPSL). RFC 2622, June 1999.
[5] T. Benson, A. Akella, and D. Maltz. Unraveling the complexity of network management. In Proc. NSDI, 2009.
[6] H. Boehm, A. Feldmann, O. Maennel, C. Reiser, and R. Volk. Network-wide inter-domain routing policies: Design and realization. In Proc. NANOG 34, 2005.
[7] J. Case, M. Fedor, M. Schoffstall, and J. Davin. A simple network management protocol (SNMP). RFC 1157, May 1990.
[8] Distributed Management Task Force, Inc. http://www.dmtf.org.
[9] W. Enck, P. McDaniel, S. Sen, P. Sebos, S. Spoerel, A. Greenberg, S. Rao, and W. Aiello. Configuration management at massive scale: System design and experience. In Proc. USENIX, 2007.
[10] N. Feamster and H. Balakrishnan. Detecting BGP configuration faults with static analysis. In Proc. NSDI, 2005.
[11] A. Feldmann and J. Rexford. IP network configuration for intradomain traffic engineering. In IEEE Network Magazine, Sept. 2001.
[12] H. Hamed and E. Al-Shaer. Anomaly discovery in distributed firewalls. In Proc. IEEE INFOCOM, 2004.
[13] H. Hamed, E. Al-Shaer, and W. Marrero. Modeling and verification of IPsec and VPN security policies. In Proc. IEEE ICNP, 2005.
[14] S. Hazelhurst, A. Attar, and R. Sinnappan. Algorithms for improving the dependability of firewall and filter rule lists. In Proc. DSN, 2000.
[15] P. G. Hinman. Fundamentals of Mathematical Logic. A K Peters Ltd, 2005.
[16] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding light on the glue logic of internet routing architecture. In Proc. ACM SIGCOMM, 2008.
[17] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjalmtysson, and A. Greenberg. Routing design in operational networks: A look from the inside. In Proc. ACM SIGCOMM, 2004.
[18] G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, G. Hjalmtysson, and J. Rexford. On static reachability analysis of IP networks. In Proc. IEEE INFOCOM, 2005.
[19] L. Yuan, C.-N. Chuah, and P. Mohapatra. Progme: Towards programmable network measurement. In Proc. ACM SIGCOMM, 2007.
[20] L. Yuan, J. Mai, Z. Su, H. Chen, C.-N. Chuah, and P. Mohapatra. Fireman: A toolkit for firewall modeling and analysis. In Proc. IEEE Symposium on Security and Privacy, 2006.