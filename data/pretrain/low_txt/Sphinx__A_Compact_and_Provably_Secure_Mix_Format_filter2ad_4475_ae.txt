### Encryption Layers and Security Overhead

The DHAES/DSIES encryption scheme requires a cyclic group element for which the Decisional Diffie-Hellman (DDH) problem is computationally hard, along with a message authentication code (MAC) for each hop in the mixing process. To achieve a security level comparable to that of Sphinx, this approach introduces an overhead of 272 bytes per hop: 256 bytes for the group element and 16 bytes for the MAC, in addition to any routing information. The packet header length can be abstracted as \((p + s)r\). 

In Mixmaster, the format length is affected by the need to include a separate public key element for each mixing stage. Camenisch and Lysyanskaya [5] provided formal definitions within the Universal Composability (UC) model and proposed a concrete, provably secure packet format for mixing forward messages, known as the CL05 format. This format separates the message into a header and a payload. The header consists of asymmetrically encrypted ciphertexts containing the address of the next hop, using a CCA2-secure encryption scheme with tags, and the bulk of the encryption is performed using a pseudorandom permutation (e.g., a block cipher). The header length in the CL05 scheme is \(rp + (r + 1)s\), which is similar to M¨oller's [15] design due to shared principles. It is worth noting that the CL05 scheme supports replies at a similar cost, though these are distinguishable from sender-anonymous messages.

### Mixminion and Indistinguishable Replies

Mixminion [8] was the first packet format to propose indistinguishable anonymous replies. Its cryptographic design involves two headers that are swapped midway through the path. These headers are constructed using layers of asymmetric encryption (2048-bit RSA-OAEP) and AES in CBC mode. Instead of appending RSA ciphertexts sequentially, Mixminion compresses the headers by including parts of the next RSA ciphertext in the plaintext of the previous one. This allows each 2048-byte sub-header to encode information for more than 8 hops. Given that the OAEP overhead is approximately \(2s\) and each layer of the header contains a hash and a key (another \(2s\)), the total cost for both headers in Mixminion is \(2[p + (2s + 2s)(r - 1)] + s\) bytes. While no known attacks exist against this format, its security is based on heuristic arguments.

### Minx and SSH08

Minx [9] aimed to create a very compact mix packet format. It uses raw RSA and AES in IGE and bi-IGE modes without additional integrity checks, relying instead on the fragility and error propagation characteristics of bi-IGE to prevent tagging attacks. Like Mixminion, it encapsulates parts of RSA ciphertexts into previous plaintexts, resulting in small headers. The abstract length is \(p + (s + 1)(r - 1)\) bytes, assuming only a single byte of routing data. However, the security of Minx is heuristic, and recent work [21] has shown a polynomial-time attack exploiting the naive use of raw RSA encryption.

Shimshock et al. [21] proposed a fix for Minx, denoted as SSH08. This format encodes keys in separate RSA headers for each mix and does not use the compression technique employed by Mixminion and Minx. This results in a cost of \(pr\) bytes. Additionally, SSH08 relies on making one byte of the hash of the RSA plaintext collide with the one-byte destination of the packet. On average, this requires about 256 RSA encryptions per hop. This design choice makes the packet format compact and easily portable to elliptic curves but reduces flexibility, as the sender can only communicate a small amount of information to each mix.

### Comparison of Cryptographic Packet Formats

Table 1 summarizes the overhead lengths and other properties of various cryptographic packet formats, comparing them to Sphinx. Concrete lengths are illustrated using two sets of parameters, each for a message capable of traveling on paths up to length \(r = 5\). For cryptosystems based on the hardness of the discrete logarithm and RSA problems over number fields, achieving 128-bit security requires \(p = 256\) bytes (2048-bit) asymmetric elements and \(s = 16\) bytes symmetric elements. In this context, Sphinx outperforms all other secure proposals (noting that Minx is not considered secure [21]).

A second comparison is made between Sphinx and other schemes when implemented using elliptic curve cryptography (ECC). Here, RSA encryption is replaced with an EC-based version of Elgamal, requiring two asymmetric elements of total length \(p' = 2p\). Sphinx and SSH08, however, do not encrypt anything; their asymmetric part is only used for key derivation, using a single element of length \(p = 32\) bytes. SSH08 is more compact than Minx because it transmits very little information from the sender to intermediate mixes (about 8 bits, at the cost of 28 public key operations per mix). Sphinx can carry much more information to intermediate mixes, supporting more complex mixing strategies at a lower computational cost to the sender.

### Conclusions

Sphinx is a compact and provably secure mix packet format designed as a drop-in replacement for existing remailers. It offers two key flexibilities: the choice of cryptographic primitives and the ability to act as a general-purpose secure transport between senders and intermediate mixes. With Diffie-Hellman over prime fields, Sphinx is the most compact format, with an overhead of 448 bytes for routing through 5 mixes. Using ECC, the header length is reduced to 224 bytes. The compactness of Sphinx enables novel applications of anonymity, such as routing short messages for microblogging with low cryptographic overhead.

Sphinx also provides strong security guarantees backed by reduction proofs to well-studied cryptographic primitives. This research demonstrates that the cryptographic aspects of anonymous communications are now well understood and mature, allowing designers to focus on preventing traffic analysis and denial-of-service issues, as well as implementing robust business models around anonymous communications. Sphinx can serve as a transport layer for these applications, ensuring that the cryptography of the anonymous transport is no longer a security concern.

### Acknowledgements

The design of Sphinx benefited from discussions with Anna Lysyanskaya at the 2005 Dagstuhl school on anonymous communications. Steven Murdoch, Greg Zaverucha, and Emilia K¨asper provided valuable early feedback on the ideas and a draft of the paper. We thank the Natural Sciences and Engineering Research Council of Canada and the Mathematics of Information Technology and Complex Systems Network of Centres of Excellence for their support. We also thank the anonymous reviewers for their suggestions to improve the paper.

### References

[1] Ross J. Anderson and Eli Biham. Two Practical and Provably Secure Block Ciphers: BEARS and LION. In Dieter Gollmann, editor, FSE, volume 1039 of Lecture Notes in Computer Science, pages 113–120. Springer, 1996.
[2] Elaine Barker, William Barker, William Burr, William Polk, and Miles Smid. Recommendation for Key Management—Part 1: General (Revised). National Institute of Standards and Technology Special Publication 800-57, May 2006.
[3] Daniel J. Bernstein. Curve25519: New Diffie-Hellman Speed Records. In Public Key Cryptography 2006, pages 207–228, 2006.
[4] Oliver Berthold, Andreas Pfitzmann, and Ronny Standtke. The disadvantages of free MIX routes and how to overcome them. In H. Federrath, editor, Proceedings of Designing Privacy Enhancing Technologies: Workshop on Design Issues in Anonymity and Unobservability, pages 30–45. Springer-Verlag, LNCS 2009, July 2000.
[5] Jan Camenisch and Anna Lysyanskaya. A formal treatment of onion routing. In Victor Shoup, editor, Proceedings of CRYPTO 2005, pages 169–187. Springer-Verlag, LNCS 3621, August 2005.
[6] Ran Canetti. Universally composable security: A new paradigm for cryptographic protocols. In FOCS, pages 136–145, 2001.
[7] David Chaum. Untraceable electronic mail, return addresses, and digital pseudonyms. Communications of the ACM, 4(2), February 1981.
[8] George Danezis, Roger Dingledine, and Nick Mathewson. Mixminion: Design of a Type III Anonymous Remailer Protocol. In Proceedings of the 2003 IEEE Symposium on Security and Privacy, pages 2–15, May 2003.
[21] Eric Shimshock, Matt Staats, and Nick Hopper. Breaking and Provably Fixing Minx. In Nikita Borisov and Ian Goldberg, editors, Proceedings of the Eighth International Symposium on Privacy Enhancing Technologies (PETS 2008), pages 99–114, Leuven, Belgium, July 2008. Springer.
[9] George Danezis and Ben Laurie. Minx: A simple and efficient anonymous packet format. In Proceedings of the Workshop on Privacy in the Electronic Society (WPES 2004), Washington, DC, USA, October 2004.
[10] Whitfield Diffie and Martin E. Hellman. New directions in cryptography. IEEE Transactions on Information Theory, IT-22(6):644–654, 1976.
[11] Roger Dingledine, Andrei Serjantov, and Paul Syverson. Blending different-latency traffic with alpha-mixing. In George Danezis and Philippe Golle, editors, Proceedings of the Sixth Workshop on Privacy Enhancing Technologies (PET 2006), pages 245–257, Cambridge, UK, June 2006. Springer.
[12] Ceki Gulcu and Gene Tsudik. Mixing E-mail with Babel. In Proceedings of the Network and Distributed Security Symposium - NDSS '96, pages 2–16. IEEE, 1996.
[13] Dogan Kesdogan, Jan Egner, and Roland Buschkes. Stop-and-go MIXes: Providing probabilistic anonymity in an open system. In Proceedings of Information Hiding Workshop (IH 1998). Springer-Verlag, LNCS 1525, 1998.
[14] David Mazi`eres and M. Frans Kaashoek. The Design, Implementation and Operation of an Email Pseudonym Server. In Proceedings of the 5th ACM Conference on Computer and Communications Security (CCS 1998). ACM Press, 1998.
[15] Bodo M¨oller. Provably secure public-key encryption for length-preserving chaumian mixes. In Proceedings of CT-RSA 2003. Springer-Verlag, LNCS 2612, 2003.
[16] Ulf M¨oller, Lance Cottrell, Peter Palfrader, and Len Sassaman. Mixmaster Protocol — Version 2. IETF Internet Draft, 2003.
[17] Mridul Nandi and Douglas R. Stinson. Multicollision Attacks on Some Generalized Sequential Hash Functions. IEEE Transactions on Information Theory, 53(2):759–767, February 2007.
[18] Birgit Pfitzmann and Andreas Pfitzmann. How to break the direct RSA-implementation of MIXes. In Proceedings of EUROCRYPT 1989. Springer-Verlag, LNCS 434, 1990.
[19] Ronald L. Rivest, Adi Shamir, and Leonard M. Adleman. A method for obtaining digital signatures and public-key cryptosystems. Commun. ACM, 21(2):120–126, 1978.
[20] Andrei Serjantov, Roger Dingledine, and Paul Syverson. From a trickle to a flood: Active attacks on several mix types. In Fabien Petitcolas, editor, Proceedings of Information Hiding Workshop (IH 2002). Springer-Verlag, LNCS 2578, October 2002.