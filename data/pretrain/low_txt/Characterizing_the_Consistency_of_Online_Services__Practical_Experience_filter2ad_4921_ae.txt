### 3.3 Measurement Methodology

#### 3.3.2.1 Test 1

The sequence of events for the first test is depicted in Figure 3.2. In this test, each agent performs two consecutive writes and continuously issues reads in the background at the maximum frequency allowed by the rate limit of the online service. The writes by different agents are staggered: agents have sequential identifiers, and the first write by agent \(i\) is issued when it observes the last write of agent \(i-1\). For all operations, we log the time when they occurred (invocation and response times) and their output.

Running this test allows us to detect most of the consistency anomalies from the previous section as follows:
- **Violation of Read Your Writes**: This occurs, for example, when Agent 1 writes \(M1\) (or \(M2\)), and in a subsequent read operation, \(M1\) (or \(M2\)) is missing. This applies to each message written by each of the remaining agents.
- **Violation of Monotonic Writes**: This occurs, for example, when Agent 1 writes \(M1\) and \(M2\), and afterwards that agent either observes only the effects of \(M2\) in the output of a read operation or observes the effect of both writes in a different order. This applies to each pair of messages written by each of the remaining agents.
- **Violation of Monotonic Reads**: This occurs when any agent observes the effect of a message \(M\) and in a subsequent read by the same agent, the effects of \(M\) are no longer observed.
- **Violation of Writes Follows Reads**: This occurs when some agent either observes \(M3\) without observing \(M2\) or observes \(M5\) without observing \(M4\). We only consider these particular pairs of messages because, in the design of our test, \(M3\) and \(M5\) are the only write operations that require the observation of \(M2\) and \(M4\), respectively, as a trigger.

**Figure 3.2: Timeline for Test 1 with three agents.**

#### 3.3.2.2 Test 2

The timeline for the second test is depicted in Figure 3.3. This test aims to uncover divergence among the views that different agents have of the system. All agents issue a single write (roughly) simultaneously, and all agents continuously read the current state in the background. This simultaneity increases the chances of different writes arriving at different replicas in a different order, leading to state divergence among replicas.

Running this test helps gauge the remaining questions from the previous section. Specifically:
- **Violation of Content Divergence**: This occurs, for example, when one agent observes a sequence of writes containing only \(M1\) and another agent sees only \(M2\).
- **Violation of Order Divergence**: This occurs, for example, when one agent sees the sequence \((M2, M1)\) and another agent sees the sequence \((M1, M2)\).

The content and order divergence windows are computed using the results of this test by ordering all events according to their absolute time (factoring in the correction for clock deltas as explained previously) and determining the interval of time during which the anomaly conditions hold, as determined by the most recent read. Note that the timeline considering operations from all agents may lead to the following situation, depicted in Figure 3.4: agent 1 reads \((M1)\) at time \(t1\); agent 1 reads \((M1, M2)\) at \(t2\); agent 2 reads \((M2)\) at \(t3\); agent 2 reads \((M1, M2)\) at \(t4\), with \(t1 < t2 < t3 < t4\), where no anomalies were seen.

**Figure 3.3: Timeline for Test 2 with three agents.**

**Figure 3.4: Content divergence where the computed window is zero.**

### 3.4 Results

#### 3.4.2 Session Guarantees

We analyze the prevalence of anomalies for each session guarantee. For the Read Your Writes guarantee, Figure 3.6 shows a high value (99%) for Facebook Feed and a visible presence of this type of anomaly (22%) in Google+. Figure 3.7a presents the number of observations of the anomaly per test for Google+. This shows that, in the particular case of Google+, more than half of the tests where this anomaly was detected had several individual violations of the property. The results also show that this anomaly is more prevalent on clients in Oregon and Japan. The results for Facebook Feed, reported in Figure 3.7b, show the opposite trend: most occurrences of this anomaly are in tests where it is only detected once or twice per agent. In contrast with Google+, Facebook Feed showed a similar prevalence across client locations. To determine whether these anomalies are correlated across locations, Figure 3.7c depicts the percentage of tests where these anomalies occurred in each agent exclusively versus across different combinations of the agents. The results show that this does not tend to be a global phenomenon: in Google+, the large majority of occurrences are only perceived by a single agent. However, for Facebook Feed, all three locations perceived the anomaly in a large fraction of tests, because this anomaly arises much more frequently.

**Figure 3.7: Distribution of Read Your Writes anomalies per test.**

Next, we analyze the prevalence of violations of the Monotonic Writes session guarantee, with Figure 3.6 showing a significant prevalence of this type of anomaly both in Facebook Feed and in Facebook Group, with a 89% and 93% prevalence, respectively. Google+ shows a fairly low prevalence with only 6%. The results in Figure 3.8, for Google+, show that this anomaly, when detected in a test, is often observed several times in that test. Additionally, Oregon and Japan have an increased incidence of this anomaly occurring multiple times in a single test, whereas in Ireland, when this anomaly is detected, it often occurs a single time in each test. This phenomenon might be a consequence of the way our tests are designed, as in Test 1, Ireland is the last client to issue its sequence of two write operations, terminating the test as soon as these become visible. Thus, it has a smaller opportunity window for detecting this anomaly. This observation is supported by the fact that the same trend is observed in the results for the Facebook services and by additional experiments where we rotated the location of each agent.

**Figure 3.8: Distribution of Monotonic Writes anomalies per test.**

Figure 3.8d presents the correlation of the location of agents across the tests that observed the anomaly. The figure shows that this tends to be a local occurrence in Google+, where the anomaly is visible in only one of the locations, whereas in Facebook Feed and Group, this anomaly tends to be global with a larger prevalence in Japan.

The large occurrence of these anomalies in the Facebook services motivated us to inspect more carefully these phenomena across these services. We noticed that in Facebook Feed, messages are often reordered across different read operations executed by each agent. However, for the particular case of Facebook Group, the reordering of messages occurred mostly in messages issued by the same agent, and all agents observed this reordering of operations consistently. Upon further inspection, we noticed that each event in Facebook Group is tagged with a timestamp that has a precision of one second, and whenever two write operations were issued by an agent within that interval (causing them to be tagged with the same timestamp), the effects of those operations would always be observed in reverse order. This suggests that, in this service, this anomaly is produced by a deterministic ordering scheme for breaking ties in the creation timestamp.

The experiment for Monotonic Reads, as shown in Figure 3.6, indicates that...