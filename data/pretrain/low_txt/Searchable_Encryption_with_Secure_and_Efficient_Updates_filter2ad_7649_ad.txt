# Unique Search Tokens Queried and Search Performance

## Figures and Descriptions

### Figure 3: Unique Search Tokens Queried
- **Description**: This figure shows the number of unique search tokens queried over time. The grey bars represent new search tokens that were not previously queried.
- **Data Points**:
  - Number of all unique indexed words
  - New added words in 5000 runs
  - Size of search history before each run

### Figure 4: Mean Query Time for One Randomly Generated Search Token
- **Description**: This figure illustrates the mean search time in milliseconds (ms) for blocks of 5000 searches over the course of the experiment.
- **Data Points**:
  - Amount of all performed searches
  - Mean query time for one randomly generated search token

## Analysis and Discussion

### Search Token Indexing and Performance
- **Effect on Randomized Tokens**: Due to the indexing effect, the majority of our randomized add tokens remain randomized. By the end of the experiment, less than 16% of the unique keywords are in the inverted index \(\gamma_w\) and thus encrypted deterministically.
- **Search Time Reduction**: This results in a decrease in search time because already searched tokens can be quickly looked up in the inverted index.

### Detailed Presentation in Figures
- **Figure 4**: Shows the mean search time in ms for blocks of 5000 searches over the experiment's duration. Each bar at position \(i\) in Figure 3 corresponds to the point at position \(i\) on the x-axis in Figure 4.
- **Initial State**: At the beginning, the service provider did not know any search tokens, so the search history \(\sigma\) was empty. In this situation, the service provider had to check the index of every file, i.e., every list representing one file in \(\gamma_f\), value by value.
- **Indexing Impact**: As the size of the search history increased, more search tokens were indexed in the reverse index \(\gamma_w\), allowing the service provider to answer these queries much faster.
- **Optimal Search Time**: Our results show that the optimal search time is reached much faster than in \(n^2\) searches, as we only performed 70,000 searches for more than 95,000 unique keywords.

## Related Work

### Searchable Encryption
- **Introduction by Song et al. [29]**: Provides a more secure alternative for searching compared to deterministic encryption.
- **Deterministic Encryption**: Useful for searching in outsourced databases, as it does not require modifying the database engine for queries or updates [16, 17].
- **Performance Overhead**: Recent results, such as CryptDB [25], show that the performance overhead is negligible, and only a minority of database columns need to be encrypted in deterministic encryption.
- **Public Key Setting**: Bellare et al. [5] investigated deterministic encryption in a public key setting but concluded that searchable encryption, as proposed in this paper, could help secure the searched data.

### Efficiency Improvements
- **Indexes**: Goh first proposed the use of indexes [13]. Deterministic encryption allows the construction of most indexes on the ciphertext without modifying the algorithm, but searchable encryption requires an adjustment of the indexing method.
- **Inverted Indexes**: Curtmola et al. [11] were the first to use inverted indexes. While constructing the index can be performed on the plaintext, modifying it without leakage is difficult.
- **Drawbacks**: We discussed the different drawbacks of dynamic searchable encryption schemes [8, 19, 20, 24] in Section 2. The scheme in [32] was not considered due to the lack of a formal security proof.
- **Asymptotic Optimality**: The scheme proposed in this paper is the first with asymptotically optimal search time, asymptotically optimal storage cost, and no leakage on updates.

### Extensions and Applications
- **Public Key Searchable Encryption**: Boneh et al. [6] introduced public key searchable encryption based on identity-based encryption.
- **Complex Queries**: Research has extended searchable encryption to support complex queries for conjunctive [15] and disjunctive [7] keyword combinations. Recent results have achieved significant efficiency gains for these complex queries [9, 21].
- **Proxy Re-Encryption**: Searchable encryption has been combined with proxy re-encryption [12, 26]. Popa et al. [26] demonstrated an interesting application of re-encryptable, searchable encryption for securing web applications.
- **Commercial Offerings**: Currently focus on deterministic encryption [3, 4] because they do not require rewriting the web application.
- **Range Queries**: Shi et al. [27] first demonstrated range queries. Lu [23] showed that one can also construct an index for range queries.

### Security Considerations
- **Advantages and Challenges**: Although searchable encryption is a clear security advantage, Islam et al. [18] demonstrated an attack based on leaked access patterns. Their attack relies on the knowledge of the distribution of keywords and works for many ciphertexts with a corresponding search token. Therefore, it is crucial not to leak additional information during updates.

## Conclusions

- **Efficient Dynamic Searchable Encryption**: We have demonstrated a new technique for efficient, dynamic searchable encryption. Our idea is to learn the index from the search token.
- **Theoretical and Experimental Results**: We have theoretically shown that this must lead to the optimal search time over a sufficiently long period. Experimentally, we have shown that this search time is low in absolute numbers and highly practical.
- **Implementation and Security**: Our scheme can be implemented without client storage and only requires storing 2 cryptographic hash values per index entry. Additions and deletions can be performed securely, maintaining semantic security even during updates.
- **Real-World Application**: In our experiments using real-world search terms, 84% of all keywords were never searched for. These keywords remain semantically secure and benefit from the additional security under updates provided by our scheme.
- **Future Directions**: Our construction provides a novel design alternative for constructing dynamic searchable encryption schemes and may be applied to other research directions, such as complex queries. It offers a favorable trade-off compared to deterministic encryption, being almost as efficient but significantly more secure.

## Acknowledgements
- **Reviewers and Shepherd**: We thank our reviewers for their insightful comments and our shepherd Frederik Armknecht for his helpful hints.
- **Funding**: This work was supported by the European Union Seventh Framework Program (FP7/2007–2013) under grant agreement no. 609611 (PRACTICE).

## References
- [1] http://www.gutenberg.org/
- [2] http://invokeit.wordpress.com/frequency-word-lists/
- [3] http://www.ciphercloud.com/
- [4] http://www.vaultive.com/
- [5] M. Bellare, A. Boldyreva, and A. O’Neill. Deterministic and efficiently searchable encryption. In Advances in Cryptology, CRYPTO, 2007.
- [6] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and G. Persiano. Public key encryption with keyword search. In Advances in Cryptology, EUROCRYPT, 2004.
- [7] D. Boneh and B. Waters. Conjunctive, subset, and range queries on encrypted data. In Proceedings of the 4th Theory of Cryptography Conference, TCC, 2007.
- [8] D. Cash, J. Jaeger, S. Jarecki, C. Jutla, H. Krawczyk, M. Rosu, and M. Steiner. Dynamic searchable encryption in very-large databases: Data structures and implementation. In Proceedings of the 21st Network and Distributed System Security Symposium, NDSS, 2014.
- [9] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M.-C. Rosu, and M. Steiner. Highly-scalable searchable symmetric encryption with support for boolean queries. In Proceedings of the 33rd Cryptology Conference, CRYPTO, 2013.
- [10] B. Chor, E. Kushilevitz, O. Goldreich, and M. Sudan. Private information retrieval. Journal of the ACM, 45(6), 1998.
- [11] R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky. Searchable symmetric encryption: improved definitions and efficient constructions. Journal of Computer Security, 19(5), 2011.
- [12] C. Dong, G. Russello, and N. Dulay. Shared and searchable encrypted data for untrusted servers. Journal of Computer Security, 19(3), 2011.
- [13] E.-J. Goh. Secure indexes. Technical Report 216, IACR Cryptology ePrint Archive, 2003.
- [14] O. Goldreich and R. Ostrovsky. Software protection and simulation on oblivious RAMs. Journal of the ACM, 43(3), 1996.
- [15] P. Golle, J. Staddon, and B. Waters. Secure conjunctive keyword search over encrypted data. In Proccedings of the International Conference on Applied Cryptography and Network Security, ACNS, 2004.
- [16] H. Hacigümüş, B. R. Iyer, C. Li, and S. Mehrotra. Executing SQL over encrypted data in the database-service-provider model. In Proceedings of the 2002 ACM International Conference on Management of Data, SIGMOD, 2002.
- [17] H. Hacigümüş, S. Mehrotra, and B. R. Iyer. Providing database as a service. In Proceedings of the 18th International Conference on Data Engineering, ICDE, 2002.
- [18] M. Islam, M. Kuzu, and M. Kantarcioglu. Access pattern disclosure on searchable encryption: ramifications, attack and mitigation. In Proceedings of the 19th Network and Distributed System Security Symposium, NDSS, 2012.
- [19] S. Kamara and C. Papamanthou. Parallel and dynamic searchable symmetric encryption. In Proceedings of the 17th International Conference on Financial Cryptography and Data Security, FC, 2013.
- [20] S. Kamara, C. Papamanthou, and T. Roeder. Dynamic searchable symmetric encryption. In Proceedings of the 19th ACM Conference on Computer and Communications Security, CCS, 2012.
- [21] J. Katz, A. Sahai, and B. Waters. Predicate encryption supporting disjunctions, polynomial equations, and inner products. In Advances in Cryptology, EUROCRYPT, 2008.
- [22] E. Kushilevitz and R. Ostrovsky. Replication is not needed: Single database, computationally-private information retrieval. In Proceedings of the 38th IEEE Symposium on Foundations of Computer Science, FOCS, 1997.
- [23] Y. Lu. Privacy-preserving logarithmic-time search on encrypted data in cloud. In Proceedings of the 19th Network and Distributed System Security Symposium, NDSS, 2012.
- [24] M. Naveed, M. Prabhakaran, and C. Gunter. Dynamic searchable encryption via blind storage. In Proceedings of the 35th IEEE Symposium on Security and Privacy, S&P, 2014.
- [25] R. A. Popa, C. M. S. Redfield, N. Zeldovich, and H. Balakrishnan. CryptDB: protecting confidentiality with encrypted query processing. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles, SOSP, 2011.
- [26] R. A. Popa, E. Stark, J. Helfer, S. Valdez, N. Zeldovich, F. Kaashoek, and H. Balakrishnan. Building web applications on top of encrypted data using Mylar. In Proceedings of the 11th USENIX Symposium of Networked Systems Design and Implementation, NSDI, 2014.
- [27] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song, and A. Perrig. Multi-dimensional range query over encrypted data. In Proceedings of the 2007 Symposium on Security and Privacy, S&P, 2007.
- [28] R. Sion and B. Carbunar. On the practicality of private information retrieval. In Proceedings of the Network and Distributed System Security Symposium, NDSS, 2007.
- [29] D. X. Song, D. Wagner, and A. Perrig. Practical techniques for searches on encrypted data. In Proceedings of the 21st IEEE Symposium on Security and Privacy, S&P, 2000.
- [30] E. Stefanov, C. Papamanthou, and E. Shi. Practical dynamic searchable symmetric encryption with small leakage. In Proceedings of the 21st Network and Distributed System Security Symposium, NDSS, 2014.
- [31] E. Stefanov, M. van Dijk, E. Shi, C. Fletcher, L. Ren, X. Yu, and S. Devadas. Path ORAM: an extremely simple oblivious RAM protocol. In Proceedings of the 20th ACM Conference on Computer and Communications Security, CCS, 2013.
- [32] P. van Liesdonk, S. Sedghi, J. Doumen, P. H. Hartel, and W. Jonker. Computationally efficient searchable symmetric encryption. In Proceedings of the 7th VLDB Workshop on Secure Data Management, SDM, 2010.
- [33] P. Williams and R. Sion. Single round access privacy on outsourced storage. In Proceedigs of the 19th ACM Conference on Computer and Communications Security, CCS, 2012.