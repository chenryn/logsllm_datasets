### System Performance Observations

It was anticipated that the system would function as expected. The most intriguing observation, however, is that despite using relatively outdated hardware (which, in this case, is beneficial as it is more susceptible to overload), there was no discernible degradation in system performance. This outcome is not surprising, given that all kernel-level switching is performed in software and within the same address space. In a real router with hardware-assisted fast switching paths for common scenarios, the overhead of imposing multiple rate-limiting sessions might be significantly higher.

### Related Work

Distributed Denial of Service (DDoS) attacks have been a significant concern for less than three years, and the body of published work on the subject is still limited. The existing literature can be categorized into two groups: older research that can be repurposed to counter DDoS attacks and recent studies specifically targeting DDoS mitigation.

#### Resource Allocation Techniques

Initially, it was proposed that DDoS attacks could be mitigated by applying resource allocation techniques to network bandwidth. Integrated Services [5] and Differentiated Services [2] are two such approaches aimed at isolating flows with specific Quality of Service (QoS) requirements from lower-priority traffic. However, the effectiveness of these methods remains uncertain, as a substantial portion of web traffic, which is often best-effort, may not benefit from QoS protections. Additionally, it is unclear to what extent compromised sources could mimic QoS-protected flows.

#### Congestion Control Mechanisms

Various congestion control mechanisms, if widely deployed, could potentially alleviate some of the effects of DDoS-induced congestion. Random Early Detection (RED) [11] and its variants aim to identify and preferentially drop flows that do not adhere to TCP-friendly end-to-end congestion control. Other approaches, such as Fair Queuing [7] and Class-Based Queuing [12], allocate specific fractions of available bandwidth to each flow to ensure fair service. The main challenge with these methods is that DDoS attack packets lack readily identifiable flow signatures, making them difficult to detect and manage. This limitation led to the development of Aggregate-based Congestion Control [14], which forms the basis of the current work.

#### Attack Detection and Response

A different approach to combating DDoS attacks focuses on detecting ongoing attacks and responding accordingly. Various packet tracking methods have been suggested, including traceback [1] and packet marking [16, 6]. These techniques aim to map the paths taken by attack traffic. For instance, in traceback, routers randomly select outgoing packets (e.g., with a probability of 1/20000) and send a new type of ICMP packet (traceback packet) to the destination. This packet contains the IP address of the sending router and is sent with a TTL of 255 for authentication. During an attack, a sufficient number of these packets reach the target, allowing it to approximate the attack path. Packet marking, on the other hand, modifies the IP ID field to carry partial information about the marking router, which can be reconstructed using sophisticated techniques.

#### Source Address Filtering

The fundamental issue with all tracking techniques is the unreliability of source addresses in attack packets, as they are easily forged. If all edge routers in the Internet implemented source address filtering [9], the task of identifying and mitigating DDoS attacks would be greatly simplified. However, many compromised machines are unaware that they are being used for attacks, and even if the origins of the attack were known, it is unclear what actions could be taken. Intrusion detection systems and firewalls have also been proposed to detect and notify upstream elements of ongoing attacks [17].

### Discussion

Let us now discuss some issues that may influence the deployment of Pushback. Firstly, the Pushback approach is most effective when an attack is non-isotropic, meaning that a significant portion of the attack traffic originates from a subset of input links near the target. This is a reasonable assumption, as even the largest attacks involve only a few thousand compromised machines out of the millions on the Internet. It would be challenging for an attacker to distribute attack slaves evenly relative to the target.

Another consideration is the fraction of attack traffic originating from hosts served by the same ISP as the target. Smaller ISPs will see a smaller fraction of internal attack traffic, while larger ISPs will still face a significant amount of external attacks. While an ISP can unilaterally deploy Pushback, agreements with peering ISPs are necessary to honor pushback requests, which involve security and policy considerations. One practical step is to perform input rate-limiting on border routers, which can extend Pushback by one hop without requiring cooperation from upstream routers. This method penalizes bad traffic on the rate-limited link without affecting other incoming traffic.

In general, an ISP's network can be viewed as a single virtual router with multiple inputs and outputs. By implementing input rate limiting in addition to output rate limiting, a variation of Pushback can be considered: when an edge router detects an attack, it determines the fractions of attack traffic coming through the ISP's border routers. This can be achieved using ITRACE or packet marking, and the edge routers can then request the border routers to apply input rate limiting to the identified aggregates.

The detection algorithms in the Pushback architecture are not limited to information from the drop set. Instead, Pushback should complement other DDoS detection approaches. For example, the drop set can be compared with ITRACE data to refine the congestion signature and reduce the penalty on legitimate traffic. A reliable network map with historical traffic profiles can also help detect sudden changes that signal an attack and inform the allocation of rate limits in pushback messages.

### Summary and Future Work

We have presented the implementation of a mechanism that treats DDoS attacks as a congestion control problem, identifying and preferentially dropping traffic aggregates responsible for congestion. This work aims to demonstrate the practicality of this approach and explore ways to incrementally deploy it in operational environments. Simulations [14] have shown that Pushback is a promising method for combating DDoS attacks and flash crowds. Real-world testing allows us to examine the memory and computing power requirements, potentially influencing commercial router designs.

A promising hybrid solution involves using features like Committed Access Rate (CAR) in Cisco routers to implement rate limiting, while monitoring traffic on both incoming and outgoing links to detect congestion and dropped packets. Such experiments may enable rapid deployment of Pushback even without explicit support from router vendors.

### Acknowledgments

The original idea for Pushback came from an informal DDoS research group, including Steven M. Bellovin, Matt Blaze, Bill Cheswick, Cory Cohen, Jon David, Jim Duncan, Jim Ellis, Paul Ferguson, John Ioannidis, Marcus Leech, Perry Metzger, Robert Stone, Vern Paxson, Ed Vielmetti, and Wietse Venema. A recent paper [14] provides the theoretical basis and detailed simulation results upon which this work is based. We also thank the anonymous reviewers for their valuable and insightful comments.

### References

[1] S. M. Bellovin. ICMP Traceback Messages. Work in Progress, Internet Draft draft-bellovin-itrace-00.txt, March 2000.
[2] S. Blake, D. L. Black, M. A. Carlson, E. Davies, Z. Wang, and W. Weiss. An Architecture for Differentiated Services. RFC 2475, December 1998.
[3] H. Burch and B. Cheswick. Tracing Anonymous Packets to Their Approximate Source. In Usenix LISA, December 2000.
[4] Cisco Web Pages: Committed Access Rate. http://www.cisco.com/univercd/cc/td/doc/product/software/ios111/cc111/car.htm, February 1998.
[5] D. D. Clark, S. Shenker, and L. Zhang. Supporting Real-Time Applications in an Integrated Services Packet Network Architecture and Mechanism. In ACM SIGCOMM, 1992.
[6] D. Dean, M. Franklin, and A. Stubblefield. An Algebraic Approach to IP Traceback. In Proceedings of NDSS '01, February 2001.
[7] A. Demers, S. Keshav, and S. Shenker. Analysis and Simulation of a Fair Queueing Algorithm. In ACM SIGCOMM, 1989.
[8] The FreeBSD Project. http://www.freebsd.org.
[9] P. Ferguson and D. Senie. Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing. RFC 2267, January 1998.
[10] S. Floyd, S. Bellovin, J. Ioannidis, K. Kompella, R. Mahajan, and V. Paxson. Pushback Messages for Controlling Aggregates in the Network. Internet Draft, work in progress.
[11] S. Floyd and V. Jacobson. Random Early Detection gateways for Congestion Avoidance. IEEE/ACM Transactions on Networking, Vol. 1(4):pp. 397–413, August 1993.
[12] S. Floyd and V. Jacobson. Link-sharing and Resource Management Models for Packet Networks. IEEE/ACM Transactions on Networking, Vol. 3(4):pp. 365–386, August 1995.
[13] R. Mahajan, S. M. Bellovin, S. Floyd, J. Ioannidis, V. Paxson, and S. Shenker. Controlling High Bandwidth Aggregates in the Network. Submitted to Computer Communications Review.
[14] R. Mahajan, S. M. Bellovin, S. Floyd, J. Ioannidis, V. Paxson, and S. Shenker. Controlling High Bandwidth Aggregates in the Network – Extended Version. http://www.aciri.org/pushback/.
[15] D. Moore, G. M. Voelker, and S. Savage. Inferring Internet Denial-of-Service Activity. In 10th Usenix Security Symposium, August 2001.
[16] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Practical Network Support for IP Traceback. In ACM SIGCOMM, August 2000.
[17] D. Schnackenberg, K. Djahandari, and D. Sterne. Infrastructure for intrusion detection and response. In Proceedings of the DARPA Information Survivability Conference and Exposition 2000, March 2000. ftp://ftp.tislabs.com/pub/IDIP/DISCEX IDR-Infrastructure.pdf.
[18] R. Stone. CenterTrack: An IP Overlay Network for Tracking DoS Floods. In 9th Usenix Security Symposium, August 2000.
[19] V. C. Van. A Defense Against Address Spoofing Using Active Networks. Bachelor’s Thesis, MIT, 1997.