### SQL Slammer Simulation and Analysis

**Simulation Results:**
Figure 10 presents the results from a single simulation run of the SQL Slammer worm. Figure 10(a) illustrates that, in the absence of network congestion and human countermeasures, the SQL Slammer can infect most vulnerable hosts within 3 minutes. In reality, the propagation speed of the Slammer was significantly reduced due to the massive scan traffic it generated, which caused network congestion and, in some cases, network breakdowns. As a result, it took approximately 10 minutes for the worm to infect 90% of the vulnerable computers [19], rather than the 3 minutes shown in the simulation. However, during the initial stages, when congestion and human counteractions were minimal, the Slammer's spread still followed the epidemic model used (refer to Figure 3 in [19]).

From Figure 10(a), we observe that the worm infects 1% of the vulnerable population at 45 seconds. Figure 10(b) displays the estimated value of the infection rate \(\alpha\) over time. It shows that when the worm infects 1% of the population, the estimated value of \(\alpha\) stabilizes with small oscillations (although the central point of these oscillations is higher than the true value at this moment). This indicates that the Monitoring and Warning Center (MWC) can detect the worm when it has infected about 1% of the vulnerable population.

**Kalman Filter Estimation:**
At the beginning of the estimation process, the Kalman filter overestimates the value of \(\alpha\). This overestimation is due to the discrete-time model (2), which is a first-order discretization of the continuous model (1). The discretization introduces errors in the infection rate \(\alpha\) when the worm is exponentially increasing at the start.

Figure 10(c) presents the simulation results when using a 5-second monitoring interval \(\Delta\). With a larger discrete time unit, the discretization error becomes more apparent, as the estimated value \(\hat{\alpha}\) is higher than the true value.

### Discussions and Future Work

**Modeling and Prediction:**
We have utilized an epidemic model for estimation and prediction, which has provided good results so far. However, to better reflect the dynamics of future worms, more detailed models are necessary. For example, if a worm spreads through a specific topology, exploits multiple vulnerabilities, or is a meta-server worm, its dynamics may not follow the standard epidemic model.

**Non-Uniform Scanning Worms:**
For non-uniformly scanning worms like Code Red II, the placement of monitors can affect observations. The non-uniform scanning behavior may also impact bias correction (7). For an unknown future worm, by analyzing the worm scan distribution using data from egress scan monitors, the MWC can determine if the worm is uniformly scanning the Internet. If it is not, the MWC can use data \(Z_t\) or directly use data \(C_t\) without bias correction to detect and predict the worm.

**Monitoring Interval:**
The monitoring interval \(\Delta\) is a critical parameter in system design. For slow-spreading worms, a longer interval can be used, but for fast-spreading worms like the Slammer, a very short interval is necessary to keep up with the worm's speed. Selecting an appropriate \(\Delta\) before knowing the worm's presence and speed requires further research. One potential approach is to tag each observed scan with a timestamp, allowing multiple estimators to run in parallel with different monitoring intervals, and restoring the correct \(C_t\) or \(Z_t\) values based on the timestamps.

**Distributed Estimation:**
Developing distributed estimation algorithms could reduce latency and traffic for reporting to a central server. A continuous version of the Kalman filter might also be beneficial, as it would reduce the significance of the monitoring interval selection and work well in a distributed setting.

**Detection Assumptions:**
The worm detection method assumes that only worm scans can cause exponentially increasing scan traffic to monitors, while other background scan noise cannot. This is a reasonable assumption, but additional rule sets can be added to improve detection accuracy. For example, distinguishing a worm attack from a DDoS attack can be done by noting that DDoS attacks target specific systems, whereas worm propagation does not.

**Practical Considerations:**
The infrastructure for the monitoring system, such as the SANS "Internet Storm Center" [16] or Symantec's enterprise early warning network [25], is already in place. However, significant practical issues, particularly related to security and privacy in data sharing, need to be addressed.

**Automatic Mitigation:**
For fast-spreading worms like the SQL Slammer, manual human actions are insufficient even with early warnings. Automatic mitigation is essential. Key factors include reducing false alarm rates, detecting the worm earlier, and collecting observation data in a timely manner to integrate the early warning system with automatic mitigation.

### Conclusions

We propose a monitoring and early warning system for Internet worms to provide accurate triggering signals for mitigation mechanisms in the early stages of a future worm. Such a system is necessary given the scale and speed of past worms. While previous worms have not been highly malicious, future worms may pose greater threats. Based on the principle of "detecting the trend, not the rate" of monitored illegitimate scan traffic, we present a Kalman filter for early detection. Analysis and simulations indicate that such a system is feasible, and the "trend detection" methodology raises many interesting research questions. We hope this paper will stimulate discussion and participation in this topic, leading to an effective monitoring and early warning system.

### Acknowledgements

This work is supported in part by ARO contract DAAD19-01-1-0610; by DARPA under Contract DOD F30602-00-0554; by NSF under grant EIA-0080119, ANI9980552, ANI-0208116, and by Air Force Research Lab.

### References

[1] B.D.O. Anderson and J. Moore. Optimal Filtering. Prentice Hall, 1979.
[2] V.H. Berk, R.S. Gray, and G. Bakos. Using sensor networks and data fusion for early detection of active worms. In Proc. of the SPIE AeroSense, 2003.
[3] Cooperative Association for Internet Data Analysis. http://www.caida.org
[4] CERT Coordination Center. http://www.cert.org
[5] Z. Chen, L. Gao, and K. Kwiat. Modeling the Spread of Active Worms, In IEEE INFOCOM, 2003.
[6] CNN News. Computer worm grounds flights, blocks ATMs. http://europe.cnn.com/2003/TECH/internet/01/25/internet.attack/
[7] eEye Digital Security. .ida ”Code Red” Worm. 2001. http://www.eeye.com/html/Research/Advisories/AL20010717.html
[8] USA Today News. The cost of Code Red: $1.2 billion. http://www.usatoday.com/tech/news/2001-08-01-code-red-costs.htm
[9] CounterMalice: military-grade worm containment. http://www.silicondefense.com/products/countermalice/
[10] D.J. Daley and J. Gani. Epidemic Modelling: An Introduction. Cambridge University Press, 1999.
[11] Dave Goldsmith. Possible CodeRed Connection Attempts. Incidients maillist. http://lists.jammed.com/incidents/2001/07/0149.html
[12] Honeynet Project. Know Your Enemy: Honeynets. http://project.honeynet.org/papers/honeynet/
[13] J. O. Kephart and S. R. White. Directed-graph Epidemiological Models of Computer Viruses. In Proc. of IEEE Symposimum on Security and Privacy, pages 343-359, 1991.
[14] J. O. Kephart, D. M. Chess, and S. R. White. Computers and Epidemiology. In IEEE Spectrum, 1993.
[15] J. O. Kephart and S. R. White. Measuring and Modeling Computer Virus Prevalence. In Proc. of IEEE Symposimum on Security and Privacy, 1993.
[16] Internet Storm Center. http://isc.incidents.org/
[17] D. Moore, C. Shannon, and J. Brown. Code-Red: a case study on the spread and victims of an Internet Worm. In Proc. ACM/USENIX Internet Measurement Workshop, France, November, 2002.
[18] D. Moore, C. Shannon, G. M. Voelker, and S. Savage. Internet Quarantine: Requirements for Containing Self-Propagating Code. In IEEE INFOCOM, 2003.
[19] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and N. Weaver. Inside the Slammer Worm. IEEE Security and Privacy, 1(4):33-39, July 2003.
[20] D. Moore. Network Telescopes: Observing Small or Distant Security Events. In USENIX Security, 2002.
[21] D. Seeley. A tour of the worm. In Proc. of the Winter Usenix Conference, San Diego, CA, 1989.
[22] CAIDA. Dynamic Graphs of the Nimda worm. http://www.caida.org/dynamic/analysis/security/nimda/
[23] SANS Institute. http://www.sans.org
[24] S. Staniford, V. Paxson, and N. Weaver. How to Own the Internet in Your Spare Time. In 11th Usenix Security Symposium, San Francisco, August, 2002.
[25] Symantec Early Warning Solutions. Symantec Corp. http://enterprisesecurity.symantec.com/SecurityServices/content.cfm?ArticleID=1522
[26] V. Yegneswaran, P. Barford, and J. Ullrich. Internet Intrusions: Global Characteristics and Prevalence. In ACM SIGMETRICS, June, 2003.
[27] C.C. Zou, W. Gong, and D. Towsley. Code Red Worm Propagation Modeling and Analysis. In 9th ACM Symposium on Computer and Communication Security, pages 138-147, Washington DC, 2002.