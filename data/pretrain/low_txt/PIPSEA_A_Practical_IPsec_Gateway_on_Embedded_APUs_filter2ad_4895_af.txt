# In-Memory and Performance Metrics

- **In-Memory**
- **CBC+SHA1**: 8.1 Gbps
- **IPsec (CTR+SHA1)**: 32 Gbps
- **IPsec (CBC+SHA1)**: 1.16 Gbps

- **Power Consumption (W)**
  - **140W**
  - **620W**

- **Cost (USD)**
  - **Standalone System**: $4,404.00
  - **Accelerator System**: $34.37

- **Performance Metrics**
  - **Throughput (Gbps)**: 8.1, 32, 1.16
  - **Latency (ms)**: 18.45, 7.27, 33.75

- **Hardware Specifications**
  - **Intel Xeon E5-2670 + NVIDIA GeForce GTX 680**
  - **Xilinx Artix-7 FPGA**
  - **Helion ESP w/ FPGA**
  - **NBA [22] w/ dGPU**

## Cost and Power Estimation

1. **Standalone System Cost**: The cost is estimated by summing the prices of CPUs, main memory, and additional devices like dGPUs. The main memory price is assumed to be $50 (two 4GB DIMMs, $25 each).

2. **Accelerator System Cost and Power**: The cost and power consumption are estimated based on the chip itself, which may lead to underestimation.

3. **PIPSA w/ dGPU**: Assumes the use of low-end Intel Xeon CPUs, as dGPUs handle IPsec processing.

## Programmability and Performance

- **Programmable Solutions**: PIPSEA, Multicore CPU, NBA [22] w/ dGPU, and Helion ESP Engine.
- **Dedicated Hardware Solutions**: Intel Atom w/ QAT, Multicore CPU w/ AES-NI, and others.

- **Performance Data Sources**:
  - **Intel QAT Chipset and Helion ESP Engine**: Documented in [16, 13].
  - **NBA w/ dGPU**: Obtained from [22].
  - **Helion ESP Engine**: No available data on power consumption.

## Table 2: Cost-Effectiveness Comparison

| Solution | Throughput (Gbps) | Latency (ms) | Power (W) | Cost (USD) | Cost-Effectiveness (Mbps/$) |
|----------|-------------------|--------------|-----------|------------|-----------------------------|
| PIPSEA   | 8.1               | 18.45        | 140       | $4,404.00  | 110.90                      |
| Intel QAT| 32                | 7.27         | 620       | $34.37     | 160.45                      |
| NBA [22] | 1.16              | 33.75        | -         | -          | 7.6                         |

### Cost-Effectiveness Analysis

- **PIPSA**: 110.90 Mbps/$, significantly higher than most solutions except Intel QAT (160.45 Mbps/$).
- **NBA [22]**: 7.6 Mbps/$, much lower than PIPSEA.
- **Energy Efficiency**: PIPSEA's APU consumes only 35W, making it more energy-efficient compared to other solutions.

## Related Work

### 5.1 Hardware-Accelerated IPsec

- **ASIC Design**: Ha et al. [11] propose an IPsec hardware accelerator with a throughput of 200 Mbps.
- **Cryptographic Coprocessor**: Hodjat et al. [15] achieve 3.43 Gbps with an AES coprocessor.
- **FPGA Implementations**: Dandalis et al. [7], Chodowiec et al. [6], and Kakarountas et al. [19] implement IPsec on FPGAs, achieving up to 4.2 Gbps.
- **Mobile SoC**: Thoguluva et al. [28] implement IPsec on a mobile SoC, achieving up to 8 Mbps.
- **Network Processor**: Meng et al. [25] achieve 20 Gbps using Cavium OCTEON CN58XX.

### 5.2 Discrete GPU-Based Network Security

- **dGPU Frameworks**: GASPP [30], PacketShader [12], NBA [22], and SSLShader [18] accelerate cryptographic network applications.
- **Packet Scheduling Optimization**: GASPP [30] reduces control-flow divergence and load imbalance but has overhead.
- **PIPSA Advantages**: Completely removes control-flow divergence and provides optimal load balancing between GPU cores and threads.

### Overall Differences

- **Embedded APU**: PIPSEA is the first IPsec solution using an embedded APU, making it cost-effective and flexible.
- **CUDA Limitation**: Previous GPU-based approaches are implemented in CUDA, limiting them to NVIDIA GPUs.
- **Real-World Traffic Handling**: PIPSEA handles real-world traffic with varying packet lengths and crypto algorithms, avoiding control-flow divergence and load imbalance.

## Conclusions

- **Design and Implementation**: PIPSEA is a high-performance, cost-effective IPsec gateway using an embedded APU.
- **Performance**: Achieves 10.36 Gbps with 2.79 ms latency for 1024-byte packets and 17.42 Gbps with 3.92 ms latency for random-length packets.
- **Cost-Effectiveness**: Higher than any fully programmable IPsec solution.
- **Scalability**: Adding more CPU cores can enhance PIPSEA's capabilities for packet routing and intrusion detection.

## Acknowledgments

- **Funding**: Supported by the National Research Foundation of Korea (NRF) grant funded by the Korean government (MSIP) (No. 2013R1A3A2003664).
- **Facilities**: ICT at Seoul National University provided research facilities.

## References

[1] APUs-Accerlated Processing Units. Website. http://www.amd.com/en-us/innovations/software-technologies/apu/.

[2] DPDK: Data Plane Development Kit. Website. http://www.dpdk.org.

[3] Heterogeneous System Architecture. Website. http://www.hsafoundation.com.

[4] AMD. OpenCL Optimization Guide. Website. http://developer.amd.com/tools-and-sdks/opencl-zone/amd-accelerated-parallel-processing-app-sdk/opencl-optimization-guide/.

[5] S. Bradner and J. McQuaid. Benchmarking Methodology for Network Interconnect Devices. RFC 2544 (Informational), Mar. 1999. Updated by RFCs 6201, 6815.

[6] P. Chodowiec, K. Gaj, P. Bellows, and B. Schott. Experimental Testing of the Gigabit IPSec-Compliant Implementations of Rijndael and Triple DES Using SLAAC-1V FPGA Accelerator Board. In Proceedings of the 4th International Conference on Information Security, ISC ’01, pages 220–234, 2001.

[7] A. Dandalis and V. K. Prasanna. An Adaptive Cryptographic Engine for Internet Protocol Security Architectures. volume 9, pages 333–353, July 2004.

[8] T. T. Dao, J. Kim, S. Seo, B. Egger, and J. Lee. A Performance Model for GPUs with Caches. Parallel and Distributed Systems, IEEE Transactions on, 26(7):1800–1813, July 2015.

[9] M. R. Garey and D. S. Johnson. Computers and Intractability; A Guide to the Theory of NP-Completeness. W. H. Freeman & Co., New York, NY, USA, 1990.

[10] R. L. Graham. Bounds on Multiprocessing Timing Anomalies. SIAM journal on Applied Mathematics, 17(2):416–429, 1969.

[11] C.-S. Ha, J. H. Lee, D. S. Leem, M.-S. Park, and B.-Y. Choi. ASIC design of IPSec hardware accelerator for network security. In Proceedings of the 2004 IEEE Asia-Pacific Conference on Advanced System Integrated Circuits, pages 168–171, Aug 2004.

[12] S. Han, K. Jang, K. Park, and S. Moon. PacketShader: A GPU-accelerated Software Router. In Proceedings of the ACM SIGCOMM 2010 Conference, SIGCOMM ’10, pages 195–206, 2010.

[13] Helion Technology Limited. IPsec solutions. Website. http://www.heliontech.com/ipsec.htm.

[14] A. Hoban. Using Intel AES New Instructions and PCLMULQDQ to Significantly Improve IPSec Performance on Linux. White paper, 2010.

[15] A. Hodjat, P. Schaumont, and I. Verbauwhede. Architectural Design Features of a Programmable High Throughput AES Coprocessor. In Proceedings of the International Conference on Information Technology: Coding and Computing (ITCC’04) Volume 2 - Volume 2, ITCC ’04, pages 498–, 2004.

[16] Intel Corporation. Integrated Cryptographic and Compression Accelerators on Intel Architecture Platforms. 2013. http://intel.ly/1NF6xFq.

[17] M. A. Jamshed, J. Lee, S. Moon, I. Yun, D. Kim, S. Lee, Y. Yi, and K. Park. Kargus: A Highly-scalable Software-based Intrusion Detection System. In Proceedings of the 2012 ACM Conference on Computer and Communications Security, CCS ’12, pages 317–328, 2012.

[18] K. Jang, S. Han, S. Han, S. Moon, and K. Park. SSLShader: Cheap SSL Acceleration with Commodity Processors. In Proceedings of the 8th USENIX Conference on Networked Systems Design and Implementation, NSDI’11, pages 1–14, 2011.

[19] A. P. Kakarountas, H. Michail, A. Milidonis, C. E. Goutis, and G. Theodoridis. High-Speed FPGA Implementation of Secure Hash Algorithm for IPSec and VPN Applications. The Journal of Supercomputing, 37(2):179–195, 2006.

[20] S. Kent and R. Atkinson. Security Architecture for the Internet Protocol. RFC 2401 (Proposed Standard), November 1998. Obsoleted by RFC 4301, updated by RFC 3168.

[21] Khronos Group. OpenCL 2.0 Specification. Khronos Group, November 2013.

[22] J. Kim, K. Jang, K. Lee, S. Ma, J. Shim, and S. Moon. NBA (Network Balancing Act): A High-performance Packet Processing Framework for Heterogeneous Processors. In Proceedings of the Tenth European Conference on Computer Systems, EuroSys ’15, pages 22:1–22:14, 2015.

[23] Y. Li, D. Zhang, A. X. Liu, and J. Zheng. GAMT: A Fast and Scalable IP Lookup Engine for GPU-based Software Routers. In Proceedings of the Ninth ACM/IEEE Symposium on Architectures for Networking and Communications Systems, ANCS ’13, pages 1–12, 2013.

[24] Y. Liu, D. Xu, W. Song, and Z. Mu. Design and Implementation of High Performance IPSec Applications with Multi-Core Processors. In Proceedings of the 2008 International Seminar on Future Information Technology and Management Engineering, FITME ’08, pages 595–598, Nov 2008.

[25] J. Meng, X. Chen, Z. Chen, C. Lin, B. Mu, and July 2013.

[28] J. Thoguluva, A. Raghunathan, and S. T. Chakradhar. Efficient Software Architecture for IPSec Acceleration Using a Programmable Security Processor. In Proceedings of the Conference on Design, Automation and Test in Europe, DATE ’08, pages 1148–1153, 2008.

[29] G. Vasiliadis, S. Antonatos, M. Polychronakis, E. P. Markatos, and S. Ioannidis. Gnort: High Performance Network Intrusion Detection Using Graphics Processors. In Proceedings of the 11th International Symposium on Recent Advances in Intrusion Detection, RAID ’08, pages 116–134, 2008.

[30] G. Vasiliadis, L. Koromilas, M. Polychronakis, and S. Ioannidis. GASPP: A GPU-accelerated Stateful Packet Processing Framework. In Proceedings of the 2014 USENIX Conference on USENIX Annual Technical Conference, USENIX ATC’14, pages 321–332, 2014.

[31] G. Vasiliadis, M. Polychronakis, and S. Ioannidis. MIDeA: A Multi-parallel Intrusion Detection Architecture. In Proceedings of the 18th ACM Conference on Computer and Communications Security, CCS ’11, pages 297–308, 2011.

[32] E. Z. Zhang, Y. Jiang, Z. Guo, K. Tian, and X. Shen. On-the-fly Elimination of Dynamic Irregularities for GPU Computing. In Proceedings of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems, ASPLOS XVI, pages 369–380, New York, NY, USA, 2011. ACM.

[33] J. Zhao, X. Zhang, X. Wang, and X. Xue. Achieving O(1) IP Lookup on GPU-based Software Routers. In Proceedings of the ACM SIGCOMM 2010 Conference, SIGCOMM ’10, pages 429–430, 2010.