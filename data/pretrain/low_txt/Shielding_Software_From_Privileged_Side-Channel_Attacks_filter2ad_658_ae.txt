### Applications and Performance Analysis

**Table 5: OpenSSH Client Average File Transfer CPU Time**
Table 5 presents the average CPU time spent on file transfers using the OpenSSH client over 20 rounds of execution on the native FreeBSD kernel. The CPU time was measured by recording the number of unhalted clock cycles during the execution of the ssh client using the `pmcstat` utility, which was then converted into milliseconds based on the CPU's clock speed.

- **File Sizes and CPU Times:**
  - For files ranging from 1 KB to 8 MB, the original Virtual Ghost incurs overheads of 3% to 12%, with an average standard deviation of 1%.
  - The optimized Virtual Ghost (Opt-VG) reduces these overheads to 2% to 10%.
  - For files larger than 8 MB, the overheads for both Virtual Ghost and Opt-VG are negligible.
  - The differences in results for file sizes of 128 KB, 256 KB, and 512 KB are within the standard deviation.

**Figure 5: OpenSSH Client Average File Transfer Rate on Native FreeBSD**
Figure 5 illustrates the average file transfer bandwidth on the native FreeBSD kernel over 10 rounds. For files between 1 KB and 2 MB, the original Virtual Ghost incurs negligible overheads ranging from 1% to 3%, with a standard deviation of up to 1%. The optimizations do not significantly change these overheads.

**Table 6: Bzip2 and GnuPG Results for 2 MB Files**
Table 6 compares the overheads of Virtual Ghost with and without optimizations on Bzip2 compression and GnuPG signing for 2 MB files. In this experiment, ghost memory is disabled, so heap objects are allocated in traditional user-space memory, and physical memory is mapped on demand.

- **Bzip2:**
  - Overhead: 5% (reduced to 4% with optimizations)
  - Standard Deviation: 0%
- **GnuPG Signing:**
  - Overhead: 6% (reduced to 3% with optimizations)
  - Standard Deviation: 0%

**Table 7: RandomAccess, Bzip2, and Clang Results**
Table 7 provides the performance results for RandomAccess, Bzip2, and Clang, showing the overheads of Virtual Ghost with and without optimizations.

- **RandomAccess:**
  - Overhead: 1.28x to 2.11x
  - Standard Deviation: 0.64 Âµs
- **Bzip2:**
  - Overhead: 1.04x to 1.05x
  - Standard Deviation: 0%
- **Clang:**
  - Overhead: 1.03x to 1.05x
  - Standard Deviation: 0.63 s

**8.3 Page Table Side-Channel Defenses**
We evaluate the performance of our page table side-channel defenses as described in Sections 5.1 and 5.2.

- **Ghosting RandomAccess:**
  - The second column of Table 7 reports the average latency of each iteration over 20 rounds of execution for the RandomAccess microbenchmark.
  - The overheads for Virtual Ghost with optimizations (Opt-VG) and with page table defenses enabled (Opt-VG-PG) show no additional overhead (within the standard deviation of 4%) because the only OS kernel operations incurred are context switches, which are unaffected by our page table defenses.

- **Ghosting Bzip2:**
  - We enabled ghost memory for Bzip2 for all systems except the native FreeBSD kernel.
  - The third column of Table 7 shows that our page table defenses do not affect the overall performance of Bzip2 compression relative to Opt-VG.
  - Since Bzip2 accesses all the heap memory it allocates, our page table defenses do not incur any overhead by disabling demand paging of ghost memory.

- **Ghosting OpenSSH Client:**
  - Figure 6 shows the overhead of our page table defenses on the unhalted CPU clock cycles (converted into time) of the ssh client transferring files.
  - For files from 1 KB to 4 MB, page table defenses increase the overhead of Opt-VG by 1% to 10% with a 2% standard deviation.
  - For large files, page table defenses add no overhead to the CPU time.

- **Ghosting GnuPG:**
  - We enabled ghost memory for GnuPG for all systems except the native FreeBSD kernel.
  - Table 8 shows the performance of signing files with GnuPG, where the page table defenses incur a constant overhead of around 14 ms across all file sizes.

**Figure 7: Ghosting OpenSSH Client File Transfer Bandwidth Normalized to Native FreeBSD**
Figure 7 demonstrates the overheads of our page table defenses on the client file transfer bandwidth. The page table defenses add no significant overhead to the optimized Virtual Ghost across all file sizes, with differences within the range of standard deviation.

This comprehensive analysis highlights the performance impact of Virtual Ghost and its optimizations, providing insights into the effectiveness of the page table side-channel defenses.