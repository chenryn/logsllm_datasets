### 术语和关键字

- **object**: 199, 215
- **operator**: 504, 518
- **out**: 194–195, 207, 405, 409
- **override**: 275–276, 288, 307, 313
- **params**: 256, 258, 731
- **partial**: 166
- **private**: 65, 162–163, 278, 313
- **protected**: 278, 313
- **public**: 162–163, 164, 278, 313, 505, 522
- **ref**: 193–194, 207
- **sbyte**: 215
- **sealed**: 306–307, 313, 314
- **short**: 215
- **static**: 522
- **StaticResource**: 647
- **string**: 184, 215
- **struct**: 216, 227
- **table of**: 36–37
- **this**: 284, 288, 368, 378
- **uint**: 215
- **ulong**: 215
- **unchecked**:
  - 表达式: 146–148
  - 语句: 145
- **unsafe**: 205–206
- **ushort**: 215
- **value**: 369
- **var**: 54, 62, 179, 484
- **virtual**: 275, 288, 313
- **void**: 63
- **when**: 138–142
- **where**: 401, 408, 489, 501
- **yield**: 444, 448

### Lambda 运算符 (=>)
- **lambda (=>) 运算符**: 64, 425
- **lambda 演算**: 425
- **lambda 表达式**:
  - 匿名方法: 426–427
  - 定义: 423–424
  - 委托: 464
  - 特性: 426
  - 形式: 425–426
  - 语法: 424–425
- **Land 方法**: 279
- **语言互操作性**: 507

### LINQ (Language-Integrated Query)
- **数据聚合**: 485–487
- **数据过滤**: 484–485, 501
- **数据分组**: 485–487, 501
- **数据连接**: 487–488, 502
- **数据排序**: 485–487, 501
- **数据选择**: 482–484, 501
- **延迟评估**: 497–500
- **定义**: 479–480
- **示例**: 480–482
- **表达式顺序**: 491
- **PLINQ (Parallel LINQ)**:
  - 概述: 585
  - 简单集合的并行查询: 585–587
  - 两个集合的并行连接查询: 587–590
  - 查询取消: 587–590
- **快速参考**: 608
- **查询运算符**: 489–491
- **快速参考**: 501–502
- **Tree 对象**: 491–497
- **Linq 命名空间**: 489
- **List 类**: 412, 413–416
- **ListenFor 元素 (CustomerVoiceCommands.xml)**: 689
- **枚举字面量**:
  - 名称: 210
  - 值: 211
- **局部作用域**: 71
- **局部变量**:
  - 隐式类型: 57–58
  - 未赋值: 40
- **lock 语句**: 332–333, 593, 609
- **锁定数据**: 593–594, 607, 609
- **逻辑运算符**: 97
- **逻辑 AND (&&)**:
  - 结合性: 99
  - 优先级: 99
  - 短路: 97–98
  - 语法: 97
- **逻辑 OR (||)**:
  - 结合性: 99
  - 优先级: 99
  - 短路: 97–98
  - 语法: 97
- **long 数据类型**: 40
- **long 关键字**: 215
- **循环**:
  - do 循环:
    - 块: 124
    - 示例: 132
    - 步骤: 127–131
    - 语法: 124
    - 编写: 125–127
  - for 循环:
    - 块: 122
    - Cards 项目: 247–248
    - 数组迭代: 233–235
    - 多个初始化和更新: 123
    - 作用域: 123
    - 语法: 121–122
  - foreach 循环:
    - 取消: 557–558
    - Dictionary: 419
    - LinkedList 类: 415
    - List 类: 413
    - Stack 类: 417–418
    - Parallel.For 方法: 557–558
    - 快速参考: 132
  - while 循环:
    - 块: 118
    - 示例: 132
    - 嵌套: 117
    - 哨兵变量: 117
    - 语法: 117
    - 终止: 117
    - 编写: 118–121

### 事件
- **MachineOverheating 事件**: 466, 467

### 宏
- **varargs 宏**: 258

### Main 方法
- **数组参数**: 236
- **异步操作**: 573
- **BinaryTreeTest 项目**: 398–399, 402
- **控制台应用程序**: 8–10
- **MainPage.xaml 文件**: 27–28, 639
- **MainPage.xaml.cs 文件**: 27–28

### Mammal 类
- **基类构造函数**: 270
- **声明**: 268–269

### 托管代码
- **托管执行环境**: 226
- **Manifest Designer**: 614
- **ManualResetEventSlim 类**: 594, 609
- **Math 类**:
  - PI 字段: 160, 175
  - Sqrt 方法: 171, 173–174
- **数学运算符**: 请参阅算术运算符
- **MathsOperators 项目**:
  - 创建: 49–54
  - 异常处理: 139–142, 149–151
- **MaxValue 属性 (int 数据类型)**: 144

### 内存
- **分配**: 异步方法与内存分配: 582–583
- **装箱**: 199–200, 207
- **垃圾回收**: 189–190, 324. 请参阅析构函数
  - 优点: 318–320
  - 最终化: 320
  - 强制: 320
  - freachable 队列: 320–321
  - 工作原理: 320–321
  - 对象生命周期: 319
  - 使用时机: 321
- **堆**:
  - 目的: 196–198
  - 存储数据: 198–199
  - OutOfMemoryException: 198
- **指针**: 204–206
- **资源管理**: 321–324
  - 释放方法: 321–322
  - Dispose 方法: 324–326
  - 异常安全释放: 322–323, 326–328, 335
  - IDisposable 接口: 324, 328–330
  - 防止对象多次释放: 330–332
  - 线程安全: 332–333
  - using 语句: 323–324, 335
  - 异常后验证释放: 333–334
- **栈**:
  - 目的: 196–198
  - 存储数据: 198–199
- **拆箱**: 200–201

### MessageDialog 对象
- **MessageDialog 对象**: 580

### 方法
- **抽象方法**: 306
- **访问器方法**:
  - 索引器: 368
  - 属性: 342–343
- **适配器方法**: 464–465
- **匿名方法**: 426–427
- **异步方法**:
  - 常见错误: 579–580
  - Main 方法: 573
  - 概述: 567, 568
  - 解决的问题: 568–577
  - 返回值: 578–579
  - 可扩展性: 568
  - Windows Runtime API: 580–582
- **调用方法**: 93
- **泛型方法**: 409
- **多个返回值**: 68–70, 93
- **从其他对象调用**: 68
- **语法**: 65–68
- **构造函数**:
  - 基类构造函数: 270–271, 288
  - 调用: 181
  - 声明: 163–164, 180
  - 默认构造函数: 164
  - 构造顺序: 165
  - 重载: 164–165
  - 公有与私有: 164
- **声明方法**: 62–63, 93
- **扩展方法**: 283–287, 288
- **新方法**: 273–274
- **覆盖方法**: 275–276, 288
- **虚方法**: 274–275, 277, 288
- **解构方法**: 172–173
- **定义方法**: 61
- **委托**:
  - Action: 452
  - 添加方法: 455
  - 自动化工厂场景: 453–456
  - 声明: 450–451, 454, 456–464, 475
  - 定义: 450
  - 示例: 451–452
  - Func: 451–452
  - Func452
  - 函数指针对比: 451
  - 实例化: 475
  - 调用: 454–455, 475
  - lambda 表达式: 464
  - 方法适配器: 464–465
  - 概述: 450–451
  - performCalculationDelegate: 450–451
  - 快速参考: 475
  - 移除方法: 455
- **析构函数**:
  - 调用: 335
  - 限制: 317–318
  - 编写: 316–318, 335
- **表达式主体方法**: 64–65, 93
- **提取方法**: 78
- **泛型方法**:
  - 调用: 409
  - 创建: 399–400, 408
  - InsertIntoTree: 400–402
- **全局方法**: 62
- **实例方法**: 170
- **方法长度**: 65
- **命名约定**: 62
- **嵌套方法**: 81–84, 94
- **重载方法**: 72–73, 255–256
- **覆盖方法**:
  - 声明: 275–276, 288
  - 密封覆盖: 307
- **参数**:
  - 定义: 62
  - 命名参数: 86–92, 94
  - 可选参数: 84–86, 87–92, 94
  - 公有与私有: 162
  - 快速参考: 93–94
- **重构方法**: 78
- **替换属性**: 349–353
- **返回值**: 93
- **方法声明**: 63–64
- **多个返回值**: 68–70
- **返回类型**: 235–236
- **void 关键字**: 63
- **作用域**:
  - 类: 72
  - 局部: 71
  - 概述: 71
- **密封方法**: 307
- **序列化方法**: 607
- **签名**: 273
- **静态方法**: 173–174, 181
- **逐步执行**: 78–81, 94
- **语法**: 62–63
- **WriteLine 方法**: 73
- **编写方法**: 73–77

### Methods 项目
- **表达式主体方法**: 64–65
- **方法调用**: 67
- **多个返回值**: 68–70

### Microsoft Patterns & Practices Git 仓库
- **Microsoft Patterns & Practices Git 仓库**: 568

### Visual Studio 2017
- **Microsoft Visual Studio 2017**: 请参阅 Visual Studio 2017

### Min 方法
- **Min 方法**: 256–257

### MinValue 属性 (int 数据类型)
- **MinValue 属性 (int 数据类型)**: 144

### Model-View-ViewModel (MVVM) 模式
- **Model-View-ViewModel (MVVM) 模式**: 657–658

### 模数运算符
- **复合模数 (%=)**: 116
- **模数 (%)**: 48

### Moore, Gordon E.
- **Moore, Gordon E.**: 526

### Moore's Law
- **Moore's Law**: 526

### MoveNext 方法
- **MoveNext 方法**: 436, 439, 448

### mscorlib.dll 文件
- **mscorlib.dll 文件**: 17

### 多核处理器
- **多核处理器**: 526–527. 请参阅任务

### 多维数组
- **多维数组**: 238, 253, 258

### 多个接口
- **多个接口**: 293

### 多个返回值
- **多个返回值**: 68–70, 93

### 乘法 (*) 运算符
- **乘法 (*) 运算符**: 47

### multiplyValues 方法
- **multiplyValues 方法**: 53

### 多任务处理
- **优势**: 525–526
- **多核处理器**: 526–527
- **.NET Framework**: 527
- **任务**:
  - 抽象: 545–549
  - 取消: 551–561, 566
  - 继续: 530–531, 563–564, 565
  - CPU 瓶颈: 533–545
  - 创建: 529, 564
  - 异常处理: 562–563, 565
  - 故障: 557, 563–564
  - 并行类: 545–551
  - 并行: 531–538, 545–551, 565
  - 快速参考: 564–566
  - 运行: 530, 564
  - 同步: 531
  - Task 类: 528–529
  - 线程: 528–529
  - 等待: 531, 564–565

### MVVM (Model-View-ViewModel) 模式
- **MVVM (Model-View-ViewModel) 模式**: 657–658

### Name 结构
- **Name 结构**: 373

### 命名参数
- **接口**: 291
- **传递命名参数**: 86–87, 94
- **解决歧义**: 87–92

### nameof 运算符
- **nameof 运算符**: 668–669

### namespace 关键字
- **namespace 关键字**: 15

### 命名空间
- **程序集**: 17
- **引入命名空间**: 15
- **Collections 命名空间**: 412
- **声明命名空间**: 616
- **在命名空间中定义类**: 14–15
- **Generic 命名空间**: 386–387, 411
- **Linq 命名空间**: 489
- **长名称**: 16
- **Numerics 命名空间**: 511
- **Tasks 命名空间**: 527
- **Threading 命名空间**: 528, 594

### 命名约定
- **camelCase**: 163
- **大小写敏感**: 36
- **字段**: 343–344
- **方法**: 62
- **运算符**: 505
- **PascalCase**: 163
- **属性**: 343–344
- **保留字**: 36–37
- **变量**: 38

### NaN (not a number)
- **NaN (not a number)**: 49

### 收缩转换
- **收缩转换**: 517

### 本地代码
- **本地代码**: 226

### Navigate 元素 (CustomerVoiceCommands.xml)
- **Navigate 元素 (CustomerVoiceCommands.xml)**: 689

### Navigate 方法
- **Navigate 方法**: 693, 697

### NavigationArgs 类
- **NavigationArgs 类**: 698

### NegInt32 类
- **NegInt32 类**: 283–284

### 嵌套
- **if 语句**: 101–106
- **方法**: 81–84, 94
- **while 语句**: 117

### .NET Core 模板
- **.NET Core 模板**: 4

### .NET Framework
- **CLR (公共语言运行时)**: 85
- **IAsyncResult 设计模式**: 584–585
- **Windows 运行时兼容性**: 226, 311

### new 关键字
- **数组创建**: 230, 252
- **类创建**: 161, 179
- **委托创建**: 450–451, 475
- **方法声明**: 273–274, 313
- **对象创建**: 197, 271

### New 命令 (文件菜单)
- **New 命令 (文件菜单)**: 4

### 新建项目对话框
- **新建项目对话框**: 4–5, 18, 34

### 新建通用 Windows 项目对话框
- **新建通用 Windows 项目对话框**: 615

### 在表单中添加 Next 按钮
- **在表单中添加 Next 按钮**: 682–685

### Next 方法
- **Next 方法**: 231, 680–681

### NextCustomer 命令
- **NextCustomer 命令**: 679–682

### NextCustomer 属性 (ViewModel)
- **NextCustomer 属性 (ViewModel)**: 681–682

### NodeData 属性 (Tree 类)
- **NodeData 属性 (Tree 类)**: 393–394

### 节点
- **二叉树节点**: 388

### NOT (!) 运算符
- **NOT (!) 运算符**: 96