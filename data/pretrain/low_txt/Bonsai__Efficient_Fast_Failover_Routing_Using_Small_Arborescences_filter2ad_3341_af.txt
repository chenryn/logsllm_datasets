### Polynomial-Time Verification Algorithms for MPLS Networks

Recently, polynomial-time verification algorithms have been developed for MPLS networks, leveraging automata theory [4], [66]. These algorithms support arbitrarily large header sizes, which can result from header rewriting during failover scenarios (as discussed above).

### Ideal Resilience in Robust Routing Algorithms

Our research is driven by robust routing algorithms that provide static resiliency in the data plane without requiring header rewriting. This concept was initially introduced in [48] and [20], and has since been extensively studied by Stephens et al. [16], [17], Chiesa et al. [14], [15], [18], [22], Elhourani et al. [25], and Pignolet et al. [8], [13], among others.

Feigenbaum et al. [48] posed the question of whether "ideal (static) resilience" can be achieved: Can failover rules be defined such that connectivity is preserved as long as the network remains physically connected? The authors demonstrated that this is not possible. Concurrently, Borokhovich and Schmid [20] showed that even in a highly connected, initially fully connected network, ideal resilience cannot be achieved after certain failures. Chiesa et al. [15] then raised the intriguing (and only partially answered) question of whether it is always possible to maintain connectivity in a k-(edge)-connected network if there are at most k-1 link failures. Pignolet et al. [13], [23] observed and utilized a connection between fast rerouting problems and combinatorial block designs to minimize congestion on failover routes.

### Beyond Connectivity: Quality of Failover Paths

Most existing literature on fast rerouting under multiple link failures focuses primarily on connectivity, which alone is insufficient to meet the availability and performance guarantees of modern communication networks. The quality of failover paths has been identified as an open problem in the literature [7]. While some initial studies have explored load on failover paths in very dense networks [13], the field remains largely unexplored. For instance, arborescence-based solutions [14], [15], [18], [22], without additional optimizations, can result in long failover paths. Similarly, many other algorithms, such as those based on graph search that rely on packet header rewriting [27], may also produce suboptimal failover paths.

To our knowledge, the work by Foerster et al. [8] is the only one that generates arborescences with small stretch, but it is limited to specific cases like torus, hypercube, and grid graphs, as well as trees of complete bipartite graphs. Unlike our work, no approaches for more general graphs are provided, nor are practical evaluations or complexity results discussed.

### Arborescences with Good Depth and Other Applications

The problem of finding arborescences also arises in other domains, such as broadcast applications [67]. There is existing work on improving the depth of arborescences, either by reducing the number of arborescences [68] or by considering restricted topologies, such as hypercubes [69] or tori [70]. For further references, see the surveys in [67], [71], [72].

### Conclusion

In this paper, we have studied local fast failover algorithms that not only ensure resiliency but also provide routes with bounded stretch. We have presented analytical results on the complexity of the problem and the impact of failure distributions on resilience and stretch. Additionally, we proposed and evaluated arc-selection methods to create suitable arborescences. Our solutions can lead to significantly shorter failover routes compared to state-of-the-art methods, without modifying packet headers or incurring rule convergence delays.

Other costs or capacities could be incorporated into the balanced arc-selection algorithm using a vector-based approach instead of scalar values. To keep the evaluation simple, we focused on scalar values, but the algorithm can be extended to handle further constraints and multi-objective scenarios.

Our work opens several avenues for future research. For example, while this paper has focused on hop distance metrics, it would be interesting to generalize our results to arbitrary link weights (e.g., representing latencies). Another open question concerns provably low-stretch failover algorithms for further special graph classes. Additionally, the study of rerouting techniques with header rewriting constitutes another promising direction for future research on low-stretch failover algorithms.

To ensure reproducibility and facilitate further research, we will make our source code and simulation results publicly available at [34].

### Acknowledgements

We would like to thank the anonymous reviewers and our shepherd, Elias P. Duarte Jr.

### References

[1] Y. Wang, H. Wang, A. Mahimkar, R. Alimi, Y. Zhang, L. Qiu, and Y. R. Yang, “R3: Resilient routing reconfiguration,” ACM SIGCOMM CCR, vol. 40, no. 4, pp. 291–302, Aug. 2010.

[2] P. Gill, N. Jain, and N. Nagappan, “Understanding network failures in data centers: measurement, analysis, and implications,” ACM SIGCOMM CCR, vol. 41, pp. 350–361, 2011.

[3] A. Markopoulou, G. Iannaccone, S. Bhattacharyya, C.-N. Chuah, and C. Diot, “Characterization of failures in an IP backbone,” in Proc. IEEE INFOCOM, 2004.

[4] S. Schmid and J. Srba, “Polynomial-time what-if analysis for prefix-manipulating MPLS networks,” in Proc. IEEE INFOCOM, 2018.

[5] A. Shaikh, C. Isett, A. Greenberg, M. Roughan, and J. Gottlieb, “A case study of OSPF behavior in a large enterprise network,” in Proc. ACM IMW, 2002.

[6] D. Xu, Y. Xiong, C. Qiao, and G. Li, “Failure protection in layered networks with shared risk link groups,” IEEE Network, vol. 18, no. 3, pp. 26–41, 2004.

[7] J. Liu, A. Panda, A. Singla, B. Godfrey, M. Schapira, and S. Shenker, “Ensuring connectivity via data plane mechanisms,” in Proc. 10th USENIX NSDI, 2013, pp. 113–126.

[8] K.-T. Foerster, Y.-A. Pignolet, S. Schmid, and G. Tredan, “Local fast failover routing with low stretch,” ACM SIGCOMM CCR, vol. 1, pp. 35–41, Jan. 2018.

[9] A. K. Atlas and A. Zinin, “Basic specification for IP fast-reroute: loop-free alternates,” IETF RFC 5286, 2008.

[10] A. Kamisiński, “Evolution of IP fast-reroute strategies,” in Proc. International Workshop on Resilient Networks Design and Modeling (RNDM), 2018.

[11] P. Pan, G. Swallow, and A. Atlas, “Fast reroute extensions to RSVP-TE for LSP tunnels,” in Request for Comments (RFC) 4090, 2005.

[12] Switch Specification 1.3.1, “OpenFlow,” in https://www.opennetworking.org/wp-content/uploads/2013/04/openflow-spec-v1.3.1.pdf, 2012, (last accessed in April 2019).

[13] Y.-A. Pignolet, S. Schmid, and G. Tredan, “Load-optimal local fast rerouting for dependable networks,” in Proc. DSN, 2017.

[14] M. Chiesa, I. Nikolaevskiy, S. Mitrovic, A. V. Gurtov, A. Madry, M. Schapira, and S. Shenker, “On the resiliency of static forwarding tables,” IEEE/ACM Trans. Netw., vol. 25, no. 2, pp. 1133–1146, 2017.

[15] M. Chiesa, A. Gurtov, A. Madry, S. Mitrovic, I. Nikolaevkiy, A. Panda, M. Schapira, and S. Shenker, “Exploring the limits of static failover routing (v4),” arXiv:1409.0034 [cs.NI], 2016.

[16] B. Stephens, A. L. Cox, and S. Rixner, “Plinko: Building provably resilient forwarding tables,” in Proc. ACM HotNets, 2013.

[17] ——, “Scalable multi-failure fast failover via forwarding table compression,” in Proc. ACM SOSR, 2016.

[18] M. Chiesa, A. V. Gurtov, A. Madry, S. Mitrovic, I. Nikolaevskiy, M. Schapira, and S. Shenker, “On the resiliency of randomized routing against multiple edge failures,” in Proc. ICALP, 2016.

[19] E. Blanton and M. Allman, “On making TCP more robust to packet reordering,” ACM SIGCOMM Computer Communication Review, vol. 32, no. 1, pp. 20–30, 2002.

[20] M. Borokhovich and S. Schmid, “How (not) to shoot in your foot with SDN local fast failover: A load-connectivity tradeoff,” in Proc. OPODIS, 2013.

[21] E. Gafni and D. Bertsekas, “Distributed algorithms for generating loop-free routes in networks with frequently changing topology,” Trans. Commun., vol. 29, no. 1, pp. 11–18, 1981.

[22] M. Chiesa, I. Nikolaevskiy, S. Mitrovic, A. Panda, A. Gurtov, A. Madry, M. Schapira, and S. Shenker, “The quest for resilient (static) forwarding tables,” in Proc. IEEE INFOCOM, 2016.

[23] K.-T. Foerster, Y.-A. Pignolet, S. Schmid, and G. Tredan, “CASA: congestion and stretch aware static fast rerouting,” in Proc. IEEE INFOCOM, 2019.

[24] T. Elhourani, A. Gopalan, and S. Ramasubramanian, “IP fast rerouting for multi-link failures,” in Proc. IEEE INFOCOM, 2014.

[25] ——, “IP fast rerouting for multi-link failures,” IEEE/ACM Trans. Netw., vol. 24, no. 5, pp. 3014–3025, 2016.

[26] M. Kaufmann and K. Mehlhorn, “A linear-time algorithm for the homotopic routing problem in grid graphs,” SIAM J. on Computing, vol. 23, no. 2, pp. 227–246, 1994.

[27] M. Borokhovich, L. Schiff, and S. Schmid, “Provable data plane connectivity with local fast failover: Introducing OpenFlow graph algorithms,” in Proc. ACM SIGCOMM HotSDN, 2014.

[28] J. Edmonds, “Edge-disjoint branchings,” Combinatorial algorithms, vol. 9, no. 91-96, p. 2, 1973.

[29] A. Bhalgat, R. Hariharan, T. Kavitha, and D. Panigrahi, “Fast edge splitting and Edmonds’ arborescence construction for unweighted graphs,” in Proc. SODA, 2008.

[30] H. N. Gabow, “Efficient splitting off algorithms for graphs,” in Proc. ACM STOC, 1994.

[31] J. Tapolcai, L. Rónyai, B. Vass, and L. Gyimóthi, “List of shared risk link groups representing regional failures with limited size,” in Proc. IEEE INFOCOM, 2017.

[32] J.-C. Bermond and P. Fraigniaud, “Broadcasting and NP-completeness,” Graph Theory Notes of New York, no. XXII, pp. 8–14, 1992.

[33] L. Lovász, “Covering and coloring of hypergraphs,” in Proc. 4th Southeastern Conf. on Combinatorics, Graph Theory, and Computing, Utilitas Mathematica, 1973.

[34] https://gitlab.cs.univie.ac.at/ct-papers/2019-dsn.

[35] NetworkX, “Random regular graph generation,” https://networkx.github.io/documentation/stable/reference/generated/networkx.generators.random_graphs.random_regular_graph.html#networkx.generators.random_graphs.random_regular_graph, 2018, (last accessed in April 2019).

[36] B. Bollobás, Random Graphs, ser. Cambridge Studies in Advanced Mathematics. Cambridge University Press, 2001, no. 73.

[37] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson, “Measuring ISP topologies with Rocketfuel,” IEEE/ACM Trans. Netw., vol. 12, no. 1, pp. 2–16, 2004.

[38] D. Zhuo, M. Ghobadi, R. Mahajan, K.-T. Foerster, A. Krishnamurthy, and T. E. Anderson, “Understanding and mitigating packet corruption in data center networks,” in Proc. ACM SIGCOMM, 2017.

[39] H. Abelson and A. A. DiSessa, Turtle Geometry. MIT press, 1986.

[40] F. Kuhn, R. Wattenhofer, Y. Zhang, and A. Zollinger, “Geometric ad-hoc routing: of theory and practice,” in Proc. ACM PODC, 2003.

[41] D. Madory, “Renesys blog: Large outage in Pakistan,” https://dyn.com/blog/large-outage-in-pakistan/, (last accessed in April 2019).

[42] R. Singel, “Fiber optic cable cuts isolate millions from internet, future cuts likely,” https://www.wired.com/2008/01/fiber-optic-cab/, 2008, (last accessed in April 2019).

[43] Wikitech, “Site issue aug 6 2012,” http://wikitech.wikimedia.org/view/Site_issue_Aug_6_2012, 2012, (last accessed in April 2019).

[44] C. Wilson, “‘Dual’ fiber cut causes Sprint outage,” https://web.archive.org/web/20080906210432/http://telephonyonline.com/access/news/Sprint_service_outage_011006/, 2006, (last accessed in April 2019).

[45] G. Iannaccone, C.-n. Chuah, R. Mortier, S. Bhattacharyya, and C. Diot, “Analysis of link failures in an IP backbone,” in Proc. ACM SIGCOMM Workshop on Internet Measurement, 2002.

[46] A. Markopoulou, G. Iannaccone, S. Bhattacharyya, C. N. Chuah, Y. Ganjali, and C. Diot, “Characterization of failures in an operational IP backbone network,” IEEE/ACM Transactions on Networking, vol. 16, no. 4, pp. 749–762, Aug 2008.

[47] A. J. González and B. E. Helvik, “Analysis of failures characteristics in the UNINETT IP backbone network,” in 2011 IEEE Workshops of International Conference on Advanced Information Networking and Applications, 2011.

[48] J. Feigenbaum, B. Godfrey, A. Panda, M. Schapira, S. Shenker, and A. Singla, “Brief announcement: On the resilience of routing tables,” in Proc. ACM PODC, 2012.

[49] J. Meza, T. Xu, K. Veeraraghavan, and O. Mutlu, “A large scale study of data center network reliability,” in Proc. ACM IMC, 2018.

[50] A. Vahdat, D. Clark, and J. Rexford, “A purpose-built global network: Google’s move to SDN,” Commun. ACM, vol. 59, no. 3, pp. 46–54, Feb. 2016.

[51] G. Enyedi, G. Rétvári, and T. Cinkler, “A novel loop-free IP fast reroute algorithm,” in Proc. EUNICE, 2007.

[52] S. Nelakuditi, S. Lee, Y. Yu, Z.-L. Zhang, and C.-N. Chuah, “Fast local rerouting for handling transient link failures,” IEEE/ACM Transactions on Networking (ToN), vol. 15, no. 2, pp. 359–372, 2007.

[53] J. Wang and S. Nelakuditi, “IP fast reroute with failure inferencing,” in Proc. ACM SIGCOMM Workshop on Internet Network Management, 2007.

[54] B. Zhang, J. Wu, and J. Bi, “RPFP: IP fast reroute with providing complete protection and without using tunnels,” in Proc. IEEE IWQoS, 2013.

[55] L. Shen, X. Yang, and B. Ramamurthy, “Shared risk link group (SRLG)-diverse path provisioning under hybrid service level agreements in wavelength-routed optical mesh networks,” IEEE/ACM Transactions on Networking, vol. 13, no. 4, pp. 918–931, 2005.

[56] J. Tapolcai, B. Vass, Z. Heszberger, J. Bíró, D. Hay, F. A. Kuipers, and L. Rónyai, “A tractable stochastic model of correlated link failures caused by disasters,” in Proc. IEEE INFOCOM, 2018.

[57] M. S. Corson and A. Ephremides, “A distributed routing algorithm for mobile wireless networks,” Wireless networks, vol. 1, no. 1, pp. 61–81, 1995.

[58] V. D. Park and M. S. Corson, “A highly adaptive distributed routing algorithm for mobile wireless networks,” in Proc. IEEE INFOCOM, 1997.

[59] J. L. Welch and J. E. Walter, “Link reversal algorithms,” Synthesis Lectures on Distributed Computing Theory, vol. 2, no. 3, pp. 1–103, 2011.

[60] C. Busch, S. Surapaneni, and S. Tirthapura, “Analysis of link reversal routing algorithms for mobile ad hoc networks,” in Proc. SPAA, 2003.

[61] M. Canini, P. Kuznetsov, D. Levin, and S. Schmid, “A distributed and robust SDN control plane for transactional network updates,” in Proc. IEEE INFOCOM, 2015.

[62] K. Lakshminarayanan, M. Caesar, M. Rangan, T. Anderson, S. Shenker, and I. Stoica, “Achieving convergence-free routing using failure-carrying packets,” in Proc. ACM SIGCOMM, 2007.

[63] K.-T. Foerster, M. Parham, M. Chiesa, and S. Schmid, “Ti-MFA: Keep calm and reroute segments fast,” in Proc. IEEE Global Internet Symposium (GI), 2018.

[64] P. Hande, M. Chiang, R. Calderbank, and S. Rangan, “Network pricing and rate allocation with content-provider participation,” in Proc. IEEE INFOCOM, 2010.

[65] H. H. Liu, S. Kandula, R. Mahajan, M. Zhang, and D. Gelernter, “Traffic engineering with forward fault correction,” in Proc. ACM SIGCOMM, 2014.

[66] J. S. Jensen, T. B. Krogh, J. S. Madsen, S. Schmid, J. Srba, and M. T. Thorgersen, “P-REX: Fast verification of MPLS networks with multiple link failures,” in Proc. ACM CoNEXT, 2018.

[67] P. Fraigniaud and E. Lazard, “Methods and problems of communication in usual networks,” Discrete Applied Mathematics, vol. 53, no. 1-3, pp. 79–133, 1994.

[68] T. Hasunuma, “On edge-disjoint spanning trees with small depths,” Inf. Process. Lett., vol. 75, no. 1-2, pp. 71–74, 2000.

[69] S. L. Johnsson and C. Ho, “Optimum broadcasting and personalized communication in hypercubes,” IEEE Trans. Computers, vol. 38, no. 9, pp. 1249–1268, 1989.

[70] J. G. Peters, C. Rapine, and D. Trystram, “Small depth arc-disjoint spanning trees in two-dimensional toroidal meshes,” Technical Report SFU-CMPT-TR-2002-10, School of Computing Science, Simon Fraser University, Tech. Rep., 2002.

[71] S. M. Hedetniemi, S. T. Hedetniemi, and A. L. Liestman, “A survey of gossiping and broadcasting in communication networks,” Networks, vol. 18, no. 4, pp. 319–349, 1988.

[72] A. Pelc, “Fault-tolerant broadcasting and gossiping in communication networks,” Networks, vol. 28, no. 3, pp. 143–156, 1996.