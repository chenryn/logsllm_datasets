### References

1. **Hellman Fails in Practice.** In *22nd ACM Conference on Computer and Communications Security*.

2. **Elaine Barker and Allen Roginsky.** 2011. *Transitions: Recommendation for Transitioning the Use of Cryptographic Algorithms and Key Lengths.* NIST Special Publication 800-131A.

3. **Elaine B. Barker and John Michael Kelsey.** 2007. *Recommendation for Random Number Generation Using Deterministic Random Bit Generators (Revised).* US Department of Commerce, Technology Administration, National Institute of Standards and Technology, Computer Security Division, Information Technology Laboratory.

4. **Mihir Bellare, Kenneth G. Paterson, and Phillip Rogaway.** 2014. *Security of Symmetric Encryption Against Mass Surveillance.* Springer Berlin Heidelberg, Berlin, Heidelberg. https://doi.org/10.1007/978-3-662-44371-2_1

5. **Daniel J. Bernstein, Yun-An Chang, Chen-Mou Cheng, Li-Ping Chou, Nadia Heninger, Tanja Lange, and Nicko Van Someren.** 2013. *Factoring RSA Keys from Certified Smart Cards: Coppersmith in the Wild.* In *International Conference on the Theory and Application of Cryptology and Information Security.* Springer, 341–360.

6. **Manuel Blum and Silvio Micali.** 1984. *How to Generate Cryptographically Strong Sequences of Pseudo-random Bits.* SIAM J. Comput. 13, 4 (Nov. 1984), 850–864. https://doi.org/10.1137/0213053

7. **Fabrice Boudot.** 2017. *On Improving Integer Factorization and Discrete Logarithm Computation Using Partial Triangulation.* Cryptology ePrint Archive, Report 2017/758. http://eprint.iacr.org/2017/758

8. **Daniel R.L. Brown.** 2006. *Conjectured Security of the ANSI-NIST Elliptic Curve RNG.* IACR Cryptology ePrint Archive 2006 (2006), 117.

9. **Ed. C. Kaufman.** 2005. *Internet Key Exchange (IKEv2) Protocol.* RFC 4306.

10. **Stephen Checkoway, Matthew Fredrikson, Ruben Niederhagen, Adam Everspaugh, Matthew Green, Tanja Lange, Thomas Ristenpart, Daniel J. Bernstein, Jake Maskiewicz, and Hovav Shacham.** 2014. *On the Practical Exploitability of Dual EC in TLS Implementations.* In *Proceedings of the 23rd USENIX Conference on Security Symposium (SEC’14).* USENIX Association, Berkeley, CA, USA, 319–335. http://dl.acm.org/citation.cfm?id=2671225.2671246

11. **Stephen Checkoway, Jacob Maskiewicz, Christina Garman, Joshua Fried, Shaanan Cohney, Matthew Green, Nadia Heninger, Ralf-Philipp Weinmann, Eric Rescorla, and Hovav Shacham.** 2016. *A Systematic Analysis of the Juniper Dual EC Incident.* In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security.* ACM, 468–479.

12. **D. Maughan, M. Schertler, and J. Turner.** 1998. *Internet Security Association and Key Management Protocol.* IETF RFC 2408.

13. **Jean Paul Degabriele, Kenneth G. Paterson, Jacob C. N. Schuldt, and Joanne Woodage.** 2016. *Backdoors in Pseudorandom Number Generators: Possibility and Impossibility Results.* In *Advances in Cryptology – CRYPTO 2016,* Matthew Robshaw and Jonathan Katz (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 403–432.

14. **Yevgeniy Dodis, Chaya Ganesh, Alexander Golovnev, Ari Juels, and Thomas Ristenpart.** 2015. *A Formal Treatment of Backdoored Pseudorandom Generators.* Springer Berlin Heidelberg, Berlin, Heidelberg, 101–126. https://doi.org/10.1007/978-3-662-46800-5_5

15. **Yevgeniy Dodis, David Pointcheval, Sylvain Ruhault, Damien Vergniaud, and Daniel Wichs.** 2013. *Security Analysis of Pseudo-Random Number Generators with Input: /dev/random is Not Robust.* In *Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security.* ACM, 647–658.

16. **Yevgeniy Dodis, Adi Shamir, Noah Stephens-Davidowitz, and Daniel Wichs.** 2014. *How to Eat Your Entropy and Have It Too – Optimal Recovery Strategies for Compromised RNGs.* In *CRYPTO ’14.*

17. **Leo Dorrendorf, Zvi Gutterman, and Benny Pinkas.** 2009. *Cryptanalysis of the Random Number Generator of the Windows Operating System.* ACM Transactions on Information and System Security (TISSEC) 13, 1 (2009), 10.

18. **Digital Signature Standard (DSS).** 2013. *Generation of Probable Primes with Conditions Based on Auxiliary Probable Primes.* http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf

19. **Fortinet.** [n.d.]. *FG-IR-16-067: FortiOS Local Privilege Escalation via Malicious Use of USB Storage Devices.* http://fortiguard.com/psirt/FG-IR-16-067

20. **Fortinet.** [n.d.]. *FG-IR-17-245: DUHK Attack against Fortinet Products.* https://fortiguard.com/psirt/FG-IR-17-245

21. **Fortinet.** 2016. *Brief Statement Regarding Issues Found with FortiOS.* https://web.archive.org/web/20160125202411/http://blog.fortinet.com:80/post/brief-statement-regarding-issues-found-with-fortios

22. **John Franks, Phillip M. Hallam-Baker, Jeffery L. Hostetler, Scott D. Lawrence, Paul J. Leach, Ari Luotonen, and Lawrence C. Stewart.** 1999. *HTTP Authentication: Basic and Digest Access Authentication.* RFC 2617. RFC Editor. http://www.rfc-editor.org/rfc/rfc2617.txt

23. **Dan Goodin.** 2016. *Group Claims to Hack NSA-Tied Hackers, Posts Exploits as Proof.* https://arstechnica.com/information-technology/2016/08/group-claims-to-hack-nsa-tied-hackers-posts-exploits-as-proof/

24. **Matthew Green.** 2016. *Random Number Generation: An Illustrated Primer.* https://blog.cryptographyengineering.com/2012/02/21/random-number-generation-illustrated/

25. **Zvi Gutterman, Benny Pinkas, and Tzachy Reinman.** 2006. *Analysis of the Linux Random Number Generator.* In *IEEE Symposium on Security and Privacy.* IEEE Press.

26. **D. Harkins and D. Carrel.** 1998. *The Internet Key Exchange (IKE).* IETF RFC 2409.

27. **Marcella Hastings, Joshua Fried, and Nadia Heninger.** 2016. *Weak Keys Remain Widespread in Network Devices.* In *Proceedings of the 2016 Internet Measurement Conference.* ACM, 49–63.

28. **Nadia Heninger, Zakir Durumeric, Eric Wustrow, and J. Alex Halderman.** 2012. *Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices.* In *USENIX Security Symposium.*

29. **William Herlands, Thomas Hobson, and Paula Donovan.** 2014. *Effective Entropy for Memory Randomization Defenses.* In *USENIX 7th Workshop on Cyber Security Experimentation and Test.* Lincoln Laboratory.

30. **Joanne Woodage.** 2018. *An Analysis of the NIST SP 800-90A Standard.*

31. **Juniper Networks, Inc.** [n.d.]. *FIPS 140-2 SECURITY POLICY - SSG 140.* https://www.juniper.net/documentation/hardware/netscreen-certifications/Security_Policy_SSG-140_ScreenOS_6_2.pdf

32. **George Kadianakis, Claudia V. Roberts, Laura M. Roberts, and Philipp Winter.** [n.d.]. *"Major key alert!" Anomalous keys in Tor relays.* ([n.d.]).

33. **Sharon S. Keller.** 2005. *NIST-Recommended Random Number Generator Based on ANSI X9.31 Appendix A.2.4 Using the 3-Key Triple DES and AES Algorithms.* National Institute of Standards and Technology.

34. **John Kelsey, Bruce Schneier, and Niels Ferguson.** 1999. *Notes on the Design and Analysis of the Yarrow Cryptographic Pseudorandom Number Generator.* In *SAC ’99.*

35. **John Kelsey, Bruce Schneier, David Wagner, and Chris Hall.** 1998. *Cryptanalytic Attacks on Pseudorandom Number Generators.* In *Fast Software Encryption.* Springer, 168–188.

36. **Alex Klyubin.** 2013. *Some SecureRandom Thoughts.* https://android-developers.googleblog.com/2013/08/some-securerandom-thoughts.html

37. **Sharon S. Keller and Lawrence E. Bassham III.** 2005. *The Random Number Generator Validation System (RNGVS).* National Institute of Standards and Technology.

38. **Arjen Lenstra, James P. Hughes, Maxime Augier, Joppe W. Bos, Thorsten Kleinjung, and Christophe Wachter.** 2012. *Public Keys.* In *Proceedings of the 32nd Annual Cryptology Conference on Advances in Cryptology — CRYPTO 2012 - Volume 7417.* 626–642.

39. **Steve Marquess.** 2013. *Flaw in Dual EC DRBG (no, not that one).* http://marc.info/?l=openssl-announce&m=138747119822324&w=2

40. **Kai Michaelis, Christopher Meyer, and Jörg Schwenk.** 2013. *Randomly Failed! The State of Randomness in Current Java Implementations.* In *CT-RSA, Vol. 7779.* Springer, 129–144.

41. **Stephan Müller.** [n.d.]. *Linux Random Number Generator — A New Approach.* Available at http://www.chronox.de/lrng/doc/lrng.html

42. **Phong Q. Nguyen and Igor E. Shparlinski.** 2003. *The Insecurity of the Elliptic Curve Digital Signature Algorithm with Partially Known Nonces.* Designs, Codes and Cryptography 30, 2 (2003), 201–217.

43. **NIST.** [n.d.]. *Automated Cryptographic Validation Testing.* https://csrc.nist.gov/Projects/Automated-Cryptographic-Validation-Testing

44. **NIST.** 2001. *Security Requirements for Cryptographic Modules.* http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf

45. **NIST.** 2017. *CMVP Historical Validation List.* http://web.archive.org/web/20170120035228/http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-historical.htm

46. **Nicole Perlroth.** 2013. *Government Announces Steps to Restore Confidence on Encryption Standards.* The New York Times. https://bits.blogs.nytimes.com/2013/09/10/government-announces-steps-to-restore-confidence-on-encryption-standards/?_r=1

47. **Thomas Ristenpart and Scott Yilek.** 2010. *When Good Randomness Goes Bad: Virtual Machine Reset Vulnerabilities and Hedging Deployed Cryptography.* In *NDSS ’10.*

48. **Sylvain Ruhault.** 2017. *SoK: Security Models for Pseudo-Random Number Generators.* In *IACR Transactions on Symmetric Cryptography (TOSC), Vol. 1.*

49. **Dan Shumow and Niels Ferguson.** [n.d.]. *On the Possibility of a Back Door in the NIST SP800-90 Dual EC PRNG.* http://rump2007.cr.yp.to/15-shumow.pdf

50. **Falko Strenzke.** 2016. *An Analysis of OpenSSL’s Random Number Generator.* In *EUROCRYPT ’16.* Springer-Verlag New York, Inc., New York, NY, USA, 644–669. https://doi.org/10.1007/978-3-662-49890-3_25

51. **Wladimir J. van der Laan.** 2016. *TADAQUEOUS Moments.* http://laanwj.github.io/2016/09/01/tadaqueos.html

52. **Scott Yilek, Eric Rescorla, Hovav Shacham, Brandon Enright, and Stefan Savage.** 2009. *When Private Keys are Public: Results From the 2008 Debian OpenSSL Vulnerability.* In *Proceedings of IMC 2009,* Anja Feldmann and Laurent Mathy (Eds.). ACM Press, 15–27.

53. **Adam Young and Moti Yung.** 1997. *Kleptography: Using Cryptography Against Cryptography.* In *Eurocrypt, Vol. 97.* Springer, 62–74.

54. **Adam Young and Moti Yung.** 1997. *The Prevalence of Kleptographic Attacks on Discrete-Log Based Cryptosystems.* In *Annual International Cryptology Conference.* Springer, 264–276.

55. **zzz intro to the vpn 2010.** *Intro to the VPN Exploitation Process.* Media leak. http://www.spiegel.de/media/media-35515.pdf

### A. FortiOS V4 X9.31 Initialization Routine

```c
int initialize_X931() {
    char rng_state[16];
    char timestamp_buffer[16];
    int aes_key[4];
    int result = key_set;
    aes_key[0] = 0x6D66B1F3;
    aes_key[1] = 0x42726013;
    aes_key[2] = 0xAB1C06ED;
    aes_key[3] = 0x0262D4B8;

    if (!key_set)
        result = set_aeskey(aes_key);

    if (!state_set) {
        // Initial state setting removed for clarity
        save_state(rng_state);
        fill_timestamp(timestamp_buffer);
        result = x931(&timestamp_buffer, output_buffer, rng_state, 16);
    }
    return result;
}
```

### B. Supported Cipher Suites in FortiOS v4

#### Table 5: Supported TLS Cipher Suites in FortiOS v4
- tls_dhe_rsa_with_aes_256_cbc_sha
- tls_dhe_rsa_with_camellia_256_cbc_sha
- tls_rsa_with_aes_256_cbc_sha
- tls_rsa_with_camellia_256_cbc_sha
- tls_rsa_with_3des_ede_cbc_sha
- tls_dhe_rsa_with_aes_128_cbc_sha
- tls_dhe_rsa_with_seed_cbc_sha
- tls_dhe_rsa_with_camellia_128_cbc_sha
- tls_rsa_with_aes_128_cbc_sha
- tls_rsa_with_seed_cbc_sha
- tls_rsa_with_camellia_128_cbc_sha
- tls_rsa_with_rc4_128_sha
- tls_rsa_with_rc4_128_md5

#### Table 6: Supported IKEv1 Parameters in FortiOS v4
- **Cipher:** des, 3des, aes-128, aes-192, aes-256
- **PRF:** md5, sha1, sha256
- **Group:** dh_768, dh_1024, dh_1536
- **Authentication:** psk, rsa

#### Table 7: Supported IKEv2 Parameters in FortiOS v4
- **Cipher:** des, 3des, aes-128, aes-192, aes-256
- **PRF:** sha256, sha1, md5
- **MAC:** sha256, sha1, md5
- **Group:** dh_768, dh_1024, dh_1536, dh_2048