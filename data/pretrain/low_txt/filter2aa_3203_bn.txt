### Chapter 10 â€“ TCP/IP End-to-End Delivery

#### TCP SYN Segment to the Web Server

1. **Route Determination by Router 1:**
   - Router 1 performs route determination for the destination address `2001:DB8:0:48::3`.
   - The closest matching route is `2001:DB8:0:48::/64`.
   - Router 1 sets the next-hop address to `FE80::E` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

2. **Destination Cache Update by Router 1:**
   - Router 1 updates its destination cache with an entry for `2001:DB8:0:48::3`, setting the next-hop IPv6 address to `FE80::E` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

3. **Neighbor Cache Check by Router 1:**
   - Router 1 checks its neighbor cache for an entry with the IPv6 address `FE80::E` and does not find a match.

4. **Neighbor Solicitation by Router 1:**
   - Router 1 sends a Neighbor Solicitation message to the solicited node multicast IPv6 address `FF02::1:FF00:E`, querying the `2001:DB8:0:21::/64` subnet for the MAC address of the interface assigned the IPv6 address `FE80::E`.

5. **Neighbor Solicitation Reception by Router 3:**
   - Router 3, listening on the solicited node multicast address `FF02::1:FF00:E`, receives the Neighbor Solicitation message.
   - Router 3 adds an entry to its neighbor cache for the IPv6 address `FE80::B` and the MAC address of Router 1's interface on the `2001:DB8:0:21::/64` subnet.

6. **Neighbor Advertisement by Router 3:**
   - Router 3 sends a unicast Neighbor Advertisement message to Router 1.

7. **Neighbor Cache Update by Router 1:**
   - Router 1 updates its neighbor cache with an entry for the IPv6 address `FE80::E` and the MAC address of Router 3's interface on the `2001:DB8:0:21::/64` subnet.

8. **TCP SYN Segment Forwarding by Router 1:**
   - Router 1 forwards the unicast TCP SYN segment destined for `2001:DB8:0:48::3` to Router 3's MAC address on the `2001:DB8:0:21::/64` subnet.

9. **Route Determination by Router 3:**
   - Router 3 receives the TCP SYN segment and checks its destination cache for an entry for `2001:DB8:0:48::3` but does not find a match.
   - Router 3 performs route determination for the destination address `2001:DB8:0:48::3`.
   - The closest matching route is `2001:DB8:0:48::/64` (a directly attached network route).
   - Router 3 sets the next-hop address to the packet's destination address `2001:DB8:0:48::3` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

10. **Destination Cache Update by Router 3:**
    - Router 3 updates its destination cache with an entry for `2001:DB8:0:48::3`, setting the next-hop IPv6 address to `2001:DB8:0:48::3` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

11. **Neighbor Cache Check by Router 3:**
    - Router 3 checks its neighbor cache for an entry with the IPv6 address `2001:DB8:0:48::3` and does not find a match.

12. **Neighbor Solicitation by Router 3:**
    - Router 3 sends a Neighbor Solicitation message to the solicited node multicast IPv6 address `FF02::1:FF00:3`, querying the `2001:DB8:0:48::/64` subnet for the MAC address of the interface assigned the IPv6 address `2001:DB8:0:48::3`.

13. **Neighbor Solicitation Reception by the Web Server:**
    - The Web server, listening on the solicited node multicast address `FF02::1:FF00:3`, receives the Neighbor Solicitation message.
    - The Web server adds an entry to its neighbor cache for the IPv6 address `FE80::F` and the MAC address of Router 3's interface on the `2001:DB8:0:48::/64` subnet.

14. **Neighbor Advertisement by the Web Server:**
    - The Web server sends a unicast Neighbor Advertisement message to Router 3.

15. **Neighbor Cache Update by Router 3:**
    - Router 3 updates its neighbor cache with an entry for the IPv6 address `2001:DB8:0:48::3` and the MAC address of the Web server's interface on the `2001:DB8:0:48::/64` subnet.

16. **TCP SYN Segment Forwarding by Router 3:**
    - Router 3 forwards the unicast TCP SYN segment destined for `2001:DB8:0:48::3` to the MAC address of the Web server's interface on the `2001:DB8:0:48::/64` subnet.

17. **TCP SYN Segment Reception by the Web Server:**
    - The Web server receives the TCP SYN segment.

**Summary of End-to-End Delivery of the TCP SYN Segment:**
- The Web client sent the TCP SYN segment, and Routers 1 and 3 forwarded it over the `2001:DB8:0:13::/64`, `2001:DB8:0:21::/64`, and `2001:DB8:0:48::/64` subnets to the Web server.
- The Web client's destination cache has a new entry for `2001:DB8:0:48::3`.
- Router 1's destination cache has a new entry for `2001:DB8:0:48::3`. Router 1's neighbor cache has a new entry for `FE80::E`.
- Router 3's destination cache has an entry for `2001:DB8:0:48::3`. Router 3's neighbor cache has entries for `FE80::B` and `2001:DB8:0:48::3`.
- The Web server's neighbor cache has an entry for `FE80::F`.

### TCP SYN-ACK Segment to the Web Client

1. **Construction of TCP SYN-ACK Segment by the Web Server:**
   - The Web server constructs a TCP SYN-ACK segment with the source IPv6 address `2001:DB8:0:48::3` and the destination IPv6 address `2001:DB8:0:13::1`.

2. **Destination Cache Check by the Web Server:**
   - The Web server checks its destination cache for an entry for the IPv6 address `2001:DB8:0:13::1` but does not find a match.

3. **Route Determination by the Web Server:**
   - The Web server performs route determination to find the closest matching route for the destination IPv6 address `2001:DB8:0:13::1`.
   - The default route `::/0` is the closest matching route.
   - The Web server sets the next-hop IPv6 address to `FE80::F` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

4. **Destination Cache Update by the Web Server:**
   - The Web server updates its destination cache with an entry for `2001:DB8:0:13::1`, setting the next-hop IPv6 address to `FE80::F` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

5. **Neighbor Cache Check by the Web Server:**
   - The Web server checks its neighbor cache for an entry with the IPv6 address `FE80::F` and finds a match.

6. **TCP SYN-ACK Segment Forwarding by the Web Server:**
   - Using the neighbor cache entry for `FE80::F`, the Web server sends the unicast TCP SYN-ACK segment destined for `2001:DB8:0:13::1` to the MAC address of Router 3's interface on the `2001:DB8:0:48::/64` subnet.

7. **Destination Cache Check by Router 3:**
   - Router 3 receives the TCP SYN-ACK segment and checks its destination cache for an entry for `2001:DB8:0:13::1` but does not find a match.

8. **Route Determination by Router 3:**
   - Router 3 performs route determination for the destination address `2001:DB8:0:13::1`.
   - The closest matching route is `2001:DB8:0:13::/64`.
   - Router 3 sets the next-hop address to `FE80::B` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

9. **Destination Cache Update by Router 3:**
   - Router 3 updates its destination cache with an entry for `2001:DB8:0:13::1`, setting the next-hop IPv6 address to `FE80::B` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

10. **Neighbor Cache Check by Router 3:**
    - Router 3 checks its neighbor cache for an entry with the IPv6 address `FE80::B` and finds a match.

11. **TCP SYN-ACK Segment Forwarding by Router 3:**
    - Using the neighbor cache entry for `FE80::B`, Router 3 forwards the unicast TCP SYN-ACK segment destined for `2001:DB8:0:13::1` to Router 1's MAC address on the `2001:DB8:0:21::/64` subnet.

12. **Destination Cache Check by Router 1:**
    - Router 1 receives the TCP SYN-ACK segment and checks its destination cache for an entry for `2001:DB8:0:13::1` and finds a match.

13. **Next-Hop Determination by Router 1:**
    - Using the destination cache entry for `2001:DB8:0:13::1`, Router 1 sets the next-hop address to `2001:DB8:0:13::1` and the next-hop interface to the network adapter attached to the `2001:DB8:0:13::/64` subnet.

14. **Neighbor Cache Check by Router 1:**
    - Router 1 checks its neighbor cache for an entry with the IPv6 address `2001:DB8:0:13::1` and finds a match.

15. **TCP SYN-ACK Segment Forwarding by Router 1:**
    - Using the neighbor cache entry for `2001:DB8:0:13::1`, Router 1 forwards the unicast TCP SYN-ACK segment destined for `2001:DB8:0:13::1` to the MAC address of the Web client's interface on the `2001:DB8:0:13::/64` subnet.

16. **TCP SYN-ACK Segment Reception by the Web Client:**
    - The Web client receives the TCP SYN-ACK segment.

**Summary of End-to-End Delivery of the TCP SYN-ACK Segment:**
- The Web server sent the TCP SYN-ACK segment, and Routers 3 and 1 forwarded it over the `2001:DB8:0:48::/64`, `2001:DB8:0:21::/64`, and `2001:DB8:0:13::/64` subnets to the Web client.
- The Web server's destination cache has a new entry for `2001:DB8:0:13::1`.
- Router 3's destination cache has a new entry for `2001:DB8:0:13::1`.

### TCP ACK Segment to the Web Server

1. **Construction of TCP ACK Segment by the Web Client:**
   - The Web client constructs a TCP ACK segment with the source IPv6 address `2001:DB8:0:13::1` and the destination IPv6 address `2001:DB8:0:48::3`.

2. **Destination Cache Check by the Web Client:**
   - The Web client checks its destination cache for an entry for the IPv6 address `2001:DB8:0:48::3` and finds a match.

3. **Next-Hop Determination by the Web Client:**
   - Using the destination cache entry for `2001:DB8:0:48::3`, the Web client sets the next-hop address to `FE80::A` and the next-hop interface to the network adapter attached to the `2001:DB8:0:13::/64` subnet.

4. **Neighbor Cache Check by the Web Client:**
   - The Web client checks its neighbor cache for an entry with the IPv6 address `FE80::A` and finds a match.

5. **TCP ACK Segment Forwarding by the Web Client:**
   - Using the neighbor cache entry for `FE80::A`, the Web client sends the unicast TCP ACK segment destined for `2001:DB8:0:48::3` to the MAC address of Router 1's interface on the `2001:DB8:0:13::/64` subnet.

6. **Destination Cache Check by Router 1:**
   - Router 1 receives the TCP ACK segment and checks its destination cache for an entry for `2001:DB8:0:48::3` and finds a match.

7. **Next-Hop Determination by Router 1:**
   - Using the destination cache entry for `2001:DB8:0:48::3`, Router 1 sets the next-hop address to `FE80::E` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

8. **Neighbor Cache Check by Router 1:**
   - Router 1 checks its neighbor cache for an entry with the IPv6 address `FE80::E` and finds a match.

9. **TCP ACK Segment Forwarding by Router 1:**
   - Using the neighbor cache entry for `FE80::E`, Router 1 forwards the unicast TCP ACK segment destined for `2001:DB8:0:48::3` to Router 3's MAC address on the `2001:DB8:0:21::/64` subnet.

10. **Destination Cache Check by Router 3:**
    - Router 3 receives the TCP ACK segment and checks its destination cache for an entry for `2001:DB8:0:48::3` and finds a match.

11. **Next-Hop Determination by Router 3:**
    - Using the destination cache entry for `2001:DB8:0:48::3`, Router 3 sets the next-hop address to the packet's destination address `2001:DB8:0:48::3` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

12. **Neighbor Cache Check by Router 3:**
    - Router 3 checks its neighbor cache for an entry with the IPv6 address `2001:DB8:0:48::3` and finds a match.

13. **TCP ACK Segment Forwarding by Router 3:**
    - Using the neighbor cache entry for `2001:DB8:0:48::3`, Router 3 forwards the unicast TCP ACK segment destined for `2001:DB8:0:48::3` to the MAC address of the Web server's interface on the `2001:DB8:0:48::/64` subnet.

14. **TCP ACK Segment Reception by the Web Server:**
    - The Web server receives the TCP ACK segment.

15. **Connection Establishment Indication:**
    - Windows Sockets indicates to the Web browser that the requested TCP connection is complete.

**Summary of End-to-End Delivery of the TCP ACK Segment:**
- The Web client sent the TCP ACK segment, and Routers 1 and 3 forwarded it over the `2001:DB8:0:13::/64`, `2001:DB8:0:21::/64`, and `2001:DB8:0:48::/64` subnets to the Web server.

### HTTP Get Segment to the Web Server

1. **HTTP Get Message Construction by the Web Client:**
   - When the Web browser receives the indication that the TCP connection is complete, it constructs an HTTP Get message with the source IPv6 address `2001:DB8:0:13::1` and the destination IPv6 address `2001:DB8:0:48::3`, requesting the contents of the Web page from the Web server.

2. **Destination Cache Check by the Web Client:**
   - The Web client checks its destination cache for an entry for the IPv6 address `2001:DB8:0:48::3` and finds a match.

3. **Next-Hop Determination by the Web Client:**
   - Using the destination cache entry for `2001:DB8:0:48::3`, the Web client sets the next-hop address to `FE80::A` and the next-hop interface to the network adapter attached to the `2001:DB8:0:13::/64` subnet.

4. **Neighbor Cache Check by the Web Client:**
   - The Web client checks its neighbor cache for an entry with the IPv6 address `FE80::A` and finds a match.

5. **HTTP Get Message Forwarding by the Web Client:**
   - Using the neighbor cache entry for `FE80::A`, the Web client sends the unicast HTTP Get message destined for `2001:DB8:0:48::3` to the MAC address of Router 1's interface on the `2001:DB8:0:13::/64` subnet.

6. **Destination Cache Check by Router 1:**
   - Router 1 receives the HTTP Get message and checks its destination cache for an entry for `2001:DB8:0:48::3` and finds a match.

7. **Next-Hop Determination by Router 1:**
   - Using the destination cache entry for `2001:DB8:0:48::3`, Router 1 sets the next-hop address to `FE80::E` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

8. **Neighbor Cache Check by Router 1:**
   - Router 1 checks its neighbor cache for an entry with the IPv6 address `FE80::E` and finds a match.

9. **HTTP Get Message Forwarding by Router 1:**
   - Using the neighbor cache entry for `FE80::E`, Router 1 forwards the unicast HTTP Get message destined for `2001:DB8:0:48::3` to Router 3's MAC address on the `2001:DB8:0:21::/64` subnet.

10. **Destination Cache Check by Router 3:**
    - Router 3 receives the HTTP Get message and checks its destination cache for an entry for `2001:DB8:0:48::3` and finds a match.

11. **Next-Hop Determination by Router 3:**
    - Using the destination cache entry for `2001:DB8:0:48::3`, Router 3 sets the next-hop address to the packet's destination address `2001:DB8:0:48::3` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

12. **Neighbor Cache Check by Router 3:**
    - Router 3 checks its neighbor cache for an entry with the IPv6 address `2001:DB8:0:48::3` and finds a match.

13. **HTTP Get Message Forwarding by Router 3:**
    - Using the neighbor cache entry for `2001:DB8:0:48::3`, Router 3 forwards the unicast HTTP Get message destined for `2001:DB8:0:48::3` to the MAC address of the Web server's interface on the `2001:DB8:0:48::/64` subnet.

14. **HTTP Get Message Reception by the Web Server:**
    - The Web server receives the HTTP Get message.

**Summary of End-to-End Delivery of the HTTP Get Segment:**
- The Web client sent the HTTP Get message, and Routers 1 and 3 forwarded it over the `2001:DB8:0:13::/64`, `2001:DB8:0:21::/64`, and `2001:DB8:0:48::/64` subnets to the Web server.

### HTTP Get-Response Segment to the Web Client

1. **HTTP Get-Response Message Construction by the Web Server:**
   - The Web server constructs an HTTP Get-Response message with the source IPv6 address `2001:DB8:0:48::3` and the destination IPv6 address `2001:DB8:0:13::1`.

2. **Destination Cache Check by the Web Server:**
   - The Web server checks its destination cache for an entry for the IPv6 address `2001:DB8:0:13::1` and finds a match.

3. **Next-Hop Determination by the Web Server:**
   - Using the destination cache entry for `2001:DB8:0:13::1`, the Web server sets the next-hop IPv6 address to `FE80::F` and the next-hop interface to the network adapter attached to the `2001:DB8:0:48::/64` subnet.

4. **Neighbor Cache Check by the Web Server:**
   - The Web server checks its neighbor cache for an entry with the IPv6 address `FE80::F` and finds a match.

5. **HTTP Get-Response Message Forwarding by the Web Server:**
   - Using the neighbor cache entry for `FE80::F`, the Web server sends the unicast HTTP Get-Response message destined for `2001:DB8:0:13::1` to the MAC address of Router 3's interface on the `2001:DB8:0:48::/64` subnet.

6. **Destination Cache Check by Router 3:**
   - Router 3 receives the HTTP Get-Response message and checks its destination cache for an entry for `2001:DB8:0:13::1` and finds a match.

7. **Next-Hop Determination by Router 3:**
   - Using the destination cache entry for `2001:DB8:0:13::1`, Router 3 sets the next-hop address to `FE80::B` and the next-hop interface to the network adapter attached to the `2001:DB8:0:21::/64` subnet.

8. **Neighbor Cache Check by Router 3:**
   - Router 3 checks its neighbor cache for an entry with the IPv6 address `FE80::B` and finds a match.

9. **HTTP Get-Response Message Forwarding by Router 3:**
   - Using the neighbor cache entry for `FE80::B`, Router 3 forwards the unicast HTTP Get-Response message destined for `2001:DB8:0:13::1` to Router 1's MAC address on the `2001:DB8:0:21::/64` subnet.

10. **Destination Cache Check by Router 1:**
    - Router 1 receives the HTTP Get-Response message and checks its destination cache for an entry for `2001:DB8:0:13::1` and finds a match.

11. **Next-Hop Determination by Router 1:**
    - Using the destination cache entry for `2001:DB8:0:13::1`, Router 1 sets the next-hop address to `2001:DB8:0:13::1` and the next-hop interface to the network adapter attached to the `2001:DB8:0:13::/64` subnet.

12. **Neighbor Cache Check by Router 1:**
    - Router 1 checks its neighbor cache for an entry with the IPv6 address `2001:DB8:0:13::1` and finds a match.

13. **HTTP Get-Response Message Forwarding by Router 1:**
    - Using the neighbor cache entry for `2001:DB8:0:13::1`, Router 1 forwards the unicast HTTP Get-Response message destined for `2001:DB8:0:13::1` to the MAC address of the Web client's interface on the `2001:DB8:0:13::/64` subnet.

14. **HTTP Get-Response Message Reception by the Web Client:**
    - The Web client receives the HTTP Get-Response message.

15. **Web Page Construction:**
    - The Web browser constructs the visual representation of the Web page at `http://web1.example.com/example.htm`.

**Summary of End-to-End Delivery of the HTTP Get-Response Segment:**
- The Web server sent the HTTP Get-Response message, and Routers 3 and 1 forwarded it over the `2001:DB8:0:48::/64`, `2001:DB8:0:21::/64`, and `2001:DB8:0:13::/64` subnets to the Web client.

### Chapter Summary

The key information in this chapter is as follows:

- **End-to-End Delivery Process:**
  - The end-to-end delivery process consists of a source host process, a router forwarding process, and a destination host process.

- **IPv4 Packet Transmission:**
  - To send an IPv4 packet, an IPv4 source host checks its route cache (performing route determination if needed) and then checks its ARP cache (performing address resolution if needed). When the source host has determined the MAC address that corresponds to the next-hop address for the IPv4 packet, the host sends the packet to the destination or to an intermediate router.
  - To forward an IPv4 packet, an IPv4 router decrements the TTL, updates the checksum, checks its route cache (performing route determination if needed) and then checks its ARP cache (performing address resolution if needed). When the router has determined the MAC address that corresponds to the next-hop address for the IPv4 packet, the router forwards the packet to the destination or to another router.
  - To receive an IPv4 packet, an IPv4 destination host verifies that the packet is addressed to an IPv4 address that has been assigned to the host and then passes the IPv4 payload to the appropriate upper layer protocol. For TCP and UDP traffic, the host passes the data to the listening application.

- **IPv6 Packet Transmission:**
  - To send an IPv6 packet, an IPv6 source host checks its destination cache (performing route determination if needed) and then checks its neighbor cache (performing address resolution if needed). When the source host has determined the MAC address that corresponds to the next-hop address for the IPv6 packet, the host sends the packet to the destination or to an intermediate router.
  - To forward an IPv6 packet, an IPv6 router decrements the hop limit, checks its destination cache (performing route determination if needed) and then checks its neighbor cache (performing address resolution if needed). When the router has determined the MAC address that corresponds to the next-hop address for the IPv6 packet, the router forwards the packet to the destination or to another router.
  - To receive an IPv6 packet, an IPv6 destination host verifies that the packet is addressed to an IPv6 address assigned to the host and then passes the IPv6 payload to the appropriate upper layer protocol. For TCP and UDP traffic, the host passes the data to the listening application.

### Chapter Glossary

- **ARP Cache:** A table for each interface of static or dynamically resolved IPv4 addresses and their corresponding MAC addresses.
- **Default Gateway:** The IPv4 address of a neighboring IPv4 router. Configuring a default gateway creates a default route in the IPv4 routing table. The default gateway is an important parameter for TCP/IP in Windows.
- **Default Route:** A route that is used when the routing table contains no other routes for the destination. For example, if a router or end system cannot find a network route or host route for the destination, the default route is used. The default route is used to simplify the configuration of end systems or routers. For IPv4 routing tables, the default route is the route with the network destination of `0.0.0.0` and the netmask of `0.0.0.0`. For IPv6 routing tables, the default route has the prefix `::/0`.
- **Destination Cache:** A table in which IPv6 stores the next-hop IPv6 address and interface for recently determined destination IPv6 addresses.
- **Longest Matching Route:** The algorithm by which the route determination process selects the routes in the routing table that most closely match the destination address of the packet being sent or forwarded.
- **Neighbor Cache:** A cache that every IPv6 node maintains to store the on-subnet IPv6 addresses of neighbors and their corresponding MAC addresses. The neighbor cache is equivalent to the ARP cache in IPv4.
- **Next-Hop Determination:** The process of determining the next-hop address and interface for sending or forwarding a packet.