### Comparison of LPBcast and Adaptive Algorithm Performance

In our experimental runs, we compared the performance of the LPBcast algorithm with that of our adaptive algorithm. As expected, the atomicity figure for LPBcast declined when the system resources could not handle the input load. In contrast, the adaptive mechanisms maintained a satisfactory level of atomicity. It is also noteworthy that the atomicity values in the experiments were slightly higher than in the simulations where all nodes reduced their buffer space. Specifically, with buffers capable of holding 60 messages, we observed an atomicity of 87% in simulations and 92% in experiments. This indicates that the algorithm effectively utilizes the available local buffer capacity, thereby benefiting from the buffer space at nodes that did not experience resource reduction.

### Experimental Results

The following figures illustrate the performance metrics:

**Figure 8: Reliability Degradation**
- **(a) Average Number of Receivers:**
  - The average number of receivers over time for both LPBcast and the adaptive algorithm.
- **(b) Allowed Rates:**
  - The allowed rates for message transmission under real and ideal conditions.

**Figure 9: Dynamic Buffer Size**
- **(a) Atomicity:**
  - The percentage of atomically delivered messages over time for both LPBcast and the adaptive algorithm.
- **(b) Number of Atomically Delivered Messages:**
  - The number of messages delivered atomically as a function of buffer size.

### Related Work

Gossip-based algorithms have been an active area of research [3, 4, 9, 8, 6], with several optimizations proposed to achieve various goals. These optimizations can be combined with our proposal, as discussed below.

**Efficient Buffering Technique:**
- A technique for efficient buffering was proposed in [10] in the context of Bimodal multicast [1]. This method determines which group members should buffer messages for long-term recovery. Each message is associated with a fixed number of bufferers, identified by hashing the message identifier. Nodes needing to recover from message loss contact these bufferers directly. While this approach limits the buffering required for recovery, it assumes full knowledge of group membership. Our approach, on the other hand, focuses on the initial buffering requirements and adaptation for gossip-based algorithms, and can be applied to algorithms with partial membership knowledge.

**Buffer Management:**
- Buffer management has also been addressed in [7] to efficiently purge gossip buffers and garbage collect messages. This method uses the age of messages, determined by the number of gossip rounds, to estimate the level of message propagation. The goal is to provide a good heuristic for buffer management, but it does not adapt to varying resource availability. In our approach, we use an age-based heuristic to manage buffers.

**Message Repair:**
- Instead of reducing the sender’s rate, lost messages can be repaired from a log if slower senders are expected to recover [14]. However, this requires large buffers at logging servers and may result in delayed message delivery.

**Network Congestion:**
- Network congestion can lead to correlated message loss, degrading reliability. Gossip-based algorithms typically use more network resources compared to deterministic reliable broadcast algorithms. Using message semantics to discard obsolete messages has been proposed to ensure reliability for recent messages [11].

### Concluding Remarks

This paper introduces a novel adaptation mechanism for gossip-based algorithms. The mechanism allows each node to adjust its gossiping rate based on the available resources within the system and to adjust the message emission rate according to global congestion. This results in improved reliability properties of the broadcast service. Our scheme is designed for settings with heterogeneous and dynamically changing node resources, where offline parameter adjustment is impractical. The mechanism is scalable, as it does not require explicit interaction or information collection about other nodes. Adaptation information is disseminated through the normal gossip of data messages. 

Our experimental validation, using both simulations and a 60-workstation network, confirmed the effectiveness of the mechanism. It is important to note that our adaptation mechanism aims to prevent future message omissions rather than recover from past ones. Additional techniques are needed for message recovery. The mechanism adapts to the node with the smallest amount of resources but can be extended to consider alternative criteria, such as the smallest buffers above a minimum threshold, to prevent a single node from affecting the entire group's performance.

### Acknowledgment

We are grateful to Petr Kouznetsov and Patrick Eugster for their support in developing the LPBcast and its prototype.

### References

[1] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, and Y. Minsky. Bimodal multicast. ACM Transactions on Computer Systems, 17(2):41–88, May 1999.

[2] P. Eugster, R. Guerraoui, and C. Damm. On objects and events. In Proceedings of the Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA 2001), Oct. 2001.

[3] P. Eugster, R. Guerraoui, S. Handrukande, A.-M. Kermarrec, and P. Kouznetsov. Lightweight probabilistic broadcast. In Proceedings of IEEE Intl. Conf. on Dependable Systems and Networks (DSN’2001), 2001.

[4] A. Ganesh, A.-M. Kermarrec, and L. Massoulie. Peer-to-peer membership management for gossip-based protocols. IEEE Transactions on Computers, Feb, 2003.

[5] K. Guo. Scalable Message Stability Detection Protocols. PhD thesis, Cornell University, Computer Science, May 1998.

[6] I. Gupta, R. van Renesse, and K. Birman. Scalable fault-tolerant aggregation in large process groups. In Intl. Conf. Networked Computing and Applications (NCA’2001), 2001.

[7] P. Kouznetsov, R. Guerraoui, S. Handurukande, and A.-M. Kermarrec. Reducing noise in gossip-based reliable broadcast. In Proceedings of IEEE Intl. Symposium on Reliable Distributed Systems (SRDS 2001), New Orleans, USA, Oct. 2001.

[8] M. Lin, K. Marzullo, and S. Masini. Gossip versus deterministic flooding: low-message overhead and high-reliability for broadcasting on small networks. In Proceedings of Intl. Symposium on Distributed Computing (DISC 2000), Toledo, Spain, Oct. 2000.

[9] M.-J. Lin and K. Marzullo. Directional gossip: Gossip in a wide area network. Technical Report CS1999-0622, University of California, San Diego, Computer Science and Engineering, June 16, 1999.

[10] O. Ozkasap, R. van Renesse, K. Birman, and Z. Xiao. Efficient buffering in reliable multicast protocols. In Proceedings of Intl. Workshop on Networked Group Communication, Nov. 1999.

[11] J. Pereira, L. Rodrigues, R. Oliveira, and A.-M. Kermarrec. Probabilistic semantically reliable multicast. In Proceedings of Intl. Conf. Networked Computing and Applications (NCA’2001), 2001.

[12] D. Skeen. Vitria’s Publish-Subscribe Architecture: Publish-Subscribe Overview. http://www.vitria.com, 1998.

[13] R. Strom, G. Banavar, T. Chandra, M. Kaplan, K. Miller, B. Mukherjee, D. Sturman, and M. Ward. Gryphon: An information flow based approach to message brokering. In Proceedings of Intl. Symposium on Software Reliability Engineering (ISSRE ’98), Nov. 1998.

[14] Q. Sun and D. Sturman. A gossip-based reliable multicast for large-scale high throughput application. In Proceedings of IEEE Intl. Conf. on Dependable Systems and Networks (DSN’2000), 2000.