# CCS'17 Tutorial Abstract: SGX Security and Privacy

**Authors:**
- Taesoo Kim, Georgia Institute of Technology
- Zhiqiang Lin, The University of Texas at Dallas
- Chia-che Tsai, Stony Brook University & UC Berkeley

## Abstract
In this tutorial, we will introduce the fundamental concepts of Intel Software Guard Extensions (SGX), including its development workflows, potential applications, and performance characteristics. We will then delve into known security concerns, such as cache/branch side-channel attacks and memory safety issues, along with corresponding defenses, illustrated through various working demos. Finally, we will discuss different approaches to quickly start writing SGX applications, particularly by leveraging library OSes or thin shielding layers, and evaluate the pros and cons of each approach in terms of security and usability.

## CCS Concepts
- **Security and privacy**: Systems security, Security in hardware

## Keywords
- Intel SGX, TEE, Library OS

## 1. Introduction
Intel Software Guard Extensions (SGX) is a revolutionary feature introduced in recent Intel Skylake CPUs, designed to enable secure and trustworthy computing in hostile environments. At a high level, SGX provides a set of new instructions that can create secure regions, or enclaves, to protect data from unauthorized access or tampering, even from higher-privileged software like an operating system (OS) or hypervisor.

However, SGX is not without its challenges. It lacks comprehensive support from the OS and libraries, which can lead to the introduction of naive yet preventable bugs, often resulting in critical security vulnerabilities within enclave programs [2]. Additionally, designing a correct and secure SGX infrastructure is complex, as enclave programs rely on the underlying OS for support while excluding it from the trusted computing base (TCB). This unconventional dependency makes various attack vectors, typically considered impractical in traditional settings, more immediate and practical, especially in cloud environments.

In this tutorial, we will cover the basics of Intel SGX, including workflows, potential applications, and performance characteristics. We will also address security concerns, such as cache/branch side-channel attacks [3], controlled-channel attacks [8], and traditional memory safety issues [2, 4], and discuss potential defenses [5] with various demos. Lastly, we will introduce methods to quickly start writing SGX applications on Linux, particularly by using library OSes [7] or thin shielding layers [1, 6], and evaluate the pros and cons of each approach in terms of security and usability.

## References
[1] Arnautox, S., et al. SCONE: Secure Linux containers with Intel SGX. In Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Savannah, GA, Nov. 2016).

[2] Lee, J., et al. Hacking in Darkness: Return-oriented Programming against Secure Enclaves. In Proceedings of the 26th USENIX Security Symposium (Security) (Vancouver, Canada, Aug. 2017).

[3] Lee, S., et al. Inferring Fine-grained Control Flow Inside SGX Enclaves with Branch Shadowing. In Proceedings of the 26th USENIX Security Symposium (Security) (Vancouver, Canada, Aug. 2017).

[4] Seo, J., et al. SGX-Shield: Enabling Address Space Layout Randomization for SGX Programs. In Proceedings of the 2017 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2017).

[5] Shih, M.-W., et al. T-SGX: Eradicating Controlled-Channel Attacks Against Enclave Programs. In Proceedings of the 2017 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2017).

[6] Shinde, S., et al. Panoply: Low-TCB Linux applications with SGX enclaves. In Proceedings of the 2017 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2017).

[7] Tsai, C.-C., et al. Graphene-SGX: A practical library OS for unmodified applications on SGX. In Proceedings of the 2017 USENIX Annual Technical Conference (ATC) (Santa Clara, CA, July 2017).

[8] Xu, Y., et al. Controlled-channel attacks: Deterministic side channels for untrusted operating systems. In Proceedings of the 36th IEEE Symposium on Security and Privacy (Oakland) (San Jose, CA, May 2015).

## Author Biographies

**Taesoo Kim** is an Assistant Professor in the School of Computer Science at Georgia Tech and the director of the Georgia Tech Systems Software and Security Center (GTS3). His research focuses on building secure systems with clear principles, including design, implementation analysis, and trusted component separation. He holds a BS from KAIST (2009), a SM (2011), and a Ph.D. (2014) from MIT in Computer Science.

**Zhiqiang Lin** is an Associate Professor of Computer Science at The University of Texas at Dallas. He received his Ph.D. from Purdue University in 2011. His research interests include systems and software security, with a focus on developing program analysis techniques for securing both application programs, such as mobile apps, and underlying system software like OSs and hypervisors. Dr. Lin has received the NSF CAREER Award and the AFOSR Young Investigator Award.

**Chia-Che Tsai** is a Ph.D. candidate at Stony Brook University and will soon join the RISE Lab at UC Berkeley as a postdoc researcher. He will also join the Computer Science and Engineering department at Texas A&M University in Fall 2018 as a faculty member. His research interests lie in building OSes and runtimes that balance usability, security, and performance. He is the main contributor to the Graphene library OS, an open-source framework for reusing unmodified Linux applications on Intel SGX and other host options.

---

**Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s).**

**CCS '17, October 30-November 3, 2017, Dallas, TX, USA**

**Â© 2017 Copyright held by the owner/author(s).**

**ACM ISBN 978-1-4503-4946-8/17/10.**

**https://doi.org/10.1145/3133956.3136068**