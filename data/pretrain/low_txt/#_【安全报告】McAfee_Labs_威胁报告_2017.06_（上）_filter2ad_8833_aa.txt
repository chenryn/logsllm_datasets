# 安全报告：McAfee Labs 威胁报告 2017.06（上）

## 译文声明
本文为翻译文章，原文来源：mcafee.com。译文仅供参考，具体表达及含义以原文为准。

## 译者信息
- 译者：[ureallyloveme](http://bobao.360.cn/member/contribute?uid=2586341479)
- 预估稿费：200RMB
- 投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

## 概要

### 恶意软件规避技术和发展趋势
自上世纪80年代以来，恶意软件开发者一直在尝试规避安全产品。第一款成功将自身代码加密的恶意软件标志着这一进程的开始。如今，数百种反安全、反沙盒和反分析的规避技术已被广泛采用。本部分将探讨一些最强大的规避技术，介绍黑市中现成的规避工具，讨论当前流行的恶意软件家族如何利用这些技术，并展望未来的发展趋势，包括基于机器学习和硬件的规避方法。

### 不识庐山真面目：隐写术面对的隐蔽威胁
隐写术是一种历史悠久的信息隐藏技术，从古希腊到现代网络攻击，人们总是在看似平常的对象中隐藏秘密消息。在数字世界中，这种技术常用于图像、音频、视频或文本文件中传递信息。本节将深入探讨隐写术的历史、常用方法及其在流行恶意软件中的应用，并提供防止此类攻击的策略。

### 密码盗用程序“Fareit”的增长性危险
随着企业和个人对密码保护系统的依赖日益增加，密码窃取成为网络犯罪分子的重要目标。本部分将详细分析著名的密码窃取恶意软件Fareit，涵盖其从2011年起的演变历程、感染途径、内部运作机制以及在2016年美国总统选举期间的作用。同时，我们还将提供一些实用建议，帮助用户防范此类攻击。

### 恶意软件的规避技术和发展趋势 — Thomas Roccia
过去十年间，技术进步显著改变了我们的生活方式。计算机已成为日常生活中不可或缺的一部分，而数据的价值也日益凸显。这使得数据盗窃行为在全球范围内呈几何级数增长。恶意软件最初作为一种技术挑战而被开发出来，但很快就被用于数据窃取，从而催生了网络犯罪行业。作为回应，信息安全公司如McAfee迅速组建了防御团队并部署了反恶意软件系统。然而，恶意软件开发者也在不断尝试新的规避方法。本主题将详细介绍当今最强大和常见的规避技术，并解释恶意软件作者如何使用它们来实现其目标。

### 为什么要使用规避技术？
为了执行恶意操作，攻击者需要创建能够绕过检测的恶意软件。这是一场持续不断的攻防战，其中涉及攻击者对安全技术和实践的监测与应对。规避技术可以分为三大类：反安全技术、反沙箱技术和反分析技术。先进的恶意软件样本通常会综合运用多种技术以提高逃避检测的能力。因此，了解这些规避技术对于确保安全措施的有效性至关重要。

### 定义
网络安全领域有许多专业术语，以下是其中一些常见概念：
- **Crypters**：通过加密和解密过程使恶意软件难以被静态分析检测。
- **Packers**：压缩恶意软件文件以逃避检测。
- **Binders**：将一个或多个恶意文件捆绑在一起。
- **Pumpers**：增大文件体积以绕过反恶意软件引擎。
- **FUD (Fully Undetectable)**：完全无法被探测的恶意软件。
- **Stub**：包含加载原始恶意文件所需的例程。
- **Unique Stub Generator**：为每个实例生成独特的Stub。
- **Fileless Malware**：不向磁盘写入文件而是直接插入内存。
- **Obfuscation**：混淆代码以增加逆向工程难度。
- **Junk Code**：添加无用代码以迷惑分析者。
- **Anti’s**：指所有用于绕过或禁用安全工具的技术。
- **Virtual Machine Packers**：使用虚拟机技术打包恶意软件。

### 无需编码的规避技术
即使是没有编程经验的网络罪犯也能利用现有的规避工具。这导致了一个活跃且易于访问的市场，许多卖家将多种规避技术集成到单一工具中，并在地下市场上出售给有经验的恶意软件开发者或支持大型商业活动的人士。

希望这些优化后的段落能更好地传达原文的意思，并提高整体的专业性和可读性。