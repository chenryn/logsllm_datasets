### Figures and Performance Comparisons

**Figure 4: Comparison of DA-SBCD Algorithm with Other Botnet Community Detection Algorithms on the Social Honeypot Dataset**

- **F-measure (c)**
  - Parameter µ: 0.2, 0.4, 0.6, 0.8, 1.0
  - Algorithms: DA-SBCD, SBCD, SpamCom, Botnet Discovery
  - F-measure values: 90, 80, 70, 60, 50, 40, 30

- **G-measure (d)**
  - Parameter µ: 0.2, 0.4, 0.6, 0.8, 1.0
  - Algorithms: DA-SBCD, SBCD, SpamCom, Botnet Discovery
  - G-measure values: 90, 80, 70, 60, 50, 40, 30

**Figure 5: Performance of DA-SBCD Algorithm on Two Twitter Datasets in Terms of NMI**

- **(a) Social Honeypot**
  - Parameter µ: 0.2, 0.4, 0.6, 0.8, 1.0
  - Algorithms: DA-SBCD, SBCD, SpamCom, Botnet Discovery
  - NMI values: 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1

- **(b) The Fake Project**
  - Parameter µ: 0.2, 0.4, 0.6, 0.8, 1.0
  - Algorithms: DA-SBCD, SBCD, SpamCom, Botnet Discovery
  - NMI values: 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1

### Performance Analysis

The proposed DA-SBCD algorithm considers both similarity and trust values, which are provided as an input matrix \([S, T]^T\) to the deep autoencoder model. A parameter \(\alpha\) is introduced, where \(0 < \alpha < 1\). When \(\mu > 0.3\), DA-SBCD achieves better precision compared to SpamCom and Botnet Discovery methods. As \(\mu\) increases, the performance in terms of precision, recall, F-measure, and G-measure for all social botnet community detection algorithms also improves. This is because social bots attempt to establish social relationships with legitimate participants.

Moreover, DA-SBCD provides a 2-4% improvement in precision over the SBCD algorithm. This is due to the ability of DA-SBCD to identify different types of malicious activities using a deep autoencoder with a random-walk-based trust model and similarity among participants.

For the Social Honeypot dataset, DA-SBCD shows an improvement of about 6% in precision, 3% in recall, and 3% in F-measure over the SpamCom algorithm. On average, the performance of the proposed DA-SBCD algorithm is improved by around 3% over existing algorithms. The F-measure results demonstrate that DA-SBCD outperforms other existing methods such as SpamCom [3] and Botnet Discovery [23] for social botnet community detection.

Figures 5a and 5b compare the DA-SBCD algorithm with SBCD, SpamCom, and Botnet Discovery in terms of NMI for different values of \(\mu\) ranging from 0 to 1. DA-SBCD outperforms other existing social botnet detection algorithms on both Twitter datasets considered, providing a 4-8% improvement in NMI values. For the Social Honeypot dataset, DA-SBCD achieved the highest NMI value of 0.75 when \(\mu = 0.7\), which is a significant improvement over Botnet Discovery. Although SpamCom performs better than Botnet Discovery, it still lags behind DA-SBCD. This is because existing social botnet community detection algorithms learn only from a single-layered representation of data, while DA-SBCD learns from multiple deep layers. Additionally, DA-SBCD integrates both trust and similarity values, adjusting the parameter \(\alpha\) for better performance across different datasets. In the deep autoencoder model, the encoding phase of the hidden layer focuses on participants with high behavioral similarity edges, enhancing the accuracy of botnet detection.

### Conclusion

This paper proposes a novel two-phase model for efficiently detecting social botnet communities (i.e., malicious participants) in the Twitter network. The first phase, called the community formation phase, uses the Social Botnet Community Detection (SBCD) algorithm to distinguish legitimate participants among social botnet communities. The second phase, called the community reconstruction phase, involves the Deep Autoencoder based Social Botnet Community Detection (DA-SBCD) algorithm, where the output of the first phase is used as input to the autoencoder model to classify different types of social botnet communities with higher accuracy. Experiments conducted on two Twitter datasets, the Social Honeypot dataset and The Fake Project dataset, show that the proposed DA-SBCD algorithm outperforms not only our SBCD algorithm but also two existing botnet community detection methods, such as SpamCom and Botnet Discovery, in terms of normalized mutual information (NMI), precision, recall, F-measure, and G-measure. Specifically, DA-SBCD achieves around 90% precision and up to 8% improvement in NMI over existing social botnet detection algorithms.

As future work, we plan to investigate the dynamic behavior of malicious social bots by considering their spatio-temporal features. We also plan to study the influence of botnet communities on online rating and recommendation systems.

### Acknowledgments

The work of S. K. Das is partially supported by NSF grants under award numbers CNS-181894, CCF-1725755, and CNS-1545050.

### References

[1] Muhammad Al-Qurishi, M Shamim Hossain, Majed Alrubaian, Sk Md Mizanur Rahman, and Atif Alamri. 2017. Leveraging analysis of user behavior to identify malicious activities in large-scale social networks. IEEE Transactions on Industrial Informatics 14, 2 (2017), 799–813.
[2] Al-Zoubi Ala’M, Hossam Faris, Mohammad A Hassonah, et al. 2018. Evolving Support Vector Machines using Whale Optimization Algorithm for spam profiles detection on online social networks in different lingual contexts. Knowledge-Based Systems 153 (2018), 91–104.
[3] PV Bindu, Rahul Mishra, and P Santhi Thilagam. 2018. Discovering spammer communities in twitter. Journal of Intelligent Information Systems 51, 3 (2018), 503–527.
[4] Zi Chu, Steven Gianvecchio, Haining Wang, and Sushil Jajodia. 2012. Detecting automation of twitter accounts: Are you a human, bot, or cyborg? IEEE Trans. on Dependable and Secure Computing 9, 6 (2012), 811–824.
[5] Stefano Cresci, Roberto Di Pietro, Marinella Petrocchi, Angelo Spognardi, and Maurizio Tesconi. 2017. The paradigm-shift of social spambots: Evidence, theories, and tools for the arms race. In Proceedings of the 26th International Conference on World Wide Web Companion. International World Wide Web Conferences Steering Committee, 963–972.
[6] Brian Eriksson, Gautam Dasarathy, Aarti Singh, and Rob Nowak. 2011. Active clustering: Robust and efficient hierarchical clustering using adaptively selected similarities. In Proceedings of the Fourteenth International Conference on Artificial Intelligence and Statistics. 260–268.
[7] Kanchan Hans, Laxmi Ahuja, and SK Muttoo. 2017. Detecting redirection spam using multilayer perceptron neural network. Soft Computing 21, 13 (2017), 3803–3814.
[8] Jinyuan Jia, Binghui Wang, and Neil Zhenqiang Gong. 2017. Random walk based fake account detection in online social networks. In Dependable Systems and Networks (DSN), 2017 47th Annual IEEE/IFIP International Conference on. IEEE, 273–284.
[9] Sneha Kudugunta and Emilio Ferrara. 2018. Deep neural networks for bot detection. Information Sciences 467 (2018), 312 – 322.
[10] Kyumin Lee, Brian David Eoff, and James Caverlee. 2011. Seven months with the devils: A long-term study of content polluters on twitter. In Fifth International AAAI Conference on Weblogs and Social Media.
[11] SJ Lee, Paul Yoo, TA Asyhari, Y Jhi, L Chermak, CY Yeun, and K Taha. 2020. IMPACT: Impersonation attack detection via edge computing using deep autoencoder and feature abstraction. IEEE Access (2020).
[12] Greeshma Lingam, Rashmi Ranjan Rout, and DVLN Somayajulu. 2018. Detection of Social Botnet using a Trust Model based on Spam Content in Twitter Network. In 2018 IEEE 13th International Conference on Industrial and Information Systems (ICIIS). IEEE, 280–285.
[13] Greeshma Lingam, Rashmi Ranjan Rout, and DVLN Somayajulu. 2019. Adaptive deep Q-learning model for detecting social bots and influential users in online social networks. Applied Intelligence (2019), 1–18.
[14] Octavio Loyola-González, Raúl Monroy, Jorge Rodríguez, Armando López-Cuevas, and Javier Israel Mata-Sánchez. 2019. Contrast Pattern-Based Classification for Bot Detection on Twitter. IEEE Access 7 (2019), 45800–45817.
[15] Giseop Noh, Hayoung Oh, Kyu-haeng Lee, and Chong-kwon Kim. 2015. Toward trustworthy social network services: A robust design of recommender systems. Journal of Communications and Networks 17, 2 (2015), 145–156.
[16] Fereshteh-Azadi Parand, Hossein Rahimi, and Mohsen Gorzin. 2016. Combining fuzzy logic and eigenvector centrality measure in social network analysis. Physica A: Statistical Mechanics and its Applications 459 (2016), 24–31.
[17] Peining Shi, Zhiyong Zhang, and Kim-Kwang Raymond Choo. 2019. Detecting Malicious Social Bots Based on Clickstream Sequences. IEEE Access 7 (2019), 28855–28862.
[18] Gianluca Stringhini, Manuel Egele, Christopher Kruegel, and Giovanni Vigna. 2012. Poultry markets: on the underground economy of twitter followers. ACM SIGCOMM Computer Communication Review 42, 4 (2012), 527–532.
[19] Gianluca Stringhini, Gang Wang, Manuel Egele, Christopher Kruegel, Giovanni Vigna, Haitao Zheng, and Ben Y Zhao. 2013. Follow the green: growth and dynamics in twitter follower markets. In Proceedings of the 2013 conference on Internet measurement conference. ACM, 163–176.
[20] VS Subrahmanian, Amos Azaria, Skylar Durst, Vadim Kagan, Aram Galstyan, Kristina Lerman, Linhong Zhu, Emilio Ferrara, Alessandro Flammini, and Filippo Menczer. 2016. The DARPA Twitter bot challenge. Computer 49, 6 (2016), 38–46.
[21] Binghui Wang, Jinyuan Jia, Le Zhang, and Neil Zhenqiang Gong. 2018. Structure-based sybil detection in social networks via local rule-based propagation. IEEE Transactions on Network Science and Engineering (2018).
[22] Feifan Wang, Baihai Zhang, and Senchun Chai. 2019. Deep Auto-encoded Clustering Algorithm for Community Detection in Complex Networks. Chinese Journal of Electronics 28, 3 (2019), 489–496.
[23] Jing Wang and Ioannis Ch Paschalidis. 2016. Botnet detection based on anomaly and community detection. IEEE Transactions on Control of Network Systems 4, 2 (2016), 392–404.
[24] Wei Wei, Fengyuan Xu, Chiu C Tan, and Qun Li. 2013. SybilDefender: A defense mechanism for sybil attacks in large social networks. IEEE Trans. on Parallel and Distributed Systems 24, 12 (2013), 2492–2502.
[25] Jianshe Wu, Long Zhang, Yong Li, and Yang Jiao. 2016. Partition signed social networks via clustering dynamics. Physica A: Statistical Mechanics and its Applications 443 (2016), 568–582.
[26] Guanhua Yan. 2013. Peri-Watchdog: Hunting for hidden botnets in the periphery of online social networks. Computer Networks 57, 2 (2013), 540–555.
[27] Zhi Yang, Jilong Xue, Xiaoyong Yang, Xiao Wang, and Yafei Dai. 2016. VoteTrust: Leveraging friend invitation graph to defend against social network sybils. IEEE Transactions on Dependable and Secure Computing 13, 4 (2016), 488–501.
[28] Dong Yuan, Yuanli Miao, Neil Zhenqiang Gong, Zheng Yang, Qi Li, Dawn Song, Qian Wang, and Xiao Liang. 2019. Detecting Fake Accounts in Online Social Networks at the Time of Registrations. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security. 1423–1438.
[29] Jinxue Zhang, Rui Zhang, Yanchao Zhang, and Guanhua Yan. 2016. The rise of social botnets: Attacks and countermeasures. IEEE Transactions on Dependable and Secure Computing (2016).
[30] Xiaokang Zhou, Neil Y Yen, Qun Jin, and Timothy K Shih. 2013. Enriching user search experience by mining social streams with heuristic stones and associative ripples. Multimedia Tools and Applications 63, 1 (2013), 129–144.