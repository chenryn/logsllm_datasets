### Certificate Validation and Its Purpose

Certificate validation is a critical security measure to ensure the authenticity and integrity of digital certificates. In the absence of improved certificate management practices at the application layer, one possible defense is to enforce robust SSL/TLS configurations at the operating system level. Fahl et al. [29] have demonstrated this capability for Android, while Bates et al. [15] present a mechanism for Linux that facilitates the use of SSL trust enhancements. If the system trusts compromised root certificates, solutions like DVCert [23] can be used to protect against man-in-the-middle attacks.

### Security of Legacy Systems vs. Modern Smartphones

In Section 7, we noted that legacy systems are fundamentally insecure due to their reliance on insecure GSM bearer channels. These systems depend on bearer channel security because of the practical difficulties in developing and deploying secure applications across a wide range of feature phone platforms with varying designs and computational capabilities.

In contrast, modern smartphones, such as those running Android, offer advanced security features. One would expect that these capabilities would enhance the security of branchless banking apps. However, our findings indicate that the branchless banking apps we studied for Android put users at greater risk than legacy systems. While attacking cellular network protocols is feasible [56], it requires significant equipment and expertise. The vulnerabilities we disclose in this paper, however, can be exploited with just a laptop, common attack tools, and basic security experience, making them easier to exploit than previously disclosed attacks on SMS and USSD interfaces.

### The Role of Regulation

In the United States, the PCI Security Standards Council releases the Data Security Standard (PCI DSS) [48], which outlines security requirements for entities handling cardholder data. This standard is developed by a consortium of card issuers, including Visa and MasterCard, and merchants accepting credit card payments are generally required to adhere to it and undergo audits. The DSS includes requirements, testing procedures, and guidance for securing devices and networks, but it does not provide detailed implementation instructions. While the effectiveness of these standards is not our primary focus, the PCI DSS can serve as a checklist for ensuring comprehensive security implementations.

In 2008, the Reserve Bank of India (RBI) issued guidelines for mobile payment systems [13]. These guidelines cover a broad range of topics, including allowed currencies, KYC/AML policies, interbank settlement policies, and technology and security standards. The security standards give implementers considerable leeway in choosing specific security practices. MoneyOnMobile, which had the most severe security issues among the apps we analyzed, prominently displays its RBI authorization on its website.

Some notable recommendations include the use of "digital certificate-based inquiry/transaction capabilities," encrypted mobile PINs, and the use of the mobile phone number as the primary identifier. These recommendations may have influenced the design decisions of Airtel Money and Oxigen Wallet. For example, the digital certificate recommendation may have led Oxigen Wallet developers to develop their flawed public key encryption architecture. The lack of clear guidance on "strong encryption" may also be partially responsible for the security failures of Airtel Money and Oxigen Wallet. We note that Airtel Money, while still vulnerable, was within the letter of the recommendations.

To our knowledge, other mobile money systems studied in this paper are not subject to similar industry or government regulations. While high-quality, auditable industry standards could improve branchless banking security, it is unclear whether current guidelines, such as those from the RBI, make a significant difference.

### Terms of Service and Consumer Liability

After uncovering technical vulnerabilities in branchless banking, we investigated their potential implications for fraud liability. In the United States, consumers are not held liable for fraudulent transactions beyond a small amount, recognizing that users are vulnerable to fraud they cannot prevent, combat, or detect.

To determine the liability model for the branchless banking apps we studied, we surveyed the Terms of Service (ToS) for each of the seven analyzed apps. The ToS for Airtel Money [1], GCash [3], mCoin [5], Oxigen Wallet [9], MoneyOnMobile [7], and Zuum [12] all hold the customer solely responsible for most forms of fraudulent activity. Each service holds the customer responsible for the safety and security of their password. GCash, mCoin, and Oxigen Wallet also require customers to protect their SIM cards. GCash provides a complaint system if the customer notifies them in writing within 15 days of the disputed transaction, but erroneous transactions are not grounds for dispute. mPAY’s terms [8] are less clear on liability, providing a dispute resolution system without detailing the circumstances for which the customer is responsible. Overall, the ToS clearly place the responsibility for all transactions conducted with the PIN/password on the customer.

This presumption of customer fault is at odds with our findings. Our analysis shows that even if a customer protects their PIN and physical device, third parties can still initiate fraudulent transactions. Passwords can be easily recovered by attackers, and six of the seven apps we analyzed transmit authentication data over insecure connections, allowing recovery in transit. Additionally, with brief access to a customer's phone, an attacker could read GCash PINs from phone logs or trigger the Oxigen Wallet password recovery mechanism. Even when the mobile device and SIM card are fully under customer control, unauthorized transactions can still occur due to pervasive vulnerabilities. Man-in-the-middle attacks can tamper with transactions in transit, misleading providers into believing fraudulent transactions originated from legitimate users. These attacks are highly plausible and, with minimal technical capability, can be launched using a local wireless access point.

Similar to past findings for the "Chip & Pin" credit card system [40], it is possible that these apps are already being exploited, leaving consumers with no recourse to dispute fraudulent transactions. Based on the discovery of widespread vulnerabilities, we believe the liability model for branchless banking applications must be revisited. Providers should not combine such vulnerable systems with a liability model that refuses to take responsibility for technical flaws, as this could hinder the sustained growth of branchless banking systems due to the high likelihood of fraud.

### Related Work

Banking has been a driving force in computer security since the field's inception. The original Data Encryption Standard was designed for banking and commerce, and Anderson’s classic paper "Why Cryptosystems Fail" specifically addressed banking security [14]. Mobile money systems have been scrutinized by computer security practitioners, with research focusing on authentication, channel security, and transaction verification in legacy systems designed for feature phones. Some prior work has provided threat modeling and discussed broader system-wide security issues. To our knowledge, we are the first to examine the security of smartphone applications used by mobile money systems.

Mobile money systems rely on the network for identity services, using the telephone number (MS-ISDN) as the subscriber's identity. Researchers have investigated the use of one-time pads as authenticators to address physical access vulnerabilities. Panjwani et al. [47] and Sharma et al. [53] have proposed new schemes, but these add complexity and do not provide guarantees against message modification or recovery. SMS-based systems are particularly vulnerable to eavesdropping and message tampering [42], leading to projects to bring additional cryptographic mechanisms to mobile money systems [20, 41, 22]. Systems using USSD can use code executing on the SIM card to protect messages, but the implementation details and guarantees are unknown [45].

Several authors have investigated the holistic security of mobile money systems designed for "dumbphones." Paik et al. [45] and Panjwani [46] have provided threat models and designs to protect against identified threats. While these papers focus on technical analysis, de Almeida [38] and Harris et al. [35] have noted the policy implications of mobile money insecurity.

Our work contributes to the literature on Android application security measurement. TaintDroid [25] was a pioneering dynamic analysis system that detected private information leakages. Felt et al. [30] found that one-third of apps studied held unnecessary privileges, while Chin et al. [19] found that 60% of manually examined apps were vulnerable to attacks involving Android Intents. More recently, Fahl et al. [28] and Egele et al. [24] used automated static analysis to investigate cryptographic API use, finding that 8% of apps were vulnerable to man-in-the-middle attacks and 88% made mistakes with cryptographic libraries. Our work confirms these results apply to mobile money applications and is most similar to Enck et al. [26], who analyzed 1,100 applications for a broad range of security concerns.

However, prior work has not investigated the security guarantees and severe consequences of smartphone application compromise in branchless banking systems. Our work specifically investigates this open area of research and provides the world's first detailed security analysis of mobile money apps, demonstrating the risk to users who rely on these systems for financial security.

### Conclusions

Branchless banking applications hold the promise to improve the standard of living for many in the developing world by enabling access to a cashless payment infrastructure. However, the security of these applications has not been comprehensively vetted. In this paper, we analyze seven branchless banking applications, balancing popularity with geographic representation. Our analysis targets the registration, login, and transaction portions of the applications and codifies discovered vulnerabilities using the CWE classification system. We find significant vulnerabilities in six of the seven applications, preventing both users and providers from reasoning about the integrity of transactions. We pair these technical findings with the discovery of fraud liability models that explicitly hold the end user culpable for all fraud. Given the systemic problems we identify, we argue that dramatic improvements to the security of branchless banking applications are imperative to protect the mission of these systems.

### Acknowledgments

The authors are grateful to Saili Sahasrabudde for her assistance with this work. We also thank the members of the SENSEI Center at the University of Florida for their help in preparing this work, as well as our anonymous reviewers for their helpful comments. This work was supported in part by the US National Science Foundation under grant numbers CNS-1526718, CNS-1540217, and CNS-1464087. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.

### References

[1] Airtel Money: Terms and Conditions of Usage. http://www.airtel.in/personal/money/terms-of-use.
[2] android-apktool: A Tool for Reverse Engineering Android APK Files. https://code.google.com/p/android-apktool/.
[3] GCash Terms and Conditions. http://www.globe.com.ph/gcash-terms-and-conditions.
[4] JEB Decompiler. http://www.android-decompiler.com/.
[5] mCoin: Terms and Conditions. http://www.mcoin.co.id/syarat-dan-ketentuan.
[6] MMU Deployment Tracker. http://www.gsma.com/mobilefordevelopment/programmes/mobile-money-for-the-unbanked/insights/tracker.
[7] Money on Mobile Sign-Up: Terms and Conditions. http://www.money-on-mobile.com.
[8] mPAY: Terms and Conditions. http://www.ais.co.th/mpay/en/about-term-condition.aspx.
[9] Oxigen Wallet: Terms and Conditions. https://www.oxigenwallet.com/terms-conditions.
[10] smali: An assembler/disassembler for Android’s dex format. https://code.google.com/p/smali/.
[11] The Legion of the Bouncy Castle. https://www.bouncycastle.org/.
[12] Zuum: Termos e Condições. http://www.zuum.com.br/institucional/termos.
[13] Mobile Payment in India — Operative Guidelines for Banks. Technical report, Reserve Bank of India, 2008.
[14] R. Anderson. Why Cryptosystems Fail. In Proc. of the 1st ACM Conf. on Comp. and Comm. Security, pages 215–227. ACM Press, 1993.
[15] A. Bates, J. Pletcher, T. Nichols, B. Hollembaek, D. Tian, A. Alkhelaifi, and K. Butler. Securing SSL Certificate Verification through Dynamic Linking. In Proc. of the 21st ACM Conf. on Comp. and Comm. Security (CCS’14), Scottsdale, AZ, USA, Nov. 2014.
[16] N. Berry. PIN analysis. http://www.datagenetics.com/blog/september32012/, Sept. 2012.
[17] Bill & Melinda Gates Foundation. Financial Services for the Poor: Strategy Overview. http://www.gatesfoundation.org/What-We-Do/Global-Development/Financial-Services-for-the-Poor.
[18] K. Chen, P. Liu, and Y. Zhang. Achieving Accuracy and Scalability in...