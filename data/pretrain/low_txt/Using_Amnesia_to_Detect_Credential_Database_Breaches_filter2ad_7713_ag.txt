### Defense Against Online Guessing Attacks

Amnesia provides robust defenses against online guessing attacks, which, in turn, can benefit targets as discussed above and in Section 5.4. The primary DoS (Denial of Service) risk introduced by Amnesia to monitors is the storage overhead of monitoring requests. However, as discussed in Section 6.5, this overhead need not be substantial. Moreover, the monitor has the discretion to expire or discard monitoring requests as needed, thus managing these costs effectively.

### User Privacy

Privacy risks associated with remote monitoring of a user account include revealing to monitors the targets at which a user has an account and revealing to a target when a user attempts to log into a monitor. To obscure the former information, a target could send (ineffective) monitoring requests for accounts that have not been registered locally, for example, using inputs X to `pcrQueryGen` consisting of uniformly random values. The latter information will likely be naturally obscured since failed login attempts to an account at a monitor due to automated attacks (online guessing, credential stuffing, etc.) would trigger PCR responses even if the account does not exist at the monitor and can outnumber failed login attempts by a legitimate user, even if it does [41]. Additionally, a monitor could further obscure user login activity on accounts for which it holds monitoring requests by generating monitoring responses at arbitrary times using uniformly random passwords.

### Incentives to Monitor Accounts

Given the overheads that monitoring requests induce on monitors, it is natural to question whether monitors have adequate incentives to perform monitoring for targets and, if so, at what rates. These questions are complicated by site-specific factors.

On one hand, large disparities in the numbers of accounts at various sites that might participate in a monitoring ecosystem could result in massive imbalances in the monitoring loads induced on sites. For example, issuing monitoring requests at a rate to induce expected steady-state monitoring of, say, even 10% of Gmail users' accounts, each at only a single monitor, would impose approximately 180 million monitoring requests across monitors on an ongoing basis [37]. This could easily induce more load on monitors than they would find "worth it" for participating in this ecosystem.

On the other hand, dependencies among sites might justify substantial monitoring investment by the web community as a whole. For example, the benefit to internet security in the large for detecting a breach of Google’s credential database quickly is considerable: as one of the world's largest email providers, it is trusted for backup authentication and account recovery (via email challenges) for numerous accounts at other sites. Indeed, as discussed above, some form of backup authentication needs to be a gatekeeper to resetting account passwords at a site that wishes to itself participate as a target in our design, to ensure it will detect its own breach reliably. Such a site might thus be willing to participate as a monitor for numerous accounts of a target site on which many of its accounts depend for backup authentication.

Balancing these considerations to produce a viable monitoring ecosystem is a topic of ongoing research. We recognize, however, that establishing and sustaining such an ecosystem might benefit from additional inducements, e.g., monetary payments from targets to monitors or savings in the form of reduced insurance premiums for sites that agree to monitor for one another.

### Conclusion

In this paper, we have proposed Amnesia, a methodology for using honeywords to detect the breach of a site without relying on any secret persistent state. Our algorithm remains effective in detecting breaches even against attackers who repeatedly access the target site’s persistent storage, including any long-term cryptographic keys. We extended this algorithm to allow the target site to detect breaches when the attacker tries to differentiate a (potentially reused) real password from honeywords by stuffing them at other sites. We realized this remote detection capability using a new private containment retrieval protocol with rounds, computation, communication, and storage costs that work well for our algorithm. We expect that, if deployed, Amnesia could effectively shorten the time between credential database breaches and their discovery.

### Acknowledgments

We are grateful to our shepherd, Patrick Traynor, and to the anonymous reviewers for their constructive feedback. This research was supported in part by grant numbers 2040675 from the National Science Foundation and W911NF-17-1-0370 from the Army Research Office. The views and conclusions in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the National Science Foundation, Army Research Office, or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notices herein.

### References

[1] Akshima, D. Chang, A. Goel, S. Mishra, and S. K. Sanadhya, “Generation of secure and reliable honeywords, preventing false detection,” IEEE Transactions on Dependable and Secure Computing, vol. 16, no. 5, pp. 757–769, 2019.
[2] M. H. Almeshekah, C. N. Gutierrez, M. J. Atallah, and E. H. Spafford, “ErsatzPasswords: Ending password cracking and detecting password leakage,” in 31st Annual Computer Security Applications Conference, Dec. 2015, pp. 311–320.
[3] M. Bellare, A. Desai, D. Pointcheval, and P. Rogaway, “Relations among notions of security for public-key encryption schemes,” in Advances in Cryptology – CRYPTO 1998, ser. Lecture Notes in Computer Science, vol. 1462, Aug. 1998.
[4] M. Bellare and P. Rogaway, “Random oracles are practical: A paradigm for designing efficient protocols,” in 1st ACM Conference on Computer and Communications Security, Nov. 1993.
[16] B. Fan, D. G. Andersen, M. Kaminsky, and M. D. Mitzenmacher, “Cuckoo filter: Practically better than Bloom,” in 10th ACM Conference on Emerging Networking Experiments and Technologies, 2014, pp. 75–88.
[5] H. Bojinov, E. Bursztein, X. Boyen, and D. Boneh, “Kamouflage: Loss-resistant password management,” in European Symposium on Research in Computer Security, ser. Lecture Notes in Computer Science, vol. 6345, Sep. 2010.
[6] Certicom Research, “SEC 2: Recommended elliptic curve domain parameters,” http://www.secg.org/SEC2-Ver-1.0.pdf, 2000, standards for Efficient Cryptography.
[7] R. Chatterjee, A. Athayle, D. Akhawe, A. Juels, and T. Ristenpart, “pASSWORD tYPOS and how to correct them securely,” in 37th IEEE Symposium on Security and Privacy, May 2016, pp. 799–818.
[8] H. Chen, K. Laine, and P. Rindal, “Fast private set intersection from homomorphic encryption,” in 24nd ACM Conference on Computer and Communications Security, Oct. 2017.
[9] K. Cohn-Gordon, C. Cremers, and L. Garratt, “On post-compromise security,” in 29th IEEE Computer Security Foundations Symposium, Jun. 2016.
[10] R. Cramer, R. Gennaro, and B. Schoenmakers, “A secure and optimally efficient multi-authority election scheme,” in Advances in Cryptology – EUROCRYPT ’97, ser. Lecture Notes in Computer Science, vol. 1233, 1997, pp. 103–118.
[11] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang, “The tangled web of password reuse,” in ISOC Network and Distributed System Security Symposium, 2014.
[12] A. Davidson and C. Cid, “An efficient toolkit for computing private set operations,” in 22nd Australasian Conference on Information Security and Privacy, ser. Lecture Notes in Computer Science, vol. 10343, Jul. 2017.
[13] J. DeBlasio, S. Savage, G. M. Voelker, and A. C. Snoeren, “Tripwire: Inferring internet site compromise,” in 17th Internet Measurement Conference, Nov. 2017.
[17] M. J. Freedman, Y. Ishai, B. Pinkas, and O. Reingold, “Keyword search and oblivious pseudorandom functions,” in 2nd Theory of Cryptography Conference, ser. Lecture Notes in Computer Science, vol. 3378, Feb. 2005.
[18] D. Freeman, S. Jain, M. Dürmuth, B. Biggio, and G. Giacinto, “Who are you? A statistical approach to measuring user authenticity,” in 23rd ISOC Network and Distributed System Security Symposium, Feb. 2016.
[19] P. A. Grassi et al., “Digital Identity Guidelines: Authentication and Lifecycle Management,” https://doi.org/10.6028/NIST.SP.800-63b, Jun. 2017, NIST Special Publication 800-63B.
[20] C. G. Günther, “An identity-based key-exchange protocol,” in Advances in Cryptology – EUROCRYPT ’89, ser. Lecture Notes in Computer Science, vol. 434, Apr. 1989, pp. 29–37.
[21] C. Herley and D. Florêncio, “Protecting financial institutions from brute-force attacks,” in 23rd International Conference on Information Security, ser. IFIP Advances in Information and Communication Technology, vol. 278, Sep. 2008, pp. 681–685.
[22] HYPR, “New password study by HYPR finds 78% of people had to reset a password they forgot in past 90 days,” https://www.hypr.com/hypr-password-study-findings/, Dec. 2019.
[23] IBM Security, “Cost of a data breach report 2020,” https://www.ibm.com/security/digital-assets/cost-data-breach-report/, 2020.
[24] S. Jarecki, H. Krawczyk, and J. Xu, “OPAQUE: An asymmetric PAKE protocol secure against pre-computation attacks,” in Advances in Cryptology – EUROCRYPT 2018, ser. Lecture Notes in Computer Science, vol. 10822, 2018, pp. 456–486.
[14] I. Erguler, “Achieving flatness: Selecting the honeywords from existing user passwords,” IEEE Transactions on Parallel and Distributed Systems, vol. 13, no. 2, 2016.
[25] A. Juels and R. L. Rivest, “Honeywords: Making password-cracking detectable,” in 20th ACM Conference on Computer and Communications Security, Nov. 2013.
[15] A. Everspaugh, R. Chaterjee, S. Scott, A. Juels, and T. Ristenpart, “The Pythia PRF service,” in 24th USENIX Security Symposium, Aug. 2015, pp. 547–562.
[26] D. Kales, C. Rechberger, T. Schneider, M. Senker, and C. Weinert, “Mobile private contact discovery at scale,” in 28th USENIX Security Symposium, Aug. 2019.
[27] Á. Kiss, J. Liu, T. Schneider, N. Asokan, and B. Pinkas, “Private set intersection for unequal set sizes with mobile applications,” 17th Privacy Enhancing Technologies Symposium, vol. 2017, no. 4, pp. 177–197, 2017.
[28] G. Kontaxis, E. Athanasopoulos, G. Portokalidis, and A. D. Keromytis, “SAuth: Protecting user accounts from password database leaks,” in 20th ACM Conference on Computer and Communications Security, Nov. 2013.
[29] M. Kwiatkowska, G. Norman, and D. Parker, “PRISM 4.0: Verification of probabilistic real-time systems,” in International Conference on Computer Aided Verification, ser. Lecture Notes in Computer Science, vol. 6806, 2011.
[30] R. W. F. Lai, C. Egger, D. Schröder, and S. S. M. Chow, “Phoenix: Rebirth of a cryptographic password-hardening service,” in 26th USENIX Security Symposium, Aug. 2017, pp. 899–916.
[31] P. MacKenzie and M. K. Reiter, “Delegation of cryptographic servers for capture-resilient devices,” Distributed Computing, vol. 16, no. 4, pp. 307–327, Dec. 2003.
[32] ——, “Networked cryptographic devices resilient to capture,” International Journal on Information Security, vol. 2, no. 1, pp. 1–20, Nov. 2003.
[33] Microsoft Threat Intelligence Center, “Strontium: Detecting new patterns in credential harvesting,” https://www.microsoft.com/security/blog/2020/09/10/strontium-detecting-new-patters-credential-harvesting/, 10 Sep. 2020.
[34] R. Nojima and Y. Kadobayashi, “Cryptographically secure Bloom-filters,” Transactions on Data Privacy, vol. 2, no. 2, Aug. 2009.
[35] P. Oechslin, “Making a faster cryptanalytic time-memory trade-off,” in Advances in Cryptology – CRYPTO 2003, ser. Lecture Notes in Computer Science, vol. 2729, 2003, pp. 617–630.
[36] S. Pearman, J. Thomas, P. E. Naeini, H. Habib, L. Bauer, N. Christin, L. F. Cranor, S. Egelman, and A. Forget, “Let’s go in for a closer look: Observing passwords in their natural habitat,” in 24th ACM Conference on Computer and Communications Security, Oct. 2017.
[37] C. Petrov, “50 Gmail statistics to show how big it is in 2020,” https://techjury.net/blog/gmail-statistics/, 30 Jun. 2020.
[38] S. Ramezanian, T. Meskanen, M. Naderpour, and V. Niemi, “Private membership test protocol with low communication complexity,” in 11th International Conference on Network and System Security, ser. Lecture Notes in Computer Science, vol. 10394, Aug. 2017.
[39] A. C. D. Resende and D. F. Aranha, “Faster unbalanced private set intersection,” in 22nd International Conference on Financial Cryptography and Data Security, 2018, pp. 203–221.
[40] J. Schneider, N. Fleischhacker, D. Schröder, and M. Backes, “Efficient cryptographic password hardening services from partially oblivious commitments,” in 23rd ACM Conference on Computer and Communications Security, Oct. 2016, pp. 1192–1203.
[41] Shape Security, “2018 credential spill report,” https://info.shapesecurity.com/rs/935-ZAM-778/images/Shape_Credential_Spill_Report_2018.pdf, 2018.
[42] K. Thomas, F. Li, A. Zand, J. Barrett, J. Ranieri, L. Invernizzi, Y. Markov, O. Comanescu, V. Eranti, A. Moscicki, D. Margolis, V. Paxson, and E. Bursztein, “Data breaches, phishing, or malware? Understanding the risks of stolen credentials,” in 24th ACM Conference on Computer and Communications Security, 2017.
[43] Verizon, “2020 data breach investigations report,” https://enterprise.verizon.com/resources/reports/dbir/, 2020.
[44] C. Wang, S. T. K. Jan, H. Hu, D. Bossart, and G. Wang, “The next domino to fall: Empirical analysis of user passwords across online services,” in 8th ACM Conference on Data and Application Security and Privacy, Mar. 2018.
[45] D. Wang, H. Cheng, P. Wang, J. Yan, and X. Huang, “A security analysis of honeywords,” in 25th ISOC Network and Distributed System Security Symposium, Feb. 2018.
[46] K. C. Wang and M. K. Reiter, “How to end password reuse on the web,” in 26th ISOC Network and Distributed System Security Symposium, Feb. 2019.
[47] ——, “Detecting stuffing of a user’s credentials at her own accounts,” in 29th USENIX Security Symposium, Aug. 2020.
[48] C. Yue and H. Wang, “BogusBiter: A transparent protection against phishing attacks,” ACM Transactions on Internet Technology, vol. 10, no. 2, May 2010.