### Challenges and Evasion Tactics in Malvertising

The complexity of malvertising can often be underestimated. For example, an attacker who assigns an ad-related URL to a compromised non-ad host risks exposing that host due to the discrepancy between its original state and its current appearance. Further research is necessary to better prepare for these evasion tactics.

### Benefits of MadTracer

MadTracer offers multiple benefits for both service providers and web users. Large ad networks can use it to identify fraudulent activities, compromised syndicators, and malicious publishers. The detected malicious ad content can be integrated into anti-virus systems to generate new content-based attack signatures. Additionally, a browser-based protection mechanism can leverage the knowledge of malicious ad paths and their topological features to alert users when their browser starts to follow a suspicious ad path, thus protecting them before they reach an exploit server.

### Conclusion

Today's web advertising landscape is rife with malicious ads, posing significant threats to both web users and legitimate businesses. This paper presents a measurement study aimed at understanding the infrastructure behind the delivery of malicious ads. Through large-scale web crawling, we have uncovered the severity of this threat, revealing that such attacks have infected hundreds of publisher pages and infiltrated major ad networks, including DoubleClick. The insights gained from this study led to the development of MadTracer, a topology-based detection system. Our evaluation shows that MadTracer is highly effective against real-world malvertising activities, detecting 15 times as many malicious domain-paths as Google Safe Browsing and Microsoft Forefront combined. It also identified several large-scale malvertising campaigns, including a new type of click-fraud attack. A more detailed summary of our findings is available on [www.madtracer.org](http://www.madtracer.org). Our work demonstrates the potential of topology-based detection in more effectively mitigating malvertising threats.

### Acknowledgements

We thank the anonymous reviewers for their insightful comments. We are grateful for the assistance provided by Microsoft Forefront for attack analysis. IU authors also acknowledge the support from NSF CNS-1017782 and CNS-1223477.

### References

[1] Adblock Plus. http://adblockplus.org/en/.
[2] Display Network Google Ads. http://www.google.com/ads/displaynetwork/.
[3] WordPress, Blog Tool, Publishing Platform, and CMS. http://wordpress.org/.
[4] Adobe. Adobe Flash Platform. http://www.adobe.com/flashplatform, 2011.
[5] P. F. Brown, P. V. deSouza, R. L. Mercer, V. J. D. Pietra, and J. C. Lai. Class-based n-gram models of natural language. Computational Linguistics, 18:467–479, 1992.
[6] S. K. Cha, I. Moraru, J. Jang, J. Truelove, D. Brumley, and D. G. Andersen. SplitScreen: Enabling efficient, distributed malware detection. In Proceedings of the 7th USENIX Conference on Networked Systems Design and Implementation, NSDI’10, page 25, Berkeley, CA, USA, 2010. USENIX Association.
[7] M. Cova, C. Kruegel, and G. Vigna. Detection and analysis of drive-by-download attacks and malicious JavaScript code. In Proceedings of the 19th International Conference on World Wide Web, WWW ’10, pages 281–290, New York, NY, USA, 2010. ACM.
[8] D. Crockford. Adsafe. http://www.adsafe.org.
[9] B. Edelman. Benjamin Edelman - Publications. http://www.benedelman.org/publications/, July 2012.
[10] M. Finifter, J. Weinberger, and A. Barth. Preventing capability leaks in secure JavaScript subsets. In NDSS. The Internet Society, 2010.
[11] D. Fisher. Google removes .co.cc subdomains over phishing, spam concerns. http://threatpost.com/en_us/blogs/google-removes-cocc-subdomains-over-phishing-spam-concerns-070611, 2011.
[12] S. Ford, M. Cova, C. Kruegel, and G. Vigna. Analyzing and detecting malicious Flash advertisements. Computer Security Applications Conference, Annual, 0:363–372, 2009.
[13] M. Gandhi, M. Jakobsson, and J. Ratkiewicz. Badvertisements: Stealthy click-fraud with unwitting accessories. Journal of Digital Forensics Practice, 1(2), 2006.
[14] Google. What is an ad tag? - DoubleClick for Publishers Help. http://support.google.com/dfp_premium/bin/answer.py?hl=en&answer=1131465.
[15] S. Hao, N. A. Syed, N. Feamster, A. G. Gray, and S. Krasser. Detecting spammers with SNARE: Spatio-temporal network-level automatic reputation engine. In Proceedings of the 18th Conference on USENIX Security Symposium, SSYM’09, pages 101–118, Berkeley, CA, USA, 2009. USENIX Association.
[16] J. P. John, F. Yu, Y. Xie, A. Krishnamurthy, and M. Abadi. DESEO: Combating search-result poisoning. In Proceedings of the 20th USENIX Conference on Security, SEC’11, pages 20–20, Berkeley, CA, USA, 2011. USENIX Association.
[17] C. Larsen. Busting a big malvertising / fake-AV attack. http://www.bluecoat.com/security/security-archive/2011-07-25/busting-big-malvertising-fake-av-attack-0, July 2011.
[18] K. Levchenko, N. Chachra, B. Enright, M. Felegyhazi, C. Grier, T. Halvorson, C. Kanich, C. Kreibich, H. Liu, D. McCoy, A. Pitsillidis, N. Weaver, V. Paxson, G. M. Voelker, and S. Savage. Click Trajectories: End-to-End Analysis of the Spam Value Chain. In Proceedings of the 32nd Annual Symposium on Security and Privacy. IEEE, May 2011.
[19] M. T. Louw, K. T. Ganesh, and V. N. Venkatakrishnan. ADJAIL: Practical enforcement of confidentiality and integrity policies on web advertisements. In Proceedings of the 19th USENIX Conference on Security, USENIX Security’10, pages 24–24, Berkeley, CA, USA, 2010. USENIX Association.
[20] L. Lu, R. Perdisci, and W. Lee. SURF: Detecting and measuring search poisoning. In Proceedings of the 18th ACM Conference on Computer and Communications Security, CCS ’11, pages 467–476, New York, NY, USA, 2011. ACM.
[21] L. Lu, V. Yegneswaran, P. Porras, and W. Lee. BLADE: An attack-agnostic approach for preventing drive-by malware infections. In Proceedings of the 17th ACM Conference on Computer and Communications Security, CCS ’10, pages 440–450, New York, NY, USA, 2010. ACM.
[22] McAfee. McAfee Web Gateway. http://www.mcafee.com/us/products/web-gateway.aspx#vtab-Benefits, 2011.
[23] B. Miller, P. Pearce, C. Grier, C. Kreibich, and V. Paxson. What’s clicking what? Techniques and innovations of today’s clickbots. In Proceedings of the 8th International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment, DIMVA’11, pages 164–183, Berlin, Heidelberg, 2011. Springer-Verlag.
[24] F. Nentwich, N. Jovanovic, E. Kirda, C. Kruegel, and G. Vigna. Cross-site scripting prevention with dynamic data tainting and static analysis. In Proceedings of the Network and Distributed System Security Symposium (NDSS’07), 2007.
[25] A. NS. Blackhole Exploit Kit 1.0.2. http://www.airdemon.net/blackhole.html, 2011.
[26] R. Petnel. The Official EasyList Website. http://easylist.adblockplus.org/en/.
[27] N. Provos, P. Mavrommatis, M. A. Rajab, and F. Monrose. All your iframes point to us. In Proceedings of the 17th Conference on Security Symposium, pages 1–15, Berkeley, CA, USA, 2008. USENIX Association.
[28] B. Stone-Gross, R. Stevens, R. Kemmerer, C. Kruegel, G. Vigna, and A. Zarras. Understanding fraudulent activities in online ad exchanges. In Proceedings of the Internet Measurement Conference, IMC ’11, 2011.
[29] Sucuri. Mass infection of WordPress sites due to TimThumb. http://blog.sucuri.net/2011/08/mass-infection-of-wordpress-sites-counter-wordpress-com.html, 2011.
[30] K. Thomas, C. Grier, J. Ma, V. Paxson, and D. Song. Design and evaluation of a real-time URL spam filtering service. In Proceedings of the 2011 IEEE Symposium on Security and Privacy, SP ’11, pages 447–462, Washington, DC, USA, 2011. IEEE Computer Society.
[31] TrendLabs. Follow the money trail. http://blog.trendmicro.com/follow-the-money-trail/, March 2012.
[32] A. Vance. Times web ads show security breach. http://www.nytimes.com/2009/09/15/technology/internet/15adco.html, 2009.
[33] Y. Wang, D. Burgener, A. Kuzmanovic, and M.-F. Gabriel. Understanding the network and user-targeting properties of web advertising networks. In ICDCS, pages 613–622, 2011.
[34] Whois.net. Whois Lookup - Domain Names Search, Registration, & Availability. http://www.whois.net/, 2011.
[35] Y. Xie, F. Yu, K. Achan, R. Panigrahy, G. Hulten, and I. Osipkov. Spamming botnets: Signatures and characteristics. In Proceedings of the ACM SIGCOMM 2008 Conference on Data Communication, SIGCOMM ’08, pages 171–182, New York, NY, USA, 2008. ACM.
[36] ZenithOptimedia. Global ad expenditure to return to pre-recession peak level this year. http://www.zenithoptimedia.com/files/media/image/news/Press%20Release%20files/2011/July/Adspend%20forecasts%20July%202011.pdf, 2011.
[37] J. Zhang, C. Seifert, J. W. Stokes, and W. Lee. ARROW: Generating signatures to detect drive-by downloads. In Proceedings of the 20th International Conference on World Wide Web, WWW ’11, pages 187–196, New York, NY, USA, 2011. ACM.

### Appendix

#### A. Comparison with Individual Node Classifier

For comparison, we evaluated the effectiveness of malvertising detection using a combination of features (as described in Section 5.1) on individual nodes. The same method and datasets as described in Sections 5.1 and 6.1 were used for learning a set of detection rules.

This individual node-based classifier detected 20,533 domain-paths in the Testing-Jun-Sep dataset, but 17,614 of them were false positives. Using the Testing-Oct dataset, the classifier detected 25,308 domain-paths, with 23,140 being false positives. For both datasets, the false detection rates were over 85%, significantly higher than those of MadTracer.

A subset of the false positive domain-paths was sampled, and it was found that most were detected because they involved newly registered ad networks or ad networks that did not follow the URL patterns defined by EasyList. However, these ad networks all had legitimate portal sites and were unlikely to be hosted by attackers. The number of truly malicious pages and domain-paths successfully detected by the single-node based classifier was smaller than that detected by MadTracer. The rules that could detect malicious pages or domain-paths also incurred a high false positive rate on the training data, so these rules were not selected by the learning framework for detection.

#### B. Large Click-Fraud Attack Detected

Figure 13 shows the traffic flow of a large click-fraud campaign we detected. The major entities involved in this campaign include compromised websites, attacker-created shady (i.e., fraudulent) search engines, legitimate pay-per-click (PPC) ad networks, and legitimate advertisers. Below, we present how this click-fraud attack exploits online advertising channels.

In this example, attackers control a large number of websites set up using old versions of WordPress [3] with known vulnerabilities. These sites were compromised [29] to redirect traffic to the attackers' domains (e.g., counter-wordpress.com). When a user visits any of these compromised websites, their traffic is further redirected to multiple attacker-created shady search engines, which resemble search engines (e.g., getnewsearcher.com). The purpose of these shady search engines is to affiliate with legitimate PPC networks and refer click traffic to them. Once user traffic reaches the shady search engines (without user awareness), it is converted into fraudulent ad clicks and further redirected to the affiliated legitimate PPC networks through a set of redirectors, and eventually to advertisers.

After receiving the fraudulent click traffic, the advertiser pays the PPC network, which in turn pays the attacker-controlled shady search engines. To maximize revenue, attackers aggressively turn one user visit into multiple fraud clicks. In an extreme case, we observed that a single user visit was turned into 37 clicks to 4 different PPC ad networks simultaneously. All the traffic redirection activities happen without user clicks or awareness, yet they significantly slow down the browser performance and negatively impact the user experience.

Using our approach, we identified 219 such shady search engines and 50 affiliated redirectors associated with this type of click fraud. Most of these cases were not detected by Safe Browsing or ForeFront as they were not used for delivering malicious content. To evade detection by PPC ad networks, attackers intentionally redirect traffic through different shady search engines and redirectors, making the redirection paths appear diversified and more legitimate. However, by examining the interactions among different entities along ad-related paths, our approach can successfully detect the hidden malicious infrastructure, even for these stealthy attacks.

#### C. Findings and Cloaking Study

After validation, we revisited Tables 6 and 7 and noticed several interesting observations. First, on average, each infected publisher page corresponds to multiple (15.5) malvertising domain-paths. 

#### D. Position of Malicious Nodes on Malvertising Paths

Figure 14 shows a scatter plot of malvertising path lengths versus the position of the alarmed nodes on the paths. Each point corresponds to one or more known malicious nodes in our measurement (multiple points may overlap at one position). The X-axis shows the path lengths, and the Y-axis shows the positions of the malicious nodes on the paths. Many points lie along the Y = X line, indicating that these malicious nodes are the last hop on the redirection chains, typically corresponding to drive-by-download attacks where the malicious nodes are the exploit servers. However, many malicious nodes are also located in the middle of their redirection chains, likely corresponding to click-fraud attacks where the malicious nodes serve to redirect traffic from (legitimate or malicious) publishers to legitimate pay-per-click ad networks. These findings indicate that the positions of the malicious nodes on the ad paths are not fixed due to the diversified attack categories.

Figure 14: For the detected malicious nodes on the malvertising paths, their positions on the paths versus the corresponding path lengths.