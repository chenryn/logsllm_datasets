### Analysis of Collaborative Anomaly Detection Across Web Servers

In our analysis, we observed that the server `www.cs.gmu.edu` experiences significantly lower traffic volumes compared to other servers. This led to several interesting findings. As expected, both false positives and true positives decreased substantially after the training period. Notably, no false positives were detected following this period. This suggests that, for our datasets, all server-side services causing false positives are eliminated when we require data to be common across three web servers. If this trend continues as more servers are added, reporting only attacks that target three or more servers could effectively address most false positive issues.

While requiring three servers to confirm an attack results in fewer true positives, the detected ones are widespread. Expanding the collaboration should greatly enhance detection rates. Although this method scales more slowly in detection rate compared to requiring only two servers, it is a more effective approach for minimizing false positives once sufficient servers are involved.

### Threshold Adjustments for Alert Matching

We also explored the implications of changing the threshold for matching alerts. Increasing the threshold to 80% or higher, to require nearly perfect matches, did not reduce false positives, as most false positives were already exact matches. Conversely, lowering the threshold to allow looser matches (e.g., 60%) increased the detection of attacks but at the cost of additional false positives. By requiring only 60% of n-grams from one alert to match the Bloom filter representation of another site's alert, we can detect attacks with greater variance, such as similar payloads targeting different web applications. The details of these experiments are summarized in Table 8.

Lowering the threshold from 80% to 60% over an eight-week run with a training period increased the detection of new unique attacks by 37.6%, while increasing newly seen unique false positives by 76.9%. In a three-week run, the lower threshold did not add new unique false positives, indicating the need for threshold optimization as the system scales. Adding a new server under these conditions may not be beneficial, as existing servers can detect additional attacks without it. However, as the number of collaborating web servers increases, optimizing the matching threshold and the number of servers required to share an alert before reporting it as an attack will be crucial for controlling the false positive rate.

### Temporal Analysis of Alerts

From the offline-generated alert clusters, we conducted a temporal study of alerts across the three servers. We examined the time gap between alerts across sites and computed the pairwise time gaps of common alert clusters. Additionally, we calculated the minimum time gap between alert clusters common to all three servers. Table 9 summarizes the minimum, maximum, average, and standard deviations of these time gaps.

A visual representation of the common alert clusters across the three servers is provided in Figure 6. This graph shows the minimum time gap between an alert observed at one server and the same alert being observed at the other two servers. The horizontal axis represents the relative time elapsed since the first alert, and the vertical axis represents the cluster. Each bar in the graph starts at the time an alert is observed at a site and ends at the time it is first seen among the other two sites. The bars are color-coded to indicate where the attack was first detected.

The average time gap between alerts can be leveraged to our advantage. For example, the time gap analysis from the October-November run across CU and GMU showed a large average value (Min: 1.57 min, Max: 71022.07 min, Average: 15172.53 min, Std. Dev.: 18504.44 min). This provides sufficient time to take preventive action at collaborating sites by exchanging a small blacklist.

### Operator Workload Reduction

We also analyzed the number of unclassified unique alerts that an operator must manually classify daily. Figure 7 depicts the number of unique alerts generated daily, showing both true positives and false positives using our collaborative approach and a standalone approach. The horizontal axis represents time in one-day bins, and the vertical axis represents the frequency of alerts on a log scale. For a standalone CAD sensor, a unique alert is included in the frequency when it is first observed at a site. For multiple sites collaborating, an alert is included in the frequency count when it is confirmed to be seen at all sites. On average, the number of unique alerts observed daily using a standalone CAD sensor at CU is 82.84, compared to 3.87 alerts with a collaborative approach, representing a significant reduction in operator workload.

### Conclusions

Web services and applications are vital but often susceptible to remote zero-day attacks. Current defenses rely on manually crafted signatures, which can leave systems vulnerable. Our approach, which correlates Content Anomaly Detection (CAD) alerts from multiple sites, can identify zero-day attacks and decrease false positives at each collaborating site. With a false positive rate of 0.03%, the system could be fully automated, or operators could manually inspect fewer than four new alerts per day on average, as observed in our eight-week experiment. Collaborative detection of attacks across administrative domains, if done in a controlled and privacy-preserving manner, can significantly enhance the resources available to defenders, exposing previously unseen attacks.

### References

1. Anagnostakis, K.G., Greenwald, M.B., Ioannidis, S., Keromytis, A.D.: Robust Reactions to Potential Day-Zero Worms through Cooperation and Validation. In: Proceedings of the 9th Information Security Conference (ISC). pp. 427–442 (August/September 2006)
2. Anagnostakis, K.G., Greenwald, M.B., Ioannidis, S., Keromytis, A.D., Li, D.: A Cooperative Immunization System for an Untrusting Internet. In: IEEE International Conference on Networks (2003)
3. Bloom, B.H.: Space/time trade-offs in Hash Coding with Allowable Errors. Communications of the ACM 13(7), 422–426 (1970)
4. Boggs, N., Hiremagalore, S., Stavrou, A., Stolfo, S.J.: Experimental results of cross-site exchange of web content anomaly detector alerts. In: Technologies for Homeland Security, 2010. HST ’10. IEEE Conference on. pp. 8 –14 (Nov 2010)
5. Cretu, G., Stavrou, A., Locasto, M., Stolfo, S., Keromytis, A.: Casting out demons: Sanitizing training data for anomaly sensors. In: Security and Privacy, 2008. SP 2008. IEEE Symposium. pp. 81 –95 (May 2008)
6. Cretu-Ciocarlie, G., Stavrou, A., Locasto, M., Stolfo, S.: Adaptive Anomaly Detection via Self-Calibration and Dynamic Updating. In: Recent Advances in Intrusion Detection. pp. 41–60. Springer (2009)
7. Farroukh, A., Mukadam, N., Bassil, E., Elhajj, I.: Distributed and collaborative intrusion detection systems. In: Communications Workshop, 2008. LCW 2008. IEEE Lebanon. pp. 41 –45 (May 2008)
8. Gates, C.: Coordinated scan detection. In: Proceedings of the 16th Annual Network and Distributed System Security Symposium (NDSS 09) (2009)
9. Kruegel, C., Toth, T.: Distributed Pattern for Intrusion Detection. In: Network and Distributed System Security (NDSS) (2002)
10. Kruegel, C., Toth, T., Kerer, C.: Decentralized Event Correlation for Intrusion Detection. In: International Conference on Information Security and Cryptology (2002)
11. Kumar, S., Dharmapurikar, S., Yu, F., Crowley, P., Turner, J.: Algorithms to accelerate multiple regular expressions matching for deep packet inspection. In: Proceedings of the 2006 conference on Applications, technologies, architectures, and protocols for computer communications. pp. 339–350. ACM (2006)
12. Lazarevic, A., Ozgur, A., Ertoz, L., Srivastava, J., Kumar, V.: A comparative study of anomaly detection schemes in network intrusion detection. In: In Proceedings of the Third SIAM International Conference on Data Mining (2003)
13. Levenshtein, V.I.: Binary codes capable of correcting deletions, insertions and reversals. Soviet Physics Doklady 10(8), 707–710 (1966), doklady Akademii Nauk SSSR, V163 No4 845-848 1965
14. Lin, P., Lin, Y., Lee, T., Lai, Y.: Using string matching for deep packet inspection. Computer 41(4), 23–28 (2008)
15. Locasto, M.E., Parekh, J.J., Keromytis, A.D., Stolfo, S.J.: Towards Collaborative Security and P2P Intrusion Detection. In: IEEE Information Assurance Workshop. West Point, NY (2005)
16. Norton, M., Roelker, D., Inc, D.R.S.: Snort 2.0: High performance multi-rule inspection engine
17. Paxson, V.: Bro: a system for detecting network intruders in real-time. In: SSYM’98: Proceedings of the 7th conference on USENIX Security Symposium. pp. 3–3. USENIX Association, Berkeley, CA, USA (1998)
18. Porras, P., Neumann, P.G.: EMERALD: Event Monitoring Enabling Responses to Anomalous Live Disturbances. In: National Information Systems Security Conference (1997)
19. Sommer, R., Paxson, V.: Enhancing byte-level network intrusion detection signatures with context. In: CCS ’03: Proceedings of the 10th ACM conference on Computer and communications security. pp. 262–271. ACM, New York, NY, USA (2003)
20. Sommer, R., Paxson, V.: Outside the closed world: On using machine learning for network intrusion detection. Security and Privacy, IEEE Symposium on 0, 305–316 (2010)
21. Song, Y., Keromytis, A.D., Stolfo, S.J.: Spectrogram: A mixture-of-markov-chains model for anomaly detection in web traffic. In: NDSS ’09: Proceedings of the 16th Annual Network and Distributed System Security Symposium (2009)
22. Song, Y., Locasto, M.E., Stavrou, A., Keromytis, A.D., Stolfo, S.J.: On the infeasibility of modeling polymorphic shellcode. In: Proceedings of the 14th ACM conference on Computer and communications security. pp. 541–551. CCS ’07, ACM, New York, NY, USA (2007), http://doi.acm.org/10.1145/1315245.1315312
23. Staniford-Chen, S., Cheung, S., Crawford, R., Dilger, M.: GrIDS - A Graph Based Intrusion Detection System for Large Networks. In: National Information Computer Security Conference. Baltimore, MD (1996)
24. Stavrou, A., Cretu-Ciocarlie, G.F., Locasto, M.E., Stolfo, S.J.: Keep your friends close: the necessity for updating an anomaly sensor with legitimate environment changes. In: AISec ’09: Proceedings of the 2nd ACM workshop on Security and artificial intelligence. pp. 39–46. ACM, New York, NY, USA (2009)
25. Taylor, C., Gates, C.: Challenging the Anomaly Detection Paradigm: A Provocative Discussion. In: Proceedings of the 15th New Security Paradigms Workshop (NSPW). pp. xx–yy (September 2006)
26. Tian, D., Changzhen, H., Qi, Y., Jianqiao, W.: Hierarchical distributed alert correlation model. In: IAS ’09: Proceedings of the 2009 Fifth International Conference on Information Assurance and Security. pp. 765–768. IEEE Computer Society, Washington, DC, USA (2009)
27. Ullrich, J.: DShield home page (2005), http://www.dshield.org
28. Vasiliadis, G., Polychronakis, M., Antonatos, S., Markatos, E., Ioannidis, S.: Regular expression matching on graphics hardware for intrusion detection. In: Recent Advances in Intrusion Detection. pp. 265–283. Springer (2009)
29. Vigna, G., Gwalani, S., Srinivasan, K., Belding-Royer, E.M., Kemmerer, R.A.: An Intrusion Detection Tool for AODV-based Ad hoc Wireless Networks. In: Computer Security Applications Conference (2004)
30. Wang, K., Parekh, J.J., Stolfo, S.J.: Anagram: A Content Anomaly Detector Resistant to Mimicry Attack. In: Symposium on Recent Advances in Intrusion Detection. Hamburg, Germany (2006)
31. Websense: LizaMoon. http://community.websense.com/blogs/securitylabs/archive/2011/03/31/update-on-lizamoon-mass-injection.aspx
32. Xu, D., Ning, P.: Privacy-preserving alert correlation: a concept hierarchy based approach. In: Computer Security Applications Conference, 21st Annual. pp. 10 pp. –546 (Dec 2005)
33. Yegneswaran, V., Barford, P., Jha, S.: Global Intrusion Detection in the DOMINO Overlay System. In: NDSS (2004)
34. Zaman, S., Karray, F.: Collaborative architecture for distributed intrusion detection system. In: Computational Intelligence for Security and Defense Applications, 2009. CISDA 2009. IEEE Symposium on. pp. 1 –7 (July 2009)