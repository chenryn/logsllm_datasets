### 15.2 Web 应用程序漏洞扫描

图 15.5 显示了对同一服务器进行的 Web 应用程序漏洞扫描，该服务器在图 15.1 和图 15.4 中也进行了网络漏洞扫描。

**注意:**

你可能会觉得网络漏洞扫描和 Web 漏洞扫描听起来非常相似。确实如此！这两种扫描都是为了检测已知漏洞而运行的服务。不过，它们之间存在一些关键区别：网络漏洞扫描通常不会深入到 Web 应用程序的内部结构，而 Web 应用程序扫描则专注于 Web 服务本身，而不涉及其他类型的服务。尽管许多网络漏洞扫描器可以执行基本的 Web 漏洞扫描任务，但要进行全面且深入的 Web 漏洞扫描，则需要专门的工具。

如图 15.4 和图 15.5 所示，Nessus 漏洞扫描器既能够执行网络漏洞扫描，也能进行 Web 应用程序漏洞扫描，是一个多功能的混合工具。然而，并非所有工具都具备这种双重功能，在选择使用任何漏洞扫描器之前，应先研究其特性以确保满足你的安全需求。

Web 漏洞扫描是组织安全评估与测试计划中的一个关键环节。建议在以下情况下进行此类扫描：
- 对所有应用程序进行首次扫描，以便识别潜在的历史问题。
- 在新应用首次上线前对其进行检查。
- 当修改后的代码准备部署至生产环境时。
- 定期对所有应用程序进行扫描。根据资源限制，可能需要基于应用的重要性来安排这些扫描活动，特别是那些频繁处理敏感信息的应用程序。
  
此外，某些合规性要求也可能促使企业定期开展 Web 应用程序漏洞扫描。例如，《支付卡行业数据安全标准》(PCI DSS)就明确规定了至少每年一次的 Web 应用程序漏洞扫描或安装专用 Web 应用防火墙作为额外防护措施的要求。

### 15.2.2 渗透测试

渗透测试是一种比单纯的漏洞扫描更进一步的安全评估方法，因为它不仅限于发现漏洞，还试图利用这些漏洞来实际入侵系统。这使得渗透测试成为一种更为全面且主动的安全测试手段。虽然某些高级漏洞扫描技术有可能导致系统受损（尽管大多数时候默认设置会避免这种情况发生），但在渗透测试过程中，安全专家的目标是突破现有防护措施，进入目标系统或应用，从而揭示存在的安全弱点。

渗透测试通常由经过专业培训的技术人员执行，他们会对特定系统或一组系统采取多种策略和技术尝试访问。这个过程可能包括但不限于：
- 初步侦察以了解系统功能
- 网络探测扫描以查找开放端口
- 网络漏洞扫描以寻找未打补丁的安全隐患
- Web 应用程序漏洞扫描以识别设计缺陷
- 使用自动化工具尝试攻击系统
- 手动试探并实施攻击

Metasploit 是一个常用的自动化渗透测试框架，它通过脚本语言简化了许多复杂的攻击流程，极大地提高了效率。无论是内部员工还是外部聘请的专业人士都可以进行渗透测试，具体方式取决于企业的实际情况。渗透测试主要分为三类：
- **白盒测试**：提供给攻击者详细的系统信息，有助于快速定位漏洞。
- **灰盒测试**：介于白盒与黑盒之间，为攻击者提供有限的知识背景。
- **黑盒测试**：完全模拟真实世界中的未知攻击场景，不向测试者透露任何预先信息。

渗透测试是一项耗时且需投入大量资源的工作，但它对于维护长期有效的信息安全体系至关重要。

### 15.3 软件测试的重要性

软件在现代企业中扮演着极其重要的角色，尤其是在以下几个方面：
- 访问操作系统及硬件资源的能力
- 处理包括信用卡号、社保号码在内的敏感个人信息
- 依赖存储有重要商业数据的数据库
- 支撑公司核心业务运作，一旦出现问题可能导致重大损失

因此，对软件进行全面细致的测试对于保障组织的信息安全至关重要。接下来我们将探讨几种可以在软件开发生命周期中采用的不同类型的测试方法。

#### 注意:
本章节重点讨论软件测试相关的话题。有关软件开发安全生命周期(SDLC)以及更深层次的安全议题，请参阅第 20 章“软件开发安全”。

### 15.3.1 代码审查与测试

代码审查是软件质量保证流程中的一个重要组成部分。这一过程旨在通过第三方评审开发者的代码来发现可能存在的安全隐患、性能瓶颈或其他可靠性问题，防止这些问题影响到最终产品的稳定性和安全性。根据不同的组织文化，代码审查可以采取多种形式，其中最正式的一种被称为 Fagan 检查法，它包含六个步骤：
1. 规划
2. 概述
3. 准备
4. 检查
5. 返工

通过这样的流程，可以有效地提高代码质量和整体项目成功率。