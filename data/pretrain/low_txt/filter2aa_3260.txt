# EMET 4.0 PKI Mitigation
## Neil Sikka
### DefCon 21

## About Me
- **Security Engineer at Microsoft Security Response Center (MSRC)**
- **Focus on Zero-Day Vulnerabilities**
- **EMET Developer**
- **Passionate about Security Research in Free Time:**
  - [Blog](http://neilscomputerblog.blogspot.com/)
- **Twitter:**
  - [@neilsikka](https://twitter.com/neilsikka)

## Overview
1. What Is EMET?
2. New Features in EMET 4.0
3. EMET Architecture
4. PKI Feature In-Depth
5. PKI Demo

## What Is EMET?
- **Mitigates various exploitation techniques** through behavior-based methods, not signature-based.
- **Examples of mitigations:**
  - Preventing shellcode from reading the Export Address Table.
  - Dynamically loading DLLs at runtime without recompiling or redeploying applications.
- **Helps mitigate zero-day vulnerabilities.**
- **Compatible with all supported Windows platforms (x86/amd64).**
- **Free and available to the security community.**

## Compatible Applications
The logos and products mentioned herein may be the trademarks of their respective owners.

## Changes Between EMET 3.0 and 4.0
- **Added Certificate Trust (PKI) Mitigations:**
  - First non-memory corruption mitigation.
- **ROP Mitigation:**
  - Deep Hooks, AntiDetours, Banned Functions.
- **New GUI.**

## Exploit Mitigations
- **DEP (Data Execution Prevention):**
  - Calls `SetProcessDEPPolicy`.
- **HeapSpray:**
  - Reserves locations used by heap sprays.
- **Mandatory ASLR (Address Space Layout Randomization):**
  - Reserves module preferred base address, causing the loader to load the module elsewhere.
- **NullPage:**
  - Reserves the first memory page in the process for defense in depth.
- **EAF (Export Address Filtering):**
  - Filters shellcode access to the Export Address Table (e.g., `kernel32` and `ntdll`).
- **BottomUp Randomization:**
  - Randomizes data structure bases.

## Additional Exploit Mitigations
- **SEHOP (Structured Exception Handler Overwrite Protection):**
  - Validates SEH chain looking for `_EXCEPTION_REGISTRATION` structures whose prev pointer is -1.
- **ROP Hardening (new in 4.0):**
  - **Deep Hooks:** Protects critical APIs and the APIs they call.
  - **AntiDetours:** Protects against jumping over detoured parts of a function.
  - **Banned Functions:** Disallows calling `ntdll!LdrHotpatchRoutine`.

## ROP (Return Oriented Programming)
- **Bypasses DEP (Data Execution Prevention).**
- **Attacker injects a call stack into user-controlled memory.**
- **Stack contains return pointers to "gadgets" in executable modules.**
- **Gadgets are specifically selected sequences of instructions followed by a `ret`.**
- **Commonly ROP'ed functions include `VirtualProtect`.**
- **Requires a "Stack Pivot" to make the x86 ESP register point to the attacker's call stack.**

## ROP Mitigations (New in 4.0)
- **LoadLib:**
  - Ensures that `LoadLibrary()` is not called on a network location.
- **MemProt:**
  - Ensures that stack pages are not made executable.
- **Caller:**
  - Ensures that the return address on the stack was preceded by a `call`.
  - Ensures that the function was not reached via a `ret`.
- **SimExecFlow:**
  - Ensures that the function does not return to ROP gadgets.
- **StackPivot:**
  - Ensures that the Stack Pointer (ESP) is between stack limits defined by TIB.

## EMET Architecture
- **Components:**
  - `EMET_Agent.exe`: Tray Icon, Logging, PKI.
  - `EMET.dll`, `EMET_CE.dll`: Inter-process Communications.

## What Is PKI?
- **Public Key Infrastructure (PKI) is a set of hardware, software, people, policies, and procedures needed to create, manage, distribute, use, store, and revoke digital certificates.**
- **Ensures confidentiality, integrity, and attribution online.**
- **Used in secure communications such as bank websites and HTTPS.**

## PKI Hierarchy
- **End Entity:**
  - End Certificate.
- **Intermediate Certification Authority:**
  - Intermediate Certificate.
- **Root Certification Authority:**
  - Root Certificate.
- **Verification:**
  - Each certificate is signed by its parent, verified through a digital signature.

## Recent SSL/TLS Incidents
- **December 2008:** MD5 proven weak (Sotirov/Stevens).
- **March 2011:** Comodo CA signs 9 fraudulent certificates.
- **August 2011:** Diginotar signs at least 1 fraudulent certificate.
- **November 2011:** DigiCert issues 22 certs with 512-bit keys.
- **January 2013:** TURKTRUST creates 2 fraudulent CAs and a certificate.

## PKI Certificate Pinning
- **Pinning enforces certain assumptions or expectations about certificates received from the internet.**

## Related Work
- **TACK (Marlinspike, Perrin):** Requires TLS changes, pins to TACK signing key.
- **Convergence (Marlinspike):** Based on Perspectives project, new protocol.
- **DANE/TLS (RFC 6698):** Requires DNS changes.
- **HSTS (RFC 6797) + Draft ietf websec key pinning (Evans, Palmer, Sleevi):** Pins to SubjectPublicKeyInfo hash, requires HTTP changes, used in Chrome.

## EMET’s Design Goals
- **User Control:**
  - Users specify certificates, domain names, and heuristic checks.
- **No Protocol Changes:**
  - Avoids breaking existing protocols and requiring adoption by the internet.
- **Standalone Tool:**
  - No dependency on remote services.

## EMET’s Approach
- **No Protocol Changes:**
  - Pins to Root Certificates, not Intermediate Certificates.
  - Pins to certificates in the Current User’s “Trusted Root Certification Authorities” store.
- **Certificate Identification:**
  - By  tuples (Issuer Name and Serial Number).
  - By Subject Key Identifier (SHA-1 of subjectPublicKey).

## Certificate Identification
- **Tuple Identification:**
  - According to RFC5280, the issuer name and serial number uniquely identify a certificate.
- **Public Key Identification:**
  - Some certificates chain to roots with the same public key.
  - EMET optionally allows identification by only the Subject Key Identifier (SHA-1 of the public key).

## EMET PKI Pinning Architecture
- **Default Configuration Example:**
  - Pinned Sites: `login.skype.com`, `secure.skype.com`.
  - Pinned Roots: `MSSkypeCA`, `Baltimore CyberTrust Root`, `Verisign`, `GlobalSign`, `GTE CyberTrust Global Root`.

## Windows CAPI Extension
- **Implemented in `EMET_CE[64].dll`:**
  - Loaded inside the process.
  - Communicates with `EMET_Agent.exe`, passing the entire certificate chain in XML.
  - `EMET_Agent.exe` decides whether the cert is valid.

## Certificate Checks
- **Domain Name Matching:**
  - Matches the server name, end certificate’s subject name, simple name, DNS name, URL name, and any subject alternative name.
- **Pin Rule Expiration:**
  - Fails if the pin rule is expired.
- **Root Certificate Verification:**
  - Verifies the root certificate’s subject name and serial number or subject key identifier against pinned values.
- **Exceptions:**
  - Fails if the root public modulus bit length is less than allowed, digest algorithm is disallowed, or root country does not match the pin rule.

## Default Protected Domains
- **Shipped in `CertTrust.xml`:**
  - Enabled by “Recommended Settings” in the wizard.
  - **Microsoft Protected Domains:**
    - `login.microsoftonline.com`
    - `secure.skype.com`
    - `login.live.com`
    - `login.skype.com`
  - **Third-Party Protected Domains:**
    - `www.facebook.com`
    - `login.yahoo.com`
    - `twitter.com`

## Limitations
- **Specific to SSL/TLS:**
  - Only checks End and Root Certificates, not intermediate certificates.
- **Static Pin Configuration:**
  - Shipped with EMET, can become outdated.
- **Spoofed Certificates:**
  - May not be caught if they chain to the same root certificate as the original.
- **Not 100% Secure:**
  - Aims to raise the bar for attackers.

## Questions About EMET
- **Feel free to ask any questions!**

## References
- **ntdll!LdrHotpatchRoutine**
- **MD5 Harmful (Sotirov/Stevens)**
- **TACK (Marlinspike, Perrin)**
- **Convergence (Marlinspike)**
- **DANE/TLS RFC 6698**
- **HSTS RFC 6797**
- **Chrome’s Public Key Pinning Extension (Evans, Palmer, Sleevi)**
- **X509 RFC 5280**
- **More Information about Memory Corruption Mitigations in EMET 4.0:**
  - [Recon 2013 Slides](http://www.recon.cx/2013/slides/Recon2013-Elias%20Bachaalany-Inside%20EMET%204.pdf)
- **ROP Explanation:**
  - [Blog Post](http://www.neilscomputerblog.blogspot.com/2013/04/rop-return-oriented-programming.html)
  - [YouTube Video](http://www.youtube.com/watch?v=Vyi8b3VOw9M)

## Download EMET 4.0
- **[Download Link](http://www.microsoft.com/en-us/download/details.aspx?id=39273)**