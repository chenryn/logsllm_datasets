# Automating Cross-Layer Diagnosis of Enterprise Wireless Networks

**Authors:**
- Yuchung Cheng
- Mikhail Afanasyev
- Patrick Verkaik
- Péter Benkö†
- Jennifer Chiang
- Alex C. Snoeren
- Stefan Savage
- Geoffrey M. Voelker

**Affiliations:**
- Department of Computer Science and Engineering, University of California, San Diego
- †Traffic Analysis and Network Performance Laboratory (TrafficLab), Ericsson Research, Budapest, Hungary

## Abstract
Modern enterprise networks are so complex that even simple faults can be challenging to diagnose, let alone transient outages or service degradations. This problem is particularly evident in 802.11-based wireless access networks, which are now ubiquitous in the enterprise. In addition to the complexities of wired networks, wireless networks face unique challenges such as shared spectrum, user mobility, and authentication management. Few organizations have the expertise, data, or tools to decompose the underlying problems and interactions responsible for transient outages or performance degradations. In this paper, we present a set of modeling techniques for automatically characterizing the source of such problems. Specifically, we focus on data transfer delays unique to 802.11 networks—media access dynamics and mobility management latency. Through a combination of measurement, inference, and modeling, we reconstruct sources of delay from the physical layer to the transport layer, as well as the interactions among them. We demonstrate our approach using comprehensive traces of wireless activity in the UCSD Computer Science building.

## Categories and Subject Descriptors
C.4 [Performance of Systems]: Modeling techniques

## General Terms
Modeling, Measurement, Performance

## Keywords
Wireless networks, 802.11, modeling, measurement

## 1. Introduction
"Is your wireless working?" The frequency of this question highlights both our increasing dependence on ubiquitous Internet connectivity and the practical challenges in delivering it. The combination of unlicensed spectrum and inexpensive 802.11 hardware has driven a massive deployment of wireless access capability, starting in homes and extending to workplaces. Today, over two-thirds of U.S. corporations provide WiFi-based untethered Internet connectivity [8]. However, there is a significant difference between installing a single wireless access point (AP) in an isolated home and deploying wireless throughout an enterprise. The latter may involve hundreds of APs, carefully sited and configured according to a radio-frequency (RF) site survey, and managed to minimize contention, maximize throughput, and provide seamless coverage. Moreover, this intricate machinery is not managed by the 802.11 protocol family itself, which was never designed for the level of success it has achieved.

Instead, the burden falls to the network administrator, who must manage the interactions between the RF domain, link-layer variability, dynamic addressing and authorization, VLAN setup, and the complexities of the wired network. Given this complexity, even simple faults can be difficult to diagnose, let alone transient outages or service degradations. When a network manager is asked, "Why was the network flaky ten minutes ago?" the answer is often, "I'm not sure. It looks fine now." While this problem is not unique to 802.11-based networks, these environments introduce further intricacies that are unique and qualitatively harder to diagnose.

Among these issues, wireless networks interact via shared spectrum in ways that may not be directly observable (contention and interference), yet can produce significant end-to-end delays or packet losses. The 802.11 standards allow considerable "latitude" in the media access protocol, leading vendors to produce a wide range of "interpretations," many of which have significant impacts on performance. Additionally, the promise of seamless coverage is not a property provided by 802.11 itself. Instead, most enterprise deployments implement this property using an undeclared "layer 2.5" patched together from portions of the 802.11 protocol, VLANs, ARP, DHCP, and often proprietary mobility management and authentication systems. Unsurprisingly, the resulting Rube-Goldberg contraption has its own unique failure modes.

In practice, few network administrators have the detailed visibility into network behavior and the breadth of knowledge needed to diagnose such problems. When they do, the process is highly labor-intensive and rarely cost-effective except for the most severe and persistent issues. Even then, the range of interactions and lack of visibility into their causes may stymie manual diagnosis. For example, at UCSD, wireless users in a new office building experienced transient but debilitating performance problems lasting over a year, despite extensive troubleshooting by local experts and vendor technicians [1].

Our experience suggests that such diagnoses must be fully automated to be effective. As a first step in this direction, we have developed models of wireless delays from the physical layer to the transport layer. Specifically, we demonstrate techniques to infer the causes and effects of both link-layer delays and mobility management delays. To demonstrate their effectiveness, we use our models to investigate the causes of transient performance problems from traces of wireless traffic in the four-story UCSD Computer Science building. We find that no single anomaly, failure, or interaction is solely responsible for these issues in our environment, suggesting that a holistic analysis approach may be necessary to cover the range of problems experienced in real networks.

The remainder of this paper is structured as follows. We first review the literature we build upon and related efforts in Section 2. In Section 3, we summarize the monitoring system we use to collect trace data for our models. We then outline the many potential sources of service disruption in Section 4. Sections 5 and 6 describe our techniques for modeling media access and mobility management behavior, respectively, including an analysis of the problems identified at our location, followed by our conclusions.

## 2. Related Work
Since the deployment of wireless local-area networks such as 802.11, researchers have sought to understand how these systems behave and perform based on empirical observations. The monitoring systems used to make these observations have expanded in complexity and scope over time. Early systems used existing infrastructure, such as the wired distribution network and the APs, to record wireless traffic and network characteristics [2, 16]. Later systems deployed small numbers of dedicated monitoring nodes, sometimes concentrated near the APs, other times distributed throughout the network, thereby pushing the frontier of observation into the link-layer domain [12, 18, 23]. Recent efforts have scaled monitoring platforms to observe large, densely deployed networks in their entirety [1, 7], providing the ability to observe every link-layer network transmission across location, frequency, and time [7].

These monitoring systems have been used to directly measure various aspects of 802.11 behavior and performance, ranging from application workloads and user mobility at the high level to wireless loss, rate adaptation, and handoff delay at the link layer [10, 13, 19] and even physical layer anomalies [22]. Other techniques infer more detailed network events and characteristics, such as link-layer loss and the transmitters of packets lacking MAC addresses [4, 7, 18], co-channel interference and overprotective APs [7], misbehaving and heterogeneous devices [4, 7, 9], root causes of physical-layer anomalies [22], and regions of poor coverage [4]. We expand upon these detailed efforts and present techniques to infer critical path delays [3] of media access for every packet, such as AP queuing delay and media contention (mandatory and regular backoff), as well as techniques that infer management delays for supporting intermittent and mobile devices for every user.

To infer critical path delays for wireless transmissions, we develop a detailed model of 802.11 media access (Section 5). Numerous models have been developed previously to estimate various aspects of 802.11 performance, such as overall network capacity [6], maximum throughput of a flow in an 802.11 network [14], and the saturation throughput and expected access delay of contending nodes [17]. Such models are typically analytic and make simplifying assumptions, such as the absence of transmission errors, uniform transmission rates and packet sizes, infinite node demand, and steady contention for media access. These models may be useful for understanding the limits of 802.11 performance under idealized conditions but omit important aspects of real networks that we infer with our model: the magnifying effects of bursty traffic, and the complexities of workload, protocol, and environment that lead to correlated and unexpected interactions.

Three recent systems are closely related to the goals of this paper. DAIR uses wireless USB dongles attached to desktop machines in an enterprise wireless network to measure wireless events throughout the network [1]. DAIR applications install filters at the wireless monitors to trace information of interest and store it in a central database; applications (inference engines) then use this data to perform analyses. Very recent work on DAIR develops management applications that take advantage of client location, such as identifying regions in the network experiencing consistently poor coverage [4]. Our goals are similar in that we develop analyses to aid network management, but we base analysis on a global understanding of network behavior across all protocol layers.

WiFiProfiler [5] also helps users troubleshoot wireless connectivity problems. WiFiProfiler relies on peer diagnosis among clients without the involvement of system administrators, while our paper uses third-party monitoring and inference. WiFiProfiler installs custom software on the client to collect detailed network stack statistics, such as beacon losses and queue length, as well as OS and driver details. It then exchanges this information with peers to diagnose connectivity problems. The client can determine if it has an association problem, DHCP problem, or TCP problem. The MOJO system develops tools and techniques to identify the root causes of physical-layer performance anomalies, such as broadband interference and the capture effect [22]. While we are interested in physical-layer issues, we identify them as just one cause among many across the interacting protocol layers.

## 3. Trace Collection
The modeling approach we describe in this paper operates on detailed traces of wireless activity. We use the Jigsaw system described in [7] to collect the traces we use in this paper, and we briefly sketch the system in this section. Jigsaw is a distributed wireless monitoring platform that we have deployed in our department building to monitor the production 802.11 network. The production 802.11 network consists of 40 Avaya AP-8 802.11 b/g access points covering four floors and the basement. The APs are identically configured (except for their channel assignment) and support both 802.11b and 802.11g without encryption.

The hardware monitors consist of 192 radios interspersed between the infrastructure APs. The radios passively monitor the wireless network and report all wireless events across location, channel, and time via a private wired network to a back-end storage server. Jigsaw merges and time synchronizes these separate radio traces into a single, global unified trace. Moreover, Jigsaw performs this operation in real time; a single 2.2Ghz AMD Opteron server can synchronize one minute of raw trace data in under 15 seconds.

We currently configure Jigsaw to capture the first 120 bytes of each wireless frame. As a result, the aggregate monitor traffic from all radios ranges from 2–10Mbps and is roughly five times the amount of production wireless traffic. On a typical weekday, the raw traces total 80 GB, and the merged, synchronized trace is roughly 10 GB in size. Our analyses are conducted on the synchronized trace; the raw traces are used for debugging purposes only. The particular trace used in this paper was collected on Thursday, January 11, 2007. Table 1 shows various high-level characteristics of the users and traffic contained in this trace.

| **Start** | **Duration** | **Radio Monitors** | **Infrastructure APs** | **Wireless Clients** | **Raw Trace Size** | **Unique Frames Captured** |
|-----------|--------------|--------------------|------------------------|----------------------|--------------------|-----------------------------|
| 1/11/07 @ 00:00 | 24 hours | 192 | 40 | 188 | 96 GB | 210 M |

## 4. The Troubled Life of a Packet
There are numerous sources of disruption or performance degradation in an 802.11 network. To illustrate these challenges and motivate the need for our analyses, we provide a quick primer on several potential sources of delay and packet loss.

### 4.1 Physical Layer
The physical layer presents the first obstacle for an 802.11 frame hoping to be delivered. Sharing the unlicensed 2.4GHz ISM band are a wide range of non-802.11 devices, ranging from cordless phones to microwave ovens. An 802.11 packet in flight may be corrupted by broadband interference from such devices or simply be overpowered at the receiver. Alternatively, the sender may detect the presence of RF energy on the channel and defer transmission, incurring delays until the interfering source ceases.

For example, Figure 1 illustrates the interference caused by a microwave oven. The figure depicts the reception of physical error frames over time. The characteristic pattern (the white gap) results from the wave doubler circuit used in consumer microwave ovens to convert A/C line power into microwave energy. Roughly speaking, a U.S. oven will generate swept broadband interference for 8 ms (half of the 60-Hz cycle) followed by a similar period of quiescence. In all cases, in-range 802.11 radios will defer transmission until the medium is idle, building queues and adding delay in the process. Frames in flight when the oven is turned on may be corrupted, depending on the receiver power of the microwave signal.

Such physical layer interactions are not restricted to non-802.11 devices. The 2.4GHz ISM band combined with the nominal 22-MHz channel bandwidth used by an 802.11 transmitter can easily overlap neighboring transmitters on different channels. Indeed, while conventional wisdom holds that 802.11 has three orthogonal channels in the United States, this statement is not always true in practice. We have routinely observed adjacent channel interactions and have even witnessed many successful packet receptions between radios in which the transmitting and receiving radios were separated by as much as 50 MHz (i.e., channel 1 to channel 11). In addition to neighboring channel interference, 802.11 also suffers from hidden node and exposed node problems, where nodes outside the range of each other's carrier sense mechanisms can interfere with ongoing transmissions.

![Physical Error Frame Pattern During Microwave Oven Use](figure1.png)
*Figure 1: Physical error frame pattern during microwave oven use. The y-axis depicts (time % 16) ms, showing the offset of physical error packets within the 16 ms microwave period. The x-axis shows two minutes of microwave use.*