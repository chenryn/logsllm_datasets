### B.U.M. Corp. Confidential

#### Once Established
- You can send JCL (Job Control Language).
- You can send NMR (command/control records).
- Your node is now considered ‘trusted’.
  - This, of course, depends on your security settings.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Interesting Feature
- Users from one node do not need to log on separately.
- When a job is sent, the userID is included in the NJE (Network Job Entry) job.
- As long as the account exists on the receiving side, the job will be processed.

**Contact:**
- mainframed767
- bigendiansmalls

---

### No Password
- Note: No password or authentication information is sent.
- Nodes are trusted, so there is no need for re-authentication.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Breaking NJE
- First, we need to find mainframes with NJE.
- Problem: nmap (network scanning tool).

**Contact:**
- mainframed767
- bigendiansmalls

---

### NJE Node Names
- You need the NJE node names to connect.
- NMAP Script: NJE Node Brute
  - This script brute forces node names, even if the node is connected.

**Contact:**
- mainframed767
- bigendiansmalls

---

### NJE is Super Awesome
- To use NJE, you need three things:
  - Node Name of your target.
  - Node name you want to pretend to be.
  - IP Address of your target.
- With these, you can inject JES2 commands using `iNJEctor.py`.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Books from the Past!
- Much of our research is based on very old books.
- Some of these books are older than some of you here today.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Exploit Development

#### Architecture
- Modes: 23-bit, 31-bit, and 64-bit.
  - 3 sets of registers (16 each).
  - Big Endian.
  - Von Neumann Architecture.
  - Stack-based (to some extent).
- Virtual Address Spaces.
- Program Status Word (PSW).
- Operating Systems: Z/OS, USS, Z/Linux, Z/VM.

**Contact:**
- mainframed767
- bigendiansmalls

---

### DC in a Box
- Supported languages and technologies:
  - Java, Linux, Cloud, Web, Mobile, Websphere, C, C++, Assembly, PL/I, COBOL, DB2, JavaScript, MQ, HTTP, and more.
  - Unix System Services.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Where to Start
- Focus on what you know, such as Unix System Services.
- Why? Because it involves C and Assembler.
- Narrowed down to:
  - Buffer Overflow Proof of Concept (POC).
  - Format String Exploit POC.
  - Learn the testing environment.
  - Shell code development and deployment.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Useful Example
- Execute a local shell (useful for Privilege Escalation).
- Steps:
  - Build working C or HLASM code.
  - Convert to machine code.
  - Once working, “shellcode-ize” it.
    - Remove bad characters or encode.
  - Test with a C buffer stub program.

**Contact:**
- mainframed767
- bigendiansmalls

---

### What’s Next?
- MSF Integration?
- Native Exploits.
- Java / Web exploits.
- Privilege Escalation.
- Continued Tool development / Porting.
  - Generic shellcode building.
  - Fuzzing tools.

**Contact:**
- mainframed767
- bigendiansmalls

---

### Thanks
- DEFCON for letting us talk about this.
- IBM for this cool platform and online books.
- Huge Mega Corps for neglecting this platform.
- Dominic White for his tools.
- Swedish underground community.
- X3270 authors.

**Contact:**
- Phil - “Soldier of Fortran”
  - @mainframed767
  - Email: [PI:EMAIL]
  - Website: Soldieroffortran.org
- Chad – “Big Endian Smalls”
  - @bigendiansmalls
  - Email: [PI:EMAIL]
  - Website: Bigendiansmalls.com

---

This version is more organized, clear, and professional, with consistent formatting and a logical flow of information.