### References

- **S. Bowe.** "Pairing." *URL:* https://github.com/zkcrypto/pairing.

- **A. Chiesa et al.** "On Cycles of Pairing-Friendly Elliptic Curves." *In:* SIAM Journal on Applied Algebra and Geometry (2019).

- **M. Campanelli et al.** "LegoSNARK: Modular Design and Composition of Succinct Zero-Knowledge Proofs." *ePrint Report 2019/142.*

- **Chainalysis.** "Chainalysis Inc." *URL:* https://chainalysis.com/.

- **A. Chiesa et al.** "Marlin: Preprocessing zk-SNARKs with Universal and Updatable SRS." *ePrint Report 2019/1047.*

- **C. Cimpanu.** "Zaif Cryptocurrency Exchange Loses $60 Million in Recent Hack." *URL:* https://www.zdnet.com/article/zaif-cryptocurrency-exchange-loses-60-million-in-july-hack/. *Accessed:* 2018-12-27.

- **C. Costello et al.** "Attractive Subfamilies of BLS Curves for Implementing High-Security Pairings." *In:* INDOCRYPT '11.

- **Authorized licensed use limited to: Tsinghua University. Downloaded on March 19, 2021, at 10:02:38 UTC from IEEE Xplore. Restrictions apply.**

### Definitions and Conditions

Let:
- \( xe \) be the ledger digest.
- \( stL \) be the state of the ledger.
- \( [sni]_m \) be the old record serial numbers.
- \( [cmj]_n \) be the new record commitments.
- \( memo \) be the transaction memorandum.

The witness \( we \) is defined as:
- Old records.
- Old record membership witnesses.
- Old address secret keys.
- New records.
- Auxiliary predicate input.

Where:
- For each \( i \in \{1, \ldots, m\} \), \( ri = (apki, payloadi, Φb,i, Φd,i, ρi, ri, cmi) \).
- For each \( j \in \{1, \ldots, n\} \), \( rj = (apkj, payloadj, Φb,j, Φd,j, ρj, rj, cmj) \).

Define the local data \( ldata \) as:
- \( [Φd,i]_m \)
- \( [Φd,j]_n \)

A witness \( we \) is valid for an instance \( xe \) if the following conditions hold:

1. **For each \( i \in \{1, \ldots, m\} \):**
   - \( apki = CM.Commit(ppCM, skPRF,i; rpk,i) \) and \( aski = (skPRF,i, rpk,i) \).
   - If \( ri \) is not a dummy, \( wL,i \) proves that the commitment \( cmi \) is in a ledger with digest \( stL \): \( L.Verify(stL, cmi, wL,i) = 1 \).
   - The address public key \( apki \) and secret key \( aski \) form a valid key pair.
   - The serial number \( sni \) is valid: \( sni = PRF_{skPRF,i}(ρi) \).
   - The old record commitment \( cmi \) is valid: \( cmi = TCM.Commit(ppTCM, apki \parallel payloadi \parallel Φb,i \parallel Φd,i \parallel ρi; ri) \).
   - The death predicate \( Φd,i \) is satisfied by local data: \( Φd,i(i \parallel ldata) = 1 \).

2. **For each \( j \in \{1, \ldots, n\} \):**
   - The serial number nonce \( ρj \) is computed correctly: \( ρj = CRH.Eval(ppCRH, j \parallel sn1 \parallel \ldots \parallel snm) \).
   - The new record commitment \( cmj \) is valid: \( cmj = TCM.Commit(ppTCM, apkj \parallel payloadj \parallel Φb,j \parallel Φd,j \parallel ρj; rj) \).
   - The birth predicate \( Φb,j \) is satisfied by local data: \( Φb,j(j \parallel ldata) = 1 \).

### Additional References

- **Coinbase.** "Coinbase." *URL:* https://www.coinbase.com/. *Accessed:* 2019-01-03.

- **C. Costello.** "Particularly Friendly Members of Family Trees." *ePrint Report 2012/072.*

- **R. Canetti et al.** "Practical Delegation of Computation Using Multiple Servers." *In:* CCS '11.

- **R. Canetti et al.** "Refereed Delegation of Computation." *In:* Information and Computation (2013).

- **E. Cecchetti et al.** "Solidus: Confidential Distributed Ledger Transactions via PVORM." *In:* CCS '17.

- **R. Cheng et al.** "Ekiden: A Platform for Confidentiality-Preserving, Trustworthy, and Performant Smart Contract Execution." *arXiv cs.CR/1804.05141.*

- **A. De Santis et al.** "Robust Non-interactive Zero Knowledge." *In:* CRYPTO '01.

- **N. De.** "Coincheck Confirms Crypto Hack Loss Larger than Mt. Gox." *URL:* https://www.coindesk.com/coincheck-confirms-crypto-hack-loss-larger-than-mt-gox. *Accessed:* 2018-12-27.

- **P. Daian et al.** "Flash Boys 2.0: Frontrunning, Transaction Reordering, and Consensus Instability in Decentralized Exchanges." *arXiv cs.CR/1904.05234.*

- **T. T. A. Dinh et al.** "M2R: Enabling Stronger Privacy in MapReduce Computation." *In:* USENIX Security '15.

- **Elliptic.** "Elliptic Enterprises Limited." *URL:* https://www.elliptic.co/.

- **S. Eskandari et al.** "SoK: Transparent Dishonesty: Front-Running Attacks on Blockchain." *arXiv cs.CR/1902.05164.*

- **EOS.** "EOS.IO Technical White Paper." *URL:* https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md.

- **Ethereum.** "I think the attacker is this miner - today he made over $50k." *URL:* https://www.reddit.com/r/ethereum/comments/55xh2w/i_think_the_attacker_is_this_miner_today_he_made/.

- **Etherscan.** "The Ethereum Block Explorer." *URL:* https://etherscan.io/tokens.

- **U. Feige et al.** "Making Games Short." *In:* STOC '97.

- **D. Freeman et al.** "A Taxonomy of Pairing-Friendly Elliptic Curves." *In:* J. Cryptol. (2010).

- **R. Gennaro et al.** "Quadratic Span Programs and Succinct NIZKs without PCPs." *In:* EUROCRYPT '13.

- **J. Groth et al.** "Snarky Signatures: Minimal Signatures of Knowledge from Simulation-Extractable SNARKs." *In:* CRYPTO '17.

- **L. Goodman.** "Tezos — a self-amending crypto-ledger." *URL:* https://tezos.com/static/white_paper-2dc8c02267a8fb86bd67a108199441bf.pdf.

- **J. Groth.** "Simulation-Sound NIZK Proofs for a Practical Language and Constant Size Group Signatures." *In:* ASIACRYPT '06.

- **A. Gabizon et al.** "PLONK: Permutations over Lagrange-bases for Oecumenical Noninteractive arguments of Knowledge." *ePrint Report 2019/953.*

- **D. Hopwood et al.** "Zcash Protocol Specification." *URL:* https://github.com/zcash/zips/blob/master/protocol/protocol.pdf.

- **S. Jain et al.** "How to Verify Computation with a Rational Network." *arXiv cs.GT/1606.05917.*

- **R. Kumaresan et al.** "Amortizing Secure Computation with Penalties." *In:* CCS '16.

- **H. Kalodner et al.** "BlockSci: Design and Applications of a Blockchain Analysis Platform." *arXiv cs.CR/1709.02489.*

- **H. A. Kalodner et al.** "Arbitrum: Scalable, Private Smart Contracts." *In:* USENIX Security '18.

- **G. Kaptchuk et al.** "Giving State to the Stateless: Augmenting Trustworthy Computation with Ledgers." *In:* NDSS '19.

- **R. Kumaresan et al.** "How to Use Bitcoin to Play Decentralized Poker." *In:* CCS '15.

- **A. E. Kosba et al.** "Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts." *In:* SP '16.

- **L. Luu et al.** "Demystifying Incentives in the Consensus Computer." *In:* CCS '15.

- **F. McKeen et al.** "Innovative Instructions and Software Model for Isolated Execution." *In:* HASP '13.

- **M. Maller et al.** "Sonic: Zero-Knowledge SNARKs from Linear-Size Universal and Updateable Structured Reference Strings." *ePrint Report 2019/099.*

- **I. Miers et al.** "Zerocoin: Anonymous Distributed E-Cash from Bitcoin." *In:* SP '13.

- **S. Meiklejohn et al.** "A Fistful of Bitcoins: Characterizing Payments Among Men with No Names." *In:* IMC '13.

- **S. Micali et al.** "Zero-Knowledge Sets." *In:* FOCS '03.

- **I. Meckler et al.** "Coda: Decentralized Cryptocurrency at Scale." *URL:* https://cdn.codaprotocol.com/v2/static/coda-whitepaper-05-10-2018-0.pdf.

- **S. Nakamoto.** "Bitcoin: A Peer-to-Peer Electronic Cash System." *URL:* http://www.bitcoin.org/bitcoin.pdf.

- **N. Narula et al.** "zkLedger: Privacy-Preserving Auditing for Distributed Ledgers." *In:* NSDI '18.

- **N. Popper et al.** "Apparent Theft at Mt. Gox Shakes Bitcoin World." *URL:* https://www.nytimes.com/2014/02/25/business/apparent-theft-at-mt-gox-shakes-bitcoin-world.html. *Accessed:* 2018-12-27.

- **J. Poon et al.** "Plasma: Scalable Autonomous Smart Contracts." *URL:* https://plasma.io/.

- **T. B. Project.** "An Overview of Decentralized Trading of Digital Assets." *URL:* https://collaborate.thebkp.com/project/TL/document/9/version/10/. *Accessed:* 2018-12-27.

- **A. Rai Choudhuri et al.** "Fairness in an Unfair World: Fair Multiparty Computation from Public Bulletin Boards." *In:* CCS '17.

- **C. Reiwießner.** "From Smart Contracts to Courts with Not So Smart Judges." *URL:* https://blog.ethereum.org/2016/02/17/smart-contracts-courts-not-smart-judges/.

- **F. Reid et al.** "An Analysis of Anonymity in the Bitcoin System." *In:* SocialCom/PASSAT '11.

- **D. Ron et al.** "Quantitative Analysis of the Full Bitcoin Transaction Graph." *In:* FC '13.

- **A. Sahai.** "Non-Malleable Non-Interactive Zero Knowledge and Adaptive Chosen-Ciphertext Security." *In:* FOCS '99.

- **F. Schuster et al.** "VC3: Trustworthy Data Analytics in the Cloud Using SGX." *In:* SP '15.

- **M. Spagnuolo et al.** "BitIodine: Extracting Intelligence from the Bitcoin Network." *In:* FC '14.

- **J. Teutsch et al.** "A Scalable Verification Solution for Blockchains." *URL:* https://people.cs.uchicago.edu/~teutsch/papers/truebit.pdf.

- **P. Valiant.** "Incrementally Verifiable Computation or Proofs of Knowledge Imply Time/Space Efficiency." *In:* TCC '08.

- **F. Vogelsteller et al.** "ERC-20 Token Standard." *URL:* https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md.

- **J. Van Bulck et al.** "Breaking Virtual Memory Protection and the SGX Ecosystem with Foreshadow." *In:* IEEE Micro (2019).

- **G. Wood.** "Ethereum: A Secure Decentralised Generalised Transaction Ledger." *URL:* http://yellowpaper.io.

- **R. Wahby et al.** "Efficient RAM and Control Flow in Verifiable Outsourced Computation." *In:* NDSS '15.

- **ZCash Company.** *URL:* https://z.cash/.

- **ZCash Parameter Generation.** *URL:* https://z.cash/technology/paramgen.html. *Accessed:* 2017-09-28.

- **W. Zheng et al.** "Opaque: An Oblivious and Encrypted Distributed Analytics Platform." *In:* NSDI '17.

- **W. Zhao.** "Bithumb $31 Million Crypto Exchange Hack: What We Know (And Don’t)." *URL:* https://www.coindesk.com/bithumb-exchanges-31-million-hack-know-dont-know. *Accessed:* 2018-12-27.

- **Authorized licensed use limited to: Tsinghua University. Downloaded on March 19, 2021, at 10:02:38 UTC from IEEE Xplore. Restrictions apply.**

This version of the text is more structured, clear, and professional. It includes proper formatting and consistent citation styles.