### RapidChain: A Scalable and Efficient Blockchain Solution

RapidChain is designed to support large-scale networks, employing a distributed ledger architecture that partitions the blockchain across multiple committees. This design, combined with several key improvements, results in significantly higher transaction throughput and lower latency. 

#### Key Features:
- **Seamless Churn Handling:** RapidChain efficiently manages committee membership changes with minimal impact on transaction latency.
- **Improved Protocols:** Our system includes advanced protocols for fast gossip of large messages and inter-committee routing, enhancing overall performance.
- **Scalability:** Empirical evaluations show that RapidChain scales smoothly to network sizes of up to 4,000 nodes, outperforming previous solutions.

### Acknowledgments

The authors would like to acknowledge the support from the following grants:
- NSF Grants: CNS-1633282, 1562888, 1565208
- DARPA SafeWare: W911NF-15-C-0236 and W911NF-16-1-0389

We are also grateful for the kind assistance and valuable feedback from:
- Loi Luu (NUS)
- Aditya Sinha (Yale)
- Dominic Williams (Dfinity)
- Timo Hanke (Dfinity)
- Bryan Ford (EPFL)
- Eleftherios Kokoris Kogias (EPFL)

### References

1. **Blockchain Charts: Bitcoin’s Hashrate Distribution** (March 2017). Available at: <https://blockchain.info/pools>
2. **Blockchain Charts: Bitcoin’s Blockchain Size** (July 2018). Available at: <https://blockchain.info/charts/blocks-size>
3. **Jerasure: Erasure Coding Library** (May 2018). Available at: <http://jerasure.org>
4. **Abraham, I., Malkhi, D., Nayak, K., Ren, L., & Spiegelman, A.** (2017). Solida: A blockchain protocol based on reconfigurable Byzantine consensus. In *Proceedings of the 21st International Conference on Principles of Distributed Systems (OPODIS '17)*.
5. **Alon, N., Kaplan, H., Krivelevich, M., Malkhi, D., & Stern, J. P.** (2004). Addendum to scalable secure storage when half the system is faulty. *Information and Computation*.
6. **Alon, N., Kaplan, H., Krivelevich, M., Malkhi, D., & Stern, J.** (2000). Scalable secure storage when half the system is faulty. In *Proceedings of the 27th International Colloquium on Automata, Languages and Programming*.
7. **Andrychowicz, M., & Dziembowski, S.** (2015). PoW-Based Distributed Cryptography with No Trusted Setup. *Springer Berlin Heidelberg*, pp. 379–399.
8. **Awerbuch, B., & Scheideler, C.** (2006). Towards a scalable and robust DHT. In *Proceedings of the Eighteenth Annual ACM Symposium on Parallelism in Algorithms and Architectures (SPAA '06)*, pp. 318–327. ACM.
9. **Bano, S., Sonnino, A., Al-Bassam, M., Azouvi, S., McCorry, P., Meiklejohn, S., & Danezis, G.** (2017). Consensus in the age of blockchains. *CoRR*, abs/1711.03936.
10. **Berlekamp, E., & Welch, L. R.** (December 1986). Error correction for algebraic block codes, US Patent 4,633,470.
11. **Blahut, R. E.** (1983). *Theory and practice of error control codes*. Addison-Wesley Reading (Ma) etc.
12. **Bracha, G.** (1984). An asynchronous [(n − 1)/3]-resilient consensus protocol. In *Proceedings of the Third Annual ACM Symposium on Principles of Distributed Computing (PODC '84)*, pp. 154–162. ACM.
13. **Bracha, G.** (1985). An O(log n) expected rounds randomized Byzantine generals protocol. In *Proceedings of the Seventeenth Annual ACM Symposium on Theory of Computing (STOC '85)*, pp. 316–326. ACM.
14. **Bracha, G.** (November 1987). Asynchronous Byzantine agreement protocols. *Information and Computation*, 75(2), 130–143.
15. **Bracha, G., & Toueg, S.** (1983). Resilient consensus protocols. In *Proceedings of the Second Annual ACM Symposium on Principles of Distributed Computing (PODC '83)*, pp. 12–26. ACM.
16. **Buterin, V.** (2014). Ethereum's white paper. Available at: <https://github.com/ethereum/wiki/wiki/White-Paper>
17. **Cachin, C., Kursawe, K., & Shoup, V.** (2000). Random oracles in constantinople: Practical asynchronous Byzantine agreement using cryptography. In *Proceedings of the 19th ACM Symposium on Principles of Distributed Computing (PODC)*, pp. 123–132.
18. **Canetti, R., & Rabin, T.** (1993). Fast asynchronous Byzantine agreement with optimal resilience. In *Proceedings of the Twenty-fifth Annual ACM Symposium on Theory of Computing (STOC '93)*, pp. 42–51. ACM.
19. **Castro, M., & Liskov, B.** (2002). Practical Byzantine fault tolerance and proactive recovery. *ACM Transactions on Computer Systems (TOCS)*, 20(4), 398–461.
20. **Castro, M., & Liskov, B.** (1999). Practical Byzantine fault tolerance. In *Proceedings of the Third Symposium on Operating Systems Design and Implementation (OSDI '99)*, pp. 173–186.
21. **Corbett, J. C., Dean, J., Epstein, M., Fikes, A., Frost, C., Furman, J. J., Ghemawat, S., Gubarev, A., Heiser, C., Hochschild, P., Hsieh, W., Kanthak, S., Kogan, E., Li, H., Lloyd, A., Melnik, S., Mwaura, D., Nagle, D., Quinlan, S., Rao, R., Rolig, L., Saito, Y., Szymaniak, M., Taylor, C., Wang, R., & Woodford, D.** (2012). Spanner: Google’s globally-distributed database. pp. 251–264.
22. **Danezis, G., & Meiklejohn, S.** (2016). Centrally banked cryptocurrencies. In *23rd Annual Network and Distributed System Security Symposium (NDSS)*.
23. **Decker, C., Seidel, J., & Wattenhofer, R.** (2016). Bitcoin meets strong consistency. In *Proceedings of the 17th International Conference on Distributed Computing and Networking (ICDCN '16)*, pp. 13:1–13:10. ACM.
24. **Decker, C., & Wattenhofer, R.** (2013). Information propagation in the Bitcoin network. In *P2P*, pp. 1–10. IEEE.
25. **Douceur, J. R.** (2002). The sybil attack. In *International Workshop on Peer-to-Peer Systems*, pp. 251–260. Springer.
26. **Dubhashi, D. P., & Panconesi, A.** (2009). *Concentration of Measure for the Analysis of Randomized Algorithms*. Cambridge University Press.
27. **Dwork, C., & Naor, M.** (1993). Pricing via processing or combatting junk mail. In *Advances in Cryptology — CRYPTO' 92: 12th Annual International Cryptology Conference Santa Barbara, California, USA August 16–20, 1992 Proceedings*, pp. 139–147. Springer Berlin Heidelberg.
28. **Evans, D. S.** (2014). Economic aspects of Bitcoin and other decentralized public-ledger currency platforms. In *Coase-Sandor Working Paper Series in Law and Economics, No. 685*. The University of Chicago Law School.
29. **Eyal, I., Gencer, A. E., Sirer, E. G., & Van Renesse, R.** (2016). Bitcoin-NG: A scalable blockchain protocol. In *Proceedings of the 13th Usenix Conference on Networked Systems Design and Implementation (NSDI'16)*, pp. 45–59. USENIX Association.
30. **Feldman, P.** (1987). A practical scheme for non-interactive verifiable secret sharing. In *Proceedings of the 28th Annual Symposium on Foundations of Computer Science (SFCS '87)*, pp. 427–438. IEEE Computer Society.
31. **Garay, J., Kiayias, A., & Leonardos, N.** (2015). The bitcoin backbone protocol: Analysis and applications. In *Annual International Conference on the Theory and Applications of Cryptographic Techniques*, pp. 281–310. Springer.
32. **Gilad, Y., Hemo, R., Micali, S., Vlachos, G., & Zeldovich, N.** (2017). Algorand: Scaling byzantine agreements for cryptocurrencies. In *Proceedings of the 26th Symposium on Operating Systems Principles (SOSP '17)*, pp. 51–68. ACM.
33. **Hanke, T., Movahedi, M., & Williams, D.** (2018). DFINITY technology overview series, consensus system. *CoRR*, abs/1805.04548.
34. **Homakov, E.** (2017). Stop. calling. bitcoin. decentralized. Available at: <https://medium.com/@homakov/stop-calling-bitcoin-decentralized-cb703d69dc27>
35. **Huang, M., & Rego, V. J.** (2010). Polynomial evaluation in secret sharing schemes. Available at: <http://csdata.cs.purdue.edu/research/PaCS/polyeval.pdf>
36. **Karp, R., Schindelhauer, C., Shenker, S., & Vocking, B.** (2000). Randomized rumor spreading. In *Proceedings of the 41st Annual Symposium on Foundations of Computer Science (FOCS '00)*, pp. 565–. IEEE Computer Society.
37. **Katz, J., & Koo, C.-Y.** (2006). On expected constant-round protocols for Byzantine agreement. In *Advances in Cryptology - CRYPTO 2006*, volume 4117 of *Lecture Notes in Computer Science*, pp. 445–462. Springer Berlin Heidelberg.
38. **King, V., & Saia, J.** (2010). Breaking the O(n^2) bit barrier: Scalable Byzantine agreement with an adaptive adversary. In *Proceedings of the 29th ACM SIGACT-SIGOPS Symposium on Principles of Distributed Computing (PODC '10)*, pp. 420–429. ACM.
39. **King, V., Saia, J., Sanwalani, V., & Vee, E.** (2006). Scalable leader election. In *Proceedings of the Seventeenth Annual ACM-SIAM Symposium on Discrete Algorithm (SODA '06)*, pp. 990–999.
40. **King, V., Saia, J., Sanwalani, V., & Vee, E.** (2006). Towards secure and scalable computation in peer-to-peer networks. In *Proceedings of the 47th Annual IEEE Symposium on Foundations of Computer Science (FOCS '06)*, pp. 87–98. IEEE Computer Society.
41. **Kokoris-Kogias, E., Jovanovic, P., Gailly, N., Khoﬁ, I., Gasser, L., & Ford, B.** (2016). Enhancing bitcoin security and performance with strong consistency via collective signing. In *25th USENIX Security Symposium (USENIX Security '16)*, pp. 279–296.
42. **Kokoris-Kogias, E., Jovanovic, P., Gasser, L., Gailly, N., Syta, E., & Ford, B.** (2018). OmniLedger: A secure, scale-out, decentralized ledger via sharding. In *2018 IEEE Symposium on Security and Privacy (S&P)*, pp. 19–34.
43. **Krawczyk, H.** (1993). Distributed fingerprints and secure information dispersal. In *Proceedings of the Twelfth Annual ACM Symposium on Principles of Distributed Computing (PODC '93)*, pp. 207–218. ACM.
44. **Lamport, L.** (May 1998). The part-time parliament. *ACM Trans. Comput. Syst.*, 16(2), 133–169.
45. **Leung, D., Suhl, A., Gilad, Y., & Zeldovich, N.** (2018). Vault: Fast bootstrapping for cryptocurrencies. *Cryptology ePrint Archive*, Report 2018/269. Available at: <https://eprint.iacr.org/2018/269>
46. **Limer, E.** (May 2013). The world’s most powerful computer network is being wasted. Available at: <http://gizmodo.com/the-worlds-most-powerful-computer-network-is-being-was-504503726>
47. **Luu, L., Narayanan, V., Zheng, C., Baweja, K., Gilbert, S., & Saxena, P.** (2016). A secure sharding protocol for open blockchains. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)*, pp. 17–30. ACM.
48. **Maymounkov, P., & Mazières, D.** (2002). Kademlia: A peer-to-peer information system based on the xor metric. In *Revised Papers from the First International Workshop on Peer-to-Peer Systems (IPTPS '01)*, pp. 53–65. Springer-Verlag.
49. **Merkle, R. C.** (1988). A digital signature based on a conventional encryption function. In *A Conference on the Theory and Applications of Cryptographic Techniques on Advances in Cryptology (CRYPTO '87)*, pp. 369–378. Springer-Verlag.
50. **Micali, S.** (2016). ALGORAND: the efficient and democratic ledger. *CoRR*, abs/1607.01341.
51. **Micali, S., Vadhan, S., & Rabin, M.** (1999). Verifiable random functions. In *Proceedings of the 40th Annual Symposium on Foundations of Computer Science (FOCS '99)*, pp. 120–. IEEE Computer Society.
52. **Miller, A., Xia, Y., Croman, K., Shi, E., & Song, D.** (2016). The honey badger of BFT protocols. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)*, pp. 31–42. ACM.
53. **Mitzenmacher, M., & Upfal, E.** (2005). *Probability and Computing: Randomized Algorithms and Probabilistic Analysis*. Cambridge University Press.
54. **Nakamoto, S.** (2008). Bitcoin: A peer-to-peer electronic cash system. Available at: <https://bitcoin.org/bitcoin.pdf>
55. **Ostrovsky, R., Rajagopalan, S., & Vazirani, U.** (1994). Simple and efficient leader election in the full information model.
56. **Pass, R., & Shi, E.** (2016). Hybrid consensus: Efficient consensus in the permissionless model. *Cryptology ePrint Archive*, Report 2016/917. Available at: <http://eprint.iacr.org/2016/917>
57. **Pease, M., Shostak, R., & Lamport, L.** (1980). Reaching agreement in the presence of faults. *Journal of the ACM (JACM)*, 27(2), 228–234.
58. **Rabin, M. O.** (April 1989). Efficient dispersal of information for security, load balancing, and fault tolerance. *J. ACM*, 36(2), 335–348.
59. **Reed, I., & Solomon, G.** (1960). Polynomial codes over certain finite fields. *Journal of the Society for Industrial and Applied Mathematics (SIAM)*, pp. 300–304.
60. **Ren, L., Nayak, K., Abraham, I., & Devadas, S.** (2017). Practical synchronous Byzantine consensus. *CoRR*, abs/1704.02397.
61. **Russell, A., & Zuckerman, D.** (1998). Perfect information leader election in log* N + o(1) rounds. In *Proceedings of the 39th Annual Symposium on Foundations of Computer Science (FOCS '98)*, pp. 576–. IEEE Computer Society.
62. **Sen, S., & Freedman, M. J.** (2012). Commensal cuckoo: Secure group partitioning for large-scale services. *ACM SIGOPS Operating Systems Review*, 46(1), 33–39.
63. **Tapscott, A., & Tapscott, D.** (March 2017). How blockchain is changing finance. *Harvard Business Review*. Available at: <https://hbr.org/2017/03/how-blockchain-is-changing-finance>
64. **The Zilliqa Team.** (August 2017). The zilliqa technical whitepaper. Available at: <https://docs.zilliqa.com/whitepaper.pdf>
65. **Wang, H.-W.** (2017). Ethereum sharding: Overview and finality. Available at: <https://medium.com/@icebearhww/ethereum-sharding-and-finality-65248951f649>