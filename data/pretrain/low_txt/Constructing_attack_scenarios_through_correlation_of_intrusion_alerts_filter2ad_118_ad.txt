### Initial Phase and Final Phase of the Attacks

The initial phase of the attacks involved an IP Sweep. Despite the large number of packets, we considered this as a single attack. Similarly, the final phase consisted of a DDoS (Distributed Denial of Service) attack, which also generated many packets but was counted as one attack. For the remaining attacks, each action initiated by the attacker, such as telnet or Sadmind Ping, was counted as a separate attack. The number of observable attacks in these datasets is detailed in Table 2. It's important to note that some activities, like telnet, are not typically classified as attacks; however, if used as part of the attack, they were included in our count.

### Alert Generation and Counting

RealSecure Network Sensor 6.0 generated duplicate alerts for certain attacks. For example, a single rsh (remote shell) connection used by the attacker to access a compromised host triggered two alerts. Consequently, the number of true alerts (i.e., alerts corresponding to actual attacks) exceeded the number of detected attacks. The detection rates were calculated as the ratio of detected attacks to observable attacks, while the false alert rates were computed using the formula \(1 - \frac{\text{#true alerts}}{\text{#alerts}}\).

### Summary of Experimental Results

Table 2 summarizes the results of these experiments. The results indicate that discarding uncorrelated alerts significantly reduces the false alert rate without substantially compromising the detection rate. Therefore, it is reasonable to treat correlated alerts more seriously than uncorrelated ones. However, simply discarding uncorrelated alerts can be risky, as some of them may be true alerts corresponding to individual attacks or attacks that our method fails to correlate.

### Related Work

Intrusion detection has been a subject of study for approximately two decades, starting with Anderson’s report [1]. A comprehensive overview of current intrusion detection techniques and related issues can be found in a recent book [3]. The introduction discussed several alert correlation methods.

This paper is part of a series of efforts on alert correlation. Based on the results presented here, we have developed three utilities—adjustable graph reduction, focused analysis, and graph decomposition—to facilitate the interactive analysis of large sets of intrusion alerts [11]. Additionally, we have adapted main memory database query optimization techniques for efficient alert correlation [13], which significantly reduce the execution time required for alert correlation.

The work most closely related to ours is the alert correlation method by Cuppens and Miege in the context of the MIRADOR project [4]. This work was conducted independently and in parallel with our research. The MIRADOR approach also correlates alerts using partial matches of prerequisites (pre-conditions) and consequences (post-conditions) of attacks, derived from the attack database described in LAMBDA [5], and uses "ontology rules" to represent the implication relationships between predicates. An additional notion of abductive correlation was introduced in [4] to handle attacks missed by IDSs, which is not included in our model. However, our method allows alert aggregation during and after correlation, while the MIRADOR approach treats alert aggregation as a separate stage before alert correlation. This difference led to the development of the three utilities for interactive intrusion analysis [11].

Several techniques have used prerequisites and consequences of attacks for vulnerability analysis. In [14], model checking was applied to analyze network vulnerabilities based on prerequisites and results (consequences) of exploits, along with hosts and network connectivity information. In [15] and [9], the technique in [14] was extended to generate and analyze all possible attacks against a vulnerable networked system. These techniques focus on analyzing potential attacks on a given system. In contrast, our goal is to reconstruct what has happened to a given system based on the alerts reported by IDSs, and our technique must deal with the inaccuracy of IDSs (i.e., false alerts and undetected attacks). We consider our method complementary to these vulnerability analysis techniques.

### Conclusion and Future Work

This paper presents a practical method for constructing attack scenarios through alert correlation, using prerequisites and consequences of intrusions. Our approach is based on the observation that in a series of attacks, component attacks are usually not isolated but related as different stages, with earlier stages preparing for later ones. We proposed a formal framework to represent alerts along with their prerequisites and consequences and developed a method to correlate related hyper-alerts, including an intuitive representation of correlated alerts that reveals the attack scenario. We also developed an offline tool based on this formal framework. Initial experiments have demonstrated the potential of our method in correlating alerts and differentiating false and true alerts.

Several issues warrant further research. Specifically, we plan to develop better ways to specify hyper-alert types, particularly how to represent predicates to be included in their prerequisite and consequence sets to achieve the best performance for alert correlation.

### Acknowledgements

The authors would like to thank the anonymous reviewers for their valuable comments. This work is partially supported by the U.S. Army Research Office under grant DAAD19-02-1-0219, by the National Science Foundation under grant 0207297, and by NCSU Center for Advanced Computing & Communication.

### References

[1] J. P. Anderson. Computer security threat monitoring and surveillance. Technical report, James P. Anderson Co., Fort Washington, PA, 1980.
[2] AT & T Research Labs. GraphViz - open source graph layout and drawing software. http://www.research.att.com/sw/tools/graphviz/.
[3] R. Bace. Intrusion Detection. Macmillan Technology Publishing, 2000.
[4] F. Cuppens and A. Miege. Alert correlation in a cooperative intrusion detection framework. In Proc. of the 2002 IEEE Symposium on Security and Privacy, May 2002.
[5] F. Cuppens and R. Ortalo. LAMBDA: A language to model a database for detection of attacks. In Proc. of Recent Advances in Intrusion Detection (RAID 2000), pages 197-216, September 2000.
[6] O. Dain and R. Cunningham. Fusing a heterogeneous alert stream into scenarios. In Proc. of the 2001 ACM Workshop on Data Mining for Security Applications, pages 1-13, Nov. 2001.
[7] H. Debar and A. Wespi. Aggregation and correlation of intrusion-detection alerts. In Recent Advances in Intrusion Detection, LNCS 2212, pages 85-103, 2001.
[8] ISS, Inc. RealSecure intrusion detection system. http://www.iss.net.
[9] S. Jha, O. Sheyner, and J. Wing. Two formal analyses of attack graphs. In Proc. of the 15th Computer Security Foundation Workshop, June 2002.
[10] MIT Lincoln Lab. 2000 DARPA intrusion detection scenario specific datasets. http://www.ll.mit.edu/IST/ideval/data/2000/2000_data_index.html, 2000.
[11] P. Ning, Y. Cui, and D. S. Reeves. Analyzing intensive intrusion alerts via correlation. In Proc. of the 5th Int’l Symposium on Recent Advances in Intrusion Detection (RAID 2002), October 2002.
[12] P. Ning, Y. Cui, and D. S. Reeves. Constructing attack scenarios through correlation of intrusion alerts (full version). Technical Report TR-2002-13, North Carolina State University, Department of Computer Science, August 2002.
[13] P. Ning and D. Xu. Adapting query optimization techniques for efficient intrusion alert correlation. Technical Report TR-2002-14, North Carolina State University, Department of Computer Science, September 2002.
[14] R. Ritchey and P. Ammann. Using model checking to analyze network vulnerabilities. In Proc. of IEEE Symposium on Security and Privacy, pages 156-165, May 2000.
[15] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. Wing. Automated generation and analysis of attack graphs. In Proc. of IEEE Symposium on Security and Privacy, May 2002.
[16] S. Staniford, J. Hoagland, and J. McAlerney. Practical automated detection of stealthy portscans. To appear in Journal of Computer Security, 2002.
[17] S. Templeton and K. Levit. A requires/provides model for computer attacks. In Proc. of New Security Paradigms Workshop, pages 31-38. September 2000.
[18] A. Valdes and K. Skinner. Probabilistic alert correlation. In Proc. of the 4th Int’l Symposium on Recent Advances in Intrusion Detection (RAID 2001), pages 54-68, 2001.