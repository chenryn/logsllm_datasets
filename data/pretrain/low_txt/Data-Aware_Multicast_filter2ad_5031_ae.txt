Certainly! Here is the optimized and refined version of your text:

---

**Performance Analysis**

Not replacing crashed processes results in the worst performance for daMulticast, which is precisely what we aim to measure in this section. We do not provide a performance simulation for the maximum number of events sent within a group or between groups (as detailed in [1]).

To simulate a weakly consistent membership algorithm, we allow a process to appear alive to another. This scenario achieves significantly better reliability for a weakly connected system compared to the previous one (Figure 4). To further enhance reliability, we can easily adjust parameters \( z \), \( p \), and \( \alpha \).

\[
\begin{aligned}
&\text{Figure 5. Reliability (dynamically crashed processes).}
\end{aligned}
\]

**Table 1: Average Number of Rounds**

We consider the average number of rounds required to disseminate an event from topic \( T_0 \) to topic \( T_2 \) across three different topologies:
- (a) \( T_0 = 1000 \), \( T_1 = 100 \), and \( T_2 = 10 \)
- (b) \( T_0 = 1000 \), \( T_1 = 100 \), and \( T_2 = 10 \)
- (c) \( T_0 = 1000 \), \( T_1 = 100 \), and \( T_2 = 10 \)

We compare our approach with:
1. A general gossip-based protocol [5]
2. PMcast [6] (values calculated using analytical equations, not simulations)

The results confirm the analytical findings in Section 5.4 and highlight the impact of the number of hierarchies on latency.

\[
\begin{array}{|c|c|c|c|}
\hline
 & (1) & (2) & (3) \\
\hline
T_0 = 1000, T_1 = 100, T_2 = 10 & 8.91 & 13.08 & 8.83 \\
\hline
T_0 = 100, T_1 = 10, T_2 = 1 & 4.63 & 4.31 & 4.39 \\
\hline
T_0 = 10, T_1 = 1, T_2 = 0.1 & 6.61 & 5.89 & 5.44 \\
\hline
\end{array}
\]

**Table 2: Total Number of Parasite Messages**

In Table 2, we evaluate the average total number of parasite messages sent in the system. We assume a publisher publishes an event of the root topic \( T_0 \). For PMcast, the results are derived analytically. Table 2 shows the gain of daMulticast over alternative approaches.

\[
\begin{array}{|c|c|c|c|}
\hline
 & (1) & (2) & (3) \\
\hline
T_0 = 1000, T_1 = 100, T_2 = 10 & 0 & 11216 & 1699 \\
\hline
T_0 = 100, T_1 = 10, T_2 = 1 & 0 & 453 & 369 \\
\hline
T_0 = 10, T_1 = 1, T_2 = 0.1 & 0 & 3739 & 615 \\
\hline
\end{array}
\]

**Concluding Remarks**

This paper introduces daMulticast, an algorithm for disseminating events in a hierarchical peer-to-peer topic-based publish/subscribe system. Our algorithm minimizes the membership information each process must maintain, avoids single points of failure, and ensures that processes receive only the events they have subscribed to. For simplicity, we focused on topics with a single direct supertopic. Multiple supertopics (i.e., multiple inheritance) can be supported by either adapting the membership algorithm or adding a supertopic table for each supertopic. The latter solution would not degrade overall performance, as the typical maximal number of multiple supertopics is usually around 2 ([25]).

**References**

[1] S. Baehni, P.Th. Eugster, and R. Guerraoui. Data-Aware Multicast. Technical Report IC/2003/73, EPFL, http://lpdwww.epfl.ch/publications/, November 2003.
[2] K.P. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, and Y. Minsky. Bimodal Multicast. ACM Transactions on Computer Systems, 17(2):41–88, May 1999.
[3] B. Bollobás. Random Graphs. Cambridge, 2001.
[4] A. Carzaniga, D.S. Rosenblum, and A.L. Wolf. Achieving Scalability and Expressiveness in an Internet-Scale Event Notification Service. In Proceedings of the 19th ACM Symposium on Principles of Distributed Computing (PODC), pages 219–227, July 2000.
[5] P. Erdős and A. Rényi. On the Evolution of Random Graphs. In Mat Kutato Int. Közl, volume 5, pages 17–60, 1960.
[6] P.Th. Eugster and R. Guerraoui. Probabilistic Multicast. In Proceedings of the 2002 IEEE International Conference on Dependable Systems and Networks (DSN), pages 313–322, 2002.
[7] P.Th. Eugster, R. Guerraoui, and C.H. Damm. On Objects and Events. In Proceedings of the 16th ACM Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA 2001), pages 131–146, October 2001.
[8] P.Th. Eugster, R. Guerraoui, S. Handurukande, A.-M. Kermarrec, and P. Kouznetsov. Lightweight Probabilistic Broadcast. In Proceedings of the ACM Transactions on Computer Systems (TOCS), pages 341–374, November 2003.
[9] P.Th. Eugster, R. Guerraoui, A.-M. Kermarrec, L. Massoulié, and A. J. Ganesh. From Epidemics to Distributed Computing. In IEEE Computer, to appear, 2004.
[10] A. J. Ganesh, A.-M. Kermarrec, and L. Massoulié. SCAMP: Peer-to-Peer Lightweight Membership Service for Large-Scale Group Communication. In Proceedings of the 3rd International Workshop on Networked Group Communication (NGC), 2001.
[11] K. Jenkins, K. Hopkinson, and K. Birman. A Gossip Protocol for Subgroup Multicast. In International Workshop on Applied Reliable Group Communication (WARGC), April 2001.
[12] B. Kantor and P. Lapsley. Network News Transfer Protocol, Request for Comments, 1986.
[13] R. M. Karp, C. Schindelhauer, S. Shenker, and B. Vöcking. Randomized Rumor Spreading. In Proceedings of the IEEE Symposium on Foundations of Computer Science (FOCS), pages 565–574, 2000.
[14] A.-M. Kermarrec, L. Massoulié, and A. J. Ganesh. Probabilistic Reliable Dissemination in Large-Scale Systems. In IEEE Transactions on Parallel and Distributed Systems, volume 14, pages 248–258, March 2003.
[15] M.-J. Lin and K. Marzullo. Directional Gossip: Gossip in a Wide Area Network. In Proceedings of the 3rd European Dependable Computing Conference (EDCC), pages 364–379, September 1999.
[16] Frédéric Maistre. Joram 3.6.3 Administration Guide. http://joram.objectweb.org, October 2003.
[17] L. Opyrchal, M. Astley, J. Auerbach, G. Banavar, R.E. Strom, and D.C. Sturman. Exploiting IP Multicast in Content-Based Publish-Subscribe Systems. In Proceedings of the 3rd IFIP/ACM International Conference on Distributed Systems Platforms and Open Distributed Processing (Middleware), pages 185–207, April 2000.
[18] P. R. Pietzuch and J. M. Bacon. Hermes: A Distributed Event-Based Middleware Architecture. In Proceedings of the International Workshop on Distributed Event-Based Systems (DEBS’02), July 2002.
[19] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker. A Scalable Content Addressable Network. In Proceedings of the ACM Conference on Special Interest Group on Data Communications (SIGCOMM), 2001.
[20] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker. Application-Level Multicast Using Content-Addressable Networks. Lecture Notes in Computer Science, 2233:14–29, 2001.
[21] A. Rowstron and P. Druschel. Pastry: Scalable, Distributed Object Location and Routing for Large-Scale Peer-to-Peer Systems. In Proceedings of the 4th IFIP/ACM International Conference on Distributed Systems Platforms and Open Distributed Processing (Middleware), pages 329–350, November 2001.
[22] A. Rowstron, A.-M. Kermarrec, M. Castro, and P. Druschel. SCRIBE: The Design of a Large-Scale Event Notification Infrastructure. In Proceedings of the 3rd International Workshop on Networked Group Communication (NGC), November 2001.
[23] D. Skeen. Vitria’s Publish-Subscribe Architecture: Publish-Subscribe Overview. http://www.vitria.com, 1998.
[24] TIBCO. TIB/Rendezvous White Paper. http://www.rv.tibco.com/, 1999.
[25] Y. Zibin and J. Gil. Efficient Subtyping Tests with PQ-Encoding. In Proceedings of the 16th ACM Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA 2001), October 2001.

---

I hope this helps! Let me know if you need any further adjustments.