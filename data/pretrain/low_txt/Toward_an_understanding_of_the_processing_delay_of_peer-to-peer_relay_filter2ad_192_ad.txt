### Size Proportional to Mean Deviation of Network Delays

The size is proportional to the mean deviation of network delays. However, the impact of processing delay is not equivalent for all calls (Equation 3). As a result, the impact becomes more pronounced with highly spiky processing delays. According to the E-model, calls with better quality are more susceptible to performance degradation [12, 16]. We verify this effect by mapping the original R-score of each call to its degraded R-score, as shown in Figure 11.

### Original Quality vs. Degradation

We observe that calls with a high R-score generally incur more quality degradation than those with a low R-score. Specifically, the adaptive buffer scheme causes more degradation than the static buffer scheme for calls with an original R-score higher than 40. This is because a call with an initial high R-score is associated with short network delays, and the adaptive buffer size tends to be influenced by the spiky relay processing delays. In contrast, the static buffer scheme is less sensitive to delay variations, resulting in relatively constant quality degradation.

### Summary

We define a call as "degraded" if it experiences an R-score decrease greater than 10 points. Among the simulated calls, the static buffer scheme causes 31% of the calls to be degraded, while the adaptive buffer scheme causes 54% to be degraded. Additionally, the average degradation time ratio within a call is 10% and 18% for the static and adaptive buffer schemes, respectively.

### Impact of Busy Levels

After evaluating the overall VoIP quality degradation caused by relay processing delays, we examine the relationship between workload levels and the degree of voice quality degradation. The busy level, defined in Section V-B, quantifies the workload at a relay node. For each call, we divide the busy levels and R-score decreases into 10 groups by their ranks and plot the average R-score decreases for various busy levels, as shown in Figure 12. The figure clearly shows that higher busy levels lead to more severe quality degradation. On average, the R-score decreases exceed 10 points when the busy level of the relay node is higher than 20 ms. This implies that we should avoid using relay nodes with a busy level higher than 20 ms to prevent significant quality degradation.

### Busy Period Characterization

Based on our analysis, we define a relay node as busy when its busy level exceeds 20 ms. In our traces, 23% of relay nodes were in a busy state during a 10-minute call. A busy period of a relay node is defined as a continuous time span during which the node is busy. To understand the patterns of busy periods, we extract the distributions of their length and interarrival times, as shown in Figure 13. We find that a busy period lasts for 18 seconds on average, with 65% of busy periods being shorter than 10 seconds. The interarrival time of busy periods is 25 seconds on average. These statistics suggest that the busy status of relay nodes is quite unstable, as they frequently switch between busy and non-busy states.

### Conclusion

In this paper, we consider a hidden aspect of peer-to-peer relaying: the processing delays at relay nodes. While existing works focus on improving peer-to-peer systems through data relaying, they seldom discuss its adverse effects. Through trace collection, statistical analysis, and network simulations, we show that relaying can be detrimental to VoIP quality if an inappropriate relay node is used. The degradation cannot be completely avoided, as a lightly-loaded relay node may start running a load-intensive application at any time. Therefore, continuous monitoring of the processing delays of a relay node, similar to how we monitor network conditions, is necessary to prevent application performance degradation. We hope this study will motivate future peer-to-peer systems to address the negative aspects of application-layer relaying techniques.

### References

[1] S. Baset and H. Schulzrinne, "An analysis of the Skype peer-to-peer internet telephony protocol," in INFOCOM, IEEE, 2006.
[2] K.-T. Chen, C.-Y. Huang, P. Huang, and C.-L. Lei, "Quantifying Skype user satisfaction," in Proceedings of ACM SIGCOMM, Pisa Itlay, Sep 2006.
[3] C.-M. Cheng, Y.-S. Huan, H. T. Kung, and C.-H. Wu, "Path probing relay routing for achieving high end-to-end performance," in Global Telecommunications Conference, 2004. GLOBECOM '04. IEEE, vol. 3, 2004, pp. 1359-1365.
[4] T. Fei, S. Tao, L. Gao, and R. Guerin, "How to select a good alternate path in large peer-to-peer systems?" in INFOCOM, IEEE, 2006.
[5] T. Fei, S. Tao, L. Gao, R. Guerin, and Z.-L. Zhang, "Lightweight overlay path selection in a peer-to-peer environment," in INFOCOM, IEEE, 2006.
[6] B. Ford, P. Srisuresh, and D. Kegel, "Peer-to-peer communication across network address translators," in USENIX Annual Technical Conference, 2005, pp. 179-192.
[7] Google, Inc., http://www.google.com/talk/.
[8] S. Guha and N. Daswani, "An experimental study of the Skype peer-to-peer VoIP system," Cornell University, Tech. Rep., Dec. 16, 2005.
[9] F. Gustafsson, Adaptive Filtering and Change Detection, John Wiley & Sons, September 2000.
[10] X. Hei, C. Liang, J. Liang, Y. Liu, and K. Ross, "A Measurement Study of a Large-Scale P2P IPTV System," in IPTV Workshop, International World Wide Web Conference, 2006.
[11] X. Hei and H. Song, "Stochastic relay routing in peer-to-peer networks," in Proceedings 41st IEEE International Conference on Communications, 2006.
[12] ITU-T Recommendation, "G. 107. The E-Model, a Computational Model for Use in Transmission Planning," International Telecommunication Union, CHGenf, 2002.
[13] X. Liao, H. Jin, Y. Liu, L. M. Ni, and D. Deng, "Anysee: Peer-to-peer live streaming," in INFOCOM, IEEE, 2006.
[14] L. Liu and R. Zimmermann, "Adaptive low-latency peer-to-peer streaming and its application," Multimedia Systems, vol. 11, no. 6, pp. 497-512, 2006.
[15] Y. Liu, Y. Gu, H. Zhang, W. Gong, and D. Towsley, "Application level relay for high-bandwidth data transport," in The First Workshop on Networks for Grid Applications (GridNets), San Jose, October 2004.
[16] A. Markopoulou, F. A. Tobagi, and M. J. Karam, "Assessment of VoIP quality over internet backbones," in Proceedings of INFOCOM, 2002.
[17] S. McCanne and V. Jacobson, "The BSD packet filter: A new architecture for user-level packet capture," in Proceedings of USENIX'93, 1993, pp. 259-270.
[18] J. Nagle, "Congestion control in IP/TCP internetworks," Computer Communication Review, vol. 14, no. 4, pp. 11-17, Oct. 1984.
[19] M. Narbutt, A. Kelly, L. Murphy, and P. Perry, "Adaptive VoIP playout scheduling: Assessing user satisfaction," IEEE Internet Computing, vol. 9, no. 4, pp. 28-34, 2005.
[20] R. Ramjee, J. F. Kurose, D. F. Towsley, and H. Schulzrinne, "Adaptive playout mechanisms for packetized audio applications in wide-area networks," in INFOCOM, 1994, pp. 680-688.
[21] S. Ren, L. Guo, and X. Zhang, "ASAP: an AS-aware peer-relay protocol for high quality VoIP," in Proceedings of ICDCS, 2006, pp. 70-79.
[22] J. Rosenberg, R. Mahy, and C. Huitema, "Traversal Using Relay NAT (TURN)," draft-rosenberg-midcom-turn-05 (work in progress), July 2004.
[23] B. Sat and B. W. Wah, "Playout scheduling and loss-concealments in VoIP for optimizing conversational voice communication quality," in Proceedings of Multimedia '07, New York, NY, USA: ACM, 2007, pp. 137-146.
[24] C. Schensted, "Longest increasing and decreasing subsequences," Canad. J. Math., vol. 13, pp. 179-191, 1961.
[25] Skype Limited, http://www.skype.com.
[26] D. A. Solomon and M. Russinovich, Inside Microsoft Windows 2000, Microsoft Press Redmond, WA, USA, 2000.
[27] H. Zhang, L. Tang, and J. Li, "Impact of Overlay Routing on End-to-End Delay," in Proceedings of ICCCN, 2006, pp. 435-440.
[28] Y. Zhang and N. G. Duffield, "On the constancy of internet path properties," in Proceedings of Internet Measurement Workshop, V. Paxson, Ed., San Francisco, California, USA: ACM, Nov 2001, pp. 197-211.
[29] R. Zimmermann, B. Seo, L. Liu, R. Hampole, and B. Nash, "Audiopeer: A collaborative distributed audio chat system," Distributed Multimedia Systems, San Jose, CA, 2004.