### 3.1 Flow Analysis and Anomaly Identification

We extracted the flows that matched the metadata provided by our detectors and analyzed the time series and distribution of several flow features, including source IP (srcIP), destination IP (dstIP), source port (srcPort), destination port (dstPort), number of packets (#packets), number of bytes (#bytes), inter-arrival times, and flow duration. In all 31 flagged intervals, we identified at least one anomalous event. The detected anomalies were then classified according to the criteria outlined in [13]. Our trace included ten scans originating from internal hosts, nine distributed denial-of-service (DDoS) attacks, five scan replies, four unusual network experiments, two DoS attacks, and one flash crowd event.

For each anomalous interval, we computed a set of candidate anomalous flows, denoted as ∪Fj, on which we applied our modified Apriori algorithm to find frequent item-sets. Finally, we manually analyzed the frequent item-sets and identified true positives, which matched the identified anomalous events, and false positives, which corresponded to benign traffic.

### 3.2 Reduction in Classification Cost

By using association rules, we obtain a summarized view based on frequent item-sets rather than individual flows. This approach reduces the problem of manually classifying flows to the problem of classifying item-sets. If we can identify the item-sets that match the anomalous flows, the anomaly extraction problem is effectively solved.

To quantify this reduction in classification cost, we assume that the classification cost is a linear function of the number of items that need to be classified. We define the reduction \( r \) in classification cost for an anomaly as \( r = \frac{|F|}{|I|} \), where \( |F| \) is the number of flows in the flagged interval and \( |I| \) is the number of item-sets in the output of the Apriori algorithm. The number of flows in 15-minute intervals ranges from 700,000 to 2.6 million. Since the cardinality of \( I \) depends on the minimum support parameter, we plot the average reduction in classification cost over all anomalous intervals against the minimum support parameter in Figure 4. The maximum value allowed for the minimum support is 10,000, ensuring that the set \( I \) always contains the anomalous flows. The average cost reduction increases with the minimum support and ranges between 520,000 and 800,000. The average cost reduction saturates for larger minimum support parameters as the minimum number of item-sets is reached. This result demonstrates that association rule mining can significantly simplify root-cause analysis and attack mitigation.

### 3.3 Accuracy of Apriori

The output of the Apriori algorithm includes a mix of item-sets matching anomalous flows (true positives) and non-anomalous flows (false positives). As long as the minimum support parameter is set to a value lower than the support of the anomalous flow set, Apriori will not produce any false negatives. Assuming a small minimum support, e.g., up to 10,000 flows, we evaluated the number of false positive item-sets generated by Apriori.

In Figure 5, we plot the number of false positive (FP) item-sets generated by Apriori against the minimum support parameter. For 21 anomalies (70%), no FP item-sets were generated. The number of FP item-sets for the remaining 10 anomalies is plotted along with the average number of FP item-sets over all 31 anomalies (marked with squares). The number of FP item-sets decreases with the minimum support because fewer FP item-sets satisfy the minimum support condition. Figure 5 shows that, when restricting the input data set to flows that match the metadata provided by the histogram-based detectors, on average between 2 and 8.5 FP item-sets are generated for minimum support values between 3,000 and 10,000 flows, respectively. The top three lines in the figure correspond to anomalies with many more FP item-sets, primarily due to single-packet flows in the metadata. Common ports (e.g., 80, 443, 25), short flow lengths, or high-traffic internal hosts (e.g., web servers, proxies, caches, mail hubs, or PlanetLab nodes) often cause these FP item-sets. Consequently, most FP item-sets can be easily filtered out by a network administrator.

### 3.4 Comparison with Intersection

An alternative approach to identifying anomalous flows is to generate a filter rule based on the intersection of metadata provided by different detectors [19]. In our work, we first use the intersection of feature values provided by different clones, then take the union of the flow sets provided by different histogram detectors, and finally apply association rule mining to extract and summarize anomalous flows. We compared the use of the intersection as an alternative to the union operator in the second step of our methodology.

For four out of the 31 anomalies (13%), both approaches found the same anomalous item-sets. In two of these cases, the intersection performed slightly better as the union operator generated additional FP item-sets. However, for the majority of cases (27 out of 31 anomalies, or 87%), the union operator followed by rule mining produced superior results. In 25 cases, our approach generated much more specific filter rules, leading to substantially fewer FP item-sets. In two cases, the intersection operator completely missed the anomaly due to false positive entries in the metadata.

### 4. Related Work

Significant research has focused on dimensionality reduction for anomaly detection in backbone networks [2, 20, 22, 14, 9, 4, 11]. These studies investigate techniques and metrics for detecting traffic anomalies but do not address the anomaly extraction problem we tackle. Closer to our work, Dewaele et al. [7] use sketches to create multiple random projections of a traffic trace, model the marginals of the sub-traces using Gamma laws, and identify deviations in the parameters as anomalies. They also find anomalous source or destination IP addresses by taking the intersection of addresses hashing into anomalous sub-traces. DoWitcher [19] is a scalable system for worm detection and containment in backbone networks, which automatically constructs a flow-filter mask from the intersection of suspicious attributes provided by different detectors. These papers address the anomaly extraction problem as part of building multi-purpose systems. Our work focuses exclusively on anomaly extraction, providing a more general approach using association rules and working on the union set of flows instead of the intersection.

Li et al. [15] use sketches to randomly aggregate flows as an alternative to origin-destination (OD) aggregation, showing that random aggregation can detect more anomalies in the PCA subspace anomaly detection method [14]. They argue that their method can be used for anomaly extraction, but the paper primarily focuses on anomaly detection.

Association rules have been successfully applied to various networking problems. Chandola and Kumar [5] use clustering and heuristics to find a minimal set of frequent item-sets that summarize large sets of flow records. Mahoney and Chan [16] use association rule mining to find rare events suspected to represent anomalies in packet payload data, evaluating their method on the 1999 DARPA/Lincoln Laboratory traces [17]. Their approach targets edge networks where mining rare events is feasible, but it is less promising in massive backbone data. Another application of association rule mining in edge networks is eXpose [10], which learns fine-grained communication rules by exploiting temporal correlations between flows within very short time windows.

Hierarchical heavy-hitter detection methods [8, 23, 6] group traffic into hierarchical clusters of high resource consumption, such as identifying clusters of web servers in hosting farms. Our focus is on extracting anomalous traffic flows.

### 5. Conclusion

In this paper, we studied the problem of anomaly extraction, which is crucial for applications such as root-cause analysis and detection system testing. We presented a histogram-based detector that provides fine-grained metadata for filtering suspect flows and introduced a method for extracting anomalous flows using association rules to describe flows with similar characteristics across multiple features.

We validated our techniques using a rich NetFlow dataset captured in a backbone network. Our evaluation results show that the classification cost, in terms of items that need to be classified, can be reduced by several orders of magnitude using association rules. We also evaluated the accuracy of the Apriori algorithm for several verified anomalies and found that it generates, on average, between 2 and 8.5 false positive item-sets, which can be easily identified by an administrator. Further analysis and evaluation results can be found in the companion technical report [3].

### 6. Acknowledgments

This research was funded by the European Community’s Seventh Framework Program (FP7/2007-2013) under grant agreement no. 216585 (INTERSECTION Project) and no. 223936 (ECODE Project).

### 7. References

[1] R. Agrawal and R. Srikant. Fast algorithms for mining association rules in large databases. In VLDB'94, Proceedings of 20th International Conference on Very Large Data Bases, September 12-15, 1994, Santiago de Chile, Chile, pages 487–499. Morgan Kaufmann, 1994.
[2] P. Barford, J. Kline, D. Plonka, and A. Ron. A signal analysis of network traffic anomalies. In IMW '02: Proceedings of the 2nd ACM SIGCOMM Workshop on Internet Measurement, pages 71–82, New York, NY, USA, 2002. ACM Press.
[3] D. Brauckhoff, X. Dimitropoulos, A. Wagner, and K. Salamatian. Anomaly extraction in backbone networks using association rules. TIK-Report 309, ETH Zurich, September 2009.
[4] D. Brauckhoff, M. May, and K. Salamatian. Applying PCA for Traffic Anomaly Detection: Problems and Solutions. In IEEE INFOCOM Mini Conference, 2009.
[5] V. Chandola and V. Kumar. Summarization - compressing data into an informative representation. Knowl. Inf. Syst., 12:355–378, 2007.
[6] G. Cormode, F. Korn, S. Muthukrishnan, and D. Srivastava. Finding hierarchical heavy hitters in streaming data. ACM Trans. Knowl. Discov. Data, 1(4):1–48, 2008.
[7] G. Dewaele, K. Fukuda, P. Borgnat, P. Abry, and K. Cho. Extracting hidden anomalies using sketch and multiresolution statistical detection procedures. In LSAD '07: Proceedings of the 2007 workshop on Large scale attack defense, pages 145–152, New York, NY, USA, 2007. ACM Press.
[8] C. Estan, S. Savage, and G. Varghese. Automatically inferring patterns of resource consumption in network traffic. In SIGCOMM '03: Proceedings of the 2003 conference on Applications, technologies, architectures, and protocols for computer communications, pages 137–148, New York, NY, USA, 2003. ACM Press.
[9] Y. Gu, A. McCallum, and D. Towsley. Detecting anomalies in network traffic using maximum entropy estimation. In IMC '05: Proceedings of the 5th ACM SIGCOMM conference on Internet Measurement, pages 32–32, Berkeley, CA, USA, 2005. USENIX Association.
[10] S. Kandula, R. Chandra, and D. Katabi. What's going on?: learning communication rules in edge networks. In SIGCOMM, pages 87–98, 2008.
[11] A. Kind, M. P. Stoecklin, and X. Dimitropoulos. Histogram-based traffic anomaly detection. IEEE Transactions on Network and Service Management, to appear, 2009.
[12] B. Krishnamurthy, S. Sen, Y. Zhang, and Y. Chen. Sketch-based change detection: methods, evaluation, and applications. In IMC '03: Proceedings of the 3rd ACM SIGCOMM conference on Internet measurement, pages 234–247, New York, NY, USA, 2003. ACM Press.
[13] A. Lakhina, M. Crovella, and C. Diot. Diagnosing network-wide traffic anomalies. In SIGCOMM '04: Proceedings of the 2004 conference on Applications, technologies, architectures, and protocols for computer communications, pages 219–230, New York, NY, USA, 2004. ACM Press.
[14] A. Lakhina, M. Crovella, and C. Diot. Mining anomalies using traffic feature distributions. In SIGCOMM '05: Proceedings of the 2005 conference on Applications, technologies, architectures, and protocols for computer communications, pages 217–228, New York, NY, USA, 2005. ACM.
[15] X. Li, F. Bian, M. Crovella, C. Diot, R. Govindan, G. Iannaccone, and A. Lakhina. Detection and identification of network anomalies using sketch subspaces. In IMC '06: Proceedings of the 6th ACM SIGCOMM conference on Internet measurement, pages 147–152, New York, NY, USA, 2006. ACM.
[16] M. V. Mahoney and P. K. Chan. Learning rules for anomaly detection of hostile network traffic. In ICDM '03: Proceedings of the Third IEEE International Conference on Data Mining, pages 601–604, Washington, DC, USA, 2003. IEEE Computer Society.
[17] J. McHugh. Testing intrusion detection systems: a critique of the 1998 and 1999 DARPA intrusion detection system evaluations as performed by Lincoln Laboratory. ACM Trans. Inf. Syst. Secur., 3:262–294, 2000.
[18] K. H. Ramah, K. Salamatian, and F. Kamoun. Scan surveillance in internet networks. In Networking, pages 614–625, 2009.
[19] S. Ranjan, S. Shah, A. Nucci, M. M. Munafò, R. L. Cruz, and S. M. Muthukrishnan. Dowitcher: Effective worm detection and containment in the internet core. In INFOCOM, pages 2541–2545, 2007.
[20] A. Soule, K. Salamatian, and N. Taft. Combining filtering and statistical methods for anomaly detection. In IMC'05: Proceedings of the 5th Conference on Internet Measurement 2005, Berkeley, California, USA, October 19-21, 2005, pages 331–344. USENIX Association, 2005.
[21] M. P. Stoecklin, J.-Y. L. Boudec, and A. Kind. A two-layered anomaly detection technique based on multi-modal flow behavior models. In PAM: Proceedings of 9th International Conference on Passive and Active Measurement, Lecture Notes in Computer Science, pages 212–221. Springer, 2008.
[22] A. Wagner and B. Plattner. Entropy-based worm and anomaly detection in fast IP networks. In WETICE '05: Proceedings of the 14th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprise, pages 172–177, Washington, DC, USA, 2005. IEEE Computer Society.
[23] Y. Zhang, S. Singh, S. Sen, N. Duffield, and C. Lund. Online identification of hierarchical heavy hitters: algorithms, evaluation, and applications. In IMC '04: Proceedings of the 4th ACM SIGCOMM conference on Internet measurement, pages 101–114, New York, NY, USA, 2004. ACM.