### Cryptographic Limitations and Potential Improvements

Many of the current limitations are cryptographic in nature and could be addressed by implementing more advanced protocols. For instance, the `lookup` and `find` operations are currently restricted to externally signed tables. Employing lookup tables based on accumulators [13] or vector commitments [27] would provide greater flexibility and potentially reduce costs. At a lower level, table processing involves numerous similar cryptographic operations in a data-parallel style. Techniques such as batch proof and verification, along with homomorphic signature schemes, could significantly speed up these operations [10]. Additionally, well-known zero-knowledge proofs for disjunctions would enable branching statements in ZQL. The shared translation could also bundle multiple secrets per commitment. Alternatively, different low-level proof engines, such as [53], could be employed. It is important to note that automatically selecting the best encoding and technique, as well as compiling them in a compositional manner, remain challenging open problems. Preliminary work in this direction can be found in [41].

### Language Design and Optimization

On the language design front, we demonstrated in §7 how functions can be approximated through lookups. ZQL could automate and optimize this process by compiling data sources that calculate and sign function-tables appropriately. By design, our source language shields programmers from the underlying cryptography, which may limit power users who wish to customize the compilation scheme or experiment with its variants. Similarly, some users may prefer to rely on external, unverified procedures and use ZQL only to validate their results. Advanced APIs that expose the internals of the ZQL compiler without compromising its invariants would be beneficial for such users.

### Acknowledgments

The authors would like to thank Ian Goldberg for early discussions on languages for zero-knowledge proofs and the advantages of compilation versus interpretation, and Nikhil Swamy for his valuable comments.

### References

[1] J. A. Akinyele, M. D. Green, and A. D. Rubin. Charm: A framework for rapidly prototyping cryptosystems. Cryptology ePrint Archive, Report 2011/617, 2011.

[2] J. B. Almeida, M. Barbosa, E. Bangerter, G. Barthe, S. Krenn, and S. Z. Béguelin. Full proof cryptography: verifiable compilation of efficient zero-knowledge protocols. In ACM Conference on Computer and Communications Security, pages 488–500, 2012.

[3] M. H. Au, W. Susilo, and Y. Mu. Constant-size dynamic k-TAA. In R. D. Prisco and M. Yung, editors, SCN 2006, volume 4116 of LNCS, pages 111–125, Maiori, Italy, 2006. Springer.

[4] M. Backes, M. Maffei, and K. Pecina. Automated synthesis of privacy-preserving distributed applications. 19th Annual Network & Distributed System Security Symposium (NDSS12), 2012.

[5] J. Balasch, A. Rial, C. Troncoso, B. Preneel, I. Verbauwhede, and C. Geuens. PrETP: Privacy-preserving electronic toll pricing. In USENIX Security Symposium, pages 63–78, 2010.

[6] E. Bangerter, J. Camenisch, and U. M. Maurer. Efficient proofs of knowledge of discrete logarithms and representations in groups with hidden order. In Public Key Cryptography, pages 154–171, 2005.

[7] E. Bangerter, T. Briner, W. Henecka, S. Krenn, A.-R. Sadeghi, and T. Schneider. Automatic generation of sigma-protocols. In EuroPKI, pages 67–82, 2009.

[8] E. Bangerter, S. Krenn, A.-R. Sadeghi, T. Schneider, and J.-K. Tsay. On the design and implementation of efficient zero-knowledge proofs of knowledge. ECRYPT workshop on Software Performance Enhancements for Encryption and Decryption and Cryptographic Compilers (SPEED-CC '09), 2009.

[9] E. Bangerter, S. Krenn, A.-R. Sadeghi, and T. Schneider. Yaczk: Yet another compiler for zero-knowledge. In USENIX Security Symposium, 2010.

[10] S. Bayer and J. Groth. Efficient zero-knowledge argument for correctness of a shuffle. In EUROCRYPT, pages 263–280, 2012.

[11] M. Bellare and O. Goldreich. On defining proofs of knowledge. In CRYPTO, pages 390–420, 1992.

[12] M. Bellare and P. Rogaway. Random oracles are practical: A paradigm for designing efficient protocols. In ACM Conference on Computer and Communications Security, pages 62–73, 1993.

[13] J. C. Benaloh and M. de Mare. One-way accumulators: A decentralized alternative to digital signatures (extended abstract). In EUROCRYPT, pages 274–285, 1993.

[14] J. Bengtson, K. Bhargavan, C. Fournet, A. D. Gordon, and S. Maffeis. Refinement types for secure implementations. In 21st IEEE Computer Security Foundations Symposium (CSF'08), pages 17–32, 2008.

[15] T. S. Benjamin. Zero-knowledge protocols to prove distances. Personal communication, 2008.

[16] K. Bhargavan, C. Fournet, and A. D. Gordon. F7: refinement types for F#, 2008. Microsoft Research Technical Report.

[17] D. Boneh, X. Boyen, and H. Shacham. Short group signatures. In CRYPTO, pages 41–55, 2004.

[18] S. Brands. Rapid demonstration of linear relations connected by boolean operators. In EUROCRYPT, pages 318–333, 1997.

[19] T. Briner. Compiler for zero-knowledge proof-of-knowledge protocols. Master thesis, ETH Zurich & IBM Research Lab Zurich, 2004.

[20] J. Camenisch and A. Lysyanskaya. A signature scheme with efficient protocols. In SCN, pages 268–289, 2002.

[21] J. Camenisch and A. Lysyanskaya. Signature schemes and anonymous credentials from bilinear maps. In CRYPTO, pages 56–72, 2004.

[22] J. Camenisch and M. Stadler. Efficient group signature schemes for large groups. In B. Kaliski, editor, Advances in Cryptology — CRYPTO '97, volume 1296 of LNCS, pages 410–424. Springer Verlag, 1997.

[23] J. Camenisch and E. Van Herreweghen. Design and implementation of the idemix anonymous credential system. Technical Report Research Report RZ 3419, IBM, May 2002.

[24] J. Camenisch, A. Kiayias, and M. Yung. On the portability of generalized schnorr proofs. In EUROCRYPT, pages 425–442, 2009.

[25] J. Camenisch, M. Kohlweiss, and C. Soriente. Solving revocation with efficient update of anonymous credentials. In SCN, pages 454–471, 2010.

[26] J. L. Camenisch. Group Signature Schemes and Payment Systems Based on the Discrete Logarithm Problem. PhD thesis, ETH Zürich, 1998. Diss. ETH No. 12520, Hartung Gorre Verlag, Konstanz.

[27] D. Catalano and D. Fiore. Vector commitments and their applications. Cryptology ePrint Archive, Report 2011/495, 2011.

[28] D. Chaum and T. P. Pedersen. Wallet databases with observers. In CRYPTO, pages 89–105, 1992.

[29] E. F. Codd. A relational model of data for large shared data banks. Commun. ACM, 13(6):377–387, 1970.

[30] R. Cramer. Modular Design of Secure yet Practical Cryptographic Protocols. PhD thesis, University of Amsterdam, 1997.

[31] R. Cramer and I. Damgård. Zero-knowledge proofs for finite field arithmetic; or: Can zero-knowledge be for free? In CRYPTO, pages 424–441, 1998.

[32] R. Cramer, I. Damgård, and B. Schoenmakers. Proofs of partial knowledge and simplified design of witness hiding protocols. In CRYPTO, pages 174–187, 1994.

[33] I. Damgård. On Σ-protocols, 2002. Available at http://www.daimi.au.dk/~ivan/Sigma.ps.

[34] I. Damgård and E. Fujisaki. An integer commitment scheme based on groups with hidden order. IACR Cryptology ePrint Archive, 2001:64, 2001.

[35] G. Danezis and B. Livshits. Towards ensuring client-side computational integrity. In CCSW, pages 125–130, 2011.

[36] G. Danezis, M. Kohlweiss, and A. Rial. Differentially private billing with rebates. In Information Hiding, pages 148–162, 2011.

[37] C. Dwork. Differential privacy: A survey of results. Theory and Applications of Models of Computation, pages 1–19, 2008.

[38] U. Feige and A. Shamir. Witness indistinguishable and witness hiding protocols. In STOC, pages 416–426, 1990.

[39] U. Feige, A. Fiat, and A. Shamir. Zero knowledge proofs of identity. In STOC, pages 210–217, 1987.

[40] A. Fiat and A. Shamir. How to prove yourself: Practical solutions to identification and signature problems. In CRYPTO, pages 186–194, 1986.

[41] M. Fredrikson and B. Livshits. Z0: An optimizing distributing zero-knowledge compiler. 2013. MSR Technical report.

[42] T. Freeman and F. Pfenning. Refinement types for ML. In Programming Language Design and Implementation (PLDI’91), pages 268–277. ACM, 1991.

[43] E. Fujisaki and T. Okamoto. Statistical zero knowledge protocols to prove modular polynomial relations. In CRYPTO, pages 16–30, 1997.

[44] F. D. Garcia, E. R. Verheul, and B. Jacobs. Cell-based roadpricing. In EuroPKI, pages 106–122, 2011.

[45] I. Goldberg. Natural zero-knowledge embedding in C++. Personal communication, October 2011.

[46] O. Goldreich, S. Micali, and A. Wigderson. How to prove all NP-statements in zero-knowledge, and a methodology of cryptographic protocol design. In CRYPTO, pages 171–185, 1986.

[47] S. Goldwasser, S. Micali, and C. Rackoff. The knowledge complexity of interactive proof systems. SIAM J. Comput., 18(1):186–208, 1989.

[48] M. Jawurek, M. Johns, and F. Kerschbaum. Plug-in privacy for smart metering billing. In PETS, pages 192–210, 2011.

[49] D. Malkhi, N. Nisan, B. Pinkas, and Y. Sella. Fairplay - a secure two-party computation system. In USENIX Security, pages 287–302, 2004.

[50] U. M. Maurer. Unifying zero-knowledge proofs of knowledge. In B. Preneel, editor, AFRICACRYPT, volume 5580, pages 272–286. Springer, 2009.

[51] S. Meiklejohn, C. C. Erway, A. Küpçü, T. Hinkle, and A. Lysyanskaya. ZKPDL: A language-based system for efficient zero-knowledge proofs and electronic cash. In USENIX Security Symposium, pages 193–206, 2010.

[52] T. Okamoto. Provably secure and practical identification schemes and corresponding signature schemes. In CRYPTO, volume 740, pages 31–53. Springer, 1992.

[53] B. Parno, C. Gentry, J. Howell, and M. Raykova. Pinocchio: Nearly practical verifiable computation. In IEEE Symposium on Security and Privacy, 2013.

[54] T. P. Pedersen. Non-interactive and information-theoretic secure verifiable secret sharing. In CRYPTO '92, volume 576 of LNCS, pages 129–140, 1992.

[55] A. Rial and G. Danezis. Privacy-preserving smart metering. In WPES, pages 49–60, 2011.

[56] T. Ristenpart, G. Maganis, A. Krishnamurthy, and T. Kohno. Privacy-preserving location tracking of lost or stolen devices: Cryptographic techniques and replacing trusted third parties with DHTs. In 17th USENIX Security Symposium, pages 275–290, 2008.

[57] C.-P. Schnorr. Efficient signature generation by smart cards. J. Cryptology, 4(3):161–174, 1991.

[58] N. Swamy, J. Chen, C. Fournet, P.-Y. Strub, K. Bhargavan, and J. Yang. Secure distributed programming with value-dependent types. In ICFP, pages 266–278, 2011.

[59] M. Tompa and H. Woll. Random self-reducibility and zero knowledge interactive proofs of possession of information. In FOCS, pages 472–482, 1987.

[60] C. Troncoso, G. Danezis, E. Kosta, and B. Preneel. PriPAYD: privacy friendly pay-as-you-drive insurance. In P. Ning and T. Yu, editors, WPES, pages 99–107. ACM, 2007.

[61] C. Troncoso, G. Danezis, E. Kosta, J. Balasch, and B. Preneel. Pripayd: Privacy-friendly pay-as-you-drive insurance. IEEE Trans. Dependable Sec. Comput., 8(5):742–755, 2011.

[62] H. Wee. Zero knowledge in the random oracle model, revisited. In ASIACRYPT, pages 417–434, 2009.

---

This revised version aims to enhance clarity, coherence, and professionalism, making the text more accessible and informative.