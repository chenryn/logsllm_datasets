### Choice of the Lookup Quorum and Intersection Probability

The choice of the lookup quorum results in the same intersection probability as a random one. The most intriguing aspect of the UNIQUE-PATH strategy is its extremely low message count. Surprisingly, accessing a target quorum of size \( |Q| \) requires fewer than \( |Q| - 1 \) messages, including the reply message. This efficiency is due to early halting. When a quorum of size \( |Q| \) is accessed, the first hit typically occurs around halfway through the process. Consequently, an average of \( |Q|/2 \) messages are sent until a hit is achieved. The reply follows the reverse path, but with path reduction optimization, the reply path length is usually shorter. Additionally, the originator of the lookup includes itself in the lookup quorum, reducing the number of messages by one.

### Salvage Technique for RW Messages

To prevent the dropping of RW (Read-Write) messages, we employ a salvage technique. If node \( v \) fails to forward a RW message to the chosen neighbor, it attempts to send the message to another random neighbor. This method, combined with FLOODING lookup, is illustrated in Figures 6(a) and 6(b). The hit ratio grows superlinearly with TTL (Time to Live). For instance, in a network of 800 nodes, a hit ratio of 0.5 is achieved with TTL=2, while a hit ratio of 0.85 is achieved with TTL=3. The number of messages sent by FLOODING is relatively small and comparable to the PATH strategy. However, to increase the hit ratio to 0.9, the TTL must be increased to 4, resulting in a significant communication cost increase. Specifically, FLOODING with TTL=4 sends 35 messages, compared to 14 messages with TTL=3. This highlights the primary disadvantage of the FLOODING strategy: the lack of fine-grained control over the intersection probability, which contrasts with the PATH strategy. In mobile networks, FLOODING performs similarly to static networks, so it is not depicted separately.

### UNIQUE-PATH Advertise and Lookup

As proven in Theorem 5.3, at least one of the RWs in this combination must be of length \( n(1 - o(n)) \). Figure 6(c) shows the hit ratio for various RW TTL values in a network of 800 nodes. Both advertise and lookup were accessed using UNIQUE-PATH, which significantly improved performance. A 0.9 hit ratio is achieved when the combined length of the advertise RW and lookup RW is approximately 350, or nearly \( n/2 \). Therefore, if both walks use the same TTL, it should be around 175, or approximately \( 1.5 \log n \approx n/5 \). For such a choice of TTLs, the number of messages for the lookup access is about TTL/2, as the first hit occurs roughly halfway through the process.

### Related Work

#### Quorum Systems
Quorum systems were initially used in [14] and [13]. Bi-quorums were introduced in [29], and Herlihy used quorums and consensus to implement shared objects in [19]. Other quorum-based implementations of distributed shared objects include [2, 25]. Probabilistic quorum systems were first introduced by Malkhi et al. in [27].

#### Reconfigurable Quorum Systems
Reconfigurable quorum systems were first explored by Herlihy [20], followed by dynamic reconfigurable mechanisms in [25] and [1], though without analyzing the failure probability of a single quorum. These methods are unsuitable for ad hoc networks due to their high message complexity.

#### Probabilistic Quorum System for Sensor Networks
A probabilistic quorum system for sensor networks is described in [8]. Access to both write and read quorums is performed by flooding a request throughout the entire network. In writes, data is saved by \( O(n) \) nodes, but only \( O(\log n) \) nodes send acknowledgments. For reads, the IDs of \( O(\log n) \) random nodes are included in the header, and only these nodes reply to the read request.

#### Quorum-Based Location Services
One of the most widely used applications of quorums in ad hoc networks is location services. Examples include [31], Octopus [28], GLS [21], and GCLP [32]. These works differ from ours in that they often use geographic knowledge, do not use probabilistic quorums, and do not utilize asymmetric quorum systems.

In the work of Haas and Liang [18], a uniform random quorum system is used for mobility management. Nodes form a virtual backbone, and when a node moves, it updates its location with a quorum containing the nearest backbone node. Each source node then queries the quorum containing its nearest backbone for the destination's location. The selection of nodes into quorums is done randomly during runtime.

In [23, 24], both read and write quorums are random subsets of nodes. The write quorum is accessed by random gossip, which also constructs random membership. The read quorum is accessed by contacting a set of random nodes picked out of the random membership directly, similar to our RANDOM access. Our work generalizes [24] by providing multiple alternative quorum access strategies, whereas [24] only provides RANDOM advertise and lookup.

### Discussion

We have explored various access strategies for implementing probabilistic bi-quorum systems in ad hoc networks. We have shown that asymmetric bi-quorums can offer better performance than symmetric ones. Moreover, we have demonstrated that efficient quorums can be achieved even without geographical knowledge. The most efficient bi-quorum system we found uses RANDOM for advertise and PATH for lookup (or vice versa), due to the elimination of the need for multiple hop routing in PATH.

An appealing application of quorums is distributed shared objects. It was shown in [2] that atomic registers can be implemented using quorums, requiring both read and write operations to access one advertise and one lookup quorum, with some known optimizations.

### References

[1] I. Abraham and D. Malkhi. Probabilistic quorums for dynamic systems. In DISC, pages 60-74, 2003.
[2] H. Attiya, A. Bar-Noy, and D. Dolev. Sharing Memory Robustly in Message Passing Systems. J. ACM, 42(1):124-142, 1995.
[7] G. Chockler, M. Demirbas, S. Gilbert, C. Newport, and T. Nolte. Consensus and Collision Detectors in Wireless Ad Hoc Networks. In PODC, 2005.
[8] G. Chockler, S. Gilbert, and B. Patt-Shamir. Communication-Efficient Probabilistic Quorum Systems for Sensor Networks. In PERCOMW, page 111, 2006.
[9] G. Chockler, I. Keidar, and R. Vitenberg. Group Communication Specifications: a Comprehensive Study. ACM Computing Surveys, 33(4):427-469, 2001.
[10] S. Dolev, S. Gilbert, N. Lynch, A. Shvartsman, and J. Welch. Geoquorums: Implementing atomic memory in mobile ad hoc networks. In DISC, 2003.
[11] S. Dolev, E. Schiller, and J. Welch. Random Walk for Self-Stabilizing Group Communication in Ad Hoc Networks. In PODC, pages 259-259, 2002.
[12] R. Friedman and G. Kliot. Location Services in Wireless Ad Hoc and Hybrid Networks: A Survey. TR CS-2006-10, Technion, January 2006.
[13] H. Garcia-Molina and D. Barbara. How to assign votes in a distributed system. J. ACM, 32(4):841-860, 1985.
[14] D. K. Gifford. Weighted Voting for Replicated Data. In SOSP, pages 150-162, December 1979.
[15] V. Gramoli. Distributed Shared Memory for Large-Scale Dynamic Systems. PhD thesis, 2007.
[16] R. Guerraoui and M. Raynal. The Information Structure of Indulgent Consensus. IEEE Trans. on Comput., 53(4):453-466, 2004.
[17] P. Gupta and P. Kumar. Critical Power for Asymptotic Connectivity in Wireless Networks. In Stochastic Analysis, Control, Optimization and Applications, pages 547-566, 1998.
[18] Z. Haas and B. Liang. Ad Hoc mobility management with randomized database groups. In ICC, June 1999.
[19] M. Herlihy. A quorum-consensus replication method for abstract data types. ACM Trans. Comput. Syst., 4(1):32-53, 1986.
[20] M. Herlihy. Dynamic quorum adjustment for partitioned data. ACM Trans. Database Syst., 12(2):170-194, 1987.
[21] J. Li, J. Jannotti, D. De Couto, D. Karger, and R. Morris. A scalable location service for geographic ad-hoc routing. In MobiCom, pages 120-130, August 2000.
[22] L. Lovasz. Random Walks on Graphs: A Survey. Combinatorics, 2:1-46, 1993.
[23] J. Luo, P. Eugster, and J. Hubaux. Pilot: Probabilistic lightweight group communication system for ad hoc networks. IEEE Transactions on Mobile Computing, 3(2):164-179, April 2004.
[24] J. Luo, J.-P. Hubaux, and P.Th. Eugster. PAN: Providing reliable storage in mobile ad hoc networks with probabilistic quorum systems. In MobiHoc, pages 1-12, 2003.
[25] Nancy A. Lynch and Alexander A. Shvartsman. RAMBO: A Reconfigurable Atomic Memory Service for Dynamic Networks. In DISC, pages 173-190, 2002.
[26] N. Madras and G. Slade. The self-avoiding walk. Birkhauser, 1993.
[27] D. Malkhi, M. Reiter, A. Wool, and R. Wright. Probabilistic Quorum Systems. The Information and Computation Journal, 170(2):184-206, November 2001.
[28] R. Melamed, I. Keidar, and Y. Barel. Octopus: A Fault-Tolerant and Efficient Ad-hoc Routing Protocol. In SRDS, October 2005.
[29] N. Mitchell, M. Mizuno, and M. Raynal. A General Method to Define Quorums. In ICDCS, pages 657-664, 1992.
[3] C. Avin and C. Brito. Efficient and robust query processing in dynamic environments using RW techniques. In IPSN, pages 277-286, 2004.
[4] C. Avin and G. Ercal. On the cover time and mixing time of random geometric graphs. Theor. Comput. Sci., 380(1-2), 2007.
[5] Z. Bar-Yossef, R. Friedman, and G. Kliot. RaWMS - Random Walk based Lightweight Membership Service for Wireless Ad Hoc Networks. In MobiHoc, pages 238-249, June 2006.
[6] S. Bhattacharya. Randomized location service in mobile ad hoc networks. In MSWIM, pages 66-73, 2003.
[30] S. Servetto and G. Barrenechea. Constrained Random Walks on Random Graphs: Routing Algorithms for Large Scale Wireless Sensor Networks. In WSNA, 2002.
[31] I. Stojmenovic. A routing strategy and quorum based location update scheme for ad hoc wireless networks. Computer Science, SITE, University of Ottawa, TR-99-09, September 1999.
[32] J. Tchakarov and N.H. Vaidya. Efficient Content Location in Wireless Ad Hoc Networks. In MDM, January 2004.

1-4244-2398-9/08/$20.00 ©2008 IEEE
286
DSN 2008: Friedman et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021 at 13:19:46 UTC from IEEE Xplore. Restrictions apply.