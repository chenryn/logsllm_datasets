### Content Distribution and Bandwidth Allocation

#### Experimental Setup
To evaluate the performance of different content distribution protocols, we simulate a distributed cache of movie files using two cache servers. Cache server A contains a complete copy of every movie, while cache server B has a random 5.0% of the library’s files to reduce the load on server A. Both servers upload content at a rate of 50 KBytes/s, which is a scaled-down version of realistic data center bandwidth due to the number of simulated downloaders. The system-wide aggregate bandwidth for each protocol over a one-hour run is illustrated in Figure 11.

#### Performance Comparison
BitTorrent and the global rarest policy do not consider swarm- or system-wide performance, leading to a high proportion of bandwidth being allocated to singleton swarms and small swarms from the long tail. These peers are unable to forward blocks as rapidly as members of larger swarms, resulting in low aggregate bandwidth for pure peer-to-peer approaches. In contrast, V-Formation achieves 66% higher aggregate bandwidth than BitTorrent.

V-Formation and Antfarm differ in both the time to converge on a bandwidth allocation and the aggregate bandwidth achieved after convergence. V-Formation uses lightweight probes to determine bandwidth allocations, allowing it to reach a stable allocation four times faster than Antfarm. Antfarm, on the other hand, relies on response curves to assess swarms, requiring the Antfarm coordinator to maintain a particular bandwidth allocation for a longer period before determining which swarms benefit most from the bandwidth.

After convergence, V-Formation and Antfarm achieve different aggregate bandwidths due to constraints imposed by individual peers’ bandwidths and swarm memberships. For example, in the scenario where two swarms, s1 and s2, have comparable CPM values, but s1's movie is cached on both servers and s2's movie is only cached on server B, the Antfarm coordinator measures response curves and determines that both swarms should receive approximately equal bandwidth from the servers. However, Antfarm cannot realize this allocation due to the constraints of peers’ upload capacities and their swarm memberships. The coordinator's greedy solution to the assignment problem results in suboptimal performance.

In contrast, the V-Formation coordinator uses each individual peer’s benefit to arrive at a more efficient allocation of bandwidth. A representative run of the experiment shows that both swarms receive comparable bandwidth from the cache servers despite the imbalance in the cache servers’ content (Figure 12). Cache server B adjusts its allocations to maintain proportional swarm aggregate bandwidths by slightly sacrificing the aggregate bandwidths of s1 and s2 to bootstrap new swarms. The caches' bandwidth is too small to saturate peers’ upload capacities across the five swarms, but V-Formation manages to converge on equal aggregate bandwidths despite limited cache bandwidth. At 6000 seconds, all peers in s1 and s2 leave simultaneously; the remaining swarms each achieve an equal increase in aggregate bandwidth. V-Formation adapts within five minutes to dramatic changes in swarm memberships by choosing an appropriate block propagation time measurement interval τ that enables hosts to efficiently detect the swarms that benefit most from their bandwidth (Figure 16). Cache servers continuously shift their allocations based on changing CPM values, and swarms dampen the effect that the fluctuating allocations have on the swarms’ aggregate bandwidths.

#### Related Work
Past work on content distribution can be categorized into two main areas: general content distribution networks (CDNs) and peer-to-peer swarming systems.

**Content Distribution Networks (CDNs):**
CDNs leverage distributed hosts to alleviate load at content origin servers and improve latency and bandwidth performance for clients. Akamai [18] is an infrastructure-based CDN used by many content providers. ECHOS [20] proposes introducing infrastructure at the Internet’s periphery to cache content near clients. Choffnes et al. [11] reduce cross-ISP traffic in peer-to-peer systems by harvesting data from existing CDNs for locality information. Numerous CDNs rely on consistent hashing within distributed hash tables to replicate content for faster downloads and higher availability [14, 38]. Cooperative web caching dissipates load at servers [8, 15, 17, 37]. CoBlitz [26] uses proxies to disseminate content in pieces and assemble it near downloaders. V-Formation uses the CPM to make efficient use of bandwidth from all hosts, including server-class machines that cache content in the network.

**Peer-to-Peer Swarming Systems:**
Swarming systems leverage bandwidth contributed by peers in a mesh network for increased scalability and resiliency. BitTorrent [9], a swarming protocol contributing to much of the Internet’s traffic [25, 36], encourages peers to contribute their bandwidth using a bilateral tit-for-tat mechanism. Prior work has measured and modeled BitTorrent’s performance and tit-for-tat strategy, showing that it is susceptible to Sybil attacks [12] and is easily gamed [21, 27, 34]. New protocols have responded to BitTorrent’s incentive mechanism by emphasizing fairness using cryptographic- or auction-based mechanisms [24, 33, 35]. Such protocols encourage peers to contribute bandwidth in order to be rewarded with a proportional or equal number of content blocks. Fairness is not a primary concern of V-Formation; while some protocols rely on fairness for incentive compatibility, V-Formation enforces behavior with its coordinator, freeing it to maximize system-wide performance instead.

Many swarming protocols rely on cryptographic virtual currencies to incentivize peers to contribute bandwidth. Dandelion [35] and BAR Gossip [22] employ tamper-resistant protocols that ensure peers are honest. Similarly, microcurrencies [10, 23, 30, 39] rely on cryptographic tokens exchanged between parties to enforce correct behavior. V-Formation extends the lightweight token protocol introduced by Antfarm [32] to incentivize peers to follow the prescribed protocol and risk being discovered and blacklisted if they deviate.

One-Hop Reputations [28] and Contracts [29] use propagation trees of depth one to increase peer accountability in bulk download and live streaming systems, respectively. The protocols introduce peer incentivization strategies that outperform BitTorrent’s bilateral tit-for-tat approach. The CPM is defined by content propagation trees that measure the benefit of a host to particular swarms.

Freedman et al. [13] propose a protocol that manages downloads in a multi-file system. Peers use a distributed algorithm to determine the relative values of content files and the market-based supply and demand for content blocks at each peer according to available network resources. The protocol enables ISPs to set a cost on transferring data over specific network links and allows peers to adjust block prices based on local content demand. V-Formation, on the other hand, takes a holistic view of the relative contributions that peers bring to their swarms.

The work most similar to V-Formation is Antfarm [32], a content distribution system that measures swarms’ responses to seeder bandwidth in order to optimize its uploads among competing swarms. Antfarm does not efficiently allocate bandwidth from multiple origin servers or from in-network cache servers, which belong to multiple, overlapping swarms. In contrast, V-Formation accounts for bandwidth from all hosts based on real-time measurements using the CPM.

#### Conclusions
This paper introduces the Content Propagation Metric (CPM), which enables content distribution systems to make efficient use of bandwidth from all sources, including content distributors’ origin servers, in-network caches, and clients. The CPM captures how quickly content propagates throughout swarms, providing hosts a basis of comparison to preferentially upload content to swarms that exhibit high marginal utility. V-Formation, a new content distribution system based on a hybrid, peer-assisted architecture, uses the CPM to allocate hosts’ bandwidth among competing swarms. V-Formation achieves a global performance goal of maximizing system-wide aggregate bandwidth by using the CPM to guide hosts toward an efficient use of resources. The CPM naturally handles dynamic swarm and peer behavior, enabling V-Formation to stabilize quickly on an efficient allocation of bandwidth. The flexibility of the CPM makes V-Formation efficient and scalable, rendering it well-suited to address the increasing demand for online media content.

#### Acknowledgments
We would like to thank our shepherd Michael J. Freedman and the anonymous reviewers for their insights and comments. This material is based upon work supported by the National Science Foundation under Grant No. 0546568 and the 2009 Google Fellowship in Distributed Systems.

#### References
[1] BitTorrent. http://bittorrent.com.
[2] FlixQ.com – Videosharing For The Masses. http://flixq.com.
[3] Ipoque – Internet Studies. http://www.ipoque.com/resources/internet-studies.
[4] Velocix – New Generation Content Delivery Network. http://www.velocix.com.
[5] Verivue – OneVantage Content Delivery Solution. http://verivue.com.
[6] A. C. Bavier, M. Bowman, B. N. Chun, D. E. Culler, S. Karlin, S. Muir, L. L. Peterson, T. Roscoe, T. Spalink, and M. Wawrzoniak. Operating Systems Support For Planetary-scale Network Services. Symposium on Networked System Design and Implementation, San Francisco, CA, March 2004.
[7] J. W. Byers, M. Luby, M. Mitzenmacher, and A. Rege. A Digital Fountain Approach To Reliable Distribution Of Bulk Data. SIGCOMM Conference, Vancouver, Canada, August 1998.
[8] A. Chankhunthod, P. B. Danzig, C. Neerdaels, M. F. Schwartz, and K. J. Worrell. A Hierarchical Internet Object Cache. USENIX Annual Technical Conference, San Diego, CA, January 1996.
[9] B. Cohen. Incentives Build Robustness In BitTorrent. Workshop on the Economics of Peer-to-Peer Systems, Berkeley, CA, May 2003.
[10] J. Camp, M. Sirbu, and J. D. Tygar. Token And Notational Money In Electronic Commerce. USENIX Workshop on Electronic Commerce, New York, NY, July 1995.
[11] D. R. Choffnes and F. E. Bustamante. Taming The Torrent: A Practical Approach To Reducing Cross-ISP Traffic In Peer-to-Peer Systems. SIGCOMM Conference, Seattle, WA, August 2008.
[12] J. R. Douceur. The Sybil Attack. International Workshop on Peer-to-Peer Systems, Springer Lecture Notes in Computer Science 2429, Cambridge, MA, March 2002.
[13] M. J. Freedman, C. Aperjis, and R. Johari. Prices Are Right: Managing Resources And Incentives In Peer-Assisted Content Distribution. International Workshop on Peer-to-Peer Systems, Tampa Bay, FL, February 2008.
[14] M. J. Freedman, E. Freudenthal, and D. Mazières. Democratizing Content Publication With Coral. Symposium on Networked System Design and Implementation, San Francisco, CA, March 2004.
[15] S. Gadde, J. S. Chase, and M. Rabinovich. Web Caching And Content Distribution: A View From The Interior. Computer Communications, 24(2), May 2001.
[16] C. Huang, J. Li, and K. W. Ross. Can Internet Video-on-Demand Be Profitable? SIGCOMM Conference, 2007.
[17] D. Karger, A. Sherman, A. Berkheimer, B. Bogstad, R. Dhanidina, K. Iwamoto, B. Kim, L. Matkins, and Y. Yerushalmi. Web Caching With Consistent Hashing. International World Wide Web Conference, Toronto, Canada, May 1999.
[18] D. R. Karger, E. Lehman, F. T. Leighton, R. Panigrahy, M. S. Levine, and D. Lewin. Consistent Hashing And Random Trees: Distributed Caching Protocols For Relieving Hot Spots On The World Wide Web. ACM Symposium on Theory of Computing, El Paso, TX, May 1997.
[19] D. Levin, K. LaCurts, N. Spring, and B. Bhattacharjee. BitTorrent Is An Auction: Analyzing And Improving BitTorrent’s Incentives. SIGCOMM Conference, Seattle, WA, August 2008.
[20] N. Laoutaris, P. Rodriguez, and L. Massoulie. ECHOS: Edge Capacity Hosting Overlays Of Nano Data Centers. ACM SIGCOMM: Computer Communication Review, 38, January 2008.
[21] T. Locher, P. Moor, S. Schmid, and R. Wattenhofer. Free Riding In BitTorrent Is Cheap. Workshop on Hot Topics in Networks, Irvine, CA, November 2006.
[22] H. C. Li, A. Clement, E. L. Wong, J. Napper, I. Roy, L. Alvisi, and M. Dahlin. BAR Gossip. Symposium on Operating System Design and Implementation, Seattle, WA, November 2006.
[23] M. Manasse. The Millicent Protocol For Electronic Commerce. USENIX Workshop on Electronic Commerce, New York, NY, August 1995.
[24] T.-W. Ngan, D. S. Wallach, and A. P. Druschel. Enforcing Fair Sharing Of Peer-to-Peer Resources. International Workshop on Peer-to-Peer Systems, Springer Lecture Notes in Computer Science 2735, Berkeley, CA, February 2003.
[25] J. Pouwelse, P. Garbacki, D. Epema, and H. Sips. The BitTorrent P2P File-Sharing System: Measurements And Analysis. International Workshop on Peer-to-Peer Systems, Springer Lecture Notes in Computer Science 3640, Ithaca, NY, February 2005.
[26] K. Park and V. S. Pai. Scale And Performance In CoBlitz Large-File Distribution Service. Symposium on Networked System Design and Implementation, San Jose, CA, May 2006.
[27] M. Piatek, T. Isdal, T. Anderson, A. Krishnamurthy, and A. Venkataramani. Do Incentives Build Robustness In BitTorrent? Symposium on Networked System Design and Implementation, Cambridge, MA, April 2007.
[28] M. Piatek, T. Isdal, A. Krishnamurthy, and T. Anderson. One Hop Reputations For Peer To Peer File Sharing Workloads. Symposium on Networked System Design and Implementation, San Francisco, CA, April 2008.
[29] M. Piatek, A. Krishnamurthy, A. Venkataramani, R. Yang, D. Zhang, and A. Jaffe. Contracts: Practical Contribution Incentives For P2P Live Streaming. Symposium on Networked System Design and Implementation, San Jose, CA, April 2010.
[30] T. Poutanen, H. Hinton, and M. Stumm. Netcents: A Lightweight Protocol For Secure Micropayments. USENIX Workshop on Electronic Commerce, Boston, MA, August 1998.
[31] J. A. Pouwelse, P. Garbacki, J. Wang, A. Bakker, J. Yang, A. Iosup, D. H. J. Epema, M. Reinders, M. van Steen, and H. J. Sips. International Workshop on Peer-to-Peer Systems, Santa Barbara, CA, February 2006.
[32] R. S. Peterson and E. G. Sirer. Antfarm: Efficient Content Distribution With Managed Swarms. Symposium on Networked System Design and Implementation, Boston, MA, April 2009.
[33] A. Sherman, J. Nieh, and C. Stein. FairTorrent: Bringing Fairness To Peer-to-Peer Systems. Conference on Emerging Networking EXperiments and Technologies, Rome, Italy, December 2009.
[34] M. Sirivianos, J. H. Park, R. Chen, and X. Yang. Free-Riding In BitTorrent Networks With The Large View Exploit. International Workshop on Peer-to-Peer Systems, Bellevue, WA, February 2007.
[35] M. Sirivianos, X. Yang, and S. Jarecki. Dandelion: Cooperative Content Distribution With Robust Incentives. USENIX Annual Technical Conference, Santa Clara, CA, June 2007.
[36] S. Saroiu, P. K. Gummadi, R. J. Dunn, S. D. Gribble, and H. M. Levy. An Analysis Of Internet Content Delivery Systems. Symposium on Operating System Design and Implementation, Boston, MA, December 2002.
[37] A. Wolman, G. M. Voelker, N. Sharma, N. Cardwell, A. R. Karlin, and H. M. Levy. On The Scale And Performance Of Cooperative Web Proxy Caching. Symposium on Operating Systems Principles, Kiawah Island, SC, December 1999.
[38] L. Wang, K. Park, R. Pang, V. S. Pai, and L. L. Peterson. Reliability And Security In The Codeen Content Distribution Network. USENIX Annual Technical Conference, Boston, MA, June 2004.
[39] P. Wayner. Digital Cash: Commerce On The Net. Morgan Kaufmann, April 1996.