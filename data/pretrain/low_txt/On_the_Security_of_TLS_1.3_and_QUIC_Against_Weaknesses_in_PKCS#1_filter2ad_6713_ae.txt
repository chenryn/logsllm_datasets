### Impact of Man-in-the-Middle (MITM) Attacks on Web Page Load Times

The execution of a MITM attack often results in a noticeable delay before the web browser can display the web page. While it is reasonable to assume that a user might wait up to 30 seconds for a web page to load—especially in scenarios with slow internet connections, such as public Wi-Fi at airports—this becomes increasingly unrealistic as the duration of the attack extends. This assumption holds unless we consider additional factors, such as the user working in a different browser tab while waiting for the page to load.

However, it is important to note that TLS is also used in machine-to-machine (M2M) communication, where no human user is involved. In these cases, the constraints on the attack's running time are less stringent because client machines can tolerate longer timeouts. For example, our analysis of OpenSSL on Ubuntu 14.04 as a TLS client revealed that the TLS connection does not timeout even after 7700 seconds, which allows for more realistic attacks in M2M settings without direct human involvement.

### Avoiding TCP Timeouts

The 7700-second timeout in OpenSSL exceeds the default TCP connection timeout, which is typically set to 7200 seconds in most operating systems, including Linux, OS X, and Windows. To avoid TCP timeouts, the MITM attacker can transmit the response, particularly the large Certificate message, byte-by-byte over the TCP connection, introducing a short delay after each byte. This technique effectively prevents the TCP connection from timing out.

### Attacks with "Imperfect" Oracles

The discussion in the previous section assumes the presence of a "perfect" oracle, which is an idealized scenario. In practice, finding such oracles is relatively rare. Based on the analysis in Section 7.1, Table 1, a reasonable estimate for Bleichenbacher-like attacks is 30 seconds per 1000 server requests. Using this result, we can estimate the attack duration when a weaker, "imperfect" Bleichenbacher oracle is present.

Bardou et al. [4] describe an optimized variant of Bleichenbacher's algorithm and analyze it with different "imperfect" oracles. The oracles considered in their work range from a "TTT" oracle, which performs minimal PKCS#1 v1.5 consistency checks and returns 1 on all plaintexts beginning with 0x00||0x02, to the most restrictive "FFF" oracle, which thoroughly checks PKCS#1 v1.5 consistency by testing all padding fields and the length of the plaintext. The "TTT" oracle allows for very efficient Bleichenbacher attacks, while the "FFF" oracle makes such attacks less efficient due to the thoroughness of its checks.

Bardou et al. compute the number of attack queries for different oracle types, assuming the attacked message decrypts to a message starting with 0x00||0x02. In our case, we need to perform RSA secret key operations on arbitrary messages, which requires an initial step to find a message starting with 0x00||0x02 (referred to as the blinding step). The performance of this step depends on the strength of the oracle. For instance, it takes about 215 additional queries to find a valid message with a "TTT" oracle.

Table 3 provides the estimated duration of the attack in our setting with the oracles from [4]. The number of oracle queries is computed as the sum of the queries in the blinding step and the queries required to perform the attack as described by Bardou et al. [4].

### Attacking TLS 1.3 and QUIC

For TLS 1.3, none of the attack durations fall within the "session keep-alive" time of the tested browsers (see Table 2). However, in M2M communication, the long attack durations are more relevant. For OpenSSL, all timing results are within the acceptable range, except for the FFF oracle.

For QUIC, the time required to perform one full Bleichenbacher attack ranges from about 18 minutes (for TTT and TFT oracles) to about 202 hours (less than 8.5 days) for the most restrictive FFF oracle. Given that the attacker can perform pre-computations before the actual attack, these figures are considered practical, even for the most restrictive FFF oracle.

### Acknowledgements

We would like to thank Adam Langley for his advice on the limitations of the QUIC reference implementation and further comments, Fedor Indutny for providing us with an early version of his certificate collection, the reviewers of USENIX Security 2015 for suggesting to analyze the applicability of our attacks to QUIC, and the reviewers of ACM CCS 2015 for their helpful comments.

### References

[1] SSL Pulse. Survey of the SSL Implementation of the Most Popular Web Sites, April 2015. https://www.trustworthyinternet.org/ssl-pulse.
[2] David Adrian, Karthikeyan Bhargavan, Zakir Durumeric, Pierrick Gaudry, Matthew Green, J. Alex Halderman, Nadia Heninger, Drew Springall, Emmanuel Thomé, Luke Valenta, Benjamin VanderSloot, Eric Wustrow, Santiago Zanella-Béguelin, Paul Zimmermann. Imperfect Forward Secrecy: How Difﬁe-Hellman Fails in Practice. May 2015. https://WeakDH.org
[3] Gail-Joon Ahn, Moti Yung, and Ninghui Li, editors. ACM CCS 14: 21st Conference on Computer and Communications Security. ACM Press, November 2014.
[4] Romain Bardou, Riccardo Focardi, Yusuke Kawamoto, Lorenzo Simionato, Graham Steel, and Joe-Kai Tsay. Efficient padding oracle attacks on cryptographic hardware. In Reihaneh Safavi-Naini and Ran Canetti, editors, Advances in Cryptology – CRYPTO 2012, volume 7417 of Lecture Notes in Computer Science, pages 608–625. Springer, August 2012.
[5] Florian Bergsma, Benjamin Dowling, Florian Kohlar, Jörg Schwenk, and Douglas Stebila. Multi-ciphersuite security of the secure shell (SSH) protocol. In Ahn et al. [3], pages 369–381.
[6] S. Blake-Wilson, N. Bolyard, V. Gupta, C. Hawk, and B. Moeller. Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS). RFC 4492 (Informational), May 2006. Updated by RFC 5246.
[7] Daniel Bleichenbacher. Chosen ciphertext attacks against protocols based on the RSA encryption standard PKCS #1. In Hugo Krawczyk, editor, Advances in Cryptology – CRYPTO’98, volume 1462 of Lecture Notes in Computer Science, pages 1–12. Springer, August 1998.
[8] Wan-Teh Chang and Adam Langley. QUIC crypto, 2013. https://docs.google.com/document/d/1g5nIXAIkN_Y-7XJW5K45IblHd_L2f5LTaDUDwvZ5L6g/edit?pli=1.
[9] Jean Paul Degabriele, Anja Lehmann, Kenneth G. Paterson, Nigel P. Smart, and Mario Streﬂer. On the joint security of encryption and signature in EMV. In Orr Dunkelman, editor, Topics in Cryptology – CT-RSA 2012, volume 7178 of Lecture Notes in Computer Science, pages 116–135. Springer, February / March 2012.
[10] T. Dierks and C. Allen. The TLS Protocol Version 1.0. RFC 2246 (Proposed Standard), January 1999. Obsoleted by RFC 4346, updated by RFCs 3546, 5746.
[11] T. Dierks and E. Rescorla. The Transport Layer Security (TLS) Protocol Version 1.1. RFC 4346 (Proposed Standard), April 2006. Obsoleted by RFC 5246, updated by RFCs 4366, 4680, 4681, 5746.
[12] T. Dierks and E. Rescorla. The Transport Layer Security (TLS) Protocol Version 1.2. RFC 5246 (Proposed Standard), August 2008. Updated by RFC 5746.
[13] T. Dierks and E. Rescorla. The Transport Layer Security (TLS) Protocol Version 1.3. draft-ietf-tls-tls13-07, July 2015.
[14] Marc Fischlin and Felix Günther. Multi-stage key exchange and the case of Google’s QUIC protocol. In Gail-Joon Ahn, Moti Yung, and Ninghui Li, editors, Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security, Scottsdale, AZ, USA, November 3-7, 2014, pages 1193–1204. ACM, 2014.
[15] Martin Georgiev, Subodh Iyengar, Suman Jana, Rishita Anubhai, Dan Boneh, and Vitaly Shmatikov. The Most Dangerous Code in the World: Validating SSL Certificates in Non-Browser Software. In ACM Conference on Computer and Communications Security, 2012.
[16] Fedor Indutny. RSA certificate sizes, April 2015. http://indutny.github.io/collect-certs.
[17] Tibor Jager, Kenneth G. Paterson, and Juraj Somorovsky. One bad apple: Backwards compatibility attacks on state-of-the-art cryptography. In ISOC Network and Distributed System Security Symposium – NDSS 2013. The Internet Society, February 2013.
[18] Tibor Jager, Sebastian Schinzel, and Juraj Somorovsky. Bleichenbacher’s attack strikes again: Breaking PKCS#1 v1.5 in XML encryption. In Sara Foresti, Moti Yung, and Fabio Martinelli, editors, ESORICS 2012: 17th European Symposium on Research in Computer Security, volume 7459 of Lecture Notes in Computer Science, pages 752–769. Springer, September 2012.
[19] J. Jonsson and B. Kaliski. Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1. RFC 3447 (Informational), February 2003.
[20] B. Kaliski. PKCS #1: RSA Encryption Version 1.5. RFC 2313 (Informational), March 1998. Obsoleted by RFC 2437.
[21] B. Kaliski and J. Staddon. PKCS #1: RSA Cryptography Specifications Version 2.0. RFC 2437 (Informational), October 1998. Obsoleted by RFC 3447.
[22] Vlastimil Klíma, Ondrej Pokorný, and Tomás Rosa. Attacking RSA-based sessions in SSL/TLS. In Colin D. Walter, Çetin Kaya Koç, and Christof Paar, editors, Cryptographic Hardware and Embedded Systems – CHES 2003, volume 2779 of Lecture Notes in Computer Science, pages 426–440. Springer, September 2003.
[23] Robert Lychev, Samuel Jero, Alexandra Boldyreva, and Cristina Nita-Rotaru. How secure and quick is QUIC? Provable security and performance analyses. In 2015 IEEE Symposium on Security and Privacy, SP 2015, San Jose, CA, USA, May 17-21, 2015, pages 214–231. IEEE Computer Society, 2015.
[24] M. Maher. ATM Signalling Support for IP over ATM - UNI Signalling 4.0 Update. RFC 2331 (Proposed Standard), April 1998.
[25] James Manger. A chosen ciphertext attack on RSA optimal asymmetric encryption padding (OAEP) as standardized in PKCS #1 v2.0. In Joe Kilian, editor, Advances in Cryptology – CRYPTO 2001, volume 2139 of Lecture Notes in Computer Science, pages 230–238. Springer, August 2001.
[26] Nikos Mavrogiannopoulos, Frederik Vercauteren, Vesselin Velichkov, and Bart Preneel. A cross-protocol attack on the TLS protocol. In Yu et al. [34], pages 62–72.
[27] Christopher Meyer and Jörg Schwenk. SoK: Lessons Learned From SSL/TLS Attacks. In Proceedings of the 14th International Workshop on Information Security Applications, WISA 2013, Berlin, Heidelberg, August 2013. Springer-Verlag.
[28] Christopher Meyer, Juraj Somorovsky, Eugen Weiss, Jörg Schwenk, Sebastian Schinzel, and Erik Tews. Revisiting SSL/TLS implementations: New bleichenbacher side channels and attacks. In Proceedings of the 23rd USENIX Security Symposium, San Diego, CA, USA, August 20-22, 2014., pages 733–748, 2014.
[29] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. Hey, you, get off of my cloud: exploring information leakage in third-party compute clouds. In Ehab Al-Shaer, Somesh Jha, and Angelos D. Keromytis, editors, ACM CCS 09: 16th Conference on Computer and Communications Security, pages 199–212. ACM Press, November 2009.
[30] Ivan Ristić. Bulletproof SSL and TLS. Understanding and deploying SSL/TLS and PKI to secure servers and web applications. Feisty Duck, August 2014.
[31] Jim Roskind. Experimenting with QUIC, 2013. http://blog.chromium.org/2013/06/experimenting-with-quic.html.
[32] Jim Roskind. QUIC design document, 2013. https://docs.google.com/a/chromium.org/document/d/1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34.
[33] D. Wagner and B. Schneier. Analysis of the SSL 3.0 protocol. The Second USENIX Workshop on Electronic Commerce Proceedings, 1996.
[34] Ting Yu, George Danezis, and Virgil D. Gligor, editors. ACM CCS 12: 19th Conference on Computer and Communications Security. ACM Press, October 2012.
[35] Yinqian Zhang, Ari Juels, Michael K. Reiter, and Thomas Ristenpart. Cross-VM side channels and their use to extract private keys. In Yu et al. [34], pages 305–316.
[36] Yinqian Zhang, Ari Juels, Michael K. Reiter, and Thomas Ristenpart. Cross-tenant side-channel attacks in PaaS clouds. In Ahn et al. [3], pages 990–1003.