### 图14：利用NVIDIA RTX 3060在Windows操作系统下产生的DVFS诱导和AM调制电磁辐射进行网站指纹识别准确度比较

从结果可以看出，利用AM调制电磁辐射的准确率高达89.1%，远高于利用DVFS诱导电磁辐射的准确率（即63.9%）。这种优异的表现表明，AM调制电磁辐射可以有效地用于发起网站指纹识别攻击。即使与附录G中表IX的最后一列相比，在其他七个位置收集的数据用于训练时，这里的准确率也明显更高。如果仅考虑禁用GPU DVFS实际上被用作一种对策，那么发现这种缓解方法反而有助于而不是阻止攻击是出乎意料的。

我们还验证了可以通过利用这种AM调制电磁信号来执行按键时间推断。在这种情况下，无论使用哪种NVIDIA GPU，间隔20毫秒的两次按键仍然可以很好地区分。我们认为，利用AM调制电磁辐射进行攻击性能显著提高的原因在于，这种电磁信号所携带的信息粒度比DVFS诱导的信号要细得多。尽管GPU DVFS的变化速度足够快，可以反映GPU工作负载的变化，但它无法使我们窥探每个工作负载内部更详细的活动。具体到网站指纹识别攻击，如果能够获取更细粒度的信息，可能有助于区分在渲染过程中生成相似GPU工作负载序列的网页。相比之下，由GPU内存访问调制强度的电磁辐射不可避免地包含了每个工作负载的调制内存活动信息。因此，当利用DVFS诱导的电磁侧信道漏洞时经常被误分类为彼此的网页，在使用AM调制电磁辐射时变得更容易区分。

需要注意的是，本节中描述的电磁侧信道漏洞和DVFS诱导的漏洞不能同时被利用。我们发现，只有在性能级别固定时，AM调制漏洞才会出现。因此，尽管AM调制电磁侧信道漏洞可以用于实现更有效的攻击，但在许多实际情况下，会被利用的是DVFS诱导的漏洞，因为大多数时候用户不会改变默认激活的GPU DVFS设置。然而，正如我们在本节中看到的，如果关闭GPU DVFS，另一种电磁漏洞就变得可被利用。

### IX. 对策

如第VIII节所述，通过固定性能级别禁用GPU DVFS的直接缓解方法并不能有效防止许多GPU的信息泄露。在本节中，我们提出了一些其他对策，我们认为这些对策可以潜在地缓解GPU的电磁侧信道漏洞。

第一个缓解方向是尝试大幅降低攻击者可以测量的可利用电磁辐射的信噪比（SNR）。为此，我们可以有不同的选择（例如，使用RF设备在目标频率范围内生成一些电磁噪声），但一个合理且可行的方法是屏蔽计算机以减少发射的电磁信号强度。例如，我们可以尝试在计算机机箱侧面贴上屏蔽法拉第织物。我们进行了这样的实验，发现如果只是简单地依赖频谱图上的条纹图案来进行利用，这确实可以使远程攻击变得更加困难甚至不可能。然而，如果我们先应用第V节中提出的技术，即使在SNR非常低的情况下，我们仍然可以获得目标信号的出现/消失模式，从而破坏了这种简单屏蔽方法的目的。因此，需要更加精心设计的电磁屏蔽计算机机箱。此外，硬件制造商应在未来的产设计中投入更多努力，以尽量减少电磁辐射，正如NVIDIA对我们所做的回复。

第二个缓解方向是使电磁侧信道信息的粒度变得更粗。为此，我们可以尝试降低GPU DVFS对工作负载变化的敏感性。在这种情况下，性能级别在诸如网页渲染等活动期间可能不会切换，从而使泄漏的信息变得粗粒度，以至于几乎无法推断出任何敏感信息。虽然这种方法并不试图消除侧信道信息，但它可以减少该侧信道的熵，从而降低整体可利用性。由于这会损害能效，问题是如何在安全性和功耗之间找到一个好的平衡点。

除了降低电磁信号的SNR和增加侧信道信息的粒度外，第三个方向是通过混淆。例如，当敏感活动使用GPU时，我们可以故意生成一些随机的GPU工作负载，以扰乱其原始的GPU使用模式，从而降低可预测性。对于本文研究的网站指纹识别攻击，我们可以在浏览器中实现一个线程，在网页渲染期间通过某些接口（如WebGL）随机使用GPU进行一些虚拟计算。特别是对于Chrome，我们只需创建一个扩展程序向GPU进程发送随机请求即可，这是Chrome中专门用于管理与GPU交互的特定进程。

### X. 相关工作

计算设备产生的电磁辐射已被广泛用于各种侧信道攻击，例如窃取加密密钥[2]、[12]-[14]和推断私有信息[10]、[25]、[32]。（电磁辐射也被用于构建数据渗漏的隐蔽通信通道[16]、[61]。）正如[4]中提到的，许多电磁侧信道攻击由于大部分可利用的电磁辐射是弱近场辐射，因此只能在短距离内进行。为了进行长距离攻击，Camurati等人发现无线通信信号可能被利用，因为这种RF信号可能会由于混合信号芯片数字电路中的衬底噪声耦合而无意中进行幅度调制（级联方式）[4]。（后来，Wang等人通过使用基于深度学习的分析技术改进了Camurati的工作[58]。）此外，Callan等人观察到，某些电压调节器或时钟产生的强电磁信号可能携带可利用的信息，并以幅度调制的形式存在[3]，这已在攻击和防御中得到应用[43]、[50]、[61]、[64]。

类似于我们的工作，Sehatbakhsh等人最近也利用与电源管理相关的电磁辐射进行了攻击[51]。尽管有一些相似之处，但两者存在根本性的差异。首先，我们的工作利用了DVFS对GPU时钟的影响，而他们的工作则利用了需求切换对CPU电压调节器的影响。其次，我们的工作还研究了如何提高感兴趣的电磁辐射的SNR，使其在存在电磁屏蔽和强噪声污染的情况下仍可被利用。第三，除了在按键时间推断方面的重叠之外，两项工作展示了不同的攻击，其中[51]中的工作建立了用于数据渗漏的隐蔽通道，而我们的工作展示了网站指纹识别。最后，我们的工作说明了禁用DVFS作为对策可能并不完全有效。

鉴于现代GPU日益流行，近年来对其安全影响的研究开始引起关注。几项研究利用了GPU内存中可能未正确清除的残留数据。Pietro等人展示了缺乏内存清零操作可以被用来攻击CUDA AES实现[47]，Maurice等人调查了虚拟化和云计算环境中的内存残留泄漏漏洞[33]。此外，Zhou等人研究了如何从GPU内存残留中提取原始图像[65]。在[27]中，Lee等人通过检查GPU内存转储成功推断了浏览历史。

除了依赖GPU内存残留外，许多攻击利用GPU的逻辑或物理侧信道信息来破坏机密性。Jiang等人研究了共享GPU缓存或内存库竞争导致的时间差异，并利用这些时间侧信道破解了GPU上的AES实现[20]、[21]。Luo等人展示了CUDA RSA实现也容易受到时间侧信道分析的攻击[29]。除了逻辑侧信道信息外，Luo等人还使用GPU功耗跟踪进行CUDA AES的密码分析[30]，而Gao等人则使用GPU发出的近场局部电磁辐射达到相同目的[11]。除了破坏GPU加速的密码系统外，Naghibijouybari等人还在更广泛的背景下研究了GPU侧信道攻击，他们使用性能计数器或资源跟踪API来测量共享GPU资源的竞争，并利用这些信息进行网站指纹识别、推断用户活动和逆向工程神经网络[41]。

GPU也可以成为恶意软件利用的新场所，以增加其隐蔽性[56]。在[26]中，Ladakis等人实现了一种基于GPU的恶意软件，直接通过DMA监控键盘缓冲区以记录按键。在[66]中，Zhu等人对此主题进行了更全面的研究。在[40]中，Naghibijouybari等人展示了恶意软件可能利用共享GPU资源的竞争来构建用于数据渗漏的隐蔽通道。在[7]中，Davidov和Oldenburg也利用了GPU的电磁辐射，但他们只展示了一个在AMD GPU上启用的恶意软件隐蔽通道。

网站指纹识别和/或按键时间攻击在过去已经被广泛研究。除了网络流量分析外，攻击者还可以利用某些逻辑侧信道信息，如缓存时间[45]、[53]、内存足迹[19]、存储使用统计[22]、共享事件循环[57]和中断时间[28]，来实现此类攻击。像我们的工作一样，物理侧信道信息也被研究用于这种恶意目的[6]、[15]、[63]。特别是，Matyunin等人展示了在移动环境中进行基于电磁的网站指纹识别攻击是可行的[32]，而我们的工作则专注于使用独立GPU的场景。

### XI. 结论

在本文中，我们介绍了新发现的存在于许多现代GPU中的电磁侧信道漏洞，并通过两个案例研究（网站指纹识别和按键时间攻击）证明了这一新的电磁漏洞具有高度可利用性。尽管此漏洞的根本原因是GPU中常用的DVFS特性，但我们已经表明，仅仅通过将GPU设置为特定性能级别来禁用DVFS可能并不是一个有效的对策，因为另一种AM调制的电磁漏洞会出现。我们还讨论了一些潜在的缓解方法。

随着对GPU信息泄露漏洞的研究刚刚开始，我们认为目前披露的漏洞及其利用只是冰山一角，还有许多其他可利用的漏洞隐藏在黑暗中。本文的研究强调了从不同角度对GPU安全性进行更严格评估的重要性。

### 致谢

本研究部分得到了美国国家科学基金会（NSF）资助CNS-2147217和CNS-1739328的支持。作者感谢匿名评审员的意见和建议，这些意见和建议帮助我们提高了论文的质量。

### 参考文献

[1] Y. Abe, H. Sasaki, S. Kato, K. Inoue, M. Edahiro, and M. Peres, “Power and Performance Characterization and Modeling of GPU-Accelerated Systems,” in 2014 IEEE 28th International Parallel and Distributed Processing Symposium (IPDPS). IEEE, 2014, pp. 113–122.

[2] M. Alam, H. A. Khan, M. Dey, N. Sinha, R. Callan, A. Zajic, and M. Prvulovic, “One&Done: A Single-Decryption EM-Based Attack on OpenSSL’s Constant-Time Blinded RSA,” in 27th USENIX Security Symposium (USENIX Security 18), 2018, pp. 585–602.

[3] R. Callan, A. Zajić, and M. Prvulovic, “FASE: Finding Amplitude-Modulated Side-Channel Emanations,” in Proceedings of the 42nd Annual International Symposium on Computer Architecture (ISCA), 2015, pp. 592–603.

[4] G. Camurati, S. Poeplau, M. Muench, T. Hayes, and A. Francillon, “Screaming Channels: When Electromagnetic Side Channels Meet Radio Transceivers,” in Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2018, pp. 163–177.

[5] X. Chen, Z. Xu, H. Kim, P. Gratz, J. Hu, M. Kishinevsky, and U. Ogras, “In-Network Monitoring and Control Policy for DVFS of CMP Networks-on-Chip and Last Level Caches,” ACM Transactions on Design Automation of Electronic Systems, vol. 18, no. 4, Oct. 2013.

[6] S. S. Clark, H. Mustafa, B. Ransford, J. Sorber, K. Fu, and W. Xu, “Current Events: Identifying Webpages by Tapping the Electrical Outlet,” in European Symposium on Research in Computer Security (ESORICS), 2013, pp. 700–717.

[7] Davidov, Mikhail and Oldenburg, Baron, “TEMPEST@Home - Finding Radio Frequency Side Channels,” https://duo.com/labs/research/finding-radio-sidechannels#section9, 2020.

[8] Q. Deng, D. Meisner, L. Ramos, T. F. Wenisch, and R. Bianchini, “Mem-Scale: Active Low-Power Modes for Main Memory,” in Proceedings of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2011, pp. 225–238.

[9] V. Dhakal, A. M. Feit, P. O. Kristensson, and A. Oulasvirta, “Observations on Typing from 136 Million Keystrokes,” in Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, 2018, pp. 1–12.

[10] M. Enev, S. Gupta, T. Kohno, and S. N. Patel, “Televisions, Video Privacy, and Powerline Electromagnetic Interference,” in Proceedings of the 18th ACM Conference on Computer and Communications Security (CCS), 2011, pp. 537–550.

[11] Y. Gao, H. Zhang, W. Cheng, Y. Zhou, and Y. Cao, “Electro-Magnetic Analysis of GPU-Based AES Implementation,” in Proceedings of the 55th Annual Design Automation Conference (DAC), 2018.

[12] D. Genkin, L. Pachmanov, I. Pipman, and E. Tromer, “Stealing Keys from PCs Using a Radio: Cheap Electromagnetic Attacks on Windowed Exponentiation,” in International Conference on Cryptographic Hardware and Embedded Systems (CHES), 2015, pp. 207–228.

[13] ——, “ECDH Key-Extraction via Low-Bandwidth Electromagnetic Attacks on PCs,” in Topics in Cryptology - CT-RSA 2016, 2016, pp. 219–235.

[14] D. Genkin, L. Pachmanov, I. Pipman, E. Tromer, and Y. Yarom, “ECDSA Key Extraction from Mobile Devices via Nonintrusive Physical Side Channels,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2016, pp. 1626–1638.

[15] D. Genkin, M. Pattani, R. Schuster, and E. Tromer, “Synesthesia: Detecting Screen Content via Remote Acoustic Side Channels,” in Proceedings of the 2019 IEEE Symposium on Security and Privacy (S&P), 2019, pp. 853–869.

[16] M. Guri, A. Kachlon, O. Hasson, G. Kedma, Y. Mirsky, and Y. Elovici, “GSMem: Data Exfiltration from Air-Gapped Computers over GSM Frequencies,” in 24th USENIX Security Symposium (USENIX Security 15), Aug. 2015, pp. 849–864.

[17] Y. Han, S. Etigowni, H. Liu, S. Zonouz, and A. Petropulu, “Watch Me, but Don’t Touch Me! Contactless Control Flow Monitoring via Electromagnetic Emanations,” in Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2017, pp. 1095–1108.

[18] K. B. Hardin, J. T. Fessler, and D. R. Bush, “Spread Spectrum Clock Generation for the Reduction of Radiated Emissions,” in Proceedings of IEEE Symposium on Electromagnetic Compatibility (EMC), 1994, pp. 227–231.

[19] S. Jana and V. Shmatikov, “Memento: Learning Secrets from Process Footprints,” in Proceedings of the 2012 IEEE Symposium on Security and Privacy (S&P), 2012, pp. 143–157.

[20] Z. H. Jiang, Y. Fei, and D. Kaeli, “A Complete Key Recovery Timing Attack on a GPU,” in 2016 IEEE International symposium on high performance computer architecture (HPCA), 2016, pp. 394–405.

[21] ——, “Exploiting Bank Conflict-Based Side-Channel Timing Leakage of GPUs,” ACM Transactions on Architecture and Code Optimization, vol. 16, no. 4, Nov. 2019.

[22] H. Kim, S. Lee, and J. Kim, “Inferring Browser Activity and Status through Remote Monitoring of Storage Usage,” in Proceedings of the 32nd Annual Conference on Computer Security Applications (ACSAC), 2016, pp. 410–421.

[23] W. Kim, M. S. Gupta, G.-Y. Wei, and D. Brooks, “System Level Analysis of Fast, Per-Core DVFS using On-Chip Switching Regulators,” in 2008 IEEE 14th International Symposium on High Performance Computer Architecture (HPCA), 2008, pp. 123–134.

[24] M. Kosaka, “Inside Look at Modern Web Browser.”

[25] M. G. Kuhn, “Electromagnetic Eavesdropping Risks of Flat-Panel Displays,” in Proceedings of the 4th International Conference on Privacy Enhancing Technologies (PETS), 2004, pp. 88–107.

[26] E. Ladakis, L. Koromilas, G. Vasiliadis, M. Polychronakis, and S. Ioannidis, “You Can Type, but You Can’t Hide: A Stealthy GPU-based Keylogger,” in Proceedings of the 6th European Workshop on System Security (EuroSec), 2013.

[27] S. Lee, Y. Kim, J. Kim, and J. Kim, “Stealing Webpages Rendered on Your Browser by Exploiting GPU Vulnerabilities,” in Proceedings of the 2014 IEEE Symposium on Security and Privacy (S&P), 2014, pp. 19–33.

[28] M. Lipp, D. Gruss, M. Schwarz, D. Bidner, C. Maurice, and S. Mangard, “Practical Keystroke Timing Attacks in Sandboxed JavaScript,” in European Symposium on Research in Computer Security (ESORICS), 2017, pp. 191–209.

[29] C. Luo, Y. Fei, and D. Kaeli, “Side-Channel Timing Attack of RSA on a GPU,” ACM Transactions on Architecture and Code Optimization, vol. 16, no. 3, Aug. 2019.

[30] C. Luo, Y. Fei, P. Luo, S. Mukherjee, and D. Kaeli, “Side-Channel Power Analysis of a GPU AES Implementation,” in Proceedings of the 2015 33rd IEEE International Conference on Computer Design (ICCD), 2015, pp. 281–288.

[31] K. Ma, X. Li, W. Chen, C. Zhang, and X. Wang, “GreenGPU: A Holistic Approach to Energy Efficiency in GPU-CPU Heterogeneous Architectures,” in Proceedings of the 2012 41st International Conference on Parallel Processing (ICPP), 2012, pp. 48–57.

[32] N. Matyunin, Y. Wang, T. Arul, K. Kullmann, J. Szefer, and S. Katzenbeisser, “MagneticSpy: Exploiting Magnetometer in Mobile Devices for Website and Application Fingerprinting,” in Proceedings of the 18th ACM Workshop on Privacy in the Electronic Society (WPES), 2019, pp. 135–149.

[33] C. Maurice, C. Neumann, O. Heen, and A. Francillon, “Confidentiality Issues on a GPU in a Virtualized Environment,” in International Conference on Financial Cryptography and Data Security (FC), 2014, pp. 119–135.

[34] X. Mei, L. S. Yung, K. Zhao, and X. Chu, “A Measurement Study of GPU DVFS on Energy Conservation,” in Proceedings of the Workshop on Power-Aware Computing and Systems (HotPower), 2013.

[35] Micron Technology, Inc., “GDDR5 SGRAM Introduction.”

[36] ——, “GDDR6: The Next-Generation Graphics DRAM.”

[37] A. K. Mishra, R. Das, S. Eachempati, R. Iyer, N. Vijaykrishnan, and C. R. Das, “A Case for Dynamic Frequency Tuning in On-Chip Networks,” in 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO), 2009, pp. 292–303.

[38] A. Miyoshi, C. Lefurgy, E. Van Hensbergen, R. Rajamony, and R. Rajkumar, “Critical Power Slope: Understanding the Runtime Effects of Frequency Scaling,” in Proceedings of the 16th International Conference on Supercomputing (ICS), 2002, pp. 35–44.

[39] J. V. Monaco, “SoK: Keylogging Side Channels,” in Proceedings of the 2018 IEEE Symposium on Security and Privacy (S&P), 2018, pp. 211–228.

[40] H. Naghibijouybari, K. N. Khasawneh, and N. Abu-Ghazaleh, “Constructing and Characterizing Covert Channels on GPGPUs,” in Proceedings of the 50th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO), 2017, pp. 354–366.

[41] H. Naghibijouybari, A. Neupane, Z. Qian, and N. Abu-Ghazaleh, “Rendered Insecure: GPU Side Channel Attacks Are Practical,” in Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security (CCS), 2018, pp. 2139–2153.