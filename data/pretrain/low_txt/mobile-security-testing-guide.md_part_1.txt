# Table of Contents
1. Introduction
   1.1 Changelog
   1.2 Frontispiece
2. Overview
   2.1 Introduction to the Mobile Security Testing Guide
   2.2 Mobile App Taxonomy
   2.3 Mobile App Security Testing
3. General Mobile App Testing Guide
   3.1 Mobile App Authentication Architectures
   3.2 Testing Network Communication
   3.3 Cryptography in Mobile Apps
   3.4 Testing Code Quality
   3.5 Tampering and Reverse Engineering
   3.6 Testing User Education
4. Android Testing Guide
   4.1 Platform Overview
   4.2 Setting up a Testing Environment for Android Apps
   4.3 Data Storage on Android
   4.4 Android Cryptographic APIs
   4.5 Local Authentication on Android
   4.6 Android Network APIs
   4.7 Android Platform APIs
   4.8 Code Quality and Build Settings for Android Apps
   4.9 Tampering and Reverse Engineering on Android
   4.10 Android Anti-Reversing Defenses
5. iOS Testing Guide
   5.1 Platform Overview
   5.2 Setting up a Testing Environment for iOS Apps
   5.3 Data Storage on iOS
   5.4 iOS Cryptographic APIs
   5.5 Local Authentication on iOS
   5.6 iOS Network APIs
   5.7 iOS Platform APIs
   5.8 Code Quality and Build Settings for iOS Apps
   5.9 Tampering and Reverse Engineering on iOS
   5.10 iOS Anti-Reversing Defenses
6. Appendix
   6.1 Testing Tools
   6.2 Suggested Reading

## Introduction
### Foreword
Welcome to the OWASP Mobile Security Testing Guide (MSTG). This guide is an open, agile, and crowd-sourced effort, with contributions from authors and reviewers worldwide. It aims to provide a comprehensive manual for testing the security of mobile applications, aligning with the requirements of the Mobile Application Security Verification Standard (MASVS).

The MSTG is not a conventional security book. Instead of listing impressive facts or detailing the broken state of mobile application security, it focuses on providing practical, actionable guidance. The first rule of the MSTG is: "Don't just follow the OWASP Mobile Security Testing Guide." True excellence in mobile application security requires a deep understanding of mobile operating systems, coding, network security, cryptography, and more. We encourage you to write your own apps, compile your own kernels, dissect mobile malware, and learn how things work. As you gain new knowledge, consider contributing to the MSTG.

## Changelog
### Changelog
This document was last updated on August 5, 2019, at 05:46 GMT+0200 (Central European Summer Time).

#### v1.1.3 - August 2, 2019
- Updated Acknowledgments, adding two new co-authors.
- Translated various parts into Japanese.
- Restructured general testing, platform-specific testing, and reverse-engineering chapters.
- Updated descriptions of many tools, including Adb, Angr, APK Extractor, Apkx, Burp Suite, Drozer, ClassDump, Clutch, Frida, Hopper, Ghidra, IDB, Ipa Installer, iFunBox, iOS-deploy, KeychainDumper, Mobile-Security-Framework, Nathan, Needle, Objection, Magisk, PassionFruit, Radare 2, Tableplus, Socket CAT, Xposed, and others.
- Updated most iOS hacking/verification techniques using iOS 12 or 11 as a base instead of iOS 9/10.
- Removed outdated tools such as introspy-Android and AndBug.
- Added missing MASVS references from version 1.1.4.
- Rewrote device-binding explanation and test cases for Android.
- Added sections on testing unmanaged code in Objective-C, Java, and C/C++.
- Applied numerous spelling, punctuation, and style-related fixes.
- Updated many cryptography-related parts.
- Added test cases for upgrade-mechanism verification for apps.
- Updated Readme, Code of Conduct, Contribution guidelines, verification, funding link, and generation scripts.
- Added ISBN as the book is now available at Hulu.
- Added various fixes for the .epub format.
- Added test cases on Android and iOS backup verification.
- Improved key-attestation related explanation for Android.
- Restructured OWASP Mobile Wiki.
- Removed Yahoo Weather app and simplified reference on using SQL injection.
- Improved explanation for iOS app sideloading to include various available methods.
- Added explanations on using ADB and device shell for Android and iOS.
- Provided comparison for using emulators/simulators and real devices for iOS/Android.
- Fixed Uncrackable Level 3 for Android.
- Improved explanation on how to exfiltrate data and apps on iOS 12 and Android 8.
- Improved/updated explanation on SSL-pinning.
- Added a list of adopters of the MASVS/MSTG.
- Updated English, Japanese, French, and Spanish checklists to be compatible with MSTG 1.1.2.
- Added a small write-up on Adiantum for Google.
- Added MSTG-ID to the paragraphs to create a link between MSTG paragraphs and MASVS requirements.
- Added review criteria for Android instant apps and guidance for app-bundle evaluation.
- Clarified the differences between various methods of dynamic analysis.

#### v1.1.2 - May 12, 2019
- Added missing mappings for MASVS V1.X.
- Updated markdown throughout the English MSTG for consistency.
- Replaced some dead links.
- Made improvements for rendering as a book, including the ISBN number.
- Updated the Excel checklist, now available in Japanese.
- Resolved many punctuation, spelling, and grammar issues.
- Added a missing iOS test case regarding memory corruption issues.
- Added contributing, code of conduct, markdown linting, and dead link detection.

#### v1.1.1 - May 7, 2019
- Improved various tool-related parts, such as using on-device console, adb, nscurl, Frida, and Needle.
- Updated section 0x4e regarding SMS communication.
- Made numerous grammar and style updates.
- Added an Android description regarding MASVS requirement 7.8.
- Updated the contributor list.
- Updated instructions on TLS and encryption.
- Removed erroneous information.
- Fixed alignment of MASVS requirements with the MSTG.
- Updated information on jailbreaking and network interception on both iOS and Android.
- Added steps for Frida detection.
- Added write-ups on Android changes, including permissions, application signing, device identifiers, key attestation, and more.
- Extended guidance on SafetyNet attestation.
- Added information on Magisk.
- Added Firebase misconfiguration information.
- Added references to more testing tools.
- Updated the contributor list.
- Added extensive information to iOS platform testing.
- Added numerous fixes for the book release.

#### v1.1.0 - November 30, 2018
- Added more samples in Kotlin.
- Simplified Leanpub and GitBook publishing.
- Made numerous QA improvements.
- Added deserialization test cases for iOS, including input sanitization.
- Added test cases regarding device-access-security policies and data storage on iOS.
- Added test cases regarding session invalidation.
- Improved cryptography and key management test cases on both Android and iOS.
- Started adding updates in the test cases introduced by Android Oreo and Android Pie.
- Refreshed the Testing Tools section, removing lesser-maintained tools and adding new ones.
- Fixed some markdown issues.
- Updated license to CC 4.0.
- Started Japanese translation.
- Updated references to OWASP Mobile Top 10.
- Updated Android Crackmes.
- Fixed some anti-reverse-engineering test cases.
- Added a debugging test case for iOS.

#### v1.0.2 - October 13, 2018
- Updated guiding documentation (README).
- Improved automated build of the PDF, EPUB, and MOBI formats.
- Updated Frontispiece (given new contributor stats).
- Added attack surface sections for Android and other platforms.
- Added vulnerable apps for testing skills.
- Improved sections for testing app permissions for Android (given Android Oreo/Pie), added section for testing permissions on iOS.
- Added a fix for Fragment Injection on older Android versions.
- Improved sections on iOS WebView-related testing.

#### v1.0.1 - September 17, 2018
- Updated guiding documentation (README, PR templates, improved style guide, issue templates).
- Added automated build of the PDF and DocX.
- Updated Frontispiece (given new contributor stats).
- Updated Crackmes and guiding documentation.
- Updated tooling commands (adb, ABE, iMazing, Needle, IPAinstaller, etc.).
- Added first Russian translations of the 1.0 documents for iOS.
- Improved URLs for GitBook using goo.gl in case of URLs with odd syntax.
- Updated Frontispiece to give credit to all contributors.
- Clarified the app taxonomy & security testing sections by a rewrite.
- Added sections for network testing, certificate verification & SSL pinning for Cordova, WebView, Xamarin, React-Native, and updated the public key pinning sections.
- Removed no longer working guides (e.g., using iTunes to install apps).
- Updated many URLs (using TLS wherever possible).
- Updated tests regarding WebViews.
- Added new testing tool suites in the tools section, such as the mobile hack tools and various dependency checkers.
- Updated test cases regarding protocol handlers (added missing MASVS 6.6 for iOS).
- Made many small updates in terms of wording, spelling/typos, updated code segments, and grammar.
- Added missing test cases for MASVS 2.11, 4.7, 7.5, and 4.11.
- Updated the XLS Checklist given MASVS 1.1.0.
- Removed the clipboard test from iOS and Android.
- Removed duplicates on local storage testing and updated data storage test cases.
- Added write-ups from the mobile security sessions at the OWASP summit.
- Added anti-debugging bypass section for iOS.
- Added SQL injection & XML injection samples and improved mitigation documentation.
- Added Needle documentation for iOS.
- Added fragment injection documentation.
- Updated IPA installation process guidance.
- Added XSS sample for Android.
- Added improved documentation for certificate installation on Android devices.
- Updated Frida & Fridump related documentation.
- Added sections about in-memory data analysis in iOS.
- Updated software development and related supporting documentation.
- Updated (anti) reverse-engineering sections for Android and iOS.
- Updated data storage chapters given newer tooling.
- Merged SDLC and security testing chapters.
- Updated cryptography and key-management testing sections for both Android and iOS (up to Android Nougat/iOS 11).
- Updated general overview chapters for Android and iOS.
- Updated Android and iOS IPC testing.
- Added missing overviews, references, etc., to various sections such as 0x6i.
- Updated local authentication chapters and the authentication & session management chapters.
- Updated test cases for sensitive data in memory.
- Added code quality sections.

#### v1.0 - June 15, 2018 (First Release)

## Frontispiece
### About the OWASP Mobile Security Testing Guide
The OWASP Mobile Security Testing Guide (MSTG) is a comprehensive manual for testing the security of mobile applications. It describes processes and techniques for verifying the requirements listed in the Mobile Application Security Verification Standard (MASVS) and provides a baseline for complete and consistent security tests.

OWASP thanks the many authors, reviewers, and editors for their hard work in developing this guide. If you have any comments or suggestions on the Mobile Security Testing Guide, please join the discussion around MASVS and MSTG in the OWASP Mobile Security Project Slack Channel. You can sign up for the Slack channel yourself using this invite. (Please open a PR if the invite has expired.)

### Copyright and License
Copyright © 2018 The OWASP Foundation. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. For any reuse or distribution, you must make clear to others the license terms of this work.

### ISBN
Our ISBN Number is 978-0-359-47489-9.

### Acknowledgments
Note: This contributor table is generated based on our GitHub contribution statistics. For more information on these stats, see the GitHub Repository README. We manually update the table, so be patient if you're not listed immediately.

#### Authors
- **Bernhard Mueller**
  Bernhard is a cyber security specialist with a talent for hacking systems of all kinds. During more than a decade in the industry, he has published many zero-day exploits for software such as MS SQL Server, Adobe Flash Player, IBM Director, Cisco VOIP, and ModSecurity. He has been recognized with a Pwnie Award for Best Research at BlackHat USA for his pioneering work in mobile security.

- **Sven Schleier**
  Sven is an experienced web and mobile penetration tester who has assessed everything from historic Flash applications to progressive mobile apps. He is also a security engineer who has supported many projects end-to-end during the SDLC to "build security in." He speaks at local and international meetups and conferences and conducts hands-on workshops about web application and mobile app security.

- **Jeroen Willemsen**
  Jeroen is a principal security architect at Xebia with a passion for mobile security and risk management. He has supported companies as a security coach, a security engineer, and a full-stack developer, making him a jack of all trades. He loves explaining technical subjects, from security issues to programming challenges.

#### Co-Authors
Co-authors have consistently contributed quality content and have at least 2,000 additions logged in the GitHub repository.
- **Carlos Holguera**
  Carlos is a security engineer leading the mobile penetration testing team at ESCRYPT. He has gained many years of hands-on experience in the field of security testing for mobile apps and embedded systems such as automotive control units and IoT devices. He is passionate about reverse engineering and dynamic instrumentation of mobile apps and is continuously learning and sharing his knowledge.

- **Romuald Szkudlarek**
  Romuald is a passionate cyber security & privacy professional with over 15 years of experience in the web, mobile, IoT, and cloud domains. During his career, he has dedicated his spare time to a variety of projects aimed at advancing the sectors of software and security. He teaches regularly at various institutions and holds CISSP, CCSP, CSSLP, and CEH credentials.

- **Jeroen Beckers**
  Jeroen is the mobile security lead at NVISO, where he is responsible for quality assurance on mobile security projects and R&D on all things mobile. He worked as a Flash developer during high school and college but switched to a career in cybersecurity upon graduation. With more than 5 years of experience in mobile security, he loves sharing his knowledge through talks and trainings at colleges, universities, clients, and conferences.

#### Top Contributors
Top contributors have consistently contributed quality content and have at least 500 additions logged in the GitHub repository.
- **Pawel Rzepa**
- **Francesco Stillavato**
- **Henry Hoggard**
- **Andreas Happe**