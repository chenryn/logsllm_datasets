# Diving into DNS Delegation Inconsistency

## 4.4 Mixed NSSets (Rest)

In Table 1, we observed that in 11% of cases, the NSSet (Name Server Set) of the parent and child do not have a subset/superset relationship. Instead, some elements are present in both, but both parent and child have at least one NS (Name Server) that is not available in the other. To simulate this scenario, as shown in Table 2, we set four NS records at the parent: [ns1, ns2, ns3, ns4]. At the child, we set [ns2, ns4, ns5, ns6], where the highlighted names show the ones not shared.

### Experiment Results

- **Figure 6a** shows the results for normal responses. We observe that [ns2, ns4], which are listed at both parent and child, receive the most queries. Next, records set only at the parent ([ns1, ns3]) receive a moderate number of queries. Finally, records set only at the child ([ns5, ns6]) receive the least amount of queries.
- **Figure 6b** shows the results for minimal responses. The name servers only present at the child ([ns5, ns6]) receive virtually no traffic.

These measurements confirm that including "authority data" in the authoritative server responses will cause some resolvers to prefer only the child authoritative servers.

## 5 Resolver Software Evaluation

The experiments in Section 3 evaluated DNS resolver behavior in the wild using RIPE Atlas. However, we did not know the specific resolver software, whether probes used DNS forwarders, or what cache policies they employed. We observed the aggregated behavior among a large set of configurations.

In this section, we focus on evaluating specific DNS resolver software in a controlled environment to understand how they behave towards DNS zones with inconsistent parent/child NSSets. Our goal is to identify which vendors conform to the standards, particularly RFC2181, which specifies how resolvers should rank data in case of inconsistency: child authoritative data should be preferred.

### Vendors and Versions Evaluated

We evaluate four popular DNS resolver implementations: BIND, Unbound, Knot, and PowerDNS, using default packages and configurations under popular Linux server distributions. Additionally, we evaluate resolvers shipped with various Windows server releases. Table 3 lists the vendors and versions evaluated.

### Experiments

- **Configuration**: We configure the authoritative name servers for our test domain (marigliano.xyz) as a disjoint NSSet. The parent zone is configured with [ns1, ns3].marigliano.xyz, and the child with [ns2, ns4].marigliano.xyz.
- **Tests**:
  - **(i) A Query**: Request an A record of a subdomain in our test zone.
  - **(ii) NS Query**: Request the NS record of the zone.
  - **(iii) A Query Then NS Query**: Send an A query followed by an NS query to understand if resolvers use non-authoritative cached NS information.
  - **(iv) NS Query Then A Query**: Invert the order to understand if authoritative records are overwritten by non-authoritative ones in the cache.

### Expected Behavior

Table 4 outlines the expected NS usage by the resolvers if they conform to the RFCs.

### Results

- **Conformity**: Out of 22 resolvers/vendors evaluated, 13 conform to the RFCs.
- **Non-conforming Resolvers**:
  - **BIND (Ubuntu)**: Caches only information from the parent and does not override it with information from the authoritative section provided by the child.
  - **BIND (Source)**: Sends an explicit NS query before performing the A query, but caches data from the parent.
  - **PowerDNS (CentOS 6, Ubuntu Xenial, Windows)**: Uses cached non-authoritative information to answer the NS query in the test, not conforming to RFC2181.

### Notifications

- **BIND Developers**: We are notifying them about the issue.
- **PowerDNS Developers**: Confirmed the behavior and will not backport the fix due to low severity. We recommend updating to a newer version.

## 6 Conclusions and Recommendations

- **Consistency**: The NSSet in the parent and child DNS zones should be consistent. This study shows that roughly 8% (13M) domains do not conform to this.
- **Behavior**: DNS resolvers in the wild differ in behavior in returning information from the parent or child.
- **Consequences**: Inconsistency can lead to improper load balancing, increased resolution latency, and unresponsive name servers.
- **Recommendations**:
  - Operators should verify their zones and follow RFC1034.
  - Consider supporting CSYNC DNS records (RFC7477) or other automated consistency checks.
  - Resolver vendors should conform to the authoritative information ranking in RFC2181 and, when possible, explicitly ask for the child’s NS records.

## Acknowledgments

We thank John Heidemann, Ólafur Guðmundsson, and Ülrich Wisser for feedback. We also thank the PAM2020 anonymous reviewers, our shepherd, Steve Uhlig, and Philip Homburg from RIPE NCC. This work uses measurements from RIPE Atlas, an open measurement platform operated by RIPE NCC.

This work is partially funded by the NWO-DHS MADDVIPR project, the PANDA project, and the EU CONCORDIA project. The U.S. Government is authorized to reproduce and distribute reprints for governmental purposes. The views and conclusions in this paper are those of the authors and do not necessarily reflect the opinions of a sponsor, Air Force Research Laboratory, or the U.S. Government.

## A Longitudinal View on Inconsistency

### A.1 NS Inconsistency over Time

- **Analysis**: We analyzed NS inconsistency for the case P ≠ C over a two-and-a-half-year period preceding the date of the analysis presented in Table 1.
- **Results**: Figure 7 shows that the fraction of domains affected by this misconfiguration remains similar over time, suggesting that NS inconsistency is a long-term issue in the DNS ecosystem.

## References

1. Almond, C.: CNAME at the apex of a zone. https://www.isc.org/blogs/cname-at-the-apex-of-a-zone/
2. CZ.NIC: Knot Resolver. https://www.knot-resolver.cz
3. DENIC AG: Statistics of .de domains, 22 October 2019. https://www.denic.de/en/know-how/statistics/l
4. DNS OARC: Root zone archive. https://www.dns-oarc.net/oarc/data/zfr/root
5. Elz, R., Bush, R.: Clarifications to the DNS specification. RFC 2181, IETF, July 1997. http://tools.ietf.org/rfc/rfc2181.txt
6. Hardaker, W.: Child-to-parent synchronization in DNS. RFC 7477, IETF, March 2015. http://tools.ietf.org/rfc/rfc7477.txt
7. Hoffman, P., Sullivan, A., Fujiwara, K.: DNS terminology. RFC 8499, IETF, November 2018. http://tools.ietf.org/rfc/rfc8499.txt
8. Hubert, A., Mook, R.: Measures for making DNS more resilient against forged answers. RFC 5452, IETF, January 2009. http://tools.ietf.org/rfc/rfc5452.txt
9. Internet Systems Consortium: BIND: Berkeley Internet Name Domain. https://www.isc.org/bind/
10. Kristoﬀ, J.: DNS inconsistency (2018). https://blog.apnic.net/2018/08/29/dns-inconsistency/
11. Liu, D., Hao, S., Wang, H.: All your DNS records point to us: understanding the security threats of dangling DNS records. In: Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, CCS 2016, pp. 1414–1425. ACM, New York (2016). https://doi.org/10.1145/2976749.2978387
12. Mockapetris, P.: Domain names - concepts and facilities. RFC 1034, IETF, November 1987. http://tools.ietf.org/rfc/rfc1034.txt
13. Moura, G.C.M., Heidemann, J., Müller, M., de Schmidt, R.O., Davids, M.: When the dike breaks: dissecting DNS defenses during DDoS. In: Proceedings of the ACM Internet Measurement Conference, October 2018. https://doi.org/10.1145/3278532.3278534
14. Moura, G.C.M., Heidemann, J., de Schmidt, R.O., Hardaker, W.: Cache me if you can: effects of DNS time-to-live (extended). In: Proceedings of the ACM Internet Measurement Conference. ACM, Amsterdam, October 2019. https://doi.org/10.1145/3355369.3355568. p. to appear
15. Müller, M., Moura, G.C.M., de Schmidt, R.O., Heidemann, J.: Recursives in the wild: engineering authoritative DNS servers. In: Proceedings of the ACM Internet Measurement Conference, London, UK, pp. 489–495 (2017). https://doi.org/10.1145/3131365.3131366
16. NLnet Labs: Unbound, March 2019. https://unbound.net/
17. Pappas, V., Wessels, D., Massey, D., Lu, S., Terzis, A., Zhang, L.: Impact of configuration errors on DNS robustness. IEEE J. Sel. Areas Commun. 27(3), 275–290 (2009)
18. PowerDNS: PowerDNS Recursor. https://www.powerdns.com/recursor.html
19. van Rijswijk-Deij, R., Sperotto, A., Pras, A.: DNSSEC and its potential for DDoS attacks: a comprehensive measurement study. In: Proceedings of the 2014 ACM Conference on Internet Measurement Conference, IMC, pp. 449–460. ACM, November 2014
20. RIPE Ncc Staff: RIPE Atlas: a global internet measurement network. Internet Protocol J. (IPJ) 18(3), 2–26 (2015)
21. RIPE Network Coordination Centre: RIPE Atlas (2015). https://atlas.ripe.net
22. Root Zone file: Root, February 2019. http://www.internic.net/domain/root.zone
23. van Rijswijk-Deij, R., Jonker, M., Sperotto, A., Pras, A.: A high-performance, scalable infrastructure for large-scale active DNS measurements. IEEE J. Sel. Areas Commun. 34(6), 1877–1888 (2016). https://doi.org/10.1109/JSAC.2016.2558918