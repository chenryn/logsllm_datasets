### Backtrace from HTTP.jl Travis Run

**Test Configuration:**
- Running asynchronous test 1 with 100 iterations.
- Parameters: `verbose` set to 0, using `http` client.

**Log Output:**
- **Info:** Connection accepted (1): 
  - Local Address: `127.0.0.1:8081`
  - Remote Address: `127.0.0.1:8081`
  - Duration: 0 seconds
  - Data Transferred: 0 bytes up, 0 bytes down
- **Info:** Connection closed (1):
  - Local Address: `127.0.0.1:8081`
  - Remote Address: `127.0.0.1:8081`
  - Duration: 0 seconds
  - Data Transferred: 0 bytes up, 0 bytes down
  - Socket state: Closed and locked

**Error Details:**
- **Signal (11):** Segmentation fault
- **File:** `/Users/travis/build/JuliaWeb/HTTP.jl/test/async.jl`
- **Line:** 189

**Call Stack:**
- `uv_tcp_getsockname` in `libuv` at `/Users/osx/buildbot/slave/package_osx64/build/deps/srccache/libuv-ed3700c849289ed01fe04273a7bf865340b2bd7e/src/unix/tcp.c:222`
- `jl_tcp_getsockname` in `jl_uv.c` at `/Users/osx/buildbot/slave/package_osx64/build/src/jl_uv.c:647`
- `_sockname` in `Sockets.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Sockets/src/Sockets.jl:601`
- `getsockname` in `Sockets.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Sockets/src/Sockets.jl:584`
- `getsockname` in `Streams.jl` at `/Users/travis/build/JuliaWeb/HTTP.jl/src/Streams.jl:59`
- Macro expansion in `show.jl` at `./show.jl:555`
- Test function `#109` in `async.jl` at `/Users/travis/build/JuliaWeb/HTTP.jl/test/async.jl:17`
- `handle_stream` in `Servers.jl` at `/Users/travis/build/JuliaWeb/HTTP.jl/src/Servers.jl:481`
- Task creation in `task.jl` at `./task.jl:259`
- `jl_apply` in `julia.h` at `/Users/osx/buildbot/slave/package_osx64/build/src/./julia.h:1558`
- `start_task` in `task.c` at `/Users/osx/buildbot/slave/package_osx64/build/src/task.c:271`

**Memory Allocations:**
- Total: 88,437,210
  - Pool: 88,416,323
  - Big: 20,887
- Garbage Collection: 198

**Error Message:**
- **ERROR:** Package `HTTP` encountered an error during testing.

**Stack Trace:**
- `pkgerror` in `Types.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Pkg/src/Types.jl:120`
- Macro expansion in `logging.jl` at `./logging.jl:313`
- `#test#61` in `Operations.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Pkg/src/Operations.jl:1284`
- `#test` in `API.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Pkg/src/API.jl:267`
- `#test#42` in `API.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Pkg/src/API.jl:250`
- `#test#38` in `API.jl` at `/Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/Pkg/src/API.jl:247`
- `top-level scope` at `none:1`

**Observation:**
- The documentation for `jl_tcp_getsockname` in `Sockets.jl` states that it is only valid for connected sockets. It appears that the `HTTP.jl` tests may have encountered a situation where this was not the case, leading to the segmentation fault. This error occurred in one out of four builds for a single pull request.

**Suggestion:**
- Consider adding an assertion around the call to `jl_tcp_getsockname` in `Sockets.jl` to ensure that the socket is connected before attempting to get its name. This could help prevent similar errors in the future.