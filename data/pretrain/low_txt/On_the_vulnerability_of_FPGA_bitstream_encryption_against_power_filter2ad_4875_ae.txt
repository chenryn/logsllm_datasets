### Recovery of the Full Secret Key of 3DES

This paper describes methods to recover the keys used for bitstream encryption on FPGAs with modest effort, taking less than one hour using measurements from a single configuration process. Once the key is recovered, an attacker can decrypt the protected bitstream from a Virtex-II Pro FPGA, gaining access to its complete content. This allows the attacker to clone the original FPGA by configuring an empty device with the extracted bitstream, even without using the encryption feature. This could be used, for example, to replicate a competitor's product.

Additionally, reverse-engineering the internal wiring of the FPGA from the bitstream enables the analysis and extraction of internal secrets, which can be used for malicious purposes. The stolen design could be improved and disguised as a new product, potentially outperforming the original. While Xilinx attempts to maintain security through obscurity by keeping the exact mapping of the bitstream to the internal circuitry confidential, there are already methods to recover the original design from a bitstream [24, 30].

In a security-critical environment, reprogramming the attacked FPGA with maliciously modified code, such as to cause malfunction or to implement a hardware trojan [21], is a particularly damaging option. Below, we illustrate possible implications of our attacks using two examples from the commercial sector, without naming specific manufacturers.

### Real-World Example 1: Set-Top Box

Set-top boxes are widely used for receiving digital TV and radio programs, pay-per-view special events, subscription-based movie viewing, and video on demand. These devices often use FPGAs with bitstream encryption to handle computationally intensive tasks such as demodulating and decompressing algorithms for descrambling transmitted content. The secure bitstream encryption feature allows for regular firmware updates and improvements without disclosing proprietary encryption schemes or secret keys to potential attackers.

Our key-recovery attack poses a significant risk to set-top boxes that rely on FPGAs using bitstream encryption. An attacker who extracts the firmware can gain access to all digital content without paying, circumventing the business models. A criminal can make substantial financial gains (and cause significant financial losses for the service provider) by producing new set-top boxes or modifying existing ones to enable free usage of the services.

### Real-World Example 2: Router

Network routers, which redirect data traffic at high speeds in local networks and often serve as the interface to the Internet for companies, government agencies, and private households, frequently incorporate FPGAs. These FPGAs often perform security-relevant functions such as firewalls. In case of a bug or if a security fix is required, some routers can be updated remotely, relying on bitstream encryption for this functionality.

If a router based on a Virtex-II Pro FPGA is accessed physically, an attacker can perform our key-recovery attack. From there, the attacker can remotely initiate firmware updates to modify the router's functionality according to their demands. This could include denial-of-service attacks, aimed at causing malfunction or destruction, or more insidious actions like opening a covert channel to spy on and access data from internally connected computers and other devices. Users typically have no means to verify whether their firmware has been tampered with, making a modified firmware a severe threat to privacy, security, and safety.

### Scope of Our Findings

As university researchers, we aim to inform about potential vulnerabilities in bitstream encryption and warn end-users of products incorporating this feature. Our findings suggest that there can be severe real-world implications, depending on the commercial devices in which Virtex-II Pro FPGAs are used. It is highly likely that determined attackers, such as foreign intelligence services, are already capable of extracting and altering FPGA designs using power analysis techniques. Since the success of a power analysis attack does not depend on the cipher employed, similar attacks can be applied to newer generations of FPGAs from different manufacturers, such as the Virtex 4 family or Altera products using AES-256 [7, 29].

### Conclusion

We presented the first known attacks targeting the bitstream encryption of FPGAs. By profiling the power consumption of the target FPGA, we reverse-engineered the security feature and identified the time instant when the decryption of the ciphertext blocks of the bitstream is performed. We identified the appropriate power model for attacking the triple DES engine and deduced the internal architecture of the hardware. Our proposed techniques for digital signal processing of power measurements enable a highly efficient power analysis attack, allowing the full secret key of the triple DES to be extracted in only 3 minutes of computation time from just 25,000 measurements, obtainable with a single boot-up of the device. Our findings indicate that these attacks are possible using a low-cost oscilloscope with a sample rate as little as 100 MS/s.

We successfully demonstrated our attack on the bitstream decryption of a Virtex-II Pro XC2CP7 FPGA manufactured by Xilinx. We were able to recover all three different keys used by its triple DES module from a single power-up of the device in a real-world scenario. The lithium battery for key storage, which Xilinx claims provides extra security, does not need to be removed for the attack. It is highly conceivable that similar attacks can be applied to other series of FPGAs from other manufacturers.

Besides the obscurity resulting from Xilinx keeping the details of their bitstream files secret, we encountered no countermeasures against side-channel analysis. This is alarming given the protection of many deployed devices. An attacker knowing the secret key used for bitstream encryption can obtain all secrets and intellectual property contained in commercial products, such as proprietary encryption schemes or processing algorithms. As a result of our attacks, cloning of products protected by the bitstream encryption scheme becomes straightforward. After reverse engineering the content of the FPGA from the bitstream, improved products could be marketed by a competitor, potentially outperforming the original. Furthermore, the content of commercial products can be remotely updated with maliciously modified firmware, posing a severe threat to the reliability of the products, the privacy of individuals and companies, and enabling the infection of devices with embedded malware.

### References

[1] Defense Science Board. http://www.acq.osd.mil/dsb/.

[2] Side-channel Attack Standard Evaluation Board (SASEBO). Further information available via http://www.rcis.aist.go.jp/special/SASEBO/.

[3] Xilinx ISE Design Suite. http://www.xilinx.com/tools/designtools.htm.

[4] IEEE Standard Test Access Port and Boundary-Scan Architecture. IEEE Std 1149.1-2001, pages i –200, 2001.

[5] D. Abraham, G. Dolan, G. Double, and J. Stevens. Transaction Security System. IBM Systems Journal 30, pages 206–229, 1991.

[6] G. Agosta, A. Barenghi, F. D. Santis, and G. Pelosi. Record Setting Software Implementation of DES Using CUDA. Information Technology: New Generations, Third International Conference on, pages 748–755, 2010.

[7] ALTERA. Using the Design Security Feature in Stratix II and Stratix II GX Devices (AN 341 version 2.3). Technical report, August 2009. http://www.altera.com/literature/an/an341.pdf.

[8] ATK. XM25 Counter Defilade Target Engagement System. http://www.atk.com/customer_solutions_missionsystems/documents/sw_iw_xm25.pdf, May 2009. Post “FPGAs in interesting places – the XM25 Airburst Weapon System” by Saar Drimer on www.fpgasecurity.com.

[9] A. Barenghi, G. Pelosi, and Y. Teglia. Improving First Order Differential Power Attacks Through Digital Signal Processing. In ACM-SIGSAC International Conference on Security of Information and Networks, pages 124–133. ACM, 2010.

[10] A. Barenghi, G. Pelosi, and Y. Teglia. Information Leakage Discovery Techniques to Enhance Secure Chip Design. In C. A. Ardagna and J. Zhou, editors, WISTP, volume 6633 of Lecture Notes in Computer Science, pages 128–143. Springer, 2011.

[11] E. Brier, C. Clavier, and F. Olivier. Correlation Power Analysis with a Leakage Model. In CHES 2004, volume 3156 of LNCS, pages 16–29. Springer, 2004.

[12] W. J. Broad, J. Markoff, and D. E. Sanger. Israeli Test on Worm Called Crucial in Iran Nuclear Delay. Technical report, New York Times, January 2011. http://www.nytimes.com/2011/01/16/world/middleeast/16stuxnet.html.

[13] O. Coudert. Why FPGA Startups Keep Failing, 2009. FPGA market shares according to Gartner Inc, 2008.

[14] S. Drimer. Security for Volatile FPGAs. Technical Report UCAM-CL-TR-763, University of Cambridge, Computer Laboratory, November 2009. ISSN 1476-2986. http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-763.pdf.

[15] T. Eisenbarth, T. Kasper, A. Moradi, C. Paar, M. Salmasizadeh, and M. T. M. Shalmani. On the Power of Power Analysis in the Real World: A Complete Break of the KeeLoq Code Hopping Scheme. In CRYPTO 2008, volume 5157 of LNCS, pages 203–220. Springer.

[16] Eric Peeters, François-Xavier Standaert, and Jean-Jacques Quisquater. Power and Electromagnetic Analysis: Improved Model, Consequences, and Comparisons. Integr. VLSI J., 40(1):52–60, 2007.

[17] T. Güneysu, T. Kasper, M. Novotný, C. Paar, and A. Rupp. Cryptanalysis with COPACOBANA. IEEE Transactions on Computers, 57(11):1498–1513, 2008.

[18] P. Kocher, J. Jaffe, and B. Jun. Differential Power Analysis. In CRYPTO 99, volume 1666 of LNCS, pages 388–397. Springer, 1999.

[19] R. Krueger. Application Note XAPP766: Using High Security Features in Virtex-II Series FPGAs. Technical report, XILINX, 2004. http://www.xilinx.com/support/documentation/application_notes/xapp766.pdf.

[20] A. Lesea. IP Security in FPGAs, White Paper WP 261. Technical report, XILINX, February 2007.

[21] L. Lin, M. Kasper, T. Güneysu, C. Paar, and W. Burleson. Trojan Side-Channels: Lightweight Hardware Trojans through Side-Channel Engineering.