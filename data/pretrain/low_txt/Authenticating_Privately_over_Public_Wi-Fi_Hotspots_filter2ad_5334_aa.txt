# Title: Authenticating Privately over Public Wi-Fi Hotspots

## Authors:
- **Aldo Cassola**
  - Northeastern University
  - Universidad San Francisco de Quito, Quito, Ecuador
  - Email: [PI:EMAIL]
- **Erik-Oliver Blass**
  - Airbus Group Innovations, Munich, Germany
  - Northeastern University
  - Email: erik-oliver.blass@airbus.com
- **Guevara Noubir**
  - Northeastern University, Boston, Massachusetts
  - Email: [PI:EMAIL]

## Abstract
Public Wi-Fi hotspots hosted on untrusted Access Points (APs) have been a common feature in mobile network deployments for many years. These hotspots allow mobile providers to offload smartphone traffic to Wi-Fi. However, current solutions enable the monitoring of mobility patterns and client identities by both the AP hosts and the underlying service provider. We propose a protocol and system that allows a service provider to authenticate its clients while hiding the client identity from both the AP and the service provider during authentication. Specifically, our protocol ensures that either the provider cannot identify the client better than random guessing or the client receives proof that the provider is attempting to reveal their identity using different keys.

Our protocol is based on Private Information Retrieval (PIR) with an augmented cheating detection mechanism, leveraging our extensions to the NTRU encryption scheme. The somewhat-homomorphic encryption enables auditing of multiple rows in a single query and optimizes PIR for highly parallel GPU computations using the Fast Fourier Transform (FFT).

In this work, we detail the operation of our protocol, provide a security analysis, and propose an implementation compatible with the Wi-Fi Extensible Authentication Protocol (EAP). We also present optimizations for deployments with over 10 million clients. Our evaluation shows that a client can be authenticated in 43.9 milliseconds on a GPU platform, resulting in an end-to-end authentication time of 1.12 seconds.

## Categories and Subject Descriptors
- **K.6 [Security and Protection]:** Authentication
- **K.4 [Public Policy Issues]:** Privacy

## Keywords
- Mobile
- Wi-Fi
- Authentication
- Anonymity
- Private Information Retrieval
- NTRU
- ISP
- GPU

## Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from Permissions@acm.org.

CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813647.

## 1. Introduction
Recent trends in offloading mobile traffic to Wi-Fi hotspots help alleviate congestion issues for providers but at the cost of client identity and mobility patterns. These hotspots are often deployed as unencrypted, untrusted Access Points (APs) with a captive portal backend, often owned and operated by other ISP subscribers. In such scenarios, a dishonest ISP may track which APs a client connects to and when, revealing client mobility patterns and sensitive information. With the growing use of mobile networks, extensive data on clients' mobility patterns are generated, and few countermeasures exist to protect against the leakage of private and sensitive information.

Some providers have implemented measures to protect device identity information. For example, smartphone vendors (e.g., Apple iOS 8) have included MAC address randomization to prevent some types of device tracking. However, mobility patterns can still be deduced from clients with dynamic addresses by the mobile provider through tracking client ID access on APs over time. Alternatively, pass-through authentication schemes like UMTS' EAP-AKA (or its GSM variant EAP-SIM) can prevent the AP from tracking users, but they do not prevent the cellular operator from tracking user mobility patterns.

While the problem of anonymity and anonymous credentials has received significant attention, the literature does not cover cases where an anonymous side channel is not available for re-keying, changes to group membership are frequent, and protection against a server attempting to deanonymize clients is required.

In this work, we propose an anonymous authentication scheme called TracEdge, which hides client identity from both AP operators and the authentication server. TracEdge allows clients to retrieve different access keys anonymously when needed, eliminating the need for an anonymous side channel. Credentials in TracEdge are not bound to the current set of authorized clients, making membership changes a constant-time operation that does not require long-term client re-keying. If a dishonest provider attempts to identify a client, our protocol provides proof of misbehavior, which can be disclosed and verified by any third party, thereby exposing malicious servers' activities. This capability serves as a deterrent for dishonest servers and helps maintain client trust in honest ones.

TracEdge, like any security mechanism, incurs computational costs for the ISP and may increase client authentication time. However, privacy-conscious providers have a strong incentive to adopt such anonymizing mechanisms. First, honest service providers may find that the information their systems collect can become a liability, and it is in their best interest to keep client information private on technical unavailability grounds. For instance, Lavabit, a secure email provider, closed down rather than release client information. Second, the costs of TracEdge are reasonable, as detailed in Section 6.

### 1.1 Problem Statement
A service provider offers network access to clients through a set of Access Points (e.g., Wi-Fi hotspots) connected to its system. Users can subscribe to the service at any time by contacting the provider and agreeing to the terms of service. By the end of the subscription process, the provider knows identifying information about the subscribed client. Clients can also unsubscribe from the service, ending their authorization to the system.

After subscribing, the client associates with an AP in the provider's network near their current location and uses it to authenticate to the provider's server. The server must decide whether the authenticating client is one of the subscribers. However, the client does not want to leak their identity to either the ISP's server or the AP operator when connecting. Specifically, we view both the access point and the authentication server as active adversaries trying to deanonymize the client at authentication time. The exchange between the client and the server must therefore be indistinguishable from any authentication exchange, not just to third-party eavesdroppers but to the authentication peers: the server and AP.

We define an anonymous authentication protocol as an exchange between the client and the server with the following properties:

1. **Authentication Decision:** Given an authentication exchange with client \( c \), the server can decide if \( c \) is an element of the set of known client identities \( UID = \{C_i : 1 \leq i \leq n\} \).
2. **Indistinguishability:** For any server, access point, and external observer, authentication exchanges for some client \( C_i \) are indistinguishable from those for client \( C_j \), for all \( 1 \leq i, j \leq n \).
3. **Anonymity Probability:** An authorized client \( C_i \) knows with a certain probability of anonymity \( P_a \) whether presenting her credentials will leak her identity to the provider.
4. **Proof of Misbehavior:** If a malicious server can identify \( C_i \), the authentication exchange provides proof that it has targeted \( C_i \)'s identity.

We further constrain our scenario by noting that clients do not have access to an anonymous channel over which to interact with the server without revealing their identity. Such is the case when clients build and destroy links to the server network over time.

### 1.2 Contributions
We design an anonymous authentication scheme as defined above, employing privacy-preserving techniques as building blocks, and evaluate its performance. Our contributions are:

- **PIR-Based Authentication Protocol:** A protocol enabling a client to prove they are authorized to access the network without leaking any information about their identity. Our protocol is secure against fully malicious, covert adversaries, allowing detection of dishonest servers.
- **NTRU-Based PIR Technique:** A new underlying NTRU-based PIR technique we call Multiple Row Selection (MRS) that allows the retrieval of the sum of any subset of rows using arbitrary \( N \)-degree polynomials with a reduced number of multiplications on the server. This is a contribution of independent interest and can be used as the PIR mechanism for other applications.
- **Wi-Fi Implementation:** We design and implement a Wi-Fi construction for TracEdge compatible with the Extensible Authentication Protocol (EAP). Our implementation scales to databases in the order of \( 10^7 \) clients. Using FFT with parallel GPU computations, we reduce the server PIR computation time to 43.9 milliseconds.

To the best of our knowledge, TracEdge is the first anonymous authentication scheme that allows clients to detect identity leaks and has sub-linear communication complexity in the number of clients in a dynamic client membership context. Our underlying NTRU-based PIR makes key revocation immediate, with no communication cost, and with constant authentication key sizes.

The subject of full client anonymity is complex, as information leaked by each communication layer can be used to deanonymize clients. For instance, physical layer fingerprinting techniques can use variations in hardware behavior to identify devices. On higher layers, traffic patterns after authentication could be observed by the AP operator to deanonymize them. While these are real and interesting problems, TracEdge is designed to solve the problem of anonymous Wi-Fi authentication. We discuss these issues further in Section 7.

### 1.3 Notation
- \( K\{m\} \): Symmetric-key encryption of message \( m \) with key \( K \).
- \( EPK(m) \) and \( DPK(m) \): Public key encryption and decryption of \( m \) using key \( PK \).
- \( E(m) \) and \( D(m) \): Homomorphic encryption and decryption of \( m \).
- \( SigPK(m) \): Signature of \( m \) using key \( PK \).
- \( a \parallel b \): Concatenation of \( a \) and \( b \).
- \( \perp \): Invalid key value.

## 2. Related Work
Work on anonymous credentials spans several decades. With anonymous credentials, clients create independent identities called pseudonyms with organizations who will authenticate them, and in turn, clients receive credentials they use in Zero-Knowledge proofs to authenticate themselves to organizations. Pseudonyms are created such that they do not reveal anything about the user apart from ownership of some credential, and two pseudonyms belonging to the same user do not reveal his underlying identity.

Proposed anonymous credentials in the literature include features such as protections against user sharing of credentials, user revocation, and delegation of credentials. While user revocation is practical in past work, it still requires relatively costly computation to perform, and the identity of the user can be retrieved either by the system’s CA or deduced due to reuse of credentials. Our work provides immediate and unconditional credential revocation and user deregistration while maintaining the user identity hidden from the authenticating access points.

Authentication protocols providing proof of membership have been present in the literature for decades. Group and ring signatures allow members of a group to sign a message such that any third party can verify the message was signed by a member of the group, but not its identity. In both of these schemes, signature size is linear in the number of group members, which does not scale. Additionally, members entering and leaving the group in these schemes require new keys to be generated—an expensive operation—and to be provided to the members, limiting their practicality.

Anonymous authentication by Schechter et al. is also linear in the size of the group but allows for dynamic group membership. However, in optimizing the scheme for large groups, a trade-off in privacy must be made by authenticating smaller client subsets. Jarecki et al. allow members of groups to authenticate each other when they belong to the same group and without revealing affiliation or the identity of the group, but still depends on key redistribution when members leave the group.

A substantial body of work relating to Location-Based Services has been constructed over the years due to their widespread deployment on smartphones. The main idea behind many of these schemes is to hide location data to thwart the adversary through various means, some of which rely on collaborating with other clients to perform queries. While such strategies protect against parties that have no access to the location service itself, this would not be the case in the scenario of network access, where the mere act of authenticating to the hotspot provider already leaks user location and identity.

Broadcast encryption considers the distribution of protected content to authorized viewers, part of its interest being due to its applications in digital copyright management. User collusion is prevented by careful distribution of keys to clients, limiting practicality of key sharing. Part of our protocol may be formulated as a case of broadcast encryption, however existing schemes such as Fiat-Naor are designed for one-way channels with limited collusion protection.

Similarly, Logical Key Hierarchy (LKH) schemes seek to distribute a secret among \( n \) recipients such that revoked members cannot decrypt new messages. For this, the recipients are logically organized as leafs in a tree structure and store their own key as well as the keys of every node in the way to the root. To update keys after revoking node \( x \), the root sends new keys to every node on the path to \( x \), reducing broadcast costs to \( O(r \log(n/r)) \) where \( r \) is the number of revoked devices. Broadcast encryption and LKH require re-keying and communication with users, typically necessitating a channel that does not leak user location, and do not protect against a cheating server. Our work, in contrast, does not make such assumptions about the channel, makes a contribution on how it may be constructed in practice, and provides clients with proof in the case of server wrongdoing.

Private Information Retrieval (PIR) has been an active area of research starting with Chor et al., who showed information retrieval protocols over database replicas guaranteeing client privacy as long as at least some servers do not collude. These protocols provide information-theoretic security. Single-database PIR, on the other hand, provides computational security and is more practical for large-scale applications.