Certainly! Here is a more organized and professional version of the provided text:

---

### 4.5 Variation Mitigation

**StageWeb (SW) Pipeline and Crossbar Power:**
- **Baseline Fault-Tolerant Overlapping:** The SW design leverages overlapping pipeline stages to form resilient pipelines.
- **Distribution of Core Frequencies:** Figure 14 illustrates the distribution of core frequencies in a 64-core Chip Multi-Processor (CMP) with and without SW. Under the same level of process variation, SW enables a noticeable improvement in the frequency distribution.

**Figure 14: Distribution of Core Frequencies in 64-Core CMP with and without Stage Web Chips.**

- **Process Variation Impact:** The slowest cores in both systems operate at a frequency of 0.73 GHz. However, the mean increase in frequency for SW is 7%, indicating a better distribution of core frequencies compared to a conventional CMP.

**Power Savings:**
- **Normalization and Utilization:** Figure 15 shows the power savings obtained using SW at different system utilization levels. Each bar is normalized to the power consumption at a specific utilization level.
- **Results and Observations:** At low utilization (e.g., 12.5%), SW can gather faster stages, allowing the global supply voltage to be scaled back, resulting in significant power savings. As utilization increases, the power savings decrease, but SW still provides notable benefits.

**Figure 15: Power Savings Using SW Relative to a CMP at Different System Utilization Levels.**

- **Commercial Practice:** High-end server systems, such as Tandem NonStop and IBM zSeries, have traditionally relied on coarse-grain replication for reliability. However, these systems incur high overheads in terms of area and power and cannot tolerate high failure rates.

**Recent Proposals:**
- **Core Salvaging and Isolation:** Techniques like Core Salvaging [1] and Architectural Isolation [16] enable the use of broken cores in 20-30% of cases. These methods, however, also incur significant overheads.
- **StageNet (SN):** SN [9] groups together a small set of pipelines with a simple crossbar interconnect, allowing for reconfiguration at the granularity of a pipeline stage. This approach can tolerate many more failures by enabling stage-level reconfigurability.
- **Core Cannibalization (CCA):** CCA [18] proposes a multicore architecture that allows a subset of pipelines to lend their stages to other pipelines, thereby mitigating the impact of broken pipelines.

### 4.6 Power Saving

- **Supply Voltage Scaling:** For a given system utilization, SW can scale down the supply voltage and still provide the same level of performance as a baseline CMP. This results in power savings, as power consumption is quadratically related to the supply voltage.
- **Energy Savings:** The power savings translate directly into energy savings, especially in low system utilization phases. In our study, the SW system delivered 70% more cumulative work than a regular CMP. The best interconnection configuration was shown to achieve up to 40% more cumulative work over a regular CMP containing an equal number of stages and scaling down the supply voltage.

### 5 Related Work

- **High-End Server Systems:** Systems like Tandem NonStop and IBM zSeries are designed with reliability as a primary constraint. They rely on coarse-grain replication, which incurs high overheads in terms of area and power.
- **Recent Proposals for Fault Tolerance:**
  - **Core Salvaging [1]:** Enables the use of a broken core in 20-30% of cases.
  - **Architectural Isolation [16]:** Disables the slowest stage and re-schedules threads to fully functional cores.
  - **StageNet (SN) [9]:** Groups together a small set of pipelines with a simple crossbar interconnect, allowing for reconfiguration at the granularity of a pipeline stage.
  - **Core Cannibalization (CCA) [18]:** Allows a subset of pipelines to lend their stages to other pipelines, thereby mitigating the impact of broken pipelines.

### 6 Conclusion

In this paper, we propose StageWeb (SW), a scalable and fault-tolerant design for future computing systems. SW fades out the inter-core boundaries and applies interconnection flexibility to create healthy working pipelines. This approach is further enhanced by exploring various interconnection alternatives and algorithms. SW is also used to create more power-efficient pipelines by assembling faster stages and scaling down the supply voltage. Even in an area-neutral configuration, SW delivers 70% more cumulative work than a regular CMP. The best interconnection configuration was shown to achieve up to 40% more cumulative work over a regular CMP containing an equal number of stages and scaling down the supply voltage.

### 7 Acknowledgements

We thank the anonymous referees for their valuable comments and suggestions. We also acknowledge the support of the Gigascale Systems Research Center, one of the five research centers funded under the Focus Center Research Program. This research was also supported by National Science Foundation grants CCF-0916689 and ARM Limited.

### References

[1] N. Aggarwal, P. Ranganathan, N. P. Jouppi, and J. E. Smith. Configurable isolation: building high availability systems with commodity multi-core processors. In Proc. of the 34th Annual International Symposium on Computer Architecture, pages 1-10, June 2007.

[2] A. Andrzejak, M. Arlitt, and J. Rolia. Bounding the resource savings of utility computing models. HP Laboratories, Dec. 2002. http://www.hpl.hp.com/techreports/2002/HPL-2002-339.html.

[3] A. Ansari, S. Gupta, S. Feng, and S. Mahlke. Zerehcache: morning cache architectures in high defect density technologies. In Proc. of the 42nd Annual International Symposium on Microarchitecture, 2009.

[4] W. Bartlett and L. Spainhower. Commercial fault tolerance: a tale of two systems. IEEE Transactions on Dependable and Secure Computing, 1(1):87-96, 2004.

[5] J. Blome, S. Feng, S. Gupta, and S. Mahlke. Self-calibrating online wearout detection. In Proc. of the 40th Annual International Symposium on Microarchitecture, pages 109-120, 2007.

[6] S. Borkar. Designing reliable systems from unreliable components: the challenges of transistor variability and degradation. IEEE Micro, 25(6):10-16, 2005.

[7] D. Ernst, N. S. Kim, S. Das, S. Pant, T. Pham, D. Blaauw, T. Austin, and T. Mudge. Razor: A low-power pipeline based on circuit-level timing speculation. In Proc. of the 36th Annual International Symposium on Microarchitecture, pages 7-18, 2003.

[8] S. Gupta, A. Ansari, S. Feng, and S. Mahlke. Adaptive online hard fault detection. In Proc. of the 2009 International Conference on Computer Design, 2009.

[9] S. Gupta, S. Feng, A. Ansari, J. Blome, and S. Mahlke. The stagenet fabric for constructing resilient multicore systems. In Proc. of the 41st Annual International Symposium on Microarchitecture, pages 141-151, 2008.

[10] W. Huang, M. R. Stan, K. Skadron, and S. Ghosh. Hotspot: a compact thermal modeling method for CMOS VLSI systems. IEEE Transactions on Very Large Scale Integration (VLSI) Systems, 14(5):501-513, May 2006.

[11] ITRS. International technology roadmap for semiconductors 2008. http://www.itrs.net, 2008.

[12] R. Kumar, N. Jouppi, and D. Tullsen. Conjoined-core chip multi-processing. In Proc. of the 37th Annual International Symposium on Microarchitecture, pages 195-206, 2004.

[13] X. Liang, R. Canal, G.-Y. Wei, and D. Brooks. Replacing 6T SRAMs with 3T DRAMs in the L1 data cache to combat process variability. IEEE Micro, 28(1):60-68, 2008.

[14] OpenCores. OpenRISC 1200, 2006. http://www.opencores.org/projects.cgi/web/or1k_openrisc_1200.

[15] L.-S. Peh and W. Dally. A delay model and speculative routers for pipelined architectures. In Proc. of the 7th International Symposium on High-Performance Computer Architecture, pages 255-266, Jan. 2001.

[16] M. D. Powell, A. Biswas, S. Gupta, and S. S. Mukherjee. Architectural tolerance in a multi-core processor for hard-error faults. In Proc. of the 36th Annual International Symposium on Computer Architecture, page To Appear, June 2009.

[17] J. Rabaey, A. Chandrakasan, and B. Nikolic. Digital Integrated Circuits, 2nd Edition. Prentice Hall, 2003.

[18] B. F. Romanescu and D. J. Sorin. Core cannibalization architecture: improving processor lifetime in the presence of hard faults. In Proc. of the 17th International Conference on Parallel Architectures and Compilation Techniques, 2008.

[19] S. Sarangi, B. Greskamp, R. Teodorescu, J. Nakano, A. Tiwari, and J. Torrellas. Varius: exposing timing errors for microarchitects. In IEEE Transactions on Semiconductor Manufacturing, pages 3-13, Feb. 2008.

[20] P. Shivakumar, S. Keckler, C. Moore, and D. Burger. Exploiting microarchitectural redundancy for defect tolerance. In Proc. of the 2003 International Conference on Computer Design, page 481, Oct. 2003.

[21] J. Srinivasan, S. V. Adve, P. Bose, and J. A. Rivers. Exploiting structural duplication for lifetime reliability enhancement. In Proc. of the 32nd Annual International Symposium on Computer Architecture, pages 520-531, June 2005.

[22] A. Tiwari and J. Torrellas. Facelift: hiding and slowing aging in multicores. In Proc. of the 41st Annual International Symposium on Microarchitecture, pages 129-140, Dec. 2008.

[23] M. Vachharajani, N. Vachharajani, D. A. Penry, J. A. Blome, and D. I. August. The liberty simulation environment: a deliberate approach to high-level system modeling. ACM Transactions on Computer Systems, 24(3):211-249, 2006.

[24] K. Wang and C.-K. Wu. Design and implementation of fault-tolerant switches for multiprocessor systems. IEE Proceedings on Computers and Digital Techniques, 146(1):50-56, Jan. 1999.

---

This version is more structured, coherent, and professional, making it easier to read and understand.