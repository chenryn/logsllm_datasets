以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[21] M. Chase 和 A. Lysyanskaya, “On signatures of knowledge,” in CRYPTO, LNCS vol. 4117, 2006, pp. 78–96.

[22] D. Chaum, “Security without identification: transaction systems to make big brother obsolete,” Communications of the ACM, 1985. [在线]. 可用: http://doi.acm.org/10.1145/4372.4373

J. Clark 和 A. Essex, “Commitcoin: Carbon dating commitments with bitcoin,” in Financial Cryptography and Data Security. Springer, 2012, pp. 390–398.

[23] S. Coull, M. Green, 和 S. Hohenberger, “Access controls for oblivious and anonymous systems,” in TISSEC, 2011.

[24] R. Cramer, I. Damgård, 和 B. Schoenmakers, “Proofs of partial knowledge and simplified design of witness hiding protocols,” in CRYPTO, 1994.

I. Damgård, K. Dupont, 和 M. Ø. Pedersen, “Unclonable group identification,” ser. EUROCRYPT, 2006. [在线]. 可用: http://dx.doi.org/10.1007/11761679_33

[25] W. Diffie 和 M. Hellman, “New directions in cryptography,” IEEE Transactions on Information Theory, 1976.

[26] Y. Dodis 和 A. Yampolskiy, “A verifiable random function with short proofs and keys,” ser. PKC, 2005.

[27] “Dot-bit,” 可用: http://dot-bit.org/. [在线]. 可用: http://dot-bit.org/

J. R. Douceur, “The sybil attack,” in Peer-to-Peer Systems, 2002. [在线]. 可用: http://link.springer.com/chapter/10.1007/3-540-45748-8_24

[28] A. Fiat 和 A. Shamir, “How to prove yourself: Practical solutions to identification and signature problems,” in CRYPTO, 1986.

[29] E. Fujisaki 和 T. Okamoto, “Statistical zero knowledge protocols to prove modular polynomial relations,” in CRYPTO, 1997.

[30] O. Goldreich, S. Goldwasser, 和 S. Micali, “How to construct random functions,” Journal of the ACM, 1986.

[31] O. Goldreich, S. Micali, 和 A. Wigderson, “Proofs that yield nothing but their validity and a methodology of cryptographic protocol design,” in FOCS, 1986.

J. Groth, “Non-interactive zero-knowledge arguments for voting,” in Applied Cryptography and Network Security. Springer, 2005, pp. 467–482.

[32] M. Z. Lee, A. M. Dunn, B. Waters, E. Witchel, 和 J. Katz, “Anon-pass: Practical anonymous subscriptions,” in IEEE Security and Privacy, 2013.

[33] H. Lipmaa, “On diophantine complexity and statistical zero-knowledge arguments,” in Advances in Cryptology-ASIACRYPT 2003. Springer, 2003, pp. 398–415.

I. Miers, C. Garman, M. Green, 和 A. Rubin, “Zerocoin: Anonymous distributed e-cash from bitcoin,” in IEEE Security and Privacy, 2013.

[34] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.

“Namecoin,” 可用: http://namecoin.info/. [在线]. 可用: http://namecoin.info/

[35] M. Naor 和 O. Reingold, “Number-theoretic constructions of efficient pseudo-random functions,” Journal of the ACM (JACM), 2004.

[36] T.-W. J. Ngan, D. S. Wallach, 和 P. Druschel, “Enforcing fair sharing of peer-to-peer resources,” in Peer-to-Peer Systems II, 2003. [在线]. 可用: http://link.springer.com/chapter/10.1007/978-3-540-45172-3_14

[37] D. Obenshain, T. Tantillo, A. Newell, C. Nita-Rotaru, 和 Y. Amir, “Intrusion-tolerant cloud monitoring and control,” in LADIS, 2012.

[38] B. Parno, C. Gentry, J. Howell, 和 M. Raykova, “Pinocchio: Nearly practical verifiable computation,” in Proceedings of the 34th IEEE Symposium on Security and Privacy, ser. Oakland ’13, 2013, pp. 238–252.

[39] T. Pedersen, “Non-interactive and information-theoretic secure verifiable secret sharing,” in CRYPTO, 1991.

[40] R. L. Rivest, A. Shamir, 和 Y. Tauman, “How to leak a secret,” in ASIACRYPT, 2001.

[41] T. Sander 和 A. Ta-Shma, “Auditable, anonymous electronic cash (extended abstract),” in CRYPTO, 1999.

[42] C.-P. Schnorr, “Efficient signature generation for smart cards,” Journal of Cryptology, vol. 4, no. 3, pp. 239–252, 1991.

[43] H. Shacham 和 B. Waters, “Compact proofs of retrievability,” in Advances in Cryptology-ASIACRYPT 2008. Springer, 2008, pp. 90–107.

[44] R. Snader 和 N. Borisov, “Eigenspeed: secure peer-to-peer bandwidth evaluation.” in IPTPS, 2009, p. 9.

---

**附录 A：基本系统的安全性证明概述**

我们提供了一个基本分布式匿名凭证系统安全性的证明概述。

我们的基本方法是，对于每一个针对凭证系统的现实世界对手 \(A\)，我们可以构建一个理想世界的对手 \(S\)，使得 \(A\) 与实际系统的交互记录在计算上无法与 \(A\) 与 \(S\) 的交互记录区分开来。我们假设静态腐败模型，其中对手控制一些用户，并将适应性腐败模型的证明留作未来的工作。在这个概述中，我们还假设我们的零知识签名包含高效的提取器和模拟器，并且参数是通过可信设置过程创建的。注意，在随机预言机模型中，这个假设对于我们使用的Fiat-Shamir证明成立，前提是这些证明是顺序进行的。

我们的证明假设存在一个全局的、可信的交易账本，我们将其视为黑盒。我们将考虑这种构造并对其进行建模的完整证明留给未来的工作。

我们首先概述了系统中的模拟器 \(S\)。

**A. 模拟器描述**

**发行凭证**。当由对手控制的用户（具有昵称 \(Nym^O_U\)）希望获得凭证时，该用户首先生成 \((c, \pi_M, attrs)\)。当模拟器收到此通知时，它首先验证凭证和证明是否有效，并符合组织的策略。如果验证通过，模拟器使用 \(\pi_M\) 上的知识提取器来获取 \((sk, aux)\)。

模拟器然后检查其用户列表中是否有记录 \((U, sk, Nym^O_U)\)。如果该用户不存在，则模拟器创建用户 \(U\) 并运行 \(RegNym(Nym^O_U, U, O)\) 来注册 \(Nym^O_U\) 并获取 \(sk_U\) 以供进一步与TP交互。模拟器随后在其受控用户的列表中存储 \((U, sk, sk_U, Nym^O_U)\)。如果用户 \(U\) 已经存在，则模拟器运行 \(RegNym(Nym^O_U, U, O)\) 来注册 \(Nym^O_U\) 并将其添加到 \(U\) 的记录中。

一旦模拟器注册或验证了昵称的存在，它运行 \(MintCred(Nym^O_U, O, attrs, aux)\)。模拟器然后将凭证信息传输到可信存储，并确认凭证的发行。模拟器在其授予的凭证列表中存储 \((sk, Nym^O_U, attrs, aux, c, \pi_M)\)。

当一个诚实的用户通过TP希望建立凭证时，模拟器创建一个凭证 \(c\)（使用公开可用的 \(attrs\)），并使用 \(\pi_M\) 的零知识模拟器来模拟相关的证明。然后它将凭证信息 \((c, \pi_M, attrs)\) 传输到可信存储。

**展示凭证**。当由对手控制的用户希望向验证者 \(V\) 展示来自组织 \(O\) 的凭证，并且它们分别具有昵称 \(Nym^O_U\) 和 \(Nym^V_U\) 时，该用户首先生成 \(\pi_S\)。当模拟器收到此通知时，它按真实协议验证证明（如果无效则拒绝）。如果验证通过，它运行 \(\pi_S\) 上的知识提取器来获取 \(sk\)。

模拟器然后检查其用户列表中是否有记录 \((U, sk, Nym^O_U, Nym^V_U)\)。如果该用户存在，则模拟器检索与 \((U, sk, Nym^O_U)\) 关联的 \(sk_U\) 并继续。如果记录不存在（部分或全部），模拟器检查其之前是否见过具有密钥 \(sk\) 的用户。如果该用户不存在，则模拟器创建用户 \(U\) 并运行 \(RegNym(Nym^O_U, U, O)\) 和 \(RegNym(Nym^V_U, U, V)\) 来注册 \(Nym^O_U\) 并获取 \(sk_U\) 以供进一步与TP交互。模拟器随后在其受控用户的列表中存储 \((U, sk, sk_U, Nym^O_U, Nym^V_U)\)。如果用户 \(U\) 已经存在，则模拟器运行 \(RegNym(Nym^O_U, U, O)\)（或 \(RegNym(Nym^V_U, U, V)\)）来注册 \(Nym^O_U\)（或 \(Nym^V_U\)）并将其添加到 \(U\) 的记录中。

现在，模拟器 \(S\) 运行 \(ShowOnNym(Nym^O_U, Nym^V_U, O, V, C)\)，其中 \(C\) 是通过调用 \(GetCredList(O)\) 由模拟器获得的。

当一个诚实的用户（通过TP）希望向由对手控制的验证者 \(V\) 展示凭证时，模拟器生成一个随机素数承诺并运行 \(\pi_S\) 的零知识模拟器来模拟一个证明，然后将其发送给 \(V\)。

**1. 成功模拟的证明（概述）**：如果强RSA假设和离散对数假设成立，我们的模拟在计算上与真实协议不可区分。虽然由于篇幅原因我们不在此提供完整的证明，但我们提供了安全性的论证概述。

我们首先讨论签名/证明 \(\pi_M\) 和 \(\pi_S\)。在离散对数假设下，\(\pi_M\) 是关于 \(aux\) 的值 \(sk, r, r'\) 的计算零知识签名，使得昵称 \(Nym^O_U\) 和凭证 \(c\) 都属于同一个主密钥 \(sk\)。该证明使用标准技术在随机预言机模型中构建 [48]，并且生成的证明至少是计算零知识。伪造此证明以花费新币的攻击者会违反证明系统的健全性保证。或者，攻击者可能通过识别承诺上的碰撞来伪造此消息，这在离散对数假设下发生的概率可以忽略不计 [45]。在这种情况下，我们可以使用零知识证明的提取器以几乎可忽略的概率获取碰撞。

在强RSA假设和离散对数假设下，\(\pi_S\) 是关于 \(sk, \omega, c, Nym^V_U, r, r'\) 的统计非交互式零知识证明，其中 \(\omega\) 是 \(c\) 在累加器 \(A\) 中的见证，并且昵称 \(Nym^V_U\) 和凭证 \(c\) 都属于同一个主密钥 \(sk\)。该证明再次使用标准技术 [15, 48] 构建，类似于Miers等人在 [38] 中使用的证明。为了伪造此类证明，对手需要找到承诺上的碰撞或伪造累加器成员资格证明。我们之前讨论了第一种情况发生的概率可以忽略不计。第二种情况在强RSA假设下发生的概率也可以忽略不计 [15]。请参阅论文的完整版本以获得这些陈述的形式化处理/归约。

直观地，我们可以看到模拟器将以最多可忽略的概率失败，因为它仅处理零知识签名和零知识证明，这些都有高效的提取器和模拟器。我们的证明 \(\pi_M\) 和 \(\pi_S\) 具有成功概率为 \(1 - \nu(\cdot)\) 的知识提取器，其中 \(\nu(\cdot)\) 是可忽略函数。由于签名和证明是上述模拟器的唯一故障点，因此模拟器以可忽略的概率失败。

因为对手只看到模拟的零知识证明和签名，并且模拟的签名和证明在计算上与合法的签名和证明不可区分，所以对手无法以可忽略的优势区分模拟的记录和真实协议。因此，对手无法区分与模拟器的交互和与真实协议的交互。

我们注意到，我们使用的Pedersen承诺是非标准的，因为我们只输出素数承诺。我们强调，这些承诺在假设离散对数假设在 \(\langle g \rangle\) 中成立的情况下仍然是信息理论隐藏和计算绑定的。

---

这样修改后的文本更加清晰、连贯和专业。