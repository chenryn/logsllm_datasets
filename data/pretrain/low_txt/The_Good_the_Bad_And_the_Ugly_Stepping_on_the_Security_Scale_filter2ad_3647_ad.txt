### Secure Coding Practices Completion Summary

**Product Division 1:**
- P11
- P12
- P13
- P14
- P15
- P16

**Product Division 2:**
- P21
- P22
- P23
- P24
- P25
- P26

**Product Division 3:**
- P31
- P32
- P33
- P44
- P55

**Development Organization**

**Figure 2. OSCS Training Completion Status – Pre-OSOC Meeting**

To reiterate, this exercise was not intended to be a "gotcha" but rather a reminder of the mandatory secure coding training. Oracle Global Product Security:
- Published the current scorecard approximately two months before the semi-annual Oracle Security Oversight Committee (OSOC) meeting.
- Noted that the final results would be compiled and reported at the meeting.
- Reminded managers of the specific names of their team members who needed to complete the training.
- Requested compliance with the training mandate as soon as feasible.

In essence, this was a well-communicated reminder of the training requirement, with a long lead time, and an indication that the results would be reported to executive management. While one might argue that reporting to senior management should not be necessary for compliance, the reality is that compliance rates significantly increased when outliers were clearly identified. The report also highlighted groups that had made substantial improvements, crediting the security leads for motivating their teams.

**Figures 2 and 3 show:**
- Compliance rates before the OSOC meeting.
- Compliance rates four months after the meeting (with the most significant increase occurring in the first two months).

When all else fails, public "naming and shaming" can be effective, as numbers do not lie.

### Correlation Between Secure Coding Training and Security Bug Reduction

It is unclear whether there is a direct correlation between expanded secure coding training and a reduction in security bugs, especially since automated tools have also become more widely used, leading to earlier bug detection. However, the foundation of Oracle's Secure Software Assurance (OSSA) is the Oracle Secure Coding Standards. The training class aims to familiarize developers with their responsibilities and standards, providing them with resources for further information. The primary goal is to ensure developers understand their role in writing secure code, supported by other processes, tools, checks, and balances to make it easier for them to produce secure code.

**Figure 3. OSCS Training Completion Status – Four Months Post-OSOC Meeting**

### Secondary Benefits of Metrics

One benefit of a robust metrics program is that data collected for one purpose may have secondary uses. For example, metrics developed for business reasons can provide additional benefits. At Oracle, metrics are not collected just because they might be useful someday; instead, they are used to validate the metrics function and provide business justification. 

For instance, integrating acquired entities into Oracle's secure development practices, including vulnerability handling processes, can be challenging. Acquired entities may lack pre-existing security teams or processes and may become targets for security researchers post-acquisition. Oracle's security metrics include:
- Number of open security bugs being tracked and aged.
- Number of security bulletins or alerts issued per year.
- Volume of email correspondence to the security vulnerability handling team from external reporters.

Managers use these metrics to justify the number of people needed for the security vulnerability handling function during the yearly budgeting cycle. This analysis helps in making informed decisions about resource allocation.

### Differentiating Among Bug Reporters

Oracle's tracking system for security vulnerabilities categorizes reporters into different groups:
- Customer-reported bugs
- Security researcher-reported bugs
- Internally found bugs (general)
- Internally found bugs (found by the ethical hacking team)

Differentiating among these groups is important because, all things being equal, researcher-reported bugs are prioritized for speedy resolution. This is due to the concern that researchers may publicly disclose unaddressed bugs, increasing risk to customers and generating negative PR. 

### Ethical Hacking Team

The ethical hacking team at Oracle focuses on product assessments to find vulnerabilities before third-party researchers or actual hackers do. Their dual purpose is to transfer knowledge to the development team through in-house hacking tools, secure coding standards, and hacker-resistant development practices. It is a priority to address internally found vulnerabilities quickly to prevent third-party researchers from reporting the same issues.

### Addressing Concerns

An analysis of the metrics showed that ethical hacking bugs had a high degree of closure, alleviating concerns that these bugs were not being fixed quickly enough. This helped Oracle avoid an unnecessary and costly fire drill to solve a non-existent problem.

**Figure 4. Percentage of Open Bugs by Reporter**
- Customer: 9.9%
- External, No Credit: 3.3%
- Researchers: 3.6%
- Internal: 11.7%
- Internal (ethical hacking team): 5.2%

### Summary

Metrics are a valuable tool in security and vulnerability handling. Oracle's security metrics program has evolved from a concept to an active program that influences how security resources are allocated. Providing access to security metrics to developers highlights both successes and areas needing improvement, helping development organizations manage their workload more effectively. Sharing assurance compliance metrics with senior management has increased the visibility of the assurance function and leveraged peer pressure to promote more secure code.

### Acknowledgment

Thanks to Darius Wiles of Oracle Global Product Security for developing the Oracle security metrics wiki and to John Heimann of Oracle Global Product Security for the Oracle Security Compliance Scorecard.

### References

1. Rudolph W. Giuliani, *Leadership*, Miramax, 2005.