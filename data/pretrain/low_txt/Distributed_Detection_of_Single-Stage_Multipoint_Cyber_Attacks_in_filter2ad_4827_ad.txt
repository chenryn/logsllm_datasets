### Approach

In the work by Rosich, Voos, and Darouach (RVD), it is argued that the use of controlled invariant sets for detecting cyber attacks requires minimal information about the controller, making it applicable to a wide range of control laws. The invariant set \(\Sigma\) in RVD corresponds to the invariants listed in Table 2. The method of using invariant sets is theoretically demonstrated using a second-order unstable system. This system is first discretized, with the input \(u_k\) constrained as \(-1 \leq u_k \leq 1\). A maximal invariant set \(\Omega_{\infty}\) is then computed using an existing algorithm [5]. This maximal set is used to detect a control input stuck attack by setting \(u_k\) to -1 after the system has been in operation for some time. Despite the system remaining within the safety range, the attack is detected, and an alarm is triggered.

The experiments reported here derive and use invariants in a realistic setting. While the automated derivation of \(\Omega_{\infty}\) leads to a correct and maximal invariant set, it relies on a precise state model of the system. Such a state model is not available for SWaT, and deriving such models for large systems may not be practical. Therefore, the approach of using system design to generate invariants seems more practical. Additionally, the example used in RVD involves a single-point attack, i.e., on the control signal \(u_k\). The experiments described here explore more complex attacks that aim to disrupt both \(u_k\) and the state variables \(x_k\) in RVD. These complex attacks aim to evade detection by simultaneously manipulating multiple state variables to ensure the invariants remain satisfied while an attack is active. This aspect of attacker behavior and attack detection has not been considered in RVD. The authors in RVD also used another invariant set \(\Sigma\) derived from controller information such as the controller gain. No such information was considered in the experiments reported here, though it would be a useful future experiment. However, the indirect impact of controller actions, such as starting a pump, is incorporated into the SD invariants.

### Distributed State Estimation and Detection in Power Networks

Fabio et al. have proposed distributed state estimation [14] and detection [15] in power networks. The distributed detection method computes a minimum variance estimate of the network state via distributed computation. The key assumption is that the state estimator receives system measurements from sensors, which an attacker can manipulate to inject false data. The authors also address the problem of detecting the presence of bad data, similar to the attack detection problem posed here. The work in [14] focuses on power networks and is theoretical, whereas the work reported here focuses on water treatment systems and is experimental. Furthermore, the work reported here accounts for carefully crafted correlations by the attacker across system measurements. Using multi-point attacks, the attacker attempts to thwart the detection mechanism in the controller.

### Distributed Security Monitoring

Hsiao et al. [10] have proposed a distributed security monitoring solution to detect attacks on a CPS. They describe a coordinated architecture that employs SecMons (Security Monitors) over the network. Each monitor oversees a network link and the corresponding packets, analyzing and assessing them for anomalous behavior. The monitoring is stateful, using finite state machine models to describe subjects at each network level. Pre-conditions are defined for state transitions within and across the machines, and these are used to identify attack symptoms using a statistical approach. While this approach is similar to DaD in this paper in terms of distributed detection, it differs in that it does not use physics/chemistry-based invariants. Thus, Hsiao et al.'s approach is best considered complementary to the one described here.

### Chemical or Biological Contamination in Water Distribution Systems

Perelman et al. [16] focus on chemical or biological contamination in a water distribution system. Their approach measures water quality parameters, such as pH and conductivity, to distinguish normal from abnormal behavior. While this approach is similar to the one presented here, it does not assume sensor compromise. For example, an attacker could add pollutants and, knowing the normal system behavior, replay all the measurements as if the system is behaving normally. Nevertheless, the approach proposed in [16] is effective when measurements are taken at multiple stages and the attacker compromises only one stage, as in SSMP attacks.

### Robust CPS Design

There is literature on the design of robust CPS [13, 20, 21], focusing on attack modeling, the design of controllers and monitors for secure CPS. In this paper, attack models with SSMP are borrowed from Cardenas' work [6], as it is most closely related to cyber attacks in a CPS. Many other works model attacks specifically on control systems and are abstract in nature.

### Summary, Discussion, and Next Steps

A method to detect cyber attacks on a CPS is described, utilizing invariants derived from CPS design. Each invariant is based on the physics or chemistry of the process being controlled. In this work, only physics-based invariants were used. The CPS is assumed to be structured so that it can be partitioned into interacting stages, each controlled by a PLC that communicates with local sensors and actuators, as well as with other PLCs and the SCADA workstation. The invariants are coded into the PLCs that control various subprocesses in a CPS. This method of attack detection is referred to as distributed attack detection or simply DaD.

Attacks were designed assuming that the attacker has knowledge of any one stage of the CPS and can compromise two or more sensors/actuators at that stage. Experiments reveal that distributed detection based on invariants is effective in detecting SSMP attacks. However, replay attacks on the first stage of a CPS, which has no previous stage, require additional state information for detection. It is important to note that the method described here could complement other methods proposed in the literature, such as intrusion detection and machine learning, for which a range of commercial tools are available [7, 11].

This extensive experiment led to the realization of several issues and open problems, summarized below:

#### Reconnaissance Attack
An attacker might enter a CPS through vulnerabilities in the SCADA workstation, PLC, or HMI. The intrusion might be to learn system design and its operation. Such an attack cannot be detected using an approach that relies solely on invariants derived from the physics or chemistry of the CPS. Detection of such reconnaissance attacks relies on traditional intrusion detection approaches [9].

#### Transient States
Any physical system includes transient states, which arise in response to a control action affecting an actuator, changing the system state. The response time of an actuator is limited by its physical design, so the actuator and its host system are considered to be in a transient state until they reach a stable state. An attacker could take advantage of these transient states to launch attacks when the system is transitioning between stable states. This aspect of attacker capability has not been accounted for in the experiments reported here.

#### Automated Derivation and Strength of Invariants
In the study reported here, the invariants were derived manually. However, an ongoing project aims to derive invariants directly from the design and assess their strengths using a formal model with Alloy [12]. Such knowledge could help in deciding whether to use an invariant. For example, if invariant \(I_1\) detects \(n\) attacks, of which \(m < n\) are detected by invariant \(I_2\), then \(I_1\) subsumes \(I_2\), and \(I_2\) could be ignored unless there is a good reason not to do so. The subsumption relationship could be further generalized by creating invariant subspaces, which could minimize the number of invariants implemented in various PLCs. This aspect of invariant minimization will be considered in future experiments.

#### Completeness of Invariants: An Open Problem?
An open question is whether the set of invariants SD and SA is complete. The completeness of SD depends on the correctness and completeness of the SCG for the system briefly described in Section 3.1. For SWaT, a complete and manually verified set of SCGs is available, and the invariants listed in Table 2 are derived manually from these SCGs. However, SCGs are amenable to automation, and a complete set of SD invariants can be derived from a complete and accurate SCG for a CPS, which could be done during the design phase [1], not necessarily after it has been built.

There are no known criteria to determine the completeness of SA invariants, which are derived from the physics and chemistry of the system. One approach is to define all properties in a CPS and then derive SA invariants based on these properties. Another approach is to create a list of cyber attacks and derive invariants that guarantee the detection of each attack. Such a set would be adequate with respect to the attack set but may not be complete with respect to other criteria. These are two ways to derive a useful, though not necessarily complete, set of SA invariants. This appears to be an open problem for CPS researchers.

#### Co-design of Invariants and Attacks: An Open Problem?
The replay attack example in Section 6 indicates that while a detection method might be effective in detecting many attacks of a kind, it might fail for other types of attacks. The question is whether there is a procedure that takes the CPS design as input, derives invariants from the design, and shows a complete range of attacks that can and cannot be detected using the derived invariants. Any such procedure would likely need to use the knowledge of physics and chemistry associated with the various components in the CPS.

The work described here is part of a series of experiments to understand the effectiveness of various physics and chemistry-based methods for attack detection. The assumption is that such methods are powerful when used during the CPS design and in conjunction with traditional network-based detection approaches. Additional experiments are being conducted based on the attacker's knowledge and capability, as illustrated in Figure 5. Although the method described here was implemented on only one CPS, it seems applicable to CPS domains such as power networks, transportation systems, and oil and natural gas systems. However, any such claim should be validated against other types of complex CPS.

### Acknowledgments

Thanks to Kaung Myat Aung for invaluable assistance in conducting the experiments.

### References

[1] S. Adepu and A. Mathur. Introducing cyber security at the design stage of public infrastructures: A procedure and case study. In Proceedings of the 2nd Asia-Pacific Conference on Complex Systems Design & Management in Advances in Intelligent Systems and Computing. Springer, February 2016.

[2] S. Adepu and A. Mathur. Using process invariants to detect cyber attacks on a water treatment system. In Proceedings of the 31st International Conference on ICT Systems Security and Privacy Protection - IFIP SEC 2016 (IFIP AICT series). Springer, 2016.

[3] S. Amin, A. Cárdenas, and S. S. Sastry. Safe and secure networked control systems under denial-of-service attacks. In Hybrid Systems: Computation and Control. Proc. 12th Intl. Conf. (HSCC), LNCS, Vol. 5469, Springer-Verlag, pages 31–45, 2009.

[4] S. Amin, X. Litrico, S. Sastry, and A. Bayen. Cyber security of water SCADA systems; Part I: Analysis and experimentation of stealthy deception attacks. IEEE Transactions on Control Systems Technology, 21(5):1963–1970, 2013.

[5] F. Blanchini. Set invariance in control. Automatica, 35(11):1747–1767, 1999.

[6] A. A. Cárdenas, S. Amin, Z.-S. Lin, Y.-L. Huang, C.-Y. Huang, and S. Sastry. Attacks against process control systems: Risk assessment, detection, and response. In ACM Symp. Inf. Comput. Commun. Security, 2011.

[7] Check Point: Critical Infrastructure & ICS/SCADA. http://www.checkpoint.com/products-solutions/critical-infrastructure/index.html.

[8] A. Fagiolini, M. Housh, A. Ostfeld, and A. Bicchi. Distributed estimation and control of water distribution networks by logical consensus. In Communications, Control and Signal Processing (ISCCSP), 2014 6th International Symposium on, pages 239–242, May 2014.

[9] S. Han, M. Xie, H.-H. Chen, and Y. Ling. Intrusion detection in cyber-physical systems: Techniques and challenges. IEEE Systems Journal, 8(4):1049–1059, Dec 2014.

[10] S.-W. Hsiao, Y. Sun, M. C. Chen, and H. Zhang. Cross-level behavioral analysis for robust early intrusion detection. In IEEE International Conference on Intelligence and Security Informatics (ISI), pages 95–100, May 2010.

[11] ICS2 On Guard. http://ics2.com/products/ics2-on-guard-2/.

[12] E. Kang, S. Adepu, D. Jackson, and A. P. Mathur. Model-based security analysis of a water treatment system. In In Proceedings of 2nd International Workshop on Software Engineering for Smart Cyber-Physical Systems (in press; SEsCPS’16), May 2016.

[13] C. Kwon, W. Liu, and I. Hwang. Security analysis for cyber-physical systems against stealthy deception attacks. In American Control Conference (ACC), 2013, pages 3344–3349, 2013.

[14] F. Pasqualetti, R. Carli, and F. Bullo. A distributed method for state estimation and false data detection in power networks. In IEEE International Conference on Smart Grid Communications (SmartGridComm), pages 469–474, Oct 2011.

[15] F. Pasqualetti, F. Dörfler, and F. Bullo. Attack detection and identification in cyber-physical systems–Part II: Centralized and distributed monitor design. arXiv preprint arXiv:1202.6049, 2012.

[16] L. Perelman, J. Arad, N. Oliker, A. Ostfeld, and M. Housh. Water distribution systems event detection. In Complexity in Engineering (COMPENG), 2012, pages 1–3, June 2012.

[17] A. Rosich, H. Voos, and M. Darouach. Cyber-attack detection based on controlled invariant sets. In European Control Conference (ECC), pages 2176–2181, June 2014.

[18] K. Stouffer and J. F. K. Scarfone. Guide to Industrial Control Systems (ICS) Security; NIST Special Publication 800-82; pages 1-155., June 2011.

[19] SWaT: Secure Water Treatment Testbed, 2015. https://itrust.sutd.edu.sg/wp-content/uploads/sites/3/2015/11/Brief-Introduction-to-SWaT-181115.pdf.

[20] A. Wasicek, P. Derler, and E. Lee. Aspect-oriented modeling of attacks in automotive cyber-physical systems. In Design Automation Conference (DAC), 2014 51st ACM/EDAC/IEEE, pages 1–6, June 2014.

[21] Q. Zhu and T. Basar. Robust and resilient control design for cyber-physical systems with an application to power systems. In 50th IEEE Conference on Decision and Control and European Control Conference (CDC-ECC), pages 4066–4071, 2011.