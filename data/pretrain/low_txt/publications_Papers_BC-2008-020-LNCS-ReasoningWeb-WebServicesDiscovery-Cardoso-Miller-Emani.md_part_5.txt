### Registry for a Service with Input `FinanceAccount`

Let's consider a scenario where a registry is set up for a service that takes an input of type `FinanceAccount` (refer to Section 3). Suppose the registry contains only an advertisement with an input of type `Contract`. In this case, the registry would inform the user that no matching web service was found based on the search criteria. This search is based solely on a syntactic analysis.

Now, let's assume that the web services' descriptions are annotated with ontological concepts. Both `FinanceAccount` and `Contract` are annotated with concepts of the same name in the ontology shown in Figure 4 (the names are the same for simplicity; they could be different). Using this ontology, a semantically enhanced UDDI registry can leverage the ontological information to improve the search results.

In this situation, the match would return a web service because the concept `Contract` is a generalization of the concept `FinanceAccount`. Specifically, the properties of `FinanceAccount`:
- `agreementMember`
- `agreementPeriod`
- `effectiveDate`
- `insured`
- `accountHolder`
- `amountDue`

are a superset of the properties of `Contract`:
- `agreementMember`
- `agreementPeriod`
- `effectiveDate`
- `insured`

Since all the properties of `Contract` exist in `FinanceAccount`, a match is found, and a reference to the web service is returned to the user. This example demonstrates that our algorithm can match different concepts from the same ontology even when their properties do not match semantically. The example in Section 3.3 also illustrates that our algorithm can match two concepts from different ontologies even if their properties do not match syntactically.

### Business and Technical Perspectives

From a business perspective, SM-T, MWSDI, and Lumina focus on grouping services and distributing them across different registries based on domain knowledge, making it easier to locate the right services. From a technical perspective, these frameworks provide a scalable infrastructure for accessing multiple registries and enhancing current service discovery mechanisms with semantic capabilities.

We believe that to develop processes in the current network economy [45], architectures and algorithms like SM-T, MWSDI, and Lumina will drive the evolution of business interactions using web services. This infrastructure will also help web services by shifting the focus from static to more dynamic business settings.

### Steps to Discover Web Services Using Lumina

1. **Download and Install Lumina**:
   - Download and install Lumina as an Eclipse plugin.
   - Ensure Radiant is installed before installing Lumina.

2. **Interface Layout**:
   - The screen is divided into six parts: Navigator/Outline, UDDI Editor, WSDL Editor, Information List, Discovered Results, and Ontology Navigator.

3. **Load Ontology and Create Project**:
   - Follow the same steps as for Radiant to load the ontology, create a new project, and define the WSDL.

4. **Connect to a Registry**:
   - Click on the Registry dropdown menu and select a registry.
   - A window will pop up; add a new registry and connect.

5. **Publish the Business and WSDL**:
   - Click on the Publish menu and publish the business followed by the WSDL.

6. **Select Operation and Inputs**:
   - In the UDDI Editor, select the operation, input, and output according to what you want to discover.
   - Drag and drop the concept from the Ontology Navigator onto the selected elements.

7. **Discover Web Services**:
   - The selected operations or IOPEs (Input, Output, Precondition, Effect) will be displayed in the Information List.
   - Select the desired operations and click on "Discover".
   - The discovered web services will be displayed in the Discovered Results pane.

### Related Work

The discovery of services often involves determining the similarity of service properties, which are typically annotated with ontological concepts. The literature presents four distinct approaches to calculate the semantic relations among concepts:

1. **Ontology-Based Approaches** [25-27]:
   - These approaches compute the distance between two concepts in an ontology.

2. **Corpus-Based Approaches** [28-30]:
   - These methods use a corpus to establish the statistical co-occurrence of words.

3. **Information-Theoretic Approaches** [23, 31-33]:
   - These approaches consider both a corpus and an ontology, using the notion of information content from information theory.

4. **Dictionary-Based Approaches** [34, 35]:
   - These methods use a machine-readable dictionary to discover relations between concepts.

Some of these approaches have been used to deploy discovery algorithms for semantic web services. For instance, the OWL-S/UDDI Matchmaker [46] introduces semantic search into the UDDI directory by embedding an OWL-S Profile in a UDDI data structure and augmenting the UDDI registry with an OWL-S matchmaking component. The matching algorithm recognizes four degrees of match between two concepts defined in the same ontology: exact, plug-in, subsume, and fail. Unlike our approach, the OWL-S/UDDI Matchmaker searches for services based on inputs and outputs within the IOPEs, which must belong to the same ontology.

The METEOR-S [20] Web Service Annotation Framework (WSAF) allows semi-automatic matching of WSDL concepts (such as inputs and outputs) to DAML and RDF ontologies using text-based information retrieval techniques. The strength of matches (SM) is calculated using a scoring formula involving element (ElemMatch) and structure level schema (SchemaMatch) matching. However, the work presented in [20] cannot be easily adapted to our problem due to several reasons, including the lack of empirical testing and validation of weight values and the undefined function for certain ElemMatch values.

In [47], the authors present a hybrid approach to Semantic Web service matching called OWLS-MX, which extends the OWL-S/UDDI Matchmaker. Their approach complements logic-based reasoning with approximate matching based on syntactic information retrieval (IR) based similarity computations. Our approach differs in that we use q-grams for syntactic matching and Tversky’s model to compare the properties of concepts rather than the concepts themselves.

### Conclusions

In this paper, we described a semantic matching algorithm for use in UDDI registries enhanced with semantics. Our algorithm can work with web services described with WSMO and OWL-S, or annotated with SAWSDL (previously WSDL-S). Unlike previous work [46], we do not limit the classification of matching accuracy to a four-value schema (exact, plug-in, subsume, and fail). Instead, we assess the accuracy of matching with a continuous function ranging from 0 to 1. Additionally, we allow the matching of semantic web services with and without a common ontology commitment, which is crucial since it is not realistic to assume that web services will always be defined by the same ontology.

Our algorithm relies on Tversky’s feature-based similarity model to match requests with advertisements. This model considers the features or properties of ontological concepts rather than the taxonomy that defines the hierarchy of concepts. We believe that analyzing the features of concepts is fundamental when matching concepts from different ontologies, as they typically have distinct taxonomies. The matching process can be extended to include non-functional capabilities of services.

### References

1. Chinnici, R., et al.: Web Services Description Language (WSDL) Version 1.2, W3C Working Draft 24 (2003)
2. Chinnici, R., et al.: Web Services Description Language (WSDL) Version 2.0 Part 1: Core Language (2006), http://www.w3.org/TR/wsdl20/
3. UDDI. Universal Description, Discovery, and Integration (UDDI v3.0) (2005), http://www.uddi.org/
4. SOAP. Simple Object Access Protocol 1.2 (2003), http://www.w3.org/TR/soap12-part1/
5. Cardoso, J., Sheth, A.P.: Introduction to Semantic Web Services and Web Process Composition. In: Cardoso, J., Sheth, A.P. (eds.) Semantic Web Process: powering next generation of processes with Semantics and Web services, pp. 1–13. Springer, Heidelberg (2005)
6. Cardoso, J., Sheth, A.: Semantic e-Workflow Composition. Journal of Intelligent Information Systems (JIIS) 21(3), 191–225 (2003)
7. Verma, K., et al.: METEOR-S WSDI: A Scalable P2P Infrastructure of Registries for Semantic Publication and Discovery of Web Services. Journal of Information Technology and Management (ITM), Special Issue on Universal Global Integration 6(1), 17–39 (2005)
8. Curbera, F., Ehnebuske, D., Rogers, D.: Using WSDL in a UDDI Registry, Version 1.07, UDDI Best Practice, May 21 (2002), http://www.uddi.org/pubs/wsdlbestpractices-V1.07-Open-20020521.pdf (Retrieved October 12, 2006)
9. Sheth, A., Meersman, R.: Amicalola Report: Database and Information Systems Research Challenges and Opportunities in Semantic Web and Enterprises. SIGMOD Record 31(4), 98–106 (2002)
10. Smeaton, A., Quigley, I.: Experiment on Using Semantic Distance Between Words in Image Caption Retrieval. In: 19th International Conference on Research and Development in Information Retrieval SIGIR 1996, Zurich, Switzerland (1996)
11. Rodríguez, A., Egenhofer, M.: Determining Semantic Similarity Among Entity Classes from Different Ontologies. IEEE Transactions on Knowledge and Data Engineering 15(2), 442–456 (2002) (in press)
12. Klein, M., Bernstein, A.: Searching for Services on the Semantic Web Using Process Ontologies. In: International Semantic Web Working Symposium (SWWS), Stanford University, California, USA (2001)
13. Cardoso, J., et al.: Academic and Industrial Research: Do their Approaches Differ in Adding Semantics to Web Services. In: Cardoso, J., Sheth, A. (eds.) Semantic Web Process: powering next generation of processes with Semantics and Web services, pp. 14–21. Springer, Heidelberg (2005)
14. Martin, D., et al.: Bringing Semantics to Web Services: The OWL-S Approach. In: Cardoso, J., Sheth, A.P. (eds.) SWSWPC 2004. LNCS, vol. 3387. Springer, Heidelberg (2005)
15. Roman, D., et al.: WWW: WSMO, WSML, and WSMX in a nutshell. In: Mizoguchi, R., Shi, Z.-Z., Giunchiglia, F. (eds.) ASWC 2006. LNCS, vol. 4185. Springer, Heidelberg (2006)
16. Akkiraju, R., et al.: Web Service Semantics - WSDL-S (2006), http://www.w3.org/Submission/WSDL-S (Retrieved October 10, 2006)
17. Sivashanmugam, K., et al.: Framework for Semantic Web Process Composition. International Journal of Electronic Commerce (IJEC), Special Issue on Semantic Web Services and Their Role in Enterprise Application Integration and E-Commerce 9(2), 71–106 (2004-2005)
18. Farrell, J., Lausen, H.: Semantic Annotations for WSDL (2006), http://www.w3.org/2002/ws/sawsdl/spec/SAWSDL.html
19. Gomadam, K., et al.: Radiant: A tool for semantic annotation of Web Services. In: 4th International Semantic Web Conference ISWC 2005, Galway, Ireland (2005)
20. Patil, A., et al.: MWSAF - METEOR-S Web Service Annotation Framework. In: 13th Conference on World Wide Web, New York City, USA (2004)
21. Cardoso, J., Sheth, A.: Semantic Web Services, Processes and Applications. In: Jain, R., Sheth, A. (eds.) Semantic Web and Beyond: Computing for Human Experience. Springer, Heidelberg (2006)
22. Paolucci, M., et al.: Semantic Matching of Web Services Capabilities. In: Horrocks, I., Hendler, J. (eds.) ISWC 2002. LNCS, vol. 2342. Springer, Heidelberg (2002)
23. Tversky, A.: Features of Similarity. Psychological Review 84(4), 327–352 (1977)
24. Zavaracky, A.: Glossary-Based Semantic Similarity in the WordNet Ontology, in Department of Computer Science, University College Dublin, Dublin (2003)
25. Wu, Z., Palmer, M.: Verb Semantics and Lexical Selection. In: 32nd Annual Meeting of the Associations for Computational Linguistics (ACL 1994), Las Cruces, New Mexico (1994)
26. Rada, R., et al.: Development and Application of a Metric on Semantic Nets. IEEE Transactions on Systems, Man, and Cybernetics 19(1), 17–30 (1989)
27. Leacock, C., Chodorow, M.: Combining local context and WordNet similarity for word sense identification. In: Fellbaum, C. (ed.) WordNet: An Electronic Lexical Database, pp. 265–283. MIT Press, Cambridge (1998)
28. Turney, P.D.: Mining the Web for Synonyms: PMI-IR versus LSA on TOEFL. In: 12th European Conference on Machine Learning. Springer, Heidelberg (2001)
29. Keller, F., Lapata, M.: Using the Web to Obtain Frequencies for Unseen Bigrams. Computational Linguistics (2003)
30. Church, K.W., Hanks, P.: Word association norms, mutual information, and Lexicography. In: Vancouver, B.C. (ed.) 27th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics, Vancouver (1989)
31. Lin, D.: An information-theoretic definition of similarity. In: 15th International Conf. on Machine Learning. Morgan Kaufmann, San Francisco (1989)
32. Resnik, P.: Using Information Content to Evaluate Semantic Similarity in a Taxonomy. In: 14th International Joint Conference on Artificial Intelligence (1995)
33. Jiang, J., Conrath, D.: Semantic Similarity Based on Corpus Statistics and Lexical Taxonomy. In: International Conference on Computational Linguistics (ROCLINGX), Taiwan (1997)
34. Lesk, M.: Automatic sense disambiguation using machine readable dictionaries: how to tell a pine cone from an ice cream cone. In: 5th annual international conference on Systems documentation. ACM Press, New York (1986)
35. Banerjee, S., Pedersen, T.: Gloss Overlaps as a Measure of Semantic Relatedness. In: Eighteenth International Joint Conference on Artificial Intelligence, Acapulco, Mexico (2003)
36. Richardson, R., Smeaton, A.: Using WordNet in a Knowledge-Based Approach to Information Retrieval. Dublin City University/School of Computer Applications, Dublin, Ireland (1995)
37. Belew, R.K.: Finding Out About: A Cognitive Perspective on Search Engine Technology and the WWW, p. 356. Cambridge University Press, Cambridge (2000)
38. Salton, G.: Automatic Text Processing: The Transformation, Analysis and Retrieval of Information by Computer. Addison-Wesley, Massachusetts (1988)
39. UDDI. UDDI Spec. Technical Committee, UDDI Version 3.0.2, (2004), http://uddi.org/pubs/uddi_v3.htm
40. Paolucci, M., et al.: Semantic matching of Web services capabilities. In: First International Semantic Web Conference on the Semantic Web, Sardinia, Italy. LNCS. Springer, Heidelberg (2002)
41. Cardoso, J.: Quality of Service and Semantic Composition of Workflows, in Department of Computer Science, p. 215. University of Georgia, Athens (2002)
42. Jaeger, M.C., Tang, S.: Ranked matching for service descriptions using DAML-S. In: Persson, A., Stirna, J. (eds.) CAiSE 2004. LNCS, vol. 3084. Springer, Heidelberg (2004)
43. Trastour, D., Bartolini, C., Gonzalez-Castillo, J.: A Semantic Web approach to service description for matchmaking of services. In: The first Semantic Web Working Symposium, California, USA (2001)
44. Cohen, W., Ravikumar, P., Fienberg, S.: A comparison of string distance metrics for name-matching tasks. In: Kurumatani, K., Chen, S.-H., Ohuchi, A. (eds.) IJCAI-WS 2003 and MAMUS 2003. Springer, Heidelberg (2003)
45. Sheth, A.P., v.d Aalst, W., Arpinar, I.B.: Processes Driving the Networked Economy. IEEE Concurrency 7(3), 18–31 (1999)
46. Srinivasan, N., Paolucci, M., Sycara, K.: An efficient algorithm for OWL-S based semantic search in UDDI. In: Cardoso, J., Sheth, A. (eds.) Lecture Notes in Computer Science. Springer, Heidelberg (2005)
47. Klusch, M., Fries, B., Sycara, K.: Automated Semantic Web Service Discovery with OWLS-MX. In: Alonso, E., Kudenko, D., Kazakov, D. (eds.) AAMAS 2000 and AAMAS 2002. ACM Press, New York (2006)