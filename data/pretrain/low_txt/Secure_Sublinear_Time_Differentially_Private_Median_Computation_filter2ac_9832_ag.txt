### 参考文献

1. O. Goldreich, *Foundations of Cryptography: Volume 2, Basic Applications*, 2009.
2. S. Goryczka and L. Xiong, “A comprehensive comparison of multiparty secure additions with differential privacy,” *IEEE Transactions on Dependable and Secure Computing*, 2017.
3. V. Goyal, D. Khurana, I. Mironov, O. Pandey, and A. Sahai, “Do distributed differentially-private protocols require oblivious transfer?” in *Leibniz International Proceedings in Informatics (LIPIcs)*, 2016.
4. A. Gupta, K. Ligett, F. McSherry, A. Roth, and K. Talwar, “Differentially private combinatorial optimization,” in *Proceedings of the Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)*, 2010.
5. X. He, A. Machanavajjhala, C. Flynn, and D. Srivastava, “Composing differential privacy and secure computation: A case study on scaling private record linkage,” in *Proceedings of the Annual ACM Conference on Computer and Communications Security (CCS)*, 2017.
6. N. Holohan, D. J. Leith, and O. Mason, “Optimal differentially private mechanisms for randomized response,” *IEEE Transactions on Information Forensics and Security*, 2017.
7. J. Hsu, S. Khanna, and A. Roth, “Distributed private heavy hitters,” in *International Colloquium on Automata, Languages, and Programming (ICALP)*, 2012.
8. Y. Huang, D. Evans, and J. Katz, “Private set intersection: Are garbled circuits better than custom protocols?” in *Network and Distributed Systems Security Symposium (NDSS)*, 2012.
9. M. Ion, B. Kreuter, E. Nergiz, S. Patel, S. Saxena, K. Seth, D. Shanahan, and M. Yung, “Private intersection-sum protocol with applications to attributing aggregate ad conversions,” *Cryptology ePrint Archive, Report 2017/738*, 2017, [https://eprint.iacr.org/2017/738](https://eprint.iacr.org/2017/738).
10. Kaggle.com, “Walmart supply chain: Import and shipment,” [https://www.kaggle.com/sunilp/walmart-supply-chain-data/data](https://www.kaggle.com/sunilp/walmart-supply-chain-data/data), 2018, Retrieved: January 29, 2019.
11. S. P. Kasiviswanathan, H. K. Lee, K. Nissim, S. Raskhodnikova, and A. Smith, “What can we learn privately?” *SIAM Journal on Computing*, 2011.
12. N. Li, M. Lyu, D. Su, and W. Yang, “Differential privacy: From theory to practice,” *Synthesis Lectures on Information Security, Privacy, & Trust*, 2016.
13. Y. Lindell and B. Pinkas, “A proof of security of Yao’s protocol for two-party computation,” *Journal of Cryptology*, 2009.
14. D. Mazieres and D. Miller, “Source of arc4random.c.” [Online]. Available: [https://opensource.apple.com/source/Libc/Libc-1158.50.2/gen/FreeBSD/arc4random.c](https://opensource.apple.com/source/Libc/Libc-1158.50.2/gen/FreeBSD/arc4random.c)
15. A. McGregor, I. Mironov, T. Pitassi, O. Reingold, K. Talwar, and S. Vadhan, “The limits of two-party differential privacy,” in *Annual IEEE Symposium on Foundations of Computer Science (FOCS)*, 2010.
16. F. McSherry and K. Talwar, “Mechanism design via differential privacy,” in *Annual IEEE Symposium on Foundations of Computer Science (FOCS)*, 2007.
17. F. D. McSherry, “Privacy integrated queries: An extensible platform for privacy-preserving data analysis,” in *Proceedings of the Annual ACM SIGMOD International Conference on Management of Data (SIGMOD)*, 2009.
18. I. Mironov, O. Pandey, O. Reingold, and S. Vadhan, “Computational differential privacy,” in *Annual International Cryptology Conference (CRYPTO)*, 2009.
19. M. Naor, B. Pinkas, and E. Ronen, “How to (not) share a password: Privacy preserving protocols for finding heavy hitters with adversarial behavior,” in *Proceedings of the Annual ACM Conference on Computer and Communications Security (CCS)*.
20. K. Nissim, S. Raskhodnikova, and A. Smith, “Smooth sensitivity and sampling in private data analysis,” in *Proceedings of the Annual ACM Symposium on Theory of Computing (STOC)*, 2007.
21. M. Pettai and P. Laud, “Combining differential privacy and secure multiparty computation,” in *Proceedings of the Annual Computer Security Applications Conference (ACSAC)*, 2015.
22. C. P. Pflaeger and S. L. Pflaeger, *Security in Computing*, 2002.
23. P. Pullonen, D. Bogdanov, and T. Schneider, “The design and implementation of a two-party protocol suite for Sharemind 3,” *CYBERNETICA Institute of Information Security, Technical Report*, 2012.
24. M. Rabin, “How to exchange secrets by oblivious transfer,” *Technical Memo TR-81*, 1981.
25. V. Rastogi and S. Nath, “Differentially private aggregation of distributed time-series with transformation and encryption,” in *Proceedings of the Annual ACM SIGMOD International Conference on Management of Data (SIGMOD)*, 2010.
26. A. Shelat and M. Venkitasubramaniam, “Secure computation from millionaire,” in *International Conference on the Theory and Application of Cryptology and Information Security (ASIACRYPT)*, 2015.
27. A. Smith, A. Thakurta, and J. Upadhyay, “Is interaction necessary for distributed private learning?” in *IEEE Symposium on Security and Privacy*, 2017.
28. G. Sood, “California Public Salaries Data,” 2018. [Online]. Available: [https://doi.org/10.7910/DVN/KA3TS8](https://doi.org/10.7910/DVN/KA3TS8)
29. H. Takabi, S. Koppikar, and S. T. Zargar, “Differentially private distributed data analysis,” in *IEEE International Conference on Collaboration and Internet Computing (CIC)*, 2016.
30. A. D. P. Team, “Learning with privacy at scale,” 2017. [Online]. Available: [https://machinelearning.apple.com/2017/12/06/learning-with-privacy-at-scale.html](https://machinelearning.apple.com/2017/12/06/learning-with-privacy-at-scale.html)
31. M. L. G. ULB. (2018) Credit card fraud detection. [Online]. Available: [https://www.kaggle.com/mlg-ulb/creditcardfraud/data](https://www.kaggle.com/mlg-ulb/creditcardfraud/data)
32. WWDC 2016, “Engineering privacy for your users,” 2016. [Online]. Available: [https://developer.apple.com/videos/play/wwdc2016/709/](https://developer.apple.com/videos/play/wwdc2016/709/)
33. A. C.-C. Yao, “How to generate and exchange secrets,” in *Annual IEEE Symposium on Foundations of Computer Science (FOCS)*, 1986.

### 附录

#### A. 门限电路

Bellare等人[3]将门限方案形式化为算法元组G = (Gb, En, De, Ev, ev)，其中Gb是概率性的，其余均为确定性算法。字符串被定义为有限长度的位序列。

- **(F, e, d) ← Gb(1λ, f)**: 输入安全参数λ ∈ N和描述原始函数f的字符串，输出描述门限函数F、编码函数e和解码函数d的字符串。
- **X ← En(e, x)**: 编码函数，由字符串e描述，将初始输入x映射到门限输入X。
- **y ← De(d, Y)**: 解码函数，由字符串d描述，将门限输出Y映射到最终输出y。
- **Y ← Ev(F, X)**: 评估函数，由字符串F描述，将门限输入X映射到门限输出Y。
- **y ← ev(f, x)**: 评估函数，由字符串f描述，将输入x映射到输出y。ev(f,·) : {0, 1}n → {0, 1}m是希望门限化的原始函数，其中n = f.n, m = f.m依赖于f且必须在常数时间内可计算。

对门限方案有以下要求：

- **长度条件**：如果f.n = f'.n, f.m = f'.m, |f| = |f'|, (F, e, d) ∈ [(Gb(1λ, f)] 和 (F', e', d') ∈ [(Gb(1λ, f'))], 则 |F| = |F'|, |e| = |e'|, |d| = |d'|.
- **非退化条件**：设r为Gb的随机币。如果f.n = f'.n, f.m = f'.m, |f| = |f'|, (F, e, d) ∈ [(Gb(1λ, f; r))] 和 (F', e', d') ∈ [(Gb(1λ, f'; r))], 则 e = e' 且 d = d'.
- **正确性条件**：如果f ∈ {0, 1}∗, λ ∈ N, x ∈ {0, 1}f.n, 且 (F, e, d) ∈ [Gb(λ, f)], 则 De(d, Ev(F, En(e, x))) = ev(f, x).

#### B. 静态访问模式下的效用和间隙

每个参与方可以在不访问数据D的情况下计算效用（定义6），而间隙（定义7）具有静态访问模式，与（排序后）D中的元素无关，这使得间隙函数对数据是不可见的，即攻击者无法通过访问模式了解任何关于D的信息。图12展示了如何使用静态访问模式在排序后的数据D上计算效用和间隙。

#### C. 剪枝后的非递减效用

**定理5**：从[1]中引入的输入剪枝不会降低效用。

表III展示了唯一元素在剪枝前后的效用示例。例如，元素a1在剪枝前的效用为-3，在剪枝后其效用增加到-2，而b2, a3的效用保持不变。

#### D. 填充

在实际剪枝之前的预处理步骤中，数据按算法5进行填充，以使排名第k的元素位于中间位置（这是[1]中FIND-RANKED-ELEMENT的一部分）。

**算法5**：PAD算法将参与方P的数据DP填充到指定大小，使排名第k的元素位于中间位置。

**输入**：数据DP，排名k，填充值(cid:98)p

1. 对DP进行排序并保留前k个最小值
2. 用+∞填充DP直到|DP| = k
3. 用(cid:98)p填充DP直到|DP| = 2(cid:100)log2(k)(cid:101)
4. 返回DP

A调用PAD(DA, k, +∞)且B调用PAD(DB, k, -∞)时，k = (cid:100)(|DA| + |DB|)/2(cid:101)。注意，各参与方的数据大小，即|DA|, |DB|，可以通过额外的填充隐藏。

#### E. 合并实现

合并实现如算法6所示，我们使用[31, Section 5.1]中描述的比特合并器，该合并器需要一个比特列表作为输入，即单调递增然后递减（或反之亦然）的列表。比特合并递归地将列表分成两半，并比较和交换元素以完成合并。