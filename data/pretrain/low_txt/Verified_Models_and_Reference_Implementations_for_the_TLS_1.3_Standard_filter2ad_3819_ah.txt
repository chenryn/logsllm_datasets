Certainly! Below is the optimized version of the provided text, ensuring clarity, coherence, and a professional tone:

---

### References

1. **Pironti, IEEE**  
   *Title*: Implementing TLS with Verified Cryptographic Security  
   *Source*: [Online]. Available: pubs/implementing-tls-with-veriﬁed-cryptographic-security-sp13.pdf

2. **K. Bhargavan and G. Leurent**  
   *Title*: On the Practical (In-)Security of 64-bit Block Ciphers: Collision Attacks on HTTP over TLS and OpenVPN  
   *Conference*: ACM SIGSAC Conference on Computer and Communications Security (CCS), 2016  
   *Pages*: 456–467

3. **K. Bhargavan and G. Leurent**  
   *Title*: Transcript Collision Attacks: Breaking Authentication in TLS, IKE, and SSH  
   *Conference*: ISOC Network and Distributed System Security Symposium (NDSS), 2016

4. **B. Blanchet**  
   *Title*: A Computationally Sound Mechanized Prover for Security Protocols  
   *Journal*: IEEE Transactions on Dependable and Secure Computing  
   *Volume*: 5, No. 4  
   *Pages*: 193–207  
   *Year*: 2008

5. **B. Blanchet**  
   *Title*: Automatic Verification of Correspondences for Security Protocols  
   *Journal*: Journal of Computer Security  
   *Volume*: 17, No. 4  
   *Pages*: 363–434  
   *Year*: 2009

6. **B. Blanchet**  
   *Title*: Security Protocol Verification: Symbolic and Computational Models  
   *Conference*: Principles of Security and Trust (POST), 2012  
   *Pages*: 3–29

7. **B. Blanchet**  
   *Title*: Modeling and Verifying Security Protocols with the Applied Pi Calculus and ProVerif  
   *Journal*: Foundations and Trends in Privacy and Security  
   *Volume*: 1, No. 1–2  
   *Pages*: 1–135  
   *Month*: October  
   *Year*: 2016

8. **D. Bleichenbacher**  
   *Title*: Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS#1  
   *Conference*: Annual International Cryptology Conference, Lecture Notes in Computer Science, Vol. 1462  
   *Publisher*: Springer  
   *Year*: 1998  
   *Pages*: 1–12

9. **M. Bodin, A. Charguéraud, D. Filaretti, P. Gardner, S. Maffeis, D. Naudziuniene, A. Schmitt, and G. Smith**  
   *Title*: A Trusted Mechanised JavaScript Specification  
   *Conference*: ACM Symposium on the Principles of Programming Languages (POPL), 2014  
   *Pages*: 87–100

10. **D. Cadé and B. Blanchet**  
    *Title*: Proved Generation of Implementations from Computationally Secure Protocol Specifications  
    *Journal*: Journal of Computer Security  
    *Volume*: 23, No. 3  
    *Pages*: 331–402  
    *Year*: 2015

11. **S. Chaki and A. Datta**  
    *Title*: Aspier: An Automated Framework for Verifying Security Protocol Implementations  
    *Conference*: 2009 22nd IEEE Computer Security Foundations Symposium  
    *Publisher*: IEEE  
    *Year*: 2009  
    *Pages*: 172–185

12. **A. Chaudhuri**  
    *Title*: Flow: Abstract Interpretation of JavaScript for Type Checking and Beyond  
    *Conference*: ACM Workshop on Programming Languages and Analysis for Security (PLAS), 2016

13. **J.-S. Coron, Y. Dodis, C. Malinaud, and P. Puniya**  
    *Title*: Merkle-Damgård Revisited: How to Construct a Hash Function  
    *Conference*: Advances in Cryptology (CRYPTO), 2005  
    *Pages*: 430–448

14. **V. Cortier, S. Kremer, and B. Warinschi**  
    *Title*: A Survey of Symbolic Methods in Computational Analysis of Cryptographic Systems  
    *Journal*: Journal of Automated Reasoning  
    *Volume*: 46, No. 3-4  
    *Pages*: 225–259  
    *Year*: 2011

15. **C. Cremers, M. Horvat, S. Scott, and T. van der Merwe**  
    *Title*: Automated Analysis and Verification of TLS 1.3: 0-RTT, Resumption, and Delayed Authentication  
    *Conference*: IEEE Symposium on Security and Privacy (Oakland), 2016  
    *Pages*: 470–485

16. **I. B. Damgård**  
    *Title*: A Design Principle for Hash Functions  
    *Conference*: Advances in Cryptology–CRYPTO89  
    *Year*: 1989  
    *Pages*: 416–427

17. **T. Dierks and E. Rescorla**  
    *Title*: The Transport Layer Security (TLS) Protocol Version 1.2  
    *Document*: IETF RFC 5246  
    *Year*: 2008

18. **Y. Dodis, T. Ristenpart, J. Steinberger, and S. Tessaro**  
    *Title*: To Hash or Not to Hash Again? (In)Differentiability Results for H2 and HMAC  
    *Conference*: Advances in Cryptology (Crypto), 2012  
    *Pages*: 348–366

19. **D. Dolev and A. C. Yao**  
    *Title*: On the Security of Public Key Protocols  
    *Journal*: IEEE Transactions on Information Theory  
    *Volume*: 29, No. 2  
    *Pages*: 198–207  
    *Year*: 1983

20. **B. Dowling, M. Fischlin, F. Günther, and D. Stebila**  
    *Title*: A Cryptographic Analysis of the TLS 1.3 Handshake Protocol Candidates  
    *Conference*: ACM Conference on Computer and Communications Security (CCS), 2015  
    *Pages*: 1197–1210

21. **M. Fischlin, F. Günther, B. Schmidt, and B. Warinschi**  
    *Title*: Key Confirmation in Key Exchange: A Formal Treatment and Implications for TLS 1.3  
    *Conference*: IEEE Symposium on Security and Privacy (Oakland), 2016  
    *Pages*: 452–469

22. **M. Fischlin and F. Günther**  
    *Title*: Multi-Stage Key Exchange and the Case of Google’s QUIC Protocol  
    *Conference*: ACM SIGSAC Conference on Computer and Communications Security (CCS), 2014  
    *Pages*: 1193–1204

23. **S. Goldwasser, S. Micali, and R. Rivest**  
    *Title*: A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks  
    *Journal*: SIAM Journal of Computing  
    *Volume*: 17, No. 2  
    *Pages*: 281–308  
    *Month*: April  
    *Year*: 1988

24. **R. Hamilton, J. Iyengar, I. Swett, and A. Wilk**  
    *Title*: QUIC: A UDP-Based Multiplexed and Secure Transport  
    *Document*: IETF Internet Draft  
    *Year*: 2016

25. **K. E. Hickman**  
    *Title*: The SSL Protocol  
    *Document*: IETF Internet Draft  
    *URL*: https://tools.ietf.org/html/draft-hickman-netscape-ssl-00  
    *Year*: 1995

26. **T. Jager, F. Kohlar, S. Schäge, and J. Schwenk**  
    *Title*: On the Security of TLS-DHE in the Standard Model  
    *Conference*: CRYPTO 2012  
    *Pages*: 273–293  
    *Year*: 2012

27. **T. Jager, J. Schwenk, and J. Somorovsky**  
    *Title*: On the Security of TLS 1.3 and QUIC Against Weaknesses in PKCS#1 v1.5 Encryption  
    *Conference*: ACM SIGSAC Conference on Computer and Communications Security (CCS), 2015  
    *Pages*: 1185–1196

28. **N. Kobeissi, K. Bhargavan, and B. Blanchet**  
    *Title*: Automated Verification for Secure Messaging Protocols and Their Implementations: A Symbolic and Computational Approach  
    *Conference*: IEEE European Symposium on Security and Privacy (EuroS&P), 2017

29. **H. Krawczyk**  
    *Title*: Cryptographic Extraction and Key Derivation: The HKDF Scheme  
    *Conference*: Advances in Cryptology (CRYPTO), 2010  
    *Pages*: 631–648

30. **H. Krawczyk**  
    *Title*: A Unilateral-to-Mutual Authentication Compiler for Key Exchange (with Applications to Client Authentication in TLS 1.3)  
    *Conference*: ACM SIGSAC Conference on Computer and Communications Security (CCS), 2016  
    *Pages*: 1438–1450

31. **H. Krawczyk, K. G. Paterson, and H. Wee**  
    *Title*: On the Security of the TLS Protocol: A Systematic Analysis  
    *Conference*: CRYPTO 2013  
    *Pages*: 429–448  
    *Year*: 2013

32. **H. Krawczyk and H. Wee**  
    *Title*: The OPTLS Protocol and TLS 1.3  
    *Conference*: IEEE European Symposium on Security & Privacy (Euro S&P), 2016  
    *Document*: cryptology ePrint Archive, Report 2015/978

33. **R. Küsters, T. Truderung, and J. Graf**  
    *Title*: A Framework for the Cryptographic Verification of Java-Like Programs  
    *Conference*: IEEE Computer Security Foundations Symposium (CSF), 2012  
    *Pages*: 198–212

34. **A. Langley, M. Hamburg, and S. Turner**  
    *Title*: Elliptic Curves for Security  
    *Document*: IRTF RFC 7748  
    *URL*: https://tools.ietf.org/html/rfc7748  
    *Month*: January  
    *Year*: 2016

35. **X. Li, J. Xu, Z. Zhang, D. Feng, and H. Hu**  
    *Title*: Multiple Handshakes Security of TLS 1.3 Candidates  
    *Conference*: IEEE Symposium on Security and Privacy (Oakland), 2016  
    *Pages*: 486–505

36. **R. Lychev, S. Jero, A. Boldyreva, and C. Nita-Rotaru**  
    *Title*: How Secure and Quick is QUIC? Provable Security and Performance Analyses  
    *Conference*: IEEE Symposium on Security & Privacy (Oakland), 2015  
    *Pages*: 214–231

37. **U. Maurer and B. Tackmann**  
    *Title*: On the Soundness of Authenticate-Then-Encrypt: Formalizing the Malleability of Symmetric Encryption  
    *Conference*: ACM SIGSAC Conference on Computer and Communications Security (CCS), 2010  
    *Pages*: 505–515

38. **N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov, and B. Preneel**  
    *Title*: A Cross-Protocol Attack on the TLS Protocol  
    *Conference*: ACM CCS, 2012

39. **C. Meyer, J. Somorovsky, E. Weiss, J. Schwenk, S. Schinzel, and E. Tews**  
    *Title*: Revisiting SSL/TLS Implementations: New Bleichenbacher Side Channels and Attacks  
    *Conference*: 23rd USENIX Security Symposium  
    *Publisher*: USENIX Association  
    *Year*: 2014  
    *Pages*: 733–748

40. **B. Möller, T. Duong, and K. Kotowicz**  
    *Title*: This POODLE Bites: Exploiting the SSL 3.0 Fallback  
    *URL*: https://www.openssl.org/~bodo/ssl-poodle.pdf  
    *Year*: 2014

41. **T. Okamoto and D. Pointcheval**  
    *Title*: The Gap-Problems: A New Class of Problems for the Security of Cryptographic Schemes  
    *Conference*: Practice and Theory in Public Key Cryptography (PKC), 2001  
    *Pages*: 104–118

42. **K. G. Paterson, T. Ristenpart, and T. Shrimpton**  
    *Title*: Tag Size Does Matter: Attacks and Proofs for the TLS Record Protocol  
    *Conference*: ASIACRYPT, 2011  
    *Pages*: 372–389

43. **K. G. Paterson and T. van der Merwe**  
    *Title*: Reactive and Proactive Standardisation of TLS  
    *Conference*: Security Standardisation Research (SSR), 2016  
    *Pages*: 160–186

44. **M. Ray, A. Pironti, A. Langley, K. Bhargavan, and A. Delignat-Lavaud**  
    *Title*: Transport Layer Security (TLS) Session Hash and Extended Master Secret Extension  
    *Document*: IETF RFC 7627  
    *Year*: 2015

45. **E. Rescorla, M. Ray, S. Dispensa, and N. Oskov**  
    *Title*: TLS Renegotiation Indication Extension  
    *Document*: IETF RFC 5746  
    *Year*: 2010

46. **E. Rescorla**  
    *Title*: 0-RTT and Anti-Replay  
    *URL*: https://www.ietf.org/mail-archive/web/tls/current/msg15594.html  
    *Month*: March  
    *Year*: 2015

47. **E. Rescorla**  
    *Title*: [TLS] PR#875: Additional Derive-Secret Stage  
    *URL*: https://www.ietf.org/mail-archive/web/tls/current/msg22373.html  
    *Month*: February  
    *Year*: 2017

48. **B. Schmidt, S. Meier, C. Cremers, and D. Basin**  
    *Title*: Automated Analysis of Diffie-Hellman Protocols and Advanced Security Properties  
    *Conference*: IEEE Computer Security Foundations Symposium (CSF), 2012  
    *Pages*: 78–94

49. **D. Stefan**  
    *Title*: Espectro Project Description  
    *URL*: https://cseweb.ucsd.edu/~dstefan/#projects  
    *Year*: 2016

50. **N. Swamy, C. Hrițcu, C. Keller, A. Rastogi, A. Delignat-Lavaud, S. Forest, K. Bhargavan, C. Fournet, P.-Y. Strub, M. Kohlweiss, J.-K. Zinzindohoué, and S. Zanella-Béguelin**  
    *Title*: Dependent Types and Multi-Monadic Effects in F*  
    *Conference*: ACM Symposium on Principles of Programming Languages (POPL), 2016  
    *Pages*: 256–270

51. **M. Vanhoef and F. Piessens**  
    *Title*: All Your Biases Belong to Us: Breaking RC4 in WPA-TKIP and TLS  
    *Conference*: USENIX Security Symposium  
    *Year*: 2015  
    *Pages*: 97–112

52. **D. Wagner and B. Schneier**  
    *Title*: Analysis of the SSL 3.0 Protocol  
    *Conference*: USENIX Electronic Commerce  
    *Year*: 1996

53. **J. K. Zinzindohoué, E. Bartzia, and K. Bhargavan**  
    *Title*: A Verified Extensible Library of Elliptic Curves  
    *Conference*: IEEE Computer Security Foundations Symposium (CSF), 2016  
    *Pages*: 296–309

### Appendix A: Lemmas on Primitives and on the Key Schedule

We show the following properties:

- **mack<sub>H</sub>(m) = mack(H(m))** is an SUF-CMA (strongly unforgeable under chosen message attacks) MAC. Since mac = HMAC-H is a PRF, it is an SUF-CMA MAC as shown in [10], and this property is preserved by composition with a collision-resistant hash function.

- **sign<sub>sk</sub><sub>H</sub>(m) = sign<sub>sk</sub>(H(m))** is an UF-CMA signature. Since sign is an UF-CMA signature, and this property is preserved by composition with a collision-resistant hash function.

- **a<sub>fresh</sub>** is also proven.

We also prove several lemmas on the key schedule of TLS 1.3, using CryptoVerif:

- When **es** is a fresh random value, **e → hkdf-extract(es, e)** and **log 1 → derive-secret(es, etsc, log 1)** are indistinguishable from independent random functions, and **kb = hkdf-extract(es, 0len_H())** and **derive-secret(es, pbk, “”)** are indistinguishable from independent fresh random values independent from these random functions.

- When **log 1**, **derive-secret(hs, htsc, log 1) ∘ derive-secret(hs, htss, log 1)** is indistinguishable from a random function and **hkdf-extract(hs, 0len_H())** is indistinguishable from a fresh random value independent from this random function.

- When **ms** is a fresh random value, the functions **log 4 → derive-secret(ms, atsc, log 4) ∘ derive-secret(ms, atss, log 4) ∘ derive-secret(ms, ems, log 4)** and **log 7 → derive-secret(ms, rms, log 7)** are indistinguishable from independent random functions.

- When **l1, l2, l3** are pairwise distinct labels and **s** is a fresh random value, **hkdf-expand-label(s, li, “”) for i = 1, 2, 3** are indistinguishable from independent fresh random values.

All random values considered above are uniformly distributed. These properties are used as assumptions in our proof of the protocol. This modular approach considerably reduces the complexity of the games that CryptoVerif has to consider.

These results suggest that the key schedule could be simplified by replacing groups of calls to **derive-secret** that use the same key and log with a single call to **derive-secret** that would output the concatenation of several keys. The same remark also holds for calls to **hkdf-expand-label** that use the same key. This approach corresponds to the usage of expansion recommended in the formalization of HKDF [49], and would simplify the proof: some lemmas above would no longer be needed. We would also recommend replacing **ms = hkdf-extract(hs, 0len_H())** with **ms = derive-secret(hs, ms, “”):** that would be more natural since we use the PRF property of HMAC-H for this computation and not the randomness extraction. If the argument **0len_H()** may change in the future, then we would support Krawczyk’s recommendation [67] of applying **hkdf-extract** to the result of **derive-secret(hs, ms, “”)**.

### Appendix B: RefTLS Protocol State Machines

#### Client
The RefTLS client implements the composite state machine shown in Figure 7 for TLS 1.3 and TLS 1.2. Each state represents a point in the protocol where the client is either waiting for a flight of handshake messages from the server, or it has new session keys that it wishes to communicate to the record layer. Each arrow is annotated with the name of the function in the RefTLS-CORE API that implements the corresponding state transition. Each transition may involve processing a flight of incoming messages, changing the session state, and producing a flight of outgoing messages.

#### Server
The RefTLS server implements a dual state machine for TLS 1.3 and TLS 1.2, as depicted in Figure 8. The server decides which protocol version and key exchange the handshake will use, and triggers the appropriate branch in the state machine by sending a ServerHello. Like the client, each of its state transition functions corresponds either to a flight of messages or to a change of keys.

---

This version should be clearer and more professionally formatted.