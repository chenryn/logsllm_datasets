### Optimized Text

**0.3% of users writing at a collision rate of under 5%. Thus, to achieve an anonymity set of approximately 1,000,000 users with a three-server Riposte cluster and a database table of size 65,536, the time epoch must be at least 11 hours long.**

As of 2013, Twitter reported an average throughput of 5,700 140-byte tweets per second [52]. This is roughly equivalent to 5,000 of our 160-byte messages per second. With a table size of one million messages, our Riposte cluster's end-to-end throughput is 2.86 write requests per second (Figure 3). To handle the same volume of tweets as Twitter does, while maintaining anonymity set sizes on the order of hundreds of thousands of clients, we would need to increase the computing power of our cluster by a factor of approximately 1,750. Given that we are currently using only three servers, this would require approximately 5,250 servers (distributed across three non-colluding data centers) to handle the same traffic volume as Twitter. Furthermore, since the audit server primarily performs string comparisons, the system would likely need fewer audit servers than database servers, potentially reducing the total number of servers required to around 4,000.

### Related Work

Anonymity systems can generally be categorized into two types: those that provide low-latency communication and those that protect against traffic analysis attacks by a global network adversary.

Systems like Aqua [53], Crowds [71], LAP [48], ShadowWalker [59], Tarzan [31], and Tor [27] fall into the first category. They offer an anonymous proxy for real-time web browsing but do not protect against an adversary who controls the network, many of the clients, and some of the nodes on a victim’s path through the network. Providing a formal definition of anonymity for low-latency systems is challenging [49], and such definitions often do not account for the need to protect against timing attacks.

However, it is possible to combine Tor (or another low-latency anonymizing proxy) with Riposte to create a "best of both" anonymity system. In this configuration, clients would submit their write requests to the Riposte servers via the Tor network. Even if all Riposte servers colluded, they could not determine which user wrote which message without also breaking the anonymity of the Tor network.

David Chaum’s “cascade” mix networks were among the first systems designed specifically to defend against traffic-analysis attacks [15]. Since then, several mix-net-style systems have been proposed, many of which explicitly weaken their protections against a near-omnipresent adversary [74] to improve practical usability, particularly for email traffic [23]. In contrast, Riposte aims to provide strong anonymity guarantees, even at the cost of usability for interactive applications.

E-voting systems (also known as “verifiable shuffles”) offer privacy properties similar to those provided by Riposte, and some even provide stronger voting-specific guarantees such as receipt-freeness and proportionality. However, most e-voting systems cannot provide the forward security property that Riposte offers (Section III-C) [1], [18], [32], [45], [46], [65], [69].

In a typical e-voting system, voters submit their encrypted ballots to a few trustees, who collectively shuffle and decrypt them. While it is possible to repurpose e-voting systems for anonymous messaging, they typically require expensive zero-knowledge proofs or are inefficient when message sizes are large. Mix-nets that do not use zero-knowledge proofs of correctness generally do not provide privacy in the face of active attacks by a subset of the mix servers.

For example, the verifiable shuffle protocol of Bayer and Groth [5] is one of the most efficient in the literature. Their shuffle implementation, when used with an anonymity set of size N, requires 16N group exponentiations per server and data transfer O(N). Additionally, messages must be small enough to be encoded in single group elements (a few hundred bytes at most). In contrast, our protocol requires O(L) AES operations and data transfer O(√L), where L is the size of the database table. When messages are short and the writer/reader ratio is high, the Bayer-Groth mix may be faster than our system. Conversely, when messages are long and the writer/reader ratio is low (i.e., L ≈ O(N)), our system is faster.

Chaum’s Dining Cryptographers network (DC-net) is an information-theoretically secure anonymous broadcast channel [14]. A DC-net provides the same strong anonymity properties as Riposte but requires every user to participate in every run of the protocol. As the number of users grows, this quickly becomes impractical.

The Dissent [77] system introduced the idea of using partially trusted servers to make DC-nets practical in distributed networks. Dissent requires weaker trust assumptions than our three-server protocol but requires clients to send O(L) bits to each server per time epoch (compared to our O(√L)). Excluding a single disruptor in a 1,000-client deployment takes over an hour. In contrast, Riposte can exclude disruptors as fast as it processes write requests (tens to hundreds per second, depending on the database size). Recent work [20] uses zero-knowledge techniques to speed up disruption resistance in Dissent (building on ideas of Golle and Juels [44]). Unfortunately, these techniques limit the system’s end-to-end throughput to 30 KB/s, compared to Riposte’s 450+ MB/s.

Herbivore scales DC-nets by dividing users into many small anonymity sets [38]. Riposte creates a single large anonymity set, enabling every client to be anonymous among the entire set of honest clients.

Our DPF constructions extensively use prior work on private information retrieval (PIR) [16], [17], [33], [37]. Recent work demonstrates that it is possible to make theoretical PIR fast enough for practical use [25], [26], [40].

Gertner et al. [36] consider symmetric PIR protocols, where the servers prevent dishonest clients from learning more than a single row of the database per query. The problem they address is, in a way, the dual of the problem we tackle in Section V, though their techniques do not directly apply in our setting.

Ostrovsky and Shoup first proposed using PIR protocols as the basis for writing into a database shared across a set of servers [67]. However, Ostrovsky and Shoup considered only the case of a single honest client using untrusted database servers for private storage. Since many mutually distrustful clients use a single Riposte cluster, our protocol must also handle malicious clients.

Pynchon Gate [72] builds a private point-to-point messaging system from mix-nets and PIR. Clients anonymously upload messages to email servers using a traditional mix-net and download messages from the email servers using a PIR protocol. Riposte could replace the mix-nets used in the Pynchon Gate system: clients could anonymously write their messages into the database using Riposte and privately read incoming messages using PIR.

### Conclusion and Open Questions

We have presented Riposte, a new system for anonymous messaging. To the best of our knowledge, Riposte is the first system that simultaneously (1) thwarts traffic analysis attacks, (2) prevents malicious clients from anonymously disrupting the system, and (3) enables million-client anonymity set sizes. We achieve these goals through novel applications of private information retrieval and secure multiparty computation techniques. We have demonstrated Riposte’s practicality by implementing it and evaluating it with anonymity sets of over two million nodes. This work leaves open several questions for future research, including:

- Does there exist an (s, s−1)-DPF construction for s > 2 that uses only symmetric-key operations?
- Are there efficient techniques (i.e., using no public-key primitives) for achieving disruption resistance without the need for a non-colluding audit server?
- Are there DPF constructions that enable processing write requests in amortized time o(L), for a length-L database?

With the design and implementation of Riposte, we have demonstrated that cryptographic techniques can make traffic-analysis-resistant anonymous microblogging and whistleblowing more practical at Internet scale.

### Acknowledgements

We would like to thank Joe Zimmerman and David Wu for helpful discussions about distributed point functions. We would also like to thank Stephen Schwab and the staff of DeterLab for giving us access to their excellent network testbed. This work was supported by NSF, an IARPA project provided via DoI/NBC, a grant from ONR, an NDSEG fellowship, and by a Google faculty scholarship. Opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of DARPA or IARPA.

### References

[1] B. Adida, “Helios: Web-based open-audit voting.” in USENIX Security Symposium, vol. 17, 2008.
[2] B. Adida and D. Wikström, “How to shuffle in public,” in Theory of Cryptography, 2007.
[3] A. Banerjee and C. Peikert, “New and improved key-homomorphic pseudorandom functions,” in CRYPTO, 2014.
[4] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and D. Sicker, “Low-resource routing attacks against Tor,” in WPES. ACM, 2007.
[5] S. Bayer and J. Groth, “Efficient zero-knowledge argument for correctness of a shuffle,” in EUROCRYPT, 2012.
[6] K. Bennhold, “In Britain, guidelines for spying on lawyers and clients,” New York Times, p. A6, 7 Nov. 2014.
[7] D. J. Bernstein, “The Poly1305-AES message-authentication code,” in Fast Software Encryption, 2005.
[8] M. Blum, “Coin flipping by telephone: A protocol for solving impossible problems,” ACM SIGACT News, vol. 15, no. 1, pp. 23–27, 1983.
[9] D. Boneh, “The decision Diffie-Hellman problem,” in Algorithmic Number Theory, ser. Lecture Notes in Computer Science, J. P. Buhler, Ed. Springer, 1998, vol. 1423, pp. 48–63.
[10] D. Boneh, K. Lewi, H. Montgomery, and A. Raghunathan, “Key homomorphic PRFs and their applications,” in CRYPTO, 2013.
[11] J. Camenisch and M. Stadler, “Proof systems for general statements about discrete logarithms,” Dept. of Computer Science, ETH Zurich, Tech. Rep. 260, Mar. 1997.
[12] J. L. Camenisch, “Group signature schemes and payment systems based on the discrete logarithm problem,” Ph.D. dissertation, Swiss Federal Institute of Technology Zürich (ETH Zürich), 1998.
[13] R. Canetti, S. Halevi, and J. Katz, “A forward-secure public-key encryption scheme,” in EUROCRYPT, 2003.
[14] D. Chaum, “The Dining Cryptographers problem: Unconditional sender and recipient untraceability,” Journal of Cryptology, pp. 65–75, Jan. 1988.
[15] D. L. Chaum, “Untraceable electronic mail, return addresses, and digital pseudonyms,” Communications of the ACM, vol. 24, no. 2, pp. 84–90, 1981.
[16] B. Chor and N. Gilboa, “Computationally private information retrieval,” in STOC. ACM, 1997.
[17] B. Chor, E. Kushilevitz, O. Goldreich, and M. Sudan, “Private information retrieval,” Journal of the ACM, vol. 45, no. 6, pp. 965–981, 1998.
[18] M. R. Clarkson, S. Chong, and A. C. Myers, “Civitas: A secure voting system,” Cornell University, Tech. Rep. TR 2007-2081, May 2007.
[19] H. Corrigan-Gibbs and B. Ford, “Dissent: Accountable anonymous group messaging,” in CCS. ACM, October 2010.
[20] H. Corrigan-Gibbs, D. I. Wolinsky, and B. Ford, “Proactively accountable anonymous messaging in Verdict,” in USENIX Security Symposium, 2013.
[21] R. Cramer, I. Damgård, and B. Schoenmakers, “Proofs of partial knowledge and simplified design of witness hiding protocols,” in CRYPTO, 1994.
[22] G. Danezis and C. Diaz, “A survey of anonymous communication channels,” Technical Report MSR-TR-2008-35, Microsoft Research, Tech. Rep., 2008.
[23] G. Danezis, R. Dingledine, and N. Mathewson, “Mixminion: Design of a type III anonymous remailer protocol,” in Security and Privacy. IEEE, 2003.
[24] G. Danezis and A. Serjantov, “Statistical disclosure or intersection attacks on anonymity systems,” in Information Hiding Workshop, May 2004.
[25] D. Demmler, A. Herzberg, and T. Schneider, “RAID-PIR: Practical multi-server PIR,” in WPES, 2014.
[26] C. Devet and I. Goldberg, “The best of both worlds: Combining information-theoretic and computational PIR for communication efficiency,” in PETS, July 2014.
[27] R. Dingledine, N. Mathewson, and P. Syverson, “Tor: The second-generation onion router,” in USENIX Security Symposium, Aug. 2004.
[28] M. Edman and B. Yener, “On anonymity in an electronic society: A survey of anonymous communication systems,” ACM Computing Surveys, vol. 42, no. 1, p. 5, 2009.
[29] R. Fagin, M. Naor, and P. Winkler, “Comparing information without leaking it,” Communications of the ACM, vol. 39, no. 5, pp. 77–85, 1996.
[30] U. Feige, A. Fiat, and A. Shamir, “Zero-knowledge proofs of identity,” Journal of Cryptology, vol. 1, no. 2, pp. 77–94, 1988.
[31] M. J. Freedman and R. Morris, “Tarzan: A peer-to-peer anonymizing network layer,” in CCS. ACM, 2002.
[32] J. Furukawa, “Efficient, verifiable shuffle decryption and its requirement of unlinkability,” in PKC, 2004.
[33] W. Gasarch, “A survey on private information retrieval,” in Bulletin of the EATCS, 2004.
[34] B. Gellman and A. Soltani, “NSA infiltrates links to Yahoo, Google data centers worldwide, Snowden documents say,” Washington Post, Oct. 30, 2013.
[35] B. Gellman, J. Tate, and A. Soltani, “In NSA-intercepted data, those not targeted far outnumber the foreigners who are,” Washington Post, 5 Jul. 2014.
[36] Y. Gertner, Y. Ishai, E. Kushilevitz, and T. Malkin, “Protecting data privacy in private information retrieval schemes,” in STOC, 1998.
[37] N. Gilboa and Y. Ishai, “Distributed point functions and their applications,” in EUROCRYPT, 2014.
[38] S. Goel, M. Robson, M. Polte, and E. Sirer, “Herbivore: A scalable and efficient protocol for anonymous communication,” Cornell University, Tech. Rep., 2003.
[39] V. Goel, “Government push for Yahoo’s user data set stage for broad surveillance,” New York Times, p. B3, 7 Sept. 2014.
[40] I. Goldberg, “Improving the robustness of private information retrieval,” in Security and Privacy. IEEE, 2007.
[41] O. Goldreich, S. Micali, and A. Wigderson, “How to play any mental game,” in STOC. ACM, 1987.
[42] ——, “Proofs that yield nothing but their validity or all languages in NP have zero-knowledge proof systems,” Journal of the ACM, vol. 38, no. 3, pp. 690–728, 1991.
[43] S. Goldwasser, S. Micali, and C. Rackoff, “The knowledge complexity of interactive proof systems,” SIAM Journal on computing, vol. 18, no. 1, pp. 186–208, 1989.
[44] P. Golle and A. Juels, “Dining cryptographers revisited,” in EUROCRYPT, 2004.
[45] J. Groth, “A verifiable secret shuffle of homomorphic encryptions,” Journal of Cryptology, vol. 23, no. 4, pp. 546–579, 2010.
[46] J. Groth and S. Lu, “Verifiable shuffle of large size ciphertexts,” in PKC, 2007.
[47] J. Håstad, R. Impagliazzo, L. A. Levin, and M. Luby, “A pseudorandom generator from any one-way function,” SIAM Journal on Computing, vol. 28, no. 4, pp. 1364–1396, 1999.
[48] H.-C. Hsiao, T.-J. Kim, A. Perrig, A. Yamada, S. C. Nelson, M. Gruteser, and W. Meng, “LAP: Lightweight anonymity and privacy,” in Security and Privacy. IEEE, May 2012.
[49] A. Johnson, “Design and analysis of anonymous protocols,” Ph.D. dissertation, Yale University, 2007.