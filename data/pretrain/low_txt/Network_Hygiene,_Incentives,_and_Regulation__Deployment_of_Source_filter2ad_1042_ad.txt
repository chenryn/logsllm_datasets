### In-Network Spoofing and Filtering Granularity

The fact that a /64 prefix can contain 264 unique hosts suggests that within-network spoofing may be easier. To infer the filtering granularity, the client sends a series of packets with spoofed source addresses, flipping bits of the client's true address at byte boundaries. This allows us to test the nearest adjacent address outside a particular prefix mask.

A single Spoofer client may use many different IPv6 addresses in the same /64 prefix over time due to the common operating system practice of using privacy extensions to assign an ephemeral lower 64 bits to an IPv6 address [41]. While we may receive multiple test results from a single client with different ephemeral addresses, each result represents the policy of the same /64. Therefore, we aggregate clients into /64s to avoid biasing our results.

Figure 10 shows the cumulative fraction of 15,202 unique IPv6 client /64s that could not spoof arbitrary source addresses but could spoof within some limited range (as imposed by the filtering granularity). 70% of IPv6 clients were able to spoof sources within their /64 but not outside it. However, 21% of clients could spoof outside their /64, most commonly for /56 and /48. This aligns with common operator policies; some providers assign customers allocations of these common sizes [42]. In this sense, filtering in IPv6 is tighter and constrains an attacker to use addresses within their own /64 prefix, which, since it is tied to the customer, does not afford anonymity or the ability to perform random source spoofing.

Interestingly, approximately 9% of clients cannot spoof at all and are restricted to their /128. All tests from the most frequent prefixes from which these clients tested were similarly constrained to use only their assigned /128 address. Note that whereas we frequently observe IPv4 clients being tied to a single address (their /32), primarily because of facilities built into DOCSIS [8], individual IPv6 client networks are frequently allocated /64 prefixes and can use any source address within that prefix.

Via personal contact, we learned that one instance of this strict IPv6 filtering is due to an OpenVPN setup. In other cases, we hypothesize that equipment strictly enforces the binding between the assigned address (either via neighbor discovery or DHCP6) and the source address. Indeed, we confirmed the use of "IPv6 source and prefix guard" — a mechanism to enforce exactly these bindings and prevent spoofed IPv6 traffic [11] — with one network operator.

### Filtering Location

We examined 16,998 unique client tests and 5,687 distinct /64 IPv6 client prefixes to understand the location of SAV filtering in IPv6. These 16,998 tests come from implementing tracefilter [6] on the Spoofer platform and deploying it during the period from October 2017 to August 2019. Tracefilter works in a fashion similar to traceroute but reveals the location of SAV filtering.

Figure 11 shows the SAV filtering hop relative to the source for IPv4 with and without NAT, and for IPv6 client prefixes inferred by tracefilter. While clients in 35% of IPv6 prefixes hit a filter at the first hop, most (approximately 52%) were filtered at the second hop. We hypothesize that this is due to the common residential deployment scenario where the CPE is the first hop and the second hop is the provider’s router, where SAV is deployed.

While more than 50% of filtering occurs at the second hop in IPv6, 70% of IPv4 SAV is deployed at the first hop. To better understand how IPv6 and IPv4 SAV differ, we examined the difference in filter location. We found nearly 80% of the clients with IPv6 have spoofed packets filtered one hop further into the network compared to IPv4 — likely the result of the fact that residential CPE acts as a router for IPv6, rather than a NAT. Thus, the provider’s router, which is two hops from the client, performed the filtering.

### Inter-Protocol Dependence

Finally, we explore the extent to which IPv6 SAV depends on having IPv4 SAV configured properly, and vice versa. To compute the conditional probabilities, we first find the class priors and joint probability based on frequency. We then simply divide the joint probability by the prior probability per basic probability axioms. For example, the probability that IPv6 is blocked, but IPv4 is unblocked is:

\[ P(\text{v4} = \text{received} | \text{v6} = \text{blocked}) = \frac{P(\text{v4} = \text{received} \land \text{v6} = \text{blocked})}{P(\text{v6} = \text{blocked})} \]

We excluded tests where a NAT rewrote addresses and only considered tests where a client tested both IPv4 and IPv6. We aggregated the client’s IPv4 and IPv6 addresses to their /24 and /40 prefixes, and only counted each pair of IPv4, IPv6 prefix once using the most recent results for the pair. Because not only addresses but also prefixes are frequently dynamic in IPv6, we excluded tests where the IPv4 to IPv6 prefix mapping was not one-to-one.

Figure 12 shows the matrix of conditional probabilities for IPv4 and IPv6 filtering for the year ending August 2019. The probability that IPv6 was not filtered given that IPv4 SAV was in place is small, only 5%. However, the converse is not true; the probability that IPv4 was filtered given that IPv6 was not filtered is still 46%. And if IPv6 was filtered, there is a high (90%) chance that IPv4 is also filtered. Interestingly, we saw a fair amount of inconsistency in IPv6 filtering when IPv4 is unfiltered; frequently, IPv6 was filtered when IPv4 was not. These results suggest that operators conscientious enough to deploy SAV for IPv4 are savvy enough to also do so for IPv6, and some operators are protecting IPv6 before ensuring IPv4 is filtered. In contrast, prior work found that many IPv6 networks were relatively open relative to their IPv4 counterparts [13].

### Analysis of Remediation Efforts

If we receive packets with spoofed source addresses from a client at a given attachment point but do not in subsequent tests from the same attachment point, we infer that an operator has performed remediation. Ideally, one could undertake A/B testing to measure the effect of various interventions on remediation. However, we cannot do follow-up tests ourselves; we must rely on our crowdsourced volunteers to re-test the same network.

We have had three distinct remediation phases in the project. In May 2016, we began contacting networks where we had at least one test showing that the network did not filter packets with spoofed source addresses. We contacted the network abuse contact address registered in WHOIS, falling back to the technical contact if there was no abuse contact, or the technical contact registered in PeeringDB. We provide an example private notification email in Appendix A. Then in April 2018, we began publishing geographically scoped reports of remediated and still-spoofing-capable networks to regional network operator group (NOG) email lists on a monthly basis, while continuing to privately notify networks. We provide an example public notification email in Appendix B. Table 3 lists the full set we cover as of August 2019; we sent our NOG notifications using an appropriate translation for the country. Finally, we ceased sending private notifications in December 2018.

In total, we inferred 587 instances where a network hosting a Spoofer client transitioned from forwarding spoofed packets to our system to not doing so. Figure 13 shows that 24.0% of the remediations blocking outbound spoofing occurred within a day of the first test and 35.4% within a week, indicating that an operator used our system to check for and deploy SAV. 48.2% of the remediation events we inferred took at least 1 month from the time we received the spoofed packet to when we inferred an operator had deployed SAV. Prior work observed remediation to vulnerabilities such as Heartbleed [16] occurring within a shorter period of time, consistent with the self-defense, i.e., incentive-aligned, motive for such remediation. It is difficult to separate the effect of a private notification from other forces we do not observe in the 50% of cases that took more than a month to remedy; in line with prior work, we rarely received any response to our notifications.

Figure 14a shows the cumulative private notifications we sent over time; we sent bursts of private notifications at different times (November 2016, October 2017, January 2018, and September 2018). Figure 14b shows the cumulative deployment of SAV for outbound spoofed packets over time; there were no corresponding bursts of remediation observed in Figure 14b, leading us to believe the private notifications had limited impact. Further, the number of remediations we infer per month doubles from 10.6 remediations per month to 21.5 beginning in April 2018 when we started publishing reports to NOG email lists, implying that public notification is more effective in promoting the deployment of SAV. Figure 14c shows the cumulative deployment of SAV on inbound spoofed packets over time. We do not publicly reveal the SAV policy of individual networks on inbound packets for ethical reasons, as these represent a vulnerability to the network itself. Private notifications apparently had an impact on deploying SAV on inbound packets: when we stopped them in December 2018, the number of remediations reduced to one per month until April 2019. However, the burst of inbound remediation beginning in April 2019 is not connected to any activity by the project.

Of the 587 remediation events we inferred between May 2016 and August 2019, 25.2% occurred in the U.S., and 23.5% occurred in Brazil. Figure 15 shows that nearly 90% of the remediation events in Brazil occurred after we began sending monthly emails to GTER. We calculate the remediation rate by dividing the number of ASes for which we inferred a remediation event by the total number of ASes that sent a spoofed packet during the same interval. For the year prior to commencing the GTER emails to Brazilian network operators, 14 of 67 ASes (21%) remediated; in the year after, 52 of 168 ASes (31%) remediated. This improvement is supported by NIC.br’s "Program for a Safer Internet" [45], which offers training courses and lectures to support network operators to deploy security best practices in Brazil. The rate of remediation in the U.S. is lower; prior to sending the NANOG emails to U.S. network operators, 21 of 132 (16%) of ASes remediated; in the year after, 35 of 147 (24%) of ASes remediated. While the rate of remediation is lower in the U.S. than Brazil, the relative improvement in both is equivalent — approximately 50%.

Figure 16 shows two metrics that reflect the effectiveness of our system at reducing the spoofed address attack surface in the Internet. The purple line is the cumulative distribution of the widest IPv4 prefix a client can spoof after remediation. Half of the remediations resulted in the client being unable to use any address apart from their single assigned address; the remainder are covered by filters that defined a range of valid addresses at the attachment point. This class of remediation represents a total of 0.13% of the total routed IPv4 address space. Because this statistic is dominated by clients only able to use their assigned address, and it is unlikely that an operator deployed SAV on a single network port, we also plot the distribution of the longest matching prefix in BGP corresponding to the client’s IPv4 address, which sums to 3.01% of the total routed IPv4 address space.

While we inferred remediation in 352 IPv4/24, we found 4,480 IPv4/24 with no evidence of remediation — 12.7 times as many IPv4/24. Figure 17 shows the corresponding network sizes for the unremediated networks. Relative to Figure 16, the sizes of the longest matching prefixes are similar, suggesting that the size of a prefix is not a limiting factor in the operators’ ability to deploy SAV. This space sums to 8.14% of the total routed IPv4 address space. Finally, Figure 18 shows that of the /24 prefixes where we had multiple tests showing SAV had not been deployed, 21.0% had been unremediated for at least six months.

### Moving the Needle

Persistent lack of source address validation represents one of many failures of market forces to incentivize best security practices in the Internet ecosystem. Although the Internet engineering standards community has developed technical solutions to the spoofing vulnerability inherent in the IP architecture, gaps in SAV compliance still allow spoofed DoS attacks to grab headlines on a regular basis.