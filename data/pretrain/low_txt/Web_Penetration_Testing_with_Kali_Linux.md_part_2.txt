# Table of Contents

## Chapter 5: Attacking Authentication
- **dsniff and arpspoof**: 193
- **Ettercap**: 196
- **Driftnet**: 198
- **SQL Injection**: 200
- **sqlmap**: 203
- **Cross-site scripting (XSS)**: 204
  - **Testing cross-site scripting**: 205
  - **XSS cookie stealing / Authentication hijacking**: 206
- **Other tools**:
  - **urlsnarf**: 208
  - **acccheck**: 209
  - **hexinject**: 209
  - **Patator**: 210
  - **DBPwAudit**: 210
- **Summary**: 210

## Chapter 6: Web Attacks
- **Browser Exploitation Framework – BeEF**: 211
- **FoxyProxy – Firefox plugin**: 216
- **BURP Proxy**: 218
- **OWASP – ZAP**: 225
- **SET password harvesting**: 230
- **Fimap**: 234
- **Denial of Services (DoS)**: 235
  - **THC-SSL-DOS**: 236
  - **Scapy**: 238
  - **Slowloris**: 240
  - **Low Orbit Ion Cannon**: 242
- **Other tools**:
  - **DNSCHEF**: 245
  - **SniffJoke**: 246
  - **Siege**: 247
  - **Inundator**: 248
  - **TCPReplay**: 248
- **Summary**: 249

## Chapter 7: Defensive Countermeasures
- **Testing your defenses**: 252
- **Baseline security**: 253
- **STIG**: 254
- **Patch management**: 254
- **Password policies**: 256
- **Mirror your environment**:
  - **HTTrack**: 257
  - **Other cloning tools**: 259
- **Man-in-the-middle defense**: 259
- **SSL strip defense**: 261
- **Denial of Service defense**: 262
- **Cookie defense**: 263
- **Clickjacking defense**: 264
- **Digital forensics**:
  - **Kali Forensics Boot**: 266
  - **Filesystem analysis with Kali**: 267
  - **dc3dd**: 269
  - **Other forensics tools in Kali**:
    - **chkrootkit**: 271
    - **Autopsy**: 271
    - **Binwalk**: 274
    - **pdf-parser**: 275
    - **Foremost**: 275
    - **Pasco**: 275
    - **Scalpel**: 276
    - **bulk_extractor**: 276
- **Summary**: 276

## Chapter 8: Penetration Test Executive Report
- **Compliance**: 278
- **Industry standards**: 279
- **Professional services**: 280
- **Documentation**: 282
- **Report format**:
  - **Cover page**: 283
  - **Confidentiality statement**: 283
  - **Document control**: 284
  - **Timeline**: 284
  - **Executive summary**: 285
  - **Methodology**: 286
  - **Detailed testing procedures**: 288
  - **Summary of findings**: 289
  - **Vulnerabilities**: 290
  - **Network considerations and recommendations**: 292
- **Appendices**:
  - **Glossary**: 294
  - **Statement of Work (SOW)**: 295
  - **External Penetration Testing**: 296
  - **Additional SOW material**: 298
  - **Kali reporting tools**:
    - **Dradis**: 300
    - **KeepNote**: 301
    - **Maltego CaseFile**: 301
    - **MagicTree**: 301
    - **CutyCapt**: 302
    - **Sample reports**: 302
- **Summary**: 311
- **Index**: 313

---

# Preface

Kali is a Debian Linux-based penetration testing arsenal used by security professionals and others to perform security assessments. Kali offers a range of toolsets customized for identifying and exploiting vulnerabilities in systems. This book is written leveraging tools available in Kali Linux, released on March 13th, 2013, as well as other open-source applications.

"Web Penetration Testing with Kali Linux" is designed as a guide for professional penetration testers looking to include Kali in a web application penetration engagement. Our goal is to identify the best Kali tool(s) for specific assignments, provide details on using the application(s), and offer examples of what information could be obtained for reporting purposes based on expert field experience. Kali has various programs and utilities; however, this book will focus on the strongest tool(s) for a specific task at the time of publishing.

The chapters in this book are divided into tasks used in real-world web application penetration testing. Chapter 1 provides an overview of penetration testing basic concepts, professional service strategies, background on the Kali Linux environment, and setting up Kali for topics presented in this book. Chapters 2-6 cover various web application penetration testing concepts, including configuration and reporting examples designed to highlight if topics covered can accomplish your desired objective.

Chapter 7 serves as a remediation source for systems vulnerable to attacks presented in previous chapters. Chapter 8 offers reporting best practices and samples that can serve as templates for building executive-level reports. The purpose of designing the book in this fashion is to give the reader a guide for engaging a web application penetration with the best possible tool(s) available in Kali, offer steps to remediate a vulnerability, and provide how data captured could be presented in a professional manner.

---

# What This Book Covers

### Chapter 1: Penetration Testing and Setup
- **Fundamentals of Building a Professional Penetration Testing Practice**
  - Differentiating a Penetration Test from other services
  - Methodology overview
  - Targeting web applications
  - Setting up a Kali Linux environment for tasks covered in this book

### Chapter 2: Reconnaissance
- **Information Gathering**
  - Popular free tools available on the Internet
  - Information Gathering utilities available in Kali Linux

### Chapter 3: Server-Side Attacks
- **Identifying and Exploiting Vulnerabilities in Web Servers and Applications**
  - Tools available in Kali or other open-source utilities

### Chapter 4: Client-Side Attacks
- **Targeting Host Systems**
  - Social engineering
  - Exploiting host system vulnerabilities
  - Attacking passwords

### Chapter 5: Attacking Authentication
- **Managing Authentication Sessions**
  - Compromising how data is stored on host systems
  - Man-in-the-middle attack techniques
  - Briefly touches on SQL and Cross-Site Scripting attacks

### Chapter 6: Web Attacks
- **Exploiting Web Servers and Compromising Web Applications**
  - Browser exploitation
  - Proxy attacks
  - Password harvesting
  - Denial of Service techniques

### Chapter 7: Defensive Countermeasures
- **Best Practices for Hardening Web Applications and Servers**
  - Security baselines
  - Patch management
  - Password policies
  - Defending against attack methods covered in previous chapters
  - Focused forensics section

### Chapter 8: Penetration Test Executive Report
- **Best Practices for Developing Professional Post-Penetration Testing Service Reports**
  - Adding value to your deliverable
  - Document formatting
  - Templates for professional reports

---

# What You Need for This Book

Readers should have a basic understanding of web applications, networking concepts, and penetration testing methodology. This book includes detailed examples of how to execute an attack using tools offered in Kali Linux and other open-source applications. Experience with previous versions of Backtrack or similar programs is beneficial but not required.

Hardware requirements for building a lab environment and setting up the Kali Linux arsenal are covered in Chapter 1, "Penetration Testing and Setup."

---

# Who This Book Is For

This book is intended for professional penetration testers or others looking to maximize Kali Linux for a web server or application penetration testing exercise. If you are looking to identify how to perform a penetration test against web applications and present findings to a customer in a professional manner, then this book is for you.

---

# Conventions

- **Code words in text**: "For example, you can call the profile `My First Scan` or anything else you would like."
- **Block of code**:
  ```javascript
  document.write("")
  ```
- **Command-line input or output**:
  ```bash
  sqlmap -u http://www.drchaous.com/article.php?id=5 -T tablesnamehere -U test --dump
  ```
- **New terms and important words**: **Bold**
- **Screen elements**: "Soon as we click on the Execute button, we receive a SQL injection"
- **Warnings or important notes**: Boxed
- **Tips and tricks**: Boxed

---

# Reader Feedback

Feedback from our readers is always welcome. Let us know what you think about this book—what you liked or may have disliked. Reader feedback is important for us to develop titles that you really get the most out of.

To send us general feedback, simply send an e-mail to PI:EMAIL, and mention the book title via the subject of your message.

If there is a topic that you have expertise in and you are interested in either writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).

---

# Customer Support

Now that you are the proud owner of a Packt book, we have a number of things to help you get the most from your purchase.

### Errata

Although we have taken every care to ensure the accuracy of our content, mistakes do happen. If you find a mistake in one of our books—maybe a mistake in the text or the code—we would be grateful if you would report this to us. By doing so, you can save other readers from frustration and help us improve subsequent versions of this book.

If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata), selecting your book, clicking on the errata submission form link, and entering the details of your errata. Once your errata are verified, your submission will be accepted, and the errata will be uploaded on our website or added to any list of existing errata under the Errata section of that title. Any existing errata can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).

### Piracy

Piracy of copyright material on the Internet is an ongoing problem across all media. At Packt, we take the protection of our copyright and licenses very seriously. If you come across any illegal copies of our works, in any form, on the Internet, please provide us with the location address or website name immediately so that we can pursue a remedy.

Please contact us at PI:EMAIL with a link to the suspected pirated material. We appreciate your help in protecting our authors and our ability to bring you valuable content.

### Questions

You can contact us at PI:EMAIL if you are having a problem with any aspect of the book, and we will do our best to address it.

---

# Penetration Testing and Setup

Many organizations offer security services and use terms such as security audit, network or risk assessment, and penetration test with overlapping meanings. By definition, an audit is a measurable technical assessment of a system(s) or application(s). Security assessments are evaluations of risk, meaning services used to identify vulnerabilities in systems, applications, and processes.

Penetration testing goes beyond an assessment by evaluating identified vulnerabilities to verify if the vulnerability is real or a false positive. For example, an audit or an assessment may utilize scanning tools that provide a few hundred possible vulnerabilities on multiple systems. A penetration test would attempt to attack those vulnerabilities in the same manner as a malicious hacker to verify which vulnerabilities are genuine, reducing the real list of system vulnerabilities to a handful of security weaknesses. The most effective penetration tests are those that target a very specific system with a very specific goal. Quality over quantity is the true test of a successful penetration test. Enumerating a single system during a targeted attack reveals more about system security and response time to handle incidents than a wide-spectrum attack. By carefully choosing valuable targets, a penetration tester can determine the entire security infrastructure and associated risk for a valuable asset.

**Penetration testing does not make networks more secure!**

This is a common misinterpretation and should be clearly explained to all potential customers. Penetration testing evaluates the effectiveness of existing security. If a customer does not have strong security, they will receive little value from penetration testing services. As a consultant, it is recommended that penetration testing services are offered as a means to verify security for existing systems once a customer believes they have exhausted all efforts to secure those systems and are ready to evaluate if there are any existing gaps in securing those systems.

Positioning a proper scope of work is critical when selling penetration testing services. The scope of work defines what systems and applications are being targeted as well as what toolsets may be used to compromise vulnerabilities that are found. Best practice is working with your customer during a design session to develop an acceptable scope of work that doesn't impact the value of the results.

"Web Penetration Testing with Kali Linux—the next generation of BackTrack—is a hands-on guide that will provide you step-by-step methods for finding vulnerabilities and exploiting web applications. This book will cover researching targets, identifying and exploiting vulnerabilities in web applications as well as clients using web application services, defending web applications against common attacks, and building penetration testing deliverables for professional services practice. We believe this book is great for anyone who is interested in learning how to become a penetration tester, users who are new to Kali Linux and want to learn the features and differences in Kali versus BackTrack, and seasoned penetration testers who may need a refresher or reference on new tools and techniques."

This chapter will break down the fundamental concepts behind various security services as well as guidelines for building a professional penetration testing practice. Concepts include differentiating a penetration test from other services, methodology overview, and targeting web applications. This chapter also provides a brief overview of setting up a Kali Linux testing or real environment.

### Web Application Penetration Testing Concepts

A web application is any application that uses a web browser as a client. This can be a simple message board or a very complex spreadsheet. Web applications are popular based on ease of access to services and centralized management of a system used by multiple parties. Requirements for accessing a web application can follow industry web browser client standards, simplifying expectations from both the service providers and the hosts accessing the application.

Web applications are the most widely used type of applications within any organization. They are the standard for most Internet-based applications. If you look at smartphones and tablets, you will find that most applications on these devices are also web applications. This has created a new and large target-rich surface for security professionals as well as attackers exploiting those systems.

Penetration testing web applications can vary in scope since there is a vast number of system types and business use cases for web application services. The core web application tiers, which are hosting servers, accessing devices, and data depository, should be tested along with communication between the tiers during a web application penetration testing exercise.

An example for developing a scope for a web application penetration test is testing a Linux server hosting applications for mobile devices. The scope of work at a minimum should include evaluating the Linux server (operating system, network configuration, etc.), applications hosted from the server, how systems and users authenticate, client devices accessing the server, and communication between all three tiers. Additional areas of evaluation that could be included in the scope of work are how devices are obtained by employees, how devices are used outside of accessing the application, the surrounding network(s), maintenance of the systems, and the users of the systems. Some examples of why these other areas of scope matter are having the Linux server compromised by permitting connection from a mobile device infected by other means or obtaining an authorized mobile device through social media to capture confidential information.

We have included templates for scoping a web application penetration in Chapter 8, "Penetration Test Executive Report." Some deliverable examples in this chapter offer checkbox surveys that can assist with walking a customer through possible targets.