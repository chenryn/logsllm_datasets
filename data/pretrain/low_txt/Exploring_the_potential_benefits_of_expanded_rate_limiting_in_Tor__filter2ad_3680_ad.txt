### Improved Text

**Traffic Management and Latency Reduction**

Over constantly busy circuits, the system effectively reduces latency for more interactive applications. The scheduler has been integrated into Tor. Unlike approaches that prioritize interactive traffic by rearranging schedules, Tortoise employs active throttling for traffic shaping. These two techniques are orthogonal, meaning EWMA (Exponentially Weighted Moving Average) and Tortoise can be simultaneously applied to enhance performance.

**Enhanced Multiplexing**

Reardon and Goldberg have noted that Tor's TCP multiplexing techniques significantly contribute to network latency. They suggest tunneling TCP connections of DTLS (Datagram Transport Layer Security) packets to mitigate interference among multiplexed Tor circuits [25]. Similarly, Mathewson has explored using SCTP (Stream Control Transmission Protocol) for Tor multiplexing [16]. In contrast, Tortoise imposes strict rate limits on all non-contributing clients. Combining Tortoise with these multiplexing strategies should provide additional benefits by reducing traffic load and alleviating congestion.

**Relay Selection and Performance**

Tor uses a bandwidth-weighted relay selection strategy, where the probability of a relay being chosen is proportional to its advertised bandwidth [8]. Snader and Borisov proposed a refinement that allows senders to improve path performance at the cost of anonymity [28]. Murdoch later demonstrated that Tor’s current strategy provides both good anonymity and performance [20]. Sherr et al. argue that path selection based on other metrics, such as latency or loss, can offer performance and anonymity benefits [26, 27].

However, Dingledine and Murdoch [10] point out that the primary cause of Tor’s slowness is likely due to congestion from file sharing. While the above relay selection techniques may improve performance or anonymity in less congested networks, they may not be effective in the current Tor network. Tortoise is agnostic to clients' relay selection algorithms and can complement these approaches by reducing congestion and allowing higher-performing and more flexible anonymous routes.

**Incentive Schemes**

Tortoise is similar to techniques that incentivize the operation of Tor relays. For example, in PAR [2], relays earn coins that can be spent on fast paths, but this approach faces scalability issues due to frequent authentication with a central bank. Jansen et al. introduced BRAIDS, which encourages users to run relays by segregating traffic into three service classes, each with specific performance properties [14]. BRAIDS uses a ticket model, where tickets can be exchanged for higher-performing anonymous paths, rewarding relay operators with better performance.

Like BRAIDS, Tortoise offers differentiated service by enforcing different rate limits for users based on whether they run a Tor router, providing an incentive to operate relays. However, unlike BRAIDS, which requires a partially trusted offline bank, Tortoise is fully backward-compatible with the existing Tor network, can be incrementally deployed, and does not require centralized structures.

Ngan et al. proposed a system where cells from circuits are marked with a "gold star" if they originate from a STABLE router [22]. This system showed significant advantages for cooperating nodes under heavy load. While the gold star system prioritizes traffic at each hop, Tortoise checks only at network ingress points and gives all traffic equal priority once it passes the first hop. Additionally, the gold star scheme requires modified software at each hop, whereas Tortoise only requires guard nodes to be aware of the rate limiting.

**Adaptive Throttling**

A September 2010 Tor blog post [6] discussed the effectiveness of per-connection rate limits in reducing the impact of bandwidth-intensive connections. The author confirmed that setting rate limits could throttle large transfers while minimizing the impact on most web clients. Some commenters argued that such measures would not help the network because clients could avoid rate limiting by running a relay from the same IP address. Our work, however, takes the opposite view: a bulk client running a relay to achieve faster speeds is not only acceptable but also beneficial for the network as a whole.

**Conclusion**

This paper proposes Tortoise, a backward-compatible extension to Tor that applies per-connection rate limits at ingress points. By carefully tuning these limits, our results indicate that Tortoise imposes little performance penalty on most web clients while providing incentives for high-bandwidth clients to operate their own relays. Tortoise's benefits depend on attracting additional relays. By enforcing strict rate limits and exempting relay operators, we argue that high-bandwidth clients will be motivated to contribute a fraction of their bandwidth to the Tor network. Emulation results show that even a small percentage of clients running relays can significantly improve network performance and capacity. For instance, if 4% of clients operate relays, the network experiences a 32% improvement in effective capacity and is better equipped to handle additional load.

**Acknowledgements**

We thank the anonymous reviewers for their feedback and Kevin Bauer for thoughtful discussions. This research was supported by DARPA SAFER award N66001-11-C-4020 and NSF grant CNS-1064986. Any opinions, findings, and conclusions expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies.

**References**

[1] Alexa: The Web Information Company. Top Sites. http://www.alexa.com/topsites. Retrieved May 13, 2011.
[2] E. Androulaki, M. Raykova, S. Srivatsan, A. Stavrou, and S. Bellovin. PAR: Payment for Anonymous Routing. In Privacy Enhancing Technologies Symposium (PETS), 2008.
[3] K. Bauer, M. Sherr, D. McCoy, and D. Grunwald. ExperimenTor: A Testbed for Safe and Realistic Tor Experimentation. In USENIX Workshop on Cyber Security Experimentation and Test (CSET), 2011.
[4] S. L. Blond, P. Manils, A. Chaabane, M. A. Kaafar, A. Legout, C. Castellucia, and W. Dabbous. De-anonymizing BitTorrent Users on Tor (poster). In USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2010.
[5] Y. Chen, R. Sion, and B. Carbunar. XPay: Practical Anonymous Payments for Tor Routing and Other Networked Services. In ACM Workshop on Privacy in the Electronic Society (WPES), 2009.
[6] R. Dingledine. Research Problem: Adaptive Throttling of Tor Clients by Entry Guards. http://preview.tinyurl.com/3tcyaem. Retrieved May 24, 2011.
[7] R. Dingledine. Bittorrent Over Tor Isn’t a Good Idea. https://blog.torproject.org/blog/bittorrent-over-tor-isnt-good-idea, April 2010.
[8] R. Dingledine and N. Mathewson. Tor Path Specification. http://www.torproject.org/svn/trunk/doc/spec/path-spec.txt, January 2008.
[9] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The Second-Generation Onion Router. In USENIX Security Symposium (USENIX), 2004.
[10] R. Dingledine and S. Murdoch. Performance Improvements on Tor, or, Why Tor is Slow and What We’re Going to Do About It. https://svn.torproject.org/svn/projects/roadmaps/2009-03-11-performance.pdf, March 2009.
[11] J. R. Douceur. The Sybil Attack. In International Workshop on Peer-to-Peer Systems (IPTPS), 2002.
[12] F. Hernández-Campos, K. Jeffay, and F. Smith. Tracking the Evolution of Web Traffic: 1995-2003. In Modeling, Analysis and Simulation of Computer Telecommunications Systems (MASCOTS), 2003.
[13] A. Hintz. Fingerprinting Websites Using Traffic Analysis. In Privacy Enhancing Technologies Symposium (PETS), 2003.
[14] R. Jansen, N. Hopper, and Y. Kim. Recruiting New Tor Relays with BRAIDS. In ACM Conference on Computer and Communications Security (CCS), 2010.
[15] K. Loesing. Measuring the Tor Network: Evaluation of Client Requests to the Directories. Technical report, Tor Project, June 2009.
[16] N. Mathewson. Evaluating SCTP for Tor. http://archives.seul.org/or/dev/Sep-2004/msg00002.html, September 2004. Listserv posting.
[17] D. McCoy, K. Bauer, D. Grunwald, T. Kohno, and D. Sicker. Shining Light in Dark Places: Understanding the Tor Network. In Privacy Enhancing Technologies Symposium (PETS), 2008.
[18] R. C. Merkle. Secure Communications over Insecure Channels. Communications of the ACM, 21:294–299, April 1978.
[19] S. J. Murdoch. Hot or Not: Revealing Hidden Services by Their Clock Skew. In ACM Conference on Computer and Communications Security (CCS), 2006.
[20] S. J. Murdoch and R. N. M. Watson. Metrics for Security and Performance in Low-Latency Anonymity Systems. In Privacy Enhancing Technologies Symposium (PETS), 2008.
[21] NetIndex Source Data. http://netindex.com/source-data/. Retrieved May 26, 2011.
[22] T.-W. J. Ngan, R. Dingledine, and D. Wallach. Building Incentives into Tor. In Financial Cryptography and Data Security, 2010.
[23] M. Perry. Tips for Running an Exit Node with Minimal Harassment. https://blog.torproject.org/blog/tips-running-exit-node-minimal-harassment. Retrieved May 16, 2011.
[24] M. Perry. Computing Bandwidth Adjustments. Proposal 161, Tor Project, 2009.
[25] J. Reardon and I. Goldberg. Improving Tor using a TCP-over-DTLS Tunnel. In USENIX Security Symposium (USENIX), 2009.
[26] M. Sherr, M. Blaze, and B. T. Loo. Scalable Link-Based Relay Selection for Anonymous Routing. In Privacy Enhancing Technologies Symposium (PETS), August 2009.
[27] M. Sherr, A. Mao, W. R. Marczak, W. Zhou, B. T. Loo, and M. Blaze. A3: An Extensible Platform for Application-Aware Anonymity. In Network and Distributed System Security Symposium (NDSS), 2010.
[28] R. Snader and N. Borisov. A Tune-up for Tor: Improving Security and Performance in the Tor Network. In Network and Distributed System Security Symposium (NDSS), 2008.
[29] C. Tang and I. Goldberg. An Improved Algorithm for Tor Circuit Scheduling. In ACM Conference on Computer and Communications Security (CCS), 2010.
[30] Tor Project, Inc. Tor Directory Protocol, Version 3, 2010. https://git.torproject.org/checkout/tor/master/doc/spec/dir-spec.txt.
[31] A. Vahdat, K. Yocum, K. Walsh, P. Mahadevan, D. Kosti´c, J. Chase, and D. Becker. Scalability and Accuracy in a Large-scale Network Emulator. SIGOPS Oper. Syst. Rev., 36:271–284, December 2002.
[32] S. Zander and S. J. Murdoch. An Improved Clock-Skew Measurement Technique for Revealing Hidden Services. In USENIX Security Symposium (USENIX), 2008.
[33] Zona Publishing. The Need for Speed II. Zona Market Bulletin, 5, April 2001.