### 3. Data Processing
To complement or replace the corresponding raw data signals, sums and derivatives were generated. The combination of measured and derived signals resulted in 100 correlated signals used for modeling and monitoring analysis.

### 4. Analytical Results
The following section describes two examples of the results obtained from the analysis.

**Figure 2: August 2000 Latch Contention Event**
- **Description**: This figure illustrates several actual signal values, estimates, and alert patterns for a one-hour window before and a half-hour window after a latch contention event that occurred in August 2000.
- **Event Start**: The top three sub-plots represent the three canary wait-time variables (signals 54-56), with the event starting at \( t = 54 \) minutes. Here, \( t = 0 \) is an arbitrary time corresponding to the beginning of the viewed window.
- **Alerts Prior to Latch**: Several signals (60, 62, and 70 from the "ao" group, and 93 and 100 from the "at" group) alerted just prior to the latch. Approximately a half-hour before the latch, signals 11 and 14 from the "ac" group alerted, indicating higher-than-expected values. Signal 61 from the "ao" group also showed a spike.
- **Deviation from Estimates**: Signal 14 deviated significantly from its estimated value between \( t = 22 \) and \( t = 26 \) minutes, while signal 11 deviated from its estimate starting at \( t = 23 \) minutes and alerted from \( t = 26 \) to \( t = 28 \) minutes.
- **Marked Times**: Lines are drawn across the plots at \( t = 22 \) minutes (onset of alerts) and \( t = 54 \) minutes (onset of latch).

**Figure 3: October 2000 Latch Contention Event**
- **Description**: This figure shows data for a two-hour window before and a one-hour window after a latch contention event that occurred in October 2000.
- **Event Start**: The top three sub-plots represent the three canary wait-time variables, with the event beginning at \( t = 127 \) minutes. Here, \( t = 0 \) is an arbitrary time.
- **Alerts Prior to Latch**: Several signals (59, 62, and 70 from the "ao" group, 35 from the "ai" group, and 90, 91, and 98 from the "at" group) began to alert a few minutes before the latch (at \( t = 112 \) minutes) and continued through the event. Individual alerts were also observed around \( t = 80 \) minutes and a few around \( t = 43 \) minutes.
- **Early Alerts**: Nearly two hours before the event, from \( t = 17 \) to \( t = 42 \) minutes, signal 44 from the "aj" group showed constant alerts as the actual value was significantly lower than the estimate. From \( t = 30 \) to \( t = 43 \) minutes, signal 48 from the "ak" group and signals 65 and 67 from the "ao" group also alerted due to abnormally high values.
- **Marked Times**: Lines are drawn across the plots at \( t = 17 \) minutes (onset of alerts) and \( t = 127 \) minutes (onset of latch).

### 5. Discussion
Empirical models were created based on time periods spanning weeks with no latching events. These models predict most monitored signals with very high accuracy. Test results show that 13 variables consistently demonstrate early warning, ranging from 5 minutes (high consistency) to 2 hours (low consistency) prior to a latch contention hang. Seven other variables occasionally demonstrated early warning.

The signals that alerted were related to:
- Concurrent Manager (from group "ac")
- Total Free Memory in Share Pool (sum "ai")
- Disk Reads grouped by size (from group "ak")
- Latch Misses (group "ao")
- DB Statistics: Physical Read/Write Rates (derivatives from group "at")
- Ratio of Parse Time Elapsed to Parse Time CPU (derived from "at")

Each time the eCMTM provided early warning, signals from the "ai," "ao," and "at" groups demonstrated alerts prior to the latch event. We speculate that the relationship between total free memory, latch misses, and database statistics may be relevant to increased availability and quality-of-service performance for the server.

**Utilizing Early Warning Information**:
- **Avoiding Downtime**: Early warning could help avoid unnecessary downtime caused by a latch contention event. Once a latch contention begins, a shared memory pool flush can disrupt service for up to 30 minutes. Early warning would allow administrators to conduct a preemptive flush, reducing the duration of transaction interference from 30 minutes (during a hang) to 8 minutes (prior to a hang).
- **Economic Impact**: Assuming at least 5 minutes of eCMTM alerts are required for an administrator to acknowledge notification, at least two of the events investigated here could have been avoided. For a 22-minute reduction of denied service, at a near-peak time processing $100k per minute in booking, shipping, and billing orders, approximately $4.4M of transaction interference may have been avoided. The actual dollar amount saved is difficult to measure, but the impact on reliability, performance, and productivity is evident.

**Study Feasibility**:
- **Blind Study**: The investigation was conducted as a "blind study" by SmartSignal to determine how well their off-the-shelf tool would perform with raw signals treated as a black box system. No eCMTM model optimization was performed.
- **False Alarms**: No false alarms were obtained by eCMTM in this pilot investigation. Although there were some individual, uncorrelated SSCADI alerts on individual signals, there were no simultaneous multiple-parameter alarms that would have triggered a premature rejuvenation in a real-time implementation.
- **Advantages of Multivariate Pattern Recognition**: Compared to conventional threshold-based methods, multivariate pattern recognition avoids unnecessary compromise between detection sensitivity and false alarms, allowing the surveillance system architect to independently specify the desired false-alarm and missed-alarm probabilities. This feature makes the integrated system amenable to formal reliability analysis by advanced tools such as SHARPE [12].

### 6. Conclusions
Software aging is a transient phenomenon that affects computing systems, causing degradation in performance and potential hangs, panics, or crashes. This study explored the feasibility and practicability of using advanced statistical pattern recognition to proactively detect incipient conditions leading to software aging. The techniques embodied in the commercially available tool SmartSignal eCMTM were applied to a complex software aging mechanism, latch contention in large OLTP DBMS servers. The eCMTM results demonstrate a significant early warning capability from 5 minutes to 2 hours prior to a latch contention fault, without false alarms. Several parameters repeatedly showed abnormal signal deviation prior to the fault, particularly related to total free memory, latch misses, and database statistics. Early warning of an incipient latch contention hang may allow operators to flush the system prior to a hang, reducing downtime by as much as 22 minutes per event. For the data analyzed in this study covering 5 months of time, we calculate that as much as $4.4M of transaction interference may have been avoided by using the SmartSignal eCMTM equipment condition monitoring system. The presented empirical modeling approach, using early warning fault detection systems applied to complex software aging phenomena, is an important first step towards automated, real-time software aging and rejuvenation algorithms for enhancing the availability and quality of service for future eCommerce data centers.

### 7. References
[1] SmartPartner Magazine, September 18, 2000.
[2] K. Vaidyanathan, R. E. Harper, S. W. Hunter, and K. S. Trivedi, "Analysis and Implementation of Software Rejuvenation in Cluster Systems," ACM Sigmetrics 2001/Performance 2001, June 2001.
[3] K. S. Trivedi, K. Vaidyanathan, and K. Goseva-Popstojanova, "Modeling and Analysis of Software Aging and Rejuvenation," IEEE Annual Simulation Symposium, April 2000.
[4] T. Dohi, K. Goseva-Popstojanova, and K. Trivedi, "Analysis of Software Cost Models with Rejuvenation," IEEE International Symposium on High Assurance Systems Engineering (HASE 2000), November 2000.
[5] W. Yurcik and D. Doss, "Achieving Fault-Tolerant Software with Rejuvenation and Reconfiguration," IEEE Software, pp. 48-52, July/August 2001.
[6] K. C. Gross, R. M. Singer, S. W. Wegerich, J. P. Herzog, R. VanAlstine, and F. Bockhorst, "Application of a Model-based Fault Detection System to Nuclear Plant Signals," Proceedings, Intelligent System App. to Power Systems (ISAP '97), Seoul, Korea, July 6-10, 2001.
[7] R. M. Singer, K. C. Gross, J. P. Herzog, R. W. King, and S. Wegerich, "Model-based Nuclear Power Plant Monitoring and Fault Detection: Theoretical Foundations," Proceedings, Intelligent System App. to Power Systems (ISAP '97), Seoul, Korea, July 6-10, 2001.
[8] K. C. Gross, S. Wegerich, and R. M. Singer, "New Artificial Intelligence Technique Detects Instrument Faults Early," Power Magazine, (42) no. 6, pp. 89-95, 1998.
[9] J. W. Hines, A. Gribok, and B. Rasmussen, "On-Line Sensor Calibration Verification: A Survey," Presented at the 14th International Congress and Exhibition on Condition Monitoring and Diagnostic Engineering Management, Manchester, England, September 2001.
[10] W. Nieman and R. Singer, "Detection of Incipient Signal or Process Faults in a Co-Generation Plant Using the Plant ECM System," Proceedings, Power Plant Surveillance and Diagnostics, Halden, Norway, August 2001.
[11] S. Wegerich, R. Singer, J. Herzog, and A. Wilks, "Challenges Facing Equipment Condition Monitoring Systems," Proceedings, Maintenance and Reliability Conference (MARCON), Gatlinburg, TN, May 6-9, 2001.
[12] R. A. Sahner, K. S. Trivedi, and A. Puliafito, "Performance and Reliability Analysis of Computer Systems using the SHARPE Software Package," Kluwer Academic Pub., 1995.