# GoCast: Fast and Dependable Group Communication

## Figures and Analysis

### Figure 5. Adaptation of the Overlay and the Tree (1,024 Nodes)

**Figure 5(a): Node Degree Distribution Over Time**

- **Initial State (0 seconds)**: The node degrees vary significantly, with only 22% of nodes having the target degree of six.
- **After 5 seconds**: 57% of nodes have a degree of six.
- **After 500 seconds**: 60% of nodes have a degree of six, and the average node degree is 6.4.

Under the GoCast maintenance protocols, node degrees converge quickly, improving the overall structure of the overlay network.

**Figure 5(b): Average Latency of Overlay and Tree Links Over Time**

- **Initial Phase (0-60 seconds)**: The latency of overlay links improves rapidly as high-latency links are replaced with low-latency ones.
- **After 60 seconds**: Improvement slows down as it becomes more difficult for nodes to find better neighbors.
- **Tree Links**: The latency of tree links is consistently lower than that of overlay links, averaging 15.5ms after 100 seconds, compared to 91ms for random nodes.

The quality of tree links contributes significantly to the superior performance of GoCast in message propagation.

### Figure 6. Largest Component After Node Failures

- **Impact of Random Links on Resilience**: Varying the ratio of failed nodes from 5% to 50%, we observe:
  - **Without Random Links**: The overlay is already partitioned even without any failures.
  - **With One Random Link**: The overlay remains connected even after 25% of nodes fail.
  - **With Four Random Links**: The difference in resilience is small, justifying the use of one random link per node.

## Simulation Results Summary

1. **Convergence to Stable State**: Starting with a random structure, the overlay quickly converges to a stable state under the adaptation protocols.
2. **Latency and Random Links**: The average latency of overlay links grows almost linearly with the number of random links, supporting the use of one random link per node.
3. **Scalability**: The diameter of the overlay increases from 6 hops to 10 hops as the system size grows from 256 to 8,192 nodes.
4. **Traffic Reduction**: Compared to a push-based gossip protocol with a fanout of 5, GoCast reduces traffic on bottleneck network links by a factor of 4-7.
5. **Message Delay**: Increasing the gossip fanout from 5 to 9 reduces message delay by only about 5%, and further increasing it to 15 has virtually no impact.

## Related Work

### Araneola [12] and Bimodal Multicast [2]

- **Araneola**:
  - Organizes nodes into an overlay network and runs gossip protocols between overlay neighbors.
  - Propagates multicast messages through gossips exchanged between overlay neighbors.
  - No tight control on the number of nearby neighbors.
  - At least half of the overlay links are random links.

- **Bimodal Multicast**:
  - Disseminates messages in two phases: best-effort unreliable multicast and gossips between random nodes.
  - Gossips message summaries between random nodes, which can be slow and impose high loads on network links.
  - Uses a manually configured hierarchy for unreliable multicast, while GoCast automatically creates and adapts the tree.

### Other Protocols

- **Directional Gossip [11]**: Addresses the obliviousness of gossip protocols to network topology but does not specify how to construct and maintain the graph.
- **SRM [7] and RMTP [10]**: Use message retransmissions to improve reliability.
- **Narada [3]**: Builds a mesh topology of all multicast members and computes a multicast spanning tree for each source.
- **NICE [1]**: Explicitly forms the multicast tree without building a mesh.

## Conclusions

GoCast enhances tree-based overlay multicast with gossips exchanged between overlay neighbors, achieving both stable throughput and fast delivery of multicast messages. Key contributions include:

- Enhancing tree-based overlay multicast with gossips.
- Suggesting that using one random link per node is almost as robust as using multiple random links.
- Developing an overlay adaptation protocol that produces a proximity-aware overlay with tightly controlled node degrees.
- Evaluating gossip protocols using large-scale real Internet topology and latency data.

GoCast delivers fast and reliable multicast messages with low network load, making it suitable for various applications, including the management of large systems in our scalable and intelligent infrastructure project at IBM Research.

## References

[1] S. Banerjee, B. Bhattacharjee, and C. Kommareddy. Scalable Application Layer Multicast. In SIGCOMM, 2002.

[2] K. P. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, and Y. Minsky. Bimodal Multicast. ACM Transactions on Computer Systems, 17(2):41–88, 1999.

[3] Y. Chu, S. G. Rao, and H. Zhang. A Case for End System Multicast. In SIGMETRICS, 2000.

[4] F. Dabek, J. Li, E. Sit, J. Robertson, M. F. Kaashoek, and R. Morris. Designing a DHT for Low Latency and High Throughput. In NSDI, 2004. The network latency data are available at http://www.pdos.lcs.mit.edu/p2psim/kingdata.

[5] P. T. Eugster, R. Guerraoui, S. B. Handurukande, P. Kouznetsov, and A.-M. Kermarrec. Lightweight Probabilistic Broadcast. ACM Trans. Comput. Syst., 21(4):341–374, 2003.

[6] P. T. Eugster, R. Guerraoui, A.-M. Kermarrec, and L. Massoulie. From Epidemics to Distributed Computing. IEEE Computer Magazine, 2004. http://www.irisa.fr/paris/Biblio/Papers/Kermarrec/EugGueKerMas04IEEEComp.pdf.

[7] S. Floyd, V. Jacobson, C. Liu, S. McCanne, and L. Zhang. A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. IEEE/ACM Transactions on Networking, 5(6):784–803, December 1997.

[8] X. Gu, K. Nahrstedt, R. N. Chang, and C. Ward. QoS-Assured Service Composition in Managed Service Overlay Networks. In ICDCS, 2003.

[9] R. M. Karp, C. Schindelhauer, S. Shenker, and B. Vocking. To appear Randomized Rumor Spreading. In FOCS, 2000.

[10] J. C. Lin and S. Paul. RMTP: A Reliable Multicast Transport Protocol. INFOCOM, 1996.

[11] M.-J. Lin and K. Marzullo. Directional Gossip: Gossip in a Wide Area Network. In European Dependable Computing Conference, 1999.

[12] R. Melamed and I. Keidar. Araneola: A Scalable Reliable Multicast System for Dynamic Environments. In the 3rd IEEE International Symposium on Network Computing and Applications (IEEE NCA), 2004.

[13] T. S. Eugene Ng and H. Zhang. Predicting Internet Network Distance with Coordinates-Based Approaches. In INFOCOM, 2002.

[14] O. Ozkasap, Z. Xiao, and K. P. Birman. Scalability of Two Reliable Multicast Protocols. Technical Report TR99-1748, Cornell University, 1999.

[15] L. L. Peterson and B. S. Davie. Computer Networks: A Systems Approach. Morgan Kaufmann Publishers, 2000.

[16] K. Shen. Structure management for scalable overlay service construction. In NSDI, 2004.