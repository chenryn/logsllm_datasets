# MQ Jumping: Moving to the Front of the Queue

## Speaker: Martyn Ruks
### Event: DEFCON 15
### Date: 2007-08-03

---

## Overview

Last year, I presented on IBM Networking attacks and mentioned that I would continue my research. However, as a penetration tester, I had other client work, which led me to explore Websphere MQ. The topic was so intriguing that I decided to delve deeper, leading to this presentation. My focus on IBM technology is not intentional; it reflects the high adoption rate of IBM solutions in the market.

---

## Introduction

### Who Am I?
- **Name:** Martyn Ruks
- **Role:** Security Consultant at MWR InfoSecurity, UK
- **Background:** Approach this subject from the perspective of a penetration tester and security researcher, without formal IBM computing experience.
- **Motivation:** Chose this topic based on interesting client engagements.

### Intended Audience
- **Security Managers**
- **Penetration Testers**
- **Application Developers**
- No prerequisites required for this presentation.

### Presentation Outline
- **Websphere MQ:** A middleware application for messaging.
- **Focus Areas:** Specific areas within the vast MQ topic.
- **Environment:** TCP/IP, Windows, and UNIX platforms.

---

## Why Study Websphere MQ?

- **Business Critical Systems:** Often used for critical business processes.
- **Lack of Testing Tools:** No public domain tools for testing MQ.
- **Security Knowledge Gap:** Users are potentially exposed to risks due to a lack of security testing.
- **Middleware Control:** Owning the middleware often means controlling the business process.

---

## Technical Background

### MQ Series – A Brief History
- **1993:** IBM acquired IP rights to ezBridge from SSI Systems.
- **1994/5:** IBM released versions for AIX, OS/2, and AS/400.
- **Version 5.3:** Renamed to Websphere MQ.
- **April 2005:** Version 6.0 released.

### Why Businesses Use MQ
- **Unified Messaging Solution:** Essential for reliable data communication.
- **Enterprise Technology:** Solid and stable.
- **Platform Support:** Runs on Windows, Unix, and Mainframes.
- **APIs:** Feature-rich APIs (C, Java, PERL).
- **Enterprise Functionality:** Includes accounting and other features.

### Typical Environment
- Refer to the diagram by Joe Conron for a visual representation.

### Terminology
- **Queue Managers:** Manage message queues.
- **Channels:** Logical connections between clients and servers.
- **Queues:** Storage containers for messages.
- **Triggers and Monitors:** Used for automated actions.

---

## Key Concepts

### What is a Queue Manager?
- **Definition:** An application managing message queues.
- **Instance:** One per TCP port.
- **Independence:** Each Queue Manager is independent but can be linked.
- **Multiple Instances:** Common to have multiple Queue Managers (e.g., Production, Development).

### What is a Channel?
- **Definition:** Logical connection for message transfer.
- **Types:** Different types for various uses.
- **Function:** Conduit to access message queues.

### What is a Queue?
- **Definition:** Storage container for messages.
- **Structure:** Usually FIFO, with priority support.
- **Operations:** GET and PUT for data movement.

### WebSphere MQ Protocol
- **Details:** Not publicly available, but captured in Ethereal/Wireshark.
- **Packet Structure:** Contains discreet sections.
- **Layers:** Dependent on the operation type.
- **Transmission Segment Header (TSH):** Present in all packets.

### PCF Commands
- **Programmable Command Format (PCF):** Manages Queue Managers.
- **Execution Steps:**
  1. Connect to the Queue Manager.
  2. Open the System’s Admin queue.
  3. Open a Dynamic (Model) queue for data.
  4. Use MQ PUT on the Admin queue.
  5. Use MQ GET on the Dynamic queue.

---

## Security Features

### Types of Security Features
- **MCAUSER:** Tag identifying the locally logged-on user.
- **Security Exit:** External program for access control.
- **SSL/TLS:** Transport security using certificates and DN-based filtering.

### MCAUSER
- **Basics:** Parameter in message packets.
- **Rules:** Complex rules for MCAUSER.
- **Limitations:** Default blank MCAUSER, client-side control only, potential confusion.

### Security Exits
- **Basics:** External program for access control.
- **Limitations:** Cleartext channels can be insecure, need to ensure the exit is called.

### SSL Support
- **Basics:** Supports SSL and TLS per channel.
- **Features:** Mixed cleartext and encrypted traffic, single cipher suite per channel.
- **Limitations:** Cipher cycling, no default authentication, tool compatibility, CA trust issues.

### SSL Client Authentication
- **Basics:** Accepts connections from authorized CAs, filters users based on DNs.
- **Limitations:** Large number of trusted CAs, easy to exploit with OpenSSL tools, pattern matching issues.

---

## Testing Websphere MQ

### Connecting to MQ
- **Success Factors:**
  - Correct port.
  - Known channel name.
  - MCAUSER permissions.
  - Security exits.
  - SSL and certificate-based authentication.

### Finding Websphere MQ
- **Default Port:** 1414.
- **Handshake:** Attempt MQ Initial Data handshake.
- **Response:** Indicates presence and Queue Manager name.

### How to Connect
- **Channel Auto Definition:** Automatically creates channels if they don't exist.
- **Post-Connection Actions:**
  - Issue PCF commands.
  - Open and browse queues.
  - GET and PUT data.
  - Execute OS commands.

### Useful PCF Commands
- **Actions:**
  - Version enumeration.
  - Channel discovery.
  - Queue discovery.
  - Permission data.

### Executing Commands
- **Method 1:** Using “Services” in Websphere Version 6.0.
- **Method 2:** Using triggers and monitors.
- **Method 2.1:** Simplified command execution via initiation queue.

---

## New Vulnerabilities

### Security Exit Bypass
- **Vulnerability:** Allows bypassing security exits.
- **Affected Versions:** 5.1 – 5.3 on Solaris, not 6.0 on Windows.

### Invalid MCAUSER Bypass
- **Vulnerability:** Accesses channels set to MCAUSER of "nobody."
- **Affected Versions:** 5.1 – 5.3 and 6.0 on Solaris and Windows.

### Exploitation Details
- To be released on the day of the presentation.

---

## Our Toolkit

### Part 1
- **Functions:**
  - Find MQ services on hosts.
  - Confirm channel list.
  - Test SSL settings.
  - Recover information about Queue Managers, Channels, Queues, Triggers, Processes.

### Part 2
- **Functions:**
  - Read and write data to queues.
  - Execute commands using trigger monitors.
  - Execute commands using Create Service.

### Tools
- **Development:** Python classes for defining MQ traffic and payloads.
- **Status:** Active development, generic classes and one sample tool available.
- **Code Insight:** Build custom packets by examining the code.

---

## More Information

- **White Paper:** In progress, covering MQ security in detail.
- **Publication:** Available within the next month.
- **Access:** [MWR InfoSecurity](http://www.mwrinfosecurity.com)

---

## Demo

### Setup
- **Objectives:**
  - Examine a box for MQ Services.
  - Determine SSL support on a default channel.
  - Recover information using the Command Server.
  - Execute commands to start netcat.

---

## Recommendations

### Technical
- **Protect Default and Admin Channels:** Restrict permissions on others.
- **Avoid Relying on MCAUSER:** For security.
- **Use Security Exits:** Ensure code is audited.
- **Disable Command Server:** If not needed.
- **Avoid Channel Auto Definition.**

### Additional Technical
- **Use Strong SSL:** On all channels.
- **Remove Unnecessary CAs:** From the Key Repository.
- **Be Specific with User Filtering Strings.**
- **Clear Initiation Queue:** Before starting a trigger monitor.
- **Use Lowest Privileges:** For trigger monitor accounts.

### High-Level
- **Importance of Middleware Security:** As critical as front-end and back-end.
- **Thorough Testing:** Beyond vulnerability scans.
- **Best Practices:** Use access control, encryption, and apply security fixes.
- **Comprehensive Testing:** Pen testers should know the application.
- **Secure All Environments:** Development, live, and remote queues.

---

## Conclusion

- **Basic Security:** Essential for MQ installations.
- **New Vulnerabilities:** Can expose any installation.
- **Layered Defense:** Reduces risk.

---

## References and Further Reading

- **WebSphere MQ Information Center:** [IBM](http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/index.jsp)
- **IBM Redbooks:** [Redbooks](http://www.redbooks.ibm.com/abstracts/sg247128.html)
- **IBM Downloads:** [DeveloperWorks](http://www-128.ibm.com/developerworks/downloads/ws/wmq/)
- **QFlex Product:** [Netflexity](http://www.netflexity.com/qflex/index.shtml)
- **MQ Perl Modules:** [CPAN](http://search.cpan.org/dist/MQSeries/)
- **MWR InfoSecurity White Paper:** [MWR](http://www.mwrinfosecurity.com)

### Contact Me
- **Email:** [PI:EMAIL]

---

## Questions?