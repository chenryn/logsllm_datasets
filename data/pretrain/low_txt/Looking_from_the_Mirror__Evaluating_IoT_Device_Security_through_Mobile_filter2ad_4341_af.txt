### Discovery of Potentially Vulnerable Devices

Through our platform, we identified 324 devices from 73 vendors that are potentially vulnerable to various security issues. Among these, 164 devices from 38 vendors have been confirmed to be indeed vulnerable.

### Acknowledgments

We would like to express our gratitude to the anonymous reviewers for their insightful comments, which significantly improved the quality of this paper. We especially thank our shepherd, Adwait Nadkarni, for his guidance and constructive feedback. This work is supported in part by NSF grants CNS-1527141, 1618493, 1801432, 1838083, and ARO grant W911NF1610127.

### References

1. **Bashlite**  
   BASHLITE.  
   <https://github.com/anthonygtellez/>

2. **Binwalk: Firmware Analysis Tool**  
   <https://github.com/ReFirmLabs/binwalk>

3. **Google Play Store**  
   <https://play.google.com/store/apps?hl=en>

4. **Shodan: The Search Engine for the Internet of Things**  
   <https://www.shodan.io>

5. **Smarthomedb**  
   <https://www.smarthomedb.com>

6. **ANTONAKAKIS, M., et al.**  
   Understanding the Mirai Botnet.  
   In USENIX Security Symposium (2017), pp. 1092–1110.

7. **BAPTISTE, D.**  
   Vulnerability in Compiler Leads to Backdoor in Software.  
   <https://2018.zeronights.ru/wp-content/uploads/materials/04-Vulnerability-in-compiler-leads-to-stealth-backdoor-in-software.pdf>, 2018.

8. **BAYER, U., et al.**  
   Scalable, Behavior-Based Malware Clustering.  
   In NDSS (2009), vol. 9, CiteSeer, pp. 8–11.

9. **CADAR, C., et al.**  
   Klee: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs.  
   In OSDI (2008), vol. 8, pp. 209–224.

10. **CHEN, D. D., et al.**  
    Towards Automated Dynamic Analysis for Linux-Based Embedded Firmware.  
    In NDSS (2016).

11. **CHEN, J., et al.**  
    IoTfuzzer: Discovering Memory Corruptions in IoT Through App-Based Fuzzing.  
    Proc. 2018 NDSS, San Diego, CA (2018).

12. **CHEN, Y., et al.**  
    Mass Discovery of Android Traffic Imprints Through Instantiated Partial Execution.  
    In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security (2017), ACM, pp. 815–828.

13. **THERMOSTAT RECYCLE CORPORATION**  
    Thermostat Manufacturers.  
    <https://www.thermostat-recycle.org/thermostat_manufacturers>

14. **CORTEGGIANI, N., et al.**  
    Inception: System-Wide Security Testing of Real-World Embedded Systems Software.  
    In 27th USENIX Security Symposium (USENIX Security 18) (2018), pp. 309–326.

15. **COSTIN, A., and ZADDACH, J.**  
    IoT Malware: Comprehensive Survey, Analysis Framework, and Case Studies.  
    BlackHat USA (2018).

16. **COSTIN, A., et al.**  
    A Large-Scale Analysis of the Security of Embedded Firmwares.  
    In USENIX Security Symposium (2014), pp. 95–110.

17. **COSTIN, A., et al.**  
    Automated Dynamic Firmware Analysis at Scale: A Case Study on Embedded Web Interfaces.  
    In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security (2016), ACM, pp. 437–448.

18. **CUI, A., COSTELLO, M., and STOLFO, S.**  
    When Firmware Modifications Attack: A Case Study of Embedded Exploitation.  
    Proc. 2018 NDSS, San Diego, CA (2013).

19. **CUI, A., and STOLFO, S. J.**  
    A Quantitative Analysis of the Insecurity of Embedded Network Devices: Results of a Wide-Area Scan.  
    In Proceedings of the 26th Annual Computer Security Applications Conference (2010), ACM, pp. 97–106.

20. **DAVIDSON, D., et al.**  
    Fie on Firmware: Finding Vulnerabilities in Embedded Systems Using Symbolic Execution.  
    In USENIX Security Symposium (2013), pp. 463–478.

21. **IFSEC GLOBAL DIRECTORY**  
    IP Cameras.  
    <https://directory.ifsecglobal.com/ip-cameras-code004823.html>

22. **EBAY**  
    Smart Bulbs.  
    <https://www.ebay.com/b/Smart-Bulbs/20706/bn_72322334>

23. **EBAY**  
    Wi-Fi Smart Plugs.  
    <https://www.ebay.com/b/Wi-Fi-Smart-Plugs/185061/bn_118504145>

24. **ESCHWEILER, S., et al.**  
    DiscovRE: Efficient Cross-Architecture Identification of Bugs in Binary Code.  
    In NDSS (2016).

25. **FENG, Q., et al.**  
    Scalable Graph-Based Bug Search for Firmware Images.  
    In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (2016), ACM, pp. 480–491.

26. **FREY, B. J., and DUECK, D.**  
    Clustering by Passing Messages Between Data Points.  
    Science 315, 5814 (2007), 972–976.

27. **HENINGER, N., et al.**  
    Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices.  
    In USENIX Security Symposium (2012), vol. 8, p. 1.

28. **HOLCOMBE, J.**  
    SOHO Network Equipment.  
    <https://www.securityevaluators.com/wp-content/uploads/2017/07/soho_techreport.pdf>, 2017.

29. **HU, G., et al.**  
    Efficiently, Effectively Detecting Mobile App Bugs with AppDoctor.  
    In Proceedings of the Ninth European Conference on Computer Systems (2014), ACM, p. 18.

30. **TEXAS INSTRUMENTS**  
    SimpleLink Wi-Fi SmartConfig.  
    <http://www.ti.com/sitesearch/docs/universalsearch.tsp?searchTerm=SmartConfig>

31. **INTERNET CENSUS**  
    Port Scanning /0 Using Insecure Embedded Devices.  
    <https://seclists.org/fulldisclosure/2013/Mar/166>

32. **KIM, J., et al.**  
    Enabling Automatic Protocol Behavior Analysis for Android Applications.  
    In Proceedings of the 12th International Conference on Emerging Networking Experiments and Technologies (2016), ACM, pp. 281–295.

33. **KING, J. C.**  
    Symbolic Execution and Program Testing.  
    Communications of the ACM 19, 7 (1976), 385–394.

34. **KOSCHER, K., KOHNO, T., and MOLNAR, D.**  
    SURROGATES: Enabling Near-Real-Time Dynamic Analyses of Embedded Systems.  
    In 9th USENIX Workshop on Offensive Technologies (WOOT 15) (2015).

35. **KREBSONSECURITY**  
    New Mirai Worm Knocks 900K Germans Offline.  
    <https://krebsonsecurity.com/2016/11/new-mirai-worm-knocks-900k-germans-offline/>

36. **LI, C., et al.**  
    Passwords in the Air: Harvesting Wi-Fi Credentials from SmartCFG Provisioning.  
    In Proceedings of the 11th ACM Conference on Security & Privacy in Wireless and Mobile Networks (2018), ACM, pp. 1–11.

37. **MAJKOWSKI, M.**  
    Stupidly Simple DDoS Protocol (SSDP) Generates 100 Gbps DDoS.  
    <https://blog.cloudflare.com/ssdp-100gbps/>, Jun. 2017.

38. **MARTIN, B., and BRAUNLEIN, F.**  
    DeepSec 2017 Talk: Next-Gen Mirai Botnet – Balthasar Martin & Fabian Braunlein.  
    <https://blog.deepsec.net/deepsec-2017-talk-next-gen-mirai-botnet-balthasar-martin-fabian-braunlein/>, Sep. 2017.

39. **MARZANO, A., et al.**  
    The Evolution of Bashlite and Mirai IoT Botnets.  
    In 2018 IEEE Symposium on Computers and Communications (ISCC) (2018), IEEE, pp. 00813–00818.

40. **MICROSOFT**  
    Azure IoT Hub.  
    <https://azure.microsoft.com/en-us/services/iot-hub/>

41. **KUZIN, M., SHMELEV, Y. V.**  
    New Trends in the World of IoT Threats.  
    <https://securelist.com/new-trends-in-the-world-of-iot-threats/87991/>

42. **MUENCH, M., et al.**  
    Avatar 2: A Multi-Target Orchestration Platform.  
    In Proc. Workshop Binary Anal. Res. (Colocated NDSS Symp.) (2018), vol. 18, pp. 1–11.

43. **MUENCH, M., et al.**  
    What You Corrupt Is Not What You Crash: Challenges in Fuzzing Embedded Devices.  
    In NDSS 2018, Network and Distributed Systems Security Symposium, 18-21 February 2018, San Diego, CA, USA (2018).

44. **PALEARI, R.**  
    Multiple Vulnerabilities on D-Link DIR-645 Devices.  
    <http://roberto.greyhats.it/advisories/20130801-dlink-dir645.txt>

45. **PALEARI, R.**  
    Unauthenticated Remote Access to D-Link DIR-645 Devices.  
    <http://roberto.greyhats.it/advisories/20130227-dlink-dir.txt>

46. **PASCU, L.**  
    The Home Threat Landscape and Top Smart Home Vulnerabilities in 2018.  
    <https://www.bitdefender.com/files/News/CaseStudies/study/229/Bitdefender-Whitepaper-The-IoT-Threat-Landscape-and-Top-Smart-Home-Vulnerabilities-in-2018.pdf>

47. **PEWNY, J., et al.**  
    Cross-Architecture Bug Search in Binary Executables.  
    In Security and Privacy (SP), 2015 IEEE Symposium on (2015), IEEE, pp. 709–724.

48. **RASTHOFER, S., et al.**  
    Harvesting Runtime Values in Android Applications That Feature Anti-Analysis Techniques.  
    In NDSS (2016).

49. **SHOSHITAISHVILI, Y., et al.**  
    Firmalice: Automatic Detection of Authentication Bypass Vulnerabilities in Binary Firmware.  
    In NDSS (2015).

50. **STROETMANN, L.**  
    Reverse Engineering the TP-Link HS110.  
    <https://www.softscheck.com/en/reverse-engineering-tp-link-hs110/>

51. **VALLÉE-RAI, R., et al.**  
    Soot: A Java Bytecode Optimization Framework.  
    In CASCON First Decade High Impact Papers (2010), IBM Corp., pp. 214–224.

52. **WANG, X., et al.**  
    Towards Optimization-Safe Systems: Analyzing the Impact of Undefined Behavior.  
    In Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles (New York, NY, USA, 2013), SOSP '13, ACM, pp. 260–275.

53. **WERMKE, D., et al.**  
    A Large-Scale Investigation of Obfuscation Use in Google Play.  
    In Proceedings of the 34th Annual Computer Security Applications Conference (2018), ACM, pp. 222–235.

54. **XIAO, C.**  
    Malware XcodeGhost Infects 39 iOS Apps, Including WeChat, Affecting Hundreds of Millions of Users.  
    <https://unit42.paloaltonetworks.com/malware-xcodeghost-infects-39-ios-apps-including-wechat-affecting-hundreds-of-millions-of-users/>

55. **XIAO, F., et al.**  
    VulHunter: A Discovery for Unknown Bugs Based on Analysis for Known Patches in Industry Internet of Things.  
    IEEE Transactions on Emerging Topics in Computing (2017).

56. **XU, Z., et al.**  
    AutoProbe: Towards Automatic Active Malicious Server Probing Using Dynamic Binary Analysis.  
    In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (2014), ACM, pp. 179–190.

57. **XUE, L., et al.**  
    Adaptive Unpacking of Android Apps.  
    In 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE) (2017), IEEE, pp. 358–369.

58. **ZADDACH, J., et al.**  
    Avatar: A Framework to Support Dynamic Security Analysis of Embedded Systems’ Firmwares.  
    In NDSS (2014).

59. **ZHANG, Y., et al.**  
    DexHunter: Toward Extracting Hidden Code from Packed Android Applications.  
    In European Symposium on Research in Computer Security (2015), Springer, pp. 293–311.

60. **ZHOU, Y., et al.**  
    Harvesting Developer Credentials in Android Apps.  
    In Proceedings of the 8th ACM Conference on Security & Privacy in Wireless and Mobile Networks (2015), ACM, p. 23.

---

This revised version ensures clarity, coherence, and professionalism throughout the text.