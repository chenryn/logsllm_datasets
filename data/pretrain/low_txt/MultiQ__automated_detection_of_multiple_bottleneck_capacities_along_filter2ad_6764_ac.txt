### Pseudocode for MultiQ

1. **Compute the Mode Gaps:**
   - Identify local maxima with statistically significant dips in the data.
   - Calculate the gaps between these modes.

2. **Compute the Probability Distribution Function (PDF) of the Gaps:**
   - Determine the PDF of the computed gaps.

3. **Set G as the Tallest Mode in the Gap PDF:**
   - Identify the most frequent gap length, which is the tallest mode in the gap PDF.

4. **Check the Probability in G:**
   - If the probability in G is greater than 0.5, increment the scale and output a capacity of \(\frac{1500 \times 8}{G}\) Mb/s.

### Detailed Explanation

- **Mode Identification:**
  - Modes are defined as local maxima with statistically significant dips. These significant dips are identified by ensuring that the dips on either side of a local maximum drop by more than the standard deviation of the kernel density estimate at the local maximum.

- **Gap Computation:**
  - The gaps between these modes are then computed. A mode in the gap's PDF corresponds to a highly repeated gap length, which is a characteristic of a congested link.

- **Dominant Mode Detection:**
  - If a significantly dominant mode is found in the gap distribution at the current resolution, it is assumed to represent the transmission time of 1500 bytes on some bottleneck link. The tool then outputs the capacity of this bottleneck.
  - If no dominant gap is found at the current resolution, the resolution is decreased by increasing the kernel width, similar to adjusting the bin width of a histogram, and the procedure is repeated.

### Application on Data-Packet Traces

- **Estimation of Bottleneck Capacities:**
  - When run on data-packet traces, multiQ estimates the capacity of bottlenecks upstream from the observation point.
  - To estimate bottleneck capacities downstream of the observation point, access to acknowledgment (ACK) traces is required.

- **Handling ACK Traces:**
  - When analyzing ACK interarrival PDFs, multiQ uses a slightly different procedure:
    - A large spike close to zero indicates compressed ACKs and should be ignored.
    - A spike located at twice the repeated gap in the PDF indicates delayed ACKs and corresponds to the transmission time of 3000 bytes on the bottleneck link.
  - EMG estimation is less robust on ACK traces, so the current version of multiQ does not attempt to discover bottlenecks with capacities higher than 155 Mb/s when run on ACK traces.

### Validation

- **Experimental Setup:**
  - The accuracy of multiQ was evaluated using 10,000 experiments over 400 diverse Internet paths from the RON overlay network.
  - The results were compared with known topology information and two other capacity measurement tools: Pathrate and Nettimer.

- **Key Findings:**
  - **Minimum-Capacity Bottlenecks:**
    - MultiQ is as accurate as Pathrate, with 85% of its measurements within 10% of their true value.
    - MultiQ is 11% more accurate than Nettimer when both tools are given only receiver-side traces.
    - Nettimer requires access to both receiver- and sender-side logs to achieve comparable accuracy to multiQ.
  - **Sender-Side ACK Traces:**
    - 70% of multiQ’s measurements on sender-side ACK traces are within 20% of their correct value.
  - **Non-Minimum-Capacity Bottlenecks:**
    - MultiQ automatically detects 64% of non-minimum-capacity bottlenecks ("tight" links).
    - It misses 21% of tight links, though a human could detect them visually on an interarrival PDF using the EMG technique.
    - 15% of the time, multiQ mislabels the tight links.

### Experimental Methodology

- **Data Collection:**
  - The RON overlay network, consisting of 22 geographically distributed nodes, was used for the experiments.
  - The nodes have diverse access links and ISPs, including 100 Mb/s, 10 Mb/s, T1, and DSL links.
  - The "true" bottleneck capacity was determined by contacting each node’s hosting site and obtaining a list of all their access links and the capacities of the local networks.

- **Consistency Verification:**
  - All three capacity measurement tools and a number of ttcp and UDP flows of varying rates were run on each path to verify the consistency of the "true" capacities.
  - Paths with inconsistent results were eliminated from the experiments.

### Minimum Capacity Estimation

- **Comparison with Other Tools:**
  - MultiQ, though passive, is as accurate as the active tool Pathrate, with 85% of the measurements within 10% of the true value.
  - Nettimer achieves comparable accuracy only when given both receiver- and sender-side traces.
  - Errors in multiQ are mainly due to over-smoothing in the iterative procedure for discovering mode gaps.
  - Pathrate errors occur when the interarrival PDF exhibits many modes, and Pathrate picks a different mode as the bottleneck capacity.
  - Nettimer errors often occur on paths with low RTT (< 16 ms), mistaking the RTT mode in the inter-arrival PDF for the transmission time over the bottleneck.

### Minimum Capacity Estimation Using ACKs

- **Sender-Side ACK Interarrivals:**
  - MultiQ can obtain a reasonable capacity estimate using only a sender-side trace of ACK interarrivals.
  - 70% of the measurements are within 20% of the true value.

### Tight Links

- **Detection of Non-Minimum-Capacity Bottlenecks:**
  - MultiQ can detect non-minimum-capacity bottlenecks, or "tight" links, along the path.
  - 64% of the experiments reported a tight link present on the path, with a relative error of 0.156 and a standard deviation in error of 0.077.
  - 15% of the experiments reported an incorrect tight link, and 21% reported only the minimum bottleneck.

### Related Work

- **Passive and Active Tools:**
  - MultiQ builds on the insights of Nettimer but achieves higher accuracy and can discover multiple bottleneck capacities.
  - Active tools like Pathrate focus on the minimum capacity of a path, while multiQ can discover capacities from both sender and receiver-side traces.
  - Prior work on detecting tight links has been primarily active, while multiQ is the first passive tool to do so effectively.

### Conclusions

- **Key Contributions:**
  - MultiQ is the first passive tool that can discover the capacity of multiple congested links along a single flow path and the first tool that effectively extracts capacity information solely from ACK traces.
  - It achieves accuracy comparable to Pathrate and can detect up to three bottleneck capacities along a single path.
  - The code for multiQ is available as a plugin module for Click, a modular software system for packet processing and router forwarding paths.

### References

- [1] Abilene. http://monon.uits.iupui.edu/.
- [2] A. Akella, S. Seshan, and A. Shaikh. An Empirical Evaluation of Wide-Area Internet Bottlenecks. In Proc. IMC, October 2003.
- [3] K. Claffy, G. Miller, and K. Thompson. The Nature of the Beast: Recent Traffic Measurements from an Internet Backbone, 1998. http://www.caida.org/outreach/resources/learn/packetsizes/.
- [4] C. Dovrolis, P. Ramanathan, and D. Moore. Packet Dispersion Techniques and Capacity Estimation. IEEE/ACM Trans. on Neworking. Under submission.
- [5] N. Hu and P. Steenkiste. Evaluation and Characterization of Available Bandwidth Techniques. IEEE JSAC Special Issue in Internet and WWW Measurement, Mapping, and Modeling, 2003.
- [6] M. Jain and C. Dovrolis. Pathload: A Measurement Tool for End-to-End Available Bandwidth. In Proc. Passive and Active Measurement Workshop, March 2002.
- [7] H. Jiang and C. Dovrolis. Source-Level IP Packet Bursts: Causes and Effects. In Proc. IMC, October 2003.
- [8] S. Katti, D. Katabi, C. Blake, E. Kohler, and J. Strauss. M&M: A passive toolkit for measuring, tracking and correlating path characteristics. Technical Report 945, MIT CSAIL, 2004.
- [9] S. Keshav. A Control-Theoretic Approach to Flow Control. In Proc. ACM SIGCOMM, September 1991.
- [10] K. Lai and M. Baker. Nettimer: A Tool for Measuring Bottleneck Link Bandwidth. In Proc. USENIX, 2001.
- [11] Kevin Lai and Mary Baker. Measuring Bandwidth. In Proc. IEEE INFOCOM, 1999.
- [12] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson. User Level Internet Path Diagnosis. In Proc. ACM SOSP, October 2003.
- [13] B. Melander, M. Bjorkman, and P. Gunningberg. A New End-to-End Probing and Analysis Method for Estimating Bandwidth Bottlenecks. In Proc. Global Internet Symposium, 2000.
- [14] A. Pasztor and D. Veitch. The Packet Size Dependence of Packet Pair Methods. In Proc. 10th IWQoS, 2003.
- [15] pathchar. ftp://ee.lbl.gov/pathchar.tar.Z.
- [16] V. Paxson. End-to-End Internet Packet Dynamics. IEEE/ACM Trans. on Networking, June 1999.
- [17] V. E. Paxson. Measurements and Analysis of End-to-End Internet Dynamics. PhD thesis, Berkeley, 1997.
- [18] Resilient Overlay Networks. http://nms.lcs.mit.edu/ron/.
- [19] V. J. Ribeiro, M. Coates, R. H. Riedi, S. Sarvotham, and R. G. Baraniuk. Multifractal Cross Traffic Estimation. In Proc. ITC Specialist Seminar on IP Traffic Measurement, September 2000.
- [20] V. J. Ribeiro, R. H. Riedi, R. G Baraniuk, J. Navratil, and L. Cottrell. pathChirp: Efficient Available Bandwidth Estimation for Network Paths. In Proc. Passive and Active Measurement Workshop, 2003.
- [21] D. Scott. Multivariate Density Estimation. John Wiley, 1992.
- [22] C. Shannon, D. Moore, and K. Claffy. Beyond Folklore: Observations on Fragmented Traffic. In IEEE/ACM Trans. on Networking, 2002.
- [23] H. Uijiterwall and M. Santcroos. Bandwidth Estimations for Test Traffic Measurement Project, December 2003.