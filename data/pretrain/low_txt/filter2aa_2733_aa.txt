# Past and Future in OS X Malware

## 1. About Me
- **Background**: Economist and MBA.
- **Experience**: Over 30 years as a computer enthusiast.
- **Professional Experience**: Worked at one of the world's best ATM networks, the Portuguese Multibanco.
- **Skills**: Natural-born reverser and assembler of various items, not just bits and bytes.

## 2. About noar
- **Education**: Self-taught researcher.
- **Role**: Consultant/Insultant in security software.
- **Experience**: Former Apple BlackOps.
- **Technology Adoption**: Uses a Mac since AAPL was $12 (but didn't buy shares).
- **Security**: Never pwned, but dares to open PowerPoint files.

## 3. Objective
- **Starting Point**: The myth that Macs are immune to malware.
- **Disruption**: Latest Flashback variants broke this myth.
- **Key Message**: It is quite easy to write high-quality OS X malware.
- **Goal**: Demonstrate this today.

## 4. Summary
- **Topics Covered**:
  - History of OS X malware.
  - Flashback: The mythbuster.
  - Code injection techniques.
  - OS.X/Boubou – A Proof of Concept (PoC) infector/virus.
  - Privilege escalation.
  - Final remarks.

## 5. History – From Lameware to Malware
- **Early Examples**:
  - Backdoors written in REALBasic.
  - Old IRC bots.
  - Keyloggers using Universal Access (logKext rules them all).
  - PoCs (except mine).

## 6. History – Lameware, 2006
### Oompa Loompa
- **Spread**: Via iChat Bonjour buddy list.
- **Injection**: Into Cocoa apps using Input Managers.
- **Execution**: Requires user interaction.

### Opener 3.9
- **Method**: Same old shell script as a startup item.
- **Features**:
  - Hidden admin user (UID < 501), enable SSH, AFP, SMB.
  - Data mining, hash cracking (JtR), logs cleaning.
  - New features: Anti-Little Snitch prequel, anti-virus white-listing, capture network traffic using dsniff.

## 7. History – Lameware, 2007
### RSPlug aka DNSChanger
- **First Fake Codec Package**.
- **Functionality**: Prepend DNS every minute using scutil and cron.
- **Script**: Perl script to call home, later obfuscated using `tr!`.
- **Polymorphism?**

## 8. History – Lameware, 2007
### MacSweeper, Later iMunizator
- **First Scareware**.
- **Patch**: -(BOOL)[RegistrationManager isRegistered] and patch a few bytes.
- **Effectiveness**: Really works.
- **Predecessor**: MacDefender and similar threats.

## 9. History – Lameware, 2008
### iWorkServices and Company
- **Malicious Torrents**: First instances?
- **Startup Item**: Yet another.
- **Scripting**: Contains LUA scripting.
- **Usage**: For DDOS attacks.

### AppleScript Trojan Horse Template
- **Features**:
  - Stay quiet if Little Snitch exists.
  - Old school reverse shell using `nc` / `cat`.
  - Script “in the middle” sudo.
  - Different user levels (user, admin, root).
  - Point antivirus update servers to localhost.
  - there_are_no_osx_viruses_silly_wabbit().

## 10. History – Lameware, Remarks
- **Key Features**: Present in early threats.
- **Recent Threats**: Updates of old features (e.g., Chuck Norris likes launchd).
- **Implementation**: Often lame and too generic to be harmful.
- **Reversibility**: Easy to reverse (no encryption).
- **User Trickery**: Trick the user to get root access.

## 11. Now for Something Different…
*Note: No connection whatsoever with flashback.net, I just like the picture!

## 12. History – Malware
- **Similarities with Previous Lameware**:
  - Fake codec package.
  - Different user levels (user, root).
  - Stay quiet if certain applications exist (Little Snitch, VirusBarrier, Xcode, etc.).
  - In later versions, uses launchd.

- **Differences and New Features**:
  - Real hijacked websites.
  - Infect only once (persistent cookies, IP, UUID).
  - Polymorphic (many binaries).
  - Interposers.
  - Exploits (CVE-2008-5353, CVE-2012-0507).
  - Became a famous 600k botnet.

## 13. Flashback Tricks
### Trick #1
- **Old Trick**: ~/.MacOSX/environment.plist.
- **New Trick**: Interpose (hooking, function hijacking).
- **Key**: DYLD_INSERT_LIBRARIES.
- **Functionality**: Tracks user requests by hooking functions like _hook_CFReadStreamRead, _hook_CFWriteStreamWrite.
- **Issues**: Crashed some apps (Skype, FCP, etc.).

### Trick #2
- **Playing Robin Hood with Google**: Since day 1, not just in the latest versions as implied by some AV blog posts.

### Trick #3
- **Tweeting**: Also from day 1.

### Trick #4
- **Polymorphism**:
  - Absolute path of Preferences.dylib.
  - Sends SHA1 of Preferences.dylib to C&C server.
  - On latest releases, data was XORed with machine UUID.

## 14. Flashback – Remarks
- **Impact**: Flashback advanced Mac malware significantly.
- **Reality**: It’s a reality, not a myth.
- **Unsolved Puzzles**:
  - Do personalized variants exist?
  - Does a rootkit exist?
  - Suspicious references to sysent.

## 15. My Tricks
### Code Injection
- **Flashback Method**: Uses DYLD_INSERT_LIBRARIES trick.
- **Ease and Detection**: Easiest method but noisy, easy to detect, and clean up.
- **Alternative Method**: Add a new library command into Mach-O headers (LC_LOAD_DYLIB).
- **Linker Behavior**: Will load our code into the process.
- **Header Space**: Usually enough space available.

### Statistics
- **Applications Folder**:
  - 32-bit: Average size 3013 bytes, min 28, max 49176.
  - 64-bit: Average size 2601 bytes, min 32, max 36200.
- **Minimum Required Size**: 24 bytes.
- **Reference**: [Anti-Debug Trick 1](http://reverse.put.as/2012/01/31/anti-debug-trick-1-abusing-mach-o-to-crash-gdb/)

### How to Do It
- **Steps**:
  - Find the position of the last segment command.
  - Find the first data position (either __text section or LC_ENCRYPTION_INFO on iOS).
  - Calculate available space between the two.
  - Add new command if enough space is available.
  - Fix the header: size and number of commands fields.
  - Write or overwrite the new binary.

### Other Possibilities
- **Slack Space**: Between __TEXT and __DATA (not enough space, except for a few exceptions like Skype).
- **Injecting New Section**: Doesn’t work; Mach-O loader does not respect section data.
- **NOP Sequences**: Long NOP sequences can be used to execute two instructions.
- **Example**: BBEdit has significant NOP space available.

This document provides a comprehensive overview of the history and techniques of OS X malware, with a focus on the evolution and impact of Flashback.