### Effective BER Estimation and Thresholding

In scenarios with lower Signal-to-Noise Ratio (SNR), our estimate of the effective Bit Error Rate (BER) in Equation (1) accurately reflects the uncoded error performance of the link. The algorithm then proceeds as follows: we compute the effective SNR value and use measurements from a flat-fading channel (as shown in Figure 1(a)) to determine the success or failure of the transmission. Similar to CHARM [10], our approach supports different packet lengths with corresponding SNR thresholds.

This method differs from typical simulation-based analyses [11, 15, 19], which map the uncoded BER to a coded BER using a simple log-linear approximation. These analyses then use the coded BER and the target transmission length to directly compute the packet delivery rate. We believe that thresholding the effective SNR is superior because it can accommodate variations in receiver implementation. Different devices may have varying noise figures, which measure the signal strength loss in the internal RF circuitry of the Network Interface Card (NIC). Receivers may also implement soft Viterbi decoders with different numbers of soft bits for their internal state, or they might perform hard decoding. Additionally, a receiver could use the optimal Maximum Likelihood MIMO decoder, which has exponential complexity for small constellations like BPSK, but revert to the more efficient but imperfect Minimum Mean Square Error (MMSE) at higher modulations. All these variations can be expressed as (possibly modulation-dependent) shifts in the effective SNR thresholds. In contrast, changing these parameters in the simulation approach requires altering the internal calculations.

### Protocol Details

Effective SNR calculations can be performed by either the receiver or the transmitter, each with its own advantages. For the transmitter to make decisions, it must know the receiver's thresholds.

### Node Configuration

Each node in our setup is a stationary desktop or portable laptop equipped with an Intel Wi-Fi Link 5300 (iwl5300) a/b/g/n wireless network adapter. These nodes run the Linux 2.6.34 kernel with a modified version of the iwlagn driver [2]. The 802.11n MIMO NICs have three antennas and support many new features of the 802.11n standard. We use up to three transmit and receive antennas, supporting up to three MIMO streams, with rates per stream as defined in Table 1. This corresponds to equal modulation across streams as specified in the 802.11n standard.

Other physical layer parameters are set to 802.11a/g default values where possible, including 20 MHz channels and an 800 ns symbol guard interval. Each testbed operates on a 5 GHz channel unoccupied in its environment, with no noticeable interference.

### Measurement Tools

Our hardware allows us to vary the transmit power level from -10 dBm to 16 dBm in steps of 0.5 dB, and divides power equally across streams. For each received packet, the NIC reports the Received Signal Strength Indicator (RSSI) per receive antenna, noise floor, and the setting on the Automatic Gain Control (AGC) amplifier. These combine to define the per-receive-chain packet SNR (ρpacket):

\[ \rho_{\text{packet}} = \text{RSSI (dBm)} - \text{Noise (dBm)} - \text{AGC (dB)} \]

The iwl5300 calculates RSSI and Noise as the respective sums of average signal strength and average error vector magnitude in each OFDM subcarrier [2]. This aligns with the traditional definition of SNR applied to OFDM.

#### Channel State Information (CSI)

The channel sounding mechanism added in 802.11n defines a management frame used to report the CSI from the receiver back to the transmitter. This mechanism is intended for calibration or to inform transmit beamforming, and we co-opt it for our experiments. We configure the NIC to compute this feedback packet for every received frame and send it to the driver instead of back to the transmitter. The iwl5300 provides CSI in a format that reports the channel matrices for 30 subcarrier groups, which is about one group for every 2 subcarriers at 20 MHz. Each channel matrix entry is a complex number with signed 8-bit resolution for both the real and imaginary parts, specifying the gain and phase of the spatial path between a single transmit-receive antenna pair. Intel’s implementation of the 802.11n CSI does not include per-subcarrier noise measurements, so we assume the noise floor is uniform across all subcarriers to compute SNRs. This is consistent with white noise observed on other OFDM platforms [20].

### Packet Delivery Evaluation

In this section, we experimentally evaluate how well our model from §3 predicts packet delivery. This is a fundamental measure of the model's utility, as good predictions enable applications such as rate adaptation, transmit power control, antenna selection, and channel selection.

#### Measurement Setup

We first measure packet delivery for different antenna configurations over a 20 MHz channel on our testbeds. The 1x1 or Single-Input-Single-Output (SISO) configuration corresponds to 802.11a, where each node has a single transmit or receive antenna. Additionally, we measure configurations with three receive antennas and 1, 2, or 3 spatial streams. These 1x3, 2x3, and 3x3 MIMO configurations, available only with 802.11n, exploit spatial diversity and spatial multiplexing to significantly increase performance.

In each test, we send 1500-byte packets as constant bit-rate UDP traffic generated by iperf at 2 Mbps for 5 seconds. We disable link layer retransmissions to observe the underlying packet delivery rate and fix the link data rate and transmit power in each run. We then collect packet reception rate (PRR) statistics for all 8 rates using 1, 2, and 3 spatial streams as we vary the power between -10 dBm and 16 dBm in steps of 2 dB.

The receiver records the CSI and per-antenna RSSIs to measure the RF channel for each correctly received packet. Note that CSI is measured during the preamble, so it does not depend on the transmit rate. Similarly, 3x3 CSI gives us the channel between each pair of transmit and receive antennas, implicitly containing 1x1 CSI.

This testing provides ground truth data to probe variation across 200 links, 26 dB of transmit power, four antenna configurations ranging from 1x1 to 3x3, and 8 per-stream rates (for 24 rates with up to three streams). This covers all key variables in our delivery model.

#### RSSIs and Multiple Antennas

Our model predicts packet delivery in terms of effective SNR as described in §3. Our baseline for comparison is RSSI-based predictions of delivery. For the 1x1 case, we convert the single RSSI value to a packet SNR using Equation (3), which is then mapped to packet delivery for the transmit rate used.

However, there is a complication when there are three antennas in multi-antenna modes. There are now three RSSIs—how should they be used? We first convert the per-antenna RSSIs to SNRs and then sum the SNRs. This is a straightforward choice for a single spatial stream as it corresponds to receiver processing using Maximal Ratio Combining (MRC) [8]. It is also reasonable for 2- and 3-stream MIMO because the streams are interleaved.

#### Results

##### Transition Windows

To compare our model with RSSI, we analyze our 1x1 measurements to find the transition windows for all links in testbed T1. We define the transition window as the effective SNR or packet SNR values over which packet delivery rises from 10% (lossy) to 90% (reliable) for any link.

Table 3 shows the width of the transition window (denoted ∆ρ) for 1x1 rates using these SNR metrics. We show the 25–75% range of points in the transition window as a measure of the typical link, and the 5–95% range as a measure of most links. A good result here is a narrow window like that measured over a wire (Figure 1(a)).

We see that the transition widths are consistently tight with our model. Most links transition within a window of around 2 dB for most rates. The width of the RSSI-based transition windows is typically two to three times looser, especially for denser modulation schemes like QAM-64 and higher code rates. This means that it is easy for a less than ideal channel to degrade the reception of high rates. However, while the transitions for the last four rates are inflated with RSSI, they remain tight with effective SNR.

The results for effective SNR are close to the best that can be obtained because they are near textbook transitions for flat-fading channels and those measured over a wire (Figure 1(a)). A small improvement is possible, but this is likely limited by the precision of our measurement data. Our NIC gives RSSI, AGC, and noise values in dB to the nearest integer, and at most 8-bit CSI over a 24 dB range for 30 out of 56 subcarriers. With these factors, quantization error of at least 1 dB is likely.

The significance of narrow transition windows is that, by reducing them enough that they do not overlap, we can unambiguously predict the highest rate that will work for all links nearly all of the time. In contrast, RSSI transition window overlap such that for a given RSSI, we have seen five different rates be the highest rate in our testbed. We explore this next.

##### Rate Confusion

To understand how transition windows map to packet delivery predictions, we analyze our measurements for the highest supported rate (PRR ≥ 90%) for each link and all NIC settings. The results are shown in Figure 6, broken down by antenna configuration. Figure 6(a) shows 1x1 rates for T1 and T2 links combined. Figures 6(b)–6(d) show rates for 1x3, 2x3, and 3x3 configurations for T1 links; T1 is denser than T2 and supports MIMO experiments over our NIC’s transmit power range. For each RSSI-based SNR or effective SNR value, we find the best link (with the fastest best rate) and the worst link (with the slowest best rate). We plot the spread of their fastest rates in these graphs.

Ideally, the best and worst lines would overlap completely, meaning the highest rate for a given SNR would be the same for the best and worst links. This rate would then be an accurate prediction for the effective SNR or packet SNR level. Conversely, gaps between the best and worst lines expose confusion about which rate will be the highest rate for that SNR.

In the top two lines of the 1x1 and 3x3 cases, we see that the RSSI-based SNR has a large spread between the best and worst lines. Except for extremely low and high SNRs, nearly all SNRs have at least two and up to five different rates as suitable choices for the best rate. That is, RSSI often poorly indicates rate. In sharp contrast, the two effective SNR lines overlap almost all the time, and mostly appear to be a single line. This is almost an ideal result. Effective SNR is a clear indicator of the best rate. When there is slight separation, the spread is only between rates that use the same modulation but different amounts of coding. These combinations are also close together in our wired experiments.

Note: Figure 6(b) does not include data for 1x3 at 6.5 Mbps, because very few links experience loss at that rate.

### Power Saving and Performance Impact

Figure 8 shows the power saving and performance impact of pruning excess transmit power. Pruning with effective SNR is tight (within 0.5 dB) and does not degrade performance. Pruning with packet SNR degrades performance more without much extra savings.

Figure 7 plots the packet SNR versus effective SNR relationship for six example 1x1 links in T1 and T2. We compute this data by scaling the CSI measured at maximum transmit power over a range of power levels. The links range from near-flat to deeply-faded, corresponding to different slopes.