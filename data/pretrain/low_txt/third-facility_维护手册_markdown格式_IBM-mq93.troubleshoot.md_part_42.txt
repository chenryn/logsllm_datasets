### Example CEDF Output for MQGET and MQINQ Calls

#### MQGET Call (Character)

**Figure 34. Example CEDF output on entry to an MQGET call (character)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '................'
  - **ARG 001:** '................'
  - **ARG 002:** 'MD ............'
  - **ARG 003:** 'GMO ...... .....'
  - **ARG 004:** '................'
  - **ARG 005:** '**HELLO WORLD***'
  - **ARG 006:** '................'
  - **ARG 007:** '................'
  - **ARG 008:** '................'

**Figure 35. Example CEDF output on exit from an MQGET call (character)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '................'
  - **ARG 001:** '................'
  - **ARG 002:** 'MD ............'
  - **ARG 003:** 'GMO ...... .....'
  - **ARG 004:** '................'
  - **ARG 005:** '**HELLO WORLD***'
  - **ARG 006:** '................'
  - **ARG 007:** '................'
  - **ARG 008:** '................'

#### MQINQ Call (Character and Hexadecimal)

**Example CEDF output for the MQINQ call**

**Table 14. Parameters for the MQINQ call**
- **ARG 000:** Connection handle
- **ARG 001:** Object handle
- **ARG 002:** Count of selectors
- **ARG 003:** Array of attribute selectors
- **ARG 004:** Count of integer attributes
- **ARG 005:** Integer attributes
- **ARG 006:** Length of character attributes buffer
- **ARG 007:** Character attributes
- **ARG 008:** Completion code
- **ARG 009:** Reason code

**Figure 36. Example CEDF output on entry to an MQINQ call (hexadecimal)**
- **STATUS:** ABOUT TO EXECUTE COMMAND
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** X'00000000000000010000000200004044' AT X'05ECAFCC'
  - **ARG 001:** X'00000001000000720000000000000000' AT X'001445E4'
  - **ARG 002:** X'000000020000404485ECA00885ECA220' AT X'05ECAFD4'
  - **ARG 003:** X'0000000D0000000C0000000000000000' AT X'00144C08'
  - **ARG 004:** X'000000020000404485ECA00885ECA220' AT X'05ECAFD4'
  - **ARG 005:** X'00000000000000000000000000000000' AT X'00144C10'
  - **ARG 006:** X'00000000000000010000000200004044' AT X'05ECAFCC'
  - **ARG 007:** X'00000000000000000000000000000000' AT X'00144C18'
  - **ARG 008:** X'00000000000000000000000800000008' AT X'001445EC'
  - **ARG 009:** X'00000000000000080000000800040000' AT X'001445F0'

**Figure 37. Example CEDF output on exit from an MQINQ call (hexadecimal)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** X'00000000000000010000000200004044' AT X'05ECAFCC'
  - **ARG 001:** X'00000001000000720000000000000000' AT X'001445E4'
  - **ARG 002:** X'000000020000404485ECA00885ECA220' AT X'05ECAFD4'
  - **ARG 003:** X'0000000D0000000C0040000000000000' AT X'00144C08'
  - **ARG 004:** X'000000020000404485ECA00885ECA220' AT X'05ECAFD4'
  - **ARG 005:** X'00400000000000000000000000000000' AT X'00144C10'
  - **ARG 006:** X'00000000000000010000000200004044' AT X'05ECAFCC'
  - **ARG 007:** X'00000000000000000000000000000000' AT X'00144C18'
  - **ARG 008:** X'00000000000000000000000800000008' AT X'001445EC'
  - **ARG 009:** X'00000000000000080000000800040000' AT X'001445F0'

**Figure 38. Example CEDF output on entry to an MQINQ call (character)**
- **STATUS:** ABOUT TO EXECUTE COMMAND
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '.............. .'
  - **ARG 001:** '................'
  - **ARG 002:** '...... .e...e.s.'
  - **ARG 003:** '................'
  - **ARG 004:** '...... .e...e.s.'
  - **ARG 005:** '................'
  - **ARG 006:** '.............. .'
  - **ARG 007:** '................'
  - **ARG 008:** '................'
  - **ARG 009:** '................'

**Figure 39. Example CEDF output on exit from an MQINQ call (character)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '.............. .'
  - **ARG 001:** '................'
  - **ARG 002:** '...... .e...e.s.'
  - **ARG 003:** '......... ......'
  - **ARG 004:** '...... .e...e.s.'
  - **ARG 005:** '. ..............'
  - **ARG 006:** '.............. .'
  - **ARG 007:** '................'
  - **ARG 008:** '................'
  - **ARG 009:** '................'

### Example CEDF Output for MQSET Call

**Example CEDF output for the MQSET call**

**Table 15. Parameters for the MQSET call**
- **ARG 000:** Connection handle
- **ARG 001:** Object handle
- **ARG 002:** Count of selectors
- **ARG 003:** Array of attribute selectors
- **ARG 004:** Count of integer attributes
- **ARG 005:** Integer attributes
- **ARG 006:** Length of character attributes buffer
- **ARG 007:** Character attributes
- **ARG 008:** Completion code
- **ARG 009:** Reason code

**Figure 40. Example CEDF output on entry to an MQSET call (hexadecimal)**
- **STATUS:** ABOUT TO EXECUTE COMMAND
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** X'00000000000000010000007200000000' AT X'001445E0'
  - **ARG 001:** X'00000001000000720000000000000000' AT X'001445E4'
  - **ARG 002:** X'00000001000000020000404485ECA008' AT X'05ECAFDC'
  - **ARG 003:** X'00000018000007DF0000000000000000' AT X'00144C08'
  - **ARG 004:** X'00000001000000020000404485ECA008' AT X'05ECAFDC'
  - **ARG 005:** X'00000000000000000000000000000000' AT X'00144C10'
  - **ARG 006:** X'00000000000000010000000200004044' AT X'05ECAFD8'
  - **ARG 007:** X'00000000000000000000000000000000' AT X'00144C18'
  - **ARG 008:** X'00000000000000000000000800000008' AT X'001445EC'
  - **ARG 009:** X'00000000000000080000000800000060' AT X'001445F0'

**Figure 41. Example CEDF output on exit from an MQSET call (hexadecimal)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** X'00000000000000010000007200000000' AT X'001445E0'
  - **ARG 001:** X'00000001000000720000000000000000' AT X'001445E4'
  - **ARG 002:** X'00000001000000020000404485ECA008' AT X'05ECAFDC'
  - **ARG 003:** X'00000018000007DF0000000000000000' AT X'00144C08'
  - **ARG 004:** X'00000001000000020000404485ECA008' AT X'05ECAFDC'
  - **ARG 005:** X'00000000000000000000000000000000' AT X'00144C10'
  - **ARG 006:** X'00000000000000010000000200004044' AT X'05ECAFD8'
  - **ARG 007:** X'00000000000000000000000000000000' AT X'00144C18'
  - **ARG 008:** X'00000000000000000000000800000008' AT X'001445EC'
  - **ARG 009:** X'00000000000000080000000800000060' AT X'001445F0'

**Figure 42. Example CEDF output on entry to an MQSET call (character)**
- **STATUS:** ABOUT TO EXECUTE COMMAND
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '................'
  - **ARG 001:** '................'
  - **ARG 002:** '.......... .e...'
  - **ARG 003:** '................'
  - **ARG 004:** '.......... .e...'
  - **ARG 005:** '................'
  - **ARG 006:** '.............. .'
  - **ARG 007:** '................'
  - **ARG 008:** '................'
  - **ARG 009:** '...............-'

**Figure 43. Example CEDF output on exit from an MQSET call (character)**
- **STATUS:** COMMAND EXECUTION COMPLETE
- **CALL TO RESOURCE MANAGER:** MQM
  - **ARG 000:** '................'
  - **ARG 001:** '................'
  - **ARG 002:** '.......... .e...'
  - **ARG 003:** '................'
  - **ARG 004:** '.......... .e...'
  - **ARG 005:** '................'
  - **ARG 006:** '.............. .'
  - **ARG 007:** '................'
  - **ARG 008:** '................'
  - **ARG 009:** '...............-'

### Diagnostic Aids for IBM MQ, IMS, and Db2

#### Diagnostic Aids for IMS
- **Use this topic to investigate IMS diagnostic facilities.**
  - The application development environment is the same as for any other IMS application. Therefore, any tools normally used in that environment can be used to develop IBM MQ applications.
  - Trace and dump data is available from the IMS region. These entries are described in the IMS/ESA® Diagnosis Guide and Reference manual.

#### Diagnostic Aids for Db2
- **Use this topic to investigate references for Db2 diagnostic tools.**
  - Refer to the following manuals for help in diagnosing Db2 problems:
    - Db2 for z/OS Diagnosis Guide and Reference
    - Db2 Messages and Codes

#### IBM MQ for z/OS Dumps
- **Use this topic for information about the use of dumps in problem determination.**
  - It describes the steps you should take when looking at a dump produced by an IBM MQ for z/OS address space.

##### How to Use Dumps for Problem Determination
- When solving problems with your IBM MQ for z/OS system, you can use dumps in two ways:
  - To examine the way IBM MQ processes a request from an application program. This typically involves analyzing the whole dump, including control blocks and the internal trace.
  - To identify problems with IBM MQ for z/OS itself, under the direction of IBM support center personnel.

##### Instructions for Getting and Processing a Dump
- Use the instructions in the following topics to get and process a dump:
  - “Getting a dump with IBM MQ for z/OS” on page 268
  - “Using the z/OS DUMP command” on page 269
  - “Processing a dump using the IBM MQ for z/OS dump display panels” on page 271
  - “Processing an IBM MQ for z/OS dump using line mode IPCS” on page 275
  - “Processing an IBM MQ for z/OS dump using IPCS in batch” on page 282

##### Analyzing the Dump Title
- The dump title might provide sufficient information in the abend and reason codes to resolve the problem. You can see the dump title in the console log or by using the z/OS command `DISPLAY DUMP,TITLE`.
- The format of the dump title is explained in “Analyzing the dump and interpreting dump titles on z/OS” on page 283.
- For information about the IBM MQ for z/OS abend codes, see “IBM MQ for z/OS abends” on page 250, and abend reason codes are documented in IBM MQ for z/OS messages, completion, and reason codes.

##### Types of Dumps
- If there is not enough information about your problem in the dump title, format the dump to display the other information contained in it.
- See the following topics for information about different types of dumps:
  - “SYSUDUMP information on z/OS” on page 285
  - “Snap dumps on z/OS” on page 286
  - “SYS1.LOGREC information on z/OS” on page 286
  - “SVC dumps on z/OS” on page 287

### Related Concepts
- **“IBM MQ for z/OS abends” on page 250:**
  - Abends can occur in WebSphere for z/OS or other z/OS systems. Use this topic to understand the IBM MQ system abend codes and how to investigate abends which occur in CICS, IMS, and z/OS.
- **“Diagnostic information produced on IBM MQ for z/OS” on page 253:**
  - Use this topic to investigate some of the diagnostic information produced by z/OS that can be useful in problem determination and understand how to investigate error messages, dumps, console logs, job output, symptom strings, and queue output.

### Related Tasks
- **“Tracing on z/OS” on page 395:**
  - There are different trace options that can be used for problem determination with IBM MQ. Use this topic to understand the different options and how to control trace.

### Getting a Dump with IBM MQ for z/OS
- **Use this topic to understand the different dump types for IBM MQ for z/OS problem determination.**
- **Table 16. Types of dump used with IBM MQ for z/OS:**
  | Dump Type         | Data Set           | Output Type   | Formatted By       | Caused By                                           |
  |-------------------|--------------------|---------------|--------------------|-----------------------------------------------------|
  | SVC               | Defined by system   | Machine readable | IPCS in conjunction with an IBM MQ for z/OS verb exit functional recovery routine | z/OS or IBM MQ for z/OS detecting error, or the operator entering the z/OS DUMP command |
  | SYSUDUMP          | Defined by JCL      | Formatted     | Normally SYSOUT=A  | An abend condition (only taken if there is a SYSUDUMP DD statement for the step) |
  | Snap              | Defined by JCL      | Formatted     | Normally SYSOUT=A  | Unexpected MQI call errors reported to adapters, or FFST information from the channel initiator |
  | Stand-alone       | Defined by installation (tape or disk) | Machine readable | IPCS in conjunction with an IBM MQ for z/OS verb exit | Operator IPL of the stand-alone dump program |

- **IBM MQ for z/OS recovery routines request SVC dumps for most X'5C6' abends.** The exceptions are listed in “SVC dumps on z/OS” on page 287. SVC dumps issued by IBM MQ for z/OS are the primary source of diagnostic information for problems.
- **If the dump is initiated by the IBM MQ subsystem, information about the dump is put into an area called the summary portion.** This contains information that the dump formatting program can use to identify the key components.
- **For more information about SVC dumps, see the z/OS MVS Diagnosis: Tools and Service Aids manual.**

### Using the z/OS DUMP Command
- **To resolve a problem, IBM can ask you to create a dump file of the queue manager address space, channel initiator address space, or coupling facilities structures.**
- **You might be asked to create a dump file for any or several of the following items for IBM to resolve the problem:**
  - Main IBM MQ address space
  - Channel initiator address space
  - Coupling facility application structure
  - Coupling facility administration structure for your queue sharing group

- **Figures 44 through 48 show examples of the z/OS commands to do this, assuming a subsystem name of CSQ1.**

**Figure 44. Dumping the IBM MQ queue manager and application address spaces**
- **DUMP COMM=(MQ QUEUE MANAGER DUMP)**
  - *01 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - R 01,JOBNAME=(CSQ1MSTR,BATCH),CONT
  - *02 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - IEE600I REPLY TO 01 IS;JOBNAME=CSQ1MSTR,CONT
  - R 02,SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),END
  - IEE600I REPLY TO 02 IS;SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),END
  - IEA794I SVC DUMP HAS CAPTURED: 869
  - DUMPID=001 REQUESTED BY JOB (*MASTER*)
  - DUMP TITLE=MQ QUEUE MANAGER MAIN DUMP

**Figure 45. Dumping the IBM MQ queue manager address space**
- **DUMP COMM=(MQ QUEUE MANAGER DUMP)**
  - *01 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - R 01,JOBNAME=(CSQ1MSTR),CONT
  - *02 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - IEE600I REPLY TO 01 IS;JOBNAME=CSQ1MSTR,CONT
  - R 02,SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),END
  - IEE600I REPLY TO 02 IS;SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),END
  - IEA794I SVC DUMP HAS CAPTURED: 869
  - DUMPID=001 REQUESTED BY JOB (*MASTER*)
  - DUMP TITLE=MQ QUEUE MANAGER DUMP

**Figure 46. Dumping the channel initiator address space**
- **DUMP COMM=(MQ CHIN DUMP)**
  - *01 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - R 01,JOBNAME=CSQ1CHIN,CONT
  - *02 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - IEE600I REPLY TO 01 IS;JOBNAME=CSQ1CHIN,CONT
  - R 02,SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),CONT
  - *03 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - IEE600I REPLY TO 02 IS;SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),CONT
  - R 03,DSPNAME=('CSQ1CHIN'.CSQXTRDS),END
  - IEE600I REPLY TO 03 IS;DSPNAME='CSQ1CHIN'.CSQXTRDS,END
  - IEA794I SVC DUMP HAS CAPTURED: 869
  - DUMPID=001 REQUESTED BY JOB (*MASTER*)
  - DUMP TITLE=MQ CHIN DUMP

**Figure 47. Dumping the main IBM MQ and channel initiator address spaces**
- **DUMP COMM=(MQ MSTR & CHIN DUMP)**
  - *01 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - R 01,JOBNAME=(CSQ1MSTR,CSQ1CHIN),CONT
  - *02 IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND
  - IEE600I REPLY TO 01 IS;JOBNAME=(CSQ1MSTR,CSQ1CHIN),CONT
  - R 02,SDATA=(CSA,RGN,PSA,SQA,LSQA,TRT,SUM),CONT