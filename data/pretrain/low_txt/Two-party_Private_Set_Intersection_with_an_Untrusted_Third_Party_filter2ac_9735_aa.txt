# Title: Two-Party Private Set Intersection with an Untrusted Third Party

## Authors:
- Phi Hung Le, George Mason University, Fairfax, Virginia
- Samuel Ranellucci, Unbound Tech, Petach Tikva, Israel
- S. Dov Gordon, George Mason University, Fairfax, Virginia

## Abstract
We present new protocols for two parties to securely compute on the items in their intersection, utilizing an untrusted third party that has no input. The involvement of this third party enables the construction of highly efficient protocols that are secure against a single malicious corruption.

## CCS Concepts
- **Security and Privacy** → Cryptography; Security services.

## Keywords
- Private Set Intersection (PSI)
- Cryptography

## ACM Reference Format
Phi Hung Le, Samuel Ranellucci, and S. Dov Gordon. 2019. Two-Party Private Set Intersection with an Untrusted Third Party. In 2019 ACM SIGSAC Conference on Computer and Communications Security (CCS '19), November 11–15, 2019, London, United Kingdom. ACM, New York, NY, USA, 18 pages. https://doi.org/10.1145/3319535.3345661

## Acknowledgments
This work was supported by the Defense Advanced Research Projects Agency (DARPA) and Space and Naval Warfare Systems Center, Pacific (SSC Pacific) under Contract No. N66001-15-C-4070.

## 1 Introduction
Secure multi-party computation (MPC) protocols enable multiple distrustful data holders to jointly compute on their collected inputs while revealing nothing beyond the output. Many foundational questions about secure computation were resolved in the last century. In recent years, research has focused on concrete complexity to bridge the gap between the cost of computing on private data and that of computing in the clear. Today, several companies worldwide offer secure computation for various applications, and Google uses it internally for set intersection to help advertisers determine the efficacy of their ads [23].

### 1.1 Contributions
We develop several new protocols for private set intersection (PSI) and private set union in a three-party model. Our protocols fall into two categories: one group relies on polynomial interpolation, and the other uses a mix of generic techniques for 3-party computation. We also construct a hybrid protocol that leverages the advantages and disadvantages of both approaches. We explore these trade-offs experimentally.

- **Intersection Cardinality**: We design three new protocols for privately computing the cardinality of the set intersection. These protocols serve as building blocks for some of our f(PSI) constructions.
- **Computing Functions of the Intersection Payload**: We identify a natural restriction where the function f depends only on the payload data, not on the indices themselves. This restriction does not seem to help in the 2-party setting.
- **Computing Functions of the Intersection Indices**: We design two protocols for computing on the indices (with or without payload). These constructions are currently inefficient, and further work is required.

### 1.2 Related Work
- **PSI with an Untrusted Mediator**: Kamara et al. [26] proposed a similar security model and constructed very efficient PSI protocols. However, their protocols do not easily extend to computing the cardinality of the PSI or f(PSI).
- **PSI with Computation**: Orlandi et al. [7] and Pinkas et al. [32, 33] provide 2-party protocols for computing arbitrary functions over the intersection. Their protocols require all 2n values to be fed into the circuit for f, which can be inefficient for certain functions.
- **Other Related Work**: Multiple works have looked at intersection cardinality [8, 11, 15, 27], but they are generally inefficient. Labeled-PSI [4] is an efficient two-party protocol for asymmetric settings, but it leaks the entire intersection, which we aim to avoid.

## 2 Definitions and Notation

### 2.1 Security Definitions
We prove our protocols secure in the real/ideal paradigm, in the stand-alone setting, and achieving security with abort. Formal definitions can be found in Goldreich [17]. In all our protocols, we allow the third party (P3) to learn the size of the intersection of the input sets, which is reflected in our ideal functionalities.

### 2.2 Secret Sharing
We use several secret sharing schemes in our protocols:
- **Shamir Secret Sharing**: Used in our constructions based on polynomial interpolation (Section 3).
- **Additive 2-out-of-2 Sharings**: Used in our circuit-based protocols (Section 4.1).
- **Replicated Secret Sharing**: A 2-out-of-3 secret sharing scheme where three field elements are selected such that their sum equals the shared value. P1 gets x1 and x2, P2 gets x2 and x3, and P3 gets x3 and x1.

Notation: We denote [x]A, [x]B as replicated arithmetic and binary shares, respectively.

---

This revised version aims to enhance clarity, coherence, and professionalism in the text.