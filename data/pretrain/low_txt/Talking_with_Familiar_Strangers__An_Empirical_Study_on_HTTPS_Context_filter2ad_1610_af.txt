### Inconsistencies in Adversarial Contexts

Inconsistencies can be catastrophic in adversarial contexts [44]. These inconsistencies often arise from misconfigurations by developers, leading to variations in implementations across different entities. Such inconsistencies can occur between two web servers, between middleboxes (e.g., proxies, firewalls, and CDN nodes) and back-end servers, or even between different user agents [52]. In fact, ambiguities among entities can appear in any security policies enforced by HTTP headers, including HSTS and CORS [25, 42].

Mendoza et al. explored the impact of subtle inconsistencies in HTTP security headers for websites on different platforms (e.g., desktop, mobile), which expose users to attacks [52]. Notably, Chen et al. demonstrated the implications of inconsistent implementations while processing the `Host` header, a critical HTTP header that indicates the origin while enforcing security policies [26]. Defects in interpreting the `Host` header can break the isolation of different origins, especially in HTTPS environments [31]. Under the premise of origin confusion, we find that well-known inconsistencies in security policies can influence the secure context and lead to more attack scenarios with the help of shared certificates.

### Conclusion

While specially designed policies can mitigate well-known attacks like SSL stripping, they remain vulnerable in origin confusion scenarios with shared TLS certificates. We systematically evaluate the implications of SCC (Secure Context Confusion) attacks. Our findings show that adversaries can hijack secure traffic between clients and well-configured servers by exploiting misconfigured response headers from other servers. These attacks apply to established secure connections, which are unnoticeable to users and applications because the accessed website's certificate is valid for the flawed server. We identified several attack scenarios, such as payment hijacking and download hijacking, from major sites like Microsoft, Alibaba, and JD.com. Additionally, we propose a systematic methodology to discover exploitable web servers in the wild. Through a measurement study, we found that 25.2% of subdomains of Alexa Top 500 websites are affected by these issues. From our analysis, we observed diversity among websites in handling security policies, especially HTTP headers. The widespread use of shared TLS certificates should be a primary concern. Therefore, we urge the community and developers to pay more attention to the security status of certificate management and policy implementation.

### Acknowledgments

We sincerely thank all anonymous reviewers for their valuable reviews and comments, which helped improve the paper. We also thank Junlin Wei, Minglei Guo, and Xiarun Chen for their assistance. This work is supported in part by the National Natural Science Foundation of China (Grant No. U1836213 and U1636204), the BN-Rist Network and Software Security Research Program (Grant No. BNR2019TD01004), Beijing Nova Program of Science and Technology (Grant No. Z191100001119131), and the Joint Funds of the National Natural Science Foundation of China (Grant No. U1836113).

### References

[1] [n.d.]. CVE-2011-3389: BEAST Attack. https://nvd.nist.gov/vuln/detail/CVE-2011-3389.
[2] [n.d.]. Danami: Port/IP Redirection. https://docs.danami.com/juggernaut/user-guide/port-ip-redirection. Accessed: Nov 3, 2019.
[3] [n.d.]. Google Chrome engineers want to block some HTTP file downloads. https://www.zdnet.com/article/google-chrome-engineers-want-to-block-some-http-file-downloads/. April 10, 2019.
[4] [n.d.]. Google: HSTS Preload List. https://opensource.google.com/projects/hsts-preload-list.
[5] [n.d.]. Google Transparency Report: HTTPS encryption on the web. https://transparencyreport.google.com/https/overview.
[6] [n.d.]. HTTPS usage statistics on top 1M websites. https://statoperator.com/research/https-usage-statistics-on-top-websites/. Accessed: Dec 14, 2019.
[7] [n.d.]. Man-in-the-Middle TLS Protocol Downgrade Attack. https://www.praetorian.com/blog/man-in-the-middle-tls-ssl-protocol-downgrade-attack. Accessed: August 23, 2019.
[8] [n.d.]. MDN Web Docs: Mixed content. https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content.
[9] [n.d.]. MDN Web Docs: Redirections in HTTP. https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections.
[10] [n.d.]. No More Mixed Messages About HTTPS. https://blog.chromium.org/2019/10/no-more-mixed-messages-about-https.html. October 3, 2019.
[11] [n.d.]. OWASP Secure Headers Project. https://www.owasp.org/index.php/OWASP_Secure_Headers_Project. Accessed: Dec 2, 2019.
[12] [n.d.]. Preventing Mixed Content. https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content.
[13] [n.d.]. SSLStrip2. https://github.com/LeonardoNve/sslstrip2.
[14] [n.d.]. TLS Redirection (and Virtual Host Confusion). https://github.com/GrrrDog/TLS-Redirection#intro.
[15] [n.d.]. Trying to take the dum-dum out of Security. https://web.archive.org/web/20150921195009/http://sign0f4.blogspot.com/2014/10/mitmf-v07-released-sslstrip-integration.html.
[16] [n.d.]. Usage statistics of HTTP Strict Transport Security for websites. https://w3techs.com/technologies/details/ce-hsts/all/all. Accessed: Dec 13, 2019.
[17] 2016. Mixed Content (W3C Candidate Recommendation). https://www.w3.org/TR/2016/CR-mixed-content-20160802/.
[18] 2019. Mixed Content (W3C Editorâ€™s draft). https://w3c.github.io/webappsec-mixed-content/.

[Further references follow in a similar format.]

### Appendix

#### A. Response Headers for Switching Client IP Case

In Section 5.3.2, we discussed a Case 4 of downgrading HTTPS traffic by switching the client IP address. Table 4 presents the response headers received at different locations, including Jilin (China), Tokyo (Japan), and Los Angeles (US). From the `Location` headers, we see that Weibo serves users in Japan via the path `/jp` and users in the US via the path `/us`.

| Request URL | Dst IP | Src IPs | Location |
|-------------|--------|---------|----------|
| https://www.weibo.com/ | 111.25.158.225 | 45.32.47.58 | Tokyo, Japan |
|  |  | 144.202.112.190 | Los Angeles, US |

**Response Headers:**

- **Jilin, China:**
  - HTTP/1.1 200 OK
  - Server: WeiBo/LB
  - Transfer-Encoding: chunked
  - Pragma: no-cache
  - Content-Encoding: gzip
  - LB_HEADER: venus244
  - ...

- **Tokyo, Japan:**
  - HTTP/1.1 302 Moved Temporarily
  - Server: nginx
  - Status: 302
  - Pragma: no-cache
  - Location: http://weibo.com/jp
  - X-Via-Cdn: f=Akamai, s=23.207.172.156, c=45.32.47.58
  - ...

- **Los Angeles, US:**
  - HTTP/1.1 302 Moved Temporarily
  - Pragma: no-cache
  - Server: nginx
  - Status: 302
  - Location: http://weibo.com/us
  - X-Via-Cdn: f=Akamai, s=23.208.64.165, c=144.202.112.190
  - ...