### Acknowledgments

We would like to extend our gratitude to the anonymous reviewers for their valuable comments and suggestions.

### References

1. ACIIÇMEZ, O. (2007). Yet another microarchitectural attack: Exploiting i-cache. In *Proceedings of the 2007 ACM Workshop on Computer Security Architecture* (CSAW '07), ACM, pp. 11–18.

2. ACIIÇMEZ, O., and ÇETIN K. KOÇ (2006). Trace-driven cache attacks on AES. In *Proceedings of the 8th International Conference on Information and Communications Security* (ICICS'06), Springer-Verlag, pp. 112–121.

3. ACIIÇMEZ, O., SCHINDLER, W., and ÇETIN K. KOÇ (2006). Cache-based remote timing attack on the AES. In *Topics in Cryptology – CT-RSA 2007*, M. Abe (Ed.), Lecture Notes in Computer Science, vol. 4377, Springer Berlin Heidelberg, pp. 271–286.

4. ALMEIDA, J. B., BARBOSA, M., BARTHE, G., DUPRESSOIR, F., and EMMI, M. (2016). Verifying constant-time implementations. In *25th USENIX Security Symposium (USENIX Security 16)*, USENIX Association, pp. 53–70.

5. ARM LIMITED (June 2013). *Cortex-A15 MPCore Revision: r4p0 Technical Reference Manual*. [Online]. Available: http://infocenter.arm.com/help/topic/com.arm.doc.ddi0438i/DDI0438I_cortex_a15_r4p0_trm.pdf. Accessed: 2017-06-29.

6. ARM LIMITED (April 2013). *Cortex-A7 MPCore Revision: r0p5 Technical Reference Manual*. [Online]. Available: http://infocenter.arm.com/help/topic/com.arm.doc.ddi0464f/DDI0464F_cortex_a7_mpcore_r0p5_trm.pdf. Accessed: 2017-06-29.

7. ARM LIMITED (May 2014). *ARM Architecture Reference Manual - ARMv7-A and ARMv7-R Edition, Revision C.c*.

8. ARM LIMITED (August 2014). *Cortex-A57 MPCore Processor Revision: r1p3 Technical Reference Manual*. [Online]. Available: http://infocenter.arm.com/help/topic/com.arm.doc.ddi0488h/DDI0488H_cortex_a57_mpcore_trm.pdf. Accessed: 2017-06-29.

9. ARM LIMITED (February 2016). *Cortex-A53 MPCore Processor Revision: r0p4 Technical Reference Manual*. [Online]. Available: http://infocenter.arm.com/help/topic/com.arm.doc.ddi0500g/DDI0500G_cortex_a53_trm.pdf. Accessed: 2017-06-29.

10. ARM LIMITED (March 2017). *ARM Architecture Reference Manual - ARMv8, for ARMv8-A architecture profile, Revision B.a*.

11. ARM LIMITED (2017). *DSTREAM*. [Online]. Available: https://developer.arm.com/products/software-development-tools/debug-probes-and-adapters/dstream. Accessed: 2017-06-29.

12. BENGER, N., VAN DE POL, J., SMART, N., and YAROM, Y. (2014). "ooh aah... just a little bit": A small amount of side channel can go a long way. In *Cryptographic Hardware and Embedded Systems – CHES 2014: 16th International Workshop, Busan, South Korea, September 23-26, 2014. Proceedings*, L. Batina and M. Robshaw (Eds.), Lecture Notes in Computer Science, vol. 8731, Springer Berlin Heidelberg, pp. 75–92.

13. BERNSTEIN, D. J. (2005). Cache-timing attacks on AES. Technical Report, The University of Illinois at Chicago. [Online]. Available: http://cr.yp.to/antiforgery/cachetiming-20050414.pdf.

14. BOGDANOV, A., EISENBARTH, T., PAAR, C., and WIENECKE, M. (2010). Differential cache-collision timing attacks on AES with applications to embedded CPUs. In *The Cryptographers’ Track at the RSA Conference 2010, San Francisco, CA, USA, March 1-5, 2010. Proceedings*, Springer-Verlag, pp. 235–251.

15. BONNEAU, J., and MIRONOV, I. (2006). Cache-collision timing attacks against AES. In *Proc. Cryptographic Hardware and Embedded Systems (CHES) 2006*, Lecture Notes in Computer Science, Springer-Verlag, pp. 201–215.

16. COUNTERPOINT TECHNOLOGY MARKET RESEARCH (2017). *Global Smartphone Shipments Market Share Q1 2017. Infographic Q1-2017 Mobile Market Monitor*.

17. DEMME, J., MARTIN, R., WAKSMAN, A., and SETHUMADHAVAN, S. (2012). Side-channel vulnerability factor: A metric for measuring information leakage. In *Proceedings of the 39th Annual International Symposium on Computer Architecture (ISCA '12)*, IEEE Computer Society, pp. 106–117.

18. DOYCHEV, G., FELD, D., KOPF, B., MAUBORGNE, L., and REINEKE, J. (2013). Cacheaudit: A tool for the static analysis of cache side channels. In *Presented as part of the 22nd USENIX Security Symposium (USENIX Security 13)*, USENIX, pp. 431–446.

19. FOURNIER, J., and TUNSTALL, M. (2006). Cache-based power analysis attacks on AES. In *Information Security and Privacy*, L. Batten and R. Safavi-Naini (Eds.), Lecture Notes in Computer Science, vol. 4058, Springer Berlin Heidelberg, pp. 17–28.

20. GALLAIS, J.-F., and KIZHVATOV, I. (2011). Error-tolerance in trace-driven cache collision attacks. In *Second International Workshop on Constructive Side-Channel Analysis and Secure Design*.

21. GRUSS, D., MAURICE, C., FOGH, A., LIPP, M., and MANGARD, S. (2016). Prefetch side-channel attacks: Bypassing SMAP and kernel ASLR. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)*, ACM, pp. 368–379.

22. GRUSS, D., MAURICE, C., and MANGARD, S. (2016). Rowhammer.js: A remote software-induced fault attack in JavaScript. In *13th Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)*.

23. GRUSS, D., MAURICE, C., WAGNER, K., and MANGARD, S. (2016). Flush+flush: A fast and stealthy cache attack. In *13th Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)*.

24. GRUSS, D., SPREITZER, R., and MANGARD, S. (2015). Cache template attacks: Automating attacks on inclusive last-level caches. In *24th USENIX Security Symposium (USENIX Security 15)*, USENIX Association, pp. 897–912.

25. GULLASCH, D., BANGERTER, E., and KRENN, S. (2011). Cache games – bringing access-based cache attacks on AES to practice. In *Proceedings of the 2011 IEEE Symposium on Security and Privacy (SP '11)*, IEEE Computer Society, pp. 490–505.

26. İNCİ, M. S., GÜLMEZOĞLU, B., IRAZOQUI, G., EISENBARTH, T., and SUNAR, B. (2016). Cache attacks enable bulk key recovery on the cloud. In *Cryptographic Hardware and Embedded Systems – CHES 2016: 18th International Conference, Santa Barbara, CA, USA, August 17-19, 2016, Proceedings*, Springer Berlin Heidelberg, pp. 368–388.

27. IRAZOQUI, G., EISENBARTH, T., and SUNAR, B. (2015). S$A: A shared cache attack that works across cores and defies VM sandboxing and its application to AES. In *Proceedings of the 2015 IEEE Symposium on Security and Privacy (SP '15)*, IEEE Computer Society, pp. 591–604.

28. IRAZOQUI, G., EISENBARTH, T., and SUNAR, B. (2016). Cross-processor cache attacks. In *Proceedings of the 11th ACM Symposium on Information, Computer and Communications Security (ASIA CCS '16)*, ACM, pp. 353–364.

29. IRAZOQUI, G., İNCİ, M., EISENBARTH, T., and SUNAR, B. (2014). Wait a minute! A fast, cross-VM attack on AES. In *Research in Attacks, Intrusions and Defenses: 17th International Symposium, RAID 2014, Gothenburg, Sweden, September 17-19, 2014. Proceedings*, A. Stavrou, H. Bos, and G. Portokalidis (Eds.), Lecture Notes in Computer Science, vol. 8688, Springer International Publishing, pp. 299–319.

30. IRAZOQUI, G., İNCİ, M. S., EISENBARTH, T., and SUNAR, B. (2015). Lucky 13 strikes back. In *Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security (ASIA CCS '15)*, ACM, pp. 85–96.

31. KAY, R. (2014). Intel And AMD: The Juggernaut Vs. The Squid. Forbes, Inc. [Online]. Available: http://www.forbes.com/sites/rogerkay/2014/11/25/intel-and-amd-the-juggernaut-vs-the-squid. Published: 2014-11-25. Accessed: 2017-06-29.

32. KELSEY, J., SCHNEIER, B., WAGNER, D., and HALL, C. (1998). Side channel cryptanalysis of product ciphers. In *Computer Security - ESORICS 98*, J.-J. Quisquater, Y. Deswarte, C. Meadows, and D. Gollmann (Eds.), Lecture Notes in Computer Science, vol. 1485, Springer Berlin Heidelberg, pp. 97–110.

33. KIM, T., PEINADO, M., and MAINAR-RUIZ, G. (2012). StealthMem: System-level protection against cache-based side channel attacks in the cloud. In *Presented as part of the 21st USENIX Security Symposium (USENIX Security 12)*, USENIX, pp. 189–204.

34. KLUG, B., and SHIMPI, A. L. (2011). Qualcomm’s new Snapdragon S4 & Krait architecture explored. AnandTech. [Online]. Available: http://www.anandtech.com/show/4940/qualcomm-new-snapdragon-s4-msm8960-krait-architecture/2. Published: 2011-10-07. Accessed: 2017-06-29.

35. KOCHER, P. C. (1996). Timing attacks on implementations of Diffie-Hellman, RSA, DSS, and other systems. In *Proceedings of the 16th Annual International Cryptology Conference on Advances in Cryptology (CRYPTO '96)*, Springer-Verlag, pp. 104–113.

36. LINUX PROGRAMMER’S MANUAL (2016). *perf_event_open - set up performance monitoring*. [Online]. Available: http://man7.org/linux/man-pages/man2/perf_event_open.2.html. Accessed: 2017-06-29.

37. LIPP, M., GRUSS, D., SPREITZER, R., MAURICE, C., and MANGARD, S. (2016). Armageddon: Cache attacks on mobile devices. In *25th USENIX Security Symposium (USENIX Security 16)*, USENIX Association, pp. 549–564.

38. LIU, F., GE, Q., YAROM, Y., MCKEEN, F., ROZAS, C., HEISER, G., and LEE, R. B. (2016). Catalyst: Defeating last-level cache side channel attacks in cloud computing. In *2016 IEEE International Symposium on High Performance Computer Architecture (HPCA)*, pp. 406–418.

39. LIU, F., YAROM, Y., GE, Q., HEISER, G., and LEE, R. B. (2015). Last-level cache side-channel attacks are practical. In *Proceedings of the 2015 IEEE Symposium on Security and Privacy (SP '15)*, IEEE Computer Society, pp. 605–622.

40. NEVE, M., and SEIFERT, J.-P. (2007). Advances on access-driven cache attacks on AES. In *Selected Areas in Cryptography*, E. Biham and A. Youssef (Eds.), Lecture Notes in Computer Science, vol. 4356, Springer Berlin Heidelberg, pp. 147–162.

41. OREN, Y., KEMERLIS, V. P., SETHUMADHAVAN, S., and KEROMYTIS, A. D. (2015). The spy in the sandbox: Practical cache attacks in JavaScript and their implications. In *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS '15)*, ACM, pp. 1406–1418.

42. OSVIK, D. A., SHAMIR, A., and TROMER, E. (2006). Cache attacks and countermeasures: The case of AES. In *Topics in Cryptology – CT-RSA 2006: The Cryptographers’ Track at the RSA Conference 2006, San Jose, CA, USA, February 13-17, 2005. Proceedings*, Springer Berlin Heidelberg, pp. 1–20.

43. PAGE, D. (2002). Theoretical use of cache memory as a cryptanalytic side-channel. Department of Computer Science, University of Bristol, Technical Report CSTR-02-003. [Online]. Available: http://eprint.iacr.org/2002/169.

44. PERCIVAL, C. (2005). Cache missing for fun and profit. In *Proceedings of BSDCan 2005*.

45. POSIX PROGRAMMER’S MANUAL (2013). *clock_gettime, clock_settime, clock_getres - clock and timer functions*. [Online]. Available: http://man7.org/linux/man-pages/man3/clock_gettime.3p.html. Accessed: 2017-06-29.

46. RISTENPART, T., TROMER, E., SHACHAM, H., and SAVAGE, S. (2009). Hey, you, get off of my cloud: Exploring information leakage in third-party compute clouds. In *Proceedings of the 16th ACM Conference on Computer and Communications Security (CCS '09)*, ACM, pp. 199–212.

47. SHIMPI, A. L., and GREENHALGH, P. (2013). Answered by the Experts: ARM’s Cortex A53 Lead Architect, Peter Greenhalgh. AnandTech. [Online]. Available: http://www.anandtech.com/show/7591/answered-by-the-experts-arms-cortex-a53-lead-architect-peter-greenhalgh. Published: 2013-12-17. Accessed: 2017-06-29.

48. TSUNOO, Y., SAITO, T., SUZAKI, T., SHIGERI, M., and MIYAUCHI, H. (2003). Cryptanalysis of DES implemented on computers with cache. In *Cryptographic Hardware and Embedded Systems - CHES 2003*, C. Walter, Ç. K. Koç, and C. Paar (Eds.), Lecture Notes in Computer Science, vol. 2779, Springer Berlin Heidelberg, pp. 62–76.

49. WANG, Z., and LEE, R. B. (2007). New cache designs for thwarting software cache-based side channel attacks. In *Proceedings of the 34th Annual International Symposium on Computer Architecture (ISCA '07)*, ACM, pp. 494–505.

50. WILLIAMSON, B. D. (September 2012). Line allocation in multi-level hierarchical data stores. Patent US8271733 B2, ARM Limited. [Online]. Available: https://www.google.com/patents/US8271733.

51. YAROM, Y., and FALKNER, K. (2014). Flush+reload: A high resolution, low noise, L3 cache side-channel attack. In *23rd USENIX Security Symposium (USENIX Security 14)*, USENIX Association, pp. 719–732.

52. YAROM, Y., GENKIN, D., and HENINGER, N. (2016). Cachebleed: A timing attack on OpenSSL constant time RSA. In *Cryptographic Hardware and Embedded Systems – CHES 2016: 18th International Conference, Santa Barbara, CA, USA, August 17-19, 2016, Proceedings*, B. Gierlichs and A. Y. Poschmann (Eds.), Springer Berlin Heidelberg, pp. 346–367.

53. ZANKL, A., HEYSZL, J., and SIGL, G. (2017). Automated detection of instruction cache leaks in modular exponentiation software. In *Smart Card Research and Advanced Applications: 15th International Conference, CARDIS 2016, Cannes, France, November 7–9, 2016, Revised Selected Papers*, K. Lemke-Rust and M. Tunstall (Eds.), Springer International Publishing, pp. 228–244.

54. ZHANG, N., SUN, K., SHANDS, D., LOU, W., and HOU, Y. T. (2016). Truspy: Cache side-channel information leakage from the secure world on ARM devices. Cryptology ePrint Archive, Report 2016/980. [Online]. Available: http://eprint.iacr.org/2016/980.

55. ZHANG, T., ZHANG, Y., and LEE, R. B. (2016). CloudRadar: A real-time side-channel attack detection system in clouds. In *Research in Attacks, Intrusions, and Defenses: 19th International Symposium, RAID 2016, Paris, France, September 19-21, 2016, Proceedings*, F. Monrose, M. Dacier, G. Blanc, and J. Garcia-Alfaro (Eds.), Springer International Publishing, pp. 118–140.

56. ZHANG, X., XIAO, Y., and ZHANG, Y. (2016). Return-oriented flush-reload side channels on ARM and their implications for Android devices. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)*, ACM, pp. 858–870.

57. ZHANG, Y., JUELS, A., REITER, M. K., and RISTENPART, T. (2012). Cross-VM side channels and their use to extract private keys. In *Proceedings of the 2012 ACM Conference on Computer and Communications Security (CCS '12)*, ACM, pp. 305–316.

58. ZHANG, Y., JUELS, A., REITER, M. K., and RISTENPART, T. (2014). Cross-tenant side-channel attacks in PaaS clouds. In *Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14)*, ACM, pp. 990–1003.

59. ZHOU, Z., REITER, M. K., and ZHANG, Y. (2016). A software approach to defeating side channels in last-level caches. In *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)*, ACM, pp. 871–882.

### Notes

1. To the best of our knowledge, there is no official public documentation for the Qualcomm Krait 450. The details given in Table 1 are based on the results of our experiments as well as on statements from online articles [34].

2. The list of devices supported by DSTREAM can be retrieved from ARM’s website at https://developer.arm.com/products/software-development-tools/ds-5-development-studio/resources/supported-devices.

3. The timing measurement code can be retrieved from the GitHub repository at https://github.com/IAIK/armageddon.