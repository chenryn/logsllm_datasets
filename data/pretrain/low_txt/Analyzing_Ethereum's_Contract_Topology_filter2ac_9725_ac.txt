### Code Reuse in Contract-Generated Contracts

For contract-generated contracts, we observed a high degree of code reuse. These contracts also exhibit a long-tail distribution, with the largest cluster comprising 361 contracts. The extent of code reuse in these contracts, while significant, is not as prevalent as in user-generated contracts. Among the 2,440 contract-generated contracts, we identified 694 clusters, with the five largest clusters accounting for 37.5% of all such contracts. Additionally, we compared the source code of the three largest clusters and found that all three are composed of token contracts.

### Summary

The findings in this section consistently highlight a significant lack of diversity in Ethereum's smart contract ecosystem. Most contracts extensively reuse code, and the number of creators is relatively small compared to the total number of contracts. It remains to be determined whether this lack of diversity is inherent to smart contracts or Ethereum itself, or if it is a reflection of the relative immaturity of the smart contract technology. As new contracts and interaction modes develop, we may see an increase in diversity.

In the meantime, the high levels of code reuse pose a potential threat to the security and reliability of the ecosystem. Ethereum has experienced high-profile bugs leading to hard forks in the blockchain [13] and the freezing of over $170 million worth of Ether [1]. Similar to the use of multiple implementations in DNS, having multiple implementations of core contract functionality could enhance the defense-in-depth of Ethereum.

### Related Work

Extensive research has been conducted to empirically understand various aspects of the cryptocurrency ecosystem. Early studies focused on Bitcoin transactions, including transaction patterns [5, 22], properties of repeated subgraphs [16], and hypergraphs [21], as well as the UTXO set [10]. Privacy and anonymity in Bitcoin transactions have been explored through transaction history [6], address clustering [19], and mixing services [18] to de-anonymize addresses. Other studies have examined transactions related to scams, Ponzi schemes, and ransomware [8, 24, 25], and the impact of data stored in Bitcoin transactions [14].

Additional work has analyzed Bitcoin's peer-to-peer network, including information propagation [9], network reactions to partitions [13], and leveraging the peer-to-peer topology to infer influential nodes or those linked to mining pools [17].

### Smart Contract Analysis

In this paper, we focus on a unique and growing aspect of the cryptocurrency ecosystem: smart contracts. Previous studies, such as those by Norvill et al. [20] and Bartoletti and Pompianu [7], have analyzed the types of contracts being written. Norvill et al. clustered 998 Ethereum contracts based on the frequency of common words and context-triggered piecewise hashes of the bytecode. Bartoletti and Pompianu categorized 811 Ethereum contracts into five categories (financial, notary, game, wallet, and library) and found that financial contracts were the most popular, accounting for about 66% of transactions at the time.

Compared to these studies, our analysis covers a much larger scale of contracts. We are not limited to contracts with publicly available code; instead, we measure contract similarity based on n-grams of the decompiled bytecode for all unique bytecodes. This allows us to examine similarity at a much larger scale, making our work an important first step towards a more comprehensive understanding of the smart contract ecosystem.

### Conclusion

Smart contracts are a fundamental addition to cryptocurrencies. Just as it is important to study the peer-to-peer network topology and user-to-user transaction activity, it is equally important to study how users interact with smart contracts. In this paper, we have initiated a large-scale study of Ethereum's smart contracts, revealing high levels of contract activity but low levels of diversity. Most contracts are direct or near-copies of others. While this may contribute to Ethereum's success, it also represents a potential risk if buggy or vulnerable code is copied.

### Acknowledgments

We thank the anonymous reviewers for their valuable comments. This research was supported in part by NSF grants CNS-1409191, CNS-1409249, CNS-1564143, CCF-1422715, and CCF-1535929.

### References

[1] Another parity wallet hack explained. https://medium.com/@Pr0Ger/another-parity-wallet-hack-explained-847ca46a2e1c
[2] Spurious dragon hard fork. https://blog.ethereum.org/2016/11/18/hard-fork-no-4-spurious-dragon/
[3] Tangerine whistle. https://blog.ethereum.org/2016/10/18/faq-upcoming-ethereum-hard-fork/
[4] Cryptokitties craze slows down Ethereum. http://www.bbc.com/news/technology-42237162
[5] L. Anderson, R. Holz, A. Ponomarev, P. Rimba, and I. Weber. New kids on the block: an analysis of modern blockchains. arXiv preprint arXiv:1606.06530, 2016.
[6] E. Androulaki, G. O. Karame, M. Roeschlin, T. Scherer, and S. Capkun. Evaluating user privacy in Bitcoin. In International Conference on Financial Cryptography and Data Security, pages 34–51. Springer, 2013.
[7] M. Bartoletti and L. Pompianu. An empirical analysis of smart contracts: platforms, applications, and design patterns. In International Conference on Financial Cryptography and Data Security, pages 494–509. Springer, 2017.
[8] H. Basil Al Jawaheri, M. Al Sabah, and Y. Boshmaf. Measurement and analysis of Bitcoin transactions of ransomware. In Qatar Foundation Annual Research Conference Proceedings, volume 2018, page ICTPD1026. HBKU Press Qatar, 2018.
[9] C. Decker and R. Wattenhofer. Information propagation in the Bitcoin network. In International Conference on Peer-to-Peer Computing (P2P), pages 1–10. IEEE, 2013.
[10] S. Delgado-Segura, C. Pérez-Sola, G. Navarro-Arribas, and J. Herrera-Joancomartí. Analysis of the Bitcoin UTXO set.
[11] A. E. Gencer, S. Basu, I. Eyal, R. van Renesse, and E. G. Sirer. Decentralization in Bitcoin and Ethereum networks. arXiv preprint arXiv:1801.03998, 2018.
[12] A. Hertig. $160 million stuck: Can Parity still shake up Ethereum? https://www.coindesk.com/startup-lost-160-million-still-wants-shake-ethereum/
[13] L. Kiffer, D. Levin, and A. Mislove. Stick a fork in it: Analyzing the Ethereum network partition. In Proceedings of the 16th ACM Workshop on Hot Topics in Networks, pages 94–100. ACM, 2017.
[14] R. Matzutt, J. Hiller, M. Henze, J. H. Ziegeldorf, D. Müllmann, O. Hohlfeld, and K. Wehrle. A quantitative analysis of the impact of arbitrary blockchain content on Bitcoin. In Proceedings of the 22nd International Conference on Financial Cryptography and Data Security (FC). Springer, 2018.
[15] P. Maymounkov and D. Mazieres. Kademlia: A peer-to-peer information system based on the XOR metric. In International Workshop on Peer-to-Peer Systems, pages 53–65. Springer, 2002.
[16] S. Meiklejohn, M. Pomarole, G. Jordan, K. Levchenko, D. McCoy, G. M. Voelker, and S. Savage. A fistful of bitcoins: characterizing payments among men with no names. In Internet Measurement Conference, pages 127–140. ACM, 2013.
[17] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring, and B. Bhattacharjee. Discovering Bitcoin's public topology and influential nodes. et al., 2015.
[18] M. Moser. Anonymity of Bitcoin transactions: An analysis of mixing services. In Münster Bitcoin Conference (MBC), 2013.
[19] T. Neudecker and H. Hartenstein. Could network information facilitate address clustering in Bitcoin? In International Conference on Financial Cryptography and Data Security, pages 155–169. Springer, 2017.
[20] R. Norvill, B. B. F. Pontiveros, R. State, I. Awan, and A. Cullen. Automated labeling of unknown contracts in Ethereum. In Computer Communication and Networks (ICCCN), 2017 26th International Conference on, pages 1–6. IEEE, 2017.
[21] S. Ranshous, C. A. Joslyn, S. Kreyling, K. Nowak, N. F. Samatova, C. L. West, and S. Winters. Exchange pattern mining in the Bitcoin transaction directed hypergraph. In International Conference on Financial Cryptography and Data Security, pages 248–263. Springer, 2017.
[22] D. Ron and A. Shamir. Quantitative analysis of the full Bitcoin transaction graph. In International Conference on Financial Cryptography and Data Security, pages 6–24. Springer, 2013.
[23] D. Siegal. Understanding the DAO attack. https://www.coindesk.com/understanding-dao-hack-journalists/
[24] M. Vasek and T. Moore. There’s no free lunch, even using Bitcoin: Tracking the popularity and profits of virtual currency scams. In International conference on financial cryptography and data security, pages 44–61. Springer, 2015.
[25] M. Vasek and T. Moore. Analyzing the Bitcoin Ponzi scheme ecosystem. In Bitcoin Workshop, 2018.
[26] G. Wood. Ethereum: A secure decentralised generalised transaction ledger. Ethereum project yellow paper, 151:1–32, 2014.