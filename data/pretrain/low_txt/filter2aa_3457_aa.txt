### 4.2 Manual

**Strategic Cyber LLC (A HelpSystems Company)**  
[www.cobaltstrike.com](http://www.cobaltstrike.com)

---

### Table of Contents
1. **Welcome to Cobalt Strike**
   - 1.1 What is Cobalt Strike?
   - 1.2 Installation and Updates
     - System Requirements
     - Run the ‘update’ Program
   - 1.3 The Team Server
   - 1.4 Cobalt Strike Client
   - 1.5 Distributed and Team Operations
   - 1.6 Scripting Cobalt Strike
2. **User Interface**
   - 2.1 Overview
   - 2.2 Toolbar
   - 2.3 Session and Target Visualizations
     - Targets Table
     - Sessions Table
     - Pivot Graph
   - 2.4 Tabs
   - 2.5 Consoles
   - 2.6 Tables
3. **Data Management**
   - 3.1 Overview
   - 3.2 Targets
   - 3.3 Services
   - 3.4 Credentials
   - 3.5 Maintenance
4. **Listener and Infrastructure Management**
   - 4.1 Overview
   - 4.2 Listener Management
   - 4.3 Cobalt Strike’s Beacon Payload
   - 4.4 Payload Staging
   - 4.5 HTTP Beacon and HTTPS Beacon
     - Manual HTTP Proxy Configuration
     - Redirectors
   - 4.6 DNS Beacon
     - Data Channels
     - Listener Setup
   - 4.7 SMB Beacon
     - Linking and Unlinking
   - 4.8 TCP Beacon
     - Connecting and Unlinking
   - 4.9 External C2
   - 4.10 Foreign Listeners
   - 4.11 Infrastructure Consolidation
   - 4.12 Payload Security Features
5. **Getting a Foothold**
   - 5.1 Client-side System Profiler
   - 5.2 Cobalt Strike Web Services
   - 5.3 User-driven Attack Packages
     - HTML Application
     - MS Office Macro
     - Payload Generator
     - Windows Executable
     - Windows Executable (S)
   - 5.4 Hosting Files
   - 5.5 User-driven Web Drive-by Attacks
     - Java Signed Applet Attack
     - Java Smart Applet Attack
     - Scripted Web Delivery (S)
   - 5.6 Client-side Exploits
   - 5.7 Clone a Site
   - 5.8 Spear Phishing
     - Targets
     - Templates
     - Sending Messages
6. **Payload Artifacts and Anti-virus Evasion**
   - 6.1 Philosophy
   - 6.2 The Artifact Kit
     - The Theory of the Artifact Kit
     - Where Artifact Kit Fails
     - How to Use the Artifact Kit
   - 6.3 The Veil Evasion Framework
   - 6.4 Java Applet Attacks
   - 6.5 The Resource Kit
7. **Post-Exploitation**
   - 7.1 The Beacon Console
   - 7.2 The Beacon Menu
   - 7.3 Asynchronous and Interactive Operations
   - 7.4 Running Commands
   - 7.5 Session Passing
   - 7.6 Alternate Parent Processes
   - 7.7 Spoof Process Arguments
   - 7.8 Blocking DLLs in Child Processes
   - 7.9 Upload and Download Files
   - 7.10 File Browser
   - 7.11 File System Commands
   - 7.12 The Windows Registry
   - 7.13 Keystrokes and Screenshots
   - 7.14 Post-Exploitation Jobs
   - 7.15 The Process Browser
   - 7.16 Desktop Control
   - 7.17 Privilege Escalation
     - Elevate with an Exploit
     - Elevate with Known Credentials
     - Get SYSTEM
     - UAC Bypass
     - Privileges
   - 7.18 Mimikatz
   - 7.19 Credential and Hash Harvesting
   - 7.20 Port Scanning
   - 7.21 Network and Host Enumeration
   - 7.22 Trust Relationships
     - Kerberos Tickets
   - 7.23 Lateral Movement
   - 7.24 Lateral Movement GUI
8. **Browser Pivoting**
   - 8.1 Overview
   - 8.2 Setup
   - 8.3 Use
   - 8.4 How it Works
9. **Pivoting**
   - 9.1 What is Pivoting
   - 9.2 SOCKS Proxy
     - Proxychains
     - Metasploit
   - 9.3 Reverse Port Forward
   - 9.4 Spawn and Tunnel
     - Agent Deployed: Interoperability with Core Impact
   - 9.5 Pivot Listeners
   - 9.6 Covert VPN
10. **SSH Sessions**
   - 10.1 The SSH Client
   - 10.2 Running Commands
   - 10.3 Upload and Download Files
   - 10.4 Peer-to-peer C2
   - 10.5 SOCKS Pivoting and Reverse Port Forwards
11. **Malleable Command and Control**
   - 11.1 Overview
   - 11.2 Checking for Errors
   - 11.3 Profile Language
     - Data Transform Language
     - Strings
     - Headers and Parameters
     - Options
   - 11.4 HTTP Staging
   - 11.5 A Beacon HTTP Transaction Walk-through
   - 11.6 HTTP Server Configuration
   - 11.7 Self-signed SSL Certificates with SSL Beacon
   - 11.8 Valid SSL Certificates with SSL Beacon
   - 11.9 Profile Variants
   - 11.10 Code Signing Certificate
   - 11.11 Which is more dangerous, Malleable C2 or a swimming pool?
12. **Malleable PE, Process Injection, and Post-Exploitation**
   - 12.1 Overview
   - 12.2 PE and Memory Indicators
     - Cloning PE Headers
     - In-memory Evasion and Obfuscation
   - 12.3 Process Injection
   - 12.4 Post-Exploitation Jobs
13. **Reporting and Logging**
   - 13.1 Logging
   - 13.2 Reports
     - Activity Report
     - Hosts Report
     - Indicators of Compromise
     - Sessions Report
     - Social Engineering
     - Tactics, Techniques, and Procedures
   - 13.3 Custom Logo in Reports
   - 13.4 Custom Reports
**Appendix A. Keyboard Shortcuts**

---

### 1. Welcome to Cobalt Strike

#### 1.1 What is Cobalt Strike?
Cobalt Strike is a comprehensive platform designed for adversary simulations and red team operations. It enables the execution of targeted attacks and emulates the post-exploitation actions of advanced threat actors. This section outlines the attack process supported by Cobalt Strike's feature set, which will be detailed further in this manual.

**Figure 1. The Offense Problem Set**

- **Reconnaissance:** Begin with reconnaissance using Cobalt Strike’s system profiler, a web application that maps your target’s client-side attack surface.
- **Weaponization:** Pair a post-exploitation payload with a document or exploit. Cobalt Strike offers options to turn common documents into weaponized artifacts and export its Beacon payload in various formats.
- **Delivery:** Use Cobalt Strike’s spear phishing tool to deliver weaponized documents to targets. This tool repurposes saved emails into pixel-perfect phishes.
- **Control:** Manage your target’s network with Cobalt Strike’s Beacon, a post-exploitation payload that uses asynchronous communication over DNS, HTTP, or HTTPS. Beacon can navigate through common proxy configurations and call home to multiple hosts.
- **Evasion:** Exercise your target’s attack attribution and analysis capabilities with Beacon’s Malleable Command and Control language, reprogramming Beacon to use network indicators that mimic known malware or blend with existing traffic.
- **Pivoting and Lateral Movement:** Pivot into the compromised network, discover hosts, and move laterally using Beacon’s automation and peer-to-peer communication. Cobalt Strike facilitates capturing trust relationships and enabling lateral movement with credentials, password hashes, access tokens, and Kerberos tickets.
- **Demonstration of Risk:** Deploy keystroke loggers and screenshot capture tools on compromised systems. Use browser pivoting to access websites the target is logged into, bypassing two-factor authentication.
- **Reporting:** Reconstruct the engagement for your client with high-quality reports. Provide network administrators with activity timelines to identify attack indicators in their sensors.

**Evasion:** Cobalt Strike does not aim to provide out-of-the-box evasion. Instead, it offers flexibility in configurations and options to adapt to your specific circumstances and objectives.

#### 1.2 Installation and Updates
Cobalt Strike packages are distributed as native archives for Windows, Linux, and macOS. To install, simply extract the archive onto your operating system.

**System Requirements:**
- Oracle Java 1.8, Oracle Java 11, or OpenJDK 11.
- Ensure any anti-virus product is disabled before installing Cobalt Strike.

**Run the ‘update’ Program:**
- The Cobalt Strike distribution package includes the launcher, supporting files, and the updater program. Run the update program to download the Cobalt Strike product.
- Update both your team server and client software with your license key. The team server does not require a separate license.

**Figure 2. The Update Process (Note: The pictured key is no longer valid)**

#### 1.3 The Team Server
Cobalt Strike consists of a client and a server component. The server, referred to as the team server, controls the Beacon payload and hosts social engineering features. It also stores data and manages logging.

**Starting the Team Server:**
- The team server must run on a supported Linux system. Use the `teamserver` script included in the Cobalt Strike Linux package.
- **Parameters:**
  - Externally reachable IP address of the team server.
  - Password for team members to connect to the team server.
  - Optional: Malleable C2 Profile (discussed in Chapters 11 and 12).
  - Optional: Kill date in YYYY-MM-DD format, embedded into each Beacon stage.

**Figure 3. Starting the Team Server**

- When the team server starts, it publishes the SHA256 hash of its SSL certificate. Distribute this hash to team members to protect against man-in-the-middle attacks.

#### 1.4 Cobalt Strike Client
The Cobalt Strike client connects to the team server. Use the launcher included in your platform’s package to start the client.

**Connect Dialog:**
- **Host:** Specify the team server’s address.
- **Port:** Default is 50050.
- **User:** Your nickname on the team server.
- **Password:** Shared password for the team server.

**Figure 4. Cobalt Strike Connect Dialog**

- On first connection, Cobalt Strike will ask if you recognize the SHA256 hash of the team server. If recognized, press OK to connect. You can manage these hashes through Cobalt Strike -> Preferences -> Fingerprints.

**Figure 5. Verifying the server’s SSL certificate**

- Cobalt Strike remembers the team servers you connect to. Select a profile from the left-hand side of the connect dialog to populate the information. Manage this list through Cobalt Strike -> Preferences -> Team Servers.

#### 1.5 Distributed and Team Operations
Use Cobalt Strike to coordinate a distributed red team effort. Stage Cobalt Strike on one or more remote hosts, start the team servers, and have your team connect.

**Figure 6. Distributed Operations with Cobalt Strike**

- Once connected to a team server, your team will:
  - Share sessions
  - Share hosts, captured data, and downloaded files

---

This revised version aims to make the text more clear, coherent, and professional. Let me know if you need further adjustments!