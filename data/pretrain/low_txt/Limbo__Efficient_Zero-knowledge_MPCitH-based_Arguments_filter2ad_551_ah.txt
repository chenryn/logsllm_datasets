### 9.9
### 17.5
### 30.6
### 54.2
### 117
### (ùëò, ‚Ñì, ùúè)
- (8, 6, 82)
- (8, 6, 70)
- (8, 6, 58)
- (8, 6, 52)
- (6, 8, 46)

### ùë°ùíÆ (ms)
- 11.3
- 19.1
- 36.2
- 58.2
- 125

### Size (B)
- 83488
- 73114
- 64420
- 58816
- 54082

### Size (B)
- 83764
- 73788
- 63044
- 58216
- 53004

### 7.5 Limbo Signature
We have developed a Picnic-like post-quantum signature scheme based on AES, using the same methodology as BBQ [21] and Banquet [3]. Specifically, given a private key \( k \) and public values \((x, y)\) such that \( \text{AES}_k(x) = y \), a signature on a message \(\mu\) is generated by binding \(\mu\) with a non-interactive zero-knowledge proof of knowledge of \( k \).

We compare our resulting signature scheme, Limbo, with Picnic and Banquet, which, to the best of our knowledge, are the fastest MPCitH-based signatures using AES for security levels L1, L3, and L5 as specified by NIST [37]. Tables 8, 9, and 10 show this comparison for different sets of parameters. For all three security levels, Limbo not only outperforms Banquet in both Prover and Verifier time but also consistently produces shorter signatures. These results are closer to, and sometimes better than, the performance of Picnic in terms of running times (for \( n = 16 \)) and signature size (for \( n = 255 \)).

In Table 7, we compare Limbo as an interactive identification scheme to the equivalent variant of Picnic. Note that for Picnic, based on KKW, the number of repetitions indicates both offline and online repetitions. As before, the communication can be further reduced using more parties (down to 2.43KB) at the expense of slightly longer computation time (still under 5ms for both Prover and Verifier).

### Acknowledgements
We thank Daniel Kales for providing the source code of Banquet and Greg Zaverucha for his valuable suggestions related to this work. This research has been supported in part by the ERC Advanced Grant ERC-2015-AdG-IMPaCT, the Defense Advanced Research Projects Agency (DARPA) under contract No. HR001120C0085, and CyberSecurity Research Flanders with reference number VR20192203. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the ERC, DARPA, the US Government, or Cyber Security Research Flanders. The U.S. Government is authorized to reproduce and distribute reprints for governmental purposes, notwithstanding any copyright annotation therein.

### References
[1] Martin R. Albrecht, Christian Rechberger, Thomas Schneider, Tyge Tiessen, and Michael Zohner. 2015. Ciphers for MPC and FHE. In EUROCRYPT 2015, Part I (LNCS, Vol. 9056), Elisabeth Oswald and Marc Fischlin (Eds.). Springer, Heidelberg, 430‚Äì454. https://doi.org/10.1007/978-3-662-46800-5_17

[2] Scott Ames, Carmit Hazay, Yuval Ishai, and Muthuramakrishnan Venkitasubramaniam. 2017. Ligero: Lightweight Sublinear Arguments Without a Trusted Setup. In ACM CCS 2017, Bhavani M. Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu (Eds.). ACM Press, 2087‚Äì2104. https://doi.org/10.1145/3133956.3134104

[3] Carsten Baum, Cyprien de Saint Guilhem, Daniel Kales, Emmanuela Orsini, Peter Scholl, and Greg Zaverucha. 2021. Banquet: Short and Fast Signatures from AES. In PKC 2021, Part I (LNCS, Vol. 12710), Juan Garay (Ed.). Springer, Heidelberg, 266‚Äì297. https://doi.org/10.1007/978-3-030-75245-3_11

[4] Carsten Baum, Alex J. Malozemoff, Marc Rosen, and Peter Scholl. 2020. Mac‚Äôn‚ÄôCheese: Zero-Knowledge Proofs for Arithmetic Circuits with Nested Disjunctions. Cryptology ePrint Archive, Report 2020/1410. https://eprint.iacr.org/2020/1410.

[5] Carsten Baum and Ariel Nof. 2020. Concretely-Efficient Zero-Knowledge Arguments for Arithmetic Circuits and Their Application to Lattice-Based Cryptography. In PKC 2020, Part I (LNCS, Vol. 12110), Aggelos Kiayias, Markulf Kohlweiss, Petros Wallden, and Vassilis Zikas (Eds.). Springer, Heidelberg, 495‚Äì526. https://doi.org/10.1007/978-3-030-45374-9_17

[6] Eli Ben-Sasson, Iddo Bentov, Alessandro Chiesa, Ariel Gabizon, Daniel Genkin, Matan Hamilis, Evgenya Pergament, Michael Riabzev, Mark Silberstein, Eran Tromer, and Madars Virza. 2017. Computational Integrity with a Public Random String from Quasi-Linear PCPs. In EUROCRYPT 2017, Part III (LNCS, Vol. 10212), Jean-S√©bastien Coron and Jesper Buus Nielsen (Eds.). Springer, Heidelberg, 551‚Äì579. https://doi.org/10.1007/978-3-319-56617-7_19

[7] Eli Ben-Sasson, Iddo Bentov, Yinon Horesh, and Michael Riabzev. 2019. Scalable Zero Knowledge with No Trusted Setup. In CRYPTO 2019, Part III (LNCS, Vol. 11694), Alexandra Boldyreva and Daniele Micciancio (Eds.). Springer, Heidelberg, 701‚Äì732. https://doi.org/10.1007/978-3-030-26954-8_23

[8] Eli Ben-Sasson, Alessandro Chiesa, Daniel Genkin, and Eran Tromer. 2013. On the Concrete Efficiency of Probabilistically-Checkable Proofs. In 45th ACM STOC, Dan Boneh, Tim Roughgarden, and Joan Feigenbaum (Eds.). ACM Press, 585‚Äì594. https://doi.org/10.1145/2488608.2488681

[9] Eli Ben-Sasson, Alessandro Chiesa, and Nicholas Spooner. 2016. Interactive Oracle Proofs. In TCC 2016-B, Part II (LNCS, Vol. 9986), Martin Hirt and Adam D. Smith (Eds.). Springer, Heidelberg, 31‚Äì60. https://doi.org/10.1007/978-3-662-53644-5_2

[10] Ward Beullens and Cyprien de Saint Guilhem. 2020. LegRoast: Efficient Post-Quantum Signatures from the Legendre PRF. In Post-Quantum Cryptography - 11th International Conference, PQCrypto 2020, Jintai Ding and Jean-Pierre Tillich (Eds.). Springer, Heidelberg, 130‚Äì150. https://doi.org/10.1007/978-3-030-44223-1_8

[11] Rishabh Bhadauria, Zhiyong Fang, Carmit Hazay, Muthuramakrishnan Venkitasubramaniam, Tiancheng Xie, and Yupeng Zhang. 2020. Ligero++: A New Optimized Sublinear IOP. In ACM CCS 2020, Jay Ligatti, Xinming Ou, Jonathan Katz, and Giovanni Vigna (Eds.). ACM Press, 2025‚Äì2038. https://doi.org/10.1145/3372297.3417893

[12] Nir Bitansky, Alessandro Chiesa, Yuval Ishai, Rafail Ostrovsky, and Omer Paneth. 2013. Succinct Non-Interactive Arguments via Linear Interactive Proofs. In TCC 2013 (LNCS, Vol. 7785), Amit Sahai (Ed.). Springer, Heidelberg, 315‚Äì333. https://doi.org/10.1007/978-3-642-36594-2_18

[13] Alexander R. Block, Hemanta K. Maji, and Hai H. Nguyen. 2018. Secure Computation with Constant Communication Overhead Using Multiplication Embeddings. In INDOCRYPT 2018 (LNCS, Vol. 11356), Debrup Chakraborty and Tetsu Iwata (Eds.). Springer, Heidelberg, 375‚Äì398. https://doi.org/10.1007/978-3-030-05378-9_20

[14] Manuel Blum, Paul Feldman, and Silvio Micali. 1988. Non-Interactive Zero-Knowledge and Its Applications (Extended Abstract). In 20th ACM STOC. ACM Press, 103‚Äì112. https://doi.org/10.1145/62212.62222

[15] Dan Boneh, Elette Boyle, Henry Corrigan-Gibbs, Niv Gilboa, and Yuval Ishai. 2019. Zero-Knowledge Proofs on Secret-Shared Data via Fully Linear PCPs. In CRYPTO 2019, Part III (LNCS, Vol. 11694), Alexandra Boldyreva and Daniele Micciancio (Eds.). Springer, Heidelberg, 67‚Äì97. https://doi.org/10.1007/978-3-030-26954-8_3

[16] Elette Boyle, Niv Gilboa, Yuval Ishai, and Ariel Nof. 2019. Practical Fully Secure Three-Party Computation via Sublinear Distributed Zero-Knowledge Proofs. In ACM CCS 2019, Lorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz (Eds.). ACM Press, 869‚Äì886. https://doi.org/10.1145/3319535.3363227

[17] Gilles Brassard, David Chaum, and Claude Cr√©peau. 1988. Minimum Disclosure Proofs of Knowledge. J. Comput. Syst. Sci. 37, 2 (1988), 156‚Äì189.

[18] Ignacio Cascudo, Ronald Cramer, Chaoping Xing, and Chen Yuan. 2018. Amortized Complexity of Information-Theoretically Secure MPC Revisited. In CRYPTO 2018, Part III (LNCS, Vol. 10993), Hovav Shacham and Alexandra Boldyreva (Eds.). Springer, Heidelberg, 395‚Äì426. https://doi.org/10.1007/978-3-319-96878-0_14

[19] Melissa Chase, David Derler, Steven Goldfeder, Claudio Orlandi, Sebastian Ramacher, Christian Rechberger, Daniel Slamanig, and Greg Zaverucha. 2017. Post-Quantum Zero-Knowledge and Signatures from Symmetric-Key Primitives. In ACM CCS 2017, Bhavani M. Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu (Eds.). ACM Press, 1825‚Äì1842. https://doi.org/10.1145/3133956.3133997

[20] Cas Cremers, Samed D√ºzl√º, Rune Fiedler, Marc Fischlin, and Christian Janson. 2021. BUFFing Signature Schemes Beyond Unforgeability and the Case of Post-Quantum Signatures. In 2021 IEEE Symposium on Security and Privacy (SP). 1696‚Äì1714. https://doi.org/10.1109/SP40001.2021.00093

[21] Cyprien de Saint Guilhem, Lauren De Meyer, Emmanuela Orsini, and Nigel P. Smart. 2019. BBQ: Using AES in Picnic Signatures. In SAC 2019 (LNCS, Vol. 11959), Kenneth G. Paterson and Douglas Stebila (Eds.). Springer, Heidelberg, 669‚Äì692. https://doi.org/10.1007/978-3-030-38471-5_27

[22] Samuel Dittmer, Yuval Ishai, and Rafail Ostrovsky. 2021. Line-Point Zero Knowledge and Its Applications. In 2nd Conference on Information-Theoretic Cryptography (ITC 2021) (Leibniz International Proceedings in Informatics (LIPIcs), Vol. 199), Stefano Tessaro (Ed.). Schloss Dagstuhl ‚Äì Leibniz-Zentrum f√ºr Informatik, Dagstuhl, Germany, 5:1‚Äì5:24. https://doi.org/10.4230/LIPIcs.ITC.2021.5

[23] Amos Fiat and Adi Shamir. 1987. How to Prove Yourself: Practical Solutions to Identification and Signature Problems. In CRYPTO‚Äô86 (LNCS, Vol. 263), Andrew M. Odlyzko (Ed.). Springer, Heidelberg, 186‚Äì194. https://doi.org/10.1007/3-540-47721-7_12

[24] Rosario Gennaro, Craig Gentry, Bryan Parno, and Mariana Raykova. 2013. Quadratic Span Programs and Succinct NIZKs without PCPs. In EUROCRYPT 2013 (LNCS, Vol. 7881), Thomas Johansson and Phong Q. Nguyen (Eds.). Springer, Heidelberg, 626‚Äì645. https://doi.org/10.1007/978-3-642-38348-9_37

[25] Irene Giacomelli, Jesper Madsen, and Claudio Orlandi. 2016. ZKBoo: Faster Zero-Knowledge for Boolean Circuits. In USENIX Security 2016, Thorsten Holz and Stefan Savage (Eds.). USENIX Association, 1069‚Äì1083.

[26] Shafi Goldwasser, Silvio Micali, and Charles Rackoff. 1985. The Knowledge Complexity of Interactive Proof-Systems (Extended Abstract). In 17th ACM STOC. ACM Press, 291‚Äì304. https://doi.org/10.1145/22145.22178

[27] Vipul Goyal and Yifan Song. 2020. Malicious Security Comes Free in Honest-Majority MPC. Cryptology ePrint Archive, Report 2020/134. https://eprint.iacr.org/2020/134.

[28] Yuval Ishai, Eyal Kushilevitz, Rafail Ostrovsky, and Amit Sahai. 2007. Zero-Knowledge from Secure Multiparty Computation. In 39th ACM STOC, David S. Johnson and Uriel Feige (Eds.). ACM Press, 21‚Äì30. https://doi.org/10.1145/1250790.1250794

[29] Yael Tauman Kalai and Ran Raz. 2008. Interactive PCP. In ICALP 2008, Part II (LNCS, Vol. 5126), Luca Aceto, Ivan Damg√•rd, Leslie Ann Goldberg, Magn√∫s M. Halld√≥rsson, Anna Ing√≥lfsd√≥ttir, and Igor Walukiewicz (Eds.). Springer, Heidelberg, 536‚Äì547. https://doi.org/10.1007/978-3-540-70583-3_44

[30] Jonathan Katz, Vladimir Kolesnikov, and Xiao Wang. 2018. Improved Non-Interactive Zero Knowledge with Applications to Post-Quantum Signatures. In ACM CCS 2018, David Lie, Mohammad Mannan, Michael Backes, and XiaoFeng Wang (Eds.). ACM Press, 525‚Äì537. https://doi.org/10.1145/3243734.3243805

[31] Joe Kilian. 1992. A Note on Efficient Zero-Knowledge Proofs and Arguments (Extended Abstract). In 24th ACM STOC. ACM Press, 723‚Äì732. https://doi.org/10.1145/129712.129782

[32] Joe Kilian. 1995. Improved Efficient Arguments (Preliminary Version). In CRYPTO‚Äô95 (LNCS, Vol. 963), Don Coppersmith (Ed.). Springer, Heidelberg, 311‚Äì324. https://doi.org/10.1007/3-540-44750-4_25

[33] Vadim Lyubashevsky, L√©o Ducas, Eike Kiltz, Tancr√®de Lepoint, Peter Schwabe, Gregor Seiler, Damien Stehl√©, and Shi Bai. 2020. CRYSTALS-DILITHIUM. Technical Report. National Institute of Standards and Technology. Available at: https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions.

[34] William Woodruff Mathias Hall-Andersen, Ben Perez. [n.d.]. Available at: https://github.com/trailofbits/reverie.

[35] Ralph C. Merkle. 1990. A Certified Digital Signature. In CRYPTO‚Äô89 (LNCS, Vol. 435), Gilles Brassard (Ed.). Springer, Heidelberg, 218‚Äì238. https://doi.org/10.1007/0-387-34805-0_21

[36] Silvio Micali. 1994. CS Proofs (Extended Abstracts). In 35th FOCS. IEEE Computer Society Press, 436‚Äì453. https://doi.org/10.1109/SFCS.1994.365746

[37] National Institute of Standards and Technology. 2020. Round 3 Submissions for the NIST Post-Quantum Cryptography Project. Available at: https://csrc.nist.gov/Projects/post-quantum-cryptography/round-3-submissions, accessed 11-11-2020.

[38] David Pointcheval and Jacques Stern. 1996. Security Proofs for Signature Schemes. In EUROCRYPT‚Äô96 (LNCS, Vol. 1070), Ueli M. Maurer (Ed.). Springer, Heidelberg, 387‚Äì398. https://doi.org/10.1007/3-540-68339-9_33

[39] Omer Reingold, Guy N. Rothblum, and Ron D. Rothblum. 2016. Constant-Round Interactive Proofs for Delegating Computation. In 48th ACM STOC, Daniel Wichs and Yishay Mansour (Eds.). ACM Press, 49‚Äì62. https://doi.org/10.1145/2897518.2897652

[40] Chenkai Weng, Kang Yang, Jonathan Katz, and Xiao Wang. 2021. Wolverine: Fast, Scalable, and Communication-Efficient Zero-Knowledge Proofs for Boolean and Arithmetic Circuits. In 2021 IEEE Symposium on Security and Privacy (SP). 1074‚Äì1091. https://doi.org/10.1109/SP40001.2021.00056

[41] Kang Yang, Pratik Sarkar, Chenkai Weng, and Xiao Wang. 2021. QuickSilver: Efficient and Affordable Zero-Knowledge Proofs for Circuits and Polynomials over Any Field. Cryptology ePrint Archive, Report 2021/076. Available at: https://ia.cr/2021/076.

[42] Greg Zaverucha, Melissa Chase, David Derler, Steven Goldfeder, Claudio Orlandi, Sebastian Ramacher, Christian Rechberger, Daniel Slamanig, Jonathan Katz, Xiao Wang, Vladmir Kolesnikov, and Daniel Kales. 2020. Picnic. Technical Report. National Institute of Standards and Technology. Available at: https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions.

### A. Amortized Evaluations for the Multi-Instance Case
While our MPC and ZK protocols work over fields of any size, the multiplications check requires large fields to achieve a reasonable soundness error. When the evaluation field \( F \) is small, such as \( F = F_2 \), this step can be inefficient. To address this, it would be beneficial to batch several checks into a single one. Ideally, when proving the satisfiability of a certain circuit, it would be helpful to perform the check of all the \( \tau \) repetitions needed to obtain the desired soundness in one go. However, since in the ZK protocol the verifier opens different sets of parties across the \( \tau \) MPC evaluations, packing these checks together seems difficult, if not impossible. 

Nonetheless, we can apply the same idea to batch the checking phases in the case of multiple evaluations of the same circuit. Specifically, if we want to prove the satisfiability of a certain circuit multiple times, say \( h \), we can amortize these instances using the reverse multiplication-friendly embedding (RMFE) [13, 18], which provides a way to embed the ring \( F_q^h \), for some \( h > 1 \), into a field \( F_{q^s} \), for some \( s > h \), so that coordinate-wise products "map" to multiplications in the extension field. Formally, we recall the following definition:

**Definition A.1.** Given a prime power \( q \) and \( h, s \in \mathbb{N} \), let us consider two \( F_q \)-linear maps \( \phi : F_q^h \to F_{q^s} \) and \( \psi : F_{q^s} \to F_q^h \). A pair \( (\phi, \psi) \) is called an \((h, s)\)-reverse multiplication-friendly embedding (RMFE) if for all \( x, y \in F_q^h \), it holds:
\[ x \odot y = \psi(\phi(x) \cdot \phi(y)), \]
where \( \odot \) is the component-wise product.

Note that \( \phi \) is an injective map. In the following, we focus on the case \( q = 2 \) and leave other cases for future work. In [18], the authors provide both asymptotic and concrete results on the existence of RMFE. Specifically:

**Lemma A.2.** For all \( u \leq 33 \), there exists a \((3u, 10u - 5)_2\)-RMFE. For any \( u \leq 16 \), there exists a \((2u, 8u)_2\)-RMFE.

### Different Options to Improve Efficiency
We explore different options to handle the multi-instance case with better efficiency. For each alternative, we briefly discuss the advantages and disadvantages.

**Check with Identical Challenges:** The first approach consists of \( \tau \cdot h \) MPC evaluations of the circuit over \( F_2 \), followed by a checking phase. We can apply the optimization described in the previous section and use the same challenge across all evaluations. This option will require, at least in the non-interactive case, a larger \( \tau \), but this can be mitigated in part by using larger extension fields for the check. We expect an improvement in prover run times comparable to that observed for the single instance case.

**Evaluations in Extension Fields:** Alternatively, we can use an RMFE and "pack" \( h \) MPC evaluations over \( F_2 \) into a single evaluation over \( F_{2^s} \), and hence perform the entire proof and verification in this extension field. The advantage of this approach is to perform the computation only once, but over a larger field. In terms of communication, this approach will be roughly 2/3 times more costly.

**Check in Extension Fields:** Our third option works as follows. In Phase 1, the prover runs \( h \) MPC evaluations over \( F_2 \) in its head, exactly as described in the previous sections. Before the next phases, the prover, using a \((h, s)_2 (\phi, \psi)\)-RMFE, consistently maps all the \( h \cdot m \) multiplication triples in \( F_2 \) that need to be checked to \( m \) triples in \( F_{2^s} \), and proceeds to the next phases. Specifically, given \( \langle x_i \rangle, \langle y_i \rangle, \langle z_i \rangle \in F_2^h \), we can apply \( \phi \) to these \( m \) vectors and obtain \( \phi(x_i) = x_i, \phi(y_i) = y_i, \phi(z_i) = z_i \). Note that if \( x \odot y = z \odot 1 \), then:
\[ \psi(\phi(x_i) \cdot \phi(y_i) - \phi(z_i) \cdot \phi(1)) = 0. \]

Setting \( z_i \cdot \phi(1) = \xi_i \), the prover needs to prove that the relation above holds. The analysis of the soundness of this option differs from that done in the previous sections, so we leave it for future work. However, if the maps \( \phi, \psi \) are efficiently implemented, this approach can potentially lead to better prover run times.