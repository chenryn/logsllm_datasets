# OLTP Performance Benchmark Review

## Presenter
- **Jignesh Shah**
  - Product Manager, vFabric Postgres, VMware, Inc.
  - Former Performance Engineer, vFabric Data Director
  - Previously with Sun Microsystems (2000-2010)
  - Team Member that delivered the first published mainstream benchmark with PostgreSQL
  - Blog: [jkshah.blogspot.com](http://jkshah.blogspot.com)

## Copyright
© 2010-2012 VMware Inc. All rights reserved.

## Agenda
1. Introduction
2. pgbench
3. Sysbench
4. dbt2
5. BenchmarkSQL
6. DVDStore
7. A New Benchmark

## Introduction
### Why Benchmarks?
- **Reference Data Points**
- **Stress Testing for "Too Big to Fail" Scenarios**

### Uses of Benchmarks
- **Improving Product Quality**
- **Understanding Code Path Usage**
- **Performance Characteristics**
- **Baseline Metrics (Reference Points)**
- **Release-to-Release Comparisons**
- **Comparing Technologies for the Same Business Operation**

### Abuses of Benchmarks
- **Benchmarketing**
- **Focusing Only on Favorable Results**

## pgbench
- **Based on TPC-B Workload (circa 1990)**
- **Not an OLTP but a Stress Benchmark for Databases**
- **Default Ratio: Branches: 10, Tellers: 100,000, Accounts: 10,000,000**
- **Account Transactions Impact Teller and Branch Balances**
- **Branch Table Becomes the Biggest Bottleneck**

### Hints
- **PGSSLMODE disable** (unless you want to factor in SSL communication overhead, which may vary by distribution)
- **-M prepared** (unless you want to measure the overhead of parsing)

### Modes of Benchmark
- **Default TPC-B Sort-of**: Account transactions impact teller and branch balances. The branch table is the main bottleneck.
- **-N Simple Update (with select, insert)**: Account update, select balance, and history insert. The account table update becomes the biggest bottleneck.
- **-S Read-Only Test**: AccessShareLock on the accounts table and primary index becomes the bottleneck. This was fixed in version 9.2 (thanks to Robert Haas).

### PGBench Select Test
- **Graphs Showing Performance at Different Client Loads**

### PGBench TPC-B Like Test
- **Graphs Showing Performance at Different Client Loads**

## Sysbench
- **Originally Developed to Test Systems**
- **Has an OLTP Component Based on MySQL**
- **Creates a Table `sbtest` with a Primary Key**

### Modes of OLTP Operation
- **Simple Read-Only (Web Site Primary Key Lookup)**
- **Complex Read-Only**
- **Complex Read-Write Test**

### Sysbench – OLTP Simple Read
- **Graphs Showing Performance at Different Client Loads**

### Sysbench – OLTP Complex Read
- **Graphs Showing Performance at Different Client Loads**

### Sysbench – OLTP Complex Read/Write
- **Graphs Showing Performance at Different Client Loads**

### Sysbench – Complex R/W Note
- **In Version 9.0, it was impossible to run sysbench complex R/W without hitting an error: "ERROR: duplicate key value violates unique constraint 'sbtest_pkey'".**
- **In Version 9.1, SSI was introduced, and the occurrence of this error went down drastically.**
- **In Version 9.2, this issue has not been encountered.**

## dbt2
- **Fair Use Implementation of TPC-C**
- **Nine Tables: Warehouses, Stock, District, Item, Customer, Orders, History, Order Lines, New Orders**
- **Five Transactions: New-Order (NOTPM) 45%, Payment 43%, Delivery 4%, Order Status 4%, Stock Level 4%**

### Why It Is Not TPC-C Compliant
- **Not Audited by TPC**
- **No Terminal Emulator**
- **Official Kit Requires Commercial Transaction Manager**
- **Doesn’t Cover ACID Tests**

### Two Versions Available
- **Libpq**
- **ODBC**

### Potential Problem
- **Three Network Roundtrips per Transaction, Causing "Idle in Transaction" at High Load**
- **BEGIN, SELECT StoredProcedure(), END Pattern of Transactions**

### dbt2 – Postgres 9.1
- **Cached Runs (Data in Bufferpool)**
- **Short Runs (Limited Checkpoint and Vacuum Impacts)**
- **NOTPM = 45% of All DB Transactions**
- **DB Transaction Rate About 3000 TPS**

## BenchmarkSQL
- **Another Implementation Using TPC-C Schema**
- **Implemented Using JDBC**
- **Nine Tables: Warehouses, Stock, District, Item, Customer, Orders, History, Order Lines, New Orders**
- **Five Transactions: New-Order (NOTPM) 45%, Payment 43%, Delivery 4%, Order Status 4%, Stock Level 4%**
- **Surprisingly Can Do Better Than dbt2 Implementation but Still Has "Idle in Transactions" Which Means Bottlenecked at Network/Client Level**

## DVDStore
- **Implementation of an Online DVD Store**
- **Eight Tables: Customers, Cust_hist, Product, Inventory, Categories, Orders, Order Lines, Reorder**
- **Main Transactions: New-Customers 0-10% (Configurable), Customer Login, DVD Browse (By Category, By Actor, By Title), Purchase Order (Metric – Orders Per Minute), Stock ReOrder (via Triggers)**

### Implementations
- **JSP/Java/JDBC (Supports Postgres)**
- **Linux/Apache/PHP/MySQL (Supports Postgres)**
- **ASP.NET (Not Yet Implemented for Postgres)**
- **Stored Procedures (Supports Postgres via Npgsql)**

### Performance Notes
- **JSP/Java JDBC Implementation**: Tomcat may need tuning.
- **PHP-Postgres Implementation**: Suffers from one connection per SQL command. Needs pg_bouncer (on the same server as the web server) and configure local connections to pg_bouncer, which does connection caching to the actual Postgres server.
- **Stored Procedure Implementation**: Fastest implementation (> 100,000 orders per minute). Idle in transactions can still occur.
- **Metric is Orders Per Minute**: DB Transactions = (6-7 * OPM/60) ~ 10K – 11K TPS

## TPC-E/V
### Genesis of TPC-V
- **Users Are Demanding Benchmarks to Measure Performance of Databases in a Virtual Environment**
- **Existing Virtualization Benchmarks Model Consolidation: Many VMs, Small VMs, Non-database Workloads**
- **TPC Is Developing a Benchmark to Satisfy That Demand: TPC-V**
  - **An OLTP Workload Typical of TPC Benchmarks**
  - **Fewer, Larger VMs**
  - **Cloud Characteristics: Variability (Mix of Small and Large VMs), Elasticity (Load Driven to Each VM Varies by 10X)**

### Benchmark Requirements
- **Database-Centric Workload**
- **Stresses Virtualization Layer**
- **Moderate Number of VMs, Exercising Enterprise Applications**
- **Healthy Storage and Networking I/O Content; Emphasizes I/O in a Virtualized Environment**
- **Timely Development Cycle (1-2 Years)**
- **Based on the TPC-E Benchmark and Borrows a Lot from It**

### What is TPC-E
- **TPC’s Latest OLTP Benchmark**
- **More Complex Than TPC-C**
- **Less I/O Than TPC-C**
- **A Lot of the Code is TPC-Supplied**
- **Models a Brokerage Firm**

### Abstraction of the Functional Components in an OLTP Environment
- **Modeled Business**
- **Presentation**
- **Network Application**
- **User Services**
- **Network and Database Interfaces**
- **Business Logic Services**
- **Market Exchange**

### Functional Components of TPC-E Test Configuration
- **Driving and Reporting**
- **Sponsor Provided**
- **TPC Defined**
- **Interfaces**
- **Sponsor Provided**
- **Commercial Product**
- **TPC Provided**
- **Legend**

### How Does This Matter to the PostgreSQL Community?
- **TPC Is Developing a Benchmarking Kit for TPC-V**
  - **First Time TPC Has Gone Beyond Publishing a Functional Specification**
  - **Full, End-to-End Functionality**
  - **Publicly Available Kit**
  - **Produces the Variability and Load Elasticity Properties of the Benchmark**
  - **Users Need Not Worry About Complexities of Simulating Cloud Characteristics**
  - **Runs Against an Open Source Database**
  - **A “Reference” Kit; Companies Are Allowed to Develop Their Own Kit**
- **Anyone Can Install the Kit and Pound on the Server with a Cloud Database Workload**
- **Removes the High Cost of Entry Typical to TPC Benchmarks**
- **The Reference Kit Will Run on PostgreSQL**
  - **ODBC Interface Allows Running the Workload Against Other Databases**
- **Tentative Plans to Also Release a TPC-E Kit**
  - **Started Out with a Kit to Run TPC-E; Now Adding the TPC-V Properties**

### Our Dependence on PostgreSQL
- **This Reference Kit Will Be a Very Successful New Benchmark if Its Performance on the Open Source Database is at Least Decent Compared to Commercial Databases**
- **PostgreSQL Can Benefit a Lot from Being the Reference Database for a Major New Benchmark if Its Performance is Decent!**
- **Running the TPC-E Prototype on PGSQL 8.4 on RHEL 6.1, We Are at ~20% of Published TPC-E Results**
  - **Very Early Results**
  - **Current Testbed is Memory Challenged**
  - **Good News: Query Plans for the 10 Queries Implemented Look Good**
  - **Long, Mostly-Read Queries => Issue is the Basic Execution Path, Not Redo Log, Latch Contention, etc.**

### Benchmark Development Status
- **TPC-V Development Subcommittee**
  - **9 Member Companies**
  - **3-4 Engineers Working Actively on the Reference Kit**
  - **On Version 0.12 of the Draft Spec**
  - **Worked Through a Lot of Thorny Issues**
  - **Betting the Farm on the Reference Kit**
  - **If We Produce a Good Kit, TPC-V Will Be an Immediate Success**
- **Expect to Make a Kit Available to Member Companies in Q3 or Q4**
- **Bottom Line: Cooperating to Make the TPC-E/TPC-V Reference Kits Run Well on PostgreSQL Will Greatly Benefit All of Us**

## Acknowledgements
- **VMware Performance Team**: Dong, Reza
- **VMware vFabric Postgres Team**: David Fetter, Dan, Alex, Nikhil, Scott, Yolanda

## Thank You

---

This document has been optimized for clarity, coherence, and professionalism.