# Sandbox Detection Engine

## The 2nd Option: Driver
- **Functionality**: Monitors system calls from the target in the kernel.
- **Features**:
  - System callbacks, notifications, and filters.
  - Provides more complete monitoring coverage.
  - Offers more comprehensive stain tracking.
- **Challenges**:
  - PATCH GUARD for 64-bit OS can interfere.
  - Malware may interfere with drivers.

## The 3rd Option: Virtualization-based Driver
- **Functionality**: Uses virtualization to monitor system calls and R/W access to sensitive memory.
- **Advantages**:
  - Avoids BSOD caused by PATCH GUARD.
  - Protects private driver code and data.
  - Expands more comprehensive detection.
- **Challenges**:
  - Unsecured reliability of other kernel modules.
  - Poor nested virtualization support in some virtual machine software.

### Architecture
- **Userland**
- **Kernel**
  - `lib`
  - `system call`
  - `obj`
  - `proc`
  - `fsflt`
  - `drv`
- **Sandbox Detection Driver**
  - `lib`
  - `lib`
- **Sandbox Hypervisor Driver**

## The 4th Option: Detection Scheme Based on Global Virtual Machine Monitor
- **Functionality**: Core detection code is in the host OS kernel.
- **Integrated Advantages**:
  - Independent of modules inside VM.
  - No impact on detection when a VM crashes.
  - Data outputs directly to the host record service.
- **Architecture**:
  - **Hypervisor**
  - **Hardware**
  - **Sandbox Detection Engine**
  - **Virtual Machine**
  - **Host OS Kernel**
    - **VM-1**
    - **VM-2**
    - ...
  - **Host Server**

## Sandbox Detection Technology
- **Behavior Detection**
- **Memory Access Detection**
- **Kernel Exploit Detection**
- **Kernel Exception Detection**
- **Known Vulnerabilities Detection**
- **User-mode Exploit Detection**

### Memory Access Detection
- **Guest OS**
- **Hypervisor**
- **Match**
- **I.I.**
- **Match**
- **Ret**
- **Extract**
- **Record**
- **Detection Logging Recorder**
- **Execution Flow in Guest OS**
- **Match**
- **I.I.**
- **Match**
- **Ret**
- **Extract**
- **Record**
- **S.MTF**
- **C.MTF**
- **Recover**
- **Ret**

### Kernel Exploit Detection
- **Vulnerability Triggering**
- **Exploiting**
- **Exploit Result**
- **UAF**
- **Nullptr**
- **OOB**
- **Pool/heap spray**
- **Corrupting window**
- **Token**
- **Privileges**
- **Integrity**
- **ACL**
- **...**
- **KeBugCheck(XX)**
- **Record Context**

### Kernel Exception Detection
- **Records critical context when the system kernel crashes.**

### Known Vulnerabilities Detection
- **Identifies tasks that exploit known vulnerabilities accurately.**

### User-mode Exploit Detection
- **Heap Spray Limit Detection**
- **Export Address Table Filtering**
- **Import Address Table Filtering**
- **ROP Detection**
- **Flash Specific Detection**
- **Vector Length Detection**
- **ByteArray Length Detection**
- **LoadBytes Dump**
- **Other Detection Features**
- **VBScript Specific Detection**

### Detection Result Alarm
- **Advanced Threat Automation Platform**

## How to Find Zero-day Using a Sandbox?
- **Example**: CVE-2017-0199

### Sandbox Advantage
- **Multiple Environments**:
  - Each version of Windows
  - Each version of Office
  - Each version of Flash
- **Dynamic Execution**:
  - Analog interaction
  - Anti-static obfuscation (especially RTF files)
- **Record and Restore the Scene**:
  - Accurate vulnerability and exploit identification
  - Automation to show process behaviors, dump files, and exploit code loaded by LoadBytes

### Build Automation Detection System
- **Historical Event Research**:
  - History of 0day/1day studies
- **Data Source**:
  - Massive data from 360
  - High-quality shared data source
- **Analysis System**:
  - Sandbox
  - Notification System
  - Manual Confirmation
  - Related Vulnerability Analysts

### Related Vulnerabilities in Nearly 6 Years
- **2013-2018**:
  - CVE-2013-0634
  - CVE-2013-3906
  - CVE-2014-1761
  - CVE-2014-4114
  - CVE-2014-6352
  - CVE-2015-1642
  - CVE-2015-2424
  - CVE-2015-2545
  - CVE-2015-5119
  - CVE-2015-5122
  - CVE-2016-4117
  - CVE-2016-7193
  - CVE-2016-7855
  - CVE-2017-0199
  - CVE-2017-0261
  - CVE-2017-0262
  - CVE-2017-8570
  - CVE-2017-8759
  - CVE-2017-11292
  - CVE-2017-11826
  - CVE-2017-11882
  - CVE-2018-0798
  - CVE-2018-0802
  - CVE-2018-4878
  - CVE-2018-5002
  - CVE-2018-8174
  - CVE-2018-8373
  - CVE-2018-15982

### Historical Vulnerability Classification
- **RTF Control Word Parsing Problem**
- **Open XML Tag Parsing Problem**
- **ActiveX Control Parsing Problem**
- **Office Embedded Flash 0day**
- **TIFF Image Parsing Problem**
- **EPS File Parsing Problem**
- **Moniker**
- **Other Office Logic Vulnerabilities**

### Constant Reflection
- **Missteps**: 4 0days + 1 1day

This document provides a detailed overview of the sandbox detection engine, its various options, and the technologies used to detect and mitigate security threats.