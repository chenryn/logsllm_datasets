### Future Work

In future work, we plan to investigate principled methodologies to reduce the search space for vulnerable pairs. This will involve developing more efficient and targeted approaches to identify potential vulnerabilities.

### Public Cloud Setting

INVISIPROBE is currently implemented based on the features and ISA of Intel CPUs. As a result, public cloud environments that support RDMA, such as CloudLab, which only uses AMD CPUs, cannot be evaluated with our current implementation. We intend to extend INVISIPROBE to support AMD platforms in future work.

### Single-CPU Setting

Although INVISIPROBE is designed to function as a cross-CPU attack vector, particularly in fully disaggregated server racks, our current evaluation has been limited to a single-CPU setting due to the constraints of our motherboard, which has only one CPU slot. We plan to evaluate INVISIPROBE in a cross-CPU setting using a new motherboard, such as the Supermicro X11DPH-T, to fully explore its capabilities.

### PCIe Topology

In our evaluation, we assume that the adversary has knowledge of the PCIe topology of the target machine, allowing them to select appropriate attacker and victim peripheral devices. If this information is unavailable, the attacker would need to infer which victim device shares the I/O switch. This task is similar to VM co-residency attacks, where the adversary uses side-channels to determine when their VM shares a physical machine with another victim VM. The probing delays observed by the adversary may facilitate this inference, and we plan to validate this hypothesis in future work.

### Related Work

#### Side-Channel Attacks in Data Centers

Recent studies have explored how RDMA can be exploited to breach the confidentiality of machines or programs in data centers through cache-based side-channel attacks. For example, in the NetCat attack [23], Kurth et al. demonstrated that an attacker can remotely perform Prime+Probe attacks on the LLC of the victim machine using RDMA NICs and Intel's DDIO (Data-Direct I/O) mechanism. This allows the attacker to infer the memory access pattern of the victim, leading to consequences such as password leakages. In the Pythia attack [24], Tsai et al. showed that Evict+Reload attacks can be launched against metadata stored in the SRAM on RDMA NICs, enabling the inference of other RDMA nodes' access patterns.

Our attacks explore a different direction, focusing on timing related to PCIe links between host CPUs and NICs, rather than cache timing on host CPUs and NICs. Figure 8 illustrates the comparison between our attack and the NetCat and Pythia attacks.

#### Security Implications of Bandwidth Contention

Previous research has shown that bandwidth contention can be exploited for side-channel and covert-channel attacks. For instance, Hu et al. [83], [84] and Gray et al. [85], [86] studied covert channels based on bus/cache contention between VMs managed by the VAX security kernel. Wu et al. [87] investigated similar attacks in contemporary public cloud environments. DRAMA [88] exploits shared DRAM row buffers in multiprocessor systems for cross-CPU attacks, and Irazoqui et al. [89] conducted cross-CPU attacks on the CPU interconnect. However, none of these prior works have addressed high-speed I/O protocols like PCIe, making our work the first to do so.

#### Keystroke Inference

Keystroke inference has been studied based on network communication patterns [90]. Subsequent works have explored how information leaked from software and hardware can be used for the same purpose. For example, Zhang et al. [12] proposed using the pattern of ESP register values as fingerprints for keystroke events. Schwarz et al. [47] introduced KeyDrown, which demonstrates timing attacks on keyboard interrupts and cache attacks on interrupt handlers to infer keystrokes. Wang et al. [48] showed that cache-based side-channel attacks on graphic libraries can also achieve keystroke inference. INVISIPROBE reveals a new remote side-channel for keystroke inference.

#### Website Inference

Even when traffic is encrypted, an adversary can still infer which websites a user visits based on packet sizes and time intervals [91]–[95]. As more browsers render webpages using GPUs, website visits can be inferred through GPU-based side-channels, memory residues, access patterns, and performance counters [25], [65], [96]. Additionally, cache side-channel attacks have been found effective for website inference [66], [97].

#### Stealing Machine-Learning Models

Machine-learning model structures can be considered secrets, and recent works have explored how they can be inferred through side-channel attacks. Exploited side-channels include power consumption [98]–[100], CPU cache [101]–[103], and GPU resource contention [25], [26]. One closely related work [59] involves snooping on the PCIe bus, but it requires physical access to the edge device. Our adversary, however, can operate remotely.

### Conclusion

PCIe congestion, resulting from the insufficient forwarding capability of I/O switches, introduces I/O delays to connected devices. When exploited by an attacker who intentionally introduces PCIe congestion, sensitive user activities on a device can be inferred. We identified four attacks in two scenarios (using RDMA NIC to attack GPU and using NVMe SSD to attack NIC), demonstrating that sensitive information such as keystroke timings, webpage visits, and trained machine-learning models can be inferred with high accuracy. We call for the awareness of server manufacturers and the security community, and our study can serve as motivation for designing security-enhanced PCIe implementations.

### Acknowledgements

We thank the anonymous reviewers for their valuable comments, which significantly improved the paper from its initial version. The authors from Fudan University are supported by NSFC 61802068 and Shanghai Sailing Program 18YF1402200.

### References

[1] “The three most common ethernet speeds,” https://smallbusiness.chron.com/three-common-ethernet-speeds-69375.html, accessed: 2020-02-11.
[2] “Nvme ssds: Everything you need to know about this insanely fast storage,” https://www.pcworld.com/article/2899351/everything-you-need-to-know-about-nvme.html, accessed: 2020-02-11.
[3] R. Neugebauer, G. Antichi, J. F. Zazo, Y. Audzevich, S. L´opez-Buedo, and A. W. Moore, “Understanding pcie performance for end host networking,” in Proceedings of the 2018 Conference of the ACM Special Interest Group on Data Communication, 2018, pp. 327–341.
[4] “Pcie 3.0 x8 vs. x16: Does it impact gpu performance?” https://www.gamersnexus.net/guides/2488-pci-e-3-x8-vs-x16-performance-impact-on-gpus, accessed: 2020-02-11.
[5] “2nd generation intel xeon scalable processors with intel c620 series chipsets (purley refresh),” https://www.intel.com/content/www/us/en/design/products-and-solutions/processors-and-chipsets/cascade-lake/2nd-gen-intel-xeon-scalable-processors.html, accessed: 2020-02-29.
[6] “Tyan thunder hx ft77db7109,” https://www.tyan.com/Barebones FT77DB7109 B7109F77DV14HR-8X-2T-F, accessed: 2020-02-20.
[7] A. Burnes, “Introducing NVIDIA RTX IO,” https://www.nvidia.com/en-us/geforce/news/rtx-io-gpu-accelerated-storage-technology/, 2020, [Online; accessed 18-December-2020].
[8] L. Yin, X. Chen, Z. Qin, Z. Zhang, J. Feng, and D. Li, “An experimental perspective for computation-efficient neural networks training,” in Conference on Advanced Computer Architecture. Springer, 2018, pp. 168–178.
[9] R. Budruk, “Pci express basics,” in PCI-SIG Developers Conference, 2007.
[10] W. Sun, L. Xu, S. Elbaum, and D. Zhao, “Model-agnostic and efficient exploration of numerical state space of real-world TCP congestion control implementations,” in 16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19), 2019, pp. 719–734.
[11] S. Jero, M. E. Hoque, D. R. Choffnes, A. Mislove, and C. Nita-Rotaru, “Automated attack discovery in tcp congestion control using a model-guided approach.” in ANRW, 2018, p. 95.
[12] K. Zhang and X. Wang, “Peeping tom in the neighborhood: Keystroke eavesdropping on multi-user systems,” in USENIX Security Symposium, vol. 20, 2009, p. 23.
[13] P. Zhou, W. Shi, J. Tian, Z. Qi, B. Li, H. Hao, and B. Xu, “Attention-long short-term memory networks for relation based bidirectional classification,” in Proceedings of the 54th annual meeting of the association for computational linguistics (volume 2: Short papers), 2016, pp. 207–212.
[14] “Intel pcie introduction,” https://www.intel.com/content/www/us/en/io/pci-express/pci-express-architecture-general.html, accessed: 2020-02-29.
[15] “Down to the tlp: How pci express devices talk,” http://xillybus.com/tutorials/pci-express-tlp-pcie-primer-tutorial-guide-1, accessed: 2020-02-11.
[16] “8th generation intel core processor family and intel xeon processor e-2100m family (coffee lake h),” https://www.intel.com/content/www/us/en/design/products-and-solutions/processors-and-chipsets/coffee-lake-h/overview.html, accessed: 2020-02-29.
[17] T. Shanley, InfiniBand network architecture. Addison-Wesley Professional, 2003.
[18] M. Beck and M. Kagan, “Performance evaluation of the rdma over ethernet (roce) standard in enterprise data centers infrastructure,” in Proceedings of the 3rd Workshop on Data Center-Converged and Virtual Ethernet Switching, 2011, pp. 9–15.
[19] F. D. Neeser, B. Metzler, and P. W. Frey, “Softrdma: Implementing iwarp over tcp kernel sockets,” IBM Journal of Research and Development, vol. 54, no. 1, pp. 5–1, 2010.
[20] C. Mitchell, Y. Geng, and J. Li, “Using one-sided RDMA reads to build a fast, cpu-efficient key-value store,” in Presented as part of the 2013 USENIX Annual Technical Conference (USENIXATC 13), 2013, pp. 103–114.
[21] J. Shi, Y. Yao, R. Chen, H. Chen, and F. Li, “Fast and concurrent RDF queries with rdma-based distributed graph exploration,” in 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 16), 2016, pp. 317–332.
[22] J. Xue, Y. Miao, C. Chen, M. Wu, L. Zhang, and L. Zhou, “Fast distributed deep learning over rdma,” in Proceedings of the Fourteenth EuroSys Conference 2019, 2019, pp. 1–14.
[23] M. Kurth, B. Gras, D. Andriesse, C. Giuffrida, H. Bos, and K. Razavi, “Netcat: Practical cache attacks from the network,” in Proceedings of IEEE Security & Privacy 2020. IEEE, 2020.
[24] S.-Y. Tsai, M. Payer, and Y. Zhang, “Pythia: remote oracles for the masses,” in 28th USENIX Security Symposium (USENIX Security 19), 2019, pp. 693–710.
[25] H. Naghibijouybari, A. Neupane, Z. Qian, and N. Abu-Ghazaleh, “Rendered insecure: Gpu side channel attacks are practical,” in Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, 2018, pp. 2139–2153.
[26] J. Wei, Y. Zhang, Z. Zhou, Z. Li, and M. A. A. Faruque, “Leaky DNN: stealing deep-learning model secret with GPU context-switching side-channel,” in 50th Annual IEEE/IFIP International Conference on Dependable Systems and Networks, DSN 2020, Valencia, Spain, June 29 - July 2, 2020, 2020, pp. 125–137.
[27] “Nvme over fabrics,” https://nvmexpress.org/wp-content/uploads/NVMe Over Fabrics.pdf, accessed: 2020-03-05.
[28] D. J. Miller, P. M. Watts, and A. W. Moore, “Motivating future interconnects: a differential measurement analysis of pci latency,” in Proceedings of the 5th ACM/IEEE Symposium on Architectures for Networking and Communications Systems, 2009, pp. 94–103.
[29] M. Martinasso, G. Kwasniewski, S. R. Alam, T. C. Schulthess, and T. Hoeﬂer, “A pcie congestion-aware performance model for densely populated accelerator servers,” in SC’16: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis. IEEE, 2016, pp. 739–749.
[30] M. Martinasso and J.-F. M´ehaut, “A contention-aware performance model for hpc-based networks: A case study of the infiniband network,” in European Conference on Parallel Processing. Springer, 2011, pp. 91–102.
[31] L. Soares and M. Stumm, “Flexsc: Flexible system call scheduling with exception-less system calls.” in Osdi, vol. 10, 2010, pp. 1–8.
[32] “What is rdma?” https://community.mellanox.com/s/article/what-is-rdma-x, accessed: 2020-08-27.
[33] Z. Yang, J. R. Harris, B. Walker, D. Verkamp, C. Liu, C. Chang, G. Cao, J. Stern, V. Verma, and L. E. Paul, “Spdk: A development kit to build high performance storage applications,” in 2017 IEEE International Conference on Cloud Computing Technology and Science (CloudCom). IEEE, 2017, pp. 154–161.
[34] “Userspace networking with dpdk,” https://www.linuxjournal.com/content/userspace-networking-dpdk, accessed: 2020-02-29.
[35] “Rdtscp,” https://www.felixcloutier.com/x86/rdtscp, accessed: 2020-02-29.
[36] “Ip over infiniband (ipoib),” https://docs.mellanox.com/pages/viewpage.action?pageId=12004991, accessed: 2020-08-27.
[37] “Which queue pair type to use,” https://www.rdmamojo.com/2013/06/01/which-queue-pair-type-to-use/, accessed: 2020-02-29.
[38] “Introducing 200g hdr infiniband solutions,” https://www.mellanox.com/related-docs/whitepapers/WP Introducing 200G HDR InfiniBand Solutions.pdf, accessed: 2020-02-25.
[39] C. Maurice, C. Neumann, O. Heen, and A. Francillon, “C5: cross-cores cache covert channel,” in International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, 2015, pp. 46–64.
[40] “Enabling gpu rendering on windows server 2016 / windows 10 rdp,” https://community.esri.com/thread/225251-enabling-gpu-rendering-on-windows-server-2016-windows-10-rdp, accessed: 2020-08-27.
[41] “Creating virtual linux workstation,” https://cloud.google.com/solutions/creating-a-virtual-gpu-accelerated-linux-workstation, accessed: 2020-08-27.
[42] “Deploying a 4x4k, gpu-backed linux desktop instance on aws,” https://aws.amazon.com/cn/blogs/compute/deploying-4k-gpu-backed-linux-desktop-instance-on-aws/, accessed: 2020-02-20.
[43] Unknown, “Steamworks,” https://partner.steamgames.com/, 2020, [Online; accessed 18-December-2020].
[44] ——, “Rethinking Visual Cloud Services for Evolving Media,” https://www.intel.ru/content/dam/www/public/us/en/documents/guides/vcd-wp-v6.pdf, 2020, [Online; accessed 18-August-2020].
[45] “Remote desktop services - gpu acceleration,” https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-graphics-virtualization, accessed: 2020-08-27.
[46] “Remote desktop software statistics and trends,” https://www.trustradius.com/vendor-blog/remote-desktop-buyer-statistics-and-trends, accessed: 2020-08-27.
[47] M. Schwarz, M. Lipp, D. Gruss, S. Weiser, C. Maurice, R. Spreitzer, and S. Mangard, “Keydrown: Eliminating software-based keystroke timing side-channel attacks,” 2018.
[48] D. Wang, A. Neupane, Z. Qian, N. B. Abu-Ghazaleh, S. V. Krishnamurthy, E. J. Colbert, and P. Yu, “Unveiling your keystrokes: A cache-based side-channel attack on graphics libraries,” in NDSS, 2019.
[49] L. R. Rabiner, “A tutorial on hidden markov models and selected applications in speech recognition,” Proceedings of the IEEE, vol. 77, no. 2, pp. 257–286, 1989.
[50] “Gpu accelerated compositing in chrome,” https://www.chromium.org/developers/design-documents/gpu-accelerated-compositing-in-chrome, accessed: 2020-02-20.
[51] “Webgl: 2d and 3d graphics for the web,” https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API, accessed: 2020-02-29.
[52] “How to turn hardware acceleration on and off,” https://support.mozilla.org/en-US/kb/how-turn-hardware-acceleration-firefox, accessed: 2020-02-29.