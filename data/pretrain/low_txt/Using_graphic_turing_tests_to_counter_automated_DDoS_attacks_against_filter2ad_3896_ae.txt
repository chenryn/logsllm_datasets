### 6. Related Work

The increasing popularity and utility of the Internet have made it a target for malicious and negligent users, resulting in a persistent threat of Denial of Service (DoS) attacks. Despite a reduction in media coverage, recent studies indicate a high frequency of DoS attacks occurring continuously across the Internet [23]. This issue is exacerbated by the growing use of the Internet for time-critical applications, such as electricity production monitoring and coordination among different generators. Additionally, the fundamental protocols, such as IP and TCP, are inherently vulnerable to DoS attacks [32, 14].

Both the commercial and research communities recognize the need to protect against or mitigate the effects of DoS attacks. Several approaches have been proposed, including [15, 9, 31, 30, 13, 33, 35]. These methods typically focus on detecting the source of ongoing DoS attacks and then countering them by pushing filtering rules onto routers as close to the attack sources as possible. Such reactive approaches are motivated by two main factors: first, they require only a small subset of nodes (e.g., ISP routers) to adopt new protocols, rather than end-systems. Second, these mechanisms are relatively transparent to existing protocols, applications, and legitimate users. However, reactive approaches alone are often insufficient.

- **Traffic Filtering Methods**: Techniques that filter traffic based on known attack patterns or statistical anomalies (e.g., [29]) can be circumvented by changing the attack pattern or masking the anomalies. Statistical methods may also inadvertently filter out valid traffic. Moreover, due to the Internet's multi-administrative and jurisdictional nature, it is often difficult or impossible to shut down an attack by contacting the relevant authorities. Even if this were feasible, the source of the attack might be a compromised node, not the actual attacker.

- **Pushback Mechanisms**: Approaches like the one described in [15] require close cooperation among different service providers. Since most attacks use random source IP addresses and ingress filtering is not widely implemented, the destination IP address is the only reliable field for filtering. If filters are only pushed halfway through the network, the target may unintentionally disrupt its own communications. For effective filtering, providers must allow other providers or end-network administrators to install filters on their routers, which raises concerns about abuse and the feasibility of such collaboration.

- **Collaborative Actions by ISPs**: Even simple mechanisms like ingress filtering, which could reduce or eliminate spoofed-address DoS attacks, are not widely adopted. It is unrealistic to expect cooperative providers to establish static filters for legitimate clients, especially for mobile or remote clients. Systems like D-WARD [29] monitor outgoing traffic and throttle suspicious traffic, while COSSACK [25] allows participating agents to exchange information about observed traffic. However, these systems are limited in their effectiveness against non-spoofed DDoS attacks.

- **Class-Based Queuing**: Using Class-Based Queuing on web load-balancers to identify misbehaving IP addresses and place them in lower-priority queues [18] is another approach. However, many DDoS attacks use varying spoofed IP addresses, making classification ineffective. Additionally, the state management required by the load-balancer can be prohibitive, and placing the load-balancer closer to the network core can further complicate the problem.

- **Content Replication**: Replicating content across the network can make it more difficult for attackers to cause disruption. However, this approach is not ideal for frequently updated or dynamic content, and ensuring the security of replicated information is challenging.

- **Other Approaches**: The NetBouncer project [36] uses client-legitimacy tests, including packet validity, flow behavior analysis, and application-specific tests. However, it is still susceptible to large link-congestion attacks. Other studies, such as [4], suggest that requiring clients to perform some work can be an effective countermeasure, provided the attacker does not have significantly more resources than the defender.

### 7. Conclusions

We introduced WebSOS, an architecture that enables legitimate users to access a web server during a denial of service attack. The architecture combines Graphic Turing tests, cryptographic protocols for data origin authentication, packet filtering, overlay networks, and consistent hashing to provide service to casual web-browsing users. Our prototype implementation uses standard web proxying and authentication mechanisms built into all browsers, requiring no changes to web servers, browsers, or existing protocols.

We conducted performance evaluations of WebSOS over both a local area network and the Internet using PlanetLab, a testbed for network overlays. In a realistic but worst-case deployment scenario, the end-to-end communication latency between browser and server increased by a factor of 7 on average, with a worst case of 10. We implemented and evaluated a shortcut optimization, reducing the latency to a factor of 2. These results are consistent with our simulations. While there is room for further optimization, we believe the current overhead is acceptable for many critical environments and applications.

Future work includes completing and deploying the WebSOS prototype on PlanetLab, developing an IPsec-enabled prototype for improved performance, and conducting more comprehensive performance measurements over a longer period and for a wider set of users and websites.

### 8. Acknowledgements

We thank Alexander Konstantinou for providing the basis for the forwarding code in the communications module and Abhinav Kamra for writing the Chord implementation used for overlay routing.

### 9. References

[1] D. G. Andersen. Mayday: Distributed Filtering for Internet Services. In 4th USENIX Symposium on Internet Technologies and Systems USITS, March 2003.
[2] L. Amini, H. Schulzrinne, and A. Lazar. Observations from Router-level Internet Traces. In DIMACS Workshop on Internet and WWW Measurement, Mapping and Modeling, February 2002.
[3] S. M. Bellovin. Distributed Firewalls. ;login: magazine, special issue on security, pages 37–39, November 1999.
[4] W. J. Blackert, D. M. Gregg, A. K. Castner, E. M. Kyle, R. L. Hom, and R. M. Jokerst. Analyzing Interaction Between Distributed Denial of Service Attacks and Mitigation Technologies. In Proceedings of DISCEX III, pages 26–36, April 2003.
[5] CCITT. X.509: The Directory Authentication Framework. International Telecommunications Union, Geneva, 1989.
[6] A. Cohen, S. Rangarajan, and J. H. Slye. On the Performance of TCP Splicing for URL-Aware Redirection. In USENIX Symposium on Internet Technologies and Systems, 1999.
[7] D. Cook. Analysis of Routing Algorithms for Secure Overlay Service. Computer Science Department Technical Report CUCS-010-02, Columbia University, April 2002.
[8] S. A. Crosby and D. S. Wallach. Denial of Service via Algorithmic Complexity Attacks. In Proceedings of the 12th USENIX Security Symposium, pages 29–44, August 2003.
[9] D. Dean, M. Franklin, and A. Stubblefield. An Algebraic Approach to IP Traceback. In Proceedings of the Network and Distributed System Security Symposium (NDSS), pages 3–12, February 2001.
[10] S. Dietrich, N. Long, and D. Dittrich. Analyzing Distributed Denial of Service Tools: The Shaft Case. In Proceedings of USENIX LISA XIV, December 2000.
[11] G. Dommety. Key and Sequence Number Extensions to GRE. RFC 2890, September 2000.
[12] D. Farinacci, T. Li, S. Hanks, D. Meyer, and P. Traina. Generic Routing Encapsulation (GRE). RFC 2784, March 2000.
[13] M. T. Goodrich. Efficient Packet Marking for Large-Scale IP Traceback. In Proceedings of the 9th ACM Conference on Computer and Communications Security (CCS), pages 117–126, November 2002.
[14] L. Heberlein and M. Bishop. Attack Class: Address Spoofing. In Proceedings of the 19th National Information Systems Security Conference, pages 371–377, October 1996.
[15] J. Ioannidis and S. M. Bellovin. Implementing Pushback: Router-Based Defense Against DDoS Attacks. In Proceedings of the Network and Distributed System Security Symposium (NDSS), February 2002.
[16] S. Ioannidis, A. Keromytis, S. Bellovin, and J. Smith. Implementing a Distributed Firewall. In Proceedings of Computer and Communications Security (CCS), pages 190–199, November 2000.
[17] D. Karger, E. Lehman, F. Leighton, R. Panigrahy, M. Levine, and D. Lewin. Consistent Hashing and Random Trees: Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web. In Proceedings of ACM Symposium on Theory of Computing (STOC), pages 654–663, May 1997.
[18] F. Kargl, J. Maier, and M. Weber. Protecting web servers from distributed denial of service attacks. In World Wide Web, pages 514–524, 2001.
[19] S. Kent and R. Atkinson. Security Architecture for the Internet Protocol. RFC 2401, Nov. 1998.
[20] A. D. Keromytis, V. Misra, and D. Rubenstein. SOS: Secure Overlay Services. In Proceedings of ACM SIGCOMM, pages 61–72, August 2002.
[21] A. D. Keromytis, J. Parekh, P. N. Gross, G. Kaiser, V. Misra, J. Nieh, D. Rubenstein, and S. Stolfo. A Holistic Approach to Service Survivability. In Proceedings of the ACM Survivable and Self-Regenerative Systems Workshop, October 2003.
[22] S. Miltchev, S. Ioannidis, and A. D. Keromytis. A Study of the Relative Costs of Network Security Protocols. In Proceedings of USENIX Annual Technical Conference (Freenix Track), pages 41–48, June 2002.
[23] D. Moore, G. Voelker, and S. Savage. Inferring Internet Denial-of-Service Activity. In Proceedings of the 10th USENIX Security Symposium, pages 9–22, August 2001.
[24] G. Mori and J. Malik. Recognizing Objects in Adversarial Clutter: Breaking a Visual CAPTCHA. In Computer Vision and Pattern Recognition CVPR’03, June 2003.
[25] C. Papadopoulos, R. Lindell, J. Mehringer, A. Hussain, and R. Govindan. COSSACK: Coordinated Suppression of Simultaneous Attacks. In Proceedings of DISCEX III, pages 2–13, April 2003.
[26] K. Park and H. Lee. On the Effectiveness of Route-based Packet Filtering for Distributed DoS Attack Prevention in Power-law Internets. In Proceedings of ACM SIGCOMM, pages 15–26, August 2001.
[27] L. Peterson, D. Culler, T. Anderson, and T. Roscoe. A Blueprint for Introducing Disruptive Technology into the Internet. In Proceedings of the 1st Workshop on Hot Topics in Networks (HotNets-I), October 2002.
[28] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker. A Scalable Content-Addressable Network. In Proceedings of ACM SIGCOMM, August 2001.
[29] P. Reiher, J. Mirkovic, and G. Prier. Attacking DDoS at the source. In Proceedings of the 10th IEEE International Conference on Network Protocols, November 2002.
[30] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Practical Network Support for IP Traceback. In Proceedings of the 2000 ACM SIGCOMM Conference, pages 295–306, August 2000.
[31] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Network Support for IP Traceback. ACM/IEEE Transactions on Networking, 9(3):226–237, June 2001.
[32] C. Schuba, I. Krsul, M. Kuhn, E. Spafford, A. Sundaram, and D. Zamboni. Analysis of a Denial of Service Attack on TCP. In IEEE Security and Privacy Conference, pages 208–223, May 1997.
[33] A. Snoeren, C. Partridge, L. Sanchez, C. Jones, F. Tchakountio, S. Kent, and W. Strayer. Hash-Based IP Traceback. In Proceedings of ACM SIGCOMM, August 2001.
[34] I. Stoica, R. Morris, D. Karger, F. Kaashoek, and H. Balakrishnan. Chord: A Scalable Peer-To-Peer Lookup Service for Internet Applications. In Proceedings of ACM SIGCOMM, August 2001.
[35] R. Stone. CenterTrack: An IP Overlay Network for Tracking DoS Floods. In Proceedings of the USENIX Security Symposium, August 2000.
[36] R. Thomas, B. Mark, T. Johnson, and J. Croall. NetBouncer: Client-Legitimacy-Based High-Performance DDoS Filtering. In Proceedings of DISCEX III, pages 14–25, April 2003.
[37] L. von Ahn, M. Blum, N. J. Hopper, and J. Langford. CAPTCHA: Using Hard AI Problems for Security. In Proceedings of EUROCRYPT’03, 2003.