### 优化后的文本

对于BGW 2005 [BGW05]，我们与ACSC网站上由Matt Steiner和Ben Lynn提供的C语言实现进行了比较。我们的翻译最小化了公钥参数或密文大小，这与他们的手动翻译结果一致。我们确认了安全性，并且公钥/密文大小是最优的。

对于BB HIBE [BB04a]，Charm有一个完整的HIBE实现。我们对其进行了至少两层的测试，发现其在最小化密文方面与我们的实现匹配，除了他们在公钥中添加了一个预计算的配对（GT中的元素），以避免每次加密时都需要重新计算。这仅影响效率，我们确认了安全性和密文大小的最优性。

对于CL [CL04]，我们确认Charm的实现是安全的并且公钥大小最优。然而，在更常见的情况下，如果希望最小化签名大小，AutoGroup+找到了一个具有更短签名的翻译。

对于BLS [BLS04]，我们的翻译也是一致的。这是一个简单的案例，只有两种翻译选项。

Charm [AGM+13]还包括了2005年的Waters加密和签名方案 [Wat05] 的变体，但我们翻译的是原始方案（正如[AGH13, AGOT14]所做的），因此我们的翻译结果与这些Charm变体不直接可比。

### 5.2 与Abe等人的比较

Abe等人 [AGOT14] 在两个加密方案上测试了他们的方法：Waters 2005 [Wat05] 和 Waters 2009（双系统加密）[Wat09]。他们关注于最小化公钥大小和Type-III假设。我们认为从业者可能更关心最小化密文或私钥大小，因此我们的总结也包括这些优化。

对于Waters 2005，AutoGroup+找到了与他们半自动化方法相同的构造。如第3.1.1节所述，他们对该方案的依赖图包含了一些不必要的依赖关系。Waters [Wat05] 明确指出应选择g2、u'、ui作为新的随机生成器，但Abe等人明确“假设”它们是从一个共同生成器g生成的。从功能和Type-I方案的安全性角度来看，这种区别并不重要。然而，它确实改变了中间依赖图，这在某些情况下可能会影响输出（尽管在这个情况下没有影响）。他们的部分自动化和我们的完全自动化都不到一秒钟。

对于Waters 2009，AutoGroup+最初似乎找到了一个比Abe等人 [AGOT14] 更少一个群元素的PK优化构造。然而，后续讨论 [AGOT15] 确定这只是由于不同的计数方法；本工作中报告的数字是AutoGroup+和Abe等人方法的正确数字。

在原始工作 [AGOT14] 中，没有报告基于交互假设的方案。在随后的通信 [AGOT15] 中，Abe等人展示了基于交互LSRW假设的Camenisch-Lysyanskaya (CL) 签名 [CL04] 的翻译。我们为该方案、假设和证明导出了SDL文件，并通过AutoGroup+运行。结果匹配。（参见附录C中的CL图拆分）。

手工绘制和合并依赖图是一项繁琐的工作，并且对于像 [ACD+12] 这样的复杂方案变得不可行。此外，Abe等人的图拆分程序在Waters09上花费了1.75小时，而我们的工具只需6.5秒即可处理所有内容。因此，我们发现转录SDL并使用AutoGroup+要容易得多且更快。

### 5.3 与AutoGroup的比较

AutoGroup工具 [AGH13] 是我们实现的起点，因此命名为AutoGroup+。我们的48个翻译实验中有14个与AutoGroup重叠（七个共同方案且他们做的优化较少）。对于这14个点，工具找到了相同的构造。然而，主要的区别在于，AutoGroup+提供了安全保证。这要求我们为所有涉及的假设和证明编写新的SDL描述。

实际上，一个关键问题是安全逻辑将如何增加翻译时间。我们将重点放在利用SMT求解器来处理安全逻辑上，这使得AutoGroup+的运行时间仅比AutoGroup多几秒钟。

除了我们添加的安全逻辑外，我们还发现AutoGroup未实现加密的公钥优化标志。因为我们想与 [AGOT14] 的结果进行比较，所以我们实现了它。

AutoGroup在一个此处省略的签名方案上进行了测试。Boneh-Boyen [BB04c] 具有嵌套的证明结构，超出了本文考虑的黑盒归约范围。

### 5.4 与手动翻译的比较

Waters [Wat09] 的双系统加密方案有一些带有安全性分析的手动翻译。Ramanna、Chatterjee和Sarkar [RCS12] 提供了多种翻译，其中一种具有最小的公钥/密钥大小，但引入了一些温和的复杂性假设。类似地，Chen、Lim、Ling、Wang和Wee [CLL+13] 提出了一种引入SXDH假设的翻译，达到了最短的密文大小。这些结果优于AutoGroup+和 [AGH13, AGOT14] 所得到的结果，但尚不清楚如何推广和系统化所使用的人类创造力。

### 6 结论

自动化是许多密码设计任务的未来。这项工作成功地演示了从一个代数设置到另一个代数设置的复杂方案翻译的自动化。这种编译器的需求已经被成对设计师和实施者所证实。其实现结合并改进了来自系统 [AGH13] 和理论 [AGOT14] 社区的贡献。最终结果是一个实用工具AutoGroup+，使每个人都能进行安全的成对翻译。

### 7 致谢

作者感谢Masayuki Abe、Jens Groth、Miyako Ohkubo和Takeya Tango就这项工作以及他们在之前CRYPTO 2014上的工作进行了非常有益的讨论。

### 参考文献

[ACD+12] Masayuki Abe, Melissa Chase, Bernardo David, Markulf Kohlweiss, Ryo Nishimaki, and Miyako Ohkubo. Constant-size structure-preserving signatures: Generic constructions and simple assumptions. Cryptology ePrint Archive, Report 2012/285, 2012. http://eprint.iacr.org/.

[AG] D. F. Aranha and C. P. L. Gouvêa. RELIC is an Efficient Library for Cryptography. http://code.google.com/p/relic-toolkit/.

[AGH13] Joseph A. Akinyele, Matthew Green, and Susan Hohenberger. Using SMT solvers to automate design tasks for encryption and signature schemes. In ACM Conference on Computer and Communications Security, CCS’13, pages 399–410, 2013.

[AGHP12] Joseph A. Akinyele, Matthew Green, Susan Hohenberger, and Matthew W. Pagano. Machine-generated algorithms, proofs and software for the batch verification of digital signature schemes. In ACM CCS, pages 474–487, 2012.

[AGM+13] Joseph A. Akinyele, Christina Garman, Ian Miers, Matthew W. Pagano, Michael Rushanan, Matthew Green, and Aviel D. Rubin. Charm: a framework for rapidly prototyping cryptosystems. Journal of Cryptographic Engineering, 3(2):111–128, 2013. http://www.charm-crypto.com/Main.html.

[AGOT14] Masayuki Abe, Jens Groth, Miyako Ohkubo, and Takeya Tango. Converting cryptographic schemes from symmetric to asymmetric bilinear groups. In CRYPTO, pages 241–260, 2014.

[AGOT15] Masayuki Abe, Jens Groth, Miyako Ohkubo, and Takeya Tango, 2015. Private communications.

[BB04a] Dan Boneh and Xavier Boyen. Efficient selective-id secure identity-based encryption without random oracles. In Advances in Cryptology - EUROCRYPT 2004, volume 3027, pages 223–238. 2004.

[BB04b] Dan Boneh and Xavier Boyen. Efficient selective-id secure identity based encryption without random oracles. Cryptology ePrint Archive, Report 2004/172, 2004. http://eprint.iacr.org/.

[BB04c] Dan Boneh and Xavier Boyen. Short signatures without random oracles. In EUROCRYPT, volume 3027, pages 382–400, 2004.

[BF01] Dan Boneh and Matthew K. Franklin. Identity-based encryption from the Weil pairing. In CRYPTO, pages 213–229, 2001.

[BFF+14] Gilles Barthe, Edvard Fagerholm, Dario Fiore, John C. Mitchell, Andre Scedrov, and Benedikt Schmidt. Automated analysis of cryptographic assumptions in generic group models. In CRYPTO 2014, pages 95–112, 2014.

[BGW05] Dan Boneh, Craig Gentry, and Brent Waters. Collusion resistant broadcast encryption with short ciphertexts and private keys. In CRYPTO’05, pages 258–275, 2005.

[BLS04] Dan Boneh, Ben Lynn, and Hovav Shacham. Short signatures from the Weil pairing. Journal of Cryptology, 17(4):297–319, 2004.

[BN06] Paulo S. L. M. Barreto and Michael Naehrig. Pairing-friendly elliptic curves of prime order. In SAC, volume 3897, pages 319–331, 2006. http://cryptojedi.org/papers/#pfcpo.

[CL04] Jan Camenisch and Anna Lysyanskaya. Signature schemes and anonymous credentials from bilinear maps. In CRYPTO, volume 3152, pages 56–72, 2004.

[CLL+13] Jie Chen, Hoon Wei Lim, San Ling, Huaxiong Wang, and Hoeteck Wee. Shorter IBE and signatures via asymmetric pairings. In Pairing-Based Cryptography–Pairing 2012, pages 122–140. Springer, 2013.

[CLL+14] Jie Chen, Hoon Wei Lim, San Ling, Huaxiong Wang, and Hoeteck Wee. Shorter identity-based encryption via asymmetric pairings. Des. Codes Cryptography, 73(3):911–947, 2014.

[Con] ACSC Contributors. Advanced crypto software collection. http://hms.isi.jhu.edu/acsc/.

[DMB08] Leonardo De Moura and Nikolaj Bjørner. Z3: an efficient SMT solver. In Proceedings of the Theory and practice of Software, TACAS’08/ETAPS’08, pages 337–340, 2008.

[Gal01] Steven D. Galbraith. Supersingular curves in cryptography. In ASIACRYPT, pages 495–513, 2001.

[Gen06] Craig Gentry. Practical identity-based encryption without random oracles. In EUROCRYPT, pages 445–464, 2006.

[GPS06] Steven D. Galbraith, Kenneth G. Paterson, and Nigel P. Smart. Pairings for cryptographers, 2006. Cryptology ePrint Archive: Report 2006/165.

[Gt12] Torbjorn Granlund and the GMP development team. GNU MP: The GNU Multiple Precision Arithmetic Library, 5.0.5 edition, 2012. http://gmplib.org/.

[Kri15] Sathvik Krishnamurthy. HP to Acquire Voltage Security to Expand Data Encryption Security Solutions for Cloud and Big Data. http://www.voltage.com/blog/releases, February 9, 2015.

[PSV06] Dan Page, Nigel Smart, and Fre Vercauteren. A comparison of MNT curves and supersingular curves. Applicable Algebra in Eng,Com and Comp, 17(5):379–392, 2006.

[RCS12] Somindu C. Ramanna, Sanjit Chatterjee, and Palash Sarkar. Variants of Waters’ dual system primitives using asymmetric pairings - (extended abstract). In PKC ’12, pages 298–315, 2012.

[Tea] EasyCrypt Project Team. Easycrypt: Computer-aided cryptographic proofs. https://www.easycrypt.info/trac/.

[Wat05] Brent Waters. Efficient identity-based encryption without random oracles. In EUROCRYPT ’05, volume 3494 of LNCS, pages 320–329. Springer, 2005.

[Wat09] Brent Waters. Dual system encryption: Realizing fully secure IBE and HIBE under simple assumptions. In CRYPTO, pages 619–636, 2009.

### 附录A 当前Type-I和Type-III配对的效率数据

我们在表1中展示了Type-I和Type-III组在相同安全级别下的群表示和效率差异。Type-I的一个典型候选是超奇异椭圆曲线（SS）[Gal01, PSV06]，其嵌入度通常较小（即k ≤ 6）。例如，在128位安全级别下，一个超奇异曲线的群的素数阶较大，|p| = 1536位，嵌入度k = 2。相反，在同一安全级别下，Type-III的一个常见候选是Barreto-Naehrig（BN）[BN06] 曲线，其嵌入度较大（例如k = 12），素数阶可以小至|p| = 256位。如表1所示，Type-III环境下的群操作和配对时间可以显著更高效，并且表示更短。

我们还提到了Type-I和Type-III配对组的哈希。在Type-I环境中，可以将任意字符串哈希到G中，例如对于SS曲线，将任意字符串哈希到G平均需要36.8毫秒。在Type-III环境中（例如在普通椭圆曲线上），可以独立地将任意字符串哈希到G1和G2，成本不同，例如对于BN曲线，哈希到G1平均需要0.04毫秒，而哈希到G2平均需要0.37毫秒（大约9:1的比例）。更多细节请参见 [GPS06]。

### 附录B 第4节的SDL描述

我们现在提供AutoGroup+的输入和输出Scheme Description Language (SDL) 示例。

#### B.1 SDL 输入

首先展示我们对DBDH假设的SDL转录：

```plaintext
name := DBDH
setting := symmetric
BEGIN :: types
a := ZR
b := ZR
```

这样优化后的文本更加清晰、连贯和专业。