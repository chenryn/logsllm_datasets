### References

1. **New Definitions and Delegatable Anonymous Credentials.**
   - In *IEEE 27th Computer Security Foundations Symposium (CSF 2014)*, Vienna, Austria, 19-22 July 2014, pages 199–213.

2. **Practical Verified Computation with Streaming Interactive Proofs.**
   - G. Cormode, M. Mitzenmacher, and J. Thaler.
   - In *Innovations in Theoretical Computer Science 2012*, Cambridge, MA, USA, January 8-10, 2012, pages 90–112.

3. **On the Amortized Complexity of Zero-Knowledge Protocols.**
   - R. Cramer, I. Damgård, and M. Keller.
   - *J. Cryptology*, 27(2):284–316, 2014.

4. **Square Span Programs with Applications to Succinct NIZK Arguments.**
   - G. Danezis, C. Fournet, J. Groth, and M. Kohlweiss.
   - In *ASIACRYPT*, pages 532–550, 2014.

5. **Practical Accountability of Secret Processes.**
   - J. Frankle, S. Park, D. Shaar, S. Goldwasser, and D. J. Weitzner.
   - In *27th USENIX Security Symposium (USENIX Security 2018)*, Baltimore, MD, USA, August 15-17, 2018, pages 657–674.

6. **The Algebraic Group Model and Its Applications.**
   - G. Fuchsbauer, E. Kiltz, and J. Loss.
   - In *Advances in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology Conference*, Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part II, pages 33–62.

7. **Pairings for Cryptographers.**
   - S. D. Galbraith, K. G. Paterson, and N. P. Smart.
   - *Discrete Applied Mathematics*, 156(16):3113–3121, 2008.

8. **Decentralized Anonymous Credentials.**
   - C. Garman, M. Green, and I. Miers.
   - In *21st Annual Network and Distributed System Security Symposium (NDSS 2014)*, San Diego, California, USA, February 23-26, 2014.

9. **Quadratic Span Programs and Succinct NIZKs without PCPs.**
   - R. Gennaro, C. Gentry, B. Parno, and M. Raykova.
   - In *EUROCRYPT*, pages 626–645, 2013.

10. **Separating Succinct Non-Interactive Arguments from All Falsifiable Assumptions.**
    - C. Gentry and D. Wichs.
    - In *Proceedings of the Forty-third Annual ACM Symposium on Theory of Computing (STOC '11)*, New York, NY, USA, 2011, pages 99–108. ACM.

11. **ZKBoo: Faster Zero-Knowledge for Boolean Circuits.**
    - I. Giacomelli, J. Madsen, and C. Orlandi.
    - In *25th USENIX Security Symposium (USENIX Security 2016)*, Austin, TX, USA, August 10-12, 2016, pages 1069–1083.

12. **Delegating Computation: Interactive Proofs for Muggles.**
    - S. Goldwasser, Y. T. Kalai, and G. N. Rothblum.
    - In *Proceedings of the 40th Annual ACM Symposium on Theory of Computing (STOC 2008)*, Victoria, British Columbia, Canada, May 17-20, 2008, pages 113–122.

13. **Bolt: Anonymous Payment Channels for Decentralized Currencies.**
    - M. Green and I. Miers.
    - In *Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security (CCS 2017)*, Dallas, TX, USA, October 30 - November 03, 2017, pages 473–489.

14. **On the Size of Pairing-Based Non-Interactive Arguments.**
    - J. Groth.
    - In *EUROCRYPT*, pages 305–326, 2016.

15. **Updatable and Universal Common Reference Strings with Applications to ZK-SNARKs.**
    - J. Groth, M. Kohlweiss, M. Maller, S. Meiklejohn, and I. Miers.
    - In *Advances in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology Conference*, Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part III, pages 698–728.

16. **SNARKy Signatures: Minimal Signatures of Knowledge from Simulation-Extractable SNARKs.**
    - J. Groth and M. Maller.
    - In *CRYPTO*, pages 581–612, 2017.

17. **Cryptography with Constant Computational Overhead.**
    - Y. Ishai, E. Kushilevitz, R. Ostrovsky, and A. Sahai.
    - In *Proceedings of the 40th Annual ACM Symposium on Theory of Computing (STOC 2008)*, Victoria, British Columbia, Canada, May 17-20, 2008, pages 433–442.

18. **Zero-Knowledge Proofs from Secure Multiparty Computation.**
    - Y. Ishai, E. Kushilevitz, R. Ostrovsky, and A. Sahai.
    - *SIAM J. Comput.*, 39(3):1121–1152, 2009.

19. **Constant-Size Commitments to Polynomials and Their Applications.**
    - A. Kate, G. M. Zaverucha, and I. Goldberg.
    - In *Advances in Cryptology - ASIACRYPT 2010 - 16th International Conference on the Theory and Application of Cryptology and Information Security*, Singapore, December 5-9, 2010, Proceedings, pages 177–194. Springer, 2010.

20. **Extended Tower Number Field Sieve: A New Complexity for the Medium Prime Case.**
    - T. Kim and R. Barbulescu.
    - In *Advances in Cryptology - CRYPTO 2016 - 36th Annual International Cryptology Conference*, Santa Barbara, CA, USA, August 14-18, 2016, Proceedings, Part I, pages 543–571.

21. **Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts.**
    - A. E. Kosba, A. Miller, E. Shi, Z. Wen, and C. Papamanthou.
    - In *IEEE Symposium on Security and Privacy (SP 2016)*, San Jose, CA, USA, May 22-26, 2016, pages 839–858.

22. **Parallel Coin-Tossing and Constant-Round Secure Two-Party Computation.**
    - Y. Lindell.
    - *J. Cryptology*, 16(3):143–184, 2003.

23. **Succinct Non-Interactive Zero Knowledge Arguments from Span Programs and Linear Error-Correcting Codes.**
    - H. Lipmaa.
    - In *Advances in Cryptology - ASIACRYPT 2013 - 19th International Conference on the Theory and Application of Cryptology and Information Security*, Bengaluru, India, December 1-5, 2013, Proceedings, Part I, pages 41–60.

24. **Valiant’s Universal Circuit: Improvements, Implementation, and Applications.**
    - H. Lipmaa, P. Mohassel, and S. S. Sadeghian.
    - *IACR Cryptology ePrint Archive*, 2016:17, 2016.

25. **Sonic: Zero-Knowledge SNARKs from Linear-Size Universal and Updatable Structured Reference Strings.**
    - M. Maller, S. Bowe, M. Kohlweiss, and S. Meiklejohn.
    - [https://eprint.iacr.org/2019/099](https://eprint.iacr.org/2019/099).

26. **Coda: Decentralized Cryptocurrency at Scale.**
    - I. Meckler and E. Shapiro.
    - 2018.

27. **Signatures of Correct Computation.**
    - C. Papamanthou, E. Shi, and R. Tamassia.
    - In *Theory of Cryptography - 10th Theory of Cryptography Conference (TCC 2013)*, Tokyo, Japan, March 3-6, 2013, Proceedings, pages 222–242.

28. **Pinocchio: Nearly Practical Verifiable Computation.**
    - B. Parno, J. Howell, C. Gentry, and M. Raykova.
    - In *Proceedings of the IEEE Symposium on Security & Privacy*, 2013.

29. **Universal Circuits (Preliminary Report).**
    - L. G. Valiant.
    - In *Proceedings of the 8th Annual ACM Symposium on Theory of Computing*, pages 196–203, 1976.

30. **Doubly-Efficient ZKSNARKs Without Trusted Setup.**
    - R. S. Wahby, I. Tzialla, A. Shelat, J. Thaler, and M. Walfish.
    - In *2018 IEEE Symposium on Security and Privacy (SP 2018)*, Proceedings, 21-23 May 2018, San Francisco, California, USA, pages 926–943.

31. **The Design of the Ceremony.**
    - Z. Wilcox.
    - [https://z.cash/blog/the-design-of-the-ceremony.html](https://z.cash/blog/the-design-of-the-ceremony.html), Oct. 2016.

32. **ZKProof Workshop, 2018.**
    - [https://zkproof.org/proceedings-snapshots/zkproof-implementation-20180801.pdf](https://zkproof.org/proceedings-snapshots/zkproof-implementation-20180801.pdf).

33. **DIZK: A Distributed Zero-Knowledge Proof System.**
    - H. Wu, W. Zheng, A. Chiesa, R. A. Popa, and I. Stoica.
    - In *27th USENIX Security Symposium (USENIX Security 2018)*, Baltimore, MD, USA, August 15-17, 2018, pages 675–692.

34. **A Zero-Knowledge Version of VSQL.**
    - Y. Zhang, D. Genkin, J. Katz, D. Papadopoulos, and C. Papamanthou.
    - *IACR Cryptology ePrint Archive*, 2017:1146, 2017.

### Polynomial Permutation Argument

**Objective:**
The prover aims to demonstrate the correct evaluation of a polynomial permutation. Given \( y, z \in F \), consider the polynomials:
\[ \Psi(X, Y) = \sum_{i=1}^{n} \psi_{\sigma(i)} X^i Y^{\sigma(i)} \]
\[ \Phi(X, Y) = \sum_{i=1}^{n} \psi_i X^i Y^i \]

**Observation:**
The permutation of this polynomial is such that:
\[ \Phi(X, Y) = \Phi(XY, 1) \]

**Argument:**
We can use arguments about the correct calculation of \(\Phi\) together with a permutation argument to obtain arguments about the correct calculation of \(\Psi\).

**Permutation Argument:**
Our permutation argument, given in Figure 9, is similar to that of Bootle et al. [23]. If the prover commits to \( f(X) = \sum_{i=1}^{n} a_i X^i \), then for random challenges \(\beta, \gamma \in \mathbb{F}_p\):
\[ \sum_{i=1}^{n} (a_i + \sigma(i) \beta + \gamma) = \sum_{i=1}^{n} (\psi_i y_i + i \beta + \gamma) \]

This holds with non-negligible probability if and only if for all \(i\), \(a_i = \psi_{\sigma(i)} y_{\sigma(i)}\). Notice that if \(a_i = \psi_{\sigma(i)} y_{\sigma(i)}\), then \(a + \beta \sigma\) contains a permutation of the entries in \((\psi_1 y_1 + \beta, \ldots, \psi_n y_n + n \beta)\). However, if \(a\) is not a permutation, then with overwhelming probability over \(\beta\), there will be entries that do not appear anywhere in \(a + \beta \sigma\).

**Verification:**
The prover will now convince the verifier that the equation holds. By the Schwartz-Zippel lemma, this is unlikely to hold over the random choice of \(\gamma\) unless \(a + \beta \sigma\) indeed contains the correct permutation.

**Derive Algorithm:**
The Derive algorithm to generate the specialized reference strings for the permutations is given in Figure 8.

**Commitment and Verification:**
- The prover calculates \(S'\), a commitment to \(\Phi(X, y)\).
- The verifier checks that the commitment to \(\Phi\) is computed correctly.
- The srsΨ contains \(P_2\), a commitment to \(\Psi(X, 1)\).
- The prover opens \(S'\) at \(u\) and \(P_2\) at \(uy\).
- If the openings are equal and verify, then with overwhelming probability, the commitment is correct.

- The prover calculates \(S\), a commitment to \(\Psi(X, y)\).
- To check that the coefficients of \(S\) are the permutation of the coefficients of \(\Psi(X, y)\), the verifier chooses random challenges \(\beta, \gamma \in \mathbb{F}_p\) and asks the prover to demonstrate that the product of the coefficients of \(S P_1^\gamma\) is equal to the product of the coefficients of \(S' P_3^\beta P_4^\gamma\).

- The prover then opens \(S\) at \(z\) to \(\psi\), which the verifier checks. If all checks hold, we have that \(\psi = \Psi(z, y)\).

**Lemma A.1:**
The permutation argument in Figure 9 is sound when instantiated using a secure polynomial commitment scheme and a sound grand-product argument.

**Proof:**
- The bounded extractability of the polynomial commitment scheme gives us that there exist algebraic extractors that output degree \(d\) Laurent polynomials \(s(X)\), \(s'(X)\), \(p_2(X)\) such that if \(p_2(uy) \neq \sum_{i=1}^{n} \psi_i u^i y_i\), the adversary can find a second opening for \(P_2\) and in doing so break the evaluation binding of the commitment scheme.
- The probability that \(s'(u) = v\) but \(s'(u) \neq p_2(Xy)\) is negligible by the Schwartz-Zippel lemma.
- The soundness of the grand-product argument gives us that:
  \[ \sum_{i=1}^{n} (s_i + \sigma(i) \beta + \gamma) = \sum_{i=1}^{n} (s_i + \sigma(i) \beta + \gamma) = \sum_{i=1}^{n} (s'_i + i \beta + \gamma) \]
- Again by the Schwartz-Zippel lemma, this implies that \(s_i = \psi_i\) with all but negligible probability.
- □

### Grand Product Argument

For our signature of correct computation in Section 7, we require a grand product argument. Specifically, we need the prover to demonstrate that the product of the coefficients of two commitments \(U\) and \(V\) are equal, where \(U\) and \(V\) are fully well-formed commitments to degree-\(n\) polynomials:

\[ U = \alpha \prod_{i=1}^{n} (a_i x^i) \]
\[ V = \alpha \prod_{i=1}^{n} (a_i x^{i+n+1}) \]

We further assume that the polynomials do not have a constant term. We can interpret \(UV x^{n+1}\) as a commitment to:

\[ f(X) = \sum_{i=1}^{2n+2} a_i X^i \]

We show that this constraint system is satisfied using our Sonic argument described in Section 6. However, because all but two constraints are linear, we can represent these requirements with the following constraint system:

1. \( a \cdot b = c \)
2. \( b = (1, c_1, \ldots, c_{2n+1}) \)
3. \( c_{n+1} = 1 \)
4. \( c_{2n+1} = c_n \)

**Figure 9: The Permutation Argument**

**Common Input:**
- info = srsΨ, y, z
- \( P_1 = \text{Commit}(bp, srs, d, \sum_{i=1}^{n} X^i) \)
- \( P_3 = \text{Commit}(bp, srs, d, \sum_{i=1}^{n} i X^i) \)
- \( P_2 = \text{Commit}(bp, srs, d, \sum_{i=1}^{n} \psi_i X^i) \)
- \( P_4 = \text{Commit}(bp, srs, d, \sum_{i=1}^{n} \sigma_i X^i) \)

**Prover's Steps:**
- For \(1 \leq j \leq M\):
  - \( S \leftarrow \text{Commit}(bp, srs, d, \Psi(X, y)) \)
  - \( S' \leftarrow \text{Commit}(bp, srs, d, \Phi(X, y)) \)
  - \(\gamma \leftarrow \mathbb{F}_p\)
  - Send \(S, S'\)

**Verifier's Steps:**
- Send \(u, \beta, \gamma\)

**Prover's Steps:**
- \(\bar{S} \leftarrow S P_1^\gamma P_4^\beta\)
- \(\bar{P} \leftarrow S' P_3^\beta P_4^\gamma\)
- \((\psi, W) \leftarrow \text{Open}(bp, srs, S, z, \Psi(X, y))\)
- \((v, W') \leftarrow \text{Open}(bp, srs, S', u, \Phi(X, y))\)
- \((v, Q') \leftarrow \text{Open}(bp, srs, P_2, uy, \sum_{i=1}^{n} \psi_i X^i)\)
- \(\bar{s}(X) \leftarrow \sum_{i=1}^{n} \psi_{\sigma(i)} y_{\sigma(i)} X^i + \beta \sigma(i) X^i + \gamma X^i\)
- \(\bar{p}(X) \leftarrow \sum_{i=1}^{n} \psi_i y_i X^i + \beta i X^i + \gamma X^i\)
- \(gprod \leftarrow \text{gprodP}(\bar{S}, \bar{P}, \bar{s}(X), \bar{p}(X))\)
- Send \((\psi, W, v, W', Q', \pi)\)

**Verification:**
- Check \( \text{pcV}(bp, srs, S, d, z, (s, W)) \)
- Check \( \text{pcV}(bp, srs, S', d, u, (v, W')) \)
- Check \( \text{pcV}(bp, srs, P_2, d, uy, (v, Q')) \)
- Check \( \text{gprodV}(\bar{S}, \bar{P}, gprod) \)
- Return 1 if all checks pass, else return 0