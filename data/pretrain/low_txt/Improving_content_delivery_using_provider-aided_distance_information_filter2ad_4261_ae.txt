### Active Measurements and Network Effects

Our active measurements highlight typical network effects. For instance, when downloading small objects, TCP is often in the slow start phase. Consequently, the round-trip time to the cache becomes the primary factor influencing retrieval time.

For medium-sized objects, both bandwidth and delay are significant. In the case of large objects, performance is primarily constrained by the available network bandwidth, including the download bandwidth of the last hop to the client (25 Mbit/s in this experiment). For CDN1, the improvement in download time for large objects is less pronounced compared to small and medium-sized objects, especially during off-peak hours, as the achieved download speeds are close to the nominal speed of the vantage points.

### DNS Load Balancing with PaDIS

Since CDN1 also offers a pure DNS load balancing service, we examined whether PaDIS could be beneficial in such a scenario. We repeated the experiment of fetching content from the CDN1-recommended server and from all associated caches. As previously discussed, the content is served by all CDN1 caches, and CDN1 consistently returns the original server rather than any of its own caches.

In Figure 13, we plot the download times for objects retrieved using the DNS load balancing service, following recommendations from both CDN1 and PaDIS. Boxplots summarize the download times for the 124 caches. The performance gain is substantial but should be interpreted with caution, as the recommended server is the original one, and no CDN optimization occurs for this content. Nevertheless, we were able to use the CDN infrastructure to improve download times for content not distributed by the CDN. The experiment duration was limited to avoid potential violations of the agreement between CDN1 and the site operator.

### ISP Benefits

Regarding the benefits for ISPs, PaDIS localizes content within the ISP, reducing the average path length within the AS from 3.8 to 3 when downloading content from CDN1. Despite the limited diversity of choices in CDN2, the internal path length remained unchanged even when PaDIS reduced download times.

### One-Click Hosters (OCH)

One-Click Hosters (OCHs) allow users to share files via a server-based infrastructure, typically located in well-provisioned data centers. Studies have shown that OCHs can achieve better download times than P2P systems like BitTorrent [7]. Using our residential ISP data sets, we identified the most popular OCH, referred to as OCH1, which accounts for approximately 15% of all HTTP traffic. OCH1 is located in a multi-homed data center in central Europe and limits the maximum file size to 200 MByte to scale the number of parallel flows.

Using traces, uploading a 60 Mbyte test file, and studying the domain name scheme of the servers, we deduced that OCH1 has twelve uplinks to four different providers, including the ISP we collaborated with. To understand OCH1's uplink selection, we repeatedly requested a server to download the file over a one-week period starting on April 7, 2010. The results, shown in Figure 14 (top), indicate that about 60% of the requests are directed to a server that can serve the content via direct peering with the client’s ISP. The remaining ten uplinks are chosen with equal probability, while one is chosen with a lower probability. Notably, there are no time-of-day or time-of-week effects, despite the HTTP volume of OCH1 in our traces exhibiting time-of-day effects. This suggests that link utilization can be improved by using PaDIS' recommendations for client-server assignment.

From the OCH1 responses, we derived a list of available servers per uplink and provider. We validated that it is feasible to download the file from any server, thus accessing the content via any provider. To quantify the potential benefit in download time for end-users, we repeatedly downloaded the test file from one server per uplink every two hours for a week. Figure 14 (bottom) shows the resulting download times. The best download times were achieved via the direct peering link, which directly connects the ISP to the OCH. During off-peak periods, the download speed was close to the nominal speed of the client and did not vary across different ISPs. During peak hours, the download time improvements could be up to a factor of four. This, combined with the static uplink assignment, indicates significant potential for PaDIS to enhance end-user experience and facilitate collaboration between ISPs and OCHs.

### Video Streaming Providers

Video streaming via HTTP is popular and accounts for more than 20% of HTTP traffic. The leading video streaming provider in our trace, VSP1, is responsible for approximately 13% of overall HTTP traffic. By examining our traces and performing active measurements, we found that VSP1 does not use DNS-based load balancing but instead uses application-layer redirection (HTTP 3xx return codes [16]). VSP1 also employs a naming scheme that implies a caching hierarchy, organizing caches into groups. While all servers respond to valid requests, the response may redirect to an upper or lower caching layer based on content availability.

VSP1 throttles the download speed after an initial burst, limiting the bitrate to roughly the video-bitrate. This behavior results in minimal performance differences among caches as long as they can maintain the video's bitrate. In this case, PaDIS cannot significantly improve the perceived performance of the end-user.

Despite the many unique cache IP addresses in our active measurements, they all belong to prefixes within the VSP1 AS, indicating limited path diversity. However, this setting still holds potential for PaDIS. On one hand, a single path towards VSP1 is less critical than the number of paths from VSP1 to the ISP, as the bulk of the transferred volume flows from VSP1 to the ISP. If the number of ingress paths exceeds the number of egress paths, PaDIS can recommend caches to inject content from the most appropriate ingress point in the ISP. On the other hand, in a collaborative scheme, VSP1 can use PaDIS to redirect clients to its caches, considering network performance characteristics and replicating content more efficiently.

### Summary

PaDIS has the potential to substantially improve the end-user experience within an ISP by leveraging existing server and path diversity. Our active measurements in a large European ISP demonstrate that PaDIS can significantly enhance content delivery for dominant platforms, including major CDNs and the top OCH, which account for roughly 35% of overall HTTP traffic.

### Related Work

Content Delivery Networks (CDNs) provide fast and scalable commercial-grade web applications [23] and rely on large-scale commodity infrastructure to improve performance. Krishnamurthy et al. [20] and Huang et al. [17] characterized their performance, quantifying end-user performance, analyzing DNS redirection overhead, and assessing availability.

Su et al. [34] proposed using CDN redirection to locate high-performance paths. Choffnes et al. [11] suggested using information from CDNs to bias neighbor selection in P2P systems without path monitoring or probing.

Triukose et al. [35] showed that popular CDNs serve any object from any cache, making it feasible to use the CDN infrastructure to amplify attacks against customer websites. Our work builds on this by incorporating ISP information for cache site selection, improving end-user performance and enabling ISP traffic engineering.

Our work also builds on previous research [4, 3] on biasing peer selection in P2P systems and the importance of server selection for enhancing the end-user experience [9]. To our knowledge, this is the first work proposing and deploying a system for ISP and application collaboration, recognizing that content is usually accessible from multiple locations. Previous game-theoretic studies [18, 14] have explored cooperation between ISPs and CDNs but have not proposed a system to enable it.

### Conclusion

Our study, based on traces from over 20,000 residential users and active DNS measurements, demonstrates significant server location and path diversity for accessing HTTP-based content. Most content delivery architectures rely on distributed infrastructures. We propose and deploy PaDIS, a novel system allowing ISPs to discover and utilize path diversity. Extensive active measurements from vantage points within a residential network show that PaDIS can significantly improve download times by up to a factor of four for content from major providers, including CDNs and OCHs, for ISP users. Our results also highlight the benefits for ISPs, as PaDIS can help regain control of their traffic, perform traffic engineering, and drive up utilization for monetary gain at the application layer.

### Acknowledgments

This work was supported in part by a grant from Deutsche Telekom Laboratories and the BMBF project G-Lab. We thank our shepherd, Robert Beverly, and the anonymous reviewers for their constructive comments.

### References

[1] Hrishikesh B. Acharya and Mohamed G. Gouda. The Theory of Network Tracing. In Proc. of ACM PODC ’09.
[2] Bernhard Ager, Fabian Schneider, Juhoon Kim, and Anja Feldmann. Revisiting cacheability in times of user-generated content. In Proc. of IEEE Global Internet Symp. ’10.
[3] Vinay Aggarwal, Obi Akonjang, and Anja Feldmann. Improving User and ISP Experience through ISP-aided P2P Locality. In Proc. of IEEE Global Internet Symp. ’08.
[4] Vinay Aggarwal, Anja Feldmann, and Christian Scheideler. Can ISPs and P2P Users Cooperate for Improved Performance? SIGCOMM Comput. Commun. Rev., 37(3), 2007.
[5] B. Agger, W. Mühlbauer, G. Smaragdakis, and S. Uhlig. Comparing DNS Resolvers in the Wild. In Proc. of ACM IMC ’10.
[6] Hussein A. Alzoubi, Michael Rabinovich, and Oliver Spatscheck. MyXDNS: A Request Routing DNS Server with Decoupled Server Selection. In Proc. of WWW ’07.
[7] Demetres Antoniades, Evangelos P. Markatos, and Constantine Dovrolis. One-click Hosting Services: a File-sharing Hideout. In Proc. of ACM IMC ’09.
[8] Ruchir Bindal, Pei Cao, William Chan, Jan Medved, George Suwala, Tony Bates, and Amy Zhang. Improving Traffic Locality in BitTorrent via Biased Neighbor Selection. In Proc. of IEEE ICDCS ’06.
[9] Robert L. Carter and Mark E. Crovella. On the Network Impact of Dynamic Server Selection. Computer Networks, 31((23-24)):2529–2558, 1999.
[10] Meeyoung Cha, Haewoon Kwak, Pablo Rodriguez, Yong-Yeol Ahn, and Sue Moon. Analyzing the Video Popularity Characteristics of Large-scale User Generated Content Systems. IEEE/ACM Trans. Networking, 17(5):1357–1370, 2009.
[11] David R. Choffnes and Fabián E. Bustamante. Taming the Torrent: a Practical Approach to Reducing Cross-ISP Traffic in Peer-to-peer Systems. In Proc. of ACM SIGCOMM ’08.
[12] C. Contavalli, W. van der Gaast, S. Leach, and D. Rodden. Client IP Information in DNS Requests. IETF draft, work in progress, draft-vandergaast-edns-client-ip-00.txt, Jan 2010.
[13] Graham Cormode and Marios Hadjieleftheriou. Methods for Finding Frequent Items in Data Streams. The VLDB J., 19(1):3–20, 2010.
[14] Dominic DiPalantino and Ramesh Johari. Traffic Engineering versus Content Distribution: A Game-theoretic Perspective. In Proc. of IEEE INFOCOM ’09.
[15] Holger Dreger, Anja Feldmann, Michael Mai, Vern Paxson, and Robin Sommer. Dynamic Application-Layer Protocol Analysis for Network Intrusion Detection. In Proc. of USENIX Security Symp. ’06.
[16] Roy Fielding, Jim Gettys, Jeffrey Mogul, Henrik Frystyk, Larry Masinter, Paul Leach, and Tim Berners-Lee. Hypertext Transfer Protocol – HTTP/1.1. RFC 2616, Jun 1999.
[17] Cheng Huang, Angela Wang, Jin Li, and Keith W. Ross. Measuring and Evaluating Large-scale CDNs. In Proc. of ACM SIGCOMM IMC ’08, paper withdrawn.
[18] Wenjie Jiang, Rui Zhang-Shen, Jennifer Rexford, and Mung Chiang. Cooperative Content Distribution and Traffic Engineering in an ISP Network. In Proc. of ACM SIGMETRICS ’09.
[19] Thomas Karagiannis, Pablo Rodriguez, and Konstantina Papagiannaki. Should ISPs fear Peer-Assisted Content Distribution? In Proc. of ACM IMC ’05.
[20] Balachander Krishnamurthy, Craig Wills, and Yin Zhang. On the Use and Performance of Content Distribution Networks. In Proc. of ACM SIGCOMM IMW ’01.
[21] Rupa Krishnan, Harsha V. Madhyastha, Sridhar Srinivasan, Sushant Jain, Arvind Krishnamurthy, Thomas Anderson, and Jie Gao. Moving Beyond End-to-end Path Information to Optimize CDN Performance. In Proc. of ACM SIGCOMM IMC ’09.
[22] Craig Labovitz, Scott lekel Johnson, Danny McPherson, Jon Oberheide, and Farnam Jahanian. Internet Inter-Domain Traffic. In Proc. of ACM SIGCOMM ’10.
[23] Tom Leighton. Improving Performance on the Internet. Commun. ACM, 52(2):44–51, 2009.
[24] Gregor Maier, Anja Feldmann, Vern Paxson, and Mark Allman. On Dominant Characteristics of Residential Broadband Internet Traffic. In Proc. of ACM SIGCOMM IMC ’09.
[25] P. Mockapetris. Domain Names - Implementation and Specification. RFC 1035, Nov 1987.
[26] Jianping Pan, Y. Thomas Hou, and Bo Li. An Overview of DNS-based Server Selections in Content Distribution Networks. Comput. Netw., 43(6):695–711, 2003.
[27] Vern Paxson. Bro: A System for Detecting Network Intruders in Real-Time. Computer Networks, 31(23–24), 1999.
[28] Sylvia Ratnasamy, Mark Handley, Richard Karp, and Scott Shenker. Topologically Aware Overlay Construction and Server Selection. In Proc. of IEEE INFOCOM ’02.
[29] Sandvine Inc. 2009 global broadband phenomena. http://www.sandvine.com/news/global_broadband_trends.asp.
[30] Fabian Schneider. Analysis of New Trends in the Web from a Network Perspective. PhD thesis, Technische Universität Berlin, Mar 2010.
[31] Hendrik Schulze and Klaus Mochalski. Internet study 2008-9. http://www.ipoque.com/resources/internet-studies.
[32] Jan Seedorf and Eric W. Burger. Application-Layer Traffic Optimization (ALTO) Problem Statement. RFC 5693, Oct 2009.
[33] S. S. Siwpersad, Bamba Gueye, and Steve Uhlig. Assessing the Geographic Resolution of Exhaustive Tabulation for Geolocating Internet Hosts. In Proc. of PAM ’08.
[34] Ao-Jan Su, David R. Choffnes, Aleksandar Kuzmanovic, and Fabián E. Bustamante. Drafting behind Akamai: Inferring Network Conditions based on CDN Redirections. IEEE/ACM Trans. Netw., 17(6):1752–1765, 2009.
[35] Sipat Triukose, Zakaria Al-Qudah, and Michael Rabinovich. Content Delivery Networks: Protection or Threat? In Proc. of ESORICS ’09.
[36] Haiyong Xie, Y. Richard Yang, Arvind Krishnamurthy, Yanbin Grace Liu, and Abraham Silberschatz. P4P: Provider Portal for applications. In Proc. of ACM SIGCOMM ’08.