### 4. Analysis of Patch Release Behavior

#### 4.1 Dataset Overview
Figure 4 summarizes our dataset, which includes 283 CVE entries spanning from 2006 to 2017, involving 450 products, 551 patches, and 68 published exploits. Compared to Figure 2, we excluded 15 entries unrelated to consumer IoT devices and 10 entries where at least one required field was missing.

To better understand the severity of the included vulnerabilities, columns 4 to 6 in Figure 4 provide a breakdown using the Common Vulnerability Scoring System (CVSS) v2. The majority of vulnerabilities in both the Japanese (JP) and U.S. (US) datasets are of medium severity (62% and 47%, respectively). Additionally, both datasets contain a significant percentage of high-severity vulnerabilities (26% and 47%, respectively).

#### 4.2 Characterizations of Patch Releases
In this section, we analyze the patch releases and characterize vendor behaviors in our dataset, with a focus on contrasting the JP and US datasets. In §4.3, we will provide explanations for some of these differences.

##### 4.2.1 Patch Availability Delay
Figure 6 illustrates the patch availability delay (tp − td) for each vendor as a box-plot. Vendors can be classified based on their patch release timing relative to public disclosure dates: (i) around: IO-DATA and D-Link; (ii) before: Buffalo, NEC (Aterm), and Linksys; and (iii) after: Netgear. Notably, the median delay for Netgear in our dataset is 23 days, with the maximum delay exceeding 3 years.

##### 4.2.2 Minimum Exploit Window
Closely related is the minimum exploit window (tp − te) for the included vulnerabilities. We found 7 exploits that were released before their corresponding patches. All 7 are in the US dataset, possibly due to regional bias in the international exploit databases used (Exploit Database (EDB) [23] and Metasploit [25]). There is no known Japan-focused exploit database.

##### 4.2.3 Incremental Patch Release
Our dataset shows that all six vendors practiced incremental patch release, which involves releasing a series of patches for the same vulnerability but for different devices over time. This reflects the common practice of sharing software components and thus vulnerabilities across multiple consumer IoT devices. In our dataset, 62.4% of the patches were released incrementally, associated with 40 CVE IDs.

During incremental patch releases, attackers may race to discover the vulnerability in similar devices and exploit it before the vendor releases patches for those other devices. To characterize this risk, we measured the time between the first and last patch releases (tpL − tpF) for each CVE ID involved in an incremental patch release. Our measurement showed an average of 122.5 days, with a median of 36 days and a maximum of 1,399 days. This is visualized in Figure 7, which reveals two cases where an exploit was released during an incremental patch release.

##### 4.2.4 Patch Release Timeliness Over Time
Following [27], we measured the timeliness of patch releases, breaking down the data by CVSS severity (Low, Medium, High) over the covered period to detect any temporal trends. We categorized the patch release timing into: (i) before: tp < td; (ii) around: tp ≈ td; and (iii) after: tp > td. Figure 5a shows the trend in our dataset, indicating that patches released after disclosure (darkest) account for a large portion across all three categories, with no sign of reduction over time. When broken down by market, Figures 5b and 5c show that the post-disclosure timings are largely due to the US dataset, prompting further investigation in §4.3.

##### 4.2.5 Overall Patch Release Timing
Simplifying Figure 5, Figure 9 shows the number of included patches based on their timeliness, followed by breakdowns for JP and US. Over half of the included patches were released pre-disclosure, and about one-third were released post-disclosure. There is a stark contrast, with the overwhelming majority of the included patches in the JP dataset being released pre-disclosure.

##### 4.2.6 Fix Prioritization
We also investigated whether high-severity vulnerabilities were patched more quickly, as addressed in [17] for open-source software. Our dataset shows no discernible prioritization, as demonstrated in Figure 8a, which shows the cumulative distribution functions (CDFs) of the patch availability delay (tp − td) for each severity category. Specifically, the CDF for high-severity vulnerabilities remains around 0.9 well into 1 year post-disclosure, while the CDFs for the other two categories have already reached 1.0 at that time. An extreme example is Netgear, which released the patch for CVE-2013-4775 (CVSS 7.8) 1,247 days post-disclosure.

#### 4.3 Contrasting Between JP and US
In §4.2, we observed that the overwhelming majority of patches in our JP dataset were released either concurrently or before public disclosures, whether in relative proportion (Figure 5) or in absolute number (Figure 9). We hypothesized that the finders in our JP dataset tended to perform coordinated disclosures. To test this hypothesis, we classified every disclosure in our dataset as Coordinated Disclosures, Full Disclosures, or Unknown. (Our procedure is documented in [20].)

Figure 10 confirms our hypothesis, showing that over 97% of the vulnerabilities in our JP dataset were disclosed via Coordinated Disclosures. In contrast, only 55.8% of the vulnerabilities in our US dataset were disclosed via Coordinated Disclosures, with 37.5% disclosed via Full Disclosures.

To explain this, we observed a characteristic of the finders in our JP dataset. While the US dataset shows a diverse set of finders, 30 of the 53 CVE entries in our JP dataset were found by individuals affiliated with a local security company, "Mitsui Bussan Secure Directions, Inc." Their declarations suggest they operated as white-hat hackers, likely explaining why they performed coordinated disclosures.

### 5. Significant 1-Day Risks Uncovered
Our data collection effort has revealed three alarming vendor practices that may pose significant risks of 1-day exploits. Here, we describe these practices and provide highlights of our findings. A full data analysis can be found in [20].

##### 5.1 Incremental Patch Release
The risk behind this practice was discussed in §4.2.3. While potentially dangerous, it is debatable whether this risk is avoidable due to the inherent conflict between releasing patches as early as possible and delaying patches until all vulnerable products are ready.

##### 5.2 Unsynchronized Patch Release
When researching the included vulnerabilities, we noticed that regional subsidiaries of some vendors often release patches for the same vulnerability on different dates. Since the knowledge of generating exploits from patches is widespread and may even be automated (e.g., [4]), this practice likely represents a significant 1-day risk for customers in regions that receive their patches late. We term this risk "geographical arbitrage"—the potential to generate 1-day exploits by using a patch that was already released in another region.

To characterize this risk, we extended our dataset to include the following subsidiaries: Buffalo US, D-Link DE, D-Link AU, and Netgear CN. Among the patches shared with the US subsidiaries, we found that Buffalo JP leads Buffalo US in 50% of the patches, D-Link US is behind D-Link DE in 58.3% of the patches but leads D-Link AU in 59.7% of the patches, and Netgear CN leads Netgear US in 59.6% of the patches. This shows that the patch releases by these subsidiaries are often unsynchronized.

Table 1 provides statistics on the patch release gaps among the shared patches. Alarmingly, for both D-Link and Netgear, we identified a shared patch where the corresponding US subsidiary is over 200 days behind. Table 2 presents a more detailed investigation, showing 15 CVE entries and the affected products where an included US subsidiary is at least 30 days behind. Finally, we identified 5 exploits that were released amid a patch release gap. Although we have no evidence that these exploits resulted from geographical arbitrage, their timing indisputably demonstrates the real threat posed by this practice.

##### 5.3 Implicit End-of-Support (EoS)
During our research, we observed that many regional subsidiaries appear to stop releasing patches for products that are still supported in at least one other region without posting an EoS announcement. This involves 15 patches, shown in Table 3. Among the subsidiaries included in this paper, we were unable to discover EoS information from Buffalo US, D-Link AU, Netgear US, and Netgear CN. Unfortunately, this practice of implicit EoS also poses a serious risk to end users, similar to unsynchronized patch releases.

### 6. Related Work
Many previous studies have leveraged information on vulnerabilities and patches to study various aspects of the vulnerability lifecycle and its management. Here, we discuss a few lines of related work, grouped by the target of the studies.

##### 6.1 Vendor Patch Release Behavior
The most relevant line of work aims to study vendor patch release behavior. In their landmark study, Frei et al. [8] performed a large-scale study using over 80,000 security advisories published between 1995 and 2006 to analyze the temporal relations among vulnerability discoveries, disclosures, and patch releases. A follow-up study in 2008 [9] focused on contrasting Apple and Microsoft. In 2010, Arora et al. [2] published a large-scale study leveraging 420 vulnerabilities sampled from 2000-09 to 2003-08. In 2012, Shahzad et al. [27] published another large-scale study using 46,310 vulnerabilities disclosed between 1988 and 2011, focusing on 7 major software vendors and 11 of their products. Our study, focused on consumer IoT vendors, covers more recent vulnerabilities. A notable finding is that we do not observe any improvement in patch availability delay over the covered period, whereas [27, Fig. 9] shows a marked improvement starting around 2006.

##### 6.2 Characterizing Patches and Vulnerabilities
Another line of related work focuses on characterizing patches and vulnerabilities. Bilge and Tudor [3] identified 18 zero-day vulnerabilities, of which 11 were not previously known to have been used in zero-day attacks. Nappa et al. [21] characterized patch deployments of 10 popular client software packages and their vulnerabilities due to shared code. Several previous works relied on public data only, including [11, 24, 30], which focused on individual open-source projects. Most recently, Li and Paxson [17] published a large-scale study on 682 open-source projects, characterizing over 4,000 bug fixes for over 3,000 vulnerabilities. Similar to our study, their study revealed a significant information leak, where patches to many vulnerabilities in open-source projects were publicly visible before disclosure, posing significant risks of 1-day exploits.

##### 6.3 Notification
Finally, there is a long line of work on notification, which is related to our study because a natural next step is to investigate the mechanisms and effectiveness of notifying consumers about vulnerable devices. For this direction, we refer interested readers to five recent works and their references: [15, 16, 28, 29, 31].

### 7. Discussions

##### 7.1 Data Quality
First, we sincerely thank JVN for providing curated public disclosure dates. Some previous works used the entry creation date in the NVD as a best-effort estimation (e.g., [27] and [21]), but we are aware that these two dates may differ greatly. Future studies should consider using JVN as a more accurate source for public disclosure dates.

Aside from vulnerability databases like NVD and JVN, patch release notes are arguably the most important information source in vulnerability lifecycle management. Unfortunately, we encountered much irregularity in this source during our study. Some release notes do not contain a date, and others do not mention the CVE ID of the vulnerability being fixed, even when the patch is for a published CVE ID. Future studies may consider leveraging natural language processing techniques to address these issues.

##### 7.2 Data Size
At present, vendors may silently patch a vulnerability discovered internally, hindering studies that use information about patch releases to measure vendor vulnerability management. Policy makers may consider requiring vendors to publicly disclose the dates of all discovered vulnerabilities, similar to data breach disclosures, creating incentives for vendors to create more secure products.

##### 7.3 Vendor Behaviors
Our results show that vendors operating regional subsidiaries should coordinate among their subsidiaries to synchronize patch releases and publish End-of-Support information in every region. This is particularly important because consumers may not be able to install firmware from another region due to region-specific technicalities, such as wireless frequencies. Although these practices require additional investments, they are necessary improvements. Mainstream software and smartphone vendors have long adopted these best practices, and consumers rightly expect them from every vendor.

Finally, we recommend that vendors maintain permanent machine-readable security feeds, such as release notes with JSON/XML metadata and advisories in RSS. Together with adequate disclosures, these feeds would create value for participating vendors by enabling researchers to develop better tools to help customers scan and defend their networks after a vulnerability is discovered.

### 8. Conclusion
Using a dataset that covers 283 CVE entries and 450 products, we analyzed the patch release behavior of consumer IoT vendors. Our findings highlight significant risks, including incremental and unsynchronized patch releases, and implicit End-of-Support practices. These practices pose substantial 1-day exploit risks, and we recommend that vendors adopt more coordinated and transparent approaches to improve security and reduce these risks.