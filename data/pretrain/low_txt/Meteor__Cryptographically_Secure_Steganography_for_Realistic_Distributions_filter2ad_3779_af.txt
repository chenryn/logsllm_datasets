### Table 4: Comparative Distribution Statistics for Neural Steganography Algorithms

| Algorithm         | Desktop/GPU (sec) | Laptop/CPU (sec) | Stegotext Length (bytes) | Overhead (length) | Capacity (bits/token) | Perplexity | KL-Divergence | Entropy | Secure? |
|-------------------|--------------------|------------------|--------------------------|-------------------|-----------------------|------------|---------------|---------|---------|
| Meteor (this)     | 18.089            | 82.214           | 1976                     | 12.36×            | 3.09                  | 21.60      | 0.045         | 6.30    | ✓       |
| Arithmetic [44]   | 30.570            | 82.638           | 1391                     | 8.69×             | 4.11                  | 29.22      | 0.082         | 6.66    | ✗       |
| Huffman [41, 43]  | 11.070            | 42.942           | 938                      | 3.39×             | 3.39                  | 8.85       | 0.851         | N/A     | ✗       |
| Bins [37]         | 19.791            | 46.583           | 2002                     | 12.51×            | 0.64                  | 50.82      | 2.594         | N/A     | ✗       |
| Random Sample     | 15.515            | 39.450           | 1547                     | 9.67×             | 0.83                  | 13.82      | 0.040         | 5.36    | N/A     |

**Note:** "N/A" indicates that the metric is not relevant for the algorithm.

### Comparative Analysis

We evaluate Meteor against the following previous solutions:
1. Bins [37]
2. Huffman coding [41]
3. Arithmetic coding [44]

We compare standard NLP language statistics for these with a regular, random sample from the model. The results are presented in Table 4. Note that entropy is marked as "N/A" for Huffman and bins because their binning algorithms prevent meaningful entropy calculation. The random sample serves as a control distribution and does not encode any information, hence its capacity is "N/A."

**Key Observations:**
- **KL Divergence:** The Kullback-Leibler (KL) divergence measures the difference between the model's distribution and the output distribution of the algorithm. Meteor's KL divergence is very close to that of the random sample, indicating minimal distribution modification. In contrast, Huffman and bins have much higher KL divergences due to significant distribution changes.
- **Arithmetic Coding:** The arithmetic coding algorithm has a lower KL divergence than other NLP algorithms but still higher than Meteor. This is because it reuses randomness, whereas Meteor uses fresh randomness like the baseline random sample.
- **Security and Capacity:** Meteor maintains strong security properties without significantly hampering capacity. While arithmetic coding has a higher capacity, its insecurity makes this additional capacity irrelevant. Modifying parameters for Huffman or bins could achieve similar capacity but would still be insecure.

### Conclusion

In this work, we analyze the practical limitations of using cryptographically secure steganography on real, useful distributions. We identify the need for samplers and impractical entropy requirements as key impediments. We show that adapting existing public key techniques is possible but produces highly inefficient stegotext. We then introduce Meteor, a novel symmetric key steganographic system that outperforms public key techniques by adapting to changes in entropy. We evaluate Meteor on GPU, CPU, and mobile platforms, demonstrating its potential for universal, censorship-resistant steganography. Finally, we compare Meteor to existing insecure steganographic techniques from the NLP literature, showing it has comparable performance while achieving cryptographic security.

### Acknowledgements

The first author is supported by the National Science Foundation under Grant #2030859 to the Computing Research Association for the CIFellows Project and DARPA under Agreement No. HR00112020021. Part of this work was completed while the first author was at Johns Hopkins University. The second and fourth authors are funded by the NSF under awards CNS-1329737 and CNS-1955172. The third author is supported by NSF under awards CNS-1653110 and CNS-1801479, the Office of Naval Research under contract N00014-19-1-2292, DARPA under Contract No. HR001120C0084, and a Security and Privacy research award from Google. Significant elements of this work were conducted while the first, second, and fourth authors were supported by NSF award CNS-1330491.

The first author would like to thank Adam Poliak for his early help shaping this project and Eric Wustrow for his insight into censorship resistance techniques. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the United States Government or DARPA.

### References

[1] T. Perrin and M. Marlinspike, “The double ratchet algorithm.” Available at https://whispersystems.org/docs/specifications/doubleratchet/.

[2] WhatsApp, “WhatsApp Encryption Overview.” Available at https://scontent.whatsapp.net/v/t61/68135620_760356657751682_6212997528851833559_n.pdf/WhatsApp-Security-Whitepaper.pdf, December 2017.

[3] K. Conger, “WhatsApp blocked in Brazil again.” Available at https://techcrunch.com/2016/07/19/whatsapp-blocked-in-brazil-again/, July 2016.

[4] T. Fish, “WhatsApp banned: Countries where WhatsApp is blocked mapped.” Available at https://www.express.co.uk/life-style/science-technology/1166191/whatsapp-ban-map-which-countries-where-whatsapp-blocked-censorship-china-banned, August 2019.

[5] A. Shahbaz, “Freedom on the Net 2018.” Available at https://freedomhouse.org/report/freedom-net/freedom-net-2018/rise-digital-authoritarianism, 2018.

[6] Freedom House, “Freedom on the Net 2018 map.” Available at https://freedomhouse.org/report/freedom-net/freedom-net-2018/map, 2018.

[7] R. S. Raman, A. Stoll, J. Dalek, R. Ramesh, W. Scott, and R. Ensafi, “Measuring the deployment of network censorship filters at global scale,” in Network and Distributed Systems Security (NDSS) Symposium 2020, 2020.

[8] Tor Project, “Tor: The onion router.” Available at https://www.torproject.org/.

[9] R. Dingledine, N. Mathewson, and P. Syverson, “Tor: The second-generation onion router,” in Proceedings of the 13th Conference on USENIX Security Symposium - Volume 13, SSYM’04, (Berkeley, CA, USA), pp. 21–21, USENIX Association, 2004.

[10] M. G. Reed, P. F. Syverson, and D. M. Goldschlag, “Anonymous connections and onion routing,” IEEE Journal on Selected Areas in Communications, vol. 16, pp. 482–494, May 1998.

[11] P. Winter, T. Pulls, and J. Fuß, “Scramblesuit: A polymorph network protocol to circumvent censorship,” CoRR, vol. abs/1305.3199, 2013.

[12] H. M. Moghaddam, B. Li, M. Derakhshani, and I. Goldberg, “SkypeMorph: Protocol obfuscation for Tor bridges,” in ACM CCS 2012 (T. Yu, G. Danezis, and V. D. Gligor, eds.), pp. 97–108, ACM Press, October 2012.

[13] Z. Weinberg, J. Wang, V. Yegneswaran, L. Briesemeister, S. Cheung, F. Wang, and D. Boneh, “StegoTorus: A camouflage proxy for the Tor anonymity system,” in ACM CCS 2012 (T. Yu, G. Danezis, and V. D. Gligor, eds.), pp. 109–120, ACM Press, October 2012.

[14] E. Wustrow, S. Wolchok, I. Goldberg, and J. A. Halderman, “Telex: Anticensorship in the network infrastructure,” in Proceedings of the 20th USENIX Security Symposium, August 2011.

[15] E. Wustrow, C. M. Swanson, and J. A. Halderman, “Tapdance: End-to-middle anticensorship without flow blocking,” in 23rd {USENIX} Security Symposium ({USENIX} Security 14), pp. 159–174, 2014.

[16] K. P. Dyer, S. E. Coull, T. Ristenpart, and T. Shrimpton, “Protocol misidentification made easy with format-transforming encryption,” in Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, pp. 61–72, ACM, 2013.

[17] Q. Wang, X. Gong, G. T. K. Nguyen, A. Houmansadr, and N. Borisov, “CensorSpoofer: Asymmetric communication using IP spoofing for censorship-resistant web browsing,” in ACM CCS 2012 (T. Yu, G. Danezis, and V. D. Gligor, eds.), pp. 121–132, ACM Press, October 2012.

[18] A. Houmansadr, T. J. Riedl, N. Borisov, and A. C. Singer, “I want my voice to be heard: IP over voice-over-IP for unobservable censorship circumvention,” in NDSS 2013, The Internet Society, February 2013.

[19] M. C. Tschantz, S. Afroz, Anonymous, and V. Paxson, “Sok: Towards grounding censorship circumvention in empiricism,” in 2016 IEEE Symposium on Security and Privacy (SP), pp. 914–933, May 2016.

[20] R. Ensafi, P. Winter, A. Mueen, and J. R. Crandall, “Analyzing the great firewall of China over space and time,” PoPETs, vol. 2015, pp. 61–76, January 2015.

[21] B. Marczak, N. Weaver, J. Dalek, R. Ensafi, D. Fifield, S. McKune, A. Rey, J. Scott-Railton, R. Deibert, and V. Paxson, “An analysis of China’s ‘Great Cannon’,” in 5th {USENIX} Workshop on Free and Open Communications on the Internet ({FOCI} 15), 2015.

[22] R. Ensafi, D. Fifield, P. Winter, N. Feamster, N. Weaver, and V. Paxson, “Examining how the Great Firewall discovers hidden circumvention servers,” in Proceedings of the 2015 Internet Measurement Conference, pp. 445–458, 2015.

[23] M. Bevand, “My experience with the Great Firewall of China.” Available at http://blog.zorinaq.com/my-experience-with-the-great-firewall-of-china/, January 2016.

[24] K. Bock, iyouport, Anonymous, L.-H. Merino, D. Fifield, A. Houmansadr, and D. Levin, “Exposing and circumventing China’s censorship of ESNI,” August 2020.

[25] G. J. Simmons, “The prisoners’ problem and the subliminal channel,” in CRYPTO’83 (D. Chaum, ed.), pp. 51–67, Plenum Press, New York, USA, 1983.

[26] R. J. Anderson and F. A. Petitcolas, “On the limits of steganography,” IEEE Journal on selected areas in communications, vol. 16, no. 4, pp. 474–481, 1998.

[27] C. Cachin, “An information-theoretic model for steganography.” Cryptology ePrint Archive, Report 2000/028, 2000. Available at http://eprint.iacr.org/2000/028.