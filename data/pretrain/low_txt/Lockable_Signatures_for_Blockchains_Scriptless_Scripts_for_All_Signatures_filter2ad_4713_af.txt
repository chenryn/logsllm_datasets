### Payment Channel Network Protocol

#### Locking Phase
The locking phase involves the following steps:

- **Lock Generation**: 
  - \( \text{Lock}(sk_{n-1}, tx_{\text{pay}, n-1}, sk_n, tx_{\text{pay}, n}) \) is sent to \( P_n \), where \( tx_{\text{pay}, n} \) is a message known to \( P_0 \) and \( P_n \), and \( sk_n \) is a secret key shared among \( P_0 \), \( P_{n+1} \), and \( P_n \).

#### Payment Release Phase
- **Initiation**:
  - The sender (parties \( P_0 \) and \( P_{n+1} \)) initiates the payment release by jointly generating \( \sigma_n \leftarrow \Pi_{\text{DS}}.\text{Sign}(sk_n, tx_{\text{pay}, n}) \) with \( P_n \) via the MPC protocol \( \Gamma \).

- **Intermediate Parties**:
  - For each party \( P_i \) where \( i \in [2, n] \):
    1. **Unlock**:
       - Compute \( \sigma_{i-1} \leftarrow \text{Unlock}(3-PC_i, tx_{\text{pay}, i}, \sigma_i, 3-PC_{i-1}, tx_{\text{pay}, i-1}, \ell_{k_{i-1}}) \).
    2. **Store Transactions**:
       - Store \( (tx_{\text{Setup}, i-1}, \sigma_{s, i-1}, tx_{\text{pay}, i-1}, \sigma_{i-1}) \) to post on the blockchain if necessary.

### Privacy in Our PCN Protocols

- **On-Chain Privacy**:
  - The keys involved in the same payment path are not correlated to an external observer, achieving the same notion of on-chain privacy as existing proposals based on scriptless scripts [3].

- **Off-Chain Privacy**:
  - In our generic protocol, intermediate node \( P_i \) learns the identity of:
    - The sender \( P_0 \),
    - Its neighbors \( P_{i-1} \) and \( P_{i+1} \),
    - The neighbors' neighbors \( P_{i-2} \) and \( P_{i+2} \).
  - In our BLS-based protocol, corrupted intermediate users only learn the identities of the sender and the direct neighbors, similar to [3].

### Implementation and Efficiency Analysis

- **Implementation**:
  - We implemented our BLS-based PCN protocol and compared its performance against Schnorr and ECDSA-based PCN protocols from [3].

- **Instantiations**:
  - The three PCN protocols use a NIZK (PNIZK, LDL, VNIZK, LDL) for LDL, instantiated with the Schnorr identification scheme [53] and made non-interactive using the Fiat-Shamir transformation [54].
  - While this scheme is not known to be UC-secure (the classical proof [55] is in the stand-alone model), it is a reasonable compromise for a more efficient protocol.

- **Efficiency and Comparison**:
  - We consider an \( n \)-party payment path for the PCN.
  - The timing cost of operations in each phase (payment setup, payment lock, and payment release) was measured on a local machine with a 1.8 GHz Octa-Core Intel Core i7-8550U processor and 16 GB 2133 MHz LPDDR3 memory.
  - Python libraries charm [56] and BLS signature library blspy [57] were used for evaluation.
  - Multi-hop HTLC-based payments with \( n = 5 \) take about 5 seconds to complete with a communication cost of 17 MB, which is more expensive than scriptless variants.

- **Payment Setup Phase**:
  - The time to sign a revoke transaction \( tx_{\text{revoke}, i} \) for every \( tx_{\text{Setup}, i} \) is considered.
  - The payment lock phase is interactive, with 3 rounds of messages sent to party \( P_i \) who sets the lock \( \ell_{k_{i-1}} \).

- **Optimizations**:
  - In the execution of two consecutive locking phases, each intermediate party \( P_i \) generates two pairs of signatures \( \sigma^{(i)}_{i-1} \) on \( tx_{\text{Pay}, i-1} \) and \( \sigma^{(i)} \) on \( tx_{\text{Pay}, i} \).
  - Since BLS signatures are unique, each signature can be generated exactly once, reducing the computational cost.
  - The sender's cost is halved by leveraging this observation.

- **Detailed Computational Costs**:
  - Table I provides an overview of the operations and their computational costs during the setup phase.
  - Table II compares the computational time and communication costs across PCN protocols for a path length of \( n \).
  - Table III reports the computation cost in the payment lock phase in terms of the number of BLS signature operations.

### Conclusion

- **Introduction of Lockable Signatures**:
  - We introduced the notion of lockable signatures as the cornerstone to construct PCNs, making them compatible with any signature scheme.
  - This approach expands the scope of PCNs to include signature schemes with extra properties (e.g., aggregatable, post-quantum secure) and facilitates payments across different chains.
  - Our BLS-based PCN protocol is the first fully compatible with the BLS signature scheme and offers competitive performance.

- **Future Work**:
  - We plan to explore the large-scale adoption of our BLS-based construction to study the benefits offered by signature aggregation in the context of PCNs.

### Acknowledgments

- The work was partially supported by the Deutsche Forschungsgemeinschaft (DFG – German Research Foundation) under SCHR 1415/4-1, and by the state of Bavaria at the Nuremberg Campus of Technology (NCT).
- The authors thank Sebastian Faust, Kristina Hostakova, and Siavash Riahi for insightful comments on an earlier draft of this work.

### References

- [1] J. Poon and T. Dryja, "The Bitcoin Lightning Network: Scalable Off-Chain Instant Payments," 2016.
- [2] G. Malavolta, P. Moreno-Sanchez, A. Kate, M. Maffei, and S. Ravi, "Concurrency and Privacy with Payment-Channel Networks," in ACM CCS 2017, B. M. Thuraisingham, D. Evans, T. Malkin, and D. Xu, Eds., ACM Press, 2017, pp. 455–471.
- [3] G. Malavolta, P. Moreno-Sanchez, C. Schneidewind, A. Kate, and M. Maffei, "Anonymous Multi-Hop Locks for Blockchain Scalability and Interoperability," in NDSS 2019, The Internet Society, Feb. 2019.
- [4] C. Egger, P. Moreno-Sanchez, and M. Maffei, "Atomic Multi-Channel Updates with Constant Collateral in Bitcoin-Compatible Payment-Channel Networks," in ACM CCS 2019, L. Cavallaro, J. Kinder, X. Wang, and J. Katz, Eds., ACM Press, Nov. 2019, pp. 801–815.
- [5] Lightning Network, https://lightning.network/.
- [6] Raiden Network, https://raiden.network/.
- [7] Payment Channels in Ripple, https://xrpl.org/use-payment-channels.html.
- [8] R. W. F. Lai, V. Ronge, T. Ruffing, D. Schröder, S. A. K. Thyagarajan, and J. Wang, "Omniring: Scaling Private Payments Without Trusted Setup," in ACM CCS 2019, L. Cavallaro, J. Kinder, X. Wang, and J. Katz, Eds., ACM Press, Nov. 2019, pp. 31–48.
- [9] A. Poelstra, Mimblewimble, https://download.wpsoftware.net/bitcoin/wizardry/mimblewimble.pdf.
- [10] D. Schwartz, N. Youngs, A. Britto, et al., "The Ripple Protocol Consensus Algorithm," Ripple Labs Inc White Paper, vol. 5, no. 8, 2014.
- [11] E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and M. Virza, "Zerocash: Decentralized Anonymous Payments from Bitcoin," in 2014 IEEE Symposium on Security and Privacy, IEEE Computer Society Press, May 2014, pp. 459–474.
- [12] Scriptless Scripts, https://tlu.tarilabs.com/cryptography/scriptless-scripts/introduction-to-scriptless-scripts.html.
- [13] M. F. Esgin, O. Ersoy, and Z. Erkin, Post-Quantum Adaptor Signatures and Payment Channel Networks, Cryptology ePrint Archive, Report 2020/845, https://eprint.iacr.org/2020/845, 2020.
- [14] E. Tairi, P. Moreno-Sanchez, and M. Maffei, Post-Quantum Adaptor Signature for Privacy-Preserving Off-Chain Payments, Cryptology ePrint Archive, Report 2020/1345, https://eprint.iacr.org/2020/1345, 2020.
- [15] Chia Network FAQ, https://www.chia.net/faq/.
- [16] Pragmatic Signature Aggregation with BLS, https://ethresear.ch/t/pragmatic-signature-aggregation-with-bls/2105.
- [17] D. Boneh, B. Lynn, and H. Shacham, "Short Signatures from the Weil Pairing," in ASIACRYPT 2001, C. Boyd, Ed., ser. LNCS, vol. 2248, Springer, Heidelberg, Dec. 2001, pp. 514–532.
- [18] D. Boneh, M. Drijvers, and G. Neven, "Compact Multisignatures for Smaller Blockchains," in ASIACRYPT 2018, Part II, T. Peyrin and S. Galbraith, Eds., ser. LNCS, vol. 11273, Springer, Heidelberg, Dec. 2018, pp. 435–464.
- [19] L. Ducas, A. Durmus, T. Lepoint, and V. Lyubashevsky, "Lattice Signatures and Bimodal Gaussians," in CRYPTO 2013, Part I, R. Canetti and J. A. Garay, Eds., ser. LNCS, vol. 8042, Springer, Heidelberg, Aug. 2013, pp. 40–56.
- [20] W. A. A. Torres, R. Steinfeld, A. Sakzad, J. K. Liu, V. Kuchta, N. Bhattacharjee, M. H. Au, and J. Cheng, "Post-Quantum One-Time Linkable Ring Signature and Application to Ring Confidential Transactions in Blockchain (Lattice RingCT v1.0)," in Australasian Conference on Information Security and Privacy, Springer, 2018, pp. 558–576.
- [21] L. Ducas, E. Kiltz, T. Lepoint, V. Lyubashevsky, P. Schwabe, G. Seiler, and D. Stehlé, "CRYSTALS-Dilithium: A Lattice-Based Digital Signature Scheme," IACR TCHES, vol. 2018, no. 1, pp. 238–268, 2018, https://tches.iacr.org/index.php/TCHES/article/view/839, ISSN: 2569-2925.
- [22] D. J. Bernstein, A. Hülsing, S. Kölbl, R. Niederhagen, J. Rijneveld, and P. Schwabe, "The SPHINCS+ Signature Framework," in Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, 2019, pp. 2129–2146.
- [23] From Post-Quantum Cryptography to Post-Quantum Blockchains and Cryptocurrencies: An Introduction, https://medium.com/abelian/from-post-quantum-cryptography-to-post-quantum-blockchains-and-cryptocurrencies-an-introduction-eb0b50ed129a.
- [24] Understanding Serenity, https://blog.ethereum.org/2015/12/24/understanding-serenity-part-i-abstraction/.
- [25] Hcash, https://h.cash/.
- [26] Zcash FAQ, https://z.cash/support/faq/.
- [27] R. Cleve, "Limits on the Security of Coin Flips When Half the Processors Are Faulty (Extended Abstract)," in 18th ACM STOC, ACM Press, May 1986, pp. 364–369.
- [28] M. Green and I. Miers, "Bolt: Anonymous Payment Channels for Decentralized Currencies," in ACM CCS 2017, B. M. Thuraisingham, D. Evans, T. Malkin, and D. Xu, Eds., ACM Press, 2017, pp. 473–489.
- [29] J. Kilian, "A Note on Efficient Zero-Knowledge Proofs and Arguments (Extended Abstract)," in 24th ACM STOC, ACM Press, May 1992, pp. 723–732.
- [30] S. Micali, "CS Proofs (Extended Abstracts)," in 35th