### Optimized Text

#### Equation and Channel Hardening
The sum peak rate can be approximated by the following equation:
\[ \text{Sum Peak Rate} \approx N \log \left(1 + \frac{P}{\frac{M}{N} - 1}\right) \]
where \( P \) is the total transmission power, and \( H \) is the channel matrix. When \( M = N \), this equation converges to a constant value [15].

To avoid channel hardening, in our second experiment, we used all 12 antennas regardless of the number of senders. Interestingly, we observed that the sum peak rate grows linearly as more senders transmit (solid line in Figure 12). With 9 concurrent senders, the sum peak rate increased by 6.8 times compared to a single-antenna setup. Therefore, BigStation indeed scales wireless capacity linearly when \( M > N \).

#### Antenna Configuration and Condition Number
The next question is: how many antennas should BigStation have to support any given \( N \) clients? To answer this, we varied the antenna configurations and measured the condition number of the wireless channel matrix. The condition number indicates the quality of the channel matrix inverse, which is used to demultiplex spatial streams [21]. A well-conditioned channel, with a small condition number (close to 1), can decorrelate spatial streams with minimal distortion. Conversely, a large condition number significantly reduces the SNRs of spatial streams after decoding.

#### System Delay and Processing Latency
In addition to processing throughput, processing latency is a critical metric for wireless communications. We characterized the delay performance of BigStation by letting the SD servers send symbols back to the FS server after spatial demultiplexing. The FS server timestamps both the original symbol generation and the return of the demultiplexed symbol to compute the delay. This measured delay excludes the fixed 9 µs channel decoding delay.

In a light load situation, where the FS servers generate a frame every 10 ms, the mean processing latency is as low as 860 µs, with the 90th percentile below 1.4 ms (Figure 14(a)). However, under heavy traffic, a heavy-tailed delay CDF appears (Figure 14(b)). The mean latency remains around 860 µs, but the 90th percentile increases to 20 ms due to TCP retransmissions. Under heavy load, packet losses and TCP retransmissions cause delays, as the SD server requires symbols from all antennas before finalizing the output.

Table 5 summarizes the delay breakdown of various components in BigStation. In a light load situation, the network delay is small (∼300 µs) due to application-level rate control. Most of the delay is incurred while symbol packets wait in queues on the CI/SD servers, as these servers require symbols from all antennas before deriving final results.

#### Scalability and Performance
BigStation achieves incremental scalability by adding more computing devices. Our prototype with 12 antennas showed a peak rate gain of 6.8 times compared to a single-antenna radio. In contrast, Argos reported only a 5.7 times capacity improvement with 64 antennas due to suboptimal conjugate processing. The theoretical comparison between zero-forcing and conjugate processing (matched filter) is presented in [13], and our results align with these findings using real measured data from a practical large MIMO system.

#### Related Work and Conclusion
BigStation is related to extensive work in parallel computing and MU-MIMO. Many schemes to parallelize digital signal processing in BigStation have been studied in other contexts [7]. However, BigStation is the first to parallelize MU-MIMO operations to scale the system to tens or hundreds of antennas.

In conclusion, BigStation is a scalable architecture for large-scale MU-MIMO systems. By extensively parallelizing MU-MIMO processing on simple, low-cost commodity computing devices, our design incrementally scales to support more MIMO antennas. After analyzing computation and communication patterns, we parallelize MU-MIMO processing with a distributed pipeline to reduce overall processing delay. Our prototype with 15 PC servers and standard Ethernet switches supports real-time MU-MIMO processing for 12 antennas, achieving a 6.8 times increase in wireless capacity with a low mean processing delay of 860 µs. This latency satisfies the real-time requirements of many existing wireless standards, such as LTE and WCDMA.

#### Acknowledgment
We sincerely thank our shepherd, Brad Karp, and the anonymous reviewers for their valuable comments and suggestions.

#### References
[1] 3GPP TS 36.201-820: Evolved Universal Terrestrial Radio Access (E-UTRA); Long Term Evolution (LTE) physical layer; General description.
[2] C-RAN: The Road Towards Green RAN. http://labs.chinamobile.com/cran/wp-content/uploads/CRAN_white_paper_v2_5_EN(1).pdf.
[3] HP ProLiant DL560 Gen8. http://h10010.www1.hp.com/wwpc/us/en/sm/WF06b/15351-15351-3328412-241644-3328422-5268290-5288630-5288631.html?dnr=1.
[4] IEEE Standard for Local and Metropolitan Area Networks Part 11; Amendment: Enhancements for Very High Throughput for operation in bands below 6GHz. IEEE Std P802.11ac/Draft 4.0, 2012.
[5] M. Alizadeh, A. Kabbani, T. Edsall, B. Prabhakar, A. Vahdat, and M. Yasuda. Less is More: Trading a little Bandwidth for Ultra-Low Latency in the Data Center. In Proceedings of NSDI, 2012.
[6] E. Aryafar, N. Anand, T. Salonidis, and E. W. Knightly. Design and experimental evaluation of multi-user beamforming in wireless LANs. In Proceedings of MobiCom, pages 197–208, New York, NY, USA, 2010. ACM.
[7] D. P. Bertsekas and J. N. Tsitsiklis. Parallel and Distributed Computation: Numerical Methods. Athena Scientific, 2003.
[8] S. Bhaumik, S. P. Chandrabose, M. K. Jataprolu, G. Kumar, A. Muralidhar, P. Polakos, V. Srinivasan, and T. Woo. CloudIQ: A framework for processing base stations in a data center. In Proceedings of MobiCom, pages 125–136, 2012.
[9] Cisco Inc. Cisco Visual Networking Index (VNI): Forecast and Methodology 2011-2016. Cisco, http://www.cisco.com/en/US/solutions/collateral/ns341/ns525/ns537/ns705/ns827/white_paper_c11-481360_ns827_Networking_Solutions_White_Paper.html, 2012.
[10] J. Dean and L. A. Barroso. The Tail at Scale. Communications of the ACM, 56(2), 2013.
[11] B. Hochwald and S. Vishwanath. Space-Time Multiple Access: Linear Growth in the Sum Rate. In Proceedings 40th Annual Allerton Conf. Communications, Control and Computing, 2002.
[12] J. Hoydis, S. ten Brink, and M. Debbah. Massive MIMO: How many antennas do we need? In Allerton Conference on Communication, Control, and Computing, September 2011.
[13] H. Huh, G. Caire, H. Papadopoulos, and S. Ramprashad. Achieving "Massive MIMO" Spectral Efficiency with a Not-so-Large Number of Antennas. IEEE Transactions on Wireless Communications, 11(9):3226 –3239, September 2012.
[14] J. Neel, P. Robert, and J. Reed. A Formal Methodology for Estimating the Feasible Processor Solution Space for A Software Radio. In Proceedings of the SDR Technical Conference and Product Exposition, 2005.
[15] C. Peel, B. Hochwald, and A. Swindlehurst. A Vector-perturbation Technique for Near-capacity Multi-antenna Multi-user Communication — Part I: Channel Inversion and Regularization. IEEE Transactions on Communications, 53(1):195–202, 2005.
[16] H. S. Rahul, S. Kumar, and D. Katabi. JMB: Scaling wireless capacity with user demands. In Proceedings of ACM SIGCOMM, pages 235–246, 2012.
[17] F. Rusek, D. Persson, B. K. Lau, E. Larsson, T. Marzetta, O. Edfors, and F. Tufvesson. Scaling Up MIMO: Opportunities and Challenges with Very Large Arrays. IEEE Signal Processing Magazine, 30(1):40 –60, January 2013.
[18] C. Shepard, H. Yu, N. Anand, E. Li, T. Marzetta, R. Yang, and L. Zhong. Argos: Practical many-antenna base stations. In Proceedings of MobiCom, pages 53–64, 2012.
[19] K. Tan, H. Liu, J. Fang, W. Wang, J. Zhang, M. Chen, and G. Voelker. SAM: Enabling Practical Spatial Multiple Access in Wireless LAN. In Proceedings of MobiCom, 2009.
[20] K. Tan, J. Zhang, J. Fang, H. Liu, Y. Ye, S. Wang, Y. Zhang, H. Wu, W. Wang, and G. M. Voelker. Sora: High performance software radio using general purpose multi-core processors. In NSDI 2009.
[21] D. Tse and P. Vishwanath. Fundamentals of Wireless Communications. Cambridge University Press, 2005.
[22] A. J. Viterbi and J. K. Omura. Principles of digital communication and coding. McGraw-Hill, 1979.
[23] H. Wu, Z. Feng, C. Guo, and Y. Zhang. ICTCP: Incast Congestion Control for TCP in data center networks. In Proceedings of CoNEXT, pages 13:1–13:12, 2010.