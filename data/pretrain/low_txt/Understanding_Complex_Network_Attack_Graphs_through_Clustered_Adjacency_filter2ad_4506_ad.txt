### Figure 9: Categorizing and Correlating Intrusion Alarms via Attack Graph Reachability

- **Reachable in 2-3 Steps (MEDIUM Priority)**
- **Not Reachable (LOW Priority)**
- **Reachable in One Step (HIGH Priority)**

### Figure 10: Predicting Attack Origin and Impact

### 5. Summary and Conclusions

This paper demonstrates how clustered adjacency matrices can reveal underlying regularities in network attack graphs. Our approach is particularly advantageous because it avoids the visual clutter typically associated with literal drawings of attack graphs. The adjacency matrix is concise, representing each graph edge with a single matrix element. Our method imposes no specific restrictions on the form of the attack graph, making it applicable to graphs based on network vulnerabilities, detected intrusions, or combinations thereof. It also works well with aggregated vertices, such as those grouped by network machine. The overall complexity of our approach is low-order polynomial, ensuring scalability for larger networks.

The information-theoretic clustering algorithm we use reorders the rows and columns of the adjacency matrix, revealing rectangular blocks of similarly-connected attack graph elements. This clustering algorithm is fully automatic, parameter-free, and scales linearly with problem size. We further transform the attack graph adjacency matrix by raising it to higher powers, representing multiple attack steps. This allows us to show attacker reachability across the network within any number of attack steps. We combine these per-step reachability matrices into a single matrix that indicates the minimum number of steps between any pair of vertices in the attack graph. We also summarize reachability over all steps via transitive closure.

Our general approach enables us to correlate, predict, and hypothesize about network attacks. For example, we can provide a concise summary of changes in an attack graph resulting from changes in the network configuration. We can place intrusion alarms in the context of the vulnerability-based attack graph for categorization. We can step forward from an attack to predict its impact and prioritize defensive responses according to the number of steps required to reach victim machines. Additionally, we can step backward from an attack to predict its origin.

### 6. Acknowledgements

This work was partially supported by the Air Force Research Laboratory Rome under grant F30602-00-2-0512 and by the Army Research Office under grants DAAD19-03-1-0257 and W911NF-05-1-0374.

### 7. References

[1] D. Chakrabarti, S. Papadimitriou, D. Modha, C. Faloutsos, "Fully Automatic Cross-Associations," in Proceedings of the 10th ACM International Conference on Knowledge Discovery & Data Mining, Seattle, Washington, August 2004.

[2] S. Jajodia, S. Noel, B. O’Berry, "Topological Analysis of Network Attack Vulnerability," in Managing Cyber Threats: Issues, Approaches and Challenges, V. Kumar, J. Srivastava, A. Lazarevic (eds.), Kluwer Academic Publisher, 2005.

[3] S. Noel, E. Robertson, S. Jajodia, "Correlating Intrusion Events and Building Attack Scenarios through Attack Graph Distances," in Proceedings of the 20th Annual Computer Security Applications Conference, Tucson, Arizona, December 2004.

[4] S. Noel, S. Jajodia, "Managing Attack Graph Complexity through Visual Hierarchical Aggregation," in Proceedings of the ACM CCS Workshop on Visualization and Data Mining for Computer Security, Fairfax, VA, October 2004.

[5] P. Ning, D. Xu, C. Healey, R. St. Amant, "Building Attack Scenarios: Integration of Complementary Alert Correlation Methods," in Proceedings of the 11th Annual Network and Distributed System Security Symposium, February 2004.

[6] S. Noel, S. Jajodia, B. O’Berry, M. Jacobs, "Efficient Minimum-Cost Network Hardening via Exploit Dependency Graphs," Proceedings of the 19th Annual Computer Security Applications Conference, Las Vegas, Nevada, December 2003.

[7] R. Ritchey, B. O’Berry, S. Noel, "Representing TCP/IP Connectivity for Topological Analysis of Network Security," in Proceedings of the 18th Annual Computer Security Applications Conference, Las Vegas, Nevada, December 2002.

[8] P. Ammann, D. Wijesekera, S. Kaushik, "Scalable, Graph-Based Network Vulnerability Analysis," in Proceedings of the 9th ACM Conference on Computer and Communications Security, Washington, DC, November 2002.

[9] F. Cuppens, A. Miege, "Alert Correlation in a Cooperative Intrusion Detection Framework," in Proceedings of the 2002 IEEE Symposium on Security and Privacy, May 2002.

[10] G. Di Battista, P. Eades, R. Tamassia, I. Tollis, Graph Drawing: Algorithms for the Visualization of Graphs, Prentice Hall, 1999.

[11] P. Eades, Q.-W. Feng, "Multilevel Visualization of Clustered Graphs," in Proceedings of the Symposium on Graph Drawing, September 1996.

[12] K. Lakkaraju, W. Yurcik, A. Lee, "NVisionIP: NetFlow for Security Situational Awareness," in Proceedings of the CCS Workshop on Visualization and Data Mining for Computer Security, Fairfax, VA, October 2004.

[13] J. McPherson, K.–L. Ma, P. Krystosek, T. Bartoletti, M. Christensen, "PortVis: A Tool for Port-Based Detection of Security Events," in Proceedings of the CCS Workshop on Visualization and Data Mining for Computer Security, Fairfax, VA, October 2004.

[14] P. Grünwald, "A Tutorial Introduction to the Minimum Description Length Principle," in Advances in Minimum Description Length: Theory and Applications, P. Grünwald, I. Myung, M. Pitt (eds.), MIT Press, 2005.

[15] E. Nuutila, Efficient Transitive Closure Computation in Large Digraphs, Ph.D. dissertation, Acta Polytechnica Scandinavica, Helsinki, 1995.

[16] Nessus open source vulnerability scanner project, web page, http://www.nessus.org/, last accessed May 2005.

---

**Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005)  
1063-9527/05 $20.00 © 2005 IEEE  
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25, 2021 at 12:12:28 UTC from IEEE Xplore. Restrictions apply.**