# Feature Distribution and Profiling-Aware Filtering in Network Traffic Analysis

## 1. Introduction
This section provides an overview of the feature distribution of free dimensions for 140 `dstIP` clusters, both with and without random sampling. The analysis shows that while random sampling reduces resource consumption, it also retains significant clusters and their behavior.

### 1.1 Feature Distribution
The feature distribution of free dimensions for 140 `dstIP` clusters is shown in Figure 6. The figure illustrates the relative uncertainty without sampling, indicating the consistency of the feature distributions even with a reduced sample size.

**Figure 6.** Feature distribution of free dimensions for 140 `dstIP` clusters with and without random sampling.
- (a) `srcPort`
- (b) `dstPort`
- (c) `srcIP`

## 2. Profiling-Aware Filtering
A key insight from random sampling is that clusters associated with denial of service (DoS) attacks are typically very large, consuming significant memory and CPU time. Profiling such behavior does not require a large number of flows, as the feature distributions remain consistent even with a small percentage of traffic. Based on this, we developed a profiling-aware filtering solution to limit the size of large clusters and adaptively sample the rest.

### 2.1 Algorithm Details
The profiling-aware sampling algorithm uses two watermarks, `L` and `H`, where `L` is the moving average of flow tables over time, and `H` is the maximum acceptable size of flow tables. In our experiments, `H` was set to 10 million flows, estimated to require 1GB of memory. We also set the maximum and minimum sampling ratios, `µmax` and `µmin`.

- **Flow Table Size Below `L`:** The system accepts every flow.
- **Flow Table Size at `H`:** The system stops reading flows and exits with a warning signal.
- **Flow Table Size at `L` or Incremental Marks:** The system computes the relative uncertainty of each dimension and identifies dominant feature values. If such values exist, they indicate anomalous traffic patterns, and the system marks these as significant clusters for filtering.

Flows containing marked feature values are filtered, as they do not affect the behavior of the associated clusters. Flows belonging to small clusters are given preference, but the system cannot accept all such flows once the table size exceeds `L`. Therefore, these flows are added with an adaptive sampling ratio:
\[ \mu = \mu_{\text{max}} - i \cdot \frac{\mu_{\text{max}} - \mu_{\text{min}}}{(H - L) / D} \]
where `D` is the incremental factor.

### 2.2 Experimental Results
We applied the profiling-aware filtering algorithm to flow tables during DoS attacks and worm outbreaks. The results show that profiling-aware sampling reduces CPU time and memory cost while maintaining high accuracy in extracting significant clusters.

- **DoS Attack Case:**
  - Extracted 41 `srcIP` clusters, 210 `dstIP` clusters, 21 `srcPrt` clusters, and 6 `dstPrt` clusters.
  - Over 90% of the original 309 clusters were retained, compared to 58% with random sampling.
  - Only 3 `dstIP` and 1 `srcPrt` clusters changed to "akin" classes, indicating high behavioral accuracy.

**Figure 7.** Feature distribution of free dimensions for 210 `dstIP` clusters with and without profiling-aware sampling.
- (a) `srcPort`
- (b) `dstPort`
- (c) `srcIP`

### 2.3 Worm Outbreak Case
In the worm outbreak case, the profiling-aware filtering algorithm also successfully reduced CPU and memory costs while maintaining high profiling accuracy. This demonstrates the algorithm's effectiveness in handling anomalous traffic patterns.

## 3. Conclusions and Future Work
This paper explores the feasibility of designing and implementing a real-time behavior profiling system for high-speed Internet links. We discussed the design requirements and challenges, presented an overall architecture, and demonstrated operational feasibility through performance benchmarking. To improve robustness during anomalous traffic patterns, we proposed a profiling-aware filtering algorithm that reduces resource consumption while retaining high profiling accuracy.

### 3.1 Future Work
- Integrating the event analysis engine into a rule-based anomaly detection system.
- Extending the flow import/export protocol to work with multiple continuous monitoring systems.
- Correlating anomalous and interesting events from multiple monitoring points.

## 4. Acknowledgements
This work was supported by NSF grants CNS-0435444 and CNS-0626812, a University of Minnesota Digital Technology Center DTI grant, and a Sprint ATL gift grant.

## 5. References
[1] A. Hussain, J. Heidemann, and C. Papadopoulos. A Framework for Classifying Denial of Service Attacks. In Proceedings of ACM SIGCOMM, August 2003.
[2] G. Iannaccone, C. Diot, I. Graham, and N. McKeown. Monitoring Very High Speed Links. In Proceedings of ACM SIGCOMM Internet Measurement Workshop, November 2001.
[3] M. Jordan. Graphical models. Statistical Science, Special Issue on Bayesian Statistics, 19:140–155, 2004.
[4] S. Kandula, D. Katabi, M. Jacob, and A. Berger. Botz-4-Sale: Surviving Organized DDoS Attacks That Mimic Flash Crowds. In Proceedings of Symposium on NSDI, May 2005.
[5] T. Karagiannis, K. Papagiannaki, and M. Faloutsos. BLINC: Multilevel Traffic Classification in the Dark. In Proceedings of ACM SIGCOMM, August 2005.
[6] K. Keys, D. Moore, and C. Estan. A Robust System for Accurate Real-Time Summaries of Internet Traffic. In Proceedings of ACM SIGMETRICS, June 2005.
[7] K. Krippendorff. Information Theory: Structural Models for Qualitative Data. Sage Publications, 1986.
[8] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and N. Weaver. Inside the Slammer Worm. IEEE Security and Privacy, July 2003.
[9] K. Xu, Z.-L. Zhang, and S. Bhattacharyya. Profiling Internet Backbone Traffic: Behavior Models and Applications. In Proceedings of ACM SIGCOMM, August 2005.
[10] C. Zou, L. Gao, W. Gong, and D. Towsley. Monitoring and Early Warning for Internet Worms. In Proceedings of ACM CCS, October 2003.
[11] M. Zwick. An Overview of Reconstructability Analysis. International Journal of Systems & Cybernetics, 2004.