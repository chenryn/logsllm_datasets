# Formal Security Assessment of Industrial Control Systems: A Case Study on SWaT

## 1. Introduction
In this work, we present a formal modeling and security assessment of an Industrial Control System (ICS) using the real-world water treatment testbed called SWaT. We propose a formalization of all the dimensions proposed in the APE [28] framework and apply our modeling technique to SWaT. The attack model implemented in ASLan++ is approximately 1000 lines long and contains more than 50 entities, generating 269 ASLan rules (i.e., transition rules). Using this model, we perform a formal security assessment of SWaT against two different attacker profiles, Cybercriminal and Insider, using CL-AtSe, a formal security analysis tool.

## 2. Related Work
### 2.1 Formal Verification
In [1], Adepu and Mathur investigate the response of a water treatment system to cyber attacks. The authors report the details of the real values of their attacks, while we identify the attack steps. The main difference between their work and ours is that they consider the attacker profile S and the HMI/SCADA, which are not included in our formal assessment due to the different abstraction level.

### 2.2 Alloy Model
In [23], Kang et al. analyze the security of the same water treatment testbed by creating a formal model in the Alloy formal language and then analyzing the system model with the Alloy analyzer [21]. They do not use any formal attacker model or profile and only consider three processes of the testbed. In contrast, we applied several modifications of the standard Dolev-Yao attacker model and used two different attacker profiles, resulting in the detection of a number of attacks that supersede those reported in [23].

### 2.3 ADVISE Framework
In [19, 24], the authors formally define a framework for the identification of attacks in Cyber-Physical Systems (CPS). They define a set of abstract components to describe an attack execution graph (AEG) and an attacker model. The AEG represents potential attack steps against the system, along with a formal definition of the attacker using a set of 6 dimensions. This formalization has been implemented in a framework called ADVISE, where users can define their own attacker models. Unlike ADVISE, which does not provide a list of attacker profiles, our approach provides two different attacker profiles and extends the standard DY attacker model capabilities.

### 2.4 CyberSAGE
In [41], Vu et al. describe the Cyber Security Argument Graph Evaluation (CyberSAGE) tool for CPS security assessment. The tool can automatically generate security argument graphs describing the workflow of a CPS, security goals, and an attacker model. For the description of the goal and workflow information, CyberSAGE supports XMI formats input. The topology of the network is automatically extracted, and the devices of the system are associated with properties (e.g., availability) according to heuristics.

## 3. Methodology
We propose a formal modeling of ICS and apply our modeling technique to the SWaT testbed. The attack model implemented in ASLan++ is around 1000 lines long and contains more than 50 entities, generating 269 ASLan rules. Using this model, we perform a formal security assessment of SWaT against two different attacker profiles: Cybercriminal and Insider. We use CL-AtSe, a formal security analysis tool, to identify attacks to the security of SWaT that take into account the logic of the ICS.

## 4. Results
To validate our results, we compare our formal assessment with the results of an independent practical assessment performed by six different teams from industry and academia. The comparison shows that 7 out of 8 different attacks found during the practical assessment were also discovered by our formal analysis. We did not cover the last attack type as our abstraction does not cover the related components in the system model.

## 5. Conclusions
In this work, we proposed a formal modeling of ICS and applied our modeling technique to the SWaT testbed. We also formalized all the dimensions proposed in the APE [28] framework. Using the ASLan++ model, we performed a formal security assessment of SWaT against two different attacker profiles, Cybercriminal and Insider. Our results show that our formal technique can identify attacks to the security of SWaT that take into account the logic of the ICS. The comparison with an independent practical assessment confirms the effectiveness of our approach.

## 6. Acknowledgments
We thank the anonymous reviewers for their helpful comments and suggestions. This work was supported by the National Research Foundation of Singapore under grant NRF2014NCR-NCR001-40.

## 7. References
[1] S. Adepu and A. Mathur. An investigation into the response of a water treatment system into cyber attacks. In IEEE Symposium on High Assurance Systems Engineering (HASE), 2015.
[2] D. Antonioli, H. R. Ghaeini, S. Adepu, M. Ochoa, and N. O. Tippenhauer. Gamifying education and research on ICS security: Design, implementation and results of s3. 2017. Cornell University, ArXiv e-Prints, http://arxiv.org/abs/1702.03067v1.
[3] A. Armando, W. Arsac, T. Avanesov, M. Barletta, A. Calvi, A. Cappai, R. Carbone, Y. Chevalier, L. Compagna, J. Cuéllar, G. Erzse, S. Frau, M. Minea, S. Mödersheim, D. von Oheimb, G. Pellegrino, S. E. Ponta, M. Rocchetto, M. Rusinowitch, M. T. Dashti, M. Turuani, and L. Viganò. The AVANTSSAR platform for the automated validation of trust and security of service-oriented architectures. In Tools and Algorithms for the Construction and Analysis of Systems (TACAS), pages 267–282, 2012.
[4] A. Armando, D. A. Basin, Y. Boichut, Y. Chevalier, L. Compagna, J. Cuéllar, P. H. Drielsma, P. Héam, O. Kouchnarenko, J. Mantovani, S. Mödersheim, D. von Oheimb, M. Rusinowitch, J. Santiago, M. Turuani, L. Viganò, and L. Vigneron. The AVISPA tool for the automated validation of internet security protocols and applications. In Proceedings of Computer Aided Verification, (CAV), pages 281–285, 2005.
[5] A. Armando and L. Compagna. SATMC: a SAT-based model checker for security protocols. In JELIA, LNAI 3229. Springer, 2004.
[6] AVANTSSAR. Deliverable 5.3: AVANTSSAR Library of validated problem cases. www.avantssar.eu, 2010.
[7] AVANTSSAR. Deliverable 2.3 (update): ASLan++ specification and tutorial, 2011. Available at http://www.avantssar.eu.
[8] D. Basin, S. Capkun, P. Schaller, and B. Schmidt. Let’s get physical: Models and methods for real-world security protocols. In Proceedings of Theorem Proving in Higher Order Logics, 2009.
[9] D. Basin, S. Capkun, P. Schaller, and B. Schmidt. Formal reasoning about physical properties of security protocols. Transactions on Information and System Security (TISSEC), 14(2):16, 2011.
[10] D. Basin, S. Mödersheim, and L. Viganò. OFMC: A symbolic model checker for security protocols. Journal of Information Security, 4(3):181–208, 2005.
[11] M. Bugliesi, S. Calzavara, S. Mödersheim, and P. Modesti. Security protocol specification and verification with AnBx. behaviour, 15:16, 2015.
[12] A. A. Cárdenas, S. M. Amin, B. Sinopoli, A. Giani, A. Perrig, and S. S. Sastry. Challenges for securing cyber physical systems. In Workshop on Future Directions in Cyber-physical Systems Security. DHS, July 2009.
[13] A. A. Cárdenas, T. Roosta, and S. Sastry. Rethinking security properties, threat models, and the design space in sensor networks: A case study in SCADA systems. Ad Hoc Networks, 7(8):1434–1447, 2009.
[14] D. E. Denning. Activism, hacktivism, and cyberterrorism: The internet as a tool for influencing foreign policy. In Networks and Netwars: The Future of Terror, Crime, and Militancy. RAND Corporation, 2001.
[15] P. Derler, E. A. Lee, and A. S. Vincentelli. Modeling cyber-physical systems. Proceedings of the IEEE, 100(1):13–28, Jan 2012.
[16] D. Dolev and A. C. Yao. On the security of public key protocols. IEEE Transactions on Information Theory, 29(2):198–207, 1983.
[17] A. Doupé, M. Cova, and G. Vigna. Why Johnny Can’t Pentest: An Analysis of Black-Box Web Vulnerability Scanners, pages 111–131. Springer Berlin Heidelberg, 2010.
[18] B. Feddersen, K. Keefe, W. H. Sanders, C. Muehrcke, D. Parks, A. Crapo, A. Gabaldon, and R. Palla. An ontological model for constructing mobius advise security models. In Proceedings of Conference on Dependable Systems and Networks (DSN), 2015.
[19] M. D. Ford, K. Keefe, E. LeMay, W. H. Sanders, and C. Muehrcke. Implementing the ADVISE security modeling formalism in m¨obius. In IEEE/IFIP Conference on Dependable Systems and Networks (DSN), 2013.
[20] B. Galloway and G. Hancke. Introduction to industrial control networks. Communications Surveys Tutorials, IEEE, 15(2):860–880, 2013.
[21] D. Jackson. Software Abstractions: Logic, Language, and Analysis. The MIT Press, 2006.
[22] K. H. John and M. Tiegelkamp. IEC 61131-3: Programming Industrial Automation Systems Concepts and Programming Languages, Requirements for Programming Systems, Decision-Making Aids. Springer, 2nd edition, 2010.
[23] E. Kang, S. Adepu, D. Jackson, and A. P. Mathur. Model-based security analysis of a water treatment system. In Proceedings of the Workshop on Software Engineering for Smart Cyber-Physical Systems, pages 22–28. ACM, 2016.
[24] E. LeMay, M. D. Ford, K. Keefe, W. H. Sanders, and C. Muehrcke. Model-based security metrics using adversary view security evaluation (ADVISE). In Proceedings of Conference on Quantitative Evaluation of Systems, QEST, 2011.
[25] A. Mathur and N. O. Tippenhauer. A water treatment testbed for research and training on ICS security. In Proceedings of Workshop on Cyber-Physical Systems for Smart Water Networks (CySWater), Apr. 2016.
[26] A. Ornaghi and M. Valleri. Ettercap. https://ettercap.github.io/ettercap/, last visited August 3 2016.
[27] M. Rocchetto, M. Ochoa, and M. Torabi Dashti. Model-based detection of CSRF. In ICT Systems Security and Privacy Protection, volume 428 of IFIP Advances in Information and Communication Technology. Springer Berlin Heidelberg, 2014.
[28] M. Rocchetto and N. O. Tippenhauer. APE (Attacker Profile Examiner), 2016. Available at http://research.scy-phy.net/ape/.
[29] M. Rocchetto and N. O. Tippenhauer. ASLan++ formal model of SWaT, 2016. Available at https://research.scy-phy.net/swatmodel.
[30] M. Rocchetto and N. O. Tippenhauer. CPDY: Extending the Dolev-Yao attacker with physical-layer interactions. In Proceedings of the International Conference on Formal Engineering Methods (ICFEM), 2016.
[31] M. Rocchetto and N. O. Tippenhauer. On attacker models and profiles for cyber-physical systems. In Proceedings of the European Symposium on Research in Computer Security (ESORICS), 2016.
[32] P. Schaller, B. Schmidt, D. A. Basin, and S. Capkun. Modeling and verifying physical properties of security protocols for wireless networks. In Computer Security Foundations Symposium (CSF), pages 109–123, 2009.
[33] V. Schiffer, D. Vangompel, and R. Voss. The common industrial protocol (CIP) and the family of CIP networks. ODVA, 2006.
[34] M. Schmidt and H. Lipson. Distilling free-form natural laws from experimental data. Science, 324(5923):81–85, 2009.
[35] R. Software. Studio 5000 R. http://www.rockwellautomation.com/rockwellsoftware/products/studio-5000.page, last visited August 3 2016.
[36] D. Steinmetzer, M. Schulz, and M. Hollick. Lockpicking physical layer key exchange: Weak adversary models invite the thief. In Proc. ACM Conference Wireless Security (WiSec), 2015.
[37] M. Turuani. The CL-Atse Protocol Analyser. In RTA, LNCS 4098, 2006.
[38] D. Urbina, J. Giraldo, N. O. Tippenhauer, and A. Cardenas. Attacking fieldbus communications in ICS: Applications to the SWaT testbed. In Proceedings of Singapore Cyber Security R&D Conference (SG-CRC), Jan. 2016.
[39] R. Vigo. The cyber-physical attacker. In Proceedings of Workshop of Conference on Computer Safety, Reliability, and Security (SAFECOMP), 2012.
[40] D. von Oheimb and S. Mödersheim. ASLan++ — a formal security specification language for distributed systems. In FMCO, LNCS 6957. Springer, 2010.
[41] A. H. Vu, N. O. Tippenhauer, B. Chen, D. M. Nicol, and Z. Kalbarczyk. CyberSAGE: A tool for automatic security assessment of cyber-physical systems. In Proceeding of Quantitative Evaluation of Systems (QEST), pages 384–387, 2014.
[42] S. Weinberger. Computer security: Is this the start of cyberwarfare? Nature, 174:142–145, June 2011.

## Appendix
### A. SWaT Processes
The details of the overall process of SWaT are depicted in Figure 5. The picture represents the initial status of the system model that we have considered in our formal assessment. The level of the water inside the tanks is at an optimal status (neither high nor low), all the manual valves are open, all the pumps are closed, and only the first motorized valve MV101 is open (i.e., the water in T101 is filling up).

![Figure 5: The details of the SWaT components and connections. The tag MaV is for manual valve, MV for motorized valve, T for tank, AIT for Analyzer Indicator Transmitter, FIT for Flow Indicator Transmitter, PIT for Pressure Indicator Transmitter](path_to_figure_5)

---

This revised version of the text is more structured, clear, and professional. It includes a logical flow, improved readability, and a coherent presentation of the research and its findings.