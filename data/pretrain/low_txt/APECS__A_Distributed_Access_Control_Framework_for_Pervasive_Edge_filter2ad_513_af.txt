### Performance Comparison

APECS PKC achieved a latency of 186 milliseconds, followed by the Cloud access control with 262 milliseconds. Notably, APECS significantly reduced the Cloud access control latency by 50%, despite performing mutual access control between users and PEC servers (whereas the Cloud prototype only performs user authentication and authorization). This highlights the trade-off between simplicity and efficiency in APECS and APECS PKC: APECS PKC’s simpler design comes with a higher mutual authentication latency (approximately 50% increase), which is undesirable in many dynamic edge applications.

### Table 2: Averaged Latency (Milliseconds) Across Three Approaches

| Operation                       | APECS   | APECS PKC | Cloud  |
|---------------------------------|---------|-----------|--------|
| Service Discovery               | —       | 69.5      | —      |
| Symmetric Encryption            | 0.7     | —         | —      |
| ABE Encryption                  | 39.0    | —         | —      |
| Request Signing                 | 35.6    | —         | —      |
| Network/System Latency          | 5.8     | 79.5      | 252.0  |
| User Token Verification         | 4.8     | 5.8       | 9.6    |
| Edge Token Verification         | —       | —         | —      |
| Request Signature Verification  | 2.7     | —         | —      |
| ABE Decryption                  | 33.8    | —         | —      |
| Symmetric Decryption            | 0.5     | —         | —      |
| Total                           | 122.7   | 186.1     | 261.6  |

### Figure 6: Benchmark Timing of Multi-Authority Attribute-Based Encryption [3] Across Multiple Platforms

For APECS PKC, we implemented a basic service discovery process, where the user securely obtains a list of eligible PEC servers from the base station before making a service request. Note that, as our focus is on access control, service discovery is outside the scope of this paper. In APECS PKC, the end-to-end latency includes service discovery and is primarily due to the secure communication between the user and PEC server (both using TLS connections). In the cloud-based access control, the secure communication between the user and the Cloud is the main contributor to the authentication latency.

Table 2 provides the averaged timing for each individual operation in APECS, APECS PKC, and Cloud. Missing values indicate operations not required in the respective approaches. The network latency in APECS PKC and Cloud includes the setup, encryption, and decryption in the TLS; no ABE operations are used in these two approaches.

### Figure 8: Access Control Enforcement Throughput for Static and Dynamic Service Requests on Two Platforms

We benchmarked the throughput of APECS and APECS PKC on a single PEC server. Throughput is defined as the number of authentication and authorization operations a PEC server can perform per unit time (Figure 8). To eliminate network and communication latency, all four components of APECS were run on the same machine (the one being tested). In this experiment, the user sent 1000 service requests to the PEC server. Note that service request processing does not include service execution (e.g., image annotation) to clearly identify the throughput of the access control process.

For APECS, when processing static service requests, the PEC server running on the Desktop processed an average of 71 requests per second, while the Handheld processed 36 requests per second (Figure 8(a)). For dynamic service requests, the Desktop processed 22 requests per second, and the Handheld processed 14 requests per second. This was expected, as dynamic service request processing involves MABE encryption and decryption, which are more computationally intensive than the cryptographic operations in static request processing.

APECS PKC processed an average of 16 and 11 static service requests per second on the Desktop and Handheld devices, respectively (Figure 8(b)). For dynamic service requests, APECS PKC processed 14 and 9 requests per second for the Desktop and Handheld devices, respectively. Overall, APECS outperformed APECS PKC for both static and dynamic service requests. For static service requests, this result was expected since APECS does not use MABE encryption and decryption, while APECS PKC uses a TLS channel for communication. For dynamic service requests, despite APECS using costly MABE operations, it outperformed APECS PKC, indicating that MABE operations in APECS are more efficient than establishing TLS sessions in APECS PKC.

### Table 3: APECS Communication Complexity

| Operation                   | Complexity  |
|-----------------------------|-------------|
| Provider Registration       | O(1)        |
| PEC Server Registration     | O(|P + B|)  |
| User Registration           | O(1)        |
| Service/Data Request/Response| O(1)        |
| User Revocation             | O(|E|)      |
| PEC Revocation              | O(|P + E|)  |

The service provider registration process incurs constant communication complexity, requiring a round trip between the provider and the Cloud. Registering a PEC server requires a round trip between the PEC server and each of the AIAs, leading to O(|P + B|) communication complexity per PEC server. Each PEC server must obtain attributes from all AIAs corresponding to the providers. In APECS, the number of providers and base stations is constant. User registration requires a round trip between the user and the service provider, resulting in constant communication complexity. Similarly, service request and response incur constant communication complexity (we discount the potential need for multiple packets based on payload size). User revocation involves delivering the revoked token from the Cloud to the relevant PEC servers, resulting in O(|E|) communication complexity. Revoking a PEC server involves a round trip from the service provider to the base station, interaction among the AIAs for distributing the base station’s new key, and distributing new attributes to the connected PEC servers, resulting in O(|P + E|) communication complexity.

### Conclusions

In this paper, we proposed APECS, a distributed access control mechanism for the dynamic PEC ecosystem. APECS delegates authentication and authorization tasks to PEC servers and utilizes capability-based tokens and multi-authority ABE with an efficient revocation mechanism, eliminating the need for system-wide re-keying—a major drawback of ABE schemes. We also proposed APECS PKC, an alternative design suitable for synchronous interactions between consumers and PEC servers. Our evaluations demonstrated the practicality of our mechanisms.

### Acknowledgements

This research was supported in part by Intel Labs, US NSF awards #1800088, #2028797, #1914635, EPSCoR Cooperative agreement #OIA-1757207, US DoE SETO grant #DE-EE0008774, and the US Federal Aviation Administration (FAA). Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF, DoE, FAA, or Intel Corp. We thank Austin Bos for his contribution to the system implementation, Dr. Mattijs Jonker for his helpful shepherding, and the anonymous reviewers for their insightful feedback and suggestions.

### References

[1] M. Berman, J. Chase, L. Landweber, A. Nakao, M. Ott, D. Raychaudhuri, R. Ricci, and I. Seskar. 2014. GENI: A federated testbed for innovative network experiments. Computer Networks 61 (2014), 5–23.

[2] Ran Canetti. 2001. Universally Composable Security: A New Paradigm for Cryptographic Protocols. In 42nd Annual Symposium on Foundations of Computer Science, FOCS. IEEE, 136–145.

[3] Melissa Chase and Sherman S. M. Chow. 2009. Improving privacy and security in multi-authority attribute-based encryption. In Proceedings of the 2009 ACM Conference on Computer and Communications Security, CCS 2009, Chicago, Illinois, USA, November 9-13, 2009. ACM, 121–130.

[4] Cisco. 2017. Cisco Visual Networking Index: Global Mobile Data Traffic Forecast Update, 2016–2021 White Paper. http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/mobile-white-paper-c11-520862.html.

[5] Cisco. 2017. Zettabyte Era: Trends and Analysis. http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/vni-hyperconnectivity-wp.html.

[6] Michael W Condry and Catherine Blackadar Nelson. 2016. Using smart edge IoT devices for safer, rapid response with industry IoT control operations. Proc. IEEE 104, 5 (2016), 938–946.

[7] Hui Cui, Xun Yi, and Surya Nepal. 2018. Achieving scalable access control over encrypted data for edge computing networks. IEEE Access 6 (2018), 30049–30059.

[8] Kai Fan, Qiang Pan, Junxiong Wang, Tingting Liu, Hui Li, and Yintang Yang. 2018. Cross-domain based data sharing scheme in cooperative edge computing. In 2018 IEEE International Conference on Edge Computing (EDGE). IEEE, 87–92.

[9] C. Freitag, J. Katz, and N. Klein. 2017. Symmetric-key broadcast encryption: The multi-sender case. In International Conference on Cyber Security Cryptography and Machine Learning. Springer, 200–214.

[10] Giulio Grassi, Kyle Jamieson, Paramvir Bahl, and Giovanni Pau. 2017. Parkmaster: An in-vehicle, edge-based video analytics service for detecting open parking spaces in urban environments. In Proceedings of the Second ACM/IEEE Symposium on Edge Computing. IEEE/ACM, 1–14.

[11] Dick Hardt et al. 2012. The OAuth 2.0 authorization framework. Technical Report. RFC 6749, October.

[12] Ruei-Hau Hsu, Jemin Lee, Tony QS Quek, and Jyh-Cheng Chen. 2018. Reconfigurable security: Edge-computing-based framework for IoT. IEEE Network 32, 5 (2018), 92–99.

[13] Kaiqing Huang. 2019. Multi-Authority Attribute-Based Encryption for Resource-Constrained Users in Edge Computing. In 2019 International Conference on Information Technology and Computer Application (ITCA). IEEE, 323–326.

[14] Mingxin Ma, Guozhen Shi, and Fenghua Li. 2019. Privacy-oriented blockchain-based distributed key management architecture for hierarchical access control in the IoT scenario. IEEE Access 7 (2019), 34045–34059.

[15] Zhuo Ma, Junwei Zhang, Yongzhen Guo, Yang Liu, Ximeng Liu, and Wei He. 2020. An efficient decentralized key management mechanism for VANET with blockchain. IEEE Transactions on Vehicular Technology 69, 6 (2020), 5836–5849.

[16] Satyajayant Misra, Reza Tourani, and Nahid Ebrahimi Majd. 2013. Secure content delivery in information-centric networks: Design, implementation, and analyses. In Proceedings of the 3rd ACM SIGCOMM workshop on Information-centric networking. ACM, 73–78.

[17] Satyajayant Misra, Reza Tourani, Frank Natividad, Travis Mick, Nahid Ebrahimi Majd, and Hong Huang. 2017. AccConF: An access control framework for leveraging in-network cached data in the ICN-enabled wireless edge. IEEE transactions on dependable and secure computing 16, 1 (2017), 5–17.

[18] Muhammad Baqer Mollah, Md Abul Kalam Azad, and Athanasios Vasilakos. 2017. Secure data sharing and searching at the edge of cloud-assisted internet of things. IEEE Cloud Computing 4, 1 (2017), 34–42.

[19] Aafaf Ouaddah, Anas Abou Elkalam, and Abdellah Ait Ouahman. 2017. Towards a novel privacy-preserving access control model based on blockchain technology in IoT. In Europe and MENA Cooperation Advances in Information and Communication Technologies. Springer, 523–533.

[20] Yuwen Pu, Chunqiang Hu, Shaojiang Deng, and Arwa Alrawais. 2020. RPEDS: A Recoverable and Revocable Privacy-Preserving Edge Data Sharing Scheme. IEEE Internet of Things Journal 7, 9 (2020), 8077–8089.

[21] Tarik Taleb, Konstantinos Samdanis, Badr Mada, Hannu Flinck, Sunny Dutta, and Dario Sabella. 2017. On multi-access edge computing: A survey of the emerging 5G network edge cloud architecture and orchestration. IEEE Communications Surveys & Tutorials 19, 3 (2017), 1657–1681.

[22] Reza Tourani, Satyajayant Misra, Travis Mick, and Gaurav Panwar. 2017. Security, Privacy, and Access Control in Information-Centric Networking: A Survey. IEEE Communications Surveys & Tutorials (2017).

[23] Reza Tourani, Srikathyayani Srikanteswara, Satyajayant Misra, Richard Chow, Lily Yang, Xiruo Liu, and Yi Zhang. 2020. Democratizing the Edge: A Pervasive Edge Computing Framework. arXiv preprint arXiv:2007.00641 1, 1 (2020), 1–7.

[24] Reza Tourani, Ray Stubbs, and Satyajayant Misra. 2018. TACTIC: Tag-based access control framework for the information-centric wireless edge networks. In International Conference on Distributed Computing Systems. IEEE, 456–466.

[25] Junjue Wang, Ziqiang Feng, Shilpa George, Roger Iyengar, Padmanabhan Pillai, and Mahadev Satyanarayanan. 2019. Towards scalable edge-native applications. In Proceedings of the 4th ACM/IEEE Symposium on Edge Computing. IEEE/ACM, 152–165.

[26] Kaiping Xue, Weikeng Chen, Wei Li, Jianan Hong, and Peilin Hong. 2018. Combining data owner-side and cloud-side access control for encrypted cloud storage. IEEE Transactions on Information Forensics and Security 13, 8 (2018), 2062–2074.

[27] Kaiping Xue, Peixuan He, Xiang Zhang, Qiudong Xia, David SL Wei, Hao Yue, and Feng Wu. 2019. A Secure, Efficient, and Accountable Edge-Based Access Control Framework for Information Centric Networks. IEEE/ACM Transactions on Networking 27, 3 (2019), 1220–1233.

[28] K. Xue, X. Zhang, Q. Xia, D. Wei, H. Yue, and F. Wu. 2018. SEAF: A secure, efficient and accountable access control framework for information centric networking. In Conference on Computer Communications. IEEE, 2213–2221.

[29] Kan Yang, Jobin J Sunny, and Lan Wang. 2018. Blockchain-based decentralization for secure and efficient access control in the Internet of Things. In 2018 IEEE International Conference on Blockchain (Blockchain). IEEE, 1–8.