It appears that the text you've provided contains a mix of non-printable characters, symbols, and references to an academic paper on key recovery systems. I will reconstruct and optimize the main content of the document, focusing on clarity, coherence, and professionalism. Here is the revised version:

---

### Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003)
**1063-9527/03 $17.00 Â© 2003 IEEE**
*Authorized licensed use limited to: Tsinghua University. Downloaded on March 25, 2021 at 07:44:10 UTC from IEEE Xplore. Restrictions apply.*

## Secure Key Recovery (SKR) with Multiple Agents

### Abstract
In the SKR (two-phased cryptographic secure key recovery) system, the recovery service is provided by a recovery provider and two or more Key Recovery Agents (KRAs) within the recovery provider domain. The receiver of the message does not need to know the identification and public keys of the chosen KRAs. This reduces the possibility of collusion among KRAs.

### Key Features of SKR
1. **Public Encryption Operation**: Involves a costly public encryption operation performed once using key recovery information (KRI) from phase 1.
2. **Session-Key Fork/Join**: A 128-bit session-key is not physically divided into intermediate keys. Instead, n randomized 128-bit intermediate keys are generated by exclusive-or (XOR) operations with n secret values. This preserves cryptographic complexity.
3. **Key-Encrypting Keys (KK)**: KKs are derived from key-generating (KG) keys using a key derivation procedure tightly coupled with the unique public KRI associated with the key being protected by SKR.
4. **Security and Integrity**: The security and integrity of the key recovery service are exponentially increased by increasing the number of KRAs. However, there is a trade-off between security and performance.

### Implementation and Analysis
- **Multiple Agent Based Key Recovery Protocol**: This protocol is suitable for cryptographic applications where sessions can be easily aggregated into a session group. The requester knows the KRAs of the sender because they are fixed.
- **Pictorial and Formal Modeling**: The protocol is modeled and analyzed using an Extended Cryptographic Timed Petri Net (ECTPN). The ECTPN model includes various modeling conventions such as cryptographic component transitions and macro transitions, making it a useful tool for any kind of cryptographic protocol.

### Discussion
- **Secret Choice of KRAs**: The sender of the cryptographic message, who generates the key recovery information, can secretly choose their KRAs.
- **Comparison with Conventional Protocols**: The multiple agent-based key recovery protocol offers enhanced security and integrity through key encapsulation, protocol generalization, and fork/join of session-keys by random keys.

### Conclusion
The multiple agent-based key recovery protocol is a new key encapsulation approach characterized by its key encapsulation, protocol generalization, secret choice of KRAs, and fork/join of session-keys by random keys. The ECTPN model is a useful tool for pictorial modeling, analysis, and component-based implementation of cryptographic protocols.

### References
1. Technology Committee of Key Recovery Alliance, "Cryptographic Information Recovery using Key Recovery," A Working Paper, Version 1.2, http://www.kra.org, Aug. 1997.
2. Dorothy E. Denning and Dennis K. Branstad, "A Taxonomy for Key Escrow Encryption Systems," Communications of the ACM, Vol. 39, No. 3, pp. 34-40, 1996.
3. Ravi Ganesan, "How To Use Key Escrow," Communications of the ACM, Vol. 39, No. 3, p. 33, 1996.
4. Jingmin He and Ed Dawson, "A New Key Escrow Cryptosystem," Lecture Notes in Computer Science, Vol. 1029, pp. 105-113, 1995.
5. Yung-Cheng Lee and Chi-Sung Laih, "On the key recovery of the Key Escrow System," Proceedings of the 13th Annual Computer Security Applications Conference, pp. 216-220, 1997.
6. Ravi Ganesan, "The Yaksha Security System," Communications of the ACM, Vol. 39, No. 3, 1996.
7. Jefferies, N., Mitchell, C. and Walker, M., "A Proposed Architecture for Trusted Third Party Services," Lecture Notes in Computer Science, Vol. 1029, pp. 98-104, 1995.
8. D. P. Maher, "Crypto Backup and Key Escrow," Communications of the ACM, Vol. 39, No. 3, pp. 48-53, 1996.
9. Stephen T. Walker, Steven B. Lipner, Carl M. Ellison, and David M. Balenson, "Commercial Key Recovery," Communications of the ACM, Vol. 39, No. 3, pp. 41-47, 1996.
10. M. Markowitz and R. Schlafly, "Key Recovery in SecretAgent," Digital Signature, 1997.
11. Cylink Corp., "CyKey, A Key Recovery System for Commercial Environments," http://www.cylink.com, 1998.
12. R. Gennaro, et al., "Secure Key Recovery," IBM Thomas J. Watson Research Center, 1999.
13. James Peterson, J., "Petri Nets Theory and the Modeling of Systems," Prentice-Hall, 1982.
14. Zuberak, W., "Timed Petri Nets: Definitions, Properties, and Applications," Microelectronics and Reliability, Vol. 31, pp. 627-644, 1991.
15. Varadhajan, V., "Petri Net based Modeling of Information Flow Security Requirements," Proc. of the Computer Security Foundations Workshop III, pp. 51-61, 1990.
16. Gang-Soo Lee and Jin-seok Lee, "Petri Net based Models for Specification and Analysis of Cryptographic Protocols," Journal of Systems and Software, Vol. 37, pp. 141-159, 1997.
17. Korea Information Security Agency, Korean Certification-based Digital Signature Algorithm, 1997.
18. Pressman, R. S., "Software Engineering: A Practitioner's Approach," third edition, McGraw-Hill, 1992.
19. B. Schneier, "Applied Cryptography," second edition, Wiley & Sons, 1996.
20. Requirements for Key Recovery Products, Final Report, Federal Information Processing Standard for Federal Key Management Infrastructure, http://csrc.nist.gov/keyrecovery/, Nov. 1998.

---

This optimized version should provide a clearer and more professional presentation of the content.