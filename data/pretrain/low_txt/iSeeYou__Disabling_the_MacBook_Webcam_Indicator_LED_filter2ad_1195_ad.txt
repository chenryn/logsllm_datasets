### Theoretical Possibility of Disabling Webcam Indicator Lights

The discussion around the possibility of disabling the webcam indicator light, often referred to as "the slave" in certain subcommunities, is a topic of significant interest. A user named "Jabaar" notes that "[p]eople have been trying to figure this out for a very long time. The light won’t be able to be disabled as it is built into the hardware." This sentiment is echoed by others, such as "Capital Steez," who states that there is "no way to disable it," and "FBITM," who concurs that "there [i]s no way to do" it.

However, some suggest using social engineering to convince the victim that the LED is functioning normally. For example, "Orochimaru" writes, "You can’t physically turn it off, but you can use social engineering to fool them. Maybe send an error or warning message box that says ‘Camera is now updating, please do not disturb’ or something similar." These discussions are common on forums like Hack Forums, where users express a strong desire for the capability to disable the LED, though they generally believe it is not possible.

### Implications of Covert Video Capture

The implications of surreptitiously capturing video go beyond privacy violations. As passwords become less reliable, some companies are turning to biometric identification, particularly facial recognition via webcams. For instance, BioID offers software-as-a-service for biometric identification using webcams, and Luxand’s FaceSDK is a cross-platform development kit for identifying users through their webcams.

In principle, facial recognition can be easily defeated by providing the expected image or video to the authentication system. Malware capable of capturing video can replay it to authenticate to the service. This is not a new attack; the Android Face Unlock system was quickly compromised by holding a picture of the face in front of the camera. Duc and Minh [16] describe the weaknesses of several facial recognition systems when presented with pictures. By disabling the indicator LED before capturing video, victims would have no way of knowing that their accounts may be compromised.

### Legitimate Use Cases for Disabling the LED

While the ability to disable the LED can lead to serious privacy and security issues, there are at least two legitimate use cases. First, some individuals prefer to record without the LED being on. Although we do not find this compelling due to the potential risks, others may value this more than we do.

The second, more compelling use case is for laptop recovery. For example, the OS X version of Adeona software captures images using the laptop’s internal iSight camera to aid in the recovery of stolen laptops by taking pictures of the thief. Similarly, the LANrev software used in the Lower Merion School District incident had a "Theft Track" feature that allowed school officials to obtain pictures of students. In these scenarios, it is beneficial to keep the LED off so that the thief is unaware of being observed.

### Responsible Disclosure

The authors followed responsible disclosure practices by informing Apple's product security team about the LED disabling vulnerability on July 16, 2013, and the virtual machine escape on August 1, 2013. The disclosures included the source code for iSeeYou and the virtual machine escape, along with instructions for mounting both attacks. Apple employees followed up several times but did not inform us of any mitigation plans. The iSightDefender code was also provided to Apple and is now publicly available.

### Conclusions and Future Work

The engineering details of privacy technologies have real-world consequences. As discussed, computer users today face various adversaries, from law enforcement and school officials to criminals, who want to capture images or video covertly. The only current technological barrier is the camera-on indicator LED. We have shown that, in some cases, this barrier can be overcome.

Specifically, we demonstrated that reprogramming the iSight from user space is a powerful capability. Coupled with the hardware design flaw that allows the indicator LED hardware interlocks to be bypassed, malware can covertly capture video for spying or to break facial recognition authentication. While the iSightDefender defense raises the bar for malware, including RATs, to take control of the camera without detection, the correct solution is a hardware-based one.

In this paper, we examined only a single generation of webcams from one manufacturer. Future work will expand the scope to include newer Apple webcams and webcams in other popular laptop brands. The virtual machine escape described in Appendix A highlights the dangers of reprogrammable peripheral devices. We plan to conduct a broader examination of these devices to understand the security implications of connecting devices that can, under attacker control, mimic a wide range of other devices. One promising direction is to study how drivers react to malformed or malicious responses from devices. In the worst case, a user-space program could reprogram a peripheral device to exploit a poorly written driver and inject code into the kernel.

### Acknowledgments

We thank the anonymous reviewers for their detailed comments and helpful suggestions. We also thank Brian Kantor, Nick Landi, Eric Rescorla, Stefan Savage, Hovav Shacham, and Cynthia Taylor for many helpful discussions throughout this work, and Kevin Mantey for letting us borrow test equipment and providing technical assistance.

### References

[1] Nate Anderson. Meet the men who spy on women through their webcams. ars technica, March 2013. Online: http://arstechnica.com/tech-policy/2013/03/rat-breeders-meet-the-men-who-spy-on-women-through-their-webcams/.

[2] I/O Kit Fundamentals: Driver and Device Matching. Apple Inc., May 2007. Online: https://developer.apple.com/library/mac/#documentation/devicedrivers/conceptual/IOKitFundamentals/Matching/Matching.html.

[3] QTKit Framework Reference. Apple Inc., February 2009. Online: http://developer.apple.com/library/mac/#documentation/QuickTime/Reference/QTCocoaObjCKit/_index.html.

[4] App Sandbox Design Guide. Apple Inc., March 2013. Online: https://developer.apple.com/library/mac/#documentation/Security/Conceptual/AppSandboxDesignGuide/AboutAppSandbox/AboutAppSandbox.html.

[5] Ballard Spahr. Lower Merion School District forensics analysis: Initial LANrev system findings, May 2010. Online: http://www.scribd.com/doc/30891576/LMSD-Initial-LANrev-System-findings. Redacted.

[6] Ballard Spahr. Report of independent investigation: Regarding remote monitoring of student laptop computers by the Lower Merion School District, May 2010. Online: http://www.social-engineer.org/resources/100503_ballard_spahr_report.pdf.

[7] Étienne Bersac. iSight Firmware Tools. October 2009. Online: https://launchpad.net/isight-firmware-tools.

[8] BioID, Inc. The easy, secure way to log in and manage online identities and accounts. 2013. Online: http://mybioid.com/index.php?id=67. Last accessed: 2013-08-06.

[9] Matt Brian. Android 4.0 Face Unlock feature defeated using a photo. The Next Web, November 2011. Online: http://thenextweb.com/google/2011/11/11/android-4-0-face-unlock-feature-defeated-using-a-photo-video/.

[10] camJAMR.com. 2012. camJAMR.com webcam covers. Online: http://store.camjamr.com/shop-now/camjamr-webcam-covers.html. Last accessed: 2013-08-07.

[11] Stephen Checkoway, Damon McCoy, Danny Anderson, Brian Kantor, Hovav Shacham, Stefan Savage, Karl Koscher, Alexei Czeskis, Franziska Roesner, and Tadayoshi Kohno. Comprehensive experimental analyses of automotive attack surfaces. In David Wagner, editor, Proceedings of USENIX Security 2011. USENIX, August 2011. Online: http://www.autosec.org/pubs/cars-usenixsec2011.pdf.

[12] CoreLabs, Core Security Technologies. Apple OS X Sandbox predefined profiles bypass. November 2011. Online: http://www.coresecurity.com/content/apple-osx-sandbox-bypass.

[13] EZ-USB R Technical Reference Manual. Cypress Semiconductor Corporation, 2011. Online: http://www.cypress.com/?docID=27095&dlm=1.

[14] Cypress Semiconductor Corporation. CY3684 EZ-USB FX2LP Development Kit. 2013. Online: http://www.cypress.com/?rID=14321.

[15] Alex Dobuzinskis. California man agrees to plead guilty to extortion of Miss Teen USA. Reuters, October 2013. Online: http://www.reuters.com/article/2013/10/31/us-usa-missteen-extortion-idUSBRE99U1G520131031.

[16] Nguyen Minh Duc and Bui Quang Minh. Your face is NOT your password: Face authentication bypassing Lenovo – Asus – Toshiba. Presented at BlackHat Briefings, July 2009. Online: https://www.blackhat.com/html/bh-usa-09/bh-us-09-main.html.

[17] Loïc Duflot and Yves-Alexis Perez. Can you still trust your network card? Presented at CanSecWest 2010, March 2010. Online: http://www.ssi.gouv.fr/IMG/pdf/csw-trustnetworkcard.pdf.

[18] Loïc Duflot, Yves-Alexis Perez, and Benjamin Morin. What if you can’t trust your network card? In Robin Sommer, Davide Balzarotti, and Gregor Maier, editors, Proceedings of RAID 2011, pages 378–397. Springer, September 2011. Online: http://www.ssi.gouv.fr/IMG/pdf/paper.pdf.

[19] Monta Elkins. Hacking with hardware: Introducing the universal RF USB keyboard emulation device: URFUKED. Presented at DefCon 18, August 2010. Online: http://www.youtube.com/watch?v=EayD3V77dI4.

[20] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox, Jaeyeon Jung, Patrick McDaniel, and Anmol N. Sheth. TaintDroid: An information-flow tracking system for realtime privacy monitoring on smartphones. In Remzi Arpaci-Dusseau and Brad Chen, editors, Proceedings of OSDI 2010. USENIX, October 2010. Online: http://static.usenix.org/events/osdi10/tech/full_papers/Enck.pdf.

[21] Dan Farmer. IPMI: Freight train to hell, January 2013. Online: http://fish2.com/ipmi/itrain.pdf.

[22] Clint Gibler, Jonathan Crussell, Jeremy Erickson, and Hao Chen. AndroidLeaks: Automatically detecting potential privacy leaks in Android applications on a large scale. In Stefan Katzenbeisser, Edgar Weippl, L. Jean Camp, Melanie Volkamer, Mike Reiter, and Xinwen Zhang, editors, Trust and Trustworthy Computing, volume 7344 of Lecture Notes in Computer Science, pages 291–307. Springer Berlin Heidelberg, 2012. doi: 10.1007/978-3-642-30921-2_17.

[23] Jeremiah Grossman. Clickjacking: Web pages can see and hear you. October 2008. Online: http://jeremiahgrossman.blogspot.com/2008/10/clickjacking-web-pages-can-see-and-hear.html.

[24] Hugh Hart. April 14, 1996: JenniCam starts lifecasting. Wired Magazine, April 2010. Online: http://www.wired.com/thisdayintech/2010/04/0414jennicam-launches/.

[25] Hex-Rays. IDA: About. January 2014. Online: https://www.hex-rays.com/products/ida/.

[26] Peter Hornyack, Seungyeop Han, Jaeyeon Jung, Stuart Schechter, and David Wetherall. ‘These aren’t the droids you’re looking for’: Retrofitting Android to protect data from imperious applications. In George Danezis and Vitaly Shmatikov, editors, Proceedings of CCS 2011. ACM Press, October 2011. Online: https://research.microsoft.com/pubs/149596/AppFence.pdf.

[27] Jon Howell and Stuart Schechter. What you see is what they get: Protecting users from unwanted use of microphones, cameras, and other sensors. In Collin Jackson, editor, Proceedings of W2SP 2010. IEEE Computer Society, May 2010. Online: