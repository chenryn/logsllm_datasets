# 优化后的文本

## 图14：剪枝算法与最佳性能的比较

在简单选择两者中的第一个时，差异并不显著。我们还注意到，静态版本的剪枝算法性能几乎相同，并且比直接路径略差（平均不超过1%）。如上所述，Akamai仅优化了一跳路径的源部分，因此有时可能会将客户端导向速度较慢的一跳路径。由于这些算法的静态版本无法“双重检查”Akamai，它们可能会因为坚持使用一跳路径而受到性能损失。

## 6. 讨论与相关工作

在本节中，我们将讨论与研究相关的几个问题，并介绍与本文主题相关的工作。

### 6.1 讨论

**Akarouting**  
Akamai建立了一个私有的专有网络测量系统和覆盖网络。该系统的一个目标是通过其网络测量找到“高速”互联网路径，以提高下载速度。此外，Akamai采用了一跳源路由技术来从客户源服务器（例如NYTimes.com）传输内容到边缘服务器，他们称之为Akarouting [7]。Akarouting与我们的方法之间的根本区别在于：我们利用Akamai的客户端到服务器重定向来定位并利用可能的高质量绕行点，在一个独立的覆盖网络中进行操作。

此外，值得注意的是，在我们的实验中，Akamai驱动的一跳源路由并未通过Akamai专有网络进行路由。我们的ping和traceroute测量确认了从PL节点到Akamai边缘服务器的路由采用了公共互联网路径。

**免费搭车Akamai**  
很可能Akamai或其他CDN不希望第三方利用其测量结果为自己的目的服务。然而，重要的是要认识到，即使在更大规模的覆盖网络部署中，我们所提出的技术对Akamai DNS基础设施造成的负载相对于其常规客户端已经经历的负载来说可能是微不足道的。这是因为Akamai CDN托管了一些最受欢迎的网站，并保持了边缘服务器DNS条目的小TTL值。因此，低级别的Akamai DNS服务器已经承受了非常高的负载。这意味着所提出的技术不应危及Akamai的性能。此外，我们认为任何试图检测“免费搭车”节点的努力都可能面临非零的误报和漏报，从而不必要的降低常规客户端的性能。最后，需要注意的是，所提出的技术不需要Akamai边缘服务器响应ping请求。尽管我们在验证网络延迟与Akamai重定向之间的相关性时确实使用了ping，但这并不是进行Akamai驱动源路由所必需的。

**广泛采用的影响**  
最后，一个担忧是，如果这种方法成功并被广泛采用，可能会对Akamai识别为“良好”的网络路径的性能产生影响。例如，如果来自特定域的所有客户端都以完全相同的方式使用Akamai的建议，则以前未拥塞的路径可能在短时间内变得拥塞。然而，我们并不期望这种情况成为普遍现象，因为不同的覆盖节点可以选择查询Akamai的DNS服务器以获取大量托管网站中的任何一个（例如，《纽约时报》与亚马逊）。正如第3.2节所述，不同的边缘服务器通常托管不同的网站。因此，来自同一域的覆盖节点将有不同的网络视图，这自然有助于将流量负载分散到不同的网络路径上。

### 6.2 相关工作

关于内容分发网络的使用、有效性和影响已有许多研究。

早期的一项工作中，Gadde等人[11]基于缓存行为的分析模型，分析了内部Web缓存和CDN的有效性。最近的两项研究表明，CDN可以减少平均下载响应时间，但由于DNS重定向技术增加了DNS延迟，也带来了明显的开销[19, 21]。在[20]中，作者研究了内容分发服务器如何改善与源服务器相比的延迟。Johnson等人[16]评估了两个不同CDN在将其镜像之间最优重定向请求的程度，并认为这些CDN似乎使用DNS机制不是为了选择最优服务器，而是为了避免选择较差的服务器。Krishnamurthy等人[21]进行了广泛的CDN使用研究，并提出了研究客户端感知性能的方法。Saroiu等人[31]基于大学边界路由器收集的追踪数据，对四个内容分发系统（包括Akamai）进行了表征。在他们的研究中，Akamai表现为最小带宽消费者（0.2%），而Gnutella、Kazaa和WWW流量消耗了剩余带宽的近60%。除了揭示和理解CDN的行为外，我们的研究使其他网络的客户端能够重用CDN所做的测量，以实现自己的目的。

一些先前的工作解决了基于DNS控制的其他问题，特别是在CDN中的服务器选择上下文中。Shaikh等人[35]评估了基于DNS的服务器选择对DNS的影响；作者发现极低的TTL值（几秒钟）可能会对延迟产生不利影响。在相关工作中，Jung等人[17]表明最常见的TTL值不应显著增加DNS相关的广域网流量。Shaikh等人[35]和Mao等人[25]的研究发现，客户端在网络拓扑上往往与其使用的名称服务器相距甚远，质疑了基于IP地址的服务器选择准确性。在我们的方案中不存在这种问题，因为客户端直接请求DNS解析，而不是通过本地DNS服务器。

CDN驱动的绕行基于并关联于尝试提高客户端可靠性和性能的覆盖路由系统。我们的工作首次提出了依赖CDN的测量来定位和利用高质量的互联网路径，而无需进行广泛的路径探测或监控。Detour研究[33]建议可以通过中间端系统的路由来实现这一点。Resilient Overlay Network (RON)项目在一个小规模的覆盖网络中证明了这一点[5]。然而，这需要背景监测，这是不可扩展的，因此限制了该方法只能用于相对较小的节点集之间的通信。[36]提出的解决方案依赖于覆盖路径的端到端探测和推断底层物理路径段的丢包概率，这同样存在可扩展性限制。

为了限制覆盖层的资源需求，最近的研究集中在减少选择覆盖路径所需的端到端测量。在[28]中，作者提出了一种专门用于拓扑探测的路由下层。借助这一下层，可以使用推断的AS路径信息来构建通信节点之间的不相交路径。这种方法的潜在问题是AS路径推断的准确性。例如，[25]表明AS路径推断的准确性往往低于预期。Gummadi等人[13]通过随机选择k个覆盖节点（random-k）并选择性能最佳的一个来选择中继节点。对于较小的k，显然存在这样的风险：虽然避免了中断，但会放弃一个好的中继节点。实际上，random-k和Akamai驱动的一跳源路由之间的关键区别在于前者旨在通过避免网络中断来提高系统的可靠性，而我们的方案的目标是通过选择并跳过Akamai推荐的质量（低延迟）路径来提高客户端的性能。

MONET通过利用冗余的客户端到Web服务器路径来提高网站的可用性，这些路径的故障模式预计是大部分独立的。客户端通过具有多个本地接口的多宿主本地MONET代理联系Web站点。MONET通过一个覆盖网络中的对等代理探针给定的源服务器，使用TCP SYN按需请求[6]，从而增加了替代路径的数量。毫无疑问，CDN驱动的绕行有可能改进上述系统的性能；不仅通过更有效地避免网络中断和热点，还通过消除对多个互联网路径进行探测的需求，从而减轻Web服务器上的TCP SYN压力。

另一项密切相关的工作中，Fei等人[10]使用从traceroute推断出的AS级路径信息来减少一跳路由候选集的大小。目的是通过仅检查源和目的地之间的路径上尽早分歧的节点来限制选择中间跳点的开销。虽然能够避免直接路径的性能下降，但尚不清楚所提出的技术如何扩展到在线动态选择中间节点。此外，所提出的启发式方法通常会产生大量的潜在中间节点（多达50个），由于AS级路径不相交性的粗分辨率，这些节点可能不包含好的候选者。CDN驱动的绕行通常基于CDN作为其正常操作的一部分所执行的测量结果选择少量候选者。

最后，我们的工作受到了Sting [32]、T-BIT [26]和King [14]等工具的启发，这些工具以意想不到的方式使用现有协议来获得以前难以解决的结果[14]。

## 7. 结论

在本文中，我们对Akamai CDN进行了广泛的测量研究，目的是确定如何在不进行大量网络测量的情况下推断和利用有关网络状况的质量、短期信息。通过对网络路径的同时测量和频繁刷新的低级别Akamai DNS服务器表的监控，我们展示了以下几点：(i) Akamai服务器重定向与客户端和服务器之间的网络路径状况强烈相关；Akamai选择的路径中有超过70%位于测量网络路径的最佳10%之列。(ii) 对于给定的客户端，相关性水平主要取决于相应低级别Akamai DNS服务器的重定向频率。(iii) 由于较低的重定向频率，来自南美的客户端体验到的相关性水平低于随机或轮询路径选择所能达到的水平。(iv) 由于Akamai客户在边缘服务器上异构托管，所有调查的客户端至少对其中一个客户看到大量的服务器（路径）。(v) 利用网络测量和全球服务器部署的CDN服务可以显著优于使用少数数据中心中的负载均衡服务器集群的传统Web内容分发。

为了提供一个示例应用，我们研究了利用Akamai重定向来驱动大规模覆盖网络中的一跳源路由（即绕行）的潜力。通过对全球散布的节点之间的Akamai驱动一跳与直接路径同时测量和比较，我们展示了以下几点：(i) 在超过50%的调查场景中，通过Akamai发现的节点进行路由比使用直接路径更好。(ii) 在25%的调查场景中，始终遵循Akamai在源处的重定向可以获得比直接路径更好的路径。(iii) 绝大多数亚洲和欧洲之间的Akamai驱动路径属于上述类别；除了避开局部热点外，它们还利用了介于两者之间的丰富Akamai“代理”基础设施——例如在美国。(iv) 其他节点可以应用简单、低开销的技术来决定是坚持直接路径还是跟随Akamai。我们总结指出，Akamai只是众多CDN之一；这些网络是一个巨大的资源，可以以极少的成本甚至免费获得“全球互联网天气报告服务”。

## 8. 参考文献

[1] Akamai and loral cyberstar alliance. http://www.akamai.com/en/html/about/press/press123.html.
[2] Kazaa. http://www.kazaa.com/.
[3] Planetlab. http://www.planet-lab.org/.
[4] Akamai. Akamai CDN. http://www.akamai.com.
[5] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris. Resilient overlay networks. In ACM SOSP, Alberta, Canada, October 2001.
[6] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Rao. Improving web availability for clients with MONET. In NSDI, Boston, MA, May 2005.
[7] C. Bornstein, T. Canfield, and G. Miller. Overlay routing networks (Akarouting), 2002. http://www-math.mit.edu/steng/18.996/lecture9.ps.
[8] C. Bornstein, T. Canfield, G. Miller, and S. Rao. Optimal route selection in a content delivery network. US Patent Application 20020163882.
[9] J. Dilley, B. Maggs, J. Parikh, H. Prokop, and R. Sitaraman. Globally distributed content delivery. IEEE Internet Computing, 6(5):50–58, September 2002.
[10] T. Fei, S. Tao, L. Gao, and R. Guerin. How to select a good alternate path in large peer-to-peer systems? In IEEE INFOCOM, Barcelona, Spain, April 2006.
[11] S. Gadde, J. Chase, and M. Rabinovich. Web caching and content distribution: a view from the interior. In WCW, Boston, MA, June 2000.
[12] P. Gilmore. OARtech, 2001. http://www.osc.edu/oarnet/oartech/presents/oarnet/11apr2001.ppt.
[13] K. Gummadi, H. Madhyastha, S. Gribble, H. Levy, and D. Wetherall. Improving the reliability of Internet paths with one-hop source routing. In USENIX OSDI, San Francisco, CA, December 2004.
[14] K. Gummadi, S. Saroiu, and S. Gribble. King: Estimating latency between arbitrary Internet end hosts. In ACM IMW, Marseille, France, November 2002.
[15] A. Habib and J. Chuang. A measurement-based analysis of residential multihoming. In IEEE INFOCOM, poster session, Miami, FL, March 2005.
[16] K. Johnson, J. Carr, M. Day, and M. Kaashoek. The measured performance of content distribution networks. In WCW, Lisbon, Portugal, May 2000.
[17] J. Jung, E. Sit, H. Balakrishnan, and R. Morris. DNS performance and the effectiveness of caching. IEEE/ACM Transactions on Networking, 10(5):589–603, October 2002.
[18] J. Kangasharju, K. Ross, and J. Roberts. Performance evaluation of redirection schemes in content distribution networks. Computer Communications, 24(2):207–214, February 2001.
[19] M. Koletsou and G. Voelker. The Medusa proxy: A tool for exploring user-perceived web performance. In WCW, Boston, MA, June 2001.
[20] B. Krishnamurthy and C. Wills. Analyzing factors that influence end-to-end web performance. In WCW, Amsterdam, Netherlands, April 2000.
[21] B. Krishnamurthy, C. Wills, and Y. Zhang. On the use and performance of content distribution networks. In ACM IMW, San Francisco, CA, November 2001.
[25] Z. Mao, C. Cranor, F. Douglis, M. Rabinovich, O. Spatscheck, and J. Wang. A precise and efficient evaluation of the proximity between web clients and their local DNS servers. In USENIX Annual Technical Conference, Monterrey, CA, June 2002.
[26] A. Medina, M. Allman, and S. Floyd. Measuring the evolution of transport protocols in the Internet. ACM SIGCOMM Computer Communication Review, 35(2):37–52, April 2005.
[27] Mirror Image. Mirror image CDN. http://www.mirror-image.net.
[28] A. Nakao, L. Peterson, and A. Bavier. A routing underlay for overlay networks. In ACM SIGCOMM, Karlsruhe, Germany, August 2003.
[29] North American Network Operators’ Group. NANOG mailing list. http://www.nanog.org/mailinglist.html, 1999,2000.
[30] J. Padhye, V. Firoiu, D. Towsley, and J. Kurose. Modeling TCP Reno performance: A simple model and its empirical validation. IEEE/ACM Transactions on Networking, 8(2):133–145, April 2000.
[31] S. Saroiu, K. Gummadi, R. Dunn, S. Gribble, and H. Levy. An analysis of Internet content delivery systems. In USENIX OSDI, Boston, MA, December 2002.
[32] S. Savage. Sting: a TCP-based measurement tool. In USENIX Annual Technical Conference, Boulder, CO, October 1999.
[33] S. Savage, A. Collins, E. Hoffman, J. Snell, and T. Anderson. The end-to-end effects of Internet path selection. In ACM SIGCOMM, Vancouver, British Columbia, September 1999.
[34] SAVVIS. Digital island CDN. http://www.savvis.net.
[22] F. Leighton and D. Lewin. Global hosting system. US Patent No. 6,108,703.
[23] LimeLight Networks. Limelight networks CDN. http://www.limelightnetworks.com.
[24] R. Mahajan. How Akamai works? http://www.cs.washington.edu/homes/ratul/akamai.html.
[35] A. Shaikh, R. Tewari, and M. Agrawal. On the effectiveness of DNS-based server selection. In IEEE INFOCOM, Anchorage, AK, April 2001.
[36] C. Tang and P. K. McKinley. A distributed multipath computation framework for overlay network applications. Technical Report MSU-CSE-04-18, Michigan State University, May 2004.