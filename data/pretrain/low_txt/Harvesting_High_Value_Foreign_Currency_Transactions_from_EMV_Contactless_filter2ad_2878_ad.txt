### Message Fields and Their Descriptions

The following is a detailed list of fields included in the message, along with their descriptions and relevant EMV reference numbers:

1. **Primary Account Number (PAN)**
   - **0x5A**: 16-digit card account number.

2. **Processing Code**
   - Indicates the type of transaction being processed.

3. **Transaction Amount**
   - **0x9F02**: The transaction amount.
   - **Converted Transaction Amount**: The transaction amount converted into the currency to be applied to the victim’s card, calculated by the rogue POS terminal.

4. **Reconciliation Amount**
   - **Constant 00**: For goods and purchases.

5. **Date and Time, Transmission**
   - Date and time when the rogue POS transmits the transaction to the bank.

6. **Conversion Rate, Reconciliation**
   - Conversion rate for the reconciliation amount, calculated by the rogue POS terminal.

7. **Conversion Rate, Cardholder Billing**
   - As above; this value is calculated by the rogue POS terminal.

8. **Systems Trace Audit Number (STAN)**
   - Transaction sequence number generated by the rogue POS terminal.

9. **Expiration Date**
   - **0x5F24**: Expiry date of the card (YYMM).

10. **Date/Time of Currency Conversion**
    - Same as the transmission date and time.

11. **Country Code, Acquiring Institution**
    - Country code of the rogue POS terminal (e.g., 0826 for UK, 0840 for USA, 0036 for Australia).

12. **Country Code, Primary Account Number**
    - **0x5F28**: Country code for the card (e.g., 0826 for UK).

13. **Country Code, Forwarding Institution**
    - **0x5F28**: Country code for the bank that issued the card (e.g., 0826 for UK).

14. **Point of Service Entry Mode**
    - Type of POS terminal, constant value “051” for Chip & PIN/EMV contactless terminals.

15. **Card Sequence Number**
    - **0x5F34**: Identifies subsidiary EMV cards issued on the same 16-digit account number.

16. **Point of Service Condition Code**
    - Constant “00” for normal card presentment.

17. **Point of Service PIN Capture Code**
    - Constant “x8xx” indicates a POS terminal that accepts up to 8 digits.

18. **Approval Code Length**
    - Constant set by the acquirer bank.

19. **Acquiring Institution Identification Code**
    - Constant set by the acquirer bank.

20. **Forwarding Institution Identification Code**
    - Constant set by the acquirer bank.

21. **Primary Account Number, Extended**
    - Constant set by the acquirer bank, indicates the institution that will provide the card payment clearing (steps 6 to 9 in Figure 2).
    - Not applicable to Visa – used only when the primary account number begins with “59”.

22. **Action Code (formerly Response Code)**
    - Constant “0xx” for financial transaction request messages.

23. **Card Acceptor Name/Location**
    - Constant string name and location of the merchant.

24. **Currency Code, Transaction**
    - **0x5F2A**: Transaction currency code.

25. **Currency Code, Reconciliation**
    - Currency code for reconciliation, see item 5.

26. **Currency Code, Cardholder Billing**
    - **0x9F42**: Currency code from the card.

27. **Country Code, Receiving Institution**
    - **0x5F28**: Country code for the bank that issued the card (e.g., 0826 for UK).

28. **Receiving Institution Identification Code**
    - Code that identifies the victim’s bank – ISO 7812.

29. **Account Identification 1**
    - Information contained in the 16-digit card account number **0x5A**.

30. **Account Identification 2**
    - Information contained in the 16-digit card account number **0x5A**.

In the above table, data fields from the EMV card data are denoted by their EMV reference number (e.g., 0x5A).

### POS/Acquirer Communication Sequence

Table 3 outlines the communication sequence required for the POS emulation to transmit a transaction to the acquirer bank.

| Message | From → To | Purpose |
|---------|-----------|---------|
| Financial Presentment Request | POS → Acquirer | Requests approval and money transfer by the acquirer. |
| Financial Presentment Response | Acquirer → POS | Contains the answer to the request. |
| Financial Presentment Confirmation | POS → Acquirer | Confirms that the response was received. |

### Test Results

The attack software has been tested against various UK-issued credit/debit cards. Table 4 shows the vulnerability of several different card types.

| Card Type | Max Value | Comment |
|-----------|-----------|---------|
| Visa Credit Cards (UK currency) | £85.00 | Approves multiple transactions until offline limit reached. |
| Visa Credit Cards (Foreign currency) | €999,999.99, $999,999.99 | Approves foreign currency transactions up to the maximum value possible in EMV. |
| Visa Debit Cards (UK currency) | £45.00 | Approves multiple transactions until offline limit reached. |
| Visa Debit Cards (Foreign currency) | €0.00, $0.00 | Declines foreign currency contactless transactions. |
| MasterCard | N/A | Not affected by this attack as the cards request online completion of transactions in local and foreign currencies. |

### Transaction Capture Timings

The Android transaction capture app is designed to operate as quickly as possible, reducing the risk of detection for the attacker. The software automatically collects the fraudulent transaction as soon as it detects a Visa contactless credit or debit card. Table 5 shows the analysis of protocol timings from 20 captured fraudulent transactions.

| Statistics | Time (in milliseconds) |
|------------|------------------------|
| Average transaction duration (card discovery to transaction approval) | 478ms |
| Standard deviation | 36ms |
| Fastest transaction | 452ms |
| Slowest transaction | 527ms |

### Potential Solutions

The key weakness exploited in this paper is that Visa credit cards will authorize unlimited value transactions in a foreign currency, making the attack both scalable and lucrative. The solution can be implemented by changing future Visa credit cards to include one or both of the following:

- **Online Completion of Contactless Foreign Currency Transactions**: Making the transaction subject to additional online verification steps.
- **Forced Chip & PIN Completion for All Foreign Currency Transactions**: This will eliminate the possibility of high-value transactions without the added security of the cardholder's PIN.

### Conclusion

This paper demonstrates that it is possible to collect high-value transactions from contactless Visa credit cards while the card is still in the victim’s pocket. The attack exploits a previously undocumented flaw in the cards, where they approve transactions of unlimited value in a foreign currency. Combined with the lack of POS terminal authentication and the threat of contactless payment card skimming, this vulnerability poses a real risk of high-value fraudulent transactions being harvested and converted into money.

Our experimental results show that the attack could be implemented in the real world because:
- It takes less than 500 milliseconds to collect a transaction.
- NFC-enabled Android phones are cheap and readily available.
- The phone looks innocent if the attacker is challenged by the police or a member of the public.

We have also outlined a scenario by which the captured fraudulent transactions could be exploited by a rogue merchant to access the money in the victim’s bank account. The rogue merchant receives the transactions and passes them off as genuine transactions to their bank. It should be noted that although we have implemented the rogue POS terminal software, we have not tested it against a live acquirer transaction clearing system.

From this, we can conclude that this attack represents a plausible threat to contactless Visa credit cards and can be easily remedied. We have proposed two simple changes in the operation of Visa credit cards that would eliminate the risk posed by this attack, both of which use existing functionality and would be relatively inexpensive to implement.

### Acknowledgments

Our thanks to Feng Hao and Dylan Clarke for proofreading some sections of this paper. The work presented here is partly supported by the UK RCUK Social Inclusion through the Digital Economy (SiDE) EP/G066019/1 project and the UK EPSRC Cybercrime Network EP/K003410/1.

### References

[1] Bond, M., Choudary, O., Murdoch, S.J., Skorobogatov, S., Anderson, R. 2014. Chip and Skim: cloning EMV cards with the pre-play attack. 35th IEEE Symposium on Security and Privacy. [http://arxiv.org/pdf/1209.2531.pdf](http://arxiv.org/pdf/1209.2531.pdf)

[2] Cooper, D. and Barner, J. 2008. Tokeneer ID station EAL5 demonstrator. Technical Report S.P1229.81.1, Altran Praxis.

[3] Drimer, S. and Murdoch, S.J. 2007. Keep Your Enemies Close: Distance Bounding Against Smartcard Relay Attacks. 16th USENIX Security Symposium, Boston, MA, USA. [http://www.cl.cam.ac.uk/~sjm217/papers/usenix07bounding.pdf](http://www.cl.cam.ac.uk/~sjm217/papers/usenix07bounding.pdf)

[4] EMVCo. 2011. EMV Integrated Circuit Card Specifications for Payment Systems – Version 4.3. [http://www.emvco.com/specifications.aspx?id=223](http://www.emvco.com/specifications.aspx?id=223) [Accessed: 22 August 2014]

[5] EMVCo. 2014. EMV Contactless Specifications for Payment Systems – Version 2.4. [http://www.emvco.com/specifications.aspx?id=21](http://www.emvco.com/specifications.aspx?id=21) [Accessed: 22 August 2014]

[6] Francis, L., Hancke, G., Mayes, K., Markantonakis, K. 2012. Practical Relay Attack on Contactless Transactions by Using NFC Mobile Phones. The 2012 Workshop on RFID and IoT Security (RFIDsec 2012 Asia), Nai-Wei, L., Yingjiu, L. (editors). Vol. 8, IOS Press (Cryptology and Information Security Series), pp. 21-32. [http://eprint.iacr.org/2011/618.pdf](http://eprint.iacr.org/2011/618.pdf)

[7] Freitas, L. and Emms, M. 2014. Formal specification of EMV protocol. School of Computing Science Technical Report Series 1429, Newcastle University.

[8] International Organization for Standardization. 1995. ISO 8583:1995 – Financial transaction card originated messages – Interchange message specifications.

[9] Murdoch, S.J., Drimer, S., Anderson, R., Bond, M. 2010. Chip and PIN is Broken. IEEE Symposium on Security and Privacy, pp. 433-446. [http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5504801&isnumber=5504699](http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5504801&isnumber=5504699)

[10] Reason, J. 1990. Human Error. Cambridge University Press.

[11] Smans, J., Jacobs, B., and Piessens, F. 2013. VeriFast for Java: A Tutorial. In: Clarke, D., Noble, J., Wrigstad, T. (eds.) Aliasing in Object-Oriented Programming. LNCS, vol. 7850, pp. 407– 442. Springer, Heidelberg.

[12] The UK Cards Association Limited. 2013. Standard 70 – Card Acceptor to Acquirer Interface Standards.

[13] Woodcock, J. and Davies, J. 1998. Using Z. Prentice Hall.