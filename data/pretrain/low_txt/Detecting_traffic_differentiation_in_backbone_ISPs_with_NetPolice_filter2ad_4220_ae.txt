### Redundancy Factor and Probing Threshold Selection

**Figure 13: How to Select the Redundancy Factor**

- **Redundancy Factor (R)**
  - The redundancy factor \( R \) is a key parameter in ensuring that each element in the network is probed sufficiently. 
  - A higher \( R \) ensures better coverage but at the cost of increased probing overhead.

**Figure 14: How to Select the Maximum Probing Threshold**

- **Maximum Probing Threshold (m)**
  - NetPolice imposes a maximum probing threshold \( m \) to prevent any single prober from being assigned too many probing destinations.
  - This helps in maintaining a balance between the actual redundancy of elements and the overhead on the probers.
  - Figure 14 shows the fraction of elements whose actual redundancy reaches \( R \geq 100 \) under different values of \( m \).
  - The fraction grows slowly when \( m \) exceeds 10,000. We choose \( m = 10,000 \) to achieve a reasonable balance between element redundancy and prober overhead.
  - Note that the redundancy of certain elements can never reach \( R \) because the number of distinct paths traversing an element is inherently limited by the set of source-destination pairs covered by NetPolice.

### Performance Evaluation

- **Probing Overhead**
  - In NetPolice, the number of destinations probed by each prober ranges from 6,000 to 10,000.
  - This corresponds to a bandwidth usage from 17 Kbps to 443 Kbps per prober.
  - The multi-ISP path selection consumes the most execution time and memory compared to other components in NetPolice.
  - The time and space complexity of the path selection is \( O(p^2) \) and \( O(ep) \), respectively, where \( p \) is the number of source-destination pairs and \( e \) is the number of elements.

- **Evaluation Setup**
  - NetPolice was evaluated on a commodity server with eight 3.0 GHz Xeon processors and 8 GB of memory running Linux 2.6.18 SMP.
  - Figure 15 illustrates the execution time and memory usage as the number of ISPs increases.
  - At 18 ISPs, NetPolice measures 13,000 unique ingress-egress pairs from 186 sources to 57,000 destinations.
  - It takes 3.5 GB of memory to store 182 million three-tuples of (src, ingress, egress) and (ingress, egress, dst).
  - The execution time for each run of path selection is around 25 minutes, which is only 20% of one round of probing, indicating that the path selection process can keep up with the measurement speed.

- **Comparison of Probing Overhead**
  - Figure 16 compares the total number of paths probed under single-ISP vs. multi-ISP path selection.
  - Multi-ISP path selection reduces the probing overhead by almost a third when 18 ISPs are being measured.

### Related Work

- **Traffic Differentiation Detection**
  - Traffic differentiation detection has gained significant attention in recent years.
  - One recent study leverages active measurement from end-hosts to identify traffic differentiation using port blocking [8].
  - Evidence of differentiation against P2P traffic has been found in many broadband ISPs by BTTest [13].
  - Unlike existing works that focus on broadband ISPs, NetPolice targets differentiation detection in backbone ISPs, requiring an intelligent path selection algorithm to measure a large number of ISP internal paths.

- **Previous Work**
  - Our previous work [35] provided initial evidence of traffic differentiation in backbone ISPs.
  - This paper significantly extends our prior work by comprehensively presenting, validating, and analyzing the differentiation detection results collected over 10 weeks.
  - NANO [32] targets a similar goal but uses a passive monitoring approach, which faces challenges in collecting sufficient samples across different hosts and ISPs.

- **Measurement Studies**
  - Our work builds on a broad class of measurement studies that use end-host-based probing to reverse-engineer the Internet [30, 21].
  - Rocketfuel [29] infers ISP topologies by launching traceroute from a set of end-hosts.
  - Other network-wide systems measure and predict the performance of various Internet paths [20, 15, 25], but none have been used for systematically detecting traffic differentiation.

### Conclusion and Future Work

- **NetPolice System**
  - NetPolice is a system designed to detect content- and routing-based traffic differentiation in backbone ISPs by taking loss measurements from end hosts.
  - It employs an intelligent probing scheme to achieve rich coverage of ISP internal paths while maintaining reasonable measurement overhead.
  - NetPolice identifies significant performance gaps between different types of traffic using statistical hypothesis tests.

- **Deployment and Findings**
  - NetPolice was deployed on PlanetLab to study 18 large ISPs across 3 continents over 10 weeks in 2008.
  - We found 4 ISPs performing differentiation on 4 distinct applications and 10 ISPs performing previous-hop AS-based differentiation, evidenced by up to 5% actual loss rate differences.
  - The degree of differentiation increases with network load, and some ISPs appear to carry out content-based differentiation based on port numbers irrespective of packet content.
  - Loss rate differences are often associated with different TOS values in the traffic marked by the ISPs.

- **Future Directions**
  - To counteract blacklisting of source IP addresses, we plan to deploy NetPolice on hosts spanning educational, commercial, and residential networks.
  - We also aim to leverage end-to-end in-band probing techniques [7] to detect performance degradation due to differentiation without requiring router responses.
  - Future work will focus on improving the robustness of differentiation detection in NetPolice.

### References

[1] Arbor Ellacoya e100. http://www.arbornetworks.com.
[2] AT&T Continues to Adjust TOS to Limit 3G Video. http://newteevee.com/2009/04/29/att-continues-to-adjust-tos-to-limit-3g-video.
[3] Schooner User-Configurable Lab Environment. http://www.schooner.wail.wisc.edu/index.php3?stayhome=1.
[4] A. Akella, S. Seshan, and A. Shaikh. An empirical evaluation of wide-area internet bottlenecks. In IMC, 2003.
[5] B. Augustin, M. Curie, T. Friedman, and R. Teixeira. Measuring Load-balanced Paths in the Internet. In Proc. ACM SIGCOMM IMC, 2007.
[6] B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger, T. Friedman, M. Latapy, C. Magnien, and R. Teixeira. Avoiding Traceroute Anomalies with Paris Traceroute. In Proc. of ACM IMC, 2006.
[7] I. Avramopoulos and J. Rexford. Stealth probing: Efficient data-plane security for IP routing. In Proceedings of USENIX Annual Technical Conference, 2006.
[8] R. Beverly, S. Bauer, and A. Berger. The Internet’s Not a Big Truck: Toward Quantifying Network Neutrality. In Proceedings of the 8th Passive and Active Measurement (PAM) Conference, 2007.
[9] Cisco Systems. Configuring Port to Application Mapping. http://www.cisco.com/en/US/products/sw/iosswrel/ps1835/products_configuration_guide_chapter09186a00800ca7c8.html.
[10] Cisco Systems. Configuring Priority Queueing. http://www.cisco.com/en/US/docs/ios/12_0/qos/configuration/guide/qcpq.html.
[11] Cisco Systems. Simple network management protocol.
[12] cPacket Networks Inc. Complete Packet Inspection on a Chip. http://www.cpacket.com/.
[13] M. Dischinger, A. Mislove, A. Haeberlen, and K. P. Gummadi. Detecting BitTorrent Blocking. In Proc. ACM SIGCOMM IMC, 2008.
[14] Deep packet inspection. www.networkworld.com/details/6299.html.
[15] P. Francis, S. Jamin, V. Paxson, L. Zhang, D. Gryniewicz, and Y. Jin. An Architecture for a Global Internet Host Distance Estimation Service. In Proceedings of IEEE INFOCOM, 1999.
[16] L. Gao. On Inferring Autonomous System Relationships in the Internet. In Proc. IEEE Global Internet Symposium, 2000.
[17] V. S. Kaulgud. IP Quality of Service: Theory and best practices. www.sanog.org/resources/sanog4-kaulgud-qos-tutorial.pdf, 2004.
[18] S. G. Kolliopoulos and N. E. Young. Approximation algorithms for covering/packing integer programs. Journal of Computer and System Sciences, 71(4), 2005.
[19] G. Lu, Y. Chen, S. Birrer, F. E. Bustamante, C. Y. Cheung, and X. Li. End-to-end inference of router packet forwarding priority. In Proc. IEEE INFOCOM, 2007.
[20] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane: An Information Plane for Distributed Services. In Proc. Operating Systems Design and Implementation, 2006.
[21] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson. Inferring Link Weights Using End-to-End Measurements. In Proc. ACM SIGCOMM IMW, 2002.
[22] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson. User-level Internet Path Diagnosis. In Proceedings of ACM SOSP, 2003.
[23] R. Mahajan, M. Zhang, L. Poole, and V. Pai. Uncovering Performance Differences in Backbone ISPs with Netdiff. In Proceeding of NSDI, 2008.
[30] N. Spring, D. Wetherall, and T. Anderson. Reverse-Engineering the Internet. In Proc. ACM HotNets, 2002.
[31] A. Stuart, K. Ord, and S. Arnold. Kendall’s Advanced Theory of Statistics. Wiley, 1999.
[24] A. W. Moore and D. Zuev. Internet traffic classification using Bayesian analysis techniques. SIGMETRICS Perform. Eval. Rev., 33(1), 2005.
[32] M. B. Tariq, M. Motiwala, and N. Feamster. NANO: Network Access Neutrality Observatory. In Proceedings of ACM HotNets, 2008.
[25] V. Paxson, J. Mahdavi, A. Adams, and M. Mathis. An architecture for large-scale Internet measurement. In IEEE Communications, 1998.
[26] L. Peterson, T. Anderson, D. Culler, and T. Roscoe. A Blueprint for Introducing Disruptive Technology Into the Internet. In Proc. of ACM HotNets, 2002.
[33] J. Tukey. Bias and confidence in not quite large samples. Ann. Math. Statist, 1958.
[34] C. Wright, F. Monrose, and G. Masson. On inferring application protocol behaviors in encrypted network traffic. In Journal of Machine Learning Research (JMLR): Special issue on Machine Learning for Computer Security, 2006.
[27] J. Saltzer, D. Reed, and D. Clark. End-to-end arguments in system design. ACM Transactions on Computer Systems, 2(4), 1984.
[28] J. Sommers and P. Barford. An Active Measurement System for Shared Environments. In Proc. ACM SIGCOMM IMC, 2007.
[29] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson. Measuring ISP topologies with Rocketfuel. IEEE/ACM Trans. Netw., 12(1), 2004.
[35] Y. Zhang, M. Mao, and M. Zhang. Ascertaining the Reality of Network Neutrality Violation in Backbone ISPs. In Proceedings of ACM HotNets, 2008.