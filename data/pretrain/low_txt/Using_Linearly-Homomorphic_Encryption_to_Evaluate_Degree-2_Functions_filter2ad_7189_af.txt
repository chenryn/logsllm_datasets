### Homomorphic Encryption from Ring-LWE and Security for Key-Dependent Messages
In P. Rogaway (Ed.), CRYPTO 2011, Volume 6841 of LNCS, pages 505–524. Springer, August 2011.

### A Simple Public-Key Cryptosystem with a Double Trapdoor Decryption Mechanism and Its Applications
E. Bresson, D. Catalano, and D. Pointcheval. In C.-S. Laih (Ed.), ASIACRYPT 2003, Volume 2894 of LNCS, pages 37–54. Springer, November/December 2003.

### One-Round Secure Computation and Secure Autonomous Mobile Agents
C. Cachin, J. Camenisch, J. Kilian, and J. Müller. In U. Montanari, J. D. P. Rolim, and E. Welzl (Eds.), ICALP 2000, Volume 1853 of LNCS, pages 512–523. Springer, July 2000.

### Linearly Homomorphic Encryption from DDH
G. Castagnos and F. Laguillaumie. In K. Nyberg (Ed.), Topics in Cryptology – CT-RSA 2015, Volume 9048 of Lecture Notes in Computer Science, pages 487–505. Springer International Publishing, 2015.

### Boosting Linearly-Homomorphic Encryption to Evaluate Degree-2 Functions on Encrypted Data
D. Catalano and D. Fiore. Cryptology ePrint Archive, Report 2014/813, 2014.

### A Robust and Verifiable Cryptographically Secure Election Scheme (Extended Abstract)
J. D. Cohen and M. J. Fischer. In 26th FOCS, pages 372–382. IEEE Computer Society Press, October 1985.

### Helib
S. Halevi and V. Shoup. https://github.com/shaih/HElib.

### Evaluating Branching Programs on Encrypted Data
Y. Ishai and A. Paskin. In S. P. Vadhan (Ed.), TCC 2007, Volume 4392 of LNCS, pages 575–594. Springer, February 2007.

### Efficient Cryptosystems from 2k-th Power Residue Symbols
M. Joye and B. Libert. In T. Johansson and P. Q. Nguyen (Eds.), EUROCRYPT 2013, Volume 7881 of LNCS, pages 76–92. Springer, May 2013.

### A Secure and Optimally Efficient Multi-Authority Election Scheme
R. Cramer, R. Gennaro, and B. Schoenmakers. In W. Fumy (Ed.), EUROCRYPT’97, Volume 1233 of LNCS, pages 103–118. Springer, May 1997.

### Constant-Round Multiparty Computation Using a Black-Box Pseudorandom Generator
I. Damgård and Y. Ishai. In V. Shoup (Ed.), CRYPTO 2005, Volume 3621 of LNCS, pages 378–394. Springer, August 2005.

### A Generalisation, a Simplification, and Some Applications of Paillier’s Probabilistic Public-Key System
I. Damgård and M. Jurik. In K. Kim (Ed.), PKC 2001, Volume 1992 of LNCS, pages 119–136. Springer, February 2001.

### Multiparty Computation from Somewhat Homomorphic Encryption
I. Damgård, V. Pastro, N. P. Smart, and S. Zakarias. In R. Safavi-Naini and R. Canetti (Eds.), CRYPTO 2012, Volume 7417 of LNCS, pages 643–662. Springer, August 2012.

### A Public Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms
T. ElGamal. In G. R. Blakley and D. Chaum (Eds.), CRYPTO’84, Volume 196 of LNCS, pages 10–18. Springer, August 1984.

### Converting Pairing-Based Cryptosystems from Composite-Order Groups to Prime-Order Groups
D. M. Freeman. In H. Gilbert (Ed.), EUROCRYPT 2010, Volume 6110 of LNCS, pages 44–61. Springer, May 2010.

### Fully Homomorphic Encryption Using Ideal Lattices
C. Gentry. In M. Mitzenmacher (Ed.), 41st ACM STOC, pages 169–178. ACM Press, May/June 2009.

### i-Hop Homomorphic Encryption and Rerandomizable Yao Circuits
C. Gentry, S. Halevi, and V. Vaikuntanathan. In T. Rabin (Ed.), CRYPTO 2010, Volume 6223 of LNCS, pages 155–172. Springer, August 2010.

### The GNU Multiple Precision Arithmetic Library
GMP. http://www.gmplib.org.

### Probabilistic Encryption & How to Play Mental Poker Keeping Secret All Partial Information
S. Goldwasser and S. Micali. In Proceedings of the Fourteenth Annual ACM Symposium on Theory of Computing, STOC ’82, pages 365–377, New York, NY, USA, 1982. ACM.

### Probabilistic Encryption
S. Goldwasser and S. Micali. Journal of Computer and System Sciences, 28(2):270–299, 1984.

### Comparing the Pairing Efficiency Over Composite-Order and Prime-Order Elliptic Curves
A. Guillevic. In M. J. Jacobson Jr., M. E. Locasto, P. Mohassel, and R. Safavi-Naini (Eds.), ACNS 2013, Volume 7954 of LNCS, pages 357–372. Springer, June 2013.

### Replication is NOT Needed: SINGLE Database, Computationally-Private Information Retrieval
E. Kushilevitz and R. Ostrovsky. In 38th FOCS, pages 364–373. IEEE Computer Society Press, October 1997.

### On-the-Fly Multiparty Computation on the Cloud via Multikey Fully Homomorphic Encryption
A. López-Alt, E. Tromer, and V. Vaikuntanathan. In H. J. Karloff and T. Pitassi (Eds.), 44th ACM STOC, pages 1219–1234. ACM Press, May 2012.

### Additively Homomorphic Encryption with d-Operand Multiplications
C. A. Melchor, P. Gaborit, and J. Herranz. In T. Rabin (Ed.), CRYPTO 2010, Volume 6223 of LNCS, pages 138–154. Springer, August 2010.

### A New Public Key Cryptosystem Based on Higher Residues
D. Naccache and J. Stern. In ACM CCS 1998, pages 59–66. ACM Press, November 1998.

### Can Homomorphic Encryption Be Practical?
M. Naehrig, K. Lauter, and V. Vaikuntanathan. In Proceedings of the 3rd ACM Workshop on Cloud Computing Security Workshop, CCSW ’11, pages 113–124, New York, NY, USA, 2011. ACM.

### A New Public-Key Cryptosystem as Secure as Factoring
T. Okamoto and S. Uchiyama. In K. Nyberg (Ed.), EUROCRYPT’98, Volume 1403 of LNCS, pages 308–318. Springer, May/June 1998.

### Public-Key Cryptosystems Based on Composite Degree Residuosity Classes
P. Paillier. In J. Stern (Ed.), EUROCRYPT’99, Volume 1592 of LNCS, pages 223–238. Springer, May 1999.

### On Data Banks and Privacy Homomorphisms
R. L. Rivest, L. Adleman, and M. L. Dertouzos. Foundations of Secure Computation, Academia Press, pages 169–179, 1978.

### Non-Interactive Cryptocomputing for NC1
T. Sander, A. Young, and M. Yung. In 40th FOCS, pages 554–567. IEEE Computer Society Press, October 1999.

### NTL Library
V. Shoup. http://www.shoup.net/ntl/.

### Fully Homomorphic Encryption with Relatively Small Key and Ciphertext Sizes
N. P. Smart and F. Vercauteren. In P. Q. Nguyen and D. Pointcheval (Eds.), PKC 2010, Volume 6056 of LNCS, pages 420–443. Springer, May 2010.

### Fully Homomorphic Encryption over the Integers
M. van Dijk, C. Gentry, S. Halevi, and V. Vaikuntanathan. In H. Gilbert (Ed.), EUROCRYPT 2010, Volume 6110 of LNCS, pages 24–43. Springer, May 2010.

### Protocols for Secure Computations (Extended Abstract)
A. C.-C. Yao. In 23rd FOCS, pages 160–164. IEEE Computer Society Press, November 1982.

## Appendix

### Adapting Known HE Schemes to be Public-Space

In this section, we show that encryption schemes that do not fit our notion of public-space can be easily modified to do so. This includes the additively-homomorphic variants (aka "in the exponent") of the ElGamal [15, 11] and the BBS Linear Encryption [2] schemes, as well as for BGN [3]. The case of Okamoto-Uchiyama [32] is slightly different; we show how to tweak the scheme so that it can still be used in our construction of Section 4.

#### Adapting the BGN Cryptosystem

The basic BGN [3] does not meet our requirement of a public-space encryption scheme because messages are treated as small integers rather than elements in a ring. This difficulty can be overcome by forcing messages to be treated as elements in an appropriate ring, resulting in a modified scheme we call BGN(pub).

**KeyGen(1λ):**
- Input: Security parameter λ.
- Run G(1λ) to obtain (p, q, G, GT, e), where G and GT are groups of order N = pq, and e: G × G → GT is a bilinear map.
- Set N = pq.
- Pick two random generators g, g' ∈ G and set h = (g')^q.
- Public key: pk = (N, G, GT, e, g, h).
- Private key: sk = p.
- Message space: M = Zt, where t << q.

**Enc(pk, m):**
- Input: Message m ∈ M.
- Pick a random r ∈ {1, ..., N}.
- Output: C = g^m * h^r ∈ G.

**Eval(pk, f, C1, ..., Cn):**
- For homomorphic addition, multiply (and re-randomize) the ciphertexts:
  - Choose a random s ∈ {1, ..., N}.
  - Set C = C1 * C2 * h^s = g^(m1+m2) * h^(r1+r2+s).
- For homomorphic multiplication, use the bilinear map:
  - C = e(C1, C2) * e(g, h)^s = e(g, g)^(m1*m2) * e(g, h)^s ∈ GT.

**Dec(sk, C):**
- Compute C^p = (g^m * h^r)^p = (g^p)^m.
- Extract the discrete log m of C^p in base g^p.
- Return: (m mod t).

As in [3], for efficient decryption, t must be small enough to allow polynomial-time extraction of discrete logs of at most T bits, where 2T is an upper bound on the maximum value reachable by applying an admissible computation on messages of log t bits. The same security proof in [3] applies to the modified scheme.

**Theorem 7:** If the subgroup decision assumption holds for G, then the scheme BGN(pub) described above is a semantically secure, public-space level-2 homomorphic encryption. Our adaptation also applies to the variant of BGN based on the Decision Linear assumption, which can be obtained via the transformation in [16].

#### Modified Okamoto-Uchiyama

The encryption scheme of Okamoto-Uchiyama [32] does not fit our public-space requirement. However, a small tweak allows it to be used in our basic construction of Section 4.

**KeyGen(1λ):**
- Input: Security parameter λ.
- Generate large primes p and q such that |p| = |q| = λ and set N = p^2 * q.
- Choose g ∈ (ZN)* such that g is a generator of Z*_(p^2).
- Set h = g^N mod N.
- Let k be such that 2k is slightly less than p.
- Message space: M = {0, 1}^k.
- Public key: (N, h, g).
- Private key: p.

**Enc(pk, m):**
- Input: Message m ∈ M.
- Choose a random r ∈ ZN.
- Output: C = g^m * h^r mod N.

**Dec(sk, C):**
- Compute D = C^(p-1) mod p^2 = (g^m)^(p-1) mod p^2.
- Note that D has order p in Z*_(p^2).
- Retrieve the plaintext as m ← L(D) / L(g^(p-1) mod p^2) mod p, where L(x) = (x-1)/p.

The problem with the above construction is that the scheme is homomorphic modulo p while p is not public. We overcome this by working directly modulo the public value N and performing reductions modulo p only at decryption time, leading to the level-2 HE scheme we call OU(level-2).

**KeyGen(1λ):**
- As above, with M = Z_2k.

**Enc(pk, m):**
- As above.

**Eval(pk, f, C1, ..., Cn):**
- For multiplying two ciphertexts C1, C2 ∈ Z*_(N):
  - Choose random a1, a2 ∈ ZN.
  - Set β1 = C1 * g^(-a1) mod N, β2 = C2 * g^(-a2) mod N.
  - α = g^(a1*a2) * β1^a2 * β2^a1 mod N.
  - Output: (α, [β1, β2]).

**Dec(sk, C):**
- To decrypt (α, β) ∈ ZN × Z2×(l)_N, first decrypt α to obtain a ∈ Zp, then do the same with all β's to obtain b ∈ Z2×(l)_p.
- Finally, return: (a + ∑b1,i * b2,i) mod p.

By applying the security proof of [32], the above scheme is semantically secure under the p-subgroup decision assumption.

**Theorem 8:** If the p-subgroup assumption holds, then the scheme OU(level-2) described above is a semantically-secure homomorphic encryption that correctly and compactly evaluates polynomials in F2.