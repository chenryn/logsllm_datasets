# SIM Card Holder and DIY Hardware Implant over I2C

## Overview
Presented by: Josh Datko and Teddy Reed  
Event: DEF CON 22  
Date: August 10, 2014

### SIM Card Holder
- Compatible with T-Mobile and AT&T

### Adding the GSM Module
- **Slide 22/49**
  - Add the GSM module to the hardware setup.
- **Slide 23/49**
  - Continue the process of adding the GSM module.

### Power Considerations
- **Slide 24/49**
  - **Power Consumption:**
    - BeagleBone Black (BBB) draws 460mA on boot.
    - CryptoCape and GSM Shield:
      - Average power draw for "talk" is 300mA.
      - Peak power draw can reach 2.0A.
  - **Solution:**
    - Introducing the LiPoWerCape to handle the high power requirements.

### CHUCKWAGON: Video Adapter Connection
- **Slide 25/49**
  - **Purpose:**
    - Facilitate easy connection to the video adapter.
  - **Features:**
    - Breadboard-friendly.
    - Logic level converters for I2C.
    - Provides 5V power.
    - Includes a power indicator.
    - Attaches to the CryptoCape.

### CHUCKWAGON Schematic and Board
- **Slide 26/49**
  - Schematic of the CHUCKWAGON.
- **Slide 27/49**
  - Physical board of the CHUCKWAGON.

### I2C Hack Not New
- **Slide 28/49**
  - As seen on Hackaday, I2C hacks are not new.

### Adding the CHUCKWAGON
- **Slide 29/49**
  - Integrate the CHUCKWAGON into the hardware setup.

### Connecting to the GSM Module
- **Slide 30/49**
  - **Connection Details:**
    - Connect the GSM Shield to the BeagleBone Black (BBB).
    - Use BBB’s UART4, broken out by ATmega’s program jumpers.
    - GSM Shield uses software-serial, D7 and D8.
    - Ensure logic level converters are used for compatibility.

### Completed Hardware
- **Slide 31/49**
  - Final hardware setup with battery.
- **Slide 32/49**
  - Final hardware setup without battery.

### Software Flow
- **Slide 33/49**
  - Outline of the software flow for the hardware implant.

### Capabilities of the Implant
- **Slide 34/49**
  - **If the target software can communicate with the implant:**
    - The target can exfiltrate data to the implant via GSM.
    - The target can store data on the implant.
    - The implant can provide code for the target to run.
    - Control the implant and target over GSM.

### Accessorize!
- **Slide 35/49**
  - Prepare for various scenarios or use as an NSA hacking toolkit.

### Improving the CHUCKWAGON
- **Slide 36/49**
  - **Future Enhancements:**
    - Consolidate into one board: ImplantCape.
    - Eliminate flywires.
    - Consider HDMI footprint instead of VGA.
    - Potential to use AVR for lower power consumption, but BBB is more versatile.

### Using Cryptography for Malware
- **Slide 37/49**
  - **History and Examples:**
    - Long history of cryptography in malware.
    - Examples: PC Cybord (1989), Macintosh SE/30 cryptovirus PoC (1996), Gpcode.AG/AK (2006), CryptoLocker (2013), Uroburos (2014), TPM-enabled super-targeted malware (2014).

### CryptoCape and Trusted Platform Module (TPM)
- **Slide 38/49**
  - **CryptoCape Features:**
    - I2C friendly.
    - Protected RSA private key storage.
    - Windows 8 compatible.
    - Optional, as most systems have an onboard TPM.

### Cloaking Malware with TPM
- **Slide 39/49**
  - **Summary:**
    - Use TPM-protected keys and Intel TXT PAL to protect malicious code execution from observation, analysis, and tampering.
    - Intel TXT and remote attestation are complex, but generating a public key on a TPM and encrypting payloads is easier.
    - Protect against network interception and restrict analysis to the target machine upon discovery.

### TPM-Enabled Super-Targeted Malware
- **Slide 40/49 to 43/49**
  - **Windows 8 Integration:**
    - Automatically enables and initializes TPM, managing the owner password.
    - Access through Microsoft CSP.
    - Use tools like NCryptOpenStorageProvider, NCryptCreatePersistedKey, NCryptExportKey, NCryptDecrypt.
    - In-memory process creation using CreateProcess, ZwUnmapViewOfSection, VirtualAllocEx, WriteProcessMemory.
    - Python pefile to inject encrypted PE sections into a decryption stub.
  - **tpm-malcrypt:**
    - Fork tpm-malcrypt on GitHub.
    - Tools: tpm-keyextract, malcrypter, malcrypt.

### Malicious Exfiltration via Audio
- **Slide 45/49 to 47/49**
  - **Backstory:**
    - #badBIOS considered using audio for out-of-band exfiltration or C&C, dismissed as infeasible.
  - **Data Transmission:**
    - Well-defined and resilient audio protocols.
    - QPSK10 (10 baud) and QPSK05 (5 baud) for forward error correction.
  - **Pivoting:**
    - Possible to pivot through colluding machines, creating a mesh of audio-capable relays like idle headphones.

### Demos, Learning, and Prizes
- **Slide 48/49**
  - Join us in the HHV for CryptoCape and WAGONBED demos.
  - Challenge: Solve the puzzle for a chance to win a DIY hardware implant kit.
  - No hardware hacking experience required.
- **Slide 49/49**
  - Thank you!

---

This optimized version aims to make the presentation more structured, clear, and professional.