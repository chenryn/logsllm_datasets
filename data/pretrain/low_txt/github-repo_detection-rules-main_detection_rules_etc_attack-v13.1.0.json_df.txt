### Cloud Services

**Description:**
Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary can then perform management actions or access cloud-hosted resources as the logged-on user.

Many enterprises federate centrally managed user identities to cloud services, allowing users to log in with their domain credentials to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or the cloud command-line interface (CLI), such as [Cloud API](https://attack.mitre.org/techniques/T1059/009). Common commands include `Connect-AZAccount` for Azure PowerShell, `Connect-MgGraph` for Microsoft Graph PowerShell, and `gcloud auth login` for the Google Cloud CLI.

In some cases, adversaries may authenticate to these services using an [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password.

**External References:**
- [MITRE ATT&CK T1021.007](https://attack.mitre.org/techniques/T1021/007)

**Kill Chain Phases:**
- Lateral Movement

**Platforms:**
- Office 365
- Azure AD
- SaaS
- IaaS
- Google Workspace

**Data Sources:**
- Logon Session: Logon Session Creation

---

### Port Knocking

**Description:**
Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host-based firewall but could also be implemented by custom software.

This technique has been observed both for the dynamic opening of a listening port and the initiation of a connection to a listening server on a different system. The observation of the signal packets to trigger the communication can be conducted through different methods. One method, originally implemented by Cd00r, uses the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports already open for use by other programs.

**External References:**
- [MITRE ATT&CK T1205.001](https://attack.mitre.org/techniques/T1205/001)
- [Hartrell, G. (2002, August). Get a handle on cd00r: The invisible backdoor. Retrieved October 13, 2018.](https://www.giac.org/paper/gcih/342/handle-cd00r-invisible-backdoor/103631)

**Kill Chain Phases:**
- Defense Evasion
- Persistence
- Command and Control

**Platforms:**
- Linux
- macOS
- Windows
- Network

**Detection:**
Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.

**Data Sources:**
- Network Traffic: Network Traffic Flow
- Network Traffic: Network Connection Creation

---

### Web Services

**Description:**
Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.

**External References:**
- [MITRE ATT&CK T1583.006](https://attack.mitre.org/techniques/T1583/006)
- [ThreatConnect. (2020, December 15). Infrastructure Research and Hunting: Boiling the Domain Ocean. Retrieved October 12, 2021.](https://threatconnect.com/blog/infrastructure-research-hunting/)

**Kill Chain Phases:**
- Resource Development

**Platforms:**
- PRE

**Detection:**
Once adversaries leverage the web service as infrastructure (e.g., for command and control), it may be possible to look for unique characteristics associated with adversary software, if known. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).

**Data Sources:**
- Internet Scan: Response Content

---

### Steal Application Access Token

**Description:**
Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources. Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, leading to privilege escalation and further compromise of the environment.

In Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the containerâ€™s token and thereby gain access to Kubernetes API commands. Token theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow. An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials.

Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token. The adversary will need to complete registration of their application with the authorization server, for example, Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls. They can then send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).

Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens, allowing them to obtain new access tokens without prompting the user.

**External References:**
- [MITRE ATT&CK T1528](https://attack.mitre.org/techniques/T1528)
- [Amnesty International. (2019, August 16). Evolving Phishing Attacks Targeting Journalists and Human Rights Defenders from the Middle-East and North Africa. Retrieved October 8, 2019.](https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/)
- [Auth0 Inc.. (n.d.). Understanding Refresh Tokens. Retrieved December 16, 2021.](https://auth0.com/learn/refresh-tokens/)
- [Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.](https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/)
- [Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.](https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks)
- [Kubernetes. (2022, February 26). Configure Service Accounts for Pods. Retrieved April 1, 2022.](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/)
- [Microsoft. (2019, August 29). Microsoft identity platform access tokens. Retrieved September 12, 2019.](https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens)
- [Microsoft. (2019, May 8). Quickstart: Register an application with the Microsoft identity platform. Retrieved September 12, 2019.](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)
- [Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow)
- [Microsoft. (n.d.). Retrieved September 12, 2019.](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols)

**Kill Chain Phases:**
- Credential Access

**Platforms:**
- SaaS
- Office 365
- Azure AD
- Google Workspace
- Containers

**Detection:**
Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.

Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on the platform). For example, they can filter for apps that are authorized by a small number of users, apps requesting high-risk permissions, permissions incongruous with the appâ€™s purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.

Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.

**Data Sources:**
- User Account: User Account Modification

---

### Spearphishing Attachment

**Description:**
Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (e.g., [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information and then returning the file. The text of the spearphishing email usually tries to give a plausible reason why the file should be filled in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (e.g., [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.

**External References:**
- [MITRE ATT&CK T1598.002](https://attack.mitre.org/techniques/T1598/002)
- [Ducklin, P. (2020, October 2). Serious Security: Phishing without links â€“ when phishers bring along their own web pages. Retrieved October 20, 2020.](https://nakedsecurity.sophos.com/2020/10/02/serious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages/)
- [Ryan Hanson. (2016, September 24). phishery. Retrieved October 23, 2020.](https://github.com/ryhanson/phishery)
- [Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020.](https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide)
- [Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved October 19, 2020.](https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf)

**Kill Chain Phases:**
- Reconnaissance

**Platforms:**
- PRE

**Detection:**
Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.

**Data Sources:**
- Network Traffic: Network Traffic Flow
- Network Traffic: Network Traffic Content
- Application Log: Application Log Content

---

### Additional Cloud Credentials

**Description:**
Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment. For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD. These credentials include both x509 keys and passwords. With sufficient permissions, there are a variety of ways to add credentials, including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.

In infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the `CreateKeyPair` or `ImportKeyPair` API in AWS or the `gcloud compute os-login ssh-keys add` command in GCP. This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.

Adversaries may also use the `CreateAccessKey` API in AWS or the `gcloud iam service-accounts keys create` command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e., [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).

In AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials tied to the permissions of the original user account. These credentials may remain valid for the duration of their lifetime even if the original accountâ€™s API credentials are deactivated.

**External References:**
- [MITRE ATT&CK T1098.001](https://attack.mitre.org/techniques/T1098/001)
- [Vaishnav Murthy and Joel Eng. (2023, January 30). How Adversaries Can Persist with AWS User Federation. Retrieved March 10, 2023.](https://www.crowdstrike.com/blog/how-adversaries-persist-with-aws-user-federation/)
- [A. Randazzo, B. Manahan, and S. Lipton. (2020, April 28). Finding Evil in AWS. Retrieved June 25, 2020.](https://expel.io/blog/finding-evil-in-aws/)
- [Bellavance, N. (2019, July 16). Demystifying Azure AD Service Principals. Retrieved January 19, 2020.](https://nedinthecloud.com/2019/07/16/demystifying-azure-ad-service-principals/)
- [Google. (n.d.). gcloud compute os-login ssh-keys add. Retrieved October 1, 2020.](https://cloud.google.com/sdk/gcloud/reference/compute/os-login/ssh-keys/add)
- [Kunz, B. (2018, October 14). Blue Cloud of Death: Red Teaming Azure. Retrieved November 21, 2019.](https://www.youtube.com/watch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815)
- [Kunz, B. (2018, May 11). Blue Cloud of Death: Red Teaming Azure. Retrieved October 23, 2019.](https://speakerdeck.com/tweekfawkes/blue-cloud-of-death-red-teaming-azure-1)
- [MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 17, 2020.](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)
- [S. Lipton, L. Easterly, A. Randazzo, and J. Hencinski. (2020, July 28). Behind the scenes in the Expel SOC: Alert-to-fix in AWS. Retrieved October 1, 2020.](https://expel.io/blog/behind-the-scenes-expel-soc-alert-aws/)
- [Spencer Gietzen. (n.d.). AWS IAM Privilege Escalation â€“ Methods and Mitigation. Retrieved May 27, 2022.](https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/)

**Kill Chain Phases:**
- Persistence

**Platforms:**
- IaaS
- Azure AD
- SaaS

**Detection:**
Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account. Monitor for the use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.

**Data Sources:**
- User Account: User Account Modification

---

### User Execution

**Description:**
An adversary may rely on specific actions by a user to gain execution. Users may be subjected to social engineering to get them to execute malicious code, such as opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).

While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access, it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop, hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).

Adversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).

**External References:**
- [MITRE ATT&CK T1204](https://attack.mitre.org/techniques/T1204)
- [Selena Larson, Sam Scholten, Timothy Kromphardt. (2021, November 4). Caught Beneath the Landline: A 411 on Telephone Oriented Attack Delivery. Retrieved January 5, 2022.](https://www.proofpoint.com/us/blog/threat-insight/caught-beneath-landline-411-telephone-oriented-attack-delivery)

**Kill Chain Phases:**
- Execution

**Platforms:**
- Linux
- Windows
- macOS
- IaaS
- Containers

**Detection:**
Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.

Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).

**Data Sources:**
- Network Traffic: Network Connection Creation
- Container: Container Start
- File: File Creation
- Command: Command Execution
- Network Traffic: Network Traffic Content
- Process: Process Creation
- Instance: Instance Start
- Instance: Instance Creation
- Application Log: Application Log Content
- Container: Container Creation
- Image: Image Creation

---

### Internal Defacement

**Description:**
An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.

**External References:**
- [MITRE ATT&CK T1491.001](https://attack.mitre.org/techniques/T1491/001)
- [Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved March 2, 2016.](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)
- [Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)

**Kill Chain Phases:**
- Impact

**Platforms:**
- Linux
- macOS
- Windows

**Detection:**
Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.

**Data Sources:**
- Network Traffic: Network Traffic Content
- Application Log: Application Log Content
- File: File Creation
- File: File Modification

---

### Hidden Users

**Description:**
Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users.

In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value `Hide500Users` to `TRUE` in the `/Library/Preferences/com.apple.loginwindow` plist file. Every user has a userID associated with it. When the `Hide500Users` key value is set to `TRUE`, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the `dscl` utility to create hidden user accounts by setting the `IsHidden` attribute to 1. Adversaries can also hide a userâ€™s home folder by changing the `chflags` to `hidden`.

Adversaries may similarly hide user accounts in Windows. Adversaries can set the `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList` Registry key value to 0 for a specific user to prevent that user from being listed on the logon screen.

On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the `gsettings` command (e.g., `sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true`). Display Managers are not anchored to specific distributions and may be changed by a user or adversary.

**External References:**
- [MITRE ATT&CK T1564.002](https://attack.mitre.org/techniques/T1564/002)
- [Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved December 10, 2021.](https://cdn2.hubspot.net/hubfs/3354902/Content%20PDFs/Cybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf)
- [Apple. (2020, November 30). Hide a user account in macOS. Retrieved December 10, 2021.](https://support.apple.com/en-us/HT203998)
- [FireEye. (2021, June 16). Smoking Out a DARKSIDE Affiliateâ€™s Supply Chain Software Compromise. Retrieved September 22, 2021.](https://www.fireeye.com/blog/threat-research/2021/06/darkside-affiliate-supply-chain-software-compromise.html)
- [Ji Mingkui. (2021, June 17). How to Hide All The User Accounts in Ubuntu 20.04, 21.04 Login Screen. Retrieved March 15, 2022.](https://ubuntuhandbook.org/index.php/2021/06/hide-user-accounts-ubuntu-20-04-login-screen/)
- [US-CERT. (2018, March 16). Alert (TA18-074A): Russian Government Cyber Activity Targeting Energy and Other Critical Infrastructure Sectors. Retrieved June 6, 2018.](https://www.us-cert.gov/ncas/alerts/TA18-074A)

**Kill Chain Phases:**
- Defense Evasion

**Platforms:**
- macOS
- Windows
- Linux

**Detection:**
Monitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. Monitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList` key.

In macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500. Monitor for modifications to set the `Hide500Users` key value to `TRUE` in the `/Library/Preferences/com.apple.loginwindow` plist file. Monitor the command line for usage of the `dscl . create` command with the `IsHidden` attribute set to 1.

**Data Sources:**
- Process: Process Creation
- User Account: User Account Creation
- Command: Command Execution
- Windows Registry: Windows Registry Key Modification
- File: File Modification
- User Account: User Account Metadata

---

### Make and Impersonate Token

**Description:**
Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token, and the adversary can use `SetThreadToken` to assign the token to a thread.

This behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.

**External References:**
- [MITRE ATT&CK T1134.003](https://attack.mitre.org/techniques/T1134/003)
- [Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.](https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing)

**Kill Chain Phases:**
- Defense Evasion
- Privilege Escalation

**Platforms:**
- Windows

**Detection:**
If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the `runas` command. Detailed command-line logging is not enabled by default in Windows.

If an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.

Analysts can also monitor for use of Windows APIs such as `LogonUser` and `SetThreadToken` and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.

**Data Sources:**
- Process: OS API Execution
- Command: Command Execution

**Defense Bypassed:**
- Windows User Account Control
- System access controls
- File system access controls

**Effective Permissions:**
- SYSTEM

**Permissions Required:**
- Administrator
- User

---

### Group Policy Preferences

**Description:**
Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.

These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).

The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:
- Metasploitâ€™s post exploitation module: `post/windows/gather/credentials/gpp`
- `Get-GPPPassword`
- `gpprefdecrypt.py`

On the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: `dir /s * .xml`

**External References:**
- [MITRE ATT&CK T1552.006](https://attack.mitre.org/techniques/T1552/006)
- [Microsoft. (2016, August 31). Group Policy Preferences. Retrieved March 9, 2020.](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn581922(v=ws.11))
- [Microsoft. (n.d.). 2.2.1.1.4 Password Encryption. Retrieved April 11, 2018.](https://msdn.microsoft.com/library/cc422924.aspx)
- [Campbell, C. (2012, May 24). GPP Password Retrieval with PowerShell. Retrieved April 11, 2018.](https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html)
- [Sean Metcalf. (2015, December 28). Finding Passwords in SYSVOL & Exploiting Group Policy Preferences. Retrieved February 17, 2020.](https://adsecurity.org/?p=2288)

**Kill Chain Phases:**
- Credential Access

**Platforms:**
- Windows

**Detection:**
Monitor for attempts to access SYSVOL that involve searching for XML files. Deploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.

**Data Sources:**
- Command: Command Execution
- File: File Access

---

### Control Panel Items

**Description:**
Windows Control Panel items are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a `CPlApplet` function. Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.

For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.

Adversaries can use Control Panel items as execution payloads to execute arbitrary commands. Malicious Control Panel items can be delivered via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) campaigns or executed as part of multi-stage malware. Control Panel items, specifically CPL files, may also bypass application and/or file extension whitelisting.

**External References:**
- [MITRE ATT&CK T1196](https://attack.mitre.org/techniques/T1196)
- [M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018.](https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx)
- [MercÃ¨s, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018.](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)
- [Bernardino, J. (2013, December 17). Control Panel Files Used As Malicious Attachments. Retrieved January 18, 2018.](https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/)
- [Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017.](https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/)

**Kill Chain Phases:**
- Defense Evasion
- Execution

**Platforms:**
- Windows

**Defense Bypassed:**
- Application whitelisting
- Process whitelisting

**Detection:**
Monitor and analyze activity related to items associated with CPL files, such as the Windows Control Panel process binary (`control.exe`) and the `Control_RunDLL` and `ControlRunDLLAsUser` API functions in `shell32.dll`. When executed from the command line or clicked, `control.exe` will execute the CPL file (e.g., `control.exe file.cpl`) before `rundll32` is used to call the CPL's API functions (e.g., `r