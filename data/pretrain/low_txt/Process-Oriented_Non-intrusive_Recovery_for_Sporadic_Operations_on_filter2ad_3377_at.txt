### Step 3: Register Instances with the Load Balancer

- **Register 12 instances with the load balancer.**
- **6 instances not in ELB: RP1, RP3, RP5, RP6, RP8.**

### 3) Satisfying Recovery Requirement R2

- **Attach ASG with the correct Launch Configuration (LC).**
- **Terminate the 6 incorrect instances.**
- **Wait for ASG to launch 6 new instances.**
  - **Duration: 57.98 seconds.**
- **Repeat the above steps.**
  - **Duration: 59.76 seconds (Reparation).**
- **Register the 6 instances with the load balancer.**
  - **Duration: 11.44 seconds (Reparation).**
- **Register the 12 instances with the load balancer again.**
  - **Duration: 20.69 seconds (Direct Redo).**

**Observations:**
- The recovery process for all recovery points in the scale-up operation takes no more than 60 seconds.
- State capturing time: ~14 seconds (max 15 seconds).
- Applicable recovery patterns filtering time: ≤ 44 milliseconds.
- Recovery plan generation time: ≤ 75 milliseconds.
- Applicable recovery actions evaluation time: ≤ 230 milliseconds.
- Acceptable recovery action selection time: ≤ 280 milliseconds.
- Error detection time: 10 milliseconds to 11 seconds (X. Xu, et al., 2014).

**Total Error Detection and Recovery Time:**
- Sum of worst-case times: ~87 seconds.
- Therefore, the total recovery time for each recovery point is below 87 seconds, regardless of the recovery action selection method.

**POD-Recovery Service:**
- If errors reoccur, the POD-Diagnosis service will capture them and trigger POD-Recovery, ensuring a reasonable Recovery Time Objective (RTO).

### C. Recovery Reducing Negative Impact

#### 1) Experimental Procedure

- **Objective:** Measure the negative impact of recovery on the cloud system.
- **Setup:**
  - 12 instances in the cloud application.
  - Attached to an auto-scaling group (ASG).
  - Registered with an elastic load balancer (ELB).
  - Application: TPC-W (3-tier web benchmark running on Tomcat).
  - Workload: 50 query requests per second per instance.
- **Fault Injection:**
  - Faults injected at two determined recovery points using a proprietary fault injection tool.
  - Applicable recovery patterns filtered and selected based on section 7.3.
  - Recovery performed using selected acceptable recovery actions.
- **Faults Injected:**
  - Table 29: Faults for Scale-up Operation
    - **Recovery Point 1 (After Step 2):** 6 instances with wrong AMI.
    - **Recovery Point 2 (After Step 3):** 6 instances not in ELB.

- **Impact Calculation:**
  - Cross-product of:
    - Average response time to user requests during each step.
    - Execution time of each step.
- **Experiment Runs:**
  - 30 runs to measure average recovery impact.

#### 2) Experimental Results

- **Table 30: Recovery Impact for Scale-up**
  - **Highest Relative Standard Deviation:** 2.4%.
  - **Pareto Set Search Optimization:**
    - Selected recovery action has no greater impact than other applicable actions.
  - **User Constraints Based Optimization:**
    - Selected recovery action is within the impact constraint set by business stakeholders.

### D. Recovery Reducing Monetary Cost

#### 1) Experimental Procedure

- **Objective:** Measure the monetary cost of recovery on the cloud system.
- **Setup:**
  - 12 instances in the cloud application.
  - Attached to an auto-scaling group (ASG).
  - Registered with an elastic load balancer (ELB).
  - Application: TPC-W (3-tier web benchmark running on Tomcat).
  - Workload: 50 query requests per second per instance.
- **Fault Injection:**
  - Faults injected at two determined recovery points using a proprietary fault injection tool.
  - Applicable recovery patterns filtered and selected based on section 7.3.
  - Recovery performed using selected acceptable recovery actions.
- **Faults Injected:**
  - Table 31: Faults for Scale-up Operation
    - **Recovery Point 1 (After Step 2):** 6 instances with wrong AMI.
    - **Recovery Point 2 (After Step 3):** 6 instances not in ELB.

- **Cost Calculation:**
  - Sum of monetary costs incurred by each step in the recovery action.
- **Experiment Runs:**
  - 30 runs to measure average recovery monetary cost.

#### 2) Experimental Results

- **Table 32: Recovery Monetary Cost for Scale-up**
  - **Relative Standard Deviation:** 0%.
  - **Pareto Set Search Optimization:**
    - Selected recovery action has no greater cost than other applicable actions.
  - **User Constraints Based Optimization:**
    - Selected recovery action is within the monetary cost constraint set by business stakeholders.