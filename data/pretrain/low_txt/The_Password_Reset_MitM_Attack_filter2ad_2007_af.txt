### IX. PASSWORD RESET PROCESS AUDITING

Our research uncovered vulnerabilities in the password reset processes of some of the world's most popular websites. If well-secured sites such as Google and Facebook are vulnerable, it is reasonable to assume that many other, less scrutinized websites may also be at risk.

The potential damage to billions of accounts across numerous websites necessitates the creation of a concise list of possible issues and secure alternatives. This section provides such a list, which can be used to audit and enhance the security of password reset procedures on websites. The section begins with general guidelines and then delves into specific challenges and recommendations discussed in the paper.

#### A. General Guidelines

Here are guidelines to prevent Password Reset Man-in-the-Middle (PRMitM) attacks. We do not include well-known and basic principles, such as limiting the number of attempts to enter a reset code or invalidating previous codes when a new one is requested.

1. **Password-Reset Messages**: 
   - Password-reset messages (SMS, phone call, email) must include the sending website, a clear explanation of the code's purpose (password reset), and a warning to avoid sharing the code with anyone or any website.
   - Even with these elements, the attack may still occur.

2. **Secure Implementation**:
   - Despite the above, password resets using SMS or phone calls can be implemented securely. See examples in Sections VII-B2 and VII-C. Additionally, consider the following points.

3. **Language Support**:
   - For each supported language, the password reset messages (SMS, phone call, email) must be sent in that language.
   - Test your password reset process for every supported language separately.

4. **User Notification**:
   - Notify the user when a password reset request is sent, both via email and phone. If the reset is initiated via the phone, this notification is even more critical. Email notifications to compromised accounts are ineffective.

5. **Time-Limited Codes**:
   - The link or code sent to reset the password should be valid for a short period, e.g., 1-15 minutes.

6. **Disable Insecure Methods**:
   - If there are multiple ways to reset a password, automatically disable the less secure ones. If a secure password reset process cannot be used, contact the user in advance to add information that can be used to reset the password securely and disable the insecure methods.

7. **User Verification**:
   - Require several details about the user before sending the password-reset message (SMS, phone call, email). This prevents attackers from easily launching an attack with only the user's phone number.

Finally, although the recommendations in this section are primarily focused on PRMitM attacks, it is important to note that, according to the NIST Digital Authentication Guideline, relying solely on SMS or phone calls for authentication is not recommended due to other security concerns [51].

#### B. Security Questions

Avoid relying on security questions, as they are relatively easy to bypass using PRMitM attacks or other techniques [29]–[32].

For users who do not have an alternative email account or phone number, we offer two alternatives:
1. Rely on email accounts of friends (Section VII-E).
2. Use security questions that are strongly related to the user’s actions on the website (Section VII-A).

The second option is still vulnerable to other attacks and is thus less preferred. When a user does not provide an alternative email address or phone number, the website should at least warn the user about the dangers of relying on security questions and encourage them to use the alternatives.

#### C. SMS Code

- **Specify the Sender Name**: Use SMS spoofing to indicate the real sender.
- **Do Not Send Code as Clear Text**: Many users do not read the messages and just copy the code. Instead, send an SMS with a detailed message and a long link (see Section VII-B2).

#### D. Phone Call

- **Add Interactivity**: Ensure users listen to the message and understand what they are doing. For example, after reading a detailed message, do not immediately give the code; instead, ask the user a few questions to confirm their understanding.

### X. CONCLUSIONS

This paper introduced the PRMitM attack, which exploits vulnerabilities in the password reset procedures of popular and other websites and mobile applications. The attack allows a weak attacker to take over accounts on many websites, including Google and Facebook. We evaluated the attacks and identified vulnerabilities and weaknesses in the password reset processes.

While simple defenses like more detailed SMS messages may seem sufficient, our experiments indicate otherwise. We designed and evaluated defenses compared to existing implementations by Google and Facebook, and our results show significant improvements in security. Finally, to help vulnerable websites test and improve their password reset processes, we created a list of rules and recommendations for easy auditing.

### ACKNOWLEDGMENTS

The authors wish to express their gratitude to the Research Fund of the Research Authority of the College of Management Academic Studies, Rishon Lezion, Israel, for the financial support provided for this research.

### REFERENCES

[1] R. Morris and K. Thompson, “Password security: A case history,” Communications of the ACM, vol. 22, no. 11, pp. 594–597, 1979.
[2] Troy Hunt, “Have I Been Pwned?” https://haveibeenpwned.com/.
[3] S. Gaw and E. W. Felten, “Password management strategies for online accounts,” in Proceedings of the second symposium on Usable privacy and security. ACM, 2006, pp. 44–55.
[4] X. de Carné de Carnavalet and M. Mannan, “From very weak to very strong: Analyzing password-strength meters,” in Network and Distributed System Security Symposium (NDSS 2014). Internet Society, 2014.
[5] R. Shay, S. Komanduri, P. G. Kelley, P. G. Leon, M. L. Mazurek, L. Bauer, N. Christin, and L. F. Cranor, “Encountering stronger password requirements: user attitudes and behaviors,” in Proceedings of the Sixth Symposium on Usable Privacy and Security. ACM, 2010, p. 2.
[6] S. Komanduri, R. Shay, P. G. Kelley, M. L. Mazurek, L. Bauer, N. Christin, L. F. Cranor, and S. Egelman, “Of passwords and people: measuring the effect of password-composition policies,” in Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2011, pp. 2595–2604.
[7] B. Ur, P. G. Kelley, S. Komanduri, J. Lee, M. Maass, M. L. Mazurek, T. Passaro, R. Shay, T. Vidas, L. Bauer et al., “How does your password measure up? the effect of strength meters on password creation,” in Presented as part of the 21st USENIX Security Symposium (USENIX Security 12), 2012, pp. 65–80.
[8] R. Shay, S. Komanduri, A. L. Durity, P. S. Huh, M. L. Mazurek, S. M. Segreti, B. Ur, L. Bauer, N. Christin, and L. F. Cranor, “Designing password policies for strength and usability,” ACM Transactions on Information and System Security (TISSEC), vol. 18, no. 4, p. 13, 2016.
[9] M. Zviran and W. J. Haga, “A comparison of password techniques for multilevel authentication mechanisms,” The Computer Journal, vol. 36, no. 3, pp. 227–237, 1993.
[10] J. J. Yan, A. F. Blackwell, R. J. Anderson, and A. Grant, “Password memorability and security: Empirical results.” IEEE Security & privacy, vol. 2, no. 5, pp. 25–31, 2004.
[11] L. V. Ahn, M. Blum, N. J. Hopper, and J. Langford, “CAPTCHA: Using Hard AI Problems for Security,” in EUROCRYPT. Springer-Verlag, 2003, pp. 294–311. [Online]. Available: http://dl.acm.org/citation.cfm?id=1766171.1766196
[12] M. L. Mazurek, S. Komanduri, T. Vidas, L. Bauer, N. Christin, L. F. Cranor, P. G. Kelley, R. Shay, and B. Ur, “Measuring password guess-ability for an entire university,” in Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security. ACM, 2013, pp. 173–186.
[13] T. N. Jagatic, N. A. Johnson, M. Jakobsson, and F. Menczer, “Social phishing,” Communications of the ACM, vol. 50, no. 10, pp. 94–100, 2007.
[14] J. M. Jeff Williams and N. Mattatall, “Cross Site Scripting Prevention Cheat Sheet,” https://www.owasp.org/index.php/XSS (Cross Site Scripting) Prevention Cheat Sheet, March 2016.
[15] Paul Peteﬁsh, Eric Sheridan, and Dave Wichers, “Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet,” https://www.owasp.org/index.php/Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet, 2015.
[16] R. Hansen and J. Grossman, “Clickjacking,” Sec Theory, Internet Security, 2008.
[17] S. Lekies, B. Stock, M. Wentzel, and M. Johns, “The unexpected dangers of dynamic JavaScript,” in 24th USENIX Security Symposium (USENIX Security 15), 2015, pp. 723–735.
[18] N. Gelernter and A. Herzberg, “Tell me about yourself: The malicious CAPTCHA attack,” in Proceedings of the 25th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee, 2016, pp. 999–1008.
[19] T. Van Goethem, W. Joosen, and N. Nikiforakis, “The clock is still ticking: Timing attacks in the modern web,” in Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security. ACM, 2015, pp. 1382–1393.
[20] R. Dhamija and J. D. Tygar, “Why phishing works,” in In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM Press, 2006, pp. 581–590.
[21] Noriaki Hayashi, “New Phishing Operation Technique Outfoxes Site Owners: Operation Huyao,” http://blog.trendmicro.com/trendlabs-security-intelligence/new-phishing-technique-outfoxes-site-owners-operation-huyao/, November 2014.
[22] Jim Youll, “Fraud Vulnerabilities in SiteKey Security at Bank of America,” http://cr-labs.com/publications/SiteKey-20060718.pdf, July 2006.
[23] Google, “Prevent phishing attacks on your users,” https://support.google.com/a/answer/6197480?hl=en, November 2016.
[24] J. A. Chaudhry, S. A. Chaudhry, and R. G. Rittenhouse, “Phishing attacks and defenses,” International Journal of Security and Its Applications, vol. 10, no. 1, pp. 247–256, 2016.
[25] A. Dvorkin and A. Herzberg, “Effective and usable browser-based defenses against phishing,” International Journal of Electronic Security and Digital Forensics, 2009, accepted with revisions, revised version sent.
[26] S. Egelman, L. F. Cranor, and J. Hong, “You’ve been warned: an empirical study of the effectiveness of web browser phishing warnings,” in Proceeding of the twenty-sixth annual SIGCHI conference ’08. New York, NY, USA: ACM, 2008, pp. 1065–1074. [Online]. Available: http://doi.acm.org/10.1145/1357054.1357219
[27] Alexa, “Top Sites,” http://www.alexa.com/topsites, May 2016.
[28] J. Bonneau, E. Bursztein, I. Caron, R. Jackson, and M. Williamson, “Secrets, lies, and account recovery: lessons from the use of personal knowledge questions at Google,” in Proceedings of the 24th International Conference on World Wide Web. ACM, 2015, pp. 141–150.
[29] M. Just, “Designing and evaluating challenge-question systems,” IEEE Security & Privacy, no. 5, pp. 32–39, 2004.
[30] M. Jakobsson, E. Stolterman, S. Wetzel, and L. Yang, “Love and authentication,” in Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2008, pp. 197–200.
[31] A. Rabkin, “Personal knowledge questions for fallback authentication: Security questions in the era of Facebook,” in Proceedings of the 4th symposium on Usable privacy and security. ACM, 2008, pp. 13–23.
[32] S. Schechter, A. B. Brush, and S. Egelman, “It’s no secret. Measuring the security and reliability of authentication via ‘secret’ questions,” in Security and Privacy, 2009 30th IEEE Symposium on. IEEE, 2009, pp. 375–390.
[33] Facebook, “Facebook Login for your Apps & Websites,” https://developers.facebook.com/products/login, May 2016.
[34] D. Irani, M. Balduzzi, D. Balzarotti, E. Kirda, and C. Pu, “Reverse social engineering attacks in online social networks,” in Detection of intrusions and malware, and vulnerability assessment. Springer, 2011, pp. 55–74.
[35] Bill Marczak and John Scott-Railton, “The Million Dollar Dissident: NSO Group’s iPhone Zero-Days Used Against UAE Human Rights Defender,” https://citizenlab.org/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/, August 2016.
[36] Chris Smith, “One innocuous text message can wreck your Android phone’s security,” http://bgr.com/2016/02/16/android-sms-malware-attack-mazar-bot/, February 2016.
[37] S. Schechter, S. Egelman, and R. W. Reeder, “It’s not what you know, but who you know: a social approach to last-resort authentication,” in Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2009, pp. 1983–1992.
[38] M. Egele, L. Bilge, E. Kirda, and C. Kruegel, “Captcha smuggling: hijacking web browsing sessions to create captcha farms,” in Proceedings of the 2010 ACM Symposium on Applied Computing. ACM, 2010, pp. 1865–1870.
[39] K. Thomas and D. M. Nicol, “The Koobface botnet and the rise of social malware,” in Malicious and Unwanted Software (MALWARE), 2010 5th International Conference on. IEEE, 2010, pp. 63–70.
[40] T. Lauinger, V. Pankakoski, D. Balzarotti, and E. Kirda, “Honeybot, your man in the middle for automated social engineering.” in LEET, 2010.
[41] M. Huber, S. Kowalski, M. Nohlberg, and S. Tjoa, “Towards automating social engineering using social networking sites,” in Computational Science and Engineering, 2009. CSE’09. International Conference on, vol. 3. IEEE, 2009, pp. 117–124.
[42] T. Dougan and K. Curran, “Man in the browser attacks,” International Journal of Ambient Computing and Intelligence (IJACI), vol. 4, no. 1, pp. 29–39, 2012.
[43] V. Roth, W. Polak, E. Rieffel, and T. Turner, “Simple and effective defense against evil twin access points,” in Proceedings of the first ACM conference on Wireless network security. ACM, 2008, pp. 220–235.
[44] Y. Song, C. Yang, and G. Gu, “Who is peeping at your passwords at Starbucks?—to catch an evil twin access point.” in DSN, vol. 10, 2010, pp. 323–332.
[45] C. Karlof, J. D. Tygar, and D. Wagner, “Conditioned-safe ceremonies and a user study of an application to web authentication.” in NDSS, 2009.
[46] Brad Stone, “Breaking Google CAPTCHAs for $3 a Day,” http://bits.blogs.nytimes.com/2008/03/13/breaking-google-captchas-for-3-a-day/?r=0, 2008.
[47] E. Bursztein, M. Martin, and J. Mitchell, “Text-based CAPTCHA strengths and weaknesses,” in Proceedings of the 18th ACM conference on Computer and communications security. ACM, 2011, pp. 125–138.
[48] C. Cruz-Perez, O. Starostenko, F. Uceda-Ponga, V. Alarcon-Aquino, and L. Reyes-Cabrera, “Breaking reCAPTCHAs with unpredictable collapse: heuristic character segmentation and recognition,” in Pattern Recognition. Springer, 2012, pp. 155–165.
[49] E. Bursztein, J. Aigrain, A. Moscicki, and J. C. Mitchell, “The end is nigh: Generic solving of text-based CAPTCHAs,” in 8th USENIX Workshop on Offensive Technologies (WOOT 14), 2014.
[50] E. Bursztein and S. Bethard, “Decaptcha: breaking 75% of eBay audio CAPTCHAs,” in Proceedings of the 3rd USENIX conference on Offensive technologies. USENIX Association, 2009, p. 8.
[51] Paul A. Grassi, James L. Fenton, Elaine M. Newton, Ray A. Perlner, Andrew R. Regenscheid, William E. Burr, Justin P. Richer, Naomi B. Lefkovitz, Jamie M. Danker, Yee-Yin Choong, Kristen K. Greene, and Mary F. Theofanos, “DRAFT NIST Special Publication 800-63B: Digital Authentication Guideline,” https://pages.nist.gov/800-63-3/sp800-63b.html, November 2016.