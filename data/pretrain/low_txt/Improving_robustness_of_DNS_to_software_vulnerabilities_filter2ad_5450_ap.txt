### Data Matrix Construction and Normalization
We construct a matrix where each row represents a host, and each column represents an NXDOMAIN. If host \( i \) queried NXDOMAIN \( j \) on a given day, we assign a weight \( w_{ij} = 1 \). Otherwise, we assign \( w_{ij} = 0 \). Each row is then normalized such that the sum of the weights in that row equals one.

### Cumulative Distribution of NXDOMAINs
Figure A.1 shows the cumulative distribution of the distinct number of NXDOMAINs queried by each host on December 18, 2016.

### Singular Value Decomposition (SVD)
Next, we perform Singular Value Decomposition (SVD) on this matrix and retain the first \( N \) eigenvalues. For our dataset, we choose \( N = 35 \) based on the scree plot of eigenvalues, which indicates that the eigenvalue line plateaus after \( N \geq 35 \).

### Clustering and Feature Extraction
The resulting eigenvectors are used for XMeans clustering. Once we have the clusters of NXDOMAINs, we extract a feature vector for each cluster. These feature vectors will be used for classification. We use four feature families: length, entropy, pairwise Jaccard distance of character distribution, and pairwise Dice distance of bigram distribution. This results in a 36-length feature vector for classification, based on the properties of the domain strings. For more details, refer to Section 4.1.1 in the original Pleiades paper [25].

### Classification
Finally, the classifier uses these feature vectors to detect existing, known DGAs and identify new, previously unseen DGAs.

### Training Dataset
To obtain DGA domains for the training dataset, we analyzed dynamic malware execution traffic and executed reverse-engineered DGA algorithms. First, we identified NXDOMAINs queried by malware MD5s by analyzing malware PCAPs from a security vendor. We used AVClass [132] to label the malware family of these MD5s. This method allowed us to label Pykspa, Suppobox, and Gimemo malware families, which were active in our dataset. We extracted one feature family per cluster for these families. Second, we used reverse-engineered DGA domains to compensate for the limited visibility of DGAs in the network dataset. Although only Pykspa, Suppobox, and Murofet domains had matches in active clusters, we extracted one feature vector for each version's daily domains of 14 DGA families from the reverse-engineered DGA domain dataset. Table A.1 shows the distribution of the number of feature vectors from the reverse-engineered DGAs (top) and those seen in clusters (bottom).

### Classifier Training
We trained the classifier with 17 classes, including 16 malware families and one manually labeled benign class. The benign class was labeled from clusters containing a mix of various benign domains, as well as clusters containing disposable domains (e.g., DNS queries to Anti-Virus online reputation products [133]).

### Model Selection
We performed model selection among the following algorithms: Naive Bayes, Linear SVM, Random Forest, Logistic Regression, and Stochastic Gradient Descent Classifier. After evaluating the performance of the different classifiers, we chose to use Random Forest. Random Forests are similar to Alternative Decision Trees, a boosted tree-based classifier used in the original Pleiades paper. We tested our classifier with five-fold cross-validation and achieved an average accuracy of 96.08% and a false positive rate of 0.9%. Figures A.2 and A.3 show the multi-class ROC curves and the micro and macro ROC curves of the multi-class classifier in our implementation of Pleiades.

### Current DGA Landscape
We ran the DGA detection system over anonymized network traffic from a Recursive DNS server at a telecommunication provider from December 18, 2016, to December 29, 2016.

#### Newly Discovered DGAs
We found 12 new DGA malware families. Figure A.4 shows five of them:
- **New DGA A**: Similar to Chinad, with 59,904 domains. The generated domains have a fixed length of 18 characters and use five TLDs: .com, .net, .cn, .biz, and .ru.
- **New DGA B**: A dictionary-words DGA similar to Gozi. Gozi generates domains by combining words from lists such as RFCs, the Ninety Five Theses of Martin Luther, and the GNU GPL. In 12 days, we observed 9,815 domain names from this DGA, with 10,435 infected hosts.
- **New DGA C**: Similar to Gimemo, using bigrams and trigrams. We found 6,738 domains, most of which follow a consonant-vowel-consonant pattern, making the domains almost readable.
- **New DGA D**: Uses .com TLD with second-level labels varying between 12 and 18 characters.
- **New DGA E-v1, E-v2, E-v3**: Iterates through algorithm-generated second-level domains and child labels.

#### Evasion Attempts
The DGAs of Qakbot and Pykspa provide evidence of evasion attempts:
- **Qakbot**: Generates redundant domains when running in a sandbox environment.
- **Pykspa**: Generates two sets of domains based on different seed sets, querying both sets along with a list of benign domains.

These evasion methods can make sinkholing operations more challenging and increase the cost of detecting actual C&C domains. Our classifier initially had low confidence in detecting new DGAs B, C, and E-v1 due to the lack of DGA domains with child labels in the training dataset. After retraining with additional DGA families observed from the network, the classifier successfully identified new variants DGA E-v2 and DGA E-v3 with high confidence.

### References
[1] ITNews. Inside eBay's 90PB data warehouse. https://www.itnews.com.au/news/inside-ebay8217s-90pb-data-warehouse-342615.
[2] The Economist. Data, data everywhere. http://www.economist.com/node/15557443.
[3] Interactive Advertising Bureau. Viewability Has Arrived: What You Need To Know To See Through This Sea Change. http://www.iab.net/iablog/2014/03/viewability-has-arrived-what-you-need-to-know-to-see-through-this-sea-change.html. 2014.
[4] Google. Just in time for the holidays - viewability across the Google Display Network. http://adwords.blogspot.co.uk/2013/12/just-in-time-for-holidays-viewability.html. 2013.
[5] FBI New York Field Office. Press Release: Defendant Charged In Massive Internet Fraud Scheme Extradited From Estonia Appeared In Manhattan Federal Court. https://archives.fbi.gov/archives/newyork/press-releases/2012/defendant-charged-in-massive-internet-fraud-scheme-extradited-from-estonia-appeared-in-manhattan-federal-court. 2012.
[6] LawFuel Editors. Massive Internet Fraud Nets Extradicted Estonian Defendant at Least $14 Million. http://www.lawfuel.com/massive-internet-fraud-nets-extradicted-estonian-defendant-least-14-million. 2014.
[7] Paul Pearce et al. “Characterizing Large-Scale Click Fraud in ZeroAccess”. In: Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security. CCS '14. Scottsdale, Arizona, USA: ACM, 2014, pp. 141–152. ISBN: 978-1-4503-2957-6.
[8] Daniel Lowd and Christopher Meek. “Good Word Attacks on Statistical Spam Filters”. In: CEAS. 2005.
[9] Gregory L Wittel and Shyhtsun Felix Wu. “On Attacking Statistical Spam Filters”. In: CEAS. 2004.
[10] Charles Smutz and Angelos Stavrou. “Malicious PDF Detection Using Metadata and Structural Features”. In: Proceedings of the 28th Annual Computer Security Applications Conference. ACM. 2012, pp. 239–248.
[11] Nedim Rndic and Pavel Laskov. “Practical Evasion of a Learning-Based Classifier: A Case Study”. In: Security and Privacy (SP), 2014 IEEE Symposium on. IEEE. 2014, pp. 197–211.
[12] Weilin Xu, Yanjun Qi, and David Evans. “Automatically Evading Classifiers”. In: Proceedings of the 2016 Network and Distributed Systems Symposium. 2016.
[13] Suphannee Sivakorn, Iasonas Polakis, and Angelos D Keromytis. “I Am Robot: (deep) Learning to Break Semantic Image Captchas”. In: Security and Privacy (EuroS&P), 2016 IEEE European Symposium on. IEEE. 2016, pp. 388–403.
[14] Amir Globerson and Sam Roweis. “Nightmare at Test Time: Robust Learning by Feature Deletion”. In: Proceedings of the 23rd international conference on Machine learning. ACM. 2006, pp. 353–360.
[15] Nicolas Papernot et al. “The Limitations of Deep Learning in Adversarial Settings”. In: Security and Privacy (EuroS&P), 2016 IEEE European Symposium on. IEEE. 2016, pp. 372–387.
[16] Nicholas Carlini and David Wagner. “Towards evaluating the robustness of neural networks”. In: Security and Privacy (EuroS&P), 2017 IEEE European Symposium on. IEEE. 2017.
[17] Prahlad Fogla and Wenke Lee. “Evading Network Anomaly Detection Systems: Formal Reasoning and Practical Techniques”. In: Proceedings of the 13th ACM conference on Computer and communications security. ACM. 2006, pp. 59–68.
[18] David Wagner and Paolo Soto. “Mimicry Attacks on Host-Based Intrusion Detection Systems”. In: Proceedings of the 9th ACM Conference on Computer and Communications Security. ACM. 2002, pp. 255–264.
[19] Battista Biggio et al. “Is Data Clustering in Adversarial Settings Secure?” In: Proceedings of the 2013 ACM workshop on Artificial intelligence and security. ACM. 2013, pp. 87–98.
[20] Battista Biggio et al. “Poisoning Behavioral Malware Clustering”. In: Proceedings of the 2014 Workshop on Artificial Intelligent and Security Workshop. ACM. 2014, pp. 27–36.
[21] Wei Meng, Ruian Duan, and Wenke Lee. “DNS Changer Remediation Study”. In: M3AAWG 27th General Meeting. 2013.
[22] TDSS/TDL4 Domain Names. http://www.cc.gatech.edu/~ychen462/files/misc/tdssdomains.pdf.
[23] ClickZ. Fake Display Ad Impressions Comprise 30% of All Online Traffic [Study]. http://bit.ly/2e3HdCZ.
[24] Association of National Advertisers. The Bot Baseline: Fraud in Digital Advertising. http://bit.ly/1PKe769.
[25] Manos Antonakakis et al. “From Throw-Away Traffic to Bots: Detecting the Rise of DGA-Based Malware”. In: Presented as part of the 21st USENIX Security Symposium (USENIX Security 12). 2012, pp. 491–506.
[26] Yacin Nadji et al. “Connected Colors: Unveiling the Structure of Criminal Networks”. In: International Workshop on Recent Advances in Intrusion Detection. Springer Berlin Heidelberg. 2013, pp. 390–410.
[27] Ulrich Bayer et al. “Scalable, Behavior-Based Malware Clustering.” In: NDSS. Vol. 9. 2009, pp. 8–11.
[28] Roberto Perdisci, Wenke Lee, and Nick Feamster. “Behavioral Clustering of HTTP-Based Malware and Signature Generation Using Malicious Network Traces”. In: NSDI. Vol. 10. 2010, p. 14.
[29] Terry Nelms et al. “Towards Measuring and Mitigating Social Engineering Software Download Attacks”. In: 25th USENIX Security Symposium (USENIX Security 16). USENIX Association. 2016, pp. 773–789.
[30] Luca Invernizzi et al. “Nazca: Detecting Malware Distribution in Large-Scale Networks”. In: NDSS. Vol. 14. 2014, pp. 23–26.
[31] Bryan Perozzi, Rami Al-Rfou, and Steven Skiena. “Deepwalk: Online learning of social representations”. In: Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM. 2014, pp. 701–710.