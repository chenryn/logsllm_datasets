# Linux-Stack Based V2X Framework: All You Need to Hack Connected Vehicles

**Authors:**  
Duncan Woodbury, Nicholas Haltmeyer  
{PI:EMAIL, PI:EMAIL}

**Date:** July 29, 2017

**Presenters:** p3n3troot0r, ginsback  
**Event:** DEFCON V2X  
**Date:** July 29, 2017

---

## 1. State of the World: (Semi)Autonomous Driving Technologies

- **Vehicular Automation:** Widespread in the global industry.
- **Accessibility:** Automated driving technologies are becoming more accessible to the general public.
- **Communication Protocols:** Current vehicular network communication protocols are highly flawed.
- **CANBUS and Derivatives:** New automated technologies still rely on CANBUS and its derivatives.

---

## 2. Stages of Autonomy

- **Current Stage (Stage 2):** Combined Function Automation.
- **Future Stage (Stage 3):** Leveraging vehicular ad hoc mesh networks for the exchange of safety and actor/world state information.

---

## 3. Critical Aspects of V2X

- **Networking and Exchange:** Reliable high-throughput ad hoc mesh networking and real-time data exchange in a cyber-physical environment.
- **Standardization:** Standardizing Stage 3 automation in federal and consumer transportation systems.
- **Enhanced Safety and Traffic Optimization:** Utilizing V2X for enhanced safety and traffic optimization.

---

## 4. Technologies Using V2X

- **Collision Avoidance Systems:** Forward Collision Warning.
- **Advanced Driver Assistance Systems (ADAS).**
- **Cooperative Adaptive Cruise Control.**
- **Automated Ticketing and Tolling.**

---

## 5. Impact of V2X: Why Care?

- **Self-Driving Cars:** They are innovative and attractive.
- **Safety for Future Generations:** Your children will likely ride in these vehicles.
- **Enhanced Safety Functions:** Capabilities not possible with onboard systems alone.
- **Broader Applicability:** V2X technologies can be applied across various cyber-physical systems.
- **NHTSA V2V NPRM:** V2V to be standardized in light vehicles.
- **Imminent Adoption:** The technology is being implemented, and you should be part of it.

---

## 6. Tangible Benefits

According to the USDOT, V2X technologies can:

- **Prevent Crashes:** 25,000 to 592,000 crashes annually.
- **Save Lives:** 49 to 1,083 lives.
- **Avoid Injuries:** 11,000 to 270,000 injuries.
- **Reduce Property Damage:** 31,000 to 728,000 property-damaging crashes.
- **Travel Time Reduction:**
  - 27% reduction for freight.
  - 23% reduction for emergency vehicles.
  - 42% reduction on freeways with cooperative adaptive cruise control and speed harmonization.

---

## 7. Impact on Automotive Security

- **Adoption and Development:** Will drive the adoption and development of autonomous vehicles.
- **Complexity in Transportation Systems:** Homogeneous use of WAVE and V2X introduces unprecedented complexity.

---

## 8. V2X Protocol Stack

### IEEE 802.11p
- **Wireless Access in Vehicular Environments (WAVE):** An amendment to IEEE 802.11-2012.
- **PHY Layer:** Supports WAVE/DSRC.
- **No Association or Authentication:** Uses a wildcard BSSID.
- **Frequency:** 5.8-5.9 GHz OFDM.

### IEEE 1609
- **WAVE Short Message Protocol (WSMP):** 
  - **1609.2 Security Services:** PKI, certificate revocation, misbehavior reporting.
  - **1609.3 Networking Services:** Advertisements, message fields.
  - **1609.4 Multi-Channel Operation:** Channel synchronization, MLMEX.
  - **1609.12 Identifier Allocations:** Provider service IDs.

### SAE J2735
- **DSRC Message Set and Data Elements:** ASN1 UPER encoding.
- **Messages:** Basic Safety Message (BSM), Emergency Vehicle Alert (EVA), etc.

---

## 9. Subtleties in Protocol Specifications

- **Ambiguous Parse Rules:** For certain frames (Information Element Extension).
- **Service Gating:** Only by PKI permissions.
- **Proprietary Applications:** Use ad hoc permissions.
- **Privacy Concerns:** Messages may leak sensitive personal information.
- **Misbehavior Reporting:** Randomizes the send address for privacy.
- **Channel Switching:** Single-antenna systems may desynchronize, causing delays.

---

## 10. State of V2X Standards

- **IEEE 802.11-2012:** Details 802.11p, but not supported by most COTS WiFi hardware.
- **IEEE 1609.{3,4}:** Stable, under development.
- **IEEE 1609.2 (PKI, Misbehavior Reporting):** Incomplete, under development.
- **SAE J2735:** Stable, under development, but ASN1 (2016) is not stable.

---

## 11. Possible Unintentional Obfuscation of the Standards

- **Removal of Message CRC from J2735.**
- **Continued Revisions:** May make in-field devices obsolete.
- **WSMPv3 (Current):** No backward compatibility.
- **Vague Best Practices:** Favoring proprietary implementations.

---

## 12. Major Changes to the Standards

- **Decades of Development:** Standards still in development.
- **FCC Spectrum Allocation:** 1999.
- **WAVE Codification:** 2005.
- **J2735 Introduction:** 2006.
- **Security Services Rewrites:** To change certificate structure.
- **Management Plane Rewrites:** To add services (P2PCD).
- **Incomplete Safety Message Dictionary.**
- **Lack of Application-Layer Standards.**

---

## 13. Physical Manifestations of V2X: Deployment

- **USDOT Pilot Studies:** NYC, Tampa (THEA), Wyoming.

---

## 14. V2X in the Linux Networking Subsystem

### 802.11p: Driver and Kernel Tree Modifications
- **WiFi Driver Modifications:**
  - Support for ITS-G5 channel spectrum.
  - 5/10 MHz-width channels.
  - OCB mode support and error checking.
  - User-specified regulatory domain.
- **Net/Wireless Modifications:**
  - Wildcard broadcast transmission.
  - 5/10 MHz-width channels.
  - Channel state definitions for OCB mode.
- **mac80211 Modifications:**
  - OCB mode support and error checking.
  - Initialization and de-initialization.
  - Channel filter configuration.
  - Disable beaconing and association.
- **cfg80211 Modifications:**
  - Channel filter configuration for OCB mode.
  - 5/10 MHz-width channels.
- **nl80211 Modifications:**
  - Channel filter configuration for OCB mode.
  - 5/10 MHz-width channels.

### IEEE 1609: 1609 in the Linux Kernel
- **Kernel Module:** Pack, parse, and broadcast messages.
- **Data Structures:** WSM, WSA, WRA, SII, CII, IEX.
- **Field Control:** Subtype, TPID, PSID, channel, tx power, data rate, location, etc.
- **Operating Modes:** Strict, lax, loose.
- **Channel Sync and Dispatch.**
- **Netlink Socket Interface:** To userspace (af wsmp).

### Error Checking and Corrections
- **Parser Short Circuiting.**
- **Domain Checks:** On each field.
- **Error Handling:** EBADMSG, EINVAL, EFAULT, etc.

### SAE J2735: Userspace J2735 Message Dictionary
- **Socketv2v Utility Suite:** v2vsend, v2vdump, v2vsni↵er.
- **Message Formats:** Fully implements BSM, EVA, RSA, CSR.
- **Netlink Socket Communication:** With 1609 kernel module.
- **VANET Participation:** With a generic Linux box and 5GHz WiFi.

---

## 15. Platform Requirements: Linux!

- **V2X Stack Integration:** Mainline Linux kernel.
- **No Proprietary Hardware/Software Required.**
- **Current V2X Stack:** Makes deployed V2X solutions obsolete.
- **Supported Drivers:** ath9k/ath9k htc, rtlwifi.
- **Full Implementation:** 802.11p, IEEE 1609.{3,4} in the Linux networking subsystem.
- **IEEE 1609.2 Integration:** Upon completion.

---

## 16. Capabilities Leveraging V2X Stack: Hacking Connected Vehicles

- **Rapid Prototyping:** New V2V applications.
- **Penetration Testing:** Commercial implementations.
- **Network Analysis:** Real V2V network data.
- **Pilot Studies and Protocol Analysis.**

---

## 17. Developing Connected Vehicle Technologies

- **Community Engagement:** Security community involvement in standards development.
- **CANBUS Limitations:** Historical lessons.
- **Interaction with V2X Infrastructure.**
- **Pressure on Manufacturers:** Implement functional V2V.
- **Experimental Platforms:** UAS, maritime, orbital, heavy vehicles.
- **Empirical Research:** Identify vulnerabilities.
- **Wardriving:** Straightforward with DIY radio (Pi Zero with 5GHz USB adapter).

---

## 18. (You Can) Use J2735 DSRC over 802.11p with Linux

- **Participate in VANETS.**
- **v2vsend:** Craft and inject messages into ITS spectrum.
- **v2vsni↵er:** Sni↵ specific messages from particular actors.
- **v2vdump:** Capture all communications on ITS channels.

---

## 19. DSRC Sniffing/Wardriving

- **Broadcast Protocol:** Dimensions, directionality, orientation, acceleration, display, etc., provide means to fingerprint and track participants.
- **Probe Data Service:** Collects anonymous probe data from Mobile Users.
- **Application Initialization:** Matches locally registered AID with advertised AID.
- **Highly Distributed Infrastructure:** Attacks can propagate easily.

---

## 20. Understanding the Adversary

### Passive
- **Trajectory Determination:** Within some radius.
- **Few Stations Required:** To monitor a typical highway.
- **Service Identification:** Determine services provided by peers.
- **Traffic Characterization:** For regions of the road.
- **Hardware Fingerprinting:** RF signature, probe responses.

### Active
- **Denial of Service.**
- **Manipulate Misbehavior Reports.**
- **Exploit Hardware/Software:** Access CANBUS.
- **Regional Configurations:** Lead to undefined behavior.
- **Disrupt Vehicle Traffic.**
- **Impersonate Emergency Vehicle.**
- **Mobile Tollbooth.**
- **Platooning Service:** Assume direct control.

---

## 21. Hacking ITS

- **Level 1:** Denial of Service.
- **Level 2:** DSRC spectrum sweep, enumerate proprietary services.
- **Level 3:** Impersonate an emergency vehicle.
- **Level 4:** Become a mobile tollbooth.
- **Level 1337:** Remotely execute platooning service.

---

## 22. Protocol Exploitation

- **Design Flaws:** Create rapidly propagating effects.
- **Privacy Mitigations:** Added as an afterthought.
- **PKI/Trust Management:** Doesn't scale.
- **XML-Driven J2735:** Safety message dictionary.
- **RSU Vulnerability:** Single point of failure for the region.

---

## 23. Global Access to V2X

- **Streamline Testing and Development:** Provides a vehicle for V2X.
- **Mainline Linux Kernel Integration:** Easily applied to UAS, maritime, heavy truck, and communication systems.
- **Tangible, Scalable, Accessible:** Now it's up to us to fix it!

---

## 24. What: V2X in Your Hands

- **Shape the Future:** Development of ITS.
- **Mitigate Systemic Issues:** In VANET security.
- **Promote Open Solutions:** Free as in freedom.
- **Reduce Attack Surface:** Through good standards.
- **Engage in Public VANET:** Hack the planet.

---

## 25. Acknowledgments

---

## 26. References

- **GitHub:** [https://github.com/p3n3troot0r/Mainline-80211P](https://github.com/p3n3troot0r/Mainline-80211P)
- **Estimated Benefits of Connected Vehicle Applications:** Dynamic Mobility Applications, AERIS, V2I Safety, and Road Weather Management Applications – U.S. Department of Transportation, 2015.
- **Vehicle-to-Vehicle Communications: Readiness of V2V Technology for Application:** U.S. Department of Transportation, National Highway Traffic Safety Administration, 2014.
- **Threat and Countermeasures Analysis for WAVE Service Advertisement:** William Whyte, Jonathan Petit, Virendra Kumar, John Moring, and Richard Roy, IEEE 18th International Conference on Intelligent Transportation Systems, 2015.
- **Impact of Desynchronization Problem in 1609.4/WAVE Multi-Channel Operation:** E. Donato, E. Madeira, and L. Villas, 2015 7th International Conference on New Technologies, Mobility and Security (NTMS), Paris, 2015, pp. 1-5.