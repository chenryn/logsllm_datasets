# Experimental Validation of a Fault-Tolerant Microcomputer System against Intermittent Faults

**Authors:**
- Joaquin Gracia-Morán
- Daniel Gil-Tomás
- Luis J. Saiz-Adalid
- Juan Carlos Baraza
- Pedro J. Gil-Vicente

**Affiliation:**
Grupo de Sistemas Tolerantes a Fallos (GSTF) - Instituto ITACA, Universidad Politécnica de Valencia, Spain

**Email:**
jgracia, dgil, ljsaiz, jcbaraza, pgil@disca.upv.es

**Abstract:**
As technology advances and components shrink, new types of faults, including intermittent faults, are becoming more prevalent in modern VLSI circuits. This work aims to improve the dependability of fault-tolerant systems by evaluating their performance under the influence of intermittent faults. We have compared the impact of transient, permanent, and intermittent faults on a microcomputer system equipped with well-known fault detection and recovery mechanisms. Using a VHDL-based fault injection technique, we systematically and exhaustively injected intermittent faults into the system. Our results show that intermittent faults have a significant impact on system recovery and must be considered when designing fault tolerance mechanisms.

**1. Introduction**

The increasing complexity of manufacturing processes in deep submicron and nanometric ICs leads to more residues and process variations, which can result in intermittent faults. These faults, unlike transient faults, persist over time and can be activated or deactivated by environmental factors such as temperature, voltage, or frequency changes. While transient and permanent faults have been extensively studied, the impact of intermittent faults on fault-tolerant systems (FTSs) is less understood. The purpose of this work is to assess the effectiveness of current fault detection and recovery mechanisms in tolerating intermittent faults. We use the VHDL model of a microcomputer system that implements well-known fault tolerance mechanisms (FTMs) to inject and analyze the impact of intermittent faults.

**2. Fault Injection Environment**

We employed a VHDL-based fault injection environment due to its flexibility, controllability, and high observability of modeled components. The definition of fault models is crucial as they must accurately represent real faults. The intermittent fault models used in this study were derived from previous research [8][9] and include a set of faults observed in real systems. Table 1 provides examples of the studied intermittent faults and their associated fault models.

**3. Fault Injection Experiments**

**3.1. Microprocessor System**

The fault injection experiments were conducted on the VHDL model of a 16-bit fault-tolerant microcomputer, an enhanced version of the MARK2 processor. The system has a duplex architecture with cold stand-by sparing and includes a watchdog timer. The system components include the main and spare processors (CPUA and CPUB), RAM memory (MEM), output parallel port (PORTOUT), clock generator (CLK), interrupt controller (GENINT), and two back-off cycle generators (TRGENA, TRGENB).

**3.2. Fault Injection Tool**

We used the VHDL-based Fault Injection Tool (VFIT) developed by our research group. VFIT runs on PC computers under Windows® and is capable of injecting faults automatically by modifying the value or timing of signals during simulation. In this work, we used the saboteur insertion technique, which requires user intervention for generating commands and mutants.

**4. Results and Discussion**

The results of the fault injection experiments show that intermittent faults have a notable impact on system recovery. Current fault detection and recovery mechanisms, such as parity check in memory and program flow check performed by the watchdog timer, are not sufficient to tolerate intermittent faults. The number of error detections required to activate the spare processor can be configured, and more details about the system and its FTMs can be found in [16].

**5. Conclusions**

This work demonstrates the importance of considering intermittent faults in the design and validation of fault-tolerant systems. The VHDL-based fault injection technique used in this study is flexible and easy to apply, making it a valuable tool for future research in this area.

**Acknowledgments:**
This work was partially funded by the Spanish Government under the project "Sistemas empotrados seguros y confiables basados en componentes" (TIN2009-13825).

**References:**
[1] Reference 1
[2] Reference 2
[3] Reference 3
[4] Reference 4
[5] Reference 5
[6] Reference 6
[7] Reference 7
[8] Reference 8
[9] Reference 9
[10] Reference 10
[11] Reference 11
[12] Reference 12
[13] Reference 13
[14] Reference 14
[15] Reference 15
[16] Reference 16
[17] Reference 17

**Table 1: Some Intermittent Fault Mechanisms and Models [9]**

| Causes | Places | Fault Mechanisms | Type of Fault |
|--------|--------|------------------|---------------|
| ...    | ...    | ...              | ...           |

**Figure 1: Block Diagram of the MARK2 Processor**

[Insert Figure 1 Here]

**Authorized Use:**
This work is authorized for limited use by Tsinghua University. Downloaded on March 18, 2021, at 13:59:48 UTC from IEEE Xplore. Restrictions apply.