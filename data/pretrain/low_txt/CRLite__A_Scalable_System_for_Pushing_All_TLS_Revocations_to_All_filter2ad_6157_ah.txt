### SIGMETRICS International Conference on Measurement and Modeling of Computer Systems, June 2010

[31] M. Goodwin. "Revoking Intermediate Certificates: Introducing OneCRL." Mozilla Security Blog, March 2015. [Link](http://mzl.la/1zLFp7M)

[32] S. Gorbunov, V. Vaikuntanathan, and D. Wichs. "Leveled Fully Homomorphic Signatures from Standard Lattices." In ACM Symposium on Theory of Computing (STOC), June 2015.

[33] P. Hallam-Baker. "X.509v3 Extension: OCSP Stapling Required," October 2012. [Link](https://tools.ietf.org/html/draft-hallambaker-muststaple-00)

[34] P. Hallam-Baker. "X.509v3 Transport Layer Security (TLS) Feature Extension." RFC 7633, October 2015.

[35] P. Hoffman and J. Schlyter. "The DNS-based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA." RFC 6698, August 2012.

[36] R. Holz, L. Braun, N. Kammenhuber, and G. Carle. "The SSL Landscape – A Thorough Analysis of the X.509 PKI Using Active and Passive Measurements." In ACM Internet Measurement Conference, November 2011.

[37] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor. "Accountable Key Infrastructure (AKI): A Proposal for a Public-key Validation Infrastructure." In International World Wide Web Conference, May 2013.

[38] P. C. Kocher. "On Certificate Revocation and Validation." In International Conference on Financial Cryptography, February 1998.

[39] A. Langley. "Smaller Than Bloom Filters," April 2011. [Link](https://www.imperialviolet.org/2011/04/29/filters.html)

[40] A. Langley. "Revocation Checking and Chrome’s CRL," February 2012. [Link](https://www.imperialviolet.org/2012/02/05/crlsets.html)

[41] A. Langley. "No, Don’t Enable Revocation Checking," April 2014. [Link](https://www.imperialviolet.org/2014/04/19/revchecking.html)

[42] A. Langley. "Revocation Still Doesn’t Work," April 2014. [Link](https://www.imperialviolet.org/2014/04/29/revocationagain.html)

[43] B. Laurie. "Improving the Security of EV Certificates," May 2015. [Link](https://www.certificate-transparency.org/ev-ct-plan/EVCTPlanMay2015edition.pdf)

[44] B. Laurie and E. Kasper. "Revocation Transparency." GitHub, June 2016. [Link](https://github.com/google/trillian/blob/master/docs/RevocationTransparency.pdf)

[45] B. Laurie, A. Langley, and E. Kasper. "Certificate Transparency." RFC 6962, June 2013.

[46] Let's Encrypt. [Link](https://letsencrypt.org)

[47] D. Levin, J. R. Douceur, J. R. Lorch, and T. Moscibroda. "TrInc: Small Trusted Hardware for Large Distributed Systems." In Symposium on Networked System Design and Implementation, April 2009.

[48] J. Liang, J. Jiang, H. Duan, K. Li, T. Wan, and J. Wu. "When HTTPS Meets CDN: A Case of Authentication in Delegated Service." In IEEE Symposium on Security and Privacy, May 2014.

[49] Y. Liu, W. Tome, L. Zhang, D. Choffnes, D. Levin, B. Maggs, A. Mislove, A. Schulman, and C. Wilson. "An End-to-End Measurement of Certificate Revocation in the Web’s PKI." In ACM Internet Measurement Conference, October 2015.

[50] P. D. McDaniel and A. D. Rubin. "A Response to 'Can We Eliminate Certificate Revocation Lists?'" International Conference on Financial Cryptography, February 2000.

[51] S. Micali. "Efficient Certificate Revocation." In RSA Data Security Conference, March 1997.

[52] S. Micali. "Scalable Certificate Validation and Simplified PKI Management." In PKI Research Workshop, April 2002.

[53] G. C. M. Moura, R. de O. Schmidt, J. Heidemann, W. de Vries, M. Mueller, L. Wei, and C. Hesselman. "Anycast vs. DDoS: Evaluating the November 2015 Root DNS Event." In ACM Internet Measurement Conference, 2016.

[54] PKI:CT. Mozilla Wiki, December 2014. [Link](https://wiki.mozilla.org/PKI:CT)

[55] M. Naor and K. Nissim. "Certificate Revocation and Certificate Update." In USENIX Security Symposium, January 1998.

[56] D. Naylor, A. Finamore, I. Leontiadis, Y. Grunenberger, M. Mellia, M. Munafò, K. Papagiannaki, and P. Steenkiste. "The Cost of the 'S' in HTTPS." In ACM International Conference on Emerging Networking Experiments and Technologies, December 2014.

[57] K. Needham. "The Future of Developing Firefox Add-ons," August 2015. [Link](https://blog.mozilla.org/addons/2015/08/21/the-future-of-developing-firefox-add-ons/)

[58] H. Perl, S. Fahl, and M. Smith. "You Won’t Be Needing These Any More: On Removing Unused Certificates from Trust Stores." In Financial Cryptography and Data Security, March 2014.

[59] F. Putze, P. Sanders, and J. Singler. "Cache-, Hash-, and Space-Efficient Bloom Filters." J. Exp. Algorithmics, 14:4:4.4–4:4.18, January 2010.

[60] Rapid7 SSL Certificate Scans. [Link](https://scans.io/study/sonar.ssl)

[61] R. L. Rivest. "Can We Eliminate Certificate Revocation Lists?" International Conference on Financial Cryptography, 1998.

[62] M. D. Ryan. "Enhanced Certificate Transparency and End-to-End Encrypted Mail." In Network and Distributed System Security Symposium, February 2014.

[63] Safe Browsing. The Chromium Project. [Link](https://www.chromium.org/developers/design-documents/safebrowsing)

[64] K. Salikhov, G. Sacomoto, and G. Kucherov. "Using Cascading Bloom Filters to Improve the Memory Usage for de Bruijn Graphs." In Workshop on Algorithms in Bioinformatics, September 2013.

[65] A. Schulman, D. Levin, and N. Spring. "RevCast: Fast, Private Certificate Revocation Over FM Radio." In ACM Conference on Computer and Communications Security, November 2014.

[66] R. Sleevi. "Announcement: Requiring Certificate Transparency in 2017." Certificate Transparency Policy, October 2016. [Link](https://groups.google.com/a/chromium.org/forum/#!topic/ct-policy/78N3SMcqUGw)

[67] E. Syta, I. Tamas, D. Visher, D. I. Wolinsky, P. Jovanovic, L. Gasser, N. Gailly, I. Khoffi, and B. Ford. "Keeping Authorities 'Honest or Bust' with Decentralized Witness Cosigning." In IEEE Symposium on Security and Privacy, May 2016.

[68] P. Szalachowski, L. Chuat, T. Lee, and A. Perrig. "RITM: Revocation in the Middle." In IEEE International Conference on Distributed Computing Systems, June 2016.

[69] P. Szalachowski, L. Chuat, and A. Perrig. "PKI Safety Net (PKISN): Addressing the Too-Big-to-Be-Revoked Problem of the TLS Ecosystem." In IEEE European Symposium on Security and Privacy, March 2016.

[70] P. Szalachowski, S. Matsumoto, and A. Perrig. "Policert: Secure and Flexible TLS Certificate Management." In ACM Conference on Computer and Communications Security, November 2014.

[71] University of Michigan HTTPS Ecosystem Scans. [Link](https://scans.io/study/umich-https)

[72] N. Vallina-Rodriguez, J. Amann, C. Kreibich, N. Weaver, and V. Paxson. "A Tangled Mass: The Android Root Certificate Stores." In International Conference on Emerging Networking Experiments and Technologies, December 2014.

[73] B. VanderSloot, J. Amann, M. Bernhard, Z. Durumeric, M. Bailey, and J. A. Halderman. "Towards a Complete View of the Certificate Ecosystem." In ACM Internet Measurement Conference, November 2016.

[74] Z. Wang. "CasAB: Building Precise Bitmap Indices via Cascaded Bloom Filters." In IEEE Conference on Internet Computing for Science and Engineering, December 2009.

[75] S. Yilek, E. Rescorla, H. Shacham, B. Enright, and S. Savage. "When Private Keys Are Public: Results from the 2008 Debian OpenSSL Vulnerability." In ACM Internet Measurement Conference, November 2009.

[76] L. Zhang, D. Choffnes, T. Dumitras, D. Levin, A. Mislove, A. Schulman, and C. Wilson. "Analysis of SSL Certificate Reissues and Revocations in the Wake of Heartbleed." In ACM Internet Measurement Conference, November 2014.

[77] L. Zhou, F. B. Schneider, and R. Van Renesse. "COCA: A Secure Distributed Online Certification Authority." ACM Transactions on Computer Systems, 20(4):329–368, November 2002.

### Appendix A: Analysis of Filter Cascade Levels

In this section, we extend our analysis from § III-C to rigorously determine the expected number of hashes applied to each certificate and the expected number of levels in the filter cascade. Note that very few certificates survive to the last level of the filter cascade.

We model the removal of certificates from consideration as a coin-flipping process. Recall that we seek to store some set \( R \), that all queries come from some "universe" \( U \), and that \( R \cup S = U \). For each set element, whether originally in \( R \) or \( S \), there is a coin-flipping process that proceeds in rounds. The coin for an element is flipped whenever it is among those that are not being inserted into the Bloom filter at a particular level. These are the levels at which a false positive may occur for the element. Hence, for any element, a coin-flipping round occurs every other level. With probability \( 1 - p_1 \) or \( 1 - p \), the outcome is "heads" indicating that the element can be removed from consideration and no more flips are necessary. Otherwise, the flip is "tails" and the process continues. Assuming that our hash functions choose which bits to set for different elements independently, every coin flip is independent.

#### Levels per Certificate

We begin by analyzing the expected number of levels at which an individual certificate is inserted or checked for a false positive. Let \( X_i \) be a random variable indicating the number of rounds until heads is flipped for the \( i \)-th coin. For an element in \( R \), it is easy to show that \( E[X_i] = \frac{1}{1 - p} \). As an example, for \( p = \frac{1}{2} \), \( E[X_i] = 2 \). For an element in \( S \), the formula is slightly more complicated because the probability of heads in the first round is \( 1 - p_1 \), and in later rounds \( 1 - p \). Thus, \( E[X_i] = (1 - p_1) + p_1 \left(1 + \frac{1}{1 - p}\right) \). This quantity is smaller than the number of rounds for an element in \( R \), assuming \( p_1 < p \). For an element in \( R \), the number of levels, \( Y_i \), at which the certificate is inserted or checked is twice the number of rounds, i.e., \( Y_i = 2X_i \), so that \( E[Y_i] = \frac{2}{1 - p} \). As an example, for \( p = \frac{1}{2} \), \( E[Y_i] = 4 \). For an element in \( S \), the number of levels is given by \( Y_i = 2X_i - 1 \), hence \( E[Y_i] = 2(1 - p_1) + 2p_1 \left(1 + \frac{1}{1 - p}\right) - 1 \). Again, for \( p_1 < p \), the expected number of levels is smaller for an element of \( S \) than for an element of \( R \). Note that the expressions for \( E[X_i] \) and \( E[Y_i] \) are actually upper bounds, because an element of \( R \) need not be considered further if all of the elements of \( S \) have been removed from consideration, and vice versa.

#### Hashes per Certificate

At each level, multiple hash functions may be applied to a certificate. Let \( k_1 \) denote the number of hash functions used in the Bloom filter at level 1, and let \( k \) denote the number of hash functions used in each Bloom filter at all levels after 1. Let \( Z_i \) denote the number of hash functions applied to the \( i \)-th certificate. For any element, whether in \( R \) or \( S \), \( Z_i = k_1 + k(Y_i - 1) \). Hence, \( E[Z_i] = k_1 + k(E[Y_i] - 1) \). As an example, for \( p = \frac{1}{2} \) and \( k = 1 \), for an element of \( R \) we have \( E[Z_i] = k_1 + 3 \). (For an element of \( S \), \( E[Z_i] \) is smaller.)

#### Levels in Filter Cascade

Finally, we would like to bound the expected number of levels in the entire filter cascade, i.e., the expected number of levels required until every element has flipped heads. Eisenberg [24] states a bound that we can immediately apply to the expected number of even-numbered levels needed before all elements of \( R \) are removed from consideration. Suppose that \( N \) coins are being flipped in rounds, where in each round, each coin has probability \( 1 - p \) of flipping heads. As before, let \( X_i \) denote the number of rounds until the \( i \)-th coin flips heads. We are interested in the maximum, over all coins, of the number of rounds needed to flip heads, i.e., in the random variable \( X = \max(X_1, \ldots, X_N) \). The bound from [24] is:

\[
\frac{H_N}{\ln \frac{1}{p}} \leq E[X] \leq 1 + \frac{H_N}{\ln \frac{1}{p}},
\]

where \( H_N \) is the \( N \)-th harmonic number, i.e., \( H_N = \sum_{i=1}^N \frac{1}{i} \). For large \( N \), \( H_N \) is very close to \( \ln N + 0.577 \). Let \( X_R \) denote the number of even-numbered levels needed. Then applying the bound from Inequality (3) with \( N = r = |R| \), yields:

\[
E[X_R] \leq 1 + \frac{\ln r + 0.577}{\ln \frac{1}{p}}.
\]

For the elements of \( S \), a slightly messier analysis is required because at the first level these elements suffer false positives with probability \( p_1 \), and at all subsequent odd levels with probability \( p \). But for the sake of the analysis, let us begin by assuming that the false positive probability (the probability of flipping tails) in every round is \( p \). Then the bound from Inequality (3) can be applied with \( N = s = |S| \). Note that in this coin-flipping process, the probability that an element survives the first \( i \) rounds, flipping tails \( i \) times, is \( p^i \). Suppose now that we modify the coin-flipping process so that in the first round the probability of tails is \( p_1 \), in the next \( \lfloor \frac{\ln p_1}{\ln p} \rfloor - 1 \) rounds the probability of tails is 1, and in all subsequent rounds the probability of tails remains \( p \). Here we assume that \( p_1 < p \). Observe that after this modification to the process, the expected number of rounds can only decrease because the probability that any element survives \( i \) rounds, for any \( i \), can only decrease. Hence, applying Inequality (3) with \( N = s \), the expected number of rounds in the modified process is at most \( 1 + \frac{\ln s + 0.577}{\ln \frac{1}{p}} \).

Now we modify the process again by removing the rounds in which the false positive probability is 1. Removing these rounds does not affect what happens in any other rounds. The probability that there are no false positives in the first round (and thus that there is only one level) is \( (1 - p_1)^s \). Hence, the expected number of rounds in this final process is reduced by \( (1 - (1 - p_1)^s) \left(\lfloor \frac{\ln p_1}{\ln p} \rfloor - 1\right) \). Note that this final process is now identical to the process implemented in the odd levels of our filter cascade. Let \( X_S \) denote the number of odd-numbered levels needed to remove all elements of \( S \) from consideration. Then:

\[
E[X_S] \leq 1 + \frac{\ln s + 0.577}{\ln \frac{1}{p}} - (1 - (1 - p_1)^s) \left(\lfloor \frac{\ln p_1}{\ln p} \rfloor - 1\right).
\]

Building the filter cascade ends when either all of the elements in \( R \) have been removed from consideration, or all of the elements in \( S \) have been removed from consideration, whichever comes first. Hence, the total number of levels, \( X_T \), is \( \min(2X_S - 1, 2X_R) \). Because the expectation of the minimum of two random variables is at most the minimum of the expectations, we have:

\[
E[X_T] \leq \min(2E[X_S] - 1, 2E[X_R]).
\]

#### High Probability Bounds

It is also straightforward to prove a high probability bound. The probability that a coin is flipped tails \( i \) times in a row is \( p^i \). Thus, the probability that there is any coin that has been flipped tails \( i \) times in a row is at most \( N p^i \). If we want 99% confidence that at most \( i \) rounds are needed, we set \( N p^i = 0.01 \), and then solve for \( i \).