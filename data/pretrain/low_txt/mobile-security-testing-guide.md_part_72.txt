### Security Enhancements with Passcodes and Touch ID

Any security scheme based on the methods described will be significantly more secure once a passcode and/or Touch ID is enabled. This is because the materials stored in the Keychain or filesystem are protected using specific protection classes, such as `kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly` and `kSecAttrAccessibleWhenUnlockedThisDeviceOnly`. Additionally, setting `SecAccessControlCreateFlags` with one of the following options further enhances security:
- `kSecAccessControlDevicePasscode` (for passcodes)
- `kSecAccessControlUserPresence` (for passcodes or Touch ID)
- `kSecAccessControlTouchIDAny` (for Touch ID)
- `kSecAccessControlTouchIDCurrentSet` (for Touch ID, but only current fingerprints)

### iOS Anti-Reversing Defenses

#### References
- **Dana Geist, Marat Nigmatullin: Jailbreak/Root Detection Evasion Study on iOS and Android**
  - [Link](http://delaat.net/rp/2015-2016/p51/report.pdf)
- **OWASP Mobile Top 10 2016 - M9: Reverse Engineering**
  - [Link](https://www.owasp.org/index.php/Mobile_Top_10_2016-M9-Reverse_Engineering)
- **OWASP MASVS**
  - **MSTG-RESILIENCE-1**: "The app detects, and responds to, the presence of a rooted or jailbroken device either by alerting the user or terminating the app."
  - **MSTG-RESILIENCE-2**: "The app prevents debugging and/or detects, and responds to, a debugger being attached. All available debugging protocols must be covered."
  - **MSTG-RESILIENCE-3**: "The app detects, and responds to, tampering with executable files and critical data within its own sandbox."
  - **MSTG-RESILIENCE-10**: "The app implements a 'device binding' functionality using a device fingerprint derived from multiple properties unique to the device."
  - **MSTG-RESILIENCE-11**: "All executable files and libraries belonging to the app are either encrypted on the file level and/or important code and data segments inside the executables are encrypted or packed. Trivial static analysis does not reveal important code or data."

#### Tools
- **Appsync Unified**
  - [Link](https://cydia.angelxwind.net/?page=net.angelxwind.appsyncunified)
- **Frida**
  - [Link](http://frida.re/)
- **Keychain Dumper**
  - [Link](https://github.com/ptoomey3/Keychain-Dumper)

### Testing Tools

To perform security testing, various tools are available for manipulating requests and responses, decompiling apps, investigating the behavior of running apps, and automating test cases. The MSTG project does not endorse any specific tool, but all listed tools have been verified to be actively maintained. The list is sorted alphabetically and includes commercial tools.

#### Mobile Application Security Testing Distributions
- **Androl4b**
  - A virtual machine for assessing Android applications, performing reverse engineering, and malware analysis.
  - [Link](https://github.com/sh4hin/Androl4b)
- **Android Tamer**
  - A Debian-based Virtual/Live Platform for Android Security professionals.
  - [Link](https://androidtamer.com/)
- **Mobile Security Toolchain**
  - A project used to install many of the tools mentioned in this section, both for Android and iOS on a macOS machine.
  - [Link](https://github.com/xebia/mobilehacktools)

#### All-in-One Mobile Security Frameworks
- **AppMon**
  - An automated framework for monitoring and tampering system API calls of native macOS, iOS, and Android apps.
  - [Link](https://github.com/dpnishant/appmon/)
- **Mobile Security Framework (MobSF)**
  - A mobile pentesting framework capable of performing static and dynamic analysis.
  - [Link](https://github.com/ajinabraham/Mobile-Security-Framework-MobSF)
- **objection**
  - A runtime mobile security assessment framework that does not require a jailbroken or rooted device, thanks to the usage of Frida.
  - [Link](https://github.com/sensepost/objection)

#### Static Source Code Analysis (Commercial Tools)
- **Checkmarx**
  - A static source code scanner that also scans source code for Android and iOS.
  - [Link](https://www.checkmarx.com/technology/static-code-analysis-sca/)
- **Fortify**
  - A static source code scanner that also scans source code for Android and iOS.
  - [Link](https://saas.hpe.com/en-us/software/fortify-on-demand/mobile-security)
- **Veracode**
  - A static source code scanner that also scans binaries for Android and iOS.
  - [Link](https://www.veracode.com/products/binary-static-analysis-sast)

#### Dynamic and Runtime Analysis
- **Frida**
  - A dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers. It works using a client-server model and allows injecting code into running processes on Android and iOS.
  - [Link](https://www.frida.re)
- **Frida CodeShare**
  - A project hosting Frida scripts publicly that can help bypass client-side security controls in mobile apps (e.g., SSL Pinning).
  - [Link](https://codeshare.frida.re/)
- **NowSecure Workstation (Commercial Tool)**
  - A pre-configured hardware and software kit for vulnerability assessment and penetration testing of mobile apps.
  - [Link](https://www.nowsecure.com/solutions/power-tools-for-security-analysts/)
- **r2frida**
  - A project merging the powerful reverse engineering capabilities of radare2 with the dynamic instrumentation toolkit of Frida.
  - [Link](https://github.com/nowsecure/r2frida)

#### Reverse Engineering and Static Analysis
- **Binary Ninja**
  - A multi-platform software disassembler capable of IR (intermediate representation) lifting.
  - [Link](https://binary.ninja/)
- **Ghidra**
  - An open-source software reverse engineering suite of tools developed by the National Security Agency (NSA). Its main capabilities include disassembly, assembly, decompilation, graphing, and scripting.
  - [Link](https://ghidra-sre.org/)
- **HopperApp (Commercial Tool)**
  - A reverse engineering tool for macOS and Linux used to disassemble, decompile, and debug 32/64-bit Intel Mac, Linux, Windows, and iOS executables.
  - [Link](https://www.hopperapp.com/)
- **IDA Pro (Commercial Tool)**
  - A Windows, Linux, or macOS hosted multi-processor disassembler and debugger.
  - [Link](https://www.hex-rays.com/products/ida/index.shtml)
- **radare2**
  - A Unix-like reverse engineering framework and command-line tools.
  - [Link](https://www.radare.org/r/)
- **Retargetable Decompiler (RetDec)**
  - An open-source machine-code decompiler based on LLVM. It can be used as a standalone program or as a plugin for IDA Pro or radare2.
  - [Link](https://retdec.com/)

#### Tools for Android
- **Reverse Engineering and Static Analysis**
  - **Androguard**: A Python-based tool for disassembling and decompiling Android apps.
    - [Link](https://github.com/androguard/androguard)
  - **Android Backup Extractor**: Utility to extract and repack Android backups created with adb backup (ICS+).
    - [Link](https://github.com/nelenkov/android-backup-extractor)
  - **Android Debug Bridge (adb)**: A versatile command-line tool used to communicate with an emulator instance or connected Android device.
    - [Link](https://developer.android.com/studio/command-line/adb.html)
  - **apktool**: A tool for reverse engineering third-party, closed, binary Android apps.
    - [Link](https://ibotpeaches.github.io/Apktool/)
  - **android-classyshark**: A standalone binary inspection tool for Android developers.
    - [Link](https://github.com/google/android-classyshark)
  - **ByteCodeViewer**: Java 8 Jar and Android APK Reverse Engineering Suite (e.g., Decompiler, Editor, and Debugger).
    - [Link](https://bytecodeviewer.com/)
  - **ClassNameDeobfuscator**: A simple script to parse through the .smali files produced by apktool and extract the .source annotation lines.
    - [Link](https://github.com/HamiltonianCycle/ClassNameDeobfuscator)
  - **FindSecurityBugs**: An extension for SpotBugs that includes security rules for Java applications.
    - [Link](https://find-sec-bugs.github.io)
  - **Jadx (Dex to Java Decompiler)**: Command-line and GUI tools for producing Java source code from Android Dex and Apk files.
    - [Link](https://github.com/skylot/jadx)
  - **Oat2dex**: A tool for converting .oat files to .dex files.
    - [Link](https://github.com/testwhat/SmaliEx)
  - **Qark**: A tool designed to look for several security-related Android application vulnerabilities, either in source code or packaged APKs.
    - [Link](https://github.com/linkedin/qark)
  - **Sign**: A Java JAR executable (Sign.jar) that automatically signs an apk with the Android test certificate.
    - [Link](https://github.com/appium/sign)
  - **Simplify**: A tool for de-obfuscating Android packages into Classes.dex, which can be used with Dex2jar and JD-GUI to extract contents of dex files.
    - [Link](https://github.com/CalebFenton/simplify)
  - **SUPER**: A command-line application that can be used in Windows, macOS, and Linux to analyze .apk files for vulnerabilities.
    - [Link](https://github.com/SUPERAndroidAnalyzer/super)
  - **SpotBugs**: A static analysis tool for Java.
    - [Link](https://spotbugs.github.io/)

- **Dynamic and Runtime Analysis**
  - **Android Tcpdump**: A command-line packet capture utility for Android.
    - [Link](https://www.androidtcpdump.com)
  - **Drozer**: A tool that allows searching for security vulnerabilities in apps and devices by assuming the role of an app and interacting with the Dalvik VM, other apps' IPC endpoints, and the underlying OS.
    - [Link](https://www.mwrinfosecurity.com/products/drozer/)
  - **Inspeckage**: A tool developed to offer dynamic analysis of Android apps by applying hooks to functions of the Android API.
    - [Link](https://github.com/ac-pm/Inspeckage)
  - **jdb**: A Java Debugger that allows setting breakpoints and printing application variables.
    - [Link](https://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html)
  - **logcat-color**: A colorful and highly configurable alternative to the adb logcat command from the Android SDK.
    - [Link](https://github.com/marshall/logcat-color)
  - **VirtualHook**: A hooking tool for applications on Android ART (>=5.0) that does not require root permission to inject hooks.
    - [Link](https://github.com/rk700/VirtualHook)
  - **Xposed Framework**: A framework that allows modifying the system or application aspect and behavior at runtime without modifying any Android application package (APK) or re-flashing.
    - [Link](https://forum.xda-developers.com/xposed/xposed-installer-versions-changelog-t2714053)

- **Bypassing Root Detection and Certificate Pinning**
  - **Android SSL Trust Killer (Cydia Substrate Module)**: A blackbox tool to bypass SSL certificate pinning for most applications running on a device.
    - [Link](https://github.com/iSECPartners/Android-SSL-TrustKiller)
  - **JustTrustMe (Xposed Module)**: An Xposed Module to bypass SSL certificate pinning.
    - [Link](https://github.com/Fuzion24/JustTrustMe)
  - **RootCloak Plus (Cydia Substrate Module)**: A module to patch root checking for commonly known indications of root.
    - [Link](https://github.com/devadvance/rootcloakplus)
  - **SSLUnpinning (Xposed Module)**: An Xposed Module to bypass SSL certificate pinning.
    - [Link](https://github.com/ac-pm/SSLUnpinning_Xposed)

#### Tools for iOS
- **Access Filesystem on iDevice**
  - **iFunbox**: A file and app management tool for iPhone, iPad, and iPod Touch.
    - [Link](http://www.i-funbox.com)
  - **iProxy**: A tool used to connect via SSH to a jailbroken iPhone via USB.
    - [Link](https://github.com/tcurdt/iProxy)
  - **itunnel**: A tool used to forward SSH via USB.
    - [Link](https://code.google.com/p/iphonetunnel-usbmuxconnectbyport/downloads/list)
  - **Cyberduck**: A libre FTP, SFTP, WebDAV, S3, Azure & OpenStack Swift browser for Mac and Windows.
    - [Link](https://cyberduck.io)
  - **FileZilla**: A solution supporting FTP, SFTP, and FTPS (FTP over SSL/TLS).
    - [Link](https://filezilla-project.org/download.php?show_all=1)

- **Reverse Engineering and Static Analysis**
  - **class-dump**: A command-line utility for examining the Objective-C runtime information stored in Mach-O files.
    - [Link](http://stevenygard.com/projects/class-dump/)
  - **Clutch**: Decrypts the application and dumps the specified bundleID into a binary or .ipa file.
    - [Link](https://github.com/KJCracks/Clutch)
  - **Dumpdecrypted**: Dumps decrypted mach-o files from encrypted iPhone applications from memory to disk.
    - [Link](https://github.com/stefanesser/dumpdecrypted)
  - **hopperscripts**: A collection of scripts that can be used to demangle Swift function names in HopperApp.
    - [Link](https://github.com/Januzellij/hopperscripts)
  - **otool**: A tool that displays specified parts of object files or libraries.
    - [Link](https://www.unix.com/man-page/osx/1/otool/)
  - **Plutil**: A program that can convert .plist files between a binary version and an XML version.
    - [Link](https://www.theiphonewiki.com/wiki/Plutil)
  - **Weak Classdump**: A Cycript script that generates a header file for the class passed to the function, useful when classdump or dumpdecrypted cannot be used.
    - [Link](https://github.com/limneos/weak_classdump)

- **Dynamic and Runtime Analysis**
  - **bfinject**: A tool that loads arbitrary dylibs into running App Store apps, with built-in support for decrypting App Store apps.
    - [Link](https://github.com/BishopFox/bfinject)
  - **BinaryCookieReader**: A tool to dump all the cookies from the binary Cookies.binarycookies file.
    - [Link](https://securitylearn.net/wp-content/uploads/tools/iOS/BinaryCookieReader.py)
  - **Burp Suite Mobile Assistant**: A tool to bypass certificate pinning and inject into apps.
    - [Link](https://portswigger.net/burp/help/mobile_testing_using_mobile_assistant.html)
  - **Cycript**: A tool that allows developers to explore and modify running applications on either iOS or macOS using a hybrid of Objective-C and JavaScript syntax.
    - [Link](http://www.cycript.org)
  - **Frida-cycript**: A fork of Cycript including a brand new runtime called Mjølner powered by Frida.
    - [Link](https://github.com/nowsecure/frida-cycript)
  - **Fridpa**: An automated wrapper script for patching iOS applications (IPA files) and working on non-jailbroken devices.
    - [Link](https://github.com/tanprathan/Fridpa)
  - **gdb**: A tool to perform runtime analysis of iOS applications.
    - [Link](http://cydia.radare.org/debs/)
  - **idb**: A tool to simplify common tasks for iOS pentesting and research.
    - [Link](https://github.com/dmayer/idb)
  - **Introspy-iOS**: A blackbox tool to help understand what an iOS application is doing at runtime and assist in identifying potential security issues.
    - [Link](https://github.com/iSECPartners/Introspy-iOS)
  - **keychaindumper**: A tool to check which keychain items are available to an attacker once an iOS device has been jailbroken.
    - [Link](http://cydia.radare.org/debs/)
  - **lldb**: A debugger by Apple’s Xcode used for debugging iOS applications.
    - [Link](https://lldb.llvm.org/)
  - **Needle**: A modular framework to conduct security assessments of iOS apps, including Binary Analysis, Static Code Analysis, and Runtime Manipulation.
    - [Link](https://github.com/mwrlabs/needle)
  - **Passionfruit**: A simple iOS app blackbox assessment tool with a fully web-based GUI, powered by frida.re and Vue.js.
    - [Link](https://github.com/chaitin/passionfruit)

- **Bypassing Jailbreak Detection and SSL Pinning**
  - **SSL Kill Switch 2**: A blackbox tool to disable SSL certificate validation, including certificate pinning, within iOS and macOS Apps.
    - [Link](https://github.com/nabla-c0d3/ssl-kill-switch2)
  - **tsProtector**: A tool for bypassing Jailbreak detection.
    - [Link](http://cydia.saurik.com/package/kr.typostudio.tsprotector8)
  - **Xcon**: A tool for bypassing Jailbreak detection.
    - [Link](http://cydia.saurik.com/package/com.n00neimp0rtant.xcon/)

#### Tools for Network Interception and Monitoring
- **bettercap**: A powerful framework for WiFi, Bluetooth Low Energy, wireless HID hijacking, and Ethernet networks reconnaissance and MITM attacks.
  - [Link](https://www.bettercap.org/)
- **Canape**: A network testing tool for arbitrary protocols.
  - [Link](https://github.com/ctxis/canape)
- **Mallory**: A Man in The Middle Tool (MiTM) that is used to monitor and manipulate traffic on mobile devices and applications.
  - [Link](https://github.com/intrepidusgroup/mallory)
- **MITM Relay**: A script to intercept and modify non-HTTP protocols through Burp and others, with support for SSL and STARTTLS interception.
  - [Link](https://github.com/jrmdev/mitm_relay)
- **tcpdump**: A command-line packet capture utility.
  - [Link](https://www.tcpdump.org/)
- **Wireshark**: An open-source packet analyzer.
  - [Link](https://www.wireshark.org/download.html)

- **Interception Proxies**
  - **Burp Suite**: An integrated platform for performing security testing of applications.
    - [Link](https://portswigger.net/burp/download.html)
  - **Charles Proxy**: An HTTP proxy, HTTP monitor, and Reverse Proxy that enables a developer to view all of the HTTP and SSL/HTTPS traffic between their machine and the Internet.
    - [Link](https://www.charlesproxy.com)
  - **Fiddler**: An HTTP debugging proxy server application that captures HTTP and HTTPS traffic and logs it for the user to review.
    - [Link](https://www.telerik.com/fiddler)
  - **OWASP Zed Attack Proxy (ZAP)**: A free security tool that helps automatically find security vulnerabilities in web applications and web services.
    - [Link](https://github.com/zaproxy/zaproxy)
  - **Proxydroid**: A global proxy app for the Android system.
    - [Link](https://github.com/madeye/proxydroid)

#### IDEs
- **Android Studio**: The official IDE for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.
  - [Link](https://developer.android.com/studio/index.html)
- **IntelliJ IDEA**: A Java IDE for developing computer software.
  - [Link](https://www.jetbrains.com/idea/download/)
- **Eclipse**: An IDE used in computer programming, and the most widely used Java IDE.
  - [Link](https://eclipse.org/)
- **Xcode**: The official IDE to create apps for iOS, watchOS, tvOS, and macOS. It's only available for macOS.
  - [Link](https://developer.apple.com/xcode/)

#### Vulnerable Applications
The applications listed below can be used as training materials. Note: Only the MSTG apps and Crackmes are tested and maintained by the MSTG project.

- **Android**
  - **Crackmes**: A set of apps to test your Android application hacking skills.
    - [Link](https://github.com/OWASP/owasp-mstg/tree/master/Crackmes)
  - **DVHMA**: A hybrid mobile app (for Android) that intentionally contains vulnerabilities.
    - [Link](https://github.com/logicalhacking/DVHMA)
  - **Digitalbank**: A vulnerable app created in 2015, which can be used on older Android platforms.
    - [Link](https://github.com/CyberScions/Digitalbank)
  - **DIVA Android**: An app intentionally designed to be insecure, which has received updates in 2016 and contains 13 different challenges.
    - [Link](https://github.com/payatu/diva-android)
  - **DodoVulnerableBank**: An insecure Android app from 2015.
    - [Link](https://github.com/CSPF-Founder/DodoVulnerableBank)
  - **InsecureBankv2**: A vulnerable Android app made for security enthusiasts and developers to learn Android insecurities by testing a vulnerable application. It has been updated in 2018 and contains many vulnerabilities.
    - [Link](https://github.com/dineshshetty/Android-InsecureBankv2)
  - **MSTG Android app: Java**: A vulnerable Android app with vulnerabilities similar to the test cases described in this document.
    - [Link](https://github.com/OWASP/MSTG-Hacking-Playground/tree/master/Android/MSTG-Android-Java-App)
  - **MSTG Android app: Kotlin**: A vulnerable Android app with vulnerabilities similar to the test cases described in this document.
    - [Link](https://github.com/OWASP/MSTG-Hacking-Playground/tree/master/Android/MSTG-Android-Kotlin-App)

- **iOS**
  - **Crackmes**: A set of applications to test your iOS application hacking skills.
    - [Link](https://github.com/OWASP/owasp-mstg/tree/master/Crackmes)
  - **Myriam**: A vulnerable iOS app with iOS security challenges.
    - [Link](https://github.com/GeoSn0w/Myriam)
  - **DVIA**: A vulnerable iOS app written in Objective-C, providing a platform for mobile security enthusiasts, professionals, or students to test their iOS penetration testing skills.
    - [Link](http://damnvulnerableiosapp.com/)
  - **DVIA-v2**: A vulnerable iOS app written in Swift with over 15 vulnerabilities.
    - [Link](https://github.com/prateek147/DVIA-v2)
  - **iGoat**: An iOS Objective-C app serving as a learning tool for iOS developers (iPhone, iPad, etc.) and mobile app pentesters, inspired by the WebGoat project.
    - [Link](https://github.com/owasp/igoat)
  - **iGoat-Swift**: A Swift version of the original iGoat project.
    - [Link](https://github.com/owasp/igoat-swift)

### Suggested Reading

#### Mobile App Security
- **Android**
  - **Dominic Chell, Tyrone Erasmus, Shaun Colley, Ollie Whitehouse (2015)**: *Mobile Application Hacker's Handbook*. Wiley.
    - [Link](http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118958500.html)
  - **Joshua J. Drake, Zach Lanier, Collin Mulliner, Pau Oliva, Stephen A. Ridley, Georg Wicherski (2014)**: *Android Hacker's Handbook*. Wiley.
    - [Link](http://www.wiley.com/WileyCDA/WileyTitle/productCd-111860864X.html)
  - **Godfrey Nolan (2014)**: *Bulletproof Android*. Addison-Wesley Professional.
    - [Link](https://www.amazon.com/Bulletproof-Android-Practical-Building-Developers/dp/0133993329)
  - **Nikolay Elenkov (2014)**: *Android Security Internals: An In-Depth Guide to Android's Security Architecture*. No Starch Press.
    - [Link](https://nostarch.com/androidsecurity)
  - **Jonathan Levin (2015)**: *Android Internals :: A confectioners cookbook - Volume I: The power user's view*. Technologeeks.com.
    - [Link](http://newandroidbook.com/)

- **iOS**
  - **Charlie Miller, Dionysus Blazakis, Dino Dai Zovi, Stefan Esser, Vincenzo Iozzo, Ralf-Philipp Weinmann (2012)**: *iOS Hacker's Handbook*. Wiley.
    - [Link](http://www.wiley.com/WileyCDA/WileyTitle/productCd-1118204123.html)
  - **David Thiel (2016)**: *iOS Application Security, The Definitive Guide for Hackers and Developers*. no starch press.
    - [Link](https://www.nostarch.com/iossecurity)
  - **Jonathan Levin (2017)**: *Mac OS X and iOS Internals*. Wiley.
    - [Link](http://newosxbook.com/index.php)

- **Miscellaneous**
  - **Bruce Dang, Alexandre Gazet, Elias Backaalany (2014)**: *Practical Reverse Engineering*. Wiley.
    - [Link](http://as.wiley.com/WileyCDA/WileyTitle/productCd-1118787315,subjectCd-CSJ0.html)
  - **Skakenunny, Hangcom iOS App Reverse Engineering**. Online.
    - [Link](https://github.com/iosre/iOSAppReverseEngineering/)
  - **Bernhard Mueller (2016)**: *Hacking Soft Tokens - Advanced Reverse Engineering on Android*. HITB GSEC Singapore.
    - [Link](http://gsec.hitb.org/materials/sg2016/D1%20-%20Bernhard%20Mueller%20-%20Attacking%20Software%20Tokens.pdf)
  - **Dennis Yurichev (2016)**: *Reverse Engineering for Beginners*. Online.
    - [Link](https://github.com/dennis714/RE-for-beginners)
  - **Michael Hale Ligh, Andrew Case, Jamie Levy, Aaron Walters (2014)**: *The Art of Memory Forensics*. Wiley.
    - [Link](http://as.wiley.com/WileyCDA/WileyTitle/productCd-1118825098.html)
  - **Jacob Baines (2016)**: *Programming Linux Anti-Reversing Techniques*. Leanpub.
    - [Link](https://leanpub.com/anti-reverse-engineering-linux)