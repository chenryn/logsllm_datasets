# 手把手教你打造Web应用静态安全测试工具

##### 译文声明
本文为翻译文章，译文仅供参考，具体内容及含义以原文为准。
作者：飞蝠@阿里安全

利用漏洞清除债务、盗取数据或一键获取游戏账户登录权限等操作看似只存在于虚构作品中，但实际上这些行为在现实中早已发生。例如，2013年，一个自称为RedHack的黑客组织利用土耳其政府网站上的Web漏洞清除了相关人员的债务记录；2015年，某安全研究人员公开指出，通过特定注入漏洞可以攻破一家知名汽车公司的网站，获取管理权限并窃取用户数据；2019年，在线游戏“堡垒之夜”被曝存在SQL注入漏洞，攻击者能够访问所有用户账号。

上述案例均涉及Web应用程序的安全漏洞。随着Web应用程序在社交网络、在线支付等多个领域的广泛应用，其安全性越来越受到重视。为了在恶意攻击者之前发现并修复Web应用程序中的安全漏洞，安全人员需要使用各种安全测试技术来识别和修复缺陷。静态应用安全测试（SAST）因其无需运行被测程序、具有高覆盖率和高度自动化的特点，并且可以在软件开发生命周期早期阶段实施，而成为业界广泛采用的一种应用安全测试方法。然而，作为一种针对应用安全缺陷的自动化检测手段，SAST本质上处理的是一个不可判定问题，在理论上无法同时实现零误报与零漏报。

大量的误报会导致用户对分析工具失去信心，而漏报则可能给人们造成程序安全性较高的错觉。减少误报与降低漏报之间往往存在着矛盾。为了尽可能地减少不必要的误报和漏报，通常需要采用更为复杂的分析技术，这也就意味着更高的复杂度。因此，实用的SAST工具必须根据具体的分析目标和应用场景，在误报率、漏报率、效率、易用性和可扩展性之间找到一个合理的平衡点。

## 关注哪些类型的缺陷？

程序分析工具都有各自关注的“分析目标属性”，即它们所关心的具体缺陷类型。目前市面上许多通用型静态缺陷检测工具倾向于追求全面覆盖，试图适应多种扫描场景并涵盖更多种类的缺陷，但这种做法并不总是正确的。实际上，不同类型的应用程序在不同情境下，人们对程序特性的关注点各不相同，对于分析工具的要求也有所差异。静态分析过程中不可避免地会引入某种程度的抽象化处理，最有效的抽象方式应当充分利用分析目标属性本身的特点。明确应用场景及分析目标属性是设计真正实用分析工具的第一步。

Web应用静态安全测试主要用于开发阶段而非项目完成后，其主要优点在于能够在早期就从源代码层面检测出潜在的安全漏洞，从而大幅降低修复成本。成熟的大型软件开发组织通常将其集成到DevSecOps流程中。这就要求分析工具能在漏报率、误报率以及执行效率之间取得良好的平衡，避免干扰正常的开发进程。

Web应用静态安全测试主要关注常见的Web应用程序安全风险，特别是OWASP Top 10中列出的风险类别。以下是最新版OWASP Top 10 Web应用安全风险列表：

Web应用程序安全风险与空指针引用、数组越界、资源泄漏、数值溢出等内存安全问题有着显著区别。前者更侧重于高层语义（接近应用层），后者则更加关注底层细节，如变量的具体值。为了开发出真正实用的分析工具，我们需要充分考虑“分析目标属性”的特性，选择能够达到最佳平衡点的算法与策略。

## Web应用安全风险建模

为确保静态应用安全测试工具能够准确无误地识别并分析目标缺陷类型，我们需将相关缺陷的分析配置描述成该工具可以理解的“规则”。一款易于使用且具有良好扩展性的Web应用静态安全测试工具应该做到规则与引擎分离。规则结构的设计过程本质上是对Web应用程序安全风险知识进行建模的过程。根据OWASP Top 10列表，Web应用安全风险大致可以分为两类：一类是与非正常数据流相关的安全威胁，如注入攻击、敏感信息泄露、XML外部实体攻击、跨站脚本攻击和不安全的反序列化；另一类则是与异常控制流或状态相关的安全威胁，包括失效的身份验证机制、无效的访问控制措施、错误的安全配置设置以及缺乏适当日志记录和监控功能。针对上述两种类型的安全风险，我们采用了不同的规则描述模型——污染传播模型和状态机模型。

### 污染传播分析

污染传播分析又被称为信息流分析（information-flow analysis），是一种用于追踪程序内部特定数据流动路径及其依赖关系的数据流分析技术。作为Web应用安全缺陷检测的主要手段之一，其基本思想是对源自不可信来源的数据打上标记，随后跟踪这些带有标记的数据在程序内的传播情况。如果在到达敏感操作节点前未经过适当的净化处理，则表明可能存在安全隐患。

污染传播规则配置包含source（数据源头）、sanitizer（净化器）、sink（接收端）以及安全类型等元素。安全类型指的是在当前上下文中被认为绝对不会引起污染的数据类型，比如对于注入类安全风险而言，所有的枚举类型、布尔类型、日期类型、浮点数类型等都被视为安全的。

针对常见的Web注入安全威胁，我们的解决方案是提供一套统一的“安全方法”供开发者调用。这些“安全方法”也是静态分析工具能够识别的标准净化操作。污染传播分析沿着控制流计算每个程序位置处当前存在的受污染变量集合，并建立这些变量之间的污染传播依赖关系。

### 状态机分析

从理论上讲，Web应用安全缺陷检测所检查的所有缺陷类型都属于时序安全属性（temporal safety properties）。