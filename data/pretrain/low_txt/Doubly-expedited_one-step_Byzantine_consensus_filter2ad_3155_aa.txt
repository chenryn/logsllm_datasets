# Doubly-Expedited One-Step Byzantine Consensus

**Authors:** Nazreen Banu, Taisuke Izumi, Koichi Wada  
**Institution:** Graduate School of Engineering, Nagoya Institute of Technology, Gokisho-cho, Showa-ku, Nagoya, Aichi, 466-8555, Japan.  
**Contact:** {t-izumi, wada}@nitech.ac.jp  
**Publication:** Proceedings of the 2010 IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)  
**Pages:** 373-382  
**Year:** 2010  
**URL:** [http://id.nii.ac.jp/1476/00005903/](http://id.nii.ac.jp/1476/00005903/)  
**DOI:** [10.1109/DSN.2010.5544293](http://dx.doi.org/10.1109/DSN.2010.5544293)

**Copyright Notice:**
Â© 2010 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works.

## Abstract
Byzantine consensus algorithms typically guarantee one-step decisions only in favorable conditions, such as when all processes propose the same value. No existing one-step algorithm can support two-step decisions. This paper introduces DEX, a novel one-step Byzantine consensus algorithm that overcomes these limitations using a condition-based approach. DEX features adaptiveness and double-expedition properties. Adaptiveness ensures fast termination for more inputs when there are fewer failures, a common scenario in practice. The double-expedition property enables both one-step and two-step decisions by running two condition-based mechanisms in parallel. To our knowledge, this is the first algorithm to introduce the double-expedition property. Although DEX may take up to four steps in the worst case, it is expected to operate efficiently in typical runs.

## 1. Introduction

### 1.1 Background
The consensus problem is fundamental in the construction of fault-tolerant distributed systems. In this problem, each process proposes a value, and all non-faulty processes must agree on a common value, which must be one of the proposed values. Solving the consensus problem is crucial for implementing various practical agreement problems, such as atomic broadcast, view synchrony, and state-machine replication.

This paper focuses on consensus in asynchronous systems with Byzantine failures, where faulty processes can behave arbitrarily, and there are no assumptions about the relative speed of processes or timely message delivery. To reach a decision, consensus protocols require multiple communication steps. Previous work has shown that at least two communication steps are necessary for decision-making even in failure-free executions. However, this lower bound does not apply to all inputs, especially when all processes propose the same value.

One-step decision schemes aim to achieve faster termination for "good" inputs. Brasileiro et al. [2] introduced a framework to convert crash-tolerant algorithms into ones that solve consensus for any input and terminate in one step when all processes propose the same value. Subsequent works [3, 4] combined one-step decision with randomization and failure detectors. Mostefaoui et al. [11] used the condition-based approach to characterize inputs that allow one-step decisions. Izumi and Masuzawa [8] provided a complete characterization of conditions for one-step decision in the crash-failure model.

Recently, BOSCO [12] presented one-step consensus algorithms for the Byzantine failure model, distinguishing between weak and strong one-step guarantees. Weak one-step guarantees one-step decision only when all processes propose the same value and no process is faulty, while strong one-step guarantees it regardless of the number of faulty processes. BOSCO also showed that \( n > 5t \) and \( n > 7t \) are necessary for weak and strong one-step Byzantine consensus, respectively, where \( n \) is the number of processes and \( t \) is the maximum number of faulty processes.

### 1.2 Our Contribution
This paper explores Byzantine consensus with enhanced one-step decision schemes, focusing on two key features:

1. **Adaptive Condition-Based Approach:** Traditional one-step algorithms are designed to handle the maximum number of failures, which can be overly pessimistic when the actual number of faults is small. The adaptive condition-based approach dynamically adjusts the condition based on the actual number of faulty processes, allowing for one-step termination for more inputs when fewer processes are faulty. This concept was first introduced by Izumi and Masuzawa [7] and applied to the crash-failure model [8].

2. **Double Expedition of One-Step Consensus:** One-step decision schemes cannot achieve zero-degradation, meaning they cannot always guarantee the best complexity (two steps) in stable runs. The double-expedition property addresses this by combining one-step and two-step decision schemes. We present a generic framework for doubly-expedited Byzantine consensus algorithms, instantiated with a pair of condition sequences for one-step and two-step decisions. We also provide sufficient criteria for these condition-sequence pairs and propose two examples: frequency-based and privileged-value-based pairs.

Table 1 compares the performance of DEX with existing one-step Byzantine consensus algorithms. While DEX may trade off the third-step decision for the double-expedition property, it achieves better average performance by making more inputs fall within the conditions for one- or two-step decisions.

To our knowledge, this is the first work to show the feasibility of simultaneously taking one- and two-step decision schemes without additional stronger assumptions.