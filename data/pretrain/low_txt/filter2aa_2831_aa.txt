# Preface

**Title: LOOLDP 5XELQ and PDUVKDOO %UDLQ**

**Copyright 1999 by Prentice Hall PTR**
- **Publisher:** Prentice-Hall, Inc.
- **A Simon & Schuster Company**
- **Location:** Upper Saddle River, NJ 07458

**Usage in Corporations and Government Agencies:**
Prentice Hall books are widely used for training, marketing, and resale. Discounts are available for bulk orders. For more information, contact the Corporate Sales Department at:
- **Phone:** 800-382-3419
- **Fax:** 201-236-7141
- **Email:** [Corporate Sales Email]
- **Address:** Corporate Sales Department, Prentice Hall PTR, One Lake Street, Upper Saddle River, NJ 07458

**Trademark Notice:**
Product and company names mentioned in this book are trademarks or registered trademarks of their respective owners. All rights reserved. No part of this book may be reproduced, in any form or by any means, without permission in writing from the publisher.

**ISBN:** 0-13-095966-9

**Electronic Version Usage:**
This electronic version is provided strictly for use by customers who have purchased the printed version of the book. It should not be reproduced or distributed in any way.

---

# Table of Contents

1. **Preface** - xiii
2. **The Basics of COM**
   - Classes and Objects - 1
   - How COM Is Different - 3
     - COM can Run Across Processes - 3
     - COM Methods Can Be Called Across a Network - 4
     - COM Objects Must Be Unique Throughout the World - 5
     - COM is Language Independent - 5
   - COM Vocabulary - 5
   - The Interface - 7
   - Interfaces Isolate the Client From the Server - 8
   - Imagine a Component - 10
   - What's in a Name? - 10
   - The Source of All Interfaces - IUnknown - 10
   - A Typical COM Object - 11
   - How to Be Unique - the GUID - 12
   - A COM Server - 14
   - Interactions Between Client and Server - 15
   - Summary - 16
3. **Understanding the Simplest COM Client** - 19
   - Four Steps to Client Connectivity - 20
   - Initializing the COM Subsystem - 21
   - Query COM for a Specific Interface - 22
   - Execute a Method on the Interface - 24
   - Release the Interface - 24
   - Summary - 25
4. **Understanding a Simple COM Server** - 27
   - Where's the Code? - 28
   - Building a DLL-Based (In-Process) COM Server - 29
   - Creating the Server Using the ATL Wizard - 30
   - Adding a COM Object - 33
   - Adding a Method to the Server - 36
   - Running the Client and the Server - 40
   - Summary - 41
5. **Creating Your Own COM Clients and Servers** - 43
   - Server Side - 43
   - Client Side - 45
6. **Understanding ATL-Generated Code** - 55
   - The Main C++ Module - 56
   - Object Maps - 58
   - Export File - 58
   - The COM Object - "CBeepObj" - 60
   - Object Inheritance - 61
   - The Class Definition - 62
   - The Method - 63
   - Server Registration - 64
   - Registry Scripts - 65
   - Summary - 66
7. **Understanding the Client and Server** - 67
   - Principles of COM - 67
   - COM is About Interfaces - 68
   - COM is Language-Independent - 68
   - COM is Built Around the Concept of Transparency - 69
   - Interfaces are Contracts Between the Client and Server - 69
   - Software Changes. Interfaces Don't - 70
   - Activation - 71
   - More About Interfaces - 73
   - VTABLES - Virtual Function Tables - 75
   - The Class Factory - 77
   - Singleton Classes - 79
   - Understanding QueryInterface - 81
   - Reference Counting with AddRef and Release - 82
   - Method Calls - 85
   - COM Identifiers: CLSID AND IID - 87
   - CLSCTX -- Server Context - 88
   - Inheritance - 88
   - Summary - 89
8. **An Introduction to MIDL** - 91
   - Origins of the MIDL Compiler - 91
   - Precisely Defining Interfaces with the IDL Language - 92
   - MIDL Generated Headers - 94
   - Automatically Generated Proxy/Stub Modules - 94
   - Automatic Creation of Type Libraries - 95
   - The IDL Language - 95
   - Interfaces and Methods in IDL - 97
   - The Component Class in IDL - 100
   - Type Libraries in IDL - 102
   - MIDL Post-Processing - 103
   - Summary - 105
9. **Defining and Using Interfaces** - 107
   - Base Types - 108
   - Attributes - 109
   - Double Parameters - 112
   - Boolean Parameters - 113
   - Working with Strings - 113
   - Arrays - 119
   - Structures and Enumerations - 121
   - Summary - 123
10. **OLE Automation and Dual Interfaces** - 125
    - IDL Definitions - 126
    - The IDispatch Interface - 127
    - Using Invoke - 133
    - Using Type Libraries for Early Binding - 136
    - Dual Interfaces - 137
    - There is no Proxy/Stub DLL for Dispatch Interfaces - 140
    - Properties - 140
    - Adding Properties with the Class Wizard - 142
    - Methods - 144
    - The ISupportErrorInfo Interface - 144
    - Summary - 149
11. **COM Threading Models** - 151
    - Synchronization and Marshaling - 151
    - Threading Models - 153
    - Apartment, Free, and Single Threads - 155
    - The ATL Wizard and Threading Models - 156
    - Apartment Threads - 158
    - Single Threads - 159
    - Free Threaded Servers - 160
    - Both - 161
    - Marshaling Between Threads - 162
    - Using Apartment Threads - 163
    - Free Threading Model - 164
    - Testing the Different Models - 165
    - Summary - 166
12. **The COM Registry** - 167
    - The COM Registry Structure - 168
    - Registration of CLSIDs - 171
    - Registration of ProgIDs - 172
    - Registration of AppIDs - 174
    - Self-Registration in ATL Servers - 174
    - The RGS File - 175
    - Automatic Registration of Remote Servers - 177
    - In-Process Servers - 178
    - Using the Registry API - 178
    - Summary - 178
13. **Callback Interfaces** - 181
    - Client and Server Confusion - 183
    - Custom Callback Interfaces - 183
    - A Callback Example - 185
      - Create the Server - 185
      - Add a COM Object to the Server - 186
      - Adding the ICallBack Interface to IDL - 187
      - Modify the Header - 187
      - Adding the Advise Method to the Server - 188
      - Adding the UnAdvise Method - 189
      - Calling the Client from the Server - 189
    - The Client Application - 191
      - Create the Client Dialog Application - 191
      - Adding the Callback COM Object - 192
      - Linking to the Server Headers - 194
      - COM Maps - 194
      - Implementing the Callback Method - 195
      - Adding the Object Map - 195
      - Connecting to the Server - 196
      - Cleaning Up - 199
      - Adding the OnButton Code - 199
      - A Chronology of Events - 201
      - A Multi-Threaded Server - 203
        - Starting the Worker Thread - 205
        - Marshaling the Interface Between Threads - 206
        - Starting the Worker Thread: Part 2 - 207
        - A Simple Worker Thread Class - 208
        - Implementing the Worker Thread - 209
        - All Good Threads Eventually Die - 211
    - Summary - 211
14. **Connection Points** - 213
    - Modifying the Callback Server - 215
    - Adding Connection Points to the Client Program - 220
      - Add the Callback Object to the Client - 221
      - Modifying the CpClient Application - 221
      - Registering With the Serverâ€™s Connection Point Interface - 222
      - Adding the Now and Later Buttons - 226
      - Using the Connection Point - the Server Side - 226
      - Adding the Later2 Method - 228
    - Summary - 228
15. **Distributed COM** - 229
    - An Overview of Remote Connections - 229
    - Converting a Client for Remote Access - 231
    - Adding Security - 234
      - Security Concepts - 234
      - Access Permissions - 235
      - Launch Permissions - 236
      - Authentication - 237
      - Impersonation - 237
      - Identity - 238
      - Custom Security - 239
      - CoInitializeSecurity - 239
      - Disconnection - 242
      - Using the Registry for Remote Connections - 243
      - Installing the Server on a Remote Computer - 244
16. **ATL and Compiler Support** - 245
    - C++ SDK Programming - 245
    - MFC COM - 246

---

This revised and organized table of contents provides a clear and professional structure for the book, making it easier for readers to navigate and understand the content.