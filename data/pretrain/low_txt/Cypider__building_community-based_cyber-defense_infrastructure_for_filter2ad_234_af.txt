### Optimization of Text

**Original Text:**
needs less than 82 minutes to build a network similarity
of 50, 000 apps. The preliminary results of the community
ﬁngerprint are very promising as 87% of the detection is
achieved. As future work, we plan to investigate more fea-
tures selection, attempting to increase the detection rate.
Acknowledgements
The authors would like to thank the anonymous reviewers
for their insightful comments that helped improving this pa-
per.
13. REFERENCES
[1] Drebin Dataset - http://tinyurl.com/pdsrtez, 2015.
358
[2] Genome Dataset - http://tinyurl.com/combopx, 2015.
[3] Andr/Boxer-C - https://tinyurl.com/zpk3xkd, 2016.
[4] Android - http://tinyurl.com/prhj8zn, 2016.
[5] Android Auto - http://tinyurl.com/hdsunht, 2016.
[6] Android NDK - http://tinyurl.com/ppn559l, 2016.
[7] Android TV - http://tinyurl.com/zlb6hk6, 2016.
[8] Android Wear - http://tinyurl.com/qfa55o4, 2016.
[9] Andr/OpFake-U - https://tinyurl.com/h9lxk7p, 2016.
[10] App Manifest - http://tinyurl.com/zdjps4o, 2016.
[11] Brillo - http://tinyurl.com/q5ko3zu, 2016.
[12] G DATA Mobile Malware Report -
http://tinyurl.com/jecm8gg, 2016.
[13] Google Play - https://play.google.com/, 2016.
[14] IDC - http://tinyurl.com/p7znq9m, 2016.
[15] tf-idf - https://tinyurl.com/mcdf46g, 2016.
[16] A. Ali-Gombe, I. Ahmed, G. G. Richard III, and
V. Roussev. AspectDroid: Android App Analysis
System. In Proceedings of the Sixth ACM Conference
on Data and Application Security and Privacy,
CODASPY ’16, pages 145–147, New York, NY, USA,
2016. ACM, ACM.
Anti-Virus Apps. In Proceedings of the Sixth ACM
Conference on Data and Application Security and
Privacy, number January 2009 in CODASPY ’16,
pages 172–182, 2016.
[25] G. Canfora, E. Medvet, F. Mercaldo, and C. A.
Visaggio. Detecting Android malware using sequences
of system calls. In Proceedings of the 3rd International
Workshop on Software Development Lifecycle for
Mobile, DeMobile 2015, Bergamo, Italy, August 31 -
September 4, 2015, DeMobile 2015, pages 13–20, 2015.
[26] G. Canfora, E. Medvet, F. Mercaldo, and C. A.
Visaggio. Acquiring and Analyzing App Metrics for
Eﬀective Mobile Malware Detection. In Proceedings of
the 2016 ACM on International Workshop on Security
And Privacy Analytics, number March in IWSPA ’16,
pages 50–57. ACM, 2016.
[27] K. Chen, P. Wang, Y. Lee, X. Wang, N. Zhang,
H. Huang, W. Zou, and P. Liu. Finding Unknown
Malice in 10 Seconds: Mass Vetting for New Threats
at the Google-Play Scale. In 24th USENIX Security
Symposium (USENIX Security 15), pages 659–674.
USENIX Association, 2015.
[17] A. Ali-Gombe, I. Ahmed, G. G. Richard III,
[28] J. Crussell, C. Gibler, and H. Chen. Attack of the
V. Roussev, A. A. Gombe, I. Ahmed, G. G. R. III,
and V. Roussev. OpSeq: Android Malware
Fingerprinting. In Proceedings of the 5th Program
Protection and Reverse Engineering Workshop,
PPREW-5, pages 7:1—-7:12. ACM, 2015.
[18] K. Allix, T. F. Bissyand´e, Q. Jerome, J. Klein, Y. Le
Traon, and Others. Large-scale machine
learning-based malware detection: confronting the
10-fold cross validation scheme with reality. In
Proceedings of the 4th ACM Conference on Data and
Application Security and Privacy, CODASPY ’14,
pages 163–166, 2014.
[19] B. Amos, H. Turner, and J. White. Applying machine
learning classiﬁers to dynamic android malware
detection at scale. In Wireless Communications and
Mobile Computing Conference (IWCMC), 2013 9th
International, pages 1666–1671. IEEE, 2013.
[20] D. Arp, M. Spreitzenbarth, H. Malte, H. Gascon,
K. Rieck, M. Hubner, H. Gascon, and K. Rieck.
DREBIN: Eﬀective and Explainable Detection of
Android Malware in Your Pocket. In Symposium on
Network and Distributed System Security (NDSS),
pages 23–26, 2014.
[21] M. Bawa, T. Condie, and P. Ganesan. LSH forest:
self-tuning indexes for similarity search. Proceedings of
the 14th international conference on World Wide Web
- WWW ’05, page 651, 2005.
[22] S. Bhandari, R. Gupta, V. Laxmi, M. S. Gaur,
A. Zemmari, and M. Anikeev. DRACO: DRoid
analyst combo an android malware analysis
framework. In Proceedings of the 8th International
Conference on Security of Information and Networks,
pages 283–289. ACM, 2015.
[23] V. D. Blondel, J.-L. Guillaume, R. Lambiotte, and
E. Lefebvre. Fast unfolding of communities in large
networks. Journal of Statistical Mechanics: Theory
and Experiment, 10008(10):6, 2008.
[24] Z. Cai and R. H. C. Yap. Inferring the Detection Logic
and Evaluating the Eﬀectiveness of Android
clones: Detecting cloned applications on android
markets. In Computer Security - {ESORICS} 2012 -
17th European Symposium on Research in Computer
Security Proceedings, pages 37–54. Springer, 2012.
[29] J. Crussell, C. Gibler, and H. Chen. AnDarwin:
Scalable Detection of Semantically Similar Android
Applications. In Computer Security - ESORICS 2013
- 18th European Symposium on Research in Computer
Security, Egham, UK, September 9-13, 2013.
Proceedings, volume PP, pages 182–199, 2013.
[30] L. Deshotels, V. Notani, and A. Lakhotia.
Droidlegacy: Automated familial classiﬁcation of
android malware. In Proceedings of ACM SIGPLAN
on Program Protection and Reverse Engineering
Workshop 2014, PPREW’14, page 3, 2014.
[31] P. Faruki, V. Laxmi, A. Bharmal, M. S. Gaur, and
V. Ganmoor. AndroSimilar: Robust signature for
detecting variants of Android malware. Journal of
Information Security and Applications, 22:66–80, 2015.
[32] Y. Feng, S. Anand, I. Dillig, and A. Aiken.
Apposcopy: Semantics-based detection of android
malware through static analysis. In Proceedings of the
22nd ACM SIGSOFT International Symposium on
Foundations of Software Engineering, FSE 2014, pages
576–587. ACM, 2014.
[33] H. Gascon, F. Yamaguchi, D. Arp, and K. Rieck.
Structural detection of android malware using
embedded call graphs. In Proceedings of the 2013
ACM workshop on Artiﬁcial intelligence and security,
AISec ’13, pages 45–54, 2013.
[34] M. Grace, Y. Zhou, Q. Zhang, S. Zou, and X. Jiang.
Riskranker: scalable and accurate zero-day android
malware detection. In Proceedings of the 10th
international conference on Mobile systems,
applications, and services, MobiSys ’12, pages
281–294. ACM, ACM, 2012.
[35] S. Hanna, L. Huang, E. X. Wu, S. Li, C. Chen, and
D. Song. Juxtapp: A scalable system for detecting
code reuse among android applications. In Detection
359
of Intrusions and Malware, and Vulnerability
Assessment, volume 7591 LNCS, pages 62–81.
Springer, 2012.
[36] J. Hoﬀmann, T. Rytilahti, D. Maiorca, M. Winandy,
G. Giacinto, and T. Holz. Evaluating Analysis Tools
for Android Apps: Status Quo and Robustness
Against Obfuscation. In Proceedings of the Sixth ACM
Conference on Data and Application Security and
Privacy, CODASPY ’16, pages 139–141, 2016.
[37] J. Huang, X. Zhang, L. Tan, P. Wang, and B. Liang.
AsDroid: Detecting stealthy behaviors in android
applications by user interface and program behavior
contradiction. In Proceedings of the 36th International
Conference on Software Engineering, pages 1036–1046.
ACM, 2014.
[38] H. Kang, J.-w. Jang, A. Mohaisen, and H. K. Kim.
Detecting and classifying android malware using static
analysis along with creator information. International
Journal of Distributed Sensor Networks, 2015:7, 2015.
[39] E. B. Karbab, M. Debbabi, and D. Mouheb.
Fingerprinting Android packaging: Generating DNAs
for malware detection. Digital Investigation,
18:S33–S45, 2016.
[40] P. M. Kate and S. V. Dhavale. Two Phase Static
Analysis Technique for Android Malware Detection. In
Proceedings of the Third International Symposium on
Women in Computing and Informatics, pages
650–655. ACM, 2015.
41(4):1104–1117, 2014.
[48] M. Sun, M. Li, and J. C. S. Lui. DroidEagle: seamless
detection of visually similar Android apps. In
Proceedings of the 8th ACM Conference on Security &
Privacy in Wireless and Mobile Networks, WiSec ’15,
page 9, 2015.
[49] T. Vidas, J. Tan, J. Nahata, C. L. Tan, N. Christin,
and P. Tague. A5: Automated analysis of adversarial
android applications. In Proceedings of the 4th ACM
Workshop on Security and Privacy in Smartphones &
Mobile Devices, pages 39–50, 2014.
[50] T.-E. E. Wei, C.-H. H. Mao, A. B. Jeng, H.-M. M.
Lee, H.-T. T. Wang, and D.-J. J. Wu. Android
malware detection via a latent network behavior
analysis. In Trust, Security and Privacy in Computing
and Communications (TrustCom), pages 1251–1258.
IEEE, 2012.
[51] K. Weinberger, A. Dasgupta, J. Attenberg,
J. Langford, and A. Smola. Feature Hashing for Large
Scale Multitask Learning. Proceedings of the 26th
Annual International Conference on Machine
Learning, pages (pp. 1113–1120)., 2009.
[52] W. Yang, J. Li, Y. Zhang, Y. Li, J. Shu, and D. Gu.
APKLancet: tumor payload diagnosis and puriﬁcation
for android applications. In Proceedings of the 9th
ACM symposium on Information, computer and
communications security, ASIA CCS ’14, pages
483–494, 2014.
[41] J. Kim, T. G. Kim, and E. G. Im. Structural
[53] Z. Yuan, Y. Lu, Z. Wang, and Y. Xue. Droid-Sec:
information based malicious app similarity calculation
and clustering. In Proceedings of the 2015 Conference
on research in adaptive and convergent systems, pages
314–318. ACM, 2015.
[42] Y.-D. Lin, Y.-C. Lai, C.-H. Chen, and H.-C. Tsai.
Identifying android malicious repackaged applications
by thread-grained system call sequences. computers &
security, 39:340–350, 2013.
[43] B. Sch¨olkopf, J. C. Platt, J. Shawe-Taylor, a. J.
Smola, and R. C. Williamson. Estimating the support
of a high-dimensional distribution. Neural
computation, 13(7):1443–1471, 2001.
[44] S. Sheen and A. Ramalingam. Malware Detection in
Android ﬁles based on Multiple levels of Learning and
Diverse Data Sources. In Proceedings of the Third
International Symposium on Women in Computing
and Informatics, {WCI} 2015, co-located with
{ICACCI} 2015, Kochi, India, August 10-13, 2015,
pages 553–559. ACM, 2015.
[45] Q. Shi, J. Petterson, G. Dror, J. Langford, A. J.
Smola, A. L. Strehl, and V. Vishwanathan. Hash
Kernels. In Proceedings of the Twelfth International
Conference on Artiﬁcial Intelligence and Statistics,
AISTATS 2009, Clearwater, pages 496–503, 2009.
[46] M. Spreitzenbarth, F. C. Freiling, F. Echtler,
T. Schreck, and J. Hoﬀmann. Mobile-sandbox: having
a deeper look into android applications. In Proceedings
of the 28th Annual ACM Symposium on Applied
Computing, SAC ’13, pages 1808–1815. ACM, 2013.
[47] G. Suarez-Tangil, J. E. Tapiador, P. Peris-Lopez, and
J. Blasco. Dendroid: A text mining approach to
analyzing and classifying code structures in Android
malware families. Expert Systems with Applications,
deep learning in android malware detection. In F. E.
Bustamante, Y. C. Hu, A. Krishnamurthy, and
S. Ratnasamy, editors, ACM SIGCOMM Computer
Communication Review, volume 44, pages 371–372,
2014.
[54] Y. Zhang, M. Yang, B. Xu, Z. Yang, G. Gu, P. Ning,
X. S. Wang, and B. Zang. Vetting undesirable
behaviors in android apps with permission use
analysis. In Proceedings of the 2013 ACM SIGSAC
conference on Computer & communications security,
CCS ’13, pages 611–622. ACM, 2013.
[55] W. Zhou, Y. Zhou, M. Grace, X. Jiang, and S. Zou.
Fast, scalable detection of piggybacked mobile
applications. In Proceedings of the third ACM
conference on Data and application security and
privacy, CODASPY ’13, pages 185–196, 2013.
[56] W. Zhou, Y. Zhou, X. Jiang, and P. Ning. Detecting
Repackaged Smartphone Applications in Third-party
Android Marketplaces. In Proceedings of the second
ACM conference on Data and Application Security
and Privacy, CODASPY ’12, pages 317–326, 2012.
[57] Y. Zhou and X. Jiang. Dissecting android malware:
Characterization and evolution. In Security and
Privacy (SP), 2012 IEEE Symposium on, pages
95–109, 2012.
[58] Y. Zhou, Z. Wang, W. Zhou, and X. Jiang. Hey, You,
Get Oﬀ of My Market: Detecting Malicious Apps in
Oﬃcial and Alternative Android Markets. In
Symposium on Network and Distributed System
Security (NDSS), volume 25, pages 50–52, 2012.
APPENDIX
360
Figure 7: Cypider Network of Mixed Drebin Dataset
361
Figure 8: Detected Communities in Mixed Drebin Dataset
362

**Optimized Text:**

---

### Results and Future Work

Our method can build a network similarity for 50,000 applications in under 82 minutes. The preliminary results from the community fingerprinting are highly promising, achieving an 87% detection rate. For future work, we aim to explore additional feature selection techniques to further enhance the detection rate.

### Acknowledgements

The authors would like to express their gratitude to the anonymous reviewers for their valuable and insightful comments, which have significantly improved the quality of this paper.

### References

1. **Drebin Dataset** - [http://tinyurl.com/pdsrtez](http://tinyurl.com/pdsrtez), 2015.
2. **Genome Dataset** - [http://tinyurl.com/combopx](http://tinyurl.com/combopx), 2015.
3. **Andr/Boxer-C** - [https://tinyurl.com/zpk3xkd](https://tinyurl.com/zpk3xkd), 2016.
4. **Android** - [http://tinyurl.com/prhj8zn](http://tinyurl.com/prhj8zn), 2016.
5. **Android Auto** - [http://tinyurl.com/hdsunht](http://tinyurl.com/hdsunht), 2016.
6. **Android NDK** - [http://tinyurl.com/ppn559l](http://tinyurl.com/ppn559l), 2016.
7. **Android TV** - [http://tinyurl.com/zlb6hk6](http://tinyurl.com/zlb6hk6), 2016.
8. **Android Wear** - [http://tinyurl.com/qfa55o4](http://tinyurl.com/qfa55o4), 2016.
9. **Andr/OpFake-U** - [https://tinyurl.com/h9lxk7p](https://tinyurl.com/h9lxk7p), 2016.
10. **App Manifest** - [http://tinyurl.com/zdjps4o](http://tinyurl.com/zdjps4o), 2016.
11. **Brillo** - [http://tinyurl.com/q5ko3zu](http://tinyurl.com/q5ko3zu), 2016.
12. **G DATA Mobile Malware Report** - [http://tinyurl.com/jecm8gg](http://tinyurl.com/jecm8gg), 2016.
13. **Google Play** - [https://play.google.com/](https://play.google.com/), 2016.
14. **IDC** - [http://tinyurl.com/p7znq9m](http://tinyurl.com/p7znq9m), 2016.
15. **tf-idf** - [https://tinyurl.com/mcdf46g](https://tinyurl.com/mcdf46g), 2016.

16. **A. Ali-Gombe, I. Ahmed, G. G. Richard III, and V. Roussev.** *AspectDroid: Android App Analysis System.* In Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy (CODASPY '16), pages 145–147, New York, NY, USA, 2016. ACM.

17. **A. Ali-Gombe, I. Ahmed, G. G. Richard III, V. Roussev, A. A. Gombe, I. Ahmed, G. G. R. III, and V. Roussev.** *OpSeq: Android Malware Fingerprinting.* In Proceedings of the 5th Program Protection and Reverse Engineering Workshop (PPREW-5), pages 7:1–7:12. ACM, 2015.

18. **K. Allix, T. F. Bissyandé, Q. Jerome, J. Klein, Y. Le Traon, and Others.** *Large-scale machine learning-based malware detection: confronting the 10-fold cross-validation scheme with reality.* In Proceedings of the 4th ACM Conference on Data and Application Security and Privacy (CODASPY '14), pages 163–166, 2014.

19. **B. Amos, H. Turner, and J. White.** *Applying machine learning classifiers to dynamic Android malware detection at scale.* In 9th International Wireless Communications and Mobile Computing Conference (IWCMC), pages 1666–1671. IEEE, 2013.

20. **D. Arp, M. Spreitzenbarth, H. Malte, H. Gascon, K. Rieck, M. Hubner, H. Gascon, and K. Rieck.** *DREBIN: Effective and Explainable Detection of Android Malware in Your Pocket.* In Symposium on Network and Distributed System Security (NDSS), pages 23–26, 2014.

21. **M. Bawa, T. Condie, and P. Ganesan.** *LSH Forest: Self-Tuning Indexes for Similarity Search.* Proceedings of the 14th International Conference on World Wide Web (WWW '05), page 651, 2005.

22. **S. Bhandari, R. Gupta, V. Laxmi, M. S. Gaur, A. Zemmari, and M. Anikeev.** *DRACO: DRoid Analyst Combo - An Android Malware Analysis Framework.* In Proceedings of the 8th International Conference on Security of Information and Networks, pages 283–289. ACM, 2015.

23. **V. D. Blondel, J.-L. Guillaume, R. Lambiotte, and E. Lefebvre.** *Fast Unfolding of Communities in Large Networks.* Journal of Statistical Mechanics: Theory and Experiment, 10008(10):6, 2008.

24. **Z. Cai and R. H. C. Yap.** *Inferring the Detection Logic and Evaluating the Effectiveness of Android Clones: Detecting Cloned Applications on Android Markets.* In Computer Security - ESORICS 2012 - 17th European Symposium on Research in Computer Security, pages 37–54. Springer, 2012.

25. **G. Canfora, E. Medvet, F. Mercaldo, and C. A. Visaggio.** *Detecting Android Malware Using Sequences of System Calls.* In Proceedings of the 3rd International Workshop on Software Development Lifecycle for Mobile (DeMobile 2015), Bergamo, Italy, August 31 - September 4, 2015, pages 13–20, 2015.

26. **G. Canfora, E. Medvet, F. Mercaldo, and C. A. Visaggio.** *Acquiring and Analyzing App Metrics for Effective Mobile Malware Detection.* In Proceedings of the 2016 ACM International Workshop on Security and Privacy Analytics (IWSPA '16), pages 50–57. ACM, 2016.

27. **K. Chen, P. Wang, Y. Lee, X. Wang, N. Zhang, H. Huang, W. Zou, and P. Liu.** *Finding Unknown Malice in 10 Seconds: Mass Vetting for New Threats at the Google-Play Scale.* In 24th USENIX Security Symposium (USENIX Security 15), pages 659–674. USENIX Association, 2015.

28. **J. Crussell, C. Gibler, and H. Chen.** *AnDarwin: Scalable Detection of Semantically Similar Android Applications.* In Computer Security - ESORICS 2013 - 18th European Symposium on Research in Computer Security, Egham, UK, September 9-13, 2013, pages 182–199, 2013.

29. **L. Deshotels, V. Notani, and A. Lakhotia.** *DroidLegacy: Automated Familial Classification of Android Malware.* In Proceedings of ACM SIGPLAN on Program Protection and Reverse Engineering Workshop 2014 (PPREW'14), page 3, 2014.

30. **P. Faruki, V. Laxmi, A. Bharmal, M. S. Gaur, and V. Ganmoor.** *AndroSimilar: Robust Signature for Detecting Variants of Android Malware.* Journal of Information Security and Applications, 22:66–80, 2015.

31. **Y. Feng, S. Anand, I. Dillig, and A. Aiken.** *Apposcopy: Semantics-Based Detection of Android Malware Through Static Analysis.* In Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE 2014), pages 576–587. ACM, 2014.

32. **H. Gascon, F. Yamaguchi, D. Arp, and K. Rieck.** *Structural Detection of Android Malware Using Embedded Call Graphs.* In Proceedings of the 2013 ACM Workshop on Artificial Intelligence and Security (AISec '13), pages 45–54, 2013.

33. **M. Grace, Y. Zhou, Q. Zhang, S. Zou, and X. Jiang.** *RiskRanker: Scalable and Accurate Zero-Day Android Malware Detection.* In Proceedings of the 10th International Conference on Mobile Systems, Applications, and Services (MobiSys '12), pages 281–294. ACM, 2012.

34. **S. Hanna, L. Huang, E. X. Wu, S. Li, C. Chen, and D. Song.** *Juxtapp: A Scalable System for Detecting Code Reuse Among Android Applications.* In Detection of Intrusions and Malware, and Vulnerability Assessment, volume 7591 LNCS, pages 62–81. Springer, 2012.

35. **J. Hoffmann, T. Rytilahti, D. Maiorca, M. Winandy, G. Giacinto, and T. Holz.** *Evaluating Analysis Tools for Android Apps: Status Quo and Robustness Against Obfuscation.* In Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy (CODASPY '16), pages 139–141, 2016.

36. **J. Huang, X. Zhang, L. Tan, P. Wang, and B. Liang.** *AsDroid: Detecting Stealthy Behaviors in Android Applications by User Interface and Program Behavior Contradiction.* In Proceedings of the 36th International Conference on Software Engineering, pages 1036–1046. ACM, 2014.

37. **H. Kang, J.-w. Jang, A. Mohaisen, and H. K. Kim.** *Detecting and Classifying Android Malware Using Static Analysis Along with Creator Information.* International Journal of Distributed Sensor Networks, 2015:7, 2015.

38. **E. B. Karbab, M. Debbabi, and D. Mouheb.** *Fingerprinting Android Packaging: Generating DNAs for Malware Detection.* Digital Investigation, 18:S33–S45, 2016.

39. **P. M. Kate and S. V. Dhavale.** *Two-Phase Static Analysis Technique for Android Malware Detection.* In Proceedings of the Third International Symposium on Women in Computing and Informatics, pages 650–655. ACM, 2015.

40. **J. Kim, T. G. Kim, and E. G. Im.** *Structural Information Based Malicious App Similarity Calculation and Clustering.* In Proceedings of the 2015 Conference on Research in Adaptive and Convergent Systems, pages 314–318. ACM, 2015.

41. **Y.-D. Lin, Y.-C. Lai, C.-H. Chen, and H.-C. Tsai.** *Identifying Android Malicious Repackaged Applications by Thread-Grained System Call Sequences.* Computers & Security, 39:340–350, 2013.

42. **B. Schölkopf, J. C. Platt, J. Shawe-Taylor, A. J. Smola, and R. C. Williamson.** *Estimating the Support of a High-Dimensional Distribution.* Neural Computation, 13(7):1443–1471, 2001.

43. **S. Sheen and A. Ramalingam.** *Malware Detection in Android Files Based on Multiple Levels of Learning and Diverse Data Sources.* In Proceedings of the Third International Symposium on Women in Computing and Informatics (WCI 2015), co-located with ICACCI 2015, Kochi, India, August 10-13, 2015, pages 553–559. ACM, 2015.

44. **Q. Shi, J. Petterson, G. Dror, J. Langford, A. J. Smola, A. L. Strehl, and V. Vishwanathan.** *Hash Kernels.* In Proceedings of the Twelfth International Conference on Artificial Intelligence and Statistics (AISTATS 2009), Clearwater, pages 496–503, 2009.

45. **M. Spreitzenbarth, F. C. Freiling, F. Echtler, T. Schreck, and J. Hoffmann.** *Mobile-Sandbox: Having a Deeper Look into Android Applications.* In Proceedings of the 28th Annual ACM Symposium on Applied Computing (SAC '13), pages 1808–1815. ACM, 2013.

46. **G. Suarez-Tangil, J. E. Tapiador, P. Peris-Lopez, and J. Blasco.** *Dendroid: A Text Mining Approach to Analyzing and Classifying Code Structures in Android Malware Families.* Expert Systems with Applications, 41(4):1104–1117, 2014.

47. **Y. Zhang, M. Yang, B. Xu, Z. Yang, G. Gu, P. Ning, X. S. Wang, and B. Zang.** *Vetting Undesirable Behaviors in Android Apps with Permission Use Analysis.* In Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security (CCS '13), pages 611–622. ACM, 2013.

48. **W. Zhou, Y. Zhou, M. Grace, X. Jiang, and S. Zou.** *Fast, Scalable Detection of Piggybacked Mobile Applications.* In Proceedings of the Third ACM Conference on Data and Application Security and Privacy (CODASPY '13), pages 185–196, 2013.

49. **W. Zhou, Y. Zhou, X. Jiang, and P. Ning.** *Detecting Repackaged Smartphone Applications in Third-Party Android Marketplaces.* In Proceedings of the Second ACM Conference on Data and Application Security and Privacy (CODASPY '12), pages 317–326, 2012.

50. **Y. Zhou and X. Jiang.** *Dissecting Android Malware: Characterization and Evolution.* In Security and Privacy (SP), 2012 IEEE Symposium on, pages 95–109, 2012.

51. **Y. Zhou, Z. Wang, W. Zhou, and X. Jiang.** *Hey, You, Get Off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets.* In Symposium on Network and Distributed System Security (NDSS), volume 25, pages 50–52, 2012.

### Appendix

**Figure 7:** Cypider Network of Mixed Drebin Dataset

**Figure 8:** Detected Communities in Mixed Drebin Dataset

---