### Heterogeneous PIR (HPIR) and Its Benefits

By offloading the bulk of computations to a resourceful server, HPIR significantly improves the client's overall experience. For example, in Goldberg’s system, the client computation time is 0.2 seconds compared to 9 seconds on the server. This offloading reduces the client's overall retrieval time.

### Communication Overhead

In HPIR, the client can control the Diffie-Hellman (DH) parameter by non-uniformly splitting the \( q + 1 \) query vectors among the PIR servers. For instance, \( q \) vectors can be sent to a rich server, while 1 vector is sent to a poor server. Figure 5 illustrates the download and upload bandwidth overheads for our heterogeneous protocol when retrieving \( q = 31 \) records from a 2 GB database, with varying degrees of heterogeneity. As shown, increasing the degree of heterogeneity trades off communication efficiency.

### Performance Comparison

#### Table V: Computation and Communication Costs

| PIR Protocol        | Retrieved File Size | Server Computation (s) | Upload Bandwidth (MB) | Download Bandwidth (MB) |
|---------------------|---------------------|------------------------|-----------------------|-------------------------|
| PIR-PSI [19]        | 4 B                 | 0.528                  | 3.00                  | 0.51                    |
| SealPIR [4]         | 288 B               | 0.02                   | 0.06                  | 0.003                   |
| Computational HPIR (DH=2/1) | 270 KB            | 0.51                   | Rich: 1.16, Poor: 0.40 | 0.03                    |
| RAID-PIR [18]       | 540 KB              | 0.25                   | Rich: 0.52, Poor: 0.26 | 0.52                    |
| IT HPIR (DH=4/1)    | 540 KB              | 0.25                   | Rich: 0.52, Poor: 0.26 | 0.52                    |

Compared to other PIR designs, HPIR has lower server computation overhead despite retrieving much larger files (e.g., 270 kB vs. 4 B and 288 B). Additionally, HPIR offers better upload bandwidth and comparable download bandwidth.

### RAID-PIR and IT HPIR Comparison

We also compare RAID-PIR [18], an IT-PIR algorithm, with our IT HPIR protocol using the original implementation [46]. As shown in Table V, for a 540 KB file, the poor HPIR server achieves lower computation and download bandwidth overheads. Increasing the DH metric further reduces the load on the poor HPIR server.

### Conclusions

We introduced Heterogeneous PIR (HPIR), a new class of multi-server PIR protocols where different servers handle varying computation and communication loads. HPIR enables low-resource parties to participate in private services and enhances the utility of existing PIR applications.

We designed the first HPIR protocol based on a novel PIR-tailored secret sharing construction and implemented it with the Percy++ PIR library [43]. Our extensive evaluations in various settings, including different degrees of heterogeneity, demonstrate its effectiveness.

### Acknowledgements

We thank Christina Poepper for shepherding our paper, Adam O’Neill and Mukul Kulkarni for valuable discussions, and anonymous reviewers for their feedback. This research was funded by NSF award #1719386 and Intel Corporation award #34627511.

### Figures

**Figure 5:** The upload and download overheads for our HPIR (complete version). We download a 10.95 MB file from a 2 GB database with \( q = 31 \).

**Figure 6:** The upload and download overheads (normalized by the size of the requested file) for our HPIR. We download a 10.95 MB file from a 2 GB database.

### References

[1] C. Aguilar-Melchor, J. Barrier, L. Fousse, and M.-O. Killijian, “XPIR: Private information retrieval for everyone,” Proceedings on Privacy Enhancing Technologies, vol. 2016, no. 2, pp. 155–174, 2016.
[2] C. Aguilar-Melchor and P. Gaborit, “A lattice-based computationally-efficient private information retrieval protocol,” in Western European Workshop on Research in Cryptology. Citeseer, 2007.
[3] B. Ahlgren, M. D’Ambrosio, M. Marchisio, I. Marsh, C. Dannewitz, B. Ohlman, K. Pentikousis, O. Strandberg, R. Rembarz, and V. Vercellone, “Design considerations for a network of information,” in Proceedings of the 2008 ACM CoNEXT Conference, 2008, pp. 1–6.
[4] S. Angel, H. Chen, K. Laine, and S. Setty, “PIR with compressed queries and amortized query processing,” in 2018 IEEE Symposium on Security and Privacy (SP). IEEE, 2018, pp. 962–979.
[5] A. Beimel and Y. Ishai, “Information-theoretic private information retrieval: A unified construction,” in International Colloquium on Automata, Languages, and Programming. Springer, 2001, pp. 912–926.
[6] A. Beimel, Y. Ishai, E. Kushilevitz, and I. Orlov, “Share conversion and private information retrieval,” in 2012 IEEE 27th Conference on Computational Complexity. IEEE, 2012, pp. 258–268.
[7] A. Beimel, Y. Ishai, E. Kushilevitz, and J.-F. Raymond, “Breaking the o (n/sup 1/(2k-1)/) barrier for information-theoretic private information retrieval,” in Foundations of Computer Science, 2002. Proceedings. The 43rd Annual IEEE Symposium on. IEEE, 2002, pp. 261–270.
[8] A. Beimel and Y. Stahl, “Robust information-theoretic private information retrieval,” in International Conference on Security in Communication Networks. Springer, 2002, pp. 326–341.
[9] R. Bhat and N. Sunitha, “A novel hybrid private information retrieval with non-trivial communication cost,” in 2018 4th International Conference on Recent Advances in Information Technology (RAIT). IEEE, 2018, pp. 1–7.
[10] G. R. Blakley and C. Meadows, “Security of ramp schemes,” in Workshop on the Theory and Application of Cryptographic Techniques. Springer, 1984, pp. 242–268.
[11] N. Borisov, G. Danezis, and I. Goldberg, “DP5: A private presence service,” Proceedings on Privacy Enhancing Technologies, vol. 2015, no. 2, pp. 4–24, 2015.
[12] Z. Brakerski and V. Vaikuntanathan, “Efficient fully homomorphic encryption from (standard) LWE,” SIAM Journal on Computing, vol. 43, no. 2, pp. 831–871, 2014.
[13] C. Cachin, S. Micali, and M. Stadler, “Computationally private information retrieval with polylogarithmic communication,” in International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 1999, pp. 402–414.
[14] J. Cappos, “Avoiding theoretical optimality to efficiently and privately retrieve security updates,” in International Conference on Financial Cryptography and Data Security. Springer, 2013, pp. 386–394.
[15] H.-Y. Chien, J.-K. Jan, and Y.-M. Tseng, “A practical (t, n) multi-secret sharing scheme,” IEICE transactions on fundamentals of electronics, communications and computer sciences, vol. 83, no. 12, pp. 2762–2765, 2000.
[16] B. Chor and N. Gilboa, “Computationally private information retrieval,” in Proceedings of the twenty-ninth annual ACM symposium on Theory of computing. ACM, 1997, pp. 304–313.
[17] B. Chor, O. Goldreich, E. Kushilevitz, and M. Sudan, “Private information retrieval,” in Foundations of Computer Science, 1995. Proceedings., 36th Annual Symposium on. IEEE, 1995, pp. 41–50.
[18] D. Demmler, A. Herzberg, and T. Schneider, “RAID-PIR: Practical multi-server PIR,” in Proceedings of the 6th edition of the ACM Workshop on Cloud Computing Security. ACM, 2014, pp. 45–56.
[19] D. Demmler, P. Rindal, M. Rosulek, and N. Trieu, “PIR-PSI: Scaling private contact discovery,” Proceedings on Privacy Enhancing Technologies, vol. 2018, no. 4, pp. 159–178, 2018.
[20] C. Devet, I. Goldberg, and N. Heninger, “Optimally robust private information retrieval.” in USENIX Security Symposium, 2012, pp. 269–283.
[21] P. Dingyi, S. Arto, and D. Cunsheng, “Chinese remainder theorem: applications in computing, coding, cryptography.” World Scientific, 1996.
[22] C. Dong and L. Chen, “A fast single server private information retrieval protocol with low communication cost,” in European Symposium on Research in Computer Security. Springer, 2014, pp. 380–399.
[23] F. Olumofin and I. Goldberg, “Privacy-preserving queries over relational databases,” in International Symposium on Privacy Enhancing Technologies Symposium. Springer, 2010, pp. 75–92.
[24] Y. Gertner, S. Goldwasser, and T. Malkin, “A random server model for private information retrieval (or how to achieve information theoretic PIR avoiding data replication).” IACR Cryptology ePrint Archive, vol. 1998, p. 13, 1998.
[25] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi, and K.-L. Tan, “Private queries in location based services: anonymizers are not necessary,” in Proceedings of the 2008 ACM SIGMOD international conference on Management of data. ACM, 2008, pp. 121–132.
[26] I. Goldberg, “Improving the robustness of private information retrieval,” in 2007 IEEE Symposium on Security and Privacy (SP). IEEE, 2007, pp. 131–148.
[27] T. Gupta, N. Crooks, W. Mulhern, S. T. Setty, L. Alvisi, and M. Walfish, “Scalable and private media consumption with popcorn.” in USENIX Symposium on Networked Systems Design and Implementation, 2016, pp. 91–107.
[28] S. M. Hafiz and R. Henry, “Querying for queries: Indexes of queries for efficient and expressive IT-PIR,” in Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2017, pp. 1361–1373.
[29] R. Henry, “Polynomial batch codes for efficient IT-PIR,” Proceedings on Privacy Enhancing Technologies, vol. 2016, no. 4, pp. 202–218, 2016.
[30] R. Henry, Y. Huang, and I. Goldberg, “One (block) size fits all: PIR and SPIR with variable-length records via multi-block queries.” in Network and Distributed System Security Symposium, 2013.
[31] R. Henry, F. Olumofin, and I. Goldberg, “Practical PIR for electronic commerce,” in Proceedings of the 2011 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2011.
[32] A. Kiayias, N. Leonardos, H. Lipmaa, K. Pavlyk, and Q. Tang, “Optimal rate private information retrieval from homomorphic encryption,” Proceedings on Privacy Enhancing Technologies, vol. 2015, no. 2, pp. 222–243, 2015.
[33] O. Knill, “A multivariable Chinese remainder theorem,” arXiv preprint arXiv:1206.5114, 2012.
[34] T. Koponen, M. Chawla, B.-G. Chun, A. Ermolinskiy, K. H. Kim, S. Shenker, and I. Stoica, “A data-oriented (and beyond) network architecture,” in Proceedings of the 2007 conference on Applications, technologies, architectures, and protocols for computer communications, 2007, pp. 181–192.
[35] J. Kurihara, S. Kiyomoto, K. Fukushima, and T. Tanaka, “A fast (k, l, n)-threshold ramp secret sharing scheme,” IEICE Transactions on Fundamentals of Electronics, Communications and Computer Sciences, vol. 92, no. 8, pp. 1808–1821, 2009.
[36] E. Kushilevitz and R. Ostrovsky, “Replication is not needed: Single database, computationally-private information retrieval,” in Foundations of Computer Science, 1997. Proceedings., 38th Annual Symposium on. IEEE, 1997, pp. 364–373.
[37] L. Li, M. Militzer, and A. Datta, “rPIR: ramp secret sharing-based communication-efficient private information retrieval,” International Journal of Information Security, vol. 16, no. 6, pp. 603–625, 2017.
[38] H. Lipmaa and K. Pavlyk, “A simpler rate-optimal CPIR protocol,” in International Conference on Financial Cryptography and Data Security. Springer, 2017, pp. 621–638.
[39] P. Mittal, F. Olumofin, C. Troncoso, N. Borisov, and I. Goldberg, “PIR-Tor: Scalable anonymous communication using private information retrieval.” in USENIX Security Symposium, 2011, p. 31.
[40] F. Olumofin and I. Goldberg, “Revisiting the computational practicality of private information retrieval,” in International Conference on Financial Cryptography and Data Security. Springer, 2011, pp. 158–172.
[41] P. Paillier, “Public-key cryptosystems based on composite degree residuosity classes,” in International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 1999, pp. 223–238.
[42] L.-J. Pang and Y.-M. Wang, “A new (t, n) multi-secret sharing scheme based on Shamir’s secret sharing,” Applied Mathematics and Computation, vol. 167, no. 2, pp. 840–848, 2005.
[43] “Percy++ project sourceforge,” Available at http://percy.sourceforge.net/.
[44] A. M. Piotrowska, J. Hayes, N. Gelernter, G. Danezis, and A. Herzberg, “AnNotify: A private notification service,” in Proceedings of the 2017 on Workshop on Privacy in the Electronic Society. ACM, 2017, pp. 5–15.
[45] “PIR-PSI implementation github repository,” Available at https://github.com/osu-crypto/libPSI.
[46] “RAID-PIR implementation github repository,” Available at https://github.com/encryptogroup/RAID-PIR.
[47] “SealPIR implementation github repository,” Available at https://github.com/microsoft/sealpir.
[48] A. Shamir, “How to share a secret,” Communications of the ACM, vol. 22, no. 11, pp. 612–613, 1979.
[49] V. Shoup, “Number theory library (NTL) for C++,” Available at Shoup’s homepage https://shoup.net/ntl, 2010.
[50] J. P. Stern, “A new and efficient all-or-nothing disclosure of secrets protocol,” in International Conference on the Theory and Application of Cryptology and Information Security. Springer, 1998, pp. 357–371.
[51] S. Tarkoma, M. Ain, and K. Visala, “The publish/subscribe internet routing paradigm (PSIRP): Designing the future internet architecture.” in Future Internet Assembly, 2009, pp. 102–111.
[52] A. Venkataramani, J. F. Kurose, D. Raychaudhuri, K. Nagaraja, M. Mao, and S. Banerjee, “MobilityFirst: a mobility-centric and trustworthy internet architecture,” ACM SIGCOMM Computer Communication Review, vol. 44, no. 3, pp. 74–80, 2014.
[53] H. Yamamoto, “Secret sharing system using (k, l, n) threshold scheme,” Electronics and Communications in Japan (Part I: Communications), vol. 69, no. 9, pp. 46–54, 1986.
[54] C.-C. Yang, T.-Y. Chang, and M.-S. Hwang, “A (t, n) multi-secret sharing scheme,” Applied Mathematics and Computation, vol. 151, no. 2, pp. 483–490, 2004.
[55] S. Yekhanin, “New locally decodable codes and private information retrieval schemes,” in Electronic Colloquium on Computational Complexity, vol. 127, 2006, p. 2006.
[56] L. Zhang, A. Afanasyev, J. Burke, V. Jacobson, P. Crowley, C. Papadopoulos, L. Wang, B. Zhang et al., “Named Data Networking,” ACM SIGCOMM Computer Communication Review, vol. 44, no. 3, pp. 66–73, 2014.

### Appendix A: Overview of PIR Designs

**Information-Theoretic PIR (ITPIR) Protocols**

ITPIR protocols require more than one server, with the assumption that these servers do not collude. These protocols have two main advantages: they are fast due to the absence of complex cryptographic operations, and they provide strong security guarantees.