# 【技术分享】从入门到精通：Web Service 渗透测试

## 译文声明
本文为翻译文章，原文来源于 [exploit-db.com](exploit-db.com)。具体内容及含义请以原文为准。

## 翻译信息
- **翻译者**：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
- **预估稿费**：300 RMB
- **投稿方式**：发送邮件至 linwei#360.cn 或通过网页版在线投稿

---

## 一、Web Service 的定义及其应用范围
Web Service 广泛应用于桌面主机、Web 应用以及移动设备等领域。任何软件都可以通过 HTTP 协议对外提供 Web Service 服务。在 Web Service 中，客户端向服务器发起请求，服务器按照特定格式（如 JSON 或 XML）返回数据供客户端使用。

### 关键概念
- **SOAP (Simple Object Access Protocol)**: SOAP 类型的 Web Service 使用 XML 格式与服务器通信。
- **REST (Representational State Transfer)**: REST 类型的 Web Service 可以使用 JSON 或 XML 格式进行通信，并支持 GET、POST、PUT 和 DELETE 等 HTTP 方法。
- **WSDL (Web Services Description Language)**: WSDL 是一种基于 XML 的语言，用于描述 SOAP 类型 Web Service 的基本元素，如函数、数据类型和功能等。有时也用于描述 REST 类型的服务。
- **WADL (Web Application Description Language)**: WADL 通常用于描述 REST 类型的 Web Service，类似于 WSDL。

---

## 二、撰写本文的目的
BGA 团队专注于对机构和组织开放的 Web 应用、外部 IP 地址以及 Web Service 进行安全测试。随着 Web Service 的广泛应用，其安全性问题日益凸显。本文旨在讨论 Web Service 渗透测试中常见的技术和逻辑问题。

---

## 三、如何发现 Web Service
以下是几种常用的方法来发现 Web Service：
1. 使用代理工具检查捕获的数据。
2. 通过搜索引擎探测 Web 应用程序暴露的接口。
3. 解析并爬取 swf、jar 等文件。
4. 模糊测试。

例如，可以使用 swf intruder 工具反编译 .swf 文件以挖掘 Web Service 的 WSDL 地址。此外，还可以利用 BurpSuite 设置过滤规则来筛选抓包数据中的 Web Service 地址。

另外，通过搜索引擎（如 Google 或 Bing）搜索特定关键词也可以找到 Web Service。例如，在 Google 中使用以下搜索字符串：
- `filetype:asmx inurl:(_vti_bin | api | webservice | ws )`
- `allinurl:dll?wsdl filetype:dll`

在 Bing 中则可以使用：
- `asmx?wsdl site:us`

还可以使用 Wfuzz 工具来查找 Web Service：
```bash
wfuzz -p 127.0.0.1:8080 -c --hc 404,XXX -z list,ws-webservice-webservisler -z file,../general/common.txt -z file,ws-files.txt http://webservices.example.com/FUZZ/FUZ2ZFUZ3Z
```

---

## 四、Web Service 渗透测试工具
针对 Web Service 的渗透测试，我们可以操纵具体参数以挖掘其中的技术和逻辑漏洞。常用的工具有：
- OWASP Zed Attack Proxy 的 SOAP Scanner 插件
- Firefox 的 RESTClient 插件
- SoapUI
- BurpSuite
- WS-Attacker
- Metasploit
- WSDL Analyzer

这些工具可以单独或组合使用，以获得更全面的测试结果。例如，可以将 SoapUI 作为代理工具与 BurpSuite 结合使用。

---

## 五、Web Service 渗透测试中可能发现的漏洞
### 5.1 注入漏洞
#### 5.1.1 SQL 注入漏洞
Web Service 中的 SQL 注入漏洞与传统 Web 应用中的类似。需要仔细检查所有函数参数是否存在 SQL 注入风险。例如，可以使用 RESTClient 插件检测 RESTful Web Service 中的 SQL 注入漏洞。

#### 5.1.2 XPath 注入漏洞
XPath 是用于查询 XML 数据的语言。如果 Web Service 存在 XPath 注入漏洞，攻击者可以通过构造特定的输入载荷获取敏感信息。例如，可以通过向目标系统发送简单载荷并检查响应内容来手动检测 XPath 注入漏洞。

#### 5.1.3 XML 注入漏洞
XML 注入漏洞涉及恶意用户通过注入特殊字符或标签来篡改 XML 文档结构，从而影响应用程序的行为。这种类型的漏洞同样需要在渗透测试过程中予以关注。

---

希望本文能帮助读者更好地理解和掌握 Web Service 渗透测试的相关知识和技术。