### Proxies and TCP Options

- **Proxies are common, especially on port 80, and often strip TCP options.**
- **If TCP options are removed, message boundaries may not be preserved.**
- **Some middleboxes are particularly sensitive to out-of-order packets.**

Based on this information, we evaluated whether three extensions to TCP had made appropriate choices. We found that, for the most part, they had; in fact, their solutions were heavily constrained by the behaviors of middleboxes. Among the three extensions, TCP Long Option is the most concerning. Specifically, it can easily produce behavior that appears to a middlebox as inconsistent retransmissions due to changes in the extended options. Such inconsistent retransmissions are demonstrably unsafe. If TCP Long Option were to be deployed, additional constraints would be required to avoid this problem.

### Guidelines for Middlebox Designers

1. **Do not drop packets with new options:** This makes deploying new options difficult and impacts performance. Instead, remove new options if the new functionality is not allowed.
2. **Resegmentation should only be enabled if new options are not allowed to pass:** Otherwise, TCP extensions that require the option to be strictly bound to the original segment will fail to deploy.
3. **Consistent treatment of segments with new options:** If new options are allowed on the SYN, they should also be allowed on the SYN/ACK and data segments.
4. **Allow inconsistent retransmissions when justified:** They should be permitted whenever possible.

### Current Middlebox Behavior

Our measurements indicate that currently deployed middleboxes are relatively benign. All paths conformed to our first three recommendations. For example, none of them dropped segments with new options. Resegmentation was observed only for full TCP proxies that prohibit new extensions from being negotiated or on segments without options. When new options were allowed in the initial exchange, they were also allowed in the data segments.

### Challenges in Stateful Processing

Implementing stateful processing of TCP segments in middleboxes that do not behave like full proxies is challenging. Some middleboxes gave no response when they saw holes in the sequence number space, and one reset the connection upon detecting inconsistent retransmissions. We urge middlebox designers to explicitly consider whether they want to allow new TCP extensions when implementing certain functionalities. It is better to prevent new negotiations than to allow them through and have them fail unexpectedly later. Failure to do so complicates the task of extending TCP, as we experienced in our efforts to standardize MPTCP.

### Ongoing Work

We continue to expand our testing coverage and examine more networks. Long-term continuous measurements are necessary to study the evolution of middleboxes and their effects on the Internet. Recent work has advocated using HTTP as the narrow waist of the future Internet [25]. It would be interesting to conduct measurements to test whether HTTP is allowed to evolve or has already ossified.

### Acknowledgments

We thank the volunteers from around the world who ran our test code. Without their help, we would have been unable to gather these results. Data traces and tools used in this paper are publicly available [8]. We also thank the anonymous reviewers for their feedback. Michio Honda was funded by JSPS KAKENHI (21-5729). Costin Raiciu, Adam Greenhalgh, and Mark Handley were partially supported by the CHANGE project funded by the European Commission in its Seventh Framework programme.

### References

[1] M. Allman. On the Performance of Middleboxes. ACM IMC, 35(2):307–312, 2003.
[2] A. Bakre and B. Badrinath. I-TCP: Indirect TCP for Mobile Hosts. In Proc. IEEE ICDCS, pages 136–143, 1995.
[3] H. Balakrishnan, S. Seshan, E. Amir, and R. Katz. Improving TCP/IP Performance over Wireless Networks. In Proc. ACM MOBICOM, pages 2–11, 1995.
[4] A. Bittau, D. Boneh, M. Hamburg, M. Handley, D. Mazieres, and Q. Slack. Cryptographic protection of TCP Streams (tcpcrypt). draft-bittau-tcp-crypt-00.txt, July 2010.
[5] A. Bittau, M. Hamburg, M. Handley, D. Mazieres, and D. Boneh. The case for ubiquitous transport-level encryption. In Proc. USENIX Security Symposium, Aug 2010.
[6] B. Carpenter and S. Brim. Middleboxes: Taxonomy and Issues. RFC 3234, Feb. 2002.
[7] R. Chakravorty, S. Katti, J. Crowcroft, and I. Pratt. Flow Aggregation for Enhanced TCP over Wide-Area Wireless. In Proc. IEEE INFOCOM, pages 1754–1764, 2003.
[8] Dataset for Middlebox Measurement. URL http://web.sfc.wide.ad.jp/~micchie/mbox-dataset.html.
[9] W. Eddy and A. Langley. Extending the Space Available for TCP Options. Internet Draft, Jul. 2008.
[10] R. Fonseca, G. Porter, R. Katz, S. Shenker, and I. Stoica. IP options are not an option. Tech. Rep. UCB/EECS- 2005-24, 2005.
[11] A. Ford, C. Raiciu, M. Handley, S. Barre, and J. Iyengar. Architectural guidelines for multipath TCP development. RFC 6182, Mar. 2011.
[12] A. Ford, C. Raiciu, M. Handley, and O. Bonaventure. TCP Extensions for Multipath Operation with Multiple Addresses. Internet Draft, July. 2011.
[13] B. Ford, P. Srisuresh, and D. Kegel. Peer-to-Peer Communication Across Network Address Translators. USENIX ATC, 2005.
[14] F. Gont and A. Yourtchenko. On the Implementation of the TCP Urgent Mechanism. RFC 6093, Jan. 2011.
[15] M. Handley, V. Paxson, and C. Kreibich. Network intrusion detection: evasion, traffic normalization, and end-to-end protocol semantics. In Proc. USENIX Security Symposium, 2001.
[16] S. Hätönen, A. Nyrhinen, L. Eggert, S. Strowes, P. Sarolahti, and M. Kojo. An Experimental Study of Home Gateway. ACM IMC, pages 260–266, 2010.
[17] V. Jacobson, R. Braden, and D. Borman. TCP Extensions for High Performance. RFC 1323, May. 1992.
[18] J. Border, M. Kojo, J. Griner, G. Montenegro, and Z. Shelby. Performance Enhancing Proxies Intended to Mitigate Link-Related Degradations. RFC 3135, Jun. 2001.
[19] Re: [tcpm] Extending the TCP option space - yet another approach. http://www.ietf.org/mail-archive/web/tcpm/current/msg06481.html.
[20] M. Mathis, J. Mahdavi, S. Floyd, and A. Romanow. TCP Selective Acknowledgment Options. RFC 2018, Oct. 1996.
[21] A. Medina, M. Allman, and S. Floyd. Measuring the Evolution of Transport Protocols in the Internet. ACM CCR, 35(2):37–52, 2005.
[22] P. Srisuresh and M. Holdrege. IP Network Address Translator (NAT) Terminology and Considerations. RFC 2663, Aug. 1999.
[23] J. Padhye and S. Floyd. On Inferring TCP Behavior. In ACM SIGCOMM, pages 287–298, Oct. 2001.
[24] V. Paxson. End-to-End Internet Packet Dynamics. In Proc. ACM SIGCOMM, pages 139–152, 1997.
[25] L. Popa, A. Ghodsi, and I. Stoica. HTTP as the Narrow Waist of the Future Internet. In Proc. ACM Hotnets, 2010.
[26] S. Savage. Sting: a TCP-based Network Measurement Tool. In USENIX USITS, 1999.
[27] S. Savage, N. Cardwell, D. Wetherall, and T. Anderson. TCP Congestion Control with a Misbehaving Receiver. ACM CCR, 29(5):71–78, 1999.
[28] R. Stewart, M. Ramalho, and et al. Stream Control Transmission Protocol (SCTP) Partial Reliability Extension. RFC 3758, May. 2004.
[29] D. Watson, M. Smart, G. R. Malan, and F. Jahanian. Protocol Scrubbing: Network Security Through Transparent Flow Modification. IEEE/ACM ToN, 12(2):261–273, 2004.
[30] D. Wischik, C. Raiciu, A. Greenhalgh, and M. Handley. Design, implementation and evaluation of congestion control for multipath TCP. In Proc. USENIX NSDI, 2011.

### Summary Review Documentation for "Is it Still Possible to Extend TCP?"

**Authors: M. Honda, Y. Nishida, C. Raiciu, A. Greenhalgh, M. Handley, H. Tokuda**

**Reviewer #1:**
- **Strengths:** Interesting and timely problem. Thorough and extensive measurement setup and analysis. Good tie-in to actual system/application implications.
- **Weaknesses:** A bit dry. More details/insights on the measurement setup/process would be beneficial.
- **Comments to Authors:** No serious concerns. The study is relevant and thorough, with good implications for protocol designers. The abstract could be improved to avoid philosophical stances. Section 3.3 should comment on ISP diversity. Details on volunteer recruitment and tool taxonomy would be helpful.

**Reviewer #2:**
- **Strengths:** First large-scale systematic measurement study on the impact of middleboxes on TCP options. Clearly defined objective, systematic study, and clear results.
- **Weaknesses:** The paper could go deeper. More general insights beyond the specific conclusions would be valuable.
- **Comments to Authors:** None.

**Reviewer #3:**
- **Strengths:** Careful experiments, solid writing, and good discussion on implications.
- **Weaknesses:** Too few paths (135). More paths are needed to draw robust conclusions. Some implications and tests are specific to MPTCP or TCP Crypt rather than all TCP extensions.
- **Comments to Authors:** Clarify why HTTP proxies hinder probing. Discuss the role of the remote script in connection initiations. More paths and better articulation of general insights are needed. Address the need for admin privileges for raw sockets. Provide more context on net neutrality violations and middlebox locations. Improve the classification of clients. Address the misattribution of SYN/ACK option stripping to tool statelessness. Provide concrete evidence on SACK awareness in middleboxes. Highlight the limitations of duplicating options onto all segments.

**Reviewer #4:**
- **Strengths:** Detailed catalog of behavior in-the-wild. Well-thought-out experiments with unexpected findings.
- **Weaknesses:** Writing is repetitive. Many 'problems' are due to misconfigured HTTP proxies and do not reflect general TCP flow behavior.
- **Comments to Authors:** Explain the distribution of the 142 networks. Refer to the TCP Sidecar paper (IMC 2006). The results are not surprising but valuable for systematic cataloging. The paper is repetitive and verbose. Sections 4.5+ add little new information. The issue with seven HTTP proxies is a red herring. Tables are scattered, making it difficult to follow the text.

**Reviewer #5:**
- **Strengths:** Extensive study. Controlled test traffic at both ends of the path. Useful results for those looking to extend TCP.
- **Weaknesses:** The paper is somewhat ad hoc. Questions about middlebox handling of TCP are driven by MPTCP, which may not cover the needs of other extensions.
- **Comments to Authors:** Separate the paper from MPTCP and explore other aspects of middlebox behavior. Provide a comprehensive summary of takeaways. Offer guidance to middlebox developers on unsupported options. Rename Section 5 to reflect its content as case studies. Highlight the design of extensions in light of known middlebox behavior.

### Response from the Authors

- **Clarification of Dataset:** We have provided clearer descriptions of how we collected data and identified venues.
- **Guidelines for Middlebox Designers:** Added paragraphs guiding middlebox design to support future TCP extensions.
- **HTTP Proxy Behavior:** Described the behavior of HTTP proxies on manually verified paths.
- **Document Polishing:** Polished the entire document for precision and clarity. Added results of tests for Large Receive Offload (LRO) as supplemental information.