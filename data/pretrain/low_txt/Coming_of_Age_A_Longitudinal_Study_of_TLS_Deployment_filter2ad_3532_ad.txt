### Vulnerabilities in Web Servers Supporting Export Ciphersuites

Web servers that support export ciphersuites are vulnerable to the FREAK [17] and Logjam [6] attacks (see ยง2). Our passive data analysis indicates that export ciphers are rarely negotiated in practice: only 677 connections used these ciphers in 2018. However, this does not imply that FREAK and Logjam attacks did not occur. The TLS handshakes observed at the client side do not include export ciphersuites, even during an attack, because our data collection is performed close to the clients.

A closer examination of the connections using export ciphersuites reveals two primary scenarios:
1. **University Nagios Servers**: These connections terminated at servers using anonymous export ciphersuites, likely Nagios monitoring servers, as suggested by the port numbers.
2. **Interwise Products**: Connections associated with Interwise, a company providing voice and videoconferencing services, as indicated by the server certificates. In these cases, clients offered non-export ciphersuites (e.g., RC4_128_SHA), but the server chose an export RC4 ciphersuite (EXP_RC4_40_MD5). This behavior deviates from the TLS protocol specification. Our logs show that some sessions were successfully established, as both sides sent a Change Cipher Spec message. The exact reason for this unexpected behavior remains unclear but it clearly deviates from standard TLS negotiation practices.

### Decline in Client Support for Export Ciphers

Figure 7 illustrates a significant decrease in client support for export ciphers over the past few years. In 2012, more than 10 years after the restrictions were lifted, 28.19% of connections advertised export ciphers. By 2018, this number had dropped to 1.03%. The steady decline can be attributed to increased awareness of the dangers posed by weak ciphers, as highlighted by the FREAK and Logjam attacks.

### Sweet32, DES, and 3DES

Sweet32 is a birthday attack targeting 64-bit block ciphers like DES and 3DES [18] (see ยง2). In 2018, 0.3% of connections negotiated a 3DES ciphersuite, compared to 1.4% in 2012. Generally, usage has been relatively low, with peaks reaching 5%.

Despite this, Figure 3 shows that almost all clients advertised 3DES up to the end of 2016, a few months after the disclosure of the Sweet32 attack. As of today, over 69% of clients still offer 3DES, and more than 70% of fingerprinted clients advertise 3DES (Figure 4). Table 5 indicates that major browsers continue to support 3DES. This is noteworthy given the poor performance of 3DES (approximately 10 times slower than AES-128, even without hardware support) and its age (developed in the 1970s). However, it may be justifiable to keep 3DES as a "cipher of last resort" for clients connecting to outdated servers. Active scan data from Censys shows a reduction in the popularity of the only 3DES ciphersuite offered, from 0.54% in August 2015 to 0.25% in May 2018, suggesting a long tail on the server side.

### Notable Ecosystem Findings

#### NULL Cipher Suites

NULL ciphers provide integrity but no confidentiality, transmitting data in the clear. Figure 7 shows that a relatively large number of connections and software offer at least one NULL cipher in the handshake. Most of these connections do not originate from known browsers or libraries. However, we identified two Android applications, Craftar Image Recognition and Lookout Personal, that advertise support for NULL ciphers. The latter is an identity theft protection application.

Our dataset reveals that connections where the server chooses a NULL cipher are rare, accounting for only 2.84% of all connections. In 2018, 42.3 million connections (0.42% of total connections) used a NULL cipher, primarily for GRID traffic between scientific institutions, where TLS is used only for mutual authentication.

While using NULL ciphers in GRID computing might make sense, it is concerning that 8% of fingerprints and 0.46% of connections in 2018 offered a NULL cipher. An attacker could potentially force an unencrypted connection through a downgrade attack.

#### Forward Secrecy (FS)

Forward secrecy decouples symmetric record protocol keys from the long-lived server key, achieved through DHE or ECDHE key exchanges. Figure 8 shows a significant shift away from RSA-based key establishment to ECDHE, while DHE saw limited use.

Even in 2012, more than 80% of clients supported FS ciphers, increasing to nearly 100% by 2018. However, servers continued to prefer non-FS ciphers despite client support. This is interesting because switching to FS does not require issuing new RSA keys and certificates, and ECDHE exchanges are generally faster for servers.

The Snowden revelations in June 2013 raised public awareness of forward secrecy, coinciding with a significant shift towards FS ciphers (Figure 8). While there was a small shift before, the trend accelerated after the revelations.

TLS also supports static DH and ECDH key exchanges, which are not forward secret. We observed minimal use of these: DH in 0.00% of connections (4 total in 2018), and ECDH in 0.27% (20.2K total in 2018). DH connections terminated at two now unreachable servers, while ECDH was almost exclusively used by Splunk servers on port 9997.

#### Authenticated Encryption with Associated Data (AEAD)

AEAD provides message integrity and confidentiality in a single cryptographic transform, supported in TLS 1.2 with AES-GCM. Figure 9 and Figure 10 show a sharp increase in AEAD use from late 2013, coinciding with widespread client support for TLS 1.2. Table 6 provides a timeline of protocol support for major browsers. While many clients now offer ChaCha20-Poly1305, AES-GCM with 128-bit keys dominates, with 1.7% of connections using ChaCha20-Poly1305 in March 2018 and 0.3% using AES-CCM across our dataset.

#### Elliptic Curve Cryptography (ECC)

Connections using ECC are becoming more common, with the top five curves being secp256r1 (84.4%), secp384r1 (8.6%), curve 25519 (6.7%), sect571r1 (0.2%), and secp521r1 (0.1%). Curve 25519, seen as independent of NSA influence, has gained popularity, especially since mid-2017, and is now the second most used curve, used in 22.2% of connections in February 2018.

### TLS 1.3

The standardization process for TLS 1.3 began in 2014 and reached its final stages in the IETF process. TLS 1.3 represents a significant change in the TLS ecosystem, with a distinct handshake and reduced number of ciphersuites. CBC-mode and RC4 ciphersuites from earlier TLS versions are no longer permitted.

In April 2018, 23.6% of observed connections indicated client support for TLS 1.3, a marked increase from earlier months (9.8% in March and 0.5% in February). This is likely due to TLS 1.3 being enabled in new versions of Chrome and Firefox. However, only 1.3% of connections successfully negotiated TLS 1.3 in April 2018, as supporting it often requires compiling new library versions and custom setup procedures.

The TLS 1.3 version negotiation mechanism differs from earlier versions, with the Client Hello listing 1.2 as the offered version but including a new extension with a list of all TLS versions supported.