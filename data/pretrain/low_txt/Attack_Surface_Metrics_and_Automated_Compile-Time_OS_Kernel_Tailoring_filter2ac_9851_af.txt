以下是经过优化后的参考文献列表，使其更加清晰、连贯和专业：

1. Vikram Adve. "Secure Virtual Architecture: A Safe Execution Environment for Commodity Operating Systems." *Proceedings of the 21st ACM Symposium on Operating Systems Principles (SOSP '07)*, Stevenson, WA, USA, 2007, pp. 351–366. ISBN: 978-1-59593-591-5. DOI: 10.1145/1294261.1294295.

2. Christian Dietrich, Reinhard Tartler, Wolfgang Schröder-Preikschat, and Daniel Lohmann. "A Robust Approach for Variability Extraction from the Linux Build System." *Proceedings of the 16th Software Product Line Conference (SPLC '12)*, Salvador, Brazil, September 2–7, 2012, pp. 21–30. ISBN: 978-1-4503-1094-9. DOI: 10.1145/2362536.2362544.

3. Stephanie Forrest, Steven Hofmeyr, and Anil Somayaji. "The Evolution of System-Call Monitoring." *Proceedings of the 2008 Annual Computer Security Applications Conference (ACSAC '08)*, 2008, pp. 418–430. ISBN: 978-0-7695-3447-3. DOI: 10.1109/ACSAC.2008.54.

4. Frama-C: A framework for static analysis of C programs. URL: <http://frama-c.cea.fr/> (visited on 08/01/2012).

5. Andreas Gohr. DokuWiki. URL: <http://dokuwiki.org> (visited on 06/03/2012).

6. Google Seccomp Sandbox for Linux. URL: <http://code.google.com/p/seccompsandbox/wiki/overview> (visited on 06/05/2012).

7. Toshiharu Harada, Takashi Horie, and Kazuo Tanaka. "Task Oriented Management Obviates Your Onus on Linux." *Proceedings of the Japan Linux Conference*, 2004. ISSN: 1348-7868.

8. H. Hartig, M. Hohmuth, N. Feske, C. Helmuth, A. Lackorzynski, F. Mehnert, and M. Peter. "The Nizza Secure-System Architecture." *Collaborative Computing: Networking, Applications and Worksharing, 2005 International Conference on*, 2005, 10 pp. DOI: 10.1109/COLCOM.2005.1651218.

9. M. Howard, J. Pincus, and J. Wing. "Measuring Relative Attack Surfaces." *Computer Security in the 21st Century*, 2005, pp. 109–137.

10. A. Jaquith. *Security Metrics: Replacing Fear, Uncertainty, and Doubt*. 2007.

11. Gerwin Klein, Kevin Elphinstone, Gernot Heiser, June Andronick, David Cock, Philip Derrin, Dhammika Elkaduwe, Kai Engelhardt, Rafal Kolanski, Michael Norrish, Thomas Sewell, Harvey Tuch, and Simon Winwood. "seL4: Formal Verification of an OS Kernel." *Proceedings of the 22nd ACM Symposium on Operating Systems Principles (SOSP '09)*, Big Sky, Montana, USA, 2009, pp. 207–220. ISBN: 978-1-60558-752-3. DOI: 10.1145/1629575.1629596.

12. Calvin Ko, Timothy Fraser, Lee Badger, and Douglas Kilpatrick. "Detecting and Countering System Intrusions Using Software Wrappers." *Proceedings of the 9th USENIX Security Symposium (SSYM'00)*, 2000, pp. 11–11.

13. Anil Kurmus, Alessandro Sorniotti, and Rüdiger Kapitza. "Attack Surface Reduction for Commodity OS Kernels: Trimmed Garden Plants May Attract Less Bugs." *Proceedings of the 4th European Workshop on System Security (EUROSEC '11)*, Salzburg, Austria, 2011, pp. 6:1–6:6. ISBN: 978-1-4503-0613-3. DOI: 10.1145/1972551.1972557.

14. C.T. Lee, J.M. Lin, Z.W. Hong, and W.T. Lee. "An Application-Oriented Linux Kernel Customization for Embedded Systems." *Journal of Information Science and Engineering* 20(6), 2004, pp. 1093–1108. ISSN: 1016-2364.

15. Andrew Lenharth, Vikram S. Adve, and Samuel T. King. "Recovery Domains: An Organizing Principle for Recoverable Operating Systems." *Proceedings of the 14th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '09)*, Washington, DC, USA, 2009, pp. 49–60. ISBN: 978-1-60558-406-5. DOI: 10.1145/1508244.1508251.

16. Jochen Liedtke. "On μ-Kernel Construction." *Proceedings of the 15th ACM Symposium on Operating Systems Principles (SOSP '95)*, ACM SIGOPS Operating Systems Review, 1995. DOI: 10.1145/224057.224075.

17. lxc: Linux Containers. URL: <http://lxc.sourceforge.net> (visited on 08/01/2012).

18. A. Madhavapeddy, R. Mortier, R. Sohan, T. Gazagnaire, S. Hand, T. Deegan, D. McAuley, and J. Crowcroft. "Turning Down the LAMP: Software Specialisation for the Cloud." *Proceedings of the 2nd USENIX Conference on Hot Topics in Cloud Computing (HOTCLOUD '10)*, 2010, pp. 11–11.

19. P.K. Manadhata and J.M. Wing. "An Attack Surface Metric." *IEEE Transactions on Software Engineering* 37(3), 2011, pp. 371–386. ISSN: 0098-5589. DOI: 10.1109/TSE.2010.60.

20. Yandong Mao, Haogang Chen, Dong Zhou, Xi Wang, Nickolai Zeldovich, and M. Frans Kaashoek. "Software Fault Isolation with API Integrity and Multi-Principal Modules." *Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP '11)*, Cascais, Portugal, 2011, pp. 115–128. ISBN: 978-1-4503-0977-6. DOI: 10.1145/2043556.2043568.

21. Frank Mayer, Karl MacMillan, and David Caplan. *SELinux By Example: Using Security Enhanced Linux*. 2006, p. 456. ISBN: 978-0131963696.

22. T.J. McCabe. "A Complexity Measure." *IEEE Transactions on Software Engineering* SE-2(4), 1976, pp. 308–320. ISSN: 0098-5589. DOI: 10.1109/TSE.1976.233837.

23. Jonathan M. McCune, Yanlin Li, Ning Qu, Zongwei Zhou, Anupam Datta, Virgil Gligor, and Adrian Perrig. "TrustVisor: Efficient TCB Reduction and Attestation." *Security and Privacy (SP), 2010 IEEE Symposium on*, 2010, pp. 143–158. DOI: 10.1109/SP.2010.17.

24. David Mosberger and Tai Jin. "httperf: A Tool for Measuring Web Server Performance." *SIGMETRICS Performance Evaluation Review* 26(3), 1998, pp. 31–37. ISSN: 0163-5999. DOI: 10.1145/306225.306235.

25. Derek Gordon Murray, Grzegorz Milos, and Steven Hand. "Improving Xen Security through Disaggregation." *Proceedings of the Fourth ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '08)*, 2008, pp. 151–160. ISBN: 978-1-59593-796-4. DOI: 10.1145/1346256.1346278.

26. Sarah Nadi and Richard C. Holt. "Mining Kbuild to Detect Variability Anomalies in Linux." *Proceedings of the 16th European Conference on Software Maintenance and Reengineering (CSMR '12)*, Szeged, Hungary, 2012. ISBN: 978-1-4673-0984-4. DOI: 10.1109/CSMR.2012.21.

27. ncc: The New Generation C Compiler. URL: <http://students.ceid.upatras.gr/~sxanth/ncc/> (visited on 08/01/2012).

28. Nicolas Palix, Gaël Thomas, Suman Saha, Christophe Calvès, Julia L. Lawall, and Gilles Muller. "Faults in Linux: Ten Years Later." *Proceedings of the 16th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '11)*, 2011, pp. 305–318. DOI: 10.1145/1950365.1950401.

29. phpBB: Free and Open Source Forum Software. URL: <www.phpbb.com> (visited on 06/03/2012).

30. Niels Provos. "Improving Host Security with System Call Policies." *Proceedings of the 12th USENIX Security Symposium (SSYM '03)*, Volume 12, 2003, pp. 18–18.

31. D. Rosenberg. CVE-2010-3904 Exploit. URL: <www.vsecurity.com/download/tools/linux-rds-exploit.c> (visited on 08/01/2012).

32. B. Schneier. "Attack Trees." *Dr. Dobb's Journal* 12, 1999.

33. Steven She and Thorsten Berger. *Formal Semantics of the Kconfig Language*. Technical Note. University of Waterloo, 2010.

34. Yonghee Shin and Laurie Williams. "Is Complexity Really the Enemy of Software Security?" *Proceedings of the 4th ACM Workshop on Quality of Protection (QoP '08)*, 2008, pp. 47–50. ISBN: 978-1-60558-321-1. DOI: 10.1145/1456362.1456372.

35. Julio Sincero, Reinhard Tartler, Daniel Lohmann, and Wolfgang Schröder-Preikschat. "Efficient Extraction and Analysis of Preprocessor-Based Variability." *Proceedings of the 9th International Conference on Generative Programming and Component Engineering (GPCE '10)*, Eindhoven, The Netherlands, 2010, pp. 33–42. ISBN: 978-1-4503-0154-1. DOI: 10.1145/1868294.1868300.

36. Lenin Singaravelu, Calton Pu, Hermann Härtig, and Christian Helmuth. "Reducing TCB Complexity for Security-Sensitive Applications: Three Case Studies." *Proceedings of the ACM SIGOPS/EuroSys European Conference on Computer Systems 2006 (EuroSys '06)*, Leuven, Belgium, 2006, pp. 161–174. ISBN: 1-59593-322-0. DOI: 10.1145/1217935.1217951.

37. Brad Spengler and PaX Team. grsecurity Kernel Patches. URL: <www.grsecurity.net> (visited on 08/01/2012).

38. S. Stolfo, S.M. Bellovin, and D. Evans. "Measuring Security." *IEEE Security & Privacy* 9(3), 2011, pp. 60–65. ISSN: 1540-7993. DOI: 10.1109/MSP.2011.56.

39. Michael M. Swift, Steven Martin, Henry M. Levy, and Susan J. Eggers. "Nooks: An Architecture for Reliable Device Drivers." *Proceedings of the 9th ACM SIGOPS European Workshop "Beyond the PC: New Challenges for the Operating System"*, Saint-Emilion, France, 2002, pp. 102–107. DOI: 10.1145/1133373.1133393.

40. Reinhard Tartler, Anil Kurmus, Andreas Ruprecht, Bernhard Heinloth, Valentin Rothberg, Daniela Dorneanu, Rüdiger Kapitza, Wolfgang Schröder-Preikschat, and Daniel Lohmann. "Automatic OS Kernel TCB Reduction by Leveraging Compile-Time Configurability." *Proceedings of the 8th Workshop on Hot Topics in System Dependability (HotDep '12)*, 2012.

41. Reinhard Tartler, Daniel Lohmann, Julio Sincero, and Wolfgang Schröder-Preikschat. "Feature Consistency in Compile-Time-Configurable System Software: Facing the Linux 10,000 Feature Problem." *Proceedings of the ACM SIGOPS/EuroSys European Conference on Computer Systems 2011 (EuroSys '11)*, Salzburg, Austria, 2011, pp. 47–60. ISBN: 978-1-4503-0634-8. DOI: 10.1145/1966445.1966451.

42. Chris Wright, Crispin Cowan, James Morris, Stephen Smalley, and Greg Kroah-Hartman. "Linux Security Module Framework." *Proceedings of the Ottawa Linux Symposium*, Ottawa, OT, Canada, 2002, pp. 604–617.

43. Michal Zalewski, Niels Heinen, and Sebastian Roschke. skipfish: Web Application Security Scanner. URL: <http://code.google.com/p/skipfish/> (visited on 06/03/2012).

44. Christoph Zengler and Wolfgang Küchlin. "Encoding the Linux Kernel Configuration in Propositional Logic." *Proceedings of the 19th European Conference on Artificial Intelligence (ECAI 2010) Workshop on Configuration 2010*, 2010, pp. 51–56.

### 附录

以下是命题1的证明。

**证明（AS1和AS2是攻击面度量）：**

- **AS1µ** 满足定义5，通过引理1，因为向求和中添加新函数会导致更大的攻击面测量值（因为µ具有非负值）。

- 对于**AS2µ**，非负性是代数图论的一个已知结果[6]：简单图的拉普拉斯矩阵是对称实矩阵，所有特征值都是非负的。因此，与拉普拉斯矩阵相关的二次型（\(x \mapsto x^T L(G) x\)）只能取非负值。

在证明AS2µ满足引理1中的第二个属性之前，我们明确选择此度量的理由。该度量包含一个二次项，用于计算相对于其调用者和被调用者的“复杂度”：如果一个函数调用（或被调用）一个更复杂的函数，其对攻击面的相对贡献应增加，反之亦然。例如，对于一个函数n，它被函数m和m'调用，并调用函数m''，κ(n)表示函数n的相对复杂度：
\[ \kappa(n) = \mu(n) \left( (\mu(n) - \mu(m)) + (\mu(n) - \mu(m')) + (\mu(n) - \mu(m'')) \right) \]

推广到任何函数：
\[ \kappa(n) = \mu(n) \left( \deg(n) \mu(n) - \sum_{(i,n) \in \mathcal{E}_{CAS}} \mu(i) \right) \]

因此：
\[ \kappa(N) + \sum_{i \in F} (\kappa'(i) - \kappa(i)) = \mu(N) \left( \deg(N) \mu(N) - \sum_{i \in I} \mu(i) (\mu(i) - \mu(N)) \right) + \sum_{i \in I} \mu(i)^2 + m \mu(N)^2 - 2 \mu(N) \sum_{i \in I} \mu(i) \]
\[ = \sum_{i \in I} (\mu(i) - \mu(N))^2 \geq 0 \]

这表明，添加新函数只会增加攻击面测量值AS2µ。

总结起来，将所有函数相加，对应于：
\[ \mu_{AS}^T L(\mathcal{G}_{AS}) \mu_{AS} \]

现在，我们证明向现有图中添加一个新节点只能增加这个二次项。不失一般性，假设我们从函数集F = {1, ..., N-1}开始，并将新添加的函数分配给N。该函数要么调用I ⊆ F中的m个函数，要么被它们调用，且deg(N) = m < N。我们用κ表示旧的相对复杂度，κ'表示新的相对复杂度（在添加N之后），并且deg也表示节点的旧度数，除非它是deg(N)。那么：
\[ \forall i \in F, \kappa'(i) - \kappa(i) = \mu(i) (\mu(i) - \mu(N)) \]

通过这些步骤，我们可以看到添加新节点只会增加攻击面测量值AS2µ。