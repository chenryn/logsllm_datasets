### Empirical and Parametric Degree Distributions

**Figure 3: In- and Out-Degree Distributions for Weeks 34-2009**

- **Empirical Out-Degree:** 
  - Bulk: Algebraic decay with exponent 0.744
  - Tail: Log-normal distribution with mean \(\mu = 1.66\) and standard deviation \(\sigma = 1.135\)
  
- **Empirical In-Degree:**
  - Power-law fit with exponent 2.90

### Relevant Metrics for Modeling Growth

As discussed in Section 3.3, several key metrics are essential for modeling gifting user activity graphs (UAGs). These metrics will serve as input parameters for our modeling algorithm.

- **Probability of Sending to New Targets (\(\alpha\))**: Table 1 shows that the probability of sending hearts to a new user ranges from 0.41 to 0.73 in weekly UAGs. Users are more likely to target new users during periods of lower activity.
  
- **Probability a User Remains Inactive (\(\beta\))**: Our measurements (Table 1) indicate that the probability of a randomly selected user remaining inactive throughout a week is between 0.85 and 0.91 for iHeart, suggesting a relatively stable inactivity rate over time.
  
- **Active User Duration (\(d_x\))**: Our data show that between 70% to 75% of active users in a given week are only active for one day. This percentage decays approximately as a power law with the number of days active (e.g., only 1.5% to 2% of users are active for all seven days). Table 1 provides the weekly power-law exponent (\(\gamma_d\)) for this distribution.
  
- **Daily ARs Sent (\(m_x\))**: The distribution of ARs generated per day follows a power law for iHeart. Our algorithm uses the exponent \(\gamma_m\) of this power-law distribution, with values shown in Table 1.

Additionally, Table 1 includes measurements for the external constraint on the seeding users (\(N_0\)) for a given week. We observe the lowest proportion of seeding users at peak activity and the highest proportion during the lowest user activity. Week 45-2009 (Thanksgiving) is an exception, with high user activity for four days followed by very low activity for three days (Figure 1(b)) due to the Thanksgiving weekend.

### Fitting Graph Models to iHeart UAGs

Existing research on growth processes in online social networks (OSNs) has provided viable candidate models for friendship graphs [19]. We tested some of the more promising algorithms, including the Nearest Neighbor, Watts-Strogatz, Barabasi-Albert, and Forest Fire models. These algorithms primarily rely on preferential attachment and do not distinguish between different types of nodes, resulting in out-degree structures that are not representative of our UAGs. However, they provide decent approximations of in-degrees for our UAGs, as evidenced by the KS statistic values measured using synthetic graphs from these models against all weekly degree distributions from iHeart. Example KS statistic values for the Nearest Neighbor and Forest Fire algorithms against the week 34-2009 UAG from iHeart are shown in Table 7.5. Figure 4 compares the degree structures that resulted in the lowest average KS values from these models against those from the week 34-2009 UAG for iHeart.

### Modeling Gifting Applications

The algorithm described in this section produces synthetic graphs with degree structures similar to UAGs for gifting applications while preserving low clustering of nodes. We will show how our algorithm successfully captures the differences in in- and out-degree distributions, which were not reproduced by previous models. We also provide steady-state equations (Section 5.4) for the synthetic distributions to gauge user activity levels on gifting applications without running time-consuming simulations.

#### 5.1 Our UAG Growth Model

We have shown that our UAGs exhibit similar structure across different weekly periods in terms of low clustering of nodes and the class of distribution functions that approximate the real degree distributions. However, the parameter values for these distributions that best fit the data vary significantly from week to week. This variability must be captured by our algorithmic model. The basics of our growth model are as follows:

- **Discrete Timesteps**: Our UAG growth model operates at discrete timesteps \(t\), where each timestep represents a day of user activity. Let \(G_t\) denote the graph at the beginning of timestep \(t\). The initial graph \(G_0\) is a set of \(N_0\) isolated nodes, corresponding to the initial seeding users.
  
- **Seeding Users**: Seeding users send ARs in each turn they are active. They send ARs to new users (i.e., 'recruit' them) with probability \(\alpha\), and to existing users chosen preferentially by in-degrees otherwise.
  
- **User Recruitment and Activity**: When a user is recruited, with probability \(\beta\) she will choose to remain inactive throughout the process, and otherwise will be active at the beginning of the next timestep. Each user is assigned a fixed duration and daily output of ARs. The duration \(d_x\) of user \(x\) corresponds to the number of timesteps \(x\) is active, and the per-timestep output \(m_x\) of \(x\) corresponds to the number of ARs sent by \(x\) daily.
  
- **Synthetic Graph Generation**: After 7 timesteps, the resulting synthetic graph \(G_7\) is produced. The structure of \(G_7\) should be comparable to our UAGs.

Algorithm 1 shows the pseudocode for our UAG growth model. This algorithm uses four input parameters (\(\alpha\), \(\beta\), \(\gamma_d\), and \(\gamma_m\)), as well as two external constraints \(M\) and \(N_0\). In the pseudocode, \(IPL(\gamma, t)\) and \(RPL(\gamma, t)\) are integer- and real-valued power-law distributed random variables (respectively) of exponent \(\gamma\) with a cutoff at \(t\). Moreover, the variable \(act_x\) is the number of timesteps a user has previously been active, and \(diff_x\) is the difference between \(m_x \times d_x\) and the ultimate out-degree \(\sum m_y \times d_y\) of \(x\).

#### 5.2 Synthetic vs. Empirical UAGs

We implemented Algorithm 1 in Python and tested it on all 10 weeks of iHeart, iSmile, and Hugged user activity. For brevity, we present results for simulations using UAGs from weeks 34-2009, 50-2009, and 26-2010 for iHeart, and week 34-2009 for iSmile and Hugged.

We evaluate our simulated graphs’ degree structures using two goodness-of-fit measures: the KS statistic and an additional quantity called \(L\), which is analogous to chi-square on a log scale. Given two positive, integer-valued random variables \(X\) and \(Y\), we define:

\[ L(X, Y) = \sum_{k=1}^{\infty} \left[ \log \Pr(X = k) - \log \Pr(Y = k) \right]^2 \log \left( \frac{k+1}{k} \right) \]

Note that \(\log \left( \frac{k+1}{k} \right) = \log(k+1) - \log(k)\). Hence, \(L\) can be viewed as a discrete equivalent of the \(L^2\) measure on a log-log scale.

Table 8 shows the KS and \(L\) values for our simulations using the 4-parameter model (Algorithm 1), and Figure 5 shows the plots for the same. The KS and \(L\) values suggest that the empirical degree structure is reasonably well-modeled in the 'typical' week represented by week 34-2009. For comparison, note the significantly larger \(L_{out}\) values in Table 7 for out-degree distributions generated by the Forest Fire and Nearest Neighbor models for week 34-2009 on iHeart. The larger \(L_{out}\) values demonstrate that Algorithm 1 performs significantly better than either Forest Fire or Nearest Neighbor in modeling out-degree distributions for our applications. Furthermore, \(L_{in}\) values in Tables 8 and 7 show that Algorithm 1 significantly outperforms both Forest Fire and Nearest Neighbor algorithms for in-degrees as well. Given the simplicity of the attachment rule used in our model, the fact that the in-degree distributions are captured so well is surprising. This suggests that the dynamics of the real system may be similar to the 'Preferential Attachment with recruitment' dynamics in our model.

However, our simulations using the 4-parameter model result in synthetic graphs with comparatively large \(L\) values for the peak (week 50-2009) and post-peak (week 26-2010) periods for iHeart. This is due to our inability to measure the degree of preference a user employs when sending ARs. To address this, we introduce two additional parameters and refer to this as the 6-parameter version of the model shown by Algorithm 1. The 6-parameter model is identical to the 4-parameter version in all aspects except the choice of the Active User Duration \(d_x\) and Daily ARs Sent \(m_x\). In the 6-parameter model, these are approximated by log-normal distributions rather than power-law distributions. Log-normal distributions require two parameters, whereas power-law distributions only required one, increasing the total number of parameters to six.

Table 8 shows the \(L\) and KS values for our UAGs using the 6-parameter model. Our 6-parameter model simulations show that in some cases, the error measurements actually grow larger compared to our 4-parameter model, but only slightly so. On the other hand, some of the error in the measurements can be dramatically reduced (out-degrees for iHeart). For example, in week 50-2009, \(L_{out}\) drops from 18.08 to 0.62 when the 6-parameter model is used, and in week 26-2010, it drops from 7.75 to 1.44. An example resulting distribution using the 6-parameter model is shown in Figure 6.

Furthermore, as mentioned in Section 4.1, our UAGs exhibit very low clustering of nodes. Our UAG growth model’s synthetic graphs similarly exhibit little or no clustering of nodes with clustering coefficients less than 0.0005. Our synthetic graphs also consist of connected components of size distributions similar to our UAGs, with more than 90% of users belonging to one connected component and the second largest component being of negligible size. We provide proof of the disconnectedness of our model’s synthetic UAGs in Section 5.4.

#### 5.3 Observations for Our Growth Model

By demonstrating that our algorithm works well on three gifting applications, we have shown that it is possible to model UAGs for a class of social applications. By decoupling in- and out-degrees and recognizing different types of users, our model provides a very close approximation of degree structures that result from the use of the AR growth mechanism. As in our empirical UAGs, our model produces disconnected graphs such that most nodes belong to one connected component. Our synthetic graphs also exhibit little to no clustering of nodes.