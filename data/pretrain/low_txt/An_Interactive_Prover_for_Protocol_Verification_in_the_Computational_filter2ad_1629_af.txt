### C. Implementation Details
We have derived tactics from the previously presented rules, adapting them to work efficiently within this framework.

### VII. Case Studies
We have implemented the meta-logic in an interactive protocol prover called SQUIRREL. This tool, consisting of approximately 10,000 lines of OCaml code, is available at [50].

SQUIRREL accepts models written in a variant of the applied pi-calculus, as shown in Listing 1, and allows for the verification of reachability and equivalence properties of the specified protocols. The proofs are interactive, utilizing tactics. Automated tactics are provided for reasoning about equalities and disequalities over terms (e.g., the equations of XOR). Additionally, some basic proof search and automated reasoning tactics are implicitly applied at each step to simplify goals and close absurd ones. A key strength of the tool is its modularity: extending it with new cryptographic primitives does not affect the core system. It only requires adding new tactics and proving their soundness within the meta-logic.

We have used SQUIRREL to perform several case studies, verifying various properties (authentication, strong secrecy, anonymity, unlinkability) under different cryptographic assumptions (PRF, EUF-CMA, XOR, CCA1, ENC-KP, INT-CTXT, DDH). These case studies are summarized in Table I.

For each protocol, we provide the number of lines of code (LoC), the cryptographic assumptions used, and the security properties studied. In all cases, SQUIRREL completes the verification in less than one minute. Notably, most proofs follow the intuition of the pen-and-paper proofs, while some low-level reasoning is successfully abstracted or automated.

#### A. RFID-Based Protocols
To prove observational equivalence between protocols that are compatible and differ only in a few positions, we use the common technique of describing two protocols as a single bi-protocol using a special binary function symbol `diff(·,·)`. Similarly, meta-equivalences are presented as bi-frames, i.e., as a single sequence of meta-terms and formulas featuring the `diff(·,·)` symbol.

These case studies (Basic Hash [23], Hash Lock [40], LAK with pairs instead of XOR as in [39], MW [47], and Feldhofer [38]) involve authentication protocols between identity-specific tags and a generic reader (with access to a shared database of authorized tags' credentials). We used our tool to establish proofs of unlinkability based on the notion defined in [4], [7]: an outside observer must not be able to distinguish between a system where each tag can play many sessions and a system where each tag can play at most one session.

| Protocol | LoC | Assumptions | Security Properties |
|----------|-----|-------------|---------------------|
| Basic Hash [23] | 100 | PRF, EUF-CMA | Authentication & Unlinkability |
| Hash Lock [40] | 130 | PRF, EUF-CMA | Authentication & Unlinkability |
| LAK (with pairs) [39] | 250 | PRF, EUF-CMA | Authentication & Unlinkability |
| MW [47] | 300 | PRF, EUF-CMA, XOR | Authentication & Unlinkability |
| Feldhofer [38] | 270 | ENC-KP, INT-CTXT | Authentication & Unlinkability |
| Private Authentication [11] | 100 | CCA1, ENC-KP | Anonymity |
| Signed DDH [1, ISO 9798-3] | 240 | EUF-CMA, DDH | Authentication & Strong Secrecy |

Additional case studies, using the composition framework from [27]:

| Protocol | LoC | Assumptions | Security Properties |
|----------|-----|-------------|---------------------|
| Signed DDH [1, ISO 9798-3] | 200 | EUF-CMA, DDH | Authentication & Strong Secrecy |
| SSH (with forwarding agent) [51] | 700 | EUF-CMA, INT-CTXT, DDH | Authentication & Strong Secrecy |

These proofs follow a similar global pattern: we use the induction tactic to reason about an arbitrary number of sessions, and then use the equivalent tactic to transform the conditional of an action into an equivalent formula that can be removed with FA-DUP. The systematic use of authentication to establish unlinkability is reminiscent of the well-authentication condition in [7], [39].

In our framework, equivalence requires synchronized executions of the two protocols, but their databases need not have similar structures, as would be the case with the diff-equivalence notions in PROVERIF or TAMARIN. This has allowed us to obtain proofs of unlinkability that are out of the scope of these tools, as discussed in [7] regarding Basic Hash.

For the LAK, MW, and Feldhofer protocols, the last conditional of the protocol is not modeled. We partially overcame this limitation for the MW protocol by enriching the frame with infinite sequences of messages that over-approximate what the attacker may learn during protocol executions, which eases the proof process. However, we cannot yet prove the indistinguishability of these sequences in the tool due to the lack of a notion of induction over sequences of messages. This is an area for future work.

#### B. Private Authentication
We study the Private Authentication protocol as presented in [11], where the authors provide a manual proof of anonymity in the computational model for one session of the protocol. A protocol preserves anonymity if an attacker cannot determine whether a session is initiated by one identity or another. Using our tool, we established a mechanized proof of anonymity for this protocol for an arbitrary number of sessions.

#### C. DDH-Based Protocols
We first study a proof of strong secrecy of the shared key for the signed DDH protocol [1, ISO 9798-3]. Similar to RFID-based protocols, we rely on the proof of authentication properties in the reachability prover to perform our proof of strong secrecy in the indistinguishability prover.

We also present two additional case studies for the signed DDH protocol [1, ISO 9798-3] and the SSH protocol [51], where proofs are performed using the composition framework developed for the CCSA model in [27]. The authors outline how to decompose a proof for these protocols into single-session proofs, which involves slightly modifying the hash function by giving more capabilities to the attacker using oracles. With our tool, we were able to mechanize these proofs. Unlike the other case studies, these two hold for an unbounded number of sessions that may depend on the security parameter, as given by the result in [27], and not just for an arbitrary number of sessions.

### VIII. Conclusion
We have designed a meta-logic on top of the CCSA logic of [11] and proof systems for establishing reachability and equivalence properties in that language. We have shown that it provides a simple, high-level methodology for conducting computer-assisted proofs of cryptographic protocols, offering asymptotic security guarantees in the computational model. This is supported by the implementation of the interactive prover SQUIRREL and its application in various case studies.

As future work, we plan to enhance and optimize proof automation, possibly by borrowing from SMT techniques and tools. Our proof systems could also be enriched to benefit from equivalence reasoning in reachability goals, such as allowing the PRF equivalence rule to replace hashes with fresh names in reachability goals. We also aim to extend our framework to handle protocols with states. While handling protocols with states seems challenging in CRYPTOVERIF, our approach based on reasoning over execution traces of protocols appears more suitable for this extension. A first application would be, for example, the mechanization of the modified AKA protocol in [41]. On a more theoretical level, we plan to address the formal semantics of our applied pi-calculus protocols and the study of their translations to our internal representation as sets of actions. Finally, we aim to provide truly unbounded security guarantees, rather than asymptotic security guarantees for each trace (with an asymptotic bound that may depend on the trace).

### Acknowledgment
We would like to thank Bruno Blanchet and Benjamin Grégoire for their interactions and helpful guidance.

### References
[1] ISO/IEC 9798-3:2019, IT Security techniques – Entity authentication – Part 3: Mechanisms using digital signature techniques.
[2] Martín Abadi, Bruno Blanchet, and Cédric Fournet. The applied pi calculus: Mobile values, new names, and secure communication. J. ACM, 65(1):1:1–1:41, 2018.
[3] Martín Abadi and Phillip Rogaway. Reconciling two views of cryptography (the computational soundness of formal encryption). J. Cryptology, 15(2):103–127, 2002.
[4] Myrto Arapinis, Tom Chothia, Eike Ritter, and Mark Ryan. Analysing unlinkability and anonymity using the applied pi calculus. In CSF, pages 107–121. IEEE Computer Society, 2010.
[5] Alessandro Armando, David Basin, Yohan Boichut, Yannick Chevalier, Luca Compagna, Jorge Cuéllar, P Hankes Drielsma, Pierre-Cyrille Héam, Olga Kouchnarenko, Jacopo Mantovani, et al. The AVISPA tool for the automated validation of internet security protocols and applications. In CAV, pages 281–285. Springer, 2005.
[6] David Baelde, Stéphanie Delaune, Charlie Jacomme, Adrien Koutsos, and Solène Moreau. An interactive prover for protocol verification in the computational model. https://hal.archives-ouvertes.fr/hal-03172119. Technical report.
[7] David Baelde, Stéphanie Delaune, and Solène Moreau. A method for proving unlinkability of stateful protocols. In CSF, pages 169–183. IEEE, 2020.
[8] Gergei Bana, Pedro Adão, and Hideki Sakurada. Computationally complete symbolic attacker in action. In FSTTCS, volume 18 of LIPIcs, pages 546–560. Schloss Dagstuhl - Leibniz-Zentrum für Informatik, 2012.
[9] Gergei Bana, Rohit Chadha, and Ajay Kumar Eeralla. Formal analysis of vote privacy using computationally complete symbolic attacker. In ESORICS (2), volume 11099 of LNCS, pages 350–372. Springer, 2018.
[10] Gergei Bana and Hubert Comon-Lundh. Towards unconditional soundness: Computationally complete symbolic attacker. In POST, volume 7215 of Lecture Notes in Computer Science, pages 189–208. Springer, 2012.
[11] Gergei Bana and Hubert Comon-Lundh. A computationally complete symbolic attacker for equivalence properties. In CCS, pages 609–620. ACM, 2014.
[12] Manuel Barbosa, Gilles Barthe, Karthikeyan Bhargavan, Bruno Blanchet, Cas Cremers, Kevin Liao, and Bryan Parno. SoK: Computer-aided cryptography. IACR Cryptol. ePrint Arch., 2019:1393, 2019.
[13] Gilles Barthe, Benjamin Grégoire, Sylvain Heraud, and Santiago Zanella Béguelin. Computer-aided security proofs for the working cryptographer. In CRYPTO, volume 6841 of Lecture Notes in Computer Science, pages 71–90. Springer, 2011.
[14] David Basin, Jannik Dreier, Lucca Hirschi, Saša Radomirovic, Ralf Sasse, and Vincent Stettler. A formal analysis of 5G authentication. In CCS, pages 1383–1396, 2018.
[15] David A. Basin, Cas J. F. Cremers, and Simon Meier. Provably repairing the ISO/IEC 9798 standard for entity authentication. In POST, volume 7215 of Lecture Notes in Computer Science, pages 129–148. Springer, 2012.
[16] David A. Basin, Jannik Dreier, and Ralf Sasse. Automated symbolic proofs of observational equivalence. In CCS, pages 1144–1155. ACM, 2015.
[17] David A. Basin, Andreas Lochbihler, and S. Reza Seﬁdgar. CryptHOL: Game-based proofs in higher-order logic. J. Cryptology, 33(2):494–566, 2020.
[18] Karthikeyan Bhargavan, Bruno Blanchet, and Nadim Kobeissi. Verified models and reference implementations for the TLS 1.3 standard candidate. In 2017 IEEE Symposium on Security and Privacy, pages 483–502. IEEE, 2017.
[19] Karthikeyan Bhargavan, Barry Bond, Antoine Delignat-Lavaud, Cédric Fournet, Chris Hawblitzel, Catalin Hritcu, Samin Ishtiaq, Markulf Kohlweiss, Rustan Leino, Jay R. Lorch, Kenji Maillard, Jianyang Pan, Bryan Parno, Jonathan Protzenko, Tahina Ramananandro, Ashay Rane, Aseem Rastogi, Nikhil Swamy, Laure Thompson, Peng Wang, Santiago Zanella Béguelin, and Jean Karim Zinzindohoue. Everest: Towards a verified, drop-in replacement of HTTPS. In SNAPL, volume 71 of LIPIcs, pages 1:1–1:12. Schloss Dagstuhl - Leibniz-Zentrum für Informatik, 2017.
[20] Bruno Blanchet. An efficient cryptographic protocol verifier based on Prolog rules. In CSFW, pages 82–96. IEEE Computer Society, 2001.
[21] Bruno Blanchet. A computationally sound mechanized prover for security protocols. In IEEE Symposium on Security and Privacy, pages 140–154. IEEE Computer Society, 2006.
[22] Bruno Blanchet, Martín Abadi, and Cédric Fournet. Automated verification of selected equivalences for security protocols. In LICS, pages 331–340. IEEE Computer Society, 2005.
[23] Mayla Brusò, Konstantinos Chatzikokolakis, and Jerry den Hartog. Formal verification of privacy for RFID systems. In CSF, pages 75–88. IEEE Computer Society, 2010.
[24] Ran Canetti, Alley Stoughton, and Mayank Varia. EasyUC: Using EasyCrypt to mechanize proofs of universally composable security. In CSF, pages 167–183. IEEE, 2019.
[25] Rohit Chadha, Vincent Cheval, Ştefan Ciobâcă, and Steve Kremer. Automated verification of equivalence properties of cryptographic protocols. TOCL, 17(4):1–32, 2016.
[26] Vincent Cheval, Steve Kremer, and Itsaka Rakotonirina. The DEEPSEC prover. In CAV, volume 10982 of Lecture Notes in Computer Science, pages 28–36. Springer, 2018.
[27] Hubert Comon, Charlie Jacomme, and Guillaume Scerri. Oracle simulation: a technique for protocol composition with long-term shared secrets. In CCS, pages 1427–1444, 2020.
[28] Hubert Comon and Adrien Koutsos. Formal computational unlinkability proofs of RFID protocols. In CSF, pages 100–114. IEEE Computer Society, 2017.
[29] Hubert Comon-Lundh, Véronique Cortier, and Guillaume Scerri. Tractable inference systems: An extension with a deducibility predicate. In CADE, volume 7898 of Lecture Notes in Computer Science, pages 91–108. Springer, 2013.
[30] Hubert Comon-Lundh and Stéphanie Delaune. The finite variant property: How to get rid of some algebraic properties. In RTA, volume 3467 of Lecture Notes in Computer Science, pages 294–307. Springer, 2005.
[31] Véronique Cortier, Constantin Catalin Dragan, François Dupressoir, Benedikt Schmidt, Pierre-Yves Strub, and Bogdan Warinschi. Machine-checked proofs of privacy for electronic voting protocols. In IEEE Symposium on Security and Privacy, pages 993–1008. IEEE Computer Society, 2017.
[32] Véronique Cortier, Niklas Grimm, Joseph Lallemand, and Matteo Maffei. Equivalence properties by typing in cryptographic branching protocols. In International Conference on Principles of Security and Trust, pages 160–187. Springer, Cham, 2018.
[33] Véronique Cortier, Steve Kremer, and Bogdan Warinschi. A survey of symbolic methods in computational analysis of cryptographic systems. J. Autom. Reasoning, 46(3-4):225–259, 2011.
[34] Véronique Cortier and Bogdan Warinschi. A composable computational soundness notion. In CCS, pages 63–74. ACM, 2011.
[35] Cas Cremers, Marko Horvat, Jonathan Hoyland, Sam Scott, and Thyla van der Merwe. A comprehensive symbolic analysis of TLS 1.3. In CCS, pages 1773–1788, 2017.
[36] Danny Dolev and Andrew Chi-Chih Yao. On the security of public key protocols (extended abstract). In FOCS, pages 350–357. IEEE Computer Society, 1981.
[37] Santiago Escobar, Catherine Meadows, and José Meseguer. Maude-NPA: Cryptographic protocol analysis modulo equational properties.