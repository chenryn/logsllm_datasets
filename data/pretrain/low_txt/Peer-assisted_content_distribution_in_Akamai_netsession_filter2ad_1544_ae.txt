### Figure 11: Traffic Balance on AS-to-AS Links

In this figure, we observe the traffic balance between Autonomous Systems (ASes) that have a direct connection, though not necessarily a peering relationship. The trend is similar to that in Figure 10, where heavy contributors tend to have a roughly even traffic balance.

### Interpretation of Results

It is important to note that our findings should not be interpreted as indicating that NetSession’s traffic has no impact on Internet Service Providers (ISPs). Our data only describes the traffic and does not account for the costs that ISPs may or may not charge each other for carrying that traffic. These costs depend on various factors, including the business relationships between ISPs. However, it is likely that a significant traffic imbalance would eventually affect the business relationship and/or the cost. Our results show that this particular problem does not seem to be occurring.

### 6.2 Impact of User-Managed Machines

#### Mobility-Related Churn

Unlike servers in an infrastructure-based Content Delivery Network (CDN), NetSession peers can move. For example, users can install NetSession on a laptop and use it at work in the morning and at home in the evening. Overall, we observed connections from 133.7 million different IP addresses across 31,190 different ASes. Specifically, 80.6% of the GUIDs (Globally Unique Identifiers) connected from a single AS, 13.4% from two different ASes, and 6% from more than two ASes. The Directory Nodes (DNs) must update their directories to track this mobility, but the corresponding workload is moderate: on average, the control plane receives 20,922 new connections per minute.

To get a rough sense of the physical mobility, we computed the two geolocations farthest apart for each GUID. We found that 77% of the GUIDs remained within 10 km, and 23% were more than 10 km apart. It is worth noting that the actual mobility may be somewhat lower, as users might occasionally open a Virtual Private Network (VPN) connection to their corporate headquarters, which could be far away.

#### Security Concerns

In a centrally managed infrastructure, protection is primarily against external attackers. However, a peer-assisted CDN also needs protection against attacks from within, as each user physically controls their machine and can modify the software at will. Previous research has shown that this can lead to unique vulnerabilities, such as accounting attacks, where compromised peers misreport the amount of service they have provided to distort the reports the CDN provides to its customers. As mentioned in Section 3.5, NetSession relies on data from trusted edge servers to detect and filter out incorrect reports. Measures are in place to make modification of the client-side executable difficult, but we have seen users experiment with manually modifying data in configuration files.

#### GUID Cloning and Re-imaging

Even in the absence of attacks, the designer of a hybrid CDN must consider more failure modes than in an infrastructure-based system. During our analysis of an earlier set of traces, we noticed that certain GUIDs showed unusual behavior, logging in very frequently from IP addresses in different countries and even on different continents. Initially, we suspected international travel, but some users appeared to be traveling at implausible speeds. We eventually suspected that some installations were sharing the same GUID.

To investigate further, we modified the NetSession software to support a random 160-bit "secondary GUID," chosen freshly every time the software starts (unlike the primary GUID, which is chosen when the software is first installed), and to report the last five secondary GUIDs to the control plane upon login. A normal NetSession installation would report overlapping sequences of secondary GUIDs, such as 5 4 3 2 1, 6 5 4 3 2, and so on. We then collected and analyzed the secondary GUIDs on a sample of 8 control plane servers, grouped them by primary GUID, and constructed graphs where vertices represent secondary GUIDs and edges connect GUIDs that follow each other in a login entry. In total, we obtained 17.7 million connected graphs with at least three vertices.

99.4% of the graphs were linear chains (as expected for a normal NetSession installation), but the remaining 0.6% were trees, indicating that the corresponding installation had at some point been rolled back to an earlier state! Figure 12 shows the most common nonlinear patterns: one long branch with a single, one-vertex short branch (46.2%), two long branches (6.2%), and several short or medium branches (23.5%). We suspect that the first pattern corresponds to a failed software update, the second pattern to a restored backup, and the third pattern to re-imaging (e.g., in an Internet café that restores its machines every night) or cloning (e.g., in a large IT department that initializes new workstations from a master image). We also observed several highly irregular patterns for which we currently have no explanation.

This example illustrates that hybrid systems must deal with user actions that would not normally occur in a centrally managed infrastructure. This specific example was of practical importance, as the number of distinct GUIDs plays a role in NetSession’s internal accounting.

### 7. Related Work

#### CDN Measurement Studies

There are several prior studies of content-distribution systems, including both peer-to-peer [13, 26] and infrastructure [32] systems. The systems studied include P2P streaming systems [15, 28, 34] and one commercial hybrid CDN, LiveSky [36]. LiveSky delivers live-streaming video, so its architecture is necessarily different from NetSession’s. To the best of our knowledge, this paper is the first measurement study of a commercial hybrid CDN for static content.

#### Hybrid CDNs

The idea of combining a CDN infrastructure with peer-to-peer elements has been explored in both research [12, 22] and industry [33, 34, 36]; see [20] for a survey. The Antfarm system [22], in particular, has some similarities to NetSession. Antfarm combines peer-to-peer swarms with a coordinator, which carefully directs bandwidth provided by the infrastructure servers to maximize the aggregate bandwidth of the swarms. NetSession’s control plane plays a similar role but, unlike Antfarm’s coordinator, it does not implement an explicit incentive mechanism. Work on the potential benefits, specifically [16, 17], has already been discussed in Section 5; likewise, work on the inherent risks, such as [1], has been discussed in Section 6.

#### Impact on ISPs

Several papers [7, 17, 24, 35] have noted a potential conflict of interest between hybrid CDNs and ISPs because the former potentially increase the upstream traffic, and thus the cost, of the latter. The work in [7] demonstrated that a peer selection algorithm using CDN-based DNS "hints" can significantly reduce cross-ISP traffic. However, the general conclusion is that the CDN can avoid a large impact on ISPs by using a simple locality-aware peer selection strategy.

#### Incentives

Swarming protocols like BitTorrent [8] typically include explicit incentives because they assume that users will not contribute bandwidth unless they can benefit from it. There is a large body of work on understanding specific incentive systems, e.g., [18, 23], and on building systems that can deliver them more robustly, e.g., [19]; Dandelion [30] even introduces an infrastructure component similar to NetSession’s control plane, although its main purpose is to implement a fair-exchange mechanism. The existence and efficient operation of NetSession do not contradict the basic assumptions on which these systems are based, but it does suggest that the users’ actual motivations are more complex, and avoiding bandwidth contributions may not be among their primary concerns.

### 8. Conclusion

In this paper, we have examined the risks and benefits of "hybrid" CDN architectures, which rely on a managed infrastructure but also include a peer-to-peer element to leverage resources contributed by clients. To determine how well a practical system can deliver the benefits (and avoid the risks), we presented a measurement study of NetSession, a large commercial CDN that uses this architecture.

Our results show that NetSession is able to deliver the key benefits of a hybrid architecture: it can offload a high fraction (70–80%) of the traffic to peers, while also offering good performance and high reliability. NetSession appears to avoid a key risk—tilting the traffic balance of ISPs—but it does face other challenges inherent in its hybrid architecture, such as security and manageability. Overall, our findings suggest that a hybrid architecture is an attractive design point for a CDN. The infrastructure and the peers can deliver many of their key benefits and complement one another to avoid many of their key weaknesses. NetSession’s performance demonstrates what is possible in this space.

### Acknowledgments

We thank our shepherd Craig Partridge and the anonymous reviewers for their comments and suggestions. This work was supported in part by NSF grants CNS-1040672, CNS-1054229, and CNS-1065130, by AFRL grants FA8750-11-1-0262 and FA8750-10-2-0193, and by the Max Planck Society.

### References

[1] P. Aditya, M. Zhao, Y. Lin, A. Haeberlen, P. Druschel, B. Maggs, and B. Wishon. Reliable client accounting for hybrid content-distribution networks. In Proc. NSDI, Apr. 2012.
[2] Akamai. EdgeScape brochure. http://www.akamai.com/dl/brochures/edgescape.pdf.
[3] Akamai Technologies. NetSession design principles. http://www.akamai.com/html/solutions/client_design_principles.html.
[4] R. Bhagwan, S. Savage, and G. M. Voelker. Understanding availability. In Proc. IPTPS, 2003.
[5] A. R. Bharambe, C. Herley, and V. N. Padmanabhan. Analyzing and improving a BitTorrent network’s performance mechanisms. In Proc. INFOCOM, 2006.
[6] CAIDA. Archipelago measurement infrastructure. http://www.caida.org/projects/ark/.
[7] D. R. Choﬀnes and F. E. Bustamante. Taming the Torrent. In Proc. SIGCOMM, 2008.
[8] B. Cohen. Incentives build robustness in BitTorrent. In Proc. P2PEcon, June 2003.
[9] S. A. Crosby and D. S. Wallach. An analysis of BitTorrent’s two Kademlia-based DHTs. Technical Report TR-07-04, Department of Computer Science, Rice University, May 2007.
[10] J. Dilley, B. Maggs, J. Parikh, H. Prokop, R. Sitaraman, and B. Weihl. Globally distributed content delivery. IEEE Internet Computing, 6(5):50–58, Sept. 2002.
[11] M. Dischinger, A. Haeberlen, K. P. Gummadi, and S. Saroiu. Characterizing residential broadband networks. In Proc. IMC, Oct. 2007.
[12] M. J. Freedman. Experiences with CoralCDN: A five-year operational view. In Proc. NSDI, 2010.
[13] K. P. Gummadi, R. Dunn, S. Saroiu, S. Gribble, H. Levy, and J. Zahorjan. Measurement, modeling and analysis of a peer-to-peer file-sharing workload. In Proc. SOSP, Oct. 2003.
[14] L. Guo, S. Chen, Z. Xiao, E. Tan, X. Ding, and X. Zhang. Measurements, analysis, and modeling of BitTorrent-like systems. In Proc. IMC, 2005.
[15] X. Hei, C. Liang, J. Liang, Y. Liu, and K. Ross. A measurement study of a large-scale P2P IPTV system. Multimedia, IEEE Trans., 9(8):1672–1687, Dec. 2007.
[16] C. Huang, A. Wang, J. Li, and K. W. Ross. Understanding hybrid CDN-P2P: Why Limelight needs its own Red Swoosh. In NOSSDAV, 2008.
[17] T. Karagiannis, P. Rodriguez, and K. Papagiannaki. Should Internet service providers fear peer-assisted content distribution? In Proc. IMC, 2005.
[18] D. Levin, K. LaCurts, N. Spring, and B. Bhattacharjee. BitTorrent is an auction: Analyzing and improving BitTorrent’s incentives. In Proc. SIGCOMM, 2008.
[19] H. C. Li, A. Clement, M. Marchetti, M. Kapritsos, L. Robison, L. Alvisi, and M. Dahlin. FlightPath: Obedience vs. choice in cooperative services. In Proc. OSDI, 2008.
[20] Z. Lu, Y. Wang, and Y. R. Yang. An analysis and comparison of CDN-P2P-hybrid content delivery system and model. JCM, 7(3):232–245, 2012.
[21] W. E. Mackay. Triggers and barriers to customizing software. In Proc. CHI, Apr. 1991.
[22] R. S. Peterson and E. G. Sirer. Antfarm: efficient content distribution with managed swarms. In Proc. NSDI, 2009.
[23] M. Piatek, T. Isdal, T. Anderson, and A. Krishnamurthy. Do incentives build robustness in BitTorrent? In Proc. NSDI, 2007.
[24] M. Piatek, H. V. Madhyastha, J. P. John, A. Krishnamurthy, and T. Anderson. Pitfalls for ISP-friendly P2P design. In Proc. HotNets, 2009.
[25] J. Rosenberg, R. Mahy, P. Matthews, and D. Wing. Session Traversal Utilities for NAT (STUN). RFC 5389, Oct. 2008.
[26] S. Saroiu, K. P. Gummadi, R. J. Dunn, S. D. Gribble, and H. M. Levy. An analysis of Internet content delivery systems. In Proc. OSDI, 2002.
[27] S. Saroiu, K. P. Gummadi, and S. Gribble. A measurement study of peer-to-peer file sharing systems. In Proc. MMCN, Jan. 2002.
[28] T. Silverston and O. Fourmaux. Measuring P2P IPTV systems. In Proc. NOSSDAV, 2007.
[29] M. Sirivianos, J. H. Park, R. Chen, and X. Yang. Free-riding in BitTorrent networks with the Large View exploit. In Proc. IPTPS, Feb. 2007.
[30] M. Sirivianos, J. H. Park, X. Yang, and S. Jarecki. Dandelion: Cooperative content distribution with robust incentives. In Proc. USENIX ATC, 2007.
[31] J. Spool. Do users change their settings? http://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/.
[32] K. Sripanidkulchai, B. Maggs, and H. Zhang. An analysis of live streaming workloads on the Internet. In Proc. IMC, 2004.
[33] Velocix. Network architecture. http://www.velocix.com/network_architecture.php.
[34] L. Vu, I. Gupta, K. Nahrstedt, and J. Liang. Understanding overlay characteristics of a large-scale peer-to-peer IPTV system. ACM Tr. Multim. Comp. Comm. Appl., 6:31:1–31:24, 2010.
[35] H. Xie, R. Yang, A. Krishnamurthy, Y. Liu, and A. Silberschatz. P4P: Provider portal for applications. In Proc. SIGCOMM, 2008.
[36] H. Yin, X. Liu, T. Zhan, V. Sekar, F. Qiu, C. Lin, H. Zhang, and B. Li. Design and deployment of a hybrid CDN-P2P system for live video streaming: experiences with LiveSky. In Proc. MM, 2009.