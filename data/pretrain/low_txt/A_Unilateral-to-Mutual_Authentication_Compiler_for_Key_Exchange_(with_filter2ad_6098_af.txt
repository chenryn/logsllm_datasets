### Secure UA-secure Protocol and F-MA-secure Protocol

A secure UA-secure protocol, under the conditions of Theorem 3, can be transformed into an F-MA-secure protocol. In this transformation, the session indistinguishability test is replaced with a functional test, as defined by the protocol. Additionally, the Encrypt and Decrypt operations applied to the CSM (Client-Side Message) are considered valid functional queries on the session key \( K_s \).

### Application to ACCE Security

Our functional security model allows us to frame secure channel formalisms. One specific instance is the ACCE model from [20], which has been successfully applied to the analysis of TLS protocols (see the refined definitions in [15]). We will not delve into the details of the ACCE model here but will informally state the following corollary. For a detailed understanding, please refer to [20] for the model (including definitions of pre-accept and post-accept phases), the definition of the Encrypt and Decrypt operations (represented as functional queries), and their security game that instantiates our functional test.

**Corollary 8 (informal)**: Let \( \Pi \) be a protocol resulting from the application of the SIGMAC compiler with encrypted CSM to a treplication-secure UA-secure protocol. Let Encrypt and Decrypt denote a stateful encryption scheme as considered by the ACCE model [20]. Consider protocol \( \Pi' \) that runs \( \Pi \) in the pre-accept phase of ACCE and uses the resultant session key for the Encrypt and Decrypt operations in the post-accept phase, as well as for the encryption of CSM. Then, \( \Pi' \) is secure according to the (mutual authentication) ACCE model.

### Security under Post-Handshake Authentication

In this section, we address the scenario where data protected by the session key is exchanged between the server and client after the server computes the session key but before the client sends the CSM message. This case, known as "post-handshake client authentication" in the context of TLS 1.3, requires a weakening of the security guarantees because the early use of the session key voids key indistinguishability.

Since the protocol is UA-secure even without the CSM message, the data exchanged prior to the sending of CSM is UA-secure. However, what notion of security can be claimed once the client authenticates? Using a simple adaptation of the proof of the SIGMAC compiler to the present setting, we show that the data exchanged before the sending of CSM (as well as later data) can be considered to be protected by mutually authenticated secure channels, with the assurance for the server delayed until it verifies the client’s CSM message. We frame this result in our more general functional setting (Section 6.1).

Let \( \Pi_2 \) be a protocol resulting from applying SIGMAC to a UA-secure protocol \( \Pi_1 \). Specifically, \( \Pi_2 \) consists of running \( \Pi_1 \) and adding the CSM message from the client to the server with a defined \( sid^* \) value. Let \( \Pi_2' \) be a modification of \( \Pi_2 \) where, between the last message of \( \Pi_1 \) and the CSM message from the client, data (referred to as pre-authentication data) is exchanged encrypted under the session key \( K_s \) generated at the end of the \( \Pi_1 \) run. We model the encryption and decryption operations applied to the pre-authentication data with abstract Encrypt and Decrypt functional queries.

We say that a functional test is consistent with a set of functional queries if the advantage of any adversary to win the test with a random key remains negligible even when allowed to issue functional queries from this set.

**Lemma 9**: Given a treplication-secure UA protocol \( \Pi_1 \) (i.e., one that satisfies the conditions of Theorem 3), protocol \( \Pi_2 \) as defined above is F-MA-secure with respect to any functional test consistent with the Encrypt and Decrypt functional queries defined by the protocol.

**Application to ACCE Security**: A corollary of this lemma is that if we instantiate the functional test with a security experiment for a given "secure channels" model, then the encrypted pre-authentication data attains the same protection as guaranteed by the secure channels model. Illustrating this in the ACCE model [20] requires some adjustment since ACCE separates key exchange (pre-accept phase) and encrypted message exchange (post-accept phase), while in our case these two are interleaved. What we are really interested in is the security of the encrypted message exchange protocol. To capture this form of security, we could model the pre-accept phase with an (idealized) trusted distribution of pairwise session keys between honest parties. If a post-accept message exchange protocol has the property that, when coupled with the idealized key exchange, results in an ACCE-secure protocol, then we say that the message exchange protocol is post-accept ACCE-secure. In this setting, Lemma 9 implies that the encrypted pre-authentication data in protocol \( \Pi_2' \) is post-accept ACCE-secure. (Note that the ACCE model is defined with mutual authentication, which is ensured here, although the assurance for the server is delayed until it verifies the client’s CSM message.) We omit a more formal treatment here.

### Security under Post-Handshake Authentication with Encrypted CSM

The result from Lemma 9 can be extended to the case where, in addition to the encryption of pre-authentication data, the CSM message itself is encrypted, as in Section 6.2 (corresponding to the TLS 1.3 specification). The simulation combines the simulators from the proofs of Lemma 7 and Lemma 9 using the key \( K_s \) to encrypt both pre-authentication data and the CSM message. Note that the encrypted CSM is delivered only after the encryption of pre-authentication data, so in a stateful encryption, its ciphertext will depend on the presence of prior encryptions (TLS 1.3’s encryption is stateful, using a sequence number as the per-record nonce). The simulation will also deliver the encrypted CSM at this time, ensuring it is correctly encrypted (a crucial point is that there is no need to send CSM out of order in the simulation).

### Acknowledgments

This paper has benefited enormously from collaboration with Eric Rescorla and Hoeteck Wee on the ongoing design of TLS 1.3, and from enlightening inputs from Björn Tackmann, Douglas Stebila, Felix Günther, Karthik Bhargavan, Kenny Paterson, Markulf Kohlweiss, and many other participants in the TRON workshop and the TLS working group. Special thanks to Björn, Douglas, Eric, and the anonymous reviewers for their excellent and detailed comments.

### References

[1] M. Bellare and P. Rogaway. Entity authentication and key distribution. In D. R. Stinson, editor, CRYPTO, volume 773 of Lecture Notes in Computer Science, pages 232–249. Springer, 1993. ISBN 3-540-57766-1.

[2] M. Bellare, R. Canetti, and H. Krawczyk. A modular approach to the design and analysis of authentication and key exchange protocols (extended abstract). In 30th ACM STOC, pages 419–428. ACM Press, May 1998.

[3] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud, C. Fournet, M. Kohlweiss, A. Pironti, P. Strub, and J. K. Zinzindohoué. A messy state of the union: Taming the composite state machines of TLS. In IEEE Symposium on Security and Privacy, 2015.

[4] K. Bhargavan and G. Leurent. Transcript collision attacks: Breaking authentication in TLS, IKE, and SSH. In 23nd Annual Network and Distributed System Security Symposium, NDSS 2016, San Diego, California, USA, February 21-24, 2016. The Internet Society, 2016. URL http://www.internetsociety.org/events/ndss-symposium-2016.

[5] K. Bhargavan, C. Fournet, M. Kohlweiss, A. Pironti, and P.-Y. Strub. Implementing TLS with verified cryptographic security. In IEEE Symposium on Security and Privacy, 2013. URL http://mitls.rocq.inria.fr/.

[6] K. Bhargavan, A. Delignat-Lavaud, C. Fournet, A. Pironti, and P. Strub. Triple handshakes and cookie cutters: Breaking and fixing authentication over TLS. In 2014 IEEE Symposium on Security and Privacy, SP, pages 98–113, 2014.

[7] K. Bhargavan, A. Delignat-Lavaud, and A. Pironti. Verified contributive channel bindings for compound authentication. In NDSS, 2015.

[8] C. Brzuska, M. Fischlin, N. P. Smart, B. Warinschi, and S. C. Williams. Less is more: Relaxed yet composable security notions for key exchange. Int. J. Inf. Sec., 12(4):267–297, 2013. Cryptology ePrint Archive, Report 2012/242.

[9] R. Canetti and H. Krawczyk. Analysis of key-exchange protocols and their use for building secure channels. In EUROCRYPT, pages 453–474, 2001. See also Cryptology ePrint Archive, Report 2001/040.

[10] R. Canetti and H. Krawczyk. Universally composable notions of key exchange and secure channels. In EUROCRYPT, pages 337–351, 2002. See also Cryptology ePrint Archive, Report 2002/059.

[11] C. Cremers, M. Horvat, S. Scott, and T. van der Merwe. Automated verification of TLS 1.3: 0-RTT, resumption, and delayed authentication. In IEEE S&P 2016, 2016.

[12] B. Dowling, M. Fischlin, F. Günther, and D. Stebila. A cryptographic analysis of the TLS 1.3 handshake protocol candidates. In ACM CCS, 2015. Also, Cryptology ePrint Archive, Report 2015/914.

[13] B. Dowling, M. Fischlin, F. Günther, and D. Stebila. A cryptographic analysis of the TLS 1.3 draft-10 full and pre-shared key handshake protocol. Cryptology ePrint Archive, Report 2016/081, 2016.

[14] M. Fischlin and F. Günther. Multi-stage key exchange and the case of Google’s QUIC protocol. In ACM CCS, 2014.

[15] M. Fischlin, F. Günther, G. A. Marson, and K. G. Paterson. Data is a stream: Security of stream-based channels. In R. Gennaro and M. J. B. Robshaw, editors, CRYPTO 2015, Part II, volume 9216 of LNCS, pages 545–564. Springer, Heidelberg, Aug. 2015.

[16] I. Goldberg, D. Stebila, and B. Ustaoglu. Anonymity and one-way authentication in key exchange protocols. Des. Codes Cryptography, 67(2):245–269, 2013. URL http://dx.doi.org/10.1007/s10623-011-9604-z.

[17] S. Halevi and H. Krawczyk. Public-key cryptography and password protocols. ACM Transactions on Information and System Security, 2(3):230–268, Aug. 1999.

[18] S. Halevi and H. Krawczyk. One-pass HMQV and asymmetric key-wrapping. In PKC 2011, pages 317–334, 2011.

[19] T. Jager, F. Kohlar, S. Schäge, and J. Schwenk. Generic compilers for authenticated key exchange. In M. Abe, editor, ASIACRYPT 2010, volume 6477 of LNCS, pages 232–249. Springer, Heidelberg, Dec. 2010.

[20] T. Jager, F. Kohlar, S. Schäge, and J. Schwenk. On the security of TLS-DHE in the standard model. In CRYPTO, pages 273–293, 2012. Also Cryptology ePrint Archive, Report 2011/219.

[21] F. Kohlar, S. Schäge, and J. Schwenk. On the security of TLS-DH and TLS-RSA in the standard model. Cryptology ePrint Archive, Report 2013/367, 2013. http://eprint.iacr.org/.

[22] M. Kohlweiss, U. Maurer, C. Onete, B. Tackmann, and D. Venturi. (De-)constructing TLS. Cryptology ePrint Archive, Report 2014/020, 2014. Revised Apr 2015.

[23] M. Kohlweiss, U. Maurer, C. Onete, B. Tackmann, and D. Venturi. (De-)constructing TLS 1.3. In Progress in Cryptology - INDOCRYPT 2015 - 16th International Conference on Cryptology in India, Bangalore, India, December 6-9, 2015, Proceedings, pages 85–102, 2015.

[24] H. Krawczyk. SIGMA: The “SIGn-and-MAc” approach to authenticated Diffie-Hellman and its use in the IKE protocols. In CRYPTO, pages 400–425, 2003.

[25] H. Krawczyk and H. Wee. The OPTLS protocol and TLS 1.3. In EuroS&P, 2016.

[26] H. Krawczyk, K. G. Paterson, and H. Wee. On the security of the TLS protocol: A systematic analysis. In CRYPTO (1), pages 429–448, 2013. Also, Cryptology ePrint Archive, Report 2013/339.

[27] A. Langley and W.-T. Chang. QUIC crypto, 2013. URL http://tinyurl.com/lrrjyjs.

[28] R. Lychev, S. Jero, A. Boldyreva, and C. Nita-Rotaru. How secure and quick is QUIC? Provable security and performance analyses. In IEEE Symposium on Security and Privacy, pages 214–231, 2015.

[29] U. Maurer, B. Tackmann, and S. Coretti. Key exchange with unilateral authentication: Composable security definition and modular protocol design. IACR Cryptology ePrint Archive, 2013:555, 2013. URL http://eprint.iacr.org/2013/555.

[30] P. Morrissey, N. P. Smart, and B. Warinschi. A modular security analysis of the TLS handshake protocol. In ASIACRYPT, pages 55–73, 2008.

[31] K. G. Paterson, T. Ristenpart, and T. Shrimpton. Tag size does matter: Attacks and proofs for the TLS record protocol. In ASIACRYPT, pages 372–389, 2011.

[32] M. D. Raimondo, R. Gennaro, and H. Krawczyk. Deniable authentication and key exchange. In ACM CCS, 2006.

[33] E. Rescorla. The transport layer security (TLS) protocol version 1.3 (draft 13), Dec. 2015. URL https://tools.ietf.org/html/draft-ietf-tls-tls13-13.

[34] V. Shoup. On formal models for secure key exchange. Cryptology ePrint Archive, Report 1999/012, 1999.