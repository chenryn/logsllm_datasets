### Gaming: The Next Overlooked Security Hole
**Ferdinand Schober**

#### Overview
- **Historical Development**
- **Know Thy Gamer**
- **Know Thy Developer**
- **Know Thy Engine**
- **Profit?**
- **Virtual Economies**
- **Current Malware**
- **Games 2.0 & Privacy**
- **Exercise in Exploits**

#### Clarifications
- **Context of This Talk:**
  - **Games:** PC games (not video games, no consoles)
  - **Dominant OS:** Windows
  - **Focus:** Non-casual, 'hard-core' games
  - **Scope:** Game client, not genre-specific, no web-based games
  - **Limited View:** Online games, primarily generic MMOs

### Historical Development

| Late 1990s | 2008 |
|------------|------|
| **Non-mainstream**<br>• Geeks play games<br>• Estimated budget: $2-3M<br>• Self-publishing common, but declining | **Mass-market applications**<br>• GTA4 review in the NY Times?<br>• Estimated budget: $15-20M<br>• ~3 major publishers provide funding (EA being the biggest)<br>• Homogenization |
| **Custom graphics solutions**<br>• Most games implement their own graphics engine<br>• Only DirectX/OpenGL shared | **Full-featured engines**<br>• Limited group of engines (~3) used by most games, number is dropping<br>• Includes physics, scripting, audio, AI<br>• One exploit covers multiple games! |
| **Middleware is limited**<br>• In-game physics not feasible yet (but getting there)<br>• Mostly custom solutions | **Middleware is standard**<br>• Engines provide features, rest is done through middleware<br>• Same as before! |
| **Physical media is king**<br>• CDs/DVDs are the distribution media | **Push for shared platforms that require online presence (Games 2.0)**<br>• Steam, GfW Live<br>• Used for distribution and content protection<br>• Platform also used for multiplayer<br>• Automatic patching |
| **Offline games**<br>• Only very few MMOs and they are not really there yet<br>• Multiplayer game modes available<br>• Direct connections - no common platform | **Online is default**<br>• MMOs are a mass market (WoW!)<br>• Online presence becoming fully integrated through platform<br>• I can see what you play! |
| **Little custom content**<br>• Editors considered a ‘goodie’ to keep the game going<br>• Very limited group of people were producing content | **Custom content is part of feature set**<br>• Editors shipped almost by default<br>• Custom content is expected - the next big thing<br>• XMLification of content<br>• Custom content is automatically pulled into the game |
| **Community through sites/boards**<br>• Mostly web/chat based<br>• Not integrated into game | **Built-in community features**<br>• Based in the common online platform<br>• Available in any game<br>• Again: I can see what you play! |

#### What Did Not Change?
- Developers are pressed for time/money
- Time is spent on ‘making it pretty’ – ‘pretty sells’
- Products need to use more middleware
- Canned code cannot be fully reviewed, inherits issues
- Security generally not a major concern
- Favorite quote: ‘It’s just a game!’
- Release games are not that stable
- Crashes do not raise suspicion
- Patching is common, but mostly for gameplay features
- Hacks/Cracks/Trainers are readily accessible (just google it!)
- Do you really trust the serial generator?
- Piracy
- Push towards alternatives (now: online distribution or authentication platforms) for the wrong reasons

#### Know Thy Gamer
- **PC Gamers:**
  - Generally more hard-core than console gamers
  - Higher learning curve to get a game running
  - Install nightmares, configuration issues, etc.
  - Know the OS and hardware well
  - Need to know about drivers and configuration
  - Higher-end hardware required
  - Changes OS settings to get games running faster
  - Experienced gamers will disable anything to get more performance
  - Use PC as multi-purpose system (web browsing, data storage, etc.)
  - System has plenty of personal information
  - Not paranoid; used to crashes and erratic behavior
  - Frequent patching
  - Will use custom content if it is ‘pretty’
  - Generally trust custom content
  - Games need to be run with highest privileges
  - Slow shift towards more privilege security (due to Windows Vista)
  - Spend a lot of time online (MMOs, multiplayer games, community activities)
  - Distribution platforms may require online presence
  - Prioritize performance or ‘fancy’ hardware over security

#### Know Thy Developer
- **Game Developers:**
  - Like most other developers, they make the same mistakes
  - Under severe time pressure
  - Hard deadlines (holiday season, ship date)
  - Most games run late
  - Need to use canned code
  - Love the latest and greatest (‘shiny complex’)
  - Quick design = quick exploits
  - New features = new bugs

#### Know Thy Engine
- **Engine Statistics (2007):**
  - ~810 PC games released
  - 42 games considered major selling games
  - Multiple contenders for graphics engines
  - Fewer options for physics engines
- **Engine Components:**
  - Graphics & Animation Engine
  - Audio Engine
  - Physics Engine (3rd party middleware)
  - Scripting Engine (may be full C-like language)
  - In-Game Ads (3rd party middleware, NEW)
  - Online Platform (3rd party middleware, NEW)
- **Engine Fixes:**
  - Rarely shared
  - Custom for each game/developer
  - Easy to trace engine/platform versions
  - Shared engines provide easy exploits
  - Issue in one game becomes an issue for all games with the same engine binaries
  - Customization of the engine might help
  - Historically, games are patched, not engines
  - Engine developers do not roll out patches, game developers do
  - Automatic patching can be spoofed too

#### Profit?
- **Game Side:**
  - Griefing/Cheating
  - Personal information
  - Payment information (platform/MMO)
  - Existing virtual assets
- **System Side:**
  - Everything from hacking a system
  - Systems of gamers are usually high-end (more CPU cycles, broadband network connection)
  - Good staging systems

#### Virtual Economies
- Large user bases (e.g., 14+ million active MMO players)
- Significant revenue through in-game assets and services (gold-farming, auto-leveling, etc.)
- Revenue in real money
- Some games built purely on in-game micro-transactions
- Easier to gain real money from digital assets
- Any kind of exploit can result in quick gains for the attacker
  - Stealing assets from legitimate players
  - Selling assets produced through exploits
  - Leveraging player accounts (payment information available)
  - Slow fixes can cause in-game economies to crash
  - A lot at stake!

#### Current Malware
- **Account Stealers:**
  - Targeted at acquiring account credentials for MMOs
  - Various families of malware (e.g., Win32/Taterf)
  - Top 8 malware families detected on ~2.5M systems in June (18% of total user base)
- **Propagation:**
  - Through community (browser exploits, unofficial patches/tools, social engineering)

#### Games 2.0 & Privacy
- **Fully Integrated Online Games:**
  - Examples: MMOs, Steam, GfW Live
- **Privacy Concerns:**
  - System knows when the game is run, required to 'unlock' the game
  - Online status is published (can be hidden but still known)
  - Future features can show location (mobile status)
  - Games played and progress are visible (achievements and beyond)
  - Ad systems keep detailed track of gamers
  - List of friends is easy to obtain
  - Hard to avoid if you want to play, especially online

#### Exercise in Exploits
- **Case Studies:**
  - **The Little Nude Patch That Could:**
    - Alice downloads a nude patch from Bob
    - Patch includes a new character file with script code
    - Script code runs in sandbox with game permissions (usually Administrator)
    - Flaw allows system access with Administrative rights
    - Once in, everything is lost
  - **View My Post and Get Owned:**
    - Alice views Bob's post with a Flash tag
    - Bob exploits a known Flash vulnerability to get Alice’s account credentials
    - Single board attack can yield hundreds of accounts
    - Securing games is not enough; community locations need to be locked-down
  - **The Ad from Hell:**
    - Bob uploads a custom image file to the ad system
    - Image exploits a flaw in the display engine
    - One flaw affects all gamers
    - Users can only prevent this by not playing the game
    - In-game advertising solutions have significant logic, increasing the attack surface

#### Questions?