# Database Compatibility for OracleÂ® Developers
## Reference Guide

### 2.4.12.2 IN
- **Expression**: `expression IN (subquery)`
- **Result**:
  - `TRUE` if any row in the subquery matches the left-hand expression.
  - `FALSE` if no matching row is found, including when the subquery returns no rows.
  - `NULL` if the left-hand expression yields `NULL`, or if there are no equal right-hand values and at least one right-hand row yields `NULL`. This aligns with SQL's rules for Boolean combinations of null values.
- **Note**: Do not assume that the subquery will be fully evaluated.

### 2.4.12.3 NOT IN
- **Expression**: `expression NOT IN (subquery)`
- **Result**:
  - `TRUE` if all rows in the subquery do not match the left-hand expression, including when the subquery returns no rows.
  - `FALSE` if any row in the subquery matches the left-hand expression.
  - `NULL` if the left-hand expression yields `NULL`, or if there are no equal right-hand values and at least one right-hand row yields `NULL`. This aligns with SQL's rules for Boolean combinations of null values.
- **Note**: Do not assume that the subquery will be fully evaluated.

### 2.4.12.4 ANY/SOME
- **Expression**:
  - `expression operator ANY (subquery)`
  - `expression operator SOME (subquery)`
- **Result**:
  - `TRUE` if the operator evaluates to `TRUE` for any row in the subquery.
  - `FALSE` if the operator evaluates to `FALSE` for all rows in the subquery, including when the subquery returns no rows.
  - `NULL` if there are no successful comparisons and at least one right-hand row yields `NULL` for the operator's result. This aligns with SQL's rules for Boolean combinations of null values.
- **Note**: 
  - `SOME` is a synonym for `ANY`.
  - `IN` is equivalent to `= ANY`.
  - Do not assume that the subquery will be fully evaluated.

### 2.4.12.5 ALL
- **Expression**: `expression operator ALL (subquery)`
- **Result**:
  - `TRUE` if the operator evaluates to `TRUE` for all rows in the subquery, including when the subquery returns no rows.
  - `FALSE` if the operator evaluates to `FALSE` for any row in the subquery.
  - `NULL` if the comparison does not return `FALSE` for any row, and it returns `NULL` for at least one row.
- **Note**: 
  - `NOT IN` is equivalent to `<> ALL`.
  - Do not assume that the subquery will be fully evaluated.

## 3 Oracle Catalog Views
The Oracle Catalog Views provide information about database objects in a manner compatible with the Oracle data dictionary views.

### 3.1 ALL_ALL_TABLES
- **Description**: Provides information about the tables accessible by the current user.
- **Columns**:
  - `owner`: User name of the table's owner.
  - `schema_name`: Name of the schema in which the table belongs.
  - `table_name`: The name of the table.
  - `tablespace_name`: Name of the tablespace in which the table resides if other than the default tablespace.
  - `status`: Included for compatibility only; always set to `VALID`.
  - `temporary`: `Y` if the table is temporary; `N` if the table is permanent.

### 3.2 ALL_CONS_COLUMNS
- **Description**: Provides information about the columns specified in constraints placed on tables accessible by the current user.
- **Columns**:
  - `owner`: User name of the constraint's owner.
  - `schema_name`: Name of the schema in which the constraint belongs.
  - `constraint_name`: The name of the constraint.
  - `table_name`: The name of the table to which the constraint belongs.
  - `column_name`: The name of the column referenced in the constraint.
  - `position`: The position of the column within the object definition.
  - `constraint_def`: The definition of the constraint.

### 3.3 ALL_CONSTRAINTS
- **Description**: Provides information about the constraints placed on tables accessible by the current user.
- **Columns**:
  - `owner`: User name of the constraint's owner.
  - `schema_name`: Name of the schema in which the constraint belongs.
  - `constraint_name`: The name of the constraint.
  - `constraint_type`: The constraint type. Possible values: `C` (check constraint), `F` (foreign key constraint), `P` (primary key constraint), `U` (unique key constraint), `R` (referential integrity constraint), `V` (constraint on a view), `O` (with read-only, on a view).
  - `table_name`: Name of the table to which the constraint belongs.
  - `search_condition`: Search condition that applies to a check constraint.
  - `r_owner`: Owner of a table referenced by a referential constraint.
  - `r_constraint_name`: Name of the constraint definition for a referenced table.
  - `delete_rule`: The delete rule for a referential constraint. Possible values: `C` (cascade), `R` (restrict), `N` (no action).
  - `deferrable`: Specified if the constraint is deferrable (`T` or `F`).
  - `deferred`: Specifies if the constraint has been deferred (`T` or `F`).
  - `index_owner`: User name of the index owner.
  - `index_name`: The name of the index.
  - `constraint_def`: The definition of the constraint.

### 3.4 ALL_DB_LINKS
- **Description**: Provides information about the database links accessible by the current user.
- **Columns**:
  - `owner`: User name of the database link's owner.
  - `db_link`: The name of the database link.
  - `type`: Type of remote server. Values: `REDWOOD` or `EDB`.
  - `username`: User name of the user logging in.
  - `host`: Name or IP address of the remote server.

### 3.5 ALL_DIRECTORIES
- **Description**: Provides information about all directories created with the `CREATE DIRECTORY` command.
- **Columns**:
  - `owner`: User name of the directory's owner.
  - `directory_name`: The alias name assigned to the directory.
  - `directory_path`: The path to the directory.

### 3.6 ALL_IND_COLUMNS
- **Description**: Provides information about columns included in indexes on the tables accessible by the current user.
- **Columns**:
  - `index_owner`: User name of the index's owner.
  - `schema_name`: Name of the schema in which the index belongs.
  - `index_name`: The name of the index.
  - `table_owner`: User name of the table owner.
  - `table_name`: The name of the table to which the index belongs.
  - `column_name`: The name of the column.
  - `column_position`: The position of the column within the index.
  - `column_length`: The length of the column (in bytes).
  - `char_length`: The length of the column (in characters).
  - `descend`: Always set to `Y` (descending); included for compatibility only.

### 3.7 ALL_INDEXES
- **Description**: Provides information about the indexes on tables that may be accessed by the current user.
- **Columns**:
  - `owner`: User name of the index's owner.
  - `schema_name`: Name of the schema in which the index belongs.
  - `index_name`: The name of the index.
  - `index_type`: Always `BTREE`; included for compatibility only.
  - `table_owner`: User name of the owner of the indexed table.
  - `table_name`: The name of the indexed table.
  - `table_type`: Always `TABLE`; included for compatibility only.
  - `uniqueness`: Indicates if the index is `UNIQUE` or `NONUNIQUE`.
  - `compression`: Always `N` (not compressed); included for compatibility only.
  - `tablespace_name`: Name of the tablespace in which the table resides if other than the default tablespace.
  - `logging`: Always `LOGGING`; included for compatibility only.
  - `status`: Always `VALID`; included for compatibility only.
  - `partitioned`: Always `NO`; included for compatibility only.
  - `temporary`: Always `N`; included for compatibility only.
  - `secondary`: Always `N`; included for compatibility only.
  - `join_index`: Always `NO`; included for compatibility only.
  - `dropped`: Always `NO`; included for compatibility only.

### 3.8 ALL_JOBS
- **Description**: Provides information about all jobs that reside in the database.
- **Columns**:
  - `job`: The identifier of the job (Job ID).
  - `log_user`: The name of the user that submitted the job.
  - `priv_user`: Same as `log_user`; included for compatibility only.
  - `schema_user`: The name of the schema used to parse the job.
  - `last_date`: The last date that this job executed successfully.
  - `last_sec`: Same as `last_date`.
  - `this_date`: The date that the job began executing.
  - `this_sec`: Same as `this_date`.
  - `next_date`: The next date that this job will be executed.
  - `next_sec`: Same as `next_date`.
  - `total_time`: The execution time of this job (in seconds).
  - `broken`: If `Y`, no attempt will be made to run this job. If `N`, this job will attempt to execute.
  - `interval`: Determines how often the job will repeat.
  - `failures`: The number of times that the job has failed to complete since its last successful execution.
  - `what`: The job definition (PL/SQL code block) that runs when the job executes.
  - `nls_env`: Always `NULL`; provided for compatibility only.
  - `misc_env`: Always `NULL`; provided for compatibility only.
  - `instance`: Always `0`; provided for compatibility only.

### 3.9 ALL_OBJECTS
- **Description**: Provides information about all objects that reside in the database.
- **Columns**:
  - `owner`: User name of the object's owner.
  - `schema_name`: Name of the schema in which the object belongs.
  - `object_name`: Name of the object.
  - `object_type`: Type of the object. Possible values: `INDEX`, `FUNCTION`, `PACKAGE`, `PACKAGE BODY`, `PROCEDURE`, `SEQUENCE`, `SYNONYM`, `TABLE`, `TRIGGER`, and `VIEW`.
  - `status`: Always `VALID`; included for compatibility only.
  - `temporary`: `Y` if a temporary object; `N` if this is a permanent object.

### 3.10 ALL_PART_KEY_COLUMNS
- **Description**: Provides information about the key columns of the partitioned tables that reside in the database.
- **Columns**:
  - `owner`: The owner of the table.
  - `schema_name`: The name of the schema in which the table resides.
  - `name`: The name of the table in which the column resides.
  - `object_type`: Always `TABLE`; included for compatibility only.
  - `column_name`: The name of the column on which the key is defined.
  - `column_position`: `1` for the first column, `2` for the second column, etc.

### 3.11 ALL_PART_TABLES
- **Description**: Provides information about all of the partitioned tables that reside in the database.
- **Columns**:
  - `owner`: The owner of the partitioned table.
  - `schema_name`: The name of the schema in which the table resides.
  - `table_name`: The name of the table.
  - `partitioning_type`: The partitioning type used to define table partitions.
  - `subpartitioning_type`: The subpartitioning type used to define table subpartitions.
  - `partition_count`: The number of partitions in the table.
  - `def_subpartition_count`: The number of subpartitions in the table.
  - `partitioning_key_count`: The number of partitioning keys specified.
  - `subpartitioning_key_count`: The number of subpartitioning keys specified.
  - `status`: Always `VALID`; included for compatibility only.
  - `def_tablespace_name`: Always `NULL`; included for compatibility only.
  - `def_pct_free`: Always `NULL`; included for compatibility only.
  - `def_pct_used`: Always `NULL`; included for compatibility only.
  - `def_ini_trans`: Always `NULL`; included for compatibility only.
  - `def_max_trans`: Always `NULL`; included for compatibility only.
  - `def_initial_extent`: Always `NULL`; included for compatibility only.
  - `def_next_extent`: Always `NULL`; included for compatibility only.
  - `def_min_extents`: Always `NULL`; included for compatibility only.
  - `def_max_extents`: Always `NULL`; included for compatibility only.
  - `def_pct_increase`: Always `NULL`; included for compatibility only.
  - `def_freelists`: Always `NULL`; included for compatibility only.
  - `def_freelist_groups`: Always `NULL`; included for compatibility only.
  - `def_logging`: Always `YES`; included for compatibility only.
  - `def_compression`: Always `NONE`; included for compatibility only.
  - `def_buffer_pool`: Always `DEFAULT`; included for compatibility only.
  - `ref_ptn_constraint_name`: Always `NULL`; included for compatibility only.
  - `interval`: Always `NULL`; included for compatibility only.

### 3.12 ALL_POLICIES
- **Description**: Provides information on all policies in the database. This view is accessible only to superusers.
- **Columns**:
  - `object_owner`: Name of the owner of the object.
  - `schema_name`: Name of the schema in which the object belongs.
  - `object_name`: Name of the object on which the policy applies.
  - `policy_group`: Always an empty string; included for compatibility only.
  - `policy_name`: Name of the policy.
  - `pf_owner`: Name of the schema containing the policy function, or the schema containing the package that contains the policy function.
  - `package`: Name of the package containing the policy function (if the function belongs to a package).
  - `function`: Name of the policy function.
  - `sel`: Whether or not the policy applies to `SELECT` commands. Possible values: `YES` or `NO`.
  - `ins`: Whether or not the policy applies to `INSERT` commands. Possible values: `YES` or `NO`.
  - `upd`: Whether or not the policy applies to `UPDATE` commands. Possible values: `YES` or `NO`.
  - `del`: Whether or not the policy applies to `DELETE` commands. Possible values: `YES` or `NO`.
  - `idx`: Whether or not the policy applies to index maintenance. Possible values: `YES` or `NO`.
  - `chk_option`: Whether or not the check option is in force for `INSERT` and `UPDATE` commands. Possible values: `YES` or `NO`.
  - `enable`: Whether or not the policy is enabled on the object. Possible values: `YES` or `NO`.
  - `static_policy`: Always `NO`; included for compatibility only.
  - `policy_type`: Always `UNKNOWN`; included for compatibility only.
  - `long_predicate`: Always `YES`; included for compatibility only.

### 3.13 ALL_QUEUES
- **Description**: Provides information about any currently defined queues.
- **Columns**:
  - `owner`: User name of the queue owner.
  - `name`: The name of the queue.
  - `queue_table`: The name of the queue table in which the queue resides.
  - `qid`: The system-assigned object ID of the queue.
  - `queue_type`: The queue type; possible values: `EXCEPTION_QUEUE`, `NON_PERSISTENT_QUEUE`, or `NORMAL_QUEUE`.
  - `max_retries`: The maximum number of dequeue attempts.
  - `retrydelay`: The maximum time allowed between retries.
  - `enqueue_enabled`: `YES` if the queue allows enqueuing; `NO` if the queue does not.
  - `dequeue_enabled`: `YES` if the queue allows dequeuing; `NO` if the queue does not.
  - `retention`: The number of seconds that a processed message is retained in the queue.
  - `user_comment`: A user-specified comment.
  - `network_name`: The name of the network on which the queue resides.
  - `sharded`: `YES` if the queue resides on a sharded network; `NO` if the queue does not.

### 3.14 ALL_QUEUE_TABLES
- **Description**: Provides information about all of the queue tables in the database.
- **Columns**:
  - `owner`: Role name of the owner of the queue table.
  - `queue_table`: The user-specified name of the queue table.
  - `type`: The type of data stored in the queue table.
  - `object_type`: The user-defined payload type.

---

Copyright Â© 2007 - 2018 EnterpriseDB Corporation. All rights reserved.