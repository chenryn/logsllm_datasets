### 3.5 Model Implementation

#### 3.5.1 Implementation Details

As described in Section 3.4, the model was implemented as an RDF vocabulary, written in Turtle format rather than XML, due to its superior readability [5]. To enhance integration with other semantic web initiatives, the model establishes links with various existing ontologies, reusing concepts from both vertical and horizontal domains such as SKOS (taxonomies), Dublin Core (documents), FOAF (people), and others.

The 6-point interaction star serves as the core of the model. A `ServiceSystem` class is used to group interactions. The `Role` class represents entities such as customers, managers, and computer agents. We link a role to its respective stakeholders using the `belongsToBusinessEntity` property, which connects a `Role` to a `BusinessEntity` from the GoodRelations ontology. This ontology was chosen because it is widely accepted as a valuable Linked Data vocabulary for describing products and services [17].

The `Process` class represents an internal business process within the service system. It is particularly useful for filtering interaction flows based on specific processes. Its utility can be further enhanced by connecting it to modeled processes. Therefore, we link it to a `Process` from the BPMN 2.0 ontology [30]. In future work, connections to different process modeling vocabularies may be considered to expand the usefulness of this class.

The `Goal` class expresses the motivation behind an interaction. This class is not connected to any element of the Linked Data Cloud, as its meaning is context-specific to the service system. No relevant ontologies were found that could extend the information of this class.

The `Location` class specifies where an interaction occurs. An instance of this class is connected to another through the `isLocatedIn` property to establish a hierarchical level. For example, this allows associating an interaction with a room and finding that interaction when querying the room. The `Location` class also has the `isLocationFrom` property, which connects it to a `Feature` from the Geonames ontology [38], providing an unambiguous geographical context. A Geonames `Feature` represents any city, country, etc., and also uses a hierarchical structure.

The `Time` concept provides a temporal context to interactions. It is connected to a `TemporalEntity` from the OWL-Time ontology [18], enabling detailed temporal descriptions such as the date and time of an interaction or its duration. Temporal relations between interactions can be defined using properties like `intervalBefore`, `intervalEquals`, or `intervalAfter`, allowing for a lightweight description of a process.

The `Resource` class captures inputs and outputs of the service system. An interaction can relate to a resource using the following properties:
- `receivesResource`: when the resource is introduced from outside the service system.
- `createsResource`: when the resource is created within the service system.
- `consumesResource`: when the resource is consumed within the service system.
- `returnsResource`: when the resource is provided to the outside of the service system.

A resource is connected to `QuantitativeValue` from the GoodRelations ontology, allowing the specification of quantities. It can also be connected to a `Resource` from DBpedia, providing an unambiguous semantic element. For example, a resource "Letter" might be ambiguous (e.g., a mail letter or a letter from the alphabet), but assigning it to a DBpedia `Resource` gives it a clear semantic value.

As previously discussed, `Interaction` and `Resource` have subclasses, though these are not mandatory. Other subclasses can be used instead, as they are subclasses of `Concept` from the SKOS ontology [19]. This means they can be extended by concept schemes [29]. We can create a `ConceptScheme` from SKOS for `Interaction` and `Resource`, add their subclasses, and link them through the `hasTopConcept` property. This capability enhances the model's adaptability and flexibility.

Listing 3.7 shows an extract of the RDF code for the LSS-USDL ontology:

```turtle
# Every service system is defined by a lss-usdl:ServiceSystem class
lss-usdl:ServiceSystem a rdfs:Class, owl:Class;
    rdfs:label "ServiceSystem" .

# Every service system features a set of interactions
lss-usdl:Interaction a rdfs:Class, owl:Class;
    rdfs:subClassOf skos:Concept;
    rdfs:label "Interaction" .

# Every interaction relates to other entities, such as its location
lss-usdl:Location a rdfs:Class, owl:Class;
    rdfs:label "Location" .

# This property connects a service system to its interactions
lss-usdl:hasInteraction a rdf:Property;
    rdfs:label "has interaction";
    rdfs:domain lss-usdl:ServiceSystem;
    rdfs:range lss-usdl:Interaction .

# This property connects an interaction to its location
lss-usdl:hasLocation a rdf:Property;
    rdfs:label "has location";
    rdfs:domain lss-usdl:Interaction;
    rdfs:range lss-usdl:Location .

# A location can also be connected to an element of the Geonames ontology
lss-usdl:isLocationFrom a rdf:Property;
    rdfs:label "is location from";
    rdfs:domain lss-usdl:Location;
    rdfs:range gn:Feature .
```

#### 3.5.2 Integration with the Linked Data Cloud

Another key objective was to integrate the model with the Linked Data Cloud (LDC). This integration involves ensuring that the connections between entities in the LSS-USDL model have a semantic meaning with entities in the LDC. The integration is achieved by reusing relevant Linked Data ontologies, such as Geonames and DBpedia.

The LDC is generating significant interest and adoption by researchers and industry. It refers to publicly available data on the World Wide Web, represented by ontology languages like RDF and OWL, which are established standards by the W3C for metadata sharing and information integration [11].

Historically, corporate information about data and services was confined to private databases and firewalls. The Linked Data movement leverages Semantic Web advances to enable organizations to provide remote access to their internal data and service assets. For example, the US and UK governments make their legislation available to citizens in a transparent manner using semantic languages. The collection of all these datasets, accessible worldwide, is called the Linked Data Cloud. Driven by researchers, government agencies (e.g., govtrack.us and legislation.gov.uk), and companies (e.g., The Guardian and The National Library of Germany), the resulting Linked Data has grown to over 30 billion RDF triples.

However, the value of Linked Data in isolation is under-explored. By matching vocabularies defined by LSS-USDL with data from the LDC, we can add background knowledge to service systems. For example, this integration enables queries to find information about specific service resources annotated with DBpedia concepts (e.g., passport, medical record, and bill of materials). DBpedia is a repository of structured information retrieved from Wikipedia and accessible as RDF statements. As another example, it also enables retrieving information such as the country, population, postal code, and alternative names of the locations where services operate using Geonames, an ontology with more than 8 million toponyms.

### References

[1] Dean Allemang and James Hendler. *Semantic Web for the Working Ontologist: Effective Modeling in RDFS and OWL*. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 2011.

[2] Rainer Alt and Hans-Dieter Zimmermann. Preface: Introduction to Special Section–Business Models. *Electronic Markets*, 11(1):3–9, 2001.

[3] Kevin Barnhurst and Diana Mutz. American Journalism and the Decline in Event-Centered Reporting. *Journal of Communication*, 47(4):27–53, 1997.

[4] Alistair Barros, Uwe Kylau, and Daniel Oberle. Unified Service Description Language 3.0 (USDL) Overview, 2011.

[5] David Beckett and Tim Berners-Lee. Turtle-Terse RDF Triple Language. W3C Team Submission, 14, 2008.

[6] David Beckett and Tim Berners-Lee. Turtle-Terse RDF Triple Language. W3C Team Submission, W3C, March 2011. Accessed Aug. 15, 2013.

[7] Christian Bizer, Tom Heath, and Tim Berners-Lee. Linked Data - The Story So Far. *International Journal on Semantic Web and Information Systems*, 5(3):1–22, 2009.

[8] Andrew Blair, John Debenham, and Jenny Edwards. Requirements Analysis for Intelligent Decision Support Systems. In *Intelligent Information Systems, 1994. Proceedings of the 1994 Second Australian and New Zealand Conference on*, pages 482–486. IEEE, 1994.

[9] Tim Bray, Jean Paoli, Michael Sperberg-McQueen, Eve Maler, and François Yergeau. Extensible Markup Language (XML) 1.1 (Second Edition). W3C Recommendation, W3C, September 2006. Accessed Aug. 15, 2013.

[10] Dan Brickley and Ramanathan Guha. RDF Vocabulary Description Language 1.0: RDF Schema. W3C Recommendation, W3C, February 2004. Accessed Aug. 15, 2013.

[11] Jorge Cardoso. The Syntactic and the Semantic Web, pages 1–23. IGI Global, 2007.

[12] Marlon Dumas, Justin O’Sullivan, Mitra Heravizadeh, David Edmond, and Arthur ter Hofstede. Towards a Semantic Framework for Service Description. In Robert Meersman, Karl Aberer, and Tharam Dillon, editors, *DS-9, volume 239 of IFIP Conference Proceedings*, pages 277–291. Kluwer, 2001.

[13] Erwin Fielt. Alternative Business Model Canvasses: A Partnering Canvas Example. http://fieltnotes.blogspot.pt/2010/12/alternative-business-model-canvasses.html, 2010.

[14] Erwin Fielt. An Extended Business Model Canvas for Co-Creation and Partnering, 2010.

[15] Erwin Fielt. To What Extent Is the Business Model Canvas Constraining? A Co-Creation Canvas Example. http://fieltnotes.blogspot.pt/2010/11/to-what-extent-is-business-model-canvas.html, 2010.

[16] Sabine Fließ and Michael Kleinaltenkamp. Blueprinting the Service Company: Managing Service Processes Efficiently. *Journal of Business Research*, 57(4):392–404, 2004.

[17] Tom Heath and Christian Bizer. Linked Data: Evolving the Web into a Global Data Space. Synthesis Lectures on the Semantic Web: Theory and Technology, 1(1):1–136, 2011.

[18] Jerry Hobbs and Feng Pan. Time Ontology in OWL. W3C Working Draft, 27, 2006.

[19] Antoine Isaac and Ed Summers. SKOS Simple Knowledge Organization System Primer. W3C Working Group Note. World Wide Web Consortium, 2009.

[20] Maya Kaner and Reuven Karni. Design of Service Systems Using a Knowledge-Based Approach. *Knowledge and Process Management*, 14(4):260–274, 2007.

[21] Reuven Karni and Maya Kaner. Teaching Innovative Conceptual Design of Systems in the Service Sector. *Technological Forecasting and Social Change*, 64(2):225–240, 2000.

[22] Reuven Karni and Maya Kaner. An Engineering Tool for the Conceptual Design of Service Systems. *Advances in Services Innovations*, pages 65–83, 2007.

[23] Sybren Kinderen and Jaap Gordijn. e3service: An Ontological Approach for Deriving Multi-Supplier IT-Service Bundles from Consumer Needs. In *Proceedings of the 41st Annual Hawaii International Conference on System Sciences*, 2008.

[24] Sybren Kinderen and Jaap Gordijn. Reasoning About Substitute Choices and Preference Ordering in e-Services. In *Advanced Information Systems Engineering*, pages 390–404. Springer, 2008.

[25] Holger Luczak, Christian Gill, and Bernhard Sander. Architecture for Service Engineering: The Design and Development of Industrial Service Work. In Dieter Spath and Klaus-Peter Fähnrich, editors, *Advances in Services Innovations*, pages 47–63. Springer Berlin Heidelberg, 2007.

[26] Paul Maglio, Stephen Vargo, Nathan Caswell, and Jim Spohrer. The Service System is the Basic Abstraction of Service Science. *Information Systems and e-Business Management*, 7(4):395–406, 2009.

[27] Frank Manola and Eric Miller. RDF Primer. W3C Recommendation, W3C, February 2004. Accessed Aug. 15, 2013.

[28] Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari. WonderWeb Deliverable D18, Ontology Library (Final). ICT Project, 33052, 2003.

[29] Alistair Miles, Brian Matthews, Michael Wilson, and Dan Brickley. SKOS Core: Simple Knowledge Organisation for the Web. In *International Conference on Dublin Core and Metadata Applications*, 2005.

[30] Christine Natschläger. Towards a BPMN 2.0 Ontology. In *Business Process Model and Notation*, pages 1–15. Springer, 2011.

[31] Alexander Osterwalder and Yves Pigneur. *Business Model Generation: A Handbook for Visionaries, Game Changers, and Challengers*. Wiley, 2010.

[32] Otto Petrovic, Christian Kittl, and Ryan Teksten. Developing Business Models for e-Business. Available at SSRN 1658505, 2001.

[33] Geert Poels. The Resource-Service-System Model for Service Science. In *Advances in Conceptual Modeling–Applications and Challenges*, pages 117–126. Springer, 2010.

[34] Lynn Shostack. Designing Services That Deliver. *Harvard Business Review*, 62(1):133–139, 1984.

[35] Eva Söderström, Birger Andersson, Paul Johannesson, Erik Perjons, and Benkt Wangler. Towards a Framework for Comparing Process Modelling Languages. In *Advanced Information Systems Engineering*, pages 600–611. Springer, 2006.

[36] Jim Spohrer and Paul Maglio. Service Science: Toward a Smarter Planet. *Introduction to Service Engineering*, pages 3–30, 2009.

[37] Alex Stolz, Bene Rodriguez-Castro, and Martin Hepp. RDF Translator: A RESTful Multi-Format Data Converter for the Semantic Web. Technical Report TR-2013-1, Universität der Bundeswehr München, July 2013.

[38] Bernard Vatant and Marc Wick. Geonames Ontology. http://www.geonames.org/ontology, 2012. Accessed at 31/05/2013.

[39] W3C SPARQL Working Group. SPARQL 1.1 Overview. W3C Recommendation, W3C, March 2013. Accessed Aug. 15, 2013.

[40] John Zachman. Enterprise Architecture: The Issue of the Century. *Database Programming and Design*, 10(3):44–53, 1997.

[41] Andreas Zolnowski, Martin Semmann, and Tilo Böhmann. Introducing a Co-Creation Perspective to Service Business Models. In *Enterprise Modelling and Information Systems Architectures (EMISA)*, page 243, 2011.