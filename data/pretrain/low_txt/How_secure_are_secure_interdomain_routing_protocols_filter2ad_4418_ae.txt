### Figure 10: Exporting Less

**Figure 10:**
- **Victim (v):** A stub AS serving a liberal arts college in Illinois.
- **Manipulator (m):** A large ISP competing with the victim’s other provider, p1, a local ISP in Illinois, to attract traffic destined for v.

#### Naive Strategy: "Shortest-Path Export-All" Attack
The manipulator announces his path to all neighbors. On the left, when the manipulator announces a path to his Tier 2 provider (T2), both T2 and its two Tier 1 providers (T1a and T1b) will route through the manipulator. As a result:
- T1a and T1b use four-hop paths to the victim.
- The manipulator attracts traffic from 40% of the ASes in the internetwork (13,463 ASes).
- This includes 44% of the ASes with at least 25 customers and 32% of ASes with at least 250 customers.

#### Clever Strategy
On the right, the manipulator increases his traffic volume by almost 25% by not exporting to his Tier 2 provider (T2). Because T2 no longer has a customer path to the victim, it is forced to use a peer path through T1c. Consequently:
- T2 now uses a peer path and does not export a path to T1a and T1b.
- T1a and T1b are forced to choose shorter three-hop peer paths to the victim through the manipulator.
- T1a and T1b now announce shorter paths to their customers, making them more attractive to the rest of the internetwork.
- The volume of traffic they send to the manipulator quadruples.
- The manipulator attracts 50% of the ASes in the internetwork (16,658 ASes), including 59% of the ASes with at least 25 customers and 29% of ASes with at least 250 customers.

#### Why It Works
The manipulator's strategy forces influential ASes (i.e., Tier 1s) to choose shorter peer paths over longer customer paths by suppressing announcements to certain providers, thus eliminating certain customer paths from the internetwork.

#### When It Works
This strategy involves using a clever export policy rather than lying about paths, making it effective against any protocol, including data-plane verification.

### 6.3 Attract More by Gaming Loop Detection!

To demonstrate that the identity of the ASes on the announced path can affect the amount of attracted traffic, our last example involves gaming BGP loop detection. This contradicts the optimality of the "Shortest-Path Export-All" attack strategy, which suggests announcing any shortest path regardless of the identity of the ASes on that short path.

#### Figure 11: False Loop Prefix Hijack
- **Manipulator (m):** A stub in Clifton, NJ, with two providers. The figure depicts his NJ-area provider, a1.
- **Victim (v):** A stub in Alabama.
- **Goal:** The manipulator wants to blackhole traffic destined for a prefix owned by the victim.

#### Standard Prefix Hijack
The manipulator announces the path (m, Prefix) and attracts traffic from most of the ASes in the internetwork (32,010 ASes). Tier 1 T1a prefers customer paths and chooses the five-hop customer path through the manipulator.

#### False Loop Prefix Hijack
The manipulator claims that an innocent AS (a2) originates the prefix, announcing (m, a2, Prefix) to his provider a1. However, when this false loop is announced to AS a2, BGP loop detection causes a2 to reject the path through the manipulator's provider a1. As a result:
- T1a has no customer path to the prefix and instead chooses the shorter peer path.
- T1a announces a shorter, four-hop path to his neighbors (T1a, a1, m, a2, Prefix), making him more attractive to the rest of the internetwork.
- The manipulator attracts 360 more ASes than the standard prefix hijack, i.e., 32,370 ASes.

#### Why It Works
The manipulator games BGP loop detection, effectively 'removing edges' from the network (i.e., the edge between a1 and a2), to force large ISPs to choose shorter peer paths over longer customer paths.

#### When It Works
This strategy involves lying about the path announced by an innocent AS (i.e., AS a2). Since S-BGP and data-plane verification prevent lying about paths, this strategy only works with BGP, origin authentication, or soBGP.

### 6.4 How Realistic Are These Examples?

While all the counterexamples we presented were found in CAIDA’s AS graph, we encourage the reader to view these examples as sample attack strategies that could succeed in the wild, rather than predictions of what would occur if a specific AS launched a given attack strategy. Any missing edge or wrongly inferred business relationship in CAIDA’s dataset introduces a gap between the actual ASes depicted and what would happen in practice.

#### How Common Are These Examples?
Each of our counterexamples is induced by a very particular AS graph topology. Our objective is not to argue that these examples are common; indeed, we had to work hard to find them. Instead, our goal is to contradict the optimality of the "Shortest-Path Export-All" attack strategy and to argue that the attack strategies to contradict its optimality could realistically occur in the wild.

#### Peering with Indirect Customers
Both Figures 10 and 11 rely on the existence of a pair of ASes (p, c), such that c is both a peer of p and also an indirect customer of p (e.g., ASes (T1a, m) and (T1b, m) in Figure 10 and ASes (T1a, a1) in Figure 11). While this topology may initially seem unusual, it can occur in practice due to evolving business relationships or "open" peering policies facilitated by Internet Exchange Points (IXPs). We found about 2K instances of this topology in each of our datasets. For more details, see the full version [1].

### 7. Finding Optimal Attacks Is Hard

After the bizarre attack strategies in Section 6, the reader might not be surprised by the following:

**Theorem 7.1:**
If ASes use the routing policies of Section 2.2, then finding a manipulator’s optimal traffic attraction attack strategy on a general AS graph is NP-hard. This theorem holds for:
- Any secure protocol variant.
- Interception attacks.

Our proof uses a reduction to the standard NP-hard problem of finding the maximum independent set of nodes in a graph. We also show that it is hard to approximate the optimal attack within a constant factor, suggesting that a full characterization of the manipulator’s optimal attack strategy will remain elusive. See the full version [1] for details.

### 8. Implementation Issues

Many of our results compare the efficacy of defensive filtering to that of soBGP and S-BGP. However, these mechanisms differ greatly in:
- The number of ASes that use them on the Internet today.
- The trust model for which they were designed.

#### Origin Authentication with RPKI/ROA
The operations community is working towards deploying origin authentication by developing a Resource Public Key Infrastructure (RPKI) to issue cryptographic public keys to ASes and routers, and Route Origin Authorizations (ROAs) to map the IP address space to owner ASes [7]. This infrastructure is a first step towards deploying soBGP or S-BGP.

#### Defensive Filtering in Practice
While defensive filtering is considered a best common practice on the Internet today and is used by several large ISPs, its implementation is far from perfect. The incentives to implement defensive filtering are lopsided, and the provider must manually maintain up-to-date "prefix lists" of the IP addresses owned by each of its stub customers. To address this, we suggest using RPKI and ROAs to automatically derive prefix lists for their stub customers. For more details, see the full version [1].

#### Trust Models
Defensive filtering operates in a problematic trust model, assuming every provider is honest. In contrast, S-BGP and soBGP ensure that even a malicious AS may only announce available paths (as long as it does not collude with, or compromise the keys of, some other AS) and allow any AS to validate the paths announced by any other AS.

### 9. Conclusions

Because we work within a model of routing policies, we caution against interpreting our results as hard numbers measuring the impact of an attack launched by a specific manipulator in the wild. However, the trends uncovered by our quantitative analysis provide useful insights, especially when averaged over multiple possible (manipulator, victim) pairs. These trends were consistent across multiple AS topology datasets [11–13]. Future work might explore how our results hold under different routing policy models.

While secure routing protocols can blunt traffic attraction attacks, we found that export policies are a very effective attack vector that these protocols do not address. Thus, we suggest deploying secure routing protocols (e.g., soBGP and S-BGP) in combination with mechanisms that police export policies (e.g., defensive filtering). Both are needed: defensive filtering to eliminate attacks by stub ASes and secure routing protocols to blunt attacks launched by larger ASes. Policing export policies is a significant challenge in practice, requiring voluntary compliance from each provider and difficult to check for proper implementation. Understanding these issues remains an important avenue for future research.

### Acknowledgments

The authors thank Jeff Lupien and Paul Oka for outstanding research assistance, and Boaz Barak, Randy Bush, Kevin Butler, Nick Feamster, Avinatan Hassidim, Elliott Karpilovsky, Arvind Krishnamurthy, Dave Ward, Dan Wendlandt, the members of the MSR-New England Lab, and the anonymous SIGCOMM reviewers for comments and discussions.

### References

[1] S. Goldberg, M. Schapira, P. Hummon, and J. Rexford, “How secure are secure interdomain routing protocols? Full version,” tech. rep., Microsoft Research MSR-TR-2010-18, June 2010.
[2] H. Ballani, P. Francis, and X. Zhang, “A study of prefix hijacking and interception in the Internet,” in ACM SIGCOMM, 2007.
[3] A. Pilosov and T. Kapela, “Stealing the Internet: An Internet-scale man in the middle attack,” Aug. 2008. Presentation at DefCon 16, http://eng.5ninesdata.com/~tkapela/iphd-2.ppt.
[4] S. Goldberg, S. Halevi, A. D. Jaggard, V. Ramachandran, and R. N. Wright, “Rationality and traffic attraction: Incentives for honest path announcements in BGP,” in ACM SIGCOMM, 2008.
[5] K. Butler, T. Farley, P. McDaniel, and J. Rexford, “A survey of BGP security issues and solutions,” Proceedings of the IEEE, January 2010.
[6] P. McDaniel, W. Aiello, K. Butler, and J. Ioannidis, “Origin authentication in interdomain routing,” Computer Networks, Nov. 2006.
[7] IETF, “Secure interdomain routing (SIDR) working group.” http://datatracker.ietf.org/wg/sidr/charter/.
[8] R. White, “Deployment considerations for secure origin BGP (soBGP).” draft-white-sobgp-bgp-deployment-01.txt, June 2003, expired.
[9] S. Kent, C. Lynn, and K. Seo, “Secure border gateway protocol (S-BGP),” J. Selected Areas in Communications, vol. 18, pp. 582–592, April 2000.
[10] E. L. Wong, P. Balasubramanian, L. Alvisi, M. G. Gouda, and V. Shmatikov, “Truth in advertising: Lightweight verification of route integrity,” in PODC, 2007.
[11] X. Dimitropoulos, D. Krioukov, M. Fomenkov, B. Huffaker, Y. Hyun, and kc claffy, “AS relationships: Inference and validation,” ACM SIGCOMM Computer Communication Review, Jan. 2007.
[12] Y.-J. Chi, R. Oliveira, and L. Zhang, “Cyclops: The Internet AS-level observatory,” ACM SIGCOMM Computer Communication Review, Oct. 2008.
[13] B. Augustin, B. Krishnamurthy, and W. Willinger, “IXPs: Mapped?,” in Proc. Internet Measurement Conference, Nov. 2009.
[14] G. Huston, “Interconnection, peering, and settlements,” in Internet Global Summit (INET), June 1999.
[15] L. Gao and J. Rexford, “Stable Internet routing without global coordination,” IEEE/ACM Transactions on Networking, 2001.
[16] L. Gao, “On inferring automonous system relationships in the Internet,” IEEE/ACM Transactions on Networking, vol. 9, pp. 733–745, Dec. 2001.
[17] J. Karlin, S. Forrest, and J. Rexford, “Autonomous security for autonomous systems,” Computer Networks, Oct. 2008.
[18] T. Griffin, F. B. Shepherd, and G. Wilfong, “The stable paths problem and interdomain routing,” IEEE/ACM Transactions on Networking, Apr. 2002.
[19] H. Chang, D. Dash, A. Perrig, and H. Zhang, “Modeling adoptability of secure BGP protocol,” in ACM SIGCOMM, Sept. 2006.
[20] Rensys Blog, “Pakistan hijacks YouTube.” http://www.renesys.com/blog/2008/02/pakistan_hijacks_youtube_1.shtml.
[21] M. Lad, D. Massey, D. Pei, Y. Wu, B. Zhang, and L. Zhang, “PHAS: A prefix hijack alert system,” in Proc. USENIX Security Symposium, 2006.