# Fraction of a Second per Hospital: Running Times and Experimental Results

## Table 3: Running Times (in Milliseconds) of Attacks per Hospital

Table 3 presents the average running times (over 200 hospitals) for each attack on different sets of attributes, each with a varying number of values.

| Attributes (# of Values) | Frequency Analysis | \(\ell_2\)-Optimization | Cumulative Attack |
|--------------------------|--------------------|------------------------|-------------------|
| Sex (2)                  | 0.11 ms            | 0.11 ms                | 0.31 ms           |
| Mortality Risk (4)       | 0.12 ms            | 0.12 ms                | 0.49 ms           |
| Admission Source (5)     | 0.12 ms            | 0.13 ms                | 0.60 ms           |
| Major Diagnostic Category (25) | 0.19 ms            | 0.20 ms                | 3.5 ms            |
| Age (125)                | 0.63 ms            | 3.03 ms                | 311.6 ms          |
| Length of Stay (365)     | 1.73 ms            | 68.7 ms                | 35,910 ms         |

### Observations
- The length of stay column requires significantly more time due to its large number of values (365), which especially affects the running time of \(\ell_2\)-optimization and cumulative attacks.
- The current implementation in MATLAB is very slow compared to other languages like C. A C implementation would likely decrease the running time by several orders of magnitude.

## 9. Experimental Results

For each hospital and each column in the EDB, we compute the accuracy of our attack as the number of encrypted cells for which the recovered plaintext matches the ground truth, divided by the total number of column cells.

### 9.1 Attacks on DTE-Encrypted Columns

#### Figure 3: \(\ell_2\)-Optimization on DTE-Encrypted Columns
- **Auxiliary Data**: 2004 HCUP/NIS
- **Target Data**: 200 largest hospitals from the 2009 HCUP/NIS dataset

The \(\ell_2\)-optimization attack recovers cells for a significant number of patients, even for attributes with a large number of distinct values such as Age and Length of Stay. Key results include:
- **Mortality Risk and Patient Death**: Recovered for 100% of patients in 99% and 100% of hospitals, respectively.
- **Disease Severity**: Recovered for 100% of patients in 51% of hospitals.
- **Race**: Recovered for at least 60% of patients in at least 69.5% of hospitals.
- **Major Diagnostic Category**: Recovered for at least 40% of patients in 27.5% of hospitals.
- **Primary Payer**: Recovered for at least 90% of patients in 37.5% of hospitals.
- **Admission Source**: Recovered for at least 90% of patients in 38% of hospitals.
- **Admission Type**: Recovered for at least 60% of patients in 65% of hospitals.
- **Age**: Recovered for at least 10% of patients in 84.5% of hospitals.
- **Length of Stay**: Recovered for at least 83% of patients in 50% of hospitals, due to most patients staying only a few days.

#### Figure 2: \(\ell_2\)-Optimization on DTE-Encrypted Columns
- **Auxiliary Data**: Texas PUDF
- **Target Data**: 200 largest hospitals from the 2009 HCUP/NIS dataset

The attack performs similarly well, with a small decrease in accuracy for Race and Major Diagnostic Category, likely due to regional differences in demographics.

### 9.2 Attacks on OPE-Encrypted Columns

#### Sorting Attack
- **Condition for Success**: Density of 1, meaning all possible values of an attribute are present in both the target and auxiliary data.
- **Density Analysis** (Figure 4):
  - **Large Hospitals**: Density is 1 for 100% of hospitals for Disease Severity and Mortality Risk, and 90% of hospitals for Admission Month.
  - **Small Hospitals**: Density is 1 for 95% of hospitals for Disease Severity, Mortality Risk, and Admission Month.
- **Conclusion**: The sorting attack would recover 100% of the cells for these columns for these hospitals.

#### Cumulative Attack
- **Evaluation**: Executed over both large and small hospitals.
- **Results** (Figure 5):
  - **Large Hospitals** (Figure 5a):
    - Recovered at least 80% of patient records for 95% of hospitals for all attributes.
    - Specific recoveries: 100% for Admission Month, Disease Severity, and Mortality Risk; 99.77% for Length of Stay; 99% for Age; 100% for Admission Type.
  - **Small Hospitals** (Figure 5b):
    - Despite low densities, the attack performed well, recovering 100% for Disease Severity and Mortality Risk; 100% for Admission Month in 99.5% of hospitals; 95% for Length of Stay in 98% of hospitals; 95% for Age in 78% of hospitals; 100% for Admission Type in 69.5% of hospitals.

## 10. Conclusion

We study the concrete security of PPE-based encrypted database systems such as CryptDB and Cipherbase in a real-world scenario. We consider four different attacks and experimentally demonstrate that they can decrypt a large fraction of cells from DTE- and OPE-encrypted columns. Our findings are particularly relevant for EMR databases but are expected to be applicable to a wide variety of databases, provided appropriate auxiliary information is available.

## Acknowledgements

The authors thank Josh Benaloh, Melissa Chase, and Tadayoshi Kohno for helpful conversations and encouragement during the early stages of this work.

## References

[1] Fifth Annual Benchmark Study on Privacy and Security of Healthcare Data. [Link](http://www.ponemon.org/blog/criminal-attacks-the-new-leading-cause-of-data-breach-in-healthcare). Accessed: 2015-05-15.

[2] Google Encrypted Big Query. [GitHub](https://github.com/google/encrypted-bigquery-client).

[3] HCUP Databases. Healthcare Cost and Utilization Project (HCUP). 2008-2009. Agency for Healthcare Research and Quality, Rockville, MD. [Link](www.hcup-us.ahrq.gov/databases.jsp).

[4] Hospital Discharge Data Public Use Data File. [Link](http://www.dshs.state.tx.us/THCIC/Hospitals/Download.shtm).

[5] Hospital Inpatient Discharges (SPARCS De-Identified): 2012. [Link](https://health.data.ny.gov/Health/Hospital-Inpatient-Discharges-SPARCS-De-Identified/u4ud-w55t).

[6] OpenEMR. [Link](http://www.open-emr.org/). Accessed: 2015-05-15.

[7] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu. Order Preserving Encryption for Numeric Data. In SIGMOD, pages 563–574, 2004.

[18] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart. Leakage-Abuse Attacks against Searchable Encryption. In To appear at the ACM Conference on Communications and Computer Security (CCS ’15). ACM, 2015.

[19] N. Chenette, A. O’Neill, G. Kollios, and R. Canetti. Modular Order-Preserving Encryption, Revisited. 2015.

[20] R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky. Searchable Symmetric Encryption: Improved Definitions and Efficient Constructions. In CCS, pages 79–88, 2006.

[21] C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating Noise to Sensitivity in Private Data Analysis. In TCC, pages 265–284, 2006.

[22] Y. Elovici, R. Waisenberg, E. Shmueli, and E. Gudes. A Structure Preserving Database Encryption Scheme. In Secure Data Management, pages 28–40, 2004.

[23] C. Gentry. Fully Homomorphic Encryption Using Ideal Lattices. In STOC, pages 169–169, 2009.

[24] O. Goldreich and R. Ostrovsky. Software Protection and Simulation on Oblivious RAMs. JACM, 43(3):431–473, 1996.

[25] M. Islam, M. Kuzu, and M. Kantarcioglu. Access Pattern Disclosure on Searchable Encryption: Ramification, Attack and Mitigation. In NDSS, 2012.

[26] H. Kadhem, T. Amagasa, and H. Kitagawa. MV-OPEs: Multivalued-Order Preserving Encryption Scheme: A Novel Scheme for Encrypting Integer Value to Many Different Values. IEICE TRANSACTIONS on Information and Systems, 93(9):2520–2533, 2010.

[27] H. Kadhem, T. Amagasa, and H. Kitagawa. A Secure and Efficient Order Preserving Encryption Scheme for Relational Databases. In KMIS, pages 25–35, 2010.

[28] J. Katz and Y. Lindell. Introduction to Modern Cryptography. Chapman & Hall/CRC, 2008.

[29] F. Kerschbaum and A. Schroepfer. Optimal Average-Complexity Ideal-Security Order-Preserving Encryption. In CCS, pages 275–286, 2014.

[30] H. W. Kuhn. The Hungarian Method for the Assignment Problem. Naval Research Logistics Quarterly, 2, 1955.

[31] S. Lee, T. Park, D. Lee, T. Nam, and S. Kim. Chaotic Order Preserving Encryption for Efficient and Secure Queries on Databases. IEICE transactions on information and systems, 92(11):2207–2217, 2009.

[8] I. H. Akin and B. Sunar. On the Difficulty of Securing Web Applications Using CryptDB. In PriSec, 2014.

[9] I. A. Al-Kadit. Origins of Cryptology: The Arab Contributions. Cryptologia, 16(2):97–126, 1992.

[10] A. Arasu, S. Blanas, K. Eguro, R. Kaushik, D. Kossmann, R. Ramamurthy, and R. Venkatesan. Orthogonal Security with Cipherbase. In CIDR, 2013.

[11] M. Bellare, A. Boldyreva, and A. O’Neill. Deterministic and Efficiently Searchable Encryption. In CRYPTO, pages 535–552, 2007.

[12] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill. Order-Preserving Symmetric Encryption. In EUROCRYPT, pages 224–241, 2009.

[13] A. Boldyreva, N. Chenette, and A. O’Neill. Order-Preserving Encryption Revisited: Improved Security Analysis and Alternative Solutions. In CRYPTO, pages 578–595, 2011.

[14] D. Boneh, K. Lewi, M. Raykova, A. Sahai, M. Zhandry, and J. Zimmerman. Semantically Secure Order-Revealing Encryption: Multi-Input Functional Encryption Without Obfuscation. In EUROCRYPT, pages 563–594, 2015.

[15] D. Boneh, A. Sahai, and B. Waters. Functional Encryption: Definitions and Challenges. Technical report, TCC, 2011.

[16] T. Brekne, A. Årnes, and A. Øslebø. Anonymization of IP Traffic Monitoring Data: Attacks on Two Prefix-Preserving Anonymization Schemes and Some Proposed Remedies. In PETs, pages 179–196, 2006.

[17] R. Burkard, M. Dell’Amico, and S. Martello. Assignment Problems. Society for Industrial and Applied Mathematics, 2012.

[33] J. Munkres. Algorithms for the Assignment and Transportation Problems. Journal of the Society for Industrial and Applied Mathematics, 5(1), 1957.

[34] R. A. Popa, F. H. Li, and N. Zeldovich. An Ideal-Security Protocol for Order-Preserving Encoding. In S&P, pages 463–477, 2013.

[35] R. A. Popa, C. Redfield, N. Zeldovich, and H. Balakrishnan. CryptDB: Protecting Confidentiality with Encrypted Query Processing. In SOSP, pages 85–100, 2011.

[36] T. Sanamrad, L. Braun, D. Kossmann, and R. Venkatesan. Randomly Partitioned Encryption for Cloud Databases. In DBSec XXVIII, pages 307–323, 2014.

[37] D. Song, D. Wagner, and A. Perrig. Practical Techniques for Searching on Encrypted Data. In S&P, pages 44–55, 2000.

[38] J. Xu, J. Fan, M. H. Ammar, and S. B. Moon. Prefix-Preserving IP Address Anonymization: Measurement-Based Security Evaluation and a New Cryptography-Based Scheme. In ICNP, pages 280–289, 2002.

[39] Z. Yang, S. Zhong, and R. N. Wright. Privacy-Preserving Queries on Encrypted Data. In ESORICS, pages 479–495, 2006.