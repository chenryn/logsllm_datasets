# Trends in Licensing of Security Tools
## Chuck Willis
### DefCon 13, July 2005
**Most recent slides available at:** [http://www.securityfoundry.com/](http://www.securityfoundry.com/)

---

### Purpose
- Discuss licensing trends and their impact on the security community.
- Explore ways to improve licensing (if necessary).
- Educate security tool users about license requirements to avoid infringements.

**Note: This session is designed to be interactive.**

---

### Disclaimers
- Specific tools with various license restrictions will be mentioned.
  - This is not intended as a critique of the tool or its author(s).
  - I believe that the authors of the security tools mentioned have provided a valuable service to the community by releasing these tools.
- This session is not a substitute for reading the specific license agreements of the tools.

---

### About Me
- I do not work for a commercial consulting or software company.
- I am not a Free Software zealot.
- I am not a lawyer, and this is not legal advice.
- I consider myself a typical security tool user:
  - I primarily use Linux and Windows, occasionally other Unix variants.
  - I am not an expert programmer or developer.
  - I compile tools on Unix and Windows.
  - I debug compilation issues, including porting to different platforms.
  - I build small tools and scripts to automate tasks.
  - I modify tools to better suit my needs.
  - I share tools and tool modifications with others.

---

### Motivation
- I use many security tools.
- I read the licenses.
- I have been surprised by some of the licenses.
- Over the years, I have observed several trends in the licenses of these tools.

---

### Example
**License for Wikto:**
[http://www.sensepost.com/research/wikto/](http://www.sensepost.com/research/wikto/)

> Copyright (C) 2004, 2005 SensePost Research
>
> This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License (...).
>
> Additionally, should you find this software useful, you should buy a drink of their choice for the contributors if you meet them at a conference. However, nobody ever reads this fine print.

---

### Scope
- This session will cover tools that can be obtained and used without cost for at least some purposes, but:
  - Not strictly commercial tools.
  - Not Open Source tools (OSI Certified license).
- The session will consider running and redistributing the (possibly modified) tool.
- The session does not address selling someone else's tool or a derived work (most licenses restrict this).

---

### Open Source Tools
There are many excellent security tools released under OSI Certified licenses:
- NMap: [http://www.insecure.org/](http://www.insecure.org/)
- Ethereal: [http://www.ethereal.com/](http://www.ethereal.com/)
- Metasploit Framework: [http://www.metasploit.com/](http://www.metasploit.com/)
- Sleuthkit and Autopsy: [http://www.sleuthkit.org/](http://www.sleuthkit.org/)
- WebScarab: [http://www.owasp.org/software/webscarab.html](http://www.owasp.org/software/webscarab.html)
- Paros Web Proxy: [http://www.parosproxy.org/](http://www.parosproxy.org/)
- Kismet: [http://www.kismetwireless.net/](http://www.kismetwireless.net/)
- Hping: [http://www.hping.org/](http://www.hping.org/)
- Nikto: [http://www.cirt.net/code/nikto.shtml](http://www.cirt.net/code/nikto.shtml)
- Many others

---

### Licensing Trends I Have Noticed
#### More Tools Require Payment or Permission for Some Uses
- Some are free for certain uses but do not specify the price or payment method for other uses.
- Examples:
  - THC-RUT: [http://www.thc.org/thc-rut/](http://www.thc.org/thc-rut/)
  - Foundstone Tools: [http://www.foundstone.com/resources/freetools.htm](http://www.foundstone.com/resources/freetools.htm)
  - Registered plugins for Nessus: [http://www.nessus.org/plugins/](http://www.nessus.org/plugins/)
  - VRT Certified Rules for Snort: [http://www.snort.org/rules/](http://www.snort.org/rules/)
  - HTTPrint: [http://net-square.com/httprint/](http://net-square.com/httprint/)

#### More Tools Restrict Redistribution
- Users can only obtain the tool from the author.
- What if the author is no longer available?
- Examples:
  - Sysinternals Tools: [http://www.sysinternals.com/](http://www.sysinternals.com/)
  - Netstumbler: [http://www.netstumbler.com/](http://www.netstumbler.com/)
  - Foundstone Tools
  - Registered plugins for Nessus
  - VRT Certified rules for Snort

#### More Tools Prohibit Modification and Reverse Engineering
- Denies users the ability to customize the tool and fix bugs themselves.
- Examples:
  - Cain and Abel: [http://www.oxid.it/cain.html](http://www.oxid.it/cain.html)
  - Foundstone Tools
  - Registered plugins for Nessus
  - Netstumbler

#### More Tools Are Distributed Without Source Code
- While not strictly a licensing issue, the lack of source code prevents easy modifications, improvements, and bug fixes by users.
- Source code is valuable for learning and porting the tool to other platforms.
- Tools without source code often run only on Windows.
- Examples:
  - Achilles: [http://www.mavensecurity.com/achilles](http://www.mavensecurity.com/achilles)
  - Brutus: [http://www.hoobie.net/brutus/](http://www.hoobie.net/brutus/)
  - Sam Spade for Windows: [http://www.samspade.org/ssw/](http://www.samspade.org/ssw/)
  - Odysseus: [http://www.wastelands.gen.nz/odysseus/](http://www.wastelands.gen.nz/odysseus/)
  - Netstumbler
  - Cain and Abel
  - Foundstone Tools

#### Some Tools Require Credit in Consulting Reports
- Examples:
  - THC-Hydra: [http://thc.org/thc-hydra/](http://thc.org/thc-hydra/)
  - THC-Amap: [http://thc.org/thc-amap/](http://thc.org/thc-amap/)

From THC-Amap's License:
> 4. If this tool is used while providing a commercial service (e.g., as part of a penetration test), the report must state the tool's name and version, and additionally the author (van Hauser and Dj RevMoon) and the distribution homepage ([http://www.thc.org](http://www.thc.org)).

#### Inconsistent Licenses
- Sometimes the license on the tool’s website differs from the one included with the tool.
- Example: THC-Hydra and THC-Amap both ship with slightly different licenses from what is on their websites.
- Sometimes the author contradicts the tool's license.
- Examples:
  - Foundstone's HacmeBooks and HacmeBank:
    - License states they are for “personal and non-commercial use.”
    - Emails with authors indicate commercial use in an internal lab is acceptable.
  - Registered plugins for Nessus:
    - License prevents reverse engineering or modifying plugins.
    - Mailing list posts state that modifying the plugins and posting changes to the mailing list is acceptable.

#### Lack of Clearly Defined Licenses
- The license may be in the tool distribution but hard to find.
- The license may not be present at all.
- The license may be incomplete, not addressing some issues and uses.
- The tool may be a small exploit, script, or patch posted in an online forum without a specified license.
- Examples:
  - enum: [http://www.bindview.com/Services/RAZOR/Utilities/Windows/enum_readme.cfm](http://www.bindview.com/Services/RAZOR/Utilities/Windows/enum_readme.cfm)
  - Hobbit's original netcat: [http://packetstormsecurity.org/UNIX/utilities/nc110.tgz](http://packetstormsecurity.org/UNIX/utilities/nc110.tgz)
  - John the Ripper: [http://www.openwall.com/john/](http://www.openwall.com/john/)
    - Solar Designer is aware of the issue with version 1.6.
    - Version 1.7 will be released under the GPL.
  - SQLSecurity.com Free Tools: [http://sqlsecurity.com/DesktopDefault.aspx?tabid=26](http://sqlsecurity.com/DesktopDefault.aspx?tabid=26)
  - Brutus
  - Odysseus
  - Achilles
  - Almost all mailing list, bulletin board, and newsgroup postings
  - Almost all exploits
  - Many more...

---

### Discussion
- Do you agree that these trends exist?
- Overall, is the current state of security tool licensing good or bad?
- What would you do to improve it?

---

### My Suggestions
#### For Tool Users
- Read and follow tool licenses.
- Do not use the tool if you cannot or do not want to follow the license.
- Politely work with tool writers to clarify any ambiguous or lacking licenses.
- Do not use legal trickery to follow the letter of the license and violate its spirit.

#### For Tool Writers
- Follow the license for any other software incorporated into your tool.
- Choose a license or licenses and include them with every tool.
- Remember: You are the copyright holder and can add an additional license to the same tool or a derivative work at any time.
- Avoid over-licensing. Do not use an overly restrictive license for a relatively simple tool.
- Say what you mean in the license and mean what you say. Do not restrict something in the license and then tell people in other ways that it is acceptable.
- If the tool is meant to be “Open Source,” use a standard, OSI Certified license instead of creating your own ([http://opensource.org/](http://opensource.org/)).
- If payment is required for selected uses:
  - Make the cost reasonable and easy to find.
  - Make finding and following purchasing instructions easy for the users.
  - Specify what upgrades (if any) are included in the purchase price.
  - Specify what support (if any) is included in the purchase price.
  - Consider offering bundles of programs (possibly from other authors) in one purchase to ease administrative burden on users.
  - Clearly define those uses, considering:
    - Commercial Users
      - Testing and development use
      - Internal company use
      - External and consulting use
    - Educational Institutions (K-12, College, Universities; Private and Public)
    - Government Entities (Local, State, National)
    - Charitable Organizations
    - Other Non-Profit Entities
    - Home Users
- If you wish to restrict redistribution of the tool, I recommend against disallowing it entirely:
  - Allow users to redistribute directly to other users or potential users.
  - Allow anyone to distribute the tool widely if the tool is no longer available from the original source.
- Make source code available and allow:
  - Modification for internal use so users can easily and legally address simple bugs, porting issues, and tool improvements themselves.
  - Users to distribute modifications to one another.
- Ensure that the source code is complete, including build files and any modified libraries.
- Include at least a short description of how to build the tool.
- Make the tool license clear and consistent:
  - Post the license on the website, accessible before downloading the tool.
  - Include a summary of the license in any release notices or news items.
  - Include the license in the tool distribution, in a file named “COPYING,” “LICENSE,” or similar.
  - Include the license or a summary of the license in the tool's online help.
  - Summarize the license when presenting the tool at conferences and similar events.

#### For Conference and Training Organizers
- Consider requiring that tools presented be made available to conference attendees free of cost for all purposes.
- Ensure that presenters make the license clear for tools presented.
- Ensure licenses are clearly indicated for tools provided to attendees.
- Ensure that tool licenses are not violated if tools are included with conference materials.

#### For Online Forum Administrators
- Decide on a “default” license for scripts and code posted.
- I recommend making postings fall under the MIT license or a BSD-style license.
- Patches to existing tools should be, by default, dual-licensed under:
  - The forum's default license.
  - The existing tool's license.
- Decide if posting under a different license will be allowed. Postings under a license that restricts redistribution may cause problems with mailing list archives.
- Make the forum's license policy clear to current and new members. Include such information in any FAQ or website for the forum.

---

### Conclusions, Comments, and Questions
Thank you for your attention. I look forward to your feedback and questions.

**Trends in Licensing of Security Tools**
**Chuck Willis**
**DefCon 13, July 2005**
**Most recent slides available at:** [http://www.securityfoundry.com/](http://www.securityfoundry.com/)