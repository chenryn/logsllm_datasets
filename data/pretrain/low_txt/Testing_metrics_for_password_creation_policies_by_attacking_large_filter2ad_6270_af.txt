### Password Mangling Rules and Security Considerations

We propose the implementation of mangling rules to enhance the security of user-generated passwords. This suggestion, however, is preliminary and requires further research, including real-world use case studies, to ensure its effectiveness. The primary motivation behind this proposal is to highlight alternative methods for strengthening password security, beyond simply mandating longer passwords with more character requirements.

### Evaluation of Password Entropy

Our experiments clearly demonstrate that the concept of password entropy, as outlined in the NIST SP800-63 document, does not provide a reliable metric for assessing the security of password creation policies. This critique is not intended to undermine the overall quality of the NIST document, which remains highly valuable. Additionally, our empirical evidence supports the findings in [7], confirming that Shannon entropy cannot be directly converted into the guessing entropy of password creation policies.

### Security of Common Password Policies

In our subsequent analysis, we evaluated the security provided by common password creation policies, such as minimum length and character set requirements, against online attacks. Our findings indicate that, without an external policy that manually adds randomness to a user’s password or an implicit reject function that disallows weak passwords, most common policies remain vulnerable to online attacks. This vulnerability stems from a subset of users choosing easily guessable passwords that still meet the policy requirements, such as "Password!1". The feasibility and cost-effectiveness of such attacks depend on factors like lockout policies, the value of the target, and user training. By using real-life sets of disclosed passwords, our experiments provide deeper insights into how people create passwords and the vulnerabilities associated with these choices.

### Alternative Password Creation Methods

We also propose several alternative methods for password creation policies. One of these methods involves evaluating the probability of a human-generated password by parsing it with a grammar trained on previously disclosed password lists. This approach allows us to develop a more robust reject function compared to a simple blacklist, while still providing users with as much freedom as possible within the security constraints of the system.

### Future Research Directions

Further research is needed to address unresolved issues. For example, how do passwords used for high-value targets, such as corporate networks or bank accounts, compare to those collected from various websites? Unfortunately, the opportunities for such research are increasing as more sites are compromised and more datasets become public. We hope that this paper will expand the discussion on using empirical data from non-standard sources to evaluate the security provided by different policies and technologies.

### Acknowledgements

This work was supported in part by the U.S. National Institute of Justice under Grant 2006-DN-BX-K007. We would like to acknowledge the contributions of Breno de Medeiros and Bill Glodek in the development of the password cracking grammar described in this paper.

### References

[1] W. Burr, D. Dodson, R. Perlner, W. Polk, S. Gupta, E. Nabbus, “NIST Special Publication 800-63-1 Electronic Authentication Guideline”, Computer Security Division, Information Technology Laboratory, National Institute of Standards and Technology, Gaithersburg, MD, April, 2006.

[2] Office of Management and Budget, “Draft Agency Implementation, Guidance for Homeland Security, Presidential Directive 12”, August 2004.

[3] P. Bowen, A. Johnson, J. Hash, C. Dancy Smith, D. Steinberg, “NIST Special Publication 800-66 An Introductory Resource Guide for Implementing the Health Insurance Portability and Accountability Act (HIPAA) Security Rule”, Computer Security Division, Information Technology Laboratory, National Institute of Standards and Technology, Gaithersburg, MD.

[4] C.E. Shannon, "A Mathematical Theory of Communication", Bell System Technical Journal, vol. 27, pp. 379-423, 623-656, July, October, 1948.

[5] C. Herley, “So Long and No Thanks for the Externalities: The Rational Rejection of Security Advice by Users.” NSPW 09, September 8-11 2009 Oxford, United Kingdom.

[6] A. Vance, “If Your Password is 123456 Just Make it HackMe” New York Times, January 20th, 2010. Page A1.

[7] E. R. Verheul. “Selecting secure passwords”, CT-RSA 2007, Proceedings Volume 4377 of Lecture Notes in Computer Science, pages 49–66. Springer Verlag, Berlin, 2007.

[8] J.L. Massey, “Guessing and Entropy,” Proc. 1994 IEEE International Symposium on Information Theory, 1995, p.329.

[9] The OpenWall Group, [Software] John the Ripper password cracker, [Online Document] [cited 2-19-2010] Available HTTP http://www.openwall.com.

[10] A list of popular password cracking wordlists, 2005, [Online Document] [cited 2010 January 14] Available HTTP http://www.outpost9.com/files/WordLists.html.

[11] M. Weir and S. Aggarwal. “Cracking 400,000 Passwords or How to Explain to Your Roommate why the Power-Bill is a Little High”, Defcon 17, Las Vegas, NV, August 2009.

[12] J. Leversund “The Password Meta Policy” [Online Document] [cited 2010 April 16] Available HTTP http://securitynirvana.blogspot.com/2010/02/password-meta-policy.html.

[13] G. Bard, “Spelling-Error Tolerant, Order Independent Pass-Phrases via the Damerau-Levenshtein String-Edit Distance Metric” Fifth Australasian Symposium on ACSW Frontiers - Volume 68 (Ballarat, Australia, January 30 - February 02, 2007), 117-124.

[14] A. Forget, S. Chiasson, P.C. van Oorschot, R. Biddle, “Improving Text Passwords through Persuasion.” Symposium on Usable Privacy and Security (SOUPS) 2008, July 23–25, 2008, Pittsburgh, PA USA.

[15] B. Schneier, “Write Down Your Password”, June 17, 2005 [Online Document] [cited 2010 April 16] Available HTTP http://www.schneier.com/blog/archives/2005/06/write_down_your.html.

[16] Various Authors, “Faithwriters.com hacked message posts” [Online Document] [cited 2010 April 16] Available HTTP http://forums.crosswalk.com/m_4252083/mpage_1/tm.htm.

[17] B. Ryan, “The Hacking of the http://db.singles.org” [Online Document] [cited 2010 April 16] Available HTTP http://msmvps.com/blogs/williamryan/archive/2009/02/22/th_hacking_of_http_db_singles_org.aspx.

[18] M. Weir, Sudhir Aggarwal, Breno de Medeiros, Bill Glodek, “Password Cracking Using Probabilistic Context Free Grammars,” Proceedings of the 30th IEEE Symposium on Security and Privacy, May 2009.

[19] R. Morris and K. Thompson. “Password security: a case history” Communications. ACM, 22(11):594–597, 1979.

[20] A. Narayanan and V. Shmatikov, Fast Dictionary Attacks on Passwords Using Time-Space Tradeoff, CCS’05, November 7–11, 2005, Alexandria, Virginia.

[21] J. Yan, A. Blackwell, R. Anderson, and A. Grant. Password Memorability and Security: Empirical Results. IEEE Security and Privacy Magazine, Volume 2, Number 5, pages 25-31, 2004.

[22] T. Wu, "A real-world analysis of kerberos password security," in 1999 Network and Distributed System Security Symposium, February 1999.

[23] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szydlowski, R. Kemmerer, C. Kruegel, and G. Vigna, "Your botnet is my botnet: Analysis of a botnet takeover," Tech. Rep., April 2009.

[24] Sophos, “Security at risk as one third of surfers admit they use the same password for all websites”, [Online Document] [cited 2010 July 14] Available HTTP http://www.sophos.com/pressoffice/news/articles/2009/03/password-security.html.

[25] L. Clair, L. Johansen, W. Enck, M. Pirretti, P. Traynor, P. McDaniel and T. Jaeger, “Password Exhaustion: Predicting the End of Password Usefulness” ICISS, volume 4332 of Lecture Notes in Computer Science, pages 37-55, 2006.

[26] J. Bonneau, S. Preibusch, “The Password Thicket: Technical and Market Failures in Human Authentication on the Web”, The Ninth Workshop on the Economics of Information Security, WEIS 2010.

[27] K. Zetter, “Weak Password Brings ‘Happiness’ to Twitter Hacker” [Online Document] [cited 2010 July 19] Available HTTP http://www.wired.com/threatlevel/2009/01/professed-twitt/.

### Appendix 1: Information about the Password Lists

#### The RockYou.com List
This list was obtained through a SQL injection attack on the RockYou.com website [6]. The exploit code was first shared on the darkc0de.com blackhat message board, and multiple hackers took advantage of it. One hacker later publicly posted the list, making it widely available. Theoretically, the RockYou website had a password policy requiring passwords to be between 8 and 14 characters long and to exclude special characters. However, the actual list contains many passwords that do not meet these requirements. The list also includes passwords for various social networking sites such as Facebook, MySpace, and Friendster. The list we obtained did not include usernames or email addresses.

#### The FaithWriters.com List
It is unknown how this site was compromised, but it was likely due to an SQL injection attack [16]. The list we obtained included both email addresses and passwords. The FaithWriters website primarily served Christian writers. It is suspected that the attacker was associated with the 4chan.org or Ebaumsworld message boards. The website required a minimum password length of six characters, and all but six passwords in the list complied with this requirement.

#### The Singles.org List
The singles.org site was compromised via query string injection, where authentication was done via URLs [17]. The site marketed itself as a dating website for Christian singles. News of the hack spread quickly to the 4chan.org and ebaumsworld message boards, where users exploited the vulnerability to access all the passwords on singles.org. In many cases, the attackers used these passwords to log into other accounts belonging to the users of singles.org, leading to serious compromises of Facebook, webmail, Amazon, PayPal, and other accounts. The site required passwords to be eight or fewer characters long. The list we obtained contained email addresses and passwords.

#### The Neopets.com List
It is unclear how this list was originally obtained, but it was likely through a phishing attack. Researchers first became aware of the list when it was posted publicly on the pastebin.com website. While it is possible that the list is not associated with the Neopets site, the large number of passwords corresponding to common Neopets terminology makes this unlikely. Neopets.com is a game where users raise electronic pets and battle each other, primarily targeted at a younger audience. The list contained email addresses and passwords.

#### The PhpBB.com List
The PhpBB list was obtained by a hacker who exploited a flaw in a third-party plugin associated with the phpBB bulletin board software [11]. This is ironic, as the site is the main development website for the bulletin board. The site did not store user passwords in plain text; instead, all passwords were hashed using either one round of MD5 or a salted hash consisting of several thousand rounds of MD5. The reason for these two hashing algorithms was that the site had upgraded its forum software, but until a user logged in, their passwords were not converted to the new hashing scheme. The attacker managed to crack only 24% of the targeted passwords using an online password cracking program and then published the password hashes, cracked passwords, and a write-up of their attack. We independently cracked 97% of the MD5-hashed passwords using two desktop computers. The PhpBB site did not enforce any password creation policy.

### Appendix 2: Statistical Breakdown of the Password Lists

| **Source**          | **Number of Passwords** | **Average Length (chars)** | **% Uppercase** | **% Digits** | **% Special Chars** | **% Lowercase + Digits** | **% 7+ Chars, Uppercase, Lowercase, Digits, Special Chars** |
|---------------------|-------------------------|----------------------------|-----------------|--------------|---------------------|--------------------------|-------------------------------------------------------------|
| FaithWriters.com    | 6,193                   | 7.69                       | 9.43            | 43.54        | 0.14                | 90.50                    | 0.03                                                        |
| RockYou.com*        | 32,603,388              | 7.88                       | 5.95            | 54.08        | 3.45                | 91.55                    | 0.11                                                        |
| Singles.org         | 24,870                  | 6.62                       | 8.51            | 32.88        | 0.20                | 90.76                    | 0.14                                                        |
| Phpbb.com**         | 259,424                 | 7.27                       | 7.21            | 45.77        | 1.33                | 91.31                    | 0                                                           |
| Neopets.com         | 11,732                  | 6.68                       | 2.53            | 57.19        | 1.78                | 95.61                    | 0                                                           |

*The RockYou password statistics are taken from the RockYou32 training list, which contained 1 million randomly selected passwords.
**The PhpBB statistics only include the 97% of passwords we managed to crack.