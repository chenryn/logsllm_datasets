### Common Practice of Terminals
When a cardholder attempts to use the contactless interface and it is not supported, terminals typically reject the attempt and instruct the cardholder to switch to the contact interface.

### V. Analysis Results
We conducted a comprehensive, automated security analysis of 40 configurations of EMV, encompassing both contact and contactless transactions. This section details the results of our thorough analysis.

#### A. Analysis Results for the EMV Contact Protocol
Our analysis of the 24 configurations of the EMV contact protocol is summarized in Table I. While there were no major surprises, the results highlight the benefits of a comprehensive formalization and analysis. We rediscovered known attacks on the contact protocols and identified new, albeit relatively difficult to execute, attacks that have limited practical relevance. The secrecy results, which are identical across all models, have been omitted from the table. All our models and proofs are available at [33].

**Key Findings:**
- **Disagreement on CVM Selection:** Our analysis revealed discrepancies between the terminal and the card, as well as between the bank and the card, regarding the selected Cardholder Verification Method (CVM) for transactions using SDA or offline PIN verification (Table I, Remark 1).
- **PIN Bypass Attack:** For transactions where the terminal performs offline PIN verification, we identified a trace representing a PIN bypass attack first observed by Murdoch et al. [1] for transactions using SDA. In this attack, a man-in-the-middle sends a success response to the terminal’s PIN verification request, blocking the actual request. Consequently, the card believes no PIN verification was required, leading to a disagreement between the terminal and the card. The terminal then forwards the transaction to the bank, causing a further disagreement.
- **Prerequisite for PIN Bypass Attack:** For this attack to succeed, the card must not abort the transaction even if it detects a mismatch with the CVM used. This appears to be the case in practice, although EMV's specification is not explicit about it. We successfully tested this with three different Mastercard cards using our Android app, giving us confidence that it also occurs in contact transactions.

**Additional Vulnerabilities:**
- **Transaction Cryptogram (TC) Modification:** All transactions using SDA or DDA are vulnerable to TC modification because the card does not authenticate the TC to the terminal (Table I, Remark 2).
- **PIN Security:** Our analysis indicates that the PIN is not secret. A man-in-the-middle attack can use a compromised bank’s private key to produce fake card records, making the terminal believe that the only supported CVM is plain PIN. This allows the attacker to intercept and learn the PIN entered by the cardholder. However, this attack is non-trivial and requires:
  1. Knowledge of a compromised bank’s private key.
  2. Inconspicuous control over the terminal’s contact interface.

**Summary:**
- Only three configurations of the EMV contact protocol guarantee secure transactions in terms of the three main properties considered. These configurations, highlighted in bold in Table I, use CDA as the authentication method.
- When combined with online PIN as the CVM, the resulting configuration allows all transactions (high and low value) and is secure. It is the only configuration that effectively verifies the cardholder’s identity.
- The other two configurations delegate this check to the cashier, e.g., via a paper signature, making them unsuitable for high-value transactions in many countries.

#### B. Analysis Results for the EMV Contactless Protocol
Our analysis of the 16 configurations of the EMV contactless protocol, summarized in Table II, uncovered new, potentially high-impact attacks.

**Key Findings:**
- **Security for High-Value Transactions:** The Mastercard contactless protocol provides security for all high-value transactions.
- **AC Modification Vulnerability:** During offline transactions using SDA or DDA, the card does not authenticate the Application Cryptogram (AC) to the terminal (Table II, Lines 5, 7, 9, and 11, Remark 2). This allows a man-in-the-middle to modify the AC (or Transaction Cryptogram).

These findings underscore the importance of robust security measures and the need for continuous improvement in EMV protocols to mitigate potential vulnerabilities.