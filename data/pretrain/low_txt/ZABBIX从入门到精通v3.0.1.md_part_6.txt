### 优化后的文本

#### 系统默认值
- `iowait`
- `system.cpu.systemX`
- `system.cpu.userX`
- `interrupt`
- `softirq`
- `steal`

#### 平均负载模式
- 可用值:
  - `avg1` (一分钟平均，默认值)
  - `avg5` (五分钟平均)
  - `avg15` (十五分钟平均)

#### 主机名
- **键**: `system.hostname[]`
- **返回**: 主机字符串
- **类型** (仅用于 Windows 系统):
  - `netbios` (默认)
  - `linux-w7x1` (Linux)
  - `www.zabbix.com` (Windows)
- 示例:
  - `system.hostname[host]` → `Win-Serv2008-I6LonG`
- **支持版本**: Zabbix Agent 1.8.6 开始支持

#### 机架信息
- **键**: `system.hw.chassis[]`
- **返回**: 机架信息字符串
- **可用值**:
  - `full` (默认)
  - `model`
  - `serial`
  - `type`
  - `vendor`
- 示例:
  - `system.hw.chassis[full]` → `Hewlett-Packard HP Pro 3010 Small Form Factor PC CZXXXXXXXX Desktop`
- **权限要求**: 需要 root 权限
- **支持版本**: Zabbix Agent 2.0 开始支持

#### CPU 信息
- **键**: `system.hw.cpu[,info]`
- **返回**: CPU 字符/数字信息
- **参数**:
  - `cpu` – CPU 数量或 `all` (默认)
  - `info` – `full` (默认), `curfreq`, `maxfreq`, `model`, `vendor`
- 示例:
  - `system.hw.cpu[0,vendor]` → `AuthenticAMD`
- **数据来源**:
  - `/proc/cpuinfo`
  - `/sys/devices/system/cpu/[cpunum]/cpufreq/cpuiinfo_max_freq`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### PCI 或 USB 设备列表
- **键**: `system.hw.devices[type]`
- **返回**: 文本值
- **类型**:
  - `pci` (默认)
  - `usb`
- 示例:
  - `system.hw.devices[pci]` → `00:00.0 Host bridge: Advanced Micro Devices [AMD] RS780 Host Bridge [...]`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### MAC 地址
- **键**: `system.hw.macaddr[interface,format]`
- **返回**: MAC 地址字符串
- **参数**:
  - `interface` – `all` (默认) 或正则表达式
  - `format` – `full` (默认) 或 `short`
- 示例:
  - `system.hw.macaddr["eth0$",full]` → `[eth0] 00:11:22:33:44:55`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 系统时间
- **键**: `system.localtime[utc/local]`
- **返回**: 数字或字符串
- **参数**:
  - `utc` (默认)
  - `local` – 本地时间格式 `'yyyy-mm-dd,hh:mm:ss.nnn,+hh:mm'`
- 示例:
  - `system.localtime[local]` → `2023-10-01,12:34:56.789,+08:00`
- **支持版本**: Zabbix Agent 2.0 开始支持带参数

#### 运行命令
- **键**: `system.run[command,mode]`
- **返回**: 文本
- **参数**:
  - `command` – 命令
  - `mode` – `wait` (默认, 执行超时时间), `nowait` (不等待)
- 示例:
  - `system.run[ls -l /]` → 列出 `/` 的文件和目录
- **备注**: 启用此方法需要在 agent 配置文件中设置 `EnableRemoteCommands=1`
- **最大返回数据**: 512KB，包含空白数据
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 虚拟内存状态
- **键**: `system.stat[resource]`
- **返回**: 数字
- **资源**:
  - `ent` – 处理器单位数 (浮点数)
  - `kthr` – 内核线程状态
    - `r` – 可运行内核线程的平均数 (浮点数)
    - `b` – 在虚拟内存管理器等待队列中的内核线程的平均数 (浮点数)
  - `memory` – 虚拟和实际内存使用情况
    - `avm` – 活动虚拟页 (整数)
    - `fre` – 空闲列表大小 (整数)
  - `page` – 页面错误和页面活动
    - `fi` – 每秒文件页面读入 (浮点数)
    - `fo` – 每秒文件页面写出 (浮点数)
    - `pi` – 从分页空间读入的页面 (浮点数)
    - `po` – 写出到分页空间的页面 (浮点数)
    - `fr` – 释放的页面 (页面替换) (浮点数)
    - `sr` – 由页面替换算法扫描的页面 (浮点数)
  - `faults` – 中断和陷阱率
    - `in` – 设备中断 (浮点数)
    - `sy` – 系统调用 (浮点数)
    - `cs` – 内核线程上下文切换 (浮点数)
  - `cpu` – 处理器时间使用百分比
    - `us` – 用户时间 (浮点数)
    - `sy` – 系统时间 (浮点数)
    - `id` – 空闲时间 (浮点数)
    - `wa` – 磁盘/NFS I/O 请求期间的空闲时间 (浮点数)
    - `pc` – 消耗的物理处理器数量 (浮点数)
    - `ec` – 消耗的授权容量百分比 (浮点数)
    - `lbusy` – 逻辑处理器利用率 (浮点数)
    - `app` – 共享池中的可用物理处理器 (浮点数)
  - `disk` – 磁盘统计
    - `bps` – 每秒传输的数据量 (整数)
    - `tps` – 每秒发出的磁盘/磁带传输次数 (浮点数)
- **支持版本**: Zabbix Agent 1.8.1 开始支持

#### 软件架构
- **键**: `system.sw.arch`
- **返回**: 字符串
- 示例:
  - `system.sw.arch` → `i686`
- **数据来源**: `uname` 方法
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 系统信息
- **键**: `system.sw.os[info]`
- **返回**: 字符串
- **参数**:
  - `info` – `full` (默认), `short`, `name`
- 示例:
  - `system.sw.os[short]` → `Ubuntu 2.6.35-28.50-generic 2.6.35.11`
- **数据来源**:
  - `[full]` – `/proc/version`
  - `[short]` – `/proc/version_signature`
  - `[name]` – `/etc/issue.net`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 已安装软件包列表
- **键**: `system.sw.packages[package,manager,format]`
- **返回**: 文本
- **参数**:
  - `package` – `all` (默认) 或正则表达式
  - `manager` – `all` (默认) 或特定包管理器
  - `format` – `full` (默认), `short`
- 示例:
  - `system.sw.packages[mini,dpkg,short]` → `python-minimal, python2.6-minimal, ubuntu-minimal`
- **包管理器**:
  - `all` (执行命令)
  - `dpkg` (`dpkg –get-selections`)
  - `pkgtool` (`ls /var/log/packages`)
  - `rpm` (`rpm -qa`)
  - `pacman` (`pacman -Q`)
- **格式**:
  - `full` – 包按管理器分组
  - `short` – 包不分组，列在一行上
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 交换分区 IN
- **键**: `system.swap.in[device,type]`
- **返回**: 数字
- **参数**:
  - `device` – 交换分区设备 (默认 `all`)
  - `type` – `count` (swapins 数量), `sectors` (扇区 swap in), `pages` (页 swap in)
- 示例:
  - `system.swap.in[,pages]`
- **数据来源**:
  - Linux 2.4: `/proc/swaps`, `/proc/partitions`, `/proc/stat`
  - Linux 2.6: `/proc/swaps`, `/proc/diskstats`, `/proc/vmstat`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 交换分区 OUT
- **键**: `system.swap.out[device,type]`
- **返回**: 数字
- **参数**:
  - `device` – 交换分区设备 (默认 `all`)
  - `type` – `count` (swapouts 数量), `sectors` (扇区 swap out), `pages` (页 swap out)
- 示例:
  - `system.swap.out[,pages]`
- **数据来源**:
  - Linux 2.4: `/proc/swaps`, `/proc/partitions`, `/proc/stat`
  - Linux 2.6: `/proc/swaps`, `/proc/diskstats`, `/proc/vmstat`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 交换分区大小
- **键**: `system.swap.size[device,type]`
- **返回**: 字节或百分比
- **参数**:
  - `device` – 交换分区 (默认 `all`)
  - `type` – `free` (空闲 swap 空间, 默认), `pfree` (空闲 swap 百分比), `pused` (已用 swap 百分比), `total` (总 swap 空间), `used` (已用 swap 空间)
- 示例:
  - `system.swap.size[,pfree]`
- **老命名格式**:
  - `system.swap.free`
  - `system.swap.total`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 系统详细信息
- **键**: `system.uname`
- **返回**: 字符串
- 示例:
  - `system.uname` → `FreeBSD localhost 4.2-RELEASE FreeBSD 4.2-RELEASE #0: Mon Nov i386`
- **备注**: 自 Zabbix 2.2.0 版本起，此项通过 `uname()` 系统调用获取，而不是通过 `uname -a` 命令。
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 系统运行时长
- **键**: `system.uptime`
- **返回**: 秒数
- **数据来源**: `s/uptime` 获取
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 登录用户数量
- **键**: `system.users.num`
- **返回**: 用户数量
- **数据来源**: `who` 命令获取
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 磁盘读取状态
- **键**: `vfs.dev.read[device,type,mode]`
- **返回**: 整数 (如果 `type` 为 `sectors`, `operations`, `bytes`) 或浮点数 (如果 `type` 为 `sps`, `ops`, `bps`)
- **参数**:
  - `device` – 磁盘设备 (默认 `all`)
  - `type` – `sectors`, `operations`, `bytes`, `sps`, `ops`, `bps` (必须指定)
  - `mode` – `avg1` (一分钟平均, 默认), `avg5` (五分钟平均), `avg15` (十五分钟平均)
- 示例:
  - `vfs.dev.read[,operations]`
- **老命名方式**: `io[*]`
- **支持版本**: Zabbix Agent 1.8.6 开始支持 LVM。直到 Zabbix 1.8.6，只允许使用相对设备名（例如 `sda`），自 1.8.6 起可选 `/dev/` 前缀（例如 `/dev/sda`）。
- **不同操作系统的 TYPE 参数**:
  - FreeBSD – `bps`
  - Linux – `sps`
  - OpenBSD – `operations`
  - Solaris – `bytes`

#### 磁盘写入状态
- **键**: `vfs.dev.write[device,type,mode]`
- **返回**: 整数 (如果 `type` 为 `sectors`, `operations`, `bytes`) 或浮点数 (如果 `type` 为 `sps`, `ops`, `bps`)
- **参数**:
  - `device` – 磁盘设备 (默认 `all`)
  - `type` – `sectors`, `operations`, `bytes`, `sps`, `ops`, `bps` (必须指定)
  - `mode` – `avg1` (一分钟平均, 默认), `avg5` (五分钟平均), `avg15` (十五分钟平均)
- 示例:
  - `vfs.dev.write[,operations]`
- **老命名方式**: `io[*]`
- **支持版本**: Zabbix Agent 1.8.6 开始支持 LVM。直到 Zabbix 1.8.6，只允许使用相对设备名（例如 `sda`），自 1.8.6 起可选 `/dev/` 前缀（例如 `/dev/sda`）。
- **不同操作系统的 TYPE 参数**:
  - FreeBSD – `bps`
  - Linux – `sps`
  - OpenBSD – `operations`
  - Solaris – `bytes`

#### 文件校验
- **键**: `vfs.file.cksum[file]`
- **返回**: 文件校验值
- **参数**:
  - `file` – 文件完整路径
- 示例:
  - `vfs.file.cksum[/etc/passwd]` → `1938292000`
- **老命名规范**: `cksum`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 文件内容
- **键**: `vfs.file.contents[file]`
- **返回**: 文件内容或空字符串（如果文件为空或只包含 LF/CR 字符）
- **参数**:
  - `file` – 文件完整路径
- 示例:
  - `vfs.file.contents[/etc/passwd]`
- **备注**: 文件不能超过 64KB
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 检测文件是否存在
- **键**: `vfs.file.exists[file]`
- **返回**: 
  - `1` – 文件/硬链接/软连接存在
  - `0` – 文件不存在
- **参数**:
  - `file` – 文件完整路径
- 示例:
  - `vfs.file.exists[/tmp/application.pid]`
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 文件 MD5 校验码
- **键**: `vfs.file.md5sum[file]`
- **返回**: 文件 MD5 哈希值
- **参数**:
  - `file` – 文件完整路径
- 示例:
  - `vfs.file.md5sum[/usr/local/etc/zabbix_agentd.conf]` → `b5052decb577e0fffd622d6ddc017e82`
- **备注**: 自 1.8.6 版本移除了 64MB 文件大小的限制
- **支持版本**: Zabbix Agent 2.0 开始支持

#### 文件中搜索字符串
- **键**: `vfs.file.regexp[file,regexp,encoding,start line,end line,output]`
- **返回**: 包含匹配字符串的行，或为空
- **参数**:
  - `file` – 文件完整路径
  - `regexp` – GNU 正则表达式
  - `encoding` – 编码
  - `start line` – 从哪一行开始（默认第一行）
  - `end line` – 从哪一行结束（默认最后一行）
  - `output` – 可选输出格式模板
- 示例:
  - `vfs.file.regexp[/etc/passwd,zabbix]`
  - `vfs.file.regexp[/path/to/some/file, "([0-9]+)$",,3,5,\1]`
  - `vfs.file.regexp[/etc/passwd,^zabbix:.:([0-9]+),,,,\1]`
- **备注**: `\0` 转义序列将被替换
- **支持版本**: Zabbix Agent 2.0 开始支持