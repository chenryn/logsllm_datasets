# PostgreSQL Tutorial

## Edited by
Thomas Lockhart

### Copyright Notice
PostgreSQL is Copyright Â© 1996-9 by the Postgres Global Development Group.

---

## Table of Contents
- **Summary**...................................................................................................................... i
- **1. Introduction**............................................................................................................. 1
  - 1.1 What is Postgres?................................................................................................... 1
  - 1.2 A Short History of Postgres................................................................................... 2
    - 1.2.1 The Berkeley Postgres Project.................................................................. 2
    - 1.2.2 Postgres95................................................................................................. 2
    - 1.2.3 PostgreSQL................................................................................................ 3
  - 1.3 About This Release............................................................................................... 3
  - 1.4 Resources............................................................................................................... 4
  - 1.5 Terminology.......................................................................................................... 5
  - 1.6 Notation................................................................................................................. 5
  - 1.7 Y2K Statement...................................................................................................... 6
  - 1.8 Copyrights and Trademarks.................................................................................. 6
- **2. SQL**............................................................................................................................ 8
  - 2.1 The Relational Data Model................................................................................... 8
  - 2.2 Relational Data Model Formalities...................................................................... 9
    - 2.2.1 Domains vs. Data Types........................................................................... 10
  - 2.3 Operations in the Relational Data Model........................................................... 10
    - 2.3.1 Relational Algebra.................................................................................... 10
    - 2.3.2 Relational Calculus.................................................................................. 13
      - 2.3.2.1 Tuple Relational Calculus................................................................ 13
    - 2.3.3 Relational Algebra vs. Relational Calculus............................................ 13
  - 2.4 The SQL Language............................................................................................. 14
    - 2.4.1 Select....................................................................................................... 14
      - 2.4.1.1 Simple Selects................................................................................ 14
      - 2.4.1.2 Joins.............................................................................................. 16
      - 2.4.1.3 Aggregate Operators...................................................................... 16
      - 2.4.1.4 Aggregation by Groups................................................................. 17
      - 2.4.1.5 Having........................................................................................... 18
      - 2.4.1.6 Subqueries...................................................................................... 18
      - 2.4.1.7 Union, Intersect, Except.............................................................. 19
    - 2.4.2 Data Definition......................................................................................... 20
      - 2.4.2.1 Create Table................................................................................... 20
      - 2.4.2.2 Data Types in SQL........................................................................ 21
      - 2.4.2.3 Create Index................................................................................... 21
      - 2.4.2.4 Create View................................................................................... 22
      - 2.4.2.5 Drop Table, Drop Index, Drop View............................................ 22
    - 2.4.3 Data Manipulation.................................................................................... 23
      - 2.4.3.1 Insert Into....................................................................................... 23
      - 2.4.3.2 Update........................................................................................... 24
      - 2.4.3.3 Delete............................................................................................ 24
    - 2.4.4 System Catalogs...................................................................................... 24
    - 2.4.5 Embedded SQL....................................................................................... 24
- **3. Architecture**............................................................................................................ 26
  - 3.1 Postgres Architectural Concepts........................................................................ 26
- **4. Getting Started**........................................................................................................ 28
  - 4.1 Setting Up Your Environment.............................................................................. 28
  - 4.2 Starting the Interactive Monitor (psql)............................................................... 29
  - 4.3 Managing a Database.......................................................................................... 29
    - 4.3.1 Creating a Database............................................................................... 29
    - 4.3.2 Accessing a Database............................................................................. 30
    - 4.3.3 Destroying a Database........................................................................... 31
- **5. The Query Language**.............................................................................................. 32
  - 5.1 Interactive Monitor............................................................................................. 32
  - 5.2 Concepts............................................................................................................... 32
  - 5.3 Creating a New Class.......................................................................................... 33
  - 5.4 Populating a Class with Instances....................................................................... 33
  - 5.5 Querying a Class................................................................................................. 33
  - 5.6 Redirecting SELECT Queries.............................................................................. 34
  - 5.7 Joins Between Classes......................................................................................... 35
  - 5.8 Updates................................................................................................................ 36
  - 5.9 Deletions............................................................................................................... 36
  - 5.10 Using Aggregate Functions................................................................................ 36
- **6. Advanced Postgres SQL Features**......................................................................... 38
  - 6.1 Inheritance........................................................................................................... 38
  - 6.2 Non-Atomic Values............................................................................................. 39
    - 6.2.1 Arrays..................................................................................................... 39
  - 6.3 Time Travel......................................................................................................... 40
  - 6.4 More Advanced Features.................................................................................... 41
- **Bibliography**................................................................................................................ 42

---

## Summary
Postgres, originally developed at the University of California, Berkeley, pioneered many object-relational concepts now available in commercial databases. It supports SQL92/SQL3 language, transaction integrity, and type extensibility. PostgreSQL is an open-source descendant of this original Berkeley code.

---

## Chapter 1: Introduction

### 1.1 What is Postgres?
Traditional relational database management systems (DBMSs) support a data model consisting of named relations with specific types. However, this model is often inadequate for future data processing applications. Postgres extends the relational model by incorporating additional concepts such as classes, inheritance, types, and functions. These features, along with constraints, triggers, rules, and transaction integrity, place Postgres in the category of object-relational databases.

### 1.2 A Short History of Postgres

#### 1.2.1 The Berkeley Postgres Project
The implementation of the Postgres DBMS began in 1986. The initial system became operational in 1987 and was demonstrated at the 1988 ACM-SIGMOD Conference. Version 1 was released in June 1989, followed by Version 2 in June 1990, which included a redesigned rule system. Version 3, released in 1991, added support for multiple storage managers, an improved query executor, and a rewritten rewrite rule system. Subsequent releases focused on portability and reliability.

#### 1.2.2 Postgres95
In 1994, Andrew Yu and Jolly Chen added a SQL language interpreter to Postgres, and the code was released to the web. Postgres95, a public-domain, open-source version, was a derivative of Postgres version 4.2. Major enhancements included replacing the Postquel query language with SQL, re-implementing aggregates, and adding support for `GROUP BY`.

#### 1.2.3 PostgreSQL
By 1996, the name Postgres95 was changed to PostgreSQL to reflect its SQL capabilities. The version numbering was reset to start at 6.0. The v6.x series of PostgreSQL focused on adding new features and improving performance, including subselects, defaults, constraints, and triggers. Additionally, new built-in types and improvements in backend code speed were introduced.

### 1.3 About This Release
PostgreSQL is available without cost. This manual describes version 6.5 of PostgreSQL. We will use "Postgres" to refer to the version distributed as PostgreSQL.

### 1.4 Resources
This manual set is organized into several parts:
- **Tutorial**: An introduction for new users.
- **Userâs Guide**: General information for users, including commands and data types.
- **Programmerâs Guide**: Advanced information for application programmers.
- **Administratorâs Guide**: Installation and management information.
- **Developerâs Guide**: Information for Postgres developers.
- **Reference Manual**: Detailed reference information on command syntax.

Additional resources include man pages, FAQs, README files, the Postgres web site, and mailing lists.

### 1.5 Terminology
- **Site**: The host machine where Postgres is installed.
- **Postgres Superuser**: The user named `postgres` who owns the Postgres binaries and database files.
- **Database Administrator (DBA)**: The person responsible for installing and maintaining Postgres.
- **Postmaster**: The process that acts as a clearing-house for requests to the Postgres system.
- **Postgres Backend**: The executable program `postgres` that can be executed directly from the user shell.

### 1.6 Notation
- Brackets `[ ]` indicate optional phrases or keywords.
- Braces `{ }` with vertical bars `|` indicate a choice.
- Parentheses `( )` are used to group boolean expressions.
- Commands executed from different accounts and programs are indicated by different prompts.

### 1.7 Y2K Statement
At the time of writing, the author, Thomas Lockhart, is not aware of any Y2K-related problems in the Postgres code base. The assumptions Postgres makes about dates specified with a two-digit year are documented in the Userâs Guide. Any Y2K issues in the underlying OS may propagate into apparent Y2K problems in Postgres.

### 1.8 Copyrights and Trademarks
PostgreSQL is provided as a public service without warranty and without liability for its behavior or performance.