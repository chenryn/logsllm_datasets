### Table 3: Safety Goal Violations for Driving Scenarios 1-3

| Simulation Time (s) / Duration (s) | Goal Location | Scenario 1 | Scenario 2 | Scenario 3 |
|-----------------------------------|---------------|------------|------------|------------|
| S-01 System                       | 12.589/0.004  | 12.587/0.001 | 11 total, first: 15.340/0.002, last: 15.471/0.010, longest: 0.062, shortest: 0.001 |
| S-02 System                       | 12.583/0.008, 12.598/0.002, 12.568/0.020 | 79 total, 12.652/0.001, 12.661/0.004, first: 12.492/0.004, last: 15.492/0.004, 12.672/0.006, 12.680/0.001, longest: 0.036, shortest: 0.001 |
| S-03 System                       | 12.561/0.027  | -          | -          | -          |
| S-04 System                       | none         | -          | -          | -          |
| S-A-01 Arbiter                    | none         | -          | -          | -          |
| S-A-02 Arbiter                    | 12.601/0.001 | 12.561/0.001 | 22 total, first: 12.751/0.001, last: 15.401/0.001, longest: 0.001, shortest: 0.001 |
| S-A-03 Arbiter                    | 12.561/0.027 | -          | -          | -          |
| S-A-04 Arbiter                    | none         | -          | -          | -          |
| S-F-01                            | none         | -          | -          | -          |
| S-F-02 CA                         | 12.600/0.001 | 12.561/0.001 | 22 total, first: 12.750/0.001, last: 15.400/0.001, longest: 0.001, shortest: 0.001 |
| PA                                | 9.623/0.001  | 9.623/0.001 | 9.623/0.001 | -          |
| S-F-04                            | none         | -          | -          | -          |

### Safety Goals and Evaluation

Safety goals were determined by examining the functional requirements of the system, conducting a hazard analysis, and partially implementing the system. The features were implemented independently of the process for defining and elaborating the system safety goals. Thus, the formal specification of the safety goals and subgoals was not available to the teams designing and implementing the system. The purpose of this evaluation was to determine whether the goals were partially, if not fully, composed by the set of subgoals obtained from Indirect Control Path Analysis (ICPA).

To achieve this, we monitored the system safety goals and subgoals at runtime in three different driving scenarios, configured in CarSim. 

**Scenario 1:**
- The host vehicle accelerates from zero velocity toward another stopped vehicle in its path.
- As the host vehicle nears the stopped vehicle, Collision Avoidance (CA) should initiate a hard braking action to stop the host vehicle before a collision occurs.

**Scenario 2:**
- Proceeds as in Scenario 1, but just as CA is stopping the host vehicle, Power Assist (PA) is engaged by the driver.
- This scenario was chosen to verify a flaw in the arbitration logic found during ICPA. In the design and implementation, acceleration and steering were arbitrated separately, and during inspection for ICPA, it was discovered that the prioritization of feature requests in steering arbitration was reversed.

**Scenario 3:**
- Adaptive Cruise Control (ACC) is engaged and controlling the host vehicle at a set speed, with a slower vehicle in its path.
- ACC should slow the host vehicle to follow a set distance behind the slower lead vehicle.

### Results

Table 3 lists the results of the three evaluation scenarios. 

**Scenario 1:**
- Resulted in violations of vehicle safety goals S-01 and S-02 shortly before early termination of the simulation.
- The longest violation was 8 ms, and the shortest was 1 ms (the time interval of one state).
- Vehicle acceleration was exceeded for 4 ms, 92 ms before early termination.
- Vehicle jerk was exceeded for 8, 2, 1, 4, 6, and 1 ms, at 98, 83, 29, 20, 9, and 1 ms before early termination.
- Although the vehicle acceleration threshold was exceeded once, no violations of S-A-01 and S-F-01 occurred.
- Similarly, the vehicle jerk threshold was exceeded six times, yet the corresponding subgoals for the arbiter and CA were violated only once for 1 ms, starting 80 ms before early termination.
- Additionally, the jerk threshold for PA was violated for 1 ms at 3.058 seconds before early termination.

**Scenario 2:**
- Resulted in violations of vehicle safety goals S-01, S-02, and S-03, also before early termination.
- Vehicle acceleration was exceeded for 1 ms, vehicle jerk was exceeded for 20 ms, and the acceleration-steering agreement was violated for 27 ms.
- Each vehicle safety goal was still in violation at the time of early termination, which occurred 93 ms earlier than in Scenario 1.
- Similar to Scenario 1, no subgoals for S-01 were violated, and S-A-02 for the arbiter was violated only once for 1 ms, starting 27 ms before early termination and 7 ms before vehicle jerk was exceeded.
- The corresponding subgoal S-F-02 for PA was violated for 1 ms, starting 80 ms before early termination.
- The S-A-03 subgoal for the arbiter was the same as the system-level goal, thus violations of the arbiter’s goal corresponded to those of the system.

**Scenario 3:**
- The vehicle exceeded the acceleration threshold 11 times and the jerk threshold 79 times before early termination.
- As expected, ACC attempted to slow the host vehicle to follow the slower lead vehicle, but the host vehicle was not slowed enough and eventually passed through the lead vehicle.
- As with the first two scenarios, violations of S-01 did not correspond to any violations of its corresponding S-A-01 and S-F-01.
- The arbiter and ACC experienced 29 violations of S-A-01 and S-F-01, respectively, which is much fewer than the number experienced by the system.

### Discussion

Although the subsystem monitors did not identify all events in which the system safety goals were violated, the results of the simulation provided useful information. Monitoring at the system and subsystem levels identified violations of the safety goals and subgoals that may be imperceptible to system testers, who may not notice if the jerk and acceleration thresholds are violated for just a few short milliseconds. Although a very short interval of uncomfortable jerk or acceleration may not startle the driver or lead to an accident, it may portend future trouble.

All three scenarios ended in early termination of the simulation due to a simulation runtime error. In the first two scenarios, this early termination was preceded by very short intervals of violations of safety goals S-01 and S-02, and subgoals S-A-02 and S-F-02. We were able to verify the reverse arbitration logic found during ICPA, which resulted in a violation of safety goal S-03, as being incorrect. The violations of vehicle jerk by CA and the Arbiter subgoals occurred for 1 ms, which is just one state in the transition system. In some situations, a violation of this type is a false positive because it occurs whenever a step increase in acceleration occurs. In these scenarios, however, the violation of jerk subgoals indicated unsafe vehicle conditions because CA suddenly released and reapplied the hard brake prematurely before the system had finished braking to avoid colliding with the parked vehicle.

Because the system implementation was incomplete, it is unknown whether this is the only cause of early termination of the simulation. However, it is most likely a contributing, if not primary, factor. The violation of the jerk subgoal for PA in all three scenarios technically represents a false positive detection in the subgoal monitors. The sudden jerk in requested acceleration did not result in a violation of the vehicle jerk threshold. However, this detection exposes a potential problem in the PA subsystem. At simulation time 9.330, PA requests an acceleration of -2 m/s² without indicating that its acceleration request is active. At simulation time 9.622, its acceleration request returns to 0 m/s², the default value for all subsystems when no request is active. In other words, it changes the value of its acceleration request without signaling that the request is active. It is unclear whether PA intended to make a parking maneuver and failed, or whether it is sending random acceleration requests. In either situation, the subsystem must be examined to determine the cause of the unsafe behavior.

The subgoal monitors did produce false negatives when the vehicle acceleration and vehicle jerk thresholds were exceeded without a violation in the corresponding subgoal, such as what occurs in the first scenario. In these instances, vehicle acceleration and jerk were under control of one of the subsystems, but no subsystem monitor indicated the subsystem was violating the subgoal. This indicates that the system-level goal has not been fully decomposed. In this situation, the remaining emergency likely represents missing subgoals for other system components, such as the powertrain and braking systems that were excluded from the analysis. This may also indicate that some relationships between indirect control sources are missing from the ICPA. These safety problems can still be handled by system-level safety goals. Our finding is simply that they were not completely decomposed.

### Conclusion and Future Work

When dealing with emergent properties, it may not be possible to fully elaborate system-level goals throughout the composite system. However, it is important to identify subgoals for the known sources of the emergent behavior, even if other sources are unknown or impractical to address. Identifying subsystem-level safety issues can reduce the number and severity of problems found during system integration and perhaps give precursor warnings at runtime.

In this work, we defined emergent and composable behaviors mathematically, in the context of system safety goals written as expressions of temporal logic and the ICPA technique. ICPA was applied to a safety-critical vehicle system designed and built in a commercial automotive research lab, and the resulting safety goals and subgoals were monitored in different runtime operational scenarios. Although this system was intended only for research, its design and implementation were as complex as production vehicles. Results of monitoring the goals and subgoals in runtime simulations show that although the subgoals do not fully compose the parent goals, they are useful for identifying some violations of the parent goal. Additionally, monitoring safety goals in general, at both the subsystem and system level, identified potentially hazardous behaviors that may be imperceptible to system testers.

This work demonstrates the feasibility of using ICPA to identify subgoals that partially compose an emergent safety goal. Future work will focus on determining how much composability can be achieved with ICPA. The runtime monitoring scenarios all experienced system failures from existing system flaws due to the system being incomplete at the time of analysis. Fault-injection campaigns on a more complete implementation might provide a statistical measure of composability extracted by ICPA from an emergent property.

### References

[1] Aristotle. Metaphysics: Book VIII. Trans. by W.D. Ross, http://classics.mit.edu/Aristotle/metaphysics.8.viii.html.
[2] L. Bass, P. Clements, and R. Kazman. Software Architecture in Practice. Addison-Wesley, Reading, MA, 2nd edition, 1972.
[3] F. Bitsch. Classification of safety requirements for formal verification of software models for industrial automation systems. In Proc. Intl. Conf. on SW and Sys. Engineering and their Applications (ICSSEA 2000), Paris, France, Dec. 2000.
[4] F. Bitsch. Safety patterns - the key to formal specification of safety requirements. In U. Voges, editor, Proc. 20th Intl. Conf. on Comp. Safety, Reliability and Security (SAFECOMP’01), volume 2187 of Lecture Notes in Computer Science, pages 176–189, Budapest, Hungary, Sept. 2001. Springer-Verlag.
[5] J. Black and P. Koopman. Indirect control path analysis and goal coverage strategies for elaborating system safety goals in composite systems. In Proc. 14th Pacific Rim Intl. Symp. on Dependable Comp. (PRDC’08), Taipei, Taiwan, Dec. 2008.
[6] T.F. Bowen, F.S. Dworack, C.H. Chow, N. Griffeth, G.E. Herman, and Y.-J. Lin. The feature interaction problem in telecommunications systems. In Proc. 7th Intl. Conf. on SW Eng. for Telecom. Switching Sys., pages 59–62, Bournemouth, UK, July 1989.
[7] P. Cariani. Emergence and artificial life. In C.G. Langton, C. Taylor, J.D. Farmer, and S. Rasmussen, editors, Artificial Life II: Proc. of the 2nd Workshop on Artificial Life, pages 775–797. Addison-Wesley, 1991.
[8] A. Dardenne, A. v. Lamsweerde, and S. Fickas. Goal-directed requirements acquisition. In M. Sintzoff, C. Ghezzi, and G. Roman, editors, Science of Computer Programming, number 1-2, pages 3–50. Elsevier Science, Amsterdam, The Netherlands, Apr. 1993.
[9] R. Darimont and A. v. Lamsweerde. Formal refinement patterns for goal-driven requirements elaboration. In Proc. 4th ACM SIGSOFT Symp. on Found. of SW Eng., volume 21 of Software Engineering Notes, pages 179–190. ACM SIGSOFT, Nov. 1996.
[10] V. Darley. Emergent phenomena and complexity. In R.A. Brooks and P. Maes, editors, Artificial Life IV: Proc. of the 4th Workshop on Synthesis and Simulation of Living Systems, pages 411–416. MIT Press, 1994.
[11] M.S. Feather. Language support for the specification and development of composite systems. ACM Trans. on Prog. Lang., Syst., 9(2):198–234, Apr. 1987.
[12] S.E. Keller, L.G. Kahn, and R.B. Panara. Specifying software quality requirements with metrics. In R.H. Thayer and M. Dorfman, editors, System and Software Requirements Engineering, chapter 3, pages 145–163. IEEE Comp. Soc. Press, Los Alamitos, CA, 1990.
[13] R. Koymans, editor. Specifying Message Passing and Time-Critical Systems With Temporal Logic, volume 651 of Lecture Notes in Computer Science. Springer-Verlag, Berlin, Germany, 1992.
[14] A. v. Lamsweerde, R. Darimont, and E. Letier. Managing conflicts in goal-driven requirements engineering. IEEE Trans. SW Eng., 24(11):908–926, Nov. 1998.
[15] E. Letier and A. v. Lamsweerde. Agent-based tactics for goal-oriented requirements elaboration. In Proc. 24th Intl. Conf. on SW Eng. (ICSE’02), pages 83–93, Orlando, FL, May 2002.
[16] E. Letier and A. v. Lamsweerde. Deriving operational software specifications from system goals. In Proc. 10th ACM SIGSOFT Symp. on Foundations of SW Eng. (FSE-10), pages 119–128, Charleston, SC, Nov. 2002.
[17] N.G. Leveson. Safeware - System Safety and Computers. Addison-Wesley, Reading, MA, 1995.
[18] N.G. Leveson. Intent specifications: An approach to building human-centered specifications. IEEE Trans. SW Eng., 26(1):15–35, Jan. 2000.
[19] N.G. Leveson. Model-based analysis of socio-technical risk. Technical Report ESD-WP-2004-08, MIT, Cambridge, MA, Dec. 2004.
[20] G.H. Lewes. Problems of Life and Mind, volume 2 of 1st Ser. James R. Osgood and Co., Boston, MA, 1875.
[21] P. Li, L. Alvarez, and R. Horowitz. AHSS safe control laws for platoon leaders. IEEE Trans. Contr. Syst. Technol., 5(6):614–628, Nov. 1997.
[22] J. Mylopoulos, L.K. Chung, and B.A. Nixon. Representing and using nonfunctional requirements: A process-oriented approach. IEEE Trans. SW Eng., 18(6):483–497, June 1992.
[23] N.J. Nilsson. Problem-Solving in Artificial Intelligence. McGraw-Hill Computer Science Series. McGraw-Hill, New York, 1971.
[24] J. Pollard and E.D. Sussman. An examination of sudden acceleration. Technical Report DOT-HS-807-367, NHTSA, Washington, DC, 1989.
[25] M. Privosnik, M. Marolt, A. Kavcic, and S. Divjak. Evolutionary construction of emergent properties in multi-agent systems. In Proc. 11th Mediterranean Electrotechnical Conference (MELECON’02).
[26] A.M. Turing. On computable numbers, with an application to the Entscheidungsproblem. Proc. of the London Mathematics Society, 42:230–265, 1936.