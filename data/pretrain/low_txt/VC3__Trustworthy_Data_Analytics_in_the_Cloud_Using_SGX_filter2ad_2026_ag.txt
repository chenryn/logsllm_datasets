### References

1. **USENIX Symposium on Operating Systems Design and Implementation (OSDI)**
   - *Title*: An Untrusted Cloud with Haven
   - *Year*: 2014

2. **Advances in Cryptology—CRYPTO, 1998**
   - *Authors*: M. Bellare, A. Desai, D. Pointcheval, P. Rogaway
   - *Title*: Relations among Notions of Security for Public-Key Encryption Schemes

3. **Advances in Cryptology—ASIACRYPT, 2000**
   - *Authors*: M. Bellare, C. Namprempre
   - *Title*: Authenticated Encryption: Relations Among Notions and Analysis of the Generic Composition Paradigm

4. **Privacy Enhancing Technologies, 2012**
   - *Editors*: S. Fischer-Hübner, M. Wright
   - *Title*: Prism—Privacy-Preserving Search in MapReduce
   - *Authors*: E.-O. Blass, R. Di Pietro, R. Molva, M. Önen
   - *Series*: Lecture Notes in Computer Science, Volume 7384
   - *Publisher*: Springer Berlin Heidelberg

5. **ACM Symposium on Operating Systems Principles (SOSP), 2013**
   - *Authors*: B. Braun, A. J. Feldman, Z. Ren, S. Setty, A. J. Blumberg, M. Walfish
   - *Title*: Verifying Computations with State

6. **USENIX Workshop on Hot Topics in Systems Dependability (HotDep), 2014**
   - *Authors*: S. Brenner, C. Wulf, R. Kapitza
   - *Title*: Running ZooKeeper Coordination Services in Untrusted Clouds

7. **IEEE International Conference on Social Computing (SocialCom), 2010**
   - *Authors*: E. Brickell, J. Li
   - *Title*: Enhanced Privacy ID from Bilinear Pairing for Hardware Authentication and Attestation

8. **IEEE Symposium on Security and Privacy, 2010**
   - *Authors*: S. Chen, R. Wang, X. Wang, K. Zhang
   - *Title*: Side-Channel Leaks in Web Applications: A Reality Today, a Challenge Tomorrow

9. **International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2008**
   - *Authors*: X. Chen, T. Garfinkel, E. C. Lewis, P. Subrahmanyam, C. A. Waldspurger, D. Boneh, J. Dwoskin, D. R. Ports
   - *Title*: Overshadow: A Virtualization-Based Approach to Retrofitting Protection in Commodity Operating Systems

10. **International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2014**
    - *Authors*: J. Criswell, N. Dautenhahn, V. Adve
    - *Title*: Virtual Ghost: Protecting Applications from Hostile Operating Systems

11. **Advances in Cryptology—CRYPTO, 2012**
    - *Authors*: I. Damgård, V. Pastro, N. Smart, S. Zakarias
    - *Title*: Multiparty Computation from Somewhat Homomorphic Encryption

12. **Communications of the ACM, 2008**
    - *Authors*: J. Dean, S. Ghemawat
    - *Title*: MapReduce: Simplified Data Processing on Large Clusters
    - *Volume*: 51(1)

13. **USENIX Security Symposium, 2013**
    - *Authors*: C. Fournet, M. Kohlweiss, G. Danezis, Z. Luo
    - *Title*: ZQL: A Compiler for Privacy-Preserving Data Processing

14. **ACM Symposium on Theory of Computing (STOC), 2009**
    - *Author*: C. Gentry
    - *Title*: Fully Homomorphic Encryption Using Ideal Lattices

15. **Advances in Cryptology—EUROCRYPT, 2011**
    - *Authors*: C. Gentry, S. Halevi
    - *Title*: Implementing Gentry’s Fully-Homomorphic Encryption Scheme

16. **IEEE Symposium on Security and Privacy, 2014**
    - *Authors*: E. Göktas, E. Athanasopoulos, H. Bos, G. Portokalidis
    - *Title*: Out of Control: Overcoming Control-Flow Integrity

17. **Intel Carry-Less Multiplication Instruction and Its Usage for Computing the GCM Mode, 2010**
    - *Authors*: S. Gueron, M. E. Kounavis
    - *Document Number*: 323640-001

18. **USENIX Symposium on Operating Systems Design and Implementation (OSDI), 2014**
    - *Authors*: C. Hawblitzel, J. Howell, J. R. Lorch, A. Narayan, B. Parno, D. Zhang, B. Zill
    - *Title*: Ironclad Apps: End-to-End Security via Automated Full-System Verification

19. **Workshop on Hardware and Architectural Support for Security and Privacy (HASP), 2013**
    - *Authors*: M. Hoekstra, R. Lal, P. Pappachan, C. Rozas, V. Phegade, J. del Cuvillo
    - *Title*: Using Innovative Instructions to Create Trustworthy Software Solutions

20. **International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2013**
    - *Authors*: O. S. Hofmann, S. Kim, A. M. Dunn, M. Z. Lee, E. Witchel
    - *Title*: InkTag: Secure Applications on an Untrusted Operating System

21. **USENIX Security Symposium, 2011**
    - *Authors*: Y. Huang, D. Evans, J. Katz, L. Malka
    - *Title*: Faster Secure Two-Party Computation Using Garbled Circuits

22. **Intel 64 and IA-32 Architectures Software Developer’s Manual, 2013**
    - *Publisher*: Intel Corp.
    - *Document Number*: 325462-048

23. **Intel Trusted Execution Technology, 2013**
    - *Publisher*: Intel Corp.
    - *Document Number*: 315168-009

24. **Software Guard Extensions Programming Reference, 2013**
    - *Publisher*: Intel Corp.
    - *Document Number*: 329298-001

25. **USENIX Workshop on Hot Topics in Cloud Computing (HotCloud), 2011**
    - *Authors*: S. Y. Ko, K. Jeon, R. Morales
    - *Title*: The Hybrex Model for Confidentiality and Privacy in Cloud Computing

26. **USENIX Symposium on Operating Systems Design and Implementation (OSDI), 2014**
    - *Authors*: V. Kuznetsov, L. Szekeres, M. Payer, G. Candea, R. Sekar, D. Song
    - *Title*: Code-Pointer Integrity

27. **USENIX Symposium on Operating Systems Design and Implementation (OSDI), 2004**
    - *Authors*: J. Li, M. Krohn, D. Mazieres, D. Shasha
    - *Title*: Secure Untrusted Data Repository (SUNDR)

28. **USENIX ATC, 2014**
    - *Authors*: Y. Li, J. McCune, J. Newsome, A. Perrig, B. Baker, W. Drewry
    - *Title*: MiniBox: A Two-Way Sandbox for x86 Native Code

29. **International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2000**
    - *Authors*: D. Lie, M. Thekkath, M. Mitchell, P. Lincoln, D. Boneh, J. Mitchell, M. Horowitz
    - *Title*: Architectural Support for Copy and Tamper Resistant Software

30. **IEEE Symposium on Security and Privacy, 2010**
    - *Authors*: J. M. McCune, Y. Li, N. Qu, Z. Zhou, A. Datta, V. D. Gligor, A. Perrig
    - *Title*: TrustVisor: Efficient TCB Reduction and Attestation

31. **European Conference on Computer Systems (EuroSys), 2008**
    - *Authors*: J. M. McCune, B. J. Parno, A. Perrig, M. K. Reiter, H. Isozaki
    - *Title*: Flicker: An Execution Infrastructure for TCB Minimization

32. **Submission to NIST Modes of Operation Process, 2004**
    - *Authors*: D. McGrew, J. Viega
    - *Title*: The Galois/Counter Mode of Operation (GCM)

33. **Workshop on Hardware and Architectural Support for Security and Privacy (HASP), 2013**
    - *Authors*: F. McKeen, I. Alexandrovich, A. Berenzon, C. Rozas, H. Shafi, V. Shanbhogue, U. Savagaonkar
    - *Title*: Innovative Instructions and Software Model for Isolated Execution

34. **IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM), 2007**
    - *Authors*: G. Morris, M. Aubury
    - *Title*: Design Space Exploration of the European Option Benchmark Using Hyperstreams

35. **ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), 2009**
    - *Authors*: S. Nagarakatte, J. Zhao, M. M. Martin, S. Zdancewic
    - *Title*: SoftBound: Highly Compatible and Complete Spatial Memory Safety for C

36. **International Symposium on Memory Management, 2010**
    - *Authors*: S. Nagarakatte, J. Zhao, M. M. Martin, S. Zdancewic
    - *Title*: CETS: Compiler Enforced Temporal Safety for C

37. **International Colloquium on Automata, Languages and Programming (ICALP), 2014**
    - *Authors*: O. Ohrimenko, M. T. Goodrich, R. Tamassia, E. Upfal
    - *Title*: The Melbourne Shuffle: Improving Oblivious Storage in the Cloud

38. **ACM Conference on Computer and Communications Security (CCS), 2013**
    - *Authors*: E. Owusu, J. Guajardo, J. McCune, J. Newsome, A. Perrig, A. Vasudevan
    - *Title*: Oasis: On Achieving a Sanctuary for Integrity and Secrecy on Untrusted Platforms

39. **USENIX Workshop on Hot Topics in Security (HotSec), 2008**
    - *Author*: B. Parno
    - *Title*: Bootstrapping Trust in a "Trusted" Platform

40. **IEEE Symposium on Security and Privacy, 2013**
    - *Authors*: B. Parno, C. Gentry, J. Howell, M. Raykova
    - *Title*: Pinocchio: Nearly Practical Verifiable Computation

41. **ACM SIGMOD International Conference on Management of Data, 2009**
    - *Authors*: A. Pavlo, E. Paulson, A. Rasin, D. J. Abadi, D. J. DeWitt, S. Madden, M. Stonebraker
    - *Title*: A Comparison of Approaches to Large-Scale Data Analysis

42. **ACM Symposium on Operating Systems Principles (SOSP), 2011**
    - *Authors*: R. A. Popa, C. M. S. Redfield, N. Zeldovich, H. Balakrishnan
    - *Title*: CryptDB: Protecting Confidentiality with Encrypted Query Processing

43. **USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2014**
    - *Authors*: R. A. Popa, E. Stark, J. Helfer, S. Valdez, N. Zeldovich, M. F. Kaashoek, H. Balakrishnan
    - *Title*: Building Web Applications on Top of Encrypted Data Using Mylar

44. **USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2010**
    - *Authors*: I. Roy, S. T. Setty, A. Kilzer, V. Shmatikov, E. Witchel
    - *Title*: Airavat: Security and Privacy for MapReduce

45. **Windows Internals, Part 1, 2012**
    - *Authors*: M. Russinovich, D. Solomon
    - *Edition*: 6th
    - *Publisher*: Microsoft Press Corp.

46. **USENIX Security Symposium, 2012**
    - *Authors*: N. Santos, R. Rodrigues, K. P. Gummadi, S. Saroiu
    - *Title*: Policy-Sealed Data: A New Abstraction for Building Trusted Cloud Services

47. **Technical Report MSR-TR-2014-39, Microsoft Research, 2014**
    - *Authors*: F. Schuster, M. Costa, C. Fournet, C. Gkantsidis, M. Peinado, G. Mainar-Ruiz, M. Russinovich
    - *Title*: VC3: Trustworthy Data Analytics in the Cloud

48. **USENIX Security Symposium, 2001**
    - *Authors*: D. Song, D. Wagner, X. Tian
    - *Title*: Timing Analysis of Keystrokes and SSH Timing Attacks

49. **Annual Computer Security Applications Conference (ACSAC), 2014**
    - *Authors*: R. Strackx, B. Jacobs, F. Piessens
    - *Title*: ICE: A Passive, High-Speed, State-Continuity Scheme

50. **ACM Conference on Computer and Communications Security (CCS), 2012**
    - *Authors*: R. Strackx, F. Piessens
    - *Title*: Fides: Selectively Hardening Software Application Components Against Kernel-Level or Process-Level Malware

51. **International Conference on Supercomputing (ICS), 2003**
    - *Authors*: G. Suh, D. Clarke, B. Gassend, M. van Dijk, S. Devadas
    - *Title*: AEGIS: Architecture for Tamper-Evident and Tamper-Resistant Processing

52. **IEEE Symposium on Security and Privacy, 2013**
    - *Authors*: L. Szekeres, M. Payer, T. Weiz, D. Song
    - *Title*: SOK: Eternal War in Memory

53. **Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), 2013**
    - *Authors*: S. D. Tetali, M. Lesani, R. Majumdar, T. Millstein
    - *Title*: MrCrypt: Static Analysis for Secure Cloud Computations

54. **Trusted Platform Module Main Specification, 2007**
    - *Version*: 1.2, Revision 103
    - *Publisher*: Trusted Computing Group

55. **IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM), 2002**
    - *Authors*: K. H. Tsoi, K.-H. Lee, P. H. W. Leong
    - *Title*: A Massively Parallel RC4 Key Search Engine

56. **VLDB, 2013**
    - *Authors*: S. Tu, M. F. Kaashoek, S. Madden, N. Zeldovich
    - *Title*: Processing Analytical Queries over Encrypted Data

57. **USENIX Workshop on Hot Topics in Security (HotSec), 2010**
    - *Authors*: M. Van Dijk, A. Juels
    - *Title*: On the Impossibility of Cryptography Alone for Privacy-Preserving Cloud Computing

58. **ACM Symposium on Operating Systems Principles (SOSP), 1993**
    - *Authors*: R. Wahbe, S. Lucco, T. E. Anderson, S. L. Graham
    - *Title*: Efficient Software-Based Fault Isolation

59. **Annual Computer Security Applications Conference (ACSAC), 2009**
    - *Authors*: W. Wei, J. Du, T. Yu, X. Gu
    - *Title*: SecureMR: A Service Integrity Assurance Framework for MapReduce

60. **IEEE Symposium on Security and Privacy, 2008**
    - *Authors*: C. Wright, L. Ballard, S. Coull, F. Monrose, G. Masson
    - *Title*: Spot Me If You Can: Uncovering Spoken Phrases in Encrypted VoIP Conversations

61. **ACM Symposium on Operating Systems Principles (SOSP), 2011**
    - *Authors*: F. Zhang, J. Chen, H. Chen, B. Zang
    - *Title*: CloudVisor: Retrofitting Protection of Virtual Machines in Multi-Tenant Cloud with Nested Virtualization

### Appendix

#### A. Multi-User Key Exchange

We describe a variant of our basic key exchange protocol for scenarios involving multiple users \( u \in U \), each contributing their own set of input splits using separate keys, and all having access to the output. For simplicity, it is assumed that online communication channels between the involved parties exist. However, it is possible to implement the multi-user protocol as a regular MapReduce job without such channels, similar to the single-user protocol described in §V-C.

1. **User Identification**: Each user is identified by their public encryption key \( pku \).
2. **Code Agreement**: The users agree on the code to run. They exchange fresh random shares \( ju, kcode,u, kjob,u, kout,u \) and compute:
   \[
   j = \bigoplus_{u \in U} ju, \quad kcode = \bigoplus_{u \in U} kcode,u, \quad kjob = \bigoplus_{u \in U} kjob,u, \quad kout = \bigoplus_{u \in U} kout,u
   \]
   They then prepare the enclave code \( Cj,u \) as above, including all their public keys \( (pku)_{u \in U} \) in the \( Cj,u \) package.
3. **Message Preparation and Sending**: Each enclave prepares and sends the message of the base protocol \( pw \) to every user, encapsulating a distinct, fresh, symmetric key \( kw,u \). (The collection of messages may be jointly quoted once by each effective QE.)
4. **Message Reception and Decryption**: Each user independently receives, verifies, and decrypts their message, then sends the encrypted job credentials:
   \[
   \text{Enc}_{cki,u} \left\{ kcode | kjob | kin,u | kinter,u | kout | kprf,u \right\}
   \]
   where \( kin,u \) and \( kout \) are the authenticated-encryption keys for their input and the output file, and \( kinter,u \) and \( kprf,u \) are their fresh shares of the keys for the intermediate key-value pairs and the pseudo-random function PRF, respectively.
5. **Key Decryption and Verification**: Each enclave decrypts all job credentials, checks that they all provide the same keys \( kcode, kjob, kout \), and computes:
   \[
   kinter = \bigoplus_{u \in U} kinter,u, \quad kprf = \bigoplus_{u \in U} kprf,u
   \]
   At this stage, \( kcode, kjob, \) and \( kout \) are known to every user and every enclave in the job; \( kin,u \) is known to every enclave and to user \( u \); \( kinter \) and \( kprf \) are known to every enclave in the job but not to any strict subset of users. VC3 currently does not implement a multi-user key exchange, but we plan to support it in the future.

#### B. Lightweight Key Exchange

The in-band key exchange protocol (§V-C) implemented in our VC3 prototype works well with existing Hadoop installations but requires executing a full (though lightweight) MapReduce job just for exchanging keys. If the user is willing to put extended trust into a special Support Enclave (SE), the necessity for a separate key exchange job can be avoided while maintaining compatibility with existing Hadoop installations. We briefly describe a corresponding protocol below.

As described in §V-A, we generally foresee the cloud provider deploying a Cloud QE to each of its SGX-enabled nodes that is functionally equivalent to the standard SGX QE. Here, a special Support Enclave (SE) with extended functionality is deployed instead of such a Cloud QE. Instead of an EPID private key, each SE creates and manages a node-specific long-term RSA key pair that is permanently sealed to local storage. Each SE acquires a quote from the regular local SGX QE for its RSA public key. The cloud provider makes the quoted public keys for all SEs available to the user. For each SE, the user verifies the quotes and sends:
\[
[Cj,u]\{kcode | k\} | \text{PKEnc}_{pkSE} \{ke\} \text{Encke}
\]
where \( ke \) is a fresh job-specific ephemeral symmetric key. Each SE decrypts \( ke \) and then verifies \( Cj,u \) and decrypts \( kcode | k \). Subsequently, on each node, a new enclave containing \( Cj,u \) is started. A mutually authenticated secure local channel between \( E+ \) (running in the newly created enclave) and SE is created using local attestation (see §II-B). The SE passes \( kcode | k \) over this channel to \( E+ \). Finally, \( E+ \) decrypts \( E- \), and the enclave is able to process job data afterwards.

In this protocol variant, the user needs to trust the SE deployed by the cloud provider as it handles \( kcode \) and \( k \) in the clear. To facilitate the establishment of this trust, the cloud provider should make the source code of the SE publicly available.