### Coil Tuning and Signal Modulation

- **Coil Tuned to Carrier Frequency (e.g., 125kHz)**
  - The reader energizes the coil to power the chip.
  - The chip modulates the signal by adjusting the damping, which controls how the circuit resonates.

### Common Modulations
- **Frequency Shift Keying (FSK)**
- **Phase Shift Keying (PSK)**
- **Amplitude Shift Keying (ASK)**
- **On/Off Keying (OOK)**

### LF Cloning (T55xx)
- **Low-Frequency Tag with Configurable Properties**
  - **Modulation:** FSK/PSK/ASK
  - **Encoding:** Manchester/Biphase
  - **Storage Blocks:**
    - 8 4-byte storage blocks
    - 1 Configuration Block (Block 0)
    - 7 Bitstream Blocks (Blocks 1-7)

#### T5557 Block 0 Configuration
- **Configuration Block (from Datasheet)**
  - Proxmark Command: `lf search`
  - **Step 1:** `lf read s`
  - **Step 2:** Collect 30,000 data samples
  - **Step 3..n:** Test each data sample using the `demod` command until successful.

### Proxmark Demodbuﬀer
- **Extract Tag Bitstream**
  - **DemodBuﬀer:** Raw demodulated tag data
  - **Data Splitting:** Data can be split into 4-byte blocks for T55xx
  - **Bitstream Start:** Begins with Block 1

#### Example Bitstream
- **Block 1:** 0x1D555555
- **Block 2:** 0xA6A999A6
- **Block 3:** 0x9AA9A9AA

### Setting T55xx Configuration
- **Option 1:** Determine Block 0 manually via datasheets
- **Option 2:** Refer to the thread at [proxmark.org](http://www.proxmark.org/forum/viewtopic.php?id=1767)
  - **HID Tag Configuration:** 0x00107060, 3 Blocks, FSK 2a Modulation, RF/50 Data Rate

### Proxmark T55xx Writes
- **Programming a T5557 Card with HID 37 deadbeef**
  - **Verification:** Use `lf hid fskdemod` to verify the configuration

### Mifare Overview
- **Mifare Family of Tags:**
  - **Mifare Classic**
  - **Mifare Ultralight (and variations)**
  - **Mifare DESFire (and variations)**
- **Encryption Support:** Varies across different tags
- **UID:** All tags have a UID, and sometimes that's all that matters
- **Usage:** Widely used in trains, payment cards, hotels, smartphone tags, etc.

### Mifare Classic Cracking
- **Key Recovery:** Complete key recovery in under 1 minute
- **Nested Attacks:** Possible once any key is known
- **Magic Cards:** Normally read-only UID becomes read-write
  - **Sources:**
    - [CloneMyKey.com](http://www.CloneMyKey.com) (fast and reliable)
    - eBay "UID Changeable" (one vendor took 6+ weeks)
  - **Duplication:** Allows complete duplication of some card types (e.g., Classic 1K and Ultralight cards)
  - **Security Implications:** UID should not be used as a secure token

### libNFC Cloning Example
- **NXP PN533 with libNFC and “Magic” Mifare Ultralight**
  - **Dump Creation:** `nfc-mfultralight r dump.mfd`
  - **Write to Tag:** `nfc-mfultralight w source.mfd`

### Cloneable Items
- **Hotel Contactless Key Cards:** Insecure MIFARE variants
- **EMV Legacy Transactions:** Support for contactless ‘legacy’ modes
- **Android ‘Smart Unlock’ Tags:** Systems validate only the UID, which is easy to spoof

### Hotel Card Clone Demo
- **Firmware Hacking:**
  - **Stand-Alone NFC:**
    - **Capture Tags**
    - **Clone UID**
    - **Replay UID**

### Proxmark3 LF Stand-Alone
- **Default Operation Flow:** From ProxBrute whitepaper
- **Design:**
  - **ARM CPU for Independent Operation:**
    - `armsrc/appmain.c` runs after initialization
    - `SamyRun()` invoked based on `BUTTON_HELD(1000)`
  - **Functions Used:**
    - `CmdHIDdemodFSK` and related functions
    - Capture/Replay/T55x7 Clone toggle with button
    - Visual indication through LED changes

### Proxmark3 HF Stand-Alone
- **Goal:** Reproduce LF/HID functions for HF, focusing on popular Mifare card formats
- **Initial Support:** UID value only
- **Demonstration:** Insecure use of UID for authentication
- **Cloning:** To changeable (magic) Mifare Classic only
- **Future Support:** Easy addition for other tags

### Offline HF Read (Code)
- **Setup:** `iso14443a_setup(FPGA_HF_ISO14443A_READER_MOD)`
- **Select Card:** `iso14443a_select_card(uid, NULL, &cuid)`
- **Return True:** Indicates successful card selection

### Offline HF Sim (Code)
- **UID Split:** Into 2 4-byte values with valid byte order
- **Simulate Tag:** `SimulateIso14443aTag(1, uid_1st, uid_2nd, NULL)`
- **UID Simulation:** Only (data support later?)

### Offline HF Clone
- **Goal:** Set recorded UID on a new tag
- **Initial Support:** MiFare Classic
- **Command:** `hf mf csetuid`
- **Use Cases:** Systems relying on UID for authentication (e.g., Samsung NFC locks, Smartphone unlock tags)

### New Flow
- **HF Stand-Alone Demo**

### Extending AWID
- **Reader Mode**
- **Sim from IDs**
- **Clone from IDs**

### Adding PM3 Commands
- **Target:** `lf awid` Proxmark3 context
- **fskdemod:** Real-time demodulation for AWID tag clone
- **sim:** Tag emulation based on ID
- **AWID26 Code Addition:** 2015
- **Command Structure:**
  - **Commands Location:** `client/cmdlf.c` for LF commands
  - **New Commands:** Added to `CommandTable`
  - **File Creation:** `client/cmdlfawid.c` for definitions
  - **Prepare & Send UsbCommand:** `lf awid fskdemod`
  - **Logic:** `CmdAWIDdemodFSK()` on ARM (`armsrc/lfops.c`)
  - **USB Command Definition:** `CMD_AWID_DEMOD_FSK`
  - **Logic Exposure:** `cmdlfawid.c` exposes

This revised version aims to provide a clear, coherent, and professional structure for the given text.