### References

1. K. Azar, H. Kamali, H. Homayoun, and A. Sasan, "SMT Attack: Next Generation Attack on Obfuscated Circuits with Capabilities and Performance Beyond the SAT Attacks," *IACR Transactions on Cryptographic Hardware and Embedded Systems*, vol. 2019, no. 1, pp. 97–122, 2018.

2. R. Jarvis and M. McIntyre, "Split Manufacturing Method for Advanced Semiconductor Circuits," US Patent no. 7,195,931, 2007.

3. J. Baukus, L. Chow, R. Cocchi, and B. Wang, "Method and Apparatus for Camouflaging a Standard Cell Based Integrated Circuit with Micro Circuits and Post Processing," US Patent no. 20120139582, 2012.

4. J. P. Skudlarek, T. Katsioulas, and M. Chen, "A Platform Solution for Secure Supply-Chain and Chip Life-Cycle Management," *IEEE Computer*, vol. 49, no. 8, pp. 28–34, 2016.

5. S. Leef, "In Pursuit of Secure Silicon." [Online]. Available: https://rb.gy/ngjzfd. Last accessed on 09/28/2020.

6. D. P. Affairs, "DARPA Selects Teams to Increase Security of Semiconductor Supply Chain." [Online]. Available: https://www.darpa.mil/news-events/2020-05-27. Last accessed on 10/05/2020.

7. R. Chakraborty and S. Bhunia, "HARPOON: An Obfuscation-Based SoC Design Methodology for Hardware Protection," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, vol. 28, no. 10, pp. 1493–1502, 2009.

8. A. Baumgarten, A. Tyagi, and J. Zambreno, "Preventing IC Piracy Using Reconfigurable Logic Barriers," *IEEE Design & Test of Computers*, vol. 27, no. 1, pp. 66–75, 2010.

9. Rambus, "Circuit Camouflage Technology." [Online]. Available: https://rb.gy/eowsah. Last accessed on 05/04/2020.

10. Siemens, "TrustChain Security Platform." [Online]. Available: https://rb.gy/kcehg1. Last accessed on 09/28/2020.

11. R. Torrance and D. James, "The State-of-the-Art in Semiconductor Reverse Engineering," *IEEE/ACM Design Automation Conference*, pp. 333–338, 2011.

12. M. Yasin and O. Sinanoglu, "Transforming Between Logic Locking and IC Camouflage," *IEEE International Design & Test Symposium*, pp. 1–4, 2015.

13. K. Vättö, "Intel to Offer CPU Upgrades via Software for Selected Models." [Online]. Available: https://bit.ly/2Mnbn2j. Last accessed on 08/01/2018.

14. M. Zaman, A. Sengupta, D. Liu, O. Sinanoglu, Y. Makris, and J. Rajendran, "Towards Provably-Secure Performance Locking," *IEEE/ACM Design, Automation & Test in Europe*, pp. 1592–1597, 2018.

15. A. Chakraborty, Y. Xie, and A. Srivastava, "GPU Obfuscation: Attack and Defense Strategies," *IEEE/ACM Design Automation Conference*, pp. 122:1–122:6, 2018.

16. A. Chakraborty and A. Srivastava, "Hardware-Software Co-Design Based Obfuscation of Hardware Accelerators," *IEEE Computer Society Annual Symposium on VLSI*, pp. 547–552, 2019.

17. M. Yasin, A. Sengupta, B. Schafer, Y. Makris, O. Sinanoglu, and J. Rajendran, "What to Lock?: Functional and Parametric Locking," *ACM Great Lakes Symposium on VLSI*, pp. 351–356, 2017.

18. Y. Xie and A. Srivastava, "Delay Locking: Security Enhancement of Logic Locking Against IC Counterfeiting and Overproduction," *IEEE/ACM Design Automation Conference*, pp. 1–6, 2017.

19. J. Cassell, "Reports of Counterfeit Parts Quadruple Since 2009, Challenging US Defense Industry and National Security." [Online]. Available: https://bit.ly/2KWVkJh. Last accessed on 05/04/2020.

20. V. V. Rao and I. Savidis, "Protecting Analog Circuits with Parameter Biasing Obfuscation," *IEEE Latin American Test Symposium*, pp. 1–6, 2017.

21. N. G. Jayasankaran, A. S. Borbon, E. Sanchez-Sinencio, J. Hu, and J. Rajendran, "Towards Provably-Secure Analog and Mixed-Signal Locking Against Overproduction," *IEEE/ACM International Conference on Computer-Aided Design*, pp. 1–8, 2018.

22. K. Shamsi, M. Li, T. Meade, Z. Zhao, D. Z. Pan, and Y. Jin, "AppSAT: Approximately Deobfuscating Integrated Circuits," *IEEE International Symposium on Hardware Oriented Security and Trust*, pp. 95–100, 2017.

23. Y. Shen and H. Zhou, "Double DIP: Re-Evaluating Security of Logic Encryption Algorithms," *ACM Great Lakes Symposium on VLSI*, pp. 179–184, 2017.

24. M. Yasin, B. Mazumdar, O. Sinanoglu, and J. Rajendran, "Security Analysis of Anti-SAT," *IEEE Asia and South Pacific Design Automation Conference*, pp. 342–347, 2016.

25. M. Li, K. Shamsi, T. Meade, Z. Zhao, B. Yu, Y. Jin, and D. Pan, "Provably Secure Camouflaging Strategy for IC Protection," *IEEE/ACM International Conference on Computer-Aided Design*, pp. 28:1–28:8, 2016.

26. D. Sirone and P. Subramanyan, "Functional Analysis Attacks on Logic Locking," *IEEE/ACM Design, Automation & Test in Europe*, pp. 936–939, 2019.

27. P. Chakraborty, J. Cruz, and S. Bhunia, "SAIL: Machine Learning Guided Structural Analysis Attack on Hardware Obfuscation," *IEEE Asian Hardware Oriented Security and Trust Symposium*, pp. 56–61, 2018.

28. M. Yasin, B. Mazumdar, J. Rajendran, and O. Sinanoglu, "SAR-Lock: SAT Attack Resistant Logic Locking," *IEEE International Symposium on Hardware Oriented Security and Trust*, pp. 236–241, 2016.

29. Y. Xie and A. Srivastava, "Mitigating SAT Attack on Logic Locking," *International Conference on Cryptographic Hardware and Embedded Systems*, pp. 127–146, 2016.

30. A. Sengupta, M. Nabeel, N. Limaye, M. Ashraf, and O. Sinanoglu, "Truly Stripping Functionality for Logic Locking: A Fault-based Perspective," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, 2020.

31. M. Massad, S. Garg, and M. Tripunitara, "Integrated Circuit (IC) Decamouflaging: Reverse Engineering Camouflaged ICs within Minutes," *Network and Distributed System Security Symposium*, 2015.

32. C. Yu, X. Zhang, D. Liu, M. Ciesielski, and D. Holcomb, "Incremental SAT-Based Reverse Engineering of Camouflaged Logic Circuits," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, vol. 36, no. 10, pp. 1647–1659, 2017.

33. H. Wee, "On Obfuscating Point Functions," *ACM Symposium on Theory of Computing*, pp. 523–532, 2005.

34. B. Shakya, X. Xu, M. Tehranipoor, and D. Forte, "CAS-Lock: A Security-Corruptibility Trade-off Resilient Logic Locking Scheme," *IACR Transactions on Cryptographic Hardware and Embedded Systems*, pp. 175–202, 2020.

35. A. Sengupta, M. Nabeel, M. Yasin, and O. Sinanoglu, "ATPG-Based Cost-Effective, Secure Logic Locking," *IEEE VLSI Test Symposium*, pp. 1–6, 2018.

36. A. Chakraborty, N. G. Jayasankaran, Y. Liu, J. Rajendran, O. Sinanoglu, A. Srivastava, Y. Xie, M. Yasin, and M. Zuzak, "Keynote: A Disquisition on Logic Locking," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, pp. 1–1, 2019.

37. M. Yasin, B. Mazumdar, O. Sinanoglu, and J. Rajendran, "Removal Attacks on Logic Locking and Camouflaging Techniques," *IEEE Transactions on Emerging Topics in Computing*, pp. 1–1, 2018.

38. X. Xu, B. Shakya, M. M. Tehranipoor, and D. Forte, "Novel Bypass Attack and BDD-based Tradeoff Analysis Against All Known Logic Locking Attacks," *International Conference on Cryptographic Hardware and Embedded Systems*, pp. 189–210, 2017.

39. S. Bhunia and M. Tehranipoor, *Hardware Security: A Hands-on Learning Approach*. Morgan Kaufmann, 2018.

40. F. Yang, M. Tang, and O. Sinanoglu, "Stripped Functionality Logic Locking With Hamming Distance-Based Restore Unit (SFLL-hd) - Unlocked," *IEEE Transactions on Information Forensics and Security*, vol. 14, no. 10, pp. 2778–2786, 2019.

41. NYU CSAW, "Logic Locking Conquest 2019." [Online]. Available: https://rb.gy/amdgdf. Last accessed on 09/28/2020.

42. B. Olney and R. Karam, "Tunable FPGA Bitstream Obfuscation with Boolean Satisfiability Attack Countermeasure," *ACM Transactions on Design Automation of Electronic Systems*, vol. 25, no. 2, pp. 1–22, 2020.

43. Cadence, "Genus Synthesis Solution." [Online]. Available: https://rb.gy/gqbpgd. Last accessed on 09/28/2020.

44. Synopsys, "Design Compiler NXT." [Online]. Available: https://rb.gy/wgeq1m. Last accessed on 05/04/2020.

45. Synopsys, "Synplify Pro." [Online]. Available: https://rb.gy/qscv0c. Last accessed on 09/28/2020.

46. Xilinx, "Vivado." [Online]. Available: https://rb.gy/yrdbsa. Last accessed on 05/04/2020.

47. Mentor Graphics, "Precision RTL." [Online]. Available: https://rb.gy/03zuos. Last accessed on 09/28/2020.

48. R. Brayton and A. Mishchenko, "ABC: An Academic Industrial-Strength Verification Tool," *International Conference on Computer Aided Verification*, pp. 24–40, 2010.

49. J. Yiu, *The Definitive Guide to the ARM Cortex-M3*. Newnes, 2009.

50. B. Chetwynd, K. Bush, and K. Ingols, "CEP v2.0 Security Evaluation Targets." [Online]. Available: https://rb.gy/ssfjbk. Last accessed on 05/04/2020.

51. Y. Kasarabada, D. Luria, and R. Vemuri, "Trust in IoT Devices: A Logic Encryption Perspective," *IFIP International Internet of Things Conference*, pp. 123–141, 2019.

52. S. Keshavarz, C. Yu, S. Ghandali, X. Xu, and D. Holcomb, "Survey on Applications of Formal Methods in Reverse Engineering and Intellectual Property Protection," *Journal of Hardware and Systems Security*, vol. 2, no. 3, pp. 214–224, 2018.

53. Y. Xie and A. Srivastava, "Anti-SAT: Mitigating SAT Attack on Logic Locking," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, vol. 38, no. 2, pp. 199–207, 2019.

54. G. D. Micheli, *Synthesis and Optimization of Digital Circuits*. McGraw-Hill Higher Education, 1994.

55. C. Blundo, A. De Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung, "Perfectly-Secure Key Distribution for Dynamic Conferences," *Advances in Cryptology*, pp. 471–486, 1993.

56. A. Sarabi, N. Song, M. Chrzanowska-Jeske, and M. A. Perkowski, "A Comprehensive Approach to Logic Synthesis and Physical Design for Two-Dimensional Logic Arrays," *IEEE/ACM Design Automation Conference*, pp. 321–326, 1994.

57. P. Subramanyan, N. Tsiskaridze, W. Li, A. Gascón, W. Y. Tan, A. Tiwari, N. Shankar, S. A. Seshia, and S. Malik, "Reverse Engineering Digital Circuits Using Structural and Functional Analyses," *IEEE Transactions on Emerging Topics in Computing*, vol. 2, no. 1, pp. 63–80, 2013.

58. W. Li, A. Gascon, P. Subramanyan, W. Y. Tan, A. Tiwari, S. Malik, N. Shankar, and S. A. Seshia, "WordRev: Finding Word-Level Structures in a Sea of Bit-Level Gates," *IEEE International Symposium on Hardware-Oriented Security and Trust*, pp. 67–74, 2013.

59. G. D. Hachtel and F. Somenzi, *Logic Synthesis and Verification Algorithms*. Springer Science & Business Media, 2006.

60. P. Ashar, S. Devadas, and R. Newton, *Sequential Logic Synthesis*. Springer Science & Business Media, 2012.

61. A. Sengupta, B. Mazumdar, M. Yasin, and O. Sinanoglu, "Logic Locking with Provable Security Against Power Analysis Attacks," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, pp. 1–1, 2019.

62. M. El Massad, S. Garg, and M. V. Tripunitara, "Integrated Circuit (IC) Decamouflaging: Reverse Engineering Camouflaged ICs within Minutes," *Network and Distributed System Security Symposium*, pp. 1–14, 2015.

63. C. Torng, "FreePDK45 and the Nangate Open Cell Library." [Online]. Available: https://rb.gy/azbenb. Last accessed on 02/12/2021.

64. Xilinx, "Spartan-3 FPGA Family." [Online]. Available: https://rb.gy/pupygs. Last accessed on 02/12/2021.

65. S. Davidson, "Characteristics of the ITC’99 Benchmark Circuits," *IEEE International Test Synthesis Workshop*, 1999.

66. E. Barker and A. Roginsky, "Transitions: Recommendation for Transitioning the Use of Cryptographic Algorithms and Key Lengths," *NIST Special Publication*, vol. 800, p. 131A, 2011.

67. G. Ateniese, A. Kiayias, B. Magri, Y. Tselekounis, and D. Venturi, "Secure Outsourcing of Cryptographic Circuits Manufacturing," *ACM International Conference on Provable Security*, pp. 75–93, 2018.

68. C. Konstantinou, A. Keliris, and M. Maniatakos, "Privacy-Preserving Functional IP Verification Utilizing Fully Homomorphic Encryption," *IEEE/ACM Design, Automation & Test in Europe Conference & Exhibition*, pp. 333–338, 2015.

69. S. Devadas and A. R. Newton, "Exact Algorithms for Output Encoding, State Assignment, and Four-Level Boolean Minimization," *IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems*, vol. 10, no. 1, pp. 13–27, 1991.

70. J. Sweeney, M. Heule, and L. T. Pileggi, "Sensitivity Analysis of Locked Circuits," *International Conference on Logic for Programming, Artificial Intelligence and Reasoning*, pp. 483–497, 2020.

71. M. R. Garey and D. S. Johnson, *ACM Computers and Intractability*, vol. 174. Freeman San Francisco, 1979.

72. M. E. Massad, J. Zhang, S. Garg, and M. V. Tripunitara, "Logic Locking for Secure Outsourced Chip Fabrication: A New Attack and Provably Secure Defense Mechanism," arXiv preprint arXiv:1703.10187, 2017.

73. K. Shamsi, M. Li, T. Meade, Z. Zhao, D. Z. Pan, and Y. Jin, "Cyclic Obfuscation for Creating SAT-Unresolvable Circuits," *ACM Great Lakes Symposium on VLSI*, pp. 173–178, 2017.

74. A. Rezaei, Y. Shen, S. Kong, J. Gu, and H. Zhou, "Cyclic Locking and Memristor-Based Obfuscation Against CycSAT and Inside Foundry Attacks," *IEEE/ACM Design, Automation & Test in Europe*, pp. 85–90, 2018.

75. M. Fyrbiak, S. Wallat, J. Déchelotte, N. Albartus, S. Böcker, R. Tessier, and C. Paar, "On the Difficulty of FSM-Based Hardware Obfuscation," *IACR Transactions on Cryptographic Hardware and Embedded Systems*, pp. 293–330, 2018.

76. K. Shamsi, M. Li, D. Z. Pan, and Y. Jin, "KC2: Key-Condition Crunching for Fast Sequential Circuit Deobfuscation," *IEEE/ACM Design, Automation & Test in Europe*, pp. 534–539, 2019.

77. S. Koteshwara, C. H. Kim, and K. K. Parhi, "Key-Based Dynamic Functional Obfuscation of Integrated Circuits Using Sequentially Triggered Mode-Based Design," *IEEE Transactions on Information Forensics and Security*, vol. 13, no. 1, pp. 79–93, 2018.

78. Z. Kohavi and N. K. Jha, *Switching and Finite Automata Theory*. Cambridge University Press, 2009.

79. R. Karmakar, H. Kumar, and S. Chattopadhyay, "Efficient Key-Gate Placement and Dynamic Scan Obfuscation Towards Robust Logic Encryption," *IEEE Transactions on Emerging Topics in Computing*, 2019.

80. N. Limaye, A. Sengupta, M. Nabeel, and O. Sinanoglu, "Is Robust Design-for-Security Robust Enough? Attack on Locked Circuits with Restricted Scan Chain Access," *IEEE/ACM International Conference on Computer-Aided Design*, pp. 1–8, 2019.

81. M. El Massad, S. Garg, and M. Tripunitara, "Reverse Engineering Camouflaged Sequential Circuits Without Scan Access," *IEEE/ACM International Conference on Computer-Aided Design*, pp. 33–40, 2017.

82. J. Chen, D. Hermelin, and M. Sorge, "On Computing Centroids According to the p-Norms of Hamming Distance Vectors," arXiv preprint arXiv:1807.06469, 2018.

83. D. Q. Naiman and H. P. Wynn, "Inclusion-Exclusion-Bonferroni Identities and Inequalities for Discrete Tube-Like Problems via Euler Characteristics," *IMSTAT Annals of Statistics*, vol. 20, no. 1, pp. 43–76, 1992.

84. P. Kocher, J. Jaffe, B. Jun, and P. Rohatgi, "Introduction to Differential Power Analysis," *Journal of Cryptographic Engineering*, vol. 1, no. 1, pp. 5–27, 2011.

85. S. Tajik, H. Lohrke, J.-P. Seifert, and C. Boit, "On the Power of Optical Contactless Probing: Attacking Bitstream Encryption of FPGAs," *ACM SIGSAC Conference on Computer and Communications Security*, pp. 1661–1674, 2017.

86. M. Rahman, S. Tajik, M. Rahman, M. Tehranipoor, and N. Asadizanjani, "The Key is Left Under the Mat: On the Inappropriate Security Assumption of Logic Locking Schemes," tech. rep., Cryptology ePrint Archive, Report 2019/719, 2019. [Online]. Available: https://eprint.iacr.org/2019/719. Last accessed on 2019.

87. H. Zhou, R. Jiang, and S. Kong, "CycSAT: SAT-Based Attack on Cyclic Logic Encryptions," *IEEE/ACM International Conference on Computer-Aided Design*, pp. 49–56, 2017.

88. S. Engels, M. Hoffmann, and C. Paar, "The End of Logic Locking? A Critical View on the Security of Logic Locking," *IACR Cryptology ePrint Archive*, vol. 2019, p. 796, 2019.

### Algorithm 2: SPI Attack with Divide and Conquer

**Input:**
- `Locked cone Clock`
- `Oracle O`
- `Timeout T`

**Output:**
- `Protected input pattern candidates (PIPs): PIPlist`

1. `Ccp` ← `generate_corrupted_circuit(Clock)`
2. `Nodes_sorted` ← `sort_by_protecting_inputs(Ccp)`
3. `PIPscand` ← `?`
4. **for** each `node` in `Nodes_sorted`:
    1. `Cnode` ← `generate_subcircuit(Ccp, node)`
    2. `PITnode` ← `extract_PIT(Cnode, T)`
    3. `PI1` ← `get_fully_specified_PI(PITnode)`
    4. `PIPverified` ← `verify(PI1, Ccp, O)`
    5. **if** `PIPverified ≠ ?`:
        1. **return** `PIPverified`
    6. `PI2` ← `find_and_parse_split_PIs(PITnode)`
    7. `PIPverified` ← `verify(PI2, Ccp, O)`
    8. **if** `PIPverified ≠ ?`:
        1. **return** `PIPverified`
    9. `PIPscand` ← `PIPscand ∪ PI1 ∪ PI2`
5. `PIPsgood` ← `PIPs_with_most_specified_bits(PIPscand)`
6. **for** each `pip` in `PIPsgood`:
    1. `pip_full` ← `brute_force(pip, Clock, O)`
    2. `PIPlist` ← `PIPlist ∪ {pip_full}`
7. **return** `verify(PIPlist, Ccp, O)`

**Algorithm Description:**

Algorithm 2 describes a scalable version of the SPI attack that employs a divide-and-conquer strategy. The inputs to the algorithm are a locked cone `Clock`, an oracle `O`, and a timeout parameter `T`.

1. The attack begins by extracting the corrupted circuit `Ccp` by removing the correcting unit.
2. The nodes in `Ccp` are sorted in descending order by the number of protecting inputs. Protecting inputs are the primary inputs feeding the correcting unit.
3. For each sorted node, a sub-circuit is constructed, and an attempt is made to extract its PIT (Primary Input Table).
4. If the PIT can be extracted within the time limit `T`, the PIT is parsed for candidate PIPs using two methods:
   - Fully specified PIPs
   - Split PIs
5. If the attacker is fortunate enough, the PIT may be computed for a sub-circuit with all protecting inputs, and the recovered PIP may be fully specified (no don't care bits). In such a case, the PIP can be verified and returned.
6. The algorithm then identifies the best PIPs (those with the most specified bits) and uses brute force to complete them.
7. Finally, the algorithm verifies the list of PIPs and returns the verified list.